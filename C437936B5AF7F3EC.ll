; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/MiBench/consumer-lame/dct64_i386.c'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/MiBench/consumer-lame/dct64_i386.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@pnts = external local_unnamed_addr global [5 x ptr], align 16

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @dct64(ptr nocapture noundef writeonly %0, ptr nocapture noundef writeonly %1, ptr nocapture noundef readonly %2) local_unnamed_addr #0 {
  %4 = load ptr, ptr @pnts, align 16, !tbaa !5
  %5 = load double, ptr %2, align 8, !tbaa !9
  %6 = getelementptr inbounds double, ptr %2, i64 31
  %7 = load double, ptr %6, align 8, !tbaa !9
  %8 = fadd double %5, %7
  %9 = fsub double %5, %7
  %10 = load double, ptr %4, align 8, !tbaa !9
  %11 = fmul double %9, %10
  %12 = getelementptr inbounds double, ptr %2, i64 1
  %13 = load double, ptr %12, align 8, !tbaa !9
  %14 = getelementptr inbounds double, ptr %2, i64 30
  %15 = load double, ptr %14, align 8, !tbaa !9
  %16 = fadd double %13, %15
  %17 = fsub double %13, %15
  %18 = getelementptr inbounds double, ptr %4, i64 1
  %19 = load double, ptr %18, align 8, !tbaa !9
  %20 = fmul double %17, %19
  %21 = getelementptr inbounds double, ptr %2, i64 2
  %22 = load double, ptr %21, align 8, !tbaa !9
  %23 = getelementptr inbounds double, ptr %2, i64 29
  %24 = load double, ptr %23, align 8, !tbaa !9
  %25 = fadd double %22, %24
  %26 = fsub double %22, %24
  %27 = getelementptr inbounds double, ptr %4, i64 2
  %28 = load double, ptr %27, align 8, !tbaa !9
  %29 = fmul double %26, %28
  %30 = getelementptr inbounds double, ptr %2, i64 3
  %31 = load double, ptr %30, align 8, !tbaa !9
  %32 = getelementptr inbounds double, ptr %2, i64 28
  %33 = load double, ptr %32, align 8, !tbaa !9
  %34 = fadd double %31, %33
  %35 = fsub double %31, %33
  %36 = getelementptr inbounds double, ptr %4, i64 3
  %37 = load double, ptr %36, align 8, !tbaa !9
  %38 = fmul double %35, %37
  %39 = getelementptr inbounds double, ptr %2, i64 4
  %40 = load double, ptr %39, align 8, !tbaa !9
  %41 = getelementptr inbounds double, ptr %2, i64 27
  %42 = load double, ptr %41, align 8, !tbaa !9
  %43 = fadd double %40, %42
  %44 = fsub double %40, %42
  %45 = getelementptr inbounds double, ptr %4, i64 4
  %46 = load double, ptr %45, align 8, !tbaa !9
  %47 = fmul double %44, %46
  %48 = getelementptr inbounds double, ptr %2, i64 5
  %49 = load double, ptr %48, align 8, !tbaa !9
  %50 = getelementptr inbounds double, ptr %2, i64 26
  %51 = load double, ptr %50, align 8, !tbaa !9
  %52 = fadd double %49, %51
  %53 = fsub double %49, %51
  %54 = getelementptr inbounds double, ptr %4, i64 5
  %55 = load double, ptr %54, align 8, !tbaa !9
  %56 = fmul double %53, %55
  %57 = getelementptr inbounds double, ptr %2, i64 6
  %58 = load double, ptr %57, align 8, !tbaa !9
  %59 = getelementptr inbounds double, ptr %2, i64 25
  %60 = load double, ptr %59, align 8, !tbaa !9
  %61 = fadd double %58, %60
  %62 = fsub double %58, %60
  %63 = getelementptr inbounds double, ptr %4, i64 6
  %64 = load double, ptr %63, align 8, !tbaa !9
  %65 = fmul double %62, %64
  %66 = getelementptr inbounds double, ptr %2, i64 7
  %67 = load double, ptr %66, align 8, !tbaa !9
  %68 = getelementptr inbounds double, ptr %2, i64 24
  %69 = load double, ptr %68, align 8, !tbaa !9
  %70 = fadd double %67, %69
  %71 = fsub double %67, %69
  %72 = getelementptr inbounds double, ptr %4, i64 7
  %73 = load double, ptr %72, align 8, !tbaa !9
  %74 = fmul double %71, %73
  %75 = getelementptr inbounds double, ptr %2, i64 8
  %76 = load double, ptr %75, align 8, !tbaa !9
  %77 = getelementptr inbounds double, ptr %2, i64 23
  %78 = load double, ptr %77, align 8, !tbaa !9
  %79 = fadd double %76, %78
  %80 = fsub double %76, %78
  %81 = getelementptr inbounds double, ptr %4, i64 8
  %82 = load double, ptr %81, align 8, !tbaa !9
  %83 = fmul double %80, %82
  %84 = getelementptr inbounds double, ptr %2, i64 9
  %85 = load double, ptr %84, align 8, !tbaa !9
  %86 = getelementptr inbounds double, ptr %2, i64 22
  %87 = load double, ptr %86, align 8, !tbaa !9
  %88 = fadd double %85, %87
  %89 = fsub double %85, %87
  %90 = getelementptr inbounds double, ptr %4, i64 9
  %91 = load double, ptr %90, align 8, !tbaa !9
  %92 = fmul double %89, %91
  %93 = getelementptr inbounds double, ptr %2, i64 10
  %94 = load double, ptr %93, align 8, !tbaa !9
  %95 = getelementptr inbounds double, ptr %2, i64 21
  %96 = load double, ptr %95, align 8, !tbaa !9
  %97 = fadd double %94, %96
  %98 = fsub double %94, %96
  %99 = getelementptr inbounds double, ptr %4, i64 10
  %100 = load double, ptr %99, align 8, !tbaa !9
  %101 = fmul double %98, %100
  %102 = getelementptr inbounds double, ptr %2, i64 11
  %103 = load double, ptr %102, align 8, !tbaa !9
  %104 = getelementptr inbounds double, ptr %2, i64 20
  %105 = load double, ptr %104, align 8, !tbaa !9
  %106 = fadd double %103, %105
  %107 = fsub double %103, %105
  %108 = getelementptr inbounds double, ptr %4, i64 11
  %109 = load double, ptr %108, align 8, !tbaa !9
  %110 = fmul double %107, %109
  %111 = getelementptr inbounds double, ptr %2, i64 12
  %112 = load double, ptr %111, align 8, !tbaa !9
  %113 = getelementptr inbounds double, ptr %2, i64 19
  %114 = load double, ptr %113, align 8, !tbaa !9
  %115 = fadd double %112, %114
  %116 = fsub double %112, %114
  %117 = getelementptr inbounds double, ptr %4, i64 12
  %118 = load double, ptr %117, align 8, !tbaa !9
  %119 = fmul double %116, %118
  %120 = getelementptr inbounds double, ptr %2, i64 13
  %121 = load double, ptr %120, align 8, !tbaa !9
  %122 = getelementptr inbounds double, ptr %2, i64 18
  %123 = load double, ptr %122, align 8, !tbaa !9
  %124 = fadd double %121, %123
  %125 = fsub double %121, %123
  %126 = getelementptr inbounds double, ptr %4, i64 13
  %127 = load double, ptr %126, align 8, !tbaa !9
  %128 = fmul double %125, %127
  %129 = getelementptr inbounds double, ptr %2, i64 14
  %130 = load double, ptr %129, align 8, !tbaa !9
  %131 = getelementptr inbounds double, ptr %2, i64 17
  %132 = load double, ptr %131, align 8, !tbaa !9
  %133 = fadd double %130, %132
  %134 = fsub double %130, %132
  %135 = getelementptr inbounds double, ptr %4, i64 14
  %136 = load double, ptr %135, align 8, !tbaa !9
  %137 = fmul double %134, %136
  %138 = getelementptr inbounds double, ptr %2, i64 15
  %139 = load double, ptr %138, align 8, !tbaa !9
  %140 = getelementptr inbounds double, ptr %2, i64 16
  %141 = load double, ptr %140, align 8, !tbaa !9
  %142 = fadd double %139, %141
  %143 = fsub double %139, %141
  %144 = getelementptr inbounds double, ptr %4, i64 15
  %145 = load double, ptr %144, align 8, !tbaa !9
  %146 = fmul double %143, %145
  %147 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @pnts, i64 0, i64 1), align 8, !tbaa !5
  %148 = fadd double %8, %142
  %149 = fsub double %8, %142
  %150 = load double, ptr %147, align 8, !tbaa !9
  %151 = fmul double %149, %150
  %152 = fadd double %16, %133
  %153 = fsub double %16, %133
  %154 = getelementptr inbounds double, ptr %147, i64 1
  %155 = load double, ptr %154, align 8, !tbaa !9
  %156 = fmul double %153, %155
  %157 = fadd double %25, %124
  %158 = fsub double %25, %124
  %159 = getelementptr inbounds double, ptr %147, i64 2
  %160 = load double, ptr %159, align 8, !tbaa !9
  %161 = fmul double %158, %160
  %162 = fadd double %34, %115
  %163 = fsub double %34, %115
  %164 = getelementptr inbounds double, ptr %147, i64 3
  %165 = load double, ptr %164, align 8, !tbaa !9
  %166 = fmul double %163, %165
  %167 = fadd double %43, %106
  %168 = fsub double %43, %106
  %169 = getelementptr inbounds double, ptr %147, i64 4
  %170 = load double, ptr %169, align 8, !tbaa !9
  %171 = fmul double %168, %170
  %172 = fadd double %52, %97
  %173 = fsub double %52, %97
  %174 = getelementptr inbounds double, ptr %147, i64 5
  %175 = load double, ptr %174, align 8, !tbaa !9
  %176 = fmul double %173, %175
  %177 = fadd double %61, %88
  %178 = fsub double %61, %88
  %179 = getelementptr inbounds double, ptr %147, i64 6
  %180 = load double, ptr %179, align 8, !tbaa !9
  %181 = fmul double %178, %180
  %182 = fadd double %70, %79
  %183 = fsub double %70, %79
  %184 = getelementptr inbounds double, ptr %147, i64 7
  %185 = load double, ptr %184, align 8, !tbaa !9
  %186 = fmul double %183, %185
  %187 = fadd double %11, %146
  %188 = fsub double %11, %146
  %189 = fmul double %188, %150
  %190 = fadd double %20, %137
  %191 = fsub double %20, %137
  %192 = fmul double %191, %155
  %193 = fadd double %29, %128
  %194 = fsub double %29, %128
  %195 = fmul double %194, %160
  %196 = fadd double %38, %119
  %197 = fsub double %38, %119
  %198 = fmul double %197, %165
  %199 = fadd double %47, %110
  %200 = fsub double %47, %110
  %201 = fmul double %200, %170
  %202 = fadd double %56, %101
  %203 = fsub double %56, %101
  %204 = fmul double %203, %175
  %205 = fadd double %65, %92
  %206 = fsub double %65, %92
  %207 = fmul double %206, %180
  %208 = fadd double %74, %83
  %209 = fsub double %74, %83
  %210 = fmul double %209, %185
  %211 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @pnts, i64 0, i64 2), align 16, !tbaa !5
  %212 = fadd double %182, %148
  %213 = fsub double %148, %182
  %214 = load double, ptr %211, align 8, !tbaa !9
  %215 = fmul double %213, %214
  %216 = fadd double %177, %152
  %217 = fsub double %152, %177
  %218 = getelementptr inbounds double, ptr %211, i64 1
  %219 = load double, ptr %218, align 8, !tbaa !9
  %220 = fmul double %217, %219
  %221 = fadd double %172, %157
  %222 = fsub double %157, %172
  %223 = getelementptr inbounds double, ptr %211, i64 2
  %224 = load double, ptr %223, align 8, !tbaa !9
  %225 = fmul double %222, %224
  %226 = fadd double %167, %162
  %227 = fsub double %162, %167
  %228 = getelementptr inbounds double, ptr %211, i64 3
  %229 = load double, ptr %228, align 8, !tbaa !9
  %230 = fmul double %227, %229
  %231 = fadd double %151, %186
  %232 = fsub double %151, %186
  %233 = fmul double %232, %214
  %234 = fadd double %156, %181
  %235 = fsub double %156, %181
  %236 = fmul double %235, %219
  %237 = fadd double %161, %176
  %238 = fsub double %161, %176
  %239 = fmul double %238, %224
  %240 = fadd double %166, %171
  %241 = fsub double %166, %171
  %242 = fmul double %241, %229
  %243 = fadd double %208, %187
  %244 = fsub double %187, %208
  %245 = fmul double %244, %214
  %246 = fadd double %205, %190
  %247 = fsub double %190, %205
  %248 = fmul double %247, %219
  %249 = fadd double %202, %193
  %250 = fsub double %193, %202
  %251 = fmul double %250, %224
  %252 = fadd double %199, %196
  %253 = fsub double %196, %199
  %254 = fmul double %253, %229
  %255 = fadd double %189, %210
  %256 = fsub double %189, %210
  %257 = fmul double %256, %214
  %258 = fadd double %192, %207
  %259 = fsub double %192, %207
  %260 = fmul double %259, %219
  %261 = fadd double %195, %204
  %262 = fsub double %195, %204
  %263 = fmul double %262, %224
  %264 = fadd double %198, %201
  %265 = fsub double %198, %201
  %266 = fmul double %265, %229
  %267 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @pnts, i64 0, i64 3), align 8, !tbaa !5
  %268 = load double, ptr %267, align 8, !tbaa !9
  %269 = getelementptr inbounds double, ptr %267, i64 1
  %270 = load double, ptr %269, align 8, !tbaa !9
  %271 = fadd double %226, %212
  %272 = fsub double %212, %226
  %273 = fmul double %272, %268
  %274 = fadd double %221, %216
  %275 = fsub double %216, %221
  %276 = fmul double %275, %270
  %277 = fadd double %215, %230
  %278 = fsub double %215, %230
  %279 = fmul double %268, %278
  %280 = fadd double %220, %225
  %281 = fsub double %220, %225
  %282 = fmul double %281, %270
  %283 = fadd double %240, %231
  %284 = fsub double %231, %240
  %285 = fmul double %284, %268
  %286 = fadd double %237, %234
  %287 = fsub double %234, %237
  %288 = fmul double %287, %270
  %289 = fadd double %233, %242
  %290 = fsub double %233, %242
  %291 = fmul double %268, %290
  %292 = fadd double %236, %239
  %293 = fsub double %236, %239
  %294 = fmul double %293, %270
  %295 = fadd double %252, %243
  %296 = fsub double %243, %252
  %297 = fmul double %296, %268
  %298 = fadd double %249, %246
  %299 = fsub double %246, %249
  %300 = fmul double %299, %270
  %301 = fadd double %245, %254
  %302 = fsub double %245, %254
  %303 = fmul double %268, %302
  %304 = fadd double %248, %251
  %305 = fsub double %248, %251
  %306 = fmul double %305, %270
  %307 = fadd double %264, %255
  %308 = fsub double %255, %264
  %309 = fmul double %308, %268
  %310 = fadd double %261, %258
  %311 = fsub double %258, %261
  %312 = fmul double %311, %270
  %313 = fadd double %257, %266
  %314 = fsub double %257, %266
  %315 = fmul double %268, %314
  %316 = fadd double %260, %263
  %317 = fsub double %260, %263
  %318 = fmul double %317, %270
  %319 = load ptr, ptr getelementptr inbounds ([5 x ptr], ptr @pnts, i64 0, i64 4), align 16, !tbaa !5
  %320 = load double, ptr %319, align 8, !tbaa !9
  %321 = fadd double %274, %271
  %322 = fsub double %271, %274
  %323 = fmul double %322, %320
  %324 = fadd double %273, %276
  %325 = fsub double %273, %276
  %326 = fmul double %320, %325
  %327 = fadd double %324, %326
  %328 = fadd double %280, %277
  %329 = fsub double %277, %280
  %330 = fmul double %329, %320
  %331 = fadd double %279, %282
  %332 = fsub double %279, %282
  %333 = fmul double %320, %332
  %334 = fadd double %331, %333
  %335 = fadd double %328, %334
  %336 = fadd double %330, %334
  %337 = fadd double %330, %333
  %338 = fadd double %286, %283
  %339 = fsub double %283, %286
  %340 = fmul double %339, %320
  %341 = fadd double %285, %288
  %342 = fsub double %285, %288
  %343 = fmul double %320, %342
  %344 = fadd double %341, %343
  %345 = fadd double %292, %289
  %346 = fsub double %289, %292
  %347 = fmul double %346, %320
  %348 = fadd double %291, %294
  %349 = fsub double %291, %294
  %350 = fmul double %320, %349
  %351 = fadd double %348, %350
  %352 = fadd double %345, %351
  %353 = fadd double %347, %351
  %354 = fadd double %347, %350
  %355 = fadd double %298, %295
  %356 = fsub double %295, %298
  %357 = fmul double %356, %320
  %358 = fadd double %297, %300
  %359 = fsub double %297, %300
  %360 = fmul double %320, %359
  %361 = fadd double %358, %360
  %362 = fadd double %304, %301
  %363 = fsub double %301, %304
  %364 = fmul double %363, %320
  %365 = fadd double %303, %306
  %366 = fsub double %303, %306
  %367 = fmul double %320, %366
  %368 = fadd double %365, %367
  %369 = fadd double %362, %368
  %370 = fadd double %364, %368
  %371 = fadd double %364, %367
  %372 = fadd double %310, %307
  %373 = fsub double %307, %310
  %374 = fmul double %373, %320
  %375 = fadd double %309, %312
  %376 = fsub double %309, %312
  %377 = fmul double %320, %376
  %378 = fadd double %375, %377
  %379 = fadd double %316, %313
  %380 = fsub double %313, %316
  %381 = fmul double %380, %320
  %382 = fadd double %315, %318
  %383 = fsub double %315, %318
  %384 = fmul double %320, %383
  %385 = fadd double %382, %384
  %386 = fadd double %379, %385
  %387 = fadd double %381, %385
  %388 = fadd double %381, %384
  %389 = getelementptr inbounds double, ptr %0, i64 256
  store double %321, ptr %389, align 8, !tbaa !9
  %390 = getelementptr inbounds double, ptr %0, i64 192
  store double %335, ptr %390, align 8, !tbaa !9
  %391 = getelementptr inbounds double, ptr %0, i64 128
  store double %327, ptr %391, align 8, !tbaa !9
  %392 = getelementptr inbounds double, ptr %0, i64 64
  store double %336, ptr %392, align 8, !tbaa !9
  store double %323, ptr %0, align 8, !tbaa !9
  store double %323, ptr %1, align 8, !tbaa !9
  %393 = getelementptr inbounds double, ptr %1, i64 64
  store double %337, ptr %393, align 8, !tbaa !9
  %394 = getelementptr inbounds double, ptr %1, i64 128
  store double %326, ptr %394, align 8, !tbaa !9
  %395 = getelementptr inbounds double, ptr %1, i64 192
  store double %333, ptr %395, align 8, !tbaa !9
  %396 = fadd double %338, %352
  %397 = getelementptr inbounds double, ptr %0, i64 224
  store double %396, ptr %397, align 8, !tbaa !9
  %398 = fadd double %344, %352
  %399 = getelementptr inbounds double, ptr %0, i64 160
  store double %398, ptr %399, align 8, !tbaa !9
  %400 = fadd double %344, %353
  %401 = getelementptr inbounds double, ptr %0, i64 96
  store double %400, ptr %401, align 8, !tbaa !9
  %402 = fadd double %340, %353
  %403 = getelementptr inbounds double, ptr %0, i64 32
  store double %402, ptr %403, align 8, !tbaa !9
  %404 = fadd double %340, %354
  %405 = getelementptr inbounds double, ptr %1, i64 32
  store double %404, ptr %405, align 8, !tbaa !9
  %406 = fadd double %343, %354
  %407 = getelementptr inbounds double, ptr %1, i64 96
  store double %406, ptr %407, align 8, !tbaa !9
  %408 = fadd double %350, %343
  %409 = getelementptr inbounds double, ptr %1, i64 160
  store double %408, ptr %409, align 8, !tbaa !9
  %410 = getelementptr inbounds double, ptr %1, i64 224
  store double %350, ptr %410, align 8, !tbaa !9
  %411 = fadd double %372, %386
  %412 = fadd double %355, %411
  %413 = getelementptr inbounds double, ptr %0, i64 240
  store double %412, ptr %413, align 8, !tbaa !9
  %414 = fadd double %369, %411
  %415 = getelementptr inbounds double, ptr %0, i64 208
  store double %414, ptr %415, align 8, !tbaa !9
  %416 = fadd double %378, %386
  %417 = fadd double %369, %416
  %418 = getelementptr inbounds double, ptr %0, i64 176
  store double %417, ptr %418, align 8, !tbaa !9
  %419 = fadd double %361, %416
  %420 = getelementptr inbounds double, ptr %0, i64 144
  store double %419, ptr %420, align 8, !tbaa !9
  %421 = fadd double %378, %387
  %422 = fadd double %361, %421
  %423 = getelementptr inbounds double, ptr %0, i64 112
  store double %422, ptr %423, align 8, !tbaa !9
  %424 = fadd double %370, %421
  %425 = getelementptr inbounds double, ptr %0, i64 80
  store double %424, ptr %425, align 8, !tbaa !9
  %426 = fadd double %374, %387
  %427 = fadd double %370, %426
  %428 = getelementptr inbounds double, ptr %0, i64 48
  store double %427, ptr %428, align 8, !tbaa !9
  %429 = fadd double %357, %426
  %430 = getelementptr inbounds double, ptr %0, i64 16
  store double %429, ptr %430, align 8, !tbaa !9
  %431 = fadd double %374, %388
  %432 = fadd double %357, %431
  %433 = getelementptr inbounds double, ptr %1, i64 16
  store double %432, ptr %433, align 8, !tbaa !9
  %434 = fadd double %371, %431
  %435 = getelementptr inbounds double, ptr %1, i64 48
  store double %434, ptr %435, align 8, !tbaa !9
  %436 = fadd double %377, %388
  %437 = fadd double %371, %436
  %438 = getelementptr inbounds double, ptr %1, i64 80
  store double %437, ptr %438, align 8, !tbaa !9
  %439 = fadd double %360, %436
  %440 = getelementptr inbounds double, ptr %1, i64 112
  store double %439, ptr %440, align 8, !tbaa !9
  %441 = fadd double %384, %377
  %442 = fadd double %360, %441
  %443 = getelementptr inbounds double, ptr %1, i64 144
  store double %442, ptr %443, align 8, !tbaa !9
  %444 = fadd double %367, %441
  %445 = getelementptr inbounds double, ptr %1, i64 176
  store double %444, ptr %445, align 8, !tbaa !9
  %446 = fadd double %367, %384
  %447 = getelementptr inbounds double, ptr %1, i64 208
  store double %446, ptr %447, align 8, !tbaa !9
  %448 = getelementptr inbounds double, ptr %1, i64 240
  store double %384, ptr %448, align 8, !tbaa !9
  ret void
}

attributes #0 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!10, !10, i64 0}
!10 = !{!"double", !7, i64 0}
