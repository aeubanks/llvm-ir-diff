; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/VersaBench/ecbdes/des_enc.c'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/VersaBench/ecbdes/des_enc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@des_SPtrans = external local_unnamed_addr constant [8 x [64 x i64]], align 16

; Function Attrs: nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable
define dso_local void @des_encrypt(ptr nocapture noundef %data, ptr nocapture noundef readonly %ks, i32 noundef %encrypt) local_unnamed_addr #0 {
entry:
  %0 = load i64, ptr %data, align 8, !tbaa !5
  %arrayidx1 = getelementptr inbounds i64, ptr %data, i64 1
  %1 = load i64, ptr %arrayidx1, align 8, !tbaa !5
  %shr = lshr i64 %1, 4
  %xor = xor i64 %shr, %0
  %and = and i64 %xor, 252645135
  %xor2 = xor i64 %and, %0
  %shl = shl nuw nsw i64 %and, 4
  %xor3 = xor i64 %shl, %1
  %shr4 = lshr i64 %xor2, 16
  %xor5 = xor i64 %shr4, %xor3
  %and6 = and i64 %xor5, 65535
  %xor7 = xor i64 %and6, %xor3
  %shl8 = shl nuw nsw i64 %and6, 16
  %xor9 = xor i64 %shl8, %xor2
  %shr10 = lshr i64 %xor7, 2
  %xor11 = xor i64 %shr10, %xor9
  %and12 = and i64 %xor11, 858993459
  %xor13 = xor i64 %and12, %xor9
  %shl14 = shl nuw nsw i64 %and12, 2
  %xor15 = xor i64 %shl14, %xor7
  %shr16 = lshr i64 %xor13, 8
  %xor17 = xor i64 %shr16, %xor15
  %and18 = and i64 %xor17, 16711935
  %xor19 = xor i64 %and18, %xor15
  %shl20 = shl nuw nsw i64 %and18, 8
  %xor21 = xor i64 %shl20, %xor13
  %shr22 = lshr i64 %xor19, 1
  %xor23 = xor i64 %shr22, %xor21
  %and24 = and i64 %xor23, 1431655765
  %xor25 = xor i64 %and24, %xor21
  %shl26 = shl nuw nsw i64 %and24, 1
  %xor27 = xor i64 %shl26, %xor19
  %shr28 = lshr i64 %xor25, 29
  %shl29 = shl i64 %xor25, 3
  %add = add i64 %shr28, %shl29
  %and30 = and i64 %add, 4294967295
  %shr31 = lshr i64 %xor27, 29
  %shl32 = shl i64 %xor27, 3
  %add33 = add i64 %shr31, %shl32
  %and34 = and i64 %add33, 4294967295
  %tobool.not = icmp eq i32 %encrypt, 0
  br i1 %tobool.not, label %for.body213, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %l.0641 = phi i64 [ %xor165, %for.body ], [ %and34, %entry ]
  %r.0640 = phi i64 [ %xor209, %for.body ], [ %and30, %entry ]
  %arrayidx36 = getelementptr inbounds i64, ptr %ks, i64 %indvars.iv
  %2 = load i64, ptr %arrayidx36, align 8, !tbaa !5
  %xor37 = xor i64 %2, %r.0640
  %3 = or i64 %indvars.iv, 1
  %arrayidx41 = getelementptr inbounds i64, ptr %ks, i64 %3
  %4 = load i64, ptr %arrayidx41, align 8, !tbaa !5
  %xor42 = xor i64 %4, %r.0640
  %shr43 = lshr i64 %xor42, 4
  %shl44 = shl i64 %xor42, 28
  %add45 = add i64 %shr43, %shl44
  %shr46 = lshr i64 %xor37, 2
  %and47 = and i64 %shr46, 63
  %arrayidx48 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %and47
  %5 = load i64, ptr %arrayidx48, align 8, !tbaa !5
  %shr49 = lshr i64 %xor37, 10
  %and50 = and i64 %shr49, 63
  %arrayidx51 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %and50
  %6 = load i64, ptr %arrayidx51, align 8, !tbaa !5
  %shr53 = lshr i64 %xor37, 18
  %and54 = and i64 %shr53, 63
  %arrayidx55 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %and54
  %7 = load i64, ptr %arrayidx55, align 8, !tbaa !5
  %shr57 = lshr i64 %xor37, 26
  %and58 = and i64 %shr57, 63
  %arrayidx59 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %and58
  %8 = load i64, ptr %arrayidx59, align 8, !tbaa !5
  %shr61 = lshr i64 %xor42, 6
  %and62 = and i64 %shr61, 63
  %arrayidx63 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %and62
  %9 = load i64, ptr %arrayidx63, align 8, !tbaa !5
  %shr65 = lshr i64 %xor42, 14
  %and66 = and i64 %shr65, 63
  %arrayidx67 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %and66
  %10 = load i64, ptr %arrayidx67, align 8, !tbaa !5
  %shr69 = lshr i64 %xor42, 22
  %and70 = and i64 %shr69, 63
  %arrayidx71 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %and70
  %11 = load i64, ptr %arrayidx71, align 8, !tbaa !5
  %shr73 = lshr i64 %add45, 26
  %and74 = and i64 %shr73, 63
  %arrayidx75 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %and74
  %12 = load i64, ptr %arrayidx75, align 8, !tbaa !5
  %xor52 = xor i64 %5, %l.0641
  %xor56 = xor i64 %xor52, %6
  %xor60 = xor i64 %xor56, %7
  %xor64 = xor i64 %xor60, %8
  %xor68 = xor i64 %xor64, %9
  %xor72 = xor i64 %xor68, %10
  %xor76 = xor i64 %xor72, %11
  %xor77 = xor i64 %xor76, %12
  %13 = or i64 %indvars.iv, 2
  %arrayidx80 = getelementptr inbounds i64, ptr %ks, i64 %13
  %14 = load i64, ptr %arrayidx80, align 8, !tbaa !5
  %xor81 = xor i64 %xor77, %14
  %15 = or i64 %indvars.iv, 3
  %arrayidx85 = getelementptr inbounds i64, ptr %ks, i64 %15
  %16 = load i64, ptr %arrayidx85, align 8, !tbaa !5
  %xor86 = xor i64 %xor77, %16
  %shr87 = lshr i64 %xor86, 4
  %shl88 = shl i64 %xor86, 28
  %add89 = add i64 %shr87, %shl88
  %shr90 = lshr i64 %xor81, 2
  %and91 = and i64 %shr90, 63
  %arrayidx92 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %and91
  %17 = load i64, ptr %arrayidx92, align 8, !tbaa !5
  %shr93 = lshr i64 %xor81, 10
  %and94 = and i64 %shr93, 63
  %arrayidx95 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %and94
  %18 = load i64, ptr %arrayidx95, align 8, !tbaa !5
  %shr97 = lshr i64 %xor81, 18
  %and98 = and i64 %shr97, 63
  %arrayidx99 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %and98
  %19 = load i64, ptr %arrayidx99, align 8, !tbaa !5
  %shr101 = lshr i64 %xor81, 26
  %and102 = and i64 %shr101, 63
  %arrayidx103 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %and102
  %20 = load i64, ptr %arrayidx103, align 8, !tbaa !5
  %shr105 = lshr i64 %xor86, 6
  %and106 = and i64 %shr105, 63
  %arrayidx107 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %and106
  %21 = load i64, ptr %arrayidx107, align 8, !tbaa !5
  %shr109 = lshr i64 %xor86, 14
  %and110 = and i64 %shr109, 63
  %arrayidx111 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %and110
  %22 = load i64, ptr %arrayidx111, align 8, !tbaa !5
  %shr113 = lshr i64 %xor86, 22
  %and114 = and i64 %shr113, 63
  %arrayidx115 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %and114
  %23 = load i64, ptr %arrayidx115, align 8, !tbaa !5
  %shr117 = lshr i64 %add89, 26
  %and118 = and i64 %shr117, 63
  %arrayidx119 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %and118
  %24 = load i64, ptr %arrayidx119, align 8, !tbaa !5
  %25 = xor i64 %17, %18
  %26 = xor i64 %25, %19
  %27 = xor i64 %26, %20
  %28 = xor i64 %27, %21
  %29 = xor i64 %28, %22
  %30 = xor i64 %29, %23
  %31 = xor i64 %30, %24
  %xor121 = xor i64 %31, %r.0640
  %32 = or i64 %indvars.iv, 4
  %arrayidx124 = getelementptr inbounds i64, ptr %ks, i64 %32
  %33 = load i64, ptr %arrayidx124, align 8, !tbaa !5
  %xor125 = xor i64 %xor121, %33
  %34 = or i64 %indvars.iv, 5
  %arrayidx129 = getelementptr inbounds i64, ptr %ks, i64 %34
  %35 = load i64, ptr %arrayidx129, align 8, !tbaa !5
  %xor130 = xor i64 %xor121, %35
  %shr131 = lshr i64 %xor130, 4
  %shl132 = shl i64 %xor130, 28
  %add133 = add i64 %shr131, %shl132
  %shr134 = lshr i64 %xor125, 2
  %and135 = and i64 %shr134, 63
  %arrayidx136 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %and135
  %36 = load i64, ptr %arrayidx136, align 8, !tbaa !5
  %shr137 = lshr i64 %xor125, 10
  %and138 = and i64 %shr137, 63
  %arrayidx139 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %and138
  %37 = load i64, ptr %arrayidx139, align 8, !tbaa !5
  %shr141 = lshr i64 %xor125, 18
  %and142 = and i64 %shr141, 63
  %arrayidx143 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %and142
  %38 = load i64, ptr %arrayidx143, align 8, !tbaa !5
  %shr145 = lshr i64 %xor125, 26
  %and146 = and i64 %shr145, 63
  %arrayidx147 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %and146
  %39 = load i64, ptr %arrayidx147, align 8, !tbaa !5
  %shr149 = lshr i64 %xor130, 6
  %and150 = and i64 %shr149, 63
  %arrayidx151 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %and150
  %40 = load i64, ptr %arrayidx151, align 8, !tbaa !5
  %shr153 = lshr i64 %xor130, 14
  %and154 = and i64 %shr153, 63
  %arrayidx155 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %and154
  %41 = load i64, ptr %arrayidx155, align 8, !tbaa !5
  %shr157 = lshr i64 %xor130, 22
  %and158 = and i64 %shr157, 63
  %arrayidx159 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %and158
  %42 = load i64, ptr %arrayidx159, align 8, !tbaa !5
  %shr161 = lshr i64 %add133, 26
  %and162 = and i64 %shr161, 63
  %arrayidx163 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %and162
  %43 = load i64, ptr %arrayidx163, align 8, !tbaa !5
  %44 = xor i64 %36, %37
  %45 = xor i64 %44, %38
  %46 = xor i64 %45, %39
  %47 = xor i64 %46, %40
  %48 = xor i64 %47, %41
  %49 = xor i64 %48, %42
  %50 = xor i64 %49, %43
  %xor165 = xor i64 %50, %xor77
  %51 = or i64 %indvars.iv, 6
  %arrayidx168 = getelementptr inbounds i64, ptr %ks, i64 %51
  %52 = load i64, ptr %arrayidx168, align 8, !tbaa !5
  %xor169 = xor i64 %xor165, %52
  %53 = or i64 %indvars.iv, 7
  %arrayidx173 = getelementptr inbounds i64, ptr %ks, i64 %53
  %54 = load i64, ptr %arrayidx173, align 8, !tbaa !5
  %xor174 = xor i64 %xor165, %54
  %shr175 = lshr i64 %xor174, 4
  %shl176 = shl i64 %xor174, 28
  %add177 = add i64 %shr175, %shl176
  %shr178 = lshr i64 %xor169, 2
  %and179 = and i64 %shr178, 63
  %arrayidx180 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %and179
  %55 = load i64, ptr %arrayidx180, align 8, !tbaa !5
  %shr181 = lshr i64 %xor169, 10
  %and182 = and i64 %shr181, 63
  %arrayidx183 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %and182
  %56 = load i64, ptr %arrayidx183, align 8, !tbaa !5
  %shr185 = lshr i64 %xor169, 18
  %and186 = and i64 %shr185, 63
  %arrayidx187 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %and186
  %57 = load i64, ptr %arrayidx187, align 8, !tbaa !5
  %shr189 = lshr i64 %xor169, 26
  %and190 = and i64 %shr189, 63
  %arrayidx191 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %and190
  %58 = load i64, ptr %arrayidx191, align 8, !tbaa !5
  %shr193 = lshr i64 %xor174, 6
  %and194 = and i64 %shr193, 63
  %arrayidx195 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %and194
  %59 = load i64, ptr %arrayidx195, align 8, !tbaa !5
  %shr197 = lshr i64 %xor174, 14
  %and198 = and i64 %shr197, 63
  %arrayidx199 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %and198
  %60 = load i64, ptr %arrayidx199, align 8, !tbaa !5
  %shr201 = lshr i64 %xor174, 22
  %and202 = and i64 %shr201, 63
  %arrayidx203 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %and202
  %61 = load i64, ptr %arrayidx203, align 8, !tbaa !5
  %shr205 = lshr i64 %add177, 26
  %and206 = and i64 %shr205, 63
  %arrayidx207 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %and206
  %62 = load i64, ptr %arrayidx207, align 8, !tbaa !5
  %63 = xor i64 %55, %56
  %64 = xor i64 %63, %57
  %65 = xor i64 %64, %58
  %66 = xor i64 %65, %59
  %67 = xor i64 %66, %60
  %68 = xor i64 %67, %61
  %69 = xor i64 %68, %62
  %xor209 = xor i64 %69, %xor121
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 8
  %cmp = icmp ult i64 %indvars.iv, 24
  br i1 %cmp, label %for.body, label %if.end, !llvm.loop !9

for.body213:                                      ; preds = %entry, %for.body213
  %indvars.iv654 = phi i64 [ %indvars.iv.next655, %for.body213 ], [ 30, %entry ]
  %l.1644 = phi i64 [ %xor344, %for.body213 ], [ %and34, %entry ]
  %r.1643 = phi i64 [ %xor388, %for.body213 ], [ %and30, %entry ]
  %arrayidx215 = getelementptr inbounds i64, ptr %ks, i64 %indvars.iv654
  %70 = load i64, ptr %arrayidx215, align 8, !tbaa !5
  %xor216 = xor i64 %70, %r.1643
  %71 = or i64 %indvars.iv654, 1
  %arrayidx220 = getelementptr inbounds i64, ptr %ks, i64 %71
  %72 = load i64, ptr %arrayidx220, align 8, !tbaa !5
  %xor221 = xor i64 %72, %r.1643
  %shr222 = lshr i64 %xor221, 4
  %shl223 = shl i64 %xor221, 28
  %add224 = add i64 %shr222, %shl223
  %shr225 = lshr i64 %xor216, 2
  %and226 = and i64 %shr225, 63
  %arrayidx227 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %and226
  %73 = load i64, ptr %arrayidx227, align 8, !tbaa !5
  %shr228 = lshr i64 %xor216, 10
  %and229 = and i64 %shr228, 63
  %arrayidx230 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %and229
  %74 = load i64, ptr %arrayidx230, align 8, !tbaa !5
  %shr232 = lshr i64 %xor216, 18
  %and233 = and i64 %shr232, 63
  %arrayidx234 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %and233
  %75 = load i64, ptr %arrayidx234, align 8, !tbaa !5
  %shr236 = lshr i64 %xor216, 26
  %and237 = and i64 %shr236, 63
  %arrayidx238 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %and237
  %76 = load i64, ptr %arrayidx238, align 8, !tbaa !5
  %shr240 = lshr i64 %xor221, 6
  %and241 = and i64 %shr240, 63
  %arrayidx242 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %and241
  %77 = load i64, ptr %arrayidx242, align 8, !tbaa !5
  %shr244 = lshr i64 %xor221, 14
  %and245 = and i64 %shr244, 63
  %arrayidx246 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %and245
  %78 = load i64, ptr %arrayidx246, align 8, !tbaa !5
  %shr248 = lshr i64 %xor221, 22
  %and249 = and i64 %shr248, 63
  %arrayidx250 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %and249
  %79 = load i64, ptr %arrayidx250, align 8, !tbaa !5
  %shr252 = lshr i64 %add224, 26
  %and253 = and i64 %shr252, 63
  %arrayidx254 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %and253
  %80 = load i64, ptr %arrayidx254, align 8, !tbaa !5
  %xor231 = xor i64 %73, %l.1644
  %xor235 = xor i64 %xor231, %74
  %xor239 = xor i64 %xor235, %75
  %xor243 = xor i64 %xor239, %76
  %xor247 = xor i64 %xor243, %77
  %xor251 = xor i64 %xor247, %78
  %xor255 = xor i64 %xor251, %79
  %xor256 = xor i64 %xor255, %80
  %81 = add nsw i64 %indvars.iv654, -2
  %arrayidx259 = getelementptr inbounds i64, ptr %ks, i64 %81
  %82 = load i64, ptr %arrayidx259, align 8, !tbaa !5
  %xor260 = xor i64 %xor256, %82
  %83 = add nsw i64 %indvars.iv654, -1
  %arrayidx264 = getelementptr inbounds i64, ptr %ks, i64 %83
  %84 = load i64, ptr %arrayidx264, align 8, !tbaa !5
  %xor265 = xor i64 %xor256, %84
  %shr266 = lshr i64 %xor265, 4
  %shl267 = shl i64 %xor265, 28
  %add268 = add i64 %shr266, %shl267
  %shr269 = lshr i64 %xor260, 2
  %and270 = and i64 %shr269, 63
  %arrayidx271 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %and270
  %85 = load i64, ptr %arrayidx271, align 8, !tbaa !5
  %shr272 = lshr i64 %xor260, 10
  %and273 = and i64 %shr272, 63
  %arrayidx274 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %and273
  %86 = load i64, ptr %arrayidx274, align 8, !tbaa !5
  %shr276 = lshr i64 %xor260, 18
  %and277 = and i64 %shr276, 63
  %arrayidx278 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %and277
  %87 = load i64, ptr %arrayidx278, align 8, !tbaa !5
  %shr280 = lshr i64 %xor260, 26
  %and281 = and i64 %shr280, 63
  %arrayidx282 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %and281
  %88 = load i64, ptr %arrayidx282, align 8, !tbaa !5
  %shr284 = lshr i64 %xor265, 6
  %and285 = and i64 %shr284, 63
  %arrayidx286 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %and285
  %89 = load i64, ptr %arrayidx286, align 8, !tbaa !5
  %shr288 = lshr i64 %xor265, 14
  %and289 = and i64 %shr288, 63
  %arrayidx290 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %and289
  %90 = load i64, ptr %arrayidx290, align 8, !tbaa !5
  %shr292 = lshr i64 %xor265, 22
  %and293 = and i64 %shr292, 63
  %arrayidx294 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %and293
  %91 = load i64, ptr %arrayidx294, align 8, !tbaa !5
  %shr296 = lshr i64 %add268, 26
  %and297 = and i64 %shr296, 63
  %arrayidx298 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %and297
  %92 = load i64, ptr %arrayidx298, align 8, !tbaa !5
  %93 = xor i64 %85, %86
  %94 = xor i64 %93, %87
  %95 = xor i64 %94, %88
  %96 = xor i64 %95, %89
  %97 = xor i64 %96, %90
  %98 = xor i64 %97, %91
  %99 = xor i64 %98, %92
  %xor300 = xor i64 %99, %r.1643
  %100 = add nsw i64 %indvars.iv654, -4
  %arrayidx303 = getelementptr inbounds i64, ptr %ks, i64 %100
  %101 = load i64, ptr %arrayidx303, align 8, !tbaa !5
  %xor304 = xor i64 %xor300, %101
  %102 = add nsw i64 %indvars.iv654, -3
  %arrayidx308 = getelementptr inbounds i64, ptr %ks, i64 %102
  %103 = load i64, ptr %arrayidx308, align 8, !tbaa !5
  %xor309 = xor i64 %xor300, %103
  %shr310 = lshr i64 %xor309, 4
  %shl311 = shl i64 %xor309, 28
  %add312 = add i64 %shr310, %shl311
  %shr313 = lshr i64 %xor304, 2
  %and314 = and i64 %shr313, 63
  %arrayidx315 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %and314
  %104 = load i64, ptr %arrayidx315, align 8, !tbaa !5
  %shr316 = lshr i64 %xor304, 10
  %and317 = and i64 %shr316, 63
  %arrayidx318 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %and317
  %105 = load i64, ptr %arrayidx318, align 8, !tbaa !5
  %shr320 = lshr i64 %xor304, 18
  %and321 = and i64 %shr320, 63
  %arrayidx322 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %and321
  %106 = load i64, ptr %arrayidx322, align 8, !tbaa !5
  %shr324 = lshr i64 %xor304, 26
  %and325 = and i64 %shr324, 63
  %arrayidx326 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %and325
  %107 = load i64, ptr %arrayidx326, align 8, !tbaa !5
  %shr328 = lshr i64 %xor309, 6
  %and329 = and i64 %shr328, 63
  %arrayidx330 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %and329
  %108 = load i64, ptr %arrayidx330, align 8, !tbaa !5
  %shr332 = lshr i64 %xor309, 14
  %and333 = and i64 %shr332, 63
  %arrayidx334 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %and333
  %109 = load i64, ptr %arrayidx334, align 8, !tbaa !5
  %shr336 = lshr i64 %xor309, 22
  %and337 = and i64 %shr336, 63
  %arrayidx338 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %and337
  %110 = load i64, ptr %arrayidx338, align 8, !tbaa !5
  %shr340 = lshr i64 %add312, 26
  %and341 = and i64 %shr340, 63
  %arrayidx342 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %and341
  %111 = load i64, ptr %arrayidx342, align 8, !tbaa !5
  %112 = xor i64 %104, %105
  %113 = xor i64 %112, %106
  %114 = xor i64 %113, %107
  %115 = xor i64 %114, %108
  %116 = xor i64 %115, %109
  %117 = xor i64 %116, %110
  %118 = xor i64 %117, %111
  %xor344 = xor i64 %118, %xor256
  %119 = add nsw i64 %indvars.iv654, -6
  %arrayidx347 = getelementptr inbounds i64, ptr %ks, i64 %119
  %120 = load i64, ptr %arrayidx347, align 8, !tbaa !5
  %xor348 = xor i64 %xor344, %120
  %121 = add nsw i64 %indvars.iv654, -5
  %arrayidx352 = getelementptr inbounds i64, ptr %ks, i64 %121
  %122 = load i64, ptr %arrayidx352, align 8, !tbaa !5
  %xor353 = xor i64 %xor344, %122
  %shr354 = lshr i64 %xor353, 4
  %shl355 = shl i64 %xor353, 28
  %add356 = add i64 %shr354, %shl355
  %shr357 = lshr i64 %xor348, 2
  %and358 = and i64 %shr357, 63
  %arrayidx359 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %and358
  %123 = load i64, ptr %arrayidx359, align 8, !tbaa !5
  %shr360 = lshr i64 %xor348, 10
  %and361 = and i64 %shr360, 63
  %arrayidx362 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %and361
  %124 = load i64, ptr %arrayidx362, align 8, !tbaa !5
  %shr364 = lshr i64 %xor348, 18
  %and365 = and i64 %shr364, 63
  %arrayidx366 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %and365
  %125 = load i64, ptr %arrayidx366, align 8, !tbaa !5
  %shr368 = lshr i64 %xor348, 26
  %and369 = and i64 %shr368, 63
  %arrayidx370 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %and369
  %126 = load i64, ptr %arrayidx370, align 8, !tbaa !5
  %shr372 = lshr i64 %xor353, 6
  %and373 = and i64 %shr372, 63
  %arrayidx374 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %and373
  %127 = load i64, ptr %arrayidx374, align 8, !tbaa !5
  %shr376 = lshr i64 %xor353, 14
  %and377 = and i64 %shr376, 63
  %arrayidx378 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %and377
  %128 = load i64, ptr %arrayidx378, align 8, !tbaa !5
  %shr380 = lshr i64 %xor353, 22
  %and381 = and i64 %shr380, 63
  %arrayidx382 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %and381
  %129 = load i64, ptr %arrayidx382, align 8, !tbaa !5
  %shr384 = lshr i64 %add356, 26
  %and385 = and i64 %shr384, 63
  %arrayidx386 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %and385
  %130 = load i64, ptr %arrayidx386, align 8, !tbaa !5
  %131 = xor i64 %123, %124
  %132 = xor i64 %131, %125
  %133 = xor i64 %132, %126
  %134 = xor i64 %133, %127
  %135 = xor i64 %134, %128
  %136 = xor i64 %135, %129
  %137 = xor i64 %136, %130
  %xor388 = xor i64 %137, %xor300
  %indvars.iv.next655 = add nsw i64 %indvars.iv654, -8
  %cmp212 = icmp ugt i64 %indvars.iv654, 8
  br i1 %cmp212, label %for.body213, label %if.end, !llvm.loop !11

if.end:                                           ; preds = %for.body, %for.body213
  %r.2 = phi i64 [ %xor388, %for.body213 ], [ %xor209, %for.body ]
  %l.2 = phi i64 [ %xor344, %for.body213 ], [ %xor165, %for.body ]
  %shr392 = lshr i64 %l.2, 3
  %shl393 = shl i64 %l.2, 29
  %add394 = add i64 %shr392, %shl393
  %and395 = and i64 %add394, 4294967295
  %shr396 = lshr i64 %r.2, 3
  %shl397 = shl i64 %r.2, 29
  %add398 = add i64 %shr396, %shl397
  %and399 = and i64 %add398, 4294967295
  %shr401 = lshr i64 %add398, 1
  %xor402 = xor i64 %shr401, %add394
  %and403 = and i64 %xor402, 1431655765
  %xor404 = xor i64 %and403, %and395
  %shl405 = shl nuw nsw i64 %and403, 1
  %xor406 = xor i64 %shl405, %and399
  %shr407 = lshr i64 %xor404, 8
  %xor408 = xor i64 %shr407, %xor406
  %and409 = and i64 %xor408, 16711935
  %xor410 = xor i64 %and409, %xor406
  %shl411 = shl nuw nsw i64 %and409, 8
  %xor412 = xor i64 %shl411, %xor404
  %shr413 = lshr i64 %xor410, 2
  %xor414 = xor i64 %shr413, %xor412
  %and415 = and i64 %xor414, 858993459
  %xor416 = xor i64 %and415, %xor412
  %shl417 = shl nuw nsw i64 %and415, 2
  %xor418 = xor i64 %shl417, %xor410
  %shr419 = lshr i64 %xor416, 16
  %xor418.masked = and i64 %xor418, 65535
  %and421 = xor i64 %xor418.masked, %shr419
  %xor422 = xor i64 %and421, %xor418
  %shl423 = shl nuw nsw i64 %and421, 16
  %xor424 = xor i64 %shl423, %xor416
  %shr425 = lshr i64 %xor422, 4
  %xor426 = xor i64 %shr425, %xor424
  %and427 = and i64 %xor426, 252645135
  %xor428 = xor i64 %and427, %xor424
  %shl429 = shl nuw nsw i64 %and427, 4
  %xor430 = xor i64 %shl429, %xor422
  store i64 %xor428, ptr %data, align 8, !tbaa !5
  store i64 %xor430, ptr %arrayidx1, align 8, !tbaa !5
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable
define dso_local void @des_encrypt2(ptr nocapture noundef %data, ptr nocapture noundef readonly %ks, i32 noundef %encrypt) local_unnamed_addr #0 {
entry:
  %0 = load i64, ptr %data, align 8, !tbaa !5
  %arrayidx1 = getelementptr inbounds i64, ptr %data, i64 1
  %1 = load i64, ptr %arrayidx1, align 8, !tbaa !5
  %shr = lshr i64 %0, 29
  %shl = shl i64 %0, 3
  %add = add i64 %shr, %shl
  %and = and i64 %add, 4294967295
  %shr2 = lshr i64 %1, 29
  %shl3 = shl i64 %1, 3
  %add4 = add i64 %shr2, %shl3
  %and5 = and i64 %add4, 4294967295
  %tobool.not = icmp eq i32 %encrypt, 0
  br i1 %tobool.not, label %for.body183, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %entry ]
  %l.0520 = phi i64 [ %xor135, %for.body ], [ %and5, %entry ]
  %r.0518 = phi i64 [ %xor179, %for.body ], [ %and, %entry ]
  %arrayidx7 = getelementptr inbounds i64, ptr %ks, i64 %indvars.iv
  %2 = load i64, ptr %arrayidx7, align 8, !tbaa !5
  %xor = xor i64 %2, %r.0518
  %3 = or i64 %indvars.iv, 1
  %arrayidx11 = getelementptr inbounds i64, ptr %ks, i64 %3
  %4 = load i64, ptr %arrayidx11, align 8, !tbaa !5
  %xor12 = xor i64 %4, %r.0518
  %shr13 = lshr i64 %xor12, 4
  %shl14 = shl i64 %xor12, 28
  %add15 = add i64 %shr13, %shl14
  %shr16 = lshr i64 %xor, 2
  %and17 = and i64 %shr16, 63
  %arrayidx18 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %and17
  %5 = load i64, ptr %arrayidx18, align 8, !tbaa !5
  %shr19 = lshr i64 %xor, 10
  %and20 = and i64 %shr19, 63
  %arrayidx21 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %and20
  %6 = load i64, ptr %arrayidx21, align 8, !tbaa !5
  %shr23 = lshr i64 %xor, 18
  %and24 = and i64 %shr23, 63
  %arrayidx25 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %and24
  %7 = load i64, ptr %arrayidx25, align 8, !tbaa !5
  %shr27 = lshr i64 %xor, 26
  %and28 = and i64 %shr27, 63
  %arrayidx29 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %and28
  %8 = load i64, ptr %arrayidx29, align 8, !tbaa !5
  %shr31 = lshr i64 %xor12, 6
  %and32 = and i64 %shr31, 63
  %arrayidx33 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %and32
  %9 = load i64, ptr %arrayidx33, align 8, !tbaa !5
  %shr35 = lshr i64 %xor12, 14
  %and36 = and i64 %shr35, 63
  %arrayidx37 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %and36
  %10 = load i64, ptr %arrayidx37, align 8, !tbaa !5
  %shr39 = lshr i64 %xor12, 22
  %and40 = and i64 %shr39, 63
  %arrayidx41 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %and40
  %11 = load i64, ptr %arrayidx41, align 8, !tbaa !5
  %shr43 = lshr i64 %add15, 26
  %and44 = and i64 %shr43, 63
  %arrayidx45 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %and44
  %12 = load i64, ptr %arrayidx45, align 8, !tbaa !5
  %xor22 = xor i64 %5, %l.0520
  %xor26 = xor i64 %xor22, %6
  %xor30 = xor i64 %xor26, %7
  %xor34 = xor i64 %xor30, %8
  %xor38 = xor i64 %xor34, %9
  %xor42 = xor i64 %xor38, %10
  %xor46 = xor i64 %xor42, %11
  %xor47 = xor i64 %xor46, %12
  %13 = or i64 %indvars.iv, 2
  %arrayidx50 = getelementptr inbounds i64, ptr %ks, i64 %13
  %14 = load i64, ptr %arrayidx50, align 8, !tbaa !5
  %xor51 = xor i64 %xor47, %14
  %15 = or i64 %indvars.iv, 3
  %arrayidx55 = getelementptr inbounds i64, ptr %ks, i64 %15
  %16 = load i64, ptr %arrayidx55, align 8, !tbaa !5
  %xor56 = xor i64 %xor47, %16
  %shr57 = lshr i64 %xor56, 4
  %shl58 = shl i64 %xor56, 28
  %add59 = add i64 %shr57, %shl58
  %shr60 = lshr i64 %xor51, 2
  %and61 = and i64 %shr60, 63
  %arrayidx62 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %and61
  %17 = load i64, ptr %arrayidx62, align 8, !tbaa !5
  %shr63 = lshr i64 %xor51, 10
  %and64 = and i64 %shr63, 63
  %arrayidx65 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %and64
  %18 = load i64, ptr %arrayidx65, align 8, !tbaa !5
  %shr67 = lshr i64 %xor51, 18
  %and68 = and i64 %shr67, 63
  %arrayidx69 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %and68
  %19 = load i64, ptr %arrayidx69, align 8, !tbaa !5
  %shr71 = lshr i64 %xor51, 26
  %and72 = and i64 %shr71, 63
  %arrayidx73 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %and72
  %20 = load i64, ptr %arrayidx73, align 8, !tbaa !5
  %shr75 = lshr i64 %xor56, 6
  %and76 = and i64 %shr75, 63
  %arrayidx77 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %and76
  %21 = load i64, ptr %arrayidx77, align 8, !tbaa !5
  %shr79 = lshr i64 %xor56, 14
  %and80 = and i64 %shr79, 63
  %arrayidx81 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %and80
  %22 = load i64, ptr %arrayidx81, align 8, !tbaa !5
  %shr83 = lshr i64 %xor56, 22
  %and84 = and i64 %shr83, 63
  %arrayidx85 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %and84
  %23 = load i64, ptr %arrayidx85, align 8, !tbaa !5
  %shr87 = lshr i64 %add59, 26
  %and88 = and i64 %shr87, 63
  %arrayidx89 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %and88
  %24 = load i64, ptr %arrayidx89, align 8, !tbaa !5
  %25 = xor i64 %17, %18
  %26 = xor i64 %25, %19
  %27 = xor i64 %26, %20
  %28 = xor i64 %27, %21
  %29 = xor i64 %28, %22
  %30 = xor i64 %29, %23
  %31 = xor i64 %30, %24
  %xor91 = xor i64 %31, %r.0518
  %32 = or i64 %indvars.iv, 4
  %arrayidx94 = getelementptr inbounds i64, ptr %ks, i64 %32
  %33 = load i64, ptr %arrayidx94, align 8, !tbaa !5
  %xor95 = xor i64 %xor91, %33
  %34 = or i64 %indvars.iv, 5
  %arrayidx99 = getelementptr inbounds i64, ptr %ks, i64 %34
  %35 = load i64, ptr %arrayidx99, align 8, !tbaa !5
  %xor100 = xor i64 %xor91, %35
  %shr101 = lshr i64 %xor100, 4
  %shl102 = shl i64 %xor100, 28
  %add103 = add i64 %shr101, %shl102
  %shr104 = lshr i64 %xor95, 2
  %and105 = and i64 %shr104, 63
  %arrayidx106 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %and105
  %36 = load i64, ptr %arrayidx106, align 8, !tbaa !5
  %shr107 = lshr i64 %xor95, 10
  %and108 = and i64 %shr107, 63
  %arrayidx109 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %and108
  %37 = load i64, ptr %arrayidx109, align 8, !tbaa !5
  %shr111 = lshr i64 %xor95, 18
  %and112 = and i64 %shr111, 63
  %arrayidx113 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %and112
  %38 = load i64, ptr %arrayidx113, align 8, !tbaa !5
  %shr115 = lshr i64 %xor95, 26
  %and116 = and i64 %shr115, 63
  %arrayidx117 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %and116
  %39 = load i64, ptr %arrayidx117, align 8, !tbaa !5
  %shr119 = lshr i64 %xor100, 6
  %and120 = and i64 %shr119, 63
  %arrayidx121 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %and120
  %40 = load i64, ptr %arrayidx121, align 8, !tbaa !5
  %shr123 = lshr i64 %xor100, 14
  %and124 = and i64 %shr123, 63
  %arrayidx125 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %and124
  %41 = load i64, ptr %arrayidx125, align 8, !tbaa !5
  %shr127 = lshr i64 %xor100, 22
  %and128 = and i64 %shr127, 63
  %arrayidx129 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %and128
  %42 = load i64, ptr %arrayidx129, align 8, !tbaa !5
  %shr131 = lshr i64 %add103, 26
  %and132 = and i64 %shr131, 63
  %arrayidx133 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %and132
  %43 = load i64, ptr %arrayidx133, align 8, !tbaa !5
  %44 = xor i64 %36, %37
  %45 = xor i64 %44, %38
  %46 = xor i64 %45, %39
  %47 = xor i64 %46, %40
  %48 = xor i64 %47, %41
  %49 = xor i64 %48, %42
  %50 = xor i64 %49, %43
  %xor135 = xor i64 %50, %xor47
  %51 = or i64 %indvars.iv, 6
  %arrayidx138 = getelementptr inbounds i64, ptr %ks, i64 %51
  %52 = load i64, ptr %arrayidx138, align 8, !tbaa !5
  %xor139 = xor i64 %xor135, %52
  %53 = or i64 %indvars.iv, 7
  %arrayidx143 = getelementptr inbounds i64, ptr %ks, i64 %53
  %54 = load i64, ptr %arrayidx143, align 8, !tbaa !5
  %xor144 = xor i64 %xor135, %54
  %shr145 = lshr i64 %xor144, 4
  %shl146 = shl i64 %xor144, 28
  %add147 = add i64 %shr145, %shl146
  %shr148 = lshr i64 %xor139, 2
  %and149 = and i64 %shr148, 63
  %arrayidx150 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %and149
  %55 = load i64, ptr %arrayidx150, align 8, !tbaa !5
  %shr151 = lshr i64 %xor139, 10
  %and152 = and i64 %shr151, 63
  %arrayidx153 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %and152
  %56 = load i64, ptr %arrayidx153, align 8, !tbaa !5
  %shr155 = lshr i64 %xor139, 18
  %and156 = and i64 %shr155, 63
  %arrayidx157 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %and156
  %57 = load i64, ptr %arrayidx157, align 8, !tbaa !5
  %shr159 = lshr i64 %xor139, 26
  %and160 = and i64 %shr159, 63
  %arrayidx161 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %and160
  %58 = load i64, ptr %arrayidx161, align 8, !tbaa !5
  %shr163 = lshr i64 %xor144, 6
  %and164 = and i64 %shr163, 63
  %arrayidx165 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %and164
  %59 = load i64, ptr %arrayidx165, align 8, !tbaa !5
  %shr167 = lshr i64 %xor144, 14
  %and168 = and i64 %shr167, 63
  %arrayidx169 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %and168
  %60 = load i64, ptr %arrayidx169, align 8, !tbaa !5
  %shr171 = lshr i64 %xor144, 22
  %and172 = and i64 %shr171, 63
  %arrayidx173 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %and172
  %61 = load i64, ptr %arrayidx173, align 8, !tbaa !5
  %shr175 = lshr i64 %add147, 26
  %and176 = and i64 %shr175, 63
  %arrayidx177 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %and176
  %62 = load i64, ptr %arrayidx177, align 8, !tbaa !5
  %63 = xor i64 %55, %56
  %64 = xor i64 %63, %57
  %65 = xor i64 %64, %58
  %66 = xor i64 %65, %59
  %67 = xor i64 %66, %60
  %68 = xor i64 %67, %61
  %69 = xor i64 %68, %62
  %xor179 = xor i64 %69, %xor91
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 8
  %cmp = icmp ult i64 %indvars.iv, 24
  br i1 %cmp, label %for.body, label %if.end, !llvm.loop !12

for.body183:                                      ; preds = %entry, %for.body183
  %indvars.iv533 = phi i64 [ %indvars.iv.next534, %for.body183 ], [ 30, %entry ]
  %l.1523 = phi i64 [ %xor314, %for.body183 ], [ %and5, %entry ]
  %r.1521 = phi i64 [ %xor358, %for.body183 ], [ %and, %entry ]
  %arrayidx185 = getelementptr inbounds i64, ptr %ks, i64 %indvars.iv533
  %70 = load i64, ptr %arrayidx185, align 8, !tbaa !5
  %xor186 = xor i64 %70, %r.1521
  %71 = or i64 %indvars.iv533, 1
  %arrayidx190 = getelementptr inbounds i64, ptr %ks, i64 %71
  %72 = load i64, ptr %arrayidx190, align 8, !tbaa !5
  %xor191 = xor i64 %72, %r.1521
  %shr192 = lshr i64 %xor191, 4
  %shl193 = shl i64 %xor191, 28
  %add194 = add i64 %shr192, %shl193
  %shr195 = lshr i64 %xor186, 2
  %and196 = and i64 %shr195, 63
  %arrayidx197 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %and196
  %73 = load i64, ptr %arrayidx197, align 8, !tbaa !5
  %shr198 = lshr i64 %xor186, 10
  %and199 = and i64 %shr198, 63
  %arrayidx200 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %and199
  %74 = load i64, ptr %arrayidx200, align 8, !tbaa !5
  %shr202 = lshr i64 %xor186, 18
  %and203 = and i64 %shr202, 63
  %arrayidx204 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %and203
  %75 = load i64, ptr %arrayidx204, align 8, !tbaa !5
  %shr206 = lshr i64 %xor186, 26
  %and207 = and i64 %shr206, 63
  %arrayidx208 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %and207
  %76 = load i64, ptr %arrayidx208, align 8, !tbaa !5
  %shr210 = lshr i64 %xor191, 6
  %and211 = and i64 %shr210, 63
  %arrayidx212 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %and211
  %77 = load i64, ptr %arrayidx212, align 8, !tbaa !5
  %shr214 = lshr i64 %xor191, 14
  %and215 = and i64 %shr214, 63
  %arrayidx216 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %and215
  %78 = load i64, ptr %arrayidx216, align 8, !tbaa !5
  %shr218 = lshr i64 %xor191, 22
  %and219 = and i64 %shr218, 63
  %arrayidx220 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %and219
  %79 = load i64, ptr %arrayidx220, align 8, !tbaa !5
  %shr222 = lshr i64 %add194, 26
  %and223 = and i64 %shr222, 63
  %arrayidx224 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %and223
  %80 = load i64, ptr %arrayidx224, align 8, !tbaa !5
  %xor201 = xor i64 %73, %l.1523
  %xor205 = xor i64 %xor201, %74
  %xor209 = xor i64 %xor205, %75
  %xor213 = xor i64 %xor209, %76
  %xor217 = xor i64 %xor213, %77
  %xor221 = xor i64 %xor217, %78
  %xor225 = xor i64 %xor221, %79
  %xor226 = xor i64 %xor225, %80
  %81 = add nsw i64 %indvars.iv533, -2
  %arrayidx229 = getelementptr inbounds i64, ptr %ks, i64 %81
  %82 = load i64, ptr %arrayidx229, align 8, !tbaa !5
  %xor230 = xor i64 %xor226, %82
  %83 = add nsw i64 %indvars.iv533, -1
  %arrayidx234 = getelementptr inbounds i64, ptr %ks, i64 %83
  %84 = load i64, ptr %arrayidx234, align 8, !tbaa !5
  %xor235 = xor i64 %xor226, %84
  %shr236 = lshr i64 %xor235, 4
  %shl237 = shl i64 %xor235, 28
  %add238 = add i64 %shr236, %shl237
  %shr239 = lshr i64 %xor230, 2
  %and240 = and i64 %shr239, 63
  %arrayidx241 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %and240
  %85 = load i64, ptr %arrayidx241, align 8, !tbaa !5
  %shr242 = lshr i64 %xor230, 10
  %and243 = and i64 %shr242, 63
  %arrayidx244 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %and243
  %86 = load i64, ptr %arrayidx244, align 8, !tbaa !5
  %shr246 = lshr i64 %xor230, 18
  %and247 = and i64 %shr246, 63
  %arrayidx248 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %and247
  %87 = load i64, ptr %arrayidx248, align 8, !tbaa !5
  %shr250 = lshr i64 %xor230, 26
  %and251 = and i64 %shr250, 63
  %arrayidx252 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %and251
  %88 = load i64, ptr %arrayidx252, align 8, !tbaa !5
  %shr254 = lshr i64 %xor235, 6
  %and255 = and i64 %shr254, 63
  %arrayidx256 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %and255
  %89 = load i64, ptr %arrayidx256, align 8, !tbaa !5
  %shr258 = lshr i64 %xor235, 14
  %and259 = and i64 %shr258, 63
  %arrayidx260 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %and259
  %90 = load i64, ptr %arrayidx260, align 8, !tbaa !5
  %shr262 = lshr i64 %xor235, 22
  %and263 = and i64 %shr262, 63
  %arrayidx264 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %and263
  %91 = load i64, ptr %arrayidx264, align 8, !tbaa !5
  %shr266 = lshr i64 %add238, 26
  %and267 = and i64 %shr266, 63
  %arrayidx268 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %and267
  %92 = load i64, ptr %arrayidx268, align 8, !tbaa !5
  %93 = xor i64 %85, %86
  %94 = xor i64 %93, %87
  %95 = xor i64 %94, %88
  %96 = xor i64 %95, %89
  %97 = xor i64 %96, %90
  %98 = xor i64 %97, %91
  %99 = xor i64 %98, %92
  %xor270 = xor i64 %99, %r.1521
  %100 = add nsw i64 %indvars.iv533, -4
  %arrayidx273 = getelementptr inbounds i64, ptr %ks, i64 %100
  %101 = load i64, ptr %arrayidx273, align 8, !tbaa !5
  %xor274 = xor i64 %xor270, %101
  %102 = add nsw i64 %indvars.iv533, -3
  %arrayidx278 = getelementptr inbounds i64, ptr %ks, i64 %102
  %103 = load i64, ptr %arrayidx278, align 8, !tbaa !5
  %xor279 = xor i64 %xor270, %103
  %shr280 = lshr i64 %xor279, 4
  %shl281 = shl i64 %xor279, 28
  %add282 = add i64 %shr280, %shl281
  %shr283 = lshr i64 %xor274, 2
  %and284 = and i64 %shr283, 63
  %arrayidx285 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %and284
  %104 = load i64, ptr %arrayidx285, align 8, !tbaa !5
  %shr286 = lshr i64 %xor274, 10
  %and287 = and i64 %shr286, 63
  %arrayidx288 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %and287
  %105 = load i64, ptr %arrayidx288, align 8, !tbaa !5
  %shr290 = lshr i64 %xor274, 18
  %and291 = and i64 %shr290, 63
  %arrayidx292 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %and291
  %106 = load i64, ptr %arrayidx292, align 8, !tbaa !5
  %shr294 = lshr i64 %xor274, 26
  %and295 = and i64 %shr294, 63
  %arrayidx296 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %and295
  %107 = load i64, ptr %arrayidx296, align 8, !tbaa !5
  %shr298 = lshr i64 %xor279, 6
  %and299 = and i64 %shr298, 63
  %arrayidx300 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %and299
  %108 = load i64, ptr %arrayidx300, align 8, !tbaa !5
  %shr302 = lshr i64 %xor279, 14
  %and303 = and i64 %shr302, 63
  %arrayidx304 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %and303
  %109 = load i64, ptr %arrayidx304, align 8, !tbaa !5
  %shr306 = lshr i64 %xor279, 22
  %and307 = and i64 %shr306, 63
  %arrayidx308 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %and307
  %110 = load i64, ptr %arrayidx308, align 8, !tbaa !5
  %shr310 = lshr i64 %add282, 26
  %and311 = and i64 %shr310, 63
  %arrayidx312 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %and311
  %111 = load i64, ptr %arrayidx312, align 8, !tbaa !5
  %112 = xor i64 %104, %105
  %113 = xor i64 %112, %106
  %114 = xor i64 %113, %107
  %115 = xor i64 %114, %108
  %116 = xor i64 %115, %109
  %117 = xor i64 %116, %110
  %118 = xor i64 %117, %111
  %xor314 = xor i64 %118, %xor226
  %119 = add nsw i64 %indvars.iv533, -6
  %arrayidx317 = getelementptr inbounds i64, ptr %ks, i64 %119
  %120 = load i64, ptr %arrayidx317, align 8, !tbaa !5
  %xor318 = xor i64 %xor314, %120
  %121 = add nsw i64 %indvars.iv533, -5
  %arrayidx322 = getelementptr inbounds i64, ptr %ks, i64 %121
  %122 = load i64, ptr %arrayidx322, align 8, !tbaa !5
  %xor323 = xor i64 %xor314, %122
  %shr324 = lshr i64 %xor323, 4
  %shl325 = shl i64 %xor323, 28
  %add326 = add i64 %shr324, %shl325
  %shr327 = lshr i64 %xor318, 2
  %and328 = and i64 %shr327, 63
  %arrayidx329 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %and328
  %123 = load i64, ptr %arrayidx329, align 8, !tbaa !5
  %shr330 = lshr i64 %xor318, 10
  %and331 = and i64 %shr330, 63
  %arrayidx332 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %and331
  %124 = load i64, ptr %arrayidx332, align 8, !tbaa !5
  %shr334 = lshr i64 %xor318, 18
  %and335 = and i64 %shr334, 63
  %arrayidx336 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %and335
  %125 = load i64, ptr %arrayidx336, align 8, !tbaa !5
  %shr338 = lshr i64 %xor318, 26
  %and339 = and i64 %shr338, 63
  %arrayidx340 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %and339
  %126 = load i64, ptr %arrayidx340, align 8, !tbaa !5
  %shr342 = lshr i64 %xor323, 6
  %and343 = and i64 %shr342, 63
  %arrayidx344 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %and343
  %127 = load i64, ptr %arrayidx344, align 8, !tbaa !5
  %shr346 = lshr i64 %xor323, 14
  %and347 = and i64 %shr346, 63
  %arrayidx348 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %and347
  %128 = load i64, ptr %arrayidx348, align 8, !tbaa !5
  %shr350 = lshr i64 %xor323, 22
  %and351 = and i64 %shr350, 63
  %arrayidx352 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %and351
  %129 = load i64, ptr %arrayidx352, align 8, !tbaa !5
  %shr354 = lshr i64 %add326, 26
  %and355 = and i64 %shr354, 63
  %arrayidx356 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %and355
  %130 = load i64, ptr %arrayidx356, align 8, !tbaa !5
  %131 = xor i64 %123, %124
  %132 = xor i64 %131, %125
  %133 = xor i64 %132, %126
  %134 = xor i64 %133, %127
  %135 = xor i64 %134, %128
  %136 = xor i64 %135, %129
  %137 = xor i64 %136, %130
  %xor358 = xor i64 %137, %xor270
  %indvars.iv.next534 = add nsw i64 %indvars.iv533, -8
  %cmp182 = icmp ugt i64 %indvars.iv533, 8
  br i1 %cmp182, label %for.body183, label %if.end, !llvm.loop !13

if.end:                                           ; preds = %for.body, %for.body183
  %r.2 = phi i64 [ %xor358, %for.body183 ], [ %xor179, %for.body ]
  %l.2 = phi i64 [ %xor314, %for.body183 ], [ %xor135, %for.body ]
  %shr362 = lshr i64 %l.2, 3
  %shl363 = shl i64 %l.2, 29
  %add364 = add i64 %shr362, %shl363
  %and365 = and i64 %add364, 4294967295
  store i64 %and365, ptr %data, align 8, !tbaa !5
  %shr367 = lshr i64 %r.2, 3
  %shl368 = shl i64 %r.2, 29
  %add369 = add i64 %shr367, %shl368
  %and370 = and i64 %add369, 4294967295
  store i64 %and370, ptr %arrayidx1, align 8, !tbaa !5
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable
define dso_local void @des_encrypt3(ptr nocapture noundef %data, ptr nocapture noundef readonly %ks1, ptr nocapture noundef readonly %ks2, ptr nocapture noundef readonly %ks3) local_unnamed_addr #0 {
entry:
  %0 = load i64, ptr %data, align 8, !tbaa !5
  %arrayidx1 = getelementptr inbounds i64, ptr %data, i64 1
  %1 = load i64, ptr %arrayidx1, align 8, !tbaa !5
  %shr = lshr i64 %1, 4
  %xor = xor i64 %shr, %0
  %and = and i64 %xor, 252645135
  %xor2 = xor i64 %and, %0
  %shl = shl nuw nsw i64 %and, 4
  %xor3 = xor i64 %shl, %1
  %shr4 = lshr i64 %xor2, 16
  %xor5 = xor i64 %shr4, %xor3
  %and6 = and i64 %xor5, 65535
  %xor7 = xor i64 %and6, %xor3
  %shl8 = shl nuw nsw i64 %and6, 16
  %xor9 = xor i64 %shl8, %xor2
  %shr10 = lshr i64 %xor7, 2
  %xor11 = xor i64 %shr10, %xor9
  %and12 = and i64 %xor11, 858993459
  %xor13 = xor i64 %and12, %xor9
  %shl14 = shl nuw nsw i64 %and12, 2
  %xor15 = xor i64 %shl14, %xor7
  %shr16 = lshr i64 %xor13, 8
  %xor17 = xor i64 %shr16, %xor15
  %and18 = and i64 %xor17, 16711935
  %xor19 = xor i64 %and18, %xor15
  %shl20 = shl nuw nsw i64 %and18, 8
  %xor21 = xor i64 %shl20, %xor13
  %shr22 = lshr i64 %xor19, 1
  %xor23 = xor i64 %shr22, %xor21
  %and24 = and i64 %xor23, 1431655765
  %xor25 = xor i64 %and24, %xor21
  %shl26 = shl nuw nsw i64 %and24, 1
  %xor27 = xor i64 %shl26, %xor19
  store i64 %xor25, ptr %data, align 8, !tbaa !5
  store i64 %xor27, ptr %arrayidx1, align 8, !tbaa !5
  tail call void @des_encrypt2(ptr noundef nonnull %data, ptr noundef %ks1, i32 noundef 1)
  tail call void @des_encrypt2(ptr noundef nonnull %data, ptr noundef %ks2, i32 noundef 0)
  tail call void @des_encrypt2(ptr noundef nonnull %data, ptr noundef %ks3, i32 noundef 1)
  %2 = load i64, ptr %data, align 8, !tbaa !5
  %3 = load i64, ptr %arrayidx1, align 8, !tbaa !5
  %shr33 = lshr i64 %3, 1
  %xor34 = xor i64 %shr33, %2
  %and35 = and i64 %xor34, 1431655765
  %xor36 = xor i64 %and35, %2
  %shl37 = shl nuw nsw i64 %and35, 1
  %xor38 = xor i64 %shl37, %3
  %shr39 = lshr i64 %xor36, 8
  %xor40 = xor i64 %shr39, %xor38
  %and41 = and i64 %xor40, 16711935
  %xor42 = xor i64 %and41, %xor38
  %shl43 = shl nuw nsw i64 %and41, 8
  %xor44 = xor i64 %shl43, %xor36
  %shr45 = lshr i64 %xor42, 2
  %xor46 = xor i64 %shr45, %xor44
  %and47 = and i64 %xor46, 858993459
  %xor48 = xor i64 %and47, %xor44
  %shl49 = shl nuw nsw i64 %and47, 2
  %xor50 = xor i64 %shl49, %xor42
  %shr51 = lshr i64 %xor48, 16
  %xor52 = xor i64 %shr51, %xor50
  %and53 = and i64 %xor52, 65535
  %xor54 = xor i64 %and53, %xor50
  %shl55 = shl nuw nsw i64 %and53, 16
  %xor56 = xor i64 %shl55, %xor48
  %shr57 = lshr i64 %xor54, 4
  %xor58 = xor i64 %shr57, %xor56
  %and59 = and i64 %xor58, 252645135
  %xor60 = xor i64 %and59, %xor56
  %shl61 = shl nuw nsw i64 %and59, 4
  %xor62 = xor i64 %shl61, %xor54
  store i64 %xor60, ptr %data, align 8, !tbaa !5
  store i64 %xor62, ptr %arrayidx1, align 8, !tbaa !5
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable
define dso_local void @des_decrypt3(ptr nocapture noundef %data, ptr nocapture noundef readonly %ks1, ptr nocapture noundef readonly %ks2, ptr nocapture noundef readonly %ks3) local_unnamed_addr #0 {
entry:
  %0 = load i64, ptr %data, align 8, !tbaa !5
  %arrayidx1 = getelementptr inbounds i64, ptr %data, i64 1
  %1 = load i64, ptr %arrayidx1, align 8, !tbaa !5
  %shr = lshr i64 %1, 4
  %xor = xor i64 %shr, %0
  %and = and i64 %xor, 252645135
  %xor2 = xor i64 %and, %0
  %shl = shl nuw nsw i64 %and, 4
  %xor3 = xor i64 %shl, %1
  %shr4 = lshr i64 %xor2, 16
  %xor5 = xor i64 %shr4, %xor3
  %and6 = and i64 %xor5, 65535
  %xor7 = xor i64 %and6, %xor3
  %shl8 = shl nuw nsw i64 %and6, 16
  %xor9 = xor i64 %shl8, %xor2
  %shr10 = lshr i64 %xor7, 2
  %xor11 = xor i64 %shr10, %xor9
  %and12 = and i64 %xor11, 858993459
  %xor13 = xor i64 %and12, %xor9
  %shl14 = shl nuw nsw i64 %and12, 2
  %xor15 = xor i64 %shl14, %xor7
  %shr16 = lshr i64 %xor13, 8
  %xor17 = xor i64 %shr16, %xor15
  %and18 = and i64 %xor17, 16711935
  %xor19 = xor i64 %and18, %xor15
  %shl20 = shl nuw nsw i64 %and18, 8
  %xor21 = xor i64 %shl20, %xor13
  %shr22 = lshr i64 %xor19, 1
  %xor23 = xor i64 %shr22, %xor21
  %and24 = and i64 %xor23, 1431655765
  %xor25 = xor i64 %and24, %xor21
  %shl26 = shl nuw nsw i64 %and24, 1
  %xor27 = xor i64 %shl26, %xor19
  store i64 %xor25, ptr %data, align 8, !tbaa !5
  store i64 %xor27, ptr %arrayidx1, align 8, !tbaa !5
  tail call void @des_encrypt2(ptr noundef nonnull %data, ptr noundef %ks3, i32 noundef 0)
  tail call void @des_encrypt2(ptr noundef nonnull %data, ptr noundef %ks2, i32 noundef 1)
  tail call void @des_encrypt2(ptr noundef nonnull %data, ptr noundef %ks1, i32 noundef 0)
  %2 = load i64, ptr %data, align 8, !tbaa !5
  %3 = load i64, ptr %arrayidx1, align 8, !tbaa !5
  %shr33 = lshr i64 %3, 1
  %xor34 = xor i64 %shr33, %2
  %and35 = and i64 %xor34, 1431655765
  %xor36 = xor i64 %and35, %2
  %shl37 = shl nuw nsw i64 %and35, 1
  %xor38 = xor i64 %shl37, %3
  %shr39 = lshr i64 %xor36, 8
  %xor40 = xor i64 %shr39, %xor38
  %and41 = and i64 %xor40, 16711935
  %xor42 = xor i64 %and41, %xor38
  %shl43 = shl nuw nsw i64 %and41, 8
  %xor44 = xor i64 %shl43, %xor36
  %shr45 = lshr i64 %xor42, 2
  %xor46 = xor i64 %shr45, %xor44
  %and47 = and i64 %xor46, 858993459
  %xor48 = xor i64 %and47, %xor44
  %shl49 = shl nuw nsw i64 %and47, 2
  %xor50 = xor i64 %shl49, %xor42
  %shr51 = lshr i64 %xor48, 16
  %xor52 = xor i64 %shr51, %xor50
  %and53 = and i64 %xor52, 65535
  %xor54 = xor i64 %and53, %xor50
  %shl55 = shl nuw nsw i64 %and53, 16
  %xor56 = xor i64 %shl55, %xor48
  %shr57 = lshr i64 %xor54, 4
  %xor58 = xor i64 %shr57, %xor56
  %and59 = and i64 %xor58, 252645135
  %xor60 = xor i64 %and59, %xor56
  %shl61 = shl nuw nsw i64 %and59, 4
  %xor62 = xor i64 %shl61, %xor54
  store i64 %xor60, ptr %data, align 8, !tbaa !5
  store i64 %xor62, ptr %arrayidx1, align 8, !tbaa !5
  ret void
}

attributes #0 = { nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"long", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !10}
