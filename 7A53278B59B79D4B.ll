; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/VersaBench/ecbdes/des_enc.c'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/VersaBench/ecbdes/des_enc.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

@des_SPtrans = external local_unnamed_addr constant [8 x [64 x i64]], align 16

; Function Attrs: nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable
define dso_local void @des_encrypt(ptr nocapture noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 {
  %4 = load i64, ptr %0, align 8, !tbaa !5
  %5 = getelementptr inbounds i64, ptr %0, i64 1
  %6 = load i64, ptr %5, align 8, !tbaa !5
  %7 = lshr i64 %6, 4
  %8 = xor i64 %7, %4
  %9 = and i64 %8, 252645135
  %10 = xor i64 %9, %4
  %11 = shl nuw nsw i64 %9, 4
  %12 = xor i64 %11, %6
  %13 = lshr i64 %10, 16
  %14 = xor i64 %13, %12
  %15 = and i64 %14, 65535
  %16 = xor i64 %15, %12
  %17 = shl nuw nsw i64 %15, 16
  %18 = xor i64 %17, %10
  %19 = lshr i64 %16, 2
  %20 = xor i64 %19, %18
  %21 = and i64 %20, 858993459
  %22 = xor i64 %21, %18
  %23 = shl nuw nsw i64 %21, 2
  %24 = xor i64 %23, %16
  %25 = lshr i64 %22, 8
  %26 = xor i64 %25, %24
  %27 = and i64 %26, 16711935
  %28 = xor i64 %27, %24
  %29 = shl nuw nsw i64 %27, 8
  %30 = xor i64 %29, %22
  %31 = lshr i64 %28, 1
  %32 = xor i64 %31, %30
  %33 = and i64 %32, 1431655765
  %34 = xor i64 %33, %30
  %35 = shl nuw nsw i64 %33, 1
  %36 = xor i64 %35, %28
  %37 = lshr i64 %34, 29
  %38 = shl i64 %34, 3
  %39 = add i64 %37, %38
  %40 = and i64 %39, 4294967295
  %41 = lshr i64 %36, 29
  %42 = shl i64 %36, 3
  %43 = add i64 %41, %42
  %44 = and i64 %43, 4294967295
  %45 = icmp eq i32 %2, 0
  br i1 %45, label %255, label %46

46:                                               ; preds = %3, %46
  %47 = phi i64 [ %253, %46 ], [ 0, %3 ]
  %48 = phi i64 [ %201, %46 ], [ %44, %3 ]
  %49 = phi i64 [ %252, %46 ], [ %40, %3 ]
  %50 = getelementptr inbounds i64, ptr %1, i64 %47
  %51 = load i64, ptr %50, align 8, !tbaa !5
  %52 = xor i64 %51, %49
  %53 = or i64 %47, 1
  %54 = getelementptr inbounds i64, ptr %1, i64 %53
  %55 = load i64, ptr %54, align 8, !tbaa !5
  %56 = xor i64 %55, %49
  %57 = lshr i64 %56, 4
  %58 = shl i64 %56, 28
  %59 = add i64 %57, %58
  %60 = lshr i64 %52, 2
  %61 = and i64 %60, 63
  %62 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %61
  %63 = load i64, ptr %62, align 8, !tbaa !5
  %64 = lshr i64 %52, 10
  %65 = and i64 %64, 63
  %66 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %65
  %67 = load i64, ptr %66, align 8, !tbaa !5
  %68 = lshr i64 %52, 18
  %69 = and i64 %68, 63
  %70 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %69
  %71 = load i64, ptr %70, align 8, !tbaa !5
  %72 = lshr i64 %52, 26
  %73 = and i64 %72, 63
  %74 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %73
  %75 = load i64, ptr %74, align 8, !tbaa !5
  %76 = lshr i64 %56, 6
  %77 = and i64 %76, 63
  %78 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %77
  %79 = load i64, ptr %78, align 8, !tbaa !5
  %80 = lshr i64 %56, 14
  %81 = and i64 %80, 63
  %82 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %81
  %83 = load i64, ptr %82, align 8, !tbaa !5
  %84 = lshr i64 %56, 22
  %85 = and i64 %84, 63
  %86 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %85
  %87 = load i64, ptr %86, align 8, !tbaa !5
  %88 = lshr i64 %59, 26
  %89 = and i64 %88, 63
  %90 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %89
  %91 = load i64, ptr %90, align 8, !tbaa !5
  %92 = xor i64 %63, %48
  %93 = xor i64 %92, %67
  %94 = xor i64 %93, %71
  %95 = xor i64 %94, %75
  %96 = xor i64 %95, %79
  %97 = xor i64 %96, %83
  %98 = xor i64 %97, %87
  %99 = xor i64 %98, %91
  %100 = or i64 %47, 2
  %101 = getelementptr inbounds i64, ptr %1, i64 %100
  %102 = load i64, ptr %101, align 8, !tbaa !5
  %103 = xor i64 %99, %102
  %104 = or i64 %47, 3
  %105 = getelementptr inbounds i64, ptr %1, i64 %104
  %106 = load i64, ptr %105, align 8, !tbaa !5
  %107 = xor i64 %99, %106
  %108 = lshr i64 %107, 4
  %109 = shl i64 %107, 28
  %110 = add i64 %108, %109
  %111 = lshr i64 %103, 2
  %112 = and i64 %111, 63
  %113 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %112
  %114 = load i64, ptr %113, align 8, !tbaa !5
  %115 = lshr i64 %103, 10
  %116 = and i64 %115, 63
  %117 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %116
  %118 = load i64, ptr %117, align 8, !tbaa !5
  %119 = lshr i64 %103, 18
  %120 = and i64 %119, 63
  %121 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %120
  %122 = load i64, ptr %121, align 8, !tbaa !5
  %123 = lshr i64 %103, 26
  %124 = and i64 %123, 63
  %125 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %124
  %126 = load i64, ptr %125, align 8, !tbaa !5
  %127 = lshr i64 %107, 6
  %128 = and i64 %127, 63
  %129 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %128
  %130 = load i64, ptr %129, align 8, !tbaa !5
  %131 = lshr i64 %107, 14
  %132 = and i64 %131, 63
  %133 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %132
  %134 = load i64, ptr %133, align 8, !tbaa !5
  %135 = lshr i64 %107, 22
  %136 = and i64 %135, 63
  %137 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %136
  %138 = load i64, ptr %137, align 8, !tbaa !5
  %139 = lshr i64 %110, 26
  %140 = and i64 %139, 63
  %141 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %140
  %142 = load i64, ptr %141, align 8, !tbaa !5
  %143 = xor i64 %114, %118
  %144 = xor i64 %143, %122
  %145 = xor i64 %144, %126
  %146 = xor i64 %145, %130
  %147 = xor i64 %146, %134
  %148 = xor i64 %147, %138
  %149 = xor i64 %148, %142
  %150 = xor i64 %149, %49
  %151 = or i64 %47, 4
  %152 = getelementptr inbounds i64, ptr %1, i64 %151
  %153 = load i64, ptr %152, align 8, !tbaa !5
  %154 = xor i64 %150, %153
  %155 = or i64 %47, 5
  %156 = getelementptr inbounds i64, ptr %1, i64 %155
  %157 = load i64, ptr %156, align 8, !tbaa !5
  %158 = xor i64 %150, %157
  %159 = lshr i64 %158, 4
  %160 = shl i64 %158, 28
  %161 = add i64 %159, %160
  %162 = lshr i64 %154, 2
  %163 = and i64 %162, 63
  %164 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %163
  %165 = load i64, ptr %164, align 8, !tbaa !5
  %166 = lshr i64 %154, 10
  %167 = and i64 %166, 63
  %168 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %167
  %169 = load i64, ptr %168, align 8, !tbaa !5
  %170 = lshr i64 %154, 18
  %171 = and i64 %170, 63
  %172 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %171
  %173 = load i64, ptr %172, align 8, !tbaa !5
  %174 = lshr i64 %154, 26
  %175 = and i64 %174, 63
  %176 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %175
  %177 = load i64, ptr %176, align 8, !tbaa !5
  %178 = lshr i64 %158, 6
  %179 = and i64 %178, 63
  %180 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %179
  %181 = load i64, ptr %180, align 8, !tbaa !5
  %182 = lshr i64 %158, 14
  %183 = and i64 %182, 63
  %184 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %183
  %185 = load i64, ptr %184, align 8, !tbaa !5
  %186 = lshr i64 %158, 22
  %187 = and i64 %186, 63
  %188 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %187
  %189 = load i64, ptr %188, align 8, !tbaa !5
  %190 = lshr i64 %161, 26
  %191 = and i64 %190, 63
  %192 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %191
  %193 = load i64, ptr %192, align 8, !tbaa !5
  %194 = xor i64 %165, %169
  %195 = xor i64 %194, %173
  %196 = xor i64 %195, %177
  %197 = xor i64 %196, %181
  %198 = xor i64 %197, %185
  %199 = xor i64 %198, %189
  %200 = xor i64 %199, %193
  %201 = xor i64 %200, %99
  %202 = or i64 %47, 6
  %203 = getelementptr inbounds i64, ptr %1, i64 %202
  %204 = load i64, ptr %203, align 8, !tbaa !5
  %205 = xor i64 %201, %204
  %206 = or i64 %47, 7
  %207 = getelementptr inbounds i64, ptr %1, i64 %206
  %208 = load i64, ptr %207, align 8, !tbaa !5
  %209 = xor i64 %201, %208
  %210 = lshr i64 %209, 4
  %211 = shl i64 %209, 28
  %212 = add i64 %210, %211
  %213 = lshr i64 %205, 2
  %214 = and i64 %213, 63
  %215 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %214
  %216 = load i64, ptr %215, align 8, !tbaa !5
  %217 = lshr i64 %205, 10
  %218 = and i64 %217, 63
  %219 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %218
  %220 = load i64, ptr %219, align 8, !tbaa !5
  %221 = lshr i64 %205, 18
  %222 = and i64 %221, 63
  %223 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %222
  %224 = load i64, ptr %223, align 8, !tbaa !5
  %225 = lshr i64 %205, 26
  %226 = and i64 %225, 63
  %227 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %226
  %228 = load i64, ptr %227, align 8, !tbaa !5
  %229 = lshr i64 %209, 6
  %230 = and i64 %229, 63
  %231 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %230
  %232 = load i64, ptr %231, align 8, !tbaa !5
  %233 = lshr i64 %209, 14
  %234 = and i64 %233, 63
  %235 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %234
  %236 = load i64, ptr %235, align 8, !tbaa !5
  %237 = lshr i64 %209, 22
  %238 = and i64 %237, 63
  %239 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %238
  %240 = load i64, ptr %239, align 8, !tbaa !5
  %241 = lshr i64 %212, 26
  %242 = and i64 %241, 63
  %243 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %242
  %244 = load i64, ptr %243, align 8, !tbaa !5
  %245 = xor i64 %216, %220
  %246 = xor i64 %245, %224
  %247 = xor i64 %246, %228
  %248 = xor i64 %247, %232
  %249 = xor i64 %248, %236
  %250 = xor i64 %249, %240
  %251 = xor i64 %250, %244
  %252 = xor i64 %251, %150
  %253 = add nuw nsw i64 %47, 8
  %254 = icmp ult i64 %47, 24
  br i1 %254, label %46, label %464, !llvm.loop !9

255:                                              ; preds = %3, %255
  %256 = phi i64 [ %462, %255 ], [ 30, %3 ]
  %257 = phi i64 [ %410, %255 ], [ %44, %3 ]
  %258 = phi i64 [ %461, %255 ], [ %40, %3 ]
  %259 = getelementptr inbounds i64, ptr %1, i64 %256
  %260 = load i64, ptr %259, align 8, !tbaa !5
  %261 = xor i64 %260, %258
  %262 = or i64 %256, 1
  %263 = getelementptr inbounds i64, ptr %1, i64 %262
  %264 = load i64, ptr %263, align 8, !tbaa !5
  %265 = xor i64 %264, %258
  %266 = lshr i64 %265, 4
  %267 = shl i64 %265, 28
  %268 = add i64 %266, %267
  %269 = lshr i64 %261, 2
  %270 = and i64 %269, 63
  %271 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %270
  %272 = load i64, ptr %271, align 8, !tbaa !5
  %273 = lshr i64 %261, 10
  %274 = and i64 %273, 63
  %275 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %274
  %276 = load i64, ptr %275, align 8, !tbaa !5
  %277 = lshr i64 %261, 18
  %278 = and i64 %277, 63
  %279 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %278
  %280 = load i64, ptr %279, align 8, !tbaa !5
  %281 = lshr i64 %261, 26
  %282 = and i64 %281, 63
  %283 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %282
  %284 = load i64, ptr %283, align 8, !tbaa !5
  %285 = lshr i64 %265, 6
  %286 = and i64 %285, 63
  %287 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %286
  %288 = load i64, ptr %287, align 8, !tbaa !5
  %289 = lshr i64 %265, 14
  %290 = and i64 %289, 63
  %291 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %290
  %292 = load i64, ptr %291, align 8, !tbaa !5
  %293 = lshr i64 %265, 22
  %294 = and i64 %293, 63
  %295 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %294
  %296 = load i64, ptr %295, align 8, !tbaa !5
  %297 = lshr i64 %268, 26
  %298 = and i64 %297, 63
  %299 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %298
  %300 = load i64, ptr %299, align 8, !tbaa !5
  %301 = xor i64 %272, %257
  %302 = xor i64 %301, %276
  %303 = xor i64 %302, %280
  %304 = xor i64 %303, %284
  %305 = xor i64 %304, %288
  %306 = xor i64 %305, %292
  %307 = xor i64 %306, %296
  %308 = xor i64 %307, %300
  %309 = add nsw i64 %256, -2
  %310 = getelementptr inbounds i64, ptr %1, i64 %309
  %311 = load i64, ptr %310, align 8, !tbaa !5
  %312 = xor i64 %308, %311
  %313 = add nsw i64 %256, -1
  %314 = getelementptr inbounds i64, ptr %1, i64 %313
  %315 = load i64, ptr %314, align 8, !tbaa !5
  %316 = xor i64 %308, %315
  %317 = lshr i64 %316, 4
  %318 = shl i64 %316, 28
  %319 = add i64 %317, %318
  %320 = lshr i64 %312, 2
  %321 = and i64 %320, 63
  %322 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %321
  %323 = load i64, ptr %322, align 8, !tbaa !5
  %324 = lshr i64 %312, 10
  %325 = and i64 %324, 63
  %326 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %325
  %327 = load i64, ptr %326, align 8, !tbaa !5
  %328 = lshr i64 %312, 18
  %329 = and i64 %328, 63
  %330 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %329
  %331 = load i64, ptr %330, align 8, !tbaa !5
  %332 = lshr i64 %312, 26
  %333 = and i64 %332, 63
  %334 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %333
  %335 = load i64, ptr %334, align 8, !tbaa !5
  %336 = lshr i64 %316, 6
  %337 = and i64 %336, 63
  %338 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %337
  %339 = load i64, ptr %338, align 8, !tbaa !5
  %340 = lshr i64 %316, 14
  %341 = and i64 %340, 63
  %342 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %341
  %343 = load i64, ptr %342, align 8, !tbaa !5
  %344 = lshr i64 %316, 22
  %345 = and i64 %344, 63
  %346 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %345
  %347 = load i64, ptr %346, align 8, !tbaa !5
  %348 = lshr i64 %319, 26
  %349 = and i64 %348, 63
  %350 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %349
  %351 = load i64, ptr %350, align 8, !tbaa !5
  %352 = xor i64 %323, %327
  %353 = xor i64 %352, %331
  %354 = xor i64 %353, %335
  %355 = xor i64 %354, %339
  %356 = xor i64 %355, %343
  %357 = xor i64 %356, %347
  %358 = xor i64 %357, %351
  %359 = xor i64 %358, %258
  %360 = add nsw i64 %256, -4
  %361 = getelementptr inbounds i64, ptr %1, i64 %360
  %362 = load i64, ptr %361, align 8, !tbaa !5
  %363 = xor i64 %359, %362
  %364 = add nsw i64 %256, -3
  %365 = getelementptr inbounds i64, ptr %1, i64 %364
  %366 = load i64, ptr %365, align 8, !tbaa !5
  %367 = xor i64 %359, %366
  %368 = lshr i64 %367, 4
  %369 = shl i64 %367, 28
  %370 = add i64 %368, %369
  %371 = lshr i64 %363, 2
  %372 = and i64 %371, 63
  %373 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %372
  %374 = load i64, ptr %373, align 8, !tbaa !5
  %375 = lshr i64 %363, 10
  %376 = and i64 %375, 63
  %377 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %376
  %378 = load i64, ptr %377, align 8, !tbaa !5
  %379 = lshr i64 %363, 18
  %380 = and i64 %379, 63
  %381 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %380
  %382 = load i64, ptr %381, align 8, !tbaa !5
  %383 = lshr i64 %363, 26
  %384 = and i64 %383, 63
  %385 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %384
  %386 = load i64, ptr %385, align 8, !tbaa !5
  %387 = lshr i64 %367, 6
  %388 = and i64 %387, 63
  %389 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %388
  %390 = load i64, ptr %389, align 8, !tbaa !5
  %391 = lshr i64 %367, 14
  %392 = and i64 %391, 63
  %393 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %392
  %394 = load i64, ptr %393, align 8, !tbaa !5
  %395 = lshr i64 %367, 22
  %396 = and i64 %395, 63
  %397 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %396
  %398 = load i64, ptr %397, align 8, !tbaa !5
  %399 = lshr i64 %370, 26
  %400 = and i64 %399, 63
  %401 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %400
  %402 = load i64, ptr %401, align 8, !tbaa !5
  %403 = xor i64 %374, %378
  %404 = xor i64 %403, %382
  %405 = xor i64 %404, %386
  %406 = xor i64 %405, %390
  %407 = xor i64 %406, %394
  %408 = xor i64 %407, %398
  %409 = xor i64 %408, %402
  %410 = xor i64 %409, %308
  %411 = add nsw i64 %256, -6
  %412 = getelementptr inbounds i64, ptr %1, i64 %411
  %413 = load i64, ptr %412, align 8, !tbaa !5
  %414 = xor i64 %410, %413
  %415 = add nsw i64 %256, -5
  %416 = getelementptr inbounds i64, ptr %1, i64 %415
  %417 = load i64, ptr %416, align 8, !tbaa !5
  %418 = xor i64 %410, %417
  %419 = lshr i64 %418, 4
  %420 = shl i64 %418, 28
  %421 = add i64 %419, %420
  %422 = lshr i64 %414, 2
  %423 = and i64 %422, 63
  %424 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %423
  %425 = load i64, ptr %424, align 8, !tbaa !5
  %426 = lshr i64 %414, 10
  %427 = and i64 %426, 63
  %428 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %427
  %429 = load i64, ptr %428, align 8, !tbaa !5
  %430 = lshr i64 %414, 18
  %431 = and i64 %430, 63
  %432 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %431
  %433 = load i64, ptr %432, align 8, !tbaa !5
  %434 = lshr i64 %414, 26
  %435 = and i64 %434, 63
  %436 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %435
  %437 = load i64, ptr %436, align 8, !tbaa !5
  %438 = lshr i64 %418, 6
  %439 = and i64 %438, 63
  %440 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %439
  %441 = load i64, ptr %440, align 8, !tbaa !5
  %442 = lshr i64 %418, 14
  %443 = and i64 %442, 63
  %444 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %443
  %445 = load i64, ptr %444, align 8, !tbaa !5
  %446 = lshr i64 %418, 22
  %447 = and i64 %446, 63
  %448 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %447
  %449 = load i64, ptr %448, align 8, !tbaa !5
  %450 = lshr i64 %421, 26
  %451 = and i64 %450, 63
  %452 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %451
  %453 = load i64, ptr %452, align 8, !tbaa !5
  %454 = xor i64 %425, %429
  %455 = xor i64 %454, %433
  %456 = xor i64 %455, %437
  %457 = xor i64 %456, %441
  %458 = xor i64 %457, %445
  %459 = xor i64 %458, %449
  %460 = xor i64 %459, %453
  %461 = xor i64 %460, %359
  %462 = add nsw i64 %256, -8
  %463 = icmp ugt i64 %256, 8
  br i1 %463, label %255, label %464, !llvm.loop !11

464:                                              ; preds = %46, %255
  %465 = phi i64 [ %461, %255 ], [ %252, %46 ]
  %466 = phi i64 [ %410, %255 ], [ %201, %46 ]
  %467 = lshr i64 %466, 3
  %468 = shl i64 %466, 29
  %469 = add i64 %467, %468
  %470 = and i64 %469, 4294967295
  %471 = lshr i64 %465, 3
  %472 = shl i64 %465, 29
  %473 = add i64 %471, %472
  %474 = and i64 %473, 4294967295
  %475 = lshr i64 %473, 1
  %476 = xor i64 %475, %469
  %477 = and i64 %476, 1431655765
  %478 = xor i64 %477, %470
  %479 = shl nuw nsw i64 %477, 1
  %480 = xor i64 %479, %474
  %481 = lshr i64 %478, 8
  %482 = xor i64 %481, %480
  %483 = and i64 %482, 16711935
  %484 = xor i64 %483, %480
  %485 = shl nuw nsw i64 %483, 8
  %486 = xor i64 %485, %478
  %487 = lshr i64 %484, 2
  %488 = xor i64 %487, %486
  %489 = and i64 %488, 858993459
  %490 = xor i64 %489, %486
  %491 = shl nuw nsw i64 %489, 2
  %492 = xor i64 %491, %484
  %493 = lshr i64 %490, 16
  %494 = and i64 %492, 65535
  %495 = xor i64 %494, %493
  %496 = xor i64 %495, %492
  %497 = shl nuw nsw i64 %495, 16
  %498 = xor i64 %497, %490
  %499 = lshr i64 %496, 4
  %500 = xor i64 %499, %498
  %501 = and i64 %500, 252645135
  %502 = xor i64 %501, %498
  %503 = shl nuw nsw i64 %501, 4
  %504 = xor i64 %503, %496
  store i64 %502, ptr %0, align 8, !tbaa !5
  store i64 %504, ptr %5, align 8, !tbaa !5
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable
define dso_local void @des_encrypt2(ptr nocapture noundef %0, ptr nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #0 {
  %4 = load i64, ptr %0, align 8, !tbaa !5
  %5 = getelementptr inbounds i64, ptr %0, i64 1
  %6 = load i64, ptr %5, align 8, !tbaa !5
  %7 = lshr i64 %4, 29
  %8 = shl i64 %4, 3
  %9 = add i64 %7, %8
  %10 = and i64 %9, 4294967295
  %11 = lshr i64 %6, 29
  %12 = shl i64 %6, 3
  %13 = add i64 %11, %12
  %14 = and i64 %13, 4294967295
  %15 = icmp eq i32 %2, 0
  br i1 %15, label %225, label %16

16:                                               ; preds = %3, %16
  %17 = phi i64 [ %223, %16 ], [ 0, %3 ]
  %18 = phi i64 [ %171, %16 ], [ %14, %3 ]
  %19 = phi i64 [ %222, %16 ], [ %10, %3 ]
  %20 = getelementptr inbounds i64, ptr %1, i64 %17
  %21 = load i64, ptr %20, align 8, !tbaa !5
  %22 = xor i64 %21, %19
  %23 = or i64 %17, 1
  %24 = getelementptr inbounds i64, ptr %1, i64 %23
  %25 = load i64, ptr %24, align 8, !tbaa !5
  %26 = xor i64 %25, %19
  %27 = lshr i64 %26, 4
  %28 = shl i64 %26, 28
  %29 = add i64 %27, %28
  %30 = lshr i64 %22, 2
  %31 = and i64 %30, 63
  %32 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %31
  %33 = load i64, ptr %32, align 8, !tbaa !5
  %34 = lshr i64 %22, 10
  %35 = and i64 %34, 63
  %36 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %35
  %37 = load i64, ptr %36, align 8, !tbaa !5
  %38 = lshr i64 %22, 18
  %39 = and i64 %38, 63
  %40 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %39
  %41 = load i64, ptr %40, align 8, !tbaa !5
  %42 = lshr i64 %22, 26
  %43 = and i64 %42, 63
  %44 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %43
  %45 = load i64, ptr %44, align 8, !tbaa !5
  %46 = lshr i64 %26, 6
  %47 = and i64 %46, 63
  %48 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %47
  %49 = load i64, ptr %48, align 8, !tbaa !5
  %50 = lshr i64 %26, 14
  %51 = and i64 %50, 63
  %52 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %51
  %53 = load i64, ptr %52, align 8, !tbaa !5
  %54 = lshr i64 %26, 22
  %55 = and i64 %54, 63
  %56 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %55
  %57 = load i64, ptr %56, align 8, !tbaa !5
  %58 = lshr i64 %29, 26
  %59 = and i64 %58, 63
  %60 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %59
  %61 = load i64, ptr %60, align 8, !tbaa !5
  %62 = xor i64 %33, %18
  %63 = xor i64 %62, %37
  %64 = xor i64 %63, %41
  %65 = xor i64 %64, %45
  %66 = xor i64 %65, %49
  %67 = xor i64 %66, %53
  %68 = xor i64 %67, %57
  %69 = xor i64 %68, %61
  %70 = or i64 %17, 2
  %71 = getelementptr inbounds i64, ptr %1, i64 %70
  %72 = load i64, ptr %71, align 8, !tbaa !5
  %73 = xor i64 %69, %72
  %74 = or i64 %17, 3
  %75 = getelementptr inbounds i64, ptr %1, i64 %74
  %76 = load i64, ptr %75, align 8, !tbaa !5
  %77 = xor i64 %69, %76
  %78 = lshr i64 %77, 4
  %79 = shl i64 %77, 28
  %80 = add i64 %78, %79
  %81 = lshr i64 %73, 2
  %82 = and i64 %81, 63
  %83 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %82
  %84 = load i64, ptr %83, align 8, !tbaa !5
  %85 = lshr i64 %73, 10
  %86 = and i64 %85, 63
  %87 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %86
  %88 = load i64, ptr %87, align 8, !tbaa !5
  %89 = lshr i64 %73, 18
  %90 = and i64 %89, 63
  %91 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %90
  %92 = load i64, ptr %91, align 8, !tbaa !5
  %93 = lshr i64 %73, 26
  %94 = and i64 %93, 63
  %95 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %94
  %96 = load i64, ptr %95, align 8, !tbaa !5
  %97 = lshr i64 %77, 6
  %98 = and i64 %97, 63
  %99 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %98
  %100 = load i64, ptr %99, align 8, !tbaa !5
  %101 = lshr i64 %77, 14
  %102 = and i64 %101, 63
  %103 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %102
  %104 = load i64, ptr %103, align 8, !tbaa !5
  %105 = lshr i64 %77, 22
  %106 = and i64 %105, 63
  %107 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %106
  %108 = load i64, ptr %107, align 8, !tbaa !5
  %109 = lshr i64 %80, 26
  %110 = and i64 %109, 63
  %111 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %110
  %112 = load i64, ptr %111, align 8, !tbaa !5
  %113 = xor i64 %84, %88
  %114 = xor i64 %113, %92
  %115 = xor i64 %114, %96
  %116 = xor i64 %115, %100
  %117 = xor i64 %116, %104
  %118 = xor i64 %117, %108
  %119 = xor i64 %118, %112
  %120 = xor i64 %119, %19
  %121 = or i64 %17, 4
  %122 = getelementptr inbounds i64, ptr %1, i64 %121
  %123 = load i64, ptr %122, align 8, !tbaa !5
  %124 = xor i64 %120, %123
  %125 = or i64 %17, 5
  %126 = getelementptr inbounds i64, ptr %1, i64 %125
  %127 = load i64, ptr %126, align 8, !tbaa !5
  %128 = xor i64 %120, %127
  %129 = lshr i64 %128, 4
  %130 = shl i64 %128, 28
  %131 = add i64 %129, %130
  %132 = lshr i64 %124, 2
  %133 = and i64 %132, 63
  %134 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %133
  %135 = load i64, ptr %134, align 8, !tbaa !5
  %136 = lshr i64 %124, 10
  %137 = and i64 %136, 63
  %138 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %137
  %139 = load i64, ptr %138, align 8, !tbaa !5
  %140 = lshr i64 %124, 18
  %141 = and i64 %140, 63
  %142 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %141
  %143 = load i64, ptr %142, align 8, !tbaa !5
  %144 = lshr i64 %124, 26
  %145 = and i64 %144, 63
  %146 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %145
  %147 = load i64, ptr %146, align 8, !tbaa !5
  %148 = lshr i64 %128, 6
  %149 = and i64 %148, 63
  %150 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %149
  %151 = load i64, ptr %150, align 8, !tbaa !5
  %152 = lshr i64 %128, 14
  %153 = and i64 %152, 63
  %154 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %153
  %155 = load i64, ptr %154, align 8, !tbaa !5
  %156 = lshr i64 %128, 22
  %157 = and i64 %156, 63
  %158 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %157
  %159 = load i64, ptr %158, align 8, !tbaa !5
  %160 = lshr i64 %131, 26
  %161 = and i64 %160, 63
  %162 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %161
  %163 = load i64, ptr %162, align 8, !tbaa !5
  %164 = xor i64 %135, %139
  %165 = xor i64 %164, %143
  %166 = xor i64 %165, %147
  %167 = xor i64 %166, %151
  %168 = xor i64 %167, %155
  %169 = xor i64 %168, %159
  %170 = xor i64 %169, %163
  %171 = xor i64 %170, %69
  %172 = or i64 %17, 6
  %173 = getelementptr inbounds i64, ptr %1, i64 %172
  %174 = load i64, ptr %173, align 8, !tbaa !5
  %175 = xor i64 %171, %174
  %176 = or i64 %17, 7
  %177 = getelementptr inbounds i64, ptr %1, i64 %176
  %178 = load i64, ptr %177, align 8, !tbaa !5
  %179 = xor i64 %171, %178
  %180 = lshr i64 %179, 4
  %181 = shl i64 %179, 28
  %182 = add i64 %180, %181
  %183 = lshr i64 %175, 2
  %184 = and i64 %183, 63
  %185 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %184
  %186 = load i64, ptr %185, align 8, !tbaa !5
  %187 = lshr i64 %175, 10
  %188 = and i64 %187, 63
  %189 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %188
  %190 = load i64, ptr %189, align 8, !tbaa !5
  %191 = lshr i64 %175, 18
  %192 = and i64 %191, 63
  %193 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %192
  %194 = load i64, ptr %193, align 8, !tbaa !5
  %195 = lshr i64 %175, 26
  %196 = and i64 %195, 63
  %197 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %196
  %198 = load i64, ptr %197, align 8, !tbaa !5
  %199 = lshr i64 %179, 6
  %200 = and i64 %199, 63
  %201 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %200
  %202 = load i64, ptr %201, align 8, !tbaa !5
  %203 = lshr i64 %179, 14
  %204 = and i64 %203, 63
  %205 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %204
  %206 = load i64, ptr %205, align 8, !tbaa !5
  %207 = lshr i64 %179, 22
  %208 = and i64 %207, 63
  %209 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %208
  %210 = load i64, ptr %209, align 8, !tbaa !5
  %211 = lshr i64 %182, 26
  %212 = and i64 %211, 63
  %213 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %212
  %214 = load i64, ptr %213, align 8, !tbaa !5
  %215 = xor i64 %186, %190
  %216 = xor i64 %215, %194
  %217 = xor i64 %216, %198
  %218 = xor i64 %217, %202
  %219 = xor i64 %218, %206
  %220 = xor i64 %219, %210
  %221 = xor i64 %220, %214
  %222 = xor i64 %221, %120
  %223 = add nuw nsw i64 %17, 8
  %224 = icmp ult i64 %17, 24
  br i1 %224, label %16, label %434, !llvm.loop !12

225:                                              ; preds = %3, %225
  %226 = phi i64 [ %432, %225 ], [ 30, %3 ]
  %227 = phi i64 [ %380, %225 ], [ %14, %3 ]
  %228 = phi i64 [ %431, %225 ], [ %10, %3 ]
  %229 = getelementptr inbounds i64, ptr %1, i64 %226
  %230 = load i64, ptr %229, align 8, !tbaa !5
  %231 = xor i64 %230, %228
  %232 = or i64 %226, 1
  %233 = getelementptr inbounds i64, ptr %1, i64 %232
  %234 = load i64, ptr %233, align 8, !tbaa !5
  %235 = xor i64 %234, %228
  %236 = lshr i64 %235, 4
  %237 = shl i64 %235, 28
  %238 = add i64 %236, %237
  %239 = lshr i64 %231, 2
  %240 = and i64 %239, 63
  %241 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %240
  %242 = load i64, ptr %241, align 8, !tbaa !5
  %243 = lshr i64 %231, 10
  %244 = and i64 %243, 63
  %245 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %244
  %246 = load i64, ptr %245, align 8, !tbaa !5
  %247 = lshr i64 %231, 18
  %248 = and i64 %247, 63
  %249 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %248
  %250 = load i64, ptr %249, align 8, !tbaa !5
  %251 = lshr i64 %231, 26
  %252 = and i64 %251, 63
  %253 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %252
  %254 = load i64, ptr %253, align 8, !tbaa !5
  %255 = lshr i64 %235, 6
  %256 = and i64 %255, 63
  %257 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %256
  %258 = load i64, ptr %257, align 8, !tbaa !5
  %259 = lshr i64 %235, 14
  %260 = and i64 %259, 63
  %261 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %260
  %262 = load i64, ptr %261, align 8, !tbaa !5
  %263 = lshr i64 %235, 22
  %264 = and i64 %263, 63
  %265 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %264
  %266 = load i64, ptr %265, align 8, !tbaa !5
  %267 = lshr i64 %238, 26
  %268 = and i64 %267, 63
  %269 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %268
  %270 = load i64, ptr %269, align 8, !tbaa !5
  %271 = xor i64 %242, %227
  %272 = xor i64 %271, %246
  %273 = xor i64 %272, %250
  %274 = xor i64 %273, %254
  %275 = xor i64 %274, %258
  %276 = xor i64 %275, %262
  %277 = xor i64 %276, %266
  %278 = xor i64 %277, %270
  %279 = add nsw i64 %226, -2
  %280 = getelementptr inbounds i64, ptr %1, i64 %279
  %281 = load i64, ptr %280, align 8, !tbaa !5
  %282 = xor i64 %278, %281
  %283 = add nsw i64 %226, -1
  %284 = getelementptr inbounds i64, ptr %1, i64 %283
  %285 = load i64, ptr %284, align 8, !tbaa !5
  %286 = xor i64 %278, %285
  %287 = lshr i64 %286, 4
  %288 = shl i64 %286, 28
  %289 = add i64 %287, %288
  %290 = lshr i64 %282, 2
  %291 = and i64 %290, 63
  %292 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %291
  %293 = load i64, ptr %292, align 8, !tbaa !5
  %294 = lshr i64 %282, 10
  %295 = and i64 %294, 63
  %296 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %295
  %297 = load i64, ptr %296, align 8, !tbaa !5
  %298 = lshr i64 %282, 18
  %299 = and i64 %298, 63
  %300 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %299
  %301 = load i64, ptr %300, align 8, !tbaa !5
  %302 = lshr i64 %282, 26
  %303 = and i64 %302, 63
  %304 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %303
  %305 = load i64, ptr %304, align 8, !tbaa !5
  %306 = lshr i64 %286, 6
  %307 = and i64 %306, 63
  %308 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %307
  %309 = load i64, ptr %308, align 8, !tbaa !5
  %310 = lshr i64 %286, 14
  %311 = and i64 %310, 63
  %312 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %311
  %313 = load i64, ptr %312, align 8, !tbaa !5
  %314 = lshr i64 %286, 22
  %315 = and i64 %314, 63
  %316 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %315
  %317 = load i64, ptr %316, align 8, !tbaa !5
  %318 = lshr i64 %289, 26
  %319 = and i64 %318, 63
  %320 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %319
  %321 = load i64, ptr %320, align 8, !tbaa !5
  %322 = xor i64 %293, %297
  %323 = xor i64 %322, %301
  %324 = xor i64 %323, %305
  %325 = xor i64 %324, %309
  %326 = xor i64 %325, %313
  %327 = xor i64 %326, %317
  %328 = xor i64 %327, %321
  %329 = xor i64 %328, %228
  %330 = add nsw i64 %226, -4
  %331 = getelementptr inbounds i64, ptr %1, i64 %330
  %332 = load i64, ptr %331, align 8, !tbaa !5
  %333 = xor i64 %329, %332
  %334 = add nsw i64 %226, -3
  %335 = getelementptr inbounds i64, ptr %1, i64 %334
  %336 = load i64, ptr %335, align 8, !tbaa !5
  %337 = xor i64 %329, %336
  %338 = lshr i64 %337, 4
  %339 = shl i64 %337, 28
  %340 = add i64 %338, %339
  %341 = lshr i64 %333, 2
  %342 = and i64 %341, 63
  %343 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %342
  %344 = load i64, ptr %343, align 8, !tbaa !5
  %345 = lshr i64 %333, 10
  %346 = and i64 %345, 63
  %347 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %346
  %348 = load i64, ptr %347, align 8, !tbaa !5
  %349 = lshr i64 %333, 18
  %350 = and i64 %349, 63
  %351 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %350
  %352 = load i64, ptr %351, align 8, !tbaa !5
  %353 = lshr i64 %333, 26
  %354 = and i64 %353, 63
  %355 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %354
  %356 = load i64, ptr %355, align 8, !tbaa !5
  %357 = lshr i64 %337, 6
  %358 = and i64 %357, 63
  %359 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %358
  %360 = load i64, ptr %359, align 8, !tbaa !5
  %361 = lshr i64 %337, 14
  %362 = and i64 %361, 63
  %363 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %362
  %364 = load i64, ptr %363, align 8, !tbaa !5
  %365 = lshr i64 %337, 22
  %366 = and i64 %365, 63
  %367 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %366
  %368 = load i64, ptr %367, align 8, !tbaa !5
  %369 = lshr i64 %340, 26
  %370 = and i64 %369, 63
  %371 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %370
  %372 = load i64, ptr %371, align 8, !tbaa !5
  %373 = xor i64 %344, %348
  %374 = xor i64 %373, %352
  %375 = xor i64 %374, %356
  %376 = xor i64 %375, %360
  %377 = xor i64 %376, %364
  %378 = xor i64 %377, %368
  %379 = xor i64 %378, %372
  %380 = xor i64 %379, %278
  %381 = add nsw i64 %226, -6
  %382 = getelementptr inbounds i64, ptr %1, i64 %381
  %383 = load i64, ptr %382, align 8, !tbaa !5
  %384 = xor i64 %380, %383
  %385 = add nsw i64 %226, -5
  %386 = getelementptr inbounds i64, ptr %1, i64 %385
  %387 = load i64, ptr %386, align 8, !tbaa !5
  %388 = xor i64 %380, %387
  %389 = lshr i64 %388, 4
  %390 = shl i64 %388, 28
  %391 = add i64 %389, %390
  %392 = lshr i64 %384, 2
  %393 = and i64 %392, 63
  %394 = getelementptr inbounds [64 x i64], ptr @des_SPtrans, i64 0, i64 %393
  %395 = load i64, ptr %394, align 8, !tbaa !5
  %396 = lshr i64 %384, 10
  %397 = and i64 %396, 63
  %398 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 2, i64 %397
  %399 = load i64, ptr %398, align 8, !tbaa !5
  %400 = lshr i64 %384, 18
  %401 = and i64 %400, 63
  %402 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 4, i64 %401
  %403 = load i64, ptr %402, align 8, !tbaa !5
  %404 = lshr i64 %384, 26
  %405 = and i64 %404, 63
  %406 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 6, i64 %405
  %407 = load i64, ptr %406, align 8, !tbaa !5
  %408 = lshr i64 %388, 6
  %409 = and i64 %408, 63
  %410 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 1, i64 %409
  %411 = load i64, ptr %410, align 8, !tbaa !5
  %412 = lshr i64 %388, 14
  %413 = and i64 %412, 63
  %414 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 3, i64 %413
  %415 = load i64, ptr %414, align 8, !tbaa !5
  %416 = lshr i64 %388, 22
  %417 = and i64 %416, 63
  %418 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 5, i64 %417
  %419 = load i64, ptr %418, align 8, !tbaa !5
  %420 = lshr i64 %391, 26
  %421 = and i64 %420, 63
  %422 = getelementptr inbounds [8 x [64 x i64]], ptr @des_SPtrans, i64 0, i64 7, i64 %421
  %423 = load i64, ptr %422, align 8, !tbaa !5
  %424 = xor i64 %395, %399
  %425 = xor i64 %424, %403
  %426 = xor i64 %425, %407
  %427 = xor i64 %426, %411
  %428 = xor i64 %427, %415
  %429 = xor i64 %428, %419
  %430 = xor i64 %429, %423
  %431 = xor i64 %430, %329
  %432 = add nsw i64 %226, -8
  %433 = icmp ugt i64 %226, 8
  br i1 %433, label %225, label %434, !llvm.loop !13

434:                                              ; preds = %16, %225
  %435 = phi i64 [ %431, %225 ], [ %222, %16 ]
  %436 = phi i64 [ %380, %225 ], [ %171, %16 ]
  %437 = lshr i64 %436, 3
  %438 = shl i64 %436, 29
  %439 = add i64 %437, %438
  %440 = and i64 %439, 4294967295
  store i64 %440, ptr %0, align 8, !tbaa !5
  %441 = lshr i64 %435, 3
  %442 = shl i64 %435, 29
  %443 = add i64 %441, %442
  %444 = and i64 %443, 4294967295
  store i64 %444, ptr %5, align 8, !tbaa !5
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable
define dso_local void @des_encrypt3(ptr nocapture noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3) local_unnamed_addr #0 {
  %5 = load i64, ptr %0, align 8, !tbaa !5
  %6 = getelementptr inbounds i64, ptr %0, i64 1
  %7 = load i64, ptr %6, align 8, !tbaa !5
  %8 = lshr i64 %7, 4
  %9 = xor i64 %8, %5
  %10 = and i64 %9, 252645135
  %11 = xor i64 %10, %5
  %12 = shl nuw nsw i64 %10, 4
  %13 = xor i64 %12, %7
  %14 = lshr i64 %11, 16
  %15 = xor i64 %14, %13
  %16 = and i64 %15, 65535
  %17 = xor i64 %16, %13
  %18 = shl nuw nsw i64 %16, 16
  %19 = xor i64 %18, %11
  %20 = lshr i64 %17, 2
  %21 = xor i64 %20, %19
  %22 = and i64 %21, 858993459
  %23 = xor i64 %22, %19
  %24 = shl nuw nsw i64 %22, 2
  %25 = xor i64 %24, %17
  %26 = lshr i64 %23, 8
  %27 = xor i64 %26, %25
  %28 = and i64 %27, 16711935
  %29 = xor i64 %28, %25
  %30 = shl nuw nsw i64 %28, 8
  %31 = xor i64 %30, %23
  %32 = lshr i64 %29, 1
  %33 = xor i64 %32, %31
  %34 = and i64 %33, 1431655765
  %35 = xor i64 %34, %31
  %36 = shl nuw nsw i64 %34, 1
  %37 = xor i64 %36, %29
  store i64 %35, ptr %0, align 8, !tbaa !5
  store i64 %37, ptr %6, align 8, !tbaa !5
  tail call void @des_encrypt2(ptr noundef nonnull %0, ptr noundef %1, i32 noundef 1)
  tail call void @des_encrypt2(ptr noundef nonnull %0, ptr noundef %2, i32 noundef 0)
  tail call void @des_encrypt2(ptr noundef nonnull %0, ptr noundef %3, i32 noundef 1)
  %38 = load i64, ptr %0, align 8, !tbaa !5
  %39 = load i64, ptr %6, align 8, !tbaa !5
  %40 = lshr i64 %39, 1
  %41 = xor i64 %40, %38
  %42 = and i64 %41, 1431655765
  %43 = xor i64 %42, %38
  %44 = shl nuw nsw i64 %42, 1
  %45 = xor i64 %44, %39
  %46 = lshr i64 %43, 8
  %47 = xor i64 %46, %45
  %48 = and i64 %47, 16711935
  %49 = xor i64 %48, %45
  %50 = shl nuw nsw i64 %48, 8
  %51 = xor i64 %50, %43
  %52 = lshr i64 %49, 2
  %53 = xor i64 %52, %51
  %54 = and i64 %53, 858993459
  %55 = xor i64 %54, %51
  %56 = shl nuw nsw i64 %54, 2
  %57 = xor i64 %56, %49
  %58 = lshr i64 %55, 16
  %59 = xor i64 %58, %57
  %60 = and i64 %59, 65535
  %61 = xor i64 %60, %57
  %62 = shl nuw nsw i64 %60, 16
  %63 = xor i64 %62, %55
  %64 = lshr i64 %61, 4
  %65 = xor i64 %64, %63
  %66 = and i64 %65, 252645135
  %67 = xor i64 %66, %63
  %68 = shl nuw nsw i64 %66, 4
  %69 = xor i64 %68, %61
  store i64 %67, ptr %0, align 8, !tbaa !5
  store i64 %69, ptr %6, align 8, !tbaa !5
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable
define dso_local void @des_decrypt3(ptr nocapture noundef %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, ptr nocapture noundef readonly %3) local_unnamed_addr #0 {
  %5 = load i64, ptr %0, align 8, !tbaa !5
  %6 = getelementptr inbounds i64, ptr %0, i64 1
  %7 = load i64, ptr %6, align 8, !tbaa !5
  %8 = lshr i64 %7, 4
  %9 = xor i64 %8, %5
  %10 = and i64 %9, 252645135
  %11 = xor i64 %10, %5
  %12 = shl nuw nsw i64 %10, 4
  %13 = xor i64 %12, %7
  %14 = lshr i64 %11, 16
  %15 = xor i64 %14, %13
  %16 = and i64 %15, 65535
  %17 = xor i64 %16, %13
  %18 = shl nuw nsw i64 %16, 16
  %19 = xor i64 %18, %11
  %20 = lshr i64 %17, 2
  %21 = xor i64 %20, %19
  %22 = and i64 %21, 858993459
  %23 = xor i64 %22, %19
  %24 = shl nuw nsw i64 %22, 2
  %25 = xor i64 %24, %17
  %26 = lshr i64 %23, 8
  %27 = xor i64 %26, %25
  %28 = and i64 %27, 16711935
  %29 = xor i64 %28, %25
  %30 = shl nuw nsw i64 %28, 8
  %31 = xor i64 %30, %23
  %32 = lshr i64 %29, 1
  %33 = xor i64 %32, %31
  %34 = and i64 %33, 1431655765
  %35 = xor i64 %34, %31
  %36 = shl nuw nsw i64 %34, 1
  %37 = xor i64 %36, %29
  store i64 %35, ptr %0, align 8, !tbaa !5
  store i64 %37, ptr %6, align 8, !tbaa !5
  tail call void @des_encrypt2(ptr noundef nonnull %0, ptr noundef %3, i32 noundef 0)
  tail call void @des_encrypt2(ptr noundef nonnull %0, ptr noundef %2, i32 noundef 1)
  tail call void @des_encrypt2(ptr noundef nonnull %0, ptr noundef %1, i32 noundef 0)
  %38 = load i64, ptr %0, align 8, !tbaa !5
  %39 = load i64, ptr %6, align 8, !tbaa !5
  %40 = lshr i64 %39, 1
  %41 = xor i64 %40, %38
  %42 = and i64 %41, 1431655765
  %43 = xor i64 %42, %38
  %44 = shl nuw nsw i64 %42, 1
  %45 = xor i64 %44, %39
  %46 = lshr i64 %43, 8
  %47 = xor i64 %46, %45
  %48 = and i64 %47, 16711935
  %49 = xor i64 %48, %45
  %50 = shl nuw nsw i64 %48, 8
  %51 = xor i64 %50, %43
  %52 = lshr i64 %49, 2
  %53 = xor i64 %52, %51
  %54 = and i64 %53, 858993459
  %55 = xor i64 %54, %51
  %56 = shl nuw nsw i64 %54, 2
  %57 = xor i64 %56, %49
  %58 = lshr i64 %55, 16
  %59 = xor i64 %58, %57
  %60 = and i64 %59, 65535
  %61 = xor i64 %60, %57
  %62 = shl nuw nsw i64 %60, 16
  %63 = xor i64 %62, %55
  %64 = lshr i64 %61, 4
  %65 = xor i64 %64, %63
  %66 = and i64 %65, 252645135
  %67 = xor i64 %66, %63
  %68 = shl nuw nsw i64 %66, 4
  %69 = xor i64 %68, %61
  store i64 %67, ptr %0, align 8, !tbaa !5
  store i64 %69, ptr %6, align 8, !tbaa !5
  ret void
}

attributes #0 = { nofree norecurse nosync nounwind memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"long", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !10}
!13 = distinct !{!13, !10}
