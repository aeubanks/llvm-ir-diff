; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/mafft/mltaln9.c'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/mafft/mltaln9.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct._Bchain = type { ptr, ptr, i32 }
%struct._Achain = type { i32, i32 }
%struct._Segment = type { i32, i32, i32, double, i32, i32, ptr, i32 }
%struct._LocalHom = type { i32, ptr, ptr, i32, i32, i32, i32, double, i32, i32, double, float, double }
%struct._Gappattern = type { i32, float }

@amino_n = external local_unnamed_addr global [128 x i32], align 16
@stderr = external local_unnamed_addr global ptr, align 8
@.str = private unnamed_addr constant [76 x i8] c"========================================================================= \0A\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"=== \0A\00", align 1
@.str.2 = private unnamed_addr constant [31 x i8] c"=== Alphabet '%c' is unknown.\0A\00", align 1
@.str.3 = private unnamed_addr constant [42 x i8] c"=== Please check site %d in sequence %d.\0A\00", align 1
@.str.4 = private unnamed_addr constant [4 x i8] c"%s\0A\00", align 1
@disp = external local_unnamed_addr global i32, align 4
@.str.5 = private unnamed_addr constant [126 x i8] c"    ....,....+....,....+....,....+....,....+....,....+....,....+....,....+....,....+....,....+....,....+....,....+....,....+\0A\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"%3d %s\0A\00", align 1
@amino_dis_consweight_multi = external local_unnamed_addr global [128 x [128 x double]], align 16
@penalty = external local_unnamed_addr global i32, align 4
@amino_dis = external local_unnamed_addr global [128 x [128 x i32]], align 16
@score_calc3.mseq1 = internal global [10000000 x i8] zeroinitializer, align 16
@score_calc3.mseq2 = internal global [10000000 x i8] zeroinitializer, align 16
@weight = external local_unnamed_addr global i32, align 4
@.str.7 = private unnamed_addr constant [7 x i8] c"error\0A\00", align 1
@scoremtx = external local_unnamed_addr global i32, align 4
@n_dis = external local_unnamed_addr global [26 x [26 x i32]], align 16
@mix = external local_unnamed_addr global i32, align 4
@upg2.pair = internal unnamed_addr global ptr null, align 8
@njob = external local_unnamed_addr global i32, align 4
@loadtree.hist = internal unnamed_addr global ptr null, align 8
@loadtree.ac = internal unnamed_addr global ptr null, align 8
@loadtree.nmemar = internal unnamed_addr global ptr null, align 8
@loadtree.tree = internal unnamed_addr global ptr null, align 8
@loadtree.treetmp = internal unnamed_addr global ptr null, align 8
@loadtree.nametmp = internal unnamed_addr global ptr null, align 8
@.str.8 = private unnamed_addr constant [11 x i8] c"_guidetree\00", align 1
@.str.9 = private unnamed_addr constant [2 x i8] c"r\00", align 1
@.str.10 = private unnamed_addr constant [24 x i8] c"cannot open _guidetree\0A\00", align 1
@.str.11 = private unnamed_addr constant [9 x i8] c"%d_%.20s\00", align 1
@.str.13 = private unnamed_addr constant [11 x i8] c"\0D% 5d / %d\00", align 1
@.str.14 = private unnamed_addr constant [38 x i8] c"\0A\0AERROR: Branch length is not given.\0A\00", align 1
@.str.15 = private unnamed_addr constant [25 x i8] c"Cannot reallocate topol\0A\00", align 1
@.str.16 = private unnamed_addr constant [20 x i8] c"(%s:%7.5f,%s:%7.5f)\00", align 1
@.str.17 = private unnamed_addr constant [12 x i8] c"infile.tree\00", align 1
@.str.18 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.19 = private unnamed_addr constant [14 x i8] c"#by loadtree\0A\00", align 1
@loadtop.ac = internal unnamed_addr global ptr null, align 8
@loadtop.tmptmplen = internal unnamed_addr global ptr null, align 8
@loadtop.hist = internal unnamed_addr global ptr null, align 8
@loadtop.nmemar = internal unnamed_addr global ptr null, align 8
@loadtop.tree = internal unnamed_addr global ptr null, align 8
@loadtop.treetmp = internal unnamed_addr global ptr null, align 8
@sueff1 = internal unnamed_addr global float 0.000000e+00, align 4
@sueff05 = internal unnamed_addr global float 0.000000e+00, align 4
@treemethod = external local_unnamed_addr global i32, align 4
@.str.20 = private unnamed_addr constant [24 x i8] c"Unknown treemethod, %c\0A\00", align 1
@.str.21 = private unnamed_addr constant [3 x i8] c"%d\00", align 1
@.str.22 = private unnamed_addr constant [45 x i8] c"\0A\0AERROR: Branch length should not be given.\0A\00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c"by loadtop\0A\00", align 1
@fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.tmptmplen = internal unnamed_addr global ptr null, align 8
@fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.hist = internal unnamed_addr global ptr null, align 8
@fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.ac = internal unnamed_addr global ptr null, align 8
@fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.nmemar = internal unnamed_addr global ptr null, align 8
@fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.tree = internal unnamed_addr global ptr null, align 8
@fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.treetmp = internal unnamed_addr global ptr null, align 8
@fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.nametmp = internal unnamed_addr global ptr null, align 8
@fixed_musclesupg_float_realloc_nobk_halfmtx.tmptmplen = internal unnamed_addr global ptr null, align 8
@fixed_musclesupg_float_realloc_nobk_halfmtx.hist = internal unnamed_addr global ptr null, align 8
@fixed_musclesupg_float_realloc_nobk_halfmtx.ac = internal unnamed_addr global ptr null, align 8
@fixed_musclesupg_float_realloc_nobk_halfmtx.nmemar = internal unnamed_addr global ptr null, align 8
@veryfastsupg_double_loadtop.tmptmplen = internal unnamed_addr global ptr null, align 8
@veryfastsupg_double_loadtop.hist = internal unnamed_addr global ptr null, align 8
@veryfastsupg_double_loadtop.ac = internal unnamed_addr global ptr null, align 8
@veryfastsupg_double_loadtop.tree = internal unnamed_addr global ptr null, align 8
@veryfastsupg_double_loadtop.treetmp = internal unnamed_addr global ptr null, align 8
@.str.24 = private unnamed_addr constant [9 x i8] c"%d / %d\0D\00", align 1
@.str.25 = private unnamed_addr constant [35 x i8] c"\0A\0ABranch length should not given.\0A\00", align 1
@veryfastsupg_double_loadtree.tmptmplen = internal unnamed_addr global ptr null, align 8
@veryfastsupg_double_loadtree.hist = internal unnamed_addr global ptr null, align 8
@veryfastsupg_double_loadtree.ac = internal unnamed_addr global ptr null, align 8
@veryfastsupg_double_loadtree.tree = internal unnamed_addr global ptr null, align 8
@veryfastsupg_double_loadtree.treetmp = internal unnamed_addr global ptr null, align 8
@.str.26 = private unnamed_addr constant [40 x i8] c"\0A\0AWARNING: Branch length is not given.\0A\00", align 1
@veryfastsupg_double_outtree.tmptmplen = internal unnamed_addr global ptr null, align 8
@veryfastsupg_double_outtree.hist = internal unnamed_addr global ptr null, align 8
@veryfastsupg_double_outtree.ac = internal unnamed_addr global ptr null, align 8
@veryfastsupg_double_outtree.tree = internal unnamed_addr global ptr null, align 8
@veryfastsupg_double_outtree.treetmp = internal unnamed_addr global ptr null, align 8
@veryfastsupg_double_outtree.nametmp = internal unnamed_addr global ptr null, align 8
@sueff1_double = internal unnamed_addr global double 0.000000e+00, align 8
@sueff05_double = internal unnamed_addr global double 0.000000e+00, align 8
@veryfastsupg.tmptmplen = internal unnamed_addr global ptr null, align 8
@veryfastsupg.eff = internal unnamed_addr global ptr null, align 8
@veryfastsupg.hist = internal unnamed_addr global ptr null, align 8
@veryfastsupg.ac = internal unnamed_addr global ptr null, align 8
@veryfastsupg_int.tmptmplen = internal unnamed_addr global ptr null, align 8
@veryfastsupg_int.eff = internal unnamed_addr global ptr null, align 8
@veryfastsupg_int.hist = internal unnamed_addr global ptr null, align 8
@veryfastsupg_int.ac = internal unnamed_addr global ptr null, align 8
@fastsupg.tmplen = internal unnamed_addr global ptr null, align 8
@fastsupg.eff = internal unnamed_addr global ptr null, align 8
@fastsupg.pair = internal unnamed_addr global ptr null, align 8
@fastsupg.ac = internal unnamed_addr global ptr null, align 8
@supg.tmplen = internal unnamed_addr global ptr null, align 8
@supg.eff = internal unnamed_addr global ptr null, align 8
@supg.pair = internal unnamed_addr global ptr null, align 8
@countnode.rootnode = internal unnamed_addr global [50000 x double] zeroinitializer, align 16
@.str.27 = private unnamed_addr constant [43 x i8] c"Too few sequence for countnode: nseq = %d\0A\00", align 1
@counteff_simple_float.rootnode = internal unnamed_addr global [50000 x double] zeroinitializer, align 16
@counteff_simple_float.eff = internal unnamed_addr global [50000 x double] zeroinitializer, align 16
@counteff_simple.rootnode = internal unnamed_addr global [50000 x double] zeroinitializer, align 16
@counteff_simple.eff = internal unnamed_addr global [50000 x double] zeroinitializer, align 16
@.str.28 = private unnamed_addr constant [10 x i8] c"mix error\00", align 1
@geta2 = external local_unnamed_addr global float, align 4
@utree = external local_unnamed_addr global i32, align 4
@scmtd = external local_unnamed_addr global i32, align 4
@.str.29 = private unnamed_addr constant [16 x i8] c"raw score = %f\0A\00", align 1
@searchAnchors.stra = internal unnamed_addr global ptr null, align 8
@searchAnchors.alloclen = internal unnamed_addr global i32 0, align 4
@searchAnchors.threshold = internal unnamed_addr global double 0.000000e+00, align 8
@divThreshold = external local_unnamed_addr global i32, align 4
@divWinSize = external local_unnamed_addr global i32, align 4
@.str.30 = private unnamed_addr constant [19 x i8] c"TOO MANY SEGMENTS!\00", align 1
@dontcalcimportance.nogaplen = internal unnamed_addr global ptr null, align 8
@calcimportance.importance = internal unnamed_addr global ptr null, align 8
@calcimportance.nogaplen = internal unnamed_addr global ptr null, align 8
@nlenmax = external local_unnamed_addr global i32, align 4
@.str.31 = private unnamed_addr constant [19 x i8] c"ERROR: i=%d, j=%d\0A\00", align 1
@extendlocalhom2.ini = internal unnamed_addr global ptr null, align 8
@extendlocalhom2.inj = internal unnamed_addr global ptr null, align 8
@thrinter = external local_unnamed_addr global double, align 8
@.str.32 = private unnamed_addr constant [28 x i8] c"opt kainaide tbfast.c = %f\0A\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"%d, %f\0A\00", align 1
@.str.34 = private unnamed_addr constant [30 x i8] c"Cannot allocate gappattern!'n\00", align 1
@.str.35 = private unnamed_addr constant [54 x i8] c"Use an approximate method, with the --mafft5 option.\0A\00", align 1
@.str.36 = private unnamed_addr constant [10 x i8] c"val = %f\0A\00", align 1
@.str.37 = private unnamed_addr constant [36 x i8] c"Penal!, %f, %d-%d, pos1,pos2=%d,%d\0A\00", align 1
@loadtreeoneline.gett = internal global [1000 x i8] zeroinitializer, align 16
@.str.38 = private unnamed_addr constant [12 x i8] c"%d %d %a %a\00", align 1
@.str.39 = private unnamed_addr constant [22 x i8] c"Incorrect guide tree\0A\00", align 1

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @seqlen(ptr nocapture noundef readonly %seq) local_unnamed_addr #0 {
entry:
  %0 = load i8, ptr %seq, align 1, !tbaa !5
  %tobool.not4 = icmp eq i8 %0, 0
  br i1 %tobool.not4, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %1 = phi i8 [ %2, %while.body ], [ %0, %entry ]
  %val.06 = phi i32 [ %spec.select, %while.body ], [ 0, %entry ]
  %seq.addr.05 = phi ptr [ %incdec.ptr, %while.body ], [ %seq, %entry ]
  %incdec.ptr = getelementptr inbounds i8, ptr %seq.addr.05, i64 1
  %cmp.not = icmp ne i8 %1, 45
  %inc = zext i1 %cmp.not to i32
  %spec.select = add nuw nsw i32 %val.06, %inc
  %2 = load i8, ptr %incdec.ptr, align 1, !tbaa !5
  %tobool.not = icmp eq i8 %2, 0
  br i1 %tobool.not, label %while.end, label %while.body, !llvm.loop !8

while.end:                                        ; preds = %while.body, %entry
  %val.0.lcssa = phi i32 [ 0, %entry ], [ %spec.select, %while.body ]
  ret i32 %val.0.lcssa
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #1

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @intlen(ptr nocapture noundef readonly %num) local_unnamed_addr #0 {
entry:
  %0 = load i32, ptr %num, align 4, !tbaa !10
  %cmp.not2 = icmp eq i32 %0, -1
  br i1 %cmp.not2, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %value.04 = phi i32 [ %inc, %while.body ], [ 0, %entry ]
  %num.addr.03 = phi ptr [ %incdec.ptr, %while.body ], [ %num, %entry ]
  %incdec.ptr = getelementptr inbounds i32, ptr %num.addr.03, i64 1
  %inc = add nuw nsw i32 %value.04, 1
  %1 = load i32, ptr %incdec.ptr, align 4, !tbaa !10
  %cmp.not = icmp eq i32 %1, -1
  br i1 %cmp.not, label %while.end, label %while.body, !llvm.loop !12

while.end:                                        ; preds = %while.body, %entry
  %value.0.lcssa = phi i32 [ 0, %entry ], [ %inc, %while.body ]
  ret i32 %value.0.lcssa
}

; Function Attrs: nofree nounwind uwtable
define dso_local signext i8 @seqcheck(ptr noundef %seq) local_unnamed_addr #2 {
entry:
  %0 = load ptr, ptr %seq, align 8, !tbaa !13
  %tobool.not44 = icmp eq ptr %0, null
  br i1 %tobool.not44, label %cleanup, label %while.body

while.body:                                       ; preds = %entry, %for.end
  %1 = phi ptr [ %29, %for.end ], [ %0, %entry ]
  %seq.addr.045 = phi ptr [ %incdec.ptr, %for.end ], [ %seq, %entry ]
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #31
  %conv = trunc i64 %call to i32
  %cmp42 = icmp sgt i32 %conv, 0
  br i1 %cmp42, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %while.body
  %wide.trip.count = and i64 %call, 4294967295
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds i8, ptr %1, i64 %indvars.iv
  %2 = load i8, ptr %arrayidx, align 1, !tbaa !5
  %idxprom3 = sext i8 %2 to i64
  %arrayidx4 = getelementptr inbounds [128 x i32], ptr @amino_n, i64 0, i64 %idxprom3
  %3 = load i32, ptr %arrayidx4, align 4, !tbaa !10
  %cmp5 = icmp eq i32 %3, -1
  br i1 %cmp5, label %if.then, label %for.inc

if.then:                                          ; preds = %for.body
  %4 = trunc i64 %indvars.iv to i32
  %5 = load ptr, ptr @stderr, align 8, !tbaa !13
  %6 = tail call i64 @fwrite(ptr nonnull @.str, i64 75, i64 1, ptr %5) #32
  %7 = load ptr, ptr @stderr, align 8, !tbaa !13
  %8 = tail call i64 @fwrite(ptr nonnull @.str, i64 75, i64 1, ptr %7) #32
  %9 = load ptr, ptr @stderr, align 8, !tbaa !13
  %10 = tail call i64 @fwrite(ptr nonnull @.str, i64 75, i64 1, ptr %9) #32
  %11 = load ptr, ptr @stderr, align 8, !tbaa !13
  %12 = tail call i64 @fwrite(ptr nonnull @.str.1, i64 5, i64 1, ptr %11) #32
  %13 = load ptr, ptr @stderr, align 8, !tbaa !13
  %14 = load ptr, ptr %seq.addr.045, align 8, !tbaa !13
  %arrayidx12 = getelementptr inbounds i8, ptr %14, i64 %indvars.iv
  %15 = load i8, ptr %arrayidx12, align 1, !tbaa !5
  %conv13 = sext i8 %15 to i32
  %call14 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %13, ptr noundef nonnull @.str.2, i32 noundef %conv13) #32
  %16 = load ptr, ptr @stderr, align 8, !tbaa !13
  %add = add nuw nsw i32 %4, 1
  %sub.ptr.lhs.cast = ptrtoint ptr %seq.addr.045 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %seq to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %17 = lshr exact i64 %sub.ptr.sub, 3
  %18 = trunc i64 %17 to i32
  %conv16 = add i32 %18, 1
  %call17 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %16, ptr noundef nonnull @.str.3, i32 noundef %add, i32 noundef %conv16) #32
  %19 = load ptr, ptr @stderr, align 8, !tbaa !13
  %20 = tail call i64 @fwrite(ptr nonnull @.str.1, i64 5, i64 1, ptr %19) #32
  %21 = load ptr, ptr @stderr, align 8, !tbaa !13
  %22 = tail call i64 @fwrite(ptr nonnull @.str, i64 75, i64 1, ptr %21) #32
  %23 = load ptr, ptr @stderr, align 8, !tbaa !13
  %24 = tail call i64 @fwrite(ptr nonnull @.str, i64 75, i64 1, ptr %23) #32
  %25 = load ptr, ptr @stderr, align 8, !tbaa !13
  %26 = tail call i64 @fwrite(ptr nonnull @.str, i64 75, i64 1, ptr %25) #32
  %27 = load ptr, ptr %seq.addr.045, align 8, !tbaa !13
  %arrayidx23 = getelementptr inbounds i8, ptr %27, i64 %indvars.iv
  %28 = load i8, ptr %arrayidx23, align 1, !tbaa !5
  br label %cleanup

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !15

for.end:                                          ; preds = %for.inc, %while.body
  %incdec.ptr = getelementptr inbounds ptr, ptr %seq.addr.045, i64 1
  %29 = load ptr, ptr %incdec.ptr, align 8, !tbaa !13
  %tobool.not = icmp eq ptr %29, null
  br i1 %tobool.not, label %cleanup, label %while.body, !llvm.loop !16

cleanup:                                          ; preds = %for.end, %entry, %if.then
  %retval.0 = phi i8 [ %28, %if.then ], [ 0, %entry ], [ 0, %for.end ]
  ret i8 %retval.0
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare noundef i32 @fprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #4

; Function Attrs: nofree nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @scmx_calc(i32 noundef %icyc, ptr nocapture noundef readonly %aseq, ptr nocapture noundef readonly %effarr, ptr nocapture noundef readonly %scmx) local_unnamed_addr #5 {
entry:
  %0 = load ptr, ptr %aseq, align 8, !tbaa !13
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #31
  %conv = trunc i64 %call to i32
  %cmp123 = icmp sgt i32 %conv, 0
  br i1 %cmp123, label %for.cond2.preheader.preheader, label %for.cond12.preheader

for.cond2.preheader.preheader:                    ; preds = %entry
  %wide.trip.count = and i64 %call, 4294967295
  %arrayidx6.2.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 2
  %.pre = load ptr, ptr %arrayidx6.2.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.3.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 3
  %.pre156 = load ptr, ptr %arrayidx6.3.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.4.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 4
  %.pre157 = load ptr, ptr %arrayidx6.4.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.5.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 5
  %.pre158 = load ptr, ptr %arrayidx6.5.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.6.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 6
  %.pre159 = load ptr, ptr %arrayidx6.6.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.7.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 7
  %.pre160 = load ptr, ptr %arrayidx6.7.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.8.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 8
  %.pre161 = load ptr, ptr %arrayidx6.8.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.9.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 9
  %.pre162 = load ptr, ptr %arrayidx6.9.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.10.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 10
  %.pre163 = load ptr, ptr %arrayidx6.10.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.11.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 11
  %.pre164 = load ptr, ptr %arrayidx6.11.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.12.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 12
  %.pre165 = load ptr, ptr %arrayidx6.12.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.13.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 13
  %.pre166 = load ptr, ptr %arrayidx6.13.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.14.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 14
  %.pre167 = load ptr, ptr %arrayidx6.14.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.15.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 15
  %.pre168 = load ptr, ptr %arrayidx6.15.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.16.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 16
  %.pre169 = load ptr, ptr %arrayidx6.16.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.17.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 17
  %.pre170 = load ptr, ptr %arrayidx6.17.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.18.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 18
  %.pre171 = load ptr, ptr %arrayidx6.18.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.19.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 19
  %.pre172 = load ptr, ptr %arrayidx6.19.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.20.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 20
  %.pre173 = load ptr, ptr %arrayidx6.20.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.21.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 21
  %.pre174 = load ptr, ptr %arrayidx6.21.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.22.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 22
  %.pre175 = load ptr, ptr %arrayidx6.22.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.23.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 23
  %.pre176 = load ptr, ptr %arrayidx6.23.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.24.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 24
  %.pre177 = load ptr, ptr %arrayidx6.24.phi.trans.insert, align 8, !tbaa !13
  %arrayidx6.25.phi.trans.insert = getelementptr inbounds ptr, ptr %scmx, i64 25
  %.pre178 = load ptr, ptr %arrayidx6.25.phi.trans.insert, align 8, !tbaa !13
  %1 = load ptr, ptr %scmx, align 8, !tbaa !13
  %arrayidx6.1 = getelementptr inbounds ptr, ptr %scmx, i64 1
  %2 = load ptr, ptr %arrayidx6.1, align 8, !tbaa !13
  br label %for.cond2.preheader

for.cond2.preheader:                              ; preds = %for.cond2.preheader.preheader, %for.cond2.preheader
  %indvars.iv = phi i64 [ 0, %for.cond2.preheader.preheader ], [ %indvars.iv.next, %for.cond2.preheader ]
  %arrayidx8 = getelementptr inbounds float, ptr %1, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8, align 4, !tbaa !17
  %arrayidx8.1 = getelementptr inbounds float, ptr %2, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.1, align 4, !tbaa !17
  %arrayidx8.2 = getelementptr inbounds float, ptr %.pre, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.2, align 4, !tbaa !17
  %arrayidx8.3 = getelementptr inbounds float, ptr %.pre156, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.3, align 4, !tbaa !17
  %arrayidx8.4 = getelementptr inbounds float, ptr %.pre157, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.4, align 4, !tbaa !17
  %arrayidx8.5 = getelementptr inbounds float, ptr %.pre158, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.5, align 4, !tbaa !17
  %arrayidx8.6 = getelementptr inbounds float, ptr %.pre159, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.6, align 4, !tbaa !17
  %arrayidx8.7 = getelementptr inbounds float, ptr %.pre160, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.7, align 4, !tbaa !17
  %arrayidx8.8 = getelementptr inbounds float, ptr %.pre161, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.8, align 4, !tbaa !17
  %arrayidx8.9 = getelementptr inbounds float, ptr %.pre162, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.9, align 4, !tbaa !17
  %arrayidx8.10 = getelementptr inbounds float, ptr %.pre163, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.10, align 4, !tbaa !17
  %arrayidx8.11 = getelementptr inbounds float, ptr %.pre164, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.11, align 4, !tbaa !17
  %arrayidx8.12 = getelementptr inbounds float, ptr %.pre165, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.12, align 4, !tbaa !17
  %arrayidx8.13 = getelementptr inbounds float, ptr %.pre166, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.13, align 4, !tbaa !17
  %arrayidx8.14 = getelementptr inbounds float, ptr %.pre167, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.14, align 4, !tbaa !17
  %arrayidx8.15 = getelementptr inbounds float, ptr %.pre168, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.15, align 4, !tbaa !17
  %arrayidx8.16 = getelementptr inbounds float, ptr %.pre169, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.16, align 4, !tbaa !17
  %arrayidx8.17 = getelementptr inbounds float, ptr %.pre170, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.17, align 4, !tbaa !17
  %arrayidx8.18 = getelementptr inbounds float, ptr %.pre171, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.18, align 4, !tbaa !17
  %arrayidx8.19 = getelementptr inbounds float, ptr %.pre172, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.19, align 4, !tbaa !17
  %arrayidx8.20 = getelementptr inbounds float, ptr %.pre173, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.20, align 4, !tbaa !17
  %arrayidx8.21 = getelementptr inbounds float, ptr %.pre174, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.21, align 4, !tbaa !17
  %arrayidx8.22 = getelementptr inbounds float, ptr %.pre175, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.22, align 4, !tbaa !17
  %arrayidx8.23 = getelementptr inbounds float, ptr %.pre176, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.23, align 4, !tbaa !17
  %arrayidx8.24 = getelementptr inbounds float, ptr %.pre177, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.24, align 4, !tbaa !17
  %arrayidx8.25 = getelementptr inbounds float, ptr %.pre178, i64 %indvars.iv
  store float 0.000000e+00, ptr %arrayidx8.25, align 4, !tbaa !17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond12.preheader, label %for.cond2.preheader, !llvm.loop !19

for.cond12.preheader:                             ; preds = %for.cond2.preheader, %entry
  %cmp13.not125 = icmp slt i32 %icyc, 0
  br i1 %cmp13.not125, label %for.end88, label %for.body15.preheader

for.body15.preheader:                             ; preds = %for.cond12.preheader
  %3 = add nuw i32 %icyc, 1
  %wide.trip.count139 = zext i32 %3 to i64
  %4 = add nsw i64 %wide.trip.count139, -1
  %xtraiter = and i64 %wide.trip.count139, 1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %for.cond32.preheader.unr-lcssa, label %for.body15.preheader.new

for.body15.preheader.new:                         ; preds = %for.body15.preheader
  %unroll_iter = and i64 %wide.trip.count139, 4294967294
  br label %for.body15

for.cond32.preheader.unr-lcssa:                   ; preds = %for.body15, %for.body15.preheader
  %indvars.iv136.unr = phi i64 [ 0, %for.body15.preheader ], [ %indvars.iv.next137.1, %for.body15 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond32.preheader, label %for.body15.epil

for.body15.epil:                                  ; preds = %for.cond32.preheader.unr-lcssa
  %arrayidx17.epil = getelementptr inbounds ptr, ptr %aseq, i64 %indvars.iv136.unr
  %6 = load ptr, ptr %arrayidx17.epil, align 8, !tbaa !13
  %7 = load i8, ptr %6, align 1, !tbaa !5
  %idxprom20.epil = sext i8 %7 to i64
  %arrayidx21.epil = getelementptr inbounds [128 x i32], ptr @amino_n, i64 0, i64 %idxprom20.epil
  %8 = load i32, ptr %arrayidx21.epil, align 4, !tbaa !10
  %arrayidx23.epil = getelementptr inbounds double, ptr %effarr, i64 %indvars.iv136.unr
  %9 = load double, ptr %arrayidx23.epil, align 8, !tbaa !20
  %conv24.epil = fptrunc double %9 to float
  %idxprom25.epil = sext i32 %8 to i64
  %arrayidx26.epil = getelementptr inbounds ptr, ptr %scmx, i64 %idxprom25.epil
  %10 = load ptr, ptr %arrayidx26.epil, align 8, !tbaa !13
  %11 = load float, ptr %10, align 4, !tbaa !17
  %add28.epil = fadd float %11, %conv24.epil
  store float %add28.epil, ptr %10, align 4, !tbaa !17
  br label %for.cond32.preheader

for.cond32.preheader:                             ; preds = %for.cond32.preheader.unr-lcssa, %for.body15.epil
  %sub = add i32 %conv, -1
  %cmp33129 = icmp sgt i32 %conv, 2
  br i1 %cmp33129, label %for.cond36.preheader.lr.ph, label %for.cond63.preheader

for.cond36.preheader.lr.ph:                       ; preds = %for.cond32.preheader
  br i1 %cmp13.not125, label %for.end88, label %for.cond36.preheader.preheader

for.cond36.preheader.preheader:                   ; preds = %for.cond36.preheader.lr.ph
  %wide.trip.count149 = zext i32 %sub to i64
  %xtraiter186 = and i64 %wide.trip.count139, 1
  %12 = icmp eq i64 %4, 0
  %unroll_iter188 = and i64 %wide.trip.count139, 4294967294
  %lcmp.mod187.not = icmp eq i64 %xtraiter186, 0
  br label %for.cond36.preheader

for.body15:                                       ; preds = %for.body15, %for.body15.preheader.new
  %indvars.iv136 = phi i64 [ 0, %for.body15.preheader.new ], [ %indvars.iv.next137.1, %for.body15 ]
  %niter = phi i64 [ 0, %for.body15.preheader.new ], [ %niter.next.1, %for.body15 ]
  %arrayidx17 = getelementptr inbounds ptr, ptr %aseq, i64 %indvars.iv136
  %13 = load ptr, ptr %arrayidx17, align 8, !tbaa !13
  %14 = load i8, ptr %13, align 1, !tbaa !5
  %idxprom20 = sext i8 %14 to i64
  %arrayidx21 = getelementptr inbounds [128 x i32], ptr @amino_n, i64 0, i64 %idxprom20
  %15 = load i32, ptr %arrayidx21, align 4, !tbaa !10
  %arrayidx23 = getelementptr inbounds double, ptr %effarr, i64 %indvars.iv136
  %16 = load double, ptr %arrayidx23, align 8, !tbaa !20
  %conv24 = fptrunc double %16 to float
  %idxprom25 = sext i32 %15 to i64
  %arrayidx26 = getelementptr inbounds ptr, ptr %scmx, i64 %idxprom25
  %17 = load ptr, ptr %arrayidx26, align 8, !tbaa !13
  %18 = load float, ptr %17, align 4, !tbaa !17
  %add28 = fadd float %18, %conv24
  store float %add28, ptr %17, align 4, !tbaa !17
  %indvars.iv.next137 = or i64 %indvars.iv136, 1
  %arrayidx17.1 = getelementptr inbounds ptr, ptr %aseq, i64 %indvars.iv.next137
  %19 = load ptr, ptr %arrayidx17.1, align 8, !tbaa !13
  %20 = load i8, ptr %19, align 1, !tbaa !5
  %idxprom20.1 = sext i8 %20 to i64
  %arrayidx21.1 = getelementptr inbounds [128 x i32], ptr @amino_n, i64 0, i64 %idxprom20.1
  %21 = load i32, ptr %arrayidx21.1, align 4, !tbaa !10
  %arrayidx23.1 = getelementptr inbounds double, ptr %effarr, i64 %indvars.iv.next137
  %22 = load double, ptr %arrayidx23.1, align 8, !tbaa !20
  %conv24.1 = fptrunc double %22 to float
  %idxprom25.1 = sext i32 %21 to i64
  %arrayidx26.1 = getelementptr inbounds ptr, ptr %scmx, i64 %idxprom25.1
  %23 = load ptr, ptr %arrayidx26.1, align 8, !tbaa !13
  %24 = load float, ptr %23, align 4, !tbaa !17
  %add28.1 = fadd float %24, %conv24.1
  store float %add28.1, ptr %23, align 4, !tbaa !17
  %indvars.iv.next137.1 = add nuw nsw i64 %indvars.iv136, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond32.preheader.unr-lcssa, label %for.body15, !llvm.loop !22

for.cond36.preheader:                             ; preds = %for.cond36.preheader.preheader, %for.cond36.for.inc60_crit_edge
  %indvars.iv146 = phi i64 [ 1, %for.cond36.preheader.preheader ], [ %indvars.iv.next147, %for.cond36.for.inc60_crit_edge ]
  br i1 %12, label %for.cond36.for.inc60_crit_edge.unr-lcssa, label %for.body40

for.cond63.preheader:                             ; preds = %for.cond36.for.inc60_crit_edge, %for.cond32.preheader
  br i1 %cmp13.not125, label %for.end88, label %for.body67.lr.ph

for.body67.lr.ph:                                 ; preds = %for.cond63.preheader
  %idxprom72 = sext i32 %sub to i64
  %xtraiter190 = and i64 %wide.trip.count139, 1
  %25 = icmp eq i64 %4, 0
  br i1 %25, label %for.end88.loopexit.unr-lcssa, label %for.body67.lr.ph.new

for.body67.lr.ph.new:                             ; preds = %for.body67.lr.ph
  %unroll_iter192 = and i64 %wide.trip.count139, 4294967294
  br label %for.body67

for.body40:                                       ; preds = %for.cond36.preheader, %for.body40
  %indvars.iv141 = phi i64 [ %indvars.iv.next142.1, %for.body40 ], [ 0, %for.cond36.preheader ]
  %niter189 = phi i64 [ %niter189.next.1, %for.body40 ], [ 0, %for.cond36.preheader ]
  %arrayidx43 = getelementptr inbounds ptr, ptr %aseq, i64 %indvars.iv141
  %26 = load ptr, ptr %arrayidx43, align 8, !tbaa !13
  %arrayidx45 = getelementptr inbounds i8, ptr %26, i64 %indvars.iv146
  %27 = load i8, ptr %arrayidx45, align 1, !tbaa !5
  %idxprom47 = sext i8 %27 to i64
  %arrayidx48 = getelementptr inbounds [128 x i32], ptr @amino_n, i64 0, i64 %idxprom47
  %28 = load i32, ptr %arrayidx48, align 4, !tbaa !10
  %arrayidx50 = getelementptr inbounds double, ptr %effarr, i64 %indvars.iv141
  %29 = load double, ptr %arrayidx50, align 8, !tbaa !20
  %conv51 = fptrunc double %29 to float
  %idxprom52 = sext i32 %28 to i64
  %arrayidx53 = getelementptr inbounds ptr, ptr %scmx, i64 %idxprom52
  %30 = load ptr, ptr %arrayidx53, align 8, !tbaa !13
  %arrayidx55 = getelementptr inbounds float, ptr %30, i64 %indvars.iv146
  %31 = load float, ptr %arrayidx55, align 4, !tbaa !17
  %add56 = fadd float %31, %conv51
  store float %add56, ptr %arrayidx55, align 4, !tbaa !17
  %indvars.iv.next142 = or i64 %indvars.iv141, 1
  %arrayidx43.1 = getelementptr inbounds ptr, ptr %aseq, i64 %indvars.iv.next142
  %32 = load ptr, ptr %arrayidx43.1, align 8, !tbaa !13
  %arrayidx45.1 = getelementptr inbounds i8, ptr %32, i64 %indvars.iv146
  %33 = load i8, ptr %arrayidx45.1, align 1, !tbaa !5
  %idxprom47.1 = sext i8 %33 to i64
  %arrayidx48.1 = getelementptr inbounds [128 x i32], ptr @amino_n, i64 0, i64 %idxprom47.1
  %34 = load i32, ptr %arrayidx48.1, align 4, !tbaa !10
  %arrayidx50.1 = getelementptr inbounds double, ptr %effarr, i64 %indvars.iv.next142
  %35 = load double, ptr %arrayidx50.1, align 8, !tbaa !20
  %conv51.1 = fptrunc double %35 to float
  %idxprom52.1 = sext i32 %34 to i64
  %arrayidx53.1 = getelementptr inbounds ptr, ptr %scmx, i64 %idxprom52.1
  %36 = load ptr, ptr %arrayidx53.1, align 8, !tbaa !13
  %arrayidx55.1 = getelementptr inbounds float, ptr %36, i64 %indvars.iv146
  %37 = load float, ptr %arrayidx55.1, align 4, !tbaa !17
  %add56.1 = fadd float %37, %conv51.1
  store float %add56.1, ptr %arrayidx55.1, align 4, !tbaa !17
  %indvars.iv.next142.1 = add nuw nsw i64 %indvars.iv141, 2
  %niter189.next.1 = add i64 %niter189, 2
  %niter189.ncmp.1 = icmp eq i64 %niter189.next.1, %unroll_iter188
  br i1 %niter189.ncmp.1, label %for.cond36.for.inc60_crit_edge.unr-lcssa, label %for.body40, !llvm.loop !23

for.cond36.for.inc60_crit_edge.unr-lcssa:         ; preds = %for.body40, %for.cond36.preheader
  %indvars.iv141.unr = phi i64 [ 0, %for.cond36.preheader ], [ %indvars.iv.next142.1, %for.body40 ]
  br i1 %lcmp.mod187.not, label %for.cond36.for.inc60_crit_edge, label %for.body40.epil

for.body40.epil:                                  ; preds = %for.cond36.for.inc60_crit_edge.unr-lcssa
  %arrayidx43.epil = getelementptr inbounds ptr, ptr %aseq, i64 %indvars.iv141.unr
  %38 = load ptr, ptr %arrayidx43.epil, align 8, !tbaa !13
  %arrayidx45.epil = getelementptr inbounds i8, ptr %38, i64 %indvars.iv146
  %39 = load i8, ptr %arrayidx45.epil, align 1, !tbaa !5
  %idxprom47.epil = sext i8 %39 to i64
  %arrayidx48.epil = getelementptr inbounds [128 x i32], ptr @amino_n, i64 0, i64 %idxprom47.epil
  %40 = load i32, ptr %arrayidx48.epil, align 4, !tbaa !10
  %arrayidx50.epil = getelementptr inbounds double, ptr %effarr, i64 %indvars.iv141.unr
  %41 = load double, ptr %arrayidx50.epil, align 8, !tbaa !20
  %conv51.epil = fptrunc double %41 to float
  %idxprom52.epil = sext i32 %40 to i64
  %arrayidx53.epil = getelementptr inbounds ptr, ptr %scmx, i64 %idxprom52.epil
  %42 = load ptr, ptr %arrayidx53.epil, align 8, !tbaa !13
  %arrayidx55.epil = getelementptr inbounds float, ptr %42, i64 %indvars.iv146
  %43 = load float, ptr %arrayidx55.epil, align 4, !tbaa !17
  %add56.epil = fadd float %43, %conv51.epil
  store float %add56.epil, ptr %arrayidx55.epil, align 4, !tbaa !17
  br label %for.cond36.for.inc60_crit_edge

for.cond36.for.inc60_crit_edge:                   ; preds = %for.cond36.for.inc60_crit_edge.unr-lcssa, %for.body40.epil
  %indvars.iv.next147 = add nuw nsw i64 %indvars.iv146, 1
  %exitcond150.not = icmp eq i64 %indvars.iv.next147, %wide.trip.count149
  br i1 %exitcond150.not, label %for.cond63.preheader, label %for.cond36.preheader, !llvm.loop !24

for.body67:                                       ; preds = %for.body67, %for.body67.lr.ph.new
  %indvars.iv151 = phi i64 [ 0, %for.body67.lr.ph.new ], [ %indvars.iv.next152.1, %for.body67 ]
  %niter193 = phi i64 [ 0, %for.body67.lr.ph.new ], [ %niter193.next.1, %for.body67 ]
  %arrayidx70 = getelementptr inbounds ptr, ptr %aseq, i64 %indvars.iv151
  %44 = load ptr, ptr %arrayidx70, align 8, !tbaa !13
  %arrayidx73 = getelementptr inbounds i8, ptr %44, i64 %idxprom72
  %45 = load i8, ptr %arrayidx73, align 1, !tbaa !5
  %idxprom75 = sext i8 %45 to i64
  %arrayidx76 = getelementptr inbounds [128 x i32], ptr @amino_n, i64 0, i64 %idxprom75
  %46 = load i32, ptr %arrayidx76, align 4, !tbaa !10
  %arrayidx78 = getelementptr inbounds double, ptr %effarr, i64 %indvars.iv151
  %47 = load double, ptr %arrayidx78, align 8, !tbaa !20
  %conv79 = fptrunc double %47 to float
  %idxprom80 = sext i32 %46 to i64
  %arrayidx81 = getelementptr inbounds ptr, ptr %scmx, i64 %idxprom80
  %48 = load ptr, ptr %arrayidx81, align 8, !tbaa !13
  %arrayidx84 = getelementptr inbounds float, ptr %48, i64 %idxprom72
  %49 = load float, ptr %arrayidx84, align 4, !tbaa !17
  %add85 = fadd float %49, %conv79
  store float %add85, ptr %arrayidx84, align 4, !tbaa !17
  %indvars.iv.next152 = or i64 %indvars.iv151, 1
  %arrayidx70.1 = getelementptr inbounds ptr, ptr %aseq, i64 %indvars.iv.next152
  %50 = load ptr, ptr %arrayidx70.1, align 8, !tbaa !13
  %arrayidx73.1 = getelementptr inbounds i8, ptr %50, i64 %idxprom72
  %51 = load i8, ptr %arrayidx73.1, align 1, !tbaa !5
  %idxprom75.1 = sext i8 %51 to i64
  %arrayidx76.1 = getelementptr inbounds [128 x i32], ptr @amino_n, i64 0, i64 %idxprom75.1
  %52 = load i32, ptr %arrayidx76.1, align 4, !tbaa !10
  %arrayidx78.1 = getelementptr inbounds double, ptr %effarr, i64 %indvars.iv.next152
  %53 = load double, ptr %arrayidx78.1, align 8, !tbaa !20
  %conv79.1 = fptrunc double %53 to float
  %idxprom80.1 = sext i32 %52 to i64
  %arrayidx81.1 = getelementptr inbounds ptr, ptr %scmx, i64 %idxprom80.1
  %54 = load ptr, ptr %arrayidx81.1, align 8, !tbaa !13
  %arrayidx84.1 = getelementptr inbounds float, ptr %54, i64 %idxprom72
  %55 = load float, ptr %arrayidx84.1, align 4, !tbaa !17
  %add85.1 = fadd float %55, %conv79.1
  store float %add85.1, ptr %arrayidx84.1, align 4, !tbaa !17
  %indvars.iv.next152.1 = add nuw nsw i64 %indvars.iv151, 2
  %niter193.next.1 = add i64 %niter193, 2
  %niter193.ncmp.1 = icmp eq i64 %niter193.next.1, %unroll_iter192
  br i1 %niter193.ncmp.1, label %for.end88.loopexit.unr-lcssa, label %for.body67, !llvm.loop !25

for.end88.loopexit.unr-lcssa:                     ; preds = %for.body67, %for.body67.lr.ph
  %indvars.iv151.unr = phi i64 [ 0, %for.body67.lr.ph ], [ %indvars.iv.next152.1, %for.body67 ]
  %lcmp.mod191.not = icmp eq i64 %xtraiter190, 0
  br i1 %lcmp.mod191.not, label %for.end88, label %for.body67.epil

for.body67.epil:                                  ; preds = %for.end88.loopexit.unr-lcssa
  %arrayidx70.epil = getelementptr inbounds ptr, ptr %aseq, i64 %indvars.iv151.unr
  %56 = load ptr, ptr %arrayidx70.epil, align 8, !tbaa !13
  %arrayidx73.epil = getelementptr inbounds i8, ptr %56, i64 %idxprom72
  %57 = load i8, ptr %arrayidx73.epil, align 1, !tbaa !5
  %idxprom75.epil = sext i8 %57 to i64
  %arrayidx76.epil = getelementptr inbounds [128 x i32], ptr @amino_n, i64 0, i64 %idxprom75.epil
  %58 = load i32, ptr %arrayidx76.epil, align 4, !tbaa !10
  %arrayidx78.epil = getelementptr inbounds double, ptr %effarr, i64 %indvars.iv151.unr
  %59 = load double, ptr %arrayidx78.epil, align 8, !tbaa !20
  %conv79.epil = fptrunc double %59 to float
  %idxprom80.epil = sext i32 %58 to i64
  %arrayidx81.epil = getelementptr inbounds ptr, ptr %scmx, i64 %idxprom80.epil
  %60 = load ptr, ptr %arrayidx81.epil, align 8, !tbaa !13
  %arrayidx84.epil = getelementptr inbounds float, ptr %60, i64 %idxprom72
  %61 = load float, ptr %arrayidx84.epil, align 4, !tbaa !17
  %add85.epil = fadd float %61, %conv79.epil
  store float %add85.epil, ptr %arrayidx84.epil, align 4, !tbaa !17
  br label %for.end88

for.end88:                                        ; preds = %for.body67.epil, %for.end88.loopexit.unr-lcssa, %for.cond12.preheader, %for.cond36.preheader.lr.ph, %for.cond63.preheader
  ret void
}

; Function Attrs: noreturn nounwind uwtable
define dso_local void @exitall(ptr noundef %arr) local_unnamed_addr #6 {
entry:
  %0 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %0, ptr noundef nonnull @.str.4, ptr noundef %arr) #32
  tail call void @exit(i32 noundef 1) #33
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) local_unnamed_addr #7

; Function Attrs: nofree nounwind uwtable
define dso_local void @display(ptr nocapture noundef readonly %seq, i32 noundef %nseq) local_unnamed_addr #2 {
entry:
  %b = alloca [121 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 121, ptr nonnull %b) #34
  %0 = load i32, ptr @disp, align 4, !tbaa !10
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %1 = load ptr, ptr @stderr, align 8, !tbaa !13
  %2 = tail call i64 @fwrite(ptr nonnull @.str.5, i64 125, i64 1, ptr %1) #32
  %cmp314 = icmp sgt i32 %nseq, 0
  br i1 %cmp314, label %for.body.lr.ph, label %cleanup

for.body.lr.ph:                                   ; preds = %if.end
  %.nseq = tail call i32 @llvm.smin.i32(i32 %nseq, i32 60)
  %arrayidx5 = getelementptr inbounds [121 x i8], ptr %b, i64 0, i64 120
  %wide.trip.count = zext i32 %.nseq to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %arrayidx = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv
  %3 = load ptr, ptr %arrayidx, align 8, !tbaa !13
  %call4 = call ptr @strncpy(ptr noundef nonnull dereferenceable(1) %b, ptr noundef nonnull dereferenceable(1) %3, i64 noundef 120) #34
  store i8 0, ptr %arrayidx5, align 8, !tbaa !5
  %4 = load ptr, ptr @stderr, align 8, !tbaa !13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = trunc i64 %indvars.iv.next to i32
  %call7 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %4, ptr noundef nonnull @.str.6, i32 noundef %5, ptr noundef nonnull %b) #32
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %cleanup, label %for.body, !llvm.loop !26

cleanup:                                          ; preds = %for.body, %if.end, %entry
  call void @llvm.lifetime.end.p0(i64 121, ptr nonnull %b) #34
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite)
declare ptr @strncpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly, i64 noundef) local_unnamed_addr #8

; Function Attrs: nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @intergroup_score_consweight(ptr nocapture noundef readonly %seq1, ptr nocapture noundef readonly %seq2, ptr nocapture noundef readonly %eff1, ptr nocapture noundef readonly %eff2, i32 noundef %clus1, i32 noundef %clus2, i32 noundef %len, ptr nocapture noundef writeonly %value) local_unnamed_addr #9 {
entry:
  %sub = add nsw i32 %len, -2
  store double 0.000000e+00, ptr %value, align 8, !tbaa !20
  %cmp119 = icmp sgt i32 %clus1, 0
  %cmp2117 = icmp sgt i32 %clus2, 0
  %or.cond = and i1 %cmp119, %cmp2117
  br i1 %or.cond, label %for.cond1.preheader.lr.ph.split.us, label %for.end78

for.cond1.preheader.lr.ph.split.us:               ; preds = %entry
  %cmp11112 = icmp sgt i32 %len, 0
  %wide.trip.count152 = zext i32 %clus1 to i64
  %wide.trip.count147 = zext i32 %clus2 to i64
  br i1 %cmp11112, label %for.cond1.preheader.us.us, label %for.cond1.preheader.us.preheader

for.cond1.preheader.us.preheader:                 ; preds = %for.cond1.preheader.lr.ph.split.us
  %xtraiter = and i64 %wide.trip.count147, 1
  %0 = icmp eq i32 %clus2, 1
  %unroll_iter = and i64 %wide.trip.count147, 4294967294
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.cond1.preheader.us

for.cond1.preheader.us.us:                        ; preds = %for.cond1.preheader.lr.ph.split.us, %for.cond1.for.inc76_crit_edge.split.us.us.us
  %1 = phi double [ %15, %for.cond1.for.inc76_crit_edge.split.us.us.us ], [ 0.000000e+00, %for.cond1.preheader.lr.ph.split.us ]
  %indvars.iv149 = phi i64 [ %indvars.iv.next150, %for.cond1.for.inc76_crit_edge.split.us.us.us ], [ 0, %for.cond1.preheader.lr.ph.split.us ]
  %arrayidx.us.us = getelementptr inbounds double, ptr %eff1, i64 %indvars.iv149
  %arrayidx7.us.us = getelementptr inbounds ptr, ptr %seq1, i64 %indvars.iv149
  %2 = load ptr, ptr %arrayidx7.us.us, align 8, !tbaa !13
  br label %for.body3.us.us.us

for.body3.us.us.us:                               ; preds = %for.end.us.us.us, %for.cond1.preheader.us.us
  %3 = phi double [ %15, %for.end.us.us.us ], [ %1, %for.cond1.preheader.us.us ]
  %indvars.iv144 = phi i64 [ %indvars.iv.next145, %for.end.us.us.us ], [ 0, %for.cond1.preheader.us.us ]
  %4 = load double, ptr %arrayidx.us.us, align 8, !tbaa !20
  %arrayidx5.us.us.us = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv144
  %5 = load double, ptr %arrayidx5.us.us.us, align 8, !tbaa !20
  %mul.us.us.us = fmul double %4, %5
  %arrayidx9.us.us.us = getelementptr inbounds ptr, ptr %seq2, i64 %indvars.iv144
  %6 = load ptr, ptr %arrayidx9.us.us.us, align 8, !tbaa !13
  %7 = load i32, ptr @penalty, align 4
  %conv49.us.us.us = sitofp i32 %7 to double
  br label %for.body12.us.us.us

for.body12.us.us.us:                              ; preds = %for.inc.us.us.us, %for.body3.us.us.us
  %k.0114.us.us.us = phi i32 [ 0, %for.body3.us.us.us ], [ %inc71.us.us.us, %for.inc.us.us.us ]
  %tmpscore.0113.us.us.us = phi double [ 0.000000e+00, %for.body3.us.us.us ], [ %tmpscore.1.us.us.us, %for.inc.us.us.us ]
  %idxprom13.us.us.us = sext i32 %k.0114.us.us.us to i64
  %arrayidx14.us.us.us = getelementptr inbounds i8, ptr %2, i64 %idxprom13.us.us.us
  %8 = load i8, ptr %arrayidx14.us.us.us, align 1, !tbaa !5
  %arrayidx16.us.us.us = getelementptr inbounds i8, ptr %6, i64 %idxprom13.us.us.us
  %9 = load i8, ptr %arrayidx16.us.us.us, align 1, !tbaa !5
  %cmp18.us.us.us = icmp eq i8 %8, 45
  %cmp20.us.us.us = icmp eq i8 %9, 45
  %or.cond.us.us.us = select i1 %cmp18.us.us.us, i1 %cmp20.us.us.us, i1 false
  br i1 %or.cond.us.us.us, label %for.inc.us.us.us, label %if.end.us.us.us

if.end.us.us.us:                                  ; preds = %for.body12.us.us.us
  %idxprom22.us.us.us = sext i8 %8 to i64
  %idxprom24.us.us.us = sext i8 %9 to i64
  %arrayidx25.us.us.us = getelementptr inbounds [128 x [128 x double]], ptr @amino_dis_consweight_multi, i64 0, i64 %idxprom22.us.us.us, i64 %idxprom24.us.us.us
  %10 = load double, ptr %arrayidx25.us.us.us, align 8, !tbaa !20
  %add.us.us.us = fadd double %tmpscore.0113.us.us.us, %10
  br i1 %cmp18.us.us.us, label %if.then28.us.us.us, label %if.end45.us.us.us

if.end45.us.us.us:                                ; preds = %if.end.us.us.us
  br i1 %cmp20.us.us.us, label %if.then48.us.us.us, label %for.inc.us.us.us

if.then48.us.us.us:                               ; preds = %if.end45.us.us.us
  %add50.us.us.us = fadd double %add.us.us.us, %conv49.us.us.us
  br label %while.cond56.us.us.us

while.cond56.us.us.us:                            ; preds = %while.cond56.us.us.us, %if.then48.us.us.us
  %indvars.iv138 = phi i64 [ %indvars.iv.next139, %while.cond56.us.us.us ], [ %idxprom13.us.us.us, %if.then48.us.us.us ]
  %indvars.iv.next139 = add i64 %indvars.iv138, 1
  %arrayidx59.us.us.us = getelementptr inbounds i8, ptr %6, i64 %indvars.iv.next139
  %11 = load i8, ptr %arrayidx59.us.us.us, align 1, !tbaa !5
  %cmp61.us.us.us = icmp eq i8 %11, 45
  br i1 %cmp61.us.us.us, label %while.cond56.us.us.us, label %while.end64.us.us.us, !llvm.loop !27

while.end64.us.us.us:                             ; preds = %while.cond56.us.us.us
  %add55.us.us.us = fadd double %10, %add50.us.us.us
  %12 = trunc i64 %indvars.iv138 to i32
  %cmp66.us.us.us = icmp slt i32 %sub, %12
  br i1 %cmp66.us.us.us, label %for.end.us.us.us, label %for.inc.us.us.us

if.then28.us.us.us:                               ; preds = %if.end.us.us.us
  %add30.us.us.us = fadd double %add.us.us.us, %conv49.us.us.us
  br label %while.cond.us.us.us

while.cond.us.us.us:                              ; preds = %while.cond.us.us.us, %if.then28.us.us.us
  %indvars.iv141 = phi i64 [ %indvars.iv.next142, %while.cond.us.us.us ], [ %idxprom13.us.us.us, %if.then28.us.us.us ]
  %indvars.iv.next142 = add i64 %indvars.iv141, 1
  %arrayidx37.us.us.us = getelementptr inbounds i8, ptr %2, i64 %indvars.iv.next142
  %13 = load i8, ptr %arrayidx37.us.us.us, align 1, !tbaa !5
  %cmp39.us.us.us = icmp eq i8 %13, 45
  br i1 %cmp39.us.us.us, label %while.cond.us.us.us, label %while.end.us.us.us, !llvm.loop !28

while.end.us.us.us:                               ; preds = %while.cond.us.us.us
  %add35.us.us.us = fadd double %10, %add30.us.us.us
  %14 = trunc i64 %indvars.iv141 to i32
  %cmp41.us.us.us = icmp slt i32 %sub, %14
  br i1 %cmp41.us.us.us, label %for.end.us.us.us, label %for.inc.us.us.us

for.end.us.us.us:                                 ; preds = %for.inc.us.us.us, %while.end.us.us.us, %while.end64.us.us.us
  %tmpscore.2.us.us.us = phi double [ %add55.us.us.us, %while.end64.us.us.us ], [ %add35.us.us.us, %while.end.us.us.us ], [ %tmpscore.1.us.us.us, %for.inc.us.us.us ]
  %15 = tail call double @llvm.fmuladd.f64(double %tmpscore.2.us.us.us, double %mul.us.us.us, double %3)
  store double %15, ptr %value, align 8, !tbaa !20
  %indvars.iv.next145 = add nuw nsw i64 %indvars.iv144, 1
  %exitcond148.not = icmp eq i64 %indvars.iv.next145, %wide.trip.count147
  br i1 %exitcond148.not, label %for.cond1.for.inc76_crit_edge.split.us.us.us, label %for.body3.us.us.us, !llvm.loop !29

for.inc.us.us.us:                                 ; preds = %while.end.us.us.us, %while.end64.us.us.us, %if.end45.us.us.us, %for.body12.us.us.us
  %tmpscore.1.us.us.us = phi double [ %tmpscore.0113.us.us.us, %for.body12.us.us.us ], [ %add35.us.us.us, %while.end.us.us.us ], [ %add55.us.us.us, %while.end64.us.us.us ], [ %add.us.us.us, %if.end45.us.us.us ]
  %k.3.us.us.us = phi i32 [ %k.0114.us.us.us, %for.body12.us.us.us ], [ %14, %while.end.us.us.us ], [ %12, %while.end64.us.us.us ], [ %k.0114.us.us.us, %if.end45.us.us.us ]
  %inc71.us.us.us = add nsw i32 %k.3.us.us.us, 1
  %cmp11.us.us.us = icmp slt i32 %inc71.us.us.us, %len
  br i1 %cmp11.us.us.us, label %for.body12.us.us.us, label %for.end.us.us.us, !llvm.loop !30

for.cond1.for.inc76_crit_edge.split.us.us.us:     ; preds = %for.end.us.us.us
  %indvars.iv.next150 = add nuw nsw i64 %indvars.iv149, 1
  %exitcond153.not = icmp eq i64 %indvars.iv.next150, %wide.trip.count152
  br i1 %exitcond153.not, label %for.end78, label %for.cond1.preheader.us.us, !llvm.loop !31

for.cond1.preheader.us:                           ; preds = %for.cond1.preheader.us.preheader, %for.cond1.for.inc76_crit_edge.split.us128
  %indvars.iv133 = phi i64 [ %indvars.iv.next134, %for.cond1.for.inc76_crit_edge.split.us128 ], [ 0, %for.cond1.preheader.us.preheader ]
  %16 = phi double [ %.lcssa159, %for.cond1.for.inc76_crit_edge.split.us128 ], [ 0.000000e+00, %for.cond1.preheader.us.preheader ]
  %arrayidx.us = getelementptr inbounds double, ptr %eff1, i64 %indvars.iv133
  br i1 %0, label %for.cond1.for.inc76_crit_edge.split.us128.unr-lcssa, label %for.body3.us121

for.body3.us121:                                  ; preds = %for.cond1.preheader.us, %for.body3.us121
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %for.body3.us121 ], [ 0, %for.cond1.preheader.us ]
  %17 = phi double [ %23, %for.body3.us121 ], [ %16, %for.cond1.preheader.us ]
  %niter = phi i64 [ %niter.next.1, %for.body3.us121 ], [ 0, %for.cond1.preheader.us ]
  %18 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %arrayidx5.us124 = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv
  %19 = load double, ptr %arrayidx5.us124, align 8, !tbaa !20
  %mul.us125 = fmul double %18, %19
  %20 = tail call double @llvm.fmuladd.f64(double %mul.us125, double 0.000000e+00, double %17)
  store double %20, ptr %value, align 8, !tbaa !20
  %indvars.iv.next = or i64 %indvars.iv, 1
  %21 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %arrayidx5.us124.1 = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv.next
  %22 = load double, ptr %arrayidx5.us124.1, align 8, !tbaa !20
  %mul.us125.1 = fmul double %21, %22
  %23 = tail call double @llvm.fmuladd.f64(double %mul.us125.1, double 0.000000e+00, double %20)
  store double %23, ptr %value, align 8, !tbaa !20
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond1.for.inc76_crit_edge.split.us128.unr-lcssa, label %for.body3.us121, !llvm.loop !29

for.cond1.for.inc76_crit_edge.split.us128.unr-lcssa: ; preds = %for.body3.us121, %for.cond1.preheader.us
  %.lcssa159.ph = phi double [ undef, %for.cond1.preheader.us ], [ %23, %for.body3.us121 ]
  %indvars.iv.unr = phi i64 [ 0, %for.cond1.preheader.us ], [ %indvars.iv.next.1, %for.body3.us121 ]
  %.unr = phi double [ %16, %for.cond1.preheader.us ], [ %23, %for.body3.us121 ]
  br i1 %lcmp.mod.not, label %for.cond1.for.inc76_crit_edge.split.us128, label %for.body3.us121.epil

for.body3.us121.epil:                             ; preds = %for.cond1.for.inc76_crit_edge.split.us128.unr-lcssa
  %24 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %arrayidx5.us124.epil = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv.unr
  %25 = load double, ptr %arrayidx5.us124.epil, align 8, !tbaa !20
  %mul.us125.epil = fmul double %24, %25
  %26 = tail call double @llvm.fmuladd.f64(double %mul.us125.epil, double 0.000000e+00, double %.unr)
  store double %26, ptr %value, align 8, !tbaa !20
  br label %for.cond1.for.inc76_crit_edge.split.us128

for.cond1.for.inc76_crit_edge.split.us128:        ; preds = %for.cond1.for.inc76_crit_edge.split.us128.unr-lcssa, %for.body3.us121.epil
  %.lcssa159 = phi double [ %.lcssa159.ph, %for.cond1.for.inc76_crit_edge.split.us128.unr-lcssa ], [ %26, %for.body3.us121.epil ]
  %indvars.iv.next134 = add nuw nsw i64 %indvars.iv133, 1
  %exitcond137.not = icmp eq i64 %indvars.iv.next134, %wide.trip.count152
  br i1 %exitcond137.not, label %for.end78, label %for.cond1.preheader.us, !llvm.loop !31

for.end78:                                        ; preds = %for.cond1.for.inc76_crit_edge.split.us128, %for.cond1.for.inc76_crit_edge.split.us.us.us, %entry
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #10

; Function Attrs: nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @intergroup_score_gapnomi(ptr nocapture noundef readonly %seq1, ptr nocapture noundef readonly %seq2, ptr nocapture noundef readonly %eff1, ptr nocapture noundef readonly %eff2, i32 noundef %clus1, i32 noundef %clus2, i32 noundef %len, ptr nocapture noundef writeonly %value) local_unnamed_addr #9 {
entry:
  %sub = add nsw i32 %len, -2
  store double 0.000000e+00, ptr %value, align 8, !tbaa !20
  %cmp95 = icmp sgt i32 %clus1, 0
  %cmp293 = icmp sgt i32 %clus2, 0
  %or.cond = and i1 %cmp95, %cmp293
  br i1 %or.cond, label %for.cond1.preheader.lr.ph.split.us, label %for.end63

for.cond1.preheader.lr.ph.split.us:               ; preds = %entry
  %cmp1188 = icmp sgt i32 %len, 0
  %wide.trip.count128 = zext i32 %clus1 to i64
  %wide.trip.count123 = zext i32 %clus2 to i64
  br i1 %cmp1188, label %for.cond1.preheader.us.us, label %for.cond1.preheader.us.preheader

for.cond1.preheader.us.preheader:                 ; preds = %for.cond1.preheader.lr.ph.split.us
  %xtraiter = and i64 %wide.trip.count123, 1
  %0 = icmp eq i32 %clus2, 1
  %unroll_iter = and i64 %wide.trip.count123, 4294967294
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.cond1.preheader.us

for.cond1.preheader.us.us:                        ; preds = %for.cond1.preheader.lr.ph.split.us, %for.cond1.for.inc61_crit_edge.split.us.us.us
  %1 = phi double [ %14, %for.cond1.for.inc61_crit_edge.split.us.us.us ], [ 0.000000e+00, %for.cond1.preheader.lr.ph.split.us ]
  %indvars.iv125 = phi i64 [ %indvars.iv.next126, %for.cond1.for.inc61_crit_edge.split.us.us.us ], [ 0, %for.cond1.preheader.lr.ph.split.us ]
  %arrayidx.us.us = getelementptr inbounds double, ptr %eff1, i64 %indvars.iv125
  %arrayidx7.us.us = getelementptr inbounds ptr, ptr %seq1, i64 %indvars.iv125
  %2 = load ptr, ptr %arrayidx7.us.us, align 8, !tbaa !13
  br label %for.body3.us.us.us

for.body3.us.us.us:                               ; preds = %for.end.us.us.us, %for.cond1.preheader.us.us
  %3 = phi double [ %14, %for.end.us.us.us ], [ %1, %for.cond1.preheader.us.us ]
  %indvars.iv120 = phi i64 [ %indvars.iv.next121, %for.end.us.us.us ], [ 0, %for.cond1.preheader.us.us ]
  %4 = load double, ptr %arrayidx.us.us, align 8, !tbaa !20
  %arrayidx5.us.us.us = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv120
  %5 = load double, ptr %arrayidx5.us.us.us, align 8, !tbaa !20
  %mul.us.us.us = fmul double %4, %5
  %arrayidx9.us.us.us = getelementptr inbounds ptr, ptr %seq2, i64 %indvars.iv120
  %6 = load ptr, ptr %arrayidx9.us.us.us, align 8, !tbaa !13
  %7 = load i32, ptr @penalty, align 4
  %conv39.us.us.us = sitofp i32 %7 to double
  br label %for.body12.us.us.us

for.body12.us.us.us:                              ; preds = %for.inc.us.us.us, %for.body3.us.us.us
  %k.090.us.us.us = phi i32 [ 0, %for.body3.us.us.us ], [ %inc56.us.us.us, %for.inc.us.us.us ]
  %tmpscore.089.us.us.us = phi double [ 0.000000e+00, %for.body3.us.us.us ], [ %tmpscore.1.us.us.us, %for.inc.us.us.us ]
  %idxprom13.us.us.us = sext i32 %k.090.us.us.us to i64
  %arrayidx14.us.us.us = getelementptr inbounds i8, ptr %2, i64 %idxprom13.us.us.us
  %8 = load i8, ptr %arrayidx14.us.us.us, align 1, !tbaa !5
  %arrayidx16.us.us.us = getelementptr inbounds i8, ptr %6, i64 %idxprom13.us.us.us
  %9 = load i8, ptr %arrayidx16.us.us.us, align 1, !tbaa !5
  %cmp18.us.us.us = icmp eq i8 %8, 45
  %cmp20.us.us.us = icmp eq i8 %9, 45
  %or.cond.us.us.us = select i1 %cmp18.us.us.us, i1 %cmp20.us.us.us, i1 false
  br i1 %or.cond.us.us.us, label %for.inc.us.us.us, label %if.end.us.us.us

if.end.us.us.us:                                  ; preds = %for.body12.us.us.us
  br i1 %cmp18.us.us.us, label %while.cond.us.us.us, label %if.end35.us.us.us

if.end35.us.us.us:                                ; preds = %if.end.us.us.us
  br i1 %cmp20.us.us.us, label %while.cond41.us.us.us, label %for.inc.us.us.us

while.cond41.us.us.us:                            ; preds = %if.end35.us.us.us, %while.cond41.us.us.us
  %indvars.iv114 = phi i64 [ %indvars.iv.next115, %while.cond41.us.us.us ], [ %idxprom13.us.us.us, %if.end35.us.us.us ]
  %indvars.iv.next115 = add i64 %indvars.iv114, 1
  %arrayidx44.us.us.us = getelementptr inbounds i8, ptr %6, i64 %indvars.iv.next115
  %10 = load i8, ptr %arrayidx44.us.us.us, align 1, !tbaa !5
  %cmp46.us.us.us = icmp eq i8 %10, 45
  br i1 %cmp46.us.us.us, label %while.cond41.us.us.us, label %while.end49.us.us.us, !llvm.loop !32

while.end49.us.us.us:                             ; preds = %while.cond41.us.us.us
  %add40.us.us.us = fadd double %tmpscore.089.us.us.us, %conv39.us.us.us
  %11 = trunc i64 %indvars.iv114 to i32
  %cmp51.us.us.us = icmp slt i32 %sub, %11
  br i1 %cmp51.us.us.us, label %for.end.us.us.us, label %for.inc.us.us.us

while.cond.us.us.us:                              ; preds = %if.end.us.us.us, %while.cond.us.us.us
  %indvars.iv117 = phi i64 [ %indvars.iv.next118, %while.cond.us.us.us ], [ %idxprom13.us.us.us, %if.end.us.us.us ]
  %indvars.iv.next118 = add i64 %indvars.iv117, 1
  %arrayidx27.us.us.us = getelementptr inbounds i8, ptr %2, i64 %indvars.iv.next118
  %12 = load i8, ptr %arrayidx27.us.us.us, align 1, !tbaa !5
  %cmp29.us.us.us = icmp eq i8 %12, 45
  br i1 %cmp29.us.us.us, label %while.cond.us.us.us, label %while.end.us.us.us, !llvm.loop !33

while.end.us.us.us:                               ; preds = %while.cond.us.us.us
  %add.us.us.us = fadd double %tmpscore.089.us.us.us, %conv39.us.us.us
  %13 = trunc i64 %indvars.iv117 to i32
  %cmp31.us.us.us = icmp slt i32 %sub, %13
  br i1 %cmp31.us.us.us, label %for.end.us.us.us, label %for.inc.us.us.us

for.end.us.us.us:                                 ; preds = %for.inc.us.us.us, %while.end.us.us.us, %while.end49.us.us.us
  %tmpscore.2.us.us.us = phi double [ %add40.us.us.us, %while.end49.us.us.us ], [ %add.us.us.us, %while.end.us.us.us ], [ %tmpscore.1.us.us.us, %for.inc.us.us.us ]
  %14 = tail call double @llvm.fmuladd.f64(double %tmpscore.2.us.us.us, double %mul.us.us.us, double %3)
  store double %14, ptr %value, align 8, !tbaa !20
  %indvars.iv.next121 = add nuw nsw i64 %indvars.iv120, 1
  %exitcond124.not = icmp eq i64 %indvars.iv.next121, %wide.trip.count123
  br i1 %exitcond124.not, label %for.cond1.for.inc61_crit_edge.split.us.us.us, label %for.body3.us.us.us, !llvm.loop !34

for.inc.us.us.us:                                 ; preds = %while.end.us.us.us, %while.end49.us.us.us, %if.end35.us.us.us, %for.body12.us.us.us
  %tmpscore.1.us.us.us = phi double [ %tmpscore.089.us.us.us, %for.body12.us.us.us ], [ %add.us.us.us, %while.end.us.us.us ], [ %add40.us.us.us, %while.end49.us.us.us ], [ %tmpscore.089.us.us.us, %if.end35.us.us.us ]
  %k.3.us.us.us = phi i32 [ %k.090.us.us.us, %for.body12.us.us.us ], [ %13, %while.end.us.us.us ], [ %11, %while.end49.us.us.us ], [ %k.090.us.us.us, %if.end35.us.us.us ]
  %inc56.us.us.us = add nsw i32 %k.3.us.us.us, 1
  %cmp11.us.us.us = icmp slt i32 %inc56.us.us.us, %len
  br i1 %cmp11.us.us.us, label %for.body12.us.us.us, label %for.end.us.us.us, !llvm.loop !35

for.cond1.for.inc61_crit_edge.split.us.us.us:     ; preds = %for.end.us.us.us
  %indvars.iv.next126 = add nuw nsw i64 %indvars.iv125, 1
  %exitcond129.not = icmp eq i64 %indvars.iv.next126, %wide.trip.count128
  br i1 %exitcond129.not, label %for.end63, label %for.cond1.preheader.us.us, !llvm.loop !36

for.cond1.preheader.us:                           ; preds = %for.cond1.preheader.us.preheader, %for.cond1.for.inc61_crit_edge.split.us104
  %indvars.iv109 = phi i64 [ %indvars.iv.next110, %for.cond1.for.inc61_crit_edge.split.us104 ], [ 0, %for.cond1.preheader.us.preheader ]
  %15 = phi double [ %.lcssa135, %for.cond1.for.inc61_crit_edge.split.us104 ], [ 0.000000e+00, %for.cond1.preheader.us.preheader ]
  %arrayidx.us = getelementptr inbounds double, ptr %eff1, i64 %indvars.iv109
  br i1 %0, label %for.cond1.for.inc61_crit_edge.split.us104.unr-lcssa, label %for.body3.us97

for.body3.us97:                                   ; preds = %for.cond1.preheader.us, %for.body3.us97
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %for.body3.us97 ], [ 0, %for.cond1.preheader.us ]
  %16 = phi double [ %22, %for.body3.us97 ], [ %15, %for.cond1.preheader.us ]
  %niter = phi i64 [ %niter.next.1, %for.body3.us97 ], [ 0, %for.cond1.preheader.us ]
  %17 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %arrayidx5.us100 = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv
  %18 = load double, ptr %arrayidx5.us100, align 8, !tbaa !20
  %mul.us101 = fmul double %17, %18
  %19 = tail call double @llvm.fmuladd.f64(double %mul.us101, double 0.000000e+00, double %16)
  store double %19, ptr %value, align 8, !tbaa !20
  %indvars.iv.next = or i64 %indvars.iv, 1
  %20 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %arrayidx5.us100.1 = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv.next
  %21 = load double, ptr %arrayidx5.us100.1, align 8, !tbaa !20
  %mul.us101.1 = fmul double %20, %21
  %22 = tail call double @llvm.fmuladd.f64(double %mul.us101.1, double 0.000000e+00, double %19)
  store double %22, ptr %value, align 8, !tbaa !20
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond1.for.inc61_crit_edge.split.us104.unr-lcssa, label %for.body3.us97, !llvm.loop !34

for.cond1.for.inc61_crit_edge.split.us104.unr-lcssa: ; preds = %for.body3.us97, %for.cond1.preheader.us
  %.lcssa135.ph = phi double [ undef, %for.cond1.preheader.us ], [ %22, %for.body3.us97 ]
  %indvars.iv.unr = phi i64 [ 0, %for.cond1.preheader.us ], [ %indvars.iv.next.1, %for.body3.us97 ]
  %.unr = phi double [ %15, %for.cond1.preheader.us ], [ %22, %for.body3.us97 ]
  br i1 %lcmp.mod.not, label %for.cond1.for.inc61_crit_edge.split.us104, label %for.body3.us97.epil

for.body3.us97.epil:                              ; preds = %for.cond1.for.inc61_crit_edge.split.us104.unr-lcssa
  %23 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %arrayidx5.us100.epil = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv.unr
  %24 = load double, ptr %arrayidx5.us100.epil, align 8, !tbaa !20
  %mul.us101.epil = fmul double %23, %24
  %25 = tail call double @llvm.fmuladd.f64(double %mul.us101.epil, double 0.000000e+00, double %.unr)
  store double %25, ptr %value, align 8, !tbaa !20
  br label %for.cond1.for.inc61_crit_edge.split.us104

for.cond1.for.inc61_crit_edge.split.us104:        ; preds = %for.cond1.for.inc61_crit_edge.split.us104.unr-lcssa, %for.body3.us97.epil
  %.lcssa135 = phi double [ %.lcssa135.ph, %for.cond1.for.inc61_crit_edge.split.us104.unr-lcssa ], [ %25, %for.body3.us97.epil ]
  %indvars.iv.next110 = add nuw nsw i64 %indvars.iv109, 1
  %exitcond113.not = icmp eq i64 %indvars.iv.next110, %wide.trip.count128
  br i1 %exitcond113.not, label %for.end63, label %for.cond1.preheader.us, !llvm.loop !36

for.end63:                                        ; preds = %for.cond1.for.inc61_crit_edge.split.us104, %for.cond1.for.inc61_crit_edge.split.us.us.us, %entry
  ret void
}

; Function Attrs: nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @intergroup_score(ptr nocapture noundef readonly %seq1, ptr nocapture noundef readonly %seq2, ptr nocapture noundef readonly %eff1, ptr nocapture noundef readonly %eff2, i32 noundef %clus1, i32 noundef %clus2, i32 noundef %len, ptr nocapture noundef writeonly %value) local_unnamed_addr #9 {
entry:
  %sub = add nsw i32 %len, -2
  store double 0.000000e+00, ptr %value, align 8, !tbaa !20
  %cmp165 = icmp sgt i32 %clus1, 0
  %cmp2161 = icmp sgt i32 %clus2, 0
  %or.cond = and i1 %cmp165, %cmp2161
  br i1 %or.cond, label %for.cond1.preheader.lr.ph.split.us, label %for.end93

for.cond1.preheader.lr.ph.split.us:               ; preds = %entry
  %cmp11151 = icmp sgt i32 %len, 0
  %wide.trip.count203 = zext i32 %clus1 to i64
  %wide.trip.count198 = zext i32 %clus2 to i64
  br i1 %cmp11151, label %for.cond1.preheader.us.us, label %for.cond1.preheader.us.preheader

for.cond1.preheader.us.preheader:                 ; preds = %for.cond1.preheader.lr.ph.split.us
  %xtraiter = and i64 %wide.trip.count198, 1
  %0 = icmp eq i32 %clus2, 1
  %unroll_iter = and i64 %wide.trip.count198, 4294967294
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.cond1.preheader.us

for.cond1.preheader.us.us:                        ; preds = %for.cond1.preheader.lr.ph.split.us, %for.cond1.for.inc91_crit_edge.split.us.us.us
  %1 = phi double [ %16, %for.cond1.for.inc91_crit_edge.split.us.us.us ], [ 0.000000e+00, %for.cond1.preheader.lr.ph.split.us ]
  %indvars.iv200 = phi i64 [ %indvars.iv.next201, %for.cond1.for.inc91_crit_edge.split.us.us.us ], [ 0, %for.cond1.preheader.lr.ph.split.us ]
  %arrayidx.us.us = getelementptr inbounds double, ptr %eff1, i64 %indvars.iv200
  %arrayidx7.us.us = getelementptr inbounds ptr, ptr %seq1, i64 %indvars.iv200
  %2 = load ptr, ptr %arrayidx7.us.us, align 8, !tbaa !13
  br label %for.body3.us.us.us

for.body3.us.us.us:                               ; preds = %for.end.us.us.us, %for.cond1.preheader.us.us
  %3 = phi double [ %16, %for.end.us.us.us ], [ %1, %for.cond1.preheader.us.us ]
  %indvars.iv195 = phi i64 [ %indvars.iv.next196, %for.end.us.us.us ], [ 0, %for.cond1.preheader.us.us ]
  %4 = load double, ptr %arrayidx.us.us, align 8, !tbaa !20
  %arrayidx5.us.us.us = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv195
  %5 = load double, ptr %arrayidx5.us.us.us, align 8, !tbaa !20
  %mul.us.us.us = fmul double %4, %5
  %arrayidx9.us.us.us = getelementptr inbounds ptr, ptr %seq2, i64 %indvars.iv195
  %6 = load ptr, ptr %arrayidx9.us.us.us, align 8, !tbaa !13
  %7 = load i32, ptr @penalty, align 4
  %conv56.us.us.us = sitofp i32 %7 to double
  br label %for.body12.us.us.us

for.body12.us.us.us:                              ; preds = %for.inc.us.us.us, %for.body3.us.us.us
  %k.0153.us.us.us = phi i32 [ 0, %for.body3.us.us.us ], [ %inc85.us.us.us, %for.inc.us.us.us ]
  %tmpscore.0152.us.us.us = phi double [ 0.000000e+00, %for.body3.us.us.us ], [ %tmpscore.3.us.us.us, %for.inc.us.us.us ]
  %idxprom13.us.us.us = sext i32 %k.0153.us.us.us to i64
  %arrayidx14.us.us.us = getelementptr inbounds i8, ptr %2, i64 %idxprom13.us.us.us
  %8 = load i8, ptr %arrayidx14.us.us.us, align 1, !tbaa !5
  %arrayidx16.us.us.us = getelementptr inbounds i8, ptr %6, i64 %idxprom13.us.us.us
  %9 = load i8, ptr %arrayidx16.us.us.us, align 1, !tbaa !5
  %cmp18.us.us.us = icmp eq i8 %8, 45
  %cmp20.us.us.us = icmp eq i8 %9, 45
  %or.cond.us.us.us = select i1 %cmp18.us.us.us, i1 %cmp20.us.us.us, i1 false
  br i1 %or.cond.us.us.us, label %for.inc.us.us.us, label %if.end.us.us.us

if.end.us.us.us:                                  ; preds = %for.body12.us.us.us
  %idxprom22.us.us.us = sext i8 %8 to i64
  %idxprom24.us.us.us = sext i8 %9 to i64
  %arrayidx25.us.us.us = getelementptr inbounds [128 x [128 x double]], ptr @amino_dis_consweight_multi, i64 0, i64 %idxprom22.us.us.us, i64 %idxprom24.us.us.us
  %10 = load double, ptr %arrayidx25.us.us.us, align 8, !tbaa !20
  %add.us.us.us = fadd double %tmpscore.0152.us.us.us, %10
  br i1 %cmp18.us.us.us, label %if.then28.us.us.us, label %if.end52.us.us.us

if.end52.us.us.us:                                ; preds = %if.end.us.us.us
  br i1 %cmp20.us.us.us, label %if.then55.us.us.us, label %for.inc.us.us.us

if.then55.us.us.us:                               ; preds = %if.end52.us.us.us
  %add57.us.us.us = fadd double %add.us.us.us, %conv56.us.us.us
  %add64.us.us.us = fadd double %10, %add57.us.us.us
  %inc66136.us.us.us = add nsw i32 %k.0153.us.us.us, 1
  %idxprom67137.us.us.us = sext i32 %inc66136.us.us.us to i64
  %arrayidx68138.us.us.us = getelementptr inbounds i8, ptr %6, i64 %idxprom67137.us.us.us
  %11 = load i8, ptr %arrayidx68138.us.us.us, align 1, !tbaa !5
  %cmp70139.us.us.us = icmp eq i8 %11, 45
  br i1 %cmp70139.us.us.us, label %while.body72.lr.ph.us.us.us, label %while.end78.us.us.us

while.end78.us.us.us.loopexit:                    ; preds = %while.body72.us.us.us
  %12 = trunc i64 %indvars.iv189 to i32
  br label %while.end78.us.us.us

while.end78.us.us.us:                             ; preds = %while.end78.us.us.us.loopexit, %if.then55.us.us.us
  %tmpscore.2.lcssa.us.us.us = phi double [ %add64.us.us.us, %if.then55.us.us.us ], [ %add77.us.us.us, %while.end78.us.us.us.loopexit ]
  %k.2.lcssa.us.us.us = phi i32 [ %k.0153.us.us.us, %if.then55.us.us.us ], [ %12, %while.end78.us.us.us.loopexit ]
  %cmp80.us.us.us = icmp sgt i32 %k.2.lcssa.us.us.us, %sub
  br i1 %cmp80.us.us.us, label %for.end.us.us.us, label %for.inc.us.us.us

while.body72.us.us.us:                            ; preds = %while.body72.lr.ph.us.us.us, %while.body72.us.us.us
  %indvars.iv189 = phi i64 [ %idxprom67137.us.us.us, %while.body72.lr.ph.us.us.us ], [ %indvars.iv.next190, %while.body72.us.us.us ]
  %tmpscore.2140.us.us.us = phi double [ %add64.us.us.us, %while.body72.lr.ph.us.us.us ], [ %add77.us.us.us, %while.body72.us.us.us ]
  %add77.us.us.us = fadd double %tmpscore.2140.us.us.us, %18
  %indvars.iv.next190 = add i64 %indvars.iv189, 1
  %arrayidx68.us.us.us = getelementptr inbounds i8, ptr %6, i64 %indvars.iv.next190
  %13 = load i8, ptr %arrayidx68.us.us.us, align 1, !tbaa !5
  %cmp70.us.us.us = icmp eq i8 %13, 45
  br i1 %cmp70.us.us.us, label %while.body72.us.us.us, label %while.end78.us.us.us.loopexit, !llvm.loop !37

if.then28.us.us.us:                               ; preds = %if.end.us.us.us
  %add30.us.us.us = fadd double %add.us.us.us, %conv56.us.us.us
  %add37.us.us.us = fadd double %10, %add30.us.us.us
  %inc143.us.us.us = add nsw i32 %k.0153.us.us.us, 1
  %idxprom38144.us.us.us = sext i32 %inc143.us.us.us to i64
  %arrayidx39145.us.us.us = getelementptr inbounds i8, ptr %2, i64 %idxprom38144.us.us.us
  %14 = load i8, ptr %arrayidx39145.us.us.us, align 1, !tbaa !5
  %cmp41146.us.us.us = icmp eq i8 %14, 45
  br i1 %cmp41146.us.us.us, label %while.body.lr.ph.us.us.us, label %while.end.us.us.us

while.end.us.us.us.loopexit:                      ; preds = %while.body.us.us.us
  %15 = trunc i64 %indvars.iv192 to i32
  br label %while.end.us.us.us

while.end.us.us.us:                               ; preds = %while.end.us.us.us.loopexit, %if.then28.us.us.us
  %tmpscore.1.lcssa.us.us.us = phi double [ %add37.us.us.us, %if.then28.us.us.us ], [ %add47.us.us.us, %while.end.us.us.us.loopexit ]
  %k.1.lcssa.us.us.us = phi i32 [ %k.0153.us.us.us, %if.then28.us.us.us ], [ %15, %while.end.us.us.us.loopexit ]
  %cmp48.us.us.us = icmp sgt i32 %k.1.lcssa.us.us.us, %sub
  br i1 %cmp48.us.us.us, label %for.end.us.us.us, label %for.inc.us.us.us

for.end.us.us.us:                                 ; preds = %for.inc.us.us.us, %while.end.us.us.us, %while.end78.us.us.us
  %tmpscore.4.us.us.us = phi double [ %tmpscore.2.lcssa.us.us.us, %while.end78.us.us.us ], [ %tmpscore.1.lcssa.us.us.us, %while.end.us.us.us ], [ %tmpscore.3.us.us.us, %for.inc.us.us.us ]
  %16 = tail call double @llvm.fmuladd.f64(double %tmpscore.4.us.us.us, double %mul.us.us.us, double %3)
  store double %16, ptr %value, align 8, !tbaa !20
  %indvars.iv.next196 = add nuw nsw i64 %indvars.iv195, 1
  %exitcond199.not = icmp eq i64 %indvars.iv.next196, %wide.trip.count198
  br i1 %exitcond199.not, label %for.cond1.for.inc91_crit_edge.split.us.us.us, label %for.body3.us.us.us, !llvm.loop !38

while.body.us.us.us:                              ; preds = %while.body.lr.ph.us.us.us, %while.body.us.us.us
  %indvars.iv192 = phi i64 [ %idxprom38144.us.us.us, %while.body.lr.ph.us.us.us ], [ %indvars.iv.next193, %while.body.us.us.us ]
  %tmpscore.1147.us.us.us = phi double [ %add37.us.us.us, %while.body.lr.ph.us.us.us ], [ %add47.us.us.us, %while.body.us.us.us ]
  %add47.us.us.us = fadd double %tmpscore.1147.us.us.us, %19
  %indvars.iv.next193 = add i64 %indvars.iv192, 1
  %arrayidx39.us.us.us = getelementptr inbounds i8, ptr %2, i64 %indvars.iv.next193
  %17 = load i8, ptr %arrayidx39.us.us.us, align 1, !tbaa !5
  %cmp41.us.us.us = icmp eq i8 %17, 45
  br i1 %cmp41.us.us.us, label %while.body.us.us.us, label %while.end.us.us.us.loopexit, !llvm.loop !39

for.inc.us.us.us:                                 ; preds = %while.end.us.us.us, %while.end78.us.us.us, %if.end52.us.us.us, %for.body12.us.us.us
  %tmpscore.3.us.us.us = phi double [ %tmpscore.0152.us.us.us, %for.body12.us.us.us ], [ %tmpscore.1.lcssa.us.us.us, %while.end.us.us.us ], [ %tmpscore.2.lcssa.us.us.us, %while.end78.us.us.us ], [ %add.us.us.us, %if.end52.us.us.us ]
  %k.3.us.us.us = phi i32 [ %k.0153.us.us.us, %for.body12.us.us.us ], [ %k.1.lcssa.us.us.us, %while.end.us.us.us ], [ %k.2.lcssa.us.us.us, %while.end78.us.us.us ], [ %k.0153.us.us.us, %if.end52.us.us.us ]
  %inc85.us.us.us = add nsw i32 %k.3.us.us.us, 1
  %cmp11.us.us.us = icmp slt i32 %inc85.us.us.us, %len
  br i1 %cmp11.us.us.us, label %for.body12.us.us.us, label %for.end.us.us.us, !llvm.loop !40

while.body72.lr.ph.us.us.us:                      ; preds = %if.then55.us.us.us
  %arrayidx76.us.us.us = getelementptr inbounds [128 x [128 x double]], ptr @amino_dis_consweight_multi, i64 0, i64 %idxprom22.us.us.us, i64 45
  %18 = load double, ptr %arrayidx76.us.us.us, align 8, !tbaa !20
  br label %while.body72.us.us.us

while.body.lr.ph.us.us.us:                        ; preds = %if.then28.us.us.us
  %arrayidx46.us.us.us = getelementptr inbounds [128 x [128 x double]], ptr @amino_dis_consweight_multi, i64 0, i64 45, i64 %idxprom24.us.us.us
  %19 = load double, ptr %arrayidx46.us.us.us, align 8, !tbaa !20
  br label %while.body.us.us.us

for.cond1.for.inc91_crit_edge.split.us.us.us:     ; preds = %for.end.us.us.us
  %indvars.iv.next201 = add nuw nsw i64 %indvars.iv200, 1
  %exitcond204.not = icmp eq i64 %indvars.iv.next201, %wide.trip.count203
  br i1 %exitcond204.not, label %for.end93, label %for.cond1.preheader.us.us, !llvm.loop !41

for.cond1.preheader.us:                           ; preds = %for.cond1.preheader.us.preheader, %for.cond1.for.inc91_crit_edge.split.us176
  %indvars.iv184 = phi i64 [ %indvars.iv.next185, %for.cond1.for.inc91_crit_edge.split.us176 ], [ 0, %for.cond1.preheader.us.preheader ]
  %20 = phi double [ %.lcssa210, %for.cond1.for.inc91_crit_edge.split.us176 ], [ 0.000000e+00, %for.cond1.preheader.us.preheader ]
  %arrayidx.us = getelementptr inbounds double, ptr %eff1, i64 %indvars.iv184
  br i1 %0, label %for.cond1.for.inc91_crit_edge.split.us176.unr-lcssa, label %for.body3.us168

for.body3.us168:                                  ; preds = %for.cond1.preheader.us, %for.body3.us168
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %for.body3.us168 ], [ 0, %for.cond1.preheader.us ]
  %21 = phi double [ %27, %for.body3.us168 ], [ %20, %for.cond1.preheader.us ]
  %niter = phi i64 [ %niter.next.1, %for.body3.us168 ], [ 0, %for.cond1.preheader.us ]
  %22 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %arrayidx5.us172 = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv
  %23 = load double, ptr %arrayidx5.us172, align 8, !tbaa !20
  %mul.us173 = fmul double %22, %23
  %24 = tail call double @llvm.fmuladd.f64(double %mul.us173, double 0.000000e+00, double %21)
  store double %24, ptr %value, align 8, !tbaa !20
  %indvars.iv.next = or i64 %indvars.iv, 1
  %25 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %arrayidx5.us172.1 = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv.next
  %26 = load double, ptr %arrayidx5.us172.1, align 8, !tbaa !20
  %mul.us173.1 = fmul double %25, %26
  %27 = tail call double @llvm.fmuladd.f64(double %mul.us173.1, double 0.000000e+00, double %24)
  store double %27, ptr %value, align 8, !tbaa !20
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond1.for.inc91_crit_edge.split.us176.unr-lcssa, label %for.body3.us168, !llvm.loop !38

for.cond1.for.inc91_crit_edge.split.us176.unr-lcssa: ; preds = %for.body3.us168, %for.cond1.preheader.us
  %.lcssa210.ph = phi double [ undef, %for.cond1.preheader.us ], [ %27, %for.body3.us168 ]
  %indvars.iv.unr = phi i64 [ 0, %for.cond1.preheader.us ], [ %indvars.iv.next.1, %for.body3.us168 ]
  %.unr = phi double [ %20, %for.cond1.preheader.us ], [ %27, %for.body3.us168 ]
  br i1 %lcmp.mod.not, label %for.cond1.for.inc91_crit_edge.split.us176, label %for.body3.us168.epil

for.body3.us168.epil:                             ; preds = %for.cond1.for.inc91_crit_edge.split.us176.unr-lcssa
  %28 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %arrayidx5.us172.epil = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv.unr
  %29 = load double, ptr %arrayidx5.us172.epil, align 8, !tbaa !20
  %mul.us173.epil = fmul double %28, %29
  %30 = tail call double @llvm.fmuladd.f64(double %mul.us173.epil, double 0.000000e+00, double %.unr)
  store double %30, ptr %value, align 8, !tbaa !20
  br label %for.cond1.for.inc91_crit_edge.split.us176

for.cond1.for.inc91_crit_edge.split.us176:        ; preds = %for.cond1.for.inc91_crit_edge.split.us176.unr-lcssa, %for.body3.us168.epil
  %.lcssa210 = phi double [ %.lcssa210.ph, %for.cond1.for.inc91_crit_edge.split.us176.unr-lcssa ], [ %30, %for.body3.us168.epil ]
  %indvars.iv.next185 = add nuw nsw i64 %indvars.iv184, 1
  %exitcond188.not = icmp eq i64 %indvars.iv.next185, %wide.trip.count203
  br i1 %exitcond188.not, label %for.end93, label %for.cond1.preheader.us, !llvm.loop !41

for.end93:                                        ; preds = %for.cond1.for.inc91_crit_edge.split.us176, %for.cond1.for.inc91_crit_edge.split.us.us.us, %entry
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @intergroup_score_new(ptr nocapture noundef readonly %seq1, ptr nocapture noundef readonly %seq2, ptr nocapture noundef readonly %eff1, ptr nocapture noundef readonly %eff2, i32 noundef %clus1, i32 noundef %clus2, i32 noundef %len, ptr nocapture noundef writeonly %value) local_unnamed_addr #11 {
entry:
  %sub = add nsw i32 %len, -2
  store double 0.000000e+00, ptr %value, align 8, !tbaa !20
  %cmp156 = icmp sgt i32 %clus1, 0
  %cmp2154 = icmp sgt i32 %clus2, 0
  %or.cond = and i1 %cmp156, %cmp2154
  br i1 %or.cond, label %for.cond1.preheader.lr.ph.split.us, label %for.end93

for.cond1.preheader.lr.ph.split.us:               ; preds = %entry
  %cmp11148 = icmp sgt i32 %len, 0
  %wide.trip.count189 = zext i32 %clus1 to i64
  %wide.trip.count184 = zext i32 %clus2 to i64
  br i1 %cmp11148, label %for.cond1.preheader.us.us, label %for.cond1.preheader.us.preheader

for.cond1.preheader.us.preheader:                 ; preds = %for.cond1.preheader.lr.ph.split.us
  %xtraiter = and i64 %wide.trip.count184, 1
  %0 = icmp eq i32 %clus2, 1
  %unroll_iter = and i64 %wide.trip.count184, 4294967294
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.cond1.preheader.us

for.cond1.preheader.us.us:                        ; preds = %for.cond1.preheader.lr.ph.split.us, %for.cond1.for.inc91_crit_edge.split.us.us.us
  %1 = phi double [ %16, %for.cond1.for.inc91_crit_edge.split.us.us.us ], [ 0.000000e+00, %for.cond1.preheader.lr.ph.split.us ]
  %indvars.iv186 = phi i64 [ %indvars.iv.next187, %for.cond1.for.inc91_crit_edge.split.us.us.us ], [ 0, %for.cond1.preheader.lr.ph.split.us ]
  %arrayidx.us.us = getelementptr inbounds double, ptr %eff1, i64 %indvars.iv186
  %arrayidx7.us.us = getelementptr inbounds ptr, ptr %seq1, i64 %indvars.iv186
  %2 = load ptr, ptr %arrayidx7.us.us, align 8, !tbaa !13
  br label %for.body3.us.us.us

for.body3.us.us.us:                               ; preds = %for.end.us.us.us, %for.cond1.preheader.us.us
  %3 = phi double [ %16, %for.end.us.us.us ], [ %1, %for.cond1.preheader.us.us ]
  %indvars.iv181 = phi i64 [ %indvars.iv.next182, %for.end.us.us.us ], [ 0, %for.cond1.preheader.us.us ]
  %4 = load double, ptr %arrayidx.us.us, align 8, !tbaa !20
  %arrayidx5.us.us.us = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv181
  %5 = load double, ptr %arrayidx5.us.us.us, align 8, !tbaa !20
  %mul.us.us.us = fmul double %4, %5
  %arrayidx9.us.us.us = getelementptr inbounds ptr, ptr %seq2, i64 %indvars.iv181
  %6 = load ptr, ptr %arrayidx9.us.us.us, align 8, !tbaa !13
  %7 = load i32, ptr @penalty, align 4
  %conv57.us.us.us = sitofp i32 %7 to double
  br label %for.body12.us.us.us

for.body12.us.us.us:                              ; preds = %for.inc.us.us.us, %for.body3.us.us.us
  %tmpscore.0150.us.us.us = phi double [ 0.000000e+00, %for.body3.us.us.us ], [ %tmpscore.3.us.us.us, %for.inc.us.us.us ]
  %k.0149.us.us.us = phi i32 [ 0, %for.body3.us.us.us ], [ %inc86.us.us.us, %for.inc.us.us.us ]
  %idxprom13.us.us.us = sext i32 %k.0149.us.us.us to i64
  %arrayidx14.us.us.us = getelementptr inbounds i8, ptr %2, i64 %idxprom13.us.us.us
  %8 = load i8, ptr %arrayidx14.us.us.us, align 1, !tbaa !5
  %arrayidx16.us.us.us = getelementptr inbounds i8, ptr %6, i64 %idxprom13.us.us.us
  %9 = load i8, ptr %arrayidx16.us.us.us, align 1, !tbaa !5
  %cmp18.us.us.us = icmp eq i8 %8, 45
  %cmp20.us.us.us = icmp eq i8 %9, 45
  %or.cond.us.us.us = select i1 %cmp18.us.us.us, i1 %cmp20.us.us.us, i1 false
  br i1 %or.cond.us.us.us, label %for.inc.us.us.us, label %if.end.us.us.us

if.end.us.us.us:                                  ; preds = %for.body12.us.us.us
  %idxprom22.us.us.us = sext i8 %8 to i64
  %idxprom24.us.us.us = sext i8 %9 to i64
  %arrayidx25.us.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom22.us.us.us, i64 %idxprom24.us.us.us
  %10 = load i32, ptr %arrayidx25.us.us.us, align 4, !tbaa !10
  %conv26.us.us.us = sitofp i32 %10 to double
  %add.us.us.us = fadd double %tmpscore.0150.us.us.us, %conv26.us.us.us
  br i1 %cmp18.us.us.us, label %if.then29.us.us.us, label %if.end53.us.us.us

if.end53.us.us.us:                                ; preds = %if.end.us.us.us
  br i1 %cmp20.us.us.us, label %if.then56.us.us.us, label %for.inc.us.us.us

if.then56.us.us.us:                               ; preds = %if.end53.us.us.us
  %add58.us.us.us = fadd double %add.us.us.us, %conv57.us.us.us
  %add64.us.us.us = fadd double %add58.us.us.us, %conv26.us.us.us
  %inc66133.us.us.us = add nsw i32 %k.0149.us.us.us, 1
  %idxprom67134.us.us.us = sext i32 %inc66133.us.us.us to i64
  %arrayidx68135.us.us.us = getelementptr inbounds i8, ptr %6, i64 %idxprom67134.us.us.us
  %11 = load i8, ptr %arrayidx68135.us.us.us, align 1, !tbaa !5
  %cmp70136.us.us.us = icmp eq i8 %11, 45
  br i1 %cmp70136.us.us.us, label %while.body72.lr.ph.us.us.us, label %while.end79.us.us.us

while.end79.us.us.us.loopexit:                    ; preds = %while.body72.us.us.us
  %12 = trunc i64 %indvars.iv175 to i32
  br label %while.end79.us.us.us

while.end79.us.us.us:                             ; preds = %while.end79.us.us.us.loopexit, %if.then56.us.us.us
  %k.2.lcssa.us.us.us = phi i32 [ %k.0149.us.us.us, %if.then56.us.us.us ], [ %12, %while.end79.us.us.us.loopexit ]
  %tmpscore.2.lcssa.us.us.us = phi double [ %add64.us.us.us, %if.then56.us.us.us ], [ %add78.us.us.us, %while.end79.us.us.us.loopexit ]
  %cmp81.us.us.us = icmp sgt i32 %k.2.lcssa.us.us.us, %sub
  br i1 %cmp81.us.us.us, label %for.end.us.us.us, label %for.inc.us.us.us

while.body72.us.us.us:                            ; preds = %while.body72.lr.ph.us.us.us, %while.body72.us.us.us
  %indvars.iv175 = phi i64 [ %idxprom67134.us.us.us, %while.body72.lr.ph.us.us.us ], [ %indvars.iv.next176, %while.body72.us.us.us ]
  %tmpscore.2137.us.us.us = phi double [ %add64.us.us.us, %while.body72.lr.ph.us.us.us ], [ %add78.us.us.us, %while.body72.us.us.us ]
  %add78.us.us.us = fadd double %tmpscore.2137.us.us.us, %conv77.us.us.us
  %indvars.iv.next176 = add i64 %indvars.iv175, 1
  %arrayidx68.us.us.us = getelementptr inbounds i8, ptr %6, i64 %indvars.iv.next176
  %13 = load i8, ptr %arrayidx68.us.us.us, align 1, !tbaa !5
  %cmp70.us.us.us = icmp eq i8 %13, 45
  br i1 %cmp70.us.us.us, label %while.body72.us.us.us, label %while.end79.us.us.us.loopexit, !llvm.loop !42

if.then29.us.us.us:                               ; preds = %if.end.us.us.us
  %add31.us.us.us = fadd double %add.us.us.us, %conv57.us.us.us
  %add37.us.us.us = fadd double %add31.us.us.us, %conv26.us.us.us
  %inc140.us.us.us = add nsw i32 %k.0149.us.us.us, 1
  %idxprom38141.us.us.us = sext i32 %inc140.us.us.us to i64
  %arrayidx39142.us.us.us = getelementptr inbounds i8, ptr %2, i64 %idxprom38141.us.us.us
  %14 = load i8, ptr %arrayidx39142.us.us.us, align 1, !tbaa !5
  %cmp41143.us.us.us = icmp eq i8 %14, 45
  br i1 %cmp41143.us.us.us, label %while.body.lr.ph.us.us.us, label %while.end.us.us.us

while.end.us.us.us.loopexit:                      ; preds = %while.body.us.us.us
  %15 = trunc i64 %indvars.iv178 to i32
  br label %while.end.us.us.us

while.end.us.us.us:                               ; preds = %while.end.us.us.us.loopexit, %if.then29.us.us.us
  %k.1.lcssa.us.us.us = phi i32 [ %k.0149.us.us.us, %if.then29.us.us.us ], [ %15, %while.end.us.us.us.loopexit ]
  %tmpscore.1.lcssa.us.us.us = phi double [ %add37.us.us.us, %if.then29.us.us.us ], [ %add48.us.us.us, %while.end.us.us.us.loopexit ]
  %cmp49.us.us.us = icmp sgt i32 %k.1.lcssa.us.us.us, %sub
  br i1 %cmp49.us.us.us, label %for.end.us.us.us, label %for.inc.us.us.us

for.end.us.us.us:                                 ; preds = %for.inc.us.us.us, %while.end.us.us.us, %while.end79.us.us.us
  %tmpscore.4.us.us.us = phi double [ %tmpscore.2.lcssa.us.us.us, %while.end79.us.us.us ], [ %tmpscore.1.lcssa.us.us.us, %while.end.us.us.us ], [ %tmpscore.3.us.us.us, %for.inc.us.us.us ]
  %16 = tail call double @llvm.fmuladd.f64(double %tmpscore.4.us.us.us, double %mul.us.us.us, double %3)
  store double %16, ptr %value, align 8, !tbaa !20
  %indvars.iv.next182 = add nuw nsw i64 %indvars.iv181, 1
  %exitcond185.not = icmp eq i64 %indvars.iv.next182, %wide.trip.count184
  br i1 %exitcond185.not, label %for.cond1.for.inc91_crit_edge.split.us.us.us, label %for.body3.us.us.us, !llvm.loop !43

while.body.us.us.us:                              ; preds = %while.body.lr.ph.us.us.us, %while.body.us.us.us
  %indvars.iv178 = phi i64 [ %idxprom38141.us.us.us, %while.body.lr.ph.us.us.us ], [ %indvars.iv.next179, %while.body.us.us.us ]
  %tmpscore.1144.us.us.us = phi double [ %add37.us.us.us, %while.body.lr.ph.us.us.us ], [ %add48.us.us.us, %while.body.us.us.us ]
  %add48.us.us.us = fadd double %tmpscore.1144.us.us.us, %conv47.us.us.us
  %indvars.iv.next179 = add i64 %indvars.iv178, 1
  %arrayidx39.us.us.us = getelementptr inbounds i8, ptr %2, i64 %indvars.iv.next179
  %17 = load i8, ptr %arrayidx39.us.us.us, align 1, !tbaa !5
  %cmp41.us.us.us = icmp eq i8 %17, 45
  br i1 %cmp41.us.us.us, label %while.body.us.us.us, label %while.end.us.us.us.loopexit, !llvm.loop !44

for.inc.us.us.us:                                 ; preds = %while.end.us.us.us, %while.end79.us.us.us, %if.end53.us.us.us, %for.body12.us.us.us
  %k.3.us.us.us = phi i32 [ %k.0149.us.us.us, %for.body12.us.us.us ], [ %k.1.lcssa.us.us.us, %while.end.us.us.us ], [ %k.2.lcssa.us.us.us, %while.end79.us.us.us ], [ %k.0149.us.us.us, %if.end53.us.us.us ]
  %tmpscore.3.us.us.us = phi double [ %tmpscore.0150.us.us.us, %for.body12.us.us.us ], [ %tmpscore.1.lcssa.us.us.us, %while.end.us.us.us ], [ %tmpscore.2.lcssa.us.us.us, %while.end79.us.us.us ], [ %add.us.us.us, %if.end53.us.us.us ]
  %inc86.us.us.us = add nsw i32 %k.3.us.us.us, 1
  %cmp11.us.us.us = icmp slt i32 %inc86.us.us.us, %len
  br i1 %cmp11.us.us.us, label %for.body12.us.us.us, label %for.end.us.us.us, !llvm.loop !45

while.body72.lr.ph.us.us.us:                      ; preds = %if.then56.us.us.us
  %arrayidx76.us.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom22.us.us.us, i64 45
  %18 = load i32, ptr %arrayidx76.us.us.us, align 4, !tbaa !10
  %conv77.us.us.us = sitofp i32 %18 to double
  br label %while.body72.us.us.us

while.body.lr.ph.us.us.us:                        ; preds = %if.then29.us.us.us
  %arrayidx46.us.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 45, i64 %idxprom24.us.us.us
  %19 = load i32, ptr %arrayidx46.us.us.us, align 4, !tbaa !10
  %conv47.us.us.us = sitofp i32 %19 to double
  br label %while.body.us.us.us

for.cond1.for.inc91_crit_edge.split.us.us.us:     ; preds = %for.end.us.us.us
  %indvars.iv.next187 = add nuw nsw i64 %indvars.iv186, 1
  %exitcond190.not = icmp eq i64 %indvars.iv.next187, %wide.trip.count189
  br i1 %exitcond190.not, label %for.end93, label %for.cond1.preheader.us.us, !llvm.loop !46

for.cond1.preheader.us:                           ; preds = %for.cond1.preheader.us.preheader, %for.cond1.for.inc91_crit_edge.split.us165
  %indvars.iv170 = phi i64 [ %indvars.iv.next171, %for.cond1.for.inc91_crit_edge.split.us165 ], [ 0, %for.cond1.preheader.us.preheader ]
  %20 = phi double [ %.lcssa196, %for.cond1.for.inc91_crit_edge.split.us165 ], [ 0.000000e+00, %for.cond1.preheader.us.preheader ]
  %arrayidx.us = getelementptr inbounds double, ptr %eff1, i64 %indvars.iv170
  br i1 %0, label %for.cond1.for.inc91_crit_edge.split.us165.unr-lcssa, label %for.body3.us158

for.body3.us158:                                  ; preds = %for.cond1.preheader.us, %for.body3.us158
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %for.body3.us158 ], [ 0, %for.cond1.preheader.us ]
  %21 = phi double [ %27, %for.body3.us158 ], [ %20, %for.cond1.preheader.us ]
  %niter = phi i64 [ %niter.next.1, %for.body3.us158 ], [ 0, %for.cond1.preheader.us ]
  %22 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %arrayidx5.us161 = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv
  %23 = load double, ptr %arrayidx5.us161, align 8, !tbaa !20
  %mul.us162 = fmul double %22, %23
  %24 = tail call double @llvm.fmuladd.f64(double %mul.us162, double 0.000000e+00, double %21)
  store double %24, ptr %value, align 8, !tbaa !20
  %indvars.iv.next = or i64 %indvars.iv, 1
  %25 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %arrayidx5.us161.1 = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv.next
  %26 = load double, ptr %arrayidx5.us161.1, align 8, !tbaa !20
  %mul.us162.1 = fmul double %25, %26
  %27 = tail call double @llvm.fmuladd.f64(double %mul.us162.1, double 0.000000e+00, double %24)
  store double %27, ptr %value, align 8, !tbaa !20
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond1.for.inc91_crit_edge.split.us165.unr-lcssa, label %for.body3.us158, !llvm.loop !43

for.cond1.for.inc91_crit_edge.split.us165.unr-lcssa: ; preds = %for.body3.us158, %for.cond1.preheader.us
  %.lcssa196.ph = phi double [ undef, %for.cond1.preheader.us ], [ %27, %for.body3.us158 ]
  %indvars.iv.unr = phi i64 [ 0, %for.cond1.preheader.us ], [ %indvars.iv.next.1, %for.body3.us158 ]
  %.unr = phi double [ %20, %for.cond1.preheader.us ], [ %27, %for.body3.us158 ]
  br i1 %lcmp.mod.not, label %for.cond1.for.inc91_crit_edge.split.us165, label %for.body3.us158.epil

for.body3.us158.epil:                             ; preds = %for.cond1.for.inc91_crit_edge.split.us165.unr-lcssa
  %28 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %arrayidx5.us161.epil = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv.unr
  %29 = load double, ptr %arrayidx5.us161.epil, align 8, !tbaa !20
  %mul.us162.epil = fmul double %28, %29
  %30 = tail call double @llvm.fmuladd.f64(double %mul.us162.epil, double 0.000000e+00, double %.unr)
  store double %30, ptr %value, align 8, !tbaa !20
  br label %for.cond1.for.inc91_crit_edge.split.us165

for.cond1.for.inc91_crit_edge.split.us165:        ; preds = %for.cond1.for.inc91_crit_edge.split.us165.unr-lcssa, %for.body3.us158.epil
  %.lcssa196 = phi double [ %.lcssa196.ph, %for.cond1.for.inc91_crit_edge.split.us165.unr-lcssa ], [ %30, %for.body3.us158.epil ]
  %indvars.iv.next171 = add nuw nsw i64 %indvars.iv170, 1
  %exitcond174.not = icmp eq i64 %indvars.iv.next171, %wide.trip.count189
  br i1 %exitcond174.not, label %for.end93, label %for.cond1.preheader.us, !llvm.loop !46

for.end93:                                        ; preds = %for.cond1.for.inc91_crit_edge.split.us165, %for.cond1.for.inc91_crit_edge.split.us.us.us, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local double @score_calc3(ptr nocapture noundef readonly %seq, i32 noundef %s, ptr nocapture noundef readonly %eff, i32 %ex) local_unnamed_addr #12 {
entry:
  %0 = load ptr, ptr %seq, align 8, !tbaa !13
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #31
  %call.fr = freeze i64 %call
  %conv = trunc i64 %call.fr to i32
  %1 = load i32, ptr @weight, align 4, !tbaa !10
  switch i32 %1, label %sw.default [
    i32 0, label %sw.bb
    i32 2, label %sw.bb3
    i32 3, label %for.cond.preheader
  ]

for.cond.preheader:                               ; preds = %entry
  %cmp182 = icmp sgt i32 %s, 1
  br i1 %cmp182, label %for.body.preheader, label %for.end128

for.body.preheader:                               ; preds = %for.cond.preheader
  %sub7 = add nsw i32 %s, -1
  %2 = zext i32 %s to i64
  %wide.trip.count212 = zext i32 %sub7 to i64
  %wide.trip.count = zext i32 %s to i64
  %xtraiter = and i64 %wide.trip.count212, 1
  %3 = icmp eq i32 %sub7, 1
  br i1 %3, label %sw.epilog.loopexit.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %wide.trip.count212, 4294967294
  br label %for.body

sw.bb:                                            ; preds = %entry
  %conv1 = sitofp i32 %s to double
  %sub = fadd double %conv1, -1.000000e+00
  %mul = fmul double %sub, %conv1
  %div = fmul double %mul, 5.000000e-01
  br label %sw.epilog

sw.bb3:                                           ; preds = %entry
  %div4 = sdiv i32 %s, 2
  %conv5 = sitofp i32 %div4 to double
  br label %sw.epilog

for.cond.loopexit:                                ; preds = %for.body12, %for.body
  %totaleff.1.lcssa = phi double [ %totaleff.0184, %for.body ], [ %add16, %for.body12 ]
  %indvars.iv.next210.1 = add nuw nsw i64 %indvars.iv209, 2
  %cmp10179.1 = icmp ult i64 %indvars.iv.next210.1, %2
  br i1 %cmp10179.1, label %for.body12.lr.ph.1, label %for.cond.loopexit.1

for.body12.lr.ph.1:                               ; preds = %for.cond.loopexit
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx13.1 = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv.next210
  %4 = load ptr, ptr %arrayidx13.1, align 8, !tbaa !13
  br label %for.body12.1

for.body12.1:                                     ; preds = %for.body12.1, %for.body12.lr.ph.1
  %indvars.iv206.1 = phi i64 [ %indvars.iv.next, %for.body12.lr.ph.1 ], [ %indvars.iv.next207.1, %for.body12.1 ]
  %totaleff.1181.1 = phi double [ %totaleff.1.lcssa, %for.body12.lr.ph.1 ], [ %add16.1, %for.body12.1 ]
  %arrayidx15.1 = getelementptr inbounds double, ptr %4, i64 %indvars.iv206.1
  %5 = load double, ptr %arrayidx15.1, align 8, !tbaa !20
  %add16.1 = fadd double %totaleff.1181.1, %5
  %indvars.iv.next207.1 = add nuw nsw i64 %indvars.iv206.1, 1
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next207.1, %wide.trip.count
  br i1 %exitcond.not.1, label %for.cond.loopexit.1, label %for.body12.1, !llvm.loop !47

for.cond.loopexit.1:                              ; preds = %for.body12.1, %for.cond.loopexit
  %totaleff.1.lcssa.1 = phi double [ %totaleff.1.lcssa, %for.cond.loopexit ], [ %add16.1, %for.body12.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %sw.epilog.loopexit.unr-lcssa, label %for.body, !llvm.loop !48

for.body:                                         ; preds = %for.cond.loopexit.1, %for.body.preheader.new
  %indvars.iv209 = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next210.1, %for.cond.loopexit.1 ]
  %indvars.iv = phi i64 [ 1, %for.body.preheader.new ], [ %indvars.iv.next.1, %for.cond.loopexit.1 ]
  %totaleff.0184 = phi double [ 0.000000e+00, %for.body.preheader.new ], [ %totaleff.1.lcssa.1, %for.cond.loopexit.1 ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.1, %for.cond.loopexit.1 ]
  %indvars.iv.next210 = or i64 %indvars.iv209, 1
  %cmp10179 = icmp ult i64 %indvars.iv.next210, %2
  br i1 %cmp10179, label %for.body12.lr.ph, label %for.cond.loopexit

for.body12.lr.ph:                                 ; preds = %for.body
  %arrayidx13 = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv209
  %6 = load ptr, ptr %arrayidx13, align 8, !tbaa !13
  br label %for.body12

for.body12:                                       ; preds = %for.body12.lr.ph, %for.body12
  %indvars.iv206 = phi i64 [ %indvars.iv, %for.body12.lr.ph ], [ %indvars.iv.next207, %for.body12 ]
  %totaleff.1181 = phi double [ %totaleff.0184, %for.body12.lr.ph ], [ %add16, %for.body12 ]
  %arrayidx15 = getelementptr inbounds double, ptr %6, i64 %indvars.iv206
  %7 = load double, ptr %arrayidx15, align 8, !tbaa !20
  %add16 = fadd double %totaleff.1181, %7
  %indvars.iv.next207 = add nuw nsw i64 %indvars.iv206, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next207, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.loopexit, label %for.body12, !llvm.loop !47

sw.default:                                       ; preds = %entry
  %8 = load ptr, ptr @stderr, align 8, !tbaa !13
  %9 = tail call i64 @fwrite(ptr nonnull @.str.7, i64 6, i64 1, ptr %8) #32
  tail call void @exit(i32 noundef 1) #33
  unreachable

sw.epilog.loopexit.unr-lcssa:                     ; preds = %for.cond.loopexit.1, %for.body.preheader
  %totaleff.1.lcssa.lcssa.ph = phi double [ undef, %for.body.preheader ], [ %totaleff.1.lcssa.1, %for.cond.loopexit.1 ]
  %indvars.iv209.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next210.1, %for.cond.loopexit.1 ]
  %indvars.iv.unr = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next.1, %for.cond.loopexit.1 ]
  %totaleff.0184.unr = phi double [ 0.000000e+00, %for.body.preheader ], [ %totaleff.1.lcssa.1, %for.cond.loopexit.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %sw.epilog, label %for.body.epil

for.body.epil:                                    ; preds = %sw.epilog.loopexit.unr-lcssa
  %indvars.iv.next210.epil = add nuw nsw i64 %indvars.iv209.unr, 1
  %cmp10179.epil = icmp ult i64 %indvars.iv.next210.epil, %2
  br i1 %cmp10179.epil, label %for.body12.lr.ph.epil, label %sw.epilog

for.body12.lr.ph.epil:                            ; preds = %for.body.epil
  %arrayidx13.epil = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv209.unr
  %10 = load ptr, ptr %arrayidx13.epil, align 8, !tbaa !13
  br label %for.body12.epil

for.body12.epil:                                  ; preds = %for.body12.epil, %for.body12.lr.ph.epil
  %indvars.iv206.epil = phi i64 [ %indvars.iv.unr, %for.body12.lr.ph.epil ], [ %indvars.iv.next207.epil, %for.body12.epil ]
  %totaleff.1181.epil = phi double [ %totaleff.0184.unr, %for.body12.lr.ph.epil ], [ %add16.epil, %for.body12.epil ]
  %arrayidx15.epil = getelementptr inbounds double, ptr %10, i64 %indvars.iv206.epil
  %11 = load double, ptr %arrayidx15.epil, align 8, !tbaa !20
  %add16.epil = fadd double %totaleff.1181.epil, %11
  %indvars.iv.next207.epil = add nuw nsw i64 %indvars.iv206.epil, 1
  %exitcond.not.epil = icmp eq i64 %indvars.iv.next207.epil, %wide.trip.count
  br i1 %exitcond.not.epil, label %sw.epilog, label %for.body12.epil, !llvm.loop !47

sw.epilog:                                        ; preds = %sw.epilog.loopexit.unr-lcssa, %for.body12.epil, %for.body.epil, %sw.bb3, %sw.bb
  %totaleff.2 = phi double [ %conv5, %sw.bb3 ], [ %div, %sw.bb ], [ %totaleff.1.lcssa.lcssa.ph, %sw.epilog.loopexit.unr-lcssa ], [ %totaleff.0184.unr, %for.body.epil ], [ %add16.epil, %for.body12.epil ]
  %cmp23200 = icmp sgt i32 %s, 1
  br i1 %cmp23200, label %for.body25.lr.ph, label %for.end128

for.body25.lr.ph:                                 ; preds = %sw.epilog
  %sub22 = add i32 %s, -1
  %sub106 = add nsw i32 %conv, -2
  %cmp38186 = icmp sgt i32 %conv, 0
  %12 = load i32, ptr @scoremtx, align 4
  %tobool.not = icmp eq i32 %12, 0
  %mul61 = select i1 %tobool.not, i32 400, i32 0
  %13 = load i32, ptr @penalty, align 4
  %14 = load i32, ptr getelementptr inbounds ([26 x [26 x i32]], ptr @n_dis, i64 0, i64 0, i64 24), align 16
  %sub93 = sub nsw i32 %13, %14
  %conv94 = sext i32 %sub93 to i64
  %15 = zext i32 %s to i64
  %wide.trip.count242 = zext i32 %sub22 to i64
  %wide.trip.count237 = zext i32 %s to i64
  br i1 %cmp38186, label %for.body25.us, label %for.body25

for.body25.us:                                    ; preds = %for.body25.lr.ph, %for.cond21.loopexit.us
  %indvars.iv239 = phi i64 [ %indvars.iv.next240, %for.cond21.loopexit.us ], [ 0, %for.body25.lr.ph ]
  %indvars.iv232 = phi i64 [ %indvars.iv.next233, %for.cond21.loopexit.us ], [ 1, %for.body25.lr.ph ]
  %score.0202.us = phi double [ %score.1.lcssa.us, %for.cond21.loopexit.us ], [ 0.000000e+00, %for.body25.lr.ph ]
  %indvars.iv.next240 = add nuw nsw i64 %indvars.iv239, 1
  %cmp28196.us = icmp ult i64 %indvars.iv.next240, %15
  br i1 %cmp28196.us, label %for.body30.lr.ph.us, label %for.cond21.loopexit.us

for.cond21.loopexit.us:                           ; preds = %for.end114.us.us, %for.body25.us
  %score.1.lcssa.us = phi double [ %score.0202.us, %for.body25.us ], [ %27, %for.end114.us.us ]
  %indvars.iv.next233 = add nuw nsw i64 %indvars.iv232, 1
  %exitcond243.not = icmp eq i64 %indvars.iv.next240, %wide.trip.count242
  br i1 %exitcond243.not, label %for.end128, label %for.body25.us, !llvm.loop !49

for.body30.lr.ph.us:                              ; preds = %for.body25.us
  %arrayidx32.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv239
  %arrayidx119.us = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv239
  br label %for.body30.us.us

for.body30.us.us:                                 ; preds = %for.end114.us.us, %for.body30.lr.ph.us
  %indvars.iv234 = phi i64 [ %indvars.iv.next235, %for.end114.us.us ], [ %indvars.iv232, %for.body30.lr.ph.us ]
  %score.1198.us.us = phi double [ %27, %for.end114.us.us ], [ %score.0202.us, %for.body30.lr.ph.us ]
  %16 = load ptr, ptr %arrayidx32.us, align 8, !tbaa !13
  %call33.us.us = tail call ptr @strcpy(ptr noundef nonnull dereferenceable(1) @score_calc3.mseq1, ptr noundef nonnull dereferenceable(1) %16) #34
  %arrayidx35.us.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv234
  %17 = load ptr, ptr %arrayidx35.us.us, align 8, !tbaa !13
  %call36.us.us = tail call ptr @strcpy(ptr noundef nonnull dereferenceable(1) @score_calc3.mseq2, ptr noundef nonnull dereferenceable(1) %17) #34
  br label %for.body40.us.us

for.body40.us.us:                                 ; preds = %for.inc112.us.us, %for.body30.us.us
  %tmpscore.0189.us.us = phi i64 [ 0, %for.body30.us.us ], [ %tmpscore.1.us.us, %for.inc112.us.us ]
  %c.0188.us.us = phi i32 [ 0, %for.body30.us.us ], [ %c.1.us.us, %for.inc112.us.us ]
  %k.0187.us.us = phi i32 [ 0, %for.body30.us.us ], [ %inc113.us.us, %for.inc112.us.us ]
  %idxprom41.us.us = sext i32 %k.0187.us.us to i64
  %arrayidx42.us.us = getelementptr inbounds [10000000 x i8], ptr @score_calc3.mseq1, i64 0, i64 %idxprom41.us.us
  %18 = load i8, ptr %arrayidx42.us.us, align 1, !tbaa !5
  %cmp44.us.us = icmp eq i8 %18, 45
  %arrayidx47.us.us = getelementptr inbounds [10000000 x i8], ptr @score_calc3.mseq2, i64 0, i64 %idxprom41.us.us
  %19 = load i8, ptr %arrayidx47.us.us, align 1, !tbaa !5
  %cmp49.us.us = icmp eq i8 %19, 45
  %or.cond = select i1 %cmp44.us.us, i1 %cmp49.us.us, i1 false
  br i1 %or.cond, label %for.inc112.us.us, label %if.end.us.us

if.end.us.us:                                     ; preds = %for.body40.us.us
  %idxprom54.us.us = sext i8 %18 to i64
  %idxprom59.us.us = sext i8 %19 to i64
  %arrayidx60.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom54.us.us, i64 %idxprom59.us.us
  %20 = load i32, ptr %arrayidx60.us.us, align 4, !tbaa !10
  %add62.us.us = add nsw i32 %mul61, %20
  %conv63.us.us = sext i32 %add62.us.us to i64
  %add64.us.us = add nsw i64 %tmpscore.0189.us.us, %conv63.us.us
  %inc65.us.us = add nsw i32 %c.0188.us.us, 1
  br i1 %cmp44.us.us, label %while.cond.us.us, label %if.end86.us.us

if.end86.us.us:                                   ; preds = %if.end.us.us
  %cmp90.us.us = icmp eq i8 %19, 45
  br i1 %cmp90.us.us, label %while.cond96.us.us, label %for.inc112.us.us

while.cond96.us.us:                               ; preds = %if.end86.us.us, %while.cond96.us.us
  %indvars.iv226 = phi i64 [ %indvars.iv.next227, %while.cond96.us.us ], [ %idxprom41.us.us, %if.end86.us.us ]
  %indvars.iv.next227 = add i64 %indvars.iv226, 1
  %arrayidx99.us.us = getelementptr inbounds [10000000 x i8], ptr @score_calc3.mseq2, i64 0, i64 %indvars.iv.next227
  %21 = load i8, ptr %arrayidx99.us.us, align 1, !tbaa !5
  %cmp101.us.us = icmp eq i8 %21, 45
  br i1 %cmp101.us.us, label %while.cond96.us.us, label %while.end104.us.us, !llvm.loop !50

while.end104.us.us:                               ; preds = %while.cond96.us.us
  %add95.us.us = add nsw i64 %add64.us.us, %conv94
  %22 = trunc i64 %indvars.iv226 to i32
  %cmp107.us.us = icmp slt i32 %sub106, %22
  br i1 %cmp107.us.us, label %for.end114.us.us, label %for.inc112.us.us

while.cond.us.us:                                 ; preds = %if.end.us.us, %while.cond.us.us
  %indvars.iv229 = phi i64 [ %indvars.iv.next230, %while.cond.us.us ], [ %idxprom41.us.us, %if.end.us.us ]
  %indvars.iv.next230 = add i64 %indvars.iv229, 1
  %arrayidx77.us.us = getelementptr inbounds [10000000 x i8], ptr @score_calc3.mseq1, i64 0, i64 %indvars.iv.next230
  %23 = load i8, ptr %arrayidx77.us.us, align 1, !tbaa !5
  %cmp79.us.us = icmp eq i8 %23, 45
  br i1 %cmp79.us.us, label %while.cond.us.us, label %while.end.us.us, !llvm.loop !51

while.end.us.us:                                  ; preds = %while.cond.us.us
  %add74.us.us = add nsw i64 %add64.us.us, %conv94
  %24 = trunc i64 %indvars.iv229 to i32
  %cmp82.us.us = icmp slt i32 %sub106, %24
  br i1 %cmp82.us.us, label %for.end114.us.us, label %for.inc112.us.us

for.end114.us.us:                                 ; preds = %for.inc112.us.us, %while.end.us.us, %while.end104.us.us
  %c.2.us.us = phi i32 [ %inc65.us.us, %while.end104.us.us ], [ %inc65.us.us, %while.end.us.us ], [ %c.1.us.us, %for.inc112.us.us ]
  %tmpscore.2.us.us = phi i64 [ %add95.us.us, %while.end104.us.us ], [ %add74.us.us, %while.end.us.us ], [ %tmpscore.1.us.us, %for.inc112.us.us ]
  %conv115.us.us = sitofp i64 %tmpscore.2.us.us to double
  %conv116.us.us = sitofp i32 %c.2.us.us to double
  %div117.us.us = fdiv double %conv115.us.us, %conv116.us.us
  %25 = load ptr, ptr %arrayidx119.us, align 8, !tbaa !13
  %arrayidx121.us.us = getelementptr inbounds double, ptr %25, i64 %indvars.iv234
  %26 = load double, ptr %arrayidx121.us.us, align 8, !tbaa !20
  %27 = tail call double @llvm.fmuladd.f64(double %div117.us.us, double %26, double %score.1198.us.us)
  %indvars.iv.next235 = add nuw nsw i64 %indvars.iv234, 1
  %exitcond238.not = icmp eq i64 %indvars.iv.next235, %wide.trip.count237
  br i1 %exitcond238.not, label %for.cond21.loopexit.us, label %for.body30.us.us, !llvm.loop !52

for.inc112.us.us:                                 ; preds = %for.body40.us.us, %while.end.us.us, %while.end104.us.us, %if.end86.us.us
  %k.3.us.us = phi i32 [ %24, %while.end.us.us ], [ %22, %while.end104.us.us ], [ %k.0187.us.us, %if.end86.us.us ], [ %k.0187.us.us, %for.body40.us.us ]
  %c.1.us.us = phi i32 [ %inc65.us.us, %while.end.us.us ], [ %inc65.us.us, %while.end104.us.us ], [ %inc65.us.us, %if.end86.us.us ], [ %c.0188.us.us, %for.body40.us.us ]
  %tmpscore.1.us.us = phi i64 [ %add74.us.us, %while.end.us.us ], [ %add95.us.us, %while.end104.us.us ], [ %add64.us.us, %if.end86.us.us ], [ %tmpscore.0189.us.us, %for.body40.us.us ]
  %inc113.us.us = add nsw i32 %k.3.us.us, 1
  %cmp38.us.us = icmp slt i32 %inc113.us.us, %conv
  br i1 %cmp38.us.us, label %for.body40.us.us, label %for.end114.us.us, !llvm.loop !53

for.cond21.loopexit:                              ; preds = %for.body30, %for.body25
  %score.1.lcssa = phi double [ %score.0202, %for.body25 ], [ 0x7FF8000000000000, %for.body30 ]
  %indvars.iv.next215 = add nuw nsw i64 %indvars.iv214, 1
  %exitcond225.not = icmp eq i64 %indvars.iv.next222, %wide.trip.count242
  br i1 %exitcond225.not, label %for.end128, label %for.body25, !llvm.loop !49

for.body25:                                       ; preds = %for.body25.lr.ph, %for.cond21.loopexit
  %indvars.iv221 = phi i64 [ %indvars.iv.next222, %for.cond21.loopexit ], [ 0, %for.body25.lr.ph ]
  %indvars.iv214 = phi i64 [ %indvars.iv.next215, %for.cond21.loopexit ], [ 1, %for.body25.lr.ph ]
  %score.0202 = phi double [ %score.1.lcssa, %for.cond21.loopexit ], [ 0.000000e+00, %for.body25.lr.ph ]
  %indvars.iv.next222 = add nuw nsw i64 %indvars.iv221, 1
  %cmp28196 = icmp ult i64 %indvars.iv.next222, %15
  br i1 %cmp28196, label %for.body30.lr.ph, label %for.cond21.loopexit

for.body30.lr.ph:                                 ; preds = %for.body25
  %arrayidx32 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv221
  br label %for.body30

for.body30:                                       ; preds = %for.body30.lr.ph, %for.body30
  %indvars.iv216 = phi i64 [ %indvars.iv214, %for.body30.lr.ph ], [ %indvars.iv.next217, %for.body30 ]
  %28 = load ptr, ptr %arrayidx32, align 8, !tbaa !13
  %call33 = tail call ptr @strcpy(ptr noundef nonnull dereferenceable(1) @score_calc3.mseq1, ptr noundef nonnull dereferenceable(1) %28) #34
  %arrayidx35 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv216
  %29 = load ptr, ptr %arrayidx35, align 8, !tbaa !13
  %call36 = tail call ptr @strcpy(ptr noundef nonnull dereferenceable(1) @score_calc3.mseq2, ptr noundef nonnull dereferenceable(1) %29) #34
  %indvars.iv.next217 = add nuw nsw i64 %indvars.iv216, 1
  %exitcond220.not = icmp eq i64 %indvars.iv.next217, %wide.trip.count237
  br i1 %exitcond220.not, label %for.cond21.loopexit, label %for.body30, !llvm.loop !52

for.end128:                                       ; preds = %for.cond21.loopexit, %for.cond21.loopexit.us, %for.cond.preheader, %sw.epilog
  %totaleff.2247 = phi double [ %totaleff.2, %sw.epilog ], [ 0.000000e+00, %for.cond.preheader ], [ %totaleff.2, %for.cond21.loopexit.us ], [ %totaleff.2, %for.cond21.loopexit ]
  %score.0.lcssa = phi double [ 0.000000e+00, %sw.epilog ], [ 0.000000e+00, %for.cond.preheader ], [ %score.1.lcssa.us, %for.cond21.loopexit.us ], [ %score.1.lcssa, %for.cond21.loopexit ]
  %cmp129 = icmp eq i32 %1, 0
  %div132 = select i1 %cmp129, double %totaleff.2247, double 1.000000e+00
  %score.2 = fdiv double %score.0.lcssa, %div132
  ret double %score.2
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite)
declare ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #8

; Function Attrs: nofree nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local double @score_calc5(ptr nocapture noundef readonly %seq, i32 noundef %s, ptr nocapture noundef readonly %eff, i32 noundef %ex) local_unnamed_addr #13 {
entry:
  %0 = load ptr, ptr %seq, align 8, !tbaa !13
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #31
  %call.fr = freeze i64 %call
  %conv = trunc i64 %call.fr to i32
  %cmp380 = icmp sgt i32 %s, 0
  br i1 %cmp380, label %for.body.lr.ph, label %for.end241

for.body.lr.ph:                                   ; preds = %entry
  %idxprom5 = sext i32 %ex to i64
  %arrayidx10 = getelementptr inbounds ptr, ptr %seq, i64 %idxprom5
  %sub98 = add nsw i32 %conv, -2
  %cmp12374 = icmp sgt i32 %conv, 0
  %1 = load i32, ptr @penalty, align 4
  %conv74 = sitofp i32 %1 to double
  %2 = zext i32 %ex to i64
  %wide.trip.count443 = zext i32 %s to i64
  br i1 %cmp12374, label %for.body.us, label %for.body.preheader

for.body.preheader:                               ; preds = %for.body.lr.ph
  %xtraiter = and i64 %wide.trip.count443, 1
  %3 = icmp eq i32 %s, 1
  br i1 %3, label %for.cond108.preheader.loopexit483.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %wide.trip.count443, 4294967294
  br label %for.body

for.body.us:                                      ; preds = %for.body.lr.ph, %for.inc105.us
  %indvars.iv440 = phi i64 [ %indvars.iv.next441, %for.inc105.us ], [ 0, %for.body.lr.ph ]
  %score.0382.us = phi double [ %score.1.us, %for.inc105.us ], [ 0.000000e+00, %for.body.lr.ph ]
  %cmp2.us = icmp eq i64 %indvars.iv440, %2
  br i1 %cmp2.us, label %for.inc105.us, label %if.end.us

if.end.us:                                        ; preds = %for.body.us
  %arrayidx4.us = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv440
  %4 = load ptr, ptr %arrayidx4.us, align 8, !tbaa !13
  %arrayidx6.us = getelementptr inbounds double, ptr %4, i64 %idxprom5
  %5 = load double, ptr %arrayidx6.us, align 8, !tbaa !20
  %arrayidx8.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv440
  %6 = load ptr, ptr %arrayidx8.us, align 8, !tbaa !13
  %7 = load ptr, ptr %arrayidx10, align 8, !tbaa !13
  br label %for.body14.us

for.body14.us:                                    ; preds = %if.end.us, %for.inc.us
  %tmpscore.0376.us = phi double [ 0.000000e+00, %if.end.us ], [ %tmpscore.3.us, %for.inc.us ]
  %k.0375.us = phi i32 [ 0, %if.end.us ], [ %inc104.us, %for.inc.us ]
  %idxprom15.us = sext i32 %k.0375.us to i64
  %arrayidx16.us = getelementptr inbounds i8, ptr %6, i64 %idxprom15.us
  %8 = load i8, ptr %arrayidx16.us, align 1, !tbaa !5
  %cmp18.us = icmp eq i8 %8, 45
  br i1 %cmp18.us, label %land.lhs.true.us, label %if.end67.us

if.end67.us:                                      ; preds = %for.body14.us
  %idxprom30.us = sext i8 %8 to i64
  %arrayidx33.us = getelementptr inbounds i8, ptr %7, i64 %idxprom15.us
  %9 = load i8, ptr %arrayidx33.us, align 1, !tbaa !5
  %idxprom35.us = sext i8 %9 to i64
  %arrayidx36.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom30.us, i64 %idxprom35.us
  %10 = load i32, ptr %arrayidx36.us, align 4, !tbaa !10
  %conv37.us = sitofp i32 %10 to double
  %add.us = fadd double %tmpscore.0376.us, %conv37.us
  %cmp71.us = icmp eq i8 %9, 45
  br i1 %cmp71.us, label %if.then73.us, label %for.inc.us

if.then73.us:                                     ; preds = %if.end67.us
  %add75.us = fadd double %add.us, %conv74
  %inc77357.us = add nsw i32 %k.0375.us, 1
  %idxprom78358.us = sext i32 %inc77357.us to i64
  %arrayidx79359.us = getelementptr inbounds i8, ptr %7, i64 %idxprom78358.us
  %11 = load i8, ptr %arrayidx79359.us, align 1, !tbaa !5
  %cmp81360.us = icmp eq i8 %11, 45
  br i1 %cmp81360.us, label %while.body83.us, label %while.end96.us

while.end96.us.loopexit:                          ; preds = %while.body83.us
  %12 = trunc i64 %indvars.iv434 to i32
  br label %while.end96.us

while.end96.us:                                   ; preds = %while.end96.us.loopexit, %if.then73.us
  %k.2.lcssa.us = phi i32 [ %k.0375.us, %if.then73.us ], [ %12, %while.end96.us.loopexit ]
  %tmpscore.2.lcssa.us = phi double [ %add75.us, %if.then73.us ], [ %add95.us, %while.end96.us.loopexit ]
  %cmp99.us = icmp sgt i32 %k.2.lcssa.us, %sub98
  br i1 %cmp99.us, label %for.end.us, label %for.inc.us

while.body83.us:                                  ; preds = %if.then73.us, %while.body83.us
  %indvars.iv434 = phi i64 [ %indvars.iv.next435, %while.body83.us ], [ %idxprom78358.us, %if.then73.us ]
  %tmpscore.2361.us = phi double [ %add95.us, %while.body83.us ], [ %add75.us, %if.then73.us ]
  %arrayidx85.us = getelementptr inbounds i8, ptr %6, i64 %indvars.iv434
  %13 = load i8, ptr %arrayidx85.us, align 1, !tbaa !5
  %idxprom87.us = sext i8 %13 to i64
  %arrayidx93.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom87.us, i64 45
  %14 = load i32, ptr %arrayidx93.us, align 4, !tbaa !10
  %conv94.us = sitofp i32 %14 to double
  %add95.us = fadd double %tmpscore.2361.us, %conv94.us
  %indvars.iv.next435 = add i64 %indvars.iv434, 1
  %arrayidx79.us = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next435
  %15 = load i8, ptr %arrayidx79.us, align 1, !tbaa !5
  %cmp81.us = icmp eq i8 %15, 45
  br i1 %cmp81.us, label %while.body83.us, label %while.end96.us.loopexit, !llvm.loop !54

land.lhs.true.us:                                 ; preds = %for.body14.us
  %arrayidx21.us = getelementptr inbounds i8, ptr %7, i64 %idxprom15.us
  %16 = load i8, ptr %arrayidx21.us, align 1, !tbaa !5
  %cmp23.us = icmp eq i8 %16, 45
  br i1 %cmp23.us, label %for.inc.us, label %if.then43.us

if.then43.us:                                     ; preds = %land.lhs.true.us
  %idxprom35345.us = sext i8 %16 to i64
  %arrayidx36346.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 45, i64 %idxprom35345.us
  %17 = load i32, ptr %arrayidx36346.us, align 4, !tbaa !10
  %conv37347.us = sitofp i32 %17 to double
  %add348.us = fadd double %tmpscore.0376.us, %conv37347.us
  %add45.us = fadd double %add348.us, %conv74
  %inc365.us = add nsw i32 %k.0375.us, 1
  %idxprom46366.us = sext i32 %inc365.us to i64
  %arrayidx47367.us = getelementptr inbounds i8, ptr %6, i64 %idxprom46366.us
  %18 = load i8, ptr %arrayidx47367.us, align 1, !tbaa !5
  %cmp49368.us = icmp eq i8 %18, 45
  br i1 %cmp49368.us, label %while.body.us, label %while.end.us

while.end.us.loopexit:                            ; preds = %while.body.us
  %19 = trunc i64 %indvars.iv437 to i32
  br label %while.end.us

while.end.us:                                     ; preds = %while.end.us.loopexit, %if.then43.us
  %k.1.lcssa.us = phi i32 [ %k.0375.us, %if.then43.us ], [ %19, %while.end.us.loopexit ]
  %tmpscore.1.lcssa.us = phi double [ %add45.us, %if.then43.us ], [ %add62.us, %while.end.us.loopexit ]
  %cmp63.us = icmp sgt i32 %k.1.lcssa.us, %sub98
  br i1 %cmp63.us, label %for.end.us, label %for.inc.us

for.end.us:                                       ; preds = %for.inc.us, %while.end.us, %while.end96.us
  %tmpscore.4.us = phi double [ %tmpscore.2.lcssa.us, %while.end96.us ], [ %tmpscore.1.lcssa.us, %while.end.us ], [ %tmpscore.3.us, %for.inc.us ]
  %20 = tail call double @llvm.fmuladd.f64(double %tmpscore.4.us, double %5, double %score.0382.us)
  br label %for.inc105.us

while.body.us:                                    ; preds = %if.then43.us, %while.body.us
  %indvars.iv437 = phi i64 [ %indvars.iv.next438, %while.body.us ], [ %idxprom46366.us, %if.then43.us ]
  %tmpscore.1369.us = phi double [ %add62.us, %while.body.us ], [ %add45.us, %if.then43.us ]
  %arrayidx57.us = getelementptr inbounds i8, ptr %7, i64 %indvars.iv437
  %21 = load i8, ptr %arrayidx57.us, align 1, !tbaa !5
  %idxprom59.us = sext i8 %21 to i64
  %arrayidx60.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 45, i64 %idxprom59.us
  %22 = load i32, ptr %arrayidx60.us, align 4, !tbaa !10
  %conv61.us = sitofp i32 %22 to double
  %add62.us = fadd double %tmpscore.1369.us, %conv61.us
  %indvars.iv.next438 = add i64 %indvars.iv437, 1
  %arrayidx47.us = getelementptr inbounds i8, ptr %6, i64 %indvars.iv.next438
  %23 = load i8, ptr %arrayidx47.us, align 1, !tbaa !5
  %cmp49.us = icmp eq i8 %23, 45
  br i1 %cmp49.us, label %while.body.us, label %while.end.us.loopexit, !llvm.loop !55

for.inc.us:                                       ; preds = %while.end.us, %land.lhs.true.us, %while.end96.us, %if.end67.us
  %k.3.us = phi i32 [ %k.0375.us, %land.lhs.true.us ], [ %k.1.lcssa.us, %while.end.us ], [ %k.2.lcssa.us, %while.end96.us ], [ %k.0375.us, %if.end67.us ]
  %tmpscore.3.us = phi double [ %tmpscore.0376.us, %land.lhs.true.us ], [ %tmpscore.1.lcssa.us, %while.end.us ], [ %tmpscore.2.lcssa.us, %while.end96.us ], [ %add.us, %if.end67.us ]
  %inc104.us = add nsw i32 %k.3.us, 1
  %cmp12.us = icmp slt i32 %inc104.us, %conv
  br i1 %cmp12.us, label %for.body14.us, label %for.end.us, !llvm.loop !56

for.inc105.us:                                    ; preds = %for.end.us, %for.body.us
  %score.1.us = phi double [ %score.0382.us, %for.body.us ], [ %20, %for.end.us ]
  %indvars.iv.next441 = add nuw nsw i64 %indvars.iv440, 1
  %exitcond444.not = icmp eq i64 %indvars.iv.next441, %wide.trip.count443
  br i1 %exitcond444.not, label %for.cond108.preheader, label %for.body.us, !llvm.loop !57

for.cond108.preheader.loopexit483.unr-lcssa:      ; preds = %for.inc105.1, %for.body.preheader
  %score.1.lcssa.ph = phi double [ undef, %for.body.preheader ], [ %score.1.1, %for.inc105.1 ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next.1, %for.inc105.1 ]
  %score.0382.unr = phi double [ 0.000000e+00, %for.body.preheader ], [ %score.1.1, %for.inc105.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond108.preheader, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond108.preheader.loopexit483.unr-lcssa
  %cmp2.epil = icmp eq i64 %indvars.iv.unr, %2
  br i1 %cmp2.epil, label %for.cond108.preheader, label %if.end.epil

if.end.epil:                                      ; preds = %for.body.epil
  %arrayidx4.epil = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv.unr
  %24 = load ptr, ptr %arrayidx4.epil, align 8, !tbaa !13
  %arrayidx6.epil = getelementptr inbounds double, ptr %24, i64 %idxprom5
  %25 = load double, ptr %arrayidx6.epil, align 8, !tbaa !20
  %26 = tail call double @llvm.fmuladd.f64(double %25, double 0.000000e+00, double %score.0382.unr)
  br label %for.cond108.preheader

for.cond108.preheader:                            ; preds = %for.cond108.preheader.loopexit483.unr-lcssa, %if.end.epil, %for.body.epil, %for.inc105.us
  %score.0.lcssa = phi double [ %score.1.us, %for.inc105.us ], [ %score.1.lcssa.ph, %for.cond108.preheader.loopexit483.unr-lcssa ], [ %score.0382.unr, %for.body.epil ], [ %26, %if.end.epil ]
  %cmp110422 = icmp sgt i32 %s, 1
  br i1 %cmp110422, label %for.body112.lr.ph, label %for.end241

for.body112.lr.ph:                                ; preds = %for.cond108.preheader
  %sub109 = add i32 %s, -1
  %sub227 = add nsw i32 %conv, -2
  %cmp133401 = icmp sgt i32 %conv, 0
  %27 = load i32, ptr @penalty, align 4
  %conv203 = sitofp i32 %27 to double
  %28 = zext i32 %ex to i64
  %29 = zext i32 %s to i64
  %wide.trip.count473 = zext i32 %sub109 to i64
  %wide.trip.count468 = zext i32 %s to i64
  br i1 %cmp133401, label %for.body112.us, label %for.body112

for.body112.us:                                   ; preds = %for.body112.lr.ph, %for.cond108.loopexit.us
  %indvars.iv470 = phi i64 [ %indvars.iv.next471, %for.cond108.loopexit.us ], [ 0, %for.body112.lr.ph ]
  %indvars.iv463 = phi i64 [ %indvars.iv.next464, %for.cond108.loopexit.us ], [ 1, %for.body112.lr.ph ]
  %score.2424.us = phi double [ %score.3.lcssa.us, %for.cond108.loopexit.us ], [ %score.0.lcssa, %for.body112.lr.ph ]
  %indvars.iv.next471 = add nuw nsw i64 %indvars.iv470, 1
  %cmp115407.us = icmp ult i64 %indvars.iv.next471, %29
  br i1 %cmp115407.us, label %for.body117.lr.ph.us, label %for.cond108.loopexit.us

for.cond108.loopexit.us:                          ; preds = %for.inc236.us415.us, %for.body117.lr.ph.us, %for.body112.us
  %score.3.lcssa.us = phi double [ %score.2424.us, %for.body112.us ], [ %score.2424.us, %for.body117.lr.ph.us ], [ %score.4.us416.us, %for.inc236.us415.us ]
  %indvars.iv.next464 = add nuw nsw i64 %indvars.iv463, 1
  %exitcond474.not = icmp eq i64 %indvars.iv.next471, %wide.trip.count473
  br i1 %exitcond474.not, label %for.end241, label %for.body112.us, !llvm.loop !58

for.body117.lr.ph.us:                             ; preds = %for.body112.us
  %cmp118.us = icmp eq i64 %indvars.iv470, %28
  %arrayidx125.us = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv470
  %arrayidx129.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv470
  br i1 %cmp118.us, label %for.cond108.loopexit.us, label %for.body117.us412.us

for.body117.us412.us:                             ; preds = %for.body117.lr.ph.us, %for.inc236.us415.us
  %indvars.iv465 = phi i64 [ %indvars.iv.next466, %for.inc236.us415.us ], [ %indvars.iv463, %for.body117.lr.ph.us ]
  %score.3409.us413.us = phi double [ %score.4.us416.us, %for.inc236.us415.us ], [ %score.2424.us, %for.body117.lr.ph.us ]
  %cmp120.us.us = icmp eq i64 %indvars.iv465, %28
  br i1 %cmp120.us.us, label %for.inc236.us415.us, label %if.end123.us.us

if.end123.us.us:                                  ; preds = %for.body117.us412.us
  %30 = load ptr, ptr %arrayidx125.us, align 8, !tbaa !13
  %arrayidx127.us.us = getelementptr inbounds double, ptr %30, i64 %indvars.iv465
  %31 = load double, ptr %arrayidx127.us.us, align 8, !tbaa !20
  %32 = load ptr, ptr %arrayidx129.us, align 8, !tbaa !13
  %arrayidx131.us.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv465
  %33 = load ptr, ptr %arrayidx131.us.us, align 8, !tbaa !13
  br label %for.body135.us.us

for.body135.us.us:                                ; preds = %for.inc233.us.us, %if.end123.us.us
  %tmpscore.5403.us.us = phi double [ 0.000000e+00, %if.end123.us.us ], [ %tmpscore.8.us.us, %for.inc233.us.us ]
  %k.4402.us.us = phi i32 [ 0, %if.end123.us.us ], [ %inc234.us.us, %for.inc233.us.us ]
  %idxprom136.us.us = sext i32 %k.4402.us.us to i64
  %arrayidx137.us.us = getelementptr inbounds i8, ptr %32, i64 %idxprom136.us.us
  %34 = load i8, ptr %arrayidx137.us.us, align 1, !tbaa !5
  %cmp139.us.us = icmp eq i8 %34, 45
  br i1 %cmp139.us.us, label %land.lhs.true141.us.us, label %if.end196.us.us

if.end196.us.us:                                  ; preds = %for.body135.us.us
  %idxprom152.us.us = sext i8 %34 to i64
  %arrayidx155.us.us = getelementptr inbounds i8, ptr %33, i64 %idxprom136.us.us
  %35 = load i8, ptr %arrayidx155.us.us, align 1, !tbaa !5
  %idxprom157.us.us = sext i8 %35 to i64
  %arrayidx158.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom152.us.us, i64 %idxprom157.us.us
  %36 = load i32, ptr %arrayidx158.us.us, align 4, !tbaa !10
  %conv159.us.us = sitofp i32 %36 to double
  %add160.us.us = fadd double %tmpscore.5403.us.us, %conv159.us.us
  %cmp200.us.us = icmp eq i8 %35, 45
  br i1 %cmp200.us.us, label %if.then202.us.us, label %for.inc233.us.us

if.then202.us.us:                                 ; preds = %if.end196.us.us
  %add204.us.us = fadd double %add160.us.us, %conv203
  %inc206384.us.us = add nsw i32 %k.4402.us.us, 1
  %idxprom207385.us.us = sext i32 %inc206384.us.us to i64
  %arrayidx208386.us.us = getelementptr inbounds i8, ptr %33, i64 %idxprom207385.us.us
  %37 = load i8, ptr %arrayidx208386.us.us, align 1, !tbaa !5
  %cmp210387.us.us = icmp eq i8 %37, 45
  br i1 %cmp210387.us.us, label %while.body212.us.us, label %while.end225.us.us

while.end225.us.us.loopexit:                      ; preds = %while.body212.us.us
  %38 = trunc i64 %indvars.iv457 to i32
  br label %while.end225.us.us

while.end225.us.us:                               ; preds = %while.end225.us.us.loopexit, %if.then202.us.us
  %k.6.lcssa.us.us = phi i32 [ %k.4402.us.us, %if.then202.us.us ], [ %38, %while.end225.us.us.loopexit ]
  %tmpscore.7.lcssa.us.us = phi double [ %add204.us.us, %if.then202.us.us ], [ %add224.us.us, %while.end225.us.us.loopexit ]
  %cmp228.us.us = icmp sgt i32 %k.6.lcssa.us.us, %sub227
  br i1 %cmp228.us.us, label %for.end235.us.us, label %for.inc233.us.us

while.body212.us.us:                              ; preds = %if.then202.us.us, %while.body212.us.us
  %indvars.iv457 = phi i64 [ %indvars.iv.next458, %while.body212.us.us ], [ %idxprom207385.us.us, %if.then202.us.us ]
  %tmpscore.7388.us.us = phi double [ %add224.us.us, %while.body212.us.us ], [ %add204.us.us, %if.then202.us.us ]
  %arrayidx214.us.us = getelementptr inbounds i8, ptr %32, i64 %indvars.iv457
  %39 = load i8, ptr %arrayidx214.us.us, align 1, !tbaa !5
  %idxprom216.us.us = sext i8 %39 to i64
  %arrayidx222.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom216.us.us, i64 45
  %40 = load i32, ptr %arrayidx222.us.us, align 4, !tbaa !10
  %conv223.us.us = sitofp i32 %40 to double
  %add224.us.us = fadd double %tmpscore.7388.us.us, %conv223.us.us
  %indvars.iv.next458 = add i64 %indvars.iv457, 1
  %arrayidx208.us.us = getelementptr inbounds i8, ptr %33, i64 %indvars.iv.next458
  %41 = load i8, ptr %arrayidx208.us.us, align 1, !tbaa !5
  %cmp210.us.us = icmp eq i8 %41, 45
  br i1 %cmp210.us.us, label %while.body212.us.us, label %while.end225.us.us.loopexit, !llvm.loop !59

land.lhs.true141.us.us:                           ; preds = %for.body135.us.us
  %arrayidx143.us.us = getelementptr inbounds i8, ptr %33, i64 %idxprom136.us.us
  %42 = load i8, ptr %arrayidx143.us.us, align 1, !tbaa !5
  %cmp145.us.us = icmp eq i8 %42, 45
  br i1 %cmp145.us.us, label %for.inc233.us.us, label %if.then166.us.us

if.then166.us.us:                                 ; preds = %land.lhs.true141.us.us
  %idxprom157352.us.us = sext i8 %42 to i64
  %arrayidx158353.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 45, i64 %idxprom157352.us.us
  %43 = load i32, ptr %arrayidx158353.us.us, align 4, !tbaa !10
  %conv159354.us.us = sitofp i32 %43 to double
  %add160355.us.us = fadd double %tmpscore.5403.us.us, %conv159354.us.us
  %add168.us.us = fadd double %add160355.us.us, %conv203
  %inc170392.us.us = add nsw i32 %k.4402.us.us, 1
  %idxprom171393.us.us = sext i32 %inc170392.us.us to i64
  %arrayidx172394.us.us = getelementptr inbounds i8, ptr %32, i64 %idxprom171393.us.us
  %44 = load i8, ptr %arrayidx172394.us.us, align 1, !tbaa !5
  %cmp174395.us.us = icmp eq i8 %44, 45
  br i1 %cmp174395.us.us, label %while.body176.us.us, label %while.end189.us.us

while.end189.us.us.loopexit:                      ; preds = %while.body176.us.us
  %45 = trunc i64 %indvars.iv460 to i32
  br label %while.end189.us.us

while.end189.us.us:                               ; preds = %while.end189.us.us.loopexit, %if.then166.us.us
  %k.5.lcssa.us.us = phi i32 [ %k.4402.us.us, %if.then166.us.us ], [ %45, %while.end189.us.us.loopexit ]
  %tmpscore.6.lcssa.us.us = phi double [ %add168.us.us, %if.then166.us.us ], [ %add188.us.us, %while.end189.us.us.loopexit ]
  %cmp192.us.us = icmp sgt i32 %k.5.lcssa.us.us, %sub227
  br i1 %cmp192.us.us, label %for.end235.us.us, label %for.inc233.us.us

for.end235.us.us:                                 ; preds = %for.inc233.us.us, %while.end189.us.us, %while.end225.us.us
  %tmpscore.9.us.us = phi double [ %tmpscore.7.lcssa.us.us, %while.end225.us.us ], [ %tmpscore.6.lcssa.us.us, %while.end189.us.us ], [ %tmpscore.8.us.us, %for.inc233.us.us ]
  %46 = tail call double @llvm.fmuladd.f64(double %tmpscore.9.us.us, double %31, double %score.3409.us413.us)
  br label %for.inc236.us415.us

while.body176.us.us:                              ; preds = %if.then166.us.us, %while.body176.us.us
  %indvars.iv460 = phi i64 [ %indvars.iv.next461, %while.body176.us.us ], [ %idxprom171393.us.us, %if.then166.us.us ]
  %tmpscore.6396.us.us = phi double [ %add188.us.us, %while.body176.us.us ], [ %add168.us.us, %if.then166.us.us ]
  %arrayidx183.us.us = getelementptr inbounds i8, ptr %33, i64 %indvars.iv460
  %47 = load i8, ptr %arrayidx183.us.us, align 1, !tbaa !5
  %idxprom185.us.us = sext i8 %47 to i64
  %arrayidx186.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 45, i64 %idxprom185.us.us
  %48 = load i32, ptr %arrayidx186.us.us, align 4, !tbaa !10
  %conv187.us.us = sitofp i32 %48 to double
  %add188.us.us = fadd double %tmpscore.6396.us.us, %conv187.us.us
  %indvars.iv.next461 = add i64 %indvars.iv460, 1
  %arrayidx172.us.us = getelementptr inbounds i8, ptr %32, i64 %indvars.iv.next461
  %49 = load i8, ptr %arrayidx172.us.us, align 1, !tbaa !5
  %cmp174.us.us = icmp eq i8 %49, 45
  br i1 %cmp174.us.us, label %while.body176.us.us, label %while.end189.us.us.loopexit, !llvm.loop !60

for.inc233.us.us:                                 ; preds = %while.end189.us.us, %land.lhs.true141.us.us, %while.end225.us.us, %if.end196.us.us
  %k.7.us.us = phi i32 [ %k.4402.us.us, %land.lhs.true141.us.us ], [ %k.5.lcssa.us.us, %while.end189.us.us ], [ %k.6.lcssa.us.us, %while.end225.us.us ], [ %k.4402.us.us, %if.end196.us.us ]
  %tmpscore.8.us.us = phi double [ %tmpscore.5403.us.us, %land.lhs.true141.us.us ], [ %tmpscore.6.lcssa.us.us, %while.end189.us.us ], [ %tmpscore.7.lcssa.us.us, %while.end225.us.us ], [ %add160.us.us, %if.end196.us.us ]
  %inc234.us.us = add nsw i32 %k.7.us.us, 1
  %cmp133.us.us = icmp slt i32 %inc234.us.us, %conv
  br i1 %cmp133.us.us, label %for.body135.us.us, label %for.end235.us.us, !llvm.loop !61

for.inc236.us415.us:                              ; preds = %for.end235.us.us, %for.body117.us412.us
  %score.4.us416.us = phi double [ %score.3409.us413.us, %for.body117.us412.us ], [ %46, %for.end235.us.us ]
  %indvars.iv.next466 = add nuw nsw i64 %indvars.iv465, 1
  %exitcond469.not = icmp eq i64 %indvars.iv.next466, %wide.trip.count468
  br i1 %exitcond469.not, label %for.cond108.loopexit.us, label %for.body117.us412.us, !llvm.loop !62

for.body:                                         ; preds = %for.inc105.1, %for.body.preheader.new
  %indvars.iv = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next.1, %for.inc105.1 ]
  %score.0382 = phi double [ 0.000000e+00, %for.body.preheader.new ], [ %score.1.1, %for.inc105.1 ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.1, %for.inc105.1 ]
  %cmp2 = icmp eq i64 %indvars.iv, %2
  br i1 %cmp2, label %for.inc105, label %if.end

if.end:                                           ; preds = %for.body
  %arrayidx4 = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv
  %50 = load ptr, ptr %arrayidx4, align 8, !tbaa !13
  %arrayidx6 = getelementptr inbounds double, ptr %50, i64 %idxprom5
  %51 = load double, ptr %arrayidx6, align 8, !tbaa !20
  %52 = tail call double @llvm.fmuladd.f64(double %51, double 0.000000e+00, double %score.0382)
  br label %for.inc105

for.inc105:                                       ; preds = %for.body, %if.end
  %score.1 = phi double [ %score.0382, %for.body ], [ %52, %if.end ]
  %indvars.iv.next = or i64 %indvars.iv, 1
  %cmp2.1 = icmp eq i64 %indvars.iv.next, %2
  br i1 %cmp2.1, label %for.inc105.1, label %if.end.1

if.end.1:                                         ; preds = %for.inc105
  %arrayidx4.1 = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv.next
  %53 = load ptr, ptr %arrayidx4.1, align 8, !tbaa !13
  %arrayidx6.1 = getelementptr inbounds double, ptr %53, i64 %idxprom5
  %54 = load double, ptr %arrayidx6.1, align 8, !tbaa !20
  %55 = tail call double @llvm.fmuladd.f64(double %54, double 0.000000e+00, double %score.1)
  br label %for.inc105.1

for.inc105.1:                                     ; preds = %if.end.1, %for.inc105
  %score.1.1 = phi double [ %score.1, %for.inc105 ], [ %55, %if.end.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond108.preheader.loopexit483.unr-lcssa, label %for.body, !llvm.loop !57

for.cond108.loopexit:                             ; preds = %for.inc236, %for.body117.lr.ph, %for.body112
  %score.3.lcssa = phi double [ %score.2424, %for.body112 ], [ %score.2424, %for.body117.lr.ph ], [ %score.4, %for.inc236 ]
  %indvars.iv.next446 = add nuw nsw i64 %indvars.iv445, 1
  %exitcond456.not = icmp eq i64 %indvars.iv.next453, %wide.trip.count473
  br i1 %exitcond456.not, label %for.end241, label %for.body112, !llvm.loop !58

for.body112:                                      ; preds = %for.body112.lr.ph, %for.cond108.loopexit
  %indvars.iv452 = phi i64 [ %indvars.iv.next453, %for.cond108.loopexit ], [ 0, %for.body112.lr.ph ]
  %indvars.iv445 = phi i64 [ %indvars.iv.next446, %for.cond108.loopexit ], [ 1, %for.body112.lr.ph ]
  %score.2424 = phi double [ %score.3.lcssa, %for.cond108.loopexit ], [ %score.0.lcssa, %for.body112.lr.ph ]
  %indvars.iv.next453 = add nuw nsw i64 %indvars.iv452, 1
  %cmp115407 = icmp ult i64 %indvars.iv.next453, %29
  br i1 %cmp115407, label %for.body117.lr.ph, label %for.cond108.loopexit

for.body117.lr.ph:                                ; preds = %for.body112
  %cmp118 = icmp eq i64 %indvars.iv452, %28
  %arrayidx125 = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv452
  br i1 %cmp118, label %for.cond108.loopexit, label %for.body117

for.body117:                                      ; preds = %for.body117.lr.ph, %for.inc236
  %indvars.iv447 = phi i64 [ %indvars.iv.next448, %for.inc236 ], [ %indvars.iv445, %for.body117.lr.ph ]
  %score.3409 = phi double [ %score.4, %for.inc236 ], [ %score.2424, %for.body117.lr.ph ]
  %cmp120 = icmp eq i64 %indvars.iv447, %28
  br i1 %cmp120, label %for.inc236, label %if.end123

if.end123:                                        ; preds = %for.body117
  %56 = load ptr, ptr %arrayidx125, align 8, !tbaa !13
  %arrayidx127 = getelementptr inbounds double, ptr %56, i64 %indvars.iv447
  %57 = load double, ptr %arrayidx127, align 8, !tbaa !20
  %58 = tail call double @llvm.fmuladd.f64(double %57, double 0.000000e+00, double %score.3409)
  br label %for.inc236

for.inc236:                                       ; preds = %for.body117, %if.end123
  %score.4 = phi double [ %score.3409, %for.body117 ], [ %58, %if.end123 ]
  %indvars.iv.next448 = add nuw nsw i64 %indvars.iv447, 1
  %exitcond451.not = icmp eq i64 %indvars.iv.next448, %wide.trip.count468
  br i1 %exitcond451.not, label %for.cond108.loopexit, label %for.body117, !llvm.loop !62

for.end241:                                       ; preds = %for.cond108.loopexit, %for.cond108.loopexit.us, %entry, %for.cond108.preheader
  %score.2.lcssa = phi double [ %score.0.lcssa, %for.cond108.preheader ], [ 0.000000e+00, %entry ], [ %score.3.lcssa.us, %for.cond108.loopexit.us ], [ %score.3.lcssa, %for.cond108.loopexit ]
  ret double %score.2.lcssa
}

; Function Attrs: nofree nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local double @score_calc4(ptr nocapture noundef readonly %seq, i32 noundef %s, ptr nocapture noundef readonly %eff, i32 %ex) local_unnamed_addr #13 {
entry:
  %0 = load ptr, ptr %seq, align 8, !tbaa !13
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #31
  %call.fr = freeze i64 %call
  %conv = trunc i64 %call.fr to i32
  %sub = add i32 %s, -1
  %cmp231 = icmp sgt i32 %s, 1
  br i1 %cmp231, label %for.body.lr.ph, label %for.end98

for.body.lr.ph:                                   ; preds = %entry
  %1 = load i32, ptr @mix, align 4
  %.fr = freeze i32 %1
  %cmp9 = icmp eq i32 %.fr, 1
  %sub84 = add nsw i32 %conv, -2
  %cmp16137 = icmp sgt i32 %conv, 0
  %2 = load i32, ptr @scoremtx, align 4
  %tobool.not = icmp eq i32 %2, 0
  %mul = select i1 %tobool.not, i32 400, i32 0
  %3 = load i32, ptr @penalty, align 4
  %4 = load i32, ptr getelementptr inbounds ([26 x [26 x i32]], ptr @n_dis, i64 0, i64 24), align 16
  %sub71 = sub nsw i32 %3, %4
  %conv72 = sext i32 %sub71 to i64
  br i1 %cmp9, label %for.body.lr.ph.split.us, label %for.body.lr.ph.split

for.body.lr.ph.split.us:                          ; preds = %for.body.lr.ph
  br i1 %cmp16137, label %for.body.us.us.preheader, label %for.end98

for.body.us.us.preheader:                         ; preds = %for.body.lr.ph.split.us
  %5 = zext i32 %s to i64
  %wide.trip.count316 = zext i32 %sub to i64
  %wide.trip.count311 = zext i32 %s to i64
  br label %for.body.us.us

for.body.us.us:                                   ; preds = %for.body.us.us.preheader, %for.cond.loopexit.us.us
  %indvars.iv313 = phi i64 [ 0, %for.body.us.us.preheader ], [ %indvars.iv.next314, %for.cond.loopexit.us.us ]
  %indvars.iv306 = phi i64 [ 1, %for.body.us.us.preheader ], [ %indvars.iv.next307, %for.cond.loopexit.us.us ]
  %score.0233.us.us = phi double [ 0.000000e+00, %for.body.us.us.preheader ], [ %score.1.lcssa.us.us, %for.cond.loopexit.us.us ]
  %c.0232.us.us = phi double [ 0.000000e+00, %for.body.us.us.preheader ], [ %c.1.lcssa.us.us, %for.cond.loopexit.us.us ]
  %indvars.iv.next314 = add nuw nsw i64 %indvars.iv313, 1
  %cmp3146.us.us = icmp ult i64 %indvars.iv.next314, %5
  br i1 %cmp3146.us.us, label %for.body5.lr.ph.us.us, label %for.cond.loopexit.us.us

for.cond.loopexit.us.us:                          ; preds = %for.end.us.us.us.us, %for.body.us.us
  %c.1.lcssa.us.us = phi double [ %c.0232.us.us, %for.body.us.us ], [ %c.4.us.us.us.us, %for.end.us.us.us.us ]
  %score.1.lcssa.us.us = phi double [ %score.0233.us.us, %for.body.us.us ], [ %15, %for.end.us.us.us.us ]
  %indvars.iv.next307 = add nuw nsw i64 %indvars.iv306, 1
  %exitcond317.not = icmp eq i64 %indvars.iv.next314, %wide.trip.count316
  br i1 %exitcond317.not, label %for.end98, label %for.body.us.us, !llvm.loop !63

for.body5.lr.ph.us.us:                            ; preds = %for.body.us.us
  %arrayidx12.us.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv313
  %6 = load ptr, ptr %arrayidx12.us.us, align 8, !tbaa !13
  br label %for.body5.us.us.us.us

for.body5.us.us.us.us:                            ; preds = %for.end.us.us.us.us, %for.body5.lr.ph.us.us
  %indvars.iv308 = phi i64 [ %indvars.iv.next309, %for.end.us.us.us.us ], [ %indvars.iv306, %for.body5.lr.ph.us.us ]
  %score.1148.us.us.us.us = phi double [ %15, %for.end.us.us.us.us ], [ %score.0233.us.us, %for.body5.lr.ph.us.us ]
  %c.1147.us.us.us.us = phi double [ %c.4.us.us.us.us, %for.end.us.us.us.us ], [ %c.0232.us.us, %for.body5.lr.ph.us.us ]
  %arrayidx14.us.us.us.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv308
  %7 = load ptr, ptr %arrayidx14.us.us.us.us, align 8, !tbaa !13
  br label %for.body18.us.us.us.us

for.body18.us.us.us.us:                           ; preds = %for.inc.us.us.us.us, %for.body5.us.us.us.us
  %tmpscore.0140.us.us.us.us = phi i64 [ 0, %for.body5.us.us.us.us ], [ %tmpscore.1.us.us.us.us, %for.inc.us.us.us.us ]
  %k.0139.us.us.us.us = phi i32 [ 0, %for.body5.us.us.us.us ], [ %inc90.us.us.us.us, %for.inc.us.us.us.us ]
  %c.2138.us.us.us.us = phi double [ %c.1147.us.us.us.us, %for.body5.us.us.us.us ], [ %c.3.us.us.us.us, %for.inc.us.us.us.us ]
  %idxprom19.us.us.us.us = sext i32 %k.0139.us.us.us.us to i64
  %arrayidx20.us.us.us.us = getelementptr inbounds i8, ptr %6, i64 %idxprom19.us.us.us.us
  %8 = load i8, ptr %arrayidx20.us.us.us.us, align 1, !tbaa !5
  %cmp22.us.us.us.us = icmp eq i8 %8, 45
  %arrayidx25.us.us.us.us = getelementptr inbounds i8, ptr %7, i64 %idxprom19.us.us.us.us
  %9 = load i8, ptr %arrayidx25.us.us.us.us, align 1, !tbaa !5
  %cmp27.us.us.us.us = icmp eq i8 %9, 45
  %or.cond = select i1 %cmp22.us.us.us.us, i1 %cmp27.us.us.us.us, i1 false
  br i1 %or.cond, label %for.inc.us.us.us.us, label %if.end30.us.us.us.us

if.end30.us.us.us.us:                             ; preds = %for.body18.us.us.us.us
  %idxprom34.us.us.us.us = sext i8 %8 to i64
  %idxprom39.us.us.us.us = sext i8 %9 to i64
  %arrayidx40.us.us.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom34.us.us.us.us, i64 %idxprom39.us.us.us.us
  %10 = load i32, ptr %arrayidx40.us.us.us.us, align 4, !tbaa !10
  %add41.us.us.us.us = add nsw i32 %mul, %10
  %conv42.us.us.us.us = sext i32 %add41.us.us.us.us to i64
  %add43.us.us.us.us = add nsw i64 %tmpscore.0140.us.us.us.us, %conv42.us.us.us.us
  %add44.us.us.us.us = fadd double %c.2138.us.us.us.us, 1.000000e+00
  br i1 %cmp22.us.us.us.us, label %while.cond.us.us.us.us, label %if.end64.us.us.us.us

if.end64.us.us.us.us:                             ; preds = %if.end30.us.us.us.us
  %cmp68.us.us.us.us = icmp eq i8 %9, 45
  br i1 %cmp68.us.us.us.us, label %while.cond74.us.us.us.us, label %for.inc.us.us.us.us

while.cond74.us.us.us.us:                         ; preds = %if.end64.us.us.us.us, %while.cond74.us.us.us.us
  %indvars.iv300 = phi i64 [ %indvars.iv.next301, %while.cond74.us.us.us.us ], [ %idxprom19.us.us.us.us, %if.end64.us.us.us.us ]
  %indvars.iv.next301 = add i64 %indvars.iv300, 1
  %arrayidx77.us.us.us.us = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next301
  %11 = load i8, ptr %arrayidx77.us.us.us.us, align 1, !tbaa !5
  %cmp79.us.us.us.us = icmp eq i8 %11, 45
  br i1 %cmp79.us.us.us.us, label %while.cond74.us.us.us.us, label %while.end82.us.us.us.us, !llvm.loop !64

while.end82.us.us.us.us:                          ; preds = %while.cond74.us.us.us.us
  %add73.us.us.us.us = add nsw i64 %add43.us.us.us.us, %conv72
  %12 = trunc i64 %indvars.iv300 to i32
  %cmp85.us.us.us.us = icmp slt i32 %sub84, %12
  br i1 %cmp85.us.us.us.us, label %for.end.us.us.us.us, label %for.inc.us.us.us.us

while.cond.us.us.us.us:                           ; preds = %if.end30.us.us.us.us, %while.cond.us.us.us.us
  %indvars.iv303 = phi i64 [ %indvars.iv.next304, %while.cond.us.us.us.us ], [ %idxprom19.us.us.us.us, %if.end30.us.us.us.us ]
  %indvars.iv.next304 = add i64 %indvars.iv303, 1
  %arrayidx55.us.us.us.us = getelementptr inbounds i8, ptr %6, i64 %indvars.iv.next304
  %13 = load i8, ptr %arrayidx55.us.us.us.us, align 1, !tbaa !5
  %cmp57.us.us.us.us = icmp eq i8 %13, 45
  br i1 %cmp57.us.us.us.us, label %while.cond.us.us.us.us, label %while.end.us.us.us.us, !llvm.loop !65

while.end.us.us.us.us:                            ; preds = %while.cond.us.us.us.us
  %add53.us.us.us.us = add nsw i64 %add43.us.us.us.us, %conv72
  %14 = trunc i64 %indvars.iv303 to i32
  %cmp60.us.us.us.us = icmp slt i32 %sub84, %14
  br i1 %cmp60.us.us.us.us, label %for.end.us.us.us.us, label %for.inc.us.us.us.us

for.end.us.us.us.us:                              ; preds = %for.inc.us.us.us.us, %while.end.us.us.us.us, %while.end82.us.us.us.us
  %c.4.us.us.us.us = phi double [ %add44.us.us.us.us, %while.end82.us.us.us.us ], [ %add44.us.us.us.us, %while.end.us.us.us.us ], [ %c.3.us.us.us.us, %for.inc.us.us.us.us ]
  %tmpscore.2.us.us.us.us = phi i64 [ %add73.us.us.us.us, %while.end82.us.us.us.us ], [ %add53.us.us.us.us, %while.end.us.us.us.us ], [ %tmpscore.1.us.us.us.us, %for.inc.us.us.us.us ]
  %conv91.us.us.us.us = sitofp i64 %tmpscore.2.us.us.us.us to double
  %15 = fadd double %score.1148.us.us.us.us, %conv91.us.us.us.us
  %indvars.iv.next309 = add nuw nsw i64 %indvars.iv308, 1
  %exitcond312.not = icmp eq i64 %indvars.iv.next309, %wide.trip.count311
  br i1 %exitcond312.not, label %for.cond.loopexit.us.us, label %for.body5.us.us.us.us, !llvm.loop !66

for.inc.us.us.us.us:                              ; preds = %for.body18.us.us.us.us, %while.end.us.us.us.us, %while.end82.us.us.us.us, %if.end64.us.us.us.us
  %c.3.us.us.us.us = phi double [ %add44.us.us.us.us, %while.end.us.us.us.us ], [ %add44.us.us.us.us, %while.end82.us.us.us.us ], [ %add44.us.us.us.us, %if.end64.us.us.us.us ], [ %c.2138.us.us.us.us, %for.body18.us.us.us.us ]
  %k.3.us.us.us.us = phi i32 [ %14, %while.end.us.us.us.us ], [ %12, %while.end82.us.us.us.us ], [ %k.0139.us.us.us.us, %if.end64.us.us.us.us ], [ %k.0139.us.us.us.us, %for.body18.us.us.us.us ]
  %tmpscore.1.us.us.us.us = phi i64 [ %add53.us.us.us.us, %while.end.us.us.us.us ], [ %add73.us.us.us.us, %while.end82.us.us.us.us ], [ %add43.us.us.us.us, %if.end64.us.us.us.us ], [ %tmpscore.0140.us.us.us.us, %for.body18.us.us.us.us ]
  %inc90.us.us.us.us = add nsw i32 %k.3.us.us.us.us, 1
  %cmp16.us.us.us.us = icmp slt i32 %inc90.us.us.us.us, %conv
  br i1 %cmp16.us.us.us.us, label %for.body18.us.us.us.us, label %for.end.us.us.us.us, !llvm.loop !67

for.body.lr.ph.split:                             ; preds = %for.body.lr.ph
  %16 = zext i32 %s to i64
  %wide.trip.count296 = zext i32 %sub to i64
  %wide.trip.count291 = zext i32 %s to i64
  br i1 %cmp16137, label %for.body.us246, label %for.body.preheader

for.body.preheader:                               ; preds = %for.body.lr.ph.split
  %xtraiter = and i64 %wide.trip.count296, 1
  %17 = icmp eq i32 %sub, 1
  br i1 %17, label %for.end98.loopexit332.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %wide.trip.count296, 4294967294
  br label %for.body

for.body.us246:                                   ; preds = %for.body.lr.ph.split, %for.cond.loopexit.us252
  %indvars.iv293 = phi i64 [ %indvars.iv.next294, %for.cond.loopexit.us252 ], [ 0, %for.body.lr.ph.split ]
  %indvars.iv286 = phi i64 [ %indvars.iv.next287, %for.cond.loopexit.us252 ], [ 1, %for.body.lr.ph.split ]
  %score.0233.us248 = phi double [ %score.1.lcssa.us254, %for.cond.loopexit.us252 ], [ 0.000000e+00, %for.body.lr.ph.split ]
  %c.0232.us249 = phi double [ %c.1.lcssa.us253, %for.cond.loopexit.us252 ], [ 0.000000e+00, %for.body.lr.ph.split ]
  %indvars.iv.next294 = add nuw nsw i64 %indvars.iv293, 1
  %cmp3146.us251 = icmp ult i64 %indvars.iv.next294, %16
  br i1 %cmp3146.us251, label %for.body5.lr.ph.us256, label %for.cond.loopexit.us252

for.cond.loopexit.us252:                          ; preds = %for.end.us203.us, %for.body.us246
  %c.1.lcssa.us253 = phi double [ %c.0232.us249, %for.body.us246 ], [ %c.4.us204.us, %for.end.us203.us ]
  %score.1.lcssa.us254 = phi double [ %score.0233.us248, %for.body.us246 ], [ %29, %for.end.us203.us ]
  %indvars.iv.next287 = add nuw nsw i64 %indvars.iv286, 1
  %exitcond297.not = icmp eq i64 %indvars.iv.next294, %wide.trip.count296
  br i1 %exitcond297.not, label %for.end98, label %for.body.us246, !llvm.loop !63

for.body5.lr.ph.us256:                            ; preds = %for.body.us246
  %arrayidx6.us258 = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv293
  %18 = load ptr, ptr %arrayidx6.us258, align 8, !tbaa !13
  %arrayidx12.us259 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv293
  %19 = load ptr, ptr %arrayidx12.us259, align 8, !tbaa !13
  br label %for.body5.us153.us

for.body5.us153.us:                               ; preds = %for.end.us203.us, %for.body5.lr.ph.us256
  %indvars.iv288 = phi i64 [ %indvars.iv.next289, %for.end.us203.us ], [ %indvars.iv286, %for.body5.lr.ph.us256 ]
  %score.1148.us155.us = phi double [ %29, %for.end.us203.us ], [ %score.0233.us248, %for.body5.lr.ph.us256 ]
  %c.1147.us156.us = phi double [ %c.4.us204.us, %for.end.us203.us ], [ %c.0232.us249, %for.body5.lr.ph.us256 ]
  %arrayidx8.us158.us = getelementptr inbounds double, ptr %18, i64 %indvars.iv288
  %20 = load double, ptr %arrayidx8.us158.us, align 8, !tbaa !20
  %arrayidx14.us159.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv288
  %21 = load ptr, ptr %arrayidx14.us159.us, align 8, !tbaa !13
  br label %for.body18.us160.us

for.body18.us160.us:                              ; preds = %for.inc.us209.us, %for.body5.us153.us
  %tmpscore.0140.us161.us = phi i64 [ 0, %for.body5.us153.us ], [ %tmpscore.1.us212.us, %for.inc.us209.us ]
  %k.0139.us162.us = phi i32 [ 0, %for.body5.us153.us ], [ %inc90.us213.us, %for.inc.us209.us ]
  %c.2138.us163.us = phi double [ %c.1147.us156.us, %for.body5.us153.us ], [ %c.3.us210.us, %for.inc.us209.us ]
  %idxprom19.us164.us = sext i32 %k.0139.us162.us to i64
  %arrayidx20.us165.us = getelementptr inbounds i8, ptr %19, i64 %idxprom19.us164.us
  %22 = load i8, ptr %arrayidx20.us165.us, align 1, !tbaa !5
  %cmp22.us166.us = icmp eq i8 %22, 45
  %arrayidx25.us168.us = getelementptr inbounds i8, ptr %21, i64 %idxprom19.us164.us
  %23 = load i8, ptr %arrayidx25.us168.us, align 1, !tbaa !5
  %cmp27.us169.us = icmp eq i8 %23, 45
  %or.cond324 = select i1 %cmp22.us166.us, i1 %cmp27.us169.us, i1 false
  br i1 %or.cond324, label %for.inc.us209.us, label %if.end30.us170.us

if.end30.us170.us:                                ; preds = %for.body18.us160.us
  %idxprom34.us171.us = sext i8 %22 to i64
  %idxprom39.us173.us = sext i8 %23 to i64
  %arrayidx40.us174.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom34.us171.us, i64 %idxprom39.us173.us
  %24 = load i32, ptr %arrayidx40.us174.us, align 4, !tbaa !10
  %add41.us175.us = add nsw i32 %mul, %24
  %conv42.us176.us = sext i32 %add41.us175.us to i64
  %add43.us177.us = add nsw i64 %tmpscore.0140.us161.us, %conv42.us176.us
  %add44.us178.us = fadd double %20, %c.2138.us163.us
  br i1 %cmp22.us166.us, label %while.cond.us194.us, label %if.end64.us179.us

if.end64.us179.us:                                ; preds = %if.end30.us170.us
  %cmp68.us180.us = icmp eq i8 %23, 45
  br i1 %cmp68.us180.us, label %while.cond74.us183.us, label %for.inc.us209.us

while.cond74.us183.us:                            ; preds = %if.end64.us179.us, %while.cond74.us183.us
  %indvars.iv280 = phi i64 [ %indvars.iv.next281, %while.cond74.us183.us ], [ %idxprom19.us164.us, %if.end64.us179.us ]
  %indvars.iv.next281 = add i64 %indvars.iv280, 1
  %arrayidx77.us187.us = getelementptr inbounds i8, ptr %21, i64 %indvars.iv.next281
  %25 = load i8, ptr %arrayidx77.us187.us, align 1, !tbaa !5
  %cmp79.us188.us = icmp eq i8 %25, 45
  br i1 %cmp79.us188.us, label %while.cond74.us183.us, label %while.end82.us189.us, !llvm.loop !64

while.end82.us189.us:                             ; preds = %while.cond74.us183.us
  %add73.us182.us = add nsw i64 %add43.us177.us, %conv72
  %26 = trunc i64 %indvars.iv280 to i32
  %cmp85.us191.us = icmp slt i32 %sub84, %26
  br i1 %cmp85.us191.us, label %for.end.us203.us, label %for.inc.us209.us

while.cond.us194.us:                              ; preds = %if.end30.us170.us, %while.cond.us194.us
  %indvars.iv283 = phi i64 [ %indvars.iv.next284, %while.cond.us194.us ], [ %idxprom19.us164.us, %if.end30.us170.us ]
  %indvars.iv.next284 = add i64 %indvars.iv283, 1
  %arrayidx55.us198.us = getelementptr inbounds i8, ptr %19, i64 %indvars.iv.next284
  %27 = load i8, ptr %arrayidx55.us198.us, align 1, !tbaa !5
  %cmp57.us199.us = icmp eq i8 %27, 45
  br i1 %cmp57.us199.us, label %while.cond.us194.us, label %while.end.us200.us, !llvm.loop !65

while.end.us200.us:                               ; preds = %while.cond.us194.us
  %add53.us193.us = add nsw i64 %add43.us177.us, %conv72
  %28 = trunc i64 %indvars.iv283 to i32
  %cmp60.us202.us = icmp slt i32 %sub84, %28
  br i1 %cmp60.us202.us, label %for.end.us203.us, label %for.inc.us209.us

for.end.us203.us:                                 ; preds = %for.inc.us209.us, %while.end.us200.us, %while.end82.us189.us
  %c.4.us204.us = phi double [ %add44.us178.us, %while.end82.us189.us ], [ %add44.us178.us, %while.end.us200.us ], [ %c.3.us210.us, %for.inc.us209.us ]
  %tmpscore.2.us205.us = phi i64 [ %add73.us182.us, %while.end82.us189.us ], [ %add53.us193.us, %while.end.us200.us ], [ %tmpscore.1.us212.us, %for.inc.us209.us ]
  %conv91.us206.us = sitofp i64 %tmpscore.2.us205.us to double
  %29 = tail call double @llvm.fmuladd.f64(double %conv91.us206.us, double %20, double %score.1148.us155.us)
  %indvars.iv.next289 = add nuw nsw i64 %indvars.iv288, 1
  %exitcond292.not = icmp eq i64 %indvars.iv.next289, %wide.trip.count291
  br i1 %exitcond292.not, label %for.cond.loopexit.us252, label %for.body5.us153.us, !llvm.loop !66

for.inc.us209.us:                                 ; preds = %for.body18.us160.us, %while.end.us200.us, %while.end82.us189.us, %if.end64.us179.us
  %c.3.us210.us = phi double [ %add44.us178.us, %while.end.us200.us ], [ %add44.us178.us, %while.end82.us189.us ], [ %add44.us178.us, %if.end64.us179.us ], [ %c.2138.us163.us, %for.body18.us160.us ]
  %k.3.us211.us = phi i32 [ %28, %while.end.us200.us ], [ %26, %while.end82.us189.us ], [ %k.0139.us162.us, %if.end64.us179.us ], [ %k.0139.us162.us, %for.body18.us160.us ]
  %tmpscore.1.us212.us = phi i64 [ %add53.us193.us, %while.end.us200.us ], [ %add73.us182.us, %while.end82.us189.us ], [ %add43.us177.us, %if.end64.us179.us ], [ %tmpscore.0140.us161.us, %for.body18.us160.us ]
  %inc90.us213.us = add nsw i32 %k.3.us211.us, 1
  %cmp16.us214.us = icmp slt i32 %inc90.us213.us, %conv
  br i1 %cmp16.us214.us, label %for.body18.us160.us, label %for.end.us203.us, !llvm.loop !67

for.cond.loopexit:                                ; preds = %for.body5, %for.body
  %score.1.lcssa = phi double [ %score.0233, %for.body ], [ %35, %for.body5 ]
  %indvars.iv.next276.1 = add nuw nsw i64 %indvars.iv275, 2
  %cmp3146.1 = icmp ult i64 %indvars.iv.next276.1, %16
  br i1 %cmp3146.1, label %for.body5.lr.ph.1, label %for.cond.loopexit.1

for.body5.lr.ph.1:                                ; preds = %for.cond.loopexit
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx6.1 = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv.next276
  %30 = load ptr, ptr %arrayidx6.1, align 8, !tbaa !13
  br label %for.body5.1

for.body5.1:                                      ; preds = %for.body5.1, %for.body5.lr.ph.1
  %indvars.iv272.1 = phi i64 [ %indvars.iv.next, %for.body5.lr.ph.1 ], [ %indvars.iv.next273.1, %for.body5.1 ]
  %score.1148.1 = phi double [ %score.1.lcssa, %for.body5.lr.ph.1 ], [ %32, %for.body5.1 ]
  %arrayidx8.1 = getelementptr inbounds double, ptr %30, i64 %indvars.iv272.1
  %31 = load double, ptr %arrayidx8.1, align 8, !tbaa !20
  %32 = tail call double @llvm.fmuladd.f64(double %31, double 0.000000e+00, double %score.1148.1)
  %indvars.iv.next273.1 = add nuw nsw i64 %indvars.iv272.1, 1
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next273.1, %wide.trip.count291
  br i1 %exitcond.not.1, label %for.cond.loopexit.1, label %for.body5.1, !llvm.loop !66

for.cond.loopexit.1:                              ; preds = %for.body5.1, %for.cond.loopexit
  %score.1.lcssa.1 = phi double [ %score.1.lcssa, %for.cond.loopexit ], [ %32, %for.body5.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.end98.loopexit332.unr-lcssa, label %for.body, !llvm.loop !63

for.body:                                         ; preds = %for.cond.loopexit.1, %for.body.preheader.new
  %indvars.iv275 = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next276.1, %for.cond.loopexit.1 ]
  %indvars.iv = phi i64 [ 1, %for.body.preheader.new ], [ %indvars.iv.next.1, %for.cond.loopexit.1 ]
  %score.0233 = phi double [ 0.000000e+00, %for.body.preheader.new ], [ %score.1.lcssa.1, %for.cond.loopexit.1 ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.1, %for.cond.loopexit.1 ]
  %indvars.iv.next276 = or i64 %indvars.iv275, 1
  %cmp3146 = icmp ult i64 %indvars.iv.next276, %16
  br i1 %cmp3146, label %for.body5.lr.ph, label %for.cond.loopexit

for.body5.lr.ph:                                  ; preds = %for.body
  %arrayidx6 = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv275
  %33 = load ptr, ptr %arrayidx6, align 8, !tbaa !13
  br label %for.body5

for.body5:                                        ; preds = %for.body5.lr.ph, %for.body5
  %indvars.iv272 = phi i64 [ %indvars.iv, %for.body5.lr.ph ], [ %indvars.iv.next273, %for.body5 ]
  %score.1148 = phi double [ %score.0233, %for.body5.lr.ph ], [ %35, %for.body5 ]
  %arrayidx8 = getelementptr inbounds double, ptr %33, i64 %indvars.iv272
  %34 = load double, ptr %arrayidx8, align 8, !tbaa !20
  %35 = tail call double @llvm.fmuladd.f64(double %34, double 0.000000e+00, double %score.1148)
  %indvars.iv.next273 = add nuw nsw i64 %indvars.iv272, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next273, %wide.trip.count291
  br i1 %exitcond.not, label %for.cond.loopexit, label %for.body5, !llvm.loop !66

for.end98.loopexit332.unr-lcssa:                  ; preds = %for.cond.loopexit.1, %for.body.preheader
  %score.1.lcssa.lcssa.ph = phi double [ undef, %for.body.preheader ], [ %score.1.lcssa.1, %for.cond.loopexit.1 ]
  %indvars.iv275.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next276.1, %for.cond.loopexit.1 ]
  %indvars.iv.unr = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next.1, %for.cond.loopexit.1 ]
  %score.0233.unr = phi double [ 0.000000e+00, %for.body.preheader ], [ %score.1.lcssa.1, %for.cond.loopexit.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end98, label %for.body.epil

for.body.epil:                                    ; preds = %for.end98.loopexit332.unr-lcssa
  %indvars.iv.next276.epil = add nuw nsw i64 %indvars.iv275.unr, 1
  %cmp3146.epil = icmp ult i64 %indvars.iv.next276.epil, %16
  br i1 %cmp3146.epil, label %for.body5.lr.ph.epil, label %for.end98

for.body5.lr.ph.epil:                             ; preds = %for.body.epil
  %arrayidx6.epil = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv275.unr
  %36 = load ptr, ptr %arrayidx6.epil, align 8, !tbaa !13
  br label %for.body5.epil

for.body5.epil:                                   ; preds = %for.body5.epil, %for.body5.lr.ph.epil
  %indvars.iv272.epil = phi i64 [ %indvars.iv.unr, %for.body5.lr.ph.epil ], [ %indvars.iv.next273.epil, %for.body5.epil ]
  %score.1148.epil = phi double [ %score.0233.unr, %for.body5.lr.ph.epil ], [ %38, %for.body5.epil ]
  %arrayidx8.epil = getelementptr inbounds double, ptr %36, i64 %indvars.iv272.epil
  %37 = load double, ptr %arrayidx8.epil, align 8, !tbaa !20
  %38 = tail call double @llvm.fmuladd.f64(double %37, double 0.000000e+00, double %score.1148.epil)
  %indvars.iv.next273.epil = add nuw nsw i64 %indvars.iv272.epil, 1
  %exitcond.not.epil = icmp eq i64 %indvars.iv.next273.epil, %wide.trip.count291
  br i1 %exitcond.not.epil, label %for.end98, label %for.body5.epil, !llvm.loop !66

for.end98:                                        ; preds = %for.end98.loopexit332.unr-lcssa, %for.body5.epil, %for.body.epil, %for.cond.loopexit.us252, %for.cond.loopexit.us.us, %for.body.lr.ph.split.us, %entry
  %c.0.lcssa = phi double [ 0.000000e+00, %entry ], [ 0.000000e+00, %for.body.lr.ph.split.us ], [ %c.1.lcssa.us.us, %for.cond.loopexit.us.us ], [ %c.1.lcssa.us253, %for.cond.loopexit.us252 ], [ 0.000000e+00, %for.body.epil ], [ 0.000000e+00, %for.body5.epil ], [ 0.000000e+00, %for.end98.loopexit332.unr-lcssa ]
  %score.0.lcssa = phi double [ 0.000000e+00, %entry ], [ 0.000000e+00, %for.body.lr.ph.split.us ], [ %score.1.lcssa.us.us, %for.cond.loopexit.us.us ], [ %score.1.lcssa.us254, %for.cond.loopexit.us252 ], [ %score.1.lcssa.lcssa.ph, %for.end98.loopexit332.unr-lcssa ], [ %score.0233.unr, %for.body.epil ], [ %38, %for.body5.epil ]
  %div = fdiv double %score.0.lcssa, %c.0.lcssa
  ret double %div
}

; Function Attrs: nounwind uwtable
define dso_local void @upg2(i32 noundef %nseq, ptr nocapture noundef readonly %eff, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %len) local_unnamed_addr #12 {
entry:
  %tmplen = alloca [50000 x double], align 16
  call void @llvm.lifetime.start.p0(i64 400000, ptr nonnull %tmplen) #34
  %0 = load ptr, ptr @upg2.pair, align 8
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, ptr @njob, align 4, !tbaa !10
  %call = tail call ptr @AllocateCharMtx(i32 noundef %1, i32 noundef %1) #34
  store ptr %call, ptr @upg2.pair, align 8, !tbaa !13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %2 = phi ptr [ %call, %if.then ], [ %0, %entry ]
  %cmp362 = icmp sgt i32 %nseq, 0
  br i1 %cmp362, label %for.cond4.preheader.lr.ph, label %for.end242

for.cond4.preheader.lr.ph:                        ; preds = %if.end
  %3 = zext i32 %nseq to i64
  %4 = shl nuw nsw i64 %3, 3
  call void @llvm.memset.p0.i64(ptr nonnull align 16 %tmplen, i8 0, i64 %4, i1 false), !tbaa !20
  %wide.trip.count406 = zext i32 %nseq to i64
  %5 = add nsw i64 %wide.trip.count406, -1
  %xtraiter = and i64 %wide.trip.count406, 3
  %6 = icmp ult i32 %nseq, 4
  %unroll_iter = and i64 %wide.trip.count406, 4294967292
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.cond4.preheader.us

for.cond4.preheader.us:                           ; preds = %for.cond4.for.inc14_crit_edge.us, %for.cond4.preheader.lr.ph
  %indvars.iv403 = phi i64 [ %indvars.iv.next404, %for.cond4.for.inc14_crit_edge.us ], [ 0, %for.cond4.preheader.lr.ph ]
  %arrayidx8.us = getelementptr inbounds ptr, ptr %2, i64 %indvars.iv403
  br i1 %6, label %for.cond4.for.inc14_crit_edge.us.unr-lcssa, label %for.body6.us

for.body6.us:                                     ; preds = %for.cond4.preheader.us, %for.body6.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body6.us ], [ 0, %for.cond4.preheader.us ]
  %niter = phi i64 [ %niter.next.3, %for.body6.us ], [ 0, %for.cond4.preheader.us ]
  %7 = load ptr, ptr %arrayidx8.us, align 8, !tbaa !13
  %arrayidx10.us = getelementptr inbounds i8, ptr %7, i64 %indvars.iv
  store i8 0, ptr %arrayidx10.us, align 1, !tbaa !5
  %indvars.iv.next = or i64 %indvars.iv, 1
  %8 = load ptr, ptr %arrayidx8.us, align 8, !tbaa !13
  %arrayidx10.us.1 = getelementptr inbounds i8, ptr %8, i64 %indvars.iv.next
  store i8 0, ptr %arrayidx10.us.1, align 1, !tbaa !5
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %9 = load ptr, ptr %arrayidx8.us, align 8, !tbaa !13
  %arrayidx10.us.2 = getelementptr inbounds i8, ptr %9, i64 %indvars.iv.next.1
  store i8 0, ptr %arrayidx10.us.2, align 1, !tbaa !5
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %10 = load ptr, ptr %arrayidx8.us, align 8, !tbaa !13
  %arrayidx10.us.3 = getelementptr inbounds i8, ptr %10, i64 %indvars.iv.next.2
  store i8 0, ptr %arrayidx10.us.3, align 1, !tbaa !5
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.cond4.for.inc14_crit_edge.us.unr-lcssa, label %for.body6.us, !llvm.loop !68

for.cond4.for.inc14_crit_edge.us.unr-lcssa:       ; preds = %for.body6.us, %for.cond4.preheader.us
  %indvars.iv.unr = phi i64 [ 0, %for.cond4.preheader.us ], [ %indvars.iv.next.3, %for.body6.us ]
  br i1 %lcmp.mod.not, label %for.cond4.for.inc14_crit_edge.us, label %for.body6.us.epil

for.body6.us.epil:                                ; preds = %for.cond4.for.inc14_crit_edge.us.unr-lcssa, %for.body6.us.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body6.us.epil ], [ %indvars.iv.unr, %for.cond4.for.inc14_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body6.us.epil ], [ 0, %for.cond4.for.inc14_crit_edge.us.unr-lcssa ]
  %11 = load ptr, ptr %arrayidx8.us, align 8, !tbaa !13
  %arrayidx10.us.epil = getelementptr inbounds i8, ptr %11, i64 %indvars.iv.epil
  store i8 0, ptr %arrayidx10.us.epil, align 1, !tbaa !5
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond4.for.inc14_crit_edge.us, label %for.body6.us.epil, !llvm.loop !69

for.cond4.for.inc14_crit_edge.us:                 ; preds = %for.body6.us.epil, %for.cond4.for.inc14_crit_edge.us.unr-lcssa
  %indvars.iv.next404 = add nuw nsw i64 %indvars.iv403, 1
  %exitcond407.not = icmp eq i64 %indvars.iv.next404, %wide.trip.count406
  br i1 %exitcond407.not, label %for.cond17.preheader, label %for.cond4.preheader.us, !llvm.loop !71

for.cond17.preheader:                             ; preds = %for.cond4.for.inc14_crit_edge.us
  br i1 %cmp362, label %for.body19.lr.ph, label %for.end242

for.body19.lr.ph:                                 ; preds = %for.cond17.preheader
  %xtraiter453 = and i64 %wide.trip.count406, 3
  %12 = icmp ult i32 %nseq, 4
  br i1 %12, label %for.cond27.preheader.unr-lcssa, label %for.body19.lr.ph.new

for.body19.lr.ph.new:                             ; preds = %for.body19.lr.ph
  %unroll_iter456 = and i64 %wide.trip.count406, 4294967292
  br label %for.body19

for.cond27.preheader.unr-lcssa:                   ; preds = %for.body19, %for.body19.lr.ph
  %indvars.iv408.unr = phi i64 [ 0, %for.body19.lr.ph ], [ %indvars.iv.next409.3, %for.body19 ]
  %lcmp.mod455.not = icmp eq i64 %xtraiter453, 0
  br i1 %lcmp.mod455.not, label %for.cond27.preheader, label %for.body19.epil

for.body19.epil:                                  ; preds = %for.cond27.preheader.unr-lcssa, %for.body19.epil
  %indvars.iv408.epil = phi i64 [ %indvars.iv.next409.epil, %for.body19.epil ], [ %indvars.iv408.unr, %for.cond27.preheader.unr-lcssa ]
  %epil.iter454 = phi i64 [ %epil.iter454.next, %for.body19.epil ], [ 0, %for.cond27.preheader.unr-lcssa ]
  %arrayidx21.epil = getelementptr inbounds ptr, ptr %2, i64 %indvars.iv408.epil
  %13 = load ptr, ptr %arrayidx21.epil, align 8, !tbaa !13
  %arrayidx23.epil = getelementptr inbounds i8, ptr %13, i64 %indvars.iv408.epil
  store i8 1, ptr %arrayidx23.epil, align 1, !tbaa !5
  %indvars.iv.next409.epil = add nuw nsw i64 %indvars.iv408.epil, 1
  %epil.iter454.next = add i64 %epil.iter454, 1
  %epil.iter454.cmp.not = icmp eq i64 %epil.iter454.next, %xtraiter453
  br i1 %epil.iter454.cmp.not, label %for.cond27.preheader, label %for.body19.epil, !llvm.loop !72

for.cond27.preheader:                             ; preds = %for.body19.epil, %for.cond27.preheader.unr-lcssa
  %cmp28399 = icmp sgt i32 %nseq, 1
  br i1 %cmp28399, label %for.cond30.preheader.lr.ph, label %for.end242

for.cond30.preheader.lr.ph:                       ; preds = %for.cond27.preheader
  %sub = add nsw i32 %nseq, -1
  %14 = zext i32 %nseq to i64
  %wide.trip.count449 = zext i32 %sub to i64
  %wide.trip.count418 = zext i32 %nseq to i64
  %xtraiter458 = and i64 %wide.trip.count406, 1
  %15 = icmp eq i64 %5, 0
  %unroll_iter462 = and i64 %wide.trip.count406, 4294967294
  %lcmp.mod460.not = icmp eq i64 %xtraiter458, 0
  %xtraiter464 = and i64 %wide.trip.count406, 1
  %16 = icmp eq i64 %5, 0
  %unroll_iter468 = and i64 %wide.trip.count406, 4294967294
  %lcmp.mod466.not = icmp eq i64 %xtraiter464, 0
  %xtraiter470 = and i64 %wide.trip.count406, 1
  %17 = icmp eq i64 %5, 0
  %unroll_iter473 = and i64 %wide.trip.count406, 4294967294
  %lcmp.mod472.not = icmp eq i64 %xtraiter470, 0
  %xtraiter475 = and i64 %wide.trip.count406, 3
  %18 = icmp ult i32 %nseq, 4
  %unroll_iter478 = and i64 %wide.trip.count406, 4294967292
  %lcmp.mod477.not = icmp eq i64 %xtraiter475, 0
  br label %for.body33.preheader

for.body19:                                       ; preds = %for.body19, %for.body19.lr.ph.new
  %indvars.iv408 = phi i64 [ 0, %for.body19.lr.ph.new ], [ %indvars.iv.next409.3, %for.body19 ]
  %niter457 = phi i64 [ 0, %for.body19.lr.ph.new ], [ %niter457.next.3, %for.body19 ]
  %arrayidx21 = getelementptr inbounds ptr, ptr %2, i64 %indvars.iv408
  %19 = load ptr, ptr %arrayidx21, align 8, !tbaa !13
  %arrayidx23 = getelementptr inbounds i8, ptr %19, i64 %indvars.iv408
  store i8 1, ptr %arrayidx23, align 1, !tbaa !5
  %indvars.iv.next409 = or i64 %indvars.iv408, 1
  %arrayidx21.1 = getelementptr inbounds ptr, ptr %2, i64 %indvars.iv.next409
  %20 = load ptr, ptr %arrayidx21.1, align 8, !tbaa !13
  %arrayidx23.1 = getelementptr inbounds i8, ptr %20, i64 %indvars.iv.next409
  store i8 1, ptr %arrayidx23.1, align 1, !tbaa !5
  %indvars.iv.next409.1 = or i64 %indvars.iv408, 2
  %arrayidx21.2 = getelementptr inbounds ptr, ptr %2, i64 %indvars.iv.next409.1
  %21 = load ptr, ptr %arrayidx21.2, align 8, !tbaa !13
  %arrayidx23.2 = getelementptr inbounds i8, ptr %21, i64 %indvars.iv.next409.1
  store i8 1, ptr %arrayidx23.2, align 1, !tbaa !5
  %indvars.iv.next409.2 = or i64 %indvars.iv408, 3
  %arrayidx21.3 = getelementptr inbounds ptr, ptr %2, i64 %indvars.iv.next409.2
  %22 = load ptr, ptr %arrayidx21.3, align 8, !tbaa !13
  %arrayidx23.3 = getelementptr inbounds i8, ptr %22, i64 %indvars.iv.next409.2
  store i8 1, ptr %arrayidx23.3, align 1, !tbaa !5
  %indvars.iv.next409.3 = add nuw nsw i64 %indvars.iv408, 4
  %niter457.next.3 = add i64 %niter457, 4
  %niter457.ncmp.3 = icmp eq i64 %niter457.next.3, %unroll_iter456
  br i1 %niter457.ncmp.3, label %for.cond27.preheader.unr-lcssa, label %for.body19, !llvm.loop !73

for.body33.preheader:                             ; preds = %for.end239, %for.cond30.preheader.lr.ph
  %indvars.iv446 = phi i64 [ 0, %for.cond30.preheader.lr.ph ], [ %indvars.iv.next447, %for.end239 ]
  br label %for.body33

for.cond30.loopexit:                              ; preds = %for.body36, %for.body33
  %minscore.1.lcssa = phi float [ %minscore.0379, %for.body33 ], [ %minscore.2, %for.body36 ]
  %im.1.lcssa = phi i32 [ %im.0380, %for.body33 ], [ %im.2, %for.body36 ]
  %jm.1.lcssa = phi i32 [ %jm.0381, %for.body33 ], [ %jm.2, %for.body36 ]
  %indvars.iv.next414 = add nuw nsw i64 %indvars.iv413, 1
  %exitcond424.not = icmp eq i64 %indvars.iv.next421, %wide.trip.count449
  br i1 %exitcond424.not, label %for.body59.lr.ph, label %for.body33, !llvm.loop !74

for.body59.lr.ph:                                 ; preds = %for.cond30.loopexit
  %idxprom60 = sext i32 %im.1.lcssa to i64
  %arrayidx61 = getelementptr inbounds ptr, ptr %2, i64 %idxprom60
  %23 = load ptr, ptr %arrayidx61, align 8, !tbaa !13
  %arrayidx69 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv446
  br i1 %15, label %for.body86.lr.ph.unr-lcssa, label %for.body59

for.body33:                                       ; preds = %for.body33.preheader, %for.cond30.loopexit
  %indvars.iv420 = phi i64 [ 0, %for.body33.preheader ], [ %indvars.iv.next421, %for.cond30.loopexit ]
  %indvars.iv413 = phi i64 [ 1, %for.body33.preheader ], [ %indvars.iv.next414, %for.cond30.loopexit ]
  %jm.0381 = phi i32 [ -1, %for.body33.preheader ], [ %jm.1.lcssa, %for.cond30.loopexit ]
  %im.0380 = phi i32 [ -1, %for.body33.preheader ], [ %im.1.lcssa, %for.cond30.loopexit ]
  %minscore.0379 = phi float [ 9.999000e+03, %for.body33.preheader ], [ %minscore.1.lcssa, %for.cond30.loopexit ]
  %indvars.iv.next421 = add nuw nsw i64 %indvars.iv420, 1
  %cmp35370 = icmp ult i64 %indvars.iv.next421, %14
  br i1 %cmp35370, label %for.body36.lr.ph, label %for.cond30.loopexit

for.body36.lr.ph:                                 ; preds = %for.body33
  %arrayidx38 = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv420
  %24 = load ptr, ptr %arrayidx38, align 8, !tbaa !13
  %25 = trunc i64 %indvars.iv420 to i32
  br label %for.body36

for.body36:                                       ; preds = %for.body36.lr.ph, %for.body36
  %indvars.iv415 = phi i64 [ %indvars.iv413, %for.body36.lr.ph ], [ %indvars.iv.next416, %for.body36 ]
  %jm.1374 = phi i32 [ %jm.0381, %for.body36.lr.ph ], [ %jm.2, %for.body36 ]
  %im.1373 = phi i32 [ %im.0380, %for.body36.lr.ph ], [ %im.2, %for.body36 ]
  %minscore.1372 = phi float [ %minscore.0379, %for.body36.lr.ph ], [ %minscore.2, %for.body36 ]
  %arrayidx40 = getelementptr inbounds double, ptr %24, i64 %indvars.iv415
  %26 = load double, ptr %arrayidx40, align 8, !tbaa !20
  %conv = fpext float %minscore.1372 to double
  %cmp41 = fcmp olt double %26, %conv
  %conv48 = fptrunc double %26 to float
  %minscore.2 = select i1 %cmp41, float %conv48, float %minscore.1372
  %im.2 = select i1 %cmp41, i32 %25, i32 %im.1373
  %27 = trunc i64 %indvars.iv415 to i32
  %jm.2 = select i1 %cmp41, i32 %27, i32 %jm.1374
  %indvars.iv.next416 = add nuw nsw i64 %indvars.iv415, 1
  %exitcond419.not = icmp eq i64 %indvars.iv.next416, %wide.trip.count418
  br i1 %exitcond419.not, label %for.cond30.loopexit, label %for.body36, !llvm.loop !75

for.body59:                                       ; preds = %for.body59.lr.ph, %for.inc75.1
  %indvars.iv425 = phi i64 [ %indvars.iv.next426.1, %for.inc75.1 ], [ 0, %for.body59.lr.ph ]
  %count.0387 = phi i32 [ %count.1.1, %for.inc75.1 ], [ 0, %for.body59.lr.ph ]
  %niter463 = phi i64 [ %niter463.next.1, %for.inc75.1 ], [ 0, %for.body59.lr.ph ]
  %arrayidx63 = getelementptr inbounds i8, ptr %23, i64 %indvars.iv425
  %28 = load i8, ptr %arrayidx63, align 1, !tbaa !5
  %cmp65 = icmp sgt i8 %28, 0
  br i1 %cmp65, label %if.then67, label %for.inc75

if.then67:                                        ; preds = %for.body59
  %29 = load ptr, ptr %arrayidx69, align 8, !tbaa !13
  %30 = load ptr, ptr %29, align 8, !tbaa !13
  %idxprom71 = sext i32 %count.0387 to i64
  %arrayidx72 = getelementptr inbounds i32, ptr %30, i64 %idxprom71
  %31 = trunc i64 %indvars.iv425 to i32
  store i32 %31, ptr %arrayidx72, align 4, !tbaa !10
  %inc73 = add nsw i32 %count.0387, 1
  br label %for.inc75

for.inc75:                                        ; preds = %for.body59, %if.then67
  %count.1 = phi i32 [ %inc73, %if.then67 ], [ %count.0387, %for.body59 ]
  %indvars.iv.next426 = or i64 %indvars.iv425, 1
  %arrayidx63.1 = getelementptr inbounds i8, ptr %23, i64 %indvars.iv.next426
  %32 = load i8, ptr %arrayidx63.1, align 1, !tbaa !5
  %cmp65.1 = icmp sgt i8 %32, 0
  br i1 %cmp65.1, label %if.then67.1, label %for.inc75.1

if.then67.1:                                      ; preds = %for.inc75
  %33 = load ptr, ptr %arrayidx69, align 8, !tbaa !13
  %34 = load ptr, ptr %33, align 8, !tbaa !13
  %idxprom71.1 = sext i32 %count.1 to i64
  %arrayidx72.1 = getelementptr inbounds i32, ptr %34, i64 %idxprom71.1
  %35 = trunc i64 %indvars.iv.next426 to i32
  store i32 %35, ptr %arrayidx72.1, align 4, !tbaa !10
  %inc73.1 = add nsw i32 %count.1, 1
  br label %for.inc75.1

for.inc75.1:                                      ; preds = %if.then67.1, %for.inc75
  %count.1.1 = phi i32 [ %inc73.1, %if.then67.1 ], [ %count.1, %for.inc75 ]
  %indvars.iv.next426.1 = add nuw nsw i64 %indvars.iv425, 2
  %niter463.next.1 = add i64 %niter463, 2
  %niter463.ncmp.1 = icmp eq i64 %niter463.next.1, %unroll_iter462
  br i1 %niter463.ncmp.1, label %for.body86.lr.ph.unr-lcssa, label %for.body59, !llvm.loop !76

for.body86.lr.ph.unr-lcssa:                       ; preds = %for.inc75.1, %for.body59.lr.ph
  %count.1.lcssa.ph = phi i32 [ undef, %for.body59.lr.ph ], [ %count.1.1, %for.inc75.1 ]
  %indvars.iv425.unr = phi i64 [ 0, %for.body59.lr.ph ], [ %indvars.iv.next426.1, %for.inc75.1 ]
  %count.0387.unr = phi i32 [ 0, %for.body59.lr.ph ], [ %count.1.1, %for.inc75.1 ]
  br i1 %lcmp.mod460.not, label %for.body86.lr.ph, label %for.body59.epil

for.body59.epil:                                  ; preds = %for.body86.lr.ph.unr-lcssa
  %arrayidx63.epil = getelementptr inbounds i8, ptr %23, i64 %indvars.iv425.unr
  %36 = load i8, ptr %arrayidx63.epil, align 1, !tbaa !5
  %cmp65.epil = icmp sgt i8 %36, 0
  br i1 %cmp65.epil, label %if.then67.epil, label %for.body86.lr.ph

if.then67.epil:                                   ; preds = %for.body59.epil
  %37 = load ptr, ptr %arrayidx69, align 8, !tbaa !13
  %38 = load ptr, ptr %37, align 8, !tbaa !13
  %idxprom71.epil = sext i32 %count.0387.unr to i64
  %arrayidx72.epil = getelementptr inbounds i32, ptr %38, i64 %idxprom71.epil
  %39 = trunc i64 %indvars.iv425.unr to i32
  store i32 %39, ptr %arrayidx72.epil, align 4, !tbaa !10
  %inc73.epil = add nsw i32 %count.0387.unr, 1
  br label %for.body86.lr.ph

for.body86.lr.ph:                                 ; preds = %for.body59.epil, %if.then67.epil, %for.body86.lr.ph.unr-lcssa
  %count.1.lcssa = phi i32 [ %count.1.lcssa.ph, %for.body86.lr.ph.unr-lcssa ], [ %inc73.epil, %if.then67.epil ], [ %count.0387.unr, %for.body59.epil ]
  %arrayidx79 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv446
  %40 = load ptr, ptr %arrayidx79, align 8, !tbaa !13
  %41 = load ptr, ptr %40, align 8, !tbaa !13
  %idxprom81 = sext i32 %count.1.lcssa to i64
  %arrayidx82 = getelementptr inbounds i32, ptr %41, i64 %idxprom81
  store i32 -1, ptr %arrayidx82, align 4, !tbaa !10
  %idxprom87 = sext i32 %jm.1.lcssa to i64
  %arrayidx88 = getelementptr inbounds ptr, ptr %2, i64 %idxprom87
  %42 = load ptr, ptr %arrayidx88, align 8, !tbaa !13
  %arrayidx97 = getelementptr inbounds ptr, ptr %40, i64 1
  br i1 %16, label %for.body132.lr.ph.unr-lcssa, label %for.body86

for.body86:                                       ; preds = %for.body86.lr.ph, %for.inc102.1
  %indvars.iv430 = phi i64 [ %indvars.iv.next431.1, %for.inc102.1 ], [ 0, %for.body86.lr.ph ]
  %count.2391 = phi i32 [ %count.3.1, %for.inc102.1 ], [ 0, %for.body86.lr.ph ]
  %niter469 = phi i64 [ %niter469.next.1, %for.inc102.1 ], [ 0, %for.body86.lr.ph ]
  %arrayidx90 = getelementptr inbounds i8, ptr %42, i64 %indvars.iv430
  %43 = load i8, ptr %arrayidx90, align 1, !tbaa !5
  %cmp92 = icmp sgt i8 %43, 0
  br i1 %cmp92, label %if.then94, label %for.inc102

if.then94:                                        ; preds = %for.body86
  %44 = load ptr, ptr %arrayidx97, align 8, !tbaa !13
  %idxprom98 = sext i32 %count.2391 to i64
  %arrayidx99 = getelementptr inbounds i32, ptr %44, i64 %idxprom98
  %45 = trunc i64 %indvars.iv430 to i32
  store i32 %45, ptr %arrayidx99, align 4, !tbaa !10
  %inc100 = add nsw i32 %count.2391, 1
  br label %for.inc102

for.inc102:                                       ; preds = %for.body86, %if.then94
  %count.3 = phi i32 [ %inc100, %if.then94 ], [ %count.2391, %for.body86 ]
  %indvars.iv.next431 = or i64 %indvars.iv430, 1
  %arrayidx90.1 = getelementptr inbounds i8, ptr %42, i64 %indvars.iv.next431
  %46 = load i8, ptr %arrayidx90.1, align 1, !tbaa !5
  %cmp92.1 = icmp sgt i8 %46, 0
  br i1 %cmp92.1, label %if.then94.1, label %for.inc102.1

if.then94.1:                                      ; preds = %for.inc102
  %47 = load ptr, ptr %arrayidx97, align 8, !tbaa !13
  %idxprom98.1 = sext i32 %count.3 to i64
  %arrayidx99.1 = getelementptr inbounds i32, ptr %47, i64 %idxprom98.1
  %48 = trunc i64 %indvars.iv.next431 to i32
  store i32 %48, ptr %arrayidx99.1, align 4, !tbaa !10
  %inc100.1 = add nsw i32 %count.3, 1
  br label %for.inc102.1

for.inc102.1:                                     ; preds = %if.then94.1, %for.inc102
  %count.3.1 = phi i32 [ %inc100.1, %if.then94.1 ], [ %count.3, %for.inc102 ]
  %indvars.iv.next431.1 = add nuw nsw i64 %indvars.iv430, 2
  %niter469.next.1 = add i64 %niter469, 2
  %niter469.ncmp.1 = icmp eq i64 %niter469.next.1, %unroll_iter468
  br i1 %niter469.ncmp.1, label %for.body132.lr.ph.unr-lcssa, label %for.body86, !llvm.loop !77

for.body132.lr.ph.unr-lcssa:                      ; preds = %for.inc102.1, %for.body86.lr.ph
  %count.3.lcssa.ph = phi i32 [ undef, %for.body86.lr.ph ], [ %count.3.1, %for.inc102.1 ]
  %indvars.iv430.unr = phi i64 [ 0, %for.body86.lr.ph ], [ %indvars.iv.next431.1, %for.inc102.1 ]
  %count.2391.unr = phi i32 [ 0, %for.body86.lr.ph ], [ %count.3.1, %for.inc102.1 ]
  br i1 %lcmp.mod466.not, label %for.body132.lr.ph, label %for.body86.epil

for.body86.epil:                                  ; preds = %for.body132.lr.ph.unr-lcssa
  %arrayidx90.epil = getelementptr inbounds i8, ptr %42, i64 %indvars.iv430.unr
  %49 = load i8, ptr %arrayidx90.epil, align 1, !tbaa !5
  %cmp92.epil = icmp sgt i8 %49, 0
  br i1 %cmp92.epil, label %if.then94.epil, label %for.body132.lr.ph

if.then94.epil:                                   ; preds = %for.body86.epil
  %50 = load ptr, ptr %arrayidx97, align 8, !tbaa !13
  %idxprom98.epil = sext i32 %count.2391.unr to i64
  %arrayidx99.epil = getelementptr inbounds i32, ptr %50, i64 %idxprom98.epil
  %51 = trunc i64 %indvars.iv430.unr to i32
  store i32 %51, ptr %arrayidx99.epil, align 4, !tbaa !10
  %inc100.epil = add nsw i32 %count.2391.unr, 1
  br label %for.body132.lr.ph

for.body132.lr.ph:                                ; preds = %for.body86.epil, %if.then94.epil, %for.body132.lr.ph.unr-lcssa
  %count.3.lcssa = phi i32 [ %count.3.lcssa.ph, %for.body132.lr.ph.unr-lcssa ], [ %inc100.epil, %if.then94.epil ], [ %count.2391.unr, %for.body86.epil ]
  %arrayidx120.phi.trans.insert = getelementptr inbounds [50000 x double], ptr %tmplen, i64 0, i64 %idxprom87
  %arrayidx107 = getelementptr inbounds ptr, ptr %40, i64 1
  %52 = load ptr, ptr %arrayidx107, align 8, !tbaa !13
  %idxprom108 = sext i32 %count.3.lcssa to i64
  %arrayidx109 = getelementptr inbounds i32, ptr %52, i64 %idxprom108
  store i32 -1, ptr %arrayidx109, align 4, !tbaa !10
  %conv110 = fpext float %minscore.1.lcssa to double
  %div = fmul double %conv110, 5.000000e-01
  %idxprom111 = sext i32 %im.1.lcssa to i64
  %arrayidx112 = getelementptr inbounds [50000 x double], ptr %tmplen, i64 0, i64 %idxprom111
  %arrayidx115 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv446
  %53 = load ptr, ptr %arrayidx115, align 8, !tbaa !13
  %.pre451 = load double, ptr %arrayidx120.phi.trans.insert, align 8, !tbaa !20
  %54 = load double, ptr %arrayidx112, align 8, !tbaa !20
  %55 = insertelement <2 x double> poison, double %div, i64 0
  %56 = shufflevector <2 x double> %55, <2 x double> poison, <2 x i32> zeroinitializer
  %57 = insertelement <2 x double> poison, double %54, i64 0
  %58 = insertelement <2 x double> %57, double %.pre451, i64 1
  %59 = fsub <2 x double> %56, %58
  store <2 x double> %59, ptr %53, align 8, !tbaa !20
  store double %div, ptr %arrayidx112, align 8, !tbaa !20
  %arrayidx134 = getelementptr inbounds ptr, ptr %2, i64 %idxprom87
  %arrayidx141 = getelementptr inbounds ptr, ptr %2, i64 %idxprom111
  br i1 %17, label %for.body153.lr.ph.unr-lcssa, label %for.body132

for.body153.lr.ph.unr-lcssa:                      ; preds = %for.body132, %for.body132.lr.ph
  %indvars.iv435.unr = phi i64 [ 0, %for.body132.lr.ph ], [ %indvars.iv.next436.1, %for.body132 ]
  br i1 %lcmp.mod472.not, label %for.body153.lr.ph, label %for.body132.epil

for.body132.epil:                                 ; preds = %for.body153.lr.ph.unr-lcssa
  %60 = load ptr, ptr %arrayidx134, align 8, !tbaa !13
  %arrayidx136.epil = getelementptr inbounds i8, ptr %60, i64 %indvars.iv435.unr
  %61 = load i8, ptr %arrayidx136.epil, align 1, !tbaa !5
  %cmp138.epil = icmp sgt i8 %61, 0
  %conv139.epil = zext i1 %cmp138.epil to i8
  %62 = load ptr, ptr %arrayidx141, align 8, !tbaa !13
  %arrayidx143.epil = getelementptr inbounds i8, ptr %62, i64 %indvars.iv435.unr
  %63 = load i8, ptr %arrayidx143.epil, align 1, !tbaa !5
  %add145.epil = add i8 %63, %conv139.epil
  store i8 %add145.epil, ptr %arrayidx143.epil, align 1, !tbaa !5
  br label %for.body153.lr.ph

for.body153.lr.ph:                                ; preds = %for.body153.lr.ph.unr-lcssa, %for.body132.epil
  %arrayidx155 = getelementptr inbounds ptr, ptr %2, i64 %idxprom87
  br i1 %18, label %for.body164.lr.ph.unr-lcssa, label %for.body153

for.body132:                                      ; preds = %for.body132.lr.ph, %for.body132
  %indvars.iv435 = phi i64 [ %indvars.iv.next436.1, %for.body132 ], [ 0, %for.body132.lr.ph ]
  %niter474 = phi i64 [ %niter474.next.1, %for.body132 ], [ 0, %for.body132.lr.ph ]
  %64 = load ptr, ptr %arrayidx134, align 8, !tbaa !13
  %arrayidx136 = getelementptr inbounds i8, ptr %64, i64 %indvars.iv435
  %65 = load i8, ptr %arrayidx136, align 1, !tbaa !5
  %cmp138 = icmp sgt i8 %65, 0
  %conv139 = zext i1 %cmp138 to i8
  %66 = load ptr, ptr %arrayidx141, align 8, !tbaa !13
  %arrayidx143 = getelementptr inbounds i8, ptr %66, i64 %indvars.iv435
  %67 = load i8, ptr %arrayidx143, align 1, !tbaa !5
  %add145 = add i8 %67, %conv139
  store i8 %add145, ptr %arrayidx143, align 1, !tbaa !5
  %indvars.iv.next436 = or i64 %indvars.iv435, 1
  %68 = load ptr, ptr %arrayidx134, align 8, !tbaa !13
  %arrayidx136.1 = getelementptr inbounds i8, ptr %68, i64 %indvars.iv.next436
  %69 = load i8, ptr %arrayidx136.1, align 1, !tbaa !5
  %cmp138.1 = icmp sgt i8 %69, 0
  %conv139.1 = zext i1 %cmp138.1 to i8
  %70 = load ptr, ptr %arrayidx141, align 8, !tbaa !13
  %arrayidx143.1 = getelementptr inbounds i8, ptr %70, i64 %indvars.iv.next436
  %71 = load i8, ptr %arrayidx143.1, align 1, !tbaa !5
  %add145.1 = add i8 %71, %conv139.1
  store i8 %add145.1, ptr %arrayidx143.1, align 1, !tbaa !5
  %indvars.iv.next436.1 = add nuw nsw i64 %indvars.iv435, 2
  %niter474.next.1 = add i64 %niter474, 2
  %niter474.ncmp.1 = icmp eq i64 %niter474.next.1, %unroll_iter473
  br i1 %niter474.ncmp.1, label %for.body153.lr.ph.unr-lcssa, label %for.body132, !llvm.loop !78

for.body164.lr.ph.unr-lcssa:                      ; preds = %for.body153, %for.body153.lr.ph
  %indvars.iv440.unr = phi i64 [ 0, %for.body153.lr.ph ], [ %indvars.iv.next441.3, %for.body153 ]
  br i1 %lcmp.mod477.not, label %for.body164.lr.ph, label %for.body153.epil

for.body153.epil:                                 ; preds = %for.body164.lr.ph.unr-lcssa, %for.body153.epil
  %indvars.iv440.epil = phi i64 [ %indvars.iv.next441.epil, %for.body153.epil ], [ %indvars.iv440.unr, %for.body164.lr.ph.unr-lcssa ]
  %epil.iter476 = phi i64 [ %epil.iter476.next, %for.body153.epil ], [ 0, %for.body164.lr.ph.unr-lcssa ]
  %72 = load ptr, ptr %arrayidx155, align 8, !tbaa !13
  %arrayidx157.epil = getelementptr inbounds i8, ptr %72, i64 %indvars.iv440.epil
  store i8 0, ptr %arrayidx157.epil, align 1, !tbaa !5
  %indvars.iv.next441.epil = add nuw nsw i64 %indvars.iv440.epil, 1
  %epil.iter476.next = add i64 %epil.iter476, 1
  %epil.iter476.cmp.not = icmp eq i64 %epil.iter476.next, %xtraiter475
  br i1 %epil.iter476.cmp.not, label %for.body164.lr.ph, label %for.body153.epil, !llvm.loop !79

for.body164.lr.ph:                                ; preds = %for.body153.epil, %for.body164.lr.ph.unr-lcssa
  %arrayidx234 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom111
  %73 = load ptr, ptr %arrayidx234, align 8, !tbaa !13
  %arrayidx236 = getelementptr inbounds double, ptr %73, i64 %idxprom87
  br label %for.body164

for.body153:                                      ; preds = %for.body153.lr.ph, %for.body153
  %indvars.iv440 = phi i64 [ %indvars.iv.next441.3, %for.body153 ], [ 0, %for.body153.lr.ph ]
  %niter479 = phi i64 [ %niter479.next.3, %for.body153 ], [ 0, %for.body153.lr.ph ]
  %74 = load ptr, ptr %arrayidx155, align 8, !tbaa !13
  %arrayidx157 = getelementptr inbounds i8, ptr %74, i64 %indvars.iv440
  store i8 0, ptr %arrayidx157, align 1, !tbaa !5
  %indvars.iv.next441 = or i64 %indvars.iv440, 1
  %75 = load ptr, ptr %arrayidx155, align 8, !tbaa !13
  %arrayidx157.1 = getelementptr inbounds i8, ptr %75, i64 %indvars.iv.next441
  store i8 0, ptr %arrayidx157.1, align 1, !tbaa !5
  %indvars.iv.next441.1 = or i64 %indvars.iv440, 2
  %76 = load ptr, ptr %arrayidx155, align 8, !tbaa !13
  %arrayidx157.2 = getelementptr inbounds i8, ptr %76, i64 %indvars.iv.next441.1
  store i8 0, ptr %arrayidx157.2, align 1, !tbaa !5
  %indvars.iv.next441.2 = or i64 %indvars.iv440, 3
  %77 = load ptr, ptr %arrayidx155, align 8, !tbaa !13
  %arrayidx157.3 = getelementptr inbounds i8, ptr %77, i64 %indvars.iv.next441.2
  store i8 0, ptr %arrayidx157.3, align 1, !tbaa !5
  %indvars.iv.next441.3 = add nuw nsw i64 %indvars.iv440, 4
  %niter479.next.3 = add i64 %niter479, 4
  %niter479.ncmp.3 = icmp eq i64 %niter479.next.3, %unroll_iter478
  br i1 %niter479.ncmp.3, label %for.body164.lr.ph.unr-lcssa, label %for.body153, !llvm.loop !80

for.body164:                                      ; preds = %for.body164.lr.ph, %if.end232
  %i.8398 = phi i32 [ 0, %for.body164.lr.ph ], [ %inc238, %if.end232 ]
  %cmp165.not = icmp eq i32 %i.8398, %im.1.lcssa
  %cmp167.not = icmp eq i32 %i.8398, %jm.1.lcssa
  %or.cond = select i1 %cmp165.not, i1 true, i1 %cmp167.not
  br i1 %or.cond, label %if.end232, label %if.then169

if.then169:                                       ; preds = %for.body164
  %cond = tail call i32 @llvm.smin.i32(i32 %i.8398, i32 %im.1.lcssa)
  %idxprom172 = sext i32 %cond to i64
  %arrayidx173 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom172
  %78 = load ptr, ptr %arrayidx173, align 8, !tbaa !13
  %cond179 = tail call i32 @llvm.smax.i32(i32 %i.8398, i32 %im.1.lcssa)
  %idxprom180 = zext i32 %cond179 to i64
  %arrayidx181 = getelementptr inbounds double, ptr %78, i64 %idxprom180
  %79 = load double, ptr %arrayidx181, align 8, !tbaa !20
  %cond187 = tail call i32 @llvm.smin.i32(i32 %i.8398, i32 %jm.1.lcssa)
  %idxprom188 = sext i32 %cond187 to i64
  %arrayidx189 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom188
  %80 = load ptr, ptr %arrayidx189, align 8, !tbaa !13
  %cond195 = tail call i32 @llvm.smax.i32(i32 %i.8398, i32 %jm.1.lcssa)
  %idxprom196 = zext i32 %cond195 to i64
  %arrayidx197 = getelementptr inbounds double, ptr %80, i64 %idxprom196
  %81 = load double, ptr %arrayidx197, align 8, !tbaa !20
  %add198 = fadd double %79, %81
  %div199 = fmul double %add198, 5.000000e-01
  store double %div199, ptr %arrayidx181, align 8, !tbaa !20
  store double 9.999000e+03, ptr %arrayidx197, align 8, !tbaa !20
  br label %if.end232

if.end232:                                        ; preds = %if.then169, %for.body164
  store double 9.999000e+03, ptr %arrayidx236, align 8, !tbaa !20
  %inc238 = add nuw nsw i32 %i.8398, 1
  %exitcond445.not = icmp eq i32 %inc238, %nseq
  br i1 %exitcond445.not, label %for.end239, label %for.body164, !llvm.loop !81

for.end239:                                       ; preds = %if.end232
  %indvars.iv.next447 = add nuw nsw i64 %indvars.iv446, 1
  %exitcond450.not = icmp eq i64 %indvars.iv.next447, %wide.trip.count449
  br i1 %exitcond450.not, label %for.end242, label %for.body33.preheader, !llvm.loop !82

for.end242:                                       ; preds = %for.end239, %if.end, %for.cond17.preheader, %for.cond27.preheader
  call void @llvm.lifetime.end.p0(i64 400000, ptr nonnull %tmplen) #34
  ret void
}

declare ptr @AllocateCharMtx(i32 noundef, i32 noundef) local_unnamed_addr #14

; Function Attrs: nounwind uwtable
define dso_local void @loadtree(i32 noundef %nseq, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %len, ptr nocapture noundef readonly %name, ptr nocapture noundef readnone %nlen) local_unnamed_addr #12 {
entry:
  %node = alloca [2 x i32], align 4
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %node) #34
  %call = tail call noalias ptr @fopen(ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.9)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr @stderr, align 8, !tbaa !13
  %1 = tail call i64 @fwrite(ptr nonnull @.str.10, i64 23, i64 1, ptr %0) #32
  tail call void @exit(i32 noundef 1) #33
  unreachable

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr @loadtree.hist, align 8, !tbaa !13
  %tobool2.not = icmp eq ptr %2, null
  br i1 %tobool2.not, label %if.then3, label %if.end14

if.then3:                                         ; preds = %if.end
  %3 = load i32, ptr @njob, align 4, !tbaa !10
  %call4 = tail call ptr @AllocateIntVec(i32 noundef %3) #34
  store ptr %call4, ptr @loadtree.hist, align 8, !tbaa !13
  %4 = load i32, ptr @njob, align 4, !tbaa !10
  %conv = sext i32 %4 to i64
  %mul = mul nsw i64 %conv, 24
  %call5 = tail call noalias ptr @malloc(i64 noundef %mul) #35
  store ptr %call5, ptr @loadtree.ac, align 8, !tbaa !13
  %call6 = tail call ptr @AllocateIntVec(i32 noundef %4) #34
  store ptr %call6, ptr @loadtree.nmemar, align 8, !tbaa !13
  %5 = load i32, ptr @njob, align 4, !tbaa !10
  %call7 = tail call ptr @AllocateFloatVec(i32 noundef %5) #34
  %6 = load i32, ptr @njob, align 4, !tbaa !10
  %call8 = tail call ptr @AllocateIntVec(i32 noundef %6) #34
  %7 = load i32, ptr @njob, align 4, !tbaa !10
  %mul9 = mul nsw i32 %7, 50
  %call10 = tail call ptr @AllocateCharVec(i32 noundef %mul9) #34
  store ptr %call10, ptr @loadtree.treetmp, align 8, !tbaa !13
  %call11 = tail call ptr @AllocateCharVec(i32 noundef 30) #34
  store ptr %call11, ptr @loadtree.nametmp, align 8, !tbaa !13
  %8 = load i32, ptr @njob, align 4, !tbaa !10
  %mul12 = mul nsw i32 %8, 50
  %call13 = tail call ptr @AllocateCharMtx(i32 noundef %8, i32 noundef %mul12) #34
  store ptr %call13, ptr @loadtree.tree, align 8, !tbaa !13
  br label %if.end14

if.end14:                                         ; preds = %if.then3, %if.end
  %nearest.0 = phi ptr [ null, %if.end ], [ %call8, %if.then3 ]
  %mindisfrom.0 = phi ptr [ null, %if.end ], [ %call7, %if.then3 ]
  %cmp467 = icmp sgt i32 %nseq, 0
  br i1 %cmp467, label %for.cond16.preheader.lr.ph, label %for.end71.thread

for.cond16.preheader.lr.ph:                       ; preds = %if.end14
  %call24 = tail call ptr @__ctype_b_loc() #36
  %wide.trip.count = zext i32 %nseq to i64
  br label %for.cond16.preheader

for.cond16.preheader:                             ; preds = %for.cond16.preheader.lr.ph, %for.end46
  %indvars.iv492 = phi i64 [ 0, %for.cond16.preheader.lr.ph ], [ %indvars.iv.next493, %for.end46 ]
  %9 = load ptr, ptr @loadtree.nametmp, align 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(30) %9, i8 0, i64 30, i1 false), !tbaa !5
  %arrayidx26 = getelementptr inbounds ptr, ptr %name, i64 %indvars.iv492
  br label %for.body23

for.cond54.preheader:                             ; preds = %for.end46
  br i1 %cmp467, label %for.body57.preheader, label %for.end71.thread

for.end71.thread:                                 ; preds = %for.cond54.preheader, %if.end14
  %.pre511 = load ptr, ptr @loadtree.ac, align 8, !tbaa !13
  %sub514 = add nsw i32 %nseq, -1
  %idxprom72515 = sext i32 %sub514 to i64
  %arrayidx73516 = getelementptr inbounds %struct._Bchain, ptr %.pre511, i64 %idxprom72515
  store ptr null, ptr %arrayidx73516, align 8, !tbaa !83
  br label %for.end85.thread

for.body57.preheader:                             ; preds = %for.cond54.preheader
  %.pre = load ptr, ptr @loadtree.ac, align 8, !tbaa !13
  %xtraiter = and i64 %wide.trip.count, 1
  %10 = icmp eq i32 %nseq, 1
  br i1 %10, label %for.end71.unr-lcssa, label %for.body57.preheader.new

for.body57.preheader.new:                         ; preds = %for.body57.preheader
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  %11 = load ptr, ptr @loadtree.ac, align 8, !tbaa !13
  %invariant.gep = getelementptr %struct._Bchain, ptr %11, i64 -1
  %12 = load ptr, ptr @loadtree.ac, align 8, !tbaa !13
  %invariant.gep527 = getelementptr %struct._Bchain, ptr %12, i64 -1
  br label %for.body57

for.body23:                                       ; preds = %for.body23, %for.cond16.preheader
  %indvars.iv = phi i64 [ 0, %for.cond16.preheader ], [ %indvars.iv.next.1, %for.body23 ]
  %13 = load ptr, ptr %call24, align 8, !tbaa !13
  %14 = load ptr, ptr %arrayidx26, align 8, !tbaa !13
  %arrayidx28 = getelementptr inbounds i8, ptr %14, i64 %indvars.iv
  %15 = load i8, ptr %arrayidx28, align 1, !tbaa !5
  %idxprom30 = sext i8 %15 to i64
  %arrayidx31 = getelementptr inbounds i16, ptr %13, i64 %idxprom30
  %16 = load i16, ptr %arrayidx31, align 2, !tbaa !85
  %17 = and i16 %16, 8
  %tobool33.not = icmp eq i16 %17, 0
  %spec.select = select i1 %tobool33.not, i8 95, i8 %15
  %18 = getelementptr inbounds i8, ptr %9, i64 %indvars.iv
  store i8 %spec.select, ptr %18, align 1
  %indvars.iv.next = or i64 %indvars.iv, 1
  %19 = load ptr, ptr %call24, align 8, !tbaa !13
  %20 = load ptr, ptr %arrayidx26, align 8, !tbaa !13
  %arrayidx28.1 = getelementptr inbounds i8, ptr %20, i64 %indvars.iv.next
  %21 = load i8, ptr %arrayidx28.1, align 1, !tbaa !5
  %idxprom30.1 = sext i8 %21 to i64
  %arrayidx31.1 = getelementptr inbounds i16, ptr %19, i64 %idxprom30.1
  %22 = load i16, ptr %arrayidx31.1, align 2, !tbaa !85
  %23 = and i16 %22, 8
  %tobool33.not.1 = icmp eq i16 %23, 0
  %spec.select.1 = select i1 %tobool33.not.1, i8 95, i8 %21
  %24 = getelementptr inbounds i8, ptr %9, i64 %indvars.iv.next
  store i8 %spec.select.1, ptr %24, align 1
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 30
  br i1 %exitcond.not.1, label %for.end46, label %for.body23, !llvm.loop !87

for.end46:                                        ; preds = %for.body23
  %arrayidx47 = getelementptr inbounds i8, ptr %9, i64 30
  store i8 0, ptr %arrayidx47, align 1, !tbaa !5
  %25 = load ptr, ptr @loadtree.tree, align 8, !tbaa !13
  %arrayidx49 = getelementptr inbounds ptr, ptr %25, i64 %indvars.iv492
  %26 = load ptr, ptr %arrayidx49, align 8, !tbaa !13
  %indvars.iv.next493 = add nuw nsw i64 %indvars.iv492, 1
  %add.ptr = getelementptr inbounds i8, ptr %9, i64 1
  %27 = trunc i64 %indvars.iv.next493 to i32
  %call50 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %26, ptr noundef nonnull dereferenceable(1) @.str.11, i32 noundef %27, ptr noundef nonnull %add.ptr) #34
  %exitcond495.not = icmp eq i64 %indvars.iv.next493, %wide.trip.count
  br i1 %exitcond495.not, label %for.cond54.preheader, label %for.cond16.preheader, !llvm.loop !88

for.body57:                                       ; preds = %for.body57, %for.body57.preheader.new
  %28 = phi ptr [ %.pre, %for.body57.preheader.new ], [ %12, %for.body57 ]
  %indvars.iv496 = phi i64 [ 0, %for.body57.preheader.new ], [ %indvars.iv.next497.1, %for.body57 ]
  %niter = phi i64 [ 0, %for.body57.preheader.new ], [ %niter.next.1, %for.body57 ]
  %add.ptr58 = getelementptr inbounds %struct._Bchain, ptr %28, i64 %indvars.iv496
  %add.ptr59 = getelementptr inbounds %struct._Bchain, ptr %add.ptr58, i64 1
  store ptr %add.ptr59, ptr %add.ptr58, align 8, !tbaa !83
  %gep = getelementptr %struct._Bchain, ptr %invariant.gep, i64 %indvars.iv496
  %prev = getelementptr inbounds %struct._Bchain, ptr %11, i64 %indvars.iv496, i32 1
  store ptr %gep, ptr %prev, align 8, !tbaa !89
  %pos = getelementptr inbounds %struct._Bchain, ptr %11, i64 %indvars.iv496, i32 2
  %29 = trunc i64 %indvars.iv496 to i32
  store i32 %29, ptr %pos, align 8, !tbaa !90
  %indvars.iv.next497 = or i64 %indvars.iv496, 1
  %add.ptr58.1 = getelementptr inbounds %struct._Bchain, ptr %11, i64 %indvars.iv.next497
  %add.ptr59.1 = getelementptr inbounds %struct._Bchain, ptr %add.ptr58.1, i64 1
  store ptr %add.ptr59.1, ptr %add.ptr58.1, align 8, !tbaa !83
  %gep528 = getelementptr %struct._Bchain, ptr %invariant.gep527, i64 %indvars.iv.next497
  %prev.1 = getelementptr inbounds %struct._Bchain, ptr %12, i64 %indvars.iv.next497, i32 1
  store ptr %gep528, ptr %prev.1, align 8, !tbaa !89
  %pos.1 = getelementptr inbounds %struct._Bchain, ptr %12, i64 %indvars.iv.next497, i32 2
  %30 = trunc i64 %indvars.iv.next497 to i32
  store i32 %30, ptr %pos.1, align 8, !tbaa !90
  %indvars.iv.next497.1 = add nuw nsw i64 %indvars.iv496, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.end71.unr-lcssa, label %for.body57, !llvm.loop !91

for.end71.unr-lcssa:                              ; preds = %for.body57, %for.body57.preheader
  %.lcssa.ph = phi ptr [ undef, %for.body57.preheader ], [ %12, %for.body57 ]
  %.unr = phi ptr [ %.pre, %for.body57.preheader ], [ %12, %for.body57 ]
  %indvars.iv496.unr = phi i64 [ 0, %for.body57.preheader ], [ %indvars.iv.next497.1, %for.body57 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end71, label %for.body57.epil

for.body57.epil:                                  ; preds = %for.end71.unr-lcssa
  %add.ptr58.epil = getelementptr inbounds %struct._Bchain, ptr %.unr, i64 %indvars.iv496.unr
  %add.ptr59.epil = getelementptr inbounds %struct._Bchain, ptr %add.ptr58.epil, i64 1
  store ptr %add.ptr59.epil, ptr %add.ptr58.epil, align 8, !tbaa !83
  %31 = load ptr, ptr @loadtree.ac, align 8, !tbaa !13
  %add.ptr63.epil = getelementptr inbounds %struct._Bchain, ptr %31, i64 %indvars.iv496.unr
  %add.ptr64.epil = getelementptr inbounds %struct._Bchain, ptr %add.ptr63.epil, i64 -1
  %prev.epil = getelementptr inbounds %struct._Bchain, ptr %31, i64 %indvars.iv496.unr, i32 1
  store ptr %add.ptr64.epil, ptr %prev.epil, align 8, !tbaa !89
  %pos.epil = getelementptr inbounds %struct._Bchain, ptr %31, i64 %indvars.iv496.unr, i32 2
  %32 = trunc i64 %indvars.iv496.unr to i32
  store i32 %32, ptr %pos.epil, align 8, !tbaa !90
  br label %for.end71

for.end71:                                        ; preds = %for.end71.unr-lcssa, %for.body57.epil
  %.lcssa = phi ptr [ %.lcssa.ph, %for.end71.unr-lcssa ], [ %31, %for.body57.epil ]
  %sub = add nsw i32 %nseq, -1
  %idxprom72 = sext i32 %sub to i64
  %arrayidx73 = getelementptr inbounds %struct._Bchain, ptr %.lcssa, i64 %idxprom72
  store ptr null, ptr %arrayidx73, align 8, !tbaa !83
  br i1 %cmp467, label %for.body78.lr.ph, label %for.end85.thread

for.body78.lr.ph:                                 ; preds = %for.end71
  %33 = load ptr, ptr @loadtree.hist, align 8, !tbaa !13
  %34 = load ptr, ptr @loadtree.nmemar, align 8, !tbaa !13
  %wide.trip.count504 = zext i32 %nseq to i64
  %min.iters.check = icmp ult i32 %nseq, 8
  %35 = ptrtoint ptr %34 to i64
  %36 = ptrtoint ptr %33 to i64
  %37 = sub i64 %35, %36
  %diff.check = icmp ult i64 %37, 32
  %or.cond = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond, label %for.body78.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body78.lr.ph
  %n.vec = and i64 %wide.trip.count, 4294967288
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %38 = getelementptr inbounds i32, ptr %33, i64 %index
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %38, align 4, !tbaa !10
  %39 = getelementptr inbounds i32, ptr %38, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %39, align 4, !tbaa !10
  %40 = getelementptr inbounds i32, ptr %34, i64 %index
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, ptr %40, align 4, !tbaa !10
  %41 = getelementptr inbounds i32, ptr %40, i64 4
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, ptr %41, align 4, !tbaa !10
  %index.next = add nuw i64 %index, 8
  %42 = icmp eq i64 %index.next, %n.vec
  br i1 %42, label %middle.block, label %vector.body, !llvm.loop !92

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count
  br i1 %cmp.n, label %for.end85, label %for.body78.preheader

for.body78.preheader:                             ; preds = %for.body78.lr.ph, %middle.block
  %indvars.iv501.ph = phi i64 [ 0, %for.body78.lr.ph ], [ %n.vec, %middle.block ]
  %43 = xor i64 %indvars.iv501.ph, -1
  %44 = add nsw i64 %43, %wide.trip.count
  %xtraiter524 = and i64 %wide.trip.count, 3
  %lcmp.mod525.not = icmp eq i64 %xtraiter524, 0
  br i1 %lcmp.mod525.not, label %for.body78.prol.loopexit, label %for.body78.prol

for.body78.prol:                                  ; preds = %for.body78.preheader, %for.body78.prol
  %indvars.iv501.prol = phi i64 [ %indvars.iv.next502.prol, %for.body78.prol ], [ %indvars.iv501.ph, %for.body78.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body78.prol ], [ 0, %for.body78.preheader ]
  %arrayidx80.prol = getelementptr inbounds i32, ptr %33, i64 %indvars.iv501.prol
  store i32 -1, ptr %arrayidx80.prol, align 4, !tbaa !10
  %arrayidx82.prol = getelementptr inbounds i32, ptr %34, i64 %indvars.iv501.prol
  store i32 1, ptr %arrayidx82.prol, align 4, !tbaa !10
  %indvars.iv.next502.prol = add nuw nsw i64 %indvars.iv501.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter524
  br i1 %prol.iter.cmp.not, label %for.body78.prol.loopexit, label %for.body78.prol, !llvm.loop !95

for.body78.prol.loopexit:                         ; preds = %for.body78.prol, %for.body78.preheader
  %indvars.iv501.unr = phi i64 [ %indvars.iv501.ph, %for.body78.preheader ], [ %indvars.iv.next502.prol, %for.body78.prol ]
  %45 = icmp ult i64 %44, 3
  br i1 %45, label %for.end85, label %for.body78

for.body78:                                       ; preds = %for.body78.prol.loopexit, %for.body78
  %indvars.iv501 = phi i64 [ %indvars.iv.next502.3, %for.body78 ], [ %indvars.iv501.unr, %for.body78.prol.loopexit ]
  %arrayidx80 = getelementptr inbounds i32, ptr %33, i64 %indvars.iv501
  store i32 -1, ptr %arrayidx80, align 4, !tbaa !10
  %arrayidx82 = getelementptr inbounds i32, ptr %34, i64 %indvars.iv501
  store i32 1, ptr %arrayidx82, align 4, !tbaa !10
  %indvars.iv.next502 = add nuw nsw i64 %indvars.iv501, 1
  %arrayidx80.1 = getelementptr inbounds i32, ptr %33, i64 %indvars.iv.next502
  store i32 -1, ptr %arrayidx80.1, align 4, !tbaa !10
  %arrayidx82.1 = getelementptr inbounds i32, ptr %34, i64 %indvars.iv.next502
  store i32 1, ptr %arrayidx82.1, align 4, !tbaa !10
  %indvars.iv.next502.1 = add nuw nsw i64 %indvars.iv501, 2
  %arrayidx80.2 = getelementptr inbounds i32, ptr %33, i64 %indvars.iv.next502.1
  store i32 -1, ptr %arrayidx80.2, align 4, !tbaa !10
  %arrayidx82.2 = getelementptr inbounds i32, ptr %34, i64 %indvars.iv.next502.1
  store i32 1, ptr %arrayidx82.2, align 4, !tbaa !10
  %indvars.iv.next502.2 = add nuw nsw i64 %indvars.iv501, 3
  %arrayidx80.3 = getelementptr inbounds i32, ptr %33, i64 %indvars.iv.next502.2
  store i32 -1, ptr %arrayidx80.3, align 4, !tbaa !10
  %arrayidx82.3 = getelementptr inbounds i32, ptr %34, i64 %indvars.iv.next502.2
  store i32 1, ptr %arrayidx82.3, align 4, !tbaa !10
  %indvars.iv.next502.3 = add nuw nsw i64 %indvars.iv501, 4
  %exitcond505.not.3 = icmp eq i64 %indvars.iv.next502.3, %wide.trip.count504
  br i1 %exitcond505.not.3, label %for.end85, label %for.body78, !llvm.loop !96

for.end85.thread:                                 ; preds = %for.end71.thread, %for.end71
  %46 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc519 = tail call i32 @fputc(i32 10, ptr %46)
  br label %for.end301

for.end85:                                        ; preds = %for.body78.prol.loopexit, %for.body78, %middle.block
  %47 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc = tail call i32 @fputc(i32 10, ptr %47)
  %cmp89488 = icmp sgt i32 %nseq, 1
  br i1 %cmp89488, label %for.body91.lr.ph, label %for.end301

for.body91.lr.ph:                                 ; preds = %for.end85
  %add.ptr.i = getelementptr inbounds i32, ptr %node, i64 1
  %wide.trip.count509 = zext i32 %sub to i64
  br label %for.body91

for.body91:                                       ; preds = %for.body91.lr.ph, %for.inc299
  %indvars.iv506 = phi i64 [ 0, %for.body91.lr.ph ], [ %indvars.iv.next507, %for.inc299 ]
  %48 = trunc i64 %indvars.iv506 to i32
  %rem = urem i32 %48, 10
  %cmp92 = icmp eq i32 %rem, 0
  br i1 %cmp92, label %if.then94, label %if.end96

if.then94:                                        ; preds = %for.body91
  %49 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call95 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %49, ptr noundef nonnull @.str.13, i32 noundef %48, i32 noundef %nseq) #32
  br label %if.end96

if.end96:                                         ; preds = %if.then94, %for.body91
  %arrayidx98 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv506
  %50 = load ptr, ptr %arrayidx98, align 8, !tbaa !13
  %arrayidx99 = getelementptr inbounds float, ptr %50, i64 1
  store <2 x float> <float -1.000000e+00, float -1.000000e+00>, ptr %50, align 4, !tbaa !17
  %call.i = call ptr @fgets(ptr noundef nonnull @loadtreeoneline.gett, i32 noundef 999, ptr noundef nonnull %call)
  %call2.i = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef nonnull @loadtreeoneline.gett, ptr noundef nonnull @.str.38, ptr noundef nonnull %node, ptr noundef nonnull %add.ptr.i, ptr noundef nonnull %50, ptr noundef nonnull %arrayidx99) #34
  %51 = load i32, ptr %node, align 4, !tbaa !10
  %dec.i = add nsw i32 %51, -1
  store i32 %dec.i, ptr %node, align 4, !tbaa !10
  %52 = load i32, ptr %add.ptr.i, align 4, !tbaa !10
  %dec4.i = add nsw i32 %52, -1
  store i32 %dec4.i, ptr %add.ptr.i, align 4, !tbaa !10
  %cmp.not.i = icmp slt i32 %51, %52
  br i1 %cmp.not.i, label %loadtreeoneline.exit, label %if.then.i

if.then.i:                                        ; preds = %if.end96
  %53 = load ptr, ptr @stderr, align 8, !tbaa !13
  %54 = call i64 @fwrite(ptr nonnull @.str.39, i64 21, i64 1, ptr %53) #32
  call void @exit(i32 noundef 1) #33
  unreachable

loadtreeoneline.exit:                             ; preds = %if.end96
  %55 = load ptr, ptr %arrayidx98, align 8, !tbaa !13
  %56 = load float, ptr %55, align 4, !tbaa !17
  %cmp111 = fcmp oeq float %56, -1.000000e+00
  br i1 %cmp111, label %if.then119, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %loadtreeoneline.exit
  %arrayidx115 = getelementptr inbounds float, ptr %55, i64 1
  %57 = load float, ptr %arrayidx115, align 4, !tbaa !17
  %cmp117 = fcmp oeq float %57, -1.000000e+00
  br i1 %cmp117, label %if.then119, label %if.end121

if.then119:                                       ; preds = %lor.lhs.false, %loadtreeoneline.exit
  %58 = load ptr, ptr @stderr, align 8, !tbaa !13
  %59 = call i64 @fwrite(ptr nonnull @.str.14, i64 37, i64 1, ptr %58) #32
  call void @exit(i32 noundef 1) #33
  unreachable

if.end121:                                        ; preds = %lor.lhs.false
  %cmp126 = fcmp olt float %56, 0.000000e+00
  br i1 %cmp126, label %if.then128, label %if.end132

if.then128:                                       ; preds = %if.end121
  store float 0.000000e+00, ptr %55, align 4, !tbaa !17
  br label %if.end132

if.end132:                                        ; preds = %if.then128, %if.end121
  %cmp137 = fcmp olt float %57, 0.000000e+00
  br i1 %cmp137, label %if.then139, label %if.end143

if.then139:                                       ; preds = %if.end132
  store float 0.000000e+00, ptr %arrayidx115, align 4, !tbaa !17
  br label %if.end143

if.end143:                                        ; preds = %if.then139, %if.end132
  %60 = load ptr, ptr @loadtree.hist, align 8, !tbaa !13
  %idxprom144 = sext i32 %dec.i to i64
  %arrayidx145 = getelementptr inbounds i32, ptr %60, i64 %idxprom144
  %61 = load i32, ptr %arrayidx145, align 4, !tbaa !10
  %62 = load ptr, ptr @loadtree.nmemar, align 8, !tbaa !13
  %arrayidx147 = getelementptr inbounds i32, ptr %62, i64 %idxprom144
  %63 = load i32, ptr %arrayidx147, align 4, !tbaa !10
  %arrayidx149 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv506
  %64 = load ptr, ptr %arrayidx149, align 8, !tbaa !13
  %65 = load ptr, ptr %64, align 8, !tbaa !13
  %add151 = add nsw i32 %63, 1
  %conv152 = sext i32 %add151 to i64
  %mul153 = shl nsw i64 %conv152, 2
  %call154 = call ptr @realloc(ptr noundef %65, i64 noundef %mul153) #37
  %66 = load ptr, ptr %arrayidx149, align 8, !tbaa !13
  store ptr %call154, ptr %66, align 8, !tbaa !13
  %cmp158 = icmp eq i32 %61, -1
  br i1 %cmp158, label %if.then160, label %if.else161

if.then160:                                       ; preds = %if.end143
  %incdec.ptr = getelementptr inbounds i32, ptr %call154, i64 1
  store i32 %dec.i, ptr %call154, align 4, !tbaa !10
  br label %if.end187

if.else161:                                       ; preds = %if.end143
  %idxprom162 = sext i32 %61 to i64
  %arrayidx163 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom162
  %67 = load ptr, ptr %arrayidx163, align 8, !tbaa !13
  %68 = load ptr, ptr %67, align 8, !tbaa !13
  %arrayidx167 = getelementptr inbounds ptr, ptr %67, i64 1
  %69 = load ptr, ptr %arrayidx167, align 8, !tbaa !13
  %70 = load i32, ptr %68, align 4, !tbaa !10
  %71 = load i32, ptr %69, align 4, !tbaa !10
  %cmp168 = icmp sgt i32 %70, %71
  %72 = call i32 @llvm.smin.i32(i32 %70, i32 %71)
  %73 = call i32 @llvm.smax.i32(i32 %70, i32 %71)
  %.462 = select i1 %cmp168, ptr %68, ptr %69
  %cmp174.not473 = icmp eq i32 %72, -1
  br i1 %cmp174.not473, label %for.cond180.preheader, label %for.body176.preheader

for.body176.preheader:                            ; preds = %if.else161
  %. = select i1 %cmp168, ptr %69, ptr %68
  br label %for.body176

for.cond180.preheader.loopexit:                   ; preds = %for.body176
  %.pre512 = load i32, ptr %.462, align 4, !tbaa !10
  br label %for.cond180.preheader

for.cond180.preheader:                            ; preds = %for.cond180.preheader.loopexit, %if.else161
  %74 = phi i32 [ %73, %if.else161 ], [ %.pre512, %for.cond180.preheader.loopexit ]
  %intpt.0.lcssa = phi ptr [ %call154, %if.else161 ], [ %incdec.ptr178, %for.cond180.preheader.loopexit ]
  %cmp181.not476 = icmp eq i32 %74, -1
  br i1 %cmp181.not476, label %if.end187, label %for.body183

for.body176:                                      ; preds = %for.body176.preheader, %for.body176
  %75 = phi i32 [ %76, %for.body176 ], [ %72, %for.body176.preheader ]
  %intpt2.0475 = phi ptr [ %incdec.ptr177, %for.body176 ], [ %., %for.body176.preheader ]
  %intpt.0474 = phi ptr [ %incdec.ptr178, %for.body176 ], [ %call154, %for.body176.preheader ]
  %incdec.ptr177 = getelementptr inbounds i32, ptr %intpt2.0475, i64 1
  %incdec.ptr178 = getelementptr inbounds i32, ptr %intpt.0474, i64 1
  store i32 %75, ptr %intpt.0474, align 4, !tbaa !10
  %76 = load i32, ptr %incdec.ptr177, align 4, !tbaa !10
  %cmp174.not = icmp eq i32 %76, -1
  br i1 %cmp174.not, label %for.cond180.preheader.loopexit, label %for.body176, !llvm.loop !97

for.body183:                                      ; preds = %for.cond180.preheader, %for.body183
  %77 = phi i32 [ %78, %for.body183 ], [ %74, %for.cond180.preheader ]
  %intpt2.1478 = phi ptr [ %incdec.ptr184, %for.body183 ], [ %.462, %for.cond180.preheader ]
  %intpt.1477 = phi ptr [ %incdec.ptr185, %for.body183 ], [ %intpt.0.lcssa, %for.cond180.preheader ]
  %incdec.ptr184 = getelementptr inbounds i32, ptr %intpt2.1478, i64 1
  %incdec.ptr185 = getelementptr inbounds i32, ptr %intpt.1477, i64 1
  store i32 %77, ptr %intpt.1477, align 4, !tbaa !10
  %78 = load i32, ptr %incdec.ptr184, align 4, !tbaa !10
  %cmp181.not = icmp eq i32 %78, -1
  br i1 %cmp181.not, label %if.end187, label %for.body183, !llvm.loop !98

if.end187:                                        ; preds = %for.body183, %for.cond180.preheader, %if.then160
  %intpt.1.lcssa.sink = phi ptr [ %incdec.ptr, %if.then160 ], [ %intpt.0.lcssa, %for.cond180.preheader ], [ %incdec.ptr185, %for.body183 ]
  store i32 -1, ptr %intpt.1.lcssa.sink, align 4, !tbaa !10
  %idxprom188 = sext i32 %dec4.i to i64
  %arrayidx189 = getelementptr inbounds i32, ptr %62, i64 %idxprom188
  %79 = load i32, ptr %arrayidx189, align 4, !tbaa !10
  %arrayidx191 = getelementptr inbounds i32, ptr %60, i64 %idxprom188
  %80 = load i32, ptr %arrayidx191, align 4, !tbaa !10
  %81 = load ptr, ptr %arrayidx149, align 8, !tbaa !13
  %arrayidx194 = getelementptr inbounds ptr, ptr %81, i64 1
  %82 = load ptr, ptr %arrayidx194, align 8, !tbaa !13
  %add195 = add nsw i32 %79, 1
  %conv196 = sext i32 %add195 to i64
  %mul197 = shl nsw i64 %conv196, 2
  %call198 = call ptr @realloc(ptr noundef %82, i64 noundef %mul197) #37
  %83 = load ptr, ptr %arrayidx149, align 8, !tbaa !13
  %arrayidx201 = getelementptr inbounds ptr, ptr %83, i64 1
  store ptr %call198, ptr %arrayidx201, align 8, !tbaa !13
  %tobool202.not = icmp eq ptr %call198, null
  br i1 %tobool202.not, label %if.then203, label %if.end205

if.then203:                                       ; preds = %if.end187
  %84 = load ptr, ptr @stderr, align 8, !tbaa !13
  %85 = call i64 @fwrite(ptr nonnull @.str.15, i64 24, i64 1, ptr %84) #32
  call void @exit(i32 noundef 1) #33
  unreachable

if.end205:                                        ; preds = %if.end187
  %cmp206 = icmp eq i32 %80, -1
  br i1 %cmp206, label %if.then208, label %if.else210

if.then208:                                       ; preds = %if.end205
  %incdec.ptr209 = getelementptr inbounds i32, ptr %call198, i64 1
  store i32 %dec4.i, ptr %call198, align 4, !tbaa !10
  br label %if.end236

if.else210:                                       ; preds = %if.end205
  %idxprom211 = sext i32 %80 to i64
  %arrayidx212 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom211
  %86 = load ptr, ptr %arrayidx212, align 8, !tbaa !13
  %87 = load ptr, ptr %86, align 8, !tbaa !13
  %arrayidx216 = getelementptr inbounds ptr, ptr %86, i64 1
  %88 = load ptr, ptr %arrayidx216, align 8, !tbaa !13
  %89 = load i32, ptr %87, align 4, !tbaa !10
  %90 = load i32, ptr %88, align 4, !tbaa !10
  %cmp217 = icmp sgt i32 %89, %90
  %91 = call i32 @llvm.smin.i32(i32 %89, i32 %90)
  %92 = call i32 @llvm.smax.i32(i32 %89, i32 %90)
  %.464 = select i1 %cmp217, ptr %87, ptr %88
  %cmp223.not480 = icmp eq i32 %91, -1
  br i1 %cmp223.not480, label %for.cond229.preheader, label %for.body225.preheader

for.body225.preheader:                            ; preds = %if.else210
  %.463 = select i1 %cmp217, ptr %88, ptr %87
  br label %for.body225

for.cond229.preheader.loopexit:                   ; preds = %for.body225
  %.pre513 = load i32, ptr %.464, align 4, !tbaa !10
  br label %for.cond229.preheader

for.cond229.preheader:                            ; preds = %for.cond229.preheader.loopexit, %if.else210
  %93 = phi i32 [ %92, %if.else210 ], [ %.pre513, %for.cond229.preheader.loopexit ]
  %intpt.2.lcssa = phi ptr [ %call198, %if.else210 ], [ %incdec.ptr227, %for.cond229.preheader.loopexit ]
  %cmp230.not484 = icmp eq i32 %93, -1
  br i1 %cmp230.not484, label %if.end236, label %for.body232

for.body225:                                      ; preds = %for.body225.preheader, %for.body225
  %94 = phi i32 [ %95, %for.body225 ], [ %91, %for.body225.preheader ]
  %intpt2.2482 = phi ptr [ %incdec.ptr226, %for.body225 ], [ %.463, %for.body225.preheader ]
  %intpt.2481 = phi ptr [ %incdec.ptr227, %for.body225 ], [ %call198, %for.body225.preheader ]
  %incdec.ptr226 = getelementptr inbounds i32, ptr %intpt2.2482, i64 1
  %incdec.ptr227 = getelementptr inbounds i32, ptr %intpt.2481, i64 1
  store i32 %94, ptr %intpt.2481, align 4, !tbaa !10
  %95 = load i32, ptr %incdec.ptr226, align 4, !tbaa !10
  %cmp223.not = icmp eq i32 %95, -1
  br i1 %cmp223.not, label %for.cond229.preheader.loopexit, label %for.body225, !llvm.loop !99

for.body232:                                      ; preds = %for.cond229.preheader, %for.body232
  %96 = phi i32 [ %97, %for.body232 ], [ %93, %for.cond229.preheader ]
  %intpt2.3486 = phi ptr [ %incdec.ptr233, %for.body232 ], [ %.464, %for.cond229.preheader ]
  %intpt.3485 = phi ptr [ %incdec.ptr234, %for.body232 ], [ %intpt.2.lcssa, %for.cond229.preheader ]
  %incdec.ptr233 = getelementptr inbounds i32, ptr %intpt2.3486, i64 1
  %incdec.ptr234 = getelementptr inbounds i32, ptr %intpt.3485, i64 1
  store i32 %96, ptr %intpt.3485, align 4, !tbaa !10
  %97 = load i32, ptr %incdec.ptr233, align 4, !tbaa !10
  %cmp230.not = icmp eq i32 %97, -1
  br i1 %cmp230.not, label %if.end236, label %for.body232, !llvm.loop !100

if.end236:                                        ; preds = %for.body232, %for.cond229.preheader, %if.then208
  %intpt.3.lcssa.sink = phi ptr [ %incdec.ptr209, %if.then208 ], [ %intpt.2.lcssa, %for.cond229.preheader ], [ %incdec.ptr234, %for.body232 ]
  store i32 -1, ptr %intpt.3.lcssa.sink, align 4, !tbaa !10
  store i32 %48, ptr %arrayidx145, align 4, !tbaa !10
  %add242 = add nsw i32 %79, %63
  store i32 %add242, ptr %arrayidx147, align 4, !tbaa !10
  %arrayidx246 = getelementptr inbounds float, ptr %mindisfrom.0, i64 %idxprom144
  store float 0x408F3F3340000000, ptr %arrayidx246, align 4, !tbaa !17
  %98 = load ptr, ptr @loadtree.treetmp, align 8, !tbaa !13
  %99 = load ptr, ptr @loadtree.tree, align 8, !tbaa !13
  %arrayidx272 = getelementptr inbounds ptr, ptr %99, i64 %idxprom144
  %100 = load ptr, ptr %arrayidx272, align 8, !tbaa !13
  %101 = load ptr, ptr %arrayidx98, align 8, !tbaa !13
  %102 = load float, ptr %101, align 4, !tbaa !17
  %conv276 = fpext float %102 to double
  %arrayidx278 = getelementptr inbounds ptr, ptr %99, i64 %idxprom188
  %103 = load ptr, ptr %arrayidx278, align 8, !tbaa !13
  %arrayidx281 = getelementptr inbounds float, ptr %101, i64 1
  %104 = load float, ptr %arrayidx281, align 4, !tbaa !17
  %conv282 = fpext float %104 to double
  %call283 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %98, ptr noundef nonnull dereferenceable(1) @.str.16, ptr noundef %100, double noundef %conv276, ptr noundef %103, double noundef %conv282) #34
  %105 = load ptr, ptr @loadtree.tree, align 8, !tbaa !13
  %arrayidx285 = getelementptr inbounds ptr, ptr %105, i64 %idxprom144
  %106 = load ptr, ptr %arrayidx285, align 8, !tbaa !13
  %107 = load ptr, ptr @loadtree.treetmp, align 8, !tbaa !13
  %call286 = call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %106, ptr noundef nonnull dereferenceable(1) %107) #34
  %108 = load ptr, ptr @loadtree.ac, align 8, !tbaa !13
  %arrayidx288 = getelementptr inbounds %struct._Bchain, ptr %108, i64 %idxprom188
  %prev289 = getelementptr inbounds %struct._Bchain, ptr %108, i64 %idxprom188, i32 1
  %109 = load ptr, ptr %prev289, align 8, !tbaa !89
  %110 = load ptr, ptr %arrayidx288, align 8, !tbaa !83
  store ptr %110, ptr %109, align 8, !tbaa !83
  %cmp294.not = icmp eq ptr %110, null
  br i1 %cmp294.not, label %for.inc299, label %if.then296

if.then296:                                       ; preds = %if.end236
  %prev297 = getelementptr inbounds %struct._Bchain, ptr %110, i64 0, i32 1
  store ptr %109, ptr %prev297, align 8, !tbaa !89
  br label %for.inc299

for.inc299:                                       ; preds = %if.end236, %if.then296
  %indvars.iv.next507 = add nuw nsw i64 %indvars.iv506, 1
  %exitcond510.not = icmp eq i64 %indvars.iv.next507, %wide.trip.count509
  br i1 %exitcond510.not, label %for.end301, label %for.body91, !llvm.loop !101

for.end301:                                       ; preds = %for.inc299, %for.end85.thread, %for.end85
  %call302 = call i32 @fclose(ptr noundef nonnull %call)
  %call303 = call noalias ptr @fopen(ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
  %111 = load ptr, ptr @loadtree.treetmp, align 8, !tbaa !13
  %call304 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %call303, ptr noundef nonnull @.str.4, ptr noundef %111)
  %112 = call i64 @fwrite(ptr nonnull @.str.19, i64 13, i64 1, ptr %call303)
  %call306 = call i32 @fclose(ptr noundef %call303)
  %113 = load ptr, ptr @loadtree.tree, align 8, !tbaa !13
  call void @FreeCharMtx(ptr noundef %113) #34
  %114 = load ptr, ptr @loadtree.treetmp, align 8, !tbaa !13
  call void @free(ptr noundef %114) #34
  %115 = load ptr, ptr @loadtree.nametmp, align 8, !tbaa !13
  call void @free(ptr noundef %115) #34
  %116 = load ptr, ptr @loadtree.hist, align 8, !tbaa !13
  call void @free(ptr noundef %116) #34
  store ptr null, ptr @loadtree.hist, align 8, !tbaa !13
  %117 = load ptr, ptr @loadtree.ac, align 8, !tbaa !13
  call void @free(ptr noundef %117) #34
  store ptr null, ptr @loadtree.ac, align 8, !tbaa !13
  %118 = load ptr, ptr @loadtree.nmemar, align 8, !tbaa !13
  call void @free(ptr noundef %118) #34
  store ptr null, ptr @loadtree.nmemar, align 8, !tbaa !13
  call void @free(ptr noundef %mindisfrom.0) #34
  call void @free(ptr noundef %nearest.0) #34
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %node) #34
  ret void
}

; Function Attrs: nofree nounwind
declare noalias noundef ptr @fopen(ptr nocapture noundef readonly, ptr nocapture noundef readonly) local_unnamed_addr #4

declare ptr @AllocateIntVec(i32 noundef) local_unnamed_addr #14

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #15

declare ptr @AllocateFloatVec(i32 noundef) local_unnamed_addr #14

declare ptr @AllocateCharVec(i32 noundef) local_unnamed_addr #14

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(none)
declare ptr @__ctype_b_loc() local_unnamed_addr #16

; Function Attrs: nofree nounwind
declare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #4

; Function Attrs: mustprogress nounwind willreturn allockind("realloc") allocsize(1) memory(argmem: readwrite, inaccessiblemem: readwrite)
declare noalias noundef ptr @realloc(ptr allocptr nocapture noundef, i64 noundef) local_unnamed_addr #17

; Function Attrs: nofree nounwind
declare noundef i32 @fclose(ptr nocapture noundef) local_unnamed_addr #4

declare void @FreeCharMtx(ptr noundef) local_unnamed_addr #14

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: nounwind uwtable
define dso_local void @loadtop(i32 noundef %nseq, ptr nocapture noundef %eff, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %len) local_unnamed_addr #12 {
entry:
  %node = alloca [2 x i32], align 4
  %dumfl = alloca [2 x float], align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %node) #34
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %dumfl) #34
  store float 0x3FECCCCCC0000000, ptr @sueff1, align 4, !tbaa !17
  store float 0x3FA99999A0000000, ptr @sueff05, align 4, !tbaa !17
  %0 = load i32, ptr @treemethod, align 4, !tbaa !10
  switch i32 %0, label %if.else8 [
    i32 88, label %if.end10
    i32 69, label %if.then2
    i32 113, label %if.then6
  ]

if.then2:                                         ; preds = %entry
  br label %if.end10

if.then6:                                         ; preds = %entry
  br label %if.end10

if.else8:                                         ; preds = %entry
  %1 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.20, i32 noundef %0) #32
  tail call void @exit(i32 noundef 1) #33
  unreachable

if.end10:                                         ; preds = %entry, %if.then2, %if.then6
  %clusterfuncpt.sroa.0.0 = phi ptr [ @cluster_average_float, %if.then2 ], [ @cluster_minimum_float, %if.then6 ], [ @cluster_mix_float, %entry ]
  %call11 = tail call noalias ptr @fopen(ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.9)
  %tobool.not = icmp eq ptr %call11, null
  br i1 %tobool.not, label %if.then12, label %if.end14

if.then12:                                        ; preds = %if.end10
  %2 = load ptr, ptr @stderr, align 8, !tbaa !13
  %3 = tail call i64 @fwrite(ptr nonnull @.str.10, i64 23, i64 1, ptr %2) #32
  tail call void @exit(i32 noundef 1) #33
  unreachable

if.end14:                                         ; preds = %if.end10
  %4 = load ptr, ptr @loadtop.hist, align 8, !tbaa !13
  %tobool15.not = icmp eq ptr %4, null
  br i1 %tobool15.not, label %if.then16, label %if.end25

if.then16:                                        ; preds = %if.end14
  %5 = load i32, ptr @njob, align 4, !tbaa !10
  %mul = mul nsw i32 %5, 50
  %call17 = tail call ptr @AllocateCharVec(i32 noundef %mul) #34
  store ptr %call17, ptr @loadtop.treetmp, align 8, !tbaa !13
  %6 = load i32, ptr @njob, align 4, !tbaa !10
  %mul18 = mul nsw i32 %6, 50
  %call19 = tail call ptr @AllocateCharMtx(i32 noundef %6, i32 noundef %mul18) #34
  store ptr %call19, ptr @loadtop.tree, align 8, !tbaa !13
  %7 = load i32, ptr @njob, align 4, !tbaa !10
  %call20 = tail call ptr @AllocateIntVec(i32 noundef %7) #34
  store ptr %call20, ptr @loadtop.hist, align 8, !tbaa !13
  %8 = load i32, ptr @njob, align 4, !tbaa !10
  %call21 = tail call ptr @AllocateFloatVec(i32 noundef %8) #34
  store ptr %call21, ptr @loadtop.tmptmplen, align 8, !tbaa !13
  %9 = load i32, ptr @njob, align 4, !tbaa !10
  %conv = sext i32 %9 to i64
  %mul22 = mul nsw i64 %conv, 24
  %call23 = tail call noalias ptr @malloc(i64 noundef %mul22) #35
  store ptr %call23, ptr @loadtop.ac, align 8, !tbaa !13
  %call24 = tail call ptr @AllocateIntVec(i32 noundef %9) #34
  store ptr %call24, ptr @loadtop.nmemar, align 8, !tbaa !13
  br label %if.end25

if.end25:                                         ; preds = %if.then16, %if.end14
  %cmp26488 = icmp sgt i32 %nseq, 0
  br i1 %cmp26488, label %for.body.preheader, label %for.end46.thread

for.body.preheader:                               ; preds = %if.end25
  %wide.trip.count = zext i32 %nseq to i64
  br label %for.body

for.cond30.preheader:                             ; preds = %for.body
  br i1 %cmp26488, label %for.body33.preheader, label %for.end46.thread

for.end46.thread:                                 ; preds = %for.cond30.preheader, %if.end25
  %.pre535 = load ptr, ptr @loadtop.ac, align 8, !tbaa !13
  %sub541 = add nsw i32 %nseq, -1
  %idxprom47542 = sext i32 %sub541 to i64
  %arrayidx48543 = getelementptr inbounds %struct._Bchain, ptr %.pre535, i64 %idxprom47542
  store ptr null, ptr %arrayidx48543, align 8, !tbaa !83
  br label %for.end69.thread

for.body33.preheader:                             ; preds = %for.cond30.preheader
  %.pre = load ptr, ptr @loadtop.ac, align 8, !tbaa !13
  %xtraiter = and i64 %wide.trip.count, 1
  %10 = icmp eq i32 %nseq, 1
  br i1 %10, label %for.end46.unr-lcssa, label %for.body33.preheader.new

for.body33.preheader.new:                         ; preds = %for.body33.preheader
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  %11 = load ptr, ptr @loadtop.ac, align 8, !tbaa !13
  %invariant.gep = getelementptr %struct._Bchain, ptr %11, i64 -1
  %12 = load ptr, ptr @loadtop.ac, align 8, !tbaa !13
  %invariant.gep557 = getelementptr %struct._Bchain, ptr %12, i64 -1
  br label %for.body33

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %13 = load ptr, ptr @loadtop.tree, align 8, !tbaa !13
  %arrayidx28 = getelementptr inbounds ptr, ptr %13, i64 %indvars.iv
  %14 = load ptr, ptr %arrayidx28, align 8, !tbaa !13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %15 = trunc i64 %indvars.iv.next to i32
  %call29 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %14, ptr noundef nonnull dereferenceable(1) @.str.21, i32 noundef %15) #34
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond30.preheader, label %for.body, !llvm.loop !102

for.body33:                                       ; preds = %for.body33, %for.body33.preheader.new
  %16 = phi ptr [ %.pre, %for.body33.preheader.new ], [ %12, %for.body33 ]
  %indvars.iv517 = phi i64 [ 0, %for.body33.preheader.new ], [ %indvars.iv.next518.1, %for.body33 ]
  %niter = phi i64 [ 0, %for.body33.preheader.new ], [ %niter.next.1, %for.body33 ]
  %add.ptr = getelementptr inbounds %struct._Bchain, ptr %16, i64 %indvars.iv517
  %add.ptr34 = getelementptr inbounds %struct._Bchain, ptr %add.ptr, i64 1
  store ptr %add.ptr34, ptr %add.ptr, align 8, !tbaa !83
  %gep = getelementptr %struct._Bchain, ptr %invariant.gep, i64 %indvars.iv517
  %prev = getelementptr inbounds %struct._Bchain, ptr %11, i64 %indvars.iv517, i32 1
  store ptr %gep, ptr %prev, align 8, !tbaa !89
  %pos = getelementptr inbounds %struct._Bchain, ptr %11, i64 %indvars.iv517, i32 2
  %17 = trunc i64 %indvars.iv517 to i32
  store i32 %17, ptr %pos, align 8, !tbaa !90
  %indvars.iv.next518 = or i64 %indvars.iv517, 1
  %add.ptr.1 = getelementptr inbounds %struct._Bchain, ptr %11, i64 %indvars.iv.next518
  %add.ptr34.1 = getelementptr inbounds %struct._Bchain, ptr %add.ptr.1, i64 1
  store ptr %add.ptr34.1, ptr %add.ptr.1, align 8, !tbaa !83
  %gep558 = getelementptr %struct._Bchain, ptr %invariant.gep557, i64 %indvars.iv.next518
  %prev.1 = getelementptr inbounds %struct._Bchain, ptr %12, i64 %indvars.iv.next518, i32 1
  store ptr %gep558, ptr %prev.1, align 8, !tbaa !89
  %pos.1 = getelementptr inbounds %struct._Bchain, ptr %12, i64 %indvars.iv.next518, i32 2
  %18 = trunc i64 %indvars.iv.next518 to i32
  store i32 %18, ptr %pos.1, align 8, !tbaa !90
  %indvars.iv.next518.1 = add nuw nsw i64 %indvars.iv517, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.end46.unr-lcssa, label %for.body33, !llvm.loop !103

for.end46.unr-lcssa:                              ; preds = %for.body33, %for.body33.preheader
  %.lcssa.ph = phi ptr [ undef, %for.body33.preheader ], [ %12, %for.body33 ]
  %.unr = phi ptr [ %.pre, %for.body33.preheader ], [ %12, %for.body33 ]
  %indvars.iv517.unr = phi i64 [ 0, %for.body33.preheader ], [ %indvars.iv.next518.1, %for.body33 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end46, label %for.body33.epil

for.body33.epil:                                  ; preds = %for.end46.unr-lcssa
  %add.ptr.epil = getelementptr inbounds %struct._Bchain, ptr %.unr, i64 %indvars.iv517.unr
  %add.ptr34.epil = getelementptr inbounds %struct._Bchain, ptr %add.ptr.epil, i64 1
  store ptr %add.ptr34.epil, ptr %add.ptr.epil, align 8, !tbaa !83
  %19 = load ptr, ptr @loadtop.ac, align 8, !tbaa !13
  %add.ptr38.epil = getelementptr inbounds %struct._Bchain, ptr %19, i64 %indvars.iv517.unr
  %add.ptr39.epil = getelementptr inbounds %struct._Bchain, ptr %add.ptr38.epil, i64 -1
  %prev.epil = getelementptr inbounds %struct._Bchain, ptr %19, i64 %indvars.iv517.unr, i32 1
  store ptr %add.ptr39.epil, ptr %prev.epil, align 8, !tbaa !89
  %pos.epil = getelementptr inbounds %struct._Bchain, ptr %19, i64 %indvars.iv517.unr, i32 2
  %20 = trunc i64 %indvars.iv517.unr to i32
  store i32 %20, ptr %pos.epil, align 8, !tbaa !90
  br label %for.end46

for.end46:                                        ; preds = %for.end46.unr-lcssa, %for.body33.epil
  %.lcssa = phi ptr [ %.lcssa.ph, %for.end46.unr-lcssa ], [ %19, %for.body33.epil ]
  %sub = add nsw i32 %nseq, -1
  %idxprom47 = sext i32 %sub to i64
  %arrayidx48 = getelementptr inbounds %struct._Bchain, ptr %.lcssa, i64 %idxprom47
  store ptr null, ptr %arrayidx48, align 8, !tbaa !83
  br i1 %cmp26488, label %for.body62.lr.ph, label %for.end69.thread

for.end69.thread:                                 ; preds = %for.end46, %for.end46.thread
  %21 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc548 = tail call i32 @fputc(i32 10, ptr %21)
  br label %for.end314

for.body62.lr.ph:                                 ; preds = %for.end46
  %22 = load ptr, ptr @loadtop.tmptmplen, align 8, !tbaa !13
  %23 = zext i32 %nseq to i64
  %24 = shl nuw nsw i64 %23, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %22, i8 0, i64 %24, i1 false), !tbaa !17
  %25 = load ptr, ptr @loadtop.hist, align 8, !tbaa !13
  %26 = load ptr, ptr @loadtop.nmemar, align 8, !tbaa !13
  %wide.trip.count528 = zext i32 %nseq to i64
  %min.iters.check = icmp ult i32 %nseq, 8
  %27 = ptrtoint ptr %26 to i64
  %28 = ptrtoint ptr %25 to i64
  %29 = sub i64 %27, %28
  %diff.check = icmp ult i64 %29, 32
  %or.cond552 = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond552, label %for.body62.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body62.lr.ph
  %n.vec = and i64 %wide.trip.count, 4294967288
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %30 = getelementptr inbounds i32, ptr %25, i64 %index
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %30, align 4, !tbaa !10
  %31 = getelementptr inbounds i32, ptr %30, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %31, align 4, !tbaa !10
  %32 = getelementptr inbounds i32, ptr %26, i64 %index
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, ptr %32, align 4, !tbaa !10
  %33 = getelementptr inbounds i32, ptr %32, i64 4
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, ptr %33, align 4, !tbaa !10
  %index.next = add nuw i64 %index, 8
  %34 = icmp eq i64 %index.next, %n.vec
  br i1 %34, label %middle.block, label %vector.body, !llvm.loop !104

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count
  br i1 %cmp.n, label %for.end69, label %for.body62.preheader

for.body62.preheader:                             ; preds = %for.body62.lr.ph, %middle.block
  %indvars.iv525.ph = phi i64 [ 0, %for.body62.lr.ph ], [ %n.vec, %middle.block ]
  %35 = xor i64 %indvars.iv525.ph, -1
  %36 = add nsw i64 %35, %wide.trip.count
  %xtraiter554 = and i64 %wide.trip.count, 3
  %lcmp.mod555.not = icmp eq i64 %xtraiter554, 0
  br i1 %lcmp.mod555.not, label %for.body62.prol.loopexit, label %for.body62.prol

for.body62.prol:                                  ; preds = %for.body62.preheader, %for.body62.prol
  %indvars.iv525.prol = phi i64 [ %indvars.iv.next526.prol, %for.body62.prol ], [ %indvars.iv525.ph, %for.body62.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body62.prol ], [ 0, %for.body62.preheader ]
  %arrayidx64.prol = getelementptr inbounds i32, ptr %25, i64 %indvars.iv525.prol
  store i32 -1, ptr %arrayidx64.prol, align 4, !tbaa !10
  %arrayidx66.prol = getelementptr inbounds i32, ptr %26, i64 %indvars.iv525.prol
  store i32 1, ptr %arrayidx66.prol, align 4, !tbaa !10
  %indvars.iv.next526.prol = add nuw nsw i64 %indvars.iv525.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter554
  br i1 %prol.iter.cmp.not, label %for.body62.prol.loopexit, label %for.body62.prol, !llvm.loop !105

for.body62.prol.loopexit:                         ; preds = %for.body62.prol, %for.body62.preheader
  %indvars.iv525.unr = phi i64 [ %indvars.iv525.ph, %for.body62.preheader ], [ %indvars.iv.next526.prol, %for.body62.prol ]
  %37 = icmp ult i64 %36, 3
  br i1 %37, label %for.end69, label %for.body62

for.body62:                                       ; preds = %for.body62.prol.loopexit, %for.body62
  %indvars.iv525 = phi i64 [ %indvars.iv.next526.3, %for.body62 ], [ %indvars.iv525.unr, %for.body62.prol.loopexit ]
  %arrayidx64 = getelementptr inbounds i32, ptr %25, i64 %indvars.iv525
  store i32 -1, ptr %arrayidx64, align 4, !tbaa !10
  %arrayidx66 = getelementptr inbounds i32, ptr %26, i64 %indvars.iv525
  store i32 1, ptr %arrayidx66, align 4, !tbaa !10
  %indvars.iv.next526 = add nuw nsw i64 %indvars.iv525, 1
  %arrayidx64.1 = getelementptr inbounds i32, ptr %25, i64 %indvars.iv.next526
  store i32 -1, ptr %arrayidx64.1, align 4, !tbaa !10
  %arrayidx66.1 = getelementptr inbounds i32, ptr %26, i64 %indvars.iv.next526
  store i32 1, ptr %arrayidx66.1, align 4, !tbaa !10
  %indvars.iv.next526.1 = add nuw nsw i64 %indvars.iv525, 2
  %arrayidx64.2 = getelementptr inbounds i32, ptr %25, i64 %indvars.iv.next526.1
  store i32 -1, ptr %arrayidx64.2, align 4, !tbaa !10
  %arrayidx66.2 = getelementptr inbounds i32, ptr %26, i64 %indvars.iv.next526.1
  store i32 1, ptr %arrayidx66.2, align 4, !tbaa !10
  %indvars.iv.next526.2 = add nuw nsw i64 %indvars.iv525, 3
  %arrayidx64.3 = getelementptr inbounds i32, ptr %25, i64 %indvars.iv.next526.2
  store i32 -1, ptr %arrayidx64.3, align 4, !tbaa !10
  %arrayidx66.3 = getelementptr inbounds i32, ptr %26, i64 %indvars.iv.next526.2
  store i32 1, ptr %arrayidx66.3, align 4, !tbaa !10
  %indvars.iv.next526.3 = add nuw nsw i64 %indvars.iv525, 4
  %exitcond529.not.3 = icmp eq i64 %indvars.iv.next526.3, %wide.trip.count528
  br i1 %exitcond529.not.3, label %for.end69, label %for.body62, !llvm.loop !106

for.end69:                                        ; preds = %for.body62.prol.loopexit, %for.body62, %middle.block
  %38 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc = tail call i32 @fputc(i32 10, ptr %38)
  %cmp73514 = icmp sgt i32 %nseq, 1
  br i1 %cmp73514, label %for.body75.lr.ph, label %for.end314

for.body75.lr.ph:                                 ; preds = %for.end69
  %arrayidx81 = getelementptr inbounds [2 x float], ptr %dumfl, i64 0, i64 1
  %add.ptr.i = getelementptr inbounds i32, ptr %node, i64 1
  %wide.trip.count533 = zext i32 %sub to i64
  br label %for.body75

for.body75:                                       ; preds = %for.body75.lr.ph, %if.end307
  %indvars.iv530 = phi i64 [ 0, %for.body75.lr.ph ], [ %indvars.iv.next531, %if.end307 ]
  %39 = trunc i64 %indvars.iv530 to i32
  %rem = urem i32 %39, 10
  %cmp76 = icmp eq i32 %rem, 0
  br i1 %cmp76, label %if.then78, label %if.end80

if.then78:                                        ; preds = %for.body75
  %40 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call79 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %40, ptr noundef nonnull @.str.13, i32 noundef %39, i32 noundef %nseq) #32
  br label %if.end80

if.end80:                                         ; preds = %if.then78, %for.body75
  store <2 x float> <float -1.000000e+00, float -1.000000e+00>, ptr %dumfl, align 8, !tbaa !17
  %call.i = call ptr @fgets(ptr noundef nonnull @loadtreeoneline.gett, i32 noundef 999, ptr noundef nonnull %call11)
  %call2.i = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef nonnull @loadtreeoneline.gett, ptr noundef nonnull @.str.38, ptr noundef nonnull %node, ptr noundef nonnull %add.ptr.i, ptr noundef nonnull %dumfl, ptr noundef nonnull %arrayidx81) #34
  %41 = load i32, ptr %node, align 4, !tbaa !10
  %dec.i = add nsw i32 %41, -1
  store i32 %dec.i, ptr %node, align 4, !tbaa !10
  %42 = load i32, ptr %add.ptr.i, align 4, !tbaa !10
  %dec4.i = add nsw i32 %42, -1
  store i32 %dec4.i, ptr %add.ptr.i, align 4, !tbaa !10
  %cmp.not.i = icmp slt i32 %41, %42
  br i1 %cmp.not.i, label %loadtreeoneline.exit, label %if.then.i

if.then.i:                                        ; preds = %if.end80
  %43 = load ptr, ptr @stderr, align 8, !tbaa !13
  %44 = call i64 @fwrite(ptr nonnull @.str.39, i64 21, i64 1, ptr %43) #32
  call void @exit(i32 noundef 1) #33
  unreachable

loadtreeoneline.exit:                             ; preds = %if.end80
  %idxprom86 = sext i32 %dec.i to i64
  %arrayidx87 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom86
  %45 = load ptr, ptr %arrayidx87, align 8, !tbaa !13
  %sub88 = sub nsw i32 %dec4.i, %dec.i
  %idxprom89 = sext i32 %sub88 to i64
  %arrayidx90 = getelementptr inbounds float, ptr %45, i64 %idxprom89
  %46 = load float, ptr %arrayidx90, align 4, !tbaa !17
  %47 = load float, ptr %dumfl, align 8, !tbaa !17
  %cmp93 = fcmp une float %47, -1.000000e+00
  %48 = load float, ptr %arrayidx81, align 4
  %cmp97 = fcmp une float %48, -1.000000e+00
  %or.cond = select i1 %cmp93, i1 true, i1 %cmp97
  br i1 %or.cond, label %if.then99, label %if.end101

if.then99:                                        ; preds = %loadtreeoneline.exit
  %49 = load ptr, ptr @stderr, align 8, !tbaa !13
  %50 = call i64 @fwrite(ptr nonnull @.str.22, i64 44, i64 1, ptr %49) #32
  call void @exit(i32 noundef 1) #33
  unreachable

if.end101:                                        ; preds = %loadtreeoneline.exit
  %51 = load ptr, ptr @loadtop.hist, align 8, !tbaa !13
  %arrayidx103 = getelementptr inbounds i32, ptr %51, i64 %idxprom86
  %52 = load i32, ptr %arrayidx103, align 4, !tbaa !10
  %53 = load ptr, ptr @loadtop.nmemar, align 8, !tbaa !13
  %arrayidx105 = getelementptr inbounds i32, ptr %53, i64 %idxprom86
  %54 = load i32, ptr %arrayidx105, align 4, !tbaa !10
  %arrayidx107 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv530
  %55 = load ptr, ptr %arrayidx107, align 8, !tbaa !13
  %56 = load ptr, ptr %55, align 8, !tbaa !13
  %add109 = add nsw i32 %54, 1
  %conv110 = sext i32 %add109 to i64
  %mul111 = shl nsw i64 %conv110, 2
  %call112 = call ptr @realloc(ptr noundef %56, i64 noundef %mul111) #37
  %57 = load ptr, ptr %arrayidx107, align 8, !tbaa !13
  store ptr %call112, ptr %57, align 8, !tbaa !13
  %cmp116 = icmp eq i32 %52, -1
  br i1 %cmp116, label %if.then118, label %if.else119

if.then118:                                       ; preds = %if.end101
  %incdec.ptr = getelementptr inbounds i32, ptr %call112, i64 1
  store i32 %dec.i, ptr %call112, align 4, !tbaa !10
  br label %if.end145

if.else119:                                       ; preds = %if.end101
  %idxprom120 = sext i32 %52 to i64
  %arrayidx121 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom120
  %58 = load ptr, ptr %arrayidx121, align 8, !tbaa !13
  %59 = load ptr, ptr %58, align 8, !tbaa !13
  %arrayidx125 = getelementptr inbounds ptr, ptr %58, i64 1
  %60 = load ptr, ptr %arrayidx125, align 8, !tbaa !13
  %61 = load i32, ptr %59, align 4, !tbaa !10
  %62 = load i32, ptr %60, align 4, !tbaa !10
  %cmp126 = icmp sgt i32 %61, %62
  %63 = call i32 @llvm.smin.i32(i32 %61, i32 %62)
  %64 = call i32 @llvm.smax.i32(i32 %61, i32 %62)
  %.482 = select i1 %cmp126, ptr %59, ptr %60
  %cmp132.not496 = icmp eq i32 %63, -1
  br i1 %cmp132.not496, label %for.cond138.preheader, label %for.body134.preheader

for.body134.preheader:                            ; preds = %if.else119
  %. = select i1 %cmp126, ptr %60, ptr %59
  br label %for.body134

for.cond138.preheader.loopexit:                   ; preds = %for.body134
  %.pre536 = load i32, ptr %.482, align 4, !tbaa !10
  br label %for.cond138.preheader

for.cond138.preheader:                            ; preds = %for.cond138.preheader.loopexit, %if.else119
  %65 = phi i32 [ %64, %if.else119 ], [ %.pre536, %for.cond138.preheader.loopexit ]
  %intpt.0.lcssa = phi ptr [ %call112, %if.else119 ], [ %incdec.ptr136, %for.cond138.preheader.loopexit ]
  %cmp139.not499 = icmp eq i32 %65, -1
  br i1 %cmp139.not499, label %if.end145, label %for.body141

for.body134:                                      ; preds = %for.body134.preheader, %for.body134
  %66 = phi i32 [ %67, %for.body134 ], [ %63, %for.body134.preheader ]
  %intpt2.0498 = phi ptr [ %incdec.ptr135, %for.body134 ], [ %., %for.body134.preheader ]
  %intpt.0497 = phi ptr [ %incdec.ptr136, %for.body134 ], [ %call112, %for.body134.preheader ]
  %incdec.ptr135 = getelementptr inbounds i32, ptr %intpt2.0498, i64 1
  %incdec.ptr136 = getelementptr inbounds i32, ptr %intpt.0497, i64 1
  store i32 %66, ptr %intpt.0497, align 4, !tbaa !10
  %67 = load i32, ptr %incdec.ptr135, align 4, !tbaa !10
  %cmp132.not = icmp eq i32 %67, -1
  br i1 %cmp132.not, label %for.cond138.preheader.loopexit, label %for.body134, !llvm.loop !107

for.body141:                                      ; preds = %for.cond138.preheader, %for.body141
  %68 = phi i32 [ %69, %for.body141 ], [ %65, %for.cond138.preheader ]
  %intpt2.1501 = phi ptr [ %incdec.ptr142, %for.body141 ], [ %.482, %for.cond138.preheader ]
  %intpt.1500 = phi ptr [ %incdec.ptr143, %for.body141 ], [ %intpt.0.lcssa, %for.cond138.preheader ]
  %incdec.ptr142 = getelementptr inbounds i32, ptr %intpt2.1501, i64 1
  %incdec.ptr143 = getelementptr inbounds i32, ptr %intpt.1500, i64 1
  store i32 %68, ptr %intpt.1500, align 4, !tbaa !10
  %69 = load i32, ptr %incdec.ptr142, align 4, !tbaa !10
  %cmp139.not = icmp eq i32 %69, -1
  br i1 %cmp139.not, label %if.end145, label %for.body141, !llvm.loop !108

if.end145:                                        ; preds = %for.body141, %for.cond138.preheader, %if.then118
  %intpt.1.lcssa.sink = phi ptr [ %incdec.ptr, %if.then118 ], [ %intpt.0.lcssa, %for.cond138.preheader ], [ %incdec.ptr143, %for.body141 ]
  store i32 -1, ptr %intpt.1.lcssa.sink, align 4, !tbaa !10
  %idxprom146 = sext i32 %dec4.i to i64
  %arrayidx147 = getelementptr inbounds i32, ptr %51, i64 %idxprom146
  %70 = load i32, ptr %arrayidx147, align 4, !tbaa !10
  %arrayidx149 = getelementptr inbounds i32, ptr %53, i64 %idxprom146
  %71 = load i32, ptr %arrayidx149, align 4, !tbaa !10
  %72 = load ptr, ptr %arrayidx107, align 8, !tbaa !13
  %arrayidx152 = getelementptr inbounds ptr, ptr %72, i64 1
  %73 = load ptr, ptr %arrayidx152, align 8, !tbaa !13
  %add153 = add nsw i32 %71, 1
  %conv154 = sext i32 %add153 to i64
  %mul155 = shl nsw i64 %conv154, 2
  %call156 = call ptr @realloc(ptr noundef %73, i64 noundef %mul155) #37
  %74 = load ptr, ptr %arrayidx107, align 8, !tbaa !13
  %arrayidx159 = getelementptr inbounds ptr, ptr %74, i64 1
  store ptr %call156, ptr %arrayidx159, align 8, !tbaa !13
  %tobool160.not = icmp eq ptr %call156, null
  br i1 %tobool160.not, label %if.then161, label %if.end163

if.then161:                                       ; preds = %if.end145
  %75 = load ptr, ptr @stderr, align 8, !tbaa !13
  %76 = call i64 @fwrite(ptr nonnull @.str.15, i64 24, i64 1, ptr %75) #32
  call void @exit(i32 noundef 1) #33
  unreachable

if.end163:                                        ; preds = %if.end145
  %cmp164 = icmp eq i32 %70, -1
  br i1 %cmp164, label %if.then166, label %if.else168

if.then166:                                       ; preds = %if.end163
  %incdec.ptr167 = getelementptr inbounds i32, ptr %call156, i64 1
  store i32 %dec4.i, ptr %call156, align 4, !tbaa !10
  br label %if.end194

if.else168:                                       ; preds = %if.end163
  %idxprom169 = sext i32 %70 to i64
  %arrayidx170 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom169
  %77 = load ptr, ptr %arrayidx170, align 8, !tbaa !13
  %78 = load ptr, ptr %77, align 8, !tbaa !13
  %arrayidx174 = getelementptr inbounds ptr, ptr %77, i64 1
  %79 = load ptr, ptr %arrayidx174, align 8, !tbaa !13
  %80 = load i32, ptr %78, align 4, !tbaa !10
  %81 = load i32, ptr %79, align 4, !tbaa !10
  %cmp175 = icmp sgt i32 %80, %81
  %82 = call i32 @llvm.smin.i32(i32 %80, i32 %81)
  %83 = call i32 @llvm.smax.i32(i32 %80, i32 %81)
  %.484 = select i1 %cmp175, ptr %78, ptr %79
  %cmp181.not503 = icmp eq i32 %82, -1
  br i1 %cmp181.not503, label %for.cond187.preheader, label %for.body183.preheader

for.body183.preheader:                            ; preds = %if.else168
  %.483 = select i1 %cmp175, ptr %79, ptr %78
  br label %for.body183

for.cond187.preheader.loopexit:                   ; preds = %for.body183
  %.pre537 = load i32, ptr %.484, align 4, !tbaa !10
  br label %for.cond187.preheader

for.cond187.preheader:                            ; preds = %for.cond187.preheader.loopexit, %if.else168
  %84 = phi i32 [ %83, %if.else168 ], [ %.pre537, %for.cond187.preheader.loopexit ]
  %intpt.2.lcssa = phi ptr [ %call156, %if.else168 ], [ %incdec.ptr185, %for.cond187.preheader.loopexit ]
  %cmp188.not507 = icmp eq i32 %84, -1
  br i1 %cmp188.not507, label %if.end194, label %for.body190

for.body183:                                      ; preds = %for.body183.preheader, %for.body183
  %85 = phi i32 [ %86, %for.body183 ], [ %82, %for.body183.preheader ]
  %intpt2.2505 = phi ptr [ %incdec.ptr184, %for.body183 ], [ %.483, %for.body183.preheader ]
  %intpt.2504 = phi ptr [ %incdec.ptr185, %for.body183 ], [ %call156, %for.body183.preheader ]
  %incdec.ptr184 = getelementptr inbounds i32, ptr %intpt2.2505, i64 1
  %incdec.ptr185 = getelementptr inbounds i32, ptr %intpt.2504, i64 1
  store i32 %85, ptr %intpt.2504, align 4, !tbaa !10
  %86 = load i32, ptr %incdec.ptr184, align 4, !tbaa !10
  %cmp181.not = icmp eq i32 %86, -1
  br i1 %cmp181.not, label %for.cond187.preheader.loopexit, label %for.body183, !llvm.loop !109

for.body190:                                      ; preds = %for.cond187.preheader, %for.body190
  %87 = phi i32 [ %88, %for.body190 ], [ %84, %for.cond187.preheader ]
  %intpt2.3509 = phi ptr [ %incdec.ptr191, %for.body190 ], [ %.484, %for.cond187.preheader ]
  %intpt.3508 = phi ptr [ %incdec.ptr192, %for.body190 ], [ %intpt.2.lcssa, %for.cond187.preheader ]
  %incdec.ptr191 = getelementptr inbounds i32, ptr %intpt2.3509, i64 1
  %incdec.ptr192 = getelementptr inbounds i32, ptr %intpt.3508, i64 1
  store i32 %87, ptr %intpt.3508, align 4, !tbaa !10
  %88 = load i32, ptr %incdec.ptr191, align 4, !tbaa !10
  %cmp188.not = icmp eq i32 %88, -1
  br i1 %cmp188.not, label %if.end194, label %for.body190, !llvm.loop !110

if.end194:                                        ; preds = %for.body190, %for.cond187.preheader, %if.then166
  %intpt.3.lcssa.sink = phi ptr [ %incdec.ptr167, %if.then166 ], [ %intpt.2.lcssa, %for.cond187.preheader ], [ %incdec.ptr192, %for.body190 ]
  store i32 -1, ptr %intpt.3.lcssa.sink, align 4, !tbaa !10
  %conv197 = fmul float %46, 5.000000e-01
  %89 = load ptr, ptr @loadtop.tmptmplen, align 8, !tbaa !13
  %arrayidx199 = getelementptr inbounds float, ptr %89, i64 %idxprom86
  %90 = load float, ptr %arrayidx199, align 4, !tbaa !17
  %sub200 = fsub float %conv197, %90
  %arrayidx202 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv530
  %91 = load ptr, ptr %arrayidx202, align 8, !tbaa !13
  store float %sub200, ptr %91, align 4, !tbaa !17
  %arrayidx205 = getelementptr inbounds float, ptr %89, i64 %idxprom146
  %92 = load float, ptr %arrayidx205, align 4, !tbaa !17
  %sub206 = fsub float %conv197, %92
  %arrayidx209 = getelementptr inbounds float, ptr %91, i64 1
  store float %sub206, ptr %arrayidx209, align 4, !tbaa !17
  %cmp214 = fcmp olt float %sub200, 0.000000e+00
  br i1 %cmp214, label %if.then216, label %if.end220

if.then216:                                       ; preds = %if.end194
  store float 0.000000e+00, ptr %91, align 4, !tbaa !17
  br label %if.end220

if.end220:                                        ; preds = %if.then216, %if.end194
  %cmp225 = fcmp olt float %sub206, 0.000000e+00
  br i1 %cmp225, label %if.then227, label %if.end231

if.then227:                                       ; preds = %if.end220
  store float 0.000000e+00, ptr %arrayidx209, align 4, !tbaa !17
  br label %if.end231

if.end231:                                        ; preds = %if.then227, %if.end220
  store float %conv197, ptr %arrayidx199, align 4, !tbaa !17
  store i32 %39, ptr %arrayidx103, align 4, !tbaa !10
  %add236 = add nsw i32 %71, %54
  store i32 %add236, ptr %arrayidx105, align 4, !tbaa !10
  %acpti.0511 = load ptr, ptr @loadtop.ac, align 8, !tbaa !13
  %cmp240.not512 = icmp eq ptr %acpti.0511, null
  br i1 %cmp240.not512, label %for.end279, label %for.body242

for.body242:                                      ; preds = %if.end231, %for.inc277
  %acpti.0513 = phi ptr [ %acpti.0, %for.inc277 ], [ %acpti.0511, %if.end231 ]
  %pos243 = getelementptr inbounds %struct._Bchain, ptr %acpti.0513, i64 0, i32 2
  %93 = load i32, ptr %pos243, align 8, !tbaa !90
  %cmp244.not = icmp eq i32 %93, %dec.i
  %cmp246.not = icmp eq i32 %93, %dec4.i
  %or.cond485 = or i1 %cmp244.not, %cmp246.not
  br i1 %or.cond485, label %for.inc277, label %if.then248

if.then248:                                       ; preds = %for.body242
  %cmp249 = icmp slt i32 %93, %dec.i
  br i1 %cmp249, label %if.then248.if.end258_crit_edge, label %if.else252

if.then248.if.end258_crit_edge:                   ; preds = %if.then248
  %.pre539 = sext i32 %93 to i64
  br label %if.end258

if.else252:                                       ; preds = %if.then248
  %.486 = call i32 @llvm.smax.i32(i32 %93, i32 %dec4.i)
  %.487 = call i32 @llvm.smin.i32(i32 %93, i32 %dec4.i)
  %.pre540 = sext i32 %.487 to i64
  br label %if.end258

if.end258:                                        ; preds = %if.then248.if.end258_crit_edge, %if.else252
  %idxprom264.pre-phi = phi i64 [ %.pre539, %if.then248.if.end258_crit_edge ], [ %.pre540, %if.else252 ]
  %idxprom259.pre-phi = phi i64 [ %.pre539, %if.then248.if.end258_crit_edge ], [ %idxprom86, %if.else252 ]
  %maxijm.0 = phi i32 [ %dec4.i, %if.then248.if.end258_crit_edge ], [ %.486, %if.else252 ]
  %minijm.0 = phi i32 [ %93, %if.then248.if.end258_crit_edge ], [ %.487, %if.else252 ]
  %maxiim.0 = phi i32 [ %dec.i, %if.then248.if.end258_crit_edge ], [ %93, %if.else252 ]
  %miniim.0 = phi i32 [ %93, %if.then248.if.end258_crit_edge ], [ %dec.i, %if.else252 ]
  %arrayidx260 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom259.pre-phi
  %94 = load ptr, ptr %arrayidx260, align 8, !tbaa !13
  %sub261 = sub nsw i32 %maxiim.0, %miniim.0
  %idxprom262 = sext i32 %sub261 to i64
  %arrayidx263 = getelementptr inbounds float, ptr %94, i64 %idxprom262
  %95 = load float, ptr %arrayidx263, align 4, !tbaa !17
  %arrayidx265 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom264.pre-phi
  %96 = load ptr, ptr %arrayidx265, align 8, !tbaa !13
  %sub266 = sub nsw i32 %maxijm.0, %minijm.0
  %idxprom267 = sext i32 %sub266 to i64
  %arrayidx268 = getelementptr inbounds float, ptr %96, i64 %idxprom267
  %97 = load float, ptr %arrayidx268, align 4, !tbaa !17
  %call270 = call float %clusterfuncpt.sroa.0.0(float noundef %95, float noundef %97) #34, !callees !111
  %98 = load ptr, ptr %arrayidx260, align 8, !tbaa !13
  %arrayidx275 = getelementptr inbounds float, ptr %98, i64 %idxprom262
  store float %call270, ptr %arrayidx275, align 4, !tbaa !17
  br label %for.inc277

for.inc277:                                       ; preds = %for.body242, %if.end258
  %acpti.0 = load ptr, ptr %acpti.0513, align 8, !tbaa !13
  %cmp240.not = icmp eq ptr %acpti.0, null
  br i1 %cmp240.not, label %for.end279.loopexit, label %for.body242, !llvm.loop !112

for.end279.loopexit:                              ; preds = %for.inc277
  %.pre538 = load ptr, ptr %arrayidx202, align 8, !tbaa !13
  br label %for.end279

for.end279:                                       ; preds = %for.end279.loopexit, %if.end231
  %99 = phi ptr [ %.pre538, %for.end279.loopexit ], [ %91, %if.end231 ]
  %100 = load ptr, ptr @loadtop.treetmp, align 8, !tbaa !13
  %101 = load ptr, ptr @loadtop.tree, align 8, !tbaa !13
  %arrayidx281 = getelementptr inbounds ptr, ptr %101, i64 %idxprom86
  %102 = load ptr, ptr %arrayidx281, align 8, !tbaa !13
  %103 = load float, ptr %99, align 4, !tbaa !17
  %conv285 = fpext float %103 to double
  %arrayidx287 = getelementptr inbounds ptr, ptr %101, i64 %idxprom146
  %104 = load ptr, ptr %arrayidx287, align 8, !tbaa !13
  %arrayidx290 = getelementptr inbounds float, ptr %99, i64 1
  %105 = load float, ptr %arrayidx290, align 4, !tbaa !17
  %conv291 = fpext float %105 to double
  %call292 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %100, ptr noundef nonnull dereferenceable(1) @.str.16, ptr noundef %102, double noundef %conv285, ptr noundef %104, double noundef %conv291) #34
  %106 = load ptr, ptr @loadtop.tree, align 8, !tbaa !13
  %arrayidx294 = getelementptr inbounds ptr, ptr %106, i64 %idxprom86
  %107 = load ptr, ptr %arrayidx294, align 8, !tbaa !13
  %108 = load ptr, ptr @loadtop.treetmp, align 8, !tbaa !13
  %call295 = call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %107, ptr noundef nonnull dereferenceable(1) %108) #34
  %109 = load ptr, ptr @loadtop.ac, align 8, !tbaa !13
  %arrayidx297 = getelementptr inbounds %struct._Bchain, ptr %109, i64 %idxprom146
  %prev298 = getelementptr inbounds %struct._Bchain, ptr %109, i64 %idxprom146, i32 1
  %110 = load ptr, ptr %prev298, align 8, !tbaa !89
  %111 = load ptr, ptr %arrayidx297, align 8, !tbaa !83
  store ptr %111, ptr %110, align 8, !tbaa !83
  %cmp303.not = icmp eq ptr %111, null
  br i1 %cmp303.not, label %if.end307, label %if.then305

if.then305:                                       ; preds = %for.end279
  %prev306 = getelementptr inbounds %struct._Bchain, ptr %111, i64 0, i32 1
  store ptr %110, ptr %prev306, align 8, !tbaa !89
  br label %if.end307

if.end307:                                        ; preds = %if.then305, %for.end279
  %arrayidx309 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom146
  %112 = load ptr, ptr %arrayidx309, align 8, !tbaa !13
  call void @free(ptr noundef %112) #34
  store ptr null, ptr %arrayidx309, align 8, !tbaa !13
  %indvars.iv.next531 = add nuw nsw i64 %indvars.iv530, 1
  %exitcond534.not = icmp eq i64 %indvars.iv.next531, %wide.trip.count533
  br i1 %exitcond534.not, label %for.end314, label %for.body75, !llvm.loop !113

for.end314:                                       ; preds = %if.end307, %for.end69.thread, %for.end69
  %call315 = call i32 @fclose(ptr noundef nonnull %call11)
  %call316 = call noalias ptr @fopen(ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
  %113 = load ptr, ptr @loadtop.treetmp, align 8, !tbaa !13
  %call317 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %call316, ptr noundef nonnull @.str.4, ptr noundef %113)
  %114 = call i64 @fwrite(ptr nonnull @.str.23, i64 11, i64 1, ptr %call316)
  %call319 = call i32 @fclose(ptr noundef %call316)
  %115 = load ptr, ptr @loadtop.tmptmplen, align 8, !tbaa !13
  call void @free(ptr noundef %115) #34
  store ptr null, ptr @loadtop.tmptmplen, align 8, !tbaa !13
  %116 = load ptr, ptr @loadtop.hist, align 8, !tbaa !13
  call void @free(ptr noundef %116) #34
  store ptr null, ptr @loadtop.hist, align 8, !tbaa !13
  %117 = load ptr, ptr @loadtop.ac, align 8, !tbaa !13
  call void @free(ptr noundef %117) #34
  store ptr null, ptr @loadtop.ac, align 8, !tbaa !13
  %118 = load ptr, ptr @loadtop.nmemar, align 8, !tbaa !13
  call void @free(ptr noundef %118) #34
  store ptr null, ptr @loadtop.nmemar, align 8, !tbaa !13
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %dumfl) #34
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %node) #34
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define internal float @cluster_mix_float(float noundef %d1, float noundef %d2) unnamed_addr #19 {
entry:
  %cmp = fcmp olt float %d1, %d2
  %cond = select i1 %cmp, float %d1, float %d2
  %0 = load float, ptr @sueff1, align 4, !tbaa !17
  %add = fadd float %d1, %d2
  %1 = load float, ptr @sueff05, align 4, !tbaa !17
  %mul1 = fmul float %add, %1
  %2 = tail call float @llvm.fmuladd.f32(float %cond, float %0, float %mul1)
  ret float %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define internal float @cluster_average_float(float noundef %d1, float noundef %d2) unnamed_addr #20 {
entry:
  %add = fadd float %d1, %d2
  %conv1 = fmul float %add, 5.000000e-01
  ret float %conv1
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define internal float @cluster_minimum_float(float noundef %d1, float noundef %d2) unnamed_addr #20 {
entry:
  %cmp = fcmp olt float %d1, %d2
  %cond = select i1 %cmp, float %d1, float %d2
  ret float %cond
}

; Function Attrs: nounwind uwtable
define dso_local void @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout(i32 noundef %nseq, ptr nocapture noundef %eff, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %len, ptr nocapture noundef readonly %name, ptr nocapture noundef readnone %nlen) local_unnamed_addr #12 {
entry:
  store float 0x3FECCCCCC0000000, ptr @sueff1, align 4, !tbaa !17
  store float 0x3FA99999A0000000, ptr @sueff05, align 4, !tbaa !17
  %0 = load i32, ptr @treemethod, align 4, !tbaa !10
  switch i32 %0, label %if.else8 [
    i32 88, label %if.end10
    i32 69, label %if.then2
    i32 113, label %if.then6
  ]

if.then2:                                         ; preds = %entry
  br label %if.end10

if.then6:                                         ; preds = %entry
  br label %if.end10

if.else8:                                         ; preds = %entry
  %1 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.20, i32 noundef %0) #32
  tail call void @exit(i32 noundef 1) #33
  unreachable

if.end10:                                         ; preds = %entry, %if.then2, %if.then6
  %clusterfuncpt.sroa.0.0 = phi ptr [ @cluster_average_float, %if.then2 ], [ @cluster_minimum_float, %if.then6 ], [ @cluster_mix_float, %entry ]
  %2 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.hist, align 8, !tbaa !13
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %if.then11, label %if.end23

if.then11:                                        ; preds = %if.end10
  %3 = load i32, ptr @njob, align 4, !tbaa !10
  %call12 = tail call ptr @AllocateIntVec(i32 noundef %3) #34
  store ptr %call12, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.hist, align 8, !tbaa !13
  %4 = load i32, ptr @njob, align 4, !tbaa !10
  %call13 = tail call ptr @AllocateFloatVec(i32 noundef %4) #34
  store ptr %call13, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.tmptmplen, align 8, !tbaa !13
  %5 = load i32, ptr @njob, align 4, !tbaa !10
  %conv = sext i32 %5 to i64
  %mul = mul nsw i64 %conv, 24
  %call14 = tail call noalias ptr @malloc(i64 noundef %mul) #35
  store ptr %call14, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.ac, align 8, !tbaa !13
  %call15 = tail call ptr @AllocateIntVec(i32 noundef %5) #34
  store ptr %call15, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.nmemar, align 8, !tbaa !13
  %6 = load i32, ptr @njob, align 4, !tbaa !10
  %call16 = tail call ptr @AllocateFloatVec(i32 noundef %6) #34
  %7 = load i32, ptr @njob, align 4, !tbaa !10
  %call17 = tail call ptr @AllocateIntVec(i32 noundef %7) #34
  %8 = load i32, ptr @njob, align 4, !tbaa !10
  %mul18 = mul nsw i32 %8, 50
  %call19 = tail call ptr @AllocateCharVec(i32 noundef %mul18) #34
  store ptr %call19, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.treetmp, align 8, !tbaa !13
  %call20 = tail call ptr @AllocateCharVec(i32 noundef 30) #34
  store ptr %call20, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.nametmp, align 8, !tbaa !13
  %9 = load i32, ptr @njob, align 4, !tbaa !10
  %mul21 = mul nsw i32 %9, 50
  %call22 = tail call ptr @AllocateCharMtx(i32 noundef %9, i32 noundef %mul21) #34
  store ptr %call22, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.tree, align 8, !tbaa !13
  br label %if.end23

if.end23:                                         ; preds = %if.then11, %if.end10
  %nearest.0 = phi ptr [ null, %if.end10 ], [ %call17, %if.then11 ]
  %mindisfrom.0 = phi ptr [ null, %if.end10 ], [ %call16, %if.then11 ]
  %cmp24657 = icmp sgt i32 %nseq, 0
  br i1 %cmp24657, label %for.cond26.preheader.lr.ph, label %for.end83.thread

for.cond26.preheader.lr.ph:                       ; preds = %if.end23
  %call35 = tail call ptr @__ctype_b_loc() #36
  %wide.trip.count = zext i32 %nseq to i64
  br label %for.cond26.preheader

for.cond26.preheader:                             ; preds = %for.cond26.preheader.lr.ph, %for.end58
  %indvars.iv702 = phi i64 [ 0, %for.cond26.preheader.lr.ph ], [ %indvars.iv.next703, %for.end58 ]
  %10 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.nametmp, align 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(30) %10, i8 0, i64 30, i1 false), !tbaa !5
  %arrayidx37 = getelementptr inbounds ptr, ptr %name, i64 %indvars.iv702
  br label %for.body34

for.cond66.preheader:                             ; preds = %for.end58
  br i1 %cmp24657, label %for.body69.preheader, label %for.end83.thread

for.end83.thread:                                 ; preds = %for.cond66.preheader, %if.end23
  %.pre729 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.ac, align 8, !tbaa !13
  %sub737 = add nsw i32 %nseq, -1
  %idxprom84738 = sext i32 %sub737 to i64
  %arrayidx85739 = getelementptr inbounds %struct._Bchain, ptr %.pre729, i64 %idxprom84738
  store ptr null, ptr %arrayidx85739, align 8, !tbaa !83
  br label %for.end117.thread

for.body69.preheader:                             ; preds = %for.cond66.preheader
  %.pre = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.ac, align 8, !tbaa !13
  %xtraiter = and i64 %wide.trip.count, 1
  %11 = icmp eq i32 %nseq, 1
  br i1 %11, label %for.end83.unr-lcssa, label %for.body69.preheader.new

for.body69.preheader.new:                         ; preds = %for.body69.preheader
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  %12 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.ac, align 8, !tbaa !13
  %invariant.gep = getelementptr %struct._Bchain, ptr %12, i64 -1
  %13 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.ac, align 8, !tbaa !13
  %invariant.gep763 = getelementptr %struct._Bchain, ptr %13, i64 -1
  br label %for.body69

for.body34:                                       ; preds = %for.body34, %for.cond26.preheader
  %indvars.iv = phi i64 [ 0, %for.cond26.preheader ], [ %indvars.iv.next.1, %for.body34 ]
  %14 = load ptr, ptr %call35, align 8, !tbaa !13
  %15 = load ptr, ptr %arrayidx37, align 8, !tbaa !13
  %arrayidx39 = getelementptr inbounds i8, ptr %15, i64 %indvars.iv
  %16 = load i8, ptr %arrayidx39, align 1, !tbaa !5
  %idxprom41 = sext i8 %16 to i64
  %arrayidx42 = getelementptr inbounds i16, ptr %14, i64 %idxprom41
  %17 = load i16, ptr %arrayidx42, align 2, !tbaa !85
  %18 = and i16 %17, 8
  %tobool44.not = icmp eq i16 %18, 0
  %spec.select750 = select i1 %tobool44.not, i8 95, i8 %16
  %19 = getelementptr inbounds i8, ptr %10, i64 %indvars.iv
  store i8 %spec.select750, ptr %19, align 1
  %indvars.iv.next = or i64 %indvars.iv, 1
  %20 = load ptr, ptr %call35, align 8, !tbaa !13
  %21 = load ptr, ptr %arrayidx37, align 8, !tbaa !13
  %arrayidx39.1 = getelementptr inbounds i8, ptr %21, i64 %indvars.iv.next
  %22 = load i8, ptr %arrayidx39.1, align 1, !tbaa !5
  %idxprom41.1 = sext i8 %22 to i64
  %arrayidx42.1 = getelementptr inbounds i16, ptr %20, i64 %idxprom41.1
  %23 = load i16, ptr %arrayidx42.1, align 2, !tbaa !85
  %24 = and i16 %23, 8
  %tobool44.not.1 = icmp eq i16 %24, 0
  %spec.select750.1 = select i1 %tobool44.not.1, i8 95, i8 %22
  %25 = getelementptr inbounds i8, ptr %10, i64 %indvars.iv.next
  store i8 %spec.select750.1, ptr %25, align 1
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 30
  br i1 %exitcond.not.1, label %for.end58, label %for.body34, !llvm.loop !114

for.end58:                                        ; preds = %for.body34
  %arrayidx59 = getelementptr inbounds i8, ptr %10, i64 30
  store i8 0, ptr %arrayidx59, align 1, !tbaa !5
  %26 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.tree, align 8, !tbaa !13
  %arrayidx61 = getelementptr inbounds ptr, ptr %26, i64 %indvars.iv702
  %27 = load ptr, ptr %arrayidx61, align 8, !tbaa !13
  %indvars.iv.next703 = add nuw nsw i64 %indvars.iv702, 1
  %add.ptr = getelementptr inbounds i8, ptr %10, i64 1
  %28 = trunc i64 %indvars.iv.next703 to i32
  %call62 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %27, ptr noundef nonnull dereferenceable(1) @.str.11, i32 noundef %28, ptr noundef nonnull %add.ptr) #34
  %exitcond705.not = icmp eq i64 %indvars.iv.next703, %wide.trip.count
  br i1 %exitcond705.not, label %for.cond66.preheader, label %for.cond26.preheader, !llvm.loop !115

for.body69:                                       ; preds = %for.body69, %for.body69.preheader.new
  %29 = phi ptr [ %.pre, %for.body69.preheader.new ], [ %13, %for.body69 ]
  %indvars.iv706 = phi i64 [ 0, %for.body69.preheader.new ], [ %indvars.iv.next707.1, %for.body69 ]
  %niter = phi i64 [ 0, %for.body69.preheader.new ], [ %niter.next.1, %for.body69 ]
  %add.ptr70 = getelementptr inbounds %struct._Bchain, ptr %29, i64 %indvars.iv706
  %add.ptr71 = getelementptr inbounds %struct._Bchain, ptr %add.ptr70, i64 1
  store ptr %add.ptr71, ptr %add.ptr70, align 8, !tbaa !83
  %gep = getelementptr %struct._Bchain, ptr %invariant.gep, i64 %indvars.iv706
  %prev = getelementptr inbounds %struct._Bchain, ptr %12, i64 %indvars.iv706, i32 1
  store ptr %gep, ptr %prev, align 8, !tbaa !89
  %pos = getelementptr inbounds %struct._Bchain, ptr %12, i64 %indvars.iv706, i32 2
  %30 = trunc i64 %indvars.iv706 to i32
  store i32 %30, ptr %pos, align 8, !tbaa !90
  %indvars.iv.next707 = or i64 %indvars.iv706, 1
  %add.ptr70.1 = getelementptr inbounds %struct._Bchain, ptr %12, i64 %indvars.iv.next707
  %add.ptr71.1 = getelementptr inbounds %struct._Bchain, ptr %add.ptr70.1, i64 1
  store ptr %add.ptr71.1, ptr %add.ptr70.1, align 8, !tbaa !83
  %gep764 = getelementptr %struct._Bchain, ptr %invariant.gep763, i64 %indvars.iv.next707
  %prev.1 = getelementptr inbounds %struct._Bchain, ptr %13, i64 %indvars.iv.next707, i32 1
  store ptr %gep764, ptr %prev.1, align 8, !tbaa !89
  %pos.1 = getelementptr inbounds %struct._Bchain, ptr %13, i64 %indvars.iv.next707, i32 2
  %31 = trunc i64 %indvars.iv.next707 to i32
  store i32 %31, ptr %pos.1, align 8, !tbaa !90
  %indvars.iv.next707.1 = add nuw nsw i64 %indvars.iv706, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.end83.unr-lcssa, label %for.body69, !llvm.loop !116

for.end83.unr-lcssa:                              ; preds = %for.body69, %for.body69.preheader
  %.lcssa757.ph = phi ptr [ undef, %for.body69.preheader ], [ %13, %for.body69 ]
  %.unr = phi ptr [ %.pre, %for.body69.preheader ], [ %13, %for.body69 ]
  %indvars.iv706.unr = phi i64 [ 0, %for.body69.preheader ], [ %indvars.iv.next707.1, %for.body69 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end83, label %for.body69.epil

for.body69.epil:                                  ; preds = %for.end83.unr-lcssa
  %add.ptr70.epil = getelementptr inbounds %struct._Bchain, ptr %.unr, i64 %indvars.iv706.unr
  %add.ptr71.epil = getelementptr inbounds %struct._Bchain, ptr %add.ptr70.epil, i64 1
  store ptr %add.ptr71.epil, ptr %add.ptr70.epil, align 8, !tbaa !83
  %32 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.ac, align 8, !tbaa !13
  %add.ptr75.epil = getelementptr inbounds %struct._Bchain, ptr %32, i64 %indvars.iv706.unr
  %add.ptr76.epil = getelementptr inbounds %struct._Bchain, ptr %add.ptr75.epil, i64 -1
  %prev.epil = getelementptr inbounds %struct._Bchain, ptr %32, i64 %indvars.iv706.unr, i32 1
  store ptr %add.ptr76.epil, ptr %prev.epil, align 8, !tbaa !89
  %pos.epil = getelementptr inbounds %struct._Bchain, ptr %32, i64 %indvars.iv706.unr, i32 2
  %33 = trunc i64 %indvars.iv706.unr to i32
  store i32 %33, ptr %pos.epil, align 8, !tbaa !90
  br label %for.end83

for.end83:                                        ; preds = %for.end83.unr-lcssa, %for.body69.epil
  %.lcssa757 = phi ptr [ %.lcssa757.ph, %for.end83.unr-lcssa ], [ %32, %for.body69.epil ]
  %sub = add nsw i32 %nseq, -1
  %idxprom84 = sext i32 %sub to i64
  %arrayidx85 = getelementptr inbounds %struct._Bchain, ptr %.lcssa757, i64 %idxprom84
  store ptr null, ptr %arrayidx85, align 8, !tbaa !83
  br i1 %cmp24657, label %for.body90.lr.ph, label %for.end117.thread

for.body90.lr.ph:                                 ; preds = %for.end83
  %34 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.ac, align 8, !tbaa !13
  %tobool.not51.i = icmp eq ptr %34, null
  %wide.trip.count714 = zext i32 %nseq to i64
  br label %for.body90

for.cond98.preheader:                             ; preds = %setnearest.exit
  br i1 %cmp24657, label %for.body110.lr.ph, label %for.end117.thread

for.body90:                                       ; preds = %for.body90.lr.ph, %setnearest.exit
  %indvars.iv711 = phi i64 [ 0, %for.body90.lr.ph ], [ %indvars.iv.next712, %setnearest.exit ]
  %add.ptr92 = getelementptr inbounds float, ptr %mindisfrom.0, i64 %indvars.iv711
  %add.ptr94 = getelementptr inbounds i32, ptr %nearest.0, i64 %indvars.iv711
  store float 0x408F3F3340000000, ptr %add.ptr92, align 4, !tbaa !17
  store i32 -1, ptr %add.ptr94, align 4, !tbaa !10
  %add.ptr.i = getelementptr inbounds %struct._Bchain, ptr %34, i64 %indvars.iv711
  %acptj.048.i = load ptr, ptr %add.ptr.i, align 8, !tbaa !83
  %cmp.not49.i = icmp eq ptr %acptj.048.i, null
  br i1 %cmp.not49.i, label %land.rhs.preheader.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %for.body90
  %arrayidx.i = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv711
  %35 = load ptr, ptr %arrayidx.i, align 8, !tbaa !13
  %36 = trunc i64 %indvars.iv711 to i32
  br label %for.body.i

for.cond6.preheader.i:                            ; preds = %for.inc.i
  br i1 %tobool.not51.i, label %setnearest.exit, label %land.rhs.preheader.i

land.rhs.preheader.i:                             ; preds = %for.cond6.preheader.i, %for.body90
  %37 = phi float [ %42, %for.cond6.preheader.i ], [ 0x408F3F3340000000, %for.body90 ]
  %38 = trunc i64 %indvars.iv711 to i32
  br label %land.rhs.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %39 = phi float [ 0x408F3F3340000000, %for.body.lr.ph.i ], [ %42, %for.inc.i ]
  %acptj.050.i = phi ptr [ %acptj.048.i, %for.body.lr.ph.i ], [ %acptj.0.i, %for.inc.i ]
  %pos1.i = getelementptr inbounds %struct._Bchain, ptr %acptj.050.i, i64 0, i32 2
  %40 = load i32, ptr %pos1.i, align 8, !tbaa !90
  %sub.i = sub nsw i32 %40, %36
  %idxprom2.i = sext i32 %sub.i to i64
  %arrayidx3.i = getelementptr inbounds float, ptr %35, i64 %idxprom2.i
  %41 = load float, ptr %arrayidx3.i, align 4, !tbaa !17
  %cmp4.i = fcmp olt float %41, %39
  br i1 %cmp4.i, label %if.then.i, label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  store float %41, ptr %add.ptr92, align 4, !tbaa !17
  store i32 %40, ptr %add.ptr94, align 4, !tbaa !10
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i
  %42 = phi float [ %39, %for.body.i ], [ %41, %if.then.i ]
  %acptj.0.i = load ptr, ptr %acptj.050.i, align 8, !tbaa !83
  %cmp.not.i = icmp eq ptr %acptj.0.i, null
  br i1 %cmp.not.i, label %for.cond6.preheader.i, label %for.body.i, !llvm.loop !117

land.rhs.i:                                       ; preds = %for.inc19.i, %land.rhs.preheader.i
  %43 = phi float [ %48, %for.inc19.i ], [ %37, %land.rhs.preheader.i ]
  %acptj.152.i = phi ptr [ %49, %for.inc19.i ], [ %34, %land.rhs.preheader.i ]
  %pos7.i = getelementptr inbounds %struct._Bchain, ptr %acptj.152.i, i64 0, i32 2
  %44 = load i32, ptr %pos7.i, align 8, !tbaa !90
  %45 = zext i32 %44 to i64
  %cmp8.not.i = icmp eq i64 %indvars.iv711, %45
  br i1 %cmp8.not.i, label %setnearest.exit, label %for.body9.i

for.body9.i:                                      ; preds = %land.rhs.i
  %idxprom11.i = sext i32 %44 to i64
  %arrayidx12.i = getelementptr inbounds ptr, ptr %eff, i64 %idxprom11.i
  %46 = load ptr, ptr %arrayidx12.i, align 8, !tbaa !13
  %sub13.i = sub nsw i32 %38, %44
  %idxprom14.i = sext i32 %sub13.i to i64
  %arrayidx15.i = getelementptr inbounds float, ptr %46, i64 %idxprom14.i
  %47 = load float, ptr %arrayidx15.i, align 4, !tbaa !17
  %cmp16.i = fcmp olt float %47, %43
  br i1 %cmp16.i, label %if.then17.i, label %for.inc19.i

if.then17.i:                                      ; preds = %for.body9.i
  store float %47, ptr %add.ptr92, align 4, !tbaa !17
  store i32 %44, ptr %add.ptr94, align 4, !tbaa !10
  br label %for.inc19.i

for.inc19.i:                                      ; preds = %if.then17.i, %for.body9.i
  %48 = phi float [ %43, %for.body9.i ], [ %47, %if.then17.i ]
  %49 = load ptr, ptr %acptj.152.i, align 8, !tbaa !83
  %tobool.not.i = icmp eq ptr %49, null
  br i1 %tobool.not.i, label %setnearest.exit, label %land.rhs.i, !llvm.loop !118

setnearest.exit:                                  ; preds = %land.rhs.i, %for.inc19.i, %for.cond6.preheader.i
  %indvars.iv.next712 = add nuw nsw i64 %indvars.iv711, 1
  %exitcond715.not = icmp eq i64 %indvars.iv.next712, %wide.trip.count714
  br i1 %exitcond715.not, label %for.cond98.preheader, label %for.body90, !llvm.loop !119

for.end117.thread:                                ; preds = %for.end83, %for.end83.thread, %for.cond98.preheader
  %50 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc746 = tail call i32 @fputc(i32 10, ptr %50)
  br label %for.end390

for.body110.lr.ph:                                ; preds = %for.cond98.preheader
  %51 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.tmptmplen, align 8, !tbaa !13
  %52 = zext i32 %nseq to i64
  %53 = shl nuw nsw i64 %52, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %51, i8 0, i64 %53, i1 false), !tbaa !17
  %54 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.hist, align 8, !tbaa !13
  %55 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.nmemar, align 8, !tbaa !13
  %wide.trip.count722 = zext i32 %nseq to i64
  %min.iters.check = icmp ult i32 %nseq, 8
  %56 = ptrtoint ptr %55 to i64
  %57 = ptrtoint ptr %54 to i64
  %58 = sub i64 %56, %57
  %diff.check = icmp ult i64 %58, 32
  %or.cond755 = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond755, label %for.body110.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body110.lr.ph
  %n.vec = and i64 %wide.trip.count, 4294967288
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %59 = getelementptr inbounds i32, ptr %54, i64 %index
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %59, align 4, !tbaa !10
  %60 = getelementptr inbounds i32, ptr %59, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %60, align 4, !tbaa !10
  %61 = getelementptr inbounds i32, ptr %55, i64 %index
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, ptr %61, align 4, !tbaa !10
  %62 = getelementptr inbounds i32, ptr %61, i64 4
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, ptr %62, align 4, !tbaa !10
  %index.next = add nuw i64 %index, 8
  %63 = icmp eq i64 %index.next, %n.vec
  br i1 %63, label %middle.block, label %vector.body, !llvm.loop !120

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count
  br i1 %cmp.n, label %for.end117, label %for.body110.preheader

for.body110.preheader:                            ; preds = %for.body110.lr.ph, %middle.block
  %indvars.iv719.ph = phi i64 [ 0, %for.body110.lr.ph ], [ %n.vec, %middle.block ]
  %64 = xor i64 %indvars.iv719.ph, -1
  %65 = add nsw i64 %64, %wide.trip.count
  %xtraiter759 = and i64 %wide.trip.count, 3
  %lcmp.mod760.not = icmp eq i64 %xtraiter759, 0
  br i1 %lcmp.mod760.not, label %for.body110.prol.loopexit, label %for.body110.prol

for.body110.prol:                                 ; preds = %for.body110.preheader, %for.body110.prol
  %indvars.iv719.prol = phi i64 [ %indvars.iv.next720.prol, %for.body110.prol ], [ %indvars.iv719.ph, %for.body110.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body110.prol ], [ 0, %for.body110.preheader ]
  %arrayidx112.prol = getelementptr inbounds i32, ptr %54, i64 %indvars.iv719.prol
  store i32 -1, ptr %arrayidx112.prol, align 4, !tbaa !10
  %arrayidx114.prol = getelementptr inbounds i32, ptr %55, i64 %indvars.iv719.prol
  store i32 1, ptr %arrayidx114.prol, align 4, !tbaa !10
  %indvars.iv.next720.prol = add nuw nsw i64 %indvars.iv719.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter759
  br i1 %prol.iter.cmp.not, label %for.body110.prol.loopexit, label %for.body110.prol, !llvm.loop !121

for.body110.prol.loopexit:                        ; preds = %for.body110.prol, %for.body110.preheader
  %indvars.iv719.unr = phi i64 [ %indvars.iv719.ph, %for.body110.preheader ], [ %indvars.iv.next720.prol, %for.body110.prol ]
  %66 = icmp ult i64 %65, 3
  br i1 %66, label %for.end117, label %for.body110

for.body110:                                      ; preds = %for.body110.prol.loopexit, %for.body110
  %indvars.iv719 = phi i64 [ %indvars.iv.next720.3, %for.body110 ], [ %indvars.iv719.unr, %for.body110.prol.loopexit ]
  %arrayidx112 = getelementptr inbounds i32, ptr %54, i64 %indvars.iv719
  store i32 -1, ptr %arrayidx112, align 4, !tbaa !10
  %arrayidx114 = getelementptr inbounds i32, ptr %55, i64 %indvars.iv719
  store i32 1, ptr %arrayidx114, align 4, !tbaa !10
  %indvars.iv.next720 = add nuw nsw i64 %indvars.iv719, 1
  %arrayidx112.1 = getelementptr inbounds i32, ptr %54, i64 %indvars.iv.next720
  store i32 -1, ptr %arrayidx112.1, align 4, !tbaa !10
  %arrayidx114.1 = getelementptr inbounds i32, ptr %55, i64 %indvars.iv.next720
  store i32 1, ptr %arrayidx114.1, align 4, !tbaa !10
  %indvars.iv.next720.1 = add nuw nsw i64 %indvars.iv719, 2
  %arrayidx112.2 = getelementptr inbounds i32, ptr %54, i64 %indvars.iv.next720.1
  store i32 -1, ptr %arrayidx112.2, align 4, !tbaa !10
  %arrayidx114.2 = getelementptr inbounds i32, ptr %55, i64 %indvars.iv.next720.1
  store i32 1, ptr %arrayidx114.2, align 4, !tbaa !10
  %indvars.iv.next720.2 = add nuw nsw i64 %indvars.iv719, 3
  %arrayidx112.3 = getelementptr inbounds i32, ptr %54, i64 %indvars.iv.next720.2
  store i32 -1, ptr %arrayidx112.3, align 4, !tbaa !10
  %arrayidx114.3 = getelementptr inbounds i32, ptr %55, i64 %indvars.iv.next720.2
  store i32 1, ptr %arrayidx114.3, align 4, !tbaa !10
  %indvars.iv.next720.3 = add nuw nsw i64 %indvars.iv719, 4
  %exitcond723.not.3 = icmp eq i64 %indvars.iv.next720.3, %wide.trip.count722
  br i1 %exitcond723.not.3, label %for.end117, label %for.body110, !llvm.loop !122

for.end117:                                       ; preds = %for.body110.prol.loopexit, %for.body110, %middle.block
  %67 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc = tail call i32 @fputc(i32 10, ptr %67)
  %cmp121696 = icmp sgt i32 %nseq, 1
  br i1 %cmp121696, label %for.body123.preheader, label %for.end390

for.body123.preheader:                            ; preds = %for.end117
  %wide.trip.count727 = zext i32 %sub to i64
  br label %for.body123

for.body123:                                      ; preds = %for.body123.preheader, %for.inc388
  %indvars.iv724 = phi i64 [ 0, %for.body123.preheader ], [ %indvars.iv.next725, %for.inc388 ]
  %im.0697 = phi i32 [ -1, %for.body123.preheader ], [ %spec.select, %for.inc388 ]
  %68 = trunc i64 %indvars.iv724 to i32
  %rem = urem i32 %68, 10
  %cmp124 = icmp eq i32 %rem, 0
  br i1 %cmp124, label %if.then126, label %if.end128

if.then126:                                       ; preds = %for.body123
  %69 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call127 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %69, ptr noundef nonnull @.str.13, i32 noundef %68, i32 noundef %nseq) #32
  br label %if.end128

if.end128:                                        ; preds = %if.then126, %for.body123
  %acpti.0668 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.ac, align 8, !tbaa !13
  %70 = load ptr, ptr %acpti.0668, align 8, !tbaa !13
  %cmp131.not669 = icmp eq ptr %70, null
  br i1 %cmp131.not669, label %for.end145, label %for.body133

for.body133:                                      ; preds = %if.end128, %for.body133
  %acpti.0 = phi ptr [ %73, %for.body133 ], [ %70, %if.end128 ]
  %acpti.0672 = phi ptr [ %acpti.0, %for.body133 ], [ %acpti.0668, %if.end128 ]
  %minscore.0671 = phi float [ %minscore.1, %for.body133 ], [ 0x408F3F3340000000, %if.end128 ]
  %im.1670 = phi i32 [ %im.2, %for.body133 ], [ %im.0697, %if.end128 ]
  %pos134 = getelementptr inbounds %struct._Bchain, ptr %acpti.0672, i64 0, i32 2
  %71 = load i32, ptr %pos134, align 8, !tbaa !90
  %idxprom135 = sext i32 %71 to i64
  %arrayidx136 = getelementptr inbounds float, ptr %mindisfrom.0, i64 %idxprom135
  %72 = load float, ptr %arrayidx136, align 4, !tbaa !17
  %cmp137 = fcmp olt float %72, %minscore.0671
  %im.2 = select i1 %cmp137, i32 %71, i32 %im.1670
  %minscore.1 = select i1 %cmp137, float %72, float %minscore.0671
  %73 = load ptr, ptr %acpti.0, align 8, !tbaa !13
  %cmp131.not = icmp eq ptr %73, null
  br i1 %cmp131.not, label %for.end145, label %for.body133, !llvm.loop !123

for.end145:                                       ; preds = %for.body133, %if.end128
  %im.1.lcssa = phi i32 [ %im.0697, %if.end128 ], [ %im.2, %for.body133 ]
  %minscore.0.lcssa = phi float [ 0x408F3F3340000000, %if.end128 ], [ %minscore.1, %for.body133 ]
  %idxprom146 = sext i32 %im.1.lcssa to i64
  %arrayidx147 = getelementptr inbounds i32, ptr %nearest.0, i64 %idxprom146
  %74 = load i32, ptr %arrayidx147, align 4, !tbaa !10
  %spec.select = tail call i32 @llvm.smin.i32(i32 %74, i32 %im.1.lcssa)
  %spec.select615 = tail call i32 @llvm.smax.i32(i32 %74, i32 %im.1.lcssa)
  %75 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.hist, align 8, !tbaa !13
  %idxprom152 = sext i32 %spec.select to i64
  %arrayidx153 = getelementptr inbounds i32, ptr %75, i64 %idxprom152
  %76 = load i32, ptr %arrayidx153, align 4, !tbaa !10
  %77 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.nmemar, align 8, !tbaa !13
  %arrayidx155 = getelementptr inbounds i32, ptr %77, i64 %idxprom152
  %78 = load i32, ptr %arrayidx155, align 4, !tbaa !10
  %arrayidx157 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv724
  %79 = load ptr, ptr %arrayidx157, align 8, !tbaa !13
  %80 = load ptr, ptr %79, align 8, !tbaa !13
  %add159 = add nsw i32 %78, 1
  %conv160 = sext i32 %add159 to i64
  %mul161 = shl nsw i64 %conv160, 2
  %call162 = tail call ptr @realloc(ptr noundef %80, i64 noundef %mul161) #37
  %81 = load ptr, ptr %arrayidx157, align 8, !tbaa !13
  store ptr %call162, ptr %81, align 8, !tbaa !13
  %cmp166 = icmp eq i32 %76, -1
  br i1 %cmp166, label %if.then168, label %if.else169

if.then168:                                       ; preds = %for.end145
  %incdec.ptr = getelementptr inbounds i32, ptr %call162, i64 1
  store i32 %spec.select, ptr %call162, align 4, !tbaa !10
  br label %if.end195

if.else169:                                       ; preds = %for.end145
  %idxprom170 = sext i32 %76 to i64
  %arrayidx171 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom170
  %82 = load ptr, ptr %arrayidx171, align 8, !tbaa !13
  %83 = load ptr, ptr %82, align 8, !tbaa !13
  %arrayidx175 = getelementptr inbounds ptr, ptr %82, i64 1
  %84 = load ptr, ptr %arrayidx175, align 8, !tbaa !13
  %85 = load i32, ptr %83, align 4, !tbaa !10
  %86 = load i32, ptr %84, align 4, !tbaa !10
  %cmp176 = icmp sgt i32 %85, %86
  %87 = tail call i32 @llvm.smin.i32(i32 %85, i32 %86)
  %88 = tail call i32 @llvm.smax.i32(i32 %85, i32 %86)
  %.616 = select i1 %cmp176, ptr %83, ptr %84
  %cmp182.not674 = icmp eq i32 %87, -1
  br i1 %cmp182.not674, label %for.cond188.preheader, label %for.body184.preheader

for.body184.preheader:                            ; preds = %if.else169
  %. = select i1 %cmp176, ptr %84, ptr %83
  br label %for.body184

for.cond188.preheader.loopexit:                   ; preds = %for.body184
  %.pre731 = load i32, ptr %.616, align 4, !tbaa !10
  br label %for.cond188.preheader

for.cond188.preheader:                            ; preds = %for.cond188.preheader.loopexit, %if.else169
  %89 = phi i32 [ %88, %if.else169 ], [ %.pre731, %for.cond188.preheader.loopexit ]
  %intpt.0.lcssa = phi ptr [ %call162, %if.else169 ], [ %incdec.ptr186, %for.cond188.preheader.loopexit ]
  %cmp189.not678 = icmp eq i32 %89, -1
  br i1 %cmp189.not678, label %if.end195, label %for.body191

for.body184:                                      ; preds = %for.body184.preheader, %for.body184
  %90 = phi i32 [ %91, %for.body184 ], [ %87, %for.body184.preheader ]
  %intpt.0676 = phi ptr [ %incdec.ptr186, %for.body184 ], [ %call162, %for.body184.preheader ]
  %intpt2.0675 = phi ptr [ %incdec.ptr185, %for.body184 ], [ %., %for.body184.preheader ]
  %incdec.ptr185 = getelementptr inbounds i32, ptr %intpt2.0675, i64 1
  %incdec.ptr186 = getelementptr inbounds i32, ptr %intpt.0676, i64 1
  store i32 %90, ptr %intpt.0676, align 4, !tbaa !10
  %91 = load i32, ptr %incdec.ptr185, align 4, !tbaa !10
  %cmp182.not = icmp eq i32 %91, -1
  br i1 %cmp182.not, label %for.cond188.preheader.loopexit, label %for.body184, !llvm.loop !124

for.body191:                                      ; preds = %for.cond188.preheader, %for.body191
  %92 = phi i32 [ %93, %for.body191 ], [ %89, %for.cond188.preheader ]
  %intpt.1680 = phi ptr [ %incdec.ptr193, %for.body191 ], [ %intpt.0.lcssa, %for.cond188.preheader ]
  %intpt2.1679 = phi ptr [ %incdec.ptr192, %for.body191 ], [ %.616, %for.cond188.preheader ]
  %incdec.ptr192 = getelementptr inbounds i32, ptr %intpt2.1679, i64 1
  %incdec.ptr193 = getelementptr inbounds i32, ptr %intpt.1680, i64 1
  store i32 %92, ptr %intpt.1680, align 4, !tbaa !10
  %93 = load i32, ptr %incdec.ptr192, align 4, !tbaa !10
  %cmp189.not = icmp eq i32 %93, -1
  br i1 %cmp189.not, label %if.end195, label %for.body191, !llvm.loop !125

if.end195:                                        ; preds = %for.body191, %for.cond188.preheader, %if.then168
  %intpt.1.lcssa.sink = phi ptr [ %incdec.ptr, %if.then168 ], [ %intpt.0.lcssa, %for.cond188.preheader ], [ %incdec.ptr193, %for.body191 ]
  store i32 -1, ptr %intpt.1.lcssa.sink, align 4, !tbaa !10
  %idxprom196 = sext i32 %spec.select615 to i64
  %arrayidx197 = getelementptr inbounds i32, ptr %75, i64 %idxprom196
  %94 = load i32, ptr %arrayidx197, align 4, !tbaa !10
  %arrayidx199 = getelementptr inbounds i32, ptr %77, i64 %idxprom196
  %95 = load i32, ptr %arrayidx199, align 4, !tbaa !10
  %96 = load ptr, ptr %arrayidx157, align 8, !tbaa !13
  %arrayidx202 = getelementptr inbounds ptr, ptr %96, i64 1
  %97 = load ptr, ptr %arrayidx202, align 8, !tbaa !13
  %add203 = add nsw i32 %95, 1
  %conv204 = sext i32 %add203 to i64
  %mul205 = shl nsw i64 %conv204, 2
  %call206 = tail call ptr @realloc(ptr noundef %97, i64 noundef %mul205) #37
  %98 = load ptr, ptr %arrayidx157, align 8, !tbaa !13
  %arrayidx209 = getelementptr inbounds ptr, ptr %98, i64 1
  store ptr %call206, ptr %arrayidx209, align 8, !tbaa !13
  %tobool210.not = icmp eq ptr %call206, null
  br i1 %tobool210.not, label %if.then211, label %if.end213

if.then211:                                       ; preds = %if.end195
  %99 = load ptr, ptr @stderr, align 8, !tbaa !13
  %100 = tail call i64 @fwrite(ptr nonnull @.str.15, i64 24, i64 1, ptr %99) #32
  tail call void @exit(i32 noundef 1) #33
  unreachable

if.end213:                                        ; preds = %if.end195
  %cmp214 = icmp eq i32 %94, -1
  br i1 %cmp214, label %if.then216, label %if.else218

if.then216:                                       ; preds = %if.end213
  %incdec.ptr217 = getelementptr inbounds i32, ptr %call206, i64 1
  store i32 %spec.select615, ptr %call206, align 4, !tbaa !10
  br label %if.end244

if.else218:                                       ; preds = %if.end213
  %idxprom219 = sext i32 %94 to i64
  %arrayidx220 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom219
  %101 = load ptr, ptr %arrayidx220, align 8, !tbaa !13
  %102 = load ptr, ptr %101, align 8, !tbaa !13
  %arrayidx224 = getelementptr inbounds ptr, ptr %101, i64 1
  %103 = load ptr, ptr %arrayidx224, align 8, !tbaa !13
  %104 = load i32, ptr %102, align 4, !tbaa !10
  %105 = load i32, ptr %103, align 4, !tbaa !10
  %cmp225 = icmp sgt i32 %104, %105
  %106 = tail call i32 @llvm.smin.i32(i32 %104, i32 %105)
  %107 = tail call i32 @llvm.smax.i32(i32 %104, i32 %105)
  %.618 = select i1 %cmp225, ptr %102, ptr %103
  %cmp231.not682 = icmp eq i32 %106, -1
  br i1 %cmp231.not682, label %for.cond237.preheader, label %for.body233.preheader

for.body233.preheader:                            ; preds = %if.else218
  %.617 = select i1 %cmp225, ptr %103, ptr %102
  br label %for.body233

for.cond237.preheader.loopexit:                   ; preds = %for.body233
  %.pre732 = load i32, ptr %.618, align 4, !tbaa !10
  br label %for.cond237.preheader

for.cond237.preheader:                            ; preds = %for.cond237.preheader.loopexit, %if.else218
  %108 = phi i32 [ %107, %if.else218 ], [ %.pre732, %for.cond237.preheader.loopexit ]
  %intpt.2.lcssa = phi ptr [ %call206, %if.else218 ], [ %incdec.ptr235, %for.cond237.preheader.loopexit ]
  %cmp238.not686 = icmp eq i32 %108, -1
  br i1 %cmp238.not686, label %if.end244, label %for.body240

for.body233:                                      ; preds = %for.body233.preheader, %for.body233
  %109 = phi i32 [ %110, %for.body233 ], [ %106, %for.body233.preheader ]
  %intpt.2684 = phi ptr [ %incdec.ptr235, %for.body233 ], [ %call206, %for.body233.preheader ]
  %intpt2.2683 = phi ptr [ %incdec.ptr234, %for.body233 ], [ %.617, %for.body233.preheader ]
  %incdec.ptr234 = getelementptr inbounds i32, ptr %intpt2.2683, i64 1
  %incdec.ptr235 = getelementptr inbounds i32, ptr %intpt.2684, i64 1
  store i32 %109, ptr %intpt.2684, align 4, !tbaa !10
  %110 = load i32, ptr %incdec.ptr234, align 4, !tbaa !10
  %cmp231.not = icmp eq i32 %110, -1
  br i1 %cmp231.not, label %for.cond237.preheader.loopexit, label %for.body233, !llvm.loop !126

for.body240:                                      ; preds = %for.cond237.preheader, %for.body240
  %111 = phi i32 [ %112, %for.body240 ], [ %108, %for.cond237.preheader ]
  %intpt.3688 = phi ptr [ %incdec.ptr242, %for.body240 ], [ %intpt.2.lcssa, %for.cond237.preheader ]
  %intpt2.3687 = phi ptr [ %incdec.ptr241, %for.body240 ], [ %.618, %for.cond237.preheader ]
  %incdec.ptr241 = getelementptr inbounds i32, ptr %intpt2.3687, i64 1
  %incdec.ptr242 = getelementptr inbounds i32, ptr %intpt.3688, i64 1
  store i32 %111, ptr %intpt.3688, align 4, !tbaa !10
  %112 = load i32, ptr %incdec.ptr241, align 4, !tbaa !10
  %cmp238.not = icmp eq i32 %112, -1
  br i1 %cmp238.not, label %if.end244, label %for.body240, !llvm.loop !127

if.end244:                                        ; preds = %for.body240, %for.cond237.preheader, %if.then216
  %intpt.3.lcssa.sink = phi ptr [ %incdec.ptr217, %if.then216 ], [ %intpt.2.lcssa, %for.cond237.preheader ], [ %incdec.ptr242, %for.body240 ]
  store i32 -1, ptr %intpt.3.lcssa.sink, align 4, !tbaa !10
  %conv247 = fmul float %minscore.0.lcssa, 5.000000e-01
  %113 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.tmptmplen, align 8, !tbaa !13
  %arrayidx249 = getelementptr inbounds float, ptr %113, i64 %idxprom152
  %114 = load float, ptr %arrayidx249, align 4, !tbaa !17
  %sub250 = fsub float %conv247, %114
  %arrayidx252 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv724
  %115 = load ptr, ptr %arrayidx252, align 8, !tbaa !13
  store float %sub250, ptr %115, align 4, !tbaa !17
  %arrayidx255 = getelementptr inbounds float, ptr %113, i64 %idxprom196
  %116 = load float, ptr %arrayidx255, align 4, !tbaa !17
  %sub256 = fsub float %conv247, %116
  %arrayidx259 = getelementptr inbounds float, ptr %115, i64 1
  store float %sub256, ptr %arrayidx259, align 4, !tbaa !17
  store float %conv247, ptr %arrayidx249, align 4, !tbaa !17
  store i32 %68, ptr %arrayidx153, align 4, !tbaa !10
  %add264 = add nsw i32 %95, %78
  store i32 %add264, ptr %arrayidx155, align 4, !tbaa !10
  %arrayidx268 = getelementptr inbounds float, ptr %mindisfrom.0, i64 %idxprom152
  store float 0x408F3F3340000000, ptr %arrayidx268, align 4, !tbaa !17
  %acpti.1690 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.ac, align 8, !tbaa !13
  %cmp270.not691 = icmp eq ptr %acpti.1690, null
  br i1 %cmp270.not691, label %for.end337, label %for.body272.lr.ph

for.body272.lr.ph:                                ; preds = %if.end244
  %arrayidx324 = getelementptr inbounds i32, ptr %nearest.0, i64 %idxprom152
  br label %for.body272

for.body272:                                      ; preds = %for.body272.lr.ph, %for.inc335
  %acpti.1692 = phi ptr [ %acpti.1690, %for.body272.lr.ph ], [ %acpti.1, %for.inc335 ]
  %pos273 = getelementptr inbounds %struct._Bchain, ptr %acpti.1692, i64 0, i32 2
  %117 = load i32, ptr %pos273, align 8, !tbaa !90
  %cmp274.not = icmp eq i32 %117, %spec.select
  %cmp276.not = icmp eq i32 %117, %spec.select615
  %or.cond = select i1 %cmp274.not, i1 true, i1 %cmp276.not
  br i1 %or.cond, label %for.inc335, label %if.then278

if.then278:                                       ; preds = %for.body272
  %cmp279 = icmp slt i32 %117, %spec.select
  br i1 %cmp279, label %if.then278.if.end288_crit_edge, label %if.else282

if.then278.if.end288_crit_edge:                   ; preds = %if.then278
  %.pre734 = sext i32 %117 to i64
  br label %if.end288

if.else282:                                       ; preds = %if.then278
  %spec.select615. = tail call i32 @llvm.smax.i32(i32 %117, i32 %spec.select615)
  %.spec.select615 = tail call i32 @llvm.smin.i32(i32 %117, i32 %spec.select615)
  %.pre735 = sext i32 %.spec.select615 to i64
  %.pre736 = sext i32 %117 to i64
  br label %if.end288

if.end288:                                        ; preds = %if.then278.if.end288_crit_edge, %if.else282
  %idxprom306.pre-phi = phi i64 [ %.pre734, %if.then278.if.end288_crit_edge ], [ %.pre736, %if.else282 ]
  %idxprom294.pre-phi = phi i64 [ %.pre734, %if.then278.if.end288_crit_edge ], [ %.pre735, %if.else282 ]
  %idxprom289.pre-phi = phi i64 [ %.pre734, %if.then278.if.end288_crit_edge ], [ %idxprom152, %if.else282 ]
  %maxijm.0 = phi i32 [ %spec.select615, %if.then278.if.end288_crit_edge ], [ %spec.select615., %if.else282 ]
  %minijm.0 = phi i32 [ %117, %if.then278.if.end288_crit_edge ], [ %.spec.select615, %if.else282 ]
  %maxiim.0 = phi i32 [ %spec.select, %if.then278.if.end288_crit_edge ], [ %117, %if.else282 ]
  %miniim.0 = phi i32 [ %117, %if.then278.if.end288_crit_edge ], [ %spec.select, %if.else282 ]
  %arrayidx290 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom289.pre-phi
  %118 = load ptr, ptr %arrayidx290, align 8, !tbaa !13
  %sub291 = sub nsw i32 %maxiim.0, %miniim.0
  %idxprom292 = sext i32 %sub291 to i64
  %arrayidx293 = getelementptr inbounds float, ptr %118, i64 %idxprom292
  %119 = load float, ptr %arrayidx293, align 4, !tbaa !17
  %arrayidx295 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom294.pre-phi
  %120 = load ptr, ptr %arrayidx295, align 8, !tbaa !13
  %sub296 = sub nsw i32 %maxijm.0, %minijm.0
  %idxprom297 = sext i32 %sub296 to i64
  %arrayidx298 = getelementptr inbounds float, ptr %120, i64 %idxprom297
  %121 = load float, ptr %arrayidx298, align 4, !tbaa !17
  %call300 = tail call float %clusterfuncpt.sroa.0.0(float noundef %119, float noundef %121) #34, !callees !111
  %122 = load ptr, ptr %arrayidx290, align 8, !tbaa !13
  %arrayidx305 = getelementptr inbounds float, ptr %122, i64 %idxprom292
  store float %call300, ptr %arrayidx305, align 4, !tbaa !17
  %arrayidx307 = getelementptr inbounds float, ptr %mindisfrom.0, i64 %idxprom306.pre-phi
  %123 = load float, ptr %arrayidx307, align 4, !tbaa !17
  %cmp308 = fcmp olt float %call300, %123
  br i1 %cmp308, label %if.then310, label %if.end315

if.then310:                                       ; preds = %if.end288
  store float %call300, ptr %arrayidx307, align 4, !tbaa !17
  %arrayidx314 = getelementptr inbounds i32, ptr %nearest.0, i64 %idxprom306.pre-phi
  store i32 %spec.select, ptr %arrayidx314, align 4, !tbaa !10
  br label %if.end315

if.end315:                                        ; preds = %if.then310, %if.end288
  %124 = load float, ptr %arrayidx268, align 4, !tbaa !17
  %cmp318 = fcmp olt float %call300, %124
  br i1 %cmp318, label %if.then320, label %if.end325

if.then320:                                       ; preds = %if.end315
  store float %call300, ptr %arrayidx268, align 4, !tbaa !17
  store i32 %117, ptr %arrayidx324, align 4, !tbaa !10
  br label %if.end325

if.end325:                                        ; preds = %if.then320, %if.end315
  %arrayidx327 = getelementptr inbounds i32, ptr %nearest.0, i64 %idxprom306.pre-phi
  %125 = load i32, ptr %arrayidx327, align 4, !tbaa !10
  %cmp328 = icmp eq i32 %125, %spec.select615
  br i1 %cmp328, label %if.then330, label %for.inc335

if.then330:                                       ; preds = %if.end325
  store i32 %spec.select, ptr %arrayidx327, align 4, !tbaa !10
  br label %for.inc335

for.inc335:                                       ; preds = %for.body272, %if.then330, %if.end325
  %acpti.1 = load ptr, ptr %acpti.1692, align 8, !tbaa !13
  %cmp270.not = icmp eq ptr %acpti.1, null
  br i1 %cmp270.not, label %for.end337.loopexit, label %for.body272, !llvm.loop !128

for.end337.loopexit:                              ; preds = %for.inc335
  %.pre733 = load ptr, ptr %arrayidx252, align 8, !tbaa !13
  br label %for.end337

for.end337:                                       ; preds = %for.end337.loopexit, %if.end244
  %126 = phi ptr [ %.pre733, %for.end337.loopexit ], [ %115, %if.end244 ]
  %127 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.treetmp, align 8, !tbaa !13
  %128 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.tree, align 8, !tbaa !13
  %arrayidx339 = getelementptr inbounds ptr, ptr %128, i64 %idxprom152
  %129 = load ptr, ptr %arrayidx339, align 8, !tbaa !13
  %130 = load float, ptr %126, align 4, !tbaa !17
  %conv343 = fpext float %130 to double
  %arrayidx345 = getelementptr inbounds ptr, ptr %128, i64 %idxprom196
  %131 = load ptr, ptr %arrayidx345, align 8, !tbaa !13
  %arrayidx348 = getelementptr inbounds float, ptr %126, i64 1
  %132 = load float, ptr %arrayidx348, align 4, !tbaa !17
  %conv349 = fpext float %132 to double
  %call350 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %127, ptr noundef nonnull dereferenceable(1) @.str.16, ptr noundef %129, double noundef %conv343, ptr noundef %131, double noundef %conv349) #34
  %133 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.tree, align 8, !tbaa !13
  %arrayidx352 = getelementptr inbounds ptr, ptr %133, i64 %idxprom152
  %134 = load ptr, ptr %arrayidx352, align 8, !tbaa !13
  %135 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.treetmp, align 8, !tbaa !13
  %call353 = tail call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %134, ptr noundef nonnull dereferenceable(1) %135) #34
  %136 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.ac, align 8, !tbaa !13
  %arrayidx355 = getelementptr inbounds %struct._Bchain, ptr %136, i64 %idxprom196
  %prev356 = getelementptr inbounds %struct._Bchain, ptr %136, i64 %idxprom196, i32 1
  %137 = load ptr, ptr %prev356, align 8, !tbaa !89
  %138 = load ptr, ptr %arrayidx355, align 8, !tbaa !83
  store ptr %138, ptr %137, align 8, !tbaa !83
  %cmp361.not = icmp eq ptr %138, null
  br i1 %cmp361.not, label %if.end365, label %if.then363

if.then363:                                       ; preds = %for.end337
  %prev364 = getelementptr inbounds %struct._Bchain, ptr %138, i64 0, i32 1
  store ptr %137, ptr %prev364, align 8, !tbaa !89
  br label %if.end365

if.end365:                                        ; preds = %if.then363, %for.end337
  %arrayidx367 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom196
  %139 = load ptr, ptr %arrayidx367, align 8, !tbaa !13
  tail call void @free(ptr noundef %139) #34
  store ptr null, ptr %arrayidx367, align 8, !tbaa !13
  %acpti.2693 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.ac, align 8
  %cmp371.not694 = icmp eq ptr %acpti.2693, null
  br i1 %cmp371.not694, label %for.inc388, label %for.body373

for.body373:                                      ; preds = %if.end365, %for.inc385
  %acpti.2695 = phi ptr [ %acpti.2, %for.inc385 ], [ %acpti.2693, %if.end365 ]
  %pos374 = getelementptr inbounds %struct._Bchain, ptr %acpti.2695, i64 0, i32 2
  %140 = load i32, ptr %pos374, align 8, !tbaa !90
  %idxprom375 = sext i32 %140 to i64
  %arrayidx376 = getelementptr inbounds i32, ptr %nearest.0, i64 %idxprom375
  %141 = load i32, ptr %arrayidx376, align 4, !tbaa !10
  %cmp377 = icmp eq i32 %141, %spec.select
  br i1 %cmp377, label %if.then379, label %for.inc385

if.then379:                                       ; preds = %for.body373
  %add.ptr381 = getelementptr inbounds float, ptr %mindisfrom.0, i64 %idxprom375
  store float 0x408F3F3340000000, ptr %add.ptr381, align 4, !tbaa !17
  store i32 -1, ptr %arrayidx376, align 4, !tbaa !10
  %add.ptr.i620 = getelementptr inbounds %struct._Bchain, ptr %acpti.2693, i64 %idxprom375
  %acptj.048.i621 = load ptr, ptr %add.ptr.i620, align 8, !tbaa !83
  %cmp.not49.i622 = icmp eq ptr %acptj.048.i621, null
  br i1 %cmp.not49.i622, label %land.rhs.i642.preheader, label %for.body.lr.ph.i624

for.body.lr.ph.i624:                              ; preds = %if.then379
  %arrayidx.i623 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom375
  %142 = load ptr, ptr %arrayidx.i623, align 8, !tbaa !13
  br label %for.body.i634

for.body.i634:                                    ; preds = %for.inc.i638, %for.body.lr.ph.i624
  %143 = phi float [ 0x408F3F3340000000, %for.body.lr.ph.i624 ], [ %146, %for.inc.i638 ]
  %acptj.050.i628 = phi ptr [ %acptj.048.i621, %for.body.lr.ph.i624 ], [ %acptj.0.i636, %for.inc.i638 ]
  %pos1.i629 = getelementptr inbounds %struct._Bchain, ptr %acptj.050.i628, i64 0, i32 2
  %144 = load i32, ptr %pos1.i629, align 8, !tbaa !90
  %sub.i630 = sub nsw i32 %144, %140
  %idxprom2.i631 = sext i32 %sub.i630 to i64
  %arrayidx3.i632 = getelementptr inbounds float, ptr %142, i64 %idxprom2.i631
  %145 = load float, ptr %arrayidx3.i632, align 4, !tbaa !17
  %cmp4.i633 = fcmp olt float %145, %143
  br i1 %cmp4.i633, label %if.then.i635, label %for.inc.i638

if.then.i635:                                     ; preds = %for.body.i634
  store float %145, ptr %add.ptr381, align 4, !tbaa !17
  store i32 %144, ptr %arrayidx376, align 4, !tbaa !10
  br label %for.inc.i638

for.inc.i638:                                     ; preds = %if.then.i635, %for.body.i634
  %146 = phi float [ %143, %for.body.i634 ], [ %145, %if.then.i635 ]
  %acptj.0.i636 = load ptr, ptr %acptj.050.i628, align 8, !tbaa !83
  %cmp.not.i637 = icmp eq ptr %acptj.0.i636, null
  br i1 %cmp.not.i637, label %land.rhs.i642.preheader, label %for.body.i634, !llvm.loop !117

land.rhs.i642.preheader:                          ; preds = %for.inc.i638, %if.then379
  %.ph = phi float [ 0x408F3F3340000000, %if.then379 ], [ %146, %for.inc.i638 ]
  br label %land.rhs.i642

land.rhs.i642:                                    ; preds = %land.rhs.i642.preheader, %for.inc19.i652
  %147 = phi float [ %151, %for.inc19.i652 ], [ %.ph, %land.rhs.i642.preheader ]
  %acptj.152.i639 = phi ptr [ %152, %for.inc19.i652 ], [ %acpti.2693, %land.rhs.i642.preheader ]
  %pos7.i640 = getelementptr inbounds %struct._Bchain, ptr %acptj.152.i639, i64 0, i32 2
  %148 = load i32, ptr %pos7.i640, align 8, !tbaa !90
  %cmp8.not.i641 = icmp eq i32 %140, %148
  br i1 %cmp8.not.i641, label %for.inc385, label %for.body9.i649

for.body9.i649:                                   ; preds = %land.rhs.i642
  %idxprom11.i643 = sext i32 %148 to i64
  %arrayidx12.i644 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom11.i643
  %149 = load ptr, ptr %arrayidx12.i644, align 8, !tbaa !13
  %sub13.i645 = sub nsw i32 %140, %148
  %idxprom14.i646 = sext i32 %sub13.i645 to i64
  %arrayidx15.i647 = getelementptr inbounds float, ptr %149, i64 %idxprom14.i646
  %150 = load float, ptr %arrayidx15.i647, align 4, !tbaa !17
  %cmp16.i648 = fcmp olt float %150, %147
  br i1 %cmp16.i648, label %if.then17.i650, label %for.inc19.i652

if.then17.i650:                                   ; preds = %for.body9.i649
  store float %150, ptr %add.ptr381, align 4, !tbaa !17
  store i32 %148, ptr %arrayidx376, align 4, !tbaa !10
  br label %for.inc19.i652

for.inc19.i652:                                   ; preds = %if.then17.i650, %for.body9.i649
  %151 = phi float [ %147, %for.body9.i649 ], [ %150, %if.then17.i650 ]
  %152 = load ptr, ptr %acptj.152.i639, align 8, !tbaa !83
  %tobool.not.i651 = icmp eq ptr %152, null
  br i1 %tobool.not.i651, label %for.inc385, label %land.rhs.i642, !llvm.loop !118

for.inc385:                                       ; preds = %for.inc19.i652, %land.rhs.i642, %for.body373
  %acpti.2 = load ptr, ptr %acpti.2695, align 8, !tbaa !13
  %cmp371.not = icmp eq ptr %acpti.2, null
  br i1 %cmp371.not, label %for.inc388, label %for.body373, !llvm.loop !129

for.inc388:                                       ; preds = %for.inc385, %if.end365
  %indvars.iv.next725 = add nuw nsw i64 %indvars.iv724, 1
  %exitcond728.not = icmp eq i64 %indvars.iv.next725, %wide.trip.count727
  br i1 %exitcond728.not, label %for.end390, label %for.body123, !llvm.loop !130

for.end390:                                       ; preds = %for.inc388, %for.end117.thread, %for.end117
  %call391 = tail call noalias ptr @fopen(ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
  %153 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.treetmp, align 8, !tbaa !13
  %call392 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %call391, ptr noundef nonnull @.str.4, ptr noundef %153)
  %call393 = tail call i32 @fclose(ptr noundef %call391)
  %154 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.tree, align 8, !tbaa !13
  tail call void @FreeCharMtx(ptr noundef %154) #34
  %155 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.treetmp, align 8, !tbaa !13
  tail call void @free(ptr noundef %155) #34
  %156 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.nametmp, align 8, !tbaa !13
  tail call void @free(ptr noundef %156) #34
  %157 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.tmptmplen, align 8, !tbaa !13
  tail call void @free(ptr noundef %157) #34
  store ptr null, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.tmptmplen, align 8, !tbaa !13
  %158 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.hist, align 8, !tbaa !13
  tail call void @free(ptr noundef %158) #34
  store ptr null, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.hist, align 8, !tbaa !13
  %159 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.ac, align 8, !tbaa !13
  tail call void @free(ptr noundef %159) #34
  store ptr null, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.ac, align 8, !tbaa !13
  %160 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.nmemar, align 8, !tbaa !13
  tail call void @free(ptr noundef %160) #34
  store ptr null, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx_treeout.nmemar, align 8, !tbaa !13
  tail call void @free(ptr noundef %mindisfrom.0) #34
  tail call void @free(ptr noundef %nearest.0) #34
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @fixed_musclesupg_float_realloc_nobk_halfmtx(i32 noundef %nseq, ptr nocapture noundef %eff, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %len) local_unnamed_addr #12 {
entry:
  store float 0x3FECCCCCC0000000, ptr @sueff1, align 4, !tbaa !17
  store float 0x3FA99999A0000000, ptr @sueff05, align 4, !tbaa !17
  %0 = load i32, ptr @treemethod, align 4, !tbaa !10
  switch i32 %0, label %if.else8 [
    i32 88, label %if.end10
    i32 69, label %if.then2
    i32 113, label %if.then6
  ]

if.then2:                                         ; preds = %entry
  br label %if.end10

if.then6:                                         ; preds = %entry
  br label %if.end10

if.else8:                                         ; preds = %entry
  %1 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.20, i32 noundef %0) #32
  tail call void @exit(i32 noundef 1) #33
  unreachable

if.end10:                                         ; preds = %entry, %if.then2, %if.then6
  %clusterfuncpt.sroa.0.0 = phi ptr [ @cluster_average_float, %if.then2 ], [ @cluster_minimum_float, %if.then6 ], [ @cluster_mix_float, %entry ]
  %2 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.hist, align 8, !tbaa !13
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %if.then11, label %if.end18

if.then11:                                        ; preds = %if.end10
  %3 = load i32, ptr @njob, align 4, !tbaa !10
  %call12 = tail call ptr @AllocateIntVec(i32 noundef %3) #34
  store ptr %call12, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.hist, align 8, !tbaa !13
  %4 = load i32, ptr @njob, align 4, !tbaa !10
  %call13 = tail call ptr @AllocateFloatVec(i32 noundef %4) #34
  store ptr %call13, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.tmptmplen, align 8, !tbaa !13
  %5 = load i32, ptr @njob, align 4, !tbaa !10
  %conv = sext i32 %5 to i64
  %mul = mul nsw i64 %conv, 24
  %call14 = tail call noalias ptr @malloc(i64 noundef %mul) #35
  store ptr %call14, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.ac, align 8, !tbaa !13
  %call15 = tail call ptr @AllocateIntVec(i32 noundef %5) #34
  store ptr %call15, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.nmemar, align 8, !tbaa !13
  %6 = load i32, ptr @njob, align 4, !tbaa !10
  %call16 = tail call ptr @AllocateFloatVec(i32 noundef %6) #34
  %7 = load i32, ptr @njob, align 4, !tbaa !10
  %call17 = tail call ptr @AllocateIntVec(i32 noundef %7) #34
  br label %if.end18

if.end18:                                         ; preds = %if.then11, %if.end10
  %nearest.0 = phi ptr [ null, %if.end10 ], [ %call17, %if.then11 ]
  %mindisfrom.0 = phi ptr [ null, %if.end10 ], [ %call16, %if.then11 ]
  %cmp19556 = icmp sgt i32 %nseq, 0
  br i1 %cmp19556, label %for.body.preheader, label %for.end.thread

for.end.thread:                                   ; preds = %if.end18
  %.pre616 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.ac, align 8, !tbaa !13
  %sub624 = add nsw i32 %nseq, -1
  %idxprom30625 = sext i32 %sub624 to i64
  %arrayidx31626 = getelementptr inbounds %struct._Bchain, ptr %.pre616, i64 %idxprom30625
  store ptr null, ptr %arrayidx31626, align 8, !tbaa !83
  br label %for.end63.thread

for.body.preheader:                               ; preds = %if.end18
  %wide.trip.count = zext i32 %nseq to i64
  %.pre = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.ac, align 8, !tbaa !13
  %xtraiter = and i64 %wide.trip.count, 1
  %8 = icmp eq i32 %nseq, 1
  br i1 %8, label %for.end.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  %9 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.ac, align 8, !tbaa !13
  %invariant.gep = getelementptr %struct._Bchain, ptr %9, i64 -1
  %10 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.ac, align 8, !tbaa !13
  %invariant.gep649 = getelementptr %struct._Bchain, ptr %10, i64 -1
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.preheader.new
  %11 = phi ptr [ %.pre, %for.body.preheader.new ], [ %10, %for.body ]
  %indvars.iv = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next.1, %for.body ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.1, %for.body ]
  %add.ptr = getelementptr inbounds %struct._Bchain, ptr %11, i64 %indvars.iv
  %add.ptr21 = getelementptr inbounds %struct._Bchain, ptr %add.ptr, i64 1
  store ptr %add.ptr21, ptr %add.ptr, align 8, !tbaa !83
  %gep = getelementptr %struct._Bchain, ptr %invariant.gep, i64 %indvars.iv
  %prev = getelementptr inbounds %struct._Bchain, ptr %9, i64 %indvars.iv, i32 1
  store ptr %gep, ptr %prev, align 8, !tbaa !89
  %pos = getelementptr inbounds %struct._Bchain, ptr %9, i64 %indvars.iv, i32 2
  %12 = trunc i64 %indvars.iv to i32
  store i32 %12, ptr %pos, align 8, !tbaa !90
  %indvars.iv.next = or i64 %indvars.iv, 1
  %add.ptr.1 = getelementptr inbounds %struct._Bchain, ptr %9, i64 %indvars.iv.next
  %add.ptr21.1 = getelementptr inbounds %struct._Bchain, ptr %add.ptr.1, i64 1
  store ptr %add.ptr21.1, ptr %add.ptr.1, align 8, !tbaa !83
  %gep650 = getelementptr %struct._Bchain, ptr %invariant.gep649, i64 %indvars.iv.next
  %prev.1 = getelementptr inbounds %struct._Bchain, ptr %10, i64 %indvars.iv.next, i32 1
  store ptr %gep650, ptr %prev.1, align 8, !tbaa !89
  %pos.1 = getelementptr inbounds %struct._Bchain, ptr %10, i64 %indvars.iv.next, i32 2
  %13 = trunc i64 %indvars.iv.next to i32
  store i32 %13, ptr %pos.1, align 8, !tbaa !90
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.end.unr-lcssa, label %for.body, !llvm.loop !131

for.end.unr-lcssa:                                ; preds = %for.body, %for.body.preheader
  %.lcssa643.ph = phi ptr [ undef, %for.body.preheader ], [ %10, %for.body ]
  %.unr = phi ptr [ %.pre, %for.body.preheader ], [ %10, %for.body ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next.1, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil

for.body.epil:                                    ; preds = %for.end.unr-lcssa
  %add.ptr.epil = getelementptr inbounds %struct._Bchain, ptr %.unr, i64 %indvars.iv.unr
  %add.ptr21.epil = getelementptr inbounds %struct._Bchain, ptr %add.ptr.epil, i64 1
  store ptr %add.ptr21.epil, ptr %add.ptr.epil, align 8, !tbaa !83
  %14 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.ac, align 8, !tbaa !13
  %add.ptr24.epil = getelementptr inbounds %struct._Bchain, ptr %14, i64 %indvars.iv.unr
  %add.ptr25.epil = getelementptr inbounds %struct._Bchain, ptr %add.ptr24.epil, i64 -1
  %prev.epil = getelementptr inbounds %struct._Bchain, ptr %14, i64 %indvars.iv.unr, i32 1
  store ptr %add.ptr25.epil, ptr %prev.epil, align 8, !tbaa !89
  %pos.epil = getelementptr inbounds %struct._Bchain, ptr %14, i64 %indvars.iv.unr, i32 2
  %15 = trunc i64 %indvars.iv.unr to i32
  store i32 %15, ptr %pos.epil, align 8, !tbaa !90
  br label %for.end

for.end:                                          ; preds = %for.end.unr-lcssa, %for.body.epil
  %.lcssa643 = phi ptr [ %.lcssa643.ph, %for.end.unr-lcssa ], [ %14, %for.body.epil ]
  %sub = add nsw i32 %nseq, -1
  %idxprom30 = sext i32 %sub to i64
  %arrayidx31 = getelementptr inbounds %struct._Bchain, ptr %.lcssa643, i64 %idxprom30
  store ptr null, ptr %arrayidx31, align 8, !tbaa !83
  br i1 %cmp19556, label %for.body36.lr.ph, label %for.end63.thread

for.body36.lr.ph:                                 ; preds = %for.end
  %16 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.ac, align 8, !tbaa !13
  %tobool.not51.i = icmp eq ptr %16, null
  %wide.trip.count601 = zext i32 %nseq to i64
  br label %for.body36

for.cond44.preheader:                             ; preds = %setnearest.exit
  br i1 %cmp19556, label %for.body56.lr.ph, label %for.end63.thread

for.body36:                                       ; preds = %for.body36.lr.ph, %setnearest.exit
  %indvars.iv598 = phi i64 [ 0, %for.body36.lr.ph ], [ %indvars.iv.next599, %setnearest.exit ]
  %add.ptr38 = getelementptr inbounds float, ptr %mindisfrom.0, i64 %indvars.iv598
  %add.ptr40 = getelementptr inbounds i32, ptr %nearest.0, i64 %indvars.iv598
  store float 0x408F3F3340000000, ptr %add.ptr38, align 4, !tbaa !17
  store i32 -1, ptr %add.ptr40, align 4, !tbaa !10
  %add.ptr.i = getelementptr inbounds %struct._Bchain, ptr %16, i64 %indvars.iv598
  %acptj.048.i = load ptr, ptr %add.ptr.i, align 8, !tbaa !83
  %cmp.not49.i = icmp eq ptr %acptj.048.i, null
  br i1 %cmp.not49.i, label %land.rhs.preheader.i, label %for.body.lr.ph.i

for.body.lr.ph.i:                                 ; preds = %for.body36
  %arrayidx.i = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv598
  %17 = load ptr, ptr %arrayidx.i, align 8, !tbaa !13
  %18 = trunc i64 %indvars.iv598 to i32
  br label %for.body.i

for.cond6.preheader.i:                            ; preds = %for.inc.i
  br i1 %tobool.not51.i, label %setnearest.exit, label %land.rhs.preheader.i

land.rhs.preheader.i:                             ; preds = %for.cond6.preheader.i, %for.body36
  %19 = phi float [ %24, %for.cond6.preheader.i ], [ 0x408F3F3340000000, %for.body36 ]
  %20 = trunc i64 %indvars.iv598 to i32
  br label %land.rhs.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %21 = phi float [ 0x408F3F3340000000, %for.body.lr.ph.i ], [ %24, %for.inc.i ]
  %acptj.050.i = phi ptr [ %acptj.048.i, %for.body.lr.ph.i ], [ %acptj.0.i, %for.inc.i ]
  %pos1.i = getelementptr inbounds %struct._Bchain, ptr %acptj.050.i, i64 0, i32 2
  %22 = load i32, ptr %pos1.i, align 8, !tbaa !90
  %sub.i = sub nsw i32 %22, %18
  %idxprom2.i = sext i32 %sub.i to i64
  %arrayidx3.i = getelementptr inbounds float, ptr %17, i64 %idxprom2.i
  %23 = load float, ptr %arrayidx3.i, align 4, !tbaa !17
  %cmp4.i = fcmp olt float %23, %21
  br i1 %cmp4.i, label %if.then.i, label %for.inc.i

if.then.i:                                        ; preds = %for.body.i
  store float %23, ptr %add.ptr38, align 4, !tbaa !17
  store i32 %22, ptr %add.ptr40, align 4, !tbaa !10
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.then.i, %for.body.i
  %24 = phi float [ %21, %for.body.i ], [ %23, %if.then.i ]
  %acptj.0.i = load ptr, ptr %acptj.050.i, align 8, !tbaa !83
  %cmp.not.i = icmp eq ptr %acptj.0.i, null
  br i1 %cmp.not.i, label %for.cond6.preheader.i, label %for.body.i, !llvm.loop !117

land.rhs.i:                                       ; preds = %for.inc19.i, %land.rhs.preheader.i
  %25 = phi float [ %30, %for.inc19.i ], [ %19, %land.rhs.preheader.i ]
  %acptj.152.i = phi ptr [ %31, %for.inc19.i ], [ %16, %land.rhs.preheader.i ]
  %pos7.i = getelementptr inbounds %struct._Bchain, ptr %acptj.152.i, i64 0, i32 2
  %26 = load i32, ptr %pos7.i, align 8, !tbaa !90
  %27 = zext i32 %26 to i64
  %cmp8.not.i = icmp eq i64 %indvars.iv598, %27
  br i1 %cmp8.not.i, label %setnearest.exit, label %for.body9.i

for.body9.i:                                      ; preds = %land.rhs.i
  %idxprom11.i = sext i32 %26 to i64
  %arrayidx12.i = getelementptr inbounds ptr, ptr %eff, i64 %idxprom11.i
  %28 = load ptr, ptr %arrayidx12.i, align 8, !tbaa !13
  %sub13.i = sub nsw i32 %20, %26
  %idxprom14.i = sext i32 %sub13.i to i64
  %arrayidx15.i = getelementptr inbounds float, ptr %28, i64 %idxprom14.i
  %29 = load float, ptr %arrayidx15.i, align 4, !tbaa !17
  %cmp16.i = fcmp olt float %29, %25
  br i1 %cmp16.i, label %if.then17.i, label %for.inc19.i

if.then17.i:                                      ; preds = %for.body9.i
  store float %29, ptr %add.ptr38, align 4, !tbaa !17
  store i32 %26, ptr %add.ptr40, align 4, !tbaa !10
  br label %for.inc19.i

for.inc19.i:                                      ; preds = %if.then17.i, %for.body9.i
  %30 = phi float [ %25, %for.body9.i ], [ %29, %if.then17.i ]
  %31 = load ptr, ptr %acptj.152.i, align 8, !tbaa !83
  %tobool.not.i = icmp eq ptr %31, null
  br i1 %tobool.not.i, label %setnearest.exit, label %land.rhs.i, !llvm.loop !118

setnearest.exit:                                  ; preds = %land.rhs.i, %for.inc19.i, %for.cond6.preheader.i
  %indvars.iv.next599 = add nuw nsw i64 %indvars.iv598, 1
  %exitcond602.not = icmp eq i64 %indvars.iv.next599, %wide.trip.count601
  br i1 %exitcond602.not, label %for.cond44.preheader, label %for.body36, !llvm.loop !132

for.end63.thread:                                 ; preds = %for.end, %for.end.thread, %for.cond44.preheader
  %32 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc633 = tail call i32 @fputc(i32 10, ptr %32)
  br label %for.end319

for.body56.lr.ph:                                 ; preds = %for.cond44.preheader
  %33 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.tmptmplen, align 8, !tbaa !13
  %34 = zext i32 %nseq to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %33, i8 0, i64 %35, i1 false), !tbaa !17
  %36 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.hist, align 8, !tbaa !13
  %37 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.nmemar, align 8, !tbaa !13
  %wide.trip.count609 = zext i32 %nseq to i64
  %min.iters.check = icmp ult i32 %nseq, 8
  %38 = ptrtoint ptr %37 to i64
  %39 = ptrtoint ptr %36 to i64
  %40 = sub i64 %38, %39
  %diff.check = icmp ult i64 %40, 32
  %or.cond641 = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond641, label %for.body56.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body56.lr.ph
  %n.vec = and i64 %wide.trip.count, 4294967288
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %41 = getelementptr inbounds i32, ptr %36, i64 %index
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %41, align 4, !tbaa !10
  %42 = getelementptr inbounds i32, ptr %41, i64 4
  store <4 x i32> <i32 -1, i32 -1, i32 -1, i32 -1>, ptr %42, align 4, !tbaa !10
  %43 = getelementptr inbounds i32, ptr %37, i64 %index
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, ptr %43, align 4, !tbaa !10
  %44 = getelementptr inbounds i32, ptr %43, i64 4
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, ptr %44, align 4, !tbaa !10
  %index.next = add nuw i64 %index, 8
  %45 = icmp eq i64 %index.next, %n.vec
  br i1 %45, label %middle.block, label %vector.body, !llvm.loop !133

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count
  br i1 %cmp.n, label %for.end63, label %for.body56.preheader

for.body56.preheader:                             ; preds = %for.body56.lr.ph, %middle.block
  %indvars.iv606.ph = phi i64 [ 0, %for.body56.lr.ph ], [ %n.vec, %middle.block ]
  %46 = xor i64 %indvars.iv606.ph, -1
  %47 = add nsw i64 %46, %wide.trip.count
  %xtraiter645 = and i64 %wide.trip.count, 3
  %lcmp.mod646.not = icmp eq i64 %xtraiter645, 0
  br i1 %lcmp.mod646.not, label %for.body56.prol.loopexit, label %for.body56.prol

for.body56.prol:                                  ; preds = %for.body56.preheader, %for.body56.prol
  %indvars.iv606.prol = phi i64 [ %indvars.iv.next607.prol, %for.body56.prol ], [ %indvars.iv606.ph, %for.body56.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body56.prol ], [ 0, %for.body56.preheader ]
  %arrayidx58.prol = getelementptr inbounds i32, ptr %36, i64 %indvars.iv606.prol
  store i32 -1, ptr %arrayidx58.prol, align 4, !tbaa !10
  %arrayidx60.prol = getelementptr inbounds i32, ptr %37, i64 %indvars.iv606.prol
  store i32 1, ptr %arrayidx60.prol, align 4, !tbaa !10
  %indvars.iv.next607.prol = add nuw nsw i64 %indvars.iv606.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter645
  br i1 %prol.iter.cmp.not, label %for.body56.prol.loopexit, label %for.body56.prol, !llvm.loop !134

for.body56.prol.loopexit:                         ; preds = %for.body56.prol, %for.body56.preheader
  %indvars.iv606.unr = phi i64 [ %indvars.iv606.ph, %for.body56.preheader ], [ %indvars.iv.next607.prol, %for.body56.prol ]
  %48 = icmp ult i64 %47, 3
  br i1 %48, label %for.end63, label %for.body56

for.body56:                                       ; preds = %for.body56.prol.loopexit, %for.body56
  %indvars.iv606 = phi i64 [ %indvars.iv.next607.3, %for.body56 ], [ %indvars.iv606.unr, %for.body56.prol.loopexit ]
  %arrayidx58 = getelementptr inbounds i32, ptr %36, i64 %indvars.iv606
  store i32 -1, ptr %arrayidx58, align 4, !tbaa !10
  %arrayidx60 = getelementptr inbounds i32, ptr %37, i64 %indvars.iv606
  store i32 1, ptr %arrayidx60, align 4, !tbaa !10
  %indvars.iv.next607 = add nuw nsw i64 %indvars.iv606, 1
  %arrayidx58.1 = getelementptr inbounds i32, ptr %36, i64 %indvars.iv.next607
  store i32 -1, ptr %arrayidx58.1, align 4, !tbaa !10
  %arrayidx60.1 = getelementptr inbounds i32, ptr %37, i64 %indvars.iv.next607
  store i32 1, ptr %arrayidx60.1, align 4, !tbaa !10
  %indvars.iv.next607.1 = add nuw nsw i64 %indvars.iv606, 2
  %arrayidx58.2 = getelementptr inbounds i32, ptr %36, i64 %indvars.iv.next607.1
  store i32 -1, ptr %arrayidx58.2, align 4, !tbaa !10
  %arrayidx60.2 = getelementptr inbounds i32, ptr %37, i64 %indvars.iv.next607.1
  store i32 1, ptr %arrayidx60.2, align 4, !tbaa !10
  %indvars.iv.next607.2 = add nuw nsw i64 %indvars.iv606, 3
  %arrayidx58.3 = getelementptr inbounds i32, ptr %36, i64 %indvars.iv.next607.2
  store i32 -1, ptr %arrayidx58.3, align 4, !tbaa !10
  %arrayidx60.3 = getelementptr inbounds i32, ptr %37, i64 %indvars.iv.next607.2
  store i32 1, ptr %arrayidx60.3, align 4, !tbaa !10
  %indvars.iv.next607.3 = add nuw nsw i64 %indvars.iv606, 4
  %exitcond610.not.3 = icmp eq i64 %indvars.iv.next607.3, %wide.trip.count609
  br i1 %exitcond610.not.3, label %for.end63, label %for.body56, !llvm.loop !135

for.end63:                                        ; preds = %for.body56.prol.loopexit, %for.body56, %middle.block
  %49 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc = tail call i32 @fputc(i32 10, ptr %49)
  %cmp67593 = icmp sgt i32 %nseq, 1
  br i1 %cmp67593, label %for.body69.preheader, label %for.end319

for.body69.preheader:                             ; preds = %for.end63
  %wide.trip.count614 = zext i32 %sub to i64
  br label %for.body69

for.body69:                                       ; preds = %for.body69.preheader, %for.inc317
  %indvars.iv611 = phi i64 [ 0, %for.body69.preheader ], [ %indvars.iv.next612, %for.inc317 ]
  %im.0594 = phi i32 [ -1, %for.body69.preheader ], [ %spec.select, %for.inc317 ]
  %50 = trunc i64 %indvars.iv611 to i32
  %rem = urem i32 %50, 10
  %cmp70 = icmp eq i32 %rem, 0
  br i1 %cmp70, label %if.then72, label %if.end74

if.then72:                                        ; preds = %for.body69
  %51 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call73 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %51, ptr noundef nonnull @.str.13, i32 noundef %50, i32 noundef %nseq) #32
  br label %if.end74

if.end74:                                         ; preds = %if.then72, %for.body69
  %acpti.0565 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.ac, align 8, !tbaa !13
  %52 = load ptr, ptr %acpti.0565, align 8, !tbaa !13
  %cmp77.not566 = icmp eq ptr %52, null
  br i1 %cmp77.not566, label %for.end91, label %for.body79

for.body79:                                       ; preds = %if.end74, %for.body79
  %acpti.0 = phi ptr [ %55, %for.body79 ], [ %52, %if.end74 ]
  %acpti.0569 = phi ptr [ %acpti.0, %for.body79 ], [ %acpti.0565, %if.end74 ]
  %minscore.0568 = phi float [ %minscore.1, %for.body79 ], [ 0x408F3F3340000000, %if.end74 ]
  %im.1567 = phi i32 [ %im.2, %for.body79 ], [ %im.0594, %if.end74 ]
  %pos80 = getelementptr inbounds %struct._Bchain, ptr %acpti.0569, i64 0, i32 2
  %53 = load i32, ptr %pos80, align 8, !tbaa !90
  %idxprom81 = sext i32 %53 to i64
  %arrayidx82 = getelementptr inbounds float, ptr %mindisfrom.0, i64 %idxprom81
  %54 = load float, ptr %arrayidx82, align 4, !tbaa !17
  %cmp83 = fcmp olt float %54, %minscore.0568
  %im.2 = select i1 %cmp83, i32 %53, i32 %im.1567
  %minscore.1 = select i1 %cmp83, float %54, float %minscore.0568
  %55 = load ptr, ptr %acpti.0, align 8, !tbaa !13
  %cmp77.not = icmp eq ptr %55, null
  br i1 %cmp77.not, label %for.end91, label %for.body79, !llvm.loop !136

for.end91:                                        ; preds = %for.body79, %if.end74
  %im.1.lcssa = phi i32 [ %im.0594, %if.end74 ], [ %im.2, %for.body79 ]
  %minscore.0.lcssa = phi float [ 0x408F3F3340000000, %if.end74 ], [ %minscore.1, %for.body79 ]
  %idxprom92 = sext i32 %im.1.lcssa to i64
  %arrayidx93 = getelementptr inbounds i32, ptr %nearest.0, i64 %idxprom92
  %56 = load i32, ptr %arrayidx93, align 4, !tbaa !10
  %spec.select = tail call i32 @llvm.smin.i32(i32 %56, i32 %im.1.lcssa)
  %spec.select516 = tail call i32 @llvm.smax.i32(i32 %56, i32 %im.1.lcssa)
  %57 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.hist, align 8, !tbaa !13
  %idxprom98 = sext i32 %spec.select to i64
  %arrayidx99 = getelementptr inbounds i32, ptr %57, i64 %idxprom98
  %58 = load i32, ptr %arrayidx99, align 4, !tbaa !10
  %59 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.nmemar, align 8, !tbaa !13
  %arrayidx101 = getelementptr inbounds i32, ptr %59, i64 %idxprom98
  %60 = load i32, ptr %arrayidx101, align 4, !tbaa !10
  %arrayidx103 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv611
  %61 = load ptr, ptr %arrayidx103, align 8, !tbaa !13
  %62 = load ptr, ptr %61, align 8, !tbaa !13
  %add = add nsw i32 %60, 1
  %conv105 = sext i32 %add to i64
  %mul106 = shl nsw i64 %conv105, 2
  %call107 = tail call ptr @realloc(ptr noundef %62, i64 noundef %mul106) #37
  %63 = load ptr, ptr %arrayidx103, align 8, !tbaa !13
  store ptr %call107, ptr %63, align 8, !tbaa !13
  %cmp111 = icmp eq i32 %58, -1
  br i1 %cmp111, label %if.then113, label %if.else114

if.then113:                                       ; preds = %for.end91
  %incdec.ptr = getelementptr inbounds i32, ptr %call107, i64 1
  store i32 %spec.select, ptr %call107, align 4, !tbaa !10
  br label %if.end140

if.else114:                                       ; preds = %for.end91
  %idxprom115 = sext i32 %58 to i64
  %arrayidx116 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom115
  %64 = load ptr, ptr %arrayidx116, align 8, !tbaa !13
  %65 = load ptr, ptr %64, align 8, !tbaa !13
  %arrayidx120 = getelementptr inbounds ptr, ptr %64, i64 1
  %66 = load ptr, ptr %arrayidx120, align 8, !tbaa !13
  %67 = load i32, ptr %65, align 4, !tbaa !10
  %68 = load i32, ptr %66, align 4, !tbaa !10
  %cmp121 = icmp sgt i32 %67, %68
  %69 = tail call i32 @llvm.smin.i32(i32 %67, i32 %68)
  %70 = tail call i32 @llvm.smax.i32(i32 %67, i32 %68)
  %.517 = select i1 %cmp121, ptr %65, ptr %66
  %cmp127.not571 = icmp eq i32 %69, -1
  br i1 %cmp127.not571, label %for.cond133.preheader, label %for.body129.preheader

for.body129.preheader:                            ; preds = %if.else114
  %. = select i1 %cmp121, ptr %66, ptr %65
  br label %for.body129

for.cond133.preheader.loopexit:                   ; preds = %for.body129
  %.pre618 = load i32, ptr %.517, align 4, !tbaa !10
  br label %for.cond133.preheader

for.cond133.preheader:                            ; preds = %for.cond133.preheader.loopexit, %if.else114
  %71 = phi i32 [ %70, %if.else114 ], [ %.pre618, %for.cond133.preheader.loopexit ]
  %intpt.0.lcssa = phi ptr [ %call107, %if.else114 ], [ %incdec.ptr131, %for.cond133.preheader.loopexit ]
  %cmp134.not575 = icmp eq i32 %71, -1
  br i1 %cmp134.not575, label %if.end140, label %for.body136

for.body129:                                      ; preds = %for.body129.preheader, %for.body129
  %72 = phi i32 [ %73, %for.body129 ], [ %69, %for.body129.preheader ]
  %intpt.0573 = phi ptr [ %incdec.ptr131, %for.body129 ], [ %call107, %for.body129.preheader ]
  %intpt2.0572 = phi ptr [ %incdec.ptr130, %for.body129 ], [ %., %for.body129.preheader ]
  %incdec.ptr130 = getelementptr inbounds i32, ptr %intpt2.0572, i64 1
  %incdec.ptr131 = getelementptr inbounds i32, ptr %intpt.0573, i64 1
  store i32 %72, ptr %intpt.0573, align 4, !tbaa !10
  %73 = load i32, ptr %incdec.ptr130, align 4, !tbaa !10
  %cmp127.not = icmp eq i32 %73, -1
  br i1 %cmp127.not, label %for.cond133.preheader.loopexit, label %for.body129, !llvm.loop !137

for.body136:                                      ; preds = %for.cond133.preheader, %for.body136
  %74 = phi i32 [ %75, %for.body136 ], [ %71, %for.cond133.preheader ]
  %intpt.1577 = phi ptr [ %incdec.ptr138, %for.body136 ], [ %intpt.0.lcssa, %for.cond133.preheader ]
  %intpt2.1576 = phi ptr [ %incdec.ptr137, %for.body136 ], [ %.517, %for.cond133.preheader ]
  %incdec.ptr137 = getelementptr inbounds i32, ptr %intpt2.1576, i64 1
  %incdec.ptr138 = getelementptr inbounds i32, ptr %intpt.1577, i64 1
  store i32 %74, ptr %intpt.1577, align 4, !tbaa !10
  %75 = load i32, ptr %incdec.ptr137, align 4, !tbaa !10
  %cmp134.not = icmp eq i32 %75, -1
  br i1 %cmp134.not, label %if.end140, label %for.body136, !llvm.loop !138

if.end140:                                        ; preds = %for.body136, %for.cond133.preheader, %if.then113
  %intpt.1.lcssa.sink = phi ptr [ %incdec.ptr, %if.then113 ], [ %intpt.0.lcssa, %for.cond133.preheader ], [ %incdec.ptr138, %for.body136 ]
  store i32 -1, ptr %intpt.1.lcssa.sink, align 4, !tbaa !10
  %idxprom141 = sext i32 %spec.select516 to i64
  %arrayidx142 = getelementptr inbounds i32, ptr %57, i64 %idxprom141
  %76 = load i32, ptr %arrayidx142, align 4, !tbaa !10
  %arrayidx144 = getelementptr inbounds i32, ptr %59, i64 %idxprom141
  %77 = load i32, ptr %arrayidx144, align 4, !tbaa !10
  %78 = load ptr, ptr %arrayidx103, align 8, !tbaa !13
  %arrayidx147 = getelementptr inbounds ptr, ptr %78, i64 1
  %79 = load ptr, ptr %arrayidx147, align 8, !tbaa !13
  %add148 = add nsw i32 %77, 1
  %conv149 = sext i32 %add148 to i64
  %mul150 = shl nsw i64 %conv149, 2
  %call151 = tail call ptr @realloc(ptr noundef %79, i64 noundef %mul150) #37
  %80 = load ptr, ptr %arrayidx103, align 8, !tbaa !13
  %arrayidx154 = getelementptr inbounds ptr, ptr %80, i64 1
  store ptr %call151, ptr %arrayidx154, align 8, !tbaa !13
  %tobool155.not = icmp eq ptr %call151, null
  br i1 %tobool155.not, label %if.then156, label %if.end158

if.then156:                                       ; preds = %if.end140
  %81 = load ptr, ptr @stderr, align 8, !tbaa !13
  %82 = tail call i64 @fwrite(ptr nonnull @.str.15, i64 24, i64 1, ptr %81) #32
  tail call void @exit(i32 noundef 1) #33
  unreachable

if.end158:                                        ; preds = %if.end140
  %cmp159 = icmp eq i32 %76, -1
  br i1 %cmp159, label %if.then161, label %if.else163

if.then161:                                       ; preds = %if.end158
  %incdec.ptr162 = getelementptr inbounds i32, ptr %call151, i64 1
  store i32 %spec.select516, ptr %call151, align 4, !tbaa !10
  br label %if.end189

if.else163:                                       ; preds = %if.end158
  %idxprom164 = sext i32 %76 to i64
  %arrayidx165 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom164
  %83 = load ptr, ptr %arrayidx165, align 8, !tbaa !13
  %84 = load ptr, ptr %83, align 8, !tbaa !13
  %arrayidx169 = getelementptr inbounds ptr, ptr %83, i64 1
  %85 = load ptr, ptr %arrayidx169, align 8, !tbaa !13
  %86 = load i32, ptr %84, align 4, !tbaa !10
  %87 = load i32, ptr %85, align 4, !tbaa !10
  %cmp170 = icmp sgt i32 %86, %87
  %88 = tail call i32 @llvm.smin.i32(i32 %86, i32 %87)
  %89 = tail call i32 @llvm.smax.i32(i32 %86, i32 %87)
  %.519 = select i1 %cmp170, ptr %84, ptr %85
  %cmp176.not579 = icmp eq i32 %88, -1
  br i1 %cmp176.not579, label %for.cond182.preheader, label %for.body178.preheader

for.body178.preheader:                            ; preds = %if.else163
  %.518 = select i1 %cmp170, ptr %85, ptr %84
  br label %for.body178

for.cond182.preheader.loopexit:                   ; preds = %for.body178
  %.pre619 = load i32, ptr %.519, align 4, !tbaa !10
  br label %for.cond182.preheader

for.cond182.preheader:                            ; preds = %for.cond182.preheader.loopexit, %if.else163
  %90 = phi i32 [ %89, %if.else163 ], [ %.pre619, %for.cond182.preheader.loopexit ]
  %intpt.2.lcssa = phi ptr [ %call151, %if.else163 ], [ %incdec.ptr180, %for.cond182.preheader.loopexit ]
  %cmp183.not583 = icmp eq i32 %90, -1
  br i1 %cmp183.not583, label %if.end189, label %for.body185

for.body178:                                      ; preds = %for.body178.preheader, %for.body178
  %91 = phi i32 [ %92, %for.body178 ], [ %88, %for.body178.preheader ]
  %intpt.2581 = phi ptr [ %incdec.ptr180, %for.body178 ], [ %call151, %for.body178.preheader ]
  %intpt2.2580 = phi ptr [ %incdec.ptr179, %for.body178 ], [ %.518, %for.body178.preheader ]
  %incdec.ptr179 = getelementptr inbounds i32, ptr %intpt2.2580, i64 1
  %incdec.ptr180 = getelementptr inbounds i32, ptr %intpt.2581, i64 1
  store i32 %91, ptr %intpt.2581, align 4, !tbaa !10
  %92 = load i32, ptr %incdec.ptr179, align 4, !tbaa !10
  %cmp176.not = icmp eq i32 %92, -1
  br i1 %cmp176.not, label %for.cond182.preheader.loopexit, label %for.body178, !llvm.loop !139

for.body185:                                      ; preds = %for.cond182.preheader, %for.body185
  %93 = phi i32 [ %94, %for.body185 ], [ %90, %for.cond182.preheader ]
  %intpt.3585 = phi ptr [ %incdec.ptr187, %for.body185 ], [ %intpt.2.lcssa, %for.cond182.preheader ]
  %intpt2.3584 = phi ptr [ %incdec.ptr186, %for.body185 ], [ %.519, %for.cond182.preheader ]
  %incdec.ptr186 = getelementptr inbounds i32, ptr %intpt2.3584, i64 1
  %incdec.ptr187 = getelementptr inbounds i32, ptr %intpt.3585, i64 1
  store i32 %93, ptr %intpt.3585, align 4, !tbaa !10
  %94 = load i32, ptr %incdec.ptr186, align 4, !tbaa !10
  %cmp183.not = icmp eq i32 %94, -1
  br i1 %cmp183.not, label %if.end189, label %for.body185, !llvm.loop !140

if.end189:                                        ; preds = %for.body185, %for.cond182.preheader, %if.then161
  %intpt.3.lcssa.sink = phi ptr [ %incdec.ptr162, %if.then161 ], [ %intpt.2.lcssa, %for.cond182.preheader ], [ %incdec.ptr187, %for.body185 ]
  store i32 -1, ptr %intpt.3.lcssa.sink, align 4, !tbaa !10
  %conv192 = fmul float %minscore.0.lcssa, 5.000000e-01
  %95 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.tmptmplen, align 8, !tbaa !13
  %arrayidx194 = getelementptr inbounds float, ptr %95, i64 %idxprom98
  %96 = load float, ptr %arrayidx194, align 4, !tbaa !17
  %sub195 = fsub float %conv192, %96
  %arrayidx197 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv611
  %97 = load ptr, ptr %arrayidx197, align 8, !tbaa !13
  store float %sub195, ptr %97, align 4, !tbaa !17
  %arrayidx200 = getelementptr inbounds float, ptr %95, i64 %idxprom141
  %98 = load float, ptr %arrayidx200, align 4, !tbaa !17
  %sub201 = fsub float %conv192, %98
  %arrayidx204 = getelementptr inbounds float, ptr %97, i64 1
  store float %sub201, ptr %arrayidx204, align 4, !tbaa !17
  store float %conv192, ptr %arrayidx194, align 4, !tbaa !17
  store i32 %50, ptr %arrayidx99, align 4, !tbaa !10
  %add209 = add nsw i32 %77, %60
  store i32 %add209, ptr %arrayidx101, align 4, !tbaa !10
  %arrayidx213 = getelementptr inbounds float, ptr %mindisfrom.0, i64 %idxprom98
  store float 0x408F3F3340000000, ptr %arrayidx213, align 4, !tbaa !17
  %acpti.1587 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.ac, align 8, !tbaa !13, !nonnull !141
  %arrayidx269 = getelementptr inbounds i32, ptr %nearest.0, i64 %idxprom98
  br label %for.body217

for.body217:                                      ; preds = %if.end189, %for.inc280
  %acpti.1589 = phi ptr [ %acpti.1587, %if.end189 ], [ %acpti.1, %for.inc280 ]
  %pos218 = getelementptr inbounds %struct._Bchain, ptr %acpti.1589, i64 0, i32 2
  %99 = load i32, ptr %pos218, align 8, !tbaa !90
  %cmp219.not = icmp eq i32 %99, %spec.select
  %cmp221.not = icmp eq i32 %99, %spec.select516
  %or.cond = select i1 %cmp219.not, i1 true, i1 %cmp221.not
  br i1 %or.cond, label %for.inc280, label %if.then223

if.then223:                                       ; preds = %for.body217
  %cmp224 = icmp slt i32 %99, %spec.select
  br i1 %cmp224, label %if.then223.if.end233_crit_edge, label %if.else227

if.then223.if.end233_crit_edge:                   ; preds = %if.then223
  %.pre621 = sext i32 %99 to i64
  br label %if.end233

if.else227:                                       ; preds = %if.then223
  %spec.select516. = tail call i32 @llvm.smax.i32(i32 %99, i32 %spec.select516)
  %.spec.select516 = tail call i32 @llvm.smin.i32(i32 %99, i32 %spec.select516)
  %.pre622 = sext i32 %.spec.select516 to i64
  %.pre623 = sext i32 %99 to i64
  br label %if.end233

if.end233:                                        ; preds = %if.then223.if.end233_crit_edge, %if.else227
  %idxprom251.pre-phi = phi i64 [ %.pre621, %if.then223.if.end233_crit_edge ], [ %.pre623, %if.else227 ]
  %idxprom239.pre-phi = phi i64 [ %.pre621, %if.then223.if.end233_crit_edge ], [ %.pre622, %if.else227 ]
  %idxprom234.pre-phi = phi i64 [ %.pre621, %if.then223.if.end233_crit_edge ], [ %idxprom98, %if.else227 ]
  %maxijm.0 = phi i32 [ %spec.select516, %if.then223.if.end233_crit_edge ], [ %spec.select516., %if.else227 ]
  %minijm.0 = phi i32 [ %99, %if.then223.if.end233_crit_edge ], [ %.spec.select516, %if.else227 ]
  %maxiim.0 = phi i32 [ %spec.select, %if.then223.if.end233_crit_edge ], [ %99, %if.else227 ]
  %miniim.0 = phi i32 [ %99, %if.then223.if.end233_crit_edge ], [ %spec.select, %if.else227 ]
  %arrayidx235 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom234.pre-phi
  %100 = load ptr, ptr %arrayidx235, align 8, !tbaa !13
  %sub236 = sub nsw i32 %maxiim.0, %miniim.0
  %idxprom237 = sext i32 %sub236 to i64
  %arrayidx238 = getelementptr inbounds float, ptr %100, i64 %idxprom237
  %101 = load float, ptr %arrayidx238, align 4, !tbaa !17
  %arrayidx240 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom239.pre-phi
  %102 = load ptr, ptr %arrayidx240, align 8, !tbaa !13
  %sub241 = sub nsw i32 %maxijm.0, %minijm.0
  %idxprom242 = sext i32 %sub241 to i64
  %arrayidx243 = getelementptr inbounds float, ptr %102, i64 %idxprom242
  %103 = load float, ptr %arrayidx243, align 4, !tbaa !17
  %call245 = tail call float %clusterfuncpt.sroa.0.0(float noundef %101, float noundef %103) #34, !callees !111
  %104 = load ptr, ptr %arrayidx235, align 8, !tbaa !13
  %arrayidx250 = getelementptr inbounds float, ptr %104, i64 %idxprom237
  store float %call245, ptr %arrayidx250, align 4, !tbaa !17
  %arrayidx252 = getelementptr inbounds float, ptr %mindisfrom.0, i64 %idxprom251.pre-phi
  %105 = load float, ptr %arrayidx252, align 4, !tbaa !17
  %cmp253 = fcmp olt float %call245, %105
  br i1 %cmp253, label %if.then255, label %if.end260

if.then255:                                       ; preds = %if.end233
  store float %call245, ptr %arrayidx252, align 4, !tbaa !17
  %arrayidx259 = getelementptr inbounds i32, ptr %nearest.0, i64 %idxprom251.pre-phi
  store i32 %spec.select, ptr %arrayidx259, align 4, !tbaa !10
  br label %if.end260

if.end260:                                        ; preds = %if.then255, %if.end233
  %106 = load float, ptr %arrayidx213, align 4, !tbaa !17
  %cmp263 = fcmp olt float %call245, %106
  br i1 %cmp263, label %if.then265, label %if.end270

if.then265:                                       ; preds = %if.end260
  store float %call245, ptr %arrayidx213, align 4, !tbaa !17
  store i32 %99, ptr %arrayidx269, align 4, !tbaa !10
  br label %if.end270

if.end270:                                        ; preds = %if.then265, %if.end260
  %arrayidx272 = getelementptr inbounds i32, ptr %nearest.0, i64 %idxprom251.pre-phi
  %107 = load i32, ptr %arrayidx272, align 4, !tbaa !10
  %cmp273 = icmp eq i32 %107, %spec.select516
  br i1 %cmp273, label %if.then275, label %for.inc280

if.then275:                                       ; preds = %if.end270
  store i32 %spec.select, ptr %arrayidx272, align 4, !tbaa !10
  br label %for.inc280

for.inc280:                                       ; preds = %for.body217, %if.then275, %if.end270
  %acpti.1 = load ptr, ptr %acpti.1589, align 8, !tbaa !13
  %cmp215.not = icmp eq ptr %acpti.1, null
  br i1 %cmp215.not, label %for.end282.loopexit, label %for.body217, !llvm.loop !142

for.end282.loopexit:                              ; preds = %for.inc280
  %.pre620 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.ac, align 8, !tbaa !13
  %arrayidx284 = getelementptr inbounds %struct._Bchain, ptr %.pre620, i64 %idxprom141
  %prev285 = getelementptr inbounds %struct._Bchain, ptr %.pre620, i64 %idxprom141, i32 1
  %108 = load ptr, ptr %prev285, align 8, !tbaa !89
  %109 = load ptr, ptr %arrayidx284, align 8, !tbaa !83
  store ptr %109, ptr %108, align 8, !tbaa !83
  %cmp290.not = icmp eq ptr %109, null
  br i1 %cmp290.not, label %if.end294, label %if.then292

if.then292:                                       ; preds = %for.end282.loopexit
  %prev293 = getelementptr inbounds %struct._Bchain, ptr %109, i64 0, i32 1
  store ptr %108, ptr %prev293, align 8, !tbaa !89
  br label %if.end294

if.end294:                                        ; preds = %if.then292, %for.end282.loopexit
  %arrayidx296 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom141
  %110 = load ptr, ptr %arrayidx296, align 8, !tbaa !13
  tail call void @free(ptr noundef %110) #34
  store ptr null, ptr %arrayidx296, align 8, !tbaa !13
  %acpti.2590 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.ac, align 8
  %cmp300.not591 = icmp eq ptr %acpti.2590, null
  br i1 %cmp300.not591, label %for.inc317, label %for.body302

for.body302:                                      ; preds = %if.end294, %for.inc314
  %acpti.2592 = phi ptr [ %acpti.2, %for.inc314 ], [ %acpti.2590, %if.end294 ]
  %pos303 = getelementptr inbounds %struct._Bchain, ptr %acpti.2592, i64 0, i32 2
  %111 = load i32, ptr %pos303, align 8, !tbaa !90
  %idxprom304 = sext i32 %111 to i64
  %arrayidx305 = getelementptr inbounds i32, ptr %nearest.0, i64 %idxprom304
  %112 = load i32, ptr %arrayidx305, align 4, !tbaa !10
  %cmp306 = icmp eq i32 %112, %spec.select
  br i1 %cmp306, label %if.then308, label %for.inc314

if.then308:                                       ; preds = %for.body302
  %add.ptr310 = getelementptr inbounds float, ptr %mindisfrom.0, i64 %idxprom304
  store float 0x408F3F3340000000, ptr %add.ptr310, align 4, !tbaa !17
  store i32 -1, ptr %arrayidx305, align 4, !tbaa !10
  %add.ptr.i521 = getelementptr inbounds %struct._Bchain, ptr %acpti.2590, i64 %idxprom304
  %acptj.048.i522 = load ptr, ptr %add.ptr.i521, align 8, !tbaa !83
  %cmp.not49.i523 = icmp eq ptr %acptj.048.i522, null
  br i1 %cmp.not49.i523, label %land.rhs.i543.preheader, label %for.body.lr.ph.i525

for.body.lr.ph.i525:                              ; preds = %if.then308
  %arrayidx.i524 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom304
  %113 = load ptr, ptr %arrayidx.i524, align 8, !tbaa !13
  br label %for.body.i535

for.body.i535:                                    ; preds = %for.inc.i539, %for.body.lr.ph.i525
  %114 = phi float [ 0x408F3F3340000000, %for.body.lr.ph.i525 ], [ %117, %for.inc.i539 ]
  %acptj.050.i529 = phi ptr [ %acptj.048.i522, %for.body.lr.ph.i525 ], [ %acptj.0.i537, %for.inc.i539 ]
  %pos1.i530 = getelementptr inbounds %struct._Bchain, ptr %acptj.050.i529, i64 0, i32 2
  %115 = load i32, ptr %pos1.i530, align 8, !tbaa !90
  %sub.i531 = sub nsw i32 %115, %111
  %idxprom2.i532 = sext i32 %sub.i531 to i64
  %arrayidx3.i533 = getelementptr inbounds float, ptr %113, i64 %idxprom2.i532
  %116 = load float, ptr %arrayidx3.i533, align 4, !tbaa !17
  %cmp4.i534 = fcmp olt float %116, %114
  br i1 %cmp4.i534, label %if.then.i536, label %for.inc.i539

if.then.i536:                                     ; preds = %for.body.i535
  store float %116, ptr %add.ptr310, align 4, !tbaa !17
  store i32 %115, ptr %arrayidx305, align 4, !tbaa !10
  br label %for.inc.i539

for.inc.i539:                                     ; preds = %if.then.i536, %for.body.i535
  %117 = phi float [ %114, %for.body.i535 ], [ %116, %if.then.i536 ]
  %acptj.0.i537 = load ptr, ptr %acptj.050.i529, align 8, !tbaa !83
  %cmp.not.i538 = icmp eq ptr %acptj.0.i537, null
  br i1 %cmp.not.i538, label %land.rhs.i543.preheader, label %for.body.i535, !llvm.loop !117

land.rhs.i543.preheader:                          ; preds = %for.inc.i539, %if.then308
  %.ph = phi float [ 0x408F3F3340000000, %if.then308 ], [ %117, %for.inc.i539 ]
  br label %land.rhs.i543

land.rhs.i543:                                    ; preds = %land.rhs.i543.preheader, %for.inc19.i553
  %118 = phi float [ %122, %for.inc19.i553 ], [ %.ph, %land.rhs.i543.preheader ]
  %acptj.152.i540 = phi ptr [ %123, %for.inc19.i553 ], [ %acpti.2590, %land.rhs.i543.preheader ]
  %pos7.i541 = getelementptr inbounds %struct._Bchain, ptr %acptj.152.i540, i64 0, i32 2
  %119 = load i32, ptr %pos7.i541, align 8, !tbaa !90
  %cmp8.not.i542 = icmp eq i32 %111, %119
  br i1 %cmp8.not.i542, label %for.inc314, label %for.body9.i550

for.body9.i550:                                   ; preds = %land.rhs.i543
  %idxprom11.i544 = sext i32 %119 to i64
  %arrayidx12.i545 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom11.i544
  %120 = load ptr, ptr %arrayidx12.i545, align 8, !tbaa !13
  %sub13.i546 = sub nsw i32 %111, %119
  %idxprom14.i547 = sext i32 %sub13.i546 to i64
  %arrayidx15.i548 = getelementptr inbounds float, ptr %120, i64 %idxprom14.i547
  %121 = load float, ptr %arrayidx15.i548, align 4, !tbaa !17
  %cmp16.i549 = fcmp olt float %121, %118
  br i1 %cmp16.i549, label %if.then17.i551, label %for.inc19.i553

if.then17.i551:                                   ; preds = %for.body9.i550
  store float %121, ptr %add.ptr310, align 4, !tbaa !17
  store i32 %119, ptr %arrayidx305, align 4, !tbaa !10
  br label %for.inc19.i553

for.inc19.i553:                                   ; preds = %if.then17.i551, %for.body9.i550
  %122 = phi float [ %118, %for.body9.i550 ], [ %121, %if.then17.i551 ]
  %123 = load ptr, ptr %acptj.152.i540, align 8, !tbaa !83
  %tobool.not.i552 = icmp eq ptr %123, null
  br i1 %tobool.not.i552, label %for.inc314, label %land.rhs.i543, !llvm.loop !118

for.inc314:                                       ; preds = %for.inc19.i553, %land.rhs.i543, %for.body302
  %acpti.2 = load ptr, ptr %acpti.2592, align 8, !tbaa !13
  %cmp300.not = icmp eq ptr %acpti.2, null
  br i1 %cmp300.not, label %for.inc317, label %for.body302, !llvm.loop !143

for.inc317:                                       ; preds = %for.inc314, %if.end294
  %indvars.iv.next612 = add nuw nsw i64 %indvars.iv611, 1
  %exitcond615.not = icmp eq i64 %indvars.iv.next612, %wide.trip.count614
  br i1 %exitcond615.not, label %for.end319, label %for.body69, !llvm.loop !144

for.end319:                                       ; preds = %for.inc317, %for.end63.thread, %for.end63
  %124 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.tmptmplen, align 8, !tbaa !13
  tail call void @free(ptr noundef %124) #34
  store ptr null, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.tmptmplen, align 8, !tbaa !13
  %125 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.hist, align 8, !tbaa !13
  tail call void @free(ptr noundef %125) #34
  store ptr null, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.hist, align 8, !tbaa !13
  %126 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.ac, align 8, !tbaa !13
  tail call void @free(ptr noundef %126) #34
  store ptr null, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.ac, align 8, !tbaa !13
  %127 = load ptr, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.nmemar, align 8, !tbaa !13
  tail call void @free(ptr noundef %127) #34
  store ptr null, ptr @fixed_musclesupg_float_realloc_nobk_halfmtx.nmemar, align 8, !tbaa !13
  tail call void @free(ptr noundef %mindisfrom.0) #34
  tail call void @free(ptr noundef %nearest.0) #34
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @veryfastsupg_double_loadtop(i32 noundef %nseq, ptr nocapture noundef readonly %eff, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %len) local_unnamed_addr #12 {
entry:
  %node = alloca [2 x i32], align 4
  %dumfl = alloca [2 x float], align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %node) #34
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %dumfl) #34
  %call = tail call noalias ptr @fopen(ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.9)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr @stderr, align 8, !tbaa !13
  %1 = tail call i64 @fwrite(ptr nonnull @.str.10, i64 23, i64 1, ptr %0) #32
  tail call void @exit(i32 noundef 1) #33
  unreachable

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr @veryfastsupg_double_loadtop.hist, align 8, !tbaa !13
  %tobool2.not = icmp eq ptr %2, null
  br i1 %tobool2.not, label %if.then3, label %if.end13

if.then3:                                         ; preds = %if.end
  %3 = load i32, ptr @njob, align 4, !tbaa !10
  %mul = mul nsw i32 %3, 50
  %call4 = tail call ptr @AllocateCharVec(i32 noundef %mul) #34
  store ptr %call4, ptr @veryfastsupg_double_loadtop.treetmp, align 8, !tbaa !13
  %4 = load i32, ptr @njob, align 4, !tbaa !10
  %mul5 = mul nsw i32 %4, 50
  %call6 = tail call ptr @AllocateCharMtx(i32 noundef %4, i32 noundef %mul5) #34
  store ptr %call6, ptr @veryfastsupg_double_loadtop.tree, align 8, !tbaa !13
  %5 = load i32, ptr @njob, align 4, !tbaa !10
  %call7 = tail call ptr @AllocateIntVec(i32 noundef %5) #34
  store ptr %call7, ptr @veryfastsupg_double_loadtop.hist, align 8, !tbaa !13
  %6 = load i32, ptr @njob, align 4, !tbaa !10
  %conv = sext i32 %6 to i64
  %mul8 = shl nsw i64 %conv, 3
  %call9 = tail call noalias ptr @malloc(i64 noundef %mul8) #35
  store ptr %call9, ptr @veryfastsupg_double_loadtop.tmptmplen, align 8, !tbaa !13
  %call12 = tail call noalias ptr @malloc(i64 noundef %mul8) #35
  store ptr %call12, ptr @veryfastsupg_double_loadtop.ac, align 8, !tbaa !13
  br label %if.end13

if.end13:                                         ; preds = %if.then3, %if.end
  %cmp416 = icmp sgt i32 %nseq, 0
  br i1 %cmp416, label %for.body.preheader, label %for.end27.thread

for.body.preheader:                               ; preds = %if.end13
  %wide.trip.count = zext i32 %nseq to i64
  br label %for.body

for.cond16.preheader:                             ; preds = %for.body
  br i1 %cmp416, label %for.body19.lr.ph, label %for.end27.thread

for.end27.thread:                                 ; preds = %for.cond16.preheader, %if.end13
  %.pre = load ptr, ptr @veryfastsupg_double_loadtop.ac, align 8, !tbaa !13
  %sub28467 = add nsw i32 %nseq, -1
  %idxprom29468 = sext i32 %sub28467 to i64
  %arrayidx30469 = getelementptr inbounds %struct._Achain, ptr %.pre, i64 %idxprom29468
  store i32 -1, ptr %arrayidx30469, align 4, !tbaa !145
  br label %for.end49.thread

for.body19.lr.ph:                                 ; preds = %for.cond16.preheader
  %7 = load ptr, ptr @veryfastsupg_double_loadtop.ac, align 8, !tbaa !13
  %wide.trip.count448 = zext i32 %nseq to i64
  %min.iters.check = icmp ult i32 %nseq, 4
  br i1 %min.iters.check, label %for.body19.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body19.lr.ph
  %n.vec = and i64 %wide.trip.count, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.ind = phi <2 x i64> [ <i64 0, i64 1>, %vector.ph ], [ %vec.ind.next, %vector.body ]
  %vec.ind477 = phi <2 x i32> [ <i32 0, i32 1>, %vector.ph ], [ %vec.ind.next480, %vector.body ]
  %8 = or i64 %index, 2
  %9 = trunc <2 x i64> %vec.ind to <2 x i32>
  %10 = add <2 x i32> %9, <i32 1, i32 1>
  %11 = trunc <2 x i64> %vec.ind to <2 x i32>
  %12 = add <2 x i32> %11, <i32 3, i32 3>
  %13 = add <2 x i32> %vec.ind477, <i32 -1, i32 -1>
  %14 = add <2 x i32> %vec.ind477, <i32 1, i32 1>
  %15 = getelementptr inbounds %struct._Achain, ptr %7, i64 %index
  %16 = getelementptr inbounds %struct._Achain, ptr %7, i64 %8
  %interleaved.vec = shufflevector <2 x i32> %10, <2 x i32> %13, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x i32> %interleaved.vec, ptr %15, align 4, !tbaa !10
  %interleaved.vec481 = shufflevector <2 x i32> %12, <2 x i32> %14, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x i32> %interleaved.vec481, ptr %16, align 4, !tbaa !10
  %index.next = add nuw i64 %index, 4
  %vec.ind.next = add <2 x i64> %vec.ind, <i64 4, i64 4>
  %vec.ind.next480 = add <2 x i32> %vec.ind477, <i32 4, i32 4>
  %17 = icmp eq i64 %index.next, %n.vec
  br i1 %17, label %middle.block, label %vector.body, !llvm.loop !147

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count
  br i1 %cmp.n, label %for.end27, label %for.body19.preheader

for.body19.preheader:                             ; preds = %for.body19.lr.ph, %middle.block
  %indvars.iv444.ph = phi i64 [ 0, %for.body19.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body19

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %18 = load ptr, ptr @veryfastsupg_double_loadtop.tree, align 8, !tbaa !13
  %arrayidx = getelementptr inbounds ptr, ptr %18, i64 %indvars.iv
  %19 = load ptr, ptr %arrayidx, align 8, !tbaa !13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %20 = trunc i64 %indvars.iv.next to i32
  %call15 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %19, ptr noundef nonnull dereferenceable(1) @.str.21, i32 noundef %20) #34
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond16.preheader, label %for.body, !llvm.loop !148

for.body19:                                       ; preds = %for.body19.preheader, %for.body19
  %indvars.iv444 = phi i64 [ %indvars.iv.next445, %for.body19 ], [ %indvars.iv444.ph, %for.body19.preheader ]
  %indvars.iv.next445 = add nuw nsw i64 %indvars.iv444, 1
  %arrayidx22 = getelementptr inbounds %struct._Achain, ptr %7, i64 %indvars.iv444
  %21 = trunc i64 %indvars.iv.next445 to i32
  store i32 %21, ptr %arrayidx22, align 4, !tbaa !145
  %prev = getelementptr inbounds %struct._Achain, ptr %7, i64 %indvars.iv444, i32 1
  %22 = trunc i64 %indvars.iv444 to i32
  %23 = add i32 %22, -1
  store i32 %23, ptr %prev, align 4, !tbaa !149
  %exitcond449.not = icmp eq i64 %indvars.iv.next445, %wide.trip.count448
  br i1 %exitcond449.not, label %for.end27, label %for.body19, !llvm.loop !150

for.end27:                                        ; preds = %for.body19, %middle.block
  %sub28 = add nsw i32 %nseq, -1
  %idxprom29 = sext i32 %sub28 to i64
  %arrayidx30 = getelementptr inbounds %struct._Achain, ptr %7, i64 %idxprom29
  store i32 -1, ptr %arrayidx30, align 4, !tbaa !145
  br i1 %cmp416, label %for.end49, label %for.end49.thread

for.end49.thread:                                 ; preds = %for.end27, %for.end27.thread
  %24 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc474 = tail call i32 @fputc(i32 10, ptr %24)
  br label %for.end263

for.end49:                                        ; preds = %for.end27
  %25 = load ptr, ptr @veryfastsupg_double_loadtop.tmptmplen, align 8, !tbaa !13
  %26 = zext i32 %nseq to i64
  %27 = shl nuw nsw i64 %26, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %25, i8 0, i64 %27, i1 false), !tbaa !20
  %28 = load ptr, ptr @veryfastsupg_double_loadtop.hist, align 8, !tbaa !13
  %29 = zext i32 %nseq to i64
  %30 = shl nuw nsw i64 %29, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %28, i8 -1, i64 %30, i1 false), !tbaa !10
  %31 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc = tail call i32 @fputc(i32 10, ptr %31)
  %cmp53441.not = icmp eq i32 %nseq, 1
  br i1 %cmp53441.not, label %for.end263, label %for.body55.lr.ph

for.body55.lr.ph:                                 ; preds = %for.end49
  %arrayidx61 = getelementptr inbounds [2 x float], ptr %dumfl, i64 0, i64 1
  %add.ptr.i = getelementptr inbounds i32, ptr %node, i64 1
  %wide.trip.count459 = zext i32 %sub28 to i64
  br label %for.body55

for.body55:                                       ; preds = %for.body55.lr.ph, %if.end246
  %indvars.iv456 = phi i64 [ 0, %for.body55.lr.ph ], [ %indvars.iv.next457, %if.end246 ]
  %32 = trunc i64 %indvars.iv456 to i32
  %rem = urem i32 %32, 10
  %cmp56 = icmp eq i32 %rem, 0
  br i1 %cmp56, label %if.then58, label %if.end60

if.then58:                                        ; preds = %for.body55
  %33 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call59 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %33, ptr noundef nonnull @.str.24, i32 noundef %32, i32 noundef %nseq) #32
  br label %if.end60

if.end60:                                         ; preds = %if.then58, %for.body55
  store <2 x float> <float -1.000000e+00, float -1.000000e+00>, ptr %dumfl, align 8, !tbaa !17
  %call.i = call ptr @fgets(ptr noundef nonnull @loadtreeoneline.gett, i32 noundef 999, ptr noundef nonnull %call)
  %call2.i = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef nonnull @loadtreeoneline.gett, ptr noundef nonnull @.str.38, ptr noundef nonnull %node, ptr noundef nonnull %add.ptr.i, ptr noundef nonnull %dumfl, ptr noundef nonnull %arrayidx61) #34
  %34 = load i32, ptr %node, align 4, !tbaa !10
  %dec.i = add nsw i32 %34, -1
  store i32 %dec.i, ptr %node, align 4, !tbaa !10
  %35 = load i32, ptr %add.ptr.i, align 4, !tbaa !10
  %dec4.i = add nsw i32 %35, -1
  store i32 %dec4.i, ptr %add.ptr.i, align 4, !tbaa !10
  %cmp.not.i = icmp slt i32 %34, %35
  br i1 %cmp.not.i, label %loadtreeoneline.exit, label %if.then.i

if.then.i:                                        ; preds = %if.end60
  %36 = load ptr, ptr @stderr, align 8, !tbaa !13
  %37 = call i64 @fwrite(ptr nonnull @.str.39, i64 21, i64 1, ptr %36) #32
  call void @exit(i32 noundef 1) #33
  unreachable

loadtreeoneline.exit:                             ; preds = %if.end60
  %idxprom66 = sext i32 %dec.i to i64
  %arrayidx67 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom66
  %38 = load ptr, ptr %arrayidx67, align 8, !tbaa !13
  %idxprom68 = sext i32 %dec4.i to i64
  %arrayidx69 = getelementptr inbounds double, ptr %38, i64 %idxprom68
  %39 = load double, ptr %arrayidx69, align 8, !tbaa !20
  %40 = load float, ptr %dumfl, align 8, !tbaa !17
  %cmp72 = fcmp une float %40, -1.000000e+00
  %41 = load float, ptr %arrayidx61, align 4
  %cmp76 = fcmp une float %41, -1.000000e+00
  %or.cond = select i1 %cmp72, i1 true, i1 %cmp76
  br i1 %or.cond, label %if.then78, label %if.end80

if.then78:                                        ; preds = %loadtreeoneline.exit
  %42 = load ptr, ptr @stderr, align 8, !tbaa !13
  %43 = call i64 @fwrite(ptr nonnull @.str.25, i64 34, i64 1, ptr %42) #32
  call void @exit(i32 noundef 1) #33
  unreachable

if.end80:                                         ; preds = %loadtreeoneline.exit
  %arrayidx82 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv456
  %44 = load ptr, ptr %arrayidx82, align 8, !tbaa !13
  %45 = load ptr, ptr %44, align 8, !tbaa !13
  %46 = load ptr, ptr @veryfastsupg_double_loadtop.hist, align 8, !tbaa !13
  %arrayidx85 = getelementptr inbounds i32, ptr %46, i64 %idxprom66
  %47 = load i32, ptr %arrayidx85, align 4, !tbaa !10
  %cmp86 = icmp eq i32 %47, -1
  br i1 %cmp86, label %if.then88, label %if.else

if.then88:                                        ; preds = %if.end80
  %incdec.ptr = getelementptr inbounds i32, ptr %45, i64 1
  store i32 %dec.i, ptr %45, align 4, !tbaa !10
  br label %if.end114

if.else:                                          ; preds = %if.end80
  %idxprom89 = sext i32 %47 to i64
  %arrayidx90 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom89
  %48 = load ptr, ptr %arrayidx90, align 8, !tbaa !13
  %49 = load ptr, ptr %48, align 8, !tbaa !13
  %arrayidx94 = getelementptr inbounds ptr, ptr %48, i64 1
  %50 = load ptr, ptr %arrayidx94, align 8, !tbaa !13
  %51 = load i32, ptr %49, align 4, !tbaa !10
  %52 = load i32, ptr %50, align 4, !tbaa !10
  %cmp95 = icmp sgt i32 %51, %52
  %53 = call i32 @llvm.smin.i32(i32 %51, i32 %52)
  %54 = call i32 @llvm.smax.i32(i32 %51, i32 %52)
  %.412 = select i1 %cmp95, ptr %49, ptr %50
  %cmp101.not424 = icmp eq i32 %53, -1
  br i1 %cmp101.not424, label %for.cond107.preheader, label %for.body103.preheader

for.body103.preheader:                            ; preds = %if.else
  %. = select i1 %cmp95, ptr %50, ptr %49
  br label %for.body103

for.cond107.preheader.loopexit:                   ; preds = %for.body103
  %.pre461 = load i32, ptr %.412, align 4, !tbaa !10
  br label %for.cond107.preheader

for.cond107.preheader:                            ; preds = %for.cond107.preheader.loopexit, %if.else
  %55 = phi i32 [ %54, %if.else ], [ %.pre461, %for.cond107.preheader.loopexit ]
  %intpt.0.lcssa = phi ptr [ %45, %if.else ], [ %incdec.ptr105, %for.cond107.preheader.loopexit ]
  %cmp108.not427 = icmp eq i32 %55, -1
  br i1 %cmp108.not427, label %if.end114, label %for.body110

for.body103:                                      ; preds = %for.body103.preheader, %for.body103
  %56 = phi i32 [ %57, %for.body103 ], [ %53, %for.body103.preheader ]
  %intpt2.0426 = phi ptr [ %incdec.ptr104, %for.body103 ], [ %., %for.body103.preheader ]
  %intpt.0425 = phi ptr [ %incdec.ptr105, %for.body103 ], [ %45, %for.body103.preheader ]
  %incdec.ptr104 = getelementptr inbounds i32, ptr %intpt2.0426, i64 1
  %incdec.ptr105 = getelementptr inbounds i32, ptr %intpt.0425, i64 1
  store i32 %56, ptr %intpt.0425, align 4, !tbaa !10
  %57 = load i32, ptr %incdec.ptr104, align 4, !tbaa !10
  %cmp101.not = icmp eq i32 %57, -1
  br i1 %cmp101.not, label %for.cond107.preheader.loopexit, label %for.body103, !llvm.loop !151

for.body110:                                      ; preds = %for.cond107.preheader, %for.body110
  %58 = phi i32 [ %59, %for.body110 ], [ %55, %for.cond107.preheader ]
  %intpt2.1429 = phi ptr [ %incdec.ptr111, %for.body110 ], [ %.412, %for.cond107.preheader ]
  %intpt.1428 = phi ptr [ %incdec.ptr112, %for.body110 ], [ %intpt.0.lcssa, %for.cond107.preheader ]
  %incdec.ptr111 = getelementptr inbounds i32, ptr %intpt2.1429, i64 1
  %incdec.ptr112 = getelementptr inbounds i32, ptr %intpt.1428, i64 1
  store i32 %58, ptr %intpt.1428, align 4, !tbaa !10
  %59 = load i32, ptr %incdec.ptr111, align 4, !tbaa !10
  %cmp108.not = icmp eq i32 %59, -1
  br i1 %cmp108.not, label %if.end114, label %for.body110, !llvm.loop !152

if.end114:                                        ; preds = %for.body110, %for.cond107.preheader, %if.then88
  %intpt.1.lcssa.sink = phi ptr [ %incdec.ptr, %if.then88 ], [ %intpt.0.lcssa, %for.cond107.preheader ], [ %incdec.ptr112, %for.body110 ]
  store i32 -1, ptr %intpt.1.lcssa.sink, align 4, !tbaa !10
  %arrayidx117 = getelementptr inbounds ptr, ptr %44, i64 1
  %60 = load ptr, ptr %arrayidx117, align 8, !tbaa !13
  %arrayidx119 = getelementptr inbounds i32, ptr %46, i64 %idxprom68
  %61 = load i32, ptr %arrayidx119, align 4, !tbaa !10
  %cmp120 = icmp eq i32 %61, -1
  br i1 %cmp120, label %if.then122, label %if.else124

if.then122:                                       ; preds = %if.end114
  %incdec.ptr123 = getelementptr inbounds i32, ptr %60, i64 1
  store i32 %dec4.i, ptr %60, align 4, !tbaa !10
  br label %if.end150

if.else124:                                       ; preds = %if.end114
  %idxprom125 = sext i32 %61 to i64
  %arrayidx126 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom125
  %62 = load ptr, ptr %arrayidx126, align 8, !tbaa !13
  %63 = load ptr, ptr %62, align 8, !tbaa !13
  %arrayidx130 = getelementptr inbounds ptr, ptr %62, i64 1
  %64 = load ptr, ptr %arrayidx130, align 8, !tbaa !13
  %65 = load i32, ptr %63, align 4, !tbaa !10
  %66 = load i32, ptr %64, align 4, !tbaa !10
  %cmp131 = icmp sgt i32 %65, %66
  %67 = call i32 @llvm.smin.i32(i32 %65, i32 %66)
  %68 = call i32 @llvm.smax.i32(i32 %65, i32 %66)
  %.414 = select i1 %cmp131, ptr %63, ptr %64
  %cmp137.not431 = icmp eq i32 %67, -1
  br i1 %cmp137.not431, label %for.cond143.preheader, label %for.body139.preheader

for.body139.preheader:                            ; preds = %if.else124
  %.413 = select i1 %cmp131, ptr %64, ptr %63
  br label %for.body139

for.cond143.preheader.loopexit:                   ; preds = %for.body139
  %.pre462 = load i32, ptr %.414, align 4, !tbaa !10
  br label %for.cond143.preheader

for.cond143.preheader:                            ; preds = %for.cond143.preheader.loopexit, %if.else124
  %69 = phi i32 [ %68, %if.else124 ], [ %.pre462, %for.cond143.preheader.loopexit ]
  %intpt.2.lcssa = phi ptr [ %60, %if.else124 ], [ %incdec.ptr141, %for.cond143.preheader.loopexit ]
  %cmp144.not435 = icmp eq i32 %69, -1
  br i1 %cmp144.not435, label %if.end150, label %for.body146

for.body139:                                      ; preds = %for.body139.preheader, %for.body139
  %70 = phi i32 [ %71, %for.body139 ], [ %67, %for.body139.preheader ]
  %intpt2.2433 = phi ptr [ %incdec.ptr140, %for.body139 ], [ %.413, %for.body139.preheader ]
  %intpt.2432 = phi ptr [ %incdec.ptr141, %for.body139 ], [ %60, %for.body139.preheader ]
  %incdec.ptr140 = getelementptr inbounds i32, ptr %intpt2.2433, i64 1
  %incdec.ptr141 = getelementptr inbounds i32, ptr %intpt.2432, i64 1
  store i32 %70, ptr %intpt.2432, align 4, !tbaa !10
  %71 = load i32, ptr %incdec.ptr140, align 4, !tbaa !10
  %cmp137.not = icmp eq i32 %71, -1
  br i1 %cmp137.not, label %for.cond143.preheader.loopexit, label %for.body139, !llvm.loop !153

for.body146:                                      ; preds = %for.cond143.preheader, %for.body146
  %72 = phi i32 [ %73, %for.body146 ], [ %69, %for.cond143.preheader ]
  %intpt2.3437 = phi ptr [ %incdec.ptr147, %for.body146 ], [ %.414, %for.cond143.preheader ]
  %intpt.3436 = phi ptr [ %incdec.ptr148, %for.body146 ], [ %intpt.2.lcssa, %for.cond143.preheader ]
  %incdec.ptr147 = getelementptr inbounds i32, ptr %intpt2.3437, i64 1
  %incdec.ptr148 = getelementptr inbounds i32, ptr %intpt.3436, i64 1
  store i32 %72, ptr %intpt.3436, align 4, !tbaa !10
  %73 = load i32, ptr %incdec.ptr147, align 4, !tbaa !10
  %cmp144.not = icmp eq i32 %73, -1
  br i1 %cmp144.not, label %if.end150, label %for.body146, !llvm.loop !154

if.end150:                                        ; preds = %for.body146, %for.cond143.preheader, %if.then122
  %intpt.3.lcssa.sink = phi ptr [ %incdec.ptr123, %if.then122 ], [ %intpt.2.lcssa, %for.cond143.preheader ], [ %incdec.ptr148, %for.body146 ]
  store i32 -1, ptr %intpt.3.lcssa.sink, align 4, !tbaa !10
  %mul151 = fmul double %39, 5.000000e-01
  %74 = load ptr, ptr @veryfastsupg_double_loadtop.tmptmplen, align 8, !tbaa !13
  %arrayidx153 = getelementptr inbounds double, ptr %74, i64 %idxprom66
  %75 = load double, ptr %arrayidx153, align 8, !tbaa !20
  %sub154 = fsub double %mul151, %75
  %arrayidx156 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv456
  %76 = load ptr, ptr %arrayidx156, align 8, !tbaa !13
  store double %sub154, ptr %76, align 8, !tbaa !20
  %arrayidx159 = getelementptr inbounds double, ptr %74, i64 %idxprom68
  %77 = load double, ptr %arrayidx159, align 8, !tbaa !20
  %sub160 = fsub double %mul151, %77
  %arrayidx163 = getelementptr inbounds double, ptr %76, i64 1
  store double %sub160, ptr %arrayidx163, align 8, !tbaa !20
  %cmp167 = fcmp olt double %sub154, 0.000000e+00
  br i1 %cmp167, label %if.then169, label %if.end173

if.then169:                                       ; preds = %if.end150
  store double 0.000000e+00, ptr %76, align 8, !tbaa !20
  br label %if.end173

if.end173:                                        ; preds = %if.then169, %if.end150
  %cmp177 = fcmp olt double %sub160, 0.000000e+00
  br i1 %cmp177, label %if.then179, label %if.end183

if.then179:                                       ; preds = %if.end173
  store double 0.000000e+00, ptr %arrayidx163, align 8, !tbaa !20
  br label %if.end183

if.end183:                                        ; preds = %if.then179, %if.end173
  store double %mul151, ptr %arrayidx153, align 8, !tbaa !20
  store i32 %32, ptr %arrayidx85, align 4, !tbaa !10
  %78 = load ptr, ptr @veryfastsupg_double_loadtop.ac, align 8, !tbaa !13
  br label %for.body191

for.body191:                                      ; preds = %if.end183, %for.inc226
  %i.4439 = phi i32 [ 0, %if.end183 ], [ %84, %for.inc226 ]
  %cmp192.not = icmp eq i32 %i.4439, %dec.i
  %cmp194.not = icmp eq i32 %i.4439, %dec4.i
  %or.cond415 = or i1 %cmp192.not, %cmp194.not
  br i1 %or.cond415, label %for.inc226, label %if.then196

if.then196:                                       ; preds = %for.body191
  %cmp197 = icmp slt i32 %i.4439, %dec.i
  br i1 %cmp197, label %if.then196.if.end206_crit_edge, label %if.else200

if.then196.if.end206_crit_edge:                   ; preds = %if.then196
  %.pre465 = sext i32 %i.4439 to i64
  br label %if.end206

if.else200:                                       ; preds = %if.then196
  %i.4. = call i32 @llvm.smin.i32(i32 %i.4439, i32 %dec4.i)
  %.i.4 = call i32 @llvm.smax.i32(i32 %i.4439, i32 %dec4.i)
  %.pre463 = sext i32 %i.4439 to i64
  %.pre464 = sext i32 %.i.4 to i64
  %.pre466 = sext i32 %i.4. to i64
  br label %if.end206

if.end206:                                        ; preds = %if.then196.if.end206_crit_edge, %if.else200
  %idxprom211.pre-phi = phi i64 [ %.pre465, %if.then196.if.end206_crit_edge ], [ %.pre466, %if.else200 ]
  %idxprom207.pre-phi = phi i64 [ %.pre465, %if.then196.if.end206_crit_edge ], [ %idxprom66, %if.else200 ]
  %idxprom213.pre-phi = phi i64 [ %idxprom68, %if.then196.if.end206_crit_edge ], [ %.pre464, %if.else200 ]
  %idxprom209.pre-phi = phi i64 [ %idxprom66, %if.then196.if.end206_crit_edge ], [ %.pre463, %if.else200 ]
  %arrayidx208 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom207.pre-phi
  %79 = load ptr, ptr %arrayidx208, align 8, !tbaa !13
  %arrayidx210 = getelementptr inbounds double, ptr %79, i64 %idxprom209.pre-phi
  %80 = load double, ptr %arrayidx210, align 8, !tbaa !20
  %arrayidx212 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom211.pre-phi
  %81 = load ptr, ptr %arrayidx212, align 8, !tbaa !13
  %arrayidx214 = getelementptr inbounds double, ptr %81, i64 %idxprom213.pre-phi
  %82 = load double, ptr %arrayidx214, align 8, !tbaa !20
  %cmp215 = fcmp olt double %80, %82
  %cond = select i1 %cmp215, double %80, double %82
  %add218 = fadd double %80, %82
  %mul219 = fmul double %add218, 5.000000e-01
  %mul220 = fmul double %mul219, 1.000000e-01
  %83 = call double @llvm.fmuladd.f64(double %cond, double 9.000000e-01, double %mul220)
  store double %83, ptr %arrayidx210, align 8, !tbaa !20
  br label %for.inc226

for.inc226:                                       ; preds = %for.body191, %if.end206
  %idxprom227 = sext i32 %i.4439 to i64
  %arrayidx228 = getelementptr inbounds %struct._Achain, ptr %78, i64 %idxprom227
  %84 = load i32, ptr %arrayidx228, align 4, !tbaa !145
  %cmp189.not = icmp eq i32 %84, -1
  br i1 %cmp189.not, label %for.end230, label %for.body191, !llvm.loop !155

for.end230:                                       ; preds = %for.inc226
  %arrayidx232 = getelementptr inbounds %struct._Achain, ptr %78, i64 %idxprom68
  %prev233 = getelementptr inbounds %struct._Achain, ptr %78, i64 %idxprom68, i32 1
  %85 = load i32, ptr %prev233, align 4, !tbaa !149
  %86 = load i32, ptr %arrayidx232, align 4, !tbaa !145
  %idxprom237 = sext i32 %85 to i64
  %arrayidx238 = getelementptr inbounds %struct._Achain, ptr %78, i64 %idxprom237
  store i32 %86, ptr %arrayidx238, align 4, !tbaa !145
  %cmp240.not = icmp eq i32 %86, -1
  br i1 %cmp240.not, label %if.end246, label %if.then242

if.then242:                                       ; preds = %for.end230
  %idxprom243 = sext i32 %86 to i64
  %prev245 = getelementptr inbounds %struct._Achain, ptr %78, i64 %idxprom243, i32 1
  store i32 %85, ptr %prev245, align 4, !tbaa !149
  br label %if.end246

if.end246:                                        ; preds = %if.then242, %for.end230
  %87 = load ptr, ptr @veryfastsupg_double_loadtop.treetmp, align 8, !tbaa !13
  %88 = load ptr, ptr @veryfastsupg_double_loadtop.tree, align 8, !tbaa !13
  %arrayidx248 = getelementptr inbounds ptr, ptr %88, i64 %idxprom66
  %89 = load ptr, ptr %arrayidx248, align 8, !tbaa !13
  %90 = load double, ptr %76, align 8, !tbaa !20
  %arrayidx253 = getelementptr inbounds ptr, ptr %88, i64 %idxprom68
  %91 = load ptr, ptr %arrayidx253, align 8, !tbaa !13
  %92 = load double, ptr %arrayidx163, align 8, !tbaa !20
  %call257 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %87, ptr noundef nonnull dereferenceable(1) @.str.16, ptr noundef %89, double noundef %90, ptr noundef %91, double noundef %92) #34
  %93 = load ptr, ptr @veryfastsupg_double_loadtop.tree, align 8, !tbaa !13
  %arrayidx259 = getelementptr inbounds ptr, ptr %93, i64 %idxprom66
  %94 = load ptr, ptr %arrayidx259, align 8, !tbaa !13
  %95 = load ptr, ptr @veryfastsupg_double_loadtop.treetmp, align 8, !tbaa !13
  %call260 = call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %94, ptr noundef nonnull dereferenceable(1) %95) #34
  %indvars.iv.next457 = add nuw nsw i64 %indvars.iv456, 1
  %exitcond460.not = icmp eq i64 %indvars.iv.next457, %wide.trip.count459
  br i1 %exitcond460.not, label %for.end263, label %for.body55, !llvm.loop !156

for.end263:                                       ; preds = %if.end246, %for.end49.thread, %for.end49
  %call264 = call i32 @fclose(ptr noundef nonnull %call)
  %call265 = call noalias ptr @fopen(ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
  %96 = load ptr, ptr @veryfastsupg_double_loadtop.treetmp, align 8, !tbaa !13
  %call266 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %call265, ptr noundef nonnull @.str.4, ptr noundef %96)
  %call267 = call i32 @fclose(ptr noundef %call265)
  %97 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc411 = call i32 @fputc(i32 10, ptr %97)
  %98 = load ptr, ptr @veryfastsupg_double_loadtop.tmptmplen, align 8, !tbaa !13
  call void @free(ptr noundef %98) #34
  store ptr null, ptr @veryfastsupg_double_loadtop.tmptmplen, align 8, !tbaa !13
  %99 = load ptr, ptr @veryfastsupg_double_loadtop.hist, align 8, !tbaa !13
  call void @free(ptr noundef %99) #34
  store ptr null, ptr @veryfastsupg_double_loadtop.hist, align 8, !tbaa !13
  %100 = load ptr, ptr @veryfastsupg_double_loadtop.ac, align 8, !tbaa !13
  call void @free(ptr noundef %100) #34
  store ptr null, ptr @veryfastsupg_double_loadtop.ac, align 8, !tbaa !13
  %101 = load ptr, ptr @veryfastsupg_double_loadtop.tree, align 8, !tbaa !13
  call void @FreeCharMtx(ptr noundef %101) #34
  %102 = load ptr, ptr @veryfastsupg_double_loadtop.treetmp, align 8, !tbaa !13
  call void @free(ptr noundef %102) #34
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %dumfl) #34
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %node) #34
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @veryfastsupg_double_loadtree(i32 noundef %nseq, ptr nocapture noundef readonly %eff, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %len) local_unnamed_addr #12 {
entry:
  %node = alloca [2 x i32], align 4
  %lenfl = alloca [2 x float], align 8
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %node) #34
  call void @llvm.lifetime.start.p0(i64 8, ptr nonnull %lenfl) #34
  %call = tail call noalias ptr @fopen(ptr noundef nonnull @.str.8, ptr noundef nonnull @.str.9)
  %tobool.not = icmp eq ptr %call, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr @stderr, align 8, !tbaa !13
  %1 = tail call i64 @fwrite(ptr nonnull @.str.10, i64 23, i64 1, ptr %0) #32
  tail call void @exit(i32 noundef 1) #33
  unreachable

if.end:                                           ; preds = %entry
  %2 = load ptr, ptr @veryfastsupg_double_loadtree.hist, align 8, !tbaa !13
  %tobool2.not = icmp eq ptr %2, null
  br i1 %tobool2.not, label %if.then3, label %if.end13

if.then3:                                         ; preds = %if.end
  %3 = load i32, ptr @njob, align 4, !tbaa !10
  %mul = mul nsw i32 %3, 50
  %call4 = tail call ptr @AllocateCharVec(i32 noundef %mul) #34
  store ptr %call4, ptr @veryfastsupg_double_loadtree.treetmp, align 8, !tbaa !13
  %4 = load i32, ptr @njob, align 4, !tbaa !10
  %mul5 = mul nsw i32 %4, 50
  %call6 = tail call ptr @AllocateCharMtx(i32 noundef %4, i32 noundef %mul5) #34
  store ptr %call6, ptr @veryfastsupg_double_loadtree.tree, align 8, !tbaa !13
  %5 = load i32, ptr @njob, align 4, !tbaa !10
  %call7 = tail call ptr @AllocateIntVec(i32 noundef %5) #34
  store ptr %call7, ptr @veryfastsupg_double_loadtree.hist, align 8, !tbaa !13
  %6 = load i32, ptr @njob, align 4, !tbaa !10
  %conv = sext i32 %6 to i64
  %mul8 = shl nsw i64 %conv, 3
  %call9 = tail call noalias ptr @malloc(i64 noundef %mul8) #35
  store ptr %call9, ptr @veryfastsupg_double_loadtree.tmptmplen, align 8, !tbaa !13
  %call12 = tail call noalias ptr @malloc(i64 noundef %mul8) #35
  store ptr %call12, ptr @veryfastsupg_double_loadtree.ac, align 8, !tbaa !13
  br label %if.end13

if.end13:                                         ; preds = %if.then3, %if.end
  %cmp396 = icmp sgt i32 %nseq, 0
  br i1 %cmp396, label %for.body.preheader, label %for.end27.thread

for.body.preheader:                               ; preds = %if.end13
  %wide.trip.count = zext i32 %nseq to i64
  br label %for.body

for.cond16.preheader:                             ; preds = %for.body
  br i1 %cmp396, label %for.body19.lr.ph, label %for.end27.thread

for.end27.thread:                                 ; preds = %for.cond16.preheader, %if.end13
  %.pre = load ptr, ptr @veryfastsupg_double_loadtree.ac, align 8, !tbaa !13
  %sub28447 = add nsw i32 %nseq, -1
  %idxprom29448 = sext i32 %sub28447 to i64
  %arrayidx30449 = getelementptr inbounds %struct._Achain, ptr %.pre, i64 %idxprom29448
  store i32 -1, ptr %arrayidx30449, align 4, !tbaa !145
  br label %for.end49.thread

for.body19.lr.ph:                                 ; preds = %for.cond16.preheader
  %7 = load ptr, ptr @veryfastsupg_double_loadtree.ac, align 8, !tbaa !13
  %wide.trip.count428 = zext i32 %nseq to i64
  %min.iters.check = icmp ult i32 %nseq, 4
  br i1 %min.iters.check, label %for.body19.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body19.lr.ph
  %n.vec = and i64 %wide.trip.count, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.ind = phi <2 x i64> [ <i64 0, i64 1>, %vector.ph ], [ %vec.ind.next, %vector.body ]
  %vec.ind457 = phi <2 x i32> [ <i32 0, i32 1>, %vector.ph ], [ %vec.ind.next460, %vector.body ]
  %8 = or i64 %index, 2
  %9 = trunc <2 x i64> %vec.ind to <2 x i32>
  %10 = add <2 x i32> %9, <i32 1, i32 1>
  %11 = trunc <2 x i64> %vec.ind to <2 x i32>
  %12 = add <2 x i32> %11, <i32 3, i32 3>
  %13 = add <2 x i32> %vec.ind457, <i32 -1, i32 -1>
  %14 = add <2 x i32> %vec.ind457, <i32 1, i32 1>
  %15 = getelementptr inbounds %struct._Achain, ptr %7, i64 %index
  %16 = getelementptr inbounds %struct._Achain, ptr %7, i64 %8
  %interleaved.vec = shufflevector <2 x i32> %10, <2 x i32> %13, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x i32> %interleaved.vec, ptr %15, align 4, !tbaa !10
  %interleaved.vec461 = shufflevector <2 x i32> %12, <2 x i32> %14, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x i32> %interleaved.vec461, ptr %16, align 4, !tbaa !10
  %index.next = add nuw i64 %index, 4
  %vec.ind.next = add <2 x i64> %vec.ind, <i64 4, i64 4>
  %vec.ind.next460 = add <2 x i32> %vec.ind457, <i32 4, i32 4>
  %17 = icmp eq i64 %index.next, %n.vec
  br i1 %17, label %middle.block, label %vector.body, !llvm.loop !157

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count
  br i1 %cmp.n, label %for.end27, label %for.body19.preheader

for.body19.preheader:                             ; preds = %for.body19.lr.ph, %middle.block
  %indvars.iv424.ph = phi i64 [ 0, %for.body19.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body19

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %18 = load ptr, ptr @veryfastsupg_double_loadtree.tree, align 8, !tbaa !13
  %arrayidx = getelementptr inbounds ptr, ptr %18, i64 %indvars.iv
  %19 = load ptr, ptr %arrayidx, align 8, !tbaa !13
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %20 = trunc i64 %indvars.iv.next to i32
  %call15 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %19, ptr noundef nonnull dereferenceable(1) @.str.21, i32 noundef %20) #34
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond16.preheader, label %for.body, !llvm.loop !158

for.body19:                                       ; preds = %for.body19.preheader, %for.body19
  %indvars.iv424 = phi i64 [ %indvars.iv.next425, %for.body19 ], [ %indvars.iv424.ph, %for.body19.preheader ]
  %indvars.iv.next425 = add nuw nsw i64 %indvars.iv424, 1
  %arrayidx22 = getelementptr inbounds %struct._Achain, ptr %7, i64 %indvars.iv424
  %21 = trunc i64 %indvars.iv.next425 to i32
  store i32 %21, ptr %arrayidx22, align 4, !tbaa !145
  %prev = getelementptr inbounds %struct._Achain, ptr %7, i64 %indvars.iv424, i32 1
  %22 = trunc i64 %indvars.iv424 to i32
  %23 = add i32 %22, -1
  store i32 %23, ptr %prev, align 4, !tbaa !149
  %exitcond429.not = icmp eq i64 %indvars.iv.next425, %wide.trip.count428
  br i1 %exitcond429.not, label %for.end27, label %for.body19, !llvm.loop !159

for.end27:                                        ; preds = %for.body19, %middle.block
  %sub28 = add nsw i32 %nseq, -1
  %idxprom29 = sext i32 %sub28 to i64
  %arrayidx30 = getelementptr inbounds %struct._Achain, ptr %7, i64 %idxprom29
  store i32 -1, ptr %arrayidx30, align 4, !tbaa !145
  br i1 %cmp396, label %for.end49, label %for.end49.thread

for.end49.thread:                                 ; preds = %for.end27, %for.end27.thread
  %24 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc454 = tail call i32 @fputc(i32 10, ptr %24)
  br label %for.end255

for.end49:                                        ; preds = %for.end27
  %25 = load ptr, ptr @veryfastsupg_double_loadtree.tmptmplen, align 8, !tbaa !13
  %26 = zext i32 %nseq to i64
  %27 = shl nuw nsw i64 %26, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %25, i8 0, i64 %27, i1 false), !tbaa !20
  %28 = load ptr, ptr @veryfastsupg_double_loadtree.hist, align 8, !tbaa !13
  %29 = zext i32 %nseq to i64
  %30 = shl nuw nsw i64 %29, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %28, i8 -1, i64 %30, i1 false), !tbaa !10
  %31 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc = tail call i32 @fputc(i32 10, ptr %31)
  %cmp53421.not = icmp eq i32 %nseq, 1
  br i1 %cmp53421.not, label %for.end255, label %for.body55.lr.ph

for.body55.lr.ph:                                 ; preds = %for.end49
  %arrayidx61 = getelementptr inbounds [2 x float], ptr %lenfl, i64 0, i64 1
  %add.ptr.i = getelementptr inbounds i32, ptr %node, i64 1
  %wide.trip.count439 = zext i32 %sub28 to i64
  br label %for.body55

for.body55:                                       ; preds = %for.body55.lr.ph, %if.end238
  %indvars.iv436 = phi i64 [ 0, %for.body55.lr.ph ], [ %indvars.iv.next437, %if.end238 ]
  %32 = trunc i64 %indvars.iv436 to i32
  %rem = urem i32 %32, 10
  %cmp56 = icmp eq i32 %rem, 0
  br i1 %cmp56, label %if.then58, label %if.end60

if.then58:                                        ; preds = %for.body55
  %33 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call59 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %33, ptr noundef nonnull @.str.24, i32 noundef %32, i32 noundef %nseq) #32
  br label %if.end60

if.end60:                                         ; preds = %if.then58, %for.body55
  store <2 x float> <float -1.000000e+00, float -1.000000e+00>, ptr %lenfl, align 8, !tbaa !17
  %call.i = call ptr @fgets(ptr noundef nonnull @loadtreeoneline.gett, i32 noundef 999, ptr noundef nonnull %call)
  %call2.i = call i32 (ptr, ptr, ...) @__isoc99_sscanf(ptr noundef nonnull @loadtreeoneline.gett, ptr noundef nonnull @.str.38, ptr noundef nonnull %node, ptr noundef nonnull %add.ptr.i, ptr noundef nonnull %lenfl, ptr noundef nonnull %arrayidx61) #34
  %34 = load i32, ptr %node, align 4, !tbaa !10
  %dec.i = add nsw i32 %34, -1
  store i32 %dec.i, ptr %node, align 4, !tbaa !10
  %35 = load i32, ptr %add.ptr.i, align 4, !tbaa !10
  %dec4.i = add nsw i32 %35, -1
  store i32 %dec4.i, ptr %add.ptr.i, align 4, !tbaa !10
  %cmp.not.i = icmp slt i32 %34, %35
  br i1 %cmp.not.i, label %loadtreeoneline.exit, label %if.then.i

if.then.i:                                        ; preds = %if.end60
  %36 = load ptr, ptr @stderr, align 8, !tbaa !13
  %37 = call i64 @fwrite(ptr nonnull @.str.39, i64 21, i64 1, ptr %36) #32
  call void @exit(i32 noundef 1) #33
  unreachable

loadtreeoneline.exit:                             ; preds = %if.end60
  %idxprom66 = sext i32 %dec.i to i64
  %arrayidx67 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom66
  %38 = load ptr, ptr %arrayidx67, align 8, !tbaa !13
  %idxprom68 = sext i32 %dec4.i to i64
  %arrayidx69 = getelementptr inbounds double, ptr %38, i64 %idxprom68
  %39 = load double, ptr %arrayidx69, align 8, !tbaa !20
  %40 = load float, ptr %lenfl, align 8, !tbaa !17
  %cmp72 = fcmp oeq float %40, -1.000000e+00
  %41 = load float, ptr %arrayidx61, align 4
  %cmp76 = fcmp oeq float %41, -1.000000e+00
  %or.cond = select i1 %cmp72, i1 true, i1 %cmp76
  br i1 %or.cond, label %if.then78, label %if.end80

if.then78:                                        ; preds = %loadtreeoneline.exit
  %42 = load ptr, ptr @stderr, align 8, !tbaa !13
  %43 = call i64 @fwrite(ptr nonnull @.str.26, i64 39, i64 1, ptr %42) #32
  call void @exit(i32 noundef 1) #33
  unreachable

if.end80:                                         ; preds = %loadtreeoneline.exit
  %cmp83 = fcmp olt float %40, 0.000000e+00
  br i1 %cmp83, label %if.then85, label %if.end87

if.then85:                                        ; preds = %if.end80
  store float 0.000000e+00, ptr %lenfl, align 8, !tbaa !17
  br label %if.end87

if.end87:                                         ; preds = %if.then85, %if.end80
  %44 = phi float [ 0.000000e+00, %if.then85 ], [ %40, %if.end80 ]
  %cmp90 = fcmp olt float %41, 0.000000e+00
  br i1 %cmp90, label %if.then92, label %if.end94

if.then92:                                        ; preds = %if.end87
  store float 0.000000e+00, ptr %arrayidx61, align 4, !tbaa !17
  br label %if.end94

if.end94:                                         ; preds = %if.then92, %if.end87
  %arrayidx96 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv436
  %45 = load ptr, ptr %arrayidx96, align 8, !tbaa !13
  %46 = load ptr, ptr %45, align 8, !tbaa !13
  %47 = load ptr, ptr @veryfastsupg_double_loadtree.hist, align 8, !tbaa !13
  %arrayidx99 = getelementptr inbounds i32, ptr %47, i64 %idxprom66
  %48 = load i32, ptr %arrayidx99, align 4, !tbaa !10
  %cmp100 = icmp eq i32 %48, -1
  br i1 %cmp100, label %if.then102, label %if.else

if.then102:                                       ; preds = %if.end94
  %incdec.ptr = getelementptr inbounds i32, ptr %46, i64 1
  store i32 %dec.i, ptr %46, align 4, !tbaa !10
  br label %if.end128

if.else:                                          ; preds = %if.end94
  %idxprom103 = sext i32 %48 to i64
  %arrayidx104 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom103
  %49 = load ptr, ptr %arrayidx104, align 8, !tbaa !13
  %50 = load ptr, ptr %49, align 8, !tbaa !13
  %arrayidx108 = getelementptr inbounds ptr, ptr %49, i64 1
  %51 = load ptr, ptr %arrayidx108, align 8, !tbaa !13
  %52 = load i32, ptr %50, align 4, !tbaa !10
  %53 = load i32, ptr %51, align 4, !tbaa !10
  %cmp109 = icmp sgt i32 %52, %53
  %54 = call i32 @llvm.smin.i32(i32 %52, i32 %53)
  %55 = call i32 @llvm.smax.i32(i32 %52, i32 %53)
  %.392 = select i1 %cmp109, ptr %50, ptr %51
  %cmp115.not404 = icmp eq i32 %54, -1
  br i1 %cmp115.not404, label %for.cond121.preheader, label %for.body117.preheader

for.body117.preheader:                            ; preds = %if.else
  %. = select i1 %cmp109, ptr %51, ptr %50
  br label %for.body117

for.cond121.preheader.loopexit:                   ; preds = %for.body117
  %.pre441 = load i32, ptr %.392, align 4, !tbaa !10
  br label %for.cond121.preheader

for.cond121.preheader:                            ; preds = %for.cond121.preheader.loopexit, %if.else
  %56 = phi i32 [ %55, %if.else ], [ %.pre441, %for.cond121.preheader.loopexit ]
  %intpt.0.lcssa = phi ptr [ %46, %if.else ], [ %incdec.ptr119, %for.cond121.preheader.loopexit ]
  %cmp122.not407 = icmp eq i32 %56, -1
  br i1 %cmp122.not407, label %if.end128, label %for.body124

for.body117:                                      ; preds = %for.body117.preheader, %for.body117
  %57 = phi i32 [ %58, %for.body117 ], [ %54, %for.body117.preheader ]
  %intpt2.0406 = phi ptr [ %incdec.ptr118, %for.body117 ], [ %., %for.body117.preheader ]
  %intpt.0405 = phi ptr [ %incdec.ptr119, %for.body117 ], [ %46, %for.body117.preheader ]
  %incdec.ptr118 = getelementptr inbounds i32, ptr %intpt2.0406, i64 1
  %incdec.ptr119 = getelementptr inbounds i32, ptr %intpt.0405, i64 1
  store i32 %57, ptr %intpt.0405, align 4, !tbaa !10
  %58 = load i32, ptr %incdec.ptr118, align 4, !tbaa !10
  %cmp115.not = icmp eq i32 %58, -1
  br i1 %cmp115.not, label %for.cond121.preheader.loopexit, label %for.body117, !llvm.loop !160

for.body124:                                      ; preds = %for.cond121.preheader, %for.body124
  %59 = phi i32 [ %60, %for.body124 ], [ %56, %for.cond121.preheader ]
  %intpt2.1409 = phi ptr [ %incdec.ptr125, %for.body124 ], [ %.392, %for.cond121.preheader ]
  %intpt.1408 = phi ptr [ %incdec.ptr126, %for.body124 ], [ %intpt.0.lcssa, %for.cond121.preheader ]
  %incdec.ptr125 = getelementptr inbounds i32, ptr %intpt2.1409, i64 1
  %incdec.ptr126 = getelementptr inbounds i32, ptr %intpt.1408, i64 1
  store i32 %59, ptr %intpt.1408, align 4, !tbaa !10
  %60 = load i32, ptr %incdec.ptr125, align 4, !tbaa !10
  %cmp122.not = icmp eq i32 %60, -1
  br i1 %cmp122.not, label %if.end128, label %for.body124, !llvm.loop !161

if.end128:                                        ; preds = %for.body124, %for.cond121.preheader, %if.then102
  %intpt.1.lcssa.sink = phi ptr [ %incdec.ptr, %if.then102 ], [ %intpt.0.lcssa, %for.cond121.preheader ], [ %incdec.ptr126, %for.body124 ]
  store i32 -1, ptr %intpt.1.lcssa.sink, align 4, !tbaa !10
  %arrayidx131 = getelementptr inbounds ptr, ptr %45, i64 1
  %61 = load ptr, ptr %arrayidx131, align 8, !tbaa !13
  %arrayidx133 = getelementptr inbounds i32, ptr %47, i64 %idxprom68
  %62 = load i32, ptr %arrayidx133, align 4, !tbaa !10
  %cmp134 = icmp eq i32 %62, -1
  br i1 %cmp134, label %if.then136, label %if.else138

if.then136:                                       ; preds = %if.end128
  %incdec.ptr137 = getelementptr inbounds i32, ptr %61, i64 1
  store i32 %dec4.i, ptr %61, align 4, !tbaa !10
  br label %if.end164

if.else138:                                       ; preds = %if.end128
  %idxprom139 = sext i32 %62 to i64
  %arrayidx140 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom139
  %63 = load ptr, ptr %arrayidx140, align 8, !tbaa !13
  %64 = load ptr, ptr %63, align 8, !tbaa !13
  %arrayidx144 = getelementptr inbounds ptr, ptr %63, i64 1
  %65 = load ptr, ptr %arrayidx144, align 8, !tbaa !13
  %66 = load i32, ptr %64, align 4, !tbaa !10
  %67 = load i32, ptr %65, align 4, !tbaa !10
  %cmp145 = icmp sgt i32 %66, %67
  %68 = call i32 @llvm.smin.i32(i32 %66, i32 %67)
  %69 = call i32 @llvm.smax.i32(i32 %66, i32 %67)
  %.394 = select i1 %cmp145, ptr %64, ptr %65
  %cmp151.not411 = icmp eq i32 %68, -1
  br i1 %cmp151.not411, label %for.cond157.preheader, label %for.body153.preheader

for.body153.preheader:                            ; preds = %if.else138
  %.393 = select i1 %cmp145, ptr %65, ptr %64
  br label %for.body153

for.cond157.preheader.loopexit:                   ; preds = %for.body153
  %.pre442 = load i32, ptr %.394, align 4, !tbaa !10
  br label %for.cond157.preheader

for.cond157.preheader:                            ; preds = %for.cond157.preheader.loopexit, %if.else138
  %70 = phi i32 [ %69, %if.else138 ], [ %.pre442, %for.cond157.preheader.loopexit ]
  %intpt.2.lcssa = phi ptr [ %61, %if.else138 ], [ %incdec.ptr155, %for.cond157.preheader.loopexit ]
  %cmp158.not415 = icmp eq i32 %70, -1
  br i1 %cmp158.not415, label %if.end164, label %for.body160

for.body153:                                      ; preds = %for.body153.preheader, %for.body153
  %71 = phi i32 [ %72, %for.body153 ], [ %68, %for.body153.preheader ]
  %intpt2.2413 = phi ptr [ %incdec.ptr154, %for.body153 ], [ %.393, %for.body153.preheader ]
  %intpt.2412 = phi ptr [ %incdec.ptr155, %for.body153 ], [ %61, %for.body153.preheader ]
  %incdec.ptr154 = getelementptr inbounds i32, ptr %intpt2.2413, i64 1
  %incdec.ptr155 = getelementptr inbounds i32, ptr %intpt.2412, i64 1
  store i32 %71, ptr %intpt.2412, align 4, !tbaa !10
  %72 = load i32, ptr %incdec.ptr154, align 4, !tbaa !10
  %cmp151.not = icmp eq i32 %72, -1
  br i1 %cmp151.not, label %for.cond157.preheader.loopexit, label %for.body153, !llvm.loop !162

for.body160:                                      ; preds = %for.cond157.preheader, %for.body160
  %73 = phi i32 [ %74, %for.body160 ], [ %70, %for.cond157.preheader ]
  %intpt2.3417 = phi ptr [ %incdec.ptr161, %for.body160 ], [ %.394, %for.cond157.preheader ]
  %intpt.3416 = phi ptr [ %incdec.ptr162, %for.body160 ], [ %intpt.2.lcssa, %for.cond157.preheader ]
  %incdec.ptr161 = getelementptr inbounds i32, ptr %intpt2.3417, i64 1
  %incdec.ptr162 = getelementptr inbounds i32, ptr %intpt.3416, i64 1
  store i32 %73, ptr %intpt.3416, align 4, !tbaa !10
  %74 = load i32, ptr %incdec.ptr161, align 4, !tbaa !10
  %cmp158.not = icmp eq i32 %74, -1
  br i1 %cmp158.not, label %if.end164, label %for.body160, !llvm.loop !163

if.end164:                                        ; preds = %for.body160, %for.cond157.preheader, %if.then136
  %intpt.3.lcssa.sink = phi ptr [ %incdec.ptr137, %if.then136 ], [ %intpt.2.lcssa, %for.cond157.preheader ], [ %incdec.ptr162, %for.body160 ]
  store i32 -1, ptr %intpt.3.lcssa.sink, align 4, !tbaa !10
  %mul165 = fmul double %39, 5.000000e-01
  %arrayidx169 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv436
  %75 = load ptr, ptr %arrayidx169, align 8, !tbaa !13
  %76 = load float, ptr %arrayidx61, align 4, !tbaa !17
  %arrayidx175 = getelementptr inbounds double, ptr %75, i64 1
  %77 = insertelement <2 x float> poison, float %44, i64 0
  %78 = insertelement <2 x float> %77, float %76, i64 1
  %79 = fpext <2 x float> %78 to <2 x double>
  store <2 x double> %79, ptr %75, align 8, !tbaa !20
  %80 = load ptr, ptr @veryfastsupg_double_loadtree.tmptmplen, align 8, !tbaa !13
  %arrayidx177 = getelementptr inbounds double, ptr %80, i64 %idxprom66
  store double %mul165, ptr %arrayidx177, align 8, !tbaa !20
  store i32 %32, ptr %arrayidx99, align 4, !tbaa !10
  %81 = load ptr, ptr @veryfastsupg_double_loadtree.ac, align 8, !tbaa !13
  br label %for.body183

for.body183:                                      ; preds = %if.end164, %for.inc218
  %i.4419 = phi i32 [ 0, %if.end164 ], [ %87, %for.inc218 ]
  %cmp184.not = icmp eq i32 %i.4419, %dec.i
  %cmp186.not = icmp eq i32 %i.4419, %dec4.i
  %or.cond395 = or i1 %cmp184.not, %cmp186.not
  br i1 %or.cond395, label %for.inc218, label %if.then188

if.then188:                                       ; preds = %for.body183
  %cmp189 = icmp slt i32 %i.4419, %dec.i
  br i1 %cmp189, label %if.then188.if.end198_crit_edge, label %if.else192

if.then188.if.end198_crit_edge:                   ; preds = %if.then188
  %.pre445 = sext i32 %i.4419 to i64
  br label %if.end198

if.else192:                                       ; preds = %if.then188
  %i.4. = call i32 @llvm.smin.i32(i32 %i.4419, i32 %dec4.i)
  %.i.4 = call i32 @llvm.smax.i32(i32 %i.4419, i32 %dec4.i)
  %.pre443 = sext i32 %i.4419 to i64
  %.pre444 = sext i32 %.i.4 to i64
  %.pre446 = sext i32 %i.4. to i64
  br label %if.end198

if.end198:                                        ; preds = %if.then188.if.end198_crit_edge, %if.else192
  %idxprom203.pre-phi = phi i64 [ %.pre445, %if.then188.if.end198_crit_edge ], [ %.pre446, %if.else192 ]
  %idxprom199.pre-phi = phi i64 [ %.pre445, %if.then188.if.end198_crit_edge ], [ %idxprom66, %if.else192 ]
  %idxprom205.pre-phi = phi i64 [ %idxprom68, %if.then188.if.end198_crit_edge ], [ %.pre444, %if.else192 ]
  %idxprom201.pre-phi = phi i64 [ %idxprom66, %if.then188.if.end198_crit_edge ], [ %.pre443, %if.else192 ]
  %arrayidx200 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom199.pre-phi
  %82 = load ptr, ptr %arrayidx200, align 8, !tbaa !13
  %arrayidx202 = getelementptr inbounds double, ptr %82, i64 %idxprom201.pre-phi
  %83 = load double, ptr %arrayidx202, align 8, !tbaa !20
  %arrayidx204 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom203.pre-phi
  %84 = load ptr, ptr %arrayidx204, align 8, !tbaa !13
  %arrayidx206 = getelementptr inbounds double, ptr %84, i64 %idxprom205.pre-phi
  %85 = load double, ptr %arrayidx206, align 8, !tbaa !20
  %cmp207 = fcmp olt double %83, %85
  %cond = select i1 %cmp207, double %83, double %85
  %add210 = fadd double %83, %85
  %mul211 = fmul double %add210, 5.000000e-01
  %mul212 = fmul double %mul211, 1.000000e-01
  %86 = call double @llvm.fmuladd.f64(double %cond, double 9.000000e-01, double %mul212)
  store double %86, ptr %arrayidx202, align 8, !tbaa !20
  br label %for.inc218

for.inc218:                                       ; preds = %for.body183, %if.end198
  %idxprom219 = sext i32 %i.4419 to i64
  %arrayidx220 = getelementptr inbounds %struct._Achain, ptr %81, i64 %idxprom219
  %87 = load i32, ptr %arrayidx220, align 4, !tbaa !145
  %cmp181.not = icmp eq i32 %87, -1
  br i1 %cmp181.not, label %for.end222, label %for.body183, !llvm.loop !164

for.end222:                                       ; preds = %for.inc218
  %arrayidx224 = getelementptr inbounds %struct._Achain, ptr %81, i64 %idxprom68
  %prev225 = getelementptr inbounds %struct._Achain, ptr %81, i64 %idxprom68, i32 1
  %88 = load i32, ptr %prev225, align 4, !tbaa !149
  %89 = load i32, ptr %arrayidx224, align 4, !tbaa !145
  %idxprom229 = sext i32 %88 to i64
  %arrayidx230 = getelementptr inbounds %struct._Achain, ptr %81, i64 %idxprom229
  store i32 %89, ptr %arrayidx230, align 4, !tbaa !145
  %cmp232.not = icmp eq i32 %89, -1
  br i1 %cmp232.not, label %if.end238, label %if.then234

if.then234:                                       ; preds = %for.end222
  %idxprom235 = sext i32 %89 to i64
  %prev237 = getelementptr inbounds %struct._Achain, ptr %81, i64 %idxprom235, i32 1
  store i32 %88, ptr %prev237, align 4, !tbaa !149
  br label %if.end238

if.end238:                                        ; preds = %if.then234, %for.end222
  %90 = load ptr, ptr @veryfastsupg_double_loadtree.treetmp, align 8, !tbaa !13
  %91 = load ptr, ptr @veryfastsupg_double_loadtree.tree, align 8, !tbaa !13
  %arrayidx240 = getelementptr inbounds ptr, ptr %91, i64 %idxprom66
  %92 = load ptr, ptr %arrayidx240, align 8, !tbaa !13
  %93 = load double, ptr %75, align 8, !tbaa !20
  %arrayidx245 = getelementptr inbounds ptr, ptr %91, i64 %idxprom68
  %94 = load ptr, ptr %arrayidx245, align 8, !tbaa !13
  %95 = load double, ptr %arrayidx175, align 8, !tbaa !20
  %call249 = call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %90, ptr noundef nonnull dereferenceable(1) @.str.16, ptr noundef %92, double noundef %93, ptr noundef %94, double noundef %95) #34
  %96 = load ptr, ptr @veryfastsupg_double_loadtree.tree, align 8, !tbaa !13
  %arrayidx251 = getelementptr inbounds ptr, ptr %96, i64 %idxprom66
  %97 = load ptr, ptr %arrayidx251, align 8, !tbaa !13
  %98 = load ptr, ptr @veryfastsupg_double_loadtree.treetmp, align 8, !tbaa !13
  %call252 = call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %97, ptr noundef nonnull dereferenceable(1) %98) #34
  %indvars.iv.next437 = add nuw nsw i64 %indvars.iv436, 1
  %exitcond440.not = icmp eq i64 %indvars.iv.next437, %wide.trip.count439
  br i1 %exitcond440.not, label %for.end255, label %for.body55, !llvm.loop !165

for.end255:                                       ; preds = %if.end238, %for.end49.thread, %for.end49
  %call256 = call i32 @fclose(ptr noundef nonnull %call)
  %call257 = call noalias ptr @fopen(ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
  %99 = load ptr, ptr @veryfastsupg_double_loadtree.treetmp, align 8, !tbaa !13
  %call258 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef %call257, ptr noundef nonnull @.str.4, ptr noundef %99)
  %call259 = call i32 @fclose(ptr noundef %call257)
  %100 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc391 = call i32 @fputc(i32 10, ptr %100)
  %101 = load ptr, ptr @veryfastsupg_double_loadtree.tmptmplen, align 8, !tbaa !13
  call void @free(ptr noundef %101) #34
  store ptr null, ptr @veryfastsupg_double_loadtree.tmptmplen, align 8, !tbaa !13
  %102 = load ptr, ptr @veryfastsupg_double_loadtree.hist, align 8, !tbaa !13
  call void @free(ptr noundef %102) #34
  store ptr null, ptr @veryfastsupg_double_loadtree.hist, align 8, !tbaa !13
  %103 = load ptr, ptr @veryfastsupg_double_loadtree.ac, align 8, !tbaa !13
  call void @free(ptr noundef %103) #34
  store ptr null, ptr @veryfastsupg_double_loadtree.ac, align 8, !tbaa !13
  %104 = load ptr, ptr @veryfastsupg_double_loadtree.tree, align 8, !tbaa !13
  call void @FreeCharMtx(ptr noundef %104) #34
  %105 = load ptr, ptr @veryfastsupg_double_loadtree.treetmp, align 8, !tbaa !13
  call void @free(ptr noundef %105) #34
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %lenfl) #34
  call void @llvm.lifetime.end.p0(i64 8, ptr nonnull %node) #34
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @veryfastsupg_double_outtree(i32 noundef %nseq, ptr nocapture noundef readonly %eff, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %len, ptr nocapture noundef readonly %name) local_unnamed_addr #12 {
entry:
  store double 9.000000e-01, ptr @sueff1_double, align 8, !tbaa !20
  store double 5.000000e-02, ptr @sueff05_double, align 8, !tbaa !20
  %0 = load i32, ptr @treemethod, align 4, !tbaa !10
  switch i32 %0, label %if.else8 [
    i32 88, label %if.end10
    i32 69, label %if.then2
    i32 113, label %if.then6
  ]

if.then2:                                         ; preds = %entry
  br label %if.end10

if.then6:                                         ; preds = %entry
  br label %if.end10

if.else8:                                         ; preds = %entry
  %1 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.20, i32 noundef %0) #32
  tail call void @exit(i32 noundef 1) #33
  unreachable

if.end10:                                         ; preds = %entry, %if.then2, %if.then6
  %clusterfuncpt.sroa.0.0 = phi ptr [ @cluster_average_double, %if.then2 ], [ @cluster_minimum_double, %if.then6 ], [ @cluster_mix_double, %entry ]
  %2 = load ptr, ptr @veryfastsupg_double_outtree.hist, align 8, !tbaa !13
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %if.then11, label %if.end22

if.then11:                                        ; preds = %if.end10
  %3 = load i32, ptr @njob, align 4, !tbaa !10
  %mul = mul nsw i32 %3, 50
  %call12 = tail call ptr @AllocateCharVec(i32 noundef %mul) #34
  store ptr %call12, ptr @veryfastsupg_double_outtree.treetmp, align 8, !tbaa !13
  %4 = load i32, ptr @njob, align 4, !tbaa !10
  %mul13 = mul nsw i32 %4, 50
  %call14 = tail call ptr @AllocateCharMtx(i32 noundef %4, i32 noundef %mul13) #34
  store ptr %call14, ptr @veryfastsupg_double_outtree.tree, align 8, !tbaa !13
  %5 = load i32, ptr @njob, align 4, !tbaa !10
  %call15 = tail call ptr @AllocateIntVec(i32 noundef %5) #34
  store ptr %call15, ptr @veryfastsupg_double_outtree.hist, align 8, !tbaa !13
  %6 = load i32, ptr @njob, align 4, !tbaa !10
  %conv = sext i32 %6 to i64
  %mul16 = shl nsw i64 %conv, 3
  %call17 = tail call noalias ptr @malloc(i64 noundef %mul16) #35
  store ptr %call17, ptr @veryfastsupg_double_outtree.tmptmplen, align 8, !tbaa !13
  %call20 = tail call noalias ptr @malloc(i64 noundef %mul16) #35
  store ptr %call20, ptr @veryfastsupg_double_outtree.ac, align 8, !tbaa !13
  %call21 = tail call ptr @AllocateCharVec(i32 noundef 30) #34
  store ptr %call21, ptr @veryfastsupg_double_outtree.nametmp, align 8, !tbaa !13
  br label %if.end22

if.end22:                                         ; preds = %if.then11, %if.end10
  %cmp23460 = icmp sgt i32 %nseq, 0
  br i1 %cmp23460, label %for.cond25.preheader.lr.ph, label %for.end76.thread

for.cond25.preheader.lr.ph:                       ; preds = %if.end22
  %call34 = tail call ptr @__ctype_b_loc() #36
  %wide.trip.count = zext i32 %nseq to i64
  br label %for.cond25.preheader

for.cond25.preheader:                             ; preds = %for.cond25.preheader.lr.ph, %for.end57
  %indvars.iv509 = phi i64 [ 0, %for.cond25.preheader.lr.ph ], [ %indvars.iv.next510, %for.end57 ]
  %7 = load ptr, ptr @veryfastsupg_double_outtree.nametmp, align 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(30) %7, i8 0, i64 30, i1 false), !tbaa !5
  br label %for.body33

for.cond65.preheader:                             ; preds = %for.end57
  br i1 %cmp23460, label %for.body68.lr.ph, label %for.end76.thread

for.end76.thread:                                 ; preds = %for.cond65.preheader, %if.end22
  %.pre = load ptr, ptr @veryfastsupg_double_outtree.ac, align 8, !tbaa !13
  %sub77537 = add nsw i32 %nseq, -1
  %idxprom78538 = sext i32 %sub77537 to i64
  %arrayidx79539 = getelementptr inbounds %struct._Achain, ptr %.pre, i64 %idxprom78538
  store i32 -1, ptr %arrayidx79539, align 4, !tbaa !145
  br label %for.end98.thread

for.body68.lr.ph:                                 ; preds = %for.cond65.preheader
  %8 = load ptr, ptr @veryfastsupg_double_outtree.ac, align 8, !tbaa !13
  %wide.trip.count517 = zext i32 %nseq to i64
  %min.iters.check = icmp ult i32 %nseq, 4
  br i1 %min.iters.check, label %for.body68.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body68.lr.ph
  %n.vec = and i64 %wide.trip.count, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.ind = phi <2 x i64> [ <i64 0, i64 1>, %vector.ph ], [ %vec.ind.next, %vector.body ]
  %vec.ind547 = phi <2 x i32> [ <i32 0, i32 1>, %vector.ph ], [ %vec.ind.next550, %vector.body ]
  %9 = or i64 %index, 2
  %10 = trunc <2 x i64> %vec.ind to <2 x i32>
  %11 = add <2 x i32> %10, <i32 1, i32 1>
  %12 = trunc <2 x i64> %vec.ind to <2 x i32>
  %13 = add <2 x i32> %12, <i32 3, i32 3>
  %14 = add <2 x i32> %vec.ind547, <i32 -1, i32 -1>
  %15 = add <2 x i32> %vec.ind547, <i32 1, i32 1>
  %16 = getelementptr inbounds %struct._Achain, ptr %8, i64 %index
  %17 = getelementptr inbounds %struct._Achain, ptr %8, i64 %9
  %interleaved.vec = shufflevector <2 x i32> %11, <2 x i32> %14, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x i32> %interleaved.vec, ptr %16, align 4, !tbaa !10
  %interleaved.vec551 = shufflevector <2 x i32> %13, <2 x i32> %15, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x i32> %interleaved.vec551, ptr %17, align 4, !tbaa !10
  %index.next = add nuw i64 %index, 4
  %vec.ind.next = add <2 x i64> %vec.ind, <i64 4, i64 4>
  %vec.ind.next550 = add <2 x i32> %vec.ind547, <i32 4, i32 4>
  %18 = icmp eq i64 %index.next, %n.vec
  br i1 %18, label %middle.block, label %vector.body, !llvm.loop !166

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count
  br i1 %cmp.n, label %for.end76, label %for.body68.preheader

for.body68.preheader:                             ; preds = %for.body68.lr.ph, %middle.block
  %indvars.iv513.ph = phi i64 [ 0, %for.body68.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body68

for.body33:                                       ; preds = %for.body33, %for.cond25.preheader
  %indvars.iv = phi i64 [ 0, %for.cond25.preheader ], [ %indvars.iv.next.1, %for.body33 ]
  %19 = load ptr, ptr %call34, align 8, !tbaa !13
  %arrayidx38 = getelementptr inbounds [256 x i8], ptr %name, i64 %indvars.iv509, i64 %indvars.iv
  %20 = load i8, ptr %arrayidx38, align 1, !tbaa !5
  %idxprom40 = sext i8 %20 to i64
  %arrayidx41 = getelementptr inbounds i16, ptr %19, i64 %idxprom40
  %21 = load i16, ptr %arrayidx41, align 2, !tbaa !85
  %22 = and i16 %21, 8
  %tobool43.not = icmp eq i16 %22, 0
  %spec.select = select i1 %tobool43.not, i8 95, i8 %20
  %23 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv
  store i8 %spec.select, ptr %23, align 1
  %indvars.iv.next = or i64 %indvars.iv, 1
  %24 = load ptr, ptr %call34, align 8, !tbaa !13
  %arrayidx38.1 = getelementptr inbounds [256 x i8], ptr %name, i64 %indvars.iv509, i64 %indvars.iv.next
  %25 = load i8, ptr %arrayidx38.1, align 1, !tbaa !5
  %idxprom40.1 = sext i8 %25 to i64
  %arrayidx41.1 = getelementptr inbounds i16, ptr %24, i64 %idxprom40.1
  %26 = load i16, ptr %arrayidx41.1, align 2, !tbaa !85
  %27 = and i16 %26, 8
  %tobool43.not.1 = icmp eq i16 %27, 0
  %spec.select.1 = select i1 %tobool43.not.1, i8 95, i8 %25
  %28 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next
  store i8 %spec.select.1, ptr %28, align 1
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %exitcond.not.1 = icmp eq i64 %indvars.iv.next.1, 30
  br i1 %exitcond.not.1, label %for.end57, label %for.body33, !llvm.loop !167

for.end57:                                        ; preds = %for.body33
  %arrayidx58 = getelementptr inbounds i8, ptr %7, i64 30
  store i8 0, ptr %arrayidx58, align 1, !tbaa !5
  %29 = load ptr, ptr @veryfastsupg_double_outtree.tree, align 8, !tbaa !13
  %arrayidx60 = getelementptr inbounds ptr, ptr %29, i64 %indvars.iv509
  %30 = load ptr, ptr %arrayidx60, align 8, !tbaa !13
  %indvars.iv.next510 = add nuw nsw i64 %indvars.iv509, 1
  %add.ptr = getelementptr inbounds i8, ptr %7, i64 1
  %31 = trunc i64 %indvars.iv.next510 to i32
  %call61 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %30, ptr noundef nonnull dereferenceable(1) @.str.11, i32 noundef %31, ptr noundef nonnull %add.ptr) #34
  %exitcond512.not = icmp eq i64 %indvars.iv.next510, %wide.trip.count
  br i1 %exitcond512.not, label %for.cond65.preheader, label %for.cond25.preheader, !llvm.loop !168

for.body68:                                       ; preds = %for.body68.preheader, %for.body68
  %indvars.iv513 = phi i64 [ %indvars.iv.next514, %for.body68 ], [ %indvars.iv513.ph, %for.body68.preheader ]
  %indvars.iv.next514 = add nuw nsw i64 %indvars.iv513, 1
  %arrayidx71 = getelementptr inbounds %struct._Achain, ptr %8, i64 %indvars.iv513
  %32 = trunc i64 %indvars.iv.next514 to i32
  store i32 %32, ptr %arrayidx71, align 4, !tbaa !145
  %prev = getelementptr inbounds %struct._Achain, ptr %8, i64 %indvars.iv513, i32 1
  %33 = trunc i64 %indvars.iv513 to i32
  %34 = add i32 %33, -1
  store i32 %34, ptr %prev, align 4, !tbaa !149
  %exitcond518.not = icmp eq i64 %indvars.iv.next514, %wide.trip.count517
  br i1 %exitcond518.not, label %for.end76, label %for.body68, !llvm.loop !169

for.end76:                                        ; preds = %for.body68, %middle.block
  %sub77 = add nsw i32 %nseq, -1
  %idxprom78 = sext i32 %sub77 to i64
  %arrayidx79 = getelementptr inbounds %struct._Achain, ptr %8, i64 %idxprom78
  store i32 -1, ptr %arrayidx79, align 4, !tbaa !145
  br i1 %cmp23460, label %for.end98, label %for.end98.thread

for.end98.thread:                                 ; preds = %for.end76, %for.end76.thread
  %35 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc544 = tail call i32 @fputc(i32 10, ptr %35)
  br label %for.end301

for.end98:                                        ; preds = %for.end76
  %36 = load ptr, ptr @veryfastsupg_double_outtree.tmptmplen, align 8, !tbaa !13
  %37 = zext i32 %nseq to i64
  %38 = shl nuw nsw i64 %37, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %36, i8 0, i64 %38, i1 false), !tbaa !20
  %39 = load ptr, ptr @veryfastsupg_double_outtree.hist, align 8, !tbaa !13
  %40 = zext i32 %nseq to i64
  %41 = shl nuw nsw i64 %40, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %39, i8 -1, i64 %41, i1 false), !tbaa !10
  %42 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc = tail call i32 @fputc(i32 10, ptr %42)
  %cmp102503.not = icmp eq i32 %nseq, 1
  br i1 %cmp102503.not, label %for.end301, label %for.body104.preheader

for.body104.preheader:                            ; preds = %for.end98
  %wide.trip.count528 = zext i32 %sub77 to i64
  br label %for.body104

for.body104:                                      ; preds = %for.body104.preheader, %if.end284
  %indvars.iv525 = phi i64 [ 0, %for.body104.preheader ], [ %indvars.iv.next526, %if.end284 ]
  %jm.0506 = phi i32 [ -1, %for.body104.preheader ], [ %jm.1.lcssa, %if.end284 ]
  %im.0505 = phi i32 [ -1, %for.body104.preheader ], [ %im.1.lcssa, %if.end284 ]
  %43 = trunc i64 %indvars.iv525 to i32
  %rem = urem i32 %43, 10
  %cmp105 = icmp eq i32 %rem, 0
  br i1 %cmp105, label %if.then107, label %if.end109

if.then107:                                       ; preds = %for.body104
  %44 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call108 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %44, ptr noundef nonnull @.str.24, i32 noundef %43, i32 noundef %nseq) #32
  br label %if.end109

if.end109:                                        ; preds = %if.then107, %for.body104
  %45 = load ptr, ptr @veryfastsupg_double_outtree.ac, align 8, !tbaa !13
  %46 = load i32, ptr %45, align 4, !tbaa !145
  %cmp114.not476 = icmp eq i32 %46, -1
  br i1 %cmp114.not476, label %for.end141, label %for.cond120.preheader

for.cond120.for.cond110.loopexit_crit_edge:       ; preds = %for.body123
  %idxprom111 = sext i32 %48 to i64
  %arrayidx112 = getelementptr inbounds %struct._Achain, ptr %45, i64 %idxprom111
  %47 = load i32, ptr %arrayidx112, align 4, !tbaa !145
  %cmp114.not = icmp eq i32 %47, -1
  br i1 %cmp114.not, label %for.end141, label %for.cond120.preheader, !llvm.loop !170

for.cond120.preheader:                            ; preds = %if.end109, %for.cond120.for.cond110.loopexit_crit_edge
  %48 = phi i32 [ %47, %for.cond120.for.cond110.loopexit_crit_edge ], [ %46, %if.end109 ]
  %idxprom111481 = phi i64 [ %idxprom111, %for.cond120.for.cond110.loopexit_crit_edge ], [ 0, %if.end109 ]
  %i.4480 = phi i32 [ %48, %for.cond120.for.cond110.loopexit_crit_edge ], [ 0, %if.end109 ]
  %jm.1479 = phi i32 [ %jm.3, %for.cond120.for.cond110.loopexit_crit_edge ], [ %jm.0506, %if.end109 ]
  %im.1478 = phi i32 [ %im.3, %for.cond120.for.cond110.loopexit_crit_edge ], [ %im.0505, %if.end109 ]
  %minscore.0477 = phi double [ %minscore.2, %for.cond120.for.cond110.loopexit_crit_edge ], [ 0x40F869FE66666666, %if.end109 ]
  %arrayidx125 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom111481
  %49 = load ptr, ptr %arrayidx125, align 8, !tbaa !13
  br label %for.body123

for.body123:                                      ; preds = %for.cond120.preheader, %for.body123
  %j.2472 = phi i32 [ %48, %for.cond120.preheader ], [ %51, %for.body123 ]
  %jm.2471 = phi i32 [ %jm.1479, %for.cond120.preheader ], [ %jm.3, %for.body123 ]
  %im.2470 = phi i32 [ %im.1478, %for.cond120.preheader ], [ %im.3, %for.body123 ]
  %minscore.1469 = phi double [ %minscore.0477, %for.cond120.preheader ], [ %minscore.2, %for.body123 ]
  %idxprom126 = sext i32 %j.2472 to i64
  %arrayidx127 = getelementptr inbounds double, ptr %49, i64 %idxprom126
  %50 = load double, ptr %arrayidx127, align 8, !tbaa !20
  %cmp128 = fcmp olt double %50, %minscore.1469
  %minscore.2 = select i1 %cmp128, double %50, double %minscore.1469
  %im.3 = select i1 %cmp128, i32 %i.4480, i32 %im.2470
  %jm.3 = select i1 %cmp128, i32 %j.2472, i32 %jm.2471
  %arrayidx134 = getelementptr inbounds %struct._Achain, ptr %45, i64 %idxprom126
  %51 = load i32, ptr %arrayidx134, align 4, !tbaa !145
  %cmp121.not = icmp eq i32 %51, -1
  br i1 %cmp121.not, label %for.cond120.for.cond110.loopexit_crit_edge, label %for.body123, !llvm.loop !171

for.end141:                                       ; preds = %for.cond120.for.cond110.loopexit_crit_edge, %if.end109
  %minscore.0.lcssa = phi double [ 0x40F869FE66666666, %if.end109 ], [ %minscore.2, %for.cond120.for.cond110.loopexit_crit_edge ]
  %im.1.lcssa = phi i32 [ %im.0505, %if.end109 ], [ %im.3, %for.cond120.for.cond110.loopexit_crit_edge ]
  %jm.1.lcssa = phi i32 [ %jm.0506, %if.end109 ], [ %jm.3, %for.cond120.for.cond110.loopexit_crit_edge ]
  %arrayidx143 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv525
  %52 = load ptr, ptr %arrayidx143, align 8, !tbaa !13
  %53 = load ptr, ptr %52, align 8, !tbaa !13
  %54 = load ptr, ptr @veryfastsupg_double_outtree.hist, align 8, !tbaa !13
  %idxprom145 = sext i32 %im.1.lcssa to i64
  %arrayidx146 = getelementptr inbounds i32, ptr %54, i64 %idxprom145
  %55 = load i32, ptr %arrayidx146, align 4, !tbaa !10
  %cmp147 = icmp eq i32 %55, -1
  br i1 %cmp147, label %if.then149, label %if.else150

if.then149:                                       ; preds = %for.end141
  %incdec.ptr = getelementptr inbounds i32, ptr %53, i64 1
  store i32 %im.1.lcssa, ptr %53, align 4, !tbaa !10
  br label %if.end176

if.else150:                                       ; preds = %for.end141
  %idxprom151 = sext i32 %55 to i64
  %arrayidx152 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom151
  %56 = load ptr, ptr %arrayidx152, align 8, !tbaa !13
  %57 = load ptr, ptr %56, align 8, !tbaa !13
  %arrayidx156 = getelementptr inbounds ptr, ptr %56, i64 1
  %58 = load ptr, ptr %arrayidx156, align 8, !tbaa !13
  %59 = load i32, ptr %57, align 4, !tbaa !10
  %60 = load i32, ptr %58, align 4, !tbaa !10
  %cmp157 = icmp sgt i32 %59, %60
  %61 = tail call i32 @llvm.smin.i32(i32 %59, i32 %60)
  %62 = tail call i32 @llvm.smax.i32(i32 %59, i32 %60)
  %.455 = select i1 %cmp157, ptr %57, ptr %58
  %cmp163.not485 = icmp eq i32 %61, -1
  br i1 %cmp163.not485, label %for.cond169.preheader, label %for.body165.preheader

for.body165.preheader:                            ; preds = %if.else150
  %. = select i1 %cmp157, ptr %58, ptr %57
  br label %for.body165

for.cond169.preheader.loopexit:                   ; preds = %for.body165
  %.pre530 = load i32, ptr %.455, align 4, !tbaa !10
  br label %for.cond169.preheader

for.cond169.preheader:                            ; preds = %for.cond169.preheader.loopexit, %if.else150
  %63 = phi i32 [ %62, %if.else150 ], [ %.pre530, %for.cond169.preheader.loopexit ]
  %intpt.0.lcssa = phi ptr [ %53, %if.else150 ], [ %incdec.ptr167, %for.cond169.preheader.loopexit ]
  %cmp170.not489 = icmp eq i32 %63, -1
  br i1 %cmp170.not489, label %if.end176, label %for.body172

for.body165:                                      ; preds = %for.body165.preheader, %for.body165
  %64 = phi i32 [ %65, %for.body165 ], [ %61, %for.body165.preheader ]
  %intpt2.0487 = phi ptr [ %incdec.ptr166, %for.body165 ], [ %., %for.body165.preheader ]
  %intpt.0486 = phi ptr [ %incdec.ptr167, %for.body165 ], [ %53, %for.body165.preheader ]
  %incdec.ptr166 = getelementptr inbounds i32, ptr %intpt2.0487, i64 1
  %incdec.ptr167 = getelementptr inbounds i32, ptr %intpt.0486, i64 1
  store i32 %64, ptr %intpt.0486, align 4, !tbaa !10
  %65 = load i32, ptr %incdec.ptr166, align 4, !tbaa !10
  %cmp163.not = icmp eq i32 %65, -1
  br i1 %cmp163.not, label %for.cond169.preheader.loopexit, label %for.body165, !llvm.loop !172

for.body172:                                      ; preds = %for.cond169.preheader, %for.body172
  %66 = phi i32 [ %67, %for.body172 ], [ %63, %for.cond169.preheader ]
  %intpt2.1491 = phi ptr [ %incdec.ptr173, %for.body172 ], [ %.455, %for.cond169.preheader ]
  %intpt.1490 = phi ptr [ %incdec.ptr174, %for.body172 ], [ %intpt.0.lcssa, %for.cond169.preheader ]
  %incdec.ptr173 = getelementptr inbounds i32, ptr %intpt2.1491, i64 1
  %incdec.ptr174 = getelementptr inbounds i32, ptr %intpt.1490, i64 1
  store i32 %66, ptr %intpt.1490, align 4, !tbaa !10
  %67 = load i32, ptr %incdec.ptr173, align 4, !tbaa !10
  %cmp170.not = icmp eq i32 %67, -1
  br i1 %cmp170.not, label %if.end176, label %for.body172, !llvm.loop !173

if.end176:                                        ; preds = %for.body172, %for.cond169.preheader, %if.then149
  %intpt.1.lcssa.sink = phi ptr [ %incdec.ptr, %if.then149 ], [ %intpt.0.lcssa, %for.cond169.preheader ], [ %incdec.ptr174, %for.body172 ]
  store i32 -1, ptr %intpt.1.lcssa.sink, align 4, !tbaa !10
  %arrayidx179 = getelementptr inbounds ptr, ptr %52, i64 1
  %68 = load ptr, ptr %arrayidx179, align 8, !tbaa !13
  %idxprom180 = sext i32 %jm.1.lcssa to i64
  %arrayidx181 = getelementptr inbounds i32, ptr %54, i64 %idxprom180
  %69 = load i32, ptr %arrayidx181, align 4, !tbaa !10
  %cmp182 = icmp eq i32 %69, -1
  br i1 %cmp182, label %if.then184, label %if.else186

if.then184:                                       ; preds = %if.end176
  %incdec.ptr185 = getelementptr inbounds i32, ptr %68, i64 1
  store i32 %jm.1.lcssa, ptr %68, align 4, !tbaa !10
  br label %if.end212

if.else186:                                       ; preds = %if.end176
  %idxprom187 = sext i32 %69 to i64
  %arrayidx188 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom187
  %70 = load ptr, ptr %arrayidx188, align 8, !tbaa !13
  %71 = load ptr, ptr %70, align 8, !tbaa !13
  %arrayidx192 = getelementptr inbounds ptr, ptr %70, i64 1
  %72 = load ptr, ptr %arrayidx192, align 8, !tbaa !13
  %73 = load i32, ptr %71, align 4, !tbaa !10
  %74 = load i32, ptr %72, align 4, !tbaa !10
  %cmp193 = icmp sgt i32 %73, %74
  %75 = tail call i32 @llvm.smin.i32(i32 %73, i32 %74)
  %76 = tail call i32 @llvm.smax.i32(i32 %73, i32 %74)
  %.457 = select i1 %cmp193, ptr %71, ptr %72
  %cmp199.not493 = icmp eq i32 %75, -1
  br i1 %cmp199.not493, label %for.cond205.preheader, label %for.body201.preheader

for.body201.preheader:                            ; preds = %if.else186
  %.456 = select i1 %cmp193, ptr %72, ptr %71
  br label %for.body201

for.cond205.preheader.loopexit:                   ; preds = %for.body201
  %.pre531 = load i32, ptr %.457, align 4, !tbaa !10
  br label %for.cond205.preheader

for.cond205.preheader:                            ; preds = %for.cond205.preheader.loopexit, %if.else186
  %77 = phi i32 [ %76, %if.else186 ], [ %.pre531, %for.cond205.preheader.loopexit ]
  %intpt.2.lcssa = phi ptr [ %68, %if.else186 ], [ %incdec.ptr203, %for.cond205.preheader.loopexit ]
  %cmp206.not497 = icmp eq i32 %77, -1
  br i1 %cmp206.not497, label %if.end212, label %for.body208

for.body201:                                      ; preds = %for.body201.preheader, %for.body201
  %78 = phi i32 [ %79, %for.body201 ], [ %75, %for.body201.preheader ]
  %intpt2.2495 = phi ptr [ %incdec.ptr202, %for.body201 ], [ %.456, %for.body201.preheader ]
  %intpt.2494 = phi ptr [ %incdec.ptr203, %for.body201 ], [ %68, %for.body201.preheader ]
  %incdec.ptr202 = getelementptr inbounds i32, ptr %intpt2.2495, i64 1
  %incdec.ptr203 = getelementptr inbounds i32, ptr %intpt.2494, i64 1
  store i32 %78, ptr %intpt.2494, align 4, !tbaa !10
  %79 = load i32, ptr %incdec.ptr202, align 4, !tbaa !10
  %cmp199.not = icmp eq i32 %79, -1
  br i1 %cmp199.not, label %for.cond205.preheader.loopexit, label %for.body201, !llvm.loop !174

for.body208:                                      ; preds = %for.cond205.preheader, %for.body208
  %80 = phi i32 [ %81, %for.body208 ], [ %77, %for.cond205.preheader ]
  %intpt2.3499 = phi ptr [ %incdec.ptr209, %for.body208 ], [ %.457, %for.cond205.preheader ]
  %intpt.3498 = phi ptr [ %incdec.ptr210, %for.body208 ], [ %intpt.2.lcssa, %for.cond205.preheader ]
  %incdec.ptr209 = getelementptr inbounds i32, ptr %intpt2.3499, i64 1
  %incdec.ptr210 = getelementptr inbounds i32, ptr %intpt.3498, i64 1
  store i32 %80, ptr %intpt.3498, align 4, !tbaa !10
  %81 = load i32, ptr %incdec.ptr209, align 4, !tbaa !10
  %cmp206.not = icmp eq i32 %81, -1
  br i1 %cmp206.not, label %if.end212, label %for.body208, !llvm.loop !175

if.end212:                                        ; preds = %for.body208, %for.cond205.preheader, %if.then184
  %intpt.3.lcssa.sink = phi ptr [ %incdec.ptr185, %if.then184 ], [ %intpt.2.lcssa, %for.cond205.preheader ], [ %incdec.ptr210, %for.body208 ]
  store i32 -1, ptr %intpt.3.lcssa.sink, align 4, !tbaa !10
  %mul213 = fmul double %minscore.0.lcssa, 5.000000e-01
  %82 = load ptr, ptr @veryfastsupg_double_outtree.tmptmplen, align 8, !tbaa !13
  %arrayidx215 = getelementptr inbounds double, ptr %82, i64 %idxprom145
  %83 = load double, ptr %arrayidx215, align 8, !tbaa !20
  %sub216 = fsub double %mul213, %83
  %arrayidx218 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv525
  %84 = load ptr, ptr %arrayidx218, align 8, !tbaa !13
  store double %sub216, ptr %84, align 8, !tbaa !20
  %arrayidx221 = getelementptr inbounds double, ptr %82, i64 %idxprom180
  %85 = load double, ptr %arrayidx221, align 8, !tbaa !20
  %sub222 = fsub double %mul213, %85
  %arrayidx225 = getelementptr inbounds double, ptr %84, i64 1
  store double %sub222, ptr %arrayidx225, align 8, !tbaa !20
  store double %mul213, ptr %arrayidx215, align 8, !tbaa !20
  store i32 %43, ptr %arrayidx146, align 4, !tbaa !10
  br label %for.body233

for.body233:                                      ; preds = %if.end212, %for.inc264
  %86 = phi ptr [ %45, %if.end212 ], [ %92, %for.inc264 ]
  %i.5501 = phi i32 [ 0, %if.end212 ], [ %93, %for.inc264 ]
  %cmp234.not = icmp eq i32 %i.5501, %im.1.lcssa
  %cmp236.not = icmp eq i32 %i.5501, %jm.1.lcssa
  %or.cond = select i1 %cmp234.not, i1 true, i1 %cmp236.not
  br i1 %or.cond, label %for.inc264, label %if.then238

if.then238:                                       ; preds = %for.body233
  %cmp239 = icmp slt i32 %i.5501, %im.1.lcssa
  br i1 %cmp239, label %if.then238.if.end248_crit_edge, label %if.else242

if.then238.if.end248_crit_edge:                   ; preds = %if.then238
  %.pre535 = sext i32 %i.5501 to i64
  br label %if.end248

if.else242:                                       ; preds = %if.then238
  %jm.1.i.5 = tail call i32 @llvm.smax.i32(i32 %i.5501, i32 %jm.1.lcssa)
  %i.5.jm.1 = tail call i32 @llvm.smin.i32(i32 %i.5501, i32 %jm.1.lcssa)
  %.pre532 = sext i32 %i.5501 to i64
  %.pre533 = sext i32 %jm.1.i.5 to i64
  %.pre536 = sext i32 %i.5.jm.1 to i64
  br label %if.end248

if.end248:                                        ; preds = %if.then238.if.end248_crit_edge, %if.else242
  %idxprom253.pre-phi = phi i64 [ %.pre535, %if.then238.if.end248_crit_edge ], [ %.pre536, %if.else242 ]
  %idxprom249.pre-phi = phi i64 [ %.pre535, %if.then238.if.end248_crit_edge ], [ %idxprom145, %if.else242 ]
  %idxprom255.pre-phi = phi i64 [ %idxprom180, %if.then238.if.end248_crit_edge ], [ %.pre533, %if.else242 ]
  %idxprom251.pre-phi = phi i64 [ %idxprom145, %if.then238.if.end248_crit_edge ], [ %.pre532, %if.else242 ]
  %arrayidx250 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom249.pre-phi
  %87 = load ptr, ptr %arrayidx250, align 8, !tbaa !13
  %arrayidx252 = getelementptr inbounds double, ptr %87, i64 %idxprom251.pre-phi
  %88 = load double, ptr %arrayidx252, align 8, !tbaa !20
  %arrayidx254 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom253.pre-phi
  %89 = load ptr, ptr %arrayidx254, align 8, !tbaa !13
  %arrayidx256 = getelementptr inbounds double, ptr %89, i64 %idxprom255.pre-phi
  %90 = load double, ptr %arrayidx256, align 8, !tbaa !20
  %call258 = tail call double %clusterfuncpt.sroa.0.0(double noundef %88, double noundef %90) #34, !callees !176
  %91 = load ptr, ptr %arrayidx250, align 8, !tbaa !13
  %arrayidx262 = getelementptr inbounds double, ptr %91, i64 %idxprom251.pre-phi
  store double %call258, ptr %arrayidx262, align 8, !tbaa !20
  %.pre534 = load ptr, ptr @veryfastsupg_double_outtree.ac, align 8, !tbaa !13
  br label %for.inc264

for.inc264:                                       ; preds = %for.body233, %if.end248
  %92 = phi ptr [ %86, %for.body233 ], [ %.pre534, %if.end248 ]
  %idxprom265 = sext i32 %i.5501 to i64
  %arrayidx266 = getelementptr inbounds %struct._Achain, ptr %92, i64 %idxprom265
  %93 = load i32, ptr %arrayidx266, align 4, !tbaa !145
  %cmp231.not = icmp eq i32 %93, -1
  br i1 %cmp231.not, label %for.end268, label %for.body233, !llvm.loop !177

for.end268:                                       ; preds = %for.inc264
  %arrayidx270 = getelementptr inbounds %struct._Achain, ptr %92, i64 %idxprom180
  %prev271 = getelementptr inbounds %struct._Achain, ptr %92, i64 %idxprom180, i32 1
  %94 = load i32, ptr %prev271, align 4, !tbaa !149
  %95 = load i32, ptr %arrayidx270, align 4, !tbaa !145
  %idxprom275 = sext i32 %94 to i64
  %arrayidx276 = getelementptr inbounds %struct._Achain, ptr %92, i64 %idxprom275
  store i32 %95, ptr %arrayidx276, align 4, !tbaa !145
  %cmp278.not = icmp eq i32 %95, -1
  br i1 %cmp278.not, label %if.end284, label %if.then280

if.then280:                                       ; preds = %for.end268
  %idxprom281 = sext i32 %95 to i64
  %prev283 = getelementptr inbounds %struct._Achain, ptr %92, i64 %idxprom281, i32 1
  store i32 %94, ptr %prev283, align 4, !tbaa !149
  br label %if.end284

if.end284:                                        ; preds = %if.then280, %for.end268
  %96 = load ptr, ptr @veryfastsupg_double_outtree.treetmp, align 8, !tbaa !13
  %97 = load ptr, ptr @veryfastsupg_double_outtree.tree, align 8, !tbaa !13
  %arrayidx286 = getelementptr inbounds ptr, ptr %97, i64 %idxprom145
  %98 = load ptr, ptr %arrayidx286, align 8, !tbaa !13
  %99 = load ptr, ptr %arrayidx218, align 8, !tbaa !13
  %100 = load double, ptr %99, align 8, !tbaa !20
  %arrayidx291 = getelementptr inbounds ptr, ptr %97, i64 %idxprom180
  %101 = load ptr, ptr %arrayidx291, align 8, !tbaa !13
  %arrayidx294 = getelementptr inbounds double, ptr %99, i64 1
  %102 = load double, ptr %arrayidx294, align 8, !tbaa !20
  %call295 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) %96, ptr noundef nonnull dereferenceable(1) @.str.16, ptr noundef %98, double noundef %100, ptr noundef %101, double noundef %102) #34
  %103 = load ptr, ptr @veryfastsupg_double_outtree.tree, align 8, !tbaa !13
  %arrayidx297 = getelementptr inbounds ptr, ptr %103, i64 %idxprom145
  %104 = load ptr, ptr %arrayidx297, align 8, !tbaa !13
  %105 = load ptr, ptr @veryfastsupg_double_outtree.treetmp, align 8, !tbaa !13
  %call298 = tail call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %104, ptr noundef nonnull dereferenceable(1) %105) #34
  %indvars.iv.next526 = add nuw nsw i64 %indvars.iv525, 1
  %exitcond529.not = icmp eq i64 %indvars.iv.next526, %wide.trip.count528
  br i1 %exitcond529.not, label %for.end301, label %for.body104, !llvm.loop !178

for.end301:                                       ; preds = %if.end284, %for.end98.thread, %for.end98
  %call302 = tail call noalias ptr @fopen(ptr noundef nonnull @.str.17, ptr noundef nonnull @.str.18)
  %106 = load ptr, ptr @veryfastsupg_double_outtree.treetmp, align 8, !tbaa !13
  %call303 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %call302, ptr noundef nonnull @.str.4, ptr noundef %106)
  %call304 = tail call i32 @fclose(ptr noundef %call302)
  %107 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc454 = tail call i32 @fputc(i32 10, ptr %107)
  %108 = load ptr, ptr @veryfastsupg_double_outtree.tmptmplen, align 8, !tbaa !13
  tail call void @free(ptr noundef %108) #34
  store ptr null, ptr @veryfastsupg_double_outtree.tmptmplen, align 8, !tbaa !13
  %109 = load ptr, ptr @veryfastsupg_double_outtree.hist, align 8, !tbaa !13
  tail call void @free(ptr noundef %109) #34
  store ptr null, ptr @veryfastsupg_double_outtree.hist, align 8, !tbaa !13
  %110 = load ptr, ptr @veryfastsupg_double_outtree.ac, align 8, !tbaa !13
  tail call void @free(ptr noundef %110) #34
  store ptr null, ptr @veryfastsupg_double_outtree.ac, align 8, !tbaa !13
  %111 = load ptr, ptr @veryfastsupg_double_outtree.tree, align 8, !tbaa !13
  tail call void @FreeCharMtx(ptr noundef %111) #34
  %112 = load ptr, ptr @veryfastsupg_double_outtree.treetmp, align 8, !tbaa !13
  tail call void @free(ptr noundef %112) #34
  %113 = load ptr, ptr @veryfastsupg_double_outtree.nametmp, align 8, !tbaa !13
  tail call void @free(ptr noundef %113) #34
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable
define internal double @cluster_mix_double(double noundef %d1, double noundef %d2) unnamed_addr #19 {
entry:
  %cmp = fcmp olt double %d1, %d2
  %cond = select i1 %cmp, double %d1, double %d2
  %0 = load double, ptr @sueff1_double, align 8, !tbaa !20
  %add = fadd double %d1, %d2
  %1 = load double, ptr @sueff05_double, align 8, !tbaa !20
  %mul1 = fmul double %add, %1
  %2 = tail call double @llvm.fmuladd.f64(double %cond, double %0, double %mul1)
  ret double %2
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define internal double @cluster_average_double(double noundef %d1, double noundef %d2) unnamed_addr #20 {
entry:
  %add = fadd double %d1, %d2
  %mul = fmul double %add, 5.000000e-01
  ret double %mul
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define internal double @cluster_minimum_double(double noundef %d1, double noundef %d2) unnamed_addr #20 {
entry:
  %cmp = fcmp olt double %d1, %d2
  %cond = select i1 %cmp, double %d1, double %d2
  ret double %cond
}

; Function Attrs: nounwind uwtable
define dso_local void @veryfastsupg(i32 noundef %nseq, ptr nocapture noundef readonly %oeff, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %len) local_unnamed_addr #12 {
entry:
  %0 = load ptr, ptr @veryfastsupg.eff, align 8, !tbaa !13
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, ptr @njob, align 4, !tbaa !10
  %call = tail call ptr @AllocateIntMtx(i32 noundef %1, i32 noundef %1) #34
  store ptr %call, ptr @veryfastsupg.eff, align 8, !tbaa !13
  %2 = load i32, ptr @njob, align 4, !tbaa !10
  %call1 = tail call ptr @AllocateIntVec(i32 noundef %2) #34
  store ptr %call1, ptr @veryfastsupg.hist, align 8, !tbaa !13
  %3 = load i32, ptr @njob, align 4, !tbaa !10
  %conv = sext i32 %3 to i64
  %mul = shl nsw i64 %conv, 3
  %call2 = tail call noalias ptr @malloc(i64 noundef %mul) #35
  store ptr %call2, ptr @veryfastsupg.tmptmplen, align 8, !tbaa !13
  %call5 = tail call noalias ptr @malloc(i64 noundef %mul) #35
  store ptr %call5, ptr @veryfastsupg.ac, align 8, !tbaa !13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp388 = icmp sgt i32 %nseq, 0
  br i1 %cmp388, label %for.cond7.preheader.lr.ph, label %for.end32.thread

for.cond7.preheader.lr.ph:                        ; preds = %if.end
  %4 = load ptr, ptr @veryfastsupg.eff, align 8
  %wide.trip.count440 = zext i32 %nseq to i64
  %min.iters.check = icmp ult i32 %nseq, 4
  %n.vec = and i64 %wide.trip.count440, 4294967292
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count440
  br label %for.cond7.preheader.us

for.cond7.preheader.us:                           ; preds = %for.cond7.for.inc19_crit_edge.us, %for.cond7.preheader.lr.ph
  %indvars.iv437 = phi i64 [ %indvars.iv.next438, %for.cond7.for.inc19_crit_edge.us ], [ 0, %for.cond7.preheader.lr.ph ]
  %arrayidx.us = getelementptr inbounds ptr, ptr %oeff, i64 %indvars.iv437
  %5 = load ptr, ptr %arrayidx.us, align 8, !tbaa !13
  %arrayidx16.us = getelementptr inbounds ptr, ptr %4, i64 %indvars.iv437
  %6 = load ptr, ptr %arrayidx16.us, align 8, !tbaa !13
  br i1 %min.iters.check, label %for.body10.us.preheader, label %vector.body

vector.body:                                      ; preds = %for.cond7.preheader.us, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.cond7.preheader.us ]
  %7 = getelementptr inbounds double, ptr %5, i64 %index
  %wide.load = load <2 x double>, ptr %7, align 8, !tbaa !20
  %8 = getelementptr inbounds double, ptr %7, i64 2
  %wide.load475 = load <2 x double>, ptr %8, align 8, !tbaa !20
  %9 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %wide.load, <2 x double> <double 1.000000e+06, double 1.000000e+06>, <2 x double> <double 5.000000e-01, double 5.000000e-01>)
  %10 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %wide.load475, <2 x double> <double 1.000000e+06, double 1.000000e+06>, <2 x double> <double 5.000000e-01, double 5.000000e-01>)
  %11 = fptosi <2 x double> %9 to <2 x i32>
  %12 = fptosi <2 x double> %10 to <2 x i32>
  %13 = getelementptr inbounds i32, ptr %6, i64 %index
  store <2 x i32> %11, ptr %13, align 4, !tbaa !10
  %14 = getelementptr inbounds i32, ptr %13, i64 2
  store <2 x i32> %12, ptr %14, align 4, !tbaa !10
  %index.next = add nuw i64 %index, 4
  %15 = icmp eq i64 %index.next, %n.vec
  br i1 %15, label %middle.block, label %vector.body, !llvm.loop !179

middle.block:                                     ; preds = %vector.body
  br i1 %cmp.n, label %for.cond7.for.inc19_crit_edge.us, label %for.body10.us.preheader

for.body10.us.preheader:                          ; preds = %for.cond7.preheader.us, %middle.block
  %indvars.iv.ph = phi i64 [ 0, %for.cond7.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body10.us

for.body10.us:                                    ; preds = %for.body10.us.preheader, %for.body10.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body10.us ], [ %indvars.iv.ph, %for.body10.us.preheader ]
  %arrayidx12.us = getelementptr inbounds double, ptr %5, i64 %indvars.iv
  %16 = load double, ptr %arrayidx12.us, align 8, !tbaa !20
  %17 = tail call double @llvm.fmuladd.f64(double %16, double 1.000000e+06, double 5.000000e-01)
  %conv14.us = fptosi double %17 to i32
  %arrayidx18.us = getelementptr inbounds i32, ptr %6, i64 %indvars.iv
  store i32 %conv14.us, ptr %arrayidx18.us, align 4, !tbaa !10
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count440
  br i1 %exitcond.not, label %for.cond7.for.inc19_crit_edge.us, label %for.body10.us, !llvm.loop !180

for.cond7.for.inc19_crit_edge.us:                 ; preds = %for.body10.us, %middle.block
  %indvars.iv.next438 = add nuw nsw i64 %indvars.iv437, 1
  %exitcond441.not = icmp eq i64 %indvars.iv.next438, %wide.trip.count440
  br i1 %exitcond441.not, label %for.cond22.preheader, label %for.cond7.preheader.us, !llvm.loop !181

for.cond22.preheader:                             ; preds = %for.cond7.for.inc19_crit_edge.us
  br i1 %cmp388, label %for.body25.lr.ph, label %for.end32.thread

for.end32.thread:                                 ; preds = %for.cond22.preheader, %if.end
  %.pre = load ptr, ptr @veryfastsupg.ac, align 8, !tbaa !13
  %sub33466 = add nsw i32 %nseq, -1
  %idxprom34467 = sext i32 %sub33466 to i64
  %arrayidx35468 = getelementptr inbounds %struct._Achain, ptr %.pre, i64 %idxprom34467
  store i32 -1, ptr %arrayidx35468, align 4, !tbaa !145
  br label %for.end54.thread

for.body25.lr.ph:                                 ; preds = %for.cond22.preheader
  %18 = load ptr, ptr @veryfastsupg.ac, align 8, !tbaa !13
  %wide.trip.count446 = zext i32 %nseq to i64
  %min.iters.check478 = icmp ult i32 %nseq, 4
  br i1 %min.iters.check478, label %for.body25.preheader, label %vector.ph479

vector.ph479:                                     ; preds = %for.body25.lr.ph
  %n.vec481 = and i64 %wide.trip.count440, 4294967292
  br label %vector.body484

vector.body484:                                   ; preds = %vector.body484, %vector.ph479
  %index485 = phi i64 [ 0, %vector.ph479 ], [ %index.next492, %vector.body484 ]
  %vec.ind = phi <2 x i64> [ <i64 0, i64 1>, %vector.ph479 ], [ %vec.ind.next, %vector.body484 ]
  %vec.ind487 = phi <2 x i32> [ <i32 0, i32 1>, %vector.ph479 ], [ %vec.ind.next490, %vector.body484 ]
  %19 = or i64 %index485, 2
  %20 = trunc <2 x i64> %vec.ind to <2 x i32>
  %21 = add <2 x i32> %20, <i32 1, i32 1>
  %22 = trunc <2 x i64> %vec.ind to <2 x i32>
  %23 = add <2 x i32> %22, <i32 3, i32 3>
  %24 = add <2 x i32> %vec.ind487, <i32 -1, i32 -1>
  %25 = add <2 x i32> %vec.ind487, <i32 1, i32 1>
  %26 = getelementptr inbounds %struct._Achain, ptr %18, i64 %index485
  %27 = getelementptr inbounds %struct._Achain, ptr %18, i64 %19
  %interleaved.vec = shufflevector <2 x i32> %21, <2 x i32> %24, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x i32> %interleaved.vec, ptr %26, align 4, !tbaa !10
  %interleaved.vec491 = shufflevector <2 x i32> %23, <2 x i32> %25, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x i32> %interleaved.vec491, ptr %27, align 4, !tbaa !10
  %index.next492 = add nuw i64 %index485, 4
  %vec.ind.next = add <2 x i64> %vec.ind, <i64 4, i64 4>
  %vec.ind.next490 = add <2 x i32> %vec.ind487, <i32 4, i32 4>
  %28 = icmp eq i64 %index.next492, %n.vec481
  br i1 %28, label %middle.block476, label %vector.body484, !llvm.loop !182

middle.block476:                                  ; preds = %vector.body484
  %cmp.n483 = icmp eq i64 %n.vec481, %wide.trip.count440
  br i1 %cmp.n483, label %for.end32, label %for.body25.preheader

for.body25.preheader:                             ; preds = %for.body25.lr.ph, %middle.block476
  %indvars.iv442.ph = phi i64 [ 0, %for.body25.lr.ph ], [ %n.vec481, %middle.block476 ]
  br label %for.body25

for.body25:                                       ; preds = %for.body25.preheader, %for.body25
  %indvars.iv442 = phi i64 [ %indvars.iv.next443, %for.body25 ], [ %indvars.iv442.ph, %for.body25.preheader ]
  %indvars.iv.next443 = add nuw nsw i64 %indvars.iv442, 1
  %arrayidx27 = getelementptr inbounds %struct._Achain, ptr %18, i64 %indvars.iv442
  %29 = trunc i64 %indvars.iv.next443 to i32
  store i32 %29, ptr %arrayidx27, align 4, !tbaa !145
  %prev = getelementptr inbounds %struct._Achain, ptr %18, i64 %indvars.iv442, i32 1
  %30 = trunc i64 %indvars.iv442 to i32
  %31 = add i32 %30, -1
  store i32 %31, ptr %prev, align 4, !tbaa !149
  %exitcond447.not = icmp eq i64 %indvars.iv.next443, %wide.trip.count446
  br i1 %exitcond447.not, label %for.end32, label %for.body25, !llvm.loop !183

for.end32:                                        ; preds = %for.body25, %middle.block476
  %sub33 = add nsw i32 %nseq, -1
  %idxprom34 = sext i32 %sub33 to i64
  %arrayidx35 = getelementptr inbounds %struct._Achain, ptr %18, i64 %idxprom34
  store i32 -1, ptr %arrayidx35, align 4, !tbaa !145
  br i1 %cmp388, label %for.end54, label %for.end54.thread

for.end54.thread:                                 ; preds = %for.end32, %for.end32.thread
  %32 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc473 = tail call i32 @fputc(i32 10, ptr %32)
  br label %for.end54.for.end250_crit_edge

for.end54:                                        ; preds = %for.end32
  %33 = load ptr, ptr @veryfastsupg.tmptmplen, align 8, !tbaa !13
  %34 = zext i32 %nseq to i64
  %35 = shl nuw nsw i64 %34, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %33, i8 0, i64 %35, i1 false), !tbaa !20
  %36 = load ptr, ptr @veryfastsupg.hist, align 8, !tbaa !13
  %37 = zext i32 %nseq to i64
  %38 = shl nuw nsw i64 %37, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %36, i8 -1, i64 %38, i1 false), !tbaa !10
  %39 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc = tail call i32 @fputc(i32 10, ptr %39)
  %cmp58432.not = icmp eq i32 %nseq, 1
  br i1 %cmp58432.not, label %for.end54.for.end250_crit_edge, label %for.body60.preheader

for.end54.for.end250_crit_edge:                   ; preds = %for.end54.thread, %for.end54
  %.pre463 = load ptr, ptr @veryfastsupg.eff, align 8, !tbaa !13
  br label %for.end250

for.body60.preheader:                             ; preds = %for.end54
  %wide.trip.count457 = zext i32 %sub33 to i64
  br label %for.body60

for.body60:                                       ; preds = %for.body60.preheader, %for.inc248
  %indvars.iv454 = phi i64 [ 0, %for.body60.preheader ], [ %indvars.iv.next455, %for.inc248 ]
  %jm.0435 = phi i32 [ -1, %for.body60.preheader ], [ %jm.1.lcssa, %for.inc248 ]
  %im.0434 = phi i32 [ -1, %for.body60.preheader ], [ %im.1.lcssa, %for.inc248 ]
  %40 = trunc i64 %indvars.iv454 to i32
  %rem = urem i32 %40, 10
  %cmp61 = icmp eq i32 %rem, 0
  br i1 %cmp61, label %if.then63, label %if.end65

if.then63:                                        ; preds = %for.body60
  %41 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call64 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %41, ptr noundef nonnull @.str.24, i32 noundef %40, i32 noundef %nseq) #32
  br label %if.end65

if.end65:                                         ; preds = %if.then63, %for.body60
  %42 = load ptr, ptr @veryfastsupg.ac, align 8, !tbaa !13
  %43 = load i32, ptr %42, align 4, !tbaa !145
  %cmp70.not404 = icmp eq i32 %43, -1
  br i1 %cmp70.not404, label %for.end97, label %for.cond76.preheader.lr.ph

for.cond76.preheader.lr.ph:                       ; preds = %if.end65
  %44 = load ptr, ptr @veryfastsupg.eff, align 8, !tbaa !13
  br label %for.cond76.preheader

for.cond76.for.cond66.loopexit_crit_edge:         ; preds = %for.body79
  %idxprom67 = sext i32 %46 to i64
  %arrayidx68 = getelementptr inbounds %struct._Achain, ptr %42, i64 %idxprom67
  %45 = load i32, ptr %arrayidx68, align 4, !tbaa !145
  %cmp70.not = icmp eq i32 %45, -1
  br i1 %cmp70.not, label %for.end97, label %for.cond76.preheader, !llvm.loop !184

for.cond76.preheader:                             ; preds = %for.cond76.preheader.lr.ph, %for.cond76.for.cond66.loopexit_crit_edge
  %46 = phi i32 [ %43, %for.cond76.preheader.lr.ph ], [ %45, %for.cond76.for.cond66.loopexit_crit_edge ]
  %idxprom67409 = phi i64 [ 0, %for.cond76.preheader.lr.ph ], [ %idxprom67, %for.cond76.for.cond66.loopexit_crit_edge ]
  %i.4408 = phi i32 [ 0, %for.cond76.preheader.lr.ph ], [ %46, %for.cond76.for.cond66.loopexit_crit_edge ]
  %jm.1407 = phi i32 [ %jm.0435, %for.cond76.preheader.lr.ph ], [ %jm.3, %for.cond76.for.cond66.loopexit_crit_edge ]
  %im.1406 = phi i32 [ %im.0434, %for.cond76.preheader.lr.ph ], [ %im.3, %for.cond76.for.cond66.loopexit_crit_edge ]
  %minscore.0405 = phi i32 [ 4000000, %for.cond76.preheader.lr.ph ], [ %minscore.2, %for.cond76.for.cond66.loopexit_crit_edge ]
  %arrayidx81 = getelementptr inbounds ptr, ptr %44, i64 %idxprom67409
  %47 = load ptr, ptr %arrayidx81, align 8, !tbaa !13
  br label %for.body79

for.body79:                                       ; preds = %for.cond76.preheader, %for.body79
  %j.1400 = phi i32 [ %46, %for.cond76.preheader ], [ %49, %for.body79 ]
  %jm.2399 = phi i32 [ %jm.1407, %for.cond76.preheader ], [ %jm.3, %for.body79 ]
  %im.2398 = phi i32 [ %im.1406, %for.cond76.preheader ], [ %im.3, %for.body79 ]
  %minscore.1397 = phi i32 [ %minscore.0405, %for.cond76.preheader ], [ %minscore.2, %for.body79 ]
  %idxprom82 = sext i32 %j.1400 to i64
  %arrayidx83 = getelementptr inbounds i32, ptr %47, i64 %idxprom82
  %48 = load i32, ptr %arrayidx83, align 4, !tbaa !10
  %cmp84 = icmp slt i32 %48, %minscore.1397
  %minscore.2 = tail call i32 @llvm.smin.i32(i32 %48, i32 %minscore.1397)
  %im.3 = select i1 %cmp84, i32 %i.4408, i32 %im.2398
  %jm.3 = select i1 %cmp84, i32 %j.1400, i32 %jm.2399
  %arrayidx90 = getelementptr inbounds %struct._Achain, ptr %42, i64 %idxprom82
  %49 = load i32, ptr %arrayidx90, align 4, !tbaa !145
  %cmp77.not = icmp eq i32 %49, -1
  br i1 %cmp77.not, label %for.cond76.for.cond66.loopexit_crit_edge, label %for.body79, !llvm.loop !185

for.end97:                                        ; preds = %for.cond76.for.cond66.loopexit_crit_edge, %if.end65
  %minscore.0.lcssa = phi i32 [ 4000000, %if.end65 ], [ %minscore.2, %for.cond76.for.cond66.loopexit_crit_edge ]
  %im.1.lcssa = phi i32 [ %im.0434, %if.end65 ], [ %im.3, %for.cond76.for.cond66.loopexit_crit_edge ]
  %jm.1.lcssa = phi i32 [ %jm.0435, %if.end65 ], [ %jm.3, %for.cond76.for.cond66.loopexit_crit_edge ]
  %conv98 = sitofp i32 %minscore.0.lcssa to double
  %mul99 = fmul double %conv98, 5.000000e-01
  %div = fdiv double %mul99, 1.000000e+06
  %arrayidx101 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv454
  %50 = load ptr, ptr %arrayidx101, align 8, !tbaa !13
  %51 = load ptr, ptr %50, align 8, !tbaa !13
  %52 = load ptr, ptr @veryfastsupg.hist, align 8, !tbaa !13
  %idxprom103 = sext i32 %im.1.lcssa to i64
  %arrayidx104 = getelementptr inbounds i32, ptr %52, i64 %idxprom103
  %53 = load i32, ptr %arrayidx104, align 4, !tbaa !10
  %cmp105 = icmp eq i32 %53, -1
  br i1 %cmp105, label %if.then107, label %if.else

if.then107:                                       ; preds = %for.end97
  %incdec.ptr = getelementptr inbounds i32, ptr %51, i64 1
  store i32 %im.1.lcssa, ptr %51, align 4, !tbaa !10
  br label %if.end133

if.else:                                          ; preds = %for.end97
  %idxprom108 = sext i32 %53 to i64
  %arrayidx109 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom108
  %54 = load ptr, ptr %arrayidx109, align 8, !tbaa !13
  %55 = load ptr, ptr %54, align 8, !tbaa !13
  %arrayidx113 = getelementptr inbounds ptr, ptr %54, i64 1
  %56 = load ptr, ptr %arrayidx113, align 8, !tbaa !13
  %57 = load i32, ptr %55, align 4, !tbaa !10
  %58 = load i32, ptr %56, align 4, !tbaa !10
  %cmp114 = icmp sgt i32 %57, %58
  %59 = tail call i32 @llvm.smin.i32(i32 %57, i32 %58)
  %60 = tail call i32 @llvm.smax.i32(i32 %57, i32 %58)
  %.383 = select i1 %cmp114, ptr %55, ptr %56
  %cmp120.not414 = icmp eq i32 %59, -1
  br i1 %cmp120.not414, label %for.cond126.preheader, label %for.body122.preheader

for.body122.preheader:                            ; preds = %if.else
  %. = select i1 %cmp114, ptr %56, ptr %55
  br label %for.body122

for.cond126.preheader.loopexit:                   ; preds = %for.body122
  %.pre459 = load i32, ptr %.383, align 4, !tbaa !10
  br label %for.cond126.preheader

for.cond126.preheader:                            ; preds = %for.cond126.preheader.loopexit, %if.else
  %61 = phi i32 [ %60, %if.else ], [ %.pre459, %for.cond126.preheader.loopexit ]
  %intpt.0.lcssa = phi ptr [ %51, %if.else ], [ %incdec.ptr124, %for.cond126.preheader.loopexit ]
  %cmp127.not418 = icmp eq i32 %61, -1
  br i1 %cmp127.not418, label %if.end133, label %for.body129

for.body122:                                      ; preds = %for.body122.preheader, %for.body122
  %62 = phi i32 [ %63, %for.body122 ], [ %59, %for.body122.preheader ]
  %intpt2.0416 = phi ptr [ %incdec.ptr123, %for.body122 ], [ %., %for.body122.preheader ]
  %intpt.0415 = phi ptr [ %incdec.ptr124, %for.body122 ], [ %51, %for.body122.preheader ]
  %incdec.ptr123 = getelementptr inbounds i32, ptr %intpt2.0416, i64 1
  %incdec.ptr124 = getelementptr inbounds i32, ptr %intpt.0415, i64 1
  store i32 %62, ptr %intpt.0415, align 4, !tbaa !10
  %63 = load i32, ptr %incdec.ptr123, align 4, !tbaa !10
  %cmp120.not = icmp eq i32 %63, -1
  br i1 %cmp120.not, label %for.cond126.preheader.loopexit, label %for.body122, !llvm.loop !186

for.body129:                                      ; preds = %for.cond126.preheader, %for.body129
  %64 = phi i32 [ %65, %for.body129 ], [ %61, %for.cond126.preheader ]
  %intpt2.1420 = phi ptr [ %incdec.ptr130, %for.body129 ], [ %.383, %for.cond126.preheader ]
  %intpt.1419 = phi ptr [ %incdec.ptr131, %for.body129 ], [ %intpt.0.lcssa, %for.cond126.preheader ]
  %incdec.ptr130 = getelementptr inbounds i32, ptr %intpt2.1420, i64 1
  %incdec.ptr131 = getelementptr inbounds i32, ptr %intpt.1419, i64 1
  store i32 %64, ptr %intpt.1419, align 4, !tbaa !10
  %65 = load i32, ptr %incdec.ptr130, align 4, !tbaa !10
  %cmp127.not = icmp eq i32 %65, -1
  br i1 %cmp127.not, label %if.end133, label %for.body129, !llvm.loop !187

if.end133:                                        ; preds = %for.body129, %for.cond126.preheader, %if.then107
  %intpt.1.lcssa.sink = phi ptr [ %incdec.ptr, %if.then107 ], [ %intpt.0.lcssa, %for.cond126.preheader ], [ %incdec.ptr131, %for.body129 ]
  store i32 -1, ptr %intpt.1.lcssa.sink, align 4, !tbaa !10
  %arrayidx136 = getelementptr inbounds ptr, ptr %50, i64 1
  %66 = load ptr, ptr %arrayidx136, align 8, !tbaa !13
  %idxprom137 = sext i32 %jm.1.lcssa to i64
  %arrayidx138 = getelementptr inbounds i32, ptr %52, i64 %idxprom137
  %67 = load i32, ptr %arrayidx138, align 4, !tbaa !10
  %cmp139 = icmp eq i32 %67, -1
  br i1 %cmp139, label %if.then141, label %if.else143

if.then141:                                       ; preds = %if.end133
  %incdec.ptr142 = getelementptr inbounds i32, ptr %66, i64 1
  store i32 %jm.1.lcssa, ptr %66, align 4, !tbaa !10
  br label %if.end169

if.else143:                                       ; preds = %if.end133
  %idxprom144 = sext i32 %67 to i64
  %arrayidx145 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom144
  %68 = load ptr, ptr %arrayidx145, align 8, !tbaa !13
  %69 = load ptr, ptr %68, align 8, !tbaa !13
  %arrayidx149 = getelementptr inbounds ptr, ptr %68, i64 1
  %70 = load ptr, ptr %arrayidx149, align 8, !tbaa !13
  %71 = load i32, ptr %69, align 4, !tbaa !10
  %72 = load i32, ptr %70, align 4, !tbaa !10
  %cmp150 = icmp sgt i32 %71, %72
  %73 = tail call i32 @llvm.smin.i32(i32 %71, i32 %72)
  %74 = tail call i32 @llvm.smax.i32(i32 %71, i32 %72)
  %.385 = select i1 %cmp150, ptr %69, ptr %70
  %cmp156.not422 = icmp eq i32 %73, -1
  br i1 %cmp156.not422, label %for.cond162.preheader, label %for.body158.preheader

for.body158.preheader:                            ; preds = %if.else143
  %.384 = select i1 %cmp150, ptr %70, ptr %69
  br label %for.body158

for.cond162.preheader.loopexit:                   ; preds = %for.body158
  %.pre460 = load i32, ptr %.385, align 4, !tbaa !10
  br label %for.cond162.preheader

for.cond162.preheader:                            ; preds = %for.cond162.preheader.loopexit, %if.else143
  %75 = phi i32 [ %74, %if.else143 ], [ %.pre460, %for.cond162.preheader.loopexit ]
  %intpt.2.lcssa = phi ptr [ %66, %if.else143 ], [ %incdec.ptr160, %for.cond162.preheader.loopexit ]
  %cmp163.not426 = icmp eq i32 %75, -1
  br i1 %cmp163.not426, label %if.end169, label %for.body165

for.body158:                                      ; preds = %for.body158.preheader, %for.body158
  %76 = phi i32 [ %77, %for.body158 ], [ %73, %for.body158.preheader ]
  %intpt2.2424 = phi ptr [ %incdec.ptr159, %for.body158 ], [ %.384, %for.body158.preheader ]
  %intpt.2423 = phi ptr [ %incdec.ptr160, %for.body158 ], [ %66, %for.body158.preheader ]
  %incdec.ptr159 = getelementptr inbounds i32, ptr %intpt2.2424, i64 1
  %incdec.ptr160 = getelementptr inbounds i32, ptr %intpt.2423, i64 1
  store i32 %76, ptr %intpt.2423, align 4, !tbaa !10
  %77 = load i32, ptr %incdec.ptr159, align 4, !tbaa !10
  %cmp156.not = icmp eq i32 %77, -1
  br i1 %cmp156.not, label %for.cond162.preheader.loopexit, label %for.body158, !llvm.loop !188

for.body165:                                      ; preds = %for.cond162.preheader, %for.body165
  %78 = phi i32 [ %79, %for.body165 ], [ %75, %for.cond162.preheader ]
  %intpt2.3428 = phi ptr [ %incdec.ptr166, %for.body165 ], [ %.385, %for.cond162.preheader ]
  %intpt.3427 = phi ptr [ %incdec.ptr167, %for.body165 ], [ %intpt.2.lcssa, %for.cond162.preheader ]
  %incdec.ptr166 = getelementptr inbounds i32, ptr %intpt2.3428, i64 1
  %incdec.ptr167 = getelementptr inbounds i32, ptr %intpt.3427, i64 1
  store i32 %78, ptr %intpt.3427, align 4, !tbaa !10
  %79 = load i32, ptr %incdec.ptr166, align 4, !tbaa !10
  %cmp163.not = icmp eq i32 %79, -1
  br i1 %cmp163.not, label %if.end169, label %for.body165, !llvm.loop !189

if.end169:                                        ; preds = %for.body165, %for.cond162.preheader, %if.then141
  %intpt.3.lcssa.sink = phi ptr [ %incdec.ptr142, %if.then141 ], [ %intpt.2.lcssa, %for.cond162.preheader ], [ %incdec.ptr167, %for.body165 ]
  store i32 -1, ptr %intpt.3.lcssa.sink, align 4, !tbaa !10
  %80 = load ptr, ptr @veryfastsupg.tmptmplen, align 8, !tbaa !13
  %arrayidx171 = getelementptr inbounds double, ptr %80, i64 %idxprom103
  %81 = load double, ptr %arrayidx171, align 8, !tbaa !20
  %sub172 = fsub double %div, %81
  %arrayidx174 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv454
  %82 = load ptr, ptr %arrayidx174, align 8, !tbaa !13
  store double %sub172, ptr %82, align 8, !tbaa !20
  %arrayidx177 = getelementptr inbounds double, ptr %80, i64 %idxprom137
  %83 = load double, ptr %arrayidx177, align 8, !tbaa !20
  %sub178 = fsub double %div, %83
  %arrayidx181 = getelementptr inbounds double, ptr %82, i64 1
  store double %sub178, ptr %arrayidx181, align 8, !tbaa !20
  store double %div, ptr %arrayidx171, align 8, !tbaa !20
  store i32 %40, ptr %arrayidx104, align 4, !tbaa !10
  %84 = load ptr, ptr @veryfastsupg.eff, align 8
  br label %for.body189

for.body189:                                      ; preds = %if.end169, %for.inc227
  %i.5430 = phi i32 [ 0, %if.end169 ], [ %90, %for.inc227 ]
  %cmp190.not = icmp eq i32 %i.5430, %im.1.lcssa
  %cmp192.not = icmp eq i32 %i.5430, %jm.1.lcssa
  %or.cond = select i1 %cmp190.not, i1 true, i1 %cmp192.not
  br i1 %or.cond, label %for.inc227, label %if.then194

if.then194:                                       ; preds = %for.body189
  %cmp195 = icmp slt i32 %i.5430, %im.1.lcssa
  br i1 %cmp195, label %if.then194.if.end204_crit_edge, label %if.else198

if.then194.if.end204_crit_edge:                   ; preds = %if.then194
  %.pre464 = sext i32 %i.5430 to i64
  br label %if.end204

if.else198:                                       ; preds = %if.then194
  %jm.1.i.5 = tail call i32 @llvm.smax.i32(i32 %i.5430, i32 %jm.1.lcssa)
  %i.5.jm.1 = tail call i32 @llvm.smin.i32(i32 %i.5430, i32 %jm.1.lcssa)
  %.pre461 = sext i32 %i.5430 to i64
  %.pre462 = sext i32 %jm.1.i.5 to i64
  %.pre465 = sext i32 %i.5.jm.1 to i64
  br label %if.end204

if.end204:                                        ; preds = %if.then194.if.end204_crit_edge, %if.else198
  %idxprom209.pre-phi = phi i64 [ %.pre464, %if.then194.if.end204_crit_edge ], [ %.pre465, %if.else198 ]
  %idxprom205.pre-phi = phi i64 [ %.pre464, %if.then194.if.end204_crit_edge ], [ %idxprom103, %if.else198 ]
  %idxprom211.pre-phi = phi i64 [ %idxprom137, %if.then194.if.end204_crit_edge ], [ %.pre462, %if.else198 ]
  %idxprom207.pre-phi = phi i64 [ %idxprom103, %if.then194.if.end204_crit_edge ], [ %.pre461, %if.else198 ]
  %arrayidx206 = getelementptr inbounds ptr, ptr %84, i64 %idxprom205.pre-phi
  %85 = load ptr, ptr %arrayidx206, align 8, !tbaa !13
  %arrayidx208 = getelementptr inbounds i32, ptr %85, i64 %idxprom207.pre-phi
  %86 = load i32, ptr %arrayidx208, align 4, !tbaa !10
  %arrayidx210 = getelementptr inbounds ptr, ptr %84, i64 %idxprom209.pre-phi
  %87 = load ptr, ptr %arrayidx210, align 8, !tbaa !13
  %arrayidx212 = getelementptr inbounds i32, ptr %87, i64 %idxprom211.pre-phi
  %88 = load i32, ptr %arrayidx212, align 4, !tbaa !10
  %cond = tail call i32 @llvm.smin.i32(i32 %86, i32 %88)
  %conv215 = sitofp i32 %cond to double
  %add217 = add nsw i32 %88, %86
  %conv218 = sitofp i32 %add217 to double
  %mul219 = fmul double %conv218, 5.000000e-01
  %mul220 = fmul double %mul219, 1.000000e-01
  %89 = tail call double @llvm.fmuladd.f64(double %conv215, double 9.000000e-01, double %mul220)
  %conv221 = fptosi double %89 to i32
  store i32 %conv221, ptr %arrayidx208, align 4, !tbaa !10
  br label %for.inc227

for.inc227:                                       ; preds = %for.body189, %if.end204
  %idxprom228 = sext i32 %i.5430 to i64
  %arrayidx229 = getelementptr inbounds %struct._Achain, ptr %42, i64 %idxprom228
  %90 = load i32, ptr %arrayidx229, align 4, !tbaa !145
  %cmp187.not = icmp eq i32 %90, -1
  br i1 %cmp187.not, label %for.end231, label %for.body189, !llvm.loop !190

for.end231:                                       ; preds = %for.inc227
  %arrayidx233 = getelementptr inbounds %struct._Achain, ptr %42, i64 %idxprom137
  %prev234 = getelementptr inbounds %struct._Achain, ptr %42, i64 %idxprom137, i32 1
  %91 = load i32, ptr %prev234, align 4, !tbaa !149
  %92 = load i32, ptr %arrayidx233, align 4, !tbaa !145
  %idxprom238 = sext i32 %91 to i64
  %arrayidx239 = getelementptr inbounds %struct._Achain, ptr %42, i64 %idxprom238
  store i32 %92, ptr %arrayidx239, align 4, !tbaa !145
  %cmp241.not = icmp eq i32 %92, -1
  br i1 %cmp241.not, label %for.inc248, label %if.then243

if.then243:                                       ; preds = %for.end231
  %idxprom244 = sext i32 %92 to i64
  %prev246 = getelementptr inbounds %struct._Achain, ptr %42, i64 %idxprom244, i32 1
  store i32 %91, ptr %prev246, align 4, !tbaa !149
  br label %for.inc248

for.inc248:                                       ; preds = %for.end231, %if.then243
  %indvars.iv.next455 = add nuw nsw i64 %indvars.iv454, 1
  %exitcond458.not = icmp eq i64 %indvars.iv.next455, %wide.trip.count457
  br i1 %exitcond458.not, label %for.end250, label %for.body60, !llvm.loop !191

for.end250:                                       ; preds = %for.inc248, %for.end54.for.end250_crit_edge
  %93 = phi ptr [ %.pre463, %for.end54.for.end250_crit_edge ], [ %84, %for.inc248 ]
  tail call void @FreeIntMtx(ptr noundef %93) #34
  store ptr null, ptr @veryfastsupg.eff, align 8, !tbaa !13
  %94 = load ptr, ptr @veryfastsupg.tmptmplen, align 8, !tbaa !13
  tail call void @free(ptr noundef %94) #34
  store ptr null, ptr @veryfastsupg.tmptmplen, align 8, !tbaa !13
  %95 = load ptr, ptr @veryfastsupg.hist, align 8, !tbaa !13
  tail call void @free(ptr noundef %95) #34
  store ptr null, ptr @veryfastsupg.hist, align 8, !tbaa !13
  %96 = load ptr, ptr @veryfastsupg.ac, align 8, !tbaa !13
  tail call void @free(ptr noundef %96) #34
  store ptr null, ptr @veryfastsupg.ac, align 8, !tbaa !13
  ret void
}

declare ptr @AllocateIntMtx(i32 noundef, i32 noundef) local_unnamed_addr #14

declare void @FreeIntMtx(ptr noundef) local_unnamed_addr #14

; Function Attrs: nounwind uwtable
define dso_local void @veryfastsupg_int(i32 noundef %nseq, ptr nocapture noundef readonly %oeff, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %len) local_unnamed_addr #12 {
entry:
  %0 = load ptr, ptr @veryfastsupg_int.eff, align 8, !tbaa !13
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, ptr @njob, align 4, !tbaa !10
  %call = tail call ptr @AllocateIntMtx(i32 noundef %1, i32 noundef %1) #34
  store ptr %call, ptr @veryfastsupg_int.eff, align 8, !tbaa !13
  %2 = load i32, ptr @njob, align 4, !tbaa !10
  %call1 = tail call ptr @AllocateIntVec(i32 noundef %2) #34
  store ptr %call1, ptr @veryfastsupg_int.hist, align 8, !tbaa !13
  %3 = load i32, ptr @njob, align 4, !tbaa !10
  %call2 = tail call ptr @AllocateIntVec(i32 noundef %3) #34
  store ptr %call2, ptr @veryfastsupg_int.tmptmplen, align 8, !tbaa !13
  %4 = load i32, ptr @njob, align 4, !tbaa !10
  %conv = sext i32 %4 to i64
  %mul = shl nsw i64 %conv, 3
  %call3 = tail call noalias ptr @malloc(i64 noundef %mul) #35
  store ptr %call3, ptr @veryfastsupg_int.ac, align 8, !tbaa !13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp390 = icmp sgt i32 %nseq, 0
  br i1 %cmp390, label %for.cond5.preheader.lr.ph, label %for.end28.thread

for.cond5.preheader.lr.ph:                        ; preds = %if.end
  %5 = load ptr, ptr @veryfastsupg_int.eff, align 8
  %wide.trip.count442 = zext i32 %nseq to i64
  %min.iters.check = icmp ult i32 %nseq, 8
  %n.vec = and i64 %wide.trip.count442, 4294967288
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count442
  %xtraiter = and i64 %wide.trip.count442, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.cond5.preheader.us

for.cond5.preheader.us:                           ; preds = %for.cond5.for.inc15_crit_edge.us, %for.cond5.preheader.lr.ph
  %indvars.iv439 = phi i64 [ %indvars.iv.next440, %for.cond5.for.inc15_crit_edge.us ], [ 0, %for.cond5.preheader.lr.ph ]
  %arrayidx.us = getelementptr inbounds ptr, ptr %oeff, i64 %indvars.iv439
  %6 = load ptr, ptr %arrayidx.us, align 8, !tbaa !13
  %arrayidx12.us = getelementptr inbounds ptr, ptr %5, i64 %indvars.iv439
  %7 = load ptr, ptr %arrayidx12.us, align 8, !tbaa !13
  %8 = ptrtoint ptr %7 to i64
  %9 = ptrtoint ptr %6 to i64
  %10 = sub i64 %8, %9
  %diff.check = icmp ult i64 %10, 32
  %or.cond497 = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond497, label %for.body8.us.preheader, label %vector.body

vector.body:                                      ; preds = %for.cond5.preheader.us, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.cond5.preheader.us ]
  %11 = getelementptr inbounds i32, ptr %6, i64 %index
  %wide.load = load <4 x i32>, ptr %11, align 4, !tbaa !10
  %12 = getelementptr inbounds i32, ptr %11, i64 4
  %wide.load477 = load <4 x i32>, ptr %12, align 4, !tbaa !10
  %13 = getelementptr inbounds i32, ptr %7, i64 %index
  store <4 x i32> %wide.load, ptr %13, align 4, !tbaa !10
  %14 = getelementptr inbounds i32, ptr %13, i64 4
  store <4 x i32> %wide.load477, ptr %14, align 4, !tbaa !10
  %index.next = add nuw i64 %index, 8
  %15 = icmp eq i64 %index.next, %n.vec
  br i1 %15, label %middle.block, label %vector.body, !llvm.loop !192

middle.block:                                     ; preds = %vector.body
  br i1 %cmp.n, label %for.cond5.for.inc15_crit_edge.us, label %for.body8.us.preheader

for.body8.us.preheader:                           ; preds = %for.cond5.preheader.us, %middle.block
  %indvars.iv.ph = phi i64 [ 0, %for.cond5.preheader.us ], [ %n.vec, %middle.block ]
  %16 = xor i64 %indvars.iv.ph, -1
  %17 = add nsw i64 %16, %wide.trip.count442
  br i1 %lcmp.mod.not, label %for.body8.us.prol.loopexit, label %for.body8.us.prol

for.body8.us.prol:                                ; preds = %for.body8.us.preheader, %for.body8.us.prol
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body8.us.prol ], [ %indvars.iv.ph, %for.body8.us.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body8.us.prol ], [ 0, %for.body8.us.preheader ]
  %arrayidx10.us.prol = getelementptr inbounds i32, ptr %6, i64 %indvars.iv.prol
  %18 = load i32, ptr %arrayidx10.us.prol, align 4, !tbaa !10
  %arrayidx14.us.prol = getelementptr inbounds i32, ptr %7, i64 %indvars.iv.prol
  store i32 %18, ptr %arrayidx14.us.prol, align 4, !tbaa !10
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body8.us.prol.loopexit, label %for.body8.us.prol, !llvm.loop !193

for.body8.us.prol.loopexit:                       ; preds = %for.body8.us.prol, %for.body8.us.preheader
  %indvars.iv.unr = phi i64 [ %indvars.iv.ph, %for.body8.us.preheader ], [ %indvars.iv.next.prol, %for.body8.us.prol ]
  %19 = icmp ult i64 %17, 3
  br i1 %19, label %for.cond5.for.inc15_crit_edge.us, label %for.body8.us

for.body8.us:                                     ; preds = %for.body8.us.prol.loopexit, %for.body8.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body8.us ], [ %indvars.iv.unr, %for.body8.us.prol.loopexit ]
  %arrayidx10.us = getelementptr inbounds i32, ptr %6, i64 %indvars.iv
  %20 = load i32, ptr %arrayidx10.us, align 4, !tbaa !10
  %arrayidx14.us = getelementptr inbounds i32, ptr %7, i64 %indvars.iv
  store i32 %20, ptr %arrayidx14.us, align 4, !tbaa !10
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx10.us.1 = getelementptr inbounds i32, ptr %6, i64 %indvars.iv.next
  %21 = load i32, ptr %arrayidx10.us.1, align 4, !tbaa !10
  %arrayidx14.us.1 = getelementptr inbounds i32, ptr %7, i64 %indvars.iv.next
  store i32 %21, ptr %arrayidx14.us.1, align 4, !tbaa !10
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %arrayidx10.us.2 = getelementptr inbounds i32, ptr %6, i64 %indvars.iv.next.1
  %22 = load i32, ptr %arrayidx10.us.2, align 4, !tbaa !10
  %arrayidx14.us.2 = getelementptr inbounds i32, ptr %7, i64 %indvars.iv.next.1
  store i32 %22, ptr %arrayidx14.us.2, align 4, !tbaa !10
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3
  %arrayidx10.us.3 = getelementptr inbounds i32, ptr %6, i64 %indvars.iv.next.2
  %23 = load i32, ptr %arrayidx10.us.3, align 4, !tbaa !10
  %arrayidx14.us.3 = getelementptr inbounds i32, ptr %7, i64 %indvars.iv.next.2
  store i32 %23, ptr %arrayidx14.us.3, align 4, !tbaa !10
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %exitcond.not.3 = icmp eq i64 %indvars.iv.next.3, %wide.trip.count442
  br i1 %exitcond.not.3, label %for.cond5.for.inc15_crit_edge.us, label %for.body8.us, !llvm.loop !194

for.cond5.for.inc15_crit_edge.us:                 ; preds = %for.body8.us.prol.loopexit, %for.body8.us, %middle.block
  %indvars.iv.next440 = add nuw nsw i64 %indvars.iv439, 1
  %exitcond443.not = icmp eq i64 %indvars.iv.next440, %wide.trip.count442
  br i1 %exitcond443.not, label %for.cond18.preheader, label %for.cond5.preheader.us, !llvm.loop !195

for.cond18.preheader:                             ; preds = %for.cond5.for.inc15_crit_edge.us
  br i1 %cmp390, label %for.body21.lr.ph, label %for.end28.thread

for.end28.thread:                                 ; preds = %for.cond18.preheader, %if.end
  %.pre = load ptr, ptr @veryfastsupg_int.ac, align 8, !tbaa !13
  %sub29468 = add nsw i32 %nseq, -1
  %idxprom30469 = sext i32 %sub29468 to i64
  %arrayidx31470 = getelementptr inbounds %struct._Achain, ptr %.pre, i64 %idxprom30469
  store i32 -1, ptr %arrayidx31470, align 4, !tbaa !145
  br label %for.end50.thread

for.body21.lr.ph:                                 ; preds = %for.cond18.preheader
  %24 = load ptr, ptr @veryfastsupg_int.ac, align 8, !tbaa !13
  %wide.trip.count448 = zext i32 %nseq to i64
  %min.iters.check480 = icmp ult i32 %nseq, 4
  br i1 %min.iters.check480, label %for.body21.preheader, label %vector.ph481

vector.ph481:                                     ; preds = %for.body21.lr.ph
  %n.vec483 = and i64 %wide.trip.count442, 4294967292
  br label %vector.body486

vector.body486:                                   ; preds = %vector.body486, %vector.ph481
  %index487 = phi i64 [ 0, %vector.ph481 ], [ %index.next494, %vector.body486 ]
  %vec.ind = phi <2 x i64> [ <i64 0, i64 1>, %vector.ph481 ], [ %vec.ind.next, %vector.body486 ]
  %vec.ind489 = phi <2 x i32> [ <i32 0, i32 1>, %vector.ph481 ], [ %vec.ind.next492, %vector.body486 ]
  %25 = or i64 %index487, 2
  %26 = trunc <2 x i64> %vec.ind to <2 x i32>
  %27 = add <2 x i32> %26, <i32 1, i32 1>
  %28 = trunc <2 x i64> %vec.ind to <2 x i32>
  %29 = add <2 x i32> %28, <i32 3, i32 3>
  %30 = add <2 x i32> %vec.ind489, <i32 -1, i32 -1>
  %31 = add <2 x i32> %vec.ind489, <i32 1, i32 1>
  %32 = getelementptr inbounds %struct._Achain, ptr %24, i64 %index487
  %33 = getelementptr inbounds %struct._Achain, ptr %24, i64 %25
  %interleaved.vec = shufflevector <2 x i32> %27, <2 x i32> %30, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x i32> %interleaved.vec, ptr %32, align 4, !tbaa !10
  %interleaved.vec493 = shufflevector <2 x i32> %29, <2 x i32> %31, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x i32> %interleaved.vec493, ptr %33, align 4, !tbaa !10
  %index.next494 = add nuw i64 %index487, 4
  %vec.ind.next = add <2 x i64> %vec.ind, <i64 4, i64 4>
  %vec.ind.next492 = add <2 x i32> %vec.ind489, <i32 4, i32 4>
  %34 = icmp eq i64 %index.next494, %n.vec483
  br i1 %34, label %middle.block478, label %vector.body486, !llvm.loop !196

middle.block478:                                  ; preds = %vector.body486
  %cmp.n485 = icmp eq i64 %n.vec483, %wide.trip.count442
  br i1 %cmp.n485, label %for.end28, label %for.body21.preheader

for.body21.preheader:                             ; preds = %for.body21.lr.ph, %middle.block478
  %indvars.iv444.ph = phi i64 [ 0, %for.body21.lr.ph ], [ %n.vec483, %middle.block478 ]
  br label %for.body21

for.body21:                                       ; preds = %for.body21.preheader, %for.body21
  %indvars.iv444 = phi i64 [ %indvars.iv.next445, %for.body21 ], [ %indvars.iv444.ph, %for.body21.preheader ]
  %indvars.iv.next445 = add nuw nsw i64 %indvars.iv444, 1
  %arrayidx23 = getelementptr inbounds %struct._Achain, ptr %24, i64 %indvars.iv444
  %35 = trunc i64 %indvars.iv.next445 to i32
  store i32 %35, ptr %arrayidx23, align 4, !tbaa !145
  %prev = getelementptr inbounds %struct._Achain, ptr %24, i64 %indvars.iv444, i32 1
  %36 = trunc i64 %indvars.iv444 to i32
  %37 = add i32 %36, -1
  store i32 %37, ptr %prev, align 4, !tbaa !149
  %exitcond449.not = icmp eq i64 %indvars.iv.next445, %wide.trip.count448
  br i1 %exitcond449.not, label %for.end28, label %for.body21, !llvm.loop !197

for.end28:                                        ; preds = %for.body21, %middle.block478
  %sub29 = add nsw i32 %nseq, -1
  %idxprom30 = sext i32 %sub29 to i64
  %arrayidx31 = getelementptr inbounds %struct._Achain, ptr %24, i64 %idxprom30
  store i32 -1, ptr %arrayidx31, align 4, !tbaa !145
  br i1 %cmp390, label %for.end50, label %for.end50.thread

for.end50.thread:                                 ; preds = %for.end28, %for.end28.thread
  %38 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc475 = tail call i32 @fputc(i32 10, ptr %38)
  br label %for.end50.for.end251_crit_edge

for.end50:                                        ; preds = %for.end28
  %39 = load ptr, ptr @veryfastsupg_int.tmptmplen, align 8, !tbaa !13
  %40 = zext i32 %nseq to i64
  %41 = shl nuw nsw i64 %40, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %39, i8 0, i64 %41, i1 false), !tbaa !10
  %42 = load ptr, ptr @veryfastsupg_int.hist, align 8, !tbaa !13
  %43 = zext i32 %nseq to i64
  %44 = shl nuw nsw i64 %43, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %42, i8 -1, i64 %44, i1 false), !tbaa !10
  %45 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc = tail call i32 @fputc(i32 10, ptr %45)
  %cmp54434.not = icmp eq i32 %nseq, 1
  br i1 %cmp54434.not, label %for.end50.for.end251_crit_edge, label %for.body56.preheader

for.end50.for.end251_crit_edge:                   ; preds = %for.end50.thread, %for.end50
  %.pre465 = load ptr, ptr @veryfastsupg_int.eff, align 8, !tbaa !13
  br label %for.end251

for.body56.preheader:                             ; preds = %for.end50
  %wide.trip.count459 = zext i32 %sub29 to i64
  br label %for.body56

for.body56:                                       ; preds = %for.body56.preheader, %for.inc249
  %indvars.iv456 = phi i64 [ 0, %for.body56.preheader ], [ %indvars.iv.next457, %for.inc249 ]
  %jm.0437 = phi i32 [ -1, %for.body56.preheader ], [ %jm.1.lcssa, %for.inc249 ]
  %im.0436 = phi i32 [ -1, %for.body56.preheader ], [ %im.1.lcssa, %for.inc249 ]
  %46 = trunc i64 %indvars.iv456 to i32
  %rem = urem i32 %46, 10
  %cmp57 = icmp eq i32 %rem, 0
  br i1 %cmp57, label %if.then59, label %if.end61

if.then59:                                        ; preds = %for.body56
  %47 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call60 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %47, ptr noundef nonnull @.str.24, i32 noundef %46, i32 noundef %nseq) #32
  br label %if.end61

if.end61:                                         ; preds = %if.then59, %for.body56
  %48 = load ptr, ptr @veryfastsupg_int.ac, align 8, !tbaa !13
  %49 = load i32, ptr %48, align 4, !tbaa !145
  %cmp66.not406 = icmp eq i32 %49, -1
  br i1 %cmp66.not406, label %for.end93, label %for.cond72.preheader.lr.ph

for.cond72.preheader.lr.ph:                       ; preds = %if.end61
  %50 = load ptr, ptr @veryfastsupg_int.eff, align 8, !tbaa !13
  br label %for.cond72.preheader

for.cond72.for.cond62.loopexit_crit_edge:         ; preds = %for.body75
  %idxprom63 = sext i32 %52 to i64
  %arrayidx64 = getelementptr inbounds %struct._Achain, ptr %48, i64 %idxprom63
  %51 = load i32, ptr %arrayidx64, align 4, !tbaa !145
  %cmp66.not = icmp eq i32 %51, -1
  br i1 %cmp66.not, label %for.end93, label %for.cond72.preheader, !llvm.loop !198

for.cond72.preheader:                             ; preds = %for.cond72.preheader.lr.ph, %for.cond72.for.cond62.loopexit_crit_edge
  %52 = phi i32 [ %49, %for.cond72.preheader.lr.ph ], [ %51, %for.cond72.for.cond62.loopexit_crit_edge ]
  %idxprom63411 = phi i64 [ 0, %for.cond72.preheader.lr.ph ], [ %idxprom63, %for.cond72.for.cond62.loopexit_crit_edge ]
  %i.4410 = phi i32 [ 0, %for.cond72.preheader.lr.ph ], [ %52, %for.cond72.for.cond62.loopexit_crit_edge ]
  %jm.1409 = phi i32 [ %jm.0437, %for.cond72.preheader.lr.ph ], [ %jm.3, %for.cond72.for.cond62.loopexit_crit_edge ]
  %im.1408 = phi i32 [ %im.0436, %for.cond72.preheader.lr.ph ], [ %im.3, %for.cond72.for.cond62.loopexit_crit_edge ]
  %minscore.0407 = phi i32 [ 4000000, %for.cond72.preheader.lr.ph ], [ %minscore.2, %for.cond72.for.cond62.loopexit_crit_edge ]
  %arrayidx77 = getelementptr inbounds ptr, ptr %50, i64 %idxprom63411
  %53 = load ptr, ptr %arrayidx77, align 8, !tbaa !13
  br label %for.body75

for.body75:                                       ; preds = %for.cond72.preheader, %for.body75
  %j.1402 = phi i32 [ %52, %for.cond72.preheader ], [ %55, %for.body75 ]
  %jm.2401 = phi i32 [ %jm.1409, %for.cond72.preheader ], [ %jm.3, %for.body75 ]
  %im.2400 = phi i32 [ %im.1408, %for.cond72.preheader ], [ %im.3, %for.body75 ]
  %minscore.1399 = phi i32 [ %minscore.0407, %for.cond72.preheader ], [ %minscore.2, %for.body75 ]
  %idxprom78 = sext i32 %j.1402 to i64
  %arrayidx79 = getelementptr inbounds i32, ptr %53, i64 %idxprom78
  %54 = load i32, ptr %arrayidx79, align 4, !tbaa !10
  %cmp80 = icmp slt i32 %54, %minscore.1399
  %minscore.2 = tail call i32 @llvm.smin.i32(i32 %54, i32 %minscore.1399)
  %im.3 = select i1 %cmp80, i32 %i.4410, i32 %im.2400
  %jm.3 = select i1 %cmp80, i32 %j.1402, i32 %jm.2401
  %arrayidx86 = getelementptr inbounds %struct._Achain, ptr %48, i64 %idxprom78
  %55 = load i32, ptr %arrayidx86, align 4, !tbaa !145
  %cmp73.not = icmp eq i32 %55, -1
  br i1 %cmp73.not, label %for.cond72.for.cond62.loopexit_crit_edge, label %for.body75, !llvm.loop !199

for.end93:                                        ; preds = %for.cond72.for.cond62.loopexit_crit_edge, %if.end61
  %minscore.0.lcssa = phi i32 [ 4000000, %if.end61 ], [ %minscore.2, %for.cond72.for.cond62.loopexit_crit_edge ]
  %im.1.lcssa = phi i32 [ %im.0436, %if.end61 ], [ %im.3, %for.cond72.for.cond62.loopexit_crit_edge ]
  %jm.1.lcssa = phi i32 [ %jm.0437, %if.end61 ], [ %jm.3, %for.cond72.for.cond62.loopexit_crit_edge ]
  %arrayidx95 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv456
  %56 = load ptr, ptr %arrayidx95, align 8, !tbaa !13
  %57 = load ptr, ptr %56, align 8, !tbaa !13
  %58 = load ptr, ptr @veryfastsupg_int.hist, align 8, !tbaa !13
  %idxprom97 = sext i32 %im.1.lcssa to i64
  %arrayidx98 = getelementptr inbounds i32, ptr %58, i64 %idxprom97
  %59 = load i32, ptr %arrayidx98, align 4, !tbaa !10
  %cmp99 = icmp eq i32 %59, -1
  br i1 %cmp99, label %if.then101, label %if.else

if.then101:                                       ; preds = %for.end93
  %incdec.ptr = getelementptr inbounds i32, ptr %57, i64 1
  store i32 %im.1.lcssa, ptr %57, align 4, !tbaa !10
  br label %if.end127

if.else:                                          ; preds = %for.end93
  %idxprom102 = sext i32 %59 to i64
  %arrayidx103 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom102
  %60 = load ptr, ptr %arrayidx103, align 8, !tbaa !13
  %61 = load ptr, ptr %60, align 8, !tbaa !13
  %arrayidx107 = getelementptr inbounds ptr, ptr %60, i64 1
  %62 = load ptr, ptr %arrayidx107, align 8, !tbaa !13
  %63 = load i32, ptr %61, align 4, !tbaa !10
  %64 = load i32, ptr %62, align 4, !tbaa !10
  %cmp108 = icmp sgt i32 %63, %64
  %65 = tail call i32 @llvm.smin.i32(i32 %63, i32 %64)
  %66 = tail call i32 @llvm.smax.i32(i32 %63, i32 %64)
  %.385 = select i1 %cmp108, ptr %61, ptr %62
  %cmp114.not416 = icmp eq i32 %65, -1
  br i1 %cmp114.not416, label %for.cond120.preheader, label %for.body116.preheader

for.body116.preheader:                            ; preds = %if.else
  %. = select i1 %cmp108, ptr %62, ptr %61
  br label %for.body116

for.cond120.preheader.loopexit:                   ; preds = %for.body116
  %.pre461 = load i32, ptr %.385, align 4, !tbaa !10
  br label %for.cond120.preheader

for.cond120.preheader:                            ; preds = %for.cond120.preheader.loopexit, %if.else
  %67 = phi i32 [ %66, %if.else ], [ %.pre461, %for.cond120.preheader.loopexit ]
  %intpt.0.lcssa = phi ptr [ %57, %if.else ], [ %incdec.ptr118, %for.cond120.preheader.loopexit ]
  %cmp121.not420 = icmp eq i32 %67, -1
  br i1 %cmp121.not420, label %if.end127, label %for.body123

for.body116:                                      ; preds = %for.body116.preheader, %for.body116
  %68 = phi i32 [ %69, %for.body116 ], [ %65, %for.body116.preheader ]
  %intpt2.0418 = phi ptr [ %incdec.ptr117, %for.body116 ], [ %., %for.body116.preheader ]
  %intpt.0417 = phi ptr [ %incdec.ptr118, %for.body116 ], [ %57, %for.body116.preheader ]
  %incdec.ptr117 = getelementptr inbounds i32, ptr %intpt2.0418, i64 1
  %incdec.ptr118 = getelementptr inbounds i32, ptr %intpt.0417, i64 1
  store i32 %68, ptr %intpt.0417, align 4, !tbaa !10
  %69 = load i32, ptr %incdec.ptr117, align 4, !tbaa !10
  %cmp114.not = icmp eq i32 %69, -1
  br i1 %cmp114.not, label %for.cond120.preheader.loopexit, label %for.body116, !llvm.loop !200

for.body123:                                      ; preds = %for.cond120.preheader, %for.body123
  %70 = phi i32 [ %71, %for.body123 ], [ %67, %for.cond120.preheader ]
  %intpt2.1422 = phi ptr [ %incdec.ptr124, %for.body123 ], [ %.385, %for.cond120.preheader ]
  %intpt.1421 = phi ptr [ %incdec.ptr125, %for.body123 ], [ %intpt.0.lcssa, %for.cond120.preheader ]
  %incdec.ptr124 = getelementptr inbounds i32, ptr %intpt2.1422, i64 1
  %incdec.ptr125 = getelementptr inbounds i32, ptr %intpt.1421, i64 1
  store i32 %70, ptr %intpt.1421, align 4, !tbaa !10
  %71 = load i32, ptr %incdec.ptr124, align 4, !tbaa !10
  %cmp121.not = icmp eq i32 %71, -1
  br i1 %cmp121.not, label %if.end127, label %for.body123, !llvm.loop !201

if.end127:                                        ; preds = %for.body123, %for.cond120.preheader, %if.then101
  %intpt.1.lcssa.sink = phi ptr [ %incdec.ptr, %if.then101 ], [ %intpt.0.lcssa, %for.cond120.preheader ], [ %incdec.ptr125, %for.body123 ]
  store i32 -1, ptr %intpt.1.lcssa.sink, align 4, !tbaa !10
  %arrayidx130 = getelementptr inbounds ptr, ptr %56, i64 1
  %72 = load ptr, ptr %arrayidx130, align 8, !tbaa !13
  %idxprom131 = sext i32 %jm.1.lcssa to i64
  %arrayidx132 = getelementptr inbounds i32, ptr %58, i64 %idxprom131
  %73 = load i32, ptr %arrayidx132, align 4, !tbaa !10
  %cmp133 = icmp eq i32 %73, -1
  br i1 %cmp133, label %if.then135, label %if.else137

if.then135:                                       ; preds = %if.end127
  %incdec.ptr136 = getelementptr inbounds i32, ptr %72, i64 1
  store i32 %jm.1.lcssa, ptr %72, align 4, !tbaa !10
  br label %if.end163

if.else137:                                       ; preds = %if.end127
  %idxprom138 = sext i32 %73 to i64
  %arrayidx139 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom138
  %74 = load ptr, ptr %arrayidx139, align 8, !tbaa !13
  %75 = load ptr, ptr %74, align 8, !tbaa !13
  %arrayidx143 = getelementptr inbounds ptr, ptr %74, i64 1
  %76 = load ptr, ptr %arrayidx143, align 8, !tbaa !13
  %77 = load i32, ptr %75, align 4, !tbaa !10
  %78 = load i32, ptr %76, align 4, !tbaa !10
  %cmp144 = icmp sgt i32 %77, %78
  %79 = tail call i32 @llvm.smin.i32(i32 %77, i32 %78)
  %80 = tail call i32 @llvm.smax.i32(i32 %77, i32 %78)
  %.387 = select i1 %cmp144, ptr %75, ptr %76
  %cmp150.not424 = icmp eq i32 %79, -1
  br i1 %cmp150.not424, label %for.cond156.preheader, label %for.body152.preheader

for.body152.preheader:                            ; preds = %if.else137
  %.386 = select i1 %cmp144, ptr %76, ptr %75
  br label %for.body152

for.cond156.preheader.loopexit:                   ; preds = %for.body152
  %.pre462 = load i32, ptr %.387, align 4, !tbaa !10
  br label %for.cond156.preheader

for.cond156.preheader:                            ; preds = %for.cond156.preheader.loopexit, %if.else137
  %81 = phi i32 [ %80, %if.else137 ], [ %.pre462, %for.cond156.preheader.loopexit ]
  %intpt.2.lcssa = phi ptr [ %72, %if.else137 ], [ %incdec.ptr154, %for.cond156.preheader.loopexit ]
  %cmp157.not428 = icmp eq i32 %81, -1
  br i1 %cmp157.not428, label %if.end163, label %for.body159

for.body152:                                      ; preds = %for.body152.preheader, %for.body152
  %82 = phi i32 [ %83, %for.body152 ], [ %79, %for.body152.preheader ]
  %intpt2.2426 = phi ptr [ %incdec.ptr153, %for.body152 ], [ %.386, %for.body152.preheader ]
  %intpt.2425 = phi ptr [ %incdec.ptr154, %for.body152 ], [ %72, %for.body152.preheader ]
  %incdec.ptr153 = getelementptr inbounds i32, ptr %intpt2.2426, i64 1
  %incdec.ptr154 = getelementptr inbounds i32, ptr %intpt.2425, i64 1
  store i32 %82, ptr %intpt.2425, align 4, !tbaa !10
  %83 = load i32, ptr %incdec.ptr153, align 4, !tbaa !10
  %cmp150.not = icmp eq i32 %83, -1
  br i1 %cmp150.not, label %for.cond156.preheader.loopexit, label %for.body152, !llvm.loop !202

for.body159:                                      ; preds = %for.cond156.preheader, %for.body159
  %84 = phi i32 [ %85, %for.body159 ], [ %81, %for.cond156.preheader ]
  %intpt2.3430 = phi ptr [ %incdec.ptr160, %for.body159 ], [ %.387, %for.cond156.preheader ]
  %intpt.3429 = phi ptr [ %incdec.ptr161, %for.body159 ], [ %intpt.2.lcssa, %for.cond156.preheader ]
  %incdec.ptr160 = getelementptr inbounds i32, ptr %intpt2.3430, i64 1
  %incdec.ptr161 = getelementptr inbounds i32, ptr %intpt.3429, i64 1
  store i32 %84, ptr %intpt.3429, align 4, !tbaa !10
  %85 = load i32, ptr %incdec.ptr160, align 4, !tbaa !10
  %cmp157.not = icmp eq i32 %85, -1
  br i1 %cmp157.not, label %if.end163, label %for.body159, !llvm.loop !203

if.end163:                                        ; preds = %for.body159, %for.cond156.preheader, %if.then135
  %intpt.3.lcssa.sink = phi ptr [ %incdec.ptr136, %if.then135 ], [ %intpt.2.lcssa, %for.cond156.preheader ], [ %incdec.ptr161, %for.body159 ]
  store i32 -1, ptr %intpt.3.lcssa.sink, align 4, !tbaa !10
  %conv164 = sitofp i32 %minscore.0.lcssa to double
  %mul165 = fmul double %conv164, 5.000000e-01
  %conv166 = fptosi double %mul165 to i32
  %86 = load ptr, ptr @veryfastsupg_int.tmptmplen, align 8, !tbaa !13
  %arrayidx168 = getelementptr inbounds i32, ptr %86, i64 %idxprom97
  %87 = load i32, ptr %arrayidx168, align 4, !tbaa !10
  %sub169 = sub nsw i32 %conv166, %87
  %conv170 = sitofp i32 %sub169 to double
  %arrayidx172 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv456
  %88 = load ptr, ptr %arrayidx172, align 8, !tbaa !13
  store double %conv170, ptr %88, align 8, !tbaa !20
  %arrayidx175 = getelementptr inbounds i32, ptr %86, i64 %idxprom131
  %89 = load i32, ptr %arrayidx175, align 4, !tbaa !10
  %sub176 = sub nsw i32 %conv166, %89
  %conv177 = sitofp i32 %sub176 to double
  %arrayidx180 = getelementptr inbounds double, ptr %88, i64 1
  store double %conv177, ptr %arrayidx180, align 8, !tbaa !20
  store i32 %conv166, ptr %arrayidx168, align 4, !tbaa !10
  store i32 %46, ptr %arrayidx98, align 4, !tbaa !10
  %90 = load ptr, ptr @veryfastsupg_int.eff, align 8
  br label %for.body188

for.body188:                                      ; preds = %if.end163, %for.inc228
  %i.5432 = phi i32 [ 0, %if.end163 ], [ %96, %for.inc228 ]
  %cmp189.not = icmp eq i32 %i.5432, %im.1.lcssa
  %cmp191.not = icmp eq i32 %i.5432, %jm.1.lcssa
  %or.cond = select i1 %cmp189.not, i1 true, i1 %cmp191.not
  br i1 %or.cond, label %for.inc228, label %if.then193

if.then193:                                       ; preds = %for.body188
  %cmp194 = icmp slt i32 %i.5432, %im.1.lcssa
  br i1 %cmp194, label %if.then193.if.end203_crit_edge, label %if.else197

if.then193.if.end203_crit_edge:                   ; preds = %if.then193
  %.pre466 = sext i32 %i.5432 to i64
  br label %if.end203

if.else197:                                       ; preds = %if.then193
  %i.5.jm.1 = tail call i32 @llvm.smin.i32(i32 %i.5432, i32 %jm.1.lcssa)
  %jm.1.i.5 = tail call i32 @llvm.smax.i32(i32 %i.5432, i32 %jm.1.lcssa)
  %.pre463 = sext i32 %i.5432 to i64
  %.pre464 = sext i32 %jm.1.i.5 to i64
  %.pre467 = sext i32 %i.5.jm.1 to i64
  br label %if.end203

if.end203:                                        ; preds = %if.then193.if.end203_crit_edge, %if.else197
  %idxprom208.pre-phi = phi i64 [ %.pre466, %if.then193.if.end203_crit_edge ], [ %.pre467, %if.else197 ]
  %idxprom204.pre-phi = phi i64 [ %.pre466, %if.then193.if.end203_crit_edge ], [ %idxprom97, %if.else197 ]
  %idxprom210.pre-phi = phi i64 [ %idxprom131, %if.then193.if.end203_crit_edge ], [ %.pre464, %if.else197 ]
  %idxprom206.pre-phi = phi i64 [ %idxprom97, %if.then193.if.end203_crit_edge ], [ %.pre463, %if.else197 ]
  %arrayidx205 = getelementptr inbounds ptr, ptr %90, i64 %idxprom204.pre-phi
  %91 = load ptr, ptr %arrayidx205, align 8, !tbaa !13
  %arrayidx207 = getelementptr inbounds i32, ptr %91, i64 %idxprom206.pre-phi
  %92 = load i32, ptr %arrayidx207, align 4, !tbaa !10
  %arrayidx209 = getelementptr inbounds ptr, ptr %90, i64 %idxprom208.pre-phi
  %93 = load ptr, ptr %arrayidx209, align 8, !tbaa !13
  %arrayidx211 = getelementptr inbounds i32, ptr %93, i64 %idxprom210.pre-phi
  %94 = load i32, ptr %arrayidx211, align 4, !tbaa !10
  %cond = tail call i32 @llvm.smin.i32(i32 %92, i32 %94)
  %conv214 = sitofp i32 %cond to float
  %conv215 = fpext float %conv214 to double
  %add217 = add nsw i32 %94, %92
  %conv218 = sitofp i32 %add217 to float
  %conv219 = fpext float %conv218 to double
  %mul220 = fmul double %conv219, 5.000000e-01
  %mul221 = fmul double %mul220, 1.000000e-01
  %95 = tail call double @llvm.fmuladd.f64(double %conv215, double 9.000000e-01, double %mul221)
  %conv222 = fptosi double %95 to i32
  store i32 %conv222, ptr %arrayidx207, align 4, !tbaa !10
  br label %for.inc228

for.inc228:                                       ; preds = %for.body188, %if.end203
  %idxprom229 = sext i32 %i.5432 to i64
  %arrayidx230 = getelementptr inbounds %struct._Achain, ptr %48, i64 %idxprom229
  %96 = load i32, ptr %arrayidx230, align 4, !tbaa !145
  %cmp186.not = icmp eq i32 %96, -1
  br i1 %cmp186.not, label %for.end232, label %for.body188, !llvm.loop !204

for.end232:                                       ; preds = %for.inc228
  %arrayidx234 = getelementptr inbounds %struct._Achain, ptr %48, i64 %idxprom131
  %prev235 = getelementptr inbounds %struct._Achain, ptr %48, i64 %idxprom131, i32 1
  %97 = load i32, ptr %prev235, align 4, !tbaa !149
  %98 = load i32, ptr %arrayidx234, align 4, !tbaa !145
  %idxprom239 = sext i32 %97 to i64
  %arrayidx240 = getelementptr inbounds %struct._Achain, ptr %48, i64 %idxprom239
  store i32 %98, ptr %arrayidx240, align 4, !tbaa !145
  %cmp242.not = icmp eq i32 %98, -1
  br i1 %cmp242.not, label %for.inc249, label %if.then244

if.then244:                                       ; preds = %for.end232
  %idxprom245 = sext i32 %98 to i64
  %prev247 = getelementptr inbounds %struct._Achain, ptr %48, i64 %idxprom245, i32 1
  store i32 %97, ptr %prev247, align 4, !tbaa !149
  br label %for.inc249

for.inc249:                                       ; preds = %for.end232, %if.then244
  %indvars.iv.next457 = add nuw nsw i64 %indvars.iv456, 1
  %exitcond460.not = icmp eq i64 %indvars.iv.next457, %wide.trip.count459
  br i1 %exitcond460.not, label %for.end251, label %for.body56, !llvm.loop !205

for.end251:                                       ; preds = %for.inc249, %for.end50.for.end251_crit_edge
  %99 = phi ptr [ %.pre465, %for.end50.for.end251_crit_edge ], [ %90, %for.inc249 ]
  tail call void @FreeIntMtx(ptr noundef %99) #34
  store ptr null, ptr @veryfastsupg_int.eff, align 8, !tbaa !13
  %100 = load ptr, ptr @veryfastsupg_int.tmptmplen, align 8, !tbaa !13
  tail call void @free(ptr noundef %100) #34
  store ptr null, ptr @veryfastsupg_int.tmptmplen, align 8, !tbaa !13
  %101 = load ptr, ptr @veryfastsupg_int.hist, align 8, !tbaa !13
  tail call void @free(ptr noundef %101) #34
  store ptr null, ptr @veryfastsupg_int.hist, align 8, !tbaa !13
  %102 = load ptr, ptr @veryfastsupg_int.ac, align 8, !tbaa !13
  tail call void @free(ptr noundef %102) #34
  store ptr null, ptr @veryfastsupg_int.ac, align 8, !tbaa !13
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @fastsupg(i32 noundef %nseq, ptr nocapture noundef readonly %oeff, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %len) local_unnamed_addr #12 {
entry:
  %0 = load ptr, ptr @fastsupg.eff, align 8, !tbaa !13
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, ptr @njob, align 4, !tbaa !10
  %call = tail call ptr @AllocateFloatMtx(i32 noundef %1, i32 noundef %1) #34
  store ptr %call, ptr @fastsupg.eff, align 8, !tbaa !13
  %2 = load i32, ptr @njob, align 4, !tbaa !10
  %call1 = tail call ptr @AllocateCharMtx(i32 noundef %2, i32 noundef %2) #34
  store ptr %call1, ptr @fastsupg.pair, align 8, !tbaa !13
  %3 = load i32, ptr @njob, align 4, !tbaa !10
  %call2 = tail call ptr @AllocateFloatVec(i32 noundef %3) #34
  store ptr %call2, ptr @fastsupg.tmplen, align 8, !tbaa !13
  %4 = load i32, ptr @njob, align 4, !tbaa !10
  %conv = sext i32 %4 to i64
  %call3 = tail call noalias ptr @calloc(i64 noundef %conv, i64 noundef 8) #38
  store ptr %call3, ptr @fastsupg.ac, align 8, !tbaa !13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp395 = icmp sgt i32 %nseq, 0
  br i1 %cmp395, label %for.cond5.preheader.lr.ph, label %for.end29.thread

for.cond5.preheader.lr.ph:                        ; preds = %if.end
  %5 = load ptr, ptr @fastsupg.eff, align 8
  %wide.trip.count447 = zext i32 %nseq to i64
  %min.iters.check = icmp ult i32 %nseq, 4
  %n.vec = and i64 %wide.trip.count447, 4294967292
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count447
  br label %for.cond5.preheader.us

for.cond5.preheader.us:                           ; preds = %for.cond5.for.inc16_crit_edge.us, %for.cond5.preheader.lr.ph
  %indvars.iv444 = phi i64 [ %indvars.iv.next445, %for.cond5.for.inc16_crit_edge.us ], [ 0, %for.cond5.preheader.lr.ph ]
  %arrayidx.us = getelementptr inbounds ptr, ptr %oeff, i64 %indvars.iv444
  %6 = load ptr, ptr %arrayidx.us, align 8, !tbaa !13
  %arrayidx13.us = getelementptr inbounds ptr, ptr %5, i64 %indvars.iv444
  %7 = load ptr, ptr %arrayidx13.us, align 8, !tbaa !13
  br i1 %min.iters.check, label %for.body8.us.preheader, label %vector.body

vector.body:                                      ; preds = %for.cond5.preheader.us, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.cond5.preheader.us ]
  %8 = getelementptr inbounds double, ptr %6, i64 %index
  %wide.load = load <2 x double>, ptr %8, align 8, !tbaa !20
  %9 = getelementptr inbounds double, ptr %8, i64 2
  %wide.load514 = load <2 x double>, ptr %9, align 8, !tbaa !20
  %10 = fptrunc <2 x double> %wide.load to <2 x float>
  %11 = fptrunc <2 x double> %wide.load514 to <2 x float>
  %12 = getelementptr inbounds float, ptr %7, i64 %index
  store <2 x float> %10, ptr %12, align 4, !tbaa !17
  %13 = getelementptr inbounds float, ptr %12, i64 2
  store <2 x float> %11, ptr %13, align 4, !tbaa !17
  %index.next = add nuw i64 %index, 4
  %14 = icmp eq i64 %index.next, %n.vec
  br i1 %14, label %middle.block, label %vector.body, !llvm.loop !206

middle.block:                                     ; preds = %vector.body
  br i1 %cmp.n, label %for.cond5.for.inc16_crit_edge.us, label %for.body8.us.preheader

for.body8.us.preheader:                           ; preds = %for.cond5.preheader.us, %middle.block
  %indvars.iv.ph = phi i64 [ 0, %for.cond5.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body8.us

for.body8.us:                                     ; preds = %for.body8.us.preheader, %for.body8.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body8.us ], [ %indvars.iv.ph, %for.body8.us.preheader ]
  %arrayidx10.us = getelementptr inbounds double, ptr %6, i64 %indvars.iv
  %15 = load double, ptr %arrayidx10.us, align 8, !tbaa !20
  %conv11.us = fptrunc double %15 to float
  %arrayidx15.us = getelementptr inbounds float, ptr %7, i64 %indvars.iv
  store float %conv11.us, ptr %arrayidx15.us, align 4, !tbaa !17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count447
  br i1 %exitcond.not, label %for.cond5.for.inc16_crit_edge.us, label %for.body8.us, !llvm.loop !207

for.cond5.for.inc16_crit_edge.us:                 ; preds = %for.body8.us, %middle.block
  %indvars.iv.next445 = add nuw nsw i64 %indvars.iv444, 1
  %exitcond448.not = icmp eq i64 %indvars.iv.next445, %wide.trip.count447
  br i1 %exitcond448.not, label %for.cond19.preheader, label %for.cond5.preheader.us, !llvm.loop !208

for.cond19.preheader:                             ; preds = %for.cond5.for.inc16_crit_edge.us
  br i1 %cmp395, label %for.body22.lr.ph, label %for.end29.thread

for.end29.thread:                                 ; preds = %for.cond19.preheader, %if.end
  %.pre = load ptr, ptr @fastsupg.ac, align 8, !tbaa !13
  %sub30503 = add nsw i32 %nseq, -1
  %idxprom31504 = sext i32 %sub30503 to i64
  %arrayidx32505 = getelementptr inbounds %struct._Achain, ptr %.pre, i64 %idxprom31504
  store i32 -1, ptr %arrayidx32505, align 4, !tbaa !145
  br label %for.end71.thread

for.body22.lr.ph:                                 ; preds = %for.cond19.preheader
  %16 = load ptr, ptr @fastsupg.ac, align 8, !tbaa !13
  %wide.trip.count453 = zext i32 %nseq to i64
  %min.iters.check517 = icmp ult i32 %nseq, 4
  br i1 %min.iters.check517, label %for.body22.preheader, label %vector.ph518

vector.ph518:                                     ; preds = %for.body22.lr.ph
  %n.vec520 = and i64 %wide.trip.count447, 4294967292
  br label %vector.body523

vector.body523:                                   ; preds = %vector.body523, %vector.ph518
  %index524 = phi i64 [ 0, %vector.ph518 ], [ %index.next531, %vector.body523 ]
  %vec.ind = phi <2 x i64> [ <i64 0, i64 1>, %vector.ph518 ], [ %vec.ind.next, %vector.body523 ]
  %vec.ind526 = phi <2 x i32> [ <i32 0, i32 1>, %vector.ph518 ], [ %vec.ind.next529, %vector.body523 ]
  %17 = or i64 %index524, 2
  %18 = trunc <2 x i64> %vec.ind to <2 x i32>
  %19 = add <2 x i32> %18, <i32 1, i32 1>
  %20 = trunc <2 x i64> %vec.ind to <2 x i32>
  %21 = add <2 x i32> %20, <i32 3, i32 3>
  %22 = add <2 x i32> %vec.ind526, <i32 -1, i32 -1>
  %23 = add <2 x i32> %vec.ind526, <i32 1, i32 1>
  %24 = getelementptr inbounds %struct._Achain, ptr %16, i64 %index524
  %25 = getelementptr inbounds %struct._Achain, ptr %16, i64 %17
  %interleaved.vec = shufflevector <2 x i32> %19, <2 x i32> %22, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x i32> %interleaved.vec, ptr %24, align 4, !tbaa !10
  %interleaved.vec530 = shufflevector <2 x i32> %21, <2 x i32> %23, <4 x i32> <i32 0, i32 2, i32 1, i32 3>
  store <4 x i32> %interleaved.vec530, ptr %25, align 4, !tbaa !10
  %index.next531 = add nuw i64 %index524, 4
  %vec.ind.next = add <2 x i64> %vec.ind, <i64 4, i64 4>
  %vec.ind.next529 = add <2 x i32> %vec.ind526, <i32 4, i32 4>
  %26 = icmp eq i64 %index.next531, %n.vec520
  br i1 %26, label %middle.block515, label %vector.body523, !llvm.loop !209

middle.block515:                                  ; preds = %vector.body523
  %cmp.n522 = icmp eq i64 %n.vec520, %wide.trip.count447
  br i1 %cmp.n522, label %for.end29, label %for.body22.preheader

for.body22.preheader:                             ; preds = %for.body22.lr.ph, %middle.block515
  %indvars.iv449.ph = phi i64 [ 0, %for.body22.lr.ph ], [ %n.vec520, %middle.block515 ]
  br label %for.body22

for.body22:                                       ; preds = %for.body22.preheader, %for.body22
  %indvars.iv449 = phi i64 [ %indvars.iv.next450, %for.body22 ], [ %indvars.iv449.ph, %for.body22.preheader ]
  %indvars.iv.next450 = add nuw nsw i64 %indvars.iv449, 1
  %arrayidx24 = getelementptr inbounds %struct._Achain, ptr %16, i64 %indvars.iv449
  %27 = trunc i64 %indvars.iv.next450 to i32
  store i32 %27, ptr %arrayidx24, align 4, !tbaa !145
  %prev = getelementptr inbounds %struct._Achain, ptr %16, i64 %indvars.iv449, i32 1
  %28 = trunc i64 %indvars.iv449 to i32
  %29 = add i32 %28, -1
  store i32 %29, ptr %prev, align 4, !tbaa !149
  %exitcond454.not = icmp eq i64 %indvars.iv.next450, %wide.trip.count453
  br i1 %exitcond454.not, label %for.end29, label %for.body22, !llvm.loop !210

for.end29:                                        ; preds = %for.body22, %middle.block515
  %sub30 = add nsw i32 %nseq, -1
  %idxprom31 = sext i32 %sub30 to i64
  %arrayidx32 = getelementptr inbounds %struct._Achain, ptr %16, i64 %idxprom31
  store i32 -1, ptr %arrayidx32, align 4, !tbaa !145
  br i1 %cmp395, label %for.cond47.preheader.lr.ph, label %for.end71.thread

for.cond47.preheader.lr.ph:                       ; preds = %for.end29
  %30 = load ptr, ptr @fastsupg.tmplen, align 8, !tbaa !13
  %31 = zext i32 %nseq to i64
  %32 = shl nuw nsw i64 %31, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %30, i8 0, i64 %32, i1 false), !tbaa !17
  %33 = load ptr, ptr @fastsupg.pair, align 8
  %wide.trip.count466 = zext i32 %nseq to i64
  %xtraiter = and i64 %wide.trip.count447, 3
  %34 = icmp ult i32 %nseq, 4
  %unroll_iter = and i64 %wide.trip.count447, 4294967292
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.cond47.preheader.us

for.cond47.preheader.us:                          ; preds = %for.cond47.for.inc58_crit_edge.us, %for.cond47.preheader.lr.ph
  %indvars.iv463 = phi i64 [ %indvars.iv.next464, %for.cond47.for.inc58_crit_edge.us ], [ 0, %for.cond47.preheader.lr.ph ]
  %arrayidx52.us = getelementptr inbounds ptr, ptr %33, i64 %indvars.iv463
  br i1 %34, label %for.cond47.for.inc58_crit_edge.us.unr-lcssa, label %for.body50.us

for.body50.us:                                    ; preds = %for.cond47.preheader.us, %for.body50.us
  %indvars.iv458 = phi i64 [ %indvars.iv.next459.3, %for.body50.us ], [ 0, %for.cond47.preheader.us ]
  %niter = phi i64 [ %niter.next.3, %for.body50.us ], [ 0, %for.cond47.preheader.us ]
  %35 = load ptr, ptr %arrayidx52.us, align 8, !tbaa !13
  %arrayidx54.us = getelementptr inbounds i8, ptr %35, i64 %indvars.iv458
  store i8 0, ptr %arrayidx54.us, align 1, !tbaa !5
  %indvars.iv.next459 = or i64 %indvars.iv458, 1
  %36 = load ptr, ptr %arrayidx52.us, align 8, !tbaa !13
  %arrayidx54.us.1 = getelementptr inbounds i8, ptr %36, i64 %indvars.iv.next459
  store i8 0, ptr %arrayidx54.us.1, align 1, !tbaa !5
  %indvars.iv.next459.1 = or i64 %indvars.iv458, 2
  %37 = load ptr, ptr %arrayidx52.us, align 8, !tbaa !13
  %arrayidx54.us.2 = getelementptr inbounds i8, ptr %37, i64 %indvars.iv.next459.1
  store i8 0, ptr %arrayidx54.us.2, align 1, !tbaa !5
  %indvars.iv.next459.2 = or i64 %indvars.iv458, 3
  %38 = load ptr, ptr %arrayidx52.us, align 8, !tbaa !13
  %arrayidx54.us.3 = getelementptr inbounds i8, ptr %38, i64 %indvars.iv.next459.2
  store i8 0, ptr %arrayidx54.us.3, align 1, !tbaa !5
  %indvars.iv.next459.3 = add nuw nsw i64 %indvars.iv458, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.cond47.for.inc58_crit_edge.us.unr-lcssa, label %for.body50.us, !llvm.loop !211

for.cond47.for.inc58_crit_edge.us.unr-lcssa:      ; preds = %for.body50.us, %for.cond47.preheader.us
  %indvars.iv458.unr = phi i64 [ 0, %for.cond47.preheader.us ], [ %indvars.iv.next459.3, %for.body50.us ]
  br i1 %lcmp.mod.not, label %for.cond47.for.inc58_crit_edge.us, label %for.body50.us.epil

for.body50.us.epil:                               ; preds = %for.cond47.for.inc58_crit_edge.us.unr-lcssa, %for.body50.us.epil
  %indvars.iv458.epil = phi i64 [ %indvars.iv.next459.epil, %for.body50.us.epil ], [ %indvars.iv458.unr, %for.cond47.for.inc58_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body50.us.epil ], [ 0, %for.cond47.for.inc58_crit_edge.us.unr-lcssa ]
  %39 = load ptr, ptr %arrayidx52.us, align 8, !tbaa !13
  %arrayidx54.us.epil = getelementptr inbounds i8, ptr %39, i64 %indvars.iv458.epil
  store i8 0, ptr %arrayidx54.us.epil, align 1, !tbaa !5
  %indvars.iv.next459.epil = add nuw nsw i64 %indvars.iv458.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond47.for.inc58_crit_edge.us, label %for.body50.us.epil, !llvm.loop !212

for.cond47.for.inc58_crit_edge.us:                ; preds = %for.body50.us.epil, %for.cond47.for.inc58_crit_edge.us.unr-lcssa
  %indvars.iv.next464 = add nuw nsw i64 %indvars.iv463, 1
  %exitcond467.not = icmp eq i64 %indvars.iv.next464, %wide.trip.count466
  br i1 %exitcond467.not, label %for.cond61.preheader, label %for.cond47.preheader.us, !llvm.loop !213

for.cond61.preheader:                             ; preds = %for.cond47.for.inc58_crit_edge.us
  br i1 %cmp395, label %for.body64.lr.ph, label %for.end71.thread

for.body64.lr.ph:                                 ; preds = %for.cond61.preheader
  %40 = load ptr, ptr @fastsupg.pair, align 8, !tbaa !13
  %xtraiter532 = and i64 %wide.trip.count447, 3
  %41 = icmp ult i32 %nseq, 4
  br i1 %41, label %for.end71.unr-lcssa, label %for.body64.lr.ph.new

for.body64.lr.ph.new:                             ; preds = %for.body64.lr.ph
  %unroll_iter535 = and i64 %wide.trip.count447, 4294967292
  br label %for.body64

for.body64:                                       ; preds = %for.body64, %for.body64.lr.ph.new
  %indvars.iv468 = phi i64 [ 0, %for.body64.lr.ph.new ], [ %indvars.iv.next469.3, %for.body64 ]
  %niter536 = phi i64 [ 0, %for.body64.lr.ph.new ], [ %niter536.next.3, %for.body64 ]
  %arrayidx66 = getelementptr inbounds ptr, ptr %40, i64 %indvars.iv468
  %42 = load ptr, ptr %arrayidx66, align 8, !tbaa !13
  %arrayidx68 = getelementptr inbounds i8, ptr %42, i64 %indvars.iv468
  store i8 1, ptr %arrayidx68, align 1, !tbaa !5
  %indvars.iv.next469 = or i64 %indvars.iv468, 1
  %arrayidx66.1 = getelementptr inbounds ptr, ptr %40, i64 %indvars.iv.next469
  %43 = load ptr, ptr %arrayidx66.1, align 8, !tbaa !13
  %arrayidx68.1 = getelementptr inbounds i8, ptr %43, i64 %indvars.iv.next469
  store i8 1, ptr %arrayidx68.1, align 1, !tbaa !5
  %indvars.iv.next469.1 = or i64 %indvars.iv468, 2
  %arrayidx66.2 = getelementptr inbounds ptr, ptr %40, i64 %indvars.iv.next469.1
  %44 = load ptr, ptr %arrayidx66.2, align 8, !tbaa !13
  %arrayidx68.2 = getelementptr inbounds i8, ptr %44, i64 %indvars.iv.next469.1
  store i8 1, ptr %arrayidx68.2, align 1, !tbaa !5
  %indvars.iv.next469.2 = or i64 %indvars.iv468, 3
  %arrayidx66.3 = getelementptr inbounds ptr, ptr %40, i64 %indvars.iv.next469.2
  %45 = load ptr, ptr %arrayidx66.3, align 8, !tbaa !13
  %arrayidx68.3 = getelementptr inbounds i8, ptr %45, i64 %indvars.iv.next469.2
  store i8 1, ptr %arrayidx68.3, align 1, !tbaa !5
  %indvars.iv.next469.3 = add nuw nsw i64 %indvars.iv468, 4
  %niter536.next.3 = add i64 %niter536, 4
  %niter536.ncmp.3 = icmp eq i64 %niter536.next.3, %unroll_iter535
  br i1 %niter536.ncmp.3, label %for.end71.unr-lcssa, label %for.body64, !llvm.loop !214

for.end71.thread:                                 ; preds = %for.cond61.preheader, %for.end29, %for.end29.thread
  %46 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc512 = tail call i32 @fputc(i32 10, ptr %46)
  br label %for.end272

for.end71.unr-lcssa:                              ; preds = %for.body64, %for.body64.lr.ph
  %indvars.iv468.unr = phi i64 [ 0, %for.body64.lr.ph ], [ %indvars.iv.next469.3, %for.body64 ]
  %lcmp.mod534.not = icmp eq i64 %xtraiter532, 0
  br i1 %lcmp.mod534.not, label %for.end71, label %for.body64.epil

for.body64.epil:                                  ; preds = %for.end71.unr-lcssa, %for.body64.epil
  %indvars.iv468.epil = phi i64 [ %indvars.iv.next469.epil, %for.body64.epil ], [ %indvars.iv468.unr, %for.end71.unr-lcssa ]
  %epil.iter533 = phi i64 [ %epil.iter533.next, %for.body64.epil ], [ 0, %for.end71.unr-lcssa ]
  %arrayidx66.epil = getelementptr inbounds ptr, ptr %40, i64 %indvars.iv468.epil
  %47 = load ptr, ptr %arrayidx66.epil, align 8, !tbaa !13
  %arrayidx68.epil = getelementptr inbounds i8, ptr %47, i64 %indvars.iv468.epil
  store i8 1, ptr %arrayidx68.epil, align 1, !tbaa !5
  %indvars.iv.next469.epil = add nuw nsw i64 %indvars.iv468.epil, 1
  %epil.iter533.next = add i64 %epil.iter533, 1
  %epil.iter533.cmp.not = icmp eq i64 %epil.iter533.next, %xtraiter532
  br i1 %epil.iter533.cmp.not, label %for.end71, label %for.body64.epil, !llvm.loop !215

for.end71:                                        ; preds = %for.body64.epil, %for.end71.unr-lcssa
  %48 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc = tail call i32 @fputc(i32 10, ptr %48)
  %cmp75439 = icmp sgt i32 %nseq, 1
  br i1 %cmp75439, label %for.body77.lr.ph, label %for.end272

for.body77.lr.ph:                                 ; preds = %for.end71
  %wide.trip.count496 = zext i32 %sub30 to i64
  %xtraiter537 = and i64 %wide.trip.count447, 3
  %49 = icmp ult i32 %nseq, 4
  %unroll_iter541 = and i64 %wide.trip.count447, 4294967292
  %lcmp.mod539.not = icmp eq i64 %xtraiter537, 0
  %xtraiter543 = and i64 %wide.trip.count447, 3
  %50 = icmp ult i32 %nseq, 4
  %unroll_iter547 = and i64 %wide.trip.count447, 4294967292
  %lcmp.mod545.not = icmp eq i64 %xtraiter543, 0
  %xtraiter549 = and i64 %wide.trip.count447, 1
  %unroll_iter552 = and i64 %wide.trip.count447, 4294967294
  %lcmp.mod551.not = icmp eq i64 %xtraiter549, 0
  %xtraiter554 = and i64 %wide.trip.count447, 3
  %51 = icmp ult i32 %nseq, 4
  %unroll_iter557 = and i64 %wide.trip.count447, 4294967292
  %lcmp.mod556.not = icmp eq i64 %xtraiter554, 0
  br label %for.body77

for.body77:                                       ; preds = %for.body77.lr.ph, %for.end251
  %indvars.iv493 = phi i64 [ 0, %for.body77.lr.ph ], [ %indvars.iv.next494, %for.end251 ]
  %jm.0442 = phi i32 [ -1, %for.body77.lr.ph ], [ %jm.1.lcssa, %for.end251 ]
  %im.0441 = phi i32 [ -1, %for.body77.lr.ph ], [ %im.1.lcssa, %for.end251 ]
  %52 = trunc i64 %indvars.iv493 to i32
  %rem = urem i32 %52, 10
  %cmp78 = icmp eq i32 %rem, 0
  br i1 %cmp78, label %if.then80, label %if.end82

if.then80:                                        ; preds = %for.body77
  %53 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call81 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %53, ptr noundef nonnull @.str.24, i32 noundef %52, i32 noundef %nseq) #32
  br label %if.end82

if.end82:                                         ; preds = %if.then80, %for.body77
  %54 = load ptr, ptr @fastsupg.ac, align 8, !tbaa !13
  %55 = load i32, ptr %54, align 4, !tbaa !145
  %cmp87.not415 = icmp eq i32 %55, -1
  br i1 %cmp87.not415, label %for.body121.lr.ph, label %for.cond93.preheader.lr.ph

for.cond93.preheader.lr.ph:                       ; preds = %if.end82
  %56 = load ptr, ptr @fastsupg.eff, align 8, !tbaa !13
  br label %for.cond93.preheader

for.cond93.for.cond83.loopexit_crit_edge:         ; preds = %for.body96
  %idxprom84 = sext i32 %58 to i64
  %arrayidx85 = getelementptr inbounds %struct._Achain, ptr %54, i64 %idxprom84
  %57 = load i32, ptr %arrayidx85, align 4, !tbaa !145
  %cmp87.not = icmp eq i32 %57, -1
  br i1 %cmp87.not, label %for.body121.lr.ph, label %for.cond93.preheader, !llvm.loop !216

for.cond93.preheader:                             ; preds = %for.cond93.preheader.lr.ph, %for.cond93.for.cond83.loopexit_crit_edge
  %58 = phi i32 [ %55, %for.cond93.preheader.lr.ph ], [ %57, %for.cond93.for.cond83.loopexit_crit_edge ]
  %idxprom84420 = phi i64 [ 0, %for.cond93.preheader.lr.ph ], [ %idxprom84, %for.cond93.for.cond83.loopexit_crit_edge ]
  %jm.1419 = phi i32 [ %jm.0442, %for.cond93.preheader.lr.ph ], [ %jm.3, %for.cond93.for.cond83.loopexit_crit_edge ]
  %im.1418 = phi i32 [ %im.0441, %for.cond93.preheader.lr.ph ], [ %im.3, %for.cond93.for.cond83.loopexit_crit_edge ]
  %minscore.0417 = phi float [ 9.999000e+03, %for.cond93.preheader.lr.ph ], [ %minscore.2, %for.cond93.for.cond83.loopexit_crit_edge ]
  %i.5416 = phi i32 [ 0, %for.cond93.preheader.lr.ph ], [ %58, %for.cond93.for.cond83.loopexit_crit_edge ]
  %arrayidx98 = getelementptr inbounds ptr, ptr %56, i64 %idxprom84420
  %59 = load ptr, ptr %arrayidx98, align 8, !tbaa !13
  br label %for.body96

for.body96:                                       ; preds = %for.cond93.preheader, %for.body96
  %jm.2411 = phi i32 [ %jm.1419, %for.cond93.preheader ], [ %jm.3, %for.body96 ]
  %im.2410 = phi i32 [ %im.1418, %for.cond93.preheader ], [ %im.3, %for.body96 ]
  %minscore.1409 = phi float [ %minscore.0417, %for.cond93.preheader ], [ %minscore.2, %for.body96 ]
  %j.2408 = phi i32 [ %58, %for.cond93.preheader ], [ %61, %for.body96 ]
  %idxprom99 = sext i32 %j.2408 to i64
  %arrayidx100 = getelementptr inbounds float, ptr %59, i64 %idxprom99
  %60 = load float, ptr %arrayidx100, align 4, !tbaa !17
  %cmp101 = fcmp olt float %60, %minscore.1409
  %minscore.2 = select i1 %cmp101, float %60, float %minscore.1409
  %im.3 = select i1 %cmp101, i32 %i.5416, i32 %im.2410
  %jm.3 = select i1 %cmp101, i32 %j.2408, i32 %jm.2411
  %arrayidx107 = getelementptr inbounds %struct._Achain, ptr %54, i64 %idxprom99
  %61 = load i32, ptr %arrayidx107, align 4, !tbaa !145
  %cmp94.not = icmp eq i32 %61, -1
  br i1 %cmp94.not, label %for.cond93.for.cond83.loopexit_crit_edge, label %for.body96, !llvm.loop !217

for.body121.lr.ph:                                ; preds = %for.cond93.for.cond83.loopexit_crit_edge, %if.end82
  %minscore.0.lcssa = phi float [ 9.999000e+03, %if.end82 ], [ %minscore.2, %for.cond93.for.cond83.loopexit_crit_edge ]
  %im.1.lcssa = phi i32 [ %im.0441, %if.end82 ], [ %im.3, %for.cond93.for.cond83.loopexit_crit_edge ]
  %jm.1.lcssa = phi i32 [ %jm.0442, %if.end82 ], [ %jm.3, %for.cond93.for.cond83.loopexit_crit_edge ]
  %arrayidx116 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv493
  %62 = load ptr, ptr %arrayidx116, align 8, !tbaa !13
  %63 = load ptr, ptr %62, align 8, !tbaa !13
  %64 = load ptr, ptr @fastsupg.pair, align 8, !tbaa !13
  %idxprom122 = sext i32 %im.1.lcssa to i64
  %arrayidx123 = getelementptr inbounds ptr, ptr %64, i64 %idxprom122
  %65 = load ptr, ptr %arrayidx123, align 8, !tbaa !13
  br i1 %49, label %for.body140.lr.ph.unr-lcssa, label %for.body121

for.body121:                                      ; preds = %for.body121.lr.ph, %for.inc131.3
  %indvars.iv473 = phi i64 [ %indvars.iv.next474.3, %for.inc131.3 ], [ 0, %for.body121.lr.ph ]
  %intpt.0426 = phi ptr [ %intpt.1.3, %for.inc131.3 ], [ %63, %for.body121.lr.ph ]
  %niter542 = phi i64 [ %niter542.next.3, %for.inc131.3 ], [ 0, %for.body121.lr.ph ]
  %arrayidx125 = getelementptr inbounds i8, ptr %65, i64 %indvars.iv473
  %66 = load i8, ptr %arrayidx125, align 1, !tbaa !5
  %cmp127 = icmp sgt i8 %66, 0
  br i1 %cmp127, label %if.then129, label %for.inc131

if.then129:                                       ; preds = %for.body121
  %incdec.ptr = getelementptr inbounds i32, ptr %intpt.0426, i64 1
  %67 = trunc i64 %indvars.iv473 to i32
  store i32 %67, ptr %intpt.0426, align 4, !tbaa !10
  br label %for.inc131

for.inc131:                                       ; preds = %for.body121, %if.then129
  %intpt.1 = phi ptr [ %incdec.ptr, %if.then129 ], [ %intpt.0426, %for.body121 ]
  %indvars.iv.next474 = or i64 %indvars.iv473, 1
  %arrayidx125.1 = getelementptr inbounds i8, ptr %65, i64 %indvars.iv.next474
  %68 = load i8, ptr %arrayidx125.1, align 1, !tbaa !5
  %cmp127.1 = icmp sgt i8 %68, 0
  br i1 %cmp127.1, label %if.then129.1, label %for.inc131.1

if.then129.1:                                     ; preds = %for.inc131
  %incdec.ptr.1 = getelementptr inbounds i32, ptr %intpt.1, i64 1
  %69 = trunc i64 %indvars.iv.next474 to i32
  store i32 %69, ptr %intpt.1, align 4, !tbaa !10
  br label %for.inc131.1

for.inc131.1:                                     ; preds = %if.then129.1, %for.inc131
  %intpt.1.1 = phi ptr [ %incdec.ptr.1, %if.then129.1 ], [ %intpt.1, %for.inc131 ]
  %indvars.iv.next474.1 = or i64 %indvars.iv473, 2
  %arrayidx125.2 = getelementptr inbounds i8, ptr %65, i64 %indvars.iv.next474.1
  %70 = load i8, ptr %arrayidx125.2, align 1, !tbaa !5
  %cmp127.2 = icmp sgt i8 %70, 0
  br i1 %cmp127.2, label %if.then129.2, label %for.inc131.2

if.then129.2:                                     ; preds = %for.inc131.1
  %incdec.ptr.2 = getelementptr inbounds i32, ptr %intpt.1.1, i64 1
  %71 = trunc i64 %indvars.iv.next474.1 to i32
  store i32 %71, ptr %intpt.1.1, align 4, !tbaa !10
  br label %for.inc131.2

for.inc131.2:                                     ; preds = %if.then129.2, %for.inc131.1
  %intpt.1.2 = phi ptr [ %incdec.ptr.2, %if.then129.2 ], [ %intpt.1.1, %for.inc131.1 ]
  %indvars.iv.next474.2 = or i64 %indvars.iv473, 3
  %arrayidx125.3 = getelementptr inbounds i8, ptr %65, i64 %indvars.iv.next474.2
  %72 = load i8, ptr %arrayidx125.3, align 1, !tbaa !5
  %cmp127.3 = icmp sgt i8 %72, 0
  br i1 %cmp127.3, label %if.then129.3, label %for.inc131.3

if.then129.3:                                     ; preds = %for.inc131.2
  %incdec.ptr.3 = getelementptr inbounds i32, ptr %intpt.1.2, i64 1
  %73 = trunc i64 %indvars.iv.next474.2 to i32
  store i32 %73, ptr %intpt.1.2, align 4, !tbaa !10
  br label %for.inc131.3

for.inc131.3:                                     ; preds = %if.then129.3, %for.inc131.2
  %intpt.1.3 = phi ptr [ %incdec.ptr.3, %if.then129.3 ], [ %intpt.1.2, %for.inc131.2 ]
  %indvars.iv.next474.3 = add nuw nsw i64 %indvars.iv473, 4
  %niter542.next.3 = add i64 %niter542, 4
  %niter542.ncmp.3 = icmp eq i64 %niter542.next.3, %unroll_iter541
  br i1 %niter542.ncmp.3, label %for.body140.lr.ph.unr-lcssa, label %for.body121, !llvm.loop !218

for.body140.lr.ph.unr-lcssa:                      ; preds = %for.inc131.3, %for.body121.lr.ph
  %intpt.1.lcssa.ph = phi ptr [ undef, %for.body121.lr.ph ], [ %intpt.1.3, %for.inc131.3 ]
  %indvars.iv473.unr = phi i64 [ 0, %for.body121.lr.ph ], [ %indvars.iv.next474.3, %for.inc131.3 ]
  %intpt.0426.unr = phi ptr [ %63, %for.body121.lr.ph ], [ %intpt.1.3, %for.inc131.3 ]
  br i1 %lcmp.mod539.not, label %for.body140.lr.ph, label %for.body121.epil

for.body121.epil:                                 ; preds = %for.body140.lr.ph.unr-lcssa, %for.inc131.epil
  %indvars.iv473.epil = phi i64 [ %indvars.iv.next474.epil, %for.inc131.epil ], [ %indvars.iv473.unr, %for.body140.lr.ph.unr-lcssa ]
  %intpt.0426.epil = phi ptr [ %intpt.1.epil, %for.inc131.epil ], [ %intpt.0426.unr, %for.body140.lr.ph.unr-lcssa ]
  %epil.iter538 = phi i64 [ %epil.iter538.next, %for.inc131.epil ], [ 0, %for.body140.lr.ph.unr-lcssa ]
  %arrayidx125.epil = getelementptr inbounds i8, ptr %65, i64 %indvars.iv473.epil
  %74 = load i8, ptr %arrayidx125.epil, align 1, !tbaa !5
  %cmp127.epil = icmp sgt i8 %74, 0
  br i1 %cmp127.epil, label %if.then129.epil, label %for.inc131.epil

if.then129.epil:                                  ; preds = %for.body121.epil
  %incdec.ptr.epil = getelementptr inbounds i32, ptr %intpt.0426.epil, i64 1
  %75 = trunc i64 %indvars.iv473.epil to i32
  store i32 %75, ptr %intpt.0426.epil, align 4, !tbaa !10
  br label %for.inc131.epil

for.inc131.epil:                                  ; preds = %if.then129.epil, %for.body121.epil
  %intpt.1.epil = phi ptr [ %incdec.ptr.epil, %if.then129.epil ], [ %intpt.0426.epil, %for.body121.epil ]
  %indvars.iv.next474.epil = add nuw nsw i64 %indvars.iv473.epil, 1
  %epil.iter538.next = add i64 %epil.iter538, 1
  %epil.iter538.cmp.not = icmp eq i64 %epil.iter538.next, %xtraiter537
  br i1 %epil.iter538.cmp.not, label %for.body140.lr.ph, label %for.body121.epil, !llvm.loop !219

for.body140.lr.ph:                                ; preds = %for.inc131.epil, %for.body140.lr.ph.unr-lcssa
  %intpt.1.lcssa = phi ptr [ %intpt.1.lcssa.ph, %for.body140.lr.ph.unr-lcssa ], [ %intpt.1.epil, %for.inc131.epil ]
  store i32 -1, ptr %intpt.1.lcssa, align 4, !tbaa !10
  %arrayidx136 = getelementptr inbounds ptr, ptr %62, i64 1
  %76 = load ptr, ptr %arrayidx136, align 8, !tbaa !13
  %77 = load ptr, ptr @fastsupg.pair, align 8, !tbaa !13
  %idxprom141 = sext i32 %jm.1.lcssa to i64
  %arrayidx142 = getelementptr inbounds ptr, ptr %77, i64 %idxprom141
  %78 = load ptr, ptr %arrayidx142, align 8, !tbaa !13
  br i1 %50, label %for.body179.lr.ph.unr-lcssa, label %for.body140

for.body140:                                      ; preds = %for.body140.lr.ph, %for.inc151.3
  %indvars.iv478 = phi i64 [ %indvars.iv.next479.3, %for.inc151.3 ], [ 0, %for.body140.lr.ph ]
  %intpt.2430 = phi ptr [ %intpt.3.3, %for.inc151.3 ], [ %76, %for.body140.lr.ph ]
  %niter548 = phi i64 [ %niter548.next.3, %for.inc151.3 ], [ 0, %for.body140.lr.ph ]
  %arrayidx144 = getelementptr inbounds i8, ptr %78, i64 %indvars.iv478
  %79 = load i8, ptr %arrayidx144, align 1, !tbaa !5
  %cmp146 = icmp sgt i8 %79, 0
  br i1 %cmp146, label %if.then148, label %for.inc151

if.then148:                                       ; preds = %for.body140
  %incdec.ptr149 = getelementptr inbounds i32, ptr %intpt.2430, i64 1
  %80 = trunc i64 %indvars.iv478 to i32
  store i32 %80, ptr %intpt.2430, align 4, !tbaa !10
  br label %for.inc151

for.inc151:                                       ; preds = %for.body140, %if.then148
  %intpt.3 = phi ptr [ %incdec.ptr149, %if.then148 ], [ %intpt.2430, %for.body140 ]
  %indvars.iv.next479 = or i64 %indvars.iv478, 1
  %arrayidx144.1 = getelementptr inbounds i8, ptr %78, i64 %indvars.iv.next479
  %81 = load i8, ptr %arrayidx144.1, align 1, !tbaa !5
  %cmp146.1 = icmp sgt i8 %81, 0
  br i1 %cmp146.1, label %if.then148.1, label %for.inc151.1

if.then148.1:                                     ; preds = %for.inc151
  %incdec.ptr149.1 = getelementptr inbounds i32, ptr %intpt.3, i64 1
  %82 = trunc i64 %indvars.iv.next479 to i32
  store i32 %82, ptr %intpt.3, align 4, !tbaa !10
  br label %for.inc151.1

for.inc151.1:                                     ; preds = %if.then148.1, %for.inc151
  %intpt.3.1 = phi ptr [ %incdec.ptr149.1, %if.then148.1 ], [ %intpt.3, %for.inc151 ]
  %indvars.iv.next479.1 = or i64 %indvars.iv478, 2
  %arrayidx144.2 = getelementptr inbounds i8, ptr %78, i64 %indvars.iv.next479.1
  %83 = load i8, ptr %arrayidx144.2, align 1, !tbaa !5
  %cmp146.2 = icmp sgt i8 %83, 0
  br i1 %cmp146.2, label %if.then148.2, label %for.inc151.2

if.then148.2:                                     ; preds = %for.inc151.1
  %incdec.ptr149.2 = getelementptr inbounds i32, ptr %intpt.3.1, i64 1
  %84 = trunc i64 %indvars.iv.next479.1 to i32
  store i32 %84, ptr %intpt.3.1, align 4, !tbaa !10
  br label %for.inc151.2

for.inc151.2:                                     ; preds = %if.then148.2, %for.inc151.1
  %intpt.3.2 = phi ptr [ %incdec.ptr149.2, %if.then148.2 ], [ %intpt.3.1, %for.inc151.1 ]
  %indvars.iv.next479.2 = or i64 %indvars.iv478, 3
  %arrayidx144.3 = getelementptr inbounds i8, ptr %78, i64 %indvars.iv.next479.2
  %85 = load i8, ptr %arrayidx144.3, align 1, !tbaa !5
  %cmp146.3 = icmp sgt i8 %85, 0
  br i1 %cmp146.3, label %if.then148.3, label %for.inc151.3

if.then148.3:                                     ; preds = %for.inc151.2
  %incdec.ptr149.3 = getelementptr inbounds i32, ptr %intpt.3.2, i64 1
  %86 = trunc i64 %indvars.iv.next479.2 to i32
  store i32 %86, ptr %intpt.3.2, align 4, !tbaa !10
  br label %for.inc151.3

for.inc151.3:                                     ; preds = %if.then148.3, %for.inc151.2
  %intpt.3.3 = phi ptr [ %incdec.ptr149.3, %if.then148.3 ], [ %intpt.3.2, %for.inc151.2 ]
  %indvars.iv.next479.3 = add nuw nsw i64 %indvars.iv478, 4
  %niter548.next.3 = add i64 %niter548, 4
  %niter548.ncmp.3 = icmp eq i64 %niter548.next.3, %unroll_iter547
  br i1 %niter548.ncmp.3, label %for.body179.lr.ph.unr-lcssa, label %for.body140, !llvm.loop !220

for.body179.lr.ph.unr-lcssa:                      ; preds = %for.inc151.3, %for.body140.lr.ph
  %intpt.3.lcssa.ph = phi ptr [ undef, %for.body140.lr.ph ], [ %intpt.3.3, %for.inc151.3 ]
  %indvars.iv478.unr = phi i64 [ 0, %for.body140.lr.ph ], [ %indvars.iv.next479.3, %for.inc151.3 ]
  %intpt.2430.unr = phi ptr [ %76, %for.body140.lr.ph ], [ %intpt.3.3, %for.inc151.3 ]
  br i1 %lcmp.mod545.not, label %for.body179.lr.ph, label %for.body140.epil

for.body140.epil:                                 ; preds = %for.body179.lr.ph.unr-lcssa, %for.inc151.epil
  %indvars.iv478.epil = phi i64 [ %indvars.iv.next479.epil, %for.inc151.epil ], [ %indvars.iv478.unr, %for.body179.lr.ph.unr-lcssa ]
  %intpt.2430.epil = phi ptr [ %intpt.3.epil, %for.inc151.epil ], [ %intpt.2430.unr, %for.body179.lr.ph.unr-lcssa ]
  %epil.iter544 = phi i64 [ %epil.iter544.next, %for.inc151.epil ], [ 0, %for.body179.lr.ph.unr-lcssa ]
  %arrayidx144.epil = getelementptr inbounds i8, ptr %78, i64 %indvars.iv478.epil
  %87 = load i8, ptr %arrayidx144.epil, align 1, !tbaa !5
  %cmp146.epil = icmp sgt i8 %87, 0
  br i1 %cmp146.epil, label %if.then148.epil, label %for.inc151.epil

if.then148.epil:                                  ; preds = %for.body140.epil
  %incdec.ptr149.epil = getelementptr inbounds i32, ptr %intpt.2430.epil, i64 1
  %88 = trunc i64 %indvars.iv478.epil to i32
  store i32 %88, ptr %intpt.2430.epil, align 4, !tbaa !10
  br label %for.inc151.epil

for.inc151.epil:                                  ; preds = %if.then148.epil, %for.body140.epil
  %intpt.3.epil = phi ptr [ %incdec.ptr149.epil, %if.then148.epil ], [ %intpt.2430.epil, %for.body140.epil ]
  %indvars.iv.next479.epil = add nuw nsw i64 %indvars.iv478.epil, 1
  %epil.iter544.next = add i64 %epil.iter544, 1
  %epil.iter544.cmp.not = icmp eq i64 %epil.iter544.next, %xtraiter543
  br i1 %epil.iter544.cmp.not, label %for.body179.lr.ph, label %for.body140.epil, !llvm.loop !221

for.body179.lr.ph:                                ; preds = %for.inc151.epil, %for.body179.lr.ph.unr-lcssa
  %intpt.3.lcssa = phi ptr [ %intpt.3.lcssa.ph, %for.body179.lr.ph.unr-lcssa ], [ %intpt.3.epil, %for.inc151.epil ]
  store i32 -1, ptr %intpt.3.lcssa, align 4, !tbaa !10
  %conv155 = fmul float %minscore.0.lcssa, 5.000000e-01
  %conv156 = fpext float %conv155 to double
  %89 = load ptr, ptr @fastsupg.tmplen, align 8, !tbaa !13
  %idxprom157 = sext i32 %im.1.lcssa to i64
  %arrayidx158 = getelementptr inbounds float, ptr %89, i64 %idxprom157
  %arrayidx162 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv493
  %90 = load ptr, ptr %arrayidx162, align 8, !tbaa !13
  %arrayidx166 = getelementptr inbounds float, ptr %89, i64 %idxprom141
  %91 = load float, ptr %arrayidx158, align 4, !tbaa !17
  %92 = load float, ptr %arrayidx166, align 4, !tbaa !17
  %93 = insertelement <2 x float> poison, float %91, i64 0
  %94 = insertelement <2 x float> %93, float %92, i64 1
  %95 = fpext <2 x float> %94 to <2 x double>
  %96 = insertelement <2 x double> poison, double %conv156, i64 0
  %97 = shufflevector <2 x double> %96, <2 x double> poison, <2 x i32> zeroinitializer
  %98 = fsub <2 x double> %97, %95
  store <2 x double> %98, ptr %90, align 8, !tbaa !20
  store float %conv155, ptr %arrayidx158, align 4, !tbaa !17
  %99 = load ptr, ptr @fastsupg.pair, align 8, !tbaa !13
  %arrayidx181 = getelementptr inbounds ptr, ptr %99, i64 %idxprom141
  %arrayidx188 = getelementptr inbounds ptr, ptr %99, i64 %idxprom157
  br label %for.body179

for.body200.lr.ph.unr-lcssa:                      ; preds = %for.body179
  br i1 %lcmp.mod551.not, label %for.body200.lr.ph, label %for.body179.epil

for.body179.epil:                                 ; preds = %for.body200.lr.ph.unr-lcssa
  %100 = load ptr, ptr %arrayidx181, align 8, !tbaa !13
  %arrayidx183.epil = getelementptr inbounds i8, ptr %100, i64 %indvars.iv.next484.1
  %101 = load i8, ptr %arrayidx183.epil, align 1, !tbaa !5
  %cmp185.epil = icmp sgt i8 %101, 0
  %conv186.epil = zext i1 %cmp185.epil to i8
  %102 = load ptr, ptr %arrayidx188, align 8, !tbaa !13
  %arrayidx190.epil = getelementptr inbounds i8, ptr %102, i64 %indvars.iv.next484.1
  %103 = load i8, ptr %arrayidx190.epil, align 1, !tbaa !5
  %add192.epil = add i8 %103, %conv186.epil
  store i8 %add192.epil, ptr %arrayidx190.epil, align 1, !tbaa !5
  br label %for.body200.lr.ph

for.body200.lr.ph:                                ; preds = %for.body200.lr.ph.unr-lcssa, %for.body179.epil
  %104 = load ptr, ptr @fastsupg.pair, align 8, !tbaa !13
  %arrayidx202 = getelementptr inbounds ptr, ptr %104, i64 %idxprom141
  br i1 %51, label %for.cond208.preheader.unr-lcssa, label %for.body200

for.body179:                                      ; preds = %for.body179, %for.body179.lr.ph
  %indvars.iv483 = phi i64 [ 0, %for.body179.lr.ph ], [ %indvars.iv.next484.1, %for.body179 ]
  %niter553 = phi i64 [ 0, %for.body179.lr.ph ], [ %niter553.next.1, %for.body179 ]
  %105 = load ptr, ptr %arrayidx181, align 8, !tbaa !13
  %arrayidx183 = getelementptr inbounds i8, ptr %105, i64 %indvars.iv483
  %106 = load i8, ptr %arrayidx183, align 1, !tbaa !5
  %cmp185 = icmp sgt i8 %106, 0
  %conv186 = zext i1 %cmp185 to i8
  %107 = load ptr, ptr %arrayidx188, align 8, !tbaa !13
  %arrayidx190 = getelementptr inbounds i8, ptr %107, i64 %indvars.iv483
  %108 = load i8, ptr %arrayidx190, align 1, !tbaa !5
  %add192 = add i8 %108, %conv186
  store i8 %add192, ptr %arrayidx190, align 1, !tbaa !5
  %indvars.iv.next484 = or i64 %indvars.iv483, 1
  %109 = load ptr, ptr %arrayidx181, align 8, !tbaa !13
  %arrayidx183.1 = getelementptr inbounds i8, ptr %109, i64 %indvars.iv.next484
  %110 = load i8, ptr %arrayidx183.1, align 1, !tbaa !5
  %cmp185.1 = icmp sgt i8 %110, 0
  %conv186.1 = zext i1 %cmp185.1 to i8
  %111 = load ptr, ptr %arrayidx188, align 8, !tbaa !13
  %arrayidx190.1 = getelementptr inbounds i8, ptr %111, i64 %indvars.iv.next484
  %112 = load i8, ptr %arrayidx190.1, align 1, !tbaa !5
  %add192.1 = add i8 %112, %conv186.1
  store i8 %add192.1, ptr %arrayidx190.1, align 1, !tbaa !5
  %indvars.iv.next484.1 = add nuw nsw i64 %indvars.iv483, 2
  %niter553.next.1 = add i64 %niter553, 2
  %niter553.ncmp.1 = icmp eq i64 %niter553.next.1, %unroll_iter552
  br i1 %niter553.ncmp.1, label %for.body200.lr.ph.unr-lcssa, label %for.body179, !llvm.loop !222

for.cond208.preheader.unr-lcssa:                  ; preds = %for.body200, %for.body200.lr.ph
  %indvars.iv488.unr = phi i64 [ 0, %for.body200.lr.ph ], [ %indvars.iv.next489.3, %for.body200 ]
  br i1 %lcmp.mod556.not, label %for.cond208.preheader, label %for.body200.epil

for.body200.epil:                                 ; preds = %for.cond208.preheader.unr-lcssa, %for.body200.epil
  %indvars.iv488.epil = phi i64 [ %indvars.iv.next489.epil, %for.body200.epil ], [ %indvars.iv488.unr, %for.cond208.preheader.unr-lcssa ]
  %epil.iter555 = phi i64 [ %epil.iter555.next, %for.body200.epil ], [ 0, %for.cond208.preheader.unr-lcssa ]
  %113 = load ptr, ptr %arrayidx202, align 8, !tbaa !13
  %arrayidx204.epil = getelementptr inbounds i8, ptr %113, i64 %indvars.iv488.epil
  store i8 0, ptr %arrayidx204.epil, align 1, !tbaa !5
  %indvars.iv.next489.epil = add nuw nsw i64 %indvars.iv488.epil, 1
  %epil.iter555.next = add i64 %epil.iter555, 1
  %epil.iter555.cmp.not = icmp eq i64 %epil.iter555.next, %xtraiter554
  br i1 %epil.iter555.cmp.not, label %for.cond208.preheader, label %for.body200.epil, !llvm.loop !223

for.cond208.preheader:                            ; preds = %for.body200.epil, %for.cond208.preheader.unr-lcssa
  %114 = load ptr, ptr @fastsupg.eff, align 8
  br label %for.body211

for.body200:                                      ; preds = %for.body200.lr.ph, %for.body200
  %indvars.iv488 = phi i64 [ %indvars.iv.next489.3, %for.body200 ], [ 0, %for.body200.lr.ph ]
  %niter558 = phi i64 [ %niter558.next.3, %for.body200 ], [ 0, %for.body200.lr.ph ]
  %115 = load ptr, ptr %arrayidx202, align 8, !tbaa !13
  %arrayidx204 = getelementptr inbounds i8, ptr %115, i64 %indvars.iv488
  store i8 0, ptr %arrayidx204, align 1, !tbaa !5
  %indvars.iv.next489 = or i64 %indvars.iv488, 1
  %116 = load ptr, ptr %arrayidx202, align 8, !tbaa !13
  %arrayidx204.1 = getelementptr inbounds i8, ptr %116, i64 %indvars.iv.next489
  store i8 0, ptr %arrayidx204.1, align 1, !tbaa !5
  %indvars.iv.next489.1 = or i64 %indvars.iv488, 2
  %117 = load ptr, ptr %arrayidx202, align 8, !tbaa !13
  %arrayidx204.2 = getelementptr inbounds i8, ptr %117, i64 %indvars.iv.next489.1
  store i8 0, ptr %arrayidx204.2, align 1, !tbaa !5
  %indvars.iv.next489.2 = or i64 %indvars.iv488, 3
  %118 = load ptr, ptr %arrayidx202, align 8, !tbaa !13
  %arrayidx204.3 = getelementptr inbounds i8, ptr %118, i64 %indvars.iv.next489.2
  store i8 0, ptr %arrayidx204.3, align 1, !tbaa !5
  %indvars.iv.next489.3 = add nuw nsw i64 %indvars.iv488, 4
  %niter558.next.3 = add i64 %niter558, 4
  %niter558.ncmp.3 = icmp eq i64 %niter558.next.3, %unroll_iter557
  br i1 %niter558.ncmp.3, label %for.cond208.preheader.unr-lcssa, label %for.body200, !llvm.loop !224

for.body211:                                      ; preds = %for.cond208.preheader, %for.inc247
  %i.10437 = phi i32 [ 0, %for.cond208.preheader ], [ %124, %for.inc247 ]
  %cmp212.not = icmp eq i32 %i.10437, %im.1.lcssa
  %cmp214.not = icmp eq i32 %i.10437, %jm.1.lcssa
  %or.cond = select i1 %cmp212.not, i1 true, i1 %cmp214.not
  br i1 %or.cond, label %for.inc247, label %if.then216

if.then216:                                       ; preds = %for.body211
  %cmp217 = icmp slt i32 %i.10437, %im.1.lcssa
  br i1 %cmp217, label %if.then216.if.end225_crit_edge, label %if.else

if.then216.if.end225_crit_edge:                   ; preds = %if.then216
  %.pre501 = sext i32 %i.10437 to i64
  br label %if.end225

if.else:                                          ; preds = %if.then216
  %i.10.jm.1 = tail call i32 @llvm.smin.i32(i32 %i.10437, i32 %jm.1.lcssa)
  %jm.1.i.10 = tail call i32 @llvm.smax.i32(i32 %i.10437, i32 %jm.1.lcssa)
  %.pre499 = sext i32 %i.10437 to i64
  %.pre500 = sext i32 %jm.1.i.10 to i64
  %.pre502 = sext i32 %i.10.jm.1 to i64
  br label %if.end225

if.end225:                                        ; preds = %if.then216.if.end225_crit_edge, %if.else
  %idxprom230.pre-phi = phi i64 [ %.pre501, %if.then216.if.end225_crit_edge ], [ %.pre502, %if.else ]
  %idxprom226.pre-phi = phi i64 [ %.pre501, %if.then216.if.end225_crit_edge ], [ %idxprom157, %if.else ]
  %idxprom232.pre-phi = phi i64 [ %idxprom141, %if.then216.if.end225_crit_edge ], [ %.pre500, %if.else ]
  %idxprom228.pre-phi = phi i64 [ %idxprom157, %if.then216.if.end225_crit_edge ], [ %.pre499, %if.else ]
  %arrayidx227 = getelementptr inbounds ptr, ptr %114, i64 %idxprom226.pre-phi
  %119 = load ptr, ptr %arrayidx227, align 8, !tbaa !13
  %arrayidx229 = getelementptr inbounds float, ptr %119, i64 %idxprom228.pre-phi
  %120 = load float, ptr %arrayidx229, align 4, !tbaa !17
  %arrayidx231 = getelementptr inbounds ptr, ptr %114, i64 %idxprom230.pre-phi
  %121 = load ptr, ptr %arrayidx231, align 8, !tbaa !13
  %arrayidx233 = getelementptr inbounds float, ptr %121, i64 %idxprom232.pre-phi
  %122 = load float, ptr %arrayidx233, align 4, !tbaa !17
  %cmp234 = fcmp olt float %120, %122
  %cond = select i1 %cmp234, float %120, float %122
  %conv236 = fpext float %cond to double
  %add237 = fadd float %120, %122
  %conv238 = fpext float %add237 to double
  %mul239 = fmul double %conv238, 5.000000e-01
  %mul240 = fmul double %mul239, 1.000000e-01
  %123 = tail call double @llvm.fmuladd.f64(double %conv236, double 9.000000e-01, double %mul240)
  %conv241 = fptrunc double %123 to float
  store float %conv241, ptr %arrayidx229, align 4, !tbaa !17
  br label %for.inc247

for.inc247:                                       ; preds = %for.body211, %if.end225
  %idxprom248 = sext i32 %i.10437 to i64
  %arrayidx249 = getelementptr inbounds %struct._Achain, ptr %54, i64 %idxprom248
  %124 = load i32, ptr %arrayidx249, align 4, !tbaa !145
  %cmp209.not = icmp eq i32 %124, -1
  br i1 %cmp209.not, label %for.end251, label %for.body211, !llvm.loop !225

for.end251:                                       ; preds = %for.inc247
  %arrayidx253 = getelementptr inbounds %struct._Achain, ptr %54, i64 %idxprom141
  %125 = load i32, ptr %arrayidx253, align 4, !tbaa !145
  %prev257 = getelementptr inbounds %struct._Achain, ptr %54, i64 %idxprom141, i32 1
  %126 = load i32, ptr %prev257, align 4, !tbaa !149
  %idxprom258 = sext i32 %126 to i64
  %arrayidx259 = getelementptr inbounds %struct._Achain, ptr %54, i64 %idxprom258
  store i32 %125, ptr %arrayidx259, align 4, !tbaa !145
  %127 = load i32, ptr %arrayidx253, align 4, !tbaa !145
  %idxprom267 = sext i32 %127 to i64
  %prev269 = getelementptr inbounds %struct._Achain, ptr %54, i64 %idxprom267, i32 1
  store i32 %126, ptr %prev269, align 4, !tbaa !149
  %indvars.iv.next494 = add nuw nsw i64 %indvars.iv493, 1
  %exitcond497.not = icmp eq i64 %indvars.iv.next494, %wide.trip.count496
  br i1 %exitcond497.not, label %for.end272, label %for.body77, !llvm.loop !226

for.end272:                                       ; preds = %for.end251, %for.end71.thread, %for.end71
  %128 = load ptr, ptr @stderr, align 8, !tbaa !13
  %fputc392 = tail call i32 @fputc(i32 10, ptr %128)
  ret void
}

declare ptr @AllocateFloatMtx(i32 noundef, i32 noundef) local_unnamed_addr #14

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @calloc(i64 noundef, i64 noundef) local_unnamed_addr #21

; Function Attrs: nounwind uwtable
define dso_local void @supg(i32 noundef %nseq, ptr nocapture noundef readonly %oeff, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %len) local_unnamed_addr #12 {
entry:
  %0 = load ptr, ptr @supg.eff, align 8, !tbaa !13
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, ptr @njob, align 4, !tbaa !10
  %call = tail call ptr @AllocateFloatMtx(i32 noundef %1, i32 noundef %1) #34
  store ptr %call, ptr @supg.eff, align 8, !tbaa !13
  %2 = load i32, ptr @njob, align 4, !tbaa !10
  %call1 = tail call ptr @AllocateCharMtx(i32 noundef %2, i32 noundef %2) #34
  store ptr %call1, ptr @supg.pair, align 8, !tbaa !13
  %3 = load i32, ptr @njob, align 4, !tbaa !10
  %call2 = tail call ptr @AllocateFloatVec(i32 noundef %3) #34
  store ptr %call2, ptr @supg.tmplen, align 8, !tbaa !13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp334 = icmp sgt i32 %nseq, 0
  br i1 %cmp334, label %for.cond3.preheader.lr.ph, label %for.end224

for.cond3.preheader.lr.ph:                        ; preds = %if.end
  %4 = load ptr, ptr @supg.eff, align 8
  %wide.trip.count382 = zext i32 %nseq to i64
  %min.iters.check = icmp ult i32 %nseq, 4
  %n.vec = and i64 %wide.trip.count382, 4294967292
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count382
  br label %for.cond3.preheader.us

for.cond3.preheader.us:                           ; preds = %for.cond3.for.inc12_crit_edge.us, %for.cond3.preheader.lr.ph
  %indvars.iv379 = phi i64 [ %indvars.iv.next380, %for.cond3.for.inc12_crit_edge.us ], [ 0, %for.cond3.preheader.lr.ph ]
  %arrayidx.us = getelementptr inbounds ptr, ptr %oeff, i64 %indvars.iv379
  %5 = load ptr, ptr %arrayidx.us, align 8, !tbaa !13
  %arrayidx9.us = getelementptr inbounds ptr, ptr %4, i64 %indvars.iv379
  %6 = load ptr, ptr %arrayidx9.us, align 8, !tbaa !13
  br i1 %min.iters.check, label %for.body5.us.preheader, label %vector.body

vector.body:                                      ; preds = %for.cond3.preheader.us, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.cond3.preheader.us ]
  %7 = getelementptr inbounds double, ptr %5, i64 %index
  %wide.load = load <2 x double>, ptr %7, align 8, !tbaa !20
  %8 = getelementptr inbounds double, ptr %7, i64 2
  %wide.load440 = load <2 x double>, ptr %8, align 8, !tbaa !20
  %9 = fptrunc <2 x double> %wide.load to <2 x float>
  %10 = fptrunc <2 x double> %wide.load440 to <2 x float>
  %11 = getelementptr inbounds float, ptr %6, i64 %index
  store <2 x float> %9, ptr %11, align 4, !tbaa !17
  %12 = getelementptr inbounds float, ptr %11, i64 2
  store <2 x float> %10, ptr %12, align 4, !tbaa !17
  %index.next = add nuw i64 %index, 4
  %13 = icmp eq i64 %index.next, %n.vec
  br i1 %13, label %middle.block, label %vector.body, !llvm.loop !227

middle.block:                                     ; preds = %vector.body
  br i1 %cmp.n, label %for.cond3.for.inc12_crit_edge.us, label %for.body5.us.preheader

for.body5.us.preheader:                           ; preds = %for.cond3.preheader.us, %middle.block
  %indvars.iv.ph = phi i64 [ 0, %for.cond3.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body5.us

for.body5.us:                                     ; preds = %for.body5.us.preheader, %for.body5.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body5.us ], [ %indvars.iv.ph, %for.body5.us.preheader ]
  %arrayidx7.us = getelementptr inbounds double, ptr %5, i64 %indvars.iv
  %14 = load double, ptr %arrayidx7.us, align 8, !tbaa !20
  %conv.us = fptrunc double %14 to float
  %arrayidx11.us = getelementptr inbounds float, ptr %6, i64 %indvars.iv
  store float %conv.us, ptr %arrayidx11.us, align 4, !tbaa !17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count382
  br i1 %exitcond.not, label %for.cond3.for.inc12_crit_edge.us, label %for.body5.us, !llvm.loop !228

for.cond3.for.inc12_crit_edge.us:                 ; preds = %for.body5.us, %middle.block
  %indvars.iv.next380 = add nuw nsw i64 %indvars.iv379, 1
  %exitcond383.not = icmp eq i64 %indvars.iv.next380, %wide.trip.count382
  br i1 %exitcond383.not, label %for.cond15.preheader, label %for.cond3.preheader.us, !llvm.loop !229

for.cond15.preheader:                             ; preds = %for.cond3.for.inc12_crit_edge.us
  br i1 %cmp334, label %for.cond28.preheader.lr.ph, label %for.end224

for.cond28.preheader.lr.ph:                       ; preds = %for.cond15.preheader
  %15 = load ptr, ptr @supg.tmplen, align 8, !tbaa !13
  %16 = zext i32 %nseq to i64
  %17 = shl nuw nsw i64 %16, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %15, i8 0, i64 %17, i1 false), !tbaa !17
  %18 = load ptr, ptr @supg.pair, align 8
  %wide.trip.count395 = zext i32 %nseq to i64
  %xtraiter = and i64 %wide.trip.count382, 3
  %19 = icmp ult i32 %nseq, 4
  %unroll_iter = and i64 %wide.trip.count382, 4294967292
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.cond28.preheader.us

for.cond28.preheader.us:                          ; preds = %for.cond28.for.inc39_crit_edge.us, %for.cond28.preheader.lr.ph
  %indvars.iv392 = phi i64 [ %indvars.iv.next393, %for.cond28.for.inc39_crit_edge.us ], [ 0, %for.cond28.preheader.lr.ph ]
  %arrayidx33.us = getelementptr inbounds ptr, ptr %18, i64 %indvars.iv392
  br i1 %19, label %for.cond28.for.inc39_crit_edge.us.unr-lcssa, label %for.body31.us

for.body31.us:                                    ; preds = %for.cond28.preheader.us, %for.body31.us
  %indvars.iv387 = phi i64 [ %indvars.iv.next388.3, %for.body31.us ], [ 0, %for.cond28.preheader.us ]
  %niter = phi i64 [ %niter.next.3, %for.body31.us ], [ 0, %for.cond28.preheader.us ]
  %20 = load ptr, ptr %arrayidx33.us, align 8, !tbaa !13
  %arrayidx35.us = getelementptr inbounds i8, ptr %20, i64 %indvars.iv387
  store i8 0, ptr %arrayidx35.us, align 1, !tbaa !5
  %indvars.iv.next388 = or i64 %indvars.iv387, 1
  %21 = load ptr, ptr %arrayidx33.us, align 8, !tbaa !13
  %arrayidx35.us.1 = getelementptr inbounds i8, ptr %21, i64 %indvars.iv.next388
  store i8 0, ptr %arrayidx35.us.1, align 1, !tbaa !5
  %indvars.iv.next388.1 = or i64 %indvars.iv387, 2
  %22 = load ptr, ptr %arrayidx33.us, align 8, !tbaa !13
  %arrayidx35.us.2 = getelementptr inbounds i8, ptr %22, i64 %indvars.iv.next388.1
  store i8 0, ptr %arrayidx35.us.2, align 1, !tbaa !5
  %indvars.iv.next388.2 = or i64 %indvars.iv387, 3
  %23 = load ptr, ptr %arrayidx33.us, align 8, !tbaa !13
  %arrayidx35.us.3 = getelementptr inbounds i8, ptr %23, i64 %indvars.iv.next388.2
  store i8 0, ptr %arrayidx35.us.3, align 1, !tbaa !5
  %indvars.iv.next388.3 = add nuw nsw i64 %indvars.iv387, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.cond28.for.inc39_crit_edge.us.unr-lcssa, label %for.body31.us, !llvm.loop !230

for.cond28.for.inc39_crit_edge.us.unr-lcssa:      ; preds = %for.body31.us, %for.cond28.preheader.us
  %indvars.iv387.unr = phi i64 [ 0, %for.cond28.preheader.us ], [ %indvars.iv.next388.3, %for.body31.us ]
  br i1 %lcmp.mod.not, label %for.cond28.for.inc39_crit_edge.us, label %for.body31.us.epil

for.body31.us.epil:                               ; preds = %for.cond28.for.inc39_crit_edge.us.unr-lcssa, %for.body31.us.epil
  %indvars.iv387.epil = phi i64 [ %indvars.iv.next388.epil, %for.body31.us.epil ], [ %indvars.iv387.unr, %for.cond28.for.inc39_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body31.us.epil ], [ 0, %for.cond28.for.inc39_crit_edge.us.unr-lcssa ]
  %24 = load ptr, ptr %arrayidx33.us, align 8, !tbaa !13
  %arrayidx35.us.epil = getelementptr inbounds i8, ptr %24, i64 %indvars.iv387.epil
  store i8 0, ptr %arrayidx35.us.epil, align 1, !tbaa !5
  %indvars.iv.next388.epil = add nuw nsw i64 %indvars.iv387.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond28.for.inc39_crit_edge.us, label %for.body31.us.epil, !llvm.loop !231

for.cond28.for.inc39_crit_edge.us:                ; preds = %for.body31.us.epil, %for.cond28.for.inc39_crit_edge.us.unr-lcssa
  %indvars.iv.next393 = add nuw nsw i64 %indvars.iv392, 1
  %exitcond396.not = icmp eq i64 %indvars.iv.next393, %wide.trip.count395
  br i1 %exitcond396.not, label %for.cond42.preheader, label %for.cond28.preheader.us, !llvm.loop !232

for.cond42.preheader:                             ; preds = %for.cond28.for.inc39_crit_edge.us
  br i1 %cmp334, label %for.body45.lr.ph, label %for.end224

for.body45.lr.ph:                                 ; preds = %for.cond42.preheader
  %25 = load ptr, ptr @supg.pair, align 8, !tbaa !13
  %xtraiter441 = and i64 %wide.trip.count382, 3
  %26 = icmp ult i32 %nseq, 4
  br i1 %26, label %for.cond53.preheader.unr-lcssa, label %for.body45.lr.ph.new

for.body45.lr.ph.new:                             ; preds = %for.body45.lr.ph
  %unroll_iter444 = and i64 %wide.trip.count382, 4294967292
  br label %for.body45

for.cond53.preheader.unr-lcssa:                   ; preds = %for.body45, %for.body45.lr.ph
  %indvars.iv397.unr = phi i64 [ 0, %for.body45.lr.ph ], [ %indvars.iv.next398.3, %for.body45 ]
  %lcmp.mod443.not = icmp eq i64 %xtraiter441, 0
  br i1 %lcmp.mod443.not, label %for.cond53.preheader, label %for.body45.epil

for.body45.epil:                                  ; preds = %for.cond53.preheader.unr-lcssa, %for.body45.epil
  %indvars.iv397.epil = phi i64 [ %indvars.iv.next398.epil, %for.body45.epil ], [ %indvars.iv397.unr, %for.cond53.preheader.unr-lcssa ]
  %epil.iter442 = phi i64 [ %epil.iter442.next, %for.body45.epil ], [ 0, %for.cond53.preheader.unr-lcssa ]
  %arrayidx47.epil = getelementptr inbounds ptr, ptr %25, i64 %indvars.iv397.epil
  %27 = load ptr, ptr %arrayidx47.epil, align 8, !tbaa !13
  %arrayidx49.epil = getelementptr inbounds i8, ptr %27, i64 %indvars.iv397.epil
  store i8 1, ptr %arrayidx49.epil, align 1, !tbaa !5
  %indvars.iv.next398.epil = add nuw nsw i64 %indvars.iv397.epil, 1
  %epil.iter442.next = add i64 %epil.iter442, 1
  %epil.iter442.cmp.not = icmp eq i64 %epil.iter442.next, %xtraiter441
  br i1 %epil.iter442.cmp.not, label %for.cond53.preheader, label %for.body45.epil, !llvm.loop !233

for.cond53.preheader:                             ; preds = %for.body45.epil, %for.cond53.preheader.unr-lcssa
  %cmp54376 = icmp sgt i32 %nseq, 1
  br i1 %cmp54376, label %for.body56.lr.ph, label %for.end224

for.body56.lr.ph:                                 ; preds = %for.cond53.preheader
  %sub = add nsw i32 %nseq, -1
  %28 = load ptr, ptr @supg.eff, align 8, !tbaa !13
  %29 = load ptr, ptr @supg.pair, align 8
  %30 = load ptr, ptr @supg.tmplen, align 8, !tbaa !13
  %31 = zext i32 %nseq to i64
  %wide.trip.count432 = zext i32 %sub to i64
  %32 = add i32 %nseq, -2
  %xtraiter448 = and i64 %wide.trip.count382, 3
  %33 = icmp ult i32 %nseq, 4
  %unroll_iter452 = and i64 %wide.trip.count382, 4294967292
  %lcmp.mod450.not = icmp eq i64 %xtraiter448, 0
  %xtraiter454 = and i64 %wide.trip.count382, 3
  %34 = icmp ult i32 %nseq, 4
  %unroll_iter458 = and i64 %wide.trip.count382, 4294967292
  %lcmp.mod456.not = icmp eq i64 %xtraiter454, 0
  %xtraiter460 = and i64 %wide.trip.count382, 1
  %unroll_iter463 = and i64 %wide.trip.count382, 4294967294
  %lcmp.mod462.not = icmp eq i64 %xtraiter460, 0
  %xtraiter465 = and i64 %wide.trip.count382, 3
  %35 = icmp ult i32 %nseq, 4
  %unroll_iter468 = and i64 %wide.trip.count382, 4294967292
  %lcmp.mod467.not = icmp eq i64 %xtraiter465, 0
  br label %for.body61.preheader

for.body45:                                       ; preds = %for.body45, %for.body45.lr.ph.new
  %indvars.iv397 = phi i64 [ 0, %for.body45.lr.ph.new ], [ %indvars.iv.next398.3, %for.body45 ]
  %niter445 = phi i64 [ 0, %for.body45.lr.ph.new ], [ %niter445.next.3, %for.body45 ]
  %arrayidx47 = getelementptr inbounds ptr, ptr %25, i64 %indvars.iv397
  %36 = load ptr, ptr %arrayidx47, align 8, !tbaa !13
  %arrayidx49 = getelementptr inbounds i8, ptr %36, i64 %indvars.iv397
  store i8 1, ptr %arrayidx49, align 1, !tbaa !5
  %indvars.iv.next398 = or i64 %indvars.iv397, 1
  %arrayidx47.1 = getelementptr inbounds ptr, ptr %25, i64 %indvars.iv.next398
  %37 = load ptr, ptr %arrayidx47.1, align 8, !tbaa !13
  %arrayidx49.1 = getelementptr inbounds i8, ptr %37, i64 %indvars.iv.next398
  store i8 1, ptr %arrayidx49.1, align 1, !tbaa !5
  %indvars.iv.next398.1 = or i64 %indvars.iv397, 2
  %arrayidx47.2 = getelementptr inbounds ptr, ptr %25, i64 %indvars.iv.next398.1
  %38 = load ptr, ptr %arrayidx47.2, align 8, !tbaa !13
  %arrayidx49.2 = getelementptr inbounds i8, ptr %38, i64 %indvars.iv.next398.1
  store i8 1, ptr %arrayidx49.2, align 1, !tbaa !5
  %indvars.iv.next398.2 = or i64 %indvars.iv397, 3
  %arrayidx47.3 = getelementptr inbounds ptr, ptr %25, i64 %indvars.iv.next398.2
  %39 = load ptr, ptr %arrayidx47.3, align 8, !tbaa !13
  %arrayidx49.3 = getelementptr inbounds i8, ptr %39, i64 %indvars.iv.next398.2
  store i8 1, ptr %arrayidx49.3, align 1, !tbaa !5
  %indvars.iv.next398.3 = add nuw nsw i64 %indvars.iv397, 4
  %niter445.next.3 = add i64 %niter445, 4
  %niter445.ncmp.3 = icmp eq i64 %niter445.next.3, %unroll_iter444
  br i1 %niter445.ncmp.3, label %for.cond53.preheader.unr-lcssa, label %for.body45, !llvm.loop !234

for.body61.preheader:                             ; preds = %for.end221, %for.body56.lr.ph
  %indvars.iv429 = phi i64 [ 0, %for.body56.lr.ph ], [ %indvars.iv.next430, %for.end221 ]
  br label %for.body61

for.cond57.loopexit:                              ; preds = %for.body66.prol.loopexit, %for.body66, %for.body61
  %minscore.1.lcssa = phi float [ %minscore.0355, %for.body61 ], [ %minscore.2.lcssa.unr, %for.body66.prol.loopexit ], [ %minscore.2.1, %for.body66 ]
  %im.1.lcssa = phi i32 [ %im.0356, %for.body61 ], [ %im.2.lcssa.unr, %for.body66.prol.loopexit ], [ %im.2.1, %for.body66 ]
  %jm.1.lcssa = phi i32 [ %jm.0357, %for.body61 ], [ %jm.2.lcssa.unr, %for.body66.prol.loopexit ], [ %jm.2.1, %for.body66 ]
  %exitcond407.not = icmp eq i64 %indvars.iv.next404, %wide.trip.count432
  br i1 %exitcond407.not, label %for.body84.lr.ph, label %for.body61, !llvm.loop !235

for.body61:                                       ; preds = %for.body61.preheader, %for.cond57.loopexit
  %indvars.iv403 = phi i64 [ 0, %for.body61.preheader ], [ %indvars.iv.next404, %for.cond57.loopexit ]
  %jm.0357 = phi i32 [ -1, %for.body61.preheader ], [ %jm.1.lcssa, %for.cond57.loopexit ]
  %im.0356 = phi i32 [ -1, %for.body61.preheader ], [ %im.1.lcssa, %for.cond57.loopexit ]
  %minscore.0355 = phi float [ 9.999000e+03, %for.body61.preheader ], [ %minscore.1.lcssa, %for.cond57.loopexit ]
  %floatptpt.0353 = phi ptr [ %28, %for.body61.preheader ], [ %incdec.ptr, %for.cond57.loopexit ]
  %40 = trunc i64 %indvars.iv403 to i32
  %incdec.ptr = getelementptr inbounds ptr, ptr %floatptpt.0353, i64 1
  %indvars.iv.next404 = add nuw nsw i64 %indvars.iv403, 1
  %cmp64344 = icmp ult i64 %indvars.iv.next404, %31
  br i1 %cmp64344, label %for.body66.preheader, label %for.cond57.loopexit

for.body66.preheader:                             ; preds = %for.body61
  %41 = trunc i64 %indvars.iv403 to i32
  %42 = sub i32 %sub, %41
  %43 = load ptr, ptr %floatptpt.0353, align 8, !tbaa !13
  %add.ptr = getelementptr inbounds float, ptr %43, i64 %indvars.iv403
  %44 = trunc i64 %indvars.iv.next404 to i32
  %45 = trunc i64 %indvars.iv403 to i32
  %xtraiter446 = and i32 %42, 1
  %lcmp.mod447.not = icmp eq i32 %xtraiter446, 0
  br i1 %lcmp.mod447.not, label %for.body66.prol.loopexit, label %for.body66.prol

for.body66.prol:                                  ; preds = %for.body66.preheader
  %floatpt.0.prol = getelementptr inbounds float, ptr %add.ptr, i64 1
  %46 = load float, ptr %floatpt.0.prol, align 4, !tbaa !17
  %cmp68.prol = fcmp olt float %46, %minscore.0355
  %minscore.2.prol = select i1 %cmp68.prol, float %46, float %minscore.0355
  %im.2.prol = select i1 %cmp68.prol, i32 %45, i32 %im.0356
  %jm.2.prol = select i1 %cmp68.prol, i32 %44, i32 %jm.0357
  %inc73.prol = add nuw nsw i32 %44, 1
  br label %for.body66.prol.loopexit

for.body66.prol.loopexit:                         ; preds = %for.body66.prol, %for.body66.preheader
  %minscore.2.lcssa.unr = phi float [ undef, %for.body66.preheader ], [ %minscore.2.prol, %for.body66.prol ]
  %im.2.lcssa.unr = phi i32 [ undef, %for.body66.preheader ], [ %im.2.prol, %for.body66.prol ]
  %jm.2.lcssa.unr = phi i32 [ undef, %for.body66.preheader ], [ %jm.2.prol, %for.body66.prol ]
  %jm.1349.unr = phi i32 [ %jm.0357, %for.body66.preheader ], [ %jm.2.prol, %for.body66.prol ]
  %im.1348.unr = phi i32 [ %im.0356, %for.body66.preheader ], [ %im.2.prol, %for.body66.prol ]
  %minscore.1347.unr = phi float [ %minscore.0355, %for.body66.preheader ], [ %minscore.2.prol, %for.body66.prol ]
  %j.2346.unr = phi i32 [ %44, %for.body66.preheader ], [ %inc73.prol, %for.body66.prol ]
  %add.ptr.pn345.unr = phi ptr [ %add.ptr, %for.body66.preheader ], [ %floatpt.0.prol, %for.body66.prol ]
  %47 = icmp eq i32 %32, %40
  br i1 %47, label %for.cond57.loopexit, label %for.body66

for.body66:                                       ; preds = %for.body66.prol.loopexit, %for.body66
  %jm.1349 = phi i32 [ %jm.2.1, %for.body66 ], [ %jm.1349.unr, %for.body66.prol.loopexit ]
  %im.1348 = phi i32 [ %im.2.1, %for.body66 ], [ %im.1348.unr, %for.body66.prol.loopexit ]
  %minscore.1347 = phi float [ %minscore.2.1, %for.body66 ], [ %minscore.1347.unr, %for.body66.prol.loopexit ]
  %j.2346 = phi i32 [ %inc73.1, %for.body66 ], [ %j.2346.unr, %for.body66.prol.loopexit ]
  %add.ptr.pn345 = phi ptr [ %floatpt.0.1, %for.body66 ], [ %add.ptr.pn345.unr, %for.body66.prol.loopexit ]
  %floatpt.0 = getelementptr inbounds float, ptr %add.ptr.pn345, i64 1
  %48 = load float, ptr %floatpt.0, align 4, !tbaa !17
  %cmp68 = fcmp olt float %48, %minscore.1347
  %minscore.2 = select i1 %cmp68, float %48, float %minscore.1347
  %jm.2 = select i1 %cmp68, i32 %j.2346, i32 %jm.1349
  %inc73 = add nuw nsw i32 %j.2346, 1
  %floatpt.0.1 = getelementptr inbounds float, ptr %add.ptr.pn345, i64 2
  %49 = load float, ptr %floatpt.0.1, align 4, !tbaa !17
  %cmp68.1 = fcmp olt float %49, %minscore.2
  %minscore.2.1 = select i1 %cmp68.1, float %49, float %minscore.2
  %50 = or i1 %cmp68.1, %cmp68
  %im.2.1 = select i1 %50, i32 %45, i32 %im.1348
  %jm.2.1 = select i1 %cmp68.1, i32 %inc73, i32 %jm.2
  %inc73.1 = add nuw nsw i32 %j.2346, 2
  %exitcond402.not.1 = icmp eq i32 %inc73.1, %nseq
  br i1 %exitcond402.not.1, label %for.cond57.loopexit, label %for.body66, !llvm.loop !236

for.body84.lr.ph:                                 ; preds = %for.cond57.loopexit
  %arrayidx79 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv429
  %51 = load ptr, ptr %arrayidx79, align 8, !tbaa !13
  %52 = load ptr, ptr %51, align 8, !tbaa !13
  %idxprom85 = sext i32 %im.1.lcssa to i64
  %arrayidx86 = getelementptr inbounds ptr, ptr %29, i64 %idxprom85
  %53 = load ptr, ptr %arrayidx86, align 8, !tbaa !13
  br i1 %33, label %for.body104.lr.ph.unr-lcssa, label %for.body84

for.body84:                                       ; preds = %for.body84.lr.ph, %for.inc95.3
  %indvars.iv408 = phi i64 [ %indvars.iv.next409.3, %for.inc95.3 ], [ 0, %for.body84.lr.ph ]
  %intpt.0362 = phi ptr [ %intpt.1.3, %for.inc95.3 ], [ %52, %for.body84.lr.ph ]
  %niter453 = phi i64 [ %niter453.next.3, %for.inc95.3 ], [ 0, %for.body84.lr.ph ]
  %arrayidx88 = getelementptr inbounds i8, ptr %53, i64 %indvars.iv408
  %54 = load i8, ptr %arrayidx88, align 1, !tbaa !5
  %cmp90 = icmp sgt i8 %54, 0
  br i1 %cmp90, label %if.then92, label %for.inc95

if.then92:                                        ; preds = %for.body84
  %incdec.ptr93 = getelementptr inbounds i32, ptr %intpt.0362, i64 1
  %55 = trunc i64 %indvars.iv408 to i32
  store i32 %55, ptr %intpt.0362, align 4, !tbaa !10
  br label %for.inc95

for.inc95:                                        ; preds = %for.body84, %if.then92
  %intpt.1 = phi ptr [ %incdec.ptr93, %if.then92 ], [ %intpt.0362, %for.body84 ]
  %indvars.iv.next409 = or i64 %indvars.iv408, 1
  %arrayidx88.1 = getelementptr inbounds i8, ptr %53, i64 %indvars.iv.next409
  %56 = load i8, ptr %arrayidx88.1, align 1, !tbaa !5
  %cmp90.1 = icmp sgt i8 %56, 0
  br i1 %cmp90.1, label %if.then92.1, label %for.inc95.1

if.then92.1:                                      ; preds = %for.inc95
  %incdec.ptr93.1 = getelementptr inbounds i32, ptr %intpt.1, i64 1
  %57 = trunc i64 %indvars.iv.next409 to i32
  store i32 %57, ptr %intpt.1, align 4, !tbaa !10
  br label %for.inc95.1

for.inc95.1:                                      ; preds = %if.then92.1, %for.inc95
  %intpt.1.1 = phi ptr [ %incdec.ptr93.1, %if.then92.1 ], [ %intpt.1, %for.inc95 ]
  %indvars.iv.next409.1 = or i64 %indvars.iv408, 2
  %arrayidx88.2 = getelementptr inbounds i8, ptr %53, i64 %indvars.iv.next409.1
  %58 = load i8, ptr %arrayidx88.2, align 1, !tbaa !5
  %cmp90.2 = icmp sgt i8 %58, 0
  br i1 %cmp90.2, label %if.then92.2, label %for.inc95.2

if.then92.2:                                      ; preds = %for.inc95.1
  %incdec.ptr93.2 = getelementptr inbounds i32, ptr %intpt.1.1, i64 1
  %59 = trunc i64 %indvars.iv.next409.1 to i32
  store i32 %59, ptr %intpt.1.1, align 4, !tbaa !10
  br label %for.inc95.2

for.inc95.2:                                      ; preds = %if.then92.2, %for.inc95.1
  %intpt.1.2 = phi ptr [ %incdec.ptr93.2, %if.then92.2 ], [ %intpt.1.1, %for.inc95.1 ]
  %indvars.iv.next409.2 = or i64 %indvars.iv408, 3
  %arrayidx88.3 = getelementptr inbounds i8, ptr %53, i64 %indvars.iv.next409.2
  %60 = load i8, ptr %arrayidx88.3, align 1, !tbaa !5
  %cmp90.3 = icmp sgt i8 %60, 0
  br i1 %cmp90.3, label %if.then92.3, label %for.inc95.3

if.then92.3:                                      ; preds = %for.inc95.2
  %incdec.ptr93.3 = getelementptr inbounds i32, ptr %intpt.1.2, i64 1
  %61 = trunc i64 %indvars.iv.next409.2 to i32
  store i32 %61, ptr %intpt.1.2, align 4, !tbaa !10
  br label %for.inc95.3

for.inc95.3:                                      ; preds = %if.then92.3, %for.inc95.2
  %intpt.1.3 = phi ptr [ %incdec.ptr93.3, %if.then92.3 ], [ %intpt.1.2, %for.inc95.2 ]
  %indvars.iv.next409.3 = add nuw nsw i64 %indvars.iv408, 4
  %niter453.next.3 = add i64 %niter453, 4
  %niter453.ncmp.3 = icmp eq i64 %niter453.next.3, %unroll_iter452
  br i1 %niter453.ncmp.3, label %for.body104.lr.ph.unr-lcssa, label %for.body84, !llvm.loop !237

for.body104.lr.ph.unr-lcssa:                      ; preds = %for.inc95.3, %for.body84.lr.ph
  %intpt.1.lcssa.ph = phi ptr [ undef, %for.body84.lr.ph ], [ %intpt.1.3, %for.inc95.3 ]
  %indvars.iv408.unr = phi i64 [ 0, %for.body84.lr.ph ], [ %indvars.iv.next409.3, %for.inc95.3 ]
  %intpt.0362.unr = phi ptr [ %52, %for.body84.lr.ph ], [ %intpt.1.3, %for.inc95.3 ]
  br i1 %lcmp.mod450.not, label %for.body104.lr.ph, label %for.body84.epil

for.body84.epil:                                  ; preds = %for.body104.lr.ph.unr-lcssa, %for.inc95.epil
  %indvars.iv408.epil = phi i64 [ %indvars.iv.next409.epil, %for.inc95.epil ], [ %indvars.iv408.unr, %for.body104.lr.ph.unr-lcssa ]
  %intpt.0362.epil = phi ptr [ %intpt.1.epil, %for.inc95.epil ], [ %intpt.0362.unr, %for.body104.lr.ph.unr-lcssa ]
  %epil.iter449 = phi i64 [ %epil.iter449.next, %for.inc95.epil ], [ 0, %for.body104.lr.ph.unr-lcssa ]
  %arrayidx88.epil = getelementptr inbounds i8, ptr %53, i64 %indvars.iv408.epil
  %62 = load i8, ptr %arrayidx88.epil, align 1, !tbaa !5
  %cmp90.epil = icmp sgt i8 %62, 0
  br i1 %cmp90.epil, label %if.then92.epil, label %for.inc95.epil

if.then92.epil:                                   ; preds = %for.body84.epil
  %incdec.ptr93.epil = getelementptr inbounds i32, ptr %intpt.0362.epil, i64 1
  %63 = trunc i64 %indvars.iv408.epil to i32
  store i32 %63, ptr %intpt.0362.epil, align 4, !tbaa !10
  br label %for.inc95.epil

for.inc95.epil:                                   ; preds = %if.then92.epil, %for.body84.epil
  %intpt.1.epil = phi ptr [ %incdec.ptr93.epil, %if.then92.epil ], [ %intpt.0362.epil, %for.body84.epil ]
  %indvars.iv.next409.epil = add nuw nsw i64 %indvars.iv408.epil, 1
  %epil.iter449.next = add i64 %epil.iter449, 1
  %epil.iter449.cmp.not = icmp eq i64 %epil.iter449.next, %xtraiter448
  br i1 %epil.iter449.cmp.not, label %for.body104.lr.ph, label %for.body84.epil, !llvm.loop !238

for.body104.lr.ph:                                ; preds = %for.inc95.epil, %for.body104.lr.ph.unr-lcssa
  %intpt.1.lcssa = phi ptr [ %intpt.1.lcssa.ph, %for.body104.lr.ph.unr-lcssa ], [ %intpt.1.epil, %for.inc95.epil ]
  store i32 -1, ptr %intpt.1.lcssa, align 4, !tbaa !10
  %arrayidx100 = getelementptr inbounds ptr, ptr %51, i64 1
  %64 = load ptr, ptr %arrayidx100, align 8, !tbaa !13
  %idxprom105 = sext i32 %jm.1.lcssa to i64
  %arrayidx106 = getelementptr inbounds ptr, ptr %29, i64 %idxprom105
  %65 = load ptr, ptr %arrayidx106, align 8, !tbaa !13
  br i1 %34, label %for.body143.lr.ph.unr-lcssa, label %for.body104

for.body104:                                      ; preds = %for.body104.lr.ph, %for.inc115.3
  %indvars.iv413 = phi i64 [ %indvars.iv.next414.3, %for.inc115.3 ], [ 0, %for.body104.lr.ph ]
  %intpt.2366 = phi ptr [ %intpt.3.3, %for.inc115.3 ], [ %64, %for.body104.lr.ph ]
  %niter459 = phi i64 [ %niter459.next.3, %for.inc115.3 ], [ 0, %for.body104.lr.ph ]
  %arrayidx108 = getelementptr inbounds i8, ptr %65, i64 %indvars.iv413
  %66 = load i8, ptr %arrayidx108, align 1, !tbaa !5
  %cmp110 = icmp sgt i8 %66, 0
  br i1 %cmp110, label %if.then112, label %for.inc115

if.then112:                                       ; preds = %for.body104
  %incdec.ptr113 = getelementptr inbounds i32, ptr %intpt.2366, i64 1
  %67 = trunc i64 %indvars.iv413 to i32
  store i32 %67, ptr %intpt.2366, align 4, !tbaa !10
  br label %for.inc115

for.inc115:                                       ; preds = %for.body104, %if.then112
  %intpt.3 = phi ptr [ %incdec.ptr113, %if.then112 ], [ %intpt.2366, %for.body104 ]
  %indvars.iv.next414 = or i64 %indvars.iv413, 1
  %arrayidx108.1 = getelementptr inbounds i8, ptr %65, i64 %indvars.iv.next414
  %68 = load i8, ptr %arrayidx108.1, align 1, !tbaa !5
  %cmp110.1 = icmp sgt i8 %68, 0
  br i1 %cmp110.1, label %if.then112.1, label %for.inc115.1

if.then112.1:                                     ; preds = %for.inc115
  %incdec.ptr113.1 = getelementptr inbounds i32, ptr %intpt.3, i64 1
  %69 = trunc i64 %indvars.iv.next414 to i32
  store i32 %69, ptr %intpt.3, align 4, !tbaa !10
  br label %for.inc115.1

for.inc115.1:                                     ; preds = %if.then112.1, %for.inc115
  %intpt.3.1 = phi ptr [ %incdec.ptr113.1, %if.then112.1 ], [ %intpt.3, %for.inc115 ]
  %indvars.iv.next414.1 = or i64 %indvars.iv413, 2
  %arrayidx108.2 = getelementptr inbounds i8, ptr %65, i64 %indvars.iv.next414.1
  %70 = load i8, ptr %arrayidx108.2, align 1, !tbaa !5
  %cmp110.2 = icmp sgt i8 %70, 0
  br i1 %cmp110.2, label %if.then112.2, label %for.inc115.2

if.then112.2:                                     ; preds = %for.inc115.1
  %incdec.ptr113.2 = getelementptr inbounds i32, ptr %intpt.3.1, i64 1
  %71 = trunc i64 %indvars.iv.next414.1 to i32
  store i32 %71, ptr %intpt.3.1, align 4, !tbaa !10
  br label %for.inc115.2

for.inc115.2:                                     ; preds = %if.then112.2, %for.inc115.1
  %intpt.3.2 = phi ptr [ %incdec.ptr113.2, %if.then112.2 ], [ %intpt.3.1, %for.inc115.1 ]
  %indvars.iv.next414.2 = or i64 %indvars.iv413, 3
  %arrayidx108.3 = getelementptr inbounds i8, ptr %65, i64 %indvars.iv.next414.2
  %72 = load i8, ptr %arrayidx108.3, align 1, !tbaa !5
  %cmp110.3 = icmp sgt i8 %72, 0
  br i1 %cmp110.3, label %if.then112.3, label %for.inc115.3

if.then112.3:                                     ; preds = %for.inc115.2
  %incdec.ptr113.3 = getelementptr inbounds i32, ptr %intpt.3.2, i64 1
  %73 = trunc i64 %indvars.iv.next414.2 to i32
  store i32 %73, ptr %intpt.3.2, align 4, !tbaa !10
  br label %for.inc115.3

for.inc115.3:                                     ; preds = %if.then112.3, %for.inc115.2
  %intpt.3.3 = phi ptr [ %incdec.ptr113.3, %if.then112.3 ], [ %intpt.3.2, %for.inc115.2 ]
  %indvars.iv.next414.3 = add nuw nsw i64 %indvars.iv413, 4
  %niter459.next.3 = add i64 %niter459, 4
  %niter459.ncmp.3 = icmp eq i64 %niter459.next.3, %unroll_iter458
  br i1 %niter459.ncmp.3, label %for.body143.lr.ph.unr-lcssa, label %for.body104, !llvm.loop !239

for.body143.lr.ph.unr-lcssa:                      ; preds = %for.inc115.3, %for.body104.lr.ph
  %intpt.3.lcssa.ph = phi ptr [ undef, %for.body104.lr.ph ], [ %intpt.3.3, %for.inc115.3 ]
  %indvars.iv413.unr = phi i64 [ 0, %for.body104.lr.ph ], [ %indvars.iv.next414.3, %for.inc115.3 ]
  %intpt.2366.unr = phi ptr [ %64, %for.body104.lr.ph ], [ %intpt.3.3, %for.inc115.3 ]
  br i1 %lcmp.mod456.not, label %for.body143.lr.ph, label %for.body104.epil

for.body104.epil:                                 ; preds = %for.body143.lr.ph.unr-lcssa, %for.inc115.epil
  %indvars.iv413.epil = phi i64 [ %indvars.iv.next414.epil, %for.inc115.epil ], [ %indvars.iv413.unr, %for.body143.lr.ph.unr-lcssa ]
  %intpt.2366.epil = phi ptr [ %intpt.3.epil, %for.inc115.epil ], [ %intpt.2366.unr, %for.body143.lr.ph.unr-lcssa ]
  %epil.iter455 = phi i64 [ %epil.iter455.next, %for.inc115.epil ], [ 0, %for.body143.lr.ph.unr-lcssa ]
  %arrayidx108.epil = getelementptr inbounds i8, ptr %65, i64 %indvars.iv413.epil
  %74 = load i8, ptr %arrayidx108.epil, align 1, !tbaa !5
  %cmp110.epil = icmp sgt i8 %74, 0
  br i1 %cmp110.epil, label %if.then112.epil, label %for.inc115.epil

if.then112.epil:                                  ; preds = %for.body104.epil
  %incdec.ptr113.epil = getelementptr inbounds i32, ptr %intpt.2366.epil, i64 1
  %75 = trunc i64 %indvars.iv413.epil to i32
  store i32 %75, ptr %intpt.2366.epil, align 4, !tbaa !10
  br label %for.inc115.epil

for.inc115.epil:                                  ; preds = %if.then112.epil, %for.body104.epil
  %intpt.3.epil = phi ptr [ %incdec.ptr113.epil, %if.then112.epil ], [ %intpt.2366.epil, %for.body104.epil ]
  %indvars.iv.next414.epil = add nuw nsw i64 %indvars.iv413.epil, 1
  %epil.iter455.next = add i64 %epil.iter455, 1
  %epil.iter455.cmp.not = icmp eq i64 %epil.iter455.next, %xtraiter454
  br i1 %epil.iter455.cmp.not, label %for.body143.lr.ph, label %for.body104.epil, !llvm.loop !240

for.body143.lr.ph:                                ; preds = %for.inc115.epil, %for.body143.lr.ph.unr-lcssa
  %intpt.3.lcssa = phi ptr [ %intpt.3.lcssa.ph, %for.body143.lr.ph.unr-lcssa ], [ %intpt.3.epil, %for.inc115.epil ]
  %arrayidx129.phi.trans.insert = getelementptr inbounds float, ptr %30, i64 %idxprom105
  store i32 -1, ptr %intpt.3.lcssa, align 4, !tbaa !10
  %conv118 = fpext float %minscore.1.lcssa to double
  %div = fmul double %conv118, 5.000000e-01
  %idxprom119 = sext i32 %im.1.lcssa to i64
  %arrayidx120 = getelementptr inbounds float, ptr %30, i64 %idxprom119
  %arrayidx124 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv429
  %76 = load ptr, ptr %arrayidx124, align 8, !tbaa !13
  %.pre436 = load float, ptr %arrayidx129.phi.trans.insert, align 4, !tbaa !17
  %77 = load float, ptr %arrayidx120, align 4, !tbaa !17
  %78 = insertelement <2 x float> poison, float %77, i64 0
  %79 = insertelement <2 x float> %78, float %.pre436, i64 1
  %80 = fpext <2 x float> %79 to <2 x double>
  %81 = insertelement <2 x double> poison, double %div, i64 0
  %82 = shufflevector <2 x double> %81, <2 x double> poison, <2 x i32> zeroinitializer
  %83 = fsub <2 x double> %82, %80
  store <2 x double> %83, ptr %76, align 8, !tbaa !20
  %conv137 = fptrunc double %div to float
  store float %conv137, ptr %arrayidx120, align 4, !tbaa !17
  %arrayidx145 = getelementptr inbounds ptr, ptr %29, i64 %idxprom105
  %arrayidx152 = getelementptr inbounds ptr, ptr %29, i64 %idxprom119
  br label %for.body143

for.body164.lr.ph.unr-lcssa:                      ; preds = %for.body143
  br i1 %lcmp.mod462.not, label %for.body164.lr.ph, label %for.body143.epil

for.body143.epil:                                 ; preds = %for.body164.lr.ph.unr-lcssa
  %84 = load ptr, ptr %arrayidx145, align 8, !tbaa !13
  %arrayidx147.epil = getelementptr inbounds i8, ptr %84, i64 %indvars.iv.next419.1
  %85 = load i8, ptr %arrayidx147.epil, align 1, !tbaa !5
  %cmp149.epil = icmp sgt i8 %85, 0
  %conv150.epil = zext i1 %cmp149.epil to i8
  %86 = load ptr, ptr %arrayidx152, align 8, !tbaa !13
  %arrayidx154.epil = getelementptr inbounds i8, ptr %86, i64 %indvars.iv.next419.1
  %87 = load i8, ptr %arrayidx154.epil, align 1, !tbaa !5
  %add156.epil = add i8 %87, %conv150.epil
  store i8 %add156.epil, ptr %arrayidx154.epil, align 1, !tbaa !5
  br label %for.body164.lr.ph

for.body164.lr.ph:                                ; preds = %for.body164.lr.ph.unr-lcssa, %for.body143.epil
  %arrayidx166 = getelementptr inbounds ptr, ptr %29, i64 %idxprom105
  br i1 %35, label %for.body175.lr.ph.unr-lcssa, label %for.body164

for.body143:                                      ; preds = %for.body143, %for.body143.lr.ph
  %indvars.iv418 = phi i64 [ 0, %for.body143.lr.ph ], [ %indvars.iv.next419.1, %for.body143 ]
  %niter464 = phi i64 [ 0, %for.body143.lr.ph ], [ %niter464.next.1, %for.body143 ]
  %88 = load ptr, ptr %arrayidx145, align 8, !tbaa !13
  %arrayidx147 = getelementptr inbounds i8, ptr %88, i64 %indvars.iv418
  %89 = load i8, ptr %arrayidx147, align 1, !tbaa !5
  %cmp149 = icmp sgt i8 %89, 0
  %conv150 = zext i1 %cmp149 to i8
  %90 = load ptr, ptr %arrayidx152, align 8, !tbaa !13
  %arrayidx154 = getelementptr inbounds i8, ptr %90, i64 %indvars.iv418
  %91 = load i8, ptr %arrayidx154, align 1, !tbaa !5
  %add156 = add i8 %91, %conv150
  store i8 %add156, ptr %arrayidx154, align 1, !tbaa !5
  %indvars.iv.next419 = or i64 %indvars.iv418, 1
  %92 = load ptr, ptr %arrayidx145, align 8, !tbaa !13
  %arrayidx147.1 = getelementptr inbounds i8, ptr %92, i64 %indvars.iv.next419
  %93 = load i8, ptr %arrayidx147.1, align 1, !tbaa !5
  %cmp149.1 = icmp sgt i8 %93, 0
  %conv150.1 = zext i1 %cmp149.1 to i8
  %94 = load ptr, ptr %arrayidx152, align 8, !tbaa !13
  %arrayidx154.1 = getelementptr inbounds i8, ptr %94, i64 %indvars.iv.next419
  %95 = load i8, ptr %arrayidx154.1, align 1, !tbaa !5
  %add156.1 = add i8 %95, %conv150.1
  store i8 %add156.1, ptr %arrayidx154.1, align 1, !tbaa !5
  %indvars.iv.next419.1 = add nuw nsw i64 %indvars.iv418, 2
  %niter464.next.1 = add i64 %niter464, 2
  %niter464.ncmp.1 = icmp eq i64 %niter464.next.1, %unroll_iter463
  br i1 %niter464.ncmp.1, label %for.body164.lr.ph.unr-lcssa, label %for.body143, !llvm.loop !241

for.body175.lr.ph.unr-lcssa:                      ; preds = %for.body164, %for.body164.lr.ph
  %indvars.iv423.unr = phi i64 [ 0, %for.body164.lr.ph ], [ %indvars.iv.next424.3, %for.body164 ]
  br i1 %lcmp.mod467.not, label %for.body175.lr.ph, label %for.body164.epil

for.body164.epil:                                 ; preds = %for.body175.lr.ph.unr-lcssa, %for.body164.epil
  %indvars.iv423.epil = phi i64 [ %indvars.iv.next424.epil, %for.body164.epil ], [ %indvars.iv423.unr, %for.body175.lr.ph.unr-lcssa ]
  %epil.iter466 = phi i64 [ %epil.iter466.next, %for.body164.epil ], [ 0, %for.body175.lr.ph.unr-lcssa ]
  %96 = load ptr, ptr %arrayidx166, align 8, !tbaa !13
  %arrayidx168.epil = getelementptr inbounds i8, ptr %96, i64 %indvars.iv423.epil
  store i8 0, ptr %arrayidx168.epil, align 1, !tbaa !5
  %indvars.iv.next424.epil = add nuw nsw i64 %indvars.iv423.epil, 1
  %epil.iter466.next = add i64 %epil.iter466, 1
  %epil.iter466.cmp.not = icmp eq i64 %epil.iter466.next, %xtraiter465
  br i1 %epil.iter466.cmp.not, label %for.body175.lr.ph, label %for.body164.epil, !llvm.loop !242

for.body175.lr.ph:                                ; preds = %for.body164.epil, %for.body175.lr.ph.unr-lcssa
  %arrayidx215 = getelementptr inbounds ptr, ptr %28, i64 %idxprom119
  br label %for.body175

for.body164:                                      ; preds = %for.body164.lr.ph, %for.body164
  %indvars.iv423 = phi i64 [ %indvars.iv.next424.3, %for.body164 ], [ 0, %for.body164.lr.ph ]
  %niter469 = phi i64 [ %niter469.next.3, %for.body164 ], [ 0, %for.body164.lr.ph ]
  %97 = load ptr, ptr %arrayidx166, align 8, !tbaa !13
  %arrayidx168 = getelementptr inbounds i8, ptr %97, i64 %indvars.iv423
  store i8 0, ptr %arrayidx168, align 1, !tbaa !5
  %indvars.iv.next424 = or i64 %indvars.iv423, 1
  %98 = load ptr, ptr %arrayidx166, align 8, !tbaa !13
  %arrayidx168.1 = getelementptr inbounds i8, ptr %98, i64 %indvars.iv.next424
  store i8 0, ptr %arrayidx168.1, align 1, !tbaa !5
  %indvars.iv.next424.1 = or i64 %indvars.iv423, 2
  %99 = load ptr, ptr %arrayidx166, align 8, !tbaa !13
  %arrayidx168.2 = getelementptr inbounds i8, ptr %99, i64 %indvars.iv.next424.1
  store i8 0, ptr %arrayidx168.2, align 1, !tbaa !5
  %indvars.iv.next424.2 = or i64 %indvars.iv423, 3
  %100 = load ptr, ptr %arrayidx166, align 8, !tbaa !13
  %arrayidx168.3 = getelementptr inbounds i8, ptr %100, i64 %indvars.iv.next424.2
  store i8 0, ptr %arrayidx168.3, align 1, !tbaa !5
  %indvars.iv.next424.3 = add nuw nsw i64 %indvars.iv423, 4
  %niter469.next.3 = add i64 %niter469, 4
  %niter469.ncmp.3 = icmp eq i64 %niter469.next.3, %unroll_iter468
  br i1 %niter469.ncmp.3, label %for.body175.lr.ph.unr-lcssa, label %for.body164, !llvm.loop !243

for.body175:                                      ; preds = %for.body175.lr.ph, %for.inc219
  %i.9374 = phi i32 [ 0, %for.body175.lr.ph ], [ %inc220, %for.inc219 ]
  %cmp176.not = icmp eq i32 %i.9374, %im.1.lcssa
  %cmp178.not = icmp eq i32 %i.9374, %jm.1.lcssa
  %or.cond = select i1 %cmp176.not, i1 true, i1 %cmp178.not
  br i1 %or.cond, label %for.inc219, label %if.then180

if.then180:                                       ; preds = %for.body175
  %cmp181 = icmp slt i32 %i.9374, %im.1.lcssa
  br i1 %cmp181, label %if.then180.if.end189_crit_edge, label %if.else

if.then180.if.end189_crit_edge:                   ; preds = %if.then180
  %.pre437 = zext i32 %i.9374 to i64
  br label %if.end189

if.else:                                          ; preds = %if.then180
  %i.9.jm.0 = tail call i32 @llvm.smin.i32(i32 %i.9374, i32 %jm.1.lcssa)
  %jm.0.i.9 = tail call i32 @llvm.smax.i32(i32 %i.9374, i32 %jm.1.lcssa)
  %.pre434 = zext i32 %i.9374 to i64
  %.pre435 = zext i32 %jm.0.i.9 to i64
  %.pre438 = sext i32 %i.9.jm.0 to i64
  br label %if.end189

if.end189:                                        ; preds = %if.then180.if.end189_crit_edge, %if.else
  %idxprom194.pre-phi = phi i64 [ %.pre437, %if.then180.if.end189_crit_edge ], [ %.pre438, %if.else ]
  %idxprom190.pre-phi = phi i64 [ %.pre437, %if.then180.if.end189_crit_edge ], [ %idxprom119, %if.else ]
  %idxprom196.pre-phi = phi i64 [ %idxprom105, %if.then180.if.end189_crit_edge ], [ %.pre435, %if.else ]
  %idxprom192.pre-phi = phi i64 [ %idxprom119, %if.then180.if.end189_crit_edge ], [ %.pre434, %if.else ]
  %arrayidx191 = getelementptr inbounds ptr, ptr %28, i64 %idxprom190.pre-phi
  %101 = load ptr, ptr %arrayidx191, align 8, !tbaa !13
  %arrayidx193 = getelementptr inbounds float, ptr %101, i64 %idxprom192.pre-phi
  %102 = load float, ptr %arrayidx193, align 4, !tbaa !17
  %arrayidx195 = getelementptr inbounds ptr, ptr %28, i64 %idxprom194.pre-phi
  %103 = load ptr, ptr %arrayidx195, align 8, !tbaa !13
  %arrayidx197 = getelementptr inbounds float, ptr %103, i64 %idxprom196.pre-phi
  %104 = load float, ptr %arrayidx197, align 4, !tbaa !17
  %cmp198 = fcmp olt float %102, %104
  %cond = select i1 %cmp198, float %102, float %104
  %conv200 = fpext float %cond to double
  %add201 = fadd float %102, %104
  %conv202 = fpext float %add201 to double
  %mul203 = fmul double %conv202, 5.000000e-01
  %mul204 = fmul double %mul203, 1.000000e-01
  %105 = tail call double @llvm.fmuladd.f64(double %conv200, double 9.000000e-01, double %mul204)
  %conv205 = fptrunc double %105 to float
  store float %conv205, ptr %arrayidx193, align 4, !tbaa !17
  store float 9.999000e+03, ptr %arrayidx197, align 4, !tbaa !17
  %106 = load ptr, ptr %arrayidx215, align 8, !tbaa !13
  %arrayidx217 = getelementptr inbounds float, ptr %106, i64 %idxprom105
  store float 9.999000e+03, ptr %arrayidx217, align 4, !tbaa !17
  br label %for.inc219

for.inc219:                                       ; preds = %for.body175, %if.end189
  %inc220 = add nuw nsw i32 %i.9374, 1
  %exitcond428.not = icmp eq i32 %inc220, %nseq
  br i1 %exitcond428.not, label %for.end221, label %for.body175, !llvm.loop !244

for.end221:                                       ; preds = %for.inc219
  %indvars.iv.next430 = add nuw nsw i64 %indvars.iv429, 1
  %exitcond433.not = icmp eq i64 %indvars.iv.next430, %wide.trip.count432
  br i1 %exitcond433.not, label %for.end224, label %for.body61.preheader, !llvm.loop !245

for.end224:                                       ; preds = %for.end221, %for.cond15.preheader, %if.end, %for.cond42.preheader, %for.cond53.preheader
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @spg(i32 noundef %nseq, ptr nocapture noundef readonly %oeff, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %len) local_unnamed_addr #12 {
entry:
  %tmplen = alloca [50000 x double], align 16
  call void @llvm.lifetime.start.p0(i64 400000, ptr nonnull %tmplen) #34
  %0 = load i32, ptr @njob, align 4, !tbaa !10
  %call = tail call ptr @AllocateDoubleMtx(i32 noundef %0, i32 noundef %0) #34
  %1 = load i32, ptr @njob, align 4, !tbaa !10
  %call1 = tail call ptr @AllocateCharMtx(i32 noundef %1, i32 noundef %1) #34
  %cmp459 = icmp sgt i32 %nseq, 0
  br i1 %cmp459, label %for.cond2.preheader.us.preheader, label %for.end299

for.cond2.preheader.us.preheader:                 ; preds = %entry
  %wide.trip.count504 = zext i32 %nseq to i64
  %2 = add nsw i64 %wide.trip.count504, -1
  %min.iters.check = icmp ult i32 %nseq, 6
  %n.vec = and i64 %wide.trip.count504, 4294967292
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count504
  %xtraiter = and i64 %wide.trip.count504, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us

for.cond2.preheader.us:                           ; preds = %for.cond2.preheader.us.preheader, %for.cond2.for.inc11_crit_edge.us
  %indvars.iv501 = phi i64 [ 0, %for.cond2.preheader.us.preheader ], [ %indvars.iv.next502, %for.cond2.for.inc11_crit_edge.us ]
  %arrayidx.us = getelementptr inbounds ptr, ptr %oeff, i64 %indvars.iv501
  %3 = load ptr, ptr %arrayidx.us, align 8, !tbaa !13
  %arrayidx8.us = getelementptr inbounds ptr, ptr %call, i64 %indvars.iv501
  %4 = load ptr, ptr %arrayidx8.us, align 8, !tbaa !13
  %5 = ptrtoint ptr %4 to i64
  %6 = ptrtoint ptr %3 to i64
  %7 = sub i64 %5, %6
  %diff.check = icmp ult i64 %7, 32
  %or.cond567 = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond567, label %for.body4.us.preheader, label %vector.body

vector.body:                                      ; preds = %for.cond2.preheader.us, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.cond2.preheader.us ]
  %8 = getelementptr inbounds double, ptr %3, i64 %index
  %wide.load = load <2 x double>, ptr %8, align 8, !tbaa !20
  %9 = getelementptr inbounds double, ptr %8, i64 2
  %wide.load564 = load <2 x double>, ptr %9, align 8, !tbaa !20
  %10 = getelementptr inbounds double, ptr %4, i64 %index
  store <2 x double> %wide.load, ptr %10, align 8, !tbaa !20
  %11 = getelementptr inbounds double, ptr %10, i64 2
  store <2 x double> %wide.load564, ptr %11, align 8, !tbaa !20
  %index.next = add nuw i64 %index, 4
  %12 = icmp eq i64 %index.next, %n.vec
  br i1 %12, label %middle.block, label %vector.body, !llvm.loop !246

middle.block:                                     ; preds = %vector.body
  br i1 %cmp.n, label %for.cond2.for.inc11_crit_edge.us, label %for.body4.us.preheader

for.body4.us.preheader:                           ; preds = %for.cond2.preheader.us, %middle.block
  %indvars.iv.ph = phi i64 [ 0, %for.cond2.preheader.us ], [ %n.vec, %middle.block ]
  %13 = sub nsw i64 %2, %indvars.iv.ph
  br i1 %lcmp.mod.not, label %for.body4.us.prol.loopexit, label %for.body4.us.prol

for.body4.us.prol:                                ; preds = %for.body4.us.preheader, %for.body4.us.prol
  %indvars.iv.prol = phi i64 [ %indvars.iv.next.prol, %for.body4.us.prol ], [ %indvars.iv.ph, %for.body4.us.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body4.us.prol ], [ 0, %for.body4.us.preheader ]
  %arrayidx6.us.prol = getelementptr inbounds double, ptr %3, i64 %indvars.iv.prol
  %14 = load double, ptr %arrayidx6.us.prol, align 8, !tbaa !20
  %arrayidx10.us.prol = getelementptr inbounds double, ptr %4, i64 %indvars.iv.prol
  store double %14, ptr %arrayidx10.us.prol, align 8, !tbaa !20
  %indvars.iv.next.prol = add nuw nsw i64 %indvars.iv.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body4.us.prol.loopexit, label %for.body4.us.prol, !llvm.loop !247

for.body4.us.prol.loopexit:                       ; preds = %for.body4.us.prol, %for.body4.us.preheader
  %indvars.iv.unr = phi i64 [ %indvars.iv.ph, %for.body4.us.preheader ], [ %indvars.iv.next.prol, %for.body4.us.prol ]
  %15 = icmp ult i64 %13, 3
  br i1 %15, label %for.cond2.for.inc11_crit_edge.us, label %for.body4.us

for.body4.us:                                     ; preds = %for.body4.us.prol.loopexit, %for.body4.us
  %indvars.iv = phi i64 [ %indvars.iv.next.3, %for.body4.us ], [ %indvars.iv.unr, %for.body4.us.prol.loopexit ]
  %arrayidx6.us = getelementptr inbounds double, ptr %3, i64 %indvars.iv
  %16 = load double, ptr %arrayidx6.us, align 8, !tbaa !20
  %arrayidx10.us = getelementptr inbounds double, ptr %4, i64 %indvars.iv
  store double %16, ptr %arrayidx10.us, align 8, !tbaa !20
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx6.us.1 = getelementptr inbounds double, ptr %3, i64 %indvars.iv.next
  %17 = load double, ptr %arrayidx6.us.1, align 8, !tbaa !20
  %arrayidx10.us.1 = getelementptr inbounds double, ptr %4, i64 %indvars.iv.next
  store double %17, ptr %arrayidx10.us.1, align 8, !tbaa !20
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %arrayidx6.us.2 = getelementptr inbounds double, ptr %3, i64 %indvars.iv.next.1
  %18 = load double, ptr %arrayidx6.us.2, align 8, !tbaa !20
  %arrayidx10.us.2 = getelementptr inbounds double, ptr %4, i64 %indvars.iv.next.1
  store double %18, ptr %arrayidx10.us.2, align 8, !tbaa !20
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv, 3
  %arrayidx6.us.3 = getelementptr inbounds double, ptr %3, i64 %indvars.iv.next.2
  %19 = load double, ptr %arrayidx6.us.3, align 8, !tbaa !20
  %arrayidx10.us.3 = getelementptr inbounds double, ptr %4, i64 %indvars.iv.next.2
  store double %19, ptr %arrayidx10.us.3, align 8, !tbaa !20
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %exitcond.not.3 = icmp eq i64 %indvars.iv.next.3, %wide.trip.count504
  br i1 %exitcond.not.3, label %for.cond2.for.inc11_crit_edge.us, label %for.body4.us, !llvm.loop !248

for.cond2.for.inc11_crit_edge.us:                 ; preds = %for.body4.us.prol.loopexit, %for.body4.us, %middle.block
  %indvars.iv.next502 = add nuw nsw i64 %indvars.iv501, 1
  %exitcond505.not = icmp eq i64 %indvars.iv.next502, %wide.trip.count504
  br i1 %exitcond505.not, label %for.cond14.preheader, label %for.cond2.preheader.us, !llvm.loop !249

for.cond14.preheader:                             ; preds = %for.cond2.for.inc11_crit_edge.us
  br i1 %cmp459, label %for.cond25.preheader.us.preheader, label %for.end299

for.cond25.preheader.us.preheader:                ; preds = %for.cond14.preheader
  %20 = zext i32 %nseq to i64
  %21 = shl nuw nsw i64 %20, 3
  call void @llvm.memset.p0.i64(ptr nonnull align 16 %tmplen, i8 0, i64 %21, i1 false), !tbaa !20
  %wide.trip.count517 = zext i32 %nseq to i64
  %xtraiter568 = and i64 %wide.trip.count504, 3
  %22 = icmp ult i32 %nseq, 4
  %unroll_iter = and i64 %wide.trip.count504, 4294967292
  %lcmp.mod569.not = icmp eq i64 %xtraiter568, 0
  br label %for.cond25.preheader.us

for.cond25.preheader.us:                          ; preds = %for.cond25.preheader.us.preheader, %for.cond25.for.inc35_crit_edge.us
  %indvars.iv514 = phi i64 [ 0, %for.cond25.preheader.us.preheader ], [ %indvars.iv.next515, %for.cond25.for.inc35_crit_edge.us ]
  %arrayidx29.us = getelementptr inbounds ptr, ptr %call1, i64 %indvars.iv514
  br i1 %22, label %for.cond25.for.inc35_crit_edge.us.unr-lcssa, label %for.body27.us

for.body27.us:                                    ; preds = %for.cond25.preheader.us, %for.body27.us
  %indvars.iv509 = phi i64 [ %indvars.iv.next510.3, %for.body27.us ], [ 0, %for.cond25.preheader.us ]
  %niter = phi i64 [ %niter.next.3, %for.body27.us ], [ 0, %for.cond25.preheader.us ]
  %23 = load ptr, ptr %arrayidx29.us, align 8, !tbaa !13
  %arrayidx31.us = getelementptr inbounds i8, ptr %23, i64 %indvars.iv509
  store i8 0, ptr %arrayidx31.us, align 1, !tbaa !5
  %indvars.iv.next510 = or i64 %indvars.iv509, 1
  %24 = load ptr, ptr %arrayidx29.us, align 8, !tbaa !13
  %arrayidx31.us.1 = getelementptr inbounds i8, ptr %24, i64 %indvars.iv.next510
  store i8 0, ptr %arrayidx31.us.1, align 1, !tbaa !5
  %indvars.iv.next510.1 = or i64 %indvars.iv509, 2
  %25 = load ptr, ptr %arrayidx29.us, align 8, !tbaa !13
  %arrayidx31.us.2 = getelementptr inbounds i8, ptr %25, i64 %indvars.iv.next510.1
  store i8 0, ptr %arrayidx31.us.2, align 1, !tbaa !5
  %indvars.iv.next510.2 = or i64 %indvars.iv509, 3
  %26 = load ptr, ptr %arrayidx29.us, align 8, !tbaa !13
  %arrayidx31.us.3 = getelementptr inbounds i8, ptr %26, i64 %indvars.iv.next510.2
  store i8 0, ptr %arrayidx31.us.3, align 1, !tbaa !5
  %indvars.iv.next510.3 = add nuw nsw i64 %indvars.iv509, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.cond25.for.inc35_crit_edge.us.unr-lcssa, label %for.body27.us, !llvm.loop !250

for.cond25.for.inc35_crit_edge.us.unr-lcssa:      ; preds = %for.body27.us, %for.cond25.preheader.us
  %indvars.iv509.unr = phi i64 [ 0, %for.cond25.preheader.us ], [ %indvars.iv.next510.3, %for.body27.us ]
  br i1 %lcmp.mod569.not, label %for.cond25.for.inc35_crit_edge.us, label %for.body27.us.epil

for.body27.us.epil:                               ; preds = %for.cond25.for.inc35_crit_edge.us.unr-lcssa, %for.body27.us.epil
  %indvars.iv509.epil = phi i64 [ %indvars.iv.next510.epil, %for.body27.us.epil ], [ %indvars.iv509.unr, %for.cond25.for.inc35_crit_edge.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body27.us.epil ], [ 0, %for.cond25.for.inc35_crit_edge.us.unr-lcssa ]
  %27 = load ptr, ptr %arrayidx29.us, align 8, !tbaa !13
  %arrayidx31.us.epil = getelementptr inbounds i8, ptr %27, i64 %indvars.iv509.epil
  store i8 0, ptr %arrayidx31.us.epil, align 1, !tbaa !5
  %indvars.iv.next510.epil = add nuw nsw i64 %indvars.iv509.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter568
  br i1 %epil.iter.cmp.not, label %for.cond25.for.inc35_crit_edge.us, label %for.body27.us.epil, !llvm.loop !251

for.cond25.for.inc35_crit_edge.us:                ; preds = %for.body27.us.epil, %for.cond25.for.inc35_crit_edge.us.unr-lcssa
  %indvars.iv.next515 = add nuw nsw i64 %indvars.iv514, 1
  %exitcond518.not = icmp eq i64 %indvars.iv.next515, %wide.trip.count517
  br i1 %exitcond518.not, label %for.cond38.preheader, label %for.cond25.preheader.us, !llvm.loop !252

for.cond38.preheader:                             ; preds = %for.cond25.for.inc35_crit_edge.us
  br i1 %cmp459, label %for.body40.preheader, label %for.end299

for.body40.preheader:                             ; preds = %for.cond38.preheader
  %xtraiter570 = and i64 %wide.trip.count504, 3
  %28 = icmp ult i32 %nseq, 4
  br i1 %28, label %for.cond48.preheader.unr-lcssa, label %for.body40.preheader.new

for.body40.preheader.new:                         ; preds = %for.body40.preheader
  %unroll_iter573 = and i64 %wide.trip.count504, 4294967292
  br label %for.body40

for.cond48.preheader.unr-lcssa:                   ; preds = %for.body40, %for.body40.preheader
  %indvars.iv519.unr = phi i64 [ 0, %for.body40.preheader ], [ %indvars.iv.next520.3, %for.body40 ]
  %lcmp.mod572.not = icmp eq i64 %xtraiter570, 0
  br i1 %lcmp.mod572.not, label %for.cond48.preheader, label %for.body40.epil

for.body40.epil:                                  ; preds = %for.cond48.preheader.unr-lcssa, %for.body40.epil
  %indvars.iv519.epil = phi i64 [ %indvars.iv.next520.epil, %for.body40.epil ], [ %indvars.iv519.unr, %for.cond48.preheader.unr-lcssa ]
  %epil.iter571 = phi i64 [ %epil.iter571.next, %for.body40.epil ], [ 0, %for.cond48.preheader.unr-lcssa ]
  %arrayidx42.epil = getelementptr inbounds ptr, ptr %call1, i64 %indvars.iv519.epil
  %29 = load ptr, ptr %arrayidx42.epil, align 8, !tbaa !13
  %arrayidx44.epil = getelementptr inbounds i8, ptr %29, i64 %indvars.iv519.epil
  store i8 1, ptr %arrayidx44.epil, align 1, !tbaa !5
  %indvars.iv.next520.epil = add nuw nsw i64 %indvars.iv519.epil, 1
  %epil.iter571.next = add i64 %epil.iter571, 1
  %epil.iter571.cmp.not = icmp eq i64 %epil.iter571.next, %xtraiter570
  br i1 %epil.iter571.cmp.not, label %for.cond48.preheader, label %for.body40.epil, !llvm.loop !253

for.cond48.preheader:                             ; preds = %for.body40.epil, %for.cond48.preheader.unr-lcssa
  %cmp49498 = icmp sgt i32 %nseq, 1
  br i1 %cmp49498, label %for.cond51.preheader.lr.ph, label %for.end299

for.cond51.preheader.lr.ph:                       ; preds = %for.cond48.preheader
  %sub = add nsw i32 %nseq, -1
  %30 = zext i32 %nseq to i64
  %wide.trip.count560 = zext i32 %sub to i64
  %wide.trip.count529 = zext i32 %nseq to i64
  %xtraiter575 = and i64 %wide.trip.count504, 1
  %31 = icmp eq i64 %2, 0
  %unroll_iter579 = and i64 %wide.trip.count504, 4294967294
  %lcmp.mod577.not = icmp eq i64 %xtraiter575, 0
  %xtraiter581 = and i64 %wide.trip.count504, 1
  %32 = icmp eq i64 %2, 0
  %unroll_iter585 = and i64 %wide.trip.count504, 4294967294
  %lcmp.mod583.not = icmp eq i64 %xtraiter581, 0
  %xtraiter587 = and i64 %wide.trip.count504, 1
  %33 = icmp eq i64 %2, 0
  %unroll_iter590 = and i64 %wide.trip.count504, 4294967294
  %lcmp.mod589.not = icmp eq i64 %xtraiter587, 0
  %xtraiter592 = and i64 %wide.trip.count504, 3
  %34 = icmp ult i32 %nseq, 4
  %unroll_iter595 = and i64 %wide.trip.count504, 4294967292
  %lcmp.mod594.not = icmp eq i64 %xtraiter592, 0
  br label %for.body54.preheader

for.body40:                                       ; preds = %for.body40, %for.body40.preheader.new
  %indvars.iv519 = phi i64 [ 0, %for.body40.preheader.new ], [ %indvars.iv.next520.3, %for.body40 ]
  %niter574 = phi i64 [ 0, %for.body40.preheader.new ], [ %niter574.next.3, %for.body40 ]
  %arrayidx42 = getelementptr inbounds ptr, ptr %call1, i64 %indvars.iv519
  %35 = load ptr, ptr %arrayidx42, align 8, !tbaa !13
  %arrayidx44 = getelementptr inbounds i8, ptr %35, i64 %indvars.iv519
  store i8 1, ptr %arrayidx44, align 1, !tbaa !5
  %indvars.iv.next520 = or i64 %indvars.iv519, 1
  %arrayidx42.1 = getelementptr inbounds ptr, ptr %call1, i64 %indvars.iv.next520
  %36 = load ptr, ptr %arrayidx42.1, align 8, !tbaa !13
  %arrayidx44.1 = getelementptr inbounds i8, ptr %36, i64 %indvars.iv.next520
  store i8 1, ptr %arrayidx44.1, align 1, !tbaa !5
  %indvars.iv.next520.1 = or i64 %indvars.iv519, 2
  %arrayidx42.2 = getelementptr inbounds ptr, ptr %call1, i64 %indvars.iv.next520.1
  %37 = load ptr, ptr %arrayidx42.2, align 8, !tbaa !13
  %arrayidx44.2 = getelementptr inbounds i8, ptr %37, i64 %indvars.iv.next520.1
  store i8 1, ptr %arrayidx44.2, align 1, !tbaa !5
  %indvars.iv.next520.2 = or i64 %indvars.iv519, 3
  %arrayidx42.3 = getelementptr inbounds ptr, ptr %call1, i64 %indvars.iv.next520.2
  %38 = load ptr, ptr %arrayidx42.3, align 8, !tbaa !13
  %arrayidx44.3 = getelementptr inbounds i8, ptr %38, i64 %indvars.iv.next520.2
  store i8 1, ptr %arrayidx44.3, align 1, !tbaa !5
  %indvars.iv.next520.3 = add nuw nsw i64 %indvars.iv519, 4
  %niter574.next.3 = add i64 %niter574, 4
  %niter574.ncmp.3 = icmp eq i64 %niter574.next.3, %unroll_iter573
  br i1 %niter574.ncmp.3, label %for.cond48.preheader.unr-lcssa, label %for.body40, !llvm.loop !254

for.body54.preheader:                             ; preds = %for.end296, %for.cond51.preheader.lr.ph
  %indvars.iv557 = phi i64 [ 0, %for.cond51.preheader.lr.ph ], [ %indvars.iv.next558, %for.end296 ]
  br label %for.body54

for.cond51.loopexit:                              ; preds = %for.body57, %for.body54
  %minscore.1.lcssa = phi float [ %minscore.0478, %for.body54 ], [ %minscore.2, %for.body57 ]
  %im.1.lcssa = phi i32 [ %im.0479, %for.body54 ], [ %im.2, %for.body57 ]
  %jm.1.lcssa = phi i32 [ %jm.0480, %for.body54 ], [ %jm.2, %for.body57 ]
  %indvars.iv.next525 = add nuw nsw i64 %indvars.iv524, 1
  %exitcond535.not = icmp eq i64 %indvars.iv.next532, %wide.trip.count560
  br i1 %exitcond535.not, label %for.body80.lr.ph, label %for.body54, !llvm.loop !255

for.body80.lr.ph:                                 ; preds = %for.cond51.loopexit
  %idxprom81 = sext i32 %im.1.lcssa to i64
  %arrayidx82 = getelementptr inbounds ptr, ptr %call1, i64 %idxprom81
  %39 = load ptr, ptr %arrayidx82, align 8, !tbaa !13
  %arrayidx90 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv557
  br i1 %31, label %for.body107.lr.ph.unr-lcssa, label %for.body80

for.body54:                                       ; preds = %for.body54.preheader, %for.cond51.loopexit
  %indvars.iv531 = phi i64 [ 0, %for.body54.preheader ], [ %indvars.iv.next532, %for.cond51.loopexit ]
  %indvars.iv524 = phi i64 [ 1, %for.body54.preheader ], [ %indvars.iv.next525, %for.cond51.loopexit ]
  %jm.0480 = phi i32 [ -1, %for.body54.preheader ], [ %jm.1.lcssa, %for.cond51.loopexit ]
  %im.0479 = phi i32 [ -1, %for.body54.preheader ], [ %im.1.lcssa, %for.cond51.loopexit ]
  %minscore.0478 = phi float [ 9.999000e+03, %for.body54.preheader ], [ %minscore.1.lcssa, %for.cond51.loopexit ]
  %indvars.iv.next532 = add nuw nsw i64 %indvars.iv531, 1
  %cmp56469 = icmp ult i64 %indvars.iv.next532, %30
  br i1 %cmp56469, label %for.body57.lr.ph, label %for.cond51.loopexit

for.body57.lr.ph:                                 ; preds = %for.body54
  %arrayidx59 = getelementptr inbounds ptr, ptr %call, i64 %indvars.iv531
  %40 = load ptr, ptr %arrayidx59, align 8, !tbaa !13
  %41 = trunc i64 %indvars.iv531 to i32
  br label %for.body57

for.body57:                                       ; preds = %for.body57.lr.ph, %for.body57
  %indvars.iv526 = phi i64 [ %indvars.iv524, %for.body57.lr.ph ], [ %indvars.iv.next527, %for.body57 ]
  %jm.1473 = phi i32 [ %jm.0480, %for.body57.lr.ph ], [ %jm.2, %for.body57 ]
  %im.1472 = phi i32 [ %im.0479, %for.body57.lr.ph ], [ %im.2, %for.body57 ]
  %minscore.1471 = phi float [ %minscore.0478, %for.body57.lr.ph ], [ %minscore.2, %for.body57 ]
  %arrayidx61 = getelementptr inbounds double, ptr %40, i64 %indvars.iv526
  %42 = load double, ptr %arrayidx61, align 8, !tbaa !20
  %conv = fpext float %minscore.1471 to double
  %cmp62 = fcmp olt double %42, %conv
  %conv69 = fptrunc double %42 to float
  %minscore.2 = select i1 %cmp62, float %conv69, float %minscore.1471
  %im.2 = select i1 %cmp62, i32 %41, i32 %im.1472
  %43 = trunc i64 %indvars.iv526 to i32
  %jm.2 = select i1 %cmp62, i32 %43, i32 %jm.1473
  %indvars.iv.next527 = add nuw nsw i64 %indvars.iv526, 1
  %exitcond530.not = icmp eq i64 %indvars.iv.next527, %wide.trip.count529
  br i1 %exitcond530.not, label %for.cond51.loopexit, label %for.body57, !llvm.loop !256

for.body80:                                       ; preds = %for.body80.lr.ph, %for.inc96.1
  %indvars.iv536 = phi i64 [ %indvars.iv.next537.1, %for.inc96.1 ], [ 0, %for.body80.lr.ph ]
  %count.0486 = phi i32 [ %count.1.1, %for.inc96.1 ], [ 0, %for.body80.lr.ph ]
  %niter580 = phi i64 [ %niter580.next.1, %for.inc96.1 ], [ 0, %for.body80.lr.ph ]
  %arrayidx84 = getelementptr inbounds i8, ptr %39, i64 %indvars.iv536
  %44 = load i8, ptr %arrayidx84, align 1, !tbaa !5
  %cmp86 = icmp sgt i8 %44, 0
  br i1 %cmp86, label %if.then88, label %for.inc96

if.then88:                                        ; preds = %for.body80
  %45 = load ptr, ptr %arrayidx90, align 8, !tbaa !13
  %46 = load ptr, ptr %45, align 8, !tbaa !13
  %idxprom92 = sext i32 %count.0486 to i64
  %arrayidx93 = getelementptr inbounds i32, ptr %46, i64 %idxprom92
  %47 = trunc i64 %indvars.iv536 to i32
  store i32 %47, ptr %arrayidx93, align 4, !tbaa !10
  %inc94 = add nsw i32 %count.0486, 1
  br label %for.inc96

for.inc96:                                        ; preds = %for.body80, %if.then88
  %count.1 = phi i32 [ %inc94, %if.then88 ], [ %count.0486, %for.body80 ]
  %indvars.iv.next537 = or i64 %indvars.iv536, 1
  %arrayidx84.1 = getelementptr inbounds i8, ptr %39, i64 %indvars.iv.next537
  %48 = load i8, ptr %arrayidx84.1, align 1, !tbaa !5
  %cmp86.1 = icmp sgt i8 %48, 0
  br i1 %cmp86.1, label %if.then88.1, label %for.inc96.1

if.then88.1:                                      ; preds = %for.inc96
  %49 = load ptr, ptr %arrayidx90, align 8, !tbaa !13
  %50 = load ptr, ptr %49, align 8, !tbaa !13
  %idxprom92.1 = sext i32 %count.1 to i64
  %arrayidx93.1 = getelementptr inbounds i32, ptr %50, i64 %idxprom92.1
  %51 = trunc i64 %indvars.iv.next537 to i32
  store i32 %51, ptr %arrayidx93.1, align 4, !tbaa !10
  %inc94.1 = add nsw i32 %count.1, 1
  br label %for.inc96.1

for.inc96.1:                                      ; preds = %if.then88.1, %for.inc96
  %count.1.1 = phi i32 [ %inc94.1, %if.then88.1 ], [ %count.1, %for.inc96 ]
  %indvars.iv.next537.1 = add nuw nsw i64 %indvars.iv536, 2
  %niter580.next.1 = add i64 %niter580, 2
  %niter580.ncmp.1 = icmp eq i64 %niter580.next.1, %unroll_iter579
  br i1 %niter580.ncmp.1, label %for.body107.lr.ph.unr-lcssa, label %for.body80, !llvm.loop !257

for.body107.lr.ph.unr-lcssa:                      ; preds = %for.inc96.1, %for.body80.lr.ph
  %count.1.lcssa.ph = phi i32 [ undef, %for.body80.lr.ph ], [ %count.1.1, %for.inc96.1 ]
  %indvars.iv536.unr = phi i64 [ 0, %for.body80.lr.ph ], [ %indvars.iv.next537.1, %for.inc96.1 ]
  %count.0486.unr = phi i32 [ 0, %for.body80.lr.ph ], [ %count.1.1, %for.inc96.1 ]
  br i1 %lcmp.mod577.not, label %for.body107.lr.ph, label %for.body80.epil

for.body80.epil:                                  ; preds = %for.body107.lr.ph.unr-lcssa
  %arrayidx84.epil = getelementptr inbounds i8, ptr %39, i64 %indvars.iv536.unr
  %52 = load i8, ptr %arrayidx84.epil, align 1, !tbaa !5
  %cmp86.epil = icmp sgt i8 %52, 0
  br i1 %cmp86.epil, label %if.then88.epil, label %for.body107.lr.ph

if.then88.epil:                                   ; preds = %for.body80.epil
  %53 = load ptr, ptr %arrayidx90, align 8, !tbaa !13
  %54 = load ptr, ptr %53, align 8, !tbaa !13
  %idxprom92.epil = sext i32 %count.0486.unr to i64
  %arrayidx93.epil = getelementptr inbounds i32, ptr %54, i64 %idxprom92.epil
  %55 = trunc i64 %indvars.iv536.unr to i32
  store i32 %55, ptr %arrayidx93.epil, align 4, !tbaa !10
  %inc94.epil = add nsw i32 %count.0486.unr, 1
  br label %for.body107.lr.ph

for.body107.lr.ph:                                ; preds = %for.body80.epil, %if.then88.epil, %for.body107.lr.ph.unr-lcssa
  %count.1.lcssa = phi i32 [ %count.1.lcssa.ph, %for.body107.lr.ph.unr-lcssa ], [ %inc94.epil, %if.then88.epil ], [ %count.0486.unr, %for.body80.epil ]
  %arrayidx100 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv557
  %56 = load ptr, ptr %arrayidx100, align 8, !tbaa !13
  %57 = load ptr, ptr %56, align 8, !tbaa !13
  %idxprom102 = sext i32 %count.1.lcssa to i64
  %arrayidx103 = getelementptr inbounds i32, ptr %57, i64 %idxprom102
  store i32 -1, ptr %arrayidx103, align 4, !tbaa !10
  %idxprom108 = sext i32 %jm.1.lcssa to i64
  %arrayidx109 = getelementptr inbounds ptr, ptr %call1, i64 %idxprom108
  %58 = load ptr, ptr %arrayidx109, align 8, !tbaa !13
  %arrayidx118 = getelementptr inbounds ptr, ptr %56, i64 1
  br i1 %32, label %for.body153.lr.ph.unr-lcssa, label %for.body107

for.body107:                                      ; preds = %for.body107.lr.ph, %for.inc123.1
  %indvars.iv541 = phi i64 [ %indvars.iv.next542.1, %for.inc123.1 ], [ 0, %for.body107.lr.ph ]
  %count.2490 = phi i32 [ %count.3.1, %for.inc123.1 ], [ 0, %for.body107.lr.ph ]
  %niter586 = phi i64 [ %niter586.next.1, %for.inc123.1 ], [ 0, %for.body107.lr.ph ]
  %arrayidx111 = getelementptr inbounds i8, ptr %58, i64 %indvars.iv541
  %59 = load i8, ptr %arrayidx111, align 1, !tbaa !5
  %cmp113 = icmp sgt i8 %59, 0
  br i1 %cmp113, label %if.then115, label %for.inc123

if.then115:                                       ; preds = %for.body107
  %60 = load ptr, ptr %arrayidx118, align 8, !tbaa !13
  %idxprom119 = sext i32 %count.2490 to i64
  %arrayidx120 = getelementptr inbounds i32, ptr %60, i64 %idxprom119
  %61 = trunc i64 %indvars.iv541 to i32
  store i32 %61, ptr %arrayidx120, align 4, !tbaa !10
  %inc121 = add nsw i32 %count.2490, 1
  br label %for.inc123

for.inc123:                                       ; preds = %for.body107, %if.then115
  %count.3 = phi i32 [ %inc121, %if.then115 ], [ %count.2490, %for.body107 ]
  %indvars.iv.next542 = or i64 %indvars.iv541, 1
  %arrayidx111.1 = getelementptr inbounds i8, ptr %58, i64 %indvars.iv.next542
  %62 = load i8, ptr %arrayidx111.1, align 1, !tbaa !5
  %cmp113.1 = icmp sgt i8 %62, 0
  br i1 %cmp113.1, label %if.then115.1, label %for.inc123.1

if.then115.1:                                     ; preds = %for.inc123
  %63 = load ptr, ptr %arrayidx118, align 8, !tbaa !13
  %idxprom119.1 = sext i32 %count.3 to i64
  %arrayidx120.1 = getelementptr inbounds i32, ptr %63, i64 %idxprom119.1
  %64 = trunc i64 %indvars.iv.next542 to i32
  store i32 %64, ptr %arrayidx120.1, align 4, !tbaa !10
  %inc121.1 = add nsw i32 %count.3, 1
  br label %for.inc123.1

for.inc123.1:                                     ; preds = %if.then115.1, %for.inc123
  %count.3.1 = phi i32 [ %inc121.1, %if.then115.1 ], [ %count.3, %for.inc123 ]
  %indvars.iv.next542.1 = add nuw nsw i64 %indvars.iv541, 2
  %niter586.next.1 = add i64 %niter586, 2
  %niter586.ncmp.1 = icmp eq i64 %niter586.next.1, %unroll_iter585
  br i1 %niter586.ncmp.1, label %for.body153.lr.ph.unr-lcssa, label %for.body107, !llvm.loop !258

for.body153.lr.ph.unr-lcssa:                      ; preds = %for.inc123.1, %for.body107.lr.ph
  %count.3.lcssa.ph = phi i32 [ undef, %for.body107.lr.ph ], [ %count.3.1, %for.inc123.1 ]
  %indvars.iv541.unr = phi i64 [ 0, %for.body107.lr.ph ], [ %indvars.iv.next542.1, %for.inc123.1 ]
  %count.2490.unr = phi i32 [ 0, %for.body107.lr.ph ], [ %count.3.1, %for.inc123.1 ]
  br i1 %lcmp.mod583.not, label %for.body153.lr.ph, label %for.body107.epil

for.body107.epil:                                 ; preds = %for.body153.lr.ph.unr-lcssa
  %arrayidx111.epil = getelementptr inbounds i8, ptr %58, i64 %indvars.iv541.unr
  %65 = load i8, ptr %arrayidx111.epil, align 1, !tbaa !5
  %cmp113.epil = icmp sgt i8 %65, 0
  br i1 %cmp113.epil, label %if.then115.epil, label %for.body153.lr.ph

if.then115.epil:                                  ; preds = %for.body107.epil
  %66 = load ptr, ptr %arrayidx118, align 8, !tbaa !13
  %idxprom119.epil = sext i32 %count.2490.unr to i64
  %arrayidx120.epil = getelementptr inbounds i32, ptr %66, i64 %idxprom119.epil
  %67 = trunc i64 %indvars.iv541.unr to i32
  store i32 %67, ptr %arrayidx120.epil, align 4, !tbaa !10
  %inc121.epil = add nsw i32 %count.2490.unr, 1
  br label %for.body153.lr.ph

for.body153.lr.ph:                                ; preds = %for.body107.epil, %if.then115.epil, %for.body153.lr.ph.unr-lcssa
  %count.3.lcssa = phi i32 [ %count.3.lcssa.ph, %for.body153.lr.ph.unr-lcssa ], [ %inc121.epil, %if.then115.epil ], [ %count.2490.unr, %for.body107.epil ]
  %arrayidx141.phi.trans.insert = getelementptr inbounds [50000 x double], ptr %tmplen, i64 0, i64 %idxprom108
  %arrayidx128 = getelementptr inbounds ptr, ptr %56, i64 1
  %68 = load ptr, ptr %arrayidx128, align 8, !tbaa !13
  %idxprom129 = sext i32 %count.3.lcssa to i64
  %arrayidx130 = getelementptr inbounds i32, ptr %68, i64 %idxprom129
  store i32 -1, ptr %arrayidx130, align 4, !tbaa !10
  %conv131 = fpext float %minscore.1.lcssa to double
  %div = fmul double %conv131, 5.000000e-01
  %idxprom132 = sext i32 %im.1.lcssa to i64
  %arrayidx133 = getelementptr inbounds [50000 x double], ptr %tmplen, i64 0, i64 %idxprom132
  %arrayidx136 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv557
  %69 = load ptr, ptr %arrayidx136, align 8, !tbaa !13
  %.pre562 = load double, ptr %arrayidx141.phi.trans.insert, align 8, !tbaa !20
  %70 = load double, ptr %arrayidx133, align 8, !tbaa !20
  %71 = insertelement <2 x double> poison, double %div, i64 0
  %72 = shufflevector <2 x double> %71, <2 x double> poison, <2 x i32> zeroinitializer
  %73 = insertelement <2 x double> poison, double %70, i64 0
  %74 = insertelement <2 x double> %73, double %.pre562, i64 1
  %75 = fsub <2 x double> %72, %74
  store <2 x double> %75, ptr %69, align 8, !tbaa !20
  store double %div, ptr %arrayidx133, align 8, !tbaa !20
  %arrayidx155 = getelementptr inbounds ptr, ptr %call1, i64 %idxprom108
  %arrayidx162 = getelementptr inbounds ptr, ptr %call1, i64 %idxprom132
  br i1 %33, label %for.body174.lr.ph.unr-lcssa, label %for.body153

for.body174.lr.ph.unr-lcssa:                      ; preds = %for.body153, %for.body153.lr.ph
  %indvars.iv546.unr = phi i64 [ 0, %for.body153.lr.ph ], [ %indvars.iv.next547.1, %for.body153 ]
  br i1 %lcmp.mod589.not, label %for.body174.lr.ph, label %for.body153.epil

for.body153.epil:                                 ; preds = %for.body174.lr.ph.unr-lcssa
  %76 = load ptr, ptr %arrayidx155, align 8, !tbaa !13
  %arrayidx157.epil = getelementptr inbounds i8, ptr %76, i64 %indvars.iv546.unr
  %77 = load i8, ptr %arrayidx157.epil, align 1, !tbaa !5
  %cmp159.epil = icmp sgt i8 %77, 0
  %conv160.epil = zext i1 %cmp159.epil to i8
  %78 = load ptr, ptr %arrayidx162, align 8, !tbaa !13
  %arrayidx164.epil = getelementptr inbounds i8, ptr %78, i64 %indvars.iv546.unr
  %79 = load i8, ptr %arrayidx164.epil, align 1, !tbaa !5
  %add166.epil = add i8 %79, %conv160.epil
  store i8 %add166.epil, ptr %arrayidx164.epil, align 1, !tbaa !5
  br label %for.body174.lr.ph

for.body174.lr.ph:                                ; preds = %for.body174.lr.ph.unr-lcssa, %for.body153.epil
  %arrayidx176 = getelementptr inbounds ptr, ptr %call1, i64 %idxprom108
  br i1 %34, label %for.body185.lr.ph.unr-lcssa, label %for.body174

for.body153:                                      ; preds = %for.body153.lr.ph, %for.body153
  %indvars.iv546 = phi i64 [ %indvars.iv.next547.1, %for.body153 ], [ 0, %for.body153.lr.ph ]
  %niter591 = phi i64 [ %niter591.next.1, %for.body153 ], [ 0, %for.body153.lr.ph ]
  %80 = load ptr, ptr %arrayidx155, align 8, !tbaa !13
  %arrayidx157 = getelementptr inbounds i8, ptr %80, i64 %indvars.iv546
  %81 = load i8, ptr %arrayidx157, align 1, !tbaa !5
  %cmp159 = icmp sgt i8 %81, 0
  %conv160 = zext i1 %cmp159 to i8
  %82 = load ptr, ptr %arrayidx162, align 8, !tbaa !13
  %arrayidx164 = getelementptr inbounds i8, ptr %82, i64 %indvars.iv546
  %83 = load i8, ptr %arrayidx164, align 1, !tbaa !5
  %add166 = add i8 %83, %conv160
  store i8 %add166, ptr %arrayidx164, align 1, !tbaa !5
  %indvars.iv.next547 = or i64 %indvars.iv546, 1
  %84 = load ptr, ptr %arrayidx155, align 8, !tbaa !13
  %arrayidx157.1 = getelementptr inbounds i8, ptr %84, i64 %indvars.iv.next547
  %85 = load i8, ptr %arrayidx157.1, align 1, !tbaa !5
  %cmp159.1 = icmp sgt i8 %85, 0
  %conv160.1 = zext i1 %cmp159.1 to i8
  %86 = load ptr, ptr %arrayidx162, align 8, !tbaa !13
  %arrayidx164.1 = getelementptr inbounds i8, ptr %86, i64 %indvars.iv.next547
  %87 = load i8, ptr %arrayidx164.1, align 1, !tbaa !5
  %add166.1 = add i8 %87, %conv160.1
  store i8 %add166.1, ptr %arrayidx164.1, align 1, !tbaa !5
  %indvars.iv.next547.1 = add nuw nsw i64 %indvars.iv546, 2
  %niter591.next.1 = add i64 %niter591, 2
  %niter591.ncmp.1 = icmp eq i64 %niter591.next.1, %unroll_iter590
  br i1 %niter591.ncmp.1, label %for.body174.lr.ph.unr-lcssa, label %for.body153, !llvm.loop !259

for.body185.lr.ph.unr-lcssa:                      ; preds = %for.body174, %for.body174.lr.ph
  %indvars.iv551.unr = phi i64 [ 0, %for.body174.lr.ph ], [ %indvars.iv.next552.3, %for.body174 ]
  br i1 %lcmp.mod594.not, label %for.body185.lr.ph, label %for.body174.epil

for.body174.epil:                                 ; preds = %for.body185.lr.ph.unr-lcssa, %for.body174.epil
  %indvars.iv551.epil = phi i64 [ %indvars.iv.next552.epil, %for.body174.epil ], [ %indvars.iv551.unr, %for.body185.lr.ph.unr-lcssa ]
  %epil.iter593 = phi i64 [ %epil.iter593.next, %for.body174.epil ], [ 0, %for.body185.lr.ph.unr-lcssa ]
  %88 = load ptr, ptr %arrayidx176, align 8, !tbaa !13
  %arrayidx178.epil = getelementptr inbounds i8, ptr %88, i64 %indvars.iv551.epil
  store i8 0, ptr %arrayidx178.epil, align 1, !tbaa !5
  %indvars.iv.next552.epil = add nuw nsw i64 %indvars.iv551.epil, 1
  %epil.iter593.next = add i64 %epil.iter593, 1
  %epil.iter593.cmp.not = icmp eq i64 %epil.iter593.next, %xtraiter592
  br i1 %epil.iter593.cmp.not, label %for.body185.lr.ph, label %for.body174.epil, !llvm.loop !260

for.body185.lr.ph:                                ; preds = %for.body174.epil, %for.body185.lr.ph.unr-lcssa
  %arrayidx291 = getelementptr inbounds ptr, ptr %call, i64 %idxprom132
  %89 = load ptr, ptr %arrayidx291, align 8, !tbaa !13
  %arrayidx293 = getelementptr inbounds double, ptr %89, i64 %idxprom108
  br label %for.body185

for.body174:                                      ; preds = %for.body174.lr.ph, %for.body174
  %indvars.iv551 = phi i64 [ %indvars.iv.next552.3, %for.body174 ], [ 0, %for.body174.lr.ph ]
  %niter596 = phi i64 [ %niter596.next.3, %for.body174 ], [ 0, %for.body174.lr.ph ]
  %90 = load ptr, ptr %arrayidx176, align 8, !tbaa !13
  %arrayidx178 = getelementptr inbounds i8, ptr %90, i64 %indvars.iv551
  store i8 0, ptr %arrayidx178, align 1, !tbaa !5
  %indvars.iv.next552 = or i64 %indvars.iv551, 1
  %91 = load ptr, ptr %arrayidx176, align 8, !tbaa !13
  %arrayidx178.1 = getelementptr inbounds i8, ptr %91, i64 %indvars.iv.next552
  store i8 0, ptr %arrayidx178.1, align 1, !tbaa !5
  %indvars.iv.next552.1 = or i64 %indvars.iv551, 2
  %92 = load ptr, ptr %arrayidx176, align 8, !tbaa !13
  %arrayidx178.2 = getelementptr inbounds i8, ptr %92, i64 %indvars.iv.next552.1
  store i8 0, ptr %arrayidx178.2, align 1, !tbaa !5
  %indvars.iv.next552.2 = or i64 %indvars.iv551, 3
  %93 = load ptr, ptr %arrayidx176, align 8, !tbaa !13
  %arrayidx178.3 = getelementptr inbounds i8, ptr %93, i64 %indvars.iv.next552.2
  store i8 0, ptr %arrayidx178.3, align 1, !tbaa !5
  %indvars.iv.next552.3 = add nuw nsw i64 %indvars.iv551, 4
  %niter596.next.3 = add i64 %niter596, 4
  %niter596.ncmp.3 = icmp eq i64 %niter596.next.3, %unroll_iter595
  br i1 %niter596.ncmp.3, label %for.body185.lr.ph.unr-lcssa, label %for.body174, !llvm.loop !261

for.body185:                                      ; preds = %for.body185.lr.ph, %if.end289
  %i.9497 = phi i32 [ 0, %for.body185.lr.ph ], [ %inc295, %if.end289 ]
  %cmp186.not = icmp eq i32 %i.9497, %im.1.lcssa
  %cmp188.not = icmp eq i32 %i.9497, %jm.1.lcssa
  %or.cond = select i1 %cmp186.not, i1 true, i1 %cmp188.not
  br i1 %or.cond, label %if.end289, label %if.then190

if.then190:                                       ; preds = %for.body185
  %cond = tail call i32 @llvm.smin.i32(i32 %i.9497, i32 %im.1.lcssa)
  %idxprom193 = sext i32 %cond to i64
  %arrayidx194 = getelementptr inbounds ptr, ptr %call, i64 %idxprom193
  %94 = load ptr, ptr %arrayidx194, align 8, !tbaa !13
  %cond200 = tail call i32 @llvm.smax.i32(i32 %i.9497, i32 %im.1.lcssa)
  %idxprom201 = zext i32 %cond200 to i64
  %arrayidx202 = getelementptr inbounds double, ptr %94, i64 %idxprom201
  %95 = load double, ptr %arrayidx202, align 8, !tbaa !20
  %cond208 = tail call i32 @llvm.smin.i32(i32 %i.9497, i32 %jm.1.lcssa)
  %idxprom209 = sext i32 %cond208 to i64
  %arrayidx210 = getelementptr inbounds ptr, ptr %call, i64 %idxprom209
  %96 = load ptr, ptr %arrayidx210, align 8, !tbaa !13
  %cond216 = tail call i32 @llvm.smax.i32(i32 %i.9497, i32 %jm.1.lcssa)
  %idxprom217 = zext i32 %cond216 to i64
  %arrayidx218 = getelementptr inbounds double, ptr %96, i64 %idxprom217
  %97 = load double, ptr %arrayidx218, align 8, !tbaa !20
  %cmp219 = fcmp olt double %95, %97
  %. = select i1 %cmp219, double %95, double %97
  store double %., ptr %arrayidx202, align 8, !tbaa !20
  store double 9.999000e+03, ptr %arrayidx218, align 8, !tbaa !20
  br label %if.end289

if.end289:                                        ; preds = %if.then190, %for.body185
  store double 9.999000e+03, ptr %arrayidx293, align 8, !tbaa !20
  %inc295 = add nuw nsw i32 %i.9497, 1
  %exitcond556.not = icmp eq i32 %inc295, %nseq
  br i1 %exitcond556.not, label %for.end296, label %for.body185, !llvm.loop !262

for.end296:                                       ; preds = %if.end289
  %indvars.iv.next558 = add nuw nsw i64 %indvars.iv557, 1
  %exitcond561.not = icmp eq i64 %indvars.iv.next558, %wide.trip.count560
  br i1 %exitcond561.not, label %for.end299, label %for.body54.preheader, !llvm.loop !263

for.end299:                                       ; preds = %for.end296, %for.cond14.preheader, %entry, %for.cond38.preheader, %for.cond48.preheader
  call void @llvm.lifetime.end.p0(i64 400000, ptr nonnull %tmplen) #34
  ret void
}

declare ptr @AllocateDoubleMtx(i32 noundef, i32 noundef) local_unnamed_addr #14

; Function Attrs: nofree norecurse nosync nounwind memory(none) uwtable
define dso_local double @ipower(double noundef %x, i32 noundef %n) local_unnamed_addr #22 {
entry:
  %cmp.not7 = icmp eq i32 %n, 0
  br i1 %cmp.not7, label %while.end, label %while.body

while.body:                                       ; preds = %entry, %while.body
  %r.010 = phi double [ %r.1, %while.body ], [ 1.000000e+00, %entry ]
  %n.addr.09 = phi i32 [ %shr, %while.body ], [ %n, %entry ]
  %x.addr.08 = phi double [ %mul1, %while.body ], [ %x, %entry ]
  %and = and i32 %n.addr.09, 1
  %tobool.not = icmp eq i32 %and, 0
  %mul = select i1 %tobool.not, double 1.000000e+00, double %x.addr.08
  %r.1 = fmul double %r.010, %mul
  %mul1 = fmul double %x.addr.08, %x.addr.08
  %shr = ashr i32 %n.addr.09, 1
  %cmp.not = icmp ult i32 %n.addr.09, 2
  br i1 %cmp.not, label %while.end, label %while.body, !llvm.loop !264

while.end:                                        ; preds = %while.body, %entry
  %r.0.lcssa = phi double [ 1.000000e+00, %entry ], [ %r.1, %while.body ]
  ret double %r.0.lcssa
}

; Function Attrs: nounwind uwtable
define dso_local void @countnode(i32 noundef %nseq, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %node) local_unnamed_addr #12 {
entry:
  %sub = add i32 %nseq, -2
  %cmp = icmp slt i32 %nseq, 2
  br i1 %cmp, label %if.then, label %for.cond2.preheader

if.then:                                          ; preds = %entry
  %0 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %0, ptr noundef nonnull @.str.27, i32 noundef %nseq) #32
  tail call void @exit(i32 noundef 1) #33
  unreachable

for.cond2.preheader:                              ; preds = %entry
  %1 = zext i32 %nseq to i64
  %2 = shl nuw nsw i64 %1, 3
  tail call void @llvm.memset.p0.i64(ptr nonnull align 16 @countnode.rootnode, i8 0, i64 %2, i1 false), !tbaa !20
  %cmp4237.not = icmp eq i32 %nseq, 2
  br i1 %cmp4237.not, label %for.cond94.preheader, label %for.cond6.preheader.preheader

for.cond6.preheader.preheader:                    ; preds = %for.cond2.preheader
  %wide.trip.count = zext i32 %sub to i64
  br label %for.cond6.preheader

for.cond6.preheader:                              ; preds = %for.cond6.preheader.preheader, %for.inc91
  %indvars.iv260 = phi i64 [ 0, %for.cond6.preheader.preheader ], [ %indvars.iv.next261, %for.inc91 ]
  %arrayidx8 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv260
  %3 = load ptr, ptr %arrayidx8, align 8, !tbaa !13
  %4 = load ptr, ptr %3, align 8, !tbaa !13
  %5 = load i32, ptr %4, align 4, !tbaa !10
  %cmp12224 = icmp sgt i32 %5, -1
  br i1 %cmp12224, label %for.body13, label %for.cond25.preheader.thread

for.cond94.preheader:                             ; preds = %for.inc91, %for.cond2.preheader
  %idxprom96.pre-phi = phi i64 [ 0, %for.cond2.preheader ], [ %wide.trip.count, %for.inc91 ]
  %arrayidx97 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom96.pre-phi
  %6 = load ptr, ptr %arrayidx97, align 8, !tbaa !13
  %7 = load ptr, ptr %6, align 8, !tbaa !13
  %8 = load i32, ptr %7, align 4, !tbaa !10
  %cmp101242 = icmp sgt i32 %8, -1
  br i1 %cmp101242, label %for.cond109.preheader.lr.ph, label %for.end148

for.cond109.preheader.lr.ph:                      ; preds = %for.cond94.preheader
  %arrayidx113 = getelementptr inbounds ptr, ptr %6, i64 1
  %9 = load ptr, ptr %arrayidx113, align 8, !tbaa !13
  %10 = load i32, ptr %9, align 4, !tbaa !10
  %cmp116240 = icmp sgt i32 %10, -1
  br i1 %cmp116240, label %for.cond109.preheader.us, label %for.end148

for.cond109.preheader.us:                         ; preds = %for.cond109.preheader.lr.ph, %for.cond109.for.inc146_crit_edge.us
  %indvars.iv269 = phi i64 [ %indvars.iv.next270, %for.cond109.for.inc146_crit_edge.us ], [ 0, %for.cond109.preheader.lr.ph ]
  %11 = phi i32 [ %17, %for.cond109.for.inc146_crit_edge.us ], [ %8, %for.cond109.preheader.lr.ph ]
  %idxprom124.us = zext i32 %11 to i64
  %arrayidx125.us = getelementptr inbounds [50000 x double], ptr @countnode.rootnode, i64 0, i64 %idxprom124.us
  %12 = load double, ptr %arrayidx125.us, align 8, !tbaa !20
  br label %for.body117.us

for.body117.us:                                   ; preds = %for.cond109.preheader.us, %for.body117.us
  %indvars.iv266 = phi i64 [ 0, %for.cond109.preheader.us ], [ %indvars.iv.next267, %for.body117.us ]
  %13 = phi i32 [ %10, %for.cond109.preheader.us ], [ %16, %for.body117.us ]
  %idxprom126.us = zext i32 %13 to i64
  %arrayidx127.us = getelementptr inbounds [50000 x double], ptr @countnode.rootnode, i64 0, i64 %idxprom126.us
  %14 = load double, ptr %arrayidx127.us, align 8, !tbaa !20
  %add128.us = fadd double %12, %14
  %cond133.us = tail call i32 @llvm.smin.i32(i32 %11, i32 %13)
  %idxprom134.us = zext i32 %cond133.us to i64
  %arrayidx135.us = getelementptr inbounds ptr, ptr %node, i64 %idxprom134.us
  %15 = load ptr, ptr %arrayidx135.us, align 8, !tbaa !13
  %cond140.us = tail call i32 @llvm.smax.i32(i32 %11, i32 %13)
  %idxprom141.us = zext i32 %cond140.us to i64
  %arrayidx142.us = getelementptr inbounds double, ptr %15, i64 %idxprom141.us
  store double %add128.us, ptr %arrayidx142.us, align 8, !tbaa !20
  %indvars.iv.next267 = add nuw nsw i64 %indvars.iv266, 1
  %arrayidx115.us = getelementptr inbounds i32, ptr %9, i64 %indvars.iv.next267
  %16 = load i32, ptr %arrayidx115.us, align 4, !tbaa !10
  %cmp116.us = icmp sgt i32 %16, -1
  br i1 %cmp116.us, label %for.body117.us, label %for.cond109.for.inc146_crit_edge.us, !llvm.loop !265

for.cond109.for.inc146_crit_edge.us:              ; preds = %for.body117.us
  %indvars.iv.next270 = add nuw nsw i64 %indvars.iv269, 1
  %arrayidx100.us = getelementptr inbounds i32, ptr %7, i64 %indvars.iv.next270
  %17 = load i32, ptr %arrayidx100.us, align 4, !tbaa !10
  %cmp101.us = icmp sgt i32 %17, -1
  br i1 %cmp101.us, label %for.cond109.preheader.us, label %for.end148, !llvm.loop !266

for.cond25.preheader:                             ; preds = %for.body13
  %arrayidx28 = getelementptr inbounds ptr, ptr %3, i64 1
  %18 = load ptr, ptr %arrayidx28, align 8, !tbaa !13
  %19 = load i32, ptr %18, align 4, !tbaa !10
  %cmp31228 = icmp sgt i32 %19, -1
  br i1 %cmp31228, label %for.body32.preheader, label %for.inc91

for.cond25.preheader.thread:                      ; preds = %for.cond6.preheader
  %arrayidx28272 = getelementptr inbounds ptr, ptr %3, i64 1
  %20 = load ptr, ptr %arrayidx28272, align 8, !tbaa !13
  %21 = load i32, ptr %20, align 4, !tbaa !10
  %cmp31228273 = icmp sgt i32 %21, -1
  br i1 %cmp31228273, label %for.body32.preheader, label %for.inc91

for.body32.preheader:                             ; preds = %for.cond25.preheader.thread, %for.cond25.preheader
  %22 = phi i32 [ %21, %for.cond25.preheader.thread ], [ %19, %for.cond25.preheader ]
  %23 = phi ptr [ %20, %for.cond25.preheader.thread ], [ %18, %for.cond25.preheader ]
  br label %for.body32

for.body13:                                       ; preds = %for.cond6.preheader, %for.body13
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body13 ], [ 0, %for.cond6.preheader ]
  %24 = phi i32 [ %26, %for.body13 ], [ %5, %for.cond6.preheader ]
  %idxprom19 = zext i32 %24 to i64
  %arrayidx20 = getelementptr inbounds [50000 x double], ptr @countnode.rootnode, i64 0, i64 %idxprom19
  %25 = load double, ptr %arrayidx20, align 8, !tbaa !20
  %inc21 = fadd double %25, 1.000000e+00
  store double %inc21, ptr %arrayidx20, align 8, !tbaa !20
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx11 = getelementptr inbounds i32, ptr %4, i64 %indvars.iv.next
  %26 = load i32, ptr %arrayidx11, align 4, !tbaa !10
  %cmp12 = icmp sgt i32 %26, -1
  br i1 %cmp12, label %for.body13, label %for.cond25.preheader, !llvm.loop !267

for.cond44.preheader:                             ; preds = %for.body32
  br i1 %cmp12224, label %for.cond57.preheader.us, label %for.inc91

for.cond57.preheader.us:                          ; preds = %for.cond44.preheader, %for.cond57.for.inc88_crit_edge.us
  %indvars.iv257 = phi i64 [ %indvars.iv.next258, %for.cond57.for.inc88_crit_edge.us ], [ 0, %for.cond44.preheader ]
  %27 = phi i32 [ %33, %for.cond57.for.inc88_crit_edge.us ], [ %5, %for.cond44.preheader ]
  %idxprom70.us = zext i32 %27 to i64
  %arrayidx71.us = getelementptr inbounds [50000 x double], ptr @countnode.rootnode, i64 0, i64 %idxprom70.us
  %28 = load double, ptr %arrayidx71.us, align 8, !tbaa !20
  br label %for.body64.us

for.body64.us:                                    ; preds = %for.cond57.preheader.us, %for.body64.us
  %indvars.iv254 = phi i64 [ 0, %for.cond57.preheader.us ], [ %indvars.iv.next255, %for.body64.us ]
  %29 = phi i32 [ %22, %for.cond57.preheader.us ], [ %32, %for.body64.us ]
  %idxprom72.us = zext i32 %29 to i64
  %arrayidx73.us = getelementptr inbounds [50000 x double], ptr @countnode.rootnode, i64 0, i64 %idxprom72.us
  %30 = load double, ptr %arrayidx73.us, align 8, !tbaa !20
  %add.us = fadd double %28, %30
  %sub74.us = fadd double %add.us, -1.000000e+00
  %cond.us = tail call i32 @llvm.smin.i32(i32 %27, i32 %29)
  %idxprom76.us = zext i32 %cond.us to i64
  %arrayidx77.us = getelementptr inbounds ptr, ptr %node, i64 %idxprom76.us
  %31 = load ptr, ptr %arrayidx77.us, align 8, !tbaa !13
  %cond82.us = tail call i32 @llvm.smax.i32(i32 %27, i32 %29)
  %idxprom83.us = zext i32 %cond82.us to i64
  %arrayidx84.us = getelementptr inbounds double, ptr %31, i64 %idxprom83.us
  store double %sub74.us, ptr %arrayidx84.us, align 8, !tbaa !20
  %indvars.iv.next255 = add nuw nsw i64 %indvars.iv254, 1
  %arrayidx62.us = getelementptr inbounds i32, ptr %23, i64 %indvars.iv.next255
  %32 = load i32, ptr %arrayidx62.us, align 4, !tbaa !10
  %cmp63.us = icmp sgt i32 %32, -1
  br i1 %cmp63.us, label %for.body64.us, label %for.cond57.for.inc88_crit_edge.us, !llvm.loop !268

for.cond57.for.inc88_crit_edge.us:                ; preds = %for.body64.us
  %indvars.iv.next258 = add nuw nsw i64 %indvars.iv257, 1
  %arrayidx49.us = getelementptr inbounds i32, ptr %4, i64 %indvars.iv.next258
  %33 = load i32, ptr %arrayidx49.us, align 4, !tbaa !10
  %cmp50.us = icmp sgt i32 %33, -1
  br i1 %cmp50.us, label %for.cond57.preheader.us, label %for.inc91, !llvm.loop !269

for.body32:                                       ; preds = %for.body32.preheader, %for.body32
  %indvars.iv248 = phi i64 [ 0, %for.body32.preheader ], [ %indvars.iv.next249, %for.body32 ]
  %34 = phi i32 [ %22, %for.body32.preheader ], [ %36, %for.body32 ]
  %idxprom38 = zext i32 %34 to i64
  %arrayidx39 = getelementptr inbounds [50000 x double], ptr @countnode.rootnode, i64 0, i64 %idxprom38
  %35 = load double, ptr %arrayidx39, align 8, !tbaa !20
  %inc40 = fadd double %35, 1.000000e+00
  store double %inc40, ptr %arrayidx39, align 8, !tbaa !20
  %indvars.iv.next249 = add nuw nsw i64 %indvars.iv248, 1
  %arrayidx30 = getelementptr inbounds i32, ptr %23, i64 %indvars.iv.next249
  %36 = load i32, ptr %arrayidx30, align 4, !tbaa !10
  %cmp31 = icmp sgt i32 %36, -1
  br i1 %cmp31, label %for.body32, label %for.cond44.preheader, !llvm.loop !270

for.inc91:                                        ; preds = %for.cond57.for.inc88_crit_edge.us, %for.cond25.preheader, %for.cond25.preheader.thread, %for.cond44.preheader
  %indvars.iv.next261 = add nuw nsw i64 %indvars.iv260, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next261, %wide.trip.count
  br i1 %exitcond.not, label %for.cond94.preheader, label %for.cond6.preheader, !llvm.loop !271

for.end148:                                       ; preds = %for.cond109.for.inc146_crit_edge.us, %for.cond109.preheader.lr.ph, %for.cond94.preheader
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @countnode_int(i32 noundef %nseq, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %node) local_unnamed_addr #11 {
entry:
  %rootnode = alloca [50000 x i32], align 16
  call void @llvm.lifetime.start.p0(i64 200000, ptr nonnull %rootnode) #34
  %cmp252 = icmp sgt i32 %nseq, 0
  br i1 %cmp252, label %for.cond1.preheader, label %for.cond1.preheader.thread

for.cond1.preheader.thread:                       ; preds = %entry
  %sub319 = add i32 %nseq, -2
  br label %for.cond92.preheader

for.cond1.preheader:                              ; preds = %entry
  %0 = zext i32 %nseq to i64
  %1 = shl nuw nsw i64 %0, 2
  call void @llvm.memset.p0.i64(ptr nonnull align 16 %rootnode, i8 0, i64 %1, i1 false), !tbaa !10
  %sub = add nsw i32 %nseq, -2
  %cmp2268 = icmp ugt i32 %nseq, 2
  br i1 %cmp2268, label %for.cond4.preheader.preheader, label %for.cond92.preheader

for.cond4.preheader.preheader:                    ; preds = %for.cond1.preheader
  %wide.trip.count = zext i32 %sub to i64
  br label %for.cond4.preheader

for.cond4.preheader:                              ; preds = %for.cond4.preheader.preheader, %for.inc89
  %indvars.iv295 = phi i64 [ 0, %for.cond4.preheader.preheader ], [ %indvars.iv.next296, %for.inc89 ]
  %arrayidx6 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv295
  %2 = load ptr, ptr %arrayidx6, align 8, !tbaa !13
  %3 = load ptr, ptr %2, align 8, !tbaa !13
  %4 = load i32, ptr %3, align 4, !tbaa !10
  %cmp10255 = icmp sgt i32 %4, -1
  br i1 %cmp10255, label %for.body11, label %for.cond23.preheader.thread

for.cond92.preheader:                             ; preds = %for.inc89, %for.cond1.preheader.thread, %for.cond1.preheader
  %sub321 = phi i32 [ %sub319, %for.cond1.preheader.thread ], [ %sub, %for.cond1.preheader ], [ %sub, %for.inc89 ]
  %idxprom94 = sext i32 %sub321 to i64
  %arrayidx95 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom94
  %5 = load ptr, ptr %arrayidx95, align 8, !tbaa !13
  %6 = load ptr, ptr %5, align 8, !tbaa !13
  %7 = load i32, ptr %6, align 4, !tbaa !10
  %cmp99273 = icmp sgt i32 %7, -1
  br i1 %cmp99273, label %for.cond107.preheader.lr.ph, label %for.cond147.preheader

for.cond107.preheader.lr.ph:                      ; preds = %for.cond92.preheader
  %arrayidx111 = getelementptr inbounds ptr, ptr %5, i64 1
  %8 = load ptr, ptr %arrayidx111, align 8, !tbaa !13
  %9 = load i32, ptr %8, align 4, !tbaa !10
  %10 = icmp sgt i32 %9, -1
  br i1 %10, label %for.cond107.preheader, label %for.cond147.preheader

for.cond23.preheader:                             ; preds = %for.body11
  %arrayidx26 = getelementptr inbounds ptr, ptr %2, i64 1
  %11 = load ptr, ptr %arrayidx26, align 8, !tbaa !13
  %12 = load i32, ptr %11, align 4, !tbaa !10
  %cmp29259 = icmp sgt i32 %12, -1
  br i1 %cmp29259, label %for.body30.preheader, label %for.inc89

for.cond23.preheader.thread:                      ; preds = %for.cond4.preheader
  %arrayidx26322 = getelementptr inbounds ptr, ptr %2, i64 1
  %13 = load ptr, ptr %arrayidx26322, align 8, !tbaa !13
  %14 = load i32, ptr %13, align 4, !tbaa !10
  %cmp29259323 = icmp sgt i32 %14, -1
  br i1 %cmp29259323, label %for.body30.preheader, label %for.inc89

for.body30.preheader:                             ; preds = %for.cond23.preheader.thread, %for.cond23.preheader
  %15 = phi i32 [ %14, %for.cond23.preheader.thread ], [ %12, %for.cond23.preheader ]
  %16 = phi ptr [ %13, %for.cond23.preheader.thread ], [ %11, %for.cond23.preheader ]
  br label %for.body30

for.body11:                                       ; preds = %for.cond4.preheader, %for.body11
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body11 ], [ 0, %for.cond4.preheader ]
  %17 = phi i32 [ %19, %for.body11 ], [ %4, %for.cond4.preheader ]
  %idxprom17 = zext i32 %17 to i64
  %arrayidx18 = getelementptr inbounds [50000 x i32], ptr %rootnode, i64 0, i64 %idxprom17
  %18 = load i32, ptr %arrayidx18, align 4, !tbaa !10
  %inc19 = add nsw i32 %18, 1
  store i32 %inc19, ptr %arrayidx18, align 4, !tbaa !10
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx9 = getelementptr inbounds i32, ptr %3, i64 %indvars.iv.next
  %19 = load i32, ptr %arrayidx9, align 4, !tbaa !10
  %cmp10 = icmp sgt i32 %19, -1
  br i1 %cmp10, label %for.body11, label %for.cond23.preheader, !llvm.loop !272

for.cond42.preheader:                             ; preds = %for.body30
  br i1 %cmp10255, label %for.cond55.preheader, label %for.inc89

for.body30:                                       ; preds = %for.body30.preheader, %for.body30
  %indvars.iv283 = phi i64 [ 0, %for.body30.preheader ], [ %indvars.iv.next284, %for.body30 ]
  %20 = phi i32 [ %15, %for.body30.preheader ], [ %22, %for.body30 ]
  %idxprom36 = zext i32 %20 to i64
  %arrayidx37 = getelementptr inbounds [50000 x i32], ptr %rootnode, i64 0, i64 %idxprom36
  %21 = load i32, ptr %arrayidx37, align 4, !tbaa !10
  %inc38 = add nsw i32 %21, 1
  store i32 %inc38, ptr %arrayidx37, align 4, !tbaa !10
  %indvars.iv.next284 = add nuw nsw i64 %indvars.iv283, 1
  %arrayidx28 = getelementptr inbounds i32, ptr %16, i64 %indvars.iv.next284
  %22 = load i32, ptr %arrayidx28, align 4, !tbaa !10
  %cmp29 = icmp sgt i32 %22, -1
  br i1 %cmp29, label %for.body30, label %for.cond42.preheader, !llvm.loop !273

for.cond55.preheader:                             ; preds = %for.cond42.preheader, %for.inc86
  %indvars.iv292 = phi i64 [ %indvars.iv.next293, %for.inc86 ], [ 0, %for.cond42.preheader ]
  %23 = phi i32 [ %30, %for.inc86 ], [ %4, %for.cond42.preheader ]
  %24 = load i32, ptr %16, align 4, !tbaa !10
  %cmp61263 = icmp sgt i32 %24, -1
  br i1 %cmp61263, label %for.body62.lr.ph, label %for.inc86

for.body62.lr.ph:                                 ; preds = %for.cond55.preheader
  %idxprom68 = zext i32 %23 to i64
  %arrayidx69 = getelementptr inbounds [50000 x i32], ptr %rootnode, i64 0, i64 %idxprom68
  %25 = load i32, ptr %arrayidx69, align 4, !tbaa !10
  %add = add i32 %25, -1
  br label %for.body62

for.body62:                                       ; preds = %for.body62.lr.ph, %for.body62
  %indvars.iv289 = phi i64 [ 0, %for.body62.lr.ph ], [ %indvars.iv.next290, %for.body62 ]
  %26 = phi i32 [ %24, %for.body62.lr.ph ], [ %29, %for.body62 ]
  %idxprom70 = zext i32 %26 to i64
  %arrayidx71 = getelementptr inbounds [50000 x i32], ptr %rootnode, i64 0, i64 %idxprom70
  %27 = load i32, ptr %arrayidx71, align 4, !tbaa !10
  %sub72 = add i32 %add, %27
  %cond = tail call i32 @llvm.smin.i32(i32 %23, i32 %26)
  %idxprom74 = zext i32 %cond to i64
  %arrayidx75 = getelementptr inbounds ptr, ptr %node, i64 %idxprom74
  %28 = load ptr, ptr %arrayidx75, align 8, !tbaa !13
  %cond80 = tail call i32 @llvm.smax.i32(i32 %23, i32 %26)
  %idxprom81 = zext i32 %cond80 to i64
  %arrayidx82 = getelementptr inbounds i32, ptr %28, i64 %idxprom81
  store i32 %sub72, ptr %arrayidx82, align 4, !tbaa !10
  %indvars.iv.next290 = add nuw nsw i64 %indvars.iv289, 1
  %arrayidx60 = getelementptr inbounds i32, ptr %16, i64 %indvars.iv.next290
  %29 = load i32, ptr %arrayidx60, align 4, !tbaa !10
  %cmp61 = icmp sgt i32 %29, -1
  br i1 %cmp61, label %for.body62, label %for.inc86, !llvm.loop !274

for.inc86:                                        ; preds = %for.body62, %for.cond55.preheader
  %indvars.iv.next293 = add nuw nsw i64 %indvars.iv292, 1
  %arrayidx47 = getelementptr inbounds i32, ptr %3, i64 %indvars.iv.next293
  %30 = load i32, ptr %arrayidx47, align 4, !tbaa !10
  %cmp48 = icmp sgt i32 %30, -1
  br i1 %cmp48, label %for.cond55.preheader, label %for.inc89, !llvm.loop !275

for.inc89:                                        ; preds = %for.inc86, %for.cond23.preheader, %for.cond23.preheader.thread, %for.cond42.preheader
  %indvars.iv.next296 = add nuw nsw i64 %indvars.iv295, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next296, %wide.trip.count
  br i1 %exitcond.not, label %for.cond92.preheader, label %for.cond4.preheader, !llvm.loop !277

for.cond107.preheaderthread-pre-split:            ; preds = %for.inc144
  %.pr = load i32, ptr %8, align 4, !tbaa !10
  br label %for.cond107.preheader

for.cond107.preheader:                            ; preds = %for.cond107.preheader.lr.ph, %for.cond107.preheaderthread-pre-split
  %31 = phi i32 [ %.pr, %for.cond107.preheaderthread-pre-split ], [ %9, %for.cond107.preheader.lr.ph ]
  %indvars.iv304 = phi i64 [ %indvars.iv.next305, %for.cond107.preheaderthread-pre-split ], [ 0, %for.cond107.preheader.lr.ph ]
  %32 = phi i32 [ %39, %for.cond107.preheaderthread-pre-split ], [ %7, %for.cond107.preheader.lr.ph ]
  %cmp114271 = icmp sgt i32 %31, -1
  br i1 %cmp114271, label %for.body115.lr.ph, label %for.inc144

for.body115.lr.ph:                                ; preds = %for.cond107.preheader
  %idxprom122 = zext i32 %32 to i64
  %arrayidx123 = getelementptr inbounds [50000 x i32], ptr %rootnode, i64 0, i64 %idxprom122
  %33 = load i32, ptr %arrayidx123, align 4, !tbaa !10
  br label %for.body115

for.cond147.preheader:                            ; preds = %for.inc144, %for.cond107.preheader.lr.ph, %for.cond92.preheader
  %cmp149277 = icmp sgt i32 %nseq, 1
  br i1 %cmp149277, label %for.body150.preheader, label %for.end168

for.body150.preheader:                            ; preds = %for.cond147.preheader
  %sub148 = add nsw i32 %nseq, -1
  %34 = zext i32 %nseq to i64
  %wide.trip.count317 = zext i32 %sub148 to i64
  %wide.trip.count312 = zext i32 %nseq to i64
  br label %for.body150

for.body115:                                      ; preds = %for.body115.lr.ph, %for.body115
  %indvars.iv301 = phi i64 [ 0, %for.body115.lr.ph ], [ %indvars.iv.next302, %for.body115 ]
  %35 = phi i32 [ %31, %for.body115.lr.ph ], [ %38, %for.body115 ]
  %idxprom124 = zext i32 %35 to i64
  %arrayidx125 = getelementptr inbounds [50000 x i32], ptr %rootnode, i64 0, i64 %idxprom124
  %36 = load i32, ptr %arrayidx125, align 4, !tbaa !10
  %add126 = add nsw i32 %36, %33
  %cond131 = tail call i32 @llvm.smin.i32(i32 %32, i32 %35)
  %idxprom132 = zext i32 %cond131 to i64
  %arrayidx133 = getelementptr inbounds ptr, ptr %node, i64 %idxprom132
  %37 = load ptr, ptr %arrayidx133, align 8, !tbaa !13
  %cond138 = tail call i32 @llvm.smax.i32(i32 %32, i32 %35)
  %idxprom139 = zext i32 %cond138 to i64
  %arrayidx140 = getelementptr inbounds i32, ptr %37, i64 %idxprom139
  store i32 %add126, ptr %arrayidx140, align 4, !tbaa !10
  %indvars.iv.next302 = add nuw nsw i64 %indvars.iv301, 1
  %arrayidx113 = getelementptr inbounds i32, ptr %8, i64 %indvars.iv.next302
  %38 = load i32, ptr %arrayidx113, align 4, !tbaa !10
  %cmp114 = icmp sgt i32 %38, -1
  br i1 %cmp114, label %for.body115, label %for.inc144, !llvm.loop !278

for.inc144:                                       ; preds = %for.body115, %for.cond107.preheader
  %indvars.iv.next305 = add nuw nsw i64 %indvars.iv304, 1
  %arrayidx98 = getelementptr inbounds i32, ptr %6, i64 %indvars.iv.next305
  %39 = load i32, ptr %arrayidx98, align 4, !tbaa !10
  %cmp99 = icmp sgt i32 %39, -1
  br i1 %cmp99, label %for.cond107.preheaderthread-pre-split, label %for.cond147.preheader, !llvm.loop !279

for.cond147.loopexit:                             ; preds = %for.body154, %for.body150
  %indvars.iv.next308 = add nuw nsw i64 %indvars.iv307, 1
  %exitcond318.not = icmp eq i64 %indvars.iv.next315, %wide.trip.count317
  br i1 %exitcond318.not, label %for.end168, label %for.body150, !llvm.loop !280

for.body150:                                      ; preds = %for.body150.preheader, %for.cond147.loopexit
  %indvars.iv314 = phi i64 [ 0, %for.body150.preheader ], [ %indvars.iv.next315, %for.cond147.loopexit ]
  %indvars.iv307 = phi i64 [ 1, %for.body150.preheader ], [ %indvars.iv.next308, %for.cond147.loopexit ]
  %indvars.iv.next315 = add nuw nsw i64 %indvars.iv314, 1
  %cmp153275 = icmp ult i64 %indvars.iv.next315, %34
  br i1 %cmp153275, label %for.body154.lr.ph, label %for.cond147.loopexit

for.body154.lr.ph:                                ; preds = %for.body150
  %arrayidx156 = getelementptr inbounds ptr, ptr %node, i64 %indvars.iv314
  %40 = load ptr, ptr %arrayidx156, align 8, !tbaa !13
  br label %for.body154

for.body154:                                      ; preds = %for.body154.lr.ph, %for.body154
  %indvars.iv309 = phi i64 [ %indvars.iv307, %for.body154.lr.ph ], [ %indvars.iv.next310, %for.body154 ]
  %arrayidx158 = getelementptr inbounds i32, ptr %40, i64 %indvars.iv309
  %41 = load i32, ptr %arrayidx158, align 4, !tbaa !10
  %arrayidx160 = getelementptr inbounds ptr, ptr %node, i64 %indvars.iv309
  %42 = load ptr, ptr %arrayidx160, align 8, !tbaa !13
  %arrayidx162 = getelementptr inbounds i32, ptr %42, i64 %indvars.iv314
  store i32 %41, ptr %arrayidx162, align 4, !tbaa !10
  %indvars.iv.next310 = add nuw nsw i64 %indvars.iv309, 1
  %exitcond313.not = icmp eq i64 %indvars.iv.next310, %wide.trip.count312
  br i1 %exitcond313.not, label %for.cond147.loopexit, label %for.body154, !llvm.loop !281

for.end168:                                       ; preds = %for.cond147.loopexit, %for.cond147.preheader
  call void @llvm.lifetime.end.p0(i64 200000, ptr nonnull %rootnode) #34
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @counteff_simple_float(i32 noundef %nseq, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %len, ptr nocapture noundef writeonly %node) local_unnamed_addr #11 {
entry:
  %cmp117 = icmp sgt i32 %nseq, 0
  br i1 %cmp117, label %for.body.preheader, label %for.end82

for.body.preheader:                               ; preds = %entry
  %0 = zext i32 %nseq to i64
  %1 = shl nuw nsw i64 %0, 3
  tail call void @llvm.memset.p0.i64(ptr nonnull align 16 @counteff_simple_float.rootnode, i8 0, i64 %1, i1 false), !tbaa !20
  %min.iters.check = icmp ult i32 %nseq, 4
  br i1 %min.iters.check, label %for.body.preheader190, label %vector.ph

vector.ph:                                        ; preds = %for.body.preheader
  %n.vec = and i64 %0, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %2 = getelementptr inbounds [50000 x double], ptr @counteff_simple_float.eff, i64 0, i64 %index
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, ptr %2, align 16, !tbaa !20
  %3 = getelementptr inbounds double, ptr %2, i64 2
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, ptr %3, align 16, !tbaa !20
  %index.next = add nuw i64 %index, 4
  %4 = icmp eq i64 %index.next, %n.vec
  br i1 %4, label %middle.block, label %vector.body, !llvm.loop !282

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %0
  br i1 %cmp.n, label %for.cond3.preheader, label %for.body.preheader190

for.body.preheader190:                            ; preds = %for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ 0, %for.body.preheader ], [ %n.vec, %middle.block ]
  br label %for.body

for.cond3.preheader:                              ; preds = %for.body, %middle.block
  %cmp4126 = icmp sgt i32 %nseq, 1
  br i1 %cmp4126, label %for.cond6.preheader.preheader, label %for.cond53.preheader

for.cond6.preheader.preheader:                    ; preds = %for.cond3.preheader
  %sub = add nsw i32 %nseq, -1
  %wide.trip.count145 = zext i32 %sub to i64
  br label %for.cond6.preheader

for.body:                                         ; preds = %for.body.preheader190, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader190 ]
  %arrayidx2 = getelementptr inbounds [50000 x double], ptr @counteff_simple_float.eff, i64 0, i64 %indvars.iv
  store double 1.000000e+00, ptr %arrayidx2, align 8, !tbaa !20
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %0
  br i1 %exitcond.not, label %for.cond3.preheader, label %for.body, !llvm.loop !283

for.cond6.preheader:                              ; preds = %for.cond6.preheader.preheader, %for.inc50
  %indvars.iv142 = phi i64 [ 0, %for.cond6.preheader.preheader ], [ %indvars.iv.next143, %for.inc50 ]
  %arrayidx8 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv142
  %5 = load ptr, ptr %arrayidx8, align 8, !tbaa !13
  %6 = load ptr, ptr %5, align 8, !tbaa !13
  %7 = load i32, ptr %6, align 4, !tbaa !10
  %cmp12120 = icmp sgt i32 %7, -1
  br i1 %cmp12120, label %for.body13.lr.ph, label %for.cond26.preheader

for.body13.lr.ph:                                 ; preds = %for.cond6.preheader
  %arrayidx15 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv142
  %8 = load ptr, ptr %arrayidx15, align 8, !tbaa !13
  %9 = load float, ptr %8, align 4, !tbaa !17
  %conv = fpext float %9 to double
  br label %for.body13

for.cond53.preheader:                             ; preds = %for.inc50, %for.cond3.preheader
  br i1 %cmp117, label %for.body56.preheader, label %for.end82

for.body56.preheader:                             ; preds = %for.cond53.preheader
  %wide.trip.count150 = zext i32 %nseq to i64
  %min.iters.check166 = icmp ult i32 %nseq, 4
  br i1 %min.iters.check166, label %for.body56.preheader189, label %vector.ph167

vector.ph167:                                     ; preds = %for.body56.preheader
  %n.vec169 = and i64 %0, 4294967292
  br label %vector.body172

vector.body172:                                   ; preds = %vector.body172, %vector.ph167
  %index173 = phi i64 [ 0, %vector.ph167 ], [ %index.next175, %vector.body172 ]
  %10 = getelementptr inbounds [50000 x double], ptr @counteff_simple_float.rootnode, i64 0, i64 %index173
  %wide.load = load <2 x double>, ptr %10, align 16, !tbaa !20
  %11 = getelementptr inbounds double, ptr %10, i64 2
  %wide.load174 = load <2 x double>, ptr %11, align 16, !tbaa !20
  %12 = fadd <2 x double> %wide.load, <double 1.000000e-03, double 1.000000e-03>
  %13 = fadd <2 x double> %wide.load174, <double 1.000000e-03, double 1.000000e-03>
  store <2 x double> %12, ptr %10, align 16, !tbaa !20
  store <2 x double> %13, ptr %11, align 16, !tbaa !20
  %index.next175 = add nuw i64 %index173, 4
  %14 = icmp eq i64 %index.next175, %n.vec169
  br i1 %14, label %middle.block164, label %vector.body172, !llvm.loop !284

middle.block164:                                  ; preds = %vector.body172
  %cmp.n171 = icmp eq i64 %n.vec169, %0
  br i1 %cmp.n171, label %for.cond62.preheader, label %for.body56.preheader189

for.body56.preheader189:                          ; preds = %for.body56.preheader, %middle.block164
  %indvars.iv147.ph = phi i64 [ 0, %for.body56.preheader ], [ %n.vec169, %middle.block164 ]
  br label %for.body56

for.cond26.preheader:                             ; preds = %for.body13, %for.cond6.preheader
  %arrayidx29 = getelementptr inbounds ptr, ptr %5, i64 1
  %15 = load ptr, ptr %arrayidx29, align 8, !tbaa !13
  %16 = load i32, ptr %15, align 4, !tbaa !10
  %cmp32124 = icmp sgt i32 %16, -1
  br i1 %cmp32124, label %for.body34.lr.ph, label %for.inc50

for.body34.lr.ph:                                 ; preds = %for.cond26.preheader
  %arrayidx36 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv142
  %17 = load ptr, ptr %arrayidx36, align 8, !tbaa !13
  %arrayidx37 = getelementptr inbounds float, ptr %17, i64 1
  %18 = load float, ptr %arrayidx37, align 4, !tbaa !17
  %conv38 = fpext float %18 to double
  br label %for.body34

for.body13:                                       ; preds = %for.body13.lr.ph, %for.body13
  %indvars.iv136 = phi i64 [ 0, %for.body13.lr.ph ], [ %indvars.iv.next137, %for.body13 ]
  %19 = phi i32 [ %7, %for.body13.lr.ph ], [ %23, %for.body13 ]
  %idxprom17 = zext i32 %19 to i64
  %arrayidx18 = getelementptr inbounds [50000 x double], ptr @counteff_simple_float.eff, i64 0, i64 %idxprom17
  %20 = load double, ptr %arrayidx18, align 8, !tbaa !20
  %arrayidx20 = getelementptr inbounds [50000 x double], ptr @counteff_simple_float.rootnode, i64 0, i64 %idxprom17
  %21 = load double, ptr %arrayidx20, align 8, !tbaa !20
  %22 = tail call double @llvm.fmuladd.f64(double %conv, double %20, double %21)
  store double %22, ptr %arrayidx20, align 8, !tbaa !20
  %mul = fmul double %20, 5.000000e-01
  store double %mul, ptr %arrayidx18, align 8, !tbaa !20
  %indvars.iv.next137 = add nuw nsw i64 %indvars.iv136, 1
  %arrayidx11 = getelementptr inbounds i32, ptr %6, i64 %indvars.iv.next137
  %23 = load i32, ptr %arrayidx11, align 4, !tbaa !10
  %cmp12 = icmp sgt i32 %23, -1
  br i1 %cmp12, label %for.body13, label %for.cond26.preheader, !llvm.loop !285

for.body34:                                       ; preds = %for.body34.lr.ph, %for.body34
  %indvars.iv139 = phi i64 [ 0, %for.body34.lr.ph ], [ %indvars.iv.next140, %for.body34 ]
  %24 = phi i32 [ %16, %for.body34.lr.ph ], [ %28, %for.body34 ]
  %idxprom39 = zext i32 %24 to i64
  %arrayidx40 = getelementptr inbounds [50000 x double], ptr @counteff_simple_float.eff, i64 0, i64 %idxprom39
  %25 = load double, ptr %arrayidx40, align 8, !tbaa !20
  %arrayidx43 = getelementptr inbounds [50000 x double], ptr @counteff_simple_float.rootnode, i64 0, i64 %idxprom39
  %26 = load double, ptr %arrayidx43, align 8, !tbaa !20
  %27 = tail call double @llvm.fmuladd.f64(double %conv38, double %25, double %26)
  store double %27, ptr %arrayidx43, align 8, !tbaa !20
  %mul46 = fmul double %25, 5.000000e-01
  store double %mul46, ptr %arrayidx40, align 8, !tbaa !20
  %indvars.iv.next140 = add nuw nsw i64 %indvars.iv139, 1
  %arrayidx31 = getelementptr inbounds i32, ptr %15, i64 %indvars.iv.next140
  %28 = load i32, ptr %arrayidx31, align 4, !tbaa !10
  %cmp32 = icmp sgt i32 %28, -1
  br i1 %cmp32, label %for.body34, label %for.inc50, !llvm.loop !286

for.inc50:                                        ; preds = %for.body34, %for.cond26.preheader
  %indvars.iv.next143 = add nuw nsw i64 %indvars.iv142, 1
  %exitcond146.not = icmp eq i64 %indvars.iv.next143, %wide.trip.count145
  br i1 %exitcond146.not, label %for.cond53.preheader, label %for.cond6.preheader, !llvm.loop !287

for.cond62.preheader:                             ; preds = %for.body56, %middle.block164
  br i1 %cmp117, label %for.body65.preheader, label %for.end82

for.body65.preheader:                             ; preds = %for.cond62.preheader
  %xtraiter = and i64 %0, 3
  %29 = icmp ult i32 %nseq, 4
  br i1 %29, label %for.cond72.preheader.unr-lcssa, label %for.body65.preheader.new

for.body65.preheader.new:                         ; preds = %for.body65.preheader
  %unroll_iter = and i64 %0, 4294967292
  br label %for.body65

for.body56:                                       ; preds = %for.body56.preheader189, %for.body56
  %indvars.iv147 = phi i64 [ %indvars.iv.next148, %for.body56 ], [ %indvars.iv147.ph, %for.body56.preheader189 ]
  %arrayidx58 = getelementptr inbounds [50000 x double], ptr @counteff_simple_float.rootnode, i64 0, i64 %indvars.iv147
  %30 = load double, ptr %arrayidx58, align 8, !tbaa !20
  %add = fadd double %30, 1.000000e-03
  store double %add, ptr %arrayidx58, align 8, !tbaa !20
  %indvars.iv.next148 = add nuw nsw i64 %indvars.iv147, 1
  %exitcond151.not = icmp eq i64 %indvars.iv.next148, %wide.trip.count150
  br i1 %exitcond151.not, label %for.cond62.preheader, label %for.body56, !llvm.loop !288

for.cond72.preheader.unr-lcssa:                   ; preds = %for.body65, %for.body65.preheader
  %add68.lcssa.ph = phi double [ undef, %for.body65.preheader ], [ %add68.3, %for.body65 ]
  %indvars.iv152.unr = phi i64 [ 0, %for.body65.preheader ], [ %indvars.iv.next153.3, %for.body65 ]
  %total.0132.unr = phi double [ 0.000000e+00, %for.body65.preheader ], [ %add68.3, %for.body65 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond72.preheader, label %for.body65.epil

for.body65.epil:                                  ; preds = %for.cond72.preheader.unr-lcssa, %for.body65.epil
  %indvars.iv152.epil = phi i64 [ %indvars.iv.next153.epil, %for.body65.epil ], [ %indvars.iv152.unr, %for.cond72.preheader.unr-lcssa ]
  %total.0132.epil = phi double [ %add68.epil, %for.body65.epil ], [ %total.0132.unr, %for.cond72.preheader.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body65.epil ], [ 0, %for.cond72.preheader.unr-lcssa ]
  %arrayidx67.epil = getelementptr inbounds [50000 x double], ptr @counteff_simple_float.rootnode, i64 0, i64 %indvars.iv152.epil
  %31 = load double, ptr %arrayidx67.epil, align 8, !tbaa !20
  %add68.epil = fadd double %total.0132.epil, %31
  %indvars.iv.next153.epil = add nuw nsw i64 %indvars.iv152.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond72.preheader, label %for.body65.epil, !llvm.loop !289

for.cond72.preheader:                             ; preds = %for.body65.epil, %for.cond72.preheader.unr-lcssa
  %add68.lcssa = phi double [ %add68.lcssa.ph, %for.cond72.preheader.unr-lcssa ], [ %add68.epil, %for.body65.epil ]
  br i1 %cmp117, label %for.body75.preheader, label %for.end82

for.body75.preheader:                             ; preds = %for.cond72.preheader
  %wide.trip.count160 = zext i32 %nseq to i64
  %min.iters.check178 = icmp eq i32 %nseq, 1
  br i1 %min.iters.check178, label %for.body75.preheader188, label %vector.ph179

vector.ph179:                                     ; preds = %for.body75.preheader
  %n.vec181 = and i64 %0, 4294967294
  %broadcast.splatinsert = insertelement <2 x double> poison, double %add68.lcssa, i64 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body184

vector.body184:                                   ; preds = %vector.body184, %vector.ph179
  %index185 = phi i64 [ 0, %vector.ph179 ], [ %index.next187, %vector.body184 ]
  %32 = getelementptr inbounds [50000 x double], ptr @counteff_simple_float.rootnode, i64 0, i64 %index185
  %wide.load186 = load <2 x double>, ptr %32, align 16, !tbaa !20
  %33 = fdiv <2 x double> %wide.load186, %broadcast.splat
  %34 = getelementptr inbounds double, ptr %node, i64 %index185
  store <2 x double> %33, ptr %34, align 8, !tbaa !20
  %index.next187 = add nuw i64 %index185, 2
  %35 = icmp eq i64 %index.next187, %n.vec181
  br i1 %35, label %middle.block176, label %vector.body184, !llvm.loop !290

middle.block176:                                  ; preds = %vector.body184
  %cmp.n183 = icmp eq i64 %n.vec181, %0
  br i1 %cmp.n183, label %for.end82, label %for.body75.preheader188

for.body75.preheader188:                          ; preds = %for.body75.preheader, %middle.block176
  %indvars.iv157.ph = phi i64 [ 0, %for.body75.preheader ], [ %n.vec181, %middle.block176 ]
  br label %for.body75

for.body65:                                       ; preds = %for.body65, %for.body65.preheader.new
  %indvars.iv152 = phi i64 [ 0, %for.body65.preheader.new ], [ %indvars.iv.next153.3, %for.body65 ]
  %total.0132 = phi double [ 0.000000e+00, %for.body65.preheader.new ], [ %add68.3, %for.body65 ]
  %niter = phi i64 [ 0, %for.body65.preheader.new ], [ %niter.next.3, %for.body65 ]
  %arrayidx67 = getelementptr inbounds [50000 x double], ptr @counteff_simple_float.rootnode, i64 0, i64 %indvars.iv152
  %36 = load double, ptr %arrayidx67, align 16, !tbaa !20
  %add68 = fadd double %total.0132, %36
  %indvars.iv.next153 = or i64 %indvars.iv152, 1
  %arrayidx67.1 = getelementptr inbounds [50000 x double], ptr @counteff_simple_float.rootnode, i64 0, i64 %indvars.iv.next153
  %37 = load double, ptr %arrayidx67.1, align 8, !tbaa !20
  %add68.1 = fadd double %add68, %37
  %indvars.iv.next153.1 = or i64 %indvars.iv152, 2
  %arrayidx67.2 = getelementptr inbounds [50000 x double], ptr @counteff_simple_float.rootnode, i64 0, i64 %indvars.iv.next153.1
  %38 = load double, ptr %arrayidx67.2, align 16, !tbaa !20
  %add68.2 = fadd double %add68.1, %38
  %indvars.iv.next153.2 = or i64 %indvars.iv152, 3
  %arrayidx67.3 = getelementptr inbounds [50000 x double], ptr @counteff_simple_float.rootnode, i64 0, i64 %indvars.iv.next153.2
  %39 = load double, ptr %arrayidx67.3, align 8, !tbaa !20
  %add68.3 = fadd double %add68.2, %39
  %indvars.iv.next153.3 = add nuw nsw i64 %indvars.iv152, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.cond72.preheader.unr-lcssa, label %for.body65, !llvm.loop !291

for.body75:                                       ; preds = %for.body75.preheader188, %for.body75
  %indvars.iv157 = phi i64 [ %indvars.iv.next158, %for.body75 ], [ %indvars.iv157.ph, %for.body75.preheader188 ]
  %arrayidx77 = getelementptr inbounds [50000 x double], ptr @counteff_simple_float.rootnode, i64 0, i64 %indvars.iv157
  %40 = load double, ptr %arrayidx77, align 8, !tbaa !20
  %div = fdiv double %40, %add68.lcssa
  %arrayidx79 = getelementptr inbounds double, ptr %node, i64 %indvars.iv157
  store double %div, ptr %arrayidx79, align 8, !tbaa !20
  %indvars.iv.next158 = add nuw nsw i64 %indvars.iv157, 1
  %exitcond161.not = icmp eq i64 %indvars.iv.next158, %wide.trip.count160
  br i1 %exitcond161.not, label %for.end82, label %for.body75, !llvm.loop !292

for.end82:                                        ; preds = %for.body75, %middle.block176, %entry, %for.cond53.preheader, %for.cond62.preheader, %for.cond72.preheader
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @counteff_simple(i32 noundef %nseq, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %len, ptr nocapture noundef writeonly %node) local_unnamed_addr #11 {
entry:
  %cmp112 = icmp sgt i32 %nseq, 0
  br i1 %cmp112, label %for.body.preheader, label %for.end77

for.body.preheader:                               ; preds = %entry
  %0 = zext i32 %nseq to i64
  %1 = shl nuw nsw i64 %0, 3
  tail call void @llvm.memset.p0.i64(ptr nonnull align 16 @counteff_simple.rootnode, i8 0, i64 %1, i1 false), !tbaa !20
  %min.iters.check = icmp ult i32 %nseq, 4
  br i1 %min.iters.check, label %for.body.preheader185, label %vector.ph

vector.ph:                                        ; preds = %for.body.preheader
  %n.vec = and i64 %0, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %2 = getelementptr inbounds [50000 x double], ptr @counteff_simple.eff, i64 0, i64 %index
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, ptr %2, align 16, !tbaa !20
  %3 = getelementptr inbounds double, ptr %2, i64 2
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, ptr %3, align 16, !tbaa !20
  %index.next = add nuw i64 %index, 4
  %4 = icmp eq i64 %index.next, %n.vec
  br i1 %4, label %middle.block, label %vector.body, !llvm.loop !293

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %0
  br i1 %cmp.n, label %for.cond3.preheader, label %for.body.preheader185

for.body.preheader185:                            ; preds = %for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ 0, %for.body.preheader ], [ %n.vec, %middle.block ]
  br label %for.body

for.cond3.preheader:                              ; preds = %for.body, %middle.block
  %cmp4121 = icmp sgt i32 %nseq, 1
  br i1 %cmp4121, label %for.cond6.preheader.preheader, label %for.cond51.preheader

for.cond6.preheader.preheader:                    ; preds = %for.cond3.preheader
  %sub = add nsw i32 %nseq, -1
  %wide.trip.count140 = zext i32 %sub to i64
  br label %for.cond6.preheader

for.body:                                         ; preds = %for.body.preheader185, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader185 ]
  %arrayidx2 = getelementptr inbounds [50000 x double], ptr @counteff_simple.eff, i64 0, i64 %indvars.iv
  store double 1.000000e+00, ptr %arrayidx2, align 8, !tbaa !20
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %0
  br i1 %exitcond.not, label %for.cond3.preheader, label %for.body, !llvm.loop !294

for.cond6.preheader:                              ; preds = %for.cond6.preheader.preheader, %for.inc48
  %indvars.iv137 = phi i64 [ 0, %for.cond6.preheader.preheader ], [ %indvars.iv.next138, %for.inc48 ]
  %arrayidx8 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv137
  %5 = load ptr, ptr %arrayidx8, align 8, !tbaa !13
  %6 = load ptr, ptr %5, align 8, !tbaa !13
  %7 = load i32, ptr %6, align 4, !tbaa !10
  %cmp12115 = icmp sgt i32 %7, -1
  br i1 %cmp12115, label %for.body13.lr.ph, label %for.cond26.preheader

for.body13.lr.ph:                                 ; preds = %for.cond6.preheader
  %arrayidx15 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv137
  %8 = load ptr, ptr %arrayidx15, align 8, !tbaa !13
  %9 = load double, ptr %8, align 8, !tbaa !20
  br label %for.body13

for.cond51.preheader:                             ; preds = %for.inc48, %for.cond3.preheader
  br i1 %cmp112, label %for.body53.preheader, label %for.end77

for.body53.preheader:                             ; preds = %for.cond51.preheader
  %wide.trip.count145 = zext i32 %nseq to i64
  %min.iters.check161 = icmp ult i32 %nseq, 4
  br i1 %min.iters.check161, label %for.body53.preheader184, label %vector.ph162

vector.ph162:                                     ; preds = %for.body53.preheader
  %n.vec164 = and i64 %0, 4294967292
  br label %vector.body167

vector.body167:                                   ; preds = %vector.body167, %vector.ph162
  %index168 = phi i64 [ 0, %vector.ph162 ], [ %index.next170, %vector.body167 ]
  %10 = getelementptr inbounds [50000 x double], ptr @counteff_simple.rootnode, i64 0, i64 %index168
  %wide.load = load <2 x double>, ptr %10, align 16, !tbaa !20
  %11 = getelementptr inbounds double, ptr %10, i64 2
  %wide.load169 = load <2 x double>, ptr %11, align 16, !tbaa !20
  %12 = fadd <2 x double> %wide.load, <double 1.000000e-03, double 1.000000e-03>
  %13 = fadd <2 x double> %wide.load169, <double 1.000000e-03, double 1.000000e-03>
  store <2 x double> %12, ptr %10, align 16, !tbaa !20
  store <2 x double> %13, ptr %11, align 16, !tbaa !20
  %index.next170 = add nuw i64 %index168, 4
  %14 = icmp eq i64 %index.next170, %n.vec164
  br i1 %14, label %middle.block159, label %vector.body167, !llvm.loop !295

middle.block159:                                  ; preds = %vector.body167
  %cmp.n166 = icmp eq i64 %n.vec164, %0
  br i1 %cmp.n166, label %for.cond59.preheader, label %for.body53.preheader184

for.body53.preheader184:                          ; preds = %for.body53.preheader, %middle.block159
  %indvars.iv142.ph = phi i64 [ 0, %for.body53.preheader ], [ %n.vec164, %middle.block159 ]
  br label %for.body53

for.cond26.preheader:                             ; preds = %for.body13, %for.cond6.preheader
  %arrayidx29 = getelementptr inbounds ptr, ptr %5, i64 1
  %15 = load ptr, ptr %arrayidx29, align 8, !tbaa !13
  %16 = load i32, ptr %15, align 4, !tbaa !10
  %cmp32119 = icmp sgt i32 %16, -1
  br i1 %cmp32119, label %for.body33.lr.ph, label %for.inc48

for.body33.lr.ph:                                 ; preds = %for.cond26.preheader
  %arrayidx35 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv137
  %17 = load ptr, ptr %arrayidx35, align 8, !tbaa !13
  %arrayidx36 = getelementptr inbounds double, ptr %17, i64 1
  %18 = load double, ptr %arrayidx36, align 8, !tbaa !20
  br label %for.body33

for.body13:                                       ; preds = %for.body13.lr.ph, %for.body13
  %indvars.iv131 = phi i64 [ 0, %for.body13.lr.ph ], [ %indvars.iv.next132, %for.body13 ]
  %19 = phi i32 [ %7, %for.body13.lr.ph ], [ %23, %for.body13 ]
  %idxprom17 = zext i32 %19 to i64
  %arrayidx18 = getelementptr inbounds [50000 x double], ptr @counteff_simple.eff, i64 0, i64 %idxprom17
  %20 = load double, ptr %arrayidx18, align 8, !tbaa !20
  %arrayidx20 = getelementptr inbounds [50000 x double], ptr @counteff_simple.rootnode, i64 0, i64 %idxprom17
  %21 = load double, ptr %arrayidx20, align 8, !tbaa !20
  %22 = tail call double @llvm.fmuladd.f64(double %9, double %20, double %21)
  store double %22, ptr %arrayidx20, align 8, !tbaa !20
  %mul = fmul double %20, 5.000000e-01
  store double %mul, ptr %arrayidx18, align 8, !tbaa !20
  %indvars.iv.next132 = add nuw nsw i64 %indvars.iv131, 1
  %arrayidx11 = getelementptr inbounds i32, ptr %6, i64 %indvars.iv.next132
  %23 = load i32, ptr %arrayidx11, align 4, !tbaa !10
  %cmp12 = icmp sgt i32 %23, -1
  br i1 %cmp12, label %for.body13, label %for.cond26.preheader, !llvm.loop !296

for.body33:                                       ; preds = %for.body33.lr.ph, %for.body33
  %indvars.iv134 = phi i64 [ 0, %for.body33.lr.ph ], [ %indvars.iv.next135, %for.body33 ]
  %24 = phi i32 [ %16, %for.body33.lr.ph ], [ %28, %for.body33 ]
  %idxprom37 = zext i32 %24 to i64
  %arrayidx38 = getelementptr inbounds [50000 x double], ptr @counteff_simple.eff, i64 0, i64 %idxprom37
  %25 = load double, ptr %arrayidx38, align 8, !tbaa !20
  %arrayidx41 = getelementptr inbounds [50000 x double], ptr @counteff_simple.rootnode, i64 0, i64 %idxprom37
  %26 = load double, ptr %arrayidx41, align 8, !tbaa !20
  %27 = tail call double @llvm.fmuladd.f64(double %18, double %25, double %26)
  store double %27, ptr %arrayidx41, align 8, !tbaa !20
  %mul44 = fmul double %25, 5.000000e-01
  store double %mul44, ptr %arrayidx38, align 8, !tbaa !20
  %indvars.iv.next135 = add nuw nsw i64 %indvars.iv134, 1
  %arrayidx31 = getelementptr inbounds i32, ptr %15, i64 %indvars.iv.next135
  %28 = load i32, ptr %arrayidx31, align 4, !tbaa !10
  %cmp32 = icmp sgt i32 %28, -1
  br i1 %cmp32, label %for.body33, label %for.inc48, !llvm.loop !297

for.inc48:                                        ; preds = %for.body33, %for.cond26.preheader
  %indvars.iv.next138 = add nuw nsw i64 %indvars.iv137, 1
  %exitcond141.not = icmp eq i64 %indvars.iv.next138, %wide.trip.count140
  br i1 %exitcond141.not, label %for.cond51.preheader, label %for.cond6.preheader, !llvm.loop !298

for.cond59.preheader:                             ; preds = %for.body53, %middle.block159
  br i1 %cmp112, label %for.body61.preheader, label %for.end77

for.body61.preheader:                             ; preds = %for.cond59.preheader
  %xtraiter = and i64 %0, 3
  %29 = icmp ult i32 %nseq, 4
  br i1 %29, label %for.cond68.preheader.unr-lcssa, label %for.body61.preheader.new

for.body61.preheader.new:                         ; preds = %for.body61.preheader
  %unroll_iter = and i64 %0, 4294967292
  br label %for.body61

for.body53:                                       ; preds = %for.body53.preheader184, %for.body53
  %indvars.iv142 = phi i64 [ %indvars.iv.next143, %for.body53 ], [ %indvars.iv142.ph, %for.body53.preheader184 ]
  %arrayidx55 = getelementptr inbounds [50000 x double], ptr @counteff_simple.rootnode, i64 0, i64 %indvars.iv142
  %30 = load double, ptr %arrayidx55, align 8, !tbaa !20
  %add = fadd double %30, 1.000000e-03
  store double %add, ptr %arrayidx55, align 8, !tbaa !20
  %indvars.iv.next143 = add nuw nsw i64 %indvars.iv142, 1
  %exitcond146.not = icmp eq i64 %indvars.iv.next143, %wide.trip.count145
  br i1 %exitcond146.not, label %for.cond59.preheader, label %for.body53, !llvm.loop !299

for.cond68.preheader.unr-lcssa:                   ; preds = %for.body61, %for.body61.preheader
  %add64.lcssa.ph = phi double [ undef, %for.body61.preheader ], [ %add64.3, %for.body61 ]
  %indvars.iv147.unr = phi i64 [ 0, %for.body61.preheader ], [ %indvars.iv.next148.3, %for.body61 ]
  %total.0127.unr = phi double [ 0.000000e+00, %for.body61.preheader ], [ %add64.3, %for.body61 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond68.preheader, label %for.body61.epil

for.body61.epil:                                  ; preds = %for.cond68.preheader.unr-lcssa, %for.body61.epil
  %indvars.iv147.epil = phi i64 [ %indvars.iv.next148.epil, %for.body61.epil ], [ %indvars.iv147.unr, %for.cond68.preheader.unr-lcssa ]
  %total.0127.epil = phi double [ %add64.epil, %for.body61.epil ], [ %total.0127.unr, %for.cond68.preheader.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body61.epil ], [ 0, %for.cond68.preheader.unr-lcssa ]
  %arrayidx63.epil = getelementptr inbounds [50000 x double], ptr @counteff_simple.rootnode, i64 0, i64 %indvars.iv147.epil
  %31 = load double, ptr %arrayidx63.epil, align 8, !tbaa !20
  %add64.epil = fadd double %total.0127.epil, %31
  %indvars.iv.next148.epil = add nuw nsw i64 %indvars.iv147.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond68.preheader, label %for.body61.epil, !llvm.loop !300

for.cond68.preheader:                             ; preds = %for.body61.epil, %for.cond68.preheader.unr-lcssa
  %add64.lcssa = phi double [ %add64.lcssa.ph, %for.cond68.preheader.unr-lcssa ], [ %add64.epil, %for.body61.epil ]
  br i1 %cmp112, label %for.body70.preheader, label %for.end77

for.body70.preheader:                             ; preds = %for.cond68.preheader
  %wide.trip.count155 = zext i32 %nseq to i64
  %min.iters.check173 = icmp eq i32 %nseq, 1
  br i1 %min.iters.check173, label %for.body70.preheader183, label %vector.ph174

vector.ph174:                                     ; preds = %for.body70.preheader
  %n.vec176 = and i64 %0, 4294967294
  %broadcast.splatinsert = insertelement <2 x double> poison, double %add64.lcssa, i64 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body179

vector.body179:                                   ; preds = %vector.body179, %vector.ph174
  %index180 = phi i64 [ 0, %vector.ph174 ], [ %index.next182, %vector.body179 ]
  %32 = getelementptr inbounds [50000 x double], ptr @counteff_simple.rootnode, i64 0, i64 %index180
  %wide.load181 = load <2 x double>, ptr %32, align 16, !tbaa !20
  %33 = fdiv <2 x double> %wide.load181, %broadcast.splat
  %34 = getelementptr inbounds double, ptr %node, i64 %index180
  store <2 x double> %33, ptr %34, align 8, !tbaa !20
  %index.next182 = add nuw i64 %index180, 2
  %35 = icmp eq i64 %index.next182, %n.vec176
  br i1 %35, label %middle.block171, label %vector.body179, !llvm.loop !301

middle.block171:                                  ; preds = %vector.body179
  %cmp.n178 = icmp eq i64 %n.vec176, %0
  br i1 %cmp.n178, label %for.end77, label %for.body70.preheader183

for.body70.preheader183:                          ; preds = %for.body70.preheader, %middle.block171
  %indvars.iv152.ph = phi i64 [ 0, %for.body70.preheader ], [ %n.vec176, %middle.block171 ]
  br label %for.body70

for.body61:                                       ; preds = %for.body61, %for.body61.preheader.new
  %indvars.iv147 = phi i64 [ 0, %for.body61.preheader.new ], [ %indvars.iv.next148.3, %for.body61 ]
  %total.0127 = phi double [ 0.000000e+00, %for.body61.preheader.new ], [ %add64.3, %for.body61 ]
  %niter = phi i64 [ 0, %for.body61.preheader.new ], [ %niter.next.3, %for.body61 ]
  %arrayidx63 = getelementptr inbounds [50000 x double], ptr @counteff_simple.rootnode, i64 0, i64 %indvars.iv147
  %36 = load double, ptr %arrayidx63, align 16, !tbaa !20
  %add64 = fadd double %total.0127, %36
  %indvars.iv.next148 = or i64 %indvars.iv147, 1
  %arrayidx63.1 = getelementptr inbounds [50000 x double], ptr @counteff_simple.rootnode, i64 0, i64 %indvars.iv.next148
  %37 = load double, ptr %arrayidx63.1, align 8, !tbaa !20
  %add64.1 = fadd double %add64, %37
  %indvars.iv.next148.1 = or i64 %indvars.iv147, 2
  %arrayidx63.2 = getelementptr inbounds [50000 x double], ptr @counteff_simple.rootnode, i64 0, i64 %indvars.iv.next148.1
  %38 = load double, ptr %arrayidx63.2, align 16, !tbaa !20
  %add64.2 = fadd double %add64.1, %38
  %indvars.iv.next148.2 = or i64 %indvars.iv147, 3
  %arrayidx63.3 = getelementptr inbounds [50000 x double], ptr @counteff_simple.rootnode, i64 0, i64 %indvars.iv.next148.2
  %39 = load double, ptr %arrayidx63.3, align 8, !tbaa !20
  %add64.3 = fadd double %add64.2, %39
  %indvars.iv.next148.3 = add nuw nsw i64 %indvars.iv147, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.cond68.preheader.unr-lcssa, label %for.body61, !llvm.loop !302

for.body70:                                       ; preds = %for.body70.preheader183, %for.body70
  %indvars.iv152 = phi i64 [ %indvars.iv.next153, %for.body70 ], [ %indvars.iv152.ph, %for.body70.preheader183 ]
  %arrayidx72 = getelementptr inbounds [50000 x double], ptr @counteff_simple.rootnode, i64 0, i64 %indvars.iv152
  %40 = load double, ptr %arrayidx72, align 8, !tbaa !20
  %div = fdiv double %40, %add64.lcssa
  %arrayidx74 = getelementptr inbounds double, ptr %node, i64 %indvars.iv152
  store double %div, ptr %arrayidx74, align 8, !tbaa !20
  %indvars.iv.next153 = add nuw nsw i64 %indvars.iv152, 1
  %exitcond156.not = icmp eq i64 %indvars.iv.next153, %wide.trip.count155
  br i1 %exitcond156.not, label %for.end77, label %for.body70, !llvm.loop !303

for.end77:                                        ; preds = %for.body70, %middle.block171, %entry, %for.cond51.preheader, %for.cond59.preheader, %for.cond68.preheader
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @counteff(i32 noundef %nseq, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %len, ptr nocapture noundef readonly %node) local_unnamed_addr #12 {
entry:
  %rootnode = alloca [50000 x double], align 16
  %eff = alloca [50000 x double], align 16
  call void @llvm.lifetime.start.p0(i64 400000, ptr nonnull %rootnode) #34
  call void @llvm.lifetime.start.p0(i64 400000, ptr nonnull %eff) #34
  %0 = load i32, ptr @mix, align 4, !tbaa !10
  %tobool.not = icmp eq i32 %0, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %1 = load i32, ptr @weight, align 4, !tbaa !10
  switch i32 %1, label %sw.default [
    i32 2, label %if.end198.thread594
    i32 3, label %if.end.thread588
  ]

if.end198.thread594:                              ; preds = %if.then
  store i32 3, ptr @weight, align 4, !tbaa !10
  br label %for.cond202.preheader

if.end.thread588:                                 ; preds = %if.then
  store i32 2, ptr @weight, align 4, !tbaa !10
  br label %for.cond.preheader

sw.default:                                       ; preds = %if.then
  tail call void @ErrorExit(ptr noundef nonnull @.str.28) #34
  br label %if.end

if.end:                                           ; preds = %sw.default, %entry
  %.pr = load i32, ptr @weight, align 4, !tbaa !10
  switch i32 %.pr, label %if.end308 [
    i32 2, label %for.cond.preheader
    i32 3, label %for.cond202.preheader
  ]

for.cond.preheader:                               ; preds = %if.end, %if.end.thread588
  %cmp3455 = icmp sgt i32 %nseq, 0
  br i1 %cmp3455, label %for.cond4.preheader, label %for.cond4.preheader.thread

for.cond4.preheader.thread:                       ; preds = %for.cond.preheader
  %sub590 = add i32 %nseq, -2
  br label %for.cond95.preheader

for.cond4.preheader:                              ; preds = %for.cond.preheader
  %2 = zext i32 %nseq to i64
  %3 = shl nuw nsw i64 %2, 3
  call void @llvm.memset.p0.i64(ptr nonnull align 16 %rootnode, i8 0, i64 %3, i1 false), !tbaa !20
  %sub = add nsw i32 %nseq, -2
  %cmp5471 = icmp ugt i32 %nseq, 2
  br i1 %cmp5471, label %for.cond7.preheader.preheader, label %for.cond95.preheader

for.cond7.preheader.preheader:                    ; preds = %for.cond4.preheader
  %wide.trip.count = zext i32 %sub to i64
  br label %for.cond7.preheader

for.cond7.preheader:                              ; preds = %for.cond7.preheader.preheader, %for.inc92
  %indvars.iv521 = phi i64 [ 0, %for.cond7.preheader.preheader ], [ %indvars.iv.next522, %for.inc92 ]
  %arrayidx9 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv521
  %4 = load ptr, ptr %arrayidx9, align 8, !tbaa !13
  %5 = load ptr, ptr %4, align 8, !tbaa !13
  %6 = load i32, ptr %5, align 4, !tbaa !10
  %cmp13458 = icmp sgt i32 %6, -1
  br i1 %cmp13458, label %for.body14, label %for.cond26.preheader.thread

for.cond95.preheader:                             ; preds = %for.inc92, %for.cond4.preheader.thread, %for.cond4.preheader
  %sub592 = phi i32 [ %sub590, %for.cond4.preheader.thread ], [ %sub, %for.cond4.preheader ], [ %sub, %for.inc92 ]
  %idxprom97 = sext i32 %sub592 to i64
  %arrayidx98 = getelementptr inbounds ptr, ptr %topol, i64 %idxprom97
  %7 = load ptr, ptr %arrayidx98, align 8, !tbaa !13
  %8 = load ptr, ptr %7, align 8, !tbaa !13
  %9 = load i32, ptr %8, align 4, !tbaa !10
  %cmp102476 = icmp sgt i32 %9, -1
  br i1 %cmp102476, label %for.cond110.preheader.lr.ph, label %for.cond150.preheader

for.cond110.preheader.lr.ph:                      ; preds = %for.cond95.preheader
  %arrayidx114 = getelementptr inbounds ptr, ptr %7, i64 1
  %10 = load ptr, ptr %arrayidx114, align 8, !tbaa !13
  %11 = load i32, ptr %10, align 4, !tbaa !10
  %cmp117474 = icmp sgt i32 %11, -1
  br i1 %cmp117474, label %for.cond110.preheader.us, label %for.cond150.preheader

for.cond110.preheader.us:                         ; preds = %for.cond110.preheader.lr.ph, %for.cond110.for.inc147_crit_edge.us
  %indvars.iv530 = phi i64 [ %indvars.iv.next531, %for.cond110.for.inc147_crit_edge.us ], [ 0, %for.cond110.preheader.lr.ph ]
  %12 = phi i32 [ %18, %for.cond110.for.inc147_crit_edge.us ], [ %9, %for.cond110.preheader.lr.ph ]
  %idxprom125.us = zext i32 %12 to i64
  %arrayidx126.us = getelementptr inbounds [50000 x double], ptr %rootnode, i64 0, i64 %idxprom125.us
  %13 = load double, ptr %arrayidx126.us, align 8, !tbaa !20
  br label %for.body118.us

for.body118.us:                                   ; preds = %for.cond110.preheader.us, %for.body118.us
  %indvars.iv527 = phi i64 [ 0, %for.cond110.preheader.us ], [ %indvars.iv.next528, %for.body118.us ]
  %14 = phi i32 [ %11, %for.cond110.preheader.us ], [ %17, %for.body118.us ]
  %idxprom127.us = zext i32 %14 to i64
  %arrayidx128.us = getelementptr inbounds [50000 x double], ptr %rootnode, i64 0, i64 %idxprom127.us
  %15 = load double, ptr %arrayidx128.us, align 8, !tbaa !20
  %add129.us = fadd double %13, %15
  %cond134.us = tail call i32 @llvm.smin.i32(i32 %12, i32 %14)
  %idxprom135.us = zext i32 %cond134.us to i64
  %arrayidx136.us = getelementptr inbounds ptr, ptr %node, i64 %idxprom135.us
  %16 = load ptr, ptr %arrayidx136.us, align 8, !tbaa !13
  %cond141.us = tail call i32 @llvm.smax.i32(i32 %12, i32 %14)
  %idxprom142.us = zext i32 %cond141.us to i64
  %arrayidx143.us = getelementptr inbounds double, ptr %16, i64 %idxprom142.us
  store double %add129.us, ptr %arrayidx143.us, align 8, !tbaa !20
  %indvars.iv.next528 = add nuw nsw i64 %indvars.iv527, 1
  %arrayidx116.us = getelementptr inbounds i32, ptr %10, i64 %indvars.iv.next528
  %17 = load i32, ptr %arrayidx116.us, align 4, !tbaa !10
  %cmp117.us = icmp sgt i32 %17, -1
  br i1 %cmp117.us, label %for.body118.us, label %for.cond110.for.inc147_crit_edge.us, !llvm.loop !304

for.cond110.for.inc147_crit_edge.us:              ; preds = %for.body118.us
  %indvars.iv.next531 = add nuw nsw i64 %indvars.iv530, 1
  %arrayidx101.us = getelementptr inbounds i32, ptr %8, i64 %indvars.iv.next531
  %18 = load i32, ptr %arrayidx101.us, align 4, !tbaa !10
  %cmp102.us = icmp sgt i32 %18, -1
  br i1 %cmp102.us, label %for.cond110.preheader.us, label %for.cond150.preheader, !llvm.loop !305

for.cond26.preheader:                             ; preds = %for.body14
  %arrayidx29 = getelementptr inbounds ptr, ptr %4, i64 1
  %19 = load ptr, ptr %arrayidx29, align 8, !tbaa !13
  %20 = load i32, ptr %19, align 4, !tbaa !10
  %cmp32462 = icmp sgt i32 %20, -1
  br i1 %cmp32462, label %for.body33.preheader, label %for.inc92

for.cond26.preheader.thread:                      ; preds = %for.cond7.preheader
  %arrayidx29597 = getelementptr inbounds ptr, ptr %4, i64 1
  %21 = load ptr, ptr %arrayidx29597, align 8, !tbaa !13
  %22 = load i32, ptr %21, align 4, !tbaa !10
  %cmp32462598 = icmp sgt i32 %22, -1
  br i1 %cmp32462598, label %for.body33.preheader, label %for.inc92

for.body33.preheader:                             ; preds = %for.cond26.preheader.thread, %for.cond26.preheader
  %23 = phi i32 [ %22, %for.cond26.preheader.thread ], [ %20, %for.cond26.preheader ]
  %24 = phi ptr [ %21, %for.cond26.preheader.thread ], [ %19, %for.cond26.preheader ]
  br label %for.body33

for.body14:                                       ; preds = %for.cond7.preheader, %for.body14
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body14 ], [ 0, %for.cond7.preheader ]
  %25 = phi i32 [ %27, %for.body14 ], [ %6, %for.cond7.preheader ]
  %idxprom20 = zext i32 %25 to i64
  %arrayidx21 = getelementptr inbounds [50000 x double], ptr %rootnode, i64 0, i64 %idxprom20
  %26 = load double, ptr %arrayidx21, align 8, !tbaa !20
  %inc22 = fadd double %26, 1.000000e+00
  store double %inc22, ptr %arrayidx21, align 8, !tbaa !20
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx12 = getelementptr inbounds i32, ptr %5, i64 %indvars.iv.next
  %27 = load i32, ptr %arrayidx12, align 4, !tbaa !10
  %cmp13 = icmp sgt i32 %27, -1
  br i1 %cmp13, label %for.body14, label %for.cond26.preheader, !llvm.loop !306

for.cond45.preheader:                             ; preds = %for.body33
  br i1 %cmp13458, label %for.cond58.preheader.us, label %for.inc92

for.cond58.preheader.us:                          ; preds = %for.cond45.preheader, %for.cond58.for.inc89_crit_edge.us
  %indvars.iv518 = phi i64 [ %indvars.iv.next519, %for.cond58.for.inc89_crit_edge.us ], [ 0, %for.cond45.preheader ]
  %28 = phi i32 [ %34, %for.cond58.for.inc89_crit_edge.us ], [ %6, %for.cond45.preheader ]
  %idxprom71.us = zext i32 %28 to i64
  %arrayidx72.us = getelementptr inbounds [50000 x double], ptr %rootnode, i64 0, i64 %idxprom71.us
  %29 = load double, ptr %arrayidx72.us, align 8, !tbaa !20
  br label %for.body65.us

for.body65.us:                                    ; preds = %for.cond58.preheader.us, %for.body65.us
  %indvars.iv515 = phi i64 [ 0, %for.cond58.preheader.us ], [ %indvars.iv.next516, %for.body65.us ]
  %30 = phi i32 [ %23, %for.cond58.preheader.us ], [ %33, %for.body65.us ]
  %idxprom73.us = zext i32 %30 to i64
  %arrayidx74.us = getelementptr inbounds [50000 x double], ptr %rootnode, i64 0, i64 %idxprom73.us
  %31 = load double, ptr %arrayidx74.us, align 8, !tbaa !20
  %add.us = fadd double %29, %31
  %sub75.us = fadd double %add.us, -1.000000e+00
  %cond.us = tail call i32 @llvm.smin.i32(i32 %28, i32 %30)
  %idxprom77.us = zext i32 %cond.us to i64
  %arrayidx78.us = getelementptr inbounds ptr, ptr %node, i64 %idxprom77.us
  %32 = load ptr, ptr %arrayidx78.us, align 8, !tbaa !13
  %cond83.us = tail call i32 @llvm.smax.i32(i32 %28, i32 %30)
  %idxprom84.us = zext i32 %cond83.us to i64
  %arrayidx85.us = getelementptr inbounds double, ptr %32, i64 %idxprom84.us
  store double %sub75.us, ptr %arrayidx85.us, align 8, !tbaa !20
  %indvars.iv.next516 = add nuw nsw i64 %indvars.iv515, 1
  %arrayidx63.us = getelementptr inbounds i32, ptr %24, i64 %indvars.iv.next516
  %33 = load i32, ptr %arrayidx63.us, align 4, !tbaa !10
  %cmp64.us = icmp sgt i32 %33, -1
  br i1 %cmp64.us, label %for.body65.us, label %for.cond58.for.inc89_crit_edge.us, !llvm.loop !307

for.cond58.for.inc89_crit_edge.us:                ; preds = %for.body65.us
  %indvars.iv.next519 = add nuw nsw i64 %indvars.iv518, 1
  %arrayidx50.us = getelementptr inbounds i32, ptr %5, i64 %indvars.iv.next519
  %34 = load i32, ptr %arrayidx50.us, align 4, !tbaa !10
  %cmp51.us = icmp sgt i32 %34, -1
  br i1 %cmp51.us, label %for.cond58.preheader.us, label %for.inc92, !llvm.loop !308

for.body33:                                       ; preds = %for.body33.preheader, %for.body33
  %indvars.iv509 = phi i64 [ 0, %for.body33.preheader ], [ %indvars.iv.next510, %for.body33 ]
  %35 = phi i32 [ %23, %for.body33.preheader ], [ %37, %for.body33 ]
  %idxprom39 = zext i32 %35 to i64
  %arrayidx40 = getelementptr inbounds [50000 x double], ptr %rootnode, i64 0, i64 %idxprom39
  %36 = load double, ptr %arrayidx40, align 8, !tbaa !20
  %inc41 = fadd double %36, 1.000000e+00
  store double %inc41, ptr %arrayidx40, align 8, !tbaa !20
  %indvars.iv.next510 = add nuw nsw i64 %indvars.iv509, 1
  %arrayidx31 = getelementptr inbounds i32, ptr %24, i64 %indvars.iv.next510
  %37 = load i32, ptr %arrayidx31, align 4, !tbaa !10
  %cmp32 = icmp sgt i32 %37, -1
  br i1 %cmp32, label %for.body33, label %for.cond45.preheader, !llvm.loop !309

for.inc92:                                        ; preds = %for.cond58.for.inc89_crit_edge.us, %for.cond26.preheader, %for.cond26.preheader.thread, %for.cond45.preheader
  %indvars.iv.next522 = add nuw nsw i64 %indvars.iv521, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next522, %wide.trip.count
  br i1 %exitcond.not, label %for.cond95.preheader, label %for.cond7.preheader, !llvm.loop !310

for.cond150.preheader:                            ; preds = %for.cond110.for.inc147_crit_edge.us, %for.cond110.preheader.lr.ph, %for.cond95.preheader
  %sub151 = add i32 %nseq, -1
  %cmp152480 = icmp sgt i32 %nseq, 1
  br i1 %cmp152480, label %for.body153.lr.ph, label %if.end308

for.body153.lr.ph:                                ; preds = %for.cond150.preheader
  %38 = load float, ptr @geta2, align 4
  %conv162 = fpext float %38 to double
  %39 = zext i32 %nseq to i64
  %wide.trip.count543 = zext i32 %sub151 to i64
  %wide.trip.count538 = zext i32 %nseq to i64
  br label %for.body153

for.cond150.loopexit:                             ; preds = %ipower.exit, %for.body153
  %indvars.iv.next534 = add nuw nsw i64 %indvars.iv533, 1
  %exitcond544.not = icmp eq i64 %indvars.iv.next541, %wide.trip.count543
  br i1 %exitcond544.not, label %for.cond174.preheader, label %for.body153, !llvm.loop !311

for.cond174.preheader:                            ; preds = %for.cond150.loopexit
  br i1 %cmp152480, label %for.body178.preheader, label %if.end308

for.body178.preheader:                            ; preds = %for.cond174.preheader
  %40 = zext i32 %nseq to i64
  %wide.trip.count555 = zext i32 %sub151 to i64
  %wide.trip.count550 = zext i32 %nseq to i64
  br label %for.body178

for.body153:                                      ; preds = %for.body153.lr.ph, %for.cond150.loopexit
  %indvars.iv540 = phi i64 [ 0, %for.body153.lr.ph ], [ %indvars.iv.next541, %for.cond150.loopexit ]
  %indvars.iv533 = phi i64 [ 1, %for.body153.lr.ph ], [ %indvars.iv.next534, %for.cond150.loopexit ]
  %indvars.iv.next541 = add nuw nsw i64 %indvars.iv540, 1
  %cmp156478 = icmp ult i64 %indvars.iv.next541, %39
  br i1 %cmp156478, label %for.body157.lr.ph, label %for.cond150.loopexit

for.body157.lr.ph:                                ; preds = %for.body153
  %arrayidx159 = getelementptr inbounds ptr, ptr %node, i64 %indvars.iv540
  %41 = load ptr, ptr %arrayidx159, align 8, !tbaa !13
  br label %for.body157

for.body157:                                      ; preds = %for.body157.lr.ph, %ipower.exit
  %indvars.iv535 = phi i64 [ %indvars.iv533, %for.body157.lr.ph ], [ %indvars.iv.next536, %ipower.exit ]
  %arrayidx161 = getelementptr inbounds double, ptr %41, i64 %indvars.iv535
  %42 = load double, ptr %arrayidx161, align 8, !tbaa !20
  %conv = fptosi double %42 to i32
  %cmp.not7.i = icmp eq i32 %conv, 0
  br i1 %cmp.not7.i, label %ipower.exit, label %while.body.i

while.body.i:                                     ; preds = %for.body157, %while.body.i
  %r.010.i = phi double [ %r.1.i, %while.body.i ], [ 1.000000e+00, %for.body157 ]
  %n.addr.09.i = phi i32 [ %shr.i, %while.body.i ], [ %conv, %for.body157 ]
  %x.addr.08.i = phi double [ %mul1.i, %while.body.i ], [ 5.000000e-01, %for.body157 ]
  %and.i = and i32 %n.addr.09.i, 1
  %tobool.not.i = icmp eq i32 %and.i, 0
  %mul.i = select i1 %tobool.not.i, double 1.000000e+00, double %x.addr.08.i
  %r.1.i = fmul double %r.010.i, %mul.i
  %mul1.i = fmul double %x.addr.08.i, %x.addr.08.i
  %shr.i = ashr i32 %n.addr.09.i, 1
  %cmp.not.i = icmp ult i32 %n.addr.09.i, 2
  br i1 %cmp.not.i, label %ipower.exit, label %while.body.i, !llvm.loop !264

ipower.exit:                                      ; preds = %while.body.i, %for.body157
  %r.0.lcssa.i = phi double [ 1.000000e+00, %for.body157 ], [ %r.1.i, %while.body.i ]
  %add163 = fadd double %r.0.lcssa.i, %conv162
  store double %add163, ptr %arrayidx161, align 8, !tbaa !20
  %indvars.iv.next536 = add nuw nsw i64 %indvars.iv535, 1
  %exitcond539.not = icmp eq i64 %indvars.iv.next536, %wide.trip.count538
  br i1 %exitcond539.not, label %for.cond150.loopexit, label %for.body157, !llvm.loop !312

for.cond174.loopexit:                             ; preds = %for.body183, %for.body178
  %indvars.iv.next546 = add nuw nsw i64 %indvars.iv545, 1
  %exitcond556.not = icmp eq i64 %indvars.iv.next553, %wide.trip.count555
  br i1 %exitcond556.not, label %if.end308, label %for.body178, !llvm.loop !313

for.body178:                                      ; preds = %for.body178.preheader, %for.cond174.loopexit
  %indvars.iv552 = phi i64 [ 0, %for.body178.preheader ], [ %indvars.iv.next553, %for.cond174.loopexit ]
  %indvars.iv545 = phi i64 [ 1, %for.body178.preheader ], [ %indvars.iv.next546, %for.cond174.loopexit ]
  %indvars.iv.next553 = add nuw nsw i64 %indvars.iv552, 1
  %cmp181483 = icmp ult i64 %indvars.iv.next553, %40
  br i1 %cmp181483, label %for.body183.lr.ph, label %for.cond174.loopexit

for.body183.lr.ph:                                ; preds = %for.body178
  %arrayidx185 = getelementptr inbounds ptr, ptr %node, i64 %indvars.iv552
  %43 = load ptr, ptr %arrayidx185, align 8, !tbaa !13
  br label %for.body183

for.body183:                                      ; preds = %for.body183.lr.ph, %for.body183
  %indvars.iv547 = phi i64 [ %indvars.iv545, %for.body183.lr.ph ], [ %indvars.iv.next548, %for.body183 ]
  %arrayidx187 = getelementptr inbounds double, ptr %43, i64 %indvars.iv547
  %44 = load double, ptr %arrayidx187, align 8, !tbaa !20
  %arrayidx189 = getelementptr inbounds ptr, ptr %node, i64 %indvars.iv547
  %45 = load ptr, ptr %arrayidx189, align 8, !tbaa !13
  %arrayidx191 = getelementptr inbounds double, ptr %45, i64 %indvars.iv552
  store double %44, ptr %arrayidx191, align 8, !tbaa !20
  %indvars.iv.next548 = add nuw nsw i64 %indvars.iv547, 1
  %exitcond551.not = icmp eq i64 %indvars.iv.next548, %wide.trip.count550
  br i1 %exitcond551.not, label %for.cond174.loopexit, label %for.body183, !llvm.loop !314

for.cond202.preheader:                            ; preds = %if.end, %if.end198.thread594
  %cmp203487 = icmp sgt i32 %nseq, 0
  br i1 %cmp203487, label %for.body205.preheader, label %if.end308

for.body205.preheader:                            ; preds = %for.cond202.preheader
  %46 = zext i32 %nseq to i64
  %47 = shl nuw nsw i64 %46, 3
  call void @llvm.memset.p0.i64(ptr nonnull align 16 %rootnode, i8 0, i64 %47, i1 false), !tbaa !20
  %min.iters.check = icmp ult i32 %nseq, 4
  br i1 %min.iters.check, label %for.body205.preheader617, label %vector.ph

vector.ph:                                        ; preds = %for.body205.preheader
  %n.vec = and i64 %46, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %48 = getelementptr inbounds [50000 x double], ptr %eff, i64 0, i64 %index
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, ptr %48, align 16, !tbaa !20
  %49 = getelementptr inbounds double, ptr %48, i64 2
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, ptr %49, align 16, !tbaa !20
  %index.next = add nuw i64 %index, 4
  %50 = icmp eq i64 %index.next, %n.vec
  br i1 %50, label %middle.block, label %vector.body, !llvm.loop !315

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %46
  br i1 %cmp.n, label %for.cond213.preheader, label %for.body205.preheader617

for.body205.preheader617:                         ; preds = %for.body205.preheader, %middle.block
  %indvars.iv557.ph = phi i64 [ 0, %for.body205.preheader ], [ %n.vec, %middle.block ]
  br label %for.body205

for.cond213.preheader:                            ; preds = %for.body205, %middle.block
  %cmp215497 = icmp sgt i32 %nseq, 1
  br i1 %cmp215497, label %for.cond218.preheader.preheader, label %for.cond265.preheader

for.cond218.preheader.preheader:                  ; preds = %for.cond213.preheader
  %sub214 = add nsw i32 %nseq, -1
  %wide.trip.count571 = zext i32 %sub214 to i64
  br label %for.cond218.preheader

for.body205:                                      ; preds = %for.body205.preheader617, %for.body205
  %indvars.iv557 = phi i64 [ %indvars.iv.next558, %for.body205 ], [ %indvars.iv557.ph, %for.body205.preheader617 ]
  %arrayidx209 = getelementptr inbounds [50000 x double], ptr %eff, i64 0, i64 %indvars.iv557
  store double 1.000000e+00, ptr %arrayidx209, align 8, !tbaa !20
  %indvars.iv.next558 = add nuw nsw i64 %indvars.iv557, 1
  %exitcond561.not = icmp eq i64 %indvars.iv.next558, %46
  br i1 %exitcond561.not, label %for.cond213.preheader, label %for.body205, !llvm.loop !316

for.cond218.preheader:                            ; preds = %for.cond218.preheader.preheader, %for.inc262
  %indvars.iv568 = phi i64 [ 0, %for.cond218.preheader.preheader ], [ %indvars.iv.next569, %for.inc262 ]
  %arrayidx220 = getelementptr inbounds ptr, ptr %topol, i64 %indvars.iv568
  %51 = load ptr, ptr %arrayidx220, align 8, !tbaa !13
  %52 = load ptr, ptr %51, align 8, !tbaa !13
  %53 = load i32, ptr %52, align 4, !tbaa !10
  %cmp224490 = icmp sgt i32 %53, -1
  br i1 %cmp224490, label %for.body226.lr.ph, label %for.cond239.preheader

for.body226.lr.ph:                                ; preds = %for.cond218.preheader
  %arrayidx228 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv568
  %54 = load ptr, ptr %arrayidx228, align 8, !tbaa !13
  %55 = load double, ptr %54, align 8, !tbaa !20
  br label %for.body226

for.cond265.preheader:                            ; preds = %for.inc262, %for.cond213.preheader
  br i1 %cmp203487, label %for.body268.preheader, label %if.end308

for.body268.preheader:                            ; preds = %for.cond265.preheader
  %wide.trip.count576 = zext i32 %nseq to i64
  %min.iters.check605 = icmp ult i32 %nseq, 4
  br i1 %min.iters.check605, label %for.body268.preheader616, label %vector.ph606

vector.ph606:                                     ; preds = %for.body268.preheader
  %n.vec608 = and i64 %46, 4294967292
  br label %vector.body611

vector.body611:                                   ; preds = %vector.body611, %vector.ph606
  %index612 = phi i64 [ 0, %vector.ph606 ], [ %index.next614, %vector.body611 ]
  %56 = getelementptr inbounds [50000 x double], ptr %rootnode, i64 0, i64 %index612
  %wide.load = load <2 x double>, ptr %56, align 16, !tbaa !20
  %57 = getelementptr inbounds double, ptr %56, i64 2
  %wide.load613 = load <2 x double>, ptr %57, align 16, !tbaa !20
  %58 = fadd <2 x double> %wide.load, <double 1.000000e-03, double 1.000000e-03>
  %59 = fadd <2 x double> %wide.load613, <double 1.000000e-03, double 1.000000e-03>
  store <2 x double> %58, ptr %56, align 16, !tbaa !20
  store <2 x double> %59, ptr %57, align 16, !tbaa !20
  %index.next614 = add nuw i64 %index612, 4
  %60 = icmp eq i64 %index.next614, %n.vec608
  br i1 %60, label %middle.block603, label %vector.body611, !llvm.loop !317

middle.block603:                                  ; preds = %vector.body611
  %cmp.n610 = icmp eq i64 %n.vec608, %46
  br i1 %cmp.n610, label %for.cond275.preheader, label %for.body268.preheader616

for.body268.preheader616:                         ; preds = %for.body268.preheader, %middle.block603
  %indvars.iv573.ph = phi i64 [ 0, %for.body268.preheader ], [ %n.vec608, %middle.block603 ]
  br label %for.body268

for.cond239.preheader:                            ; preds = %for.body226, %for.cond218.preheader
  %arrayidx242 = getelementptr inbounds ptr, ptr %51, i64 1
  %61 = load ptr, ptr %arrayidx242, align 8, !tbaa !13
  %62 = load i32, ptr %61, align 4, !tbaa !10
  %cmp245495 = icmp sgt i32 %62, -1
  br i1 %cmp245495, label %for.body247.lr.ph, label %for.inc262

for.body247.lr.ph:                                ; preds = %for.cond239.preheader
  %arrayidx249 = getelementptr inbounds ptr, ptr %len, i64 %indvars.iv568
  %63 = load ptr, ptr %arrayidx249, align 8, !tbaa !13
  %arrayidx250 = getelementptr inbounds double, ptr %63, i64 1
  %64 = load double, ptr %arrayidx250, align 8, !tbaa !20
  br label %for.body247

for.body226:                                      ; preds = %for.body226.lr.ph, %for.body226
  %indvars.iv562 = phi i64 [ 0, %for.body226.lr.ph ], [ %indvars.iv.next563, %for.body226 ]
  %65 = phi i32 [ %53, %for.body226.lr.ph ], [ %69, %for.body226 ]
  %idxprom230 = zext i32 %65 to i64
  %arrayidx231 = getelementptr inbounds [50000 x double], ptr %eff, i64 0, i64 %idxprom230
  %66 = load double, ptr %arrayidx231, align 8, !tbaa !20
  %arrayidx233 = getelementptr inbounds [50000 x double], ptr %rootnode, i64 0, i64 %idxprom230
  %67 = load double, ptr %arrayidx233, align 8, !tbaa !20
  %68 = tail call double @llvm.fmuladd.f64(double %55, double %66, double %67)
  store double %68, ptr %arrayidx233, align 8, !tbaa !20
  %mul = fmul double %66, 5.000000e-01
  store double %mul, ptr %arrayidx231, align 8, !tbaa !20
  %indvars.iv.next563 = add nuw nsw i64 %indvars.iv562, 1
  %arrayidx223 = getelementptr inbounds i32, ptr %52, i64 %indvars.iv.next563
  %69 = load i32, ptr %arrayidx223, align 4, !tbaa !10
  %cmp224 = icmp sgt i32 %69, -1
  br i1 %cmp224, label %for.body226, label %for.cond239.preheader, !llvm.loop !318

for.body247:                                      ; preds = %for.body247.lr.ph, %for.body247
  %indvars.iv565 = phi i64 [ 0, %for.body247.lr.ph ], [ %indvars.iv.next566, %for.body247 ]
  %70 = phi i32 [ %62, %for.body247.lr.ph ], [ %74, %for.body247 ]
  %idxprom251 = zext i32 %70 to i64
  %arrayidx252 = getelementptr inbounds [50000 x double], ptr %eff, i64 0, i64 %idxprom251
  %71 = load double, ptr %arrayidx252, align 8, !tbaa !20
  %arrayidx255 = getelementptr inbounds [50000 x double], ptr %rootnode, i64 0, i64 %idxprom251
  %72 = load double, ptr %arrayidx255, align 8, !tbaa !20
  %73 = tail call double @llvm.fmuladd.f64(double %64, double %71, double %72)
  store double %73, ptr %arrayidx255, align 8, !tbaa !20
  %mul258 = fmul double %71, 5.000000e-01
  store double %mul258, ptr %arrayidx252, align 8, !tbaa !20
  %indvars.iv.next566 = add nuw nsw i64 %indvars.iv565, 1
  %arrayidx244 = getelementptr inbounds i32, ptr %61, i64 %indvars.iv.next566
  %74 = load i32, ptr %arrayidx244, align 4, !tbaa !10
  %cmp245 = icmp sgt i32 %74, -1
  br i1 %cmp245, label %for.body247, label %for.inc262, !llvm.loop !319

for.inc262:                                       ; preds = %for.body247, %for.cond239.preheader
  %indvars.iv.next569 = add nuw nsw i64 %indvars.iv568, 1
  %exitcond572.not = icmp eq i64 %indvars.iv.next569, %wide.trip.count571
  br i1 %exitcond572.not, label %for.cond265.preheader, label %for.cond218.preheader, !llvm.loop !320

for.cond275.preheader:                            ; preds = %for.body268, %middle.block603
  br i1 %cmp203487, label %for.cond279.preheader.us.preheader, label %if.end308

for.cond279.preheader.us.preheader:               ; preds = %for.cond275.preheader
  %wide.trip.count586 = zext i32 %nseq to i64
  %xtraiter = and i64 %46, 1
  %75 = icmp eq i32 %nseq, 1
  %unroll_iter = and i64 %46, 4294967294
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.cond279.preheader.us

for.cond279.preheader.us:                         ; preds = %for.cond279.preheader.us.preheader, %for.cond279.for.inc305_crit_edge.us
  %indvars.iv583 = phi i64 [ 0, %for.cond279.preheader.us.preheader ], [ %indvars.iv.next584, %for.cond279.for.inc305_crit_edge.us ]
  %arrayidx287.us = getelementptr inbounds [50000 x double], ptr %rootnode, i64 0, i64 %indvars.iv583
  %arrayidx292.us = getelementptr inbounds ptr, ptr %node, i64 %indvars.iv583
  br i1 %75, label %for.cond279.for.inc305_crit_edge.us.unr-lcssa, label %for.cond279.preheader.us.new

for.cond279.preheader.us.new:                     ; preds = %for.cond279.preheader.us
  %76 = load double, ptr %arrayidx287.us, align 8, !tbaa !20
  %77 = load ptr, ptr %arrayidx292.us, align 8, !tbaa !13
  %78 = load double, ptr %arrayidx287.us, align 8, !tbaa !20
  %79 = load ptr, ptr %arrayidx292.us, align 8, !tbaa !13
  br label %for.body282.us

for.body282.us:                                   ; preds = %for.inc302.us.1, %for.cond279.preheader.us.new
  %indvars.iv578 = phi i64 [ 0, %for.cond279.preheader.us.new ], [ %indvars.iv.next579.1, %for.inc302.us.1 ]
  %niter = phi i64 [ 0, %for.cond279.preheader.us.new ], [ %niter.next.1, %for.inc302.us.1 ]
  %cmp283.not.us = icmp eq i64 %indvars.iv578, %indvars.iv583
  br i1 %cmp283.not.us, label %for.inc302.us, label %if.then285.us

if.then285.us:                                    ; preds = %for.body282.us
  %arrayidx289.us = getelementptr inbounds [50000 x double], ptr %rootnode, i64 0, i64 %indvars.iv578
  %80 = load double, ptr %arrayidx289.us, align 16, !tbaa !20
  %mul290.us = fmul double %76, %80
  br label %for.inc302.us

for.inc302.us:                                    ; preds = %for.body282.us, %if.then285.us
  %indvars.iv583.sink = phi i64 [ %indvars.iv578, %if.then285.us ], [ %indvars.iv583, %for.body282.us ]
  %.sink = phi double [ %mul290.us, %if.then285.us ], [ %76, %for.body282.us ]
  %arrayidx300.us = getelementptr inbounds double, ptr %77, i64 %indvars.iv583.sink
  store double %.sink, ptr %arrayidx300.us, align 8, !tbaa !20
  %indvars.iv.next579 = or i64 %indvars.iv578, 1
  %cmp283.not.us.1 = icmp eq i64 %indvars.iv.next579, %indvars.iv583
  br i1 %cmp283.not.us.1, label %for.inc302.us.1, label %if.then285.us.1

if.then285.us.1:                                  ; preds = %for.inc302.us
  %arrayidx289.us.1 = getelementptr inbounds [50000 x double], ptr %rootnode, i64 0, i64 %indvars.iv.next579
  %81 = load double, ptr %arrayidx289.us.1, align 8, !tbaa !20
  %mul290.us.1 = fmul double %78, %81
  br label %for.inc302.us.1

for.inc302.us.1:                                  ; preds = %if.then285.us.1, %for.inc302.us
  %indvars.iv583.sink.1 = phi i64 [ %indvars.iv.next579, %if.then285.us.1 ], [ %indvars.iv583, %for.inc302.us ]
  %.sink.1 = phi double [ %mul290.us.1, %if.then285.us.1 ], [ %78, %for.inc302.us ]
  %arrayidx300.us.1 = getelementptr inbounds double, ptr %79, i64 %indvars.iv583.sink.1
  store double %.sink.1, ptr %arrayidx300.us.1, align 8, !tbaa !20
  %indvars.iv.next579.1 = add nuw nsw i64 %indvars.iv578, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond279.for.inc305_crit_edge.us.unr-lcssa, label %for.body282.us, !llvm.loop !321

for.cond279.for.inc305_crit_edge.us.unr-lcssa:    ; preds = %for.inc302.us.1, %for.cond279.preheader.us
  %indvars.iv578.unr = phi i64 [ 0, %for.cond279.preheader.us ], [ %indvars.iv.next579.1, %for.inc302.us.1 ]
  br i1 %lcmp.mod.not, label %for.cond279.for.inc305_crit_edge.us, label %for.body282.us.epil

for.body282.us.epil:                              ; preds = %for.cond279.for.inc305_crit_edge.us.unr-lcssa
  %cmp283.not.us.epil = icmp eq i64 %indvars.iv578.unr, %indvars.iv583
  %82 = load double, ptr %arrayidx287.us, align 8, !tbaa !20
  br i1 %cmp283.not.us.epil, label %for.inc302.us.epil, label %if.then285.us.epil

if.then285.us.epil:                               ; preds = %for.body282.us.epil
  %arrayidx289.us.epil = getelementptr inbounds [50000 x double], ptr %rootnode, i64 0, i64 %indvars.iv578.unr
  %83 = load double, ptr %arrayidx289.us.epil, align 8, !tbaa !20
  %mul290.us.epil = fmul double %82, %83
  br label %for.inc302.us.epil

for.inc302.us.epil:                               ; preds = %if.then285.us.epil, %for.body282.us.epil
  %indvars.iv583.sink.epil = phi i64 [ %indvars.iv578.unr, %if.then285.us.epil ], [ %indvars.iv583, %for.body282.us.epil ]
  %.sink.epil = phi double [ %mul290.us.epil, %if.then285.us.epil ], [ %82, %for.body282.us.epil ]
  %84 = load ptr, ptr %arrayidx292.us, align 8, !tbaa !13
  %arrayidx300.us.epil = getelementptr inbounds double, ptr %84, i64 %indvars.iv583.sink.epil
  store double %.sink.epil, ptr %arrayidx300.us.epil, align 8, !tbaa !20
  br label %for.cond279.for.inc305_crit_edge.us

for.cond279.for.inc305_crit_edge.us:              ; preds = %for.cond279.for.inc305_crit_edge.us.unr-lcssa, %for.inc302.us.epil
  %indvars.iv.next584 = add nuw nsw i64 %indvars.iv583, 1
  %exitcond587.not = icmp eq i64 %indvars.iv.next584, %wide.trip.count586
  br i1 %exitcond587.not, label %if.end308, label %for.cond279.preheader.us, !llvm.loop !322

for.body268:                                      ; preds = %for.body268.preheader616, %for.body268
  %indvars.iv573 = phi i64 [ %indvars.iv.next574, %for.body268 ], [ %indvars.iv573.ph, %for.body268.preheader616 ]
  %arrayidx270 = getelementptr inbounds [50000 x double], ptr %rootnode, i64 0, i64 %indvars.iv573
  %85 = load double, ptr %arrayidx270, align 8, !tbaa !20
  %add271 = fadd double %85, 1.000000e-03
  store double %add271, ptr %arrayidx270, align 8, !tbaa !20
  %indvars.iv.next574 = add nuw nsw i64 %indvars.iv573, 1
  %exitcond577.not = icmp eq i64 %indvars.iv.next574, %wide.trip.count576
  br i1 %exitcond577.not, label %for.cond275.preheader, label %for.body268, !llvm.loop !323

if.end308:                                        ; preds = %for.cond279.for.inc305_crit_edge.us, %for.cond174.loopexit, %if.end, %for.cond202.preheader, %for.cond265.preheader, %for.cond150.preheader, %for.cond174.preheader, %for.cond275.preheader
  call void @llvm.lifetime.end.p0(i64 400000, ptr nonnull %eff) #34
  call void @llvm.lifetime.end.p0(i64 400000, ptr nonnull %rootnode) #34
  ret void
}

declare void @ErrorExit(ptr noundef) local_unnamed_addr #14

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local float @score_calcp(ptr nocapture noundef readonly %seq1, ptr nocapture noundef readonly %seq2, i32 noundef %len) local_unnamed_addr #0 {
entry:
  %sub = add nsw i32 %len, -2
  %cmp120 = icmp sgt i32 %len, 0
  br i1 %cmp120, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %0 = load i32, ptr @penalty, align 4
  %conv43 = sitofp i32 %0 to float
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %k.0122 = phi i32 [ 0, %for.body.lr.ph ], [ %inc72, %for.inc ]
  %tmpscore.0121 = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %tmpscore.3, %for.inc ]
  %idxprom = sext i32 %k.0122 to i64
  %arrayidx = getelementptr inbounds i8, ptr %seq1, i64 %idxprom
  %1 = load i8, ptr %arrayidx, align 1, !tbaa !5
  %arrayidx2 = getelementptr inbounds i8, ptr %seq2, i64 %idxprom
  %2 = load i8, ptr %arrayidx2, align 1, !tbaa !5
  %cmp4 = icmp eq i8 %1, 45
  %cmp6 = icmp eq i8 %2, 45
  %or.cond = select i1 %cmp4, i1 %cmp6, i1 false
  br i1 %or.cond, label %for.inc, label %if.end

if.end:                                           ; preds = %for.body
  %idxprom8 = sext i8 %1 to i64
  %idxprom10 = sext i8 %2 to i64
  %arrayidx11 = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom8, i64 %idxprom10
  %3 = load i32, ptr %arrayidx11, align 4, !tbaa !10
  %conv12 = sitofp i32 %3 to float
  %add = fadd float %tmpscore.0121, %conv12
  br i1 %cmp4, label %if.then15, label %if.end39

if.then15:                                        ; preds = %if.end
  %add17 = fadd float %add, %conv43
  %add23 = fadd float %add17, %conv12
  %inc112 = add nsw i32 %k.0122, 1
  %idxprom24113 = sext i32 %inc112 to i64
  %arrayidx25114 = getelementptr inbounds i8, ptr %seq1, i64 %idxprom24113
  %4 = load i8, ptr %arrayidx25114, align 1, !tbaa !5
  %cmp27115 = icmp eq i8 %4, 45
  br i1 %cmp27115, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %if.then15
  %arrayidx32 = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 45, i64 %idxprom10
  %5 = load i32, ptr %arrayidx32, align 4, !tbaa !10
  %conv33 = sitofp i32 %5 to float
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %while.body
  %indvars.iv127 = phi i64 [ %idxprom24113, %while.body.lr.ph ], [ %indvars.iv.next128, %while.body ]
  %tmpscore.1116 = phi float [ %add23, %while.body.lr.ph ], [ %add34, %while.body ]
  %add34 = fadd float %tmpscore.1116, %conv33
  %indvars.iv.next128 = add i64 %indvars.iv127, 1
  %arrayidx25 = getelementptr inbounds i8, ptr %seq1, i64 %indvars.iv.next128
  %6 = load i8, ptr %arrayidx25, align 1, !tbaa !5
  %cmp27 = icmp eq i8 %6, 45
  br i1 %cmp27, label %while.body, label %while.end.loopexit, !llvm.loop !324

while.end.loopexit:                               ; preds = %while.body
  %7 = trunc i64 %indvars.iv127 to i32
  br label %while.end

while.end:                                        ; preds = %while.end.loopexit, %if.then15
  %tmpscore.1.lcssa = phi float [ %add23, %if.then15 ], [ %add34, %while.end.loopexit ]
  %k.1.lcssa = phi i32 [ %k.0122, %if.then15 ], [ %7, %while.end.loopexit ]
  %cmp35 = icmp sgt i32 %k.1.lcssa, %sub
  br i1 %cmp35, label %for.end, label %for.inc

if.end39:                                         ; preds = %if.end
  br i1 %cmp6, label %if.then42, label %for.inc

if.then42:                                        ; preds = %if.end39
  %add44 = fadd float %add, %conv43
  %add50 = fadd float %add44, %conv12
  %inc52105 = add nsw i32 %k.0122, 1
  %idxprom53106 = sext i32 %inc52105 to i64
  %arrayidx54107 = getelementptr inbounds i8, ptr %seq2, i64 %idxprom53106
  %8 = load i8, ptr %arrayidx54107, align 1, !tbaa !5
  %cmp56108 = icmp eq i8 %8, 45
  br i1 %cmp56108, label %while.body58.lr.ph, label %while.end65

while.body58.lr.ph:                               ; preds = %if.then42
  %arrayidx62 = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom8, i64 45
  %9 = load i32, ptr %arrayidx62, align 4, !tbaa !10
  %conv63 = sitofp i32 %9 to float
  br label %while.body58

while.body58:                                     ; preds = %while.body58.lr.ph, %while.body58
  %indvars.iv = phi i64 [ %idxprom53106, %while.body58.lr.ph ], [ %indvars.iv.next, %while.body58 ]
  %tmpscore.2109 = phi float [ %add50, %while.body58.lr.ph ], [ %add64, %while.body58 ]
  %add64 = fadd float %tmpscore.2109, %conv63
  %indvars.iv.next = add i64 %indvars.iv, 1
  %arrayidx54 = getelementptr inbounds i8, ptr %seq2, i64 %indvars.iv.next
  %10 = load i8, ptr %arrayidx54, align 1, !tbaa !5
  %cmp56 = icmp eq i8 %10, 45
  br i1 %cmp56, label %while.body58, label %while.end65.loopexit, !llvm.loop !325

while.end65.loopexit:                             ; preds = %while.body58
  %11 = trunc i64 %indvars.iv to i32
  br label %while.end65

while.end65:                                      ; preds = %while.end65.loopexit, %if.then42
  %tmpscore.2.lcssa = phi float [ %add50, %if.then42 ], [ %add64, %while.end65.loopexit ]
  %k.2.lcssa = phi i32 [ %k.0122, %if.then42 ], [ %11, %while.end65.loopexit ]
  %cmp67 = icmp sgt i32 %k.2.lcssa, %sub
  br i1 %cmp67, label %for.end, label %for.inc

for.inc:                                          ; preds = %if.end39, %while.end65, %while.end, %for.body
  %tmpscore.3 = phi float [ %tmpscore.0121, %for.body ], [ %tmpscore.1.lcssa, %while.end ], [ %tmpscore.2.lcssa, %while.end65 ], [ %add, %if.end39 ]
  %k.3 = phi i32 [ %k.0122, %for.body ], [ %k.1.lcssa, %while.end ], [ %k.2.lcssa, %while.end65 ], [ %k.0122, %if.end39 ]
  %inc72 = add nsw i32 %k.3, 1
  %cmp = icmp slt i32 %inc72, %len
  br i1 %cmp, label %for.body, label %for.end, !llvm.loop !326

for.end:                                          ; preds = %for.inc, %while.end, %while.end65, %entry
  %tmpscore.4 = phi float [ 0.000000e+00, %entry ], [ %tmpscore.2.lcssa, %while.end65 ], [ %tmpscore.1.lcssa, %while.end ], [ %tmpscore.3, %for.inc ]
  ret float %tmpscore.4
}

; Function Attrs: nofree nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local float @score_calc1(ptr nocapture noundef readonly %seq1, ptr nocapture noundef readonly %seq2) local_unnamed_addr #13 {
entry:
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %seq1) #31
  %conv = trunc i64 %call to i32
  %cmp37 = icmp sgt i32 %conv, 0
  br i1 %cmp37, label %for.body.preheader, label %for.end.thread

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = and i64 %call, 4294967295
  %xtraiter = and i64 %call, 1
  %0 = icmp eq i64 %wide.trip.count, 1
  br i1 %0, label %for.end.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = sub nsw i64 %wide.trip.count, %xtraiter
  br label %for.body

for.body:                                         ; preds = %for.inc.1, %for.body.preheader.new
  %indvars.iv = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next.1, %for.inc.1 ]
  %count.039 = phi i32 [ 0, %for.body.preheader.new ], [ %count.1.fr.1, %for.inc.1 ]
  %score.038 = phi float [ 0.000000e+00, %for.body.preheader.new ], [ %score.1.1, %for.inc.1 ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.1, %for.inc.1 ]
  %arrayidx = getelementptr inbounds i8, ptr %seq1, i64 %indvars.iv
  %1 = load i8, ptr %arrayidx, align 1, !tbaa !5
  %cmp3.not = icmp eq i8 %1, 45
  br i1 %cmp3.not, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %arrayidx6 = getelementptr inbounds i8, ptr %seq2, i64 %indvars.iv
  %2 = load i8, ptr %arrayidx6, align 1, !tbaa !5
  %cmp8.not = icmp eq i8 %2, 45
  br i1 %cmp8.not, label %for.inc, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %idxprom13 = sext i8 %1 to i64
  %idxprom18 = sext i8 %2 to i64
  %arrayidx19 = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom13, i64 %idxprom18
  %3 = load i32, ptr %arrayidx19, align 4, !tbaa !10
  %conv20 = sitofp i32 %3 to float
  %add = fadd float %score.038, %conv20
  %inc = add nsw i32 %count.039, 1
  br label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then
  %score.1 = phi float [ %add, %if.then ], [ %score.038, %land.lhs.true ], [ %score.038, %for.body ]
  %count.1 = phi i32 [ %inc, %if.then ], [ %count.039, %land.lhs.true ], [ %count.039, %for.body ]
  %count.1.fr = freeze i32 %count.1
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.1 = getelementptr inbounds i8, ptr %seq1, i64 %indvars.iv.next
  %4 = load i8, ptr %arrayidx.1, align 1, !tbaa !5
  %cmp3.not.1 = icmp eq i8 %4, 45
  br i1 %cmp3.not.1, label %for.inc.1, label %land.lhs.true.1

land.lhs.true.1:                                  ; preds = %for.inc
  %arrayidx6.1 = getelementptr inbounds i8, ptr %seq2, i64 %indvars.iv.next
  %5 = load i8, ptr %arrayidx6.1, align 1, !tbaa !5
  %cmp8.not.1 = icmp eq i8 %5, 45
  br i1 %cmp8.not.1, label %for.inc.1, label %if.then.1

if.then.1:                                        ; preds = %land.lhs.true.1
  %idxprom13.1 = sext i8 %4 to i64
  %idxprom18.1 = sext i8 %5 to i64
  %arrayidx19.1 = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom13.1, i64 %idxprom18.1
  %6 = load i32, ptr %arrayidx19.1, align 4, !tbaa !10
  %conv20.1 = sitofp i32 %6 to float
  %add.1 = fadd float %score.1, %conv20.1
  %inc.1 = add nsw i32 %count.1.fr, 1
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then.1, %land.lhs.true.1, %for.inc
  %score.1.1 = phi float [ %add.1, %if.then.1 ], [ %score.1, %land.lhs.true.1 ], [ %score.1, %for.inc ]
  %count.1.1 = phi i32 [ %inc.1, %if.then.1 ], [ %count.1.fr, %land.lhs.true.1 ], [ %count.1.fr, %for.inc ]
  %count.1.fr.1 = freeze i32 %count.1.1
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.end.unr-lcssa, label %for.body, !llvm.loop !327

for.end.unr-lcssa:                                ; preds = %for.inc.1, %for.body.preheader
  %score.1.lcssa.ph = phi float [ undef, %for.body.preheader ], [ %score.1.1, %for.inc.1 ]
  %count.1.fr.lcssa.ph = phi i32 [ undef, %for.body.preheader ], [ %count.1.fr.1, %for.inc.1 ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next.1, %for.inc.1 ]
  %count.039.unr = phi i32 [ 0, %for.body.preheader ], [ %count.1.fr.1, %for.inc.1 ]
  %score.038.unr = phi float [ 0.000000e+00, %for.body.preheader ], [ %score.1.1, %for.inc.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil

for.body.epil:                                    ; preds = %for.end.unr-lcssa
  %arrayidx.epil = getelementptr inbounds i8, ptr %seq1, i64 %indvars.iv.unr
  %7 = load i8, ptr %arrayidx.epil, align 1, !tbaa !5
  %cmp3.not.epil = icmp eq i8 %7, 45
  br i1 %cmp3.not.epil, label %for.end, label %land.lhs.true.epil

land.lhs.true.epil:                               ; preds = %for.body.epil
  %arrayidx6.epil = getelementptr inbounds i8, ptr %seq2, i64 %indvars.iv.unr
  %8 = load i8, ptr %arrayidx6.epil, align 1, !tbaa !5
  %cmp8.not.epil = icmp eq i8 %8, 45
  br i1 %cmp8.not.epil, label %for.end, label %if.then.epil

if.then.epil:                                     ; preds = %land.lhs.true.epil
  %idxprom13.epil = sext i8 %7 to i64
  %idxprom18.epil = sext i8 %8 to i64
  %arrayidx19.epil = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom13.epil, i64 %idxprom18.epil
  %9 = load i32, ptr %arrayidx19.epil, align 4, !tbaa !10
  %conv20.epil = sitofp i32 %9 to float
  %add.epil = fadd float %score.038.unr, %conv20.epil
  %inc.epil = add i32 %count.039.unr, 1
  br label %for.end

for.end:                                          ; preds = %for.body.epil, %land.lhs.true.epil, %if.then.epil, %for.end.unr-lcssa
  %score.1.lcssa = phi float [ %score.1.lcssa.ph, %for.end.unr-lcssa ], [ %add.epil, %if.then.epil ], [ %score.038.unr, %land.lhs.true.epil ], [ %score.038.unr, %for.body.epil ]
  %count.1.fr.lcssa = phi i32 [ %count.1.fr.lcssa.ph, %for.end.unr-lcssa ], [ %inc.epil, %if.then.epil ], [ %count.039.unr, %land.lhs.true.epil ], [ %count.039.unr, %for.body.epil ]
  %tobool.not = icmp eq i32 %count.1.fr.lcssa, 0
  %conv23 = sitofp i32 %count.1.fr.lcssa to float
  %div = fdiv float %score.1.lcssa, %conv23
  br i1 %tobool.not, label %for.end.thread, label %10

for.end.thread:                                   ; preds = %entry, %for.end
  br label %10

10:                                               ; preds = %for.end, %for.end.thread
  %11 = phi float [ 1.000000e+00, %for.end.thread ], [ %div, %for.end ]
  ret float %11
}

; Function Attrs: nofree nounwind memory(argmem: read) uwtable
define dso_local float @substitution_nid(ptr nocapture noundef readonly %seq1, ptr nocapture noundef readonly %seq2) local_unnamed_addr #23 {
entry:
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %seq1) #31
  %conv = trunc i64 %call to i32
  %cmp28 = icmp sgt i32 %conv, 0
  br i1 %cmp28, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = and i64 %call, 4294967295
  %xtraiter = and i64 %call, 1
  %0 = icmp eq i64 %wide.trip.count, 1
  br i1 %0, label %for.end.loopexit.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = sub nsw i64 %wide.trip.count, %xtraiter
  br label %for.body

for.body:                                         ; preds = %for.inc.1, %for.body.preheader.new
  %indvars.iv = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next.1, %for.inc.1 ]
  %s12.029 = phi float [ 0.000000e+00, %for.body.preheader.new ], [ %s12.1.1, %for.inc.1 ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.1, %for.inc.1 ]
  %arrayidx = getelementptr inbounds i8, ptr %seq1, i64 %indvars.iv
  %1 = load i8, ptr %arrayidx, align 1, !tbaa !5
  %cmp3.not = icmp eq i8 %1, 45
  br i1 %cmp3.not, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %arrayidx6 = getelementptr inbounds i8, ptr %seq2, i64 %indvars.iv
  %2 = load i8, ptr %arrayidx6, align 1, !tbaa !5
  %cmp8.not = icmp eq i8 %2, 45
  br i1 %cmp8.not, label %for.inc, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %cmp16 = icmp eq i8 %1, %2
  %conv18 = uitofp i1 %cmp16 to float
  %add = fadd float %s12.029, %conv18
  br label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then
  %s12.1 = phi float [ %add, %if.then ], [ %s12.029, %land.lhs.true ], [ %s12.029, %for.body ]
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.1 = getelementptr inbounds i8, ptr %seq1, i64 %indvars.iv.next
  %3 = load i8, ptr %arrayidx.1, align 1, !tbaa !5
  %cmp3.not.1 = icmp eq i8 %3, 45
  br i1 %cmp3.not.1, label %for.inc.1, label %land.lhs.true.1

land.lhs.true.1:                                  ; preds = %for.inc
  %arrayidx6.1 = getelementptr inbounds i8, ptr %seq2, i64 %indvars.iv.next
  %4 = load i8, ptr %arrayidx6.1, align 1, !tbaa !5
  %cmp8.not.1 = icmp eq i8 %4, 45
  br i1 %cmp8.not.1, label %for.inc.1, label %if.then.1

if.then.1:                                        ; preds = %land.lhs.true.1
  %cmp16.1 = icmp eq i8 %3, %4
  %conv18.1 = uitofp i1 %cmp16.1 to float
  %add.1 = fadd float %s12.1, %conv18.1
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then.1, %land.lhs.true.1, %for.inc
  %s12.1.1 = phi float [ %add.1, %if.then.1 ], [ %s12.1, %land.lhs.true.1 ], [ %s12.1, %for.inc ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.end.loopexit.unr-lcssa, label %for.body, !llvm.loop !328

for.end.loopexit.unr-lcssa:                       ; preds = %for.inc.1, %for.body.preheader
  %s12.1.lcssa.ph = phi float [ undef, %for.body.preheader ], [ %s12.1.1, %for.inc.1 ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next.1, %for.inc.1 ]
  %s12.029.unr = phi float [ 0.000000e+00, %for.body.preheader ], [ %s12.1.1, %for.inc.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa
  %arrayidx.epil = getelementptr inbounds i8, ptr %seq1, i64 %indvars.iv.unr
  %5 = load i8, ptr %arrayidx.epil, align 1, !tbaa !5
  %cmp3.not.epil = icmp eq i8 %5, 45
  br i1 %cmp3.not.epil, label %for.end, label %land.lhs.true.epil

land.lhs.true.epil:                               ; preds = %for.body.epil
  %arrayidx6.epil = getelementptr inbounds i8, ptr %seq2, i64 %indvars.iv.unr
  %6 = load i8, ptr %arrayidx6.epil, align 1, !tbaa !5
  %cmp8.not.epil = icmp eq i8 %6, 45
  br i1 %cmp8.not.epil, label %for.end, label %if.then.epil

if.then.epil:                                     ; preds = %land.lhs.true.epil
  %cmp16.epil = icmp eq i8 %5, %6
  %conv18.epil = uitofp i1 %cmp16.epil to float
  %add.epil = fadd float %s12.029.unr, %conv18.epil
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %if.then.epil, %land.lhs.true.epil, %for.body.epil, %entry
  %s12.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %s12.1.lcssa.ph, %for.end.loopexit.unr-lcssa ], [ %add.epil, %if.then.epil ], [ %s12.029.unr, %land.lhs.true.epil ], [ %s12.029.unr, %for.body.epil ]
  ret float %s12.0.lcssa
}

; Function Attrs: nofree nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local float @substitution_score(ptr nocapture noundef readonly %seq1, ptr nocapture noundef readonly %seq2) local_unnamed_addr #13 {
entry:
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %seq1) #31
  %conv = trunc i64 %call to i32
  %cmp30 = icmp sgt i32 %conv, 0
  br i1 %cmp30, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = and i64 %call, 4294967295
  %xtraiter = and i64 %call, 1
  %0 = icmp eq i64 %wide.trip.count, 1
  br i1 %0, label %for.end.loopexit.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = sub nsw i64 %wide.trip.count, %xtraiter
  br label %for.body

for.body:                                         ; preds = %for.inc.1, %for.body.preheader.new
  %indvars.iv = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next.1, %for.inc.1 ]
  %s12.031 = phi float [ 0.000000e+00, %for.body.preheader.new ], [ %s12.1.1, %for.inc.1 ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.1, %for.inc.1 ]
  %arrayidx = getelementptr inbounds i8, ptr %seq1, i64 %indvars.iv
  %1 = load i8, ptr %arrayidx, align 1, !tbaa !5
  %cmp3.not = icmp eq i8 %1, 45
  br i1 %cmp3.not, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %arrayidx6 = getelementptr inbounds i8, ptr %seq2, i64 %indvars.iv
  %2 = load i8, ptr %arrayidx6, align 1, !tbaa !5
  %cmp8.not = icmp eq i8 %2, 45
  br i1 %cmp8.not, label %for.inc, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %idxprom13 = sext i8 %1 to i64
  %idxprom18 = sext i8 %2 to i64
  %arrayidx19 = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom13, i64 %idxprom18
  %3 = load i32, ptr %arrayidx19, align 4, !tbaa !10
  %conv20 = sitofp i32 %3 to float
  %add = fadd float %s12.031, %conv20
  br label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then
  %s12.1 = phi float [ %add, %if.then ], [ %s12.031, %land.lhs.true ], [ %s12.031, %for.body ]
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.1 = getelementptr inbounds i8, ptr %seq1, i64 %indvars.iv.next
  %4 = load i8, ptr %arrayidx.1, align 1, !tbaa !5
  %cmp3.not.1 = icmp eq i8 %4, 45
  br i1 %cmp3.not.1, label %for.inc.1, label %land.lhs.true.1

land.lhs.true.1:                                  ; preds = %for.inc
  %arrayidx6.1 = getelementptr inbounds i8, ptr %seq2, i64 %indvars.iv.next
  %5 = load i8, ptr %arrayidx6.1, align 1, !tbaa !5
  %cmp8.not.1 = icmp eq i8 %5, 45
  br i1 %cmp8.not.1, label %for.inc.1, label %if.then.1

if.then.1:                                        ; preds = %land.lhs.true.1
  %idxprom13.1 = sext i8 %4 to i64
  %idxprom18.1 = sext i8 %5 to i64
  %arrayidx19.1 = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom13.1, i64 %idxprom18.1
  %6 = load i32, ptr %arrayidx19.1, align 4, !tbaa !10
  %conv20.1 = sitofp i32 %6 to float
  %add.1 = fadd float %s12.1, %conv20.1
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then.1, %land.lhs.true.1, %for.inc
  %s12.1.1 = phi float [ %add.1, %if.then.1 ], [ %s12.1, %land.lhs.true.1 ], [ %s12.1, %for.inc ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.end.loopexit.unr-lcssa, label %for.body, !llvm.loop !329

for.end.loopexit.unr-lcssa:                       ; preds = %for.inc.1, %for.body.preheader
  %s12.1.lcssa.ph = phi float [ undef, %for.body.preheader ], [ %s12.1.1, %for.inc.1 ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next.1, %for.inc.1 ]
  %s12.031.unr = phi float [ 0.000000e+00, %for.body.preheader ], [ %s12.1.1, %for.inc.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa
  %arrayidx.epil = getelementptr inbounds i8, ptr %seq1, i64 %indvars.iv.unr
  %7 = load i8, ptr %arrayidx.epil, align 1, !tbaa !5
  %cmp3.not.epil = icmp eq i8 %7, 45
  br i1 %cmp3.not.epil, label %for.end, label %land.lhs.true.epil

land.lhs.true.epil:                               ; preds = %for.body.epil
  %arrayidx6.epil = getelementptr inbounds i8, ptr %seq2, i64 %indvars.iv.unr
  %8 = load i8, ptr %arrayidx6.epil, align 1, !tbaa !5
  %cmp8.not.epil = icmp eq i8 %8, 45
  br i1 %cmp8.not.epil, label %for.end, label %if.then.epil

if.then.epil:                                     ; preds = %land.lhs.true.epil
  %idxprom13.epil = sext i8 %7 to i64
  %idxprom18.epil = sext i8 %8 to i64
  %arrayidx19.epil = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom13.epil, i64 %idxprom18.epil
  %9 = load i32, ptr %arrayidx19.epil, align 4, !tbaa !10
  %conv20.epil = sitofp i32 %9 to float
  %add.epil = fadd float %s12.031.unr, %conv20.epil
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %if.then.epil, %land.lhs.true.epil, %for.body.epil, %entry
  %s12.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %s12.1.lcssa.ph, %for.end.loopexit.unr-lcssa ], [ %add.epil, %if.then.epil ], [ %s12.031.unr, %land.lhs.true.epil ], [ %s12.031.unr, %for.body.epil ]
  ret float %s12.0.lcssa
}

; Function Attrs: nofree nounwind memory(readwrite, inaccessiblemem: write) uwtable
define dso_local float @substitution_hosei(ptr nocapture noundef readonly %seq1, ptr nocapture noundef readonly %seq2) local_unnamed_addr #24 {
entry:
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.end7, %entry
  %count.0.ph = phi i32 [ %inc, %if.end7 ], [ 0, %entry ]
  %iscore.0.ph = phi i32 [ %add, %if.end7 ], [ 0, %entry ]
  %seq2.addr.0.ph = phi ptr [ %incdec.ptr1, %if.end7 ], [ %seq2, %entry ]
  %seq1.addr.0.ph = phi ptr [ %incdec.ptr, %if.end7 ], [ %seq1, %entry ]
  br label %while.cond

while.cond:                                       ; preds = %while.cond.outer, %while.body
  %seq2.addr.0 = phi ptr [ %incdec.ptr1, %while.body ], [ %seq2.addr.0.ph, %while.cond.outer ]
  %seq1.addr.0 = phi ptr [ %incdec.ptr, %while.body ], [ %seq1.addr.0.ph, %while.cond.outer ]
  %0 = load i8, ptr %seq1.addr.0, align 1, !tbaa !5
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %while.end, label %while.body

while.body:                                       ; preds = %while.cond
  %incdec.ptr = getelementptr inbounds i8, ptr %seq1.addr.0, i64 1
  %incdec.ptr1 = getelementptr inbounds i8, ptr %seq2.addr.0, i64 1
  %1 = load i8, ptr %seq2.addr.0, align 1, !tbaa !5
  %cmp = icmp eq i8 %0, 45
  %cmp4 = icmp eq i8 %1, 45
  %or.cond = select i1 %cmp, i1 true, i1 %cmp4
  br i1 %or.cond, label %while.cond, label %if.end7, !llvm.loop !330

if.end7:                                          ; preds = %while.body
  %cmp10 = icmp ne i8 %0, %1
  %conv11 = zext i1 %cmp10 to i32
  %add = add nuw nsw i32 %iscore.0.ph, %conv11
  %inc = add nuw nsw i32 %count.0.ph, 1
  br label %while.cond.outer, !llvm.loop !330

while.end:                                        ; preds = %while.cond
  %tobool12.not = icmp eq i32 %count.0.ph, 0
  %conv14 = sitofp i32 %iscore.0.ph to float
  %conv15 = sitofp i32 %count.0.ph to float
  %div = fdiv float %conv14, %conv15
  %2 = fpext float %div to double
  %score.0 = select i1 %tobool12.not, double 1.000000e+00, double %2
  %cmp18 = fcmp olt double %score.0, 0x3FEE666666666666
  br i1 %cmp18, label %if.then20, label %if.end24

if.then20:                                        ; preds = %while.end
  %sub = fsub double 1.000000e+00, %score.0
  %call = tail call double @log(double noundef %sub) #34
  %3 = fptrunc double %call to float
  %conv22 = fneg float %3
  br label %if.end24

if.end24:                                         ; preds = %while.end, %if.then20
  %score.1 = phi float [ %conv22, %if.then20 ], [ 3.000000e+00, %while.end ]
  ret float %score.1
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare double @log(double noundef) local_unnamed_addr #25

; Function Attrs: nofree nounwind memory(argmem: read) uwtable
define dso_local float @substitution(ptr nocapture noundef readonly %seq1, ptr nocapture noundef readonly %seq2) local_unnamed_addr #23 {
entry:
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %seq1) #31
  %conv = trunc i64 %call to i32
  %cmp35 = icmp sgt i32 %conv, 0
  br i1 %cmp35, label %for.body.preheader, label %for.end.thread

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = and i64 %call, 4294967295
  %xtraiter = and i64 %call, 1
  %0 = icmp eq i64 %wide.trip.count, 1
  br i1 %0, label %for.end.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = sub nsw i64 %wide.trip.count, %xtraiter
  br label %for.body

for.body:                                         ; preds = %for.inc.1, %for.body.preheader.new
  %indvars.iv = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next.1, %for.inc.1 ]
  %count.037 = phi i32 [ 0, %for.body.preheader.new ], [ %count.1.fr.1, %for.inc.1 ]
  %score.036 = phi float [ 0.000000e+00, %for.body.preheader.new ], [ %score.1.1, %for.inc.1 ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.1, %for.inc.1 ]
  %arrayidx = getelementptr inbounds i8, ptr %seq1, i64 %indvars.iv
  %1 = load i8, ptr %arrayidx, align 1, !tbaa !5
  %cmp3.not = icmp eq i8 %1, 45
  br i1 %cmp3.not, label %for.inc, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body
  %arrayidx6 = getelementptr inbounds i8, ptr %seq2, i64 %indvars.iv
  %2 = load i8, ptr %arrayidx6, align 1, !tbaa !5
  %cmp8.not = icmp eq i8 %2, 45
  br i1 %cmp8.not, label %for.inc, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %cmp16 = icmp ne i8 %1, %2
  %conv18 = uitofp i1 %cmp16 to float
  %add = fadd float %score.036, %conv18
  %inc = add nsw i32 %count.037, 1
  br label %for.inc

for.inc:                                          ; preds = %for.body, %land.lhs.true, %if.then
  %score.1 = phi float [ %add, %if.then ], [ %score.036, %land.lhs.true ], [ %score.036, %for.body ]
  %count.1 = phi i32 [ %inc, %if.then ], [ %count.037, %land.lhs.true ], [ %count.037, %for.body ]
  %count.1.fr = freeze i32 %count.1
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.1 = getelementptr inbounds i8, ptr %seq1, i64 %indvars.iv.next
  %3 = load i8, ptr %arrayidx.1, align 1, !tbaa !5
  %cmp3.not.1 = icmp eq i8 %3, 45
  br i1 %cmp3.not.1, label %for.inc.1, label %land.lhs.true.1

land.lhs.true.1:                                  ; preds = %for.inc
  %arrayidx6.1 = getelementptr inbounds i8, ptr %seq2, i64 %indvars.iv.next
  %4 = load i8, ptr %arrayidx6.1, align 1, !tbaa !5
  %cmp8.not.1 = icmp eq i8 %4, 45
  br i1 %cmp8.not.1, label %for.inc.1, label %if.then.1

if.then.1:                                        ; preds = %land.lhs.true.1
  %cmp16.1 = icmp ne i8 %3, %4
  %conv18.1 = uitofp i1 %cmp16.1 to float
  %add.1 = fadd float %score.1, %conv18.1
  %inc.1 = add nsw i32 %count.1.fr, 1
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then.1, %land.lhs.true.1, %for.inc
  %score.1.1 = phi float [ %add.1, %if.then.1 ], [ %score.1, %land.lhs.true.1 ], [ %score.1, %for.inc ]
  %count.1.1 = phi i32 [ %inc.1, %if.then.1 ], [ %count.1.fr, %land.lhs.true.1 ], [ %count.1.fr, %for.inc ]
  %count.1.fr.1 = freeze i32 %count.1.1
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.end.unr-lcssa, label %for.body, !llvm.loop !331

for.end.unr-lcssa:                                ; preds = %for.inc.1, %for.body.preheader
  %score.1.lcssa.ph = phi float [ undef, %for.body.preheader ], [ %score.1.1, %for.inc.1 ]
  %count.1.fr.lcssa.ph = phi i32 [ undef, %for.body.preheader ], [ %count.1.fr.1, %for.inc.1 ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next.1, %for.inc.1 ]
  %count.037.unr = phi i32 [ 0, %for.body.preheader ], [ %count.1.fr.1, %for.inc.1 ]
  %score.036.unr = phi float [ 0.000000e+00, %for.body.preheader ], [ %score.1.1, %for.inc.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil

for.body.epil:                                    ; preds = %for.end.unr-lcssa
  %arrayidx.epil = getelementptr inbounds i8, ptr %seq1, i64 %indvars.iv.unr
  %5 = load i8, ptr %arrayidx.epil, align 1, !tbaa !5
  %cmp3.not.epil = icmp eq i8 %5, 45
  br i1 %cmp3.not.epil, label %for.end, label %land.lhs.true.epil

land.lhs.true.epil:                               ; preds = %for.body.epil
  %arrayidx6.epil = getelementptr inbounds i8, ptr %seq2, i64 %indvars.iv.unr
  %6 = load i8, ptr %arrayidx6.epil, align 1, !tbaa !5
  %cmp8.not.epil = icmp eq i8 %6, 45
  br i1 %cmp8.not.epil, label %for.end, label %if.then.epil

if.then.epil:                                     ; preds = %land.lhs.true.epil
  %cmp16.epil = icmp ne i8 %5, %6
  %conv18.epil = uitofp i1 %cmp16.epil to float
  %add.epil = fadd float %score.036.unr, %conv18.epil
  %inc.epil = add i32 %count.037.unr, 1
  br label %for.end

for.end:                                          ; preds = %for.body.epil, %land.lhs.true.epil, %if.then.epil, %for.end.unr-lcssa
  %score.1.lcssa = phi float [ %score.1.lcssa.ph, %for.end.unr-lcssa ], [ %add.epil, %if.then.epil ], [ %score.036.unr, %land.lhs.true.epil ], [ %score.036.unr, %for.body.epil ]
  %count.1.fr.lcssa = phi i32 [ %count.1.fr.lcssa.ph, %for.end.unr-lcssa ], [ %inc.epil, %if.then.epil ], [ %count.037.unr, %land.lhs.true.epil ], [ %count.037.unr, %for.body.epil ]
  %tobool.not = icmp eq i32 %count.1.fr.lcssa, 0
  %conv21 = sitofp i32 %count.1.fr.lcssa to float
  %div = fdiv float %score.1.lcssa, %conv21
  br i1 %tobool.not, label %for.end.thread, label %7

for.end.thread:                                   ; preds = %entry, %for.end
  br label %7

7:                                                ; preds = %for.end, %for.end.thread
  %8 = phi float [ 1.000000e+00, %for.end.thread ], [ %div, %for.end ]
  ret float %8
}

; Function Attrs: nounwind uwtable
define dso_local void @treeconstruction(ptr nocapture noundef readonly %seq, i32 noundef %nseq, ptr nocapture noundef readonly %topol, ptr nocapture noundef readonly %len, ptr nocapture noundef readonly %eff) local_unnamed_addr #12 {
entry:
  %0 = load i32, ptr @weight, align 4, !tbaa !10
  %cmp = icmp sgt i32 %0, 1
  br i1 %cmp, label %if.then, label %for.cond16.preheader

for.cond16.preheader:                             ; preds = %entry
  %cmp1763 = icmp sgt i32 %nseq, 0
  br i1 %cmp1763, label %for.cond20.preheader.us.preheader, label %if.end34

for.cond20.preheader.us.preheader:                ; preds = %for.cond16.preheader
  %wide.trip.count75 = zext i32 %nseq to i64
  %min.iters.check = icmp ult i32 %nseq, 4
  %n.vec = and i64 %wide.trip.count75, 4294967292
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count75
  br label %for.cond20.preheader.us

for.cond20.preheader.us:                          ; preds = %for.cond20.preheader.us.preheader, %for.cond20.for.inc31_crit_edge.us
  %indvars.iv72 = phi i64 [ 0, %for.cond20.preheader.us.preheader ], [ %indvars.iv.next73, %for.cond20.for.inc31_crit_edge.us ]
  %arrayidx25.us = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv72
  %1 = load ptr, ptr %arrayidx25.us, align 8, !tbaa !13
  br i1 %min.iters.check, label %for.body23.us.preheader, label %vector.body

vector.body:                                      ; preds = %for.cond20.preheader.us, %vector.body
  %index = phi i64 [ %index.next, %vector.body ], [ 0, %for.cond20.preheader.us ]
  %2 = getelementptr inbounds double, ptr %1, i64 %index
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, ptr %2, align 8, !tbaa !20
  %3 = getelementptr inbounds double, ptr %2, i64 2
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, ptr %3, align 8, !tbaa !20
  %index.next = add nuw i64 %index, 4
  %4 = icmp eq i64 %index.next, %n.vec
  br i1 %4, label %middle.block, label %vector.body, !llvm.loop !332

middle.block:                                     ; preds = %vector.body
  br i1 %cmp.n, label %for.cond20.for.inc31_crit_edge.us, label %for.body23.us.preheader

for.body23.us.preheader:                          ; preds = %for.cond20.preheader.us, %middle.block
  %indvars.iv.ph = phi i64 [ 0, %for.cond20.preheader.us ], [ %n.vec, %middle.block ]
  br label %for.body23.us

for.body23.us:                                    ; preds = %for.body23.us.preheader, %for.body23.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body23.us ], [ %indvars.iv.ph, %for.body23.us.preheader ]
  %arrayidx27.us = getelementptr inbounds double, ptr %1, i64 %indvars.iv
  store double 1.000000e+00, ptr %arrayidx27.us, align 8, !tbaa !20
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count75
  br i1 %exitcond.not, label %for.cond20.for.inc31_crit_edge.us, label %for.body23.us, !llvm.loop !333

for.cond20.for.inc31_crit_edge.us:                ; preds = %for.body23.us, %middle.block
  %indvars.iv.next73 = add nuw nsw i64 %indvars.iv72, 1
  %exitcond76.not = icmp eq i64 %indvars.iv.next73, %wide.trip.count75
  br i1 %exitcond76.not, label %if.end34, label %for.cond20.preheader.us, !llvm.loop !334

if.then:                                          ; preds = %entry
  %5 = load i32, ptr @utree, align 4, !tbaa !10
  %cmp1 = icmp eq i32 %5, 0
  br i1 %cmp1, label %for.cond.preheader, label %if.end34

for.cond.preheader:                               ; preds = %if.then
  %cmp367 = icmp sgt i32 %nseq, 1
  br i1 %cmp367, label %for.body.preheader, label %for.end15

for.body.preheader:                               ; preds = %for.cond.preheader
  %sub = add nsw i32 %nseq, -1
  %6 = zext i32 %nseq to i64
  %wide.trip.count87 = zext i32 %sub to i64
  %wide.trip.count82 = zext i32 %nseq to i64
  br label %for.body

for.cond.loopexit:                                ; preds = %substitution_hosei.exit, %for.body
  %indvars.iv.next78 = add nuw nsw i64 %indvars.iv77, 1
  %exitcond88.not = icmp eq i64 %indvars.iv.next85, %wide.trip.count87
  br i1 %exitcond88.not, label %for.end15, label %for.body, !llvm.loop !335

for.body:                                         ; preds = %for.body.preheader, %for.cond.loopexit
  %indvars.iv84 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next85, %for.cond.loopexit ]
  %indvars.iv77 = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next78, %for.cond.loopexit ]
  %indvars.iv.next85 = add nuw nsw i64 %indvars.iv84, 1
  %cmp565 = icmp ult i64 %indvars.iv.next85, %6
  br i1 %cmp565, label %for.body6.lr.ph, label %for.cond.loopexit

for.body6.lr.ph:                                  ; preds = %for.body
  %arrayidx = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv84
  %arrayidx10 = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv84
  br label %for.body6

for.body6:                                        ; preds = %for.body6.lr.ph, %substitution_hosei.exit
  %indvars.iv79 = phi i64 [ %indvars.iv77, %for.body6.lr.ph ], [ %indvars.iv.next80, %substitution_hosei.exit ]
  %7 = load ptr, ptr %arrayidx, align 8, !tbaa !13
  %arrayidx8 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv79
  %8 = load ptr, ptr %arrayidx8, align 8, !tbaa !13
  br label %while.cond.outer.i

while.cond.outer.i:                               ; preds = %if.end7.i, %for.body6
  %count.0.ph.i = phi i32 [ %inc.i, %if.end7.i ], [ 0, %for.body6 ]
  %iscore.0.ph.i = phi i32 [ %add.i, %if.end7.i ], [ 0, %for.body6 ]
  %seq2.addr.0.ph.i = phi ptr [ %incdec.ptr1.i, %if.end7.i ], [ %8, %for.body6 ]
  %seq1.addr.0.ph.i = phi ptr [ %incdec.ptr.i, %if.end7.i ], [ %7, %for.body6 ]
  br label %while.cond.i

while.cond.i:                                     ; preds = %while.body.i, %while.cond.outer.i
  %seq2.addr.0.i = phi ptr [ %incdec.ptr1.i, %while.body.i ], [ %seq2.addr.0.ph.i, %while.cond.outer.i ]
  %seq1.addr.0.i = phi ptr [ %incdec.ptr.i, %while.body.i ], [ %seq1.addr.0.ph.i, %while.cond.outer.i ]
  %9 = load i8, ptr %seq1.addr.0.i, align 1, !tbaa !5
  %tobool.not.i = icmp eq i8 %9, 0
  br i1 %tobool.not.i, label %while.end.i, label %while.body.i

while.body.i:                                     ; preds = %while.cond.i
  %incdec.ptr.i = getelementptr inbounds i8, ptr %seq1.addr.0.i, i64 1
  %incdec.ptr1.i = getelementptr inbounds i8, ptr %seq2.addr.0.i, i64 1
  %10 = load i8, ptr %seq2.addr.0.i, align 1, !tbaa !5
  %cmp.i = icmp eq i8 %9, 45
  %cmp4.i = icmp eq i8 %10, 45
  %or.cond.i = select i1 %cmp.i, i1 true, i1 %cmp4.i
  br i1 %or.cond.i, label %while.cond.i, label %if.end7.i, !llvm.loop !330

if.end7.i:                                        ; preds = %while.body.i
  %cmp10.i = icmp ne i8 %9, %10
  %conv11.i = zext i1 %cmp10.i to i32
  %add.i = add nuw nsw i32 %iscore.0.ph.i, %conv11.i
  %inc.i = add nuw nsw i32 %count.0.ph.i, 1
  br label %while.cond.outer.i, !llvm.loop !330

while.end.i:                                      ; preds = %while.cond.i
  %tobool12.not.i = icmp eq i32 %count.0.ph.i, 0
  %conv14.i = sitofp i32 %iscore.0.ph.i to float
  %conv15.i = sitofp i32 %count.0.ph.i to float
  %div.i = fdiv float %conv14.i, %conv15.i
  %11 = fpext float %div.i to double
  %score.0.i = select i1 %tobool12.not.i, double 1.000000e+00, double %11
  %cmp18.i = fcmp olt double %score.0.i, 0x3FEE666666666666
  br i1 %cmp18.i, label %if.then20.i, label %substitution_hosei.exit

if.then20.i:                                      ; preds = %while.end.i
  %sub.i = fsub double 1.000000e+00, %score.0.i
  %call.i = tail call double @log(double noundef %sub.i) #34
  %12 = fptrunc double %call.i to float
  %conv22.i = fneg float %12
  br label %substitution_hosei.exit

substitution_hosei.exit:                          ; preds = %while.end.i, %if.then20.i
  %score.1.i = phi float [ %conv22.i, %if.then20.i ], [ 3.000000e+00, %while.end.i ]
  %conv = fpext float %score.1.i to double
  %13 = load ptr, ptr %arrayidx10, align 8, !tbaa !13
  %arrayidx12 = getelementptr inbounds double, ptr %13, i64 %indvars.iv79
  store double %conv, ptr %arrayidx12, align 8, !tbaa !20
  %indvars.iv.next80 = add nuw nsw i64 %indvars.iv79, 1
  %exitcond83.not = icmp eq i64 %indvars.iv.next80, %wide.trip.count82
  br i1 %exitcond83.not, label %for.cond.loopexit, label %for.body6, !llvm.loop !336

for.end15:                                        ; preds = %for.cond.loopexit, %for.cond.preheader
  tail call void @spg(i32 noundef %nseq, ptr noundef %eff, ptr noundef %topol, ptr noundef %len)
  tail call void @counteff(i32 noundef %nseq, ptr noundef %topol, ptr noundef %len, ptr noundef %eff)
  br label %if.end34

if.end34:                                         ; preds = %for.cond20.for.inc31_crit_edge.us, %for.cond16.preheader, %if.then, %for.end15
  ret void
}

; Function Attrs: nofree nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local float @bscore_calc(ptr nocapture noundef readonly %seq, i32 noundef %s, ptr nocapture noundef readonly %eff) local_unnamed_addr #13 {
entry:
  %0 = load ptr, ptr %seq, align 8, !tbaa !13
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #31
  %call.fr = freeze i64 %call
  %sub = add i32 %s, -1
  %cmp196 = icmp sgt i32 %s, 1
  br i1 %cmp196, label %for.body.lr.ph, label %for.end125

for.body.lr.ph:                                   ; preds = %entry
  %conv = trunc i64 %call.fr to i32
  %cmp10182 = icmp sgt i32 %conv, 0
  %1 = load i32, ptr @penalty, align 4
  %conv87 = sext i32 %1 to i64
  br i1 %cmp10182, label %for.body.us.preheader, label %for.end125

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %2 = zext i32 %s to i64
  %wide.trip.count216 = zext i32 %sub to i64
  %wide.trip.count211 = zext i32 %s to i64
  %wide.trip.count = and i64 %call.fr, 4294967295
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us.preheader, %for.cond.loopexit.us
  %indvars.iv213 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next214, %for.cond.loopexit.us ]
  %indvars.iv206 = phi i64 [ 1, %for.body.us.preheader ], [ %indvars.iv.next207, %for.cond.loopexit.us ]
  %score.0198.us = phi i64 [ 0, %for.body.us.preheader ], [ %score.1.lcssa.us, %for.cond.loopexit.us ]
  %nglen.0197.us = phi i32 [ 0, %for.body.us.preheader ], [ %nglen.1.lcssa.us, %for.cond.loopexit.us ]
  %indvars.iv.next214 = add nuw nsw i64 %indvars.iv213, 1
  %cmp3189.us = icmp ult i64 %indvars.iv.next214, %2
  br i1 %cmp3189.us, label %for.body5.lr.ph.us, label %for.cond.loopexit.us

for.cond.loopexit.us:                             ; preds = %for.cond9.for.end_crit_edge.us.us, %for.body.us
  %nglen.1.lcssa.us = phi i32 [ %nglen.0197.us, %for.body.us ], [ %add119.us.us, %for.cond9.for.end_crit_edge.us.us ]
  %score.1.lcssa.us = phi i64 [ %score.0198.us, %for.body.us ], [ %conv111.us.us, %for.cond9.for.end_crit_edge.us.us ]
  %indvars.iv.next207 = add nuw nsw i64 %indvars.iv206, 1
  %exitcond217.not = icmp eq i64 %indvars.iv.next214, %wide.trip.count216
  br i1 %exitcond217.not, label %for.end125, label %for.body.us, !llvm.loop !337

for.body5.lr.ph.us:                               ; preds = %for.body.us
  %arrayidx6.us = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv213
  %3 = load ptr, ptr %arrayidx6.us, align 8, !tbaa !13
  %arrayidx14.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv213
  %4 = load ptr, ptr %arrayidx14.us, align 8, !tbaa !13
  br label %for.body5.us.us

for.body5.us.us:                                  ; preds = %for.cond9.for.end_crit_edge.us.us, %for.body5.lr.ph.us
  %indvars.iv208 = phi i64 [ %indvars.iv.next209, %for.cond9.for.end_crit_edge.us.us ], [ %indvars.iv206, %for.body5.lr.ph.us ]
  %score.1192.us.us = phi i64 [ %conv111.us.us, %for.cond9.for.end_crit_edge.us.us ], [ %score.0198.us, %for.body5.lr.ph.us ]
  %nglen.1190.us.us = phi i32 [ %add119.us.us, %for.cond9.for.end_crit_edge.us.us ], [ %nglen.0197.us, %for.body5.lr.ph.us ]
  %arrayidx8.us.us = getelementptr inbounds double, ptr %3, i64 %indvars.iv208
  %5 = load double, ptr %arrayidx8.us.us, align 8, !tbaa !20
  %arrayidx21.us.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv208
  %6 = load ptr, ptr %arrayidx21.us.us, align 8, !tbaa !13
  br label %for.body12.us.us

for.body12.us.us:                                 ; preds = %for.body12.us.us, %for.body5.us.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body12.us.us ], [ 0, %for.body5.us.us ]
  %score.2187.us.us = phi i64 [ %conv111.us.us, %for.body12.us.us ], [ %score.1192.us.us, %for.body5.us.us ]
  %nglen.2186.us.us = phi i32 [ %add119.us.us, %for.body12.us.us ], [ %nglen.1190.us.us, %for.body5.us.us ]
  %gc2.0184.us.us = phi i32 [ %conv26.us.us, %for.body12.us.us ], [ 0, %for.body5.us.us ]
  %gc1.0183.us.us = phi i32 [ %conv19.us.us, %for.body12.us.us ], [ 0, %for.body5.us.us ]
  %arrayidx16.us.us = getelementptr inbounds i8, ptr %4, i64 %indvars.iv
  %7 = load i8, ptr %arrayidx16.us.us, align 1, !tbaa !5
  %cmp18.us.us = icmp eq i8 %7, 45
  %conv19.us.us = zext i1 %cmp18.us.us to i32
  %arrayidx23.us.us = getelementptr inbounds i8, ptr %6, i64 %indvars.iv
  %8 = load i8, ptr %arrayidx23.us.us, align 1, !tbaa !5
  %cmp25.us.us = icmp eq i8 %8, 45
  %conv26.us.us = zext i1 %cmp25.us.us to i32
  %lnot.ext.us.us = xor i32 %gc1.0183.us.us, 1
  %mul.us.us = select i1 %cmp18.us.us, i32 %lnot.ext.us.us, i32 0
  %lnot.ext29.us.us = xor i32 %gc2.0184.us.us, 1
  %mul41.us.us = select i1 %cmp18.us.us, i32 0, i32 %lnot.ext.us.us
  %add47.v.us.us = select i1 %cmp25.us.us, i32 %mul41.us.us, i32 %mul.us.us
  %add47.us.us = mul nuw nsw i32 %add47.v.us.us, %lnot.ext29.us.us
  %mul52.us.us = mul nuw nsw i32 %mul.us.us, %gc2.0184.us.us
  %mul61.us.us = select i1 %cmp18.us.us, i32 0, i32 %gc1.0183.us.us
  %mul65.us.us = mul nuw nsw i32 %mul61.us.us, %lnot.ext29.us.us
  %add57.us.us = select i1 %cmp25.us.us, i32 %mul65.us.us, i32 %mul52.us.us
  %add67.us.us = add nuw nsw i32 %add57.us.us, %add47.us.us
  %conv68.us.us = sitofp i32 %add67.us.us to double
  %mul73.us.us = mul nuw nsw i32 %mul61.us.us, %gc2.0184.us.us
  %9 = sitofp i32 %mul73.us.us to double
  %conv75.us.us = select i1 %cmp25.us.us, double %9, double 0.000000e+00
  %10 = fadd double %conv75.us.us, %conv68.us.us
  %mul77.us.us = select i1 %cmp18.us.us, i32 %gc1.0183.us.us, i32 0
  %mul78.us.us = mul nuw nsw i32 %mul77.us.us, %gc2.0184.us.us
  %11 = sitofp i32 %mul78.us.us to double
  %conv83.us.us = select i1 %cmp25.us.us, double 0.000000e+00, double %11
  %12 = fadd double %conv83.us.us, %10
  %conv85.us.us = fptosi double %12 to i32
  %conv86.us.us = sext i32 %conv85.us.us to i64
  %mul88.us.us = mul nsw i64 %conv86.us.us, %conv87
  %conv89.us.us = sitofp i64 %mul88.us.us to double
  %conv91.us.us = sitofp i64 %score.2187.us.us to double
  %13 = tail call double @llvm.fmuladd.f64(double %conv89.us.us, double %5, double %conv91.us.us)
  %conv92.us.us = fptosi double %13 to i64
  %idxprom98.us.us = sext i8 %7 to i64
  %idxprom105.us.us = sext i8 %8 to i64
  %arrayidx106.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom98.us.us, i64 %idxprom105.us.us
  %14 = load i32, ptr %arrayidx106.us.us, align 4, !tbaa !10
  %conv108.us.us = sitofp i32 %14 to double
  %conv110.us.us = sitofp i64 %conv92.us.us to double
  %15 = tail call double @llvm.fmuladd.f64(double %conv108.us.us, double %5, double %conv110.us.us)
  %conv111.us.us = fptosi double %15 to i64
  %mulbool.demorgan.us.us = or i1 %cmp18.us.us, %cmp25.us.us
  %mulbool.us.us = xor i1 %mulbool.demorgan.us.us, true
  %mul118.us.us = zext i1 %mulbool.us.us to i32
  %add119.us.us = add nsw i32 %nglen.2186.us.us, %mul118.us.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond9.for.end_crit_edge.us.us, label %for.body12.us.us, !llvm.loop !338

for.cond9.for.end_crit_edge.us.us:                ; preds = %for.body12.us.us
  %indvars.iv.next209 = add nuw nsw i64 %indvars.iv208, 1
  %exitcond212.not = icmp eq i64 %indvars.iv.next209, %wide.trip.count211
  br i1 %exitcond212.not, label %for.cond.loopexit.us, label %for.body5.us.us, !llvm.loop !339

for.end125:                                       ; preds = %for.cond.loopexit.us, %for.body.lr.ph, %entry
  %nglen.0.lcssa = phi i32 [ 0, %entry ], [ 0, %for.body.lr.ph ], [ %nglen.1.lcssa.us, %for.cond.loopexit.us ]
  %score.0.lcssa = phi i64 [ 0, %entry ], [ 0, %for.body.lr.ph ], [ %score.1.lcssa.us, %for.cond.loopexit.us ]
  %conv126 = sitofp i64 %score.0.lcssa to float
  %conv127 = sitofp i32 %nglen.0.lcssa to float
  %div = fdiv float %conv126, %conv127
  %conv128 = fpext float %div to double
  %16 = load i32, ptr @scoremtx, align 4, !tbaa !10
  %tobool129.not = icmp eq i32 %16, 0
  %conv132 = uitofp i1 %tobool129.not to double
  %17 = tail call double @llvm.fmuladd.f64(double %conv132, double 4.000000e+02, double %conv128)
  %conv134 = fptrunc double %17 to float
  ret float %conv134
}

; Function Attrs: nounwind uwtable
define dso_local void @AllocateTmpSeqs(ptr nocapture noundef writeonly %mseq2pt, ptr nocapture noundef writeonly %mseq1pt, i32 noundef %locnlenmax) local_unnamed_addr #12 {
entry:
  %0 = load i32, ptr @njob, align 4, !tbaa !10
  %add = add nsw i32 %locnlenmax, 1
  %call = tail call ptr @AllocateCharMtx(i32 noundef %0, i32 noundef %add) #34
  store ptr %call, ptr %mseq2pt, align 8, !tbaa !13
  %call2 = tail call ptr @AllocateCharVec(i32 noundef %add) #34
  store ptr %call2, ptr %mseq1pt, align 8, !tbaa !13
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @FreeTmpSeqs(ptr noundef %mseq2, ptr nocapture noundef %mseq1) local_unnamed_addr #12 {
entry:
  tail call void @FreeCharMtx(ptr noundef %mseq2) #34
  tail call void @free(ptr noundef %mseq1) #34
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @gappick0(ptr nocapture noundef writeonly %aseq, ptr nocapture noundef readonly %seq) local_unnamed_addr #26 {
entry:
  br label %for.cond

for.cond:                                         ; preds = %for.inc, %entry
  %aseq.addr.0 = phi ptr [ %aseq, %entry ], [ %aseq.addr.1, %for.inc ]
  %seq.addr.0 = phi ptr [ %seq, %entry ], [ %incdec.ptr5, %for.inc ]
  %0 = load i8, ptr %seq.addr.0, align 1, !tbaa !5
  switch i8 %0, label %if.then [
    i8 0, label %for.end
    i8 45, label %for.inc
  ]

if.then:                                          ; preds = %for.cond
  %incdec.ptr = getelementptr inbounds i8, ptr %aseq.addr.0, i64 1
  store i8 %0, ptr %aseq.addr.0, align 1, !tbaa !5
  br label %for.inc

for.inc:                                          ; preds = %for.cond, %if.then
  %aseq.addr.1 = phi ptr [ %incdec.ptr, %if.then ], [ %aseq.addr.0, %for.cond ]
  %incdec.ptr5 = getelementptr inbounds i8, ptr %seq.addr.0, i64 1
  br label %for.cond, !llvm.loop !340

for.end:                                          ; preds = %for.cond
  store i8 0, ptr %aseq.addr.0, align 1, !tbaa !5
  ret void
}

; Function Attrs: nofree nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @gappick(i32 noundef %nseq, i32 noundef %s, ptr nocapture noundef readonly %aseq, ptr nocapture noundef readonly %mseq2, ptr nocapture noundef readonly %eff, ptr nocapture noundef writeonly %effarr) local_unnamed_addr #5 {
entry:
  %0 = load ptr, ptr %aseq, align 8, !tbaa !13
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #31
  %conv = trunc i64 %call to i32
  %cmp109 = icmp sgt i32 %conv, 0
  br i1 %cmp109, label %for.cond2.preheader.lr.ph, label %for.cond42.preheader

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %cmp18106 = icmp sgt i32 %nseq, 0
  br i1 %cmp18106, label %for.cond2.preheader.us.us.preheader, label %for.end70

for.cond2.preheader.us.us.preheader:              ; preds = %for.cond2.preheader.lr.ph
  %1 = zext i32 %s to i64
  %wide.trip.count162 = and i64 %call, 4294967295
  %wide.trip.count = zext i32 %nseq to i64
  %2 = add nsw i64 %wide.trip.count, -1
  %xtraiter = and i64 %wide.trip.count, 1
  %3 = icmp eq i64 %2, 0
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  %xtraiter178 = and i64 %wide.trip.count, 1
  %4 = icmp eq i64 %2, 0
  %unroll_iter180 = and i64 %wide.trip.count, 4294967294
  %lcmp.mod179.not = icmp eq i64 %xtraiter178, 0
  br label %for.cond2.preheader.us.us

for.cond2.preheader.us.us:                        ; preds = %for.cond2.preheader.us.us.preheader, %for.inc39.us.us
  %indvars.iv159 = phi i64 [ 0, %for.cond2.preheader.us.us.preheader ], [ %indvars.iv.next160, %for.inc39.us.us ]
  %count.0110.us.us = phi i32 [ 0, %for.cond2.preheader.us.us.preheader ], [ %count.1.us.us, %for.inc39.us.us ]
  br i1 %3, label %for.cond2.for.end_crit_edge.us.us.unr-lcssa, label %for.body5.us.us

for.inc39.us.us:                                  ; preds = %for.cond17.for.end36_crit_edge.us.us, %for.cond2.for.end_crit_edge.us.us
  %count.1.us.us = phi i32 [ %inc37.us.us, %for.cond17.for.end36_crit_edge.us.us ], [ %count.0110.us.us, %for.cond2.for.end_crit_edge.us.us ]
  %indvars.iv.next160 = add nuw nsw i64 %indvars.iv159, 1
  %exitcond163.not = icmp eq i64 %indvars.iv.next160, %wide.trip.count162
  br i1 %exitcond163.not, label %for.cond42.preheader, label %for.cond2.preheader.us.us, !llvm.loop !341

for.body20.us.us:                                 ; preds = %for.cond17.preheader.us.us, %for.inc34.us.us.1
  %indvars.iv154 = phi i64 [ %indvars.iv.next155.1, %for.inc34.us.us.1 ], [ 0, %for.cond17.preheader.us.us ]
  %countjob.0108.us.us = phi i32 [ %countjob.1.us.us.1, %for.inc34.us.us.1 ], [ 0, %for.cond17.preheader.us.us ]
  %niter181 = phi i64 [ %niter181.next.1, %for.inc34.us.us.1 ], [ 0, %for.cond17.preheader.us.us ]
  %cmp21.not.us.us = icmp eq i64 %indvars.iv154, %1
  br i1 %cmp21.not.us.us, label %for.inc34.us.us, label %if.then23.us.us

if.then23.us.us:                                  ; preds = %for.body20.us.us
  %arrayidx25.us.us = getelementptr inbounds ptr, ptr %aseq, i64 %indvars.iv154
  %5 = load ptr, ptr %arrayidx25.us.us, align 8, !tbaa !13
  %arrayidx27.us.us = getelementptr inbounds i8, ptr %5, i64 %indvars.iv159
  %6 = load i8, ptr %arrayidx27.us.us, align 1, !tbaa !5
  %idxprom28.us.us = sext i32 %countjob.0108.us.us to i64
  %arrayidx29.us.us = getelementptr inbounds ptr, ptr %mseq2, i64 %idxprom28.us.us
  %7 = load ptr, ptr %arrayidx29.us.us, align 8, !tbaa !13
  %arrayidx31.us.us = getelementptr inbounds i8, ptr %7, i64 %idxprom30.us.us
  store i8 %6, ptr %arrayidx31.us.us, align 1, !tbaa !5
  %inc32.us.us = add nsw i32 %countjob.0108.us.us, 1
  br label %for.inc34.us.us

for.inc34.us.us:                                  ; preds = %if.then23.us.us, %for.body20.us.us
  %countjob.1.us.us = phi i32 [ %inc32.us.us, %if.then23.us.us ], [ %countjob.0108.us.us, %for.body20.us.us ]
  %indvars.iv.next155 = or i64 %indvars.iv154, 1
  %cmp21.not.us.us.1 = icmp eq i64 %indvars.iv.next155, %1
  br i1 %cmp21.not.us.us.1, label %for.inc34.us.us.1, label %if.then23.us.us.1

if.then23.us.us.1:                                ; preds = %for.inc34.us.us
  %arrayidx25.us.us.1 = getelementptr inbounds ptr, ptr %aseq, i64 %indvars.iv.next155
  %8 = load ptr, ptr %arrayidx25.us.us.1, align 8, !tbaa !13
  %arrayidx27.us.us.1 = getelementptr inbounds i8, ptr %8, i64 %indvars.iv159
  %9 = load i8, ptr %arrayidx27.us.us.1, align 1, !tbaa !5
  %idxprom28.us.us.1 = sext i32 %countjob.1.us.us to i64
  %arrayidx29.us.us.1 = getelementptr inbounds ptr, ptr %mseq2, i64 %idxprom28.us.us.1
  %10 = load ptr, ptr %arrayidx29.us.us.1, align 8, !tbaa !13
  %arrayidx31.us.us.1 = getelementptr inbounds i8, ptr %10, i64 %idxprom30.us.us
  store i8 %9, ptr %arrayidx31.us.us.1, align 1, !tbaa !5
  %inc32.us.us.1 = add nsw i32 %countjob.1.us.us, 1
  br label %for.inc34.us.us.1

for.inc34.us.us.1:                                ; preds = %if.then23.us.us.1, %for.inc34.us.us
  %countjob.1.us.us.1 = phi i32 [ %inc32.us.us.1, %if.then23.us.us.1 ], [ %countjob.1.us.us, %for.inc34.us.us ]
  %indvars.iv.next155.1 = add nuw nsw i64 %indvars.iv154, 2
  %niter181.next.1 = add i64 %niter181, 2
  %niter181.ncmp.1 = icmp eq i64 %niter181.next.1, %unroll_iter180
  br i1 %niter181.ncmp.1, label %for.cond17.for.end36_crit_edge.us.us.unr-lcssa, label %for.body20.us.us, !llvm.loop !342

for.body5.us.us:                                  ; preds = %for.cond2.preheader.us.us, %for.inc.us.us.1
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %for.inc.us.us.1 ], [ 0, %for.cond2.preheader.us.us ]
  %allgap.0105.us.us = phi i32 [ %allgap.1.us.us.1, %for.inc.us.us.1 ], [ 1, %for.cond2.preheader.us.us ]
  %niter = phi i64 [ %niter.next.1, %for.inc.us.us.1 ], [ 0, %for.cond2.preheader.us.us ]
  %cmp6.not.us.us = icmp eq i64 %indvars.iv, %1
  br i1 %cmp6.not.us.us, label %for.inc.us.us, label %if.then.us.us

if.then.us.us:                                    ; preds = %for.body5.us.us
  %arrayidx8.us.us = getelementptr inbounds ptr, ptr %aseq, i64 %indvars.iv
  %11 = load ptr, ptr %arrayidx8.us.us, align 8, !tbaa !13
  %arrayidx10.us.us = getelementptr inbounds i8, ptr %11, i64 %indvars.iv159
  %12 = load i8, ptr %arrayidx10.us.us, align 1, !tbaa !5
  %cmp12.us.us = icmp eq i8 %12, 45
  %mul.us.us = select i1 %cmp12.us.us, i32 %allgap.0105.us.us, i32 0
  br label %for.inc.us.us

for.inc.us.us:                                    ; preds = %if.then.us.us, %for.body5.us.us
  %allgap.1.us.us = phi i32 [ %mul.us.us, %if.then.us.us ], [ %allgap.0105.us.us, %for.body5.us.us ]
  %indvars.iv.next = or i64 %indvars.iv, 1
  %cmp6.not.us.us.1 = icmp eq i64 %indvars.iv.next, %1
  br i1 %cmp6.not.us.us.1, label %for.inc.us.us.1, label %if.then.us.us.1

if.then.us.us.1:                                  ; preds = %for.inc.us.us
  %arrayidx8.us.us.1 = getelementptr inbounds ptr, ptr %aseq, i64 %indvars.iv.next
  %13 = load ptr, ptr %arrayidx8.us.us.1, align 8, !tbaa !13
  %arrayidx10.us.us.1 = getelementptr inbounds i8, ptr %13, i64 %indvars.iv159
  %14 = load i8, ptr %arrayidx10.us.us.1, align 1, !tbaa !5
  %cmp12.us.us.1 = icmp eq i8 %14, 45
  %mul.us.us.1 = select i1 %cmp12.us.us.1, i32 %allgap.1.us.us, i32 0
  br label %for.inc.us.us.1

for.inc.us.us.1:                                  ; preds = %if.then.us.us.1, %for.inc.us.us
  %allgap.1.us.us.1 = phi i32 [ %mul.us.us.1, %if.then.us.us.1 ], [ %allgap.1.us.us, %for.inc.us.us ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond2.for.end_crit_edge.us.us.unr-lcssa, label %for.body5.us.us, !llvm.loop !343

for.cond17.preheader.us.us:                       ; preds = %for.cond2.for.end_crit_edge.us.us
  %idxprom30.us.us = sext i32 %count.0110.us.us to i64
  br i1 %4, label %for.cond17.for.end36_crit_edge.us.us.unr-lcssa, label %for.body20.us.us

for.cond2.for.end_crit_edge.us.us.unr-lcssa:      ; preds = %for.inc.us.us.1, %for.cond2.preheader.us.us
  %allgap.1.us.us.lcssa.ph = phi i32 [ undef, %for.cond2.preheader.us.us ], [ %allgap.1.us.us.1, %for.inc.us.us.1 ]
  %indvars.iv.unr = phi i64 [ 0, %for.cond2.preheader.us.us ], [ %indvars.iv.next.1, %for.inc.us.us.1 ]
  %allgap.0105.us.us.unr = phi i32 [ 1, %for.cond2.preheader.us.us ], [ %allgap.1.us.us.1, %for.inc.us.us.1 ]
  br i1 %lcmp.mod.not, label %for.cond2.for.end_crit_edge.us.us, label %for.body5.us.us.epil

for.body5.us.us.epil:                             ; preds = %for.cond2.for.end_crit_edge.us.us.unr-lcssa
  %cmp6.not.us.us.epil = icmp eq i64 %indvars.iv.unr, %1
  br i1 %cmp6.not.us.us.epil, label %for.cond2.for.end_crit_edge.us.us, label %if.then.us.us.epil

if.then.us.us.epil:                               ; preds = %for.body5.us.us.epil
  %arrayidx8.us.us.epil = getelementptr inbounds ptr, ptr %aseq, i64 %indvars.iv.unr
  %15 = load ptr, ptr %arrayidx8.us.us.epil, align 8, !tbaa !13
  %arrayidx10.us.us.epil = getelementptr inbounds i8, ptr %15, i64 %indvars.iv159
  %16 = load i8, ptr %arrayidx10.us.us.epil, align 1, !tbaa !5
  %cmp12.us.us.epil = icmp eq i8 %16, 45
  %mul.us.us.epil = select i1 %cmp12.us.us.epil, i32 %allgap.0105.us.us.unr, i32 0
  br label %for.cond2.for.end_crit_edge.us.us

for.cond2.for.end_crit_edge.us.us:                ; preds = %for.body5.us.us.epil, %if.then.us.us.epil, %for.cond2.for.end_crit_edge.us.us.unr-lcssa
  %allgap.1.us.us.lcssa = phi i32 [ %allgap.1.us.us.lcssa.ph, %for.cond2.for.end_crit_edge.us.us.unr-lcssa ], [ %mul.us.us.epil, %if.then.us.us.epil ], [ %allgap.0105.us.us.unr, %for.body5.us.us.epil ]
  %cmp14.us.us = icmp eq i32 %allgap.1.us.us.lcssa, 0
  br i1 %cmp14.us.us, label %for.cond17.preheader.us.us, label %for.inc39.us.us

for.cond17.for.end36_crit_edge.us.us.unr-lcssa:   ; preds = %for.inc34.us.us.1, %for.cond17.preheader.us.us
  %indvars.iv154.unr = phi i64 [ 0, %for.cond17.preheader.us.us ], [ %indvars.iv.next155.1, %for.inc34.us.us.1 ]
  %countjob.0108.us.us.unr = phi i32 [ 0, %for.cond17.preheader.us.us ], [ %countjob.1.us.us.1, %for.inc34.us.us.1 ]
  %cmp21.not.us.us.epil = icmp eq i64 %indvars.iv154.unr, %1
  %or.cond = select i1 %lcmp.mod179.not, i1 true, i1 %cmp21.not.us.us.epil
  br i1 %or.cond, label %for.cond17.for.end36_crit_edge.us.us, label %if.then23.us.us.epil

if.then23.us.us.epil:                             ; preds = %for.cond17.for.end36_crit_edge.us.us.unr-lcssa
  %arrayidx25.us.us.epil = getelementptr inbounds ptr, ptr %aseq, i64 %indvars.iv154.unr
  %17 = load ptr, ptr %arrayidx25.us.us.epil, align 8, !tbaa !13
  %arrayidx27.us.us.epil = getelementptr inbounds i8, ptr %17, i64 %indvars.iv159
  %18 = load i8, ptr %arrayidx27.us.us.epil, align 1, !tbaa !5
  %idxprom28.us.us.epil = sext i32 %countjob.0108.us.us.unr to i64
  %arrayidx29.us.us.epil = getelementptr inbounds ptr, ptr %mseq2, i64 %idxprom28.us.us.epil
  %19 = load ptr, ptr %arrayidx29.us.us.epil, align 8, !tbaa !13
  %arrayidx31.us.us.epil = getelementptr inbounds i8, ptr %19, i64 %idxprom30.us.us
  store i8 %18, ptr %arrayidx31.us.us.epil, align 1, !tbaa !5
  br label %for.cond17.for.end36_crit_edge.us.us

for.cond17.for.end36_crit_edge.us.us:             ; preds = %if.then23.us.us.epil, %for.cond17.for.end36_crit_edge.us.us.unr-lcssa
  %inc37.us.us = add nsw i32 %count.0110.us.us, 1
  br label %for.inc39.us.us

for.cond42.preheader:                             ; preds = %for.inc39.us.us, %entry
  %count.0.lcssa = phi i32 [ 0, %entry ], [ %count.1.us.us, %for.inc39.us.us ]
  %cmp43147 = icmp sgt i32 %nseq, 1
  br i1 %cmp43147, label %for.body45.lr.ph, label %for.cond53.preheader

for.body45.lr.ph:                                 ; preds = %for.cond42.preheader
  %sub = add nsw i32 %nseq, -1
  %idxprom48 = sext i32 %count.0.lcssa to i64
  %wide.trip.count167 = zext i32 %sub to i64
  %20 = add nsw i64 %wide.trip.count167, -1
  %xtraiter182 = and i64 %wide.trip.count167, 3
  %21 = icmp ult i64 %20, 3
  br i1 %21, label %for.cond53.preheader.loopexit.unr-lcssa, label %for.body45.lr.ph.new

for.body45.lr.ph.new:                             ; preds = %for.body45.lr.ph
  %unroll_iter184 = and i64 %wide.trip.count167, 4294967292
  br label %for.body45

for.cond53.preheader.loopexit.unr-lcssa:          ; preds = %for.body45, %for.body45.lr.ph
  %indvars.iv164.unr = phi i64 [ 0, %for.body45.lr.ph ], [ %indvars.iv.next165.3, %for.body45 ]
  %lcmp.mod183.not = icmp eq i64 %xtraiter182, 0
  br i1 %lcmp.mod183.not, label %for.cond53.preheader, label %for.body45.epil

for.body45.epil:                                  ; preds = %for.cond53.preheader.loopexit.unr-lcssa, %for.body45.epil
  %indvars.iv164.epil = phi i64 [ %indvars.iv.next165.epil, %for.body45.epil ], [ %indvars.iv164.unr, %for.cond53.preheader.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body45.epil ], [ 0, %for.cond53.preheader.loopexit.unr-lcssa ]
  %arrayidx47.epil = getelementptr inbounds ptr, ptr %mseq2, i64 %indvars.iv164.epil
  %22 = load ptr, ptr %arrayidx47.epil, align 8, !tbaa !13
  %arrayidx49.epil = getelementptr inbounds i8, ptr %22, i64 %idxprom48
  store i8 0, ptr %arrayidx49.epil, align 1, !tbaa !5
  %indvars.iv.next165.epil = add nuw nsw i64 %indvars.iv164.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter182
  br i1 %epil.iter.cmp.not, label %for.cond53.preheader, label %for.body45.epil, !llvm.loop !344

for.cond53.preheader:                             ; preds = %for.cond53.preheader.loopexit.unr-lcssa, %for.body45.epil, %for.cond42.preheader
  %cmp54149 = icmp sgt i32 %nseq, 0
  br i1 %cmp54149, label %for.body56.lr.ph, label %for.end70

for.body56.lr.ph:                                 ; preds = %for.cond53.preheader
  %idxprom60 = sext i32 %s to i64
  %arrayidx61 = getelementptr inbounds ptr, ptr %eff, i64 %idxprom60
  %23 = zext i32 %s to i64
  %wide.trip.count172 = zext i32 %nseq to i64
  %xtraiter186 = and i64 %wide.trip.count172, 1
  %24 = icmp eq i32 %nseq, 1
  br i1 %24, label %for.end70.loopexit.unr-lcssa, label %for.body56.lr.ph.new

for.body56.lr.ph.new:                             ; preds = %for.body56.lr.ph
  %unroll_iter189 = and i64 %wide.trip.count172, 4294967294
  br label %for.body56

for.body45:                                       ; preds = %for.body45, %for.body45.lr.ph.new
  %indvars.iv164 = phi i64 [ 0, %for.body45.lr.ph.new ], [ %indvars.iv.next165.3, %for.body45 ]
  %niter185 = phi i64 [ 0, %for.body45.lr.ph.new ], [ %niter185.next.3, %for.body45 ]
  %arrayidx47 = getelementptr inbounds ptr, ptr %mseq2, i64 %indvars.iv164
  %25 = load ptr, ptr %arrayidx47, align 8, !tbaa !13
  %arrayidx49 = getelementptr inbounds i8, ptr %25, i64 %idxprom48
  store i8 0, ptr %arrayidx49, align 1, !tbaa !5
  %indvars.iv.next165 = or i64 %indvars.iv164, 1
  %arrayidx47.1 = getelementptr inbounds ptr, ptr %mseq2, i64 %indvars.iv.next165
  %26 = load ptr, ptr %arrayidx47.1, align 8, !tbaa !13
  %arrayidx49.1 = getelementptr inbounds i8, ptr %26, i64 %idxprom48
  store i8 0, ptr %arrayidx49.1, align 1, !tbaa !5
  %indvars.iv.next165.1 = or i64 %indvars.iv164, 2
  %arrayidx47.2 = getelementptr inbounds ptr, ptr %mseq2, i64 %indvars.iv.next165.1
  %27 = load ptr, ptr %arrayidx47.2, align 8, !tbaa !13
  %arrayidx49.2 = getelementptr inbounds i8, ptr %27, i64 %idxprom48
  store i8 0, ptr %arrayidx49.2, align 1, !tbaa !5
  %indvars.iv.next165.2 = or i64 %indvars.iv164, 3
  %arrayidx47.3 = getelementptr inbounds ptr, ptr %mseq2, i64 %indvars.iv.next165.2
  %28 = load ptr, ptr %arrayidx47.3, align 8, !tbaa !13
  %arrayidx49.3 = getelementptr inbounds i8, ptr %28, i64 %idxprom48
  store i8 0, ptr %arrayidx49.3, align 1, !tbaa !5
  %indvars.iv.next165.3 = add nuw nsw i64 %indvars.iv164, 4
  %niter185.next.3 = add i64 %niter185, 4
  %niter185.ncmp.3 = icmp eq i64 %niter185.next.3, %unroll_iter184
  br i1 %niter185.ncmp.3, label %for.cond53.preheader.loopexit.unr-lcssa, label %for.body45, !llvm.loop !345

for.body56:                                       ; preds = %for.inc68.1, %for.body56.lr.ph.new
  %indvars.iv169 = phi i64 [ 0, %for.body56.lr.ph.new ], [ %indvars.iv.next170.1, %for.inc68.1 ]
  %countjob.2150 = phi i32 [ 0, %for.body56.lr.ph.new ], [ %countjob.3.1, %for.inc68.1 ]
  %niter190 = phi i64 [ 0, %for.body56.lr.ph.new ], [ %niter190.next.1, %for.inc68.1 ]
  %cmp57.not = icmp eq i64 %indvars.iv169, %23
  br i1 %cmp57.not, label %for.inc68, label %if.then59

if.then59:                                        ; preds = %for.body56
  %29 = load ptr, ptr %arrayidx61, align 8, !tbaa !13
  %arrayidx63 = getelementptr inbounds double, ptr %29, i64 %indvars.iv169
  %30 = load double, ptr %arrayidx63, align 8, !tbaa !20
  %idxprom64 = sext i32 %countjob.2150 to i64
  %arrayidx65 = getelementptr inbounds double, ptr %effarr, i64 %idxprom64
  store double %30, ptr %arrayidx65, align 8, !tbaa !20
  %inc66 = add nsw i32 %countjob.2150, 1
  br label %for.inc68

for.inc68:                                        ; preds = %for.body56, %if.then59
  %countjob.3 = phi i32 [ %inc66, %if.then59 ], [ %countjob.2150, %for.body56 ]
  %indvars.iv.next170 = or i64 %indvars.iv169, 1
  %cmp57.not.1 = icmp eq i64 %indvars.iv.next170, %23
  br i1 %cmp57.not.1, label %for.inc68.1, label %if.then59.1

if.then59.1:                                      ; preds = %for.inc68
  %31 = load ptr, ptr %arrayidx61, align 8, !tbaa !13
  %arrayidx63.1 = getelementptr inbounds double, ptr %31, i64 %indvars.iv.next170
  %32 = load double, ptr %arrayidx63.1, align 8, !tbaa !20
  %idxprom64.1 = sext i32 %countjob.3 to i64
  %arrayidx65.1 = getelementptr inbounds double, ptr %effarr, i64 %idxprom64.1
  store double %32, ptr %arrayidx65.1, align 8, !tbaa !20
  %inc66.1 = add nsw i32 %countjob.3, 1
  br label %for.inc68.1

for.inc68.1:                                      ; preds = %if.then59.1, %for.inc68
  %countjob.3.1 = phi i32 [ %inc66.1, %if.then59.1 ], [ %countjob.3, %for.inc68 ]
  %indvars.iv.next170.1 = add nuw nsw i64 %indvars.iv169, 2
  %niter190.next.1 = add i64 %niter190, 2
  %niter190.ncmp.1 = icmp eq i64 %niter190.next.1, %unroll_iter189
  br i1 %niter190.ncmp.1, label %for.end70.loopexit.unr-lcssa, label %for.body56, !llvm.loop !346

for.end70.loopexit.unr-lcssa:                     ; preds = %for.inc68.1, %for.body56.lr.ph
  %indvars.iv169.unr = phi i64 [ 0, %for.body56.lr.ph ], [ %indvars.iv.next170.1, %for.inc68.1 ]
  %countjob.2150.unr = phi i32 [ 0, %for.body56.lr.ph ], [ %countjob.3.1, %for.inc68.1 ]
  %lcmp.mod188.not = icmp eq i64 %xtraiter186, 0
  %cmp57.not.epil = icmp eq i64 %indvars.iv169.unr, %23
  %or.cond191 = select i1 %lcmp.mod188.not, i1 true, i1 %cmp57.not.epil
  br i1 %or.cond191, label %for.end70, label %if.then59.epil

if.then59.epil:                                   ; preds = %for.end70.loopexit.unr-lcssa
  %33 = load ptr, ptr %arrayidx61, align 8, !tbaa !13
  %arrayidx63.epil = getelementptr inbounds double, ptr %33, i64 %indvars.iv169.unr
  %34 = load double, ptr %arrayidx63.epil, align 8, !tbaa !20
  %idxprom64.epil = sext i32 %countjob.2150.unr to i64
  %arrayidx65.epil = getelementptr inbounds double, ptr %effarr, i64 %idxprom64.epil
  store double %34, ptr %arrayidx65.epil, align 8, !tbaa !20
  br label %for.end70

for.end70:                                        ; preds = %for.end70.loopexit.unr-lcssa, %if.then59.epil, %for.cond2.preheader.lr.ph, %for.cond53.preheader
  ret void
}

; Function Attrs: nofree nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @commongappick_record(i32 noundef %nseq, ptr nocapture noundef readonly %seq, ptr nocapture noundef writeonly %map) local_unnamed_addr #5 {
entry:
  %0 = load ptr, ptr %seq, align 8, !tbaa !13
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #31
  %1 = and i64 %call, 2147483648
  %cmp.not60.not = icmp eq i64 %1, 0
  br i1 %cmp.not60.not, label %for.cond2.preheader.lr.ph, label %for.end36

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %cmp355 = icmp sgt i32 %nseq, 0
  br i1 %cmp355, label %for.cond2.preheader.us.us.preheader, label %for.cond2.preheader.lr.ph.split

for.cond2.preheader.us.us.preheader:              ; preds = %for.cond2.preheader.lr.ph
  %2 = add nuw i64 %call, 1
  %wide.trip.count122 = and i64 %2, 4294967295
  %wide.trip.count112 = zext i32 %nseq to i64
  %xtraiter = and i64 %wide.trip.count112, 3
  %3 = icmp ult i32 %nseq, 4
  %unroll_iter = and i64 %wide.trip.count112, 4294967292
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us.us

for.cond2.preheader.us.us:                        ; preds = %for.cond2.preheader.us.us.preheader, %for.inc34.us.us
  %indvars.iv119 = phi i64 [ 0, %for.cond2.preheader.us.us.preheader ], [ %indvars.iv.next120, %for.inc34.us.us ]
  %count.061.us.us = phi i32 [ 0, %for.cond2.preheader.us.us.preheader ], [ %count.1.us.us, %for.inc34.us.us ]
  br label %for.body5.us.us

for.body5.us.us:                                  ; preds = %for.inc.us.us, %for.cond2.preheader.us.us
  %indvars.iv109 = phi i64 [ %indvars.iv.next110, %for.inc.us.us ], [ 0, %for.cond2.preheader.us.us ]
  %arrayidx6.us.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv109
  %4 = load ptr, ptr %arrayidx6.us.us, align 8, !tbaa !13
  %arrayidx8.us.us = getelementptr inbounds i8, ptr %4, i64 %indvars.iv119
  %5 = load i8, ptr %arrayidx8.us.us, align 1, !tbaa !5
  %cmp10.not.us.us = icmp eq i8 %5, 45
  br i1 %cmp10.not.us.us, label %for.inc.us.us, label %for.end.us.us

for.end.us.us:                                    ; preds = %for.body5.us.us
  %6 = trunc i64 %indvars.iv109 to i32
  %cmp12.not.us.us = icmp eq i32 %6, %nseq
  br i1 %cmp12.not.us.us, label %for.inc34.us.us, label %for.cond15.preheader.us.us

for.body18.us.us:                                 ; preds = %for.cond15.preheader.us.us, %for.body18.us.us
  %indvars.iv114 = phi i64 [ %indvars.iv.next115.3, %for.body18.us.us ], [ 0, %for.cond15.preheader.us.us ]
  %niter = phi i64 [ %niter.next.3, %for.body18.us.us ], [ 0, %for.cond15.preheader.us.us ]
  %arrayidx20.us.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv114
  %7 = load ptr, ptr %arrayidx20.us.us, align 8, !tbaa !13
  %arrayidx22.us.us = getelementptr inbounds i8, ptr %7, i64 %indvars.iv119
  %8 = load i8, ptr %arrayidx22.us.us, align 1, !tbaa !5
  %arrayidx26.us.us = getelementptr inbounds i8, ptr %7, i64 %idxprom25.us.us
  store i8 %8, ptr %arrayidx26.us.us, align 1, !tbaa !5
  %indvars.iv.next115 = or i64 %indvars.iv114, 1
  %arrayidx20.us.us.1 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv.next115
  %9 = load ptr, ptr %arrayidx20.us.us.1, align 8, !tbaa !13
  %arrayidx22.us.us.1 = getelementptr inbounds i8, ptr %9, i64 %indvars.iv119
  %10 = load i8, ptr %arrayidx22.us.us.1, align 1, !tbaa !5
  %arrayidx26.us.us.1 = getelementptr inbounds i8, ptr %9, i64 %idxprom25.us.us
  store i8 %10, ptr %arrayidx26.us.us.1, align 1, !tbaa !5
  %indvars.iv.next115.1 = or i64 %indvars.iv114, 2
  %arrayidx20.us.us.2 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv.next115.1
  %11 = load ptr, ptr %arrayidx20.us.us.2, align 8, !tbaa !13
  %arrayidx22.us.us.2 = getelementptr inbounds i8, ptr %11, i64 %indvars.iv119
  %12 = load i8, ptr %arrayidx22.us.us.2, align 1, !tbaa !5
  %arrayidx26.us.us.2 = getelementptr inbounds i8, ptr %11, i64 %idxprom25.us.us
  store i8 %12, ptr %arrayidx26.us.us.2, align 1, !tbaa !5
  %indvars.iv.next115.2 = or i64 %indvars.iv114, 3
  %arrayidx20.us.us.3 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv.next115.2
  %13 = load ptr, ptr %arrayidx20.us.us.3, align 8, !tbaa !13
  %arrayidx22.us.us.3 = getelementptr inbounds i8, ptr %13, i64 %indvars.iv119
  %14 = load i8, ptr %arrayidx22.us.us.3, align 1, !tbaa !5
  %arrayidx26.us.us.3 = getelementptr inbounds i8, ptr %13, i64 %idxprom25.us.us
  store i8 %14, ptr %arrayidx26.us.us.3, align 1, !tbaa !5
  %indvars.iv.next115.3 = add nuw nsw i64 %indvars.iv114, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.cond15.for.end29_crit_edge.us.us.unr-lcssa, label %for.body18.us.us, !llvm.loop !347

for.inc34.us.us:                                  ; preds = %for.inc.us.us, %for.cond15.for.end29_crit_edge.us.us, %for.end.us.us
  %count.1.us.us = phi i32 [ %inc32.us.us, %for.cond15.for.end29_crit_edge.us.us ], [ %count.061.us.us, %for.end.us.us ], [ %count.061.us.us, %for.inc.us.us ]
  %indvars.iv.next120 = add nuw nsw i64 %indvars.iv119, 1
  %exitcond123.not = icmp eq i64 %indvars.iv.next120, %wide.trip.count122
  br i1 %exitcond123.not, label %for.end36, label %for.cond2.preheader.us.us, !llvm.loop !348

for.inc.us.us:                                    ; preds = %for.body5.us.us
  %indvars.iv.next110 = add nuw nsw i64 %indvars.iv109, 1
  %exitcond113.not = icmp eq i64 %indvars.iv.next110, %wide.trip.count112
  br i1 %exitcond113.not, label %for.inc34.us.us, label %for.body5.us.us, !llvm.loop !349

for.cond15.preheader.us.us:                       ; preds = %for.end.us.us
  %idxprom25.us.us = sext i32 %count.061.us.us to i64
  br i1 %3, label %for.cond15.for.end29_crit_edge.us.us.unr-lcssa, label %for.body18.us.us

for.cond15.for.end29_crit_edge.us.us.unr-lcssa:   ; preds = %for.body18.us.us, %for.cond15.preheader.us.us
  %indvars.iv114.unr = phi i64 [ 0, %for.cond15.preheader.us.us ], [ %indvars.iv.next115.3, %for.body18.us.us ]
  br i1 %lcmp.mod.not, label %for.cond15.for.end29_crit_edge.us.us, label %for.body18.us.us.epil

for.body18.us.us.epil:                            ; preds = %for.cond15.for.end29_crit_edge.us.us.unr-lcssa, %for.body18.us.us.epil
  %indvars.iv114.epil = phi i64 [ %indvars.iv.next115.epil, %for.body18.us.us.epil ], [ %indvars.iv114.unr, %for.cond15.for.end29_crit_edge.us.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body18.us.us.epil ], [ 0, %for.cond15.for.end29_crit_edge.us.us.unr-lcssa ]
  %arrayidx20.us.us.epil = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv114.epil
  %15 = load ptr, ptr %arrayidx20.us.us.epil, align 8, !tbaa !13
  %arrayidx22.us.us.epil = getelementptr inbounds i8, ptr %15, i64 %indvars.iv119
  %16 = load i8, ptr %arrayidx22.us.us.epil, align 1, !tbaa !5
  %arrayidx26.us.us.epil = getelementptr inbounds i8, ptr %15, i64 %idxprom25.us.us
  store i8 %16, ptr %arrayidx26.us.us.epil, align 1, !tbaa !5
  %indvars.iv.next115.epil = add nuw nsw i64 %indvars.iv114.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond15.for.end29_crit_edge.us.us, label %for.body18.us.us.epil, !llvm.loop !350

for.cond15.for.end29_crit_edge.us.us:             ; preds = %for.body18.us.us.epil, %for.cond15.for.end29_crit_edge.us.us.unr-lcssa
  %arrayidx31.us.us = getelementptr inbounds i32, ptr %map, i64 %idxprom25.us.us
  %17 = trunc i64 %indvars.iv119 to i32
  store i32 %17, ptr %arrayidx31.us.us, align 4, !tbaa !10
  %inc32.us.us = add nsw i32 %count.061.us.us, 1
  br label %for.inc34.us.us

for.cond2.preheader.lr.ph.split:                  ; preds = %for.cond2.preheader.lr.ph
  %cmp12.not = icmp eq i32 %nseq, 0
  br i1 %cmp12.not, label %for.end36, label %for.cond2.preheader.preheader

for.cond2.preheader.preheader:                    ; preds = %for.cond2.preheader.lr.ph.split
  %18 = add nuw i64 %call, 1
  %wide.trip.count = and i64 %18, 4294967295
  %min.iters.check = icmp ult i64 %wide.trip.count, 8
  br i1 %min.iters.check, label %for.cond2.preheader.preheader132, label %vector.ph

vector.ph:                                        ; preds = %for.cond2.preheader.preheader
  %n.mod.vf = and i64 %18, 7
  %n.vec = sub nsw i64 %wide.trip.count, %n.mod.vf
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.ind = phi <4 x i32> [ <i32 0, i32 1, i32 2, i32 3>, %vector.ph ], [ %vec.ind.next, %vector.body ]
  %step.add = add <4 x i32> %vec.ind, <i32 4, i32 4, i32 4, i32 4>
  %19 = getelementptr inbounds i32, ptr %map, i64 %index
  store <4 x i32> %vec.ind, ptr %19, align 4, !tbaa !10
  %20 = getelementptr inbounds i32, ptr %19, i64 4
  store <4 x i32> %step.add, ptr %20, align 4, !tbaa !10
  %index.next = add nuw i64 %index, 8
  %vec.ind.next = add <4 x i32> %vec.ind, <i32 8, i32 8, i32 8, i32 8>
  %21 = icmp eq i64 %index.next, %n.vec
  br i1 %21, label %middle.block, label %vector.body, !llvm.loop !351

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.mod.vf, 0
  br i1 %cmp.n, label %for.end36, label %for.cond2.preheader.preheader132

for.cond2.preheader.preheader132:                 ; preds = %for.cond2.preheader.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ 0, %for.cond2.preheader.preheader ], [ %n.vec, %middle.block ]
  br label %for.cond2.preheader

for.cond2.preheader:                              ; preds = %for.cond2.preheader.preheader132, %for.cond2.preheader
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.cond2.preheader ], [ %indvars.iv.ph, %for.cond2.preheader.preheader132 ]
  %indvars94 = trunc i64 %indvars.iv to i32
  %arrayidx31 = getelementptr inbounds i32, ptr %map, i64 %indvars.iv
  store i32 %indvars94, ptr %arrayidx31, align 4, !tbaa !10
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end36, label %for.cond2.preheader, !llvm.loop !352

for.end36:                                        ; preds = %for.cond2.preheader, %for.inc34.us.us, %middle.block, %for.cond2.preheader.lr.ph.split, %entry
  ret void
}

; Function Attrs: nofree nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @commongappick(i32 noundef %nseq, ptr nocapture noundef readonly %seq) local_unnamed_addr #5 {
entry:
  %0 = load ptr, ptr %seq, align 8, !tbaa !13
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #31
  %1 = and i64 %call, 2147483648
  %cmp.not56.not = icmp eq i64 %1, 0
  %cmp351 = icmp sgt i32 %nseq, 0
  %or.cond = and i1 %cmp.not56.not, %cmp351
  br i1 %or.cond, label %for.cond2.preheader.us.us.preheader, label %for.end34

for.cond2.preheader.us.us.preheader:              ; preds = %entry
  %2 = add nuw i64 %call, 1
  %wide.trip.count110 = and i64 %2, 4294967295
  %wide.trip.count100 = zext i32 %nseq to i64
  %xtraiter = and i64 %wide.trip.count100, 3
  %3 = icmp ult i32 %nseq, 4
  %unroll_iter = and i64 %wide.trip.count100, 4294967292
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.cond2.preheader.us.us

for.cond2.preheader.us.us:                        ; preds = %for.cond2.preheader.us.us.preheader, %for.inc32.us.us
  %indvars.iv107 = phi i64 [ 0, %for.cond2.preheader.us.us.preheader ], [ %indvars.iv.next108, %for.inc32.us.us ]
  %count.057.us.us = phi i32 [ 0, %for.cond2.preheader.us.us.preheader ], [ %count.1.us.us, %for.inc32.us.us ]
  br label %for.body5.us.us

for.body5.us.us:                                  ; preds = %for.inc.us.us, %for.cond2.preheader.us.us
  %indvars.iv97 = phi i64 [ %indvars.iv.next98, %for.inc.us.us ], [ 0, %for.cond2.preheader.us.us ]
  %arrayidx6.us.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv97
  %4 = load ptr, ptr %arrayidx6.us.us, align 8, !tbaa !13
  %arrayidx8.us.us = getelementptr inbounds i8, ptr %4, i64 %indvars.iv107
  %5 = load i8, ptr %arrayidx8.us.us, align 1, !tbaa !5
  %cmp10.not.us.us = icmp eq i8 %5, 45
  br i1 %cmp10.not.us.us, label %for.inc.us.us, label %for.end.us.us

for.end.us.us:                                    ; preds = %for.body5.us.us
  %6 = trunc i64 %indvars.iv97 to i32
  %cmp12.not.us.us = icmp eq i32 %6, %nseq
  br i1 %cmp12.not.us.us, label %for.inc32.us.us, label %for.cond15.preheader.us.us

for.body18.us.us:                                 ; preds = %for.cond15.preheader.us.us, %for.body18.us.us
  %indvars.iv102 = phi i64 [ %indvars.iv.next103.3, %for.body18.us.us ], [ 0, %for.cond15.preheader.us.us ]
  %niter = phi i64 [ %niter.next.3, %for.body18.us.us ], [ 0, %for.cond15.preheader.us.us ]
  %arrayidx20.us.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv102
  %7 = load ptr, ptr %arrayidx20.us.us, align 8, !tbaa !13
  %arrayidx22.us.us = getelementptr inbounds i8, ptr %7, i64 %indvars.iv107
  %8 = load i8, ptr %arrayidx22.us.us, align 1, !tbaa !5
  %arrayidx26.us.us = getelementptr inbounds i8, ptr %7, i64 %idxprom25.us.us
  store i8 %8, ptr %arrayidx26.us.us, align 1, !tbaa !5
  %indvars.iv.next103 = or i64 %indvars.iv102, 1
  %arrayidx20.us.us.1 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv.next103
  %9 = load ptr, ptr %arrayidx20.us.us.1, align 8, !tbaa !13
  %arrayidx22.us.us.1 = getelementptr inbounds i8, ptr %9, i64 %indvars.iv107
  %10 = load i8, ptr %arrayidx22.us.us.1, align 1, !tbaa !5
  %arrayidx26.us.us.1 = getelementptr inbounds i8, ptr %9, i64 %idxprom25.us.us
  store i8 %10, ptr %arrayidx26.us.us.1, align 1, !tbaa !5
  %indvars.iv.next103.1 = or i64 %indvars.iv102, 2
  %arrayidx20.us.us.2 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv.next103.1
  %11 = load ptr, ptr %arrayidx20.us.us.2, align 8, !tbaa !13
  %arrayidx22.us.us.2 = getelementptr inbounds i8, ptr %11, i64 %indvars.iv107
  %12 = load i8, ptr %arrayidx22.us.us.2, align 1, !tbaa !5
  %arrayidx26.us.us.2 = getelementptr inbounds i8, ptr %11, i64 %idxprom25.us.us
  store i8 %12, ptr %arrayidx26.us.us.2, align 1, !tbaa !5
  %indvars.iv.next103.2 = or i64 %indvars.iv102, 3
  %arrayidx20.us.us.3 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv.next103.2
  %13 = load ptr, ptr %arrayidx20.us.us.3, align 8, !tbaa !13
  %arrayidx22.us.us.3 = getelementptr inbounds i8, ptr %13, i64 %indvars.iv107
  %14 = load i8, ptr %arrayidx22.us.us.3, align 1, !tbaa !5
  %arrayidx26.us.us.3 = getelementptr inbounds i8, ptr %13, i64 %idxprom25.us.us
  store i8 %14, ptr %arrayidx26.us.us.3, align 1, !tbaa !5
  %indvars.iv.next103.3 = add nuw nsw i64 %indvars.iv102, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.cond15.for.end29_crit_edge.us.us.unr-lcssa, label %for.body18.us.us, !llvm.loop !353

for.inc32.us.us:                                  ; preds = %for.inc.us.us, %for.cond15.for.end29_crit_edge.us.us, %for.end.us.us
  %count.1.us.us = phi i32 [ %inc30.us.us, %for.cond15.for.end29_crit_edge.us.us ], [ %count.057.us.us, %for.end.us.us ], [ %count.057.us.us, %for.inc.us.us ]
  %indvars.iv.next108 = add nuw nsw i64 %indvars.iv107, 1
  %exitcond111.not = icmp eq i64 %indvars.iv.next108, %wide.trip.count110
  br i1 %exitcond111.not, label %for.end34, label %for.cond2.preheader.us.us, !llvm.loop !354

for.inc.us.us:                                    ; preds = %for.body5.us.us
  %indvars.iv.next98 = add nuw nsw i64 %indvars.iv97, 1
  %exitcond101.not = icmp eq i64 %indvars.iv.next98, %wide.trip.count100
  br i1 %exitcond101.not, label %for.inc32.us.us, label %for.body5.us.us, !llvm.loop !355

for.cond15.preheader.us.us:                       ; preds = %for.end.us.us
  %idxprom25.us.us = sext i32 %count.057.us.us to i64
  br i1 %3, label %for.cond15.for.end29_crit_edge.us.us.unr-lcssa, label %for.body18.us.us

for.cond15.for.end29_crit_edge.us.us.unr-lcssa:   ; preds = %for.body18.us.us, %for.cond15.preheader.us.us
  %indvars.iv102.unr = phi i64 [ 0, %for.cond15.preheader.us.us ], [ %indvars.iv.next103.3, %for.body18.us.us ]
  br i1 %lcmp.mod.not, label %for.cond15.for.end29_crit_edge.us.us, label %for.body18.us.us.epil

for.body18.us.us.epil:                            ; preds = %for.cond15.for.end29_crit_edge.us.us.unr-lcssa, %for.body18.us.us.epil
  %indvars.iv102.epil = phi i64 [ %indvars.iv.next103.epil, %for.body18.us.us.epil ], [ %indvars.iv102.unr, %for.cond15.for.end29_crit_edge.us.us.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body18.us.us.epil ], [ 0, %for.cond15.for.end29_crit_edge.us.us.unr-lcssa ]
  %arrayidx20.us.us.epil = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv102.epil
  %15 = load ptr, ptr %arrayidx20.us.us.epil, align 8, !tbaa !13
  %arrayidx22.us.us.epil = getelementptr inbounds i8, ptr %15, i64 %indvars.iv107
  %16 = load i8, ptr %arrayidx22.us.us.epil, align 1, !tbaa !5
  %arrayidx26.us.us.epil = getelementptr inbounds i8, ptr %15, i64 %idxprom25.us.us
  store i8 %16, ptr %arrayidx26.us.us.epil, align 1, !tbaa !5
  %indvars.iv.next103.epil = add nuw nsw i64 %indvars.iv102.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond15.for.end29_crit_edge.us.us, label %for.body18.us.us.epil, !llvm.loop !356

for.cond15.for.end29_crit_edge.us.us:             ; preds = %for.body18.us.us.epil, %for.cond15.for.end29_crit_edge.us.us.unr-lcssa
  %inc30.us.us = add nsw i32 %count.057.us.us, 1
  br label %for.inc32.us.us

for.end34:                                        ; preds = %for.inc32.us.us, %entry
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local double @score_calc0(ptr nocapture noundef readonly %seq, i32 noundef %s, ptr nocapture noundef readonly %eff, i32 noundef %ex) local_unnamed_addr #12 {
entry:
  %0 = load i32, ptr @scmtd, align 4, !tbaa !10
  %cmp = icmp eq i32 %0, 3
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call double @score_calc3(ptr noundef %seq, i32 noundef %s, ptr noundef %eff, i32 poison)
  %.pr = load i32, ptr @scmtd, align 4, !tbaa !10
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = phi i32 [ %.pr, %if.then ], [ %0, %entry ]
  %cond = icmp eq i32 %1, 4
  br i1 %cond, label %if.end4.thread, label %if.end9

if.end4.thread:                                   ; preds = %if.end
  %call3 = tail call double @score_calc4(ptr noundef %seq, i32 noundef %s, ptr noundef %eff, i32 poison)
  br label %if.end9

if.end9:                                          ; preds = %if.end, %if.end4.thread
  %call8 = tail call double @score_calc5(ptr noundef %seq, i32 noundef %s, ptr noundef %eff, i32 noundef %ex)
  ret double %call8
}

; Function Attrs: nofree nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @strins(ptr nocapture noundef readonly %str1, ptr noundef %str2) local_unnamed_addr #5 {
entry:
  %str253 = ptrtoint ptr %str2 to i64
  %str150 = ptrtoint ptr %str1 to i64
  %str243 = ptrtoint ptr %str2 to i64
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %str1) #31
  %call1 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %str2) #31
  %add = add i64 %call1, %call
  %sext = shl i64 %add, 32
  %idx.ext = ashr exact i64 %sext, 32
  %add.ptr = getelementptr i8, ptr %str2, i64 %idx.ext
  %sub = shl i64 %call, 32
  %sext31 = add i64 %sub, -4294967296
  %idx.ext3 = ashr exact i64 %sext31, 32
  %add.ptr4 = getelementptr inbounds i8, ptr %str1, i64 %idx.ext3
  %idx.ext5 = ashr exact i64 %sub, 32
  %add.ptr6 = getelementptr inbounds i8, ptr %str2, i64 %idx.ext5
  %cmp.not33 = icmp slt i64 %idx.ext, %idx.ext5
  br i1 %cmp.not33, label %while.cond10.preheader, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %idx.neg = sub nsw i64 0, %idx.ext5
  %0 = add i64 %idx.ext, %str243
  %1 = add i64 %idx.ext5, %str243
  %2 = add i64 %1, -1
  %3 = add i64 %0, -1
  %umin47 = tail call i64 @llvm.umin.i64(i64 %2, i64 %3)
  %4 = sub i64 %0, %umin47
  %min.iters.check = icmp ult i64 %4, 80
  br i1 %min.iters.check, label %while.body.preheader, label %vector.scevcheck

vector.scevcheck:                                 ; preds = %while.body.lr.ph
  %5 = add i64 %idx.ext, %str243
  %6 = add i64 %5, -1
  %7 = add i64 %idx.ext5, %str243
  %8 = add i64 %7, -1
  %9 = tail call i64 @llvm.usub.sat.i64(i64 %6, i64 %8)
  %10 = sub i64 0, %9
  %11 = getelementptr i8, ptr %add.ptr, i64 %10
  %12 = icmp ugt ptr %11, %add.ptr
  %13 = sub nsw i64 %idx.ext, %idx.ext5
  %scevgep = getelementptr i8, ptr %str2, i64 %13
  %14 = sub i64 0, %9
  %15 = getelementptr i8, ptr %scevgep, i64 %14
  %16 = icmp ugt ptr %15, %scevgep
  %17 = or i1 %12, %16
  %18 = add nsw i64 %idx.ext5, 15
  %diff.check = icmp ult i64 %18, 16
  %or.cond = select i1 %17, i1 true, i1 %diff.check
  br i1 %or.cond, label %while.body.preheader, label %vector.ph

vector.ph:                                        ; preds = %vector.scevcheck
  %n.vec = and i64 %4, -16
  %19 = sub i64 0, %n.vec
  %ind.end = getelementptr i8, ptr %add.ptr, i64 %19
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %20 = sub i64 0, %index
  %next.gep = getelementptr i8, ptr %add.ptr, i64 %20
  %21 = getelementptr inbounds i8, ptr %next.gep, i64 %idx.neg
  %22 = getelementptr inbounds i8, ptr %21, i64 -15
  %wide.load = load <16 x i8>, ptr %22, align 1, !tbaa !5
  %23 = getelementptr i8, ptr %next.gep, i64 -15
  store <16 x i8> %wide.load, ptr %23, align 1, !tbaa !5
  %index.next = add nuw i64 %index, 16
  %24 = icmp eq i64 %index.next, %n.vec
  br i1 %24, label %middle.block, label %vector.body, !llvm.loop !357

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %4, %n.vec
  br i1 %cmp.n, label %while.cond10.preheader, label %while.body.preheader

while.body.preheader:                             ; preds = %vector.scevcheck, %while.body.lr.ph, %middle.block
  %str2.addr.034.ph = phi ptr [ %add.ptr, %vector.scevcheck ], [ %add.ptr, %while.body.lr.ph ], [ %ind.end, %middle.block ]
  br label %while.body

while.cond10.preheader:                           ; preds = %while.body, %middle.block, %entry
  %str2.addr.0.lcssa = phi ptr [ %add.ptr, %entry ], [ %ind.end, %middle.block ], [ %incdec.ptr, %while.body ]
  %str2.addr.0.lcssa51 = ptrtoint ptr %str2.addr.0.lcssa to i64
  %cmp11.not35 = icmp ult ptr %str2.addr.0.lcssa, %str2
  br i1 %cmp11.not35, label %while.end16, label %iter.check

iter.check:                                       ; preds = %while.cond10.preheader
  %25 = add i64 %str2.addr.0.lcssa51, -1
  %26 = add i64 %str253, -1
  %umin54 = tail call i64 @llvm.umin.i64(i64 %25, i64 %26)
  %27 = sub i64 %str2.addr.0.lcssa51, %umin54
  %min.iters.check57 = icmp ult i64 %27, 4
  br i1 %min.iters.check57, label %while.body13.preheader, label %vector.memcheck49

vector.memcheck49:                                ; preds = %iter.check
  %28 = add i64 %idx.ext3, %str150
  %29 = sub i64 %28, %str2.addr.0.lcssa51
  %diff.check52 = icmp ult i64 %29, 16
  br i1 %diff.check52, label %while.body13.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %vector.memcheck49
  %min.iters.check59 = icmp ult i64 %27, 16
  br i1 %min.iters.check59, label %vec.epilog.ph, label %vector.ph60

vector.ph60:                                      ; preds = %vector.main.loop.iter.check
  %n.vec62 = and i64 %27, -16
  %invariant.gep = getelementptr i8, ptr %add.ptr4, i64 -15
  %invariant.gep92 = getelementptr i8, ptr %str2.addr.0.lcssa, i64 -15
  br label %vector.body64

vector.body64:                                    ; preds = %vector.body64, %vector.ph60
  %index65 = phi i64 [ 0, %vector.ph60 ], [ %index.next71, %vector.body64 ]
  %30 = sub i64 0, %index65
  %31 = sub i64 0, %index65
  %gep = getelementptr i8, ptr %invariant.gep, i64 %30
  %wide.load68 = load <16 x i8>, ptr %gep, align 1, !tbaa !5
  %gep93 = getelementptr i8, ptr %invariant.gep92, i64 %31
  store <16 x i8> %wide.load68, ptr %gep93, align 1, !tbaa !5
  %index.next71 = add nuw i64 %index65, 16
  %32 = icmp eq i64 %index.next71, %n.vec62
  br i1 %32, label %middle.block55, label %vector.body64, !llvm.loop !358

middle.block55:                                   ; preds = %vector.body64
  %cmp.n63 = icmp eq i64 %27, %n.vec62
  br i1 %cmp.n63, label %while.end16, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block55
  %33 = sub i64 0, %n.vec62
  %ind.end82 = getelementptr i8, ptr %str2.addr.0.lcssa, i64 %33
  %34 = sub i64 0, %n.vec62
  %ind.end79 = getelementptr i8, ptr %add.ptr4, i64 %34
  %n.vec.remaining = and i64 %27, 12
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %while.body13.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vector.main.loop.iter.check, %vec.epilog.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec62, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %n.vec77 = and i64 %27, -4
  %35 = sub i64 0, %n.vec77
  %ind.end78 = getelementptr i8, ptr %add.ptr4, i64 %35
  %36 = sub i64 0, %n.vec77
  %ind.end81 = getelementptr i8, ptr %str2.addr.0.lcssa, i64 %36
  %invariant.gep94 = getelementptr i8, ptr %add.ptr4, i64 -3
  %invariant.gep96 = getelementptr i8, ptr %str2.addr.0.lcssa, i64 -3
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %index85 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next91, %vec.epilog.vector.body ]
  %37 = sub i64 0, %index85
  %38 = sub i64 0, %index85
  %gep95 = getelementptr i8, ptr %invariant.gep94, i64 %37
  %wide.load88 = load <4 x i8>, ptr %gep95, align 1, !tbaa !5
  %gep97 = getelementptr i8, ptr %invariant.gep96, i64 %38
  store <4 x i8> %wide.load88, ptr %gep97, align 1, !tbaa !5
  %index.next91 = add nuw i64 %index85, 4
  %39 = icmp eq i64 %index.next91, %n.vec77
  br i1 %39, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !359

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n84 = icmp eq i64 %27, %n.vec77
  br i1 %cmp.n84, label %while.end16, label %while.body13.preheader

while.body13.preheader:                           ; preds = %vector.memcheck49, %iter.check, %vec.epilog.iter.check, %vec.epilog.middle.block
  %str1.addr.037.ph = phi ptr [ %add.ptr4, %iter.check ], [ %add.ptr4, %vector.memcheck49 ], [ %ind.end79, %vec.epilog.iter.check ], [ %ind.end78, %vec.epilog.middle.block ]
  %str2.addr.136.ph = phi ptr [ %str2.addr.0.lcssa, %iter.check ], [ %str2.addr.0.lcssa, %vector.memcheck49 ], [ %ind.end82, %vec.epilog.iter.check ], [ %ind.end81, %vec.epilog.middle.block ]
  br label %while.body13

while.body:                                       ; preds = %while.body.preheader, %while.body
  %str2.addr.034 = phi ptr [ %incdec.ptr, %while.body ], [ %str2.addr.034.ph, %while.body.preheader ]
  %add.ptr9 = getelementptr inbounds i8, ptr %str2.addr.034, i64 %idx.neg
  %40 = load i8, ptr %add.ptr9, align 1, !tbaa !5
  store i8 %40, ptr %str2.addr.034, align 1, !tbaa !5
  %incdec.ptr = getelementptr inbounds i8, ptr %str2.addr.034, i64 -1
  %cmp.not = icmp ult ptr %incdec.ptr, %add.ptr6
  br i1 %cmp.not, label %while.cond10.preheader, label %while.body, !llvm.loop !360

while.body13:                                     ; preds = %while.body13.preheader, %while.body13
  %str1.addr.037 = phi ptr [ %incdec.ptr14, %while.body13 ], [ %str1.addr.037.ph, %while.body13.preheader ]
  %str2.addr.136 = phi ptr [ %incdec.ptr15, %while.body13 ], [ %str2.addr.136.ph, %while.body13.preheader ]
  %incdec.ptr14 = getelementptr inbounds i8, ptr %str1.addr.037, i64 -1
  %41 = load i8, ptr %str1.addr.037, align 1, !tbaa !5
  %incdec.ptr15 = getelementptr inbounds i8, ptr %str2.addr.136, i64 -1
  store i8 %41, ptr %str2.addr.136, align 1, !tbaa !5
  %cmp11.not = icmp ult ptr %incdec.ptr15, %str2
  br i1 %cmp11.not, label %while.end16, label %while.body13, !llvm.loop !361

while.end16:                                      ; preds = %while.body13, %middle.block55, %vec.epilog.middle.block, %while.cond10.preheader
  ret void
}

; Function Attrs: nofree nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local i32 @isaligned(i32 noundef %nseq, ptr nocapture noundef readonly %seq) local_unnamed_addr #13 {
entry:
  %cmp11 = icmp sgt i32 %nseq, 1
  br i1 %cmp11, label %for.body.lr.ph, label %cleanup

for.body.lr.ph:                                   ; preds = %entry
  %0 = load ptr, ptr %seq, align 8, !tbaa !13
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #31
  %sext = shl i64 %call, 32
  %conv4 = ashr exact i64 %sext, 32
  %wide.trip.count = zext i32 %nseq to i64
  br label %for.body

for.cond:                                         ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %cleanup, label %for.body, !llvm.loop !362

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %indvars.iv = phi i64 [ 1, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %arrayidx2 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv
  %1 = load ptr, ptr %arrayidx2, align 8, !tbaa !13
  %call3 = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %1) #31
  %cmp5.not = icmp eq i64 %call3, %conv4
  br i1 %cmp5.not, label %for.cond, label %cleanup

cleanup:                                          ; preds = %for.body, %for.cond, %entry
  %retval.0 = phi i32 [ 1, %entry ], [ 1, %for.cond ], [ 0, %for.body ]
  ret i32 %retval.0
}

; Function Attrs: nofree nounwind uwtable
define dso_local double @score_calc_for_score(i32 noundef %nseq, ptr nocapture noundef readonly %seq) local_unnamed_addr #2 {
entry:
  %0 = load ptr, ptr %seq, align 8, !tbaa !13
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #31
  %call.fr = freeze i64 %call
  %conv = trunc i64 %call.fr to i32
  %sub = add i32 %nseq, -1
  %cmp158 = icmp sgt i32 %nseq, 1
  br i1 %cmp158, label %for.body.lr.ph, label %for.end89

for.body.lr.ph:                                   ; preds = %entry
  %sub75 = add nsw i32 %conv, -2
  %cmp10145 = icmp sgt i32 %conv, 0
  %1 = load i32, ptr @penalty, align 4
  %2 = load i32, ptr getelementptr inbounds ([26 x [26 x i32]], ptr @n_dis, i64 0, i64 0, i64 24), align 16
  %sub62 = sub nsw i32 %1, %2
  %conv63 = sitofp i32 %sub62 to double
  br i1 %cmp10145, label %for.body.us.preheader, label %for.body.preheader

for.body.preheader:                               ; preds = %for.body.lr.ph
  %3 = add i32 %nseq, -2
  %xtraiter = and i32 %sub, 3
  %4 = icmp ult i32 %3, 3
  br i1 %4, label %for.end89.loopexit181.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i32 %sub, -4
  br label %for.body

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %5 = zext i32 %nseq to i64
  %wide.trip.count177 = zext i32 %sub to i64
  %wide.trip.count = zext i32 %nseq to i64
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us.preheader, %for.cond.loopexit.us
  %indvars.iv174 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next175, %for.cond.loopexit.us ]
  %indvars.iv168 = phi i64 [ 1, %for.body.us.preheader ], [ %indvars.iv.next169, %for.cond.loopexit.us ]
  %score.0159.us = phi double [ 0.000000e+00, %for.body.us.preheader ], [ %score.1.lcssa.us, %for.cond.loopexit.us ]
  %indvars.iv.next175 = add nuw nsw i64 %indvars.iv174, 1
  %cmp3154.us = icmp ult i64 %indvars.iv.next175, %5
  br i1 %cmp3154.us, label %for.body5.lr.ph.us, label %for.cond.loopexit.us

for.cond.loopexit.us:                             ; preds = %for.end.us.us, %for.body.us
  %score.1.lcssa.us = phi double [ %score.0159.us, %for.body.us ], [ %add83.us.us, %for.end.us.us ]
  %indvars.iv.next169 = add nuw nsw i64 %indvars.iv168, 1
  %exitcond178.not = icmp eq i64 %indvars.iv.next175, %wide.trip.count177
  br i1 %exitcond178.not, label %for.end89, label %for.body.us, !llvm.loop !363

for.body5.lr.ph.us:                               ; preds = %for.body.us
  %arrayidx6.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv174
  %6 = load ptr, ptr %arrayidx6.us, align 8, !tbaa !13
  br label %for.body5.us.us

for.body5.us.us:                                  ; preds = %for.end.us.us, %for.body5.lr.ph.us
  %indvars.iv170 = phi i64 [ %indvars.iv.next171, %for.end.us.us ], [ %indvars.iv168, %for.body5.lr.ph.us ]
  %score.1155.us.us = phi double [ %add83.us.us, %for.end.us.us ], [ %score.0159.us, %for.body5.lr.ph.us ]
  %arrayidx8.us.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv170
  %7 = load ptr, ptr %arrayidx8.us.us, align 8, !tbaa !13
  br label %for.body12.us.us

for.body12.us.us:                                 ; preds = %for.inc.us.us, %for.body5.us.us
  %tmpscore.0148.us.us = phi double [ 0.000000e+00, %for.body5.us.us ], [ %tmpscore.1.us.us, %for.inc.us.us ]
  %k.0147.us.us = phi i32 [ 0, %for.body5.us.us ], [ %inc81.us.us, %for.inc.us.us ]
  %c.0146.us.us = phi i32 [ 0, %for.body5.us.us ], [ %c.1.us.us, %for.inc.us.us ]
  %idxprom13.us.us = sext i32 %k.0147.us.us to i64
  %arrayidx14.us.us = getelementptr inbounds i8, ptr %6, i64 %idxprom13.us.us
  %8 = load i8, ptr %arrayidx14.us.us, align 1, !tbaa !5
  %cmp16.us.us = icmp eq i8 %8, 45
  br i1 %cmp16.us.us, label %land.lhs.true.us.us, label %if.end55.us.us

if.end55.us.us:                                   ; preds = %for.body12.us.us
  %idxprom26.us.us = sext i8 %8 to i64
  %arrayidx29.us.us = getelementptr inbounds i8, ptr %7, i64 %idxprom13.us.us
  %9 = load i8, ptr %arrayidx29.us.us, align 1, !tbaa !5
  %idxprom31.us.us = sext i8 %9 to i64
  %arrayidx32.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom26.us.us, i64 %idxprom31.us.us
  %10 = load i32, ptr %arrayidx32.us.us, align 4, !tbaa !10
  %conv33.us.us = sitofp i32 %10 to double
  %add34.us.us = fadd double %tmpscore.0148.us.us, %conv33.us.us
  %inc.us.us = add nsw i32 %c.0146.us.us, 1
  %cmp59.us.us = icmp eq i8 %9, 45
  br i1 %cmp59.us.us, label %while.cond65.us.us, label %for.inc.us.us

while.cond65.us.us:                               ; preds = %if.end55.us.us, %while.cond65.us.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.cond65.us.us ], [ %idxprom13.us.us, %if.end55.us.us ]
  %indvars.iv.next = add i64 %indvars.iv, 1
  %arrayidx68.us.us = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next
  %11 = load i8, ptr %arrayidx68.us.us, align 1, !tbaa !5
  %cmp70.us.us = icmp eq i8 %11, 45
  br i1 %cmp70.us.us, label %while.cond65.us.us, label %while.end73.us.us, !llvm.loop !364

while.end73.us.us:                                ; preds = %while.cond65.us.us
  %add64.us.us = fadd double %add34.us.us, %conv63
  %12 = trunc i64 %indvars.iv to i32
  %cmp76.us.us = icmp slt i32 %sub75, %12
  br i1 %cmp76.us.us, label %for.end.us.us, label %for.inc.us.us

land.lhs.true.us.us:                              ; preds = %for.body12.us.us
  %arrayidx19.us.us = getelementptr inbounds i8, ptr %7, i64 %idxprom13.us.us
  %13 = load i8, ptr %arrayidx19.us.us, align 1, !tbaa !5
  %cmp21.us.us = icmp eq i8 %13, 45
  br i1 %cmp21.us.us, label %for.inc.us.us, label %if.then40.us.us

if.then40.us.us:                                  ; preds = %land.lhs.true.us.us
  %idxprom31138.us.us = sext i8 %13 to i64
  %arrayidx32139.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 45, i64 %idxprom31138.us.us
  %14 = load i32, ptr %arrayidx32139.us.us, align 4, !tbaa !10
  %conv33140.us.us = sitofp i32 %14 to double
  %inc142.us.us = add nsw i32 %c.0146.us.us, 1
  br label %while.cond.us.us

while.cond.us.us:                                 ; preds = %while.cond.us.us, %if.then40.us.us
  %indvars.iv165 = phi i64 [ %indvars.iv.next166, %while.cond.us.us ], [ %idxprom13.us.us, %if.then40.us.us ]
  %indvars.iv.next166 = add i64 %indvars.iv165, 1
  %arrayidx46.us.us = getelementptr inbounds i8, ptr %6, i64 %indvars.iv.next166
  %15 = load i8, ptr %arrayidx46.us.us, align 1, !tbaa !5
  %cmp48.us.us = icmp eq i8 %15, 45
  br i1 %cmp48.us.us, label %while.cond.us.us, label %while.end.us.us, !llvm.loop !365

while.end.us.us:                                  ; preds = %while.cond.us.us
  %add34141.us.us = fadd double %tmpscore.0148.us.us, %conv33140.us.us
  %add43.us.us = fadd double %add34141.us.us, %conv63
  %16 = trunc i64 %indvars.iv165 to i32
  %cmp51.us.us = icmp slt i32 %sub75, %16
  br i1 %cmp51.us.us, label %for.end.us.us, label %for.inc.us.us

for.end.us.us:                                    ; preds = %for.inc.us.us, %while.end.us.us, %while.end73.us.us
  %c.2.us.us = phi i32 [ %inc.us.us, %while.end73.us.us ], [ %inc142.us.us, %while.end.us.us ], [ %c.1.us.us, %for.inc.us.us ]
  %tmpscore.2.us.us = phi double [ %add64.us.us, %while.end73.us.us ], [ %add43.us.us, %while.end.us.us ], [ %tmpscore.1.us.us, %for.inc.us.us ]
  %conv82.us.us = sitofp i32 %c.2.us.us to double
  %div.us.us = fdiv double %tmpscore.2.us.us, %conv82.us.us
  %add83.us.us = fadd double %score.1155.us.us, %div.us.us
  %indvars.iv.next171 = add nuw nsw i64 %indvars.iv170, 1
  %exitcond173.not = icmp eq i64 %indvars.iv.next171, %wide.trip.count
  br i1 %exitcond173.not, label %for.cond.loopexit.us, label %for.body5.us.us, !llvm.loop !366

for.inc.us.us:                                    ; preds = %while.end.us.us, %land.lhs.true.us.us, %while.end73.us.us, %if.end55.us.us
  %c.1.us.us = phi i32 [ %c.0146.us.us, %land.lhs.true.us.us ], [ %inc142.us.us, %while.end.us.us ], [ %inc.us.us, %while.end73.us.us ], [ %inc.us.us, %if.end55.us.us ]
  %k.3.us.us = phi i32 [ %k.0147.us.us, %land.lhs.true.us.us ], [ %16, %while.end.us.us ], [ %12, %while.end73.us.us ], [ %k.0147.us.us, %if.end55.us.us ]
  %tmpscore.1.us.us = phi double [ %tmpscore.0148.us.us, %land.lhs.true.us.us ], [ %add43.us.us, %while.end.us.us ], [ %add64.us.us, %while.end73.us.us ], [ %add34.us.us, %if.end55.us.us ]
  %inc81.us.us = add nsw i32 %k.3.us.us, 1
  %cmp10.us.us = icmp slt i32 %inc81.us.us, %conv
  br i1 %cmp10.us.us, label %for.body12.us.us, label %for.end.us.us, !llvm.loop !367

for.body:                                         ; preds = %for.body, %for.body.preheader.new
  %i.0160 = phi i32 [ 0, %for.body.preheader.new ], [ %add.3, %for.body ]
  %score.0159 = phi double [ 0.000000e+00, %for.body.preheader.new ], [ %score.1.lcssa.3, %for.body ]
  %niter = phi i32 [ 0, %for.body.preheader.new ], [ %niter.next.3, %for.body ]
  %add = or i32 %i.0160, 1
  %cmp3154 = icmp slt i32 %add, %nseq
  %add.1 = or i32 %i.0160, 2
  %cmp3154.1 = icmp slt i32 %add.1, %nseq
  %add.2 = or i32 %i.0160, 3
  %cmp3154.2 = icmp slt i32 %add.2, %nseq
  %add.3 = add nuw nsw i32 %i.0160, 4
  %cmp3154.3 = icmp slt i32 %add.3, %nseq
  %17 = or i1 %cmp3154.3, %cmp3154.2
  %18 = select i1 %17, i1 true, i1 %cmp3154.1
  %19 = select i1 %18, i1 true, i1 %cmp3154
  %score.1.lcssa.3 = select i1 %19, double 0x7FF8000000000000, double %score.0159
  %niter.next.3 = add i32 %niter, 4
  %niter.ncmp.3 = icmp eq i32 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.end89.loopexit181.unr-lcssa, label %for.body, !llvm.loop !363

for.end89.loopexit181.unr-lcssa:                  ; preds = %for.body, %for.body.preheader
  %score.1.lcssa.lcssa.ph = phi double [ undef, %for.body.preheader ], [ %score.1.lcssa.3, %for.body ]
  %i.0160.unr = phi i32 [ 0, %for.body.preheader ], [ %add.3, %for.body ]
  %score.0159.unr = phi double [ 0.000000e+00, %for.body.preheader ], [ %score.1.lcssa.3, %for.body ]
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end89, label %for.body.epil

for.body.epil:                                    ; preds = %for.end89.loopexit181.unr-lcssa, %for.body.epil
  %i.0160.epil = phi i32 [ %add.epil, %for.body.epil ], [ %i.0160.unr, %for.end89.loopexit181.unr-lcssa ]
  %score.0159.epil = phi double [ %score.1.lcssa.epil, %for.body.epil ], [ %score.0159.unr, %for.end89.loopexit181.unr-lcssa ]
  %epil.iter = phi i32 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end89.loopexit181.unr-lcssa ]
  %add.epil = add nuw nsw i32 %i.0160.epil, 1
  %cmp3154.epil = icmp slt i32 %add.epil, %nseq
  %score.1.lcssa.epil = select i1 %cmp3154.epil, double 0x7FF8000000000000, double %score.0159.epil
  %epil.iter.next = add i32 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i32 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.end89, label %for.body.epil, !llvm.loop !368

for.end89:                                        ; preds = %for.end89.loopexit181.unr-lcssa, %for.body.epil, %for.cond.loopexit.us, %entry
  %score.0.lcssa = phi double [ 0.000000e+00, %entry ], [ %score.1.lcssa.us, %for.cond.loopexit.us ], [ %score.1.lcssa.lcssa.ph, %for.end89.loopexit181.unr-lcssa ], [ %score.1.lcssa.epil, %for.body.epil ]
  %20 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call90 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %20, ptr noundef nonnull @.str.29, double noundef %score.0.lcssa) #32
  %conv91 = sitofp i32 %nseq to double
  %sub93 = fadd double %conv91, -1.000000e+00
  %mul = fmul double %sub93, %conv91
  %div94 = fmul double %mul, 5.000000e-01
  %div95 = fdiv double %score.0.lcssa, %div94
  %add96 = fadd double %div95, 4.000000e+02
  ret double %add96
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @floatncpy(ptr nocapture noundef writeonly %vec1, ptr nocapture noundef readonly %vec2, i32 noundef %len) local_unnamed_addr #26 {
entry:
  %tobool.not2 = icmp eq i32 %len, 0
  br i1 %tobool.not2, label %while.end, label %while.body.preheader

while.body.preheader:                             ; preds = %entry
  %vec16 = ptrtoint ptr %vec1 to i64
  %vec27 = ptrtoint ptr %vec2 to i64
  %0 = zext i32 %len to i64
  %min.iters.check = icmp ult i32 %len, 8
  %1 = sub i64 %vec16, %vec27
  %diff.check = icmp ult i64 %1, 32
  %or.cond = or i1 %min.iters.check, %diff.check
  br i1 %or.cond, label %while.body.preheader16, label %vector.ph

vector.ph:                                        ; preds = %while.body.preheader
  %n.vec = and i64 %0, 4294967288
  %.cast = trunc i64 %n.vec to i32
  %ind.end = sub i32 %len, %.cast
  %2 = shl nuw nsw i64 %n.vec, 2
  %ind.end8 = getelementptr i8, ptr %vec2, i64 %2
  %3 = shl nuw nsw i64 %n.vec, 2
  %ind.end10 = getelementptr i8, ptr %vec1, i64 %3
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %4 = shl i64 %index, 2
  %next.gep = getelementptr i8, ptr %vec2, i64 %4
  %5 = shl i64 %index, 2
  %next.gep13 = getelementptr i8, ptr %vec1, i64 %5
  %wide.load = load <4 x float>, ptr %next.gep, align 4, !tbaa !17
  %6 = getelementptr float, ptr %next.gep, i64 4
  %wide.load15 = load <4 x float>, ptr %6, align 4, !tbaa !17
  store <4 x float> %wide.load, ptr %next.gep13, align 4, !tbaa !17
  %7 = getelementptr float, ptr %next.gep13, i64 4
  store <4 x float> %wide.load15, ptr %7, align 4, !tbaa !17
  %index.next = add nuw i64 %index, 8
  %8 = icmp eq i64 %index.next, %n.vec
  br i1 %8, label %middle.block, label %vector.body, !llvm.loop !369

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %0
  br i1 %cmp.n, label %while.end, label %while.body.preheader16

while.body.preheader16:                           ; preds = %while.body.preheader, %middle.block
  %len.addr.05.ph = phi i32 [ %len, %while.body.preheader ], [ %ind.end, %middle.block ]
  %vec2.addr.04.ph = phi ptr [ %vec2, %while.body.preheader ], [ %ind.end8, %middle.block ]
  %vec1.addr.03.ph = phi ptr [ %vec1, %while.body.preheader ], [ %ind.end10, %middle.block ]
  %9 = add nsw i32 %len.addr.05.ph, -1
  %xtraiter = and i32 %len.addr.05.ph, 7
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod.not, label %while.body.prol.loopexit, label %while.body.prol

while.body.prol:                                  ; preds = %while.body.preheader16, %while.body.prol
  %len.addr.05.prol = phi i32 [ %dec.prol, %while.body.prol ], [ %len.addr.05.ph, %while.body.preheader16 ]
  %vec2.addr.04.prol = phi ptr [ %incdec.ptr.prol, %while.body.prol ], [ %vec2.addr.04.ph, %while.body.preheader16 ]
  %vec1.addr.03.prol = phi ptr [ %incdec.ptr1.prol, %while.body.prol ], [ %vec1.addr.03.ph, %while.body.preheader16 ]
  %prol.iter = phi i32 [ %prol.iter.next, %while.body.prol ], [ 0, %while.body.preheader16 ]
  %dec.prol = add nsw i32 %len.addr.05.prol, -1
  %incdec.ptr.prol = getelementptr inbounds float, ptr %vec2.addr.04.prol, i64 1
  %10 = load float, ptr %vec2.addr.04.prol, align 4, !tbaa !17
  %incdec.ptr1.prol = getelementptr inbounds float, ptr %vec1.addr.03.prol, i64 1
  store float %10, ptr %vec1.addr.03.prol, align 4, !tbaa !17
  %prol.iter.next = add i32 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i32 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %while.body.prol.loopexit, label %while.body.prol, !llvm.loop !370

while.body.prol.loopexit:                         ; preds = %while.body.prol, %while.body.preheader16
  %len.addr.05.unr = phi i32 [ %len.addr.05.ph, %while.body.preheader16 ], [ %dec.prol, %while.body.prol ]
  %vec2.addr.04.unr = phi ptr [ %vec2.addr.04.ph, %while.body.preheader16 ], [ %incdec.ptr.prol, %while.body.prol ]
  %vec1.addr.03.unr = phi ptr [ %vec1.addr.03.ph, %while.body.preheader16 ], [ %incdec.ptr1.prol, %while.body.prol ]
  %11 = icmp ult i32 %9, 7
  br i1 %11, label %while.end, label %while.body

while.body:                                       ; preds = %while.body.prol.loopexit, %while.body
  %len.addr.05 = phi i32 [ %dec.7, %while.body ], [ %len.addr.05.unr, %while.body.prol.loopexit ]
  %vec2.addr.04 = phi ptr [ %incdec.ptr.7, %while.body ], [ %vec2.addr.04.unr, %while.body.prol.loopexit ]
  %vec1.addr.03 = phi ptr [ %incdec.ptr1.7, %while.body ], [ %vec1.addr.03.unr, %while.body.prol.loopexit ]
  %incdec.ptr = getelementptr inbounds float, ptr %vec2.addr.04, i64 1
  %12 = load float, ptr %vec2.addr.04, align 4, !tbaa !17
  %incdec.ptr1 = getelementptr inbounds float, ptr %vec1.addr.03, i64 1
  store float %12, ptr %vec1.addr.03, align 4, !tbaa !17
  %incdec.ptr.1 = getelementptr inbounds float, ptr %vec2.addr.04, i64 2
  %13 = load float, ptr %incdec.ptr, align 4, !tbaa !17
  %incdec.ptr1.1 = getelementptr inbounds float, ptr %vec1.addr.03, i64 2
  store float %13, ptr %incdec.ptr1, align 4, !tbaa !17
  %incdec.ptr.2 = getelementptr inbounds float, ptr %vec2.addr.04, i64 3
  %14 = load float, ptr %incdec.ptr.1, align 4, !tbaa !17
  %incdec.ptr1.2 = getelementptr inbounds float, ptr %vec1.addr.03, i64 3
  store float %14, ptr %incdec.ptr1.1, align 4, !tbaa !17
  %incdec.ptr.3 = getelementptr inbounds float, ptr %vec2.addr.04, i64 4
  %15 = load float, ptr %incdec.ptr.2, align 4, !tbaa !17
  %incdec.ptr1.3 = getelementptr inbounds float, ptr %vec1.addr.03, i64 4
  store float %15, ptr %incdec.ptr1.2, align 4, !tbaa !17
  %incdec.ptr.4 = getelementptr inbounds float, ptr %vec2.addr.04, i64 5
  %16 = load float, ptr %incdec.ptr.3, align 4, !tbaa !17
  %incdec.ptr1.4 = getelementptr inbounds float, ptr %vec1.addr.03, i64 5
  store float %16, ptr %incdec.ptr1.3, align 4, !tbaa !17
  %incdec.ptr.5 = getelementptr inbounds float, ptr %vec2.addr.04, i64 6
  %17 = load float, ptr %incdec.ptr.4, align 4, !tbaa !17
  %incdec.ptr1.5 = getelementptr inbounds float, ptr %vec1.addr.03, i64 6
  store float %17, ptr %incdec.ptr1.4, align 4, !tbaa !17
  %incdec.ptr.6 = getelementptr inbounds float, ptr %vec2.addr.04, i64 7
  %18 = load float, ptr %incdec.ptr.5, align 4, !tbaa !17
  %incdec.ptr1.6 = getelementptr inbounds float, ptr %vec1.addr.03, i64 7
  store float %18, ptr %incdec.ptr1.5, align 4, !tbaa !17
  %dec.7 = add nsw i32 %len.addr.05, -8
  %incdec.ptr.7 = getelementptr inbounds float, ptr %vec2.addr.04, i64 8
  %19 = load float, ptr %incdec.ptr.6, align 4, !tbaa !17
  %incdec.ptr1.7 = getelementptr inbounds float, ptr %vec1.addr.03, i64 8
  store float %19, ptr %incdec.ptr1.6, align 4, !tbaa !17
  %tobool.not.7 = icmp eq i32 %dec.7, 0
  br i1 %tobool.not.7, label %while.end, label %while.body, !llvm.loop !371

while.end:                                        ; preds = %while.body.prol.loopexit, %while.body, %middle.block, %entry
  ret void
}

; Function Attrs: nofree nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local float @score_calc_a(ptr nocapture noundef readonly %seq, i32 noundef %s, ptr nocapture noundef readonly %eff) local_unnamed_addr #13 {
entry:
  %0 = load ptr, ptr %seq, align 8, !tbaa !13
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #31
  %call.fr = freeze i64 %call
  %sub = add i32 %s, -1
  %cmp247 = icmp sgt i32 %s, 1
  br i1 %cmp247, label %for.body.lr.ph, label %for.end160

for.body.lr.ph:                                   ; preds = %entry
  %conv = trunc i64 %call.fr to i32
  %cmp10233 = icmp sgt i32 %conv, 0
  %1 = load i32, ptr @penalty, align 4
  %conv125 = sitofp i32 %1 to double
  br i1 %cmp10233, label %for.body.us.preheader, label %for.end160

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %2 = zext i32 %s to i64
  %wide.trip.count269 = zext i32 %sub to i64
  %wide.trip.count264 = zext i32 %s to i64
  %wide.trip.count = and i64 %call.fr, 4294967295
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us.preheader, %for.cond.loopexit.us
  %indvars.iv266 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next267, %for.cond.loopexit.us ]
  %indvars.iv259 = phi i64 [ 1, %for.body.us.preheader ], [ %indvars.iv.next260, %for.cond.loopexit.us ]
  %score.0249.us = phi float [ 0.000000e+00, %for.body.us.preheader ], [ %score.1.lcssa.us, %for.cond.loopexit.us ]
  %nglen.0248.us = phi i32 [ 0, %for.body.us.preheader ], [ %nglen.1.lcssa.us, %for.cond.loopexit.us ]
  %indvars.iv.next267 = add nuw nsw i64 %indvars.iv266, 1
  %cmp3240.us = icmp ult i64 %indvars.iv.next267, %2
  br i1 %cmp3240.us, label %for.body5.lr.ph.us, label %for.cond.loopexit.us

for.cond.loopexit.us:                             ; preds = %for.cond9.for.end_crit_edge.us.us, %for.body.us
  %nglen.1.lcssa.us = phi i32 [ %nglen.0248.us, %for.body.us ], [ %add154.us.us, %for.cond9.for.end_crit_edge.us.us ]
  %score.1.lcssa.us = phi float [ %score.0249.us, %for.body.us ], [ %16, %for.cond9.for.end_crit_edge.us.us ]
  %indvars.iv.next260 = add nuw nsw i64 %indvars.iv259, 1
  %exitcond270.not = icmp eq i64 %indvars.iv.next267, %wide.trip.count269
  br i1 %exitcond270.not, label %for.end160, label %for.body.us, !llvm.loop !372

for.body5.lr.ph.us:                               ; preds = %for.body.us
  %arrayidx6.us = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv266
  %3 = load ptr, ptr %arrayidx6.us, align 8, !tbaa !13
  %arrayidx14.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv266
  %4 = load ptr, ptr %arrayidx14.us, align 8, !tbaa !13
  br label %for.body5.us.us

for.body5.us.us:                                  ; preds = %for.cond9.for.end_crit_edge.us.us, %for.body5.lr.ph.us
  %indvars.iv261 = phi i64 [ %indvars.iv.next262, %for.cond9.for.end_crit_edge.us.us ], [ %indvars.iv259, %for.body5.lr.ph.us ]
  %score.1243.us.us = phi float [ %16, %for.cond9.for.end_crit_edge.us.us ], [ %score.0249.us, %for.body5.lr.ph.us ]
  %nglen.1241.us.us = phi i32 [ %add154.us.us, %for.cond9.for.end_crit_edge.us.us ], [ %nglen.0248.us, %for.body5.lr.ph.us ]
  %arrayidx8.us.us = getelementptr inbounds double, ptr %3, i64 %indvars.iv261
  %5 = load double, ptr %arrayidx8.us.us, align 8, !tbaa !20
  %arrayidx21.us.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv261
  %6 = load ptr, ptr %arrayidx21.us.us, align 8, !tbaa !13
  %conv145.us.us = fptrunc double %5 to float
  br label %for.body12.us.us

for.body12.us.us:                                 ; preds = %for.body12.us.us, %for.body5.us.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body12.us.us ], [ 0, %for.body5.us.us ]
  %score.2238.us.us = phi float [ %16, %for.body12.us.us ], [ %score.1243.us.us, %for.body5.us.us ]
  %nglen.2237.us.us = phi i32 [ %add154.us.us, %for.body12.us.us ], [ %nglen.1241.us.us, %for.body5.us.us ]
  %gc2.0235.us.us = phi i32 [ %conv26.us.us, %for.body12.us.us ], [ 0, %for.body5.us.us ]
  %gc1.0234.us.us = phi i32 [ %conv19.us.us, %for.body12.us.us ], [ 0, %for.body5.us.us ]
  %arrayidx16.us.us = getelementptr inbounds i8, ptr %4, i64 %indvars.iv
  %7 = load i8, ptr %arrayidx16.us.us, align 1, !tbaa !5
  %cmp18.us.us = icmp eq i8 %7, 45
  %conv19.us.us = zext i1 %cmp18.us.us to i32
  %arrayidx23.us.us = getelementptr inbounds i8, ptr %6, i64 %indvars.iv
  %8 = load i8, ptr %arrayidx23.us.us, align 1, !tbaa !5
  %cmp25.us.us = icmp eq i8 %8, 45
  %conv26.us.us = zext i1 %cmp25.us.us to i32
  %lnot.ext.us.us = xor i32 %gc1.0234.us.us, 1
  %mul.us.us = select i1 %cmp18.us.us, i32 %lnot.ext.us.us, i32 0
  %lnot.ext29.us.us = xor i32 %gc2.0235.us.us, 1
  %mul38.us.us = select i1 %cmp18.us.us, i32 0, i32 %gc1.0234.us.us
  %mul30232.us.us = select i1 %cmp18.us.us, i32 %lnot.ext.us.us, i32 %gc1.0234.us.us
  %mul54.us.us = select i1 %cmp18.us.us, i32 0, i32 %lnot.ext.us.us
  %add60.v.us.us = select i1 %cmp25.us.us, i32 %mul54.us.us, i32 %mul30232.us.us
  %add60.us.us = mul nuw nsw i32 %add60.v.us.us, %lnot.ext29.us.us
  %mul78.us.us = mul nuw nsw i32 %mul.us.us, %gc2.0235.us.us
  %mul101.us.us = select i1 %cmp18.us.us, i32 %gc1.0234.us.us, i32 0
  %mul119.us.us = mul nuw nsw i32 %mul101.us.us, %lnot.ext29.us.us
  %mul98.us.us256 = add nuw nsw i32 %lnot.ext29.us.us, %gc2.0235.us.us
  %9 = mul nuw nsw i32 %mul38.us.us, %mul98.us.us256
  %10 = add nuw nsw i32 %lnot.ext.us.us, %mul101.us.us
  %11 = mul nuw nsw i32 %10, %gc2.0235.us.us
  %12 = add nuw nsw i32 %9, %mul78.us.us
  %13 = add nuw nsw i32 %12, %mul119.us.us
  %add114.us.us = select i1 %cmp25.us.us, i32 %13, i32 %11
  %add121.us.us = add nuw nsw i32 %add114.us.us, %add60.us.us
  %conv122.us.us = sitofp i32 %add121.us.us to float
  %conv123.us.us = fpext float %conv122.us.us to double
  %mul124.us.us = fmul double %conv123.us.us, 5.000000e-01
  %mul126.us.us = fmul double %mul124.us.us, %conv125
  %conv128.us.us = fpext float %score.2238.us.us to double
  %14 = tail call double @llvm.fmuladd.f64(double %mul126.us.us, double %5, double %conv128.us.us)
  %conv129.us.us = fptrunc double %14 to float
  %idxprom135.us.us = sext i8 %7 to i64
  %idxprom142.us.us = sext i8 %8 to i64
  %arrayidx143.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom135.us.us, i64 %idxprom142.us.us
  %15 = load i32, ptr %arrayidx143.us.us, align 4, !tbaa !10
  %conv144.us.us = sitofp i32 %15 to float
  %16 = tail call float @llvm.fmuladd.f32(float %conv144.us.us, float %conv145.us.us, float %conv129.us.us)
  %mulbool.demorgan.us.us = or i1 %cmp18.us.us, %cmp25.us.us
  %mulbool.us.us = xor i1 %mulbool.demorgan.us.us, true
  %mul153.us.us = zext i1 %mulbool.us.us to i32
  %add154.us.us = add nsw i32 %nglen.2237.us.us, %mul153.us.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond9.for.end_crit_edge.us.us, label %for.body12.us.us, !llvm.loop !373

for.cond9.for.end_crit_edge.us.us:                ; preds = %for.body12.us.us
  %indvars.iv.next262 = add nuw nsw i64 %indvars.iv261, 1
  %exitcond265.not = icmp eq i64 %indvars.iv.next262, %wide.trip.count264
  br i1 %exitcond265.not, label %for.cond.loopexit.us, label %for.body5.us.us, !llvm.loop !374

for.end160:                                       ; preds = %for.cond.loopexit.us, %for.body.lr.ph, %entry
  %nglen.0.lcssa = phi i32 [ 0, %entry ], [ 0, %for.body.lr.ph ], [ %nglen.1.lcssa.us, %for.cond.loopexit.us ]
  %score.0.lcssa = phi float [ 0.000000e+00, %entry ], [ 0.000000e+00, %for.body.lr.ph ], [ %score.1.lcssa.us, %for.cond.loopexit.us ]
  %conv161 = sitofp i32 %nglen.0.lcssa to float
  %div = fdiv float %score.0.lcssa, %conv161
  %conv162 = fpext float %div to double
  %17 = load i32, ptr @scoremtx, align 4, !tbaa !10
  %tobool163.not = icmp eq i32 %17, 0
  %conv166 = uitofp i1 %tobool163.not to double
  %18 = tail call double @llvm.fmuladd.f64(double %conv166, double 4.000000e+02, double %conv162)
  %conv168 = fptrunc double %18 to float
  ret float %conv168
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fmuladd.f32(float, float, float) #10

; Function Attrs: nofree nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local float @score_calc_s(ptr nocapture noundef readonly %seq, i32 noundef %s, ptr nocapture noundef readonly %eff) local_unnamed_addr #13 {
entry:
  %0 = load ptr, ptr %seq, align 8, !tbaa !13
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #31
  %call.fr = freeze i64 %call
  %sub = add i32 %s, -1
  %cmp199 = icmp sgt i32 %s, 1
  br i1 %cmp199, label %for.body.lr.ph, label %for.end132

for.body.lr.ph:                                   ; preds = %entry
  %conv = trunc i64 %call.fr to i32
  %cmp10185 = icmp sgt i32 %conv, 0
  %1 = load i32, ptr @penalty, align 4
  %conv97 = sitofp i32 %1 to double
  br i1 %cmp10185, label %for.body.us.preheader, label %for.end132

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %2 = zext i32 %s to i64
  %wide.trip.count220 = zext i32 %sub to i64
  %wide.trip.count215 = zext i32 %s to i64
  %wide.trip.count = and i64 %call.fr, 4294967295
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us.preheader, %for.cond.loopexit.us
  %indvars.iv217 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next218, %for.cond.loopexit.us ]
  %indvars.iv210 = phi i64 [ 1, %for.body.us.preheader ], [ %indvars.iv.next211, %for.cond.loopexit.us ]
  %score.0201.us = phi float [ 0.000000e+00, %for.body.us.preheader ], [ %score.1.lcssa.us, %for.cond.loopexit.us ]
  %nglen.0200.us = phi i32 [ 0, %for.body.us.preheader ], [ %nglen.1.lcssa.us, %for.cond.loopexit.us ]
  %indvars.iv.next218 = add nuw nsw i64 %indvars.iv217, 1
  %cmp3192.us = icmp ult i64 %indvars.iv.next218, %2
  br i1 %cmp3192.us, label %for.body5.lr.ph.us, label %for.cond.loopexit.us

for.cond.loopexit.us:                             ; preds = %for.cond9.for.end_crit_edge.us.us, %for.body.us
  %nglen.1.lcssa.us = phi i32 [ %nglen.0200.us, %for.body.us ], [ %add126.us.us, %for.cond9.for.end_crit_edge.us.us ]
  %score.1.lcssa.us = phi float [ %score.0201.us, %for.body.us ], [ %12, %for.cond9.for.end_crit_edge.us.us ]
  %indvars.iv.next211 = add nuw nsw i64 %indvars.iv210, 1
  %exitcond221.not = icmp eq i64 %indvars.iv.next218, %wide.trip.count220
  br i1 %exitcond221.not, label %for.end132, label %for.body.us, !llvm.loop !375

for.body5.lr.ph.us:                               ; preds = %for.body.us
  %arrayidx6.us = getelementptr inbounds ptr, ptr %eff, i64 %indvars.iv217
  %3 = load ptr, ptr %arrayidx6.us, align 8, !tbaa !13
  %arrayidx14.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv217
  %4 = load ptr, ptr %arrayidx14.us, align 8, !tbaa !13
  br label %for.body5.us.us

for.body5.us.us:                                  ; preds = %for.cond9.for.end_crit_edge.us.us, %for.body5.lr.ph.us
  %indvars.iv212 = phi i64 [ %indvars.iv.next213, %for.cond9.for.end_crit_edge.us.us ], [ %indvars.iv210, %for.body5.lr.ph.us ]
  %score.1195.us.us = phi float [ %12, %for.cond9.for.end_crit_edge.us.us ], [ %score.0201.us, %for.body5.lr.ph.us ]
  %nglen.1193.us.us = phi i32 [ %add126.us.us, %for.cond9.for.end_crit_edge.us.us ], [ %nglen.0200.us, %for.body5.lr.ph.us ]
  %arrayidx8.us.us = getelementptr inbounds double, ptr %3, i64 %indvars.iv212
  %5 = load double, ptr %arrayidx8.us.us, align 8, !tbaa !20
  %arrayidx21.us.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv212
  %6 = load ptr, ptr %arrayidx21.us.us, align 8, !tbaa !13
  %conv117.us.us = fptrunc double %5 to float
  br label %for.body12.us.us

for.body12.us.us:                                 ; preds = %for.body12.us.us, %for.body5.us.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body12.us.us ], [ 0, %for.body5.us.us ]
  %score.2190.us.us = phi float [ %12, %for.body12.us.us ], [ %score.1195.us.us, %for.body5.us.us ]
  %nglen.2189.us.us = phi i32 [ %add126.us.us, %for.body12.us.us ], [ %nglen.1193.us.us, %for.body5.us.us ]
  %gc2.0187.us.us = phi i32 [ %conv26.us.us, %for.body12.us.us ], [ 0, %for.body5.us.us ]
  %gc1.0186.us.us = phi i32 [ %conv19.us.us, %for.body12.us.us ], [ 0, %for.body5.us.us ]
  %arrayidx16.us.us = getelementptr inbounds i8, ptr %4, i64 %indvars.iv
  %7 = load i8, ptr %arrayidx16.us.us, align 1, !tbaa !5
  %cmp18.us.us = icmp eq i8 %7, 45
  %conv19.us.us = zext i1 %cmp18.us.us to i32
  %arrayidx23.us.us = getelementptr inbounds i8, ptr %6, i64 %indvars.iv
  %8 = load i8, ptr %arrayidx23.us.us, align 1, !tbaa !5
  %cmp25.us.us = icmp eq i8 %8, 45
  %conv26.us.us = zext i1 %cmp25.us.us to i32
  %lnot.ext.us.us = xor i32 %gc1.0186.us.us, 1
  %lnot.ext29.us.us = xor i32 %gc2.0187.us.us, 1
  %mul38.us.us = select i1 %cmp18.us.us, i32 0, i32 %gc1.0186.us.us
  %mul42.us.us = mul nuw nsw i32 %mul38.us.us, %lnot.ext29.us.us
  %mul30184.us.us = select i1 %cmp18.us.us, i32 %lnot.ext.us.us, i32 %gc1.0186.us.us
  %mul54.us.us = select i1 %cmp18.us.us, i32 0, i32 %lnot.ext.us.us
  %add60.v.us.us = select i1 %cmp25.us.us, i32 %mul54.us.us, i32 %mul30184.us.us
  %add60.us.us = mul nuw nsw i32 %add60.v.us.us, %lnot.ext29.us.us
  %9 = mul nuw nsw i32 %lnot.ext.us.us, %gc2.0187.us.us
  %add83.us.us = select i1 %cmp25.us.us, i32 %mul42.us.us, i32 %9
  %add93.us.us = add nuw nsw i32 %add83.us.us, %add60.us.us
  %conv94.us.us = sitofp i32 %add93.us.us to float
  %conv95.us.us = fpext float %conv94.us.us to double
  %mul96.us.us = fmul double %conv95.us.us, 5.000000e-01
  %mul98.us.us = fmul double %mul96.us.us, %conv97
  %conv100.us.us = fpext float %score.2190.us.us to double
  %10 = tail call double @llvm.fmuladd.f64(double %mul98.us.us, double %5, double %conv100.us.us)
  %conv101.us.us = fptrunc double %10 to float
  %idxprom107.us.us = sext i8 %7 to i64
  %idxprom114.us.us = sext i8 %8 to i64
  %arrayidx115.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom107.us.us, i64 %idxprom114.us.us
  %11 = load i32, ptr %arrayidx115.us.us, align 4, !tbaa !10
  %conv116.us.us = sitofp i32 %11 to float
  %12 = tail call float @llvm.fmuladd.f32(float %conv116.us.us, float %conv117.us.us, float %conv101.us.us)
  %mulbool.demorgan.us.us = or i1 %cmp18.us.us, %cmp25.us.us
  %mulbool.us.us = xor i1 %mulbool.demorgan.us.us, true
  %mul125.us.us = zext i1 %mulbool.us.us to i32
  %add126.us.us = add nsw i32 %nglen.2189.us.us, %mul125.us.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond9.for.end_crit_edge.us.us, label %for.body12.us.us, !llvm.loop !376

for.cond9.for.end_crit_edge.us.us:                ; preds = %for.body12.us.us
  %indvars.iv.next213 = add nuw nsw i64 %indvars.iv212, 1
  %exitcond216.not = icmp eq i64 %indvars.iv.next213, %wide.trip.count215
  br i1 %exitcond216.not, label %for.cond.loopexit.us, label %for.body5.us.us, !llvm.loop !377

for.end132:                                       ; preds = %for.cond.loopexit.us, %for.body.lr.ph, %entry
  %nglen.0.lcssa = phi i32 [ 0, %entry ], [ 0, %for.body.lr.ph ], [ %nglen.1.lcssa.us, %for.cond.loopexit.us ]
  %score.0.lcssa = phi float [ 0.000000e+00, %entry ], [ 0.000000e+00, %for.body.lr.ph ], [ %score.1.lcssa.us, %for.cond.loopexit.us ]
  %conv133 = sitofp i32 %nglen.0.lcssa to float
  %div = fdiv float %score.0.lcssa, %conv133
  %conv136 = fadd float %div, 4.000000e+02
  ret float %conv136
}

; Function Attrs: nofree nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local double @score_calc_for_score_s(i32 noundef %s, ptr nocapture noundef readonly %seq) local_unnamed_addr #13 {
entry:
  %0 = load ptr, ptr %seq, align 8, !tbaa !13
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #31
  %call.fr = freeze i64 %call
  %sub = add i32 %s, -1
  %cmp189 = icmp sgt i32 %s, 1
  br i1 %cmp189, label %for.body.lr.ph, label %for.end126

for.body.lr.ph:                                   ; preds = %entry
  %conv = trunc i64 %call.fr to i32
  %cmp7175 = icmp sgt i32 %conv, 0
  %1 = load i32, ptr @penalty, align 4
  %conv93 = sitofp i32 %1 to double
  br i1 %cmp7175, label %for.body.us.preheader, label %for.end126

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %2 = zext i32 %s to i64
  %wide.trip.count210 = zext i32 %sub to i64
  %wide.trip.count205 = zext i32 %s to i64
  %wide.trip.count = and i64 %call.fr, 4294967295
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us.preheader, %for.cond.loopexit.us
  %indvars.iv207 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next208, %for.cond.loopexit.us ]
  %indvars.iv200 = phi i64 [ 1, %for.body.us.preheader ], [ %indvars.iv.next201, %for.cond.loopexit.us ]
  %score.0192.us = phi float [ 0.000000e+00, %for.body.us.preheader ], [ %score.1.lcssa.us, %for.cond.loopexit.us ]
  %nglen.0190.us = phi i32 [ 0, %for.body.us.preheader ], [ %nglen.1.lcssa.us, %for.cond.loopexit.us ]
  %indvars.iv.next208 = add nuw nsw i64 %indvars.iv207, 1
  %cmp3182.us = icmp ult i64 %indvars.iv.next208, %2
  br i1 %cmp3182.us, label %for.cond6.preheader.lr.ph.us, label %for.cond.loopexit.us

for.cond.loopexit.us:                             ; preds = %for.cond6.for.inc121_crit_edge.us.us, %for.body.us
  %nglen.1.lcssa.us = phi i32 [ %nglen.0190.us, %for.body.us ], [ %add120.us.us, %for.cond6.for.inc121_crit_edge.us.us ]
  %score.1.lcssa.us = phi float [ %score.0192.us, %for.body.us ], [ %add112.us.us, %for.cond6.for.inc121_crit_edge.us.us ]
  %indvars.iv.next201 = add nuw nsw i64 %indvars.iv200, 1
  %exitcond211.not = icmp eq i64 %indvars.iv.next208, %wide.trip.count210
  br i1 %exitcond211.not, label %for.end126, label %for.body.us, !llvm.loop !378

for.cond6.preheader.lr.ph.us:                     ; preds = %for.body.us
  %arrayidx10.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv207
  %3 = load ptr, ptr %arrayidx10.us, align 8, !tbaa !13
  br label %for.cond6.preheader.us.us

for.cond6.preheader.us.us:                        ; preds = %for.cond6.for.inc121_crit_edge.us.us, %for.cond6.preheader.lr.ph.us
  %indvars.iv202 = phi i64 [ %indvars.iv.next203, %for.cond6.for.inc121_crit_edge.us.us ], [ %indvars.iv200, %for.cond6.preheader.lr.ph.us ]
  %score.1185.us.us = phi float [ %add112.us.us, %for.cond6.for.inc121_crit_edge.us.us ], [ %score.0192.us, %for.cond6.preheader.lr.ph.us ]
  %nglen.1184.us.us = phi i32 [ %add120.us.us, %for.cond6.for.inc121_crit_edge.us.us ], [ %nglen.0190.us, %for.cond6.preheader.lr.ph.us ]
  %arrayidx17.us.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv202
  %4 = load ptr, ptr %arrayidx17.us.us, align 8, !tbaa !13
  br label %for.body9.us.us

for.body9.us.us:                                  ; preds = %for.body9.us.us, %for.cond6.preheader.us.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body9.us.us ], [ 0, %for.cond6.preheader.us.us ]
  %score.2180.us.us = phi float [ %add112.us.us, %for.body9.us.us ], [ %score.1185.us.us, %for.cond6.preheader.us.us ]
  %nglen.2179.us.us = phi i32 [ %add120.us.us, %for.body9.us.us ], [ %nglen.1184.us.us, %for.cond6.preheader.us.us ]
  %gc2.0178.us.us = phi i32 [ %conv22.us.us, %for.body9.us.us ], [ 0, %for.cond6.preheader.us.us ]
  %gc1.0177.us.us = phi i32 [ %conv15.us.us, %for.body9.us.us ], [ 0, %for.cond6.preheader.us.us ]
  %arrayidx12.us.us = getelementptr inbounds i8, ptr %3, i64 %indvars.iv
  %5 = load i8, ptr %arrayidx12.us.us, align 1, !tbaa !5
  %cmp14.us.us = icmp eq i8 %5, 45
  %conv15.us.us = zext i1 %cmp14.us.us to i32
  %arrayidx19.us.us = getelementptr inbounds i8, ptr %4, i64 %indvars.iv
  %6 = load i8, ptr %arrayidx19.us.us, align 1, !tbaa !5
  %cmp21.us.us = icmp eq i8 %6, 45
  %conv22.us.us = zext i1 %cmp21.us.us to i32
  %lnot.ext.us.us = xor i32 %gc1.0177.us.us, 1
  %lnot.ext25.us.us = xor i32 %gc2.0178.us.us, 1
  %mul34.us.us = select i1 %cmp14.us.us, i32 0, i32 %gc1.0177.us.us
  %mul38.us.us = mul nuw nsw i32 %mul34.us.us, %lnot.ext25.us.us
  %mul26174.us.us = select i1 %cmp14.us.us, i32 %lnot.ext.us.us, i32 %gc1.0177.us.us
  %mul50.us.us = select i1 %cmp14.us.us, i32 0, i32 %lnot.ext.us.us
  %add56.v.us.us = select i1 %cmp21.us.us, i32 %mul50.us.us, i32 %mul26174.us.us
  %add56.us.us = mul nuw nsw i32 %add56.v.us.us, %lnot.ext25.us.us
  %7 = mul nuw nsw i32 %lnot.ext.us.us, %gc2.0178.us.us
  %add79.us.us = select i1 %cmp21.us.us, i32 %mul38.us.us, i32 %7
  %add89.us.us = add nuw nsw i32 %add79.us.us, %add56.us.us
  %conv90.us.us = sitofp i32 %add89.us.us to float
  %conv91.us.us = fpext float %conv90.us.us to double
  %mul92.us.us = fmul double %conv91.us.us, 5.000000e-01
  %conv95.us.us = fpext float %score.2180.us.us to double
  %8 = tail call double @llvm.fmuladd.f64(double %mul92.us.us, double %conv93, double %conv95.us.us)
  %conv96.us.us = fptrunc double %8 to float
  %idxprom102.us.us = sext i8 %5 to i64
  %idxprom109.us.us = sext i8 %6 to i64
  %arrayidx110.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom102.us.us, i64 %idxprom109.us.us
  %9 = load i32, ptr %arrayidx110.us.us, align 4, !tbaa !10
  %conv111.us.us = sitofp i32 %9 to float
  %add112.us.us = fadd float %conv111.us.us, %conv96.us.us
  %mulbool.demorgan.us.us = or i1 %cmp14.us.us, %cmp21.us.us
  %mulbool.us.us = xor i1 %mulbool.demorgan.us.us, true
  %mul119.us.us = zext i1 %mulbool.us.us to i32
  %add120.us.us = add nsw i32 %nglen.2179.us.us, %mul119.us.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond6.for.inc121_crit_edge.us.us, label %for.body9.us.us, !llvm.loop !379

for.cond6.for.inc121_crit_edge.us.us:             ; preds = %for.body9.us.us
  %indvars.iv.next203 = add nuw nsw i64 %indvars.iv202, 1
  %exitcond206.not = icmp eq i64 %indvars.iv.next203, %wide.trip.count205
  br i1 %exitcond206.not, label %for.cond.loopexit.us, label %for.cond6.preheader.us.us, !llvm.loop !380

for.end126:                                       ; preds = %for.cond.loopexit.us, %for.body.lr.ph, %entry
  %nglen.0.lcssa = phi i32 [ 0, %entry ], [ 0, %for.body.lr.ph ], [ %nglen.1.lcssa.us, %for.cond.loopexit.us ]
  %score.0.lcssa = phi float [ 0.000000e+00, %entry ], [ 0.000000e+00, %for.body.lr.ph ], [ %score.1.lcssa.us, %for.cond.loopexit.us ]
  %conv127 = fpext float %score.0.lcssa to double
  %conv128 = sitofp i32 %nglen.0.lcssa to double
  %div = fdiv double %conv127, %conv128
  %add129 = fadd double %div, 4.000000e+02
  ret double %add129
}

; Function Attrs: nofree nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local double @SSPscore___(i32 noundef %s, ptr nocapture noundef readonly %seq, i32 noundef %ex) local_unnamed_addr #13 {
entry:
  %0 = load ptr, ptr %seq, align 8, !tbaa !13
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #31
  %call.fr = freeze i64 %call
  %cmp175 = icmp sgt i32 %s, 0
  br i1 %cmp175, label %for.body.lr.ph, label %for.end124

for.body.lr.ph:                                   ; preds = %entry
  %conv = trunc i64 %call.fr to i32
  %cmp5168 = icmp sgt i32 %conv, 0
  %idxprom = sext i32 %ex to i64
  %arrayidx8 = getelementptr inbounds ptr, ptr %seq, i64 %idxprom
  %1 = load i32, ptr @penalty, align 4
  %conv94 = sitofp i32 %1 to double
  br i1 %cmp5168, label %for.body.us.preheader, label %for.end124

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %2 = zext i32 %ex to i64
  %wide.trip.count186 = zext i32 %s to i64
  %wide.trip.count = and i64 %call.fr, 4294967295
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us.preheader, %for.inc122.us
  %indvars.iv183 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next184, %for.inc122.us ]
  %score.0179.us = phi float [ 0.000000e+00, %for.body.us.preheader ], [ %score.2.us, %for.inc122.us ]
  %cmp2.us = icmp eq i64 %indvars.iv183, %2
  br i1 %cmp2.us, label %for.inc122.us, label %for.cond4.preheader.us

for.body7.us:                                     ; preds = %for.cond4.preheader.us, %for.body7.us
  %indvars.iv = phi i64 [ 0, %for.cond4.preheader.us ], [ %indvars.iv.next, %for.body7.us ]
  %score.1173.us = phi float [ %score.0179.us, %for.cond4.preheader.us ], [ %add113.us, %for.body7.us ]
  %gc2.0170.us = phi i32 [ 0, %for.cond4.preheader.us ], [ %conv20.us, %for.body7.us ]
  %gc1.0169.us = phi i32 [ 0, %for.cond4.preheader.us ], [ %conv13.us, %for.body7.us ]
  %arrayidx10.us = getelementptr inbounds i8, ptr %11, i64 %indvars.iv
  %3 = load i8, ptr %arrayidx10.us, align 1, !tbaa !5
  %cmp12.us = icmp eq i8 %3, 45
  %conv13.us = zext i1 %cmp12.us to i32
  %arrayidx17.us = getelementptr inbounds i8, ptr %12, i64 %indvars.iv
  %4 = load i8, ptr %arrayidx17.us, align 1, !tbaa !5
  %cmp19.us = icmp eq i8 %4, 45
  %conv20.us = zext i1 %cmp19.us to i32
  %lnot.ext.us = xor i32 %gc1.0169.us, 1
  %mul.us = select i1 %cmp12.us, i32 %lnot.ext.us, i32 0
  %lnot.ext23.us = xor i32 %gc2.0170.us, 1
  %mul32.us = select i1 %cmp12.us, i32 0, i32 %gc1.0169.us
  %mul36.us = mul nuw nsw i32 %mul32.us, %lnot.ext23.us
  %mul24167.us = select i1 %cmp12.us, i32 %lnot.ext.us, i32 %gc1.0169.us
  %mul47.us = select i1 %cmp12.us, i32 0, i32 %lnot.ext.us
  %add53.v.us = select i1 %cmp19.us, i32 %mul47.us, i32 %mul24167.us
  %add53.us = mul nuw nsw i32 %add53.v.us, %lnot.ext23.us
  %mul61.us = mul nuw nsw i32 %mul47.us, %gc2.0170.us
  %mul65.us = select i1 %cmp19.us, i32 0, i32 %mul61.us
  %add66.us = add nuw nsw i32 %add53.us, %mul65.us
  %conv67.us = sitofp i32 %add66.us to double
  %mul72.us = mul nuw nsw i32 %mul.us, %gc2.0170.us
  %5 = sitofp i32 %mul72.us to double
  %conv77.us = select i1 %cmp19.us, double 0.000000e+00, double %5
  %6 = tail call double @llvm.fmuladd.f64(double %conv77.us, double 2.000000e+00, double %conv67.us)
  %7 = sitofp i32 %mul36.us to double
  %conv88.us = select i1 %cmp19.us, double %7, double 0.000000e+00
  %8 = tail call double @llvm.fmuladd.f64(double %conv88.us, double 2.000000e+00, double %6)
  %conv90.us = fptosi double %8 to i32
  %conv91.us = sitofp i32 %conv90.us to float
  %conv92.us = fpext float %conv91.us to double
  %mul93.us = fmul double %conv92.us, 5.000000e-01
  %conv96.us = fpext float %score.1173.us to double
  %9 = tail call double @llvm.fmuladd.f64(double %mul93.us, double %conv94, double %conv96.us)
  %conv97.us = fptrunc double %9 to float
  %idxprom103.us = sext i8 %3 to i64
  %idxprom110.us = sext i8 %4 to i64
  %arrayidx111.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom103.us, i64 %idxprom110.us
  %10 = load i32, ptr %arrayidx111.us, align 4, !tbaa !10
  %conv112.us = sitofp i32 %10 to float
  %add113.us = fadd float %conv112.us, %conv97.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.inc122.us, label %for.body7.us, !llvm.loop !381

for.inc122.us:                                    ; preds = %for.body7.us, %for.body.us
  %score.2.us = phi float [ %score.0179.us, %for.body.us ], [ %add113.us, %for.body7.us ]
  %indvars.iv.next184 = add nuw nsw i64 %indvars.iv183, 1
  %exitcond187.not = icmp eq i64 %indvars.iv.next184, %wide.trip.count186
  br i1 %exitcond187.not, label %for.end124, label %for.body.us, !llvm.loop !382

for.cond4.preheader.us:                           ; preds = %for.body.us
  %11 = load ptr, ptr %arrayidx8, align 8, !tbaa !13
  %arrayidx15.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv183
  %12 = load ptr, ptr %arrayidx15.us, align 8, !tbaa !13
  br label %for.body7.us

for.end124:                                       ; preds = %for.inc122.us, %for.body.lr.ph, %entry
  %score.0.lcssa = phi float [ 0.000000e+00, %entry ], [ 0.000000e+00, %for.body.lr.ph ], [ %score.2.us, %for.inc122.us ]
  %conv125 = fpext float %score.0.lcssa to double
  ret double %conv125
}

; Function Attrs: nofree nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local double @SSPscore(i32 noundef %s, ptr nocapture noundef readonly %seq) local_unnamed_addr #13 {
entry:
  %0 = load ptr, ptr %seq, align 8, !tbaa !13
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #31
  %call.fr = freeze i64 %call
  %sub = add i32 %s, -1
  %cmp186 = icmp sgt i32 %s, 1
  br i1 %cmp186, label %for.body.lr.ph, label %for.end126

for.body.lr.ph:                                   ; preds = %entry
  %conv = trunc i64 %call.fr to i32
  %cmp7172 = icmp sgt i32 %conv, 0
  %1 = load i32, ptr @penalty, align 4
  %conv93 = sitofp i32 %1 to double
  br i1 %cmp7172, label %for.body.us.preheader, label %for.end126

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %2 = zext i32 %s to i64
  %wide.trip.count205 = zext i32 %sub to i64
  %wide.trip.count200 = zext i32 %s to i64
  %wide.trip.count = and i64 %call.fr, 4294967295
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us.preheader, %for.cond.loopexit.us
  %indvars.iv202 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next203, %for.cond.loopexit.us ]
  %indvars.iv195 = phi i64 [ 1, %for.body.us.preheader ], [ %indvars.iv.next196, %for.cond.loopexit.us ]
  %score.0189.us = phi float [ 0.000000e+00, %for.body.us.preheader ], [ %score.1.lcssa.us, %for.cond.loopexit.us ]
  %indvars.iv.next203 = add nuw nsw i64 %indvars.iv202, 1
  %cmp3179.us = icmp ult i64 %indvars.iv.next203, %2
  br i1 %cmp3179.us, label %for.cond6.preheader.lr.ph.us, label %for.cond.loopexit.us

for.cond.loopexit.us:                             ; preds = %for.cond6.for.inc121_crit_edge.us.us, %for.body.us
  %score.1.lcssa.us = phi float [ %score.0189.us, %for.body.us ], [ %add112.us.us, %for.cond6.for.inc121_crit_edge.us.us ]
  %indvars.iv.next196 = add nuw nsw i64 %indvars.iv195, 1
  %exitcond206.not = icmp eq i64 %indvars.iv.next203, %wide.trip.count205
  br i1 %exitcond206.not, label %for.end126, label %for.body.us, !llvm.loop !383

for.cond6.preheader.lr.ph.us:                     ; preds = %for.body.us
  %arrayidx10.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv202
  %3 = load ptr, ptr %arrayidx10.us, align 8, !tbaa !13
  br label %for.cond6.preheader.us.us

for.cond6.preheader.us.us:                        ; preds = %for.cond6.for.inc121_crit_edge.us.us, %for.cond6.preheader.lr.ph.us
  %indvars.iv197 = phi i64 [ %indvars.iv.next198, %for.cond6.for.inc121_crit_edge.us.us ], [ %indvars.iv195, %for.cond6.preheader.lr.ph.us ]
  %score.1182.us.us = phi float [ %add112.us.us, %for.cond6.for.inc121_crit_edge.us.us ], [ %score.0189.us, %for.cond6.preheader.lr.ph.us ]
  %arrayidx17.us.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv197
  %4 = load ptr, ptr %arrayidx17.us.us, align 8, !tbaa !13
  br label %for.body9.us.us

for.body9.us.us:                                  ; preds = %for.body9.us.us, %for.cond6.preheader.us.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body9.us.us ], [ 0, %for.cond6.preheader.us.us ]
  %score.2177.us.us = phi float [ %add112.us.us, %for.body9.us.us ], [ %score.1182.us.us, %for.cond6.preheader.us.us ]
  %gc2.0175.us.us = phi i32 [ %conv22.us.us, %for.body9.us.us ], [ 0, %for.cond6.preheader.us.us ]
  %gc1.0174.us.us = phi i32 [ %conv15.us.us, %for.body9.us.us ], [ 0, %for.cond6.preheader.us.us ]
  %arrayidx12.us.us = getelementptr inbounds i8, ptr %3, i64 %indvars.iv
  %5 = load i8, ptr %arrayidx12.us.us, align 1, !tbaa !5
  %cmp14.us.us = icmp eq i8 %5, 45
  %conv15.us.us = zext i1 %cmp14.us.us to i32
  %arrayidx19.us.us = getelementptr inbounds i8, ptr %4, i64 %indvars.iv
  %6 = load i8, ptr %arrayidx19.us.us, align 1, !tbaa !5
  %cmp21.us.us = icmp eq i8 %6, 45
  %conv22.us.us = zext i1 %cmp21.us.us to i32
  %lnot.ext.us.us = xor i32 %gc1.0174.us.us, 1
  %lnot.ext25.us.us = xor i32 %gc2.0175.us.us, 1
  %mul34.us.us = select i1 %cmp14.us.us, i32 0, i32 %gc1.0174.us.us
  %mul38.us.us = mul nuw nsw i32 %mul34.us.us, %lnot.ext25.us.us
  %mul26171.us.us = select i1 %cmp14.us.us, i32 %lnot.ext.us.us, i32 %gc1.0174.us.us
  %mul50.us.us = select i1 %cmp14.us.us, i32 0, i32 %lnot.ext.us.us
  %add56.v.us.us = select i1 %cmp21.us.us, i32 %mul50.us.us, i32 %mul26171.us.us
  %add56.us.us = mul nuw nsw i32 %add56.v.us.us, %lnot.ext25.us.us
  %7 = mul nuw nsw i32 %lnot.ext.us.us, %gc2.0175.us.us
  %add79.us.us = select i1 %cmp21.us.us, i32 %mul38.us.us, i32 %7
  %add89.us.us = add nuw nsw i32 %add79.us.us, %add56.us.us
  %conv90.us.us = sitofp i32 %add89.us.us to float
  %conv91.us.us = fpext float %conv90.us.us to double
  %mul92.us.us = fmul double %conv91.us.us, 5.000000e-01
  %conv95.us.us = fpext float %score.2177.us.us to double
  %8 = tail call double @llvm.fmuladd.f64(double %mul92.us.us, double %conv93, double %conv95.us.us)
  %conv96.us.us = fptrunc double %8 to float
  %idxprom102.us.us = sext i8 %5 to i64
  %idxprom109.us.us = sext i8 %6 to i64
  %arrayidx110.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom102.us.us, i64 %idxprom109.us.us
  %9 = load i32, ptr %arrayidx110.us.us, align 4, !tbaa !10
  %conv111.us.us = sitofp i32 %9 to float
  %add112.us.us = fadd float %conv111.us.us, %conv96.us.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond6.for.inc121_crit_edge.us.us, label %for.body9.us.us, !llvm.loop !384

for.cond6.for.inc121_crit_edge.us.us:             ; preds = %for.body9.us.us
  %indvars.iv.next198 = add nuw nsw i64 %indvars.iv197, 1
  %exitcond201.not = icmp eq i64 %indvars.iv.next198, %wide.trip.count200
  br i1 %exitcond201.not, label %for.cond.loopexit.us, label %for.cond6.preheader.us.us, !llvm.loop !385

for.end126:                                       ; preds = %for.cond.loopexit.us, %for.body.lr.ph, %entry
  %score.0.lcssa = phi float [ 0.000000e+00, %entry ], [ 0.000000e+00, %for.body.lr.ph ], [ %score.1.lcssa.us, %for.cond.loopexit.us ]
  %conv127 = fpext float %score.0.lcssa to double
  ret double %conv127
}

; Function Attrs: nofree nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local double @DSPscore(i32 noundef %s, ptr nocapture noundef readonly %seq) local_unnamed_addr #13 {
entry:
  %0 = load ptr, ptr %seq, align 8, !tbaa !13
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #31
  %call.fr = freeze i64 %call
  %conv = trunc i64 %call.fr to i32
  %sub = add i32 %s, -1
  %cmp187 = icmp sgt i32 %s, 1
  br i1 %cmp187, label %for.body.lr.ph, label %for.end109

for.body.lr.ph:                                   ; preds = %entry
  %sub96 = add nsw i32 %conv, -2
  %cmp10177 = icmp sgt i32 %conv, 0
  %1 = load i32, ptr @penalty, align 4
  %conv72 = sitofp i32 %1 to double
  br i1 %cmp10177, label %for.body.us.preheader, label %for.end109

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %2 = zext i32 %s to i64
  %wide.trip.count207 = zext i32 %sub to i64
  %wide.trip.count = zext i32 %s to i64
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us.preheader, %for.cond.loopexit.us
  %indvars.iv204 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next205, %for.cond.loopexit.us ]
  %indvars.iv198 = phi i64 [ 1, %for.body.us.preheader ], [ %indvars.iv.next199, %for.cond.loopexit.us ]
  %score.0188.us = phi double [ 0.000000e+00, %for.body.us.preheader ], [ %score.1.lcssa.us, %for.cond.loopexit.us ]
  %indvars.iv.next205 = add nuw nsw i64 %indvars.iv204, 1
  %cmp3183.us = icmp ult i64 %indvars.iv.next205, %2
  br i1 %cmp3183.us, label %for.body5.lr.ph.us, label %for.cond.loopexit.us

for.cond.loopexit.us:                             ; preds = %for.end.us.us, %for.body.us
  %score.1.lcssa.us = phi double [ %score.0188.us, %for.body.us ], [ %add103.us.us, %for.end.us.us ]
  %indvars.iv.next199 = add nuw nsw i64 %indvars.iv198, 1
  %exitcond208.not = icmp eq i64 %indvars.iv.next205, %wide.trip.count207
  br i1 %exitcond208.not, label %for.end109, label %for.body.us, !llvm.loop !386

for.body5.lr.ph.us:                               ; preds = %for.body.us
  %arrayidx6.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv204
  %3 = load ptr, ptr %arrayidx6.us, align 8, !tbaa !13
  br label %for.body5.us.us

for.body5.us.us:                                  ; preds = %for.end.us.us, %for.body5.lr.ph.us
  %indvars.iv200 = phi i64 [ %indvars.iv.next201, %for.end.us.us ], [ %indvars.iv198, %for.body5.lr.ph.us ]
  %score.1184.us.us = phi double [ %add103.us.us, %for.end.us.us ], [ %score.0188.us, %for.body5.lr.ph.us ]
  %arrayidx8.us.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv200
  %4 = load ptr, ptr %arrayidx8.us.us, align 8, !tbaa !13
  br label %for.body12.us.us

for.body12.us.us:                                 ; preds = %for.inc.us.us, %for.body5.us.us
  %tmpscore.0179.us.us = phi double [ 0.000000e+00, %for.body5.us.us ], [ %tmpscore.3.us.us, %for.inc.us.us ]
  %k.0178.us.us = phi i32 [ 0, %for.body5.us.us ], [ %inc102.us.us, %for.inc.us.us ]
  %idxprom13.us.us = sext i32 %k.0178.us.us to i64
  %arrayidx14.us.us = getelementptr inbounds i8, ptr %3, i64 %idxprom13.us.us
  %5 = load i8, ptr %arrayidx14.us.us, align 1, !tbaa !5
  %cmp16.us.us = icmp eq i8 %5, 45
  br i1 %cmp16.us.us, label %land.lhs.true.us.us, label %if.end65.us.us

if.end65.us.us:                                   ; preds = %for.body12.us.us
  %idxprom26.us.us = sext i8 %5 to i64
  %arrayidx29.us.us = getelementptr inbounds i8, ptr %4, i64 %idxprom13.us.us
  %6 = load i8, ptr %arrayidx29.us.us, align 1, !tbaa !5
  %idxprom31.us.us = sext i8 %6 to i64
  %arrayidx32.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom26.us.us, i64 %idxprom31.us.us
  %7 = load i32, ptr %arrayidx32.us.us, align 4, !tbaa !10
  %conv33.us.us = sitofp i32 %7 to double
  %add34.us.us = fadd double %tmpscore.0179.us.us, %conv33.us.us
  %cmp69.us.us = icmp eq i8 %6, 45
  br i1 %cmp69.us.us, label %if.then71.us.us, label %for.inc.us.us

if.then71.us.us:                                  ; preds = %if.end65.us.us
  %add73.us.us = fadd double %add34.us.us, %conv72
  %inc75160.us.us = add nsw i32 %k.0178.us.us, 1
  %idxprom76161.us.us = sext i32 %inc75160.us.us to i64
  %arrayidx77162.us.us = getelementptr inbounds i8, ptr %4, i64 %idxprom76161.us.us
  %8 = load i8, ptr %arrayidx77162.us.us, align 1, !tbaa !5
  %cmp79163.us.us = icmp eq i8 %8, 45
  br i1 %cmp79163.us.us, label %while.body81.us.us, label %while.end94.us.us

while.end94.us.us.loopexit:                       ; preds = %while.body81.us.us
  %9 = trunc i64 %indvars.iv to i32
  br label %while.end94.us.us

while.end94.us.us:                                ; preds = %while.end94.us.us.loopexit, %if.then71.us.us
  %k.2.lcssa.us.us = phi i32 [ %k.0178.us.us, %if.then71.us.us ], [ %9, %while.end94.us.us.loopexit ]
  %tmpscore.2.lcssa.us.us = phi double [ %add73.us.us, %if.then71.us.us ], [ %add93.us.us, %while.end94.us.us.loopexit ]
  %cmp97.us.us = icmp sgt i32 %k.2.lcssa.us.us, %sub96
  br i1 %cmp97.us.us, label %for.end.us.us, label %for.inc.us.us

while.body81.us.us:                               ; preds = %if.then71.us.us, %while.body81.us.us
  %indvars.iv = phi i64 [ %indvars.iv.next, %while.body81.us.us ], [ %idxprom76161.us.us, %if.then71.us.us ]
  %tmpscore.2164.us.us = phi double [ %add93.us.us, %while.body81.us.us ], [ %add73.us.us, %if.then71.us.us ]
  %arrayidx83.us.us = getelementptr inbounds i8, ptr %3, i64 %indvars.iv
  %10 = load i8, ptr %arrayidx83.us.us, align 1, !tbaa !5
  %idxprom85.us.us = sext i8 %10 to i64
  %arrayidx91.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom85.us.us, i64 45
  %11 = load i32, ptr %arrayidx91.us.us, align 4, !tbaa !10
  %conv92.us.us = sitofp i32 %11 to double
  %add93.us.us = fadd double %tmpscore.2164.us.us, %conv92.us.us
  %indvars.iv.next = add i64 %indvars.iv, 1
  %arrayidx77.us.us = getelementptr inbounds i8, ptr %4, i64 %indvars.iv.next
  %12 = load i8, ptr %arrayidx77.us.us, align 1, !tbaa !5
  %cmp79.us.us = icmp eq i8 %12, 45
  br i1 %cmp79.us.us, label %while.body81.us.us, label %while.end94.us.us.loopexit, !llvm.loop !387

land.lhs.true.us.us:                              ; preds = %for.body12.us.us
  %arrayidx19.us.us = getelementptr inbounds i8, ptr %4, i64 %idxprom13.us.us
  %13 = load i8, ptr %arrayidx19.us.us, align 1, !tbaa !5
  %cmp21.us.us = icmp eq i8 %13, 45
  br i1 %cmp21.us.us, label %for.inc.us.us, label %if.then40.us.us

if.then40.us.us:                                  ; preds = %land.lhs.true.us.us
  %idxprom31155.us.us = sext i8 %13 to i64
  %arrayidx32156.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 45, i64 %idxprom31155.us.us
  %14 = load i32, ptr %arrayidx32156.us.us, align 4, !tbaa !10
  %conv33157.us.us = sitofp i32 %14 to double
  %add34158.us.us = fadd double %tmpscore.0179.us.us, %conv33157.us.us
  %add42.us.us = fadd double %add34158.us.us, %conv72
  %inc168.us.us = add nsw i32 %k.0178.us.us, 1
  %idxprom43169.us.us = sext i32 %inc168.us.us to i64
  %arrayidx44170.us.us = getelementptr inbounds i8, ptr %3, i64 %idxprom43169.us.us
  %15 = load i8, ptr %arrayidx44170.us.us, align 1, !tbaa !5
  %cmp46171.us.us = icmp eq i8 %15, 45
  br i1 %cmp46171.us.us, label %while.body.us.us, label %while.end.us.us

while.end.us.us.loopexit:                         ; preds = %while.body.us.us
  %16 = trunc i64 %indvars.iv195 to i32
  br label %while.end.us.us

while.end.us.us:                                  ; preds = %while.end.us.us.loopexit, %if.then40.us.us
  %k.1.lcssa.us.us = phi i32 [ %k.0178.us.us, %if.then40.us.us ], [ %16, %while.end.us.us.loopexit ]
  %tmpscore.1.lcssa.us.us = phi double [ %add42.us.us, %if.then40.us.us ], [ %add59.us.us, %while.end.us.us.loopexit ]
  %cmp61.us.us = icmp sgt i32 %k.1.lcssa.us.us, %sub96
  br i1 %cmp61.us.us, label %for.end.us.us, label %for.inc.us.us

for.end.us.us:                                    ; preds = %for.inc.us.us, %while.end.us.us, %while.end94.us.us
  %tmpscore.4.us.us = phi double [ %tmpscore.2.lcssa.us.us, %while.end94.us.us ], [ %tmpscore.1.lcssa.us.us, %while.end.us.us ], [ %tmpscore.3.us.us, %for.inc.us.us ]
  %add103.us.us = fadd double %score.1184.us.us, %tmpscore.4.us.us
  %indvars.iv.next201 = add nuw nsw i64 %indvars.iv200, 1
  %exitcond203.not = icmp eq i64 %indvars.iv.next201, %wide.trip.count
  br i1 %exitcond203.not, label %for.cond.loopexit.us, label %for.body5.us.us, !llvm.loop !388

while.body.us.us:                                 ; preds = %if.then40.us.us, %while.body.us.us
  %indvars.iv195 = phi i64 [ %indvars.iv.next196, %while.body.us.us ], [ %idxprom43169.us.us, %if.then40.us.us ]
  %tmpscore.1172.us.us = phi double [ %add59.us.us, %while.body.us.us ], [ %add42.us.us, %if.then40.us.us ]
  %arrayidx54.us.us = getelementptr inbounds i8, ptr %4, i64 %indvars.iv195
  %17 = load i8, ptr %arrayidx54.us.us, align 1, !tbaa !5
  %idxprom56.us.us = sext i8 %17 to i64
  %arrayidx57.us.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 45, i64 %idxprom56.us.us
  %18 = load i32, ptr %arrayidx57.us.us, align 4, !tbaa !10
  %conv58.us.us = sitofp i32 %18 to double
  %add59.us.us = fadd double %tmpscore.1172.us.us, %conv58.us.us
  %indvars.iv.next196 = add i64 %indvars.iv195, 1
  %arrayidx44.us.us = getelementptr inbounds i8, ptr %3, i64 %indvars.iv.next196
  %19 = load i8, ptr %arrayidx44.us.us, align 1, !tbaa !5
  %cmp46.us.us = icmp eq i8 %19, 45
  br i1 %cmp46.us.us, label %while.body.us.us, label %while.end.us.us.loopexit, !llvm.loop !389

for.inc.us.us:                                    ; preds = %while.end.us.us, %land.lhs.true.us.us, %while.end94.us.us, %if.end65.us.us
  %k.3.us.us = phi i32 [ %k.0178.us.us, %land.lhs.true.us.us ], [ %k.1.lcssa.us.us, %while.end.us.us ], [ %k.2.lcssa.us.us, %while.end94.us.us ], [ %k.0178.us.us, %if.end65.us.us ]
  %tmpscore.3.us.us = phi double [ %tmpscore.0179.us.us, %land.lhs.true.us.us ], [ %tmpscore.1.lcssa.us.us, %while.end.us.us ], [ %tmpscore.2.lcssa.us.us, %while.end94.us.us ], [ %add34.us.us, %if.end65.us.us ]
  %inc102.us.us = add nsw i32 %k.3.us.us, 1
  %cmp10.us.us = icmp slt i32 %inc102.us.us, %conv
  br i1 %cmp10.us.us, label %for.body12.us.us, label %for.end.us.us, !llvm.loop !390

for.end109:                                       ; preds = %for.cond.loopexit.us, %for.body.lr.ph, %entry
  %score.0.lcssa = phi double [ 0.000000e+00, %entry ], [ 0.000000e+00, %for.body.lr.ph ], [ %score.1.lcssa.us, %for.cond.loopexit.us ]
  ret double %score.0.lcssa
}

; Function Attrs: nounwind uwtable
define dso_local i32 @searchAnchors(i32 noundef %nseq, ptr nocapture noundef readonly %seq, ptr nocapture noundef %seg) local_unnamed_addr #12 {
entry:
  %0 = load ptr, ptr %seq, align 8, !tbaa !13
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #31
  %conv = trunc i64 %call to i32
  %1 = load i32, ptr @searchAnchors.alloclen, align 4, !tbaa !10
  %cmp = icmp slt i32 %1, %conv
  br i1 %cmp, label %if.then, label %if.end7

if.then:                                          ; preds = %entry
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.else, label %if.then2

if.then2:                                         ; preds = %if.then
  %2 = load ptr, ptr @searchAnchors.stra, align 8, !tbaa !13
  tail call void @FreeDoubleVec(ptr noundef %2) #34
  br label %if.end

if.else:                                          ; preds = %if.then
  %3 = load i32, ptr @divThreshold, align 4, !tbaa !10
  %conv3 = sitofp i32 %3 to double
  %div = fdiv double %conv3, 1.000000e+02
  %mul = fmul double %div, 6.000000e+02
  %4 = load i32, ptr @divWinSize, align 4, !tbaa !10
  %conv4 = sitofp i32 %4 to double
  %mul5 = fmul double %mul, %conv4
  store double %mul5, ptr @searchAnchors.threshold, align 8, !tbaa !20
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then2
  %call6 = tail call ptr @AllocateDoubleVec(i32 noundef %conv) #34
  store ptr %call6, ptr @searchAnchors.stra, align 8, !tbaa !13
  store i32 %conv, ptr @searchAnchors.alloclen, align 4, !tbaa !10
  br label %if.end7

if.end7:                                          ; preds = %if.end, %entry
  %cmp8202 = icmp sgt i32 %conv, 0
  br i1 %cmp8202, label %for.body.lr.ph, label %for.end54

for.body.lr.ph:                                   ; preds = %if.end7
  %5 = load ptr, ptr @searchAnchors.stra, align 8, !tbaa !13
  %sub = add i32 %nseq, -1
  %cmp12200 = icmp sgt i32 %nseq, 1
  %conv44 = sitofp i32 %nseq to double
  %conv46 = sitofp i32 %sub to double
  %mul47 = fmul double %conv44, %conv46
  %div48 = fmul double %mul47, 5.000000e-01
  br i1 %cmp12200, label %for.body.us.preheader, label %for.body.preheader

for.body.preheader:                               ; preds = %for.body.lr.ph
  %wide.trip.count = and i64 %call, 4294967295
  %div51 = fdiv double 0.000000e+00, %div48
  %min.iters.check = icmp ult i64 %wide.trip.count, 4
  br i1 %min.iters.check, label %for.body.preheader271, label %vector.ph

vector.ph:                                        ; preds = %for.body.preheader
  %n.mod.vf = and i64 %call, 3
  %n.vec = sub nsw i64 %wide.trip.count, %n.mod.vf
  %broadcast.splatinsert = insertelement <2 x double> poison, double %div51, i64 0
  %broadcast.splat = shufflevector <2 x double> %broadcast.splatinsert, <2 x double> poison, <2 x i32> zeroinitializer
  %broadcast.splatinsert268 = insertelement <2 x double> poison, double %div51, i64 0
  %broadcast.splat269 = shufflevector <2 x double> %broadcast.splatinsert268, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %6 = getelementptr inbounds double, ptr %5, i64 %index
  store <2 x double> %broadcast.splat, ptr %6, align 8, !tbaa !20
  %7 = getelementptr inbounds double, ptr %6, i64 2
  store <2 x double> %broadcast.splat269, ptr %7, align 8, !tbaa !20
  %index.next = add nuw i64 %index, 4
  %8 = icmp eq i64 %index.next, %n.vec
  br i1 %8, label %middle.block, label %vector.body, !llvm.loop !391

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.mod.vf, 0
  br i1 %cmp.n, label %for.end54, label %for.body.preheader271

for.body.preheader271:                            ; preds = %for.body.preheader, %middle.block
  %indvars.iv.ph = phi i64 [ 0, %for.body.preheader ], [ %n.vec, %middle.block ]
  br label %for.body

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %9 = zext i32 %nseq to i64
  %wide.trip.count241 = and i64 %call, 4294967295
  %wide.trip.count236 = zext i32 %sub to i64
  %wide.trip.count231 = zext i32 %nseq to i64
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us.preheader, %for.cond11.for.end43_crit_edge.us
  %indvars.iv238 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next239, %for.cond11.for.end43_crit_edge.us ]
  %arrayidx10.us = getelementptr inbounds double, ptr %5, i64 %indvars.iv238
  store double 0.000000e+00, ptr %arrayidx10.us, align 8, !tbaa !20
  br label %for.body14.us

for.body14.us:                                    ; preds = %for.body.us, %for.cond11.loopexit.us
  %10 = phi double [ 0.000000e+00, %for.body.us ], [ %18, %for.cond11.loopexit.us ]
  %indvars.iv233 = phi i64 [ 0, %for.body.us ], [ %indvars.iv.next234, %for.cond11.loopexit.us ]
  %indvars.iv226 = phi i64 [ 1, %for.body.us ], [ %indvars.iv.next227, %for.cond11.loopexit.us ]
  %indvars.iv.next234 = add nuw nsw i64 %indvars.iv233, 1
  %cmp16198.us = icmp ult i64 %indvars.iv.next234, %9
  br i1 %cmp16198.us, label %for.body18.lr.ph.us, label %for.cond11.loopexit.us

for.body18.us:                                    ; preds = %for.body18.lr.ph.us, %for.body18.us
  %11 = phi double [ %10, %for.body18.lr.ph.us ], [ %add40.us, %for.body18.us ]
  %indvars.iv228 = phi i64 [ %indvars.iv226, %for.body18.lr.ph.us ], [ %indvars.iv.next229, %for.body18.us ]
  %12 = load i8, ptr %arrayidx22.us, align 1, !tbaa !5
  %idxprom24.us = sext i8 %12 to i64
  %arrayidx25.us = getelementptr inbounds [128 x i32], ptr @amino_n, i64 0, i64 %idxprom24.us
  %13 = load i32, ptr %arrayidx25.us, align 4, !tbaa !10
  %idxprom26.us = sext i32 %13 to i64
  %arrayidx29.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv228
  %14 = load ptr, ptr %arrayidx29.us, align 8, !tbaa !13
  %arrayidx31.us = getelementptr inbounds i8, ptr %14, i64 %indvars.iv238
  %15 = load i8, ptr %arrayidx31.us, align 1, !tbaa !5
  %idxprom33.us = sext i8 %15 to i64
  %arrayidx34.us = getelementptr inbounds [128 x i32], ptr @amino_n, i64 0, i64 %idxprom33.us
  %16 = load i32, ptr %arrayidx34.us, align 4, !tbaa !10
  %idxprom35.us = sext i32 %16 to i64
  %arrayidx36.us = getelementptr inbounds [26 x [26 x i32]], ptr @n_dis, i64 0, i64 %idxprom26.us, i64 %idxprom35.us
  %17 = load i32, ptr %arrayidx36.us, align 4, !tbaa !10
  %conv37.us = sitofp i32 %17 to double
  %add40.us = fadd double %11, %conv37.us
  store double %add40.us, ptr %arrayidx10.us, align 8, !tbaa !20
  %indvars.iv.next229 = add nuw nsw i64 %indvars.iv228, 1
  %exitcond232.not = icmp eq i64 %indvars.iv.next229, %wide.trip.count231
  br i1 %exitcond232.not, label %for.cond11.loopexit.us, label %for.body18.us, !llvm.loop !392

for.cond11.loopexit.us:                           ; preds = %for.body18.us, %for.body14.us
  %18 = phi double [ %10, %for.body14.us ], [ %add40.us, %for.body18.us ]
  %indvars.iv.next227 = add nuw nsw i64 %indvars.iv226, 1
  %exitcond237.not = icmp eq i64 %indvars.iv.next234, %wide.trip.count236
  br i1 %exitcond237.not, label %for.cond11.for.end43_crit_edge.us, label %for.body14.us, !llvm.loop !393

for.body18.lr.ph.us:                              ; preds = %for.body14.us
  %arrayidx20.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv233
  %19 = load ptr, ptr %arrayidx20.us, align 8, !tbaa !13
  %arrayidx22.us = getelementptr inbounds i8, ptr %19, i64 %indvars.iv238
  br label %for.body18.us

for.cond11.for.end43_crit_edge.us:                ; preds = %for.cond11.loopexit.us
  %div51.us = fdiv double %18, %div48
  store double %div51.us, ptr %arrayidx10.us, align 8, !tbaa !20
  %indvars.iv.next239 = add nuw nsw i64 %indvars.iv238, 1
  %exitcond242.not = icmp eq i64 %indvars.iv.next239, %wide.trip.count241
  br i1 %exitcond242.not, label %for.end54, label %for.body.us, !llvm.loop !394

for.body:                                         ; preds = %for.body.preheader271, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ %indvars.iv.ph, %for.body.preheader271 ]
  %arrayidx10 = getelementptr inbounds double, ptr %5, i64 %indvars.iv
  store double %div51, ptr %arrayidx10, align 8, !tbaa !20
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end54, label %for.body, !llvm.loop !395

for.end54:                                        ; preds = %for.body, %for.cond11.for.end43_crit_edge.us, %middle.block, %if.end7
  %skipForeward = getelementptr inbounds %struct._Segment, ptr %seg, i64 0, i32 4
  store i32 0, ptr %skipForeward, align 8, !tbaa !396
  %skipBackward = getelementptr inbounds %struct._Segment, ptr %seg, i64 1, i32 5
  store i32 0, ptr %skipBackward, align 4, !tbaa !398
  %20 = load i32, ptr @divWinSize, align 4, !tbaa !10
  %cmp57204 = icmp sgt i32 %20, 0
  br i1 %cmp57204, label %for.body59.lr.ph, label %for.cond66.preheader

for.body59.lr.ph:                                 ; preds = %for.end54
  %21 = load ptr, ptr @searchAnchors.stra, align 8, !tbaa !13
  %wide.trip.count246 = zext i32 %20 to i64
  %xtraiter = and i64 %wide.trip.count246, 7
  %22 = icmp ult i32 %20, 8
  br i1 %22, label %for.cond66.preheader.loopexit.unr-lcssa, label %for.body59.lr.ph.new

for.body59.lr.ph.new:                             ; preds = %for.body59.lr.ph
  %unroll_iter = and i64 %wide.trip.count246, 4294967288
  br label %for.body59

for.cond66.preheader.loopexit.unr-lcssa:          ; preds = %for.body59, %for.body59.lr.ph
  %add62.lcssa.ph = phi double [ undef, %for.body59.lr.ph ], [ %add62.7, %for.body59 ]
  %indvars.iv243.unr = phi i64 [ 0, %for.body59.lr.ph ], [ %indvars.iv.next244.7, %for.body59 ]
  %score.0206.unr = phi double [ 0.000000e+00, %for.body59.lr.ph ], [ %add62.7, %for.body59 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond66.preheader, label %for.body59.epil

for.body59.epil:                                  ; preds = %for.cond66.preheader.loopexit.unr-lcssa, %for.body59.epil
  %indvars.iv243.epil = phi i64 [ %indvars.iv.next244.epil, %for.body59.epil ], [ %indvars.iv243.unr, %for.cond66.preheader.loopexit.unr-lcssa ]
  %score.0206.epil = phi double [ %add62.epil, %for.body59.epil ], [ %score.0206.unr, %for.cond66.preheader.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body59.epil ], [ 0, %for.cond66.preheader.loopexit.unr-lcssa ]
  %arrayidx61.epil = getelementptr inbounds double, ptr %21, i64 %indvars.iv243.epil
  %23 = load double, ptr %arrayidx61.epil, align 8, !tbaa !20
  %add62.epil = fadd double %score.0206.epil, %23
  %indvars.iv.next244.epil = add nuw nsw i64 %indvars.iv243.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond66.preheader, label %for.body59.epil, !llvm.loop !399

for.cond66.preheader:                             ; preds = %for.cond66.preheader.loopexit.unr-lcssa, %for.body59.epil, %for.end54
  %score.0.lcssa = phi double [ 0.000000e+00, %for.end54 ], [ %add62.lcssa.ph, %for.cond66.preheader.loopexit.unr-lcssa ], [ %add62.epil, %for.body59.epil ]
  %sub67207 = sub nsw i32 %conv, %20
  %cmp68208 = icmp sgt i32 %sub67207, 1
  br i1 %cmp68208, label %for.body70.preheader, label %if.end136

for.body70.preheader:                             ; preds = %for.cond66.preheader
  %.pre254 = load ptr, ptr @searchAnchors.stra, align 8, !tbaa !13
  %.pre256 = load double, ptr @searchAnchors.threshold, align 8, !tbaa !20
  br label %for.body70

for.body59:                                       ; preds = %for.body59, %for.body59.lr.ph.new
  %indvars.iv243 = phi i64 [ 0, %for.body59.lr.ph.new ], [ %indvars.iv.next244.7, %for.body59 ]
  %score.0206 = phi double [ 0.000000e+00, %for.body59.lr.ph.new ], [ %add62.7, %for.body59 ]
  %niter = phi i64 [ 0, %for.body59.lr.ph.new ], [ %niter.next.7, %for.body59 ]
  %arrayidx61 = getelementptr inbounds double, ptr %21, i64 %indvars.iv243
  %24 = load double, ptr %arrayidx61, align 8, !tbaa !20
  %add62 = fadd double %score.0206, %24
  %indvars.iv.next244 = or i64 %indvars.iv243, 1
  %arrayidx61.1 = getelementptr inbounds double, ptr %21, i64 %indvars.iv.next244
  %25 = load double, ptr %arrayidx61.1, align 8, !tbaa !20
  %add62.1 = fadd double %add62, %25
  %indvars.iv.next244.1 = or i64 %indvars.iv243, 2
  %arrayidx61.2 = getelementptr inbounds double, ptr %21, i64 %indvars.iv.next244.1
  %26 = load double, ptr %arrayidx61.2, align 8, !tbaa !20
  %add62.2 = fadd double %add62.1, %26
  %indvars.iv.next244.2 = or i64 %indvars.iv243, 3
  %arrayidx61.3 = getelementptr inbounds double, ptr %21, i64 %indvars.iv.next244.2
  %27 = load double, ptr %arrayidx61.3, align 8, !tbaa !20
  %add62.3 = fadd double %add62.2, %27
  %indvars.iv.next244.3 = or i64 %indvars.iv243, 4
  %arrayidx61.4 = getelementptr inbounds double, ptr %21, i64 %indvars.iv.next244.3
  %28 = load double, ptr %arrayidx61.4, align 8, !tbaa !20
  %add62.4 = fadd double %add62.3, %28
  %indvars.iv.next244.4 = or i64 %indvars.iv243, 5
  %arrayidx61.5 = getelementptr inbounds double, ptr %21, i64 %indvars.iv.next244.4
  %29 = load double, ptr %arrayidx61.5, align 8, !tbaa !20
  %add62.5 = fadd double %add62.4, %29
  %indvars.iv.next244.5 = or i64 %indvars.iv243, 6
  %arrayidx61.6 = getelementptr inbounds double, ptr %21, i64 %indvars.iv.next244.5
  %30 = load double, ptr %arrayidx61.6, align 8, !tbaa !20
  %add62.6 = fadd double %add62.5, %30
  %indvars.iv.next244.6 = or i64 %indvars.iv243, 7
  %arrayidx61.7 = getelementptr inbounds double, ptr %21, i64 %indvars.iv.next244.6
  %31 = load double, ptr %arrayidx61.7, align 8, !tbaa !20
  %add62.7 = fadd double %add62.6, %31
  %indvars.iv.next244.7 = add nuw nsw i64 %indvars.iv243, 8
  %niter.next.7 = add i64 %niter, 8
  %niter.ncmp.7 = icmp eq i64 %niter.next.7, %unroll_iter
  br i1 %niter.ncmp.7, label %for.cond66.preheader.loopexit.unr-lcssa, label %for.body59, !llvm.loop !400

for.body70:                                       ; preds = %for.body70.preheader, %for.inc122
  %32 = phi double [ %.pre256, %for.body70.preheader ], [ %45, %for.inc122 ]
  %33 = phi ptr [ %.pre254, %for.body70.preheader ], [ %46, %for.inc122 ]
  %indvars.iv248 = phi i64 [ 1, %for.body70.preheader ], [ %indvars.iv.next249, %for.inc122 ]
  %34 = phi i32 [ %20, %for.body70.preheader ], [ %47, %for.inc122 ]
  %cumscore.0216 = phi double [ 0.000000e+00, %for.body70.preheader ], [ %cumscore.3, %for.inc122 ]
  %length.0215 = phi i32 [ 0, %for.body70.preheader ], [ %length.3, %for.inc122 ]
  %seg.addr.0214 = phi ptr [ %seg, %for.body70.preheader ], [ %seg.addr.1, %for.inc122 ]
  %value.0213 = phi i32 [ 0, %for.body70.preheader ], [ %value.1, %for.inc122 ]
  %score.1212 = phi double [ %score.0.lcssa, %for.body70.preheader ], [ %add79, %for.inc122 ]
  %status.0211 = phi i32 [ 0, %for.body70.preheader ], [ %status.3, %for.inc122 ]
  %35 = add nsw i64 %indvars.iv248, -1
  %arrayidx73 = getelementptr inbounds double, ptr %33, i64 %35
  %36 = load double, ptr %arrayidx73, align 8, !tbaa !20
  %sub74 = fsub double %score.1212, %36
  %37 = trunc i64 %35 to i32
  %sub76 = add i32 %34, %37
  %idxprom77 = sext i32 %sub76 to i64
  %arrayidx78 = getelementptr inbounds double, ptr %33, i64 %idxprom77
  %38 = load double, ptr %arrayidx78, align 8, !tbaa !20
  %add79 = fadd double %sub74, %38
  %cmp80 = fcmp ogt double %add79, %32
  br i1 %cmp80, label %if.then82, label %if.end88

if.then82:                                        ; preds = %for.body70
  %tobool83.not = icmp eq i32 %status.0211, 0
  br i1 %tobool83.not, label %if.then84, label %if.end85

if.then84:                                        ; preds = %if.then82
  %39 = trunc i64 %indvars.iv248 to i32
  store i32 %39, ptr %seg.addr.0214, align 8, !tbaa !401
  br label %if.end85

if.end85:                                         ; preds = %if.then84, %if.then82
  %length.1 = phi i32 [ %length.0215, %if.then82 ], [ 0, %if.then84 ]
  %cumscore.1 = phi double [ %cumscore.0216, %if.then82 ], [ 0.000000e+00, %if.then84 ]
  %inc86 = add nsw i32 %length.1, 1
  %add87 = fadd double %add79, %cumscore.1
  br label %if.end88

if.end88:                                         ; preds = %if.end85, %for.body70
  %status.2 = phi i32 [ 1, %if.end85 ], [ %status.0211, %for.body70 ]
  %length.2 = phi i32 [ %inc86, %if.end85 ], [ %length.0215, %for.body70 ]
  %cumscore.2 = phi double [ %add87, %if.end85 ], [ %cumscore.0216, %for.body70 ]
  %cmp89 = fcmp ole double %add79, %32
  %cmp91 = icmp sgt i32 %length.2, 150
  %or.cond = select i1 %cmp89, i1 true, i1 %cmp91
  %tobool94 = icmp ne i32 %status.2, 0
  %or.cond137 = select i1 %or.cond, i1 %tobool94, i1 false
  br i1 %or.cond137, label %if.then95, label %for.inc122

if.then95:                                        ; preds = %if.end88
  %end = getelementptr inbounds %struct._Segment, ptr %seg.addr.0214, i64 0, i32 1
  %40 = trunc i64 %indvars.iv248 to i32
  store i32 %40, ptr %end, align 4, !tbaa !402
  %41 = load i32, ptr %seg.addr.0214, align 8, !tbaa !401
  %add98 = add nsw i32 %41, %40
  %42 = load i32, ptr @divWinSize, align 4, !tbaa !10
  %add99 = add nsw i32 %add98, %42
  %div100 = sdiv i32 %add99, 2
  %center = getelementptr inbounds %struct._Segment, ptr %seg.addr.0214, i64 0, i32 2
  store i32 %div100, ptr %center, align 8, !tbaa !403
  %score101 = getelementptr inbounds %struct._Segment, ptr %seg.addr.0214, i64 0, i32 3
  store double %cumscore.2, ptr %score101, align 8, !tbaa !404
  %spec.select = zext i1 %cmp91 to i32
  %43 = getelementptr inbounds %struct._Segment, ptr %seg.addr.0214, i64 0, i32 4
  store i32 %spec.select, ptr %43, align 8
  %44 = getelementptr inbounds %struct._Segment, ptr %seg.addr.0214, i64 1, i32 5
  store i32 %spec.select, ptr %44, align 4
  %inc115 = add nsw i32 %value.0213, 1
  %incdec.ptr = getelementptr inbounds %struct._Segment, ptr %seg.addr.0214, i64 1
  %cmp116 = icmp sgt i32 %value.0213, 99996
  br i1 %cmp116, label %if.then118, label %for.inc122

if.then118:                                       ; preds = %if.then95
  tail call void @ErrorExit(ptr noundef nonnull @.str.30) #34
  %.pre = load ptr, ptr @searchAnchors.stra, align 8, !tbaa !13
  %.pre255 = load double, ptr @searchAnchors.threshold, align 8, !tbaa !20
  br label %for.inc122

for.inc122:                                       ; preds = %if.end88, %if.then95, %if.then118
  %45 = phi double [ %.pre255, %if.then118 ], [ %32, %if.then95 ], [ %32, %if.end88 ]
  %46 = phi ptr [ %.pre, %if.then118 ], [ %33, %if.then95 ], [ %33, %if.end88 ]
  %status.3 = phi i32 [ 0, %if.then118 ], [ 0, %if.then95 ], [ %status.2, %if.end88 ]
  %value.1 = phi i32 [ %inc115, %if.then118 ], [ %inc115, %if.then95 ], [ %value.0213, %if.end88 ]
  %seg.addr.1 = phi ptr [ %incdec.ptr, %if.then118 ], [ %incdec.ptr, %if.then95 ], [ %seg.addr.0214, %if.end88 ]
  %length.3 = phi i32 [ 0, %if.then118 ], [ 0, %if.then95 ], [ %length.2, %if.end88 ]
  %cumscore.3 = phi double [ 0.000000e+00, %if.then118 ], [ 0.000000e+00, %if.then95 ], [ %cumscore.2, %if.end88 ]
  %indvars.iv.next249 = add nuw nsw i64 %indvars.iv248, 1
  %47 = load i32, ptr @divWinSize, align 4, !tbaa !10
  %sub67 = sub nsw i32 %conv, %47
  %48 = sext i32 %sub67 to i64
  %cmp68 = icmp slt i64 %indvars.iv.next249, %48
  br i1 %cmp68, label %for.body70, label %for.end124, !llvm.loop !405

for.end124:                                       ; preds = %for.inc122
  %tobool125.not = icmp eq i32 %status.3, 0
  br i1 %tobool125.not, label %if.end136, label %if.then126

if.then126:                                       ; preds = %for.end124
  %49 = trunc i64 %indvars.iv.next249 to i32
  %end127 = getelementptr inbounds %struct._Segment, ptr %seg.addr.1, i64 0, i32 1
  store i32 %49, ptr %end127, align 4, !tbaa !402
  %50 = load i32, ptr %seg.addr.1, align 8, !tbaa !401
  %add130 = add i32 %47, %49
  %add131 = add i32 %add130, %50
  %div132 = sdiv i32 %add131, 2
  %center133 = getelementptr inbounds %struct._Segment, ptr %seg.addr.1, i64 0, i32 2
  store i32 %div132, ptr %center133, align 8, !tbaa !403
  %score134 = getelementptr inbounds %struct._Segment, ptr %seg.addr.1, i64 0, i32 3
  store double %cumscore.3, ptr %score134, align 8, !tbaa !404
  %inc135 = add nsw i32 %value.1, 1
  br label %if.end136

if.end136:                                        ; preds = %for.cond66.preheader, %if.then126, %for.end124
  %value.2 = phi i32 [ %inc135, %if.then126 ], [ %value.1, %for.end124 ], [ 0, %for.cond66.preheader ]
  ret i32 %value.2
}

declare void @FreeDoubleVec(ptr noundef) local_unnamed_addr #14

declare ptr @AllocateDoubleVec(i32 noundef) local_unnamed_addr #14

; Function Attrs: nounwind uwtable
define dso_local void @dontcalcimportance(i32 noundef %nseq, ptr nocapture noundef readnone %eff, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %localhom) local_unnamed_addr #12 {
entry:
  %0 = load ptr, ptr @dontcalcimportance.nogaplen, align 8, !tbaa !13
  %cmp = icmp eq ptr %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %call = tail call ptr @AllocateIntVec(i32 noundef %nseq) #34
  store ptr %call, ptr @dontcalcimportance.nogaplen, align 8, !tbaa !13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = phi ptr [ %call, %if.then ], [ %0, %entry ]
  %cmp142 = icmp sgt i32 %nseq, 0
  br i1 %cmp142, label %for.body.lr.ph, label %for.end24

for.body.lr.ph:                                   ; preds = %if.end
  %wide.trip.count = zext i32 %nseq to i64
  br label %for.body

for.cond5.preheader:                              ; preds = %seqlen.exit
  br i1 %cmp142, label %for.cond8.preheader.us.preheader, label %for.end24

for.cond8.preheader.us.preheader:                 ; preds = %for.cond5.preheader
  %wide.trip.count59 = zext i32 %nseq to i64
  br label %for.cond8.preheader.us

for.cond8.preheader.us:                           ; preds = %for.cond8.preheader.us.preheader, %for.cond8.for.inc22_crit_edge.us
  %indvars.iv56 = phi i64 [ 0, %for.cond8.preheader.us.preheader ], [ %indvars.iv.next57, %for.cond8.for.inc22_crit_edge.us ]
  %arrayidx12.us = getelementptr inbounds ptr, ptr %localhom, i64 %indvars.iv56
  %2 = load ptr, ptr %arrayidx12.us, align 8, !tbaa !13
  %tobool.not44.us = icmp eq ptr %2, null
  br label %for.body10.us

for.body10.us:                                    ; preds = %for.cond8.preheader.us, %for.inc19.us
  %indvars.iv51 = phi i64 [ 0, %for.cond8.preheader.us ], [ %indvars.iv.next52, %for.inc19.us ]
  br i1 %tobool.not44.us, label %for.inc19.us, label %for.body14.us.preheader

for.body14.us.preheader:                          ; preds = %for.body10.us
  %add.ptr.us = getelementptr inbounds %struct._LocalHom, ptr %2, i64 %indvars.iv51
  br label %for.body14.us

for.body14.us:                                    ; preds = %for.body14.us.preheader, %for.body14.us
  %ptr.045.us = phi ptr [ %5, %for.body14.us ], [ %add.ptr.us, %for.body14.us.preheader ]
  %opt.us = getelementptr inbounds %struct._LocalHom, ptr %ptr.045.us, i64 0, i32 7
  %3 = load double, ptr %opt.us, align 8, !tbaa !406
  %overlapaa.us = getelementptr inbounds %struct._LocalHom, ptr %ptr.045.us, i64 0, i32 8
  %4 = load i32, ptr %overlapaa.us, align 8, !tbaa !408
  %conv.us = sitofp i32 %4 to double
  %div.us = fdiv double %3, %conv.us
  %importance.us = getelementptr inbounds %struct._LocalHom, ptr %ptr.045.us, i64 0, i32 10
  store double %div.us, ptr %importance.us, align 8, !tbaa !409
  %conv16.us = fptrunc double %div.us to float
  %fimportance.us = getelementptr inbounds %struct._LocalHom, ptr %ptr.045.us, i64 0, i32 11
  store float %conv16.us, ptr %fimportance.us, align 8, !tbaa !410
  %next.us = getelementptr inbounds %struct._LocalHom, ptr %ptr.045.us, i64 0, i32 1
  %5 = load ptr, ptr %next.us, align 8, !tbaa !411
  %tobool.not.us = icmp eq ptr %5, null
  br i1 %tobool.not.us, label %for.inc19.us, label %for.body14.us, !llvm.loop !412

for.inc19.us:                                     ; preds = %for.body14.us, %for.body10.us
  %indvars.iv.next52 = add nuw nsw i64 %indvars.iv51, 1
  %exitcond55.not = icmp eq i64 %indvars.iv.next52, %wide.trip.count59
  br i1 %exitcond55.not, label %for.cond8.for.inc22_crit_edge.us, label %for.body10.us, !llvm.loop !413

for.cond8.for.inc22_crit_edge.us:                 ; preds = %for.inc19.us
  %indvars.iv.next57 = add nuw nsw i64 %indvars.iv56, 1
  %exitcond60.not = icmp eq i64 %indvars.iv.next57, %wide.trip.count59
  br i1 %exitcond60.not, label %for.end24, label %for.cond8.preheader.us, !llvm.loop !414

for.body:                                         ; preds = %for.body.lr.ph, %seqlen.exit
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %seqlen.exit ]
  %arrayidx = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv
  %6 = load ptr, ptr %arrayidx, align 8, !tbaa !13
  %7 = load i8, ptr %6, align 1, !tbaa !5
  %tobool.not4.i = icmp eq i8 %7, 0
  br i1 %tobool.not4.i, label %seqlen.exit, label %while.body.i

while.body.i:                                     ; preds = %for.body, %while.body.i
  %8 = phi i8 [ %9, %while.body.i ], [ %7, %for.body ]
  %val.06.i = phi i32 [ %spec.select.i, %while.body.i ], [ 0, %for.body ]
  %seq.addr.05.i = phi ptr [ %incdec.ptr.i, %while.body.i ], [ %6, %for.body ]
  %incdec.ptr.i = getelementptr inbounds i8, ptr %seq.addr.05.i, i64 1
  %cmp.not.i = icmp ne i8 %8, 45
  %inc.i = zext i1 %cmp.not.i to i32
  %spec.select.i = add nuw nsw i32 %val.06.i, %inc.i
  %9 = load i8, ptr %incdec.ptr.i, align 1, !tbaa !5
  %tobool.not.i = icmp eq i8 %9, 0
  br i1 %tobool.not.i, label %seqlen.exit, label %while.body.i, !llvm.loop !8

seqlen.exit:                                      ; preds = %while.body.i, %for.body
  %val.0.lcssa.i = phi i32 [ 0, %for.body ], [ %spec.select.i, %while.body.i ]
  %arrayidx4 = getelementptr inbounds i32, ptr %1, i64 %indvars.iv
  store i32 %val.0.lcssa.i, ptr %arrayidx4, align 4, !tbaa !10
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond5.preheader, label %for.body, !llvm.loop !415

for.end24:                                        ; preds = %for.cond8.for.inc22_crit_edge.us, %if.end, %for.cond5.preheader
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @calcimportance(i32 noundef %nseq, ptr nocapture noundef readonly %eff, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %localhom) local_unnamed_addr #12 {
entry:
  %0 = load ptr, ptr @calcimportance.importance, align 8, !tbaa !13
  %cmp = icmp eq ptr %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, ptr @nlenmax, align 4, !tbaa !10
  %call = tail call ptr @AllocateDoubleVec(i32 noundef %1) #34
  store ptr %call, ptr @calcimportance.importance, align 8, !tbaa !13
  %call1 = tail call ptr @AllocateIntVec(i32 noundef %nseq) #34
  store ptr %call1, ptr @calcimportance.nogaplen, align 8, !tbaa !13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp2241 = icmp sgt i32 %nseq, 0
  br i1 %cmp2241, label %for.body.lr.ph, label %for.end154

for.body.lr.ph:                                   ; preds = %if.end
  %2 = load ptr, ptr @calcimportance.nogaplen, align 8, !tbaa !13
  %wide.trip.count = zext i32 %nseq to i64
  br label %for.body

for.cond6.preheader:                              ; preds = %seqlen.exit
  br i1 %cmp2241, label %for.cond9.preheader.lr.ph, label %for.end154

for.cond9.preheader.lr.ph:                        ; preds = %for.cond6.preheader
  %3 = load i32, ptr @nlenmax, align 4, !tbaa !10
  %cmp10243 = icmp sgt i32 %3, 0
  %4 = load ptr, ptr @calcimportance.importance, align 8
  %5 = zext i32 %3 to i64
  %6 = shl nuw nsw i64 %5, 3
  %wide.trip.count365 = zext i32 %nseq to i64
  %scevgep384 = getelementptr i8, ptr %4, i64 8
  br label %for.cond9.preheader.us

for.cond9.preheader.us:                           ; preds = %for.cond49.for.inc95_crit_edge.us, %for.cond9.preheader.lr.ph
  %indvars.iv362 = phi i64 [ %indvars.iv.next363, %for.cond49.for.inc95_crit_edge.us ], [ 0, %for.cond9.preheader.lr.ph ]
  br i1 %cmp10243, label %for.body11.us.preheader, label %for.body19.lr.ph.us

for.body11.us.preheader:                          ; preds = %for.cond9.preheader.us
  tail call void @llvm.memset.p0.i64(ptr align 8 %4, i8 0, i64 %6, i1 false), !tbaa !20
  br label %for.body19.lr.ph.us

for.body51.us:                                    ; preds = %for.cond49.preheader.us, %for.inc92.us
  %indvars.iv357 = phi i64 [ 0, %for.cond49.preheader.us ], [ %indvars.iv.next358, %for.inc92.us ]
  %cmp52.us = icmp eq i64 %indvars.iv362, %indvars.iv357
  br i1 %cmp52.us, label %for.inc92.us, label %if.end54.us

if.end54.us:                                      ; preds = %for.body51.us
  %7 = load ptr, ptr %arrayidx56.us, align 8, !tbaa !13
  %opt59.us = getelementptr inbounds %struct._LocalHom, ptr %7, i64 %indvars.iv357, i32 7
  %8 = load double, ptr %opt59.us, align 8, !tbaa !406
  %cmp60.us = fcmp oeq double %8, -1.000000e+00
  %tobool68.not256.us = icmp eq ptr %7, null
  %or.cond = or i1 %cmp60.us, %tobool68.not256.us
  br i1 %or.cond, label %for.inc92.us, label %for.body69.us.preheader

for.body69.us.preheader:                          ; preds = %if.end54.us
  %arrayidx58.us = getelementptr inbounds %struct._LocalHom, ptr %7, i64 %indvars.iv357
  br label %for.body69.us

for.body69.us:                                    ; preds = %for.body69.us.preheader, %for.inc89.us
  %tmpptr.1257.us = phi ptr [ %27, %for.inc89.us ], [ %arrayidx58.us, %for.body69.us.preheader ]
  %opt70.us = getelementptr inbounds %struct._LocalHom, ptr %tmpptr.1257.us, i64 0, i32 7
  %9 = load double, ptr %opt70.us, align 8, !tbaa !406
  %cmp71.us = fcmp oeq double %9, -1.000000e+00
  br i1 %cmp71.us, label %for.inc89.us, label %if.end73.us

if.end73.us:                                      ; preds = %for.body69.us
  %start174.us = getelementptr inbounds %struct._LocalHom, ptr %tmpptr.1257.us, i64 0, i32 3
  %10 = load i32, ptr %start174.us, align 8, !tbaa !416
  %end176.us = getelementptr inbounds %struct._LocalHom, ptr %tmpptr.1257.us, i64 0, i32 4
  %11 = load i32, ptr %end176.us, align 4, !tbaa !417
  %cmp77.not251.us = icmp slt i32 %11, %10
  br i1 %cmp77.not251.us, label %for.end85.us, label %for.body78.us.preheader

for.body78.us.preheader:                          ; preds = %if.end73.us
  %12 = sext i32 %10 to i64
  %13 = add i32 %11, 1
  %14 = sub i32 %13, %10
  %15 = sub i32 %11, %10
  %xtraiter394 = and i32 %14, 7
  %lcmp.mod395.not = icmp eq i32 %xtraiter394, 0
  br i1 %lcmp.mod395.not, label %for.body78.us.prol.loopexit, label %for.body78.us.prol

for.body78.us.prol:                               ; preds = %for.body78.us.preheader, %for.body78.us.prol
  %indvars.iv352.prol = phi i64 [ %indvars.iv.next353.prol, %for.body78.us.prol ], [ %12, %for.body78.us.preheader ]
  %tmpdouble.0254.us.prol = phi double [ %add81.us.prol, %for.body78.us.prol ], [ 0.000000e+00, %for.body78.us.preheader ]
  %prol.iter396 = phi i32 [ %prol.iter396.next, %for.body78.us.prol ], [ 0, %for.body78.us.preheader ]
  %arrayidx80.us.prol = getelementptr inbounds double, ptr %4, i64 %indvars.iv352.prol
  %16 = load double, ptr %arrayidx80.us.prol, align 8, !tbaa !20
  %add81.us.prol = fadd double %tmpdouble.0254.us.prol, %16
  %indvars.iv.next353.prol = add nsw i64 %indvars.iv352.prol, 1
  %prol.iter396.next = add i32 %prol.iter396, 1
  %prol.iter396.cmp.not = icmp eq i32 %prol.iter396.next, %xtraiter394
  br i1 %prol.iter396.cmp.not, label %for.body78.us.prol.loopexit, label %for.body78.us.prol, !llvm.loop !418

for.body78.us.prol.loopexit:                      ; preds = %for.body78.us.prol, %for.body78.us.preheader
  %add81.us.lcssa.unr = phi double [ undef, %for.body78.us.preheader ], [ %add81.us.prol, %for.body78.us.prol ]
  %indvars.iv352.unr = phi i64 [ %12, %for.body78.us.preheader ], [ %indvars.iv.next353.prol, %for.body78.us.prol ]
  %tmpdouble.0254.us.unr = phi double [ 0.000000e+00, %for.body78.us.preheader ], [ %add81.us.prol, %for.body78.us.prol ]
  %17 = icmp ult i32 %15, 7
  br i1 %17, label %for.end85.us.loopexit, label %for.body78.us

for.body78.us:                                    ; preds = %for.body78.us.prol.loopexit, %for.body78.us
  %indvars.iv352 = phi i64 [ %indvars.iv.next353.7, %for.body78.us ], [ %indvars.iv352.unr, %for.body78.us.prol.loopexit ]
  %tmpdouble.0254.us = phi double [ %add81.us.7, %for.body78.us ], [ %tmpdouble.0254.us.unr, %for.body78.us.prol.loopexit ]
  %arrayidx80.us = getelementptr inbounds double, ptr %4, i64 %indvars.iv352
  %18 = load double, ptr %arrayidx80.us, align 8, !tbaa !20
  %add81.us = fadd double %tmpdouble.0254.us, %18
  %indvars.iv.next353 = add nsw i64 %indvars.iv352, 1
  %arrayidx80.us.1 = getelementptr inbounds double, ptr %4, i64 %indvars.iv.next353
  %19 = load double, ptr %arrayidx80.us.1, align 8, !tbaa !20
  %add81.us.1 = fadd double %add81.us, %19
  %indvars.iv.next353.1 = add nsw i64 %indvars.iv352, 2
  %arrayidx80.us.2 = getelementptr inbounds double, ptr %4, i64 %indvars.iv.next353.1
  %20 = load double, ptr %arrayidx80.us.2, align 8, !tbaa !20
  %add81.us.2 = fadd double %add81.us.1, %20
  %indvars.iv.next353.2 = add nsw i64 %indvars.iv352, 3
  %arrayidx80.us.3 = getelementptr inbounds double, ptr %4, i64 %indvars.iv.next353.2
  %21 = load double, ptr %arrayidx80.us.3, align 8, !tbaa !20
  %add81.us.3 = fadd double %add81.us.2, %21
  %indvars.iv.next353.3 = add nsw i64 %indvars.iv352, 4
  %arrayidx80.us.4 = getelementptr inbounds double, ptr %4, i64 %indvars.iv.next353.3
  %22 = load double, ptr %arrayidx80.us.4, align 8, !tbaa !20
  %add81.us.4 = fadd double %add81.us.3, %22
  %indvars.iv.next353.4 = add nsw i64 %indvars.iv352, 5
  %arrayidx80.us.5 = getelementptr inbounds double, ptr %4, i64 %indvars.iv.next353.4
  %23 = load double, ptr %arrayidx80.us.5, align 8, !tbaa !20
  %add81.us.5 = fadd double %add81.us.4, %23
  %indvars.iv.next353.5 = add nsw i64 %indvars.iv352, 6
  %arrayidx80.us.6 = getelementptr inbounds double, ptr %4, i64 %indvars.iv.next353.5
  %24 = load double, ptr %arrayidx80.us.6, align 8, !tbaa !20
  %add81.us.6 = fadd double %add81.us.5, %24
  %indvars.iv.next353.6 = add nsw i64 %indvars.iv352, 7
  %arrayidx80.us.7 = getelementptr inbounds double, ptr %4, i64 %indvars.iv.next353.6
  %25 = load double, ptr %arrayidx80.us.7, align 8, !tbaa !20
  %add81.us.7 = fadd double %add81.us.6, %25
  %indvars.iv.next353.7 = add nsw i64 %indvars.iv352, 8
  %lftr.wideiv355.7 = trunc i64 %indvars.iv.next353.7 to i32
  %exitcond356.not.7 = icmp eq i32 %13, %lftr.wideiv355.7
  br i1 %exitcond356.not.7, label %for.end85.us.loopexit, label %for.body78.us, !llvm.loop !419

for.end85.us.loopexit:                            ; preds = %for.body78.us, %for.body78.us.prol.loopexit
  %add81.us.lcssa = phi double [ %add81.us.lcssa.unr, %for.body78.us.prol.loopexit ], [ %add81.us.7, %for.body78.us ]
  %26 = sub i32 %13, %10
  br label %for.end85.us

for.end85.us:                                     ; preds = %for.end85.us.loopexit, %if.end73.us
  %len.0.lcssa.us = phi i32 [ 0, %if.end73.us ], [ %26, %for.end85.us.loopexit ]
  %tmpdouble.0.lcssa.us = phi double [ 0.000000e+00, %if.end73.us ], [ %add81.us.lcssa, %for.end85.us.loopexit ]
  %conv.us = sitofp i32 %len.0.lcssa.us to double
  %div.us = fdiv double %tmpdouble.0.lcssa.us, %conv.us
  %mul.us = fmul double %9, %div.us
  %importance.us = getelementptr inbounds %struct._LocalHom, ptr %tmpptr.1257.us, i64 0, i32 10
  store double %mul.us, ptr %importance.us, align 8, !tbaa !409
  %conv88.us = fptrunc double %mul.us to float
  %fimportance.us = getelementptr inbounds %struct._LocalHom, ptr %tmpptr.1257.us, i64 0, i32 11
  store float %conv88.us, ptr %fimportance.us, align 8, !tbaa !410
  br label %for.inc89.us

for.inc89.us:                                     ; preds = %for.end85.us, %for.body69.us
  %next90.us = getelementptr inbounds %struct._LocalHom, ptr %tmpptr.1257.us, i64 0, i32 1
  %27 = load ptr, ptr %next90.us, align 8, !tbaa !411
  %tobool68.not.us = icmp eq ptr %27, null
  br i1 %tobool68.not.us, label %for.inc92.us, label %for.body69.us, !llvm.loop !420

for.inc92.us:                                     ; preds = %for.inc89.us, %if.end54.us, %for.body51.us
  %indvars.iv.next358 = add nuw nsw i64 %indvars.iv357, 1
  %exitcond361.not = icmp eq i64 %indvars.iv.next358, %wide.trip.count365
  br i1 %exitcond361.not, label %for.cond49.for.inc95_crit_edge.us, label %for.body51.us, !llvm.loop !421

for.body19.us:                                    ; preds = %for.body19.lr.ph.us, %for.inc46.us
  %indvars.iv347 = phi i64 [ 0, %for.body19.lr.ph.us ], [ %indvars.iv.next348, %for.inc46.us ]
  %28 = shl nuw nsw i64 %indvars.iv347, 3
  %scevgep386 = getelementptr i8, ptr %eff, i64 %28
  %29 = add nuw i64 %28, 8
  %scevgep387 = getelementptr i8, ptr %eff, i64 %29
  %cmp20.us = icmp eq i64 %indvars.iv362, %indvars.iv347
  br i1 %cmp20.us, label %for.inc46.us, label %if.end22.us

if.end22.us:                                      ; preds = %for.body19.us
  %30 = load ptr, ptr %arrayidx24.us, align 8, !tbaa !13
  %tobool.not247.us = icmp eq ptr %30, null
  br i1 %tobool.not247.us, label %for.inc46.us, label %for.body30.lr.ph.us

for.body30.us:                                    ; preds = %for.body30.lr.ph.us, %for.inc44.us
  %tmpptr.0248.us = phi ptr [ %add.ptr28.us, %for.body30.lr.ph.us ], [ %65, %for.inc44.us ]
  %opt.us = getelementptr inbounds %struct._LocalHom, ptr %tmpptr.0248.us, i64 0, i32 7
  %31 = load double, ptr %opt.us, align 8, !tbaa !406
  %cmp31.us = fcmp oeq double %31, -1.000000e+00
  br i1 %cmp31.us, label %for.inc44.us, label %if.end33.us

if.end33.us:                                      ; preds = %for.body30.us
  %start1.us = getelementptr inbounds %struct._LocalHom, ptr %tmpptr.0248.us, i64 0, i32 3
  %32 = load i32, ptr %start1.us, align 8, !tbaa !416
  %end1.us = getelementptr inbounds %struct._LocalHom, ptr %tmpptr.0248.us, i64 0, i32 4
  %33 = load i32, ptr %end1.us, align 4, !tbaa !417
  %cmp35.not245.us = icmp slt i32 %33, %32
  br i1 %cmp35.not245.us, label %for.inc44.us, label %for.body36.us.preheader

for.body36.us.preheader:                          ; preds = %if.end33.us
  %34 = sext i32 %32 to i64
  %35 = add i32 %33, 1
  %36 = sub i32 %33, %32
  %37 = zext i32 %36 to i64
  %38 = add nuw nsw i64 %37, 1
  %min.iters.check = icmp ult i32 %36, 9
  br i1 %min.iters.check, label %for.body36.us.preheader393, label %vector.memcheck

vector.memcheck:                                  ; preds = %for.body36.us.preheader
  %39 = shl nsw i64 %34, 3
  %scevgep = getelementptr i8, ptr %4, i64 %39
  %40 = sub i32 %33, %32
  %41 = zext i32 %40 to i64
  %42 = add nsw i64 %34, %41
  %43 = shl nsw i64 %42, 3
  %scevgep385 = getelementptr i8, ptr %scevgep384, i64 %43
  %bound0 = icmp ult ptr %scevgep, %scevgep387
  %bound1 = icmp ult ptr %scevgep386, %scevgep385
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body36.us.preheader393, label %vector.ph

vector.ph:                                        ; preds = %vector.memcheck
  %n.vec = and i64 %38, -4
  %ind.end = add nsw i64 %n.vec, %34
  %44 = load double, ptr %arrayidx38.us, align 8, !tbaa !20, !alias.scope !422
  %broadcast.splatinsert389 = insertelement <2 x double> poison, double %44, i64 0
  %broadcast.splat390 = shufflevector <2 x double> %broadcast.splatinsert389, <2 x double> poison, <2 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %offset.idx = add i64 %index, %34
  %45 = getelementptr inbounds double, ptr %4, i64 %offset.idx
  %wide.load = load <2 x double>, ptr %45, align 8, !tbaa !20, !alias.scope !425, !noalias !422
  %46 = getelementptr inbounds double, ptr %45, i64 2
  %wide.load388 = load <2 x double>, ptr %46, align 8, !tbaa !20, !alias.scope !425, !noalias !422
  %47 = fadd <2 x double> %broadcast.splat390, %wide.load
  %48 = fadd <2 x double> %broadcast.splat390, %wide.load388
  store <2 x double> %47, ptr %45, align 8, !tbaa !20, !alias.scope !425, !noalias !422
  store <2 x double> %48, ptr %46, align 8, !tbaa !20, !alias.scope !425, !noalias !422
  %index.next = add nuw i64 %index, 4
  %49 = icmp eq i64 %index.next, %n.vec
  br i1 %49, label %middle.block, label %vector.body, !llvm.loop !427

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %38, %n.vec
  br i1 %cmp.n, label %for.inc44.us, label %for.body36.us.preheader393

for.body36.us.preheader393:                       ; preds = %vector.memcheck, %for.body36.us.preheader, %middle.block
  %indvars.iv343.ph = phi i64 [ %34, %vector.memcheck ], [ %34, %for.body36.us.preheader ], [ %ind.end, %middle.block ]
  %50 = add i32 %33, 1
  %51 = trunc i64 %indvars.iv343.ph to i32
  %52 = sub i32 %50, %51
  %53 = sub i32 %33, %51
  %xtraiter = and i32 %52, 3
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body36.us.prol.loopexit, label %for.body36.us.prol

for.body36.us.prol:                               ; preds = %for.body36.us.preheader393, %for.body36.us.prol
  %indvars.iv343.prol = phi i64 [ %indvars.iv.next344.prol, %for.body36.us.prol ], [ %indvars.iv343.ph, %for.body36.us.preheader393 ]
  %prol.iter = phi i32 [ %prol.iter.next, %for.body36.us.prol ], [ 0, %for.body36.us.preheader393 ]
  %54 = load double, ptr %arrayidx38.us, align 8, !tbaa !20
  %arrayidx40.us.prol = getelementptr inbounds double, ptr %4, i64 %indvars.iv343.prol
  %55 = load double, ptr %arrayidx40.us.prol, align 8, !tbaa !20
  %add.us.prol = fadd double %54, %55
  store double %add.us.prol, ptr %arrayidx40.us.prol, align 8, !tbaa !20
  %indvars.iv.next344.prol = add nsw i64 %indvars.iv343.prol, 1
  %prol.iter.next = add i32 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i32 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body36.us.prol.loopexit, label %for.body36.us.prol, !llvm.loop !428

for.body36.us.prol.loopexit:                      ; preds = %for.body36.us.prol, %for.body36.us.preheader393
  %indvars.iv343.unr = phi i64 [ %indvars.iv343.ph, %for.body36.us.preheader393 ], [ %indvars.iv.next344.prol, %for.body36.us.prol ]
  %56 = icmp ult i32 %53, 3
  br i1 %56, label %for.inc44.us, label %for.body36.us

for.body36.us:                                    ; preds = %for.body36.us.prol.loopexit, %for.body36.us
  %indvars.iv343 = phi i64 [ %indvars.iv.next344.3, %for.body36.us ], [ %indvars.iv343.unr, %for.body36.us.prol.loopexit ]
  %57 = load double, ptr %arrayidx38.us, align 8, !tbaa !20
  %arrayidx40.us = getelementptr inbounds double, ptr %4, i64 %indvars.iv343
  %58 = load double, ptr %arrayidx40.us, align 8, !tbaa !20
  %add.us = fadd double %57, %58
  store double %add.us, ptr %arrayidx40.us, align 8, !tbaa !20
  %indvars.iv.next344 = add nsw i64 %indvars.iv343, 1
  %59 = load double, ptr %arrayidx38.us, align 8, !tbaa !20
  %arrayidx40.us.1 = getelementptr inbounds double, ptr %4, i64 %indvars.iv.next344
  %60 = load double, ptr %arrayidx40.us.1, align 8, !tbaa !20
  %add.us.1 = fadd double %59, %60
  store double %add.us.1, ptr %arrayidx40.us.1, align 8, !tbaa !20
  %indvars.iv.next344.1 = add nsw i64 %indvars.iv343, 2
  %61 = load double, ptr %arrayidx38.us, align 8, !tbaa !20
  %arrayidx40.us.2 = getelementptr inbounds double, ptr %4, i64 %indvars.iv.next344.1
  %62 = load double, ptr %arrayidx40.us.2, align 8, !tbaa !20
  %add.us.2 = fadd double %61, %62
  store double %add.us.2, ptr %arrayidx40.us.2, align 8, !tbaa !20
  %indvars.iv.next344.2 = add nsw i64 %indvars.iv343, 3
  %63 = load double, ptr %arrayidx38.us, align 8, !tbaa !20
  %arrayidx40.us.3 = getelementptr inbounds double, ptr %4, i64 %indvars.iv.next344.2
  %64 = load double, ptr %arrayidx40.us.3, align 8, !tbaa !20
  %add.us.3 = fadd double %63, %64
  store double %add.us.3, ptr %arrayidx40.us.3, align 8, !tbaa !20
  %indvars.iv.next344.3 = add nsw i64 %indvars.iv343, 4
  %lftr.wideiv.3 = trunc i64 %indvars.iv.next344.3 to i32
  %exitcond346.not.3 = icmp eq i32 %35, %lftr.wideiv.3
  br i1 %exitcond346.not.3, label %for.inc44.us, label %for.body36.us, !llvm.loop !429

for.inc44.us:                                     ; preds = %for.body36.us.prol.loopexit, %for.body36.us, %middle.block, %if.end33.us, %for.body30.us
  %next.us = getelementptr inbounds %struct._LocalHom, ptr %tmpptr.0248.us, i64 0, i32 1
  %65 = load ptr, ptr %next.us, align 8, !tbaa !411
  %tobool.not.us = icmp eq ptr %65, null
  br i1 %tobool.not.us, label %for.inc46.us, label %for.body30.us, !llvm.loop !430

for.inc46.us:                                     ; preds = %for.inc44.us, %if.end22.us, %for.body19.us
  %indvars.iv.next348 = add nuw nsw i64 %indvars.iv347, 1
  %exitcond351.not = icmp eq i64 %indvars.iv.next348, %wide.trip.count365
  br i1 %exitcond351.not, label %for.cond49.preheader.us, label %for.body19.us, !llvm.loop !431

for.cond49.preheader.us:                          ; preds = %for.inc46.us
  %arrayidx56.us = getelementptr inbounds ptr, ptr %localhom, i64 %indvars.iv362
  br label %for.body51.us

for.body30.lr.ph.us:                              ; preds = %if.end22.us
  %add.ptr28.us = getelementptr inbounds %struct._LocalHom, ptr %30, i64 %indvars.iv347
  %arrayidx38.us = getelementptr inbounds double, ptr %eff, i64 %indvars.iv347
  br label %for.body30.us

for.body19.lr.ph.us:                              ; preds = %for.cond9.preheader.us, %for.body11.us.preheader
  %arrayidx24.us = getelementptr inbounds ptr, ptr %localhom, i64 %indvars.iv362
  br label %for.body19.us

for.cond49.for.inc95_crit_edge.us:                ; preds = %for.inc92.us
  %indvars.iv.next363 = add nuw nsw i64 %indvars.iv362, 1
  %exitcond366.not = icmp eq i64 %indvars.iv.next363, %wide.trip.count365
  br i1 %exitcond366.not, label %for.cond98.preheader, label %for.cond9.preheader.us, !llvm.loop !432

for.body:                                         ; preds = %for.body.lr.ph, %seqlen.exit
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %seqlen.exit ]
  %arrayidx = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv
  %66 = load ptr, ptr %arrayidx, align 8, !tbaa !13
  %67 = load i8, ptr %66, align 1, !tbaa !5
  %tobool.not4.i = icmp eq i8 %67, 0
  br i1 %tobool.not4.i, label %seqlen.exit, label %while.body.i

while.body.i:                                     ; preds = %for.body, %while.body.i
  %68 = phi i8 [ %69, %while.body.i ], [ %67, %for.body ]
  %val.06.i = phi i32 [ %spec.select.i, %while.body.i ], [ 0, %for.body ]
  %seq.addr.05.i = phi ptr [ %incdec.ptr.i, %while.body.i ], [ %66, %for.body ]
  %incdec.ptr.i = getelementptr inbounds i8, ptr %seq.addr.05.i, i64 1
  %cmp.not.i = icmp ne i8 %68, 45
  %inc.i = zext i1 %cmp.not.i to i32
  %spec.select.i = add nuw nsw i32 %val.06.i, %inc.i
  %69 = load i8, ptr %incdec.ptr.i, align 1, !tbaa !5
  %tobool.not.i = icmp eq i8 %69, 0
  br i1 %tobool.not.i, label %seqlen.exit, label %while.body.i, !llvm.loop !8

seqlen.exit:                                      ; preds = %while.body.i, %for.body
  %val.0.lcssa.i = phi i32 [ 0, %for.body ], [ %spec.select.i, %while.body.i ]
  %arrayidx5 = getelementptr inbounds i32, ptr %2, i64 %indvars.iv
  store i32 %val.0.lcssa.i, ptr %arrayidx5, align 4, !tbaa !10
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond6.preheader, label %for.body, !llvm.loop !433

for.cond98.preheader:                             ; preds = %for.cond49.for.inc95_crit_edge.us
  %cmp99334 = icmp sgt i32 %nseq, 1
  br i1 %cmp99334, label %for.body101.preheader, label %for.end154

for.body101.preheader:                            ; preds = %for.cond98.preheader
  %sub = add nsw i32 %nseq, -1
  %70 = zext i32 %nseq to i64
  %wide.trip.count377 = zext i32 %sub to i64
  %wide.trip.count372 = zext i32 %nseq to i64
  br label %for.body101

for.cond98.loopexit:                              ; preds = %if.end148, %for.body101
  %indvars.iv.next368 = add nuw nsw i64 %indvars.iv367, 1
  %exitcond378.not = icmp eq i64 %indvars.iv.next375, %wide.trip.count377
  br i1 %exitcond378.not, label %for.end154, label %for.body101, !llvm.loop !434

for.body101:                                      ; preds = %for.body101.preheader, %for.cond98.loopexit
  %indvars.iv374 = phi i64 [ 0, %for.body101.preheader ], [ %indvars.iv.next375, %for.cond98.loopexit ]
  %indvars.iv367 = phi i64 [ 1, %for.body101.preheader ], [ %indvars.iv.next368, %for.cond98.loopexit ]
  %indvars.iv.next375 = add nuw nsw i64 %indvars.iv374, 1
  %cmp104332 = icmp ult i64 %indvars.iv.next375, %70
  br i1 %cmp104332, label %for.body106.lr.ph, label %for.cond98.loopexit

for.body106.lr.ph:                                ; preds = %for.body101
  %arrayidx108 = getelementptr inbounds ptr, ptr %localhom, i64 %indvars.iv374
  %71 = load ptr, ptr %arrayidx108, align 8, !tbaa !13
  br label %for.body106

for.body106:                                      ; preds = %for.body106.lr.ph, %if.end148
  %indvars.iv369 = phi i64 [ %indvars.iv367, %for.body106.lr.ph ], [ %indvars.iv.next370, %if.end148 ]
  %arrayidx112 = getelementptr inbounds ptr, ptr %localhom, i64 %indvars.iv369
  %72 = load ptr, ptr %arrayidx112, align 8, !tbaa !13
  %tobool117328.not = icmp eq ptr %72, null
  br i1 %tobool117328.not, label %if.then146, label %for.body118.preheader

for.body118.preheader:                            ; preds = %for.body106
  %add.ptr110 = getelementptr inbounds %struct._LocalHom, ptr %71, i64 %indvars.iv369
  %add.ptr114 = getelementptr inbounds %struct._LocalHom, ptr %72, i64 %indvars.iv374
  br label %for.body118

for.body118:                                      ; preds = %for.body118.preheader, %for.inc136
  %tmpptr2.0330 = phi ptr [ %78, %for.inc136 ], [ %add.ptr114, %for.body118.preheader ]
  %tmpptr1.0329 = phi ptr [ %77, %for.inc136 ], [ %add.ptr110, %for.body118.preheader ]
  %opt119 = getelementptr inbounds %struct._LocalHom, ptr %tmpptr1.0329, i64 0, i32 7
  %73 = load double, ptr %opt119, align 8, !tbaa !406
  %cmp120 = fcmp oeq double %73, -1.000000e+00
  br i1 %cmp120, label %for.inc136, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body118
  %opt122 = getelementptr inbounds %struct._LocalHom, ptr %tmpptr2.0330, i64 0, i32 7
  %74 = load double, ptr %opt122, align 8, !tbaa !406
  %cmp123 = fcmp oeq double %74, -1.000000e+00
  br i1 %cmp123, label %for.inc136, label %if.end126

if.end126:                                        ; preds = %lor.lhs.false
  %importance127 = getelementptr inbounds %struct._LocalHom, ptr %tmpptr1.0329, i64 0, i32 10
  %75 = load double, ptr %importance127, align 8, !tbaa !409
  %importance128 = getelementptr inbounds %struct._LocalHom, ptr %tmpptr2.0330, i64 0, i32 10
  %76 = load double, ptr %importance128, align 8, !tbaa !409
  %add129 = fadd double %75, %76
  %mul130 = fmul double %add129, 5.000000e-01
  store double %mul130, ptr %importance128, align 8, !tbaa !409
  store double %mul130, ptr %importance127, align 8, !tbaa !409
  %conv133 = fptrunc double %mul130 to float
  %fimportance134 = getelementptr inbounds %struct._LocalHom, ptr %tmpptr2.0330, i64 0, i32 11
  store float %conv133, ptr %fimportance134, align 8, !tbaa !410
  %fimportance135 = getelementptr inbounds %struct._LocalHom, ptr %tmpptr1.0329, i64 0, i32 11
  store float %conv133, ptr %fimportance135, align 8, !tbaa !410
  br label %for.inc136

for.inc136:                                       ; preds = %for.body118, %lor.lhs.false, %if.end126
  %next137 = getelementptr inbounds %struct._LocalHom, ptr %tmpptr1.0329, i64 0, i32 1
  %77 = load ptr, ptr %next137, align 8, !tbaa !411
  %next138 = getelementptr inbounds %struct._LocalHom, ptr %tmpptr2.0330, i64 0, i32 1
  %78 = load ptr, ptr %next138, align 8, !tbaa !411
  %tobool116 = icmp ne ptr %77, null
  %tobool117 = icmp ne ptr %78, null
  %79 = select i1 %tobool116, i1 %tobool117, i1 false
  br i1 %79, label %for.body118, label %for.end139, !llvm.loop !435

for.end139:                                       ; preds = %for.inc136
  %tobool140 = icmp ne ptr %77, null
  %or.cond238 = xor i1 %tobool140, %tobool117
  br i1 %or.cond238, label %if.then146, label %if.end148

if.then146:                                       ; preds = %for.body106, %for.end139
  %80 = trunc i64 %indvars.iv374 to i32
  %81 = trunc i64 %indvars.iv369 to i32
  %82 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call147 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %82, ptr noundef nonnull @.str.31, i32 noundef %80, i32 noundef %81) #32
  tail call void @exit(i32 noundef 1) #33
  unreachable

if.end148:                                        ; preds = %for.end139
  %indvars.iv.next370 = add nuw nsw i64 %indvars.iv369, 1
  %exitcond373.not = icmp eq i64 %indvars.iv.next370, %wide.trip.count372
  br i1 %exitcond373.not, label %for.cond98.loopexit, label %for.body106, !llvm.loop !436

for.end154:                                       ; preds = %for.cond98.loopexit, %if.end, %for.cond6.preheader, %for.cond98.preheader
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @extendlocalhom2(i32 noundef %nseq, ptr nocapture noundef readonly %localhom, ptr nocapture noundef readonly %dist) local_unnamed_addr #12 {
entry:
  %0 = load ptr, ptr @extendlocalhom2.ini, align 8, !tbaa !13
  %cmp = icmp eq ptr %0, null
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %1 = load i32, ptr @nlenmax, align 4, !tbaa !10
  %add = add nsw i32 %1, 1
  %call = tail call ptr @AllocateIntVec(i32 noundef %add) #34
  store ptr %call, ptr @extendlocalhom2.ini, align 8, !tbaa !13
  %2 = load i32, ptr @nlenmax, align 4, !tbaa !10
  %add1 = add nsw i32 %2, 1
  %call2 = tail call ptr @AllocateIntVec(i32 noundef %add1) #34
  store ptr %call2, ptr @extendlocalhom2.inj, align 8, !tbaa !13
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %cmp3468 = icmp sgt i32 %nseq, 1
  br i1 %cmp3468, label %for.body.us.preheader, label %for.end274

for.body.us.preheader:                            ; preds = %if.end
  %sub = add i32 %nseq, -1
  %3 = zext i32 %nseq to i64
  %wide.trip.count497 = zext i32 %sub to i64
  %wide.trip.count492 = zext i32 %nseq to i64
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us.preheader, %for.cond.loopexit.us
  %indvars.iv494 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next495, %for.cond.loopexit.us ]
  %indvars.iv487 = phi i64 [ 1, %for.body.us.preheader ], [ %indvars.iv.next488, %for.cond.loopexit.us ]
  %stj.0471.us = phi i32 [ 0, %for.body.us.preheader ], [ %stj.1.lcssa.us, %for.cond.loopexit.us ]
  %sti.0470.us = phi i32 [ 0, %for.body.us.preheader ], [ %sti.1.lcssa.us, %for.cond.loopexit.us ]
  %indvars.iv.next495 = add nuw nsw i64 %indvars.iv494, 1
  %cmp6461.us = icmp ult i64 %indvars.iv.next495, %3
  br i1 %cmp6461.us, label %for.cond8.preheader.lr.ph.us, label %for.cond.loopexit.us

for.cond.loopexit.us:                             ; preds = %for.cond8.for.inc269_crit_edge.us.us, %for.body.us
  %sti.1.lcssa.us = phi i32 [ %sti.0470.us, %for.body.us ], [ %sti.5.us.us, %for.cond8.for.inc269_crit_edge.us.us ]
  %stj.1.lcssa.us = phi i32 [ %stj.0471.us, %for.body.us ], [ %stj.5.us.us, %for.cond8.for.inc269_crit_edge.us.us ]
  %indvars.iv.next488 = add nuw nsw i64 %indvars.iv487, 1
  %exitcond498.not = icmp eq i64 %indvars.iv.next495, %wide.trip.count497
  br i1 %exitcond498.not, label %for.end274, label %for.body.us, !llvm.loop !437

for.cond8.preheader.lr.ph.us:                     ; preds = %for.body.us
  %arrayidx24.us = getelementptr inbounds ptr, ptr %dist, i64 %indvars.iv494
  %arrayidx60.us = getelementptr inbounds ptr, ptr %localhom, i64 %indvars.iv494
  %4 = trunc i64 %indvars.iv494 to i32
  br label %for.cond8.preheader.us.us

for.cond8.preheader.us.us:                        ; preds = %for.cond8.for.inc269_crit_edge.us.us, %for.cond8.preheader.lr.ph.us
  %indvars.iv489 = phi i64 [ %indvars.iv.next490, %for.cond8.for.inc269_crit_edge.us.us ], [ %indvars.iv487, %for.cond8.preheader.lr.ph.us ]
  %stj.1464.us.us = phi i32 [ %stj.5.us.us, %for.cond8.for.inc269_crit_edge.us.us ], [ %stj.0471.us, %for.cond8.preheader.lr.ph.us ]
  %sti.1463.us.us = phi i32 [ %sti.5.us.us, %for.cond8.for.inc269_crit_edge.us.us ], [ %sti.0470.us, %for.cond8.preheader.lr.ph.us ]
  %arrayidx84.us.us = getelementptr inbounds ptr, ptr %localhom, i64 %indvars.iv489
  %5 = trunc i64 %indvars.iv489 to i32
  br label %for.body10.us.us

for.body10.us.us:                                 ; preds = %for.inc266.us.us, %for.cond8.preheader.us.us
  %indvars.iv482 = phi i64 [ %indvars.iv.next483, %for.inc266.us.us ], [ 0, %for.cond8.preheader.us.us ]
  %stj.2458.us.us = phi i32 [ %stj.5.us.us, %for.inc266.us.us ], [ %stj.1464.us.us, %for.cond8.preheader.us.us ]
  %sti.2457.us.us = phi i32 [ %sti.5.us.us, %for.inc266.us.us ], [ %sti.1463.us.us, %for.cond8.preheader.us.us ]
  %cmp11.us.us = icmp eq i64 %indvars.iv482, %indvars.iv494
  %cmp12.us.us = icmp eq i64 %indvars.iv482, %indvars.iv489
  %or.cond.us.us = or i1 %cmp11.us.us, %cmp12.us.us
  br i1 %or.cond.us.us, label %for.inc266.us.us, label %if.end14.us.us

if.end14.us.us:                                   ; preds = %for.body10.us.us
  %6 = trunc i64 %indvars.iv482 to i32
  %cond.us.us = tail call i32 @llvm.umin.i32(i32 %4, i32 %6)
  %idxprom.us.us = zext i32 %cond.us.us to i64
  %arrayidx.us.us = getelementptr inbounds ptr, ptr %dist, i64 %idxprom.us.us
  %7 = load ptr, ptr %arrayidx.us.us, align 8, !tbaa !13
  %cond20.us.us = tail call i32 @llvm.umax.i32(i32 %4, i32 %6)
  %idxprom21.us.us = zext i32 %cond20.us.us to i64
  %arrayidx22.us.us = getelementptr inbounds double, ptr %7, i64 %idxprom21.us.us
  %8 = load double, ptr %arrayidx22.us.us, align 8, !tbaa !20
  %9 = load ptr, ptr %arrayidx24.us, align 8, !tbaa !13
  %arrayidx26.us.us = getelementptr inbounds double, ptr %9, i64 %indvars.iv489
  %10 = load double, ptr %arrayidx26.us.us, align 8, !tbaa !20
  %11 = load double, ptr @thrinter, align 8, !tbaa !20
  %mul.us.us = fmul double %10, %11
  %cmp27.us.us = fcmp ogt double %8, %mul.us.us
  br i1 %cmp27.us.us, label %for.inc266.us.us, label %lor.lhs.false28.us.us

lor.lhs.false28.us.us:                            ; preds = %if.end14.us.us
  %cond33.us.us = tail call i32 @llvm.umin.i32(i32 %5, i32 %6)
  %idxprom34.us.us = zext i32 %cond33.us.us to i64
  %arrayidx35.us.us = getelementptr inbounds ptr, ptr %dist, i64 %idxprom34.us.us
  %12 = load ptr, ptr %arrayidx35.us.us, align 8, !tbaa !13
  %cond40.us.us = tail call i32 @llvm.umax.i32(i32 %5, i32 %6)
  %idxprom41.us.us = zext i32 %cond40.us.us to i64
  %arrayidx42.us.us = getelementptr inbounds double, ptr %12, i64 %idxprom41.us.us
  %13 = load double, ptr %arrayidx42.us.us, align 8, !tbaa !20
  %cmp48.us.us = fcmp ogt double %13, %mul.us.us
  br i1 %cmp48.us.us, label %for.inc266.us.us, label %if.end50.us.us

if.end50.us.us:                                   ; preds = %lor.lhs.false28.us.us
  %14 = load i32, ptr @nlenmax, align 4, !tbaa !10
  %add51.us.us = add nsw i32 %14, 1
  %tobool.not426.us.us = icmp eq i32 %add51.us.us, 0
  br i1 %tobool.not426.us.us, label %while.end58.us.us, label %while.end.us.us

while.end.us.us:                                  ; preds = %if.end50.us.us
  %15 = load ptr, ptr @extendlocalhom2.ini, align 8, !tbaa !13
  %16 = zext i32 %add51.us.us to i64
  %17 = shl nuw nsw i64 %16, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %15, i8 -1, i64 %17, i1 false), !tbaa !10
  %.pre = load i32, ptr @nlenmax, align 4, !tbaa !10
  %.pre499 = add nsw i32 %.pre, 1
  %tobool55.not429.us.us = icmp eq i32 %.pre499, 0
  br i1 %tobool55.not429.us.us, label %while.end58.us.us, label %while.body56.us.us.preheader

while.body56.us.us.preheader:                     ; preds = %while.end.us.us
  %18 = load ptr, ptr @extendlocalhom2.inj, align 8, !tbaa !13
  %19 = zext i32 %.pre499 to i64
  %20 = shl nuw nsw i64 %19, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %18, i8 -1, i64 %20, i1 false), !tbaa !10
  br label %while.end58.us.us

while.end58.us.us:                                ; preds = %if.end50.us.us, %while.body56.us.us.preheader, %while.end.us.us
  %21 = load ptr, ptr %arrayidx60.us, align 8, !tbaa !13
  %tobool62.not436.us.us = icmp eq ptr %21, null
  br i1 %tobool62.not436.us.us, label %for.end.us.us, label %for.body63.us.us.preheader

for.body63.us.us.preheader:                       ; preds = %while.end58.us.us
  %add.ptr.us.us = getelementptr inbounds %struct._LocalHom, ptr %21, i64 %indvars.iv482
  br label %for.body63.us.us

for.body63.us.us:                                 ; preds = %for.body63.us.us.preheader, %for.inc.us.us
  %pt.0437.us.us = phi ptr [ %37, %for.inc.us.us ], [ %add.ptr.us.us, %for.body63.us.us.preheader ]
  %opt.us.us = getelementptr inbounds %struct._LocalHom, ptr %pt.0437.us.us, i64 0, i32 7
  %22 = load double, ptr %opt.us.us, align 8, !tbaa !406
  %cmp64.us.us = fcmp oeq double %22, -1.000000e+00
  br i1 %cmp64.us.us, label %if.then65.us.us, label %if.end68.us.us

if.then65.us.us:                                  ; preds = %for.body63.us.us
  %23 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call67.us.us = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %23, ptr noundef nonnull @.str.32, double noundef -1.000000e+00) #32
  br label %if.end68.us.us

if.end68.us.us:                                   ; preds = %if.then65.us.us, %for.body63.us.us
  %extended.us.us = getelementptr inbounds %struct._LocalHom, ptr %pt.0437.us.us, i64 0, i32 9
  %24 = load i32, ptr %extended.us.us, align 4, !tbaa !438
  %cmp69.us.us = icmp sgt i32 %24, -1
  br i1 %cmp69.us.us, label %for.end.us.us, label %if.end71.us.us

if.end71.us.us:                                   ; preds = %if.end68.us.us
  %start1.us.us = getelementptr inbounds %struct._LocalHom, ptr %pt.0437.us.us, i64 0, i32 3
  %25 = load <2 x i32>, ptr %start1.us.us, align 8, !tbaa !10
  %26 = extractelement <2 x i32> %25, i64 0
  %27 = extractelement <2 x i32> %25, i64 1
  %reass.sub = sub i32 %27, %26
  %add74.us.us = add i32 %reass.sub, 1
  %tobool79.not432.us.us = icmp eq i32 %add74.us.us, 0
  br i1 %tobool79.not432.us.us, label %for.inc.us.us, label %while.body80.us.us.preheader

while.body80.us.us.preheader:                     ; preds = %if.end71.us.us
  %28 = load ptr, ptr @extendlocalhom2.ini, align 8, !tbaa !13
  %start2.us.us = getelementptr inbounds %struct._LocalHom, ptr %pt.0437.us.us, i64 0, i32 5
  %29 = load i32, ptr %start2.us.us, align 8, !tbaa !439
  %idx.ext75.us.us = sext i32 %29 to i64
  %add.ptr76.us.us = getelementptr inbounds i32, ptr %28, i64 %idx.ext75.us.us
  %30 = sub i32 %27, %26
  %31 = zext i32 %30 to i64
  %32 = add nuw nsw i64 %31, 1
  %min.iters.check512 = icmp ult i32 %30, 7
  br i1 %min.iters.check512, label %while.body80.us.us.preheader538, label %vector.ph513

vector.ph513:                                     ; preds = %while.body80.us.us.preheader
  %n.vec515 = and i64 %32, -8
  %33 = shl nuw nsw i64 %n.vec515, 2
  %ind.end516 = getelementptr i8, ptr %add.ptr76.us.us, i64 %33
  %.cast518 = trunc i64 %n.vec515 to i32
  %ind.end519 = sub i32 %add74.us.us, %.cast518
  %.cast521 = trunc i64 %n.vec515 to i32
  %ind.end522 = add i32 %26, %.cast521
  %.splat530 = shufflevector <2 x i32> %25, <2 x i32> poison, <4 x i32> zeroinitializer
  %induction531 = add <4 x i32> %.splat530, <i32 0, i32 1, i32 2, i32 3>
  br label %vector.body525

vector.body525:                                   ; preds = %vector.body525, %vector.ph513
  %index526 = phi i64 [ 0, %vector.ph513 ], [ %index.next536, %vector.body525 ]
  %vec.ind532 = phi <4 x i32> [ %induction531, %vector.ph513 ], [ %vec.ind.next535, %vector.body525 ]
  %34 = shl i64 %index526, 2
  %next.gep527 = getelementptr i8, ptr %add.ptr76.us.us, i64 %34
  %step.add533 = add <4 x i32> %vec.ind532, <i32 4, i32 4, i32 4, i32 4>
  store <4 x i32> %vec.ind532, ptr %next.gep527, align 4, !tbaa !10
  %35 = getelementptr i32, ptr %next.gep527, i64 4
  store <4 x i32> %step.add533, ptr %35, align 4, !tbaa !10
  %index.next536 = add nuw i64 %index526, 8
  %vec.ind.next535 = add <4 x i32> %vec.ind532, <i32 8, i32 8, i32 8, i32 8>
  %36 = icmp eq i64 %index.next536, %n.vec515
  br i1 %36, label %middle.block510, label %vector.body525, !llvm.loop !440

middle.block510:                                  ; preds = %vector.body525
  %cmp.n524 = icmp eq i64 %32, %n.vec515
  br i1 %cmp.n524, label %for.inc.us.us, label %while.body80.us.us.preheader538

while.body80.us.us.preheader538:                  ; preds = %while.body80.us.us.preheader, %middle.block510
  %ipt.2435.us.us.ph = phi ptr [ %add.ptr76.us.us, %while.body80.us.us.preheader ], [ %ind.end516, %middle.block510 ]
  %len.0434.us.us.ph = phi i32 [ %add74.us.us, %while.body80.us.us.preheader ], [ %ind.end519, %middle.block510 ]
  %pi.0433.us.us.ph = phi i32 [ %26, %while.body80.us.us.preheader ], [ %ind.end522, %middle.block510 ]
  br label %while.body80.us.us

while.body80.us.us:                               ; preds = %while.body80.us.us.preheader538, %while.body80.us.us
  %ipt.2435.us.us = phi ptr [ %incdec.ptr81.us.us, %while.body80.us.us ], [ %ipt.2435.us.us.ph, %while.body80.us.us.preheader538 ]
  %len.0434.us.us = phi i32 [ %dec78.us.us, %while.body80.us.us ], [ %len.0434.us.us.ph, %while.body80.us.us.preheader538 ]
  %pi.0433.us.us = phi i32 [ %inc.us.us, %while.body80.us.us ], [ %pi.0433.us.us.ph, %while.body80.us.us.preheader538 ]
  %dec78.us.us = add nsw i32 %len.0434.us.us, -1
  %inc.us.us = add nsw i32 %pi.0433.us.us, 1
  %incdec.ptr81.us.us = getelementptr inbounds i32, ptr %ipt.2435.us.us, i64 1
  store i32 %pi.0433.us.us, ptr %ipt.2435.us.us, align 4, !tbaa !10
  %tobool79.not.us.us = icmp eq i32 %dec78.us.us, 0
  br i1 %tobool79.not.us.us, label %for.inc.us.us, label %while.body80.us.us, !llvm.loop !441

for.inc.us.us:                                    ; preds = %while.body80.us.us, %middle.block510, %if.end71.us.us
  %next.us.us = getelementptr inbounds %struct._LocalHom, ptr %pt.0437.us.us, i64 0, i32 1
  %37 = load ptr, ptr %next.us.us, align 8, !tbaa !411
  %tobool62.not.us.us = icmp eq ptr %37, null
  br i1 %tobool62.not.us.us, label %for.end.us.us, label %for.body63.us.us, !llvm.loop !442

for.end.us.us:                                    ; preds = %for.inc.us.us, %if.end68.us.us, %while.end58.us.us
  %38 = load ptr, ptr %arrayidx84.us.us, align 8, !tbaa !13
  %tobool88.not442.us.us = icmp eq ptr %38, null
  br i1 %tobool88.not442.us.us, label %for.end117.us.us, label %for.body89.us.us.preheader

for.body89.us.us.preheader:                       ; preds = %for.end.us.us
  %add.ptr86.us.us = getelementptr inbounds %struct._LocalHom, ptr %38, i64 %indvars.iv482
  br label %for.body89.us.us

for.body89.us.us:                                 ; preds = %for.body89.us.us.preheader, %for.inc115.us.us
  %pt.1443.us.us = phi ptr [ %54, %for.inc115.us.us ], [ %add.ptr86.us.us, %for.body89.us.us.preheader ]
  %opt90.us.us = getelementptr inbounds %struct._LocalHom, ptr %pt.1443.us.us, i64 0, i32 7
  %39 = load double, ptr %opt90.us.us, align 8, !tbaa !406
  %cmp91.us.us = fcmp oeq double %39, -1.000000e+00
  br i1 %cmp91.us.us, label %if.then92.us.us, label %if.end95.us.us

if.then92.us.us:                                  ; preds = %for.body89.us.us
  %40 = load ptr, ptr @stderr, align 8, !tbaa !13
  %call94.us.us = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %40, ptr noundef nonnull @.str.32, double noundef -1.000000e+00) #32
  br label %if.end95.us.us

if.end95.us.us:                                   ; preds = %if.then92.us.us, %for.body89.us.us
  %extended96.us.us = getelementptr inbounds %struct._LocalHom, ptr %pt.1443.us.us, i64 0, i32 9
  %41 = load i32, ptr %extended96.us.us, align 4, !tbaa !438
  %cmp97.us.us = icmp sgt i32 %41, -1
  br i1 %cmp97.us.us, label %for.end117.us.us, label %if.end99.us.us

if.end99.us.us:                                   ; preds = %if.end95.us.us
  %start1100.us.us = getelementptr inbounds %struct._LocalHom, ptr %pt.1443.us.us, i64 0, i32 3
  %42 = load <2 x i32>, ptr %start1100.us.us, align 8, !tbaa !10
  %43 = extractelement <2 x i32> %42, i64 0
  %44 = extractelement <2 x i32> %42, i64 1
  %reass.sub472 = sub i32 %44, %43
  %add105.us.us = add i32 %reass.sub472, 1
  %tobool110.not438.us.us = icmp eq i32 %add105.us.us, 0
  br i1 %tobool110.not438.us.us, label %for.inc115.us.us, label %while.body111.us.us.preheader

while.body111.us.us.preheader:                    ; preds = %if.end99.us.us
  %45 = load ptr, ptr @extendlocalhom2.inj, align 8, !tbaa !13
  %start2101.us.us = getelementptr inbounds %struct._LocalHom, ptr %pt.1443.us.us, i64 0, i32 5
  %46 = load i32, ptr %start2101.us.us, align 8, !tbaa !439
  %idx.ext106.us.us = sext i32 %46 to i64
  %add.ptr107.us.us = getelementptr inbounds i32, ptr %45, i64 %idx.ext106.us.us
  %47 = sub i32 %44, %43
  %48 = zext i32 %47 to i64
  %49 = add nuw nsw i64 %48, 1
  %min.iters.check = icmp ult i32 %47, 7
  br i1 %min.iters.check, label %while.body111.us.us.preheader537, label %vector.ph

vector.ph:                                        ; preds = %while.body111.us.us.preheader
  %n.vec = and i64 %49, -8
  %50 = shl nuw nsw i64 %n.vec, 2
  %ind.end = getelementptr i8, ptr %add.ptr107.us.us, i64 %50
  %.cast = trunc i64 %n.vec to i32
  %ind.end503 = sub i32 %add105.us.us, %.cast
  %.cast505 = trunc i64 %n.vec to i32
  %ind.end506 = add i32 %43, %.cast505
  %.splat = shufflevector <2 x i32> %42, <2 x i32> poison, <4 x i32> zeroinitializer
  %induction = add <4 x i32> %.splat, <i32 0, i32 1, i32 2, i32 3>
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %vec.ind = phi <4 x i32> [ %induction, %vector.ph ], [ %vec.ind.next, %vector.body ]
  %51 = shl i64 %index, 2
  %next.gep = getelementptr i8, ptr %add.ptr107.us.us, i64 %51
  %step.add = add <4 x i32> %vec.ind, <i32 4, i32 4, i32 4, i32 4>
  store <4 x i32> %vec.ind, ptr %next.gep, align 4, !tbaa !10
  %52 = getelementptr i32, ptr %next.gep, i64 4
  store <4 x i32> %step.add, ptr %52, align 4, !tbaa !10
  %index.next = add nuw i64 %index, 8
  %vec.ind.next = add <4 x i32> %vec.ind, <i32 8, i32 8, i32 8, i32 8>
  %53 = icmp eq i64 %index.next, %n.vec
  br i1 %53, label %middle.block, label %vector.body, !llvm.loop !443

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %49, %n.vec
  br i1 %cmp.n, label %for.inc115.us.us, label %while.body111.us.us.preheader537

while.body111.us.us.preheader537:                 ; preds = %while.body111.us.us.preheader, %middle.block
  %ipt.3441.us.us.ph = phi ptr [ %add.ptr107.us.us, %while.body111.us.us.preheader ], [ %ind.end, %middle.block ]
  %len.1440.us.us.ph = phi i32 [ %add105.us.us, %while.body111.us.us.preheader ], [ %ind.end503, %middle.block ]
  %pj.0439.us.us.ph = phi i32 [ %43, %while.body111.us.us.preheader ], [ %ind.end506, %middle.block ]
  br label %while.body111.us.us

while.body111.us.us:                              ; preds = %while.body111.us.us.preheader537, %while.body111.us.us
  %ipt.3441.us.us = phi ptr [ %incdec.ptr113.us.us, %while.body111.us.us ], [ %ipt.3441.us.us.ph, %while.body111.us.us.preheader537 ]
  %len.1440.us.us = phi i32 [ %dec109.us.us, %while.body111.us.us ], [ %len.1440.us.us.ph, %while.body111.us.us.preheader537 ]
  %pj.0439.us.us = phi i32 [ %inc112.us.us, %while.body111.us.us ], [ %pj.0439.us.us.ph, %while.body111.us.us.preheader537 ]
  %dec109.us.us = add nsw i32 %len.1440.us.us, -1
  %inc112.us.us = add nsw i32 %pj.0439.us.us, 1
  %incdec.ptr113.us.us = getelementptr inbounds i32, ptr %ipt.3441.us.us, i64 1
  store i32 %pj.0439.us.us, ptr %ipt.3441.us.us, align 4, !tbaa !10
  %tobool110.not.us.us = icmp eq i32 %dec109.us.us, 0
  br i1 %tobool110.not.us.us, label %for.inc115.us.us, label %while.body111.us.us, !llvm.loop !444

for.inc115.us.us:                                 ; preds = %while.body111.us.us, %middle.block, %if.end99.us.us
  %next116.us.us = getelementptr inbounds %struct._LocalHom, ptr %pt.1443.us.us, i64 0, i32 1
  %54 = load ptr, ptr %next116.us.us, align 8, !tbaa !411
  %tobool88.not.us.us = icmp eq ptr %54, null
  br i1 %tobool88.not.us.us, label %for.end117.us.us, label %for.body89.us.us, !llvm.loop !445

for.end117.us.us:                                 ; preds = %for.inc115.us.us, %if.end95.us.us, %for.end.us.us
  %55 = load i32, ptr @nlenmax, align 4, !tbaa !10
  %cmp120.not444.us.us = icmp slt i32 %55, 0
  br i1 %cmp120.not444.us.us, label %for.inc266.us.us, label %for.body121.lr.ph.us.us

for.body121.us.us:                                ; preds = %for.inc131.us.us.1, %for.body121.lr.ph.us.us.new
  %indvars.iv = phi i64 [ 0, %for.body121.lr.ph.us.us.new ], [ %indvars.iv.next.1, %for.inc131.us.us.1 ]
  %overlp.0445.us.us = phi i32 [ 0, %for.body121.lr.ph.us.us.new ], [ %overlp.1.us.us.1, %for.inc131.us.us.1 ]
  %niter = phi i64 [ 0, %for.body121.lr.ph.us.us.new ], [ %niter.next.1, %for.inc131.us.us.1 ]
  %arrayidx123.us.us = getelementptr inbounds i32, ptr %86, i64 %indvars.iv
  %56 = load i32, ptr %arrayidx123.us.us, align 4, !tbaa !10
  %cmp124.not.us.us = icmp eq i32 %56, -1
  br i1 %cmp124.not.us.us, label %for.inc131.us.us, label %land.lhs.true.us.us

land.lhs.true.us.us:                              ; preds = %for.body121.us.us
  %arrayidx126.us.us = getelementptr inbounds i32, ptr %87, i64 %indvars.iv
  %57 = load i32, ptr %arrayidx126.us.us, align 4, !tbaa !10
  %cmp127.not.us.us = icmp ne i32 %57, -1
  %inc129.us.us = zext i1 %cmp127.not.us.us to i32
  %spec.select.us.us = add nsw i32 %overlp.0445.us.us, %inc129.us.us
  br label %for.inc131.us.us

for.inc131.us.us:                                 ; preds = %land.lhs.true.us.us, %for.body121.us.us
  %overlp.1.us.us = phi i32 [ %overlp.0445.us.us, %for.body121.us.us ], [ %spec.select.us.us, %land.lhs.true.us.us ]
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx123.us.us.1 = getelementptr inbounds i32, ptr %86, i64 %indvars.iv.next
  %58 = load i32, ptr %arrayidx123.us.us.1, align 4, !tbaa !10
  %cmp124.not.us.us.1 = icmp eq i32 %58, -1
  br i1 %cmp124.not.us.us.1, label %for.inc131.us.us.1, label %land.lhs.true.us.us.1

land.lhs.true.us.us.1:                            ; preds = %for.inc131.us.us
  %arrayidx126.us.us.1 = getelementptr inbounds i32, ptr %87, i64 %indvars.iv.next
  %59 = load i32, ptr %arrayidx126.us.us.1, align 4, !tbaa !10
  %cmp127.not.us.us.1 = icmp ne i32 %59, -1
  %inc129.us.us.1 = zext i1 %cmp127.not.us.us.1 to i32
  %spec.select.us.us.1 = add nsw i32 %overlp.1.us.us, %inc129.us.us.1
  br label %for.inc131.us.us.1

for.inc131.us.us.1:                               ; preds = %land.lhs.true.us.us.1, %for.inc131.us.us
  %overlp.1.us.us.1 = phi i32 [ %overlp.1.us.us, %for.inc131.us.us ], [ %spec.select.us.us.1, %land.lhs.true.us.us.1 ]
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond135.preheader.us.us.unr-lcssa, label %for.body121.us.us, !llvm.loop !446

for.body137.us.us:                                ; preds = %for.body137.lr.ph.us.us, %for.inc263.us.us
  %indvars.iv475 = phi i64 [ 0, %for.body137.lr.ph.us.us ], [ %indvars.iv.next476, %for.inc263.us.us ]
  %stj.3451.us.us = phi i32 [ %stj.2458.us.us, %for.body137.lr.ph.us.us ], [ %stj.4.us.us, %for.inc263.us.us ]
  %sti.3450.us.us = phi i32 [ %sti.2457.us.us, %for.body137.lr.ph.us.us ], [ %sti.4.us.us, %for.inc263.us.us ]
  %status.0449.us.us = phi i32 [ 0, %for.body137.lr.ph.us.us ], [ %status.2.us.us, %for.inc263.us.us ]
  %tobool138.not.us.us = icmp eq i32 %status.0449.us.us, 0
  br i1 %tobool138.not.us.us, label %if.then248.us.us, label %if.then139.us.us

if.then139.us.us:                                 ; preds = %for.body137.us.us
  %arrayidx141.us.us = getelementptr inbounds i32, ptr %90, i64 %indvars.iv475
  %60 = load i32, ptr %arrayidx141.us.us, align 4, !tbaa !10
  %cmp142.us.us = icmp eq i32 %60, -1
  br i1 %cmp142.us.us, label %if.then163.us.us, label %lor.lhs.false143.us.us

lor.lhs.false143.us.us:                           ; preds = %if.then139.us.us
  %arrayidx145.us.us = getelementptr inbounds i32, ptr %91, i64 %indvars.iv475
  %61 = load i32, ptr %arrayidx145.us.us, align 4, !tbaa !10
  %cmp146.us.us = icmp eq i32 %61, -1
  br i1 %cmp146.us.us, label %if.then163.us.us, label %lor.lhs.false147.us.us

lor.lhs.false147.us.us:                           ; preds = %lor.lhs.false143.us.us
  %62 = add nsw i64 %indvars.iv475, -1
  %arrayidx150.us.us = getelementptr inbounds i32, ptr %90, i64 %62
  %63 = load i32, ptr %arrayidx150.us.us, align 4, !tbaa !10
  %sub153.us.us = add nsw i32 %60, -1
  %cmp154.not.us.us = icmp eq i32 %63, %sub153.us.us
  br i1 %cmp154.not.us.us, label %lor.lhs.false155.us.us, label %if.then163.us.us

lor.lhs.false155.us.us:                           ; preds = %lor.lhs.false147.us.us
  %arrayidx158.us.us = getelementptr inbounds i32, ptr %91, i64 %62
  %64 = load i32, ptr %arrayidx158.us.us, align 4, !tbaa !10
  %sub161.us.us = add nsw i32 %61, -1
  %cmp162.not.us.us = icmp eq i32 %64, %sub161.us.us
  br i1 %cmp162.not.us.us, label %for.inc263.us.us, label %if.then163.us.us

if.then163.us.us:                                 ; preds = %lor.lhs.false155.us.us, %lor.lhs.false147.us.us, %lor.lhs.false143.us.us, %if.then139.us.us
  %65 = load ptr, ptr %arrayidx60.us, align 8, !tbaa !13
  %arrayidx167.us.us = getelementptr inbounds %struct._LocalHom, ptr %65, i64 %indvars.iv489
  %last.us.us = getelementptr inbounds %struct._LocalHom, ptr %65, i64 %indvars.iv489, i32 2
  %66 = load ptr, ptr %last.us.us, align 8, !tbaa !447
  %67 = add nsw i64 %indvars.iv475, -1
  %arrayidx174.us.us = getelementptr inbounds i32, ptr %90, i64 %67
  %68 = load i32, ptr %arrayidx174.us.us, align 4, !tbaa !10
  %arrayidx177.us.us = getelementptr inbounds i32, ptr %91, i64 %67
  %69 = load i32, ptr %arrayidx177.us.us, align 4, !tbaa !10
  %opt182.us.us = getelementptr inbounds %struct._LocalHom, ptr %65, i64 %indvars.iv482, i32 7
  %70 = load double, ptr %opt182.us.us, align 8, !tbaa !406
  %71 = load ptr, ptr %arrayidx84.us.us, align 8, !tbaa !13
  %opt187.us.us = getelementptr inbounds %struct._LocalHom, ptr %71, i64 %indvars.iv482, i32 7
  %72 = load double, ptr %opt187.us.us, align 8, !tbaa !406
  %cmp188.us.us = fcmp olt double %70, %72
  %..us.us = select i1 %cmp188.us.us, double %70, double %72
  %cmp.not.i.us.us = icmp eq ptr %66, %arrayidx167.us.us
  br i1 %cmp.not.i.us.us, label %addlocalhom2_e.exit.us.us, label %if.then.i.us.us

if.then.i.us.us:                                  ; preds = %if.then163.us.us
  %call.i.us.us = tail call noalias dereferenceable_or_null(80) ptr @calloc(i64 noundef 1, i64 noundef 80) #38
  %next.i.us.us = getelementptr inbounds %struct._LocalHom, ptr %66, i64 0, i32 1
  store ptr %call.i.us.us, ptr %next.i.us.us, align 8, !tbaa !411
  br label %addlocalhom2_e.exit.us.us

addlocalhom2_e.exit.us.us:                        ; preds = %if.then.i.us.us, %if.then163.us.us
  %call.sink.i.us.us = phi ptr [ %call.i.us.us, %if.then.i.us.us ], [ %arrayidx167.us.us, %if.then163.us.us ]
  store ptr %call.sink.i.us.us, ptr %last.us.us, align 8
  %73 = load i32, ptr %arrayidx167.us.us, align 8, !tbaa !448
  %inc.i.us.us = add nsw i32 %73, 1
  store i32 %inc.i.us.us, ptr %arrayidx167.us.us, align 8, !tbaa !448
  %start1.i.us.us = getelementptr inbounds %struct._LocalHom, ptr %call.sink.i.us.us, i64 0, i32 3
  store i32 %sti.3450.us.us, ptr %start1.i.us.us, align 8, !tbaa !416
  %start2.i.us.us = getelementptr inbounds %struct._LocalHom, ptr %call.sink.i.us.us, i64 0, i32 5
  store i32 %stj.3451.us.us, ptr %start2.i.us.us, align 8, !tbaa !439
  %end1.i.us.us = getelementptr inbounds %struct._LocalHom, ptr %call.sink.i.us.us, i64 0, i32 4
  store i32 %68, ptr %end1.i.us.us, align 4, !tbaa !417
  %end2.i.us.us = getelementptr inbounds %struct._LocalHom, ptr %call.sink.i.us.us, i64 0, i32 6
  store i32 %69, ptr %end2.i.us.us, align 4, !tbaa !449
  %opt4.i.us.us = getelementptr inbounds %struct._LocalHom, ptr %call.sink.i.us.us, i64 0, i32 7
  store double %..us.us, ptr %opt4.i.us.us, align 8, !tbaa !406
  %extended.i.us.us = getelementptr inbounds %struct._LocalHom, ptr %call.sink.i.us.us, i64 0, i32 9
  store i32 %6, ptr %extended.i.us.us, align 4, !tbaa !438
  %overlapaa.i.us.us = getelementptr inbounds %struct._LocalHom, ptr %call.sink.i.us.us, i64 0, i32 8
  store i32 %overlp.1.us.us.lcssa, ptr %overlapaa.i.us.us, align 8, !tbaa !408
  %74 = load ptr, ptr %arrayidx84.us.us, align 8, !tbaa !13
  %arrayidx207.us.us = getelementptr inbounds %struct._LocalHom, ptr %74, i64 %indvars.iv494
  %last208.us.us = getelementptr inbounds %struct._LocalHom, ptr %74, i64 %indvars.iv494, i32 2
  %75 = load ptr, ptr %last208.us.us, align 8, !tbaa !447
  %76 = load i32, ptr %arrayidx177.us.us, align 4, !tbaa !10
  %77 = load i32, ptr %arrayidx174.us.us, align 4, !tbaa !10
  %78 = load ptr, ptr %arrayidx60.us, align 8, !tbaa !13
  %opt223.us.us = getelementptr inbounds %struct._LocalHom, ptr %78, i64 %indvars.iv482, i32 7
  %79 = load double, ptr %opt223.us.us, align 8, !tbaa !406
  %opt228.us.us = getelementptr inbounds %struct._LocalHom, ptr %74, i64 %indvars.iv482, i32 7
  %80 = load double, ptr %opt228.us.us, align 8, !tbaa !406
  %cmp229.us.us = fcmp olt double %79, %80
  %cond243.us.us = select i1 %cmp229.us.us, double %79, double %80
  %cmp.not.i411.us.us = icmp eq ptr %75, %arrayidx207.us.us
  br i1 %cmp.not.i411.us.us, label %addlocalhom2_e.exit424.us.us, label %if.then.i414.us.us

if.then.i414.us.us:                               ; preds = %addlocalhom2_e.exit.us.us
  %call.i412.us.us = tail call noalias dereferenceable_or_null(80) ptr @calloc(i64 noundef 1, i64 noundef 80) #38
  %next.i413.us.us = getelementptr inbounds %struct._LocalHom, ptr %75, i64 0, i32 1
  store ptr %call.i412.us.us, ptr %next.i413.us.us, align 8, !tbaa !411
  br label %addlocalhom2_e.exit424.us.us

addlocalhom2_e.exit424.us.us:                     ; preds = %if.then.i414.us.us, %addlocalhom2_e.exit.us.us
  %call.sink.i415.us.us = phi ptr [ %call.i412.us.us, %if.then.i414.us.us ], [ %arrayidx207.us.us, %addlocalhom2_e.exit.us.us ]
  store ptr %call.sink.i415.us.us, ptr %last208.us.us, align 8
  %81 = load i32, ptr %arrayidx207.us.us, align 8, !tbaa !448
  %inc.i416.us.us = add nsw i32 %81, 1
  store i32 %inc.i416.us.us, ptr %arrayidx207.us.us, align 8, !tbaa !448
  %start1.i417.us.us = getelementptr inbounds %struct._LocalHom, ptr %call.sink.i415.us.us, i64 0, i32 3
  store i32 %stj.3451.us.us, ptr %start1.i417.us.us, align 8, !tbaa !416
  %start2.i418.us.us = getelementptr inbounds %struct._LocalHom, ptr %call.sink.i415.us.us, i64 0, i32 5
  store i32 %sti.3450.us.us, ptr %start2.i418.us.us, align 8, !tbaa !439
  %end1.i419.us.us = getelementptr inbounds %struct._LocalHom, ptr %call.sink.i415.us.us, i64 0, i32 4
  store i32 %76, ptr %end1.i419.us.us, align 4, !tbaa !417
  %end2.i420.us.us = getelementptr inbounds %struct._LocalHom, ptr %call.sink.i415.us.us, i64 0, i32 6
  store i32 %77, ptr %end2.i420.us.us, align 4, !tbaa !449
  %opt4.i421.us.us = getelementptr inbounds %struct._LocalHom, ptr %call.sink.i415.us.us, i64 0, i32 7
  store double %cond243.us.us, ptr %opt4.i421.us.us, align 8, !tbaa !406
  %extended.i422.us.us = getelementptr inbounds %struct._LocalHom, ptr %call.sink.i415.us.us, i64 0, i32 9
  store i32 %6, ptr %extended.i422.us.us, align 4, !tbaa !438
  %overlapaa.i423.us.us = getelementptr inbounds %struct._LocalHom, ptr %call.sink.i415.us.us, i64 0, i32 8
  store i32 %overlp.1.us.us.lcssa, ptr %overlapaa.i423.us.us, align 8, !tbaa !408
  br label %if.then248.us.us

if.then248.us.us:                                 ; preds = %addlocalhom2_e.exit424.us.us, %for.body137.us.us
  %arrayidx250.us.us = getelementptr inbounds i32, ptr %90, i64 %indvars.iv475
  %82 = load i32, ptr %arrayidx250.us.us, align 4, !tbaa !10
  %cmp251.us.us = icmp eq i32 %82, -1
  br i1 %cmp251.us.us, label %for.inc263.us.us, label %lor.lhs.false252.us.us

lor.lhs.false252.us.us:                           ; preds = %if.then248.us.us
  %arrayidx254.us.us = getelementptr inbounds i32, ptr %91, i64 %indvars.iv475
  %83 = load i32, ptr %arrayidx254.us.us, align 4, !tbaa !10
  %cmp255.us.us = icmp eq i32 %83, -1
  br i1 %cmp255.us.us, label %for.inc263.us.us, label %if.end257.us.us

if.end257.us.us:                                  ; preds = %lor.lhs.false252.us.us
  br label %for.inc263.us.us

for.inc263.us.us:                                 ; preds = %if.end257.us.us, %lor.lhs.false252.us.us, %if.then248.us.us, %lor.lhs.false155.us.us
  %status.2.us.us = phi i32 [ 0, %if.then248.us.us ], [ 0, %lor.lhs.false252.us.us ], [ 1, %if.end257.us.us ], [ 1, %lor.lhs.false155.us.us ]
  %sti.4.us.us = phi i32 [ %sti.3450.us.us, %if.then248.us.us ], [ %sti.3450.us.us, %lor.lhs.false252.us.us ], [ %82, %if.end257.us.us ], [ %sti.3450.us.us, %lor.lhs.false155.us.us ]
  %stj.4.us.us = phi i32 [ %stj.3451.us.us, %if.then248.us.us ], [ %stj.3451.us.us, %lor.lhs.false252.us.us ], [ %83, %if.end257.us.us ], [ %stj.3451.us.us, %lor.lhs.false155.us.us ]
  %indvars.iv.next476 = add nuw nsw i64 %indvars.iv475, 1
  %exitcond481.not = icmp eq i64 %indvars.iv.next476, %wide.trip.count480
  br i1 %exitcond481.not, label %for.inc266.us.us, label %for.body137.us.us, !llvm.loop !450

for.inc266.us.us:                                 ; preds = %for.inc263.us.us, %for.end117.us.us, %for.cond135.preheader.us.us, %lor.lhs.false28.us.us, %if.end14.us.us, %for.body10.us.us
  %sti.5.us.us = phi i32 [ %sti.2457.us.us, %for.body10.us.us ], [ %sti.2457.us.us, %if.end14.us.us ], [ %sti.2457.us.us, %lor.lhs.false28.us.us ], [ %sti.2457.us.us, %for.cond135.preheader.us.us ], [ %sti.2457.us.us, %for.end117.us.us ], [ %sti.4.us.us, %for.inc263.us.us ]
  %stj.5.us.us = phi i32 [ %stj.2458.us.us, %for.body10.us.us ], [ %stj.2458.us.us, %if.end14.us.us ], [ %stj.2458.us.us, %lor.lhs.false28.us.us ], [ %stj.2458.us.us, %for.cond135.preheader.us.us ], [ %stj.2458.us.us, %for.end117.us.us ], [ %stj.4.us.us, %for.inc263.us.us ]
  %indvars.iv.next483 = add nuw nsw i64 %indvars.iv482, 1
  %exitcond486.not = icmp eq i64 %indvars.iv.next483, %wide.trip.count492
  br i1 %exitcond486.not, label %for.cond8.for.inc269_crit_edge.us.us, label %for.body10.us.us, !llvm.loop !451

for.cond135.preheader.us.us.unr-lcssa:            ; preds = %for.inc131.us.us.1, %for.body121.lr.ph.us.us
  %overlp.1.us.us.lcssa.ph = phi i32 [ undef, %for.body121.lr.ph.us.us ], [ %overlp.1.us.us.1, %for.inc131.us.us.1 ]
  %indvars.iv.unr = phi i64 [ 0, %for.body121.lr.ph.us.us ], [ %indvars.iv.next.1, %for.inc131.us.us.1 ]
  %overlp.0445.us.us.unr = phi i32 [ 0, %for.body121.lr.ph.us.us ], [ %overlp.1.us.us.1, %for.inc131.us.us.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond135.preheader.us.us, label %for.body121.us.us.epil

for.body121.us.us.epil:                           ; preds = %for.cond135.preheader.us.us.unr-lcssa
  %arrayidx123.us.us.epil = getelementptr inbounds i32, ptr %86, i64 %indvars.iv.unr
  %84 = load i32, ptr %arrayidx123.us.us.epil, align 4, !tbaa !10
  %cmp124.not.us.us.epil = icmp eq i32 %84, -1
  br i1 %cmp124.not.us.us.epil, label %for.cond135.preheader.us.us, label %land.lhs.true.us.us.epil

land.lhs.true.us.us.epil:                         ; preds = %for.body121.us.us.epil
  %arrayidx126.us.us.epil = getelementptr inbounds i32, ptr %87, i64 %indvars.iv.unr
  %85 = load i32, ptr %arrayidx126.us.us.epil, align 4, !tbaa !10
  %cmp127.not.us.us.epil = icmp ne i32 %85, -1
  %inc129.us.us.epil = zext i1 %cmp127.not.us.us.epil to i32
  %spec.select.us.us.epil = add nsw i32 %overlp.0445.us.us.unr, %inc129.us.us.epil
  br label %for.cond135.preheader.us.us

for.cond135.preheader.us.us:                      ; preds = %for.body121.us.us.epil, %land.lhs.true.us.us.epil, %for.cond135.preheader.us.us.unr-lcssa
  %overlp.1.us.us.lcssa = phi i32 [ %overlp.1.us.us.lcssa.ph, %for.cond135.preheader.us.us.unr-lcssa ], [ %overlp.0445.us.us.unr, %for.body121.us.us.epil ], [ %spec.select.us.us.epil, %land.lhs.true.us.us.epil ]
  br i1 %cmp120.not444.us.us, label %for.inc266.us.us, label %for.body137.lr.ph.us.us

for.body121.lr.ph.us.us:                          ; preds = %for.end117.us.us
  %86 = load ptr, ptr @extendlocalhom2.ini, align 8, !tbaa !13
  %87 = load ptr, ptr @extendlocalhom2.inj, align 8
  %88 = add nuw i32 %55, 1
  %wide.trip.count = zext i32 %88 to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %89 = icmp eq i32 %55, 0
  br i1 %89, label %for.cond135.preheader.us.us.unr-lcssa, label %for.body121.lr.ph.us.us.new

for.body121.lr.ph.us.us.new:                      ; preds = %for.body121.lr.ph.us.us
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body121.us.us

for.body137.lr.ph.us.us:                          ; preds = %for.cond135.preheader.us.us
  %90 = load ptr, ptr @extendlocalhom2.ini, align 8
  %91 = load ptr, ptr @extendlocalhom2.inj, align 8
  %92 = add nuw i32 %55, 1
  %wide.trip.count480 = zext i32 %92 to i64
  br label %for.body137.us.us

for.cond8.for.inc269_crit_edge.us.us:             ; preds = %for.inc266.us.us
  %indvars.iv.next490 = add nuw nsw i64 %indvars.iv489, 1
  %exitcond493.not = icmp eq i64 %indvars.iv.next490, %wide.trip.count492
  br i1 %exitcond493.not, label %for.cond.loopexit.us, label %for.cond8.preheader.us.us, !llvm.loop !452

for.end274:                                       ; preds = %for.cond.loopexit.us, %if.end
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local i32 @makelocal(ptr noundef %s1, ptr nocapture noundef %s2, i32 noundef %thr) local_unnamed_addr #27 {
entry:
  %0 = load i32, ptr @penalty, align 4
  %conv5 = sitofp i32 %0 to double
  %sub.ptr.rhs.cast = ptrtoint ptr %s1 to i64
  br label %while.cond.outer

while.cond.outer:                                 ; preds = %if.end, %entry
  %start.0.ph = phi i32 [ %start.1, %if.end ], [ 0, %entry ]
  %maxstart.0.ph = phi i32 [ %maxstart.1, %if.end ], [ 0, %entry ]
  %maxend.0.ph = phi i32 [ %maxend.2, %if.end ], [ 0, %entry ]
  %pt1.0.ph = phi ptr [ %incdec.ptr15, %if.end ], [ %s1, %entry ]
  %pt2.0.ph = phi ptr [ %incdec.ptr17, %if.end ], [ %s2, %entry ]
  %score.0.ph = phi double [ %score.1, %if.end ], [ 0.000000e+00, %entry ]
  %maxscore.0.ph = phi double [ %maxscore.1, %if.end ], [ 0.000000e+00, %entry ]
  %.pre = load i8, ptr %pt1.0.ph, align 1, !tbaa !5
  br label %while.cond

while.cond.loopexit:                              ; preds = %lor.rhs
  %add = fadd double %score.0, %conv5
  br label %while.cond, !llvm.loop !453

while.cond:                                       ; preds = %while.cond.loopexit, %while.cond.outer
  %1 = phi i8 [ %.pre, %while.cond.outer ], [ %3, %while.cond.loopexit ]
  %pt1.0 = phi ptr [ %pt1.0.ph, %while.cond.outer ], [ %pt1.1, %while.cond.loopexit ]
  %pt2.0 = phi ptr [ %pt2.0.ph, %while.cond.outer ], [ %pt2.1, %while.cond.loopexit ]
  %score.0 = phi double [ %score.0.ph, %while.cond.outer ], [ %add, %while.cond.loopexit ]
  switch i8 %1, label %lor.lhs.false [
    i8 0, label %while.end40
    i8 45, label %while.cond6.preheader
  ]

lor.lhs.false:                                    ; preds = %while.cond
  %2 = load i8, ptr %pt2.0, align 1, !tbaa !5
  %cmp3 = icmp eq i8 %2, 45
  br i1 %cmp3, label %while.cond6.preheader, label %if.end

while.cond6.preheader:                            ; preds = %while.cond, %lor.lhs.false
  br label %while.cond6

while.cond6:                                      ; preds = %while.cond6.preheader, %while.body13
  %pt1.1 = phi ptr [ %incdec.ptr, %while.body13 ], [ %pt1.0, %while.cond6.preheader ]
  %pt2.1 = phi ptr [ %incdec.ptr14, %while.body13 ], [ %pt2.0, %while.cond6.preheader ]
  %3 = load i8, ptr %pt1.1, align 1, !tbaa !5
  %cmp8 = icmp eq i8 %3, 45
  br i1 %cmp8, label %while.body13, label %lor.rhs

lor.rhs:                                          ; preds = %while.cond6
  %4 = load i8, ptr %pt2.1, align 1, !tbaa !5
  %cmp11 = icmp eq i8 %4, 45
  br i1 %cmp11, label %while.body13, label %while.cond.loopexit

while.body13:                                     ; preds = %while.cond6, %lor.rhs
  %incdec.ptr = getelementptr inbounds i8, ptr %pt1.1, i64 1
  %incdec.ptr14 = getelementptr inbounds i8, ptr %pt2.1, i64 1
  br label %while.cond6, !llvm.loop !454

if.end:                                           ; preds = %lor.lhs.false
  %incdec.ptr15 = getelementptr inbounds i8, ptr %pt1.0, i64 1
  %idxprom = sext i8 %1 to i64
  %incdec.ptr17 = getelementptr inbounds i8, ptr %pt2.0, i64 1
  %idxprom19 = sext i8 %2 to i64
  %arrayidx20 = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom, i64 %idxprom19
  %5 = load i32, ptr %arrayidx20, align 4, !tbaa !10
  %sub = sub nsw i32 %5, %thr
  %conv21 = sitofp i32 %sub to double
  %add22 = fadd double %score.0, %conv21
  %cmp23 = fcmp ogt double %add22, %maxscore.0.ph
  %maxstart.1 = select i1 %cmp23, i32 %start.0.ph, i32 %maxstart.0.ph
  %maxscore.1 = select i1 %cmp23, double %add22, double %maxscore.0.ph
  %cmp27 = fcmp olt double %add22, 0.000000e+00
  %cmp30 = icmp eq i32 %start.0.ph, %maxstart.1
  %sub.ptr.lhs.cast = ptrtoint ptr %incdec.ptr15 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %conv33 = trunc i64 %sub.ptr.sub to i32
  %start.1 = select i1 %cmp27, i32 %conv33, i32 %start.0.ph
  %6 = select i1 %cmp27, i1 %cmp30, i1 false
  %maxend.2 = select i1 %6, i32 %conv33, i32 %maxend.0.ph
  %score.1 = select i1 %cmp27, double 0.000000e+00, double %add22
  br label %while.cond.outer, !llvm.loop !453

while.end40:                                      ; preds = %while.cond
  %cmp41 = icmp eq i32 %start.0.ph, %maxstart.0.ph
  %sub.ptr.lhs.cast44 = ptrtoint ptr %pt1.0 to i64
  %7 = xor i64 %sub.ptr.rhs.cast, -1
  %sub47 = add i64 %sub.ptr.lhs.cast44, %7
  %conv48 = trunc i64 %sub47 to i32
  %maxend.3 = select i1 %cmp41, i32 %conv48, i32 %maxend.0.ph
  %add50 = add nsw i32 %maxend.3, 1
  %idxprom51 = sext i32 %add50 to i64
  %arrayidx52 = getelementptr inbounds i8, ptr %s1, i64 %idxprom51
  store i8 0, ptr %arrayidx52, align 1, !tbaa !5
  %arrayidx55 = getelementptr inbounds i8, ptr %s2, i64 %idxprom51
  store i8 0, ptr %arrayidx55, align 1, !tbaa !5
  ret i32 %maxstart.0.ph
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @resetlocalhom(i32 noundef %nseq, ptr nocapture noundef readonly %lh) local_unnamed_addr #26 {
entry:
  %cmp22 = icmp sgt i32 %nseq, 1
  br i1 %cmp22, label %for.body.preheader, label %for.end10

for.body.preheader:                               ; preds = %entry
  %sub = add nsw i32 %nseq, -1
  %0 = zext i32 %nseq to i64
  %wide.trip.count30 = zext i32 %sub to i64
  %wide.trip.count = zext i32 %nseq to i64
  br label %for.body

for.cond.loopexit:                                ; preds = %for.inc6, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond31.not = icmp eq i64 %indvars.iv.next28, %wide.trip.count30
  br i1 %exitcond31.not, label %for.end10, label %for.body, !llvm.loop !455

for.body:                                         ; preds = %for.body.preheader, %for.cond.loopexit
  %indvars.iv27 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next28, %for.cond.loopexit ]
  %indvars.iv = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next, %for.cond.loopexit ]
  %indvars.iv.next28 = add nuw nsw i64 %indvars.iv27, 1
  %cmp220 = icmp ult i64 %indvars.iv.next28, %0
  br i1 %cmp220, label %for.body3.lr.ph, label %for.cond.loopexit

for.body3.lr.ph:                                  ; preds = %for.body
  %arrayidx = getelementptr inbounds ptr, ptr %lh, i64 %indvars.iv27
  %1 = load ptr, ptr %arrayidx, align 8, !tbaa !13
  br label %for.body3

for.body3:                                        ; preds = %for.body3.lr.ph, %for.inc6
  %indvars.iv24 = phi i64 [ %indvars.iv, %for.body3.lr.ph ], [ %indvars.iv.next25, %for.inc6 ]
  %add.ptr = getelementptr inbounds %struct._LocalHom, ptr %1, i64 %indvars.iv24
  br label %for.body5

for.body5:                                        ; preds = %for.body3, %for.body5
  %pt.019 = phi ptr [ %add.ptr, %for.body3 ], [ %2, %for.body5 ]
  %opt = getelementptr inbounds %struct._LocalHom, ptr %pt.019, i64 0, i32 7
  store double 1.000000e+00, ptr %opt, align 8, !tbaa !406
  %next = getelementptr inbounds %struct._LocalHom, ptr %pt.019, i64 0, i32 1
  %2 = load ptr, ptr %next, align 8, !tbaa !411
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %for.inc6, label %for.body5, !llvm.loop !456

for.inc6:                                         ; preds = %for.body5
  %indvars.iv.next25 = add nuw nsw i64 %indvars.iv24, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next25, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.loopexit, label %for.body3, !llvm.loop !457

for.end10:                                        ; preds = %for.cond.loopexit, %entry
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @gapireru(ptr nocapture noundef writeonly %res, ptr nocapture noundef readonly %ori, ptr nocapture noundef readonly %gt) local_unnamed_addr #26 {
entry:
  br label %while.cond

while.cond:                                       ; preds = %if.end, %entry
  %ori.addr.0 = phi ptr [ %ori, %entry ], [ %ori.addr.1, %if.end ]
  %gt.addr.0 = phi ptr [ %gt, %entry ], [ %incdec.ptr, %if.end ]
  %res.addr.0 = phi ptr [ %res, %entry ], [ %res.addr.1, %if.end ]
  %incdec.ptr = getelementptr inbounds i8, ptr %gt.addr.0, i64 1
  %0 = load i8, ptr %gt.addr.0, align 1, !tbaa !5
  switch i8 %0, label %if.else [
    i8 0, label %while.end
    i8 45, label %if.end
  ]

if.else:                                          ; preds = %while.cond
  %incdec.ptr3 = getelementptr inbounds i8, ptr %ori.addr.0, i64 1
  %1 = load i8, ptr %ori.addr.0, align 1, !tbaa !5
  br label %if.end

if.end:                                           ; preds = %while.cond, %if.else
  %storemerge = phi i8 [ %1, %if.else ], [ %0, %while.cond ]
  %ori.addr.1 = phi ptr [ %incdec.ptr3, %if.else ], [ %ori.addr.0, %while.cond ]
  %res.addr.1 = getelementptr inbounds i8, ptr %res.addr.0, i64 1
  store i8 %storemerge, ptr %res.addr.0, align 1, !tbaa !5
  br label %while.cond, !llvm.loop !458

while.end:                                        ; preds = %while.cond
  store i8 0, ptr %res.addr.0, align 1, !tbaa !5
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @getkyokaigap(ptr nocapture noundef writeonly %g, ptr nocapture noundef readonly %s, i32 noundef %pos, i32 noundef %n) local_unnamed_addr #26 {
entry:
  %tobool.not2 = icmp eq i32 %n, 0
  br i1 %tobool.not2, label %while.end, label %while.body.lr.ph

while.body.lr.ph:                                 ; preds = %entry
  %idxprom = sext i32 %pos to i64
  %xtraiter = and i32 %n, 3
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  br i1 %lcmp.mod.not, label %while.body.prol.loopexit, label %while.body.prol

while.body.prol:                                  ; preds = %while.body.lr.ph, %while.body.prol
  %n.addr.05.prol = phi i32 [ %dec.prol, %while.body.prol ], [ %n, %while.body.lr.ph ]
  %g.addr.04.prol = phi ptr [ %incdec.ptr1.prol, %while.body.prol ], [ %g, %while.body.lr.ph ]
  %s.addr.03.prol = phi ptr [ %incdec.ptr.prol, %while.body.prol ], [ %s, %while.body.lr.ph ]
  %prol.iter = phi i32 [ %prol.iter.next, %while.body.prol ], [ 0, %while.body.lr.ph ]
  %dec.prol = add nsw i32 %n.addr.05.prol, -1
  %incdec.ptr.prol = getelementptr inbounds ptr, ptr %s.addr.03.prol, i64 1
  %0 = load ptr, ptr %s.addr.03.prol, align 8, !tbaa !13
  %arrayidx.prol = getelementptr inbounds i8, ptr %0, i64 %idxprom
  %1 = load i8, ptr %arrayidx.prol, align 1, !tbaa !5
  %incdec.ptr1.prol = getelementptr inbounds i8, ptr %g.addr.04.prol, i64 1
  store i8 %1, ptr %g.addr.04.prol, align 1, !tbaa !5
  %prol.iter.next = add i32 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i32 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %while.body.prol.loopexit, label %while.body.prol, !llvm.loop !459

while.body.prol.loopexit:                         ; preds = %while.body.prol, %while.body.lr.ph
  %n.addr.05.unr = phi i32 [ %n, %while.body.lr.ph ], [ %dec.prol, %while.body.prol ]
  %g.addr.04.unr = phi ptr [ %g, %while.body.lr.ph ], [ %incdec.ptr1.prol, %while.body.prol ]
  %s.addr.03.unr = phi ptr [ %s, %while.body.lr.ph ], [ %incdec.ptr.prol, %while.body.prol ]
  %2 = icmp ult i32 %n, 4
  br i1 %2, label %while.end, label %while.body

while.body:                                       ; preds = %while.body.prol.loopexit, %while.body
  %n.addr.05 = phi i32 [ %dec.3, %while.body ], [ %n.addr.05.unr, %while.body.prol.loopexit ]
  %g.addr.04 = phi ptr [ %incdec.ptr1.3, %while.body ], [ %g.addr.04.unr, %while.body.prol.loopexit ]
  %s.addr.03 = phi ptr [ %incdec.ptr.3, %while.body ], [ %s.addr.03.unr, %while.body.prol.loopexit ]
  %incdec.ptr = getelementptr inbounds ptr, ptr %s.addr.03, i64 1
  %3 = load ptr, ptr %s.addr.03, align 8, !tbaa !13
  %arrayidx = getelementptr inbounds i8, ptr %3, i64 %idxprom
  %4 = load i8, ptr %arrayidx, align 1, !tbaa !5
  %incdec.ptr1 = getelementptr inbounds i8, ptr %g.addr.04, i64 1
  store i8 %4, ptr %g.addr.04, align 1, !tbaa !5
  %incdec.ptr.1 = getelementptr inbounds ptr, ptr %s.addr.03, i64 2
  %5 = load ptr, ptr %incdec.ptr, align 8, !tbaa !13
  %arrayidx.1 = getelementptr inbounds i8, ptr %5, i64 %idxprom
  %6 = load i8, ptr %arrayidx.1, align 1, !tbaa !5
  %incdec.ptr1.1 = getelementptr inbounds i8, ptr %g.addr.04, i64 2
  store i8 %6, ptr %incdec.ptr1, align 1, !tbaa !5
  %incdec.ptr.2 = getelementptr inbounds ptr, ptr %s.addr.03, i64 3
  %7 = load ptr, ptr %incdec.ptr.1, align 8, !tbaa !13
  %arrayidx.2 = getelementptr inbounds i8, ptr %7, i64 %idxprom
  %8 = load i8, ptr %arrayidx.2, align 1, !tbaa !5
  %incdec.ptr1.2 = getelementptr inbounds i8, ptr %g.addr.04, i64 3
  store i8 %8, ptr %incdec.ptr1.1, align 1, !tbaa !5
  %dec.3 = add nsw i32 %n.addr.05, -4
  %incdec.ptr.3 = getelementptr inbounds ptr, ptr %s.addr.03, i64 4
  %9 = load ptr, ptr %incdec.ptr.2, align 8, !tbaa !13
  %arrayidx.3 = getelementptr inbounds i8, ptr %9, i64 %idxprom
  %10 = load i8, ptr %arrayidx.3, align 1, !tbaa !5
  %incdec.ptr1.3 = getelementptr inbounds i8, ptr %g.addr.04, i64 4
  store i8 %10, ptr %incdec.ptr1.2, align 1, !tbaa !5
  %tobool.not.3 = icmp eq i32 %dec.3, 0
  br i1 %tobool.not.3, label %while.end, label %while.body, !llvm.loop !460

while.end:                                        ; preds = %while.body.prol.loopexit, %while.body, %entry
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @new_OpeningGapCount(ptr nocapture noundef %ogcp, i32 noundef %clus, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %eff, i32 noundef %len, ptr nocapture noundef readonly %sgappat) local_unnamed_addr #11 {
entry:
  %tobool.not31 = icmp eq i32 %len, 0
  br i1 %tobool.not31, label %for.end, label %for.cond.preheader.thread

for.cond.preheader.thread:                        ; preds = %entry
  %0 = zext i32 %len to i64
  %1 = shl nuw nsw i64 %0, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %ogcp, i8 0, i64 %1, i1 false), !tbaa !17
  %cmp4044 = icmp sgt i32 %clus, 0
  br i1 %cmp4044, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %for.cond.preheader.thread
  %wide.trip.count = zext i32 %clus to i64
  %xtraiter = and i32 %len, 1
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  %dec939.prol = add nsw i32 %len, -1
  %incdec.ptr18.prol = getelementptr inbounds float, ptr %ogcp, i64 1
  %2 = icmp eq i32 %len, 1
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %while.cond8.for.inc_crit_edge
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %while.cond8.for.inc_crit_edge ]
  %arrayidx = getelementptr inbounds double, ptr %eff, i64 %indvars.iv
  %3 = load double, ptr %arrayidx, align 8, !tbaa !20
  %conv = fptrunc double %3 to float
  %arrayidx2 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv
  %4 = load ptr, ptr %arrayidx2, align 8, !tbaa !13
  %arrayidx4 = getelementptr inbounds i8, ptr %sgappat, i64 %indvars.iv
  %5 = load i8, ptr %arrayidx4, align 1, !tbaa !5
  %cmp6 = icmp eq i8 %5, 45
  br i1 %lcmp.mod.not, label %while.body11.prol.loopexit, label %while.body11.prol

while.body11.prol:                                ; preds = %for.body
  %incdec.ptr12.prol = getelementptr inbounds i8, ptr %4, i64 1
  %6 = load i8, ptr %4, align 1, !tbaa !5
  %cmp14.prol = icmp eq i8 %6, 45
  %not.cmp14.prol = xor i1 %cmp14.prol, true
  %tobool17.not.prol = select i1 %not.cmp14.prol, i1 true, i1 %cmp6
  br i1 %tobool17.not.prol, label %while.body11.prol.loopexit, label %if.then.prol

if.then.prol:                                     ; preds = %while.body11.prol
  %7 = load float, ptr %ogcp, align 4, !tbaa !17
  %add.prol = fadd float %7, %conv
  store float %add.prol, ptr %ogcp, align 4, !tbaa !17
  br label %while.body11.prol.loopexit

while.body11.prol.loopexit:                       ; preds = %while.body11.prol, %if.then.prol, %for.body
  %dec939.in.unr = phi i32 [ %len, %for.body ], [ %dec939.prol, %if.then.prol ], [ %dec939.prol, %while.body11.prol ]
  %spt.038.unr = phi ptr [ %4, %for.body ], [ %incdec.ptr12.prol, %if.then.prol ], [ %incdec.ptr12.prol, %while.body11.prol ]
  %fpt.137.unr = phi ptr [ %ogcp, %for.body ], [ %incdec.ptr18.prol, %if.then.prol ], [ %incdec.ptr18.prol, %while.body11.prol ]
  %gc.0.in36.unr = phi i1 [ %cmp6, %for.body ], [ %cmp14.prol, %if.then.prol ], [ %cmp14.prol, %while.body11.prol ]
  br i1 %2, label %while.cond8.for.inc_crit_edge, label %while.body11

while.body11:                                     ; preds = %while.body11.prol.loopexit, %if.end.1
  %dec939.in = phi i32 [ %dec939.1, %if.end.1 ], [ %dec939.in.unr, %while.body11.prol.loopexit ]
  %spt.038 = phi ptr [ %incdec.ptr12.1, %if.end.1 ], [ %spt.038.unr, %while.body11.prol.loopexit ]
  %fpt.137 = phi ptr [ %incdec.ptr18.1, %if.end.1 ], [ %fpt.137.unr, %while.body11.prol.loopexit ]
  %gc.0.in36 = phi i1 [ %cmp14.1, %if.end.1 ], [ %gc.0.in36.unr, %while.body11.prol.loopexit ]
  %incdec.ptr12 = getelementptr inbounds i8, ptr %spt.038, i64 1
  %8 = load i8, ptr %spt.038, align 1, !tbaa !5
  %cmp14 = icmp ne i8 %8, 45
  %tobool17.not = select i1 %cmp14, i1 true, i1 %gc.0.in36
  br i1 %tobool17.not, label %if.end, label %if.then

if.then:                                          ; preds = %while.body11
  %9 = load float, ptr %fpt.137, align 4, !tbaa !17
  %add = fadd float %9, %conv
  store float %add, ptr %fpt.137, align 4, !tbaa !17
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body11
  %dec939.1 = add nsw i32 %dec939.in, -2
  %incdec.ptr12.1 = getelementptr inbounds i8, ptr %spt.038, i64 2
  %10 = load i8, ptr %incdec.ptr12, align 1, !tbaa !5
  %cmp14.1 = icmp eq i8 %10, 45
  %tobool17.not.1.not = and i1 %cmp14, %cmp14.1
  br i1 %tobool17.not.1.not, label %if.then.1, label %if.end.1

if.then.1:                                        ; preds = %if.end
  %incdec.ptr18 = getelementptr inbounds float, ptr %fpt.137, i64 1
  %11 = load float, ptr %incdec.ptr18, align 4, !tbaa !17
  %add.1 = fadd float %11, %conv
  store float %add.1, ptr %incdec.ptr18, align 4, !tbaa !17
  br label %if.end.1

if.end.1:                                         ; preds = %if.then.1, %if.end
  %incdec.ptr18.1 = getelementptr inbounds float, ptr %fpt.137, i64 2
  %tobool10.not.1 = icmp eq i32 %dec939.1, 0
  br i1 %tobool10.not.1, label %while.cond8.for.inc_crit_edge, label %while.body11, !llvm.loop !461

while.cond8.for.inc_crit_edge:                    ; preds = %if.end.1, %while.body11.prol.loopexit
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !462

for.end:                                          ; preds = %while.cond8.for.inc_crit_edge, %entry, %for.cond.preheader.thread
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @new_OpeningGapCount_zure(ptr nocapture noundef %ogcp, i32 noundef %clus, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %eff, i32 noundef %len, ptr nocapture noundef readonly %sgappat, ptr nocapture noundef readonly %egappat) local_unnamed_addr #11 {
entry:
  %add = add nsw i32 %len, 2
  %tobool.not52 = icmp eq i32 %add, 0
  br i1 %tobool.not52, label %for.cond.preheader.thread, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %0 = zext i32 %add to i64
  %1 = shl nuw nsw i64 %0, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %ogcp, i8 0, i64 %1, i1 false), !tbaa !17
  %cmp62 = icmp sgt i32 %clus, 0
  br i1 %cmp62, label %for.body.lr.ph, label %for.end

for.cond.preheader.thread:                        ; preds = %entry
  %cmp6271 = icmp sgt i32 %clus, 0
  br i1 %cmp6271, label %for.body.preheader, label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %tobool10.not56 = icmp eq i32 %len, 0
  br i1 %tobool10.not56, label %for.body.us.preheader, label %for.body.preheader

for.body.preheader:                               ; preds = %for.cond.preheader.thread, %for.body.lr.ph
  %wide.trip.count = zext i32 %clus to i64
  %xtraiter76 = and i32 %len, 1
  %lcmp.mod77.not = icmp eq i32 %xtraiter76, 0
  %dec960.prol = add nsw i32 %len, -1
  %incdec.ptr19.prol = getelementptr inbounds float, ptr %ogcp, i64 1
  %2 = icmp eq i32 %len, 1
  br label %for.body

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %wide.trip.count69 = zext i32 %clus to i64
  %xtraiter = and i64 %wide.trip.count69, 1
  %3 = icmp eq i32 %clus, 1
  br i1 %3, label %for.end.loopexit75.unr-lcssa, label %for.body.us.preheader.new

for.body.us.preheader.new:                        ; preds = %for.body.us.preheader
  %unroll_iter = and i64 %wide.trip.count69, 4294967294
  br label %for.body.us

for.body.us:                                      ; preds = %for.inc.us.1, %for.body.us.preheader.new
  %indvars.iv66 = phi i64 [ 0, %for.body.us.preheader.new ], [ %indvars.iv.next67.1, %for.inc.us.1 ]
  %niter = phi i64 [ 0, %for.body.us.preheader.new ], [ %niter.next.1, %for.inc.us.1 ]
  %arrayidx4.us = getelementptr inbounds i8, ptr %sgappat, i64 %indvars.iv66
  %4 = load i8, ptr %arrayidx4.us, align 1, !tbaa !5
  %cmp6.us = icmp eq i8 %4, 45
  %arrayidx22.us = getelementptr inbounds i8, ptr %egappat, i64 %indvars.iv66
  %5 = load i8, ptr %arrayidx22.us, align 1, !tbaa !5
  %cmp24.us = icmp ne i8 %5, 45
  %tobool30.not.us = select i1 %cmp24.us, i1 true, i1 %cmp6.us
  br i1 %tobool30.not.us, label %for.inc.us, label %if.then31.us

if.then31.us:                                     ; preds = %for.body.us
  %arrayidx.us = getelementptr inbounds double, ptr %eff, i64 %indvars.iv66
  %6 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %conv.us = fptrunc double %6 to float
  %7 = load float, ptr %ogcp, align 4, !tbaa !17
  %add32.us = fadd float %7, %conv.us
  store float %add32.us, ptr %ogcp, align 4, !tbaa !17
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.then31.us, %for.body.us
  %indvars.iv.next67 = or i64 %indvars.iv66, 1
  %arrayidx4.us.1 = getelementptr inbounds i8, ptr %sgappat, i64 %indvars.iv.next67
  %8 = load i8, ptr %arrayidx4.us.1, align 1, !tbaa !5
  %cmp6.us.1 = icmp eq i8 %8, 45
  %arrayidx22.us.1 = getelementptr inbounds i8, ptr %egappat, i64 %indvars.iv.next67
  %9 = load i8, ptr %arrayidx22.us.1, align 1, !tbaa !5
  %cmp24.us.1 = icmp ne i8 %9, 45
  %tobool30.not.us.1 = select i1 %cmp24.us.1, i1 true, i1 %cmp6.us.1
  br i1 %tobool30.not.us.1, label %for.inc.us.1, label %if.then31.us.1

if.then31.us.1:                                   ; preds = %for.inc.us
  %arrayidx.us.1 = getelementptr inbounds double, ptr %eff, i64 %indvars.iv.next67
  %10 = load double, ptr %arrayidx.us.1, align 8, !tbaa !20
  %conv.us.1 = fptrunc double %10 to float
  %11 = load float, ptr %ogcp, align 4, !tbaa !17
  %add32.us.1 = fadd float %11, %conv.us.1
  store float %add32.us.1, ptr %ogcp, align 4, !tbaa !17
  br label %for.inc.us.1

for.inc.us.1:                                     ; preds = %if.then31.us.1, %for.inc.us
  %indvars.iv.next67.1 = add nuw nsw i64 %indvars.iv66, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.end.loopexit75.unr-lcssa, label %for.body.us, !llvm.loop !463

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds double, ptr %eff, i64 %indvars.iv
  %12 = load double, ptr %arrayidx, align 8, !tbaa !20
  %conv = fptrunc double %12 to float
  %arrayidx2 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv
  %13 = load ptr, ptr %arrayidx2, align 8, !tbaa !13
  %arrayidx4 = getelementptr inbounds i8, ptr %sgappat, i64 %indvars.iv
  %14 = load i8, ptr %arrayidx4, align 1, !tbaa !5
  %cmp6 = icmp eq i8 %14, 45
  br i1 %lcmp.mod77.not, label %while.body11.prol.loopexit, label %while.body11.prol

while.body11.prol:                                ; preds = %for.body
  %incdec.ptr12.prol = getelementptr inbounds i8, ptr %13, i64 1
  %15 = load i8, ptr %13, align 1, !tbaa !5
  %cmp14.prol = icmp eq i8 %15, 45
  %not.cmp14.prol = xor i1 %cmp14.prol, true
  %tobool17.not.prol = select i1 %not.cmp14.prol, i1 true, i1 %cmp6
  br i1 %tobool17.not.prol, label %while.body11.prol.loopexit, label %if.then.prol

if.then.prol:                                     ; preds = %while.body11.prol
  %16 = load float, ptr %ogcp, align 4, !tbaa !17
  %add18.prol = fadd float %16, %conv
  store float %add18.prol, ptr %ogcp, align 4, !tbaa !17
  br label %while.body11.prol.loopexit

while.body11.prol.loopexit:                       ; preds = %while.body11.prol, %if.then.prol, %for.body
  %cmp14.lcssa.unr = phi i1 [ undef, %for.body ], [ %cmp14.prol, %if.then.prol ], [ %cmp14.prol, %while.body11.prol ]
  %dec960.in.unr = phi i32 [ %len, %for.body ], [ %dec960.prol, %if.then.prol ], [ %dec960.prol, %while.body11.prol ]
  %spt.059.unr = phi ptr [ %13, %for.body ], [ %incdec.ptr12.prol, %if.then.prol ], [ %incdec.ptr12.prol, %while.body11.prol ]
  %fpt.158.unr = phi ptr [ %ogcp, %for.body ], [ %incdec.ptr19.prol, %if.then.prol ], [ %incdec.ptr19.prol, %while.body11.prol ]
  %gc.0.in57.unr = phi i1 [ %cmp6, %for.body ], [ %cmp14.prol, %if.then.prol ], [ %cmp14.prol, %while.body11.prol ]
  br i1 %2, label %while.cond8.while.end20_crit_edge, label %while.body11

while.body11:                                     ; preds = %while.body11.prol.loopexit, %if.end.1
  %dec960.in = phi i32 [ %dec960.1, %if.end.1 ], [ %dec960.in.unr, %while.body11.prol.loopexit ]
  %spt.059 = phi ptr [ %incdec.ptr12.1, %if.end.1 ], [ %spt.059.unr, %while.body11.prol.loopexit ]
  %fpt.158 = phi ptr [ %incdec.ptr19.1, %if.end.1 ], [ %fpt.158.unr, %while.body11.prol.loopexit ]
  %gc.0.in57 = phi i1 [ %cmp14.1, %if.end.1 ], [ %gc.0.in57.unr, %while.body11.prol.loopexit ]
  %incdec.ptr12 = getelementptr inbounds i8, ptr %spt.059, i64 1
  %17 = load i8, ptr %spt.059, align 1, !tbaa !5
  %cmp14 = icmp ne i8 %17, 45
  %tobool17.not = select i1 %cmp14, i1 true, i1 %gc.0.in57
  br i1 %tobool17.not, label %if.end, label %if.then

if.then:                                          ; preds = %while.body11
  %18 = load float, ptr %fpt.158, align 4, !tbaa !17
  %add18 = fadd float %18, %conv
  store float %add18, ptr %fpt.158, align 4, !tbaa !17
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body11
  %dec960.1 = add nsw i32 %dec960.in, -2
  %incdec.ptr12.1 = getelementptr inbounds i8, ptr %spt.059, i64 2
  %19 = load i8, ptr %incdec.ptr12, align 1, !tbaa !5
  %cmp14.1 = icmp eq i8 %19, 45
  %tobool17.not.1.not = and i1 %cmp14, %cmp14.1
  br i1 %tobool17.not.1.not, label %if.then.1, label %if.end.1

if.then.1:                                        ; preds = %if.end
  %incdec.ptr19 = getelementptr inbounds float, ptr %fpt.158, i64 1
  %20 = load float, ptr %incdec.ptr19, align 4, !tbaa !17
  %add18.1 = fadd float %20, %conv
  store float %add18.1, ptr %incdec.ptr19, align 4, !tbaa !17
  br label %if.end.1

if.end.1:                                         ; preds = %if.then.1, %if.end
  %incdec.ptr19.1 = getelementptr inbounds float, ptr %fpt.158, i64 2
  %tobool10.not.1 = icmp eq i32 %dec960.1, 0
  br i1 %tobool10.not.1, label %while.cond8.while.end20_crit_edge, label %while.body11, !llvm.loop !464

while.cond8.while.end20_crit_edge:                ; preds = %if.end.1, %while.body11.prol.loopexit
  %incdec.ptr19.lcssa = phi ptr [ %incdec.ptr19.prol, %while.body11.prol.loopexit ], [ %incdec.ptr19.1, %if.end.1 ]
  %cmp14.lcssa = phi i1 [ %cmp14.lcssa.unr, %while.body11.prol.loopexit ], [ %cmp14.1, %if.end.1 ]
  %arrayidx22 = getelementptr inbounds i8, ptr %egappat, i64 %indvars.iv
  %21 = load i8, ptr %arrayidx22, align 1, !tbaa !5
  %cmp24 = icmp ne i8 %21, 45
  %tobool30.not = or i1 %cmp24, %cmp14.lcssa
  br i1 %tobool30.not, label %for.inc, label %if.then31

if.then31:                                        ; preds = %while.cond8.while.end20_crit_edge
  %22 = load float, ptr %incdec.ptr19.lcssa, align 4, !tbaa !17
  %add32 = fadd float %22, %conv
  store float %add32, ptr %incdec.ptr19.lcssa, align 4, !tbaa !17
  br label %for.inc

for.inc:                                          ; preds = %while.cond8.while.end20_crit_edge, %if.then31
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !463

for.end.loopexit75.unr-lcssa:                     ; preds = %for.inc.us.1, %for.body.us.preheader
  %indvars.iv66.unr = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next67.1, %for.inc.us.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end, label %for.body.us.epil

for.body.us.epil:                                 ; preds = %for.end.loopexit75.unr-lcssa
  %arrayidx4.us.epil = getelementptr inbounds i8, ptr %sgappat, i64 %indvars.iv66.unr
  %23 = load i8, ptr %arrayidx4.us.epil, align 1, !tbaa !5
  %cmp6.us.epil = icmp eq i8 %23, 45
  %arrayidx22.us.epil = getelementptr inbounds i8, ptr %egappat, i64 %indvars.iv66.unr
  %24 = load i8, ptr %arrayidx22.us.epil, align 1, !tbaa !5
  %cmp24.us.epil = icmp ne i8 %24, 45
  %tobool30.not.us.epil = select i1 %cmp24.us.epil, i1 true, i1 %cmp6.us.epil
  br i1 %tobool30.not.us.epil, label %for.end, label %if.then31.us.epil

if.then31.us.epil:                                ; preds = %for.body.us.epil
  %arrayidx.us.epil = getelementptr inbounds double, ptr %eff, i64 %indvars.iv66.unr
  %25 = load double, ptr %arrayidx.us.epil, align 8, !tbaa !20
  %conv.us.epil = fptrunc double %25 to float
  %26 = load float, ptr %ogcp, align 4, !tbaa !17
  %add32.us.epil = fadd float %26, %conv.us.epil
  store float %add32.us.epil, ptr %ogcp, align 4, !tbaa !17
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit75.unr-lcssa, %if.then31.us.epil, %for.body.us.epil, %for.inc, %for.cond.preheader.thread, %for.cond.preheader
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @new_FinalGapCount_zure(ptr nocapture noundef %fgcp, i32 noundef %clus, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %eff, i32 noundef %len, ptr nocapture noundef readonly %sgappat, ptr nocapture noundef readonly %egappat) local_unnamed_addr #11 {
entry:
  %add = add nsw i32 %len, 2
  %tobool.not51 = icmp eq i32 %add, 0
  br i1 %tobool.not51, label %for.cond.preheader.thread, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %0 = zext i32 %add to i64
  %1 = shl nuw nsw i64 %0, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %fgcp, i8 0, i64 %1, i1 false), !tbaa !17
  %cmp61 = icmp sgt i32 %clus, 0
  br i1 %cmp61, label %for.body.lr.ph, label %for.end

for.cond.preheader.thread:                        ; preds = %entry
  %cmp6170 = icmp sgt i32 %clus, 0
  br i1 %cmp6170, label %for.body.preheader, label %for.end

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %tobool10.not55 = icmp eq i32 %len, 0
  br i1 %tobool10.not55, label %for.body.us.preheader, label %for.body.preheader

for.body.preheader:                               ; preds = %for.cond.preheader.thread, %for.body.lr.ph
  %wide.trip.count = zext i32 %clus to i64
  %xtraiter75 = and i32 %len, 1
  %lcmp.mod76.not = icmp eq i32 %xtraiter75, 0
  %dec959.prol = add nsw i32 %len, -1
  %incdec.ptr19.prol = getelementptr inbounds float, ptr %fgcp, i64 1
  %2 = icmp eq i32 %len, 1
  br label %for.body

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %wide.trip.count68 = zext i32 %clus to i64
  %xtraiter = and i64 %wide.trip.count68, 1
  %3 = icmp eq i32 %clus, 1
  br i1 %3, label %for.end.loopexit74.unr-lcssa, label %for.body.us.preheader.new

for.body.us.preheader.new:                        ; preds = %for.body.us.preheader
  %unroll_iter = and i64 %wide.trip.count68, 4294967294
  br label %for.body.us

for.body.us:                                      ; preds = %for.inc.us.1, %for.body.us.preheader.new
  %indvars.iv65 = phi i64 [ 0, %for.body.us.preheader.new ], [ %indvars.iv.next66.1, %for.inc.us.1 ]
  %niter = phi i64 [ 0, %for.body.us.preheader.new ], [ %niter.next.1, %for.inc.us.1 ]
  %arrayidx4.us = getelementptr inbounds i8, ptr %sgappat, i64 %indvars.iv65
  %4 = load i8, ptr %arrayidx4.us, align 1, !tbaa !5
  %cmp6.us = icmp eq i8 %4, 45
  %arrayidx22.us = getelementptr inbounds i8, ptr %egappat, i64 %indvars.iv65
  %5 = load i8, ptr %arrayidx22.us, align 1, !tbaa !5
  %cmp24.us = icmp ne i8 %5, 45
  %mulbool.us = and i1 %cmp6.us, %cmp24.us
  br i1 %mulbool.us, label %if.then31.us, label %for.inc.us

if.then31.us:                                     ; preds = %for.body.us
  %arrayidx.us = getelementptr inbounds double, ptr %eff, i64 %indvars.iv65
  %6 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %conv.us = fptrunc double %6 to float
  %7 = load float, ptr %fgcp, align 4, !tbaa !17
  %add32.us = fadd float %7, %conv.us
  store float %add32.us, ptr %fgcp, align 4, !tbaa !17
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.then31.us, %for.body.us
  %indvars.iv.next66 = or i64 %indvars.iv65, 1
  %arrayidx4.us.1 = getelementptr inbounds i8, ptr %sgappat, i64 %indvars.iv.next66
  %8 = load i8, ptr %arrayidx4.us.1, align 1, !tbaa !5
  %cmp6.us.1 = icmp eq i8 %8, 45
  %arrayidx22.us.1 = getelementptr inbounds i8, ptr %egappat, i64 %indvars.iv.next66
  %9 = load i8, ptr %arrayidx22.us.1, align 1, !tbaa !5
  %cmp24.us.1 = icmp ne i8 %9, 45
  %mulbool.us.1 = and i1 %cmp6.us.1, %cmp24.us.1
  br i1 %mulbool.us.1, label %if.then31.us.1, label %for.inc.us.1

if.then31.us.1:                                   ; preds = %for.inc.us
  %arrayidx.us.1 = getelementptr inbounds double, ptr %eff, i64 %indvars.iv.next66
  %10 = load double, ptr %arrayidx.us.1, align 8, !tbaa !20
  %conv.us.1 = fptrunc double %10 to float
  %11 = load float, ptr %fgcp, align 4, !tbaa !17
  %add32.us.1 = fadd float %11, %conv.us.1
  store float %add32.us.1, ptr %fgcp, align 4, !tbaa !17
  br label %for.inc.us.1

for.inc.us.1:                                     ; preds = %if.then31.us.1, %for.inc.us
  %indvars.iv.next66.1 = add nuw nsw i64 %indvars.iv65, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.end.loopexit74.unr-lcssa, label %for.body.us, !llvm.loop !465

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds double, ptr %eff, i64 %indvars.iv
  %12 = load double, ptr %arrayidx, align 8, !tbaa !20
  %conv = fptrunc double %12 to float
  %arrayidx2 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv
  %13 = load ptr, ptr %arrayidx2, align 8, !tbaa !13
  %arrayidx4 = getelementptr inbounds i8, ptr %sgappat, i64 %indvars.iv
  %14 = load i8, ptr %arrayidx4, align 1, !tbaa !5
  %cmp6 = icmp eq i8 %14, 45
  br i1 %lcmp.mod76.not, label %while.body11.prol.loopexit, label %while.body11.prol

while.body11.prol:                                ; preds = %for.body
  %incdec.ptr12.prol = getelementptr inbounds i8, ptr %13, i64 1
  %15 = load i8, ptr %13, align 1, !tbaa !5
  %cmp14.prol = icmp eq i8 %15, 45
  %lnot.prol = xor i1 %cmp14.prol, true
  %mulbool50.prol = and i1 %cmp6, %lnot.prol
  br i1 %mulbool50.prol, label %if.then.prol, label %while.body11.prol.loopexit

if.then.prol:                                     ; preds = %while.body11.prol
  %16 = load float, ptr %fgcp, align 4, !tbaa !17
  %add18.prol = fadd float %16, %conv
  store float %add18.prol, ptr %fgcp, align 4, !tbaa !17
  br label %while.body11.prol.loopexit

while.body11.prol.loopexit:                       ; preds = %while.body11.prol, %if.then.prol, %for.body
  %cmp14.lcssa.unr = phi i1 [ undef, %for.body ], [ %cmp14.prol, %if.then.prol ], [ %cmp14.prol, %while.body11.prol ]
  %dec959.in.unr = phi i32 [ %len, %for.body ], [ %dec959.prol, %if.then.prol ], [ %dec959.prol, %while.body11.prol ]
  %spt.058.unr = phi ptr [ %13, %for.body ], [ %incdec.ptr12.prol, %if.then.prol ], [ %incdec.ptr12.prol, %while.body11.prol ]
  %fpt.157.unr = phi ptr [ %fgcp, %for.body ], [ %incdec.ptr19.prol, %if.then.prol ], [ %incdec.ptr19.prol, %while.body11.prol ]
  %gc.0.in56.unr = phi i1 [ %cmp6, %for.body ], [ %cmp14.prol, %if.then.prol ], [ %cmp14.prol, %while.body11.prol ]
  br i1 %2, label %while.cond8.while.end20_crit_edge, label %while.body11

while.body11:                                     ; preds = %while.body11.prol.loopexit, %if.end.1
  %dec959.in = phi i32 [ %dec959.1, %if.end.1 ], [ %dec959.in.unr, %while.body11.prol.loopexit ]
  %spt.058 = phi ptr [ %incdec.ptr12.1, %if.end.1 ], [ %spt.058.unr, %while.body11.prol.loopexit ]
  %fpt.157 = phi ptr [ %incdec.ptr19.1, %if.end.1 ], [ %fpt.157.unr, %while.body11.prol.loopexit ]
  %gc.0.in56 = phi i1 [ %cmp14.1, %if.end.1 ], [ %gc.0.in56.unr, %while.body11.prol.loopexit ]
  %incdec.ptr12 = getelementptr inbounds i8, ptr %spt.058, i64 1
  %17 = load i8, ptr %spt.058, align 1, !tbaa !5
  %cmp14 = icmp ne i8 %17, 45
  %mulbool50 = and i1 %gc.0.in56, %cmp14
  br i1 %mulbool50, label %if.then, label %if.end

if.then:                                          ; preds = %while.body11
  %18 = load float, ptr %fpt.157, align 4, !tbaa !17
  %add18 = fadd float %18, %conv
  store float %add18, ptr %fpt.157, align 4, !tbaa !17
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body11
  %dec959.1 = add nsw i32 %dec959.in, -2
  %incdec.ptr12.1 = getelementptr inbounds i8, ptr %spt.058, i64 2
  %19 = load i8, ptr %incdec.ptr12, align 1, !tbaa !5
  %cmp14.1 = icmp eq i8 %19, 45
  %mulbool50.1.not = or i1 %cmp14, %cmp14.1
  br i1 %mulbool50.1.not, label %if.end.1, label %if.then.1

if.then.1:                                        ; preds = %if.end
  %incdec.ptr19 = getelementptr inbounds float, ptr %fpt.157, i64 1
  %20 = load float, ptr %incdec.ptr19, align 4, !tbaa !17
  %add18.1 = fadd float %20, %conv
  store float %add18.1, ptr %incdec.ptr19, align 4, !tbaa !17
  br label %if.end.1

if.end.1:                                         ; preds = %if.then.1, %if.end
  %incdec.ptr19.1 = getelementptr inbounds float, ptr %fpt.157, i64 2
  %tobool10.not.1 = icmp eq i32 %dec959.1, 0
  br i1 %tobool10.not.1, label %while.cond8.while.end20_crit_edge, label %while.body11, !llvm.loop !466

while.cond8.while.end20_crit_edge:                ; preds = %if.end.1, %while.body11.prol.loopexit
  %incdec.ptr19.lcssa = phi ptr [ %incdec.ptr19.prol, %while.body11.prol.loopexit ], [ %incdec.ptr19.1, %if.end.1 ]
  %cmp14.lcssa = phi i1 [ %cmp14.lcssa.unr, %while.body11.prol.loopexit ], [ %cmp14.1, %if.end.1 ]
  %arrayidx22 = getelementptr inbounds i8, ptr %egappat, i64 %indvars.iv
  %21 = load i8, ptr %arrayidx22, align 1, !tbaa !5
  %cmp24 = icmp ne i8 %21, 45
  %mulbool = and i1 %cmp14.lcssa, %cmp24
  br i1 %mulbool, label %if.then31, label %for.inc

if.then31:                                        ; preds = %while.cond8.while.end20_crit_edge
  %22 = load float, ptr %incdec.ptr19.lcssa, align 4, !tbaa !17
  %add32 = fadd float %22, %conv
  store float %add32, ptr %incdec.ptr19.lcssa, align 4, !tbaa !17
  br label %for.inc

for.inc:                                          ; preds = %while.cond8.while.end20_crit_edge, %if.then31
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !465

for.end.loopexit74.unr-lcssa:                     ; preds = %for.inc.us.1, %for.body.us.preheader
  %indvars.iv65.unr = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next66.1, %for.inc.us.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end, label %for.body.us.epil

for.body.us.epil:                                 ; preds = %for.end.loopexit74.unr-lcssa
  %arrayidx4.us.epil = getelementptr inbounds i8, ptr %sgappat, i64 %indvars.iv65.unr
  %23 = load i8, ptr %arrayidx4.us.epil, align 1, !tbaa !5
  %cmp6.us.epil = icmp eq i8 %23, 45
  %arrayidx22.us.epil = getelementptr inbounds i8, ptr %egappat, i64 %indvars.iv65.unr
  %24 = load i8, ptr %arrayidx22.us.epil, align 1, !tbaa !5
  %cmp24.us.epil = icmp ne i8 %24, 45
  %mulbool.us.epil = and i1 %cmp6.us.epil, %cmp24.us.epil
  br i1 %mulbool.us.epil, label %if.then31.us.epil, label %for.end

if.then31.us.epil:                                ; preds = %for.body.us.epil
  %arrayidx.us.epil = getelementptr inbounds double, ptr %eff, i64 %indvars.iv65.unr
  %25 = load double, ptr %arrayidx.us.epil, align 8, !tbaa !20
  %conv.us.epil = fptrunc double %25 to float
  %26 = load float, ptr %fgcp, align 4, !tbaa !17
  %add32.us.epil = fadd float %26, %conv.us.epil
  store float %add32.us.epil, ptr %fgcp, align 4, !tbaa !17
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit74.unr-lcssa, %if.then31.us.epil, %for.body.us.epil, %for.inc, %for.cond.preheader.thread, %for.cond.preheader
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @new_FinalGapCount(ptr nocapture noundef %fgcp, i32 noundef %clus, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %eff, i32 noundef %len, ptr nocapture noundef readonly %egappat) local_unnamed_addr #11 {
entry:
  %tobool.not48 = icmp eq i32 %len, 0
  br i1 %tobool.not48, label %for.cond.preheader, label %for.cond.preheader.thread

for.cond.preheader:                               ; preds = %entry
  %cmp58 = icmp sgt i32 %clus, 0
  br i1 %cmp58, label %for.body.us.preheader, label %for.end

for.cond.preheader.thread:                        ; preds = %entry
  %0 = zext i32 %len to i64
  %1 = shl nuw nsw i64 %0, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %fgcp, i8 0, i64 %1, i1 false), !tbaa !17
  %cmp5867 = icmp sgt i32 %clus, 0
  br i1 %cmp5867, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %for.cond.preheader.thread
  %wide.trip.count = zext i32 %clus to i64
  %xtraiter = and i32 %len, 1
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  %dec756.prol = add nsw i32 %len, -1
  %incdec.ptr16.prol = getelementptr inbounds float, ptr %fgcp, i64 1
  %2 = icmp eq i32 %len, 1
  br label %for.body

for.body.us.preheader:                            ; preds = %for.cond.preheader
  %wide.trip.count65 = zext i32 %clus to i64
  br label %for.body.us

for.body.us:                                      ; preds = %for.body.us.preheader, %for.inc.us
  %indvars.iv62 = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next63, %for.inc.us ]
  %arrayidx2.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv62
  %3 = load ptr, ptr %arrayidx2.us, align 8, !tbaa !13
  %4 = load i8, ptr %3, align 1, !tbaa !5
  %cmp4.us = icmp eq i8 %4, 45
  %arrayidx19.us = getelementptr inbounds i8, ptr %egappat, i64 %indvars.iv62
  %5 = load i8, ptr %arrayidx19.us, align 1, !tbaa !5
  %cmp21.us = icmp ne i8 %5, 45
  %mulbool.us = and i1 %cmp4.us, %cmp21.us
  br i1 %mulbool.us, label %if.then28.us, label %for.inc.us

if.then28.us:                                     ; preds = %for.body.us
  %arrayidx.us = getelementptr inbounds double, ptr %eff, i64 %indvars.iv62
  %6 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %conv.us = fptrunc double %6 to float
  %7 = load float, ptr %fgcp, align 4, !tbaa !17
  %add29.us = fadd float %7, %conv.us
  store float %add29.us, ptr %fgcp, align 4, !tbaa !17
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.then28.us, %for.body.us
  %indvars.iv.next63 = add nuw nsw i64 %indvars.iv62, 1
  %exitcond66.not = icmp eq i64 %indvars.iv.next63, %wide.trip.count65
  br i1 %exitcond66.not, label %for.end, label %for.body.us, !llvm.loop !467

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds double, ptr %eff, i64 %indvars.iv
  %8 = load double, ptr %arrayidx, align 8, !tbaa !20
  %conv = fptrunc double %8 to float
  %arrayidx2 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv
  %9 = load ptr, ptr %arrayidx2, align 8, !tbaa !13
  %10 = load i8, ptr %9, align 1, !tbaa !5
  %cmp4 = icmp eq i8 %10, 45
  br i1 %lcmp.mod.not, label %while.body9.prol.loopexit, label %while.body9.prol

while.body9.prol:                                 ; preds = %for.body
  %incdec.ptr10.prol = getelementptr inbounds i8, ptr %9, i64 1
  %11 = load i8, ptr %incdec.ptr10.prol, align 1, !tbaa !5
  %cmp12.prol = icmp eq i8 %11, 45
  %lnot.prol = xor i1 %cmp12.prol, true
  %mulbool47.prol = and i1 %cmp4, %lnot.prol
  br i1 %mulbool47.prol, label %if.then.prol, label %while.body9.prol.loopexit

if.then.prol:                                     ; preds = %while.body9.prol
  %12 = load float, ptr %fgcp, align 4, !tbaa !17
  %add.prol = fadd float %12, %conv
  store float %add.prol, ptr %fgcp, align 4, !tbaa !17
  br label %while.body9.prol.loopexit

while.body9.prol.loopexit:                        ; preds = %while.body9.prol, %if.then.prol, %for.body
  %cmp12.lcssa.unr = phi i1 [ undef, %for.body ], [ %cmp12.prol, %if.then.prol ], [ %cmp12.prol, %while.body9.prol ]
  %dec756.in.unr = phi i32 [ %len, %for.body ], [ %dec756.prol, %if.then.prol ], [ %dec756.prol, %while.body9.prol ]
  %spt.055.unr = phi ptr [ %9, %for.body ], [ %incdec.ptr10.prol, %if.then.prol ], [ %incdec.ptr10.prol, %while.body9.prol ]
  %fpt.154.unr = phi ptr [ %fgcp, %for.body ], [ %incdec.ptr16.prol, %if.then.prol ], [ %incdec.ptr16.prol, %while.body9.prol ]
  %gc.0.in53.unr = phi i1 [ %cmp4, %for.body ], [ %cmp12.prol, %if.then.prol ], [ %cmp12.prol, %while.body9.prol ]
  br i1 %2, label %while.cond6.while.end17_crit_edge, label %while.body9

while.body9:                                      ; preds = %while.body9.prol.loopexit, %if.end.1
  %dec756.in = phi i32 [ %dec756.1, %if.end.1 ], [ %dec756.in.unr, %while.body9.prol.loopexit ]
  %spt.055 = phi ptr [ %incdec.ptr10.1, %if.end.1 ], [ %spt.055.unr, %while.body9.prol.loopexit ]
  %fpt.154 = phi ptr [ %incdec.ptr16.1, %if.end.1 ], [ %fpt.154.unr, %while.body9.prol.loopexit ]
  %gc.0.in53 = phi i1 [ %cmp12.1, %if.end.1 ], [ %gc.0.in53.unr, %while.body9.prol.loopexit ]
  %incdec.ptr10 = getelementptr inbounds i8, ptr %spt.055, i64 1
  %13 = load i8, ptr %incdec.ptr10, align 1, !tbaa !5
  %cmp12 = icmp ne i8 %13, 45
  %mulbool47 = and i1 %gc.0.in53, %cmp12
  br i1 %mulbool47, label %if.then, label %if.end

if.then:                                          ; preds = %while.body9
  %14 = load float, ptr %fpt.154, align 4, !tbaa !17
  %add = fadd float %14, %conv
  store float %add, ptr %fpt.154, align 4, !tbaa !17
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body9
  %dec756.1 = add nsw i32 %dec756.in, -2
  %incdec.ptr10.1 = getelementptr inbounds i8, ptr %spt.055, i64 2
  %15 = load i8, ptr %incdec.ptr10.1, align 1, !tbaa !5
  %cmp12.1 = icmp eq i8 %15, 45
  %mulbool47.1.not = or i1 %cmp12, %cmp12.1
  br i1 %mulbool47.1.not, label %if.end.1, label %if.then.1

if.then.1:                                        ; preds = %if.end
  %incdec.ptr16 = getelementptr inbounds float, ptr %fpt.154, i64 1
  %16 = load float, ptr %incdec.ptr16, align 4, !tbaa !17
  %add.1 = fadd float %16, %conv
  store float %add.1, ptr %incdec.ptr16, align 4, !tbaa !17
  br label %if.end.1

if.end.1:                                         ; preds = %if.then.1, %if.end
  %incdec.ptr16.1 = getelementptr inbounds float, ptr %fpt.154, i64 2
  %tobool8.not.1 = icmp eq i32 %dec756.1, 0
  br i1 %tobool8.not.1, label %while.cond6.while.end17_crit_edge, label %while.body9, !llvm.loop !468

while.cond6.while.end17_crit_edge:                ; preds = %if.end.1, %while.body9.prol.loopexit
  %incdec.ptr16.lcssa = phi ptr [ %incdec.ptr16.prol, %while.body9.prol.loopexit ], [ %incdec.ptr16.1, %if.end.1 ]
  %cmp12.lcssa = phi i1 [ %cmp12.lcssa.unr, %while.body9.prol.loopexit ], [ %cmp12.1, %if.end.1 ]
  %arrayidx19 = getelementptr inbounds i8, ptr %egappat, i64 %indvars.iv
  %17 = load i8, ptr %arrayidx19, align 1, !tbaa !5
  %cmp21 = icmp ne i8 %17, 45
  %mulbool = and i1 %cmp12.lcssa, %cmp21
  br i1 %mulbool, label %if.then28, label %for.inc

if.then28:                                        ; preds = %while.cond6.while.end17_crit_edge
  %18 = load float, ptr %incdec.ptr16.lcssa, align 4, !tbaa !17
  %add29 = fadd float %18, %conv
  store float %add29, ptr %incdec.ptr16.lcssa, align 4, !tbaa !17
  br label %for.inc

for.inc:                                          ; preds = %while.cond6.while.end17_crit_edge, %if.then28
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !467

for.end:                                          ; preds = %for.inc, %for.inc.us, %for.cond.preheader.thread, %for.cond.preheader
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @st_OpeningGapCount(ptr nocapture noundef %ogcp, i32 noundef %clus, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %eff, i32 noundef %len) local_unnamed_addr #11 {
entry:
  %tobool.not29 = icmp eq i32 %len, 0
  br i1 %tobool.not29, label %for.end, label %for.cond.preheader.thread

for.cond.preheader.thread:                        ; preds = %entry
  %0 = zext i32 %len to i64
  %1 = shl nuw nsw i64 %0, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %ogcp, i8 0, i64 %1, i1 false), !tbaa !17
  %cmp3842 = icmp sgt i32 %clus, 0
  br i1 %cmp3842, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %for.cond.preheader.thread
  %wide.trip.count = zext i32 %clus to i64
  %xtraiter = and i32 %len, 1
  %2 = icmp eq i32 %len, 1
  %unroll_iter = and i32 %len, -2
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %while.cond3.for.inc_crit_edge
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %while.cond3.for.inc_crit_edge ]
  %arrayidx = getelementptr inbounds double, ptr %eff, i64 %indvars.iv
  %3 = load double, ptr %arrayidx, align 8, !tbaa !20
  %conv = fptrunc double %3 to float
  %arrayidx2 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv
  %4 = load ptr, ptr %arrayidx2, align 8, !tbaa !13
  br i1 %2, label %while.cond3.for.inc_crit_edge.unr-lcssa, label %while.body6

while.body6:                                      ; preds = %for.body, %if.end.1
  %spt.036 = phi ptr [ %incdec.ptr7.1, %if.end.1 ], [ %4, %for.body ]
  %fpt.135 = phi ptr [ %incdec.ptr13.1, %if.end.1 ], [ %ogcp, %for.body ]
  %gc.034 = phi i32 [ %conv10.1, %if.end.1 ], [ 0, %for.body ]
  %niter = phi i32 [ %niter.next.1, %if.end.1 ], [ 0, %for.body ]
  %incdec.ptr7 = getelementptr inbounds i8, ptr %spt.036, i64 1
  %5 = load i8, ptr %spt.036, align 1, !tbaa !5
  %cmp9 = icmp eq i8 %5, 45
  %tobool12.not28 = icmp eq i32 %gc.034, 0
  %tobool12.not.not = and i1 %tobool12.not28, %cmp9
  br i1 %tobool12.not.not, label %if.then, label %if.end

if.then:                                          ; preds = %while.body6
  %6 = load float, ptr %fpt.135, align 4, !tbaa !17
  %add = fadd float %6, %conv
  store float %add, ptr %fpt.135, align 4, !tbaa !17
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body6
  %incdec.ptr7.1 = getelementptr inbounds i8, ptr %spt.036, i64 2
  %7 = load i8, ptr %incdec.ptr7, align 1, !tbaa !5
  %cmp9.1 = icmp eq i8 %7, 45
  %conv10.1 = zext i1 %cmp9.1 to i32
  %tobool12.not28.1 = xor i1 %cmp9, true
  %tobool12.not.not.1 = and i1 %cmp9.1, %tobool12.not28.1
  br i1 %tobool12.not.not.1, label %if.then.1, label %if.end.1

if.then.1:                                        ; preds = %if.end
  %incdec.ptr13 = getelementptr inbounds float, ptr %fpt.135, i64 1
  %8 = load float, ptr %incdec.ptr13, align 4, !tbaa !17
  %add.1 = fadd float %8, %conv
  store float %add.1, ptr %incdec.ptr13, align 4, !tbaa !17
  br label %if.end.1

if.end.1:                                         ; preds = %if.then.1, %if.end
  %incdec.ptr13.1 = getelementptr inbounds float, ptr %fpt.135, i64 2
  %niter.next.1 = add i32 %niter, 2
  %niter.ncmp.1 = icmp eq i32 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %while.cond3.for.inc_crit_edge.unr-lcssa, label %while.body6, !llvm.loop !469

while.cond3.for.inc_crit_edge.unr-lcssa:          ; preds = %if.end.1, %for.body
  %spt.036.unr = phi ptr [ %4, %for.body ], [ %incdec.ptr7.1, %if.end.1 ]
  %fpt.135.unr = phi ptr [ %ogcp, %for.body ], [ %incdec.ptr13.1, %if.end.1 ]
  %gc.034.unr = phi i32 [ 0, %for.body ], [ %conv10.1, %if.end.1 ]
  br i1 %lcmp.mod.not, label %while.cond3.for.inc_crit_edge, label %while.body6.epil

while.body6.epil:                                 ; preds = %while.cond3.for.inc_crit_edge.unr-lcssa
  %9 = load i8, ptr %spt.036.unr, align 1, !tbaa !5
  %cmp9.epil = icmp eq i8 %9, 45
  %tobool12.not28.epil = icmp eq i32 %gc.034.unr, 0
  %tobool12.not.not.epil = and i1 %tobool12.not28.epil, %cmp9.epil
  br i1 %tobool12.not.not.epil, label %if.then.epil, label %while.cond3.for.inc_crit_edge

if.then.epil:                                     ; preds = %while.body6.epil
  %10 = load float, ptr %fpt.135.unr, align 4, !tbaa !17
  %add.epil = fadd float %10, %conv
  store float %add.epil, ptr %fpt.135.unr, align 4, !tbaa !17
  br label %while.cond3.for.inc_crit_edge

while.cond3.for.inc_crit_edge:                    ; preds = %while.body6.epil, %if.then.epil, %while.cond3.for.inc_crit_edge.unr-lcssa
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !470

for.end:                                          ; preds = %while.cond3.for.inc_crit_edge, %entry, %for.cond.preheader.thread
  %idxprom15 = sext i32 %len to i64
  %arrayidx16 = getelementptr inbounds float, ptr %ogcp, i64 %idxprom15
  store float 0.000000e+00, ptr %arrayidx16, align 4, !tbaa !17
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @st_FinalGapCount_zure(ptr nocapture noundef %fgcp, i32 noundef %clus, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %eff, i32 noundef %len) local_unnamed_addr #11 {
entry:
  %add = add nsw i32 %len, 1
  %tobool.not42 = icmp eq i32 %add, 0
  br i1 %tobool.not42, label %for.cond.preheader.thread, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  %0 = zext i32 %add to i64
  %1 = shl nuw nsw i64 %0, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %fgcp, i8 0, i64 %1, i1 false), !tbaa !17
  %cmp53 = icmp sgt i32 %clus, 0
  br i1 %cmp53, label %for.body.lr.ph, label %for.end

for.cond.preheader.thread:                        ; preds = %entry
  %cmp5362 = icmp sgt i32 %clus, 0
  br i1 %cmp5362, label %for.body.lr.ph.thread, label %for.end

for.body.lr.ph.thread:                            ; preds = %for.cond.preheader.thread
  %fpt.14563 = getelementptr inbounds float, ptr %fgcp, i64 1
  br label %for.body.preheader

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %fpt.145 = getelementptr inbounds float, ptr %fgcp, i64 1
  %tobool8.not47 = icmp eq i32 %len, 0
  br i1 %tobool8.not47, label %for.body.us.preheader, label %for.body.preheader

for.body.preheader:                               ; preds = %for.body.lr.ph.thread, %for.body.lr.ph
  %fpt.14565 = phi ptr [ %fpt.14563, %for.body.lr.ph.thread ], [ %fpt.145, %for.body.lr.ph ]
  %wide.trip.count = zext i32 %clus to i64
  %xtraiter69 = and i32 %len, 1
  %lcmp.mod70.not = icmp eq i32 %xtraiter69, 0
  %dec751.prol = add nsw i32 %len, -1
  %fpt.1.prol = getelementptr inbounds float, ptr %fgcp, i64 2
  %2 = icmp eq i32 %len, 1
  br label %for.body

for.body.us.preheader:                            ; preds = %for.body.lr.ph
  %wide.trip.count60 = zext i32 %clus to i64
  %xtraiter = and i64 %wide.trip.count60, 1
  %3 = icmp eq i32 %clus, 1
  br i1 %3, label %for.end.loopexit68.unr-lcssa, label %for.body.us.preheader.new

for.body.us.preheader.new:                        ; preds = %for.body.us.preheader
  %unroll_iter = and i64 %wide.trip.count60, 4294967294
  br label %for.body.us

for.body.us:                                      ; preds = %for.inc.us.1, %for.body.us.preheader.new
  %indvars.iv57 = phi i64 [ 0, %for.body.us.preheader.new ], [ %indvars.iv.next58.1, %for.inc.us.1 ]
  %niter = phi i64 [ 0, %for.body.us.preheader.new ], [ %niter.next.1, %for.inc.us.1 ]
  %arrayidx2.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv57
  %4 = load ptr, ptr %arrayidx2.us, align 8, !tbaa !13
  %5 = load i8, ptr %4, align 1, !tbaa !5
  %cmp4.us = icmp eq i8 %5, 45
  br i1 %cmp4.us, label %if.then24.us, label %for.inc.us

if.then24.us:                                     ; preds = %for.body.us
  %arrayidx.us = getelementptr inbounds double, ptr %eff, i64 %indvars.iv57
  %6 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %conv.us = fptrunc double %6 to float
  %7 = load float, ptr %fpt.145, align 4, !tbaa !17
  %add25.us = fadd float %7, %conv.us
  store float %add25.us, ptr %fpt.145, align 4, !tbaa !17
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.then24.us, %for.body.us
  %indvars.iv.next58 = or i64 %indvars.iv57, 1
  %arrayidx2.us.1 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv.next58
  %8 = load ptr, ptr %arrayidx2.us.1, align 8, !tbaa !13
  %9 = load i8, ptr %8, align 1, !tbaa !5
  %cmp4.us.1 = icmp eq i8 %9, 45
  br i1 %cmp4.us.1, label %if.then24.us.1, label %for.inc.us.1

if.then24.us.1:                                   ; preds = %for.inc.us
  %arrayidx.us.1 = getelementptr inbounds double, ptr %eff, i64 %indvars.iv.next58
  %10 = load double, ptr %arrayidx.us.1, align 8, !tbaa !20
  %conv.us.1 = fptrunc double %10 to float
  %11 = load float, ptr %fpt.145, align 4, !tbaa !17
  %add25.us.1 = fadd float %11, %conv.us.1
  store float %add25.us.1, ptr %fpt.145, align 4, !tbaa !17
  br label %for.inc.us.1

for.inc.us.1:                                     ; preds = %if.then24.us.1, %for.inc.us
  %indvars.iv.next58.1 = add nuw nsw i64 %indvars.iv57, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.end.loopexit68.unr-lcssa, label %for.body.us, !llvm.loop !471

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds double, ptr %eff, i64 %indvars.iv
  %12 = load double, ptr %arrayidx, align 8, !tbaa !20
  %conv = fptrunc double %12 to float
  %arrayidx2 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv
  %13 = load ptr, ptr %arrayidx2, align 8, !tbaa !13
  %14 = load i8, ptr %13, align 1, !tbaa !5
  %cmp4 = icmp eq i8 %14, 45
  br i1 %lcmp.mod70.not, label %while.body9.prol.loopexit, label %while.body9.prol

while.body9.prol:                                 ; preds = %for.body
  %incdec.ptr10.prol = getelementptr inbounds i8, ptr %13, i64 1
  %15 = load i8, ptr %incdec.ptr10.prol, align 1, !tbaa !5
  %cmp12.prol = icmp eq i8 %15, 45
  %lnot.prol = xor i1 %cmp12.prol, true
  %mulbool.prol = and i1 %cmp4, %lnot.prol
  br i1 %mulbool.prol, label %if.then.prol, label %while.body9.prol.loopexit

if.then.prol:                                     ; preds = %while.body9.prol
  %16 = load float, ptr %fpt.14565, align 4, !tbaa !17
  %add16.prol = fadd float %16, %conv
  store float %add16.prol, ptr %fpt.14565, align 4, !tbaa !17
  br label %while.body9.prol.loopexit

while.body9.prol.loopexit:                        ; preds = %while.body9.prol, %if.then.prol, %for.body
  %cmp12.lcssa.unr = phi i1 [ undef, %for.body ], [ %cmp12.prol, %if.then.prol ], [ %cmp12.prol, %while.body9.prol ]
  %dec751.in.unr = phi i32 [ %len, %for.body ], [ %dec751.prol, %if.then.prol ], [ %dec751.prol, %while.body9.prol ]
  %fpt.150.unr = phi ptr [ %fpt.14565, %for.body ], [ %fpt.1.prol, %if.then.prol ], [ %fpt.1.prol, %while.body9.prol ]
  %spt.049.unr = phi ptr [ %13, %for.body ], [ %incdec.ptr10.prol, %if.then.prol ], [ %incdec.ptr10.prol, %while.body9.prol ]
  %gc.0.in48.unr = phi i1 [ %cmp4, %for.body ], [ %cmp12.prol, %if.then.prol ], [ %cmp12.prol, %while.body9.prol ]
  br i1 %2, label %while.cond6.while.end18_crit_edge, label %while.body9

while.body9:                                      ; preds = %while.body9.prol.loopexit, %if.end.1
  %dec751.in = phi i32 [ %dec751.1, %if.end.1 ], [ %dec751.in.unr, %while.body9.prol.loopexit ]
  %fpt.150 = phi ptr [ %fpt.1.1, %if.end.1 ], [ %fpt.150.unr, %while.body9.prol.loopexit ]
  %spt.049 = phi ptr [ %incdec.ptr10.1, %if.end.1 ], [ %spt.049.unr, %while.body9.prol.loopexit ]
  %gc.0.in48 = phi i1 [ %cmp12.1, %if.end.1 ], [ %gc.0.in48.unr, %while.body9.prol.loopexit ]
  %incdec.ptr10 = getelementptr inbounds i8, ptr %spt.049, i64 1
  %17 = load i8, ptr %incdec.ptr10, align 1, !tbaa !5
  %cmp12 = icmp ne i8 %17, 45
  %mulbool = and i1 %gc.0.in48, %cmp12
  br i1 %mulbool, label %if.then, label %if.end

if.then:                                          ; preds = %while.body9
  %18 = load float, ptr %fpt.150, align 4, !tbaa !17
  %add16 = fadd float %18, %conv
  store float %add16, ptr %fpt.150, align 4, !tbaa !17
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body9
  %dec751.1 = add nsw i32 %dec751.in, -2
  %incdec.ptr10.1 = getelementptr inbounds i8, ptr %spt.049, i64 2
  %19 = load i8, ptr %incdec.ptr10.1, align 1, !tbaa !5
  %cmp12.1 = icmp eq i8 %19, 45
  %mulbool.1.not = or i1 %cmp12, %cmp12.1
  br i1 %mulbool.1.not, label %if.end.1, label %if.then.1

if.then.1:                                        ; preds = %if.end
  %fpt.1 = getelementptr inbounds float, ptr %fpt.150, i64 1
  %20 = load float, ptr %fpt.1, align 4, !tbaa !17
  %add16.1 = fadd float %20, %conv
  store float %add16.1, ptr %fpt.1, align 4, !tbaa !17
  br label %if.end.1

if.end.1:                                         ; preds = %if.then.1, %if.end
  %fpt.1.1 = getelementptr inbounds float, ptr %fpt.150, i64 2
  %tobool8.not.1 = icmp eq i32 %dec751.1, 0
  br i1 %tobool8.not.1, label %while.cond6.while.end18_crit_edge, label %while.body9, !llvm.loop !472

while.cond6.while.end18_crit_edge:                ; preds = %if.end.1, %while.body9.prol.loopexit
  %fpt.1.lcssa = phi ptr [ %fpt.1.prol, %while.body9.prol.loopexit ], [ %fpt.1.1, %if.end.1 ]
  %cmp12.lcssa = phi i1 [ %cmp12.lcssa.unr, %while.body9.prol.loopexit ], [ %cmp12.1, %if.end.1 ]
  br i1 %cmp12.lcssa, label %if.then24, label %for.inc

if.then24:                                        ; preds = %while.cond6.while.end18_crit_edge
  %21 = load float, ptr %fpt.1.lcssa, align 4, !tbaa !17
  %add25 = fadd float %21, %conv
  store float %add25, ptr %fpt.1.lcssa, align 4, !tbaa !17
  br label %for.inc

for.inc:                                          ; preds = %while.cond6.while.end18_crit_edge, %if.then24
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !471

for.end.loopexit68.unr-lcssa:                     ; preds = %for.inc.us.1, %for.body.us.preheader
  %indvars.iv57.unr = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next58.1, %for.inc.us.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end, label %for.body.us.epil

for.body.us.epil:                                 ; preds = %for.end.loopexit68.unr-lcssa
  %arrayidx2.us.epil = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv57.unr
  %22 = load ptr, ptr %arrayidx2.us.epil, align 8, !tbaa !13
  %23 = load i8, ptr %22, align 1, !tbaa !5
  %cmp4.us.epil = icmp eq i8 %23, 45
  br i1 %cmp4.us.epil, label %if.then24.us.epil, label %for.end

if.then24.us.epil:                                ; preds = %for.body.us.epil
  %arrayidx.us.epil = getelementptr inbounds double, ptr %eff, i64 %indvars.iv57.unr
  %24 = load double, ptr %arrayidx.us.epil, align 8, !tbaa !20
  %conv.us.epil = fptrunc double %24 to float
  %25 = load float, ptr %fpt.145, align 4, !tbaa !17
  %add25.us.epil = fadd float %25, %conv.us.epil
  store float %add25.us.epil, ptr %fpt.145, align 4, !tbaa !17
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit68.unr-lcssa, %if.then24.us.epil, %for.body.us.epil, %for.inc, %for.cond.preheader.thread, %for.cond.preheader
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @st_FinalGapCount(ptr nocapture noundef %fgcp, i32 noundef %clus, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %eff, i32 noundef %len) local_unnamed_addr #11 {
entry:
  %tobool.not41 = icmp eq i32 %len, 0
  br i1 %tobool.not41, label %for.cond.preheader, label %for.cond.preheader.thread

for.cond.preheader:                               ; preds = %entry
  %cmp51 = icmp sgt i32 %clus, 0
  br i1 %cmp51, label %for.body.us.preheader, label %for.end

for.cond.preheader.thread:                        ; preds = %entry
  %0 = zext i32 %len to i64
  %1 = shl nuw nsw i64 %0, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %fgcp, i8 0, i64 %1, i1 false), !tbaa !17
  %cmp5160 = icmp sgt i32 %clus, 0
  br i1 %cmp5160, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %for.cond.preheader.thread
  %wide.trip.count = zext i32 %clus to i64
  %xtraiter = and i32 %len, 1
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  %dec749.prol = add nsw i32 %len, -1
  %incdec.ptr16.prol = getelementptr inbounds float, ptr %fgcp, i64 1
  %2 = icmp eq i32 %len, 1
  br label %for.body

for.body.us.preheader:                            ; preds = %for.cond.preheader
  %wide.trip.count58 = zext i32 %clus to i64
  %xtraiter64 = and i64 %wide.trip.count58, 1
  %3 = icmp eq i32 %clus, 1
  br i1 %3, label %for.end.loopexit.unr-lcssa, label %for.body.us.preheader.new

for.body.us.preheader.new:                        ; preds = %for.body.us.preheader
  %unroll_iter = and i64 %wide.trip.count58, 4294967294
  br label %for.body.us

for.body.us:                                      ; preds = %for.inc.us.1, %for.body.us.preheader.new
  %indvars.iv55 = phi i64 [ 0, %for.body.us.preheader.new ], [ %indvars.iv.next56.1, %for.inc.us.1 ]
  %niter = phi i64 [ 0, %for.body.us.preheader.new ], [ %niter.next.1, %for.inc.us.1 ]
  %arrayidx2.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv55
  %4 = load ptr, ptr %arrayidx2.us, align 8, !tbaa !13
  %5 = load i8, ptr %4, align 1, !tbaa !5
  %cmp4.us = icmp eq i8 %5, 45
  br i1 %cmp4.us, label %if.then23.us, label %for.inc.us

if.then23.us:                                     ; preds = %for.body.us
  %arrayidx.us = getelementptr inbounds double, ptr %eff, i64 %indvars.iv55
  %6 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %conv.us = fptrunc double %6 to float
  %7 = load float, ptr %fgcp, align 4, !tbaa !17
  %add24.us = fadd float %7, %conv.us
  store float %add24.us, ptr %fgcp, align 4, !tbaa !17
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.then23.us, %for.body.us
  %indvars.iv.next56 = or i64 %indvars.iv55, 1
  %arrayidx2.us.1 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv.next56
  %8 = load ptr, ptr %arrayidx2.us.1, align 8, !tbaa !13
  %9 = load i8, ptr %8, align 1, !tbaa !5
  %cmp4.us.1 = icmp eq i8 %9, 45
  br i1 %cmp4.us.1, label %if.then23.us.1, label %for.inc.us.1

if.then23.us.1:                                   ; preds = %for.inc.us
  %arrayidx.us.1 = getelementptr inbounds double, ptr %eff, i64 %indvars.iv.next56
  %10 = load double, ptr %arrayidx.us.1, align 8, !tbaa !20
  %conv.us.1 = fptrunc double %10 to float
  %11 = load float, ptr %fgcp, align 4, !tbaa !17
  %add24.us.1 = fadd float %11, %conv.us.1
  store float %add24.us.1, ptr %fgcp, align 4, !tbaa !17
  br label %for.inc.us.1

for.inc.us.1:                                     ; preds = %if.then23.us.1, %for.inc.us
  %indvars.iv.next56.1 = add nuw nsw i64 %indvars.iv55, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.end.loopexit.unr-lcssa, label %for.body.us, !llvm.loop !473

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  %arrayidx = getelementptr inbounds double, ptr %eff, i64 %indvars.iv
  %12 = load double, ptr %arrayidx, align 8, !tbaa !20
  %conv = fptrunc double %12 to float
  %arrayidx2 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv
  %13 = load ptr, ptr %arrayidx2, align 8, !tbaa !13
  %14 = load i8, ptr %13, align 1, !tbaa !5
  %cmp4 = icmp eq i8 %14, 45
  br i1 %lcmp.mod.not, label %while.body9.prol.loopexit, label %while.body9.prol

while.body9.prol:                                 ; preds = %for.body
  %incdec.ptr10.prol = getelementptr inbounds i8, ptr %13, i64 1
  %15 = load i8, ptr %incdec.ptr10.prol, align 1, !tbaa !5
  %cmp12.prol = icmp eq i8 %15, 45
  %lnot.prol = xor i1 %cmp12.prol, true
  %mulbool.prol = and i1 %cmp4, %lnot.prol
  br i1 %mulbool.prol, label %if.then.prol, label %while.body9.prol.loopexit

if.then.prol:                                     ; preds = %while.body9.prol
  %16 = load float, ptr %fgcp, align 4, !tbaa !17
  %add.prol = fadd float %16, %conv
  store float %add.prol, ptr %fgcp, align 4, !tbaa !17
  br label %while.body9.prol.loopexit

while.body9.prol.loopexit:                        ; preds = %while.body9.prol, %if.then.prol, %for.body
  %cmp12.lcssa.unr = phi i1 [ undef, %for.body ], [ %cmp12.prol, %if.then.prol ], [ %cmp12.prol, %while.body9.prol ]
  %dec749.in.unr = phi i32 [ %len, %for.body ], [ %dec749.prol, %if.then.prol ], [ %dec749.prol, %while.body9.prol ]
  %spt.048.unr = phi ptr [ %13, %for.body ], [ %incdec.ptr10.prol, %if.then.prol ], [ %incdec.ptr10.prol, %while.body9.prol ]
  %fpt.147.unr = phi ptr [ %fgcp, %for.body ], [ %incdec.ptr16.prol, %if.then.prol ], [ %incdec.ptr16.prol, %while.body9.prol ]
  %gc.0.in46.unr = phi i1 [ %cmp4, %for.body ], [ %cmp12.prol, %if.then.prol ], [ %cmp12.prol, %while.body9.prol ]
  br i1 %2, label %while.cond6.while.end17_crit_edge, label %while.body9

while.body9:                                      ; preds = %while.body9.prol.loopexit, %if.end.1
  %dec749.in = phi i32 [ %dec749.1, %if.end.1 ], [ %dec749.in.unr, %while.body9.prol.loopexit ]
  %spt.048 = phi ptr [ %incdec.ptr10.1, %if.end.1 ], [ %spt.048.unr, %while.body9.prol.loopexit ]
  %fpt.147 = phi ptr [ %incdec.ptr16.1, %if.end.1 ], [ %fpt.147.unr, %while.body9.prol.loopexit ]
  %gc.0.in46 = phi i1 [ %cmp12.1, %if.end.1 ], [ %gc.0.in46.unr, %while.body9.prol.loopexit ]
  %incdec.ptr10 = getelementptr inbounds i8, ptr %spt.048, i64 1
  %17 = load i8, ptr %incdec.ptr10, align 1, !tbaa !5
  %cmp12 = icmp ne i8 %17, 45
  %mulbool = and i1 %gc.0.in46, %cmp12
  br i1 %mulbool, label %if.then, label %if.end

if.then:                                          ; preds = %while.body9
  %18 = load float, ptr %fpt.147, align 4, !tbaa !17
  %add = fadd float %18, %conv
  store float %add, ptr %fpt.147, align 4, !tbaa !17
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body9
  %dec749.1 = add nsw i32 %dec749.in, -2
  %incdec.ptr10.1 = getelementptr inbounds i8, ptr %spt.048, i64 2
  %19 = load i8, ptr %incdec.ptr10.1, align 1, !tbaa !5
  %cmp12.1 = icmp eq i8 %19, 45
  %mulbool.1.not = or i1 %cmp12, %cmp12.1
  br i1 %mulbool.1.not, label %if.end.1, label %if.then.1

if.then.1:                                        ; preds = %if.end
  %incdec.ptr16 = getelementptr inbounds float, ptr %fpt.147, i64 1
  %20 = load float, ptr %incdec.ptr16, align 4, !tbaa !17
  %add.1 = fadd float %20, %conv
  store float %add.1, ptr %incdec.ptr16, align 4, !tbaa !17
  br label %if.end.1

if.end.1:                                         ; preds = %if.then.1, %if.end
  %incdec.ptr16.1 = getelementptr inbounds float, ptr %fpt.147, i64 2
  %tobool8.not.1 = icmp eq i32 %dec749.1, 0
  br i1 %tobool8.not.1, label %while.cond6.while.end17_crit_edge, label %while.body9, !llvm.loop !474

while.cond6.while.end17_crit_edge:                ; preds = %if.end.1, %while.body9.prol.loopexit
  %incdec.ptr16.lcssa = phi ptr [ %incdec.ptr16.prol, %while.body9.prol.loopexit ], [ %incdec.ptr16.1, %if.end.1 ]
  %cmp12.lcssa = phi i1 [ %cmp12.lcssa.unr, %while.body9.prol.loopexit ], [ %cmp12.1, %if.end.1 ]
  br i1 %cmp12.lcssa, label %if.then23, label %for.inc

if.then23:                                        ; preds = %while.cond6.while.end17_crit_edge
  %21 = load float, ptr %incdec.ptr16.lcssa, align 4, !tbaa !17
  %add24 = fadd float %21, %conv
  store float %add24, ptr %incdec.ptr16.lcssa, align 4, !tbaa !17
  br label %for.inc

for.inc:                                          ; preds = %while.cond6.while.end17_crit_edge, %if.then23
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body, !llvm.loop !473

for.end.loopexit.unr-lcssa:                       ; preds = %for.inc.us.1, %for.body.us.preheader
  %indvars.iv55.unr = phi i64 [ 0, %for.body.us.preheader ], [ %indvars.iv.next56.1, %for.inc.us.1 ]
  %lcmp.mod65.not = icmp eq i64 %xtraiter64, 0
  br i1 %lcmp.mod65.not, label %for.end, label %for.body.us.epil

for.body.us.epil:                                 ; preds = %for.end.loopexit.unr-lcssa
  %arrayidx2.us.epil = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv55.unr
  %22 = load ptr, ptr %arrayidx2.us.epil, align 8, !tbaa !13
  %23 = load i8, ptr %22, align 1, !tbaa !5
  %cmp4.us.epil = icmp eq i8 %23, 45
  br i1 %cmp4.us.epil, label %if.then23.us.epil, label %for.end

if.then23.us.epil:                                ; preds = %for.body.us.epil
  %arrayidx.us.epil = getelementptr inbounds double, ptr %eff, i64 %indvars.iv55.unr
  %24 = load double, ptr %arrayidx.us.epil, align 8, !tbaa !20
  %conv.us.epil = fptrunc double %24 to float
  %25 = load float, ptr %fgcp, align 4, !tbaa !17
  %add24.us.epil = fadd float %25, %conv.us.epil
  store float %add24.us.epil, ptr %fgcp, align 4, !tbaa !17
  br label %for.end

for.end:                                          ; preds = %for.inc, %for.end.loopexit.unr-lcssa, %if.then23.us.epil, %for.body.us.epil, %for.cond.preheader.thread, %for.cond.preheader
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @getGapPattern(ptr nocapture noundef %fgcp, i32 noundef %clus, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %eff, i32 noundef %len, ptr nocapture noundef readnone %xxx) local_unnamed_addr #2 {
entry:
  %add = add nsw i32 %len, 1
  %tobool.not46 = icmp eq i32 %add, 0
  br i1 %tobool.not46, label %for.end29, label %for.cond.preheader.thread

for.cond.preheader.thread:                        ; preds = %entry
  %0 = zext i32 %add to i64
  %1 = shl nuw nsw i64 %0, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %fgcp, i8 0, i64 %1, i1 false), !tbaa !17
  %cmp5465 = icmp sgt i32 %clus, 0
  br i1 %cmp5465, label %for.body.preheader, label %for.cond20.preheader

for.body.preheader:                               ; preds = %for.cond.preheader.thread
  %wide.trip.count = zext i32 %clus to i64
  %xtraiter = and i32 %add, 1
  %lcmp.mod.not = icmp eq i32 %xtraiter, 0
  %incdec.ptr18.prol = getelementptr inbounds float, ptr %fgcp, i64 1
  %dec8.prol = add nsw i32 %len, -1
  %2 = icmp eq i32 %len, 0
  br label %for.body

for.cond20.preheader:                             ; preds = %while.cond7.for.inc_crit_edge, %for.cond.preheader.thread
  %cmp2156 = icmp sgt i32 %len, 0
  br i1 %cmp2156, label %for.body23.preheader, label %for.end29

for.body23.preheader:                             ; preds = %for.cond20.preheader
  %wide.trip.count63 = zext i32 %len to i64
  br label %for.body23

for.body:                                         ; preds = %for.body.preheader, %while.cond7.for.inc_crit_edge
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %while.cond7.for.inc_crit_edge ]
  %arrayidx = getelementptr inbounds double, ptr %eff, i64 %indvars.iv
  %3 = load double, ptr %arrayidx, align 8, !tbaa !20
  %conv = fptrunc double %3 to float
  %arrayidx2 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv
  %4 = load ptr, ptr %arrayidx2, align 8, !tbaa !13
  %5 = load i8, ptr %4, align 1, !tbaa !5
  %cmp4 = icmp eq i8 %5, 45
  br i1 %lcmp.mod.not, label %while.body10.prol.loopexit, label %while.body10.prol

while.body10.prol:                                ; preds = %for.body
  %incdec.ptr11.prol = getelementptr inbounds i8, ptr %4, i64 1
  %6 = load i8, ptr %incdec.ptr11.prol, align 1, !tbaa !5
  %cmp13.prol = icmp eq i8 %6, 45
  %lnot.prol = xor i1 %cmp13.prol, true
  %mulbool.prol = and i1 %cmp4, %lnot.prol
  br i1 %mulbool.prol, label %if.then.prol, label %while.body10.prol.loopexit

if.then.prol:                                     ; preds = %while.body10.prol
  %7 = load float, ptr %fgcp, align 4, !tbaa !17
  %add17.prol = fadd float %7, %conv
  store float %add17.prol, ptr %fgcp, align 4, !tbaa !17
  br label %while.body10.prol.loopexit

while.body10.prol.loopexit:                       ; preds = %while.body10.prol, %if.then.prol, %for.body
  %dec853.unr = phi i32 [ %len, %for.body ], [ %dec8.prol, %if.then.prol ], [ %dec8.prol, %while.body10.prol ]
  %spt.052.unr = phi ptr [ %4, %for.body ], [ %incdec.ptr11.prol, %if.then.prol ], [ %incdec.ptr11.prol, %while.body10.prol ]
  %fpt.151.unr = phi ptr [ %fgcp, %for.body ], [ %incdec.ptr18.prol, %if.then.prol ], [ %incdec.ptr18.prol, %while.body10.prol ]
  %gc.0.in50.unr = phi i1 [ %cmp4, %for.body ], [ %cmp13.prol, %if.then.prol ], [ %cmp13.prol, %while.body10.prol ]
  br i1 %2, label %while.cond7.for.inc_crit_edge, label %while.body10

while.body10:                                     ; preds = %while.body10.prol.loopexit, %if.end.1
  %dec853 = phi i32 [ %dec8.1, %if.end.1 ], [ %dec853.unr, %while.body10.prol.loopexit ]
  %spt.052 = phi ptr [ %incdec.ptr11.1, %if.end.1 ], [ %spt.052.unr, %while.body10.prol.loopexit ]
  %fpt.151 = phi ptr [ %incdec.ptr18.1, %if.end.1 ], [ %fpt.151.unr, %while.body10.prol.loopexit ]
  %gc.0.in50 = phi i1 [ %cmp13.1, %if.end.1 ], [ %gc.0.in50.unr, %while.body10.prol.loopexit ]
  %incdec.ptr11 = getelementptr inbounds i8, ptr %spt.052, i64 1
  %8 = load i8, ptr %incdec.ptr11, align 1, !tbaa !5
  %cmp13 = icmp ne i8 %8, 45
  %mulbool = and i1 %gc.0.in50, %cmp13
  br i1 %mulbool, label %if.then, label %if.end

if.then:                                          ; preds = %while.body10
  %9 = load float, ptr %fpt.151, align 4, !tbaa !17
  %add17 = fadd float %9, %conv
  store float %add17, ptr %fpt.151, align 4, !tbaa !17
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body10
  %incdec.ptr11.1 = getelementptr inbounds i8, ptr %spt.052, i64 2
  %10 = load i8, ptr %incdec.ptr11.1, align 1, !tbaa !5
  %cmp13.1 = icmp eq i8 %10, 45
  %mulbool.1.not = or i1 %cmp13, %cmp13.1
  br i1 %mulbool.1.not, label %if.end.1, label %if.then.1

if.then.1:                                        ; preds = %if.end
  %incdec.ptr18 = getelementptr inbounds float, ptr %fpt.151, i64 1
  %11 = load float, ptr %incdec.ptr18, align 4, !tbaa !17
  %add17.1 = fadd float %11, %conv
  store float %add17.1, ptr %incdec.ptr18, align 4, !tbaa !17
  br label %if.end.1

if.end.1:                                         ; preds = %if.then.1, %if.end
  %incdec.ptr18.1 = getelementptr inbounds float, ptr %fpt.151, i64 2
  %dec8.1 = add nsw i32 %dec853, -2
  %tobool9.not.1 = icmp eq i32 %dec853, 1
  br i1 %tobool9.not.1, label %while.cond7.for.inc_crit_edge, label %while.body10, !llvm.loop !475

while.cond7.for.inc_crit_edge:                    ; preds = %if.end.1, %while.body10.prol.loopexit
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond20.preheader, label %for.body, !llvm.loop !476

for.body23:                                       ; preds = %for.body23.preheader, %for.body23
  %indvars.iv60 = phi i64 [ 0, %for.body23.preheader ], [ %indvars.iv.next61, %for.body23 ]
  %12 = load ptr, ptr @stderr, align 8, !tbaa !13
  %arrayidx25 = getelementptr inbounds float, ptr %fgcp, i64 %indvars.iv60
  %13 = load float, ptr %arrayidx25, align 4, !tbaa !17
  %conv26 = fpext float %13 to double
  %14 = trunc i64 %indvars.iv60 to i32
  %call = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %12, ptr noundef nonnull @.str.33, i32 noundef %14, double noundef %conv26) #32
  %indvars.iv.next61 = add nuw nsw i64 %indvars.iv60, 1
  %exitcond64.not = icmp eq i64 %indvars.iv.next61, %wide.trip.count63
  br i1 %exitcond64.not, label %for.end29, label %for.body23, !llvm.loop !477

for.end29:                                        ; preds = %for.body23, %entry, %for.cond20.preheader
  ret void
}

; Function Attrs: nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @getdigapfreq_st(ptr nocapture noundef %freq, i32 noundef %clus, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %eff, i32 noundef %len) local_unnamed_addr #9 {
entry:
  %cmp.not47 = icmp slt i32 %len, 0
  br i1 %cmp.not47, label %for.cond1.preheader, label %for.body.preheader

for.body.preheader:                               ; preds = %entry
  %0 = add nuw i32 %len, 1
  %1 = zext i32 %0 to i64
  %2 = shl nuw nsw i64 %1, 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %freq, i8 0, i64 %2, i1 false), !tbaa !17
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.body.preheader, %entry
  %cmp251 = icmp sgt i32 %clus, 0
  %cmp749 = icmp sgt i32 %len, 1
  %or.cond = and i1 %cmp251, %cmp749
  br i1 %or.cond, label %for.body3.us.preheader, label %for.end32

for.body3.us.preheader:                           ; preds = %for.cond1.preheader
  %wide.trip.count60 = zext i32 %clus to i64
  %wide.trip.count = zext i32 %len to i64
  %3 = add nsw i64 %wide.trip.count, -1
  %xtraiter = and i64 %3, 1
  %4 = icmp eq i32 %len, 2
  %unroll_iter = and i64 %3, -2
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.body3.us

for.body3.us:                                     ; preds = %for.body3.us.preheader, %for.cond6.for.inc30_crit_edge.us
  %indvars.iv57 = phi i64 [ 0, %for.body3.us.preheader ], [ %indvars.iv.next58, %for.cond6.for.inc30_crit_edge.us ]
  %arrayidx5.us = getelementptr inbounds double, ptr %eff, i64 %indvars.iv57
  %5 = load double, ptr %arrayidx5.us, align 8, !tbaa !20
  %conv.us = fptrunc double %5 to float
  %arrayidx11.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv57
  %6 = load ptr, ptr %arrayidx11.us, align 8, !tbaa !13
  br i1 %4, label %for.cond6.for.inc30_crit_edge.us.unr-lcssa, label %for.body9.us

for.body9.us:                                     ; preds = %for.body3.us, %for.inc27.us.1
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %for.inc27.us.1 ], [ 1, %for.body3.us ]
  %niter = phi i64 [ %niter.next.1, %for.inc27.us.1 ], [ 0, %for.body3.us ]
  %arrayidx13.us = getelementptr inbounds i8, ptr %6, i64 %indvars.iv
  %7 = load i8, ptr %arrayidx13.us, align 1, !tbaa !5
  %cmp15.us = icmp eq i8 %7, 45
  br i1 %cmp15.us, label %land.lhs.true.us, label %for.inc27.us

land.lhs.true.us:                                 ; preds = %for.body9.us
  %8 = add nsw i64 %indvars.iv, -1
  %arrayidx20.us = getelementptr inbounds i8, ptr %6, i64 %8
  %9 = load i8, ptr %arrayidx20.us, align 1, !tbaa !5
  %cmp22.us = icmp eq i8 %9, 45
  br i1 %cmp22.us, label %if.then.us, label %for.inc27.us

if.then.us:                                       ; preds = %land.lhs.true.us
  %arrayidx25.us = getelementptr inbounds float, ptr %freq, i64 %indvars.iv
  %10 = load float, ptr %arrayidx25.us, align 4, !tbaa !17
  %add26.us = fadd float %10, %conv.us
  store float %add26.us, ptr %arrayidx25.us, align 4, !tbaa !17
  br label %for.inc27.us

for.inc27.us:                                     ; preds = %if.then.us, %land.lhs.true.us, %for.body9.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %arrayidx13.us.1 = getelementptr inbounds i8, ptr %6, i64 %indvars.iv.next
  %11 = load i8, ptr %arrayidx13.us.1, align 1, !tbaa !5
  %cmp15.us.1 = icmp eq i8 %11, 45
  br i1 %cmp15.us.1, label %land.lhs.true.us.1, label %for.inc27.us.1

land.lhs.true.us.1:                               ; preds = %for.inc27.us
  %arrayidx20.us.1 = getelementptr inbounds i8, ptr %6, i64 %indvars.iv
  %12 = load i8, ptr %arrayidx20.us.1, align 1, !tbaa !5
  %cmp22.us.1 = icmp eq i8 %12, 45
  br i1 %cmp22.us.1, label %if.then.us.1, label %for.inc27.us.1

if.then.us.1:                                     ; preds = %land.lhs.true.us.1
  %arrayidx25.us.1 = getelementptr inbounds float, ptr %freq, i64 %indvars.iv.next
  %13 = load float, ptr %arrayidx25.us.1, align 4, !tbaa !17
  %add26.us.1 = fadd float %13, %conv.us
  store float %add26.us.1, ptr %arrayidx25.us.1, align 4, !tbaa !17
  br label %for.inc27.us.1

for.inc27.us.1:                                   ; preds = %if.then.us.1, %land.lhs.true.us.1, %for.inc27.us
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond6.for.inc30_crit_edge.us.unr-lcssa, label %for.body9.us, !llvm.loop !478

for.cond6.for.inc30_crit_edge.us.unr-lcssa:       ; preds = %for.inc27.us.1, %for.body3.us
  %indvars.iv.unr = phi i64 [ 1, %for.body3.us ], [ %indvars.iv.next.1, %for.inc27.us.1 ]
  br i1 %lcmp.mod.not, label %for.cond6.for.inc30_crit_edge.us, label %for.body9.us.epil

for.body9.us.epil:                                ; preds = %for.cond6.for.inc30_crit_edge.us.unr-lcssa
  %arrayidx13.us.epil = getelementptr inbounds i8, ptr %6, i64 %indvars.iv.unr
  %14 = load i8, ptr %arrayidx13.us.epil, align 1, !tbaa !5
  %cmp15.us.epil = icmp eq i8 %14, 45
  br i1 %cmp15.us.epil, label %land.lhs.true.us.epil, label %for.cond6.for.inc30_crit_edge.us

land.lhs.true.us.epil:                            ; preds = %for.body9.us.epil
  %15 = add nsw i64 %indvars.iv.unr, -1
  %arrayidx20.us.epil = getelementptr inbounds i8, ptr %6, i64 %15
  %16 = load i8, ptr %arrayidx20.us.epil, align 1, !tbaa !5
  %cmp22.us.epil = icmp eq i8 %16, 45
  br i1 %cmp22.us.epil, label %if.then.us.epil, label %for.cond6.for.inc30_crit_edge.us

if.then.us.epil:                                  ; preds = %land.lhs.true.us.epil
  %arrayidx25.us.epil = getelementptr inbounds float, ptr %freq, i64 %indvars.iv.unr
  %17 = load float, ptr %arrayidx25.us.epil, align 4, !tbaa !17
  %add26.us.epil = fadd float %17, %conv.us
  store float %add26.us.epil, ptr %arrayidx25.us.epil, align 4, !tbaa !17
  br label %for.cond6.for.inc30_crit_edge.us

for.cond6.for.inc30_crit_edge.us:                 ; preds = %for.body9.us.epil, %land.lhs.true.us.epil, %if.then.us.epil, %for.cond6.for.inc30_crit_edge.us.unr-lcssa
  %indvars.iv.next58 = add nuw nsw i64 %indvars.iv57, 1
  %exitcond61.not = icmp eq i64 %indvars.iv.next58, %wide.trip.count60
  br i1 %exitcond61.not, label %for.end32, label %for.body3.us, !llvm.loop !479

for.end32:                                        ; preds = %for.cond6.for.inc30_crit_edge.us, %for.cond1.preheader
  ret void
}

; Function Attrs: nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @getdiaminofreq_x(ptr nocapture noundef %freq, i32 noundef %clus, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %eff, i32 noundef %len) local_unnamed_addr #9 {
entry:
  %cmp80 = icmp sgt i32 %len, -2
  br i1 %cmp80, label %for.body.preheader, label %for.cond1.preheader

for.body.preheader:                               ; preds = %entry
  %0 = add i32 %len, 1
  %1 = zext i32 %0 to i64
  %2 = shl nuw nsw i64 %1, 2
  %3 = add nuw nsw i64 %2, 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %freq, i8 0, i64 %3, i1 false), !tbaa !17
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.body.preheader, %entry
  %cmp284 = icmp sgt i32 %clus, 0
  br i1 %cmp284, label %for.body3.lr.ph, label %for.end55

for.body3.lr.ph:                                  ; preds = %for.cond1.preheader
  %cmp1582 = icmp sgt i32 %len, 1
  %sub42 = add nsw i32 %len, -1
  %idxprom43 = sext i32 %sub42 to i64
  %idxprom49 = sext i32 %len to i64
  %arrayidx50 = getelementptr inbounds float, ptr %freq, i64 %idxprom49
  %wide.trip.count98 = zext i32 %clus to i64
  br i1 %cmp1582, label %for.body3.us.preheader, label %for.body3

for.body3.us.preheader:                           ; preds = %for.body3.lr.ph
  %wide.trip.count93 = zext i32 %len to i64
  %4 = add nsw i64 %wide.trip.count93, -1
  %xtraiter = and i64 %4, 1
  %5 = icmp eq i32 %len, 2
  %unroll_iter = and i64 %4, -2
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.body3.us

for.body3.us:                                     ; preds = %for.body3.us.preheader, %for.inc53.us
  %indvars.iv95 = phi i64 [ 0, %for.body3.us.preheader ], [ %indvars.iv.next96, %for.inc53.us ]
  %arrayidx5.us = getelementptr inbounds double, ptr %eff, i64 %indvars.iv95
  %6 = load double, ptr %arrayidx5.us, align 8, !tbaa !20
  %conv.us = fptrunc double %6 to float
  %arrayidx7.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv95
  %7 = load ptr, ptr %arrayidx7.us, align 8, !tbaa !13
  %8 = load i8, ptr %7, align 1, !tbaa !5
  %cmp10.not.us = icmp eq i8 %8, 45
  br i1 %cmp10.not.us, label %for.body17.us.preheader, label %if.then.us

for.body17.us.preheader:                          ; preds = %if.then.us, %for.body3.us
  br i1 %5, label %for.cond14.for.end39_crit_edge.us.unr-lcssa, label %for.body17.us

if.then.us:                                       ; preds = %for.body3.us
  %9 = load float, ptr %freq, align 4, !tbaa !17
  %add13.us = fadd float %9, %conv.us
  store float %add13.us, ptr %freq, align 4, !tbaa !17
  br label %for.body17.us.preheader

if.then48.us:                                     ; preds = %for.cond14.for.end39_crit_edge.us
  %10 = load float, ptr %arrayidx50, align 4, !tbaa !17
  %add51.us = fadd float %10, %conv.us
  store float %add51.us, ptr %arrayidx50, align 4, !tbaa !17
  br label %for.inc53.us

for.inc53.us:                                     ; preds = %if.then48.us, %for.cond14.for.end39_crit_edge.us
  %indvars.iv.next96 = add nuw nsw i64 %indvars.iv95, 1
  %exitcond99.not = icmp eq i64 %indvars.iv.next96, %wide.trip.count98
  br i1 %exitcond99.not, label %for.end55, label %for.body3.us, !llvm.loop !480

for.body17.us:                                    ; preds = %for.body17.us.preheader, %for.inc37.us.1
  %indvars.iv89 = phi i64 [ %indvars.iv.next90.1, %for.inc37.us.1 ], [ 1, %for.body17.us.preheader ]
  %niter = phi i64 [ %niter.next.1, %for.inc37.us.1 ], [ 0, %for.body17.us.preheader ]
  %arrayidx21.us = getelementptr inbounds i8, ptr %7, i64 %indvars.iv89
  %11 = load i8, ptr %arrayidx21.us, align 1, !tbaa !5
  %cmp23.not.us = icmp eq i8 %11, 45
  br i1 %cmp23.not.us, label %for.inc37.us, label %land.lhs.true.us

land.lhs.true.us:                                 ; preds = %for.body17.us
  %12 = add nsw i64 %indvars.iv89, -1
  %arrayidx28.us = getelementptr inbounds i8, ptr %7, i64 %12
  %13 = load i8, ptr %arrayidx28.us, align 1, !tbaa !5
  %cmp30.not.us = icmp eq i8 %13, 45
  br i1 %cmp30.not.us, label %for.inc37.us, label %if.then32.us

if.then32.us:                                     ; preds = %land.lhs.true.us
  %arrayidx34.us = getelementptr inbounds float, ptr %freq, i64 %indvars.iv89
  %14 = load float, ptr %arrayidx34.us, align 4, !tbaa !17
  %add35.us = fadd float %14, %conv.us
  store float %add35.us, ptr %arrayidx34.us, align 4, !tbaa !17
  br label %for.inc37.us

for.inc37.us:                                     ; preds = %if.then32.us, %land.lhs.true.us, %for.body17.us
  %indvars.iv.next90 = add nuw nsw i64 %indvars.iv89, 1
  %arrayidx21.us.1 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next90
  %15 = load i8, ptr %arrayidx21.us.1, align 1, !tbaa !5
  %cmp23.not.us.1 = icmp eq i8 %15, 45
  br i1 %cmp23.not.us.1, label %for.inc37.us.1, label %land.lhs.true.us.1

land.lhs.true.us.1:                               ; preds = %for.inc37.us
  %arrayidx28.us.1 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv89
  %16 = load i8, ptr %arrayidx28.us.1, align 1, !tbaa !5
  %cmp30.not.us.1 = icmp eq i8 %16, 45
  br i1 %cmp30.not.us.1, label %for.inc37.us.1, label %if.then32.us.1

if.then32.us.1:                                   ; preds = %land.lhs.true.us.1
  %arrayidx34.us.1 = getelementptr inbounds float, ptr %freq, i64 %indvars.iv.next90
  %17 = load float, ptr %arrayidx34.us.1, align 4, !tbaa !17
  %add35.us.1 = fadd float %17, %conv.us
  store float %add35.us.1, ptr %arrayidx34.us.1, align 4, !tbaa !17
  br label %for.inc37.us.1

for.inc37.us.1:                                   ; preds = %if.then32.us.1, %land.lhs.true.us.1, %for.inc37.us
  %indvars.iv.next90.1 = add nuw nsw i64 %indvars.iv89, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond14.for.end39_crit_edge.us.unr-lcssa, label %for.body17.us, !llvm.loop !481

for.cond14.for.end39_crit_edge.us.unr-lcssa:      ; preds = %for.inc37.us.1, %for.body17.us.preheader
  %indvars.iv89.unr = phi i64 [ 1, %for.body17.us.preheader ], [ %indvars.iv.next90.1, %for.inc37.us.1 ]
  br i1 %lcmp.mod.not, label %for.cond14.for.end39_crit_edge.us, label %for.body17.us.epil

for.body17.us.epil:                               ; preds = %for.cond14.for.end39_crit_edge.us.unr-lcssa
  %arrayidx21.us.epil = getelementptr inbounds i8, ptr %7, i64 %indvars.iv89.unr
  %18 = load i8, ptr %arrayidx21.us.epil, align 1, !tbaa !5
  %cmp23.not.us.epil = icmp eq i8 %18, 45
  br i1 %cmp23.not.us.epil, label %for.cond14.for.end39_crit_edge.us, label %land.lhs.true.us.epil

land.lhs.true.us.epil:                            ; preds = %for.body17.us.epil
  %19 = add nsw i64 %indvars.iv89.unr, -1
  %arrayidx28.us.epil = getelementptr inbounds i8, ptr %7, i64 %19
  %20 = load i8, ptr %arrayidx28.us.epil, align 1, !tbaa !5
  %cmp30.not.us.epil = icmp eq i8 %20, 45
  br i1 %cmp30.not.us.epil, label %for.cond14.for.end39_crit_edge.us, label %if.then32.us.epil

if.then32.us.epil:                                ; preds = %land.lhs.true.us.epil
  %arrayidx34.us.epil = getelementptr inbounds float, ptr %freq, i64 %indvars.iv89.unr
  %21 = load float, ptr %arrayidx34.us.epil, align 4, !tbaa !17
  %add35.us.epil = fadd float %21, %conv.us
  store float %add35.us.epil, ptr %arrayidx34.us.epil, align 4, !tbaa !17
  br label %for.cond14.for.end39_crit_edge.us

for.cond14.for.end39_crit_edge.us:                ; preds = %for.body17.us.epil, %land.lhs.true.us.epil, %if.then32.us.epil, %for.cond14.for.end39_crit_edge.us.unr-lcssa
  %arrayidx44.us = getelementptr inbounds i8, ptr %7, i64 %idxprom43
  %22 = load i8, ptr %arrayidx44.us, align 1, !tbaa !5
  %cmp46.not.us = icmp eq i8 %22, 45
  br i1 %cmp46.not.us, label %for.inc53.us, label %if.then48.us

for.body3:                                        ; preds = %for.body3.lr.ph, %for.inc53
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc53 ], [ 0, %for.body3.lr.ph ]
  %arrayidx5 = getelementptr inbounds double, ptr %eff, i64 %indvars.iv
  %23 = load double, ptr %arrayidx5, align 8, !tbaa !20
  %conv = fptrunc double %23 to float
  %arrayidx7 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv
  %24 = load ptr, ptr %arrayidx7, align 8, !tbaa !13
  %25 = load i8, ptr %24, align 1, !tbaa !5
  %cmp10.not = icmp eq i8 %25, 45
  br i1 %cmp10.not, label %if.end, label %if.then

if.then:                                          ; preds = %for.body3
  %26 = load float, ptr %freq, align 4, !tbaa !17
  %add13 = fadd float %26, %conv
  store float %add13, ptr %freq, align 4, !tbaa !17
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body3
  %arrayidx44 = getelementptr inbounds i8, ptr %24, i64 %idxprom43
  %27 = load i8, ptr %arrayidx44, align 1, !tbaa !5
  %cmp46.not = icmp eq i8 %27, 45
  br i1 %cmp46.not, label %for.inc53, label %if.then48

if.then48:                                        ; preds = %if.end
  %28 = load float, ptr %arrayidx50, align 4, !tbaa !17
  %add51 = fadd float %28, %conv
  store float %add51, ptr %arrayidx50, align 4, !tbaa !17
  br label %for.inc53

for.inc53:                                        ; preds = %if.end, %if.then48
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count98
  br i1 %exitcond.not, label %for.end55, label %for.body3, !llvm.loop !480

for.end55:                                        ; preds = %for.inc53, %for.inc53.us, %for.cond1.preheader
  ret void
}

; Function Attrs: nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @getdiaminofreq_st(ptr nocapture noundef %freq, i32 noundef %clus, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %eff, i32 noundef %len) local_unnamed_addr #9 {
entry:
  %cmp.not67 = icmp slt i32 %len, 0
  br i1 %cmp.not67, label %for.cond1.preheader, label %for.body.preheader

for.body.preheader:                               ; preds = %entry
  %0 = add nuw i32 %len, 1
  %1 = zext i32 %0 to i64
  %2 = shl nuw nsw i64 %1, 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %freq, i8 0, i64 %2, i1 false), !tbaa !17
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.body.preheader, %entry
  %cmp271 = icmp sgt i32 %clus, 0
  br i1 %cmp271, label %for.body3.lr.ph, label %for.end45

for.body3.lr.ph:                                  ; preds = %for.cond1.preheader
  %cmp1569 = icmp sgt i32 %len, 1
  %idxprom40 = sext i32 %len to i64
  %arrayidx41 = getelementptr inbounds float, ptr %freq, i64 %idxprom40
  %wide.trip.count85 = zext i32 %clus to i64
  br i1 %cmp1569, label %for.body3.us.preheader, label %for.body3

for.body3.us.preheader:                           ; preds = %for.body3.lr.ph
  %wide.trip.count80 = zext i32 %len to i64
  %3 = add nsw i64 %wide.trip.count80, -1
  %xtraiter = and i64 %3, 1
  %4 = icmp eq i32 %len, 2
  %unroll_iter = and i64 %3, -2
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.body3.us

for.body3.us:                                     ; preds = %for.body3.us.preheader, %for.cond14.for.end39_crit_edge.us
  %indvars.iv82 = phi i64 [ 0, %for.body3.us.preheader ], [ %indvars.iv.next83, %for.cond14.for.end39_crit_edge.us ]
  %arrayidx5.us = getelementptr inbounds double, ptr %eff, i64 %indvars.iv82
  %5 = load double, ptr %arrayidx5.us, align 8, !tbaa !20
  %conv.us = fptrunc double %5 to float
  %arrayidx7.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv82
  %6 = load ptr, ptr %arrayidx7.us, align 8, !tbaa !13
  %7 = load i8, ptr %6, align 1, !tbaa !5
  %cmp10.not.us = icmp eq i8 %7, 45
  br i1 %cmp10.not.us, label %for.body17.us.preheader, label %if.then.us

if.then.us:                                       ; preds = %for.body3.us
  %8 = load float, ptr %freq, align 4, !tbaa !17
  %add13.us = fadd float %8, %conv.us
  store float %add13.us, ptr %freq, align 4, !tbaa !17
  br label %for.body17.us.preheader

for.body17.us.preheader:                          ; preds = %if.then.us, %for.body3.us
  br i1 %4, label %for.cond14.for.end39_crit_edge.us.unr-lcssa, label %for.body17.us

for.body17.us:                                    ; preds = %for.body17.us.preheader, %for.inc37.us.1
  %indvars.iv76 = phi i64 [ %indvars.iv.next77.1, %for.inc37.us.1 ], [ 1, %for.body17.us.preheader ]
  %niter = phi i64 [ %niter.next.1, %for.inc37.us.1 ], [ 0, %for.body17.us.preheader ]
  %arrayidx21.us = getelementptr inbounds i8, ptr %6, i64 %indvars.iv76
  %9 = load i8, ptr %arrayidx21.us, align 1, !tbaa !5
  %cmp23.not.us = icmp eq i8 %9, 45
  br i1 %cmp23.not.us, label %for.inc37.us, label %land.lhs.true.us

land.lhs.true.us:                                 ; preds = %for.body17.us
  %10 = add nsw i64 %indvars.iv76, -1
  %arrayidx28.us = getelementptr inbounds i8, ptr %6, i64 %10
  %11 = load i8, ptr %arrayidx28.us, align 1, !tbaa !5
  %cmp30.not.us = icmp eq i8 %11, 45
  br i1 %cmp30.not.us, label %for.inc37.us, label %if.then32.us

if.then32.us:                                     ; preds = %land.lhs.true.us
  %arrayidx34.us = getelementptr inbounds float, ptr %freq, i64 %indvars.iv76
  %12 = load float, ptr %arrayidx34.us, align 4, !tbaa !17
  %add35.us = fadd float %12, %conv.us
  store float %add35.us, ptr %arrayidx34.us, align 4, !tbaa !17
  br label %for.inc37.us

for.inc37.us:                                     ; preds = %if.then32.us, %land.lhs.true.us, %for.body17.us
  %indvars.iv.next77 = add nuw nsw i64 %indvars.iv76, 1
  %arrayidx21.us.1 = getelementptr inbounds i8, ptr %6, i64 %indvars.iv.next77
  %13 = load i8, ptr %arrayidx21.us.1, align 1, !tbaa !5
  %cmp23.not.us.1 = icmp eq i8 %13, 45
  br i1 %cmp23.not.us.1, label %for.inc37.us.1, label %land.lhs.true.us.1

land.lhs.true.us.1:                               ; preds = %for.inc37.us
  %arrayidx28.us.1 = getelementptr inbounds i8, ptr %6, i64 %indvars.iv76
  %14 = load i8, ptr %arrayidx28.us.1, align 1, !tbaa !5
  %cmp30.not.us.1 = icmp eq i8 %14, 45
  br i1 %cmp30.not.us.1, label %for.inc37.us.1, label %if.then32.us.1

if.then32.us.1:                                   ; preds = %land.lhs.true.us.1
  %arrayidx34.us.1 = getelementptr inbounds float, ptr %freq, i64 %indvars.iv.next77
  %15 = load float, ptr %arrayidx34.us.1, align 4, !tbaa !17
  %add35.us.1 = fadd float %15, %conv.us
  store float %add35.us.1, ptr %arrayidx34.us.1, align 4, !tbaa !17
  br label %for.inc37.us.1

for.inc37.us.1:                                   ; preds = %if.then32.us.1, %land.lhs.true.us.1, %for.inc37.us
  %indvars.iv.next77.1 = add nuw nsw i64 %indvars.iv76, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond14.for.end39_crit_edge.us.unr-lcssa, label %for.body17.us, !llvm.loop !482

for.cond14.for.end39_crit_edge.us.unr-lcssa:      ; preds = %for.inc37.us.1, %for.body17.us.preheader
  %indvars.iv76.unr = phi i64 [ 1, %for.body17.us.preheader ], [ %indvars.iv.next77.1, %for.inc37.us.1 ]
  br i1 %lcmp.mod.not, label %for.cond14.for.end39_crit_edge.us, label %for.body17.us.epil

for.body17.us.epil:                               ; preds = %for.cond14.for.end39_crit_edge.us.unr-lcssa
  %arrayidx21.us.epil = getelementptr inbounds i8, ptr %6, i64 %indvars.iv76.unr
  %16 = load i8, ptr %arrayidx21.us.epil, align 1, !tbaa !5
  %cmp23.not.us.epil = icmp eq i8 %16, 45
  br i1 %cmp23.not.us.epil, label %for.cond14.for.end39_crit_edge.us, label %land.lhs.true.us.epil

land.lhs.true.us.epil:                            ; preds = %for.body17.us.epil
  %17 = add nsw i64 %indvars.iv76.unr, -1
  %arrayidx28.us.epil = getelementptr inbounds i8, ptr %6, i64 %17
  %18 = load i8, ptr %arrayidx28.us.epil, align 1, !tbaa !5
  %cmp30.not.us.epil = icmp eq i8 %18, 45
  br i1 %cmp30.not.us.epil, label %for.cond14.for.end39_crit_edge.us, label %if.then32.us.epil

if.then32.us.epil:                                ; preds = %land.lhs.true.us.epil
  %arrayidx34.us.epil = getelementptr inbounds float, ptr %freq, i64 %indvars.iv76.unr
  %19 = load float, ptr %arrayidx34.us.epil, align 4, !tbaa !17
  %add35.us.epil = fadd float %19, %conv.us
  store float %add35.us.epil, ptr %arrayidx34.us.epil, align 4, !tbaa !17
  br label %for.cond14.for.end39_crit_edge.us

for.cond14.for.end39_crit_edge.us:                ; preds = %for.body17.us.epil, %land.lhs.true.us.epil, %if.then32.us.epil, %for.cond14.for.end39_crit_edge.us.unr-lcssa
  %20 = load float, ptr %arrayidx41, align 4, !tbaa !17
  %add42.us = fadd float %20, %conv.us
  store float %add42.us, ptr %arrayidx41, align 4, !tbaa !17
  %indvars.iv.next83 = add nuw nsw i64 %indvars.iv82, 1
  %exitcond86.not = icmp eq i64 %indvars.iv.next83, %wide.trip.count85
  br i1 %exitcond86.not, label %for.end45, label %for.body3.us, !llvm.loop !483

for.body3:                                        ; preds = %for.body3.lr.ph, %if.end
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end ], [ 0, %for.body3.lr.ph ]
  %arrayidx5 = getelementptr inbounds double, ptr %eff, i64 %indvars.iv
  %21 = load double, ptr %arrayidx5, align 8, !tbaa !20
  %conv = fptrunc double %21 to float
  %arrayidx7 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv
  %22 = load ptr, ptr %arrayidx7, align 8, !tbaa !13
  %23 = load i8, ptr %22, align 1, !tbaa !5
  %cmp10.not = icmp eq i8 %23, 45
  br i1 %cmp10.not, label %if.end, label %if.then

if.then:                                          ; preds = %for.body3
  %24 = load float, ptr %freq, align 4, !tbaa !17
  %add13 = fadd float %24, %conv
  store float %add13, ptr %freq, align 4, !tbaa !17
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body3
  %25 = load float, ptr %arrayidx41, align 4, !tbaa !17
  %add42 = fadd float %25, %conv
  store float %add42, ptr %arrayidx41, align 4, !tbaa !17
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count85
  br i1 %exitcond.not, label %for.end45, label %for.body3, !llvm.loop !483

for.end45:                                        ; preds = %if.end, %for.cond14.for.end39_crit_edge.us, %for.cond1.preheader
  ret void
}

; Function Attrs: nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @getdigapfreq_part(ptr nocapture noundef %freq, i32 noundef %clus, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %eff, i32 noundef %len, ptr nocapture noundef readonly %sgappat, ptr nocapture noundef readonly %egappat) local_unnamed_addr #9 {
entry:
  %cmp94 = icmp sgt i32 %len, -2
  br i1 %cmp94, label %for.body.preheader, label %for.cond1.preheader

for.body.preheader:                               ; preds = %entry
  %0 = add i32 %len, 1
  %1 = zext i32 %0 to i64
  %2 = shl nuw nsw i64 %1, 2
  %3 = add nuw nsw i64 %2, 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %freq, i8 0, i64 %3, i1 false), !tbaa !17
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.body.preheader, %entry
  %cmp298 = icmp sgt i32 %clus, 0
  br i1 %cmp298, label %for.body3.lr.ph, label %for.end67

for.body3.lr.ph:                                  ; preds = %for.cond1.preheader
  %cmp2096 = icmp sgt i32 %len, 1
  %sub54 = add nsw i32 %len, -1
  %idxprom55 = sext i32 %sub54 to i64
  %idxprom61 = sext i32 %len to i64
  %arrayidx62 = getelementptr inbounds float, ptr %freq, i64 %idxprom61
  %wide.trip.count112 = zext i32 %clus to i64
  br i1 %cmp2096, label %for.body3.us.preheader, label %for.body3

for.body3.us.preheader:                           ; preds = %for.body3.lr.ph
  %wide.trip.count107 = zext i32 %len to i64
  %4 = add nsw i64 %wide.trip.count107, -1
  %xtraiter = and i64 %4, 1
  %5 = icmp eq i32 %len, 2
  %unroll_iter = and i64 %4, -2
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.body3.us

for.body3.us:                                     ; preds = %for.body3.us.preheader, %for.inc65.us
  %indvars.iv109 = phi i64 [ 0, %for.body3.us.preheader ], [ %indvars.iv.next110, %for.inc65.us ]
  %arrayidx5.us = getelementptr inbounds double, ptr %eff, i64 %indvars.iv109
  %6 = load double, ptr %arrayidx5.us, align 8, !tbaa !20
  %conv.us = fptrunc double %6 to float
  %arrayidx7.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv109
  %7 = load ptr, ptr %arrayidx7.us, align 8, !tbaa !13
  %8 = load i8, ptr %7, align 1, !tbaa !5
  %cmp10.us = icmp eq i8 %8, 45
  br i1 %cmp10.us, label %land.lhs.true.us, label %for.body22.us.preheader

for.body22.us.preheader:                          ; preds = %if.then.us, %land.lhs.true.us, %for.body3.us
  br i1 %5, label %for.cond19.for.end45_crit_edge.us.unr-lcssa, label %for.body22.us

land.lhs.true.us:                                 ; preds = %for.body3.us
  %arrayidx13.us = getelementptr inbounds i8, ptr %sgappat, i64 %indvars.iv109
  %9 = load i8, ptr %arrayidx13.us, align 1, !tbaa !5
  %cmp15.us = icmp eq i8 %9, 45
  br i1 %cmp15.us, label %if.then.us, label %for.body22.us.preheader

if.then.us:                                       ; preds = %land.lhs.true.us
  %10 = load float, ptr %freq, align 4, !tbaa !17
  %add18.us = fadd float %10, %conv.us
  store float %add18.us, ptr %freq, align 4, !tbaa !17
  br label %for.body22.us.preheader

land.lhs.true51.us:                               ; preds = %for.cond19.for.end45_crit_edge.us
  %arrayidx56.us = getelementptr inbounds i8, ptr %7, i64 %idxprom55
  %11 = load i8, ptr %arrayidx56.us, align 1, !tbaa !5
  %cmp58.us = icmp eq i8 %11, 45
  br i1 %cmp58.us, label %if.then60.us, label %for.inc65.us

if.then60.us:                                     ; preds = %land.lhs.true51.us
  %12 = load float, ptr %arrayidx62, align 4, !tbaa !17
  %add63.us = fadd float %12, %conv.us
  store float %add63.us, ptr %arrayidx62, align 4, !tbaa !17
  br label %for.inc65.us

for.inc65.us:                                     ; preds = %if.then60.us, %land.lhs.true51.us, %for.cond19.for.end45_crit_edge.us
  %indvars.iv.next110 = add nuw nsw i64 %indvars.iv109, 1
  %exitcond113.not = icmp eq i64 %indvars.iv.next110, %wide.trip.count112
  br i1 %exitcond113.not, label %for.end67, label %for.body3.us, !llvm.loop !484

for.body22.us:                                    ; preds = %for.body22.us.preheader, %for.inc43.us.1
  %indvars.iv103 = phi i64 [ %indvars.iv.next104.1, %for.inc43.us.1 ], [ 1, %for.body22.us.preheader ]
  %niter = phi i64 [ %niter.next.1, %for.inc43.us.1 ], [ 0, %for.body22.us.preheader ]
  %arrayidx26.us = getelementptr inbounds i8, ptr %7, i64 %indvars.iv103
  %13 = load i8, ptr %arrayidx26.us, align 1, !tbaa !5
  %cmp28.us = icmp eq i8 %13, 45
  br i1 %cmp28.us, label %land.lhs.true30.us, label %for.inc43.us

land.lhs.true30.us:                               ; preds = %for.body22.us
  %14 = add nsw i64 %indvars.iv103, -1
  %arrayidx34.us = getelementptr inbounds i8, ptr %7, i64 %14
  %15 = load i8, ptr %arrayidx34.us, align 1, !tbaa !5
  %cmp36.us = icmp eq i8 %15, 45
  br i1 %cmp36.us, label %if.then38.us, label %for.inc43.us

if.then38.us:                                     ; preds = %land.lhs.true30.us
  %arrayidx40.us = getelementptr inbounds float, ptr %freq, i64 %indvars.iv103
  %16 = load float, ptr %arrayidx40.us, align 4, !tbaa !17
  %add41.us = fadd float %16, %conv.us
  store float %add41.us, ptr %arrayidx40.us, align 4, !tbaa !17
  br label %for.inc43.us

for.inc43.us:                                     ; preds = %if.then38.us, %land.lhs.true30.us, %for.body22.us
  %indvars.iv.next104 = add nuw nsw i64 %indvars.iv103, 1
  %arrayidx26.us.1 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next104
  %17 = load i8, ptr %arrayidx26.us.1, align 1, !tbaa !5
  %cmp28.us.1 = icmp eq i8 %17, 45
  br i1 %cmp28.us.1, label %land.lhs.true30.us.1, label %for.inc43.us.1

land.lhs.true30.us.1:                             ; preds = %for.inc43.us
  %arrayidx34.us.1 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv103
  %18 = load i8, ptr %arrayidx34.us.1, align 1, !tbaa !5
  %cmp36.us.1 = icmp eq i8 %18, 45
  br i1 %cmp36.us.1, label %if.then38.us.1, label %for.inc43.us.1

if.then38.us.1:                                   ; preds = %land.lhs.true30.us.1
  %arrayidx40.us.1 = getelementptr inbounds float, ptr %freq, i64 %indvars.iv.next104
  %19 = load float, ptr %arrayidx40.us.1, align 4, !tbaa !17
  %add41.us.1 = fadd float %19, %conv.us
  store float %add41.us.1, ptr %arrayidx40.us.1, align 4, !tbaa !17
  br label %for.inc43.us.1

for.inc43.us.1:                                   ; preds = %if.then38.us.1, %land.lhs.true30.us.1, %for.inc43.us
  %indvars.iv.next104.1 = add nuw nsw i64 %indvars.iv103, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond19.for.end45_crit_edge.us.unr-lcssa, label %for.body22.us, !llvm.loop !485

for.cond19.for.end45_crit_edge.us.unr-lcssa:      ; preds = %for.inc43.us.1, %for.body22.us.preheader
  %indvars.iv103.unr = phi i64 [ 1, %for.body22.us.preheader ], [ %indvars.iv.next104.1, %for.inc43.us.1 ]
  br i1 %lcmp.mod.not, label %for.cond19.for.end45_crit_edge.us, label %for.body22.us.epil

for.body22.us.epil:                               ; preds = %for.cond19.for.end45_crit_edge.us.unr-lcssa
  %arrayidx26.us.epil = getelementptr inbounds i8, ptr %7, i64 %indvars.iv103.unr
  %20 = load i8, ptr %arrayidx26.us.epil, align 1, !tbaa !5
  %cmp28.us.epil = icmp eq i8 %20, 45
  br i1 %cmp28.us.epil, label %land.lhs.true30.us.epil, label %for.cond19.for.end45_crit_edge.us

land.lhs.true30.us.epil:                          ; preds = %for.body22.us.epil
  %21 = add nsw i64 %indvars.iv103.unr, -1
  %arrayidx34.us.epil = getelementptr inbounds i8, ptr %7, i64 %21
  %22 = load i8, ptr %arrayidx34.us.epil, align 1, !tbaa !5
  %cmp36.us.epil = icmp eq i8 %22, 45
  br i1 %cmp36.us.epil, label %if.then38.us.epil, label %for.cond19.for.end45_crit_edge.us

if.then38.us.epil:                                ; preds = %land.lhs.true30.us.epil
  %arrayidx40.us.epil = getelementptr inbounds float, ptr %freq, i64 %indvars.iv103.unr
  %23 = load float, ptr %arrayidx40.us.epil, align 4, !tbaa !17
  %add41.us.epil = fadd float %23, %conv.us
  store float %add41.us.epil, ptr %arrayidx40.us.epil, align 4, !tbaa !17
  br label %for.cond19.for.end45_crit_edge.us

for.cond19.for.end45_crit_edge.us:                ; preds = %for.body22.us.epil, %land.lhs.true30.us.epil, %if.then38.us.epil, %for.cond19.for.end45_crit_edge.us.unr-lcssa
  %arrayidx47.us = getelementptr inbounds i8, ptr %egappat, i64 %indvars.iv109
  %24 = load i8, ptr %arrayidx47.us, align 1, !tbaa !5
  %cmp49.us = icmp eq i8 %24, 45
  br i1 %cmp49.us, label %land.lhs.true51.us, label %for.inc65.us

for.body3:                                        ; preds = %for.body3.lr.ph, %for.inc65
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc65 ], [ 0, %for.body3.lr.ph ]
  %arrayidx5 = getelementptr inbounds double, ptr %eff, i64 %indvars.iv
  %25 = load double, ptr %arrayidx5, align 8, !tbaa !20
  %conv = fptrunc double %25 to float
  %arrayidx7 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv
  %26 = load ptr, ptr %arrayidx7, align 8, !tbaa !13
  %27 = load i8, ptr %26, align 1, !tbaa !5
  %cmp10 = icmp eq i8 %27, 45
  br i1 %cmp10, label %land.lhs.true, label %if.end

land.lhs.true:                                    ; preds = %for.body3
  %arrayidx13 = getelementptr inbounds i8, ptr %sgappat, i64 %indvars.iv
  %28 = load i8, ptr %arrayidx13, align 1, !tbaa !5
  %cmp15 = icmp eq i8 %28, 45
  br i1 %cmp15, label %if.then, label %if.end

if.then:                                          ; preds = %land.lhs.true
  %29 = load float, ptr %freq, align 4, !tbaa !17
  %add18 = fadd float %29, %conv
  store float %add18, ptr %freq, align 4, !tbaa !17
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body3
  %arrayidx47 = getelementptr inbounds i8, ptr %egappat, i64 %indvars.iv
  %30 = load i8, ptr %arrayidx47, align 1, !tbaa !5
  %cmp49 = icmp eq i8 %30, 45
  br i1 %cmp49, label %land.lhs.true51, label %for.inc65

land.lhs.true51:                                  ; preds = %if.end
  %arrayidx56 = getelementptr inbounds i8, ptr %26, i64 %idxprom55
  %31 = load i8, ptr %arrayidx56, align 1, !tbaa !5
  %cmp58 = icmp eq i8 %31, 45
  br i1 %cmp58, label %if.then60, label %for.inc65

if.then60:                                        ; preds = %land.lhs.true51
  %32 = load float, ptr %arrayidx62, align 4, !tbaa !17
  %add63 = fadd float %32, %conv
  store float %add63, ptr %arrayidx62, align 4, !tbaa !17
  br label %for.inc65

for.inc65:                                        ; preds = %if.end, %land.lhs.true51, %if.then60
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count112
  br i1 %exitcond.not, label %for.end67, label %for.body3, !llvm.loop !484

for.end67:                                        ; preds = %for.inc65, %for.inc65.us, %for.cond1.preheader
  ret void
}

; Function Attrs: nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @getdiaminofreq_part(ptr nocapture noundef %freq, i32 noundef %clus, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %eff, i32 noundef %len, ptr nocapture noundef readonly %sgappat, ptr nocapture noundef readonly %egappat) local_unnamed_addr #9 {
entry:
  %cmp94 = icmp sgt i32 %len, -2
  br i1 %cmp94, label %for.body.preheader, label %for.cond1.preheader

for.body.preheader:                               ; preds = %entry
  %0 = add i32 %len, 1
  %1 = zext i32 %0 to i64
  %2 = shl nuw nsw i64 %1, 2
  %3 = add nuw nsw i64 %2, 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %freq, i8 0, i64 %3, i1 false), !tbaa !17
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.body.preheader, %entry
  %cmp298 = icmp sgt i32 %clus, 0
  br i1 %cmp298, label %for.body3.lr.ph, label %for.end67

for.body3.lr.ph:                                  ; preds = %for.cond1.preheader
  %cmp2096 = icmp sgt i32 %len, 1
  %sub54 = add nsw i32 %len, -1
  %idxprom55 = sext i32 %sub54 to i64
  %idxprom61 = sext i32 %len to i64
  %arrayidx62 = getelementptr inbounds float, ptr %freq, i64 %idxprom61
  %wide.trip.count112 = zext i32 %clus to i64
  br i1 %cmp2096, label %for.body3.us.preheader, label %for.body3

for.body3.us.preheader:                           ; preds = %for.body3.lr.ph
  %wide.trip.count107 = zext i32 %len to i64
  %4 = add nsw i64 %wide.trip.count107, -1
  %xtraiter = and i64 %4, 1
  %5 = icmp eq i32 %len, 2
  %unroll_iter = and i64 %4, -2
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.body3.us

for.body3.us:                                     ; preds = %for.body3.us.preheader, %for.inc65.us
  %indvars.iv109 = phi i64 [ 0, %for.body3.us.preheader ], [ %indvars.iv.next110, %for.inc65.us ]
  %arrayidx5.us = getelementptr inbounds double, ptr %eff, i64 %indvars.iv109
  %6 = load double, ptr %arrayidx5.us, align 8, !tbaa !20
  %conv.us = fptrunc double %6 to float
  %arrayidx7.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv109
  %7 = load ptr, ptr %arrayidx7.us, align 8, !tbaa !13
  %8 = load i8, ptr %7, align 1, !tbaa !5
  %cmp10.not.us = icmp eq i8 %8, 45
  br i1 %cmp10.not.us, label %for.body22.us.preheader, label %land.lhs.true.us

for.body22.us.preheader:                          ; preds = %if.then.us, %land.lhs.true.us, %for.body3.us
  br i1 %5, label %for.cond19.for.end45_crit_edge.us.unr-lcssa, label %for.body22.us

land.lhs.true.us:                                 ; preds = %for.body3.us
  %arrayidx13.us = getelementptr inbounds i8, ptr %sgappat, i64 %indvars.iv109
  %9 = load i8, ptr %arrayidx13.us, align 1, !tbaa !5
  %cmp15.not.us = icmp eq i8 %9, 45
  br i1 %cmp15.not.us, label %for.body22.us.preheader, label %if.then.us

if.then.us:                                       ; preds = %land.lhs.true.us
  %10 = load float, ptr %freq, align 4, !tbaa !17
  %add18.us = fadd float %10, %conv.us
  store float %add18.us, ptr %freq, align 4, !tbaa !17
  br label %for.body22.us.preheader

land.lhs.true51.us:                               ; preds = %for.cond19.for.end45_crit_edge.us
  %arrayidx56.us = getelementptr inbounds i8, ptr %7, i64 %idxprom55
  %11 = load i8, ptr %arrayidx56.us, align 1, !tbaa !5
  %cmp58.not.us = icmp eq i8 %11, 45
  br i1 %cmp58.not.us, label %for.inc65.us, label %if.then60.us

if.then60.us:                                     ; preds = %land.lhs.true51.us
  %12 = load float, ptr %arrayidx62, align 4, !tbaa !17
  %add63.us = fadd float %12, %conv.us
  store float %add63.us, ptr %arrayidx62, align 4, !tbaa !17
  br label %for.inc65.us

for.inc65.us:                                     ; preds = %if.then60.us, %land.lhs.true51.us, %for.cond19.for.end45_crit_edge.us
  %indvars.iv.next110 = add nuw nsw i64 %indvars.iv109, 1
  %exitcond113.not = icmp eq i64 %indvars.iv.next110, %wide.trip.count112
  br i1 %exitcond113.not, label %for.end67, label %for.body3.us, !llvm.loop !486

for.body22.us:                                    ; preds = %for.body22.us.preheader, %for.inc43.us.1
  %indvars.iv103 = phi i64 [ %indvars.iv.next104.1, %for.inc43.us.1 ], [ 1, %for.body22.us.preheader ]
  %niter = phi i64 [ %niter.next.1, %for.inc43.us.1 ], [ 0, %for.body22.us.preheader ]
  %arrayidx26.us = getelementptr inbounds i8, ptr %7, i64 %indvars.iv103
  %13 = load i8, ptr %arrayidx26.us, align 1, !tbaa !5
  %cmp28.not.us = icmp eq i8 %13, 45
  br i1 %cmp28.not.us, label %for.inc43.us, label %land.lhs.true30.us

land.lhs.true30.us:                               ; preds = %for.body22.us
  %14 = add nsw i64 %indvars.iv103, -1
  %arrayidx34.us = getelementptr inbounds i8, ptr %7, i64 %14
  %15 = load i8, ptr %arrayidx34.us, align 1, !tbaa !5
  %cmp36.not.us = icmp eq i8 %15, 45
  br i1 %cmp36.not.us, label %for.inc43.us, label %if.then38.us

if.then38.us:                                     ; preds = %land.lhs.true30.us
  %arrayidx40.us = getelementptr inbounds float, ptr %freq, i64 %indvars.iv103
  %16 = load float, ptr %arrayidx40.us, align 4, !tbaa !17
  %add41.us = fadd float %16, %conv.us
  store float %add41.us, ptr %arrayidx40.us, align 4, !tbaa !17
  br label %for.inc43.us

for.inc43.us:                                     ; preds = %if.then38.us, %land.lhs.true30.us, %for.body22.us
  %indvars.iv.next104 = add nuw nsw i64 %indvars.iv103, 1
  %arrayidx26.us.1 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv.next104
  %17 = load i8, ptr %arrayidx26.us.1, align 1, !tbaa !5
  %cmp28.not.us.1 = icmp eq i8 %17, 45
  br i1 %cmp28.not.us.1, label %for.inc43.us.1, label %land.lhs.true30.us.1

land.lhs.true30.us.1:                             ; preds = %for.inc43.us
  %arrayidx34.us.1 = getelementptr inbounds i8, ptr %7, i64 %indvars.iv103
  %18 = load i8, ptr %arrayidx34.us.1, align 1, !tbaa !5
  %cmp36.not.us.1 = icmp eq i8 %18, 45
  br i1 %cmp36.not.us.1, label %for.inc43.us.1, label %if.then38.us.1

if.then38.us.1:                                   ; preds = %land.lhs.true30.us.1
  %arrayidx40.us.1 = getelementptr inbounds float, ptr %freq, i64 %indvars.iv.next104
  %19 = load float, ptr %arrayidx40.us.1, align 4, !tbaa !17
  %add41.us.1 = fadd float %19, %conv.us
  store float %add41.us.1, ptr %arrayidx40.us.1, align 4, !tbaa !17
  br label %for.inc43.us.1

for.inc43.us.1:                                   ; preds = %if.then38.us.1, %land.lhs.true30.us.1, %for.inc43.us
  %indvars.iv.next104.1 = add nuw nsw i64 %indvars.iv103, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond19.for.end45_crit_edge.us.unr-lcssa, label %for.body22.us, !llvm.loop !487

for.cond19.for.end45_crit_edge.us.unr-lcssa:      ; preds = %for.inc43.us.1, %for.body22.us.preheader
  %indvars.iv103.unr = phi i64 [ 1, %for.body22.us.preheader ], [ %indvars.iv.next104.1, %for.inc43.us.1 ]
  br i1 %lcmp.mod.not, label %for.cond19.for.end45_crit_edge.us, label %for.body22.us.epil

for.body22.us.epil:                               ; preds = %for.cond19.for.end45_crit_edge.us.unr-lcssa
  %arrayidx26.us.epil = getelementptr inbounds i8, ptr %7, i64 %indvars.iv103.unr
  %20 = load i8, ptr %arrayidx26.us.epil, align 1, !tbaa !5
  %cmp28.not.us.epil = icmp eq i8 %20, 45
  br i1 %cmp28.not.us.epil, label %for.cond19.for.end45_crit_edge.us, label %land.lhs.true30.us.epil

land.lhs.true30.us.epil:                          ; preds = %for.body22.us.epil
  %21 = add nsw i64 %indvars.iv103.unr, -1
  %arrayidx34.us.epil = getelementptr inbounds i8, ptr %7, i64 %21
  %22 = load i8, ptr %arrayidx34.us.epil, align 1, !tbaa !5
  %cmp36.not.us.epil = icmp eq i8 %22, 45
  br i1 %cmp36.not.us.epil, label %for.cond19.for.end45_crit_edge.us, label %if.then38.us.epil

if.then38.us.epil:                                ; preds = %land.lhs.true30.us.epil
  %arrayidx40.us.epil = getelementptr inbounds float, ptr %freq, i64 %indvars.iv103.unr
  %23 = load float, ptr %arrayidx40.us.epil, align 4, !tbaa !17
  %add41.us.epil = fadd float %23, %conv.us
  store float %add41.us.epil, ptr %arrayidx40.us.epil, align 4, !tbaa !17
  br label %for.cond19.for.end45_crit_edge.us

for.cond19.for.end45_crit_edge.us:                ; preds = %for.body22.us.epil, %land.lhs.true30.us.epil, %if.then38.us.epil, %for.cond19.for.end45_crit_edge.us.unr-lcssa
  %arrayidx47.us = getelementptr inbounds i8, ptr %egappat, i64 %indvars.iv109
  %24 = load i8, ptr %arrayidx47.us, align 1, !tbaa !5
  %cmp49.not.us = icmp eq i8 %24, 45
  br i1 %cmp49.not.us, label %for.inc65.us, label %land.lhs.true51.us

for.body3:                                        ; preds = %for.body3.lr.ph, %for.inc65
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc65 ], [ 0, %for.body3.lr.ph ]
  %arrayidx5 = getelementptr inbounds double, ptr %eff, i64 %indvars.iv
  %25 = load double, ptr %arrayidx5, align 8, !tbaa !20
  %conv = fptrunc double %25 to float
  %arrayidx7 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv
  %26 = load ptr, ptr %arrayidx7, align 8, !tbaa !13
  %27 = load i8, ptr %26, align 1, !tbaa !5
  %cmp10.not = icmp eq i8 %27, 45
  br i1 %cmp10.not, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %for.body3
  %arrayidx13 = getelementptr inbounds i8, ptr %sgappat, i64 %indvars.iv
  %28 = load i8, ptr %arrayidx13, align 1, !tbaa !5
  %cmp15.not = icmp eq i8 %28, 45
  br i1 %cmp15.not, label %if.end, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %29 = load float, ptr %freq, align 4, !tbaa !17
  %add18 = fadd float %29, %conv
  store float %add18, ptr %freq, align 4, !tbaa !17
  br label %if.end

if.end:                                           ; preds = %if.then, %land.lhs.true, %for.body3
  %arrayidx47 = getelementptr inbounds i8, ptr %egappat, i64 %indvars.iv
  %30 = load i8, ptr %arrayidx47, align 1, !tbaa !5
  %cmp49.not = icmp eq i8 %30, 45
  br i1 %cmp49.not, label %for.inc65, label %land.lhs.true51

land.lhs.true51:                                  ; preds = %if.end
  %arrayidx56 = getelementptr inbounds i8, ptr %26, i64 %idxprom55
  %31 = load i8, ptr %arrayidx56, align 1, !tbaa !5
  %cmp58.not = icmp eq i8 %31, 45
  br i1 %cmp58.not, label %for.inc65, label %if.then60

if.then60:                                        ; preds = %land.lhs.true51
  %32 = load float, ptr %arrayidx62, align 4, !tbaa !17
  %add63 = fadd float %32, %conv
  store float %add63, ptr %arrayidx62, align 4, !tbaa !17
  br label %for.inc65

for.inc65:                                        ; preds = %if.end, %land.lhs.true51, %if.then60
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count112
  br i1 %exitcond.not, label %for.end67, label %for.body3, !llvm.loop !486

for.end67:                                        ; preds = %for.inc65, %for.inc65.us, %for.cond1.preheader
  ret void
}

; Function Attrs: nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @getgapfreq_zure_part(ptr nocapture noundef %freq, i32 noundef %clus, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %eff, i32 noundef %len, ptr nocapture noundef readonly %sgap) local_unnamed_addr #9 {
entry:
  %cmp50 = icmp sgt i32 %len, -2
  br i1 %cmp50, label %for.body.preheader, label %for.cond1.preheader

for.body.preheader:                               ; preds = %entry
  %0 = add i32 %len, 1
  %1 = zext i32 %0 to i64
  %2 = shl nuw nsw i64 %1, 2
  %3 = add nuw nsw i64 %2, 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %freq, i8 0, i64 %3, i1 false), !tbaa !17
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.body.preheader, %entry
  %cmp254 = icmp sgt i32 %clus, 0
  br i1 %cmp254, label %for.body3.lr.ph, label %for.end35

for.body3.lr.ph:                                  ; preds = %for.cond1.preheader
  %cmp1452 = icmp sgt i32 %len, 0
  %wide.trip.count68 = zext i32 %clus to i64
  br i1 %cmp1452, label %for.body3.us.preheader, label %for.body3.preheader

for.body3.preheader:                              ; preds = %for.body3.lr.ph
  %xtraiter = and i64 %wide.trip.count68, 1
  %4 = icmp eq i32 %clus, 1
  br i1 %4, label %for.end35.loopexit72.unr-lcssa, label %for.body3.preheader.new

for.body3.preheader.new:                          ; preds = %for.body3.preheader
  %unroll_iter = and i64 %wide.trip.count68, 4294967294
  br label %for.body3

for.body3.us.preheader:                           ; preds = %for.body3.lr.ph
  %wide.trip.count63 = zext i32 %len to i64
  %xtraiter73 = and i64 %wide.trip.count63, 1
  %5 = icmp eq i32 %len, 1
  %unroll_iter75 = and i64 %wide.trip.count63, 4294967294
  %lcmp.mod74.not = icmp eq i64 %xtraiter73, 0
  br label %for.body3.us

for.body3.us:                                     ; preds = %for.body3.us.preheader, %for.cond13.for.inc33_crit_edge.us
  %indvars.iv65 = phi i64 [ 0, %for.body3.us.preheader ], [ %indvars.iv.next66, %for.cond13.for.inc33_crit_edge.us ]
  %arrayidx5.us = getelementptr inbounds double, ptr %eff, i64 %indvars.iv65
  %6 = load double, ptr %arrayidx5.us, align 8, !tbaa !20
  %conv.us = fptrunc double %6 to float
  %arrayidx7.us = getelementptr inbounds i8, ptr %sgap, i64 %indvars.iv65
  %7 = load i8, ptr %arrayidx7.us, align 1, !tbaa !5
  %cmp9.us = icmp eq i8 %7, 45
  br i1 %cmp9.us, label %if.then.us, label %if.end.us

if.then.us:                                       ; preds = %for.body3.us
  %8 = load float, ptr %freq, align 4, !tbaa !17
  %add12.us = fadd float %8, %conv.us
  store float %add12.us, ptr %freq, align 4, !tbaa !17
  br label %if.end.us

if.end.us:                                        ; preds = %if.then.us, %for.body3.us
  %arrayidx18.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv65
  %9 = load ptr, ptr %arrayidx18.us, align 8, !tbaa !13
  br i1 %5, label %for.cond13.for.inc33_crit_edge.us.unr-lcssa, label %for.body16.us

for.body16.us:                                    ; preds = %if.end.us, %for.inc30.us.1
  %indvars.iv59 = phi i64 [ %14, %for.inc30.us.1 ], [ 0, %if.end.us ]
  %niter76 = phi i64 [ %niter76.next.1, %for.inc30.us.1 ], [ 0, %if.end.us ]
  %arrayidx20.us = getelementptr inbounds i8, ptr %9, i64 %indvars.iv59
  %10 = load i8, ptr %arrayidx20.us, align 1, !tbaa !5
  %cmp22.us = icmp eq i8 %10, 45
  %11 = or i64 %indvars.iv59, 1
  br i1 %cmp22.us, label %if.then24.us, label %for.inc30.us

if.then24.us:                                     ; preds = %for.body16.us
  %arrayidx27.us = getelementptr inbounds float, ptr %freq, i64 %11
  %12 = load float, ptr %arrayidx27.us, align 4, !tbaa !17
  %add28.us = fadd float %12, %conv.us
  store float %add28.us, ptr %arrayidx27.us, align 4, !tbaa !17
  br label %for.inc30.us

for.inc30.us:                                     ; preds = %for.body16.us, %if.then24.us
  %arrayidx20.us.1 = getelementptr inbounds i8, ptr %9, i64 %11
  %13 = load i8, ptr %arrayidx20.us.1, align 1, !tbaa !5
  %cmp22.us.1 = icmp eq i8 %13, 45
  %14 = add nuw nsw i64 %indvars.iv59, 2
  br i1 %cmp22.us.1, label %if.then24.us.1, label %for.inc30.us.1

if.then24.us.1:                                   ; preds = %for.inc30.us
  %arrayidx27.us.1 = getelementptr inbounds float, ptr %freq, i64 %14
  %15 = load float, ptr %arrayidx27.us.1, align 4, !tbaa !17
  %add28.us.1 = fadd float %15, %conv.us
  store float %add28.us.1, ptr %arrayidx27.us.1, align 4, !tbaa !17
  br label %for.inc30.us.1

for.inc30.us.1:                                   ; preds = %if.then24.us.1, %for.inc30.us
  %niter76.next.1 = add i64 %niter76, 2
  %niter76.ncmp.1 = icmp eq i64 %niter76.next.1, %unroll_iter75
  br i1 %niter76.ncmp.1, label %for.cond13.for.inc33_crit_edge.us.unr-lcssa, label %for.body16.us, !llvm.loop !488

for.cond13.for.inc33_crit_edge.us.unr-lcssa:      ; preds = %for.inc30.us.1, %if.end.us
  %indvars.iv59.unr = phi i64 [ 0, %if.end.us ], [ %14, %for.inc30.us.1 ]
  br i1 %lcmp.mod74.not, label %for.cond13.for.inc33_crit_edge.us, label %for.body16.us.epil

for.body16.us.epil:                               ; preds = %for.cond13.for.inc33_crit_edge.us.unr-lcssa
  %arrayidx20.us.epil = getelementptr inbounds i8, ptr %9, i64 %indvars.iv59.unr
  %16 = load i8, ptr %arrayidx20.us.epil, align 1, !tbaa !5
  %cmp22.us.epil = icmp eq i8 %16, 45
  br i1 %cmp22.us.epil, label %if.then24.us.epil, label %for.cond13.for.inc33_crit_edge.us

if.then24.us.epil:                                ; preds = %for.body16.us.epil
  %17 = add nuw nsw i64 %indvars.iv59.unr, 1
  %arrayidx27.us.epil = getelementptr inbounds float, ptr %freq, i64 %17
  %18 = load float, ptr %arrayidx27.us.epil, align 4, !tbaa !17
  %add28.us.epil = fadd float %18, %conv.us
  store float %add28.us.epil, ptr %arrayidx27.us.epil, align 4, !tbaa !17
  br label %for.cond13.for.inc33_crit_edge.us

for.cond13.for.inc33_crit_edge.us:                ; preds = %for.body16.us.epil, %if.then24.us.epil, %for.cond13.for.inc33_crit_edge.us.unr-lcssa
  %indvars.iv.next66 = add nuw nsw i64 %indvars.iv65, 1
  %exitcond69.not = icmp eq i64 %indvars.iv.next66, %wide.trip.count68
  br i1 %exitcond69.not, label %for.end35, label %for.body3.us, !llvm.loop !489

for.body3:                                        ; preds = %if.end.1, %for.body3.preheader.new
  %indvars.iv = phi i64 [ 0, %for.body3.preheader.new ], [ %indvars.iv.next.1, %if.end.1 ]
  %niter = phi i64 [ 0, %for.body3.preheader.new ], [ %niter.next.1, %if.end.1 ]
  %arrayidx7 = getelementptr inbounds i8, ptr %sgap, i64 %indvars.iv
  %19 = load i8, ptr %arrayidx7, align 1, !tbaa !5
  %cmp9 = icmp eq i8 %19, 45
  br i1 %cmp9, label %if.then, label %if.end

if.then:                                          ; preds = %for.body3
  %arrayidx5 = getelementptr inbounds double, ptr %eff, i64 %indvars.iv
  %20 = load double, ptr %arrayidx5, align 8, !tbaa !20
  %conv = fptrunc double %20 to float
  %21 = load float, ptr %freq, align 4, !tbaa !17
  %add12 = fadd float %21, %conv
  store float %add12, ptr %freq, align 4, !tbaa !17
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body3
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx7.1 = getelementptr inbounds i8, ptr %sgap, i64 %indvars.iv.next
  %22 = load i8, ptr %arrayidx7.1, align 1, !tbaa !5
  %cmp9.1 = icmp eq i8 %22, 45
  br i1 %cmp9.1, label %if.then.1, label %if.end.1

if.then.1:                                        ; preds = %if.end
  %arrayidx5.1 = getelementptr inbounds double, ptr %eff, i64 %indvars.iv.next
  %23 = load double, ptr %arrayidx5.1, align 8, !tbaa !20
  %conv.1 = fptrunc double %23 to float
  %24 = load float, ptr %freq, align 4, !tbaa !17
  %add12.1 = fadd float %24, %conv.1
  store float %add12.1, ptr %freq, align 4, !tbaa !17
  br label %if.end.1

if.end.1:                                         ; preds = %if.then.1, %if.end
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.end35.loopexit72.unr-lcssa, label %for.body3, !llvm.loop !489

for.end35.loopexit72.unr-lcssa:                   ; preds = %if.end.1, %for.body3.preheader
  %indvars.iv.unr = phi i64 [ 0, %for.body3.preheader ], [ %indvars.iv.next.1, %if.end.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end35, label %for.body3.epil

for.body3.epil:                                   ; preds = %for.end35.loopexit72.unr-lcssa
  %arrayidx7.epil = getelementptr inbounds i8, ptr %sgap, i64 %indvars.iv.unr
  %25 = load i8, ptr %arrayidx7.epil, align 1, !tbaa !5
  %cmp9.epil = icmp eq i8 %25, 45
  br i1 %cmp9.epil, label %if.then.epil, label %for.end35

if.then.epil:                                     ; preds = %for.body3.epil
  %arrayidx5.epil = getelementptr inbounds double, ptr %eff, i64 %indvars.iv.unr
  %26 = load double, ptr %arrayidx5.epil, align 8, !tbaa !20
  %conv.epil = fptrunc double %26 to float
  %27 = load float, ptr %freq, align 4, !tbaa !17
  %add12.epil = fadd float %27, %conv.epil
  store float %add12.epil, ptr %freq, align 4, !tbaa !17
  br label %for.end35

for.end35:                                        ; preds = %for.end35.loopexit72.unr-lcssa, %if.then.epil, %for.body3.epil, %for.cond13.for.inc33_crit_edge.us, %for.cond1.preheader
  ret void
}

; Function Attrs: nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @getgapfreq_zure(ptr nocapture noundef %freq, i32 noundef %clus, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %eff, i32 noundef %len) local_unnamed_addr #9 {
entry:
  %cmp.not43 = icmp slt i32 %len, 0
  br i1 %cmp.not43, label %for.cond1.preheader, label %for.body.preheader

for.body.preheader:                               ; preds = %entry
  %0 = add nuw i32 %len, 1
  %1 = zext i32 %0 to i64
  %2 = shl nuw nsw i64 %1, 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %freq, i8 0, i64 %2, i1 false), !tbaa !17
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.body.preheader, %entry
  %cmp247 = icmp sgt i32 %clus, 0
  %cmp745 = icmp sgt i32 %len, 0
  %or.cond = and i1 %cmp247, %cmp745
  br i1 %or.cond, label %for.body3.us.preheader, label %for.end26

for.body3.us.preheader:                           ; preds = %for.cond1.preheader
  %wide.trip.count56 = zext i32 %clus to i64
  %wide.trip.count = zext i32 %len to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %3 = icmp eq i32 %len, 1
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.body3.us

for.body3.us:                                     ; preds = %for.body3.us.preheader, %for.cond6.for.inc24_crit_edge.us
  %indvars.iv53 = phi i64 [ 0, %for.body3.us.preheader ], [ %indvars.iv.next54, %for.cond6.for.inc24_crit_edge.us ]
  %arrayidx5.us = getelementptr inbounds double, ptr %eff, i64 %indvars.iv53
  %4 = load double, ptr %arrayidx5.us, align 8, !tbaa !20
  %conv.us = fptrunc double %4 to float
  %arrayidx11.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv53
  %5 = load ptr, ptr %arrayidx11.us, align 8, !tbaa !13
  br i1 %3, label %for.cond6.for.inc24_crit_edge.us.unr-lcssa, label %for.body9.us

for.body9.us:                                     ; preds = %for.body3.us, %for.inc21.us.1
  %indvars.iv = phi i64 [ %10, %for.inc21.us.1 ], [ 0, %for.body3.us ]
  %niter = phi i64 [ %niter.next.1, %for.inc21.us.1 ], [ 0, %for.body3.us ]
  %arrayidx13.us = getelementptr inbounds i8, ptr %5, i64 %indvars.iv
  %6 = load i8, ptr %arrayidx13.us, align 1, !tbaa !5
  %cmp15.us = icmp eq i8 %6, 45
  %7 = or i64 %indvars.iv, 1
  br i1 %cmp15.us, label %if.then.us, label %for.inc21.us

if.then.us:                                       ; preds = %for.body9.us
  %arrayidx19.us = getelementptr inbounds float, ptr %freq, i64 %7
  %8 = load float, ptr %arrayidx19.us, align 4, !tbaa !17
  %add20.us = fadd float %8, %conv.us
  store float %add20.us, ptr %arrayidx19.us, align 4, !tbaa !17
  br label %for.inc21.us

for.inc21.us:                                     ; preds = %for.body9.us, %if.then.us
  %arrayidx13.us.1 = getelementptr inbounds i8, ptr %5, i64 %7
  %9 = load i8, ptr %arrayidx13.us.1, align 1, !tbaa !5
  %cmp15.us.1 = icmp eq i8 %9, 45
  %10 = add nuw nsw i64 %indvars.iv, 2
  br i1 %cmp15.us.1, label %if.then.us.1, label %for.inc21.us.1

if.then.us.1:                                     ; preds = %for.inc21.us
  %arrayidx19.us.1 = getelementptr inbounds float, ptr %freq, i64 %10
  %11 = load float, ptr %arrayidx19.us.1, align 4, !tbaa !17
  %add20.us.1 = fadd float %11, %conv.us
  store float %add20.us.1, ptr %arrayidx19.us.1, align 4, !tbaa !17
  br label %for.inc21.us.1

for.inc21.us.1:                                   ; preds = %if.then.us.1, %for.inc21.us
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond6.for.inc24_crit_edge.us.unr-lcssa, label %for.body9.us, !llvm.loop !490

for.cond6.for.inc24_crit_edge.us.unr-lcssa:       ; preds = %for.inc21.us.1, %for.body3.us
  %indvars.iv.unr = phi i64 [ 0, %for.body3.us ], [ %10, %for.inc21.us.1 ]
  br i1 %lcmp.mod.not, label %for.cond6.for.inc24_crit_edge.us, label %for.body9.us.epil

for.body9.us.epil:                                ; preds = %for.cond6.for.inc24_crit_edge.us.unr-lcssa
  %arrayidx13.us.epil = getelementptr inbounds i8, ptr %5, i64 %indvars.iv.unr
  %12 = load i8, ptr %arrayidx13.us.epil, align 1, !tbaa !5
  %cmp15.us.epil = icmp eq i8 %12, 45
  br i1 %cmp15.us.epil, label %if.then.us.epil, label %for.cond6.for.inc24_crit_edge.us

if.then.us.epil:                                  ; preds = %for.body9.us.epil
  %13 = add nuw nsw i64 %indvars.iv.unr, 1
  %arrayidx19.us.epil = getelementptr inbounds float, ptr %freq, i64 %13
  %14 = load float, ptr %arrayidx19.us.epil, align 4, !tbaa !17
  %add20.us.epil = fadd float %14, %conv.us
  store float %add20.us.epil, ptr %arrayidx19.us.epil, align 4, !tbaa !17
  br label %for.cond6.for.inc24_crit_edge.us

for.cond6.for.inc24_crit_edge.us:                 ; preds = %for.body9.us.epil, %if.then.us.epil, %for.cond6.for.inc24_crit_edge.us.unr-lcssa
  %indvars.iv.next54 = add nuw nsw i64 %indvars.iv53, 1
  %exitcond57.not = icmp eq i64 %indvars.iv.next54, %wide.trip.count56
  br i1 %exitcond57.not, label %for.end26, label %for.body3.us, !llvm.loop !491

for.end26:                                        ; preds = %for.cond6.for.inc24_crit_edge.us, %for.cond1.preheader
  %add = add nsw i32 %len, 1
  %idxprom28 = sext i32 %add to i64
  %arrayidx29 = getelementptr inbounds float, ptr %freq, i64 %idxprom28
  store float 0.000000e+00, ptr %arrayidx29, align 4, !tbaa !17
  ret void
}

; Function Attrs: nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @getgapfreq(ptr nocapture noundef %freq, i32 noundef %clus, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %eff, i32 noundef %len) local_unnamed_addr #9 {
entry:
  %cmp.not41 = icmp slt i32 %len, 0
  br i1 %cmp.not41, label %for.cond1.preheader, label %for.body.preheader

for.body.preheader:                               ; preds = %entry
  %0 = add nuw i32 %len, 1
  %1 = zext i32 %0 to i64
  %2 = shl nuw nsw i64 %1, 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(1) %freq, i8 0, i64 %2, i1 false), !tbaa !17
  br label %for.cond1.preheader

for.cond1.preheader:                              ; preds = %for.body.preheader, %entry
  %cmp245 = icmp sgt i32 %clus, 0
  %cmp743 = icmp sgt i32 %len, 0
  %or.cond = and i1 %cmp245, %cmp743
  br i1 %or.cond, label %for.body3.us.preheader, label %for.end25

for.body3.us.preheader:                           ; preds = %for.cond1.preheader
  %wide.trip.count53 = zext i32 %clus to i64
  %wide.trip.count = zext i32 %len to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %3 = icmp eq i32 %len, 1
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br label %for.body3.us

for.body3.us:                                     ; preds = %for.body3.us.preheader, %for.cond6.for.inc23_crit_edge.us
  %indvars.iv50 = phi i64 [ 0, %for.body3.us.preheader ], [ %indvars.iv.next51, %for.cond6.for.inc23_crit_edge.us ]
  %arrayidx5.us = getelementptr inbounds double, ptr %eff, i64 %indvars.iv50
  %4 = load double, ptr %arrayidx5.us, align 8, !tbaa !20
  %conv.us = fptrunc double %4 to float
  %arrayidx11.us = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv50
  %5 = load ptr, ptr %arrayidx11.us, align 8, !tbaa !13
  br i1 %3, label %for.cond6.for.inc23_crit_edge.us.unr-lcssa, label %for.body9.us

for.body9.us:                                     ; preds = %for.body3.us, %for.inc20.us.1
  %indvars.iv = phi i64 [ %indvars.iv.next.1, %for.inc20.us.1 ], [ 0, %for.body3.us ]
  %niter = phi i64 [ %niter.next.1, %for.inc20.us.1 ], [ 0, %for.body3.us ]
  %arrayidx13.us = getelementptr inbounds i8, ptr %5, i64 %indvars.iv
  %6 = load i8, ptr %arrayidx13.us, align 1, !tbaa !5
  %cmp15.us = icmp eq i8 %6, 45
  br i1 %cmp15.us, label %if.then.us, label %for.inc20.us

if.then.us:                                       ; preds = %for.body9.us
  %arrayidx18.us = getelementptr inbounds float, ptr %freq, i64 %indvars.iv
  %7 = load float, ptr %arrayidx18.us, align 4, !tbaa !17
  %add19.us = fadd float %7, %conv.us
  store float %add19.us, ptr %arrayidx18.us, align 4, !tbaa !17
  br label %for.inc20.us

for.inc20.us:                                     ; preds = %if.then.us, %for.body9.us
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx13.us.1 = getelementptr inbounds i8, ptr %5, i64 %indvars.iv.next
  %8 = load i8, ptr %arrayidx13.us.1, align 1, !tbaa !5
  %cmp15.us.1 = icmp eq i8 %8, 45
  br i1 %cmp15.us.1, label %if.then.us.1, label %for.inc20.us.1

if.then.us.1:                                     ; preds = %for.inc20.us
  %arrayidx18.us.1 = getelementptr inbounds float, ptr %freq, i64 %indvars.iv.next
  %9 = load float, ptr %arrayidx18.us.1, align 4, !tbaa !17
  %add19.us.1 = fadd float %9, %conv.us
  store float %add19.us.1, ptr %arrayidx18.us.1, align 4, !tbaa !17
  br label %for.inc20.us.1

for.inc20.us.1:                                   ; preds = %if.then.us.1, %for.inc20.us
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond6.for.inc23_crit_edge.us.unr-lcssa, label %for.body9.us, !llvm.loop !492

for.cond6.for.inc23_crit_edge.us.unr-lcssa:       ; preds = %for.inc20.us.1, %for.body3.us
  %indvars.iv.unr = phi i64 [ 0, %for.body3.us ], [ %indvars.iv.next.1, %for.inc20.us.1 ]
  br i1 %lcmp.mod.not, label %for.cond6.for.inc23_crit_edge.us, label %for.body9.us.epil

for.body9.us.epil:                                ; preds = %for.cond6.for.inc23_crit_edge.us.unr-lcssa
  %arrayidx13.us.epil = getelementptr inbounds i8, ptr %5, i64 %indvars.iv.unr
  %10 = load i8, ptr %arrayidx13.us.epil, align 1, !tbaa !5
  %cmp15.us.epil = icmp eq i8 %10, 45
  br i1 %cmp15.us.epil, label %if.then.us.epil, label %for.cond6.for.inc23_crit_edge.us

if.then.us.epil:                                  ; preds = %for.body9.us.epil
  %arrayidx18.us.epil = getelementptr inbounds float, ptr %freq, i64 %indvars.iv.unr
  %11 = load float, ptr %arrayidx18.us.epil, align 4, !tbaa !17
  %add19.us.epil = fadd float %11, %conv.us
  store float %add19.us.epil, ptr %arrayidx18.us.epil, align 4, !tbaa !17
  br label %for.cond6.for.inc23_crit_edge.us

for.cond6.for.inc23_crit_edge.us:                 ; preds = %for.body9.us.epil, %if.then.us.epil, %for.cond6.for.inc23_crit_edge.us.unr-lcssa
  %indvars.iv.next51 = add nuw nsw i64 %indvars.iv50, 1
  %exitcond54.not = icmp eq i64 %indvars.iv.next51, %wide.trip.count53
  br i1 %exitcond54.not, label %for.end25, label %for.body3.us, !llvm.loop !493

for.end25:                                        ; preds = %for.cond6.for.inc23_crit_edge.us, %for.cond1.preheader
  %idxprom26 = sext i32 %len to i64
  %arrayidx27 = getelementptr inbounds float, ptr %freq, i64 %idxprom26
  store float 0.000000e+00, ptr %arrayidx27, align 4, !tbaa !17
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @st_getGapPattern(ptr nocapture noundef %pat, i32 noundef %clus, ptr nocapture noundef readonly %seq, ptr nocapture noundef readonly %eff, i32 noundef %len) local_unnamed_addr #12 {
entry:
  %tobool.not263 = icmp eq i32 %len, -1
  br i1 %tobool.not263, label %for.cond.preheader.thread, label %while.body

for.cond.preheader:                               ; preds = %if.end
  %cmp276 = icmp sgt i32 %clus, 0
  br i1 %cmp276, label %for.body.lr.ph, label %for.cond75.preheader

for.cond.preheader.thread:                        ; preds = %entry
  %cmp276304 = icmp sgt i32 %clus, 0
  br i1 %cmp276304, label %for.body.lr.ph.split.us, label %for.end170

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %cmp6.not269 = icmp slt i32 %len, 0
  br i1 %cmp6.not269, label %for.body.lr.ph.split.us, label %for.body.preheader

for.body.preheader:                               ; preds = %for.body.lr.ph
  %wide.trip.count = zext i32 %clus to i64
  br label %for.body

for.body.lr.ph.split.us:                          ; preds = %for.cond.preheader.thread, %for.body.lr.ph
  store ptr null, ptr %pat, align 8, !tbaa !13
  br label %for.end170

while.body:                                       ; preds = %entry, %if.end
  %dec265 = phi i32 [ %dec, %if.end ], [ %len, %entry ]
  %fpt.0264 = phi ptr [ %incdec.ptr, %if.end ], [ %pat, %entry ]
  %0 = load ptr, ptr %fpt.0264, align 8, !tbaa !13
  %tobool1.not = icmp eq ptr %0, null
  br i1 %tobool1.not, label %if.end, label %if.then

if.then:                                          ; preds = %while.body
  tail call void @free(ptr noundef nonnull %0) #34
  br label %if.end

if.end:                                           ; preds = %if.then, %while.body
  %incdec.ptr = getelementptr inbounds ptr, ptr %fpt.0264, i64 1
  store ptr null, ptr %fpt.0264, align 8, !tbaa !13
  %dec = add nsw i32 %dec265, -1
  %tobool.not = icmp eq i32 %dec265, 0
  br i1 %tobool.not, label %for.cond.preheader, label %while.body, !llvm.loop !494

for.cond75.preheader:                             ; preds = %for.cond4.for.inc72_crit_edge, %for.cond.preheader
  %cmp77.not286 = icmp slt i32 %len, 0
  br i1 %cmp77.not286, label %for.end170, label %for.body79.preheader

for.body79.preheader:                             ; preds = %for.cond75.preheader
  %1 = add nuw i32 %len, 1
  %wide.trip.count301 = zext i32 %1 to i64
  br label %for.body79

for.body:                                         ; preds = %for.body.preheader, %for.cond4.for.inc72_crit_edge
  %indvars.iv291 = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next292, %for.cond4.for.inc72_crit_edge ]
  %arrayidx = getelementptr inbounds double, ptr %eff, i64 %indvars.iv291
  %2 = load double, ptr %arrayidx, align 8, !tbaa !20
  %conv = fptrunc double %2 to float
  store ptr null, ptr %pat, align 8, !tbaa !13
  %arrayidx3 = getelementptr inbounds ptr, ptr %seq, i64 %indvars.iv291
  %3 = load ptr, ptr %arrayidx3, align 8, !tbaa !13
  br label %for.body8

for.body8:                                        ; preds = %for.body, %if.end67
  %gaplen.0274 = phi i32 [ 0, %for.body ], [ %gaplen.1, %if.end67 ]
  %spt.0273 = phi ptr [ %3, %for.body ], [ %spt.1254, %if.end67 ]
  %fpt.1272 = phi ptr [ %pat, %for.body ], [ %incdec.ptr68, %if.end67 ]
  %i.1271 = phi i32 [ 0, %for.body ], [ %inc70, %if.end67 ]
  %gc.0270 = phi i32 [ 0, %for.body ], [ %land.ext256, %if.end67 ]
  %cmp9.not = icmp eq i32 %i.1271, %len
  br i1 %cmp9.not, label %if.else, label %land.end

land.end:                                         ; preds = %for.body8
  %incdec.ptr11 = getelementptr inbounds i8, ptr %spt.0273, i64 1
  %4 = load i8, ptr %spt.0273, align 1, !tbaa !5
  %cmp13 = icmp eq i8 %4, 45
  br i1 %cmp13, label %if.then16, label %if.else

if.then16:                                        ; preds = %land.end
  %inc = add nsw i32 %gaplen.0274, 1
  br label %if.end67

if.else:                                          ; preds = %for.body8, %land.end
  %spt.1255 = phi ptr [ %incdec.ptr11, %land.end ], [ %spt.0273, %for.body8 ]
  %tobool17 = icmp ne i32 %gc.0270, 0
  %tobool18 = icmp ne i32 %gaplen.0274, 0
  %or.cond = select i1 %tobool17, i1 %tobool18, i1 false
  br i1 %or.cond, label %if.then19, label %if.end67

if.then19:                                        ; preds = %if.else
  %5 = load ptr, ptr %fpt.1272, align 8, !tbaa !13
  %tobool20.not = icmp eq ptr %5, null
  br i1 %tobool20.not, label %if.then40, label %for.cond22.preheader

for.cond22.preheader:                             ; preds = %if.then19
  %arrayidx24266 = getelementptr inbounds %struct._Gappattern, ptr %5, i64 1
  %6 = load i32, ptr %arrayidx24266, align 4, !tbaa !495
  %cmp26.not267 = icmp eq i32 %6, -1
  br i1 %cmp26.not267, label %if.then40, label %for.body28

for.body28:                                       ; preds = %for.cond22.preheader, %for.inc
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc ], [ 1, %for.cond22.preheader ]
  %7 = phi i32 [ %8, %for.inc ], [ %6, %for.cond22.preheader ]
  %cmp32 = icmp eq i32 %7, %gaplen.0274
  br i1 %cmp32, label %if.end61.loopexit, label %for.inc

for.inc:                                          ; preds = %for.body28
  %indvars.iv.next = add nuw i64 %indvars.iv, 1
  %arrayidx24 = getelementptr inbounds %struct._Gappattern, ptr %5, i64 %indvars.iv.next
  %8 = load i32, ptr %arrayidx24, align 4, !tbaa !495
  %cmp26.not = icmp eq i32 %8, -1
  br i1 %cmp26.not, label %if.then40.loopexit, label %for.body28, !llvm.loop !497

if.then40.loopexit:                               ; preds = %for.inc
  %9 = trunc i64 %indvars.iv.next to i32
  br label %if.then40

if.then40:                                        ; preds = %if.then40.loopexit, %for.cond22.preheader, %if.then19
  %k.1.ph = phi i32 [ 1, %if.then19 ], [ 1, %for.cond22.preheader ], [ %9, %if.then40.loopexit ]
  %add41 = add nuw nsw i32 %k.1.ph, 3
  %conv42 = zext i32 %add41 to i64
  %mul = shl nuw nsw i64 %conv42, 3
  %call = tail call ptr @realloc(ptr noundef %5, i64 noundef %mul) #37
  store ptr %call, ptr %fpt.1272, align 8, !tbaa !13
  %tobool43.not = icmp eq ptr %call, null
  br i1 %tobool43.not, label %if.then44, label %if.end47

if.then44:                                        ; preds = %if.then40
  %10 = load ptr, ptr @stderr, align 8, !tbaa !13
  %11 = tail call i64 @fwrite(ptr nonnull @.str.34, i64 29, i64 1, ptr %10) #32
  %12 = load ptr, ptr @stderr, align 8, !tbaa !13
  %13 = tail call i64 @fwrite(ptr nonnull @.str.35, i64 53, i64 1, ptr %12) #32
  tail call void @exit(i32 noundef 1) #33
  unreachable

if.end47:                                         ; preds = %if.then40
  %idxprom48 = zext i32 %k.1.ph to i64
  %freq = getelementptr inbounds %struct._Gappattern, ptr %call, i64 %idxprom48, i32 1
  store float 0.000000e+00, ptr %freq, align 4, !tbaa !498
  %arrayidx51 = getelementptr inbounds %struct._Gappattern, ptr %call, i64 %idxprom48
  store i32 %gaplen.0274, ptr %arrayidx51, align 4, !tbaa !495
  %add53 = add nuw nsw i32 %k.1.ph, 1
  %idxprom54 = zext i32 %add53 to i64
  %arrayidx55 = getelementptr inbounds %struct._Gappattern, ptr %call, i64 %idxprom54
  store i32 -1, ptr %arrayidx55, align 4, !tbaa !495
  %freq60 = getelementptr inbounds %struct._Gappattern, ptr %call, i64 %idxprom54, i32 1
  store float 0.000000e+00, ptr %freq60, align 4, !tbaa !498
  br label %if.end61

if.end61.loopexit:                                ; preds = %for.body28
  %.pre = and i64 %indvars.iv, 4294967295
  %freq64.phi.trans.insert = getelementptr inbounds %struct._Gappattern, ptr %5, i64 %.pre, i32 1
  %.pre303 = load float, ptr %freq64.phi.trans.insert, align 4, !tbaa !498
  br label %if.end61

if.end61:                                         ; preds = %if.end61.loopexit, %if.end47
  %14 = phi float [ %.pre303, %if.end61.loopexit ], [ 0.000000e+00, %if.end47 ]
  %idxprom62.pre-phi = phi i64 [ %.pre, %if.end61.loopexit ], [ %idxprom48, %if.end47 ]
  %15 = phi ptr [ %5, %if.end61.loopexit ], [ %call, %if.end47 ]
  %freq64 = getelementptr inbounds %struct._Gappattern, ptr %15, i64 %idxprom62.pre-phi, i32 1
  %add65 = fadd float %14, %conv
  store float %add65, ptr %freq64, align 4, !tbaa !498
  br label %if.end67

if.end67:                                         ; preds = %if.else, %if.end61, %if.then16
  %land.ext256 = phi i32 [ 1, %if.then16 ], [ 0, %if.end61 ], [ 0, %if.else ]
  %spt.1254 = phi ptr [ %incdec.ptr11, %if.then16 ], [ %spt.1255, %if.end61 ], [ %spt.1255, %if.else ]
  %gaplen.1 = phi i32 [ %inc, %if.then16 ], [ 0, %if.end61 ], [ %gaplen.0274, %if.else ]
  %incdec.ptr68 = getelementptr inbounds ptr, ptr %fpt.1272, i64 1
  %inc70 = add nuw i32 %i.1271, 1
  %exitcond.not = icmp eq i32 %i.1271, %len
  br i1 %exitcond.not, label %for.cond4.for.inc72_crit_edge, label %for.body8, !llvm.loop !499

for.cond4.for.inc72_crit_edge:                    ; preds = %if.end67
  %indvars.iv.next292 = add nuw nsw i64 %indvars.iv291, 1
  %exitcond294.not = icmp eq i64 %indvars.iv.next292, %wide.trip.count
  br i1 %exitcond294.not, label %for.cond75.preheader, label %for.body, !llvm.loop !500

for.body79:                                       ; preds = %for.body79.preheader, %for.inc168
  %indvars.iv298 = phi i64 [ 0, %for.body79.preheader ], [ %indvars.iv.next299, %for.inc168 ]
  %arrayidx81 = getelementptr inbounds ptr, ptr %pat, i64 %indvars.iv298
  %16 = load ptr, ptr %arrayidx81, align 8, !tbaa !13
  %tobool82.not = icmp eq ptr %16, null
  br i1 %tobool82.not, label %if.else136, label %if.then83

if.then83:                                        ; preds = %for.body79
  store i32 0, ptr %16, align 4, !tbaa !495
  %freq91 = getelementptr inbounds %struct._Gappattern, ptr %16, i64 0, i32 1
  store float 0.000000e+00, ptr %freq91, align 4, !tbaa !498
  %arrayidx96279 = getelementptr inbounds %struct._Gappattern, ptr %16, i64 1
  %17 = load i32, ptr %arrayidx96279, align 4, !tbaa !495
  %cmp98.not280 = icmp eq i32 %17, -1
  br i1 %cmp98.not280, label %for.end113, label %for.body100

for.body100:                                      ; preds = %if.then83, %for.body100
  %indvars.iv295 = phi i64 [ %indvars.iv.next296, %for.body100 ], [ 1, %if.then83 ]
  %18 = phi float [ %add110, %for.body100 ], [ 0.000000e+00, %if.then83 ]
  %freq105 = getelementptr inbounds %struct._Gappattern, ptr %16, i64 %indvars.iv295, i32 1
  %19 = load float, ptr %freq105, align 4, !tbaa !498
  %add110 = fadd float %19, %18
  %indvars.iv.next296 = add nuw nsw i64 %indvars.iv295, 1
  %arrayidx96 = getelementptr inbounds %struct._Gappattern, ptr %16, i64 %indvars.iv.next296
  %20 = load i32, ptr %arrayidx96, align 4, !tbaa !495
  %cmp98.not = icmp eq i32 %20, -1
  br i1 %cmp98.not, label %for.end113.loopexit, label %for.body100, !llvm.loop !501

for.end113.loopexit:                              ; preds = %for.body100
  store float %add110, ptr %freq91, align 4, !tbaa !498
  br label %for.end113

for.end113:                                       ; preds = %for.end113.loopexit, %if.then83
  %21 = phi float [ 0.000000e+00, %if.then83 ], [ %add110, %for.end113.loopexit ]
  %idxprom95.lcssa278 = phi i64 [ 1, %if.then83 ], [ %indvars.iv.next296, %for.end113.loopexit ]
  %arrayidx96.le = getelementptr inbounds %struct._Gappattern, ptr %16, i64 %idxprom95.lcssa278
  %conv119 = fsub float 1.000000e+00, %21
  %freq124 = getelementptr inbounds %struct._Gappattern, ptr %16, i64 %idxprom95.lcssa278, i32 1
  store float %conv119, ptr %freq124, align 4, !tbaa !498
  store i32 0, ptr %arrayidx96.le, align 4, !tbaa !495
  %add132 = add i64 %idxprom95.lcssa278, 1
  %idxprom133 = and i64 %add132, 4294967295
  %arrayidx134 = getelementptr inbounds %struct._Gappattern, ptr %16, i64 %idxprom133
  br label %for.inc168

if.else136:                                       ; preds = %for.body79
  %call137 = tail call noalias dereferenceable_or_null(24) ptr @calloc(i64 noundef 3, i64 noundef 8) #38
  store ptr %call137, ptr %arrayidx81, align 8, !tbaa !13
  %freq143 = getelementptr inbounds %struct._Gappattern, ptr %call137, i64 0, i32 1
  store float 0.000000e+00, ptr %freq143, align 4, !tbaa !498
  store i32 0, ptr %call137, align 4, !tbaa !495
  %freq158 = getelementptr inbounds %struct._Gappattern, ptr %call137, i64 1, i32 1
  store float 1.000000e+00, ptr %freq158, align 4, !tbaa !498
  %arrayidx161 = getelementptr inbounds %struct._Gappattern, ptr %call137, i64 1
  store i32 0, ptr %arrayidx161, align 4, !tbaa !495
  %arrayidx165 = getelementptr inbounds %struct._Gappattern, ptr %call137, i64 2
  br label %for.inc168

for.inc168:                                       ; preds = %for.end113, %if.else136
  %arrayidx134.sink = phi ptr [ %arrayidx134, %for.end113 ], [ %arrayidx165, %if.else136 ]
  store i32 -1, ptr %arrayidx134.sink, align 4, !tbaa !495
  %indvars.iv.next299 = add nuw nsw i64 %indvars.iv298, 1
  %exitcond302.not = icmp eq i64 %indvars.iv.next299, %wide.trip.count301
  br i1 %exitcond302.not, label %for.end170, label %for.body79, !llvm.loop !502

for.end170:                                       ; preds = %for.inc168, %for.body.lr.ph.split.us, %for.cond.preheader.thread, %for.cond75.preheader
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local float @naiveRpairscore(i32 noundef %n1, i32 noundef %n2, ptr nocapture noundef readonly %seq1, ptr nocapture noundef readonly %seq2, ptr nocapture noundef readonly %eff1, ptr nocapture noundef readonly %eff2, i32 noundef %penal) local_unnamed_addr #2 {
entry:
  %cmp345 = icmp sgt i32 %n1, 0
  %cmp2342 = icmp sgt i32 %n2, 0
  %or.cond = and i1 %cmp345, %cmp2342
  br i1 %or.cond, label %for.cond1.preheader.us.preheader, label %for.end241

for.cond1.preheader.us.preheader:                 ; preds = %entry
  %wide.trip.count354 = zext i32 %n1 to i64
  %wide.trip.count = zext i32 %n2 to i64
  br label %for.cond1.preheader.us

for.cond1.preheader.us:                           ; preds = %for.cond1.preheader.us.preheader, %for.cond1.for.inc239_crit_edge.us
  %indvars.iv351 = phi i64 [ 0, %for.cond1.preheader.us.preheader ], [ %indvars.iv.next352, %for.cond1.for.inc239_crit_edge.us ]
  %val.0346.us = phi float [ 0.000000e+00, %for.cond1.preheader.us.preheader ], [ %conv238.us, %for.cond1.for.inc239_crit_edge.us ]
  %arrayidx.us = getelementptr inbounds double, ptr %eff1, i64 %indvars.iv351
  %0 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %arrayidx7.us = getelementptr inbounds ptr, ptr %seq1, i64 %indvars.iv351
  %1 = load ptr, ptr %arrayidx7.us, align 8, !tbaa !13
  %2 = load i8, ptr %1, align 1, !tbaa !5
  %cmp10.us = icmp eq i8 %2, 45
  %idxprom25.us = sext i8 %2 to i64
  br label %for.body3.us

for.body3.us:                                     ; preds = %for.cond1.preheader.us, %while.end.us
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader.us ], [ %indvars.iv.next, %while.end.us ]
  %val.1344.us = phi float [ %val.0346.us, %for.cond1.preheader.us ], [ %conv238.us, %while.end.us ]
  %arrayidx5.us = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv
  %3 = load double, ptr %arrayidx5.us, align 8, !tbaa !20
  %mul.us = fmul double %0, %3
  %arrayidx9.us = getelementptr inbounds ptr, ptr %seq2, i64 %indvars.iv
  %4 = load ptr, ptr %arrayidx9.us, align 8, !tbaa !13
  %5 = load i8, ptr %4, align 1, !tbaa !5
  %cmp13.not.us = icmp eq i8 %5, 45
  %spec.select307.us = select i1 %cmp13.not.us, i32 %penal, i32 0
  %spec.select.us = select i1 %cmp13.not.us, i32 0, i32 %penal
  %pv.1.us = select i1 %cmp10.us, i32 %spec.select.us, i32 %spec.select307.us
  %idxprom29.us = sext i8 %5 to i64
  %arrayidx30.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom25.us, i64 %idxprom29.us
  %6 = load i32, ptr %arrayidx30.us, align 4, !tbaa !10
  %conv31.us = sitofp i32 %6 to float
  %conv32.us = fpext float %conv31.us to double
  %conv33.us = sitofp i32 %pv.1.us to double
  %7 = tail call double @llvm.fmuladd.f64(double %conv33.us, double 5.000000e-01, double %conv32.us)
  %add.us = fadd double %7, 0.000000e+00
  br label %while.cond.us

while.cond.us:                                    ; preds = %if.end218.us, %for.body3.us
  %.pr.us = phi i8 [ %5, %for.body3.us ], [ %13, %if.end218.us ]
  %8 = phi i8 [ %2, %for.body3.us ], [ %14, %if.end218.us ]
  %valf.0.in.us = phi double [ %add.us, %for.body3.us ], [ %add231.us, %if.end218.us ]
  %.pn.us = phi ptr [ %1, %for.body3.us ], [ %p1.0.us, %if.end218.us ]
  %.pn306.us = phi ptr [ %4, %for.body3.us ], [ %p2.0.us, %if.end218.us ]
  %p2.0.us = getelementptr i8, ptr %.pn306.us, i64 1
  %p1.0.us = getelementptr i8, ptr %.pn.us, i64 1
  %valf.0.us = fptrunc double %valf.0.in.us to float
  switch i8 %8, label %land.lhs.true40.us [
    i8 0, label %while.end.us
    i8 45, label %land.lhs.true85.us
  ]

land.lhs.true85.us:                               ; preds = %while.cond.us
  %cmp87.us = icmp eq i8 %.pr.us, 45
  %9 = load i8, ptr %p1.0.us, align 1, !tbaa !5
  %cmp91.us = icmp eq i8 %9, 45
  %10 = load i8, ptr %p2.0.us, align 1, !tbaa !5
  %cmp95.not.us = icmp eq i8 %10, 45
  br i1 %cmp87.us, label %if.then89.us, label %if.then180.us

if.then89.us:                                     ; preds = %land.lhs.true85.us
  br i1 %cmp91.us, label %if.end98.thread.us, label %land.lhs.true102.us

land.lhs.true102.us:                              ; preds = %if.then89.us
  %spec.select311.us = select i1 %cmp95.not.us, i32 %penal, i32 0
  br label %if.end218.us

if.end98.thread.us:                               ; preds = %if.then89.us
  %spec.select310.us = select i1 %cmp95.not.us, i32 0, i32 %penal
  br label %if.end218.us

if.then180.us:                                    ; preds = %land.lhs.true85.us
  br i1 %cmp91.us, label %land.lhs.true212.us, label %if.end208.us

if.end208.us:                                     ; preds = %if.then180.us
  %mul198.us = zext i1 %cmp95.not.us to i32
  %spec.select316.us = shl nsw i32 %penal, %mul198.us
  br label %if.end218.us

land.lhs.true212.us:                              ; preds = %if.then180.us
  %spec.select317.us = select i1 %cmp95.not.us, i32 %penal, i32 0
  br label %if.end218.us

while.end.us:                                     ; preds = %while.cond.us
  %conv235.us = fpext float %valf.0.us to double
  %conv237.us = fpext float %val.1344.us to double
  %11 = tail call double @llvm.fmuladd.f64(double %mul.us, double %conv235.us, double %conv237.us)
  %conv238.us = fptrunc double %11 to float
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond1.for.inc239_crit_edge.us, label %for.body3.us, !llvm.loop !503

land.lhs.true40.us:                               ; preds = %while.cond.us
  %cmp42.not.us = icmp eq i8 %.pr.us, 45
  %.pre357 = load i8, ptr %p1.0.us, align 1, !tbaa !5
  %cmp136.us = icmp eq i8 %.pre357, 45
  %12 = load i8, ptr %p2.0.us, align 1, !tbaa !5
  br i1 %cmp42.not.us, label %if.then134.us, label %if.then44.us

if.then44.us:                                     ; preds = %land.lhs.true40.us
  %cmp50.not.us = icmp eq i8 %12, 45
  br i1 %cmp136.us, label %if.end53.thread.us, label %land.lhs.true57.us

land.lhs.true57.us:                               ; preds = %if.then44.us
  %spec.select309.us = select i1 %cmp50.not.us, i32 %penal, i32 0
  br label %if.end218.us

if.end53.thread.us:                               ; preds = %if.then44.us
  %spec.select308.us = select i1 %cmp50.not.us, i32 0, i32 %penal
  br label %if.end218.us

if.then134.us:                                    ; preds = %land.lhs.true40.us
  br i1 %cmp136.us, label %land.lhs.true166.us, label %if.end162.us

if.end162.us:                                     ; preds = %if.then134.us
  %cmp159.not.us = icmp eq i8 %12, 45
  %spec.select313.us = select i1 %cmp159.not.us, i32 0, i32 %penal
  br label %if.end218.us

land.lhs.true166.us:                              ; preds = %if.then134.us
  %cmp140.not.us = icmp ne i8 %12, 45
  %mul143 = zext i1 %cmp140.not.us to i32
  %spec.select314.us = shl nsw i32 %penal, %mul143
  br label %if.end218.us

if.end218.us:                                     ; preds = %land.lhs.true57.us, %if.end53.thread.us, %land.lhs.true102.us, %if.end98.thread.us, %land.lhs.true166.us, %if.end162.us, %land.lhs.true212.us, %if.end208.us
  %13 = phi i8 [ %10, %if.end208.us ], [ %10, %land.lhs.true212.us ], [ %12, %land.lhs.true166.us ], [ %12, %if.end162.us ], [ %10, %land.lhs.true102.us ], [ %10, %if.end98.thread.us ], [ %12, %land.lhs.true57.us ], [ %12, %if.end53.thread.us ]
  %14 = phi i8 [ %9, %if.end208.us ], [ 45, %land.lhs.true212.us ], [ 45, %land.lhs.true166.us ], [ %.pre357, %if.end162.us ], [ %9, %land.lhs.true102.us ], [ 45, %if.end98.thread.us ], [ %.pre357, %land.lhs.true57.us ], [ 45, %if.end53.thread.us ]
  %pv.13.us = phi i32 [ %spec.select316.us, %if.end208.us ], [ %spec.select317.us, %land.lhs.true212.us ], [ %spec.select314.us, %land.lhs.true166.us ], [ %spec.select313.us, %if.end162.us ], [ %spec.select311.us, %land.lhs.true102.us ], [ %spec.select310.us, %if.end98.thread.us ], [ %spec.select309.us, %land.lhs.true57.us ], [ %spec.select308.us, %if.end53.thread.us ]
  %idxprom221.us = sext i8 %14 to i64
  %idxprom225.us = sext i8 %13 to i64
  %arrayidx226.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom221.us, i64 %idxprom225.us
  %15 = load i32, ptr %arrayidx226.us, align 4, !tbaa !10
  %conv227.us = sitofp i32 %15 to double
  %conv228.us = sitofp i32 %pv.13.us to double
  %16 = tail call double @llvm.fmuladd.f64(double %conv228.us, double 5.000000e-01, double %conv227.us)
  %conv230.us = fpext float %valf.0.us to double
  %add231.us = fadd double %16, %conv230.us
  br label %while.cond.us, !llvm.loop !504

for.cond1.for.inc239_crit_edge.us:                ; preds = %while.end.us
  %indvars.iv.next352 = add nuw nsw i64 %indvars.iv351, 1
  %exitcond355.not = icmp eq i64 %indvars.iv.next352, %wide.trip.count354
  br i1 %exitcond355.not, label %for.end241, label %for.cond1.preheader.us, !llvm.loop !505

for.end241:                                       ; preds = %for.cond1.for.inc239_crit_edge.us, %entry
  %val.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %conv238.us, %for.cond1.for.inc239_crit_edge.us ]
  %17 = load ptr, ptr @stderr, align 8, !tbaa !13
  %conv242 = fpext float %val.0.lcssa to double
  %call = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %17, ptr noundef nonnull @.str.36, double noundef %conv242) #32
  ret float %val.0.lcssa
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local float @naiveQpairscore(i32 noundef %n1, i32 noundef %n2, ptr nocapture noundef readnone %seq1, ptr nocapture noundef readnone %seq2, ptr nocapture noundef readnone %eff1, ptr nocapture noundef readnone %eff2, i32 noundef %penal) local_unnamed_addr #20 {
entry:
  ret float 0.000000e+00
}

; Function Attrs: nofree nounwind uwtable
define dso_local float @naiveHpairscore(i32 noundef %n1, i32 noundef %n2, ptr nocapture noundef readonly %seq1, ptr nocapture noundef readonly %seq2, ptr nocapture noundef readonly %eff1, ptr nocapture noundef readonly %eff2, i32 noundef %penal) local_unnamed_addr #2 {
entry:
  %cmp349 = icmp sgt i32 %n1, 0
  br i1 %cmp349, label %for.cond1.preheader.lr.ph, label %for.end254

for.cond1.preheader.lr.ph:                        ; preds = %entry
  %cmp2346 = icmp sgt i32 %n2, 0
  %tobool.not.old = icmp eq i32 %penal, 0
  %conv25 = sitofp i32 %penal to double
  br i1 %cmp2346, label %for.cond1.preheader.us.preheader, label %for.end254

for.cond1.preheader.us.preheader:                 ; preds = %for.cond1.preheader.lr.ph
  %wide.trip.count358 = zext i32 %n1 to i64
  %wide.trip.count = zext i32 %n2 to i64
  br label %for.cond1.preheader.us

for.cond1.preheader.us:                           ; preds = %for.cond1.preheader.us.preheader, %for.cond1.for.inc252_crit_edge.us
  %indvars.iv355 = phi i64 [ 0, %for.cond1.preheader.us.preheader ], [ %indvars.iv.next356, %for.cond1.for.inc252_crit_edge.us ]
  %val.0350.us = phi float [ 0.000000e+00, %for.cond1.preheader.us.preheader ], [ %conv251.us, %for.cond1.for.inc252_crit_edge.us ]
  %arrayidx.us = getelementptr inbounds double, ptr %eff1, i64 %indvars.iv355
  %arrayidx7.us = getelementptr inbounds ptr, ptr %seq1, i64 %indvars.iv355
  %0 = trunc i64 %indvars.iv355 to i32
  br label %for.body3.us

for.body3.us:                                     ; preds = %for.cond1.preheader.us, %while.end.us
  %indvars.iv = phi i64 [ 0, %for.cond1.preheader.us ], [ %indvars.iv.next, %while.end.us ]
  %val.1348.us = phi float [ %val.0350.us, %for.cond1.preheader.us ], [ %conv251.us, %while.end.us ]
  %1 = load double, ptr %arrayidx.us, align 8, !tbaa !20
  %arrayidx5.us = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv
  %2 = load double, ptr %arrayidx5.us, align 8, !tbaa !20
  %mul.us = fmul double %1, %2
  %3 = load ptr, ptr %arrayidx7.us, align 8, !tbaa !13
  %arrayidx9.us = getelementptr inbounds ptr, ptr %seq2, i64 %indvars.iv
  %4 = load ptr, ptr %arrayidx9.us, align 8, !tbaa !13
  %5 = load i8, ptr %3, align 1, !tbaa !5
  %cmp10.us = icmp eq i8 %5, 45
  %6 = load i8, ptr %4, align 1, !tbaa !5
  br i1 %cmp10.us, label %if.end.thread.us, label %land.lhs.true18.us

land.lhs.true18.us:                               ; preds = %for.body3.us
  %cmp20.us = icmp ne i8 %6, 45
  %or.cond345.us = or i1 %tobool.not.old, %cmp20.us
  br i1 %or.cond345.us, label %if.end37.us, label %if.then24.us

if.end.thread.us:                                 ; preds = %for.body3.us
  %cmp13.not.us = icmp eq i8 %6, 45
  %or.cond.us = or i1 %tobool.not.old, %cmp13.not.us
  br i1 %or.cond.us, label %if.end37.us, label %if.then24.us

if.then24.us:                                     ; preds = %if.end.thread.us, %land.lhs.true18.us
  %7 = load ptr, ptr @stderr, align 8, !tbaa !13
  %mul26.us = fmul double %mul.us, %conv25
  %mul27.us = fmul double %mul26.us, 5.000000e-01
  %8 = trunc i64 %indvars.iv to i32
  %call.us = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %7, ptr noundef nonnull @.str.37, double noundef %mul27.us, i32 noundef %0, i32 noundef %8, i32 noundef 0, i32 noundef 0) #32
  %.pre = load i8, ptr %3, align 1, !tbaa !5
  %.pre360 = load i8, ptr %4, align 1, !tbaa !5
  br label %if.end37.us

if.end37.us:                                      ; preds = %if.then24.us, %if.end.thread.us, %land.lhs.true18.us
  %9 = phi i8 [ %.pre360, %if.then24.us ], [ %6, %land.lhs.true18.us ], [ %6, %if.end.thread.us ]
  %10 = phi i8 [ %.pre, %if.then24.us ], [ %5, %land.lhs.true18.us ], [ 45, %if.end.thread.us ]
  %pv.1326.us = phi i32 [ %penal, %if.then24.us ], [ 0, %land.lhs.true18.us ], [ 0, %if.end.thread.us ]
  %idxprom39.us = sext i8 %10 to i64
  %idxprom43.us = sext i8 %9 to i64
  %arrayidx44.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom39.us, i64 %idxprom43.us
  %11 = load i32, ptr %arrayidx44.us, align 4, !tbaa !10
  %conv45.us = sitofp i32 %11 to float
  %conv46.us = fpext float %conv45.us to double
  %conv47.us = sitofp i32 %pv.1326.us to double
  %12 = tail call double @llvm.fmuladd.f64(double %conv47.us, double 5.000000e-01, double %conv46.us)
  %add.us = fadd double %12, 0.000000e+00
  br label %while.cond.us

while.cond.us:                                    ; preds = %if.end231.us, %if.end37.us
  %.pr.us = phi i8 [ %9, %if.end37.us ], [ %19, %if.end231.us ]
  %13 = phi i8 [ %10, %if.end37.us ], [ %18, %if.end231.us ]
  %valf.0.in.us = phi double [ %add.us, %if.end37.us ], [ %add244.us, %if.end231.us ]
  %.pn.us = phi ptr [ %3, %if.end37.us ], [ %p1.0.us, %if.end231.us ]
  %.pn317.us = phi ptr [ %4, %if.end37.us ], [ %p2.0.us, %if.end231.us ]
  %p2.0.us = getelementptr i8, ptr %.pn317.us, i64 1
  %p1.0.us = getelementptr i8, ptr %.pn.us, i64 1
  %valf.0.us = fptrunc double %valf.0.in.us to float
  switch i8 %13, label %land.lhs.true55.us [
    i8 0, label %while.end.us
    i8 45, label %land.lhs.true190.us
  ]

land.lhs.true190.us:                              ; preds = %while.cond.us
  %cmp192.not.us = icmp eq i8 %.pr.us, 45
  %.pre362 = load i8, ptr %p1.0.us, align 1, !tbaa !5
  br i1 %cmp192.not.us, label %if.end231.us, label %if.then194.us

if.then194.us:                                    ; preds = %land.lhs.true190.us
  %cmp214.not.us = icmp eq i8 %.pre362, 45
  br i1 %cmp214.not.us, label %if.end231.us, label %land.lhs.true216.us

land.lhs.true216.us:                              ; preds = %if.then194.us
  %14 = load i8, ptr %p2.0.us, align 1, !tbaa !5
  %cmp218.not.us = icmp eq i8 %14, 45
  %spec.select322.us = select i1 %cmp218.not.us, i32 0, i32 %penal
  br label %if.end231.us

while.end.us:                                     ; preds = %while.cond.us
  %conv248.us = fpext float %valf.0.us to double
  %conv250.us = fpext float %val.1348.us to double
  %15 = tail call double @llvm.fmuladd.f64(double %mul.us, double %conv248.us, double %conv250.us)
  %conv251.us = fptrunc double %15 to float
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond1.for.inc252_crit_edge.us, label %for.body3.us, !llvm.loop !506

land.lhs.true55.us:                               ; preds = %while.cond.us
  %cmp57.not.us = icmp eq i8 %.pr.us, 45
  %.pre361 = load i8, ptr %p1.0.us, align 1, !tbaa !5
  %cmp169.not.us = icmp eq i8 %.pre361, 45
  br i1 %cmp57.not.us, label %if.then149.us, label %if.then59.us

if.then59.us:                                     ; preds = %land.lhs.true55.us
  %16 = load i8, ptr %p2.0.us, align 1, !tbaa !5
  %cmp65.not.us = icmp eq i8 %16, 45
  br i1 %cmp169.not.us, label %if.end68.thread.us, label %land.lhs.true72.us

land.lhs.true72.us:                               ; preds = %if.then59.us
  %spec.select320.us = select i1 %cmp65.not.us, i32 %penal, i32 0
  br label %if.end231.us

if.end68.thread.us:                               ; preds = %if.then59.us
  %spec.select319.us = select i1 %cmp65.not.us, i32 0, i32 %penal
  br label %if.end231.us

if.then149.us:                                    ; preds = %land.lhs.true55.us
  br i1 %cmp169.not.us, label %if.end231.us, label %land.lhs.true171.us

land.lhs.true171.us:                              ; preds = %if.then149.us
  %17 = load i8, ptr %p2.0.us, align 1, !tbaa !5
  %cmp173.not.us = icmp eq i8 %17, 45
  %spec.select321.us = select i1 %cmp173.not.us, i32 0, i32 %penal
  br label %if.end231.us

if.end231.us:                                     ; preds = %land.lhs.true190.us, %land.lhs.true72.us, %if.end68.thread.us, %land.lhs.true171.us, %if.then149.us, %land.lhs.true216.us, %if.then194.us
  %18 = phi i8 [ 45, %if.then194.us ], [ %.pre362, %land.lhs.true216.us ], [ %.pre361, %land.lhs.true171.us ], [ 45, %if.then149.us ], [ 45, %if.end68.thread.us ], [ %.pre361, %land.lhs.true72.us ], [ %.pre362, %land.lhs.true190.us ]
  %pv.6.us = phi i32 [ 0, %if.then194.us ], [ %spec.select322.us, %land.lhs.true216.us ], [ %spec.select321.us, %land.lhs.true171.us ], [ 0, %if.then149.us ], [ %spec.select319.us, %if.end68.thread.us ], [ %spec.select320.us, %land.lhs.true72.us ], [ 0, %land.lhs.true190.us ]
  %idxprom234.us = sext i8 %18 to i64
  %19 = load i8, ptr %p2.0.us, align 1, !tbaa !5
  %idxprom238.us = sext i8 %19 to i64
  %arrayidx239.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom234.us, i64 %idxprom238.us
  %20 = load i32, ptr %arrayidx239.us, align 4, !tbaa !10
  %conv240.us = sitofp i32 %20 to double
  %conv241.us = sitofp i32 %pv.6.us to double
  %21 = tail call double @llvm.fmuladd.f64(double %conv241.us, double 5.000000e-01, double %conv240.us)
  %conv243.us = fpext float %valf.0.us to double
  %add244.us = fadd double %21, %conv243.us
  br label %while.cond.us, !llvm.loop !507

for.cond1.for.inc252_crit_edge.us:                ; preds = %while.end.us
  %indvars.iv.next356 = add nuw nsw i64 %indvars.iv355, 1
  %exitcond359.not = icmp eq i64 %indvars.iv.next356, %wide.trip.count358
  br i1 %exitcond359.not, label %for.end254, label %for.cond1.preheader.us, !llvm.loop !508

for.end254:                                       ; preds = %for.cond1.for.inc252_crit_edge.us, %for.cond1.preheader.lr.ph, %entry
  %val.0.lcssa = phi float [ 0.000000e+00, %entry ], [ 0.000000e+00, %for.cond1.preheader.lr.ph ], [ %conv251.us, %for.cond1.for.inc252_crit_edge.us ]
  %22 = load ptr, ptr @stderr, align 8, !tbaa !13
  %conv255 = fpext float %val.0.lcssa to double
  %call256 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %22, ptr noundef nonnull @.str.36, double noundef %conv255) #32
  ret float %val.0.lcssa
}

; Function Attrs: nounwind uwtable
define dso_local i32 @naivepairscore11(ptr nocapture noundef readonly %seq1, ptr nocapture noundef readonly %seq2, i32 noundef %penal) local_unnamed_addr #12 {
entry:
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %seq1) #31
  %add = shl i64 %call, 32
  %sext = add i64 %add, 4294967296
  %conv1 = ashr exact i64 %sext, 32
  %call2 = tail call noalias ptr @calloc(i64 noundef %conv1, i64 noundef 1) #38
  %call5 = tail call noalias ptr @calloc(i64 noundef %conv1, i64 noundef 1) #38
  br label %while.cond.i

while.cond.i:                                     ; preds = %if.end.i, %entry
  %r1.addr.0.i = phi ptr [ %call2, %entry ], [ %r1.addr.1.i, %if.end.i ]
  %r2.addr.0.i = phi ptr [ %call5, %entry ], [ %r2.addr.1.i, %if.end.i ]
  %i1.addr.0.i = phi ptr [ %seq1, %entry ], [ %i1.addr.1.i, %if.end.i ]
  %i2.addr.0.i = phi ptr [ %seq2, %entry ], [ %i2.addr.1.i, %if.end.i ]
  %0 = load i8, ptr %i1.addr.0.i, align 1, !tbaa !5
  switch i8 %0, label %if.else.i [
    i8 0, label %commongappickpair.exit
    i8 45, label %land.lhs.true.i
  ]

land.lhs.true.i:                                  ; preds = %while.cond.i
  %1 = load i8, ptr %i2.addr.0.i, align 1, !tbaa !5
  %cmp3.i = icmp eq i8 %1, 45
  br i1 %cmp3.i, label %if.end.i, label %if.else.i

if.else.i:                                        ; preds = %land.lhs.true.i, %while.cond.i
  %incdec.ptr7.i = getelementptr inbounds i8, ptr %r1.addr.0.i, i64 1
  store i8 %0, ptr %r1.addr.0.i, align 1, !tbaa !5
  %2 = load i8, ptr %i2.addr.0.i, align 1, !tbaa !5
  %incdec.ptr9.i = getelementptr inbounds i8, ptr %r2.addr.0.i, i64 1
  store i8 %2, ptr %r2.addr.0.i, align 1, !tbaa !5
  br label %if.end.i

if.end.i:                                         ; preds = %if.else.i, %land.lhs.true.i
  %r1.addr.1.i = phi ptr [ %incdec.ptr7.i, %if.else.i ], [ %r1.addr.0.i, %land.lhs.true.i ]
  %r2.addr.1.i = phi ptr [ %incdec.ptr9.i, %if.else.i ], [ %r2.addr.0.i, %land.lhs.true.i ]
  %i2.addr.1.i = getelementptr inbounds i8, ptr %i2.addr.0.i, i64 1
  %i1.addr.1.i = getelementptr inbounds i8, ptr %i1.addr.0.i, i64 1
  br label %while.cond.i, !llvm.loop !509

commongappickpair.exit:                           ; preds = %while.cond.i
  store i8 0, ptr %r1.addr.0.i, align 1, !tbaa !5
  store i8 0, ptr %r2.addr.0.i, align 1, !tbaa !5
  br label %while.condthread-pre-split

while.condthread-pre-split:                       ; preds = %while.condthread-pre-split.backedge, %commongappickpair.exit
  %vali.0.ph = phi i32 [ 0, %commongappickpair.exit ], [ %vali.0.ph.be, %while.condthread-pre-split.backedge ]
  %p1.0.ph = phi ptr [ %call2, %commongappickpair.exit ], [ %p1.0.ph.be, %while.condthread-pre-split.backedge ]
  %p2.0.ph = phi ptr [ %call5, %commongappickpair.exit ], [ %p2.0.ph.be, %while.condthread-pre-split.backedge ]
  %.pr = load i8, ptr %p1.0.ph, align 1, !tbaa !5
  br label %while.cond

while.cond.loopexit:                              ; preds = %while.body13
  br label %while.cond, !llvm.loop !510

while.cond:                                       ; preds = %while.cond.loopexit, %while.condthread-pre-split
  %3 = phi i8 [ %.pr, %while.condthread-pre-split ], [ %4, %while.cond.loopexit ]
  %vali.0 = phi i32 [ %vali.0.ph, %while.condthread-pre-split ], [ %add8, %while.cond.loopexit ]
  %p1.0 = phi ptr [ %p1.0.ph, %while.condthread-pre-split ], [ %incdec.ptr, %while.cond.loopexit ]
  %p2.0 = phi ptr [ %p2.0.ph, %while.condthread-pre-split ], [ %incdec.ptr14, %while.cond.loopexit ]
  switch i8 %3, label %if.end [
    i8 0, label %while.end36
    i8 45, label %while.body13.preheader
  ]

while.body13.preheader:                           ; preds = %while.cond
  %add8 = add nsw i32 %vali.0, %penal
  br label %while.body13

while.body13:                                     ; preds = %while.body13.preheader, %while.body13
  %p2.164 = phi ptr [ %incdec.ptr14, %while.body13 ], [ %p2.0, %while.body13.preheader ]
  %p1.163 = phi ptr [ %incdec.ptr, %while.body13 ], [ %p1.0, %while.body13.preheader ]
  %incdec.ptr = getelementptr inbounds i8, ptr %p1.163, i64 1
  %incdec.ptr14 = getelementptr inbounds i8, ptr %p2.164, i64 1
  %4 = load i8, ptr %incdec.ptr, align 1, !tbaa !5
  %cmp11 = icmp eq i8 %4, 45
  br i1 %cmp11, label %while.body13, label %while.cond.loopexit, !llvm.loop !511

if.end:                                           ; preds = %while.cond
  %5 = load i8, ptr %p2.0, align 1, !tbaa !5
  %cmp16 = icmp eq i8 %5, 45
  br i1 %cmp16, label %while.body24, label %if.end28

while.body24:                                     ; preds = %if.end, %while.body24
  %p2.268 = phi ptr [ %incdec.ptr26, %while.body24 ], [ %p2.0, %if.end ]
  %p1.267 = phi ptr [ %incdec.ptr25, %while.body24 ], [ %p1.0, %if.end ]
  %incdec.ptr25 = getelementptr inbounds i8, ptr %p1.267, i64 1
  %incdec.ptr26 = getelementptr inbounds i8, ptr %p2.268, i64 1
  %.pr56 = load i8, ptr %incdec.ptr26, align 1, !tbaa !5
  %cmp22 = icmp eq i8 %.pr56, 45
  br i1 %cmp22, label %while.body24, label %while.condthread-pre-split.backedge.loopexit, !llvm.loop !512

if.end28:                                         ; preds = %if.end
  %incdec.ptr29 = getelementptr inbounds i8, ptr %p1.0, i64 1
  %idxprom = sext i8 %3 to i64
  %incdec.ptr31 = getelementptr inbounds i8, ptr %p2.0, i64 1
  %idxprom33 = sext i8 %5 to i64
  %arrayidx34 = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom, i64 %idxprom33
  %6 = load i32, ptr %arrayidx34, align 4, !tbaa !10
  %add35 = add nsw i32 %6, %vali.0
  br label %while.condthread-pre-split.backedge

while.condthread-pre-split.backedge.loopexit:     ; preds = %while.body24
  %add19 = add nsw i32 %vali.0, %penal
  br label %while.condthread-pre-split.backedge

while.condthread-pre-split.backedge:              ; preds = %while.condthread-pre-split.backedge.loopexit, %if.end28
  %vali.0.ph.be = phi i32 [ %add35, %if.end28 ], [ %add19, %while.condthread-pre-split.backedge.loopexit ]
  %p1.0.ph.be = phi ptr [ %incdec.ptr29, %if.end28 ], [ %incdec.ptr25, %while.condthread-pre-split.backedge.loopexit ]
  %p2.0.ph.be = phi ptr [ %incdec.ptr31, %if.end28 ], [ %incdec.ptr26, %while.condthread-pre-split.backedge.loopexit ]
  br label %while.condthread-pre-split, !llvm.loop !510

while.end36:                                      ; preds = %while.cond
  tail call void @free(ptr noundef %call2) #34
  tail call void @free(ptr noundef %call5) #34
  ret i32 %vali.0
}

; Function Attrs: nounwind uwtable
define dso_local float @naivepairscore(i32 noundef %n1, i32 noundef %n2, ptr nocapture noundef readonly %seq1, ptr nocapture noundef readonly %seq2, ptr nocapture noundef readonly %eff1, ptr nocapture noundef readonly %eff2, i32 noundef %penal) local_unnamed_addr #12 {
entry:
  %0 = load ptr, ptr %seq1, align 8, !tbaa !13
  %call = tail call i64 @strlen(ptr noundef nonnull dereferenceable(1) %0) #31
  %add = shl i64 %call, 32
  %sext = add i64 %add, 4294967296
  %conv1 = ashr exact i64 %sext, 32
  %call2 = tail call noalias ptr @calloc(i64 noundef %conv1, i64 noundef 1) #38
  %call5 = tail call noalias ptr @calloc(i64 noundef %conv1, i64 noundef 1) #38
  %cmp104 = icmp sgt i32 %n1, 0
  %cmp8100 = icmp sgt i32 %n2, 0
  %or.cond = and i1 %cmp104, %cmp8100
  br i1 %or.cond, label %for.cond7.preheader.us.preheader, label %for.end57

for.cond7.preheader.us.preheader:                 ; preds = %entry
  %wide.trip.count119 = zext i32 %n1 to i64
  %wide.trip.count = zext i32 %n2 to i64
  br label %for.cond7.preheader.us

for.cond7.preheader.us:                           ; preds = %for.cond7.preheader.us.preheader, %for.cond7.for.inc55_crit_edge.us
  %indvars.iv116 = phi i64 [ 0, %for.cond7.preheader.us.preheader ], [ %indvars.iv.next117, %for.cond7.for.inc55_crit_edge.us ]
  %val.0105.us = phi float [ 0.000000e+00, %for.cond7.preheader.us.preheader ], [ %9, %for.cond7.for.inc55_crit_edge.us ]
  %arrayidx11.us = getelementptr inbounds double, ptr %eff1, i64 %indvars.iv116
  %arrayidx16.us = getelementptr inbounds ptr, ptr %seq1, i64 %indvars.iv116
  br label %for.body10.us

for.body10.us:                                    ; preds = %for.cond7.preheader.us, %while.end52.us
  %indvars.iv = phi i64 [ 0, %for.cond7.preheader.us ], [ %indvars.iv.next, %while.end52.us ]
  %val.1101.us = phi float [ %val.0105.us, %for.cond7.preheader.us ], [ %9, %while.end52.us ]
  %1 = load double, ptr %arrayidx11.us, align 8, !tbaa !20
  %arrayidx13.us = getelementptr inbounds double, ptr %eff2, i64 %indvars.iv
  %2 = load double, ptr %arrayidx13.us, align 8, !tbaa !20
  %mul.us = fmul double %1, %2
  %3 = load ptr, ptr %arrayidx16.us, align 8, !tbaa !13
  %arrayidx18.us = getelementptr inbounds ptr, ptr %seq2, i64 %indvars.iv
  %4 = load ptr, ptr %arrayidx18.us, align 8, !tbaa !13
  br label %while.cond.i.us

while.cond.i.us:                                  ; preds = %if.end.i.us, %for.body10.us
  %r1.addr.0.i.us = phi ptr [ %call2, %for.body10.us ], [ %r1.addr.1.i.us, %if.end.i.us ]
  %r2.addr.0.i.us = phi ptr [ %call5, %for.body10.us ], [ %r2.addr.1.i.us, %if.end.i.us ]
  %i1.addr.0.i.us = phi ptr [ %3, %for.body10.us ], [ %i1.addr.1.i.us, %if.end.i.us ]
  %i2.addr.0.i.us = phi ptr [ %4, %for.body10.us ], [ %i2.addr.1.i.us, %if.end.i.us ]
  %5 = load i8, ptr %i1.addr.0.i.us, align 1, !tbaa !5
  switch i8 %5, label %if.else.i.us [
    i8 0, label %commongappickpair.exit.us
    i8 45, label %land.lhs.true.i.us
  ]

land.lhs.true.i.us:                               ; preds = %while.cond.i.us
  %6 = load i8, ptr %i2.addr.0.i.us, align 1, !tbaa !5
  %cmp3.i.us = icmp eq i8 %6, 45
  br i1 %cmp3.i.us, label %if.end.i.us, label %if.else.i.us

commongappickpair.exit.us:                        ; preds = %while.cond.i.us
  store i8 0, ptr %r1.addr.0.i.us, align 1, !tbaa !5
  store i8 0, ptr %r2.addr.0.i.us, align 1, !tbaa !5
  br label %while.condthread-pre-split.us

while.condthread-pre-split.us:                    ; preds = %while.condthread-pre-split.us.backedge, %commongappickpair.exit.us
  %vali.0.ph.us = phi i32 [ 0, %commongappickpair.exit.us ], [ %vali.0.ph.us.be, %while.condthread-pre-split.us.backedge ]
  %p1.0.ph.us = phi ptr [ %call2, %commongappickpair.exit.us ], [ %p1.0.ph.us.be, %while.condthread-pre-split.us.backedge ]
  %p2.0.ph.us = phi ptr [ %call5, %commongappickpair.exit.us ], [ %p2.0.ph.us.be, %while.condthread-pre-split.us.backedge ]
  %.pr.us = load i8, ptr %p1.0.ph.us, align 1, !tbaa !5
  br label %while.cond.us

while.cond.us:                                    ; preds = %while.cond.loopexit.us, %while.condthread-pre-split.us
  %7 = phi i8 [ %.pr.us, %while.condthread-pre-split.us ], [ %8, %while.cond.loopexit.us ]
  %vali.0.us = phi i32 [ %vali.0.ph.us, %while.condthread-pre-split.us ], [ %add22.us, %while.cond.loopexit.us ]
  %p1.0.us = phi ptr [ %p1.0.ph.us, %while.condthread-pre-split.us ], [ %incdec.ptr.us, %while.cond.loopexit.us ]
  %p2.0.us = phi ptr [ %p2.0.ph.us, %while.condthread-pre-split.us ], [ %incdec.ptr28.us, %while.cond.loopexit.us ]
  switch i8 %7, label %if.end.us [
    i8 0, label %while.end52.us
    i8 45, label %while.body27.us.preheader
  ]

while.body27.us.preheader:                        ; preds = %while.cond.us
  %add22.us = add nsw i32 %vali.0.us, %penal
  br label %while.body27.us

while.body27.us:                                  ; preds = %while.body27.us.preheader, %while.body27.us
  %p2.195.us = phi ptr [ %incdec.ptr28.us, %while.body27.us ], [ %p2.0.us, %while.body27.us.preheader ]
  %p1.194.us = phi ptr [ %incdec.ptr.us, %while.body27.us ], [ %p1.0.us, %while.body27.us.preheader ]
  %incdec.ptr.us = getelementptr inbounds i8, ptr %p1.194.us, i64 1
  %incdec.ptr28.us = getelementptr inbounds i8, ptr %p2.195.us, i64 1
  %8 = load i8, ptr %incdec.ptr.us, align 1, !tbaa !5
  %cmp25.us = icmp eq i8 %8, 45
  br i1 %cmp25.us, label %while.body27.us, label %while.cond.loopexit.us, !llvm.loop !513

while.end52.us:                                   ; preds = %while.cond.us
  %conv14.us = fptrunc double %mul.us to float
  %conv53.us = sitofp i32 %vali.0.us to float
  %9 = tail call float @llvm.fmuladd.f32(float %conv14.us, float %conv53.us, float %val.1101.us)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond7.for.inc55_crit_edge.us, label %for.body10.us, !llvm.loop !514

if.end.us:                                        ; preds = %while.cond.us
  %10 = load i8, ptr %p2.0.us, align 1, !tbaa !5
  %cmp30.us = icmp eq i8 %10, 45
  br i1 %cmp30.us, label %while.body38.us, label %if.end42.us

if.end42.us:                                      ; preds = %if.end.us
  %incdec.ptr43.us = getelementptr inbounds i8, ptr %p1.0.us, i64 1
  %idxprom45.us = sext i8 %7 to i64
  %incdec.ptr47.us = getelementptr inbounds i8, ptr %p2.0.us, i64 1
  %idxprom49.us = sext i8 %10 to i64
  %arrayidx50.us = getelementptr inbounds [128 x [128 x i32]], ptr @amino_dis, i64 0, i64 %idxprom45.us, i64 %idxprom49.us
  %11 = load i32, ptr %arrayidx50.us, align 4, !tbaa !10
  %add51.us = add nsw i32 %11, %vali.0.us
  br label %while.condthread-pre-split.us.backedge

while.body38.us:                                  ; preds = %if.end.us, %while.body38.us
  %p2.299.us = phi ptr [ %incdec.ptr40.us, %while.body38.us ], [ %p2.0.us, %if.end.us ]
  %p1.298.us = phi ptr [ %incdec.ptr39.us, %while.body38.us ], [ %p1.0.us, %if.end.us ]
  %incdec.ptr39.us = getelementptr inbounds i8, ptr %p1.298.us, i64 1
  %incdec.ptr40.us = getelementptr inbounds i8, ptr %p2.299.us, i64 1
  %.pr87.us = load i8, ptr %incdec.ptr40.us, align 1, !tbaa !5
  %cmp36.us = icmp eq i8 %.pr87.us, 45
  br i1 %cmp36.us, label %while.body38.us, label %while.condthread-pre-split.backedge.us.loopexit, !llvm.loop !515

if.else.i.us:                                     ; preds = %land.lhs.true.i.us, %while.cond.i.us
  %incdec.ptr7.i.us = getelementptr inbounds i8, ptr %r1.addr.0.i.us, i64 1
  store i8 %5, ptr %r1.addr.0.i.us, align 1, !tbaa !5
  %12 = load i8, ptr %i2.addr.0.i.us, align 1, !tbaa !5
  %incdec.ptr9.i.us = getelementptr inbounds i8, ptr %r2.addr.0.i.us, i64 1
  store i8 %12, ptr %r2.addr.0.i.us, align 1, !tbaa !5
  br label %if.end.i.us

if.end.i.us:                                      ; preds = %if.else.i.us, %land.lhs.true.i.us
  %r1.addr.1.i.us = phi ptr [ %incdec.ptr7.i.us, %if.else.i.us ], [ %r1.addr.0.i.us, %land.lhs.true.i.us ]
  %r2.addr.1.i.us = phi ptr [ %incdec.ptr9.i.us, %if.else.i.us ], [ %r2.addr.0.i.us, %land.lhs.true.i.us ]
  %i2.addr.1.i.us = getelementptr inbounds i8, ptr %i2.addr.0.i.us, i64 1
  %i1.addr.1.i.us = getelementptr inbounds i8, ptr %i1.addr.0.i.us, i64 1
  br label %while.cond.i.us, !llvm.loop !509

while.cond.loopexit.us:                           ; preds = %while.body27.us
  br label %while.cond.us, !llvm.loop !516

while.condthread-pre-split.backedge.us.loopexit:  ; preds = %while.body38.us
  %add33.us = add nsw i32 %vali.0.us, %penal
  br label %while.condthread-pre-split.us.backedge

while.condthread-pre-split.us.backedge:           ; preds = %while.condthread-pre-split.backedge.us.loopexit, %if.end42.us
  %vali.0.ph.us.be = phi i32 [ %add51.us, %if.end42.us ], [ %add33.us, %while.condthread-pre-split.backedge.us.loopexit ]
  %p1.0.ph.us.be = phi ptr [ %incdec.ptr43.us, %if.end42.us ], [ %incdec.ptr39.us, %while.condthread-pre-split.backedge.us.loopexit ]
  %p2.0.ph.us.be = phi ptr [ %incdec.ptr47.us, %if.end42.us ], [ %incdec.ptr40.us, %while.condthread-pre-split.backedge.us.loopexit ]
  br label %while.condthread-pre-split.us, !llvm.loop !516

for.cond7.for.inc55_crit_edge.us:                 ; preds = %while.end52.us
  %indvars.iv.next117 = add nuw nsw i64 %indvars.iv116, 1
  %exitcond120.not = icmp eq i64 %indvars.iv.next117, %wide.trip.count119
  br i1 %exitcond120.not, label %for.end57, label %for.cond7.preheader.us, !llvm.loop !517

for.end57:                                        ; preds = %for.cond7.for.inc55_crit_edge.us, %entry
  %val.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %9, %for.cond7.for.inc55_crit_edge.us ]
  tail call void @free(ptr noundef %call2) #34
  tail call void @free(ptr noundef %call5) #34
  %13 = load ptr, ptr @stderr, align 8, !tbaa !13
  %conv58 = fpext float %val.0.lcssa to double
  %call59 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %13, ptr noundef nonnull @.str.36, double noundef %conv58) #32
  ret float %val.0.lcssa
}

; Function Attrs: nofree nounwind
declare noundef ptr @fgets(ptr noundef, i32 noundef, ptr nocapture noundef) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noundef i32 @__isoc99_sscanf(ptr nocapture noundef readonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #29

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #29

; Function Attrs: nofree nounwind
declare noundef i32 @fputc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #28

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umin.i32(i32, i32) #29

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #29

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #30

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x double> @llvm.fmuladd.v2f64(<2 x double>, <2 x double>, <2 x double>) #29

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umin.i64(i64, i64) #29

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.usub.sat.i64(i64, i64) #29

attributes #0 = { nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #2 = { nofree nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nofree nounwind willreturn memory(argmem: read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nofree nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nofree nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { noreturn nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { mustprogress nofree nounwind willreturn memory(argmem: readwrite) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #11 = { nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { nofree nounwind memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { mustprogress nofree nosync nounwind willreturn memory(none) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { mustprogress nounwind willreturn allockind("realloc") allocsize(1) memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { mustprogress nofree nosync nounwind willreturn memory(read, argmem: none, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #22 = { nofree norecurse nosync nounwind memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { nofree nounwind memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { nofree nounwind memory(readwrite, inaccessiblemem: write) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { mustprogress nofree nounwind willreturn memory(write) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #26 = { nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #27 = { nofree norecurse nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #28 = { nofree nounwind }
attributes #29 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #30 = { nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #31 = { nounwind willreturn memory(read) }
attributes #32 = { cold }
attributes #33 = { noreturn nounwind }
attributes #34 = { nounwind }
attributes #35 = { nounwind allocsize(0) }
attributes #36 = { nounwind willreturn memory(none) }
attributes #37 = { nounwind allocsize(1) }
attributes #38 = { nounwind allocsize(0,1) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"omnipotent char", !7, i64 0}
!7 = !{!"Simple C/C++ TBAA"}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.mustprogress"}
!10 = !{!11, !11, i64 0}
!11 = !{!"int", !6, i64 0}
!12 = distinct !{!12, !9}
!13 = !{!14, !14, i64 0}
!14 = !{!"any pointer", !6, i64 0}
!15 = distinct !{!15, !9}
!16 = distinct !{!16, !9}
!17 = !{!18, !18, i64 0}
!18 = !{!"float", !6, i64 0}
!19 = distinct !{!19, !9}
!20 = !{!21, !21, i64 0}
!21 = !{!"double", !6, i64 0}
!22 = distinct !{!22, !9}
!23 = distinct !{!23, !9}
!24 = distinct !{!24, !9}
!25 = distinct !{!25, !9}
!26 = distinct !{!26, !9}
!27 = distinct !{!27, !9}
!28 = distinct !{!28, !9}
!29 = distinct !{!29, !9}
!30 = distinct !{!30, !9}
!31 = distinct !{!31, !9}
!32 = distinct !{!32, !9}
!33 = distinct !{!33, !9}
!34 = distinct !{!34, !9}
!35 = distinct !{!35, !9}
!36 = distinct !{!36, !9}
!37 = distinct !{!37, !9}
!38 = distinct !{!38, !9}
!39 = distinct !{!39, !9}
!40 = distinct !{!40, !9}
!41 = distinct !{!41, !9}
!42 = distinct !{!42, !9}
!43 = distinct !{!43, !9}
!44 = distinct !{!44, !9}
!45 = distinct !{!45, !9}
!46 = distinct !{!46, !9}
!47 = distinct !{!47, !9}
!48 = distinct !{!48, !9}
!49 = distinct !{!49, !9}
!50 = distinct !{!50, !9}
!51 = distinct !{!51, !9}
!52 = distinct !{!52, !9}
!53 = distinct !{!53, !9}
!54 = distinct !{!54, !9}
!55 = distinct !{!55, !9}
!56 = distinct !{!56, !9}
!57 = distinct !{!57, !9}
!58 = distinct !{!58, !9}
!59 = distinct !{!59, !9}
!60 = distinct !{!60, !9}
!61 = distinct !{!61, !9}
!62 = distinct !{!62, !9}
!63 = distinct !{!63, !9}
!64 = distinct !{!64, !9}
!65 = distinct !{!65, !9}
!66 = distinct !{!66, !9}
!67 = distinct !{!67, !9}
!68 = distinct !{!68, !9}
!69 = distinct !{!69, !70}
!70 = !{!"llvm.loop.unroll.disable"}
!71 = distinct !{!71, !9}
!72 = distinct !{!72, !70}
!73 = distinct !{!73, !9}
!74 = distinct !{!74, !9}
!75 = distinct !{!75, !9}
!76 = distinct !{!76, !9}
!77 = distinct !{!77, !9}
!78 = distinct !{!78, !9}
!79 = distinct !{!79, !70}
!80 = distinct !{!80, !9}
!81 = distinct !{!81, !9}
!82 = distinct !{!82, !9}
!83 = !{!84, !14, i64 0}
!84 = !{!"_Bchain", !14, i64 0, !14, i64 8, !11, i64 16}
!85 = !{!86, !86, i64 0}
!86 = !{!"short", !6, i64 0}
!87 = distinct !{!87, !9}
!88 = distinct !{!88, !9}
!89 = !{!84, !14, i64 8}
!90 = !{!84, !11, i64 16}
!91 = distinct !{!91, !9}
!92 = distinct !{!92, !9, !93, !94}
!93 = !{!"llvm.loop.isvectorized", i32 1}
!94 = !{!"llvm.loop.unroll.runtime.disable"}
!95 = distinct !{!95, !70}
!96 = distinct !{!96, !9, !93}
!97 = distinct !{!97, !9}
!98 = distinct !{!98, !9}
!99 = distinct !{!99, !9}
!100 = distinct !{!100, !9}
!101 = distinct !{!101, !9}
!102 = distinct !{!102, !9}
!103 = distinct !{!103, !9}
!104 = distinct !{!104, !9, !93, !94}
!105 = distinct !{!105, !70}
!106 = distinct !{!106, !9, !93}
!107 = distinct !{!107, !9}
!108 = distinct !{!108, !9}
!109 = distinct !{!109, !9}
!110 = distinct !{!110, !9}
!111 = !{ptr @cluster_average_float, ptr @cluster_minimum_float, ptr @cluster_mix_float}
!112 = distinct !{!112, !9}
!113 = distinct !{!113, !9}
!114 = distinct !{!114, !9}
!115 = distinct !{!115, !9}
!116 = distinct !{!116, !9}
!117 = distinct !{!117, !9}
!118 = distinct !{!118, !9}
!119 = distinct !{!119, !9}
!120 = distinct !{!120, !9, !93, !94}
!121 = distinct !{!121, !70}
!122 = distinct !{!122, !9, !93}
!123 = distinct !{!123, !9}
!124 = distinct !{!124, !9}
!125 = distinct !{!125, !9}
!126 = distinct !{!126, !9}
!127 = distinct !{!127, !9}
!128 = distinct !{!128, !9}
!129 = distinct !{!129, !9}
!130 = distinct !{!130, !9}
!131 = distinct !{!131, !9}
!132 = distinct !{!132, !9}
!133 = distinct !{!133, !9, !93, !94}
!134 = distinct !{!134, !70}
!135 = distinct !{!135, !9, !93}
!136 = distinct !{!136, !9}
!137 = distinct !{!137, !9}
!138 = distinct !{!138, !9}
!139 = distinct !{!139, !9}
!140 = distinct !{!140, !9}
!141 = !{}
!142 = distinct !{!142, !9}
!143 = distinct !{!143, !9}
!144 = distinct !{!144, !9}
!145 = !{!146, !11, i64 0}
!146 = !{!"_Achain", !11, i64 0, !11, i64 4}
!147 = distinct !{!147, !9, !93, !94}
!148 = distinct !{!148, !9}
!149 = !{!146, !11, i64 4}
!150 = distinct !{!150, !9, !94, !93}
!151 = distinct !{!151, !9}
!152 = distinct !{!152, !9}
!153 = distinct !{!153, !9}
!154 = distinct !{!154, !9}
!155 = distinct !{!155, !9}
!156 = distinct !{!156, !9}
!157 = distinct !{!157, !9, !93, !94}
!158 = distinct !{!158, !9}
!159 = distinct !{!159, !9, !94, !93}
!160 = distinct !{!160, !9}
!161 = distinct !{!161, !9}
!162 = distinct !{!162, !9}
!163 = distinct !{!163, !9}
!164 = distinct !{!164, !9}
!165 = distinct !{!165, !9}
!166 = distinct !{!166, !9, !93, !94}
!167 = distinct !{!167, !9}
!168 = distinct !{!168, !9}
!169 = distinct !{!169, !9, !94, !93}
!170 = distinct !{!170, !9}
!171 = distinct !{!171, !9}
!172 = distinct !{!172, !9}
!173 = distinct !{!173, !9}
!174 = distinct !{!174, !9}
!175 = distinct !{!175, !9}
!176 = !{ptr @cluster_average_double, ptr @cluster_minimum_double, ptr @cluster_mix_double}
!177 = distinct !{!177, !9}
!178 = distinct !{!178, !9}
!179 = distinct !{!179, !9, !93, !94}
!180 = distinct !{!180, !9, !94, !93}
!181 = distinct !{!181, !9}
!182 = distinct !{!182, !9, !93, !94}
!183 = distinct !{!183, !9, !94, !93}
!184 = distinct !{!184, !9}
!185 = distinct !{!185, !9}
!186 = distinct !{!186, !9}
!187 = distinct !{!187, !9}
!188 = distinct !{!188, !9}
!189 = distinct !{!189, !9}
!190 = distinct !{!190, !9}
!191 = distinct !{!191, !9}
!192 = distinct !{!192, !9, !93, !94}
!193 = distinct !{!193, !70}
!194 = distinct !{!194, !9, !93}
!195 = distinct !{!195, !9}
!196 = distinct !{!196, !9, !93, !94}
!197 = distinct !{!197, !9, !94, !93}
!198 = distinct !{!198, !9}
!199 = distinct !{!199, !9}
!200 = distinct !{!200, !9}
!201 = distinct !{!201, !9}
!202 = distinct !{!202, !9}
!203 = distinct !{!203, !9}
!204 = distinct !{!204, !9}
!205 = distinct !{!205, !9}
!206 = distinct !{!206, !9, !93, !94}
!207 = distinct !{!207, !9, !94, !93}
!208 = distinct !{!208, !9}
!209 = distinct !{!209, !9, !93, !94}
!210 = distinct !{!210, !9, !94, !93}
!211 = distinct !{!211, !9}
!212 = distinct !{!212, !70}
!213 = distinct !{!213, !9}
!214 = distinct !{!214, !9}
!215 = distinct !{!215, !70}
!216 = distinct !{!216, !9}
!217 = distinct !{!217, !9}
!218 = distinct !{!218, !9}
!219 = distinct !{!219, !70}
!220 = distinct !{!220, !9}
!221 = distinct !{!221, !70}
!222 = distinct !{!222, !9}
!223 = distinct !{!223, !70}
!224 = distinct !{!224, !9}
!225 = distinct !{!225, !9}
!226 = distinct !{!226, !9}
!227 = distinct !{!227, !9, !93, !94}
!228 = distinct !{!228, !9, !94, !93}
!229 = distinct !{!229, !9}
!230 = distinct !{!230, !9}
!231 = distinct !{!231, !70}
!232 = distinct !{!232, !9}
!233 = distinct !{!233, !70}
!234 = distinct !{!234, !9}
!235 = distinct !{!235, !9}
!236 = distinct !{!236, !9}
!237 = distinct !{!237, !9}
!238 = distinct !{!238, !70}
!239 = distinct !{!239, !9}
!240 = distinct !{!240, !70}
!241 = distinct !{!241, !9}
!242 = distinct !{!242, !70}
!243 = distinct !{!243, !9}
!244 = distinct !{!244, !9}
!245 = distinct !{!245, !9}
!246 = distinct !{!246, !9, !93, !94}
!247 = distinct !{!247, !70}
!248 = distinct !{!248, !9, !93}
!249 = distinct !{!249, !9}
!250 = distinct !{!250, !9}
!251 = distinct !{!251, !70}
!252 = distinct !{!252, !9}
!253 = distinct !{!253, !70}
!254 = distinct !{!254, !9}
!255 = distinct !{!255, !9}
!256 = distinct !{!256, !9}
!257 = distinct !{!257, !9}
!258 = distinct !{!258, !9}
!259 = distinct !{!259, !9}
!260 = distinct !{!260, !70}
!261 = distinct !{!261, !9}
!262 = distinct !{!262, !9}
!263 = distinct !{!263, !9}
!264 = distinct !{!264, !9}
!265 = distinct !{!265, !9}
!266 = distinct !{!266, !9}
!267 = distinct !{!267, !9}
!268 = distinct !{!268, !9}
!269 = distinct !{!269, !9}
!270 = distinct !{!270, !9}
!271 = distinct !{!271, !9}
!272 = distinct !{!272, !9}
!273 = distinct !{!273, !9}
!274 = distinct !{!274, !9}
!275 = distinct !{!275, !9, !276}
!276 = !{!"llvm.loop.unswitch.partial.disable"}
!277 = distinct !{!277, !9}
!278 = distinct !{!278, !9}
!279 = distinct !{!279, !9, !276}
!280 = distinct !{!280, !9}
!281 = distinct !{!281, !9}
!282 = distinct !{!282, !9, !93, !94}
!283 = distinct !{!283, !9, !94, !93}
!284 = distinct !{!284, !9, !93, !94}
!285 = distinct !{!285, !9}
!286 = distinct !{!286, !9}
!287 = distinct !{!287, !9}
!288 = distinct !{!288, !9, !94, !93}
!289 = distinct !{!289, !70}
!290 = distinct !{!290, !9, !93, !94}
!291 = distinct !{!291, !9}
!292 = distinct !{!292, !9, !94, !93}
!293 = distinct !{!293, !9, !93, !94}
!294 = distinct !{!294, !9, !94, !93}
!295 = distinct !{!295, !9, !93, !94}
!296 = distinct !{!296, !9}
!297 = distinct !{!297, !9}
!298 = distinct !{!298, !9}
!299 = distinct !{!299, !9, !94, !93}
!300 = distinct !{!300, !70}
!301 = distinct !{!301, !9, !93, !94}
!302 = distinct !{!302, !9}
!303 = distinct !{!303, !9, !94, !93}
!304 = distinct !{!304, !9}
!305 = distinct !{!305, !9}
!306 = distinct !{!306, !9}
!307 = distinct !{!307, !9}
!308 = distinct !{!308, !9}
!309 = distinct !{!309, !9}
!310 = distinct !{!310, !9}
!311 = distinct !{!311, !9}
!312 = distinct !{!312, !9}
!313 = distinct !{!313, !9}
!314 = distinct !{!314, !9}
!315 = distinct !{!315, !9, !93, !94}
!316 = distinct !{!316, !9, !94, !93}
!317 = distinct !{!317, !9, !93, !94}
!318 = distinct !{!318, !9}
!319 = distinct !{!319, !9}
!320 = distinct !{!320, !9}
!321 = distinct !{!321, !9}
!322 = distinct !{!322, !9}
!323 = distinct !{!323, !9, !94, !93}
!324 = distinct !{!324, !9}
!325 = distinct !{!325, !9}
!326 = distinct !{!326, !9}
!327 = distinct !{!327, !9}
!328 = distinct !{!328, !9}
!329 = distinct !{!329, !9}
!330 = distinct !{!330, !9}
!331 = distinct !{!331, !9}
!332 = distinct !{!332, !9, !93, !94}
!333 = distinct !{!333, !9, !94, !93}
!334 = distinct !{!334, !9}
!335 = distinct !{!335, !9}
!336 = distinct !{!336, !9}
!337 = distinct !{!337, !9}
!338 = distinct !{!338, !9}
!339 = distinct !{!339, !9}
!340 = distinct !{!340, !9}
!341 = distinct !{!341, !9}
!342 = distinct !{!342, !9}
!343 = distinct !{!343, !9}
!344 = distinct !{!344, !70}
!345 = distinct !{!345, !9}
!346 = distinct !{!346, !9}
!347 = distinct !{!347, !9}
!348 = distinct !{!348, !9}
!349 = distinct !{!349, !9}
!350 = distinct !{!350, !70}
!351 = distinct !{!351, !9, !93, !94}
!352 = distinct !{!352, !9, !94, !93}
!353 = distinct !{!353, !9}
!354 = distinct !{!354, !9}
!355 = distinct !{!355, !9}
!356 = distinct !{!356, !70}
!357 = distinct !{!357, !9, !93, !94}
!358 = distinct !{!358, !9, !93, !94}
!359 = distinct !{!359, !9, !93, !94}
!360 = distinct !{!360, !9, !93}
!361 = distinct !{!361, !9, !93}
!362 = distinct !{!362, !9}
!363 = distinct !{!363, !9}
!364 = distinct !{!364, !9}
!365 = distinct !{!365, !9}
!366 = distinct !{!366, !9}
!367 = distinct !{!367, !9}
!368 = distinct !{!368, !70}
!369 = distinct !{!369, !9, !93, !94}
!370 = distinct !{!370, !70}
!371 = distinct !{!371, !9, !93}
!372 = distinct !{!372, !9}
!373 = distinct !{!373, !9}
!374 = distinct !{!374, !9}
!375 = distinct !{!375, !9}
!376 = distinct !{!376, !9}
!377 = distinct !{!377, !9}
!378 = distinct !{!378, !9}
!379 = distinct !{!379, !9}
!380 = distinct !{!380, !9}
!381 = distinct !{!381, !9}
!382 = distinct !{!382, !9}
!383 = distinct !{!383, !9}
!384 = distinct !{!384, !9}
!385 = distinct !{!385, !9}
!386 = distinct !{!386, !9}
!387 = distinct !{!387, !9}
!388 = distinct !{!388, !9}
!389 = distinct !{!389, !9}
!390 = distinct !{!390, !9}
!391 = distinct !{!391, !9, !93, !94}
!392 = distinct !{!392, !9}
!393 = distinct !{!393, !9}
!394 = distinct !{!394, !9}
!395 = distinct !{!395, !9, !94, !93}
!396 = !{!397, !11, i64 24}
!397 = !{!"_Segment", !11, i64 0, !11, i64 4, !11, i64 8, !21, i64 16, !11, i64 24, !11, i64 28, !14, i64 32, !11, i64 40}
!398 = !{!397, !11, i64 28}
!399 = distinct !{!399, !70}
!400 = distinct !{!400, !9}
!401 = !{!397, !11, i64 0}
!402 = !{!397, !11, i64 4}
!403 = !{!397, !11, i64 8}
!404 = !{!397, !21, i64 16}
!405 = distinct !{!405, !9}
!406 = !{!407, !21, i64 40}
!407 = !{!"_LocalHom", !11, i64 0, !14, i64 8, !14, i64 16, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !21, i64 40, !11, i64 48, !11, i64 52, !21, i64 56, !18, i64 64, !21, i64 72}
!408 = !{!407, !11, i64 48}
!409 = !{!407, !21, i64 56}
!410 = !{!407, !18, i64 64}
!411 = !{!407, !14, i64 8}
!412 = distinct !{!412, !9}
!413 = distinct !{!413, !9}
!414 = distinct !{!414, !9}
!415 = distinct !{!415, !9}
!416 = !{!407, !11, i64 24}
!417 = !{!407, !11, i64 28}
!418 = distinct !{!418, !70}
!419 = distinct !{!419, !9}
!420 = distinct !{!420, !9}
!421 = distinct !{!421, !9}
!422 = !{!423}
!423 = distinct !{!423, !424}
!424 = distinct !{!424, !"LVerDomain"}
!425 = !{!426}
!426 = distinct !{!426, !424}
!427 = distinct !{!427, !9, !93, !94}
!428 = distinct !{!428, !70}
!429 = distinct !{!429, !9, !93}
!430 = distinct !{!430, !9}
!431 = distinct !{!431, !9}
!432 = distinct !{!432, !9}
!433 = distinct !{!433, !9}
!434 = distinct !{!434, !9}
!435 = distinct !{!435, !9}
!436 = distinct !{!436, !9}
!437 = distinct !{!437, !9}
!438 = !{!407, !11, i64 52}
!439 = !{!407, !11, i64 32}
!440 = distinct !{!440, !9, !93, !94}
!441 = distinct !{!441, !9, !94, !93}
!442 = distinct !{!442, !9}
!443 = distinct !{!443, !9, !93, !94}
!444 = distinct !{!444, !9, !94, !93}
!445 = distinct !{!445, !9}
!446 = distinct !{!446, !9}
!447 = !{!407, !14, i64 16}
!448 = !{!407, !11, i64 0}
!449 = !{!407, !11, i64 36}
!450 = distinct !{!450, !9}
!451 = distinct !{!451, !9}
!452 = distinct !{!452, !9}
!453 = distinct !{!453, !9}
!454 = distinct !{!454, !9}
!455 = distinct !{!455, !9}
!456 = distinct !{!456, !9}
!457 = distinct !{!457, !9}
!458 = distinct !{!458, !9}
!459 = distinct !{!459, !70}
!460 = distinct !{!460, !9}
!461 = distinct !{!461, !9}
!462 = distinct !{!462, !9}
!463 = distinct !{!463, !9}
!464 = distinct !{!464, !9}
!465 = distinct !{!465, !9}
!466 = distinct !{!466, !9}
!467 = distinct !{!467, !9}
!468 = distinct !{!468, !9}
!469 = distinct !{!469, !9}
!470 = distinct !{!470, !9}
!471 = distinct !{!471, !9}
!472 = distinct !{!472, !9}
!473 = distinct !{!473, !9}
!474 = distinct !{!474, !9}
!475 = distinct !{!475, !9}
!476 = distinct !{!476, !9}
!477 = distinct !{!477, !9}
!478 = distinct !{!478, !9}
!479 = distinct !{!479, !9}
!480 = distinct !{!480, !9}
!481 = distinct !{!481, !9}
!482 = distinct !{!482, !9}
!483 = distinct !{!483, !9}
!484 = distinct !{!484, !9}
!485 = distinct !{!485, !9}
!486 = distinct !{!486, !9}
!487 = distinct !{!487, !9}
!488 = distinct !{!488, !9}
!489 = distinct !{!489, !9}
!490 = distinct !{!490, !9}
!491 = distinct !{!491, !9}
!492 = distinct !{!492, !9}
!493 = distinct !{!493, !9}
!494 = distinct !{!494, !9}
!495 = !{!496, !11, i64 0}
!496 = !{!"_Gappattern", !11, i64 0, !18, i64 4}
!497 = distinct !{!497, !9}
!498 = !{!496, !18, i64 4}
!499 = distinct !{!499, !9}
!500 = distinct !{!500, !9}
!501 = distinct !{!501, !9}
!502 = distinct !{!502, !9}
!503 = distinct !{!503, !9}
!504 = distinct !{!504, !9}
!505 = distinct !{!505, !9}
!506 = distinct !{!506, !9}
!507 = distinct !{!507, !9}
!508 = distinct !{!508, !9}
!509 = distinct !{!509, !9}
!510 = distinct !{!510, !9}
!511 = distinct !{!511, !9}
!512 = distinct !{!512, !9}
!513 = distinct !{!513, !9}
!514 = distinct !{!514, !9}
!515 = distinct !{!515, !9}
!516 = distinct !{!516, !9}
!517 = distinct !{!517, !9}
