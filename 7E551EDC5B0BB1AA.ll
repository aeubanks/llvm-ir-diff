; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Applications/JM/lencod/context_ini.c'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Applications/JM/lencod/context_ini.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.RD_DATA = type { double, [16 x [16 x i16]], [16 x [16 x i16]], [16 x [16 x i16]], ptr, ptr, i32, i16, [4 x i32], [4 x i32], ptr, [16 x i8], [16 x i8], i32, i64, i32, ptr, ptr, [2 x [4 x [4 x i8]]], i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.ImageParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [9 x [16 x [16 x i16]]], [5 x [16 x [16 x i16]]], [9 x [8 x [8 x i16]]], [2 x [4 x [16 x [16 x i16]]]], [16 x [16 x i16]], [16 x [16 x i32]], ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, i32, i32, i32, i32, [4 x [4 x i32]], i32, i32, i32, i32, i32, double, i32, i32, i32, i32, ptr, ptr, ptr, ptr, [15 x i16], i32, i32, i32, i32, i32, i32, i32, i32, [6 x [32 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1 x i32], i32, i32, [2 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x [2 x i32]], [2 x i32], i32, i32, i16, i32, i32, i32, i32, i32 }
%struct.InputParameters = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [8 x [2 x i32]], [8 x [2 x i32]], [4 x [4 x i32]], i32, i32, i32, i32, [256 x i8], [256 x i8], [256 x i8], [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, [500 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [1024 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], [256 x i8], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [256 x i8], i32, i32, ptr, ptr, ptr, ptr, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, double, double, double, [5 x double], i32, [8 x i32], i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [6 x double], [6 x double], [256 x i8], i32, i32, i32, i32, [2 x [5 x i32]], [2 x [5 x i32]], i32, i32, i32, i32, i32, i32, i32, i32, i32, [3 x i32], i32 }
%struct.Slice = type { i32, i32, i32, i32, i32, i32, ptr, ptr, ptr, i32, ptr, ptr, ptr, i32, ptr, ptr, ptr, ptr, [3 x [2 x i32]] }
%struct.BiContextType = type { i16, i8, i64 }
%struct.MotionInfoContexts = type { [3 x [11 x %struct.BiContextType]], [2 x [9 x %struct.BiContextType]], [2 x [10 x %struct.BiContextType]], [2 x [6 x %struct.BiContextType]], [4 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x %struct.BiContextType] }
%struct.TextureInfoContexts = type { [2 x %struct.BiContextType], [4 x %struct.BiContextType], [3 x [4 x %struct.BiContextType]], [10 x [4 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [5 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]], [10 x [15 x %struct.BiContextType]] }

@probability = dso_local local_unnamed_addr global [128 x double] [double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 0.000000e+00, double 5.000000e-01, double 4.746090e-01, double 4.505070e-01, double 4.276290e-01, double 4.059120e-01, double 3.852990e-01, double 3.657320e-01, double 3.471590e-01, double 3.295300e-01, double 3.127950e-01, double 2.969110e-01, double 2.818330e-01, double 2.675200e-01, double 2.539350e-01, double 2.410390e-01, double 2.287990e-01, double 2.171800e-01, double 2.061510e-01, double 1.956820e-01, double 1.857440e-01, double 1.763120e-01, double 1.673580e-01, double 1.588590e-01, double 1.507920e-01, double 1.431340e-01, double 1.358660e-01, double 1.289660e-01, double 1.224170e-01, double 1.162000e-01, double 1.102990e-01, double 1.046980e-01, double 0x3FB9710880D801B4, double 9.433400e-02, double 0x3FB6EC4A4095F245, double 8.499600e-02, double 8.068000e-02, double 0x3FB39AF1886DF82B, double 0x3FB29C12F09D8C6D, double 0x3FB1AA1D755BCCAF, double 6.549800e-02, double 6.217200e-02, double 5.901400e-02, double 5.601800e-02, double 5.317300e-02, double 5.047300e-02, double 4.790900e-02, double 4.547600e-02, double 4.316700e-02, double 4.097500e-02, double 3.889400e-02, double 3.691900e-02, double 3.504400e-02, double 3.326400e-02, double 3.157500e-02, double 2.997200e-02, double 2.845000e-02, double 2.700500e-02, double 2.563300e-02, double 2.433200e-02, double 2.309600e-02, double 2.192300e-02, double 2.081000e-02, double 1.975300e-02, double 1.875000e-02], align 16
@img = external local_unnamed_addr global ptr, align 8
@input = external local_unnamed_addr global ptr, align 8
@num_mb_per_slice = common dso_local local_unnamed_addr global i32 0, align 4
@number_of_slices = common dso_local local_unnamed_addr global i32 0, align 4
@initialized = common dso_local local_unnamed_addr global ptr null, align 8
@.str = private unnamed_addr constant [35 x i8] c"create_context_memory: initialized\00", align 1
@model_number = common dso_local local_unnamed_addr global ptr null, align 8
@.str.1 = private unnamed_addr constant [36 x i8] c"create_context_memory: model_number\00", align 1
@entropy = common dso_local local_unnamed_addr global [128 x double] zeroinitializer, align 16
@INIT_MB_TYPE_I = internal constant [1 x [3 x [11 x [2 x i32]]]] [[3 x [11 x [2 x i32]]] [[11 x [2 x i32]] [[2 x i32] [i32 20, i32 -15], [2 x i32] [i32 2, i32 54], [2 x i32] [i32 3, i32 74], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -28, i32 127], [2 x i32] [i32 -23, i32 104], [2 x i32] [i32 -6, i32 53], [2 x i32] [i32 -1, i32 54], [2 x i32] [i32 7, i32 51], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [11 x [2 x i32]] [[2 x i32] [i32 20, i32 -15], [2 x i32] [i32 2, i32 54], [2 x i32] [i32 3, i32 74], [2 x i32] [i32 20, i32 -15], [2 x i32] [i32 2, i32 54], [2 x i32] [i32 3, i32 74], [2 x i32] [i32 -28, i32 127], [2 x i32] [i32 -23, i32 104], [2 x i32] [i32 -6, i32 53], [2 x i32] [i32 -1, i32 54], [2 x i32] [i32 7, i32 51]], [11 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MB_TYPE_P = internal constant [3 x [3 x [11 x [2 x i32]]]] [[3 x [11 x [2 x i32]]] [[11 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [11 x [2 x i32]] [[2 x i32] [i32 23, i32 33], [2 x i32] [i32 23, i32 2], [2 x i32] [i32 21, i32 0], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 1, i32 9], [2 x i32] [i32 0, i32 49], [2 x i32] [i32 -37, i32 118], [2 x i32] [i32 5, i32 57], [2 x i32] [i32 -13, i32 78], [2 x i32] [i32 -11, i32 65], [2 x i32] [i32 1, i32 62]], [11 x [2 x i32]] [[2 x i32] [i32 26, i32 67], [2 x i32] [i32 16, i32 90], [2 x i32] [i32 9, i32 104], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -46, i32 127], [2 x i32] [i32 -20, i32 104], [2 x i32] [i32 1, i32 67], [2 x i32] [i32 18, i32 64], [2 x i32] [i32 9, i32 43], [2 x i32] [i32 29, i32 0], [2 x i32] [i32 0, i32 64]]], [3 x [11 x [2 x i32]]] [[11 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [11 x [2 x i32]] [[2 x i32] [i32 22, i32 25], [2 x i32] [i32 34, i32 0], [2 x i32] [i32 16, i32 0], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -2, i32 9], [2 x i32] [i32 4, i32 41], [2 x i32] [i32 -29, i32 118], [2 x i32] [i32 2, i32 65], [2 x i32] [i32 -6, i32 71], [2 x i32] [i32 -13, i32 79], [2 x i32] [i32 5, i32 52]], [11 x [2 x i32]] [[2 x i32] [i32 57, i32 2], [2 x i32] [i32 41, i32 36], [2 x i32] [i32 26, i32 69], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -45, i32 127], [2 x i32] [i32 -15, i32 101], [2 x i32] [i32 -4, i32 76], [2 x i32] [i32 26, i32 34], [2 x i32] [i32 19, i32 22], [2 x i32] [i32 40, i32 0], [2 x i32] [i32 0, i32 64]]], [3 x [11 x [2 x i32]]] [[11 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [11 x [2 x i32]] [[2 x i32] [i32 29, i32 16], [2 x i32] [i32 25, i32 0], [2 x i32] [i32 14, i32 0], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -10, i32 51], [2 x i32] [i32 -3, i32 62], [2 x i32] [i32 -27, i32 99], [2 x i32] [i32 26, i32 16], [2 x i32] [i32 -4, i32 85], [2 x i32] [i32 -24, i32 102], [2 x i32] [i32 5, i32 57]], [11 x [2 x i32]] [[2 x i32] [i32 54, i32 0], [2 x i32] [i32 37, i32 42], [2 x i32] [i32 12, i32 97], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -32, i32 127], [2 x i32] [i32 -22, i32 117], [2 x i32] [i32 -2, i32 74], [2 x i32] [i32 20, i32 40], [2 x i32] [i32 20, i32 10], [2 x i32] [i32 29, i32 0], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_B8_TYPE_I = internal constant [1 x [2 x [9 x [2 x i32]]]] [[2 x [9 x [2 x i32]]] [[9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_B8_TYPE_P = internal constant [3 x [2 x [9 x [2 x i32]]]] [[2 x [9 x [2 x i32]]] [[9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 12, i32 49], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -4, i32 73], [2 x i32] [i32 17, i32 50], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [9 x [2 x i32]] [[2 x i32] [i32 -6, i32 86], [2 x i32] [i32 -17, i32 95], [2 x i32] [i32 -6, i32 61], [2 x i32] [i32 9, i32 45], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [2 x [9 x [2 x i32]]] [[9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 9, i32 50], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -3, i32 70], [2 x i32] [i32 10, i32 54], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [9 x [2 x i32]] [[2 x i32] [i32 6, i32 69], [2 x i32] [i32 -13, i32 90], [2 x i32] [i32 0, i32 52], [2 x i32] [i32 8, i32 43], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [2 x [9 x [2 x i32]]] [[9 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 6, i32 57], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -17, i32 73], [2 x i32] [i32 14, i32 57], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [9 x [2 x i32]] [[2 x i32] [i32 -6, i32 93], [2 x i32] [i32 -14, i32 88], [2 x i32] [i32 -6, i32 44], [2 x i32] [i32 4, i32 55], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MV_RES_I = internal constant [1 x [2 x [10 x [2 x i32]]]] [[2 x [10 x [2 x i32]]] [[10 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [10 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MV_RES_P = internal constant [3 x [2 x [10 x [2 x i32]]]] [[2 x [10 x [2 x i32]]] [[10 x [2 x i32]] [[2 x i32] [i32 -3, i32 69], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -6, i32 81], [2 x i32] [i32 -11, i32 96], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -3, i32 76], [2 x i32] [i32 -10, i32 94], [2 x i32] [i32 0, i32 64]], [10 x [2 x i32]] [[2 x i32] [i32 6, i32 55], [2 x i32] [i32 7, i32 67], [2 x i32] [i32 -5, i32 86], [2 x i32] [i32 2, i32 88], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 5, i32 54], [2 x i32] [i32 4, i32 69], [2 x i32] [i32 -3, i32 81], [2 x i32] [i32 0, i32 88], [2 x i32] [i32 0, i32 64]]], [2 x [10 x [2 x i32]]] [[10 x [2 x i32]] [[2 x i32] [i32 -2, i32 69], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -5, i32 82], [2 x i32] [i32 -10, i32 96], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 1, i32 56], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -3, i32 74], [2 x i32] [i32 -6, i32 85], [2 x i32] [i32 0, i32 64]], [10 x [2 x i32]] [[2 x i32] [i32 2, i32 59], [2 x i32] [i32 2, i32 75], [2 x i32] [i32 -3, i32 87], [2 x i32] [i32 -3, i32 100], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 -3, i32 81], [2 x i32] [i32 -7, i32 86], [2 x i32] [i32 -5, i32 95], [2 x i32] [i32 0, i32 64]]], [2 x [10 x [2 x i32]]] [[10 x [2 x i32]] [[2 x i32] [i32 -11, i32 89], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -15, i32 103], [2 x i32] [i32 -21, i32 116], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 1, i32 63], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -5, i32 85], [2 x i32] [i32 -13, i32 106], [2 x i32] [i32 0, i32 64]], [10 x [2 x i32]] [[2 x i32] [i32 19, i32 57], [2 x i32] [i32 20, i32 58], [2 x i32] [i32 4, i32 84], [2 x i32] [i32 6, i32 96], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 5, i32 63], [2 x i32] [i32 6, i32 75], [2 x i32] [i32 -3, i32 90], [2 x i32] [i32 -1, i32 101], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_REF_NO_I = internal constant [1 x [2 x [6 x [2 x i32]]]] [[2 x [6 x [2 x i32]]] [[6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_REF_NO_P = internal constant [3 x [2 x [6 x [2 x i32]]]] [[2 x [6 x [2 x i32]]] [[6 x [2 x i32]] [[2 x i32] [i32 -7, i32 67], [2 x i32] [i32 -5, i32 74], [2 x i32] [i32 -4, i32 74], [2 x i32] [i32 -5, i32 80], [2 x i32] [i32 -7, i32 72], [2 x i32] [i32 1, i32 58]], [6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [2 x [6 x [2 x i32]]] [[6 x [2 x i32]] [[2 x i32] [i32 -1, i32 66], [2 x i32] [i32 -1, i32 77], [2 x i32] [i32 1, i32 70], [2 x i32] [i32 -2, i32 86], [2 x i32] [i32 -5, i32 72], [2 x i32] [i32 0, i32 61]], [6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [2 x [6 x [2 x i32]]] [[6 x [2 x i32]] [[2 x i32] [i32 3, i32 55], [2 x i32] [i32 -4, i32 79], [2 x i32] [i32 -2, i32 75], [2 x i32] [i32 -12, i32 97], [2 x i32] [i32 -7, i32 50], [2 x i32] [i32 1, i32 60]], [6 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_DELTA_QP_I = internal constant [1 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 41], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63]]]], align 16
@INIT_DELTA_QP_P = internal constant [3 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 41], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 41], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 41], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63], [2 x i32] [i32 0, i32 63]]]], align 16
@INIT_MB_AFF_I = internal constant [1 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 11], [2 x i32] [i32 1, i32 55], [2 x i32] [i32 0, i32 69], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MB_AFF_P = internal constant [3 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 45], [2 x i32] [i32 -4, i32 78], [2 x i32] [i32 -3, i32 96], [2 x i32] [i32 0, i32 64]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 13, i32 15], [2 x i32] [i32 7, i32 51], [2 x i32] [i32 2, i32 80], [2 x i32] [i32 0, i32 64]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 7, i32 34], [2 x i32] [i32 -9, i32 88], [2 x i32] [i32 -20, i32 127], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_TRANSFORM_SIZE_I = internal constant [1 x [1 x [3 x [2 x i32]]]] [[1 x [3 x [2 x i32]]] [[3 x [2 x i32]] [[2 x i32] [i32 31, i32 21], [2 x i32] [i32 31, i32 31], [2 x i32] [i32 25, i32 50]]]], align 16
@INIT_TRANSFORM_SIZE_P = internal constant [3 x [1 x [3 x [2 x i32]]]] [[1 x [3 x [2 x i32]]] [[3 x [2 x i32]] [[2 x i32] [i32 12, i32 40], [2 x i32] [i32 11, i32 51], [2 x i32] [i32 14, i32 59]]], [1 x [3 x [2 x i32]]] [[3 x [2 x i32]] [[2 x i32] [i32 25, i32 32], [2 x i32] [i32 21, i32 49], [2 x i32] [i32 21, i32 54]]], [1 x [3 x [2 x i32]]] [[3 x [2 x i32]] [[2 x i32] [i32 21, i32 33], [2 x i32] [i32 19, i32 50], [2 x i32] [i32 17, i32 61]]]], align 16
@INIT_IPR_I = internal constant [1 x [1 x [2 x [2 x i32]]]] [[1 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 13, i32 41], [2 x i32] [i32 3, i32 62]]]], align 16
@INIT_IPR_P = internal constant [3 x [1 x [2 x [2 x i32]]]] [[1 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 13, i32 41], [2 x i32] [i32 3, i32 62]]], [1 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 13, i32 41], [2 x i32] [i32 3, i32 62]]], [1 x [2 x [2 x i32]]] [[2 x [2 x i32]] [[2 x i32] [i32 13, i32 41], [2 x i32] [i32 3, i32 62]]]], align 16
@INIT_CIPR_I = internal constant [1 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -9, i32 83], [2 x i32] [i32 4, i32 86], [2 x i32] [i32 0, i32 97], [2 x i32] [i32 -7, i32 72]]]], align 16
@INIT_CIPR_P = internal constant [3 x [1 x [4 x [2 x i32]]]] [[1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -9, i32 83], [2 x i32] [i32 4, i32 86], [2 x i32] [i32 0, i32 97], [2 x i32] [i32 -7, i32 72]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -9, i32 83], [2 x i32] [i32 4, i32 86], [2 x i32] [i32 0, i32 97], [2 x i32] [i32 -7, i32 72]]], [1 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -9, i32 83], [2 x i32] [i32 4, i32 86], [2 x i32] [i32 0, i32 97], [2 x i32] [i32 -7, i32 72]]]], align 16
@INIT_CBP_I = internal constant [1 x [3 x [4 x [2 x i32]]]] [[3 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -17, i32 127], [2 x i32] [i32 -13, i32 102], [2 x i32] [i32 0, i32 82], [2 x i32] [i32 -7, i32 74]], [4 x [2 x i32]] [[2 x i32] [i32 -21, i32 107], [2 x i32] [i32 -27, i32 127], [2 x i32] [i32 -31, i32 127], [2 x i32] [i32 -24, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 -18, i32 95], [2 x i32] [i32 -27, i32 127], [2 x i32] [i32 -21, i32 114], [2 x i32] [i32 -30, i32 127]]]], align 16
@INIT_CBP_P = internal constant [3 x [3 x [4 x [2 x i32]]]] [[3 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -27, i32 126], [2 x i32] [i32 -28, i32 98], [2 x i32] [i32 -25, i32 101], [2 x i32] [i32 -23, i32 67]], [4 x [2 x i32]] [[2 x i32] [i32 -28, i32 82], [2 x i32] [i32 -20, i32 94], [2 x i32] [i32 -16, i32 83], [2 x i32] [i32 -22, i32 110]], [4 x [2 x i32]] [[2 x i32] [i32 -21, i32 91], [2 x i32] [i32 -18, i32 102], [2 x i32] [i32 -13, i32 93], [2 x i32] [i32 -29, i32 127]]], [3 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -39, i32 127], [2 x i32] [i32 -18, i32 91], [2 x i32] [i32 -17, i32 96], [2 x i32] [i32 -26, i32 81]], [4 x [2 x i32]] [[2 x i32] [i32 -35, i32 98], [2 x i32] [i32 -24, i32 102], [2 x i32] [i32 -23, i32 97], [2 x i32] [i32 -27, i32 119]], [4 x [2 x i32]] [[2 x i32] [i32 -24, i32 99], [2 x i32] [i32 -21, i32 110], [2 x i32] [i32 -18, i32 102], [2 x i32] [i32 -36, i32 127]]], [3 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -36, i32 127], [2 x i32] [i32 -17, i32 91], [2 x i32] [i32 -14, i32 95], [2 x i32] [i32 -25, i32 84]], [4 x [2 x i32]] [[2 x i32] [i32 -25, i32 86], [2 x i32] [i32 -12, i32 89], [2 x i32] [i32 -17, i32 91], [2 x i32] [i32 -31, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 -14, i32 76], [2 x i32] [i32 -18, i32 103], [2 x i32] [i32 -13, i32 90], [2 x i32] [i32 -37, i32 127]]]], align 16
@INIT_BCBP_I = internal constant [1 x [8 x [4 x [2 x i32]]]] [[8 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -17, i32 123], [2 x i32] [i32 -12, i32 115], [2 x i32] [i32 -16, i32 122], [2 x i32] [i32 -11, i32 115]], [4 x [2 x i32]] [[2 x i32] [i32 -12, i32 63], [2 x i32] [i32 -2, i32 68], [2 x i32] [i32 -15, i32 84], [2 x i32] [i32 -13, i32 104]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 -3, i32 70], [2 x i32] [i32 -8, i32 93], [2 x i32] [i32 -10, i32 90], [2 x i32] [i32 -30, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 -1, i32 74], [2 x i32] [i32 -6, i32 97], [2 x i32] [i32 -7, i32 91], [2 x i32] [i32 -20, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 -4, i32 56], [2 x i32] [i32 -5, i32 82], [2 x i32] [i32 -7, i32 76], [2 x i32] [i32 -22, i32 125]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_BCBP_P = internal constant [3 x [8 x [4 x [2 x i32]]]] [[8 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 -7, i32 92], [2 x i32] [i32 -5, i32 89], [2 x i32] [i32 -7, i32 96], [2 x i32] [i32 -13, i32 108]], [4 x [2 x i32]] [[2 x i32] [i32 -3, i32 46], [2 x i32] [i32 -1, i32 65], [2 x i32] [i32 -1, i32 57], [2 x i32] [i32 -9, i32 93]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 -3, i32 74], [2 x i32] [i32 -9, i32 92], [2 x i32] [i32 -8, i32 87], [2 x i32] [i32 -23, i32 126]], [4 x [2 x i32]] [[2 x i32] [i32 5, i32 54], [2 x i32] [i32 6, i32 60], [2 x i32] [i32 6, i32 59], [2 x i32] [i32 6, i32 69]], [4 x [2 x i32]] [[2 x i32] [i32 -1, i32 48], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -4, i32 69], [2 x i32] [i32 -8, i32 88]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 0, i32 80], [2 x i32] [i32 -5, i32 89], [2 x i32] [i32 -7, i32 94], [2 x i32] [i32 -4, i32 92]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 39], [2 x i32] [i32 0, i32 65], [2 x i32] [i32 -15, i32 84], [2 x i32] [i32 -35, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 -2, i32 73], [2 x i32] [i32 -12, i32 104], [2 x i32] [i32 -9, i32 91], [2 x i32] [i32 -31, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 3, i32 55], [2 x i32] [i32 7, i32 56], [2 x i32] [i32 7, i32 55], [2 x i32] [i32 8, i32 61]], [4 x [2 x i32]] [[2 x i32] [i32 -3, i32 53], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -7, i32 74], [2 x i32] [i32 -9, i32 88]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [4 x [2 x i32]]] [[4 x [2 x i32]] [[2 x i32] [i32 11, i32 80], [2 x i32] [i32 5, i32 76], [2 x i32] [i32 2, i32 84], [2 x i32] [i32 5, i32 78]], [4 x [2 x i32]] [[2 x i32] [i32 -6, i32 55], [2 x i32] [i32 4, i32 61], [2 x i32] [i32 -14, i32 83], [2 x i32] [i32 -37, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [4 x [2 x i32]] [[2 x i32] [i32 -5, i32 79], [2 x i32] [i32 -11, i32 104], [2 x i32] [i32 -11, i32 91], [2 x i32] [i32 -30, i32 127]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 65], [2 x i32] [i32 -2, i32 79], [2 x i32] [i32 0, i32 72], [2 x i32] [i32 -4, i32 92]], [4 x [2 x i32]] [[2 x i32] [i32 -6, i32 56], [2 x i32] [i32 3, i32 68], [2 x i32] [i32 -8, i32 71], [2 x i32] [i32 -13, i32 98]], [4 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_MAP_I = internal constant [1 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -7, i32 93], [2 x i32] [i32 -11, i32 87], [2 x i32] [i32 -3, i32 77], [2 x i32] [i32 -5, i32 71], [2 x i32] [i32 -4, i32 63], [2 x i32] [i32 -4, i32 68], [2 x i32] [i32 -12, i32 84], [2 x i32] [i32 -7, i32 62], [2 x i32] [i32 -7, i32 65], [2 x i32] [i32 8, i32 61], [2 x i32] [i32 5, i32 56], [2 x i32] [i32 -2, i32 66], [2 x i32] [i32 1, i32 64], [2 x i32] [i32 0, i32 61], [2 x i32] [i32 -2, i32 78]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 1, i32 50], [2 x i32] [i32 7, i32 52], [2 x i32] [i32 10, i32 35], [2 x i32] [i32 0, i32 44], [2 x i32] [i32 11, i32 38], [2 x i32] [i32 1, i32 45], [2 x i32] [i32 0, i32 46], [2 x i32] [i32 5, i32 44], [2 x i32] [i32 31, i32 17], [2 x i32] [i32 1, i32 51], [2 x i32] [i32 7, i32 50], [2 x i32] [i32 28, i32 19], [2 x i32] [i32 16, i32 33], [2 x i32] [i32 14, i32 62]], [15 x [2 x i32]] [[2 x i32] [i32 -17, i32 120], [2 x i32] [i32 -20, i32 112], [2 x i32] [i32 -18, i32 114], [2 x i32] [i32 -11, i32 85], [2 x i32] [i32 -15, i32 92], [2 x i32] [i32 -14, i32 89], [2 x i32] [i32 -26, i32 71], [2 x i32] [i32 -15, i32 81], [2 x i32] [i32 -14, i32 80], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -14, i32 70], [2 x i32] [i32 -24, i32 56], [2 x i32] [i32 -23, i32 68], [2 x i32] [i32 -24, i32 50], [2 x i32] [i32 -11, i32 74]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -13, i32 108], [2 x i32] [i32 -15, i32 100], [2 x i32] [i32 -13, i32 101], [2 x i32] [i32 -13, i32 91], [2 x i32] [i32 -12, i32 94], [2 x i32] [i32 -10, i32 88], [2 x i32] [i32 -16, i32 84], [2 x i32] [i32 -10, i32 86], [2 x i32] [i32 -7, i32 83], [2 x i32] [i32 -13, i32 87], [2 x i32] [i32 -19, i32 94], [2 x i32] [i32 1, i32 70], [2 x i32] [i32 0, i32 72], [2 x i32] [i32 -5, i32 74], [2 x i32] [i32 18, i32 59]], [15 x [2 x i32]] [[2 x i32] [i32 -8, i32 102], [2 x i32] [i32 -15, i32 100], [2 x i32] [i32 0, i32 95], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -4, i32 75], [2 x i32] [i32 2, i32 72], [2 x i32] [i32 -11, i32 75], [2 x i32] [i32 -3, i32 71], [2 x i32] [i32 15, i32 46], [2 x i32] [i32 -13, i32 69], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 0, i32 65], [2 x i32] [i32 21, i32 37], [2 x i32] [i32 -15, i32 72], [2 x i32] [i32 9, i32 57], [2 x i32] [i32 16, i32 54], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 12, i32 72]]]], align 16
@INIT_MAP_P = internal constant [3 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -2, i32 85], [2 x i32] [i32 -6, i32 78], [2 x i32] [i32 -1, i32 75], [2 x i32] [i32 -7, i32 77], [2 x i32] [i32 2, i32 54], [2 x i32] [i32 5, i32 50], [2 x i32] [i32 -3, i32 68], [2 x i32] [i32 1, i32 50], [2 x i32] [i32 6, i32 42], [2 x i32] [i32 -4, i32 81], [2 x i32] [i32 1, i32 63], [2 x i32] [i32 -4, i32 70], [2 x i32] [i32 0, i32 67], [2 x i32] [i32 2, i32 57], [2 x i32] [i32 -2, i32 76]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 11, i32 35], [2 x i32] [i32 4, i32 64], [2 x i32] [i32 1, i32 61], [2 x i32] [i32 11, i32 35], [2 x i32] [i32 18, i32 25], [2 x i32] [i32 12, i32 24], [2 x i32] [i32 13, i32 29], [2 x i32] [i32 13, i32 36], [2 x i32] [i32 -10, i32 93], [2 x i32] [i32 -7, i32 73], [2 x i32] [i32 -2, i32 73], [2 x i32] [i32 13, i32 46], [2 x i32] [i32 9, i32 49], [2 x i32] [i32 -7, i32 100]], [15 x [2 x i32]] [[2 x i32] [i32 -4, i32 79], [2 x i32] [i32 -7, i32 71], [2 x i32] [i32 -5, i32 69], [2 x i32] [i32 -9, i32 70], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -10, i32 68], [2 x i32] [i32 -19, i32 73], [2 x i32] [i32 -12, i32 69], [2 x i32] [i32 -16, i32 70], [2 x i32] [i32 -15, i32 67], [2 x i32] [i32 -20, i32 62], [2 x i32] [i32 -19, i32 70], [2 x i32] [i32 -16, i32 66], [2 x i32] [i32 -22, i32 65], [2 x i32] [i32 -20, i32 63]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 9, i32 53], [2 x i32] [i32 2, i32 53], [2 x i32] [i32 5, i32 53], [2 x i32] [i32 -2, i32 61], [2 x i32] [i32 0, i32 56], [2 x i32] [i32 0, i32 56], [2 x i32] [i32 -13, i32 63], [2 x i32] [i32 -5, i32 60], [2 x i32] [i32 -1, i32 62], [2 x i32] [i32 4, i32 57], [2 x i32] [i32 -6, i32 69], [2 x i32] [i32 4, i32 57], [2 x i32] [i32 14, i32 39], [2 x i32] [i32 4, i32 51], [2 x i32] [i32 13, i32 68]], [15 x [2 x i32]] [[2 x i32] [i32 3, i32 64], [2 x i32] [i32 1, i32 61], [2 x i32] [i32 9, i32 63], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 7, i32 50], [2 x i32] [i32 16, i32 39], [2 x i32] [i32 5, i32 44], [2 x i32] [i32 4, i32 52], [2 x i32] [i32 11, i32 48], [2 x i32] [i32 -5, i32 60], [2 x i32] [i32 -1, i32 59], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 22, i32 33], [2 x i32] [i32 5, i32 44], [2 x i32] [i32 14, i32 43], [2 x i32] [i32 -1, i32 78], [2 x i32] [i32 0, i32 60], [2 x i32] [i32 9, i32 69]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -13, i32 103], [2 x i32] [i32 -13, i32 91], [2 x i32] [i32 -9, i32 89], [2 x i32] [i32 -14, i32 92], [2 x i32] [i32 -8, i32 76], [2 x i32] [i32 -12, i32 87], [2 x i32] [i32 -23, i32 110], [2 x i32] [i32 -24, i32 105], [2 x i32] [i32 -10, i32 78], [2 x i32] [i32 -20, i32 112], [2 x i32] [i32 -17, i32 99], [2 x i32] [i32 -78, i32 127], [2 x i32] [i32 -70, i32 127], [2 x i32] [i32 -50, i32 127], [2 x i32] [i32 -46, i32 127]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -4, i32 66], [2 x i32] [i32 -5, i32 78], [2 x i32] [i32 -4, i32 71], [2 x i32] [i32 -8, i32 72], [2 x i32] [i32 2, i32 59], [2 x i32] [i32 -1, i32 55], [2 x i32] [i32 -7, i32 70], [2 x i32] [i32 -6, i32 75], [2 x i32] [i32 -8, i32 89], [2 x i32] [i32 -34, i32 119], [2 x i32] [i32 -3, i32 75], [2 x i32] [i32 32, i32 20], [2 x i32] [i32 30, i32 22], [2 x i32] [i32 -44, i32 127]], [15 x [2 x i32]] [[2 x i32] [i32 -5, i32 85], [2 x i32] [i32 -6, i32 81], [2 x i32] [i32 -10, i32 77], [2 x i32] [i32 -7, i32 81], [2 x i32] [i32 -17, i32 80], [2 x i32] [i32 -18, i32 73], [2 x i32] [i32 -4, i32 74], [2 x i32] [i32 -10, i32 83], [2 x i32] [i32 -9, i32 71], [2 x i32] [i32 -9, i32 67], [2 x i32] [i32 -1, i32 61], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -14, i32 66], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 2, i32 59]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 54], [2 x i32] [i32 -5, i32 61], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 -1, i32 60], [2 x i32] [i32 -3, i32 61], [2 x i32] [i32 -8, i32 67], [2 x i32] [i32 -25, i32 84], [2 x i32] [i32 -14, i32 74], [2 x i32] [i32 -5, i32 65], [2 x i32] [i32 5, i32 52], [2 x i32] [i32 2, i32 57], [2 x i32] [i32 0, i32 61], [2 x i32] [i32 -9, i32 69], [2 x i32] [i32 -11, i32 70], [2 x i32] [i32 18, i32 55]], [15 x [2 x i32]] [[2 x i32] [i32 -4, i32 71], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 7, i32 61], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 9, i32 41], [2 x i32] [i32 18, i32 25], [2 x i32] [i32 9, i32 32], [2 x i32] [i32 5, i32 43], [2 x i32] [i32 9, i32 47], [2 x i32] [i32 0, i32 44], [2 x i32] [i32 0, i32 51], [2 x i32] [i32 2, i32 46], [2 x i32] [i32 19, i32 38], [2 x i32] [i32 -4, i32 66], [2 x i32] [i32 15, i32 38], [2 x i32] [i32 12, i32 42], [2 x i32] [i32 9, i32 34], [2 x i32] [i32 0, i32 89]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -4, i32 86], [2 x i32] [i32 -12, i32 88], [2 x i32] [i32 -5, i32 82], [2 x i32] [i32 -3, i32 72], [2 x i32] [i32 -4, i32 67], [2 x i32] [i32 -8, i32 72], [2 x i32] [i32 -16, i32 89], [2 x i32] [i32 -9, i32 69], [2 x i32] [i32 -1, i32 59], [2 x i32] [i32 5, i32 66], [2 x i32] [i32 4, i32 57], [2 x i32] [i32 -4, i32 71], [2 x i32] [i32 -2, i32 71], [2 x i32] [i32 2, i32 58], [2 x i32] [i32 -1, i32 74]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -4, i32 44], [2 x i32] [i32 -1, i32 69], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 -7, i32 51], [2 x i32] [i32 -4, i32 47], [2 x i32] [i32 -6, i32 42], [2 x i32] [i32 -3, i32 41], [2 x i32] [i32 -6, i32 53], [2 x i32] [i32 8, i32 76], [2 x i32] [i32 -9, i32 78], [2 x i32] [i32 -11, i32 83], [2 x i32] [i32 9, i32 52], [2 x i32] [i32 0, i32 67], [2 x i32] [i32 -5, i32 90]], [15 x [2 x i32]] [[2 x i32] [i32 -3, i32 78], [2 x i32] [i32 -8, i32 74], [2 x i32] [i32 -9, i32 72], [2 x i32] [i32 -10, i32 72], [2 x i32] [i32 -18, i32 75], [2 x i32] [i32 -12, i32 71], [2 x i32] [i32 -11, i32 63], [2 x i32] [i32 -5, i32 70], [2 x i32] [i32 -17, i32 75], [2 x i32] [i32 -14, i32 72], [2 x i32] [i32 -16, i32 67], [2 x i32] [i32 -8, i32 53], [2 x i32] [i32 -14, i32 59], [2 x i32] [i32 -9, i32 52], [2 x i32] [i32 -11, i32 68]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 1, i32 67], [2 x i32] [i32 -15, i32 72], [2 x i32] [i32 -5, i32 75], [2 x i32] [i32 -8, i32 80], [2 x i32] [i32 -21, i32 83], [2 x i32] [i32 -21, i32 64], [2 x i32] [i32 -13, i32 31], [2 x i32] [i32 -25, i32 64], [2 x i32] [i32 -29, i32 94], [2 x i32] [i32 9, i32 75], [2 x i32] [i32 17, i32 63], [2 x i32] [i32 -8, i32 74], [2 x i32] [i32 -5, i32 35], [2 x i32] [i32 -2, i32 27], [2 x i32] [i32 13, i32 91]], [15 x [2 x i32]] [[2 x i32] [i32 3, i32 65], [2 x i32] [i32 -7, i32 69], [2 x i32] [i32 8, i32 77], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -10, i32 66], [2 x i32] [i32 3, i32 62], [2 x i32] [i32 -3, i32 68], [2 x i32] [i32 -20, i32 81], [2 x i32] [i32 0, i32 30], [2 x i32] [i32 1, i32 7], [2 x i32] [i32 -3, i32 23], [2 x i32] [i32 -21, i32 74], [2 x i32] [i32 16, i32 66], [2 x i32] [i32 -23, i32 124], [2 x i32] [i32 17, i32 37], [2 x i32] [i32 44, i32 -18], [2 x i32] [i32 50, i32 -34], [2 x i32] [i32 -22, i32 127]]]], align 16
@INIT_LAST_I = internal constant [1 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 24, i32 0], [2 x i32] [i32 15, i32 9], [2 x i32] [i32 8, i32 25], [2 x i32] [i32 13, i32 18], [2 x i32] [i32 15, i32 9], [2 x i32] [i32 13, i32 19], [2 x i32] [i32 10, i32 37], [2 x i32] [i32 12, i32 18], [2 x i32] [i32 6, i32 29], [2 x i32] [i32 20, i32 33], [2 x i32] [i32 15, i32 30], [2 x i32] [i32 4, i32 45], [2 x i32] [i32 1, i32 58], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 7, i32 61]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 12, i32 38], [2 x i32] [i32 11, i32 45], [2 x i32] [i32 15, i32 39], [2 x i32] [i32 11, i32 42], [2 x i32] [i32 13, i32 44], [2 x i32] [i32 16, i32 45], [2 x i32] [i32 12, i32 41], [2 x i32] [i32 10, i32 49], [2 x i32] [i32 30, i32 34], [2 x i32] [i32 18, i32 42], [2 x i32] [i32 10, i32 55], [2 x i32] [i32 17, i32 51], [2 x i32] [i32 17, i32 46], [2 x i32] [i32 0, i32 89]], [15 x [2 x i32]] [[2 x i32] [i32 23, i32 -13], [2 x i32] [i32 26, i32 -13], [2 x i32] [i32 40, i32 -15], [2 x i32] [i32 49, i32 -14], [2 x i32] [i32 44, i32 3], [2 x i32] [i32 45, i32 6], [2 x i32] [i32 44, i32 34], [2 x i32] [i32 33, i32 54], [2 x i32] [i32 19, i32 82], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 26, i32 -19], [2 x i32] [i32 22, i32 -17], [2 x i32] [i32 26, i32 -17], [2 x i32] [i32 30, i32 -25], [2 x i32] [i32 28, i32 -20], [2 x i32] [i32 33, i32 -23], [2 x i32] [i32 37, i32 -27], [2 x i32] [i32 33, i32 -23], [2 x i32] [i32 40, i32 -28], [2 x i32] [i32 38, i32 -17], [2 x i32] [i32 33, i32 -11], [2 x i32] [i32 40, i32 -15], [2 x i32] [i32 41, i32 -6], [2 x i32] [i32 38, i32 1], [2 x i32] [i32 41, i32 17]], [15 x [2 x i32]] [[2 x i32] [i32 30, i32 -6], [2 x i32] [i32 27, i32 3], [2 x i32] [i32 26, i32 22], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 37, i32 -16], [2 x i32] [i32 35, i32 -4], [2 x i32] [i32 38, i32 -8], [2 x i32] [i32 38, i32 -3], [2 x i32] [i32 37, i32 3], [2 x i32] [i32 38, i32 5], [2 x i32] [i32 42, i32 0], [2 x i32] [i32 35, i32 16], [2 x i32] [i32 39, i32 22], [2 x i32] [i32 14, i32 48], [2 x i32] [i32 27, i32 37], [2 x i32] [i32 21, i32 60], [2 x i32] [i32 12, i32 68], [2 x i32] [i32 2, i32 97]]]], align 16
@INIT_LAST_P = internal constant [3 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 11, i32 28], [2 x i32] [i32 2, i32 40], [2 x i32] [i32 3, i32 44], [2 x i32] [i32 0, i32 49], [2 x i32] [i32 0, i32 46], [2 x i32] [i32 2, i32 44], [2 x i32] [i32 2, i32 51], [2 x i32] [i32 0, i32 47], [2 x i32] [i32 4, i32 39], [2 x i32] [i32 2, i32 62], [2 x i32] [i32 6, i32 46], [2 x i32] [i32 0, i32 54], [2 x i32] [i32 3, i32 54], [2 x i32] [i32 2, i32 58], [2 x i32] [i32 4, i32 63]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 6, i32 51], [2 x i32] [i32 6, i32 57], [2 x i32] [i32 7, i32 53], [2 x i32] [i32 6, i32 52], [2 x i32] [i32 6, i32 55], [2 x i32] [i32 11, i32 45], [2 x i32] [i32 14, i32 36], [2 x i32] [i32 8, i32 53], [2 x i32] [i32 -1, i32 82], [2 x i32] [i32 7, i32 55], [2 x i32] [i32 -3, i32 78], [2 x i32] [i32 15, i32 46], [2 x i32] [i32 22, i32 31], [2 x i32] [i32 -1, i32 84]], [15 x [2 x i32]] [[2 x i32] [i32 9, i32 -2], [2 x i32] [i32 26, i32 -9], [2 x i32] [i32 33, i32 -9], [2 x i32] [i32 39, i32 -7], [2 x i32] [i32 41, i32 -2], [2 x i32] [i32 45, i32 3], [2 x i32] [i32 49, i32 9], [2 x i32] [i32 45, i32 27], [2 x i32] [i32 36, i32 59], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 25, i32 7], [2 x i32] [i32 30, i32 -7], [2 x i32] [i32 28, i32 3], [2 x i32] [i32 28, i32 4], [2 x i32] [i32 32, i32 0], [2 x i32] [i32 34, i32 -1], [2 x i32] [i32 30, i32 6], [2 x i32] [i32 30, i32 6], [2 x i32] [i32 32, i32 9], [2 x i32] [i32 31, i32 19], [2 x i32] [i32 26, i32 27], [2 x i32] [i32 26, i32 30], [2 x i32] [i32 37, i32 20], [2 x i32] [i32 28, i32 34], [2 x i32] [i32 17, i32 70]], [15 x [2 x i32]] [[2 x i32] [i32 1, i32 67], [2 x i32] [i32 5, i32 59], [2 x i32] [i32 9, i32 67], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 16, i32 30], [2 x i32] [i32 18, i32 32], [2 x i32] [i32 18, i32 35], [2 x i32] [i32 22, i32 29], [2 x i32] [i32 24, i32 31], [2 x i32] [i32 23, i32 38], [2 x i32] [i32 18, i32 43], [2 x i32] [i32 20, i32 41], [2 x i32] [i32 11, i32 63], [2 x i32] [i32 9, i32 59], [2 x i32] [i32 9, i32 64], [2 x i32] [i32 -1, i32 94], [2 x i32] [i32 -2, i32 89], [2 x i32] [i32 -9, i32 108]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 4, i32 45], [2 x i32] [i32 10, i32 28], [2 x i32] [i32 10, i32 31], [2 x i32] [i32 33, i32 -11], [2 x i32] [i32 52, i32 -43], [2 x i32] [i32 18, i32 15], [2 x i32] [i32 28, i32 0], [2 x i32] [i32 35, i32 -22], [2 x i32] [i32 38, i32 -25], [2 x i32] [i32 34, i32 0], [2 x i32] [i32 39, i32 -18], [2 x i32] [i32 32, i32 -12], [2 x i32] [i32 102, i32 -94], [2 x i32] zeroinitializer, [2 x i32] [i32 56, i32 -15]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 33, i32 -4], [2 x i32] [i32 29, i32 10], [2 x i32] [i32 37, i32 -5], [2 x i32] [i32 51, i32 -29], [2 x i32] [i32 39, i32 -9], [2 x i32] [i32 52, i32 -34], [2 x i32] [i32 69, i32 -58], [2 x i32] [i32 67, i32 -63], [2 x i32] [i32 44, i32 -5], [2 x i32] [i32 32, i32 7], [2 x i32] [i32 55, i32 -29], [2 x i32] [i32 32, i32 1], [2 x i32] zeroinitializer, [2 x i32] [i32 27, i32 36]], [15 x [2 x i32]] [[2 x i32] [i32 17, i32 -10], [2 x i32] [i32 32, i32 -13], [2 x i32] [i32 42, i32 -9], [2 x i32] [i32 49, i32 -5], [2 x i32] [i32 53, i32 0], [2 x i32] [i32 64, i32 3], [2 x i32] [i32 68, i32 10], [2 x i32] [i32 66, i32 27], [2 x i32] [i32 47, i32 57], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 33, i32 -25], [2 x i32] [i32 34, i32 -30], [2 x i32] [i32 36, i32 -28], [2 x i32] [i32 38, i32 -28], [2 x i32] [i32 38, i32 -27], [2 x i32] [i32 34, i32 -18], [2 x i32] [i32 35, i32 -16], [2 x i32] [i32 34, i32 -14], [2 x i32] [i32 32, i32 -8], [2 x i32] [i32 37, i32 -6], [2 x i32] [i32 35, i32 0], [2 x i32] [i32 30, i32 10], [2 x i32] [i32 28, i32 18], [2 x i32] [i32 26, i32 25], [2 x i32] [i32 29, i32 41]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 75], [2 x i32] [i32 2, i32 72], [2 x i32] [i32 8, i32 77], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 14, i32 35], [2 x i32] [i32 18, i32 31], [2 x i32] [i32 17, i32 35], [2 x i32] [i32 21, i32 30], [2 x i32] [i32 17, i32 45], [2 x i32] [i32 20, i32 42], [2 x i32] [i32 18, i32 45], [2 x i32] [i32 27, i32 26], [2 x i32] [i32 16, i32 54], [2 x i32] [i32 7, i32 66], [2 x i32] [i32 16, i32 56], [2 x i32] [i32 11, i32 73], [2 x i32] [i32 10, i32 67], [2 x i32] [i32 -10, i32 116]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 4, i32 39], [2 x i32] [i32 0, i32 42], [2 x i32] [i32 7, i32 34], [2 x i32] [i32 11, i32 29], [2 x i32] [i32 8, i32 31], [2 x i32] [i32 6, i32 37], [2 x i32] [i32 7, i32 42], [2 x i32] [i32 3, i32 40], [2 x i32] [i32 8, i32 33], [2 x i32] [i32 13, i32 43], [2 x i32] [i32 13, i32 36], [2 x i32] [i32 4, i32 47], [2 x i32] [i32 3, i32 55], [2 x i32] [i32 2, i32 58], [2 x i32] [i32 6, i32 60]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 8, i32 44], [2 x i32] [i32 11, i32 44], [2 x i32] [i32 14, i32 42], [2 x i32] [i32 7, i32 48], [2 x i32] [i32 4, i32 56], [2 x i32] [i32 4, i32 52], [2 x i32] [i32 13, i32 37], [2 x i32] [i32 9, i32 49], [2 x i32] [i32 19, i32 58], [2 x i32] [i32 10, i32 48], [2 x i32] [i32 12, i32 45], [2 x i32] [i32 0, i32 69], [2 x i32] [i32 20, i32 33], [2 x i32] [i32 8, i32 63]], [15 x [2 x i32]] [[2 x i32] [i32 9, i32 -2], [2 x i32] [i32 30, i32 -10], [2 x i32] [i32 31, i32 -4], [2 x i32] [i32 33, i32 -1], [2 x i32] [i32 33, i32 7], [2 x i32] [i32 31, i32 12], [2 x i32] [i32 37, i32 23], [2 x i32] [i32 31, i32 38], [2 x i32] [i32 20, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 35, i32 -18], [2 x i32] [i32 33, i32 -25], [2 x i32] [i32 28, i32 -3], [2 x i32] [i32 24, i32 10], [2 x i32] [i32 27, i32 0], [2 x i32] [i32 34, i32 -14], [2 x i32] [i32 52, i32 -44], [2 x i32] [i32 39, i32 -24], [2 x i32] [i32 19, i32 17], [2 x i32] [i32 31, i32 25], [2 x i32] [i32 36, i32 29], [2 x i32] [i32 24, i32 33], [2 x i32] [i32 34, i32 15], [2 x i32] [i32 30, i32 20], [2 x i32] [i32 22, i32 73]], [15 x [2 x i32]] [[2 x i32] [i32 20, i32 34], [2 x i32] [i32 19, i32 31], [2 x i32] [i32 27, i32 44], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 19, i32 16], [2 x i32] [i32 15, i32 36], [2 x i32] [i32 15, i32 36], [2 x i32] [i32 21, i32 28], [2 x i32] [i32 25, i32 21], [2 x i32] [i32 30, i32 20], [2 x i32] [i32 31, i32 12], [2 x i32] [i32 27, i32 16], [2 x i32] [i32 24, i32 42], [2 x i32] [i32 0, i32 93], [2 x i32] [i32 14, i32 56], [2 x i32] [i32 15, i32 57], [2 x i32] [i32 26, i32 38], [2 x i32] [i32 -24, i32 127]]]], align 16
@INIT_ONE_I = internal constant [1 x [8 x [5 x [2 x i32]]]] [[8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -3, i32 71], [2 x i32] [i32 -6, i32 42], [2 x i32] [i32 -5, i32 50], [2 x i32] [i32 -3, i32 54], [2 x i32] [i32 -2, i32 62]], [5 x [2 x i32]] [[2 x i32] [i32 -5, i32 67], [2 x i32] [i32 -5, i32 27], [2 x i32] [i32 -3, i32 39], [2 x i32] [i32 -2, i32 44], [2 x i32] [i32 0, i32 46]], [5 x [2 x i32]] [[2 x i32] [i32 -3, i32 75], [2 x i32] [i32 -1, i32 23], [2 x i32] [i32 1, i32 34], [2 x i32] [i32 1, i32 43], [2 x i32] [i32 0, i32 54]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -12, i32 92], [2 x i32] [i32 -15, i32 55], [2 x i32] [i32 -10, i32 60], [2 x i32] [i32 -6, i32 62], [2 x i32] [i32 -4, i32 65]], [5 x [2 x i32]] [[2 x i32] [i32 -11, i32 97], [2 x i32] [i32 -20, i32 84], [2 x i32] [i32 -11, i32 79], [2 x i32] [i32 -6, i32 73], [2 x i32] [i32 -4, i32 74]], [5 x [2 x i32]] [[2 x i32] [i32 -8, i32 78], [2 x i32] [i32 -5, i32 33], [2 x i32] [i32 -4, i32 48], [2 x i32] [i32 -2, i32 53], [2 x i32] [i32 -3, i32 62]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_ONE_P = internal constant [3 x [8 x [5 x [2 x i32]]]] [[8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -6, i32 76], [2 x i32] [i32 -2, i32 44], [2 x i32] [i32 0, i32 45], [2 x i32] [i32 0, i32 52], [2 x i32] [i32 -3, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -9, i32 77], [2 x i32] [i32 3, i32 24], [2 x i32] [i32 0, i32 42], [2 x i32] [i32 0, i32 48], [2 x i32] [i32 0, i32 55]], [5 x [2 x i32]] [[2 x i32] [i32 -6, i32 66], [2 x i32] [i32 -7, i32 35], [2 x i32] [i32 -7, i32 42], [2 x i32] [i32 -8, i32 45], [2 x i32] [i32 -5, i32 48]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 1, i32 58], [2 x i32] [i32 -3, i32 29], [2 x i32] [i32 -1, i32 36], [2 x i32] [i32 1, i32 38], [2 x i32] [i32 2, i32 43]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 70], [2 x i32] [i32 -4, i32 29], [2 x i32] [i32 5, i32 31], [2 x i32] [i32 7, i32 42], [2 x i32] [i32 1, i32 59]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 58], [2 x i32] [i32 8, i32 5], [2 x i32] [i32 10, i32 14], [2 x i32] [i32 14, i32 18], [2 x i32] [i32 13, i32 27]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -23, i32 112], [2 x i32] [i32 -15, i32 71], [2 x i32] [i32 -7, i32 61], [2 x i32] [i32 0, i32 53], [2 x i32] [i32 -5, i32 66]], [5 x [2 x i32]] [[2 x i32] [i32 -21, i32 101], [2 x i32] [i32 -3, i32 39], [2 x i32] [i32 -5, i32 53], [2 x i32] [i32 -7, i32 61], [2 x i32] [i32 -11, i32 75]], [5 x [2 x i32]] [[2 x i32] [i32 -5, i32 71], [2 x i32] [i32 0, i32 24], [2 x i32] [i32 -1, i32 36], [2 x i32] [i32 -2, i32 42], [2 x i32] [i32 -2, i32 52]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -11, i32 76], [2 x i32] [i32 -10, i32 44], [2 x i32] [i32 -10, i32 52], [2 x i32] [i32 -10, i32 57], [2 x i32] [i32 -9, i32 58]], [5 x [2 x i32]] [[2 x i32] [i32 2, i32 66], [2 x i32] [i32 -9, i32 34], [2 x i32] [i32 1, i32 32], [2 x i32] [i32 11, i32 31], [2 x i32] [i32 5, i32 52]], [5 x [2 x i32]] [[2 x i32] [i32 3, i32 52], [2 x i32] [i32 7, i32 4], [2 x i32] [i32 10, i32 8], [2 x i32] [i32 17, i32 8], [2 x i32] [i32 16, i32 19]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -24, i32 115], [2 x i32] [i32 -22, i32 82], [2 x i32] [i32 -9, i32 62], [2 x i32] [i32 0, i32 53], [2 x i32] [i32 0, i32 59]], [5 x [2 x i32]] [[2 x i32] [i32 -21, i32 100], [2 x i32] [i32 -14, i32 57], [2 x i32] [i32 -12, i32 67], [2 x i32] [i32 -11, i32 71], [2 x i32] [i32 -10, i32 77]], [5 x [2 x i32]] [[2 x i32] [i32 -9, i32 71], [2 x i32] [i32 -7, i32 37], [2 x i32] [i32 -8, i32 44], [2 x i32] [i32 -11, i32 49], [2 x i32] [i32 -10, i32 56]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -10, i32 82], [2 x i32] [i32 -8, i32 48], [2 x i32] [i32 -8, i32 61], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -7, i32 70]], [5 x [2 x i32]] [[2 x i32] [i32 -4, i32 79], [2 x i32] [i32 -22, i32 69], [2 x i32] [i32 -16, i32 75], [2 x i32] [i32 -2, i32 58], [2 x i32] [i32 1, i32 58]], [5 x [2 x i32]] [[2 x i32] [i32 -13, i32 81], [2 x i32] [i32 -6, i32 38], [2 x i32] [i32 -13, i32 62], [2 x i32] [i32 -6, i32 58], [2 x i32] [i32 -2, i32 59]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_ABS_I = internal constant [1 x [8 x [5 x [2 x i32]]]] [[8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 0, i32 58], [2 x i32] [i32 1, i32 63], [2 x i32] [i32 -2, i32 72], [2 x i32] [i32 -1, i32 74], [2 x i32] [i32 -9, i32 91]], [5 x [2 x i32]] [[2 x i32] [i32 -16, i32 64], [2 x i32] [i32 -8, i32 68], [2 x i32] [i32 -10, i32 78], [2 x i32] [i32 -6, i32 77], [2 x i32] [i32 -10, i32 86]], [5 x [2 x i32]] [[2 x i32] [i32 -2, i32 55], [2 x i32] [i32 0, i32 61], [2 x i32] [i32 1, i32 64], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -9, i32 92]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -12, i32 73], [2 x i32] [i32 -8, i32 76], [2 x i32] [i32 -7, i32 80], [2 x i32] [i32 -9, i32 88], [2 x i32] [i32 -17, i32 110]], [5 x [2 x i32]] [[2 x i32] [i32 -13, i32 86], [2 x i32] [i32 -13, i32 96], [2 x i32] [i32 -11, i32 97], [2 x i32] [i32 -19, i32 117], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -13, i32 71], [2 x i32] [i32 -10, i32 79], [2 x i32] [i32 -12, i32 86], [2 x i32] [i32 -13, i32 90], [2 x i32] [i32 -14, i32 97]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_ABS_P = internal constant [3 x [8 x [5 x [2 x i32]]]] [[8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -2, i32 59], [2 x i32] [i32 -4, i32 70], [2 x i32] [i32 -4, i32 75], [2 x i32] [i32 -8, i32 82], [2 x i32] [i32 -17, i32 102]], [5 x [2 x i32]] [[2 x i32] [i32 -6, i32 59], [2 x i32] [i32 -7, i32 71], [2 x i32] [i32 -12, i32 83], [2 x i32] [i32 -11, i32 87], [2 x i32] [i32 -30, i32 119]], [5 x [2 x i32]] [[2 x i32] [i32 -12, i32 56], [2 x i32] [i32 -6, i32 60], [2 x i32] [i32 -5, i32 62], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -8, i32 76]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -6, i32 55], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 -3, i32 74], [2 x i32] [i32 -10, i32 90]], [5 x [2 x i32]] [[2 x i32] [i32 -2, i32 58], [2 x i32] [i32 -3, i32 72], [2 x i32] [i32 -3, i32 81], [2 x i32] [i32 -11, i32 97], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 2, i32 40], [2 x i32] [i32 0, i32 58], [2 x i32] [i32 -3, i32 70], [2 x i32] [i32 -6, i32 79], [2 x i32] [i32 -8, i32 85]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -11, i32 77], [2 x i32] [i32 -9, i32 80], [2 x i32] [i32 -9, i32 84], [2 x i32] [i32 -10, i32 87], [2 x i32] [i32 -34, i32 127]], [5 x [2 x i32]] [[2 x i32] [i32 -15, i32 77], [2 x i32] [i32 -17, i32 91], [2 x i32] [i32 -25, i32 107], [2 x i32] [i32 -25, i32 111], [2 x i32] [i32 -28, i32 122]], [5 x [2 x i32]] [[2 x i32] [i32 -9, i32 57], [2 x i32] [i32 -6, i32 63], [2 x i32] [i32 -4, i32 65], [2 x i32] [i32 -4, i32 67], [2 x i32] [i32 -7, i32 82]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -16, i32 72], [2 x i32] [i32 -7, i32 69], [2 x i32] [i32 -4, i32 69], [2 x i32] [i32 -5, i32 74], [2 x i32] [i32 -9, i32 86]], [5 x [2 x i32]] [[2 x i32] [i32 -2, i32 55], [2 x i32] [i32 -2, i32 67], [2 x i32] [i32 0, i32 73], [2 x i32] [i32 -8, i32 89], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 3, i32 37], [2 x i32] [i32 -1, i32 61], [2 x i32] [i32 -5, i32 73], [2 x i32] [i32 -1, i32 70], [2 x i32] [i32 -4, i32 78]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]], [8 x [5 x [2 x i32]]] [[5 x [2 x i32]] [[2 x i32] [i32 -14, i32 85], [2 x i32] [i32 -13, i32 89], [2 x i32] [i32 -13, i32 94], [2 x i32] [i32 -11, i32 92], [2 x i32] [i32 -29, i32 127]], [5 x [2 x i32]] [[2 x i32] [i32 -21, i32 85], [2 x i32] [i32 -16, i32 88], [2 x i32] [i32 -23, i32 104], [2 x i32] [i32 -15, i32 98], [2 x i32] [i32 -37, i32 127]], [5 x [2 x i32]] [[2 x i32] [i32 -12, i32 59], [2 x i32] [i32 -8, i32 63], [2 x i32] [i32 -9, i32 67], [2 x i32] [i32 -6, i32 68], [2 x i32] [i32 -10, i32 79]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -14, i32 75], [2 x i32] [i32 -10, i32 79], [2 x i32] [i32 -9, i32 83], [2 x i32] [i32 -12, i32 92], [2 x i32] [i32 -18, i32 108]], [5 x [2 x i32]] [[2 x i32] [i32 -13, i32 78], [2 x i32] [i32 -9, i32 83], [2 x i32] [i32 -4, i32 81], [2 x i32] [i32 -13, i32 99], [2 x i32] [i32 0, i32 64]], [5 x [2 x i32]] [[2 x i32] [i32 -16, i32 73], [2 x i32] [i32 -10, i32 76], [2 x i32] [i32 -13, i32 86], [2 x i32] [i32 -9, i32 83], [2 x i32] [i32 -10, i32 87]], [5 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]]]], align 16
@INIT_FLD_MAP_I = internal constant [1 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -6, i32 93], [2 x i32] [i32 -6, i32 84], [2 x i32] [i32 -8, i32 79], [2 x i32] [i32 0, i32 66], [2 x i32] [i32 -1, i32 71], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 -2, i32 60], [2 x i32] [i32 -2, i32 59], [2 x i32] [i32 -5, i32 75], [2 x i32] [i32 -3, i32 62], [2 x i32] [i32 -4, i32 58], [2 x i32] [i32 -9, i32 66], [2 x i32] [i32 -1, i32 79], [2 x i32] [i32 0, i32 71], [2 x i32] [i32 3, i32 68]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 10, i32 44], [2 x i32] [i32 -7, i32 62], [2 x i32] [i32 15, i32 36], [2 x i32] [i32 14, i32 40], [2 x i32] [i32 16, i32 27], [2 x i32] [i32 12, i32 29], [2 x i32] [i32 1, i32 44], [2 x i32] [i32 20, i32 36], [2 x i32] [i32 18, i32 32], [2 x i32] [i32 5, i32 42], [2 x i32] [i32 1, i32 48], [2 x i32] [i32 10, i32 62], [2 x i32] [i32 17, i32 46], [2 x i32] [i32 9, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -14, i32 106], [2 x i32] [i32 -13, i32 97], [2 x i32] [i32 -15, i32 90], [2 x i32] [i32 -12, i32 90], [2 x i32] [i32 -18, i32 88], [2 x i32] [i32 -10, i32 73], [2 x i32] [i32 -9, i32 79], [2 x i32] [i32 -14, i32 86], [2 x i32] [i32 -10, i32 73], [2 x i32] [i32 -10, i32 70], [2 x i32] [i32 -10, i32 69], [2 x i32] [i32 -5, i32 66], [2 x i32] [i32 -9, i32 64], [2 x i32] [i32 -5, i32 58], [2 x i32] [i32 2, i32 59]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -12, i32 104], [2 x i32] [i32 -11, i32 97], [2 x i32] [i32 -16, i32 96], [2 x i32] [i32 -7, i32 88], [2 x i32] [i32 -8, i32 85], [2 x i32] [i32 -7, i32 85], [2 x i32] [i32 -9, i32 85], [2 x i32] [i32 -13, i32 88], [2 x i32] [i32 4, i32 66], [2 x i32] [i32 -3, i32 77], [2 x i32] [i32 -3, i32 76], [2 x i32] [i32 -6, i32 76], [2 x i32] [i32 10, i32 58], [2 x i32] [i32 -1, i32 76], [2 x i32] [i32 -1, i32 83]], [15 x [2 x i32]] [[2 x i32] [i32 -7, i32 99], [2 x i32] [i32 -14, i32 95], [2 x i32] [i32 2, i32 95], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 76], [2 x i32] [i32 -5, i32 74], [2 x i32] [i32 0, i32 70], [2 x i32] [i32 -11, i32 75], [2 x i32] [i32 1, i32 68], [2 x i32] [i32 0, i32 65], [2 x i32] [i32 -14, i32 73], [2 x i32] [i32 3, i32 62], [2 x i32] [i32 4, i32 62], [2 x i32] [i32 -1, i32 68], [2 x i32] [i32 -13, i32 75], [2 x i32] [i32 11, i32 55], [2 x i32] [i32 5, i32 64], [2 x i32] [i32 12, i32 70]]]], align 16
@INIT_FLD_MAP_P = internal constant [3 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -13, i32 106], [2 x i32] [i32 -16, i32 106], [2 x i32] [i32 -10, i32 87], [2 x i32] [i32 -21, i32 114], [2 x i32] [i32 -18, i32 110], [2 x i32] [i32 -14, i32 98], [2 x i32] [i32 -22, i32 110], [2 x i32] [i32 -21, i32 106], [2 x i32] [i32 -18, i32 103], [2 x i32] [i32 -21, i32 107], [2 x i32] [i32 -23, i32 108], [2 x i32] [i32 -26, i32 112], [2 x i32] [i32 -10, i32 96], [2 x i32] [i32 -12, i32 95], [2 x i32] [i32 -5, i32 91]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -9, i32 93], [2 x i32] [i32 -22, i32 94], [2 x i32] [i32 -5, i32 86], [2 x i32] [i32 9, i32 67], [2 x i32] [i32 -4, i32 80], [2 x i32] [i32 -10, i32 85], [2 x i32] [i32 -1, i32 70], [2 x i32] [i32 7, i32 60], [2 x i32] [i32 9, i32 58], [2 x i32] [i32 5, i32 61], [2 x i32] [i32 12, i32 50], [2 x i32] [i32 15, i32 50], [2 x i32] [i32 18, i32 49], [2 x i32] [i32 17, i32 54]], [15 x [2 x i32]] [[2 x i32] [i32 -5, i32 85], [2 x i32] [i32 -6, i32 81], [2 x i32] [i32 -10, i32 77], [2 x i32] [i32 -7, i32 81], [2 x i32] [i32 -17, i32 80], [2 x i32] [i32 -18, i32 73], [2 x i32] [i32 -4, i32 74], [2 x i32] [i32 -10, i32 83], [2 x i32] [i32 -9, i32 71], [2 x i32] [i32 -9, i32 67], [2 x i32] [i32 -1, i32 61], [2 x i32] [i32 -8, i32 66], [2 x i32] [i32 -14, i32 66], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 2, i32 59]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 10, i32 41], [2 x i32] [i32 7, i32 46], [2 x i32] [i32 -1, i32 51], [2 x i32] [i32 7, i32 49], [2 x i32] [i32 8, i32 52], [2 x i32] [i32 9, i32 41], [2 x i32] [i32 6, i32 47], [2 x i32] [i32 2, i32 55], [2 x i32] [i32 13, i32 41], [2 x i32] [i32 10, i32 44], [2 x i32] [i32 6, i32 50], [2 x i32] [i32 5, i32 53], [2 x i32] [i32 13, i32 49], [2 x i32] [i32 4, i32 63], [2 x i32] [i32 6, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -2, i32 69], [2 x i32] [i32 -2, i32 59], [2 x i32] [i32 6, i32 70], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 10, i32 44], [2 x i32] [i32 9, i32 31], [2 x i32] [i32 12, i32 43], [2 x i32] [i32 3, i32 53], [2 x i32] [i32 14, i32 34], [2 x i32] [i32 10, i32 38], [2 x i32] [i32 -3, i32 52], [2 x i32] [i32 13, i32 40], [2 x i32] [i32 17, i32 32], [2 x i32] [i32 7, i32 44], [2 x i32] [i32 7, i32 38], [2 x i32] [i32 13, i32 50], [2 x i32] [i32 10, i32 57], [2 x i32] [i32 26, i32 43]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -21, i32 126], [2 x i32] [i32 -23, i32 124], [2 x i32] [i32 -20, i32 110], [2 x i32] [i32 -26, i32 126], [2 x i32] [i32 -25, i32 124], [2 x i32] [i32 -17, i32 105], [2 x i32] [i32 -27, i32 121], [2 x i32] [i32 -27, i32 117], [2 x i32] [i32 -17, i32 102], [2 x i32] [i32 -26, i32 117], [2 x i32] [i32 -27, i32 116], [2 x i32] [i32 -33, i32 122], [2 x i32] [i32 -10, i32 95], [2 x i32] [i32 -14, i32 100], [2 x i32] [i32 -8, i32 95]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -17, i32 111], [2 x i32] [i32 -28, i32 114], [2 x i32] [i32 -6, i32 89], [2 x i32] [i32 -2, i32 80], [2 x i32] [i32 -4, i32 82], [2 x i32] [i32 -9, i32 85], [2 x i32] [i32 -8, i32 81], [2 x i32] [i32 -1, i32 72], [2 x i32] [i32 5, i32 64], [2 x i32] [i32 1, i32 67], [2 x i32] [i32 9, i32 56], [2 x i32] [i32 0, i32 69], [2 x i32] [i32 1, i32 69], [2 x i32] [i32 7, i32 69]], [15 x [2 x i32]] [[2 x i32] [i32 -3, i32 81], [2 x i32] [i32 -3, i32 76], [2 x i32] [i32 -7, i32 72], [2 x i32] [i32 -6, i32 78], [2 x i32] [i32 -12, i32 72], [2 x i32] [i32 -14, i32 68], [2 x i32] [i32 -3, i32 70], [2 x i32] [i32 -6, i32 76], [2 x i32] [i32 -5, i32 66], [2 x i32] [i32 -5, i32 62], [2 x i32] [i32 0, i32 57], [2 x i32] [i32 -4, i32 61], [2 x i32] [i32 -9, i32 60], [2 x i32] [i32 1, i32 54], [2 x i32] [i32 2, i32 58]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 -7, i32 69], [2 x i32] [i32 -6, i32 67], [2 x i32] [i32 -16, i32 77], [2 x i32] [i32 -2, i32 64], [2 x i32] [i32 2, i32 61], [2 x i32] [i32 -6, i32 67], [2 x i32] [i32 -3, i32 64], [2 x i32] [i32 2, i32 57], [2 x i32] [i32 -3, i32 65], [2 x i32] [i32 -3, i32 66], [2 x i32] [i32 0, i32 62], [2 x i32] [i32 9, i32 51], [2 x i32] [i32 -1, i32 66], [2 x i32] [i32 -2, i32 71], [2 x i32] [i32 -2, i32 75]], [15 x [2 x i32]] [[2 x i32] [i32 -1, i32 70], [2 x i32] [i32 -9, i32 72], [2 x i32] [i32 14, i32 60], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 16, i32 37], [2 x i32] [i32 0, i32 47], [2 x i32] [i32 18, i32 35], [2 x i32] [i32 11, i32 37], [2 x i32] [i32 12, i32 41], [2 x i32] [i32 10, i32 41], [2 x i32] [i32 2, i32 48], [2 x i32] [i32 12, i32 41], [2 x i32] [i32 13, i32 41], [2 x i32] [i32 0, i32 59], [2 x i32] [i32 3, i32 50], [2 x i32] [i32 19, i32 40], [2 x i32] [i32 3, i32 66], [2 x i32] [i32 18, i32 50]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 -22, i32 127], [2 x i32] [i32 -25, i32 127], [2 x i32] [i32 -25, i32 120], [2 x i32] [i32 -27, i32 127], [2 x i32] [i32 -19, i32 114], [2 x i32] [i32 -23, i32 117], [2 x i32] [i32 -25, i32 118], [2 x i32] [i32 -26, i32 117], [2 x i32] [i32 -24, i32 113], [2 x i32] [i32 -28, i32 118], [2 x i32] [i32 -31, i32 120], [2 x i32] [i32 -37, i32 124], [2 x i32] [i32 -10, i32 94], [2 x i32] [i32 -15, i32 102], [2 x i32] [i32 -10, i32 99]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 -13, i32 106], [2 x i32] [i32 -50, i32 127], [2 x i32] [i32 -5, i32 92], [2 x i32] [i32 17, i32 57], [2 x i32] [i32 -5, i32 86], [2 x i32] [i32 -13, i32 94], [2 x i32] [i32 -12, i32 91], [2 x i32] [i32 -2, i32 77], [2 x i32] [i32 0, i32 71], [2 x i32] [i32 -1, i32 73], [2 x i32] [i32 4, i32 64], [2 x i32] [i32 -7, i32 81], [2 x i32] [i32 5, i32 64], [2 x i32] [i32 15, i32 57]], [15 x [2 x i32]] [[2 x i32] [i32 -3, i32 78], [2 x i32] [i32 -8, i32 74], [2 x i32] [i32 -9, i32 72], [2 x i32] [i32 -10, i32 72], [2 x i32] [i32 -18, i32 75], [2 x i32] [i32 -12, i32 71], [2 x i32] [i32 -11, i32 63], [2 x i32] [i32 -5, i32 70], [2 x i32] [i32 -17, i32 75], [2 x i32] [i32 -14, i32 72], [2 x i32] [i32 -16, i32 67], [2 x i32] [i32 -8, i32 53], [2 x i32] [i32 -14, i32 59], [2 x i32] [i32 -9, i32 52], [2 x i32] [i32 -11, i32 68]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 1, i32 67], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -10, i32 67], [2 x i32] [i32 1, i32 68], [2 x i32] [i32 0, i32 77], [2 x i32] [i32 2, i32 64], [2 x i32] [i32 0, i32 68], [2 x i32] [i32 -5, i32 78], [2 x i32] [i32 7, i32 55], [2 x i32] [i32 5, i32 59], [2 x i32] [i32 2, i32 65], [2 x i32] [i32 14, i32 54], [2 x i32] [i32 15, i32 44], [2 x i32] [i32 5, i32 60], [2 x i32] [i32 2, i32 70]], [15 x [2 x i32]] [[2 x i32] [i32 -2, i32 76], [2 x i32] [i32 -18, i32 86], [2 x i32] [i32 12, i32 70], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 5, i32 64], [2 x i32] [i32 -12, i32 70], [2 x i32] [i32 11, i32 55], [2 x i32] [i32 5, i32 56], [2 x i32] [i32 0, i32 69], [2 x i32] [i32 2, i32 65], [2 x i32] [i32 -6, i32 74], [2 x i32] [i32 5, i32 54], [2 x i32] [i32 7, i32 54], [2 x i32] [i32 -6, i32 76], [2 x i32] [i32 -11, i32 82], [2 x i32] [i32 -2, i32 77], [2 x i32] [i32 -2, i32 77], [2 x i32] [i32 25, i32 42]]]], align 16
@INIT_FLD_LAST_I = internal constant [1 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 15, i32 6], [2 x i32] [i32 6, i32 19], [2 x i32] [i32 7, i32 16], [2 x i32] [i32 12, i32 14], [2 x i32] [i32 18, i32 13], [2 x i32] [i32 13, i32 11], [2 x i32] [i32 13, i32 15], [2 x i32] [i32 15, i32 16], [2 x i32] [i32 12, i32 23], [2 x i32] [i32 13, i32 23], [2 x i32] [i32 15, i32 20], [2 x i32] [i32 14, i32 26], [2 x i32] [i32 14, i32 44], [2 x i32] [i32 17, i32 40], [2 x i32] [i32 17, i32 47]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 24, i32 17], [2 x i32] [i32 21, i32 21], [2 x i32] [i32 25, i32 22], [2 x i32] [i32 31, i32 27], [2 x i32] [i32 22, i32 29], [2 x i32] [i32 19, i32 35], [2 x i32] [i32 14, i32 50], [2 x i32] [i32 10, i32 57], [2 x i32] [i32 7, i32 63], [2 x i32] [i32 -2, i32 77], [2 x i32] [i32 -4, i32 82], [2 x i32] [i32 -3, i32 94], [2 x i32] [i32 9, i32 69], [2 x i32] [i32 -12, i32 109]], [15 x [2 x i32]] [[2 x i32] [i32 21, i32 -10], [2 x i32] [i32 24, i32 -11], [2 x i32] [i32 28, i32 -8], [2 x i32] [i32 28, i32 -1], [2 x i32] [i32 29, i32 3], [2 x i32] [i32 29, i32 9], [2 x i32] [i32 35, i32 20], [2 x i32] [i32 29, i32 36], [2 x i32] [i32 14, i32 67], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 36, i32 -35], [2 x i32] [i32 36, i32 -34], [2 x i32] [i32 32, i32 -26], [2 x i32] [i32 37, i32 -30], [2 x i32] [i32 44, i32 -32], [2 x i32] [i32 34, i32 -18], [2 x i32] [i32 34, i32 -15], [2 x i32] [i32 40, i32 -15], [2 x i32] [i32 33, i32 -7], [2 x i32] [i32 35, i32 -5], [2 x i32] [i32 33, i32 0], [2 x i32] [i32 38, i32 2], [2 x i32] [i32 33, i32 13], [2 x i32] [i32 23, i32 35], [2 x i32] [i32 13, i32 58]], [15 x [2 x i32]] [[2 x i32] [i32 29, i32 -3], [2 x i32] [i32 26, i32 0], [2 x i32] [i32 22, i32 30], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 31, i32 -7], [2 x i32] [i32 35, i32 -15], [2 x i32] [i32 34, i32 -3], [2 x i32] [i32 34, i32 3], [2 x i32] [i32 36, i32 -1], [2 x i32] [i32 34, i32 5], [2 x i32] [i32 32, i32 11], [2 x i32] [i32 35, i32 5], [2 x i32] [i32 34, i32 12], [2 x i32] [i32 39, i32 11], [2 x i32] [i32 30, i32 29], [2 x i32] [i32 34, i32 26], [2 x i32] [i32 29, i32 39], [2 x i32] [i32 19, i32 66]]]], align 16
@INIT_FLD_LAST_P = internal constant [3 x [8 x [15 x [2 x i32]]]] [[8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 14, i32 11], [2 x i32] [i32 11, i32 14], [2 x i32] [i32 9, i32 11], [2 x i32] [i32 18, i32 11], [2 x i32] [i32 21, i32 9], [2 x i32] [i32 23, i32 -2], [2 x i32] [i32 32, i32 -15], [2 x i32] [i32 32, i32 -15], [2 x i32] [i32 34, i32 -21], [2 x i32] [i32 39, i32 -23], [2 x i32] [i32 42, i32 -33], [2 x i32] [i32 41, i32 -31], [2 x i32] [i32 46, i32 -28], [2 x i32] [i32 38, i32 -12], [2 x i32] [i32 21, i32 29]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 45, i32 -24], [2 x i32] [i32 53, i32 -45], [2 x i32] [i32 48, i32 -26], [2 x i32] [i32 65, i32 -43], [2 x i32] [i32 43, i32 -19], [2 x i32] [i32 39, i32 -10], [2 x i32] [i32 30, i32 9], [2 x i32] [i32 18, i32 26], [2 x i32] [i32 20, i32 27], [2 x i32] [i32 0, i32 57], [2 x i32] [i32 -14, i32 82], [2 x i32] [i32 -5, i32 75], [2 x i32] [i32 -19, i32 97], [2 x i32] [i32 -35, i32 125]], [15 x [2 x i32]] [[2 x i32] [i32 21, i32 -13], [2 x i32] [i32 33, i32 -14], [2 x i32] [i32 39, i32 -7], [2 x i32] [i32 46, i32 -2], [2 x i32] [i32 51, i32 2], [2 x i32] [i32 60, i32 6], [2 x i32] [i32 61, i32 17], [2 x i32] [i32 55, i32 34], [2 x i32] [i32 42, i32 62], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 27, i32 0], [2 x i32] [i32 28, i32 0], [2 x i32] [i32 31, i32 -4], [2 x i32] [i32 27, i32 6], [2 x i32] [i32 34, i32 8], [2 x i32] [i32 30, i32 10], [2 x i32] [i32 24, i32 22], [2 x i32] [i32 33, i32 19], [2 x i32] [i32 22, i32 32], [2 x i32] [i32 26, i32 31], [2 x i32] [i32 21, i32 41], [2 x i32] [i32 26, i32 44], [2 x i32] [i32 23, i32 47], [2 x i32] [i32 16, i32 65], [2 x i32] [i32 14, i32 71]], [15 x [2 x i32]] [[2 x i32] [i32 8, i32 60], [2 x i32] [i32 6, i32 63], [2 x i32] [i32 17, i32 65], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 21, i32 24], [2 x i32] [i32 23, i32 20], [2 x i32] [i32 26, i32 23], [2 x i32] [i32 27, i32 32], [2 x i32] [i32 28, i32 23], [2 x i32] [i32 28, i32 24], [2 x i32] [i32 23, i32 40], [2 x i32] [i32 24, i32 32], [2 x i32] [i32 28, i32 29], [2 x i32] [i32 23, i32 42], [2 x i32] [i32 19, i32 57], [2 x i32] [i32 22, i32 53], [2 x i32] [i32 22, i32 61], [2 x i32] [i32 11, i32 86]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 19, i32 -6], [2 x i32] [i32 18, i32 -6], [2 x i32] [i32 14, i32 0], [2 x i32] [i32 26, i32 -12], [2 x i32] [i32 31, i32 -16], [2 x i32] [i32 33, i32 -25], [2 x i32] [i32 33, i32 -22], [2 x i32] [i32 37, i32 -28], [2 x i32] [i32 39, i32 -30], [2 x i32] [i32 42, i32 -30], [2 x i32] [i32 47, i32 -42], [2 x i32] [i32 45, i32 -36], [2 x i32] [i32 49, i32 -34], [2 x i32] [i32 41, i32 -17], [2 x i32] [i32 32, i32 9]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 69, i32 -71], [2 x i32] [i32 63, i32 -63], [2 x i32] [i32 66, i32 -64], [2 x i32] [i32 77, i32 -74], [2 x i32] [i32 54, i32 -39], [2 x i32] [i32 52, i32 -35], [2 x i32] [i32 41, i32 -10], [2 x i32] [i32 36, i32 0], [2 x i32] [i32 40, i32 -1], [2 x i32] [i32 30, i32 14], [2 x i32] [i32 28, i32 26], [2 x i32] [i32 23, i32 37], [2 x i32] [i32 12, i32 55], [2 x i32] [i32 11, i32 65]], [15 x [2 x i32]] [[2 x i32] [i32 17, i32 -10], [2 x i32] [i32 32, i32 -13], [2 x i32] [i32 42, i32 -9], [2 x i32] [i32 49, i32 -5], [2 x i32] [i32 53, i32 0], [2 x i32] [i32 64, i32 3], [2 x i32] [i32 68, i32 10], [2 x i32] [i32 66, i32 27], [2 x i32] [i32 47, i32 57], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 37, i32 -33], [2 x i32] [i32 39, i32 -36], [2 x i32] [i32 40, i32 -37], [2 x i32] [i32 38, i32 -30], [2 x i32] [i32 46, i32 -33], [2 x i32] [i32 42, i32 -30], [2 x i32] [i32 40, i32 -24], [2 x i32] [i32 49, i32 -29], [2 x i32] [i32 38, i32 -12], [2 x i32] [i32 40, i32 -10], [2 x i32] [i32 38, i32 -3], [2 x i32] [i32 46, i32 -5], [2 x i32] [i32 31, i32 20], [2 x i32] [i32 29, i32 30], [2 x i32] [i32 25, i32 44]], [15 x [2 x i32]] [[2 x i32] [i32 12, i32 48], [2 x i32] [i32 11, i32 49], [2 x i32] [i32 26, i32 45], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 22, i32 22], [2 x i32] [i32 23, i32 22], [2 x i32] [i32 27, i32 21], [2 x i32] [i32 33, i32 20], [2 x i32] [i32 26, i32 28], [2 x i32] [i32 30, i32 24], [2 x i32] [i32 27, i32 34], [2 x i32] [i32 18, i32 42], [2 x i32] [i32 25, i32 39], [2 x i32] [i32 18, i32 50], [2 x i32] [i32 12, i32 70], [2 x i32] [i32 21, i32 54], [2 x i32] [i32 14, i32 71], [2 x i32] [i32 11, i32 83]]], [8 x [15 x [2 x i32]]] [[15 x [2 x i32]] [[2 x i32] [i32 17, i32 -13], [2 x i32] [i32 16, i32 -9], [2 x i32] [i32 17, i32 -12], [2 x i32] [i32 27, i32 -21], [2 x i32] [i32 37, i32 -30], [2 x i32] [i32 41, i32 -40], [2 x i32] [i32 42, i32 -41], [2 x i32] [i32 48, i32 -47], [2 x i32] [i32 39, i32 -32], [2 x i32] [i32 46, i32 -40], [2 x i32] [i32 52, i32 -51], [2 x i32] [i32 46, i32 -41], [2 x i32] [i32 52, i32 -39], [2 x i32] [i32 43, i32 -19], [2 x i32] [i32 32, i32 11]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 61, i32 -55], [2 x i32] [i32 56, i32 -46], [2 x i32] [i32 62, i32 -50], [2 x i32] [i32 81, i32 -67], [2 x i32] [i32 45, i32 -20], [2 x i32] [i32 35, i32 -2], [2 x i32] [i32 28, i32 15], [2 x i32] [i32 34, i32 1], [2 x i32] [i32 39, i32 1], [2 x i32] [i32 30, i32 17], [2 x i32] [i32 20, i32 38], [2 x i32] [i32 18, i32 45], [2 x i32] [i32 15, i32 54], [2 x i32] [i32 0, i32 79]], [15 x [2 x i32]] [[2 x i32] [i32 9, i32 -2], [2 x i32] [i32 30, i32 -10], [2 x i32] [i32 31, i32 -4], [2 x i32] [i32 33, i32 -1], [2 x i32] [i32 33, i32 7], [2 x i32] [i32 31, i32 12], [2 x i32] [i32 37, i32 23], [2 x i32] [i32 31, i32 38], [2 x i32] [i32 20, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 36, i32 -16], [2 x i32] [i32 37, i32 -14], [2 x i32] [i32 37, i32 -17], [2 x i32] [i32 32, i32 1], [2 x i32] [i32 34, i32 15], [2 x i32] [i32 29, i32 15], [2 x i32] [i32 24, i32 25], [2 x i32] [i32 34, i32 22], [2 x i32] [i32 31, i32 16], [2 x i32] [i32 35, i32 18], [2 x i32] [i32 31, i32 28], [2 x i32] [i32 33, i32 41], [2 x i32] [i32 36, i32 28], [2 x i32] [i32 27, i32 47], [2 x i32] [i32 21, i32 62]], [15 x [2 x i32]] [[2 x i32] [i32 18, i32 31], [2 x i32] [i32 19, i32 26], [2 x i32] [i32 36, i32 24], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64], [2 x i32] [i32 0, i32 64]], [15 x [2 x i32]] [[2 x i32] [i32 0, i32 64], [2 x i32] [i32 24, i32 23], [2 x i32] [i32 27, i32 16], [2 x i32] [i32 24, i32 30], [2 x i32] [i32 31, i32 29], [2 x i32] [i32 22, i32 41], [2 x i32] [i32 22, i32 42], [2 x i32] [i32 16, i32 60], [2 x i32] [i32 15, i32 52], [2 x i32] [i32 14, i32 60], [2 x i32] [i32 3, i32 78], [2 x i32] [i32 -16, i32 123], [2 x i32] [i32 21, i32 53], [2 x i32] [i32 22, i32 56], [2 x i32] [i32 25, i32 61]]]], align 16
@color_formats = common dso_local local_unnamed_addr global i32 0, align 4
@top_pic = common dso_local local_unnamed_addr global ptr null, align 8
@bottom_pic = common dso_local local_unnamed_addr global ptr null, align 8
@frame_pic = common dso_local local_unnamed_addr global ptr null, align 8
@frame_pic_1 = common dso_local local_unnamed_addr global ptr null, align 8
@frame_pic_2 = common dso_local local_unnamed_addr global ptr null, align 8
@frame_pic_3 = common dso_local local_unnamed_addr global ptr null, align 8
@frame_pic_si = common dso_local local_unnamed_addr global ptr null, align 8
@Bit_Buffer = common dso_local local_unnamed_addr global ptr null, align 8
@imgY_org = common dso_local local_unnamed_addr global ptr null, align 8
@imgUV_org = common dso_local local_unnamed_addr global ptr null, align 8
@imgY_sub_tmp = common dso_local local_unnamed_addr global ptr null, align 8
@PicPos = common dso_local local_unnamed_addr global ptr null, align 8
@log2_max_frame_num_minus4 = common dso_local local_unnamed_addr global i32 0, align 4
@log2_max_pic_order_cnt_lsb_minus4 = common dso_local local_unnamed_addr global i32 0, align 4
@me_tot_time = common dso_local local_unnamed_addr global i64 0, align 8
@me_time = common dso_local local_unnamed_addr global i64 0, align 8
@active_pps = common dso_local local_unnamed_addr global ptr null, align 8
@active_sps = common dso_local local_unnamed_addr global ptr null, align 8
@dsr_new_search_range = common dso_local local_unnamed_addr global i32 0, align 4
@mb_adaptive = common dso_local local_unnamed_addr global i32 0, align 4
@MBPairIsField = common dso_local local_unnamed_addr global i32 0, align 4
@wp_weight = common dso_local local_unnamed_addr global ptr null, align 8
@wp_offset = common dso_local local_unnamed_addr global ptr null, align 8
@wbp_weight = common dso_local local_unnamed_addr global ptr null, align 8
@luma_log_weight_denom = common dso_local local_unnamed_addr global i32 0, align 4
@chroma_log_weight_denom = common dso_local local_unnamed_addr global i32 0, align 4
@wp_luma_round = common dso_local local_unnamed_addr global i32 0, align 4
@wp_chroma_round = common dso_local local_unnamed_addr global i32 0, align 4
@imgY_org_top = common dso_local local_unnamed_addr global ptr null, align 8
@imgY_org_bot = common dso_local local_unnamed_addr global ptr null, align 8
@imgUV_org_top = common dso_local local_unnamed_addr global ptr null, align 8
@imgUV_org_bot = common dso_local local_unnamed_addr global ptr null, align 8
@imgY_org_frm = common dso_local local_unnamed_addr global ptr null, align 8
@imgUV_org_frm = common dso_local local_unnamed_addr global ptr null, align 8
@imgY_com = common dso_local local_unnamed_addr global ptr null, align 8
@imgUV_com = common dso_local local_unnamed_addr global ptr null, align 8
@direct_ref_idx = common dso_local local_unnamed_addr global ptr null, align 8
@direct_pdir = common dso_local local_unnamed_addr global ptr null, align 8
@pixel_map = common dso_local local_unnamed_addr global ptr null, align 8
@refresh_map = common dso_local local_unnamed_addr global ptr null, align 8
@intras = common dso_local local_unnamed_addr global i32 0, align 4
@frame_ctr = common dso_local local_unnamed_addr global [5 x i32] zeroinitializer, align 16
@frame_no = common dso_local local_unnamed_addr global i32 0, align 4
@nextP_tr_fld = common dso_local local_unnamed_addr global i32 0, align 4
@nextP_tr_frm = common dso_local local_unnamed_addr global i32 0, align 4
@tot_time = common dso_local local_unnamed_addr global i64 0, align 8
@errortext = common dso_local local_unnamed_addr global [300 x i8] zeroinitializer, align 16
@b8_ipredmode8x8 = common dso_local local_unnamed_addr global [4 x [4 x i8]] zeroinitializer, align 16
@b8_intra_pred_modes8x8 = common dso_local local_unnamed_addr global [16 x i8] zeroinitializer, align 16
@gop_structure = common dso_local local_unnamed_addr global ptr null, align 8
@rdopt = common dso_local local_unnamed_addr global ptr null, align 8
@rddata_top_frame_mb = common dso_local local_unnamed_addr global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_frame_mb = common dso_local local_unnamed_addr global %struct.RD_DATA zeroinitializer, align 8
@rddata_top_field_mb = common dso_local local_unnamed_addr global %struct.RD_DATA zeroinitializer, align 8
@rddata_bot_field_mb = common dso_local local_unnamed_addr global %struct.RD_DATA zeroinitializer, align 8
@p_stat = common dso_local local_unnamed_addr global ptr null, align 8
@p_log = common dso_local local_unnamed_addr global ptr null, align 8
@p_trace = common dso_local local_unnamed_addr global ptr null, align 8
@p_in = common dso_local local_unnamed_addr global i32 0, align 4
@p_dec = common dso_local local_unnamed_addr global i32 0, align 4
@mb16x16_cost_frame = common dso_local local_unnamed_addr global ptr null, align 8
@Bytes_After_Header = common dso_local local_unnamed_addr global i32 0, align 4
@encode_one_macroblock = common dso_local local_unnamed_addr global ptr null, align 8
@lrec = common dso_local local_unnamed_addr global ptr null, align 8
@lrec_uv = common dso_local local_unnamed_addr global ptr null, align 8
@si_frame_indicator = common dso_local local_unnamed_addr global i32 0, align 4
@sp2_frame_indicator = common dso_local local_unnamed_addr global i32 0, align 4
@number_sp2_frames = common dso_local local_unnamed_addr global i32 0, align 4
@giRDOpt_B8OnlyFlag = common dso_local local_unnamed_addr global i32 0, align 4
@imgY_tmp = common dso_local local_unnamed_addr global ptr null, align 8
@imgUV_tmp = common dso_local local_unnamed_addr global [2 x ptr] zeroinitializer, align 16
@frameNuminGOP = common dso_local local_unnamed_addr global i32 0, align 4
@redundant_coding = common dso_local local_unnamed_addr global i32 0, align 4
@key_frame = common dso_local local_unnamed_addr global i32 0, align 4
@redundant_ref_idx = common dso_local local_unnamed_addr global i32 0, align 4
@img_pad_size_uv_x = common dso_local local_unnamed_addr global i32 0, align 4
@img_pad_size_uv_y = common dso_local local_unnamed_addr global i32 0, align 4
@chroma_mask_mv_y = common dso_local local_unnamed_addr global i8 0, align 1
@chroma_mask_mv_x = common dso_local local_unnamed_addr global i8 0, align 1
@chroma_shift_y = common dso_local local_unnamed_addr global i32 0, align 4
@chroma_shift_x = common dso_local local_unnamed_addr global i32 0, align 4
@shift_cr_x = common dso_local local_unnamed_addr global i32 0, align 4
@shift_cr_y = common dso_local local_unnamed_addr global i32 0, align 4
@img_padded_size_x = common dso_local local_unnamed_addr global i32 0, align 4
@img_cr_padded_size_x = common dso_local local_unnamed_addr global i32 0, align 4
@start_me_refinement_hp = common dso_local local_unnamed_addr global i32 0, align 4
@start_me_refinement_qp = common dso_local local_unnamed_addr global i32 0, align 4

; Function Attrs: nounwind uwtable
define dso_local void @create_context_memory() local_unnamed_addr #0 {
entry:
  %0 = load ptr, ptr @img, align 8, !tbaa !5
  %FrameSizeInMbs = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 120
  %1 = load i32, ptr %FrameSizeInMbs, align 8, !tbaa !9
  %2 = load ptr, ptr @input, align 8, !tbaa !5
  %slice_mode = getelementptr inbounds %struct.InputParameters, ptr %2, i64 0, i32 21
  %3 = load i32, ptr %slice_mode, align 8, !tbaa !15
  %cmp = icmp eq i32 %3, 1
  br i1 %cmp, label %cond.true, label %cond.end

cond.true:                                        ; preds = %entry
  %slice_argument = getelementptr inbounds %struct.InputParameters, ptr %2, i64 0, i32 22
  %4 = load i32, ptr %slice_argument, align 4, !tbaa !17
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.true
  %cond = phi i32 [ %4, %cond.true ], [ %1, %entry ]
  store i32 %cond, ptr @num_mb_per_slice, align 4, !tbaa !18
  %add = add i32 %1, -1
  %sub = add i32 %add, %cond
  %div = sdiv i32 %sub, %cond
  store i32 %div, ptr @number_of_slices, align 4, !tbaa !18
  %call = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #13
  store ptr %call, ptr @initialized, align 8, !tbaa !5
  %cmp1 = icmp eq ptr %call, null
  br i1 %cmp1, label %if.then, label %if.end

if.then:                                          ; preds = %cond.end
  tail call void @no_mem_exit(ptr noundef nonnull @.str) #14
  br label %if.end

if.end:                                           ; preds = %if.then, %cond.end
  %call2 = tail call noalias dereferenceable_or_null(24) ptr @malloc(i64 noundef 24) #13
  store ptr %call2, ptr @model_number, align 8, !tbaa !5
  %cmp3 = icmp eq ptr %call2, null
  br i1 %cmp3, label %if.then4, label %for.body.preheader

for.body.preheader:                               ; preds = %if.then4, %if.end
  br label %for.body

if.then4:                                         ; preds = %if.end
  tail call void @no_mem_exit(ptr noundef nonnull @.str.1) #14
  br label %for.body.preheader

for.cond43.preheader:                             ; preds = %for.inc.3
  %5 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %for.body54.lr.ph, label %for.body73.preheader

for.body:                                         ; preds = %for.body.preheader, %for.inc.3
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.inc.3 ], [ 0, %for.body.preheader ]
  %call7 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #13
  %7 = load ptr, ptr @initialized, align 8, !tbaa !5
  %arrayidx = getelementptr inbounds ptr, ptr %7, i64 %indvars.iv
  store ptr %call7, ptr %arrayidx, align 8, !tbaa !5
  %cmp8 = icmp eq ptr %call7, null
  br i1 %cmp8, label %if.then9, label %if.end10

if.then9:                                         ; preds = %for.body
  tail call void @no_mem_exit(ptr noundef nonnull @.str) #14
  br label %if.end10

if.end10:                                         ; preds = %if.then9, %for.body
  %call11 = tail call noalias dereferenceable_or_null(32) ptr @malloc(i64 noundef 32) #13
  %8 = load ptr, ptr @model_number, align 8, !tbaa !5
  %arrayidx13 = getelementptr inbounds ptr, ptr %8, i64 %indvars.iv
  store ptr %call11, ptr %arrayidx13, align 8, !tbaa !5
  %cmp14 = icmp eq ptr %call11, null
  br i1 %cmp14, label %if.then15, label %if.end16

if.then15:                                        ; preds = %if.end10
  tail call void @no_mem_exit(ptr noundef nonnull @.str.1) #14
  br label %if.end16

if.end16:                                         ; preds = %if.then15, %if.end10
  %9 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %conv = sext i32 %9 to i64
  %mul = shl nsw i64 %conv, 2
  %call20 = tail call noalias ptr @malloc(i64 noundef %mul) #13
  %10 = load ptr, ptr @initialized, align 8, !tbaa !5
  %arrayidx22 = getelementptr inbounds ptr, ptr %10, i64 %indvars.iv
  %11 = load ptr, ptr %arrayidx22, align 8, !tbaa !5
  store ptr %call20, ptr %11, align 8, !tbaa !5
  %cmp25 = icmp eq ptr %call20, null
  br i1 %cmp25, label %if.then27, label %if.end28

if.then27:                                        ; preds = %if.end16
  tail call void @no_mem_exit(ptr noundef nonnull @.str) #14
  %.pre = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %.pre177 = sext i32 %.pre to i64
  %.pre178 = shl nsw i64 %.pre177, 2
  br label %if.end28

if.end28:                                         ; preds = %if.then27, %if.end16
  %mul30.pre-phi = phi i64 [ %.pre178, %if.then27 ], [ %mul, %if.end16 ]
  %call31 = tail call noalias ptr @malloc(i64 noundef %mul30.pre-phi) #13
  %12 = load ptr, ptr @model_number, align 8, !tbaa !5
  %arrayidx33 = getelementptr inbounds ptr, ptr %12, i64 %indvars.iv
  %13 = load ptr, ptr %arrayidx33, align 8, !tbaa !5
  store ptr %call31, ptr %13, align 8, !tbaa !5
  %cmp36 = icmp eq ptr %call31, null
  br i1 %cmp36, label %if.then38, label %for.inc

if.then38:                                        ; preds = %if.end28
  tail call void @no_mem_exit(ptr noundef nonnull @.str.1) #14
  %.pre169 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %.pre179 = sext i32 %.pre169 to i64
  %.pre180 = shl nsw i64 %.pre179, 2
  br label %for.inc

for.inc:                                          ; preds = %if.end28, %if.then38
  %mul.1.pre-phi = phi i64 [ %mul30.pre-phi, %if.end28 ], [ %.pre180, %if.then38 ]
  %call20.1 = tail call noalias ptr @malloc(i64 noundef %mul.1.pre-phi) #13
  %14 = load ptr, ptr @initialized, align 8, !tbaa !5
  %arrayidx22.1 = getelementptr inbounds ptr, ptr %14, i64 %indvars.iv
  %15 = load ptr, ptr %arrayidx22.1, align 8, !tbaa !5
  %arrayidx24.1 = getelementptr inbounds ptr, ptr %15, i64 1
  store ptr %call20.1, ptr %arrayidx24.1, align 8, !tbaa !5
  %cmp25.1 = icmp eq ptr %call20.1, null
  br i1 %cmp25.1, label %if.then27.1, label %if.end28.1

if.then27.1:                                      ; preds = %for.inc
  tail call void @no_mem_exit(ptr noundef nonnull @.str) #14
  %.pre170 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %.pre181 = sext i32 %.pre170 to i64
  %.pre182 = shl nsw i64 %.pre181, 2
  br label %if.end28.1

if.end28.1:                                       ; preds = %if.then27.1, %for.inc
  %mul30.1.pre-phi = phi i64 [ %.pre182, %if.then27.1 ], [ %mul.1.pre-phi, %for.inc ]
  %call31.1 = tail call noalias ptr @malloc(i64 noundef %mul30.1.pre-phi) #13
  %16 = load ptr, ptr @model_number, align 8, !tbaa !5
  %arrayidx33.1 = getelementptr inbounds ptr, ptr %16, i64 %indvars.iv
  %17 = load ptr, ptr %arrayidx33.1, align 8, !tbaa !5
  %arrayidx35.1 = getelementptr inbounds ptr, ptr %17, i64 1
  store ptr %call31.1, ptr %arrayidx35.1, align 8, !tbaa !5
  %cmp36.1 = icmp eq ptr %call31.1, null
  br i1 %cmp36.1, label %if.then38.1, label %for.inc.1

if.then38.1:                                      ; preds = %if.end28.1
  tail call void @no_mem_exit(ptr noundef nonnull @.str.1) #14
  %.pre171 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %.pre183 = sext i32 %.pre171 to i64
  %.pre184 = shl nsw i64 %.pre183, 2
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then38.1, %if.end28.1
  %mul.2.pre-phi = phi i64 [ %.pre184, %if.then38.1 ], [ %mul30.1.pre-phi, %if.end28.1 ]
  %call20.2 = tail call noalias ptr @malloc(i64 noundef %mul.2.pre-phi) #13
  %18 = load ptr, ptr @initialized, align 8, !tbaa !5
  %arrayidx22.2 = getelementptr inbounds ptr, ptr %18, i64 %indvars.iv
  %19 = load ptr, ptr %arrayidx22.2, align 8, !tbaa !5
  %arrayidx24.2 = getelementptr inbounds ptr, ptr %19, i64 2
  store ptr %call20.2, ptr %arrayidx24.2, align 8, !tbaa !5
  %cmp25.2 = icmp eq ptr %call20.2, null
  br i1 %cmp25.2, label %if.then27.2, label %if.end28.2

if.then27.2:                                      ; preds = %for.inc.1
  tail call void @no_mem_exit(ptr noundef nonnull @.str) #14
  %.pre172 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %.pre185 = sext i32 %.pre172 to i64
  %.pre186 = shl nsw i64 %.pre185, 2
  br label %if.end28.2

if.end28.2:                                       ; preds = %if.then27.2, %for.inc.1
  %mul30.2.pre-phi = phi i64 [ %.pre186, %if.then27.2 ], [ %mul.2.pre-phi, %for.inc.1 ]
  %call31.2 = tail call noalias ptr @malloc(i64 noundef %mul30.2.pre-phi) #13
  %20 = load ptr, ptr @model_number, align 8, !tbaa !5
  %arrayidx33.2 = getelementptr inbounds ptr, ptr %20, i64 %indvars.iv
  %21 = load ptr, ptr %arrayidx33.2, align 8, !tbaa !5
  %arrayidx35.2 = getelementptr inbounds ptr, ptr %21, i64 2
  store ptr %call31.2, ptr %arrayidx35.2, align 8, !tbaa !5
  %cmp36.2 = icmp eq ptr %call31.2, null
  br i1 %cmp36.2, label %if.then38.2, label %for.inc.2

if.then38.2:                                      ; preds = %if.end28.2
  tail call void @no_mem_exit(ptr noundef nonnull @.str.1) #14
  %.pre173 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %.pre187 = sext i32 %.pre173 to i64
  %.pre188 = shl nsw i64 %.pre187, 2
  br label %for.inc.2

for.inc.2:                                        ; preds = %if.then38.2, %if.end28.2
  %mul.3.pre-phi = phi i64 [ %.pre188, %if.then38.2 ], [ %mul30.2.pre-phi, %if.end28.2 ]
  %call20.3 = tail call noalias ptr @malloc(i64 noundef %mul.3.pre-phi) #13
  %22 = load ptr, ptr @initialized, align 8, !tbaa !5
  %arrayidx22.3 = getelementptr inbounds ptr, ptr %22, i64 %indvars.iv
  %23 = load ptr, ptr %arrayidx22.3, align 8, !tbaa !5
  %arrayidx24.3 = getelementptr inbounds ptr, ptr %23, i64 3
  store ptr %call20.3, ptr %arrayidx24.3, align 8, !tbaa !5
  %cmp25.3 = icmp eq ptr %call20.3, null
  br i1 %cmp25.3, label %if.then27.3, label %if.end28.3

if.then27.3:                                      ; preds = %for.inc.2
  tail call void @no_mem_exit(ptr noundef nonnull @.str) #14
  %.pre174 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %.pre189 = sext i32 %.pre174 to i64
  %.pre190 = shl nsw i64 %.pre189, 2
  br label %if.end28.3

if.end28.3:                                       ; preds = %if.then27.3, %for.inc.2
  %mul30.3.pre-phi = phi i64 [ %.pre190, %if.then27.3 ], [ %mul.3.pre-phi, %for.inc.2 ]
  %call31.3 = tail call noalias ptr @malloc(i64 noundef %mul30.3.pre-phi) #13
  %24 = load ptr, ptr @model_number, align 8, !tbaa !5
  %arrayidx33.3 = getelementptr inbounds ptr, ptr %24, i64 %indvars.iv
  %25 = load ptr, ptr %arrayidx33.3, align 8, !tbaa !5
  %arrayidx35.3 = getelementptr inbounds ptr, ptr %25, i64 3
  store ptr %call31.3, ptr %arrayidx35.3, align 8, !tbaa !5
  %cmp36.3 = icmp eq ptr %call31.3, null
  br i1 %cmp36.3, label %if.then38.3, label %for.inc.3

if.then38.3:                                      ; preds = %if.end28.3
  tail call void @no_mem_exit(ptr noundef nonnull @.str.1) #14
  br label %for.inc.3

for.inc.3:                                        ; preds = %if.then38.3, %if.end28.3
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.cond43.preheader, label %for.body, !llvm.loop !19

for.body54.lr.ph:                                 ; preds = %for.cond43.preheader
  %26 = load ptr, ptr @initialized, align 8
  %27 = load ptr, ptr %26, align 8, !tbaa !5
  %28 = load ptr, ptr %27, align 8, !tbaa !5
  br label %for.body54

for.body54:                                       ; preds = %for.body54.lr.ph, %for.body54
  %indvars.iv135 = phi i64 [ 0, %for.body54.lr.ph ], [ %indvars.iv.next136, %for.body54 ]
  %arrayidx60 = getelementptr inbounds i32, ptr %28, i64 %indvars.iv135
  store i32 0, ptr %arrayidx60, align 4, !tbaa !18
  %indvars.iv.next136 = add nuw nsw i64 %indvars.iv135, 1
  %29 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %30 = sext i32 %29 to i64
  %cmp52 = icmp slt i64 %indvars.iv.next136, %30
  br i1 %cmp52, label %for.body54, label %for.inc64, !llvm.loop !21

for.inc64:                                        ; preds = %for.body54
  %cmp52126.1 = icmp sgt i32 %29, 0
  br i1 %cmp52126.1, label %for.body54.lr.ph.1, label %for.body73.preheader

for.body54.lr.ph.1:                               ; preds = %for.inc64
  %31 = load ptr, ptr %26, align 8, !tbaa !5
  %arrayidx58.1 = getelementptr inbounds ptr, ptr %31, i64 1
  %32 = load ptr, ptr %arrayidx58.1, align 8, !tbaa !5
  br label %for.body54.1

for.body54.1:                                     ; preds = %for.body54.1, %for.body54.lr.ph.1
  %indvars.iv135.1 = phi i64 [ 0, %for.body54.lr.ph.1 ], [ %indvars.iv.next136.1, %for.body54.1 ]
  %arrayidx60.1 = getelementptr inbounds i32, ptr %32, i64 %indvars.iv135.1
  store i32 0, ptr %arrayidx60.1, align 4, !tbaa !18
  %indvars.iv.next136.1 = add nuw nsw i64 %indvars.iv135.1, 1
  %33 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %34 = sext i32 %33 to i64
  %cmp52.1 = icmp slt i64 %indvars.iv.next136.1, %34
  br i1 %cmp52.1, label %for.body54.1, label %for.inc64.1, !llvm.loop !21

for.inc64.1:                                      ; preds = %for.body54.1
  %cmp52126.2 = icmp sgt i32 %33, 0
  br i1 %cmp52126.2, label %for.body54.lr.ph.2, label %for.body73.preheader

for.body54.lr.ph.2:                               ; preds = %for.inc64.1
  %35 = load ptr, ptr %26, align 8, !tbaa !5
  %arrayidx58.2 = getelementptr inbounds ptr, ptr %35, i64 2
  %36 = load ptr, ptr %arrayidx58.2, align 8, !tbaa !5
  br label %for.body54.2

for.body54.2:                                     ; preds = %for.body54.2, %for.body54.lr.ph.2
  %indvars.iv135.2 = phi i64 [ 0, %for.body54.lr.ph.2 ], [ %indvars.iv.next136.2, %for.body54.2 ]
  %arrayidx60.2 = getelementptr inbounds i32, ptr %36, i64 %indvars.iv135.2
  store i32 0, ptr %arrayidx60.2, align 4, !tbaa !18
  %indvars.iv.next136.2 = add nuw nsw i64 %indvars.iv135.2, 1
  %37 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %38 = sext i32 %37 to i64
  %cmp52.2 = icmp slt i64 %indvars.iv.next136.2, %38
  br i1 %cmp52.2, label %for.body54.2, label %for.inc64.2, !llvm.loop !21

for.inc64.2:                                      ; preds = %for.body54.2
  %cmp52126.3 = icmp sgt i32 %37, 0
  br i1 %cmp52126.3, label %for.body54.lr.ph.3, label %for.body73.preheader

for.body54.lr.ph.3:                               ; preds = %for.inc64.2
  %39 = load ptr, ptr %26, align 8, !tbaa !5
  %arrayidx58.3 = getelementptr inbounds ptr, ptr %39, i64 3
  %40 = load ptr, ptr %arrayidx58.3, align 8, !tbaa !5
  br label %for.body54.3

for.body54.3:                                     ; preds = %for.body54.3, %for.body54.lr.ph.3
  %indvars.iv135.3 = phi i64 [ 0, %for.body54.lr.ph.3 ], [ %indvars.iv.next136.3, %for.body54.3 ]
  %arrayidx60.3 = getelementptr inbounds i32, ptr %40, i64 %indvars.iv135.3
  store i32 0, ptr %arrayidx60.3, align 4, !tbaa !18
  %indvars.iv.next136.3 = add nuw nsw i64 %indvars.iv135.3, 1
  %41 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %42 = sext i32 %41 to i64
  %cmp52.3 = icmp slt i64 %indvars.iv.next136.3, %42
  br i1 %cmp52.3, label %for.body54.3, label %for.inc67, !llvm.loop !21

for.inc67:                                        ; preds = %for.body54.3
  %.pre175 = load ptr, ptr @initialized, align 8
  %arrayidx56.1 = getelementptr inbounds ptr, ptr %.pre175, i64 1
  %43 = icmp sgt i32 %41, 0
  br i1 %43, label %for.body54.lr.ph.1147, label %for.body73.preheader

for.body54.lr.ph.1147:                            ; preds = %for.inc67
  %44 = load ptr, ptr %arrayidx56.1, align 8, !tbaa !5
  %45 = load ptr, ptr %44, align 8, !tbaa !5
  br label %for.body54.1152

for.body54.1152:                                  ; preds = %for.body54.1152, %for.body54.lr.ph.1147
  %indvars.iv135.1148 = phi i64 [ 0, %for.body54.lr.ph.1147 ], [ %indvars.iv.next136.1150, %for.body54.1152 ]
  %arrayidx60.1149 = getelementptr inbounds i32, ptr %45, i64 %indvars.iv135.1148
  store i32 0, ptr %arrayidx60.1149, align 4, !tbaa !18
  %indvars.iv.next136.1150 = add nuw nsw i64 %indvars.iv135.1148, 1
  %46 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %47 = sext i32 %46 to i64
  %cmp52.1151 = icmp slt i64 %indvars.iv.next136.1150, %47
  br i1 %cmp52.1151, label %for.body54.1152, label %for.inc64.1154, !llvm.loop !21

for.inc64.1154:                                   ; preds = %for.body54.1152
  %cmp52126.1.1 = icmp sgt i32 %46, 0
  br i1 %cmp52126.1.1, label %for.body54.lr.ph.1.1, label %for.body73.preheader

for.body54.lr.ph.1.1:                             ; preds = %for.inc64.1154
  %48 = load ptr, ptr %arrayidx56.1, align 8, !tbaa !5
  %arrayidx58.1.1 = getelementptr inbounds ptr, ptr %48, i64 1
  %49 = load ptr, ptr %arrayidx58.1.1, align 8, !tbaa !5
  br label %for.body54.1.1

for.body54.1.1:                                   ; preds = %for.body54.1.1, %for.body54.lr.ph.1.1
  %indvars.iv135.1.1 = phi i64 [ 0, %for.body54.lr.ph.1.1 ], [ %indvars.iv.next136.1.1, %for.body54.1.1 ]
  %arrayidx60.1.1 = getelementptr inbounds i32, ptr %49, i64 %indvars.iv135.1.1
  store i32 0, ptr %arrayidx60.1.1, align 4, !tbaa !18
  %indvars.iv.next136.1.1 = add nuw nsw i64 %indvars.iv135.1.1, 1
  %50 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %51 = sext i32 %50 to i64
  %cmp52.1.1 = icmp slt i64 %indvars.iv.next136.1.1, %51
  br i1 %cmp52.1.1, label %for.body54.1.1, label %for.inc64.1.1, !llvm.loop !21

for.inc64.1.1:                                    ; preds = %for.body54.1.1
  %cmp52126.2.1 = icmp sgt i32 %50, 0
  br i1 %cmp52126.2.1, label %for.body54.lr.ph.2.1, label %for.body73.preheader

for.body54.lr.ph.2.1:                             ; preds = %for.inc64.1.1
  %52 = load ptr, ptr %arrayidx56.1, align 8, !tbaa !5
  %arrayidx58.2.1 = getelementptr inbounds ptr, ptr %52, i64 2
  %53 = load ptr, ptr %arrayidx58.2.1, align 8, !tbaa !5
  br label %for.body54.2.1

for.body54.2.1:                                   ; preds = %for.body54.2.1, %for.body54.lr.ph.2.1
  %indvars.iv135.2.1 = phi i64 [ 0, %for.body54.lr.ph.2.1 ], [ %indvars.iv.next136.2.1, %for.body54.2.1 ]
  %arrayidx60.2.1 = getelementptr inbounds i32, ptr %53, i64 %indvars.iv135.2.1
  store i32 0, ptr %arrayidx60.2.1, align 4, !tbaa !18
  %indvars.iv.next136.2.1 = add nuw nsw i64 %indvars.iv135.2.1, 1
  %54 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %55 = sext i32 %54 to i64
  %cmp52.2.1 = icmp slt i64 %indvars.iv.next136.2.1, %55
  br i1 %cmp52.2.1, label %for.body54.2.1, label %for.inc64.2.1, !llvm.loop !21

for.inc64.2.1:                                    ; preds = %for.body54.2.1
  %cmp52126.3.1 = icmp sgt i32 %54, 0
  br i1 %cmp52126.3.1, label %for.body54.lr.ph.3.1, label %for.body73.preheader

for.body54.lr.ph.3.1:                             ; preds = %for.inc64.2.1
  %56 = load ptr, ptr %arrayidx56.1, align 8, !tbaa !5
  %arrayidx58.3.1 = getelementptr inbounds ptr, ptr %56, i64 3
  %57 = load ptr, ptr %arrayidx58.3.1, align 8, !tbaa !5
  br label %for.body54.3.1

for.body54.3.1:                                   ; preds = %for.body54.3.1, %for.body54.lr.ph.3.1
  %indvars.iv135.3.1 = phi i64 [ 0, %for.body54.lr.ph.3.1 ], [ %indvars.iv.next136.3.1, %for.body54.3.1 ]
  %arrayidx60.3.1 = getelementptr inbounds i32, ptr %57, i64 %indvars.iv135.3.1
  store i32 0, ptr %arrayidx60.3.1, align 4, !tbaa !18
  %indvars.iv.next136.3.1 = add nuw nsw i64 %indvars.iv135.3.1, 1
  %58 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %59 = sext i32 %58 to i64
  %cmp52.3.1 = icmp slt i64 %indvars.iv.next136.3.1, %59
  br i1 %cmp52.3.1, label %for.body54.3.1, label %for.inc67.1, !llvm.loop !21

for.inc67.1:                                      ; preds = %for.body54.3.1
  %.pre176 = load ptr, ptr @initialized, align 8
  %arrayidx56.2 = getelementptr inbounds ptr, ptr %.pre176, i64 2
  %60 = icmp sgt i32 %58, 0
  br i1 %60, label %for.body54.lr.ph.2156, label %for.body73.preheader

for.body54.lr.ph.2156:                            ; preds = %for.inc67.1
  %61 = load ptr, ptr %arrayidx56.2, align 8, !tbaa !5
  %62 = load ptr, ptr %61, align 8, !tbaa !5
  br label %for.body54.2161

for.body54.2161:                                  ; preds = %for.body54.2161, %for.body54.lr.ph.2156
  %indvars.iv135.2157 = phi i64 [ 0, %for.body54.lr.ph.2156 ], [ %indvars.iv.next136.2159, %for.body54.2161 ]
  %arrayidx60.2158 = getelementptr inbounds i32, ptr %62, i64 %indvars.iv135.2157
  store i32 0, ptr %arrayidx60.2158, align 4, !tbaa !18
  %indvars.iv.next136.2159 = add nuw nsw i64 %indvars.iv135.2157, 1
  %63 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %64 = sext i32 %63 to i64
  %cmp52.2160 = icmp slt i64 %indvars.iv.next136.2159, %64
  br i1 %cmp52.2160, label %for.body54.2161, label %for.inc64.2163, !llvm.loop !21

for.inc64.2163:                                   ; preds = %for.body54.2161
  %cmp52126.1.2 = icmp sgt i32 %63, 0
  br i1 %cmp52126.1.2, label %for.body54.lr.ph.1.2, label %for.body73.preheader

for.body54.lr.ph.1.2:                             ; preds = %for.inc64.2163
  %65 = load ptr, ptr %arrayidx56.2, align 8, !tbaa !5
  %arrayidx58.1.2 = getelementptr inbounds ptr, ptr %65, i64 1
  %66 = load ptr, ptr %arrayidx58.1.2, align 8, !tbaa !5
  br label %for.body54.1.2

for.body54.1.2:                                   ; preds = %for.body54.1.2, %for.body54.lr.ph.1.2
  %indvars.iv135.1.2 = phi i64 [ 0, %for.body54.lr.ph.1.2 ], [ %indvars.iv.next136.1.2, %for.body54.1.2 ]
  %arrayidx60.1.2 = getelementptr inbounds i32, ptr %66, i64 %indvars.iv135.1.2
  store i32 0, ptr %arrayidx60.1.2, align 4, !tbaa !18
  %indvars.iv.next136.1.2 = add nuw nsw i64 %indvars.iv135.1.2, 1
  %67 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %68 = sext i32 %67 to i64
  %cmp52.1.2 = icmp slt i64 %indvars.iv.next136.1.2, %68
  br i1 %cmp52.1.2, label %for.body54.1.2, label %for.inc64.1.2, !llvm.loop !21

for.inc64.1.2:                                    ; preds = %for.body54.1.2
  %cmp52126.2.2 = icmp sgt i32 %67, 0
  br i1 %cmp52126.2.2, label %for.body54.lr.ph.2.2, label %for.body73.preheader

for.body54.lr.ph.2.2:                             ; preds = %for.inc64.1.2
  %69 = load ptr, ptr %arrayidx56.2, align 8, !tbaa !5
  %arrayidx58.2.2 = getelementptr inbounds ptr, ptr %69, i64 2
  %70 = load ptr, ptr %arrayidx58.2.2, align 8, !tbaa !5
  br label %for.body54.2.2

for.body54.2.2:                                   ; preds = %for.body54.2.2, %for.body54.lr.ph.2.2
  %indvars.iv135.2.2 = phi i64 [ 0, %for.body54.lr.ph.2.2 ], [ %indvars.iv.next136.2.2, %for.body54.2.2 ]
  %arrayidx60.2.2 = getelementptr inbounds i32, ptr %70, i64 %indvars.iv135.2.2
  store i32 0, ptr %arrayidx60.2.2, align 4, !tbaa !18
  %indvars.iv.next136.2.2 = add nuw nsw i64 %indvars.iv135.2.2, 1
  %71 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %72 = sext i32 %71 to i64
  %cmp52.2.2 = icmp slt i64 %indvars.iv.next136.2.2, %72
  br i1 %cmp52.2.2, label %for.body54.2.2, label %for.inc64.2.2, !llvm.loop !21

for.inc64.2.2:                                    ; preds = %for.body54.2.2
  %cmp52126.3.2 = icmp sgt i32 %71, 0
  br i1 %cmp52126.3.2, label %for.body54.lr.ph.3.2, label %for.body73.preheader

for.body54.lr.ph.3.2:                             ; preds = %for.inc64.2.2
  %73 = load ptr, ptr %arrayidx56.2, align 8, !tbaa !5
  %arrayidx58.3.2 = getelementptr inbounds ptr, ptr %73, i64 3
  %74 = load ptr, ptr %arrayidx58.3.2, align 8, !tbaa !5
  br label %for.body54.3.2

for.body54.3.2:                                   ; preds = %for.body54.3.2, %for.body54.lr.ph.3.2
  %indvars.iv135.3.2 = phi i64 [ 0, %for.body54.lr.ph.3.2 ], [ %indvars.iv.next136.3.2, %for.body54.3.2 ]
  %arrayidx60.3.2 = getelementptr inbounds i32, ptr %74, i64 %indvars.iv135.3.2
  store i32 0, ptr %arrayidx60.3.2, align 4, !tbaa !18
  %indvars.iv.next136.3.2 = add nuw nsw i64 %indvars.iv135.3.2, 1
  %75 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %76 = sext i32 %75 to i64
  %cmp52.3.2 = icmp slt i64 %indvars.iv.next136.3.2, %76
  br i1 %cmp52.3.2, label %for.body54.3.2, label %for.body73.preheader, !llvm.loop !21

for.body73.preheader:                             ; preds = %for.body54.3.2, %for.inc64.2163, %for.inc64.1.2, %for.inc64.1154, %for.inc64.1.1, %for.inc64.2.1, %for.inc64, %for.inc64.1, %for.inc64.2, %for.inc67, %for.inc67.1, %for.inc64.2.2, %for.cond43.preheader
  br label %for.body73

for.body73:                                       ; preds = %for.body73.preheader, %for.body73
  %indvars.iv164 = phi i64 [ %indvars.iv.next165, %for.body73 ], [ 0, %for.body73.preheader ]
  %77 = sub nuw nsw i64 127, %indvars.iv164
  %arrayidx76 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %77
  %78 = load double, ptr %arrayidx76, align 8, !tbaa !22
  %sub77 = fsub double 1.000000e+00, %78
  %arrayidx79 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %indvars.iv164
  store double %sub77, ptr %arrayidx79, align 8, !tbaa !22
  %call82 = tail call double @log10(double noundef %sub77) #14
  %div84 = fdiv double %call82, 0x3FD34413509F79FF
  %arrayidx86 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %indvars.iv164
  store double %div84, ptr %arrayidx86, align 8, !tbaa !22
  %79 = load double, ptr %arrayidx76, align 8, !tbaa !22
  %call90 = tail call double @log10(double noundef %79) #14
  %div92 = fdiv double %call90, 0x3FD34413509F79FF
  %arrayidx95 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %77
  store double %div92, ptr %arrayidx95, align 8, !tbaa !22
  %indvars.iv.next165 = add nuw nsw i64 %indvars.iv164, 1
  %exitcond168.not = icmp eq i64 %indvars.iv.next165, 64
  br i1 %exitcond168.not, label %for.end98, label %for.body73, !llvm.loop !23

for.end98:                                        ; preds = %for.body73
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @malloc(i64 noundef) local_unnamed_addr #1

declare void @no_mem_exit(ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare double @log10(double noundef) local_unnamed_addr #3

; Function Attrs: mustprogress nounwind willreturn uwtable
define dso_local void @free_context_memory() local_unnamed_addr #4 {
entry:
  %0 = load ptr, ptr @initialized, align 8, !tbaa !5
  %1 = load ptr, ptr %0, align 8, !tbaa !5
  %2 = load ptr, ptr %1, align 8, !tbaa !5
  tail call void @free(ptr noundef %2) #14
  %3 = load ptr, ptr @model_number, align 8, !tbaa !5
  %4 = load ptr, ptr %3, align 8, !tbaa !5
  %5 = load ptr, ptr %4, align 8, !tbaa !5
  tail call void @free(ptr noundef %5) #14
  %6 = load ptr, ptr @initialized, align 8, !tbaa !5
  %7 = load ptr, ptr %6, align 8, !tbaa !5
  %arrayidx5.1 = getelementptr inbounds ptr, ptr %7, i64 1
  %8 = load ptr, ptr %arrayidx5.1, align 8, !tbaa !5
  tail call void @free(ptr noundef %8) #14
  %9 = load ptr, ptr @model_number, align 8, !tbaa !5
  %10 = load ptr, ptr %9, align 8, !tbaa !5
  %arrayidx9.1 = getelementptr inbounds ptr, ptr %10, i64 1
  %11 = load ptr, ptr %arrayidx9.1, align 8, !tbaa !5
  tail call void @free(ptr noundef %11) #14
  %12 = load ptr, ptr @initialized, align 8, !tbaa !5
  %13 = load ptr, ptr %12, align 8, !tbaa !5
  %arrayidx5.2 = getelementptr inbounds ptr, ptr %13, i64 2
  %14 = load ptr, ptr %arrayidx5.2, align 8, !tbaa !5
  tail call void @free(ptr noundef %14) #14
  %15 = load ptr, ptr @model_number, align 8, !tbaa !5
  %16 = load ptr, ptr %15, align 8, !tbaa !5
  %arrayidx9.2 = getelementptr inbounds ptr, ptr %16, i64 2
  %17 = load ptr, ptr %arrayidx9.2, align 8, !tbaa !5
  tail call void @free(ptr noundef %17) #14
  %18 = load ptr, ptr @initialized, align 8, !tbaa !5
  %19 = load ptr, ptr %18, align 8, !tbaa !5
  %arrayidx5.3 = getelementptr inbounds ptr, ptr %19, i64 3
  %20 = load ptr, ptr %arrayidx5.3, align 8, !tbaa !5
  tail call void @free(ptr noundef %20) #14
  %21 = load ptr, ptr @model_number, align 8, !tbaa !5
  %22 = load ptr, ptr %21, align 8, !tbaa !5
  %arrayidx9.3 = getelementptr inbounds ptr, ptr %22, i64 3
  %23 = load ptr, ptr %arrayidx9.3, align 8, !tbaa !5
  tail call void @free(ptr noundef %23) #14
  %24 = load ptr, ptr @initialized, align 8, !tbaa !5
  %25 = load ptr, ptr %24, align 8, !tbaa !5
  tail call void @free(ptr noundef %25) #14
  %26 = load ptr, ptr @model_number, align 8, !tbaa !5
  %27 = load ptr, ptr %26, align 8, !tbaa !5
  tail call void @free(ptr noundef %27) #14
  %28 = load ptr, ptr @initialized, align 8, !tbaa !5
  %arrayidx.129 = getelementptr inbounds ptr, ptr %28, i64 1
  %29 = load ptr, ptr %arrayidx.129, align 8, !tbaa !5
  %30 = load ptr, ptr %29, align 8, !tbaa !5
  tail call void @free(ptr noundef %30) #14
  %31 = load ptr, ptr @model_number, align 8, !tbaa !5
  %arrayidx7.130 = getelementptr inbounds ptr, ptr %31, i64 1
  %32 = load ptr, ptr %arrayidx7.130, align 8, !tbaa !5
  %33 = load ptr, ptr %32, align 8, !tbaa !5
  tail call void @free(ptr noundef %33) #14
  %34 = load ptr, ptr @initialized, align 8, !tbaa !5
  %arrayidx.1.1 = getelementptr inbounds ptr, ptr %34, i64 1
  %35 = load ptr, ptr %arrayidx.1.1, align 8, !tbaa !5
  %arrayidx5.1.1 = getelementptr inbounds ptr, ptr %35, i64 1
  %36 = load ptr, ptr %arrayidx5.1.1, align 8, !tbaa !5
  tail call void @free(ptr noundef %36) #14
  %37 = load ptr, ptr @model_number, align 8, !tbaa !5
  %arrayidx7.1.1 = getelementptr inbounds ptr, ptr %37, i64 1
  %38 = load ptr, ptr %arrayidx7.1.1, align 8, !tbaa !5
  %arrayidx9.1.1 = getelementptr inbounds ptr, ptr %38, i64 1
  %39 = load ptr, ptr %arrayidx9.1.1, align 8, !tbaa !5
  tail call void @free(ptr noundef %39) #14
  %40 = load ptr, ptr @initialized, align 8, !tbaa !5
  %arrayidx.2.1 = getelementptr inbounds ptr, ptr %40, i64 1
  %41 = load ptr, ptr %arrayidx.2.1, align 8, !tbaa !5
  %arrayidx5.2.1 = getelementptr inbounds ptr, ptr %41, i64 2
  %42 = load ptr, ptr %arrayidx5.2.1, align 8, !tbaa !5
  tail call void @free(ptr noundef %42) #14
  %43 = load ptr, ptr @model_number, align 8, !tbaa !5
  %arrayidx7.2.1 = getelementptr inbounds ptr, ptr %43, i64 1
  %44 = load ptr, ptr %arrayidx7.2.1, align 8, !tbaa !5
  %arrayidx9.2.1 = getelementptr inbounds ptr, ptr %44, i64 2
  %45 = load ptr, ptr %arrayidx9.2.1, align 8, !tbaa !5
  tail call void @free(ptr noundef %45) #14
  %46 = load ptr, ptr @initialized, align 8, !tbaa !5
  %arrayidx.3.1 = getelementptr inbounds ptr, ptr %46, i64 1
  %47 = load ptr, ptr %arrayidx.3.1, align 8, !tbaa !5
  %arrayidx5.3.1 = getelementptr inbounds ptr, ptr %47, i64 3
  %48 = load ptr, ptr %arrayidx5.3.1, align 8, !tbaa !5
  tail call void @free(ptr noundef %48) #14
  %49 = load ptr, ptr @model_number, align 8, !tbaa !5
  %arrayidx7.3.1 = getelementptr inbounds ptr, ptr %49, i64 1
  %50 = load ptr, ptr %arrayidx7.3.1, align 8, !tbaa !5
  %arrayidx9.3.1 = getelementptr inbounds ptr, ptr %50, i64 3
  %51 = load ptr, ptr %arrayidx9.3.1, align 8, !tbaa !5
  tail call void @free(ptr noundef %51) #14
  %52 = load ptr, ptr @initialized, align 8, !tbaa !5
  %arrayidx11.1 = getelementptr inbounds ptr, ptr %52, i64 1
  %53 = load ptr, ptr %arrayidx11.1, align 8, !tbaa !5
  tail call void @free(ptr noundef %53) #14
  %54 = load ptr, ptr @model_number, align 8, !tbaa !5
  %arrayidx13.1 = getelementptr inbounds ptr, ptr %54, i64 1
  %55 = load ptr, ptr %arrayidx13.1, align 8, !tbaa !5
  tail call void @free(ptr noundef %55) #14
  %56 = load ptr, ptr @initialized, align 8, !tbaa !5
  %arrayidx.231 = getelementptr inbounds ptr, ptr %56, i64 2
  %57 = load ptr, ptr %arrayidx.231, align 8, !tbaa !5
  %58 = load ptr, ptr %57, align 8, !tbaa !5
  tail call void @free(ptr noundef %58) #14
  %59 = load ptr, ptr @model_number, align 8, !tbaa !5
  %arrayidx7.232 = getelementptr inbounds ptr, ptr %59, i64 2
  %60 = load ptr, ptr %arrayidx7.232, align 8, !tbaa !5
  %61 = load ptr, ptr %60, align 8, !tbaa !5
  tail call void @free(ptr noundef %61) #14
  %62 = load ptr, ptr @initialized, align 8, !tbaa !5
  %arrayidx.1.2 = getelementptr inbounds ptr, ptr %62, i64 2
  %63 = load ptr, ptr %arrayidx.1.2, align 8, !tbaa !5
  %arrayidx5.1.2 = getelementptr inbounds ptr, ptr %63, i64 1
  %64 = load ptr, ptr %arrayidx5.1.2, align 8, !tbaa !5
  tail call void @free(ptr noundef %64) #14
  %65 = load ptr, ptr @model_number, align 8, !tbaa !5
  %arrayidx7.1.2 = getelementptr inbounds ptr, ptr %65, i64 2
  %66 = load ptr, ptr %arrayidx7.1.2, align 8, !tbaa !5
  %arrayidx9.1.2 = getelementptr inbounds ptr, ptr %66, i64 1
  %67 = load ptr, ptr %arrayidx9.1.2, align 8, !tbaa !5
  tail call void @free(ptr noundef %67) #14
  %68 = load ptr, ptr @initialized, align 8, !tbaa !5
  %arrayidx.2.2 = getelementptr inbounds ptr, ptr %68, i64 2
  %69 = load ptr, ptr %arrayidx.2.2, align 8, !tbaa !5
  %arrayidx5.2.2 = getelementptr inbounds ptr, ptr %69, i64 2
  %70 = load ptr, ptr %arrayidx5.2.2, align 8, !tbaa !5
  tail call void @free(ptr noundef %70) #14
  %71 = load ptr, ptr @model_number, align 8, !tbaa !5
  %arrayidx7.2.2 = getelementptr inbounds ptr, ptr %71, i64 2
  %72 = load ptr, ptr %arrayidx7.2.2, align 8, !tbaa !5
  %arrayidx9.2.2 = getelementptr inbounds ptr, ptr %72, i64 2
  %73 = load ptr, ptr %arrayidx9.2.2, align 8, !tbaa !5
  tail call void @free(ptr noundef %73) #14
  %74 = load ptr, ptr @initialized, align 8, !tbaa !5
  %arrayidx.3.2 = getelementptr inbounds ptr, ptr %74, i64 2
  %75 = load ptr, ptr %arrayidx.3.2, align 8, !tbaa !5
  %arrayidx5.3.2 = getelementptr inbounds ptr, ptr %75, i64 3
  %76 = load ptr, ptr %arrayidx5.3.2, align 8, !tbaa !5
  tail call void @free(ptr noundef %76) #14
  %77 = load ptr, ptr @model_number, align 8, !tbaa !5
  %arrayidx7.3.2 = getelementptr inbounds ptr, ptr %77, i64 2
  %78 = load ptr, ptr %arrayidx7.3.2, align 8, !tbaa !5
  %arrayidx9.3.2 = getelementptr inbounds ptr, ptr %78, i64 3
  %79 = load ptr, ptr %arrayidx9.3.2, align 8, !tbaa !5
  tail call void @free(ptr noundef %79) #14
  %80 = load ptr, ptr @initialized, align 8, !tbaa !5
  %arrayidx11.2 = getelementptr inbounds ptr, ptr %80, i64 2
  %81 = load ptr, ptr %arrayidx11.2, align 8, !tbaa !5
  tail call void @free(ptr noundef %81) #14
  %82 = load ptr, ptr @model_number, align 8, !tbaa !5
  %arrayidx13.2 = getelementptr inbounds ptr, ptr %82, i64 2
  %83 = load ptr, ptr %arrayidx13.2, align 8, !tbaa !5
  tail call void @free(ptr noundef %83) #14
  %84 = load ptr, ptr @initialized, align 8, !tbaa !5
  tail call void @free(ptr noundef %84) #14
  %85 = load ptr, ptr @model_number, align 8, !tbaa !5
  tail call void @free(ptr noundef %85) #14
  ret void
}

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #5

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @SetCtxModelNumber() local_unnamed_addr #6 {
entry:
  %0 = load ptr, ptr @img, align 8, !tbaa !5
  %field_picture = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 110
  %1 = load i32, ptr %field_picture, align 8, !tbaa !24
  %type = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 5
  %2 = load i32, ptr %type, align 4, !tbaa !25
  %currentSlice = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 60
  %3 = load ptr, ptr %currentSlice, align 8, !tbaa !26
  %start_mb_nr = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 3
  %4 = load i32, ptr %start_mb_nr, align 4, !tbaa !27
  %5 = load i32, ptr @num_mb_per_slice, align 4, !tbaa !18
  %div = sdiv i32 %4, %5
  %cmp = icmp eq i32 %2, 2
  br i1 %cmp, label %cleanup, label %if.end

if.end:                                           ; preds = %entry
  %6 = load ptr, ptr @input, align 8, !tbaa !5
  %context_init_method = getelementptr inbounds %struct.InputParameters, ptr %6, i64 0, i32 151
  %7 = load i32, ptr %context_init_method, align 4, !tbaa !29
  %cmp2 = icmp eq i32 %7, 0
  br i1 %cmp2, label %if.then3, label %if.end6

if.then3:                                         ; preds = %if.end
  %model_number4 = getelementptr inbounds %struct.InputParameters, ptr %6, i64 0, i32 152
  %8 = load i32, ptr %model_number4, align 8, !tbaa !30
  br label %cleanup

if.end6:                                          ; preds = %if.end
  %9 = load ptr, ptr @initialized, align 8, !tbaa !5
  %idxprom = sext i32 %1 to i64
  %arrayidx = getelementptr inbounds ptr, ptr %9, i64 %idxprom
  %10 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %idxprom7 = sext i32 %2 to i64
  %arrayidx8 = getelementptr inbounds ptr, ptr %10, i64 %idxprom7
  %11 = load ptr, ptr %arrayidx8, align 8, !tbaa !5
  %idxprom9 = sext i32 %div to i64
  %arrayidx10 = getelementptr inbounds i32, ptr %11, i64 %idxprom9
  %12 = load i32, ptr %arrayidx10, align 4, !tbaa !18
  %tobool.not = icmp eq i32 %12, 0
  br i1 %tobool.not, label %if.else, label %if.then11

if.then11:                                        ; preds = %if.end6
  %13 = load ptr, ptr @model_number, align 8, !tbaa !5
  %arrayidx13 = getelementptr inbounds ptr, ptr %13, i64 %idxprom
  %14 = load ptr, ptr %arrayidx13, align 8, !tbaa !5
  %arrayidx15 = getelementptr inbounds ptr, ptr %14, i64 %idxprom7
  %15 = load ptr, ptr %arrayidx15, align 8, !tbaa !5
  %arrayidx17 = getelementptr inbounds i32, ptr %15, i64 %idxprom9
  %16 = load i32, ptr %arrayidx17, align 4, !tbaa !18
  br label %cleanup

if.else:                                          ; preds = %if.end6
  %tobool19.not = icmp eq i32 %div, 0
  br i1 %tobool19.not, label %cleanup, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.else
  %sub = add nsw i32 %div, -1
  %idxprom24 = sext i32 %sub to i64
  %arrayidx25 = getelementptr inbounds i32, ptr %11, i64 %idxprom24
  %17 = load i32, ptr %arrayidx25, align 4, !tbaa !18
  %tobool26.not = icmp eq i32 %17, 0
  br i1 %tobool26.not, label %cleanup, label %if.then27

if.then27:                                        ; preds = %land.lhs.true
  %18 = load ptr, ptr @model_number, align 8, !tbaa !5
  %arrayidx29 = getelementptr inbounds ptr, ptr %18, i64 %idxprom
  %19 = load ptr, ptr %arrayidx29, align 8, !tbaa !5
  %arrayidx31 = getelementptr inbounds ptr, ptr %19, i64 %idxprom7
  %20 = load ptr, ptr %arrayidx31, align 8, !tbaa !5
  %arrayidx34 = getelementptr inbounds i32, ptr %20, i64 %idxprom24
  %21 = load i32, ptr %arrayidx34, align 4, !tbaa !18
  br label %cleanup

cleanup:                                          ; preds = %if.else, %land.lhs.true, %entry, %if.then11, %if.then27, %if.then3
  %.sink = phi i32 [ %16, %if.then11 ], [ %21, %if.then27 ], [ %8, %if.then3 ], [ 0, %entry ], [ 0, %land.lhs.true ], [ 0, %if.else ]
  %model_number18 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 127
  store i32 %.sink, ptr %model_number18, align 8, !tbaa !31
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @init_contexts() local_unnamed_addr #0 {
entry:
  %0 = load ptr, ptr @img, align 8, !tbaa !5
  %currentSlice = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 60
  %1 = load ptr, ptr %currentSlice, align 8, !tbaa !26
  %mot_ctx = getelementptr inbounds %struct.Slice, ptr %1, i64 0, i32 7
  %2 = load ptr, ptr %mot_ctx, align 8, !tbaa !32
  %tex_ctx = getelementptr inbounds %struct.Slice, ptr %1, i64 0, i32 8
  %3 = load ptr, ptr %tex_ctx, align 8, !tbaa !33
  br label %for.cond2.preheader

for.cond2.preheader:                              ; preds = %entry, %for.cond2.preheader
  %indvars.iv = phi i64 [ 0, %entry ], [ %indvars.iv.next, %for.cond2.preheader ]
  %4 = load ptr, ptr @img, align 8, !tbaa !5
  %type = getelementptr inbounds %struct.ImageParameters, ptr %4, i64 0, i32 5
  %5 = load i32, ptr %type, align 4, !tbaa !25
  %cmp5 = icmp eq i32 %5, 2
  %arrayidx7 = getelementptr inbounds [3 x [11 x %struct.BiContextType]], ptr %2, i64 0, i64 %indvars.iv, i64 0
  %model_number = getelementptr inbounds %struct.ImageParameters, ptr %4, i64 0, i32 127
  %6 = load i32, ptr %model_number, align 8, !tbaa !31
  %idxprom8 = sext i32 %6 to i64
  %arrayidx13 = getelementptr inbounds [1 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_I, i64 0, i64 %idxprom8, i64 %indvars.iv, i64 0
  %arrayidx26 = getelementptr inbounds [3 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_P, i64 0, i64 %idxprom8, i64 %indvars.iv, i64 0
  %arrayidx13.sink = select i1 %cmp5, ptr %arrayidx13, ptr %arrayidx26
  tail call void @biari_init_context(ptr noundef %arrayidx7, ptr noundef nonnull %arrayidx13.sink) #14
  %7 = load ptr, ptr @img, align 8, !tbaa !5
  %type.1 = getelementptr inbounds %struct.ImageParameters, ptr %7, i64 0, i32 5
  %8 = load i32, ptr %type.1, align 4, !tbaa !25
  %cmp5.1 = icmp eq i32 %8, 2
  %arrayidx7.1 = getelementptr inbounds [3 x [11 x %struct.BiContextType]], ptr %2, i64 0, i64 %indvars.iv, i64 1
  %model_number.1 = getelementptr inbounds %struct.ImageParameters, ptr %7, i64 0, i32 127
  %9 = load i32, ptr %model_number.1, align 8, !tbaa !31
  %idxprom8.1 = sext i32 %9 to i64
  %arrayidx13.1 = getelementptr inbounds [1 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_I, i64 0, i64 %idxprom8.1, i64 %indvars.iv, i64 1
  %arrayidx26.1 = getelementptr inbounds [3 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_P, i64 0, i64 %idxprom8.1, i64 %indvars.iv, i64 1
  %arrayidx13.1.sink = select i1 %cmp5.1, ptr %arrayidx13.1, ptr %arrayidx26.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx7.1, ptr noundef nonnull %arrayidx13.1.sink) #14
  %10 = load ptr, ptr @img, align 8, !tbaa !5
  %type.2 = getelementptr inbounds %struct.ImageParameters, ptr %10, i64 0, i32 5
  %11 = load i32, ptr %type.2, align 4, !tbaa !25
  %cmp5.2 = icmp eq i32 %11, 2
  %arrayidx7.2 = getelementptr inbounds [3 x [11 x %struct.BiContextType]], ptr %2, i64 0, i64 %indvars.iv, i64 2
  %model_number.2 = getelementptr inbounds %struct.ImageParameters, ptr %10, i64 0, i32 127
  %12 = load i32, ptr %model_number.2, align 8, !tbaa !31
  %idxprom8.2 = sext i32 %12 to i64
  %arrayidx13.2 = getelementptr inbounds [1 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_I, i64 0, i64 %idxprom8.2, i64 %indvars.iv, i64 2
  %arrayidx26.2 = getelementptr inbounds [3 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_P, i64 0, i64 %idxprom8.2, i64 %indvars.iv, i64 2
  %arrayidx13.2.sink = select i1 %cmp5.2, ptr %arrayidx13.2, ptr %arrayidx26.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx7.2, ptr noundef nonnull %arrayidx13.2.sink) #14
  %13 = load ptr, ptr @img, align 8, !tbaa !5
  %type.3 = getelementptr inbounds %struct.ImageParameters, ptr %13, i64 0, i32 5
  %14 = load i32, ptr %type.3, align 4, !tbaa !25
  %cmp5.3 = icmp eq i32 %14, 2
  %arrayidx7.3 = getelementptr inbounds [3 x [11 x %struct.BiContextType]], ptr %2, i64 0, i64 %indvars.iv, i64 3
  %model_number.3 = getelementptr inbounds %struct.ImageParameters, ptr %13, i64 0, i32 127
  %15 = load i32, ptr %model_number.3, align 8, !tbaa !31
  %idxprom8.3 = sext i32 %15 to i64
  %arrayidx13.3 = getelementptr inbounds [1 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_I, i64 0, i64 %idxprom8.3, i64 %indvars.iv, i64 3
  %arrayidx26.3 = getelementptr inbounds [3 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_P, i64 0, i64 %idxprom8.3, i64 %indvars.iv, i64 3
  %arrayidx13.3.sink = select i1 %cmp5.3, ptr %arrayidx13.3, ptr %arrayidx26.3
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx7.3, ptr noundef nonnull %arrayidx13.3.sink) #14
  %16 = load ptr, ptr @img, align 8, !tbaa !5
  %type.4 = getelementptr inbounds %struct.ImageParameters, ptr %16, i64 0, i32 5
  %17 = load i32, ptr %type.4, align 4, !tbaa !25
  %cmp5.4 = icmp eq i32 %17, 2
  %arrayidx7.4 = getelementptr inbounds [3 x [11 x %struct.BiContextType]], ptr %2, i64 0, i64 %indvars.iv, i64 4
  %model_number.4 = getelementptr inbounds %struct.ImageParameters, ptr %16, i64 0, i32 127
  %18 = load i32, ptr %model_number.4, align 8, !tbaa !31
  %idxprom8.4 = sext i32 %18 to i64
  %arrayidx13.4 = getelementptr inbounds [1 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_I, i64 0, i64 %idxprom8.4, i64 %indvars.iv, i64 4
  %arrayidx26.4 = getelementptr inbounds [3 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_P, i64 0, i64 %idxprom8.4, i64 %indvars.iv, i64 4
  %arrayidx13.4.sink = select i1 %cmp5.4, ptr %arrayidx13.4, ptr %arrayidx26.4
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx7.4, ptr noundef nonnull %arrayidx13.4.sink) #14
  %19 = load ptr, ptr @img, align 8, !tbaa !5
  %type.5 = getelementptr inbounds %struct.ImageParameters, ptr %19, i64 0, i32 5
  %20 = load i32, ptr %type.5, align 4, !tbaa !25
  %cmp5.5 = icmp eq i32 %20, 2
  %arrayidx7.5 = getelementptr inbounds [3 x [11 x %struct.BiContextType]], ptr %2, i64 0, i64 %indvars.iv, i64 5
  %model_number.5 = getelementptr inbounds %struct.ImageParameters, ptr %19, i64 0, i32 127
  %21 = load i32, ptr %model_number.5, align 8, !tbaa !31
  %idxprom8.5 = sext i32 %21 to i64
  %arrayidx13.5 = getelementptr inbounds [1 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_I, i64 0, i64 %idxprom8.5, i64 %indvars.iv, i64 5
  %arrayidx26.5 = getelementptr inbounds [3 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_P, i64 0, i64 %idxprom8.5, i64 %indvars.iv, i64 5
  %arrayidx13.5.sink = select i1 %cmp5.5, ptr %arrayidx13.5, ptr %arrayidx26.5
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx7.5, ptr noundef nonnull %arrayidx13.5.sink) #14
  %22 = load ptr, ptr @img, align 8, !tbaa !5
  %type.6 = getelementptr inbounds %struct.ImageParameters, ptr %22, i64 0, i32 5
  %23 = load i32, ptr %type.6, align 4, !tbaa !25
  %cmp5.6 = icmp eq i32 %23, 2
  %arrayidx7.6 = getelementptr inbounds [3 x [11 x %struct.BiContextType]], ptr %2, i64 0, i64 %indvars.iv, i64 6
  %model_number.6 = getelementptr inbounds %struct.ImageParameters, ptr %22, i64 0, i32 127
  %24 = load i32, ptr %model_number.6, align 8, !tbaa !31
  %idxprom8.6 = sext i32 %24 to i64
  %arrayidx13.6 = getelementptr inbounds [1 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_I, i64 0, i64 %idxprom8.6, i64 %indvars.iv, i64 6
  %arrayidx26.6 = getelementptr inbounds [3 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_P, i64 0, i64 %idxprom8.6, i64 %indvars.iv, i64 6
  %arrayidx13.6.sink = select i1 %cmp5.6, ptr %arrayidx13.6, ptr %arrayidx26.6
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx7.6, ptr noundef nonnull %arrayidx13.6.sink) #14
  %25 = load ptr, ptr @img, align 8, !tbaa !5
  %type.7 = getelementptr inbounds %struct.ImageParameters, ptr %25, i64 0, i32 5
  %26 = load i32, ptr %type.7, align 4, !tbaa !25
  %cmp5.7 = icmp eq i32 %26, 2
  %arrayidx7.7 = getelementptr inbounds [3 x [11 x %struct.BiContextType]], ptr %2, i64 0, i64 %indvars.iv, i64 7
  %model_number.7 = getelementptr inbounds %struct.ImageParameters, ptr %25, i64 0, i32 127
  %27 = load i32, ptr %model_number.7, align 8, !tbaa !31
  %idxprom8.7 = sext i32 %27 to i64
  %arrayidx13.7 = getelementptr inbounds [1 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_I, i64 0, i64 %idxprom8.7, i64 %indvars.iv, i64 7
  %arrayidx26.7 = getelementptr inbounds [3 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_P, i64 0, i64 %idxprom8.7, i64 %indvars.iv, i64 7
  %arrayidx13.7.sink = select i1 %cmp5.7, ptr %arrayidx13.7, ptr %arrayidx26.7
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx7.7, ptr noundef nonnull %arrayidx13.7.sink) #14
  %28 = load ptr, ptr @img, align 8, !tbaa !5
  %type.8 = getelementptr inbounds %struct.ImageParameters, ptr %28, i64 0, i32 5
  %29 = load i32, ptr %type.8, align 4, !tbaa !25
  %cmp5.8 = icmp eq i32 %29, 2
  %arrayidx7.8 = getelementptr inbounds [3 x [11 x %struct.BiContextType]], ptr %2, i64 0, i64 %indvars.iv, i64 8
  %model_number.8 = getelementptr inbounds %struct.ImageParameters, ptr %28, i64 0, i32 127
  %30 = load i32, ptr %model_number.8, align 8, !tbaa !31
  %idxprom8.8 = sext i32 %30 to i64
  %arrayidx13.8 = getelementptr inbounds [1 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_I, i64 0, i64 %idxprom8.8, i64 %indvars.iv, i64 8
  %arrayidx26.8 = getelementptr inbounds [3 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_P, i64 0, i64 %idxprom8.8, i64 %indvars.iv, i64 8
  %arrayidx13.8.sink = select i1 %cmp5.8, ptr %arrayidx13.8, ptr %arrayidx26.8
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx7.8, ptr noundef nonnull %arrayidx13.8.sink) #14
  %31 = load ptr, ptr @img, align 8, !tbaa !5
  %type.9 = getelementptr inbounds %struct.ImageParameters, ptr %31, i64 0, i32 5
  %32 = load i32, ptr %type.9, align 4, !tbaa !25
  %cmp5.9 = icmp eq i32 %32, 2
  %arrayidx7.9 = getelementptr inbounds [3 x [11 x %struct.BiContextType]], ptr %2, i64 0, i64 %indvars.iv, i64 9
  %model_number.9 = getelementptr inbounds %struct.ImageParameters, ptr %31, i64 0, i32 127
  %33 = load i32, ptr %model_number.9, align 8, !tbaa !31
  %idxprom8.9 = sext i32 %33 to i64
  %arrayidx13.9 = getelementptr inbounds [1 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_I, i64 0, i64 %idxprom8.9, i64 %indvars.iv, i64 9
  %arrayidx26.9 = getelementptr inbounds [3 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_P, i64 0, i64 %idxprom8.9, i64 %indvars.iv, i64 9
  %arrayidx13.9.sink = select i1 %cmp5.9, ptr %arrayidx13.9, ptr %arrayidx26.9
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx7.9, ptr noundef nonnull %arrayidx13.9.sink) #14
  %34 = load ptr, ptr @img, align 8, !tbaa !5
  %type.10 = getelementptr inbounds %struct.ImageParameters, ptr %34, i64 0, i32 5
  %35 = load i32, ptr %type.10, align 4, !tbaa !25
  %cmp5.10 = icmp eq i32 %35, 2
  %arrayidx7.10 = getelementptr inbounds [3 x [11 x %struct.BiContextType]], ptr %2, i64 0, i64 %indvars.iv, i64 10
  %model_number.10 = getelementptr inbounds %struct.ImageParameters, ptr %34, i64 0, i32 127
  %36 = load i32, ptr %model_number.10, align 8, !tbaa !31
  %idxprom8.10 = sext i32 %36 to i64
  %arrayidx13.10 = getelementptr inbounds [1 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_I, i64 0, i64 %idxprom8.10, i64 %indvars.iv, i64 10
  %arrayidx26.10 = getelementptr inbounds [3 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_P, i64 0, i64 %idxprom8.10, i64 %indvars.iv, i64 10
  %arrayidx13.10.sink = select i1 %cmp5.10, ptr %arrayidx13.10, ptr %arrayidx26.10
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx7.10, ptr noundef nonnull %arrayidx13.10.sink) #14
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 3
  br i1 %exitcond.not, label %for.cond34.preheader, label %for.cond2.preheader, !llvm.loop !34

for.cond34.preheader:                             ; preds = %for.cond2.preheader
  %37 = load ptr, ptr @img, align 8, !tbaa !5
  %type37 = getelementptr inbounds %struct.ImageParameters, ptr %37, i64 0, i32 5
  %38 = load i32, ptr %type37, align 4, !tbaa !25
  %cmp38 = icmp eq i32 %38, 2
  %arrayidx43 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 1, i64 0, i64 0
  %model_number44 = getelementptr inbounds %struct.ImageParameters, ptr %37, i64 0, i32 127
  %39 = load i32, ptr %model_number44, align 8, !tbaa !31
  %idxprom45 = sext i32 %39 to i64
  %arrayidx50 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %idxprom45, i64 0, i64 0
  %arrayidx64 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %idxprom45, i64 0, i64 0
  %arrayidx50.sink = select i1 %cmp38, ptr %arrayidx50, ptr %arrayidx64
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx43, ptr noundef nonnull %arrayidx50.sink) #14
  %40 = load ptr, ptr @img, align 8, !tbaa !5
  %type37.1 = getelementptr inbounds %struct.ImageParameters, ptr %40, i64 0, i32 5
  %41 = load i32, ptr %type37.1, align 4, !tbaa !25
  %cmp38.1 = icmp eq i32 %41, 2
  %arrayidx43.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 1, i64 0, i64 1
  %model_number44.1 = getelementptr inbounds %struct.ImageParameters, ptr %40, i64 0, i32 127
  %42 = load i32, ptr %model_number44.1, align 8, !tbaa !31
  %idxprom45.1 = sext i32 %42 to i64
  %arrayidx50.1 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %idxprom45.1, i64 0, i64 1
  %arrayidx64.1 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %idxprom45.1, i64 0, i64 1
  %arrayidx50.1.sink = select i1 %cmp38.1, ptr %arrayidx50.1, ptr %arrayidx64.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx43.1, ptr noundef nonnull %arrayidx50.1.sink) #14
  %43 = load ptr, ptr @img, align 8, !tbaa !5
  %type37.2 = getelementptr inbounds %struct.ImageParameters, ptr %43, i64 0, i32 5
  %44 = load i32, ptr %type37.2, align 4, !tbaa !25
  %cmp38.2 = icmp eq i32 %44, 2
  %arrayidx43.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 1, i64 0, i64 2
  %model_number44.2 = getelementptr inbounds %struct.ImageParameters, ptr %43, i64 0, i32 127
  %45 = load i32, ptr %model_number44.2, align 8, !tbaa !31
  %idxprom45.2 = sext i32 %45 to i64
  %arrayidx50.2 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %idxprom45.2, i64 0, i64 2
  %arrayidx64.2 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %idxprom45.2, i64 0, i64 2
  %arrayidx50.2.sink = select i1 %cmp38.2, ptr %arrayidx50.2, ptr %arrayidx64.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx43.2, ptr noundef nonnull %arrayidx50.2.sink) #14
  %46 = load ptr, ptr @img, align 8, !tbaa !5
  %type37.3 = getelementptr inbounds %struct.ImageParameters, ptr %46, i64 0, i32 5
  %47 = load i32, ptr %type37.3, align 4, !tbaa !25
  %cmp38.3 = icmp eq i32 %47, 2
  %arrayidx43.3 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 1, i64 0, i64 3
  %model_number44.3 = getelementptr inbounds %struct.ImageParameters, ptr %46, i64 0, i32 127
  %48 = load i32, ptr %model_number44.3, align 8, !tbaa !31
  %idxprom45.3 = sext i32 %48 to i64
  %arrayidx50.3 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %idxprom45.3, i64 0, i64 3
  %arrayidx64.3 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %idxprom45.3, i64 0, i64 3
  %arrayidx50.3.sink = select i1 %cmp38.3, ptr %arrayidx50.3, ptr %arrayidx64.3
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx43.3, ptr noundef nonnull %arrayidx50.3.sink) #14
  %49 = load ptr, ptr @img, align 8, !tbaa !5
  %type37.4 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 5
  %50 = load i32, ptr %type37.4, align 4, !tbaa !25
  %cmp38.4 = icmp eq i32 %50, 2
  %arrayidx43.4 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 1, i64 0, i64 4
  %model_number44.4 = getelementptr inbounds %struct.ImageParameters, ptr %49, i64 0, i32 127
  %51 = load i32, ptr %model_number44.4, align 8, !tbaa !31
  %idxprom45.4 = sext i32 %51 to i64
  %arrayidx50.4 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %idxprom45.4, i64 0, i64 4
  %arrayidx64.4 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %idxprom45.4, i64 0, i64 4
  %arrayidx50.4.sink = select i1 %cmp38.4, ptr %arrayidx50.4, ptr %arrayidx64.4
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx43.4, ptr noundef nonnull %arrayidx50.4.sink) #14
  %52 = load ptr, ptr @img, align 8, !tbaa !5
  %type37.5 = getelementptr inbounds %struct.ImageParameters, ptr %52, i64 0, i32 5
  %53 = load i32, ptr %type37.5, align 4, !tbaa !25
  %cmp38.5 = icmp eq i32 %53, 2
  %arrayidx43.5 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 1, i64 0, i64 5
  %model_number44.5 = getelementptr inbounds %struct.ImageParameters, ptr %52, i64 0, i32 127
  %54 = load i32, ptr %model_number44.5, align 8, !tbaa !31
  %idxprom45.5 = sext i32 %54 to i64
  %arrayidx50.5 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %idxprom45.5, i64 0, i64 5
  %arrayidx64.5 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %idxprom45.5, i64 0, i64 5
  %arrayidx50.5.sink = select i1 %cmp38.5, ptr %arrayidx50.5, ptr %arrayidx64.5
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx43.5, ptr noundef nonnull %arrayidx50.5.sink) #14
  %55 = load ptr, ptr @img, align 8, !tbaa !5
  %type37.6 = getelementptr inbounds %struct.ImageParameters, ptr %55, i64 0, i32 5
  %56 = load i32, ptr %type37.6, align 4, !tbaa !25
  %cmp38.6 = icmp eq i32 %56, 2
  %arrayidx43.6 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 1, i64 0, i64 6
  %model_number44.6 = getelementptr inbounds %struct.ImageParameters, ptr %55, i64 0, i32 127
  %57 = load i32, ptr %model_number44.6, align 8, !tbaa !31
  %idxprom45.6 = sext i32 %57 to i64
  %arrayidx50.6 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %idxprom45.6, i64 0, i64 6
  %arrayidx64.6 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %idxprom45.6, i64 0, i64 6
  %arrayidx50.6.sink = select i1 %cmp38.6, ptr %arrayidx50.6, ptr %arrayidx64.6
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx43.6, ptr noundef nonnull %arrayidx50.6.sink) #14
  %58 = load ptr, ptr @img, align 8, !tbaa !5
  %type37.7 = getelementptr inbounds %struct.ImageParameters, ptr %58, i64 0, i32 5
  %59 = load i32, ptr %type37.7, align 4, !tbaa !25
  %cmp38.7 = icmp eq i32 %59, 2
  %arrayidx43.7 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 1, i64 0, i64 7
  %model_number44.7 = getelementptr inbounds %struct.ImageParameters, ptr %58, i64 0, i32 127
  %60 = load i32, ptr %model_number44.7, align 8, !tbaa !31
  %idxprom45.7 = sext i32 %60 to i64
  %arrayidx50.7 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %idxprom45.7, i64 0, i64 7
  %arrayidx64.7 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %idxprom45.7, i64 0, i64 7
  %arrayidx50.7.sink = select i1 %cmp38.7, ptr %arrayidx50.7, ptr %arrayidx64.7
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx43.7, ptr noundef nonnull %arrayidx50.7.sink) #14
  %61 = load ptr, ptr @img, align 8, !tbaa !5
  %type37.8 = getelementptr inbounds %struct.ImageParameters, ptr %61, i64 0, i32 5
  %62 = load i32, ptr %type37.8, align 4, !tbaa !25
  %cmp38.8 = icmp eq i32 %62, 2
  %arrayidx43.8 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 1, i64 0, i64 8
  %model_number44.8 = getelementptr inbounds %struct.ImageParameters, ptr %61, i64 0, i32 127
  %63 = load i32, ptr %model_number44.8, align 8, !tbaa !31
  %idxprom45.8 = sext i32 %63 to i64
  %arrayidx50.8 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %idxprom45.8, i64 0, i64 8
  %arrayidx64.8 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %idxprom45.8, i64 0, i64 8
  %arrayidx50.8.sink = select i1 %cmp38.8, ptr %arrayidx50.8, ptr %arrayidx64.8
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx43.8, ptr noundef nonnull %arrayidx50.8.sink) #14
  %64 = load ptr, ptr @img, align 8, !tbaa !5
  %type37.11021 = getelementptr inbounds %struct.ImageParameters, ptr %64, i64 0, i32 5
  %65 = load i32, ptr %type37.11021, align 4, !tbaa !25
  %cmp38.11022 = icmp eq i32 %65, 2
  %arrayidx43.11023 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 1, i64 1, i64 0
  %model_number44.11024 = getelementptr inbounds %struct.ImageParameters, ptr %64, i64 0, i32 127
  %66 = load i32, ptr %model_number44.11024, align 8, !tbaa !31
  %idxprom45.11025 = sext i32 %66 to i64
  %arrayidx50.11026 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %idxprom45.11025, i64 1, i64 0
  %arrayidx64.11027 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %idxprom45.11025, i64 1, i64 0
  %arrayidx50.sink.1 = select i1 %cmp38.11022, ptr %arrayidx50.11026, ptr %arrayidx64.11027
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx43.11023, ptr noundef nonnull %arrayidx50.sink.1) #14
  %67 = load ptr, ptr @img, align 8, !tbaa !5
  %type37.1.1 = getelementptr inbounds %struct.ImageParameters, ptr %67, i64 0, i32 5
  %68 = load i32, ptr %type37.1.1, align 4, !tbaa !25
  %cmp38.1.1 = icmp eq i32 %68, 2
  %arrayidx43.1.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 1, i64 1, i64 1
  %model_number44.1.1 = getelementptr inbounds %struct.ImageParameters, ptr %67, i64 0, i32 127
  %69 = load i32, ptr %model_number44.1.1, align 8, !tbaa !31
  %idxprom45.1.1 = sext i32 %69 to i64
  %arrayidx50.1.1 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %idxprom45.1.1, i64 1, i64 1
  %arrayidx64.1.1 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %idxprom45.1.1, i64 1, i64 1
  %arrayidx50.1.sink.1 = select i1 %cmp38.1.1, ptr %arrayidx50.1.1, ptr %arrayidx64.1.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx43.1.1, ptr noundef nonnull %arrayidx50.1.sink.1) #14
  %70 = load ptr, ptr @img, align 8, !tbaa !5
  %type37.2.1 = getelementptr inbounds %struct.ImageParameters, ptr %70, i64 0, i32 5
  %71 = load i32, ptr %type37.2.1, align 4, !tbaa !25
  %cmp38.2.1 = icmp eq i32 %71, 2
  %arrayidx43.2.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 1, i64 1, i64 2
  %model_number44.2.1 = getelementptr inbounds %struct.ImageParameters, ptr %70, i64 0, i32 127
  %72 = load i32, ptr %model_number44.2.1, align 8, !tbaa !31
  %idxprom45.2.1 = sext i32 %72 to i64
  %arrayidx50.2.1 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %idxprom45.2.1, i64 1, i64 2
  %arrayidx64.2.1 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %idxprom45.2.1, i64 1, i64 2
  %arrayidx50.2.sink.1 = select i1 %cmp38.2.1, ptr %arrayidx50.2.1, ptr %arrayidx64.2.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx43.2.1, ptr noundef nonnull %arrayidx50.2.sink.1) #14
  %73 = load ptr, ptr @img, align 8, !tbaa !5
  %type37.3.1 = getelementptr inbounds %struct.ImageParameters, ptr %73, i64 0, i32 5
  %74 = load i32, ptr %type37.3.1, align 4, !tbaa !25
  %cmp38.3.1 = icmp eq i32 %74, 2
  %arrayidx43.3.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 1, i64 1, i64 3
  %model_number44.3.1 = getelementptr inbounds %struct.ImageParameters, ptr %73, i64 0, i32 127
  %75 = load i32, ptr %model_number44.3.1, align 8, !tbaa !31
  %idxprom45.3.1 = sext i32 %75 to i64
  %arrayidx50.3.1 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %idxprom45.3.1, i64 1, i64 3
  %arrayidx64.3.1 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %idxprom45.3.1, i64 1, i64 3
  %arrayidx50.3.sink.1 = select i1 %cmp38.3.1, ptr %arrayidx50.3.1, ptr %arrayidx64.3.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx43.3.1, ptr noundef nonnull %arrayidx50.3.sink.1) #14
  %76 = load ptr, ptr @img, align 8, !tbaa !5
  %type37.4.1 = getelementptr inbounds %struct.ImageParameters, ptr %76, i64 0, i32 5
  %77 = load i32, ptr %type37.4.1, align 4, !tbaa !25
  %cmp38.4.1 = icmp eq i32 %77, 2
  %arrayidx43.4.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 1, i64 1, i64 4
  %model_number44.4.1 = getelementptr inbounds %struct.ImageParameters, ptr %76, i64 0, i32 127
  %78 = load i32, ptr %model_number44.4.1, align 8, !tbaa !31
  %idxprom45.4.1 = sext i32 %78 to i64
  %arrayidx50.4.1 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %idxprom45.4.1, i64 1, i64 4
  %arrayidx64.4.1 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %idxprom45.4.1, i64 1, i64 4
  %arrayidx50.4.sink.1 = select i1 %cmp38.4.1, ptr %arrayidx50.4.1, ptr %arrayidx64.4.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx43.4.1, ptr noundef nonnull %arrayidx50.4.sink.1) #14
  %79 = load ptr, ptr @img, align 8, !tbaa !5
  %type37.5.1 = getelementptr inbounds %struct.ImageParameters, ptr %79, i64 0, i32 5
  %80 = load i32, ptr %type37.5.1, align 4, !tbaa !25
  %cmp38.5.1 = icmp eq i32 %80, 2
  %arrayidx43.5.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 1, i64 1, i64 5
  %model_number44.5.1 = getelementptr inbounds %struct.ImageParameters, ptr %79, i64 0, i32 127
  %81 = load i32, ptr %model_number44.5.1, align 8, !tbaa !31
  %idxprom45.5.1 = sext i32 %81 to i64
  %arrayidx50.5.1 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %idxprom45.5.1, i64 1, i64 5
  %arrayidx64.5.1 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %idxprom45.5.1, i64 1, i64 5
  %arrayidx50.5.sink.1 = select i1 %cmp38.5.1, ptr %arrayidx50.5.1, ptr %arrayidx64.5.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx43.5.1, ptr noundef nonnull %arrayidx50.5.sink.1) #14
  %82 = load ptr, ptr @img, align 8, !tbaa !5
  %type37.6.1 = getelementptr inbounds %struct.ImageParameters, ptr %82, i64 0, i32 5
  %83 = load i32, ptr %type37.6.1, align 4, !tbaa !25
  %cmp38.6.1 = icmp eq i32 %83, 2
  %arrayidx43.6.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 1, i64 1, i64 6
  %model_number44.6.1 = getelementptr inbounds %struct.ImageParameters, ptr %82, i64 0, i32 127
  %84 = load i32, ptr %model_number44.6.1, align 8, !tbaa !31
  %idxprom45.6.1 = sext i32 %84 to i64
  %arrayidx50.6.1 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %idxprom45.6.1, i64 1, i64 6
  %arrayidx64.6.1 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %idxprom45.6.1, i64 1, i64 6
  %arrayidx50.6.sink.1 = select i1 %cmp38.6.1, ptr %arrayidx50.6.1, ptr %arrayidx64.6.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx43.6.1, ptr noundef nonnull %arrayidx50.6.sink.1) #14
  %85 = load ptr, ptr @img, align 8, !tbaa !5
  %type37.7.1 = getelementptr inbounds %struct.ImageParameters, ptr %85, i64 0, i32 5
  %86 = load i32, ptr %type37.7.1, align 4, !tbaa !25
  %cmp38.7.1 = icmp eq i32 %86, 2
  %arrayidx43.7.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 1, i64 1, i64 7
  %model_number44.7.1 = getelementptr inbounds %struct.ImageParameters, ptr %85, i64 0, i32 127
  %87 = load i32, ptr %model_number44.7.1, align 8, !tbaa !31
  %idxprom45.7.1 = sext i32 %87 to i64
  %arrayidx50.7.1 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %idxprom45.7.1, i64 1, i64 7
  %arrayidx64.7.1 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %idxprom45.7.1, i64 1, i64 7
  %arrayidx50.7.sink.1 = select i1 %cmp38.7.1, ptr %arrayidx50.7.1, ptr %arrayidx64.7.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx43.7.1, ptr noundef nonnull %arrayidx50.7.sink.1) #14
  %88 = load ptr, ptr @img, align 8, !tbaa !5
  %type37.8.1 = getelementptr inbounds %struct.ImageParameters, ptr %88, i64 0, i32 5
  %89 = load i32, ptr %type37.8.1, align 4, !tbaa !25
  %cmp38.8.1 = icmp eq i32 %89, 2
  %arrayidx43.8.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 1, i64 1, i64 8
  %model_number44.8.1 = getelementptr inbounds %struct.ImageParameters, ptr %88, i64 0, i32 127
  %90 = load i32, ptr %model_number44.8.1, align 8, !tbaa !31
  %idxprom45.8.1 = sext i32 %90 to i64
  %arrayidx50.8.1 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 %idxprom45.8.1, i64 1, i64 8
  %arrayidx64.8.1 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %idxprom45.8.1, i64 1, i64 8
  %arrayidx50.8.sink.1 = select i1 %cmp38.8.1, ptr %arrayidx50.8.1, ptr %arrayidx64.8.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx43.8.1, ptr noundef nonnull %arrayidx50.8.sink.1) #14
  %91 = load ptr, ptr @img, align 8, !tbaa !5
  %type79 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 5
  %92 = load i32, ptr %type79, align 4, !tbaa !25
  %cmp80 = icmp eq i32 %92, 2
  %arrayidx85 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 0, i64 0
  %model_number86 = getelementptr inbounds %struct.ImageParameters, ptr %91, i64 0, i32 127
  %93 = load i32, ptr %model_number86, align 8, !tbaa !31
  %idxprom87 = sext i32 %93 to i64
  %arrayidx92 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87, i64 0, i64 0
  %arrayidx106 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87, i64 0, i64 0
  %arrayidx92.sink = select i1 %cmp80, ptr %arrayidx92, ptr %arrayidx106
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85, ptr noundef nonnull %arrayidx92.sink) #14
  %94 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.1 = getelementptr inbounds %struct.ImageParameters, ptr %94, i64 0, i32 5
  %95 = load i32, ptr %type79.1, align 4, !tbaa !25
  %cmp80.1 = icmp eq i32 %95, 2
  %arrayidx85.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 0, i64 1
  %model_number86.1 = getelementptr inbounds %struct.ImageParameters, ptr %94, i64 0, i32 127
  %96 = load i32, ptr %model_number86.1, align 8, !tbaa !31
  %idxprom87.1 = sext i32 %96 to i64
  %arrayidx92.1 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.1, i64 0, i64 1
  %arrayidx106.1 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.1, i64 0, i64 1
  %arrayidx92.1.sink = select i1 %cmp80.1, ptr %arrayidx92.1, ptr %arrayidx106.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.1, ptr noundef nonnull %arrayidx92.1.sink) #14
  %97 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.2 = getelementptr inbounds %struct.ImageParameters, ptr %97, i64 0, i32 5
  %98 = load i32, ptr %type79.2, align 4, !tbaa !25
  %cmp80.2 = icmp eq i32 %98, 2
  %arrayidx85.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 0, i64 2
  %model_number86.2 = getelementptr inbounds %struct.ImageParameters, ptr %97, i64 0, i32 127
  %99 = load i32, ptr %model_number86.2, align 8, !tbaa !31
  %idxprom87.2 = sext i32 %99 to i64
  %arrayidx92.2 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.2, i64 0, i64 2
  %arrayidx106.2 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.2, i64 0, i64 2
  %arrayidx92.2.sink = select i1 %cmp80.2, ptr %arrayidx92.2, ptr %arrayidx106.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.2, ptr noundef nonnull %arrayidx92.2.sink) #14
  %100 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.3 = getelementptr inbounds %struct.ImageParameters, ptr %100, i64 0, i32 5
  %101 = load i32, ptr %type79.3, align 4, !tbaa !25
  %cmp80.3 = icmp eq i32 %101, 2
  %arrayidx85.3 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 0, i64 3
  %model_number86.3 = getelementptr inbounds %struct.ImageParameters, ptr %100, i64 0, i32 127
  %102 = load i32, ptr %model_number86.3, align 8, !tbaa !31
  %idxprom87.3 = sext i32 %102 to i64
  %arrayidx92.3 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.3, i64 0, i64 3
  %arrayidx106.3 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.3, i64 0, i64 3
  %arrayidx92.3.sink = select i1 %cmp80.3, ptr %arrayidx92.3, ptr %arrayidx106.3
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.3, ptr noundef nonnull %arrayidx92.3.sink) #14
  %103 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.4 = getelementptr inbounds %struct.ImageParameters, ptr %103, i64 0, i32 5
  %104 = load i32, ptr %type79.4, align 4, !tbaa !25
  %cmp80.4 = icmp eq i32 %104, 2
  %arrayidx85.4 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 0, i64 4
  %model_number86.4 = getelementptr inbounds %struct.ImageParameters, ptr %103, i64 0, i32 127
  %105 = load i32, ptr %model_number86.4, align 8, !tbaa !31
  %idxprom87.4 = sext i32 %105 to i64
  %arrayidx92.4 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.4, i64 0, i64 4
  %arrayidx106.4 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.4, i64 0, i64 4
  %arrayidx92.4.sink = select i1 %cmp80.4, ptr %arrayidx92.4, ptr %arrayidx106.4
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.4, ptr noundef nonnull %arrayidx92.4.sink) #14
  %106 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.5 = getelementptr inbounds %struct.ImageParameters, ptr %106, i64 0, i32 5
  %107 = load i32, ptr %type79.5, align 4, !tbaa !25
  %cmp80.5 = icmp eq i32 %107, 2
  %arrayidx85.5 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 0, i64 5
  %model_number86.5 = getelementptr inbounds %struct.ImageParameters, ptr %106, i64 0, i32 127
  %108 = load i32, ptr %model_number86.5, align 8, !tbaa !31
  %idxprom87.5 = sext i32 %108 to i64
  %arrayidx92.5 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.5, i64 0, i64 5
  %arrayidx106.5 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.5, i64 0, i64 5
  %arrayidx92.5.sink = select i1 %cmp80.5, ptr %arrayidx92.5, ptr %arrayidx106.5
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.5, ptr noundef nonnull %arrayidx92.5.sink) #14
  %109 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.6 = getelementptr inbounds %struct.ImageParameters, ptr %109, i64 0, i32 5
  %110 = load i32, ptr %type79.6, align 4, !tbaa !25
  %cmp80.6 = icmp eq i32 %110, 2
  %arrayidx85.6 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 0, i64 6
  %model_number86.6 = getelementptr inbounds %struct.ImageParameters, ptr %109, i64 0, i32 127
  %111 = load i32, ptr %model_number86.6, align 8, !tbaa !31
  %idxprom87.6 = sext i32 %111 to i64
  %arrayidx92.6 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.6, i64 0, i64 6
  %arrayidx106.6 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.6, i64 0, i64 6
  %arrayidx92.6.sink = select i1 %cmp80.6, ptr %arrayidx92.6, ptr %arrayidx106.6
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.6, ptr noundef nonnull %arrayidx92.6.sink) #14
  %112 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.7 = getelementptr inbounds %struct.ImageParameters, ptr %112, i64 0, i32 5
  %113 = load i32, ptr %type79.7, align 4, !tbaa !25
  %cmp80.7 = icmp eq i32 %113, 2
  %arrayidx85.7 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 0, i64 7
  %model_number86.7 = getelementptr inbounds %struct.ImageParameters, ptr %112, i64 0, i32 127
  %114 = load i32, ptr %model_number86.7, align 8, !tbaa !31
  %idxprom87.7 = sext i32 %114 to i64
  %arrayidx92.7 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.7, i64 0, i64 7
  %arrayidx106.7 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.7, i64 0, i64 7
  %arrayidx92.7.sink = select i1 %cmp80.7, ptr %arrayidx92.7, ptr %arrayidx106.7
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.7, ptr noundef nonnull %arrayidx92.7.sink) #14
  %115 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.8 = getelementptr inbounds %struct.ImageParameters, ptr %115, i64 0, i32 5
  %116 = load i32, ptr %type79.8, align 4, !tbaa !25
  %cmp80.8 = icmp eq i32 %116, 2
  %arrayidx85.8 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 0, i64 8
  %model_number86.8 = getelementptr inbounds %struct.ImageParameters, ptr %115, i64 0, i32 127
  %117 = load i32, ptr %model_number86.8, align 8, !tbaa !31
  %idxprom87.8 = sext i32 %117 to i64
  %arrayidx92.8 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.8, i64 0, i64 8
  %arrayidx106.8 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.8, i64 0, i64 8
  %arrayidx92.8.sink = select i1 %cmp80.8, ptr %arrayidx92.8, ptr %arrayidx106.8
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.8, ptr noundef nonnull %arrayidx92.8.sink) #14
  %118 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.9 = getelementptr inbounds %struct.ImageParameters, ptr %118, i64 0, i32 5
  %119 = load i32, ptr %type79.9, align 4, !tbaa !25
  %cmp80.9 = icmp eq i32 %119, 2
  %arrayidx85.9 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 0, i64 9
  %model_number86.9 = getelementptr inbounds %struct.ImageParameters, ptr %118, i64 0, i32 127
  %120 = load i32, ptr %model_number86.9, align 8, !tbaa !31
  %idxprom87.9 = sext i32 %120 to i64
  %arrayidx92.9 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.9, i64 0, i64 9
  %arrayidx106.9 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.9, i64 0, i64 9
  %arrayidx92.9.sink = select i1 %cmp80.9, ptr %arrayidx92.9, ptr %arrayidx106.9
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.9, ptr noundef nonnull %arrayidx92.9.sink) #14
  %121 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.11028 = getelementptr inbounds %struct.ImageParameters, ptr %121, i64 0, i32 5
  %122 = load i32, ptr %type79.11028, align 4, !tbaa !25
  %cmp80.11029 = icmp eq i32 %122, 2
  %arrayidx85.11030 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 1, i64 0
  %model_number86.11031 = getelementptr inbounds %struct.ImageParameters, ptr %121, i64 0, i32 127
  %123 = load i32, ptr %model_number86.11031, align 8, !tbaa !31
  %idxprom87.11032 = sext i32 %123 to i64
  %arrayidx92.11033 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.11032, i64 1, i64 0
  %arrayidx106.11034 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.11032, i64 1, i64 0
  %arrayidx92.sink.1 = select i1 %cmp80.11029, ptr %arrayidx92.11033, ptr %arrayidx106.11034
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.11030, ptr noundef nonnull %arrayidx92.sink.1) #14
  %124 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.1.1 = getelementptr inbounds %struct.ImageParameters, ptr %124, i64 0, i32 5
  %125 = load i32, ptr %type79.1.1, align 4, !tbaa !25
  %cmp80.1.1 = icmp eq i32 %125, 2
  %arrayidx85.1.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 1, i64 1
  %model_number86.1.1 = getelementptr inbounds %struct.ImageParameters, ptr %124, i64 0, i32 127
  %126 = load i32, ptr %model_number86.1.1, align 8, !tbaa !31
  %idxprom87.1.1 = sext i32 %126 to i64
  %arrayidx92.1.1 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.1.1, i64 1, i64 1
  %arrayidx106.1.1 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.1.1, i64 1, i64 1
  %arrayidx92.1.sink.1 = select i1 %cmp80.1.1, ptr %arrayidx92.1.1, ptr %arrayidx106.1.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.1.1, ptr noundef nonnull %arrayidx92.1.sink.1) #14
  %127 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.2.1 = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 5
  %128 = load i32, ptr %type79.2.1, align 4, !tbaa !25
  %cmp80.2.1 = icmp eq i32 %128, 2
  %arrayidx85.2.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 1, i64 2
  %model_number86.2.1 = getelementptr inbounds %struct.ImageParameters, ptr %127, i64 0, i32 127
  %129 = load i32, ptr %model_number86.2.1, align 8, !tbaa !31
  %idxprom87.2.1 = sext i32 %129 to i64
  %arrayidx92.2.1 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.2.1, i64 1, i64 2
  %arrayidx106.2.1 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.2.1, i64 1, i64 2
  %arrayidx92.2.sink.1 = select i1 %cmp80.2.1, ptr %arrayidx92.2.1, ptr %arrayidx106.2.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.2.1, ptr noundef nonnull %arrayidx92.2.sink.1) #14
  %130 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.3.1 = getelementptr inbounds %struct.ImageParameters, ptr %130, i64 0, i32 5
  %131 = load i32, ptr %type79.3.1, align 4, !tbaa !25
  %cmp80.3.1 = icmp eq i32 %131, 2
  %arrayidx85.3.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 1, i64 3
  %model_number86.3.1 = getelementptr inbounds %struct.ImageParameters, ptr %130, i64 0, i32 127
  %132 = load i32, ptr %model_number86.3.1, align 8, !tbaa !31
  %idxprom87.3.1 = sext i32 %132 to i64
  %arrayidx92.3.1 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.3.1, i64 1, i64 3
  %arrayidx106.3.1 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.3.1, i64 1, i64 3
  %arrayidx92.3.sink.1 = select i1 %cmp80.3.1, ptr %arrayidx92.3.1, ptr %arrayidx106.3.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.3.1, ptr noundef nonnull %arrayidx92.3.sink.1) #14
  %133 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.4.1 = getelementptr inbounds %struct.ImageParameters, ptr %133, i64 0, i32 5
  %134 = load i32, ptr %type79.4.1, align 4, !tbaa !25
  %cmp80.4.1 = icmp eq i32 %134, 2
  %arrayidx85.4.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 1, i64 4
  %model_number86.4.1 = getelementptr inbounds %struct.ImageParameters, ptr %133, i64 0, i32 127
  %135 = load i32, ptr %model_number86.4.1, align 8, !tbaa !31
  %idxprom87.4.1 = sext i32 %135 to i64
  %arrayidx92.4.1 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.4.1, i64 1, i64 4
  %arrayidx106.4.1 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.4.1, i64 1, i64 4
  %arrayidx92.4.sink.1 = select i1 %cmp80.4.1, ptr %arrayidx92.4.1, ptr %arrayidx106.4.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.4.1, ptr noundef nonnull %arrayidx92.4.sink.1) #14
  %136 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.5.1 = getelementptr inbounds %struct.ImageParameters, ptr %136, i64 0, i32 5
  %137 = load i32, ptr %type79.5.1, align 4, !tbaa !25
  %cmp80.5.1 = icmp eq i32 %137, 2
  %arrayidx85.5.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 1, i64 5
  %model_number86.5.1 = getelementptr inbounds %struct.ImageParameters, ptr %136, i64 0, i32 127
  %138 = load i32, ptr %model_number86.5.1, align 8, !tbaa !31
  %idxprom87.5.1 = sext i32 %138 to i64
  %arrayidx92.5.1 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.5.1, i64 1, i64 5
  %arrayidx106.5.1 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.5.1, i64 1, i64 5
  %arrayidx92.5.sink.1 = select i1 %cmp80.5.1, ptr %arrayidx92.5.1, ptr %arrayidx106.5.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.5.1, ptr noundef nonnull %arrayidx92.5.sink.1) #14
  %139 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.6.1 = getelementptr inbounds %struct.ImageParameters, ptr %139, i64 0, i32 5
  %140 = load i32, ptr %type79.6.1, align 4, !tbaa !25
  %cmp80.6.1 = icmp eq i32 %140, 2
  %arrayidx85.6.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 1, i64 6
  %model_number86.6.1 = getelementptr inbounds %struct.ImageParameters, ptr %139, i64 0, i32 127
  %141 = load i32, ptr %model_number86.6.1, align 8, !tbaa !31
  %idxprom87.6.1 = sext i32 %141 to i64
  %arrayidx92.6.1 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.6.1, i64 1, i64 6
  %arrayidx106.6.1 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.6.1, i64 1, i64 6
  %arrayidx92.6.sink.1 = select i1 %cmp80.6.1, ptr %arrayidx92.6.1, ptr %arrayidx106.6.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.6.1, ptr noundef nonnull %arrayidx92.6.sink.1) #14
  %142 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.7.1 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 5
  %143 = load i32, ptr %type79.7.1, align 4, !tbaa !25
  %cmp80.7.1 = icmp eq i32 %143, 2
  %arrayidx85.7.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 1, i64 7
  %model_number86.7.1 = getelementptr inbounds %struct.ImageParameters, ptr %142, i64 0, i32 127
  %144 = load i32, ptr %model_number86.7.1, align 8, !tbaa !31
  %idxprom87.7.1 = sext i32 %144 to i64
  %arrayidx92.7.1 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.7.1, i64 1, i64 7
  %arrayidx106.7.1 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.7.1, i64 1, i64 7
  %arrayidx92.7.sink.1 = select i1 %cmp80.7.1, ptr %arrayidx92.7.1, ptr %arrayidx106.7.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.7.1, ptr noundef nonnull %arrayidx92.7.sink.1) #14
  %145 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.8.1 = getelementptr inbounds %struct.ImageParameters, ptr %145, i64 0, i32 5
  %146 = load i32, ptr %type79.8.1, align 4, !tbaa !25
  %cmp80.8.1 = icmp eq i32 %146, 2
  %arrayidx85.8.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 1, i64 8
  %model_number86.8.1 = getelementptr inbounds %struct.ImageParameters, ptr %145, i64 0, i32 127
  %147 = load i32, ptr %model_number86.8.1, align 8, !tbaa !31
  %idxprom87.8.1 = sext i32 %147 to i64
  %arrayidx92.8.1 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.8.1, i64 1, i64 8
  %arrayidx106.8.1 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.8.1, i64 1, i64 8
  %arrayidx92.8.sink.1 = select i1 %cmp80.8.1, ptr %arrayidx92.8.1, ptr %arrayidx106.8.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.8.1, ptr noundef nonnull %arrayidx92.8.sink.1) #14
  %148 = load ptr, ptr @img, align 8, !tbaa !5
  %type79.9.1 = getelementptr inbounds %struct.ImageParameters, ptr %148, i64 0, i32 5
  %149 = load i32, ptr %type79.9.1, align 4, !tbaa !25
  %cmp80.9.1 = icmp eq i32 %149, 2
  %arrayidx85.9.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 2, i64 1, i64 9
  %model_number86.9.1 = getelementptr inbounds %struct.ImageParameters, ptr %148, i64 0, i32 127
  %150 = load i32, ptr %model_number86.9.1, align 8, !tbaa !31
  %idxprom87.9.1 = sext i32 %150 to i64
  %arrayidx92.9.1 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 %idxprom87.9.1, i64 1, i64 9
  %arrayidx106.9.1 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %idxprom87.9.1, i64 1, i64 9
  %arrayidx92.9.sink.1 = select i1 %cmp80.9.1, ptr %arrayidx92.9.1, ptr %arrayidx106.9.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx85.9.1, ptr noundef nonnull %arrayidx92.9.sink.1) #14
  %151 = load ptr, ptr @img, align 8, !tbaa !5
  %type121 = getelementptr inbounds %struct.ImageParameters, ptr %151, i64 0, i32 5
  %152 = load i32, ptr %type121, align 4, !tbaa !25
  %cmp122 = icmp eq i32 %152, 2
  %arrayidx127 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 3, i64 0, i64 0
  %model_number128 = getelementptr inbounds %struct.ImageParameters, ptr %151, i64 0, i32 127
  %153 = load i32, ptr %model_number128, align 8, !tbaa !31
  %idxprom129 = sext i32 %153 to i64
  %arrayidx134 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 %idxprom129, i64 0, i64 0
  %arrayidx148 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %idxprom129, i64 0, i64 0
  %arrayidx134.sink = select i1 %cmp122, ptr %arrayidx134, ptr %arrayidx148
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx127, ptr noundef nonnull %arrayidx134.sink) #14
  %154 = load ptr, ptr @img, align 8, !tbaa !5
  %type121.1 = getelementptr inbounds %struct.ImageParameters, ptr %154, i64 0, i32 5
  %155 = load i32, ptr %type121.1, align 4, !tbaa !25
  %cmp122.1 = icmp eq i32 %155, 2
  %arrayidx127.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 3, i64 0, i64 1
  %model_number128.1 = getelementptr inbounds %struct.ImageParameters, ptr %154, i64 0, i32 127
  %156 = load i32, ptr %model_number128.1, align 8, !tbaa !31
  %idxprom129.1 = sext i32 %156 to i64
  %arrayidx134.1 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 %idxprom129.1, i64 0, i64 1
  %arrayidx148.1 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %idxprom129.1, i64 0, i64 1
  %arrayidx134.1.sink = select i1 %cmp122.1, ptr %arrayidx134.1, ptr %arrayidx148.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx127.1, ptr noundef nonnull %arrayidx134.1.sink) #14
  %157 = load ptr, ptr @img, align 8, !tbaa !5
  %type121.2 = getelementptr inbounds %struct.ImageParameters, ptr %157, i64 0, i32 5
  %158 = load i32, ptr %type121.2, align 4, !tbaa !25
  %cmp122.2 = icmp eq i32 %158, 2
  %arrayidx127.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 3, i64 0, i64 2
  %model_number128.2 = getelementptr inbounds %struct.ImageParameters, ptr %157, i64 0, i32 127
  %159 = load i32, ptr %model_number128.2, align 8, !tbaa !31
  %idxprom129.2 = sext i32 %159 to i64
  %arrayidx134.2 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 %idxprom129.2, i64 0, i64 2
  %arrayidx148.2 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %idxprom129.2, i64 0, i64 2
  %arrayidx134.2.sink = select i1 %cmp122.2, ptr %arrayidx134.2, ptr %arrayidx148.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx127.2, ptr noundef nonnull %arrayidx134.2.sink) #14
  %160 = load ptr, ptr @img, align 8, !tbaa !5
  %type121.3 = getelementptr inbounds %struct.ImageParameters, ptr %160, i64 0, i32 5
  %161 = load i32, ptr %type121.3, align 4, !tbaa !25
  %cmp122.3 = icmp eq i32 %161, 2
  %arrayidx127.3 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 3, i64 0, i64 3
  %model_number128.3 = getelementptr inbounds %struct.ImageParameters, ptr %160, i64 0, i32 127
  %162 = load i32, ptr %model_number128.3, align 8, !tbaa !31
  %idxprom129.3 = sext i32 %162 to i64
  %arrayidx134.3 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 %idxprom129.3, i64 0, i64 3
  %arrayidx148.3 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %idxprom129.3, i64 0, i64 3
  %arrayidx134.3.sink = select i1 %cmp122.3, ptr %arrayidx134.3, ptr %arrayidx148.3
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx127.3, ptr noundef nonnull %arrayidx134.3.sink) #14
  %163 = load ptr, ptr @img, align 8, !tbaa !5
  %type121.4 = getelementptr inbounds %struct.ImageParameters, ptr %163, i64 0, i32 5
  %164 = load i32, ptr %type121.4, align 4, !tbaa !25
  %cmp122.4 = icmp eq i32 %164, 2
  %arrayidx127.4 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 3, i64 0, i64 4
  %model_number128.4 = getelementptr inbounds %struct.ImageParameters, ptr %163, i64 0, i32 127
  %165 = load i32, ptr %model_number128.4, align 8, !tbaa !31
  %idxprom129.4 = sext i32 %165 to i64
  %arrayidx134.4 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 %idxprom129.4, i64 0, i64 4
  %arrayidx148.4 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %idxprom129.4, i64 0, i64 4
  %arrayidx134.4.sink = select i1 %cmp122.4, ptr %arrayidx134.4, ptr %arrayidx148.4
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx127.4, ptr noundef nonnull %arrayidx134.4.sink) #14
  %166 = load ptr, ptr @img, align 8, !tbaa !5
  %type121.5 = getelementptr inbounds %struct.ImageParameters, ptr %166, i64 0, i32 5
  %167 = load i32, ptr %type121.5, align 4, !tbaa !25
  %cmp122.5 = icmp eq i32 %167, 2
  %arrayidx127.5 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 3, i64 0, i64 5
  %model_number128.5 = getelementptr inbounds %struct.ImageParameters, ptr %166, i64 0, i32 127
  %168 = load i32, ptr %model_number128.5, align 8, !tbaa !31
  %idxprom129.5 = sext i32 %168 to i64
  %arrayidx134.5 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 %idxprom129.5, i64 0, i64 5
  %arrayidx148.5 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %idxprom129.5, i64 0, i64 5
  %arrayidx134.5.sink = select i1 %cmp122.5, ptr %arrayidx134.5, ptr %arrayidx148.5
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx127.5, ptr noundef nonnull %arrayidx134.5.sink) #14
  %169 = load ptr, ptr @img, align 8, !tbaa !5
  %type121.1899 = getelementptr inbounds %struct.ImageParameters, ptr %169, i64 0, i32 5
  %170 = load i32, ptr %type121.1899, align 4, !tbaa !25
  %cmp122.1900 = icmp eq i32 %170, 2
  %arrayidx127.1906 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 3, i64 1, i64 0
  %model_number128.1907 = getelementptr inbounds %struct.ImageParameters, ptr %169, i64 0, i32 127
  %171 = load i32, ptr %model_number128.1907, align 8, !tbaa !31
  %idxprom129.1908 = sext i32 %171 to i64
  %arrayidx134.1909 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 %idxprom129.1908, i64 1, i64 0
  %arrayidx148.1904 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %idxprom129.1908, i64 1, i64 0
  %arrayidx134.1909.sink = select i1 %cmp122.1900, ptr %arrayidx134.1909, ptr %arrayidx148.1904
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx127.1906, ptr noundef nonnull %arrayidx134.1909.sink) #14
  %172 = load ptr, ptr @img, align 8, !tbaa !5
  %type121.1.1 = getelementptr inbounds %struct.ImageParameters, ptr %172, i64 0, i32 5
  %173 = load i32, ptr %type121.1.1, align 4, !tbaa !25
  %cmp122.1.1 = icmp eq i32 %173, 2
  %arrayidx127.1.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 3, i64 1, i64 1
  %model_number128.1.1 = getelementptr inbounds %struct.ImageParameters, ptr %172, i64 0, i32 127
  %174 = load i32, ptr %model_number128.1.1, align 8, !tbaa !31
  %idxprom129.1.1 = sext i32 %174 to i64
  %arrayidx134.1.1 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 %idxprom129.1.1, i64 1, i64 1
  %arrayidx148.1.1 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %idxprom129.1.1, i64 1, i64 1
  %arrayidx134.1.1.sink = select i1 %cmp122.1.1, ptr %arrayidx134.1.1, ptr %arrayidx148.1.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx127.1.1, ptr noundef nonnull %arrayidx134.1.1.sink) #14
  %175 = load ptr, ptr @img, align 8, !tbaa !5
  %type121.2.1 = getelementptr inbounds %struct.ImageParameters, ptr %175, i64 0, i32 5
  %176 = load i32, ptr %type121.2.1, align 4, !tbaa !25
  %cmp122.2.1 = icmp eq i32 %176, 2
  %arrayidx127.2.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 3, i64 1, i64 2
  %model_number128.2.1 = getelementptr inbounds %struct.ImageParameters, ptr %175, i64 0, i32 127
  %177 = load i32, ptr %model_number128.2.1, align 8, !tbaa !31
  %idxprom129.2.1 = sext i32 %177 to i64
  %arrayidx134.2.1 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 %idxprom129.2.1, i64 1, i64 2
  %arrayidx148.2.1 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %idxprom129.2.1, i64 1, i64 2
  %arrayidx134.2.1.sink = select i1 %cmp122.2.1, ptr %arrayidx134.2.1, ptr %arrayidx148.2.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx127.2.1, ptr noundef nonnull %arrayidx134.2.1.sink) #14
  %178 = load ptr, ptr @img, align 8, !tbaa !5
  %type121.3.1 = getelementptr inbounds %struct.ImageParameters, ptr %178, i64 0, i32 5
  %179 = load i32, ptr %type121.3.1, align 4, !tbaa !25
  %cmp122.3.1 = icmp eq i32 %179, 2
  %arrayidx127.3.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 3, i64 1, i64 3
  %model_number128.3.1 = getelementptr inbounds %struct.ImageParameters, ptr %178, i64 0, i32 127
  %180 = load i32, ptr %model_number128.3.1, align 8, !tbaa !31
  %idxprom129.3.1 = sext i32 %180 to i64
  %arrayidx134.3.1 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 %idxprom129.3.1, i64 1, i64 3
  %arrayidx148.3.1 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %idxprom129.3.1, i64 1, i64 3
  %arrayidx134.3.1.sink = select i1 %cmp122.3.1, ptr %arrayidx134.3.1, ptr %arrayidx148.3.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx127.3.1, ptr noundef nonnull %arrayidx134.3.1.sink) #14
  %181 = load ptr, ptr @img, align 8, !tbaa !5
  %type121.4.1 = getelementptr inbounds %struct.ImageParameters, ptr %181, i64 0, i32 5
  %182 = load i32, ptr %type121.4.1, align 4, !tbaa !25
  %cmp122.4.1 = icmp eq i32 %182, 2
  %arrayidx127.4.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 3, i64 1, i64 4
  %model_number128.4.1 = getelementptr inbounds %struct.ImageParameters, ptr %181, i64 0, i32 127
  %183 = load i32, ptr %model_number128.4.1, align 8, !tbaa !31
  %idxprom129.4.1 = sext i32 %183 to i64
  %arrayidx134.4.1 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 %idxprom129.4.1, i64 1, i64 4
  %arrayidx148.4.1 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %idxprom129.4.1, i64 1, i64 4
  %arrayidx134.4.1.sink = select i1 %cmp122.4.1, ptr %arrayidx134.4.1, ptr %arrayidx148.4.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx127.4.1, ptr noundef nonnull %arrayidx134.4.1.sink) #14
  %184 = load ptr, ptr @img, align 8, !tbaa !5
  %type121.5.1 = getelementptr inbounds %struct.ImageParameters, ptr %184, i64 0, i32 5
  %185 = load i32, ptr %type121.5.1, align 4, !tbaa !25
  %cmp122.5.1 = icmp eq i32 %185, 2
  %arrayidx127.5.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 3, i64 1, i64 5
  %model_number128.5.1 = getelementptr inbounds %struct.ImageParameters, ptr %184, i64 0, i32 127
  %186 = load i32, ptr %model_number128.5.1, align 8, !tbaa !31
  %idxprom129.5.1 = sext i32 %186 to i64
  %arrayidx134.5.1 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 %idxprom129.5.1, i64 1, i64 5
  %arrayidx148.5.1 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %idxprom129.5.1, i64 1, i64 5
  %arrayidx134.5.1.sink = select i1 %cmp122.5.1, ptr %arrayidx134.5.1, ptr %arrayidx148.5.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx127.5.1, ptr noundef nonnull %arrayidx134.5.1.sink) #14
  %187 = load ptr, ptr @img, align 8, !tbaa !5
  %type160 = getelementptr inbounds %struct.ImageParameters, ptr %187, i64 0, i32 5
  %188 = load i32, ptr %type160, align 4, !tbaa !25
  %cmp161 = icmp eq i32 %188, 2
  %arrayidx164 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 4, i64 0
  %model_number165 = getelementptr inbounds %struct.ImageParameters, ptr %187, i64 0, i32 127
  %189 = load i32, ptr %model_number165, align 8, !tbaa !31
  %idxprom166 = sext i32 %189 to i64
  %arrayidx167 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], ptr @INIT_DELTA_QP_I, i64 0, i64 %idxprom166
  %arrayidx178 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], ptr @INIT_DELTA_QP_P, i64 0, i64 %idxprom166
  %arrayidx167.sink = select i1 %cmp161, ptr %arrayidx167, ptr %arrayidx178
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx164, ptr noundef nonnull %arrayidx167.sink) #14
  %190 = load ptr, ptr @img, align 8, !tbaa !5
  %type160.1 = getelementptr inbounds %struct.ImageParameters, ptr %190, i64 0, i32 5
  %191 = load i32, ptr %type160.1, align 4, !tbaa !25
  %cmp161.1 = icmp eq i32 %191, 2
  %arrayidx164.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 4, i64 1
  %model_number165.1 = getelementptr inbounds %struct.ImageParameters, ptr %190, i64 0, i32 127
  %192 = load i32, ptr %model_number165.1, align 8, !tbaa !31
  %idxprom166.1 = sext i32 %192 to i64
  %arrayidx170.1 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], ptr @INIT_DELTA_QP_I, i64 0, i64 %idxprom166.1, i64 0, i64 1
  %arrayidx181.1 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], ptr @INIT_DELTA_QP_P, i64 0, i64 %idxprom166.1, i64 0, i64 1
  %arrayidx170.1.sink = select i1 %cmp161.1, ptr %arrayidx170.1, ptr %arrayidx181.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx164.1, ptr noundef nonnull %arrayidx170.1.sink) #14
  %193 = load ptr, ptr @img, align 8, !tbaa !5
  %type160.2 = getelementptr inbounds %struct.ImageParameters, ptr %193, i64 0, i32 5
  %194 = load i32, ptr %type160.2, align 4, !tbaa !25
  %cmp161.2 = icmp eq i32 %194, 2
  %arrayidx164.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 4, i64 2
  %model_number165.2 = getelementptr inbounds %struct.ImageParameters, ptr %193, i64 0, i32 127
  %195 = load i32, ptr %model_number165.2, align 8, !tbaa !31
  %idxprom166.2 = sext i32 %195 to i64
  %arrayidx170.2 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], ptr @INIT_DELTA_QP_I, i64 0, i64 %idxprom166.2, i64 0, i64 2
  %arrayidx181.2 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], ptr @INIT_DELTA_QP_P, i64 0, i64 %idxprom166.2, i64 0, i64 2
  %arrayidx170.2.sink = select i1 %cmp161.2, ptr %arrayidx170.2, ptr %arrayidx181.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx164.2, ptr noundef nonnull %arrayidx170.2.sink) #14
  %196 = load ptr, ptr @img, align 8, !tbaa !5
  %type160.3 = getelementptr inbounds %struct.ImageParameters, ptr %196, i64 0, i32 5
  %197 = load i32, ptr %type160.3, align 4, !tbaa !25
  %cmp161.3 = icmp eq i32 %197, 2
  %arrayidx164.3 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 4, i64 3
  %model_number165.3 = getelementptr inbounds %struct.ImageParameters, ptr %196, i64 0, i32 127
  %198 = load i32, ptr %model_number165.3, align 8, !tbaa !31
  %idxprom166.3 = sext i32 %198 to i64
  %arrayidx170.3 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], ptr @INIT_DELTA_QP_I, i64 0, i64 %idxprom166.3, i64 0, i64 3
  %arrayidx181.3 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], ptr @INIT_DELTA_QP_P, i64 0, i64 %idxprom166.3, i64 0, i64 3
  %arrayidx170.3.sink = select i1 %cmp161.3, ptr %arrayidx170.3, ptr %arrayidx181.3
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx164.3, ptr noundef nonnull %arrayidx170.3.sink) #14
  %199 = load ptr, ptr @img, align 8, !tbaa !5
  %type190 = getelementptr inbounds %struct.ImageParameters, ptr %199, i64 0, i32 5
  %200 = load i32, ptr %type190, align 4, !tbaa !25
  %cmp191 = icmp eq i32 %200, 2
  %arrayidx194 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 5, i64 0
  %model_number195 = getelementptr inbounds %struct.ImageParameters, ptr %199, i64 0, i32 127
  %201 = load i32, ptr %model_number195, align 8, !tbaa !31
  %idxprom196 = sext i32 %201 to i64
  %arrayidx197 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], ptr @INIT_MB_AFF_I, i64 0, i64 %idxprom196
  %arrayidx208 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], ptr @INIT_MB_AFF_P, i64 0, i64 %idxprom196
  %arrayidx197.sink = select i1 %cmp191, ptr %arrayidx197, ptr %arrayidx208
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx194, ptr noundef nonnull %arrayidx197.sink) #14
  %202 = load ptr, ptr @img, align 8, !tbaa !5
  %type190.1 = getelementptr inbounds %struct.ImageParameters, ptr %202, i64 0, i32 5
  %203 = load i32, ptr %type190.1, align 4, !tbaa !25
  %cmp191.1 = icmp eq i32 %203, 2
  %arrayidx194.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 5, i64 1
  %model_number195.1 = getelementptr inbounds %struct.ImageParameters, ptr %202, i64 0, i32 127
  %204 = load i32, ptr %model_number195.1, align 8, !tbaa !31
  %idxprom196.1 = sext i32 %204 to i64
  %arrayidx200.1 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], ptr @INIT_MB_AFF_I, i64 0, i64 %idxprom196.1, i64 0, i64 1
  %arrayidx211.1 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], ptr @INIT_MB_AFF_P, i64 0, i64 %idxprom196.1, i64 0, i64 1
  %arrayidx200.1.sink = select i1 %cmp191.1, ptr %arrayidx200.1, ptr %arrayidx211.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx194.1, ptr noundef nonnull %arrayidx200.1.sink) #14
  %205 = load ptr, ptr @img, align 8, !tbaa !5
  %type190.2 = getelementptr inbounds %struct.ImageParameters, ptr %205, i64 0, i32 5
  %206 = load i32, ptr %type190.2, align 4, !tbaa !25
  %cmp191.2 = icmp eq i32 %206, 2
  %arrayidx194.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 5, i64 2
  %model_number195.2 = getelementptr inbounds %struct.ImageParameters, ptr %205, i64 0, i32 127
  %207 = load i32, ptr %model_number195.2, align 8, !tbaa !31
  %idxprom196.2 = sext i32 %207 to i64
  %arrayidx200.2 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], ptr @INIT_MB_AFF_I, i64 0, i64 %idxprom196.2, i64 0, i64 2
  %arrayidx211.2 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], ptr @INIT_MB_AFF_P, i64 0, i64 %idxprom196.2, i64 0, i64 2
  %arrayidx200.2.sink = select i1 %cmp191.2, ptr %arrayidx200.2, ptr %arrayidx211.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx194.2, ptr noundef nonnull %arrayidx200.2.sink) #14
  %208 = load ptr, ptr @img, align 8, !tbaa !5
  %type190.3 = getelementptr inbounds %struct.ImageParameters, ptr %208, i64 0, i32 5
  %209 = load i32, ptr %type190.3, align 4, !tbaa !25
  %cmp191.3 = icmp eq i32 %209, 2
  %arrayidx194.3 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 5, i64 3
  %model_number195.3 = getelementptr inbounds %struct.ImageParameters, ptr %208, i64 0, i32 127
  %210 = load i32, ptr %model_number195.3, align 8, !tbaa !31
  %idxprom196.3 = sext i32 %210 to i64
  %arrayidx200.3 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], ptr @INIT_MB_AFF_I, i64 0, i64 %idxprom196.3, i64 0, i64 3
  %arrayidx211.3 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], ptr @INIT_MB_AFF_P, i64 0, i64 %idxprom196.3, i64 0, i64 3
  %arrayidx200.3.sink = select i1 %cmp191.3, ptr %arrayidx200.3, ptr %arrayidx211.3
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx194.3, ptr noundef nonnull %arrayidx200.3.sink) #14
  %211 = load ptr, ptr @img, align 8, !tbaa !5
  %type220 = getelementptr inbounds %struct.ImageParameters, ptr %211, i64 0, i32 5
  %212 = load i32, ptr %type220, align 4, !tbaa !25
  %cmp221 = icmp eq i32 %212, 2
  %arrayidx224 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 6, i64 0
  %model_number225 = getelementptr inbounds %struct.ImageParameters, ptr %211, i64 0, i32 127
  %213 = load i32, ptr %model_number225, align 8, !tbaa !31
  %idxprom226 = sext i32 %213 to i64
  %arrayidx227 = getelementptr inbounds [1 x [1 x [3 x [2 x i32]]]], ptr @INIT_TRANSFORM_SIZE_I, i64 0, i64 %idxprom226
  %arrayidx238 = getelementptr inbounds [3 x [1 x [3 x [2 x i32]]]], ptr @INIT_TRANSFORM_SIZE_P, i64 0, i64 %idxprom226
  %arrayidx227.sink = select i1 %cmp221, ptr %arrayidx227, ptr %arrayidx238
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx224, ptr noundef nonnull %arrayidx227.sink) #14
  %214 = load ptr, ptr @img, align 8, !tbaa !5
  %type220.1 = getelementptr inbounds %struct.ImageParameters, ptr %214, i64 0, i32 5
  %215 = load i32, ptr %type220.1, align 4, !tbaa !25
  %cmp221.1 = icmp eq i32 %215, 2
  %arrayidx224.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 6, i64 1
  %model_number225.1 = getelementptr inbounds %struct.ImageParameters, ptr %214, i64 0, i32 127
  %216 = load i32, ptr %model_number225.1, align 8, !tbaa !31
  %idxprom226.1 = sext i32 %216 to i64
  %arrayidx230.1 = getelementptr inbounds [1 x [1 x [3 x [2 x i32]]]], ptr @INIT_TRANSFORM_SIZE_I, i64 0, i64 %idxprom226.1, i64 0, i64 1
  %arrayidx241.1 = getelementptr inbounds [3 x [1 x [3 x [2 x i32]]]], ptr @INIT_TRANSFORM_SIZE_P, i64 0, i64 %idxprom226.1, i64 0, i64 1
  %arrayidx230.1.sink = select i1 %cmp221.1, ptr %arrayidx230.1, ptr %arrayidx241.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx224.1, ptr noundef nonnull %arrayidx230.1.sink) #14
  %217 = load ptr, ptr @img, align 8, !tbaa !5
  %type220.2 = getelementptr inbounds %struct.ImageParameters, ptr %217, i64 0, i32 5
  %218 = load i32, ptr %type220.2, align 4, !tbaa !25
  %cmp221.2 = icmp eq i32 %218, 2
  %arrayidx224.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %2, i64 0, i32 6, i64 2
  %model_number225.2 = getelementptr inbounds %struct.ImageParameters, ptr %217, i64 0, i32 127
  %219 = load i32, ptr %model_number225.2, align 8, !tbaa !31
  %idxprom226.2 = sext i32 %219 to i64
  %arrayidx230.2 = getelementptr inbounds [1 x [1 x [3 x [2 x i32]]]], ptr @INIT_TRANSFORM_SIZE_I, i64 0, i64 %idxprom226.2, i64 0, i64 2
  %arrayidx241.2 = getelementptr inbounds [3 x [1 x [3 x [2 x i32]]]], ptr @INIT_TRANSFORM_SIZE_P, i64 0, i64 %idxprom226.2, i64 0, i64 2
  %arrayidx230.2.sink = select i1 %cmp221.2, ptr %arrayidx230.2, ptr %arrayidx241.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx224.2, ptr noundef nonnull %arrayidx230.2.sink) #14
  %220 = load ptr, ptr @img, align 8, !tbaa !5
  %type250 = getelementptr inbounds %struct.ImageParameters, ptr %220, i64 0, i32 5
  %221 = load i32, ptr %type250, align 4, !tbaa !25
  %cmp251 = icmp eq i32 %221, 2
  %model_number255 = getelementptr inbounds %struct.ImageParameters, ptr %220, i64 0, i32 127
  %222 = load i32, ptr %model_number255, align 8, !tbaa !31
  %idxprom256 = sext i32 %222 to i64
  %arrayidx257 = getelementptr inbounds [1 x [1 x [2 x [2 x i32]]]], ptr @INIT_IPR_I, i64 0, i64 %idxprom256
  %arrayidx268 = getelementptr inbounds [3 x [1 x [2 x [2 x i32]]]], ptr @INIT_IPR_P, i64 0, i64 %idxprom256
  %arrayidx257.sink = select i1 %cmp251, ptr %arrayidx257, ptr %arrayidx268
  tail call void @biari_init_context(ptr noundef %3, ptr noundef nonnull %arrayidx257.sink) #14
  %223 = load ptr, ptr @img, align 8, !tbaa !5
  %type250.1 = getelementptr inbounds %struct.ImageParameters, ptr %223, i64 0, i32 5
  %224 = load i32, ptr %type250.1, align 4, !tbaa !25
  %cmp251.1 = icmp eq i32 %224, 2
  %arrayidx254.1 = getelementptr inbounds [2 x %struct.BiContextType], ptr %3, i64 0, i64 1
  %model_number255.1 = getelementptr inbounds %struct.ImageParameters, ptr %223, i64 0, i32 127
  %225 = load i32, ptr %model_number255.1, align 8, !tbaa !31
  %idxprom256.1 = sext i32 %225 to i64
  %arrayidx260.1 = getelementptr inbounds [1 x [1 x [2 x [2 x i32]]]], ptr @INIT_IPR_I, i64 0, i64 %idxprom256.1, i64 0, i64 1
  %arrayidx271.1 = getelementptr inbounds [3 x [1 x [2 x [2 x i32]]]], ptr @INIT_IPR_P, i64 0, i64 %idxprom256.1, i64 0, i64 1
  %arrayidx260.1.sink = select i1 %cmp251.1, ptr %arrayidx260.1, ptr %arrayidx271.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx254.1, ptr noundef nonnull %arrayidx260.1.sink) #14
  %226 = load ptr, ptr @img, align 8, !tbaa !5
  %type280 = getelementptr inbounds %struct.ImageParameters, ptr %226, i64 0, i32 5
  %227 = load i32, ptr %type280, align 4, !tbaa !25
  %cmp281 = icmp eq i32 %227, 2
  %arrayidx284 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 1, i64 0
  %model_number285 = getelementptr inbounds %struct.ImageParameters, ptr %226, i64 0, i32 127
  %228 = load i32, ptr %model_number285, align 8, !tbaa !31
  %idxprom286 = sext i32 %228 to i64
  %arrayidx287 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], ptr @INIT_CIPR_I, i64 0, i64 %idxprom286
  %arrayidx298 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], ptr @INIT_CIPR_P, i64 0, i64 %idxprom286
  %arrayidx287.sink = select i1 %cmp281, ptr %arrayidx287, ptr %arrayidx298
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx284, ptr noundef nonnull %arrayidx287.sink) #14
  %229 = load ptr, ptr @img, align 8, !tbaa !5
  %type280.1 = getelementptr inbounds %struct.ImageParameters, ptr %229, i64 0, i32 5
  %230 = load i32, ptr %type280.1, align 4, !tbaa !25
  %cmp281.1 = icmp eq i32 %230, 2
  %arrayidx284.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 1, i64 1
  %model_number285.1 = getelementptr inbounds %struct.ImageParameters, ptr %229, i64 0, i32 127
  %231 = load i32, ptr %model_number285.1, align 8, !tbaa !31
  %idxprom286.1 = sext i32 %231 to i64
  %arrayidx290.1 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], ptr @INIT_CIPR_I, i64 0, i64 %idxprom286.1, i64 0, i64 1
  %arrayidx301.1 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], ptr @INIT_CIPR_P, i64 0, i64 %idxprom286.1, i64 0, i64 1
  %arrayidx290.1.sink = select i1 %cmp281.1, ptr %arrayidx290.1, ptr %arrayidx301.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx284.1, ptr noundef nonnull %arrayidx290.1.sink) #14
  %232 = load ptr, ptr @img, align 8, !tbaa !5
  %type280.2 = getelementptr inbounds %struct.ImageParameters, ptr %232, i64 0, i32 5
  %233 = load i32, ptr %type280.2, align 4, !tbaa !25
  %cmp281.2 = icmp eq i32 %233, 2
  %arrayidx284.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 1, i64 2
  %model_number285.2 = getelementptr inbounds %struct.ImageParameters, ptr %232, i64 0, i32 127
  %234 = load i32, ptr %model_number285.2, align 8, !tbaa !31
  %idxprom286.2 = sext i32 %234 to i64
  %arrayidx290.2 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], ptr @INIT_CIPR_I, i64 0, i64 %idxprom286.2, i64 0, i64 2
  %arrayidx301.2 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], ptr @INIT_CIPR_P, i64 0, i64 %idxprom286.2, i64 0, i64 2
  %arrayidx290.2.sink = select i1 %cmp281.2, ptr %arrayidx290.2, ptr %arrayidx301.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx284.2, ptr noundef nonnull %arrayidx290.2.sink) #14
  %235 = load ptr, ptr @img, align 8, !tbaa !5
  %type280.3 = getelementptr inbounds %struct.ImageParameters, ptr %235, i64 0, i32 5
  %236 = load i32, ptr %type280.3, align 4, !tbaa !25
  %cmp281.3 = icmp eq i32 %236, 2
  %arrayidx284.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 1, i64 3
  %model_number285.3 = getelementptr inbounds %struct.ImageParameters, ptr %235, i64 0, i32 127
  %237 = load i32, ptr %model_number285.3, align 8, !tbaa !31
  %idxprom286.3 = sext i32 %237 to i64
  %arrayidx290.3 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], ptr @INIT_CIPR_I, i64 0, i64 %idxprom286.3, i64 0, i64 3
  %arrayidx301.3 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], ptr @INIT_CIPR_P, i64 0, i64 %idxprom286.3, i64 0, i64 3
  %arrayidx290.3.sink = select i1 %cmp281.3, ptr %arrayidx290.3, ptr %arrayidx301.3
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx284.3, ptr noundef nonnull %arrayidx290.3.sink) #14
  %238 = load ptr, ptr @img, align 8, !tbaa !5
  %type313 = getelementptr inbounds %struct.ImageParameters, ptr %238, i64 0, i32 5
  %239 = load i32, ptr %type313, align 4, !tbaa !25
  %cmp314 = icmp eq i32 %239, 2
  %arrayidx319 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 2, i64 0, i64 0
  %model_number320 = getelementptr inbounds %struct.ImageParameters, ptr %238, i64 0, i32 127
  %240 = load i32, ptr %model_number320, align 8, !tbaa !31
  %idxprom321 = sext i32 %240 to i64
  %arrayidx326 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 %idxprom321, i64 0, i64 0
  %arrayidx340 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_P, i64 0, i64 %idxprom321, i64 0, i64 0
  %arrayidx326.sink = select i1 %cmp314, ptr %arrayidx326, ptr %arrayidx340
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx319, ptr noundef nonnull %arrayidx326.sink) #14
  %241 = load ptr, ptr @img, align 8, !tbaa !5
  %type313.1 = getelementptr inbounds %struct.ImageParameters, ptr %241, i64 0, i32 5
  %242 = load i32, ptr %type313.1, align 4, !tbaa !25
  %cmp314.1 = icmp eq i32 %242, 2
  %arrayidx319.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 2, i64 0, i64 1
  %model_number320.1 = getelementptr inbounds %struct.ImageParameters, ptr %241, i64 0, i32 127
  %243 = load i32, ptr %model_number320.1, align 8, !tbaa !31
  %idxprom321.1 = sext i32 %243 to i64
  %arrayidx326.1 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 %idxprom321.1, i64 0, i64 1
  %arrayidx340.1 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_P, i64 0, i64 %idxprom321.1, i64 0, i64 1
  %arrayidx326.1.sink = select i1 %cmp314.1, ptr %arrayidx326.1, ptr %arrayidx340.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx319.1, ptr noundef nonnull %arrayidx326.1.sink) #14
  %244 = load ptr, ptr @img, align 8, !tbaa !5
  %type313.2 = getelementptr inbounds %struct.ImageParameters, ptr %244, i64 0, i32 5
  %245 = load i32, ptr %type313.2, align 4, !tbaa !25
  %cmp314.2 = icmp eq i32 %245, 2
  %arrayidx319.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 2, i64 0, i64 2
  %model_number320.2 = getelementptr inbounds %struct.ImageParameters, ptr %244, i64 0, i32 127
  %246 = load i32, ptr %model_number320.2, align 8, !tbaa !31
  %idxprom321.2 = sext i32 %246 to i64
  %arrayidx326.2 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 %idxprom321.2, i64 0, i64 2
  %arrayidx340.2 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_P, i64 0, i64 %idxprom321.2, i64 0, i64 2
  %arrayidx326.2.sink = select i1 %cmp314.2, ptr %arrayidx326.2, ptr %arrayidx340.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx319.2, ptr noundef nonnull %arrayidx326.2.sink) #14
  %247 = load ptr, ptr @img, align 8, !tbaa !5
  %type313.3 = getelementptr inbounds %struct.ImageParameters, ptr %247, i64 0, i32 5
  %248 = load i32, ptr %type313.3, align 4, !tbaa !25
  %cmp314.3 = icmp eq i32 %248, 2
  %arrayidx319.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 2, i64 0, i64 3
  %model_number320.3 = getelementptr inbounds %struct.ImageParameters, ptr %247, i64 0, i32 127
  %249 = load i32, ptr %model_number320.3, align 8, !tbaa !31
  %idxprom321.3 = sext i32 %249 to i64
  %arrayidx326.3 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 %idxprom321.3, i64 0, i64 3
  %arrayidx340.3 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_P, i64 0, i64 %idxprom321.3, i64 0, i64 3
  %arrayidx326.3.sink = select i1 %cmp314.3, ptr %arrayidx326.3, ptr %arrayidx340.3
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx319.3, ptr noundef nonnull %arrayidx326.3.sink) #14
  %250 = load ptr, ptr @img, align 8, !tbaa !5
  %type313.1939 = getelementptr inbounds %struct.ImageParameters, ptr %250, i64 0, i32 5
  %251 = load i32, ptr %type313.1939, align 4, !tbaa !25
  %cmp314.1940 = icmp eq i32 %251, 2
  %arrayidx319.1946 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 2, i64 1, i64 0
  %model_number320.1947 = getelementptr inbounds %struct.ImageParameters, ptr %250, i64 0, i32 127
  %252 = load i32, ptr %model_number320.1947, align 8, !tbaa !31
  %idxprom321.1948 = sext i32 %252 to i64
  %arrayidx326.1949 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 %idxprom321.1948, i64 1, i64 0
  %arrayidx340.1944 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_P, i64 0, i64 %idxprom321.1948, i64 1, i64 0
  %arrayidx326.1949.sink = select i1 %cmp314.1940, ptr %arrayidx326.1949, ptr %arrayidx340.1944
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx319.1946, ptr noundef nonnull %arrayidx326.1949.sink) #14
  %253 = load ptr, ptr @img, align 8, !tbaa !5
  %type313.1.1 = getelementptr inbounds %struct.ImageParameters, ptr %253, i64 0, i32 5
  %254 = load i32, ptr %type313.1.1, align 4, !tbaa !25
  %cmp314.1.1 = icmp eq i32 %254, 2
  %arrayidx319.1.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 2, i64 1, i64 1
  %model_number320.1.1 = getelementptr inbounds %struct.ImageParameters, ptr %253, i64 0, i32 127
  %255 = load i32, ptr %model_number320.1.1, align 8, !tbaa !31
  %idxprom321.1.1 = sext i32 %255 to i64
  %arrayidx326.1.1 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 %idxprom321.1.1, i64 1, i64 1
  %arrayidx340.1.1 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_P, i64 0, i64 %idxprom321.1.1, i64 1, i64 1
  %arrayidx326.1.1.sink = select i1 %cmp314.1.1, ptr %arrayidx326.1.1, ptr %arrayidx340.1.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx319.1.1, ptr noundef nonnull %arrayidx326.1.1.sink) #14
  %256 = load ptr, ptr @img, align 8, !tbaa !5
  %type313.2.1 = getelementptr inbounds %struct.ImageParameters, ptr %256, i64 0, i32 5
  %257 = load i32, ptr %type313.2.1, align 4, !tbaa !25
  %cmp314.2.1 = icmp eq i32 %257, 2
  %arrayidx319.2.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 2, i64 1, i64 2
  %model_number320.2.1 = getelementptr inbounds %struct.ImageParameters, ptr %256, i64 0, i32 127
  %258 = load i32, ptr %model_number320.2.1, align 8, !tbaa !31
  %idxprom321.2.1 = sext i32 %258 to i64
  %arrayidx326.2.1 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 %idxprom321.2.1, i64 1, i64 2
  %arrayidx340.2.1 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_P, i64 0, i64 %idxprom321.2.1, i64 1, i64 2
  %arrayidx326.2.1.sink = select i1 %cmp314.2.1, ptr %arrayidx326.2.1, ptr %arrayidx340.2.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx319.2.1, ptr noundef nonnull %arrayidx326.2.1.sink) #14
  %259 = load ptr, ptr @img, align 8, !tbaa !5
  %type313.3.1 = getelementptr inbounds %struct.ImageParameters, ptr %259, i64 0, i32 5
  %260 = load i32, ptr %type313.3.1, align 4, !tbaa !25
  %cmp314.3.1 = icmp eq i32 %260, 2
  %arrayidx319.3.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 2, i64 1, i64 3
  %model_number320.3.1 = getelementptr inbounds %struct.ImageParameters, ptr %259, i64 0, i32 127
  %261 = load i32, ptr %model_number320.3.1, align 8, !tbaa !31
  %idxprom321.3.1 = sext i32 %261 to i64
  %arrayidx326.3.1 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 %idxprom321.3.1, i64 1, i64 3
  %arrayidx340.3.1 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_P, i64 0, i64 %idxprom321.3.1, i64 1, i64 3
  %arrayidx326.3.1.sink = select i1 %cmp314.3.1, ptr %arrayidx326.3.1, ptr %arrayidx340.3.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx319.3.1, ptr noundef nonnull %arrayidx326.3.1.sink) #14
  %262 = load ptr, ptr @img, align 8, !tbaa !5
  %type313.2952 = getelementptr inbounds %struct.ImageParameters, ptr %262, i64 0, i32 5
  %263 = load i32, ptr %type313.2952, align 4, !tbaa !25
  %cmp314.2953 = icmp eq i32 %263, 2
  %arrayidx319.2959 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 2, i64 2, i64 0
  %model_number320.2960 = getelementptr inbounds %struct.ImageParameters, ptr %262, i64 0, i32 127
  %264 = load i32, ptr %model_number320.2960, align 8, !tbaa !31
  %idxprom321.2961 = sext i32 %264 to i64
  %arrayidx326.2962 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 %idxprom321.2961, i64 2, i64 0
  %arrayidx340.2957 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_P, i64 0, i64 %idxprom321.2961, i64 2, i64 0
  %arrayidx326.2962.sink = select i1 %cmp314.2953, ptr %arrayidx326.2962, ptr %arrayidx340.2957
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx319.2959, ptr noundef nonnull %arrayidx326.2962.sink) #14
  %265 = load ptr, ptr @img, align 8, !tbaa !5
  %type313.1.2 = getelementptr inbounds %struct.ImageParameters, ptr %265, i64 0, i32 5
  %266 = load i32, ptr %type313.1.2, align 4, !tbaa !25
  %cmp314.1.2 = icmp eq i32 %266, 2
  %arrayidx319.1.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 2, i64 2, i64 1
  %model_number320.1.2 = getelementptr inbounds %struct.ImageParameters, ptr %265, i64 0, i32 127
  %267 = load i32, ptr %model_number320.1.2, align 8, !tbaa !31
  %idxprom321.1.2 = sext i32 %267 to i64
  %arrayidx326.1.2 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 %idxprom321.1.2, i64 2, i64 1
  %arrayidx340.1.2 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_P, i64 0, i64 %idxprom321.1.2, i64 2, i64 1
  %arrayidx326.1.2.sink = select i1 %cmp314.1.2, ptr %arrayidx326.1.2, ptr %arrayidx340.1.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx319.1.2, ptr noundef nonnull %arrayidx326.1.2.sink) #14
  %268 = load ptr, ptr @img, align 8, !tbaa !5
  %type313.2.2 = getelementptr inbounds %struct.ImageParameters, ptr %268, i64 0, i32 5
  %269 = load i32, ptr %type313.2.2, align 4, !tbaa !25
  %cmp314.2.2 = icmp eq i32 %269, 2
  %arrayidx319.2.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 2, i64 2, i64 2
  %model_number320.2.2 = getelementptr inbounds %struct.ImageParameters, ptr %268, i64 0, i32 127
  %270 = load i32, ptr %model_number320.2.2, align 8, !tbaa !31
  %idxprom321.2.2 = sext i32 %270 to i64
  %arrayidx326.2.2 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 %idxprom321.2.2, i64 2, i64 2
  %arrayidx340.2.2 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_P, i64 0, i64 %idxprom321.2.2, i64 2, i64 2
  %arrayidx326.2.2.sink = select i1 %cmp314.2.2, ptr %arrayidx326.2.2, ptr %arrayidx340.2.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx319.2.2, ptr noundef nonnull %arrayidx326.2.2.sink) #14
  %271 = load ptr, ptr @img, align 8, !tbaa !5
  %type313.3.2 = getelementptr inbounds %struct.ImageParameters, ptr %271, i64 0, i32 5
  %272 = load i32, ptr %type313.3.2, align 4, !tbaa !25
  %cmp314.3.2 = icmp eq i32 %272, 2
  %arrayidx319.3.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 2, i64 2, i64 3
  %model_number320.3.2 = getelementptr inbounds %struct.ImageParameters, ptr %271, i64 0, i32 127
  %273 = load i32, ptr %model_number320.3.2, align 8, !tbaa !31
  %idxprom321.3.2 = sext i32 %273 to i64
  %arrayidx326.3.2 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 %idxprom321.3.2, i64 2, i64 3
  %arrayidx340.3.2 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_P, i64 0, i64 %idxprom321.3.2, i64 2, i64 3
  %arrayidx326.3.2.sink = select i1 %cmp314.3.2, ptr %arrayidx326.3.2, ptr %arrayidx340.3.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx319.3.2, ptr noundef nonnull %arrayidx326.3.2.sink) #14
  br label %for.cond352.preheader

for.cond352.preheader:                            ; preds = %for.cond34.preheader, %for.cond352.preheader
  %indvars.iv969 = phi i64 [ 0, %for.cond34.preheader ], [ %indvars.iv.next970, %for.cond352.preheader ]
  %274 = load ptr, ptr @img, align 8, !tbaa !5
  %type355 = getelementptr inbounds %struct.ImageParameters, ptr %274, i64 0, i32 5
  %275 = load i32, ptr %type355, align 4, !tbaa !25
  %cmp356 = icmp eq i32 %275, 2
  %arrayidx361 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 3, i64 %indvars.iv969, i64 0
  %model_number362 = getelementptr inbounds %struct.ImageParameters, ptr %274, i64 0, i32 127
  %276 = load i32, ptr %model_number362, align 8, !tbaa !31
  %idxprom363 = sext i32 %276 to i64
  %arrayidx368 = getelementptr inbounds [1 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_I, i64 0, i64 %idxprom363, i64 %indvars.iv969, i64 0
  %arrayidx382 = getelementptr inbounds [3 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_P, i64 0, i64 %idxprom363, i64 %indvars.iv969, i64 0
  %arrayidx368.sink = select i1 %cmp356, ptr %arrayidx368, ptr %arrayidx382
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx361, ptr noundef nonnull %arrayidx368.sink) #14
  %277 = load ptr, ptr @img, align 8, !tbaa !5
  %type355.1 = getelementptr inbounds %struct.ImageParameters, ptr %277, i64 0, i32 5
  %278 = load i32, ptr %type355.1, align 4, !tbaa !25
  %cmp356.1 = icmp eq i32 %278, 2
  %arrayidx361.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 3, i64 %indvars.iv969, i64 1
  %model_number362.1 = getelementptr inbounds %struct.ImageParameters, ptr %277, i64 0, i32 127
  %279 = load i32, ptr %model_number362.1, align 8, !tbaa !31
  %idxprom363.1 = sext i32 %279 to i64
  %arrayidx368.1 = getelementptr inbounds [1 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_I, i64 0, i64 %idxprom363.1, i64 %indvars.iv969, i64 1
  %arrayidx382.1 = getelementptr inbounds [3 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_P, i64 0, i64 %idxprom363.1, i64 %indvars.iv969, i64 1
  %arrayidx368.1.sink = select i1 %cmp356.1, ptr %arrayidx368.1, ptr %arrayidx382.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx361.1, ptr noundef nonnull %arrayidx368.1.sink) #14
  %280 = load ptr, ptr @img, align 8, !tbaa !5
  %type355.2 = getelementptr inbounds %struct.ImageParameters, ptr %280, i64 0, i32 5
  %281 = load i32, ptr %type355.2, align 4, !tbaa !25
  %cmp356.2 = icmp eq i32 %281, 2
  %arrayidx361.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 3, i64 %indvars.iv969, i64 2
  %model_number362.2 = getelementptr inbounds %struct.ImageParameters, ptr %280, i64 0, i32 127
  %282 = load i32, ptr %model_number362.2, align 8, !tbaa !31
  %idxprom363.2 = sext i32 %282 to i64
  %arrayidx368.2 = getelementptr inbounds [1 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_I, i64 0, i64 %idxprom363.2, i64 %indvars.iv969, i64 2
  %arrayidx382.2 = getelementptr inbounds [3 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_P, i64 0, i64 %idxprom363.2, i64 %indvars.iv969, i64 2
  %arrayidx368.2.sink = select i1 %cmp356.2, ptr %arrayidx368.2, ptr %arrayidx382.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx361.2, ptr noundef nonnull %arrayidx368.2.sink) #14
  %283 = load ptr, ptr @img, align 8, !tbaa !5
  %type355.3 = getelementptr inbounds %struct.ImageParameters, ptr %283, i64 0, i32 5
  %284 = load i32, ptr %type355.3, align 4, !tbaa !25
  %cmp356.3 = icmp eq i32 %284, 2
  %arrayidx361.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 3, i64 %indvars.iv969, i64 3
  %model_number362.3 = getelementptr inbounds %struct.ImageParameters, ptr %283, i64 0, i32 127
  %285 = load i32, ptr %model_number362.3, align 8, !tbaa !31
  %idxprom363.3 = sext i32 %285 to i64
  %arrayidx368.3 = getelementptr inbounds [1 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_I, i64 0, i64 %idxprom363.3, i64 %indvars.iv969, i64 3
  %arrayidx382.3 = getelementptr inbounds [3 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_P, i64 0, i64 %idxprom363.3, i64 %indvars.iv969, i64 3
  %arrayidx368.3.sink = select i1 %cmp356.3, ptr %arrayidx368.3, ptr %arrayidx382.3
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx361.3, ptr noundef nonnull %arrayidx368.3.sink) #14
  %indvars.iv.next970 = add nuw nsw i64 %indvars.iv969, 1
  %exitcond972.not = icmp eq i64 %indvars.iv.next970, 8
  br i1 %exitcond972.not, label %for.cond394.preheader, label %for.cond352.preheader, !llvm.loop !35

for.cond394.preheader:                            ; preds = %for.cond352.preheader, %for.cond394.preheader
  %indvars.iv977 = phi i64 [ %indvars.iv.next978, %for.cond394.preheader ], [ 0, %for.cond352.preheader ]
  %286 = load ptr, ptr @img, align 8, !tbaa !5
  %type397 = getelementptr inbounds %struct.ImageParameters, ptr %286, i64 0, i32 5
  %287 = load i32, ptr %type397, align 4, !tbaa !25
  %cmp398 = icmp eq i32 %287, 2
  %arrayidx403 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 4, i64 %indvars.iv977, i64 0
  %model_number404 = getelementptr inbounds %struct.ImageParameters, ptr %286, i64 0, i32 127
  %288 = load i32, ptr %model_number404, align 8, !tbaa !31
  %idxprom405 = sext i32 %288 to i64
  %arrayidx410 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_I, i64 0, i64 %idxprom405, i64 %indvars.iv977, i64 0
  %arrayidx424 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_P, i64 0, i64 %idxprom405, i64 %indvars.iv977, i64 0
  %arrayidx410.sink = select i1 %cmp398, ptr %arrayidx410, ptr %arrayidx424
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx403, ptr noundef nonnull %arrayidx410.sink) #14
  %289 = load ptr, ptr @img, align 8, !tbaa !5
  %type397.1 = getelementptr inbounds %struct.ImageParameters, ptr %289, i64 0, i32 5
  %290 = load i32, ptr %type397.1, align 4, !tbaa !25
  %cmp398.1 = icmp eq i32 %290, 2
  %arrayidx403.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 4, i64 %indvars.iv977, i64 1
  %model_number404.1 = getelementptr inbounds %struct.ImageParameters, ptr %289, i64 0, i32 127
  %291 = load i32, ptr %model_number404.1, align 8, !tbaa !31
  %idxprom405.1 = sext i32 %291 to i64
  %arrayidx410.1 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_I, i64 0, i64 %idxprom405.1, i64 %indvars.iv977, i64 1
  %arrayidx424.1 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_P, i64 0, i64 %idxprom405.1, i64 %indvars.iv977, i64 1
  %arrayidx410.1.sink = select i1 %cmp398.1, ptr %arrayidx410.1, ptr %arrayidx424.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx403.1, ptr noundef nonnull %arrayidx410.1.sink) #14
  %292 = load ptr, ptr @img, align 8, !tbaa !5
  %type397.2 = getelementptr inbounds %struct.ImageParameters, ptr %292, i64 0, i32 5
  %293 = load i32, ptr %type397.2, align 4, !tbaa !25
  %cmp398.2 = icmp eq i32 %293, 2
  %arrayidx403.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 4, i64 %indvars.iv977, i64 2
  %model_number404.2 = getelementptr inbounds %struct.ImageParameters, ptr %292, i64 0, i32 127
  %294 = load i32, ptr %model_number404.2, align 8, !tbaa !31
  %idxprom405.2 = sext i32 %294 to i64
  %arrayidx410.2 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_I, i64 0, i64 %idxprom405.2, i64 %indvars.iv977, i64 2
  %arrayidx424.2 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_P, i64 0, i64 %idxprom405.2, i64 %indvars.iv977, i64 2
  %arrayidx410.2.sink = select i1 %cmp398.2, ptr %arrayidx410.2, ptr %arrayidx424.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx403.2, ptr noundef nonnull %arrayidx410.2.sink) #14
  %295 = load ptr, ptr @img, align 8, !tbaa !5
  %type397.3 = getelementptr inbounds %struct.ImageParameters, ptr %295, i64 0, i32 5
  %296 = load i32, ptr %type397.3, align 4, !tbaa !25
  %cmp398.3 = icmp eq i32 %296, 2
  %arrayidx403.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 4, i64 %indvars.iv977, i64 3
  %model_number404.3 = getelementptr inbounds %struct.ImageParameters, ptr %295, i64 0, i32 127
  %297 = load i32, ptr %model_number404.3, align 8, !tbaa !31
  %idxprom405.3 = sext i32 %297 to i64
  %arrayidx410.3 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_I, i64 0, i64 %idxprom405.3, i64 %indvars.iv977, i64 3
  %arrayidx424.3 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_P, i64 0, i64 %idxprom405.3, i64 %indvars.iv977, i64 3
  %arrayidx410.3.sink = select i1 %cmp398.3, ptr %arrayidx410.3, ptr %arrayidx424.3
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx403.3, ptr noundef nonnull %arrayidx410.3.sink) #14
  %298 = load ptr, ptr @img, align 8, !tbaa !5
  %type397.4 = getelementptr inbounds %struct.ImageParameters, ptr %298, i64 0, i32 5
  %299 = load i32, ptr %type397.4, align 4, !tbaa !25
  %cmp398.4 = icmp eq i32 %299, 2
  %arrayidx403.4 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 4, i64 %indvars.iv977, i64 4
  %model_number404.4 = getelementptr inbounds %struct.ImageParameters, ptr %298, i64 0, i32 127
  %300 = load i32, ptr %model_number404.4, align 8, !tbaa !31
  %idxprom405.4 = sext i32 %300 to i64
  %arrayidx410.4 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_I, i64 0, i64 %idxprom405.4, i64 %indvars.iv977, i64 4
  %arrayidx424.4 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_P, i64 0, i64 %idxprom405.4, i64 %indvars.iv977, i64 4
  %arrayidx410.4.sink = select i1 %cmp398.4, ptr %arrayidx410.4, ptr %arrayidx424.4
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx403.4, ptr noundef nonnull %arrayidx410.4.sink) #14
  %301 = load ptr, ptr @img, align 8, !tbaa !5
  %type397.5 = getelementptr inbounds %struct.ImageParameters, ptr %301, i64 0, i32 5
  %302 = load i32, ptr %type397.5, align 4, !tbaa !25
  %cmp398.5 = icmp eq i32 %302, 2
  %arrayidx403.5 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 4, i64 %indvars.iv977, i64 5
  %model_number404.5 = getelementptr inbounds %struct.ImageParameters, ptr %301, i64 0, i32 127
  %303 = load i32, ptr %model_number404.5, align 8, !tbaa !31
  %idxprom405.5 = sext i32 %303 to i64
  %arrayidx410.5 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_I, i64 0, i64 %idxprom405.5, i64 %indvars.iv977, i64 5
  %arrayidx424.5 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_P, i64 0, i64 %idxprom405.5, i64 %indvars.iv977, i64 5
  %arrayidx410.5.sink = select i1 %cmp398.5, ptr %arrayidx410.5, ptr %arrayidx424.5
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx403.5, ptr noundef nonnull %arrayidx410.5.sink) #14
  %304 = load ptr, ptr @img, align 8, !tbaa !5
  %type397.6 = getelementptr inbounds %struct.ImageParameters, ptr %304, i64 0, i32 5
  %305 = load i32, ptr %type397.6, align 4, !tbaa !25
  %cmp398.6 = icmp eq i32 %305, 2
  %arrayidx403.6 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 4, i64 %indvars.iv977, i64 6
  %model_number404.6 = getelementptr inbounds %struct.ImageParameters, ptr %304, i64 0, i32 127
  %306 = load i32, ptr %model_number404.6, align 8, !tbaa !31
  %idxprom405.6 = sext i32 %306 to i64
  %arrayidx410.6 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_I, i64 0, i64 %idxprom405.6, i64 %indvars.iv977, i64 6
  %arrayidx424.6 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_P, i64 0, i64 %idxprom405.6, i64 %indvars.iv977, i64 6
  %arrayidx410.6.sink = select i1 %cmp398.6, ptr %arrayidx410.6, ptr %arrayidx424.6
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx403.6, ptr noundef nonnull %arrayidx410.6.sink) #14
  %307 = load ptr, ptr @img, align 8, !tbaa !5
  %type397.7 = getelementptr inbounds %struct.ImageParameters, ptr %307, i64 0, i32 5
  %308 = load i32, ptr %type397.7, align 4, !tbaa !25
  %cmp398.7 = icmp eq i32 %308, 2
  %arrayidx403.7 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 4, i64 %indvars.iv977, i64 7
  %model_number404.7 = getelementptr inbounds %struct.ImageParameters, ptr %307, i64 0, i32 127
  %309 = load i32, ptr %model_number404.7, align 8, !tbaa !31
  %idxprom405.7 = sext i32 %309 to i64
  %arrayidx410.7 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_I, i64 0, i64 %idxprom405.7, i64 %indvars.iv977, i64 7
  %arrayidx424.7 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_P, i64 0, i64 %idxprom405.7, i64 %indvars.iv977, i64 7
  %arrayidx410.7.sink = select i1 %cmp398.7, ptr %arrayidx410.7, ptr %arrayidx424.7
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx403.7, ptr noundef nonnull %arrayidx410.7.sink) #14
  %310 = load ptr, ptr @img, align 8, !tbaa !5
  %type397.8 = getelementptr inbounds %struct.ImageParameters, ptr %310, i64 0, i32 5
  %311 = load i32, ptr %type397.8, align 4, !tbaa !25
  %cmp398.8 = icmp eq i32 %311, 2
  %arrayidx403.8 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 4, i64 %indvars.iv977, i64 8
  %model_number404.8 = getelementptr inbounds %struct.ImageParameters, ptr %310, i64 0, i32 127
  %312 = load i32, ptr %model_number404.8, align 8, !tbaa !31
  %idxprom405.8 = sext i32 %312 to i64
  %arrayidx410.8 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_I, i64 0, i64 %idxprom405.8, i64 %indvars.iv977, i64 8
  %arrayidx424.8 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_P, i64 0, i64 %idxprom405.8, i64 %indvars.iv977, i64 8
  %arrayidx410.8.sink = select i1 %cmp398.8, ptr %arrayidx410.8, ptr %arrayidx424.8
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx403.8, ptr noundef nonnull %arrayidx410.8.sink) #14
  %313 = load ptr, ptr @img, align 8, !tbaa !5
  %type397.9 = getelementptr inbounds %struct.ImageParameters, ptr %313, i64 0, i32 5
  %314 = load i32, ptr %type397.9, align 4, !tbaa !25
  %cmp398.9 = icmp eq i32 %314, 2
  %arrayidx403.9 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 4, i64 %indvars.iv977, i64 9
  %model_number404.9 = getelementptr inbounds %struct.ImageParameters, ptr %313, i64 0, i32 127
  %315 = load i32, ptr %model_number404.9, align 8, !tbaa !31
  %idxprom405.9 = sext i32 %315 to i64
  %arrayidx410.9 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_I, i64 0, i64 %idxprom405.9, i64 %indvars.iv977, i64 9
  %arrayidx424.9 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_P, i64 0, i64 %idxprom405.9, i64 %indvars.iv977, i64 9
  %arrayidx410.9.sink = select i1 %cmp398.9, ptr %arrayidx410.9, ptr %arrayidx424.9
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx403.9, ptr noundef nonnull %arrayidx410.9.sink) #14
  %316 = load ptr, ptr @img, align 8, !tbaa !5
  %type397.10 = getelementptr inbounds %struct.ImageParameters, ptr %316, i64 0, i32 5
  %317 = load i32, ptr %type397.10, align 4, !tbaa !25
  %cmp398.10 = icmp eq i32 %317, 2
  %arrayidx403.10 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 4, i64 %indvars.iv977, i64 10
  %model_number404.10 = getelementptr inbounds %struct.ImageParameters, ptr %316, i64 0, i32 127
  %318 = load i32, ptr %model_number404.10, align 8, !tbaa !31
  %idxprom405.10 = sext i32 %318 to i64
  %arrayidx410.10 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_I, i64 0, i64 %idxprom405.10, i64 %indvars.iv977, i64 10
  %arrayidx424.10 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_P, i64 0, i64 %idxprom405.10, i64 %indvars.iv977, i64 10
  %arrayidx410.10.sink = select i1 %cmp398.10, ptr %arrayidx410.10, ptr %arrayidx424.10
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx403.10, ptr noundef nonnull %arrayidx410.10.sink) #14
  %319 = load ptr, ptr @img, align 8, !tbaa !5
  %type397.11 = getelementptr inbounds %struct.ImageParameters, ptr %319, i64 0, i32 5
  %320 = load i32, ptr %type397.11, align 4, !tbaa !25
  %cmp398.11 = icmp eq i32 %320, 2
  %arrayidx403.11 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 4, i64 %indvars.iv977, i64 11
  %model_number404.11 = getelementptr inbounds %struct.ImageParameters, ptr %319, i64 0, i32 127
  %321 = load i32, ptr %model_number404.11, align 8, !tbaa !31
  %idxprom405.11 = sext i32 %321 to i64
  %arrayidx410.11 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_I, i64 0, i64 %idxprom405.11, i64 %indvars.iv977, i64 11
  %arrayidx424.11 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_P, i64 0, i64 %idxprom405.11, i64 %indvars.iv977, i64 11
  %arrayidx410.11.sink = select i1 %cmp398.11, ptr %arrayidx410.11, ptr %arrayidx424.11
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx403.11, ptr noundef nonnull %arrayidx410.11.sink) #14
  %322 = load ptr, ptr @img, align 8, !tbaa !5
  %type397.12 = getelementptr inbounds %struct.ImageParameters, ptr %322, i64 0, i32 5
  %323 = load i32, ptr %type397.12, align 4, !tbaa !25
  %cmp398.12 = icmp eq i32 %323, 2
  %arrayidx403.12 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 4, i64 %indvars.iv977, i64 12
  %model_number404.12 = getelementptr inbounds %struct.ImageParameters, ptr %322, i64 0, i32 127
  %324 = load i32, ptr %model_number404.12, align 8, !tbaa !31
  %idxprom405.12 = sext i32 %324 to i64
  %arrayidx410.12 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_I, i64 0, i64 %idxprom405.12, i64 %indvars.iv977, i64 12
  %arrayidx424.12 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_P, i64 0, i64 %idxprom405.12, i64 %indvars.iv977, i64 12
  %arrayidx410.12.sink = select i1 %cmp398.12, ptr %arrayidx410.12, ptr %arrayidx424.12
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx403.12, ptr noundef nonnull %arrayidx410.12.sink) #14
  %325 = load ptr, ptr @img, align 8, !tbaa !5
  %type397.13 = getelementptr inbounds %struct.ImageParameters, ptr %325, i64 0, i32 5
  %326 = load i32, ptr %type397.13, align 4, !tbaa !25
  %cmp398.13 = icmp eq i32 %326, 2
  %arrayidx403.13 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 4, i64 %indvars.iv977, i64 13
  %model_number404.13 = getelementptr inbounds %struct.ImageParameters, ptr %325, i64 0, i32 127
  %327 = load i32, ptr %model_number404.13, align 8, !tbaa !31
  %idxprom405.13 = sext i32 %327 to i64
  %arrayidx410.13 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_I, i64 0, i64 %idxprom405.13, i64 %indvars.iv977, i64 13
  %arrayidx424.13 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_P, i64 0, i64 %idxprom405.13, i64 %indvars.iv977, i64 13
  %arrayidx410.13.sink = select i1 %cmp398.13, ptr %arrayidx410.13, ptr %arrayidx424.13
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx403.13, ptr noundef nonnull %arrayidx410.13.sink) #14
  %328 = load ptr, ptr @img, align 8, !tbaa !5
  %type397.14 = getelementptr inbounds %struct.ImageParameters, ptr %328, i64 0, i32 5
  %329 = load i32, ptr %type397.14, align 4, !tbaa !25
  %cmp398.14 = icmp eq i32 %329, 2
  %arrayidx403.14 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 4, i64 %indvars.iv977, i64 14
  %model_number404.14 = getelementptr inbounds %struct.ImageParameters, ptr %328, i64 0, i32 127
  %330 = load i32, ptr %model_number404.14, align 8, !tbaa !31
  %idxprom405.14 = sext i32 %330 to i64
  %arrayidx410.14 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_I, i64 0, i64 %idxprom405.14, i64 %indvars.iv977, i64 14
  %arrayidx424.14 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_P, i64 0, i64 %idxprom405.14, i64 %indvars.iv977, i64 14
  %arrayidx410.14.sink = select i1 %cmp398.14, ptr %arrayidx410.14, ptr %arrayidx424.14
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx403.14, ptr noundef nonnull %arrayidx410.14.sink) #14
  %indvars.iv.next978 = add nuw nsw i64 %indvars.iv977, 1
  %exitcond980.not = icmp eq i64 %indvars.iv.next978, 8
  br i1 %exitcond980.not, label %for.cond436.preheader, label %for.cond394.preheader, !llvm.loop !36

for.cond436.preheader:                            ; preds = %for.cond394.preheader, %for.cond436.preheader
  %indvars.iv985 = phi i64 [ %indvars.iv.next986, %for.cond436.preheader ], [ 0, %for.cond394.preheader ]
  %331 = load ptr, ptr @img, align 8, !tbaa !5
  %type439 = getelementptr inbounds %struct.ImageParameters, ptr %331, i64 0, i32 5
  %332 = load i32, ptr %type439, align 4, !tbaa !25
  %cmp440 = icmp eq i32 %332, 2
  %arrayidx445 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 5, i64 %indvars.iv985, i64 0
  %model_number446 = getelementptr inbounds %struct.ImageParameters, ptr %331, i64 0, i32 127
  %333 = load i32, ptr %model_number446, align 8, !tbaa !31
  %idxprom447 = sext i32 %333 to i64
  %arrayidx452 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_I, i64 0, i64 %idxprom447, i64 %indvars.iv985, i64 0
  %arrayidx466 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_P, i64 0, i64 %idxprom447, i64 %indvars.iv985, i64 0
  %arrayidx452.sink = select i1 %cmp440, ptr %arrayidx452, ptr %arrayidx466
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx445, ptr noundef nonnull %arrayidx452.sink) #14
  %334 = load ptr, ptr @img, align 8, !tbaa !5
  %type439.1 = getelementptr inbounds %struct.ImageParameters, ptr %334, i64 0, i32 5
  %335 = load i32, ptr %type439.1, align 4, !tbaa !25
  %cmp440.1 = icmp eq i32 %335, 2
  %arrayidx445.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 5, i64 %indvars.iv985, i64 1
  %model_number446.1 = getelementptr inbounds %struct.ImageParameters, ptr %334, i64 0, i32 127
  %336 = load i32, ptr %model_number446.1, align 8, !tbaa !31
  %idxprom447.1 = sext i32 %336 to i64
  %arrayidx452.1 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_I, i64 0, i64 %idxprom447.1, i64 %indvars.iv985, i64 1
  %arrayidx466.1 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_P, i64 0, i64 %idxprom447.1, i64 %indvars.iv985, i64 1
  %arrayidx452.1.sink = select i1 %cmp440.1, ptr %arrayidx452.1, ptr %arrayidx466.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx445.1, ptr noundef nonnull %arrayidx452.1.sink) #14
  %337 = load ptr, ptr @img, align 8, !tbaa !5
  %type439.2 = getelementptr inbounds %struct.ImageParameters, ptr %337, i64 0, i32 5
  %338 = load i32, ptr %type439.2, align 4, !tbaa !25
  %cmp440.2 = icmp eq i32 %338, 2
  %arrayidx445.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 5, i64 %indvars.iv985, i64 2
  %model_number446.2 = getelementptr inbounds %struct.ImageParameters, ptr %337, i64 0, i32 127
  %339 = load i32, ptr %model_number446.2, align 8, !tbaa !31
  %idxprom447.2 = sext i32 %339 to i64
  %arrayidx452.2 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_I, i64 0, i64 %idxprom447.2, i64 %indvars.iv985, i64 2
  %arrayidx466.2 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_P, i64 0, i64 %idxprom447.2, i64 %indvars.iv985, i64 2
  %arrayidx452.2.sink = select i1 %cmp440.2, ptr %arrayidx452.2, ptr %arrayidx466.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx445.2, ptr noundef nonnull %arrayidx452.2.sink) #14
  %340 = load ptr, ptr @img, align 8, !tbaa !5
  %type439.3 = getelementptr inbounds %struct.ImageParameters, ptr %340, i64 0, i32 5
  %341 = load i32, ptr %type439.3, align 4, !tbaa !25
  %cmp440.3 = icmp eq i32 %341, 2
  %arrayidx445.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 5, i64 %indvars.iv985, i64 3
  %model_number446.3 = getelementptr inbounds %struct.ImageParameters, ptr %340, i64 0, i32 127
  %342 = load i32, ptr %model_number446.3, align 8, !tbaa !31
  %idxprom447.3 = sext i32 %342 to i64
  %arrayidx452.3 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_I, i64 0, i64 %idxprom447.3, i64 %indvars.iv985, i64 3
  %arrayidx466.3 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_P, i64 0, i64 %idxprom447.3, i64 %indvars.iv985, i64 3
  %arrayidx452.3.sink = select i1 %cmp440.3, ptr %arrayidx452.3, ptr %arrayidx466.3
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx445.3, ptr noundef nonnull %arrayidx452.3.sink) #14
  %343 = load ptr, ptr @img, align 8, !tbaa !5
  %type439.4 = getelementptr inbounds %struct.ImageParameters, ptr %343, i64 0, i32 5
  %344 = load i32, ptr %type439.4, align 4, !tbaa !25
  %cmp440.4 = icmp eq i32 %344, 2
  %arrayidx445.4 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 5, i64 %indvars.iv985, i64 4
  %model_number446.4 = getelementptr inbounds %struct.ImageParameters, ptr %343, i64 0, i32 127
  %345 = load i32, ptr %model_number446.4, align 8, !tbaa !31
  %idxprom447.4 = sext i32 %345 to i64
  %arrayidx452.4 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_I, i64 0, i64 %idxprom447.4, i64 %indvars.iv985, i64 4
  %arrayidx466.4 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_P, i64 0, i64 %idxprom447.4, i64 %indvars.iv985, i64 4
  %arrayidx452.4.sink = select i1 %cmp440.4, ptr %arrayidx452.4, ptr %arrayidx466.4
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx445.4, ptr noundef nonnull %arrayidx452.4.sink) #14
  %346 = load ptr, ptr @img, align 8, !tbaa !5
  %type439.5 = getelementptr inbounds %struct.ImageParameters, ptr %346, i64 0, i32 5
  %347 = load i32, ptr %type439.5, align 4, !tbaa !25
  %cmp440.5 = icmp eq i32 %347, 2
  %arrayidx445.5 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 5, i64 %indvars.iv985, i64 5
  %model_number446.5 = getelementptr inbounds %struct.ImageParameters, ptr %346, i64 0, i32 127
  %348 = load i32, ptr %model_number446.5, align 8, !tbaa !31
  %idxprom447.5 = sext i32 %348 to i64
  %arrayidx452.5 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_I, i64 0, i64 %idxprom447.5, i64 %indvars.iv985, i64 5
  %arrayidx466.5 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_P, i64 0, i64 %idxprom447.5, i64 %indvars.iv985, i64 5
  %arrayidx452.5.sink = select i1 %cmp440.5, ptr %arrayidx452.5, ptr %arrayidx466.5
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx445.5, ptr noundef nonnull %arrayidx452.5.sink) #14
  %349 = load ptr, ptr @img, align 8, !tbaa !5
  %type439.6 = getelementptr inbounds %struct.ImageParameters, ptr %349, i64 0, i32 5
  %350 = load i32, ptr %type439.6, align 4, !tbaa !25
  %cmp440.6 = icmp eq i32 %350, 2
  %arrayidx445.6 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 5, i64 %indvars.iv985, i64 6
  %model_number446.6 = getelementptr inbounds %struct.ImageParameters, ptr %349, i64 0, i32 127
  %351 = load i32, ptr %model_number446.6, align 8, !tbaa !31
  %idxprom447.6 = sext i32 %351 to i64
  %arrayidx452.6 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_I, i64 0, i64 %idxprom447.6, i64 %indvars.iv985, i64 6
  %arrayidx466.6 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_P, i64 0, i64 %idxprom447.6, i64 %indvars.iv985, i64 6
  %arrayidx452.6.sink = select i1 %cmp440.6, ptr %arrayidx452.6, ptr %arrayidx466.6
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx445.6, ptr noundef nonnull %arrayidx452.6.sink) #14
  %352 = load ptr, ptr @img, align 8, !tbaa !5
  %type439.7 = getelementptr inbounds %struct.ImageParameters, ptr %352, i64 0, i32 5
  %353 = load i32, ptr %type439.7, align 4, !tbaa !25
  %cmp440.7 = icmp eq i32 %353, 2
  %arrayidx445.7 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 5, i64 %indvars.iv985, i64 7
  %model_number446.7 = getelementptr inbounds %struct.ImageParameters, ptr %352, i64 0, i32 127
  %354 = load i32, ptr %model_number446.7, align 8, !tbaa !31
  %idxprom447.7 = sext i32 %354 to i64
  %arrayidx452.7 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_I, i64 0, i64 %idxprom447.7, i64 %indvars.iv985, i64 7
  %arrayidx466.7 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_P, i64 0, i64 %idxprom447.7, i64 %indvars.iv985, i64 7
  %arrayidx452.7.sink = select i1 %cmp440.7, ptr %arrayidx452.7, ptr %arrayidx466.7
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx445.7, ptr noundef nonnull %arrayidx452.7.sink) #14
  %355 = load ptr, ptr @img, align 8, !tbaa !5
  %type439.8 = getelementptr inbounds %struct.ImageParameters, ptr %355, i64 0, i32 5
  %356 = load i32, ptr %type439.8, align 4, !tbaa !25
  %cmp440.8 = icmp eq i32 %356, 2
  %arrayidx445.8 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 5, i64 %indvars.iv985, i64 8
  %model_number446.8 = getelementptr inbounds %struct.ImageParameters, ptr %355, i64 0, i32 127
  %357 = load i32, ptr %model_number446.8, align 8, !tbaa !31
  %idxprom447.8 = sext i32 %357 to i64
  %arrayidx452.8 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_I, i64 0, i64 %idxprom447.8, i64 %indvars.iv985, i64 8
  %arrayidx466.8 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_P, i64 0, i64 %idxprom447.8, i64 %indvars.iv985, i64 8
  %arrayidx452.8.sink = select i1 %cmp440.8, ptr %arrayidx452.8, ptr %arrayidx466.8
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx445.8, ptr noundef nonnull %arrayidx452.8.sink) #14
  %358 = load ptr, ptr @img, align 8, !tbaa !5
  %type439.9 = getelementptr inbounds %struct.ImageParameters, ptr %358, i64 0, i32 5
  %359 = load i32, ptr %type439.9, align 4, !tbaa !25
  %cmp440.9 = icmp eq i32 %359, 2
  %arrayidx445.9 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 5, i64 %indvars.iv985, i64 9
  %model_number446.9 = getelementptr inbounds %struct.ImageParameters, ptr %358, i64 0, i32 127
  %360 = load i32, ptr %model_number446.9, align 8, !tbaa !31
  %idxprom447.9 = sext i32 %360 to i64
  %arrayidx452.9 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_I, i64 0, i64 %idxprom447.9, i64 %indvars.iv985, i64 9
  %arrayidx466.9 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_P, i64 0, i64 %idxprom447.9, i64 %indvars.iv985, i64 9
  %arrayidx452.9.sink = select i1 %cmp440.9, ptr %arrayidx452.9, ptr %arrayidx466.9
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx445.9, ptr noundef nonnull %arrayidx452.9.sink) #14
  %361 = load ptr, ptr @img, align 8, !tbaa !5
  %type439.10 = getelementptr inbounds %struct.ImageParameters, ptr %361, i64 0, i32 5
  %362 = load i32, ptr %type439.10, align 4, !tbaa !25
  %cmp440.10 = icmp eq i32 %362, 2
  %arrayidx445.10 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 5, i64 %indvars.iv985, i64 10
  %model_number446.10 = getelementptr inbounds %struct.ImageParameters, ptr %361, i64 0, i32 127
  %363 = load i32, ptr %model_number446.10, align 8, !tbaa !31
  %idxprom447.10 = sext i32 %363 to i64
  %arrayidx452.10 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_I, i64 0, i64 %idxprom447.10, i64 %indvars.iv985, i64 10
  %arrayidx466.10 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_P, i64 0, i64 %idxprom447.10, i64 %indvars.iv985, i64 10
  %arrayidx452.10.sink = select i1 %cmp440.10, ptr %arrayidx452.10, ptr %arrayidx466.10
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx445.10, ptr noundef nonnull %arrayidx452.10.sink) #14
  %364 = load ptr, ptr @img, align 8, !tbaa !5
  %type439.11 = getelementptr inbounds %struct.ImageParameters, ptr %364, i64 0, i32 5
  %365 = load i32, ptr %type439.11, align 4, !tbaa !25
  %cmp440.11 = icmp eq i32 %365, 2
  %arrayidx445.11 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 5, i64 %indvars.iv985, i64 11
  %model_number446.11 = getelementptr inbounds %struct.ImageParameters, ptr %364, i64 0, i32 127
  %366 = load i32, ptr %model_number446.11, align 8, !tbaa !31
  %idxprom447.11 = sext i32 %366 to i64
  %arrayidx452.11 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_I, i64 0, i64 %idxprom447.11, i64 %indvars.iv985, i64 11
  %arrayidx466.11 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_P, i64 0, i64 %idxprom447.11, i64 %indvars.iv985, i64 11
  %arrayidx452.11.sink = select i1 %cmp440.11, ptr %arrayidx452.11, ptr %arrayidx466.11
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx445.11, ptr noundef nonnull %arrayidx452.11.sink) #14
  %367 = load ptr, ptr @img, align 8, !tbaa !5
  %type439.12 = getelementptr inbounds %struct.ImageParameters, ptr %367, i64 0, i32 5
  %368 = load i32, ptr %type439.12, align 4, !tbaa !25
  %cmp440.12 = icmp eq i32 %368, 2
  %arrayidx445.12 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 5, i64 %indvars.iv985, i64 12
  %model_number446.12 = getelementptr inbounds %struct.ImageParameters, ptr %367, i64 0, i32 127
  %369 = load i32, ptr %model_number446.12, align 8, !tbaa !31
  %idxprom447.12 = sext i32 %369 to i64
  %arrayidx452.12 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_I, i64 0, i64 %idxprom447.12, i64 %indvars.iv985, i64 12
  %arrayidx466.12 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_P, i64 0, i64 %idxprom447.12, i64 %indvars.iv985, i64 12
  %arrayidx452.12.sink = select i1 %cmp440.12, ptr %arrayidx452.12, ptr %arrayidx466.12
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx445.12, ptr noundef nonnull %arrayidx452.12.sink) #14
  %370 = load ptr, ptr @img, align 8, !tbaa !5
  %type439.13 = getelementptr inbounds %struct.ImageParameters, ptr %370, i64 0, i32 5
  %371 = load i32, ptr %type439.13, align 4, !tbaa !25
  %cmp440.13 = icmp eq i32 %371, 2
  %arrayidx445.13 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 5, i64 %indvars.iv985, i64 13
  %model_number446.13 = getelementptr inbounds %struct.ImageParameters, ptr %370, i64 0, i32 127
  %372 = load i32, ptr %model_number446.13, align 8, !tbaa !31
  %idxprom447.13 = sext i32 %372 to i64
  %arrayidx452.13 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_I, i64 0, i64 %idxprom447.13, i64 %indvars.iv985, i64 13
  %arrayidx466.13 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_P, i64 0, i64 %idxprom447.13, i64 %indvars.iv985, i64 13
  %arrayidx452.13.sink = select i1 %cmp440.13, ptr %arrayidx452.13, ptr %arrayidx466.13
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx445.13, ptr noundef nonnull %arrayidx452.13.sink) #14
  %373 = load ptr, ptr @img, align 8, !tbaa !5
  %type439.14 = getelementptr inbounds %struct.ImageParameters, ptr %373, i64 0, i32 5
  %374 = load i32, ptr %type439.14, align 4, !tbaa !25
  %cmp440.14 = icmp eq i32 %374, 2
  %arrayidx445.14 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 5, i64 %indvars.iv985, i64 14
  %model_number446.14 = getelementptr inbounds %struct.ImageParameters, ptr %373, i64 0, i32 127
  %375 = load i32, ptr %model_number446.14, align 8, !tbaa !31
  %idxprom447.14 = sext i32 %375 to i64
  %arrayidx452.14 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_I, i64 0, i64 %idxprom447.14, i64 %indvars.iv985, i64 14
  %arrayidx466.14 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_P, i64 0, i64 %idxprom447.14, i64 %indvars.iv985, i64 14
  %arrayidx452.14.sink = select i1 %cmp440.14, ptr %arrayidx452.14, ptr %arrayidx466.14
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx445.14, ptr noundef nonnull %arrayidx452.14.sink) #14
  %indvars.iv.next986 = add nuw nsw i64 %indvars.iv985, 1
  %exitcond988.not = icmp eq i64 %indvars.iv.next986, 8
  br i1 %exitcond988.not, label %for.cond478.preheader, label %for.cond436.preheader, !llvm.loop !37

for.cond478.preheader:                            ; preds = %for.cond436.preheader, %for.cond478.preheader
  %indvars.iv993 = phi i64 [ %indvars.iv.next994, %for.cond478.preheader ], [ 0, %for.cond436.preheader ]
  %376 = load ptr, ptr @img, align 8, !tbaa !5
  %type481 = getelementptr inbounds %struct.ImageParameters, ptr %376, i64 0, i32 5
  %377 = load i32, ptr %type481, align 4, !tbaa !25
  %cmp482 = icmp eq i32 %377, 2
  %arrayidx487 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 6, i64 %indvars.iv993, i64 0
  %model_number488 = getelementptr inbounds %struct.ImageParameters, ptr %376, i64 0, i32 127
  %378 = load i32, ptr %model_number488, align 8, !tbaa !31
  %idxprom489 = sext i32 %378 to i64
  %arrayidx494 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_I, i64 0, i64 %idxprom489, i64 %indvars.iv993, i64 0
  %arrayidx508 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_P, i64 0, i64 %idxprom489, i64 %indvars.iv993, i64 0
  %arrayidx494.sink = select i1 %cmp482, ptr %arrayidx494, ptr %arrayidx508
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx487, ptr noundef nonnull %arrayidx494.sink) #14
  %379 = load ptr, ptr @img, align 8, !tbaa !5
  %type481.1 = getelementptr inbounds %struct.ImageParameters, ptr %379, i64 0, i32 5
  %380 = load i32, ptr %type481.1, align 4, !tbaa !25
  %cmp482.1 = icmp eq i32 %380, 2
  %arrayidx487.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 6, i64 %indvars.iv993, i64 1
  %model_number488.1 = getelementptr inbounds %struct.ImageParameters, ptr %379, i64 0, i32 127
  %381 = load i32, ptr %model_number488.1, align 8, !tbaa !31
  %idxprom489.1 = sext i32 %381 to i64
  %arrayidx494.1 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_I, i64 0, i64 %idxprom489.1, i64 %indvars.iv993, i64 1
  %arrayidx508.1 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_P, i64 0, i64 %idxprom489.1, i64 %indvars.iv993, i64 1
  %arrayidx494.1.sink = select i1 %cmp482.1, ptr %arrayidx494.1, ptr %arrayidx508.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx487.1, ptr noundef nonnull %arrayidx494.1.sink) #14
  %382 = load ptr, ptr @img, align 8, !tbaa !5
  %type481.2 = getelementptr inbounds %struct.ImageParameters, ptr %382, i64 0, i32 5
  %383 = load i32, ptr %type481.2, align 4, !tbaa !25
  %cmp482.2 = icmp eq i32 %383, 2
  %arrayidx487.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 6, i64 %indvars.iv993, i64 2
  %model_number488.2 = getelementptr inbounds %struct.ImageParameters, ptr %382, i64 0, i32 127
  %384 = load i32, ptr %model_number488.2, align 8, !tbaa !31
  %idxprom489.2 = sext i32 %384 to i64
  %arrayidx494.2 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_I, i64 0, i64 %idxprom489.2, i64 %indvars.iv993, i64 2
  %arrayidx508.2 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_P, i64 0, i64 %idxprom489.2, i64 %indvars.iv993, i64 2
  %arrayidx494.2.sink = select i1 %cmp482.2, ptr %arrayidx494.2, ptr %arrayidx508.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx487.2, ptr noundef nonnull %arrayidx494.2.sink) #14
  %385 = load ptr, ptr @img, align 8, !tbaa !5
  %type481.3 = getelementptr inbounds %struct.ImageParameters, ptr %385, i64 0, i32 5
  %386 = load i32, ptr %type481.3, align 4, !tbaa !25
  %cmp482.3 = icmp eq i32 %386, 2
  %arrayidx487.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 6, i64 %indvars.iv993, i64 3
  %model_number488.3 = getelementptr inbounds %struct.ImageParameters, ptr %385, i64 0, i32 127
  %387 = load i32, ptr %model_number488.3, align 8, !tbaa !31
  %idxprom489.3 = sext i32 %387 to i64
  %arrayidx494.3 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_I, i64 0, i64 %idxprom489.3, i64 %indvars.iv993, i64 3
  %arrayidx508.3 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_P, i64 0, i64 %idxprom489.3, i64 %indvars.iv993, i64 3
  %arrayidx494.3.sink = select i1 %cmp482.3, ptr %arrayidx494.3, ptr %arrayidx508.3
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx487.3, ptr noundef nonnull %arrayidx494.3.sink) #14
  %388 = load ptr, ptr @img, align 8, !tbaa !5
  %type481.4 = getelementptr inbounds %struct.ImageParameters, ptr %388, i64 0, i32 5
  %389 = load i32, ptr %type481.4, align 4, !tbaa !25
  %cmp482.4 = icmp eq i32 %389, 2
  %arrayidx487.4 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 6, i64 %indvars.iv993, i64 4
  %model_number488.4 = getelementptr inbounds %struct.ImageParameters, ptr %388, i64 0, i32 127
  %390 = load i32, ptr %model_number488.4, align 8, !tbaa !31
  %idxprom489.4 = sext i32 %390 to i64
  %arrayidx494.4 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_I, i64 0, i64 %idxprom489.4, i64 %indvars.iv993, i64 4
  %arrayidx508.4 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_P, i64 0, i64 %idxprom489.4, i64 %indvars.iv993, i64 4
  %arrayidx494.4.sink = select i1 %cmp482.4, ptr %arrayidx494.4, ptr %arrayidx508.4
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx487.4, ptr noundef nonnull %arrayidx494.4.sink) #14
  %indvars.iv.next994 = add nuw nsw i64 %indvars.iv993, 1
  %exitcond996.not = icmp eq i64 %indvars.iv.next994, 8
  br i1 %exitcond996.not, label %for.cond520.preheader, label %for.cond478.preheader, !llvm.loop !38

for.cond520.preheader:                            ; preds = %for.cond478.preheader, %for.cond520.preheader
  %indvars.iv1001 = phi i64 [ %indvars.iv.next1002, %for.cond520.preheader ], [ 0, %for.cond478.preheader ]
  %391 = load ptr, ptr @img, align 8, !tbaa !5
  %type523 = getelementptr inbounds %struct.ImageParameters, ptr %391, i64 0, i32 5
  %392 = load i32, ptr %type523, align 4, !tbaa !25
  %cmp524 = icmp eq i32 %392, 2
  %arrayidx529 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 7, i64 %indvars.iv1001, i64 0
  %model_number530 = getelementptr inbounds %struct.ImageParameters, ptr %391, i64 0, i32 127
  %393 = load i32, ptr %model_number530, align 8, !tbaa !31
  %idxprom531 = sext i32 %393 to i64
  %arrayidx536 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_I, i64 0, i64 %idxprom531, i64 %indvars.iv1001, i64 0
  %arrayidx550 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_P, i64 0, i64 %idxprom531, i64 %indvars.iv1001, i64 0
  %arrayidx536.sink = select i1 %cmp524, ptr %arrayidx536, ptr %arrayidx550
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx529, ptr noundef nonnull %arrayidx536.sink) #14
  %394 = load ptr, ptr @img, align 8, !tbaa !5
  %type523.1 = getelementptr inbounds %struct.ImageParameters, ptr %394, i64 0, i32 5
  %395 = load i32, ptr %type523.1, align 4, !tbaa !25
  %cmp524.1 = icmp eq i32 %395, 2
  %arrayidx529.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 7, i64 %indvars.iv1001, i64 1
  %model_number530.1 = getelementptr inbounds %struct.ImageParameters, ptr %394, i64 0, i32 127
  %396 = load i32, ptr %model_number530.1, align 8, !tbaa !31
  %idxprom531.1 = sext i32 %396 to i64
  %arrayidx536.1 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_I, i64 0, i64 %idxprom531.1, i64 %indvars.iv1001, i64 1
  %arrayidx550.1 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_P, i64 0, i64 %idxprom531.1, i64 %indvars.iv1001, i64 1
  %arrayidx536.1.sink = select i1 %cmp524.1, ptr %arrayidx536.1, ptr %arrayidx550.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx529.1, ptr noundef nonnull %arrayidx536.1.sink) #14
  %397 = load ptr, ptr @img, align 8, !tbaa !5
  %type523.2 = getelementptr inbounds %struct.ImageParameters, ptr %397, i64 0, i32 5
  %398 = load i32, ptr %type523.2, align 4, !tbaa !25
  %cmp524.2 = icmp eq i32 %398, 2
  %arrayidx529.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 7, i64 %indvars.iv1001, i64 2
  %model_number530.2 = getelementptr inbounds %struct.ImageParameters, ptr %397, i64 0, i32 127
  %399 = load i32, ptr %model_number530.2, align 8, !tbaa !31
  %idxprom531.2 = sext i32 %399 to i64
  %arrayidx536.2 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_I, i64 0, i64 %idxprom531.2, i64 %indvars.iv1001, i64 2
  %arrayidx550.2 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_P, i64 0, i64 %idxprom531.2, i64 %indvars.iv1001, i64 2
  %arrayidx536.2.sink = select i1 %cmp524.2, ptr %arrayidx536.2, ptr %arrayidx550.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx529.2, ptr noundef nonnull %arrayidx536.2.sink) #14
  %400 = load ptr, ptr @img, align 8, !tbaa !5
  %type523.3 = getelementptr inbounds %struct.ImageParameters, ptr %400, i64 0, i32 5
  %401 = load i32, ptr %type523.3, align 4, !tbaa !25
  %cmp524.3 = icmp eq i32 %401, 2
  %arrayidx529.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 7, i64 %indvars.iv1001, i64 3
  %model_number530.3 = getelementptr inbounds %struct.ImageParameters, ptr %400, i64 0, i32 127
  %402 = load i32, ptr %model_number530.3, align 8, !tbaa !31
  %idxprom531.3 = sext i32 %402 to i64
  %arrayidx536.3 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_I, i64 0, i64 %idxprom531.3, i64 %indvars.iv1001, i64 3
  %arrayidx550.3 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_P, i64 0, i64 %idxprom531.3, i64 %indvars.iv1001, i64 3
  %arrayidx536.3.sink = select i1 %cmp524.3, ptr %arrayidx536.3, ptr %arrayidx550.3
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx529.3, ptr noundef nonnull %arrayidx536.3.sink) #14
  %403 = load ptr, ptr @img, align 8, !tbaa !5
  %type523.4 = getelementptr inbounds %struct.ImageParameters, ptr %403, i64 0, i32 5
  %404 = load i32, ptr %type523.4, align 4, !tbaa !25
  %cmp524.4 = icmp eq i32 %404, 2
  %arrayidx529.4 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 7, i64 %indvars.iv1001, i64 4
  %model_number530.4 = getelementptr inbounds %struct.ImageParameters, ptr %403, i64 0, i32 127
  %405 = load i32, ptr %model_number530.4, align 8, !tbaa !31
  %idxprom531.4 = sext i32 %405 to i64
  %arrayidx536.4 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_I, i64 0, i64 %idxprom531.4, i64 %indvars.iv1001, i64 4
  %arrayidx550.4 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_P, i64 0, i64 %idxprom531.4, i64 %indvars.iv1001, i64 4
  %arrayidx536.4.sink = select i1 %cmp524.4, ptr %arrayidx536.4, ptr %arrayidx550.4
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx529.4, ptr noundef nonnull %arrayidx536.4.sink) #14
  %indvars.iv.next1002 = add nuw nsw i64 %indvars.iv1001, 1
  %exitcond1004.not = icmp eq i64 %indvars.iv.next1002, 8
  br i1 %exitcond1004.not, label %for.cond562.preheader, label %for.cond520.preheader, !llvm.loop !39

for.cond562.preheader:                            ; preds = %for.cond520.preheader, %for.cond562.preheader
  %indvars.iv1009 = phi i64 [ %indvars.iv.next1010, %for.cond562.preheader ], [ 0, %for.cond520.preheader ]
  %406 = load ptr, ptr @img, align 8, !tbaa !5
  %type565 = getelementptr inbounds %struct.ImageParameters, ptr %406, i64 0, i32 5
  %407 = load i32, ptr %type565, align 4, !tbaa !25
  %cmp566 = icmp eq i32 %407, 2
  %arrayidx571 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 8, i64 %indvars.iv1009, i64 0
  %model_number572 = getelementptr inbounds %struct.ImageParameters, ptr %406, i64 0, i32 127
  %408 = load i32, ptr %model_number572, align 8, !tbaa !31
  %idxprom573 = sext i32 %408 to i64
  %arrayidx578 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_I, i64 0, i64 %idxprom573, i64 %indvars.iv1009, i64 0
  %arrayidx592 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_P, i64 0, i64 %idxprom573, i64 %indvars.iv1009, i64 0
  %arrayidx578.sink = select i1 %cmp566, ptr %arrayidx578, ptr %arrayidx592
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx571, ptr noundef nonnull %arrayidx578.sink) #14
  %409 = load ptr, ptr @img, align 8, !tbaa !5
  %type565.1 = getelementptr inbounds %struct.ImageParameters, ptr %409, i64 0, i32 5
  %410 = load i32, ptr %type565.1, align 4, !tbaa !25
  %cmp566.1 = icmp eq i32 %410, 2
  %arrayidx571.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 8, i64 %indvars.iv1009, i64 1
  %model_number572.1 = getelementptr inbounds %struct.ImageParameters, ptr %409, i64 0, i32 127
  %411 = load i32, ptr %model_number572.1, align 8, !tbaa !31
  %idxprom573.1 = sext i32 %411 to i64
  %arrayidx578.1 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_I, i64 0, i64 %idxprom573.1, i64 %indvars.iv1009, i64 1
  %arrayidx592.1 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_P, i64 0, i64 %idxprom573.1, i64 %indvars.iv1009, i64 1
  %arrayidx578.1.sink = select i1 %cmp566.1, ptr %arrayidx578.1, ptr %arrayidx592.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx571.1, ptr noundef nonnull %arrayidx578.1.sink) #14
  %412 = load ptr, ptr @img, align 8, !tbaa !5
  %type565.2 = getelementptr inbounds %struct.ImageParameters, ptr %412, i64 0, i32 5
  %413 = load i32, ptr %type565.2, align 4, !tbaa !25
  %cmp566.2 = icmp eq i32 %413, 2
  %arrayidx571.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 8, i64 %indvars.iv1009, i64 2
  %model_number572.2 = getelementptr inbounds %struct.ImageParameters, ptr %412, i64 0, i32 127
  %414 = load i32, ptr %model_number572.2, align 8, !tbaa !31
  %idxprom573.2 = sext i32 %414 to i64
  %arrayidx578.2 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_I, i64 0, i64 %idxprom573.2, i64 %indvars.iv1009, i64 2
  %arrayidx592.2 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_P, i64 0, i64 %idxprom573.2, i64 %indvars.iv1009, i64 2
  %arrayidx578.2.sink = select i1 %cmp566.2, ptr %arrayidx578.2, ptr %arrayidx592.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx571.2, ptr noundef nonnull %arrayidx578.2.sink) #14
  %415 = load ptr, ptr @img, align 8, !tbaa !5
  %type565.3 = getelementptr inbounds %struct.ImageParameters, ptr %415, i64 0, i32 5
  %416 = load i32, ptr %type565.3, align 4, !tbaa !25
  %cmp566.3 = icmp eq i32 %416, 2
  %arrayidx571.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 8, i64 %indvars.iv1009, i64 3
  %model_number572.3 = getelementptr inbounds %struct.ImageParameters, ptr %415, i64 0, i32 127
  %417 = load i32, ptr %model_number572.3, align 8, !tbaa !31
  %idxprom573.3 = sext i32 %417 to i64
  %arrayidx578.3 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_I, i64 0, i64 %idxprom573.3, i64 %indvars.iv1009, i64 3
  %arrayidx592.3 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_P, i64 0, i64 %idxprom573.3, i64 %indvars.iv1009, i64 3
  %arrayidx578.3.sink = select i1 %cmp566.3, ptr %arrayidx578.3, ptr %arrayidx592.3
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx571.3, ptr noundef nonnull %arrayidx578.3.sink) #14
  %418 = load ptr, ptr @img, align 8, !tbaa !5
  %type565.4 = getelementptr inbounds %struct.ImageParameters, ptr %418, i64 0, i32 5
  %419 = load i32, ptr %type565.4, align 4, !tbaa !25
  %cmp566.4 = icmp eq i32 %419, 2
  %arrayidx571.4 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 8, i64 %indvars.iv1009, i64 4
  %model_number572.4 = getelementptr inbounds %struct.ImageParameters, ptr %418, i64 0, i32 127
  %420 = load i32, ptr %model_number572.4, align 8, !tbaa !31
  %idxprom573.4 = sext i32 %420 to i64
  %arrayidx578.4 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_I, i64 0, i64 %idxprom573.4, i64 %indvars.iv1009, i64 4
  %arrayidx592.4 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_P, i64 0, i64 %idxprom573.4, i64 %indvars.iv1009, i64 4
  %arrayidx578.4.sink = select i1 %cmp566.4, ptr %arrayidx578.4, ptr %arrayidx592.4
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx571.4, ptr noundef nonnull %arrayidx578.4.sink) #14
  %421 = load ptr, ptr @img, align 8, !tbaa !5
  %type565.5 = getelementptr inbounds %struct.ImageParameters, ptr %421, i64 0, i32 5
  %422 = load i32, ptr %type565.5, align 4, !tbaa !25
  %cmp566.5 = icmp eq i32 %422, 2
  %arrayidx571.5 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 8, i64 %indvars.iv1009, i64 5
  %model_number572.5 = getelementptr inbounds %struct.ImageParameters, ptr %421, i64 0, i32 127
  %423 = load i32, ptr %model_number572.5, align 8, !tbaa !31
  %idxprom573.5 = sext i32 %423 to i64
  %arrayidx578.5 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_I, i64 0, i64 %idxprom573.5, i64 %indvars.iv1009, i64 5
  %arrayidx592.5 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_P, i64 0, i64 %idxprom573.5, i64 %indvars.iv1009, i64 5
  %arrayidx578.5.sink = select i1 %cmp566.5, ptr %arrayidx578.5, ptr %arrayidx592.5
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx571.5, ptr noundef nonnull %arrayidx578.5.sink) #14
  %424 = load ptr, ptr @img, align 8, !tbaa !5
  %type565.6 = getelementptr inbounds %struct.ImageParameters, ptr %424, i64 0, i32 5
  %425 = load i32, ptr %type565.6, align 4, !tbaa !25
  %cmp566.6 = icmp eq i32 %425, 2
  %arrayidx571.6 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 8, i64 %indvars.iv1009, i64 6
  %model_number572.6 = getelementptr inbounds %struct.ImageParameters, ptr %424, i64 0, i32 127
  %426 = load i32, ptr %model_number572.6, align 8, !tbaa !31
  %idxprom573.6 = sext i32 %426 to i64
  %arrayidx578.6 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_I, i64 0, i64 %idxprom573.6, i64 %indvars.iv1009, i64 6
  %arrayidx592.6 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_P, i64 0, i64 %idxprom573.6, i64 %indvars.iv1009, i64 6
  %arrayidx578.6.sink = select i1 %cmp566.6, ptr %arrayidx578.6, ptr %arrayidx592.6
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx571.6, ptr noundef nonnull %arrayidx578.6.sink) #14
  %427 = load ptr, ptr @img, align 8, !tbaa !5
  %type565.7 = getelementptr inbounds %struct.ImageParameters, ptr %427, i64 0, i32 5
  %428 = load i32, ptr %type565.7, align 4, !tbaa !25
  %cmp566.7 = icmp eq i32 %428, 2
  %arrayidx571.7 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 8, i64 %indvars.iv1009, i64 7
  %model_number572.7 = getelementptr inbounds %struct.ImageParameters, ptr %427, i64 0, i32 127
  %429 = load i32, ptr %model_number572.7, align 8, !tbaa !31
  %idxprom573.7 = sext i32 %429 to i64
  %arrayidx578.7 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_I, i64 0, i64 %idxprom573.7, i64 %indvars.iv1009, i64 7
  %arrayidx592.7 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_P, i64 0, i64 %idxprom573.7, i64 %indvars.iv1009, i64 7
  %arrayidx578.7.sink = select i1 %cmp566.7, ptr %arrayidx578.7, ptr %arrayidx592.7
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx571.7, ptr noundef nonnull %arrayidx578.7.sink) #14
  %430 = load ptr, ptr @img, align 8, !tbaa !5
  %type565.8 = getelementptr inbounds %struct.ImageParameters, ptr %430, i64 0, i32 5
  %431 = load i32, ptr %type565.8, align 4, !tbaa !25
  %cmp566.8 = icmp eq i32 %431, 2
  %arrayidx571.8 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 8, i64 %indvars.iv1009, i64 8
  %model_number572.8 = getelementptr inbounds %struct.ImageParameters, ptr %430, i64 0, i32 127
  %432 = load i32, ptr %model_number572.8, align 8, !tbaa !31
  %idxprom573.8 = sext i32 %432 to i64
  %arrayidx578.8 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_I, i64 0, i64 %idxprom573.8, i64 %indvars.iv1009, i64 8
  %arrayidx592.8 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_P, i64 0, i64 %idxprom573.8, i64 %indvars.iv1009, i64 8
  %arrayidx578.8.sink = select i1 %cmp566.8, ptr %arrayidx578.8, ptr %arrayidx592.8
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx571.8, ptr noundef nonnull %arrayidx578.8.sink) #14
  %433 = load ptr, ptr @img, align 8, !tbaa !5
  %type565.9 = getelementptr inbounds %struct.ImageParameters, ptr %433, i64 0, i32 5
  %434 = load i32, ptr %type565.9, align 4, !tbaa !25
  %cmp566.9 = icmp eq i32 %434, 2
  %arrayidx571.9 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 8, i64 %indvars.iv1009, i64 9
  %model_number572.9 = getelementptr inbounds %struct.ImageParameters, ptr %433, i64 0, i32 127
  %435 = load i32, ptr %model_number572.9, align 8, !tbaa !31
  %idxprom573.9 = sext i32 %435 to i64
  %arrayidx578.9 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_I, i64 0, i64 %idxprom573.9, i64 %indvars.iv1009, i64 9
  %arrayidx592.9 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_P, i64 0, i64 %idxprom573.9, i64 %indvars.iv1009, i64 9
  %arrayidx578.9.sink = select i1 %cmp566.9, ptr %arrayidx578.9, ptr %arrayidx592.9
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx571.9, ptr noundef nonnull %arrayidx578.9.sink) #14
  %436 = load ptr, ptr @img, align 8, !tbaa !5
  %type565.10 = getelementptr inbounds %struct.ImageParameters, ptr %436, i64 0, i32 5
  %437 = load i32, ptr %type565.10, align 4, !tbaa !25
  %cmp566.10 = icmp eq i32 %437, 2
  %arrayidx571.10 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 8, i64 %indvars.iv1009, i64 10
  %model_number572.10 = getelementptr inbounds %struct.ImageParameters, ptr %436, i64 0, i32 127
  %438 = load i32, ptr %model_number572.10, align 8, !tbaa !31
  %idxprom573.10 = sext i32 %438 to i64
  %arrayidx578.10 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_I, i64 0, i64 %idxprom573.10, i64 %indvars.iv1009, i64 10
  %arrayidx592.10 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_P, i64 0, i64 %idxprom573.10, i64 %indvars.iv1009, i64 10
  %arrayidx578.10.sink = select i1 %cmp566.10, ptr %arrayidx578.10, ptr %arrayidx592.10
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx571.10, ptr noundef nonnull %arrayidx578.10.sink) #14
  %439 = load ptr, ptr @img, align 8, !tbaa !5
  %type565.11 = getelementptr inbounds %struct.ImageParameters, ptr %439, i64 0, i32 5
  %440 = load i32, ptr %type565.11, align 4, !tbaa !25
  %cmp566.11 = icmp eq i32 %440, 2
  %arrayidx571.11 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 8, i64 %indvars.iv1009, i64 11
  %model_number572.11 = getelementptr inbounds %struct.ImageParameters, ptr %439, i64 0, i32 127
  %441 = load i32, ptr %model_number572.11, align 8, !tbaa !31
  %idxprom573.11 = sext i32 %441 to i64
  %arrayidx578.11 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_I, i64 0, i64 %idxprom573.11, i64 %indvars.iv1009, i64 11
  %arrayidx592.11 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_P, i64 0, i64 %idxprom573.11, i64 %indvars.iv1009, i64 11
  %arrayidx578.11.sink = select i1 %cmp566.11, ptr %arrayidx578.11, ptr %arrayidx592.11
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx571.11, ptr noundef nonnull %arrayidx578.11.sink) #14
  %442 = load ptr, ptr @img, align 8, !tbaa !5
  %type565.12 = getelementptr inbounds %struct.ImageParameters, ptr %442, i64 0, i32 5
  %443 = load i32, ptr %type565.12, align 4, !tbaa !25
  %cmp566.12 = icmp eq i32 %443, 2
  %arrayidx571.12 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 8, i64 %indvars.iv1009, i64 12
  %model_number572.12 = getelementptr inbounds %struct.ImageParameters, ptr %442, i64 0, i32 127
  %444 = load i32, ptr %model_number572.12, align 8, !tbaa !31
  %idxprom573.12 = sext i32 %444 to i64
  %arrayidx578.12 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_I, i64 0, i64 %idxprom573.12, i64 %indvars.iv1009, i64 12
  %arrayidx592.12 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_P, i64 0, i64 %idxprom573.12, i64 %indvars.iv1009, i64 12
  %arrayidx578.12.sink = select i1 %cmp566.12, ptr %arrayidx578.12, ptr %arrayidx592.12
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx571.12, ptr noundef nonnull %arrayidx578.12.sink) #14
  %445 = load ptr, ptr @img, align 8, !tbaa !5
  %type565.13 = getelementptr inbounds %struct.ImageParameters, ptr %445, i64 0, i32 5
  %446 = load i32, ptr %type565.13, align 4, !tbaa !25
  %cmp566.13 = icmp eq i32 %446, 2
  %arrayidx571.13 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 8, i64 %indvars.iv1009, i64 13
  %model_number572.13 = getelementptr inbounds %struct.ImageParameters, ptr %445, i64 0, i32 127
  %447 = load i32, ptr %model_number572.13, align 8, !tbaa !31
  %idxprom573.13 = sext i32 %447 to i64
  %arrayidx578.13 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_I, i64 0, i64 %idxprom573.13, i64 %indvars.iv1009, i64 13
  %arrayidx592.13 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_P, i64 0, i64 %idxprom573.13, i64 %indvars.iv1009, i64 13
  %arrayidx578.13.sink = select i1 %cmp566.13, ptr %arrayidx578.13, ptr %arrayidx592.13
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx571.13, ptr noundef nonnull %arrayidx578.13.sink) #14
  %448 = load ptr, ptr @img, align 8, !tbaa !5
  %type565.14 = getelementptr inbounds %struct.ImageParameters, ptr %448, i64 0, i32 5
  %449 = load i32, ptr %type565.14, align 4, !tbaa !25
  %cmp566.14 = icmp eq i32 %449, 2
  %arrayidx571.14 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 8, i64 %indvars.iv1009, i64 14
  %model_number572.14 = getelementptr inbounds %struct.ImageParameters, ptr %448, i64 0, i32 127
  %450 = load i32, ptr %model_number572.14, align 8, !tbaa !31
  %idxprom573.14 = sext i32 %450 to i64
  %arrayidx578.14 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_I, i64 0, i64 %idxprom573.14, i64 %indvars.iv1009, i64 14
  %arrayidx592.14 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_P, i64 0, i64 %idxprom573.14, i64 %indvars.iv1009, i64 14
  %arrayidx578.14.sink = select i1 %cmp566.14, ptr %arrayidx578.14, ptr %arrayidx592.14
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx571.14, ptr noundef nonnull %arrayidx578.14.sink) #14
  %indvars.iv.next1010 = add nuw nsw i64 %indvars.iv1009, 1
  %exitcond1012.not = icmp eq i64 %indvars.iv.next1010, 8
  br i1 %exitcond1012.not, label %for.cond604.preheader, label %for.cond562.preheader, !llvm.loop !40

for.cond604.preheader:                            ; preds = %for.cond562.preheader, %for.cond604.preheader
  %indvars.iv1017 = phi i64 [ %indvars.iv.next1018, %for.cond604.preheader ], [ 0, %for.cond562.preheader ]
  %451 = load ptr, ptr @img, align 8, !tbaa !5
  %type607 = getelementptr inbounds %struct.ImageParameters, ptr %451, i64 0, i32 5
  %452 = load i32, ptr %type607, align 4, !tbaa !25
  %cmp608 = icmp eq i32 %452, 2
  %arrayidx613 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 9, i64 %indvars.iv1017, i64 0
  %model_number614 = getelementptr inbounds %struct.ImageParameters, ptr %451, i64 0, i32 127
  %453 = load i32, ptr %model_number614, align 8, !tbaa !31
  %idxprom615 = sext i32 %453 to i64
  %arrayidx620 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_I, i64 0, i64 %idxprom615, i64 %indvars.iv1017, i64 0
  %arrayidx634 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_P, i64 0, i64 %idxprom615, i64 %indvars.iv1017, i64 0
  %arrayidx620.sink = select i1 %cmp608, ptr %arrayidx620, ptr %arrayidx634
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx613, ptr noundef nonnull %arrayidx620.sink) #14
  %454 = load ptr, ptr @img, align 8, !tbaa !5
  %type607.1 = getelementptr inbounds %struct.ImageParameters, ptr %454, i64 0, i32 5
  %455 = load i32, ptr %type607.1, align 4, !tbaa !25
  %cmp608.1 = icmp eq i32 %455, 2
  %arrayidx613.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 9, i64 %indvars.iv1017, i64 1
  %model_number614.1 = getelementptr inbounds %struct.ImageParameters, ptr %454, i64 0, i32 127
  %456 = load i32, ptr %model_number614.1, align 8, !tbaa !31
  %idxprom615.1 = sext i32 %456 to i64
  %arrayidx620.1 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_I, i64 0, i64 %idxprom615.1, i64 %indvars.iv1017, i64 1
  %arrayidx634.1 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_P, i64 0, i64 %idxprom615.1, i64 %indvars.iv1017, i64 1
  %arrayidx620.1.sink = select i1 %cmp608.1, ptr %arrayidx620.1, ptr %arrayidx634.1
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx613.1, ptr noundef nonnull %arrayidx620.1.sink) #14
  %457 = load ptr, ptr @img, align 8, !tbaa !5
  %type607.2 = getelementptr inbounds %struct.ImageParameters, ptr %457, i64 0, i32 5
  %458 = load i32, ptr %type607.2, align 4, !tbaa !25
  %cmp608.2 = icmp eq i32 %458, 2
  %arrayidx613.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 9, i64 %indvars.iv1017, i64 2
  %model_number614.2 = getelementptr inbounds %struct.ImageParameters, ptr %457, i64 0, i32 127
  %459 = load i32, ptr %model_number614.2, align 8, !tbaa !31
  %idxprom615.2 = sext i32 %459 to i64
  %arrayidx620.2 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_I, i64 0, i64 %idxprom615.2, i64 %indvars.iv1017, i64 2
  %arrayidx634.2 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_P, i64 0, i64 %idxprom615.2, i64 %indvars.iv1017, i64 2
  %arrayidx620.2.sink = select i1 %cmp608.2, ptr %arrayidx620.2, ptr %arrayidx634.2
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx613.2, ptr noundef nonnull %arrayidx620.2.sink) #14
  %460 = load ptr, ptr @img, align 8, !tbaa !5
  %type607.3 = getelementptr inbounds %struct.ImageParameters, ptr %460, i64 0, i32 5
  %461 = load i32, ptr %type607.3, align 4, !tbaa !25
  %cmp608.3 = icmp eq i32 %461, 2
  %arrayidx613.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 9, i64 %indvars.iv1017, i64 3
  %model_number614.3 = getelementptr inbounds %struct.ImageParameters, ptr %460, i64 0, i32 127
  %462 = load i32, ptr %model_number614.3, align 8, !tbaa !31
  %idxprom615.3 = sext i32 %462 to i64
  %arrayidx620.3 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_I, i64 0, i64 %idxprom615.3, i64 %indvars.iv1017, i64 3
  %arrayidx634.3 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_P, i64 0, i64 %idxprom615.3, i64 %indvars.iv1017, i64 3
  %arrayidx620.3.sink = select i1 %cmp608.3, ptr %arrayidx620.3, ptr %arrayidx634.3
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx613.3, ptr noundef nonnull %arrayidx620.3.sink) #14
  %463 = load ptr, ptr @img, align 8, !tbaa !5
  %type607.4 = getelementptr inbounds %struct.ImageParameters, ptr %463, i64 0, i32 5
  %464 = load i32, ptr %type607.4, align 4, !tbaa !25
  %cmp608.4 = icmp eq i32 %464, 2
  %arrayidx613.4 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 9, i64 %indvars.iv1017, i64 4
  %model_number614.4 = getelementptr inbounds %struct.ImageParameters, ptr %463, i64 0, i32 127
  %465 = load i32, ptr %model_number614.4, align 8, !tbaa !31
  %idxprom615.4 = sext i32 %465 to i64
  %arrayidx620.4 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_I, i64 0, i64 %idxprom615.4, i64 %indvars.iv1017, i64 4
  %arrayidx634.4 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_P, i64 0, i64 %idxprom615.4, i64 %indvars.iv1017, i64 4
  %arrayidx620.4.sink = select i1 %cmp608.4, ptr %arrayidx620.4, ptr %arrayidx634.4
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx613.4, ptr noundef nonnull %arrayidx620.4.sink) #14
  %466 = load ptr, ptr @img, align 8, !tbaa !5
  %type607.5 = getelementptr inbounds %struct.ImageParameters, ptr %466, i64 0, i32 5
  %467 = load i32, ptr %type607.5, align 4, !tbaa !25
  %cmp608.5 = icmp eq i32 %467, 2
  %arrayidx613.5 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 9, i64 %indvars.iv1017, i64 5
  %model_number614.5 = getelementptr inbounds %struct.ImageParameters, ptr %466, i64 0, i32 127
  %468 = load i32, ptr %model_number614.5, align 8, !tbaa !31
  %idxprom615.5 = sext i32 %468 to i64
  %arrayidx620.5 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_I, i64 0, i64 %idxprom615.5, i64 %indvars.iv1017, i64 5
  %arrayidx634.5 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_P, i64 0, i64 %idxprom615.5, i64 %indvars.iv1017, i64 5
  %arrayidx620.5.sink = select i1 %cmp608.5, ptr %arrayidx620.5, ptr %arrayidx634.5
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx613.5, ptr noundef nonnull %arrayidx620.5.sink) #14
  %469 = load ptr, ptr @img, align 8, !tbaa !5
  %type607.6 = getelementptr inbounds %struct.ImageParameters, ptr %469, i64 0, i32 5
  %470 = load i32, ptr %type607.6, align 4, !tbaa !25
  %cmp608.6 = icmp eq i32 %470, 2
  %arrayidx613.6 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 9, i64 %indvars.iv1017, i64 6
  %model_number614.6 = getelementptr inbounds %struct.ImageParameters, ptr %469, i64 0, i32 127
  %471 = load i32, ptr %model_number614.6, align 8, !tbaa !31
  %idxprom615.6 = sext i32 %471 to i64
  %arrayidx620.6 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_I, i64 0, i64 %idxprom615.6, i64 %indvars.iv1017, i64 6
  %arrayidx634.6 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_P, i64 0, i64 %idxprom615.6, i64 %indvars.iv1017, i64 6
  %arrayidx620.6.sink = select i1 %cmp608.6, ptr %arrayidx620.6, ptr %arrayidx634.6
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx613.6, ptr noundef nonnull %arrayidx620.6.sink) #14
  %472 = load ptr, ptr @img, align 8, !tbaa !5
  %type607.7 = getelementptr inbounds %struct.ImageParameters, ptr %472, i64 0, i32 5
  %473 = load i32, ptr %type607.7, align 4, !tbaa !25
  %cmp608.7 = icmp eq i32 %473, 2
  %arrayidx613.7 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 9, i64 %indvars.iv1017, i64 7
  %model_number614.7 = getelementptr inbounds %struct.ImageParameters, ptr %472, i64 0, i32 127
  %474 = load i32, ptr %model_number614.7, align 8, !tbaa !31
  %idxprom615.7 = sext i32 %474 to i64
  %arrayidx620.7 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_I, i64 0, i64 %idxprom615.7, i64 %indvars.iv1017, i64 7
  %arrayidx634.7 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_P, i64 0, i64 %idxprom615.7, i64 %indvars.iv1017, i64 7
  %arrayidx620.7.sink = select i1 %cmp608.7, ptr %arrayidx620.7, ptr %arrayidx634.7
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx613.7, ptr noundef nonnull %arrayidx620.7.sink) #14
  %475 = load ptr, ptr @img, align 8, !tbaa !5
  %type607.8 = getelementptr inbounds %struct.ImageParameters, ptr %475, i64 0, i32 5
  %476 = load i32, ptr %type607.8, align 4, !tbaa !25
  %cmp608.8 = icmp eq i32 %476, 2
  %arrayidx613.8 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 9, i64 %indvars.iv1017, i64 8
  %model_number614.8 = getelementptr inbounds %struct.ImageParameters, ptr %475, i64 0, i32 127
  %477 = load i32, ptr %model_number614.8, align 8, !tbaa !31
  %idxprom615.8 = sext i32 %477 to i64
  %arrayidx620.8 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_I, i64 0, i64 %idxprom615.8, i64 %indvars.iv1017, i64 8
  %arrayidx634.8 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_P, i64 0, i64 %idxprom615.8, i64 %indvars.iv1017, i64 8
  %arrayidx620.8.sink = select i1 %cmp608.8, ptr %arrayidx620.8, ptr %arrayidx634.8
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx613.8, ptr noundef nonnull %arrayidx620.8.sink) #14
  %478 = load ptr, ptr @img, align 8, !tbaa !5
  %type607.9 = getelementptr inbounds %struct.ImageParameters, ptr %478, i64 0, i32 5
  %479 = load i32, ptr %type607.9, align 4, !tbaa !25
  %cmp608.9 = icmp eq i32 %479, 2
  %arrayidx613.9 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 9, i64 %indvars.iv1017, i64 9
  %model_number614.9 = getelementptr inbounds %struct.ImageParameters, ptr %478, i64 0, i32 127
  %480 = load i32, ptr %model_number614.9, align 8, !tbaa !31
  %idxprom615.9 = sext i32 %480 to i64
  %arrayidx620.9 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_I, i64 0, i64 %idxprom615.9, i64 %indvars.iv1017, i64 9
  %arrayidx634.9 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_P, i64 0, i64 %idxprom615.9, i64 %indvars.iv1017, i64 9
  %arrayidx620.9.sink = select i1 %cmp608.9, ptr %arrayidx620.9, ptr %arrayidx634.9
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx613.9, ptr noundef nonnull %arrayidx620.9.sink) #14
  %481 = load ptr, ptr @img, align 8, !tbaa !5
  %type607.10 = getelementptr inbounds %struct.ImageParameters, ptr %481, i64 0, i32 5
  %482 = load i32, ptr %type607.10, align 4, !tbaa !25
  %cmp608.10 = icmp eq i32 %482, 2
  %arrayidx613.10 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 9, i64 %indvars.iv1017, i64 10
  %model_number614.10 = getelementptr inbounds %struct.ImageParameters, ptr %481, i64 0, i32 127
  %483 = load i32, ptr %model_number614.10, align 8, !tbaa !31
  %idxprom615.10 = sext i32 %483 to i64
  %arrayidx620.10 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_I, i64 0, i64 %idxprom615.10, i64 %indvars.iv1017, i64 10
  %arrayidx634.10 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_P, i64 0, i64 %idxprom615.10, i64 %indvars.iv1017, i64 10
  %arrayidx620.10.sink = select i1 %cmp608.10, ptr %arrayidx620.10, ptr %arrayidx634.10
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx613.10, ptr noundef nonnull %arrayidx620.10.sink) #14
  %484 = load ptr, ptr @img, align 8, !tbaa !5
  %type607.11 = getelementptr inbounds %struct.ImageParameters, ptr %484, i64 0, i32 5
  %485 = load i32, ptr %type607.11, align 4, !tbaa !25
  %cmp608.11 = icmp eq i32 %485, 2
  %arrayidx613.11 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 9, i64 %indvars.iv1017, i64 11
  %model_number614.11 = getelementptr inbounds %struct.ImageParameters, ptr %484, i64 0, i32 127
  %486 = load i32, ptr %model_number614.11, align 8, !tbaa !31
  %idxprom615.11 = sext i32 %486 to i64
  %arrayidx620.11 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_I, i64 0, i64 %idxprom615.11, i64 %indvars.iv1017, i64 11
  %arrayidx634.11 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_P, i64 0, i64 %idxprom615.11, i64 %indvars.iv1017, i64 11
  %arrayidx620.11.sink = select i1 %cmp608.11, ptr %arrayidx620.11, ptr %arrayidx634.11
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx613.11, ptr noundef nonnull %arrayidx620.11.sink) #14
  %487 = load ptr, ptr @img, align 8, !tbaa !5
  %type607.12 = getelementptr inbounds %struct.ImageParameters, ptr %487, i64 0, i32 5
  %488 = load i32, ptr %type607.12, align 4, !tbaa !25
  %cmp608.12 = icmp eq i32 %488, 2
  %arrayidx613.12 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 9, i64 %indvars.iv1017, i64 12
  %model_number614.12 = getelementptr inbounds %struct.ImageParameters, ptr %487, i64 0, i32 127
  %489 = load i32, ptr %model_number614.12, align 8, !tbaa !31
  %idxprom615.12 = sext i32 %489 to i64
  %arrayidx620.12 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_I, i64 0, i64 %idxprom615.12, i64 %indvars.iv1017, i64 12
  %arrayidx634.12 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_P, i64 0, i64 %idxprom615.12, i64 %indvars.iv1017, i64 12
  %arrayidx620.12.sink = select i1 %cmp608.12, ptr %arrayidx620.12, ptr %arrayidx634.12
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx613.12, ptr noundef nonnull %arrayidx620.12.sink) #14
  %490 = load ptr, ptr @img, align 8, !tbaa !5
  %type607.13 = getelementptr inbounds %struct.ImageParameters, ptr %490, i64 0, i32 5
  %491 = load i32, ptr %type607.13, align 4, !tbaa !25
  %cmp608.13 = icmp eq i32 %491, 2
  %arrayidx613.13 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 9, i64 %indvars.iv1017, i64 13
  %model_number614.13 = getelementptr inbounds %struct.ImageParameters, ptr %490, i64 0, i32 127
  %492 = load i32, ptr %model_number614.13, align 8, !tbaa !31
  %idxprom615.13 = sext i32 %492 to i64
  %arrayidx620.13 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_I, i64 0, i64 %idxprom615.13, i64 %indvars.iv1017, i64 13
  %arrayidx634.13 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_P, i64 0, i64 %idxprom615.13, i64 %indvars.iv1017, i64 13
  %arrayidx620.13.sink = select i1 %cmp608.13, ptr %arrayidx620.13, ptr %arrayidx634.13
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx613.13, ptr noundef nonnull %arrayidx620.13.sink) #14
  %493 = load ptr, ptr @img, align 8, !tbaa !5
  %type607.14 = getelementptr inbounds %struct.ImageParameters, ptr %493, i64 0, i32 5
  %494 = load i32, ptr %type607.14, align 4, !tbaa !25
  %cmp608.14 = icmp eq i32 %494, 2
  %arrayidx613.14 = getelementptr inbounds %struct.TextureInfoContexts, ptr %3, i64 0, i32 9, i64 %indvars.iv1017, i64 14
  %model_number614.14 = getelementptr inbounds %struct.ImageParameters, ptr %493, i64 0, i32 127
  %495 = load i32, ptr %model_number614.14, align 8, !tbaa !31
  %idxprom615.14 = sext i32 %495 to i64
  %arrayidx620.14 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_I, i64 0, i64 %idxprom615.14, i64 %indvars.iv1017, i64 14
  %arrayidx634.14 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_P, i64 0, i64 %idxprom615.14, i64 %indvars.iv1017, i64 14
  %arrayidx620.14.sink = select i1 %cmp608.14, ptr %arrayidx620.14, ptr %arrayidx634.14
  tail call void @biari_init_context(ptr noundef nonnull %arrayidx613.14, ptr noundef nonnull %arrayidx620.14.sink) #14
  %indvars.iv.next1018 = add nuw nsw i64 %indvars.iv1017, 1
  %exitcond1020.not = icmp eq i64 %indvars.iv.next1018, 8
  br i1 %exitcond1020.not, label %for.end642, label %for.cond604.preheader, !llvm.loop !41

for.end642:                                       ; preds = %for.cond604.preheader
  ret void
}

declare void @biari_init_context(ptr noundef, ptr noundef) local_unnamed_addr #2

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local double @XRate(ptr nocapture noundef readonly %ctx, ptr nocapture noundef readonly %model) local_unnamed_addr #7 {
entry:
  %0 = load ptr, ptr @img, align 8, !tbaa !5
  %qp1 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 9
  %1 = load i32, ptr %qp1, align 4, !tbaa !42
  %count = getelementptr inbounds %struct.BiContextType, ptr %ctx, i64 0, i32 2
  %2 = load i64, ptr %count, align 8, !tbaa !43
  %3 = load i32, ptr %model, align 4, !tbaa !18
  %arrayidx3 = getelementptr inbounds i32, ptr %model, i64 1
  %4 = load i32, ptr %arrayidx3, align 4, !tbaa !18
  %MPS = getelementptr inbounds %struct.BiContextType, ptr %ctx, i64 0, i32 1
  %5 = load i8, ptr %MPS, align 2, !tbaa !46
  %tobool.not = icmp eq i8 %5, 0
  %6 = load i16, ptr %ctx, align 8, !tbaa !47
  %conv9 = zext i16 %6 to i32
  %add7 = add nuw nsw i32 %conv9, 64
  %sub = sub nsw i32 63, %conv9
  %cond = select i1 %tobool.not, i32 %sub, i32 %add7
  %cond.i = tail call i32 @llvm.smax.i32(i32 %1, i32 0)
  %mul = mul nsw i32 %3, %cond.i
  %shr = ashr i32 %mul, 4
  %add = add nsw i32 %shr, %4
  %cond.i.i = tail call i32 @llvm.smax.i32(i32 %add, i32 0)
  %cond.i4.i = tail call i32 @llvm.smin.i32(i32 %cond.i.i, i32 127)
  %conv = uitofp i64 %2 to double
  %div = fmul double %conv, 3.125000e-02
  %cmp.i = fcmp ogt double %div, 1.000000e+00
  %cond.i34 = select i1 %cmp.i, double 1.000000e+00, double %div
  %idxprom = sext i32 %cond to i64
  %arrayidx10 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom
  %7 = load double, ptr %arrayidx10, align 8, !tbaa !22
  %idxprom12 = zext i32 %cond.i4.i to i64
  %arrayidx13 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12
  %8 = load double, ptr %arrayidx13, align 8, !tbaa !22
  %9 = fneg double %cond.i34
  %neg = fmul double %7, %9
  %10 = tail call double @llvm.fmuladd.f64(double %neg, double %8, double 0.000000e+00)
  %sub15 = sub nsw i32 127, %cond
  %idxprom16 = sext i32 %sub15 to i64
  %arrayidx17 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16
  %11 = load double, ptr %arrayidx17, align 8, !tbaa !22
  %sub19 = xor i32 %cond.i4.i, 127
  %idxprom20 = zext i32 %sub19 to i64
  %arrayidx21 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20
  %12 = load double, ptr %arrayidx21, align 8, !tbaa !22
  %neg23 = fmul double %11, %9
  %13 = tail call double @llvm.fmuladd.f64(double %neg23, double %12, double %10)
  ret double %13
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #8

; Function Attrs: nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @GetCtxModelNumber(ptr nocapture noundef writeonly %mnumber, ptr noundef readonly %mc, ptr noundef readonly %tc) local_unnamed_addr #9 {
entry:
  %0 = load ptr, ptr @img, align 8, !tbaa !5
  %type = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 5
  %1 = load i32, ptr %type, align 4, !tbaa !25
  %cmp = icmp ne i32 %1, 2
  %qp1.i961 = getelementptr inbounds %struct.ImageParameters, ptr %0, i64 0, i32 9
  %arrayidx251 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 6, i64 0
  %count.i1334 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 6, i64 0, i32 2
  %MPS.i1336 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 6, i64 0, i32 1
  %arrayidx251.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 6, i64 1
  %count.i1334.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 6, i64 1, i32 2
  %MPS.i1336.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 6, i64 1, i32 1
  %arrayidx251.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 6, i64 2
  %count.i1334.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 6, i64 2, i32 2
  %MPS.i1336.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 6, i64 2, i32 1
  %count.i1396 = getelementptr inbounds [2 x %struct.BiContextType], ptr %tc, i64 0, i64 0, i32 2
  %MPS.i1398 = getelementptr inbounds [2 x %struct.BiContextType], ptr %tc, i64 0, i64 0, i32 1
  %arrayidx283.1 = getelementptr inbounds [2 x %struct.BiContextType], ptr %tc, i64 0, i64 1
  %count.i1396.1 = getelementptr inbounds [2 x %struct.BiContextType], ptr %tc, i64 0, i64 1, i32 2
  %MPS.i1398.1 = getelementptr inbounds [2 x %struct.BiContextType], ptr %tc, i64 0, i64 1, i32 1
  %arrayidx239 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 6, i64 0
  %count.i1303 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 6, i64 0, i32 2
  %MPS.i1305 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 6, i64 0, i32 1
  %arrayidx239.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 6, i64 1
  %count.i1303.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 6, i64 1, i32 2
  %MPS.i1305.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 6, i64 1, i32 1
  %arrayidx239.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 6, i64 2
  %count.i1303.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 6, i64 2, i32 2
  %MPS.i1305.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 6, i64 2, i32 1
  %count.i1365 = getelementptr inbounds [2 x %struct.BiContextType], ptr %tc, i64 0, i64 0, i32 2
  %MPS.i1367 = getelementptr inbounds [2 x %struct.BiContextType], ptr %tc, i64 0, i64 0, i32 1
  %arrayidx271.1 = getelementptr inbounds [2 x %struct.BiContextType], ptr %tc, i64 0, i64 1
  %count.i1365.1 = getelementptr inbounds [2 x %struct.BiContextType], ptr %tc, i64 0, i64 1, i32 2
  %MPS.i1367.1 = getelementptr inbounds [2 x %struct.BiContextType], ptr %tc, i64 0, i64 1, i32 1
  %arrayidx175 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 4, i64 0
  %count.i1179 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 4, i64 0, i32 2
  %2 = load i64, ptr %count.i1179, align 8, !tbaa !43
  %MPS.i1181 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 4, i64 0, i32 1
  %3 = load i8, ptr %MPS.i1181, align 2, !tbaa !46
  %tobool.not.i1182 = icmp eq i8 %3, 0
  %4 = load i16, ptr %arrayidx175, align 8, !tbaa !47
  %conv9.i1183 = zext i16 %4 to i32
  %add7.i1184 = add nuw nsw i32 %conv9.i1183, 64
  %sub.i1185 = sub nsw i32 63, %conv9.i1183
  %cond.i1186 = select i1 %tobool.not.i1182, i32 %sub.i1185, i32 %add7.i1184
  %conv.i1193 = uitofp i64 %2 to double
  %div.i1194 = fmul double %conv.i1193, 3.125000e-02
  %cmp.i.i1195 = fcmp ogt double %div.i1194, 1.000000e+00
  %cond.i34.i1196 = select i1 %cmp.i.i1195, double 1.000000e+00, double %div.i1194
  %idxprom.i1197 = sext i32 %cond.i1186 to i64
  %arrayidx10.i1198 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1197
  %5 = load double, ptr %arrayidx10.i1198, align 8, !tbaa !22
  %6 = fneg double %cond.i34.i1196
  %neg.i1201 = fmul double %5, %6
  %sub15.i1202 = sub nsw i32 127, %cond.i1186
  %idxprom16.i1203 = sext i32 %sub15.i1202 to i64
  %arrayidx17.i1204 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1203
  %7 = load double, ptr %arrayidx17.i1204, align 8, !tbaa !22
  %neg23.i1208 = fmul double %7, %6
  %arrayidx175.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 4, i64 1
  %count.i1179.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 4, i64 1, i32 2
  %8 = load i64, ptr %count.i1179.1, align 8, !tbaa !43
  %MPS.i1181.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 4, i64 1, i32 1
  %9 = load i8, ptr %MPS.i1181.1, align 2, !tbaa !46
  %tobool.not.i1182.1 = icmp eq i8 %9, 0
  %10 = load i16, ptr %arrayidx175.1, align 8, !tbaa !47
  %conv9.i1183.1 = zext i16 %10 to i32
  %add7.i1184.1 = add nuw nsw i32 %conv9.i1183.1, 64
  %sub.i1185.1 = sub nsw i32 63, %conv9.i1183.1
  %cond.i1186.1 = select i1 %tobool.not.i1182.1, i32 %sub.i1185.1, i32 %add7.i1184.1
  %conv.i1193.1 = uitofp i64 %8 to double
  %div.i1194.1 = fmul double %conv.i1193.1, 3.125000e-02
  %cmp.i.i1195.1 = fcmp ogt double %div.i1194.1, 1.000000e+00
  %cond.i34.i1196.1 = select i1 %cmp.i.i1195.1, double 1.000000e+00, double %div.i1194.1
  %idxprom.i1197.1 = sext i32 %cond.i1186.1 to i64
  %arrayidx10.i1198.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1197.1
  %11 = load double, ptr %arrayidx10.i1198.1, align 8, !tbaa !22
  %12 = fneg double %cond.i34.i1196.1
  %neg.i1201.1 = fmul double %11, %12
  %sub15.i1202.1 = sub nsw i32 127, %cond.i1186.1
  %idxprom16.i1203.1 = sext i32 %sub15.i1202.1 to i64
  %arrayidx17.i1204.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1203.1
  %13 = load double, ptr %arrayidx17.i1204.1, align 8, !tbaa !22
  %neg23.i1208.1 = fmul double %13, %12
  %arrayidx175.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 4, i64 2
  %count.i1179.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 4, i64 2, i32 2
  %14 = load i64, ptr %count.i1179.2, align 8, !tbaa !43
  %MPS.i1181.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 4, i64 2, i32 1
  %15 = load i8, ptr %MPS.i1181.2, align 2, !tbaa !46
  %tobool.not.i1182.2 = icmp eq i8 %15, 0
  %16 = load i16, ptr %arrayidx175.2, align 8, !tbaa !47
  %conv9.i1183.2 = zext i16 %16 to i32
  %add7.i1184.2 = add nuw nsw i32 %conv9.i1183.2, 64
  %sub.i1185.2 = sub nsw i32 63, %conv9.i1183.2
  %cond.i1186.2 = select i1 %tobool.not.i1182.2, i32 %sub.i1185.2, i32 %add7.i1184.2
  %conv.i1193.2 = uitofp i64 %14 to double
  %div.i1194.2 = fmul double %conv.i1193.2, 3.125000e-02
  %cmp.i.i1195.2 = fcmp ogt double %div.i1194.2, 1.000000e+00
  %cond.i34.i1196.2 = select i1 %cmp.i.i1195.2, double 1.000000e+00, double %div.i1194.2
  %idxprom.i1197.2 = sext i32 %cond.i1186.2 to i64
  %arrayidx10.i1198.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1197.2
  %17 = load double, ptr %arrayidx10.i1198.2, align 8, !tbaa !22
  %18 = fneg double %cond.i34.i1196.2
  %neg.i1201.2 = fmul double %17, %18
  %sub15.i1202.2 = sub nsw i32 127, %cond.i1186.2
  %idxprom16.i1203.2 = sext i32 %sub15.i1202.2 to i64
  %arrayidx17.i1204.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1203.2
  %19 = load double, ptr %arrayidx17.i1204.2, align 8, !tbaa !22
  %neg23.i1208.2 = fmul double %19, %18
  %arrayidx175.3 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 4, i64 3
  %count.i1179.3 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 4, i64 3, i32 2
  %20 = load i64, ptr %count.i1179.3, align 8, !tbaa !43
  %MPS.i1181.3 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 4, i64 3, i32 1
  %21 = load i8, ptr %MPS.i1181.3, align 2, !tbaa !46
  %tobool.not.i1182.3 = icmp eq i8 %21, 0
  %22 = load i16, ptr %arrayidx175.3, align 8, !tbaa !47
  %conv9.i1183.3 = zext i16 %22 to i32
  %add7.i1184.3 = add nuw nsw i32 %conv9.i1183.3, 64
  %sub.i1185.3 = sub nsw i32 63, %conv9.i1183.3
  %cond.i1186.3 = select i1 %tobool.not.i1182.3, i32 %sub.i1185.3, i32 %add7.i1184.3
  %conv.i1193.3 = uitofp i64 %20 to double
  %div.i1194.3 = fmul double %conv.i1193.3, 3.125000e-02
  %cmp.i.i1195.3 = fcmp ogt double %div.i1194.3, 1.000000e+00
  %cond.i34.i1196.3 = select i1 %cmp.i.i1195.3, double 1.000000e+00, double %div.i1194.3
  %idxprom.i1197.3 = sext i32 %cond.i1186.3 to i64
  %arrayidx10.i1198.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1197.3
  %23 = load double, ptr %arrayidx10.i1198.3, align 8, !tbaa !22
  %24 = fneg double %cond.i34.i1196.3
  %neg.i1201.3 = fmul double %23, %24
  %sub15.i1202.3 = sub nsw i32 127, %cond.i1186.3
  %idxprom16.i1203.3 = sext i32 %sub15.i1202.3 to i64
  %arrayidx17.i1204.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1203.3
  %25 = load double, ptr %arrayidx17.i1204.3, align 8, !tbaa !22
  %neg23.i1208.3 = fmul double %25, %24
  %arrayidx303 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 1, i64 0
  %count.i1427 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 1, i64 0, i32 2
  %26 = load i64, ptr %count.i1427, align 8, !tbaa !43
  %MPS.i1429 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 1, i64 0, i32 1
  %27 = load i8, ptr %MPS.i1429, align 2, !tbaa !46
  %tobool.not.i1430 = icmp eq i8 %27, 0
  %28 = load i16, ptr %arrayidx303, align 8, !tbaa !47
  %conv9.i1431 = zext i16 %28 to i32
  %add7.i1432 = add nuw nsw i32 %conv9.i1431, 64
  %sub.i1433 = sub nsw i32 63, %conv9.i1431
  %cond.i1434 = select i1 %tobool.not.i1430, i32 %sub.i1433, i32 %add7.i1432
  %conv.i1472 = uitofp i64 %26 to double
  %div.i1473 = fmul double %conv.i1472, 3.125000e-02
  %cmp.i.i1474 = fcmp ogt double %div.i1473, 1.000000e+00
  %cond.i34.i1475 = select i1 %cmp.i.i1474, double 1.000000e+00, double %div.i1473
  %idxprom.i1476 = sext i32 %cond.i1434 to i64
  %arrayidx10.i1477 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1476
  %29 = fneg double %cond.i34.i1475
  %conv.i1441 = uitofp i64 %26 to double
  %div.i1442 = fmul double %conv.i1441, 3.125000e-02
  %cmp.i.i1443 = fcmp ogt double %div.i1442, 1.000000e+00
  %cond.i34.i1444 = select i1 %cmp.i.i1443, double 1.000000e+00, double %div.i1442
  %idxprom.i1445 = sext i32 %cond.i1434 to i64
  %arrayidx10.i1446 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1445
  %30 = fneg double %cond.i34.i1444
  %sub15.i1450 = sub nsw i32 127, %cond.i1434
  %idxprom16.i1451 = sext i32 %sub15.i1450 to i64
  %arrayidx17.i1452 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1451
  %31 = load double, ptr %arrayidx17.i1452, align 8, !tbaa !22
  %arrayidx303.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 1, i64 1
  %count.i1427.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 1, i64 1, i32 2
  %32 = load i64, ptr %count.i1427.1, align 8, !tbaa !43
  %MPS.i1429.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 1, i64 1, i32 1
  %33 = load i8, ptr %MPS.i1429.1, align 2, !tbaa !46
  %tobool.not.i1430.1 = icmp eq i8 %33, 0
  %34 = load i16, ptr %arrayidx303.1, align 8, !tbaa !47
  %conv9.i1431.1 = zext i16 %34 to i32
  %add7.i1432.1 = add nuw nsw i32 %conv9.i1431.1, 64
  %sub.i1433.1 = sub nsw i32 63, %conv9.i1431.1
  %cond.i1434.1 = select i1 %tobool.not.i1430.1, i32 %sub.i1433.1, i32 %add7.i1432.1
  %conv.i1472.1 = uitofp i64 %32 to double
  %div.i1473.1 = fmul double %conv.i1472.1, 3.125000e-02
  %cmp.i.i1474.1 = fcmp ogt double %div.i1473.1, 1.000000e+00
  %cond.i34.i1475.1 = select i1 %cmp.i.i1474.1, double 1.000000e+00, double %div.i1473.1
  %idxprom.i1476.1 = sext i32 %cond.i1434.1 to i64
  %arrayidx10.i1477.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1476.1
  %35 = fneg double %cond.i34.i1475.1
  %conv.i1441.1 = uitofp i64 %32 to double
  %div.i1442.1 = fmul double %conv.i1441.1, 3.125000e-02
  %cmp.i.i1443.1 = fcmp ogt double %div.i1442.1, 1.000000e+00
  %cond.i34.i1444.1 = select i1 %cmp.i.i1443.1, double 1.000000e+00, double %div.i1442.1
  %idxprom.i1445.1 = sext i32 %cond.i1434.1 to i64
  %arrayidx10.i1446.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1445.1
  %36 = fneg double %cond.i34.i1444.1
  %sub15.i1450.1 = sub nsw i32 127, %cond.i1434.1
  %idxprom16.i1451.1 = sext i32 %sub15.i1450.1 to i64
  %arrayidx17.i1452.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1451.1
  %37 = load double, ptr %arrayidx17.i1452.1, align 8, !tbaa !22
  %arrayidx303.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 1, i64 2
  %count.i1427.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 1, i64 2, i32 2
  %38 = load i64, ptr %count.i1427.2, align 8, !tbaa !43
  %MPS.i1429.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 1, i64 2, i32 1
  %39 = load i8, ptr %MPS.i1429.2, align 2, !tbaa !46
  %tobool.not.i1430.2 = icmp eq i8 %39, 0
  %40 = load i16, ptr %arrayidx303.2, align 8, !tbaa !47
  %conv9.i1431.2 = zext i16 %40 to i32
  %add7.i1432.2 = add nuw nsw i32 %conv9.i1431.2, 64
  %sub.i1433.2 = sub nsw i32 63, %conv9.i1431.2
  %cond.i1434.2 = select i1 %tobool.not.i1430.2, i32 %sub.i1433.2, i32 %add7.i1432.2
  %conv.i1472.2 = uitofp i64 %38 to double
  %div.i1473.2 = fmul double %conv.i1472.2, 3.125000e-02
  %cmp.i.i1474.2 = fcmp ogt double %div.i1473.2, 1.000000e+00
  %cond.i34.i1475.2 = select i1 %cmp.i.i1474.2, double 1.000000e+00, double %div.i1473.2
  %idxprom.i1476.2 = sext i32 %cond.i1434.2 to i64
  %arrayidx10.i1477.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1476.2
  %41 = fneg double %cond.i34.i1475.2
  %conv.i1441.2 = uitofp i64 %38 to double
  %div.i1442.2 = fmul double %conv.i1441.2, 3.125000e-02
  %cmp.i.i1443.2 = fcmp ogt double %div.i1442.2, 1.000000e+00
  %cond.i34.i1444.2 = select i1 %cmp.i.i1443.2, double 1.000000e+00, double %div.i1442.2
  %idxprom.i1445.2 = sext i32 %cond.i1434.2 to i64
  %arrayidx10.i1446.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1445.2
  %42 = fneg double %cond.i34.i1444.2
  %sub15.i1450.2 = sub nsw i32 127, %cond.i1434.2
  %idxprom16.i1451.2 = sext i32 %sub15.i1450.2 to i64
  %arrayidx17.i1452.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1451.2
  %43 = load double, ptr %arrayidx17.i1452.2, align 8, !tbaa !22
  %arrayidx303.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 1, i64 3
  %count.i1427.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 1, i64 3, i32 2
  %44 = load i64, ptr %count.i1427.3, align 8, !tbaa !43
  %MPS.i1429.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 1, i64 3, i32 1
  %45 = load i8, ptr %MPS.i1429.3, align 2, !tbaa !46
  %tobool.not.i1430.3 = icmp eq i8 %45, 0
  %46 = load i16, ptr %arrayidx303.3, align 8, !tbaa !47
  %conv9.i1431.3 = zext i16 %46 to i32
  %add7.i1432.3 = add nuw nsw i32 %conv9.i1431.3, 64
  %sub.i1433.3 = sub nsw i32 63, %conv9.i1431.3
  %cond.i1434.3 = select i1 %tobool.not.i1430.3, i32 %sub.i1433.3, i32 %add7.i1432.3
  %conv.i1472.3 = uitofp i64 %44 to double
  %div.i1473.3 = fmul double %conv.i1472.3, 3.125000e-02
  %cmp.i.i1474.3 = fcmp ogt double %div.i1473.3, 1.000000e+00
  %cond.i34.i1475.3 = select i1 %cmp.i.i1474.3, double 1.000000e+00, double %div.i1473.3
  %idxprom.i1476.3 = sext i32 %cond.i1434.3 to i64
  %arrayidx10.i1477.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1476.3
  %47 = fneg double %cond.i34.i1475.3
  %conv.i1441.3 = uitofp i64 %44 to double
  %div.i1442.3 = fmul double %conv.i1441.3, 3.125000e-02
  %cmp.i.i1443.3 = fcmp ogt double %div.i1442.3, 1.000000e+00
  %cond.i34.i1444.3 = select i1 %cmp.i.i1443.3, double 1.000000e+00, double %div.i1442.3
  %idxprom.i1445.3 = sext i32 %cond.i1434.3 to i64
  %arrayidx10.i1446.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1445.3
  %48 = fneg double %cond.i34.i1444.3
  %sub15.i1450.3 = sub nsw i32 127, %cond.i1434.3
  %idxprom16.i1451.3 = sext i32 %sub15.i1450.3 to i64
  %arrayidx17.i1452.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1451.3
  %49 = load double, ptr %arrayidx17.i1452.3, align 8, !tbaa !22
  br label %for.cond2.preheader

for.cond2.preheaderthread-pre-split:              ; preds = %for.inc683
  %indvars.iv.next2246 = add nuw nsw i64 %indvars.iv2245, 1
  %.pr = load i32, ptr %type, align 4, !tbaa !25
  br label %for.cond2.preheader

for.cond2.preheader:                              ; preds = %for.cond2.preheaderthread-pre-split, %entry
  %50 = phi i32 [ %.pr, %for.cond2.preheaderthread-pre-split ], [ %1, %entry ]
  %indvars.iv2245 = phi i64 [ %indvars.iv.next2246, %for.cond2.preheaderthread-pre-split ], [ 0, %entry ]
  %min_xr.02074 = phi double [ %min_xr.1, %for.cond2.preheaderthread-pre-split ], [ 1.000000e+30, %entry ]
  %cmp9 = icmp eq i32 %50, 2
  %51 = load i32, ptr %qp1.i961, align 4, !tbaa !42
  %cond.i.i.us = tail call i32 @llvm.smax.i32(i32 %51, i32 0)
  br label %for.cond5.preheader

for.cond36.preheader:                             ; preds = %for.inc33
  br i1 %cmp9, label %for.body41.us, label %for.cond39.preheader.split

for.cond5.preheader:                              ; preds = %for.cond2.preheader, %for.inc33
  %indvars.iv2093 = phi i64 [ 0, %for.cond2.preheader ], [ %indvars.iv.next2094, %for.inc33 ]
  %xr.02003 = phi double [ 0.000000e+00, %for.cond2.preheader ], [ %.us-phi, %for.inc33 ]
  br i1 %cmp9, label %for.body7.us, label %for.body7

for.body7.us:                                     ; preds = %for.cond5.preheader, %for.body7.us
  %indvars.iv2089 = phi i64 [ %indvars.iv.next2090, %for.body7.us ], [ 0, %for.cond5.preheader ]
  %xr.12001.us = phi double [ %xr.2.us, %for.body7.us ], [ %xr.02003, %for.cond5.preheader ]
  %arrayidx11.us = getelementptr inbounds [3 x [11 x %struct.BiContextType]], ptr %mc, i64 0, i64 %indvars.iv2093, i64 %indvars.iv2089
  %52 = getelementptr inbounds [1 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_I, i64 0, i64 0, i64 %indvars.iv2093, i64 %indvars.iv2089
  %count.i.us = getelementptr inbounds [3 x [11 x %struct.BiContextType]], ptr %mc, i64 0, i64 %indvars.iv2093, i64 %indvars.iv2089, i32 2
  %53 = load i64, ptr %count.i.us, align 8, !tbaa !43
  %54 = load i32, ptr %52, align 8, !tbaa !18
  %55 = getelementptr inbounds [1 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_I, i64 0, i64 0, i64 %indvars.iv2093, i64 %indvars.iv2089, i64 1
  %56 = load i32, ptr %55, align 4, !tbaa !18
  %MPS.i.us = getelementptr inbounds [3 x [11 x %struct.BiContextType]], ptr %mc, i64 0, i64 %indvars.iv2093, i64 %indvars.iv2089, i32 1
  %57 = load i8, ptr %MPS.i.us, align 2, !tbaa !46
  %tobool.not.i.us = icmp eq i8 %57, 0
  %58 = load i16, ptr %arrayidx11.us, align 8, !tbaa !47
  %conv9.i.us = zext i16 %58 to i32
  %add7.i.us = add nuw nsw i32 %conv9.i.us, 64
  %sub.i.us = sub nsw i32 63, %conv9.i.us
  %cond.i.us = select i1 %tobool.not.i.us, i32 %sub.i.us, i32 %add7.i.us
  %mul.i.us = mul nsw i32 %54, %cond.i.i.us
  %shr.i.us = ashr i32 %mul.i.us, 4
  %add.i.us = add nsw i32 %shr.i.us, %56
  %cond.i.i.i.us = tail call i32 @llvm.smax.i32(i32 %add.i.us, i32 0)
  %cond.i4.i.i.us = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i.us, i32 127)
  %conv.i.us = uitofp i64 %53 to double
  %div.i.us = fmul double %conv.i.us, 3.125000e-02
  %cmp.i.i.us = fcmp ogt double %div.i.us, 1.000000e+00
  %cond.i34.i.us = select i1 %cmp.i.i.us, double 1.000000e+00, double %div.i.us
  %idxprom.i.us = sext i32 %cond.i.us to i64
  %arrayidx10.i.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i.us
  %59 = load double, ptr %arrayidx10.i.us, align 8, !tbaa !22
  %idxprom12.i.us = zext i32 %cond.i4.i.i.us to i64
  %arrayidx13.i.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i.us
  %60 = load double, ptr %arrayidx13.i.us, align 8, !tbaa !22
  %61 = fneg double %cond.i34.i.us
  %neg.i.us = fmul double %59, %61
  %62 = tail call double @llvm.fmuladd.f64(double %neg.i.us, double %60, double 0.000000e+00)
  %sub15.i.us = sub nsw i32 127, %cond.i.us
  %idxprom16.i.us = sext i32 %sub15.i.us to i64
  %arrayidx17.i.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i.us
  %63 = load double, ptr %arrayidx17.i.us, align 8, !tbaa !22
  %sub19.i.us = xor i32 %cond.i4.i.i.us, 127
  %idxprom20.i.us = zext i32 %sub19.i.us to i64
  %arrayidx21.i.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i.us
  %64 = load double, ptr %arrayidx21.i.us, align 8, !tbaa !22
  %neg23.i.us = fmul double %63, %61
  %65 = tail call double @llvm.fmuladd.f64(double %neg23.i.us, double %64, double %62)
  %xr.2.us = fadd double %xr.12001.us, %65
  %indvars.iv.next2090 = add nuw nsw i64 %indvars.iv2089, 1
  %exitcond2092.not = icmp eq i64 %indvars.iv.next2090, 11
  br i1 %exitcond2092.not, label %for.inc33, label %for.body7.us, !llvm.loop !48

for.body7:                                        ; preds = %for.cond5.preheader, %for.body7
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body7 ], [ 0, %for.cond5.preheader ]
  %xr.12001 = phi double [ %xr.2, %for.body7 ], [ %xr.02003, %for.cond5.preheader ]
  %arrayidx23 = getelementptr inbounds [3 x [11 x %struct.BiContextType]], ptr %mc, i64 0, i64 %indvars.iv2093, i64 %indvars.iv
  %arrayidx29 = getelementptr inbounds [3 x [3 x [11 x [2 x i32]]]], ptr @INIT_MB_TYPE_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2093, i64 %indvars.iv
  %count.i962 = getelementptr inbounds [3 x [11 x %struct.BiContextType]], ptr %mc, i64 0, i64 %indvars.iv2093, i64 %indvars.iv, i32 2
  %66 = load i64, ptr %count.i962, align 8, !tbaa !43
  %67 = load i32, ptr %arrayidx29, align 8, !tbaa !18
  %arrayidx3.i963 = getelementptr inbounds i32, ptr %arrayidx29, i64 1
  %68 = load i32, ptr %arrayidx3.i963, align 4, !tbaa !18
  %MPS.i964 = getelementptr inbounds [3 x [11 x %struct.BiContextType]], ptr %mc, i64 0, i64 %indvars.iv2093, i64 %indvars.iv, i32 1
  %69 = load i8, ptr %MPS.i964, align 2, !tbaa !46
  %tobool.not.i965 = icmp eq i8 %69, 0
  %70 = load i16, ptr %arrayidx23, align 8, !tbaa !47
  %conv9.i966 = zext i16 %70 to i32
  %add7.i967 = add nuw nsw i32 %conv9.i966, 64
  %sub.i968 = sub nsw i32 63, %conv9.i966
  %cond.i969 = select i1 %tobool.not.i965, i32 %sub.i968, i32 %add7.i967
  %mul.i971 = mul nsw i32 %67, %cond.i.i.us
  %shr.i972 = ashr i32 %mul.i971, 4
  %add.i973 = add nsw i32 %shr.i972, %68
  %cond.i.i.i974 = tail call i32 @llvm.smax.i32(i32 %add.i973, i32 0)
  %cond.i4.i.i975 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i974, i32 127)
  %conv.i976 = uitofp i64 %66 to double
  %div.i977 = fmul double %conv.i976, 3.125000e-02
  %cmp.i.i978 = fcmp ogt double %div.i977, 1.000000e+00
  %cond.i34.i979 = select i1 %cmp.i.i978, double 1.000000e+00, double %div.i977
  %idxprom.i980 = sext i32 %cond.i969 to i64
  %arrayidx10.i981 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i980
  %71 = load double, ptr %arrayidx10.i981, align 8, !tbaa !22
  %idxprom12.i982 = zext i32 %cond.i4.i.i975 to i64
  %arrayidx13.i983 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i982
  %72 = load double, ptr %arrayidx13.i983, align 8, !tbaa !22
  %73 = fneg double %cond.i34.i979
  %neg.i984 = fmul double %71, %73
  %74 = tail call double @llvm.fmuladd.f64(double %neg.i984, double %72, double 0.000000e+00)
  %sub15.i985 = sub nsw i32 127, %cond.i969
  %idxprom16.i986 = sext i32 %sub15.i985 to i64
  %arrayidx17.i987 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i986
  %75 = load double, ptr %arrayidx17.i987, align 8, !tbaa !22
  %sub19.i988 = xor i32 %cond.i4.i.i975, 127
  %idxprom20.i989 = zext i32 %sub19.i988 to i64
  %arrayidx21.i990 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i989
  %76 = load double, ptr %arrayidx21.i990, align 8, !tbaa !22
  %neg23.i991 = fmul double %75, %73
  %77 = tail call double @llvm.fmuladd.f64(double %neg23.i991, double %76, double %74)
  %xr.2 = fadd double %xr.12001, %77
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 11
  br i1 %exitcond.not, label %for.inc33, label %for.body7, !llvm.loop !48

for.inc33:                                        ; preds = %for.body7, %for.body7.us
  %.us-phi = phi double [ %xr.2.us, %for.body7.us ], [ %xr.2, %for.body7 ]
  %indvars.iv.next2094 = add nuw nsw i64 %indvars.iv2093, 1
  %exitcond2096.not = icmp eq i64 %indvars.iv.next2094, 3
  br i1 %exitcond2096.not, label %for.cond36.preheader, label %for.cond5.preheader, !llvm.loop !49

for.body41.us:                                    ; preds = %for.cond36.preheader, %for.body41.us
  %indvars.iv2101 = phi i64 [ %indvars.iv.next2102, %for.body41.us ], [ 0, %for.cond36.preheader ]
  %xr.42005.us = phi double [ %xr.5.us, %for.body41.us ], [ %.us-phi, %for.cond36.preheader ]
  %arrayidx48.us = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 1, i64 0, i64 %indvars.iv2101
  %count.i993.us = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 1, i64 0, i64 %indvars.iv2101, i32 2
  %78 = load i64, ptr %count.i993.us, align 8, !tbaa !43
  %79 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 0, i64 0, i64 %indvars.iv2101, i64 1
  %80 = load i32, ptr %79, align 4, !tbaa !18
  %MPS.i995.us = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 1, i64 0, i64 %indvars.iv2101, i32 1
  %81 = load i8, ptr %MPS.i995.us, align 2, !tbaa !46
  %tobool.not.i996.us = icmp eq i8 %81, 0
  %82 = load i16, ptr %arrayidx48.us, align 8, !tbaa !47
  %conv9.i997.us = zext i16 %82 to i32
  %add7.i998.us = add nuw nsw i32 %conv9.i997.us, 64
  %sub.i999.us = sub nsw i32 63, %conv9.i997.us
  %cond.i1000.us = select i1 %tobool.not.i996.us, i32 %sub.i999.us, i32 %add7.i998.us
  %cond.i.i.i1005.us = tail call i32 @llvm.smax.i32(i32 %80, i32 0)
  %cond.i4.i.i1006.us = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1005.us, i32 127)
  %conv.i1007.us = uitofp i64 %78 to double
  %div.i1008.us = fmul double %conv.i1007.us, 3.125000e-02
  %cmp.i.i1009.us = fcmp ogt double %div.i1008.us, 1.000000e+00
  %cond.i34.i1010.us = select i1 %cmp.i.i1009.us, double 1.000000e+00, double %div.i1008.us
  %idxprom.i1011.us = sext i32 %cond.i1000.us to i64
  %arrayidx10.i1012.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1011.us
  %83 = load double, ptr %arrayidx10.i1012.us, align 8, !tbaa !22
  %idxprom12.i1013.us = zext i32 %cond.i4.i.i1006.us to i64
  %arrayidx13.i1014.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1013.us
  %84 = load double, ptr %arrayidx13.i1014.us, align 8, !tbaa !22
  %85 = fneg double %cond.i34.i1010.us
  %neg.i1015.us = fmul double %83, %85
  %86 = tail call double @llvm.fmuladd.f64(double %neg.i1015.us, double %84, double 0.000000e+00)
  %sub15.i1016.us = sub nsw i32 127, %cond.i1000.us
  %idxprom16.i1017.us = sext i32 %sub15.i1016.us to i64
  %arrayidx17.i1018.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1017.us
  %87 = load double, ptr %arrayidx17.i1018.us, align 8, !tbaa !22
  %sub19.i1019.us = xor i32 %cond.i4.i.i1006.us, 127
  %idxprom20.i1020.us = zext i32 %sub19.i1019.us to i64
  %arrayidx21.i1021.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1020.us
  %88 = load double, ptr %arrayidx21.i1021.us, align 8, !tbaa !22
  %neg23.i1022.us = fmul double %87, %85
  %89 = tail call double @llvm.fmuladd.f64(double %neg23.i1022.us, double %88, double %86)
  %xr.5.us = fadd double %xr.42005.us, %89
  %indvars.iv.next2102 = add nuw nsw i64 %indvars.iv2101, 1
  %exitcond2104.not = icmp eq i64 %indvars.iv.next2102, 9
  br i1 %exitcond2104.not, label %for.inc77, label %for.body41.us, !llvm.loop !50

for.cond39.preheader.split:                       ; preds = %for.cond36.preheader
  %cond.i.i1032 = tail call i32 @llvm.smax.i32(i32 %51, i32 0)
  br label %for.body41

for.body41:                                       ; preds = %for.cond39.preheader.split, %for.body41
  %indvars.iv2097 = phi i64 [ 0, %for.cond39.preheader.split ], [ %indvars.iv.next2098, %for.body41 ]
  %xr.42005 = phi double [ %.us-phi, %for.cond39.preheader.split ], [ %xr.5, %for.body41 ]
  %arrayidx63 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 1, i64 0, i64 %indvars.iv2097
  %arrayidx69 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %indvars.iv2245, i64 0, i64 %indvars.iv2097
  %count.i1024 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 1, i64 0, i64 %indvars.iv2097, i32 2
  %90 = load i64, ptr %count.i1024, align 8, !tbaa !43
  %91 = load i32, ptr %arrayidx69, align 8, !tbaa !18
  %arrayidx3.i1025 = getelementptr inbounds i32, ptr %arrayidx69, i64 1
  %92 = load i32, ptr %arrayidx3.i1025, align 4, !tbaa !18
  %MPS.i1026 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 1, i64 0, i64 %indvars.iv2097, i32 1
  %93 = load i8, ptr %MPS.i1026, align 2, !tbaa !46
  %tobool.not.i1027 = icmp eq i8 %93, 0
  %94 = load i16, ptr %arrayidx63, align 8, !tbaa !47
  %conv9.i1028 = zext i16 %94 to i32
  %add7.i1029 = add nuw nsw i32 %conv9.i1028, 64
  %sub.i1030 = sub nsw i32 63, %conv9.i1028
  %cond.i1031 = select i1 %tobool.not.i1027, i32 %sub.i1030, i32 %add7.i1029
  %mul.i1033 = mul nsw i32 %91, %cond.i.i1032
  %shr.i1034 = ashr i32 %mul.i1033, 4
  %add.i1035 = add nsw i32 %shr.i1034, %92
  %cond.i.i.i1036 = tail call i32 @llvm.smax.i32(i32 %add.i1035, i32 0)
  %cond.i4.i.i1037 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1036, i32 127)
  %conv.i1038 = uitofp i64 %90 to double
  %div.i1039 = fmul double %conv.i1038, 3.125000e-02
  %cmp.i.i1040 = fcmp ogt double %div.i1039, 1.000000e+00
  %cond.i34.i1041 = select i1 %cmp.i.i1040, double 1.000000e+00, double %div.i1039
  %idxprom.i1042 = sext i32 %cond.i1031 to i64
  %arrayidx10.i1043 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1042
  %95 = load double, ptr %arrayidx10.i1043, align 8, !tbaa !22
  %idxprom12.i1044 = zext i32 %cond.i4.i.i1037 to i64
  %arrayidx13.i1045 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1044
  %96 = load double, ptr %arrayidx13.i1045, align 8, !tbaa !22
  %97 = fneg double %cond.i34.i1041
  %neg.i1046 = fmul double %95, %97
  %98 = tail call double @llvm.fmuladd.f64(double %neg.i1046, double %96, double 0.000000e+00)
  %sub15.i1047 = sub nsw i32 127, %cond.i1031
  %idxprom16.i1048 = sext i32 %sub15.i1047 to i64
  %arrayidx17.i1049 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1048
  %99 = load double, ptr %arrayidx17.i1049, align 8, !tbaa !22
  %sub19.i1050 = xor i32 %cond.i4.i.i1037, 127
  %idxprom20.i1051 = zext i32 %sub19.i1050 to i64
  %arrayidx21.i1052 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1051
  %100 = load double, ptr %arrayidx21.i1052, align 8, !tbaa !22
  %neg23.i1053 = fmul double %99, %97
  %101 = tail call double @llvm.fmuladd.f64(double %neg23.i1053, double %100, double %98)
  %xr.5 = fadd double %xr.42005, %101
  %indvars.iv.next2098 = add nuw nsw i64 %indvars.iv2097, 1
  %exitcond2100.not = icmp eq i64 %indvars.iv.next2098, 9
  br i1 %exitcond2100.not, label %for.inc77, label %for.body41, !llvm.loop !50

for.inc77:                                        ; preds = %for.body41, %for.body41.us
  %.us-phi2006 = phi double [ %xr.5.us, %for.body41.us ], [ %xr.5, %for.body41 ]
  br i1 %cmp9, label %for.body41.us.1, label %for.cond39.preheader.split.1

for.cond39.preheader.split.1:                     ; preds = %for.inc77
  %cond.i.i1032.1 = tail call i32 @llvm.smax.i32(i32 %51, i32 0)
  br label %for.body41.1

for.body41.1:                                     ; preds = %for.body41.1, %for.cond39.preheader.split.1
  %indvars.iv2097.1 = phi i64 [ 0, %for.cond39.preheader.split.1 ], [ %indvars.iv.next2098.1, %for.body41.1 ]
  %xr.42005.1 = phi double [ %.us-phi2006, %for.cond39.preheader.split.1 ], [ %xr.5.1, %for.body41.1 ]
  %arrayidx63.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 1, i64 1, i64 %indvars.iv2097.1
  %arrayidx69.1 = getelementptr inbounds [3 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_P, i64 0, i64 %indvars.iv2245, i64 1, i64 %indvars.iv2097.1
  %count.i1024.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 1, i64 1, i64 %indvars.iv2097.1, i32 2
  %102 = load i64, ptr %count.i1024.1, align 8, !tbaa !43
  %103 = load i32, ptr %arrayidx69.1, align 8, !tbaa !18
  %arrayidx3.i1025.1 = getelementptr inbounds i32, ptr %arrayidx69.1, i64 1
  %104 = load i32, ptr %arrayidx3.i1025.1, align 4, !tbaa !18
  %MPS.i1026.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 1, i64 1, i64 %indvars.iv2097.1, i32 1
  %105 = load i8, ptr %MPS.i1026.1, align 2, !tbaa !46
  %tobool.not.i1027.1 = icmp eq i8 %105, 0
  %106 = load i16, ptr %arrayidx63.1, align 8, !tbaa !47
  %conv9.i1028.1 = zext i16 %106 to i32
  %add7.i1029.1 = add nuw nsw i32 %conv9.i1028.1, 64
  %sub.i1030.1 = sub nsw i32 63, %conv9.i1028.1
  %cond.i1031.1 = select i1 %tobool.not.i1027.1, i32 %sub.i1030.1, i32 %add7.i1029.1
  %mul.i1033.1 = mul nsw i32 %103, %cond.i.i1032.1
  %shr.i1034.1 = ashr i32 %mul.i1033.1, 4
  %add.i1035.1 = add nsw i32 %shr.i1034.1, %104
  %cond.i.i.i1036.1 = tail call i32 @llvm.smax.i32(i32 %add.i1035.1, i32 0)
  %cond.i4.i.i1037.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1036.1, i32 127)
  %conv.i1038.1 = uitofp i64 %102 to double
  %div.i1039.1 = fmul double %conv.i1038.1, 3.125000e-02
  %cmp.i.i1040.1 = fcmp ogt double %div.i1039.1, 1.000000e+00
  %cond.i34.i1041.1 = select i1 %cmp.i.i1040.1, double 1.000000e+00, double %div.i1039.1
  %idxprom.i1042.1 = sext i32 %cond.i1031.1 to i64
  %arrayidx10.i1043.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1042.1
  %107 = load double, ptr %arrayidx10.i1043.1, align 8, !tbaa !22
  %idxprom12.i1044.1 = zext i32 %cond.i4.i.i1037.1 to i64
  %arrayidx13.i1045.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1044.1
  %108 = load double, ptr %arrayidx13.i1045.1, align 8, !tbaa !22
  %109 = fneg double %cond.i34.i1041.1
  %neg.i1046.1 = fmul double %107, %109
  %110 = tail call double @llvm.fmuladd.f64(double %neg.i1046.1, double %108, double 0.000000e+00)
  %sub15.i1047.1 = sub nsw i32 127, %cond.i1031.1
  %idxprom16.i1048.1 = sext i32 %sub15.i1047.1 to i64
  %arrayidx17.i1049.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1048.1
  %111 = load double, ptr %arrayidx17.i1049.1, align 8, !tbaa !22
  %sub19.i1050.1 = xor i32 %cond.i4.i.i1037.1, 127
  %idxprom20.i1051.1 = zext i32 %sub19.i1050.1 to i64
  %arrayidx21.i1052.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1051.1
  %112 = load double, ptr %arrayidx21.i1052.1, align 8, !tbaa !22
  %neg23.i1053.1 = fmul double %111, %109
  %113 = tail call double @llvm.fmuladd.f64(double %neg23.i1053.1, double %112, double %110)
  %xr.5.1 = fadd double %xr.42005.1, %113
  %indvars.iv.next2098.1 = add nuw nsw i64 %indvars.iv2097.1, 1
  %exitcond2100.1.not = icmp eq i64 %indvars.iv.next2098.1, 9
  br i1 %exitcond2100.1.not, label %for.inc77.1, label %for.body41.1, !llvm.loop !50

for.body41.us.1:                                  ; preds = %for.inc77, %for.body41.us.1
  %indvars.iv2101.1 = phi i64 [ %indvars.iv.next2102.1, %for.body41.us.1 ], [ 0, %for.inc77 ]
  %xr.42005.us.1 = phi double [ %xr.5.us.1, %for.body41.us.1 ], [ %.us-phi2006, %for.inc77 ]
  %arrayidx48.us.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 1, i64 1, i64 %indvars.iv2101.1
  %count.i993.us.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 1, i64 1, i64 %indvars.iv2101.1, i32 2
  %114 = load i64, ptr %count.i993.us.1, align 8, !tbaa !43
  %115 = getelementptr inbounds [1 x [2 x [9 x [2 x i32]]]], ptr @INIT_B8_TYPE_I, i64 0, i64 0, i64 1, i64 %indvars.iv2101.1, i64 1
  %116 = load i32, ptr %115, align 4, !tbaa !18
  %MPS.i995.us.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 1, i64 1, i64 %indvars.iv2101.1, i32 1
  %117 = load i8, ptr %MPS.i995.us.1, align 2, !tbaa !46
  %tobool.not.i996.us.1 = icmp eq i8 %117, 0
  %118 = load i16, ptr %arrayidx48.us.1, align 8, !tbaa !47
  %conv9.i997.us.1 = zext i16 %118 to i32
  %add7.i998.us.1 = add nuw nsw i32 %conv9.i997.us.1, 64
  %sub.i999.us.1 = sub nsw i32 63, %conv9.i997.us.1
  %cond.i1000.us.1 = select i1 %tobool.not.i996.us.1, i32 %sub.i999.us.1, i32 %add7.i998.us.1
  %cond.i.i.i1005.us.1 = tail call i32 @llvm.smax.i32(i32 %116, i32 0)
  %cond.i4.i.i1006.us.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1005.us.1, i32 127)
  %conv.i1007.us.1 = uitofp i64 %114 to double
  %div.i1008.us.1 = fmul double %conv.i1007.us.1, 3.125000e-02
  %cmp.i.i1009.us.1 = fcmp ogt double %div.i1008.us.1, 1.000000e+00
  %cond.i34.i1010.us.1 = select i1 %cmp.i.i1009.us.1, double 1.000000e+00, double %div.i1008.us.1
  %idxprom.i1011.us.1 = sext i32 %cond.i1000.us.1 to i64
  %arrayidx10.i1012.us.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1011.us.1
  %119 = load double, ptr %arrayidx10.i1012.us.1, align 8, !tbaa !22
  %idxprom12.i1013.us.1 = zext i32 %cond.i4.i.i1006.us.1 to i64
  %arrayidx13.i1014.us.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1013.us.1
  %120 = load double, ptr %arrayidx13.i1014.us.1, align 8, !tbaa !22
  %121 = fneg double %cond.i34.i1010.us.1
  %neg.i1015.us.1 = fmul double %119, %121
  %122 = tail call double @llvm.fmuladd.f64(double %neg.i1015.us.1, double %120, double 0.000000e+00)
  %sub15.i1016.us.1 = sub nsw i32 127, %cond.i1000.us.1
  %idxprom16.i1017.us.1 = sext i32 %sub15.i1016.us.1 to i64
  %arrayidx17.i1018.us.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1017.us.1
  %123 = load double, ptr %arrayidx17.i1018.us.1, align 8, !tbaa !22
  %sub19.i1019.us.1 = xor i32 %cond.i4.i.i1006.us.1, 127
  %idxprom20.i1020.us.1 = zext i32 %sub19.i1019.us.1 to i64
  %arrayidx21.i1021.us.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1020.us.1
  %124 = load double, ptr %arrayidx21.i1021.us.1, align 8, !tbaa !22
  %neg23.i1022.us.1 = fmul double %123, %121
  %125 = tail call double @llvm.fmuladd.f64(double %neg23.i1022.us.1, double %124, double %122)
  %xr.5.us.1 = fadd double %xr.42005.us.1, %125
  %indvars.iv.next2102.1 = add nuw nsw i64 %indvars.iv2101.1, 1
  %exitcond2104.1.not = icmp eq i64 %indvars.iv.next2102.1, 9
  br i1 %exitcond2104.1.not, label %for.inc77.1, label %for.body41.us.1, !llvm.loop !50

for.inc77.1:                                      ; preds = %for.body41.1, %for.body41.us.1
  %.us-phi2006.1 = phi double [ %xr.5.us.1, %for.body41.us.1 ], [ %xr.5.1, %for.body41.1 ]
  br i1 %cmp9, label %for.body85.us, label %for.cond83.preheader.split

for.body85.us:                                    ; preds = %for.inc77.1, %for.body85.us
  %indvars.iv2112 = phi i64 [ %indvars.iv.next2113, %for.body85.us ], [ 0, %for.inc77.1 ]
  %xr.72010.us = phi double [ %xr.8.us, %for.body85.us ], [ %.us-phi2006.1, %for.inc77.1 ]
  %arrayidx92.us = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 2, i64 0, i64 %indvars.iv2112
  %count.i1055.us = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 2, i64 0, i64 %indvars.iv2112, i32 2
  %126 = load i64, ptr %count.i1055.us, align 8, !tbaa !43
  %127 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 0, i64 0, i64 %indvars.iv2112, i64 1
  %128 = load i32, ptr %127, align 4, !tbaa !18
  %MPS.i1057.us = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 2, i64 0, i64 %indvars.iv2112, i32 1
  %129 = load i8, ptr %MPS.i1057.us, align 2, !tbaa !46
  %tobool.not.i1058.us = icmp eq i8 %129, 0
  %130 = load i16, ptr %arrayidx92.us, align 8, !tbaa !47
  %conv9.i1059.us = zext i16 %130 to i32
  %add7.i1060.us = add nuw nsw i32 %conv9.i1059.us, 64
  %sub.i1061.us = sub nsw i32 63, %conv9.i1059.us
  %cond.i1062.us = select i1 %tobool.not.i1058.us, i32 %sub.i1061.us, i32 %add7.i1060.us
  %cond.i.i.i1067.us = tail call i32 @llvm.smax.i32(i32 %128, i32 0)
  %cond.i4.i.i1068.us = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1067.us, i32 127)
  %conv.i1069.us = uitofp i64 %126 to double
  %div.i1070.us = fmul double %conv.i1069.us, 3.125000e-02
  %cmp.i.i1071.us = fcmp ogt double %div.i1070.us, 1.000000e+00
  %cond.i34.i1072.us = select i1 %cmp.i.i1071.us, double 1.000000e+00, double %div.i1070.us
  %idxprom.i1073.us = sext i32 %cond.i1062.us to i64
  %arrayidx10.i1074.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1073.us
  %131 = load double, ptr %arrayidx10.i1074.us, align 8, !tbaa !22
  %idxprom12.i1075.us = zext i32 %cond.i4.i.i1068.us to i64
  %arrayidx13.i1076.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1075.us
  %132 = load double, ptr %arrayidx13.i1076.us, align 8, !tbaa !22
  %133 = fneg double %cond.i34.i1072.us
  %neg.i1077.us = fmul double %131, %133
  %134 = tail call double @llvm.fmuladd.f64(double %neg.i1077.us, double %132, double 0.000000e+00)
  %sub15.i1078.us = sub nsw i32 127, %cond.i1062.us
  %idxprom16.i1079.us = sext i32 %sub15.i1078.us to i64
  %arrayidx17.i1080.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1079.us
  %135 = load double, ptr %arrayidx17.i1080.us, align 8, !tbaa !22
  %sub19.i1081.us = xor i32 %cond.i4.i.i1068.us, 127
  %idxprom20.i1082.us = zext i32 %sub19.i1081.us to i64
  %arrayidx21.i1083.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1082.us
  %136 = load double, ptr %arrayidx21.i1083.us, align 8, !tbaa !22
  %neg23.i1084.us = fmul double %135, %133
  %137 = tail call double @llvm.fmuladd.f64(double %neg23.i1084.us, double %136, double %134)
  %xr.8.us = fadd double %xr.72010.us, %137
  %indvars.iv.next2113 = add nuw nsw i64 %indvars.iv2112, 1
  %exitcond2115.not = icmp eq i64 %indvars.iv.next2113, 10
  br i1 %exitcond2115.not, label %for.inc121, label %for.body85.us, !llvm.loop !51

for.cond83.preheader.split:                       ; preds = %for.inc77.1
  %cond.i.i1094 = tail call i32 @llvm.smax.i32(i32 %51, i32 0)
  br label %for.body85

for.body85:                                       ; preds = %for.cond83.preheader.split, %for.body85
  %indvars.iv2108 = phi i64 [ 0, %for.cond83.preheader.split ], [ %indvars.iv.next2109, %for.body85 ]
  %xr.72010 = phi double [ %.us-phi2006.1, %for.cond83.preheader.split ], [ %xr.8, %for.body85 ]
  %arrayidx107 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 2, i64 0, i64 %indvars.iv2108
  %arrayidx113 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %indvars.iv2245, i64 0, i64 %indvars.iv2108
  %count.i1086 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 2, i64 0, i64 %indvars.iv2108, i32 2
  %138 = load i64, ptr %count.i1086, align 8, !tbaa !43
  %139 = load i32, ptr %arrayidx113, align 8, !tbaa !18
  %arrayidx3.i1087 = getelementptr inbounds i32, ptr %arrayidx113, i64 1
  %140 = load i32, ptr %arrayidx3.i1087, align 4, !tbaa !18
  %MPS.i1088 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 2, i64 0, i64 %indvars.iv2108, i32 1
  %141 = load i8, ptr %MPS.i1088, align 2, !tbaa !46
  %tobool.not.i1089 = icmp eq i8 %141, 0
  %142 = load i16, ptr %arrayidx107, align 8, !tbaa !47
  %conv9.i1090 = zext i16 %142 to i32
  %add7.i1091 = add nuw nsw i32 %conv9.i1090, 64
  %sub.i1092 = sub nsw i32 63, %conv9.i1090
  %cond.i1093 = select i1 %tobool.not.i1089, i32 %sub.i1092, i32 %add7.i1091
  %mul.i1095 = mul nsw i32 %139, %cond.i.i1094
  %shr.i1096 = ashr i32 %mul.i1095, 4
  %add.i1097 = add nsw i32 %shr.i1096, %140
  %cond.i.i.i1098 = tail call i32 @llvm.smax.i32(i32 %add.i1097, i32 0)
  %cond.i4.i.i1099 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1098, i32 127)
  %conv.i1100 = uitofp i64 %138 to double
  %div.i1101 = fmul double %conv.i1100, 3.125000e-02
  %cmp.i.i1102 = fcmp ogt double %div.i1101, 1.000000e+00
  %cond.i34.i1103 = select i1 %cmp.i.i1102, double 1.000000e+00, double %div.i1101
  %idxprom.i1104 = sext i32 %cond.i1093 to i64
  %arrayidx10.i1105 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1104
  %143 = load double, ptr %arrayidx10.i1105, align 8, !tbaa !22
  %idxprom12.i1106 = zext i32 %cond.i4.i.i1099 to i64
  %arrayidx13.i1107 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1106
  %144 = load double, ptr %arrayidx13.i1107, align 8, !tbaa !22
  %145 = fneg double %cond.i34.i1103
  %neg.i1108 = fmul double %143, %145
  %146 = tail call double @llvm.fmuladd.f64(double %neg.i1108, double %144, double 0.000000e+00)
  %sub15.i1109 = sub nsw i32 127, %cond.i1093
  %idxprom16.i1110 = sext i32 %sub15.i1109 to i64
  %arrayidx17.i1111 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1110
  %147 = load double, ptr %arrayidx17.i1111, align 8, !tbaa !22
  %sub19.i1112 = xor i32 %cond.i4.i.i1099, 127
  %idxprom20.i1113 = zext i32 %sub19.i1112 to i64
  %arrayidx21.i1114 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1113
  %148 = load double, ptr %arrayidx21.i1114, align 8, !tbaa !22
  %neg23.i1115 = fmul double %147, %145
  %149 = tail call double @llvm.fmuladd.f64(double %neg23.i1115, double %148, double %146)
  %xr.8 = fadd double %xr.72010, %149
  %indvars.iv.next2109 = add nuw nsw i64 %indvars.iv2108, 1
  %exitcond2111.not = icmp eq i64 %indvars.iv.next2109, 10
  br i1 %exitcond2111.not, label %for.inc121, label %for.body85, !llvm.loop !51

for.inc121:                                       ; preds = %for.body85, %for.body85.us
  %.us-phi2011 = phi double [ %xr.8.us, %for.body85.us ], [ %xr.8, %for.body85 ]
  br i1 %cmp9, label %for.body85.us.1, label %for.cond83.preheader.split.1

for.cond83.preheader.split.1:                     ; preds = %for.inc121
  %cond.i.i1094.1 = tail call i32 @llvm.smax.i32(i32 %51, i32 0)
  br label %for.body85.1

for.body85.1:                                     ; preds = %for.body85.1, %for.cond83.preheader.split.1
  %indvars.iv2108.1 = phi i64 [ 0, %for.cond83.preheader.split.1 ], [ %indvars.iv.next2109.1, %for.body85.1 ]
  %xr.72010.1 = phi double [ %.us-phi2011, %for.cond83.preheader.split.1 ], [ %xr.8.1, %for.body85.1 ]
  %arrayidx107.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 2, i64 1, i64 %indvars.iv2108.1
  %arrayidx113.1 = getelementptr inbounds [3 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_P, i64 0, i64 %indvars.iv2245, i64 1, i64 %indvars.iv2108.1
  %count.i1086.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 2, i64 1, i64 %indvars.iv2108.1, i32 2
  %150 = load i64, ptr %count.i1086.1, align 8, !tbaa !43
  %151 = load i32, ptr %arrayidx113.1, align 8, !tbaa !18
  %arrayidx3.i1087.1 = getelementptr inbounds i32, ptr %arrayidx113.1, i64 1
  %152 = load i32, ptr %arrayidx3.i1087.1, align 4, !tbaa !18
  %MPS.i1088.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 2, i64 1, i64 %indvars.iv2108.1, i32 1
  %153 = load i8, ptr %MPS.i1088.1, align 2, !tbaa !46
  %tobool.not.i1089.1 = icmp eq i8 %153, 0
  %154 = load i16, ptr %arrayidx107.1, align 8, !tbaa !47
  %conv9.i1090.1 = zext i16 %154 to i32
  %add7.i1091.1 = add nuw nsw i32 %conv9.i1090.1, 64
  %sub.i1092.1 = sub nsw i32 63, %conv9.i1090.1
  %cond.i1093.1 = select i1 %tobool.not.i1089.1, i32 %sub.i1092.1, i32 %add7.i1091.1
  %mul.i1095.1 = mul nsw i32 %151, %cond.i.i1094.1
  %shr.i1096.1 = ashr i32 %mul.i1095.1, 4
  %add.i1097.1 = add nsw i32 %shr.i1096.1, %152
  %cond.i.i.i1098.1 = tail call i32 @llvm.smax.i32(i32 %add.i1097.1, i32 0)
  %cond.i4.i.i1099.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1098.1, i32 127)
  %conv.i1100.1 = uitofp i64 %150 to double
  %div.i1101.1 = fmul double %conv.i1100.1, 3.125000e-02
  %cmp.i.i1102.1 = fcmp ogt double %div.i1101.1, 1.000000e+00
  %cond.i34.i1103.1 = select i1 %cmp.i.i1102.1, double 1.000000e+00, double %div.i1101.1
  %idxprom.i1104.1 = sext i32 %cond.i1093.1 to i64
  %arrayidx10.i1105.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1104.1
  %155 = load double, ptr %arrayidx10.i1105.1, align 8, !tbaa !22
  %idxprom12.i1106.1 = zext i32 %cond.i4.i.i1099.1 to i64
  %arrayidx13.i1107.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1106.1
  %156 = load double, ptr %arrayidx13.i1107.1, align 8, !tbaa !22
  %157 = fneg double %cond.i34.i1103.1
  %neg.i1108.1 = fmul double %155, %157
  %158 = tail call double @llvm.fmuladd.f64(double %neg.i1108.1, double %156, double 0.000000e+00)
  %sub15.i1109.1 = sub nsw i32 127, %cond.i1093.1
  %idxprom16.i1110.1 = sext i32 %sub15.i1109.1 to i64
  %arrayidx17.i1111.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1110.1
  %159 = load double, ptr %arrayidx17.i1111.1, align 8, !tbaa !22
  %sub19.i1112.1 = xor i32 %cond.i4.i.i1099.1, 127
  %idxprom20.i1113.1 = zext i32 %sub19.i1112.1 to i64
  %arrayidx21.i1114.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1113.1
  %160 = load double, ptr %arrayidx21.i1114.1, align 8, !tbaa !22
  %neg23.i1115.1 = fmul double %159, %157
  %161 = tail call double @llvm.fmuladd.f64(double %neg23.i1115.1, double %160, double %158)
  %xr.8.1 = fadd double %xr.72010.1, %161
  %indvars.iv.next2109.1 = add nuw nsw i64 %indvars.iv2108.1, 1
  %exitcond2111.1.not = icmp eq i64 %indvars.iv.next2109.1, 10
  br i1 %exitcond2111.1.not, label %for.cond127.preheader.preheader, label %for.body85.1, !llvm.loop !51

for.body85.us.1:                                  ; preds = %for.inc121, %for.body85.us.1
  %indvars.iv2112.1 = phi i64 [ %indvars.iv.next2113.1, %for.body85.us.1 ], [ 0, %for.inc121 ]
  %xr.72010.us.1 = phi double [ %xr.8.us.1, %for.body85.us.1 ], [ %.us-phi2011, %for.inc121 ]
  %arrayidx92.us.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 2, i64 1, i64 %indvars.iv2112.1
  %count.i1055.us.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 2, i64 1, i64 %indvars.iv2112.1, i32 2
  %162 = load i64, ptr %count.i1055.us.1, align 8, !tbaa !43
  %163 = getelementptr inbounds [1 x [2 x [10 x [2 x i32]]]], ptr @INIT_MV_RES_I, i64 0, i64 0, i64 1, i64 %indvars.iv2112.1, i64 1
  %164 = load i32, ptr %163, align 4, !tbaa !18
  %MPS.i1057.us.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 2, i64 1, i64 %indvars.iv2112.1, i32 1
  %165 = load i8, ptr %MPS.i1057.us.1, align 2, !tbaa !46
  %tobool.not.i1058.us.1 = icmp eq i8 %165, 0
  %166 = load i16, ptr %arrayidx92.us.1, align 8, !tbaa !47
  %conv9.i1059.us.1 = zext i16 %166 to i32
  %add7.i1060.us.1 = add nuw nsw i32 %conv9.i1059.us.1, 64
  %sub.i1061.us.1 = sub nsw i32 63, %conv9.i1059.us.1
  %cond.i1062.us.1 = select i1 %tobool.not.i1058.us.1, i32 %sub.i1061.us.1, i32 %add7.i1060.us.1
  %cond.i.i.i1067.us.1 = tail call i32 @llvm.smax.i32(i32 %164, i32 0)
  %cond.i4.i.i1068.us.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1067.us.1, i32 127)
  %conv.i1069.us.1 = uitofp i64 %162 to double
  %div.i1070.us.1 = fmul double %conv.i1069.us.1, 3.125000e-02
  %cmp.i.i1071.us.1 = fcmp ogt double %div.i1070.us.1, 1.000000e+00
  %cond.i34.i1072.us.1 = select i1 %cmp.i.i1071.us.1, double 1.000000e+00, double %div.i1070.us.1
  %idxprom.i1073.us.1 = sext i32 %cond.i1062.us.1 to i64
  %arrayidx10.i1074.us.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1073.us.1
  %167 = load double, ptr %arrayidx10.i1074.us.1, align 8, !tbaa !22
  %idxprom12.i1075.us.1 = zext i32 %cond.i4.i.i1068.us.1 to i64
  %arrayidx13.i1076.us.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1075.us.1
  %168 = load double, ptr %arrayidx13.i1076.us.1, align 8, !tbaa !22
  %169 = fneg double %cond.i34.i1072.us.1
  %neg.i1077.us.1 = fmul double %167, %169
  %170 = tail call double @llvm.fmuladd.f64(double %neg.i1077.us.1, double %168, double 0.000000e+00)
  %sub15.i1078.us.1 = sub nsw i32 127, %cond.i1062.us.1
  %idxprom16.i1079.us.1 = sext i32 %sub15.i1078.us.1 to i64
  %arrayidx17.i1080.us.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1079.us.1
  %171 = load double, ptr %arrayidx17.i1080.us.1, align 8, !tbaa !22
  %sub19.i1081.us.1 = xor i32 %cond.i4.i.i1068.us.1, 127
  %idxprom20.i1082.us.1 = zext i32 %sub19.i1081.us.1 to i64
  %arrayidx21.i1083.us.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1082.us.1
  %172 = load double, ptr %arrayidx21.i1083.us.1, align 8, !tbaa !22
  %neg23.i1084.us.1 = fmul double %171, %169
  %173 = tail call double @llvm.fmuladd.f64(double %neg23.i1084.us.1, double %172, double %170)
  %xr.8.us.1 = fadd double %xr.72010.us.1, %173
  %indvars.iv.next2113.1 = add nuw nsw i64 %indvars.iv2112.1, 1
  %exitcond2115.1.not = icmp eq i64 %indvars.iv.next2113.1, 10
  br i1 %exitcond2115.1.not, label %for.cond127.preheader.preheader, label %for.body85.us.1, !llvm.loop !51

for.cond127.preheader.preheader:                  ; preds = %for.body85.1, %for.body85.us.1
  %xr.92018.ph = phi double [ %xr.8.us.1, %for.body85.us.1 ], [ %xr.8.1, %for.body85.1 ]
  br label %for.cond127.preheader

for.cond168.preheader:                            ; preds = %for.inc165
  %174 = load i32, ptr %type, align 4, !tbaa !25
  %cmp172 = icmp eq i32 %174, 2
  %gep2072 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], ptr getelementptr inbounds ([1 x [1 x [4 x [2 x i32]]]], ptr @INIT_DELTA_QP_I, i64 0, i64 0, i64 0, i64 0, i64 1), i64 0, i64 %indvars.iv2245
  %gep2071 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], ptr getelementptr inbounds ([3 x [1 x [4 x [2 x i32]]]], ptr @INIT_DELTA_QP_P, i64 0, i64 0, i64 0, i64 0, i64 1), i64 0, i64 %indvars.iv2245
  %gep2072.gep2071 = select i1 %cmp172, ptr %gep2072, ptr %gep2071
  %175 = load i32, ptr %gep2072.gep2071, align 4, !tbaa !18
  %cond.i.i.i1191 = tail call i32 @llvm.smax.i32(i32 %175, i32 0)
  %cond.i4.i.i1192 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1191, i32 127)
  %idxprom12.i1199 = zext i32 %cond.i4.i.i1192 to i64
  %arrayidx13.i1200 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1199
  %176 = load double, ptr %arrayidx13.i1200, align 8, !tbaa !22
  %177 = tail call double @llvm.fmuladd.f64(double %neg.i1201, double %176, double 0.000000e+00)
  %sub19.i1205 = xor i32 %cond.i4.i.i1192, 127
  %idxprom20.i1206 = zext i32 %sub19.i1205 to i64
  %arrayidx21.i1207 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1206
  %178 = load double, ptr %arrayidx21.i1207, align 8, !tbaa !22
  %179 = tail call double @llvm.fmuladd.f64(double %neg23.i1208, double %178, double %177)
  %xr.13 = fadd double %xr.11.5, %179
  %gep2072.gep2071.1 = select i1 %cmp172, ptr %gep2072, ptr %gep2071
  %gep2022.1 = getelementptr inbounds [4 x [2 x i32]], ptr %gep2072.gep2071.1, i64 0, i64 1
  %180 = load i32, ptr %gep2022.1, align 4, !tbaa !18
  %cond.i.i.i1191.1 = tail call i32 @llvm.smax.i32(i32 %180, i32 0)
  %cond.i4.i.i1192.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1191.1, i32 127)
  %idxprom12.i1199.1 = zext i32 %cond.i4.i.i1192.1 to i64
  %arrayidx13.i1200.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1199.1
  %181 = load double, ptr %arrayidx13.i1200.1, align 8, !tbaa !22
  %182 = tail call double @llvm.fmuladd.f64(double %neg.i1201.1, double %181, double 0.000000e+00)
  %sub19.i1205.1 = xor i32 %cond.i4.i.i1192.1, 127
  %idxprom20.i1206.1 = zext i32 %sub19.i1205.1 to i64
  %arrayidx21.i1207.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1206.1
  %183 = load double, ptr %arrayidx21.i1207.1, align 8, !tbaa !22
  %184 = tail call double @llvm.fmuladd.f64(double %neg23.i1208.1, double %183, double %182)
  %xr.13.1 = fadd double %xr.13, %184
  %gep2072.gep2071.2 = select i1 %cmp172, ptr %gep2072, ptr %gep2071
  %gep2022.2 = getelementptr inbounds [4 x [2 x i32]], ptr %gep2072.gep2071.2, i64 0, i64 2
  %185 = load i32, ptr %gep2022.2, align 4, !tbaa !18
  %cond.i.i.i1191.2 = tail call i32 @llvm.smax.i32(i32 %185, i32 0)
  %cond.i4.i.i1192.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1191.2, i32 127)
  %idxprom12.i1199.2 = zext i32 %cond.i4.i.i1192.2 to i64
  %arrayidx13.i1200.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1199.2
  %186 = load double, ptr %arrayidx13.i1200.2, align 8, !tbaa !22
  %187 = tail call double @llvm.fmuladd.f64(double %neg.i1201.2, double %186, double 0.000000e+00)
  %sub19.i1205.2 = xor i32 %cond.i4.i.i1192.2, 127
  %idxprom20.i1206.2 = zext i32 %sub19.i1205.2 to i64
  %arrayidx21.i1207.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1206.2
  %188 = load double, ptr %arrayidx21.i1207.2, align 8, !tbaa !22
  %189 = tail call double @llvm.fmuladd.f64(double %neg23.i1208.2, double %188, double %187)
  %xr.13.2 = fadd double %xr.13.1, %189
  %gep2072.gep2071.3 = select i1 %cmp172, ptr %gep2072, ptr %gep2071
  %gep2022.3 = getelementptr inbounds [4 x [2 x i32]], ptr %gep2072.gep2071.3, i64 0, i64 3
  %190 = load i32, ptr %gep2022.3, align 4, !tbaa !18
  %cond.i.i.i1191.3 = tail call i32 @llvm.smax.i32(i32 %190, i32 0)
  %cond.i4.i.i1192.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1191.3, i32 127)
  %idxprom12.i1199.3 = zext i32 %cond.i4.i.i1192.3 to i64
  %arrayidx13.i1200.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1199.3
  %191 = load double, ptr %arrayidx13.i1200.3, align 8, !tbaa !22
  %192 = tail call double @llvm.fmuladd.f64(double %neg.i1201.3, double %191, double 0.000000e+00)
  %sub19.i1205.3 = xor i32 %cond.i4.i.i1192.3, 127
  %idxprom20.i1206.3 = zext i32 %sub19.i1205.3 to i64
  %arrayidx21.i1207.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1206.3
  %193 = load double, ptr %arrayidx21.i1207.3, align 8, !tbaa !22
  %194 = tail call double @llvm.fmuladd.f64(double %neg23.i1208.3, double %193, double %192)
  %xr.13.3 = fadd double %xr.13.2, %194
  %arrayidx221 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], ptr @INIT_MB_AFF_P, i64 0, i64 %indvars.iv2245
  %arrayidx209 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], ptr @INIT_MB_AFF_I, i64 0, i64 %indvars.iv2245
  %195 = load i32, ptr %qp1.i961, align 4, !tbaa !42
  %cond.i.i1249 = tail call i32 @llvm.smax.i32(i32 %195, i32 0)
  br label %for.body202

for.cond127.preheader:                            ; preds = %for.cond127.preheader.preheader, %for.inc165
  %cmp125 = phi i1 [ false, %for.inc165 ], [ true, %for.cond127.preheader.preheader ]
  %indvars.iv2127 = phi i64 [ 1, %for.inc165 ], [ 0, %for.cond127.preheader.preheader ]
  %xr.92018 = phi double [ %xr.11.5, %for.inc165 ], [ %xr.92018.ph, %for.cond127.preheader.preheader ]
  br i1 %cmp9, label %for.body129.us.preheader, label %for.cond127.preheader.split

for.body129.us.preheader:                         ; preds = %for.cond127.preheader
  %arrayidx136.us = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 0
  %count.i1117.us = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 0, i32 2
  %196 = load i64, ptr %count.i1117.us, align 8, !tbaa !43
  %197 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 0, i64 %indvars.iv2127, i64 0, i64 1
  %198 = load i32, ptr %197, align 4, !tbaa !18
  %MPS.i1119.us = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 0, i32 1
  %199 = load i8, ptr %MPS.i1119.us, align 2, !tbaa !46
  %tobool.not.i1120.us = icmp eq i8 %199, 0
  %200 = load i16, ptr %arrayidx136.us, align 8, !tbaa !47
  %conv9.i1121.us = zext i16 %200 to i32
  %add7.i1122.us = add nuw nsw i32 %conv9.i1121.us, 64
  %sub.i1123.us = sub nsw i32 63, %conv9.i1121.us
  %cond.i1124.us = select i1 %tobool.not.i1120.us, i32 %sub.i1123.us, i32 %add7.i1122.us
  %cond.i.i.i1129.us = tail call i32 @llvm.smax.i32(i32 %198, i32 0)
  %cond.i4.i.i1130.us = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1129.us, i32 127)
  %conv.i1131.us = uitofp i64 %196 to double
  %div.i1132.us = fmul double %conv.i1131.us, 3.125000e-02
  %cmp.i.i1133.us = fcmp ogt double %div.i1132.us, 1.000000e+00
  %cond.i34.i1134.us = select i1 %cmp.i.i1133.us, double 1.000000e+00, double %div.i1132.us
  %idxprom.i1135.us = sext i32 %cond.i1124.us to i64
  %arrayidx10.i1136.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1135.us
  %201 = load double, ptr %arrayidx10.i1136.us, align 8, !tbaa !22
  %idxprom12.i1137.us = zext i32 %cond.i4.i.i1130.us to i64
  %arrayidx13.i1138.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1137.us
  %202 = load double, ptr %arrayidx13.i1138.us, align 8, !tbaa !22
  %203 = fneg double %cond.i34.i1134.us
  %neg.i1139.us = fmul double %201, %203
  %204 = tail call double @llvm.fmuladd.f64(double %neg.i1139.us, double %202, double 0.000000e+00)
  %sub15.i1140.us = sub nsw i32 127, %cond.i1124.us
  %idxprom16.i1141.us = sext i32 %sub15.i1140.us to i64
  %arrayidx17.i1142.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1141.us
  %205 = load double, ptr %arrayidx17.i1142.us, align 8, !tbaa !22
  %sub19.i1143.us = xor i32 %cond.i4.i.i1130.us, 127
  %idxprom20.i1144.us = zext i32 %sub19.i1143.us to i64
  %arrayidx21.i1145.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1144.us
  %206 = load double, ptr %arrayidx21.i1145.us, align 8, !tbaa !22
  %neg23.i1146.us = fmul double %205, %203
  %207 = tail call double @llvm.fmuladd.f64(double %neg23.i1146.us, double %206, double %204)
  %xr.11.us = fadd double %xr.92018, %207
  %arrayidx136.us.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 1
  %count.i1117.us.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 1, i32 2
  %208 = load i64, ptr %count.i1117.us.1, align 8, !tbaa !43
  %209 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 0, i64 %indvars.iv2127, i64 1, i64 1
  %210 = load i32, ptr %209, align 4, !tbaa !18
  %MPS.i1119.us.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 1, i32 1
  %211 = load i8, ptr %MPS.i1119.us.1, align 2, !tbaa !46
  %tobool.not.i1120.us.1 = icmp eq i8 %211, 0
  %212 = load i16, ptr %arrayidx136.us.1, align 8, !tbaa !47
  %conv9.i1121.us.1 = zext i16 %212 to i32
  %add7.i1122.us.1 = add nuw nsw i32 %conv9.i1121.us.1, 64
  %sub.i1123.us.1 = sub nsw i32 63, %conv9.i1121.us.1
  %cond.i1124.us.1 = select i1 %tobool.not.i1120.us.1, i32 %sub.i1123.us.1, i32 %add7.i1122.us.1
  %cond.i.i.i1129.us.1 = tail call i32 @llvm.smax.i32(i32 %210, i32 0)
  %cond.i4.i.i1130.us.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1129.us.1, i32 127)
  %conv.i1131.us.1 = uitofp i64 %208 to double
  %div.i1132.us.1 = fmul double %conv.i1131.us.1, 3.125000e-02
  %cmp.i.i1133.us.1 = fcmp ogt double %div.i1132.us.1, 1.000000e+00
  %cond.i34.i1134.us.1 = select i1 %cmp.i.i1133.us.1, double 1.000000e+00, double %div.i1132.us.1
  %idxprom.i1135.us.1 = sext i32 %cond.i1124.us.1 to i64
  %arrayidx10.i1136.us.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1135.us.1
  %213 = load double, ptr %arrayidx10.i1136.us.1, align 8, !tbaa !22
  %idxprom12.i1137.us.1 = zext i32 %cond.i4.i.i1130.us.1 to i64
  %arrayidx13.i1138.us.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1137.us.1
  %214 = load double, ptr %arrayidx13.i1138.us.1, align 8, !tbaa !22
  %215 = fneg double %cond.i34.i1134.us.1
  %neg.i1139.us.1 = fmul double %213, %215
  %216 = tail call double @llvm.fmuladd.f64(double %neg.i1139.us.1, double %214, double 0.000000e+00)
  %sub15.i1140.us.1 = sub nsw i32 127, %cond.i1124.us.1
  %idxprom16.i1141.us.1 = sext i32 %sub15.i1140.us.1 to i64
  %arrayidx17.i1142.us.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1141.us.1
  %217 = load double, ptr %arrayidx17.i1142.us.1, align 8, !tbaa !22
  %sub19.i1143.us.1 = xor i32 %cond.i4.i.i1130.us.1, 127
  %idxprom20.i1144.us.1 = zext i32 %sub19.i1143.us.1 to i64
  %arrayidx21.i1145.us.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1144.us.1
  %218 = load double, ptr %arrayidx21.i1145.us.1, align 8, !tbaa !22
  %neg23.i1146.us.1 = fmul double %217, %215
  %219 = tail call double @llvm.fmuladd.f64(double %neg23.i1146.us.1, double %218, double %216)
  %xr.11.us.1 = fadd double %xr.11.us, %219
  %arrayidx136.us.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 2
  %count.i1117.us.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 2, i32 2
  %220 = load i64, ptr %count.i1117.us.2, align 8, !tbaa !43
  %221 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 0, i64 %indvars.iv2127, i64 2, i64 1
  %222 = load i32, ptr %221, align 4, !tbaa !18
  %MPS.i1119.us.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 2, i32 1
  %223 = load i8, ptr %MPS.i1119.us.2, align 2, !tbaa !46
  %tobool.not.i1120.us.2 = icmp eq i8 %223, 0
  %224 = load i16, ptr %arrayidx136.us.2, align 8, !tbaa !47
  %conv9.i1121.us.2 = zext i16 %224 to i32
  %add7.i1122.us.2 = add nuw nsw i32 %conv9.i1121.us.2, 64
  %sub.i1123.us.2 = sub nsw i32 63, %conv9.i1121.us.2
  %cond.i1124.us.2 = select i1 %tobool.not.i1120.us.2, i32 %sub.i1123.us.2, i32 %add7.i1122.us.2
  %cond.i.i.i1129.us.2 = tail call i32 @llvm.smax.i32(i32 %222, i32 0)
  %cond.i4.i.i1130.us.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1129.us.2, i32 127)
  %conv.i1131.us.2 = uitofp i64 %220 to double
  %div.i1132.us.2 = fmul double %conv.i1131.us.2, 3.125000e-02
  %cmp.i.i1133.us.2 = fcmp ogt double %div.i1132.us.2, 1.000000e+00
  %cond.i34.i1134.us.2 = select i1 %cmp.i.i1133.us.2, double 1.000000e+00, double %div.i1132.us.2
  %idxprom.i1135.us.2 = sext i32 %cond.i1124.us.2 to i64
  %arrayidx10.i1136.us.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1135.us.2
  %225 = load double, ptr %arrayidx10.i1136.us.2, align 8, !tbaa !22
  %idxprom12.i1137.us.2 = zext i32 %cond.i4.i.i1130.us.2 to i64
  %arrayidx13.i1138.us.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1137.us.2
  %226 = load double, ptr %arrayidx13.i1138.us.2, align 8, !tbaa !22
  %227 = fneg double %cond.i34.i1134.us.2
  %neg.i1139.us.2 = fmul double %225, %227
  %228 = tail call double @llvm.fmuladd.f64(double %neg.i1139.us.2, double %226, double 0.000000e+00)
  %sub15.i1140.us.2 = sub nsw i32 127, %cond.i1124.us.2
  %idxprom16.i1141.us.2 = sext i32 %sub15.i1140.us.2 to i64
  %arrayidx17.i1142.us.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1141.us.2
  %229 = load double, ptr %arrayidx17.i1142.us.2, align 8, !tbaa !22
  %sub19.i1143.us.2 = xor i32 %cond.i4.i.i1130.us.2, 127
  %idxprom20.i1144.us.2 = zext i32 %sub19.i1143.us.2 to i64
  %arrayidx21.i1145.us.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1144.us.2
  %230 = load double, ptr %arrayidx21.i1145.us.2, align 8, !tbaa !22
  %neg23.i1146.us.2 = fmul double %229, %227
  %231 = tail call double @llvm.fmuladd.f64(double %neg23.i1146.us.2, double %230, double %228)
  %xr.11.us.2 = fadd double %xr.11.us.1, %231
  %arrayidx136.us.3 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 3
  %count.i1117.us.3 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 3, i32 2
  %232 = load i64, ptr %count.i1117.us.3, align 8, !tbaa !43
  %233 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 0, i64 %indvars.iv2127, i64 3, i64 1
  %234 = load i32, ptr %233, align 4, !tbaa !18
  %MPS.i1119.us.3 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 3, i32 1
  %235 = load i8, ptr %MPS.i1119.us.3, align 2, !tbaa !46
  %tobool.not.i1120.us.3 = icmp eq i8 %235, 0
  %236 = load i16, ptr %arrayidx136.us.3, align 8, !tbaa !47
  %conv9.i1121.us.3 = zext i16 %236 to i32
  %add7.i1122.us.3 = add nuw nsw i32 %conv9.i1121.us.3, 64
  %sub.i1123.us.3 = sub nsw i32 63, %conv9.i1121.us.3
  %cond.i1124.us.3 = select i1 %tobool.not.i1120.us.3, i32 %sub.i1123.us.3, i32 %add7.i1122.us.3
  %cond.i.i.i1129.us.3 = tail call i32 @llvm.smax.i32(i32 %234, i32 0)
  %cond.i4.i.i1130.us.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1129.us.3, i32 127)
  %conv.i1131.us.3 = uitofp i64 %232 to double
  %div.i1132.us.3 = fmul double %conv.i1131.us.3, 3.125000e-02
  %cmp.i.i1133.us.3 = fcmp ogt double %div.i1132.us.3, 1.000000e+00
  %cond.i34.i1134.us.3 = select i1 %cmp.i.i1133.us.3, double 1.000000e+00, double %div.i1132.us.3
  %idxprom.i1135.us.3 = sext i32 %cond.i1124.us.3 to i64
  %arrayidx10.i1136.us.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1135.us.3
  %237 = load double, ptr %arrayidx10.i1136.us.3, align 8, !tbaa !22
  %idxprom12.i1137.us.3 = zext i32 %cond.i4.i.i1130.us.3 to i64
  %arrayidx13.i1138.us.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1137.us.3
  %238 = load double, ptr %arrayidx13.i1138.us.3, align 8, !tbaa !22
  %239 = fneg double %cond.i34.i1134.us.3
  %neg.i1139.us.3 = fmul double %237, %239
  %240 = tail call double @llvm.fmuladd.f64(double %neg.i1139.us.3, double %238, double 0.000000e+00)
  %sub15.i1140.us.3 = sub nsw i32 127, %cond.i1124.us.3
  %idxprom16.i1141.us.3 = sext i32 %sub15.i1140.us.3 to i64
  %arrayidx17.i1142.us.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1141.us.3
  %241 = load double, ptr %arrayidx17.i1142.us.3, align 8, !tbaa !22
  %sub19.i1143.us.3 = xor i32 %cond.i4.i.i1130.us.3, 127
  %idxprom20.i1144.us.3 = zext i32 %sub19.i1143.us.3 to i64
  %arrayidx21.i1145.us.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1144.us.3
  %242 = load double, ptr %arrayidx21.i1145.us.3, align 8, !tbaa !22
  %neg23.i1146.us.3 = fmul double %241, %239
  %243 = tail call double @llvm.fmuladd.f64(double %neg23.i1146.us.3, double %242, double %240)
  %xr.11.us.3 = fadd double %xr.11.us.2, %243
  %arrayidx136.us.4 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 4
  %count.i1117.us.4 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 4, i32 2
  %244 = load i64, ptr %count.i1117.us.4, align 8, !tbaa !43
  %245 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 0, i64 %indvars.iv2127, i64 4, i64 1
  %246 = load i32, ptr %245, align 4, !tbaa !18
  %MPS.i1119.us.4 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 4, i32 1
  %247 = load i8, ptr %MPS.i1119.us.4, align 2, !tbaa !46
  %tobool.not.i1120.us.4 = icmp eq i8 %247, 0
  %248 = load i16, ptr %arrayidx136.us.4, align 8, !tbaa !47
  %conv9.i1121.us.4 = zext i16 %248 to i32
  %add7.i1122.us.4 = add nuw nsw i32 %conv9.i1121.us.4, 64
  %sub.i1123.us.4 = sub nsw i32 63, %conv9.i1121.us.4
  %cond.i1124.us.4 = select i1 %tobool.not.i1120.us.4, i32 %sub.i1123.us.4, i32 %add7.i1122.us.4
  %cond.i.i.i1129.us.4 = tail call i32 @llvm.smax.i32(i32 %246, i32 0)
  %cond.i4.i.i1130.us.4 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1129.us.4, i32 127)
  %conv.i1131.us.4 = uitofp i64 %244 to double
  %div.i1132.us.4 = fmul double %conv.i1131.us.4, 3.125000e-02
  %cmp.i.i1133.us.4 = fcmp ogt double %div.i1132.us.4, 1.000000e+00
  %cond.i34.i1134.us.4 = select i1 %cmp.i.i1133.us.4, double 1.000000e+00, double %div.i1132.us.4
  %idxprom.i1135.us.4 = sext i32 %cond.i1124.us.4 to i64
  %arrayidx10.i1136.us.4 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1135.us.4
  %249 = load double, ptr %arrayidx10.i1136.us.4, align 8, !tbaa !22
  %idxprom12.i1137.us.4 = zext i32 %cond.i4.i.i1130.us.4 to i64
  %arrayidx13.i1138.us.4 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1137.us.4
  %250 = load double, ptr %arrayidx13.i1138.us.4, align 8, !tbaa !22
  %251 = fneg double %cond.i34.i1134.us.4
  %neg.i1139.us.4 = fmul double %249, %251
  %252 = tail call double @llvm.fmuladd.f64(double %neg.i1139.us.4, double %250, double 0.000000e+00)
  %sub15.i1140.us.4 = sub nsw i32 127, %cond.i1124.us.4
  %idxprom16.i1141.us.4 = sext i32 %sub15.i1140.us.4 to i64
  %arrayidx17.i1142.us.4 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1141.us.4
  %253 = load double, ptr %arrayidx17.i1142.us.4, align 8, !tbaa !22
  %sub19.i1143.us.4 = xor i32 %cond.i4.i.i1130.us.4, 127
  %idxprom20.i1144.us.4 = zext i32 %sub19.i1143.us.4 to i64
  %arrayidx21.i1145.us.4 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1144.us.4
  %254 = load double, ptr %arrayidx21.i1145.us.4, align 8, !tbaa !22
  %neg23.i1146.us.4 = fmul double %253, %251
  %255 = tail call double @llvm.fmuladd.f64(double %neg23.i1146.us.4, double %254, double %252)
  %xr.11.us.4 = fadd double %xr.11.us.3, %255
  %arrayidx136.us.5 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 5
  %count.i1117.us.5 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 5, i32 2
  %256 = load i64, ptr %count.i1117.us.5, align 8, !tbaa !43
  %257 = getelementptr inbounds [1 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_I, i64 0, i64 0, i64 %indvars.iv2127, i64 5, i64 1
  %258 = load i32, ptr %257, align 4, !tbaa !18
  %MPS.i1119.us.5 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 5, i32 1
  %259 = load i8, ptr %MPS.i1119.us.5, align 2, !tbaa !46
  %tobool.not.i1120.us.5 = icmp eq i8 %259, 0
  %260 = load i16, ptr %arrayidx136.us.5, align 8, !tbaa !47
  %conv9.i1121.us.5 = zext i16 %260 to i32
  %add7.i1122.us.5 = add nuw nsw i32 %conv9.i1121.us.5, 64
  %sub.i1123.us.5 = sub nsw i32 63, %conv9.i1121.us.5
  %cond.i1124.us.5 = select i1 %tobool.not.i1120.us.5, i32 %sub.i1123.us.5, i32 %add7.i1122.us.5
  %cond.i.i.i1129.us.5 = tail call i32 @llvm.smax.i32(i32 %258, i32 0)
  %cond.i4.i.i1130.us.5 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1129.us.5, i32 127)
  %conv.i1131.us.5 = uitofp i64 %256 to double
  %div.i1132.us.5 = fmul double %conv.i1131.us.5, 3.125000e-02
  %cmp.i.i1133.us.5 = fcmp ogt double %div.i1132.us.5, 1.000000e+00
  %cond.i34.i1134.us.5 = select i1 %cmp.i.i1133.us.5, double 1.000000e+00, double %div.i1132.us.5
  %idxprom.i1135.us.5 = sext i32 %cond.i1124.us.5 to i64
  %arrayidx10.i1136.us.5 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1135.us.5
  %261 = load double, ptr %arrayidx10.i1136.us.5, align 8, !tbaa !22
  %idxprom12.i1137.us.5 = zext i32 %cond.i4.i.i1130.us.5 to i64
  %arrayidx13.i1138.us.5 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1137.us.5
  %262 = load double, ptr %arrayidx13.i1138.us.5, align 8, !tbaa !22
  %263 = fneg double %cond.i34.i1134.us.5
  %neg.i1139.us.5 = fmul double %261, %263
  %264 = tail call double @llvm.fmuladd.f64(double %neg.i1139.us.5, double %262, double 0.000000e+00)
  br label %for.inc165

for.cond127.preheader.split:                      ; preds = %for.cond127.preheader
  %265 = load i32, ptr %qp1.i961, align 4, !tbaa !42
  %cond.i.i1156 = tail call i32 @llvm.smax.i32(i32 %265, i32 0)
  %arrayidx151 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 0
  %arrayidx157 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2127, i64 0
  %count.i1148 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 0, i32 2
  %266 = load i64, ptr %count.i1148, align 8, !tbaa !43
  %267 = load i32, ptr %arrayidx157, align 16, !tbaa !18
  %arrayidx3.i1149 = getelementptr inbounds i32, ptr %arrayidx157, i64 1
  %268 = load i32, ptr %arrayidx3.i1149, align 4, !tbaa !18
  %MPS.i1150 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 0, i32 1
  %269 = load i8, ptr %MPS.i1150, align 2, !tbaa !46
  %tobool.not.i1151 = icmp eq i8 %269, 0
  %270 = load i16, ptr %arrayidx151, align 8, !tbaa !47
  %conv9.i1152 = zext i16 %270 to i32
  %add7.i1153 = add nuw nsw i32 %conv9.i1152, 64
  %sub.i1154 = sub nsw i32 63, %conv9.i1152
  %cond.i1155 = select i1 %tobool.not.i1151, i32 %sub.i1154, i32 %add7.i1153
  %mul.i1157 = mul nsw i32 %267, %cond.i.i1156
  %shr.i1158 = ashr i32 %mul.i1157, 4
  %add.i1159 = add nsw i32 %shr.i1158, %268
  %cond.i.i.i1160 = tail call i32 @llvm.smax.i32(i32 %add.i1159, i32 0)
  %cond.i4.i.i1161 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1160, i32 127)
  %conv.i1162 = uitofp i64 %266 to double
  %div.i1163 = fmul double %conv.i1162, 3.125000e-02
  %cmp.i.i1164 = fcmp ogt double %div.i1163, 1.000000e+00
  %cond.i34.i1165 = select i1 %cmp.i.i1164, double 1.000000e+00, double %div.i1163
  %idxprom.i1166 = sext i32 %cond.i1155 to i64
  %arrayidx10.i1167 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1166
  %271 = load double, ptr %arrayidx10.i1167, align 8, !tbaa !22
  %idxprom12.i1168 = zext i32 %cond.i4.i.i1161 to i64
  %arrayidx13.i1169 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1168
  %272 = load double, ptr %arrayidx13.i1169, align 8, !tbaa !22
  %273 = fneg double %cond.i34.i1165
  %neg.i1170 = fmul double %271, %273
  %274 = tail call double @llvm.fmuladd.f64(double %neg.i1170, double %272, double 0.000000e+00)
  %sub15.i1171 = sub nsw i32 127, %cond.i1155
  %idxprom16.i1172 = sext i32 %sub15.i1171 to i64
  %arrayidx17.i1173 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1172
  %275 = load double, ptr %arrayidx17.i1173, align 8, !tbaa !22
  %sub19.i1174 = xor i32 %cond.i4.i.i1161, 127
  %idxprom20.i1175 = zext i32 %sub19.i1174 to i64
  %arrayidx21.i1176 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1175
  %276 = load double, ptr %arrayidx21.i1176, align 8, !tbaa !22
  %neg23.i1177 = fmul double %275, %273
  %277 = tail call double @llvm.fmuladd.f64(double %neg23.i1177, double %276, double %274)
  %xr.11 = fadd double %xr.92018, %277
  %arrayidx151.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 1
  %arrayidx157.1 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2127, i64 1
  %count.i1148.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 1, i32 2
  %278 = load i64, ptr %count.i1148.1, align 8, !tbaa !43
  %279 = load i32, ptr %arrayidx157.1, align 8, !tbaa !18
  %arrayidx3.i1149.1 = getelementptr inbounds i32, ptr %arrayidx157.1, i64 1
  %280 = load i32, ptr %arrayidx3.i1149.1, align 4, !tbaa !18
  %MPS.i1150.1 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 1, i32 1
  %281 = load i8, ptr %MPS.i1150.1, align 2, !tbaa !46
  %tobool.not.i1151.1 = icmp eq i8 %281, 0
  %282 = load i16, ptr %arrayidx151.1, align 8, !tbaa !47
  %conv9.i1152.1 = zext i16 %282 to i32
  %add7.i1153.1 = add nuw nsw i32 %conv9.i1152.1, 64
  %sub.i1154.1 = sub nsw i32 63, %conv9.i1152.1
  %cond.i1155.1 = select i1 %tobool.not.i1151.1, i32 %sub.i1154.1, i32 %add7.i1153.1
  %mul.i1157.1 = mul nsw i32 %279, %cond.i.i1156
  %shr.i1158.1 = ashr i32 %mul.i1157.1, 4
  %add.i1159.1 = add nsw i32 %shr.i1158.1, %280
  %cond.i.i.i1160.1 = tail call i32 @llvm.smax.i32(i32 %add.i1159.1, i32 0)
  %cond.i4.i.i1161.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1160.1, i32 127)
  %conv.i1162.1 = uitofp i64 %278 to double
  %div.i1163.1 = fmul double %conv.i1162.1, 3.125000e-02
  %cmp.i.i1164.1 = fcmp ogt double %div.i1163.1, 1.000000e+00
  %cond.i34.i1165.1 = select i1 %cmp.i.i1164.1, double 1.000000e+00, double %div.i1163.1
  %idxprom.i1166.1 = sext i32 %cond.i1155.1 to i64
  %arrayidx10.i1167.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1166.1
  %283 = load double, ptr %arrayidx10.i1167.1, align 8, !tbaa !22
  %idxprom12.i1168.1 = zext i32 %cond.i4.i.i1161.1 to i64
  %arrayidx13.i1169.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1168.1
  %284 = load double, ptr %arrayidx13.i1169.1, align 8, !tbaa !22
  %285 = fneg double %cond.i34.i1165.1
  %neg.i1170.1 = fmul double %283, %285
  %286 = tail call double @llvm.fmuladd.f64(double %neg.i1170.1, double %284, double 0.000000e+00)
  %sub15.i1171.1 = sub nsw i32 127, %cond.i1155.1
  %idxprom16.i1172.1 = sext i32 %sub15.i1171.1 to i64
  %arrayidx17.i1173.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1172.1
  %287 = load double, ptr %arrayidx17.i1173.1, align 8, !tbaa !22
  %sub19.i1174.1 = xor i32 %cond.i4.i.i1161.1, 127
  %idxprom20.i1175.1 = zext i32 %sub19.i1174.1 to i64
  %arrayidx21.i1176.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1175.1
  %288 = load double, ptr %arrayidx21.i1176.1, align 8, !tbaa !22
  %neg23.i1177.1 = fmul double %287, %285
  %289 = tail call double @llvm.fmuladd.f64(double %neg23.i1177.1, double %288, double %286)
  %xr.11.1 = fadd double %xr.11, %289
  %arrayidx151.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 2
  %arrayidx157.2 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2127, i64 2
  %count.i1148.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 2, i32 2
  %290 = load i64, ptr %count.i1148.2, align 8, !tbaa !43
  %291 = load i32, ptr %arrayidx157.2, align 16, !tbaa !18
  %arrayidx3.i1149.2 = getelementptr inbounds i32, ptr %arrayidx157.2, i64 1
  %292 = load i32, ptr %arrayidx3.i1149.2, align 4, !tbaa !18
  %MPS.i1150.2 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 2, i32 1
  %293 = load i8, ptr %MPS.i1150.2, align 2, !tbaa !46
  %tobool.not.i1151.2 = icmp eq i8 %293, 0
  %294 = load i16, ptr %arrayidx151.2, align 8, !tbaa !47
  %conv9.i1152.2 = zext i16 %294 to i32
  %add7.i1153.2 = add nuw nsw i32 %conv9.i1152.2, 64
  %sub.i1154.2 = sub nsw i32 63, %conv9.i1152.2
  %cond.i1155.2 = select i1 %tobool.not.i1151.2, i32 %sub.i1154.2, i32 %add7.i1153.2
  %mul.i1157.2 = mul nsw i32 %291, %cond.i.i1156
  %shr.i1158.2 = ashr i32 %mul.i1157.2, 4
  %add.i1159.2 = add nsw i32 %shr.i1158.2, %292
  %cond.i.i.i1160.2 = tail call i32 @llvm.smax.i32(i32 %add.i1159.2, i32 0)
  %cond.i4.i.i1161.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1160.2, i32 127)
  %conv.i1162.2 = uitofp i64 %290 to double
  %div.i1163.2 = fmul double %conv.i1162.2, 3.125000e-02
  %cmp.i.i1164.2 = fcmp ogt double %div.i1163.2, 1.000000e+00
  %cond.i34.i1165.2 = select i1 %cmp.i.i1164.2, double 1.000000e+00, double %div.i1163.2
  %idxprom.i1166.2 = sext i32 %cond.i1155.2 to i64
  %arrayidx10.i1167.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1166.2
  %295 = load double, ptr %arrayidx10.i1167.2, align 8, !tbaa !22
  %idxprom12.i1168.2 = zext i32 %cond.i4.i.i1161.2 to i64
  %arrayidx13.i1169.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1168.2
  %296 = load double, ptr %arrayidx13.i1169.2, align 8, !tbaa !22
  %297 = fneg double %cond.i34.i1165.2
  %neg.i1170.2 = fmul double %295, %297
  %298 = tail call double @llvm.fmuladd.f64(double %neg.i1170.2, double %296, double 0.000000e+00)
  %sub15.i1171.2 = sub nsw i32 127, %cond.i1155.2
  %idxprom16.i1172.2 = sext i32 %sub15.i1171.2 to i64
  %arrayidx17.i1173.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1172.2
  %299 = load double, ptr %arrayidx17.i1173.2, align 8, !tbaa !22
  %sub19.i1174.2 = xor i32 %cond.i4.i.i1161.2, 127
  %idxprom20.i1175.2 = zext i32 %sub19.i1174.2 to i64
  %arrayidx21.i1176.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1175.2
  %300 = load double, ptr %arrayidx21.i1176.2, align 8, !tbaa !22
  %neg23.i1177.2 = fmul double %299, %297
  %301 = tail call double @llvm.fmuladd.f64(double %neg23.i1177.2, double %300, double %298)
  %xr.11.2 = fadd double %xr.11.1, %301
  %arrayidx151.3 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 3
  %arrayidx157.3 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2127, i64 3
  %count.i1148.3 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 3, i32 2
  %302 = load i64, ptr %count.i1148.3, align 8, !tbaa !43
  %303 = load i32, ptr %arrayidx157.3, align 8, !tbaa !18
  %arrayidx3.i1149.3 = getelementptr inbounds i32, ptr %arrayidx157.3, i64 1
  %304 = load i32, ptr %arrayidx3.i1149.3, align 4, !tbaa !18
  %MPS.i1150.3 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 3, i32 1
  %305 = load i8, ptr %MPS.i1150.3, align 2, !tbaa !46
  %tobool.not.i1151.3 = icmp eq i8 %305, 0
  %306 = load i16, ptr %arrayidx151.3, align 8, !tbaa !47
  %conv9.i1152.3 = zext i16 %306 to i32
  %add7.i1153.3 = add nuw nsw i32 %conv9.i1152.3, 64
  %sub.i1154.3 = sub nsw i32 63, %conv9.i1152.3
  %cond.i1155.3 = select i1 %tobool.not.i1151.3, i32 %sub.i1154.3, i32 %add7.i1153.3
  %mul.i1157.3 = mul nsw i32 %303, %cond.i.i1156
  %shr.i1158.3 = ashr i32 %mul.i1157.3, 4
  %add.i1159.3 = add nsw i32 %shr.i1158.3, %304
  %cond.i.i.i1160.3 = tail call i32 @llvm.smax.i32(i32 %add.i1159.3, i32 0)
  %cond.i4.i.i1161.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1160.3, i32 127)
  %conv.i1162.3 = uitofp i64 %302 to double
  %div.i1163.3 = fmul double %conv.i1162.3, 3.125000e-02
  %cmp.i.i1164.3 = fcmp ogt double %div.i1163.3, 1.000000e+00
  %cond.i34.i1165.3 = select i1 %cmp.i.i1164.3, double 1.000000e+00, double %div.i1163.3
  %idxprom.i1166.3 = sext i32 %cond.i1155.3 to i64
  %arrayidx10.i1167.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1166.3
  %307 = load double, ptr %arrayidx10.i1167.3, align 8, !tbaa !22
  %idxprom12.i1168.3 = zext i32 %cond.i4.i.i1161.3 to i64
  %arrayidx13.i1169.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1168.3
  %308 = load double, ptr %arrayidx13.i1169.3, align 8, !tbaa !22
  %309 = fneg double %cond.i34.i1165.3
  %neg.i1170.3 = fmul double %307, %309
  %310 = tail call double @llvm.fmuladd.f64(double %neg.i1170.3, double %308, double 0.000000e+00)
  %sub15.i1171.3 = sub nsw i32 127, %cond.i1155.3
  %idxprom16.i1172.3 = sext i32 %sub15.i1171.3 to i64
  %arrayidx17.i1173.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1172.3
  %311 = load double, ptr %arrayidx17.i1173.3, align 8, !tbaa !22
  %sub19.i1174.3 = xor i32 %cond.i4.i.i1161.3, 127
  %idxprom20.i1175.3 = zext i32 %sub19.i1174.3 to i64
  %arrayidx21.i1176.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1175.3
  %312 = load double, ptr %arrayidx21.i1176.3, align 8, !tbaa !22
  %neg23.i1177.3 = fmul double %311, %309
  %313 = tail call double @llvm.fmuladd.f64(double %neg23.i1177.3, double %312, double %310)
  %xr.11.3 = fadd double %xr.11.2, %313
  %arrayidx151.4 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 4
  %arrayidx157.4 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2127, i64 4
  %count.i1148.4 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 4, i32 2
  %314 = load i64, ptr %count.i1148.4, align 8, !tbaa !43
  %315 = load i32, ptr %arrayidx157.4, align 16, !tbaa !18
  %arrayidx3.i1149.4 = getelementptr inbounds i32, ptr %arrayidx157.4, i64 1
  %316 = load i32, ptr %arrayidx3.i1149.4, align 4, !tbaa !18
  %MPS.i1150.4 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 4, i32 1
  %317 = load i8, ptr %MPS.i1150.4, align 2, !tbaa !46
  %tobool.not.i1151.4 = icmp eq i8 %317, 0
  %318 = load i16, ptr %arrayidx151.4, align 8, !tbaa !47
  %conv9.i1152.4 = zext i16 %318 to i32
  %add7.i1153.4 = add nuw nsw i32 %conv9.i1152.4, 64
  %sub.i1154.4 = sub nsw i32 63, %conv9.i1152.4
  %cond.i1155.4 = select i1 %tobool.not.i1151.4, i32 %sub.i1154.4, i32 %add7.i1153.4
  %mul.i1157.4 = mul nsw i32 %315, %cond.i.i1156
  %shr.i1158.4 = ashr i32 %mul.i1157.4, 4
  %add.i1159.4 = add nsw i32 %shr.i1158.4, %316
  %cond.i.i.i1160.4 = tail call i32 @llvm.smax.i32(i32 %add.i1159.4, i32 0)
  %cond.i4.i.i1161.4 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1160.4, i32 127)
  %conv.i1162.4 = uitofp i64 %314 to double
  %div.i1163.4 = fmul double %conv.i1162.4, 3.125000e-02
  %cmp.i.i1164.4 = fcmp ogt double %div.i1163.4, 1.000000e+00
  %cond.i34.i1165.4 = select i1 %cmp.i.i1164.4, double 1.000000e+00, double %div.i1163.4
  %idxprom.i1166.4 = sext i32 %cond.i1155.4 to i64
  %arrayidx10.i1167.4 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1166.4
  %319 = load double, ptr %arrayidx10.i1167.4, align 8, !tbaa !22
  %idxprom12.i1168.4 = zext i32 %cond.i4.i.i1161.4 to i64
  %arrayidx13.i1169.4 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1168.4
  %320 = load double, ptr %arrayidx13.i1169.4, align 8, !tbaa !22
  %321 = fneg double %cond.i34.i1165.4
  %neg.i1170.4 = fmul double %319, %321
  %322 = tail call double @llvm.fmuladd.f64(double %neg.i1170.4, double %320, double 0.000000e+00)
  %sub15.i1171.4 = sub nsw i32 127, %cond.i1155.4
  %idxprom16.i1172.4 = sext i32 %sub15.i1171.4 to i64
  %arrayidx17.i1173.4 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1172.4
  %323 = load double, ptr %arrayidx17.i1173.4, align 8, !tbaa !22
  %sub19.i1174.4 = xor i32 %cond.i4.i.i1161.4, 127
  %idxprom20.i1175.4 = zext i32 %sub19.i1174.4 to i64
  %arrayidx21.i1176.4 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1175.4
  %324 = load double, ptr %arrayidx21.i1176.4, align 8, !tbaa !22
  %neg23.i1177.4 = fmul double %323, %321
  %325 = tail call double @llvm.fmuladd.f64(double %neg23.i1177.4, double %324, double %322)
  %xr.11.4 = fadd double %xr.11.3, %325
  %arrayidx151.5 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 5
  %arrayidx157.5 = getelementptr inbounds [3 x [2 x [6 x [2 x i32]]]], ptr @INIT_REF_NO_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2127, i64 5
  %count.i1148.5 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 5, i32 2
  %326 = load i64, ptr %count.i1148.5, align 8, !tbaa !43
  %327 = load i32, ptr %arrayidx157.5, align 8, !tbaa !18
  %arrayidx3.i1149.5 = getelementptr inbounds i32, ptr %arrayidx157.5, i64 1
  %328 = load i32, ptr %arrayidx3.i1149.5, align 4, !tbaa !18
  %MPS.i1150.5 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 3, i64 %indvars.iv2127, i64 5, i32 1
  %329 = load i8, ptr %MPS.i1150.5, align 2, !tbaa !46
  %tobool.not.i1151.5 = icmp eq i8 %329, 0
  %330 = load i16, ptr %arrayidx151.5, align 8, !tbaa !47
  %conv9.i1152.5 = zext i16 %330 to i32
  %add7.i1153.5 = add nuw nsw i32 %conv9.i1152.5, 64
  %sub.i1154.5 = sub nsw i32 63, %conv9.i1152.5
  %cond.i1155.5 = select i1 %tobool.not.i1151.5, i32 %sub.i1154.5, i32 %add7.i1153.5
  %mul.i1157.5 = mul nsw i32 %327, %cond.i.i1156
  %shr.i1158.5 = ashr i32 %mul.i1157.5, 4
  %add.i1159.5 = add nsw i32 %shr.i1158.5, %328
  %cond.i.i.i1160.5 = tail call i32 @llvm.smax.i32(i32 %add.i1159.5, i32 0)
  %cond.i4.i.i1161.5 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1160.5, i32 127)
  %conv.i1162.5 = uitofp i64 %326 to double
  %div.i1163.5 = fmul double %conv.i1162.5, 3.125000e-02
  %cmp.i.i1164.5 = fcmp ogt double %div.i1163.5, 1.000000e+00
  %cond.i34.i1165.5 = select i1 %cmp.i.i1164.5, double 1.000000e+00, double %div.i1163.5
  %idxprom.i1166.5 = sext i32 %cond.i1155.5 to i64
  %arrayidx10.i1167.5 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1166.5
  %331 = load double, ptr %arrayidx10.i1167.5, align 8, !tbaa !22
  %idxprom12.i1168.5 = zext i32 %cond.i4.i.i1161.5 to i64
  %arrayidx13.i1169.5 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1168.5
  %332 = load double, ptr %arrayidx13.i1169.5, align 8, !tbaa !22
  %333 = fneg double %cond.i34.i1165.5
  %neg.i1170.5 = fmul double %331, %333
  %334 = tail call double @llvm.fmuladd.f64(double %neg.i1170.5, double %332, double 0.000000e+00)
  br label %for.inc165

for.inc165:                                       ; preds = %for.cond127.preheader.split, %for.body129.us.preheader
  %cond.i1155.5.sink = phi i32 [ %cond.i1155.5, %for.cond127.preheader.split ], [ %cond.i1124.us.5, %for.body129.us.preheader ]
  %cond.i4.i.i1161.5.sink = phi i32 [ %cond.i4.i.i1161.5, %for.cond127.preheader.split ], [ %cond.i4.i.i1130.us.5, %for.body129.us.preheader ]
  %.sink2315 = phi double [ %333, %for.cond127.preheader.split ], [ %263, %for.body129.us.preheader ]
  %.sink2314 = phi double [ %334, %for.cond127.preheader.split ], [ %264, %for.body129.us.preheader ]
  %xr.11.4.sink = phi double [ %xr.11.4, %for.cond127.preheader.split ], [ %xr.11.us.4, %for.body129.us.preheader ]
  %sub15.i1171.5 = sub nsw i32 127, %cond.i1155.5.sink
  %idxprom16.i1172.5 = sext i32 %sub15.i1171.5 to i64
  %arrayidx17.i1173.5 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1172.5
  %335 = load double, ptr %arrayidx17.i1173.5, align 8, !tbaa !22
  %sub19.i1174.5 = xor i32 %cond.i4.i.i1161.5.sink, 127
  %idxprom20.i1175.5 = zext i32 %sub19.i1174.5 to i64
  %arrayidx21.i1176.5 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1175.5
  %336 = load double, ptr %arrayidx21.i1176.5, align 8, !tbaa !22
  %neg23.i1177.5 = fmul double %335, %.sink2315
  %337 = tail call double @llvm.fmuladd.f64(double %neg23.i1177.5, double %336, double %.sink2314)
  %xr.11.5 = fadd double %xr.11.4.sink, %337
  br i1 %cmp125, label %for.cond127.preheader, label %for.cond168.preheader, !llvm.loop !52

for.body202:                                      ; preds = %for.body202.backedge, %for.cond168.preheader
  %indvars.iv2134 = phi i64 [ 0, %for.cond168.preheader ], [ %indvars.iv.next2135, %for.body202.backedge ]
  %xr.142024 = phi double [ %xr.13.3, %for.cond168.preheader ], [ %xr.142024.be, %for.body202.backedge ]
  %arrayidx207 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 5, i64 %indvars.iv2134
  %count.i1241 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 5, i64 %indvars.iv2134, i32 2
  %338 = load i64, ptr %count.i1241, align 8, !tbaa !43
  %MPS.i1243 = getelementptr inbounds %struct.MotionInfoContexts, ptr %mc, i64 0, i32 5, i64 %indvars.iv2134, i32 1
  %339 = load i8, ptr %MPS.i1243, align 2, !tbaa !46
  %tobool.not.i1244 = icmp eq i8 %339, 0
  %340 = load i16, ptr %arrayidx207, align 8, !tbaa !47
  %conv9.i1245 = zext i16 %340 to i32
  %add7.i1246 = add nuw nsw i32 %conv9.i1245, 64
  %sub.i1247 = sub nsw i32 63, %conv9.i1245
  %cond.i1248 = select i1 %tobool.not.i1244, i32 %sub.i1247, i32 %add7.i1246
  %conv.i1255 = uitofp i64 %338 to double
  %div.i1256 = fmul double %conv.i1255, 3.125000e-02
  %cmp.i.i1257 = fcmp ogt double %div.i1256, 1.000000e+00
  %cond.i34.i1258 = select i1 %cmp.i.i1257, double 1.000000e+00, double %div.i1256
  %idxprom.i1259 = sext i32 %cond.i1248 to i64
  %arrayidx10.i1260 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1259
  %341 = load double, ptr %arrayidx10.i1260, align 8, !tbaa !22
  %342 = fneg double %cond.i34.i1258
  %neg.i1263 = fmul double %341, %342
  %sub15.i1264 = sub nsw i32 127, %cond.i1248
  %idxprom16.i1265 = sext i32 %sub15.i1264 to i64
  %arrayidx17.i1266 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1265
  %343 = load double, ptr %arrayidx17.i1266, align 8, !tbaa !22
  %neg23.i1270 = fmul double %343, %342
  %indvars.iv.next2135 = add nuw nsw i64 %indvars.iv2134, 1
  %exitcond2137.not = icmp eq i64 %indvars.iv.next2135, 4
  br i1 %cmp172, label %for.inc229, label %for.inc229.thread

for.inc229:                                       ; preds = %for.body202
  %arrayidx212 = getelementptr inbounds [4 x [2 x i32]], ptr %arrayidx209, i64 0, i64 %indvars.iv2134
  %344 = load i32, ptr %arrayidx212, align 8, !tbaa !18
  %arrayidx3.i1242 = getelementptr inbounds i32, ptr %arrayidx212, i64 1
  %345 = load i32, ptr %arrayidx3.i1242, align 4, !tbaa !18
  %mul.i1250 = mul nsw i32 %344, %cond.i.i1249
  %shr.i1251 = ashr i32 %mul.i1250, 4
  %add.i1252 = add nsw i32 %shr.i1251, %345
  %cond.i.i.i1253 = tail call i32 @llvm.smax.i32(i32 %add.i1252, i32 0)
  %cond.i4.i.i1254 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1253, i32 127)
  %idxprom12.i1261 = zext i32 %cond.i4.i.i1254 to i64
  %arrayidx13.i1262 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1261
  %346 = load double, ptr %arrayidx13.i1262, align 8, !tbaa !22
  %347 = tail call double @llvm.fmuladd.f64(double %neg.i1263, double %346, double 0.000000e+00)
  %sub19.i1267 = xor i32 %cond.i4.i.i1254, 127
  %idxprom20.i1268 = zext i32 %sub19.i1267 to i64
  %arrayidx21.i1269 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1268
  %348 = load double, ptr %arrayidx21.i1269, align 8, !tbaa !22
  %349 = tail call double @llvm.fmuladd.f64(double %neg23.i1270, double %348, double %347)
  %xr.15 = fadd double %xr.142024, %349
  br i1 %exitcond2137.not, label %if.then269.1, label %for.body202.backedge

for.body202.backedge:                             ; preds = %for.inc229, %for.inc229.thread
  %xr.142024.be = phi double [ %xr.15, %for.inc229 ], [ %xr.152249, %for.inc229.thread ]
  br label %for.body202, !llvm.loop !53

for.inc229.thread:                                ; preds = %for.body202
  %arrayidx224 = getelementptr inbounds [4 x [2 x i32]], ptr %arrayidx221, i64 0, i64 %indvars.iv2134
  %350 = load i32, ptr %arrayidx224, align 8, !tbaa !18
  %arrayidx3.i1273 = getelementptr inbounds i32, ptr %arrayidx224, i64 1
  %351 = load i32, ptr %arrayidx3.i1273, align 4, !tbaa !18
  %mul.i1281 = mul nsw i32 %350, %cond.i.i1249
  %shr.i1282 = ashr i32 %mul.i1281, 4
  %add.i1283 = add nsw i32 %shr.i1282, %351
  %cond.i.i.i1284 = tail call i32 @llvm.smax.i32(i32 %add.i1283, i32 0)
  %cond.i4.i.i1285 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1284, i32 127)
  %idxprom12.i1292 = zext i32 %cond.i4.i.i1285 to i64
  %arrayidx13.i1293 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1292
  %352 = load double, ptr %arrayidx13.i1293, align 8, !tbaa !22
  %353 = tail call double @llvm.fmuladd.f64(double %neg.i1263, double %352, double 0.000000e+00)
  %sub19.i1298 = xor i32 %cond.i4.i.i1285, 127
  %idxprom20.i1299 = zext i32 %sub19.i1298 to i64
  %arrayidx21.i1300 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1299
  %354 = load double, ptr %arrayidx21.i1300, align 8, !tbaa !22
  %355 = tail call double @llvm.fmuladd.f64(double %neg23.i1270, double %354, double %353)
  %xr.152249 = fadd double %xr.142024, %355
  br i1 %exitcond2137.not, label %if.else280.1, label %for.body202.backedge

if.else280.1:                                     ; preds = %for.inc229.thread
  %arrayidx2532254 = getelementptr inbounds [3 x [1 x [3 x [2 x i32]]]], ptr @INIT_TRANSFORM_SIZE_P, i64 0, i64 %indvars.iv2245
  %356 = load i64, ptr %count.i1334, align 8, !tbaa !43
  %357 = load i32, ptr %arrayidx2532254, align 8, !tbaa !18
  %arrayidx3.i1335 = getelementptr inbounds i32, ptr %arrayidx2532254, i64 1
  %358 = load i32, ptr %arrayidx3.i1335, align 4, !tbaa !18
  %359 = load i8, ptr %MPS.i1336, align 2, !tbaa !46
  %tobool.not.i1337 = icmp eq i8 %359, 0
  %360 = load i16, ptr %arrayidx251, align 8, !tbaa !47
  %conv9.i1338 = zext i16 %360 to i32
  %add7.i1339 = add nuw nsw i32 %conv9.i1338, 64
  %sub.i1340 = sub nsw i32 63, %conv9.i1338
  %cond.i1341 = select i1 %tobool.not.i1337, i32 %sub.i1340, i32 %add7.i1339
  %cond.i.i1342 = tail call i32 @llvm.smax.i32(i32 %195, i32 0)
  %mul.i1343 = mul nsw i32 %357, %cond.i.i1342
  %shr.i1344 = ashr i32 %mul.i1343, 4
  %add.i1345 = add nsw i32 %shr.i1344, %358
  %cond.i.i.i1346 = tail call i32 @llvm.smax.i32(i32 %add.i1345, i32 0)
  %cond.i4.i.i1347 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1346, i32 127)
  %conv.i1348 = uitofp i64 %356 to double
  %div.i1349 = fmul double %conv.i1348, 3.125000e-02
  %cmp.i.i1350 = fcmp ogt double %div.i1349, 1.000000e+00
  %cond.i34.i1351 = select i1 %cmp.i.i1350, double 1.000000e+00, double %div.i1349
  %idxprom.i1352 = sext i32 %cond.i1341 to i64
  %arrayidx10.i1353 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1352
  %361 = load double, ptr %arrayidx10.i1353, align 8, !tbaa !22
  %idxprom12.i1354 = zext i32 %cond.i4.i.i1347 to i64
  %arrayidx13.i1355 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1354
  %362 = load double, ptr %arrayidx13.i1355, align 8, !tbaa !22
  %363 = fneg double %cond.i34.i1351
  %neg.i1356 = fmul double %361, %363
  %364 = tail call double @llvm.fmuladd.f64(double %neg.i1356, double %362, double 0.000000e+00)
  %sub15.i1357 = sub nsw i32 127, %cond.i1341
  %idxprom16.i1358 = sext i32 %sub15.i1357 to i64
  %arrayidx17.i1359 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1358
  %365 = load double, ptr %arrayidx17.i1359, align 8, !tbaa !22
  %sub19.i1360 = xor i32 %cond.i4.i.i1347, 127
  %idxprom20.i1361 = zext i32 %sub19.i1360 to i64
  %arrayidx21.i1362 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1361
  %366 = load double, ptr %arrayidx21.i1362, align 8, !tbaa !22
  %neg23.i1363 = fmul double %365, %363
  %367 = tail call double @llvm.fmuladd.f64(double %neg23.i1363, double %366, double %364)
  %xr.17 = fadd double %xr.152249, %367
  %arrayidx256.1 = getelementptr inbounds [3 x [2 x i32]], ptr %arrayidx2532254, i64 0, i64 1
  %368 = load i64, ptr %count.i1334.1, align 8, !tbaa !43
  %369 = load i32, ptr %arrayidx256.1, align 8, !tbaa !18
  %arrayidx3.i1335.1 = getelementptr inbounds [3 x [2 x i32]], ptr %arrayidx2532254, i64 0, i64 1, i64 1
  %370 = load i32, ptr %arrayidx3.i1335.1, align 4, !tbaa !18
  %371 = load i8, ptr %MPS.i1336.1, align 2, !tbaa !46
  %tobool.not.i1337.1 = icmp eq i8 %371, 0
  %372 = load i16, ptr %arrayidx251.1, align 8, !tbaa !47
  %conv9.i1338.1 = zext i16 %372 to i32
  %add7.i1339.1 = add nuw nsw i32 %conv9.i1338.1, 64
  %sub.i1340.1 = sub nsw i32 63, %conv9.i1338.1
  %cond.i1341.1 = select i1 %tobool.not.i1337.1, i32 %sub.i1340.1, i32 %add7.i1339.1
  %cond.i.i1342.1 = tail call i32 @llvm.smax.i32(i32 %195, i32 0)
  %mul.i1343.1 = mul nsw i32 %369, %cond.i.i1342.1
  %shr.i1344.1 = ashr i32 %mul.i1343.1, 4
  %add.i1345.1 = add nsw i32 %shr.i1344.1, %370
  %cond.i.i.i1346.1 = tail call i32 @llvm.smax.i32(i32 %add.i1345.1, i32 0)
  %cond.i4.i.i1347.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1346.1, i32 127)
  %conv.i1348.1 = uitofp i64 %368 to double
  %div.i1349.1 = fmul double %conv.i1348.1, 3.125000e-02
  %cmp.i.i1350.1 = fcmp ogt double %div.i1349.1, 1.000000e+00
  %cond.i34.i1351.1 = select i1 %cmp.i.i1350.1, double 1.000000e+00, double %div.i1349.1
  %idxprom.i1352.1 = sext i32 %cond.i1341.1 to i64
  %arrayidx10.i1353.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1352.1
  %373 = load double, ptr %arrayidx10.i1353.1, align 8, !tbaa !22
  %idxprom12.i1354.1 = zext i32 %cond.i4.i.i1347.1 to i64
  %arrayidx13.i1355.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1354.1
  %374 = load double, ptr %arrayidx13.i1355.1, align 8, !tbaa !22
  %375 = fneg double %cond.i34.i1351.1
  %neg.i1356.1 = fmul double %373, %375
  %376 = tail call double @llvm.fmuladd.f64(double %neg.i1356.1, double %374, double 0.000000e+00)
  %sub15.i1357.1 = sub nsw i32 127, %cond.i1341.1
  %idxprom16.i1358.1 = sext i32 %sub15.i1357.1 to i64
  %arrayidx17.i1359.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1358.1
  %377 = load double, ptr %arrayidx17.i1359.1, align 8, !tbaa !22
  %sub19.i1360.1 = xor i32 %cond.i4.i.i1347.1, 127
  %idxprom20.i1361.1 = zext i32 %sub19.i1360.1 to i64
  %arrayidx21.i1362.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1361.1
  %378 = load double, ptr %arrayidx21.i1362.1, align 8, !tbaa !22
  %neg23.i1363.1 = fmul double %377, %375
  %379 = tail call double @llvm.fmuladd.f64(double %neg23.i1363.1, double %378, double %376)
  %xr.17.1 = fadd double %xr.17, %379
  %arrayidx256.2 = getelementptr inbounds [3 x [2 x i32]], ptr %arrayidx2532254, i64 0, i64 2
  %380 = load i64, ptr %count.i1334.2, align 8, !tbaa !43
  %381 = load i32, ptr %arrayidx256.2, align 8, !tbaa !18
  %arrayidx3.i1335.2 = getelementptr inbounds [3 x [2 x i32]], ptr %arrayidx2532254, i64 0, i64 2, i64 1
  %382 = load i32, ptr %arrayidx3.i1335.2, align 4, !tbaa !18
  %383 = load i8, ptr %MPS.i1336.2, align 2, !tbaa !46
  %tobool.not.i1337.2 = icmp eq i8 %383, 0
  %384 = load i16, ptr %arrayidx251.2, align 8, !tbaa !47
  %conv9.i1338.2 = zext i16 %384 to i32
  %add7.i1339.2 = add nuw nsw i32 %conv9.i1338.2, 64
  %sub.i1340.2 = sub nsw i32 63, %conv9.i1338.2
  %cond.i1341.2 = select i1 %tobool.not.i1337.2, i32 %sub.i1340.2, i32 %add7.i1339.2
  %cond.i.i1342.2 = tail call i32 @llvm.smax.i32(i32 %195, i32 0)
  %mul.i1343.2 = mul nsw i32 %381, %cond.i.i1342.2
  %shr.i1344.2 = ashr i32 %mul.i1343.2, 4
  %add.i1345.2 = add nsw i32 %shr.i1344.2, %382
  %cond.i.i.i1346.2 = tail call i32 @llvm.smax.i32(i32 %add.i1345.2, i32 0)
  %cond.i4.i.i1347.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1346.2, i32 127)
  %conv.i1348.2 = uitofp i64 %380 to double
  %div.i1349.2 = fmul double %conv.i1348.2, 3.125000e-02
  %cmp.i.i1350.2 = fcmp ogt double %div.i1349.2, 1.000000e+00
  %cond.i34.i1351.2 = select i1 %cmp.i.i1350.2, double 1.000000e+00, double %div.i1349.2
  %idxprom.i1352.2 = sext i32 %cond.i1341.2 to i64
  %arrayidx10.i1353.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1352.2
  %385 = load double, ptr %arrayidx10.i1353.2, align 8, !tbaa !22
  %idxprom12.i1354.2 = zext i32 %cond.i4.i.i1347.2 to i64
  %arrayidx13.i1355.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1354.2
  %386 = load double, ptr %arrayidx13.i1355.2, align 8, !tbaa !22
  %387 = fneg double %cond.i34.i1351.2
  %neg.i1356.2 = fmul double %385, %387
  %388 = tail call double @llvm.fmuladd.f64(double %neg.i1356.2, double %386, double 0.000000e+00)
  %sub15.i1357.2 = sub nsw i32 127, %cond.i1341.2
  %idxprom16.i1358.2 = sext i32 %sub15.i1357.2 to i64
  %arrayidx17.i1359.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1358.2
  %389 = load double, ptr %arrayidx17.i1359.2, align 8, !tbaa !22
  %sub19.i1360.2 = xor i32 %cond.i4.i.i1347.2, 127
  %idxprom20.i1361.2 = zext i32 %sub19.i1360.2 to i64
  %arrayidx21.i1362.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1361.2
  %390 = load double, ptr %arrayidx21.i1362.2, align 8, !tbaa !22
  %neg23.i1363.2 = fmul double %389, %387
  %391 = tail call double @llvm.fmuladd.f64(double %neg23.i1363.2, double %390, double %388)
  %xr.17.2 = fadd double %xr.17.1, %391
  %arrayidx285 = getelementptr inbounds [3 x [1 x [2 x [2 x i32]]]], ptr @INIT_IPR_P, i64 0, i64 %indvars.iv2245
  %392 = load i64, ptr %count.i1396, align 8, !tbaa !43
  %393 = load i32, ptr %arrayidx285, align 16, !tbaa !18
  %arrayidx3.i1397 = getelementptr inbounds i32, ptr %arrayidx285, i64 1
  %394 = load i32, ptr %arrayidx3.i1397, align 4, !tbaa !18
  %395 = load i8, ptr %MPS.i1398, align 2, !tbaa !46
  %tobool.not.i1399 = icmp eq i8 %395, 0
  %396 = load i16, ptr %tc, align 8, !tbaa !47
  %conv9.i1400 = zext i16 %396 to i32
  %add7.i1401 = add nuw nsw i32 %conv9.i1400, 64
  %sub.i1402 = sub nsw i32 63, %conv9.i1400
  %cond.i1403 = select i1 %tobool.not.i1399, i32 %sub.i1402, i32 %add7.i1401
  %cond.i.i1404 = tail call i32 @llvm.smax.i32(i32 %195, i32 0)
  %mul.i1405 = mul nsw i32 %393, %cond.i.i1404
  %shr.i1406 = ashr i32 %mul.i1405, 4
  %add.i1407 = add nsw i32 %shr.i1406, %394
  %cond.i.i.i1408 = tail call i32 @llvm.smax.i32(i32 %add.i1407, i32 0)
  %cond.i4.i.i1409 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1408, i32 127)
  %conv.i1410 = uitofp i64 %392 to double
  %div.i1411 = fmul double %conv.i1410, 3.125000e-02
  %cmp.i.i1412 = fcmp ogt double %div.i1411, 1.000000e+00
  %cond.i34.i1413 = select i1 %cmp.i.i1412, double 1.000000e+00, double %div.i1411
  %idxprom.i1414 = sext i32 %cond.i1403 to i64
  %arrayidx10.i1415 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1414
  %397 = load double, ptr %arrayidx10.i1415, align 8, !tbaa !22
  %idxprom12.i1416 = zext i32 %cond.i4.i.i1409 to i64
  %arrayidx13.i1417 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1416
  %398 = load double, ptr %arrayidx13.i1417, align 8, !tbaa !22
  %399 = fneg double %cond.i34.i1413
  %neg.i1418 = fmul double %397, %399
  %400 = tail call double @llvm.fmuladd.f64(double %neg.i1418, double %398, double 0.000000e+00)
  %sub15.i1419 = sub nsw i32 127, %cond.i1403
  %idxprom16.i1420 = sext i32 %sub15.i1419 to i64
  %arrayidx17.i1421 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1420
  %401 = load double, ptr %arrayidx17.i1421, align 8, !tbaa !22
  %sub19.i1422 = xor i32 %cond.i4.i.i1409, 127
  %idxprom20.i1423 = zext i32 %sub19.i1422 to i64
  %arrayidx21.i1424 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1423
  %402 = load double, ptr %arrayidx21.i1424, align 8, !tbaa !22
  %neg23.i1425 = fmul double %401, %399
  %403 = tail call double @llvm.fmuladd.f64(double %neg23.i1425, double %402, double %400)
  %xr.19 = fadd double %xr.17.2, %403
  %arrayidx288.1 = getelementptr inbounds [2 x [2 x i32]], ptr %arrayidx285, i64 0, i64 1
  %404 = load i64, ptr %count.i1396.1, align 8, !tbaa !43
  %405 = load i32, ptr %arrayidx288.1, align 8, !tbaa !18
  %arrayidx3.i1397.1 = getelementptr inbounds [2 x [2 x i32]], ptr %arrayidx285, i64 0, i64 1, i64 1
  %406 = load i32, ptr %arrayidx3.i1397.1, align 4, !tbaa !18
  %407 = load i8, ptr %MPS.i1398.1, align 2, !tbaa !46
  %tobool.not.i1399.1 = icmp eq i8 %407, 0
  %408 = load i16, ptr %arrayidx283.1, align 8, !tbaa !47
  %conv9.i1400.1 = zext i16 %408 to i32
  %add7.i1401.1 = add nuw nsw i32 %conv9.i1400.1, 64
  %sub.i1402.1 = sub nsw i32 63, %conv9.i1400.1
  %cond.i1403.1 = select i1 %tobool.not.i1399.1, i32 %sub.i1402.1, i32 %add7.i1401.1
  %cond.i.i1404.1 = tail call i32 @llvm.smax.i32(i32 %195, i32 0)
  %mul.i1405.1 = mul nsw i32 %405, %cond.i.i1404.1
  %shr.i1406.1 = ashr i32 %mul.i1405.1, 4
  %add.i1407.1 = add nsw i32 %shr.i1406.1, %406
  %cond.i.i.i1408.1 = tail call i32 @llvm.smax.i32(i32 %add.i1407.1, i32 0)
  %cond.i4.i.i1409.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1408.1, i32 127)
  %conv.i1410.1 = uitofp i64 %404 to double
  %div.i1411.1 = fmul double %conv.i1410.1, 3.125000e-02
  %cmp.i.i1412.1 = fcmp ogt double %div.i1411.1, 1.000000e+00
  %cond.i34.i1413.1 = select i1 %cmp.i.i1412.1, double 1.000000e+00, double %div.i1411.1
  %idxprom.i1414.1 = sext i32 %cond.i1403.1 to i64
  %arrayidx10.i1415.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1414.1
  %409 = load double, ptr %arrayidx10.i1415.1, align 8, !tbaa !22
  %idxprom12.i1416.1 = zext i32 %cond.i4.i.i1409.1 to i64
  %arrayidx13.i1417.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1416.1
  %410 = load double, ptr %arrayidx13.i1417.1, align 8, !tbaa !22
  %411 = fneg double %cond.i34.i1413.1
  %neg.i1418.1 = fmul double %409, %411
  %412 = tail call double @llvm.fmuladd.f64(double %neg.i1418.1, double %410, double 0.000000e+00)
  br label %for.inc293.1

if.then269.1:                                     ; preds = %for.inc229
  %arrayidx241 = getelementptr inbounds [1 x [1 x [3 x [2 x i32]]]], ptr @INIT_TRANSFORM_SIZE_I, i64 0, i64 %indvars.iv2245
  %413 = load i64, ptr %count.i1303, align 8, !tbaa !43
  %arrayidx3.i1304 = getelementptr inbounds i32, ptr %arrayidx241, i64 1
  %414 = load i32, ptr %arrayidx3.i1304, align 4, !tbaa !18
  %415 = load i8, ptr %MPS.i1305, align 2, !tbaa !46
  %tobool.not.i1306 = icmp eq i8 %415, 0
  %416 = load i16, ptr %arrayidx239, align 8, !tbaa !47
  %conv9.i1307 = zext i16 %416 to i32
  %add7.i1308 = add nuw nsw i32 %conv9.i1307, 64
  %sub.i1309 = sub nsw i32 63, %conv9.i1307
  %cond.i1310 = select i1 %tobool.not.i1306, i32 %sub.i1309, i32 %add7.i1308
  %cond.i.i1311 = tail call i32 @llvm.smax.i32(i32 %195, i32 0)
  %mul.i1312 = mul nsw i32 %cond.i.i1311, 31
  %shr.i1313 = lshr i32 %mul.i1312, 4
  %add.i1314 = add nsw i32 %shr.i1313, %414
  %cond.i.i.i1315 = tail call i32 @llvm.smax.i32(i32 %add.i1314, i32 0)
  %cond.i4.i.i1316 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1315, i32 127)
  %conv.i1317 = uitofp i64 %413 to double
  %div.i1318 = fmul double %conv.i1317, 3.125000e-02
  %cmp.i.i1319 = fcmp ogt double %div.i1318, 1.000000e+00
  %cond.i34.i1320 = select i1 %cmp.i.i1319, double 1.000000e+00, double %div.i1318
  %idxprom.i1321 = sext i32 %cond.i1310 to i64
  %arrayidx10.i1322 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1321
  %417 = load double, ptr %arrayidx10.i1322, align 8, !tbaa !22
  %idxprom12.i1323 = zext i32 %cond.i4.i.i1316 to i64
  %arrayidx13.i1324 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1323
  %418 = load double, ptr %arrayidx13.i1324, align 8, !tbaa !22
  %419 = fneg double %cond.i34.i1320
  %neg.i1325 = fmul double %417, %419
  %420 = tail call double @llvm.fmuladd.f64(double %neg.i1325, double %418, double 0.000000e+00)
  %sub15.i1326 = sub nsw i32 127, %cond.i1310
  %idxprom16.i1327 = sext i32 %sub15.i1326 to i64
  %arrayidx17.i1328 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1327
  %421 = load double, ptr %arrayidx17.i1328, align 8, !tbaa !22
  %sub19.i1329 = xor i32 %cond.i4.i.i1316, 127
  %idxprom20.i1330 = zext i32 %sub19.i1329 to i64
  %arrayidx21.i1331 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1330
  %422 = load double, ptr %arrayidx21.i1331, align 8, !tbaa !22
  %neg23.i1332 = fmul double %421, %419
  %423 = tail call double @llvm.fmuladd.f64(double %neg23.i1332, double %422, double %420)
  %xr.172266 = fadd double %xr.15, %423
  %arrayidx244.1 = getelementptr inbounds [3 x [2 x i32]], ptr %arrayidx241, i64 0, i64 1
  %424 = load i64, ptr %count.i1303.1, align 8, !tbaa !43
  %425 = load i32, ptr %arrayidx244.1, align 8, !tbaa !18
  %arrayidx3.i1304.1 = getelementptr inbounds [3 x [2 x i32]], ptr %arrayidx241, i64 0, i64 1, i64 1
  %426 = load i32, ptr %arrayidx3.i1304.1, align 4, !tbaa !18
  %427 = load i8, ptr %MPS.i1305.1, align 2, !tbaa !46
  %tobool.not.i1306.1 = icmp eq i8 %427, 0
  %428 = load i16, ptr %arrayidx239.1, align 8, !tbaa !47
  %conv9.i1307.1 = zext i16 %428 to i32
  %add7.i1308.1 = add nuw nsw i32 %conv9.i1307.1, 64
  %sub.i1309.1 = sub nsw i32 63, %conv9.i1307.1
  %cond.i1310.1 = select i1 %tobool.not.i1306.1, i32 %sub.i1309.1, i32 %add7.i1308.1
  %cond.i.i1311.1 = tail call i32 @llvm.smax.i32(i32 %195, i32 0)
  %mul.i1312.1 = mul nsw i32 %425, %cond.i.i1311.1
  %shr.i1313.1 = ashr i32 %mul.i1312.1, 4
  %add.i1314.1 = add nsw i32 %shr.i1313.1, %426
  %cond.i.i.i1315.1 = tail call i32 @llvm.smax.i32(i32 %add.i1314.1, i32 0)
  %cond.i4.i.i1316.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1315.1, i32 127)
  %conv.i1317.1 = uitofp i64 %424 to double
  %div.i1318.1 = fmul double %conv.i1317.1, 3.125000e-02
  %cmp.i.i1319.1 = fcmp ogt double %div.i1318.1, 1.000000e+00
  %cond.i34.i1320.1 = select i1 %cmp.i.i1319.1, double 1.000000e+00, double %div.i1318.1
  %idxprom.i1321.1 = sext i32 %cond.i1310.1 to i64
  %arrayidx10.i1322.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1321.1
  %429 = load double, ptr %arrayidx10.i1322.1, align 8, !tbaa !22
  %idxprom12.i1323.1 = zext i32 %cond.i4.i.i1316.1 to i64
  %arrayidx13.i1324.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1323.1
  %430 = load double, ptr %arrayidx13.i1324.1, align 8, !tbaa !22
  %431 = fneg double %cond.i34.i1320.1
  %neg.i1325.1 = fmul double %429, %431
  %432 = tail call double @llvm.fmuladd.f64(double %neg.i1325.1, double %430, double 0.000000e+00)
  %sub15.i1326.1 = sub nsw i32 127, %cond.i1310.1
  %idxprom16.i1327.1 = sext i32 %sub15.i1326.1 to i64
  %arrayidx17.i1328.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1327.1
  %433 = load double, ptr %arrayidx17.i1328.1, align 8, !tbaa !22
  %sub19.i1329.1 = xor i32 %cond.i4.i.i1316.1, 127
  %idxprom20.i1330.1 = zext i32 %sub19.i1329.1 to i64
  %arrayidx21.i1331.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1330.1
  %434 = load double, ptr %arrayidx21.i1331.1, align 8, !tbaa !22
  %neg23.i1332.1 = fmul double %433, %431
  %435 = tail call double @llvm.fmuladd.f64(double %neg23.i1332.1, double %434, double %432)
  %xr.17.12277 = fadd double %xr.172266, %435
  %arrayidx244.2 = getelementptr inbounds [3 x [2 x i32]], ptr %arrayidx241, i64 0, i64 2
  %436 = load i64, ptr %count.i1303.2, align 8, !tbaa !43
  %437 = load i32, ptr %arrayidx244.2, align 8, !tbaa !18
  %arrayidx3.i1304.2 = getelementptr inbounds [3 x [2 x i32]], ptr %arrayidx241, i64 0, i64 2, i64 1
  %438 = load i32, ptr %arrayidx3.i1304.2, align 4, !tbaa !18
  %439 = load i8, ptr %MPS.i1305.2, align 2, !tbaa !46
  %tobool.not.i1306.2 = icmp eq i8 %439, 0
  %440 = load i16, ptr %arrayidx239.2, align 8, !tbaa !47
  %conv9.i1307.2 = zext i16 %440 to i32
  %add7.i1308.2 = add nuw nsw i32 %conv9.i1307.2, 64
  %sub.i1309.2 = sub nsw i32 63, %conv9.i1307.2
  %cond.i1310.2 = select i1 %tobool.not.i1306.2, i32 %sub.i1309.2, i32 %add7.i1308.2
  %cond.i.i1311.2 = tail call i32 @llvm.smax.i32(i32 %195, i32 0)
  %mul.i1312.2 = mul nsw i32 %437, %cond.i.i1311.2
  %shr.i1313.2 = ashr i32 %mul.i1312.2, 4
  %add.i1314.2 = add nsw i32 %shr.i1313.2, %438
  %cond.i.i.i1315.2 = tail call i32 @llvm.smax.i32(i32 %add.i1314.2, i32 0)
  %cond.i4.i.i1316.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1315.2, i32 127)
  %conv.i1317.2 = uitofp i64 %436 to double
  %div.i1318.2 = fmul double %conv.i1317.2, 3.125000e-02
  %cmp.i.i1319.2 = fcmp ogt double %div.i1318.2, 1.000000e+00
  %cond.i34.i1320.2 = select i1 %cmp.i.i1319.2, double 1.000000e+00, double %div.i1318.2
  %idxprom.i1321.2 = sext i32 %cond.i1310.2 to i64
  %arrayidx10.i1322.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1321.2
  %441 = load double, ptr %arrayidx10.i1322.2, align 8, !tbaa !22
  %idxprom12.i1323.2 = zext i32 %cond.i4.i.i1316.2 to i64
  %arrayidx13.i1324.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1323.2
  %442 = load double, ptr %arrayidx13.i1324.2, align 8, !tbaa !22
  %443 = fneg double %cond.i34.i1320.2
  %neg.i1325.2 = fmul double %441, %443
  %444 = tail call double @llvm.fmuladd.f64(double %neg.i1325.2, double %442, double 0.000000e+00)
  %sub15.i1326.2 = sub nsw i32 127, %cond.i1310.2
  %idxprom16.i1327.2 = sext i32 %sub15.i1326.2 to i64
  %arrayidx17.i1328.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1327.2
  %445 = load double, ptr %arrayidx17.i1328.2, align 8, !tbaa !22
  %sub19.i1329.2 = xor i32 %cond.i4.i.i1316.2, 127
  %idxprom20.i1330.2 = zext i32 %sub19.i1329.2 to i64
  %arrayidx21.i1331.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1330.2
  %446 = load double, ptr %arrayidx21.i1331.2, align 8, !tbaa !22
  %neg23.i1332.2 = fmul double %445, %443
  %447 = tail call double @llvm.fmuladd.f64(double %neg23.i1332.2, double %446, double %444)
  %xr.17.22283 = fadd double %xr.17.12277, %447
  %arrayidx2732285 = getelementptr inbounds [1 x [1 x [2 x [2 x i32]]]], ptr @INIT_IPR_I, i64 0, i64 %indvars.iv2245
  %448 = load i64, ptr %count.i1365, align 8, !tbaa !43
  %arrayidx3.i1366 = getelementptr inbounds i32, ptr %arrayidx2732285, i64 1
  %449 = load i32, ptr %arrayidx3.i1366, align 4, !tbaa !18
  %450 = load i8, ptr %MPS.i1367, align 2, !tbaa !46
  %tobool.not.i1368 = icmp eq i8 %450, 0
  %451 = load i16, ptr %tc, align 8, !tbaa !47
  %conv9.i1369 = zext i16 %451 to i32
  %add7.i1370 = add nuw nsw i32 %conv9.i1369, 64
  %sub.i1371 = sub nsw i32 63, %conv9.i1369
  %cond.i1372 = select i1 %tobool.not.i1368, i32 %sub.i1371, i32 %add7.i1370
  %cond.i.i1373 = tail call i32 @llvm.smax.i32(i32 %195, i32 0)
  %mul.i1374 = mul nsw i32 %cond.i.i1373, 13
  %shr.i1375 = lshr i32 %mul.i1374, 4
  %add.i1376 = add nsw i32 %shr.i1375, %449
  %cond.i.i.i1377 = tail call i32 @llvm.smax.i32(i32 %add.i1376, i32 0)
  %cond.i4.i.i1378 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1377, i32 127)
  %conv.i1379 = uitofp i64 %448 to double
  %div.i1380 = fmul double %conv.i1379, 3.125000e-02
  %cmp.i.i1381 = fcmp ogt double %div.i1380, 1.000000e+00
  %cond.i34.i1382 = select i1 %cmp.i.i1381, double 1.000000e+00, double %div.i1380
  %idxprom.i1383 = sext i32 %cond.i1372 to i64
  %arrayidx10.i1384 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1383
  %452 = load double, ptr %arrayidx10.i1384, align 8, !tbaa !22
  %idxprom12.i1385 = zext i32 %cond.i4.i.i1378 to i64
  %arrayidx13.i1386 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1385
  %453 = load double, ptr %arrayidx13.i1386, align 8, !tbaa !22
  %454 = fneg double %cond.i34.i1382
  %neg.i1387 = fmul double %452, %454
  %455 = tail call double @llvm.fmuladd.f64(double %neg.i1387, double %453, double 0.000000e+00)
  %sub15.i1388 = sub nsw i32 127, %cond.i1372
  %idxprom16.i1389 = sext i32 %sub15.i1388 to i64
  %arrayidx17.i1390 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1389
  %456 = load double, ptr %arrayidx17.i1390, align 8, !tbaa !22
  %sub19.i1391 = xor i32 %cond.i4.i.i1378, 127
  %idxprom20.i1392 = zext i32 %sub19.i1391 to i64
  %arrayidx21.i1393 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1392
  %457 = load double, ptr %arrayidx21.i1393, align 8, !tbaa !22
  %neg23.i1394 = fmul double %456, %454
  %458 = tail call double @llvm.fmuladd.f64(double %neg23.i1394, double %457, double %455)
  %xr.192296 = fadd double %xr.17.22283, %458
  %arrayidx276.1 = getelementptr inbounds [2 x [2 x i32]], ptr %arrayidx2732285, i64 0, i64 1
  %459 = load i64, ptr %count.i1365.1, align 8, !tbaa !43
  %460 = load i32, ptr %arrayidx276.1, align 8, !tbaa !18
  %arrayidx3.i1366.1 = getelementptr inbounds [2 x [2 x i32]], ptr %arrayidx2732285, i64 0, i64 1, i64 1
  %461 = load i32, ptr %arrayidx3.i1366.1, align 4, !tbaa !18
  %462 = load i8, ptr %MPS.i1367.1, align 2, !tbaa !46
  %tobool.not.i1368.1 = icmp eq i8 %462, 0
  %463 = load i16, ptr %arrayidx271.1, align 8, !tbaa !47
  %conv9.i1369.1 = zext i16 %463 to i32
  %add7.i1370.1 = add nuw nsw i32 %conv9.i1369.1, 64
  %sub.i1371.1 = sub nsw i32 63, %conv9.i1369.1
  %cond.i1372.1 = select i1 %tobool.not.i1368.1, i32 %sub.i1371.1, i32 %add7.i1370.1
  %cond.i.i1373.1 = tail call i32 @llvm.smax.i32(i32 %195, i32 0)
  %mul.i1374.1 = mul nsw i32 %460, %cond.i.i1373.1
  %shr.i1375.1 = ashr i32 %mul.i1374.1, 4
  %add.i1376.1 = add nsw i32 %shr.i1375.1, %461
  %cond.i.i.i1377.1 = tail call i32 @llvm.smax.i32(i32 %add.i1376.1, i32 0)
  %cond.i4.i.i1378.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1377.1, i32 127)
  %conv.i1379.1 = uitofp i64 %459 to double
  %div.i1380.1 = fmul double %conv.i1379.1, 3.125000e-02
  %cmp.i.i1381.1 = fcmp ogt double %div.i1380.1, 1.000000e+00
  %cond.i34.i1382.1 = select i1 %cmp.i.i1381.1, double 1.000000e+00, double %div.i1380.1
  %idxprom.i1383.1 = sext i32 %cond.i1372.1 to i64
  %arrayidx10.i1384.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1383.1
  %464 = load double, ptr %arrayidx10.i1384.1, align 8, !tbaa !22
  %idxprom12.i1385.1 = zext i32 %cond.i4.i.i1378.1 to i64
  %arrayidx13.i1386.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1385.1
  %465 = load double, ptr %arrayidx13.i1386.1, align 8, !tbaa !22
  %466 = fneg double %cond.i34.i1382.1
  %neg.i1387.1 = fmul double %464, %466
  %467 = tail call double @llvm.fmuladd.f64(double %neg.i1387.1, double %465, double 0.000000e+00)
  br label %for.inc293.1

for.inc293.1:                                     ; preds = %if.then269.1, %if.else280.1
  %cond.i1372.1.sink = phi i32 [ %cond.i1372.1, %if.then269.1 ], [ %cond.i1403.1, %if.else280.1 ]
  %cond.i4.i.i1378.1.sink = phi i32 [ %cond.i4.i.i1378.1, %if.then269.1 ], [ %cond.i4.i.i1409.1, %if.else280.1 ]
  %.sink2320 = phi double [ %466, %if.then269.1 ], [ %411, %if.else280.1 ]
  %.sink2318 = phi double [ %467, %if.then269.1 ], [ %412, %if.else280.1 ]
  %xr.192298 = phi double [ %xr.192296, %if.then269.1 ], [ %xr.19, %if.else280.1 ]
  %sub15.i1388.1 = sub nsw i32 127, %cond.i1372.1.sink
  %idxprom16.i1389.1 = sext i32 %sub15.i1388.1 to i64
  %arrayidx17.i1390.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1389.1
  %468 = load double, ptr %arrayidx17.i1390.1, align 8, !tbaa !22
  %sub19.i1391.1 = xor i32 %cond.i4.i.i1378.1.sink, 127
  %idxprom20.i1392.1 = zext i32 %sub19.i1391.1 to i64
  %arrayidx21.i1393.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1392.1
  %469 = load double, ptr %arrayidx21.i1393.1, align 8, !tbaa !22
  %neg23.i1394.1 = fmul double %468, %.sink2320
  %470 = tail call double @llvm.fmuladd.f64(double %neg23.i1394.1, double %469, double %.sink2318)
  %xr.19.1 = fadd double %xr.192298, %470
  %arrayidx317 = getelementptr inbounds [3 x [1 x [4 x [2 x i32]]]], ptr @INIT_CIPR_P, i64 0, i64 %indvars.iv2245
  %arrayidx305 = getelementptr inbounds [1 x [1 x [4 x [2 x i32]]]], ptr @INIT_CIPR_I, i64 0, i64 %indvars.iv2245
  %cond.i.i1435 = tail call i32 @llvm.smax.i32(i32 %195, i32 0)
  br i1 %cmp172, label %if.then301, label %if.else312

if.then301:                                       ; preds = %for.inc293.1
  %arrayidx3.i1428 = getelementptr inbounds i32, ptr %arrayidx305, i64 1
  %471 = load i32, ptr %arrayidx3.i1428, align 4, !tbaa !18
  %mul.i1436 = mul nsw i32 %cond.i.i1435, -9
  %shr.i1437 = ashr i32 %mul.i1436, 4
  %add.i1438 = add nsw i32 %shr.i1437, %471
  %cond.i.i.i1439 = tail call i32 @llvm.smax.i32(i32 %add.i1438, i32 0)
  %cond.i4.i.i1440 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1439, i32 127)
  %472 = load double, ptr %arrayidx10.i1446, align 8, !tbaa !22
  %idxprom12.i1447 = zext i32 %cond.i4.i.i1440 to i64
  %arrayidx13.i1448 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1447
  %473 = load double, ptr %arrayidx13.i1448, align 8, !tbaa !22
  %neg.i1449 = fmul double %472, %30
  %474 = tail call double @llvm.fmuladd.f64(double %neg.i1449, double %473, double 0.000000e+00)
  br label %for.inc325

if.else312:                                       ; preds = %for.inc293.1
  %475 = load i32, ptr %arrayidx317, align 16, !tbaa !18
  %arrayidx3.i1459 = getelementptr inbounds i32, ptr %arrayidx317, i64 1
  %476 = load i32, ptr %arrayidx3.i1459, align 4, !tbaa !18
  %cond.i.i1466 = tail call i32 @llvm.smax.i32(i32 %195, i32 0)
  %mul.i1467 = mul nsw i32 %475, %cond.i.i1466
  %shr.i1468 = ashr i32 %mul.i1467, 4
  %add.i1469 = add nsw i32 %shr.i1468, %476
  %cond.i.i.i1470 = tail call i32 @llvm.smax.i32(i32 %add.i1469, i32 0)
  %cond.i4.i.i1471 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1470, i32 127)
  %477 = load double, ptr %arrayidx10.i1477, align 8, !tbaa !22
  %idxprom12.i1478 = zext i32 %cond.i4.i.i1471 to i64
  %arrayidx13.i1479 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1478
  %478 = load double, ptr %arrayidx13.i1479, align 8, !tbaa !22
  %neg.i1480 = fmul double %477, %29
  %479 = tail call double @llvm.fmuladd.f64(double %neg.i1480, double %478, double 0.000000e+00)
  br label %for.inc325

for.inc325:                                       ; preds = %if.then301, %if.else312
  %cond.i4.i.i1440.sink = phi i32 [ %cond.i4.i.i1440, %if.then301 ], [ %cond.i4.i.i1471, %if.else312 ]
  %.sink2323 = phi double [ %30, %if.then301 ], [ %29, %if.else312 ]
  %.sink2321 = phi double [ %474, %if.then301 ], [ %479, %if.else312 ]
  %sub19.i1453 = xor i32 %cond.i4.i.i1440.sink, 127
  %idxprom20.i1454 = zext i32 %sub19.i1453 to i64
  %arrayidx21.i1455 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1454
  %480 = load double, ptr %arrayidx21.i1455, align 8, !tbaa !22
  %neg23.i1456 = fmul double %31, %.sink2323
  %481 = tail call double @llvm.fmuladd.f64(double %neg23.i1456, double %480, double %.sink2321)
  %xr.21 = fadd double %xr.19.1, %481
  br i1 %cmp172, label %if.then301.1, label %if.else312.1

if.else312.1:                                     ; preds = %for.inc325
  %arrayidx320.1 = getelementptr inbounds [4 x [2 x i32]], ptr %arrayidx317, i64 0, i64 1
  %482 = load i32, ptr %arrayidx320.1, align 8, !tbaa !18
  %arrayidx3.i1459.1 = getelementptr inbounds [4 x [2 x i32]], ptr %arrayidx317, i64 0, i64 1, i64 1
  %483 = load i32, ptr %arrayidx3.i1459.1, align 4, !tbaa !18
  %cond.i.i1466.1 = tail call i32 @llvm.smax.i32(i32 %195, i32 0)
  %mul.i1467.1 = mul nsw i32 %482, %cond.i.i1466.1
  %shr.i1468.1 = ashr i32 %mul.i1467.1, 4
  %add.i1469.1 = add nsw i32 %shr.i1468.1, %483
  %cond.i.i.i1470.1 = tail call i32 @llvm.smax.i32(i32 %add.i1469.1, i32 0)
  %cond.i4.i.i1471.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1470.1, i32 127)
  %484 = load double, ptr %arrayidx10.i1477.1, align 8, !tbaa !22
  %idxprom12.i1478.1 = zext i32 %cond.i4.i.i1471.1 to i64
  %arrayidx13.i1479.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1478.1
  %485 = load double, ptr %arrayidx13.i1479.1, align 8, !tbaa !22
  %neg.i1480.1 = fmul double %484, %35
  %486 = tail call double @llvm.fmuladd.f64(double %neg.i1480.1, double %485, double 0.000000e+00)
  br label %for.inc325.1

if.then301.1:                                     ; preds = %for.inc325
  %arrayidx308.1 = getelementptr inbounds [4 x [2 x i32]], ptr %arrayidx305, i64 0, i64 1
  %487 = load i32, ptr %arrayidx308.1, align 8, !tbaa !18
  %arrayidx3.i1428.1 = getelementptr inbounds [4 x [2 x i32]], ptr %arrayidx305, i64 0, i64 1, i64 1
  %488 = load i32, ptr %arrayidx3.i1428.1, align 4, !tbaa !18
  %mul.i1436.1 = mul nsw i32 %487, %cond.i.i1435
  %shr.i1437.1 = ashr i32 %mul.i1436.1, 4
  %add.i1438.1 = add nsw i32 %shr.i1437.1, %488
  %cond.i.i.i1439.1 = tail call i32 @llvm.smax.i32(i32 %add.i1438.1, i32 0)
  %cond.i4.i.i1440.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1439.1, i32 127)
  %489 = load double, ptr %arrayidx10.i1446.1, align 8, !tbaa !22
  %idxprom12.i1447.1 = zext i32 %cond.i4.i.i1440.1 to i64
  %arrayidx13.i1448.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1447.1
  %490 = load double, ptr %arrayidx13.i1448.1, align 8, !tbaa !22
  %neg.i1449.1 = fmul double %489, %36
  %491 = tail call double @llvm.fmuladd.f64(double %neg.i1449.1, double %490, double 0.000000e+00)
  br label %for.inc325.1

for.inc325.1:                                     ; preds = %if.then301.1, %if.else312.1
  %cond.i4.i.i1440.sink.1 = phi i32 [ %cond.i4.i.i1440.1, %if.then301.1 ], [ %cond.i4.i.i1471.1, %if.else312.1 ]
  %.sink2323.1 = phi double [ %36, %if.then301.1 ], [ %35, %if.else312.1 ]
  %.sink2321.1 = phi double [ %491, %if.then301.1 ], [ %486, %if.else312.1 ]
  %sub19.i1453.1 = xor i32 %cond.i4.i.i1440.sink.1, 127
  %idxprom20.i1454.1 = zext i32 %sub19.i1453.1 to i64
  %arrayidx21.i1455.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1454.1
  %492 = load double, ptr %arrayidx21.i1455.1, align 8, !tbaa !22
  %neg23.i1456.1 = fmul double %37, %.sink2323.1
  %493 = tail call double @llvm.fmuladd.f64(double %neg23.i1456.1, double %492, double %.sink2321.1)
  %xr.21.1 = fadd double %xr.21, %493
  br i1 %cmp172, label %if.then301.2, label %if.else312.2

if.else312.2:                                     ; preds = %for.inc325.1
  %arrayidx320.2 = getelementptr inbounds [4 x [2 x i32]], ptr %arrayidx317, i64 0, i64 2
  %494 = load i32, ptr %arrayidx320.2, align 16, !tbaa !18
  %arrayidx3.i1459.2 = getelementptr inbounds [4 x [2 x i32]], ptr %arrayidx317, i64 0, i64 2, i64 1
  %495 = load i32, ptr %arrayidx3.i1459.2, align 4, !tbaa !18
  %cond.i.i1466.2 = tail call i32 @llvm.smax.i32(i32 %195, i32 0)
  %mul.i1467.2 = mul nsw i32 %494, %cond.i.i1466.2
  %shr.i1468.2 = ashr i32 %mul.i1467.2, 4
  %add.i1469.2 = add nsw i32 %shr.i1468.2, %495
  %cond.i.i.i1470.2 = tail call i32 @llvm.smax.i32(i32 %add.i1469.2, i32 0)
  %cond.i4.i.i1471.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1470.2, i32 127)
  %496 = load double, ptr %arrayidx10.i1477.2, align 8, !tbaa !22
  %idxprom12.i1478.2 = zext i32 %cond.i4.i.i1471.2 to i64
  %arrayidx13.i1479.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1478.2
  %497 = load double, ptr %arrayidx13.i1479.2, align 8, !tbaa !22
  %neg.i1480.2 = fmul double %496, %41
  %498 = tail call double @llvm.fmuladd.f64(double %neg.i1480.2, double %497, double 0.000000e+00)
  br label %for.inc325.2

if.then301.2:                                     ; preds = %for.inc325.1
  %arrayidx308.2 = getelementptr inbounds [4 x [2 x i32]], ptr %arrayidx305, i64 0, i64 2
  %499 = load i32, ptr %arrayidx308.2, align 16, !tbaa !18
  %arrayidx3.i1428.2 = getelementptr inbounds [4 x [2 x i32]], ptr %arrayidx305, i64 0, i64 2, i64 1
  %500 = load i32, ptr %arrayidx3.i1428.2, align 4, !tbaa !18
  %mul.i1436.2 = mul nsw i32 %499, %cond.i.i1435
  %shr.i1437.2 = ashr i32 %mul.i1436.2, 4
  %add.i1438.2 = add nsw i32 %shr.i1437.2, %500
  %cond.i.i.i1439.2 = tail call i32 @llvm.smax.i32(i32 %add.i1438.2, i32 0)
  %cond.i4.i.i1440.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1439.2, i32 127)
  %501 = load double, ptr %arrayidx10.i1446.2, align 8, !tbaa !22
  %idxprom12.i1447.2 = zext i32 %cond.i4.i.i1440.2 to i64
  %arrayidx13.i1448.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1447.2
  %502 = load double, ptr %arrayidx13.i1448.2, align 8, !tbaa !22
  %neg.i1449.2 = fmul double %501, %42
  %503 = tail call double @llvm.fmuladd.f64(double %neg.i1449.2, double %502, double 0.000000e+00)
  br label %for.inc325.2

for.inc325.2:                                     ; preds = %if.then301.2, %if.else312.2
  %cond.i4.i.i1440.sink.2 = phi i32 [ %cond.i4.i.i1440.2, %if.then301.2 ], [ %cond.i4.i.i1471.2, %if.else312.2 ]
  %.sink2323.2 = phi double [ %42, %if.then301.2 ], [ %41, %if.else312.2 ]
  %.sink2321.2 = phi double [ %503, %if.then301.2 ], [ %498, %if.else312.2 ]
  %sub19.i1453.2 = xor i32 %cond.i4.i.i1440.sink.2, 127
  %idxprom20.i1454.2 = zext i32 %sub19.i1453.2 to i64
  %arrayidx21.i1455.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1454.2
  %504 = load double, ptr %arrayidx21.i1455.2, align 8, !tbaa !22
  %neg23.i1456.2 = fmul double %43, %.sink2323.2
  %505 = tail call double @llvm.fmuladd.f64(double %neg23.i1456.2, double %504, double %.sink2321.2)
  %xr.21.2 = fadd double %xr.21.1, %505
  br i1 %cmp172, label %if.then301.3, label %if.else312.3

if.else312.3:                                     ; preds = %for.inc325.2
  %arrayidx320.3 = getelementptr inbounds [4 x [2 x i32]], ptr %arrayidx317, i64 0, i64 3
  %506 = load i32, ptr %arrayidx320.3, align 8, !tbaa !18
  %arrayidx3.i1459.3 = getelementptr inbounds [4 x [2 x i32]], ptr %arrayidx317, i64 0, i64 3, i64 1
  %507 = load i32, ptr %arrayidx3.i1459.3, align 4, !tbaa !18
  %cond.i.i1466.3 = tail call i32 @llvm.smax.i32(i32 %195, i32 0)
  %mul.i1467.3 = mul nsw i32 %506, %cond.i.i1466.3
  %shr.i1468.3 = ashr i32 %mul.i1467.3, 4
  %add.i1469.3 = add nsw i32 %shr.i1468.3, %507
  %cond.i.i.i1470.3 = tail call i32 @llvm.smax.i32(i32 %add.i1469.3, i32 0)
  %cond.i4.i.i1471.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1470.3, i32 127)
  %508 = load double, ptr %arrayidx10.i1477.3, align 8, !tbaa !22
  %idxprom12.i1478.3 = zext i32 %cond.i4.i.i1471.3 to i64
  %arrayidx13.i1479.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1478.3
  %509 = load double, ptr %arrayidx13.i1479.3, align 8, !tbaa !22
  %neg.i1480.3 = fmul double %508, %47
  %510 = tail call double @llvm.fmuladd.f64(double %neg.i1480.3, double %509, double 0.000000e+00)
  br label %for.inc325.3

if.then301.3:                                     ; preds = %for.inc325.2
  %arrayidx308.3 = getelementptr inbounds [4 x [2 x i32]], ptr %arrayidx305, i64 0, i64 3
  %511 = load i32, ptr %arrayidx308.3, align 8, !tbaa !18
  %arrayidx3.i1428.3 = getelementptr inbounds [4 x [2 x i32]], ptr %arrayidx305, i64 0, i64 3, i64 1
  %512 = load i32, ptr %arrayidx3.i1428.3, align 4, !tbaa !18
  %mul.i1436.3 = mul nsw i32 %511, %cond.i.i1435
  %shr.i1437.3 = ashr i32 %mul.i1436.3, 4
  %add.i1438.3 = add nsw i32 %shr.i1437.3, %512
  %cond.i.i.i1439.3 = tail call i32 @llvm.smax.i32(i32 %add.i1438.3, i32 0)
  %cond.i4.i.i1440.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1439.3, i32 127)
  %513 = load double, ptr %arrayidx10.i1446.3, align 8, !tbaa !22
  %idxprom12.i1447.3 = zext i32 %cond.i4.i.i1440.3 to i64
  %arrayidx13.i1448.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1447.3
  %514 = load double, ptr %arrayidx13.i1448.3, align 8, !tbaa !22
  %neg.i1449.3 = fmul double %513, %48
  %515 = tail call double @llvm.fmuladd.f64(double %neg.i1449.3, double %514, double 0.000000e+00)
  br label %for.inc325.3

for.inc325.3:                                     ; preds = %if.then301.3, %if.else312.3
  %cond.i4.i.i1440.sink.3 = phi i32 [ %cond.i4.i.i1440.3, %if.then301.3 ], [ %cond.i4.i.i1471.3, %if.else312.3 ]
  %.sink2323.3 = phi double [ %48, %if.then301.3 ], [ %47, %if.else312.3 ]
  %.sink2321.3 = phi double [ %515, %if.then301.3 ], [ %510, %if.else312.3 ]
  %sub19.i1453.3 = xor i32 %cond.i4.i.i1440.sink.3, 127
  %idxprom20.i1454.3 = zext i32 %sub19.i1453.3 to i64
  %arrayidx21.i1455.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1454.3
  %516 = load double, ptr %arrayidx21.i1455.3, align 8, !tbaa !22
  %neg23.i1456.3 = fmul double %49, %.sink2323.3
  %517 = tail call double @llvm.fmuladd.f64(double %neg23.i1456.3, double %516, double %.sink2321.3)
  %xr.21.3 = fadd double %xr.21.2, %517
  %518 = load i32, ptr %qp1.i961, align 4, !tbaa !42
  %cond.i.i1497.us = tail call i32 @llvm.smax.i32(i32 %518, i32 0)
  br label %for.cond331.preheader

for.cond372.preheader:                            ; preds = %for.inc369
  %519 = load i32, ptr %type, align 4, !tbaa !25
  %cmp379 = icmp eq i32 %519, 2
  %520 = load i32, ptr %qp1.i961, align 4, !tbaa !42
  %cond.i.i1559.us = tail call i32 @llvm.smax.i32(i32 %520, i32 0)
  br label %for.cond375.preheader

for.cond331.preheader:                            ; preds = %for.inc325.3, %for.inc369
  %indvars.iv2157 = phi i64 [ %indvars.iv.next2158, %for.inc369 ], [ 0, %for.inc325.3 ]
  %xr.222035 = phi double [ %xr.24.3, %for.inc369 ], [ %xr.21.3, %for.inc325.3 ]
  %arrayidx340.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 0
  %count.i1489.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 0, i32 2
  %521 = load i64, ptr %count.i1489.us, align 8, !tbaa !43
  %MPS.i1491.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 0, i32 1
  %522 = load i8, ptr %MPS.i1491.us, align 2, !tbaa !46
  %tobool.not.i1492.us = icmp eq i8 %522, 0
  %523 = load i16, ptr %arrayidx340.us, align 8, !tbaa !47
  %conv9.i1493.us = zext i16 %523 to i32
  %add7.i1494.us = add nuw nsw i32 %conv9.i1493.us, 64
  %sub.i1495.us = sub nsw i32 63, %conv9.i1493.us
  %cond.i1496.us = select i1 %tobool.not.i1492.us, i32 %sub.i1495.us, i32 %add7.i1494.us
  %conv.i1503.us = uitofp i64 %521 to double
  %div.i1504.us = fmul double %conv.i1503.us, 3.125000e-02
  %cmp.i.i1505.us = fcmp ogt double %div.i1504.us, 1.000000e+00
  %cond.i34.i1506.us = select i1 %cmp.i.i1505.us, double 1.000000e+00, double %div.i1504.us
  %idxprom.i1507.us = sext i32 %cond.i1496.us to i64
  %arrayidx10.i1508.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1507.us
  %524 = load double, ptr %arrayidx10.i1508.us, align 8, !tbaa !22
  %525 = fneg double %cond.i34.i1506.us
  %neg.i1511.us = fmul double %524, %525
  %sub15.i1512.us = sub nsw i32 127, %cond.i1496.us
  %idxprom16.i1513.us = sext i32 %sub15.i1512.us to i64
  %arrayidx17.i1514.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1513.us
  %526 = load double, ptr %arrayidx17.i1514.us, align 8, !tbaa !22
  %neg23.i1518.us = fmul double %526, %525
  %arrayidx340.us.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 1
  %count.i1489.us.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 1, i32 2
  %527 = load i64, ptr %count.i1489.us.1, align 8, !tbaa !43
  br i1 %cmp172, label %for.cond331.preheader.split.us, label %for.cond331.preheader.split

for.cond331.preheader.split.us:                   ; preds = %for.cond331.preheader
  %528 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 0, i64 %indvars.iv2157, i64 0
  %529 = load i32, ptr %528, align 16, !tbaa !18
  %530 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 0, i64 %indvars.iv2157, i64 0, i64 1
  %531 = load i32, ptr %530, align 4, !tbaa !18
  %mul.i1498.us = mul nsw i32 %529, %cond.i.i1497.us
  %shr.i1499.us = ashr i32 %mul.i1498.us, 4
  %add.i1500.us = add nsw i32 %shr.i1499.us, %531
  %cond.i.i.i1501.us = tail call i32 @llvm.smax.i32(i32 %add.i1500.us, i32 0)
  %cond.i4.i.i1502.us = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1501.us, i32 127)
  %idxprom12.i1509.us = zext i32 %cond.i4.i.i1502.us to i64
  %arrayidx13.i1510.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1509.us
  %532 = load double, ptr %arrayidx13.i1510.us, align 8, !tbaa !22
  %533 = tail call double @llvm.fmuladd.f64(double %neg.i1511.us, double %532, double 0.000000e+00)
  %sub19.i1515.us = xor i32 %cond.i4.i.i1502.us, 127
  %idxprom20.i1516.us = zext i32 %sub19.i1515.us to i64
  %arrayidx21.i1517.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1516.us
  %534 = load double, ptr %arrayidx21.i1517.us, align 8, !tbaa !22
  %535 = tail call double @llvm.fmuladd.f64(double %neg23.i1518.us, double %534, double %533)
  %xr.24.us = fadd double %xr.222035, %535
  %536 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 0, i64 %indvars.iv2157, i64 1
  %537 = load i32, ptr %536, align 8, !tbaa !18
  %538 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 0, i64 %indvars.iv2157, i64 1, i64 1
  %539 = load i32, ptr %538, align 4, !tbaa !18
  %MPS.i1491.us.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 1, i32 1
  %540 = load i8, ptr %MPS.i1491.us.1, align 2, !tbaa !46
  %tobool.not.i1492.us.1 = icmp eq i8 %540, 0
  %541 = load i16, ptr %arrayidx340.us.1, align 8, !tbaa !47
  %conv9.i1493.us.1 = zext i16 %541 to i32
  %add7.i1494.us.1 = add nuw nsw i32 %conv9.i1493.us.1, 64
  %sub.i1495.us.1 = sub nsw i32 63, %conv9.i1493.us.1
  %cond.i1496.us.1 = select i1 %tobool.not.i1492.us.1, i32 %sub.i1495.us.1, i32 %add7.i1494.us.1
  %mul.i1498.us.1 = mul nsw i32 %537, %cond.i.i1497.us
  %shr.i1499.us.1 = ashr i32 %mul.i1498.us.1, 4
  %add.i1500.us.1 = add nsw i32 %shr.i1499.us.1, %539
  %cond.i.i.i1501.us.1 = tail call i32 @llvm.smax.i32(i32 %add.i1500.us.1, i32 0)
  %cond.i4.i.i1502.us.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1501.us.1, i32 127)
  %conv.i1503.us.1 = uitofp i64 %527 to double
  %div.i1504.us.1 = fmul double %conv.i1503.us.1, 3.125000e-02
  %cmp.i.i1505.us.1 = fcmp ogt double %div.i1504.us.1, 1.000000e+00
  %cond.i34.i1506.us.1 = select i1 %cmp.i.i1505.us.1, double 1.000000e+00, double %div.i1504.us.1
  %idxprom.i1507.us.1 = sext i32 %cond.i1496.us.1 to i64
  %arrayidx10.i1508.us.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1507.us.1
  %542 = load double, ptr %arrayidx10.i1508.us.1, align 8, !tbaa !22
  %idxprom12.i1509.us.1 = zext i32 %cond.i4.i.i1502.us.1 to i64
  %arrayidx13.i1510.us.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1509.us.1
  %543 = load double, ptr %arrayidx13.i1510.us.1, align 8, !tbaa !22
  %544 = fneg double %cond.i34.i1506.us.1
  %neg.i1511.us.1 = fmul double %542, %544
  %545 = tail call double @llvm.fmuladd.f64(double %neg.i1511.us.1, double %543, double 0.000000e+00)
  %sub15.i1512.us.1 = sub nsw i32 127, %cond.i1496.us.1
  %idxprom16.i1513.us.1 = sext i32 %sub15.i1512.us.1 to i64
  %arrayidx17.i1514.us.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1513.us.1
  %546 = load double, ptr %arrayidx17.i1514.us.1, align 8, !tbaa !22
  %sub19.i1515.us.1 = xor i32 %cond.i4.i.i1502.us.1, 127
  %idxprom20.i1516.us.1 = zext i32 %sub19.i1515.us.1 to i64
  %arrayidx21.i1517.us.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1516.us.1
  %547 = load double, ptr %arrayidx21.i1517.us.1, align 8, !tbaa !22
  %neg23.i1518.us.1 = fmul double %546, %544
  %548 = tail call double @llvm.fmuladd.f64(double %neg23.i1518.us.1, double %547, double %545)
  %xr.24.us.1 = fadd double %xr.24.us, %548
  %arrayidx340.us.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 2
  %549 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 0, i64 %indvars.iv2157, i64 2
  %count.i1489.us.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 2, i32 2
  %550 = load i64, ptr %count.i1489.us.2, align 8, !tbaa !43
  %551 = load i32, ptr %549, align 16, !tbaa !18
  %552 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 0, i64 %indvars.iv2157, i64 2, i64 1
  %553 = load i32, ptr %552, align 4, !tbaa !18
  %MPS.i1491.us.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 2, i32 1
  %554 = load i8, ptr %MPS.i1491.us.2, align 2, !tbaa !46
  %tobool.not.i1492.us.2 = icmp eq i8 %554, 0
  %555 = load i16, ptr %arrayidx340.us.2, align 8, !tbaa !47
  %conv9.i1493.us.2 = zext i16 %555 to i32
  %add7.i1494.us.2 = add nuw nsw i32 %conv9.i1493.us.2, 64
  %sub.i1495.us.2 = sub nsw i32 63, %conv9.i1493.us.2
  %cond.i1496.us.2 = select i1 %tobool.not.i1492.us.2, i32 %sub.i1495.us.2, i32 %add7.i1494.us.2
  %mul.i1498.us.2 = mul nsw i32 %551, %cond.i.i1497.us
  %shr.i1499.us.2 = ashr i32 %mul.i1498.us.2, 4
  %add.i1500.us.2 = add nsw i32 %shr.i1499.us.2, %553
  %cond.i.i.i1501.us.2 = tail call i32 @llvm.smax.i32(i32 %add.i1500.us.2, i32 0)
  %cond.i4.i.i1502.us.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1501.us.2, i32 127)
  %conv.i1503.us.2 = uitofp i64 %550 to double
  %div.i1504.us.2 = fmul double %conv.i1503.us.2, 3.125000e-02
  %cmp.i.i1505.us.2 = fcmp ogt double %div.i1504.us.2, 1.000000e+00
  %cond.i34.i1506.us.2 = select i1 %cmp.i.i1505.us.2, double 1.000000e+00, double %div.i1504.us.2
  %idxprom.i1507.us.2 = sext i32 %cond.i1496.us.2 to i64
  %arrayidx10.i1508.us.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1507.us.2
  %556 = load double, ptr %arrayidx10.i1508.us.2, align 8, !tbaa !22
  %idxprom12.i1509.us.2 = zext i32 %cond.i4.i.i1502.us.2 to i64
  %arrayidx13.i1510.us.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1509.us.2
  %557 = load double, ptr %arrayidx13.i1510.us.2, align 8, !tbaa !22
  %558 = fneg double %cond.i34.i1506.us.2
  %neg.i1511.us.2 = fmul double %556, %558
  %559 = tail call double @llvm.fmuladd.f64(double %neg.i1511.us.2, double %557, double 0.000000e+00)
  %sub15.i1512.us.2 = sub nsw i32 127, %cond.i1496.us.2
  %idxprom16.i1513.us.2 = sext i32 %sub15.i1512.us.2 to i64
  %arrayidx17.i1514.us.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1513.us.2
  %560 = load double, ptr %arrayidx17.i1514.us.2, align 8, !tbaa !22
  %sub19.i1515.us.2 = xor i32 %cond.i4.i.i1502.us.2, 127
  %idxprom20.i1516.us.2 = zext i32 %sub19.i1515.us.2 to i64
  %arrayidx21.i1517.us.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1516.us.2
  %561 = load double, ptr %arrayidx21.i1517.us.2, align 8, !tbaa !22
  %neg23.i1518.us.2 = fmul double %560, %558
  %562 = tail call double @llvm.fmuladd.f64(double %neg23.i1518.us.2, double %561, double %559)
  %xr.24.us.2 = fadd double %xr.24.us.1, %562
  %arrayidx340.us.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 3
  %563 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 0, i64 %indvars.iv2157, i64 3
  %count.i1489.us.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 3, i32 2
  %564 = load i64, ptr %count.i1489.us.3, align 8, !tbaa !43
  %565 = load i32, ptr %563, align 8, !tbaa !18
  %566 = getelementptr inbounds [1 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_I, i64 0, i64 0, i64 %indvars.iv2157, i64 3, i64 1
  %567 = load i32, ptr %566, align 4, !tbaa !18
  %MPS.i1491.us.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 3, i32 1
  %568 = load i8, ptr %MPS.i1491.us.3, align 2, !tbaa !46
  %tobool.not.i1492.us.3 = icmp eq i8 %568, 0
  %569 = load i16, ptr %arrayidx340.us.3, align 8, !tbaa !47
  %conv9.i1493.us.3 = zext i16 %569 to i32
  %add7.i1494.us.3 = add nuw nsw i32 %conv9.i1493.us.3, 64
  %sub.i1495.us.3 = sub nsw i32 63, %conv9.i1493.us.3
  %cond.i1496.us.3 = select i1 %tobool.not.i1492.us.3, i32 %sub.i1495.us.3, i32 %add7.i1494.us.3
  %mul.i1498.us.3 = mul nsw i32 %565, %cond.i.i1497.us
  %shr.i1499.us.3 = ashr i32 %mul.i1498.us.3, 4
  %add.i1500.us.3 = add nsw i32 %shr.i1499.us.3, %567
  %cond.i.i.i1501.us.3 = tail call i32 @llvm.smax.i32(i32 %add.i1500.us.3, i32 0)
  %cond.i4.i.i1502.us.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1501.us.3, i32 127)
  %conv.i1503.us.3 = uitofp i64 %564 to double
  %div.i1504.us.3 = fmul double %conv.i1503.us.3, 3.125000e-02
  %cmp.i.i1505.us.3 = fcmp ogt double %div.i1504.us.3, 1.000000e+00
  %cond.i34.i1506.us.3 = select i1 %cmp.i.i1505.us.3, double 1.000000e+00, double %div.i1504.us.3
  %idxprom.i1507.us.3 = sext i32 %cond.i1496.us.3 to i64
  %arrayidx10.i1508.us.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1507.us.3
  %570 = load double, ptr %arrayidx10.i1508.us.3, align 8, !tbaa !22
  %idxprom12.i1509.us.3 = zext i32 %cond.i4.i.i1502.us.3 to i64
  %arrayidx13.i1510.us.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1509.us.3
  %571 = load double, ptr %arrayidx13.i1510.us.3, align 8, !tbaa !22
  %572 = fneg double %cond.i34.i1506.us.3
  %neg.i1511.us.3 = fmul double %570, %572
  %573 = tail call double @llvm.fmuladd.f64(double %neg.i1511.us.3, double %571, double 0.000000e+00)
  br label %for.inc369

for.cond331.preheader.split:                      ; preds = %for.cond331.preheader
  %arrayidx361 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2157, i64 0
  %574 = load i32, ptr %arrayidx361, align 16, !tbaa !18
  %arrayidx3.i1521 = getelementptr inbounds i32, ptr %arrayidx361, i64 1
  %575 = load i32, ptr %arrayidx3.i1521, align 4, !tbaa !18
  %mul.i1529 = mul nsw i32 %574, %cond.i.i1497.us
  %shr.i1530 = ashr i32 %mul.i1529, 4
  %add.i1531 = add nsw i32 %shr.i1530, %575
  %cond.i.i.i1532 = tail call i32 @llvm.smax.i32(i32 %add.i1531, i32 0)
  %cond.i4.i.i1533 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1532, i32 127)
  %idxprom12.i1540 = zext i32 %cond.i4.i.i1533 to i64
  %arrayidx13.i1541 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1540
  %576 = load double, ptr %arrayidx13.i1541, align 8, !tbaa !22
  %577 = tail call double @llvm.fmuladd.f64(double %neg.i1511.us, double %576, double 0.000000e+00)
  %sub19.i1546 = xor i32 %cond.i4.i.i1533, 127
  %idxprom20.i1547 = zext i32 %sub19.i1546 to i64
  %arrayidx21.i1548 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1547
  %578 = load double, ptr %arrayidx21.i1548, align 8, !tbaa !22
  %579 = tail call double @llvm.fmuladd.f64(double %neg23.i1518.us, double %578, double %577)
  %xr.24 = fadd double %xr.222035, %579
  %arrayidx361.1 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2157, i64 1
  %580 = load i32, ptr %arrayidx361.1, align 8, !tbaa !18
  %arrayidx3.i1521.1 = getelementptr inbounds i32, ptr %arrayidx361.1, i64 1
  %581 = load i32, ptr %arrayidx3.i1521.1, align 4, !tbaa !18
  %MPS.i1522.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 1, i32 1
  %582 = load i8, ptr %MPS.i1522.1, align 2, !tbaa !46
  %tobool.not.i1523.1 = icmp eq i8 %582, 0
  %583 = load i16, ptr %arrayidx340.us.1, align 8, !tbaa !47
  %conv9.i1524.1 = zext i16 %583 to i32
  %add7.i1525.1 = add nuw nsw i32 %conv9.i1524.1, 64
  %sub.i1526.1 = sub nsw i32 63, %conv9.i1524.1
  %cond.i1527.1 = select i1 %tobool.not.i1523.1, i32 %sub.i1526.1, i32 %add7.i1525.1
  %mul.i1529.1 = mul nsw i32 %580, %cond.i.i1497.us
  %shr.i1530.1 = ashr i32 %mul.i1529.1, 4
  %add.i1531.1 = add nsw i32 %shr.i1530.1, %581
  %cond.i.i.i1532.1 = tail call i32 @llvm.smax.i32(i32 %add.i1531.1, i32 0)
  %cond.i4.i.i1533.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1532.1, i32 127)
  %conv.i1534.1 = uitofp i64 %527 to double
  %div.i1535.1 = fmul double %conv.i1534.1, 3.125000e-02
  %cmp.i.i1536.1 = fcmp ogt double %div.i1535.1, 1.000000e+00
  %cond.i34.i1537.1 = select i1 %cmp.i.i1536.1, double 1.000000e+00, double %div.i1535.1
  %idxprom.i1538.1 = sext i32 %cond.i1527.1 to i64
  %arrayidx10.i1539.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1538.1
  %584 = load double, ptr %arrayidx10.i1539.1, align 8, !tbaa !22
  %idxprom12.i1540.1 = zext i32 %cond.i4.i.i1533.1 to i64
  %arrayidx13.i1541.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1540.1
  %585 = load double, ptr %arrayidx13.i1541.1, align 8, !tbaa !22
  %586 = fneg double %cond.i34.i1537.1
  %neg.i1542.1 = fmul double %584, %586
  %587 = tail call double @llvm.fmuladd.f64(double %neg.i1542.1, double %585, double 0.000000e+00)
  %sub15.i1543.1 = sub nsw i32 127, %cond.i1527.1
  %idxprom16.i1544.1 = sext i32 %sub15.i1543.1 to i64
  %arrayidx17.i1545.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1544.1
  %588 = load double, ptr %arrayidx17.i1545.1, align 8, !tbaa !22
  %sub19.i1546.1 = xor i32 %cond.i4.i.i1533.1, 127
  %idxprom20.i1547.1 = zext i32 %sub19.i1546.1 to i64
  %arrayidx21.i1548.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1547.1
  %589 = load double, ptr %arrayidx21.i1548.1, align 8, !tbaa !22
  %neg23.i1549.1 = fmul double %588, %586
  %590 = tail call double @llvm.fmuladd.f64(double %neg23.i1549.1, double %589, double %587)
  %xr.24.1 = fadd double %xr.24, %590
  %arrayidx355.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 2
  %arrayidx361.2 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2157, i64 2
  %count.i1520.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 2, i32 2
  %591 = load i64, ptr %count.i1520.2, align 8, !tbaa !43
  %592 = load i32, ptr %arrayidx361.2, align 16, !tbaa !18
  %arrayidx3.i1521.2 = getelementptr inbounds i32, ptr %arrayidx361.2, i64 1
  %593 = load i32, ptr %arrayidx3.i1521.2, align 4, !tbaa !18
  %MPS.i1522.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 2, i32 1
  %594 = load i8, ptr %MPS.i1522.2, align 2, !tbaa !46
  %tobool.not.i1523.2 = icmp eq i8 %594, 0
  %595 = load i16, ptr %arrayidx355.2, align 8, !tbaa !47
  %conv9.i1524.2 = zext i16 %595 to i32
  %add7.i1525.2 = add nuw nsw i32 %conv9.i1524.2, 64
  %sub.i1526.2 = sub nsw i32 63, %conv9.i1524.2
  %cond.i1527.2 = select i1 %tobool.not.i1523.2, i32 %sub.i1526.2, i32 %add7.i1525.2
  %mul.i1529.2 = mul nsw i32 %592, %cond.i.i1497.us
  %shr.i1530.2 = ashr i32 %mul.i1529.2, 4
  %add.i1531.2 = add nsw i32 %shr.i1530.2, %593
  %cond.i.i.i1532.2 = tail call i32 @llvm.smax.i32(i32 %add.i1531.2, i32 0)
  %cond.i4.i.i1533.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1532.2, i32 127)
  %conv.i1534.2 = uitofp i64 %591 to double
  %div.i1535.2 = fmul double %conv.i1534.2, 3.125000e-02
  %cmp.i.i1536.2 = fcmp ogt double %div.i1535.2, 1.000000e+00
  %cond.i34.i1537.2 = select i1 %cmp.i.i1536.2, double 1.000000e+00, double %div.i1535.2
  %idxprom.i1538.2 = sext i32 %cond.i1527.2 to i64
  %arrayidx10.i1539.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1538.2
  %596 = load double, ptr %arrayidx10.i1539.2, align 8, !tbaa !22
  %idxprom12.i1540.2 = zext i32 %cond.i4.i.i1533.2 to i64
  %arrayidx13.i1541.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1540.2
  %597 = load double, ptr %arrayidx13.i1541.2, align 8, !tbaa !22
  %598 = fneg double %cond.i34.i1537.2
  %neg.i1542.2 = fmul double %596, %598
  %599 = tail call double @llvm.fmuladd.f64(double %neg.i1542.2, double %597, double 0.000000e+00)
  %sub15.i1543.2 = sub nsw i32 127, %cond.i1527.2
  %idxprom16.i1544.2 = sext i32 %sub15.i1543.2 to i64
  %arrayidx17.i1545.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1544.2
  %600 = load double, ptr %arrayidx17.i1545.2, align 8, !tbaa !22
  %sub19.i1546.2 = xor i32 %cond.i4.i.i1533.2, 127
  %idxprom20.i1547.2 = zext i32 %sub19.i1546.2 to i64
  %arrayidx21.i1548.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1547.2
  %601 = load double, ptr %arrayidx21.i1548.2, align 8, !tbaa !22
  %neg23.i1549.2 = fmul double %600, %598
  %602 = tail call double @llvm.fmuladd.f64(double %neg23.i1549.2, double %601, double %599)
  %xr.24.2 = fadd double %xr.24.1, %602
  %arrayidx355.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 3
  %arrayidx361.3 = getelementptr inbounds [3 x [3 x [4 x [2 x i32]]]], ptr @INIT_CBP_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2157, i64 3
  %count.i1520.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 3, i32 2
  %603 = load i64, ptr %count.i1520.3, align 8, !tbaa !43
  %604 = load i32, ptr %arrayidx361.3, align 8, !tbaa !18
  %arrayidx3.i1521.3 = getelementptr inbounds i32, ptr %arrayidx361.3, i64 1
  %605 = load i32, ptr %arrayidx3.i1521.3, align 4, !tbaa !18
  %MPS.i1522.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 2, i64 %indvars.iv2157, i64 3, i32 1
  %606 = load i8, ptr %MPS.i1522.3, align 2, !tbaa !46
  %tobool.not.i1523.3 = icmp eq i8 %606, 0
  %607 = load i16, ptr %arrayidx355.3, align 8, !tbaa !47
  %conv9.i1524.3 = zext i16 %607 to i32
  %add7.i1525.3 = add nuw nsw i32 %conv9.i1524.3, 64
  %sub.i1526.3 = sub nsw i32 63, %conv9.i1524.3
  %cond.i1527.3 = select i1 %tobool.not.i1523.3, i32 %sub.i1526.3, i32 %add7.i1525.3
  %mul.i1529.3 = mul nsw i32 %604, %cond.i.i1497.us
  %shr.i1530.3 = ashr i32 %mul.i1529.3, 4
  %add.i1531.3 = add nsw i32 %shr.i1530.3, %605
  %cond.i.i.i1532.3 = tail call i32 @llvm.smax.i32(i32 %add.i1531.3, i32 0)
  %cond.i4.i.i1533.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1532.3, i32 127)
  %conv.i1534.3 = uitofp i64 %603 to double
  %div.i1535.3 = fmul double %conv.i1534.3, 3.125000e-02
  %cmp.i.i1536.3 = fcmp ogt double %div.i1535.3, 1.000000e+00
  %cond.i34.i1537.3 = select i1 %cmp.i.i1536.3, double 1.000000e+00, double %div.i1535.3
  %idxprom.i1538.3 = sext i32 %cond.i1527.3 to i64
  %arrayidx10.i1539.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1538.3
  %608 = load double, ptr %arrayidx10.i1539.3, align 8, !tbaa !22
  %idxprom12.i1540.3 = zext i32 %cond.i4.i.i1533.3 to i64
  %arrayidx13.i1541.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1540.3
  %609 = load double, ptr %arrayidx13.i1541.3, align 8, !tbaa !22
  %610 = fneg double %cond.i34.i1537.3
  %neg.i1542.3 = fmul double %608, %610
  %611 = tail call double @llvm.fmuladd.f64(double %neg.i1542.3, double %609, double 0.000000e+00)
  br label %for.inc369

for.inc369:                                       ; preds = %for.cond331.preheader.split, %for.cond331.preheader.split.us
  %cond.i1527.3.sink = phi i32 [ %cond.i1527.3, %for.cond331.preheader.split ], [ %cond.i1496.us.3, %for.cond331.preheader.split.us ]
  %cond.i4.i.i1533.3.sink = phi i32 [ %cond.i4.i.i1533.3, %for.cond331.preheader.split ], [ %cond.i4.i.i1502.us.3, %for.cond331.preheader.split.us ]
  %.sink2326 = phi double [ %610, %for.cond331.preheader.split ], [ %572, %for.cond331.preheader.split.us ]
  %.sink2325 = phi double [ %611, %for.cond331.preheader.split ], [ %573, %for.cond331.preheader.split.us ]
  %xr.24.2.sink = phi double [ %xr.24.2, %for.cond331.preheader.split ], [ %xr.24.us.2, %for.cond331.preheader.split.us ]
  %sub15.i1543.3 = sub nsw i32 127, %cond.i1527.3.sink
  %idxprom16.i1544.3 = sext i32 %sub15.i1543.3 to i64
  %arrayidx17.i1545.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1544.3
  %612 = load double, ptr %arrayidx17.i1545.3, align 8, !tbaa !22
  %sub19.i1546.3 = xor i32 %cond.i4.i.i1533.3.sink, 127
  %idxprom20.i1547.3 = zext i32 %sub19.i1546.3 to i64
  %arrayidx21.i1548.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1547.3
  %613 = load double, ptr %arrayidx21.i1548.3, align 8, !tbaa !22
  %neg23.i1549.3 = fmul double %612, %.sink2326
  %614 = tail call double @llvm.fmuladd.f64(double %neg23.i1549.3, double %613, double %.sink2325)
  %xr.24.3 = fadd double %xr.24.2.sink, %614
  %indvars.iv.next2158 = add nuw nsw i64 %indvars.iv2157, 1
  %exitcond2160.not = icmp eq i64 %indvars.iv.next2158, 3
  br i1 %exitcond2160.not, label %for.cond372.preheader, label %for.cond331.preheader, !llvm.loop !54

for.cond416.preheader:                            ; preds = %for.inc413
  %615 = load i32, ptr %type, align 4, !tbaa !25
  %cmp423 = icmp eq i32 %615, 2
  %616 = load i32, ptr %qp1.i961, align 4, !tbaa !42
  %cond.i.i1621.us = tail call i32 @llvm.smax.i32(i32 %616, i32 0)
  br label %for.cond419.preheader

for.cond375.preheader:                            ; preds = %for.cond372.preheader, %for.inc413
  %indvars.iv2169 = phi i64 [ 0, %for.cond372.preheader ], [ %indvars.iv.next2170, %for.inc413 ]
  %xr.252040 = phi double [ %xr.24.3, %for.cond372.preheader ], [ %xr.27.3, %for.inc413 ]
  %arrayidx384.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 0
  %count.i1551.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 0, i32 2
  %617 = load i64, ptr %count.i1551.us, align 8, !tbaa !43
  %MPS.i1553.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 0, i32 1
  %618 = load i8, ptr %MPS.i1553.us, align 2, !tbaa !46
  %tobool.not.i1554.us = icmp eq i8 %618, 0
  %619 = load i16, ptr %arrayidx384.us, align 8, !tbaa !47
  %conv9.i1555.us = zext i16 %619 to i32
  %add7.i1556.us = add nuw nsw i32 %conv9.i1555.us, 64
  %sub.i1557.us = sub nsw i32 63, %conv9.i1555.us
  %cond.i1558.us = select i1 %tobool.not.i1554.us, i32 %sub.i1557.us, i32 %add7.i1556.us
  %conv.i1565.us = uitofp i64 %617 to double
  %div.i1566.us = fmul double %conv.i1565.us, 3.125000e-02
  %cmp.i.i1567.us = fcmp ogt double %div.i1566.us, 1.000000e+00
  %cond.i34.i1568.us = select i1 %cmp.i.i1567.us, double 1.000000e+00, double %div.i1566.us
  %idxprom.i1569.us = sext i32 %cond.i1558.us to i64
  %arrayidx10.i1570.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1569.us
  %620 = load double, ptr %arrayidx10.i1570.us, align 8, !tbaa !22
  %621 = fneg double %cond.i34.i1568.us
  %neg.i1573.us = fmul double %620, %621
  %sub15.i1574.us = sub nsw i32 127, %cond.i1558.us
  %idxprom16.i1575.us = sext i32 %sub15.i1574.us to i64
  %arrayidx17.i1576.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1575.us
  %622 = load double, ptr %arrayidx17.i1576.us, align 8, !tbaa !22
  %neg23.i1580.us = fmul double %622, %621
  %arrayidx384.us.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 1
  %count.i1551.us.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 1, i32 2
  %623 = load i64, ptr %count.i1551.us.1, align 8, !tbaa !43
  br i1 %cmp379, label %for.cond375.preheader.split.us, label %for.cond375.preheader.split

for.cond375.preheader.split.us:                   ; preds = %for.cond375.preheader
  %624 = getelementptr inbounds [1 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_I, i64 0, i64 0, i64 %indvars.iv2169, i64 0
  %625 = load i32, ptr %624, align 16, !tbaa !18
  %626 = getelementptr inbounds [1 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_I, i64 0, i64 0, i64 %indvars.iv2169, i64 0, i64 1
  %627 = load i32, ptr %626, align 4, !tbaa !18
  %mul.i1560.us = mul nsw i32 %625, %cond.i.i1559.us
  %shr.i1561.us = ashr i32 %mul.i1560.us, 4
  %add.i1562.us = add nsw i32 %shr.i1561.us, %627
  %cond.i.i.i1563.us = tail call i32 @llvm.smax.i32(i32 %add.i1562.us, i32 0)
  %cond.i4.i.i1564.us = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1563.us, i32 127)
  %idxprom12.i1571.us = zext i32 %cond.i4.i.i1564.us to i64
  %arrayidx13.i1572.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1571.us
  %628 = load double, ptr %arrayidx13.i1572.us, align 8, !tbaa !22
  %629 = tail call double @llvm.fmuladd.f64(double %neg.i1573.us, double %628, double 0.000000e+00)
  %sub19.i1577.us = xor i32 %cond.i4.i.i1564.us, 127
  %idxprom20.i1578.us = zext i32 %sub19.i1577.us to i64
  %arrayidx21.i1579.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1578.us
  %630 = load double, ptr %arrayidx21.i1579.us, align 8, !tbaa !22
  %631 = tail call double @llvm.fmuladd.f64(double %neg23.i1580.us, double %630, double %629)
  %xr.27.us = fadd double %xr.252040, %631
  %632 = getelementptr inbounds [1 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_I, i64 0, i64 0, i64 %indvars.iv2169, i64 1
  %633 = load i32, ptr %632, align 8, !tbaa !18
  %634 = getelementptr inbounds [1 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_I, i64 0, i64 0, i64 %indvars.iv2169, i64 1, i64 1
  %635 = load i32, ptr %634, align 4, !tbaa !18
  %MPS.i1553.us.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 1, i32 1
  %636 = load i8, ptr %MPS.i1553.us.1, align 2, !tbaa !46
  %tobool.not.i1554.us.1 = icmp eq i8 %636, 0
  %637 = load i16, ptr %arrayidx384.us.1, align 8, !tbaa !47
  %conv9.i1555.us.1 = zext i16 %637 to i32
  %add7.i1556.us.1 = add nuw nsw i32 %conv9.i1555.us.1, 64
  %sub.i1557.us.1 = sub nsw i32 63, %conv9.i1555.us.1
  %cond.i1558.us.1 = select i1 %tobool.not.i1554.us.1, i32 %sub.i1557.us.1, i32 %add7.i1556.us.1
  %mul.i1560.us.1 = mul nsw i32 %633, %cond.i.i1559.us
  %shr.i1561.us.1 = ashr i32 %mul.i1560.us.1, 4
  %add.i1562.us.1 = add nsw i32 %shr.i1561.us.1, %635
  %cond.i.i.i1563.us.1 = tail call i32 @llvm.smax.i32(i32 %add.i1562.us.1, i32 0)
  %cond.i4.i.i1564.us.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1563.us.1, i32 127)
  %conv.i1565.us.1 = uitofp i64 %623 to double
  %div.i1566.us.1 = fmul double %conv.i1565.us.1, 3.125000e-02
  %cmp.i.i1567.us.1 = fcmp ogt double %div.i1566.us.1, 1.000000e+00
  %cond.i34.i1568.us.1 = select i1 %cmp.i.i1567.us.1, double 1.000000e+00, double %div.i1566.us.1
  %idxprom.i1569.us.1 = sext i32 %cond.i1558.us.1 to i64
  %arrayidx10.i1570.us.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1569.us.1
  %638 = load double, ptr %arrayidx10.i1570.us.1, align 8, !tbaa !22
  %idxprom12.i1571.us.1 = zext i32 %cond.i4.i.i1564.us.1 to i64
  %arrayidx13.i1572.us.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1571.us.1
  %639 = load double, ptr %arrayidx13.i1572.us.1, align 8, !tbaa !22
  %640 = fneg double %cond.i34.i1568.us.1
  %neg.i1573.us.1 = fmul double %638, %640
  %641 = tail call double @llvm.fmuladd.f64(double %neg.i1573.us.1, double %639, double 0.000000e+00)
  %sub15.i1574.us.1 = sub nsw i32 127, %cond.i1558.us.1
  %idxprom16.i1575.us.1 = sext i32 %sub15.i1574.us.1 to i64
  %arrayidx17.i1576.us.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1575.us.1
  %642 = load double, ptr %arrayidx17.i1576.us.1, align 8, !tbaa !22
  %sub19.i1577.us.1 = xor i32 %cond.i4.i.i1564.us.1, 127
  %idxprom20.i1578.us.1 = zext i32 %sub19.i1577.us.1 to i64
  %arrayidx21.i1579.us.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1578.us.1
  %643 = load double, ptr %arrayidx21.i1579.us.1, align 8, !tbaa !22
  %neg23.i1580.us.1 = fmul double %642, %640
  %644 = tail call double @llvm.fmuladd.f64(double %neg23.i1580.us.1, double %643, double %641)
  %xr.27.us.1 = fadd double %xr.27.us, %644
  %arrayidx384.us.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 2
  %645 = getelementptr inbounds [1 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_I, i64 0, i64 0, i64 %indvars.iv2169, i64 2
  %count.i1551.us.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 2, i32 2
  %646 = load i64, ptr %count.i1551.us.2, align 8, !tbaa !43
  %647 = load i32, ptr %645, align 16, !tbaa !18
  %648 = getelementptr inbounds [1 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_I, i64 0, i64 0, i64 %indvars.iv2169, i64 2, i64 1
  %649 = load i32, ptr %648, align 4, !tbaa !18
  %MPS.i1553.us.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 2, i32 1
  %650 = load i8, ptr %MPS.i1553.us.2, align 2, !tbaa !46
  %tobool.not.i1554.us.2 = icmp eq i8 %650, 0
  %651 = load i16, ptr %arrayidx384.us.2, align 8, !tbaa !47
  %conv9.i1555.us.2 = zext i16 %651 to i32
  %add7.i1556.us.2 = add nuw nsw i32 %conv9.i1555.us.2, 64
  %sub.i1557.us.2 = sub nsw i32 63, %conv9.i1555.us.2
  %cond.i1558.us.2 = select i1 %tobool.not.i1554.us.2, i32 %sub.i1557.us.2, i32 %add7.i1556.us.2
  %mul.i1560.us.2 = mul nsw i32 %647, %cond.i.i1559.us
  %shr.i1561.us.2 = ashr i32 %mul.i1560.us.2, 4
  %add.i1562.us.2 = add nsw i32 %shr.i1561.us.2, %649
  %cond.i.i.i1563.us.2 = tail call i32 @llvm.smax.i32(i32 %add.i1562.us.2, i32 0)
  %cond.i4.i.i1564.us.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1563.us.2, i32 127)
  %conv.i1565.us.2 = uitofp i64 %646 to double
  %div.i1566.us.2 = fmul double %conv.i1565.us.2, 3.125000e-02
  %cmp.i.i1567.us.2 = fcmp ogt double %div.i1566.us.2, 1.000000e+00
  %cond.i34.i1568.us.2 = select i1 %cmp.i.i1567.us.2, double 1.000000e+00, double %div.i1566.us.2
  %idxprom.i1569.us.2 = sext i32 %cond.i1558.us.2 to i64
  %arrayidx10.i1570.us.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1569.us.2
  %652 = load double, ptr %arrayidx10.i1570.us.2, align 8, !tbaa !22
  %idxprom12.i1571.us.2 = zext i32 %cond.i4.i.i1564.us.2 to i64
  %arrayidx13.i1572.us.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1571.us.2
  %653 = load double, ptr %arrayidx13.i1572.us.2, align 8, !tbaa !22
  %654 = fneg double %cond.i34.i1568.us.2
  %neg.i1573.us.2 = fmul double %652, %654
  %655 = tail call double @llvm.fmuladd.f64(double %neg.i1573.us.2, double %653, double 0.000000e+00)
  %sub15.i1574.us.2 = sub nsw i32 127, %cond.i1558.us.2
  %idxprom16.i1575.us.2 = sext i32 %sub15.i1574.us.2 to i64
  %arrayidx17.i1576.us.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1575.us.2
  %656 = load double, ptr %arrayidx17.i1576.us.2, align 8, !tbaa !22
  %sub19.i1577.us.2 = xor i32 %cond.i4.i.i1564.us.2, 127
  %idxprom20.i1578.us.2 = zext i32 %sub19.i1577.us.2 to i64
  %arrayidx21.i1579.us.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1578.us.2
  %657 = load double, ptr %arrayidx21.i1579.us.2, align 8, !tbaa !22
  %neg23.i1580.us.2 = fmul double %656, %654
  %658 = tail call double @llvm.fmuladd.f64(double %neg23.i1580.us.2, double %657, double %655)
  %xr.27.us.2 = fadd double %xr.27.us.1, %658
  %arrayidx384.us.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 3
  %659 = getelementptr inbounds [1 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_I, i64 0, i64 0, i64 %indvars.iv2169, i64 3
  %count.i1551.us.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 3, i32 2
  %660 = load i64, ptr %count.i1551.us.3, align 8, !tbaa !43
  %661 = load i32, ptr %659, align 8, !tbaa !18
  %662 = getelementptr inbounds [1 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_I, i64 0, i64 0, i64 %indvars.iv2169, i64 3, i64 1
  %663 = load i32, ptr %662, align 4, !tbaa !18
  %MPS.i1553.us.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 3, i32 1
  %664 = load i8, ptr %MPS.i1553.us.3, align 2, !tbaa !46
  %tobool.not.i1554.us.3 = icmp eq i8 %664, 0
  %665 = load i16, ptr %arrayidx384.us.3, align 8, !tbaa !47
  %conv9.i1555.us.3 = zext i16 %665 to i32
  %add7.i1556.us.3 = add nuw nsw i32 %conv9.i1555.us.3, 64
  %sub.i1557.us.3 = sub nsw i32 63, %conv9.i1555.us.3
  %cond.i1558.us.3 = select i1 %tobool.not.i1554.us.3, i32 %sub.i1557.us.3, i32 %add7.i1556.us.3
  %mul.i1560.us.3 = mul nsw i32 %661, %cond.i.i1559.us
  %shr.i1561.us.3 = ashr i32 %mul.i1560.us.3, 4
  %add.i1562.us.3 = add nsw i32 %shr.i1561.us.3, %663
  %cond.i.i.i1563.us.3 = tail call i32 @llvm.smax.i32(i32 %add.i1562.us.3, i32 0)
  %cond.i4.i.i1564.us.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1563.us.3, i32 127)
  %conv.i1565.us.3 = uitofp i64 %660 to double
  %div.i1566.us.3 = fmul double %conv.i1565.us.3, 3.125000e-02
  %cmp.i.i1567.us.3 = fcmp ogt double %div.i1566.us.3, 1.000000e+00
  %cond.i34.i1568.us.3 = select i1 %cmp.i.i1567.us.3, double 1.000000e+00, double %div.i1566.us.3
  %idxprom.i1569.us.3 = sext i32 %cond.i1558.us.3 to i64
  %arrayidx10.i1570.us.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1569.us.3
  %666 = load double, ptr %arrayidx10.i1570.us.3, align 8, !tbaa !22
  %idxprom12.i1571.us.3 = zext i32 %cond.i4.i.i1564.us.3 to i64
  %arrayidx13.i1572.us.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1571.us.3
  %667 = load double, ptr %arrayidx13.i1572.us.3, align 8, !tbaa !22
  %668 = fneg double %cond.i34.i1568.us.3
  %neg.i1573.us.3 = fmul double %666, %668
  %669 = tail call double @llvm.fmuladd.f64(double %neg.i1573.us.3, double %667, double 0.000000e+00)
  br label %for.inc413

for.cond375.preheader.split:                      ; preds = %for.cond375.preheader
  %arrayidx405 = getelementptr inbounds [3 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2169, i64 0
  %670 = load i32, ptr %arrayidx405, align 16, !tbaa !18
  %arrayidx3.i1583 = getelementptr inbounds i32, ptr %arrayidx405, i64 1
  %671 = load i32, ptr %arrayidx3.i1583, align 4, !tbaa !18
  %mul.i1591 = mul nsw i32 %670, %cond.i.i1559.us
  %shr.i1592 = ashr i32 %mul.i1591, 4
  %add.i1593 = add nsw i32 %shr.i1592, %671
  %cond.i.i.i1594 = tail call i32 @llvm.smax.i32(i32 %add.i1593, i32 0)
  %cond.i4.i.i1595 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1594, i32 127)
  %idxprom12.i1602 = zext i32 %cond.i4.i.i1595 to i64
  %arrayidx13.i1603 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1602
  %672 = load double, ptr %arrayidx13.i1603, align 8, !tbaa !22
  %673 = tail call double @llvm.fmuladd.f64(double %neg.i1573.us, double %672, double 0.000000e+00)
  %sub19.i1608 = xor i32 %cond.i4.i.i1595, 127
  %idxprom20.i1609 = zext i32 %sub19.i1608 to i64
  %arrayidx21.i1610 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1609
  %674 = load double, ptr %arrayidx21.i1610, align 8, !tbaa !22
  %675 = tail call double @llvm.fmuladd.f64(double %neg23.i1580.us, double %674, double %673)
  %xr.27 = fadd double %xr.252040, %675
  %arrayidx405.1 = getelementptr inbounds [3 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2169, i64 1
  %676 = load i32, ptr %arrayidx405.1, align 8, !tbaa !18
  %arrayidx3.i1583.1 = getelementptr inbounds i32, ptr %arrayidx405.1, i64 1
  %677 = load i32, ptr %arrayidx3.i1583.1, align 4, !tbaa !18
  %MPS.i1584.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 1, i32 1
  %678 = load i8, ptr %MPS.i1584.1, align 2, !tbaa !46
  %tobool.not.i1585.1 = icmp eq i8 %678, 0
  %679 = load i16, ptr %arrayidx384.us.1, align 8, !tbaa !47
  %conv9.i1586.1 = zext i16 %679 to i32
  %add7.i1587.1 = add nuw nsw i32 %conv9.i1586.1, 64
  %sub.i1588.1 = sub nsw i32 63, %conv9.i1586.1
  %cond.i1589.1 = select i1 %tobool.not.i1585.1, i32 %sub.i1588.1, i32 %add7.i1587.1
  %mul.i1591.1 = mul nsw i32 %676, %cond.i.i1559.us
  %shr.i1592.1 = ashr i32 %mul.i1591.1, 4
  %add.i1593.1 = add nsw i32 %shr.i1592.1, %677
  %cond.i.i.i1594.1 = tail call i32 @llvm.smax.i32(i32 %add.i1593.1, i32 0)
  %cond.i4.i.i1595.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1594.1, i32 127)
  %conv.i1596.1 = uitofp i64 %623 to double
  %div.i1597.1 = fmul double %conv.i1596.1, 3.125000e-02
  %cmp.i.i1598.1 = fcmp ogt double %div.i1597.1, 1.000000e+00
  %cond.i34.i1599.1 = select i1 %cmp.i.i1598.1, double 1.000000e+00, double %div.i1597.1
  %idxprom.i1600.1 = sext i32 %cond.i1589.1 to i64
  %arrayidx10.i1601.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1600.1
  %680 = load double, ptr %arrayidx10.i1601.1, align 8, !tbaa !22
  %idxprom12.i1602.1 = zext i32 %cond.i4.i.i1595.1 to i64
  %arrayidx13.i1603.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1602.1
  %681 = load double, ptr %arrayidx13.i1603.1, align 8, !tbaa !22
  %682 = fneg double %cond.i34.i1599.1
  %neg.i1604.1 = fmul double %680, %682
  %683 = tail call double @llvm.fmuladd.f64(double %neg.i1604.1, double %681, double 0.000000e+00)
  %sub15.i1605.1 = sub nsw i32 127, %cond.i1589.1
  %idxprom16.i1606.1 = sext i32 %sub15.i1605.1 to i64
  %arrayidx17.i1607.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1606.1
  %684 = load double, ptr %arrayidx17.i1607.1, align 8, !tbaa !22
  %sub19.i1608.1 = xor i32 %cond.i4.i.i1595.1, 127
  %idxprom20.i1609.1 = zext i32 %sub19.i1608.1 to i64
  %arrayidx21.i1610.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1609.1
  %685 = load double, ptr %arrayidx21.i1610.1, align 8, !tbaa !22
  %neg23.i1611.1 = fmul double %684, %682
  %686 = tail call double @llvm.fmuladd.f64(double %neg23.i1611.1, double %685, double %683)
  %xr.27.1 = fadd double %xr.27, %686
  %arrayidx399.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 2
  %arrayidx405.2 = getelementptr inbounds [3 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2169, i64 2
  %count.i1582.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 2, i32 2
  %687 = load i64, ptr %count.i1582.2, align 8, !tbaa !43
  %688 = load i32, ptr %arrayidx405.2, align 16, !tbaa !18
  %arrayidx3.i1583.2 = getelementptr inbounds i32, ptr %arrayidx405.2, i64 1
  %689 = load i32, ptr %arrayidx3.i1583.2, align 4, !tbaa !18
  %MPS.i1584.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 2, i32 1
  %690 = load i8, ptr %MPS.i1584.2, align 2, !tbaa !46
  %tobool.not.i1585.2 = icmp eq i8 %690, 0
  %691 = load i16, ptr %arrayidx399.2, align 8, !tbaa !47
  %conv9.i1586.2 = zext i16 %691 to i32
  %add7.i1587.2 = add nuw nsw i32 %conv9.i1586.2, 64
  %sub.i1588.2 = sub nsw i32 63, %conv9.i1586.2
  %cond.i1589.2 = select i1 %tobool.not.i1585.2, i32 %sub.i1588.2, i32 %add7.i1587.2
  %mul.i1591.2 = mul nsw i32 %688, %cond.i.i1559.us
  %shr.i1592.2 = ashr i32 %mul.i1591.2, 4
  %add.i1593.2 = add nsw i32 %shr.i1592.2, %689
  %cond.i.i.i1594.2 = tail call i32 @llvm.smax.i32(i32 %add.i1593.2, i32 0)
  %cond.i4.i.i1595.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1594.2, i32 127)
  %conv.i1596.2 = uitofp i64 %687 to double
  %div.i1597.2 = fmul double %conv.i1596.2, 3.125000e-02
  %cmp.i.i1598.2 = fcmp ogt double %div.i1597.2, 1.000000e+00
  %cond.i34.i1599.2 = select i1 %cmp.i.i1598.2, double 1.000000e+00, double %div.i1597.2
  %idxprom.i1600.2 = sext i32 %cond.i1589.2 to i64
  %arrayidx10.i1601.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1600.2
  %692 = load double, ptr %arrayidx10.i1601.2, align 8, !tbaa !22
  %idxprom12.i1602.2 = zext i32 %cond.i4.i.i1595.2 to i64
  %arrayidx13.i1603.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1602.2
  %693 = load double, ptr %arrayidx13.i1603.2, align 8, !tbaa !22
  %694 = fneg double %cond.i34.i1599.2
  %neg.i1604.2 = fmul double %692, %694
  %695 = tail call double @llvm.fmuladd.f64(double %neg.i1604.2, double %693, double 0.000000e+00)
  %sub15.i1605.2 = sub nsw i32 127, %cond.i1589.2
  %idxprom16.i1606.2 = sext i32 %sub15.i1605.2 to i64
  %arrayidx17.i1607.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1606.2
  %696 = load double, ptr %arrayidx17.i1607.2, align 8, !tbaa !22
  %sub19.i1608.2 = xor i32 %cond.i4.i.i1595.2, 127
  %idxprom20.i1609.2 = zext i32 %sub19.i1608.2 to i64
  %arrayidx21.i1610.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1609.2
  %697 = load double, ptr %arrayidx21.i1610.2, align 8, !tbaa !22
  %neg23.i1611.2 = fmul double %696, %694
  %698 = tail call double @llvm.fmuladd.f64(double %neg23.i1611.2, double %697, double %695)
  %xr.27.2 = fadd double %xr.27.1, %698
  %arrayidx399.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 3
  %arrayidx405.3 = getelementptr inbounds [3 x [8 x [4 x [2 x i32]]]], ptr @INIT_BCBP_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2169, i64 3
  %count.i1582.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 3, i32 2
  %699 = load i64, ptr %count.i1582.3, align 8, !tbaa !43
  %700 = load i32, ptr %arrayidx405.3, align 8, !tbaa !18
  %arrayidx3.i1583.3 = getelementptr inbounds i32, ptr %arrayidx405.3, i64 1
  %701 = load i32, ptr %arrayidx3.i1583.3, align 4, !tbaa !18
  %MPS.i1584.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 3, i64 %indvars.iv2169, i64 3, i32 1
  %702 = load i8, ptr %MPS.i1584.3, align 2, !tbaa !46
  %tobool.not.i1585.3 = icmp eq i8 %702, 0
  %703 = load i16, ptr %arrayidx399.3, align 8, !tbaa !47
  %conv9.i1586.3 = zext i16 %703 to i32
  %add7.i1587.3 = add nuw nsw i32 %conv9.i1586.3, 64
  %sub.i1588.3 = sub nsw i32 63, %conv9.i1586.3
  %cond.i1589.3 = select i1 %tobool.not.i1585.3, i32 %sub.i1588.3, i32 %add7.i1587.3
  %mul.i1591.3 = mul nsw i32 %700, %cond.i.i1559.us
  %shr.i1592.3 = ashr i32 %mul.i1591.3, 4
  %add.i1593.3 = add nsw i32 %shr.i1592.3, %701
  %cond.i.i.i1594.3 = tail call i32 @llvm.smax.i32(i32 %add.i1593.3, i32 0)
  %cond.i4.i.i1595.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1594.3, i32 127)
  %conv.i1596.3 = uitofp i64 %699 to double
  %div.i1597.3 = fmul double %conv.i1596.3, 3.125000e-02
  %cmp.i.i1598.3 = fcmp ogt double %div.i1597.3, 1.000000e+00
  %cond.i34.i1599.3 = select i1 %cmp.i.i1598.3, double 1.000000e+00, double %div.i1597.3
  %idxprom.i1600.3 = sext i32 %cond.i1589.3 to i64
  %arrayidx10.i1601.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1600.3
  %704 = load double, ptr %arrayidx10.i1601.3, align 8, !tbaa !22
  %idxprom12.i1602.3 = zext i32 %cond.i4.i.i1595.3 to i64
  %arrayidx13.i1603.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1602.3
  %705 = load double, ptr %arrayidx13.i1603.3, align 8, !tbaa !22
  %706 = fneg double %cond.i34.i1599.3
  %neg.i1604.3 = fmul double %704, %706
  %707 = tail call double @llvm.fmuladd.f64(double %neg.i1604.3, double %705, double 0.000000e+00)
  br label %for.inc413

for.inc413:                                       ; preds = %for.cond375.preheader.split, %for.cond375.preheader.split.us
  %cond.i1589.3.sink = phi i32 [ %cond.i1589.3, %for.cond375.preheader.split ], [ %cond.i1558.us.3, %for.cond375.preheader.split.us ]
  %cond.i4.i.i1595.3.sink = phi i32 [ %cond.i4.i.i1595.3, %for.cond375.preheader.split ], [ %cond.i4.i.i1564.us.3, %for.cond375.preheader.split.us ]
  %.sink2329 = phi double [ %706, %for.cond375.preheader.split ], [ %668, %for.cond375.preheader.split.us ]
  %.sink2328 = phi double [ %707, %for.cond375.preheader.split ], [ %669, %for.cond375.preheader.split.us ]
  %xr.27.2.sink = phi double [ %xr.27.2, %for.cond375.preheader.split ], [ %xr.27.us.2, %for.cond375.preheader.split.us ]
  %sub15.i1605.3 = sub nsw i32 127, %cond.i1589.3.sink
  %idxprom16.i1606.3 = sext i32 %sub15.i1605.3 to i64
  %arrayidx17.i1607.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1606.3
  %708 = load double, ptr %arrayidx17.i1607.3, align 8, !tbaa !22
  %sub19.i1608.3 = xor i32 %cond.i4.i.i1595.3.sink, 127
  %idxprom20.i1609.3 = zext i32 %sub19.i1608.3 to i64
  %arrayidx21.i1610.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1609.3
  %709 = load double, ptr %arrayidx21.i1610.3, align 8, !tbaa !22
  %neg23.i1611.3 = fmul double %708, %.sink2329
  %710 = tail call double @llvm.fmuladd.f64(double %neg23.i1611.3, double %709, double %.sink2328)
  %xr.27.3 = fadd double %xr.27.2.sink, %710
  %indvars.iv.next2170 = add nuw nsw i64 %indvars.iv2169, 1
  %exitcond2172.not = icmp eq i64 %indvars.iv.next2170, 8
  br i1 %exitcond2172.not, label %for.cond416.preheader, label %for.cond375.preheader, !llvm.loop !55

for.cond460.preheader:                            ; preds = %for.inc457
  %cond.i.i1683.us = tail call i32 @llvm.smax.i32(i32 %616, i32 0)
  %cond.i.i1714 = tail call i32 @llvm.smax.i32(i32 %616, i32 0)
  br label %for.cond463.preheader

for.cond419.preheader:                            ; preds = %for.cond416.preheader, %for.inc457
  %indvars.iv2181 = phi i64 [ 0, %for.cond416.preheader ], [ %indvars.iv.next2182, %for.inc457 ]
  %xr.282045 = phi double [ %xr.27.3, %for.cond416.preheader ], [ %.us-phi2043, %for.inc457 ]
  br i1 %cmp423, label %for.body421.us, label %for.body421

for.body421.us:                                   ; preds = %for.cond419.preheader, %for.body421.us
  %indvars.iv2177 = phi i64 [ %indvars.iv.next2178, %for.body421.us ], [ 0, %for.cond419.preheader ]
  %xr.292042.us = phi double [ %xr.30.us, %for.body421.us ], [ %xr.282045, %for.cond419.preheader ]
  %arrayidx428.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 4, i64 %indvars.iv2181, i64 %indvars.iv2177
  %711 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_I, i64 0, i64 0, i64 %indvars.iv2181, i64 %indvars.iv2177
  %count.i1613.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 4, i64 %indvars.iv2181, i64 %indvars.iv2177, i32 2
  %712 = load i64, ptr %count.i1613.us, align 8, !tbaa !43
  %713 = load i32, ptr %711, align 8, !tbaa !18
  %714 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_I, i64 0, i64 0, i64 %indvars.iv2181, i64 %indvars.iv2177, i64 1
  %715 = load i32, ptr %714, align 4, !tbaa !18
  %MPS.i1615.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 4, i64 %indvars.iv2181, i64 %indvars.iv2177, i32 1
  %716 = load i8, ptr %MPS.i1615.us, align 2, !tbaa !46
  %tobool.not.i1616.us = icmp eq i8 %716, 0
  %717 = load i16, ptr %arrayidx428.us, align 8, !tbaa !47
  %conv9.i1617.us = zext i16 %717 to i32
  %add7.i1618.us = add nuw nsw i32 %conv9.i1617.us, 64
  %sub.i1619.us = sub nsw i32 63, %conv9.i1617.us
  %cond.i1620.us = select i1 %tobool.not.i1616.us, i32 %sub.i1619.us, i32 %add7.i1618.us
  %mul.i1622.us = mul nsw i32 %713, %cond.i.i1621.us
  %shr.i1623.us = ashr i32 %mul.i1622.us, 4
  %add.i1624.us = add nsw i32 %shr.i1623.us, %715
  %cond.i.i.i1625.us = tail call i32 @llvm.smax.i32(i32 %add.i1624.us, i32 0)
  %cond.i4.i.i1626.us = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1625.us, i32 127)
  %conv.i1627.us = uitofp i64 %712 to double
  %div.i1628.us = fmul double %conv.i1627.us, 3.125000e-02
  %cmp.i.i1629.us = fcmp ogt double %div.i1628.us, 1.000000e+00
  %cond.i34.i1630.us = select i1 %cmp.i.i1629.us, double 1.000000e+00, double %div.i1628.us
  %idxprom.i1631.us = sext i32 %cond.i1620.us to i64
  %arrayidx10.i1632.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1631.us
  %718 = load double, ptr %arrayidx10.i1632.us, align 8, !tbaa !22
  %idxprom12.i1633.us = zext i32 %cond.i4.i.i1626.us to i64
  %arrayidx13.i1634.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1633.us
  %719 = load double, ptr %arrayidx13.i1634.us, align 8, !tbaa !22
  %720 = fneg double %cond.i34.i1630.us
  %neg.i1635.us = fmul double %718, %720
  %721 = tail call double @llvm.fmuladd.f64(double %neg.i1635.us, double %719, double 0.000000e+00)
  %sub15.i1636.us = sub nsw i32 127, %cond.i1620.us
  %idxprom16.i1637.us = sext i32 %sub15.i1636.us to i64
  %arrayidx17.i1638.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1637.us
  %722 = load double, ptr %arrayidx17.i1638.us, align 8, !tbaa !22
  %sub19.i1639.us = xor i32 %cond.i4.i.i1626.us, 127
  %idxprom20.i1640.us = zext i32 %sub19.i1639.us to i64
  %arrayidx21.i1641.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1640.us
  %723 = load double, ptr %arrayidx21.i1641.us, align 8, !tbaa !22
  %neg23.i1642.us = fmul double %722, %720
  %724 = tail call double @llvm.fmuladd.f64(double %neg23.i1642.us, double %723, double %721)
  %xr.30.us = fadd double %xr.292042.us, %724
  %indvars.iv.next2178 = add nuw nsw i64 %indvars.iv2177, 1
  %exitcond2180.not = icmp eq i64 %indvars.iv.next2178, 15
  br i1 %exitcond2180.not, label %for.inc457, label %for.body421.us, !llvm.loop !56

for.body421:                                      ; preds = %for.cond419.preheader, %for.body421
  %indvars.iv2173 = phi i64 [ %indvars.iv.next2174, %for.body421 ], [ 0, %for.cond419.preheader ]
  %xr.292042 = phi double [ %xr.30, %for.body421 ], [ %xr.282045, %for.cond419.preheader ]
  %arrayidx443 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 4, i64 %indvars.iv2181, i64 %indvars.iv2173
  %arrayidx449 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_MAP_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2181, i64 %indvars.iv2173
  %count.i1644 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 4, i64 %indvars.iv2181, i64 %indvars.iv2173, i32 2
  %725 = load i64, ptr %count.i1644, align 8, !tbaa !43
  %726 = load i32, ptr %arrayidx449, align 8, !tbaa !18
  %arrayidx3.i1645 = getelementptr inbounds i32, ptr %arrayidx449, i64 1
  %727 = load i32, ptr %arrayidx3.i1645, align 4, !tbaa !18
  %MPS.i1646 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 4, i64 %indvars.iv2181, i64 %indvars.iv2173, i32 1
  %728 = load i8, ptr %MPS.i1646, align 2, !tbaa !46
  %tobool.not.i1647 = icmp eq i8 %728, 0
  %729 = load i16, ptr %arrayidx443, align 8, !tbaa !47
  %conv9.i1648 = zext i16 %729 to i32
  %add7.i1649 = add nuw nsw i32 %conv9.i1648, 64
  %sub.i1650 = sub nsw i32 63, %conv9.i1648
  %cond.i1651 = select i1 %tobool.not.i1647, i32 %sub.i1650, i32 %add7.i1649
  %mul.i1653 = mul nsw i32 %726, %cond.i.i1621.us
  %shr.i1654 = ashr i32 %mul.i1653, 4
  %add.i1655 = add nsw i32 %shr.i1654, %727
  %cond.i.i.i1656 = tail call i32 @llvm.smax.i32(i32 %add.i1655, i32 0)
  %cond.i4.i.i1657 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1656, i32 127)
  %conv.i1658 = uitofp i64 %725 to double
  %div.i1659 = fmul double %conv.i1658, 3.125000e-02
  %cmp.i.i1660 = fcmp ogt double %div.i1659, 1.000000e+00
  %cond.i34.i1661 = select i1 %cmp.i.i1660, double 1.000000e+00, double %div.i1659
  %idxprom.i1662 = sext i32 %cond.i1651 to i64
  %arrayidx10.i1663 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1662
  %730 = load double, ptr %arrayidx10.i1663, align 8, !tbaa !22
  %idxprom12.i1664 = zext i32 %cond.i4.i.i1657 to i64
  %arrayidx13.i1665 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1664
  %731 = load double, ptr %arrayidx13.i1665, align 8, !tbaa !22
  %732 = fneg double %cond.i34.i1661
  %neg.i1666 = fmul double %730, %732
  %733 = tail call double @llvm.fmuladd.f64(double %neg.i1666, double %731, double 0.000000e+00)
  %sub15.i1667 = sub nsw i32 127, %cond.i1651
  %idxprom16.i1668 = sext i32 %sub15.i1667 to i64
  %arrayidx17.i1669 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1668
  %734 = load double, ptr %arrayidx17.i1669, align 8, !tbaa !22
  %sub19.i1670 = xor i32 %cond.i4.i.i1657, 127
  %idxprom20.i1671 = zext i32 %sub19.i1670 to i64
  %arrayidx21.i1672 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1671
  %735 = load double, ptr %arrayidx21.i1672, align 8, !tbaa !22
  %neg23.i1673 = fmul double %734, %732
  %736 = tail call double @llvm.fmuladd.f64(double %neg23.i1673, double %735, double %733)
  %xr.30 = fadd double %xr.292042, %736
  %indvars.iv.next2174 = add nuw nsw i64 %indvars.iv2173, 1
  %exitcond2176.not = icmp eq i64 %indvars.iv.next2174, 15
  br i1 %exitcond2176.not, label %for.inc457, label %for.body421, !llvm.loop !56

for.inc457:                                       ; preds = %for.body421, %for.body421.us
  %.us-phi2043 = phi double [ %xr.30.us, %for.body421.us ], [ %xr.30, %for.body421 ]
  %indvars.iv.next2182 = add nuw nsw i64 %indvars.iv2181, 1
  %exitcond2184.not = icmp eq i64 %indvars.iv.next2182, 8
  br i1 %exitcond2184.not, label %for.cond460.preheader, label %for.cond419.preheader, !llvm.loop !57

for.cond463.preheader:                            ; preds = %for.cond460.preheader, %for.inc501
  %indvars.iv2193 = phi i64 [ 0, %for.cond460.preheader ], [ %indvars.iv.next2194, %for.inc501 ]
  %xr.312050 = phi double [ %.us-phi2043, %for.cond460.preheader ], [ %.us-phi2048, %for.inc501 ]
  br i1 %cmp423, label %for.body465.us, label %for.body465

for.body465.us:                                   ; preds = %for.cond463.preheader, %for.body465.us
  %indvars.iv2189 = phi i64 [ %indvars.iv.next2190, %for.body465.us ], [ 0, %for.cond463.preheader ]
  %xr.322047.us = phi double [ %xr.33.us, %for.body465.us ], [ %xr.312050, %for.cond463.preheader ]
  %arrayidx472.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 5, i64 %indvars.iv2193, i64 %indvars.iv2189
  %737 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_I, i64 0, i64 0, i64 %indvars.iv2193, i64 %indvars.iv2189
  %count.i1675.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 5, i64 %indvars.iv2193, i64 %indvars.iv2189, i32 2
  %738 = load i64, ptr %count.i1675.us, align 8, !tbaa !43
  %739 = load i32, ptr %737, align 8, !tbaa !18
  %740 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_I, i64 0, i64 0, i64 %indvars.iv2193, i64 %indvars.iv2189, i64 1
  %741 = load i32, ptr %740, align 4, !tbaa !18
  %MPS.i1677.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 5, i64 %indvars.iv2193, i64 %indvars.iv2189, i32 1
  %742 = load i8, ptr %MPS.i1677.us, align 2, !tbaa !46
  %tobool.not.i1678.us = icmp eq i8 %742, 0
  %743 = load i16, ptr %arrayidx472.us, align 8, !tbaa !47
  %conv9.i1679.us = zext i16 %743 to i32
  %add7.i1680.us = add nuw nsw i32 %conv9.i1679.us, 64
  %sub.i1681.us = sub nsw i32 63, %conv9.i1679.us
  %cond.i1682.us = select i1 %tobool.not.i1678.us, i32 %sub.i1681.us, i32 %add7.i1680.us
  %mul.i1684.us = mul nsw i32 %739, %cond.i.i1683.us
  %shr.i1685.us = ashr i32 %mul.i1684.us, 4
  %add.i1686.us = add nsw i32 %shr.i1685.us, %741
  %cond.i.i.i1687.us = tail call i32 @llvm.smax.i32(i32 %add.i1686.us, i32 0)
  %cond.i4.i.i1688.us = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1687.us, i32 127)
  %conv.i1689.us = uitofp i64 %738 to double
  %div.i1690.us = fmul double %conv.i1689.us, 3.125000e-02
  %cmp.i.i1691.us = fcmp ogt double %div.i1690.us, 1.000000e+00
  %cond.i34.i1692.us = select i1 %cmp.i.i1691.us, double 1.000000e+00, double %div.i1690.us
  %idxprom.i1693.us = sext i32 %cond.i1682.us to i64
  %arrayidx10.i1694.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1693.us
  %744 = load double, ptr %arrayidx10.i1694.us, align 8, !tbaa !22
  %idxprom12.i1695.us = zext i32 %cond.i4.i.i1688.us to i64
  %arrayidx13.i1696.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1695.us
  %745 = load double, ptr %arrayidx13.i1696.us, align 8, !tbaa !22
  %746 = fneg double %cond.i34.i1692.us
  %neg.i1697.us = fmul double %744, %746
  %747 = tail call double @llvm.fmuladd.f64(double %neg.i1697.us, double %745, double 0.000000e+00)
  %sub15.i1698.us = sub nsw i32 127, %cond.i1682.us
  %idxprom16.i1699.us = sext i32 %sub15.i1698.us to i64
  %arrayidx17.i1700.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1699.us
  %748 = load double, ptr %arrayidx17.i1700.us, align 8, !tbaa !22
  %sub19.i1701.us = xor i32 %cond.i4.i.i1688.us, 127
  %idxprom20.i1702.us = zext i32 %sub19.i1701.us to i64
  %arrayidx21.i1703.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1702.us
  %749 = load double, ptr %arrayidx21.i1703.us, align 8, !tbaa !22
  %neg23.i1704.us = fmul double %748, %746
  %750 = tail call double @llvm.fmuladd.f64(double %neg23.i1704.us, double %749, double %747)
  %xr.33.us = fadd double %xr.322047.us, %750
  %indvars.iv.next2190 = add nuw nsw i64 %indvars.iv2189, 1
  %exitcond2192.not = icmp eq i64 %indvars.iv.next2190, 15
  br i1 %exitcond2192.not, label %for.inc501, label %for.body465.us, !llvm.loop !58

for.body465:                                      ; preds = %for.cond463.preheader, %for.body465
  %indvars.iv2185 = phi i64 [ %indvars.iv.next2186, %for.body465 ], [ 0, %for.cond463.preheader ]
  %xr.322047 = phi double [ %xr.33, %for.body465 ], [ %xr.312050, %for.cond463.preheader ]
  %arrayidx487 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 5, i64 %indvars.iv2193, i64 %indvars.iv2185
  %arrayidx493 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_LAST_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2193, i64 %indvars.iv2185
  %count.i1706 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 5, i64 %indvars.iv2193, i64 %indvars.iv2185, i32 2
  %751 = load i64, ptr %count.i1706, align 8, !tbaa !43
  %752 = load i32, ptr %arrayidx493, align 8, !tbaa !18
  %arrayidx3.i1707 = getelementptr inbounds i32, ptr %arrayidx493, i64 1
  %753 = load i32, ptr %arrayidx3.i1707, align 4, !tbaa !18
  %MPS.i1708 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 5, i64 %indvars.iv2193, i64 %indvars.iv2185, i32 1
  %754 = load i8, ptr %MPS.i1708, align 2, !tbaa !46
  %tobool.not.i1709 = icmp eq i8 %754, 0
  %755 = load i16, ptr %arrayidx487, align 8, !tbaa !47
  %conv9.i1710 = zext i16 %755 to i32
  %add7.i1711 = add nuw nsw i32 %conv9.i1710, 64
  %sub.i1712 = sub nsw i32 63, %conv9.i1710
  %cond.i1713 = select i1 %tobool.not.i1709, i32 %sub.i1712, i32 %add7.i1711
  %mul.i1715 = mul nsw i32 %752, %cond.i.i1714
  %shr.i1716 = ashr i32 %mul.i1715, 4
  %add.i1717 = add nsw i32 %shr.i1716, %753
  %cond.i.i.i1718 = tail call i32 @llvm.smax.i32(i32 %add.i1717, i32 0)
  %cond.i4.i.i1719 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1718, i32 127)
  %conv.i1720 = uitofp i64 %751 to double
  %div.i1721 = fmul double %conv.i1720, 3.125000e-02
  %cmp.i.i1722 = fcmp ogt double %div.i1721, 1.000000e+00
  %cond.i34.i1723 = select i1 %cmp.i.i1722, double 1.000000e+00, double %div.i1721
  %idxprom.i1724 = sext i32 %cond.i1713 to i64
  %arrayidx10.i1725 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1724
  %756 = load double, ptr %arrayidx10.i1725, align 8, !tbaa !22
  %idxprom12.i1726 = zext i32 %cond.i4.i.i1719 to i64
  %arrayidx13.i1727 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1726
  %757 = load double, ptr %arrayidx13.i1727, align 8, !tbaa !22
  %758 = fneg double %cond.i34.i1723
  %neg.i1728 = fmul double %756, %758
  %759 = tail call double @llvm.fmuladd.f64(double %neg.i1728, double %757, double 0.000000e+00)
  %sub15.i1729 = sub nsw i32 127, %cond.i1713
  %idxprom16.i1730 = sext i32 %sub15.i1729 to i64
  %arrayidx17.i1731 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1730
  %760 = load double, ptr %arrayidx17.i1731, align 8, !tbaa !22
  %sub19.i1732 = xor i32 %cond.i4.i.i1719, 127
  %idxprom20.i1733 = zext i32 %sub19.i1732 to i64
  %arrayidx21.i1734 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1733
  %761 = load double, ptr %arrayidx21.i1734, align 8, !tbaa !22
  %neg23.i1735 = fmul double %760, %758
  %762 = tail call double @llvm.fmuladd.f64(double %neg23.i1735, double %761, double %759)
  %xr.33 = fadd double %xr.322047, %762
  %indvars.iv.next2186 = add nuw nsw i64 %indvars.iv2185, 1
  %exitcond2188.not = icmp eq i64 %indvars.iv.next2186, 15
  br i1 %exitcond2188.not, label %for.inc501, label %for.body465, !llvm.loop !58

for.inc501:                                       ; preds = %for.body465, %for.body465.us
  %.us-phi2048 = phi double [ %xr.33.us, %for.body465.us ], [ %xr.33, %for.body465 ]
  %indvars.iv.next2194 = add nuw nsw i64 %indvars.iv2193, 1
  %exitcond2196.not = icmp eq i64 %indvars.iv.next2194, 8
  br i1 %exitcond2196.not, label %for.cond507.preheader.preheader, label %for.cond463.preheader, !llvm.loop !59

for.cond507.preheader.preheader:                  ; preds = %for.inc501
  %763 = load i32, ptr %qp1.i961, align 4, !tbaa !42
  %cond.i.i1745.us = tail call i32 @llvm.smax.i32(i32 %763, i32 0)
  br label %for.cond507.preheader

for.cond548.preheader:                            ; preds = %for.inc545
  %764 = load i32, ptr %type, align 4, !tbaa !25
  %cmp555 = icmp eq i32 %764, 2
  %765 = load i32, ptr %qp1.i961, align 4, !tbaa !42
  %cond.i.i1807.us = tail call i32 @llvm.smax.i32(i32 %765, i32 0)
  br label %for.cond551.preheader

for.cond507.preheader:                            ; preds = %for.cond507.preheader.preheader, %for.inc545
  %indvars.iv2205 = phi i64 [ %indvars.iv.next2206, %for.inc545 ], [ 0, %for.cond507.preheader.preheader ]
  %xr.342055 = phi double [ %xr.36.4, %for.inc545 ], [ %.us-phi2048, %for.cond507.preheader.preheader ]
  %arrayidx516.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 0
  %count.i1737.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 0, i32 2
  %766 = load i64, ptr %count.i1737.us, align 8, !tbaa !43
  %MPS.i1739.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 0, i32 1
  %767 = load i8, ptr %MPS.i1739.us, align 2, !tbaa !46
  %tobool.not.i1740.us = icmp eq i8 %767, 0
  %768 = load i16, ptr %arrayidx516.us, align 8, !tbaa !47
  %conv9.i1741.us = zext i16 %768 to i32
  %add7.i1742.us = add nuw nsw i32 %conv9.i1741.us, 64
  %sub.i1743.us = sub nsw i32 63, %conv9.i1741.us
  %cond.i1744.us = select i1 %tobool.not.i1740.us, i32 %sub.i1743.us, i32 %add7.i1742.us
  %conv.i1751.us = uitofp i64 %766 to double
  %div.i1752.us = fmul double %conv.i1751.us, 3.125000e-02
  %cmp.i.i1753.us = fcmp ogt double %div.i1752.us, 1.000000e+00
  %cond.i34.i1754.us = select i1 %cmp.i.i1753.us, double 1.000000e+00, double %div.i1752.us
  %idxprom.i1755.us = sext i32 %cond.i1744.us to i64
  %arrayidx10.i1756.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1755.us
  %769 = load double, ptr %arrayidx10.i1756.us, align 8, !tbaa !22
  %770 = fneg double %cond.i34.i1754.us
  %neg.i1759.us = fmul double %769, %770
  %sub15.i1760.us = sub nsw i32 127, %cond.i1744.us
  %idxprom16.i1761.us = sext i32 %sub15.i1760.us to i64
  %arrayidx17.i1762.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1761.us
  %771 = load double, ptr %arrayidx17.i1762.us, align 8, !tbaa !22
  %neg23.i1766.us = fmul double %771, %770
  %arrayidx516.us.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 1
  %count.i1737.us.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 1, i32 2
  %772 = load i64, ptr %count.i1737.us.1, align 8, !tbaa !43
  br i1 %cmp423, label %for.cond507.preheader.split.us, label %for.cond507.preheader.split

for.cond507.preheader.split.us:                   ; preds = %for.cond507.preheader
  %773 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_I, i64 0, i64 0, i64 %indvars.iv2205, i64 0
  %774 = load i32, ptr %773, align 8, !tbaa !18
  %775 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_I, i64 0, i64 0, i64 %indvars.iv2205, i64 0, i64 1
  %776 = load i32, ptr %775, align 4, !tbaa !18
  %mul.i1746.us = mul nsw i32 %774, %cond.i.i1745.us
  %shr.i1747.us = ashr i32 %mul.i1746.us, 4
  %add.i1748.us = add nsw i32 %shr.i1747.us, %776
  %cond.i.i.i1749.us = tail call i32 @llvm.smax.i32(i32 %add.i1748.us, i32 0)
  %cond.i4.i.i1750.us = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1749.us, i32 127)
  %idxprom12.i1757.us = zext i32 %cond.i4.i.i1750.us to i64
  %arrayidx13.i1758.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1757.us
  %777 = load double, ptr %arrayidx13.i1758.us, align 8, !tbaa !22
  %778 = tail call double @llvm.fmuladd.f64(double %neg.i1759.us, double %777, double 0.000000e+00)
  %sub19.i1763.us = xor i32 %cond.i4.i.i1750.us, 127
  %idxprom20.i1764.us = zext i32 %sub19.i1763.us to i64
  %arrayidx21.i1765.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1764.us
  %779 = load double, ptr %arrayidx21.i1765.us, align 8, !tbaa !22
  %780 = tail call double @llvm.fmuladd.f64(double %neg23.i1766.us, double %779, double %778)
  %xr.36.us = fadd double %xr.342055, %780
  %781 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_I, i64 0, i64 0, i64 %indvars.iv2205, i64 1
  %782 = load i32, ptr %781, align 8, !tbaa !18
  %783 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_I, i64 0, i64 0, i64 %indvars.iv2205, i64 1, i64 1
  %784 = load i32, ptr %783, align 4, !tbaa !18
  %MPS.i1739.us.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 1, i32 1
  %785 = load i8, ptr %MPS.i1739.us.1, align 2, !tbaa !46
  %tobool.not.i1740.us.1 = icmp eq i8 %785, 0
  %786 = load i16, ptr %arrayidx516.us.1, align 8, !tbaa !47
  %conv9.i1741.us.1 = zext i16 %786 to i32
  %add7.i1742.us.1 = add nuw nsw i32 %conv9.i1741.us.1, 64
  %sub.i1743.us.1 = sub nsw i32 63, %conv9.i1741.us.1
  %cond.i1744.us.1 = select i1 %tobool.not.i1740.us.1, i32 %sub.i1743.us.1, i32 %add7.i1742.us.1
  %mul.i1746.us.1 = mul nsw i32 %782, %cond.i.i1745.us
  %shr.i1747.us.1 = ashr i32 %mul.i1746.us.1, 4
  %add.i1748.us.1 = add nsw i32 %shr.i1747.us.1, %784
  %cond.i.i.i1749.us.1 = tail call i32 @llvm.smax.i32(i32 %add.i1748.us.1, i32 0)
  %cond.i4.i.i1750.us.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1749.us.1, i32 127)
  %conv.i1751.us.1 = uitofp i64 %772 to double
  %div.i1752.us.1 = fmul double %conv.i1751.us.1, 3.125000e-02
  %cmp.i.i1753.us.1 = fcmp ogt double %div.i1752.us.1, 1.000000e+00
  %cond.i34.i1754.us.1 = select i1 %cmp.i.i1753.us.1, double 1.000000e+00, double %div.i1752.us.1
  %idxprom.i1755.us.1 = sext i32 %cond.i1744.us.1 to i64
  %arrayidx10.i1756.us.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1755.us.1
  %787 = load double, ptr %arrayidx10.i1756.us.1, align 8, !tbaa !22
  %idxprom12.i1757.us.1 = zext i32 %cond.i4.i.i1750.us.1 to i64
  %arrayidx13.i1758.us.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1757.us.1
  %788 = load double, ptr %arrayidx13.i1758.us.1, align 8, !tbaa !22
  %789 = fneg double %cond.i34.i1754.us.1
  %neg.i1759.us.1 = fmul double %787, %789
  %790 = tail call double @llvm.fmuladd.f64(double %neg.i1759.us.1, double %788, double 0.000000e+00)
  %sub15.i1760.us.1 = sub nsw i32 127, %cond.i1744.us.1
  %idxprom16.i1761.us.1 = sext i32 %sub15.i1760.us.1 to i64
  %arrayidx17.i1762.us.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1761.us.1
  %791 = load double, ptr %arrayidx17.i1762.us.1, align 8, !tbaa !22
  %sub19.i1763.us.1 = xor i32 %cond.i4.i.i1750.us.1, 127
  %idxprom20.i1764.us.1 = zext i32 %sub19.i1763.us.1 to i64
  %arrayidx21.i1765.us.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1764.us.1
  %792 = load double, ptr %arrayidx21.i1765.us.1, align 8, !tbaa !22
  %neg23.i1766.us.1 = fmul double %791, %789
  %793 = tail call double @llvm.fmuladd.f64(double %neg23.i1766.us.1, double %792, double %790)
  %xr.36.us.1 = fadd double %xr.36.us, %793
  %arrayidx516.us.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 2
  %794 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_I, i64 0, i64 0, i64 %indvars.iv2205, i64 2
  %count.i1737.us.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 2, i32 2
  %795 = load i64, ptr %count.i1737.us.2, align 8, !tbaa !43
  %796 = load i32, ptr %794, align 8, !tbaa !18
  %797 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_I, i64 0, i64 0, i64 %indvars.iv2205, i64 2, i64 1
  %798 = load i32, ptr %797, align 4, !tbaa !18
  %MPS.i1739.us.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 2, i32 1
  %799 = load i8, ptr %MPS.i1739.us.2, align 2, !tbaa !46
  %tobool.not.i1740.us.2 = icmp eq i8 %799, 0
  %800 = load i16, ptr %arrayidx516.us.2, align 8, !tbaa !47
  %conv9.i1741.us.2 = zext i16 %800 to i32
  %add7.i1742.us.2 = add nuw nsw i32 %conv9.i1741.us.2, 64
  %sub.i1743.us.2 = sub nsw i32 63, %conv9.i1741.us.2
  %cond.i1744.us.2 = select i1 %tobool.not.i1740.us.2, i32 %sub.i1743.us.2, i32 %add7.i1742.us.2
  %mul.i1746.us.2 = mul nsw i32 %796, %cond.i.i1745.us
  %shr.i1747.us.2 = ashr i32 %mul.i1746.us.2, 4
  %add.i1748.us.2 = add nsw i32 %shr.i1747.us.2, %798
  %cond.i.i.i1749.us.2 = tail call i32 @llvm.smax.i32(i32 %add.i1748.us.2, i32 0)
  %cond.i4.i.i1750.us.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1749.us.2, i32 127)
  %conv.i1751.us.2 = uitofp i64 %795 to double
  %div.i1752.us.2 = fmul double %conv.i1751.us.2, 3.125000e-02
  %cmp.i.i1753.us.2 = fcmp ogt double %div.i1752.us.2, 1.000000e+00
  %cond.i34.i1754.us.2 = select i1 %cmp.i.i1753.us.2, double 1.000000e+00, double %div.i1752.us.2
  %idxprom.i1755.us.2 = sext i32 %cond.i1744.us.2 to i64
  %arrayidx10.i1756.us.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1755.us.2
  %801 = load double, ptr %arrayidx10.i1756.us.2, align 8, !tbaa !22
  %idxprom12.i1757.us.2 = zext i32 %cond.i4.i.i1750.us.2 to i64
  %arrayidx13.i1758.us.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1757.us.2
  %802 = load double, ptr %arrayidx13.i1758.us.2, align 8, !tbaa !22
  %803 = fneg double %cond.i34.i1754.us.2
  %neg.i1759.us.2 = fmul double %801, %803
  %804 = tail call double @llvm.fmuladd.f64(double %neg.i1759.us.2, double %802, double 0.000000e+00)
  %sub15.i1760.us.2 = sub nsw i32 127, %cond.i1744.us.2
  %idxprom16.i1761.us.2 = sext i32 %sub15.i1760.us.2 to i64
  %arrayidx17.i1762.us.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1761.us.2
  %805 = load double, ptr %arrayidx17.i1762.us.2, align 8, !tbaa !22
  %sub19.i1763.us.2 = xor i32 %cond.i4.i.i1750.us.2, 127
  %idxprom20.i1764.us.2 = zext i32 %sub19.i1763.us.2 to i64
  %arrayidx21.i1765.us.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1764.us.2
  %806 = load double, ptr %arrayidx21.i1765.us.2, align 8, !tbaa !22
  %neg23.i1766.us.2 = fmul double %805, %803
  %807 = tail call double @llvm.fmuladd.f64(double %neg23.i1766.us.2, double %806, double %804)
  %xr.36.us.2 = fadd double %xr.36.us.1, %807
  %arrayidx516.us.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 3
  %808 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_I, i64 0, i64 0, i64 %indvars.iv2205, i64 3
  %count.i1737.us.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 3, i32 2
  %809 = load i64, ptr %count.i1737.us.3, align 8, !tbaa !43
  %810 = load i32, ptr %808, align 8, !tbaa !18
  %811 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_I, i64 0, i64 0, i64 %indvars.iv2205, i64 3, i64 1
  %812 = load i32, ptr %811, align 4, !tbaa !18
  %MPS.i1739.us.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 3, i32 1
  %813 = load i8, ptr %MPS.i1739.us.3, align 2, !tbaa !46
  %tobool.not.i1740.us.3 = icmp eq i8 %813, 0
  %814 = load i16, ptr %arrayidx516.us.3, align 8, !tbaa !47
  %conv9.i1741.us.3 = zext i16 %814 to i32
  %add7.i1742.us.3 = add nuw nsw i32 %conv9.i1741.us.3, 64
  %sub.i1743.us.3 = sub nsw i32 63, %conv9.i1741.us.3
  %cond.i1744.us.3 = select i1 %tobool.not.i1740.us.3, i32 %sub.i1743.us.3, i32 %add7.i1742.us.3
  %mul.i1746.us.3 = mul nsw i32 %810, %cond.i.i1745.us
  %shr.i1747.us.3 = ashr i32 %mul.i1746.us.3, 4
  %add.i1748.us.3 = add nsw i32 %shr.i1747.us.3, %812
  %cond.i.i.i1749.us.3 = tail call i32 @llvm.smax.i32(i32 %add.i1748.us.3, i32 0)
  %cond.i4.i.i1750.us.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1749.us.3, i32 127)
  %conv.i1751.us.3 = uitofp i64 %809 to double
  %div.i1752.us.3 = fmul double %conv.i1751.us.3, 3.125000e-02
  %cmp.i.i1753.us.3 = fcmp ogt double %div.i1752.us.3, 1.000000e+00
  %cond.i34.i1754.us.3 = select i1 %cmp.i.i1753.us.3, double 1.000000e+00, double %div.i1752.us.3
  %idxprom.i1755.us.3 = sext i32 %cond.i1744.us.3 to i64
  %arrayidx10.i1756.us.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1755.us.3
  %815 = load double, ptr %arrayidx10.i1756.us.3, align 8, !tbaa !22
  %idxprom12.i1757.us.3 = zext i32 %cond.i4.i.i1750.us.3 to i64
  %arrayidx13.i1758.us.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1757.us.3
  %816 = load double, ptr %arrayidx13.i1758.us.3, align 8, !tbaa !22
  %817 = fneg double %cond.i34.i1754.us.3
  %neg.i1759.us.3 = fmul double %815, %817
  %818 = tail call double @llvm.fmuladd.f64(double %neg.i1759.us.3, double %816, double 0.000000e+00)
  %sub15.i1760.us.3 = sub nsw i32 127, %cond.i1744.us.3
  %idxprom16.i1761.us.3 = sext i32 %sub15.i1760.us.3 to i64
  %arrayidx17.i1762.us.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1761.us.3
  %819 = load double, ptr %arrayidx17.i1762.us.3, align 8, !tbaa !22
  %sub19.i1763.us.3 = xor i32 %cond.i4.i.i1750.us.3, 127
  %idxprom20.i1764.us.3 = zext i32 %sub19.i1763.us.3 to i64
  %arrayidx21.i1765.us.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1764.us.3
  %820 = load double, ptr %arrayidx21.i1765.us.3, align 8, !tbaa !22
  %neg23.i1766.us.3 = fmul double %819, %817
  %821 = tail call double @llvm.fmuladd.f64(double %neg23.i1766.us.3, double %820, double %818)
  %xr.36.us.3 = fadd double %xr.36.us.2, %821
  %arrayidx516.us.4 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 4
  %822 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_I, i64 0, i64 0, i64 %indvars.iv2205, i64 4
  %count.i1737.us.4 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 4, i32 2
  %823 = load i64, ptr %count.i1737.us.4, align 8, !tbaa !43
  %824 = load i32, ptr %822, align 8, !tbaa !18
  %825 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_I, i64 0, i64 0, i64 %indvars.iv2205, i64 4, i64 1
  %826 = load i32, ptr %825, align 4, !tbaa !18
  %MPS.i1739.us.4 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 4, i32 1
  %827 = load i8, ptr %MPS.i1739.us.4, align 2, !tbaa !46
  %tobool.not.i1740.us.4 = icmp eq i8 %827, 0
  %828 = load i16, ptr %arrayidx516.us.4, align 8, !tbaa !47
  %conv9.i1741.us.4 = zext i16 %828 to i32
  %add7.i1742.us.4 = add nuw nsw i32 %conv9.i1741.us.4, 64
  %sub.i1743.us.4 = sub nsw i32 63, %conv9.i1741.us.4
  %cond.i1744.us.4 = select i1 %tobool.not.i1740.us.4, i32 %sub.i1743.us.4, i32 %add7.i1742.us.4
  %mul.i1746.us.4 = mul nsw i32 %824, %cond.i.i1745.us
  %shr.i1747.us.4 = ashr i32 %mul.i1746.us.4, 4
  %add.i1748.us.4 = add nsw i32 %shr.i1747.us.4, %826
  %cond.i.i.i1749.us.4 = tail call i32 @llvm.smax.i32(i32 %add.i1748.us.4, i32 0)
  %cond.i4.i.i1750.us.4 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1749.us.4, i32 127)
  %conv.i1751.us.4 = uitofp i64 %823 to double
  %div.i1752.us.4 = fmul double %conv.i1751.us.4, 3.125000e-02
  %cmp.i.i1753.us.4 = fcmp ogt double %div.i1752.us.4, 1.000000e+00
  %cond.i34.i1754.us.4 = select i1 %cmp.i.i1753.us.4, double 1.000000e+00, double %div.i1752.us.4
  %idxprom.i1755.us.4 = sext i32 %cond.i1744.us.4 to i64
  %arrayidx10.i1756.us.4 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1755.us.4
  %829 = load double, ptr %arrayidx10.i1756.us.4, align 8, !tbaa !22
  %idxprom12.i1757.us.4 = zext i32 %cond.i4.i.i1750.us.4 to i64
  %arrayidx13.i1758.us.4 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1757.us.4
  %830 = load double, ptr %arrayidx13.i1758.us.4, align 8, !tbaa !22
  %831 = fneg double %cond.i34.i1754.us.4
  %neg.i1759.us.4 = fmul double %829, %831
  %832 = tail call double @llvm.fmuladd.f64(double %neg.i1759.us.4, double %830, double 0.000000e+00)
  br label %for.inc545

for.cond507.preheader.split:                      ; preds = %for.cond507.preheader
  %arrayidx537 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2205, i64 0
  %833 = load i32, ptr %arrayidx537, align 8, !tbaa !18
  %arrayidx3.i1769 = getelementptr inbounds i32, ptr %arrayidx537, i64 1
  %834 = load i32, ptr %arrayidx3.i1769, align 4, !tbaa !18
  %mul.i1777 = mul nsw i32 %833, %cond.i.i1745.us
  %shr.i1778 = ashr i32 %mul.i1777, 4
  %add.i1779 = add nsw i32 %shr.i1778, %834
  %cond.i.i.i1780 = tail call i32 @llvm.smax.i32(i32 %add.i1779, i32 0)
  %cond.i4.i.i1781 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1780, i32 127)
  %idxprom12.i1788 = zext i32 %cond.i4.i.i1781 to i64
  %arrayidx13.i1789 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1788
  %835 = load double, ptr %arrayidx13.i1789, align 8, !tbaa !22
  %836 = tail call double @llvm.fmuladd.f64(double %neg.i1759.us, double %835, double 0.000000e+00)
  %sub19.i1794 = xor i32 %cond.i4.i.i1781, 127
  %idxprom20.i1795 = zext i32 %sub19.i1794 to i64
  %arrayidx21.i1796 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1795
  %837 = load double, ptr %arrayidx21.i1796, align 8, !tbaa !22
  %838 = tail call double @llvm.fmuladd.f64(double %neg23.i1766.us, double %837, double %836)
  %xr.36 = fadd double %xr.342055, %838
  %arrayidx537.1 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2205, i64 1
  %839 = load i32, ptr %arrayidx537.1, align 8, !tbaa !18
  %arrayidx3.i1769.1 = getelementptr inbounds i32, ptr %arrayidx537.1, i64 1
  %840 = load i32, ptr %arrayidx3.i1769.1, align 4, !tbaa !18
  %MPS.i1770.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 1, i32 1
  %841 = load i8, ptr %MPS.i1770.1, align 2, !tbaa !46
  %tobool.not.i1771.1 = icmp eq i8 %841, 0
  %842 = load i16, ptr %arrayidx516.us.1, align 8, !tbaa !47
  %conv9.i1772.1 = zext i16 %842 to i32
  %add7.i1773.1 = add nuw nsw i32 %conv9.i1772.1, 64
  %sub.i1774.1 = sub nsw i32 63, %conv9.i1772.1
  %cond.i1775.1 = select i1 %tobool.not.i1771.1, i32 %sub.i1774.1, i32 %add7.i1773.1
  %mul.i1777.1 = mul nsw i32 %839, %cond.i.i1745.us
  %shr.i1778.1 = ashr i32 %mul.i1777.1, 4
  %add.i1779.1 = add nsw i32 %shr.i1778.1, %840
  %cond.i.i.i1780.1 = tail call i32 @llvm.smax.i32(i32 %add.i1779.1, i32 0)
  %cond.i4.i.i1781.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1780.1, i32 127)
  %conv.i1782.1 = uitofp i64 %772 to double
  %div.i1783.1 = fmul double %conv.i1782.1, 3.125000e-02
  %cmp.i.i1784.1 = fcmp ogt double %div.i1783.1, 1.000000e+00
  %cond.i34.i1785.1 = select i1 %cmp.i.i1784.1, double 1.000000e+00, double %div.i1783.1
  %idxprom.i1786.1 = sext i32 %cond.i1775.1 to i64
  %arrayidx10.i1787.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1786.1
  %843 = load double, ptr %arrayidx10.i1787.1, align 8, !tbaa !22
  %idxprom12.i1788.1 = zext i32 %cond.i4.i.i1781.1 to i64
  %arrayidx13.i1789.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1788.1
  %844 = load double, ptr %arrayidx13.i1789.1, align 8, !tbaa !22
  %845 = fneg double %cond.i34.i1785.1
  %neg.i1790.1 = fmul double %843, %845
  %846 = tail call double @llvm.fmuladd.f64(double %neg.i1790.1, double %844, double 0.000000e+00)
  %sub15.i1791.1 = sub nsw i32 127, %cond.i1775.1
  %idxprom16.i1792.1 = sext i32 %sub15.i1791.1 to i64
  %arrayidx17.i1793.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1792.1
  %847 = load double, ptr %arrayidx17.i1793.1, align 8, !tbaa !22
  %sub19.i1794.1 = xor i32 %cond.i4.i.i1781.1, 127
  %idxprom20.i1795.1 = zext i32 %sub19.i1794.1 to i64
  %arrayidx21.i1796.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1795.1
  %848 = load double, ptr %arrayidx21.i1796.1, align 8, !tbaa !22
  %neg23.i1797.1 = fmul double %847, %845
  %849 = tail call double @llvm.fmuladd.f64(double %neg23.i1797.1, double %848, double %846)
  %xr.36.1 = fadd double %xr.36, %849
  %arrayidx531.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 2
  %arrayidx537.2 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2205, i64 2
  %count.i1768.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 2, i32 2
  %850 = load i64, ptr %count.i1768.2, align 8, !tbaa !43
  %851 = load i32, ptr %arrayidx537.2, align 8, !tbaa !18
  %arrayidx3.i1769.2 = getelementptr inbounds i32, ptr %arrayidx537.2, i64 1
  %852 = load i32, ptr %arrayidx3.i1769.2, align 4, !tbaa !18
  %MPS.i1770.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 2, i32 1
  %853 = load i8, ptr %MPS.i1770.2, align 2, !tbaa !46
  %tobool.not.i1771.2 = icmp eq i8 %853, 0
  %854 = load i16, ptr %arrayidx531.2, align 8, !tbaa !47
  %conv9.i1772.2 = zext i16 %854 to i32
  %add7.i1773.2 = add nuw nsw i32 %conv9.i1772.2, 64
  %sub.i1774.2 = sub nsw i32 63, %conv9.i1772.2
  %cond.i1775.2 = select i1 %tobool.not.i1771.2, i32 %sub.i1774.2, i32 %add7.i1773.2
  %mul.i1777.2 = mul nsw i32 %851, %cond.i.i1745.us
  %shr.i1778.2 = ashr i32 %mul.i1777.2, 4
  %add.i1779.2 = add nsw i32 %shr.i1778.2, %852
  %cond.i.i.i1780.2 = tail call i32 @llvm.smax.i32(i32 %add.i1779.2, i32 0)
  %cond.i4.i.i1781.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1780.2, i32 127)
  %conv.i1782.2 = uitofp i64 %850 to double
  %div.i1783.2 = fmul double %conv.i1782.2, 3.125000e-02
  %cmp.i.i1784.2 = fcmp ogt double %div.i1783.2, 1.000000e+00
  %cond.i34.i1785.2 = select i1 %cmp.i.i1784.2, double 1.000000e+00, double %div.i1783.2
  %idxprom.i1786.2 = sext i32 %cond.i1775.2 to i64
  %arrayidx10.i1787.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1786.2
  %855 = load double, ptr %arrayidx10.i1787.2, align 8, !tbaa !22
  %idxprom12.i1788.2 = zext i32 %cond.i4.i.i1781.2 to i64
  %arrayidx13.i1789.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1788.2
  %856 = load double, ptr %arrayidx13.i1789.2, align 8, !tbaa !22
  %857 = fneg double %cond.i34.i1785.2
  %neg.i1790.2 = fmul double %855, %857
  %858 = tail call double @llvm.fmuladd.f64(double %neg.i1790.2, double %856, double 0.000000e+00)
  %sub15.i1791.2 = sub nsw i32 127, %cond.i1775.2
  %idxprom16.i1792.2 = sext i32 %sub15.i1791.2 to i64
  %arrayidx17.i1793.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1792.2
  %859 = load double, ptr %arrayidx17.i1793.2, align 8, !tbaa !22
  %sub19.i1794.2 = xor i32 %cond.i4.i.i1781.2, 127
  %idxprom20.i1795.2 = zext i32 %sub19.i1794.2 to i64
  %arrayidx21.i1796.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1795.2
  %860 = load double, ptr %arrayidx21.i1796.2, align 8, !tbaa !22
  %neg23.i1797.2 = fmul double %859, %857
  %861 = tail call double @llvm.fmuladd.f64(double %neg23.i1797.2, double %860, double %858)
  %xr.36.2 = fadd double %xr.36.1, %861
  %arrayidx531.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 3
  %arrayidx537.3 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2205, i64 3
  %count.i1768.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 3, i32 2
  %862 = load i64, ptr %count.i1768.3, align 8, !tbaa !43
  %863 = load i32, ptr %arrayidx537.3, align 8, !tbaa !18
  %arrayidx3.i1769.3 = getelementptr inbounds i32, ptr %arrayidx537.3, i64 1
  %864 = load i32, ptr %arrayidx3.i1769.3, align 4, !tbaa !18
  %MPS.i1770.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 3, i32 1
  %865 = load i8, ptr %MPS.i1770.3, align 2, !tbaa !46
  %tobool.not.i1771.3 = icmp eq i8 %865, 0
  %866 = load i16, ptr %arrayidx531.3, align 8, !tbaa !47
  %conv9.i1772.3 = zext i16 %866 to i32
  %add7.i1773.3 = add nuw nsw i32 %conv9.i1772.3, 64
  %sub.i1774.3 = sub nsw i32 63, %conv9.i1772.3
  %cond.i1775.3 = select i1 %tobool.not.i1771.3, i32 %sub.i1774.3, i32 %add7.i1773.3
  %mul.i1777.3 = mul nsw i32 %863, %cond.i.i1745.us
  %shr.i1778.3 = ashr i32 %mul.i1777.3, 4
  %add.i1779.3 = add nsw i32 %shr.i1778.3, %864
  %cond.i.i.i1780.3 = tail call i32 @llvm.smax.i32(i32 %add.i1779.3, i32 0)
  %cond.i4.i.i1781.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1780.3, i32 127)
  %conv.i1782.3 = uitofp i64 %862 to double
  %div.i1783.3 = fmul double %conv.i1782.3, 3.125000e-02
  %cmp.i.i1784.3 = fcmp ogt double %div.i1783.3, 1.000000e+00
  %cond.i34.i1785.3 = select i1 %cmp.i.i1784.3, double 1.000000e+00, double %div.i1783.3
  %idxprom.i1786.3 = sext i32 %cond.i1775.3 to i64
  %arrayidx10.i1787.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1786.3
  %867 = load double, ptr %arrayidx10.i1787.3, align 8, !tbaa !22
  %idxprom12.i1788.3 = zext i32 %cond.i4.i.i1781.3 to i64
  %arrayidx13.i1789.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1788.3
  %868 = load double, ptr %arrayidx13.i1789.3, align 8, !tbaa !22
  %869 = fneg double %cond.i34.i1785.3
  %neg.i1790.3 = fmul double %867, %869
  %870 = tail call double @llvm.fmuladd.f64(double %neg.i1790.3, double %868, double 0.000000e+00)
  %sub15.i1791.3 = sub nsw i32 127, %cond.i1775.3
  %idxprom16.i1792.3 = sext i32 %sub15.i1791.3 to i64
  %arrayidx17.i1793.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1792.3
  %871 = load double, ptr %arrayidx17.i1793.3, align 8, !tbaa !22
  %sub19.i1794.3 = xor i32 %cond.i4.i.i1781.3, 127
  %idxprom20.i1795.3 = zext i32 %sub19.i1794.3 to i64
  %arrayidx21.i1796.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1795.3
  %872 = load double, ptr %arrayidx21.i1796.3, align 8, !tbaa !22
  %neg23.i1797.3 = fmul double %871, %869
  %873 = tail call double @llvm.fmuladd.f64(double %neg23.i1797.3, double %872, double %870)
  %xr.36.3 = fadd double %xr.36.2, %873
  %arrayidx531.4 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 4
  %arrayidx537.4 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ONE_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2205, i64 4
  %count.i1768.4 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 4, i32 2
  %874 = load i64, ptr %count.i1768.4, align 8, !tbaa !43
  %875 = load i32, ptr %arrayidx537.4, align 8, !tbaa !18
  %arrayidx3.i1769.4 = getelementptr inbounds i32, ptr %arrayidx537.4, i64 1
  %876 = load i32, ptr %arrayidx3.i1769.4, align 4, !tbaa !18
  %MPS.i1770.4 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 6, i64 %indvars.iv2205, i64 4, i32 1
  %877 = load i8, ptr %MPS.i1770.4, align 2, !tbaa !46
  %tobool.not.i1771.4 = icmp eq i8 %877, 0
  %878 = load i16, ptr %arrayidx531.4, align 8, !tbaa !47
  %conv9.i1772.4 = zext i16 %878 to i32
  %add7.i1773.4 = add nuw nsw i32 %conv9.i1772.4, 64
  %sub.i1774.4 = sub nsw i32 63, %conv9.i1772.4
  %cond.i1775.4 = select i1 %tobool.not.i1771.4, i32 %sub.i1774.4, i32 %add7.i1773.4
  %mul.i1777.4 = mul nsw i32 %875, %cond.i.i1745.us
  %shr.i1778.4 = ashr i32 %mul.i1777.4, 4
  %add.i1779.4 = add nsw i32 %shr.i1778.4, %876
  %cond.i.i.i1780.4 = tail call i32 @llvm.smax.i32(i32 %add.i1779.4, i32 0)
  %cond.i4.i.i1781.4 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1780.4, i32 127)
  %conv.i1782.4 = uitofp i64 %874 to double
  %div.i1783.4 = fmul double %conv.i1782.4, 3.125000e-02
  %cmp.i.i1784.4 = fcmp ogt double %div.i1783.4, 1.000000e+00
  %cond.i34.i1785.4 = select i1 %cmp.i.i1784.4, double 1.000000e+00, double %div.i1783.4
  %idxprom.i1786.4 = sext i32 %cond.i1775.4 to i64
  %arrayidx10.i1787.4 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1786.4
  %879 = load double, ptr %arrayidx10.i1787.4, align 8, !tbaa !22
  %idxprom12.i1788.4 = zext i32 %cond.i4.i.i1781.4 to i64
  %arrayidx13.i1789.4 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1788.4
  %880 = load double, ptr %arrayidx13.i1789.4, align 8, !tbaa !22
  %881 = fneg double %cond.i34.i1785.4
  %neg.i1790.4 = fmul double %879, %881
  %882 = tail call double @llvm.fmuladd.f64(double %neg.i1790.4, double %880, double 0.000000e+00)
  br label %for.inc545

for.inc545:                                       ; preds = %for.cond507.preheader.split, %for.cond507.preheader.split.us
  %cond.i1775.4.sink = phi i32 [ %cond.i1775.4, %for.cond507.preheader.split ], [ %cond.i1744.us.4, %for.cond507.preheader.split.us ]
  %cond.i4.i.i1781.4.sink = phi i32 [ %cond.i4.i.i1781.4, %for.cond507.preheader.split ], [ %cond.i4.i.i1750.us.4, %for.cond507.preheader.split.us ]
  %.sink2332 = phi double [ %881, %for.cond507.preheader.split ], [ %831, %for.cond507.preheader.split.us ]
  %.sink2331 = phi double [ %882, %for.cond507.preheader.split ], [ %832, %for.cond507.preheader.split.us ]
  %xr.36.3.sink = phi double [ %xr.36.3, %for.cond507.preheader.split ], [ %xr.36.us.3, %for.cond507.preheader.split.us ]
  %sub15.i1791.4 = sub nsw i32 127, %cond.i1775.4.sink
  %idxprom16.i1792.4 = sext i32 %sub15.i1791.4 to i64
  %arrayidx17.i1793.4 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1792.4
  %883 = load double, ptr %arrayidx17.i1793.4, align 8, !tbaa !22
  %sub19.i1794.4 = xor i32 %cond.i4.i.i1781.4.sink, 127
  %idxprom20.i1795.4 = zext i32 %sub19.i1794.4 to i64
  %arrayidx21.i1796.4 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1795.4
  %884 = load double, ptr %arrayidx21.i1796.4, align 8, !tbaa !22
  %neg23.i1797.4 = fmul double %883, %.sink2332
  %885 = tail call double @llvm.fmuladd.f64(double %neg23.i1797.4, double %884, double %.sink2331)
  %xr.36.4 = fadd double %xr.36.3.sink, %885
  %indvars.iv.next2206 = add nuw nsw i64 %indvars.iv2205, 1
  %exitcond2208.not = icmp eq i64 %indvars.iv.next2206, 8
  br i1 %exitcond2208.not, label %for.cond548.preheader, label %for.cond507.preheader, !llvm.loop !60

for.cond592.preheader:                            ; preds = %for.inc589
  %886 = load i32, ptr %type, align 4, !tbaa !25
  %cmp599 = icmp eq i32 %886, 2
  %887 = load i32, ptr %qp1.i961, align 4, !tbaa !42
  %cond.i.i1869.us = tail call i32 @llvm.smax.i32(i32 %887, i32 0)
  br label %for.cond595.preheader

for.cond551.preheader:                            ; preds = %for.cond548.preheader, %for.inc589
  %indvars.iv2217 = phi i64 [ 0, %for.cond548.preheader ], [ %indvars.iv.next2218, %for.inc589 ]
  %xr.372060 = phi double [ %xr.36.4, %for.cond548.preheader ], [ %xr.39.4, %for.inc589 ]
  %arrayidx560.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 0
  %count.i1799.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 0, i32 2
  %888 = load i64, ptr %count.i1799.us, align 8, !tbaa !43
  %MPS.i1801.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 0, i32 1
  %889 = load i8, ptr %MPS.i1801.us, align 2, !tbaa !46
  %tobool.not.i1802.us = icmp eq i8 %889, 0
  %890 = load i16, ptr %arrayidx560.us, align 8, !tbaa !47
  %conv9.i1803.us = zext i16 %890 to i32
  %add7.i1804.us = add nuw nsw i32 %conv9.i1803.us, 64
  %sub.i1805.us = sub nsw i32 63, %conv9.i1803.us
  %cond.i1806.us = select i1 %tobool.not.i1802.us, i32 %sub.i1805.us, i32 %add7.i1804.us
  %conv.i1813.us = uitofp i64 %888 to double
  %div.i1814.us = fmul double %conv.i1813.us, 3.125000e-02
  %cmp.i.i1815.us = fcmp ogt double %div.i1814.us, 1.000000e+00
  %cond.i34.i1816.us = select i1 %cmp.i.i1815.us, double 1.000000e+00, double %div.i1814.us
  %idxprom.i1817.us = sext i32 %cond.i1806.us to i64
  %arrayidx10.i1818.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1817.us
  %891 = load double, ptr %arrayidx10.i1818.us, align 8, !tbaa !22
  %892 = fneg double %cond.i34.i1816.us
  %neg.i1821.us = fmul double %891, %892
  %sub15.i1822.us = sub nsw i32 127, %cond.i1806.us
  %idxprom16.i1823.us = sext i32 %sub15.i1822.us to i64
  %arrayidx17.i1824.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1823.us
  %893 = load double, ptr %arrayidx17.i1824.us, align 8, !tbaa !22
  %neg23.i1828.us = fmul double %893, %892
  %arrayidx560.us.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 1
  %count.i1799.us.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 1, i32 2
  %894 = load i64, ptr %count.i1799.us.1, align 8, !tbaa !43
  br i1 %cmp555, label %for.cond551.preheader.split.us, label %for.cond551.preheader.split

for.cond551.preheader.split.us:                   ; preds = %for.cond551.preheader
  %895 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_I, i64 0, i64 0, i64 %indvars.iv2217, i64 0
  %896 = load i32, ptr %895, align 8, !tbaa !18
  %897 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_I, i64 0, i64 0, i64 %indvars.iv2217, i64 0, i64 1
  %898 = load i32, ptr %897, align 4, !tbaa !18
  %mul.i1808.us = mul nsw i32 %896, %cond.i.i1807.us
  %shr.i1809.us = ashr i32 %mul.i1808.us, 4
  %add.i1810.us = add nsw i32 %shr.i1809.us, %898
  %cond.i.i.i1811.us = tail call i32 @llvm.smax.i32(i32 %add.i1810.us, i32 0)
  %cond.i4.i.i1812.us = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1811.us, i32 127)
  %idxprom12.i1819.us = zext i32 %cond.i4.i.i1812.us to i64
  %arrayidx13.i1820.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1819.us
  %899 = load double, ptr %arrayidx13.i1820.us, align 8, !tbaa !22
  %900 = tail call double @llvm.fmuladd.f64(double %neg.i1821.us, double %899, double 0.000000e+00)
  %sub19.i1825.us = xor i32 %cond.i4.i.i1812.us, 127
  %idxprom20.i1826.us = zext i32 %sub19.i1825.us to i64
  %arrayidx21.i1827.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1826.us
  %901 = load double, ptr %arrayidx21.i1827.us, align 8, !tbaa !22
  %902 = tail call double @llvm.fmuladd.f64(double %neg23.i1828.us, double %901, double %900)
  %xr.39.us = fadd double %xr.372060, %902
  %903 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_I, i64 0, i64 0, i64 %indvars.iv2217, i64 1
  %904 = load i32, ptr %903, align 8, !tbaa !18
  %905 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_I, i64 0, i64 0, i64 %indvars.iv2217, i64 1, i64 1
  %906 = load i32, ptr %905, align 4, !tbaa !18
  %MPS.i1801.us.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 1, i32 1
  %907 = load i8, ptr %MPS.i1801.us.1, align 2, !tbaa !46
  %tobool.not.i1802.us.1 = icmp eq i8 %907, 0
  %908 = load i16, ptr %arrayidx560.us.1, align 8, !tbaa !47
  %conv9.i1803.us.1 = zext i16 %908 to i32
  %add7.i1804.us.1 = add nuw nsw i32 %conv9.i1803.us.1, 64
  %sub.i1805.us.1 = sub nsw i32 63, %conv9.i1803.us.1
  %cond.i1806.us.1 = select i1 %tobool.not.i1802.us.1, i32 %sub.i1805.us.1, i32 %add7.i1804.us.1
  %mul.i1808.us.1 = mul nsw i32 %904, %cond.i.i1807.us
  %shr.i1809.us.1 = ashr i32 %mul.i1808.us.1, 4
  %add.i1810.us.1 = add nsw i32 %shr.i1809.us.1, %906
  %cond.i.i.i1811.us.1 = tail call i32 @llvm.smax.i32(i32 %add.i1810.us.1, i32 0)
  %cond.i4.i.i1812.us.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1811.us.1, i32 127)
  %conv.i1813.us.1 = uitofp i64 %894 to double
  %div.i1814.us.1 = fmul double %conv.i1813.us.1, 3.125000e-02
  %cmp.i.i1815.us.1 = fcmp ogt double %div.i1814.us.1, 1.000000e+00
  %cond.i34.i1816.us.1 = select i1 %cmp.i.i1815.us.1, double 1.000000e+00, double %div.i1814.us.1
  %idxprom.i1817.us.1 = sext i32 %cond.i1806.us.1 to i64
  %arrayidx10.i1818.us.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1817.us.1
  %909 = load double, ptr %arrayidx10.i1818.us.1, align 8, !tbaa !22
  %idxprom12.i1819.us.1 = zext i32 %cond.i4.i.i1812.us.1 to i64
  %arrayidx13.i1820.us.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1819.us.1
  %910 = load double, ptr %arrayidx13.i1820.us.1, align 8, !tbaa !22
  %911 = fneg double %cond.i34.i1816.us.1
  %neg.i1821.us.1 = fmul double %909, %911
  %912 = tail call double @llvm.fmuladd.f64(double %neg.i1821.us.1, double %910, double 0.000000e+00)
  %sub15.i1822.us.1 = sub nsw i32 127, %cond.i1806.us.1
  %idxprom16.i1823.us.1 = sext i32 %sub15.i1822.us.1 to i64
  %arrayidx17.i1824.us.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1823.us.1
  %913 = load double, ptr %arrayidx17.i1824.us.1, align 8, !tbaa !22
  %sub19.i1825.us.1 = xor i32 %cond.i4.i.i1812.us.1, 127
  %idxprom20.i1826.us.1 = zext i32 %sub19.i1825.us.1 to i64
  %arrayidx21.i1827.us.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1826.us.1
  %914 = load double, ptr %arrayidx21.i1827.us.1, align 8, !tbaa !22
  %neg23.i1828.us.1 = fmul double %913, %911
  %915 = tail call double @llvm.fmuladd.f64(double %neg23.i1828.us.1, double %914, double %912)
  %xr.39.us.1 = fadd double %xr.39.us, %915
  %arrayidx560.us.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 2
  %916 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_I, i64 0, i64 0, i64 %indvars.iv2217, i64 2
  %count.i1799.us.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 2, i32 2
  %917 = load i64, ptr %count.i1799.us.2, align 8, !tbaa !43
  %918 = load i32, ptr %916, align 8, !tbaa !18
  %919 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_I, i64 0, i64 0, i64 %indvars.iv2217, i64 2, i64 1
  %920 = load i32, ptr %919, align 4, !tbaa !18
  %MPS.i1801.us.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 2, i32 1
  %921 = load i8, ptr %MPS.i1801.us.2, align 2, !tbaa !46
  %tobool.not.i1802.us.2 = icmp eq i8 %921, 0
  %922 = load i16, ptr %arrayidx560.us.2, align 8, !tbaa !47
  %conv9.i1803.us.2 = zext i16 %922 to i32
  %add7.i1804.us.2 = add nuw nsw i32 %conv9.i1803.us.2, 64
  %sub.i1805.us.2 = sub nsw i32 63, %conv9.i1803.us.2
  %cond.i1806.us.2 = select i1 %tobool.not.i1802.us.2, i32 %sub.i1805.us.2, i32 %add7.i1804.us.2
  %mul.i1808.us.2 = mul nsw i32 %918, %cond.i.i1807.us
  %shr.i1809.us.2 = ashr i32 %mul.i1808.us.2, 4
  %add.i1810.us.2 = add nsw i32 %shr.i1809.us.2, %920
  %cond.i.i.i1811.us.2 = tail call i32 @llvm.smax.i32(i32 %add.i1810.us.2, i32 0)
  %cond.i4.i.i1812.us.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1811.us.2, i32 127)
  %conv.i1813.us.2 = uitofp i64 %917 to double
  %div.i1814.us.2 = fmul double %conv.i1813.us.2, 3.125000e-02
  %cmp.i.i1815.us.2 = fcmp ogt double %div.i1814.us.2, 1.000000e+00
  %cond.i34.i1816.us.2 = select i1 %cmp.i.i1815.us.2, double 1.000000e+00, double %div.i1814.us.2
  %idxprom.i1817.us.2 = sext i32 %cond.i1806.us.2 to i64
  %arrayidx10.i1818.us.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1817.us.2
  %923 = load double, ptr %arrayidx10.i1818.us.2, align 8, !tbaa !22
  %idxprom12.i1819.us.2 = zext i32 %cond.i4.i.i1812.us.2 to i64
  %arrayidx13.i1820.us.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1819.us.2
  %924 = load double, ptr %arrayidx13.i1820.us.2, align 8, !tbaa !22
  %925 = fneg double %cond.i34.i1816.us.2
  %neg.i1821.us.2 = fmul double %923, %925
  %926 = tail call double @llvm.fmuladd.f64(double %neg.i1821.us.2, double %924, double 0.000000e+00)
  %sub15.i1822.us.2 = sub nsw i32 127, %cond.i1806.us.2
  %idxprom16.i1823.us.2 = sext i32 %sub15.i1822.us.2 to i64
  %arrayidx17.i1824.us.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1823.us.2
  %927 = load double, ptr %arrayidx17.i1824.us.2, align 8, !tbaa !22
  %sub19.i1825.us.2 = xor i32 %cond.i4.i.i1812.us.2, 127
  %idxprom20.i1826.us.2 = zext i32 %sub19.i1825.us.2 to i64
  %arrayidx21.i1827.us.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1826.us.2
  %928 = load double, ptr %arrayidx21.i1827.us.2, align 8, !tbaa !22
  %neg23.i1828.us.2 = fmul double %927, %925
  %929 = tail call double @llvm.fmuladd.f64(double %neg23.i1828.us.2, double %928, double %926)
  %xr.39.us.2 = fadd double %xr.39.us.1, %929
  %arrayidx560.us.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 3
  %930 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_I, i64 0, i64 0, i64 %indvars.iv2217, i64 3
  %count.i1799.us.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 3, i32 2
  %931 = load i64, ptr %count.i1799.us.3, align 8, !tbaa !43
  %932 = load i32, ptr %930, align 8, !tbaa !18
  %933 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_I, i64 0, i64 0, i64 %indvars.iv2217, i64 3, i64 1
  %934 = load i32, ptr %933, align 4, !tbaa !18
  %MPS.i1801.us.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 3, i32 1
  %935 = load i8, ptr %MPS.i1801.us.3, align 2, !tbaa !46
  %tobool.not.i1802.us.3 = icmp eq i8 %935, 0
  %936 = load i16, ptr %arrayidx560.us.3, align 8, !tbaa !47
  %conv9.i1803.us.3 = zext i16 %936 to i32
  %add7.i1804.us.3 = add nuw nsw i32 %conv9.i1803.us.3, 64
  %sub.i1805.us.3 = sub nsw i32 63, %conv9.i1803.us.3
  %cond.i1806.us.3 = select i1 %tobool.not.i1802.us.3, i32 %sub.i1805.us.3, i32 %add7.i1804.us.3
  %mul.i1808.us.3 = mul nsw i32 %932, %cond.i.i1807.us
  %shr.i1809.us.3 = ashr i32 %mul.i1808.us.3, 4
  %add.i1810.us.3 = add nsw i32 %shr.i1809.us.3, %934
  %cond.i.i.i1811.us.3 = tail call i32 @llvm.smax.i32(i32 %add.i1810.us.3, i32 0)
  %cond.i4.i.i1812.us.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1811.us.3, i32 127)
  %conv.i1813.us.3 = uitofp i64 %931 to double
  %div.i1814.us.3 = fmul double %conv.i1813.us.3, 3.125000e-02
  %cmp.i.i1815.us.3 = fcmp ogt double %div.i1814.us.3, 1.000000e+00
  %cond.i34.i1816.us.3 = select i1 %cmp.i.i1815.us.3, double 1.000000e+00, double %div.i1814.us.3
  %idxprom.i1817.us.3 = sext i32 %cond.i1806.us.3 to i64
  %arrayidx10.i1818.us.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1817.us.3
  %937 = load double, ptr %arrayidx10.i1818.us.3, align 8, !tbaa !22
  %idxprom12.i1819.us.3 = zext i32 %cond.i4.i.i1812.us.3 to i64
  %arrayidx13.i1820.us.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1819.us.3
  %938 = load double, ptr %arrayidx13.i1820.us.3, align 8, !tbaa !22
  %939 = fneg double %cond.i34.i1816.us.3
  %neg.i1821.us.3 = fmul double %937, %939
  %940 = tail call double @llvm.fmuladd.f64(double %neg.i1821.us.3, double %938, double 0.000000e+00)
  %sub15.i1822.us.3 = sub nsw i32 127, %cond.i1806.us.3
  %idxprom16.i1823.us.3 = sext i32 %sub15.i1822.us.3 to i64
  %arrayidx17.i1824.us.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1823.us.3
  %941 = load double, ptr %arrayidx17.i1824.us.3, align 8, !tbaa !22
  %sub19.i1825.us.3 = xor i32 %cond.i4.i.i1812.us.3, 127
  %idxprom20.i1826.us.3 = zext i32 %sub19.i1825.us.3 to i64
  %arrayidx21.i1827.us.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1826.us.3
  %942 = load double, ptr %arrayidx21.i1827.us.3, align 8, !tbaa !22
  %neg23.i1828.us.3 = fmul double %941, %939
  %943 = tail call double @llvm.fmuladd.f64(double %neg23.i1828.us.3, double %942, double %940)
  %xr.39.us.3 = fadd double %xr.39.us.2, %943
  %arrayidx560.us.4 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 4
  %944 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_I, i64 0, i64 0, i64 %indvars.iv2217, i64 4
  %count.i1799.us.4 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 4, i32 2
  %945 = load i64, ptr %count.i1799.us.4, align 8, !tbaa !43
  %946 = load i32, ptr %944, align 8, !tbaa !18
  %947 = getelementptr inbounds [1 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_I, i64 0, i64 0, i64 %indvars.iv2217, i64 4, i64 1
  %948 = load i32, ptr %947, align 4, !tbaa !18
  %MPS.i1801.us.4 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 4, i32 1
  %949 = load i8, ptr %MPS.i1801.us.4, align 2, !tbaa !46
  %tobool.not.i1802.us.4 = icmp eq i8 %949, 0
  %950 = load i16, ptr %arrayidx560.us.4, align 8, !tbaa !47
  %conv9.i1803.us.4 = zext i16 %950 to i32
  %add7.i1804.us.4 = add nuw nsw i32 %conv9.i1803.us.4, 64
  %sub.i1805.us.4 = sub nsw i32 63, %conv9.i1803.us.4
  %cond.i1806.us.4 = select i1 %tobool.not.i1802.us.4, i32 %sub.i1805.us.4, i32 %add7.i1804.us.4
  %mul.i1808.us.4 = mul nsw i32 %946, %cond.i.i1807.us
  %shr.i1809.us.4 = ashr i32 %mul.i1808.us.4, 4
  %add.i1810.us.4 = add nsw i32 %shr.i1809.us.4, %948
  %cond.i.i.i1811.us.4 = tail call i32 @llvm.smax.i32(i32 %add.i1810.us.4, i32 0)
  %cond.i4.i.i1812.us.4 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1811.us.4, i32 127)
  %conv.i1813.us.4 = uitofp i64 %945 to double
  %div.i1814.us.4 = fmul double %conv.i1813.us.4, 3.125000e-02
  %cmp.i.i1815.us.4 = fcmp ogt double %div.i1814.us.4, 1.000000e+00
  %cond.i34.i1816.us.4 = select i1 %cmp.i.i1815.us.4, double 1.000000e+00, double %div.i1814.us.4
  %idxprom.i1817.us.4 = sext i32 %cond.i1806.us.4 to i64
  %arrayidx10.i1818.us.4 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1817.us.4
  %951 = load double, ptr %arrayidx10.i1818.us.4, align 8, !tbaa !22
  %idxprom12.i1819.us.4 = zext i32 %cond.i4.i.i1812.us.4 to i64
  %arrayidx13.i1820.us.4 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1819.us.4
  %952 = load double, ptr %arrayidx13.i1820.us.4, align 8, !tbaa !22
  %953 = fneg double %cond.i34.i1816.us.4
  %neg.i1821.us.4 = fmul double %951, %953
  %954 = tail call double @llvm.fmuladd.f64(double %neg.i1821.us.4, double %952, double 0.000000e+00)
  br label %for.inc589

for.cond551.preheader.split:                      ; preds = %for.cond551.preheader
  %arrayidx581 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2217, i64 0
  %955 = load i32, ptr %arrayidx581, align 8, !tbaa !18
  %arrayidx3.i1831 = getelementptr inbounds i32, ptr %arrayidx581, i64 1
  %956 = load i32, ptr %arrayidx3.i1831, align 4, !tbaa !18
  %mul.i1839 = mul nsw i32 %955, %cond.i.i1807.us
  %shr.i1840 = ashr i32 %mul.i1839, 4
  %add.i1841 = add nsw i32 %shr.i1840, %956
  %cond.i.i.i1842 = tail call i32 @llvm.smax.i32(i32 %add.i1841, i32 0)
  %cond.i4.i.i1843 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1842, i32 127)
  %idxprom12.i1850 = zext i32 %cond.i4.i.i1843 to i64
  %arrayidx13.i1851 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1850
  %957 = load double, ptr %arrayidx13.i1851, align 8, !tbaa !22
  %958 = tail call double @llvm.fmuladd.f64(double %neg.i1821.us, double %957, double 0.000000e+00)
  %sub19.i1856 = xor i32 %cond.i4.i.i1843, 127
  %idxprom20.i1857 = zext i32 %sub19.i1856 to i64
  %arrayidx21.i1858 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1857
  %959 = load double, ptr %arrayidx21.i1858, align 8, !tbaa !22
  %960 = tail call double @llvm.fmuladd.f64(double %neg23.i1828.us, double %959, double %958)
  %xr.39 = fadd double %xr.372060, %960
  %arrayidx581.1 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2217, i64 1
  %961 = load i32, ptr %arrayidx581.1, align 8, !tbaa !18
  %arrayidx3.i1831.1 = getelementptr inbounds i32, ptr %arrayidx581.1, i64 1
  %962 = load i32, ptr %arrayidx3.i1831.1, align 4, !tbaa !18
  %MPS.i1832.1 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 1, i32 1
  %963 = load i8, ptr %MPS.i1832.1, align 2, !tbaa !46
  %tobool.not.i1833.1 = icmp eq i8 %963, 0
  %964 = load i16, ptr %arrayidx560.us.1, align 8, !tbaa !47
  %conv9.i1834.1 = zext i16 %964 to i32
  %add7.i1835.1 = add nuw nsw i32 %conv9.i1834.1, 64
  %sub.i1836.1 = sub nsw i32 63, %conv9.i1834.1
  %cond.i1837.1 = select i1 %tobool.not.i1833.1, i32 %sub.i1836.1, i32 %add7.i1835.1
  %mul.i1839.1 = mul nsw i32 %961, %cond.i.i1807.us
  %shr.i1840.1 = ashr i32 %mul.i1839.1, 4
  %add.i1841.1 = add nsw i32 %shr.i1840.1, %962
  %cond.i.i.i1842.1 = tail call i32 @llvm.smax.i32(i32 %add.i1841.1, i32 0)
  %cond.i4.i.i1843.1 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1842.1, i32 127)
  %conv.i1844.1 = uitofp i64 %894 to double
  %div.i1845.1 = fmul double %conv.i1844.1, 3.125000e-02
  %cmp.i.i1846.1 = fcmp ogt double %div.i1845.1, 1.000000e+00
  %cond.i34.i1847.1 = select i1 %cmp.i.i1846.1, double 1.000000e+00, double %div.i1845.1
  %idxprom.i1848.1 = sext i32 %cond.i1837.1 to i64
  %arrayidx10.i1849.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1848.1
  %965 = load double, ptr %arrayidx10.i1849.1, align 8, !tbaa !22
  %idxprom12.i1850.1 = zext i32 %cond.i4.i.i1843.1 to i64
  %arrayidx13.i1851.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1850.1
  %966 = load double, ptr %arrayidx13.i1851.1, align 8, !tbaa !22
  %967 = fneg double %cond.i34.i1847.1
  %neg.i1852.1 = fmul double %965, %967
  %968 = tail call double @llvm.fmuladd.f64(double %neg.i1852.1, double %966, double 0.000000e+00)
  %sub15.i1853.1 = sub nsw i32 127, %cond.i1837.1
  %idxprom16.i1854.1 = sext i32 %sub15.i1853.1 to i64
  %arrayidx17.i1855.1 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1854.1
  %969 = load double, ptr %arrayidx17.i1855.1, align 8, !tbaa !22
  %sub19.i1856.1 = xor i32 %cond.i4.i.i1843.1, 127
  %idxprom20.i1857.1 = zext i32 %sub19.i1856.1 to i64
  %arrayidx21.i1858.1 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1857.1
  %970 = load double, ptr %arrayidx21.i1858.1, align 8, !tbaa !22
  %neg23.i1859.1 = fmul double %969, %967
  %971 = tail call double @llvm.fmuladd.f64(double %neg23.i1859.1, double %970, double %968)
  %xr.39.1 = fadd double %xr.39, %971
  %arrayidx575.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 2
  %arrayidx581.2 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2217, i64 2
  %count.i1830.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 2, i32 2
  %972 = load i64, ptr %count.i1830.2, align 8, !tbaa !43
  %973 = load i32, ptr %arrayidx581.2, align 8, !tbaa !18
  %arrayidx3.i1831.2 = getelementptr inbounds i32, ptr %arrayidx581.2, i64 1
  %974 = load i32, ptr %arrayidx3.i1831.2, align 4, !tbaa !18
  %MPS.i1832.2 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 2, i32 1
  %975 = load i8, ptr %MPS.i1832.2, align 2, !tbaa !46
  %tobool.not.i1833.2 = icmp eq i8 %975, 0
  %976 = load i16, ptr %arrayidx575.2, align 8, !tbaa !47
  %conv9.i1834.2 = zext i16 %976 to i32
  %add7.i1835.2 = add nuw nsw i32 %conv9.i1834.2, 64
  %sub.i1836.2 = sub nsw i32 63, %conv9.i1834.2
  %cond.i1837.2 = select i1 %tobool.not.i1833.2, i32 %sub.i1836.2, i32 %add7.i1835.2
  %mul.i1839.2 = mul nsw i32 %973, %cond.i.i1807.us
  %shr.i1840.2 = ashr i32 %mul.i1839.2, 4
  %add.i1841.2 = add nsw i32 %shr.i1840.2, %974
  %cond.i.i.i1842.2 = tail call i32 @llvm.smax.i32(i32 %add.i1841.2, i32 0)
  %cond.i4.i.i1843.2 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1842.2, i32 127)
  %conv.i1844.2 = uitofp i64 %972 to double
  %div.i1845.2 = fmul double %conv.i1844.2, 3.125000e-02
  %cmp.i.i1846.2 = fcmp ogt double %div.i1845.2, 1.000000e+00
  %cond.i34.i1847.2 = select i1 %cmp.i.i1846.2, double 1.000000e+00, double %div.i1845.2
  %idxprom.i1848.2 = sext i32 %cond.i1837.2 to i64
  %arrayidx10.i1849.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1848.2
  %977 = load double, ptr %arrayidx10.i1849.2, align 8, !tbaa !22
  %idxprom12.i1850.2 = zext i32 %cond.i4.i.i1843.2 to i64
  %arrayidx13.i1851.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1850.2
  %978 = load double, ptr %arrayidx13.i1851.2, align 8, !tbaa !22
  %979 = fneg double %cond.i34.i1847.2
  %neg.i1852.2 = fmul double %977, %979
  %980 = tail call double @llvm.fmuladd.f64(double %neg.i1852.2, double %978, double 0.000000e+00)
  %sub15.i1853.2 = sub nsw i32 127, %cond.i1837.2
  %idxprom16.i1854.2 = sext i32 %sub15.i1853.2 to i64
  %arrayidx17.i1855.2 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1854.2
  %981 = load double, ptr %arrayidx17.i1855.2, align 8, !tbaa !22
  %sub19.i1856.2 = xor i32 %cond.i4.i.i1843.2, 127
  %idxprom20.i1857.2 = zext i32 %sub19.i1856.2 to i64
  %arrayidx21.i1858.2 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1857.2
  %982 = load double, ptr %arrayidx21.i1858.2, align 8, !tbaa !22
  %neg23.i1859.2 = fmul double %981, %979
  %983 = tail call double @llvm.fmuladd.f64(double %neg23.i1859.2, double %982, double %980)
  %xr.39.2 = fadd double %xr.39.1, %983
  %arrayidx575.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 3
  %arrayidx581.3 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2217, i64 3
  %count.i1830.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 3, i32 2
  %984 = load i64, ptr %count.i1830.3, align 8, !tbaa !43
  %985 = load i32, ptr %arrayidx581.3, align 8, !tbaa !18
  %arrayidx3.i1831.3 = getelementptr inbounds i32, ptr %arrayidx581.3, i64 1
  %986 = load i32, ptr %arrayidx3.i1831.3, align 4, !tbaa !18
  %MPS.i1832.3 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 3, i32 1
  %987 = load i8, ptr %MPS.i1832.3, align 2, !tbaa !46
  %tobool.not.i1833.3 = icmp eq i8 %987, 0
  %988 = load i16, ptr %arrayidx575.3, align 8, !tbaa !47
  %conv9.i1834.3 = zext i16 %988 to i32
  %add7.i1835.3 = add nuw nsw i32 %conv9.i1834.3, 64
  %sub.i1836.3 = sub nsw i32 63, %conv9.i1834.3
  %cond.i1837.3 = select i1 %tobool.not.i1833.3, i32 %sub.i1836.3, i32 %add7.i1835.3
  %mul.i1839.3 = mul nsw i32 %985, %cond.i.i1807.us
  %shr.i1840.3 = ashr i32 %mul.i1839.3, 4
  %add.i1841.3 = add nsw i32 %shr.i1840.3, %986
  %cond.i.i.i1842.3 = tail call i32 @llvm.smax.i32(i32 %add.i1841.3, i32 0)
  %cond.i4.i.i1843.3 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1842.3, i32 127)
  %conv.i1844.3 = uitofp i64 %984 to double
  %div.i1845.3 = fmul double %conv.i1844.3, 3.125000e-02
  %cmp.i.i1846.3 = fcmp ogt double %div.i1845.3, 1.000000e+00
  %cond.i34.i1847.3 = select i1 %cmp.i.i1846.3, double 1.000000e+00, double %div.i1845.3
  %idxprom.i1848.3 = sext i32 %cond.i1837.3 to i64
  %arrayidx10.i1849.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1848.3
  %989 = load double, ptr %arrayidx10.i1849.3, align 8, !tbaa !22
  %idxprom12.i1850.3 = zext i32 %cond.i4.i.i1843.3 to i64
  %arrayidx13.i1851.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1850.3
  %990 = load double, ptr %arrayidx13.i1851.3, align 8, !tbaa !22
  %991 = fneg double %cond.i34.i1847.3
  %neg.i1852.3 = fmul double %989, %991
  %992 = tail call double @llvm.fmuladd.f64(double %neg.i1852.3, double %990, double 0.000000e+00)
  %sub15.i1853.3 = sub nsw i32 127, %cond.i1837.3
  %idxprom16.i1854.3 = sext i32 %sub15.i1853.3 to i64
  %arrayidx17.i1855.3 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1854.3
  %993 = load double, ptr %arrayidx17.i1855.3, align 8, !tbaa !22
  %sub19.i1856.3 = xor i32 %cond.i4.i.i1843.3, 127
  %idxprom20.i1857.3 = zext i32 %sub19.i1856.3 to i64
  %arrayidx21.i1858.3 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1857.3
  %994 = load double, ptr %arrayidx21.i1858.3, align 8, !tbaa !22
  %neg23.i1859.3 = fmul double %993, %991
  %995 = tail call double @llvm.fmuladd.f64(double %neg23.i1859.3, double %994, double %992)
  %xr.39.3 = fadd double %xr.39.2, %995
  %arrayidx575.4 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 4
  %arrayidx581.4 = getelementptr inbounds [3 x [8 x [5 x [2 x i32]]]], ptr @INIT_ABS_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2217, i64 4
  %count.i1830.4 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 4, i32 2
  %996 = load i64, ptr %count.i1830.4, align 8, !tbaa !43
  %997 = load i32, ptr %arrayidx581.4, align 8, !tbaa !18
  %arrayidx3.i1831.4 = getelementptr inbounds i32, ptr %arrayidx581.4, i64 1
  %998 = load i32, ptr %arrayidx3.i1831.4, align 4, !tbaa !18
  %MPS.i1832.4 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 7, i64 %indvars.iv2217, i64 4, i32 1
  %999 = load i8, ptr %MPS.i1832.4, align 2, !tbaa !46
  %tobool.not.i1833.4 = icmp eq i8 %999, 0
  %1000 = load i16, ptr %arrayidx575.4, align 8, !tbaa !47
  %conv9.i1834.4 = zext i16 %1000 to i32
  %add7.i1835.4 = add nuw nsw i32 %conv9.i1834.4, 64
  %sub.i1836.4 = sub nsw i32 63, %conv9.i1834.4
  %cond.i1837.4 = select i1 %tobool.not.i1833.4, i32 %sub.i1836.4, i32 %add7.i1835.4
  %mul.i1839.4 = mul nsw i32 %997, %cond.i.i1807.us
  %shr.i1840.4 = ashr i32 %mul.i1839.4, 4
  %add.i1841.4 = add nsw i32 %shr.i1840.4, %998
  %cond.i.i.i1842.4 = tail call i32 @llvm.smax.i32(i32 %add.i1841.4, i32 0)
  %cond.i4.i.i1843.4 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1842.4, i32 127)
  %conv.i1844.4 = uitofp i64 %996 to double
  %div.i1845.4 = fmul double %conv.i1844.4, 3.125000e-02
  %cmp.i.i1846.4 = fcmp ogt double %div.i1845.4, 1.000000e+00
  %cond.i34.i1847.4 = select i1 %cmp.i.i1846.4, double 1.000000e+00, double %div.i1845.4
  %idxprom.i1848.4 = sext i32 %cond.i1837.4 to i64
  %arrayidx10.i1849.4 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1848.4
  %1001 = load double, ptr %arrayidx10.i1849.4, align 8, !tbaa !22
  %idxprom12.i1850.4 = zext i32 %cond.i4.i.i1843.4 to i64
  %arrayidx13.i1851.4 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1850.4
  %1002 = load double, ptr %arrayidx13.i1851.4, align 8, !tbaa !22
  %1003 = fneg double %cond.i34.i1847.4
  %neg.i1852.4 = fmul double %1001, %1003
  %1004 = tail call double @llvm.fmuladd.f64(double %neg.i1852.4, double %1002, double 0.000000e+00)
  br label %for.inc589

for.inc589:                                       ; preds = %for.cond551.preheader.split, %for.cond551.preheader.split.us
  %cond.i1837.4.sink = phi i32 [ %cond.i1837.4, %for.cond551.preheader.split ], [ %cond.i1806.us.4, %for.cond551.preheader.split.us ]
  %cond.i4.i.i1843.4.sink = phi i32 [ %cond.i4.i.i1843.4, %for.cond551.preheader.split ], [ %cond.i4.i.i1812.us.4, %for.cond551.preheader.split.us ]
  %.sink2335 = phi double [ %1003, %for.cond551.preheader.split ], [ %953, %for.cond551.preheader.split.us ]
  %.sink2334 = phi double [ %1004, %for.cond551.preheader.split ], [ %954, %for.cond551.preheader.split.us ]
  %xr.39.3.sink = phi double [ %xr.39.3, %for.cond551.preheader.split ], [ %xr.39.us.3, %for.cond551.preheader.split.us ]
  %sub15.i1853.4 = sub nsw i32 127, %cond.i1837.4.sink
  %idxprom16.i1854.4 = sext i32 %sub15.i1853.4 to i64
  %arrayidx17.i1855.4 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1854.4
  %1005 = load double, ptr %arrayidx17.i1855.4, align 8, !tbaa !22
  %sub19.i1856.4 = xor i32 %cond.i4.i.i1843.4.sink, 127
  %idxprom20.i1857.4 = zext i32 %sub19.i1856.4 to i64
  %arrayidx21.i1858.4 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1857.4
  %1006 = load double, ptr %arrayidx21.i1858.4, align 8, !tbaa !22
  %neg23.i1859.4 = fmul double %1005, %.sink2335
  %1007 = tail call double @llvm.fmuladd.f64(double %neg23.i1859.4, double %1006, double %.sink2334)
  %xr.39.4 = fadd double %xr.39.3.sink, %1007
  %indvars.iv.next2218 = add nuw nsw i64 %indvars.iv2217, 1
  %exitcond2220.not = icmp eq i64 %indvars.iv.next2218, 8
  br i1 %exitcond2220.not, label %for.cond592.preheader, label %for.cond551.preheader, !llvm.loop !61

for.cond636.preheader:                            ; preds = %for.inc633
  %cond.i.i1931.us = tail call i32 @llvm.smax.i32(i32 %887, i32 0)
  %cond.i.i1962 = tail call i32 @llvm.smax.i32(i32 %887, i32 0)
  br label %for.cond639.preheader

for.cond595.preheader:                            ; preds = %for.cond592.preheader, %for.inc633
  %indvars.iv2229 = phi i64 [ 0, %for.cond592.preheader ], [ %indvars.iv.next2230, %for.inc633 ]
  %xr.402065 = phi double [ %xr.39.4, %for.cond592.preheader ], [ %.us-phi2063, %for.inc633 ]
  br i1 %cmp599, label %for.body597.us, label %for.body597

for.body597.us:                                   ; preds = %for.cond595.preheader, %for.body597.us
  %indvars.iv2225 = phi i64 [ %indvars.iv.next2226, %for.body597.us ], [ 0, %for.cond595.preheader ]
  %xr.412062.us = phi double [ %xr.42.us, %for.body597.us ], [ %xr.402065, %for.cond595.preheader ]
  %arrayidx604.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 8, i64 %indvars.iv2229, i64 %indvars.iv2225
  %1008 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_I, i64 0, i64 0, i64 %indvars.iv2229, i64 %indvars.iv2225
  %count.i1861.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 8, i64 %indvars.iv2229, i64 %indvars.iv2225, i32 2
  %1009 = load i64, ptr %count.i1861.us, align 8, !tbaa !43
  %1010 = load i32, ptr %1008, align 8, !tbaa !18
  %1011 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_I, i64 0, i64 0, i64 %indvars.iv2229, i64 %indvars.iv2225, i64 1
  %1012 = load i32, ptr %1011, align 4, !tbaa !18
  %MPS.i1863.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 8, i64 %indvars.iv2229, i64 %indvars.iv2225, i32 1
  %1013 = load i8, ptr %MPS.i1863.us, align 2, !tbaa !46
  %tobool.not.i1864.us = icmp eq i8 %1013, 0
  %1014 = load i16, ptr %arrayidx604.us, align 8, !tbaa !47
  %conv9.i1865.us = zext i16 %1014 to i32
  %add7.i1866.us = add nuw nsw i32 %conv9.i1865.us, 64
  %sub.i1867.us = sub nsw i32 63, %conv9.i1865.us
  %cond.i1868.us = select i1 %tobool.not.i1864.us, i32 %sub.i1867.us, i32 %add7.i1866.us
  %mul.i1870.us = mul nsw i32 %1010, %cond.i.i1869.us
  %shr.i1871.us = ashr i32 %mul.i1870.us, 4
  %add.i1872.us = add nsw i32 %shr.i1871.us, %1012
  %cond.i.i.i1873.us = tail call i32 @llvm.smax.i32(i32 %add.i1872.us, i32 0)
  %cond.i4.i.i1874.us = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1873.us, i32 127)
  %conv.i1875.us = uitofp i64 %1009 to double
  %div.i1876.us = fmul double %conv.i1875.us, 3.125000e-02
  %cmp.i.i1877.us = fcmp ogt double %div.i1876.us, 1.000000e+00
  %cond.i34.i1878.us = select i1 %cmp.i.i1877.us, double 1.000000e+00, double %div.i1876.us
  %idxprom.i1879.us = sext i32 %cond.i1868.us to i64
  %arrayidx10.i1880.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1879.us
  %1015 = load double, ptr %arrayidx10.i1880.us, align 8, !tbaa !22
  %idxprom12.i1881.us = zext i32 %cond.i4.i.i1874.us to i64
  %arrayidx13.i1882.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1881.us
  %1016 = load double, ptr %arrayidx13.i1882.us, align 8, !tbaa !22
  %1017 = fneg double %cond.i34.i1878.us
  %neg.i1883.us = fmul double %1015, %1017
  %1018 = tail call double @llvm.fmuladd.f64(double %neg.i1883.us, double %1016, double 0.000000e+00)
  %sub15.i1884.us = sub nsw i32 127, %cond.i1868.us
  %idxprom16.i1885.us = sext i32 %sub15.i1884.us to i64
  %arrayidx17.i1886.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1885.us
  %1019 = load double, ptr %arrayidx17.i1886.us, align 8, !tbaa !22
  %sub19.i1887.us = xor i32 %cond.i4.i.i1874.us, 127
  %idxprom20.i1888.us = zext i32 %sub19.i1887.us to i64
  %arrayidx21.i1889.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1888.us
  %1020 = load double, ptr %arrayidx21.i1889.us, align 8, !tbaa !22
  %neg23.i1890.us = fmul double %1019, %1017
  %1021 = tail call double @llvm.fmuladd.f64(double %neg23.i1890.us, double %1020, double %1018)
  %xr.42.us = fadd double %xr.412062.us, %1021
  %indvars.iv.next2226 = add nuw nsw i64 %indvars.iv2225, 1
  %exitcond2228.not = icmp eq i64 %indvars.iv.next2226, 15
  br i1 %exitcond2228.not, label %for.inc633, label %for.body597.us, !llvm.loop !62

for.body597:                                      ; preds = %for.cond595.preheader, %for.body597
  %indvars.iv2221 = phi i64 [ %indvars.iv.next2222, %for.body597 ], [ 0, %for.cond595.preheader ]
  %xr.412062 = phi double [ %xr.42, %for.body597 ], [ %xr.402065, %for.cond595.preheader ]
  %arrayidx619 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 8, i64 %indvars.iv2229, i64 %indvars.iv2221
  %arrayidx625 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_MAP_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2229, i64 %indvars.iv2221
  %count.i1892 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 8, i64 %indvars.iv2229, i64 %indvars.iv2221, i32 2
  %1022 = load i64, ptr %count.i1892, align 8, !tbaa !43
  %1023 = load i32, ptr %arrayidx625, align 8, !tbaa !18
  %arrayidx3.i1893 = getelementptr inbounds i32, ptr %arrayidx625, i64 1
  %1024 = load i32, ptr %arrayidx3.i1893, align 4, !tbaa !18
  %MPS.i1894 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 8, i64 %indvars.iv2229, i64 %indvars.iv2221, i32 1
  %1025 = load i8, ptr %MPS.i1894, align 2, !tbaa !46
  %tobool.not.i1895 = icmp eq i8 %1025, 0
  %1026 = load i16, ptr %arrayidx619, align 8, !tbaa !47
  %conv9.i1896 = zext i16 %1026 to i32
  %add7.i1897 = add nuw nsw i32 %conv9.i1896, 64
  %sub.i1898 = sub nsw i32 63, %conv9.i1896
  %cond.i1899 = select i1 %tobool.not.i1895, i32 %sub.i1898, i32 %add7.i1897
  %mul.i1901 = mul nsw i32 %1023, %cond.i.i1869.us
  %shr.i1902 = ashr i32 %mul.i1901, 4
  %add.i1903 = add nsw i32 %shr.i1902, %1024
  %cond.i.i.i1904 = tail call i32 @llvm.smax.i32(i32 %add.i1903, i32 0)
  %cond.i4.i.i1905 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1904, i32 127)
  %conv.i1906 = uitofp i64 %1022 to double
  %div.i1907 = fmul double %conv.i1906, 3.125000e-02
  %cmp.i.i1908 = fcmp ogt double %div.i1907, 1.000000e+00
  %cond.i34.i1909 = select i1 %cmp.i.i1908, double 1.000000e+00, double %div.i1907
  %idxprom.i1910 = sext i32 %cond.i1899 to i64
  %arrayidx10.i1911 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1910
  %1027 = load double, ptr %arrayidx10.i1911, align 8, !tbaa !22
  %idxprom12.i1912 = zext i32 %cond.i4.i.i1905 to i64
  %arrayidx13.i1913 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1912
  %1028 = load double, ptr %arrayidx13.i1913, align 8, !tbaa !22
  %1029 = fneg double %cond.i34.i1909
  %neg.i1914 = fmul double %1027, %1029
  %1030 = tail call double @llvm.fmuladd.f64(double %neg.i1914, double %1028, double 0.000000e+00)
  %sub15.i1915 = sub nsw i32 127, %cond.i1899
  %idxprom16.i1916 = sext i32 %sub15.i1915 to i64
  %arrayidx17.i1917 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1916
  %1031 = load double, ptr %arrayidx17.i1917, align 8, !tbaa !22
  %sub19.i1918 = xor i32 %cond.i4.i.i1905, 127
  %idxprom20.i1919 = zext i32 %sub19.i1918 to i64
  %arrayidx21.i1920 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1919
  %1032 = load double, ptr %arrayidx21.i1920, align 8, !tbaa !22
  %neg23.i1921 = fmul double %1031, %1029
  %1033 = tail call double @llvm.fmuladd.f64(double %neg23.i1921, double %1032, double %1030)
  %xr.42 = fadd double %xr.412062, %1033
  %indvars.iv.next2222 = add nuw nsw i64 %indvars.iv2221, 1
  %exitcond2224.not = icmp eq i64 %indvars.iv.next2222, 15
  br i1 %exitcond2224.not, label %for.inc633, label %for.body597, !llvm.loop !62

for.inc633:                                       ; preds = %for.body597, %for.body597.us
  %.us-phi2063 = phi double [ %xr.42.us, %for.body597.us ], [ %xr.42, %for.body597 ]
  %indvars.iv.next2230 = add nuw nsw i64 %indvars.iv2229, 1
  %exitcond2232.not = icmp eq i64 %indvars.iv.next2230, 8
  br i1 %exitcond2232.not, label %for.cond636.preheader, label %for.cond595.preheader, !llvm.loop !63

for.cond639.preheader:                            ; preds = %for.cond636.preheader, %for.inc677
  %indvars.iv2241 = phi i64 [ 0, %for.cond636.preheader ], [ %indvars.iv.next2242, %for.inc677 ]
  %xr.432070 = phi double [ %.us-phi2063, %for.cond636.preheader ], [ %.us-phi2068, %for.inc677 ]
  br i1 %cmp599, label %for.body641.us, label %for.body641

for.body641.us:                                   ; preds = %for.cond639.preheader, %for.body641.us
  %indvars.iv2237 = phi i64 [ %indvars.iv.next2238, %for.body641.us ], [ 0, %for.cond639.preheader ]
  %xr.442067.us = phi double [ %xr.45.us, %for.body641.us ], [ %xr.432070, %for.cond639.preheader ]
  %arrayidx648.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 9, i64 %indvars.iv2241, i64 %indvars.iv2237
  %1034 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_I, i64 0, i64 0, i64 %indvars.iv2241, i64 %indvars.iv2237
  %count.i1923.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 9, i64 %indvars.iv2241, i64 %indvars.iv2237, i32 2
  %1035 = load i64, ptr %count.i1923.us, align 8, !tbaa !43
  %1036 = load i32, ptr %1034, align 8, !tbaa !18
  %1037 = getelementptr inbounds [1 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_I, i64 0, i64 0, i64 %indvars.iv2241, i64 %indvars.iv2237, i64 1
  %1038 = load i32, ptr %1037, align 4, !tbaa !18
  %MPS.i1925.us = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 9, i64 %indvars.iv2241, i64 %indvars.iv2237, i32 1
  %1039 = load i8, ptr %MPS.i1925.us, align 2, !tbaa !46
  %tobool.not.i1926.us = icmp eq i8 %1039, 0
  %1040 = load i16, ptr %arrayidx648.us, align 8, !tbaa !47
  %conv9.i1927.us = zext i16 %1040 to i32
  %add7.i1928.us = add nuw nsw i32 %conv9.i1927.us, 64
  %sub.i1929.us = sub nsw i32 63, %conv9.i1927.us
  %cond.i1930.us = select i1 %tobool.not.i1926.us, i32 %sub.i1929.us, i32 %add7.i1928.us
  %mul.i1932.us = mul nsw i32 %1036, %cond.i.i1931.us
  %shr.i1933.us = ashr i32 %mul.i1932.us, 4
  %add.i1934.us = add nsw i32 %shr.i1933.us, %1038
  %cond.i.i.i1935.us = tail call i32 @llvm.smax.i32(i32 %add.i1934.us, i32 0)
  %cond.i4.i.i1936.us = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1935.us, i32 127)
  %conv.i1937.us = uitofp i64 %1035 to double
  %div.i1938.us = fmul double %conv.i1937.us, 3.125000e-02
  %cmp.i.i1939.us = fcmp ogt double %div.i1938.us, 1.000000e+00
  %cond.i34.i1940.us = select i1 %cmp.i.i1939.us, double 1.000000e+00, double %div.i1938.us
  %idxprom.i1941.us = sext i32 %cond.i1930.us to i64
  %arrayidx10.i1942.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1941.us
  %1041 = load double, ptr %arrayidx10.i1942.us, align 8, !tbaa !22
  %idxprom12.i1943.us = zext i32 %cond.i4.i.i1936.us to i64
  %arrayidx13.i1944.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1943.us
  %1042 = load double, ptr %arrayidx13.i1944.us, align 8, !tbaa !22
  %1043 = fneg double %cond.i34.i1940.us
  %neg.i1945.us = fmul double %1041, %1043
  %1044 = tail call double @llvm.fmuladd.f64(double %neg.i1945.us, double %1042, double 0.000000e+00)
  %sub15.i1946.us = sub nsw i32 127, %cond.i1930.us
  %idxprom16.i1947.us = sext i32 %sub15.i1946.us to i64
  %arrayidx17.i1948.us = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1947.us
  %1045 = load double, ptr %arrayidx17.i1948.us, align 8, !tbaa !22
  %sub19.i1949.us = xor i32 %cond.i4.i.i1936.us, 127
  %idxprom20.i1950.us = zext i32 %sub19.i1949.us to i64
  %arrayidx21.i1951.us = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1950.us
  %1046 = load double, ptr %arrayidx21.i1951.us, align 8, !tbaa !22
  %neg23.i1952.us = fmul double %1045, %1043
  %1047 = tail call double @llvm.fmuladd.f64(double %neg23.i1952.us, double %1046, double %1044)
  %xr.45.us = fadd double %xr.442067.us, %1047
  %indvars.iv.next2238 = add nuw nsw i64 %indvars.iv2237, 1
  %exitcond2240.not = icmp eq i64 %indvars.iv.next2238, 15
  br i1 %exitcond2240.not, label %for.inc677, label %for.body641.us, !llvm.loop !64

for.body641:                                      ; preds = %for.cond639.preheader, %for.body641
  %indvars.iv2233 = phi i64 [ %indvars.iv.next2234, %for.body641 ], [ 0, %for.cond639.preheader ]
  %xr.442067 = phi double [ %xr.45, %for.body641 ], [ %xr.432070, %for.cond639.preheader ]
  %arrayidx663 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 9, i64 %indvars.iv2241, i64 %indvars.iv2233
  %arrayidx669 = getelementptr inbounds [3 x [8 x [15 x [2 x i32]]]], ptr @INIT_FLD_LAST_P, i64 0, i64 %indvars.iv2245, i64 %indvars.iv2241, i64 %indvars.iv2233
  %count.i1954 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 9, i64 %indvars.iv2241, i64 %indvars.iv2233, i32 2
  %1048 = load i64, ptr %count.i1954, align 8, !tbaa !43
  %1049 = load i32, ptr %arrayidx669, align 8, !tbaa !18
  %arrayidx3.i1955 = getelementptr inbounds i32, ptr %arrayidx669, i64 1
  %1050 = load i32, ptr %arrayidx3.i1955, align 4, !tbaa !18
  %MPS.i1956 = getelementptr inbounds %struct.TextureInfoContexts, ptr %tc, i64 0, i32 9, i64 %indvars.iv2241, i64 %indvars.iv2233, i32 1
  %1051 = load i8, ptr %MPS.i1956, align 2, !tbaa !46
  %tobool.not.i1957 = icmp eq i8 %1051, 0
  %1052 = load i16, ptr %arrayidx663, align 8, !tbaa !47
  %conv9.i1958 = zext i16 %1052 to i32
  %add7.i1959 = add nuw nsw i32 %conv9.i1958, 64
  %sub.i1960 = sub nsw i32 63, %conv9.i1958
  %cond.i1961 = select i1 %tobool.not.i1957, i32 %sub.i1960, i32 %add7.i1959
  %mul.i1963 = mul nsw i32 %1049, %cond.i.i1962
  %shr.i1964 = ashr i32 %mul.i1963, 4
  %add.i1965 = add nsw i32 %shr.i1964, %1050
  %cond.i.i.i1966 = tail call i32 @llvm.smax.i32(i32 %add.i1965, i32 0)
  %cond.i4.i.i1967 = tail call i32 @llvm.smin.i32(i32 %cond.i.i.i1966, i32 127)
  %conv.i1968 = uitofp i64 %1048 to double
  %div.i1969 = fmul double %conv.i1968, 3.125000e-02
  %cmp.i.i1970 = fcmp ogt double %div.i1969, 1.000000e+00
  %cond.i34.i1971 = select i1 %cmp.i.i1970, double 1.000000e+00, double %div.i1969
  %idxprom.i1972 = sext i32 %cond.i1961 to i64
  %arrayidx10.i1973 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom.i1972
  %1053 = load double, ptr %arrayidx10.i1973, align 8, !tbaa !22
  %idxprom12.i1974 = zext i32 %cond.i4.i.i1967 to i64
  %arrayidx13.i1975 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom12.i1974
  %1054 = load double, ptr %arrayidx13.i1975, align 8, !tbaa !22
  %1055 = fneg double %cond.i34.i1971
  %neg.i1976 = fmul double %1053, %1055
  %1056 = tail call double @llvm.fmuladd.f64(double %neg.i1976, double %1054, double 0.000000e+00)
  %sub15.i1977 = sub nsw i32 127, %cond.i1961
  %idxprom16.i1978 = sext i32 %sub15.i1977 to i64
  %arrayidx17.i1979 = getelementptr inbounds [128 x double], ptr @probability, i64 0, i64 %idxprom16.i1978
  %1057 = load double, ptr %arrayidx17.i1979, align 8, !tbaa !22
  %sub19.i1980 = xor i32 %cond.i4.i.i1967, 127
  %idxprom20.i1981 = zext i32 %sub19.i1980 to i64
  %arrayidx21.i1982 = getelementptr inbounds [128 x double], ptr @entropy, i64 0, i64 %idxprom20.i1981
  %1058 = load double, ptr %arrayidx21.i1982, align 8, !tbaa !22
  %neg23.i1983 = fmul double %1057, %1055
  %1059 = tail call double @llvm.fmuladd.f64(double %neg23.i1983, double %1058, double %1056)
  %xr.45 = fadd double %xr.442067, %1059
  %indvars.iv.next2234 = add nuw nsw i64 %indvars.iv2233, 1
  %exitcond2236.not = icmp eq i64 %indvars.iv.next2234, 15
  br i1 %exitcond2236.not, label %for.inc677, label %for.body641, !llvm.loop !64

for.inc677:                                       ; preds = %for.body641, %for.body641.us
  %.us-phi2068 = phi double [ %xr.45.us, %for.body641.us ], [ %xr.45, %for.body641 ]
  %indvars.iv.next2242 = add nuw nsw i64 %indvars.iv2241, 1
  %exitcond2244.not = icmp eq i64 %indvars.iv.next2242, 8
  br i1 %exitcond2244.not, label %for.end679, label %for.cond639.preheader, !llvm.loop !65

for.end679:                                       ; preds = %for.inc677
  %cmp680 = fcmp olt double %.us-phi2068, %min_xr.02074
  br i1 %cmp680, label %if.then681, label %for.inc683

if.then681:                                       ; preds = %for.end679
  %1060 = trunc i64 %indvars.iv2245 to i32
  store i32 %1060, ptr %mnumber, align 4, !tbaa !18
  br label %for.inc683

for.inc683:                                       ; preds = %for.end679, %if.then681
  %min_xr.1 = phi double [ %.us-phi2068, %if.then681 ], [ %min_xr.02074, %for.end679 ]
  %cmp12075 = icmp ult i64 %indvars.iv2245, 2
  %cmp1 = select i1 %cmp, i1 %cmp12075, i1 false
  br i1 %cmp1, label %for.cond2.preheaderthread-pre-split, label %for.end685, !llvm.loop !66

for.end685:                                       ; preds = %for.inc683
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @store_contexts() local_unnamed_addr #10 {
entry:
  %0 = load ptr, ptr @input, align 8, !tbaa !5
  %context_init_method = getelementptr inbounds %struct.InputParameters, ptr %0, i64 0, i32 151
  %1 = load i32, ptr %context_init_method, align 4, !tbaa !29
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %2 = load ptr, ptr @img, align 8, !tbaa !5
  %currentSlice = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 60
  %3 = load ptr, ptr %currentSlice, align 8, !tbaa !26
  %start_mb_nr = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 3
  %4 = load i32, ptr %start_mb_nr, align 4, !tbaa !27
  %5 = load i32, ptr @num_mb_per_slice, align 4, !tbaa !18
  %div = sdiv i32 %4, %5
  %type = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 5
  %6 = load i32, ptr %type, align 4, !tbaa !25
  %field_picture = getelementptr inbounds %struct.ImageParameters, ptr %2, i64 0, i32 110
  %7 = load i32, ptr %field_picture, align 8, !tbaa !24
  %8 = load ptr, ptr @initialized, align 8, !tbaa !5
  %idxprom = sext i32 %7 to i64
  %arrayidx = getelementptr inbounds ptr, ptr %8, i64 %idxprom
  %9 = load ptr, ptr %arrayidx, align 8, !tbaa !5
  %idxprom1 = sext i32 %6 to i64
  %arrayidx2 = getelementptr inbounds ptr, ptr %9, i64 %idxprom1
  %10 = load ptr, ptr %arrayidx2, align 8, !tbaa !5
  %idxprom3 = sext i32 %div to i64
  %arrayidx4 = getelementptr inbounds i32, ptr %10, i64 %idxprom3
  store i32 1, ptr %arrayidx4, align 4, !tbaa !18
  %11 = load ptr, ptr @model_number, align 8, !tbaa !5
  %arrayidx6 = getelementptr inbounds ptr, ptr %11, i64 %idxprom
  %12 = load ptr, ptr %arrayidx6, align 8, !tbaa !5
  %arrayidx8 = getelementptr inbounds ptr, ptr %12, i64 %idxprom1
  %13 = load ptr, ptr %arrayidx8, align 8, !tbaa !5
  %add.ptr = getelementptr inbounds i32, ptr %13, i64 %idxprom3
  %mot_ctx = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 7
  %14 = load ptr, ptr %mot_ctx, align 8, !tbaa !32
  %tex_ctx = getelementptr inbounds %struct.Slice, ptr %3, i64 0, i32 8
  %15 = load ptr, ptr %tex_ctx, align 8, !tbaa !33
  tail call void @GetCtxModelNumber(ptr noundef %add.ptr, ptr noundef %14, ptr noundef %15)
  br label %if.end

if.end:                                           ; preds = %entry, %if.then
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @update_field_frame_contexts(i32 noundef %field) local_unnamed_addr #11 {
entry:
  %tobool.not = icmp eq i32 %field, 0
  %0 = load ptr, ptr @initialized, align 8
  %arrayidx38 = getelementptr inbounds ptr, ptr %0, i64 1
  %1 = load ptr, ptr @model_number, align 8
  %arrayidx49 = getelementptr inbounds ptr, ptr %1, i64 1
  %2 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %cmp3188 = icmp sgt i32 %2, 0
  br i1 %tobool.not, label %for.cond26.preheader, label %for.cond.preheader

for.cond.preheader:                               ; preds = %entry
  br i1 %cmp3188, label %for.body3.lr.ph, label %if.end

for.cond26.preheader:                             ; preds = %entry
  br i1 %cmp3188, label %for.body32.lr.ph, label %if.end

for.body3.lr.ph:                                  ; preds = %for.cond.preheader
  %3 = load ptr, ptr %arrayidx38, align 8, !tbaa !5
  %4 = load ptr, ptr %3, align 8, !tbaa !5
  %5 = load ptr, ptr %0, align 8, !tbaa !5
  %6 = load ptr, ptr %5, align 8, !tbaa !5
  %7 = load ptr, ptr %arrayidx49, align 8, !tbaa !5
  %8 = load ptr, ptr %7, align 8, !tbaa !5
  %9 = load ptr, ptr %1, align 8, !tbaa !5
  %10 = load ptr, ptr %9, align 8, !tbaa !5
  br label %for.body3

for.body3:                                        ; preds = %for.body3.lr.ph, %for.body3
  %indvars.iv = phi i64 [ 0, %for.body3.lr.ph ], [ %indvars.iv.next, %for.body3 ]
  %shr = lshr i64 %indvars.iv, 1
  %idxprom5 = and i64 %shr, 2147483647
  %arrayidx6 = getelementptr inbounds i32, ptr %4, i64 %idxprom5
  %11 = load i32, ptr %arrayidx6, align 4, !tbaa !18
  %arrayidx11 = getelementptr inbounds i32, ptr %6, i64 %indvars.iv
  store i32 %11, ptr %arrayidx11, align 4, !tbaa !18
  %arrayidx17 = getelementptr inbounds i32, ptr %8, i64 %idxprom5
  %12 = load i32, ptr %arrayidx17, align 4, !tbaa !18
  %arrayidx22 = getelementptr inbounds i32, ptr %10, i64 %indvars.iv
  store i32 %12, ptr %arrayidx22, align 4, !tbaa !18
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %13 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %14 = sext i32 %13 to i64
  %cmp2 = icmp slt i64 %indvars.iv.next, %14
  br i1 %cmp2, label %for.body3, label %for.inc23, !llvm.loop !67

for.inc23:                                        ; preds = %for.body3
  %cmp283.1 = icmp sgt i32 %13, 0
  br i1 %cmp283.1, label %for.body3.lr.ph.1, label %if.end

for.body3.lr.ph.1:                                ; preds = %for.inc23
  %15 = load ptr, ptr %arrayidx38, align 8, !tbaa !5
  %arrayidx4.1 = getelementptr inbounds ptr, ptr %15, i64 1
  %16 = load ptr, ptr %arrayidx4.1, align 8, !tbaa !5
  %17 = load ptr, ptr %0, align 8, !tbaa !5
  %arrayidx9.1 = getelementptr inbounds ptr, ptr %17, i64 1
  %18 = load ptr, ptr %arrayidx9.1, align 8, !tbaa !5
  %19 = load ptr, ptr %arrayidx49, align 8, !tbaa !5
  %arrayidx14.1 = getelementptr inbounds ptr, ptr %19, i64 1
  %20 = load ptr, ptr %arrayidx14.1, align 8, !tbaa !5
  %21 = load ptr, ptr %1, align 8, !tbaa !5
  %arrayidx20.1 = getelementptr inbounds ptr, ptr %21, i64 1
  %22 = load ptr, ptr %arrayidx20.1, align 8, !tbaa !5
  br label %for.body3.1

for.body3.1:                                      ; preds = %for.body3.1, %for.body3.lr.ph.1
  %indvars.iv.1 = phi i64 [ 0, %for.body3.lr.ph.1 ], [ %indvars.iv.next.1, %for.body3.1 ]
  %shr.1 = lshr i64 %indvars.iv.1, 1
  %idxprom5.1 = and i64 %shr.1, 2147483647
  %arrayidx6.1 = getelementptr inbounds i32, ptr %16, i64 %idxprom5.1
  %23 = load i32, ptr %arrayidx6.1, align 4, !tbaa !18
  %arrayidx11.1 = getelementptr inbounds i32, ptr %18, i64 %indvars.iv.1
  store i32 %23, ptr %arrayidx11.1, align 4, !tbaa !18
  %arrayidx17.1 = getelementptr inbounds i32, ptr %20, i64 %idxprom5.1
  %24 = load i32, ptr %arrayidx17.1, align 4, !tbaa !18
  %arrayidx22.1 = getelementptr inbounds i32, ptr %22, i64 %indvars.iv.1
  store i32 %24, ptr %arrayidx22.1, align 4, !tbaa !18
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv.1, 1
  %25 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %26 = sext i32 %25 to i64
  %cmp2.1 = icmp slt i64 %indvars.iv.next.1, %26
  br i1 %cmp2.1, label %for.body3.1, label %for.inc23.1, !llvm.loop !67

for.inc23.1:                                      ; preds = %for.body3.1
  %cmp283.2 = icmp sgt i32 %25, 0
  br i1 %cmp283.2, label %for.body3.lr.ph.2, label %if.end

for.body3.lr.ph.2:                                ; preds = %for.inc23.1
  %27 = load ptr, ptr %arrayidx38, align 8, !tbaa !5
  %arrayidx4.2 = getelementptr inbounds ptr, ptr %27, i64 2
  %28 = load ptr, ptr %arrayidx4.2, align 8, !tbaa !5
  %29 = load ptr, ptr %0, align 8, !tbaa !5
  %arrayidx9.2 = getelementptr inbounds ptr, ptr %29, i64 2
  %30 = load ptr, ptr %arrayidx9.2, align 8, !tbaa !5
  %31 = load ptr, ptr %arrayidx49, align 8, !tbaa !5
  %arrayidx14.2 = getelementptr inbounds ptr, ptr %31, i64 2
  %32 = load ptr, ptr %arrayidx14.2, align 8, !tbaa !5
  %33 = load ptr, ptr %1, align 8, !tbaa !5
  %arrayidx20.2 = getelementptr inbounds ptr, ptr %33, i64 2
  %34 = load ptr, ptr %arrayidx20.2, align 8, !tbaa !5
  br label %for.body3.2

for.body3.2:                                      ; preds = %for.body3.2, %for.body3.lr.ph.2
  %indvars.iv.2 = phi i64 [ 0, %for.body3.lr.ph.2 ], [ %indvars.iv.next.2, %for.body3.2 ]
  %shr.2 = lshr i64 %indvars.iv.2, 1
  %idxprom5.2 = and i64 %shr.2, 2147483647
  %arrayidx6.2 = getelementptr inbounds i32, ptr %28, i64 %idxprom5.2
  %35 = load i32, ptr %arrayidx6.2, align 4, !tbaa !18
  %arrayidx11.2 = getelementptr inbounds i32, ptr %30, i64 %indvars.iv.2
  store i32 %35, ptr %arrayidx11.2, align 4, !tbaa !18
  %arrayidx17.2 = getelementptr inbounds i32, ptr %32, i64 %idxprom5.2
  %36 = load i32, ptr %arrayidx17.2, align 4, !tbaa !18
  %arrayidx22.2 = getelementptr inbounds i32, ptr %34, i64 %indvars.iv.2
  store i32 %36, ptr %arrayidx22.2, align 4, !tbaa !18
  %indvars.iv.next.2 = add nuw nsw i64 %indvars.iv.2, 1
  %37 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %38 = sext i32 %37 to i64
  %cmp2.2 = icmp slt i64 %indvars.iv.next.2, %38
  br i1 %cmp2.2, label %for.body3.2, label %for.inc23.2, !llvm.loop !67

for.inc23.2:                                      ; preds = %for.body3.2
  %cmp283.3 = icmp sgt i32 %37, 0
  br i1 %cmp283.3, label %for.body3.lr.ph.3, label %if.end

for.body3.lr.ph.3:                                ; preds = %for.inc23.2
  %39 = load ptr, ptr %arrayidx38, align 8, !tbaa !5
  %arrayidx4.3 = getelementptr inbounds ptr, ptr %39, i64 3
  %40 = load ptr, ptr %arrayidx4.3, align 8, !tbaa !5
  %41 = load ptr, ptr %0, align 8, !tbaa !5
  %arrayidx9.3 = getelementptr inbounds ptr, ptr %41, i64 3
  %42 = load ptr, ptr %arrayidx9.3, align 8, !tbaa !5
  %43 = load ptr, ptr %arrayidx49, align 8, !tbaa !5
  %arrayidx14.3 = getelementptr inbounds ptr, ptr %43, i64 3
  %44 = load ptr, ptr %arrayidx14.3, align 8, !tbaa !5
  %45 = load ptr, ptr %1, align 8, !tbaa !5
  %arrayidx20.3 = getelementptr inbounds ptr, ptr %45, i64 3
  %46 = load ptr, ptr %arrayidx20.3, align 8, !tbaa !5
  br label %for.body3.3

for.body3.3:                                      ; preds = %for.body3.3, %for.body3.lr.ph.3
  %indvars.iv.3 = phi i64 [ 0, %for.body3.lr.ph.3 ], [ %indvars.iv.next.3, %for.body3.3 ]
  %shr.3 = lshr i64 %indvars.iv.3, 1
  %idxprom5.3 = and i64 %shr.3, 2147483647
  %arrayidx6.3 = getelementptr inbounds i32, ptr %40, i64 %idxprom5.3
  %47 = load i32, ptr %arrayidx6.3, align 4, !tbaa !18
  %arrayidx11.3 = getelementptr inbounds i32, ptr %42, i64 %indvars.iv.3
  store i32 %47, ptr %arrayidx11.3, align 4, !tbaa !18
  %arrayidx17.3 = getelementptr inbounds i32, ptr %44, i64 %idxprom5.3
  %48 = load i32, ptr %arrayidx17.3, align 4, !tbaa !18
  %arrayidx22.3 = getelementptr inbounds i32, ptr %46, i64 %indvars.iv.3
  store i32 %48, ptr %arrayidx22.3, align 4, !tbaa !18
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv.3, 1
  %49 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %50 = sext i32 %49 to i64
  %cmp2.3 = icmp slt i64 %indvars.iv.next.3, %50
  br i1 %cmp2.3, label %for.body3.3, label %if.end, !llvm.loop !67

for.body32.lr.ph:                                 ; preds = %for.cond26.preheader
  %51 = load ptr, ptr %0, align 8, !tbaa !5
  %52 = load ptr, ptr %51, align 8, !tbaa !5
  %53 = load ptr, ptr %arrayidx38, align 8, !tbaa !5
  %54 = load ptr, ptr %53, align 8, !tbaa !5
  %55 = load ptr, ptr %1, align 8, !tbaa !5
  %56 = load ptr, ptr %55, align 8, !tbaa !5
  %57 = load ptr, ptr %arrayidx49, align 8, !tbaa !5
  %58 = load ptr, ptr %57, align 8, !tbaa !5
  br label %for.body32

for.body32:                                       ; preds = %for.body32.lr.ph, %for.body32
  %indvars.iv97 = phi i64 [ 0, %for.body32.lr.ph ], [ %indvars.iv.next98, %for.body32 ]
  %59 = shl nuw i64 %indvars.iv97, 1
  %arrayidx37 = getelementptr inbounds i32, ptr %52, i64 %59
  %60 = load i32, ptr %arrayidx37, align 4, !tbaa !18
  %arrayidx42 = getelementptr inbounds i32, ptr %54, i64 %indvars.iv97
  store i32 %60, ptr %arrayidx42, align 4, !tbaa !18
  %arrayidx48 = getelementptr inbounds i32, ptr %56, i64 %59
  %61 = load i32, ptr %arrayidx48, align 4, !tbaa !18
  %arrayidx53 = getelementptr inbounds i32, ptr %58, i64 %indvars.iv97
  store i32 %61, ptr %arrayidx53, align 4, !tbaa !18
  %indvars.iv.next98 = add nuw nsw i64 %indvars.iv97, 1
  %62 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %add = add nsw i32 %62, 1
  %shr30 = ashr i32 %add, 1
  %63 = sext i32 %shr30 to i64
  %cmp31 = icmp slt i64 %indvars.iv.next98, %63
  br i1 %cmp31, label %for.body32, label %for.inc57, !llvm.loop !68

for.inc57:                                        ; preds = %for.body32
  %cmp3188.1 = icmp sgt i32 %62, 0
  br i1 %cmp3188.1, label %for.body32.lr.ph.1, label %if.end

for.body32.lr.ph.1:                               ; preds = %for.inc57
  %64 = load ptr, ptr %0, align 8, !tbaa !5
  %arrayidx35.1 = getelementptr inbounds ptr, ptr %64, i64 1
  %65 = load ptr, ptr %arrayidx35.1, align 8, !tbaa !5
  %66 = load ptr, ptr %arrayidx38, align 8, !tbaa !5
  %arrayidx40.1 = getelementptr inbounds ptr, ptr %66, i64 1
  %67 = load ptr, ptr %arrayidx40.1, align 8, !tbaa !5
  %68 = load ptr, ptr %1, align 8, !tbaa !5
  %arrayidx45.1 = getelementptr inbounds ptr, ptr %68, i64 1
  %69 = load ptr, ptr %arrayidx45.1, align 8, !tbaa !5
  %70 = load ptr, ptr %arrayidx49, align 8, !tbaa !5
  %arrayidx51.1 = getelementptr inbounds ptr, ptr %70, i64 1
  %71 = load ptr, ptr %arrayidx51.1, align 8, !tbaa !5
  br label %for.body32.1

for.body32.1:                                     ; preds = %for.body32.1, %for.body32.lr.ph.1
  %indvars.iv97.1 = phi i64 [ 0, %for.body32.lr.ph.1 ], [ %indvars.iv.next98.1, %for.body32.1 ]
  %72 = shl nuw i64 %indvars.iv97.1, 1
  %arrayidx37.1 = getelementptr inbounds i32, ptr %65, i64 %72
  %73 = load i32, ptr %arrayidx37.1, align 4, !tbaa !18
  %arrayidx42.1 = getelementptr inbounds i32, ptr %67, i64 %indvars.iv97.1
  store i32 %73, ptr %arrayidx42.1, align 4, !tbaa !18
  %arrayidx48.1 = getelementptr inbounds i32, ptr %69, i64 %72
  %74 = load i32, ptr %arrayidx48.1, align 4, !tbaa !18
  %arrayidx53.1 = getelementptr inbounds i32, ptr %71, i64 %indvars.iv97.1
  store i32 %74, ptr %arrayidx53.1, align 4, !tbaa !18
  %indvars.iv.next98.1 = add nuw nsw i64 %indvars.iv97.1, 1
  %75 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %add.1 = add nsw i32 %75, 1
  %shr30.1 = ashr i32 %add.1, 1
  %76 = sext i32 %shr30.1 to i64
  %cmp31.1 = icmp slt i64 %indvars.iv.next98.1, %76
  br i1 %cmp31.1, label %for.body32.1, label %for.inc57.1, !llvm.loop !68

for.inc57.1:                                      ; preds = %for.body32.1
  %cmp3188.2 = icmp sgt i32 %75, 0
  br i1 %cmp3188.2, label %for.body32.lr.ph.2, label %if.end

for.body32.lr.ph.2:                               ; preds = %for.inc57.1
  %77 = load ptr, ptr %0, align 8, !tbaa !5
  %arrayidx35.2 = getelementptr inbounds ptr, ptr %77, i64 2
  %78 = load ptr, ptr %arrayidx35.2, align 8, !tbaa !5
  %79 = load ptr, ptr %arrayidx38, align 8, !tbaa !5
  %arrayidx40.2 = getelementptr inbounds ptr, ptr %79, i64 2
  %80 = load ptr, ptr %arrayidx40.2, align 8, !tbaa !5
  %81 = load ptr, ptr %1, align 8, !tbaa !5
  %arrayidx45.2 = getelementptr inbounds ptr, ptr %81, i64 2
  %82 = load ptr, ptr %arrayidx45.2, align 8, !tbaa !5
  %83 = load ptr, ptr %arrayidx49, align 8, !tbaa !5
  %arrayidx51.2 = getelementptr inbounds ptr, ptr %83, i64 2
  %84 = load ptr, ptr %arrayidx51.2, align 8, !tbaa !5
  br label %for.body32.2

for.body32.2:                                     ; preds = %for.body32.2, %for.body32.lr.ph.2
  %indvars.iv97.2 = phi i64 [ 0, %for.body32.lr.ph.2 ], [ %indvars.iv.next98.2, %for.body32.2 ]
  %85 = shl nuw i64 %indvars.iv97.2, 1
  %arrayidx37.2 = getelementptr inbounds i32, ptr %78, i64 %85
  %86 = load i32, ptr %arrayidx37.2, align 4, !tbaa !18
  %arrayidx42.2 = getelementptr inbounds i32, ptr %80, i64 %indvars.iv97.2
  store i32 %86, ptr %arrayidx42.2, align 4, !tbaa !18
  %arrayidx48.2 = getelementptr inbounds i32, ptr %82, i64 %85
  %87 = load i32, ptr %arrayidx48.2, align 4, !tbaa !18
  %arrayidx53.2 = getelementptr inbounds i32, ptr %84, i64 %indvars.iv97.2
  store i32 %87, ptr %arrayidx53.2, align 4, !tbaa !18
  %indvars.iv.next98.2 = add nuw nsw i64 %indvars.iv97.2, 1
  %88 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %add.2 = add nsw i32 %88, 1
  %shr30.2 = ashr i32 %add.2, 1
  %89 = sext i32 %shr30.2 to i64
  %cmp31.2 = icmp slt i64 %indvars.iv.next98.2, %89
  br i1 %cmp31.2, label %for.body32.2, label %for.inc57.2, !llvm.loop !68

for.inc57.2:                                      ; preds = %for.body32.2
  %cmp3188.3 = icmp sgt i32 %88, 0
  br i1 %cmp3188.3, label %for.body32.lr.ph.3, label %if.end

for.body32.lr.ph.3:                               ; preds = %for.inc57.2
  %90 = load ptr, ptr %0, align 8, !tbaa !5
  %arrayidx35.3 = getelementptr inbounds ptr, ptr %90, i64 3
  %91 = load ptr, ptr %arrayidx35.3, align 8, !tbaa !5
  %92 = load ptr, ptr %arrayidx38, align 8, !tbaa !5
  %arrayidx40.3 = getelementptr inbounds ptr, ptr %92, i64 3
  %93 = load ptr, ptr %arrayidx40.3, align 8, !tbaa !5
  %94 = load ptr, ptr %1, align 8, !tbaa !5
  %arrayidx45.3 = getelementptr inbounds ptr, ptr %94, i64 3
  %95 = load ptr, ptr %arrayidx45.3, align 8, !tbaa !5
  %96 = load ptr, ptr %arrayidx49, align 8, !tbaa !5
  %arrayidx51.3 = getelementptr inbounds ptr, ptr %96, i64 3
  %97 = load ptr, ptr %arrayidx51.3, align 8, !tbaa !5
  br label %for.body32.3

for.body32.3:                                     ; preds = %for.body32.3, %for.body32.lr.ph.3
  %indvars.iv97.3 = phi i64 [ 0, %for.body32.lr.ph.3 ], [ %indvars.iv.next98.3, %for.body32.3 ]
  %98 = shl nuw i64 %indvars.iv97.3, 1
  %arrayidx37.3 = getelementptr inbounds i32, ptr %91, i64 %98
  %99 = load i32, ptr %arrayidx37.3, align 4, !tbaa !18
  %arrayidx42.3 = getelementptr inbounds i32, ptr %93, i64 %indvars.iv97.3
  store i32 %99, ptr %arrayidx42.3, align 4, !tbaa !18
  %arrayidx48.3 = getelementptr inbounds i32, ptr %95, i64 %98
  %100 = load i32, ptr %arrayidx48.3, align 4, !tbaa !18
  %arrayidx53.3 = getelementptr inbounds i32, ptr %97, i64 %indvars.iv97.3
  store i32 %100, ptr %arrayidx53.3, align 4, !tbaa !18
  %indvars.iv.next98.3 = add nuw nsw i64 %indvars.iv97.3, 1
  %101 = load i32, ptr @number_of_slices, align 4, !tbaa !18
  %add.3 = add nsw i32 %101, 1
  %shr30.3 = ashr i32 %add.3, 1
  %102 = sext i32 %shr30.3 to i64
  %cmp31.3 = icmp slt i64 %indvars.iv.next98.3, %102
  br i1 %cmp31.3, label %for.body32.3, label %if.end, !llvm.loop !68

if.end:                                           ; preds = %for.body3.3, %for.body32.3, %for.cond26.preheader, %for.inc57, %for.inc57.1, %for.inc23, %for.inc23.1, %for.inc57.2, %for.inc23.2, %for.cond.preheader
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #12

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #12

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nofree nounwind willreturn allockind("alloc,uninitialized") allocsize(0) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { mustprogress nofree nounwind willreturn memory(write) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { mustprogress nounwind willreturn uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { mustprogress nofree nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #9 = { nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #13 = { nounwind allocsize(0) }
attributes #14 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = !{!10, !11, i64 15352}
!10 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !12, i64 48, !11, i64 52, !11, i64 56, !11, i64 60, !11, i64 64, !11, i64 68, !11, i64 72, !11, i64 76, !11, i64 80, !11, i64 84, !11, i64 88, !11, i64 92, !11, i64 96, !11, i64 100, !11, i64 104, !11, i64 108, !11, i64 112, !11, i64 116, !11, i64 120, !6, i64 128, !6, i64 136, !11, i64 144, !6, i64 152, !11, i64 160, !11, i64 164, !11, i64 168, !11, i64 172, !11, i64 176, !11, i64 180, !11, i64 184, !11, i64 188, !11, i64 192, !11, i64 196, !11, i64 200, !11, i64 204, !7, i64 208, !7, i64 4816, !7, i64 7376, !7, i64 8528, !7, i64 12624, !7, i64 13136, !6, i64 14160, !6, i64 14168, !6, i64 14176, !6, i64 14184, !6, i64 14192, !6, i64 14200, !6, i64 14208, !6, i64 14216, !6, i64 14224, !6, i64 14232, !6, i64 14240, !11, i64 14248, !11, i64 14252, !11, i64 14256, !11, i64 14260, !7, i64 14264, !11, i64 14328, !11, i64 14332, !11, i64 14336, !11, i64 14340, !11, i64 14344, !13, i64 14352, !11, i64 14360, !11, i64 14364, !11, i64 14368, !11, i64 14372, !6, i64 14376, !6, i64 14384, !6, i64 14392, !6, i64 14400, !7, i64 14408, !11, i64 14440, !11, i64 14444, !11, i64 14448, !11, i64 14452, !11, i64 14456, !11, i64 14460, !11, i64 14464, !11, i64 14468, !7, i64 14472, !11, i64 15240, !11, i64 15244, !11, i64 15248, !11, i64 15252, !11, i64 15256, !11, i64 15260, !11, i64 15264, !11, i64 15268, !11, i64 15272, !7, i64 15276, !11, i64 15280, !11, i64 15284, !11, i64 15288, !7, i64 15292, !11, i64 15296, !11, i64 15300, !7, i64 15304, !11, i64 15312, !11, i64 15316, !11, i64 15320, !11, i64 15324, !11, i64 15328, !11, i64 15332, !11, i64 15336, !11, i64 15340, !11, i64 15344, !11, i64 15348, !11, i64 15352, !7, i64 15356, !11, i64 15360, !11, i64 15364, !11, i64 15368, !11, i64 15372, !6, i64 15376, !11, i64 15384, !11, i64 15388, !11, i64 15392, !11, i64 15396, !11, i64 15400, !11, i64 15404, !11, i64 15408, !11, i64 15412, !11, i64 15416, !11, i64 15420, !11, i64 15424, !11, i64 15428, !11, i64 15432, !11, i64 15436, !11, i64 15440, !11, i64 15444, !11, i64 15448, !11, i64 15452, !11, i64 15456, !11, i64 15460, !11, i64 15464, !11, i64 15468, !11, i64 15472, !6, i64 15480, !6, i64 15488, !6, i64 15496, !6, i64 15504, !11, i64 15512, !11, i64 15516, !11, i64 15520, !11, i64 15524, !11, i64 15528, !11, i64 15532, !11, i64 15536, !11, i64 15540, !11, i64 15544, !11, i64 15548, !7, i64 15552, !7, i64 15576, !11, i64 15584, !11, i64 15588, !14, i64 15592, !11, i64 15596, !11, i64 15600, !11, i64 15604, !11, i64 15608, !11, i64 15612}
!11 = !{!"int", !7, i64 0}
!12 = !{!"float", !7, i64 0}
!13 = !{!"double", !7, i64 0}
!14 = !{!"short", !7, i64 0}
!15 = !{!16, !11, i64 264}
!16 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !11, i64 24, !11, i64 28, !11, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48, !11, i64 52, !11, i64 56, !11, i64 60, !11, i64 64, !11, i64 68, !7, i64 72, !7, i64 136, !7, i64 200, !11, i64 264, !11, i64 268, !11, i64 272, !11, i64 276, !7, i64 280, !7, i64 536, !7, i64 792, !7, i64 1048, !7, i64 1304, !11, i64 1560, !11, i64 1564, !11, i64 1568, !11, i64 1572, !11, i64 1576, !11, i64 1580, !7, i64 1584, !11, i64 2084, !11, i64 2088, !11, i64 2092, !11, i64 2096, !11, i64 2100, !11, i64 2104, !11, i64 2108, !11, i64 2112, !11, i64 2116, !11, i64 2120, !11, i64 2124, !11, i64 2128, !11, i64 2132, !11, i64 2136, !11, i64 2140, !11, i64 2144, !11, i64 2148, !11, i64 2152, !11, i64 2156, !7, i64 2160, !7, i64 2416, !7, i64 2672, !11, i64 2928, !11, i64 2932, !11, i64 2936, !11, i64 2940, !11, i64 2944, !11, i64 2948, !11, i64 2952, !11, i64 2956, !11, i64 2960, !11, i64 2964, !11, i64 2968, !11, i64 2972, !7, i64 2976, !11, i64 4000, !11, i64 4004, !11, i64 4008, !11, i64 4012, !11, i64 4016, !11, i64 4020, !11, i64 4024, !11, i64 4028, !11, i64 4032, !11, i64 4036, !11, i64 4040, !11, i64 4044, !11, i64 4048, !11, i64 4052, !11, i64 4056, !11, i64 4060, !11, i64 4064, !11, i64 4068, !11, i64 4072, !11, i64 4076, !13, i64 4080, !11, i64 4088, !11, i64 4092, !11, i64 4096, !11, i64 4100, !11, i64 4104, !11, i64 4108, !11, i64 4112, !11, i64 4116, !11, i64 4120, !11, i64 4124, !11, i64 4128, !11, i64 4132, !11, i64 4136, !11, i64 4140, !11, i64 4144, !11, i64 4148, !11, i64 4152, !11, i64 4156, !11, i64 4160, !11, i64 4164, !11, i64 4168, !11, i64 4172, !11, i64 4176, !11, i64 4180, !11, i64 4184, !11, i64 4188, !7, i64 4192, !7, i64 4448, !11, i64 4704, !11, i64 4708, !11, i64 4712, !11, i64 4716, !11, i64 4720, !11, i64 4724, !11, i64 4728, !11, i64 4732, !11, i64 4736, !11, i64 4740, !11, i64 4744, !11, i64 4748, !11, i64 4752, !11, i64 4756, !11, i64 4760, !11, i64 4764, !11, i64 4768, !11, i64 4772, !7, i64 4776, !11, i64 5032, !11, i64 5036, !6, i64 5040, !6, i64 5048, !6, i64 5056, !6, i64 5064, !11, i64 5072, !11, i64 5076, !11, i64 5080, !11, i64 5084, !11, i64 5088, !11, i64 5092, !11, i64 5096, !11, i64 5100, !11, i64 5104, !11, i64 5108, !11, i64 5112, !11, i64 5116, !11, i64 5120, !11, i64 5124, !11, i64 5128, !11, i64 5132, !11, i64 5136, !13, i64 5144, !13, i64 5152, !13, i64 5160, !7, i64 5168, !11, i64 5208, !7, i64 5212, !7, i64 5244, !11, i64 5248, !11, i64 5252, !11, i64 5256, !11, i64 5260, !11, i64 5264, !11, i64 5268, !11, i64 5272, !11, i64 5276, !11, i64 5280, !11, i64 5284, !11, i64 5288, !7, i64 5296, !7, i64 5344, !7, i64 5392, !11, i64 5648, !11, i64 5652, !11, i64 5656, !11, i64 5660, !7, i64 5664, !7, i64 5704, !11, i64 5744, !11, i64 5748, !11, i64 5752, !11, i64 5756, !11, i64 5760, !11, i64 5764, !11, i64 5768, !11, i64 5772, !11, i64 5776, !7, i64 5780, !11, i64 5792}
!17 = !{!16, !11, i64 268}
!18 = !{!11, !11, i64 0}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.mustprogress"}
!21 = distinct !{!21, !20}
!22 = !{!13, !13, i64 0}
!23 = distinct !{!23, !20}
!24 = !{!10, !11, i64 15312}
!25 = !{!10, !11, i64 20}
!26 = !{!10, !6, i64 14216}
!27 = !{!28, !11, i64 12}
!28 = !{!"", !11, i64 0, !11, i64 4, !11, i64 8, !11, i64 12, !11, i64 16, !11, i64 20, !6, i64 24, !6, i64 32, !6, i64 40, !11, i64 48, !6, i64 56, !6, i64 64, !6, i64 72, !11, i64 80, !6, i64 88, !6, i64 96, !6, i64 104, !6, i64 112, !7, i64 120}
!29 = !{!16, !11, i64 5092}
!30 = !{!16, !11, i64 5096}
!31 = !{!10, !11, i64 15384}
!32 = !{!28, !6, i64 32}
!33 = !{!28, !6, i64 40}
!34 = distinct !{!34, !20}
!35 = distinct !{!35, !20}
!36 = distinct !{!36, !20}
!37 = distinct !{!37, !20}
!38 = distinct !{!38, !20}
!39 = distinct !{!39, !20}
!40 = distinct !{!40, !20}
!41 = distinct !{!41, !20}
!42 = !{!10, !11, i64 36}
!43 = !{!44, !45, i64 8}
!44 = !{!"", !14, i64 0, !7, i64 2, !45, i64 8}
!45 = !{!"long", !7, i64 0}
!46 = !{!44, !7, i64 2}
!47 = !{!44, !14, i64 0}
!48 = distinct !{!48, !20}
!49 = distinct !{!49, !20}
!50 = distinct !{!50, !20}
!51 = distinct !{!51, !20}
!52 = distinct !{!52, !20}
!53 = distinct !{!53, !20}
!54 = distinct !{!54, !20}
!55 = distinct !{!55, !20}
!56 = distinct !{!56, !20}
!57 = distinct !{!57, !20}
!58 = distinct !{!58, !20}
!59 = distinct !{!59, !20}
!60 = distinct !{!60, !20}
!61 = distinct !{!61, !20}
!62 = distinct !{!62, !20}
!63 = distinct !{!63, !20}
!64 = distinct !{!64, !20}
!65 = distinct !{!65, !20}
!66 = distinct !{!66, !20}
!67 = distinct !{!67, !20}
!68 = distinct !{!68, !20}
