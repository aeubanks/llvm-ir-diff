; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/Bullet/btSoftBody.cpp'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/Bullet/btSoftBody.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.btVector3 = type { [4 x float] }
%class.btTransform = type { %class.btMatrix3x3, %class.btVector3 }
%class.btMatrix3x3 = type { [3 x %class.btVector3] }
%"struct.btSoftBody::Node" = type <{ %"struct.btSoftBody::Feature", %class.btVector3, %class.btVector3, %class.btVector3, %class.btVector3, %class.btVector3, float, float, ptr, i8, [7 x i8] }>
%"struct.btSoftBody::Feature" = type { %"struct.btSoftBody::Element", ptr }
%"struct.btSoftBody::Element" = type { ptr }
%"struct.btSoftBody::Material" = type { %"struct.btSoftBody::Element", float, float, float, i32 }
%"struct.btSoftBody::Note" = type { %"struct.btSoftBody::Element", ptr, %class.btVector3, i32, [4 x ptr], [4 x float] }
%"struct.btSoftBody::Link" = type <{ %"struct.btSoftBody::Feature", [2 x ptr], float, i8, [3 x i8], float, float, float, %class.btVector3, [4 x i8] }>
%"struct.btSoftBody::Face" = type { %"struct.btSoftBody::Feature", [3 x ptr], %class.btVector3, float, ptr }
%"struct.btSoftBody::Tetra" = type { %"struct.btSoftBody::Feature", [4 x ptr], float, ptr, [4 x %class.btVector3], float, float }
%struct.btDbvtAabbMm = type { %class.btVector3, %class.btVector3 }
%class.btSoftBody = type { %class.btCollisionObject, %class.btAlignedObjectArray, %"struct.btSoftBody::Config", %"struct.btSoftBody::SolverState", [4 x i8], %"struct.btSoftBody::Pose", ptr, ptr, %class.btAlignedObjectArray.20, %class.btAlignedObjectArray.24, %class.btAlignedObjectArray.28, %class.btAlignedObjectArray.32, %class.btAlignedObjectArray.36, %class.btAlignedObjectArray.40, %class.btAlignedObjectArray.48, %class.btAlignedObjectArray.52, %class.btAlignedObjectArray.56, %class.btAlignedObjectArray.64, float, [2 x %class.btVector3], i8, %struct.btDbvt, %struct.btDbvt, %struct.btDbvt, %class.btAlignedObjectArray.72, %class.btAlignedObjectArray.76, %class.btTransform, %class.btAlignedObjectArray.80 }
%class.btCollisionObject = type { ptr, %class.btTransform, %class.btTransform, %class.btVector3, %class.btVector3, %class.btVector3, i8, float, ptr, ptr, ptr, i32, i32, i32, i32, float, float, float, ptr, i32, float, float, float, i8, [7 x i8] }
%class.btAlignedObjectArray = type <{ %class.btAlignedAllocator, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator = type { i8 }
%"struct.btSoftBody::Config" = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, %class.btAlignedObjectArray.0, %class.btAlignedObjectArray.4, %class.btAlignedObjectArray.4 }
%class.btAlignedObjectArray.0 = type <{ %class.btAlignedAllocator.1, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.1 = type { i8 }
%class.btAlignedObjectArray.4 = type <{ %class.btAlignedAllocator.5, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.5 = type { i8 }
%"struct.btSoftBody::SolverState" = type { float, float, float, float, float }
%"struct.btSoftBody::Pose" = type { i8, i8, float, %class.btAlignedObjectArray.8, %class.btAlignedObjectArray.12, %class.btVector3, %class.btMatrix3x3, %class.btMatrix3x3, %class.btMatrix3x3 }
%class.btAlignedObjectArray.8 = type <{ %class.btAlignedAllocator.9, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.9 = type { i8 }
%class.btAlignedObjectArray.12 = type <{ %class.btAlignedAllocator.13, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.13 = type { i8 }
%class.btAlignedObjectArray.20 = type <{ %class.btAlignedAllocator.21, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.21 = type { i8 }
%class.btAlignedObjectArray.24 = type <{ %class.btAlignedAllocator.25, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.25 = type { i8 }
%class.btAlignedObjectArray.28 = type <{ %class.btAlignedAllocator.29, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.29 = type { i8 }
%class.btAlignedObjectArray.32 = type <{ %class.btAlignedAllocator.33, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.33 = type { i8 }
%class.btAlignedObjectArray.36 = type <{ %class.btAlignedAllocator.37, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.37 = type { i8 }
%class.btAlignedObjectArray.40 = type <{ %class.btAlignedAllocator.41, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.41 = type { i8 }
%class.btAlignedObjectArray.48 = type <{ %class.btAlignedAllocator.49, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.49 = type { i8 }
%class.btAlignedObjectArray.52 = type <{ %class.btAlignedAllocator.53, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.53 = type { i8 }
%class.btAlignedObjectArray.56 = type <{ %class.btAlignedAllocator.57, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.57 = type { i8 }
%class.btAlignedObjectArray.64 = type <{ %class.btAlignedAllocator.65, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.65 = type { i8 }
%struct.btDbvt = type { ptr, ptr, i32, i32, i32, [4 x i8], %class.btAlignedObjectArray.68 }
%class.btAlignedObjectArray.68 = type <{ %class.btAlignedAllocator.69, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.69 = type { i8 }
%class.btAlignedObjectArray.72 = type <{ %class.btAlignedAllocator.73, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.73 = type { i8 }
%class.btAlignedObjectArray.76 = type <{ %class.btAlignedAllocator.77, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.77 = type { i8 }
%class.btAlignedObjectArray.80 = type <{ %class.btAlignedAllocator.81, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.81 = type { i8 }
%class.btCollisionShape = type { ptr, i32, ptr }
%class.btSoftBodyCollisionShape = type { %class.btConcaveShape.base, ptr }
%class.btConcaveShape.base = type <{ %class.btCollisionShape, float }>
%class.btConcaveShape = type <{ %class.btCollisionShape, float, [4 x i8] }>
%struct.btSoftBodyWorldInfo = type { float, float, float, %class.btVector3, ptr, ptr, %class.btVector3, %struct.btSparseSdf }
%struct.btSparseSdf = type { %class.btAlignedObjectArray.16, float, i32, i32, i32, i32, [4 x i8] }
%class.btAlignedObjectArray.16 = type <{ %class.btAlignedAllocator.17, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.17 = type { i8 }
%"struct.btSoftBody::Cluster" = type { %class.btAlignedObjectArray.59, %class.btAlignedObjectArray.12, %class.btAlignedObjectArray.8, %class.btTransform, float, float, %class.btMatrix3x3, %class.btMatrix3x3, %class.btVector3, [2 x %class.btVector3], [2 x %class.btVector3], i32, i32, %class.btVector3, %class.btVector3, ptr, float, float, float, float, float, float, i8, i8, i32 }
%class.btAlignedObjectArray.59 = type <{ %class.btAlignedAllocator.60, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.60 = type { i8 }
%class.btVector4 = type { %class.btVector3 }
%struct.btDbvtNode = type { %struct.btDbvtAabbMm, ptr, %union.anon }
%union.anon = type { [2 x ptr] }
%"struct.btSoftBody::Anchor" = type <{ ptr, %class.btVector3, ptr, %class.btMatrix3x3, %class.btVector3, float, [4 x i8] }>
%"struct.btSoftBody::Body" = type { ptr, ptr, ptr }
%"struct.btSoftBody::Joint" = type <{ ptr, [2 x %"struct.btSoftBody::Body"], [2 x %class.btVector3], float, float, float, %class.btVector3, %class.btVector3, %class.btMatrix3x3, i8, [3 x i8] }>
%"struct.btSoftBody::LJoint::Specs" = type { %"struct.btSoftBody::Joint::Specs", %class.btVector3 }
%"struct.btSoftBody::Joint::Specs" = type { float, float, float }
%"struct.btSoftBody::AJoint::Specs" = type { %"struct.btSoftBody::Joint::Specs", %class.btVector3, ptr }
%"struct.btSoftBody::AJoint" = type { %"struct.btSoftBody::Joint.base", [2 x %class.btVector3], ptr }
%"struct.btSoftBody::Joint.base" = type <{ ptr, [2 x %"struct.btSoftBody::Body"], [2 x %class.btVector3], float, float, float, %class.btVector3, %class.btVector3, %class.btMatrix3x3, i8 }>
%"struct.btSoftBody::Impulse" = type <{ %class.btVector3, %class.btVector3, i8, [3 x i8] }>
%class.btAlignedObjectArray.84 = type <{ %class.btAlignedAllocator.85, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.85 = type { i8 }
%struct.NodeLinks = type { %class.btAlignedObjectArray.80 }
%struct.btSymMatrix = type { %class.btAlignedObjectArray.80, i32, [4 x i8] }
%"struct.btSoftBody::sRayCast" = type { ptr, i32, i32, float }
%"struct.btSoftBody::RayFromToCaster" = type <{ %"struct.btDbvt::ICollide", %class.btVector3, %class.btVector3, %class.btVector3, float, [4 x i8], ptr, i32, [4 x i8] }>
%"struct.btDbvt::ICollide" = type { ptr }
%"struct.btSoftBody::RContact" = type <{ %"struct.btSoftBody::sCti", ptr, %class.btMatrix3x3, %class.btVector3, float, float, float, [4 x i8] }>
%"struct.btSoftBody::sCti" = type <{ ptr, %class.btVector3, float, [4 x i8] }>
%"struct.btSoftBody::SContact" = type { ptr, ptr, %class.btVector3, %class.btVector3, float, float, [2 x float] }
%class.btRigidBody = type <{ %class.btCollisionObject, %class.btMatrix3x3, %class.btVector3, %class.btVector3, float, %class.btVector3, %class.btVector3, %class.btVector3, %class.btVector3, %class.btVector3, %class.btVector3, %class.btVector3, float, float, i8, [3 x i8], float, float, float, float, float, float, ptr, %class.btAlignedObjectArray.43, i32, i32, i32, [4 x i8] }>
%class.btAlignedObjectArray.43 = type <{ %class.btAlignedAllocator.44, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.44 = type { i8 }
%class.btAlignedObjectArray.88 = type <{ %class.btAlignedAllocator.89, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.89 = type { i8 }
%"struct.btSparseSdf<3>::Cell" = type { [4 x [4 x [4 x float]]], [3 x i32], i32, i32, ptr, ptr }
%"struct.btSoftBody::LJoint" = type { %"struct.btSoftBody::Joint.base", [2 x %class.btVector3] }
%"struct.btSoftBody::CJoint" = type { %"struct.btSoftBody::Joint.base", i32, i32, [2 x %class.btVector3], %class.btVector3, float, [4 x i8] }
%"struct.btSoftColliders::CollideSDF_RS" = type { %"struct.btDbvt::ICollide", ptr, ptr, ptr, float, float }
%"struct.btSoftColliders::CollideCL_RS" = type { %"struct.btSoftColliders::ClusterBase.base", ptr, ptr }
%"struct.btSoftColliders::ClusterBase.base" = type <{ %"struct.btDbvt::ICollide", float, float, float, float, float }>
%"struct.btSoftColliders::ClusterBase" = type <{ %"struct.btDbvt::ICollide", float, float, float, float, float, [4 x i8] }>
%"struct.btSoftColliders::CollideCL_SS" = type { %"struct.btSoftColliders::ClusterBase.base", [2 x ptr] }
%"struct.btSoftColliders::CollideVF_SS" = type <{ %"struct.btDbvt::ICollide", [2 x ptr], float, [4 x i8] }>
%"struct.btDbvt::sStkNN" = type { ptr, ptr }
%class.btSoftClusterCollisionShape = type { %class.btConvexInternalShape, ptr }
%class.btConvexInternalShape = type { %class.btConvexShape, %class.btVector3, %class.btVector3, float, float }
%class.btConvexShape = type { %class.btCollisionShape }
%"struct.btGjkEpaSolver2::sResults" = type { i32, [2 x %class.btVector3], %class.btVector3, float }

$_ZN20btAlignedObjectArrayIiED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZN20btAlignedObjectArrayIbED2Ev = comdat any

$_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEED2Ev = comdat any

$_ZN10btSoftBody4PoseD2Ev = comdat any

$_ZN10btSoftBody6ConfigD2Ev = comdat any

$_ZN20btAlignedObjectArrayIP17btCollisionObjectED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE9push_backERKS1_ = comdat any

$_ZN20btAlignedObjectArrayIfED2Ev = comdat any

$_ZN20btAlignedObjectArrayI9NodeLinksE6resizeEiRKS0_ = comdat any

$_ZN20btAlignedObjectArrayI9NodeLinksED2Ev = comdat any

$_ZN10btSoftBody7ClusterD2Ev = comdat any

$_ZN20btAlignedObjectArrayI9btVector3ED2Ev = comdat any

$_ZN11btSymMatrixIiEC2EiRKi = comdat any

$_ZN10btSoftBody15RayFromToCaster17rayFromToTriangleERK9btVector3S3_S3_S3_S3_S3_f = comdat any

$_ZN6btDbvt7rayTestEPK10btDbvtNodeRK9btVector3S5_RNS_8ICollideE = comdat any

$_ZN11btSparseSdfILi3EE8EvaluateERK9btVector3P16btCollisionShapeRS1_f = comdat any

$_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_ = comdat any

$_ZNK10btSoftBody4Body14applyDAImpulseERK9btVector3 = comdat any

$_ZN11btRigidBody12applyImpulseERK9btVector3S2_ = comdat any

$_ZN6btDbvt9collideTVEPK10btDbvtNodeRK12btDbvtAabbMmRNS_8ICollideE = comdat any

$_ZN6btDbvt9collideTTEPK10btDbvtNodeS2_RNS_8ICollideE = comdat any

$_ZN10btSoftBody5JointD0Ev = comdat any

$_ZN10btSoftBody5JointD2Ev = comdat any

$_ZN10btSoftBody6CJointD0Ev = comdat any

$_ZNK10btSoftBody6CJoint4TypeEv = comdat any

$_ZN17btCollisionObject24checkCollideWithOverrideEPS_ = comdat any

$_ZN10btSoftBody17setCollisionShapeEP16btCollisionShape = comdat any

$_ZNK10btSoftBody7getAabbER9btVector3S1_ = comdat any

$_ZN10btSoftBody6LJointD0Ev = comdat any

$_ZNK10btSoftBody6LJoint4TypeEv = comdat any

$_ZN10btSoftBody6AJointD0Ev = comdat any

$_ZNK10btSoftBody6AJoint4TypeEv = comdat any

$_ZN10btSoftBody15RayFromToCasterD0Ev = comdat any

$_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodeS3_ = comdat any

$_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodef = comdat any

$_ZN6btDbvt8ICollide7DescentEPK10btDbvtNode = comdat any

$_ZN6btDbvt8ICollide9AllLeavesEPK10btDbvtNode = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EED2Ev = comdat any

$_ZN24btSoftBodyCollisionShapeD0Ev = comdat any

$_ZNK24btSoftBodyCollisionShape7getAabbERK11btTransformR9btVector3S4_ = comdat any

$_ZN24btSoftBodyCollisionShape15setLocalScalingERK9btVector3 = comdat any

$_ZNK24btSoftBodyCollisionShape15getLocalScalingEv = comdat any

$_ZNK24btSoftBodyCollisionShape21calculateLocalInertiaEfR9btVector3 = comdat any

$_ZNK24btSoftBodyCollisionShape7getNameEv = comdat any

$_ZN14btConcaveShape9setMarginEf = comdat any

$_ZNK14btConcaveShape9getMarginEv = comdat any

$_ZNK24btSoftBodyCollisionShape19processAllTrianglesEP18btTriangleCallbackRK9btVector3S4_ = comdat any

$_ZN11btMatrix3x311getIdentityEv = comdat any

$_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEED2Ev = comdat any

$_ZN6btDbvt8ICollideD2Ev = comdat any

$_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNode = comdat any

$_ZNK10btSoftBody4Body13applyVImpulseERK9btVector3S3_ = comdat any

$_ZNK10btSoftBody4Body14applyVAImpulseERK9btVector3 = comdat any

$_ZN15btSoftColliders13CollideSDF_RSD0Ev = comdat any

$_ZN15btSoftColliders13CollideSDF_RS7ProcessEPK10btDbvtNode = comdat any

$_ZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeE = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE9push_backERKS1_ = comdat any

$_ZN15btSoftColliders12CollideCL_RSD0Ev = comdat any

$_ZN15btSoftColliders12CollideCL_RS7ProcessEPK10btDbvtNode = comdat any

$_ZN15btSoftColliders11ClusterBase12SolveContactERKN15btGjkEpaSolver28sResultsEN10btSoftBody4BodyES6_RNS5_6CJointE = comdat any

$_ZN27btSoftClusterCollisionShapeD0Ev = comdat any

$_ZNK27btSoftClusterCollisionShape7getAabbERK11btTransformR9btVector3S4_ = comdat any

$_ZNK21btConvexInternalShape15getLocalScalingEv = comdat any

$_ZNK27btSoftClusterCollisionShape21calculateLocalInertiaEfR9btVector3 = comdat any

$_ZNK27btSoftClusterCollisionShape7getNameEv = comdat any

$_ZN27btSoftClusterCollisionShape9setMarginEf = comdat any

$_ZNK27btSoftClusterCollisionShape9getMarginEv = comdat any

$_ZNK27btSoftClusterCollisionShape24localGetSupportingVertexERK9btVector3 = comdat any

$_ZNK27btSoftClusterCollisionShape37localGetSupportingVertexWithoutMarginERK9btVector3 = comdat any

$_ZNK27btSoftClusterCollisionShape49batchedUnitVectorGetSupportingVertexWithoutMarginEPK9btVector3PS0_i = comdat any

$_ZNK21btConvexInternalShape36getNumPreferredPenetrationDirectionsEv = comdat any

$_ZNK21btConvexInternalShape32getPreferredPenetrationDirectionEiR9btVector3 = comdat any

$_ZNK27btSoftClusterCollisionShape12getShapeTypeEv = comdat any

$_ZN15btSoftColliders12CollideCL_SSD0Ev = comdat any

$_ZN15btSoftColliders12CollideCL_SS7ProcessEPK10btDbvtNodeS3_ = comdat any

$_ZN15btSoftColliders12CollideVF_SSD0Ev = comdat any

$_ZN15btSoftColliders12CollideVF_SS7ProcessEPK10btDbvtNodeS3_ = comdat any

$_ZN20btAlignedObjectArrayI9NodeLinksE7reserveEi = comdat any

$_ZN11btSparseSdfILi3EE9BuildCellERNS0_4CellE = comdat any

$_ZTSN6btDbvt8ICollideE = comdat any

$_ZTIN6btDbvt8ICollideE = comdat any

$_ZTV24btSoftBodyCollisionShape = comdat any

$_ZTS24btSoftBodyCollisionShape = comdat any

$_ZTI24btSoftBodyCollisionShape = comdat any

$_ZZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy = comdat any

$_ZGVZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy = comdat any

$_ZZNK10btSoftBody4Body5xformEvE8identity = comdat any

$_ZGVZNK10btSoftBody4Body5xformEvE8identity = comdat any

$_ZZN11btTransform11getIdentityEvE17identityTransform = comdat any

$_ZGVZN11btTransform11getIdentityEvE17identityTransform = comdat any

$_ZZN11btMatrix3x311getIdentityEvE14identityMatrix = comdat any

$_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix = comdat any

$_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi = comdat any

$_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi = comdat any

$_ZTVN15btSoftColliders13CollideSDF_RSE = comdat any

$_ZTSN15btSoftColliders13CollideSDF_RSE = comdat any

$_ZTIN15btSoftColliders13CollideSDF_RSE = comdat any

$_ZZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic = comdat any

$_ZGVZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic = comdat any

$_ZTVN15btSoftColliders12CollideCL_RSE = comdat any

$_ZTSN15btSoftColliders12CollideCL_RSE = comdat any

$_ZTSN15btSoftColliders11ClusterBaseE = comdat any

$_ZTIN15btSoftColliders11ClusterBaseE = comdat any

$_ZTIN15btSoftColliders12CollideCL_RSE = comdat any

$_ZTV27btSoftClusterCollisionShape = comdat any

$_ZTS27btSoftClusterCollisionShape = comdat any

$_ZTI27btSoftClusterCollisionShape = comdat any

$_ZTVN15btSoftColliders12CollideCL_SSE = comdat any

$_ZTSN15btSoftColliders12CollideCL_SSE = comdat any

$_ZTIN15btSoftColliders12CollideCL_SSE = comdat any

$_ZZN15btSoftColliders12CollideCL_SS7ProcessEPK10btDbvtNodeS3_E5count = comdat any

$_ZTVN15btSoftColliders12CollideVF_SSE = comdat any

$_ZTSN15btSoftColliders12CollideVF_SSE = comdat any

$_ZTIN15btSoftColliders12CollideVF_SSE = comdat any

@_ZTV10btSoftBody = dso_local unnamed_addr constant { [7 x ptr] } { [7 x ptr] [ptr null, ptr @_ZTI10btSoftBody, ptr @_ZN17btCollisionObject24checkCollideWithOverrideEPS_, ptr @_ZN10btSoftBodyD2Ev, ptr @_ZN10btSoftBodyD0Ev, ptr @_ZN10btSoftBody17setCollisionShapeEP16btCollisionShape, ptr @_ZNK10btSoftBody7getAabbER9btVector3S1_] }, align 8
@_ZTVN10btSoftBody15RayFromToCasterE = dso_local unnamed_addr constant { [9 x ptr] } { [9 x ptr] [ptr null, ptr @_ZTIN10btSoftBody15RayFromToCasterE, ptr @_ZN6btDbvt8ICollideD2Ev, ptr @_ZN10btSoftBody15RayFromToCasterD0Ev, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodeS3_, ptr @_ZN10btSoftBody15RayFromToCaster7ProcessEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodef, ptr @_ZN6btDbvt8ICollide7DescentEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide9AllLeavesEPK10btDbvtNode] }, align 8
@.str = private unnamed_addr constant [15 x i8] c"UpdateClusters\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"ApplyClusters\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"SoftBody applyForces\00", align 1
@_ZTVN10btSoftBody5JointE = dso_local unnamed_addr constant { [8 x ptr] } { [8 x ptr] [ptr null, ptr @_ZTIN10btSoftBody5JointE, ptr @_ZN10btSoftBody5JointD2Ev, ptr @_ZN10btSoftBody5JointD0Ev, ptr @_ZN10btSoftBody5Joint7PrepareEfi, ptr @__cxa_pure_virtual, ptr @__cxa_pure_virtual, ptr @__cxa_pure_virtual] }, align 8
@_ZTVN10__cxxabiv117__class_type_infoE = external global ptr
@_ZTSN10btSoftBody5JointE = dso_local constant [21 x i8] c"N10btSoftBody5JointE\00", align 1
@_ZTIN10btSoftBody5JointE = dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN10btSoftBody5JointE }, align 8
@_ZTVN10btSoftBody6CJointE = dso_local unnamed_addr constant { [8 x ptr] } { [8 x ptr] [ptr null, ptr @_ZTIN10btSoftBody6CJointE, ptr @_ZN10btSoftBody5JointD2Ev, ptr @_ZN10btSoftBody6CJointD0Ev, ptr @_ZN10btSoftBody6CJoint7PrepareEfi, ptr @_ZN10btSoftBody6CJoint5SolveEff, ptr @_ZN10btSoftBody6CJoint9TerminateEf, ptr @_ZNK10btSoftBody6CJoint4TypeEv] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global ptr
@_ZTSN10btSoftBody6CJointE = dso_local constant [22 x i8] c"N10btSoftBody6CJointE\00", align 1
@_ZTIN10btSoftBody6CJointE = dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN10btSoftBody6CJointE, ptr @_ZTIN10btSoftBody5JointE }, align 8
@_ZTS10btSoftBody = dso_local constant [13 x i8] c"10btSoftBody\00", align 1
@_ZTI17btCollisionObject = external constant ptr
@_ZTI10btSoftBody = dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTS10btSoftBody, ptr @_ZTI17btCollisionObject }, align 8
@_ZTVN10btSoftBody6LJointE = dso_local unnamed_addr constant { [8 x ptr] } { [8 x ptr] [ptr null, ptr @_ZTIN10btSoftBody6LJointE, ptr @_ZN10btSoftBody5JointD2Ev, ptr @_ZN10btSoftBody6LJointD0Ev, ptr @_ZN10btSoftBody6LJoint7PrepareEfi, ptr @_ZN10btSoftBody6LJoint5SolveEff, ptr @_ZN10btSoftBody6LJoint9TerminateEf, ptr @_ZNK10btSoftBody6LJoint4TypeEv] }, align 8
@_ZTSN10btSoftBody6LJointE = dso_local constant [22 x i8] c"N10btSoftBody6LJointE\00", align 1
@_ZTIN10btSoftBody6LJointE = dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN10btSoftBody6LJointE, ptr @_ZTIN10btSoftBody5JointE }, align 8
@_ZTVN10btSoftBody6AJointE = dso_local unnamed_addr constant { [8 x ptr] } { [8 x ptr] [ptr null, ptr @_ZTIN10btSoftBody6AJointE, ptr @_ZN10btSoftBody5JointD2Ev, ptr @_ZN10btSoftBody6AJointD0Ev, ptr @_ZN10btSoftBody6AJoint7PrepareEfi, ptr @_ZN10btSoftBody6AJoint5SolveEff, ptr @_ZN10btSoftBody6AJoint9TerminateEf, ptr @_ZNK10btSoftBody6AJoint4TypeEv] }, align 8
@_ZTSN10btSoftBody6AJointE = dso_local constant [22 x i8] c"N10btSoftBody6AJointE\00", align 1
@_ZTIN10btSoftBody6AJointE = dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN10btSoftBody6AJointE, ptr @_ZTIN10btSoftBody5JointE }, align 8
@_ZTSN10btSoftBody15RayFromToCasterE = dso_local constant [32 x i8] c"N10btSoftBody15RayFromToCasterE\00", align 1
@_ZTSN6btDbvt8ICollideE = linkonce_odr dso_local constant [19 x i8] c"N6btDbvt8ICollideE\00", comdat, align 1
@_ZTIN6btDbvt8ICollideE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN6btDbvt8ICollideE }, comdat, align 8
@_ZTIN10btSoftBody15RayFromToCasterE = dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN10btSoftBody15RayFromToCasterE, ptr @_ZTIN6btDbvt8ICollideE }, align 8
@_ZTV24btSoftBodyCollisionShape = linkonce_odr dso_local unnamed_addr constant { [15 x ptr] } { [15 x ptr] [ptr null, ptr @_ZTI24btSoftBodyCollisionShape, ptr @_ZN14btConcaveShapeD2Ev, ptr @_ZN24btSoftBodyCollisionShapeD0Ev, ptr @_ZNK24btSoftBodyCollisionShape7getAabbERK11btTransformR9btVector3S4_, ptr @_ZNK16btCollisionShape17getBoundingSphereER9btVector3Rf, ptr @_ZNK16btCollisionShape20getAngularMotionDiscEv, ptr @_ZNK16btCollisionShape27getContactBreakingThresholdEv, ptr @_ZN24btSoftBodyCollisionShape15setLocalScalingERK9btVector3, ptr @_ZNK24btSoftBodyCollisionShape15getLocalScalingEv, ptr @_ZNK24btSoftBodyCollisionShape21calculateLocalInertiaEfR9btVector3, ptr @_ZNK24btSoftBodyCollisionShape7getNameEv, ptr @_ZN14btConcaveShape9setMarginEf, ptr @_ZNK14btConcaveShape9getMarginEv, ptr @_ZNK24btSoftBodyCollisionShape19processAllTrianglesEP18btTriangleCallbackRK9btVector3S4_] }, comdat, align 8
@_ZTS24btSoftBodyCollisionShape = linkonce_odr dso_local constant [27 x i8] c"24btSoftBodyCollisionShape\00", comdat, align 1
@_ZTI14btConcaveShape = external constant ptr
@_ZTI24btSoftBodyCollisionShape = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTS24btSoftBodyCollisionShape, ptr @_ZTI14btConcaveShape }, comdat, align 8
@_ZZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy = linkonce_odr dso_local global %class.btVector3 zeroinitializer, comdat, align 4
@_ZGVZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy = linkonce_odr dso_local global i64 0, comdat, align 8
@.str.3 = private unnamed_addr constant [9 x i8] c"SoftBody\00", align 1
@_ZZNK10btSoftBody4Body5xformEvE8identity = linkonce_odr dso_local global %class.btTransform zeroinitializer, comdat, align 4
@_ZGVZNK10btSoftBody4Body5xformEvE8identity = linkonce_odr dso_local global i64 0, comdat, align 8
@_ZZN11btTransform11getIdentityEvE17identityTransform = linkonce_odr dso_local global %class.btTransform zeroinitializer, comdat, align 4
@_ZGVZN11btTransform11getIdentityEvE17identityTransform = linkonce_odr dso_local global i64 0, comdat, align 8
@_ZZN11btMatrix3x311getIdentityEvE14identityMatrix = linkonce_odr dso_local global %class.btMatrix3x3 zeroinitializer, comdat, align 4
@_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix = linkonce_odr dso_local global i64 0, comdat, align 8
@_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi = linkonce_odr dso_local global %class.btMatrix3x3 zeroinitializer, comdat, align 4
@_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi = linkonce_odr dso_local global i64 0, comdat, align 8
@_ZTVN15btSoftColliders13CollideSDF_RSE = linkonce_odr dso_local unnamed_addr constant { [9 x ptr] } { [9 x ptr] [ptr null, ptr @_ZTIN15btSoftColliders13CollideSDF_RSE, ptr @_ZN6btDbvt8ICollideD2Ev, ptr @_ZN15btSoftColliders13CollideSDF_RSD0Ev, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodeS3_, ptr @_ZN15btSoftColliders13CollideSDF_RS7ProcessEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodef, ptr @_ZN6btDbvt8ICollide7DescentEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide9AllLeavesEPK10btDbvtNode] }, comdat, align 8
@_ZTSN15btSoftColliders13CollideSDF_RSE = linkonce_odr dso_local constant [35 x i8] c"N15btSoftColliders13CollideSDF_RSE\00", comdat, align 1
@_ZTIN15btSoftColliders13CollideSDF_RSE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN15btSoftColliders13CollideSDF_RSE, ptr @_ZTIN6btDbvt8ICollideE }, comdat, align 8
@_ZZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic = linkonce_odr dso_local global %class.btMatrix3x3 zeroinitializer, comdat, align 4
@_ZGVZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic = linkonce_odr dso_local global i64 0, comdat, align 8
@_ZTVN15btSoftColliders12CollideCL_RSE = linkonce_odr dso_local unnamed_addr constant { [9 x ptr] } { [9 x ptr] [ptr null, ptr @_ZTIN15btSoftColliders12CollideCL_RSE, ptr @_ZN6btDbvt8ICollideD2Ev, ptr @_ZN15btSoftColliders12CollideCL_RSD0Ev, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodeS3_, ptr @_ZN15btSoftColliders12CollideCL_RS7ProcessEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodef, ptr @_ZN6btDbvt8ICollide7DescentEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide9AllLeavesEPK10btDbvtNode] }, comdat, align 8
@_ZTSN15btSoftColliders12CollideCL_RSE = linkonce_odr dso_local constant [34 x i8] c"N15btSoftColliders12CollideCL_RSE\00", comdat, align 1
@_ZTSN15btSoftColliders11ClusterBaseE = linkonce_odr dso_local constant [33 x i8] c"N15btSoftColliders11ClusterBaseE\00", comdat, align 1
@_ZTIN15btSoftColliders11ClusterBaseE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN15btSoftColliders11ClusterBaseE, ptr @_ZTIN6btDbvt8ICollideE }, comdat, align 8
@_ZTIN15btSoftColliders12CollideCL_RSE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN15btSoftColliders12CollideCL_RSE, ptr @_ZTIN15btSoftColliders11ClusterBaseE }, comdat, align 8
@_ZTV27btSoftClusterCollisionShape = linkonce_odr dso_local unnamed_addr constant { [21 x ptr] } { [21 x ptr] [ptr null, ptr @_ZTI27btSoftClusterCollisionShape, ptr @_ZN13btConvexShapeD2Ev, ptr @_ZN27btSoftClusterCollisionShapeD0Ev, ptr @_ZNK27btSoftClusterCollisionShape7getAabbERK11btTransformR9btVector3S4_, ptr @_ZNK16btCollisionShape17getBoundingSphereER9btVector3Rf, ptr @_ZNK16btCollisionShape20getAngularMotionDiscEv, ptr @_ZNK16btCollisionShape27getContactBreakingThresholdEv, ptr @_ZN21btConvexInternalShape15setLocalScalingERK9btVector3, ptr @_ZNK21btConvexInternalShape15getLocalScalingEv, ptr @_ZNK27btSoftClusterCollisionShape21calculateLocalInertiaEfR9btVector3, ptr @_ZNK27btSoftClusterCollisionShape7getNameEv, ptr @_ZN27btSoftClusterCollisionShape9setMarginEf, ptr @_ZNK27btSoftClusterCollisionShape9getMarginEv, ptr @_ZNK27btSoftClusterCollisionShape24localGetSupportingVertexERK9btVector3, ptr @_ZNK27btSoftClusterCollisionShape37localGetSupportingVertexWithoutMarginERK9btVector3, ptr @_ZNK27btSoftClusterCollisionShape49batchedUnitVectorGetSupportingVertexWithoutMarginEPK9btVector3PS0_i, ptr @_ZNK21btConvexInternalShape11getAabbSlowERK11btTransformR9btVector3S4_, ptr @_ZNK21btConvexInternalShape36getNumPreferredPenetrationDirectionsEv, ptr @_ZNK21btConvexInternalShape32getPreferredPenetrationDirectionEiR9btVector3, ptr @_ZNK27btSoftClusterCollisionShape12getShapeTypeEv] }, comdat, align 8
@_ZTS27btSoftClusterCollisionShape = linkonce_odr dso_local constant [30 x i8] c"27btSoftClusterCollisionShape\00", comdat, align 1
@_ZTI21btConvexInternalShape = external constant ptr
@_ZTI27btSoftClusterCollisionShape = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTS27btSoftClusterCollisionShape, ptr @_ZTI21btConvexInternalShape }, comdat, align 8
@.str.4 = private unnamed_addr constant [12 x i8] c"SOFTCLUSTER\00", align 1
@_ZTVN15btSoftColliders12CollideCL_SSE = linkonce_odr dso_local unnamed_addr constant { [9 x ptr] } { [9 x ptr] [ptr null, ptr @_ZTIN15btSoftColliders12CollideCL_SSE, ptr @_ZN6btDbvt8ICollideD2Ev, ptr @_ZN15btSoftColliders12CollideCL_SSD0Ev, ptr @_ZN15btSoftColliders12CollideCL_SS7ProcessEPK10btDbvtNodeS3_, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodef, ptr @_ZN6btDbvt8ICollide7DescentEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide9AllLeavesEPK10btDbvtNode] }, comdat, align 8
@_ZTSN15btSoftColliders12CollideCL_SSE = linkonce_odr dso_local constant [34 x i8] c"N15btSoftColliders12CollideCL_SSE\00", comdat, align 1
@_ZTIN15btSoftColliders12CollideCL_SSE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN15btSoftColliders12CollideCL_SSE, ptr @_ZTIN15btSoftColliders11ClusterBaseE }, comdat, align 8
@_ZZN15btSoftColliders12CollideCL_SS7ProcessEPK10btDbvtNodeS3_E5count = linkonce_odr dso_local local_unnamed_addr global i32 0, comdat, align 4
@_ZTVN15btSoftColliders12CollideVF_SSE = linkonce_odr dso_local unnamed_addr constant { [9 x ptr] } { [9 x ptr] [ptr null, ptr @_ZTIN15btSoftColliders12CollideVF_SSE, ptr @_ZN6btDbvt8ICollideD2Ev, ptr @_ZN15btSoftColliders12CollideVF_SSD0Ev, ptr @_ZN15btSoftColliders12CollideVF_SS7ProcessEPK10btDbvtNodeS3_, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodef, ptr @_ZN6btDbvt8ICollide7DescentEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide9AllLeavesEPK10btDbvtNode] }, comdat, align 8
@_ZTSN15btSoftColliders12CollideVF_SSE = linkonce_odr dso_local constant [34 x i8] c"N15btSoftColliders12CollideVF_SSE\00", comdat, align 1
@_ZTIN15btSoftColliders12CollideVF_SSE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN15btSoftColliders12CollideVF_SSE, ptr @_ZTIN6btDbvt8ICollideE }, comdat, align 8
@_ZZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy = internal global %"struct.btSoftBody::Node" zeroinitializer, align 8
@_ZGVZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy = internal global i64 0, align 8
@_ZZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_E9zerodummy = internal global %"struct.btSoftBody::Material" zeroinitializer, align 8
@_ZGVZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_E9zerodummy = internal global i64 0, align 8
@_ZZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_E9zerodummy = internal global %"struct.btSoftBody::Note" zeroinitializer, align 8
@_ZGVZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_E9zerodummy = internal global i64 0, align 8
@_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy = internal global %"struct.btSoftBody::Link" zeroinitializer, align 8
@_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy = internal global i64 0, align 8
@_ZZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy = internal global %"struct.btSoftBody::Face" zeroinitializer, align 8
@_ZGVZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy = internal global i64 0, align 8
@_ZZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_E9zerodummy = internal global %"struct.btSoftBody::Tetra" zeroinitializer, align 8
@_ZGVZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_E9zerodummy = internal global i64 0, align 8
@switch.table._ZN10btSoftBody11staticSolveEi = private unnamed_addr constant [4 x ptr] [ptr @_ZN10btSoftBody12PSolve_LinksEPS_ff, ptr @_ZN10btSoftBody14PSolve_AnchorsEPS_ff, ptr @_ZN10btSoftBody16PSolve_RContactsEPS_ff, ptr @_ZN10btSoftBody16PSolve_SContactsEPS_ff], align 8

@_ZN10btSoftBodyC1EP19btSoftBodyWorldInfoiPK9btVector3PKf = dso_local unnamed_addr alias void (ptr, ptr, i32, ptr, ptr), ptr @_ZN10btSoftBodyC2EP19btSoftBodyWorldInfoiPK9btVector3PKf
@_ZN10btSoftBodyD1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN10btSoftBodyD2Ev
@_ZN10btSoftBody15RayFromToCasterC1ERK9btVector3S3_f = dso_local unnamed_addr alias void (ptr, ptr, ptr, float), ptr @_ZN10btSoftBody15RayFromToCasterC2ERK9btVector3S3_f

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBodyC2EP19btSoftBodyWorldInfoiPK9btVector3PKf(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %worldInfo, i32 noundef %node_count, ptr noundef readonly %x, ptr noundef readonly %m) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
invoke.cont25:
  %ref.tmp143 = alloca %struct.btDbvtAabbMm, align 8
  tail call void @_ZN17btCollisionObjectC2Ev(ptr noundef nonnull align 8 dereferenceable(280) %this)
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTV10btSoftBody, i64 0, inrange i32 0, i64 2), ptr %this, align 8, !tbaa !5
  %m_ownsMemory.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 6
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !8
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 5
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !15
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 2
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !16
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !17
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 6
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !18
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 5
  store ptr null, ptr %m_data.i.i.i, align 8, !tbaa !21
  %m_size.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 2
  store i32 0, ptr %m_size.i.i.i, align 4, !tbaa !22
  %m_capacity.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 3
  store i32 0, ptr %m_capacity.i.i.i, align 8, !tbaa !23
  %m_ownsMemory.i.i8.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 6
  store i8 1, ptr %m_ownsMemory.i.i8.i, align 8, !tbaa !24
  %m_data.i.i9.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 5
  store ptr null, ptr %m_data.i.i9.i, align 8, !tbaa !27
  %m_size.i.i10.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 2
  store i32 0, ptr %m_size.i.i10.i, align 4, !tbaa !28
  %m_capacity.i.i11.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 3
  store i32 0, ptr %m_capacity.i.i11.i, align 8, !tbaa !29
  %m_ownsMemory.i.i12.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 6
  store i8 1, ptr %m_ownsMemory.i.i12.i, align 8, !tbaa !24
  %m_data.i.i13.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 5
  store ptr null, ptr %m_data.i.i13.i, align 8, !tbaa !27
  %m_size.i.i14.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 2
  store i32 0, ptr %m_size.i.i14.i, align 4, !tbaa !28
  %m_capacity.i.i15.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 3
  store i32 0, ptr %m_capacity.i.i15.i, align 8, !tbaa !29
  %m_ownsMemory.i.i.i240 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 6
  store i8 1, ptr %m_ownsMemory.i.i.i240, align 8, !tbaa !30
  %m_data.i.i.i241 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 5
  store ptr null, ptr %m_data.i.i.i241, align 8, !tbaa !33
  %m_size.i.i.i242 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 2
  store i32 0, ptr %m_size.i.i.i242, align 4, !tbaa !34
  %m_capacity.i.i.i243 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 3
  store i32 0, ptr %m_capacity.i.i.i243, align 8, !tbaa !35
  %m_ownsMemory.i.i11.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 6
  store i8 1, ptr %m_ownsMemory.i.i11.i, align 8, !tbaa !36
  %m_data.i.i12.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  store ptr null, ptr %m_data.i.i12.i, align 8, !tbaa !39
  %m_size.i.i13.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 2
  store i32 0, ptr %m_size.i.i13.i, align 4, !tbaa !40
  %m_capacity.i.i14.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 3
  store i32 0, ptr %m_capacity.i.i14.i, align 8, !tbaa !41
  %m_worldInfo = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 7
  store ptr %worldInfo, ptr %m_worldInfo, align 8, !tbaa !42
  %m_ownsMemory.i.i244 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 6
  store i8 1, ptr %m_ownsMemory.i.i244, align 8, !tbaa !82
  %m_data.i.i245 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 5
  store ptr null, ptr %m_data.i.i245, align 8, !tbaa !83
  %m_size.i.i246 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 2
  store i32 0, ptr %m_size.i.i246, align 4, !tbaa !84
  %m_capacity.i.i247 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 3
  store i32 0, ptr %m_capacity.i.i247, align 8, !tbaa !85
  %m_ownsMemory.i.i248 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 6
  store i8 1, ptr %m_ownsMemory.i.i248, align 8, !tbaa !86
  %m_data.i.i249 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  store ptr null, ptr %m_data.i.i249, align 8, !tbaa !87
  %m_size.i.i250 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  store i32 0, ptr %m_size.i.i250, align 4, !tbaa !88
  %m_capacity.i.i251 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 3
  store i32 0, ptr %m_capacity.i.i251, align 8, !tbaa !89
  %m_ownsMemory.i.i252 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 6
  store i8 1, ptr %m_ownsMemory.i.i252, align 8, !tbaa !90
  %m_data.i.i253 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  store ptr null, ptr %m_data.i.i253, align 8, !tbaa !91
  %m_size.i.i254 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  store i32 0, ptr %m_size.i.i254, align 4, !tbaa !92
  %m_capacity.i.i255 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 3
  store i32 0, ptr %m_capacity.i.i255, align 8, !tbaa !93
  %m_ownsMemory.i.i256 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 6
  store i8 1, ptr %m_ownsMemory.i.i256, align 8, !tbaa !94
  %m_data.i.i257 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  store ptr null, ptr %m_data.i.i257, align 8, !tbaa !95
  %m_size.i.i258 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  store i32 0, ptr %m_size.i.i258, align 4, !tbaa !96
  %m_capacity.i.i259 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 3
  store i32 0, ptr %m_capacity.i.i259, align 8, !tbaa !97
  %m_ownsMemory.i.i260 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 6
  store i8 1, ptr %m_ownsMemory.i.i260, align 8, !tbaa !98
  %m_data.i.i261 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  store ptr null, ptr %m_data.i.i261, align 8, !tbaa !99
  %m_size.i.i262 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 2
  store i32 0, ptr %m_size.i.i262, align 4, !tbaa !100
  %m_capacity.i.i263 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 3
  store i32 0, ptr %m_capacity.i.i263, align 8, !tbaa !101
  %m_ownsMemory.i.i264 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 6
  store i8 1, ptr %m_ownsMemory.i.i264, align 8, !tbaa !102
  %m_data.i.i265 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 5
  store ptr null, ptr %m_data.i.i265, align 8, !tbaa !103
  %m_size.i.i266 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 2
  store i32 0, ptr %m_size.i.i266, align 4, !tbaa !104
  %m_capacity.i.i267 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 3
  store i32 0, ptr %m_capacity.i.i267, align 8, !tbaa !105
  %m_ownsMemory.i.i268 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 6
  store i8 1, ptr %m_ownsMemory.i.i268, align 8, !tbaa !106
  %m_data.i.i269 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 5
  store ptr null, ptr %m_data.i.i269, align 8, !tbaa !107
  %m_size.i.i270 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 2
  store i32 0, ptr %m_size.i.i270, align 4, !tbaa !108
  %m_capacity.i.i271 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 3
  store i32 0, ptr %m_capacity.i.i271, align 8, !tbaa !109
  %m_ownsMemory.i.i272 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 6
  store i8 1, ptr %m_ownsMemory.i.i272, align 8, !tbaa !110
  %m_data.i.i273 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 5
  store ptr null, ptr %m_data.i.i273, align 8, !tbaa !111
  %m_size.i.i274 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 2
  store i32 0, ptr %m_size.i.i274, align 4, !tbaa !112
  %m_capacity.i.i275 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 3
  store i32 0, ptr %m_capacity.i.i275, align 8, !tbaa !113
  %m_ownsMemory.i.i276 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 6
  store i8 1, ptr %m_ownsMemory.i.i276, align 8, !tbaa !114
  %m_data.i.i277 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  store ptr null, ptr %m_data.i.i277, align 8, !tbaa !115
  %m_size.i.i278 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 2
  store i32 0, ptr %m_size.i.i278, align 4, !tbaa !116
  %m_capacity.i.i279 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 3
  store i32 0, ptr %m_capacity.i.i279, align 8, !tbaa !117
  %m_ownsMemory.i.i280 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 6
  store i8 1, ptr %m_ownsMemory.i.i280, align 8, !tbaa !118
  %m_data.i.i281 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  store ptr null, ptr %m_data.i.i281, align 8, !tbaa !119
  %m_size.i.i282 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 2
  store i32 0, ptr %m_size.i.i282, align 4, !tbaa !120
  %m_capacity.i.i283 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 3
  store i32 0, ptr %m_capacity.i.i283, align 8, !tbaa !121
  %m_bounds = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  %m_collisionDisabledObjects = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1
  %m_cfg = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2
  %m_pose = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5
  %m_notes = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8
  %m_nodes = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9
  %m_links = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10
  %m_faces = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11
  %m_tetras = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12
  %m_anchors = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13
  %m_rcontacts = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14
  %m_scontacts = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15
  %m_joints = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16
  %m_materials = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17
  %arrayctor.end = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  %m_ndbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  invoke void @_ZN6btDbvtC1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt)
          to label %invoke.cont28 unwind label %lpad26

invoke.cont28:                                    ; preds = %invoke.cont25
  %m_fdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 22
  invoke void @_ZN6btDbvtC1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_fdbvt)
          to label %invoke.cont30 unwind label %lpad29

invoke.cont30:                                    ; preds = %invoke.cont28
  %m_cdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  invoke void @_ZN6btDbvtC1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt)
          to label %invoke.cont95 unwind label %lpad31

invoke.cont95:                                    ; preds = %invoke.cont30
  %m_clusters = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24
  %m_ownsMemory.i.i284 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 6
  store i8 1, ptr %m_ownsMemory.i.i284, align 8, !tbaa !122
  %m_data.i.i285 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  store ptr null, ptr %m_data.i.i285, align 8, !tbaa !123
  %m_size.i.i286 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  store i32 0, ptr %m_size.i.i286, align 4, !tbaa !124
  %m_capacity.i.i287 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 3
  store i32 0, ptr %m_capacity.i.i287, align 8, !tbaa !125
  %m_clusterConnectivity = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25
  %m_ownsMemory.i.i288 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 6
  store i8 1, ptr %m_ownsMemory.i.i288, align 8, !tbaa !126
  %m_data.i.i289 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 5
  store ptr null, ptr %m_data.i.i289, align 8, !tbaa !127
  %m_size.i.i290 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 2
  store i32 0, ptr %m_size.i.i290, align 4, !tbaa !128
  %m_capacity.i.i291 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 3
  store i32 0, ptr %m_capacity.i.i291, align 8, !tbaa !129
  %m_userIndexMapping = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27
  %m_ownsMemory.i.i292 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27, i32 6
  store i8 1, ptr %m_ownsMemory.i.i292, align 8, !tbaa !130
  %m_data.i.i293 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27, i32 5
  store ptr null, ptr %m_data.i.i293, align 8, !tbaa !131
  %m_size.i.i294 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27, i32 2
  store i32 0, ptr %m_size.i.i294, align 4, !tbaa !132
  %m_capacity.i.i295 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27, i32 3
  store i32 0, ptr %m_capacity.i.i295, align 8, !tbaa !133
  %m_internalType = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 19
  store i32 4, ptr %m_internalType, align 8, !tbaa !134
  store i32 0, ptr %m_cfg, align 8, !tbaa !135
  %kVCF = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 1
  store float 1.000000e+00, ptr %kVCF, align 4, !tbaa !136
  %kDP = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 2
  %kDF = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %kDP, i8 0, i64 20, i1 false)
  store <2 x float> <float 0x3FC99999A0000000, float 0.000000e+00>, ptr %kDF, align 4, !tbaa !137
  %kCHR = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 9
  store float 1.000000e+00, ptr %kCHR, align 4, !tbaa !138
  %kKHR = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 10
  store <4 x float> <float 0x3FB99999A0000000, float 1.000000e+00, float 0x3FE6666660000000, float 0x3FB99999A0000000>, ptr %kKHR, align 8, !tbaa !137
  %kSKHR_CL = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 14
  store <4 x float> <float 1.000000e+00, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, ptr %kSKHR_CL, align 8, !tbaa !137
  %kSS_SPLT_CL = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 18
  store <2 x float> <float 5.000000e-01, float 1.000000e+00>, ptr %kSS_SPLT_CL, align 8, !tbaa !137
  %timescale = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 20
  store float 1.000000e+00, ptr %timescale, align 8, !tbaa !139
  %viterations = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 21
  store <4 x i32> <i32 0, i32 1, i32 0, i32 4>, ptr %viterations, align 4, !tbaa !140
  %collisions = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 25
  store i32 1, ptr %collisions, align 4, !tbaa !141
  store i8 0, ptr %m_pose, align 8, !tbaa !142
  %m_bframe = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 1
  store i8 0, ptr %m_bframe, align 1, !tbaa !143
  %m_volume = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 2
  store float 0.000000e+00, ptr %m_volume, align 4, !tbaa !144
  %m_com = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 5
  %m_rot = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_com, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %m_rot, align 8, !tbaa !137
  %arrayidx3.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 0, i32 0, i64 1
  %arrayidx3.i6.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 1, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i, align 4, !tbaa !137
  %arrayidx5.i7.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 2, i32 0, i64 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx5.i7.i.i, i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr %arrayidx5.i10.i.i, align 8, !tbaa !137
  %m_scl = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7
  store float 1.000000e+00, ptr %m_scl, align 8, !tbaa !137
  %arrayidx3.i.i.i296 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx3.i6.i.i297 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 1, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i296, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i297, align 4, !tbaa !137
  %arrayidx5.i7.i.i298 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i299 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 2, i32 0, i64 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx5.i7.i.i298, i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr %arrayidx5.i10.i.i299, align 8, !tbaa !137
  %m_tag = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 6
  store ptr null, ptr %m_tag, align 8, !tbaa !145
  %m_timeacc = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 18
  store float 0.000000e+00, ptr %m_timeacc, align 8, !tbaa !146
  store i8 1, ptr %arrayctor.end, align 4, !tbaa !147
  %ref.tmp80.sroa.5.0.m_bounds.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 0, i32 0, i64 2
  %arrayidx94 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1
  %ref.tmp87.sroa.5.0.arrayidx94.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1, i32 0, i64 2
  %m_worldTransform = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %m_bounds, i8 0, i64 32, i1 false)
  store float 1.000000e+00, ptr %m_worldTransform, align 8, !tbaa !137
  %arrayidx3.i.i.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, i64 1
  %arrayidx3.i6.i.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 1, i32 0, i32 0, i64 1, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i.i, align 4, !tbaa !137
  %arrayidx5.i7.i.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 1, i32 0, i32 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 1, i32 0, i32 0, i64 2, i32 0, i64 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx5.i7.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i.i, align 8, !tbaa !137
  %arrayidx7.i11.i.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 1, i32 0, i32 0, i64 2, i32 0, i64 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %arrayidx7.i11.i.i.i, i8 0, i64 20, i1 false)
  invoke void @_ZN10btSoftBody9setSolverENS_14eSolverPresets1_E(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef 0)
          to label %invoke.cont96 unwind label %lpad76

invoke.cont96:                                    ; preds = %invoke.cont95
  %call = invoke noundef ptr @_ZN10btSoftBody14appendMaterialEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
          to label %invoke.cont98 unwind label %lpad97

invoke.cont98:                                    ; preds = %invoke.cont96
  %m_kLST = getelementptr inbounds %"struct.btSoftBody::Material", ptr %call, i64 0, i32 1
  store <2 x float> <float 1.000000e+00, float 1.000000e+00>, ptr %m_kLST, align 8, !tbaa !137
  %m_kVST = getelementptr inbounds %"struct.btSoftBody::Material", ptr %call, i64 0, i32 3
  store float 1.000000e+00, ptr %m_kVST, align 8, !tbaa !148
  %m_flags = getelementptr inbounds %"struct.btSoftBody::Material", ptr %call, i64 0, i32 4
  store i32 1, ptr %m_flags, align 4, !tbaa !151
  %call100 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #36
          to label %invoke.cont99 unwind label %lpad97

invoke.cont99:                                    ; preds = %invoke.cont98
  invoke void @_ZN14btConcaveShapeC2Ev(ptr noundef nonnull align 8 dereferenceable(28) %call100)
          to label %invoke.cont102 unwind label %lpad101

invoke.cont102:                                   ; preds = %invoke.cont99
  store ptr getelementptr inbounds ({ [15 x ptr] }, ptr @_ZTV24btSoftBodyCollisionShape, i64 0, inrange i32 0, i64 2), ptr %call100, align 8, !tbaa !5
  %m_shapeType.i = getelementptr inbounds %class.btCollisionShape, ptr %call100, i64 0, i32 1
  store i32 32, ptr %m_shapeType.i, align 8, !tbaa !152
  %m_body.i = getelementptr inbounds %class.btSoftBodyCollisionShape, ptr %call100, i64 0, i32 1
  store ptr %this, ptr %m_body.i, align 8, !tbaa !154
  %m_collisionShape = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  store ptr %call100, ptr %m_collisionShape, align 8, !tbaa !157
  %m_collisionMargin.i = getelementptr inbounds %class.btConcaveShape, ptr %call100, i64 0, i32 1
  store float 2.500000e-01, ptr %m_collisionMargin.i, align 8, !tbaa !158
  %0 = load i32, ptr %m_size.i.i250, align 4, !tbaa !88
  %cmp4.i = icmp slt i32 %0, %node_count
  br i1 %cmp4.i, label %if.then5.i, label %invoke.cont116

if.then5.i:                                       ; preds = %invoke.cont102
  %1 = load i32, ptr %m_capacity.i.i251, align 8, !tbaa !89
  %cmp.i.i = icmp slt i32 %1, %node_count
  br i1 %cmp.i.i, label %if.then.i.i, label %for.body10.lr.ph.i

if.then.i.i:                                      ; preds = %if.then5.i
  %tobool.not.i.i.i = icmp eq i32 %node_count, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %node_count to i64
  %mul.i.i.i.i = mul nsw i64 %conv.i.i.i.i, 120
  %call.i.i.i.i312 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
          to label %call.i.i.i.i.noexc unwind label %lpad114

call.i.i.i.i.noexc:                               ; preds = %if.then.i.i.i
  %.pre.i = load i32, ptr %m_size.i.i250, align 4, !tbaa !88
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i: ; preds = %call.i.i.i.i.noexc, %if.then.i.i
  %2 = phi i32 [ %.pre.i, %call.i.i.i.i.noexc ], [ %0, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i312, %call.i.i.i.i.noexc ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %2, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i
  %wide.trip.count.i.i.i = zext i32 %2 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 1
  %3 = icmp eq i32 %2, 1
  br i1 %3, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967294
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.1, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %4 = load ptr, ptr %m_data.i.i249, align 8, !tbaa !87
  %arrayidx3.i.i.i310 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 %indvars.iv.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %arrayidx.i.i.i, ptr noundef nonnull align 8 dereferenceable(120) %arrayidx3.i.i.i310, i64 120, i1 false)
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %5 = load ptr, ptr %m_data.i.i249, align 8, !tbaa !87
  %arrayidx3.i.i.i310.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 %indvars.iv.next.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %arrayidx.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(120) %arrayidx3.i.i.i310.1, i64 120, i1 false)
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.unr
  %6 = load ptr, ptr %m_data.i.i249, align 8, !tbaa !87
  %arrayidx3.i.i.i310.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 %indvars.iv.i.i.i.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %arrayidx.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(120) %arrayidx3.i.i.i310.epil, i64 120, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i: ; preds = %for.body.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i
  %7 = load ptr, ptr %m_data.i.i249, align 8, !tbaa !87
  %tobool.not.i10.i.i = icmp eq ptr %7, null
  %8 = load i8, ptr %m_ownsMemory.i.i248, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %8, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %if.end.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %7)
          to label %if.end.i unwind label %lpad114

if.end.i:                                         ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i248, align 8, !tbaa !86
  store ptr %retval.0.i.i.i, ptr %m_data.i.i249, align 8, !tbaa !87
  store i32 %node_count, ptr %m_capacity.i.i251, align 8, !tbaa !89
  br label %for.body10.lr.ph.i

for.body10.lr.ph.i:                               ; preds = %if.end.i, %if.then5.i
  %9 = sext i32 %0 to i64
  %wide.trip.count.i = sext i32 %node_count to i64
  %10 = sub nsw i64 %wide.trip.count.i, %9
  %11 = xor i64 %9, -1
  %12 = add nsw i64 %11, %wide.trip.count.i
  %xtraiter336 = and i64 %10, 3
  %lcmp.mod337.not = icmp eq i64 %xtraiter336, 0
  br i1 %lcmp.mod337.not, label %for.body10.i.prol.loopexit, label %for.body10.i.prol

for.body10.i.prol:                                ; preds = %for.body10.lr.ph.i, %for.body10.i.prol
  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %for.body10.i.prol ], [ %9, %for.body10.lr.ph.i ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body10.i.prol ], [ 0, %for.body10.lr.ph.i ]
  %13 = load ptr, ptr %m_data.i.i249, align 8, !tbaa !87
  %arrayidx13.i.prol = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 %indvars.iv.i.prol
  store ptr null, ptr %arrayidx13.i.prol, align 8
  %indvars.iv.next.i.prol = add nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter336
  br i1 %prol.iter.cmp.not, label %for.body10.i.prol.loopexit, label %for.body10.i.prol, !llvm.loop !160

for.body10.i.prol.loopexit:                       ; preds = %for.body10.i.prol, %for.body10.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ %9, %for.body10.lr.ph.i ], [ %indvars.iv.next.i.prol, %for.body10.i.prol ]
  %14 = icmp ult i64 %12, 3
  br i1 %14, label %invoke.cont116, label %for.body10.i

for.body10.i:                                     ; preds = %for.body10.i.prol.loopexit, %for.body10.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body10.i ], [ %indvars.iv.i.unr, %for.body10.i.prol.loopexit ]
  %15 = load ptr, ptr %m_data.i.i249, align 8, !tbaa !87
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %15, i64 %indvars.iv.i
  store ptr null, ptr %arrayidx13.i, align 8
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %16 = load ptr, ptr %m_data.i.i249, align 8, !tbaa !87
  %arrayidx13.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %16, i64 %indvars.iv.next.i
  store ptr null, ptr %arrayidx13.i.1, align 8
  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, 2
  %17 = load ptr, ptr %m_data.i.i249, align 8, !tbaa !87
  %arrayidx13.i.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %17, i64 %indvars.iv.next.i.1
  store ptr null, ptr %arrayidx13.i.2, align 8
  %indvars.iv.next.i.2 = add nsw i64 %indvars.iv.i, 3
  %18 = load ptr, ptr %m_data.i.i249, align 8, !tbaa !87
  %arrayidx13.i.3 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %indvars.iv.next.i.2
  store ptr null, ptr %arrayidx13.i.3, align 8
  %indvars.iv.next.i.3 = add nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, %wide.trip.count.i
  br i1 %exitcond.not.i.3, label %invoke.cont116, label %for.body10.i

invoke.cont116:                                   ; preds = %for.body10.i.prol.loopexit, %for.body10.i, %invoke.cont102
  store i32 %node_count, ptr %m_size.i.i250, align 4, !tbaa !88
  %cmp330 = icmp sgt i32 %node_count, 0
  br i1 %cmp330, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %invoke.cont116
  %ref.tmp.sroa.4.0.mi.sroa_idx.i.i = getelementptr inbounds i8, ptr %ref.tmp143, i64 8
  %mx.i.i320 = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp143, i64 0, i32 1
  %ref.tmp1.sroa.4.0.mx.sroa_idx.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp143, i64 0, i32 1, i32 0, i64 2
  %wide.trip.count = zext i32 %node_count to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %invoke.cont147, %invoke.cont116
  %19 = load ptr, ptr %m_ndbvt, align 8, !tbaa !162
  %tobool.not.i = icmp eq ptr %19, null
  br i1 %tobool.not.i, label %if.else.i313, label %if.then.i

if.then.i:                                        ; preds = %for.cond.cleanup
  %20 = load ptr, ptr %m_collisionShape, align 8, !tbaa !157
  %vtable.i = load ptr, ptr %20, align 8, !tbaa !5
  %vfn.i = getelementptr inbounds ptr, ptr %vtable.i, i64 11
  %21 = load ptr, ptr %vfn.i, align 8
  %call9.i314 = invoke noundef float %21(ptr noundef nonnull align 8 dereferenceable(24) %20)
          to label %call9.i.noexc unwind label %lpad105

call9.i.noexc:                                    ; preds = %if.then.i
  %mx.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %19, i64 0, i32 1
  %22 = load <2 x float>, ptr %19, align 4, !tbaa !137
  %23 = insertelement <2 x float> poison, float %call9.i314, i64 0
  %24 = shufflevector <2 x float> %23, <2 x float> poison, <2 x i32> zeroinitializer
  %25 = fsub <2 x float> %22, %24
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %19, i64 0, i64 2
  %26 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %26, %call9.i314
  %retval.sroa.3.12.vec.insert.i45.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i, i64 0
  store <2 x float> %25, ptr %m_bounds, align 4, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i45.i, ptr %ref.tmp80.sroa.5.0.m_bounds.sroa_idx, align 4, !tbaa.struct !165
  %27 = load <2 x float>, ptr %mx.i.i, align 4, !tbaa !137
  %28 = fadd <2 x float> %24, %27
  %arrayidx11.i50.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %19, i64 0, i32 1, i32 0, i64 2
  %29 = load float, ptr %arrayidx11.i50.i, align 4, !tbaa !137
  %add14.i.i = fadd float %call9.i314, %29
  %retval.sroa.3.12.vec.insert.i54.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i, i64 0
  store <2 x float> %28, ptr %arrayidx94, align 4, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i54.i, ptr %ref.tmp87.sroa.5.0.arrayidx94.sroa_idx, align 4, !tbaa.struct !165
  %m_broadphaseHandle.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 8
  %30 = load ptr, ptr %m_broadphaseHandle.i.i, align 8, !tbaa !166
  %cmp.not.i = icmp eq ptr %30, null
  br i1 %cmp.not.i, label %invoke.cont153, label %if.then21.i

if.then21.i:                                      ; preds = %call9.i.noexc
  %31 = load ptr, ptr %m_worldInfo, align 8, !tbaa !42
  %m_broadphase.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %31, i64 0, i32 4
  %32 = load ptr, ptr %m_broadphase.i, align 8, !tbaa !167
  %m_dispatcher.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %31, i64 0, i32 5
  %33 = load ptr, ptr %m_dispatcher.i, align 8, !tbaa !172
  %vtable28.i = load ptr, ptr %32, align 8, !tbaa !5
  %vfn29.i = getelementptr inbounds ptr, ptr %vtable28.i, i64 4
  %34 = load ptr, ptr %vfn29.i, align 8
  invoke void %34(ptr noundef nonnull align 8 dereferenceable(8) %32, ptr noundef nonnull %30, ptr noundef nonnull align 4 dereferenceable(16) %m_bounds, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx94, ptr noundef %33)
          to label %invoke.cont153 unwind label %lpad105

if.else.i313:                                     ; preds = %for.cond.cleanup
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %m_bounds, i8 0, i64 32, i1 false)
  br label %invoke.cont153

lpad26:                                           ; preds = %invoke.cont25
  %35 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup168

lpad29:                                           ; preds = %invoke.cont28
  %36 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup166

lpad31:                                           ; preds = %invoke.cont30
  %37 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup164

lpad76:                                           ; preds = %invoke.cont95
  %38 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup156

lpad97:                                           ; preds = %invoke.cont98, %invoke.cont96
  %39 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup156

lpad101:                                          ; preds = %invoke.cont99
  %40 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %call100) #37
  br label %ehcleanup156

lpad105:                                          ; preds = %if.then21.i, %if.then.i
  %41 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup156

lpad114:                                          ; preds = %if.then3.i.i.i, %if.then.i.i.i
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup156

for.body:                                         ; preds = %for.body.lr.ph, %invoke.cont147
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %invoke.cont147 ]
  %x.addr.0333 = phi ptr [ %x, %for.body.lr.ph ], [ %x.addr.1, %invoke.cont147 ]
  %m.addr.0332 = phi ptr [ %m, %for.body.lr.ph ], [ %m.addr.1, %invoke.cont147 ]
  %43 = load ptr, ptr %m_data.i.i249, align 8, !tbaa !87
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %43, i64 %indvars.iv
  %44 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %44, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %invoke.cont121, !prof !173

init.check.i:                                     ; preds = %for.body
  %45 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy) #38
  %tobool.not.i316 = icmp eq i32 %45, 0
  br i1 %tobool.not.i316, label %invoke.cont121, label %invoke.cont.i

invoke.cont.i:                                    ; preds = %init.check.i
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy, align 8, !tbaa !174
  %46 = call ptr @llvm.invariant.start.p0(i64 120, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy)
  call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy) #38
  br label %invoke.cont121

invoke.cont121:                                   ; preds = %invoke.cont.i, %init.check.i, %for.body
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(113) %arrayidx.i, ptr noundef nonnull align 8 dereferenceable(113) @_ZZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy, i64 113, i1 false)
  %tobool.not = icmp eq ptr %x.addr.0333, null
  br i1 %tobool.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %invoke.cont121
  %incdec.ptr = getelementptr inbounds %class.btVector3, ptr %x.addr.0333, i64 1
  %47 = load <2 x float>, ptr %x.addr.0333, align 4
  %ref.tmp122.sroa.6.0.x.addr.0.sroa_idx = getelementptr inbounds i8, ptr %x.addr.0333, i64 8
  %48 = load <2 x float>, ptr %ref.tmp122.sroa.6.0.x.addr.0.sroa_idx, align 4
  br label %cond.end

cond.end:                                         ; preds = %invoke.cont121, %cond.true
  %x.addr.1 = phi ptr [ %incdec.ptr, %cond.true ], [ null, %invoke.cont121 ]
  %49 = phi <2 x float> [ %47, %cond.true ], [ zeroinitializer, %invoke.cont121 ]
  %50 = phi <2 x float> [ %48, %cond.true ], [ zeroinitializer, %invoke.cont121 ]
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %43, i64 %indvars.iv, i32 1
  store <2 x float> %49, ptr %m_x, align 8
  %ref.tmp122.sroa.6.0.m_x.sroa_idx = getelementptr inbounds i8, ptr %m_x, i64 8
  store <2 x float> %50, ptr %ref.tmp122.sroa.6.0.m_x.sroa_idx, align 8
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %43, i64 %indvars.iv, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_q, ptr noundef nonnull align 8 dereferenceable(16) %m_x, i64 16, i1 false), !tbaa.struct !163
  %tobool129.not = icmp eq ptr %m.addr.0332, null
  br i1 %tobool129.not, label %invoke.cont146, label %cond.true130

cond.true130:                                     ; preds = %cond.end
  %incdec.ptr131 = getelementptr inbounds float, ptr %m.addr.0332, i64 1
  %51 = load float, ptr %m.addr.0332, align 4, !tbaa !137
  br label %invoke.cont146

invoke.cont146:                                   ; preds = %cond.true130, %cond.end
  %m.addr.1 = phi ptr [ %incdec.ptr131, %cond.true130 ], [ null, %cond.end ]
  %cond = phi float [ %51, %cond.true130 ], [ 1.000000e+00, %cond.end ]
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %43, i64 %indvars.iv, i32 6
  %cmp135 = fcmp ogt float %cond, 0.000000e+00
  %div = fdiv float 1.000000e+00, %cond
  %cond140 = select i1 %cmp135, float %div, float 0.000000e+00
  store float %cond140, ptr %m_im, align 8, !tbaa !175
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %ref.tmp143) #38
  %52 = fadd <2 x float> %49, <float -2.500000e-01, float -2.500000e-01>
  %53 = extractelement <2 x float> %50, i64 0
  %sub14.i.i.i = fadd float %53, -2.500000e-01
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i.i, i64 0
  store <2 x float> %52, ptr %ref.tmp143, align 8, !tbaa.struct !163, !alias.scope !178
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i, ptr %ref.tmp.sroa.4.0.mi.sroa_idx.i.i, align 8, !tbaa.struct !165, !alias.scope !178
  %54 = fadd <2 x float> %49, <float 2.500000e-01, float 2.500000e-01>
  %add14.i.i.i = fadd float %53, 2.500000e-01
  %retval.sroa.3.12.vec.insert.i12.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i.i, i64 0
  store <2 x float> %54, ptr %mx.i.i320, align 8, !tbaa.struct !163, !alias.scope !178
  store <2 x float> %retval.sroa.3.12.vec.insert.i12.i.i, ptr %ref.tmp1.sroa.4.0.mx.sroa_idx.i.i, align 8, !tbaa.struct !165, !alias.scope !178
  %call148 = invoke noundef ptr @_ZN6btDbvt6insertERK12btDbvtAabbMmPv(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt, ptr noundef nonnull align 4 dereferenceable(32) %ref.tmp143, ptr noundef nonnull %arrayidx.i)
          to label %invoke.cont147 unwind label %lpad145

invoke.cont147:                                   ; preds = %invoke.cont146
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Node", ptr %43, i64 %indvars.iv, i32 8
  store ptr %call148, ptr %m_leaf, align 8, !tbaa !183
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %ref.tmp143) #38
  %m_material = getelementptr inbounds %"struct.btSoftBody::Feature", ptr %arrayidx.i, i64 0, i32 1
  store ptr %call, ptr %m_material, align 8, !tbaa !184
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body

lpad145:                                          ; preds = %invoke.cont146
  %55 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %ref.tmp143) #38
  br label %ehcleanup156

invoke.cont153:                                   ; preds = %if.then21.i, %call9.i.noexc, %if.else.i313
  %m_initialWorldTransform = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26
  store float 1.000000e+00, ptr %m_initialWorldTransform, align 8, !tbaa !137
  %arrayidx3.i.i.i.i321 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26, i32 0, i32 0, i64 0, i32 0, i64 1
  %arrayidx3.i6.i.i.i322 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26, i32 0, i32 0, i64 1, i32 0, i64 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i.i321, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i.i322, align 4, !tbaa !137
  %arrayidx5.i7.i.i.i323 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26, i32 0, i32 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i.i324 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26, i32 0, i32 0, i64 2, i32 0, i64 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx5.i7.i.i.i323, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i.i324, align 8, !tbaa !137
  %arrayidx7.i11.i.i.i325 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26, i32 0, i32 0, i64 2, i32 0, i64 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %arrayidx7.i11.i.i.i325, i8 0, i64 20, i1 false)
  ret void

ehcleanup156:                                     ; preds = %lpad97, %lpad101, %lpad145, %lpad114, %lpad105, %lpad76
  %.pn.pn.pn.pn = phi { ptr, i32 } [ %38, %lpad76 ], [ %39, %lpad97 ], [ %40, %lpad101 ], [ %41, %lpad105 ], [ %42, %lpad114 ], [ %55, %lpad145 ]
  invoke void @_ZN20btAlignedObjectArrayIiED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_userIndexMapping)
          to label %ehcleanup158 unwind label %terminate.lpad

ehcleanup158:                                     ; preds = %ehcleanup156
  invoke void @_ZN20btAlignedObjectArrayIbED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_clusterConnectivity)
          to label %ehcleanup160 unwind label %terminate.lpad

ehcleanup160:                                     ; preds = %ehcleanup158
  invoke void @_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_clusters)
          to label %ehcleanup162 unwind label %terminate.lpad

ehcleanup162:                                     ; preds = %ehcleanup160
  invoke void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt)
          to label %ehcleanup164 unwind label %terminate.lpad

ehcleanup164:                                     ; preds = %ehcleanup162, %lpad31
  %.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn, %ehcleanup162 ], [ %37, %lpad31 ]
  invoke void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_fdbvt)
          to label %ehcleanup166 unwind label %terminate.lpad

ehcleanup166:                                     ; preds = %ehcleanup164, %lpad29
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup164 ], [ %36, %lpad29 ]
  invoke void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt)
          to label %ehcleanup168 unwind label %terminate.lpad

ehcleanup168:                                     ; preds = %ehcleanup166, %lpad26
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup166 ], [ %35, %lpad26 ]
  invoke void @_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_materials)
          to label %ehcleanup170 unwind label %terminate.lpad

ehcleanup170:                                     ; preds = %ehcleanup168
  invoke void @_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_joints)
          to label %ehcleanup172 unwind label %terminate.lpad

ehcleanup172:                                     ; preds = %ehcleanup170
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_scontacts)
          to label %ehcleanup174 unwind label %terminate.lpad

ehcleanup174:                                     ; preds = %ehcleanup172
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_rcontacts)
          to label %ehcleanup176 unwind label %terminate.lpad

ehcleanup176:                                     ; preds = %ehcleanup174
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_anchors)
          to label %ehcleanup178 unwind label %terminate.lpad

ehcleanup178:                                     ; preds = %ehcleanup176
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_tetras)
          to label %ehcleanup180 unwind label %terminate.lpad

ehcleanup180:                                     ; preds = %ehcleanup178
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_faces)
          to label %ehcleanup182 unwind label %terminate.lpad

ehcleanup182:                                     ; preds = %ehcleanup180
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_links)
          to label %ehcleanup184 unwind label %terminate.lpad

ehcleanup184:                                     ; preds = %ehcleanup182
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_nodes)
          to label %ehcleanup186 unwind label %terminate.lpad

ehcleanup186:                                     ; preds = %ehcleanup184
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_notes)
          to label %ehcleanup188 unwind label %terminate.lpad

ehcleanup188:                                     ; preds = %ehcleanup186
  invoke void @_ZN10btSoftBody4PoseD2Ev(ptr noundef nonnull align 8 dereferenceable(232) %m_pose)
          to label %ehcleanup190 unwind label %terminate.lpad

ehcleanup190:                                     ; preds = %ehcleanup188
  invoke void @_ZN10btSoftBody6ConfigD2Ev(ptr noundef nonnull align 8 dereferenceable(200) %m_cfg)
          to label %ehcleanup192 unwind label %terminate.lpad

ehcleanup192:                                     ; preds = %ehcleanup190
  invoke void @_ZN20btAlignedObjectArrayIP17btCollisionObjectED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_collisionDisabledObjects)
          to label %ehcleanup194 unwind label %terminate.lpad

ehcleanup194:                                     ; preds = %ehcleanup192
  invoke void @_ZN17btCollisionObjectD2Ev(ptr noundef nonnull align 8 dereferenceable(280) %this)
          to label %eh.resume unwind label %terminate.lpad

eh.resume:                                        ; preds = %ehcleanup194
  resume { ptr, i32 } %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn

terminate.lpad:                                   ; preds = %ehcleanup194, %ehcleanup192, %ehcleanup190, %ehcleanup188, %ehcleanup186, %ehcleanup184, %ehcleanup182, %ehcleanup180, %ehcleanup178, %ehcleanup176, %ehcleanup174, %ehcleanup172, %ehcleanup170, %ehcleanup168, %ehcleanup166, %ehcleanup164, %ehcleanup162, %ehcleanup160, %ehcleanup158, %ehcleanup156
  %56 = landingpad { ptr, i32 }
          catch ptr null
  %57 = extractvalue { ptr, i32 } %56, 0
  call void @__clang_call_terminate(ptr %57) #39
  unreachable
}

declare void @_ZN17btCollisionObjectC2Ev(ptr noundef nonnull align 8 dereferenceable(280)) unnamed_addr #1

declare i32 @__gxx_personality_v0(...)

declare void @_ZN6btDbvtC1Ev(ptr noundef nonnull align 8 dereferenceable(64)) unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody9setSolverENS_14eSolverPresets1_E(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %preset) local_unnamed_addr #4 align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !21
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !18
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !21
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !22
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !23
  %m_data.i.i31 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 5
  %2 = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  %tobool.not.i.i32 = icmp eq ptr %2, null
  %m_ownsMemory.i.i33 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 6
  %3 = load i8, ptr %m_ownsMemory.i.i33, align 8, !range !159
  %tobool2.not.i.i34 = icmp eq i8 %3, 0
  %or.cond.i35 = select i1 %tobool.not.i.i32, i1 true, i1 %tobool2.not.i.i34
  br i1 %or.cond.i35, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit, label %if.then3.i.i36

if.then3.i.i36:                                   ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE5clearEv.exit
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %2)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE5clearEv.exit, %if.then3.i.i36
  %m_size.i.i37 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 2
  store i8 1, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24
  store ptr null, ptr %m_data.i.i31, align 8, !tbaa !27
  store i32 0, ptr %m_size.i.i37, align 4, !tbaa !28
  %m_capacity.i.i39 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 3
  store i32 0, ptr %m_capacity.i.i39, align 8, !tbaa !29
  %m_data.i.i40 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 5
  %4 = load ptr, ptr %m_data.i.i40, align 8, !tbaa !27
  %tobool.not.i.i41 = icmp eq ptr %4, null
  %m_ownsMemory.i.i42 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 6
  %5 = load i8, ptr %m_ownsMemory.i.i42, align 8, !range !159
  %tobool2.not.i.i43 = icmp eq i8 %5, 0
  %or.cond.i44 = select i1 %tobool.not.i.i41, i1 true, i1 %tobool2.not.i.i43
  br i1 %or.cond.i44, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit49, label %if.then3.i.i45

if.then3.i.i45:                                   ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %4)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit49

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit49: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit, %if.then3.i.i45
  %m_size.i.i46 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 2
  store i8 1, ptr %m_ownsMemory.i.i42, align 8, !tbaa !24
  store ptr null, ptr %m_data.i.i40, align 8, !tbaa !27
  store i32 0, ptr %m_size.i.i46, align 4, !tbaa !28
  %m_capacity.i.i48 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 3
  store i32 0, ptr %m_capacity.i.i48, align 8, !tbaa !29
  switch i32 %preset, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb15
  ]

sw.bb:                                            ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit49
  %6 = load i32, ptr %m_size.i.i37, align 4, !tbaa !28
  %7 = load i32, ptr %m_capacity.i.i39, align 8, !tbaa !29
  %cmp.i = icmp eq i32 %6, %7
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit

if.then.i:                                        ; preds = %sw.bb
  %tobool.not.i.i52 = icmp eq i32 %6, 0
  %mul.i.i = shl nsw i32 %6, 1
  %cond.i.i = select i1 %tobool.not.i.i52, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %6, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 2
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i37, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %8 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %6, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %8, 0
  %9 = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i
  %10 = ptrtoint ptr %9 to i64
  %retval.0.i.i.i492 = ptrtoint ptr %retval.0.i.i.i to i64
  %wide.trip.count.i.i.i = zext i32 %8 to i64
  %min.iters.check496 = icmp ult i32 %8, 8
  %11 = sub i64 %retval.0.i.i.i492, %10
  %diff.check493 = icmp ult i64 %11, 32
  %or.cond = select i1 %min.iters.check496, i1 true, i1 %diff.check493
  br i1 %or.cond, label %for.body.i.i.i.preheader, label %vector.ph497

vector.ph497:                                     ; preds = %for.body.lr.ph.i.i.i
  %n.vec499 = and i64 %wide.trip.count.i.i.i, 4294967288
  br label %vector.body502

vector.body502:                                   ; preds = %vector.body502, %vector.ph497
  %index503 = phi i64 [ 0, %vector.ph497 ], [ %index.next506, %vector.body502 ]
  %12 = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %index503
  %13 = getelementptr inbounds i32, ptr %9, i64 %index503
  %wide.load504 = load <4 x i32>, ptr %13, align 4, !tbaa !185
  %14 = getelementptr inbounds i32, ptr %13, i64 4
  %wide.load505 = load <4 x i32>, ptr %14, align 4, !tbaa !185
  store <4 x i32> %wide.load504, ptr %12, align 4, !tbaa !185
  %15 = getelementptr inbounds i32, ptr %12, i64 4
  store <4 x i32> %wide.load505, ptr %15, align 4, !tbaa !185
  %index.next506 = add nuw i64 %index503, 8
  %16 = icmp eq i64 %index.next506, %n.vec499
  br i1 %16, label %middle.block494, label %vector.body502, !llvm.loop !187

middle.block494:                                  ; preds = %vector.body502
  %cmp.n501 = icmp eq i64 %n.vec499, %wide.trip.count.i.i.i
  br i1 %cmp.n501, label %if.then.i11.i.i, label %for.body.i.i.i.preheader

for.body.i.i.i.preheader:                         ; preds = %for.body.lr.ph.i.i.i, %middle.block494
  %indvars.iv.i.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %n.vec499, %middle.block494 ]
  %17 = xor i64 %indvars.iv.i.i.i.ph, -1
  %18 = add nsw i64 %17, %wide.trip.count.i.i.i
  %xtraiter575 = and i64 %wide.trip.count.i.i.i, 3
  %lcmp.mod576.not = icmp eq i64 %xtraiter575, 0
  br i1 %lcmp.mod576.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol

for.body.i.i.i.prol:                              ; preds = %for.body.i.i.i.preheader, %for.body.i.i.i.prol
  %indvars.iv.i.i.i.prol = phi i64 [ %indvars.iv.next.i.i.i.prol, %for.body.i.i.i.prol ], [ %indvars.iv.i.i.i.ph, %for.body.i.i.i.preheader ]
  %prol.iter577 = phi i64 [ %prol.iter577.next, %for.body.i.i.i.prol ], [ 0, %for.body.i.i.i.preheader ]
  %arrayidx.i.i.i.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.prol
  %arrayidx3.i.i.i.prol = getelementptr inbounds i32, ptr %9, i64 %indvars.iv.i.i.i.prol
  %19 = load i32, ptr %arrayidx3.i.i.i.prol, align 4, !tbaa !185
  store i32 %19, ptr %arrayidx.i.i.i.prol, align 4, !tbaa !185
  %indvars.iv.next.i.i.i.prol = add nuw nsw i64 %indvars.iv.i.i.i.prol, 1
  %prol.iter577.next = add i64 %prol.iter577, 1
  %prol.iter577.cmp.not = icmp eq i64 %prol.iter577.next, %xtraiter575
  br i1 %prol.iter577.cmp.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol, !llvm.loop !190

for.body.i.i.i.prol.loopexit:                     ; preds = %for.body.i.i.i.prol, %for.body.i.i.i.preheader
  %indvars.iv.i.i.i.unr = phi i64 [ %indvars.iv.i.i.i.ph, %for.body.i.i.i.preheader ], [ %indvars.iv.next.i.i.i.prol, %for.body.i.i.i.prol ]
  %20 = icmp ult i64 %18, 3
  br i1 %20, label %if.then.i11.i.i, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i
  %indvars.iv.i.i.i = phi i64 [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ], [ %indvars.iv.i.i.i.unr, %for.body.i.i.i.prol.loopexit ]
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %arrayidx3.i.i.i = getelementptr inbounds i32, ptr %9, i64 %indvars.iv.i.i.i
  %21 = load i32, ptr %arrayidx3.i.i.i, align 4, !tbaa !185
  store i32 %21, ptr %arrayidx.i.i.i, align 4, !tbaa !185
  %indvars.iv.next.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %arrayidx3.i.i.i.1 = getelementptr inbounds i32, ptr %9, i64 %indvars.iv.next.i.i.i
  %22 = load i32, ptr %arrayidx3.i.i.i.1, align 4, !tbaa !185
  store i32 %22, ptr %arrayidx.i.i.i.1, align 4, !tbaa !185
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %arrayidx3.i.i.i.2 = getelementptr inbounds i32, ptr %9, i64 %indvars.iv.next.i.i.i.1
  %23 = load i32, ptr %arrayidx3.i.i.i.2, align 4, !tbaa !185
  store i32 %23, ptr %arrayidx.i.i.i.2, align 4, !tbaa !185
  %indvars.iv.next.i.i.i.2 = add nuw nsw i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %arrayidx3.i.i.i.3 = getelementptr inbounds i32, ptr %9, i64 %indvars.iv.next.i.i.i.2
  %24 = load i32, ptr %arrayidx3.i.i.i.3, align 4, !tbaa !185
  store i32 %24, ptr %arrayidx.i.i.i.3, align 4, !tbaa !185
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %exitcond.not.i.i.i.3 = icmp eq i64 %indvars.iv.next.i.i.i.3, %wide.trip.count.i.i.i
  br i1 %exitcond.not.i.i.i.3, label %if.then.i11.i.i, label %for.body.i.i.i, !llvm.loop !191

_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i
  %tobool.not.i10.i.i = icmp eq ptr %9, null
  %25 = load i8, ptr %m_ownsMemory.i.i33, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %25, 0
  %or.cond.i53 = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i53, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then.i11.i.i:                                  ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i, %middle.block494
  %.old.i = load i8, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24, !range !159, !noundef !192
  %tobool2.not.i.i.old.i = icmp eq i8 %.old.i, 0
  br i1 %tobool2.not.i.i.old.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %if.then.i11.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %9)
  %.pre7.pre.pre.i = load i32, ptr %m_size.i.i37, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %if.then.i11.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i
  %.pre7.i = phi i32 [ %8, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i ], [ %.pre7.pre.pre.i, %if.then3.i.i.i ], [ %8, %if.then.i11.i.i ]
  store i8 1, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24
  store ptr %retval.0.i.i.i, ptr %m_data.i.i31, align 8, !tbaa !27
  store i32 %cond.i.i, ptr %m_capacity.i.i39, align 8, !tbaa !29
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit: ; preds = %sw.bb, %if.then.i, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i
  %26 = phi i32 [ %cond.i.i, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i ], [ %6, %if.then.i ], [ %7, %sw.bb ]
  %27 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i ], [ %6, %if.then.i ], [ %6, %sw.bb ]
  %28 = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  %idxprom.i = sext i32 %27 to i64
  %arrayidx.i = getelementptr inbounds i32, ptr %28, i64 %idxprom.i
  store i32 1, ptr %arrayidx.i, align 4, !tbaa !185
  %inc.i = add nsw i32 %27, 1
  store i32 %inc.i, ptr %m_size.i.i37, align 4, !tbaa !28
  %cmp.i57 = icmp eq i32 %inc.i, %26
  br i1 %cmp.i57, label %if.then.i62, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit100

if.then.i62:                                      ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit
  %tobool.not.i.i58 = icmp eq i32 %26, 0
  %mul.i.i59 = shl nsw i32 %26, 1
  %cond.i.i60 = select i1 %tobool.not.i.i58, i32 1, i32 %mul.i.i59
  %cmp.i.i61 = icmp slt i32 %26, %cond.i.i60
  br i1 %cmp.i.i61, label %if.then.i.i64, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit100

if.then.i.i64:                                    ; preds = %if.then.i62
  %tobool.not.i.i.i63 = icmp eq i32 %cond.i.i60, 0
  br i1 %tobool.not.i.i.i63, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i73, label %if.then.i.i.i69

if.then.i.i.i69:                                  ; preds = %if.then.i.i64
  %conv.i.i.i.i65 = sext i32 %cond.i.i60 to i64
  %mul.i.i.i.i66 = shl nsw i64 %conv.i.i.i.i65, 2
  %call.i.i.i.i67 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i66, i32 noundef 16)
  %.pre.i68 = load i32, ptr %m_size.i.i37, align 4, !tbaa !28
  %.pre420 = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i73

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i73: ; preds = %if.then.i.i.i69, %if.then.i.i64
  %29 = phi ptr [ %.pre420, %if.then.i.i.i69 ], [ %28, %if.then.i.i64 ]
  %30 = phi i32 [ %.pre.i68, %if.then.i.i.i69 ], [ %26, %if.then.i.i64 ]
  %retval.0.i.i.i70 = phi ptr [ %call.i.i.i.i67, %if.then.i.i.i69 ], [ null, %if.then.i.i64 ]
  %cmp7.i.i.i71 = icmp sgt i32 %30, 0
  br i1 %cmp7.i.i.i71, label %for.body.lr.ph.i.i.i75, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i86

for.body.lr.ph.i.i.i75:                           ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i73
  %31 = ptrtoint ptr %29 to i64
  %retval.0.i.i.i70508 = ptrtoint ptr %retval.0.i.i.i70 to i64
  %wide.trip.count.i.i.i74 = zext i32 %30 to i64
  %min.iters.check512 = icmp ult i32 %30, 8
  %32 = sub i64 %retval.0.i.i.i70508, %31
  %diff.check509 = icmp ult i64 %32, 32
  %or.cond555 = select i1 %min.iters.check512, i1 true, i1 %diff.check509
  br i1 %or.cond555, label %for.body.i.i.i81.preheader, label %vector.ph513

vector.ph513:                                     ; preds = %for.body.lr.ph.i.i.i75
  %n.vec515 = and i64 %wide.trip.count.i.i.i74, 4294967288
  br label %vector.body518

vector.body518:                                   ; preds = %vector.body518, %vector.ph513
  %index519 = phi i64 [ 0, %vector.ph513 ], [ %index.next522, %vector.body518 ]
  %33 = getelementptr inbounds i32, ptr %retval.0.i.i.i70, i64 %index519
  %34 = getelementptr inbounds i32, ptr %29, i64 %index519
  %wide.load520 = load <4 x i32>, ptr %34, align 4, !tbaa !185
  %35 = getelementptr inbounds i32, ptr %34, i64 4
  %wide.load521 = load <4 x i32>, ptr %35, align 4, !tbaa !185
  store <4 x i32> %wide.load520, ptr %33, align 4, !tbaa !185
  %36 = getelementptr inbounds i32, ptr %33, i64 4
  store <4 x i32> %wide.load521, ptr %36, align 4, !tbaa !185
  %index.next522 = add nuw i64 %index519, 8
  %37 = icmp eq i64 %index.next522, %n.vec515
  br i1 %37, label %middle.block510, label %vector.body518, !llvm.loop !193

middle.block510:                                  ; preds = %vector.body518
  %cmp.n517 = icmp eq i64 %n.vec515, %wide.trip.count.i.i.i74
  br i1 %cmp.n517, label %if.then.i11.i.i90, label %for.body.i.i.i81.preheader

for.body.i.i.i81.preheader:                       ; preds = %for.body.lr.ph.i.i.i75, %middle.block510
  %indvars.iv.i.i.i76.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i75 ], [ %n.vec515, %middle.block510 ]
  %38 = xor i64 %indvars.iv.i.i.i76.ph, -1
  %39 = add nsw i64 %38, %wide.trip.count.i.i.i74
  %xtraiter578 = and i64 %wide.trip.count.i.i.i74, 3
  %lcmp.mod579.not = icmp eq i64 %xtraiter578, 0
  br i1 %lcmp.mod579.not, label %for.body.i.i.i81.prol.loopexit, label %for.body.i.i.i81.prol

for.body.i.i.i81.prol:                            ; preds = %for.body.i.i.i81.preheader, %for.body.i.i.i81.prol
  %indvars.iv.i.i.i76.prol = phi i64 [ %indvars.iv.next.i.i.i79.prol, %for.body.i.i.i81.prol ], [ %indvars.iv.i.i.i76.ph, %for.body.i.i.i81.preheader ]
  %prol.iter580 = phi i64 [ %prol.iter580.next, %for.body.i.i.i81.prol ], [ 0, %for.body.i.i.i81.preheader ]
  %arrayidx.i.i.i77.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i70, i64 %indvars.iv.i.i.i76.prol
  %arrayidx3.i.i.i78.prol = getelementptr inbounds i32, ptr %29, i64 %indvars.iv.i.i.i76.prol
  %40 = load i32, ptr %arrayidx3.i.i.i78.prol, align 4, !tbaa !185
  store i32 %40, ptr %arrayidx.i.i.i77.prol, align 4, !tbaa !185
  %indvars.iv.next.i.i.i79.prol = add nuw nsw i64 %indvars.iv.i.i.i76.prol, 1
  %prol.iter580.next = add i64 %prol.iter580, 1
  %prol.iter580.cmp.not = icmp eq i64 %prol.iter580.next, %xtraiter578
  br i1 %prol.iter580.cmp.not, label %for.body.i.i.i81.prol.loopexit, label %for.body.i.i.i81.prol, !llvm.loop !194

for.body.i.i.i81.prol.loopexit:                   ; preds = %for.body.i.i.i81.prol, %for.body.i.i.i81.preheader
  %indvars.iv.i.i.i76.unr = phi i64 [ %indvars.iv.i.i.i76.ph, %for.body.i.i.i81.preheader ], [ %indvars.iv.next.i.i.i79.prol, %for.body.i.i.i81.prol ]
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %if.then.i11.i.i90, label %for.body.i.i.i81

for.body.i.i.i81:                                 ; preds = %for.body.i.i.i81.prol.loopexit, %for.body.i.i.i81
  %indvars.iv.i.i.i76 = phi i64 [ %indvars.iv.next.i.i.i79.3, %for.body.i.i.i81 ], [ %indvars.iv.i.i.i76.unr, %for.body.i.i.i81.prol.loopexit ]
  %arrayidx.i.i.i77 = getelementptr inbounds i32, ptr %retval.0.i.i.i70, i64 %indvars.iv.i.i.i76
  %arrayidx3.i.i.i78 = getelementptr inbounds i32, ptr %29, i64 %indvars.iv.i.i.i76
  %42 = load i32, ptr %arrayidx3.i.i.i78, align 4, !tbaa !185
  store i32 %42, ptr %arrayidx.i.i.i77, align 4, !tbaa !185
  %indvars.iv.next.i.i.i79 = add nuw nsw i64 %indvars.iv.i.i.i76, 1
  %arrayidx.i.i.i77.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i70, i64 %indvars.iv.next.i.i.i79
  %arrayidx3.i.i.i78.1 = getelementptr inbounds i32, ptr %29, i64 %indvars.iv.next.i.i.i79
  %43 = load i32, ptr %arrayidx3.i.i.i78.1, align 4, !tbaa !185
  store i32 %43, ptr %arrayidx.i.i.i77.1, align 4, !tbaa !185
  %indvars.iv.next.i.i.i79.1 = add nuw nsw i64 %indvars.iv.i.i.i76, 2
  %arrayidx.i.i.i77.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i70, i64 %indvars.iv.next.i.i.i79.1
  %arrayidx3.i.i.i78.2 = getelementptr inbounds i32, ptr %29, i64 %indvars.iv.next.i.i.i79.1
  %44 = load i32, ptr %arrayidx3.i.i.i78.2, align 4, !tbaa !185
  store i32 %44, ptr %arrayidx.i.i.i77.2, align 4, !tbaa !185
  %indvars.iv.next.i.i.i79.2 = add nuw nsw i64 %indvars.iv.i.i.i76, 3
  %arrayidx.i.i.i77.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i70, i64 %indvars.iv.next.i.i.i79.2
  %arrayidx3.i.i.i78.3 = getelementptr inbounds i32, ptr %29, i64 %indvars.iv.next.i.i.i79.2
  %45 = load i32, ptr %arrayidx3.i.i.i78.3, align 4, !tbaa !185
  store i32 %45, ptr %arrayidx.i.i.i77.3, align 4, !tbaa !185
  %indvars.iv.next.i.i.i79.3 = add nuw nsw i64 %indvars.iv.i.i.i76, 4
  %exitcond.not.i.i.i80.3 = icmp eq i64 %indvars.iv.next.i.i.i79.3, %wide.trip.count.i.i.i74
  br i1 %exitcond.not.i.i.i80.3, label %if.then.i11.i.i90, label %for.body.i.i.i81, !llvm.loop !195

_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i86: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i73
  %tobool.not.i10.i.i82 = icmp eq ptr %29, null
  %46 = load i8, ptr %m_ownsMemory.i.i33, align 8, !range !159
  %tobool2.not.i.i.i84 = icmp eq i8 %46, 0
  %or.cond.i85 = select i1 %tobool.not.i10.i.i82, i1 true, i1 %tobool2.not.i.i.i84
  br i1 %or.cond.i85, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i95, label %if.then3.i.i.i92

if.then.i11.i.i90:                                ; preds = %for.body.i.i.i81.prol.loopexit, %for.body.i.i.i81, %middle.block510
  %.old.i88 = load i8, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24, !range !159, !noundef !192
  %tobool2.not.i.i.old.i89 = icmp eq i8 %.old.i88, 0
  br i1 %tobool2.not.i.i.old.i89, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i95, label %if.then3.i.i.i92

if.then3.i.i.i92:                                 ; preds = %if.then.i11.i.i90, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i86
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %29)
  %.pre7.pre.pre.i91 = load i32, ptr %m_size.i.i37, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i95

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i95: ; preds = %if.then3.i.i.i92, %if.then.i11.i.i90, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i86
  %.pre7.i93 = phi i32 [ %30, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i86 ], [ %.pre7.pre.pre.i91, %if.then3.i.i.i92 ], [ %30, %if.then.i11.i.i90 ]
  store i8 1, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24
  store ptr %retval.0.i.i.i70, ptr %m_data.i.i31, align 8, !tbaa !27
  store i32 %cond.i.i60, ptr %m_capacity.i.i39, align 8, !tbaa !29
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit100

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit100: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit, %if.then.i62, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i95
  %47 = phi i32 [ %cond.i.i60, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i95 ], [ %26, %if.then.i62 ], [ %26, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit ]
  %48 = phi ptr [ %retval.0.i.i.i70, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i95 ], [ %28, %if.then.i62 ], [ %28, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit ]
  %49 = phi i32 [ %.pre7.i93, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i95 ], [ %26, %if.then.i62 ], [ %inc.i, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit ]
  %idxprom.i97 = sext i32 %49 to i64
  %arrayidx.i98 = getelementptr inbounds i32, ptr %48, i64 %idxprom.i97
  store i32 2, ptr %arrayidx.i98, align 4, !tbaa !185
  %inc.i99 = add nsw i32 %49, 1
  store i32 %inc.i99, ptr %m_size.i.i37, align 4, !tbaa !28
  %cmp.i103 = icmp eq i32 %inc.i99, %47
  br i1 %cmp.i103, label %if.then.i108, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit146

if.then.i108:                                     ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit100
  %tobool.not.i.i104 = icmp eq i32 %47, 0
  %mul.i.i105 = shl nsw i32 %47, 1
  %cond.i.i106 = select i1 %tobool.not.i.i104, i32 1, i32 %mul.i.i105
  %cmp.i.i107 = icmp slt i32 %47, %cond.i.i106
  br i1 %cmp.i.i107, label %if.then.i.i110, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit146

if.then.i.i110:                                   ; preds = %if.then.i108
  %tobool.not.i.i.i109 = icmp eq i32 %cond.i.i106, 0
  br i1 %tobool.not.i.i.i109, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i119, label %if.then.i.i.i115

if.then.i.i.i115:                                 ; preds = %if.then.i.i110
  %conv.i.i.i.i111 = sext i32 %cond.i.i106 to i64
  %mul.i.i.i.i112 = shl nsw i64 %conv.i.i.i.i111, 2
  %call.i.i.i.i113 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i112, i32 noundef 16)
  %.pre.i114 = load i32, ptr %m_size.i.i37, align 4, !tbaa !28
  %.pre421 = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i119

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i119: ; preds = %if.then.i.i.i115, %if.then.i.i110
  %50 = phi ptr [ %.pre421, %if.then.i.i.i115 ], [ %48, %if.then.i.i110 ]
  %51 = phi i32 [ %.pre.i114, %if.then.i.i.i115 ], [ %47, %if.then.i.i110 ]
  %retval.0.i.i.i116 = phi ptr [ %call.i.i.i.i113, %if.then.i.i.i115 ], [ null, %if.then.i.i110 ]
  %cmp7.i.i.i117 = icmp sgt i32 %51, 0
  br i1 %cmp7.i.i.i117, label %for.body.lr.ph.i.i.i121, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i132

for.body.lr.ph.i.i.i121:                          ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i119
  %52 = ptrtoint ptr %50 to i64
  %retval.0.i.i.i116524 = ptrtoint ptr %retval.0.i.i.i116 to i64
  %wide.trip.count.i.i.i120 = zext i32 %51 to i64
  %min.iters.check528 = icmp ult i32 %51, 8
  %53 = sub i64 %retval.0.i.i.i116524, %52
  %diff.check525 = icmp ult i64 %53, 32
  %or.cond556 = select i1 %min.iters.check528, i1 true, i1 %diff.check525
  br i1 %or.cond556, label %for.body.i.i.i127.preheader, label %vector.ph529

vector.ph529:                                     ; preds = %for.body.lr.ph.i.i.i121
  %n.vec531 = and i64 %wide.trip.count.i.i.i120, 4294967288
  br label %vector.body534

vector.body534:                                   ; preds = %vector.body534, %vector.ph529
  %index535 = phi i64 [ 0, %vector.ph529 ], [ %index.next538, %vector.body534 ]
  %54 = getelementptr inbounds i32, ptr %retval.0.i.i.i116, i64 %index535
  %55 = getelementptr inbounds i32, ptr %50, i64 %index535
  %wide.load536 = load <4 x i32>, ptr %55, align 4, !tbaa !185
  %56 = getelementptr inbounds i32, ptr %55, i64 4
  %wide.load537 = load <4 x i32>, ptr %56, align 4, !tbaa !185
  store <4 x i32> %wide.load536, ptr %54, align 4, !tbaa !185
  %57 = getelementptr inbounds i32, ptr %54, i64 4
  store <4 x i32> %wide.load537, ptr %57, align 4, !tbaa !185
  %index.next538 = add nuw i64 %index535, 8
  %58 = icmp eq i64 %index.next538, %n.vec531
  br i1 %58, label %middle.block526, label %vector.body534, !llvm.loop !196

middle.block526:                                  ; preds = %vector.body534
  %cmp.n533 = icmp eq i64 %n.vec531, %wide.trip.count.i.i.i120
  br i1 %cmp.n533, label %if.then.i11.i.i136, label %for.body.i.i.i127.preheader

for.body.i.i.i127.preheader:                      ; preds = %for.body.lr.ph.i.i.i121, %middle.block526
  %indvars.iv.i.i.i122.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i121 ], [ %n.vec531, %middle.block526 ]
  %59 = xor i64 %indvars.iv.i.i.i122.ph, -1
  %60 = add nsw i64 %59, %wide.trip.count.i.i.i120
  %xtraiter581 = and i64 %wide.trip.count.i.i.i120, 3
  %lcmp.mod582.not = icmp eq i64 %xtraiter581, 0
  br i1 %lcmp.mod582.not, label %for.body.i.i.i127.prol.loopexit, label %for.body.i.i.i127.prol

for.body.i.i.i127.prol:                           ; preds = %for.body.i.i.i127.preheader, %for.body.i.i.i127.prol
  %indvars.iv.i.i.i122.prol = phi i64 [ %indvars.iv.next.i.i.i125.prol, %for.body.i.i.i127.prol ], [ %indvars.iv.i.i.i122.ph, %for.body.i.i.i127.preheader ]
  %prol.iter583 = phi i64 [ %prol.iter583.next, %for.body.i.i.i127.prol ], [ 0, %for.body.i.i.i127.preheader ]
  %arrayidx.i.i.i123.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i116, i64 %indvars.iv.i.i.i122.prol
  %arrayidx3.i.i.i124.prol = getelementptr inbounds i32, ptr %50, i64 %indvars.iv.i.i.i122.prol
  %61 = load i32, ptr %arrayidx3.i.i.i124.prol, align 4, !tbaa !185
  store i32 %61, ptr %arrayidx.i.i.i123.prol, align 4, !tbaa !185
  %indvars.iv.next.i.i.i125.prol = add nuw nsw i64 %indvars.iv.i.i.i122.prol, 1
  %prol.iter583.next = add i64 %prol.iter583, 1
  %prol.iter583.cmp.not = icmp eq i64 %prol.iter583.next, %xtraiter581
  br i1 %prol.iter583.cmp.not, label %for.body.i.i.i127.prol.loopexit, label %for.body.i.i.i127.prol, !llvm.loop !197

for.body.i.i.i127.prol.loopexit:                  ; preds = %for.body.i.i.i127.prol, %for.body.i.i.i127.preheader
  %indvars.iv.i.i.i122.unr = phi i64 [ %indvars.iv.i.i.i122.ph, %for.body.i.i.i127.preheader ], [ %indvars.iv.next.i.i.i125.prol, %for.body.i.i.i127.prol ]
  %62 = icmp ult i64 %60, 3
  br i1 %62, label %if.then.i11.i.i136, label %for.body.i.i.i127

for.body.i.i.i127:                                ; preds = %for.body.i.i.i127.prol.loopexit, %for.body.i.i.i127
  %indvars.iv.i.i.i122 = phi i64 [ %indvars.iv.next.i.i.i125.3, %for.body.i.i.i127 ], [ %indvars.iv.i.i.i122.unr, %for.body.i.i.i127.prol.loopexit ]
  %arrayidx.i.i.i123 = getelementptr inbounds i32, ptr %retval.0.i.i.i116, i64 %indvars.iv.i.i.i122
  %arrayidx3.i.i.i124 = getelementptr inbounds i32, ptr %50, i64 %indvars.iv.i.i.i122
  %63 = load i32, ptr %arrayidx3.i.i.i124, align 4, !tbaa !185
  store i32 %63, ptr %arrayidx.i.i.i123, align 4, !tbaa !185
  %indvars.iv.next.i.i.i125 = add nuw nsw i64 %indvars.iv.i.i.i122, 1
  %arrayidx.i.i.i123.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i116, i64 %indvars.iv.next.i.i.i125
  %arrayidx3.i.i.i124.1 = getelementptr inbounds i32, ptr %50, i64 %indvars.iv.next.i.i.i125
  %64 = load i32, ptr %arrayidx3.i.i.i124.1, align 4, !tbaa !185
  store i32 %64, ptr %arrayidx.i.i.i123.1, align 4, !tbaa !185
  %indvars.iv.next.i.i.i125.1 = add nuw nsw i64 %indvars.iv.i.i.i122, 2
  %arrayidx.i.i.i123.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i116, i64 %indvars.iv.next.i.i.i125.1
  %arrayidx3.i.i.i124.2 = getelementptr inbounds i32, ptr %50, i64 %indvars.iv.next.i.i.i125.1
  %65 = load i32, ptr %arrayidx3.i.i.i124.2, align 4, !tbaa !185
  store i32 %65, ptr %arrayidx.i.i.i123.2, align 4, !tbaa !185
  %indvars.iv.next.i.i.i125.2 = add nuw nsw i64 %indvars.iv.i.i.i122, 3
  %arrayidx.i.i.i123.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i116, i64 %indvars.iv.next.i.i.i125.2
  %arrayidx3.i.i.i124.3 = getelementptr inbounds i32, ptr %50, i64 %indvars.iv.next.i.i.i125.2
  %66 = load i32, ptr %arrayidx3.i.i.i124.3, align 4, !tbaa !185
  store i32 %66, ptr %arrayidx.i.i.i123.3, align 4, !tbaa !185
  %indvars.iv.next.i.i.i125.3 = add nuw nsw i64 %indvars.iv.i.i.i122, 4
  %exitcond.not.i.i.i126.3 = icmp eq i64 %indvars.iv.next.i.i.i125.3, %wide.trip.count.i.i.i120
  br i1 %exitcond.not.i.i.i126.3, label %if.then.i11.i.i136, label %for.body.i.i.i127, !llvm.loop !198

_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i132: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i119
  %tobool.not.i10.i.i128 = icmp eq ptr %50, null
  %67 = load i8, ptr %m_ownsMemory.i.i33, align 8, !range !159
  %tobool2.not.i.i.i130 = icmp eq i8 %67, 0
  %or.cond.i131 = select i1 %tobool.not.i10.i.i128, i1 true, i1 %tobool2.not.i.i.i130
  br i1 %or.cond.i131, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i141, label %if.then3.i.i.i138

if.then.i11.i.i136:                               ; preds = %for.body.i.i.i127.prol.loopexit, %for.body.i.i.i127, %middle.block526
  %.old.i134 = load i8, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24, !range !159, !noundef !192
  %tobool2.not.i.i.old.i135 = icmp eq i8 %.old.i134, 0
  br i1 %tobool2.not.i.i.old.i135, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i141, label %if.then3.i.i.i138

if.then3.i.i.i138:                                ; preds = %if.then.i11.i.i136, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i132
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %50)
  %.pre7.pre.pre.i137 = load i32, ptr %m_size.i.i37, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i141

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i141: ; preds = %if.then3.i.i.i138, %if.then.i11.i.i136, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i132
  %.pre7.i139 = phi i32 [ %51, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i132 ], [ %.pre7.pre.pre.i137, %if.then3.i.i.i138 ], [ %51, %if.then.i11.i.i136 ]
  store i8 1, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24
  store ptr %retval.0.i.i.i116, ptr %m_data.i.i31, align 8, !tbaa !27
  store i32 %cond.i.i106, ptr %m_capacity.i.i39, align 8, !tbaa !29
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit146

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit146: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit100, %if.then.i108, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i141
  %68 = phi i32 [ %cond.i.i106, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i141 ], [ %47, %if.then.i108 ], [ %47, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit100 ]
  %69 = phi ptr [ %retval.0.i.i.i116, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i141 ], [ %48, %if.then.i108 ], [ %48, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit100 ]
  %70 = phi i32 [ %.pre7.i139, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i141 ], [ %47, %if.then.i108 ], [ %inc.i99, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit100 ]
  %idxprom.i143 = sext i32 %70 to i64
  %arrayidx.i144 = getelementptr inbounds i32, ptr %69, i64 %idxprom.i143
  store i32 3, ptr %arrayidx.i144, align 4, !tbaa !185
  %inc.i145 = add nsw i32 %70, 1
  store i32 %inc.i145, ptr %m_size.i.i37, align 4, !tbaa !28
  %cmp.i149 = icmp eq i32 %inc.i145, %68
  br i1 %cmp.i149, label %if.then.i154, label %sw.epilog.sink.split

if.then.i154:                                     ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit146
  %tobool.not.i.i150 = icmp eq i32 %68, 0
  %mul.i.i151 = shl nsw i32 %68, 1
  %cond.i.i152 = select i1 %tobool.not.i.i150, i32 1, i32 %mul.i.i151
  %cmp.i.i153 = icmp slt i32 %68, %cond.i.i152
  br i1 %cmp.i.i153, label %if.then.i.i156, label %sw.epilog.sink.split

if.then.i.i156:                                   ; preds = %if.then.i154
  %tobool.not.i.i.i155 = icmp eq i32 %cond.i.i152, 0
  br i1 %tobool.not.i.i.i155, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i165, label %if.then.i.i.i161

if.then.i.i.i161:                                 ; preds = %if.then.i.i156
  %conv.i.i.i.i157 = sext i32 %cond.i.i152 to i64
  %mul.i.i.i.i158 = shl nsw i64 %conv.i.i.i.i157, 2
  %call.i.i.i.i159 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i158, i32 noundef 16)
  %.pre.i160 = load i32, ptr %m_size.i.i37, align 4, !tbaa !28
  %.pre422 = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i165

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i165: ; preds = %if.then.i.i.i161, %if.then.i.i156
  %71 = phi ptr [ %.pre422, %if.then.i.i.i161 ], [ %69, %if.then.i.i156 ]
  %72 = phi i32 [ %.pre.i160, %if.then.i.i.i161 ], [ %68, %if.then.i.i156 ]
  %retval.0.i.i.i162 = phi ptr [ %call.i.i.i.i159, %if.then.i.i.i161 ], [ null, %if.then.i.i156 ]
  %cmp7.i.i.i163 = icmp sgt i32 %72, 0
  br i1 %cmp7.i.i.i163, label %for.body.lr.ph.i.i.i167, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i178

for.body.lr.ph.i.i.i167:                          ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i165
  %73 = ptrtoint ptr %71 to i64
  %retval.0.i.i.i162540 = ptrtoint ptr %retval.0.i.i.i162 to i64
  %wide.trip.count.i.i.i166 = zext i32 %72 to i64
  %min.iters.check544 = icmp ult i32 %72, 8
  %74 = sub i64 %retval.0.i.i.i162540, %73
  %diff.check541 = icmp ult i64 %74, 32
  %or.cond557 = select i1 %min.iters.check544, i1 true, i1 %diff.check541
  br i1 %or.cond557, label %for.body.i.i.i173.preheader, label %vector.ph545

vector.ph545:                                     ; preds = %for.body.lr.ph.i.i.i167
  %n.vec547 = and i64 %wide.trip.count.i.i.i166, 4294967288
  br label %vector.body550

vector.body550:                                   ; preds = %vector.body550, %vector.ph545
  %index551 = phi i64 [ 0, %vector.ph545 ], [ %index.next554, %vector.body550 ]
  %75 = getelementptr inbounds i32, ptr %retval.0.i.i.i162, i64 %index551
  %76 = getelementptr inbounds i32, ptr %71, i64 %index551
  %wide.load552 = load <4 x i32>, ptr %76, align 4, !tbaa !185
  %77 = getelementptr inbounds i32, ptr %76, i64 4
  %wide.load553 = load <4 x i32>, ptr %77, align 4, !tbaa !185
  store <4 x i32> %wide.load552, ptr %75, align 4, !tbaa !185
  %78 = getelementptr inbounds i32, ptr %75, i64 4
  store <4 x i32> %wide.load553, ptr %78, align 4, !tbaa !185
  %index.next554 = add nuw i64 %index551, 8
  %79 = icmp eq i64 %index.next554, %n.vec547
  br i1 %79, label %middle.block542, label %vector.body550, !llvm.loop !199

middle.block542:                                  ; preds = %vector.body550
  %cmp.n549 = icmp eq i64 %n.vec547, %wide.trip.count.i.i.i166
  br i1 %cmp.n549, label %if.then.i11.i.i182, label %for.body.i.i.i173.preheader

for.body.i.i.i173.preheader:                      ; preds = %for.body.lr.ph.i.i.i167, %middle.block542
  %indvars.iv.i.i.i168.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i167 ], [ %n.vec547, %middle.block542 ]
  %80 = xor i64 %indvars.iv.i.i.i168.ph, -1
  %81 = add nsw i64 %80, %wide.trip.count.i.i.i166
  %xtraiter584 = and i64 %wide.trip.count.i.i.i166, 3
  %lcmp.mod585.not = icmp eq i64 %xtraiter584, 0
  br i1 %lcmp.mod585.not, label %for.body.i.i.i173.prol.loopexit, label %for.body.i.i.i173.prol

for.body.i.i.i173.prol:                           ; preds = %for.body.i.i.i173.preheader, %for.body.i.i.i173.prol
  %indvars.iv.i.i.i168.prol = phi i64 [ %indvars.iv.next.i.i.i171.prol, %for.body.i.i.i173.prol ], [ %indvars.iv.i.i.i168.ph, %for.body.i.i.i173.preheader ]
  %prol.iter586 = phi i64 [ %prol.iter586.next, %for.body.i.i.i173.prol ], [ 0, %for.body.i.i.i173.preheader ]
  %arrayidx.i.i.i169.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i162, i64 %indvars.iv.i.i.i168.prol
  %arrayidx3.i.i.i170.prol = getelementptr inbounds i32, ptr %71, i64 %indvars.iv.i.i.i168.prol
  %82 = load i32, ptr %arrayidx3.i.i.i170.prol, align 4, !tbaa !185
  store i32 %82, ptr %arrayidx.i.i.i169.prol, align 4, !tbaa !185
  %indvars.iv.next.i.i.i171.prol = add nuw nsw i64 %indvars.iv.i.i.i168.prol, 1
  %prol.iter586.next = add i64 %prol.iter586, 1
  %prol.iter586.cmp.not = icmp eq i64 %prol.iter586.next, %xtraiter584
  br i1 %prol.iter586.cmp.not, label %for.body.i.i.i173.prol.loopexit, label %for.body.i.i.i173.prol, !llvm.loop !200

for.body.i.i.i173.prol.loopexit:                  ; preds = %for.body.i.i.i173.prol, %for.body.i.i.i173.preheader
  %indvars.iv.i.i.i168.unr = phi i64 [ %indvars.iv.i.i.i168.ph, %for.body.i.i.i173.preheader ], [ %indvars.iv.next.i.i.i171.prol, %for.body.i.i.i173.prol ]
  %83 = icmp ult i64 %81, 3
  br i1 %83, label %if.then.i11.i.i182, label %for.body.i.i.i173

for.body.i.i.i173:                                ; preds = %for.body.i.i.i173.prol.loopexit, %for.body.i.i.i173
  %indvars.iv.i.i.i168 = phi i64 [ %indvars.iv.next.i.i.i171.3, %for.body.i.i.i173 ], [ %indvars.iv.i.i.i168.unr, %for.body.i.i.i173.prol.loopexit ]
  %arrayidx.i.i.i169 = getelementptr inbounds i32, ptr %retval.0.i.i.i162, i64 %indvars.iv.i.i.i168
  %arrayidx3.i.i.i170 = getelementptr inbounds i32, ptr %71, i64 %indvars.iv.i.i.i168
  %84 = load i32, ptr %arrayidx3.i.i.i170, align 4, !tbaa !185
  store i32 %84, ptr %arrayidx.i.i.i169, align 4, !tbaa !185
  %indvars.iv.next.i.i.i171 = add nuw nsw i64 %indvars.iv.i.i.i168, 1
  %arrayidx.i.i.i169.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i162, i64 %indvars.iv.next.i.i.i171
  %arrayidx3.i.i.i170.1 = getelementptr inbounds i32, ptr %71, i64 %indvars.iv.next.i.i.i171
  %85 = load i32, ptr %arrayidx3.i.i.i170.1, align 4, !tbaa !185
  store i32 %85, ptr %arrayidx.i.i.i169.1, align 4, !tbaa !185
  %indvars.iv.next.i.i.i171.1 = add nuw nsw i64 %indvars.iv.i.i.i168, 2
  %arrayidx.i.i.i169.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i162, i64 %indvars.iv.next.i.i.i171.1
  %arrayidx3.i.i.i170.2 = getelementptr inbounds i32, ptr %71, i64 %indvars.iv.next.i.i.i171.1
  %86 = load i32, ptr %arrayidx3.i.i.i170.2, align 4, !tbaa !185
  store i32 %86, ptr %arrayidx.i.i.i169.2, align 4, !tbaa !185
  %indvars.iv.next.i.i.i171.2 = add nuw nsw i64 %indvars.iv.i.i.i168, 3
  %arrayidx.i.i.i169.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i162, i64 %indvars.iv.next.i.i.i171.2
  %arrayidx3.i.i.i170.3 = getelementptr inbounds i32, ptr %71, i64 %indvars.iv.next.i.i.i171.2
  %87 = load i32, ptr %arrayidx3.i.i.i170.3, align 4, !tbaa !185
  store i32 %87, ptr %arrayidx.i.i.i169.3, align 4, !tbaa !185
  %indvars.iv.next.i.i.i171.3 = add nuw nsw i64 %indvars.iv.i.i.i168, 4
  %exitcond.not.i.i.i172.3 = icmp eq i64 %indvars.iv.next.i.i.i171.3, %wide.trip.count.i.i.i166
  br i1 %exitcond.not.i.i.i172.3, label %if.then.i11.i.i182, label %for.body.i.i.i173, !llvm.loop !201

_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i178: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i165
  %tobool.not.i10.i.i174 = icmp eq ptr %71, null
  %88 = load i8, ptr %m_ownsMemory.i.i33, align 8, !range !159
  %tobool2.not.i.i.i176 = icmp eq i8 %88, 0
  %or.cond.i177 = select i1 %tobool.not.i10.i.i174, i1 true, i1 %tobool2.not.i.i.i176
  br i1 %or.cond.i177, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i187, label %if.then3.i.i.i184

if.then.i11.i.i182:                               ; preds = %for.body.i.i.i173.prol.loopexit, %for.body.i.i.i173, %middle.block542
  %.old.i180 = load i8, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24, !range !159, !noundef !192
  %tobool2.not.i.i.old.i181 = icmp eq i8 %.old.i180, 0
  br i1 %tobool2.not.i.i.old.i181, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i187, label %if.then3.i.i.i184

if.then3.i.i.i184:                                ; preds = %if.then.i11.i.i182, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i178
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %71)
  %.pre7.pre.pre.i183 = load i32, ptr %m_size.i.i37, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i187

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i187: ; preds = %if.then3.i.i.i184, %if.then.i11.i.i182, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i178
  %.pre7.i185 = phi i32 [ %72, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i178 ], [ %.pre7.pre.pre.i183, %if.then3.i.i.i184 ], [ %72, %if.then.i11.i.i182 ]
  store i8 1, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24
  store ptr %retval.0.i.i.i162, ptr %m_data.i.i31, align 8, !tbaa !27
  store i32 %cond.i.i152, ptr %m_capacity.i.i39, align 8, !tbaa !29
  br label %sw.epilog.sink.split

sw.bb15:                                          ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit49
  %89 = load i32, ptr %m_size.i.i, align 4, !tbaa !22
  %90 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !23
  %cmp.i195 = icmp eq i32 %89, %90
  br i1 %cmp.i195, label %if.then.i200, label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE9push_backERKS2_.exit

if.then.i200:                                     ; preds = %sw.bb15
  %tobool.not.i.i196 = icmp eq i32 %89, 0
  %mul.i.i197 = shl nsw i32 %89, 1
  %cond.i.i198 = select i1 %tobool.not.i.i196, i32 1, i32 %mul.i.i197
  %cmp.i.i199 = icmp slt i32 %89, %cond.i.i198
  br i1 %cmp.i.i199, label %if.then.i.i202, label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE9push_backERKS2_.exit

if.then.i.i202:                                   ; preds = %if.then.i200
  %tobool.not.i.i.i201 = icmp eq i32 %cond.i.i198, 0
  br i1 %tobool.not.i.i.i201, label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE8allocateEi.exit.i.i, label %if.then.i.i.i207

if.then.i.i.i207:                                 ; preds = %if.then.i.i202
  %conv.i.i.i.i203 = sext i32 %cond.i.i198 to i64
  %mul.i.i.i.i204 = shl nsw i64 %conv.i.i.i.i203, 2
  %call.i.i.i.i205 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i204, i32 noundef 16)
  %.pre.i206 = load i32, ptr %m_size.i.i, align 4, !tbaa !22
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i207, %if.then.i.i202
  %91 = phi i32 [ %.pre.i206, %if.then.i.i.i207 ], [ %89, %if.then.i.i202 ]
  %retval.0.i.i.i208 = phi ptr [ %call.i.i.i.i205, %if.then.i.i.i207 ], [ null, %if.then.i.i202 ]
  %cmp7.i.i.i209 = icmp sgt i32 %91, 0
  %92 = load ptr, ptr %m_data.i.i, align 8, !tbaa !21
  br i1 %cmp7.i.i.i209, label %for.body.lr.ph.i.i.i212, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE4copyEiiPS2_.exit.i.i

for.body.lr.ph.i.i.i212:                          ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE8allocateEi.exit.i.i
  %93 = ptrtoint ptr %92 to i64
  %retval.0.i.i.i208425 = ptrtoint ptr %retval.0.i.i.i208 to i64
  %wide.trip.count.i.i.i211 = zext i32 %91 to i64
  %min.iters.check = icmp ult i32 %91, 8
  %94 = sub i64 %retval.0.i.i.i208425, %93
  %diff.check = icmp ult i64 %94, 32
  %or.cond558 = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond558, label %for.body.i.i.i218.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i.i212
  %n.vec = and i64 %wide.trip.count.i.i.i211, 4294967288
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %95 = getelementptr inbounds i32, ptr %retval.0.i.i.i208, i64 %index
  %96 = getelementptr inbounds i32, ptr %92, i64 %index
  %wide.load = load <4 x i32>, ptr %96, align 4, !tbaa !202
  %97 = getelementptr inbounds i32, ptr %96, i64 4
  %wide.load426 = load <4 x i32>, ptr %97, align 4, !tbaa !202
  store <4 x i32> %wide.load, ptr %95, align 4, !tbaa !202
  %98 = getelementptr inbounds i32, ptr %95, i64 4
  store <4 x i32> %wide.load426, ptr %98, align 4, !tbaa !202
  %index.next = add nuw i64 %index, 8
  %99 = icmp eq i64 %index.next, %n.vec
  br i1 %99, label %middle.block, label %vector.body, !llvm.loop !204

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i.i211
  br i1 %cmp.n, label %if.then.i11.i.i226, label %for.body.i.i.i218.preheader

for.body.i.i.i218.preheader:                      ; preds = %for.body.lr.ph.i.i.i212, %middle.block
  %indvars.iv.i.i.i213.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i212 ], [ %n.vec, %middle.block ]
  %100 = xor i64 %indvars.iv.i.i.i213.ph, -1
  %101 = add nsw i64 %100, %wide.trip.count.i.i.i211
  %xtraiter = and i64 %wide.trip.count.i.i.i211, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.i.i.i218.prol.loopexit, label %for.body.i.i.i218.prol

for.body.i.i.i218.prol:                           ; preds = %for.body.i.i.i218.preheader, %for.body.i.i.i218.prol
  %indvars.iv.i.i.i213.prol = phi i64 [ %indvars.iv.next.i.i.i216.prol, %for.body.i.i.i218.prol ], [ %indvars.iv.i.i.i213.ph, %for.body.i.i.i218.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.i.i218.prol ], [ 0, %for.body.i.i.i218.preheader ]
  %arrayidx.i.i.i214.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i208, i64 %indvars.iv.i.i.i213.prol
  %arrayidx3.i.i.i215.prol = getelementptr inbounds i32, ptr %92, i64 %indvars.iv.i.i.i213.prol
  %102 = load i32, ptr %arrayidx3.i.i.i215.prol, align 4, !tbaa !202
  store i32 %102, ptr %arrayidx.i.i.i214.prol, align 4, !tbaa !202
  %indvars.iv.next.i.i.i216.prol = add nuw nsw i64 %indvars.iv.i.i.i213.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.i.i.i218.prol.loopexit, label %for.body.i.i.i218.prol, !llvm.loop !205

for.body.i.i.i218.prol.loopexit:                  ; preds = %for.body.i.i.i218.prol, %for.body.i.i.i218.preheader
  %indvars.iv.i.i.i213.unr = phi i64 [ %indvars.iv.i.i.i213.ph, %for.body.i.i.i218.preheader ], [ %indvars.iv.next.i.i.i216.prol, %for.body.i.i.i218.prol ]
  %103 = icmp ult i64 %101, 3
  br i1 %103, label %if.then.i11.i.i226, label %for.body.i.i.i218

for.body.i.i.i218:                                ; preds = %for.body.i.i.i218.prol.loopexit, %for.body.i.i.i218
  %indvars.iv.i.i.i213 = phi i64 [ %indvars.iv.next.i.i.i216.3, %for.body.i.i.i218 ], [ %indvars.iv.i.i.i213.unr, %for.body.i.i.i218.prol.loopexit ]
  %arrayidx.i.i.i214 = getelementptr inbounds i32, ptr %retval.0.i.i.i208, i64 %indvars.iv.i.i.i213
  %arrayidx3.i.i.i215 = getelementptr inbounds i32, ptr %92, i64 %indvars.iv.i.i.i213
  %104 = load i32, ptr %arrayidx3.i.i.i215, align 4, !tbaa !202
  store i32 %104, ptr %arrayidx.i.i.i214, align 4, !tbaa !202
  %indvars.iv.next.i.i.i216 = add nuw nsw i64 %indvars.iv.i.i.i213, 1
  %arrayidx.i.i.i214.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i208, i64 %indvars.iv.next.i.i.i216
  %arrayidx3.i.i.i215.1 = getelementptr inbounds i32, ptr %92, i64 %indvars.iv.next.i.i.i216
  %105 = load i32, ptr %arrayidx3.i.i.i215.1, align 4, !tbaa !202
  store i32 %105, ptr %arrayidx.i.i.i214.1, align 4, !tbaa !202
  %indvars.iv.next.i.i.i216.1 = add nuw nsw i64 %indvars.iv.i.i.i213, 2
  %arrayidx.i.i.i214.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i208, i64 %indvars.iv.next.i.i.i216.1
  %arrayidx3.i.i.i215.2 = getelementptr inbounds i32, ptr %92, i64 %indvars.iv.next.i.i.i216.1
  %106 = load i32, ptr %arrayidx3.i.i.i215.2, align 4, !tbaa !202
  store i32 %106, ptr %arrayidx.i.i.i214.2, align 4, !tbaa !202
  %indvars.iv.next.i.i.i216.2 = add nuw nsw i64 %indvars.iv.i.i.i213, 3
  %arrayidx.i.i.i214.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i208, i64 %indvars.iv.next.i.i.i216.2
  %arrayidx3.i.i.i215.3 = getelementptr inbounds i32, ptr %92, i64 %indvars.iv.next.i.i.i216.2
  %107 = load i32, ptr %arrayidx3.i.i.i215.3, align 4, !tbaa !202
  store i32 %107, ptr %arrayidx.i.i.i214.3, align 4, !tbaa !202
  %indvars.iv.next.i.i.i216.3 = add nuw nsw i64 %indvars.iv.i.i.i213, 4
  %exitcond.not.i.i.i217.3 = icmp eq i64 %indvars.iv.next.i.i.i216.3, %wide.trip.count.i.i.i211
  br i1 %exitcond.not.i.i.i217.3, label %if.then.i11.i.i226, label %for.body.i.i.i218, !llvm.loop !206

_ZNK20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE4copyEiiPS2_.exit.i.i: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE8allocateEi.exit.i.i
  %tobool.not.i10.i.i219 = icmp eq ptr %92, null
  %108 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i.i221 = icmp eq i8 %108, 0
  %or.cond.i222 = select i1 %tobool.not.i10.i.i219, i1 true, i1 %tobool2.not.i.i.i221
  br i1 %or.cond.i222, label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE10deallocateEv.exit.i.i, label %if.then3.i.i.i228

if.then.i11.i.i226:                               ; preds = %for.body.i.i.i218.prol.loopexit, %for.body.i.i.i218, %middle.block
  %.old.i224 = load i8, ptr %m_ownsMemory.i.i, align 8, !tbaa !18, !range !159, !noundef !192
  %tobool2.not.i.i.old.i225 = icmp eq i8 %.old.i224, 0
  br i1 %tobool2.not.i.i.old.i225, label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE10deallocateEv.exit.i.i, label %if.then3.i.i.i228

if.then3.i.i.i228:                                ; preds = %if.then.i11.i.i226, %_ZNK20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE4copyEiiPS2_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %92)
  %.pre7.pre.pre.i227 = load i32, ptr %m_size.i.i, align 4, !tbaa !22
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i228, %if.then.i11.i.i226, %_ZNK20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE4copyEiiPS2_.exit.i.i
  %.pre7.i229 = phi i32 [ %91, %_ZNK20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE4copyEiiPS2_.exit.i.i ], [ %.pre7.pre.pre.i227, %if.then3.i.i.i228 ], [ %91, %if.then.i11.i.i226 ]
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !18
  store ptr %retval.0.i.i.i208, ptr %m_data.i.i, align 8, !tbaa !21
  store i32 %cond.i.i198, ptr %m_capacity.i.i, align 8, !tbaa !23
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE9push_backERKS2_.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE9push_backERKS2_.exit: ; preds = %sw.bb15, %if.then.i200, %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE10deallocateEv.exit.i.i
  %109 = phi i32 [ %.pre7.i229, %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE10deallocateEv.exit.i.i ], [ %89, %if.then.i200 ], [ %89, %sw.bb15 ]
  %110 = load ptr, ptr %m_data.i.i, align 8, !tbaa !21
  %idxprom.i232 = sext i32 %109 to i64
  %arrayidx.i233 = getelementptr inbounds i32, ptr %110, i64 %idxprom.i232
  store i32 0, ptr %arrayidx.i233, align 4, !tbaa !202
  %inc.i234 = add nsw i32 %109, 1
  store i32 %inc.i234, ptr %m_size.i.i, align 4, !tbaa !22
  %111 = load i32, ptr %m_size.i.i37, align 4, !tbaa !28
  %112 = load i32, ptr %m_capacity.i.i39, align 8, !tbaa !29
  %cmp.i237 = icmp eq i32 %111, %112
  br i1 %cmp.i237, label %if.then.i242, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit280

if.then.i242:                                     ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE9push_backERKS2_.exit
  %tobool.not.i.i238 = icmp eq i32 %111, 0
  %mul.i.i239 = shl nsw i32 %111, 1
  %cond.i.i240 = select i1 %tobool.not.i.i238, i32 1, i32 %mul.i.i239
  %cmp.i.i241 = icmp slt i32 %111, %cond.i.i240
  br i1 %cmp.i.i241, label %if.then.i.i244, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit280

if.then.i.i244:                                   ; preds = %if.then.i242
  %tobool.not.i.i.i243 = icmp eq i32 %cond.i.i240, 0
  br i1 %tobool.not.i.i.i243, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i253, label %if.then.i.i.i249

if.then.i.i.i249:                                 ; preds = %if.then.i.i244
  %conv.i.i.i.i245 = sext i32 %cond.i.i240 to i64
  %mul.i.i.i.i246 = shl nsw i64 %conv.i.i.i.i245, 2
  %call.i.i.i.i247 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i246, i32 noundef 16)
  %.pre.i248 = load i32, ptr %m_size.i.i37, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i253

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i253: ; preds = %if.then.i.i.i249, %if.then.i.i244
  %113 = phi i32 [ %.pre.i248, %if.then.i.i.i249 ], [ %111, %if.then.i.i244 ]
  %retval.0.i.i.i250 = phi ptr [ %call.i.i.i.i247, %if.then.i.i.i249 ], [ null, %if.then.i.i244 ]
  %cmp7.i.i.i251 = icmp sgt i32 %113, 0
  %114 = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  br i1 %cmp7.i.i.i251, label %for.body.lr.ph.i.i.i255, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i266

for.body.lr.ph.i.i.i255:                          ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i253
  %115 = ptrtoint ptr %114 to i64
  %retval.0.i.i.i250428 = ptrtoint ptr %retval.0.i.i.i250 to i64
  %wide.trip.count.i.i.i254 = zext i32 %113 to i64
  %min.iters.check432 = icmp ult i32 %113, 8
  %116 = sub i64 %retval.0.i.i.i250428, %115
  %diff.check429 = icmp ult i64 %116, 32
  %or.cond559 = select i1 %min.iters.check432, i1 true, i1 %diff.check429
  br i1 %or.cond559, label %for.body.i.i.i261.preheader, label %vector.ph433

vector.ph433:                                     ; preds = %for.body.lr.ph.i.i.i255
  %n.vec435 = and i64 %wide.trip.count.i.i.i254, 4294967288
  br label %vector.body438

vector.body438:                                   ; preds = %vector.body438, %vector.ph433
  %index439 = phi i64 [ 0, %vector.ph433 ], [ %index.next442, %vector.body438 ]
  %117 = getelementptr inbounds i32, ptr %retval.0.i.i.i250, i64 %index439
  %118 = getelementptr inbounds i32, ptr %114, i64 %index439
  %wide.load440 = load <4 x i32>, ptr %118, align 4, !tbaa !185
  %119 = getelementptr inbounds i32, ptr %118, i64 4
  %wide.load441 = load <4 x i32>, ptr %119, align 4, !tbaa !185
  store <4 x i32> %wide.load440, ptr %117, align 4, !tbaa !185
  %120 = getelementptr inbounds i32, ptr %117, i64 4
  store <4 x i32> %wide.load441, ptr %120, align 4, !tbaa !185
  %index.next442 = add nuw i64 %index439, 8
  %121 = icmp eq i64 %index.next442, %n.vec435
  br i1 %121, label %middle.block430, label %vector.body438, !llvm.loop !207

middle.block430:                                  ; preds = %vector.body438
  %cmp.n437 = icmp eq i64 %n.vec435, %wide.trip.count.i.i.i254
  br i1 %cmp.n437, label %if.then.i11.i.i270, label %for.body.i.i.i261.preheader

for.body.i.i.i261.preheader:                      ; preds = %for.body.lr.ph.i.i.i255, %middle.block430
  %indvars.iv.i.i.i256.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i255 ], [ %n.vec435, %middle.block430 ]
  %122 = xor i64 %indvars.iv.i.i.i256.ph, -1
  %123 = add nsw i64 %122, %wide.trip.count.i.i.i254
  %xtraiter563 = and i64 %wide.trip.count.i.i.i254, 3
  %lcmp.mod564.not = icmp eq i64 %xtraiter563, 0
  br i1 %lcmp.mod564.not, label %for.body.i.i.i261.prol.loopexit, label %for.body.i.i.i261.prol

for.body.i.i.i261.prol:                           ; preds = %for.body.i.i.i261.preheader, %for.body.i.i.i261.prol
  %indvars.iv.i.i.i256.prol = phi i64 [ %indvars.iv.next.i.i.i259.prol, %for.body.i.i.i261.prol ], [ %indvars.iv.i.i.i256.ph, %for.body.i.i.i261.preheader ]
  %prol.iter565 = phi i64 [ %prol.iter565.next, %for.body.i.i.i261.prol ], [ 0, %for.body.i.i.i261.preheader ]
  %arrayidx.i.i.i257.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i250, i64 %indvars.iv.i.i.i256.prol
  %arrayidx3.i.i.i258.prol = getelementptr inbounds i32, ptr %114, i64 %indvars.iv.i.i.i256.prol
  %124 = load i32, ptr %arrayidx3.i.i.i258.prol, align 4, !tbaa !185
  store i32 %124, ptr %arrayidx.i.i.i257.prol, align 4, !tbaa !185
  %indvars.iv.next.i.i.i259.prol = add nuw nsw i64 %indvars.iv.i.i.i256.prol, 1
  %prol.iter565.next = add i64 %prol.iter565, 1
  %prol.iter565.cmp.not = icmp eq i64 %prol.iter565.next, %xtraiter563
  br i1 %prol.iter565.cmp.not, label %for.body.i.i.i261.prol.loopexit, label %for.body.i.i.i261.prol, !llvm.loop !208

for.body.i.i.i261.prol.loopexit:                  ; preds = %for.body.i.i.i261.prol, %for.body.i.i.i261.preheader
  %indvars.iv.i.i.i256.unr = phi i64 [ %indvars.iv.i.i.i256.ph, %for.body.i.i.i261.preheader ], [ %indvars.iv.next.i.i.i259.prol, %for.body.i.i.i261.prol ]
  %125 = icmp ult i64 %123, 3
  br i1 %125, label %if.then.i11.i.i270, label %for.body.i.i.i261

for.body.i.i.i261:                                ; preds = %for.body.i.i.i261.prol.loopexit, %for.body.i.i.i261
  %indvars.iv.i.i.i256 = phi i64 [ %indvars.iv.next.i.i.i259.3, %for.body.i.i.i261 ], [ %indvars.iv.i.i.i256.unr, %for.body.i.i.i261.prol.loopexit ]
  %arrayidx.i.i.i257 = getelementptr inbounds i32, ptr %retval.0.i.i.i250, i64 %indvars.iv.i.i.i256
  %arrayidx3.i.i.i258 = getelementptr inbounds i32, ptr %114, i64 %indvars.iv.i.i.i256
  %126 = load i32, ptr %arrayidx3.i.i.i258, align 4, !tbaa !185
  store i32 %126, ptr %arrayidx.i.i.i257, align 4, !tbaa !185
  %indvars.iv.next.i.i.i259 = add nuw nsw i64 %indvars.iv.i.i.i256, 1
  %arrayidx.i.i.i257.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i250, i64 %indvars.iv.next.i.i.i259
  %arrayidx3.i.i.i258.1 = getelementptr inbounds i32, ptr %114, i64 %indvars.iv.next.i.i.i259
  %127 = load i32, ptr %arrayidx3.i.i.i258.1, align 4, !tbaa !185
  store i32 %127, ptr %arrayidx.i.i.i257.1, align 4, !tbaa !185
  %indvars.iv.next.i.i.i259.1 = add nuw nsw i64 %indvars.iv.i.i.i256, 2
  %arrayidx.i.i.i257.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i250, i64 %indvars.iv.next.i.i.i259.1
  %arrayidx3.i.i.i258.2 = getelementptr inbounds i32, ptr %114, i64 %indvars.iv.next.i.i.i259.1
  %128 = load i32, ptr %arrayidx3.i.i.i258.2, align 4, !tbaa !185
  store i32 %128, ptr %arrayidx.i.i.i257.2, align 4, !tbaa !185
  %indvars.iv.next.i.i.i259.2 = add nuw nsw i64 %indvars.iv.i.i.i256, 3
  %arrayidx.i.i.i257.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i250, i64 %indvars.iv.next.i.i.i259.2
  %arrayidx3.i.i.i258.3 = getelementptr inbounds i32, ptr %114, i64 %indvars.iv.next.i.i.i259.2
  %129 = load i32, ptr %arrayidx3.i.i.i258.3, align 4, !tbaa !185
  store i32 %129, ptr %arrayidx.i.i.i257.3, align 4, !tbaa !185
  %indvars.iv.next.i.i.i259.3 = add nuw nsw i64 %indvars.iv.i.i.i256, 4
  %exitcond.not.i.i.i260.3 = icmp eq i64 %indvars.iv.next.i.i.i259.3, %wide.trip.count.i.i.i254
  br i1 %exitcond.not.i.i.i260.3, label %if.then.i11.i.i270, label %for.body.i.i.i261, !llvm.loop !209

_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i266: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i253
  %tobool.not.i10.i.i262 = icmp eq ptr %114, null
  %130 = load i8, ptr %m_ownsMemory.i.i33, align 8, !range !159
  %tobool2.not.i.i.i264 = icmp eq i8 %130, 0
  %or.cond.i265 = select i1 %tobool.not.i10.i.i262, i1 true, i1 %tobool2.not.i.i.i264
  br i1 %or.cond.i265, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i275, label %if.then3.i.i.i272

if.then.i11.i.i270:                               ; preds = %for.body.i.i.i261.prol.loopexit, %for.body.i.i.i261, %middle.block430
  %.old.i268 = load i8, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24, !range !159, !noundef !192
  %tobool2.not.i.i.old.i269 = icmp eq i8 %.old.i268, 0
  br i1 %tobool2.not.i.i.old.i269, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i275, label %if.then3.i.i.i272

if.then3.i.i.i272:                                ; preds = %if.then.i11.i.i270, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i266
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %114)
  %.pre7.pre.pre.i271 = load i32, ptr %m_size.i.i37, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i275

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i275: ; preds = %if.then3.i.i.i272, %if.then.i11.i.i270, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i266
  %.pre7.i273 = phi i32 [ %113, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i266 ], [ %.pre7.pre.pre.i271, %if.then3.i.i.i272 ], [ %113, %if.then.i11.i.i270 ]
  store i8 1, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24
  store ptr %retval.0.i.i.i250, ptr %m_data.i.i31, align 8, !tbaa !27
  store i32 %cond.i.i240, ptr %m_capacity.i.i39, align 8, !tbaa !29
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit280

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit280: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE9push_backERKS2_.exit, %if.then.i242, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i275
  %131 = phi i32 [ %cond.i.i240, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i275 ], [ %111, %if.then.i242 ], [ %112, %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE9push_backERKS2_.exit ]
  %132 = phi i32 [ %.pre7.i273, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i275 ], [ %111, %if.then.i242 ], [ %111, %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE9push_backERKS2_.exit ]
  %133 = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  %idxprom.i277 = sext i32 %132 to i64
  %arrayidx.i278 = getelementptr inbounds i32, ptr %133, i64 %idxprom.i277
  store i32 1, ptr %arrayidx.i278, align 4, !tbaa !185
  %inc.i279 = add nsw i32 %132, 1
  store i32 %inc.i279, ptr %m_size.i.i37, align 4, !tbaa !28
  %cmp.i283 = icmp eq i32 %inc.i279, %131
  br i1 %cmp.i283, label %if.then.i288, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit326

if.then.i288:                                     ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit280
  %tobool.not.i.i284 = icmp eq i32 %131, 0
  %mul.i.i285 = shl nsw i32 %131, 1
  %cond.i.i286 = select i1 %tobool.not.i.i284, i32 1, i32 %mul.i.i285
  %cmp.i.i287 = icmp slt i32 %131, %cond.i.i286
  br i1 %cmp.i.i287, label %if.then.i.i290, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit326

if.then.i.i290:                                   ; preds = %if.then.i288
  %tobool.not.i.i.i289 = icmp eq i32 %cond.i.i286, 0
  br i1 %tobool.not.i.i.i289, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i299, label %if.then.i.i.i295

if.then.i.i.i295:                                 ; preds = %if.then.i.i290
  %conv.i.i.i.i291 = sext i32 %cond.i.i286 to i64
  %mul.i.i.i.i292 = shl nsw i64 %conv.i.i.i.i291, 2
  %call.i.i.i.i293 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i292, i32 noundef 16)
  %.pre.i294 = load i32, ptr %m_size.i.i37, align 4, !tbaa !28
  %.pre = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i299

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i299: ; preds = %if.then.i.i.i295, %if.then.i.i290
  %134 = phi ptr [ %.pre, %if.then.i.i.i295 ], [ %133, %if.then.i.i290 ]
  %135 = phi i32 [ %.pre.i294, %if.then.i.i.i295 ], [ %131, %if.then.i.i290 ]
  %retval.0.i.i.i296 = phi ptr [ %call.i.i.i.i293, %if.then.i.i.i295 ], [ null, %if.then.i.i290 ]
  %cmp7.i.i.i297 = icmp sgt i32 %135, 0
  br i1 %cmp7.i.i.i297, label %for.body.lr.ph.i.i.i301, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i312

for.body.lr.ph.i.i.i301:                          ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i299
  %136 = ptrtoint ptr %134 to i64
  %retval.0.i.i.i296444 = ptrtoint ptr %retval.0.i.i.i296 to i64
  %wide.trip.count.i.i.i300 = zext i32 %135 to i64
  %min.iters.check448 = icmp ult i32 %135, 8
  %137 = sub i64 %retval.0.i.i.i296444, %136
  %diff.check445 = icmp ult i64 %137, 32
  %or.cond560 = select i1 %min.iters.check448, i1 true, i1 %diff.check445
  br i1 %or.cond560, label %for.body.i.i.i307.preheader, label %vector.ph449

vector.ph449:                                     ; preds = %for.body.lr.ph.i.i.i301
  %n.vec451 = and i64 %wide.trip.count.i.i.i300, 4294967288
  br label %vector.body454

vector.body454:                                   ; preds = %vector.body454, %vector.ph449
  %index455 = phi i64 [ 0, %vector.ph449 ], [ %index.next458, %vector.body454 ]
  %138 = getelementptr inbounds i32, ptr %retval.0.i.i.i296, i64 %index455
  %139 = getelementptr inbounds i32, ptr %134, i64 %index455
  %wide.load456 = load <4 x i32>, ptr %139, align 4, !tbaa !185
  %140 = getelementptr inbounds i32, ptr %139, i64 4
  %wide.load457 = load <4 x i32>, ptr %140, align 4, !tbaa !185
  store <4 x i32> %wide.load456, ptr %138, align 4, !tbaa !185
  %141 = getelementptr inbounds i32, ptr %138, i64 4
  store <4 x i32> %wide.load457, ptr %141, align 4, !tbaa !185
  %index.next458 = add nuw i64 %index455, 8
  %142 = icmp eq i64 %index.next458, %n.vec451
  br i1 %142, label %middle.block446, label %vector.body454, !llvm.loop !210

middle.block446:                                  ; preds = %vector.body454
  %cmp.n453 = icmp eq i64 %n.vec451, %wide.trip.count.i.i.i300
  br i1 %cmp.n453, label %if.then.i11.i.i316, label %for.body.i.i.i307.preheader

for.body.i.i.i307.preheader:                      ; preds = %for.body.lr.ph.i.i.i301, %middle.block446
  %indvars.iv.i.i.i302.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i301 ], [ %n.vec451, %middle.block446 ]
  %143 = xor i64 %indvars.iv.i.i.i302.ph, -1
  %144 = add nsw i64 %143, %wide.trip.count.i.i.i300
  %xtraiter566 = and i64 %wide.trip.count.i.i.i300, 3
  %lcmp.mod567.not = icmp eq i64 %xtraiter566, 0
  br i1 %lcmp.mod567.not, label %for.body.i.i.i307.prol.loopexit, label %for.body.i.i.i307.prol

for.body.i.i.i307.prol:                           ; preds = %for.body.i.i.i307.preheader, %for.body.i.i.i307.prol
  %indvars.iv.i.i.i302.prol = phi i64 [ %indvars.iv.next.i.i.i305.prol, %for.body.i.i.i307.prol ], [ %indvars.iv.i.i.i302.ph, %for.body.i.i.i307.preheader ]
  %prol.iter568 = phi i64 [ %prol.iter568.next, %for.body.i.i.i307.prol ], [ 0, %for.body.i.i.i307.preheader ]
  %arrayidx.i.i.i303.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i296, i64 %indvars.iv.i.i.i302.prol
  %arrayidx3.i.i.i304.prol = getelementptr inbounds i32, ptr %134, i64 %indvars.iv.i.i.i302.prol
  %145 = load i32, ptr %arrayidx3.i.i.i304.prol, align 4, !tbaa !185
  store i32 %145, ptr %arrayidx.i.i.i303.prol, align 4, !tbaa !185
  %indvars.iv.next.i.i.i305.prol = add nuw nsw i64 %indvars.iv.i.i.i302.prol, 1
  %prol.iter568.next = add i64 %prol.iter568, 1
  %prol.iter568.cmp.not = icmp eq i64 %prol.iter568.next, %xtraiter566
  br i1 %prol.iter568.cmp.not, label %for.body.i.i.i307.prol.loopexit, label %for.body.i.i.i307.prol, !llvm.loop !211

for.body.i.i.i307.prol.loopexit:                  ; preds = %for.body.i.i.i307.prol, %for.body.i.i.i307.preheader
  %indvars.iv.i.i.i302.unr = phi i64 [ %indvars.iv.i.i.i302.ph, %for.body.i.i.i307.preheader ], [ %indvars.iv.next.i.i.i305.prol, %for.body.i.i.i307.prol ]
  %146 = icmp ult i64 %144, 3
  br i1 %146, label %if.then.i11.i.i316, label %for.body.i.i.i307

for.body.i.i.i307:                                ; preds = %for.body.i.i.i307.prol.loopexit, %for.body.i.i.i307
  %indvars.iv.i.i.i302 = phi i64 [ %indvars.iv.next.i.i.i305.3, %for.body.i.i.i307 ], [ %indvars.iv.i.i.i302.unr, %for.body.i.i.i307.prol.loopexit ]
  %arrayidx.i.i.i303 = getelementptr inbounds i32, ptr %retval.0.i.i.i296, i64 %indvars.iv.i.i.i302
  %arrayidx3.i.i.i304 = getelementptr inbounds i32, ptr %134, i64 %indvars.iv.i.i.i302
  %147 = load i32, ptr %arrayidx3.i.i.i304, align 4, !tbaa !185
  store i32 %147, ptr %arrayidx.i.i.i303, align 4, !tbaa !185
  %indvars.iv.next.i.i.i305 = add nuw nsw i64 %indvars.iv.i.i.i302, 1
  %arrayidx.i.i.i303.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i296, i64 %indvars.iv.next.i.i.i305
  %arrayidx3.i.i.i304.1 = getelementptr inbounds i32, ptr %134, i64 %indvars.iv.next.i.i.i305
  %148 = load i32, ptr %arrayidx3.i.i.i304.1, align 4, !tbaa !185
  store i32 %148, ptr %arrayidx.i.i.i303.1, align 4, !tbaa !185
  %indvars.iv.next.i.i.i305.1 = add nuw nsw i64 %indvars.iv.i.i.i302, 2
  %arrayidx.i.i.i303.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i296, i64 %indvars.iv.next.i.i.i305.1
  %arrayidx3.i.i.i304.2 = getelementptr inbounds i32, ptr %134, i64 %indvars.iv.next.i.i.i305.1
  %149 = load i32, ptr %arrayidx3.i.i.i304.2, align 4, !tbaa !185
  store i32 %149, ptr %arrayidx.i.i.i303.2, align 4, !tbaa !185
  %indvars.iv.next.i.i.i305.2 = add nuw nsw i64 %indvars.iv.i.i.i302, 3
  %arrayidx.i.i.i303.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i296, i64 %indvars.iv.next.i.i.i305.2
  %arrayidx3.i.i.i304.3 = getelementptr inbounds i32, ptr %134, i64 %indvars.iv.next.i.i.i305.2
  %150 = load i32, ptr %arrayidx3.i.i.i304.3, align 4, !tbaa !185
  store i32 %150, ptr %arrayidx.i.i.i303.3, align 4, !tbaa !185
  %indvars.iv.next.i.i.i305.3 = add nuw nsw i64 %indvars.iv.i.i.i302, 4
  %exitcond.not.i.i.i306.3 = icmp eq i64 %indvars.iv.next.i.i.i305.3, %wide.trip.count.i.i.i300
  br i1 %exitcond.not.i.i.i306.3, label %if.then.i11.i.i316, label %for.body.i.i.i307, !llvm.loop !212

_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i312: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i299
  %tobool.not.i10.i.i308 = icmp eq ptr %134, null
  %151 = load i8, ptr %m_ownsMemory.i.i33, align 8, !range !159
  %tobool2.not.i.i.i310 = icmp eq i8 %151, 0
  %or.cond.i311 = select i1 %tobool.not.i10.i.i308, i1 true, i1 %tobool2.not.i.i.i310
  br i1 %or.cond.i311, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i321, label %if.then3.i.i.i318

if.then.i11.i.i316:                               ; preds = %for.body.i.i.i307.prol.loopexit, %for.body.i.i.i307, %middle.block446
  %.old.i314 = load i8, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24, !range !159, !noundef !192
  %tobool2.not.i.i.old.i315 = icmp eq i8 %.old.i314, 0
  br i1 %tobool2.not.i.i.old.i315, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i321, label %if.then3.i.i.i318

if.then3.i.i.i318:                                ; preds = %if.then.i11.i.i316, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i312
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %134)
  %.pre7.pre.pre.i317 = load i32, ptr %m_size.i.i37, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i321

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i321: ; preds = %if.then3.i.i.i318, %if.then.i11.i.i316, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i312
  %.pre7.i319 = phi i32 [ %135, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i312 ], [ %.pre7.pre.pre.i317, %if.then3.i.i.i318 ], [ %135, %if.then.i11.i.i316 ]
  store i8 1, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24
  store ptr %retval.0.i.i.i296, ptr %m_data.i.i31, align 8, !tbaa !27
  store i32 %cond.i.i286, ptr %m_capacity.i.i39, align 8, !tbaa !29
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit326

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit326: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit280, %if.then.i288, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i321
  %152 = phi i32 [ %cond.i.i286, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i321 ], [ %131, %if.then.i288 ], [ %131, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit280 ]
  %153 = phi ptr [ %retval.0.i.i.i296, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i321 ], [ %133, %if.then.i288 ], [ %133, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit280 ]
  %154 = phi i32 [ %.pre7.i319, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i321 ], [ %131, %if.then.i288 ], [ %inc.i279, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit280 ]
  %idxprom.i323 = sext i32 %154 to i64
  %arrayidx.i324 = getelementptr inbounds i32, ptr %153, i64 %idxprom.i323
  store i32 2, ptr %arrayidx.i324, align 4, !tbaa !185
  %inc.i325 = add nsw i32 %154, 1
  store i32 %inc.i325, ptr %m_size.i.i37, align 4, !tbaa !28
  %cmp.i329 = icmp eq i32 %inc.i325, %152
  br i1 %cmp.i329, label %if.then.i334, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit372

if.then.i334:                                     ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit326
  %tobool.not.i.i330 = icmp eq i32 %152, 0
  %mul.i.i331 = shl nsw i32 %152, 1
  %cond.i.i332 = select i1 %tobool.not.i.i330, i32 1, i32 %mul.i.i331
  %cmp.i.i333 = icmp slt i32 %152, %cond.i.i332
  br i1 %cmp.i.i333, label %if.then.i.i336, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit372

if.then.i.i336:                                   ; preds = %if.then.i334
  %tobool.not.i.i.i335 = icmp eq i32 %cond.i.i332, 0
  br i1 %tobool.not.i.i.i335, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i345, label %if.then.i.i.i341

if.then.i.i.i341:                                 ; preds = %if.then.i.i336
  %conv.i.i.i.i337 = sext i32 %cond.i.i332 to i64
  %mul.i.i.i.i338 = shl nsw i64 %conv.i.i.i.i337, 2
  %call.i.i.i.i339 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i338, i32 noundef 16)
  %.pre.i340 = load i32, ptr %m_size.i.i37, align 4, !tbaa !28
  %.pre419 = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i345

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i345: ; preds = %if.then.i.i.i341, %if.then.i.i336
  %155 = phi ptr [ %.pre419, %if.then.i.i.i341 ], [ %153, %if.then.i.i336 ]
  %156 = phi i32 [ %.pre.i340, %if.then.i.i.i341 ], [ %152, %if.then.i.i336 ]
  %retval.0.i.i.i342 = phi ptr [ %call.i.i.i.i339, %if.then.i.i.i341 ], [ null, %if.then.i.i336 ]
  %cmp7.i.i.i343 = icmp sgt i32 %156, 0
  br i1 %cmp7.i.i.i343, label %for.body.lr.ph.i.i.i347, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i358

for.body.lr.ph.i.i.i347:                          ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i345
  %157 = ptrtoint ptr %155 to i64
  %retval.0.i.i.i342460 = ptrtoint ptr %retval.0.i.i.i342 to i64
  %wide.trip.count.i.i.i346 = zext i32 %156 to i64
  %min.iters.check464 = icmp ult i32 %156, 8
  %158 = sub i64 %retval.0.i.i.i342460, %157
  %diff.check461 = icmp ult i64 %158, 32
  %or.cond561 = select i1 %min.iters.check464, i1 true, i1 %diff.check461
  br i1 %or.cond561, label %for.body.i.i.i353.preheader, label %vector.ph465

vector.ph465:                                     ; preds = %for.body.lr.ph.i.i.i347
  %n.vec467 = and i64 %wide.trip.count.i.i.i346, 4294967288
  br label %vector.body470

vector.body470:                                   ; preds = %vector.body470, %vector.ph465
  %index471 = phi i64 [ 0, %vector.ph465 ], [ %index.next474, %vector.body470 ]
  %159 = getelementptr inbounds i32, ptr %retval.0.i.i.i342, i64 %index471
  %160 = getelementptr inbounds i32, ptr %155, i64 %index471
  %wide.load472 = load <4 x i32>, ptr %160, align 4, !tbaa !185
  %161 = getelementptr inbounds i32, ptr %160, i64 4
  %wide.load473 = load <4 x i32>, ptr %161, align 4, !tbaa !185
  store <4 x i32> %wide.load472, ptr %159, align 4, !tbaa !185
  %162 = getelementptr inbounds i32, ptr %159, i64 4
  store <4 x i32> %wide.load473, ptr %162, align 4, !tbaa !185
  %index.next474 = add nuw i64 %index471, 8
  %163 = icmp eq i64 %index.next474, %n.vec467
  br i1 %163, label %middle.block462, label %vector.body470, !llvm.loop !213

middle.block462:                                  ; preds = %vector.body470
  %cmp.n469 = icmp eq i64 %n.vec467, %wide.trip.count.i.i.i346
  br i1 %cmp.n469, label %if.then.i11.i.i362, label %for.body.i.i.i353.preheader

for.body.i.i.i353.preheader:                      ; preds = %for.body.lr.ph.i.i.i347, %middle.block462
  %indvars.iv.i.i.i348.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i347 ], [ %n.vec467, %middle.block462 ]
  %164 = xor i64 %indvars.iv.i.i.i348.ph, -1
  %165 = add nsw i64 %164, %wide.trip.count.i.i.i346
  %xtraiter569 = and i64 %wide.trip.count.i.i.i346, 3
  %lcmp.mod570.not = icmp eq i64 %xtraiter569, 0
  br i1 %lcmp.mod570.not, label %for.body.i.i.i353.prol.loopexit, label %for.body.i.i.i353.prol

for.body.i.i.i353.prol:                           ; preds = %for.body.i.i.i353.preheader, %for.body.i.i.i353.prol
  %indvars.iv.i.i.i348.prol = phi i64 [ %indvars.iv.next.i.i.i351.prol, %for.body.i.i.i353.prol ], [ %indvars.iv.i.i.i348.ph, %for.body.i.i.i353.preheader ]
  %prol.iter571 = phi i64 [ %prol.iter571.next, %for.body.i.i.i353.prol ], [ 0, %for.body.i.i.i353.preheader ]
  %arrayidx.i.i.i349.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i342, i64 %indvars.iv.i.i.i348.prol
  %arrayidx3.i.i.i350.prol = getelementptr inbounds i32, ptr %155, i64 %indvars.iv.i.i.i348.prol
  %166 = load i32, ptr %arrayidx3.i.i.i350.prol, align 4, !tbaa !185
  store i32 %166, ptr %arrayidx.i.i.i349.prol, align 4, !tbaa !185
  %indvars.iv.next.i.i.i351.prol = add nuw nsw i64 %indvars.iv.i.i.i348.prol, 1
  %prol.iter571.next = add i64 %prol.iter571, 1
  %prol.iter571.cmp.not = icmp eq i64 %prol.iter571.next, %xtraiter569
  br i1 %prol.iter571.cmp.not, label %for.body.i.i.i353.prol.loopexit, label %for.body.i.i.i353.prol, !llvm.loop !214

for.body.i.i.i353.prol.loopexit:                  ; preds = %for.body.i.i.i353.prol, %for.body.i.i.i353.preheader
  %indvars.iv.i.i.i348.unr = phi i64 [ %indvars.iv.i.i.i348.ph, %for.body.i.i.i353.preheader ], [ %indvars.iv.next.i.i.i351.prol, %for.body.i.i.i353.prol ]
  %167 = icmp ult i64 %165, 3
  br i1 %167, label %if.then.i11.i.i362, label %for.body.i.i.i353

for.body.i.i.i353:                                ; preds = %for.body.i.i.i353.prol.loopexit, %for.body.i.i.i353
  %indvars.iv.i.i.i348 = phi i64 [ %indvars.iv.next.i.i.i351.3, %for.body.i.i.i353 ], [ %indvars.iv.i.i.i348.unr, %for.body.i.i.i353.prol.loopexit ]
  %arrayidx.i.i.i349 = getelementptr inbounds i32, ptr %retval.0.i.i.i342, i64 %indvars.iv.i.i.i348
  %arrayidx3.i.i.i350 = getelementptr inbounds i32, ptr %155, i64 %indvars.iv.i.i.i348
  %168 = load i32, ptr %arrayidx3.i.i.i350, align 4, !tbaa !185
  store i32 %168, ptr %arrayidx.i.i.i349, align 4, !tbaa !185
  %indvars.iv.next.i.i.i351 = add nuw nsw i64 %indvars.iv.i.i.i348, 1
  %arrayidx.i.i.i349.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i342, i64 %indvars.iv.next.i.i.i351
  %arrayidx3.i.i.i350.1 = getelementptr inbounds i32, ptr %155, i64 %indvars.iv.next.i.i.i351
  %169 = load i32, ptr %arrayidx3.i.i.i350.1, align 4, !tbaa !185
  store i32 %169, ptr %arrayidx.i.i.i349.1, align 4, !tbaa !185
  %indvars.iv.next.i.i.i351.1 = add nuw nsw i64 %indvars.iv.i.i.i348, 2
  %arrayidx.i.i.i349.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i342, i64 %indvars.iv.next.i.i.i351.1
  %arrayidx3.i.i.i350.2 = getelementptr inbounds i32, ptr %155, i64 %indvars.iv.next.i.i.i351.1
  %170 = load i32, ptr %arrayidx3.i.i.i350.2, align 4, !tbaa !185
  store i32 %170, ptr %arrayidx.i.i.i349.2, align 4, !tbaa !185
  %indvars.iv.next.i.i.i351.2 = add nuw nsw i64 %indvars.iv.i.i.i348, 3
  %arrayidx.i.i.i349.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i342, i64 %indvars.iv.next.i.i.i351.2
  %arrayidx3.i.i.i350.3 = getelementptr inbounds i32, ptr %155, i64 %indvars.iv.next.i.i.i351.2
  %171 = load i32, ptr %arrayidx3.i.i.i350.3, align 4, !tbaa !185
  store i32 %171, ptr %arrayidx.i.i.i349.3, align 4, !tbaa !185
  %indvars.iv.next.i.i.i351.3 = add nuw nsw i64 %indvars.iv.i.i.i348, 4
  %exitcond.not.i.i.i352.3 = icmp eq i64 %indvars.iv.next.i.i.i351.3, %wide.trip.count.i.i.i346
  br i1 %exitcond.not.i.i.i352.3, label %if.then.i11.i.i362, label %for.body.i.i.i353, !llvm.loop !215

_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i358: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i345
  %tobool.not.i10.i.i354 = icmp eq ptr %155, null
  %172 = load i8, ptr %m_ownsMemory.i.i33, align 8, !range !159
  %tobool2.not.i.i.i356 = icmp eq i8 %172, 0
  %or.cond.i357 = select i1 %tobool.not.i10.i.i354, i1 true, i1 %tobool2.not.i.i.i356
  br i1 %or.cond.i357, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i367, label %if.then3.i.i.i364

if.then.i11.i.i362:                               ; preds = %for.body.i.i.i353.prol.loopexit, %for.body.i.i.i353, %middle.block462
  %.old.i360 = load i8, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24, !range !159, !noundef !192
  %tobool2.not.i.i.old.i361 = icmp eq i8 %.old.i360, 0
  br i1 %tobool2.not.i.i.old.i361, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i367, label %if.then3.i.i.i364

if.then3.i.i.i364:                                ; preds = %if.then.i11.i.i362, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i358
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %155)
  %.pre7.pre.pre.i363 = load i32, ptr %m_size.i.i37, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i367

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i367: ; preds = %if.then3.i.i.i364, %if.then.i11.i.i362, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i358
  %.pre7.i365 = phi i32 [ %156, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i358 ], [ %.pre7.pre.pre.i363, %if.then3.i.i.i364 ], [ %156, %if.then.i11.i.i362 ]
  store i8 1, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24
  store ptr %retval.0.i.i.i342, ptr %m_data.i.i31, align 8, !tbaa !27
  store i32 %cond.i.i332, ptr %m_capacity.i.i39, align 8, !tbaa !29
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit372

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit372: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit326, %if.then.i334, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i367
  %173 = phi ptr [ %retval.0.i.i.i342, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i367 ], [ %153, %if.then.i334 ], [ %153, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit326 ]
  %174 = phi i32 [ %.pre7.i365, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i367 ], [ %152, %if.then.i334 ], [ %inc.i325, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit326 ]
  %idxprom.i369 = sext i32 %174 to i64
  %arrayidx.i370 = getelementptr inbounds i32, ptr %173, i64 %idxprom.i369
  store i32 3, ptr %arrayidx.i370, align 4, !tbaa !185
  %inc.i371 = add nsw i32 %174, 1
  store i32 %inc.i371, ptr %m_size.i.i37, align 4, !tbaa !28
  %175 = load i32, ptr %m_size.i.i46, align 4, !tbaa !28
  %176 = load i32, ptr %m_capacity.i.i48, align 8, !tbaa !29
  %cmp.i375 = icmp eq i32 %175, %176
  br i1 %cmp.i375, label %if.then.i380, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit418

if.then.i380:                                     ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit372
  %tobool.not.i.i376 = icmp eq i32 %175, 0
  %mul.i.i377 = shl nsw i32 %175, 1
  %cond.i.i378 = select i1 %tobool.not.i.i376, i32 1, i32 %mul.i.i377
  %cmp.i.i379 = icmp slt i32 %175, %cond.i.i378
  br i1 %cmp.i.i379, label %if.then.i.i382, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit418

if.then.i.i382:                                   ; preds = %if.then.i380
  %tobool.not.i.i.i381 = icmp eq i32 %cond.i.i378, 0
  br i1 %tobool.not.i.i.i381, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i391, label %if.then.i.i.i387

if.then.i.i.i387:                                 ; preds = %if.then.i.i382
  %conv.i.i.i.i383 = sext i32 %cond.i.i378 to i64
  %mul.i.i.i.i384 = shl nsw i64 %conv.i.i.i.i383, 2
  %call.i.i.i.i385 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i384, i32 noundef 16)
  %.pre.i386 = load i32, ptr %m_size.i.i46, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i391

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i391: ; preds = %if.then.i.i.i387, %if.then.i.i382
  %177 = phi i32 [ %.pre.i386, %if.then.i.i.i387 ], [ %175, %if.then.i.i382 ]
  %retval.0.i.i.i388 = phi ptr [ %call.i.i.i.i385, %if.then.i.i.i387 ], [ null, %if.then.i.i382 ]
  %cmp7.i.i.i389 = icmp sgt i32 %177, 0
  %178 = load ptr, ptr %m_data.i.i40, align 8, !tbaa !27
  br i1 %cmp7.i.i.i389, label %for.body.lr.ph.i.i.i393, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i404

for.body.lr.ph.i.i.i393:                          ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i391
  %179 = ptrtoint ptr %178 to i64
  %retval.0.i.i.i388476 = ptrtoint ptr %retval.0.i.i.i388 to i64
  %wide.trip.count.i.i.i392 = zext i32 %177 to i64
  %min.iters.check480 = icmp ult i32 %177, 8
  %180 = sub i64 %retval.0.i.i.i388476, %179
  %diff.check477 = icmp ult i64 %180, 32
  %or.cond562 = select i1 %min.iters.check480, i1 true, i1 %diff.check477
  br i1 %or.cond562, label %for.body.i.i.i399.preheader, label %vector.ph481

vector.ph481:                                     ; preds = %for.body.lr.ph.i.i.i393
  %n.vec483 = and i64 %wide.trip.count.i.i.i392, 4294967288
  br label %vector.body486

vector.body486:                                   ; preds = %vector.body486, %vector.ph481
  %index487 = phi i64 [ 0, %vector.ph481 ], [ %index.next490, %vector.body486 ]
  %181 = getelementptr inbounds i32, ptr %retval.0.i.i.i388, i64 %index487
  %182 = getelementptr inbounds i32, ptr %178, i64 %index487
  %wide.load488 = load <4 x i32>, ptr %182, align 4, !tbaa !185
  %183 = getelementptr inbounds i32, ptr %182, i64 4
  %wide.load489 = load <4 x i32>, ptr %183, align 4, !tbaa !185
  store <4 x i32> %wide.load488, ptr %181, align 4, !tbaa !185
  %184 = getelementptr inbounds i32, ptr %181, i64 4
  store <4 x i32> %wide.load489, ptr %184, align 4, !tbaa !185
  %index.next490 = add nuw i64 %index487, 8
  %185 = icmp eq i64 %index.next490, %n.vec483
  br i1 %185, label %middle.block478, label %vector.body486, !llvm.loop !216

middle.block478:                                  ; preds = %vector.body486
  %cmp.n485 = icmp eq i64 %n.vec483, %wide.trip.count.i.i.i392
  br i1 %cmp.n485, label %if.then.i11.i.i408, label %for.body.i.i.i399.preheader

for.body.i.i.i399.preheader:                      ; preds = %for.body.lr.ph.i.i.i393, %middle.block478
  %indvars.iv.i.i.i394.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i393 ], [ %n.vec483, %middle.block478 ]
  %186 = xor i64 %indvars.iv.i.i.i394.ph, -1
  %187 = add nsw i64 %186, %wide.trip.count.i.i.i392
  %xtraiter572 = and i64 %wide.trip.count.i.i.i392, 3
  %lcmp.mod573.not = icmp eq i64 %xtraiter572, 0
  br i1 %lcmp.mod573.not, label %for.body.i.i.i399.prol.loopexit, label %for.body.i.i.i399.prol

for.body.i.i.i399.prol:                           ; preds = %for.body.i.i.i399.preheader, %for.body.i.i.i399.prol
  %indvars.iv.i.i.i394.prol = phi i64 [ %indvars.iv.next.i.i.i397.prol, %for.body.i.i.i399.prol ], [ %indvars.iv.i.i.i394.ph, %for.body.i.i.i399.preheader ]
  %prol.iter574 = phi i64 [ %prol.iter574.next, %for.body.i.i.i399.prol ], [ 0, %for.body.i.i.i399.preheader ]
  %arrayidx.i.i.i395.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i388, i64 %indvars.iv.i.i.i394.prol
  %arrayidx3.i.i.i396.prol = getelementptr inbounds i32, ptr %178, i64 %indvars.iv.i.i.i394.prol
  %188 = load i32, ptr %arrayidx3.i.i.i396.prol, align 4, !tbaa !185
  store i32 %188, ptr %arrayidx.i.i.i395.prol, align 4, !tbaa !185
  %indvars.iv.next.i.i.i397.prol = add nuw nsw i64 %indvars.iv.i.i.i394.prol, 1
  %prol.iter574.next = add i64 %prol.iter574, 1
  %prol.iter574.cmp.not = icmp eq i64 %prol.iter574.next, %xtraiter572
  br i1 %prol.iter574.cmp.not, label %for.body.i.i.i399.prol.loopexit, label %for.body.i.i.i399.prol, !llvm.loop !217

for.body.i.i.i399.prol.loopexit:                  ; preds = %for.body.i.i.i399.prol, %for.body.i.i.i399.preheader
  %indvars.iv.i.i.i394.unr = phi i64 [ %indvars.iv.i.i.i394.ph, %for.body.i.i.i399.preheader ], [ %indvars.iv.next.i.i.i397.prol, %for.body.i.i.i399.prol ]
  %189 = icmp ult i64 %187, 3
  br i1 %189, label %if.then.i11.i.i408, label %for.body.i.i.i399

for.body.i.i.i399:                                ; preds = %for.body.i.i.i399.prol.loopexit, %for.body.i.i.i399
  %indvars.iv.i.i.i394 = phi i64 [ %indvars.iv.next.i.i.i397.3, %for.body.i.i.i399 ], [ %indvars.iv.i.i.i394.unr, %for.body.i.i.i399.prol.loopexit ]
  %arrayidx.i.i.i395 = getelementptr inbounds i32, ptr %retval.0.i.i.i388, i64 %indvars.iv.i.i.i394
  %arrayidx3.i.i.i396 = getelementptr inbounds i32, ptr %178, i64 %indvars.iv.i.i.i394
  %190 = load i32, ptr %arrayidx3.i.i.i396, align 4, !tbaa !185
  store i32 %190, ptr %arrayidx.i.i.i395, align 4, !tbaa !185
  %indvars.iv.next.i.i.i397 = add nuw nsw i64 %indvars.iv.i.i.i394, 1
  %arrayidx.i.i.i395.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i388, i64 %indvars.iv.next.i.i.i397
  %arrayidx3.i.i.i396.1 = getelementptr inbounds i32, ptr %178, i64 %indvars.iv.next.i.i.i397
  %191 = load i32, ptr %arrayidx3.i.i.i396.1, align 4, !tbaa !185
  store i32 %191, ptr %arrayidx.i.i.i395.1, align 4, !tbaa !185
  %indvars.iv.next.i.i.i397.1 = add nuw nsw i64 %indvars.iv.i.i.i394, 2
  %arrayidx.i.i.i395.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i388, i64 %indvars.iv.next.i.i.i397.1
  %arrayidx3.i.i.i396.2 = getelementptr inbounds i32, ptr %178, i64 %indvars.iv.next.i.i.i397.1
  %192 = load i32, ptr %arrayidx3.i.i.i396.2, align 4, !tbaa !185
  store i32 %192, ptr %arrayidx.i.i.i395.2, align 4, !tbaa !185
  %indvars.iv.next.i.i.i397.2 = add nuw nsw i64 %indvars.iv.i.i.i394, 3
  %arrayidx.i.i.i395.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i388, i64 %indvars.iv.next.i.i.i397.2
  %arrayidx3.i.i.i396.3 = getelementptr inbounds i32, ptr %178, i64 %indvars.iv.next.i.i.i397.2
  %193 = load i32, ptr %arrayidx3.i.i.i396.3, align 4, !tbaa !185
  store i32 %193, ptr %arrayidx.i.i.i395.3, align 4, !tbaa !185
  %indvars.iv.next.i.i.i397.3 = add nuw nsw i64 %indvars.iv.i.i.i394, 4
  %exitcond.not.i.i.i398.3 = icmp eq i64 %indvars.iv.next.i.i.i397.3, %wide.trip.count.i.i.i392
  br i1 %exitcond.not.i.i.i398.3, label %if.then.i11.i.i408, label %for.body.i.i.i399, !llvm.loop !218

_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i404: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i391
  %tobool.not.i10.i.i400 = icmp eq ptr %178, null
  %194 = load i8, ptr %m_ownsMemory.i.i42, align 8, !range !159
  %tobool2.not.i.i.i402 = icmp eq i8 %194, 0
  %or.cond.i403 = select i1 %tobool.not.i10.i.i400, i1 true, i1 %tobool2.not.i.i.i402
  br i1 %or.cond.i403, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i413, label %if.then3.i.i.i410

if.then.i11.i.i408:                               ; preds = %for.body.i.i.i399.prol.loopexit, %for.body.i.i.i399, %middle.block478
  %.old.i406 = load i8, ptr %m_ownsMemory.i.i42, align 8, !tbaa !24, !range !159, !noundef !192
  %tobool2.not.i.i.old.i407 = icmp eq i8 %.old.i406, 0
  br i1 %tobool2.not.i.i.old.i407, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i413, label %if.then3.i.i.i410

if.then3.i.i.i410:                                ; preds = %if.then.i11.i.i408, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i404
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %178)
  %.pre7.pre.pre.i409 = load i32, ptr %m_size.i.i46, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i413

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i413: ; preds = %if.then3.i.i.i410, %if.then.i11.i.i408, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i404
  %.pre7.i411 = phi i32 [ %177, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i404 ], [ %.pre7.pre.pre.i409, %if.then3.i.i.i410 ], [ %177, %if.then.i11.i.i408 ]
  store i8 1, ptr %m_ownsMemory.i.i42, align 8, !tbaa !24
  store ptr %retval.0.i.i.i388, ptr %m_data.i.i40, align 8, !tbaa !27
  store i32 %cond.i.i378, ptr %m_capacity.i.i48, align 8, !tbaa !29
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit418

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit418: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit372, %if.then.i380, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i413
  %195 = phi i32 [ %.pre7.i411, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i413 ], [ %175, %if.then.i380 ], [ %175, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit372 ]
  %196 = load ptr, ptr %m_data.i.i40, align 8, !tbaa !27
  br label %sw.epilog.sink.split

sw.epilog.sink.split:                             ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i187, %if.then.i154, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit146, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit418
  %.sink424 = phi i32 [ %195, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit418 ], [ %.pre7.i185, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i187 ], [ %68, %if.then.i154 ], [ %inc.i145, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit146 ]
  %.sink423 = phi ptr [ %196, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit418 ], [ %retval.0.i.i.i162, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i187 ], [ %69, %if.then.i154 ], [ %69, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit146 ]
  %m_size.i.i46.sink = phi ptr [ %m_size.i.i46, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit418 ], [ %m_size.i.i37, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i187 ], [ %m_size.i.i37, %if.then.i154 ], [ %m_size.i.i37, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit146 ]
  %idxprom.i415 = sext i32 %.sink424 to i64
  %arrayidx.i416 = getelementptr inbounds i32, ptr %.sink423, i64 %idxprom.i415
  store i32 0, ptr %arrayidx.i416, align 4, !tbaa !185
  %inc.i417 = add nsw i32 %.sink424, 1
  store i32 %inc.i417, ptr %m_size.i.i46.sink, align 4, !tbaa !28
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit49
  ret void
}

; Function Attrs: uwtable
define dso_local noundef ptr @_ZN10btSoftBody14appendMaterialEv(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this) local_unnamed_addr #4 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %call = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 24, i32 noundef 16)
  store ptr null, ptr %call, align 8, !tbaa !174
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !120
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !119
  %2 = load ptr, ptr %1, align 8, !tbaa !219
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %call, ptr noundef nonnull align 8 dereferenceable(24) %2, i64 24, i1 false)
  br label %if.end

if.else:                                          ; preds = %entry
  %3 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %3, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_.exit, !prof !173

init.check.i:                                     ; preds = %if.else
  %4 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_E9zerodummy) #38
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %_ZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_.exit, label %init.i

init.i:                                           ; preds = %init.check.i
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_E9zerodummy, align 8, !tbaa !174
  %5 = tail call ptr @llvm.invariant.start.p0(i64 24, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_E9zerodummy)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_.exit

_ZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_.exit: ; preds = %if.else, %init.check.i, %init.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %call, ptr noundef nonnull align 8 dereferenceable(24) @_ZZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_E9zerodummy, i64 24, i1 false)
  br label %if.end

if.end:                                           ; preds = %_ZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_.exit, %if.then
  %6 = load i32, ptr %m_size.i, align 4, !tbaa !120
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 3
  %7 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !121
  %cmp.i = icmp eq i32 %6, %7
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE9push_backERKS2_.exit

if.then.i:                                        ; preds = %if.end
  %tobool.not.i.i = icmp eq i32 %6, 0
  %mul.i.i = shl nsw i32 %6, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %6, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE9push_backERKS2_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 3
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i, align 4, !tbaa !120
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %8 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %6, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %8, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %wide.trip.count.i.i.i = zext i32 %8 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 3
  %9 = icmp ult i32 %8, 4
  br i1 %9, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967292
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.3, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %10 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !119
  %arrayidx3.i.i.i = getelementptr inbounds ptr, ptr %10, i64 %indvars.iv.i.i.i
  %11 = load ptr, ptr %arrayidx3.i.i.i, align 8, !tbaa !219
  store ptr %11, ptr %arrayidx.i.i.i, align 8, !tbaa !219
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %12 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !119
  %arrayidx3.i.i.i.1 = getelementptr inbounds ptr, ptr %12, i64 %indvars.iv.next.i.i.i
  %13 = load ptr, ptr %arrayidx3.i.i.i.1, align 8, !tbaa !219
  store ptr %13, ptr %arrayidx.i.i.i.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.1 = or i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %14 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !119
  %arrayidx3.i.i.i.2 = getelementptr inbounds ptr, ptr %14, i64 %indvars.iv.next.i.i.i.1
  %15 = load ptr, ptr %arrayidx3.i.i.i.2, align 8, !tbaa !219
  store ptr %15, ptr %arrayidx.i.i.i.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.2 = or i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %16 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !119
  %arrayidx3.i.i.i.3 = getelementptr inbounds ptr, ptr %16, i64 %indvars.iv.next.i.i.i.2
  %17 = load ptr, ptr %arrayidx3.i.i.i.3, align 8, !tbaa !219
  store ptr %17, ptr %arrayidx.i.i.i.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil
  %indvars.iv.i.i.i.epil = phi i64 [ %indvars.iv.next.i.i.i.epil, %for.body.i.i.i.epil ], [ %indvars.iv.i.i.i.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.i.i.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %arrayidx.i.i.i.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.epil
  %18 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !119
  %arrayidx3.i.i.i.epil = getelementptr inbounds ptr, ptr %18, i64 %indvars.iv.i.i.i.epil
  %19 = load ptr, ptr %arrayidx3.i.i.i.epil, align 8, !tbaa !219
  store ptr %19, ptr %arrayidx.i.i.i.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.epil = add nuw nsw i64 %indvars.iv.i.i.i.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil, !llvm.loop !220

_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %20 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !119
  %tobool.not.i10.i.i = icmp eq ptr %20, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 6
  %21 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %21, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %20)
  %.pre7.pre.i = load i32, ptr %m_size.i, align 4, !tbaa !120
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i
  %.pre7.i = phi i32 [ %.pre7.pre.i, %if.then3.i.i.i ], [ %8, %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i ]
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !118
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !119
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !121
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE9push_backERKS2_.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE9push_backERKS2_.exit: ; preds = %if.end, %if.then.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE10deallocateEv.exit.i.i
  %22 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE10deallocateEv.exit.i.i ], [ %6, %if.then.i ], [ %6, %if.end ]
  %m_data.i6 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %23 = load ptr, ptr %m_data.i6, align 8, !tbaa !119
  %idxprom.i = sext i32 %22 to i64
  %arrayidx.i = getelementptr inbounds ptr, ptr %23, i64 %idxprom.i
  store ptr %call, ptr %arrayidx.i, align 8, !tbaa !219
  %inc.i = add nsw i32 %22, 1
  store i32 %inc.i, ptr %m_size.i, align 4, !tbaa !120
  ret ptr %call
}

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #6

declare noundef ptr @_ZN6btDbvt6insertERK12btDbvtAabbMmPv(ptr noundef nonnull align 8 dereferenceable(64), ptr noundef nonnull align 4 dereferenceable(32), ptr noundef) local_unnamed_addr #1

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody12updateBoundsEv(ptr noundef nonnull align 8 dereferenceable(1496) %this) local_unnamed_addr #0 align 2 {
entry:
  %m_ndbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  %0 = load ptr, ptr %m_ndbvt, align 8, !tbaa !162
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %mx.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %0, i64 0, i32 1
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %1 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable = load ptr, ptr %1, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 11
  %2 = load ptr, ptr %vfn, align 8
  %call9 = tail call noundef float %2(ptr noundef nonnull align 8 dereferenceable(24) %1)
  %3 = load <2 x float>, ptr %0, align 4, !tbaa !137
  %4 = insertelement <2 x float> poison, float %call9, i64 0
  %5 = shufflevector <2 x float> %4, <2 x float> poison, <2 x i32> zeroinitializer
  %6 = fsub <2 x float> %3, %5
  %arrayidx11.i = getelementptr inbounds [4 x float], ptr %0, i64 0, i64 2
  %7 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %sub14.i = fsub float %7, %call9
  %retval.sroa.3.12.vec.insert.i45 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i, i64 0
  %m_bounds = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  store <2 x float> %6, ptr %m_bounds, align 4, !tbaa.struct !163
  %ref.tmp12.sroa.4.0.arrayidx.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 0, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i45, ptr %ref.tmp12.sroa.4.0.arrayidx.sroa_idx, align 4, !tbaa.struct !165
  %8 = load <2 x float>, ptr %mx.i, align 4, !tbaa !137
  %9 = fadd <2 x float> %5, %8
  %arrayidx11.i50 = getelementptr inbounds %struct.btDbvtAabbMm, ptr %0, i64 0, i32 1, i32 0, i64 2
  %10 = load float, ptr %arrayidx11.i50, align 4, !tbaa !137
  %add14.i = fadd float %call9, %10
  %retval.sroa.3.12.vec.insert.i54 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i, i64 0
  %arrayidx19 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1
  store <2 x float> %9, ptr %arrayidx19, align 4, !tbaa.struct !163
  %ref.tmp15.sroa.4.0.arrayidx19.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i54, ptr %ref.tmp15.sroa.4.0.arrayidx19.sroa_idx, align 4, !tbaa.struct !165
  %m_broadphaseHandle.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 8
  %11 = load ptr, ptr %m_broadphaseHandle.i, align 8, !tbaa !166
  %cmp.not = icmp eq ptr %11, null
  br i1 %cmp.not, label %if.end38, label %if.then21

if.then21:                                        ; preds = %if.then
  %m_worldInfo = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 7
  %12 = load ptr, ptr %m_worldInfo, align 8, !tbaa !42
  %m_broadphase = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %12, i64 0, i32 4
  %13 = load ptr, ptr %m_broadphase, align 8, !tbaa !167
  %m_dispatcher = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %12, i64 0, i32 5
  %14 = load ptr, ptr %m_dispatcher, align 8, !tbaa !172
  %vtable28 = load ptr, ptr %13, align 8, !tbaa !5
  %vfn29 = getelementptr inbounds ptr, ptr %vtable28, i64 4
  %15 = load ptr, ptr %vfn29, align 8
  tail call void %15(ptr noundef nonnull align 8 dereferenceable(8) %13, ptr noundef nonnull %11, ptr noundef nonnull align 4 dereferenceable(16) %m_bounds, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx19, ptr noundef %14)
  br label %if.end38

if.else:                                          ; preds = %entry
  %m_bounds34 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %m_bounds34, i8 0, i64 32, i1 false)
  br label %if.end38

if.end38:                                         ; preds = %if.then, %if.then21, %if.else
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIiED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !131
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIiE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIiE5clearEv.exit

_ZN20btAlignedObjectArrayIiE5clearEv.exit:        ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !130
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !131
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !132
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !133
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(ptr noundef %0) local_unnamed_addr #7 comdat {
  %2 = tail call ptr @__cxa_begin_catch(ptr %0) #38
  tail call void @_ZSt9terminatev() #39
  unreachable
}

declare ptr @__cxa_begin_catch(ptr) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIbED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.76, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !127
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.76, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIbE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIbE5clearEv.exit

_ZN20btAlignedObjectArrayIbE5clearEv.exit:        ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.76, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !126
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !127
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !128
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.76, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !129
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.72, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !123
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.72, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE5clearEv.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.72, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !122
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !123
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !124
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.72, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !125
  ret void
}

declare void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64)) unnamed_addr #1

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.64, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !119
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.64, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE5clearEv.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.64, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !118
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !119
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !120
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.64, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !121
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.56, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !115
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.56, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE5clearEv.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.56, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !114
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !115
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !116
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.56, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !117
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.52, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !111
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.52, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.52, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !110
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !111
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !112
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.52, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !113
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !107
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !106
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !107
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !108
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !109
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !103
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !102
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !103
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !104
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !105
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.36, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !99
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.36, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.36, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !98
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !99
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !100
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.36, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !101
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.32, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !95
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.32, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.32, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !94
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !95
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !96
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.32, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !97
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.28, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !91
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.28, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.28, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !90
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !91
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !92
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.28, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !93
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.24, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.24, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.24, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !86
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !87
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !88
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.24, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !89
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.20, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !83
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.20, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.20, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !82
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !83
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !84
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.20, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !85
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody4PoseD2Ev(ptr noundef nonnull align 8 dereferenceable(232) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %m_data.i.i.i = getelementptr inbounds %"struct.btSoftBody::Pose", ptr %this, i64 0, i32 4, i32 5
  %0 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !39
  %tobool.not.i.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %"struct.btSoftBody::Pose", ptr %this, i64 0, i32 4, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %1, 0
  %or.cond.i.i = select i1 %tobool.not.i.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %invoke.cont, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %entry
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry, %if.then3.i.i.i
  %m_size.i.i.i = getelementptr inbounds %"struct.btSoftBody::Pose", ptr %this, i64 0, i32 4, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !36
  store ptr null, ptr %m_data.i.i.i, align 8, !tbaa !39
  store i32 0, ptr %m_size.i.i.i, align 4, !tbaa !40
  %m_capacity.i.i.i = getelementptr inbounds %"struct.btSoftBody::Pose", ptr %this, i64 0, i32 4, i32 3
  store i32 0, ptr %m_capacity.i.i.i, align 8, !tbaa !41
  %m_data.i.i.i5 = getelementptr inbounds %"struct.btSoftBody::Pose", ptr %this, i64 0, i32 3, i32 5
  %2 = load ptr, ptr %m_data.i.i.i5, align 8, !tbaa !33
  %tobool.not.i.i.i6 = icmp eq ptr %2, null
  %m_ownsMemory.i.i.i7 = getelementptr inbounds %"struct.btSoftBody::Pose", ptr %this, i64 0, i32 3, i32 6
  %3 = load i8, ptr %m_ownsMemory.i.i.i7, align 8, !range !159
  %tobool2.not.i.i.i8 = icmp eq i8 %3, 0
  %or.cond.i.i9 = select i1 %tobool.not.i.i.i6, i1 true, i1 %tobool2.not.i.i.i8
  br i1 %or.cond.i.i9, label %_ZN20btAlignedObjectArrayI9btVector3ED2Ev.exit, label %if.then3.i.i.i10

if.then3.i.i.i10:                                 ; preds = %invoke.cont
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %2)
  br label %_ZN20btAlignedObjectArrayI9btVector3ED2Ev.exit

_ZN20btAlignedObjectArrayI9btVector3ED2Ev.exit:   ; preds = %invoke.cont, %if.then3.i.i.i10
  %m_size.i.i.i11 = getelementptr inbounds %"struct.btSoftBody::Pose", ptr %this, i64 0, i32 3, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i7, align 8, !tbaa !30
  store ptr null, ptr %m_data.i.i.i5, align 8, !tbaa !33
  store i32 0, ptr %m_size.i.i.i11, align 4, !tbaa !34
  %m_capacity.i.i.i12 = getelementptr inbounds %"struct.btSoftBody::Pose", ptr %this, i64 0, i32 3, i32 3
  store i32 0, ptr %m_capacity.i.i.i12, align 8, !tbaa !35
  ret void

lpad:                                             ; preds = %if.then3.i.i.i
  %4 = landingpad { ptr, i32 }
          cleanup
  %m_pos2 = getelementptr inbounds %"struct.btSoftBody::Pose", ptr %this, i64 0, i32 3
  invoke void @_ZN20btAlignedObjectArrayI9btVector3ED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_pos2)
          to label %eh.resume unwind label %terminate.lpad

eh.resume:                                        ; preds = %lpad
  resume { ptr, i32 } %4

terminate.lpad:                                   ; preds = %lpad
  %5 = landingpad { ptr, i32 }
          catch ptr null
  %6 = extractvalue { ptr, i32 } %5, 0
  tail call void @__clang_call_terminate(ptr %6) #39
  unreachable
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody6ConfigD2Ev(ptr noundef nonnull align 8 dereferenceable(200) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %m_data.i.i.i = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 28, i32 5
  %0 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !27
  %tobool.not.i.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 28, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %1, 0
  %or.cond.i.i = select i1 %tobool.not.i.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %invoke.cont, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %entry
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry, %if.then3.i.i.i
  %m_size.i.i.i = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 28, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !24
  store ptr null, ptr %m_data.i.i.i, align 8, !tbaa !27
  store i32 0, ptr %m_size.i.i.i, align 4, !tbaa !28
  %m_capacity.i.i.i = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 28, i32 3
  store i32 0, ptr %m_capacity.i.i.i, align 8, !tbaa !29
  %m_data.i.i.i10 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 27, i32 5
  %2 = load ptr, ptr %m_data.i.i.i10, align 8, !tbaa !27
  %tobool.not.i.i.i11 = icmp eq ptr %2, null
  %m_ownsMemory.i.i.i12 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 27, i32 6
  %3 = load i8, ptr %m_ownsMemory.i.i.i12, align 8, !range !159
  %tobool2.not.i.i.i13 = icmp eq i8 %3, 0
  %or.cond.i.i14 = select i1 %tobool.not.i.i.i11, i1 true, i1 %tobool2.not.i.i.i13
  br i1 %or.cond.i.i14, label %invoke.cont3, label %if.then3.i.i.i15

if.then3.i.i.i15:                                 ; preds = %invoke.cont
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %2)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont, %if.then3.i.i.i15
  %m_size.i.i.i16 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 27, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i12, align 8, !tbaa !24
  store ptr null, ptr %m_data.i.i.i10, align 8, !tbaa !27
  store i32 0, ptr %m_size.i.i.i16, align 4, !tbaa !28
  %m_capacity.i.i.i17 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 27, i32 3
  store i32 0, ptr %m_capacity.i.i.i17, align 8, !tbaa !29
  %m_data.i.i.i20 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 26, i32 5
  %4 = load ptr, ptr %m_data.i.i.i20, align 8, !tbaa !21
  %tobool.not.i.i.i21 = icmp eq ptr %4, null
  %m_ownsMemory.i.i.i22 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 26, i32 6
  %5 = load i8, ptr %m_ownsMemory.i.i.i22, align 8, !range !159
  %tobool2.not.i.i.i23 = icmp eq i8 %5, 0
  %or.cond.i.i24 = select i1 %tobool.not.i.i.i21, i1 true, i1 %tobool2.not.i.i.i23
  br i1 %or.cond.i.i24, label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EED2Ev.exit, label %if.then3.i.i.i25

if.then3.i.i.i25:                                 ; preds = %invoke.cont3
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %4)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EED2Ev.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EED2Ev.exit: ; preds = %invoke.cont3, %if.then3.i.i.i25
  %m_size.i.i.i26 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 26, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i22, align 8, !tbaa !18
  store ptr null, ptr %m_data.i.i.i20, align 8, !tbaa !21
  store i32 0, ptr %m_size.i.i.i26, align 4, !tbaa !22
  %m_capacity.i.i.i27 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 26, i32 3
  store i32 0, ptr %m_capacity.i.i.i27, align 8, !tbaa !23
  ret void

lpad:                                             ; preds = %if.then3.i.i.i
  %6 = landingpad { ptr, i32 }
          cleanup
  %m_psequence4 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 27
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_psequence4)
          to label %ehcleanup unwind label %terminate.lpad

lpad2:                                            ; preds = %if.then3.i.i.i15
  %7 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad, %lpad2
  %.pn = phi { ptr, i32 } [ %7, %lpad2 ], [ %6, %lpad ]
  %m_vsequence6 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 26
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_vsequence6)
          to label %eh.resume unwind label %terminate.lpad

eh.resume:                                        ; preds = %ehcleanup
  resume { ptr, i32 } %.pn

terminate.lpad:                                   ; preds = %ehcleanup, %lpad
  %8 = landingpad { ptr, i32 }
          catch ptr null
  %9 = extractvalue { ptr, i32 } %8, 0
  tail call void @__clang_call_terminate(ptr %9) #39
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIP17btCollisionObjectED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !15
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIP17btCollisionObjectE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIP17btCollisionObjectE5clearEv.exit

_ZN20btAlignedObjectArrayIP17btCollisionObjectE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !8
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !15
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !16
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !17
  ret void
}

declare void @_ZN17btCollisionObjectD2Ev(ptr noundef nonnull align 8 dereferenceable(280)) unnamed_addr #1

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBodyD2Ev(ptr noundef nonnull align 8 dereferenceable(1496) %this) unnamed_addr #4 align 2 personality ptr @__gxx_personality_v0 {
entry:
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTV10btSoftBody, i64 0, inrange i32 0, i64 2), ptr %this, align 8, !tbaa !5
  %m_collisionShape = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %0 = load ptr, ptr %m_collisionShape, align 8, !tbaa !157
  %isnull = icmp eq ptr %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %vtable = load ptr, ptr %0, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 1
  %1 = load ptr, ptr %vfn, align 8
  invoke void %1(ptr noundef nonnull align 8 dereferenceable(24) %0)
          to label %delete.end unwind label %lpad

delete.end:                                       ; preds = %delete.notnull, %entry
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  %2 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp3.i = icmp sgt i32 %2, 0
  br i1 %cmp3.i, label %while.body.lr.ph.i, label %_ZN10btSoftBody15releaseClustersEv.exit

while.body.lr.ph.i:                               ; preds = %delete.end
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %m_cdbvt.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  br label %while.body.i

while.body.i:                                     ; preds = %_ZN10btSoftBody14releaseClusterEi.exit.i, %while.body.lr.ph.i
  %3 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !123
  %4 = load ptr, ptr %3, align 8, !tbaa !219
  %m_leaf.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 15
  %5 = load ptr, ptr %m_leaf.i.i, align 8, !tbaa !221
  %tobool.not.i.i = icmp eq ptr %5, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %while.body.i
  invoke void @_ZN6btDbvt6removeEP10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt.i.i, ptr noundef nonnull %5)
          to label %if.end.i.i unwind label %lpad2.loopexit.split-lp.loopexit.split-lp

if.end.i.i:                                       ; preds = %if.then.i.i, %while.body.i
  invoke void @_ZN10btSoftBody7ClusterD2Ev(ptr noundef nonnull align 8 dereferenceable(424) %4)
          to label %.noexc145 unwind label %lpad2.loopexit.split-lp.loopexit.split-lp

.noexc145:                                        ; preds = %if.end.i.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %4)
          to label %.noexc146 unwind label %lpad2.loopexit.split-lp.loopexit.split-lp

.noexc146:                                        ; preds = %.noexc145
  %6 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp8.i.i.i.i = icmp sgt i32 %6, 0
  br i1 %cmp8.i.i.i.i, label %for.body.lr.ph.i.i.i.i, label %_ZN10btSoftBody15releaseClustersEv.exit

for.body.lr.ph.i.i.i.i:                           ; preds = %.noexc146
  %7 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !123
  %wide.trip.count.i.i.i.i = zext i32 %6 to i64
  br label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.inc.i.i.i.i, %for.body.lr.ph.i.i.i.i
  %indvars.iv.i.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.i ], [ %indvars.iv.next.i.i.i.i, %for.inc.i.i.i.i ]
  %arrayidx.i.i.i.i = getelementptr inbounds ptr, ptr %7, i64 %indvars.iv.i.i.i.i
  %8 = load ptr, ptr %arrayidx.i.i.i.i, align 8, !tbaa !219
  %cmp3.i.i.i.i = icmp eq ptr %8, %4
  br i1 %cmp3.i.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i, label %for.inc.i.i.i.i

for.inc.i.i.i.i:                                  ; preds = %for.body.i.i.i.i
  %indvars.iv.next.i.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i.i, 1
  %exitcond.not.i.i.i.i = icmp eq i64 %indvars.iv.next.i.i.i.i, %wide.trip.count.i.i.i.i
  br i1 %exitcond.not.i.i.i.i, label %_ZN10btSoftBody14releaseClusterEi.exit.i, label %for.body.i.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i: ; preds = %for.body.i.i.i.i
  %9 = trunc i64 %indvars.iv.i.i.i.i to i32
  %cmp.i.i.i = icmp sgt i32 %6, %9
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN10btSoftBody14releaseClusterEi.exit.i

if.then.i.i.i:                                    ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i
  %sub.i.i.i = add nsw i32 %6, -1
  %sext.i.i.i = shl i64 %indvars.iv.i.i.i.i, 32
  %idxprom.i.i.i.i = ashr exact i64 %sext.i.i.i, 32
  %arrayidx.i7.i.i.i = getelementptr inbounds ptr, ptr %7, i64 %idxprom.i.i.i.i
  %10 = load ptr, ptr %arrayidx.i7.i.i.i, align 8, !tbaa !219
  %idxprom3.i.i.i.i = sext i32 %sub.i.i.i to i64
  %arrayidx4.i.i.i.i = getelementptr inbounds ptr, ptr %7, i64 %idxprom3.i.i.i.i
  %11 = load ptr, ptr %arrayidx4.i.i.i.i, align 8, !tbaa !219
  store ptr %11, ptr %arrayidx.i7.i.i.i, align 8, !tbaa !219
  %12 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !123
  %arrayidx10.i.i.i.i = getelementptr inbounds ptr, ptr %12, i64 %idxprom3.i.i.i.i
  store ptr %10, ptr %arrayidx10.i.i.i.i, align 8, !tbaa !219
  store i32 %sub.i.i.i, ptr %m_size.i.i, align 4, !tbaa !124
  br label %_ZN10btSoftBody14releaseClusterEi.exit.i

_ZN10btSoftBody14releaseClusterEi.exit.i:         ; preds = %for.inc.i.i.i.i, %if.then.i.i.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i
  %13 = phi i32 [ %6, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i ], [ %sub.i.i.i, %if.then.i.i.i ], [ %6, %for.inc.i.i.i.i ]
  %cmp.i = icmp sgt i32 %13, 0
  br i1 %cmp.i, label %while.body.i, label %_ZN10btSoftBody15releaseClustersEv.exit

_ZN10btSoftBody15releaseClustersEv.exit:          ; preds = %.noexc146, %_ZN10btSoftBody14releaseClusterEi.exit.i, %delete.end
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 2
  %14 = load i32, ptr %m_size.i, align 4, !tbaa !120
  %cmp277 = icmp sgt i32 %14, 0
  br i1 %cmp277, label %for.body.lr.ph, label %for.cond9.preheader

for.body.lr.ph:                                   ; preds = %_ZN10btSoftBody15releaseClustersEv.exit
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  br label %for.body

for.cond9.preheader:                              ; preds = %for.inc, %_ZN10btSoftBody15releaseClustersEv.exit
  %m_size.i147 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 2
  %15 = load i32, ptr %m_size.i147, align 4, !tbaa !116
  %cmp12279 = icmp sgt i32 %15, 0
  br i1 %cmp12279, label %for.body13.lr.ph, label %for.end20

for.body13.lr.ph:                                 ; preds = %for.cond9.preheader
  %m_data.i148 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  br label %for.body13

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %16 = load ptr, ptr %m_data.i, align 8, !tbaa !119
  %arrayidx.i = getelementptr inbounds ptr, ptr %16, i64 %indvars.iv
  %17 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef %17)
          to label %for.inc unwind label %lpad2.loopexit.split-lp.loopexit

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %18 = load i32, ptr %m_size.i, align 4, !tbaa !120
  %19 = sext i32 %18 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %19
  br i1 %cmp, label %for.body, label %for.cond9.preheader

lpad:                                             ; preds = %delete.notnull
  %20 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad2.loopexit:                                   ; preds = %for.body13
  %lpad.loopexit = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad2.loopexit.split-lp.loopexit:                 ; preds = %for.body
  %lpad.loopexit271 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad2.loopexit.split-lp.loopexit.split-lp:        ; preds = %.noexc145, %if.end.i.i, %if.then.i.i
  %lpad.loopexit.split-lp272 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

for.body13:                                       ; preds = %for.body13.lr.ph, %for.inc18
  %indvars.iv283 = phi i64 [ 0, %for.body13.lr.ph ], [ %indvars.iv.next284, %for.inc18 ]
  %21 = load ptr, ptr %m_data.i148, align 8, !tbaa !115
  %arrayidx.i150 = getelementptr inbounds ptr, ptr %21, i64 %indvars.iv283
  %22 = load ptr, ptr %arrayidx.i150, align 8, !tbaa !219
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef %22)
          to label %for.inc18 unwind label %lpad2.loopexit

for.inc18:                                        ; preds = %for.body13
  %indvars.iv.next284 = add nuw nsw i64 %indvars.iv283, 1
  %23 = load i32, ptr %m_size.i147, align 4, !tbaa !116
  %24 = sext i32 %23 to i64
  %cmp12 = icmp slt i64 %indvars.iv.next284, %24
  br i1 %cmp12, label %for.body13, label %for.end20

for.end20:                                        ; preds = %for.inc18, %for.cond9.preheader
  %m_data.i.i.i151 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27, i32 5
  %25 = load ptr, ptr %m_data.i.i.i151, align 8, !tbaa !131
  %tobool.not.i.i.i = icmp eq ptr %25, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27, i32 6
  %26 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %26, 0
  %or.cond.i.i = select i1 %tobool.not.i.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %invoke.cont22, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %for.end20
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %25)
          to label %invoke.cont22 unwind label %lpad21

invoke.cont22:                                    ; preds = %for.end20, %if.then3.i.i.i
  %m_size.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !130
  store ptr null, ptr %m_data.i.i.i151, align 8, !tbaa !131
  store i32 0, ptr %m_size.i.i.i, align 4, !tbaa !132
  %m_capacity.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27, i32 3
  store i32 0, ptr %m_capacity.i.i.i, align 8, !tbaa !133
  %m_data.i.i.i153 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 5
  %27 = load ptr, ptr %m_data.i.i.i153, align 8, !tbaa !127
  %tobool.not.i.i.i154 = icmp eq ptr %27, null
  %m_ownsMemory.i.i.i155 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 6
  %28 = load i8, ptr %m_ownsMemory.i.i.i155, align 8, !range !159
  %tobool2.not.i.i.i156 = icmp eq i8 %28, 0
  %or.cond.i.i157 = select i1 %tobool.not.i.i.i154, i1 true, i1 %tobool2.not.i.i.i156
  br i1 %or.cond.i.i157, label %invoke.cont26, label %if.then3.i.i.i158

if.then3.i.i.i158:                                ; preds = %invoke.cont22
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %27)
          to label %invoke.cont26 unwind label %lpad25

invoke.cont26:                                    ; preds = %invoke.cont22, %if.then3.i.i.i158
  %m_size.i.i.i159 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i155, align 8, !tbaa !126
  store ptr null, ptr %m_data.i.i.i153, align 8, !tbaa !127
  store i32 0, ptr %m_size.i.i.i159, align 4, !tbaa !128
  %m_capacity.i.i.i160 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 3
  store i32 0, ptr %m_capacity.i.i.i160, align 8, !tbaa !129
  %m_data.i.i.i162 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %29 = load ptr, ptr %m_data.i.i.i162, align 8, !tbaa !123
  %tobool.not.i.i.i163 = icmp eq ptr %29, null
  %m_ownsMemory.i.i.i164 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 6
  %30 = load i8, ptr %m_ownsMemory.i.i.i164, align 8, !range !159
  %tobool2.not.i.i.i165 = icmp eq i8 %30, 0
  %or.cond.i.i166 = select i1 %tobool.not.i.i.i163, i1 true, i1 %tobool2.not.i.i.i165
  br i1 %or.cond.i.i166, label %invoke.cont31, label %if.then3.i.i.i167

if.then3.i.i.i167:                                ; preds = %invoke.cont26
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %29)
          to label %invoke.cont31 unwind label %lpad30

invoke.cont31:                                    ; preds = %invoke.cont26, %if.then3.i.i.i167
  store i8 1, ptr %m_ownsMemory.i.i.i164, align 8, !tbaa !122
  store ptr null, ptr %m_data.i.i.i162, align 8, !tbaa !123
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !124
  %m_capacity.i.i.i169 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 3
  store i32 0, ptr %m_capacity.i.i.i169, align 8, !tbaa !125
  %m_cdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  invoke void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt)
          to label %invoke.cont36 unwind label %lpad35

invoke.cont36:                                    ; preds = %invoke.cont31
  %m_fdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 22
  invoke void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_fdbvt)
          to label %invoke.cont41 unwind label %lpad40

invoke.cont41:                                    ; preds = %invoke.cont36
  %m_ndbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  invoke void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt)
          to label %invoke.cont46 unwind label %lpad45

invoke.cont46:                                    ; preds = %invoke.cont41
  %m_data.i.i.i171 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %31 = load ptr, ptr %m_data.i.i.i171, align 8, !tbaa !119
  %tobool.not.i.i.i172 = icmp eq ptr %31, null
  %m_ownsMemory.i.i.i173 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 6
  %32 = load i8, ptr %m_ownsMemory.i.i.i173, align 8, !range !159
  %tobool2.not.i.i.i174 = icmp eq i8 %32, 0
  %or.cond.i.i175 = select i1 %tobool.not.i.i.i172, i1 true, i1 %tobool2.not.i.i.i174
  br i1 %or.cond.i.i175, label %invoke.cont52, label %if.then3.i.i.i176

if.then3.i.i.i176:                                ; preds = %invoke.cont46
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %31)
          to label %invoke.cont52 unwind label %lpad51

invoke.cont52:                                    ; preds = %invoke.cont46, %if.then3.i.i.i176
  store i8 1, ptr %m_ownsMemory.i.i.i173, align 8, !tbaa !118
  store ptr null, ptr %m_data.i.i.i171, align 8, !tbaa !119
  store i32 0, ptr %m_size.i, align 4, !tbaa !120
  %m_capacity.i.i.i178 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 3
  store i32 0, ptr %m_capacity.i.i.i178, align 8, !tbaa !121
  %m_data.i.i.i180 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %33 = load ptr, ptr %m_data.i.i.i180, align 8, !tbaa !115
  %tobool.not.i.i.i181 = icmp eq ptr %33, null
  %m_ownsMemory.i.i.i182 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 6
  %34 = load i8, ptr %m_ownsMemory.i.i.i182, align 8, !range !159
  %tobool2.not.i.i.i183 = icmp eq i8 %34, 0
  %or.cond.i.i184 = select i1 %tobool.not.i.i.i181, i1 true, i1 %tobool2.not.i.i.i183
  br i1 %or.cond.i.i184, label %invoke.cont58, label %if.then3.i.i.i185

if.then3.i.i.i185:                                ; preds = %invoke.cont52
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %33)
          to label %invoke.cont58 unwind label %lpad57

invoke.cont58:                                    ; preds = %invoke.cont52, %if.then3.i.i.i185
  store i8 1, ptr %m_ownsMemory.i.i.i182, align 8, !tbaa !114
  store ptr null, ptr %m_data.i.i.i180, align 8, !tbaa !115
  store i32 0, ptr %m_size.i147, align 4, !tbaa !116
  %m_capacity.i.i.i187 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 3
  store i32 0, ptr %m_capacity.i.i.i187, align 8, !tbaa !117
  %m_data.i.i.i189 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 5
  %35 = load ptr, ptr %m_data.i.i.i189, align 8, !tbaa !111
  %tobool.not.i.i.i190 = icmp eq ptr %35, null
  %m_ownsMemory.i.i.i191 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 6
  %36 = load i8, ptr %m_ownsMemory.i.i.i191, align 8, !range !159
  %tobool2.not.i.i.i192 = icmp eq i8 %36, 0
  %or.cond.i.i193 = select i1 %tobool.not.i.i.i190, i1 true, i1 %tobool2.not.i.i.i192
  br i1 %or.cond.i.i193, label %invoke.cont63, label %if.then3.i.i.i194

if.then3.i.i.i194:                                ; preds = %invoke.cont58
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %35)
          to label %invoke.cont63 unwind label %lpad62

invoke.cont63:                                    ; preds = %invoke.cont58, %if.then3.i.i.i194
  %m_size.i.i.i195 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i191, align 8, !tbaa !110
  store ptr null, ptr %m_data.i.i.i189, align 8, !tbaa !111
  store i32 0, ptr %m_size.i.i.i195, align 4, !tbaa !112
  %m_capacity.i.i.i196 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 3
  store i32 0, ptr %m_capacity.i.i.i196, align 8, !tbaa !113
  %m_data.i.i.i198 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 5
  %37 = load ptr, ptr %m_data.i.i.i198, align 8, !tbaa !107
  %tobool.not.i.i.i199 = icmp eq ptr %37, null
  %m_ownsMemory.i.i.i200 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 6
  %38 = load i8, ptr %m_ownsMemory.i.i.i200, align 8, !range !159
  %tobool2.not.i.i.i201 = icmp eq i8 %38, 0
  %or.cond.i.i202 = select i1 %tobool.not.i.i.i199, i1 true, i1 %tobool2.not.i.i.i201
  br i1 %or.cond.i.i202, label %invoke.cont68, label %if.then3.i.i.i203

if.then3.i.i.i203:                                ; preds = %invoke.cont63
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %37)
          to label %invoke.cont68 unwind label %lpad67

invoke.cont68:                                    ; preds = %invoke.cont63, %if.then3.i.i.i203
  %m_size.i.i.i204 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i200, align 8, !tbaa !106
  store ptr null, ptr %m_data.i.i.i198, align 8, !tbaa !107
  store i32 0, ptr %m_size.i.i.i204, align 4, !tbaa !108
  %m_capacity.i.i.i205 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 3
  store i32 0, ptr %m_capacity.i.i.i205, align 8, !tbaa !109
  %m_data.i.i.i207 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 5
  %39 = load ptr, ptr %m_data.i.i.i207, align 8, !tbaa !103
  %tobool.not.i.i.i208 = icmp eq ptr %39, null
  %m_ownsMemory.i.i.i209 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 6
  %40 = load i8, ptr %m_ownsMemory.i.i.i209, align 8, !range !159
  %tobool2.not.i.i.i210 = icmp eq i8 %40, 0
  %or.cond.i.i211 = select i1 %tobool.not.i.i.i208, i1 true, i1 %tobool2.not.i.i.i210
  br i1 %or.cond.i.i211, label %invoke.cont73, label %if.then3.i.i.i212

if.then3.i.i.i212:                                ; preds = %invoke.cont68
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %39)
          to label %invoke.cont73 unwind label %lpad72

invoke.cont73:                                    ; preds = %invoke.cont68, %if.then3.i.i.i212
  %m_size.i.i.i213 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i209, align 8, !tbaa !102
  store ptr null, ptr %m_data.i.i.i207, align 8, !tbaa !103
  store i32 0, ptr %m_size.i.i.i213, align 4, !tbaa !104
  %m_capacity.i.i.i214 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 3
  store i32 0, ptr %m_capacity.i.i.i214, align 8, !tbaa !105
  %m_data.i.i.i216 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  %41 = load ptr, ptr %m_data.i.i.i216, align 8, !tbaa !99
  %tobool.not.i.i.i217 = icmp eq ptr %41, null
  %m_ownsMemory.i.i.i218 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 6
  %42 = load i8, ptr %m_ownsMemory.i.i.i218, align 8, !range !159
  %tobool2.not.i.i.i219 = icmp eq i8 %42, 0
  %or.cond.i.i220 = select i1 %tobool.not.i.i.i217, i1 true, i1 %tobool2.not.i.i.i219
  br i1 %or.cond.i.i220, label %invoke.cont78, label %if.then3.i.i.i221

if.then3.i.i.i221:                                ; preds = %invoke.cont73
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %41)
          to label %invoke.cont78 unwind label %lpad77

invoke.cont78:                                    ; preds = %invoke.cont73, %if.then3.i.i.i221
  %m_size.i.i.i222 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i218, align 8, !tbaa !98
  store ptr null, ptr %m_data.i.i.i216, align 8, !tbaa !99
  store i32 0, ptr %m_size.i.i.i222, align 4, !tbaa !100
  %m_capacity.i.i.i223 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 3
  store i32 0, ptr %m_capacity.i.i.i223, align 8, !tbaa !101
  %m_data.i.i.i225 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %43 = load ptr, ptr %m_data.i.i.i225, align 8, !tbaa !95
  %tobool.not.i.i.i226 = icmp eq ptr %43, null
  %m_ownsMemory.i.i.i227 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 6
  %44 = load i8, ptr %m_ownsMemory.i.i.i227, align 8, !range !159
  %tobool2.not.i.i.i228 = icmp eq i8 %44, 0
  %or.cond.i.i229 = select i1 %tobool.not.i.i.i226, i1 true, i1 %tobool2.not.i.i.i228
  br i1 %or.cond.i.i229, label %invoke.cont83, label %if.then3.i.i.i230

if.then3.i.i.i230:                                ; preds = %invoke.cont78
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %43)
          to label %invoke.cont83 unwind label %lpad82

invoke.cont83:                                    ; preds = %invoke.cont78, %if.then3.i.i.i230
  %m_size.i.i.i231 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i227, align 8, !tbaa !94
  store ptr null, ptr %m_data.i.i.i225, align 8, !tbaa !95
  store i32 0, ptr %m_size.i.i.i231, align 4, !tbaa !96
  %m_capacity.i.i.i232 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 3
  store i32 0, ptr %m_capacity.i.i.i232, align 8, !tbaa !97
  %m_data.i.i.i234 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %45 = load ptr, ptr %m_data.i.i.i234, align 8, !tbaa !91
  %tobool.not.i.i.i235 = icmp eq ptr %45, null
  %m_ownsMemory.i.i.i236 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 6
  %46 = load i8, ptr %m_ownsMemory.i.i.i236, align 8, !range !159
  %tobool2.not.i.i.i237 = icmp eq i8 %46, 0
  %or.cond.i.i238 = select i1 %tobool.not.i.i.i235, i1 true, i1 %tobool2.not.i.i.i237
  br i1 %or.cond.i.i238, label %invoke.cont88, label %if.then3.i.i.i239

if.then3.i.i.i239:                                ; preds = %invoke.cont83
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %45)
          to label %invoke.cont88 unwind label %lpad87

invoke.cont88:                                    ; preds = %invoke.cont83, %if.then3.i.i.i239
  %m_size.i.i.i240 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i236, align 8, !tbaa !90
  store ptr null, ptr %m_data.i.i.i234, align 8, !tbaa !91
  store i32 0, ptr %m_size.i.i.i240, align 4, !tbaa !92
  %m_capacity.i.i.i241 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 3
  store i32 0, ptr %m_capacity.i.i.i241, align 8, !tbaa !93
  %m_data.i.i.i243 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %47 = load ptr, ptr %m_data.i.i.i243, align 8, !tbaa !87
  %tobool.not.i.i.i244 = icmp eq ptr %47, null
  %m_ownsMemory.i.i.i245 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 6
  %48 = load i8, ptr %m_ownsMemory.i.i.i245, align 8, !range !159
  %tobool2.not.i.i.i246 = icmp eq i8 %48, 0
  %or.cond.i.i247 = select i1 %tobool.not.i.i.i244, i1 true, i1 %tobool2.not.i.i.i246
  br i1 %or.cond.i.i247, label %invoke.cont93, label %if.then3.i.i.i248

if.then3.i.i.i248:                                ; preds = %invoke.cont88
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %47)
          to label %invoke.cont93 unwind label %lpad92

invoke.cont93:                                    ; preds = %invoke.cont88, %if.then3.i.i.i248
  %m_size.i.i.i249 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i245, align 8, !tbaa !86
  store ptr null, ptr %m_data.i.i.i243, align 8, !tbaa !87
  store i32 0, ptr %m_size.i.i.i249, align 4, !tbaa !88
  %m_capacity.i.i.i250 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 3
  store i32 0, ptr %m_capacity.i.i.i250, align 8, !tbaa !89
  %m_data.i.i.i252 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 5
  %49 = load ptr, ptr %m_data.i.i.i252, align 8, !tbaa !83
  %tobool.not.i.i.i253 = icmp eq ptr %49, null
  %m_ownsMemory.i.i.i254 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 6
  %50 = load i8, ptr %m_ownsMemory.i.i.i254, align 8, !range !159
  %tobool2.not.i.i.i255 = icmp eq i8 %50, 0
  %or.cond.i.i256 = select i1 %tobool.not.i.i.i253, i1 true, i1 %tobool2.not.i.i.i255
  br i1 %or.cond.i.i256, label %invoke.cont98, label %if.then3.i.i.i257

if.then3.i.i.i257:                                ; preds = %invoke.cont93
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %49)
          to label %invoke.cont98 unwind label %lpad97

invoke.cont98:                                    ; preds = %invoke.cont93, %if.then3.i.i.i257
  %m_size.i.i.i258 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i254, align 8, !tbaa !82
  store ptr null, ptr %m_data.i.i.i252, align 8, !tbaa !83
  store i32 0, ptr %m_size.i.i.i258, align 4, !tbaa !84
  %m_capacity.i.i.i259 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 3
  store i32 0, ptr %m_capacity.i.i.i259, align 8, !tbaa !85
  %m_data.i.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  %51 = load ptr, ptr %m_data.i.i.i.i, align 8, !tbaa !39
  %tobool.not.i.i.i.i = icmp eq ptr %51, null
  %m_ownsMemory.i.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 6
  %52 = load i8, ptr %m_ownsMemory.i.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i = icmp eq i8 %52, 0
  %or.cond.i.i.i = select i1 %tobool.not.i.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i
  br i1 %or.cond.i.i.i, label %invoke.cont.i, label %if.then3.i.i.i.i

if.then3.i.i.i.i:                                 ; preds = %invoke.cont98
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %51)
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %if.then3.i.i.i.i, %invoke.cont98
  %m_size.i.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i.i, align 8, !tbaa !36
  store ptr null, ptr %m_data.i.i.i.i, align 8, !tbaa !39
  store i32 0, ptr %m_size.i.i.i.i, align 4, !tbaa !40
  %m_capacity.i.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 3
  store i32 0, ptr %m_capacity.i.i.i.i, align 8, !tbaa !41
  %m_data.i.i.i5.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 5
  %53 = load ptr, ptr %m_data.i.i.i5.i, align 8, !tbaa !33
  %tobool.not.i.i.i6.i = icmp eq ptr %53, null
  %m_ownsMemory.i.i.i7.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 6
  %54 = load i8, ptr %m_ownsMemory.i.i.i7.i, align 8, !range !159
  %tobool2.not.i.i.i8.i = icmp eq i8 %54, 0
  %or.cond.i.i9.i = select i1 %tobool.not.i.i.i6.i, i1 true, i1 %tobool2.not.i.i.i8.i
  br i1 %or.cond.i.i9.i, label %invoke.cont103, label %if.then3.i.i.i10.i

if.then3.i.i.i10.i:                               ; preds = %invoke.cont.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %53)
          to label %invoke.cont103 unwind label %lpad102

lpad.i:                                           ; preds = %if.then3.i.i.i.i
  %55 = landingpad { ptr, i32 }
          cleanup
  %m_pos2.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3
  invoke void @_ZN20btAlignedObjectArrayI9btVector3ED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_pos2.i)
          to label %ehcleanup109 unwind label %terminate.lpad.i

terminate.lpad.i:                                 ; preds = %lpad.i
  %56 = landingpad { ptr, i32 }
          catch ptr null
  %57 = extractvalue { ptr, i32 } %56, 0
  tail call void @__clang_call_terminate(ptr %57) #39
  unreachable

invoke.cont103:                                   ; preds = %invoke.cont.i, %if.then3.i.i.i10.i
  %m_size.i.i.i11.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i7.i, align 8, !tbaa !30
  store ptr null, ptr %m_data.i.i.i5.i, align 8, !tbaa !33
  store i32 0, ptr %m_size.i.i.i11.i, align 4, !tbaa !34
  %m_capacity.i.i.i12.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 3
  store i32 0, ptr %m_capacity.i.i.i12.i, align 8, !tbaa !35
  %m_cfg = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2
  invoke void @_ZN10btSoftBody6ConfigD2Ev(ptr noundef nonnull align 8 dereferenceable(200) %m_cfg)
          to label %invoke.cont108 unwind label %lpad107

invoke.cont108:                                   ; preds = %invoke.cont103
  %m_data.i.i.i262 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 5
  %58 = load ptr, ptr %m_data.i.i.i262, align 8, !tbaa !15
  %tobool.not.i.i.i263 = icmp eq ptr %58, null
  %m_ownsMemory.i.i.i264 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 6
  %59 = load i8, ptr %m_ownsMemory.i.i.i264, align 8, !range !159
  %tobool2.not.i.i.i265 = icmp eq i8 %59, 0
  %or.cond.i.i266 = select i1 %tobool.not.i.i.i263, i1 true, i1 %tobool2.not.i.i.i265
  br i1 %or.cond.i.i266, label %invoke.cont113, label %if.then3.i.i.i267

if.then3.i.i.i267:                                ; preds = %invoke.cont108
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %58)
          to label %invoke.cont113 unwind label %lpad112

invoke.cont113:                                   ; preds = %invoke.cont108, %if.then3.i.i.i267
  %m_size.i.i.i268 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i264, align 8, !tbaa !8
  store ptr null, ptr %m_data.i.i.i262, align 8, !tbaa !15
  store i32 0, ptr %m_size.i.i.i268, align 4, !tbaa !16
  %m_capacity.i.i.i269 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 3
  store i32 0, ptr %m_capacity.i.i.i269, align 8, !tbaa !17
  tail call void @_ZN17btCollisionObjectD2Ev(ptr noundef nonnull align 8 dereferenceable(280) %this)
  ret void

lpad21:                                           ; preds = %if.then3.i.i.i
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup27

ehcleanup:                                        ; preds = %lpad2.loopexit, %lpad2.loopexit.split-lp.loopexit.split-lp, %lpad2.loopexit.split-lp.loopexit, %lpad
  %.pn = phi { ptr, i32 } [ %20, %lpad ], [ %lpad.loopexit, %lpad2.loopexit ], [ %lpad.loopexit271, %lpad2.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp272, %lpad2.loopexit.split-lp.loopexit.split-lp ]
  %m_userIndexMapping23 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27
  invoke void @_ZN20btAlignedObjectArrayIiED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_userIndexMapping23)
          to label %ehcleanup27 unwind label %terminate.lpad

lpad25:                                           ; preds = %if.then3.i.i.i158
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup32

ehcleanup27:                                      ; preds = %ehcleanup, %lpad21
  %.pn.pn = phi { ptr, i32 } [ %.pn, %ehcleanup ], [ %60, %lpad21 ]
  %m_clusterConnectivity28 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25
  invoke void @_ZN20btAlignedObjectArrayIbED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_clusterConnectivity28)
          to label %ehcleanup32 unwind label %terminate.lpad

lpad30:                                           ; preds = %if.then3.i.i.i167
  %62 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup37

ehcleanup32:                                      ; preds = %ehcleanup27, %lpad25
  %.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn, %ehcleanup27 ], [ %61, %lpad25 ]
  %m_clusters33 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24
  invoke void @_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_clusters33)
          to label %ehcleanup37 unwind label %terminate.lpad

lpad35:                                           ; preds = %invoke.cont31
  %63 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup42

ehcleanup37:                                      ; preds = %ehcleanup32, %lpad30
  %.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn, %ehcleanup32 ], [ %62, %lpad30 ]
  %m_cdbvt38 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  invoke void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt38)
          to label %ehcleanup42 unwind label %terminate.lpad

lpad40:                                           ; preds = %invoke.cont36
  %64 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup47

ehcleanup42:                                      ; preds = %ehcleanup37, %lpad35
  %.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn, %ehcleanup37 ], [ %63, %lpad35 ]
  %m_fdbvt43 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 22
  invoke void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_fdbvt43)
          to label %ehcleanup47 unwind label %terminate.lpad

lpad45:                                           ; preds = %invoke.cont41
  %65 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup53

ehcleanup47:                                      ; preds = %ehcleanup42, %lpad40
  %.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn, %ehcleanup42 ], [ %64, %lpad40 ]
  %m_ndbvt48 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  invoke void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt48)
          to label %ehcleanup53 unwind label %terminate.lpad

lpad51:                                           ; preds = %if.then3.i.i.i176
  %66 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59

ehcleanup53:                                      ; preds = %ehcleanup47, %lpad45
  %.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn, %ehcleanup47 ], [ %65, %lpad45 ]
  %m_materials54 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17
  invoke void @_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_materials54)
          to label %ehcleanup59 unwind label %terminate.lpad

lpad57:                                           ; preds = %if.then3.i.i.i185
  %67 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup64

ehcleanup59:                                      ; preds = %ehcleanup53, %lpad51
  %.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn, %ehcleanup53 ], [ %66, %lpad51 ]
  %m_joints60 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16
  invoke void @_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_joints60)
          to label %ehcleanup64 unwind label %terminate.lpad

lpad62:                                           ; preds = %if.then3.i.i.i194
  %68 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup69

ehcleanup64:                                      ; preds = %ehcleanup59, %lpad57
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup59 ], [ %67, %lpad57 ]
  %m_scontacts65 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_scontacts65)
          to label %ehcleanup69 unwind label %terminate.lpad

lpad67:                                           ; preds = %if.then3.i.i.i203
  %69 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup74

ehcleanup69:                                      ; preds = %ehcleanup64, %lpad62
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup64 ], [ %68, %lpad62 ]
  %m_rcontacts70 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_rcontacts70)
          to label %ehcleanup74 unwind label %terminate.lpad

lpad72:                                           ; preds = %if.then3.i.i.i212
  %70 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup79

ehcleanup74:                                      ; preds = %ehcleanup69, %lpad67
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup69 ], [ %69, %lpad67 ]
  %m_anchors75 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_anchors75)
          to label %ehcleanup79 unwind label %terminate.lpad

lpad77:                                           ; preds = %if.then3.i.i.i221
  %71 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup84

ehcleanup79:                                      ; preds = %ehcleanup74, %lpad72
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup74 ], [ %70, %lpad72 ]
  %m_tetras80 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_tetras80)
          to label %ehcleanup84 unwind label %terminate.lpad

lpad82:                                           ; preds = %if.then3.i.i.i230
  %72 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup89

ehcleanup84:                                      ; preds = %ehcleanup79, %lpad77
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup79 ], [ %71, %lpad77 ]
  %m_faces85 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_faces85)
          to label %ehcleanup89 unwind label %terminate.lpad

lpad87:                                           ; preds = %if.then3.i.i.i239
  %73 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup94

ehcleanup89:                                      ; preds = %ehcleanup84, %lpad82
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup84 ], [ %72, %lpad82 ]
  %m_links90 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_links90)
          to label %ehcleanup94 unwind label %terminate.lpad

lpad92:                                           ; preds = %if.then3.i.i.i248
  %74 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup99

ehcleanup94:                                      ; preds = %ehcleanup89, %lpad87
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup89 ], [ %73, %lpad87 ]
  %m_nodes95 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_nodes95)
          to label %ehcleanup99 unwind label %terminate.lpad

lpad97:                                           ; preds = %if.then3.i.i.i257
  %75 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup104

ehcleanup99:                                      ; preds = %ehcleanup94, %lpad92
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup94 ], [ %74, %lpad92 ]
  %m_notes100 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_notes100)
          to label %ehcleanup104 unwind label %terminate.lpad

lpad102:                                          ; preds = %if.then3.i.i.i10.i
  %76 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup109

ehcleanup104:                                     ; preds = %ehcleanup99, %lpad97
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup99 ], [ %75, %lpad97 ]
  %m_pose105 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5
  invoke void @_ZN10btSoftBody4PoseD2Ev(ptr noundef nonnull align 8 dereferenceable(232) %m_pose105)
          to label %ehcleanup109 unwind label %terminate.lpad

lpad107:                                          ; preds = %invoke.cont103
  %77 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup114

ehcleanup109:                                     ; preds = %lpad102, %lpad.i, %ehcleanup104
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup104 ], [ %76, %lpad102 ], [ %55, %lpad.i ]
  %m_cfg110 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2
  invoke void @_ZN10btSoftBody6ConfigD2Ev(ptr noundef nonnull align 8 dereferenceable(200) %m_cfg110)
          to label %ehcleanup114 unwind label %terminate.lpad

lpad112:                                          ; preds = %if.then3.i.i.i267
  %78 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup117

ehcleanup114:                                     ; preds = %ehcleanup109, %lpad107
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup109 ], [ %77, %lpad107 ]
  %m_collisionDisabledObjects115 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1
  invoke void @_ZN20btAlignedObjectArrayIP17btCollisionObjectED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_collisionDisabledObjects115)
          to label %ehcleanup117 unwind label %terminate.lpad

ehcleanup117:                                     ; preds = %ehcleanup114, %lpad112
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup114 ], [ %78, %lpad112 ]
  invoke void @_ZN17btCollisionObjectD2Ev(ptr noundef nonnull align 8 dereferenceable(280) %this)
          to label %eh.resume unwind label %terminate.lpad

eh.resume:                                        ; preds = %ehcleanup117
  resume { ptr, i32 } %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn

terminate.lpad:                                   ; preds = %ehcleanup117, %ehcleanup114, %ehcleanup109, %ehcleanup104, %ehcleanup99, %ehcleanup94, %ehcleanup89, %ehcleanup84, %ehcleanup79, %ehcleanup74, %ehcleanup69, %ehcleanup64, %ehcleanup59, %ehcleanup53, %ehcleanup47, %ehcleanup42, %ehcleanup37, %ehcleanup32, %ehcleanup27, %ehcleanup
  %79 = landingpad { ptr, i32 }
          catch ptr null
  %80 = extractvalue { ptr, i32 } %79, 0
  tail call void @__clang_call_terminate(ptr %80) #39
  unreachable
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody15releaseClustersEv(ptr noundef nonnull align 8 dereferenceable(1496) %this) local_unnamed_addr #4 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !124
  %cmp3 = icmp sgt i32 %0, 0
  br i1 %cmp3, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %m_cdbvt.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %_ZN10btSoftBody14releaseClusterEi.exit
  %1 = load ptr, ptr %m_data.i.i, align 8, !tbaa !123
  %2 = load ptr, ptr %1, align 8, !tbaa !219
  %m_leaf.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 15
  %3 = load ptr, ptr %m_leaf.i, align 8, !tbaa !221
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %while.body
  tail call void @_ZN6btDbvt6removeEP10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt.i, ptr noundef nonnull %3)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %while.body
  tail call void @_ZN10btSoftBody7ClusterD2Ev(ptr noundef nonnull align 8 dereferenceable(424) %2)
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %2)
  %4 = load i32, ptr %m_size.i, align 4, !tbaa !124
  %cmp8.i.i.i = icmp sgt i32 %4, 0
  br i1 %cmp8.i.i.i, label %for.body.lr.ph.i.i.i, label %while.end

for.body.lr.ph.i.i.i:                             ; preds = %if.end.i
  %5 = load ptr, ptr %m_data.i.i, align 8, !tbaa !123
  %wide.trip.count.i.i.i = zext i32 %4 to i64
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i, %for.inc.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds ptr, ptr %5, i64 %indvars.iv.i.i.i
  %6 = load ptr, ptr %arrayidx.i.i.i, align 8, !tbaa !219
  %cmp3.i.i.i = icmp eq ptr %6, %2
  br i1 %cmp3.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i, label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %for.body.i.i.i
  %indvars.iv.next.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i64 %indvars.iv.next.i.i.i, %wide.trip.count.i.i.i
  br i1 %exitcond.not.i.i.i, label %_ZN10btSoftBody14releaseClusterEi.exit, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i: ; preds = %for.body.i.i.i
  %7 = trunc i64 %indvars.iv.i.i.i to i32
  %cmp.i.i = icmp sgt i32 %4, %7
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN10btSoftBody14releaseClusterEi.exit

if.then.i.i:                                      ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i
  %sub.i.i = add nsw i32 %4, -1
  %sext.i.i = shl i64 %indvars.iv.i.i.i, 32
  %idxprom.i.i.i = ashr exact i64 %sext.i.i, 32
  %arrayidx.i7.i.i = getelementptr inbounds ptr, ptr %5, i64 %idxprom.i.i.i
  %8 = load ptr, ptr %arrayidx.i7.i.i, align 8, !tbaa !219
  %idxprom3.i.i.i = sext i32 %sub.i.i to i64
  %arrayidx4.i.i.i = getelementptr inbounds ptr, ptr %5, i64 %idxprom3.i.i.i
  %9 = load ptr, ptr %arrayidx4.i.i.i, align 8, !tbaa !219
  store ptr %9, ptr %arrayidx.i7.i.i, align 8, !tbaa !219
  %10 = load ptr, ptr %m_data.i.i, align 8, !tbaa !123
  %arrayidx10.i.i.i = getelementptr inbounds ptr, ptr %10, i64 %idxprom3.i.i.i
  store ptr %8, ptr %arrayidx10.i.i.i, align 8, !tbaa !219
  store i32 %sub.i.i, ptr %m_size.i, align 4, !tbaa !124
  br label %_ZN10btSoftBody14releaseClusterEi.exit

_ZN10btSoftBody14releaseClusterEi.exit:           ; preds = %for.inc.i.i.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i, %if.then.i.i
  %11 = phi i32 [ %4, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i ], [ %sub.i.i, %if.then.i.i ], [ %4, %for.inc.i.i.i ]
  %cmp = icmp sgt i32 %11, 0
  br i1 %cmp, label %while.body, label %while.end

while.end:                                        ; preds = %if.end.i, %_ZN10btSoftBody14releaseClusterEi.exit, %entry
  ret void
}

declare void @_Z21btAlignedFreeInternalPv(ptr noundef) local_unnamed_addr #1

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBodyD0Ev(ptr noundef nonnull align 8 dereferenceable(1496) %this) unnamed_addr #4 align 2 personality ptr @__gxx_personality_v0 {
entry:
  invoke void @_ZN10btSoftBodyD2Ev(ptr noundef nonnull align 8 dereferenceable(1496) %this)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %this)
  ret void

lpad:                                             ; preds = %entry
  %0 = landingpad { ptr, i32 }
          cleanup
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %this)
          to label %eh.resume unwind label %terminate.lpad

eh.resume:                                        ; preds = %lpad
  resume { ptr, i32 } %0

terminate.lpad:                                   ; preds = %lpad
  %1 = landingpad { ptr, i32 }
          catch ptr null
  %2 = extractvalue { ptr, i32 } %1, 0
  tail call void @__clang_call_terminate(ptr %2) #39
  unreachable
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local noundef zeroext i1 @_ZNK10btSoftBody9checkLinkEii(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, i32 noundef %node0, i32 noundef %node1) local_unnamed_addr #9 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i = sext i32 %node0 to i64
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i
  %idxprom.i6 = sext i32 %node1 to i64
  %arrayidx.i7 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i6
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %1 = load i32, ptr %m_size.i.i, align 4, !tbaa !92
  %cmp.not33.i = icmp sgt i32 %1, 0
  br i1 %cmp.not33.i, label %for.body.lr.ph.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %2 = load ptr, ptr %m_data.i.i, align 8, !tbaa !91
  %3 = zext i32 %1 to i64
  %m_n.i8 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %2, i64 0, i32 1
  %4 = load ptr, ptr %m_n.i8, align 8, !tbaa !219
  %cmp5.i9 = icmp eq ptr %4, %arrayidx.i
  %arrayidx7.i10 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %2, i64 0, i32 1, i64 1
  %5 = load ptr, ptr %arrayidx7.i10, align 8
  %cmp9.i11 = icmp eq ptr %5, %arrayidx.i7
  %or.cond.i12 = select i1 %cmp5.i9, i1 %cmp9.i11, i1 false
  br i1 %or.cond.i12, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit, label %lor.lhs.false.i.preheader

lor.lhs.false.i.preheader:                        ; preds = %for.body.lr.ph.i
  %cmp13.i17 = icmp eq ptr %4, %arrayidx.i7
  %cmp18.i18 = icmp eq ptr %5, %arrayidx.i
  %or.cond32.i19 = select i1 %cmp13.i17, i1 %cmp18.i18, i1 false
  br i1 %or.cond32.i19, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit, label %for.cond.i

for.cond.i:                                       ; preds = %lor.lhs.false.i.preheader, %lor.lhs.false.i
  %indvars.iv.i1320 = phi i64 [ %indvars.iv.next.i, %lor.lhs.false.i ], [ 0, %lor.lhs.false.i.preheader ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i1320, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %3
  br i1 %exitcond.not.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.loopexit, label %for.body.i

for.body.i:                                       ; preds = %for.cond.i
  %m_n.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %2, i64 %indvars.iv.next.i, i32 1
  %6 = load ptr, ptr %m_n.i, align 8, !tbaa !219
  %cmp5.i = icmp eq ptr %6, %arrayidx.i
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %2, i64 %indvars.iv.next.i, i32 1, i64 1
  %7 = load ptr, ptr %arrayidx7.i, align 8
  %cmp9.i = icmp eq ptr %7, %arrayidx.i7
  %or.cond.i = select i1 %cmp5.i, i1 %cmp9.i, i1 false
  br i1 %or.cond.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.loopexit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %cmp13.i = icmp eq ptr %6, %arrayidx.i7
  %cmp18.i = icmp eq ptr %7, %arrayidx.i
  %or.cond32.i = select i1 %cmp13.i, i1 %cmp18.i, i1 false
  br i1 %or.cond32.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.loopexit, label %for.cond.i

_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.loopexit: ; preds = %lor.lhs.false.i, %for.body.i, %for.cond.i
  %cmp.not.i.le = icmp ult i64 %indvars.iv.next.i, %3
  br label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit

_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit:   ; preds = %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.loopexit, %lor.lhs.false.i.preheader, %for.body.lr.ph.i, %entry
  %cmp.not.lcssa.i = phi i1 [ false, %entry ], [ true, %for.body.lr.ph.i ], [ true, %lor.lhs.false.i.preheader ], [ %cmp.not.i.le, %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.loopexit ]
  ret i1 %cmp.not.lcssa.i
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local noundef zeroext i1 @_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, ptr noundef readnone %node0, ptr noundef readnone %node1) local_unnamed_addr #9 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !92
  %cmp.not33 = icmp sgt i32 %0, 0
  br i1 %cmp.not33, label %for.body.lr.ph, label %cleanup22

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !91
  %2 = zext i32 %0 to i64
  %wide.trip.count = zext i32 %0 to i64
  %m_n38 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %m_n38, align 8, !tbaa !219
  %cmp539 = icmp eq ptr %3, %node0
  %arrayidx740 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 0, i32 1, i64 1
  %4 = load ptr, ptr %arrayidx740, align 8
  %cmp941 = icmp eq ptr %4, %node1
  %or.cond42 = select i1 %cmp539, i1 %cmp941, i1 false
  br i1 %or.cond42, label %cleanup22, label %lor.lhs.false

for.cond:                                         ; preds = %lor.lhs.false
  %indvars.iv.next = add nuw nsw i64 %indvars.iv43, 1
  %cmp.not = icmp ult i64 %indvars.iv.next, %2
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %cleanup22, label %for.body

for.body:                                         ; preds = %for.cond
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv.next, i32 1
  %5 = load ptr, ptr %m_n, align 8, !tbaa !219
  %cmp5 = icmp eq ptr %5, %node0
  %arrayidx7 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv.next, i32 1, i64 1
  %6 = load ptr, ptr %arrayidx7, align 8
  %cmp9 = icmp eq ptr %6, %node1
  %or.cond = select i1 %cmp5, i1 %cmp9, i1 false
  br i1 %or.cond, label %cleanup22, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %for.body.lr.ph, %for.body
  %7 = phi ptr [ %6, %for.body ], [ %4, %for.body.lr.ph ]
  %8 = phi ptr [ %5, %for.body ], [ %3, %for.body.lr.ph ]
  %cmp.not3544 = phi i1 [ %cmp.not, %for.body ], [ true, %for.body.lr.ph ]
  %indvars.iv43 = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %for.body.lr.ph ]
  %cmp13 = icmp eq ptr %8, %node1
  %cmp18 = icmp eq ptr %7, %node0
  %or.cond32 = select i1 %cmp13, i1 %cmp18, i1 false
  br i1 %or.cond32, label %cleanup22, label %for.cond

cleanup22:                                        ; preds = %for.cond, %for.body, %lor.lhs.false, %for.body.lr.ph, %entry
  %cmp.not.lcssa = phi i1 [ false, %entry ], [ true, %for.body.lr.ph ], [ %cmp.not3544, %lor.lhs.false ], [ %cmp.not, %for.body ], [ %cmp.not, %for.cond ]
  ret i1 %cmp.not.lcssa
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local noundef zeroext i1 @_ZNK10btSoftBody9checkFaceEiii(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, i32 noundef %node0, i32 noundef %node1, i32 noundef %node2) local_unnamed_addr #9 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i = sext i32 %node0 to i64
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i
  %idxprom.i53 = sext i32 %node1 to i64
  %arrayidx.i54 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i53
  %idxprom.i56 = sext i32 %node2 to i64
  %arrayidx.i57 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i56
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %1 = load i32, ptr %m_size.i, align 4, !tbaa !96
  %cmp.not63 = icmp sgt i32 %1, 0
  br i1 %cmp.not63, label %for.body.lr.ph, label %cleanup38

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i58 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %2 = load ptr, ptr %m_data.i58, align 8, !tbaa !95
  %3 = zext i32 %1 to i64
  %wide.trip.count = zext i32 %1 to i64
  br label %for.body

for.cond:                                         ; preds = %if.then.1, %if.then, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp.not = icmp ult i64 %indvars.iv.next, %3
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %cleanup38, label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %cmp.not65 = phi i1 [ true, %for.body.lr.ph ], [ %cmp.not, %for.cond ]
  %arrayidx = getelementptr inbounds %"struct.btSoftBody::Face", ptr %2, i64 %indvars.iv, i32 1, i64 0
  %4 = load ptr, ptr %arrayidx, align 8, !tbaa !219
  %cmp15 = icmp eq ptr %4, %arrayidx.i
  %cmp20 = icmp eq ptr %4, %arrayidx.i54
  %or.cond = or i1 %cmp15, %cmp20
  %cmp26 = icmp eq ptr %4, %arrayidx.i57
  %or.cond51 = or i1 %cmp26, %or.cond
  br i1 %or.cond51, label %if.then, label %for.cond

if.then:                                          ; preds = %for.body
  %arrayidx.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %2, i64 %indvars.iv, i32 1, i64 1
  %5 = load ptr, ptr %arrayidx.1, align 8, !tbaa !219
  %cmp15.1 = icmp eq ptr %5, %arrayidx.i
  %cmp20.1 = icmp eq ptr %5, %arrayidx.i54
  %or.cond.1 = or i1 %cmp15.1, %cmp20.1
  %cmp26.1 = icmp eq ptr %5, %arrayidx.i57
  %or.cond51.1 = or i1 %cmp26.1, %or.cond.1
  br i1 %or.cond51.1, label %if.then.1, label %for.cond

if.then.1:                                        ; preds = %if.then
  %arrayidx.2 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %2, i64 %indvars.iv, i32 1, i64 2
  %6 = load ptr, ptr %arrayidx.2, align 8, !tbaa !219
  %cmp15.2 = icmp eq ptr %6, %arrayidx.i
  %cmp20.2 = icmp eq ptr %6, %arrayidx.i54
  %or.cond.2 = or i1 %cmp15.2, %cmp20.2
  %cmp26.2 = icmp eq ptr %6, %arrayidx.i57
  %or.cond51.2 = or i1 %cmp26.2, %or.cond.2
  br i1 %or.cond51.2, label %cleanup38, label %for.cond

cleanup38:                                        ; preds = %for.cond, %if.then.1, %entry
  %cmp.not.lcssa = phi i1 [ false, %entry ], [ %cmp.not65, %if.then.1 ], [ %cmp.not, %for.cond ]
  ret i1 %cmp.not.lcssa
}

declare noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendNoteEPKcRK9btVector3RK9btVector4PNS_4NodeES9_S9_S9_(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %text, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %o, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %c, ptr noundef %n0, ptr noundef %n1, ptr noundef %n2, ptr noundef %n3) local_unnamed_addr #4 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %n.sroa.6 = alloca [4 x float], align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %n.sroa.6)
  %0 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %0, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_.exit, !prof !173

init.check.i:                                     ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_E9zerodummy) #38
  %tobool.not.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i, label %_ZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_.exit, label %invoke.cont.i

invoke.cont.i:                                    ; preds = %init.check.i
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_E9zerodummy, align 8, !tbaa !174
  %2 = tail call ptr @llvm.invariant.start.p0(i64 88, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_E9zerodummy)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_.exit

_ZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_.exit: ; preds = %entry, %init.check.i, %invoke.cont.i
  %n.sroa.0.0.copyload = load ptr, ptr @_ZZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_E9zerodummy, align 8
  %n.sroa.13.0.copyload = load i32, ptr getelementptr inbounds (i8, ptr @_ZZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_E9zerodummy, i64 36), align 4
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %n.sroa.6, ptr noundef nonnull align 4 dereferenceable(16) %o, i64 16, i1 false), !tbaa.struct !163
  %3 = load <4 x float>, ptr %c, align 4, !tbaa !137
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 2
  %4 = load i32, ptr %m_size.i.i, align 4, !tbaa !84
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 3
  %5 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !85
  %cmp.i = icmp eq i32 %4, %5
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE9push_backERKS1_.exit

if.then.i:                                        ; preds = %_ZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_.exit
  %tobool.not.i.i = icmp eq i32 %4, 0
  %mul.i.i = shl nsw i32 %4, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %4, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE9push_backERKS1_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = mul nsw i64 %conv.i.i.i.i, 88
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !84
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %6 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %4, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %6, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 5
  %wide.trip.count.i.i.i = zext i32 %6 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 1
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967294
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.1, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds %"struct.btSoftBody::Note", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %8 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !83
  %arrayidx3.i.i.i = getelementptr inbounds %"struct.btSoftBody::Note", ptr %8, i64 %indvars.iv.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %arrayidx.i.i.i, ptr noundef nonnull align 8 dereferenceable(88) %arrayidx3.i.i.i, i64 88, i1 false)
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Note", ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %9 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !83
  %arrayidx3.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Note", ptr %9, i64 %indvars.iv.next.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %arrayidx.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(88) %arrayidx3.i.i.i.1, i64 88, i1 false)
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Note", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.unr
  %10 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !83
  %arrayidx3.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Note", ptr %10, i64 %indvars.iv.i.i.i.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %arrayidx.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(88) %arrayidx3.i.i.i.epil, i64 88, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i: ; preds = %for.body.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 5
  %11 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !83
  %tobool.not.i10.i.i = icmp eq ptr %11, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 6
  %12 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %12, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %11)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !82
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !83
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !85
  %.pre7.i = load i32, ptr %m_size.i.i, align 4, !tbaa !84
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE9push_backERKS1_.exit

_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE9push_backERKS1_.exit: ; preds = %_ZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_.exit, %if.then.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE10deallocateEv.exit.i.i
  %13 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE10deallocateEv.exit.i.i ], [ %4, %if.then.i ], [ %4, %_ZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_.exit ]
  %tobool.not = icmp ne ptr %n0, null
  %cond = zext i1 %tobool.not to i32
  %tobool15.not = icmp ne ptr %n1, null
  %cond16 = zext i1 %tobool15.not to i32
  %add18 = add nuw nsw i32 %cond16, %cond
  %tobool21.not = icmp ne ptr %n2, null
  %cond22 = zext i1 %tobool21.not to i32
  %add24 = add nuw nsw i32 %add18, %cond22
  %tobool27.not = icmp ne ptr %n3, null
  %cond28 = zext i1 %tobool27.not to i32
  %add30 = add nuw nsw i32 %add24, %cond28
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 5
  %14 = load ptr, ptr %m_data.i, align 8, !tbaa !83
  %idxprom.i = sext i32 %13 to i64
  %arrayidx.i40 = getelementptr inbounds %"struct.btSoftBody::Note", ptr %14, i64 %idxprom.i
  store ptr %n.sroa.0.0.copyload, ptr %arrayidx.i40, align 8
  %n.sroa.5.0.arrayidx.i40.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i40, i64 8
  store ptr %text, ptr %n.sroa.5.0.arrayidx.i40.sroa_idx, align 8
  %n.sroa.6.0.arrayidx.i40.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i40, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %n.sroa.6.0.arrayidx.i40.sroa_idx, ptr noundef nonnull align 8 dereferenceable(16) %n.sroa.6, i64 16, i1 false)
  %n.sroa.7.0.arrayidx.i40.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i40, i64 32
  store i32 %add30, ptr %n.sroa.7.0.arrayidx.i40.sroa_idx, align 8
  %n.sroa.13.0.arrayidx.i40.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i40, i64 36
  store i32 %n.sroa.13.0.copyload, ptr %n.sroa.13.0.arrayidx.i40.sroa_idx, align 4
  %n.sroa.1345.0.arrayidx.i40.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i40, i64 40
  store ptr %n0, ptr %n.sroa.1345.0.arrayidx.i40.sroa_idx, align 8
  %n.sroa.14.0.arrayidx.i40.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i40, i64 48
  store ptr %n1, ptr %n.sroa.14.0.arrayidx.i40.sroa_idx, align 8
  %n.sroa.15.0.arrayidx.i40.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i40, i64 56
  store ptr %n2, ptr %n.sroa.15.0.arrayidx.i40.sroa_idx, align 8
  %n.sroa.16.0.arrayidx.i40.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i40, i64 64
  store ptr %n3, ptr %n.sroa.16.0.arrayidx.i40.sroa_idx, align 8
  %n.sroa.17.0.arrayidx.i40.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i40, i64 72
  store <4 x float> %3, ptr %n.sroa.17.0.arrayidx.i40.sroa_idx, align 8
  %15 = load i32, ptr %m_size.i.i, align 4, !tbaa !84
  %inc.i = add nsw i32 %15, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !84
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %n.sroa.6)
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendNoteEPKcRK9btVector3PNS_4NodeE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %text, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %o, ptr noundef %feature) local_unnamed_addr #4 align 2 {
entry:
  %ref.tmp = alloca %class.btVector4, align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #38
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, ptr %ref.tmp, align 16, !tbaa !137
  call void @_ZN10btSoftBody10appendNoteEPKcRK9btVector3RK9btVector4PNS_4NodeES9_S9_S9_(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %text, ptr noundef nonnull align 4 dereferenceable(16) %o, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp, ptr noundef %feature, ptr noundef null, ptr noundef null, ptr noundef null)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendNoteEPKcRK9btVector3PNS_4LinkE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %text, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %o, ptr nocapture noundef readonly %feature) local_unnamed_addr #4 align 2 {
entry:
  %ref.tmp = alloca %class.btVector4, align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #38
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 0.000000e+00, float 0.000000e+00>, ptr %ref.tmp, align 16, !tbaa !137
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %feature, i64 0, i32 1
  %0 = load ptr, ptr %m_n, align 8, !tbaa !219
  %arrayidx5 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %feature, i64 0, i32 1, i64 1
  %1 = load ptr, ptr %arrayidx5, align 8, !tbaa !219
  call void @_ZN10btSoftBody10appendNoteEPKcRK9btVector3RK9btVector4PNS_4NodeES9_S9_S9_(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %text, ptr noundef nonnull align 4 dereferenceable(16) %o, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp, ptr noundef %0, ptr noundef %1, ptr noundef null, ptr noundef null)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendNoteEPKcRK9btVector3PNS_4FaceE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %text, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %o, ptr nocapture noundef readonly %feature) local_unnamed_addr #4 align 2 {
entry:
  %ref.tmp = alloca %class.btVector4, align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #38
  store <4 x float> <float 0x3FD5555560000000, float 0x3FD5555560000000, float 0x3FD5555560000000, float 0.000000e+00>, ptr %ref.tmp, align 16, !tbaa !137
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %feature, i64 0, i32 1
  %0 = load ptr, ptr %m_n, align 8, !tbaa !219
  %arrayidx4 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %feature, i64 0, i32 1, i64 1
  %1 = load ptr, ptr %arrayidx4, align 8, !tbaa !219
  %arrayidx6 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %feature, i64 0, i32 1, i64 2
  %2 = load ptr, ptr %arrayidx6, align 8, !tbaa !219
  call void @_ZN10btSoftBody10appendNoteEPKcRK9btVector3RK9btVector4PNS_4NodeES9_S9_S9_(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %text, ptr noundef nonnull align 4 dereferenceable(16) %o, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp, ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef null)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendNodeERK9btVector3f(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %x, float noundef %m) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %ref.tmp17 = alloca %struct.btDbvtAabbMm, align 8
  %m_capacity.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 3
  %0 = load i32, ptr %m_capacity.i, align 8, !tbaa !89
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %1 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp = icmp eq i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_ZN10btSoftBody17pointersToIndicesEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  %2 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %mul = shl nsw i32 %2, 1
  %add = or i32 %mul, 1
  %3 = load i32, ptr %m_capacity.i, align 8, !tbaa !89
  %cmp.i = icmp slt i32 %3, %add
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE7reserveEi.exit

if.then.i:                                        ; preds = %if.then
  %conv.i.i.i = sext i32 %add to i64
  %mul.i.i.i = mul nsw i64 %conv.i.i.i, 120
  %call.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i, i32 noundef 16)
  %4 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp7.i.i = icmp sgt i32 %4, 0
  br i1 %cmp7.i.i, label %for.body.lr.ph.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i

for.body.lr.ph.i.i:                               ; preds = %if.then.i
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %wide.trip.count.i.i = zext i32 %4 to i64
  %xtraiter = and i64 %wide.trip.count.i.i, 1
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.new

for.body.lr.ph.i.i.new:                           ; preds = %for.body.lr.ph.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i, 4294967294
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %for.body.lr.ph.i.i.new
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.new ], [ %indvars.iv.next.i.i.1, %for.body.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.new ], [ %niter.next.1, %for.body.i.i ]
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %call.i.i.i, i64 %indvars.iv.i.i
  %6 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %arrayidx3.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 %indvars.iv.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %arrayidx.i.i, ptr noundef nonnull align 8 dereferenceable(120) %arrayidx3.i.i, i64 120, i1 false)
  %indvars.iv.next.i.i = or i64 %indvars.iv.i.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %call.i.i.i, i64 %indvars.iv.next.i.i
  %7 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %arrayidx3.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 %indvars.iv.next.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %arrayidx.i.i.1, ptr noundef nonnull align 8 dereferenceable(120) %arrayidx3.i.i.1, i64 120, i1 false)
  %indvars.iv.next.i.i.1 = add nuw nsw i64 %indvars.iv.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.loopexit.unr-lcssa, label %for.body.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.loopexit.unr-lcssa: ; preds = %for.body.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i.1, %for.body.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i, label %for.body.i.i.epil

for.body.i.i.epil:                                ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.loopexit.unr-lcssa
  %arrayidx.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %call.i.i.i, i64 %indvars.iv.i.i.unr
  %8 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %arrayidx3.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %8, i64 %indvars.iv.i.i.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %arrayidx.i.i.epil, ptr noundef nonnull align 8 dereferenceable(120) %arrayidx3.i.i.epil, i64 120, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i: ; preds = %for.body.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.loopexit.unr-lcssa, %if.then.i
  %m_data.i9.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %9 = load ptr, ptr %m_data.i9.i, align 8, !tbaa !87
  %tobool.not.i10.i = icmp eq ptr %9, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 6
  %10 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %10, 0
  %or.cond.i = select i1 %tobool.not.i10.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE10deallocateEv.exit.i, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %9)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE10deallocateEv.exit.i

_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE10deallocateEv.exit.i: ; preds = %if.then3.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !86
  store ptr %call.i.i.i, ptr %m_data.i9.i, align 8, !tbaa !87
  store i32 %add, ptr %m_capacity.i, align 8, !tbaa !89
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE7reserveEi.exit

_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE7reserveEi.exit: ; preds = %if.then, %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE10deallocateEv.exit.i
  tail call void @_ZN10btSoftBody17indicesToPointersEPKi(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef null)
  br label %if.end

if.end:                                           ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE7reserveEi.exit, %entry
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %11 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable = load ptr, ptr %11, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 11
  %12 = load ptr, ptr %vfn, align 8
  %call8 = tail call noundef float %12(ptr noundef nonnull align 8 dereferenceable(24) %11)
  %13 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %14 = load i32, ptr %m_capacity.i, align 8, !tbaa !89
  %cmp.i32 = icmp eq i32 %13, %14
  br i1 %cmp.i32, label %if.then.i33, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE9push_backERKS1_.exit

if.then.i33:                                      ; preds = %if.end
  %tobool.not.i.i = icmp eq i32 %13, 0
  %mul.i.i = shl nsw i32 %13, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %13, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE9push_backERKS1_.exit

if.then.i.i:                                      ; preds = %if.then.i33
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = mul nsw i64 %conv.i.i.i.i, 120
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i, align 4, !tbaa !88
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %15 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %13, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %15, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %wide.trip.count.i.i.i = zext i32 %15 to i64
  %xtraiter39 = and i64 %wide.trip.count.i.i.i, 1
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter41 = and i64 %wide.trip.count.i.i.i, 4294967294
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %niter42 = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter42.next.1, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %17 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !87
  %arrayidx3.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %17, i64 %indvars.iv.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %arrayidx.i.i.i, ptr noundef nonnull align 8 dereferenceable(120) %arrayidx3.i.i.i, i64 120, i1 false)
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %18 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !87
  %arrayidx3.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %indvars.iv.next.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %arrayidx.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(120) %arrayidx3.i.i.i.1, i64 120, i1 false)
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %niter42.next.1 = add i64 %niter42, 2
  %niter42.ncmp.1 = icmp eq i64 %niter42.next.1, %unroll_iter41
  br i1 %niter42.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %lcmp.mod40.not = icmp eq i64 %xtraiter39, 0
  br i1 %lcmp.mod40.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.unr
  %19 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !87
  %arrayidx3.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 %indvars.iv.i.i.i.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %arrayidx.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(120) %arrayidx3.i.i.i.epil, i64 120, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i: ; preds = %for.body.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %20 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !87
  %tobool.not.i10.i.i = icmp eq ptr %20, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 6
  %21 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %21, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %20)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !86
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !87
  store i32 %cond.i.i, ptr %m_capacity.i, align 8, !tbaa !89
  %.pre7.i = load i32, ptr %m_size.i, align 4, !tbaa !88
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE9push_backERKS1_.exit

_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE9push_backERKS1_.exit: ; preds = %if.end, %if.then.i33, %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE10deallocateEv.exit.i.i
  %22 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE10deallocateEv.exit.i.i ], [ %13, %if.then.i33 ], [ %13, %if.end ]
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %23 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i = sext i32 %22 to i64
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %23, i64 %idxprom.i
  store ptr null, ptr %arrayidx.i, align 8
  %24 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %inc.i = add nsw i32 %24, 1
  store i32 %inc.i, ptr %m_size.i, align 4, !tbaa !88
  %25 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %26 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %26, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_.exit, !prof !173

init.check.i:                                     ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE9push_backERKS1_.exit
  %27 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy) #38
  %tobool.not.i = icmp eq i32 %27, 0
  br i1 %tobool.not.i, label %_ZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_.exit, label %invoke.cont.i

invoke.cont.i:                                    ; preds = %init.check.i
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy, align 8, !tbaa !174
  %28 = tail call ptr @llvm.invariant.start.p0(i64 120, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_.exit

_ZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_.exit: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE9push_backERKS1_.exit, %init.check.i, %invoke.cont.i
  %idxprom.i36 = sext i32 %24 to i64
  %arrayidx.i37 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %25, i64 %idxprom.i36
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(113) %arrayidx.i37, ptr noundef nonnull align 8 dereferenceable(113) @_ZZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy, i64 113, i1 false)
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %25, i64 %idxprom.i36, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_x, ptr noundef nonnull align 4 dereferenceable(16) %x, i64 16, i1 false), !tbaa.struct !163
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %25, i64 %idxprom.i36, i32 2
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_q, ptr noundef nonnull align 4 dereferenceable(16) %x, i64 16, i1 false)
  %cmp15 = fcmp ogt float %m, 0.000000e+00
  %div = fdiv float 1.000000e+00, %m
  %cond = select i1 %cmp15, float %div, float 0.000000e+00
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %25, i64 %idxprom.i36, i32 6
  store float %cond, ptr %m_im, align 8, !tbaa !175
  %m_data.i38 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %29 = load ptr, ptr %m_data.i38, align 8, !tbaa !119
  %30 = load ptr, ptr %29, align 8, !tbaa !219
  %m_material = getelementptr inbounds %"struct.btSoftBody::Feature", ptr %arrayidx.i37, i64 0, i32 1
  store ptr %30, ptr %m_material, align 8, !tbaa !184
  %m_ndbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %ref.tmp17) #38
  tail call void @llvm.experimental.noalias.scope.decl(metadata !225)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !228)
  %31 = load <2 x float>, ptr %m_x, align 4, !tbaa !137, !noalias !231
  %32 = insertelement <2 x float> poison, float %call8, i64 0
  %33 = shufflevector <2 x float> %32, <2 x float> poison, <2 x i32> zeroinitializer
  %34 = fsub <2 x float> %31, %33
  %arrayidx11.i.i.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %35 = load float, ptr %arrayidx11.i.i.i, align 4, !tbaa !137, !noalias !231
  %sub14.i.i.i = fsub float %35, %call8
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i.i, i64 0
  store <2 x float> %34, ptr %ref.tmp17, align 8, !tbaa.struct !163, !alias.scope !231
  %ref.tmp.sroa.4.0.mi.sroa_idx.i.i = getelementptr inbounds i8, ptr %ref.tmp17, i64 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i, ptr %ref.tmp.sroa.4.0.mi.sroa_idx.i.i, align 8, !tbaa.struct !165, !alias.scope !231
  %36 = fadd <2 x float> %33, %31
  %add14.i.i.i = fadd float %call8, %35
  %retval.sroa.3.12.vec.insert.i12.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i.i, i64 0
  %mx.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp17, i64 0, i32 1
  store <2 x float> %36, ptr %mx.i.i, align 8, !tbaa.struct !163, !alias.scope !231
  %ref.tmp1.sroa.4.0.mx.sroa_idx.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp17, i64 0, i32 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i12.i.i, ptr %ref.tmp1.sroa.4.0.mx.sroa_idx.i.i, align 8, !tbaa.struct !165, !alias.scope !231
  %call19 = call noundef ptr @_ZN6btDbvt6insertERK12btDbvtAabbMmPv(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt, ptr noundef nonnull align 4 dereferenceable(32) %ref.tmp17, ptr noundef nonnull %arrayidx.i37)
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Node", ptr %25, i64 %idxprom.i36, i32 8
  store ptr %call19, ptr %m_leaf, align 8, !tbaa !183
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %ref.tmp17) #38
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody17pointersToIndicesEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #10 align 2 {
entry:
  %i = alloca i32, align 8
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i)
  store i32 0, ptr %i, align 8, !tbaa !140
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %1 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp233 = icmp sgt i32 %1, 0
  br i1 %cmp233, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %1 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  %2 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv, i32 8
  %3 = load ptr, ptr %m_leaf, align 8, !tbaa !183
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %i.0.i.0.i.0.i.0. = load ptr, ptr %i, align 8
  %4 = ptrtoint ptr %i.0.i.0.i.0.i.0. to i64
  %sext278 = shl i64 %4, 32
  %idxprom.i175 = ashr exact i64 %sext278, 32
  %m_leaf8 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %idxprom.i175, i32 8
  %5 = load ptr, ptr %m_leaf8, align 8, !tbaa !183
  %6 = getelementptr inbounds %struct.btDbvtNode, ptr %5, i64 0, i32 2
  store ptr %i.0.i.0.i.0.i.0., ptr %6, align 8, !tbaa !164
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %7 = trunc i64 %indvars.iv.next to i32
  store i32 %7, ptr %i, align 8, !tbaa !140
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  %m_size.i177 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %8 = load i32, ptr %m_size.i177, align 4, !tbaa !92
  %cmp11236 = icmp sgt i32 %8, 0
  br i1 %cmp11236, label %for.body12.lr.ph, label %for.end33

for.body12.lr.ph:                                 ; preds = %for.end
  %m_data.i178 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %sub.ptr.rhs.cast = ptrtoint ptr %0 to i64
  %wide.trip.count258 = zext i32 %8 to i64
  br label %for.body12

for.body12:                                       ; preds = %for.body12.lr.ph, %for.body12
  %indvars.iv255 = phi i64 [ 0, %for.body12.lr.ph ], [ %indvars.iv.next256, %for.body12 ]
  %9 = load ptr, ptr %m_data.i178, align 8, !tbaa !91
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %9, i64 %indvars.iv255, i32 1
  %10 = load ptr, ptr %m_n, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %10 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 120
  %11 = inttoptr i64 %sub.ptr.div to ptr
  store ptr %11, ptr %m_n, align 8, !tbaa !219
  %12 = load ptr, ptr %m_data.i178, align 8, !tbaa !91
  %arrayidx22 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %12, i64 %indvars.iv255, i32 1, i64 1
  %13 = load ptr, ptr %arrayidx22, align 8, !tbaa !219
  %sub.ptr.lhs.cast23 = ptrtoint ptr %13 to i64
  %sub.ptr.sub25 = sub i64 %sub.ptr.lhs.cast23, %sub.ptr.rhs.cast
  %sub.ptr.div26 = sdiv exact i64 %sub.ptr.sub25, 120
  %14 = inttoptr i64 %sub.ptr.div26 to ptr
  store ptr %14, ptr %arrayidx22, align 8, !tbaa !219
  %indvars.iv.next256 = add nuw nsw i64 %indvars.iv255, 1
  %exitcond259.not = icmp eq i64 %indvars.iv.next256, %wide.trip.count258
  br i1 %exitcond259.not, label %for.end33, label %for.body12

for.end33:                                        ; preds = %for.body12, %for.end
  store i32 0, ptr %i, align 8, !tbaa !140
  %m_size.i190 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %15 = load i32, ptr %m_size.i190, align 4, !tbaa !96
  %cmp36239 = icmp sgt i32 %15, 0
  br i1 %cmp36239, label %for.body37.lr.ph, label %for.end85

for.body37.lr.ph:                                 ; preds = %for.end33
  %m_data.i191 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %sub.ptr.rhs.cast43 = ptrtoint ptr %0 to i64
  %wide.trip.count263 = zext i32 %15 to i64
  br label %for.body37

for.body37:                                       ; preds = %for.body37.lr.ph, %for.inc83
  %indvars.iv260 = phi i64 [ 0, %for.body37.lr.ph ], [ %indvars.iv.next261, %for.inc83 ]
  %16 = load ptr, ptr %m_data.i191, align 8, !tbaa !95
  %m_n40 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %16, i64 %indvars.iv260, i32 1
  %17 = load ptr, ptr %m_n40, align 8, !tbaa !219
  %sub.ptr.lhs.cast42 = ptrtoint ptr %17 to i64
  %sub.ptr.sub44 = sub i64 %sub.ptr.lhs.cast42, %sub.ptr.rhs.cast43
  %sub.ptr.div45 = sdiv exact i64 %sub.ptr.sub44, 120
  %18 = inttoptr i64 %sub.ptr.div45 to ptr
  store ptr %18, ptr %m_n40, align 8, !tbaa !219
  %19 = load ptr, ptr %m_data.i191, align 8, !tbaa !95
  %arrayidx53 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %19, i64 %indvars.iv260, i32 1, i64 1
  %20 = load ptr, ptr %arrayidx53, align 8, !tbaa !219
  %sub.ptr.lhs.cast54 = ptrtoint ptr %20 to i64
  %sub.ptr.sub56 = sub i64 %sub.ptr.lhs.cast54, %sub.ptr.rhs.cast43
  %sub.ptr.div57 = sdiv exact i64 %sub.ptr.sub56, 120
  %21 = inttoptr i64 %sub.ptr.div57 to ptr
  store ptr %21, ptr %arrayidx53, align 8, !tbaa !219
  %22 = load ptr, ptr %m_data.i191, align 8, !tbaa !95
  %arrayidx65 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %22, i64 %indvars.iv260, i32 1, i64 2
  %23 = load ptr, ptr %arrayidx65, align 8, !tbaa !219
  %sub.ptr.lhs.cast66 = ptrtoint ptr %23 to i64
  %sub.ptr.sub68 = sub i64 %sub.ptr.lhs.cast66, %sub.ptr.rhs.cast43
  %sub.ptr.div69 = sdiv exact i64 %sub.ptr.sub68, 120
  %24 = inttoptr i64 %sub.ptr.div69 to ptr
  store ptr %24, ptr %arrayidx65, align 8, !tbaa !219
  %25 = load ptr, ptr %m_data.i191, align 8, !tbaa !95
  %m_leaf76 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %25, i64 %indvars.iv260, i32 4
  %26 = load ptr, ptr %m_leaf76, align 8, !tbaa !232
  %tobool77.not = icmp eq ptr %26, null
  br i1 %tobool77.not, label %for.inc83, label %if.then78

if.then78:                                        ; preds = %for.body37
  %i.0.i.0.i.0.i.0.137 = load ptr, ptr %i, align 8
  %27 = ptrtoint ptr %i.0.i.0.i.0.i.0.137 to i64
  %sext = shl i64 %27, 32
  %idxprom.i213 = ashr exact i64 %sext, 32
  %m_leaf81 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %25, i64 %idxprom.i213, i32 4
  %28 = load ptr, ptr %m_leaf81, align 8, !tbaa !232
  %29 = getelementptr inbounds %struct.btDbvtNode, ptr %28, i64 0, i32 2
  store ptr %i.0.i.0.i.0.i.0.137, ptr %29, align 8, !tbaa !164
  br label %for.inc83

for.inc83:                                        ; preds = %for.body37, %if.then78
  %indvars.iv.next261 = add nuw nsw i64 %indvars.iv260, 1
  %30 = trunc i64 %indvars.iv.next261 to i32
  store i32 %30, ptr %i, align 8, !tbaa !140
  %exitcond264.not = icmp eq i64 %indvars.iv.next261, %wide.trip.count263
  br i1 %exitcond264.not, label %for.end85, label %for.body37

for.end85:                                        ; preds = %for.inc83, %for.end33
  %m_size.i215 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 2
  %31 = load i32, ptr %m_size.i215, align 4, !tbaa !104
  %cmp88243 = icmp sgt i32 %31, 0
  br i1 %cmp88243, label %for.body89.lr.ph, label %for.end101

for.body89.lr.ph:                                 ; preds = %for.end85
  %m_data.i216 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 5
  %32 = load ptr, ptr %m_data.i216, align 8, !tbaa !103
  %sub.ptr.rhs.cast93 = ptrtoint ptr %0 to i64
  %wide.trip.count268 = zext i32 %31 to i64
  %xtraiter = and i64 %wide.trip.count268, 1
  %33 = icmp eq i32 %31, 1
  br i1 %33, label %for.end101.loopexit.unr-lcssa, label %for.body89.lr.ph.new

for.body89.lr.ph.new:                             ; preds = %for.body89.lr.ph
  %unroll_iter = and i64 %wide.trip.count268, 4294967294
  br label %for.body89

for.body89:                                       ; preds = %for.body89, %for.body89.lr.ph.new
  %indvars.iv265 = phi i64 [ 0, %for.body89.lr.ph.new ], [ %indvars.iv.next266.1, %for.body89 ]
  %niter = phi i64 [ 0, %for.body89.lr.ph.new ], [ %niter.next.1, %for.body89 ]
  %arrayidx.i218 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %32, i64 %indvars.iv265
  %34 = load ptr, ptr %arrayidx.i218, align 8, !tbaa !234
  %sub.ptr.lhs.cast92 = ptrtoint ptr %34 to i64
  %sub.ptr.sub94 = sub i64 %sub.ptr.lhs.cast92, %sub.ptr.rhs.cast93
  %sub.ptr.div95 = sdiv exact i64 %sub.ptr.sub94, 120
  %35 = inttoptr i64 %sub.ptr.div95 to ptr
  store ptr %35, ptr %arrayidx.i218, align 8, !tbaa !234
  %indvars.iv.next266 = or i64 %indvars.iv265, 1
  %arrayidx.i218.1 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %32, i64 %indvars.iv.next266
  %36 = load ptr, ptr %arrayidx.i218.1, align 8, !tbaa !234
  %sub.ptr.lhs.cast92.1 = ptrtoint ptr %36 to i64
  %sub.ptr.sub94.1 = sub i64 %sub.ptr.lhs.cast92.1, %sub.ptr.rhs.cast93
  %sub.ptr.div95.1 = sdiv exact i64 %sub.ptr.sub94.1, 120
  %37 = inttoptr i64 %sub.ptr.div95.1 to ptr
  store ptr %37, ptr %arrayidx.i218.1, align 8, !tbaa !234
  %indvars.iv.next266.1 = add nuw nsw i64 %indvars.iv265, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.end101.loopexit.unr-lcssa, label %for.body89

for.end101.loopexit.unr-lcssa:                    ; preds = %for.body89, %for.body89.lr.ph
  %indvars.iv265.unr = phi i64 [ 0, %for.body89.lr.ph ], [ %indvars.iv.next266.1, %for.body89 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end101, label %for.body89.epil

for.body89.epil:                                  ; preds = %for.end101.loopexit.unr-lcssa
  %arrayidx.i218.epil = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %32, i64 %indvars.iv265.unr
  %38 = load ptr, ptr %arrayidx.i218.epil, align 8, !tbaa !234
  %sub.ptr.lhs.cast92.epil = ptrtoint ptr %38 to i64
  %sub.ptr.sub94.epil = sub i64 %sub.ptr.lhs.cast92.epil, %sub.ptr.rhs.cast93
  %sub.ptr.div95.epil = sdiv exact i64 %sub.ptr.sub94.epil, 120
  %39 = inttoptr i64 %sub.ptr.div95.epil to ptr
  store ptr %39, ptr %arrayidx.i218.epil, align 8, !tbaa !234
  br label %for.end101

for.end101:                                       ; preds = %for.body89.epil, %for.end101.loopexit.unr-lcssa, %for.end85
  store i32 0, ptr %i, align 8, !tbaa !140
  %m_size.i222 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 2
  %40 = load i32, ptr %m_size.i222, align 4, !tbaa !84
  %cmp104251 = icmp sgt i32 %40, 0
  br i1 %cmp104251, label %for.cond106.preheader.lr.ph, label %for.end129

for.cond106.preheader.lr.ph:                      ; preds = %for.end101
  %m_data.i223 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 5
  %sub.ptr.rhs.cast116 = ptrtoint ptr %0 to i64
  %wide.trip.count276 = zext i32 %40 to i64
  %.pre = load ptr, ptr %m_data.i223, align 8, !tbaa !83
  br label %for.cond106.preheader

for.cond106.preheader:                            ; preds = %for.cond106.preheader.lr.ph, %for.cond.cleanup
  %41 = phi ptr [ %.pre, %for.cond106.preheader.lr.ph ], [ %43, %for.cond.cleanup ]
  %indvars.iv273 = phi i64 [ 0, %for.cond106.preheader.lr.ph ], [ %indvars.iv.next274, %for.cond.cleanup ]
  %m_rank246 = getelementptr inbounds %"struct.btSoftBody::Note", ptr %41, i64 %indvars.iv273, i32 3
  %42 = load i32, ptr %m_rank246, align 8, !tbaa !236
  %cmp109247 = icmp sgt i32 %42, 0
  br i1 %cmp109247, label %for.body110, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body110, %for.cond106.preheader
  %43 = phi ptr [ %41, %for.cond106.preheader ], [ %47, %for.body110 ]
  %indvars.iv.next274 = add nuw nsw i64 %indvars.iv273, 1
  %exitcond277.not = icmp eq i64 %indvars.iv.next274, %wide.trip.count276
  br i1 %exitcond277.not, label %for.end129, label %for.cond106.preheader

for.body110:                                      ; preds = %for.cond106.preheader, %for.body110
  %indvars.iv270 = phi i64 [ %indvars.iv.next271, %for.body110 ], [ 0, %for.cond106.preheader ]
  %44 = phi ptr [ %47, %for.body110 ], [ %41, %for.cond106.preheader ]
  %arrayidx114 = getelementptr inbounds %"struct.btSoftBody::Note", ptr %44, i64 %indvars.iv273, i32 4, i64 %indvars.iv270
  %45 = load ptr, ptr %arrayidx114, align 8, !tbaa !219
  %sub.ptr.lhs.cast115 = ptrtoint ptr %45 to i64
  %sub.ptr.sub117 = sub i64 %sub.ptr.lhs.cast115, %sub.ptr.rhs.cast116
  %sub.ptr.div118 = sdiv exact i64 %sub.ptr.sub117, 120
  %46 = inttoptr i64 %sub.ptr.div118 to ptr
  store ptr %46, ptr %arrayidx114, align 8, !tbaa !219
  %indvars.iv.next271 = add nuw nsw i64 %indvars.iv270, 1
  %47 = load ptr, ptr %m_data.i223, align 8, !tbaa !83
  %m_rank = getelementptr inbounds %"struct.btSoftBody::Note", ptr %47, i64 %indvars.iv273, i32 3
  %48 = load i32, ptr %m_rank, align 8, !tbaa !236
  %49 = sext i32 %48 to i64
  %cmp109 = icmp slt i64 %indvars.iv.next271, %49
  br i1 %cmp109, label %for.body110, label %for.cond.cleanup

for.end129:                                       ; preds = %for.cond.cleanup, %for.end101
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i)
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody17indicesToPointersEPKi(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, ptr noundef readonly %map) local_unnamed_addr #11 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %1 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp410 = icmp sgt i32 %1, 0
  br i1 %cmp410, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %1 to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %2 = icmp eq i32 %1, 1
  br i1 %2, label %for.end.loopexit.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body

for.body:                                         ; preds = %for.inc.1, %for.body.preheader.new
  %indvars.iv = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next.1, %for.inc.1 ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.1, %for.inc.1 ]
  %3 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 %indvars.iv, i32 8
  %4 = load ptr, ptr %m_leaf, align 8, !tbaa !183
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 %indvars.iv
  %5 = getelementptr inbounds %struct.btDbvtNode, ptr %4, i64 0, i32 2
  store ptr %arrayidx.i, ptr %5, align 8, !tbaa !164
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next = or i64 %indvars.iv, 1
  %6 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_leaf.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 %indvars.iv.next, i32 8
  %7 = load ptr, ptr %m_leaf.1, align 8, !tbaa !183
  %tobool.not.1 = icmp eq ptr %7, null
  br i1 %tobool.not.1, label %for.inc.1, label %if.then.1

if.then.1:                                        ; preds = %for.inc
  %arrayidx.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 %indvars.iv.next
  %8 = getelementptr inbounds %struct.btDbvtNode, ptr %7, i64 0, i32 2
  store ptr %arrayidx.i.1, ptr %8, align 8, !tbaa !164
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then.1, %for.inc
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.end.loopexit.unr-lcssa, label %for.body

for.end.loopexit.unr-lcssa:                       ; preds = %for.inc.1, %for.body.preheader
  %indvars.iv.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next.1, %for.inc.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa
  %9 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_leaf.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %9, i64 %indvars.iv.unr, i32 8
  %10 = load ptr, ptr %m_leaf.epil, align 8, !tbaa !183
  %tobool.not.epil = icmp eq ptr %10, null
  br i1 %tobool.not.epil, label %for.end, label %if.then.epil

if.then.epil:                                     ; preds = %for.body.epil
  %arrayidx.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %9, i64 %indvars.iv.unr
  %11 = getelementptr inbounds %struct.btDbvtNode, ptr %10, i64 0, i32 2
  store ptr %arrayidx.i.epil, ptr %11, align 8, !tbaa !164
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %if.then.epil, %for.body.epil, %entry
  %m_size.i301 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %12 = load i32, ptr %m_size.i301, align 4, !tbaa !92
  %cmp13412 = icmp sgt i32 %12, 0
  br i1 %cmp13412, label %for.body14.lr.ph, label %for.end58

for.body14.lr.ph:                                 ; preds = %for.end
  %tobool15.not = icmp eq ptr %map, null
  %m_data.i302 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %wide.trip.count435 = zext i32 %12 to i64
  br i1 %tobool15.not, label %for.body14.us.preheader, label %for.body14

for.body14.us.preheader:                          ; preds = %for.body14.lr.ph
  %xtraiter481 = and i64 %wide.trip.count435, 1
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %for.end58.loopexit.unr-lcssa, label %for.body14.us.preheader.new

for.body14.us.preheader.new:                      ; preds = %for.body14.us.preheader
  %unroll_iter483 = and i64 %wide.trip.count435, 4294967294
  br label %for.body14.us

for.body14.us:                                    ; preds = %for.body14.us, %for.body14.us.preheader.new
  %indvars.iv432 = phi i64 [ 0, %for.body14.us.preheader.new ], [ %indvars.iv.next433.1, %for.body14.us ]
  %niter484 = phi i64 [ 0, %for.body14.us.preheader.new ], [ %niter484.next.1, %for.body14.us ]
  %14 = load ptr, ptr %m_data.i302, align 8, !tbaa !91
  %m_n22.us = getelementptr inbounds %"struct.btSoftBody::Link", ptr %14, i64 %indvars.iv432, i32 1
  %15 = load ptr, ptr %m_n22.us, align 8, !tbaa !219
  %sub.ptr.lhs.cast24.us = ptrtoint ptr %15 to i64
  %cond381.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast24.us
  store ptr %cond381.us, ptr %m_n22.us, align 8, !tbaa !219
  %16 = load ptr, ptr %m_data.i302, align 8, !tbaa !91
  %arrayidx46.us = getelementptr inbounds %"struct.btSoftBody::Link", ptr %16, i64 %indvars.iv432, i32 1, i64 1
  %17 = load ptr, ptr %arrayidx46.us, align 8, !tbaa !219
  %sub.ptr.lhs.cast47.us = ptrtoint ptr %17 to i64
  %cond51.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast47.us
  store ptr %cond51.us, ptr %arrayidx46.us, align 8, !tbaa !219
  %indvars.iv.next433 = or i64 %indvars.iv432, 1
  %18 = load ptr, ptr %m_data.i302, align 8, !tbaa !91
  %m_n22.us.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %18, i64 %indvars.iv.next433, i32 1
  %19 = load ptr, ptr %m_n22.us.1, align 8, !tbaa !219
  %sub.ptr.lhs.cast24.us.1 = ptrtoint ptr %19 to i64
  %cond381.us.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast24.us.1
  store ptr %cond381.us.1, ptr %m_n22.us.1, align 8, !tbaa !219
  %20 = load ptr, ptr %m_data.i302, align 8, !tbaa !91
  %arrayidx46.us.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %20, i64 %indvars.iv.next433, i32 1, i64 1
  %21 = load ptr, ptr %arrayidx46.us.1, align 8, !tbaa !219
  %sub.ptr.lhs.cast47.us.1 = ptrtoint ptr %21 to i64
  %cond51.us.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast47.us.1
  store ptr %cond51.us.1, ptr %arrayidx46.us.1, align 8, !tbaa !219
  %indvars.iv.next433.1 = add nuw nsw i64 %indvars.iv432, 2
  %niter484.next.1 = add i64 %niter484, 2
  %niter484.ncmp.1 = icmp eq i64 %niter484.next.1, %unroll_iter483
  br i1 %niter484.ncmp.1, label %for.end58.loopexit.unr-lcssa, label %for.body14.us

for.body14:                                       ; preds = %for.body14.lr.ph, %for.body14
  %indvars.iv427 = phi i64 [ %indvars.iv.next428, %for.body14 ], [ 0, %for.body14.lr.ph ]
  %22 = load ptr, ptr %m_data.i302, align 8, !tbaa !91
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %22, i64 %indvars.iv427, i32 1
  %23 = load ptr, ptr %m_n, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %23 to i64
  %arrayidx18 = getelementptr inbounds i32, ptr %map, i64 %sub.ptr.lhs.cast
  %24 = load i32, ptr %arrayidx18, align 4, !tbaa !140
  %idxprom = sext i32 %24 to i64
  %cond = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom
  store ptr %cond, ptr %m_n, align 8, !tbaa !219
  %25 = load ptr, ptr %m_data.i302, align 8, !tbaa !91
  %arrayidx36 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %25, i64 %indvars.iv427, i32 1, i64 1
  %26 = load ptr, ptr %arrayidx36, align 8, !tbaa !219
  %sub.ptr.lhs.cast37 = ptrtoint ptr %26 to i64
  %arrayidx39 = getelementptr inbounds i32, ptr %map, i64 %sub.ptr.lhs.cast37
  %27 = load i32, ptr %arrayidx39, align 4, !tbaa !140
  %idxprom40 = sext i32 %27 to i64
  %cond51 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom40
  store ptr %cond51, ptr %arrayidx36, align 8, !tbaa !219
  %indvars.iv.next428 = add nuw nsw i64 %indvars.iv427, 1
  %exitcond431.not = icmp eq i64 %indvars.iv.next428, %wide.trip.count435
  br i1 %exitcond431.not, label %for.end58, label %for.body14

for.end58.loopexit.unr-lcssa:                     ; preds = %for.body14.us, %for.body14.us.preheader
  %indvars.iv432.unr = phi i64 [ 0, %for.body14.us.preheader ], [ %indvars.iv.next433.1, %for.body14.us ]
  %lcmp.mod482.not = icmp eq i64 %xtraiter481, 0
  br i1 %lcmp.mod482.not, label %for.end58, label %for.body14.us.epil

for.body14.us.epil:                               ; preds = %for.end58.loopexit.unr-lcssa
  %28 = load ptr, ptr %m_data.i302, align 8, !tbaa !91
  %m_n22.us.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %28, i64 %indvars.iv432.unr, i32 1
  %29 = load ptr, ptr %m_n22.us.epil, align 8, !tbaa !219
  %sub.ptr.lhs.cast24.us.epil = ptrtoint ptr %29 to i64
  %cond381.us.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast24.us.epil
  store ptr %cond381.us.epil, ptr %m_n22.us.epil, align 8, !tbaa !219
  %30 = load ptr, ptr %m_data.i302, align 8, !tbaa !91
  %arrayidx46.us.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %30, i64 %indvars.iv432.unr, i32 1, i64 1
  %31 = load ptr, ptr %arrayidx46.us.epil, align 8, !tbaa !219
  %sub.ptr.lhs.cast47.us.epil = ptrtoint ptr %31 to i64
  %cond51.us.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast47.us.epil
  store ptr %cond51.us.epil, ptr %arrayidx46.us.epil, align 8, !tbaa !219
  br label %for.end58

for.end58:                                        ; preds = %for.body14, %for.body14.us.epil, %for.end58.loopexit.unr-lcssa, %for.end
  %m_size.i320 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %32 = load i32, ptr %m_size.i320, align 4, !tbaa !96
  %cmp61414 = icmp sgt i32 %32, 0
  br i1 %cmp61414, label %for.body62.lr.ph, label %for.end151

for.body62.lr.ph:                                 ; preds = %for.end58
  %tobool63.not = icmp eq ptr %map, null
  %m_data.i321 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %wide.trip.count440 = zext i32 %32 to i64
  br label %for.body62

for.body62:                                       ; preds = %for.body62.lr.ph, %for.inc149
  %indvars.iv437 = phi i64 [ 0, %for.body62.lr.ph ], [ %indvars.iv.next438, %for.inc149 ]
  %33 = load ptr, ptr %m_data.i321, align 8, !tbaa !95
  %m_n77 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %33, i64 %indvars.iv437, i32 1
  %34 = load ptr, ptr %m_n77, align 8, !tbaa !219
  %sub.ptr.lhs.cast79 = ptrtoint ptr %34 to i64
  br i1 %tobool63.not, label %cond.false124, label %cond.true114

cond.true114:                                     ; preds = %for.body62
  %arrayidx71 = getelementptr inbounds i32, ptr %map, i64 %sub.ptr.lhs.cast79
  %35 = load i32, ptr %arrayidx71, align 4, !tbaa !140
  %idxprom72 = sext i32 %35 to i64
  %cond83 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom72
  store ptr %cond83, ptr %m_n77, align 8, !tbaa !219
  %36 = load ptr, ptr %m_data.i321, align 8, !tbaa !95
  %arrayidx93 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %36, i64 %indvars.iv437, i32 1, i64 1
  %37 = load ptr, ptr %arrayidx93, align 8, !tbaa !219
  %sub.ptr.lhs.cast94 = ptrtoint ptr %37 to i64
  %arrayidx96 = getelementptr inbounds i32, ptr %map, i64 %sub.ptr.lhs.cast94
  %38 = load i32, ptr %arrayidx96, align 4, !tbaa !140
  %idxprom97 = sext i32 %38 to i64
  %cond108 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom97
  store ptr %cond108, ptr %arrayidx93, align 8, !tbaa !219
  %39 = load ptr, ptr %m_data.i321, align 8, !tbaa !95
  %arrayidx118 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %39, i64 %indvars.iv437, i32 1, i64 2
  %40 = load ptr, ptr %arrayidx118, align 8, !tbaa !219
  %sub.ptr.lhs.cast119 = ptrtoint ptr %40 to i64
  %arrayidx121 = getelementptr inbounds i32, ptr %map, i64 %sub.ptr.lhs.cast119
  %41 = load i32, ptr %arrayidx121, align 4, !tbaa !140
  %idxprom122 = sext i32 %41 to i64
  br label %cond.end132

cond.false124:                                    ; preds = %for.body62
  %cond83391 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast79
  store ptr %cond83391, ptr %m_n77, align 8, !tbaa !219
  %42 = load ptr, ptr %m_data.i321, align 8, !tbaa !95
  %arrayidx103 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %42, i64 %indvars.iv437, i32 1, i64 1
  %43 = load ptr, ptr %arrayidx103, align 8, !tbaa !219
  %sub.ptr.lhs.cast104 = ptrtoint ptr %43 to i64
  %cond108403 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast104
  store ptr %cond108403, ptr %arrayidx103, align 8, !tbaa !219
  %44 = load ptr, ptr %m_data.i321, align 8, !tbaa !95
  %arrayidx128 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %44, i64 %indvars.iv437, i32 1, i64 2
  %45 = load ptr, ptr %arrayidx128, align 8, !tbaa !219
  %sub.ptr.lhs.cast129 = ptrtoint ptr %45 to i64
  br label %cond.end132

cond.end132:                                      ; preds = %cond.false124, %cond.true114
  %46 = phi ptr [ %39, %cond.true114 ], [ %44, %cond.false124 ]
  %idxprom122.pn = phi i64 [ %idxprom122, %cond.true114 ], [ %sub.ptr.lhs.cast129, %cond.false124 ]
  %cond133 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom122.pn
  %arrayidx137 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %46, i64 %indvars.iv437, i32 1, i64 2
  store ptr %cond133, ptr %arrayidx137, align 8, !tbaa !219
  %47 = load ptr, ptr %m_data.i321, align 8, !tbaa !95
  %m_leaf140 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %47, i64 %indvars.iv437, i32 4
  %48 = load ptr, ptr %m_leaf140, align 8, !tbaa !232
  %tobool141.not = icmp eq ptr %48, null
  br i1 %tobool141.not, label %for.inc149, label %if.then142

if.then142:                                       ; preds = %cond.end132
  %arrayidx.i350 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %47, i64 %indvars.iv437
  %49 = getelementptr inbounds %struct.btDbvtNode, ptr %48, i64 0, i32 2
  store ptr %arrayidx.i350, ptr %49, align 8, !tbaa !164
  br label %for.inc149

for.inc149:                                       ; preds = %cond.end132, %if.then142
  %indvars.iv.next438 = add nuw nsw i64 %indvars.iv437, 1
  %exitcond441.not = icmp eq i64 %indvars.iv.next438, %wide.trip.count440
  br i1 %exitcond441.not, label %for.end151, label %for.body62

for.end151:                                       ; preds = %for.inc149, %for.end58
  %m_size.i357 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 2
  %50 = load i32, ptr %m_size.i357, align 4, !tbaa !104
  %cmp154416 = icmp sgt i32 %50, 0
  br i1 %cmp154416, label %for.body155.lr.ph, label %for.end179

for.body155.lr.ph:                                ; preds = %for.end151
  %tobool156.not = icmp eq ptr %map, null
  %m_data.i358 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 5
  %51 = load ptr, ptr %m_data.i358, align 8
  %wide.trip.count450 = zext i32 %50 to i64
  br i1 %tobool156.not, label %for.body155.us.preheader, label %for.body155.preheader

for.body155.preheader:                            ; preds = %for.body155.lr.ph
  %xtraiter485 = and i64 %wide.trip.count450, 1
  %52 = icmp eq i32 %50, 1
  br i1 %52, label %for.end179.loopexit479.unr-lcssa, label %for.body155.preheader.new

for.body155.preheader.new:                        ; preds = %for.body155.preheader
  %unroll_iter487 = and i64 %wide.trip.count450, 4294967294
  br label %for.body155

for.body155.us.preheader:                         ; preds = %for.body155.lr.ph
  %xtraiter489 = and i64 %wide.trip.count450, 3
  %53 = icmp ult i32 %50, 4
  br i1 %53, label %for.end179.loopexit.unr-lcssa, label %for.body155.us.preheader.new

for.body155.us.preheader.new:                     ; preds = %for.body155.us.preheader
  %unroll_iter491 = and i64 %wide.trip.count450, 4294967292
  br label %for.body155.us

for.body155.us:                                   ; preds = %for.body155.us, %for.body155.us.preheader.new
  %indvars.iv447 = phi i64 [ 0, %for.body155.us.preheader.new ], [ %indvars.iv.next448.3, %for.body155.us ]
  %niter492 = phi i64 [ 0, %for.body155.us.preheader.new ], [ %niter492.next.3, %for.body155.us ]
  %arrayidx.i363.us = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %51, i64 %indvars.iv447
  %54 = load ptr, ptr %arrayidx.i363.us, align 8, !tbaa !234
  %sub.ptr.lhs.cast169.us = ptrtoint ptr %54 to i64
  %cond173.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast169.us
  store ptr %cond173.us, ptr %arrayidx.i363.us, align 8, !tbaa !234
  %indvars.iv.next448 = or i64 %indvars.iv447, 1
  %arrayidx.i363.us.1 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %51, i64 %indvars.iv.next448
  %55 = load ptr, ptr %arrayidx.i363.us.1, align 8, !tbaa !234
  %sub.ptr.lhs.cast169.us.1 = ptrtoint ptr %55 to i64
  %cond173.us.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast169.us.1
  store ptr %cond173.us.1, ptr %arrayidx.i363.us.1, align 8, !tbaa !234
  %indvars.iv.next448.1 = or i64 %indvars.iv447, 2
  %arrayidx.i363.us.2 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %51, i64 %indvars.iv.next448.1
  %56 = load ptr, ptr %arrayidx.i363.us.2, align 8, !tbaa !234
  %sub.ptr.lhs.cast169.us.2 = ptrtoint ptr %56 to i64
  %cond173.us.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast169.us.2
  store ptr %cond173.us.2, ptr %arrayidx.i363.us.2, align 8, !tbaa !234
  %indvars.iv.next448.2 = or i64 %indvars.iv447, 3
  %arrayidx.i363.us.3 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %51, i64 %indvars.iv.next448.2
  %57 = load ptr, ptr %arrayidx.i363.us.3, align 8, !tbaa !234
  %sub.ptr.lhs.cast169.us.3 = ptrtoint ptr %57 to i64
  %cond173.us.3 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast169.us.3
  store ptr %cond173.us.3, ptr %arrayidx.i363.us.3, align 8, !tbaa !234
  %indvars.iv.next448.3 = add nuw nsw i64 %indvars.iv447, 4
  %niter492.next.3 = add i64 %niter492, 4
  %niter492.ncmp.3 = icmp eq i64 %niter492.next.3, %unroll_iter491
  br i1 %niter492.ncmp.3, label %for.end179.loopexit.unr-lcssa, label %for.body155.us

for.body155:                                      ; preds = %for.body155, %for.body155.preheader.new
  %indvars.iv442 = phi i64 [ 0, %for.body155.preheader.new ], [ %indvars.iv.next443.1, %for.body155 ]
  %niter488 = phi i64 [ 0, %for.body155.preheader.new ], [ %niter488.next.1, %for.body155 ]
  %arrayidx.i360 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %51, i64 %indvars.iv442
  %58 = load ptr, ptr %arrayidx.i360, align 8, !tbaa !234
  %sub.ptr.lhs.cast160 = ptrtoint ptr %58 to i64
  %arrayidx162 = getelementptr inbounds i32, ptr %map, i64 %sub.ptr.lhs.cast160
  %59 = load i32, ptr %arrayidx162, align 4, !tbaa !140
  %idxprom163 = sext i32 %59 to i64
  %cond173 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom163
  store ptr %cond173, ptr %arrayidx.i360, align 8, !tbaa !234
  %indvars.iv.next443 = or i64 %indvars.iv442, 1
  %arrayidx.i360.1 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %51, i64 %indvars.iv.next443
  %60 = load ptr, ptr %arrayidx.i360.1, align 8, !tbaa !234
  %sub.ptr.lhs.cast160.1 = ptrtoint ptr %60 to i64
  %arrayidx162.1 = getelementptr inbounds i32, ptr %map, i64 %sub.ptr.lhs.cast160.1
  %61 = load i32, ptr %arrayidx162.1, align 4, !tbaa !140
  %idxprom163.1 = sext i32 %61 to i64
  %cond173.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom163.1
  store ptr %cond173.1, ptr %arrayidx.i360.1, align 8, !tbaa !234
  %indvars.iv.next443.1 = add nuw nsw i64 %indvars.iv442, 2
  %niter488.next.1 = add i64 %niter488, 2
  %niter488.ncmp.1 = icmp eq i64 %niter488.next.1, %unroll_iter487
  br i1 %niter488.ncmp.1, label %for.end179.loopexit479.unr-lcssa, label %for.body155

for.end179.loopexit.unr-lcssa:                    ; preds = %for.body155.us, %for.body155.us.preheader
  %indvars.iv447.unr = phi i64 [ 0, %for.body155.us.preheader ], [ %indvars.iv.next448.3, %for.body155.us ]
  %lcmp.mod490.not = icmp eq i64 %xtraiter489, 0
  br i1 %lcmp.mod490.not, label %for.end179, label %for.body155.us.epil

for.body155.us.epil:                              ; preds = %for.end179.loopexit.unr-lcssa, %for.body155.us.epil
  %indvars.iv447.epil = phi i64 [ %indvars.iv.next448.epil, %for.body155.us.epil ], [ %indvars.iv447.unr, %for.end179.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body155.us.epil ], [ 0, %for.end179.loopexit.unr-lcssa ]
  %arrayidx.i363.us.epil = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %51, i64 %indvars.iv447.epil
  %62 = load ptr, ptr %arrayidx.i363.us.epil, align 8, !tbaa !234
  %sub.ptr.lhs.cast169.us.epil = ptrtoint ptr %62 to i64
  %cond173.us.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast169.us.epil
  store ptr %cond173.us.epil, ptr %arrayidx.i363.us.epil, align 8, !tbaa !234
  %indvars.iv.next448.epil = add nuw nsw i64 %indvars.iv447.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter489
  br i1 %epil.iter.cmp.not, label %for.end179, label %for.body155.us.epil, !llvm.loop !238

for.end179.loopexit479.unr-lcssa:                 ; preds = %for.body155, %for.body155.preheader
  %indvars.iv442.unr = phi i64 [ 0, %for.body155.preheader ], [ %indvars.iv.next443.1, %for.body155 ]
  %lcmp.mod486.not = icmp eq i64 %xtraiter485, 0
  br i1 %lcmp.mod486.not, label %for.end179, label %for.body155.epil

for.body155.epil:                                 ; preds = %for.end179.loopexit479.unr-lcssa
  %arrayidx.i360.epil = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %51, i64 %indvars.iv442.unr
  %63 = load ptr, ptr %arrayidx.i360.epil, align 8, !tbaa !234
  %sub.ptr.lhs.cast160.epil = ptrtoint ptr %63 to i64
  %arrayidx162.epil = getelementptr inbounds i32, ptr %map, i64 %sub.ptr.lhs.cast160.epil
  %64 = load i32, ptr %arrayidx162.epil, align 4, !tbaa !140
  %idxprom163.epil = sext i32 %64 to i64
  %cond173.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom163.epil
  store ptr %cond173.epil, ptr %arrayidx.i360.epil, align 8, !tbaa !234
  br label %for.end179

for.end179:                                       ; preds = %for.body155.epil, %for.end179.loopexit479.unr-lcssa, %for.end179.loopexit.unr-lcssa, %for.body155.us.epil, %for.end151
  %m_size.i367 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 2
  %65 = load i32, ptr %m_size.i367, align 4, !tbaa !84
  %cmp182421 = icmp sgt i32 %65, 0
  br i1 %cmp182421, label %for.cond184.preheader.lr.ph, label %for.end222

for.cond184.preheader.lr.ph:                      ; preds = %for.end179
  %m_data.i368 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 5
  %tobool189.not = icmp eq ptr %map, null
  %wide.trip.count466 = zext i32 %65 to i64
  %.pre468 = load ptr, ptr %m_data.i368, align 8, !tbaa !83
  br i1 %tobool189.not, label %for.cond184.preheader.us, label %for.cond184.preheader

for.cond184.preheader.us:                         ; preds = %for.cond184.preheader.lr.ph, %for.cond.cleanup.us
  %66 = phi ptr [ %68, %for.cond.cleanup.us ], [ %.pre468, %for.cond184.preheader.lr.ph ]
  %indvars.iv463 = phi i64 [ %indvars.iv.next464, %for.cond.cleanup.us ], [ 0, %for.cond184.preheader.lr.ph ]
  %m_rank418.us = getelementptr inbounds %"struct.btSoftBody::Note", ptr %66, i64 %indvars.iv463, i32 3
  %67 = load i32, ptr %m_rank418.us, align 8, !tbaa !236
  %cmp187419.us = icmp sgt i32 %67, 0
  br i1 %cmp187419.us, label %for.body188.us.us, label %for.cond.cleanup.us

for.cond.cleanup.us:                              ; preds = %for.body188.us.us, %for.cond184.preheader.us
  %68 = phi ptr [ %66, %for.cond184.preheader.us ], [ %71, %for.body188.us.us ]
  %indvars.iv.next464 = add nuw nsw i64 %indvars.iv463, 1
  %exitcond467.not = icmp eq i64 %indvars.iv.next464, %wide.trip.count466
  br i1 %exitcond467.not, label %for.end222, label %for.cond184.preheader.us

for.body188.us.us:                                ; preds = %for.cond184.preheader.us, %for.body188.us.us
  %indvars.iv460 = phi i64 [ %indvars.iv.next461, %for.body188.us.us ], [ 0, %for.cond184.preheader.us ]
  %69 = phi ptr [ %71, %for.body188.us.us ], [ %66, %for.cond184.preheader.us ]
  %arrayidx206.us.us = getelementptr inbounds %"struct.btSoftBody::Note", ptr %69, i64 %indvars.iv463, i32 4, i64 %indvars.iv460
  %70 = load ptr, ptr %arrayidx206.us.us, align 8, !tbaa !219
  %sub.ptr.lhs.cast207.us.us = ptrtoint ptr %70 to i64
  %cond211.us.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast207.us.us
  store ptr %cond211.us.us, ptr %arrayidx206.us.us, align 8, !tbaa !219
  %indvars.iv.next461 = add nuw nsw i64 %indvars.iv460, 1
  %71 = load ptr, ptr %m_data.i368, align 8, !tbaa !83
  %m_rank.us.us = getelementptr inbounds %"struct.btSoftBody::Note", ptr %71, i64 %indvars.iv463, i32 3
  %72 = load i32, ptr %m_rank.us.us, align 8, !tbaa !236
  %73 = sext i32 %72 to i64
  %cmp187.us.us = icmp slt i64 %indvars.iv.next461, %73
  br i1 %cmp187.us.us, label %for.body188.us.us, label %for.cond.cleanup.us

for.cond184.preheader:                            ; preds = %for.cond184.preheader.lr.ph, %for.cond.cleanup
  %74 = phi ptr [ %76, %for.cond.cleanup ], [ %.pre468, %for.cond184.preheader.lr.ph ]
  %indvars.iv455 = phi i64 [ %indvars.iv.next456, %for.cond.cleanup ], [ 0, %for.cond184.preheader.lr.ph ]
  %m_rank418 = getelementptr inbounds %"struct.btSoftBody::Note", ptr %74, i64 %indvars.iv455, i32 3
  %75 = load i32, ptr %m_rank418, align 8, !tbaa !236
  %cmp187419 = icmp sgt i32 %75, 0
  br i1 %cmp187419, label %for.body188, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body188, %for.cond184.preheader
  %76 = phi ptr [ %74, %for.cond184.preheader ], [ %80, %for.body188 ]
  %indvars.iv.next456 = add nuw nsw i64 %indvars.iv455, 1
  %exitcond459.not = icmp eq i64 %indvars.iv.next456, %wide.trip.count466
  br i1 %exitcond459.not, label %for.end222, label %for.cond184.preheader

for.body188:                                      ; preds = %for.cond184.preheader, %for.body188
  %indvars.iv452 = phi i64 [ %indvars.iv.next453, %for.body188 ], [ 0, %for.cond184.preheader ]
  %77 = phi ptr [ %80, %for.body188 ], [ %74, %for.cond184.preheader ]
  %arrayidx195 = getelementptr inbounds %"struct.btSoftBody::Note", ptr %77, i64 %indvars.iv455, i32 4, i64 %indvars.iv452
  %78 = load ptr, ptr %arrayidx195, align 8, !tbaa !219
  %sub.ptr.lhs.cast196 = ptrtoint ptr %78 to i64
  %arrayidx198 = getelementptr inbounds i32, ptr %map, i64 %sub.ptr.lhs.cast196
  %79 = load i32, ptr %arrayidx198, align 4, !tbaa !140
  %idxprom199 = sext i32 %79 to i64
  %cond211 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom199
  store ptr %cond211, ptr %arrayidx195, align 8, !tbaa !219
  %indvars.iv.next453 = add nuw nsw i64 %indvars.iv452, 1
  %80 = load ptr, ptr %m_data.i368, align 8, !tbaa !83
  %m_rank = getelementptr inbounds %"struct.btSoftBody::Note", ptr %80, i64 %indvars.iv455, i32 3
  %81 = load i32, ptr %m_rank, align 8, !tbaa !236
  %82 = sext i32 %81 to i64
  %cmp187 = icmp slt i64 %indvars.iv.next453, %82
  br i1 %cmp187, label %for.body188, label %for.cond.cleanup

for.end222:                                       ; preds = %for.cond.cleanup, %for.cond.cleanup.us, %for.end179
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendLinkEiPNS_8MaterialE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %model, ptr noundef %mat) local_unnamed_addr #4 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %l.sroa.7 = alloca <{ [2 x ptr], float, i8, [3 x i8], float, float, float, %class.btVector3, [4 x i8] }>, align 8
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %l.sroa.7)
  %cmp = icmp sgt i32 %model, -1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !91
  %idxprom.i = zext i32 %model to i64
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %0, i64 %idxprom.i
  %l.sroa.0.0.copyload10 = load ptr, ptr %arrayidx.i, align 8
  %l.sroa.6.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 8
  %l.sroa.6.0.copyload12 = load ptr, ptr %l.sroa.6.0.arrayidx.i.sroa_idx, align 8
  %l.sroa.7.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(52) %l.sroa.7, ptr noundef nonnull align 8 dereferenceable(52) %l.sroa.7.0.arrayidx.i.sroa_idx, i64 52, i1 false)
  br label %if.end

if.else:                                          ; preds = %entry
  %1 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %1, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit, !prof !173

init.check.i:                                     ; preds = %if.else
  %2 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit, label %invoke.cont.i

invoke.cont.i:                                    ; preds = %init.check.i
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8, !tbaa !174
  %3 = tail call ptr @llvm.invariant.start.p0(i64 72, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit

_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit: ; preds = %if.else, %init.check.i, %invoke.cont.i
  %l.sroa.0.0.copyload11 = load ptr, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(52) %l.sroa.7, ptr noundef nonnull align 8 dereferenceable(52) getelementptr inbounds (%"struct.btSoftBody::Link", ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, i64 0, i32 1, i64 0), i64 52, i1 false)
  %tobool.not = icmp eq ptr %mat, null
  br i1 %tobool.not, label %cond.false, label %if.end

cond.false:                                       ; preds = %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit
  %m_data.i6 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %4 = load ptr, ptr %m_data.i6, align 8, !tbaa !119
  %5 = load ptr, ptr %4, align 8, !tbaa !219
  br label %if.end

if.end:                                           ; preds = %cond.false, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit, %if.then
  %l.sroa.6.0 = phi ptr [ %l.sroa.6.0.copyload12, %if.then ], [ %5, %cond.false ], [ %mat, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit ]
  %l.sroa.0.0 = phi ptr [ %l.sroa.0.0.copyload10, %if.then ], [ %l.sroa.0.0.copyload11, %cond.false ], [ %l.sroa.0.0.copyload11, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit ]
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %6 = load i32, ptr %m_size.i.i, align 4, !tbaa !92
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 3
  %7 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !93
  %cmp.i = icmp eq i32 %6, %7
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE9push_backERKS1_.exit

if.then.i:                                        ; preds = %if.end
  %tobool.not.i.i = icmp eq i32 %6, 0
  %mul.i.i = shl nsw i32 %6, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %6, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE9push_backERKS1_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = mul nsw i64 %conv.i.i.i.i, 72
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !92
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %8 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %6, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %8, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %wide.trip.count.i.i.i = zext i32 %8 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 1
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967294
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.1, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %10 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %arrayidx3.i.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %10, i64 %indvars.iv.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i, i64 72, i1 false)
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %11 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %arrayidx3.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %11, i64 %indvars.iv.next.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.1, i64 72, i1 false)
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.unr
  %12 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %arrayidx3.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %12, i64 %indvars.iv.i.i.i.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.epil, i64 72, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i: ; preds = %for.body.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %13 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !91
  %tobool.not.i10.i.i = icmp eq ptr %13, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 6
  %14 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %14, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %13)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !90
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !91
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !93
  %.pre7.i = load i32, ptr %m_size.i.i, align 4, !tbaa !92
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE9push_backERKS1_.exit

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE9push_backERKS1_.exit: ; preds = %if.end, %if.then.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i
  %15 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i ], [ %6, %if.then.i ], [ %6, %if.end ]
  %m_data.i7 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %16 = load ptr, ptr %m_data.i7, align 8, !tbaa !91
  %idxprom.i8 = sext i32 %15 to i64
  %arrayidx.i9 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %16, i64 %idxprom.i8
  store ptr %l.sroa.0.0, ptr %arrayidx.i9, align 8
  %l.sroa.6.0.arrayidx.i9.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i9, i64 8
  store ptr %l.sroa.6.0, ptr %l.sroa.6.0.arrayidx.i9.sroa_idx, align 8
  %l.sroa.7.0.arrayidx.i9.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i9, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7.0.arrayidx.i9.sroa_idx, ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7, i64 56, i1 false)
  %17 = load i32, ptr %m_size.i.i, align 4, !tbaa !92
  %inc.i = add nsw i32 %17, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !92
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %l.sroa.7)
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendLinkEiiPNS_8MaterialEb(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %node0, i32 noundef %node1, ptr noundef %mat, i1 noundef zeroext %bcheckexist) local_unnamed_addr #4 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i = sext i32 %node0 to i64
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i
  %idxprom.i5 = sext i32 %node1 to i64
  %arrayidx.i6 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i5
  tail call void @_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull %arrayidx.i, ptr noundef nonnull %arrayidx.i6, ptr noundef %mat, i1 noundef zeroext %bcheckexist)
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %node0, ptr noundef %node1, ptr noundef %mat, i1 noundef zeroext %bcheckexist) local_unnamed_addr #0 align 2 {
entry:
  br i1 %bcheckexist, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %0 = load i32, ptr %m_size.i.i, align 4, !tbaa !92
  %cmp.not33.i = icmp sgt i32 %0, 0
  br i1 %cmp.not33.i, label %for.body.lr.ph.i, label %if.then

for.body.lr.ph.i:                                 ; preds = %lor.lhs.false
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %1 = load ptr, ptr %m_data.i.i, align 8, !tbaa !91
  %2 = zext i32 %0 to i64
  %m_n.i22 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 0, i32 1
  %3 = load ptr, ptr %m_n.i22, align 8, !tbaa !219
  %cmp5.i23 = icmp eq ptr %3, %node0
  %arrayidx7.i24 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 0, i32 1, i64 1
  %4 = load ptr, ptr %arrayidx7.i24, align 8
  %cmp9.i25 = icmp eq ptr %4, %node1
  %or.cond.i26 = select i1 %cmp5.i23, i1 %cmp9.i25, i1 false
  br i1 %or.cond.i26, label %if.end, label %lor.lhs.false.i.preheader

lor.lhs.false.i.preheader:                        ; preds = %for.body.lr.ph.i
  %cmp13.i31 = icmp eq ptr %3, %node1
  %cmp18.i32 = icmp eq ptr %4, %node0
  %or.cond32.i33 = select i1 %cmp13.i31, i1 %cmp18.i32, i1 false
  br i1 %or.cond32.i33, label %if.end, label %for.cond.i

for.cond.i:                                       ; preds = %lor.lhs.false.i.preheader, %lor.lhs.false.i
  %indvars.iv.i2734 = phi i64 [ %indvars.iv.next.i, %lor.lhs.false.i ], [ 0, %lor.lhs.false.i.preheader ]
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i2734, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %2
  br i1 %exitcond.not.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit, label %for.body.i

for.body.i:                                       ; preds = %for.cond.i
  %m_n.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv.next.i, i32 1
  %5 = load ptr, ptr %m_n.i, align 8, !tbaa !219
  %cmp5.i = icmp eq ptr %5, %node0
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv.next.i, i32 1, i64 1
  %6 = load ptr, ptr %arrayidx7.i, align 8
  %cmp9.i = icmp eq ptr %6, %node1
  %or.cond.i = select i1 %cmp5.i, i1 %cmp9.i, i1 false
  br i1 %or.cond.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %for.body.i
  %cmp13.i = icmp eq ptr %5, %node1
  %cmp18.i = icmp eq ptr %6, %node0
  %or.cond32.i = select i1 %cmp13.i, i1 %cmp18.i, i1 false
  br i1 %or.cond32.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit, label %for.cond.i

_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit:   ; preds = %for.cond.i, %for.body.i, %lor.lhs.false.i
  %cmp.not.i.le = icmp ult i64 %indvars.iv.next.i, %2
  br i1 %cmp.not.i.le, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit, %entry
  tail call void @_ZN10btSoftBody10appendLinkEiPNS_8MaterialE(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef -1, ptr noundef %mat)
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %7 = load i32, ptr %m_size.i, align 4, !tbaa !92
  %sub = add nsw i32 %7, -1
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %8 = load ptr, ptr %m_data.i, align 8, !tbaa !91
  %idxprom.i = sext i32 %sub to i64
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %8, i64 %idxprom.i, i32 1
  store ptr %node0, ptr %m_n, align 8, !tbaa !219
  %arrayidx6 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %8, i64 %idxprom.i, i32 1, i64 1
  store ptr %node1, ptr %arrayidx6, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %node0, i64 0, i32 1
  %m_x11 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %node1, i64 0, i32 1
  %9 = load float, ptr %m_x, align 4, !tbaa !137
  %10 = load float, ptr %m_x11, align 4, !tbaa !137
  %sub.i = fsub float %9, %10
  %arrayidx5.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %node0, i64 0, i32 1, i32 0, i64 1
  %11 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %arrayidx7.i20 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %node1, i64 0, i32 1, i32 0, i64 1
  %12 = load float, ptr %arrayidx7.i20, align 4, !tbaa !137
  %sub8.i = fsub float %11, %12
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %node0, i64 0, i32 1, i32 0, i64 2
  %13 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %node1, i64 0, i32 1, i32 0, i64 2
  %14 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %13, %14
  %mul8.i.i.i = fmul float %sub8.i, %sub8.i
  %15 = tail call float @llvm.fmuladd.f32(float %sub.i, float %sub.i, float %mul8.i.i.i)
  %16 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub14.i, float %15)
  %sqrt.i = tail call float @llvm.sqrt.f32(float %16)
  %m_rl = getelementptr inbounds %"struct.btSoftBody::Link", ptr %8, i64 %idxprom.i, i32 2
  store float %sqrt.i, ptr %m_rl, align 8, !tbaa !239
  %m_bUpdateRtCst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  store i8 1, ptr %m_bUpdateRtCst, align 4, !tbaa !147
  br label %if.end

if.end:                                           ; preds = %lor.lhs.false.i.preheader, %for.body.lr.ph.i, %if.then, %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendFaceEiPNS_8MaterialE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %model, ptr noundef %mat) local_unnamed_addr #4 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %f.sroa.7 = alloca { [3 x ptr], %class.btVector3, float, ptr }, align 8
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %f.sroa.7)
  %cmp = icmp sgt i32 %model, -1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !95
  %idxprom.i = zext i32 %model to i64
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %0, i64 %idxprom.i
  %f.sroa.0.0.copyload = load ptr, ptr %arrayidx.i, align 8
  %f.sroa.6.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 8
  %f.sroa.6.0.copyload = load ptr, ptr %f.sroa.6.0.arrayidx.i.sroa_idx, align 8
  %f.sroa.7.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7, ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.0.arrayidx.i.sroa_idx, i64 56, i1 false)
  br label %if.end

if.else:                                          ; preds = %entry
  %1 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %1, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit, !prof !173

init.check.i:                                     ; preds = %if.else
  %2 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy) #38
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit, label %invoke.cont.i

invoke.cont.i:                                    ; preds = %init.check.i
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy, align 8, !tbaa !174
  %3 = tail call ptr @llvm.invariant.start.p0(i64 72, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit

_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit: ; preds = %if.else, %init.check.i, %invoke.cont.i
  %f.sroa.0.0.copyload10 = load ptr, ptr @_ZZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7, ptr noundef nonnull align 8 dereferenceable(56) getelementptr inbounds (%"struct.btSoftBody::Face", ptr @_ZZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy, i64 0, i32 1, i64 0), i64 56, i1 false)
  %tobool.not = icmp eq ptr %mat, null
  br i1 %tobool.not, label %cond.false, label %if.end

cond.false:                                       ; preds = %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit
  %m_data.i6 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %4 = load ptr, ptr %m_data.i6, align 8, !tbaa !119
  %5 = load ptr, ptr %4, align 8, !tbaa !219
  br label %if.end

if.end:                                           ; preds = %cond.false, %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit, %if.then
  %f.sroa.6.0 = phi ptr [ %f.sroa.6.0.copyload, %if.then ], [ %5, %cond.false ], [ %mat, %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit ]
  %f.sroa.0.0 = phi ptr [ %f.sroa.0.0.copyload, %if.then ], [ %f.sroa.0.0.copyload10, %cond.false ], [ %f.sroa.0.0.copyload10, %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit ]
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %6 = load i32, ptr %m_size.i.i, align 4, !tbaa !96
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 3
  %7 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !97
  %cmp.i = icmp eq i32 %6, %7
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE9push_backERKS1_.exit

if.then.i:                                        ; preds = %if.end
  %tobool.not.i.i = icmp eq i32 %6, 0
  %mul.i.i = shl nsw i32 %6, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %6, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE9push_backERKS1_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = mul nsw i64 %conv.i.i.i.i, 72
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !96
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %8 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %6, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %8, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %wide.trip.count.i.i.i = zext i32 %8 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 1
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967294
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.1, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %10 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !95
  %arrayidx3.i.i.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %10, i64 %indvars.iv.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i, i64 72, i1 false)
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %11 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !95
  %arrayidx3.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %11, i64 %indvars.iv.next.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.1, i64 72, i1 false)
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Face", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.unr
  %12 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !95
  %arrayidx3.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Face", ptr %12, i64 %indvars.iv.i.i.i.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.epil, i64 72, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i: ; preds = %for.body.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %13 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !95
  %tobool.not.i10.i.i = icmp eq ptr %13, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 6
  %14 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %14, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %13)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !94
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !95
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !97
  %.pre7.i = load i32, ptr %m_size.i.i, align 4, !tbaa !96
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE9push_backERKS1_.exit

_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE9push_backERKS1_.exit: ; preds = %if.end, %if.then.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i
  %15 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i ], [ %6, %if.then.i ], [ %6, %if.end ]
  %m_data.i7 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %16 = load ptr, ptr %m_data.i7, align 8, !tbaa !95
  %idxprom.i8 = sext i32 %15 to i64
  %arrayidx.i9 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %16, i64 %idxprom.i8
  store ptr %f.sroa.0.0, ptr %arrayidx.i9, align 8
  %f.sroa.6.0.arrayidx.i9.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i9, i64 8
  store ptr %f.sroa.6.0, ptr %f.sroa.6.0.arrayidx.i9.sroa_idx, align 8
  %f.sroa.7.0.arrayidx.i9.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i9, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.0.arrayidx.i9.sroa_idx, ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7, i64 56, i1 false)
  %17 = load i32, ptr %m_size.i.i, align 4, !tbaa !96
  %inc.i = add nsw i32 %17, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !96
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %f.sroa.7)
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendFaceEiiiPNS_8MaterialE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %node0, i32 noundef %node1, i32 noundef %node2, ptr noundef %mat) local_unnamed_addr #0 align 2 {
entry:
  %cmp = icmp eq i32 %node0, %node1
  %cmp2 = icmp eq i32 %node1, %node2
  %or.cond = or i1 %cmp, %cmp2
  %cmp5 = icmp eq i32 %node2, %node0
  %or.cond40 = or i1 %cmp5, %or.cond
  br i1 %or.cond40, label %return, label %if.end7

if.end7:                                          ; preds = %entry
  tail call void @_ZN10btSoftBody10appendFaceEiPNS_8MaterialE(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef -1, ptr noundef %mat)
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !96
  %sub = add nsw i32 %0, -1
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !95
  %idxprom.i = sext i32 %sub to i64
  %m_data.i41 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %2 = load ptr, ptr %m_data.i41, align 8, !tbaa !87
  %idxprom.i42 = sext i32 %node0 to i64
  %arrayidx.i43 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %idxprom.i42
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 %idxprom.i, i32 1
  store ptr %arrayidx.i43, ptr %m_n, align 8, !tbaa !219
  %3 = load ptr, ptr %m_data.i41, align 8, !tbaa !87
  %idxprom.i45 = sext i32 %node1 to i64
  %arrayidx.i46 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 %idxprom.i45
  %arrayidx14 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 %idxprom.i, i32 1, i64 1
  store ptr %arrayidx.i46, ptr %arrayidx14, align 8, !tbaa !219
  %4 = load ptr, ptr %m_data.i41, align 8, !tbaa !87
  %idxprom.i48 = sext i32 %node2 to i64
  %arrayidx.i49 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 %idxprom.i48
  %arrayidx18 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 %idxprom.i, i32 1, i64 2
  store ptr %arrayidx.i49, ptr %arrayidx18, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %idxprom.i42, i32 1
  %m_x23 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 %idxprom.i45, i32 1
  %m_x26 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 %idxprom.i48, i32 1
  %5 = load float, ptr %m_x23, align 4, !tbaa !137
  %6 = load float, ptr %m_x, align 4, !tbaa !137
  %sub.i.i = fsub float %5, %6
  %arrayidx5.i.i = getelementptr inbounds [4 x float], ptr %m_x23, i64 0, i64 1
  %7 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 1
  %8 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %sub8.i.i = fsub float %7, %8
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %m_x23, i64 0, i64 2
  %9 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %arrayidx13.i.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %10 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %9, %10
  %11 = load float, ptr %m_x26, align 4, !tbaa !137
  %sub.i7.i = fsub float %11, %6
  %arrayidx5.i8.i = getelementptr inbounds [4 x float], ptr %m_x26, i64 0, i64 1
  %12 = load float, ptr %arrayidx5.i8.i, align 4, !tbaa !137
  %sub8.i10.i = fsub float %12, %8
  %arrayidx11.i11.i = getelementptr inbounds [4 x float], ptr %m_x26, i64 0, i64 2
  %13 = load float, ptr %arrayidx11.i11.i, align 4, !tbaa !137
  %sub14.i13.i = fsub float %13, %10
  %14 = fneg float %sub14.i.i
  %neg.i.i.i = fmul float %sub8.i10.i, %14
  %15 = tail call float @llvm.fmuladd.f32(float %sub8.i.i, float %sub14.i13.i, float %neg.i.i.i)
  %16 = fneg float %sub.i.i
  %neg19.i.i.i = fmul float %sub14.i13.i, %16
  %17 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %sub.i7.i, float %neg19.i.i.i)
  %18 = fneg float %sub8.i.i
  %neg30.i.i.i = fmul float %sub.i7.i, %18
  %19 = tail call float @llvm.fmuladd.f32(float %sub.i.i, float %sub8.i10.i, float %neg30.i.i.i)
  %mul8.i.i.i.i = fmul float %17, %17
  %20 = tail call float @llvm.fmuladd.f32(float %15, float %15, float %mul8.i.i.i.i)
  %21 = tail call float @llvm.fmuladd.f32(float %19, float %19, float %20)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %21)
  %m_ra = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 %idxprom.i, i32 3
  store float %sqrt.i.i, ptr %m_ra, align 8, !tbaa !241
  %m_bUpdateRtCst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  store i8 1, ptr %m_bUpdateRtCst, align 4, !tbaa !147
  br label %return

return:                                           ; preds = %entry, %if.end7
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody11appendTetraEiPNS_8MaterialE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %model, ptr noundef %mat) local_unnamed_addr #4 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %t.sroa.7 = alloca { [4 x ptr], float, ptr, [4 x %class.btVector3], float, float }, align 8
  call void @llvm.lifetime.start.p0(i64 120, ptr nonnull %t.sroa.7)
  %cmp = icmp sgt i32 %model, -1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !99
  %idxprom.i = zext i32 %model to i64
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %0, i64 %idxprom.i
  %t.sroa.0.0.copyload = load ptr, ptr %arrayidx.i, align 8
  %t.sroa.6.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 8
  %t.sroa.6.0.copyload = load ptr, ptr %t.sroa.6.0.arrayidx.i.sroa_idx, align 8
  %t.sroa.7.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %t.sroa.7, ptr noundef nonnull align 8 dereferenceable(120) %t.sroa.7.0.arrayidx.i.sroa_idx, i64 120, i1 false)
  br label %if.end

if.else:                                          ; preds = %entry
  %1 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %1, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_.exit, !prof !173

init.check.i:                                     ; preds = %if.else
  %2 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_E9zerodummy) #38
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %_ZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_.exit, label %invoke.cont.i

invoke.cont.i:                                    ; preds = %init.check.i
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_E9zerodummy, align 8, !tbaa !174
  %3 = tail call ptr @llvm.invariant.start.p0(i64 136, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_E9zerodummy)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_.exit

_ZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_.exit: ; preds = %if.else, %init.check.i, %invoke.cont.i
  %t.sroa.0.0.copyload10 = load ptr, ptr @_ZZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_E9zerodummy, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %t.sroa.7, ptr noundef nonnull align 8 dereferenceable(120) getelementptr inbounds (%"struct.btSoftBody::Tetra", ptr @_ZZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_E9zerodummy, i64 0, i32 1, i64 0), i64 120, i1 false)
  %tobool.not = icmp eq ptr %mat, null
  br i1 %tobool.not, label %cond.false, label %if.end

cond.false:                                       ; preds = %_ZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_.exit
  %m_data.i6 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %4 = load ptr, ptr %m_data.i6, align 8, !tbaa !119
  %5 = load ptr, ptr %4, align 8, !tbaa !219
  br label %if.end

if.end:                                           ; preds = %cond.false, %_ZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_.exit, %if.then
  %t.sroa.6.0 = phi ptr [ %t.sroa.6.0.copyload, %if.then ], [ %5, %cond.false ], [ %mat, %_ZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_.exit ]
  %t.sroa.0.0 = phi ptr [ %t.sroa.0.0.copyload, %if.then ], [ %t.sroa.0.0.copyload10, %cond.false ], [ %t.sroa.0.0.copyload10, %_ZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_.exit ]
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 2
  %6 = load i32, ptr %m_size.i.i, align 4, !tbaa !100
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 3
  %7 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !101
  %cmp.i = icmp eq i32 %6, %7
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE9push_backERKS1_.exit

if.then.i:                                        ; preds = %if.end
  %tobool.not.i.i = icmp eq i32 %6, 0
  %mul.i.i = shl nsw i32 %6, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %6, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE9push_backERKS1_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = mul nsw i64 %conv.i.i.i.i, 136
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !100
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %8 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %6, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %8, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  %wide.trip.count.i.i.i = zext i32 %8 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 1
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967294
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.1, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %10 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !99
  %arrayidx3.i.i.i = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %10, i64 %indvars.iv.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(136) %arrayidx.i.i.i, ptr noundef nonnull align 8 dereferenceable(136) %arrayidx3.i.i.i, i64 136, i1 false)
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %11 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !99
  %arrayidx3.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %11, i64 %indvars.iv.next.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(136) %arrayidx.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(136) %arrayidx3.i.i.i.1, i64 136, i1 false)
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.unr
  %12 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !99
  %arrayidx3.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %12, i64 %indvars.iv.i.i.i.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(136) %arrayidx.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(136) %arrayidx3.i.i.i.epil, i64 136, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i: ; preds = %for.body.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  %13 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !99
  %tobool.not.i10.i.i = icmp eq ptr %13, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 6
  %14 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %14, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %13)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !98
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !99
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !101
  %.pre7.i = load i32, ptr %m_size.i.i, align 4, !tbaa !100
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE9push_backERKS1_.exit

_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE9push_backERKS1_.exit: ; preds = %if.end, %if.then.i, %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE10deallocateEv.exit.i.i
  %15 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE10deallocateEv.exit.i.i ], [ %6, %if.then.i ], [ %6, %if.end ]
  %m_data.i7 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  %16 = load ptr, ptr %m_data.i7, align 8, !tbaa !99
  %idxprom.i8 = sext i32 %15 to i64
  %arrayidx.i9 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %16, i64 %idxprom.i8
  store ptr %t.sroa.0.0, ptr %arrayidx.i9, align 8
  %t.sroa.6.0.arrayidx.i9.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i9, i64 8
  store ptr %t.sroa.6.0, ptr %t.sroa.6.0.arrayidx.i9.sroa_idx, align 8
  %t.sroa.7.0.arrayidx.i9.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i9, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %t.sroa.7.0.arrayidx.i9.sroa_idx, ptr noundef nonnull align 8 dereferenceable(120) %t.sroa.7, i64 120, i1 false)
  %17 = load i32, ptr %m_size.i.i, align 4, !tbaa !100
  %inc.i = add nsw i32 %17, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !100
  call void @llvm.lifetime.end.p0(i64 120, ptr nonnull %t.sroa.7)
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody11appendTetraEiiiiPNS_8MaterialE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %node0, i32 noundef %node1, i32 noundef %node2, i32 noundef %node3, ptr noundef %mat) local_unnamed_addr #0 align 2 {
entry:
  tail call void @_ZN10btSoftBody11appendTetraEiPNS_8MaterialE(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef -1, ptr noundef %mat)
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !100
  %sub = add nsw i32 %0, -1
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !99
  %idxprom.i = sext i32 %sub to i64
  %m_data.i37 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %2 = load ptr, ptr %m_data.i37, align 8, !tbaa !87
  %idxprom.i38 = sext i32 %node0 to i64
  %arrayidx.i39 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %idxprom.i38
  %m_n = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %1, i64 %idxprom.i, i32 1
  store ptr %arrayidx.i39, ptr %m_n, align 8, !tbaa !219
  %3 = load ptr, ptr %m_data.i37, align 8, !tbaa !87
  %idxprom.i41 = sext i32 %node1 to i64
  %arrayidx.i42 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 %idxprom.i41
  %arrayidx8 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %1, i64 %idxprom.i, i32 1, i64 1
  store ptr %arrayidx.i42, ptr %arrayidx8, align 8, !tbaa !219
  %4 = load ptr, ptr %m_data.i37, align 8, !tbaa !87
  %idxprom.i44 = sext i32 %node2 to i64
  %arrayidx.i45 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 %idxprom.i44
  %arrayidx12 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %1, i64 %idxprom.i, i32 1, i64 2
  store ptr %arrayidx.i45, ptr %arrayidx12, align 8, !tbaa !219
  %5 = load ptr, ptr %m_data.i37, align 8, !tbaa !87
  %idxprom.i47 = sext i32 %node3 to i64
  %arrayidx.i48 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 %idxprom.i47
  %arrayidx16 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %1, i64 %idxprom.i, i32 1, i64 3
  store ptr %arrayidx.i48, ptr %arrayidx16, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %idxprom.i38, i32 1
  %m_x21 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 %idxprom.i41, i32 1
  %m_x24 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 %idxprom.i44, i32 1
  %m_x27 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 %idxprom.i47, i32 1
  %6 = load float, ptr %m_x21, align 4, !tbaa !137
  %7 = load float, ptr %m_x, align 4, !tbaa !137
  %sub.i.i = fsub float %6, %7
  %arrayidx5.i.i = getelementptr inbounds [4 x float], ptr %m_x21, i64 0, i64 1
  %8 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 1
  %9 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %sub8.i.i = fsub float %8, %9
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %m_x21, i64 0, i64 2
  %10 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %arrayidx13.i.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %11 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %10, %11
  %12 = load float, ptr %m_x24, align 4, !tbaa !137
  %sub.i10.i = fsub float %12, %7
  %arrayidx5.i11.i = getelementptr inbounds [4 x float], ptr %m_x24, i64 0, i64 1
  %13 = load float, ptr %arrayidx5.i11.i, align 4, !tbaa !137
  %sub8.i13.i = fsub float %13, %9
  %arrayidx11.i14.i = getelementptr inbounds [4 x float], ptr %m_x24, i64 0, i64 2
  %14 = load float, ptr %arrayidx11.i14.i, align 4, !tbaa !137
  %sub14.i16.i = fsub float %14, %11
  %15 = load float, ptr %m_x27, align 4, !tbaa !137
  %sub.i22.i = fsub float %15, %7
  %arrayidx5.i23.i = getelementptr inbounds [4 x float], ptr %m_x27, i64 0, i64 1
  %16 = load float, ptr %arrayidx5.i23.i, align 4, !tbaa !137
  %sub8.i25.i = fsub float %16, %9
  %arrayidx11.i26.i = getelementptr inbounds [4 x float], ptr %m_x27, i64 0, i64 2
  %17 = load float, ptr %arrayidx11.i26.i, align 4, !tbaa !137
  %sub14.i28.i = fsub float %17, %11
  %18 = fneg float %sub14.i16.i
  %neg.i.i.i = fmul float %sub8.i25.i, %18
  %19 = tail call float @llvm.fmuladd.f32(float %sub8.i13.i, float %sub14.i28.i, float %neg.i.i.i)
  %20 = fneg float %sub.i10.i
  %neg19.i.i.i = fmul float %sub14.i28.i, %20
  %21 = tail call float @llvm.fmuladd.f32(float %sub14.i16.i, float %sub.i22.i, float %neg19.i.i.i)
  %22 = fneg float %sub8.i13.i
  %neg30.i.i.i = fmul float %sub.i22.i, %22
  %23 = tail call float @llvm.fmuladd.f32(float %sub.i10.i, float %sub8.i25.i, float %neg30.i.i.i)
  %mul8.i.i.i = fmul float %sub8.i.i, %21
  %24 = tail call float @llvm.fmuladd.f32(float %sub.i.i, float %19, float %mul8.i.i.i)
  %25 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %23, float %24)
  %m_rv = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %1, i64 %idxprom.i, i32 2
  store float %25, ptr %m_rv, align 8, !tbaa !242
  %m_bUpdateRtCst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  store i8 1, ptr %m_bUpdateRtCst, align 4, !tbaa !147
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody12appendAnchorEiP11btRigidBodyb(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %node, ptr noundef %body, i1 noundef zeroext %disableCollisionBetweenLinkedBodies) local_unnamed_addr #0 align 2 {
entry:
  %a = alloca %"struct.btSoftBody::Anchor", align 8
  br i1 %disableCollisionBetweenLinkedBodies, label %if.then, label %if.end7

if.then:                                          ; preds = %entry
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 2
  %0 = load i32, ptr %m_size.i.i, align 4, !tbaa !16
  %cmp8.i = icmp sgt i32 %0, 0
  br i1 %cmp8.i, label %for.body.lr.ph.i, label %if.then4

for.body.lr.ph.i:                                 ; preds = %if.then
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !15
  %wide.trip.count.i = zext i32 %0 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.inc.i ]
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv.i
  %2 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %cmp3.i = icmp eq ptr %2, %body
  br i1 %cmp3.i, label %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE16findLinearSearchERKS1_.exit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %if.then4, label %for.body.i

_ZNK20btAlignedObjectArrayIP17btCollisionObjectE16findLinearSearchERKS1_.exit: ; preds = %for.body.i
  %3 = trunc i64 %indvars.iv.i to i32
  %cmp = icmp eq i32 %0, %3
  br i1 %cmp, label %if.then4, label %if.end7

if.then4:                                         ; preds = %for.inc.i, %if.then, %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE16findLinearSearchERKS1_.exit
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 3
  %4 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !17
  %cmp.i = icmp eq i32 %0, %4
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIP17btCollisionObjectE9push_backERKS1_.exit

if.then.i:                                        ; preds = %if.then4
  %tobool.not.i.i = icmp eq i32 %0, 0
  %mul.i.i = shl nsw i32 %0, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %0, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIP17btCollisionObjectE9push_backERKS1_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIP17btCollisionObjectE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 3
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !16
  br label %_ZN20btAlignedObjectArrayIP17btCollisionObjectE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIP17btCollisionObjectE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %5 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %0, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %5, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIP17btCollisionObjectE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 5
  %wide.trip.count.i.i.i = zext i32 %5 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 3
  %6 = icmp ult i32 %5, 4
  br i1 %6, label %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967292
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.3, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %7 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !15
  %arrayidx3.i.i.i = getelementptr inbounds ptr, ptr %7, i64 %indvars.iv.i.i.i
  %8 = load ptr, ptr %arrayidx3.i.i.i, align 8, !tbaa !219
  store ptr %8, ptr %arrayidx.i.i.i, align 8, !tbaa !219
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %9 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !15
  %arrayidx3.i.i.i.1 = getelementptr inbounds ptr, ptr %9, i64 %indvars.iv.next.i.i.i
  %10 = load ptr, ptr %arrayidx3.i.i.i.1, align 8, !tbaa !219
  store ptr %10, ptr %arrayidx.i.i.i.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.1 = or i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %11 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !15
  %arrayidx3.i.i.i.2 = getelementptr inbounds ptr, ptr %11, i64 %indvars.iv.next.i.i.i.1
  %12 = load ptr, ptr %arrayidx3.i.i.i.2, align 8, !tbaa !219
  store ptr %12, ptr %arrayidx.i.i.i.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.2 = or i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %13 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !15
  %arrayidx3.i.i.i.3 = getelementptr inbounds ptr, ptr %13, i64 %indvars.iv.next.i.i.i.2
  %14 = load ptr, ptr %arrayidx3.i.i.i.3, align 8, !tbaa !219
  store ptr %14, ptr %arrayidx.i.i.i.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil
  %indvars.iv.i.i.i.epil = phi i64 [ %indvars.iv.next.i.i.i.epil, %for.body.i.i.i.epil ], [ %indvars.iv.i.i.i.unr, %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.i.i.epil ], [ 0, %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa ]
  %arrayidx.i.i.i.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.epil
  %15 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !15
  %arrayidx3.i.i.i.epil = getelementptr inbounds ptr, ptr %15, i64 %indvars.iv.i.i.i.epil
  %16 = load ptr, ptr %arrayidx3.i.i.i.epil, align 8, !tbaa !219
  store ptr %16, ptr %arrayidx.i.i.i.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.epil = add nuw nsw i64 %indvars.iv.i.i.i.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i, label %for.body.i.i.i.epil, !llvm.loop !244

_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i: ; preds = %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil, %_ZN20btAlignedObjectArrayIP17btCollisionObjectE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 5
  %17 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !15
  %tobool.not.i10.i.i = icmp eq ptr %17, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 6
  %18 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %18, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIP17btCollisionObjectE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %17)
  %.pre7.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !16
  br label %_ZN20btAlignedObjectArrayIP17btCollisionObjectE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIP17btCollisionObjectE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i
  %.pre7.i = phi i32 [ %.pre7.pre.i, %if.then3.i.i.i ], [ %5, %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i ]
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !8
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !15
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !17
  br label %_ZN20btAlignedObjectArrayIP17btCollisionObjectE9push_backERKS1_.exit

_ZN20btAlignedObjectArrayIP17btCollisionObjectE9push_backERKS1_.exit: ; preds = %if.then4, %if.then.i, %_ZN20btAlignedObjectArrayIP17btCollisionObjectE10deallocateEv.exit.i.i
  %19 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIP17btCollisionObjectE10deallocateEv.exit.i.i ], [ %0, %if.then.i ], [ %0, %if.then4 ]
  %m_data.i19 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 5
  %20 = load ptr, ptr %m_data.i19, align 8, !tbaa !15
  %idxprom.i = sext i32 %19 to i64
  %arrayidx.i20 = getelementptr inbounds ptr, ptr %20, i64 %idxprom.i
  store ptr %body, ptr %arrayidx.i20, align 8, !tbaa !219
  %inc.i = add nsw i32 %19, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !16
  br label %if.end7

if.end7:                                          ; preds = %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE16findLinearSearchERKS1_.exit, %_ZN20btAlignedObjectArrayIP17btCollisionObjectE9push_backERKS1_.exit, %entry
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %a) #38
  %m_data.i21 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %21 = load ptr, ptr %m_data.i21, align 8, !tbaa !87
  %idxprom.i22 = sext i32 %node to i64
  %arrayidx.i23 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %idxprom.i22
  store ptr %arrayidx.i23, ptr %a, align 8, !tbaa !234
  %m_body = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %a, i64 0, i32 2
  store ptr %body, ptr %m_body, align 8, !tbaa !245
  %m_interpolationWorldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %body, i64 0, i32 2
  %arrayidx3.i.i = getelementptr inbounds %class.btCollisionObject, ptr %body, i64 0, i32 2, i32 0, i32 0, i64 1
  %arrayidx6.i.i = getelementptr inbounds %class.btCollisionObject, ptr %body, i64 0, i32 2, i32 0, i32 0, i64 2
  %arrayidx.i28.i.i = getelementptr inbounds %class.btCollisionObject, ptr %body, i64 0, i32 2, i32 0, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i29.i.i = getelementptr inbounds %class.btCollisionObject, ptr %body, i64 0, i32 2, i32 0, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i30.i.i = getelementptr inbounds %class.btCollisionObject, ptr %body, i64 0, i32 2, i32 0, i32 0, i64 2, i32 0, i64 2
  %22 = load float, ptr %arrayidx.i28.i.i, align 4, !tbaa !137, !noalias !246
  %23 = load float, ptr %arrayidx.i29.i.i, align 4, !tbaa !137, !noalias !246
  %24 = load float, ptr %arrayidx.i30.i.i, align 4, !tbaa !137, !noalias !246
  %m_origin.i = getelementptr inbounds %class.btCollisionObject, ptr %body, i64 0, i32 2, i32 1
  %25 = load float, ptr %m_origin.i, align 4, !tbaa !137, !noalias !251
  %fneg.i.i = fneg float %25
  %arrayidx3.i5.i = getelementptr inbounds %class.btCollisionObject, ptr %body, i64 0, i32 2, i32 1, i32 0, i64 1
  %26 = load float, ptr %arrayidx3.i5.i, align 4, !tbaa !137, !noalias !251
  %fneg4.i.i = fneg float %26
  %arrayidx7.i.i = getelementptr inbounds %class.btCollisionObject, ptr %body, i64 0, i32 2, i32 1, i32 0, i64 2
  %27 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137, !noalias !251
  %fneg8.i.i = fneg float %27
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %idxprom.i22, i32 1
  %28 = load float, ptr %m_x, align 4, !tbaa !137
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 1
  %29 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %30 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %31 = load <2 x float>, ptr %m_interpolationWorldTransform.i, align 4, !tbaa !137, !noalias !246
  %32 = load <2 x float>, ptr %arrayidx3.i.i, align 4, !tbaa !137, !noalias !246
  %33 = load <2 x float>, ptr %arrayidx6.i.i, align 4, !tbaa !137, !noalias !246
  %34 = insertelement <2 x float> poison, float %fneg4.i.i, i64 0
  %35 = shufflevector <2 x float> %34, <2 x float> poison, <2 x i32> zeroinitializer
  %36 = fmul <2 x float> %32, %35
  %37 = insertelement <2 x float> poison, float %fneg.i.i, i64 0
  %38 = shufflevector <2 x float> %37, <2 x float> poison, <2 x i32> zeroinitializer
  %39 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %31, <2 x float> %38, <2 x float> %36)
  %40 = insertelement <2 x float> poison, float %fneg8.i.i, i64 0
  %41 = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> zeroinitializer
  %42 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %33, <2 x float> %41, <2 x float> %39)
  %43 = insertelement <2 x float> poison, float %29, i64 0
  %44 = shufflevector <2 x float> %43, <2 x float> poison, <2 x i32> zeroinitializer
  %45 = fmul <2 x float> %32, %44
  %46 = insertelement <2 x float> poison, float %28, i64 0
  %47 = shufflevector <2 x float> %46, <2 x float> poison, <2 x i32> zeroinitializer
  %48 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %31, <2 x float> %47, <2 x float> %45)
  %49 = insertelement <2 x float> poison, float %30, i64 0
  %50 = shufflevector <2 x float> %49, <2 x float> poison, <2 x i32> zeroinitializer
  %51 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %33, <2 x float> %50, <2 x float> %48)
  %52 = fadd <2 x float> %42, %51
  %53 = insertelement <2 x float> poison, float %23, i64 0
  %54 = shufflevector <2 x float> %53, <2 x float> poison, <2 x i32> zeroinitializer
  %55 = insertelement <2 x float> %34, float %29, i64 1
  %56 = fmul <2 x float> %54, %55
  %57 = insertelement <2 x float> poison, float %22, i64 0
  %58 = shufflevector <2 x float> %57, <2 x float> poison, <2 x i32> zeroinitializer
  %59 = insertelement <2 x float> %37, float %28, i64 1
  %60 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %58, <2 x float> %59, <2 x float> %56)
  %61 = insertelement <2 x float> poison, float %24, i64 0
  %62 = shufflevector <2 x float> %61, <2 x float> poison, <2 x i32> zeroinitializer
  %63 = insertelement <2 x float> %40, float %30, i64 1
  %64 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %62, <2 x float> %63, <2 x float> %60)
  %shift = shufflevector <2 x float> %64, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %65 = fadd <2 x float> %64, %shift
  %retval.sroa.3.12.vec.insert.i.i35 = insertelement <2 x float> %65, float 0.000000e+00, i64 1
  %m_local = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %a, i64 0, i32 1
  store <2 x float> %52, ptr %m_local, align 8, !tbaa.struct !163
  %ref.tmp9.sroa.4.0.m_local.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %a, i64 0, i32 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i35, ptr %ref.tmp9.sroa.4.0.m_local.sroa_idx, align 8, !tbaa.struct !165
  %m_battach = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %idxprom.i22, i32 9
  %bf.load = load i8, ptr %m_battach, align 8
  %bf.set = or i8 %bf.load, 1
  store i8 %bf.set, ptr %m_battach, align 8
  %m_anchors = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13
  call void @_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE9push_backERKS1_(ptr noundef nonnull align 8 dereferenceable(25) %m_anchors, ptr noundef nonnull align 8 dereferenceable(100) %a)
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %a) #38
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE9push_backERKS1_(ptr noundef nonnull align 8 dereferenceable(25) %this, ptr noundef nonnull align 8 dereferenceable(100) %_Val) local_unnamed_addr #8 comdat align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !104
  %m_capacity.i = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 3
  %1 = load i32, ptr %m_capacity.i, align 8, !tbaa !105
  %cmp = icmp eq i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tobool.not.i = icmp eq i32 %0, 0
  %mul.i = shl nsw i32 %0, 1
  %cond.i = select i1 %tobool.not.i, i32 1, i32 %mul.i
  %cmp.i = icmp slt i32 %0, %cond.i
  br i1 %cmp.i, label %if.then.i, label %if.end

if.then.i:                                        ; preds = %if.then
  %tobool.not.i.i = icmp eq i32 %cond.i, 0
  br i1 %tobool.not.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE8allocateEi.exit.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %conv.i.i.i = sext i32 %cond.i to i64
  %mul.i.i.i = mul nsw i64 %conv.i.i.i, 104
  %call.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i, i32 noundef 16)
  %.pre = load i32, ptr %m_size.i, align 4, !tbaa !104
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE8allocateEi.exit.i

_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE8allocateEi.exit.i: ; preds = %if.then.i.i, %if.then.i
  %2 = phi i32 [ %.pre, %if.then.i.i ], [ %0, %if.then.i ]
  %retval.0.i.i = phi ptr [ %call.i.i.i, %if.then.i.i ], [ null, %if.then.i ]
  %cmp7.i.i = icmp sgt i32 %2, 0
  br i1 %cmp7.i.i, label %for.body.lr.ph.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody6AnchorEE4copyEiiPS1_.exit.i

for.body.lr.ph.i.i:                               ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE8allocateEi.exit.i
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 5
  %wide.trip.count.i.i = zext i32 %2 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %for.body.i.i ]
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %retval.0.i.i, i64 %indvars.iv.i.i
  %3 = load ptr, ptr %m_data.i.i, align 8, !tbaa !103
  %arrayidx3.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %3, i64 %indvars.iv.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %arrayidx.i.i, ptr noundef nonnull align 8 dereferenceable(32) %arrayidx3.i.i, i64 32, i1 false)
  %m_c0.i.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %retval.0.i.i, i64 %indvars.iv.i.i, i32 3
  %m_c03.i.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %3, i64 %indvars.iv.i.i, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_c0.i.i.i, ptr noundef nonnull align 8 dereferenceable(16) %m_c03.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx6.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %3, i64 %indvars.iv.i.i, i32 3, i32 0, i64 1
  %arrayidx8.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %retval.0.i.i, i64 %indvars.iv.i.i, i32 3, i32 0, i64 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx8.i.i.i.i, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx6.i.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx10.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %3, i64 %indvars.iv.i.i, i32 3, i32 0, i64 2
  %arrayidx12.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %retval.0.i.i, i64 %indvars.iv.i.i, i32 3, i32 0, i64 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx12.i.i.i.i, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx10.i.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %m_c1.i.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %retval.0.i.i, i64 %indvars.iv.i.i, i32 4
  %m_c14.i.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %3, i64 %indvars.iv.i.i, i32 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %m_c1.i.i.i, ptr noundef nonnull align 8 dereferenceable(20) %m_c14.i.i.i, i64 20, i1 false)
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody6AnchorEE4copyEiiPS1_.exit.i, label %for.body.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody6AnchorEE4copyEiiPS1_.exit.i: ; preds = %for.body.i.i, %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE8allocateEi.exit.i
  %m_data.i9.i = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 5
  %4 = load ptr, ptr %m_data.i9.i, align 8, !tbaa !103
  %tobool.not.i10.i = icmp eq ptr %4, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 6
  %5 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %5, 0
  %or.cond.i = select i1 %tobool.not.i10.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE10deallocateEv.exit.i, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody6AnchorEE4copyEiiPS1_.exit.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %4)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE10deallocateEv.exit.i

_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE10deallocateEv.exit.i: ; preds = %if.then3.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody6AnchorEE4copyEiiPS1_.exit.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !102
  store ptr %retval.0.i.i, ptr %m_data.i9.i, align 8, !tbaa !103
  store i32 %cond.i, ptr %m_capacity.i, align 8, !tbaa !105
  %.pre7 = load i32, ptr %m_size.i, align 4, !tbaa !104
  br label %if.end

if.end:                                           ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE10deallocateEv.exit.i, %if.then, %entry
  %6 = phi i32 [ %.pre7, %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE10deallocateEv.exit.i ], [ %0, %if.then ], [ %0, %entry ]
  %m_data = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 5
  %7 = load ptr, ptr %m_data, align 8, !tbaa !103
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %7, i64 %idxprom
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %arrayidx, ptr noundef nonnull align 8 dereferenceable(32) %_Val, i64 32, i1 false)
  %m_c0.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %7, i64 %idxprom, i32 3
  %m_c03.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %_Val, i64 0, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_c0.i, ptr noundef nonnull align 8 dereferenceable(16) %m_c03.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx6.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %_Val, i64 0, i32 3, i32 0, i64 1
  %arrayidx8.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %7, i64 %idxprom, i32 3, i32 0, i64 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx8.i.i, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx6.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx10.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %_Val, i64 0, i32 3, i32 0, i64 2
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %7, i64 %idxprom, i32 3, i32 0, i64 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx12.i.i, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx10.i.i, i64 16, i1 false), !tbaa.struct !163
  %m_c1.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %7, i64 %idxprom, i32 4
  %m_c14.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %_Val, i64 0, i32 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %m_c1.i, ptr noundef nonnull align 8 dereferenceable(20) %m_c14.i, i64 20, i1 false)
  %8 = load i32, ptr %m_size.i, align 4, !tbaa !104
  %inc = add nsw i32 %8, 1
  store i32 %inc, ptr %m_size.i, align 4, !tbaa !104
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody17appendLinearJointERKNS_6LJoint5SpecsEPNS_7ClusterENS_4BodyE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(28) %specs, ptr noundef %body0, ptr nocapture noundef readonly byval(%"struct.btSoftBody::Body") align 8 %body1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %call = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 216, i32 noundef 16)
  %m_bodies.i.i = getelementptr %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1
  %0 = getelementptr inbounds i8, ptr %call, i64 56
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(160) %0, i8 0, i64 160, i1 false)
  store ptr getelementptr inbounds ({ [8 x ptr] }, ptr @_ZTVN10btSoftBody6LJointE, i64 0, inrange i32 0, i64 2), ptr %call, align 8, !tbaa !5
  store ptr %body0, ptr %m_bodies.i.i, align 8, !tbaa.struct !252
  %ref.tmp.sroa.4.0.m_bodies.sroa_idx = getelementptr %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ref.tmp.sroa.4.0.m_bodies.sroa_idx, i8 0, i64 16, i1 false)
  %arrayidx3 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx3, ptr noundef nonnull align 8 dereferenceable(24) %body1, i64 24, i1 false), !tbaa.struct !252
  %1 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %1, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZNK10btSoftBody4Body5xformEv.exit, !prof !173

init.check.i:                                     ; preds = %entry
  %2 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %_ZNK10btSoftBody4Body5xformEv.exit, label %init.i

init.i:                                           ; preds = %init.check.i
  %3 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i116 = icmp eq i8 %3, 0
  br i1 %guard.uninitialized.i116, label %init.check.i118, label %invoke.cont2.i, !prof !173

init.check.i118:                                  ; preds = %init.i
  %4 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i117 = icmp eq i32 %4, 0
  br i1 %tobool.not.i117, label %invoke.cont2.i, label %init.i120

init.i120:                                        ; preds = %init.check.i118
  %5 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i134 = icmp eq i8 %5, 0
  br i1 %guard.uninitialized.i134, label %init.check.i136, label %invoke.cont6.i, !prof !173

init.check.i136:                                  ; preds = %init.i120
  %6 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i135 = icmp eq i32 %6, 0
  br i1 %tobool.not.i135, label %invoke.cont6.i, label %invoke.cont.i

invoke.cont.i:                                    ; preds = %init.check.i136
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %7 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont6.i

invoke.cont6.i:                                   ; preds = %invoke.cont.i, %init.check.i136, %init.i120
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %8 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont2.i

invoke.cont2.i:                                   ; preds = %invoke.cont6.i, %init.check.i118, %init.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %9 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit

_ZNK10btSoftBody4Body5xformEv.exit:               ; preds = %entry, %init.check.i, %invoke.cont2.i
  %m_collisionObject.i = getelementptr %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1, i64 0, i32 2
  %10 = load ptr, ptr %m_collisionObject.i, align 8, !tbaa !253
  %tobool3.not.i = icmp eq ptr %10, null
  %m_interpolationWorldTransform.i.i = getelementptr inbounds %class.btCollisionObject, ptr %10, i64 0, i32 2
  %11 = load ptr, ptr %m_bodies.i.i, align 8
  %tobool6.not.i = icmp eq ptr %11, null
  %m_framexform.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %11, i64 0, i32 3
  %spec.select.i = select i1 %tobool6.not.i, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i
  %retval.0.i = select i1 %tobool3.not.i, ptr %spec.select.i, ptr %m_interpolationWorldTransform.i.i
  %arrayidx3.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1
  %arrayidx6.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2
  %arrayidx.i28.i.i = getelementptr inbounds [4 x float], ptr %retval.0.i, i64 0, i64 2
  %arrayidx.i29.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i30.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2, i32 0, i64 2
  %12 = load float, ptr %arrayidx.i28.i.i, align 4, !tbaa !137, !noalias !255
  %13 = load float, ptr %arrayidx.i29.i.i, align 4, !tbaa !137, !noalias !255
  %14 = load float, ptr %arrayidx.i30.i.i, align 4, !tbaa !137, !noalias !255
  %m_origin.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i, i64 0, i32 1
  %15 = load float, ptr %m_origin.i, align 4, !tbaa !137, !noalias !260
  %fneg.i.i = fneg float %15
  %arrayidx3.i5.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i, i64 0, i32 1, i32 0, i64 1
  %16 = load float, ptr %arrayidx3.i5.i, align 4, !tbaa !137, !noalias !260
  %fneg4.i.i = fneg float %16
  %arrayidx7.i.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i, i64 0, i32 1, i32 0, i64 2
  %17 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137, !noalias !260
  %fneg8.i.i = fneg float %17
  %position = getelementptr inbounds %"struct.btSoftBody::LJoint::Specs", ptr %specs, i64 0, i32 1
  %18 = load float, ptr %position, align 4, !tbaa !137
  %arrayidx7.i.i.i = getelementptr inbounds %"struct.btSoftBody::LJoint::Specs", ptr %specs, i64 0, i32 1, i32 0, i64 1
  %19 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %arrayidx12.i.i.i = getelementptr inbounds %"struct.btSoftBody::LJoint::Specs", ptr %specs, i64 0, i32 1, i32 0, i64 2
  %20 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %21 = load <2 x float>, ptr %retval.0.i, align 4, !tbaa !137, !noalias !255
  %22 = load <2 x float>, ptr %arrayidx3.i.i, align 4, !tbaa !137, !noalias !255
  %23 = load <2 x float>, ptr %arrayidx6.i.i, align 4, !tbaa !137, !noalias !255
  %24 = insertelement <2 x float> poison, float %fneg4.i.i, i64 0
  %25 = shufflevector <2 x float> %24, <2 x float> poison, <2 x i32> zeroinitializer
  %26 = fmul <2 x float> %22, %25
  %27 = insertelement <2 x float> poison, float %fneg.i.i, i64 0
  %28 = shufflevector <2 x float> %27, <2 x float> poison, <2 x i32> zeroinitializer
  %29 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %21, <2 x float> %28, <2 x float> %26)
  %30 = insertelement <2 x float> poison, float %fneg8.i.i, i64 0
  %31 = shufflevector <2 x float> %30, <2 x float> poison, <2 x i32> zeroinitializer
  %32 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %23, <2 x float> %31, <2 x float> %29)
  %33 = insertelement <2 x float> poison, float %19, i64 0
  %34 = shufflevector <2 x float> %33, <2 x float> poison, <2 x i32> zeroinitializer
  %35 = fmul <2 x float> %22, %34
  %36 = insertelement <2 x float> poison, float %18, i64 0
  %37 = shufflevector <2 x float> %36, <2 x float> poison, <2 x i32> zeroinitializer
  %38 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %21, <2 x float> %37, <2 x float> %35)
  %39 = insertelement <2 x float> poison, float %20, i64 0
  %40 = shufflevector <2 x float> %39, <2 x float> poison, <2 x i32> zeroinitializer
  %41 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %23, <2 x float> %40, <2 x float> %38)
  %42 = fadd <2 x float> %32, %41
  %43 = insertelement <2 x float> poison, float %13, i64 0
  %44 = shufflevector <2 x float> %43, <2 x float> poison, <2 x i32> zeroinitializer
  %45 = insertelement <2 x float> %24, float %19, i64 1
  %46 = fmul <2 x float> %44, %45
  %47 = insertelement <2 x float> poison, float %12, i64 0
  %48 = shufflevector <2 x float> %47, <2 x float> poison, <2 x i32> zeroinitializer
  %49 = insertelement <2 x float> %27, float %18, i64 1
  %50 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %48, <2 x float> %49, <2 x float> %46)
  %51 = insertelement <2 x float> poison, float %14, i64 0
  %52 = shufflevector <2 x float> %51, <2 x float> poison, <2 x i32> zeroinitializer
  %53 = insertelement <2 x float> %30, float %20, i64 1
  %54 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %52, <2 x float> %53, <2 x float> %50)
  %shift = shufflevector <2 x float> %54, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %55 = fadd <2 x float> %54, %shift
  %retval.sroa.3.12.vec.insert.i.i143 = insertelement <2 x float> %55, float 0.000000e+00, i64 1
  %m_refs = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 2
  store <2 x float> %42, ptr %m_refs, align 8, !tbaa.struct !163
  %ref.tmp4.sroa.4.0.arrayidx10.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 2, i64 0, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i143, ptr %ref.tmp4.sroa.4.0.arrayidx10.sroa_idx, align 8, !tbaa.struct !165
  %56 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i40 = icmp eq i8 %56, 0
  br i1 %guard.uninitialized.i40, label %init.check.i42, label %_ZNK10btSoftBody4Body5xformEv.exit57, !prof !173

init.check.i42:                                   ; preds = %_ZNK10btSoftBody4Body5xformEv.exit
  %57 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i41 = icmp eq i32 %57, 0
  br i1 %tobool.not.i41, label %_ZNK10btSoftBody4Body5xformEv.exit57, label %init.i44

init.i44:                                         ; preds = %init.check.i42
  %58 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i124 = icmp eq i8 %58, 0
  br i1 %guard.uninitialized.i124, label %init.check.i126, label %invoke.cont2.i48, !prof !173

init.check.i126:                                  ; preds = %init.i44
  %59 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i125 = icmp eq i32 %59, 0
  br i1 %tobool.not.i125, label %invoke.cont2.i48, label %init.i127

init.i127:                                        ; preds = %init.check.i126
  %60 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i137 = icmp eq i8 %60, 0
  br i1 %guard.uninitialized.i137, label %init.check.i139, label %invoke.cont6.i130, !prof !173

init.check.i139:                                  ; preds = %init.i127
  %61 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i138 = icmp eq i32 %61, 0
  br i1 %tobool.not.i138, label %invoke.cont6.i130, label %invoke.cont.i140

invoke.cont.i140:                                 ; preds = %init.check.i139
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %62 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont6.i130

invoke.cont6.i130:                                ; preds = %invoke.cont.i140, %init.check.i139, %init.i127
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %63 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont2.i48

invoke.cont2.i48:                                 ; preds = %invoke.cont6.i130, %init.check.i126, %init.i44
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %64 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit57

_ZNK10btSoftBody4Body5xformEv.exit57:             ; preds = %_ZNK10btSoftBody4Body5xformEv.exit, %init.check.i42, %invoke.cont2.i48
  %m_collisionObject.i49 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1, i64 1, i32 2
  %65 = load ptr, ptr %m_collisionObject.i49, align 8, !tbaa !253
  %tobool3.not.i50 = icmp eq ptr %65, null
  %m_interpolationWorldTransform.i.i51 = getelementptr inbounds %class.btCollisionObject, ptr %65, i64 0, i32 2
  %66 = load ptr, ptr %arrayidx3, align 8
  %tobool6.not.i52 = icmp eq ptr %66, null
  %m_framexform.i53 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %66, i64 0, i32 3
  %spec.select.i54 = select i1 %tobool6.not.i52, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i53
  %retval.0.i55 = select i1 %tobool3.not.i50, ptr %spec.select.i54, ptr %m_interpolationWorldTransform.i.i51
  %arrayidx3.i.i58 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i55, i64 0, i64 1
  %arrayidx6.i.i59 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i55, i64 0, i64 2
  %arrayidx.i28.i.i63 = getelementptr inbounds [4 x float], ptr %retval.0.i55, i64 0, i64 2
  %arrayidx.i29.i.i64 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i55, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i30.i.i65 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i55, i64 0, i64 2, i32 0, i64 2
  %67 = load float, ptr %arrayidx.i28.i.i63, align 4, !tbaa !137, !noalias !261
  %68 = load float, ptr %arrayidx.i29.i.i64, align 4, !tbaa !137, !noalias !261
  %69 = load float, ptr %arrayidx.i30.i.i65, align 4, !tbaa !137, !noalias !261
  %m_origin.i66 = getelementptr inbounds %class.btTransform, ptr %retval.0.i55, i64 0, i32 1
  %70 = load float, ptr %m_origin.i66, align 4, !tbaa !137, !noalias !266
  %fneg.i.i67 = fneg float %70
  %arrayidx3.i5.i68 = getelementptr inbounds %class.btTransform, ptr %retval.0.i55, i64 0, i32 1, i32 0, i64 1
  %71 = load float, ptr %arrayidx3.i5.i68, align 4, !tbaa !137, !noalias !266
  %fneg4.i.i69 = fneg float %71
  %arrayidx7.i.i70 = getelementptr inbounds %class.btTransform, ptr %retval.0.i55, i64 0, i32 1, i32 0, i64 2
  %72 = load float, ptr %arrayidx7.i.i70, align 4, !tbaa !137, !noalias !266
  %fneg8.i.i71 = fneg float %72
  %73 = load float, ptr %position, align 4, !tbaa !137
  %74 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %75 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %76 = load <2 x float>, ptr %retval.0.i55, align 4, !tbaa !137, !noalias !261
  %77 = load <2 x float>, ptr %arrayidx3.i.i58, align 4, !tbaa !137, !noalias !261
  %78 = load <2 x float>, ptr %arrayidx6.i.i59, align 4, !tbaa !137, !noalias !261
  %79 = insertelement <2 x float> poison, float %fneg4.i.i69, i64 0
  %80 = shufflevector <2 x float> %79, <2 x float> poison, <2 x i32> zeroinitializer
  %81 = fmul <2 x float> %77, %80
  %82 = insertelement <2 x float> poison, float %fneg.i.i67, i64 0
  %83 = shufflevector <2 x float> %82, <2 x float> poison, <2 x i32> zeroinitializer
  %84 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %76, <2 x float> %83, <2 x float> %81)
  %85 = insertelement <2 x float> poison, float %fneg8.i.i71, i64 0
  %86 = shufflevector <2 x float> %85, <2 x float> poison, <2 x i32> zeroinitializer
  %87 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %78, <2 x float> %86, <2 x float> %84)
  %88 = insertelement <2 x float> poison, float %74, i64 0
  %89 = shufflevector <2 x float> %88, <2 x float> poison, <2 x i32> zeroinitializer
  %90 = fmul <2 x float> %77, %89
  %91 = insertelement <2 x float> poison, float %73, i64 0
  %92 = shufflevector <2 x float> %91, <2 x float> poison, <2 x i32> zeroinitializer
  %93 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %76, <2 x float> %92, <2 x float> %90)
  %94 = insertelement <2 x float> poison, float %75, i64 0
  %95 = shufflevector <2 x float> %94, <2 x float> poison, <2 x i32> zeroinitializer
  %96 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %78, <2 x float> %95, <2 x float> %93)
  %97 = fadd <2 x float> %87, %96
  %98 = insertelement <2 x float> poison, float %68, i64 0
  %99 = shufflevector <2 x float> %98, <2 x float> poison, <2 x i32> zeroinitializer
  %100 = insertelement <2 x float> %79, float %74, i64 1
  %101 = fmul <2 x float> %99, %100
  %102 = insertelement <2 x float> poison, float %67, i64 0
  %103 = shufflevector <2 x float> %102, <2 x float> poison, <2 x i32> zeroinitializer
  %104 = insertelement <2 x float> %82, float %73, i64 1
  %105 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %103, <2 x float> %104, <2 x float> %101)
  %106 = insertelement <2 x float> poison, float %69, i64 0
  %107 = shufflevector <2 x float> %106, <2 x float> poison, <2 x i32> zeroinitializer
  %108 = insertelement <2 x float> %85, float %75, i64 1
  %109 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %107, <2 x float> %108, <2 x float> %105)
  %shift142 = shufflevector <2 x float> %109, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %110 = fadd <2 x float> %109, %shift142
  %retval.sroa.3.12.vec.insert.i.i112144 = insertelement <2 x float> %110, float 0.000000e+00, i64 1
  %arrayidx20 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 2, i64 1
  store <2 x float> %97, ptr %arrayidx20, align 8, !tbaa.struct !163
  %ref.tmp11.sroa.4.0.arrayidx20.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 2, i64 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i112144, ptr %ref.tmp11.sroa.4.0.arrayidx20.sroa_idx, align 8, !tbaa.struct !165
  %m_cfm = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 3
  %111 = load <2 x float>, ptr %specs, align 4, !tbaa !137
  %112 = shufflevector <2 x float> %111, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  store <2 x float> %112, ptr %m_cfm, align 8, !tbaa !137
  %split = getelementptr inbounds %"struct.btSoftBody::Joint::Specs", ptr %specs, i64 0, i32 2
  %113 = load float, ptr %split, align 4, !tbaa !267
  %m_split = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 5
  store float %113, ptr %m_split, align 8, !tbaa !269
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 2
  %114 = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 3
  %115 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !117
  %cmp.i = icmp eq i32 %114, %115
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit

if.then.i:                                        ; preds = %_ZNK10btSoftBody4Body5xformEv.exit57
  %tobool.not.i.i = icmp eq i32 %114, 0
  %mul.i.i = shl nsw i32 %114, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %114, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 3
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %116 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %114, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %116, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %wide.trip.count.i.i.i = zext i32 %116 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 3
  %117 = icmp ult i32 %116, 4
  br i1 %117, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967292
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.3, %for.body.i.i.i ]
  %arrayidx.i.i.i115 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %118 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i = getelementptr inbounds ptr, ptr %118, i64 %indvars.iv.i.i.i
  %119 = load ptr, ptr %arrayidx3.i.i.i, align 8, !tbaa !219
  store ptr %119, ptr %arrayidx.i.i.i115, align 8, !tbaa !219
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i115.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %120 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.1 = getelementptr inbounds ptr, ptr %120, i64 %indvars.iv.next.i.i.i
  %121 = load ptr, ptr %arrayidx3.i.i.i.1, align 8, !tbaa !219
  store ptr %121, ptr %arrayidx.i.i.i115.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.1 = or i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i115.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %122 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.2 = getelementptr inbounds ptr, ptr %122, i64 %indvars.iv.next.i.i.i.1
  %123 = load ptr, ptr %arrayidx3.i.i.i.2, align 8, !tbaa !219
  store ptr %123, ptr %arrayidx.i.i.i115.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.2 = or i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i115.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %124 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.3 = getelementptr inbounds ptr, ptr %124, i64 %indvars.iv.next.i.i.i.2
  %125 = load ptr, ptr %arrayidx3.i.i.i.3, align 8, !tbaa !219
  store ptr %125, ptr %arrayidx.i.i.i115.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil
  %indvars.iv.i.i.i.epil = phi i64 [ %indvars.iv.next.i.i.i.epil, %for.body.i.i.i.epil ], [ %indvars.iv.i.i.i.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.i.i.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %arrayidx.i.i.i115.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.epil
  %126 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.epil = getelementptr inbounds ptr, ptr %126, i64 %indvars.iv.i.i.i.epil
  %127 = load ptr, ptr %arrayidx3.i.i.i.epil, align 8, !tbaa !219
  store ptr %127, ptr %arrayidx.i.i.i115.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.epil = add nuw nsw i64 %indvars.iv.i.i.i.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil, !llvm.loop !271

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %128 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !115
  %tobool.not.i10.i.i = icmp eq ptr %128, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 6
  %129 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %129, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %128)
  %.pre7.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i
  %.pre7.i = phi i32 [ %.pre7.pre.i, %if.then3.i.i.i ], [ %116, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i ]
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !114
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !115
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !117
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit: ; preds = %_ZNK10btSoftBody4Body5xformEv.exit57, %if.then.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i
  %130 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i ], [ %114, %if.then.i ], [ %114, %_ZNK10btSoftBody4Body5xformEv.exit57 ]
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %131 = load ptr, ptr %m_data.i, align 8, !tbaa !115
  %idxprom.i = sext i32 %130 to i64
  %arrayidx.i = getelementptr inbounds ptr, ptr %131, i64 %idxprom.i
  store ptr %call, ptr %arrayidx.i, align 8, !tbaa !219
  %inc.i = add nsw i32 %130, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !116
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #12

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody17appendLinearJointERKNS_6LJoint5SpecsENS_4BodyE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(28) %specs, ptr nocapture noundef readonly byval(%"struct.btSoftBody::Body") align 8 %body) local_unnamed_addr #4 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %1 = load ptr, ptr %0, align 8, !tbaa !219
  tail call void @_ZN10btSoftBody17appendLinearJointERKNS_6LJoint5SpecsEPNS_7ClusterENS_4BodyE(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(28) %specs, ptr noundef %1, ptr noundef nonnull byval(%"struct.btSoftBody::Body") align 8 %body)
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody17appendLinearJointERKNS_6LJoint5SpecsEPS_(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(28) %specs, ptr nocapture noundef readonly %body) local_unnamed_addr #4 align 2 {
entry:
  %agg.tmp = alloca %"struct.btSoftBody::Body", align 8
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %1 = load ptr, ptr %0, align 8, !tbaa !219
  %m_data.i4 = getelementptr inbounds %class.btSoftBody, ptr %body, i64 0, i32 24, i32 5
  %2 = load ptr, ptr %m_data.i4, align 8, !tbaa !123
  %3 = load ptr, ptr %2, align 8, !tbaa !219
  store ptr %3, ptr %agg.tmp, align 8, !tbaa !272
  %m_rigid.i = getelementptr inbounds %"struct.btSoftBody::Body", ptr %agg.tmp, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rigid.i, i8 0, i64 16, i1 false)
  tail call void @_ZN10btSoftBody17appendLinearJointERKNS_6LJoint5SpecsEPNS_7ClusterENS_4BodyE(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(28) %specs, ptr noundef %1, ptr noundef nonnull byval(%"struct.btSoftBody::Body") align 8 %agg.tmp)
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody18appendAngularJointERKNS_6AJoint5SpecsEPNS_7ClusterENS_4BodyE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 8 dereferenceable(40) %specs, ptr noundef %body0, ptr nocapture noundef readonly byval(%"struct.btSoftBody::Body") align 8 %body1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %call = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 224, i32 noundef 16)
  %m_bodies.i.i = getelementptr %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1
  %0 = getelementptr inbounds i8, ptr %call, i64 56
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(168) %0, i8 0, i64 168, i1 false)
  store ptr getelementptr inbounds ({ [8 x ptr] }, ptr @_ZTVN10btSoftBody6AJointE, i64 0, inrange i32 0, i64 2), ptr %call, align 8, !tbaa !5
  store ptr %body0, ptr %m_bodies.i.i, align 8, !tbaa.struct !252
  %ref.tmp.sroa.4.0.m_bodies.sroa_idx = getelementptr %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ref.tmp.sroa.4.0.m_bodies.sroa_idx, i8 0, i64 16, i1 false)
  %arrayidx3 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx3, ptr noundef nonnull align 8 dereferenceable(24) %body1, i64 24, i1 false), !tbaa.struct !252
  %1 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %1, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZNK10btSoftBody4Body5xformEv.exit, !prof !173

init.check.i:                                     ; preds = %entry
  %2 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %_ZNK10btSoftBody4Body5xformEv.exit, label %init.i

init.i:                                           ; preds = %init.check.i
  %3 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i110 = icmp eq i8 %3, 0
  br i1 %guard.uninitialized.i110, label %init.check.i112, label %invoke.cont2.i, !prof !173

init.check.i112:                                  ; preds = %init.i
  %4 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i111 = icmp eq i32 %4, 0
  br i1 %tobool.not.i111, label %invoke.cont2.i, label %init.i114

init.i114:                                        ; preds = %init.check.i112
  %5 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i128 = icmp eq i8 %5, 0
  br i1 %guard.uninitialized.i128, label %init.check.i130, label %invoke.cont6.i, !prof !173

init.check.i130:                                  ; preds = %init.i114
  %6 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i129 = icmp eq i32 %6, 0
  br i1 %tobool.not.i129, label %invoke.cont6.i, label %invoke.cont.i

invoke.cont.i:                                    ; preds = %init.check.i130
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %7 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont6.i

invoke.cont6.i:                                   ; preds = %invoke.cont.i, %init.check.i130, %init.i114
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %8 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont2.i

invoke.cont2.i:                                   ; preds = %invoke.cont6.i, %init.check.i112, %init.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %9 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit

_ZNK10btSoftBody4Body5xformEv.exit:               ; preds = %entry, %init.check.i, %invoke.cont2.i
  %m_collisionObject.i = getelementptr %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1, i64 0, i32 2
  %10 = load ptr, ptr %m_collisionObject.i, align 8, !tbaa !253
  %tobool3.not.i = icmp eq ptr %10, null
  %m_interpolationWorldTransform.i.i = getelementptr inbounds %class.btCollisionObject, ptr %10, i64 0, i32 2
  %11 = load ptr, ptr %m_bodies.i.i, align 8
  %tobool6.not.i = icmp eq ptr %11, null
  %m_framexform.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %11, i64 0, i32 3
  %spec.select.i = select i1 %tobool6.not.i, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i
  %retval.0.i = select i1 %tobool3.not.i, ptr %spec.select.i, ptr %m_interpolationWorldTransform.i.i
  %arrayidx3.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1
  %arrayidx6.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2
  %arrayidx.i28.i.i = getelementptr inbounds [4 x float], ptr %retval.0.i, i64 0, i64 2
  %arrayidx.i29.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i30.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2, i32 0, i64 2
  %12 = load float, ptr %arrayidx.i28.i.i, align 4, !tbaa !137, !noalias !273
  %13 = load float, ptr %arrayidx.i29.i.i, align 4, !tbaa !137, !noalias !273
  %14 = load float, ptr %arrayidx.i30.i.i, align 4, !tbaa !137, !noalias !273
  %axis = getelementptr inbounds %"struct.btSoftBody::AJoint::Specs", ptr %specs, i64 0, i32 1
  %15 = load float, ptr %axis, align 4, !tbaa !137
  %arrayidx7.i.i39 = getelementptr inbounds %"struct.btSoftBody::AJoint::Specs", ptr %specs, i64 0, i32 1, i32 0, i64 1
  %16 = load float, ptr %arrayidx7.i.i39, align 8, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::AJoint::Specs", ptr %specs, i64 0, i32 1, i32 0, i64 2
  %17 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %18 = load <2 x float>, ptr %retval.0.i, align 4, !tbaa !137, !noalias !273
  %19 = load <2 x float>, ptr %arrayidx3.i.i, align 4, !tbaa !137, !noalias !273
  %20 = load <2 x float>, ptr %arrayidx6.i.i, align 4, !tbaa !137, !noalias !273
  %21 = insertelement <2 x float> poison, float %16, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> zeroinitializer
  %23 = fmul <2 x float> %19, %22
  %24 = insertelement <2 x float> poison, float %15, i64 0
  %25 = shufflevector <2 x float> %24, <2 x float> poison, <2 x i32> zeroinitializer
  %26 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %18, <2 x float> %25, <2 x float> %23)
  %27 = insertelement <2 x float> poison, float %17, i64 0
  %28 = shufflevector <2 x float> %27, <2 x float> poison, <2 x i32> zeroinitializer
  %29 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %20, <2 x float> %28, <2 x float> %26)
  %mul8.i20.i = fmul float %13, %16
  %30 = tail call float @llvm.fmuladd.f32(float %12, float %15, float %mul8.i20.i)
  %31 = tail call float @llvm.fmuladd.f32(float %14, float %17, float %30)
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %31, i64 0
  %m_refs = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 2
  store <2 x float> %29, ptr %m_refs, align 8, !tbaa.struct !163
  %ref.tmp4.sroa.4.0.arrayidx11.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 2, i64 0, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %ref.tmp4.sroa.4.0.arrayidx11.sroa_idx, align 8, !tbaa.struct !165
  %32 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i40 = icmp eq i8 %32, 0
  br i1 %guard.uninitialized.i40, label %init.check.i42, label %_ZNK10btSoftBody4Body5xformEv.exit57, !prof !173

init.check.i42:                                   ; preds = %_ZNK10btSoftBody4Body5xformEv.exit
  %33 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i41 = icmp eq i32 %33, 0
  br i1 %tobool.not.i41, label %_ZNK10btSoftBody4Body5xformEv.exit57, label %init.i44

init.i44:                                         ; preds = %init.check.i42
  %34 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i118 = icmp eq i8 %34, 0
  br i1 %guard.uninitialized.i118, label %init.check.i120, label %invoke.cont2.i48, !prof !173

init.check.i120:                                  ; preds = %init.i44
  %35 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i119 = icmp eq i32 %35, 0
  br i1 %tobool.not.i119, label %invoke.cont2.i48, label %init.i121

init.i121:                                        ; preds = %init.check.i120
  %36 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i131 = icmp eq i8 %36, 0
  br i1 %guard.uninitialized.i131, label %init.check.i133, label %invoke.cont6.i124, !prof !173

init.check.i133:                                  ; preds = %init.i121
  %37 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i132 = icmp eq i32 %37, 0
  br i1 %tobool.not.i132, label %invoke.cont6.i124, label %invoke.cont.i134

invoke.cont.i134:                                 ; preds = %init.check.i133
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %38 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont6.i124

invoke.cont6.i124:                                ; preds = %invoke.cont.i134, %init.check.i133, %init.i121
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %39 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont2.i48

invoke.cont2.i48:                                 ; preds = %invoke.cont6.i124, %init.check.i120, %init.i44
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %40 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit57

_ZNK10btSoftBody4Body5xformEv.exit57:             ; preds = %_ZNK10btSoftBody4Body5xformEv.exit, %init.check.i42, %invoke.cont2.i48
  %m_collisionObject.i49 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1, i64 1, i32 2
  %41 = load ptr, ptr %m_collisionObject.i49, align 8, !tbaa !253
  %tobool3.not.i50 = icmp eq ptr %41, null
  %m_interpolationWorldTransform.i.i51 = getelementptr inbounds %class.btCollisionObject, ptr %41, i64 0, i32 2
  %42 = load ptr, ptr %arrayidx3, align 8
  %tobool6.not.i52 = icmp eq ptr %42, null
  %m_framexform.i53 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %42, i64 0, i32 3
  %spec.select.i54 = select i1 %tobool6.not.i52, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i53
  %retval.0.i55 = select i1 %tobool3.not.i50, ptr %spec.select.i54, ptr %m_interpolationWorldTransform.i.i51
  %arrayidx3.i.i58 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i55, i64 0, i64 1
  %arrayidx6.i.i59 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i55, i64 0, i64 2
  %arrayidx.i28.i.i63 = getelementptr inbounds [4 x float], ptr %retval.0.i55, i64 0, i64 2
  %arrayidx.i29.i.i64 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i55, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i30.i.i65 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i55, i64 0, i64 2, i32 0, i64 2
  %43 = load float, ptr %arrayidx.i28.i.i63, align 4, !tbaa !137, !noalias !278
  %44 = load float, ptr %arrayidx.i29.i.i64, align 4, !tbaa !137, !noalias !278
  %45 = load float, ptr %arrayidx.i30.i.i65, align 4, !tbaa !137, !noalias !278
  %46 = load float, ptr %axis, align 4, !tbaa !137
  %47 = load float, ptr %arrayidx7.i.i39, align 8, !tbaa !137
  %48 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %49 = load <2 x float>, ptr %retval.0.i55, align 4, !tbaa !137, !noalias !278
  %50 = load <2 x float>, ptr %arrayidx3.i.i58, align 4, !tbaa !137, !noalias !278
  %51 = load <2 x float>, ptr %arrayidx6.i.i59, align 4, !tbaa !137, !noalias !278
  %52 = insertelement <2 x float> poison, float %47, i64 0
  %53 = shufflevector <2 x float> %52, <2 x float> poison, <2 x i32> zeroinitializer
  %54 = fmul <2 x float> %50, %53
  %55 = insertelement <2 x float> poison, float %46, i64 0
  %56 = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> zeroinitializer
  %57 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %49, <2 x float> %56, <2 x float> %54)
  %58 = insertelement <2 x float> poison, float %48, i64 0
  %59 = shufflevector <2 x float> %58, <2 x float> poison, <2 x i32> zeroinitializer
  %60 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %51, <2 x float> %59, <2 x float> %57)
  %mul8.i20.i102 = fmul float %44, %47
  %61 = tail call float @llvm.fmuladd.f32(float %43, float %46, float %mul8.i20.i102)
  %62 = tail call float @llvm.fmuladd.f32(float %45, float %48, float %61)
  %retval.sroa.3.12.vec.insert.i106 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %62, i64 0
  %arrayidx22 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 2, i64 1
  store <2 x float> %60, ptr %arrayidx22, align 8, !tbaa.struct !163
  %ref.tmp12.sroa.4.0.arrayidx22.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 2, i64 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i106, ptr %ref.tmp12.sroa.4.0.arrayidx22.sroa_idx, align 8, !tbaa.struct !165
  %m_cfm = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 3
  %63 = load <2 x float>, ptr %specs, align 8, !tbaa !137
  %64 = shufflevector <2 x float> %63, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  store <2 x float> %64, ptr %m_cfm, align 8, !tbaa !137
  %split = getelementptr inbounds %"struct.btSoftBody::Joint::Specs", ptr %specs, i64 0, i32 2
  %65 = load float, ptr %split, align 8, !tbaa !267
  %m_split = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 5
  store float %65, ptr %m_split, align 8, !tbaa !269
  %icontrol = getelementptr inbounds %"struct.btSoftBody::AJoint::Specs", ptr %specs, i64 0, i32 2
  %66 = load ptr, ptr %icontrol, align 8, !tbaa !283
  %m_icontrol = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %call, i64 0, i32 2
  store ptr %66, ptr %m_icontrol, align 8, !tbaa !285
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 2
  %67 = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 3
  %68 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !117
  %cmp.i = icmp eq i32 %67, %68
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit

if.then.i:                                        ; preds = %_ZNK10btSoftBody4Body5xformEv.exit57
  %tobool.not.i.i = icmp eq i32 %67, 0
  %mul.i.i = shl nsw i32 %67, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %67, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 3
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %69 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %67, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %69, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %wide.trip.count.i.i.i = zext i32 %69 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 3
  %70 = icmp ult i32 %69, 4
  br i1 %70, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967292
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.3, %for.body.i.i.i ]
  %arrayidx.i.i.i109 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %71 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i = getelementptr inbounds ptr, ptr %71, i64 %indvars.iv.i.i.i
  %72 = load ptr, ptr %arrayidx3.i.i.i, align 8, !tbaa !219
  store ptr %72, ptr %arrayidx.i.i.i109, align 8, !tbaa !219
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i109.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %73 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.1 = getelementptr inbounds ptr, ptr %73, i64 %indvars.iv.next.i.i.i
  %74 = load ptr, ptr %arrayidx3.i.i.i.1, align 8, !tbaa !219
  store ptr %74, ptr %arrayidx.i.i.i109.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.1 = or i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i109.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %75 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.2 = getelementptr inbounds ptr, ptr %75, i64 %indvars.iv.next.i.i.i.1
  %76 = load ptr, ptr %arrayidx3.i.i.i.2, align 8, !tbaa !219
  store ptr %76, ptr %arrayidx.i.i.i109.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.2 = or i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i109.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %77 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.3 = getelementptr inbounds ptr, ptr %77, i64 %indvars.iv.next.i.i.i.2
  %78 = load ptr, ptr %arrayidx3.i.i.i.3, align 8, !tbaa !219
  store ptr %78, ptr %arrayidx.i.i.i109.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil
  %indvars.iv.i.i.i.epil = phi i64 [ %indvars.iv.next.i.i.i.epil, %for.body.i.i.i.epil ], [ %indvars.iv.i.i.i.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.i.i.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %arrayidx.i.i.i109.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.epil
  %79 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.epil = getelementptr inbounds ptr, ptr %79, i64 %indvars.iv.i.i.i.epil
  %80 = load ptr, ptr %arrayidx3.i.i.i.epil, align 8, !tbaa !219
  store ptr %80, ptr %arrayidx.i.i.i109.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.epil = add nuw nsw i64 %indvars.iv.i.i.i.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil, !llvm.loop !287

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %81 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !115
  %tobool.not.i10.i.i = icmp eq ptr %81, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 6
  %82 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %82, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %81)
  %.pre7.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i
  %.pre7.i = phi i32 [ %.pre7.pre.i, %if.then3.i.i.i ], [ %69, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i ]
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !114
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !115
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !117
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit: ; preds = %_ZNK10btSoftBody4Body5xformEv.exit57, %if.then.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i
  %83 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i ], [ %67, %if.then.i ], [ %67, %_ZNK10btSoftBody4Body5xformEv.exit57 ]
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %84 = load ptr, ptr %m_data.i, align 8, !tbaa !115
  %idxprom.i = sext i32 %83 to i64
  %arrayidx.i = getelementptr inbounds ptr, ptr %84, i64 %idxprom.i
  store ptr %call, ptr %arrayidx.i, align 8, !tbaa !219
  %inc.i = add nsw i32 %83, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !116
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody18appendAngularJointERKNS_6AJoint5SpecsENS_4BodyE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 8 dereferenceable(40) %specs, ptr nocapture noundef readonly byval(%"struct.btSoftBody::Body") align 8 %body) local_unnamed_addr #4 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %1 = load ptr, ptr %0, align 8, !tbaa !219
  tail call void @_ZN10btSoftBody18appendAngularJointERKNS_6AJoint5SpecsEPNS_7ClusterENS_4BodyE(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 8 dereferenceable(40) %specs, ptr noundef %1, ptr noundef nonnull byval(%"struct.btSoftBody::Body") align 8 %body)
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody18appendAngularJointERKNS_6AJoint5SpecsEPS_(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 8 dereferenceable(40) %specs, ptr nocapture noundef readonly %body) local_unnamed_addr #4 align 2 {
entry:
  %agg.tmp = alloca %"struct.btSoftBody::Body", align 8
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %1 = load ptr, ptr %0, align 8, !tbaa !219
  %m_data.i4 = getelementptr inbounds %class.btSoftBody, ptr %body, i64 0, i32 24, i32 5
  %2 = load ptr, ptr %m_data.i4, align 8, !tbaa !123
  %3 = load ptr, ptr %2, align 8, !tbaa !219
  store ptr %3, ptr %agg.tmp, align 8, !tbaa !272
  %m_rigid.i = getelementptr inbounds %"struct.btSoftBody::Body", ptr %agg.tmp, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rigid.i, i8 0, i64 16, i1 false)
  tail call void @_ZN10btSoftBody18appendAngularJointERKNS_6AJoint5SpecsEPNS_7ClusterENS_4BodyE(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 8 dereferenceable(40) %specs, ptr noundef %1, ptr noundef nonnull byval(%"struct.btSoftBody::Body") align 8 %agg.tmp)
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody8addForceERK9btVector3(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %force) local_unnamed_addr #11 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp4 = icmp sgt i32 %0, 0
  br i1 %cmp4, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %1 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %arrayidx5.i.i = getelementptr inbounds [4 x float], ptr %force, i64 0, i64 1
  %arrayidx10.i.i = getelementptr inbounds [4 x float], ptr %force, i64 0, i64 2
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZN10btSoftBody8addForceERK9btVector3i.exit, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %_ZN10btSoftBody8addForceERK9btVector3i.exit
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %_ZN10btSoftBody8addForceERK9btVector3i.exit ]
  %m_im.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv, i32 6
  %2 = load float, ptr %m_im.i, align 8, !tbaa !175
  %cmp.i = fcmp ogt float %2, 0.000000e+00
  br i1 %cmp.i, label %if.then.i, label %_ZN10btSoftBody8addForceERK9btVector3i.exit

if.then.i:                                        ; preds = %for.body
  %m_f.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv, i32 4
  %3 = load float, ptr %force, align 4, !tbaa !137
  %4 = load float, ptr %m_f.i, align 4, !tbaa !137
  %add.i.i = fadd float %3, %4
  store float %add.i.i, ptr %m_f.i, align 4, !tbaa !137
  %5 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %m_f.i, i64 0, i64 1
  %6 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %add8.i.i = fadd float %5, %6
  store float %add8.i.i, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %7 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds [4 x float], ptr %m_f.i, i64 0, i64 2
  %8 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %add13.i.i = fadd float %7, %8
  store float %add13.i.i, ptr %arrayidx12.i.i, align 4, !tbaa !137
  br label %_ZN10btSoftBody8addForceERK9btVector3i.exit

_ZN10btSoftBody8addForceERK9btVector3i.exit:      ; preds = %for.body, %if.then.i
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody8addForceERK9btVector3i(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %force, i32 noundef %node) local_unnamed_addr #13 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i = sext i32 %node to i64
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i, i32 6
  %1 = load float, ptr %m_im, align 8, !tbaa !175
  %cmp = fcmp ogt float %1, 0.000000e+00
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %m_f = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i, i32 4
  %2 = load float, ptr %force, align 4, !tbaa !137
  %3 = load float, ptr %m_f, align 4, !tbaa !137
  %add.i = fadd float %2, %3
  store float %add.i, ptr %m_f, align 4, !tbaa !137
  %arrayidx5.i = getelementptr inbounds [4 x float], ptr %force, i64 0, i64 1
  %4 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds [4 x float], ptr %m_f, i64 0, i64 1
  %5 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %add8.i = fadd float %4, %5
  store float %add8.i, ptr %arrayidx7.i, align 4, !tbaa !137
  %arrayidx10.i = getelementptr inbounds [4 x float], ptr %force, i64 0, i64 2
  %6 = load float, ptr %arrayidx10.i, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds [4 x float], ptr %m_f, i64 0, i64 2
  %7 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %6, %7
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody11addVelocityERK9btVector3(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %velocity) local_unnamed_addr #11 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp4 = icmp sgt i32 %0, 0
  br i1 %cmp4, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %1 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %arrayidx5.i.i = getelementptr inbounds [4 x float], ptr %velocity, i64 0, i64 1
  %arrayidx10.i.i = getelementptr inbounds [4 x float], ptr %velocity, i64 0, i64 2
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZN10btSoftBody11addVelocityERK9btVector3i.exit, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %_ZN10btSoftBody11addVelocityERK9btVector3i.exit
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %_ZN10btSoftBody11addVelocityERK9btVector3i.exit ]
  %m_im.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv, i32 6
  %2 = load float, ptr %m_im.i, align 8, !tbaa !175
  %cmp.i = fcmp ogt float %2, 0.000000e+00
  br i1 %cmp.i, label %if.then.i, label %_ZN10btSoftBody11addVelocityERK9btVector3i.exit

if.then.i:                                        ; preds = %for.body
  %m_v.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv, i32 3
  %3 = load float, ptr %velocity, align 4, !tbaa !137
  %4 = load float, ptr %m_v.i, align 4, !tbaa !137
  %add.i.i = fadd float %3, %4
  store float %add.i.i, ptr %m_v.i, align 4, !tbaa !137
  %5 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %m_v.i, i64 0, i64 1
  %6 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %add8.i.i = fadd float %5, %6
  store float %add8.i.i, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %7 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds [4 x float], ptr %m_v.i, i64 0, i64 2
  %8 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %add13.i.i = fadd float %7, %8
  store float %add13.i.i, ptr %arrayidx12.i.i, align 4, !tbaa !137
  br label %_ZN10btSoftBody11addVelocityERK9btVector3i.exit

_ZN10btSoftBody11addVelocityERK9btVector3i.exit:  ; preds = %for.body, %if.then.i
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody11addVelocityERK9btVector3i(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %velocity, i32 noundef %node) local_unnamed_addr #13 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i = sext i32 %node to i64
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i, i32 6
  %1 = load float, ptr %m_im, align 8, !tbaa !175
  %cmp = fcmp ogt float %1, 0.000000e+00
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i, i32 3
  %2 = load float, ptr %velocity, align 4, !tbaa !137
  %3 = load float, ptr %m_v, align 4, !tbaa !137
  %add.i = fadd float %2, %3
  store float %add.i, ptr %m_v, align 4, !tbaa !137
  %arrayidx5.i = getelementptr inbounds [4 x float], ptr %velocity, i64 0, i64 1
  %4 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds [4 x float], ptr %m_v, i64 0, i64 1
  %5 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %add8.i = fadd float %4, %5
  store float %add8.i, ptr %arrayidx7.i, align 4, !tbaa !137
  %arrayidx10.i = getelementptr inbounds [4 x float], ptr %velocity, i64 0, i64 2
  %6 = load float, ptr %arrayidx10.i, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds [4 x float], ptr %m_v, i64 0, i64 2
  %7 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %6, %7
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody11setVelocityERK9btVector3(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %velocity) local_unnamed_addr #10 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp8 = icmp sgt i32 %0, 0
  br i1 %cmp8, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %wide.trip.count = zext i32 %0 to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %1 = icmp eq i32 %0, 1
  br i1 %1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %if.end.1, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.1, %if.end.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.loopexit.unr-lcssa
  %2 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_im.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv.unr, i32 6
  %3 = load float, ptr %m_im.epil, align 8, !tbaa !175
  %cmp4.epil = fcmp ogt float %3, 0.000000e+00
  br i1 %cmp4.epil, label %if.then.epil, label %for.cond.cleanup

if.then.epil:                                     ; preds = %for.body.epil
  %m_v.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv.unr, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_v.epil, ptr noundef nonnull align 4 dereferenceable(16) %velocity, i64 16, i1 false), !tbaa.struct !163
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit.unr-lcssa, %if.then.epil, %for.body.epil, %entry
  ret void

for.body:                                         ; preds = %if.end.1, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.1, %if.end.1 ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.1, %if.end.1 ]
  %4 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 %indvars.iv, i32 6
  %5 = load float, ptr %m_im, align 8, !tbaa !175
  %cmp4 = fcmp ogt float %5, 0.000000e+00
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 %indvars.iv, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_v, ptr noundef nonnull align 4 dereferenceable(16) %velocity, i64 16, i1 false), !tbaa.struct !163
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %indvars.iv.next = or i64 %indvars.iv, 1
  %6 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_im.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 %indvars.iv.next, i32 6
  %7 = load float, ptr %m_im.1, align 8, !tbaa !175
  %cmp4.1 = fcmp ogt float %7, 0.000000e+00
  br i1 %cmp4.1, label %if.then.1, label %if.end.1

if.then.1:                                        ; preds = %if.end
  %m_v.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 %indvars.iv.next, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_v.1, ptr noundef nonnull align 4 dereferenceable(16) %velocity, i64 16, i1 false), !tbaa.struct !163
  br label %if.end.1

if.end.1:                                         ; preds = %if.then.1, %if.end
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody7setMassEif(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %node, float noundef %mass) local_unnamed_addr #14 align 2 {
entry:
  %cmp = fcmp ogt float %mass, 0.000000e+00
  %div = fdiv float 1.000000e+00, %mass
  %cond = select i1 %cmp, float %div, float 0.000000e+00
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i = sext i32 %node to i64
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i, i32 6
  store float %cond, ptr %m_im, align 8, !tbaa !175
  %m_bUpdateRtCst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  store i8 1, ptr %m_bUpdateRtCst, align 4, !tbaa !147
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local noundef float @_ZNK10btSoftBody7getMassEi(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, i32 noundef %node) local_unnamed_addr #15 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i = sext i32 %node to i64
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i, i32 6
  %1 = load float, ptr %m_im, align 8, !tbaa !175
  %cmp = fcmp ogt float %1, 0.000000e+00
  %div = fdiv float 1.000000e+00, %1
  %cond = select i1 %cmp, float %div, float 0.000000e+00
  ret float %cond
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local noundef float @_ZNK10btSoftBody12getTotalMassEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #9 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp6 = icmp sgt i32 %0, 0
  br i1 %cmp6, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %1 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %wide.trip.count = zext i32 %0 to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body, %for.body.lr.ph
  %add.lcssa.ph = phi float [ undef, %for.body.lr.ph ], [ %add.1, %for.body ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.1, %for.body ]
  %mass.07.unr = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %add.1, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.loopexit.unr-lcssa
  %m_im.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.unr, i32 6
  %3 = load float, ptr %m_im.i.epil, align 8, !tbaa !175
  %cmp.i.epil = fcmp ogt float %3, 0.000000e+00
  %div.i.epil = fdiv float 1.000000e+00, %3
  %cond.i.epil = select i1 %cmp.i.epil, float %div.i.epil, float 0.000000e+00
  %add.epil = fadd float %mass.07.unr, %cond.i.epil
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body.epil, %for.cond.cleanup.loopexit.unr-lcssa, %entry
  %mass.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %add.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %add.epil, %for.body.epil ]
  ret float %mass.0.lcssa

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.1, %for.body ]
  %mass.07 = phi float [ 0.000000e+00, %for.body.lr.ph.new ], [ %add.1, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.1, %for.body ]
  %m_im.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv, i32 6
  %4 = load float, ptr %m_im.i, align 8, !tbaa !175
  %cmp.i = fcmp ogt float %4, 0.000000e+00
  %div.i = fdiv float 1.000000e+00, %4
  %cond.i = select i1 %cmp.i, float %div.i, float 0.000000e+00
  %add = fadd float %mass.07, %cond.i
  %indvars.iv.next = or i64 %indvars.iv, 1
  %m_im.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.next, i32 6
  %5 = load float, ptr %m_im.i.1, align 8, !tbaa !175
  %cmp.i.1 = fcmp ogt float %5, 0.000000e+00
  %div.i.1 = fdiv float 1.000000e+00, %5
  %cond.i.1 = select i1 %cmp.i.1, float %div.i.1, float 0.000000e+00
  %add.1 = fadd float %add, %cond.i.1
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody12setTotalMassEfb(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, float noundef %mass, i1 noundef zeroext %fromfaces) local_unnamed_addr #16 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  br i1 %fromfaces, label %for.cond.preheader, label %if.end

for.cond.preheader:                               ; preds = %entry
  %cmp89 = icmp sgt i32 %0, 0
  br i1 %cmp89, label %for.body.lr.ph, label %for.cond4.preheader

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %wide.trip.count = zext i32 %0 to i64
  %xtraiter = and i64 %wide.trip.count, 3
  %2 = icmp ult i32 %0, 4
  br i1 %2, label %for.cond4.preheader.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967292
  br label %for.body

for.cond4.preheader.loopexit.unr-lcssa:           ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond4.preheader, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond4.preheader.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.cond4.preheader.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.cond4.preheader.loopexit.unr-lcssa ]
  %m_im.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.epil, i32 6
  store float 0.000000e+00, ptr %m_im.epil, align 8, !tbaa !175
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond4.preheader, label %for.body.epil, !llvm.loop !288

for.cond4.preheader:                              ; preds = %for.cond4.preheader.loopexit.unr-lcssa, %for.body.epil, %for.cond.preheader
  %m_size.i74 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %3 = load i32, ptr %m_size.i74, align 4, !tbaa !96
  %cmp692 = icmp sgt i32 %3, 0
  br i1 %cmp692, label %for.body7.lr.ph, label %for.cond29.preheader

for.body7.lr.ph:                                  ; preds = %for.cond4.preheader
  %m_data.i75 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %4 = load ptr, ptr %m_data.i75, align 8, !tbaa !95
  %wide.trip.count106 = zext i32 %3 to i64
  br label %for.body7

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv, i32 6
  store float 0.000000e+00, ptr %m_im, align 8, !tbaa !175
  %indvars.iv.next = or i64 %indvars.iv, 1
  %m_im.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.next, i32 6
  store float 0.000000e+00, ptr %m_im.1, align 8, !tbaa !175
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %m_im.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.next.1, i32 6
  store float 0.000000e+00, ptr %m_im.2, align 8, !tbaa !175
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %m_im.3 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.next.2, i32 6
  store float 0.000000e+00, ptr %m_im.3, align 8, !tbaa !175
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.cond4.preheader.loopexit.unr-lcssa, label %for.body

for.cond29.preheader:                             ; preds = %for.body7, %for.cond4.preheader
  br i1 %cmp89, label %for.body33.lr.ph, label %for.end56

for.body33.lr.ph:                                 ; preds = %for.cond29.preheader
  %m_data.i79 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %5 = load ptr, ptr %m_data.i79, align 8, !tbaa !87
  %wide.trip.count111 = zext i32 %0 to i64
  %min.iters.check = icmp ult i32 %0, 4
  br i1 %min.iters.check, label %for.body33.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body33.lr.ph
  %n.vec = and i64 %wide.trip.count111, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %6 = or i64 %index, 1
  %7 = or i64 %index, 2
  %8 = or i64 %index, 3
  %9 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 %index, i32 6
  %10 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 %6, i32 6
  %11 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 %7, i32 6
  %12 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 %8, i32 6
  %13 = load float, ptr %9, align 8, !tbaa !175
  %14 = load float, ptr %10, align 8, !tbaa !175
  %15 = load float, ptr %11, align 8, !tbaa !175
  %16 = load float, ptr %12, align 8, !tbaa !175
  %17 = insertelement <4 x float> poison, float %13, i64 0
  %18 = insertelement <4 x float> %17, float %14, i64 1
  %19 = insertelement <4 x float> %18, float %15, i64 2
  %20 = insertelement <4 x float> %19, float %16, i64 3
  %21 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %20
  %22 = extractelement <4 x float> %21, i64 0
  store float %22, ptr %9, align 8, !tbaa !175
  %23 = extractelement <4 x float> %21, i64 1
  store float %23, ptr %10, align 8, !tbaa !175
  %24 = extractelement <4 x float> %21, i64 2
  store float %24, ptr %11, align 8, !tbaa !175
  %25 = extractelement <4 x float> %21, i64 3
  store float %25, ptr %12, align 8, !tbaa !175
  %index.next = add nuw i64 %index, 4
  %26 = icmp eq i64 %index.next, %n.vec
  br i1 %26, label %middle.block, label %vector.body, !llvm.loop !289

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count111
  br i1 %cmp.n, label %if.end, label %for.body33.preheader

for.body33.preheader:                             ; preds = %for.body33.lr.ph, %middle.block
  %indvars.iv108.ph = phi i64 [ 0, %for.body33.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body33

for.body7:                                        ; preds = %for.body7.lr.ph, %for.body7
  %indvars.iv103 = phi i64 [ 0, %for.body7.lr.ph ], [ %indvars.iv.next104, %for.body7 ]
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %4, i64 %indvars.iv103, i32 1
  %27 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %27, i64 0, i32 1
  %arrayidx11 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %4, i64 %indvars.iv103, i32 1, i64 1
  %28 = load ptr, ptr %arrayidx11, align 8, !tbaa !219
  %m_x12 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %28, i64 0, i32 1
  %arrayidx14 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %4, i64 %indvars.iv103, i32 1, i64 2
  %29 = load ptr, ptr %arrayidx14, align 8, !tbaa !219
  %m_x15 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 1
  %30 = load float, ptr %m_x12, align 4, !tbaa !137
  %31 = load float, ptr %m_x, align 4, !tbaa !137
  %sub.i.i = fsub float %30, %31
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %28, i64 0, i32 1, i32 0, i64 1
  %32 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %27, i64 0, i32 1, i32 0, i64 1
  %33 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %sub8.i.i = fsub float %32, %33
  %arrayidx11.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %28, i64 0, i32 1, i32 0, i64 2
  %34 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %arrayidx13.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %27, i64 0, i32 1, i32 0, i64 2
  %35 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %34, %35
  %36 = load float, ptr %m_x15, align 4, !tbaa !137
  %sub.i7.i = fsub float %36, %31
  %arrayidx5.i8.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 1, i32 0, i64 1
  %37 = load float, ptr %arrayidx5.i8.i, align 4, !tbaa !137
  %sub8.i10.i = fsub float %37, %33
  %arrayidx11.i11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 1, i32 0, i64 2
  %38 = load float, ptr %arrayidx11.i11.i, align 4, !tbaa !137
  %sub14.i13.i = fsub float %38, %35
  %39 = fneg float %sub14.i.i
  %neg.i.i.i = fmul float %sub8.i10.i, %39
  %40 = tail call float @llvm.fmuladd.f32(float %sub8.i.i, float %sub14.i13.i, float %neg.i.i.i)
  %41 = fneg float %sub.i.i
  %neg19.i.i.i = fmul float %sub14.i13.i, %41
  %42 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %sub.i7.i, float %neg19.i.i.i)
  %43 = fneg float %sub8.i.i
  %neg30.i.i.i = fmul float %sub.i7.i, %43
  %44 = tail call float @llvm.fmuladd.f32(float %sub.i.i, float %sub8.i10.i, float %neg30.i.i.i)
  %mul8.i.i.i.i = fmul float %42, %42
  %45 = tail call float @llvm.fmuladd.f32(float %40, float %40, float %mul8.i.i.i.i)
  %46 = tail call float @llvm.fmuladd.f32(float %44, float %44, float %45)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %46)
  %m_im22 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %27, i64 0, i32 6
  %47 = load float, ptr %m_im22, align 8, !tbaa !175
  %add = fadd float %sqrt.i.i, %47
  store float %add, ptr %m_im22, align 8, !tbaa !175
  %m_im22.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %28, i64 0, i32 6
  %48 = load float, ptr %m_im22.1, align 8, !tbaa !175
  %add.1 = fadd float %sqrt.i.i, %48
  store float %add.1, ptr %m_im22.1, align 8, !tbaa !175
  %m_im22.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 6
  %49 = load float, ptr %m_im22.2, align 8, !tbaa !175
  %add.2 = fadd float %sqrt.i.i, %49
  store float %add.2, ptr %m_im22.2, align 8, !tbaa !175
  %indvars.iv.next104 = add nuw nsw i64 %indvars.iv103, 1
  %exitcond107.not = icmp eq i64 %indvars.iv.next104, %wide.trip.count106
  br i1 %exitcond107.not, label %for.cond29.preheader, label %for.body7

for.body33:                                       ; preds = %for.body33.preheader, %for.body33
  %indvars.iv108 = phi i64 [ %indvars.iv.next109, %for.body33 ], [ %indvars.iv108.ph, %for.body33.preheader ]
  %m_im36 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 %indvars.iv108, i32 6
  %50 = load float, ptr %m_im36, align 8, !tbaa !175
  %div = fdiv float 1.000000e+00, %50
  store float %div, ptr %m_im36, align 8, !tbaa !175
  %indvars.iv.next109 = add nuw nsw i64 %indvars.iv108, 1
  %exitcond112.not = icmp eq i64 %indvars.iv.next109, %wide.trip.count111
  br i1 %exitcond112.not, label %if.end, label %for.body33, !llvm.loop !290

if.end:                                           ; preds = %for.body33, %middle.block, %entry
  %cmp6.i = icmp sgt i32 %0, 0
  br i1 %cmp6.i, label %for.body.lr.ph.i, label %for.end56

for.body.lr.ph.i:                                 ; preds = %if.end
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %51 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !87
  %wide.trip.count.i = zext i32 %0 to i64
  %xtraiter133 = and i64 %wide.trip.count.i, 1
  %52 = icmp eq i32 %0, 1
  br i1 %52, label %_ZNK10btSoftBody12getTotalMassEv.exit.unr-lcssa, label %for.body.lr.ph.i.new

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter137 = and i64 %wide.trip.count.i, 4294967294
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.1, %for.body.i ]
  %mass.07.i = phi float [ 0.000000e+00, %for.body.lr.ph.i.new ], [ %add.i.1, %for.body.i ]
  %niter138 = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter138.next.1, %for.body.i ]
  %m_im.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %51, i64 %indvars.iv.i, i32 6
  %53 = load float, ptr %m_im.i.i, align 8, !tbaa !175
  %cmp.i.i = fcmp ogt float %53, 0.000000e+00
  %div.i.i = fdiv float 1.000000e+00, %53
  %cond.i.i = select i1 %cmp.i.i, float %div.i.i, float 0.000000e+00
  %add.i = fadd float %mass.07.i, %cond.i.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %m_im.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %51, i64 %indvars.iv.next.i, i32 6
  %54 = load float, ptr %m_im.i.i.1, align 8, !tbaa !175
  %cmp.i.i.1 = fcmp ogt float %54, 0.000000e+00
  %div.i.i.1 = fdiv float 1.000000e+00, %54
  %cond.i.i.1 = select i1 %cmp.i.i.1, float %div.i.i.1, float 0.000000e+00
  %add.i.1 = fadd float %add.i, %cond.i.i.1
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %niter138.next.1 = add i64 %niter138, 2
  %niter138.ncmp.1 = icmp eq i64 %niter138.next.1, %unroll_iter137
  br i1 %niter138.ncmp.1, label %_ZNK10btSoftBody12getTotalMassEv.exit.unr-lcssa, label %for.body.i

_ZNK10btSoftBody12getTotalMassEv.exit.unr-lcssa:  ; preds = %for.body.i, %for.body.lr.ph.i
  %add.i.lcssa.ph = phi float [ undef, %for.body.lr.ph.i ], [ %add.i.1, %for.body.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i.1, %for.body.i ]
  %mass.07.i.unr = phi float [ 0.000000e+00, %for.body.lr.ph.i ], [ %add.i.1, %for.body.i ]
  %lcmp.mod135.not = icmp eq i64 %xtraiter133, 0
  br i1 %lcmp.mod135.not, label %_ZNK10btSoftBody12getTotalMassEv.exit, label %for.body.i.epil

for.body.i.epil:                                  ; preds = %_ZNK10btSoftBody12getTotalMassEv.exit.unr-lcssa
  %m_im.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %51, i64 %indvars.iv.i.unr, i32 6
  %55 = load float, ptr %m_im.i.i.epil, align 8, !tbaa !175
  %cmp.i.i.epil = fcmp ogt float %55, 0.000000e+00
  %div.i.i.epil = fdiv float 1.000000e+00, %55
  %cond.i.i.epil = select i1 %cmp.i.i.epil, float %div.i.i.epil, float 0.000000e+00
  %add.i.epil = fadd float %mass.07.i.unr, %cond.i.i.epil
  br label %_ZNK10btSoftBody12getTotalMassEv.exit

_ZNK10btSoftBody12getTotalMassEv.exit:            ; preds = %_ZNK10btSoftBody12getTotalMassEv.exit.unr-lcssa, %for.body.i.epil
  %add.i.lcssa = phi float [ %add.i.lcssa.ph, %_ZNK10btSoftBody12getTotalMassEv.exit.unr-lcssa ], [ %add.i.epil, %for.body.i.epil ]
  br i1 %cmp6.i, label %for.body49.lr.ph, label %for.end56

for.body49.lr.ph:                                 ; preds = %_ZNK10btSoftBody12getTotalMassEv.exit
  %div44 = fdiv float 1.000000e+00, %add.i.lcssa
  %mul = fmul float %div44, %mass
  %m_data.i86 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %56 = load ptr, ptr %m_data.i86, align 8, !tbaa !87
  %wide.trip.count116 = zext i32 %0 to i64
  %min.iters.check124 = icmp ult i32 %0, 4
  br i1 %min.iters.check124, label %for.body49.preheader, label %vector.ph125

vector.ph125:                                     ; preds = %for.body49.lr.ph
  %n.vec127 = and i64 %wide.trip.count.i, 4294967292
  %broadcast.splatinsert = insertelement <4 x float> poison, float %mul, i64 0
  %broadcast.splat = shufflevector <4 x float> %broadcast.splatinsert, <4 x float> poison, <4 x i32> zeroinitializer
  br label %vector.body130

vector.body130:                                   ; preds = %vector.body130, %vector.ph125
  %index131 = phi i64 [ 0, %vector.ph125 ], [ %index.next132, %vector.body130 ]
  %57 = or i64 %index131, 1
  %58 = or i64 %index131, 2
  %59 = or i64 %index131, 3
  %60 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %56, i64 %index131, i32 6
  %61 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %56, i64 %57, i32 6
  %62 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %56, i64 %58, i32 6
  %63 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %56, i64 %59, i32 6
  %64 = load float, ptr %60, align 8, !tbaa !175
  %65 = load float, ptr %61, align 8, !tbaa !175
  %66 = load float, ptr %62, align 8, !tbaa !175
  %67 = load float, ptr %63, align 8, !tbaa !175
  %68 = insertelement <4 x float> poison, float %64, i64 0
  %69 = insertelement <4 x float> %68, float %65, i64 1
  %70 = insertelement <4 x float> %69, float %66, i64 2
  %71 = insertelement <4 x float> %70, float %67, i64 3
  %72 = fdiv <4 x float> %71, %broadcast.splat
  %73 = extractelement <4 x float> %72, i64 0
  store float %73, ptr %60, align 8, !tbaa !175
  %74 = extractelement <4 x float> %72, i64 1
  store float %74, ptr %61, align 8, !tbaa !175
  %75 = extractelement <4 x float> %72, i64 2
  store float %75, ptr %62, align 8, !tbaa !175
  %76 = extractelement <4 x float> %72, i64 3
  store float %76, ptr %63, align 8, !tbaa !175
  %index.next132 = add nuw i64 %index131, 4
  %77 = icmp eq i64 %index.next132, %n.vec127
  br i1 %77, label %middle.block122, label %vector.body130, !llvm.loop !291

middle.block122:                                  ; preds = %vector.body130
  %cmp.n129 = icmp eq i64 %n.vec127, %wide.trip.count.i
  br i1 %cmp.n129, label %for.end56, label %for.body49.preheader

for.body49.preheader:                             ; preds = %for.body49.lr.ph, %middle.block122
  %indvars.iv113.ph = phi i64 [ 0, %for.body49.lr.ph ], [ %n.vec127, %middle.block122 ]
  br label %for.body49

for.body49:                                       ; preds = %for.body49.preheader, %for.body49
  %indvars.iv113 = phi i64 [ %indvars.iv.next114, %for.body49 ], [ %indvars.iv113.ph, %for.body49.preheader ]
  %m_im52 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %56, i64 %indvars.iv113, i32 6
  %78 = load float, ptr %m_im52, align 8, !tbaa !175
  %div53 = fdiv float %78, %mul
  store float %div53, ptr %m_im52, align 8, !tbaa !175
  %indvars.iv.next114 = add nuw nsw i64 %indvars.iv113, 1
  %exitcond117.not = icmp eq i64 %indvars.iv.next114, %wide.trip.count116
  br i1 %exitcond117.not, label %for.end56, label %for.body49, !llvm.loop !292

for.end56:                                        ; preds = %for.body49, %middle.block122, %for.cond29.preheader, %if.end, %_ZNK10btSoftBody12getTotalMassEv.exit
  %m_bUpdateRtCst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  store i8 1, ptr %m_bUpdateRtCst, align 4, !tbaa !147
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody15setTotalDensityEf(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, float noundef %density) local_unnamed_addr #16 align 2 {
entry:
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  %cmp.i = icmp sgt i32 %0, 0
  br i1 %cmp.i, label %if.then.i, label %_ZNK10btSoftBody9getVolumeEv.exit

if.then.i:                                        ; preds = %entry
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %1 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 1
  %org.sroa.0.0.copyload.i = load float, ptr %m_x.i, align 8, !tbaa.struct !163
  %org.sroa.6.0.m_x.sroa_idx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 1, i32 0, i64 1
  %org.sroa.6.0.copyload.i = load float, ptr %org.sroa.6.0.m_x.sroa_idx.i, align 4, !tbaa.struct !293
  %org.sroa.9.0.m_x.sroa_idx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 1, i32 0, i64 2
  %org.sroa.9.0.copyload.i = load float, ptr %org.sroa.9.0.m_x.sroa_idx.i, align 8, !tbaa.struct !165
  %m_size.i32.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %2 = load i32, ptr %m_size.i32.i, align 4, !tbaa !96
  %cmp566.i = icmp sgt i32 %2, 0
  br i1 %cmp566.i, label %for.body.lr.ph.i, label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.then.i
  %m_data.i33.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %3 = load ptr, ptr %m_data.i33.i, align 8, !tbaa !95
  %wide.trip.count.i = zext i32 %2 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %vol.068.i = phi float [ 0.000000e+00, %for.body.lr.ph.i ], [ %add.i, %for.body.i ]
  %m_n.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 %indvars.iv.i, i32 1
  %4 = load ptr, ptr %m_n.i, align 8, !tbaa !219
  %m_x8.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1
  %5 = load float, ptr %m_x8.i, align 4, !tbaa !137
  %sub.i.i = fsub float %5, %org.sroa.0.0.copyload.i
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 1
  %6 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %sub8.i.i = fsub float %6, %org.sroa.6.0.copyload.i
  %arrayidx11.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 2
  %7 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %7, %org.sroa.9.0.copyload.i
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 %indvars.iv.i, i32 1, i64 1
  %8 = load ptr, ptr %arrayidx13.i, align 8, !tbaa !219
  %m_x14.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %8, i64 0, i32 1
  %9 = load float, ptr %m_x14.i, align 4, !tbaa !137
  %sub.i34.i = fsub float %9, %org.sroa.0.0.copyload.i
  %arrayidx5.i35.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %8, i64 0, i32 1, i32 0, i64 1
  %10 = load float, ptr %arrayidx5.i35.i, align 4, !tbaa !137
  %sub8.i37.i = fsub float %10, %org.sroa.6.0.copyload.i
  %arrayidx11.i38.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %8, i64 0, i32 1, i32 0, i64 2
  %11 = load float, ptr %arrayidx11.i38.i, align 4, !tbaa !137
  %sub14.i40.i = fsub float %11, %org.sroa.9.0.copyload.i
  %arrayidx19.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 %indvars.iv.i, i32 1, i64 2
  %12 = load ptr, ptr %arrayidx19.i, align 8, !tbaa !219
  %m_x20.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1
  %13 = load float, ptr %m_x20.i, align 4, !tbaa !137
  %sub.i46.i = fsub float %13, %org.sroa.0.0.copyload.i
  %arrayidx5.i47.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1, i32 0, i64 1
  %14 = load float, ptr %arrayidx5.i47.i, align 4, !tbaa !137
  %sub8.i49.i = fsub float %14, %org.sroa.6.0.copyload.i
  %arrayidx11.i50.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1, i32 0, i64 2
  %15 = load float, ptr %arrayidx11.i50.i, align 4, !tbaa !137
  %sub14.i52.i = fsub float %15, %org.sroa.9.0.copyload.i
  %16 = fneg float %sub14.i40.i
  %neg.i.i.i = fmul float %sub8.i49.i, %16
  %17 = tail call float @llvm.fmuladd.f32(float %sub8.i37.i, float %sub14.i52.i, float %neg.i.i.i)
  %18 = fneg float %sub.i34.i
  %neg19.i.i.i = fmul float %sub14.i52.i, %18
  %19 = tail call float @llvm.fmuladd.f32(float %sub14.i40.i, float %sub.i46.i, float %neg19.i.i.i)
  %20 = fneg float %sub8.i37.i
  %neg30.i.i.i = fmul float %sub.i46.i, %20
  %21 = tail call float @llvm.fmuladd.f32(float %sub.i34.i, float %sub8.i49.i, float %neg30.i.i.i)
  %mul8.i.i.i = fmul float %sub8.i.i, %19
  %22 = tail call float @llvm.fmuladd.f32(float %sub.i.i, float %17, float %mul8.i.i.i)
  %23 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %21, float %22)
  %add.i = fadd float %vol.068.i, %23
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i, %if.then.i
  %vol.0.lcssa.i = phi float [ 0.000000e+00, %if.then.i ], [ %add.i, %for.body.i ]
  %div.i = fdiv float %vol.0.lcssa.i, 6.000000e+00
  br label %_ZNK10btSoftBody9getVolumeEv.exit

_ZNK10btSoftBody9getVolumeEv.exit:                ; preds = %entry, %for.end.i
  %vol.1.i = phi float [ %div.i, %for.end.i ], [ 0.000000e+00, %entry ]
  %mul = fmul float %vol.1.i, %density
  tail call void @_ZN10btSoftBody12setTotalMassEfb(ptr noundef nonnull align 8 dereferenceable(1496) %this, float noundef %mul, i1 noundef zeroext true)
  ret void
}

; Function Attrs: nofree nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local noundef float @_ZNK10btSoftBody9getVolumeEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #17 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 1
  %org.sroa.0.0.copyload = load float, ptr %m_x, align 8, !tbaa.struct !163
  %org.sroa.6.0.m_x.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 1, i32 0, i64 1
  %org.sroa.6.0.copyload = load float, ptr %org.sroa.6.0.m_x.sroa_idx, align 4, !tbaa.struct !293
  %org.sroa.9.0.m_x.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 1, i32 0, i64 2
  %org.sroa.9.0.copyload = load float, ptr %org.sroa.9.0.m_x.sroa_idx, align 8, !tbaa.struct !165
  %m_size.i32 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %2 = load i32, ptr %m_size.i32, align 4, !tbaa !96
  %cmp566 = icmp sgt i32 %2, 0
  br i1 %cmp566, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.then
  %m_data.i33 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %3 = load ptr, ptr %m_data.i33, align 8, !tbaa !95
  %wide.trip.count = zext i32 %2 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %vol.068 = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %add, %for.body ]
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 %indvars.iv, i32 1
  %4 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_x8 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1
  %5 = load float, ptr %m_x8, align 4, !tbaa !137
  %sub.i = fsub float %5, %org.sroa.0.0.copyload
  %arrayidx5.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 1
  %6 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %sub8.i = fsub float %6, %org.sroa.6.0.copyload
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 2
  %7 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %sub14.i = fsub float %7, %org.sroa.9.0.copyload
  %arrayidx13 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 %indvars.iv, i32 1, i64 1
  %8 = load ptr, ptr %arrayidx13, align 8, !tbaa !219
  %m_x14 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %8, i64 0, i32 1
  %9 = load float, ptr %m_x14, align 4, !tbaa !137
  %sub.i34 = fsub float %9, %org.sroa.0.0.copyload
  %arrayidx5.i35 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %8, i64 0, i32 1, i32 0, i64 1
  %10 = load float, ptr %arrayidx5.i35, align 4, !tbaa !137
  %sub8.i37 = fsub float %10, %org.sroa.6.0.copyload
  %arrayidx11.i38 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %8, i64 0, i32 1, i32 0, i64 2
  %11 = load float, ptr %arrayidx11.i38, align 4, !tbaa !137
  %sub14.i40 = fsub float %11, %org.sroa.9.0.copyload
  %arrayidx19 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 %indvars.iv, i32 1, i64 2
  %12 = load ptr, ptr %arrayidx19, align 8, !tbaa !219
  %m_x20 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1
  %13 = load float, ptr %m_x20, align 4, !tbaa !137
  %sub.i46 = fsub float %13, %org.sroa.0.0.copyload
  %arrayidx5.i47 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1, i32 0, i64 1
  %14 = load float, ptr %arrayidx5.i47, align 4, !tbaa !137
  %sub8.i49 = fsub float %14, %org.sroa.6.0.copyload
  %arrayidx11.i50 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1, i32 0, i64 2
  %15 = load float, ptr %arrayidx11.i50, align 4, !tbaa !137
  %sub14.i52 = fsub float %15, %org.sroa.9.0.copyload
  %16 = fneg float %sub14.i40
  %neg.i.i = fmul float %sub8.i49, %16
  %17 = tail call float @llvm.fmuladd.f32(float %sub8.i37, float %sub14.i52, float %neg.i.i)
  %18 = fneg float %sub.i34
  %neg19.i.i = fmul float %sub14.i52, %18
  %19 = tail call float @llvm.fmuladd.f32(float %sub14.i40, float %sub.i46, float %neg19.i.i)
  %20 = fneg float %sub8.i37
  %neg30.i.i = fmul float %sub.i46, %20
  %21 = tail call float @llvm.fmuladd.f32(float %sub.i34, float %sub8.i49, float %neg30.i.i)
  %mul8.i.i = fmul float %sub8.i, %19
  %22 = tail call float @llvm.fmuladd.f32(float %sub.i, float %17, float %mul8.i.i)
  %23 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %21, float %22)
  %add = fadd float %vol.068, %23
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.then
  %vol.0.lcssa = phi float [ 0.000000e+00, %if.then ], [ %add, %for.body ]
  %div = fdiv float %vol.0.lcssa, 6.000000e+00
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  %vol.1 = phi float [ %div, %for.end ], [ 0.000000e+00, %entry ]
  ret float %vol.1
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody13setVolumeMassEf(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, float noundef %mass) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %or.cond = icmp sgt i32 %0, 0
  br i1 %or.cond, label %invoke.cont3, label %for.cond12.preheader

invoke.cont3:                                     ; preds = %entry
  %conv.i.i.i.i = zext i32 %0 to i64
  %mul.i.i.i.i = shl nuw nsw i64 %conv.i.i.i.i, 2
  %call.i.i.i.i97 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  tail call void @llvm.memset.p0.i64(ptr align 4 %call.i.i.i.i97, i8 0, i64 %mul.i.i.i.i, i1 false), !tbaa !137
  %.pre = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp147 = icmp sgt i32 %.pre, 0
  br i1 %cmp147, label %for.body.lr.ph, label %for.cond12.preheader

for.body.lr.ph:                                   ; preds = %invoke.cont3
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %wide.trip.count = zext i32 %.pre to i64
  %xtraiter = and i64 %wide.trip.count, 3
  %2 = icmp ult i32 %.pre, 4
  br i1 %2, label %for.cond12.preheader.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967292
  br label %for.body

for.cond12.preheader.loopexit.unr-lcssa:          ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond12.preheader, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond12.preheader.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.cond12.preheader.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.cond12.preheader.loopexit.unr-lcssa ]
  %m_im.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.epil, i32 6
  store float 0.000000e+00, ptr %m_im.epil, align 8, !tbaa !175
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond12.preheader, label %for.body.epil, !llvm.loop !294

for.cond12.preheader:                             ; preds = %for.cond12.preheader.loopexit.unr-lcssa, %for.body.epil, %entry, %invoke.cont3
  %cmp147172 = phi i1 [ false, %invoke.cont3 ], [ false, %entry ], [ %cmp147, %for.body.epil ], [ %cmp147, %for.cond12.preheader.loopexit.unr-lcssa ]
  %ranks.sroa.15139.1171 = phi ptr [ %call.i.i.i.i97, %invoke.cont3 ], [ null, %entry ], [ %call.i.i.i.i97, %for.body.epil ], [ %call.i.i.i.i97, %for.cond12.preheader.loopexit.unr-lcssa ]
  %3 = phi i32 [ %.pre, %invoke.cont3 ], [ %0, %entry ], [ %.pre, %for.body.epil ], [ %.pre, %for.cond12.preheader.loopexit.unr-lcssa ]
  %m_size.i99 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 2
  %4 = load i32, ptr %m_size.i99, align 4, !tbaa !100
  %cmp16150 = icmp sgt i32 %4, 0
  br i1 %cmp16150, label %for.body18.lr.ph, label %for.cond48.preheader

for.body18.lr.ph:                                 ; preds = %for.cond12.preheader
  %m_data.i100 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  %5 = load ptr, ptr %m_data.i100, align 8, !tbaa !99
  %m_data.i103 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %6 = load ptr, ptr %m_data.i103, align 8, !tbaa !87
  %sub.ptr.rhs.cast = ptrtoint ptr %6 to i64
  %wide.trip.count162 = zext i32 %4 to i64
  br label %for.body18

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv, i32 6
  store float 0.000000e+00, ptr %m_im, align 8, !tbaa !175
  %indvars.iv.next = or i64 %indvars.iv, 1
  %m_im.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.next, i32 6
  store float 0.000000e+00, ptr %m_im.1, align 8, !tbaa !175
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %m_im.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.next.1, i32 6
  store float 0.000000e+00, ptr %m_im.2, align 8, !tbaa !175
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %m_im.3 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.next.2, i32 6
  store float 0.000000e+00, ptr %m_im.3, align 8, !tbaa !175
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.cond12.preheader.loopexit.unr-lcssa, label %for.body

for.cond48.preheader:                             ; preds = %for.body18, %for.cond12.preheader
  br i1 %cmp147172, label %for.body55.lr.ph, label %invoke.cont75

for.body55.lr.ph:                                 ; preds = %for.cond48.preheader
  %m_data.i110 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %7 = load ptr, ptr %m_data.i110, align 8, !tbaa !87
  %wide.trip.count167 = zext i32 %3 to i64
  %xtraiter173 = and i64 %wide.trip.count167, 1
  %8 = icmp eq i32 %3, 1
  br i1 %8, label %for.cond.cleanup54.unr-lcssa, label %for.body55.lr.ph.new

for.body55.lr.ph.new:                             ; preds = %for.body55.lr.ph
  %unroll_iter176 = and i64 %wide.trip.count167, 4294967294
  br label %for.body55

for.body18:                                       ; preds = %for.body18.lr.ph, %for.body18
  %indvars.iv159 = phi i64 [ 0, %for.body18.lr.ph ], [ %indvars.iv.next160, %for.body18 ]
  %m_rv = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %5, i64 %indvars.iv159, i32 2
  %9 = load float, ptr %m_rv, align 8, !tbaa !242
  %10 = tail call float @llvm.fabs.f32(float %9)
  %arrayidx = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %5, i64 %indvars.iv159, i32 1, i64 0
  %11 = load ptr, ptr %arrayidx, align 8, !tbaa !219
  %m_im30 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %11, i64 0, i32 6
  %12 = load float, ptr %m_im30, align 8, !tbaa !175
  %add = fadd float %10, %12
  store float %add, ptr %m_im30, align 8, !tbaa !175
  %sub.ptr.lhs.cast = ptrtoint ptr %11 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 120
  %sext = shl i64 %sub.ptr.div, 32
  %idxprom.i105 = ashr exact i64 %sext, 32
  %arrayidx.i106 = getelementptr inbounds float, ptr %ranks.sroa.15139.1171, i64 %idxprom.i105
  %13 = load float, ptr %arrayidx.i106, align 4, !tbaa !137
  %add39 = fadd float %13, 1.000000e+00
  store float %add39, ptr %arrayidx.i106, align 4, !tbaa !137
  %14 = load float, ptr %m_rv, align 8, !tbaa !242
  %15 = tail call float @llvm.fabs.f32(float %14)
  %arrayidx.1 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %5, i64 %indvars.iv159, i32 1, i64 1
  %16 = load ptr, ptr %arrayidx.1, align 8, !tbaa !219
  %m_im30.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %16, i64 0, i32 6
  %17 = load float, ptr %m_im30.1, align 8, !tbaa !175
  %add.1 = fadd float %15, %17
  store float %add.1, ptr %m_im30.1, align 8, !tbaa !175
  %sub.ptr.lhs.cast.1 = ptrtoint ptr %16 to i64
  %sub.ptr.sub.1 = sub i64 %sub.ptr.lhs.cast.1, %sub.ptr.rhs.cast
  %sub.ptr.div.1 = sdiv exact i64 %sub.ptr.sub.1, 120
  %sext.1 = shl i64 %sub.ptr.div.1, 32
  %idxprom.i105.1 = ashr exact i64 %sext.1, 32
  %arrayidx.i106.1 = getelementptr inbounds float, ptr %ranks.sroa.15139.1171, i64 %idxprom.i105.1
  %18 = load float, ptr %arrayidx.i106.1, align 4, !tbaa !137
  %add39.1 = fadd float %18, 1.000000e+00
  store float %add39.1, ptr %arrayidx.i106.1, align 4, !tbaa !137
  %19 = load float, ptr %m_rv, align 8, !tbaa !242
  %20 = tail call float @llvm.fabs.f32(float %19)
  %arrayidx.2 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %5, i64 %indvars.iv159, i32 1, i64 2
  %21 = load ptr, ptr %arrayidx.2, align 8, !tbaa !219
  %m_im30.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 0, i32 6
  %22 = load float, ptr %m_im30.2, align 8, !tbaa !175
  %add.2 = fadd float %20, %22
  store float %add.2, ptr %m_im30.2, align 8, !tbaa !175
  %sub.ptr.lhs.cast.2 = ptrtoint ptr %21 to i64
  %sub.ptr.sub.2 = sub i64 %sub.ptr.lhs.cast.2, %sub.ptr.rhs.cast
  %sub.ptr.div.2 = sdiv exact i64 %sub.ptr.sub.2, 120
  %sext.2 = shl i64 %sub.ptr.div.2, 32
  %idxprom.i105.2 = ashr exact i64 %sext.2, 32
  %arrayidx.i106.2 = getelementptr inbounds float, ptr %ranks.sroa.15139.1171, i64 %idxprom.i105.2
  %23 = load float, ptr %arrayidx.i106.2, align 4, !tbaa !137
  %add39.2 = fadd float %23, 1.000000e+00
  store float %add39.2, ptr %arrayidx.i106.2, align 4, !tbaa !137
  %24 = load float, ptr %m_rv, align 8, !tbaa !242
  %25 = tail call float @llvm.fabs.f32(float %24)
  %arrayidx.3 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %5, i64 %indvars.iv159, i32 1, i64 3
  %26 = load ptr, ptr %arrayidx.3, align 8, !tbaa !219
  %m_im30.3 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %26, i64 0, i32 6
  %27 = load float, ptr %m_im30.3, align 8, !tbaa !175
  %add.3 = fadd float %25, %27
  store float %add.3, ptr %m_im30.3, align 8, !tbaa !175
  %sub.ptr.lhs.cast.3 = ptrtoint ptr %26 to i64
  %sub.ptr.sub.3 = sub i64 %sub.ptr.lhs.cast.3, %sub.ptr.rhs.cast
  %sub.ptr.div.3 = sdiv exact i64 %sub.ptr.sub.3, 120
  %sext.3 = shl i64 %sub.ptr.div.3, 32
  %idxprom.i105.3 = ashr exact i64 %sext.3, 32
  %arrayidx.i106.3 = getelementptr inbounds float, ptr %ranks.sroa.15139.1171, i64 %idxprom.i105.3
  %28 = load float, ptr %arrayidx.i106.3, align 4, !tbaa !137
  %add39.3 = fadd float %28, 1.000000e+00
  store float %add39.3, ptr %arrayidx.i106.3, align 4, !tbaa !137
  %indvars.iv.next160 = add nuw nsw i64 %indvars.iv159, 1
  %exitcond163.not = icmp eq i64 %indvars.iv.next160, %wide.trip.count162
  br i1 %exitcond163.not, label %for.cond48.preheader, label %for.body18

for.cond.cleanup54.unr-lcssa:                     ; preds = %for.inc71.1, %for.body55.lr.ph
  %indvars.iv164.unr = phi i64 [ 0, %for.body55.lr.ph ], [ %indvars.iv.next165.1, %for.inc71.1 ]
  %lcmp.mod175.not = icmp eq i64 %xtraiter173, 0
  br i1 %lcmp.mod175.not, label %for.cond.cleanup54, label %for.body55.epil

for.body55.epil:                                  ; preds = %for.cond.cleanup54.unr-lcssa
  %m_im59.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 %indvars.iv164.unr, i32 6
  %29 = load float, ptr %m_im59.epil, align 8, !tbaa !175
  %cmp60.epil = fcmp ogt float %29, 0.000000e+00
  br i1 %cmp60.epil, label %if.then.epil, label %for.cond.cleanup54

if.then.epil:                                     ; preds = %for.body55.epil
  %arrayidx.i115.epil = getelementptr inbounds float, ptr %ranks.sroa.15139.1171, i64 %indvars.iv164.unr
  %30 = load float, ptr %arrayidx.i115.epil, align 4, !tbaa !137
  %div.epil = fdiv float %30, %29
  store float %div.epil, ptr %m_im59.epil, align 8, !tbaa !175
  br label %for.cond.cleanup54

for.cond.cleanup54:                               ; preds = %for.body55.epil, %if.then.epil, %for.cond.cleanup54.unr-lcssa
  br i1 %cmp147172, label %for.body.lr.ph.i.i, label %invoke.cont75

for.body.lr.ph.i.i:                               ; preds = %for.cond.cleanup54
  %m_data.i.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %31 = load ptr, ptr %m_data.i.i.i.i, align 8, !tbaa !87
  %wide.trip.count.i.i = zext i32 %3 to i64
  %xtraiter178 = and i64 %wide.trip.count167, 1
  %32 = icmp eq i32 %3, 1
  br i1 %32, label %for.body49.lr.ph.i.unr-lcssa, label %for.body.lr.ph.i.i.new

for.body.lr.ph.i.i.new:                           ; preds = %for.body.lr.ph.i.i
  %unroll_iter182 = and i64 %wide.trip.count167, 4294967294
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %for.body.lr.ph.i.i.new
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.new ], [ %indvars.iv.next.i.i.1, %for.body.i.i ]
  %mass.07.i.i = phi float [ 0.000000e+00, %for.body.lr.ph.i.i.new ], [ %add.i.i.1, %for.body.i.i ]
  %niter183 = phi i64 [ 0, %for.body.lr.ph.i.i.new ], [ %niter183.next.1, %for.body.i.i ]
  %m_im.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %31, i64 %indvars.iv.i.i, i32 6
  %33 = load float, ptr %m_im.i.i.i, align 8, !tbaa !175
  %cmp.i.i.i = fcmp ogt float %33, 0.000000e+00
  %div.i.i.i = fdiv float 1.000000e+00, %33
  %cond.i.i.i = select i1 %cmp.i.i.i, float %div.i.i.i, float 0.000000e+00
  %add.i.i = fadd float %mass.07.i.i, %cond.i.i.i
  %indvars.iv.next.i.i = or i64 %indvars.iv.i.i, 1
  %m_im.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %31, i64 %indvars.iv.next.i.i, i32 6
  %34 = load float, ptr %m_im.i.i.i.1, align 8, !tbaa !175
  %cmp.i.i.i.1 = fcmp ogt float %34, 0.000000e+00
  %div.i.i.i.1 = fdiv float 1.000000e+00, %34
  %cond.i.i.i.1 = select i1 %cmp.i.i.i.1, float %div.i.i.i.1, float 0.000000e+00
  %add.i.i.1 = fadd float %add.i.i, %cond.i.i.i.1
  %indvars.iv.next.i.i.1 = add nuw nsw i64 %indvars.iv.i.i, 2
  %niter183.next.1 = add i64 %niter183, 2
  %niter183.ncmp.1 = icmp eq i64 %niter183.next.1, %unroll_iter182
  br i1 %niter183.ncmp.1, label %for.body49.lr.ph.i.unr-lcssa, label %for.body.i.i

for.body49.lr.ph.i.unr-lcssa:                     ; preds = %for.body.i.i, %for.body.lr.ph.i.i
  %add.i.i.lcssa.ph = phi float [ undef, %for.body.lr.ph.i.i ], [ %add.i.i.1, %for.body.i.i ]
  %indvars.iv.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i.1, %for.body.i.i ]
  %mass.07.i.i.unr = phi float [ 0.000000e+00, %for.body.lr.ph.i.i ], [ %add.i.i.1, %for.body.i.i ]
  %lcmp.mod180.not = icmp eq i64 %xtraiter178, 0
  br i1 %lcmp.mod180.not, label %for.body49.lr.ph.i, label %for.body.i.i.epil

for.body.i.i.epil:                                ; preds = %for.body49.lr.ph.i.unr-lcssa
  %m_im.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %31, i64 %indvars.iv.i.i.unr, i32 6
  %35 = load float, ptr %m_im.i.i.i.epil, align 8, !tbaa !175
  %cmp.i.i.i.epil = fcmp ogt float %35, 0.000000e+00
  %div.i.i.i.epil = fdiv float 1.000000e+00, %35
  %cond.i.i.i.epil = select i1 %cmp.i.i.i.epil, float %div.i.i.i.epil, float 0.000000e+00
  %add.i.i.epil = fadd float %mass.07.i.i.unr, %cond.i.i.i.epil
  br label %for.body49.lr.ph.i

for.body49.lr.ph.i:                               ; preds = %for.body49.lr.ph.i.unr-lcssa, %for.body.i.i.epil
  %add.i.i.lcssa = phi float [ %add.i.i.lcssa.ph, %for.body49.lr.ph.i.unr-lcssa ], [ %add.i.i.epil, %for.body.i.i.epil ]
  %div44.i = fdiv float 1.000000e+00, %add.i.i.lcssa
  %mul.i = fmul float %div44.i, %mass
  %min.iters.check = icmp ult i32 %3, 4
  br i1 %min.iters.check, label %for.body49.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body49.lr.ph.i
  %n.vec = and i64 %wide.trip.count167, 4294967292
  %broadcast.splatinsert = insertelement <4 x float> poison, float %mul.i, i64 0
  %broadcast.splat = shufflevector <4 x float> %broadcast.splatinsert, <4 x float> poison, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %36 = or i64 %index, 1
  %37 = or i64 %index, 2
  %38 = or i64 %index, 3
  %39 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %31, i64 %index, i32 6
  %40 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %31, i64 %36, i32 6
  %41 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %31, i64 %37, i32 6
  %42 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %31, i64 %38, i32 6
  %43 = load float, ptr %39, align 8, !tbaa !175
  %44 = load float, ptr %40, align 8, !tbaa !175
  %45 = load float, ptr %41, align 8, !tbaa !175
  %46 = load float, ptr %42, align 8, !tbaa !175
  %47 = insertelement <4 x float> poison, float %43, i64 0
  %48 = insertelement <4 x float> %47, float %44, i64 1
  %49 = insertelement <4 x float> %48, float %45, i64 2
  %50 = insertelement <4 x float> %49, float %46, i64 3
  %51 = fdiv <4 x float> %50, %broadcast.splat
  %52 = extractelement <4 x float> %51, i64 0
  store float %52, ptr %39, align 8, !tbaa !175
  %53 = extractelement <4 x float> %51, i64 1
  store float %53, ptr %40, align 8, !tbaa !175
  %54 = extractelement <4 x float> %51, i64 2
  store float %54, ptr %41, align 8, !tbaa !175
  %55 = extractelement <4 x float> %51, i64 3
  store float %55, ptr %42, align 8, !tbaa !175
  %index.next = add nuw i64 %index, 4
  %56 = icmp eq i64 %index.next, %n.vec
  br i1 %56, label %middle.block, label %vector.body, !llvm.loop !295

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count167
  br i1 %cmp.n, label %invoke.cont75, label %for.body49.i.preheader

for.body49.i.preheader:                           ; preds = %for.body49.lr.ph.i, %middle.block
  %indvars.iv113.i.ph = phi i64 [ 0, %for.body49.lr.ph.i ], [ %n.vec, %middle.block ]
  br label %for.body49.i

for.body49.i:                                     ; preds = %for.body49.i.preheader, %for.body49.i
  %indvars.iv113.i = phi i64 [ %indvars.iv.next114.i, %for.body49.i ], [ %indvars.iv113.i.ph, %for.body49.i.preheader ]
  %m_im52.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %31, i64 %indvars.iv113.i, i32 6
  %57 = load float, ptr %m_im52.i, align 8, !tbaa !175
  %div53.i = fdiv float %57, %mul.i
  store float %div53.i, ptr %m_im52.i, align 8, !tbaa !175
  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1
  %exitcond117.not.i = icmp eq i64 %indvars.iv.next114.i, %wide.trip.count.i.i
  br i1 %exitcond117.not.i, label %invoke.cont75, label %for.body49.i, !llvm.loop !296

for.body55:                                       ; preds = %for.inc71.1, %for.body55.lr.ph.new
  %indvars.iv164 = phi i64 [ 0, %for.body55.lr.ph.new ], [ %indvars.iv.next165.1, %for.inc71.1 ]
  %niter177 = phi i64 [ 0, %for.body55.lr.ph.new ], [ %niter177.next.1, %for.inc71.1 ]
  %m_im59 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 %indvars.iv164, i32 6
  %58 = load float, ptr %m_im59, align 8, !tbaa !175
  %cmp60 = fcmp ogt float %58, 0.000000e+00
  br i1 %cmp60, label %if.then, label %for.inc71

if.then:                                          ; preds = %for.body55
  %arrayidx.i115 = getelementptr inbounds float, ptr %ranks.sroa.15139.1171, i64 %indvars.iv164
  %59 = load float, ptr %arrayidx.i115, align 4, !tbaa !137
  %div = fdiv float %59, %58
  store float %div, ptr %m_im59, align 8, !tbaa !175
  br label %for.inc71

for.inc71:                                        ; preds = %for.body55, %if.then
  %indvars.iv.next165 = or i64 %indvars.iv164, 1
  %m_im59.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 %indvars.iv.next165, i32 6
  %60 = load float, ptr %m_im59.1, align 8, !tbaa !175
  %cmp60.1 = fcmp ogt float %60, 0.000000e+00
  br i1 %cmp60.1, label %if.then.1, label %for.inc71.1

if.then.1:                                        ; preds = %for.inc71
  %arrayidx.i115.1 = getelementptr inbounds float, ptr %ranks.sroa.15139.1171, i64 %indvars.iv.next165
  %61 = load float, ptr %arrayidx.i115.1, align 4, !tbaa !137
  %div.1 = fdiv float %61, %60
  store float %div.1, ptr %m_im59.1, align 8, !tbaa !175
  br label %for.inc71.1

for.inc71.1:                                      ; preds = %if.then.1, %for.inc71
  %indvars.iv.next165.1 = add nuw nsw i64 %indvars.iv164, 2
  %niter177.next.1 = add i64 %niter177, 2
  %niter177.ncmp.1 = icmp eq i64 %niter177.next.1, %unroll_iter176
  br i1 %niter177.ncmp.1, label %for.cond.cleanup54.unr-lcssa, label %for.body55

invoke.cont75:                                    ; preds = %for.body49.i, %middle.block, %for.cond48.preheader, %for.cond.cleanup54
  %m_bUpdateRtCst.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  store i8 1, ptr %m_bUpdateRtCst.i, align 4, !tbaa !147
  %tobool.not.i.i.i123 = icmp eq ptr %ranks.sroa.15139.1171, null
  br i1 %tobool.not.i.i.i123, label %_ZN20btAlignedObjectArrayIfED2Ev.exit, label %if.then3.i.i.i126

if.then3.i.i.i126:                                ; preds = %invoke.cont75
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %ranks.sroa.15139.1171)
  br label %_ZN20btAlignedObjectArrayIfED2Ev.exit

_ZN20btAlignedObjectArrayIfED2Ev.exit:            ; preds = %invoke.cont75, %if.then3.i.i.i126
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIfED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.12, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !39
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.12, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIfE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIfE5clearEv.exit

_ZN20btAlignedObjectArrayIfE5clearEv.exit:        ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.12, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !36
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !39
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !40
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.12, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !41
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody16setVolumeDensityEf(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, float noundef %density) local_unnamed_addr #4 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !100
  %cmp18 = icmp sgt i32 %0, 0
  br i1 %cmp18, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !99
  %wide.trip.count = zext i32 %0 to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body, %for.body.lr.ph
  %add.3.lcssa.ph = phi float [ undef, %for.body.lr.ph ], [ %add.3.1, %for.body ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.1, %for.body ]
  %volume.020.unr = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %add.3.1, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.loopexit.unr-lcssa
  %m_rv.epil = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %1, i64 %indvars.iv.unr, i32 2
  %3 = load float, ptr %m_rv.epil, align 8, !tbaa !242
  %4 = tail call float @llvm.fabs.f32(float %3)
  %add.epil = fadd float %volume.020.unr, %4
  %add.1.epil = fadd float %add.epil, %4
  %add.2.epil = fadd float %add.1.epil, %4
  %add.3.epil = fadd float %add.2.epil, %4
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body.epil, %for.cond.cleanup.loopexit.unr-lcssa, %entry
  %volume.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %add.3.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %add.3.epil, %for.body.epil ]
  %mul = fmul float %volume.0.lcssa, %density
  %div = fdiv float %mul, 6.000000e+00
  tail call void @_ZN10btSoftBody13setVolumeMassEf(ptr noundef nonnull align 8 dereferenceable(1496) %this, float noundef %div)
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.1, %for.body ]
  %volume.020 = phi float [ 0.000000e+00, %for.body.lr.ph.new ], [ %add.3.1, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.1, %for.body ]
  %m_rv = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %1, i64 %indvars.iv, i32 2
  %5 = load float, ptr %m_rv, align 8, !tbaa !242
  %6 = tail call float @llvm.fabs.f32(float %5)
  %add = fadd float %volume.020, %6
  %add.1 = fadd float %add, %6
  %add.2 = fadd float %add.1, %6
  %add.3 = fadd float %add.2, %6
  %indvars.iv.next = or i64 %indvars.iv, 1
  %m_rv.1 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %1, i64 %indvars.iv.next, i32 2
  %7 = load float, ptr %m_rv.1, align 8, !tbaa !242
  %8 = tail call float @llvm.fabs.f32(float %7)
  %add.123 = fadd float %add.3, %8
  %add.1.1 = fadd float %add.123, %8
  %add.2.1 = fadd float %add.1.1, %8
  %add.3.1 = fadd float %add.2.1, %8
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody9transformERK11btTransform(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(64) %trs) local_unnamed_addr #0 align 2 {
entry:
  %vol = alloca %struct.btDbvtAabbMm, align 8
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %0 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable = load ptr, ptr %0, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 11
  %1 = load ptr, ptr %vfn, align 8
  %call2 = tail call noundef float %1(ptr noundef nonnull align 8 dereferenceable(24) %0)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %vol) #38
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %2 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp62 = icmp sgt i32 %2, 0
  br i1 %cmp62, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %arrayidx5.i.i.i = getelementptr inbounds [4 x float], ptr %trs, i64 0, i64 1
  %arrayidx10.i.i.i = getelementptr inbounds [4 x float], ptr %trs, i64 0, i64 2
  %m_origin.i.i = getelementptr inbounds %class.btTransform, ptr %trs, i64 0, i32 1
  %arrayidx.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %trs, i64 0, i64 1
  %arrayidx5.i20.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %trs, i64 0, i64 1, i32 0, i64 1
  %arrayidx10.i23.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %trs, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i26.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %trs, i64 0, i64 2
  %arrayidx5.i27.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %trs, i64 0, i64 2, i32 0, i64 1
  %arrayidx10.i30.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %trs, i64 0, i64 2, i32 0, i64 2
  %arrayidx.i32.i.i = getelementptr inbounds %class.btTransform, ptr %trs, i64 0, i32 1, i32 0, i64 2
  %ref.tmp17.sroa.4.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 8
  %ref.tmp17.sroa.5.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 16
  %ref.tmp17.sroa.6.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 24
  %m_ndbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  %wide.trip.count = zext i32 %2 to i64
  %3 = insertelement <2 x float> poison, float %call2, i64 0
  %4 = shufflevector <2 x float> %3, <2 x float> poison, <2 x i32> zeroinitializer
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  call void @_ZN10btSoftBody13updateNormalsEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  %m_ndbvt.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  %5 = load ptr, ptr %m_ndbvt.i, align 8, !tbaa !162
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.cleanup
  %mx.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %5, i64 0, i32 1
  %6 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable.i = load ptr, ptr %6, align 8, !tbaa !5
  %vfn.i = getelementptr inbounds ptr, ptr %vtable.i, i64 11
  %7 = load ptr, ptr %vfn.i, align 8
  %call9.i = call noundef float %7(ptr noundef nonnull align 8 dereferenceable(24) %6)
  %8 = load <2 x float>, ptr %5, align 4, !tbaa !137
  %9 = insertelement <2 x float> poison, float %call9.i, i64 0
  %10 = shufflevector <2 x float> %9, <2 x float> poison, <2 x i32> zeroinitializer
  %11 = fsub <2 x float> %8, %10
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %5, i64 0, i64 2
  %12 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %12, %call9.i
  %retval.sroa.3.12.vec.insert.i45.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i, i64 0
  %m_bounds.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  store <2 x float> %11, ptr %m_bounds.i, align 4, !tbaa.struct !163
  %ref.tmp12.sroa.4.0.arrayidx.sroa_idx.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 0, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i45.i, ptr %ref.tmp12.sroa.4.0.arrayidx.sroa_idx.i, align 4, !tbaa.struct !165
  %13 = load <2 x float>, ptr %mx.i.i, align 4, !tbaa !137
  %14 = fadd <2 x float> %10, %13
  %arrayidx11.i50.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %5, i64 0, i32 1, i32 0, i64 2
  %15 = load float, ptr %arrayidx11.i50.i, align 4, !tbaa !137
  %add14.i.i = fadd float %call9.i, %15
  %retval.sroa.3.12.vec.insert.i54.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i, i64 0
  %arrayidx19.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1
  store <2 x float> %14, ptr %arrayidx19.i, align 4, !tbaa.struct !163
  %ref.tmp15.sroa.4.0.arrayidx19.sroa_idx.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i54.i, ptr %ref.tmp15.sroa.4.0.arrayidx19.sroa_idx.i, align 4, !tbaa.struct !165
  %m_broadphaseHandle.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 8
  %16 = load ptr, ptr %m_broadphaseHandle.i.i, align 8, !tbaa !166
  %cmp.not.i = icmp eq ptr %16, null
  br i1 %cmp.not.i, label %_ZN10btSoftBody12updateBoundsEv.exit, label %if.then21.i

if.then21.i:                                      ; preds = %if.then.i
  %m_worldInfo.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 7
  %17 = load ptr, ptr %m_worldInfo.i, align 8, !tbaa !42
  %m_broadphase.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %17, i64 0, i32 4
  %18 = load ptr, ptr %m_broadphase.i, align 8, !tbaa !167
  %m_dispatcher.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %17, i64 0, i32 5
  %19 = load ptr, ptr %m_dispatcher.i, align 8, !tbaa !172
  %vtable28.i = load ptr, ptr %18, align 8, !tbaa !5
  %vfn29.i = getelementptr inbounds ptr, ptr %vtable28.i, i64 4
  %20 = load ptr, ptr %vfn29.i, align 8
  call void %20(ptr noundef nonnull align 8 dereferenceable(8) %18, ptr noundef nonnull %16, ptr noundef nonnull align 4 dereferenceable(16) %m_bounds.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx19.i, ptr noundef %19)
  br label %_ZN10btSoftBody12updateBoundsEv.exit

if.else.i:                                        ; preds = %for.cond.cleanup
  %m_bounds34.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %m_bounds34.i, i8 0, i64 32, i1 false)
  br label %_ZN10btSoftBody12updateBoundsEv.exit

_ZN10btSoftBody12updateBoundsEv.exit:             ; preds = %if.then.i, %if.then21.i, %if.else.i
  call void @_ZN10btSoftBody15updateConstantsEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  %m_initialWorldTransform = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_initialWorldTransform, ptr noundef nonnull align 4 dereferenceable(16) %trs, i64 16, i1 false), !tbaa.struct !163
  %arrayidx5.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %trs, i64 0, i64 1
  %arrayidx7.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26, i32 0, i32 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx7.i.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx9.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %trs, i64 0, i64 2
  %arrayidx11.i.i32 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26, i32 0, i32 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx11.i.i32, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx9.i.i, i64 16, i1 false), !tbaa.struct !163
  %m_origin.i = getelementptr inbounds %class.btTransform, ptr %trs, i64 0, i32 1
  %m_origin3.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_origin3.i, ptr noundef nonnull align 4 dereferenceable(16) %m_origin.i, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %vol) #38
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %21 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %indvars.iv, i32 1
  %22 = load float, ptr %m_x, align 4, !tbaa !137
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 1
  %23 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %24 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %25 = load <4 x float>, ptr %trs, align 4
  %26 = shufflevector <4 x float> %25, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %27 = load <4 x float>, ptr %arrayidx5.i.i.i, align 4
  %28 = shufflevector <4 x float> %27, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %29 = load <4 x float>, ptr %arrayidx10.i.i.i, align 4
  %30 = shufflevector <4 x float> %29, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %31 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %32 = load float, ptr %arrayidx5.i20.i.i, align 4, !tbaa !137
  %33 = insertelement <2 x float> poison, float %23, i64 0
  %34 = shufflevector <2 x float> %33, <2 x float> poison, <2 x i32> zeroinitializer
  %35 = insertelement <2 x float> %28, float %32, i64 1
  %36 = fmul <2 x float> %34, %35
  %37 = insertelement <2 x float> %26, float %31, i64 1
  %38 = insertelement <2 x float> poison, float %22, i64 0
  %39 = shufflevector <2 x float> %38, <2 x float> poison, <2 x i32> zeroinitializer
  %40 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %37, <2 x float> %39, <2 x float> %36)
  %41 = load float, ptr %arrayidx10.i23.i.i, align 4, !tbaa !137
  %42 = insertelement <2 x float> %30, float %41, i64 1
  %43 = insertelement <2 x float> poison, float %24, i64 0
  %44 = shufflevector <2 x float> %43, <2 x float> poison, <2 x i32> zeroinitializer
  %45 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %42, <2 x float> %44, <2 x float> %40)
  %46 = load <2 x float>, ptr %m_origin.i.i, align 4, !tbaa !137
  %47 = fadd <2 x float> %45, %46
  %48 = load float, ptr %arrayidx.i26.i.i, align 4, !tbaa !137
  %49 = load float, ptr %arrayidx5.i27.i.i, align 4, !tbaa !137
  %mul8.i29.i.i = fmul float %23, %49
  %50 = call float @llvm.fmuladd.f32(float %48, float %22, float %mul8.i29.i.i)
  %51 = load float, ptr %arrayidx10.i30.i.i, align 4, !tbaa !137
  %52 = call float @llvm.fmuladd.f32(float %51, float %24, float %50)
  %53 = load float, ptr %arrayidx.i32.i.i, align 4, !tbaa !137
  %add17.i.i = fadd float %53, %52
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add17.i.i, i64 0
  store <2 x float> %47, ptr %m_x, align 8, !tbaa.struct !163
  %ref.tmp.sroa.4.0.m_x7.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %indvars.iv, i32 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i, ptr %ref.tmp.sroa.4.0.m_x7.sroa_idx, align 8, !tbaa.struct !165
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %indvars.iv, i32 2
  %54 = load float, ptr %m_q, align 4, !tbaa !137
  %arrayidx7.i.i.i35 = getelementptr inbounds [4 x float], ptr %m_q, i64 0, i64 1
  %55 = load float, ptr %arrayidx7.i.i.i35, align 4, !tbaa !137
  %arrayidx12.i.i.i38 = getelementptr inbounds [4 x float], ptr %m_q, i64 0, i64 2
  %56 = load float, ptr %arrayidx12.i.i.i38, align 4, !tbaa !137
  %57 = load <4 x float>, ptr %trs, align 4
  %58 = shufflevector <4 x float> %57, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %59 = load <4 x float>, ptr %arrayidx5.i.i.i, align 4
  %60 = shufflevector <4 x float> %59, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %61 = load <4 x float>, ptr %arrayidx10.i.i.i, align 4
  %62 = shufflevector <4 x float> %61, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %63 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %64 = load float, ptr %arrayidx5.i20.i.i, align 4, !tbaa !137
  %65 = insertelement <2 x float> poison, float %55, i64 0
  %66 = shufflevector <2 x float> %65, <2 x float> poison, <2 x i32> zeroinitializer
  %67 = insertelement <2 x float> %60, float %64, i64 1
  %68 = fmul <2 x float> %66, %67
  %69 = insertelement <2 x float> %58, float %63, i64 1
  %70 = insertelement <2 x float> poison, float %54, i64 0
  %71 = shufflevector <2 x float> %70, <2 x float> poison, <2 x i32> zeroinitializer
  %72 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %69, <2 x float> %71, <2 x float> %68)
  %73 = load float, ptr %arrayidx10.i23.i.i, align 4, !tbaa !137
  %74 = insertelement <2 x float> %62, float %73, i64 1
  %75 = insertelement <2 x float> poison, float %56, i64 0
  %76 = shufflevector <2 x float> %75, <2 x float> poison, <2 x i32> zeroinitializer
  %77 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %74, <2 x float> %76, <2 x float> %72)
  %78 = load <2 x float>, ptr %m_origin.i.i, align 4, !tbaa !137
  %79 = fadd <2 x float> %77, %78
  %80 = load float, ptr %arrayidx.i26.i.i, align 4, !tbaa !137
  %81 = load float, ptr %arrayidx5.i27.i.i, align 4, !tbaa !137
  %mul8.i29.i.i49 = fmul float %55, %81
  %82 = call float @llvm.fmuladd.f32(float %80, float %54, float %mul8.i29.i.i49)
  %83 = load float, ptr %arrayidx10.i30.i.i, align 4, !tbaa !137
  %84 = call float @llvm.fmuladd.f32(float %83, float %56, float %82)
  %85 = load float, ptr %arrayidx.i32.i.i, align 4, !tbaa !137
  %add17.i.i52 = fadd float %85, %84
  %retval.sroa.3.12.vec.insert.i.i55 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add17.i.i52, i64 0
  store <2 x float> %79, ptr %m_q, align 8, !tbaa.struct !163
  %ref.tmp8.sroa.4.0.m_q11.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %indvars.iv, i32 2, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i55, ptr %ref.tmp8.sroa.4.0.m_q11.sroa_idx, align 8, !tbaa.struct !165
  %m_n = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %indvars.iv, i32 5
  %86 = load float, ptr %m_n, align 4, !tbaa !137
  %arrayidx7.i.i59 = getelementptr inbounds [4 x float], ptr %m_n, i64 0, i64 1
  %87 = load float, ptr %arrayidx7.i.i59, align 4, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds [4 x float], ptr %m_n, i64 0, i64 2
  %88 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %89 = load <4 x float>, ptr %trs, align 4
  %90 = shufflevector <4 x float> %89, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %91 = load <4 x float>, ptr %arrayidx5.i.i.i, align 4
  %92 = shufflevector <4 x float> %91, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %93 = load <4 x float>, ptr %arrayidx10.i.i.i, align 4
  %94 = shufflevector <4 x float> %93, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %95 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %96 = load float, ptr %arrayidx5.i20.i.i, align 4, !tbaa !137
  %97 = insertelement <2 x float> poison, float %87, i64 0
  %98 = shufflevector <2 x float> %97, <2 x float> poison, <2 x i32> zeroinitializer
  %99 = insertelement <2 x float> %92, float %96, i64 1
  %100 = fmul <2 x float> %98, %99
  %101 = insertelement <2 x float> %90, float %95, i64 1
  %102 = insertelement <2 x float> poison, float %86, i64 0
  %103 = shufflevector <2 x float> %102, <2 x float> poison, <2 x i32> zeroinitializer
  %104 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %101, <2 x float> %103, <2 x float> %100)
  %105 = load float, ptr %arrayidx10.i23.i.i, align 4, !tbaa !137
  %106 = insertelement <2 x float> %94, float %105, i64 1
  %107 = insertelement <2 x float> poison, float %88, i64 0
  %108 = shufflevector <2 x float> %107, <2 x float> poison, <2 x i32> zeroinitializer
  %109 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %106, <2 x float> %108, <2 x float> %104)
  %110 = load float, ptr %arrayidx.i26.i.i, align 4, !tbaa !137
  %111 = load float, ptr %arrayidx5.i27.i.i, align 4, !tbaa !137
  %mul8.i20.i = fmul float %87, %111
  %112 = call float @llvm.fmuladd.f32(float %110, float %86, float %mul8.i20.i)
  %113 = load float, ptr %arrayidx10.i30.i.i, align 4, !tbaa !137
  %114 = call float @llvm.fmuladd.f32(float %113, float %88, float %112)
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %114, i64 0
  store <2 x float> %109, ptr %m_n, align 8, !tbaa.struct !163
  %ref.tmp12.sroa.4.0.m_n16.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %indvars.iv, i32 5, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %ref.tmp12.sroa.4.0.m_n16.sroa_idx, align 8, !tbaa.struct !165
  %115 = fsub <2 x float> %47, %4
  %sub14.i.i.i = fsub float %add17.i.i, %call2
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i.i, i64 0
  %116 = fadd <2 x float> %4, %47
  %add14.i.i.i = fadd float %call2, %add17.i.i
  %retval.sroa.3.12.vec.insert.i12.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i.i, i64 0
  store <2 x float> %115, ptr %vol, align 8, !tbaa.struct !297
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i, ptr %ref.tmp17.sroa.4.0.vol.sroa_idx, align 8, !tbaa.struct !298
  store <2 x float> %116, ptr %ref.tmp17.sroa.5.0.vol.sroa_idx, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i12.i.i, ptr %ref.tmp17.sroa.6.0.vol.sroa_idx, align 8, !tbaa.struct !165
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %indvars.iv, i32 8
  %117 = load ptr, ptr %m_leaf, align 8, !tbaa !183
  call void @_ZN6btDbvt6updateEP10btDbvtNodeR12btDbvtAabbMm(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt, ptr noundef %117, ptr noundef nonnull align 4 dereferenceable(32) %vol)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

declare void @_ZN6btDbvt6updateEP10btDbvtNodeR12btDbvtAabbMm(ptr noundef nonnull align 8 dereferenceable(64), ptr noundef, ptr noundef nonnull align 4 dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody13updateNormalsEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #16 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp143 = icmp sgt i32 %0, 0
  br i1 %cmp143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %wide.trip.count = zext i32 %0 to i64
  %xtraiter = and i64 %wide.trip.count, 3
  %1 = icmp ult i32 %0, 4
  br i1 %1, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967292
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
  %2 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_n = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv, i32 5
  %indvars.iv.next = or i64 %indvars.iv, 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_n, i8 0, i64 16, i1 false)
  %3 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_n.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 %indvars.iv.next, i32 5
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_n.1, i8 0, i64 16, i1 false)
  %4 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_n.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 %indvars.iv.next.1, i32 5
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_n.2, i8 0, i64 16, i1 false)
  %5 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_n.3 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 %indvars.iv.next.2, i32 5
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_n.3, i8 0, i64 16, i1 false)
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
  %6 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_n.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 %indvars.iv.epil, i32 5
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_n.epil, i8 0, i64 16, i1 false)
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !llvm.loop !299

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %entry
  %m_size.i82 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %7 = load i32, ptr %m_size.i82, align 4, !tbaa !96
  %cmp8145 = icmp sgt i32 %7, 0
  br i1 %cmp8145, label %for.body9.lr.ph, label %for.end46

for.body9.lr.ph:                                  ; preds = %for.end
  %m_data.i83 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %wide.trip.count153 = zext i32 %7 to i64
  br label %for.body9

for.body9:                                        ; preds = %for.body9.lr.ph, %for.body9
  %indvars.iv150 = phi i64 [ 0, %for.body9.lr.ph ], [ %indvars.iv.next151, %for.body9 ]
  %8 = load ptr, ptr %m_data.i83, align 8, !tbaa !95
  %m_n13 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %8, i64 %indvars.iv150, i32 1
  %arrayidx = getelementptr inbounds %"struct.btSoftBody::Face", ptr %8, i64 %indvars.iv150, i32 1, i64 1
  %9 = load ptr, ptr %arrayidx, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %9, i64 0, i32 1
  %10 = load ptr, ptr %m_n13, align 8, !tbaa !219
  %m_x16 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %10, i64 0, i32 1
  %11 = load float, ptr %m_x, align 4, !tbaa !137
  %12 = load float, ptr %m_x16, align 4, !tbaa !137
  %sub.i = fsub float %11, %12
  %arrayidx5.i86 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %9, i64 0, i32 1, i32 0, i64 1
  %arrayidx7.i87 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %10, i64 0, i32 1, i32 0, i64 1
  %arrayidx20 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %8, i64 %indvars.iv150, i32 1, i64 2
  %13 = load ptr, ptr %arrayidx20, align 8, !tbaa !219
  %m_x21 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 0, i32 1
  %arrayidx5.i89 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 0, i32 1, i32 0, i64 1
  %14 = load float, ptr %arrayidx5.i89, align 4, !tbaa !137
  %arrayidx11.i92 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 0, i32 1, i32 0, i64 2
  %m_normal = getelementptr inbounds %"struct.btSoftBody::Face", ptr %8, i64 %indvars.iv150, i32 2
  %ref.tmp29.sroa.4.0.m_normal.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Face", ptr %8, i64 %indvars.iv150, i32 2, i32 0, i64 2
  %m_n34 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %10, i64 0, i32 5
  %15 = load <2 x float>, ptr %arrayidx5.i86, align 4, !tbaa !137
  %16 = load <2 x float>, ptr %arrayidx7.i87, align 4, !tbaa !137
  %17 = fsub <2 x float> %15, %16
  %18 = load float, ptr %m_x21, align 4, !tbaa !137
  %19 = extractelement <2 x float> %16, i64 0
  %sub8.i91 = fsub float %14, %19
  %20 = load float, ptr %arrayidx11.i92, align 4, !tbaa !137
  %21 = insertelement <2 x float> poison, float %18, i64 0
  %22 = insertelement <2 x float> %21, float %20, i64 1
  %23 = insertelement <2 x float> %16, float %12, i64 0
  %24 = fsub <2 x float> %22, %23
  %25 = shufflevector <2 x float> %24, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %26 = shufflevector <2 x float> %17, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %27 = insertelement <2 x float> %26, float %sub.i, i64 1
  %28 = fneg <2 x float> %27
  %29 = insertelement <2 x float> %24, float %sub8.i91, i64 0
  %30 = fmul <2 x float> %29, %28
  %31 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %17, <2 x float> %25, <2 x float> %30)
  %32 = extractelement <2 x float> %17, i64 0
  %33 = fneg float %32
  %34 = extractelement <2 x float> %24, i64 0
  %neg30.i.i = fmul float %34, %33
  %35 = tail call float @llvm.fmuladd.f32(float %sub.i, float %sub8.i91, float %neg30.i.i)
  %36 = fmul <2 x float> %31, %31
  %mul8.i.i.i.i = extractelement <2 x float> %36, i64 1
  %37 = extractelement <2 x float> %31, i64 0
  %38 = tail call float @llvm.fmuladd.f32(float %37, float %37, float %mul8.i.i.i.i)
  %39 = tail call float @llvm.fmuladd.f32(float %35, float %35, float %38)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %39)
  %div.i.i = fdiv float 1.000000e+00, %sqrt.i.i
  %40 = insertelement <2 x float> poison, float %div.i.i, i64 0
  %41 = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> zeroinitializer
  %42 = fmul <2 x float> %31, %41
  %mul8.i.i.i = fmul float %35, %div.i.i
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i.i, i64 0
  store <2 x float> %42, ptr %m_normal, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i, ptr %ref.tmp29.sroa.4.0.m_normal.sroa_idx, align 8, !tbaa.struct !165
  %43 = load <2 x float>, ptr %m_n34, align 4, !tbaa !137
  %44 = fadd <2 x float> %31, %43
  store <2 x float> %44, ptr %m_n34, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %10, i64 0, i32 5, i32 0, i64 2
  %45 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %35, %45
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %m_n38 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %9, i64 0, i32 5
  %46 = load <2 x float>, ptr %m_n38, align 4, !tbaa !137
  %47 = fadd <2 x float> %31, %46
  store <2 x float> %47, ptr %m_n38, align 4, !tbaa !137
  %arrayidx12.i107 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %9, i64 0, i32 5, i32 0, i64 2
  %48 = load float, ptr %arrayidx12.i107, align 4, !tbaa !137
  %add13.i108 = fadd float %35, %48
  store float %add13.i108, ptr %arrayidx12.i107, align 4, !tbaa !137
  %m_n42 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 0, i32 5
  %49 = load <2 x float>, ptr %m_n42, align 4, !tbaa !137
  %50 = fadd <2 x float> %31, %49
  store <2 x float> %50, ptr %m_n42, align 4, !tbaa !137
  %arrayidx12.i114 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 0, i32 5, i32 0, i64 2
  %51 = load float, ptr %arrayidx12.i114, align 4, !tbaa !137
  %add13.i115 = fadd float %35, %51
  store float %add13.i115, ptr %arrayidx12.i114, align 4, !tbaa !137
  %indvars.iv.next151 = add nuw nsw i64 %indvars.iv150, 1
  %exitcond154.not = icmp eq i64 %indvars.iv.next151, %wide.trip.count153
  br i1 %exitcond154.not, label %for.end46, label %for.body9

for.end46:                                        ; preds = %for.body9, %for.end
  %52 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp50147 = icmp sgt i32 %52, 0
  br i1 %cmp50147, label %for.body51.lr.ph, label %for.end63

for.body51.lr.ph:                                 ; preds = %for.end46
  %m_data.i117 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %53 = load ptr, ptr %m_data.i117, align 8, !tbaa !87
  %wide.trip.count158 = zext i32 %52 to i64
  br label %for.body51

for.body51:                                       ; preds = %for.body51.lr.ph, %if.end
  %indvars.iv155 = phi i64 [ 0, %for.body51.lr.ph ], [ %indvars.iv.next156, %if.end ]
  %m_n54 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %53, i64 %indvars.iv155, i32 5
  %54 = load <2 x float>, ptr %m_n54, align 4, !tbaa !137
  %55 = fmul <2 x float> %54, %54
  %mul8.i.i.i120 = extractelement <2 x float> %55, i64 1
  %56 = extractelement <2 x float> %54, i64 0
  %57 = tail call float @llvm.fmuladd.f32(float %56, float %56, float %mul8.i.i.i120)
  %arrayidx10.i.i.i = getelementptr inbounds [4 x float], ptr %m_n54, i64 0, i64 2
  %58 = load float, ptr %arrayidx10.i.i.i, align 4, !tbaa !137
  %59 = tail call float @llvm.fmuladd.f32(float %58, float %58, float %57)
  %sqrt.i = tail call float @llvm.sqrt.f32(float %59)
  %cmp56 = fcmp ogt float %sqrt.i, 0x3E80000000000000
  br i1 %cmp56, label %if.then, label %if.end

if.then:                                          ; preds = %for.body51
  %div.i = fdiv float 1.000000e+00, %sqrt.i
  %60 = insertelement <2 x float> poison, float %div.i, i64 0
  %61 = shufflevector <2 x float> %60, <2 x float> poison, <2 x i32> zeroinitializer
  %62 = fmul <2 x float> %54, %61
  store <2 x float> %62, ptr %m_n54, align 4, !tbaa !137
  %mul7.i.i = fmul float %58, %div.i
  store float %mul7.i.i, ptr %arrayidx10.i.i.i, align 4, !tbaa !137
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body51
  %indvars.iv.next156 = add nuw nsw i64 %indvars.iv155, 1
  %exitcond159.not = icmp eq i64 %indvars.iv.next156, %wide.trip.count158
  br i1 %exitcond159.not, label %for.end63, label %for.body51

for.end63:                                        ; preds = %if.end, %for.end46
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody15updateConstantsEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !92
  %cmp216 = icmp sgt i32 %0, 0
  br i1 %cmp216, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !91
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %m_material = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 0, i32 1
  %2 = load ptr, ptr %m_material, align 8, !tbaa !184
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 1
  %3 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1
  %arrayidx5 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 1, i64 1
  %4 = load ptr, ptr %arrayidx5, align 8, !tbaa !219
  %m_x6 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1
  %5 = load float, ptr %m_x, align 4, !tbaa !137
  %6 = load float, ptr %m_x6, align 4, !tbaa !137
  %sub.i = fsub float %5, %6
  %arrayidx5.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1, i32 0, i64 1
  %7 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 1
  %8 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %sub8.i = fsub float %7, %8
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1, i32 0, i64 2
  %9 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 2
  %10 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %9, %10
  %mul8.i.i.i = fmul float %sub8.i, %sub8.i
  %11 = tail call float @llvm.fmuladd.f32(float %sub.i, float %sub.i, float %mul8.i.i.i)
  %12 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub14.i, float %11)
  %sqrt.i = tail call float @llvm.sqrt.f32(float %12)
  %m_rl = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 2
  store float %sqrt.i, ptr %m_rl, align 8, !tbaa !239
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 6
  %13 = load float, ptr %m_im, align 8, !tbaa !175
  %m_im13 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 6
  %14 = load float, ptr %m_im13, align 8, !tbaa !175
  %add = fadd float %13, %14
  %m_kLST = getelementptr inbounds %"struct.btSoftBody::Material", ptr %2, i64 0, i32 1
  %15 = load float, ptr %m_kLST, align 8, !tbaa !300
  %div = fdiv float %add, %15
  %m_c0 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 5
  store float %div, ptr %m_c0, align 8, !tbaa !301
  %mul = fmul float %sqrt.i, %sqrt.i
  %m_c1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 6
  store float %mul, ptr %m_c1, align 4, !tbaa !302
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %m_size.i156 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %16 = load i32, ptr %m_size.i156, align 4, !tbaa !96
  %cmp18218 = icmp sgt i32 %16, 0
  br i1 %cmp18218, label %for.body19.lr.ph, label %for.end34

for.body19.lr.ph:                                 ; preds = %for.end
  %m_data.i157 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %17 = load ptr, ptr %m_data.i157, align 8, !tbaa !95
  %wide.trip.count231 = zext i32 %16 to i64
  br label %for.body19

for.body19:                                       ; preds = %for.body19.lr.ph, %for.body19
  %indvars.iv228 = phi i64 [ 0, %for.body19.lr.ph ], [ %indvars.iv.next229, %for.body19 ]
  %m_n22 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %17, i64 %indvars.iv228, i32 1
  %18 = load ptr, ptr %m_n22, align 8, !tbaa !219
  %m_x24 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 0, i32 1
  %arrayidx26 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %17, i64 %indvars.iv228, i32 1, i64 1
  %19 = load ptr, ptr %arrayidx26, align 8, !tbaa !219
  %m_x27 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 0, i32 1
  %arrayidx29 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %17, i64 %indvars.iv228, i32 1, i64 2
  %20 = load ptr, ptr %arrayidx29, align 8, !tbaa !219
  %m_x30 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %20, i64 0, i32 1
  %21 = load float, ptr %m_x27, align 4, !tbaa !137
  %22 = load float, ptr %m_x24, align 4, !tbaa !137
  %sub.i.i = fsub float %21, %22
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 0, i32 1, i32 0, i64 1
  %23 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 0, i32 1, i32 0, i64 1
  %24 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %sub8.i.i = fsub float %23, %24
  %arrayidx11.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 0, i32 1, i32 0, i64 2
  %25 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %arrayidx13.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 0, i32 1, i32 0, i64 2
  %26 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %25, %26
  %27 = load float, ptr %m_x30, align 4, !tbaa !137
  %sub.i7.i = fsub float %27, %22
  %arrayidx5.i8.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %20, i64 0, i32 1, i32 0, i64 1
  %28 = load float, ptr %arrayidx5.i8.i, align 4, !tbaa !137
  %sub8.i10.i = fsub float %28, %24
  %arrayidx11.i11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %20, i64 0, i32 1, i32 0, i64 2
  %29 = load float, ptr %arrayidx11.i11.i, align 4, !tbaa !137
  %sub14.i13.i = fsub float %29, %26
  %30 = fneg float %sub14.i.i
  %neg.i.i.i = fmul float %sub8.i10.i, %30
  %31 = tail call float @llvm.fmuladd.f32(float %sub8.i.i, float %sub14.i13.i, float %neg.i.i.i)
  %32 = fneg float %sub.i.i
  %neg19.i.i.i = fmul float %sub14.i13.i, %32
  %33 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %sub.i7.i, float %neg19.i.i.i)
  %34 = fneg float %sub8.i.i
  %neg30.i.i.i = fmul float %sub.i7.i, %34
  %35 = tail call float @llvm.fmuladd.f32(float %sub.i.i, float %sub8.i10.i, float %neg30.i.i.i)
  %mul8.i.i.i.i = fmul float %33, %33
  %36 = tail call float @llvm.fmuladd.f32(float %31, float %31, float %mul8.i.i.i.i)
  %37 = tail call float @llvm.fmuladd.f32(float %35, float %35, float %36)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %37)
  %m_ra = getelementptr inbounds %"struct.btSoftBody::Face", ptr %17, i64 %indvars.iv228, i32 3
  store float %sqrt.i.i, ptr %m_ra, align 8, !tbaa !241
  %indvars.iv.next229 = add nuw nsw i64 %indvars.iv228, 1
  %exitcond232.not = icmp eq i64 %indvars.iv.next229, %wide.trip.count231
  br i1 %exitcond232.not, label %for.end34, label %for.body19

for.end34:                                        ; preds = %for.body19, %for.end
  %m_size.i160 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %38 = load i32, ptr %m_size.i160, align 4, !tbaa !88
  %or.cond = icmp sgt i32 %38, 0
  br i1 %or.cond, label %invoke.cont38, label %for.end50

invoke.cont38:                                    ; preds = %for.end34
  %conv.i.i.i.i = zext i32 %38 to i64
  %mul.i.i.i.i = shl nuw nsw i64 %conv.i.i.i.i, 2
  %call.i.i.i.i164 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  tail call void @llvm.memset.p0.i64(ptr align 4 %call.i.i.i.i164, i8 0, i64 %mul.i.i.i.i, i1 false), !tbaa !140
  %.pre = load i32, ptr %m_size.i160, align 4, !tbaa !88
  %cmp43220 = icmp sgt i32 %.pre, 0
  br i1 %cmp43220, label %for.body44.lr.ph, label %for.end50

for.body44.lr.ph:                                 ; preds = %invoke.cont38
  %m_data.i166 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %39 = load ptr, ptr %m_data.i166, align 8, !tbaa !87
  %wide.trip.count236 = zext i32 %.pre to i64
  %xtraiter = and i64 %wide.trip.count236, 3
  %40 = icmp ult i32 %.pre, 4
  br i1 %40, label %for.end50.loopexit.unr-lcssa, label %for.body44.lr.ph.new

for.body44.lr.ph.new:                             ; preds = %for.body44.lr.ph
  %unroll_iter = and i64 %wide.trip.count236, 4294967292
  br label %for.body44

for.body44:                                       ; preds = %for.body44, %for.body44.lr.ph.new
  %indvars.iv233 = phi i64 [ 0, %for.body44.lr.ph.new ], [ %indvars.iv.next234.3, %for.body44 ]
  %niter = phi i64 [ 0, %for.body44.lr.ph.new ], [ %niter.next.3, %for.body44 ]
  %m_area = getelementptr inbounds %"struct.btSoftBody::Node", ptr %39, i64 %indvars.iv233, i32 7
  store float 0.000000e+00, ptr %m_area, align 4, !tbaa !303
  %indvars.iv.next234 = or i64 %indvars.iv233, 1
  %m_area.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %39, i64 %indvars.iv.next234, i32 7
  store float 0.000000e+00, ptr %m_area.1, align 4, !tbaa !303
  %indvars.iv.next234.1 = or i64 %indvars.iv233, 2
  %m_area.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %39, i64 %indvars.iv.next234.1, i32 7
  store float 0.000000e+00, ptr %m_area.2, align 4, !tbaa !303
  %indvars.iv.next234.2 = or i64 %indvars.iv233, 3
  %m_area.3 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %39, i64 %indvars.iv.next234.2, i32 7
  store float 0.000000e+00, ptr %m_area.3, align 4, !tbaa !303
  %indvars.iv.next234.3 = add nuw nsw i64 %indvars.iv233, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.end50.loopexit.unr-lcssa, label %for.body44

for.end50.loopexit.unr-lcssa:                     ; preds = %for.body44, %for.body44.lr.ph
  %indvars.iv233.unr = phi i64 [ 0, %for.body44.lr.ph ], [ %indvars.iv.next234.3, %for.body44 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end50, label %for.body44.epil

for.body44.epil:                                  ; preds = %for.end50.loopexit.unr-lcssa, %for.body44.epil
  %indvars.iv233.epil = phi i64 [ %indvars.iv.next234.epil, %for.body44.epil ], [ %indvars.iv233.unr, %for.end50.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body44.epil ], [ 0, %for.end50.loopexit.unr-lcssa ]
  %m_area.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %39, i64 %indvars.iv233.epil, i32 7
  store float 0.000000e+00, ptr %m_area.epil, align 4, !tbaa !303
  %indvars.iv.next234.epil = add nuw nsw i64 %indvars.iv233.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.end50, label %for.body44.epil, !llvm.loop !304

for.end50:                                        ; preds = %for.end50.loopexit.unr-lcssa, %for.body44.epil, %for.end34, %invoke.cont38
  %counts.sroa.15207.1255 = phi ptr [ %call.i.i.i.i164, %invoke.cont38 ], [ null, %for.end34 ], [ %call.i.i.i.i164, %for.body44.epil ], [ %call.i.i.i.i164, %for.end50.loopexit.unr-lcssa ]
  %41 = phi i32 [ %.pre, %invoke.cont38 ], [ %38, %for.end34 ], [ %.pre, %for.body44.epil ], [ %.pre, %for.end50.loopexit.unr-lcssa ]
  %42 = load i32, ptr %m_size.i156, align 4, !tbaa !96
  %cmp55223 = icmp sgt i32 %42, 0
  br i1 %cmp55223, label %for.body56.lr.ph, label %for.end87

for.body56.lr.ph:                                 ; preds = %for.end50
  %m_data.i177 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %43 = load ptr, ptr %m_data.i177, align 8, !tbaa !95
  %m_data.i180 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %44 = load ptr, ptr %m_data.i180, align 8, !tbaa !87
  %sub.ptr.rhs.cast = ptrtoint ptr %44 to i64
  %wide.trip.count245 = zext i32 %42 to i64
  br label %for.body56

for.body56:                                       ; preds = %for.body56.lr.ph, %for.body56
  %indvars.iv242 = phi i64 [ 0, %for.body56.lr.ph ], [ %indvars.iv.next243, %for.body56 ]
  %m_ra74 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %43, i64 %indvars.iv242, i32 3
  %45 = load float, ptr %m_ra74, align 8, !tbaa !241
  %46 = tail call float @llvm.fabs.f32(float %45)
  %arrayidx66 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %43, i64 %indvars.iv242, i32 1, i64 0
  %47 = load ptr, ptr %arrayidx66, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %47 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 120
  %sext = shl i64 %sub.ptr.div, 32
  %idxprom.i182 = ashr exact i64 %sext, 32
  %arrayidx.i183 = getelementptr inbounds i32, ptr %counts.sroa.15207.1255, i64 %idxprom.i182
  %48 = load i32, ptr %arrayidx.i183, align 4, !tbaa !140
  %inc73 = add nsw i32 %48, 1
  store i32 %inc73, ptr %arrayidx.i183, align 4, !tbaa !140
  %m_area80 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %47, i64 0, i32 7
  %49 = load float, ptr %m_area80, align 4, !tbaa !303
  %add81 = fadd float %49, %46
  store float %add81, ptr %m_area80, align 4, !tbaa !303
  %arrayidx66.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %43, i64 %indvars.iv242, i32 1, i64 1
  %50 = load ptr, ptr %arrayidx66.1, align 8, !tbaa !219
  %sub.ptr.lhs.cast.1 = ptrtoint ptr %50 to i64
  %sub.ptr.sub.1 = sub i64 %sub.ptr.lhs.cast.1, %sub.ptr.rhs.cast
  %sub.ptr.div.1 = sdiv exact i64 %sub.ptr.sub.1, 120
  %sext.1 = shl i64 %sub.ptr.div.1, 32
  %idxprom.i182.1 = ashr exact i64 %sext.1, 32
  %arrayidx.i183.1 = getelementptr inbounds i32, ptr %counts.sroa.15207.1255, i64 %idxprom.i182.1
  %51 = load i32, ptr %arrayidx.i183.1, align 4, !tbaa !140
  %inc73.1 = add nsw i32 %51, 1
  store i32 %inc73.1, ptr %arrayidx.i183.1, align 4, !tbaa !140
  %m_area80.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %50, i64 0, i32 7
  %52 = load float, ptr %m_area80.1, align 4, !tbaa !303
  %add81.1 = fadd float %52, %46
  store float %add81.1, ptr %m_area80.1, align 4, !tbaa !303
  %arrayidx66.2 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %43, i64 %indvars.iv242, i32 1, i64 2
  %53 = load ptr, ptr %arrayidx66.2, align 8, !tbaa !219
  %sub.ptr.lhs.cast.2 = ptrtoint ptr %53 to i64
  %sub.ptr.sub.2 = sub i64 %sub.ptr.lhs.cast.2, %sub.ptr.rhs.cast
  %sub.ptr.div.2 = sdiv exact i64 %sub.ptr.sub.2, 120
  %sext.2 = shl i64 %sub.ptr.div.2, 32
  %idxprom.i182.2 = ashr exact i64 %sext.2, 32
  %arrayidx.i183.2 = getelementptr inbounds i32, ptr %counts.sroa.15207.1255, i64 %idxprom.i182.2
  %54 = load i32, ptr %arrayidx.i183.2, align 4, !tbaa !140
  %inc73.2 = add nsw i32 %54, 1
  store i32 %inc73.2, ptr %arrayidx.i183.2, align 4, !tbaa !140
  %m_area80.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %53, i64 0, i32 7
  %55 = load float, ptr %m_area80.2, align 4, !tbaa !303
  %add81.2 = fadd float %55, %46
  store float %add81.2, ptr %m_area80.2, align 4, !tbaa !303
  %indvars.iv.next243 = add nuw nsw i64 %indvars.iv242, 1
  %exitcond246.not = icmp eq i64 %indvars.iv.next243, %wide.trip.count245
  br i1 %exitcond246.not, label %for.end87.loopexit, label %for.body56

for.end87.loopexit:                               ; preds = %for.body56
  %.pre252 = load i32, ptr %m_size.i160, align 4, !tbaa !88
  br label %for.end87

for.end87:                                        ; preds = %for.end87.loopexit, %for.end50
  %56 = phi i32 [ %.pre252, %for.end87.loopexit ], [ %41, %for.end50 ]
  %cmp92225 = icmp sgt i32 %56, 0
  br i1 %cmp92225, label %for.body93.lr.ph, label %for.end111

for.body93.lr.ph:                                 ; preds = %for.end87
  %m_data.i194 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %57 = load ptr, ptr %m_data.i194, align 8
  %wide.trip.count250 = zext i32 %56 to i64
  br label %for.body93

for.body93:                                       ; preds = %for.body93.lr.ph, %for.inc109
  %indvars.iv247 = phi i64 [ 0, %for.body93.lr.ph ], [ %indvars.iv.next248, %for.inc109 ]
  %arrayidx.i187 = getelementptr inbounds i32, ptr %counts.sroa.15207.1255, i64 %indvars.iv247
  %58 = load i32, ptr %arrayidx.i187, align 4, !tbaa !140
  %cmp96 = icmp sgt i32 %58, 0
  br i1 %cmp96, label %if.then, label %if.else

if.then:                                          ; preds = %for.body93
  %conv99 = sitofp i32 %58 to float
  %m_area103 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %57, i64 %indvars.iv247, i32 7
  %59 = load float, ptr %m_area103, align 4, !tbaa !303
  %div104 = fdiv float %59, %conv99
  store float %div104, ptr %m_area103, align 4, !tbaa !303
  br label %for.inc109

if.else:                                          ; preds = %for.body93
  %m_area108 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %57, i64 %indvars.iv247, i32 7
  store float 0.000000e+00, ptr %m_area108, align 4, !tbaa !303
  br label %for.inc109

for.inc109:                                       ; preds = %if.then, %if.else
  %indvars.iv.next248 = add nuw nsw i64 %indvars.iv247, 1
  %exitcond251.not = icmp eq i64 %indvars.iv.next248, %wide.trip.count250
  br i1 %exitcond251.not, label %if.then3.i.i.i202, label %for.body93

for.end111:                                       ; preds = %for.end87
  %tobool.not.i.i.i198 = icmp eq ptr %counts.sroa.15207.1255, null
  br i1 %tobool.not.i.i.i198, label %_ZN20btAlignedObjectArrayIiED2Ev.exit205, label %if.then3.i.i.i202

if.then3.i.i.i202:                                ; preds = %for.inc109, %for.end111
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %counts.sroa.15207.1255)
  br label %_ZN20btAlignedObjectArrayIiED2Ev.exit205

_ZN20btAlignedObjectArrayIiED2Ev.exit205:         ; preds = %for.end111, %if.then3.i.i.i202
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody9translateERK9btVector3(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %trs) local_unnamed_addr #4 align 2 {
entry:
  %t = alloca %class.btTransform, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %t) #38
  store float 1.000000e+00, ptr %t, align 4, !tbaa !137
  %arrayidx3.i.i.i.i = getelementptr inbounds [4 x float], ptr %t, i64 0, i64 1
  %arrayidx3.i6.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 1, i32 0, i64 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i.i, align 4, !tbaa !137
  %arrayidx5.i7.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 2, i32 0, i64 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i7.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i.i, align 4, !tbaa !137
  %arrayidx7.i11.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 2, i32 0, i64 3
  store i32 0, ptr %arrayidx7.i11.i.i.i, align 4
  %m_origin.i = getelementptr inbounds %class.btTransform, ptr %t, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %m_origin.i, ptr noundef nonnull align 4 dereferenceable(16) %trs, i64 16, i1 false), !tbaa.struct !163
  call void @_ZN10btSoftBody9transformERK11btTransform(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(64) %t)
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %t) #38
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6rotateERK12btQuaternion(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %rot) local_unnamed_addr #4 align 2 {
entry:
  %t = alloca %class.btTransform, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %t) #38
  %arrayidx3.i.i.i.i = getelementptr inbounds [4 x float], ptr %t, i64 0, i64 1
  %arrayidx3.i6.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 1, i32 0, i64 1
  %arrayidx5.i7.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 2, i32 0, i64 2
  %arrayidx7.i11.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 2, i32 0, i64 3
  %0 = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %0, i8 0, i64 16, i1 false)
  %1 = load float, ptr %rot, align 4, !tbaa !137
  %arrayidx3.i.i.i.i2 = getelementptr inbounds [4 x float], ptr %rot, i64 0, i64 1
  %2 = load float, ptr %arrayidx3.i.i.i.i2, align 4, !tbaa !137
  %mul5.i.i.i.i = fmul float %2, %2
  %3 = tail call float @llvm.fmuladd.f32(float %1, float %1, float %mul5.i.i.i.i)
  %arrayidx7.i.i.i.i = getelementptr inbounds [4 x float], ptr %rot, i64 0, i64 2
  %4 = load float, ptr %arrayidx7.i.i.i.i, align 4, !tbaa !137
  %5 = tail call float @llvm.fmuladd.f32(float %4, float %4, float %3)
  %arrayidx10.i.i.i.i = getelementptr inbounds [4 x float], ptr %rot, i64 0, i64 3
  %6 = load float, ptr %arrayidx10.i.i.i.i, align 4, !tbaa !137
  %7 = tail call float @llvm.fmuladd.f32(float %6, float %6, float %5)
  %div.i.i = fdiv float 2.000000e+00, %7
  %mul.i.i = fmul float %1, %div.i.i
  %mul4.i.i = fmul float %2, %div.i.i
  %mul6.i.i = fmul float %4, %div.i.i
  %mul8.i.i = fmul float %6, %mul.i.i
  %mul10.i.i = fmul float %6, %mul4.i.i
  %mul12.i.i = fmul float %6, %mul6.i.i
  %mul14.i.i = fmul float %1, %mul.i.i
  %mul16.i.i = fmul float %1, %mul4.i.i
  %mul18.i.i = fmul float %1, %mul6.i.i
  %mul20.i.i = fmul float %2, %mul4.i.i
  %mul22.i.i = fmul float %2, %mul6.i.i
  %mul24.i.i = fmul float %4, %mul6.i.i
  %add.i.i = fadd float %mul20.i.i, %mul24.i.i
  %sub.i.i = fsub float 1.000000e+00, %add.i.i
  %sub26.i.i = fsub float %mul16.i.i, %mul12.i.i
  %add28.i.i = fadd float %mul18.i.i, %mul10.i.i
  %add30.i.i = fadd float %mul16.i.i, %mul12.i.i
  %add32.i.i = fadd float %mul14.i.i, %mul24.i.i
  %sub33.i.i = fsub float 1.000000e+00, %add32.i.i
  %sub35.i.i = fsub float %mul22.i.i, %mul8.i.i
  %sub37.i.i = fsub float %mul18.i.i, %mul10.i.i
  %add39.i.i = fadd float %mul22.i.i, %mul8.i.i
  %add41.i.i = fadd float %mul14.i.i, %mul20.i.i
  %sub42.i.i = fsub float 1.000000e+00, %add41.i.i
  store float %sub.i.i, ptr %t, align 4, !tbaa !137
  store float %sub26.i.i, ptr %arrayidx3.i.i.i.i, align 4, !tbaa !137
  %arrayidx5.i.i.i.i = getelementptr inbounds [4 x float], ptr %t, i64 0, i64 2
  store float %add28.i.i, ptr %arrayidx5.i.i.i.i, align 4, !tbaa !137
  %arrayidx7.i.i80.i.i = getelementptr inbounds [4 x float], ptr %t, i64 0, i64 3
  store float 0.000000e+00, ptr %arrayidx7.i.i80.i.i, align 4, !tbaa !137
  %arrayidx3.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 1
  store float %add30.i.i, ptr %arrayidx3.i.i.i, align 4, !tbaa !137
  store float %sub33.i.i, ptr %arrayidx3.i6.i.i.i, align 4, !tbaa !137
  store float %sub35.i.i, ptr %arrayidx5.i7.i.i.i, align 4, !tbaa !137
  %arrayidx7.i8.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 1, i32 0, i64 3
  store float 0.000000e+00, ptr %arrayidx7.i8.i.i.i, align 4, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 2
  store float %sub37.i.i, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %arrayidx3.i9.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 2, i32 0, i64 1
  store float %add39.i.i, ptr %arrayidx3.i9.i.i.i, align 4, !tbaa !137
  store float %sub42.i.i, ptr %arrayidx5.i10.i.i.i, align 4, !tbaa !137
  store float 0.000000e+00, ptr %arrayidx7.i11.i.i.i, align 4, !tbaa !137
  call void @_ZN10btSoftBody9transformERK11btTransform(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(64) %t)
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %t) #38
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody5scaleERK9btVector3(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %scl) local_unnamed_addr #0 align 2 {
entry:
  %vol = alloca %struct.btDbvtAabbMm, align 8
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %0 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable = load ptr, ptr %0, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 11
  %1 = load ptr, ptr %vfn, align 8
  %call2 = tail call noundef float %1(ptr noundef nonnull align 8 dereferenceable(24) %0)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %vol) #38
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %2 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp23 = icmp sgt i32 %2, 0
  br i1 %cmp23, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %arrayidx5.i = getelementptr inbounds [4 x float], ptr %scl, i64 0, i64 1
  %arrayidx10.i = getelementptr inbounds [4 x float], ptr %scl, i64 0, i64 2
  %ref.tmp.sroa.4.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 8
  %ref.tmp.sroa.5.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 16
  %ref.tmp.sroa.6.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 24
  %m_ndbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  %wide.trip.count = zext i32 %2 to i64
  %3 = insertelement <2 x float> poison, float %call2, i64 0
  %4 = shufflevector <2 x float> %3, <2 x float> poison, <2 x i32> zeroinitializer
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  call void @_ZN10btSoftBody13updateNormalsEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  %m_ndbvt.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  %5 = load ptr, ptr %m_ndbvt.i, align 8, !tbaa !162
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.cleanup
  %mx.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %5, i64 0, i32 1
  %6 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable.i = load ptr, ptr %6, align 8, !tbaa !5
  %vfn.i = getelementptr inbounds ptr, ptr %vtable.i, i64 11
  %7 = load ptr, ptr %vfn.i, align 8
  %call9.i = call noundef float %7(ptr noundef nonnull align 8 dereferenceable(24) %6)
  %8 = load <2 x float>, ptr %5, align 4, !tbaa !137
  %9 = insertelement <2 x float> poison, float %call9.i, i64 0
  %10 = shufflevector <2 x float> %9, <2 x float> poison, <2 x i32> zeroinitializer
  %11 = fsub <2 x float> %8, %10
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %5, i64 0, i64 2
  %12 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %12, %call9.i
  %retval.sroa.3.12.vec.insert.i45.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i, i64 0
  %m_bounds.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  store <2 x float> %11, ptr %m_bounds.i, align 4, !tbaa.struct !163
  %ref.tmp12.sroa.4.0.arrayidx.sroa_idx.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 0, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i45.i, ptr %ref.tmp12.sroa.4.0.arrayidx.sroa_idx.i, align 4, !tbaa.struct !165
  %13 = load <2 x float>, ptr %mx.i.i, align 4, !tbaa !137
  %14 = fadd <2 x float> %10, %13
  %arrayidx11.i50.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %5, i64 0, i32 1, i32 0, i64 2
  %15 = load float, ptr %arrayidx11.i50.i, align 4, !tbaa !137
  %add14.i.i = fadd float %call9.i, %15
  %retval.sroa.3.12.vec.insert.i54.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i, i64 0
  %arrayidx19.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1
  store <2 x float> %14, ptr %arrayidx19.i, align 4, !tbaa.struct !163
  %ref.tmp15.sroa.4.0.arrayidx19.sroa_idx.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i54.i, ptr %ref.tmp15.sroa.4.0.arrayidx19.sroa_idx.i, align 4, !tbaa.struct !165
  %m_broadphaseHandle.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 8
  %16 = load ptr, ptr %m_broadphaseHandle.i.i, align 8, !tbaa !166
  %cmp.not.i = icmp eq ptr %16, null
  br i1 %cmp.not.i, label %_ZN10btSoftBody12updateBoundsEv.exit, label %if.then21.i

if.then21.i:                                      ; preds = %if.then.i
  %m_worldInfo.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 7
  %17 = load ptr, ptr %m_worldInfo.i, align 8, !tbaa !42
  %m_broadphase.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %17, i64 0, i32 4
  %18 = load ptr, ptr %m_broadphase.i, align 8, !tbaa !167
  %m_dispatcher.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %17, i64 0, i32 5
  %19 = load ptr, ptr %m_dispatcher.i, align 8, !tbaa !172
  %vtable28.i = load ptr, ptr %18, align 8, !tbaa !5
  %vfn29.i = getelementptr inbounds ptr, ptr %vtable28.i, i64 4
  %20 = load ptr, ptr %vfn29.i, align 8
  call void %20(ptr noundef nonnull align 8 dereferenceable(8) %18, ptr noundef nonnull %16, ptr noundef nonnull align 4 dereferenceable(16) %m_bounds.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx19.i, ptr noundef %19)
  br label %_ZN10btSoftBody12updateBoundsEv.exit

if.else.i:                                        ; preds = %for.cond.cleanup
  %m_bounds34.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %m_bounds34.i, i8 0, i64 32, i1 false)
  br label %_ZN10btSoftBody12updateBoundsEv.exit

_ZN10btSoftBody12updateBoundsEv.exit:             ; preds = %if.then.i, %if.then21.i, %if.else.i
  call void @_ZN10btSoftBody15updateConstantsEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %vol) #38
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %21 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %indvars.iv, i32 1
  %22 = load float, ptr %scl, align 4, !tbaa !137
  %23 = load float, ptr %m_x, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 1
  %24 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %25 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %indvars.iv, i32 2
  %26 = load float, ptr %m_q, align 4, !tbaa !137
  %arrayidx7.i17 = getelementptr inbounds [4 x float], ptr %m_q, i64 0, i64 1
  %27 = load float, ptr %arrayidx7.i17, align 4, !tbaa !137
  %arrayidx12.i20 = getelementptr inbounds [4 x float], ptr %m_q, i64 0, i64 2
  %28 = load float, ptr %arrayidx12.i20, align 4, !tbaa !137
  %mul.i = fmul float %22, %23
  store float %mul.i, ptr %m_x, align 4, !tbaa !137
  %29 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %mul8.i = fmul float %29, %24
  store float %mul8.i, ptr %arrayidx7.i, align 4, !tbaa !137
  %30 = load float, ptr %arrayidx10.i, align 4, !tbaa !137
  %mul13.i = fmul float %30, %25
  store float %mul13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %31 = load float, ptr %scl, align 4, !tbaa !137
  %mul.i15 = fmul float %31, %26
  store float %mul.i15, ptr %m_q, align 4, !tbaa !137
  %32 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %mul8.i18 = fmul float %32, %27
  store float %mul8.i18, ptr %arrayidx7.i17, align 4, !tbaa !137
  %33 = load float, ptr %arrayidx10.i, align 4, !tbaa !137
  %mul13.i21 = fmul float %33, %28
  store float %mul13.i21, ptr %arrayidx12.i20, align 4, !tbaa !137
  %34 = insertelement <2 x float> poison, float %mul.i, i64 0
  %35 = insertelement <2 x float> %34, float %mul8.i, i64 1
  %36 = fsub <2 x float> %35, %4
  %sub14.i.i.i = fsub float %mul13.i, %call2
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i.i, i64 0
  %37 = fadd <2 x float> %4, %35
  %add14.i.i.i = fadd float %call2, %mul13.i
  %retval.sroa.3.12.vec.insert.i12.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i.i, i64 0
  store <2 x float> %36, ptr %vol, align 8, !tbaa.struct !297
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i, ptr %ref.tmp.sroa.4.0.vol.sroa_idx, align 8, !tbaa.struct !298
  store <2 x float> %37, ptr %ref.tmp.sroa.5.0.vol.sroa_idx, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i12.i.i, ptr %ref.tmp.sroa.6.0.vol.sroa_idx, align 8, !tbaa.struct !165
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %indvars.iv, i32 8
  %38 = load ptr, ptr %m_leaf, align 8, !tbaa !183
  call void @_ZN6btDbvt6updateEP10btDbvtNodeR12btDbvtAabbMm(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt, ptr noundef %38, ptr noundef nonnull align 4 dereferenceable(32) %vol)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody7setPoseEbb(ptr noundef nonnull align 8 dereferenceable(1496) %this, i1 noundef zeroext %bvolume, i1 noundef zeroext %bframe) local_unnamed_addr #0 align 2 {
entry:
  %frombool = zext i1 %bvolume to i8
  %frombool1 = zext i1 %bframe to i8
  %m_pose = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5
  store i8 %frombool, ptr %m_pose, align 8, !tbaa !142
  %m_bframe = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 1
  store i8 %frombool1, ptr %m_bframe, align 1, !tbaa !143
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  %cmp6.i = icmp sgt i32 %0, 0
  br i1 %cmp6.i, label %for.body.lr.ph.i, label %_ZNK10btSoftBody12getTotalMassEv.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %1 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !87
  %wide.trip.count.i = zext i32 %0 to i64
  %xtraiter = and i64 %wide.trip.count.i, 1
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %_ZNK10btSoftBody12getTotalMassEv.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %wide.trip.count.i, 4294967294
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.1, %for.body.i ]
  %mass.07.i = phi float [ 0.000000e+00, %for.body.lr.ph.i.new ], [ %add.i.1, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.1, %for.body.i ]
  %m_im.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.i, i32 6
  %3 = load float, ptr %m_im.i.i, align 8, !tbaa !175
  %cmp.i.i = fcmp ogt float %3, 0.000000e+00
  %div.i.i = fdiv float 1.000000e+00, %3
  %cond.i.i = select i1 %cmp.i.i, float %div.i.i, float 0.000000e+00
  %add.i = fadd float %mass.07.i, %cond.i.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %m_im.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.next.i, i32 6
  %4 = load float, ptr %m_im.i.i.1, align 8, !tbaa !175
  %cmp.i.i.1 = fcmp ogt float %4, 0.000000e+00
  %div.i.i.1 = fdiv float 1.000000e+00, %4
  %cond.i.i.1 = select i1 %cmp.i.i.1, float %div.i.i.1, float 0.000000e+00
  %add.i.1 = fadd float %add.i, %cond.i.i.1
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK10btSoftBody12getTotalMassEv.exit.loopexit.unr-lcssa, label %for.body.i

_ZNK10btSoftBody12getTotalMassEv.exit.loopexit.unr-lcssa: ; preds = %for.body.i, %for.body.lr.ph.i
  %add.i.lcssa.ph = phi float [ undef, %for.body.lr.ph.i ], [ %add.i.1, %for.body.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i.1, %for.body.i ]
  %mass.07.i.unr = phi float [ 0.000000e+00, %for.body.lr.ph.i ], [ %add.i.1, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK10btSoftBody12getTotalMassEv.exit, label %for.body.i.epil

for.body.i.epil:                                  ; preds = %_ZNK10btSoftBody12getTotalMassEv.exit.loopexit.unr-lcssa
  %m_im.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.i.unr, i32 6
  %5 = load float, ptr %m_im.i.i.epil, align 8, !tbaa !175
  %cmp.i.i.epil = fcmp ogt float %5, 0.000000e+00
  %div.i.i.epil = fdiv float 1.000000e+00, %5
  %cond.i.i.epil = select i1 %cmp.i.i.epil, float %div.i.i.epil, float 0.000000e+00
  %add.i.epil = fadd float %mass.07.i.unr, %cond.i.i.epil
  br label %_ZNK10btSoftBody12getTotalMassEv.exit

_ZNK10btSoftBody12getTotalMassEv.exit:            ; preds = %for.body.i.epil, %_ZNK10btSoftBody12getTotalMassEv.exit.loopexit.unr-lcssa, %entry
  %mass.0.lcssa.i = phi float [ 0.000000e+00, %entry ], [ %add.i.lcssa.ph, %_ZNK10btSoftBody12getTotalMassEv.exit.loopexit.unr-lcssa ], [ %add.i.epil, %for.body.i.epil ]
  %conv = sitofp i32 %0 to float
  %mul = fmul float %mass.0.lcssa.i, %conv
  %mul8 = fmul float %mul, 1.000000e+03
  %m_size.i.i153 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 2
  %6 = load i32, ptr %m_size.i.i153, align 4, !tbaa !40
  %cmp4.i = icmp slt i32 %6, %0
  br i1 %cmp4.i, label %if.then5.i, label %_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit

if.then5.i:                                       ; preds = %_ZNK10btSoftBody12getTotalMassEv.exit
  %m_capacity.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 3
  %7 = load i32, ptr %m_capacity.i.i.i, align 8, !tbaa !41
  %cmp.i.i154 = icmp slt i32 %7, %0
  br i1 %cmp.i.i154, label %if.then.i.i, label %if.then5.i.for.body10.lr.ph.i_crit_edge

if.then5.i.for.body10.lr.ph.i_crit_edge:          ; preds = %if.then5.i
  %m_data11.i.phi.trans.insert = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  %.pre = load ptr, ptr %m_data11.i.phi.trans.insert, align 8, !tbaa !39
  br label %for.body10.lr.ph.i

if.then.i.i:                                      ; preds = %if.then5.i
  %tobool.not.i.i.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %0 to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 2
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i153, align 4, !tbaa !40
  br label %_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %8 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %6, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %8, 0
  %m_data.i.i.i155 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  %9 = load ptr, ptr %m_data.i.i.i155, align 8, !tbaa !39
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIfE4copyEiiPf.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i
  %10 = ptrtoint ptr %9 to i64
  %retval.0.i.i.i362 = ptrtoint ptr %retval.0.i.i.i to i64
  %wide.trip.count.i.i.i = zext i32 %8 to i64
  %min.iters.check = icmp ult i32 %8, 8
  %11 = sub i64 %retval.0.i.i.i362, %10
  %diff.check = icmp ult i64 %11, 32
  %or.cond = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond, label %for.body.i.i.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i.i
  %n.vec = and i64 %wide.trip.count.i.i.i, 4294967288
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %12 = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %index
  %13 = getelementptr inbounds float, ptr %9, i64 %index
  %wide.load = load <4 x float>, ptr %13, align 4, !tbaa !137
  %14 = getelementptr inbounds float, ptr %13, i64 4
  %wide.load363 = load <4 x float>, ptr %14, align 4, !tbaa !137
  store <4 x float> %wide.load, ptr %12, align 4, !tbaa !137
  %15 = getelementptr inbounds float, ptr %12, i64 4
  store <4 x float> %wide.load363, ptr %15, align 4, !tbaa !137
  %index.next = add nuw i64 %index, 8
  %16 = icmp eq i64 %index.next, %n.vec
  br i1 %16, label %middle.block, label %vector.body, !llvm.loop !305

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i.i
  br i1 %cmp.n, label %if.then.i11.i.i, label %for.body.i.i.i.preheader

for.body.i.i.i.preheader:                         ; preds = %for.body.lr.ph.i.i.i, %middle.block
  %indvars.iv.i.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %n.vec, %middle.block ]
  %17 = xor i64 %indvars.iv.i.i.i.ph, -1
  %18 = add nsw i64 %17, %wide.trip.count.i.i.i
  %xtraiter387 = and i64 %wide.trip.count.i.i.i, 3
  %lcmp.mod388.not = icmp eq i64 %xtraiter387, 0
  br i1 %lcmp.mod388.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol

for.body.i.i.i.prol:                              ; preds = %for.body.i.i.i.preheader, %for.body.i.i.i.prol
  %indvars.iv.i.i.i.prol = phi i64 [ %indvars.iv.next.i.i.i.prol, %for.body.i.i.i.prol ], [ %indvars.iv.i.i.i.ph, %for.body.i.i.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.i.i.prol ], [ 0, %for.body.i.i.i.preheader ]
  %arrayidx.i.i.i.prol = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.prol
  %arrayidx3.i.i.i.prol = getelementptr inbounds float, ptr %9, i64 %indvars.iv.i.i.i.prol
  %19 = load float, ptr %arrayidx3.i.i.i.prol, align 4, !tbaa !137
  store float %19, ptr %arrayidx.i.i.i.prol, align 4, !tbaa !137
  %indvars.iv.next.i.i.i.prol = add nuw nsw i64 %indvars.iv.i.i.i.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter387
  br i1 %prol.iter.cmp.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol, !llvm.loop !306

for.body.i.i.i.prol.loopexit:                     ; preds = %for.body.i.i.i.prol, %for.body.i.i.i.preheader
  %indvars.iv.i.i.i.unr = phi i64 [ %indvars.iv.i.i.i.ph, %for.body.i.i.i.preheader ], [ %indvars.iv.next.i.i.i.prol, %for.body.i.i.i.prol ]
  %20 = icmp ult i64 %18, 3
  br i1 %20, label %if.then.i11.i.i, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i
  %indvars.iv.i.i.i = phi i64 [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ], [ %indvars.iv.i.i.i.unr, %for.body.i.i.i.prol.loopexit ]
  %arrayidx.i.i.i = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %arrayidx3.i.i.i = getelementptr inbounds float, ptr %9, i64 %indvars.iv.i.i.i
  %21 = load float, ptr %arrayidx3.i.i.i, align 4, !tbaa !137
  store float %21, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %indvars.iv.next.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %arrayidx3.i.i.i.1 = getelementptr inbounds float, ptr %9, i64 %indvars.iv.next.i.i.i
  %22 = load float, ptr %arrayidx3.i.i.i.1, align 4, !tbaa !137
  store float %22, ptr %arrayidx.i.i.i.1, align 4, !tbaa !137
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %arrayidx3.i.i.i.2 = getelementptr inbounds float, ptr %9, i64 %indvars.iv.next.i.i.i.1
  %23 = load float, ptr %arrayidx3.i.i.i.2, align 4, !tbaa !137
  store float %23, ptr %arrayidx.i.i.i.2, align 4, !tbaa !137
  %indvars.iv.next.i.i.i.2 = add nuw nsw i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %arrayidx3.i.i.i.3 = getelementptr inbounds float, ptr %9, i64 %indvars.iv.next.i.i.i.2
  %24 = load float, ptr %arrayidx3.i.i.i.3, align 4, !tbaa !137
  store float %24, ptr %arrayidx.i.i.i.3, align 4, !tbaa !137
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %exitcond.not.i.i.i.3 = icmp eq i64 %indvars.iv.next.i.i.i.3, %wide.trip.count.i.i.i
  br i1 %exitcond.not.i.i.i.3, label %if.then.i11.i.i, label %for.body.i.i.i, !llvm.loop !307

_ZNK20btAlignedObjectArrayIfE4copyEiiPf.exit.i.i: ; preds = %_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i
  %tobool.not.i10.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i10.i.i, label %if.end.thread36.i, label %if.then.i11.i.i

if.end.thread36.i:                                ; preds = %_ZNK20btAlignedObjectArrayIfE4copyEiiPf.exit.i.i
  %m_ownsMemory.i37.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 6
  store i8 1, ptr %m_ownsMemory.i37.i, align 8, !tbaa !36
  store ptr %retval.0.i.i.i, ptr %m_data.i.i.i155, align 8, !tbaa !39
  store i32 %0, ptr %m_capacity.i.i.i, align 8, !tbaa !41
  br label %for.body10.lr.ph.i

if.then.i11.i.i:                                  ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i, %middle.block, %_ZNK20btAlignedObjectArrayIfE4copyEiiPf.exit.i.i
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 6
  %25 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !36, !range !159, !noundef !192
  %tobool2.not.i.i.i = icmp eq i8 %25, 0
  br i1 %tobool2.not.i.i.i, label %if.end.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %if.then.i11.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %9)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i.i.i, %if.then.i11.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !36
  store ptr %retval.0.i.i.i, ptr %m_data.i.i.i155, align 8, !tbaa !39
  store i32 %0, ptr %m_capacity.i.i.i, align 8, !tbaa !41
  br label %for.body10.lr.ph.i

for.body10.lr.ph.i:                               ; preds = %if.then5.i.for.body10.lr.ph.i_crit_edge, %if.end.i, %if.end.thread36.i
  %26 = phi ptr [ %.pre, %if.then5.i.for.body10.lr.ph.i_crit_edge ], [ %retval.0.i.i.i, %if.end.i ], [ %retval.0.i.i.i, %if.end.thread36.i ]
  %27 = sext i32 %6 to i64
  %wide.trip.count.i156 = sext i32 %0 to i64
  %28 = shl nsw i64 %27, 2
  %scevgep = getelementptr i8, ptr %26, i64 %28
  %29 = sub nsw i64 %wide.trip.count.i156, %27
  %30 = shl nsw i64 %29, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %scevgep, i8 0, i64 %30, i1 false), !tbaa !137
  %.pre353 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  br label %_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit

_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit:    ; preds = %for.body10.lr.ph.i, %_ZNK10btSoftBody12getTotalMassEv.exit
  %31 = phi i32 [ %.pre353, %for.body10.lr.ph.i ], [ %0, %_ZNK10btSoftBody12getTotalMassEv.exit ]
  store i32 %0, ptr %m_size.i.i153, align 4, !tbaa !40
  %cmp322 = icmp slt i32 %31, 1
  br i1 %cmp322, label %for.end36, label %for.body.lr.ph

for.body.lr.ph:                                   ; preds = %_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %32 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %wide.trip.count = zext i32 %31 to i64
  %xtraiter389 = and i64 %wide.trip.count, 1
  %33 = icmp eq i32 %31, 1
  br i1 %33, label %for.cond19.preheader.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter392 = and i64 %wide.trip.count, 4294967294
  br label %for.body

for.cond19.preheader.unr-lcssa:                   ; preds = %for.body, %for.body.lr.ph
  %tmass.1.lcssa.ph = phi float [ undef, %for.body.lr.ph ], [ %tmass.1.1, %for.body ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.1, %for.body ]
  %tmass.0323.unr = phi float [ %mass.0.lcssa.i, %for.body.lr.ph ], [ %tmass.1.1, %for.body ]
  %lcmp.mod390.not = icmp eq i64 %xtraiter389, 0
  br i1 %lcmp.mod390.not, label %for.cond19.preheader, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond19.preheader.unr-lcssa
  %m_im.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %32, i64 %indvars.iv.unr, i32 6
  %34 = load float, ptr %m_im.epil, align 8, !tbaa !175
  %cmp16.epil = fcmp ugt float %34, 0.000000e+00
  %add.epil = select i1 %cmp16.epil, float -0.000000e+00, float %mul8
  %tmass.1.epil = fadd float %tmass.0323.unr, %add.epil
  br label %for.cond19.preheader

for.cond19.preheader:                             ; preds = %for.cond19.preheader.unr-lcssa, %for.body.epil
  %tmass.1.lcssa = phi float [ %tmass.1.lcssa.ph, %for.cond19.preheader.unr-lcssa ], [ %tmass.1.epil, %for.body.epil ]
  br i1 %cmp322, label %for.end36, label %for.body21.lr.ph

for.body21.lr.ph:                                 ; preds = %for.cond19.preheader
  %m_data.i162 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %35 = load ptr, ptr %m_data.i162, align 8, !tbaa !87
  %div30 = fdiv float %mul8, %tmass.1.lcssa
  %m_data.i168 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  %36 = load ptr, ptr %m_data.i168, align 8, !tbaa !39
  %wide.trip.count341 = zext i32 %31 to i64
  %min.iters.check370 = icmp ult i32 %31, 4
  br i1 %min.iters.check370, label %for.body21.preheader, label %vector.memcheck364

vector.memcheck364:                               ; preds = %for.body21.lr.ph
  %37 = shl nuw nsw i64 %wide.trip.count, 2
  %scevgep365 = getelementptr i8, ptr %36, i64 %37
  %scevgep366 = getelementptr i8, ptr %35, i64 96
  %38 = mul nuw nsw i64 %wide.trip.count, 120
  %39 = add nsw i64 %38, -20
  %scevgep367 = getelementptr i8, ptr %35, i64 %39
  %bound0 = icmp ult ptr %36, %scevgep367
  %bound1 = icmp ult ptr %scevgep366, %scevgep365
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body21.preheader, label %vector.ph371

vector.ph371:                                     ; preds = %vector.memcheck364
  %n.vec373 = and i64 %wide.trip.count, 4294967292
  %broadcast.splatinsert = insertelement <4 x float> poison, float %tmass.1.lcssa, i64 0
  %broadcast.splat = shufflevector <4 x float> %broadcast.splatinsert, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert378 = insertelement <4 x float> poison, float %div30, i64 0
  %broadcast.splat379 = shufflevector <4 x float> %broadcast.splatinsert378, <4 x float> poison, <4 x i32> zeroinitializer
  br label %vector.body376

vector.body376:                                   ; preds = %vector.body376, %vector.ph371
  %index377 = phi i64 [ 0, %vector.ph371 ], [ %index.next380, %vector.body376 ]
  %40 = or i64 %index377, 1
  %41 = or i64 %index377, 2
  %42 = or i64 %index377, 3
  %43 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %35, i64 %index377, i32 6
  %44 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %35, i64 %40, i32 6
  %45 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %35, i64 %41, i32 6
  %46 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %35, i64 %42, i32 6
  %47 = load float, ptr %43, align 8, !tbaa !175, !alias.scope !308
  %48 = load float, ptr %44, align 8, !tbaa !175, !alias.scope !308
  %49 = load float, ptr %45, align 8, !tbaa !175, !alias.scope !308
  %50 = load float, ptr %46, align 8, !tbaa !175, !alias.scope !308
  %51 = insertelement <4 x float> poison, float %47, i64 0
  %52 = insertelement <4 x float> %51, float %48, i64 1
  %53 = insertelement <4 x float> %52, float %49, i64 2
  %54 = insertelement <4 x float> %53, float %50, i64 3
  %55 = fcmp ogt <4 x float> %54, zeroinitializer
  %56 = fmul <4 x float> %broadcast.splat, %54
  %57 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %56
  %58 = select <4 x i1> %55, <4 x float> %57, <4 x float> %broadcast.splat379
  %59 = getelementptr inbounds float, ptr %36, i64 %index377
  store <4 x float> %58, ptr %59, align 4, !tbaa !137, !alias.scope !311, !noalias !308
  %index.next380 = add nuw i64 %index377, 4
  %60 = icmp eq i64 %index.next380, %n.vec373
  br i1 %60, label %middle.block368, label %vector.body376, !llvm.loop !313

middle.block368:                                  ; preds = %vector.body376
  %cmp.n375 = icmp eq i64 %n.vec373, %wide.trip.count
  br i1 %cmp.n375, label %for.end36, label %for.body21.preheader

for.body21.preheader:                             ; preds = %vector.memcheck364, %for.body21.lr.ph, %middle.block368
  %indvars.iv338.ph = phi i64 [ 0, %vector.memcheck364 ], [ 0, %for.body21.lr.ph ], [ %n.vec373, %middle.block368 ]
  %61 = xor i64 %indvars.iv338.ph, -1
  %xtraiter394 = and i64 %wide.trip.count, 1
  %lcmp.mod395.not = icmp eq i64 %xtraiter394, 0
  br i1 %lcmp.mod395.not, label %for.body21.prol.loopexit, label %for.body21.prol

for.body21.prol:                                  ; preds = %for.body21.preheader
  %m_im24.prol = getelementptr inbounds %"struct.btSoftBody::Node", ptr %35, i64 %indvars.iv338.ph, i32 6
  %62 = load float, ptr %m_im24.prol, align 8, !tbaa !175
  %cmp25.prol = fcmp ogt float %62, 0.000000e+00
  %mul29.prol = fmul float %tmass.1.lcssa, %62
  %div.prol = fdiv float 1.000000e+00, %mul29.prol
  %cond.prol = select i1 %cmp25.prol, float %div.prol, float %div30
  %arrayidx.i170.prol = getelementptr inbounds float, ptr %36, i64 %indvars.iv338.ph
  store float %cond.prol, ptr %arrayidx.i170.prol, align 4, !tbaa !137
  %indvars.iv.next339.prol = or i64 %indvars.iv338.ph, 1
  br label %for.body21.prol.loopexit

for.body21.prol.loopexit:                         ; preds = %for.body21.prol, %for.body21.preheader
  %indvars.iv338.unr = phi i64 [ %indvars.iv338.ph, %for.body21.preheader ], [ %indvars.iv.next339.prol, %for.body21.prol ]
  %63 = sub nsw i64 0, %wide.trip.count
  %64 = icmp eq i64 %61, %63
  br i1 %64, label %for.end36, label %for.body21

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.1, %for.body ]
  %tmass.0323 = phi float [ %mass.0.lcssa.i, %for.body.lr.ph.new ], [ %tmass.1.1, %for.body ]
  %niter393 = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter393.next.1, %for.body ]
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %32, i64 %indvars.iv, i32 6
  %65 = load float, ptr %m_im, align 8, !tbaa !175
  %cmp16 = fcmp ugt float %65, 0.000000e+00
  %add = select i1 %cmp16, float -0.000000e+00, float %mul8
  %tmass.1 = fadd float %tmass.0323, %add
  %indvars.iv.next = or i64 %indvars.iv, 1
  %m_im.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %32, i64 %indvars.iv.next, i32 6
  %66 = load float, ptr %m_im.1, align 8, !tbaa !175
  %cmp16.1 = fcmp ugt float %66, 0.000000e+00
  %add.1 = select i1 %cmp16.1, float -0.000000e+00, float %mul8
  %tmass.1.1 = fadd float %tmass.1, %add.1
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter393.next.1 = add i64 %niter393, 2
  %niter393.ncmp.1 = icmp eq i64 %niter393.next.1, %unroll_iter392
  br i1 %niter393.ncmp.1, label %for.cond19.preheader.unr-lcssa, label %for.body

for.body21:                                       ; preds = %for.body21.prol.loopexit, %for.body21
  %indvars.iv338 = phi i64 [ %indvars.iv.next339.1, %for.body21 ], [ %indvars.iv338.unr, %for.body21.prol.loopexit ]
  %m_im24 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %35, i64 %indvars.iv338, i32 6
  %67 = load float, ptr %m_im24, align 8, !tbaa !175
  %cmp25 = fcmp ogt float %67, 0.000000e+00
  %mul29 = fmul float %tmass.1.lcssa, %67
  %div = fdiv float 1.000000e+00, %mul29
  %cond = select i1 %cmp25, float %div, float %div30
  %arrayidx.i170 = getelementptr inbounds float, ptr %36, i64 %indvars.iv338
  store float %cond, ptr %arrayidx.i170, align 4, !tbaa !137
  %indvars.iv.next339 = add nuw nsw i64 %indvars.iv338, 1
  %m_im24.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %35, i64 %indvars.iv.next339, i32 6
  %68 = load float, ptr %m_im24.1, align 8, !tbaa !175
  %cmp25.1 = fcmp ogt float %68, 0.000000e+00
  %mul29.1 = fmul float %tmass.1.lcssa, %68
  %div.1 = fdiv float 1.000000e+00, %mul29.1
  %cond.1 = select i1 %cmp25.1, float %div.1, float %div30
  %arrayidx.i170.1 = getelementptr inbounds float, ptr %36, i64 %indvars.iv.next339
  store float %cond.1, ptr %arrayidx.i170.1, align 4, !tbaa !137
  %indvars.iv.next339.1 = add nuw nsw i64 %indvars.iv338, 2
  %exitcond342.not.1 = icmp eq i64 %indvars.iv.next339.1, %wide.trip.count341
  br i1 %exitcond342.not.1, label %for.end36, label %for.body21, !llvm.loop !314

for.end36:                                        ; preds = %for.body21.prol.loopexit, %for.body21, %middle.block368, %_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit, %for.cond19.preheader
  %69 = load i8, ptr %m_bframe, align 1, !tbaa !143, !range !159, !noundef !192
  %tobool.not.i = icmp eq i8 %69, 0
  %brmerge = or i1 %tobool.not.i, %cmp322
  br i1 %brmerge, label %_ZNK10btSoftBody11evaluateComEv.exit, label %for.body.lr.ph.i173

for.body.lr.ph.i173:                              ; preds = %for.end36
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %70 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %m_data.i15.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  %71 = load ptr, ptr %m_data.i15.i, align 8, !tbaa !39
  %wide.trip.count.i172 = zext i32 %31 to i64
  %xtraiter397 = and i64 %wide.trip.count.i172, 1
  %72 = icmp eq i32 %31, 1
  br i1 %72, label %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i173.new

for.body.lr.ph.i173.new:                          ; preds = %for.body.lr.ph.i173
  %unroll_iter401 = and i64 %wide.trip.count.i172, 4294967294
  br label %for.body.i177

for.body.i177:                                    ; preds = %for.body.i177, %for.body.lr.ph.i173.new
  %indvars.iv.i174 = phi i64 [ 0, %for.body.lr.ph.i173.new ], [ %indvars.iv.next.i175.1, %for.body.i177 ]
  %retval.sroa.7.035.i = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i173.new ], [ %retval.sroa.7.8.vec.insert32.i.1, %for.body.i177 ]
  %retval.sroa.0.034.i = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i173.new ], [ %86, %for.body.i177 ]
  %niter402 = phi i64 [ 0, %for.body.lr.ph.i173.new ], [ %niter402.next.1, %for.body.i177 ]
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %70, i64 %indvars.iv.i174, i32 1
  %arrayidx.i17.i = getelementptr inbounds float, ptr %71, i64 %indvars.iv.i174
  %73 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx7.i19.i = getelementptr inbounds [4 x float], ptr %m_x.i, i64 0, i64 2
  %74 = load float, ptr %arrayidx7.i19.i, align 4, !tbaa !137
  %mul8.i.i = fmul float %73, %74
  %75 = load <2 x float>, ptr %m_x.i, align 4, !tbaa !137
  %76 = insertelement <2 x float> poison, float %73, i64 0
  %77 = shufflevector <2 x float> %76, <2 x float> poison, <2 x i32> zeroinitializer
  %78 = fmul <2 x float> %77, %75
  %79 = fadd <2 x float> %retval.sroa.0.034.i, %78
  %retval.sroa.7.8.vec.extract.i = extractelement <2 x float> %retval.sroa.7.035.i, i64 0
  %add13.i.i = fadd float %retval.sroa.7.8.vec.extract.i, %mul8.i.i
  %indvars.iv.next.i175 = or i64 %indvars.iv.i174, 1
  %m_x.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %70, i64 %indvars.iv.next.i175, i32 1
  %arrayidx.i17.i.1 = getelementptr inbounds float, ptr %71, i64 %indvars.iv.next.i175
  %80 = load float, ptr %arrayidx.i17.i.1, align 4, !tbaa !137
  %arrayidx7.i19.i.1 = getelementptr inbounds [4 x float], ptr %m_x.i.1, i64 0, i64 2
  %81 = load float, ptr %arrayidx7.i19.i.1, align 4, !tbaa !137
  %mul8.i.i.1 = fmul float %80, %81
  %82 = load <2 x float>, ptr %m_x.i.1, align 4, !tbaa !137
  %83 = insertelement <2 x float> poison, float %80, i64 0
  %84 = shufflevector <2 x float> %83, <2 x float> poison, <2 x i32> zeroinitializer
  %85 = fmul <2 x float> %84, %82
  %86 = fadd <2 x float> %79, %85
  %add13.i.i.1 = fadd float %add13.i.i, %mul8.i.i.1
  %retval.sroa.7.8.vec.insert32.i.1 = insertelement <2 x float> %retval.sroa.7.035.i, float %add13.i.i.1, i64 0
  %indvars.iv.next.i175.1 = add nuw nsw i64 %indvars.iv.i174, 2
  %niter402.next.1 = add i64 %niter402, 2
  %niter402.ncmp.1 = icmp eq i64 %niter402.next.1, %unroll_iter401
  br i1 %niter402.ncmp.1, label %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa, label %for.body.i177

_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa: ; preds = %for.body.i177, %for.body.lr.ph.i173
  %.lcssa385.ph = phi <2 x float> [ undef, %for.body.lr.ph.i173 ], [ %86, %for.body.i177 ]
  %retval.sroa.7.8.vec.insert32.i.lcssa.ph = phi <2 x float> [ undef, %for.body.lr.ph.i173 ], [ %retval.sroa.7.8.vec.insert32.i.1, %for.body.i177 ]
  %indvars.iv.i174.unr = phi i64 [ 0, %for.body.lr.ph.i173 ], [ %indvars.iv.next.i175.1, %for.body.i177 ]
  %retval.sroa.7.035.i.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i173 ], [ %retval.sroa.7.8.vec.insert32.i.1, %for.body.i177 ]
  %retval.sroa.0.034.i.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i173 ], [ %86, %for.body.i177 ]
  %lcmp.mod398.not = icmp eq i64 %xtraiter397, 0
  br i1 %lcmp.mod398.not, label %_ZNK10btSoftBody11evaluateComEv.exit, label %for.body.i177.epil

for.body.i177.epil:                               ; preds = %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa
  %m_x.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %70, i64 %indvars.iv.i174.unr, i32 1
  %arrayidx.i17.i.epil = getelementptr inbounds float, ptr %71, i64 %indvars.iv.i174.unr
  %87 = load float, ptr %arrayidx.i17.i.epil, align 4, !tbaa !137
  %arrayidx7.i19.i.epil = getelementptr inbounds [4 x float], ptr %m_x.i.epil, i64 0, i64 2
  %88 = load float, ptr %arrayidx7.i19.i.epil, align 4, !tbaa !137
  %mul8.i.i.epil = fmul float %87, %88
  %89 = load <2 x float>, ptr %m_x.i.epil, align 4, !tbaa !137
  %90 = insertelement <2 x float> poison, float %87, i64 0
  %91 = shufflevector <2 x float> %90, <2 x float> poison, <2 x i32> zeroinitializer
  %92 = fmul <2 x float> %91, %89
  %93 = fadd <2 x float> %retval.sroa.0.034.i.unr, %92
  %retval.sroa.7.8.vec.extract.i.epil = extractelement <2 x float> %retval.sroa.7.035.i.unr, i64 0
  %add13.i.i.epil = fadd float %retval.sroa.7.8.vec.extract.i.epil, %mul8.i.i.epil
  %retval.sroa.7.8.vec.insert32.i.epil = insertelement <2 x float> %retval.sroa.7.035.i.unr, float %add13.i.i.epil, i64 0
  br label %_ZNK10btSoftBody11evaluateComEv.exit

_ZNK10btSoftBody11evaluateComEv.exit:             ; preds = %for.body.i177.epil, %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa, %for.end36
  %retval.sroa.0.1.i = phi <2 x float> [ zeroinitializer, %for.end36 ], [ %.lcssa385.ph, %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa ], [ %93, %for.body.i177.epil ]
  %retval.sroa.7.1.i = phi <2 x float> [ zeroinitializer, %for.end36 ], [ %retval.sroa.7.8.vec.insert32.i.lcssa.ph, %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa ], [ %retval.sroa.7.8.vec.insert32.i.epil, %for.body.i177.epil ]
  %m_size.i.i180 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 2
  %94 = load i32, ptr %m_size.i.i180, align 4, !tbaa !34
  %cmp4.i182 = icmp slt i32 %94, %31
  br i1 %cmp4.i182, label %if.then5.i186, label %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit

if.then5.i186:                                    ; preds = %_ZNK10btSoftBody11evaluateComEv.exit
  %m_capacity.i.i.i184 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 3
  %95 = load i32, ptr %m_capacity.i.i.i184, align 8, !tbaa !35
  %cmp.i.i185 = icmp slt i32 %95, %31
  br i1 %cmp.i.i185, label %if.then.i.i188, label %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit.loopexit

if.then.i.i188:                                   ; preds = %if.then5.i186
  %tobool.not.i.i.i187 = icmp eq i32 %31, 0
  br i1 %tobool.not.i.i.i187, label %_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i, label %if.then.i.i.i193

if.then.i.i.i193:                                 ; preds = %if.then.i.i188
  %conv.i.i.i.i189 = sext i32 %31 to i64
  %mul.i.i.i.i190 = shl nsw i64 %conv.i.i.i.i189, 4
  %call.i.i.i.i191 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i190, i32 noundef 16)
  %.pre.i192 = load i32, ptr %m_size.i.i180, align 4, !tbaa !34
  br label %_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i: ; preds = %if.then.i.i.i193, %if.then.i.i188
  %96 = phi i32 [ %.pre.i192, %if.then.i.i.i193 ], [ %94, %if.then.i.i188 ]
  %retval.0.i.i.i194 = phi ptr [ %call.i.i.i.i191, %if.then.i.i.i193 ], [ null, %if.then.i.i188 ]
  %cmp7.i.i.i195 = icmp sgt i32 %96, 0
  br i1 %cmp7.i.i.i195, label %for.body.lr.ph.i.i.i198, label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i

for.body.lr.ph.i.i.i198:                          ; preds = %_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i
  %m_data.i.i.i196 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 5
  %wide.trip.count.i.i.i197 = zext i32 %96 to i64
  %xtraiter403 = and i64 %wide.trip.count.i.i.i197, 1
  %97 = icmp eq i32 %96, 1
  br i1 %97, label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i198.new

for.body.lr.ph.i.i.i198.new:                      ; preds = %for.body.lr.ph.i.i.i198
  %unroll_iter405 = and i64 %wide.trip.count.i.i.i197, 4294967294
  br label %for.body.i.i.i204

for.body.i.i.i204:                                ; preds = %for.body.i.i.i204, %for.body.lr.ph.i.i.i198.new
  %indvars.iv.i.i.i199 = phi i64 [ 0, %for.body.lr.ph.i.i.i198.new ], [ %indvars.iv.next.i.i.i202.1, %for.body.i.i.i204 ]
  %niter406 = phi i64 [ 0, %for.body.lr.ph.i.i.i198.new ], [ %niter406.next.1, %for.body.i.i.i204 ]
  %arrayidx.i.i.i200 = getelementptr inbounds %class.btVector3, ptr %retval.0.i.i.i194, i64 %indvars.iv.i.i.i199
  %98 = load ptr, ptr %m_data.i.i.i196, align 8, !tbaa !33
  %arrayidx3.i.i.i201 = getelementptr inbounds %class.btVector3, ptr %98, i64 %indvars.iv.i.i.i199
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx.i.i.i200, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i201, i64 16, i1 false), !tbaa.struct !163
  %indvars.iv.next.i.i.i202 = or i64 %indvars.iv.i.i.i199, 1
  %arrayidx.i.i.i200.1 = getelementptr inbounds %class.btVector3, ptr %retval.0.i.i.i194, i64 %indvars.iv.next.i.i.i202
  %99 = load ptr, ptr %m_data.i.i.i196, align 8, !tbaa !33
  %arrayidx3.i.i.i201.1 = getelementptr inbounds %class.btVector3, ptr %99, i64 %indvars.iv.next.i.i.i202
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx.i.i.i200.1, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i201.1, i64 16, i1 false), !tbaa.struct !163
  %indvars.iv.next.i.i.i202.1 = add nuw nsw i64 %indvars.iv.i.i.i199, 2
  %niter406.next.1 = add i64 %niter406, 2
  %niter406.ncmp.1 = icmp eq i64 %niter406.next.1, %unroll_iter405
  br i1 %niter406.ncmp.1, label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i204

_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i204, %for.body.lr.ph.i.i.i198
  %indvars.iv.i.i.i199.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i198 ], [ %indvars.iv.next.i.i.i202.1, %for.body.i.i.i204 ]
  %lcmp.mod404.not = icmp eq i64 %xtraiter403, 0
  br i1 %lcmp.mod404.not, label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i, label %for.body.i.i.i204.epil

for.body.i.i.i204.epil:                           ; preds = %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i200.epil = getelementptr inbounds %class.btVector3, ptr %retval.0.i.i.i194, i64 %indvars.iv.i.i.i199.unr
  %100 = load ptr, ptr %m_data.i.i.i196, align 8, !tbaa !33
  %arrayidx3.i.i.i201.epil = getelementptr inbounds %class.btVector3, ptr %100, i64 %indvars.iv.i.i.i199.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx.i.i.i200.epil, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i201.epil, i64 16, i1 false), !tbaa.struct !163
  br label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i

_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i: ; preds = %for.body.i.i.i204.epil, %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 5
  %101 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !33
  %tobool.not.i10.i.i205 = icmp eq ptr %101, null
  %m_ownsMemory.i.i.i206 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 6
  %102 = load i8, ptr %m_ownsMemory.i.i.i206, align 8, !range !159
  %tobool2.not.i.i.i207 = icmp eq i8 %102, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i205, i1 true, i1 %tobool2.not.i.i.i207
  br i1 %or.cond.i.i, label %if.end.i209, label %if.then3.i.i.i208

if.then3.i.i.i208:                                ; preds = %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %101)
  br label %if.end.i209

if.end.i209:                                      ; preds = %if.then3.i.i.i208, %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i206, align 8, !tbaa !30
  store ptr %retval.0.i.i.i194, ptr %m_data.i9.i.i, align 8, !tbaa !33
  store i32 %31, ptr %m_capacity.i.i.i184, align 8, !tbaa !35
  br label %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit.loopexit

_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit.loopexit: ; preds = %if.then5.i186, %if.end.i209
  %.pre354 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  br label %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit

_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit: ; preds = %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit.loopexit, %_ZNK10btSoftBody11evaluateComEv.exit
  %103 = phi i32 [ %.pre354, %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit.loopexit ], [ %31, %_ZNK10btSoftBody11evaluateComEv.exit ]
  store i32 %31, ptr %m_size.i.i180, align 4, !tbaa !34
  %cmp45327 = icmp sgt i32 %103, 0
  br i1 %cmp45327, label %for.body46.lr.ph, label %for.end57

for.body46.lr.ph:                                 ; preds = %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit
  %m_data.i219 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %com.sroa.6.8.vec.extract = extractelement <2 x float> %retval.sroa.7.1.i, i64 0
  %m_data.i225 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 5
  %wide.trip.count346 = zext i32 %103 to i64
  br label %for.body46

for.body46:                                       ; preds = %for.body46.lr.ph, %for.body46
  %indvars.iv343 = phi i64 [ 0, %for.body46.lr.ph ], [ %indvars.iv.next344, %for.body46 ]
  %104 = load ptr, ptr %m_data.i219, align 8, !tbaa !87
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %104, i64 %indvars.iv343, i32 1
  %105 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %106 = fsub <2 x float> %105, %retval.sroa.0.1.i
  %arrayidx11.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %107 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %sub14.i = fsub float %107, %com.sroa.6.8.vec.extract
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i, i64 0
  %108 = load ptr, ptr %m_data.i225, align 8, !tbaa !33
  %arrayidx.i227 = getelementptr inbounds %class.btVector3, ptr %108, i64 %indvars.iv343
  store <2 x float> %106, ptr %arrayidx.i227, align 4, !tbaa.struct !163
  %ref.tmp47.sroa.4.0.call54.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i227, i64 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %ref.tmp47.sroa.4.0.call54.sroa_idx, align 4, !tbaa.struct !165
  %indvars.iv.next344 = add nuw nsw i64 %indvars.iv343, 1
  %exitcond347.not = icmp eq i64 %indvars.iv.next344, %wide.trip.count346
  br i1 %exitcond347.not, label %for.end57, label %for.body46

for.end57:                                        ; preds = %for.body46, %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit
  %109 = load i32, ptr %m_size.i.i, align 4
  %cmp.i229 = icmp sgt i32 %109, 0
  %or.cond321 = select i1 %bvolume, i1 %cmp.i229, i1 false
  br i1 %or.cond321, label %if.then.i232, label %cond.end62

if.then.i232:                                     ; preds = %for.end57
  %m_data.i.i230 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %110 = load ptr, ptr %m_data.i.i230, align 8, !tbaa !87
  %m_x.i231 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %110, i64 0, i32 1
  %org.sroa.0.0.copyload.i = load float, ptr %m_x.i231, align 8, !tbaa.struct !163
  %org.sroa.6.0.m_x.sroa_idx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %110, i64 0, i32 1, i32 0, i64 1
  %org.sroa.6.0.copyload.i = load float, ptr %org.sroa.6.0.m_x.sroa_idx.i, align 4, !tbaa.struct !293
  %org.sroa.9.0.m_x.sroa_idx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %110, i64 0, i32 1, i32 0, i64 2
  %org.sroa.9.0.copyload.i = load float, ptr %org.sroa.9.0.m_x.sroa_idx.i, align 8, !tbaa.struct !165
  %m_size.i32.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %111 = load i32, ptr %m_size.i32.i, align 4, !tbaa !96
  %cmp566.i = icmp sgt i32 %111, 0
  br i1 %cmp566.i, label %for.body.lr.ph.i234, label %for.end.i

for.body.lr.ph.i234:                              ; preds = %if.then.i232
  %m_data.i33.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %112 = load ptr, ptr %m_data.i33.i, align 8, !tbaa !95
  %wide.trip.count.i233 = zext i32 %111 to i64
  br label %for.body.i240

for.body.i240:                                    ; preds = %for.body.i240, %for.body.lr.ph.i234
  %indvars.iv.i235 = phi i64 [ 0, %for.body.lr.ph.i234 ], [ %indvars.iv.next.i238, %for.body.i240 ]
  %vol.068.i = phi float [ 0.000000e+00, %for.body.lr.ph.i234 ], [ %add.i237, %for.body.i240 ]
  %m_n.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %112, i64 %indvars.iv.i235, i32 1
  %113 = load ptr, ptr %m_n.i, align 8, !tbaa !219
  %m_x8.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %113, i64 0, i32 1
  %114 = load float, ptr %m_x8.i, align 4, !tbaa !137
  %sub.i.i = fsub float %114, %org.sroa.0.0.copyload.i
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %113, i64 0, i32 1, i32 0, i64 1
  %115 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %sub8.i.i = fsub float %115, %org.sroa.6.0.copyload.i
  %arrayidx11.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %113, i64 0, i32 1, i32 0, i64 2
  %116 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %116, %org.sroa.9.0.copyload.i
  %arrayidx13.i236 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %112, i64 %indvars.iv.i235, i32 1, i64 1
  %117 = load ptr, ptr %arrayidx13.i236, align 8, !tbaa !219
  %m_x14.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %117, i64 0, i32 1
  %118 = load float, ptr %m_x14.i, align 4, !tbaa !137
  %sub.i34.i = fsub float %118, %org.sroa.0.0.copyload.i
  %arrayidx5.i35.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %117, i64 0, i32 1, i32 0, i64 1
  %119 = load float, ptr %arrayidx5.i35.i, align 4, !tbaa !137
  %sub8.i37.i = fsub float %119, %org.sroa.6.0.copyload.i
  %arrayidx11.i38.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %117, i64 0, i32 1, i32 0, i64 2
  %120 = load float, ptr %arrayidx11.i38.i, align 4, !tbaa !137
  %sub14.i40.i = fsub float %120, %org.sroa.9.0.copyload.i
  %arrayidx19.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %112, i64 %indvars.iv.i235, i32 1, i64 2
  %121 = load ptr, ptr %arrayidx19.i, align 8, !tbaa !219
  %m_x20.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %121, i64 0, i32 1
  %122 = load float, ptr %m_x20.i, align 4, !tbaa !137
  %sub.i46.i = fsub float %122, %org.sroa.0.0.copyload.i
  %arrayidx5.i47.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %121, i64 0, i32 1, i32 0, i64 1
  %123 = load float, ptr %arrayidx5.i47.i, align 4, !tbaa !137
  %sub8.i49.i = fsub float %123, %org.sroa.6.0.copyload.i
  %arrayidx11.i50.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %121, i64 0, i32 1, i32 0, i64 2
  %124 = load float, ptr %arrayidx11.i50.i, align 4, !tbaa !137
  %sub14.i52.i = fsub float %124, %org.sroa.9.0.copyload.i
  %125 = fneg float %sub14.i40.i
  %neg.i.i.i = fmul float %sub8.i49.i, %125
  %126 = tail call float @llvm.fmuladd.f32(float %sub8.i37.i, float %sub14.i52.i, float %neg.i.i.i)
  %127 = fneg float %sub.i34.i
  %neg19.i.i.i = fmul float %sub14.i52.i, %127
  %128 = tail call float @llvm.fmuladd.f32(float %sub14.i40.i, float %sub.i46.i, float %neg19.i.i.i)
  %129 = fneg float %sub8.i37.i
  %neg30.i.i.i = fmul float %sub.i46.i, %129
  %130 = tail call float @llvm.fmuladd.f32(float %sub.i34.i, float %sub8.i49.i, float %neg30.i.i.i)
  %mul8.i.i.i = fmul float %sub8.i.i, %128
  %131 = tail call float @llvm.fmuladd.f32(float %sub.i.i, float %126, float %mul8.i.i.i)
  %132 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %130, float %131)
  %add.i237 = fadd float %vol.068.i, %132
  %indvars.iv.next.i238 = add nuw nsw i64 %indvars.iv.i235, 1
  %exitcond.not.i239 = icmp eq i64 %indvars.iv.next.i238, %wide.trip.count.i233
  br i1 %exitcond.not.i239, label %for.end.i, label %for.body.i240

for.end.i:                                        ; preds = %for.body.i240, %if.then.i232
  %vol.0.lcssa.i = phi float [ 0.000000e+00, %if.then.i232 ], [ %add.i237, %for.body.i240 ]
  %div.i = fdiv float %vol.0.lcssa.i, 6.000000e+00
  br label %cond.end62

cond.end62:                                       ; preds = %for.end.i, %for.end57
  %cond63 = phi float [ 0.000000e+00, %for.end57 ], [ %div.i, %for.end.i ]
  %m_volume = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 2
  store float %cond63, ptr %m_volume, align 4, !tbaa !144
  %m_com = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 5
  store <2 x float> %retval.sroa.0.1.i, ptr %m_com, align 8, !tbaa.struct !163
  %com.sroa.6.0.m_com.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 5, i32 0, i64 2
  store <2 x float> %retval.sroa.7.1.i, ptr %com.sroa.6.0.m_com.sroa_idx, align 8, !tbaa.struct !165
  %m_rot = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6
  store float 1.000000e+00, ptr %m_rot, align 8, !tbaa !137
  %arrayidx3.i.i.i242 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 0, i32 0, i64 1
  %arrayidx3.i6.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 1, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i242, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i, align 4, !tbaa !137
  %arrayidx5.i7.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 2, i32 0, i64 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx5.i7.i.i, i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr %arrayidx5.i10.i.i, align 8, !tbaa !137
  %m_scl = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7
  store float 1.000000e+00, ptr %m_scl, align 8, !tbaa !137
  %arrayidx3.i.i.i243 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx3.i6.i.i244 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 1, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i243, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i244, align 4, !tbaa !137
  %arrayidx5.i7.i.i245 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i246 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 2, i32 0, i64 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx5.i7.i.i245, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i246, align 8, !tbaa !137
  %arrayidx7.i11.i.i247 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 2, i32 0, i64 3
  %m_aqq = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8
  %arrayidx.i250 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 2
  %ref.tmp68.sroa.4.0.arrayidx.i250.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 2, i32 0, i64 1
  %arrayidx.i251 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(52) %arrayidx7.i11.i.i247, i8 0, i64 52, i1 false)
  br i1 %cmp.i229, label %for.body84.lr.ph, label %cond.end62.for.end119_crit_edge

cond.end62.for.end119_crit_edge:                  ; preds = %cond.end62
  %arrayidx7.i274 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 0, i32 0, i64 1
  %arrayidx3.i.i313.phi.trans.insert = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 1, i32 0, i64 1
  %arrayidx15.i.i.phi.trans.insert = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 1, i32 0, i64 2
  %.pre357 = load float, ptr %arrayidx.i251, align 8, !tbaa !137, !noalias !315
  %.pre358 = load float, ptr %m_aqq, align 8, !tbaa !137, !noalias !315
  %arrayidx10.i.i.phi.trans.insert = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 0, i32 0, i64 2
  %.pre355 = load float, ptr %arrayidx3.i.i313.phi.trans.insert, align 4, !tbaa !137, !noalias !315
  %.pre356 = load float, ptr %arrayidx15.i.i.phi.trans.insert, align 8, !tbaa !137, !noalias !315
  %133 = load <4 x float>, ptr %arrayidx7.i274, align 4
  %134 = shufflevector <4 x float> %133, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %135 = load <4 x float>, ptr %arrayidx10.i.i.phi.trans.insert, align 8
  %136 = shufflevector <4 x float> %135, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %137 = insertelement <2 x float> %136, float %.pre355, i64 1
  %138 = insertelement <2 x float> %134, float %.pre356, i64 1
  br label %for.end119

for.body84.lr.ph:                                 ; preds = %cond.end62
  %m_data.i253 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 5
  %139 = load ptr, ptr %m_data.i253, align 8, !tbaa !33
  %m_data.i256 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  %140 = load ptr, ptr %m_data.i256, align 8, !tbaa !39
  %arrayidx12.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i292 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 1, i32 0, i64 2
  %141 = load <2 x float>, ptr %m_aqq, align 8, !tbaa !137
  %arrayidx12.i.promoted = load float, ptr %arrayidx12.i, align 8, !tbaa !137
  %142 = load <2 x float>, ptr %arrayidx.i251, align 8, !tbaa !137
  %arrayidx12.i292.promoted = load float, ptr %arrayidx12.i292, align 8, !tbaa !137
  %wide.trip.count351 = zext i32 %109 to i64
  br label %for.body84

for.body84:                                       ; preds = %for.body84.lr.ph, %for.body84
  %indvars.iv348 = phi i64 [ 0, %for.body84.lr.ph ], [ %indvars.iv.next349, %for.body84 ]
  %143 = phi float [ %arrayidx12.i292.promoted, %for.body84.lr.ph ], [ %add13.i293, %for.body84 ]
  %144 = phi float [ %arrayidx12.i.promoted, %for.body84.lr.ph ], [ %add13.i, %for.body84 ]
  %add.i306331333 = phi float [ 0.000000e+00, %for.body84.lr.ph ], [ %add.i306, %for.body84 ]
  %145 = phi <2 x float> [ zeroinitializer, %for.body84.lr.ph ], [ %168, %for.body84 ]
  %146 = phi <2 x float> [ %141, %for.body84.lr.ph ], [ %156, %for.body84 ]
  %147 = phi <2 x float> [ %142, %for.body84.lr.ph ], [ %162, %for.body84 ]
  %arrayidx.i255 = getelementptr inbounds %class.btVector3, ptr %139, i64 %indvars.iv348
  %arrayidx.i258 = getelementptr inbounds float, ptr %140, i64 %indvars.iv348
  %148 = load float, ptr %arrayidx.i258, align 4, !tbaa !137
  %arrayidx3.i.i = getelementptr inbounds [4 x float], ptr %arrayidx.i255, i64 0, i64 1
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %arrayidx.i255, i64 0, i64 2
  %149 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %mul8.i.i261 = fmul float %148, %149
  %150 = load <2 x float>, ptr %arrayidx.i255, align 4, !tbaa !137
  %151 = extractelement <2 x float> %150, i64 0
  %mul.i.i259 = fmul float %151, %148
  %152 = extractelement <2 x float> %150, i64 1
  %mul4.i.i260 = fmul float %148, %152
  %153 = insertelement <2 x float> poison, float %mul.i.i259, i64 0
  %154 = shufflevector <2 x float> %153, <2 x float> poison, <2 x i32> zeroinitializer
  %155 = fmul <2 x float> %150, %154
  %mul8.i.i266 = fmul float %mul.i.i259, %149
  %add13.i = fadd float %mul8.i.i266, %144
  store float %add13.i, ptr %arrayidx12.i, align 8, !tbaa !137
  %156 = fadd <2 x float> %155, %146
  store <2 x float> %156, ptr %m_aqq, align 8, !tbaa !137
  %157 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %mul8.i.i280 = fmul float %mul4.i.i260, %157
  %158 = load <2 x float>, ptr %arrayidx.i255, align 4, !tbaa !137
  %159 = insertelement <2 x float> poison, float %mul4.i.i260, i64 0
  %160 = shufflevector <2 x float> %159, <2 x float> poison, <2 x i32> zeroinitializer
  %161 = fmul <2 x float> %160, %158
  %162 = fadd <2 x float> %161, %147
  store <2 x float> %162, ptr %arrayidx.i251, align 8, !tbaa !137
  %add13.i293 = fadd float %mul8.i.i280, %143
  store float %add13.i293, ptr %arrayidx12.i292, align 8, !tbaa !137
  %163 = load float, ptr %arrayidx.i255, align 4, !tbaa !137
  %mul.i.i295 = fmul float %mul8.i.i261, %163
  %164 = load <2 x float>, ptr %arrayidx3.i.i, align 4, !tbaa !137
  %165 = insertelement <2 x float> poison, float %mul8.i.i261, i64 0
  %166 = shufflevector <2 x float> %165, <2 x float> poison, <2 x i32> zeroinitializer
  %167 = fmul <2 x float> %166, %164
  %add.i306 = fadd float %mul.i.i295, %add.i306331333
  store float %add.i306, ptr %arrayidx.i250, align 8, !tbaa !137
  %168 = fadd <2 x float> %167, %145
  store <2 x float> %168, ptr %ref.tmp68.sroa.4.0.arrayidx.i250.sroa_idx, align 4, !tbaa !137
  %indvars.iv.next349 = add nuw nsw i64 %indvars.iv348, 1
  %exitcond352.not = icmp eq i64 %indvars.iv.next349, %wide.trip.count351
  br i1 %exitcond352.not, label %for.end119.loopexit, label %for.body84

for.end119.loopexit:                              ; preds = %for.body84
  %169 = extractelement <2 x float> %162, i64 0
  %170 = extractelement <2 x float> %156, i64 0
  %171 = shufflevector <2 x float> %156, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %172 = insertelement <2 x float> %171, float %add13.i293, i64 1
  %173 = insertelement <2 x float> %162, float %add13.i, i64 0
  br label %for.end119

for.end119:                                       ; preds = %for.end119.loopexit, %cond.end62.for.end119_crit_edge
  %174 = phi float [ %.pre358, %cond.end62.for.end119_crit_edge ], [ %170, %for.end119.loopexit ]
  %175 = phi float [ %.pre357, %cond.end62.for.end119_crit_edge ], [ %169, %for.end119.loopexit ]
  %176 = phi float [ 0.000000e+00, %cond.end62.for.end119_crit_edge ], [ %add.i306, %for.end119.loopexit ]
  %177 = phi <2 x float> [ %137, %cond.end62.for.end119_crit_edge ], [ %173, %for.end119.loopexit ]
  %178 = phi <2 x float> [ zeroinitializer, %cond.end62.for.end119_crit_edge ], [ %168, %for.end119.loopexit ]
  %179 = phi <2 x float> [ %138, %cond.end62.for.end119_crit_edge ], [ %172, %for.end119.loopexit ]
  %ref.tmp68.sroa.6.0.arrayidx.i250.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 2, i32 0, i64 3
  %arrayidx15.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 1, i32 0, i64 2
  %180 = fneg <2 x float> %179
  %181 = extractelement <2 x float> %179, i64 1
  %182 = extractelement <2 x float> %177, i64 1
  %183 = fneg float %182
  %neg.i51.i = fmul float %176, %183
  %184 = extractelement <2 x float> %178, i64 0
  %185 = tail call float @llvm.fmuladd.f32(float %175, float %184, float %neg.i51.i)
  %186 = extractelement <2 x float> %179, i64 0
  %arrayidx10.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 0, i32 0, i64 2
  %187 = extractelement <2 x float> %177, i64 0
  %188 = fneg float %174
  %neg.i75.i = fmul float %181, %188
  %189 = tail call float @llvm.fmuladd.f32(float %187, float %175, float %neg.i75.i)
  %190 = shufflevector <2 x float> %178, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %191 = fmul <2 x float> %190, %180
  %192 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %177, <2 x float> %178, <2 x float> %191)
  %193 = extractelement <2 x float> %192, i64 1
  %ref.tmp120.sroa.6.0.m_aqq.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 0, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp120.sroa.6.0.m_aqq.sroa_idx, align 4, !tbaa.struct !318
  %194 = shufflevector <2 x float> %177, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %195 = insertelement <2 x float> %194, float %175, i64 0
  %196 = fneg <2 x float> %195
  %197 = insertelement <2 x float> %190, float %176, i64 1
  %198 = fmul <2 x float> %197, %196
  %199 = shufflevector <2 x float> %179, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %200 = insertelement <2 x float> %199, float %174, i64 1
  %201 = insertelement <2 x float> %178, float %176, i64 0
  %202 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %200, <2 x float> %201, <2 x float> %198)
  %203 = fmul <2 x float> %179, %202
  %mul8.i.i314 = extractelement <2 x float> %203, i64 0
  %204 = fmul <2 x float> %177, %196
  %neg.i66.i = extractelement <2 x float> %204, i64 1
  %205 = tail call float @llvm.fmuladd.f32(float %186, float %181, float %neg.i66.i)
  %206 = tail call float @llvm.fmuladd.f32(float %174, float %193, float %mul8.i.i314)
  %207 = tail call float @llvm.fmuladd.f32(float %187, float %185, float %206)
  %div.i315 = fdiv float 1.000000e+00, %207
  %208 = insertelement <2 x float> poison, float %div.i315, i64 0
  %209 = shufflevector <2 x float> %208, <2 x float> poison, <2 x i32> zeroinitializer
  %210 = fmul <2 x float> %192, %209
  %mul15.i = fmul float %205, %div.i315
  %211 = fmul <2 x float> %202, %209
  %mul24.i = fmul float %189, %div.i315
  %mul27.i = fmul float %185, %div.i315
  %212 = shufflevector <2 x float> %210, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  store <2 x float> %212, ptr %m_aqq, align 8
  store float %mul15.i, ptr %arrayidx10.i.i, align 8, !tbaa.struct !165
  store <2 x float> %211, ptr %arrayidx.i251, align 8
  store float %mul24.i, ptr %arrayidx15.i.i, align 8, !tbaa.struct !165
  %ref.tmp120.sroa.11.16.arrayidx7.i318.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 1, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp120.sroa.11.16.arrayidx7.i318.sroa_idx, align 4, !tbaa.struct !318
  store float %mul27.i, ptr %arrayidx.i250, align 8, !tbaa.struct !163
  %213 = shufflevector <2 x float> %178, <2 x float> %180, <2 x i32> <i32 0, i32 2>
  %214 = insertelement <2 x float> poison, float %188, i64 0
  %215 = insertelement <2 x float> %214, float %175, i64 1
  %216 = fmul <2 x float> %213, %215
  %217 = insertelement <2 x float> %179, float %174, i64 1
  %218 = insertelement <2 x float> %177, float %176, i64 0
  %219 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %217, <2 x float> %218, <2 x float> %216)
  %220 = fmul <2 x float> %219, %209
  store <2 x float> %220, ptr %ref.tmp68.sroa.4.0.arrayidx.i250.sroa_idx, align 4
  store float 0.000000e+00, ptr %ref.tmp68.sroa.6.0.arrayidx.i250.sroa_idx, align 4, !tbaa.struct !318
  tail call void @_ZN10btSoftBody15updateConstantsEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local { <2 x float>, <2 x float> } @_ZNK10btSoftBody11evaluateComEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #18 align 2 {
entry:
  %m_bframe = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 1
  %0 = load i8, ptr %m_bframe, align 1, !tbaa !143, !range !159, !noundef !192
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %1 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp33 = icmp sgt i32 %1, 0
  br i1 %cmp33, label %for.body.lr.ph, label %if.end

for.body.lr.ph:                                   ; preds = %if.then
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %2 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_data.i15 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  %3 = load ptr, ptr %m_data.i15, align 8, !tbaa !39
  %wide.trip.count = zext i32 %1 to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %4 = icmp eq i32 %1, 1
  br i1 %4, label %if.end.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.1, %for.body ]
  %retval.sroa.7.035 = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.new ], [ %retval.sroa.7.8.vec.insert32.1, %for.body ]
  %retval.sroa.0.034 = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.new ], [ %18, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.1, %for.body ]
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv, i32 1
  %arrayidx.i17 = getelementptr inbounds float, ptr %3, i64 %indvars.iv
  %5 = load float, ptr %arrayidx.i17, align 4, !tbaa !137
  %arrayidx7.i19 = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %6 = load float, ptr %arrayidx7.i19, align 4, !tbaa !137
  %mul8.i = fmul float %5, %6
  %7 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %8 = insertelement <2 x float> poison, float %5, i64 0
  %9 = shufflevector <2 x float> %8, <2 x float> poison, <2 x i32> zeroinitializer
  %10 = fmul <2 x float> %9, %7
  %11 = fadd <2 x float> %retval.sroa.0.034, %10
  %retval.sroa.7.8.vec.extract = extractelement <2 x float> %retval.sroa.7.035, i64 0
  %add13.i = fadd float %retval.sroa.7.8.vec.extract, %mul8.i
  %indvars.iv.next = or i64 %indvars.iv, 1
  %m_x.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv.next, i32 1
  %arrayidx.i17.1 = getelementptr inbounds float, ptr %3, i64 %indvars.iv.next
  %12 = load float, ptr %arrayidx.i17.1, align 4, !tbaa !137
  %arrayidx7.i19.1 = getelementptr inbounds [4 x float], ptr %m_x.1, i64 0, i64 2
  %13 = load float, ptr %arrayidx7.i19.1, align 4, !tbaa !137
  %mul8.i.1 = fmul float %12, %13
  %14 = load <2 x float>, ptr %m_x.1, align 4, !tbaa !137
  %15 = insertelement <2 x float> poison, float %12, i64 0
  %16 = shufflevector <2 x float> %15, <2 x float> poison, <2 x i32> zeroinitializer
  %17 = fmul <2 x float> %16, %14
  %18 = fadd <2 x float> %11, %17
  %add13.i.1 = fadd float %add13.i, %mul8.i.1
  %retval.sroa.7.8.vec.insert32.1 = insertelement <2 x float> %retval.sroa.7.035, float %add13.i.1, i64 0
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %if.end.loopexit.unr-lcssa, label %for.body

if.end.loopexit.unr-lcssa:                        ; preds = %for.body, %for.body.lr.ph
  %.lcssa.ph = phi <2 x float> [ undef, %for.body.lr.ph ], [ %18, %for.body ]
  %retval.sroa.7.8.vec.insert32.lcssa.ph = phi <2 x float> [ undef, %for.body.lr.ph ], [ %retval.sroa.7.8.vec.insert32.1, %for.body ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.1, %for.body ]
  %retval.sroa.7.035.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph ], [ %retval.sroa.7.8.vec.insert32.1, %for.body ]
  %retval.sroa.0.034.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph ], [ %18, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %if.end, label %for.body.epil

for.body.epil:                                    ; preds = %if.end.loopexit.unr-lcssa
  %m_x.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv.unr, i32 1
  %arrayidx.i17.epil = getelementptr inbounds float, ptr %3, i64 %indvars.iv.unr
  %19 = load float, ptr %arrayidx.i17.epil, align 4, !tbaa !137
  %arrayidx7.i19.epil = getelementptr inbounds [4 x float], ptr %m_x.epil, i64 0, i64 2
  %20 = load float, ptr %arrayidx7.i19.epil, align 4, !tbaa !137
  %mul8.i.epil = fmul float %19, %20
  %21 = load <2 x float>, ptr %m_x.epil, align 4, !tbaa !137
  %22 = insertelement <2 x float> poison, float %19, i64 0
  %23 = shufflevector <2 x float> %22, <2 x float> poison, <2 x i32> zeroinitializer
  %24 = fmul <2 x float> %23, %21
  %25 = fadd <2 x float> %retval.sroa.0.034.unr, %24
  %retval.sroa.7.8.vec.extract.epil = extractelement <2 x float> %retval.sroa.7.035.unr, i64 0
  %add13.i.epil = fadd float %retval.sroa.7.8.vec.extract.epil, %mul8.i.epil
  %retval.sroa.7.8.vec.insert32.epil = insertelement <2 x float> %retval.sroa.7.035.unr, float %add13.i.epil, i64 0
  br label %if.end

if.end:                                           ; preds = %for.body.epil, %if.end.loopexit.unr-lcssa, %if.then, %entry
  %retval.sroa.0.1 = phi <2 x float> [ zeroinitializer, %entry ], [ zeroinitializer, %if.then ], [ %.lcssa.ph, %if.end.loopexit.unr-lcssa ], [ %25, %for.body.epil ]
  %retval.sroa.7.1 = phi <2 x float> [ zeroinitializer, %entry ], [ zeroinitializer, %if.then ], [ %retval.sroa.7.8.vec.insert32.lcssa.ph, %if.end.loopexit.unr-lcssa ], [ %retval.sroa.7.8.vec.insert32.epil, %for.body.epil ]
  %.fca.0.insert = insertvalue { <2 x float>, <2 x float> } poison, <2 x float> %retval.sroa.0.1, 0
  %.fca.1.insert = insertvalue { <2 x float>, <2 x float> } %.fca.0.insert, <2 x float> %retval.sroa.7.1, 1
  ret { <2 x float>, <2 x float> } %.fca.1.insert
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local noundef i32 @_ZNK10btSoftBody12clusterCountEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #19 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !124
  ret i32 %0
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local { <2 x float>, <2 x float> } @_ZN10btSoftBody10clusterComEPKNS_7ClusterE(ptr nocapture noundef readonly %cluster) local_unnamed_addr #18 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %cluster, i64 0, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !319
  %cmp38 = icmp sgt i32 %0, 0
  br i1 %cmp38, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %cluster, i64 0, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !320
  %m_data.i20 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 1, i32 5
  %2 = load ptr, ptr %m_data.i20, align 8, !tbaa !39
  %wide.trip.count = zext i32 %0 to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %3 = icmp eq i32 %0, 1
  br i1 %3, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body, %for.body.lr.ph
  %add.i.lcssa.ph = phi float [ undef, %for.body.lr.ph ], [ %add.i.1, %for.body ]
  %.lcssa.ph = phi <2 x float> [ undef, %for.body.lr.ph ], [ %32, %for.body ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.1, %for.body ]
  %com.sroa.0.039.unr = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %add.i.1, %for.body ]
  %.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph ], [ %32, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.loopexit.unr-lcssa
  %arrayidx.i.epil = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv.unr
  %4 = load ptr, ptr %arrayidx.i.epil, align 8, !tbaa !219
  %m_x.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1
  %arrayidx.i22.epil = getelementptr inbounds float, ptr %2, i64 %indvars.iv.unr
  %5 = load float, ptr %m_x.epil, align 4, !tbaa !137
  %6 = load float, ptr %arrayidx.i22.epil, align 4, !tbaa !137
  %mul.i23.epil = fmul float %5, %6
  %arrayidx3.i24.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 1
  %7 = load <2 x float>, ptr %arrayidx3.i24.epil, align 4, !tbaa !137
  %8 = insertelement <2 x float> poison, float %6, i64 0
  %9 = shufflevector <2 x float> %8, <2 x float> poison, <2 x i32> zeroinitializer
  %10 = fmul <2 x float> %9, %7
  %add.i.epil = fadd float %com.sroa.0.039.unr, %mul.i23.epil
  %11 = fadd <2 x float> %.unr, %10
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body.epil, %for.cond.cleanup.loopexit.unr-lcssa, %entry
  %com.sroa.0.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %add.i.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %add.i.epil, %for.body.epil ]
  %12 = phi <2 x float> [ zeroinitializer, %entry ], [ %.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %11, %for.body.epil ]
  %m_imass = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 5
  %13 = load float, ptr %m_imass, align 4, !tbaa !137
  %mul.i = fmul float %com.sroa.0.0.lcssa, %13
  %14 = extractelement <2 x float> %12, i64 0
  %mul4.i = fmul float %14, %13
  %15 = extractelement <2 x float> %12, i64 1
  %mul8.i = fmul float %15, %13
  %retval.sroa.0.0.vec.insert.i = insertelement <2 x float> undef, float %mul.i, i64 0
  %retval.sroa.0.4.vec.insert.i = insertelement <2 x float> %retval.sroa.0.0.vec.insert.i, float %mul4.i, i64 1
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i, i64 0
  %.fca.0.insert.i = insertvalue { <2 x float>, <2 x float> } poison, <2 x float> %retval.sroa.0.4.vec.insert.i, 0
  %.fca.1.insert.i = insertvalue { <2 x float>, <2 x float> } %.fca.0.insert.i, <2 x float> %retval.sroa.3.12.vec.insert.i, 1
  ret { <2 x float>, <2 x float> } %.fca.1.insert.i

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.1, %for.body ]
  %com.sroa.0.039 = phi float [ 0.000000e+00, %for.body.lr.ph.new ], [ %add.i.1, %for.body ]
  %16 = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.new ], [ %32, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.1, %for.body ]
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv
  %17 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %17, i64 0, i32 1
  %arrayidx.i22 = getelementptr inbounds float, ptr %2, i64 %indvars.iv
  %18 = load float, ptr %m_x, align 4, !tbaa !137
  %19 = load float, ptr %arrayidx.i22, align 4, !tbaa !137
  %mul.i23 = fmul float %18, %19
  %arrayidx3.i24 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %17, i64 0, i32 1, i32 0, i64 1
  %20 = load <2 x float>, ptr %arrayidx3.i24, align 4, !tbaa !137
  %21 = insertelement <2 x float> poison, float %19, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> zeroinitializer
  %23 = fmul <2 x float> %22, %20
  %add.i = fadd float %com.sroa.0.039, %mul.i23
  %24 = fadd <2 x float> %16, %23
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.i.1 = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv.next
  %25 = load ptr, ptr %arrayidx.i.1, align 8, !tbaa !219
  %m_x.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %25, i64 0, i32 1
  %arrayidx.i22.1 = getelementptr inbounds float, ptr %2, i64 %indvars.iv.next
  %26 = load float, ptr %m_x.1, align 4, !tbaa !137
  %27 = load float, ptr %arrayidx.i22.1, align 4, !tbaa !137
  %mul.i23.1 = fmul float %26, %27
  %arrayidx3.i24.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %25, i64 0, i32 1, i32 0, i64 1
  %28 = load <2 x float>, ptr %arrayidx3.i24.1, align 4, !tbaa !137
  %29 = insertelement <2 x float> poison, float %27, i64 0
  %30 = shufflevector <2 x float> %29, <2 x float> poison, <2 x i32> zeroinitializer
  %31 = fmul <2 x float> %30, %28
  %add.i.1 = fadd float %add.i, %mul.i23.1
  %32 = fadd <2 x float> %24, %31
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local { <2 x float>, <2 x float> } @_ZNK10btSoftBody10clusterComEi(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, i32 noundef %cluster) local_unnamed_addr #18 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %idxprom.i = sext i32 %cluster to i64
  %arrayidx.i = getelementptr inbounds ptr, ptr %0, i64 %idxprom.i
  %1 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %1, i64 0, i32 2
  %2 = load i32, ptr %m_size.i.i, align 4, !tbaa !319
  %cmp38.i = icmp sgt i32 %2, 0
  br i1 %cmp38.i, label %for.body.lr.ph.i, label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %1, i64 0, i32 5
  %3 = load ptr, ptr %m_data.i.i, align 8, !tbaa !320
  %m_data.i20.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 1, i32 5
  %4 = load ptr, ptr %m_data.i20.i, align 8, !tbaa !39
  %wide.trip.count.i = zext i32 %2 to i64
  %xtraiter = and i64 %wide.trip.count.i, 1
  %5 = icmp eq i32 %2, 1
  br i1 %5, label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %wide.trip.count.i, 4294967294
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.1, %for.body.i ]
  %com.sroa.0.039.i = phi float [ 0.000000e+00, %for.body.lr.ph.i.new ], [ %add.i.i.1, %for.body.i ]
  %6 = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i.new ], [ %22, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.1, %for.body.i ]
  %arrayidx.i.i = getelementptr inbounds ptr, ptr %3, i64 %indvars.iv.i
  %7 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !219
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 0, i32 1
  %arrayidx.i22.i = getelementptr inbounds float, ptr %4, i64 %indvars.iv.i
  %8 = load float, ptr %m_x.i, align 4, !tbaa !137
  %9 = load float, ptr %arrayidx.i22.i, align 4, !tbaa !137
  %mul.i23.i = fmul float %8, %9
  %arrayidx3.i24.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 0, i32 1, i32 0, i64 1
  %10 = load <2 x float>, ptr %arrayidx3.i24.i, align 4, !tbaa !137
  %11 = insertelement <2 x float> poison, float %9, i64 0
  %12 = shufflevector <2 x float> %11, <2 x float> poison, <2 x i32> zeroinitializer
  %13 = fmul <2 x float> %12, %10
  %add.i.i = fadd float %com.sroa.0.039.i, %mul.i23.i
  %14 = fadd <2 x float> %6, %13
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds ptr, ptr %3, i64 %indvars.iv.next.i
  %15 = load ptr, ptr %arrayidx.i.i.1, align 8, !tbaa !219
  %m_x.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %15, i64 0, i32 1
  %arrayidx.i22.i.1 = getelementptr inbounds float, ptr %4, i64 %indvars.iv.next.i
  %16 = load float, ptr %m_x.i.1, align 4, !tbaa !137
  %17 = load float, ptr %arrayidx.i22.i.1, align 4, !tbaa !137
  %mul.i23.i.1 = fmul float %16, %17
  %arrayidx3.i24.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %15, i64 0, i32 1, i32 0, i64 1
  %18 = load <2 x float>, ptr %arrayidx3.i24.i.1, align 4, !tbaa !137
  %19 = insertelement <2 x float> poison, float %17, i64 0
  %20 = shufflevector <2 x float> %19, <2 x float> poison, <2 x i32> zeroinitializer
  %21 = fmul <2 x float> %20, %18
  %add.i.i.1 = fadd float %add.i.i, %mul.i23.i.1
  %22 = fadd <2 x float> %14, %21
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa, label %for.body.i

_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa: ; preds = %for.body.i, %for.body.lr.ph.i
  %add.i.i.lcssa.ph = phi float [ undef, %for.body.lr.ph.i ], [ %add.i.i.1, %for.body.i ]
  %.lcssa.ph = phi <2 x float> [ undef, %for.body.lr.ph.i ], [ %22, %for.body.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i.1, %for.body.i ]
  %com.sroa.0.039.i.unr = phi float [ 0.000000e+00, %for.body.lr.ph.i ], [ %add.i.i.1, %for.body.i ]
  %.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i ], [ %22, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit, label %for.body.i.epil

for.body.i.epil:                                  ; preds = %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa
  %arrayidx.i.i.epil = getelementptr inbounds ptr, ptr %3, i64 %indvars.iv.i.unr
  %23 = load ptr, ptr %arrayidx.i.i.epil, align 8, !tbaa !219
  %m_x.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %23, i64 0, i32 1
  %arrayidx.i22.i.epil = getelementptr inbounds float, ptr %4, i64 %indvars.iv.i.unr
  %24 = load float, ptr %m_x.i.epil, align 4, !tbaa !137
  %25 = load float, ptr %arrayidx.i22.i.epil, align 4, !tbaa !137
  %mul.i23.i.epil = fmul float %24, %25
  %arrayidx3.i24.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %23, i64 0, i32 1, i32 0, i64 1
  %26 = load <2 x float>, ptr %arrayidx3.i24.i.epil, align 4, !tbaa !137
  %27 = insertelement <2 x float> poison, float %25, i64 0
  %28 = shufflevector <2 x float> %27, <2 x float> poison, <2 x i32> zeroinitializer
  %29 = fmul <2 x float> %28, %26
  %add.i.i.epil = fadd float %com.sroa.0.039.i.unr, %mul.i23.i.epil
  %30 = fadd <2 x float> %.unr, %29
  br label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit

_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit:  ; preds = %for.body.i.epil, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa, %entry
  %com.sroa.0.0.lcssa.i = phi float [ 0.000000e+00, %entry ], [ %add.i.i.lcssa.ph, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa ], [ %add.i.i.epil, %for.body.i.epil ]
  %31 = phi <2 x float> [ zeroinitializer, %entry ], [ %.lcssa.ph, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa ], [ %30, %for.body.i.epil ]
  %m_imass.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 5
  %32 = load float, ptr %m_imass.i, align 4, !tbaa !137
  %mul.i.i = fmul float %com.sroa.0.0.lcssa.i, %32
  %33 = extractelement <2 x float> %31, i64 0
  %mul4.i.i = fmul float %33, %32
  %34 = extractelement <2 x float> %31, i64 1
  %mul8.i.i = fmul float %34, %32
  %retval.sroa.0.0.vec.insert.i.i = insertelement <2 x float> undef, float %mul.i.i, i64 0
  %retval.sroa.0.4.vec.insert.i.i = insertelement <2 x float> %retval.sroa.0.0.vec.insert.i.i, float %mul4.i.i, i64 1
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i, i64 0
  %.fca.0.insert.i.i = insertvalue { <2 x float>, <2 x float> } poison, <2 x float> %retval.sroa.0.4.vec.insert.i.i, 0
  %.fca.1.insert.i.i = insertvalue { <2 x float>, <2 x float> } %.fca.0.insert.i.i, <2 x float> %retval.sroa.3.12.vec.insert.i.i, 1
  ret { <2 x float>, <2 x float> } %.fca.1.insert.i.i
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local { <2 x float>, <2 x float> } @_ZN10btSoftBody15clusterVelocityEPKNS_7ClusterERK9btVector3(ptr nocapture noundef readonly %cluster, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %rpos) local_unnamed_addr #20 align 2 {
entry:
  %m_lv = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 13
  %m_av = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14
  %arrayidx3.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 2
  %0 = load float, ptr %arrayidx3.i.i, align 4, !tbaa !137
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14, i32 0, i64 2
  %1 = load float, ptr %m_lv, align 4, !tbaa !137
  %arrayidx5.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 13, i32 0, i64 1
  %2 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %3 = fneg float %2
  %4 = load <2 x float>, ptr %rpos, align 4, !tbaa !137
  %5 = extractelement <2 x float> %4, i64 1
  %neg.i.i = fmul float %5, %3
  %6 = load <2 x float>, ptr %m_av, align 4, !tbaa !137
  %7 = extractelement <2 x float> %6, i64 1
  %8 = tail call float @llvm.fmuladd.f32(float %7, float %0, float %neg.i.i)
  %9 = fneg <2 x float> %6
  %10 = insertelement <2 x float> poison, float %0, i64 0
  %11 = shufflevector <2 x float> %10, <2 x float> %4, <2 x i32> <i32 0, i32 2>
  %12 = fmul <2 x float> %11, %9
  %13 = insertelement <2 x float> poison, float %2, i64 0
  %14 = shufflevector <2 x float> %13, <2 x float> %6, <2 x i32> <i32 0, i32 2>
  %15 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %14, <2 x float> %4, <2 x float> %12)
  %add.i = fadd float %8, %1
  %16 = load <2 x float>, ptr %arrayidx5.i, align 4, !tbaa !137
  %17 = fadd <2 x float> %16, %15
  %retval.sroa.0.0.vec.insert.i = insertelement <2 x float> undef, float %add.i, i64 0
  %18 = shufflevector <2 x float> %retval.sroa.0.0.vec.insert.i, <2 x float> %17, <2 x i32> <i32 0, i32 2>
  %19 = shufflevector <2 x float> <float poison, float 0.000000e+00>, <2 x float> %17, <2 x i32> <i32 3, i32 1>
  %.fca.0.insert.i = insertvalue { <2 x float>, <2 x float> } poison, <2 x float> %18, 0
  %.fca.1.insert.i = insertvalue { <2 x float>, <2 x float> } %.fca.0.insert.i, <2 x float> %19, 1
  ret { <2 x float>, <2 x float> } %.fca.1.insert.i
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_ZN10btSoftBody15clusterVImpulseEPNS_7ClusterERK9btVector3S4_(ptr nocapture noundef %cluster, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %rpos, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %impulse) local_unnamed_addr #21 align 2 {
entry:
  %m_imass = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 5
  %0 = load float, ptr %m_imass, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %1 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %mul8.i.i = fmul float %0, %1
  %m_invwi = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7
  %arrayidx.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 1
  %2 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %arrayidx5.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 2
  %3 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %4 = fneg float %3
  %5 = load float, ptr %rpos, align 4, !tbaa !137
  %6 = fneg float %5
  %neg19.i.i = fmul float %1, %6
  %7 = fneg float %2
  %arrayidx5.i.i25 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i28 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2
  %8 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %9 = load float, ptr %arrayidx5.i18.i, align 4, !tbaa !137
  %arrayidx10.i21.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %10 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %m_vimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9
  %11 = load <2 x float>, ptr %impulse, align 4, !tbaa !137
  %12 = insertelement <2 x float> poison, float %0, i64 0
  %13 = shufflevector <2 x float> %12, <2 x float> poison, <2 x i32> zeroinitializer
  %14 = fmul <2 x float> %13, %11
  %15 = extractelement <2 x float> %11, i64 1
  %neg.i.i = fmul float %15, %4
  %16 = tail call float @llvm.fmuladd.f32(float %2, float %1, float %neg.i.i)
  %17 = extractelement <2 x float> %11, i64 0
  %18 = tail call float @llvm.fmuladd.f32(float %3, float %17, float %neg19.i.i)
  %neg30.i.i = fmul float %17, %7
  %19 = tail call float @llvm.fmuladd.f32(float %5, float %15, float %neg30.i.i)
  %mul8.i20.i = fmul float %18, %9
  %20 = tail call float @llvm.fmuladd.f32(float %8, float %16, float %mul8.i20.i)
  %21 = tail call float @llvm.fmuladd.f32(float %10, float %19, float %20)
  %22 = load <2 x float>, ptr %m_vimpulses, align 4, !tbaa !137
  %23 = fadd <2 x float> %14, %22
  store <2 x float> %23, ptr %m_vimpulses, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 0, i32 0, i64 2
  %24 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %mul8.i.i, %24
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %m_lv = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 13
  %25 = load <2 x float>, ptr %m_lv, align 4, !tbaa !137
  %26 = fadd <2 x float> %14, %25
  store <2 x float> %26, ptr %m_lv, align 4, !tbaa !137
  %arrayidx12.i34 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 13, i32 0, i64 2
  %27 = load float, ptr %arrayidx12.i34, align 4, !tbaa !137
  %add13.i35 = fadd float %mul8.i.i, %27
  store float %add13.i35, ptr %arrayidx12.i34, align 4, !tbaa !137
  %arrayidx8 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 1
  %28 = load float, ptr %m_invwi, align 4, !tbaa !137
  %29 = load float, ptr %arrayidx5.i.i25, align 4, !tbaa !137
  %30 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %31 = load float, ptr %arrayidx.i.i28, align 4, !tbaa !137
  %32 = load float, ptr %arrayidx5.i12.i, align 4, !tbaa !137
  %33 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %34 = insertelement <2 x float> poison, float %29, i64 0
  %35 = insertelement <2 x float> %34, float %32, i64 1
  %36 = insertelement <2 x float> poison, float %18, i64 0
  %37 = shufflevector <2 x float> %36, <2 x float> poison, <2 x i32> zeroinitializer
  %38 = fmul <2 x float> %35, %37
  %39 = insertelement <2 x float> poison, float %28, i64 0
  %40 = insertelement <2 x float> %39, float %31, i64 1
  %41 = insertelement <2 x float> poison, float %16, i64 0
  %42 = shufflevector <2 x float> %41, <2 x float> poison, <2 x i32> zeroinitializer
  %43 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %40, <2 x float> %42, <2 x float> %38)
  %44 = insertelement <2 x float> poison, float %30, i64 0
  %45 = insertelement <2 x float> %44, float %33, i64 1
  %46 = insertelement <2 x float> poison, float %19, i64 0
  %47 = shufflevector <2 x float> %46, <2 x float> poison, <2 x i32> zeroinitializer
  %48 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %45, <2 x float> %47, <2 x float> %43)
  %49 = load <2 x float>, ptr %arrayidx8, align 4, !tbaa !137
  %50 = fadd <2 x float> %48, %49
  store <2 x float> %50, ptr %arrayidx8, align 4, !tbaa !137
  %arrayidx12.i41 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 1, i32 0, i64 2
  %51 = load float, ptr %arrayidx12.i41, align 4, !tbaa !137
  %add13.i42 = fadd float %21, %51
  store float %add13.i42, ptr %arrayidx12.i41, align 4, !tbaa !137
  %m_av = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14
  %52 = load <2 x float>, ptr %m_av, align 4, !tbaa !137
  %53 = fadd <2 x float> %48, %52
  store <2 x float> %53, ptr %m_av, align 4, !tbaa !137
  %arrayidx12.i48 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14, i32 0, i64 2
  %54 = load float, ptr %arrayidx12.i48, align 4, !tbaa !137
  %add13.i49 = fadd float %21, %54
  store float %add13.i49, ptr %arrayidx12.i48, align 4, !tbaa !137
  %m_nvimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 11
  %55 = load i32, ptr %m_nvimpulses, align 8, !tbaa !321
  %inc = add nsw i32 %55, 1
  store i32 %inc, ptr %m_nvimpulses, align 8, !tbaa !321
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_ZN10btSoftBody15clusterDImpulseEPNS_7ClusterERK9btVector3S4_(ptr nocapture noundef %cluster, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %rpos, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %impulse) local_unnamed_addr #21 align 2 {
entry:
  %m_imass = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 5
  %0 = load float, ptr %m_imass, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %1 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %mul8.i.i = fmul float %0, %1
  %m_invwi = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7
  %arrayidx.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 1
  %2 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %arrayidx5.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 2
  %3 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %4 = fneg float %3
  %5 = load float, ptr %rpos, align 4, !tbaa !137
  %6 = fneg float %5
  %neg19.i.i = fmul float %1, %6
  %7 = fneg float %2
  %arrayidx5.i.i21 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i24 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2
  %8 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %9 = load float, ptr %arrayidx5.i18.i, align 4, !tbaa !137
  %arrayidx10.i21.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %10 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %m_dimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10
  %11 = load <2 x float>, ptr %impulse, align 4, !tbaa !137
  %12 = insertelement <2 x float> poison, float %0, i64 0
  %13 = shufflevector <2 x float> %12, <2 x float> poison, <2 x i32> zeroinitializer
  %14 = fmul <2 x float> %13, %11
  %15 = extractelement <2 x float> %11, i64 1
  %neg.i.i = fmul float %15, %4
  %16 = tail call float @llvm.fmuladd.f32(float %2, float %1, float %neg.i.i)
  %17 = extractelement <2 x float> %11, i64 0
  %18 = tail call float @llvm.fmuladd.f32(float %3, float %17, float %neg19.i.i)
  %neg30.i.i = fmul float %17, %7
  %19 = tail call float @llvm.fmuladd.f32(float %5, float %15, float %neg30.i.i)
  %mul8.i20.i = fmul float %18, %9
  %20 = tail call float @llvm.fmuladd.f32(float %8, float %16, float %mul8.i20.i)
  %21 = tail call float @llvm.fmuladd.f32(float %10, float %19, float %20)
  %22 = load <2 x float>, ptr %m_dimpulses, align 4, !tbaa !137
  %23 = fadd <2 x float> %14, %22
  store <2 x float> %23, ptr %m_dimpulses, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 0, i32 0, i64 2
  %24 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %mul8.i.i, %24
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %arrayidx7 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 1
  %25 = load float, ptr %m_invwi, align 4, !tbaa !137
  %26 = load float, ptr %arrayidx5.i.i21, align 4, !tbaa !137
  %27 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %28 = load float, ptr %arrayidx.i.i24, align 4, !tbaa !137
  %29 = load float, ptr %arrayidx5.i12.i, align 4, !tbaa !137
  %30 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %31 = insertelement <2 x float> poison, float %26, i64 0
  %32 = insertelement <2 x float> %31, float %29, i64 1
  %33 = insertelement <2 x float> poison, float %18, i64 0
  %34 = shufflevector <2 x float> %33, <2 x float> poison, <2 x i32> zeroinitializer
  %35 = fmul <2 x float> %32, %34
  %36 = insertelement <2 x float> poison, float %25, i64 0
  %37 = insertelement <2 x float> %36, float %28, i64 1
  %38 = insertelement <2 x float> poison, float %16, i64 0
  %39 = shufflevector <2 x float> %38, <2 x float> poison, <2 x i32> zeroinitializer
  %40 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %37, <2 x float> %39, <2 x float> %35)
  %41 = insertelement <2 x float> poison, float %27, i64 0
  %42 = insertelement <2 x float> %41, float %30, i64 1
  %43 = insertelement <2 x float> poison, float %19, i64 0
  %44 = shufflevector <2 x float> %43, <2 x float> poison, <2 x i32> zeroinitializer
  %45 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %42, <2 x float> %44, <2 x float> %40)
  %46 = load <2 x float>, ptr %arrayidx7, align 4, !tbaa !137
  %47 = fadd <2 x float> %45, %46
  store <2 x float> %47, ptr %arrayidx7, align 4, !tbaa !137
  %arrayidx12.i30 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 1, i32 0, i64 2
  %48 = load float, ptr %arrayidx12.i30, align 4, !tbaa !137
  %add13.i31 = fadd float %21, %48
  store float %add13.i31, ptr %arrayidx12.i30, align 4, !tbaa !137
  %m_ndimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 12
  %49 = load i32, ptr %m_ndimpulses, align 4, !tbaa !322
  %inc = add nsw i32 %49, 1
  store i32 %inc, ptr %m_ndimpulses, align 4, !tbaa !322
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_ZN10btSoftBody14clusterImpulseEPNS_7ClusterERK9btVector3RKNS_7ImpulseE(ptr nocapture noundef %cluster, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %rpos, ptr nocapture noundef nonnull readonly align 4 dereferenceable(33) %impulse) local_unnamed_addr #21 align 2 {
entry:
  %m_asVelocity = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 2
  %bf.load = load i8, ptr %m_asVelocity, align 4
  %0 = and i8 %bf.load, 1
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %m_imass.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 5
  %1 = load float, ptr %m_imass.i, align 4, !tbaa !137
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %2 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %mul8.i.i.i = fmul float %1, %2
  %m_invwi.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7
  %arrayidx.i.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 1
  %3 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 2
  %4 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %5 = fneg float %4
  %6 = load float, ptr %rpos, align 4, !tbaa !137
  %7 = fneg float %6
  %neg19.i.i.i = fmul float %2, %7
  %8 = fneg float %3
  %arrayidx5.i.i25.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i28.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2
  %9 = load float, ptr %arrayidx.i17.i.i, align 4, !tbaa !137
  %arrayidx5.i18.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %10 = load float, ptr %arrayidx5.i18.i.i, align 4, !tbaa !137
  %arrayidx10.i21.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %11 = load float, ptr %arrayidx10.i21.i.i, align 4, !tbaa !137
  %m_vimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9
  %12 = load <2 x float>, ptr %impulse, align 4, !tbaa !137
  %13 = insertelement <2 x float> poison, float %1, i64 0
  %14 = shufflevector <2 x float> %13, <2 x float> poison, <2 x i32> zeroinitializer
  %15 = fmul <2 x float> %14, %12
  %16 = extractelement <2 x float> %12, i64 1
  %neg.i.i.i = fmul float %16, %5
  %17 = tail call float @llvm.fmuladd.f32(float %3, float %2, float %neg.i.i.i)
  %18 = extractelement <2 x float> %12, i64 0
  %19 = tail call float @llvm.fmuladd.f32(float %4, float %18, float %neg19.i.i.i)
  %neg30.i.i.i = fmul float %18, %8
  %20 = tail call float @llvm.fmuladd.f32(float %6, float %16, float %neg30.i.i.i)
  %mul8.i20.i.i = fmul float %19, %10
  %21 = tail call float @llvm.fmuladd.f32(float %9, float %17, float %mul8.i20.i.i)
  %22 = tail call float @llvm.fmuladd.f32(float %11, float %20, float %21)
  %23 = load <2 x float>, ptr %m_vimpulses.i, align 4, !tbaa !137
  %24 = fadd <2 x float> %15, %23
  store <2 x float> %24, ptr %m_vimpulses.i, align 4, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 0, i32 0, i64 2
  %25 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %add13.i.i = fadd float %mul8.i.i.i, %25
  store float %add13.i.i, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %m_lv.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 13
  %26 = load <2 x float>, ptr %m_lv.i, align 4, !tbaa !137
  %27 = fadd <2 x float> %15, %26
  store <2 x float> %27, ptr %m_lv.i, align 4, !tbaa !137
  %arrayidx12.i34.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 13, i32 0, i64 2
  %28 = load float, ptr %arrayidx12.i34.i, align 4, !tbaa !137
  %add13.i35.i = fadd float %mul8.i.i.i, %28
  store float %add13.i35.i, ptr %arrayidx12.i34.i, align 4, !tbaa !137
  %arrayidx8.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 1
  %29 = load float, ptr %m_invwi.i, align 4, !tbaa !137
  %30 = load float, ptr %arrayidx5.i.i25.i, align 4, !tbaa !137
  %31 = load float, ptr %arrayidx10.i.i.i, align 4, !tbaa !137
  %32 = load float, ptr %arrayidx.i.i28.i, align 4, !tbaa !137
  %33 = load float, ptr %arrayidx5.i12.i.i, align 4, !tbaa !137
  %34 = load float, ptr %arrayidx10.i15.i.i, align 4, !tbaa !137
  %35 = insertelement <2 x float> poison, float %30, i64 0
  %36 = insertelement <2 x float> %35, float %33, i64 1
  %37 = insertelement <2 x float> poison, float %19, i64 0
  %38 = shufflevector <2 x float> %37, <2 x float> poison, <2 x i32> zeroinitializer
  %39 = fmul <2 x float> %36, %38
  %40 = insertelement <2 x float> poison, float %29, i64 0
  %41 = insertelement <2 x float> %40, float %32, i64 1
  %42 = insertelement <2 x float> poison, float %17, i64 0
  %43 = shufflevector <2 x float> %42, <2 x float> poison, <2 x i32> zeroinitializer
  %44 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %41, <2 x float> %43, <2 x float> %39)
  %45 = insertelement <2 x float> poison, float %31, i64 0
  %46 = insertelement <2 x float> %45, float %34, i64 1
  %47 = insertelement <2 x float> poison, float %20, i64 0
  %48 = shufflevector <2 x float> %47, <2 x float> poison, <2 x i32> zeroinitializer
  %49 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %46, <2 x float> %48, <2 x float> %44)
  %50 = load <2 x float>, ptr %arrayidx8.i, align 4, !tbaa !137
  %51 = fadd <2 x float> %49, %50
  store <2 x float> %51, ptr %arrayidx8.i, align 4, !tbaa !137
  %arrayidx12.i41.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 1, i32 0, i64 2
  %52 = load float, ptr %arrayidx12.i41.i, align 4, !tbaa !137
  %add13.i42.i = fadd float %22, %52
  store float %add13.i42.i, ptr %arrayidx12.i41.i, align 4, !tbaa !137
  %m_av.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14
  %53 = load <2 x float>, ptr %m_av.i, align 4, !tbaa !137
  %54 = fadd <2 x float> %49, %53
  store <2 x float> %54, ptr %m_av.i, align 4, !tbaa !137
  %arrayidx12.i48.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14, i32 0, i64 2
  %55 = load float, ptr %arrayidx12.i48.i, align 4, !tbaa !137
  %add13.i49.i = fadd float %22, %55
  store float %add13.i49.i, ptr %arrayidx12.i48.i, align 4, !tbaa !137
  %m_nvimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 11
  %56 = load i32, ptr %m_nvimpulses.i, align 8, !tbaa !321
  %inc.i = add nsw i32 %56, 1
  store i32 %inc.i, ptr %m_nvimpulses.i, align 8, !tbaa !321
  %bf.load1.pre = load i8, ptr %m_asVelocity, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %bf.load1 = phi i8 [ %bf.load1.pre, %if.then ], [ %bf.load, %entry ]
  %bf.shl2.mask = and i8 %bf.load1, 2
  %tobool5.not = icmp eq i8 %bf.shl2.mask, 0
  br i1 %tobool5.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  %m_drift = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 1
  %m_imass.i13 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 5
  %57 = load float, ptr %m_imass.i13, align 4, !tbaa !137
  %arrayidx7.i.i.i17 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 1, i32 0, i64 2
  %58 = load float, ptr %arrayidx7.i.i.i17, align 4, !tbaa !137
  %mul8.i.i.i18 = fmul float %57, %58
  %m_invwi.i19 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7
  %arrayidx.i.i.i20 = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 1
  %59 = load float, ptr %arrayidx.i.i.i20, align 4, !tbaa !137
  %arrayidx5.i.i.i21 = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 2
  %60 = load float, ptr %arrayidx5.i.i.i21, align 4, !tbaa !137
  %61 = fneg float %60
  %62 = load float, ptr %rpos, align 4, !tbaa !137
  %63 = fneg float %62
  %neg19.i.i.i23 = fmul float %58, %63
  %64 = fneg float %59
  %arrayidx5.i.i21.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i.i25 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i24.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i.i26 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i28 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i29 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2
  %65 = load float, ptr %arrayidx.i17.i.i29, align 4, !tbaa !137
  %arrayidx5.i18.i.i30 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %66 = load float, ptr %arrayidx5.i18.i.i30, align 4, !tbaa !137
  %arrayidx10.i21.i.i32 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %67 = load float, ptr %arrayidx10.i21.i.i32, align 4, !tbaa !137
  %m_dimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10
  %68 = load <2 x float>, ptr %m_drift, align 4, !tbaa !137
  %69 = insertelement <2 x float> poison, float %57, i64 0
  %70 = shufflevector <2 x float> %69, <2 x float> poison, <2 x i32> zeroinitializer
  %71 = fmul <2 x float> %70, %68
  %72 = extractelement <2 x float> %68, i64 1
  %neg.i.i.i22 = fmul float %72, %61
  %73 = tail call float @llvm.fmuladd.f32(float %59, float %58, float %neg.i.i.i22)
  %74 = extractelement <2 x float> %68, i64 0
  %75 = tail call float @llvm.fmuladd.f32(float %60, float %74, float %neg19.i.i.i23)
  %neg30.i.i.i24 = fmul float %74, %64
  %76 = tail call float @llvm.fmuladd.f32(float %62, float %72, float %neg30.i.i.i24)
  %mul8.i20.i.i31 = fmul float %75, %66
  %77 = tail call float @llvm.fmuladd.f32(float %65, float %73, float %mul8.i20.i.i31)
  %78 = tail call float @llvm.fmuladd.f32(float %67, float %76, float %77)
  %79 = load <2 x float>, ptr %m_dimpulses.i, align 4, !tbaa !137
  %80 = fadd <2 x float> %71, %79
  store <2 x float> %80, ptr %m_dimpulses.i, align 4, !tbaa !137
  %arrayidx12.i.i36 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 0, i32 0, i64 2
  %81 = load float, ptr %arrayidx12.i.i36, align 4, !tbaa !137
  %add13.i.i37 = fadd float %mul8.i.i.i18, %81
  store float %add13.i.i37, ptr %arrayidx12.i.i36, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 1
  %82 = load float, ptr %m_invwi.i19, align 4, !tbaa !137
  %83 = load float, ptr %arrayidx5.i.i21.i, align 4, !tbaa !137
  %84 = load float, ptr %arrayidx10.i.i.i25, align 4, !tbaa !137
  %85 = load float, ptr %arrayidx.i.i24.i, align 4, !tbaa !137
  %86 = load float, ptr %arrayidx5.i12.i.i26, align 4, !tbaa !137
  %87 = load float, ptr %arrayidx10.i15.i.i28, align 4, !tbaa !137
  %88 = insertelement <2 x float> poison, float %83, i64 0
  %89 = insertelement <2 x float> %88, float %86, i64 1
  %90 = insertelement <2 x float> poison, float %75, i64 0
  %91 = shufflevector <2 x float> %90, <2 x float> poison, <2 x i32> zeroinitializer
  %92 = fmul <2 x float> %89, %91
  %93 = insertelement <2 x float> poison, float %82, i64 0
  %94 = insertelement <2 x float> %93, float %85, i64 1
  %95 = insertelement <2 x float> poison, float %73, i64 0
  %96 = shufflevector <2 x float> %95, <2 x float> poison, <2 x i32> zeroinitializer
  %97 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %94, <2 x float> %96, <2 x float> %92)
  %98 = insertelement <2 x float> poison, float %84, i64 0
  %99 = insertelement <2 x float> %98, float %87, i64 1
  %100 = insertelement <2 x float> poison, float %76, i64 0
  %101 = shufflevector <2 x float> %100, <2 x float> poison, <2 x i32> zeroinitializer
  %102 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %99, <2 x float> %101, <2 x float> %97)
  %103 = load <2 x float>, ptr %arrayidx7.i, align 4, !tbaa !137
  %104 = fadd <2 x float> %102, %103
  store <2 x float> %104, ptr %arrayidx7.i, align 4, !tbaa !137
  %arrayidx12.i30.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 1, i32 0, i64 2
  %105 = load float, ptr %arrayidx12.i30.i, align 4, !tbaa !137
  %add13.i31.i = fadd float %78, %105
  store float %add13.i31.i, ptr %arrayidx12.i30.i, align 4, !tbaa !137
  %m_ndimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 12
  %106 = load i32, ptr %m_ndimpulses.i, align 4, !tbaa !322
  %inc.i38 = add nsw i32 %106, 1
  store i32 %inc.i38, ptr %m_ndimpulses.i, align 4, !tbaa !322
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_ZN10btSoftBody16clusterVAImpulseEPNS_7ClusterERK9btVector3(ptr nocapture noundef %cluster, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %impulse) local_unnamed_addr #21 align 2 {
entry:
  %m_invwi = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7
  %0 = load float, ptr %impulse, align 4, !tbaa !137
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 1
  %1 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %arrayidx10.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %2 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2
  %3 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %4 = load float, ptr %arrayidx5.i18.i, align 4, !tbaa !137
  %mul8.i20.i = fmul float %1, %4
  %5 = tail call float @llvm.fmuladd.f32(float %3, float %0, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %6 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %7 = tail call float @llvm.fmuladd.f32(float %6, float %2, float %5)
  %arrayidx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 1
  %8 = load float, ptr %m_invwi, align 4, !tbaa !137
  %9 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %10 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %11 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %12 = load float, ptr %arrayidx5.i12.i, align 4, !tbaa !137
  %13 = insertelement <2 x float> poison, float %1, i64 0
  %14 = shufflevector <2 x float> %13, <2 x float> poison, <2 x i32> zeroinitializer
  %15 = insertelement <2 x float> poison, float %9, i64 0
  %16 = insertelement <2 x float> %15, float %12, i64 1
  %17 = fmul <2 x float> %14, %16
  %18 = insertelement <2 x float> poison, float %8, i64 0
  %19 = insertelement <2 x float> %18, float %11, i64 1
  %20 = insertelement <2 x float> poison, float %0, i64 0
  %21 = shufflevector <2 x float> %20, <2 x float> poison, <2 x i32> zeroinitializer
  %22 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %19, <2 x float> %21, <2 x float> %17)
  %23 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %24 = insertelement <2 x float> poison, float %10, i64 0
  %25 = insertelement <2 x float> %24, float %23, i64 1
  %26 = insertelement <2 x float> poison, float %2, i64 0
  %27 = shufflevector <2 x float> %26, <2 x float> poison, <2 x i32> zeroinitializer
  %28 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %25, <2 x float> %27, <2 x float> %22)
  %29 = load <2 x float>, ptr %arrayidx, align 4, !tbaa !137
  %30 = fadd <2 x float> %28, %29
  store <2 x float> %30, ptr %arrayidx, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 1, i32 0, i64 2
  %31 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %7, %31
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %m_av = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14
  %32 = load <2 x float>, ptr %m_av, align 4, !tbaa !137
  %33 = fadd <2 x float> %28, %32
  store <2 x float> %33, ptr %m_av, align 4, !tbaa !137
  %arrayidx12.i11 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14, i32 0, i64 2
  %34 = load float, ptr %arrayidx12.i11, align 4, !tbaa !137
  %add13.i12 = fadd float %7, %34
  store float %add13.i12, ptr %arrayidx12.i11, align 4, !tbaa !137
  %m_nvimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 11
  %35 = load i32, ptr %m_nvimpulses, align 8, !tbaa !321
  %inc = add nsw i32 %35, 1
  store i32 %inc, ptr %m_nvimpulses, align 8, !tbaa !321
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_ZN10btSoftBody16clusterDAImpulseEPNS_7ClusterERK9btVector3(ptr nocapture noundef %cluster, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %impulse) local_unnamed_addr #21 align 2 {
entry:
  %m_invwi = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7
  %0 = load float, ptr %impulse, align 4, !tbaa !137
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 1
  %1 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %arrayidx10.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %2 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2
  %3 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %4 = load float, ptr %arrayidx5.i18.i, align 4, !tbaa !137
  %mul8.i20.i = fmul float %1, %4
  %5 = tail call float @llvm.fmuladd.f32(float %3, float %0, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %6 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %7 = tail call float @llvm.fmuladd.f32(float %6, float %2, float %5)
  %arrayidx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 1
  %8 = load float, ptr %m_invwi, align 4, !tbaa !137
  %9 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %10 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %11 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %12 = load float, ptr %arrayidx5.i12.i, align 4, !tbaa !137
  %13 = insertelement <2 x float> poison, float %1, i64 0
  %14 = shufflevector <2 x float> %13, <2 x float> poison, <2 x i32> zeroinitializer
  %15 = insertelement <2 x float> poison, float %9, i64 0
  %16 = insertelement <2 x float> %15, float %12, i64 1
  %17 = fmul <2 x float> %14, %16
  %18 = insertelement <2 x float> poison, float %8, i64 0
  %19 = insertelement <2 x float> %18, float %11, i64 1
  %20 = insertelement <2 x float> poison, float %0, i64 0
  %21 = shufflevector <2 x float> %20, <2 x float> poison, <2 x i32> zeroinitializer
  %22 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %19, <2 x float> %21, <2 x float> %17)
  %23 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %24 = insertelement <2 x float> poison, float %10, i64 0
  %25 = insertelement <2 x float> %24, float %23, i64 1
  %26 = insertelement <2 x float> poison, float %2, i64 0
  %27 = shufflevector <2 x float> %26, <2 x float> poison, <2 x i32> zeroinitializer
  %28 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %25, <2 x float> %27, <2 x float> %22)
  %29 = load <2 x float>, ptr %arrayidx, align 4, !tbaa !137
  %30 = fadd <2 x float> %28, %29
  store <2 x float> %30, ptr %arrayidx, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 1, i32 0, i64 2
  %31 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %7, %31
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %m_ndimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 12
  %32 = load i32, ptr %m_ndimpulses, align 4, !tbaa !322
  %inc = add nsw i32 %32, 1
  store i32 %inc, ptr %m_ndimpulses, align 4, !tbaa !322
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_ZN10btSoftBody15clusterAImpulseEPNS_7ClusterERKNS_7ImpulseE(ptr nocapture noundef %cluster, ptr nocapture noundef nonnull readonly align 4 dereferenceable(33) %impulse) local_unnamed_addr #21 align 2 {
entry:
  %m_asVelocity = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 2
  %bf.load = load i8, ptr %m_asVelocity, align 4
  %0 = and i8 %bf.load, 1
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %m_invwi.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7
  %1 = load float, ptr %impulse, align 4, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 1
  %2 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %arrayidx10.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %3 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %arrayidx.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2
  %4 = load float, ptr %arrayidx.i17.i.i, align 4, !tbaa !137
  %arrayidx5.i18.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %5 = load float, ptr %arrayidx5.i18.i.i, align 4, !tbaa !137
  %mul8.i20.i.i = fmul float %2, %5
  %6 = tail call float @llvm.fmuladd.f32(float %4, float %1, float %mul8.i20.i.i)
  %arrayidx10.i21.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %7 = load float, ptr %arrayidx10.i21.i.i, align 4, !tbaa !137
  %8 = tail call float @llvm.fmuladd.f32(float %7, float %3, float %6)
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 1
  %9 = load float, ptr %m_invwi.i, align 4, !tbaa !137
  %10 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %11 = load float, ptr %arrayidx10.i.i.i, align 4, !tbaa !137
  %12 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %13 = load float, ptr %arrayidx5.i12.i.i, align 4, !tbaa !137
  %14 = insertelement <2 x float> poison, float %2, i64 0
  %15 = shufflevector <2 x float> %14, <2 x float> poison, <2 x i32> zeroinitializer
  %16 = insertelement <2 x float> poison, float %10, i64 0
  %17 = insertelement <2 x float> %16, float %13, i64 1
  %18 = fmul <2 x float> %15, %17
  %19 = insertelement <2 x float> poison, float %9, i64 0
  %20 = insertelement <2 x float> %19, float %12, i64 1
  %21 = insertelement <2 x float> poison, float %1, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> zeroinitializer
  %23 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %20, <2 x float> %22, <2 x float> %18)
  %24 = load float, ptr %arrayidx10.i15.i.i, align 4, !tbaa !137
  %25 = insertelement <2 x float> poison, float %11, i64 0
  %26 = insertelement <2 x float> %25, float %24, i64 1
  %27 = insertelement <2 x float> poison, float %3, i64 0
  %28 = shufflevector <2 x float> %27, <2 x float> poison, <2 x i32> zeroinitializer
  %29 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %26, <2 x float> %28, <2 x float> %23)
  %30 = load <2 x float>, ptr %arrayidx.i, align 4, !tbaa !137
  %31 = fadd <2 x float> %29, %30
  store <2 x float> %31, ptr %arrayidx.i, align 4, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 1, i32 0, i64 2
  %32 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %add13.i.i = fadd float %8, %32
  store float %add13.i.i, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %m_av.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14
  %33 = load <2 x float>, ptr %m_av.i, align 4, !tbaa !137
  %34 = fadd <2 x float> %29, %33
  store <2 x float> %34, ptr %m_av.i, align 4, !tbaa !137
  %arrayidx12.i11.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14, i32 0, i64 2
  %35 = load float, ptr %arrayidx12.i11.i, align 4, !tbaa !137
  %add13.i12.i = fadd float %8, %35
  store float %add13.i12.i, ptr %arrayidx12.i11.i, align 4, !tbaa !137
  %m_nvimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 11
  %36 = load i32, ptr %m_nvimpulses.i, align 8, !tbaa !321
  %inc.i = add nsw i32 %36, 1
  store i32 %inc.i, ptr %m_nvimpulses.i, align 8, !tbaa !321
  %bf.load1.pre = load i8, ptr %m_asVelocity, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %bf.load1 = phi i8 [ %bf.load1.pre, %if.then ], [ %bf.load, %entry ]
  %bf.shl2.mask = and i8 %bf.load1, 2
  %tobool5.not = icmp eq i8 %bf.shl2.mask, 0
  br i1 %tobool5.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  %m_drift = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 1
  %m_invwi.i12 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7
  %37 = load float, ptr %m_drift, align 4, !tbaa !137
  %arrayidx5.i.i.i13 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx7.i.i.i14 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 1, i32 0, i64 1
  %38 = load float, ptr %arrayidx7.i.i.i14, align 4, !tbaa !137
  %arrayidx10.i.i.i16 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i.i17 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 1, i32 0, i64 2
  %39 = load float, ptr %arrayidx12.i.i.i17, align 4, !tbaa !137
  %arrayidx.i.i.i18 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i.i19 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i21 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i22 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2
  %40 = load float, ptr %arrayidx.i17.i.i22, align 4, !tbaa !137
  %arrayidx5.i18.i.i23 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %41 = load float, ptr %arrayidx5.i18.i.i23, align 4, !tbaa !137
  %mul8.i20.i.i24 = fmul float %38, %41
  %42 = tail call float @llvm.fmuladd.f32(float %40, float %37, float %mul8.i20.i.i24)
  %arrayidx10.i21.i.i25 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %43 = load float, ptr %arrayidx10.i21.i.i25, align 4, !tbaa !137
  %44 = tail call float @llvm.fmuladd.f32(float %43, float %39, float %42)
  %arrayidx.i26 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 1
  %45 = load float, ptr %m_invwi.i12, align 4, !tbaa !137
  %46 = load float, ptr %arrayidx5.i.i.i13, align 4, !tbaa !137
  %47 = load float, ptr %arrayidx10.i.i.i16, align 4, !tbaa !137
  %48 = load float, ptr %arrayidx.i.i.i18, align 4, !tbaa !137
  %49 = load float, ptr %arrayidx5.i12.i.i19, align 4, !tbaa !137
  %50 = insertelement <2 x float> poison, float %38, i64 0
  %51 = shufflevector <2 x float> %50, <2 x float> poison, <2 x i32> zeroinitializer
  %52 = insertelement <2 x float> poison, float %46, i64 0
  %53 = insertelement <2 x float> %52, float %49, i64 1
  %54 = fmul <2 x float> %51, %53
  %55 = insertelement <2 x float> poison, float %45, i64 0
  %56 = insertelement <2 x float> %55, float %48, i64 1
  %57 = insertelement <2 x float> poison, float %37, i64 0
  %58 = shufflevector <2 x float> %57, <2 x float> poison, <2 x i32> zeroinitializer
  %59 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %56, <2 x float> %58, <2 x float> %54)
  %60 = load float, ptr %arrayidx10.i15.i.i21, align 4, !tbaa !137
  %61 = insertelement <2 x float> poison, float %47, i64 0
  %62 = insertelement <2 x float> %61, float %60, i64 1
  %63 = insertelement <2 x float> poison, float %39, i64 0
  %64 = shufflevector <2 x float> %63, <2 x float> poison, <2 x i32> zeroinitializer
  %65 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %62, <2 x float> %64, <2 x float> %59)
  %66 = load <2 x float>, ptr %arrayidx.i26, align 4, !tbaa !137
  %67 = fadd <2 x float> %65, %66
  store <2 x float> %67, ptr %arrayidx.i26, align 4, !tbaa !137
  %arrayidx12.i.i30 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 1, i32 0, i64 2
  %68 = load float, ptr %arrayidx12.i.i30, align 4, !tbaa !137
  %add13.i.i31 = fadd float %44, %68
  store float %add13.i.i31, ptr %arrayidx12.i.i30, align 4, !tbaa !137
  %m_ndimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 12
  %69 = load i32, ptr %m_ndimpulses.i, align 4, !tbaa !322
  %inc.i32 = add nsw i32 %69, 1
  store i32 %inc.i32, ptr %m_ndimpulses.i, align 4, !tbaa !322
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_ZN10btSoftBody16clusterDCImpulseEPNS_7ClusterERK9btVector3(ptr nocapture noundef %cluster, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %impulse) local_unnamed_addr #22 align 2 {
entry:
  %m_imass = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 5
  %0 = load float, ptr %m_imass, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %1 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %mul8.i = fmul float %0, %1
  %m_dimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10
  %2 = load <2 x float>, ptr %impulse, align 4, !tbaa !137
  %3 = insertelement <2 x float> poison, float %0, i64 0
  %4 = shufflevector <2 x float> %3, <2 x float> poison, <2 x i32> zeroinitializer
  %5 = fmul <2 x float> %4, %2
  %6 = load <2 x float>, ptr %m_dimpulses, align 4, !tbaa !137
  %7 = fadd <2 x float> %5, %6
  store <2 x float> %7, ptr %m_dimpulses, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 0, i32 0, i64 2
  %8 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %mul8.i, %8
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %m_ndimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 12
  %9 = load i32, ptr %m_ndimpulses, align 4, !tbaa !322
  %inc = add nsw i32 %9, 1
  store i32 %inc, ptr %m_ndimpulses, align 4, !tbaa !322
  ret void
}

; Function Attrs: uwtable
define dso_local noundef i32 @_ZN10btSoftBody26generateBendingConstraintsEiPNS_8MaterialE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %distance, ptr noundef %mat) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %l.sroa.7.i = alloca <{ [2 x ptr], float, i8, [3 x i8], float, float, float, %class.btVector3, [4 x i8] }>, align 8
  %nodeLinks = alloca %class.btAlignedObjectArray.84, align 8
  %ref.tmp = alloca %struct.NodeLinks, align 8
  %cmp = icmp sgt i32 %distance, 1
  br i1 %cmp, label %if.then, label %cleanup

if.then:                                          ; preds = %entry
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %mul = mul nsw i32 %0, %0
  %1 = zext i32 %mul to i64
  %2 = shl nuw nsw i64 %1, 2
  %call2 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %2) #36
  %cmp3614 = icmp sgt i32 %0, 0
  br i1 %cmp3614, label %for.cond4.preheader.us.preheader, label %for.cond25.preheader

for.cond4.preheader.us.preheader:                 ; preds = %if.then
  %3 = zext i32 %0 to i64
  %wide.trip.count654 = zext i32 %0 to i64
  br label %for.cond4.preheader.us

for.cond4.preheader.us:                           ; preds = %for.cond4.preheader.us.preheader, %for.cond4.for.inc22_crit_edge.us
  %indvars.iv649 = phi i64 [ 0, %for.cond4.preheader.us.preheader ], [ %indvars.iv.next650, %for.cond4.for.inc22_crit_edge.us ]
  %4 = mul nsw i64 %indvars.iv649, %3
  %5 = add nuw nsw i64 %4, %indvars.iv649
  %arrayidx17.us = getelementptr inbounds i32, ptr %call2, i64 %5
  br label %for.body6.us

for.body6.us:                                     ; preds = %for.cond4.preheader.us, %for.inc.us
  %indvars.iv = phi i64 [ 0, %for.cond4.preheader.us ], [ %indvars.iv.next, %for.inc.us ]
  %cmp7.not.us = icmp eq i64 %indvars.iv, %indvars.iv649
  br i1 %cmp7.not.us, label %if.else.us, label %if.then8.us

if.then8.us:                                      ; preds = %for.body6.us
  %6 = mul nsw i64 %indvars.iv, %3
  %7 = add nuw nsw i64 %6, %indvars.iv649
  %arrayidx.us = getelementptr inbounds i32, ptr %call2, i64 %7
  store i32 2147483647, ptr %arrayidx.us, align 4, !tbaa !140
  %8 = add nuw nsw i64 %indvars.iv, %4
  %arrayidx13.us = getelementptr inbounds i32, ptr %call2, i64 %8
  store i32 2147483647, ptr %arrayidx13.us, align 4, !tbaa !140
  br label %for.inc.us

if.else.us:                                       ; preds = %for.body6.us
  store i32 0, ptr %arrayidx17.us, align 4, !tbaa !140
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.else.us, %if.then8.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count654
  br i1 %exitcond.not, label %for.cond4.for.inc22_crit_edge.us, label %for.body6.us

for.cond4.for.inc22_crit_edge.us:                 ; preds = %for.inc.us
  %indvars.iv.next650 = add nuw nsw i64 %indvars.iv649, 1
  %exitcond655.not = icmp eq i64 %indvars.iv.next650, %wide.trip.count654
  br i1 %exitcond655.not, label %for.cond25.preheader, label %for.cond4.preheader.us

for.cond25.preheader:                             ; preds = %for.cond4.for.inc22_crit_edge.us, %if.then
  %m_size.i423 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %9 = load i32, ptr %m_size.i423, align 4, !tbaa !92
  %cmp27616 = icmp sgt i32 %9, 0
  br i1 %cmp27616, label %for.body28.lr.ph, label %for.end55

for.body28.lr.ph:                                 ; preds = %for.cond25.preheader
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %10 = load ptr, ptr %m_data.i, align 8, !tbaa !91
  %m_data.i424 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %11 = load ptr, ptr %m_data.i424, align 8, !tbaa !87
  %sub.ptr.rhs.cast = ptrtoint ptr %11 to i64
  %wide.trip.count659 = zext i32 %9 to i64
  br label %for.body28

for.body28:                                       ; preds = %for.body28.lr.ph, %for.body28
  %indvars.iv656 = phi i64 [ 0, %for.body28.lr.ph ], [ %indvars.iv.next657, %for.body28 ]
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %10, i64 %indvars.iv656, i32 1
  %12 = load ptr, ptr %m_n, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %12 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 120
  %conv = trunc i64 %sub.ptr.div to i32
  %arrayidx37 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %10, i64 %indvars.iv656, i32 1, i64 1
  %13 = load ptr, ptr %arrayidx37, align 8, !tbaa !219
  %sub.ptr.lhs.cast40 = ptrtoint ptr %13 to i64
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast
  %sub.ptr.div43 = sdiv exact i64 %sub.ptr.sub42, 120
  %conv44 = trunc i64 %sub.ptr.div43 to i32
  %mul45 = mul nsw i32 %0, %conv44
  %add46 = add nsw i32 %mul45, %conv
  %idxprom47 = sext i32 %add46 to i64
  %arrayidx48 = getelementptr inbounds i32, ptr %call2, i64 %idxprom47
  store i32 1, ptr %arrayidx48, align 4, !tbaa !140
  %mul49 = mul nsw i32 %0, %conv
  %add50 = add nsw i32 %mul49, %conv44
  %idxprom51 = sext i32 %add50 to i64
  %arrayidx52 = getelementptr inbounds i32, ptr %call2, i64 %idxprom51
  store i32 1, ptr %arrayidx52, align 4, !tbaa !140
  %indvars.iv.next657 = add nuw nsw i64 %indvars.iv656, 1
  %exitcond660.not = icmp eq i64 %indvars.iv.next657, %wide.trip.count659
  br i1 %exitcond660.not, label %for.end55, label %for.body28

for.end55:                                        ; preds = %for.body28, %for.cond25.preheader
  %cmp56 = icmp eq i32 %distance, 2
  br i1 %cmp56, label %invoke.cont61, label %for.cond228.preheader

for.cond228.preheader:                            ; preds = %for.end55
  br i1 %cmp3614, label %for.cond232.preheader.us.preheader, label %delete.notnull

for.cond232.preheader.us.preheader:               ; preds = %for.cond228.preheader
  %14 = zext i32 %0 to i64
  %wide.trip.count683 = zext i32 %0 to i64
  br label %for.cond232.preheader.us

for.cond232.preheader.us:                         ; preds = %for.cond232.preheader.us.preheader, %for.cond232.for.inc270_crit_edge.us
  %indvars.iv679 = phi i64 [ 0, %for.cond232.preheader.us.preheader ], [ %indvars.iv.next680, %for.cond232.for.inc270_crit_edge.us ]
  %15 = mul nsw i64 %indvars.iv679, %14
  br label %for.body234.us

for.body234.us:                                   ; preds = %for.cond232.preheader.us, %for.cond232.loopexit.us
  %indvars.iv672 = phi i64 [ 0, %for.cond232.preheader.us ], [ %indvars.iv.next673, %for.cond232.loopexit.us ]
  %indvars.iv661 = phi i64 [ 1, %for.cond232.preheader.us ], [ %indvars.iv.next662, %for.cond232.loopexit.us ]
  %indvars.iv.next673 = add nuw nsw i64 %indvars.iv672, 1
  %cmp237618.us = icmp ult i64 %indvars.iv.next673, %14
  br i1 %cmp237618.us, label %for.body238.lr.ph.us, label %for.cond232.loopexit.us

for.body238.us:                                   ; preds = %for.body238.lr.ph.us, %if.end263.us
  %indvars.iv663 = phi i64 [ %indvars.iv661, %for.body238.lr.ph.us ], [ %indvars.iv.next664, %if.end263.us ]
  %16 = add nuw nsw i64 %indvars.iv663, %15
  %arrayidx243.us = getelementptr inbounds i32, ptr %call2, i64 %16
  %17 = load i32, ptr %arrayidx243.us, align 4, !tbaa !140
  %18 = load i32, ptr %arrayidx247.us, align 4, !tbaa !140
  %add248.us = add i32 %18, %17
  %19 = add nuw nsw i64 %indvars.iv663, %23
  %arrayidx252.us = getelementptr inbounds i32, ptr %call2, i64 %19
  %20 = load i32, ptr %arrayidx252.us, align 4, !tbaa !140
  %cmp253.us = icmp ugt i32 %20, %add248.us
  br i1 %cmp253.us, label %if.then254.us, label %if.end263.us

if.then254.us:                                    ; preds = %for.body238.us
  %21 = mul nsw i64 %indvars.iv663, %14
  %22 = add nuw nsw i64 %21, %indvars.iv672
  %arrayidx258.us = getelementptr inbounds i32, ptr %call2, i64 %22
  store i32 %add248.us, ptr %arrayidx258.us, align 4, !tbaa !140
  store i32 %add248.us, ptr %arrayidx252.us, align 4, !tbaa !140
  br label %if.end263.us

if.end263.us:                                     ; preds = %if.then254.us, %for.body238.us
  %indvars.iv.next664 = add nuw nsw i64 %indvars.iv663, 1
  %exitcond671.not = icmp eq i64 %indvars.iv.next664, %wide.trip.count683
  br i1 %exitcond671.not, label %for.cond232.loopexit.us, label %for.body238.us

for.cond232.loopexit.us:                          ; preds = %if.end263.us, %for.body234.us
  %indvars.iv.next662 = add nuw nsw i64 %indvars.iv661, 1
  %exitcond678.not = icmp eq i64 %indvars.iv.next673, %wide.trip.count683
  br i1 %exitcond678.not, label %for.cond232.for.inc270_crit_edge.us, label %for.body234.us

for.body238.lr.ph.us:                             ; preds = %for.body234.us
  %23 = mul nsw i64 %indvars.iv672, %14
  %24 = add nuw nsw i64 %23, %indvars.iv679
  %arrayidx247.us = getelementptr inbounds i32, ptr %call2, i64 %24
  br label %for.body238.us

for.cond232.for.inc270_crit_edge.us:              ; preds = %for.cond232.loopexit.us
  %indvars.iv.next680 = add nuw nsw i64 %indvars.iv679, 1
  %exitcond684.not = icmp eq i64 %indvars.iv.next680, %wide.trip.count683
  br i1 %exitcond684.not, label %if.end273, label %for.cond232.preheader.us

invoke.cont61:                                    ; preds = %for.end55
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %nodeLinks) #38
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %nodeLinks, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !323
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %nodeLinks, i64 0, i32 5
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !326
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %nodeLinks, i64 0, i32 2
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !327
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %nodeLinks, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !328
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %ref.tmp) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %ref.tmp, i8 0, i64 32, i1 false)
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %ref.tmp, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !130
  %m_data.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %ref.tmp, i64 0, i32 5
  %m_size.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %ref.tmp, i64 0, i32 2
  store i32 0, ptr %m_size.i.i.i, align 4, !tbaa !132
  invoke void @_ZN20btAlignedObjectArrayI9NodeLinksE6resizeEiRKS0_(ptr noundef nonnull align 8 dereferenceable(25) %nodeLinks, i32 noundef %0, ptr noundef nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont63 unwind label %lpad62

invoke.cont63:                                    ; preds = %invoke.cont61
  %25 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !131
  %tobool.not.i.i.i.i = icmp eq ptr %25, null
  %26 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i = icmp eq i8 %26, 0
  %or.cond.i.i.i = select i1 %tobool.not.i.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i
  br i1 %or.cond.i.i.i, label %invoke.cont64, label %if.then3.i.i.i.i

if.then3.i.i.i.i:                                 ; preds = %invoke.cont63
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %25)
          to label %invoke.cont64 unwind label %lpad60

invoke.cont64:                                    ; preds = %invoke.cont63, %if.then3.i.i.i.i
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %ref.tmp) #38
  %27 = load i32, ptr %m_size.i423, align 4, !tbaa !92
  %cmp70624 = icmp sgt i32 %27, 0
  br i1 %cmp70624, label %for.body71.lr.ph, label %for.cond141.preheader

for.body71.lr.ph:                                 ; preds = %invoke.cont64
  %m_data.i431 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %m_data.i434 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  br label %for.body71

for.cond141.preheader:                            ; preds = %if.end135, %invoke.cont64
  %28 = load i32, ptr %m_size.i.i, align 4, !tbaa !327
  %cmp145630 = icmp sgt i32 %28, 0
  br i1 %cmp145630, label %for.cond148.preheader.lr.ph, label %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i.i

for.cond148.preheader.lr.ph:                      ; preds = %for.cond141.preheader
  %29 = load ptr, ptr %m_data.i.i, align 8, !tbaa !326
  %wide.trip.count697 = zext i32 %28 to i64
  br label %for.cond148.preheader

for.body71:                                       ; preds = %for.body71.lr.ph, %if.end135
  %indvars.iv685 = phi i64 [ 0, %for.body71.lr.ph ], [ %indvars.iv.next686, %if.end135 ]
  %30 = load ptr, ptr %m_data.i431, align 8, !tbaa !91
  %m_n77 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %30, i64 %indvars.iv685, i32 1
  %31 = load ptr, ptr %m_n77, align 8, !tbaa !219
  %32 = load ptr, ptr %m_data.i434, align 8, !tbaa !87
  %sub.ptr.lhs.cast82 = ptrtoint ptr %31 to i64
  %sub.ptr.rhs.cast83 = ptrtoint ptr %32 to i64
  %sub.ptr.sub84 = sub i64 %sub.ptr.lhs.cast82, %sub.ptr.rhs.cast83
  %sub.ptr.div85 = sdiv exact i64 %sub.ptr.sub84, 120
  %conv86 = trunc i64 %sub.ptr.div85 to i32
  %arrayidx93 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %30, i64 %indvars.iv685, i32 1, i64 1
  %33 = load ptr, ptr %arrayidx93, align 8, !tbaa !219
  %sub.ptr.lhs.cast97 = ptrtoint ptr %33 to i64
  %sub.ptr.sub99 = sub i64 %sub.ptr.lhs.cast97, %sub.ptr.rhs.cast83
  %sub.ptr.div100 = sdiv exact i64 %sub.ptr.sub99, 120
  %conv101 = trunc i64 %sub.ptr.div100 to i32
  %34 = load ptr, ptr %m_data.i.i, align 8, !tbaa !326
  %sext = shl i64 %sub.ptr.div85, 32
  %idxprom.i440 = ashr exact i64 %sext, 32
  %arrayidx.i441 = getelementptr inbounds %struct.NodeLinks, ptr %34, i64 %idxprom.i440
  %m_size.i.i442 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i441, i64 0, i32 2
  %35 = load i32, ptr %m_size.i.i442, align 4, !tbaa !132
  %cmp8.i = icmp sgt i32 %35, 0
  br i1 %cmp8.i, label %for.body.lr.ph.i, label %if.then113

for.body.lr.ph.i:                                 ; preds = %for.body71
  %m_data.i443 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i441, i64 0, i32 5
  %36 = load ptr, ptr %m_data.i443, align 8, !tbaa !131
  %wide.trip.count.i = zext i32 %35 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.inc.i ]
  %arrayidx.i444 = getelementptr inbounds i32, ptr %36, i64 %indvars.iv.i
  %37 = load i32, ptr %arrayidx.i444, align 4, !tbaa !140
  %cmp3.i = icmp eq i32 %37, %conv101
  br i1 %cmp3.i, label %_ZNK20btAlignedObjectArrayIiE16findLinearSearchERKi.exit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %if.then113, label %for.body.i

_ZNK20btAlignedObjectArrayIiE16findLinearSearchERKi.exit: ; preds = %for.body.i
  %38 = trunc i64 %indvars.iv.i to i32
  %cmp112 = icmp eq i32 %35, %38
  br i1 %cmp112, label %if.then113, label %if.end118

if.then113:                                       ; preds = %for.inc.i, %for.body71, %_ZNK20btAlignedObjectArrayIiE16findLinearSearchERKi.exit
  %m_capacity.i.i453 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i441, i64 0, i32 3
  %39 = load i32, ptr %m_capacity.i.i453, align 8, !tbaa !133
  %cmp.i = icmp eq i32 %35, %39
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIiE9push_backERKi.exit

if.then.i:                                        ; preds = %if.then113
  %tobool.not.i.i = icmp eq i32 %35, 0
  %mul.i.i = shl nsw i32 %35, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %35, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIiE9push_backERKi.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 2
  %call.i.i.i.i460 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
          to label %call.i.i.i.i.noexc unwind label %lpad89

call.i.i.i.i.noexc:                               ; preds = %if.then.i.i.i
  %.pre.i = load i32, ptr %m_size.i.i442, align 4, !tbaa !132
  br label %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i: ; preds = %call.i.i.i.i.noexc, %if.then.i.i
  %40 = phi i32 [ %.pre.i, %call.i.i.i.i.noexc ], [ %35, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i460, %call.i.i.i.i.noexc ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %40, 0
  %m_data.i.i.i454 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i441, i64 0, i32 5
  %41 = load ptr, ptr %m_data.i.i.i454, align 8, !tbaa !131
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i
  %42 = ptrtoint ptr %41 to i64
  %retval.0.i.i.i723 = ptrtoint ptr %retval.0.i.i.i to i64
  %wide.trip.count.i.i.i = zext i32 %40 to i64
  %min.iters.check727 = icmp ult i32 %40, 8
  %43 = sub i64 %retval.0.i.i.i723, %42
  %diff.check724 = icmp ult i64 %43, 32
  %or.cond = select i1 %min.iters.check727, i1 true, i1 %diff.check724
  br i1 %or.cond, label %for.body.i.i.i.preheader, label %vector.ph728

vector.ph728:                                     ; preds = %for.body.lr.ph.i.i.i
  %n.vec730 = and i64 %wide.trip.count.i.i.i, 4294967288
  br label %vector.body733

vector.body733:                                   ; preds = %vector.body733, %vector.ph728
  %index734 = phi i64 [ 0, %vector.ph728 ], [ %index.next737, %vector.body733 ]
  %44 = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %index734
  %45 = getelementptr inbounds i32, ptr %41, i64 %index734
  %wide.load735 = load <4 x i32>, ptr %45, align 4, !tbaa !140
  %46 = getelementptr inbounds i32, ptr %45, i64 4
  %wide.load736 = load <4 x i32>, ptr %46, align 4, !tbaa !140
  store <4 x i32> %wide.load735, ptr %44, align 4, !tbaa !140
  %47 = getelementptr inbounds i32, ptr %44, i64 4
  store <4 x i32> %wide.load736, ptr %47, align 4, !tbaa !140
  %index.next737 = add nuw i64 %index734, 8
  %48 = icmp eq i64 %index.next737, %n.vec730
  br i1 %48, label %middle.block725, label %vector.body733, !llvm.loop !329

middle.block725:                                  ; preds = %vector.body733
  %cmp.n732 = icmp eq i64 %n.vec730, %wide.trip.count.i.i.i
  br i1 %cmp.n732, label %if.then.i11.i.i, label %for.body.i.i.i.preheader

for.body.i.i.i.preheader:                         ; preds = %for.body.lr.ph.i.i.i, %middle.block725
  %indvars.iv.i.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %n.vec730, %middle.block725 ]
  %49 = xor i64 %indvars.iv.i.i.i.ph, -1
  %50 = add nsw i64 %49, %wide.trip.count.i.i.i
  %xtraiter = and i64 %wide.trip.count.i.i.i, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol

for.body.i.i.i.prol:                              ; preds = %for.body.i.i.i.preheader, %for.body.i.i.i.prol
  %indvars.iv.i.i.i.prol = phi i64 [ %indvars.iv.next.i.i.i.prol, %for.body.i.i.i.prol ], [ %indvars.iv.i.i.i.ph, %for.body.i.i.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.i.i.prol ], [ 0, %for.body.i.i.i.preheader ]
  %arrayidx.i.i.i.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.prol
  %arrayidx3.i.i.i.prol = getelementptr inbounds i32, ptr %41, i64 %indvars.iv.i.i.i.prol
  %51 = load i32, ptr %arrayidx3.i.i.i.prol, align 4, !tbaa !140
  store i32 %51, ptr %arrayidx.i.i.i.prol, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.prol = add nuw nsw i64 %indvars.iv.i.i.i.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol, !llvm.loop !330

for.body.i.i.i.prol.loopexit:                     ; preds = %for.body.i.i.i.prol, %for.body.i.i.i.preheader
  %indvars.iv.i.i.i.unr = phi i64 [ %indvars.iv.i.i.i.ph, %for.body.i.i.i.preheader ], [ %indvars.iv.next.i.i.i.prol, %for.body.i.i.i.prol ]
  %52 = icmp ult i64 %50, 3
  br i1 %52, label %if.then.i11.i.i, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i
  %indvars.iv.i.i.i = phi i64 [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ], [ %indvars.iv.i.i.i.unr, %for.body.i.i.i.prol.loopexit ]
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %arrayidx3.i.i.i = getelementptr inbounds i32, ptr %41, i64 %indvars.iv.i.i.i
  %53 = load i32, ptr %arrayidx3.i.i.i, align 4, !tbaa !140
  store i32 %53, ptr %arrayidx.i.i.i, align 4, !tbaa !140
  %indvars.iv.next.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %arrayidx3.i.i.i.1 = getelementptr inbounds i32, ptr %41, i64 %indvars.iv.next.i.i.i
  %54 = load i32, ptr %arrayidx3.i.i.i.1, align 4, !tbaa !140
  store i32 %54, ptr %arrayidx.i.i.i.1, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %arrayidx3.i.i.i.2 = getelementptr inbounds i32, ptr %41, i64 %indvars.iv.next.i.i.i.1
  %55 = load i32, ptr %arrayidx3.i.i.i.2, align 4, !tbaa !140
  store i32 %55, ptr %arrayidx.i.i.i.2, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.2 = add nuw nsw i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %arrayidx3.i.i.i.3 = getelementptr inbounds i32, ptr %41, i64 %indvars.iv.next.i.i.i.2
  %56 = load i32, ptr %arrayidx3.i.i.i.3, align 4, !tbaa !140
  store i32 %56, ptr %arrayidx.i.i.i.3, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %exitcond.not.i.i.i.3 = icmp eq i64 %indvars.iv.next.i.i.i.3, %wide.trip.count.i.i.i
  br i1 %exitcond.not.i.i.i.3, label %if.then.i11.i.i, label %for.body.i.i.i, !llvm.loop !331

_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i: ; preds = %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i
  %tobool.not.i10.i.i = icmp eq ptr %41, null
  br i1 %tobool.not.i10.i.i, label %_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i, label %if.then.i11.i.i

if.then.i11.i.i:                                  ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i, %middle.block725, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i
  %m_ownsMemory.i.i.i455 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i441, i64 0, i32 6
  %57 = load i8, ptr %m_ownsMemory.i.i.i455, align 8, !tbaa !130, !range !159, !noundef !192
  %tobool2.not.i.i.i = icmp eq i8 %57, 0
  br i1 %tobool2.not.i.i.i, label %if.end.i.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %if.then.i11.i.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %41)
          to label %if.end.i.i.i unwind label %lpad89

if.end.i.i.i:                                     ; preds = %if.then3.i.i.i, %if.then.i11.i.i
  %.pre7.pre.i = load i32, ptr %m_size.i.i442, align 4, !tbaa !132
  br label %_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i: ; preds = %if.end.i.i.i, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i
  %.pre7.i = phi i32 [ %.pre7.pre.i, %if.end.i.i.i ], [ %40, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i ]
  %m_ownsMemory.i.i456 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i441, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i456, align 8, !tbaa !130
  store ptr %retval.0.i.i.i, ptr %m_data.i.i.i454, align 8, !tbaa !131
  store i32 %cond.i.i, ptr %m_capacity.i.i453, align 8, !tbaa !133
  %.pre.pre = load ptr, ptr %m_data.i.i, align 8, !tbaa !326
  br label %_ZN20btAlignedObjectArrayIiE9push_backERKi.exit

_ZN20btAlignedObjectArrayIiE9push_backERKi.exit:  ; preds = %if.then113, %if.then.i, %_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i
  %.pre = phi ptr [ %.pre.pre, %_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i ], [ %34, %if.then.i ], [ %34, %if.then113 ]
  %58 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i ], [ %35, %if.then.i ], [ %35, %if.then113 ]
  %m_data.i457 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i441, i64 0, i32 5
  %59 = load ptr, ptr %m_data.i457, align 8, !tbaa !131
  %idxprom.i458 = sext i32 %58 to i64
  %arrayidx.i459 = getelementptr inbounds i32, ptr %59, i64 %idxprom.i458
  store i32 %conv101, ptr %arrayidx.i459, align 4, !tbaa !140
  %60 = load i32, ptr %m_size.i.i442, align 4, !tbaa !132
  %inc.i = add nsw i32 %60, 1
  store i32 %inc.i, ptr %m_size.i.i442, align 4, !tbaa !132
  br label %if.end118

lpad60:                                           ; preds = %if.then3.i.i.i.i
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad62:                                           ; preds = %invoke.cont61
  %62 = landingpad { ptr, i32 }
          cleanup
  %63 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !131
  %tobool.not.i.i.i.i463 = icmp eq ptr %63, null
  %64 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i465 = icmp eq i8 %64, 0
  %or.cond.i.i.i466 = select i1 %tobool.not.i.i.i.i463, i1 true, i1 %tobool2.not.i.i.i.i465
  br i1 %or.cond.i.i.i466, label %ehcleanup, label %if.then3.i.i.i.i467

if.then3.i.i.i.i467:                              ; preds = %lpad62
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %63)
          to label %ehcleanup unwind label %terminate.lpad

ehcleanup:                                        ; preds = %lpad62, %if.then3.i.i.i.i467, %lpad60
  %.pn = phi { ptr, i32 } [ %61, %lpad60 ], [ %62, %if.then3.i.i.i.i467 ], [ %62, %lpad62 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %ref.tmp) #38
  br label %ehcleanup223

lpad89:                                           ; preds = %if.then3.i.i.i528, %if.then.i.i.i510, %if.then3.i.i.i, %if.then.i.i.i
  %65 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup223

if.end118:                                        ; preds = %_ZN20btAlignedObjectArrayIiE9push_backERKi.exit, %_ZNK20btAlignedObjectArrayIiE16findLinearSearchERKi.exit
  %66 = phi ptr [ %.pre, %_ZN20btAlignedObjectArrayIiE9push_backERKi.exit ], [ %34, %_ZNK20btAlignedObjectArrayIiE16findLinearSearchERKi.exit ]
  %sext609 = shl i64 %sub.ptr.div100, 32
  %idxprom.i473 = ashr exact i64 %sext609, 32
  %arrayidx.i474 = getelementptr inbounds %struct.NodeLinks, ptr %66, i64 %idxprom.i473
  %m_size.i.i475 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i474, i64 0, i32 2
  %67 = load i32, ptr %m_size.i.i475, align 4, !tbaa !132
  %cmp8.i476 = icmp sgt i32 %67, 0
  br i1 %cmp8.i476, label %for.body.lr.ph.i479, label %if.then130

for.body.lr.ph.i479:                              ; preds = %if.end118
  %m_data.i477 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i474, i64 0, i32 5
  %68 = load ptr, ptr %m_data.i477, align 8, !tbaa !131
  %wide.trip.count.i478 = zext i32 %67 to i64
  br label %for.body.i483

for.body.i483:                                    ; preds = %for.inc.i486, %for.body.lr.ph.i479
  %indvars.iv.i480 = phi i64 [ 0, %for.body.lr.ph.i479 ], [ %indvars.iv.next.i484, %for.inc.i486 ]
  %arrayidx.i481 = getelementptr inbounds i32, ptr %68, i64 %indvars.iv.i480
  %69 = load i32, ptr %arrayidx.i481, align 4, !tbaa !140
  %cmp3.i482 = icmp eq i32 %69, %conv86
  br i1 %cmp3.i482, label %_ZNK20btAlignedObjectArrayIiE16findLinearSearchERKi.exit489, label %for.inc.i486

for.inc.i486:                                     ; preds = %for.body.i483
  %indvars.iv.next.i484 = add nuw nsw i64 %indvars.iv.i480, 1
  %exitcond.not.i485 = icmp eq i64 %indvars.iv.next.i484, %wide.trip.count.i478
  br i1 %exitcond.not.i485, label %if.then130, label %for.body.i483

_ZNK20btAlignedObjectArrayIiE16findLinearSearchERKi.exit489: ; preds = %for.body.i483
  %70 = trunc i64 %indvars.iv.i480 to i32
  %cmp129 = icmp eq i32 %67, %70
  br i1 %cmp129, label %if.then130, label %if.end135

if.then130:                                       ; preds = %for.inc.i486, %if.end118, %_ZNK20btAlignedObjectArrayIiE16findLinearSearchERKi.exit489
  %m_capacity.i.i498 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i474, i64 0, i32 3
  %71 = load i32, ptr %m_capacity.i.i498, align 8, !tbaa !133
  %cmp.i499 = icmp eq i32 %67, %71
  br i1 %cmp.i499, label %if.then.i504, label %_ZN20btAlignedObjectArrayIiE9push_backERKi.exit541

if.then.i504:                                     ; preds = %if.then130
  %tobool.not.i.i500 = icmp eq i32 %67, 0
  %mul.i.i501 = shl nsw i32 %67, 1
  %cond.i.i502 = select i1 %tobool.not.i.i500, i32 1, i32 %mul.i.i501
  %cmp.i.i503 = icmp slt i32 %67, %cond.i.i502
  br i1 %cmp.i.i503, label %if.then.i.i506, label %_ZN20btAlignedObjectArrayIiE9push_backERKi.exit541

if.then.i.i506:                                   ; preds = %if.then.i504
  %tobool.not.i.i.i505 = icmp eq i32 %cond.i.i502, 0
  br i1 %tobool.not.i.i.i505, label %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i514, label %if.then.i.i.i510

if.then.i.i.i510:                                 ; preds = %if.then.i.i506
  %conv.i.i.i.i507 = sext i32 %cond.i.i502 to i64
  %mul.i.i.i.i508 = shl nsw i64 %conv.i.i.i.i507, 2
  %call.i.i.i.i539 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i508, i32 noundef 16)
          to label %call.i.i.i.i.noexc538 unwind label %lpad89

call.i.i.i.i.noexc538:                            ; preds = %if.then.i.i.i510
  %.pre.i509 = load i32, ptr %m_size.i.i475, align 4, !tbaa !132
  br label %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i514

_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i514: ; preds = %call.i.i.i.i.noexc538, %if.then.i.i506
  %72 = phi i32 [ %.pre.i509, %call.i.i.i.i.noexc538 ], [ %67, %if.then.i.i506 ]
  %retval.0.i.i.i511 = phi ptr [ %call.i.i.i.i539, %call.i.i.i.i.noexc538 ], [ null, %if.then.i.i506 ]
  %cmp7.i.i.i512 = icmp sgt i32 %72, 0
  %m_data.i.i.i513 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i474, i64 0, i32 5
  %73 = load ptr, ptr %m_data.i.i.i513, align 8, !tbaa !131
  br i1 %cmp7.i.i.i512, label %for.body.lr.ph.i.i.i516, label %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i524

for.body.lr.ph.i.i.i516:                          ; preds = %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i514
  %74 = ptrtoint ptr %73 to i64
  %retval.0.i.i.i511720 = ptrtoint ptr %retval.0.i.i.i511 to i64
  %wide.trip.count.i.i.i515 = zext i32 %72 to i64
  %min.iters.check = icmp ult i32 %72, 8
  %75 = sub i64 %retval.0.i.i.i511720, %74
  %diff.check = icmp ult i64 %75, 32
  %or.cond738 = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond738, label %for.body.i.i.i522.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i.i516
  %n.vec = and i64 %wide.trip.count.i.i.i515, 4294967288
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %76 = getelementptr inbounds i32, ptr %retval.0.i.i.i511, i64 %index
  %77 = getelementptr inbounds i32, ptr %73, i64 %index
  %wide.load = load <4 x i32>, ptr %77, align 4, !tbaa !140
  %78 = getelementptr inbounds i32, ptr %77, i64 4
  %wide.load721 = load <4 x i32>, ptr %78, align 4, !tbaa !140
  store <4 x i32> %wide.load, ptr %76, align 4, !tbaa !140
  %79 = getelementptr inbounds i32, ptr %76, i64 4
  store <4 x i32> %wide.load721, ptr %79, align 4, !tbaa !140
  %index.next = add nuw i64 %index, 8
  %80 = icmp eq i64 %index.next, %n.vec
  br i1 %80, label %middle.block, label %vector.body, !llvm.loop !332

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i.i515
  br i1 %cmp.n, label %if.then.i11.i.i527, label %for.body.i.i.i522.preheader

for.body.i.i.i522.preheader:                      ; preds = %for.body.lr.ph.i.i.i516, %middle.block
  %indvars.iv.i.i.i517.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i516 ], [ %n.vec, %middle.block ]
  %81 = xor i64 %indvars.iv.i.i.i517.ph, -1
  %82 = add nsw i64 %81, %wide.trip.count.i.i.i515
  %xtraiter741 = and i64 %wide.trip.count.i.i.i515, 3
  %lcmp.mod742.not = icmp eq i64 %xtraiter741, 0
  br i1 %lcmp.mod742.not, label %for.body.i.i.i522.prol.loopexit, label %for.body.i.i.i522.prol

for.body.i.i.i522.prol:                           ; preds = %for.body.i.i.i522.preheader, %for.body.i.i.i522.prol
  %indvars.iv.i.i.i517.prol = phi i64 [ %indvars.iv.next.i.i.i520.prol, %for.body.i.i.i522.prol ], [ %indvars.iv.i.i.i517.ph, %for.body.i.i.i522.preheader ]
  %prol.iter743 = phi i64 [ %prol.iter743.next, %for.body.i.i.i522.prol ], [ 0, %for.body.i.i.i522.preheader ]
  %arrayidx.i.i.i518.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i511, i64 %indvars.iv.i.i.i517.prol
  %arrayidx3.i.i.i519.prol = getelementptr inbounds i32, ptr %73, i64 %indvars.iv.i.i.i517.prol
  %83 = load i32, ptr %arrayidx3.i.i.i519.prol, align 4, !tbaa !140
  store i32 %83, ptr %arrayidx.i.i.i518.prol, align 4, !tbaa !140
  %indvars.iv.next.i.i.i520.prol = add nuw nsw i64 %indvars.iv.i.i.i517.prol, 1
  %prol.iter743.next = add i64 %prol.iter743, 1
  %prol.iter743.cmp.not = icmp eq i64 %prol.iter743.next, %xtraiter741
  br i1 %prol.iter743.cmp.not, label %for.body.i.i.i522.prol.loopexit, label %for.body.i.i.i522.prol, !llvm.loop !333

for.body.i.i.i522.prol.loopexit:                  ; preds = %for.body.i.i.i522.prol, %for.body.i.i.i522.preheader
  %indvars.iv.i.i.i517.unr = phi i64 [ %indvars.iv.i.i.i517.ph, %for.body.i.i.i522.preheader ], [ %indvars.iv.next.i.i.i520.prol, %for.body.i.i.i522.prol ]
  %84 = icmp ult i64 %82, 3
  br i1 %84, label %if.then.i11.i.i527, label %for.body.i.i.i522

for.body.i.i.i522:                                ; preds = %for.body.i.i.i522.prol.loopexit, %for.body.i.i.i522
  %indvars.iv.i.i.i517 = phi i64 [ %indvars.iv.next.i.i.i520.3, %for.body.i.i.i522 ], [ %indvars.iv.i.i.i517.unr, %for.body.i.i.i522.prol.loopexit ]
  %arrayidx.i.i.i518 = getelementptr inbounds i32, ptr %retval.0.i.i.i511, i64 %indvars.iv.i.i.i517
  %arrayidx3.i.i.i519 = getelementptr inbounds i32, ptr %73, i64 %indvars.iv.i.i.i517
  %85 = load i32, ptr %arrayidx3.i.i.i519, align 4, !tbaa !140
  store i32 %85, ptr %arrayidx.i.i.i518, align 4, !tbaa !140
  %indvars.iv.next.i.i.i520 = add nuw nsw i64 %indvars.iv.i.i.i517, 1
  %arrayidx.i.i.i518.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i511, i64 %indvars.iv.next.i.i.i520
  %arrayidx3.i.i.i519.1 = getelementptr inbounds i32, ptr %73, i64 %indvars.iv.next.i.i.i520
  %86 = load i32, ptr %arrayidx3.i.i.i519.1, align 4, !tbaa !140
  store i32 %86, ptr %arrayidx.i.i.i518.1, align 4, !tbaa !140
  %indvars.iv.next.i.i.i520.1 = add nuw nsw i64 %indvars.iv.i.i.i517, 2
  %arrayidx.i.i.i518.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i511, i64 %indvars.iv.next.i.i.i520.1
  %arrayidx3.i.i.i519.2 = getelementptr inbounds i32, ptr %73, i64 %indvars.iv.next.i.i.i520.1
  %87 = load i32, ptr %arrayidx3.i.i.i519.2, align 4, !tbaa !140
  store i32 %87, ptr %arrayidx.i.i.i518.2, align 4, !tbaa !140
  %indvars.iv.next.i.i.i520.2 = add nuw nsw i64 %indvars.iv.i.i.i517, 3
  %arrayidx.i.i.i518.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i511, i64 %indvars.iv.next.i.i.i520.2
  %arrayidx3.i.i.i519.3 = getelementptr inbounds i32, ptr %73, i64 %indvars.iv.next.i.i.i520.2
  %88 = load i32, ptr %arrayidx3.i.i.i519.3, align 4, !tbaa !140
  store i32 %88, ptr %arrayidx.i.i.i518.3, align 4, !tbaa !140
  %indvars.iv.next.i.i.i520.3 = add nuw nsw i64 %indvars.iv.i.i.i517, 4
  %exitcond.not.i.i.i521.3 = icmp eq i64 %indvars.iv.next.i.i.i520.3, %wide.trip.count.i.i.i515
  br i1 %exitcond.not.i.i.i521.3, label %if.then.i11.i.i527, label %for.body.i.i.i522, !llvm.loop !334

_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i524: ; preds = %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i514
  %tobool.not.i10.i.i523 = icmp eq ptr %73, null
  br i1 %tobool.not.i10.i.i523, label %_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i533, label %if.then.i11.i.i527

if.then.i11.i.i527:                               ; preds = %for.body.i.i.i522.prol.loopexit, %for.body.i.i.i522, %middle.block, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i524
  %m_ownsMemory.i.i.i525 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i474, i64 0, i32 6
  %89 = load i8, ptr %m_ownsMemory.i.i.i525, align 8, !tbaa !130, !range !159, !noundef !192
  %tobool2.not.i.i.i526 = icmp eq i8 %89, 0
  br i1 %tobool2.not.i.i.i526, label %if.end.i.i.i530, label %if.then3.i.i.i528

if.then3.i.i.i528:                                ; preds = %if.then.i11.i.i527
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %73)
          to label %if.end.i.i.i530 unwind label %lpad89

if.end.i.i.i530:                                  ; preds = %if.then3.i.i.i528, %if.then.i11.i.i527
  %.pre7.pre.i529 = load i32, ptr %m_size.i.i475, align 4, !tbaa !132
  br label %_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i533

_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i533: ; preds = %if.end.i.i.i530, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i524
  %.pre7.i531 = phi i32 [ %.pre7.pre.i529, %if.end.i.i.i530 ], [ %72, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i524 ]
  %m_ownsMemory.i.i532 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i474, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i532, align 8, !tbaa !130
  store ptr %retval.0.i.i.i511, ptr %m_data.i.i.i513, align 8, !tbaa !131
  store i32 %cond.i.i502, ptr %m_capacity.i.i498, align 8, !tbaa !133
  br label %_ZN20btAlignedObjectArrayIiE9push_backERKi.exit541

_ZN20btAlignedObjectArrayIiE9push_backERKi.exit541: ; preds = %if.then130, %if.then.i504, %_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i533
  %90 = phi i32 [ %.pre7.i531, %_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i533 ], [ %67, %if.then.i504 ], [ %67, %if.then130 ]
  %m_data.i534 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i474, i64 0, i32 5
  %91 = load ptr, ptr %m_data.i534, align 8, !tbaa !131
  %idxprom.i535 = sext i32 %90 to i64
  %arrayidx.i536 = getelementptr inbounds i32, ptr %91, i64 %idxprom.i535
  store i32 %conv86, ptr %arrayidx.i536, align 4, !tbaa !140
  %92 = load i32, ptr %m_size.i.i475, align 4, !tbaa !132
  %inc.i537 = add nsw i32 %92, 1
  store i32 %inc.i537, ptr %m_size.i.i475, align 4, !tbaa !132
  br label %if.end135

if.end135:                                        ; preds = %_ZN20btAlignedObjectArrayIiE9push_backERKi.exit541, %_ZNK20btAlignedObjectArrayIiE16findLinearSearchERKi.exit489
  %indvars.iv.next686 = add nuw nsw i64 %indvars.iv685, 1
  %93 = load i32, ptr %m_size.i423, align 4, !tbaa !92
  %94 = sext i32 %93 to i64
  %cmp70 = icmp slt i64 %indvars.iv.next686, %94
  br i1 %cmp70, label %for.body71, label %for.cond141.preheader

for.cond148.preheader:                            ; preds = %for.cond148.preheader.lr.ph, %for.cond.cleanup156
  %indvars.iv694 = phi i64 [ 0, %for.cond148.preheader.lr.ph ], [ %indvars.iv.next695, %for.cond.cleanup156 ]
  %arrayidx.i557 = getelementptr inbounds %struct.NodeLinks, ptr %29, i64 %indvars.iv694
  %m_size.i558 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i557, i64 0, i32 2
  %95 = load i32, ptr %m_size.i558, align 4, !tbaa !132
  %cmp155628 = icmp sgt i32 %95, 0
  br i1 %cmp155628, label %for.body157.lr.ph, label %for.cond.cleanup156

for.body157.lr.ph:                                ; preds = %for.cond148.preheader
  %m_data.i562 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i557, i64 0, i32 5
  %96 = load ptr, ptr %m_data.i562, align 8, !tbaa !131
  %97 = trunc i64 %indvars.iv694 to i32
  %mul198 = mul nsw i32 %0, %97
  br label %for.body157

for.cond.cleanup:                                 ; preds = %for.cond.cleanup156
  br i1 %cmp145630, label %for.body.lr.ph.i.i.i545, label %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i.i

for.body.lr.ph.i.i.i545:                          ; preds = %for.cond.cleanup
  %zext.i.i = zext i32 %28 to i64
  br label %for.body.i.i.i548

for.body.i.i.i548:                                ; preds = %_ZN9NodeLinksD2Ev.exit.i.i.i, %for.body.lr.ph.i.i.i545
  %indvars.iv.i.i.i546 = phi i64 [ 0, %for.body.lr.ph.i.i.i545 ], [ %indvars.iv.next.i.i.i549, %_ZN9NodeLinksD2Ev.exit.i.i.i ]
  %98 = load ptr, ptr %m_data.i.i, align 8, !tbaa !326
  %arrayidx.i.i.i547 = getelementptr inbounds %struct.NodeLinks, ptr %98, i64 %indvars.iv.i.i.i546
  %m_data.i.i.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i.i.i547, i64 0, i32 5
  %99 = load ptr, ptr %m_data.i.i.i.i.i.i.i, align 8, !tbaa !131
  %tobool.not.i.i.i.i.i.i.i = icmp eq ptr %99, null
  %m_ownsMemory.i.i.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i.i.i547, i64 0, i32 6
  %100 = load i8, ptr %m_ownsMemory.i.i.i.i.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i.i.i.i = icmp eq i8 %100, 0
  %or.cond.i.i.i.i.i.i = select i1 %tobool.not.i.i.i.i.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i.i.i.i
  br i1 %or.cond.i.i.i.i.i.i, label %_ZN9NodeLinksD2Ev.exit.i.i.i, label %if.then3.i.i.i.i.i.i.i

if.then3.i.i.i.i.i.i.i:                           ; preds = %for.body.i.i.i548
  call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %99)
  br label %_ZN9NodeLinksD2Ev.exit.i.i.i

_ZN9NodeLinksD2Ev.exit.i.i.i:                     ; preds = %if.then3.i.i.i.i.i.i.i, %for.body.i.i.i548
  %m_size.i.i.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i.i.i547, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i.i.i.i.i, align 8, !tbaa !130
  store ptr null, ptr %m_data.i.i.i.i.i.i.i, align 8, !tbaa !131
  store i32 0, ptr %m_size.i.i.i.i.i.i.i, align 4, !tbaa !132
  %m_capacity.i.i.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i.i.i547, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i.i.i.i.i, align 8, !tbaa !133
  %indvars.iv.next.i.i.i549 = add nuw nsw i64 %indvars.iv.i.i.i546, 1
  %101 = icmp eq i64 %indvars.iv.next.i.i.i549, %zext.i.i
  br i1 %101, label %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i.i, label %for.body.i.i.i548

_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i.i: ; preds = %_ZN9NodeLinksD2Ev.exit.i.i.i, %for.cond141.preheader, %for.cond.cleanup
  %102 = load ptr, ptr %m_data.i.i, align 8, !tbaa !326
  %tobool.not.i.i.i550 = icmp eq ptr %102, null
  %103 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i.i552 = icmp eq i8 %103, 0
  %or.cond.i.i = select i1 %tobool.not.i.i.i550, i1 true, i1 %tobool2.not.i.i.i552
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayI9NodeLinksED2Ev.exit, label %if.then3.i.i.i553

if.then3.i.i.i553:                                ; preds = %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i.i
  call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %102)
  br label %_ZN20btAlignedObjectArrayI9NodeLinksED2Ev.exit

_ZN20btAlignedObjectArrayI9NodeLinksED2Ev.exit:   ; preds = %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i.i, %if.then3.i.i.i553
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %nodeLinks) #38
  br label %if.end273

for.cond.cleanup156:                              ; preds = %for.cond.cleanup172, %for.cond148.preheader
  %indvars.iv.next695 = add nuw nsw i64 %indvars.iv694, 1
  %exitcond698.not = icmp eq i64 %indvars.iv.next695, %wide.trip.count697
  br i1 %exitcond698.not, label %for.cond.cleanup, label %for.cond148.preheader

for.body157:                                      ; preds = %for.body157.lr.ph, %for.cond.cleanup172
  %104 = phi i32 [ %95, %for.body157.lr.ph ], [ %108, %for.cond.cleanup172 ]
  %indvars.iv691 = phi i64 [ 0, %for.body157.lr.ph ], [ %indvars.iv.next692, %for.cond.cleanup172 ]
  %arrayidx.i564 = getelementptr inbounds i32, ptr %96, i64 %indvars.iv691
  %105 = load i32, ptr %arrayidx.i564, align 4, !tbaa !140
  %idxprom.i566 = sext i32 %105 to i64
  %arrayidx.i567 = getelementptr inbounds %struct.NodeLinks, ptr %29, i64 %idxprom.i566
  %m_size.i568 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i567, i64 0, i32 2
  %106 = load i32, ptr %m_size.i568, align 4, !tbaa !132
  %cmp171626 = icmp sgt i32 %106, 0
  br i1 %cmp171626, label %for.body173.lr.ph, label %for.cond.cleanup172

for.body173.lr.ph:                                ; preds = %for.body157
  %m_data.i572 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i567, i64 0, i32 5
  %107 = load ptr, ptr %m_data.i572, align 8, !tbaa !131
  %mul183 = mul nsw i32 %105, %0
  %add184 = add nsw i32 %mul183, %97
  %idxprom185 = sext i32 %add184 to i64
  %arrayidx186 = getelementptr inbounds i32, ptr %call2, i64 %idxprom185
  br label %for.body173

for.cond.cleanup172.loopexit:                     ; preds = %if.end207
  %.pre714 = load i32, ptr %m_size.i558, align 4, !tbaa !132
  br label %for.cond.cleanup172

for.cond.cleanup172:                              ; preds = %for.cond.cleanup172.loopexit, %for.body157
  %108 = phi i32 [ %.pre714, %for.cond.cleanup172.loopexit ], [ %104, %for.body157 ]
  %indvars.iv.next692 = add nuw nsw i64 %indvars.iv691, 1
  %109 = sext i32 %108 to i64
  %cmp155 = icmp slt i64 %indvars.iv.next692, %109
  br i1 %cmp155, label %for.body157, label %for.cond.cleanup156

for.body173:                                      ; preds = %for.body173.lr.ph, %if.end207
  %110 = phi i32 [ %106, %for.body173.lr.ph ], [ %116, %if.end207 ]
  %indvars.iv688 = phi i64 [ 0, %for.body173.lr.ph ], [ %indvars.iv.next689, %if.end207 ]
  %arrayidx.i574 = getelementptr inbounds i32, ptr %107, i64 %indvars.iv688
  %111 = load i32, ptr %arrayidx.i574, align 4, !tbaa !140
  %112 = zext i32 %111 to i64
  %cmp181.not = icmp eq i64 %indvars.iv694, %112
  br i1 %cmp181.not, label %if.end207, label %if.then182

if.then182:                                       ; preds = %for.body173
  %113 = load i32, ptr %arrayidx186, align 4, !tbaa !140
  %mul187 = mul nsw i32 %111, %0
  %add188 = add nsw i32 %mul187, %105
  %idxprom189 = sext i32 %add188 to i64
  %arrayidx190 = getelementptr inbounds i32, ptr %call2, i64 %idxprom189
  %114 = load i32, ptr %arrayidx190, align 4, !tbaa !140
  %add191 = add i32 %114, %113
  %add193 = add nsw i32 %mul187, %97
  %idxprom194 = sext i32 %add193 to i64
  %arrayidx195 = getelementptr inbounds i32, ptr %call2, i64 %idxprom194
  %115 = load i32, ptr %arrayidx195, align 4, !tbaa !140
  %cmp196 = icmp ugt i32 %115, %add191
  br i1 %cmp196, label %if.then197, label %if.end207

if.then197:                                       ; preds = %if.then182
  %add199 = add nsw i32 %111, %mul198
  %idxprom200 = sext i32 %add199 to i64
  %arrayidx201 = getelementptr inbounds i32, ptr %call2, i64 %idxprom200
  store i32 %add191, ptr %arrayidx201, align 4, !tbaa !140
  store i32 %add191, ptr %arrayidx195, align 4, !tbaa !140
  %.pre713 = load i32, ptr %m_size.i568, align 4, !tbaa !132
  br label %if.end207

if.end207:                                        ; preds = %if.then182, %if.then197, %for.body173
  %116 = phi i32 [ %110, %if.then182 ], [ %.pre713, %if.then197 ], [ %110, %for.body173 ]
  %indvars.iv.next689 = add nuw nsw i64 %indvars.iv688, 1
  %117 = sext i32 %116 to i64
  %cmp171 = icmp slt i64 %indvars.iv.next689, %117
  br i1 %cmp171, label %for.body173, label %for.cond.cleanup172.loopexit

ehcleanup223:                                     ; preds = %lpad89, %ehcleanup
  %.pn421 = phi { ptr, i32 } [ %65, %lpad89 ], [ %.pn, %ehcleanup ]
  invoke void @_ZN20btAlignedObjectArrayI9NodeLinksED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %nodeLinks)
          to label %invoke.cont224 unwind label %terminate.lpad

invoke.cont224:                                   ; preds = %ehcleanup223
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %nodeLinks) #38
  resume { ptr, i32 } %.pn421

if.end273:                                        ; preds = %for.cond232.for.inc270_crit_edge.us, %_ZN20btAlignedObjectArrayI9NodeLinksED2Ev.exit
  br i1 %cmp3614, label %for.body276.lr.ph, label %delete.notnull

for.body276.lr.ph:                                ; preds = %if.end273
  %m_data.i.i575 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %tobool.not.i = icmp eq ptr %mat, null
  %m_data.i6.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %m_capacity.i.i.i586 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 3
  %m_data.i.i.i.i592 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %m_ownsMemory.i.i.i.i593 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 6
  %m_bUpdateRtCst.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  %118 = zext i32 %0 to i64
  %wide.trip.count711 = zext i32 %0 to i64
  br label %for.body276

for.cond274.loopexit:                             ; preds = %for.inc293, %for.body276
  %nlinks.1.lcssa = phi i32 [ %nlinks.0638, %for.body276 ], [ %nlinks.2, %for.inc293 ]
  %indvars.iv.next700 = add nuw nsw i64 %indvars.iv699, 1
  %exitcond712.not = icmp eq i64 %indvars.iv.next708, %wide.trip.count711
  br i1 %exitcond712.not, label %delete.notnull, label %for.body276

for.body276:                                      ; preds = %for.body276.lr.ph, %for.cond274.loopexit
  %indvars.iv707 = phi i64 [ 0, %for.body276.lr.ph ], [ %indvars.iv.next708, %for.cond274.loopexit ]
  %indvars.iv699 = phi i64 [ 1, %for.body276.lr.ph ], [ %indvars.iv.next700, %for.cond274.loopexit ]
  %nlinks.0638 = phi i32 [ 0, %for.body276.lr.ph ], [ %nlinks.1.lcssa, %for.cond274.loopexit ]
  %indvars.iv.next708 = add nuw nsw i64 %indvars.iv707, 1
  %cmp279632 = icmp ult i64 %indvars.iv.next708, %118
  br i1 %cmp279632, label %for.body280.lr.ph, label %for.cond274.loopexit

for.body280.lr.ph:                                ; preds = %for.body276
  %119 = mul nsw i64 %indvars.iv707, %118
  br label %for.body280

for.body280:                                      ; preds = %for.body280.lr.ph, %for.inc293
  %indvars.iv701 = phi i64 [ %indvars.iv699, %for.body280.lr.ph ], [ %indvars.iv.next702, %for.inc293 ]
  %nlinks.1634 = phi i32 [ %nlinks.0638, %for.body280.lr.ph ], [ %nlinks.2, %for.inc293 ]
  %120 = add nuw nsw i64 %indvars.iv701, %119
  %arrayidx284 = getelementptr inbounds i32, ptr %call2, i64 %120
  %121 = load i32, ptr %arrayidx284, align 4, !tbaa !140
  %cmp285 = icmp eq i32 %121, %distance
  br i1 %cmp285, label %if.then286, label %for.inc293

if.then286:                                       ; preds = %for.body280
  %122 = load ptr, ptr %m_data.i.i575, align 8, !tbaa !87
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 %indvars.iv701
  %arrayidx.i6.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 %indvars.iv707
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %l.sroa.7.i)
  %123 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i.i = icmp eq i8 %123, 0
  br i1 %guard.uninitialized.i.i, label %init.check.i.i, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i, !prof !173

init.check.i.i:                                   ; preds = %if.then286
  %124 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  %tobool.not.i.i584 = icmp eq i32 %124, 0
  br i1 %tobool.not.i.i584, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i, label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %init.check.i.i
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8, !tbaa !174
  %125 = call ptr @llvm.invariant.start.p0(i64 72, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy)
  call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i

_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i: ; preds = %invoke.cont.i.i, %init.check.i.i, %if.then286
  %l.sroa.0.0.copyload11.i = load ptr, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(52) %l.sroa.7.i, ptr noundef nonnull align 8 dereferenceable(52) getelementptr inbounds (%"struct.btSoftBody::Link", ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, i64 0, i32 1, i64 0), i64 52, i1 false)
  br i1 %tobool.not.i, label %cond.false.i, label %if.end.i

cond.false.i:                                     ; preds = %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i
  %126 = load ptr, ptr %m_data.i6.i, align 8, !tbaa !119
  %127 = load ptr, ptr %126, align 8, !tbaa !219
  br label %if.end.i

if.end.i:                                         ; preds = %cond.false.i, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i
  %l.sroa.6.0.i = phi ptr [ %127, %cond.false.i ], [ %mat, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i ]
  %128 = load i32, ptr %m_size.i423, align 4, !tbaa !92
  %129 = load i32, ptr %m_capacity.i.i.i586, align 8, !tbaa !93
  %cmp.i.i587 = icmp eq i32 %128, %129
  br i1 %cmp.i.i587, label %if.then.i.i589, label %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit

if.then.i.i589:                                   ; preds = %if.end.i
  %tobool.not.i.i.i588 = icmp eq i32 %128, 0
  %mul.i.i.i = shl nsw i32 %128, 1
  %cond.i.i.i = select i1 %tobool.not.i.i.i588, i32 1, i32 %mul.i.i.i
  %cmp.i.i.i = icmp slt i32 %128, %cond.i.i.i
  br i1 %cmp.i.i.i, label %if.then.i.i.i591, label %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit

if.then.i.i.i591:                                 ; preds = %if.then.i.i589
  %tobool.not.i.i.i.i590 = icmp eq i32 %cond.i.i.i, 0
  br i1 %tobool.not.i.i.i.i590, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.then.i.i.i591
  %conv.i.i.i.i.i = sext i32 %cond.i.i.i to i64
  %mul.i.i.i.i.i = mul nsw i64 %conv.i.i.i.i.i, 72
  %call.i.i.i.i.i = call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i.i, i32 noundef 16)
  %.pre.i.i = load i32, ptr %m_size.i423, align 4, !tbaa !92
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i: ; preds = %if.then.i.i.i.i, %if.then.i.i.i591
  %130 = phi i32 [ %.pre.i.i, %if.then.i.i.i.i ], [ %128, %if.then.i.i.i591 ]
  %retval.0.i.i.i.i = phi ptr [ %call.i.i.i.i.i, %if.then.i.i.i.i ], [ null, %if.then.i.i.i591 ]
  %cmp7.i.i.i.i = icmp sgt i32 %130, 0
  br i1 %cmp7.i.i.i.i, label %for.body.lr.ph.i.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i

for.body.lr.ph.i.i.i.i:                           ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i
  %wide.trip.count.i.i.i.i = zext i32 %130 to i64
  %xtraiter744 = and i64 %wide.trip.count.i.i.i.i, 1
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.i.new

for.body.lr.ph.i.i.i.i.new:                       ; preds = %for.body.lr.ph.i.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i.i, 4294967294
  br label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i, %for.body.lr.ph.i.i.i.i.new
  %indvars.iv.i.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.i.new ], [ %indvars.iv.next.i.i.i.i.1, %for.body.i.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.i.new ], [ %niter.next.1, %for.body.i.i.i.i ]
  %arrayidx.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i, i64 %indvars.iv.i.i.i.i
  %132 = load ptr, ptr %m_data.i.i.i.i592, align 8, !tbaa !91
  %arrayidx3.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %132, i64 %indvars.iv.i.i.i.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i = or i64 %indvars.iv.i.i.i.i, 1
  %arrayidx.i.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i, i64 %indvars.iv.next.i.i.i.i
  %133 = load ptr, ptr %m_data.i.i.i.i592, align 8, !tbaa !91
  %arrayidx3.i.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %133, i64 %indvars.iv.next.i.i.i.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i.1, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.i.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i.i, %for.body.lr.ph.i.i.i.i
  %indvars.iv.i.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i.i ], [ %indvars.iv.next.i.i.i.i.1, %for.body.i.i.i.i ]
  %lcmp.mod745.not = icmp eq i64 %xtraiter744, 0
  br i1 %lcmp.mod745.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i, label %for.body.i.i.i.i.epil

for.body.i.i.i.i.epil:                            ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i, i64 %indvars.iv.i.i.i.i.unr
  %134 = load ptr, ptr %m_data.i.i.i.i592, align 8, !tbaa !91
  %arrayidx3.i.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %134, i64 %indvars.iv.i.i.i.i.unr
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i.epil, i64 72, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i: ; preds = %for.body.i.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i
  %135 = load ptr, ptr %m_data.i.i.i.i592, align 8, !tbaa !91
  %tobool.not.i10.i.i.i = icmp eq ptr %135, null
  %136 = load i8, ptr %m_ownsMemory.i.i.i.i593, align 8, !range !159
  %tobool2.not.i.i.i.i594 = icmp eq i8 %136, 0
  %or.cond.i.i.i595 = select i1 %tobool.not.i10.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i594
  br i1 %or.cond.i.i.i595, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i, label %if.then3.i.i.i.i596

if.then3.i.i.i.i596:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i
  call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %135)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i: ; preds = %if.then3.i.i.i.i596, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i.i593, align 8, !tbaa !90
  store ptr %retval.0.i.i.i.i, ptr %m_data.i.i.i.i592, align 8, !tbaa !91
  store i32 %cond.i.i.i, ptr %m_capacity.i.i.i586, align 8, !tbaa !93
  %.pre7.i.i = load i32, ptr %m_size.i423, align 4, !tbaa !92
  br label %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit

_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit: ; preds = %if.end.i, %if.then.i.i589, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i
  %137 = phi i32 [ %.pre7.i.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i ], [ %128, %if.then.i.i589 ], [ %128, %if.end.i ]
  %138 = load ptr, ptr %m_data.i.i.i.i592, align 8, !tbaa !91
  %idxprom.i8.i = sext i32 %137 to i64
  %arrayidx.i9.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %138, i64 %idxprom.i8.i
  store ptr %l.sroa.0.0.copyload11.i, ptr %arrayidx.i9.i, align 8
  %l.sroa.6.0.arrayidx.i9.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i9.i, i64 8
  store ptr %l.sroa.6.0.i, ptr %l.sroa.6.0.arrayidx.i9.sroa_idx.i, align 8
  %l.sroa.7.0.arrayidx.i9.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i9.i, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7.0.arrayidx.i9.sroa_idx.i, ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7.i, i64 56, i1 false)
  %139 = load i32, ptr %m_size.i423, align 4, !tbaa !92
  %inc.i.i = add nsw i32 %139, 1
  store i32 %inc.i.i, ptr %m_size.i423, align 4, !tbaa !92
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %l.sroa.7.i)
  %140 = load ptr, ptr %m_data.i.i.i.i592, align 8, !tbaa !91
  %idxprom.i.i582 = sext i32 %139 to i64
  %m_n.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %140, i64 %idxprom.i.i582, i32 1
  store ptr %arrayidx.i.i, ptr %m_n.i, align 8, !tbaa !219
  %arrayidx6.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %140, i64 %idxprom.i.i582, i32 1, i64 1
  store ptr %arrayidx.i6.i, ptr %arrayidx6.i, align 8, !tbaa !219
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 %indvars.iv701, i32 1
  %m_x11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 %indvars.iv707, i32 1
  %141 = load float, ptr %m_x.i, align 4, !tbaa !137
  %142 = load float, ptr %m_x11.i, align 4, !tbaa !137
  %sub.i.i = fsub float %141, %142
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 %indvars.iv701, i32 1, i32 0, i64 1
  %143 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %arrayidx7.i20.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 %indvars.iv707, i32 1, i32 0, i64 1
  %144 = load float, ptr %arrayidx7.i20.i, align 4, !tbaa !137
  %sub8.i.i = fsub float %143, %144
  %arrayidx11.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 %indvars.iv701, i32 1, i32 0, i64 2
  %145 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %arrayidx13.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 %indvars.iv707, i32 1, i32 0, i64 2
  %146 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %145, %146
  %mul8.i.i.i.i = fmul float %sub8.i.i, %sub8.i.i
  %147 = call float @llvm.fmuladd.f32(float %sub.i.i, float %sub.i.i, float %mul8.i.i.i.i)
  %148 = call float @llvm.fmuladd.f32(float %sub14.i.i, float %sub14.i.i, float %147)
  %sqrt.i.i = call float @llvm.sqrt.f32(float %148)
  %m_rl.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %140, i64 %idxprom.i.i582, i32 2
  store float %sqrt.i.i, ptr %m_rl.i, align 8, !tbaa !239
  store i8 1, ptr %m_bUpdateRtCst.i, align 4, !tbaa !147
  %149 = load ptr, ptr %m_data.i.i.i.i592, align 8, !tbaa !91
  %m_bbending = getelementptr inbounds %"struct.btSoftBody::Link", ptr %149, i64 %idxprom.i.i582, i32 3
  %bf.load = load i8, ptr %m_bbending, align 4
  %bf.set = or i8 %bf.load, 1
  store i8 %bf.set, ptr %m_bbending, align 4
  %inc291 = add nsw i32 %nlinks.1634, 1
  br label %for.inc293

for.inc293:                                       ; preds = %for.body280, %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit
  %nlinks.2 = phi i32 [ %inc291, %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit ], [ %nlinks.1634, %for.body280 ]
  %indvars.iv.next702 = add nuw nsw i64 %indvars.iv701, 1
  %exitcond706.not = icmp eq i64 %indvars.iv.next702, %wide.trip.count711
  br i1 %exitcond706.not, label %for.cond274.loopexit, label %for.body280

delete.notnull:                                   ; preds = %for.cond274.loopexit, %for.cond228.preheader, %if.end273
  %nlinks.0.lcssa = phi i32 [ 0, %if.end273 ], [ 0, %for.cond228.preheader ], [ %nlinks.1.lcssa, %for.cond274.loopexit ]
  call void @_ZdaPv(ptr noundef nonnull %call2) #37
  br label %cleanup

cleanup:                                          ; preds = %entry, %delete.notnull
  %retval.0 = phi i32 [ %nlinks.0.lcssa, %delete.notnull ], [ 0, %entry ]
  ret i32 %retval.0

terminate.lpad:                                   ; preds = %if.then3.i.i.i.i467, %ehcleanup223
  %150 = landingpad { ptr, i32 }
          catch ptr null
  %151 = extractvalue { ptr, i32 } %150, 0
  call void @__clang_call_terminate(ptr %151) #39
  unreachable
}

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znam(i64 noundef) local_unnamed_addr #5

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayI9NodeLinksE6resizeEiRKS0_(ptr noundef nonnull align 8 dereferenceable(25) %this, i32 noundef %newsize, ptr noundef nonnull align 8 dereferenceable(32) %fillData) local_unnamed_addr #8 comdat align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !327
  %cmp = icmp sgt i32 %0, %newsize
  br i1 %cmp, label %for.body.lr.ph, label %if.else

for.body.lr.ph:                                   ; preds = %entry
  %m_data = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 5
  %1 = sext i32 %newsize to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %_ZN9NodeLinksD2Ev.exit
  %indvars.iv37 = phi i64 [ %1, %for.body.lr.ph ], [ %indvars.iv.next38, %_ZN9NodeLinksD2Ev.exit ]
  %2 = load ptr, ptr %m_data, align 8, !tbaa !326
  %arrayidx = getelementptr inbounds %struct.NodeLinks, ptr %2, i64 %indvars.iv37
  %m_data.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx, i64 0, i32 5
  %3 = load ptr, ptr %m_data.i.i.i.i, align 8, !tbaa !131
  %tobool.not.i.i.i.i = icmp eq ptr %3, null
  %m_ownsMemory.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx, i64 0, i32 6
  %4 = load i8, ptr %m_ownsMemory.i.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i = icmp eq i8 %4, 0
  %or.cond.i.i.i = select i1 %tobool.not.i.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i
  br i1 %or.cond.i.i.i, label %_ZN9NodeLinksD2Ev.exit, label %if.then3.i.i.i.i

if.then3.i.i.i.i:                                 ; preds = %for.body
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %3)
  br label %_ZN9NodeLinksD2Ev.exit

_ZN9NodeLinksD2Ev.exit:                           ; preds = %for.body, %if.then3.i.i.i.i
  %m_size.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i.i, align 8, !tbaa !130
  store ptr null, ptr %m_data.i.i.i.i, align 8, !tbaa !131
  store i32 0, ptr %m_size.i.i.i.i, align 4, !tbaa !132
  %m_capacity.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i.i, align 8, !tbaa !133
  %indvars.iv.next38 = add nsw i64 %indvars.iv37, 1
  %lftr.wideiv40 = trunc i64 %indvars.iv.next38 to i32
  %exitcond41.not = icmp eq i32 %0, %lftr.wideiv40
  br i1 %exitcond41.not, label %if.end17, label %for.body

if.else:                                          ; preds = %entry
  %cmp4 = icmp slt i32 %0, %newsize
  br i1 %cmp4, label %for.body10.lr.ph, label %if.end17

for.body10.lr.ph:                                 ; preds = %if.else
  tail call void @_ZN20btAlignedObjectArrayI9NodeLinksE7reserveEi(ptr noundef nonnull align 8 dereferenceable(25) %this, i32 noundef %newsize)
  %m_data11 = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 5
  %m_size.i4.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %fillData, i64 0, i32 2
  %m_data.i5.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %fillData, i64 0, i32 5
  %5 = sext i32 %0 to i64
  br label %for.body10

for.body10:                                       ; preds = %for.body10.lr.ph, %_ZN9NodeLinksC2ERKS_.exit
  %indvars.iv = phi i64 [ %5, %for.body10.lr.ph ], [ %indvars.iv.next, %_ZN9NodeLinksC2ERKS_.exit ]
  %6 = load ptr, ptr %m_data11, align 8, !tbaa !326
  %arrayidx13 = getelementptr inbounds %struct.NodeLinks, ptr %6, i64 %indvars.iv
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx13, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !130
  %m_data.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx13, i64 0, i32 5
  store ptr null, ptr %m_data.i.i.i, align 8, !tbaa !131
  %m_size.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx13, i64 0, i32 2
  store i32 0, ptr %m_size.i.i.i, align 4, !tbaa !132
  %m_capacity.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx13, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i, align 8, !tbaa !133
  %7 = load i32, ptr %m_size.i4.i.i, align 4, !tbaa !132
  %or.cond.i.i = icmp sgt i32 %7, 0
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i.i.i, label %_ZN20btAlignedObjectArrayIiE6resizeEiRKi.exit.thread.i.i

_ZN20btAlignedObjectArrayIiE6resizeEiRKi.exit.thread.i.i: ; preds = %for.body10
  store i32 %7, ptr %m_size.i.i.i, align 4, !tbaa !132
  br label %_ZN9NodeLinksC2ERKS_.exit

_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i.i.i: ; preds = %for.body10
  %conv.i.i.i.i.i.i = zext i32 %7 to i64
  %mul.i.i.i.i.i.i = shl nuw nsw i64 %conv.i.i.i.i.i.i, 2
  %call.i.i.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i.i.i, i32 noundef 16)
  %call.i.i.i.i.i.i44 = ptrtoint ptr %call.i.i.i.i.i.i to i64
  %.pre.i.i.i = load i32, ptr %m_size.i.i.i, align 4, !tbaa !132
  %cmp7.i.i.i.i.i = icmp sgt i32 %.pre.i.i.i, 0
  %8 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !131
  br i1 %cmp7.i.i.i.i.i, label %for.body.lr.ph.i.i.i.i.i, label %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i.i

for.body.lr.ph.i.i.i.i.i:                         ; preds = %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i.i.i
  %9 = ptrtoint ptr %8 to i64
  %wide.trip.count.i.i.i.i.i = zext i32 %.pre.i.i.i to i64
  %min.iters.check50 = icmp ult i32 %.pre.i.i.i, 8
  %10 = sub i64 %call.i.i.i.i.i.i44, %9
  %diff.check47 = icmp ult i64 %10, 32
  %or.cond = select i1 %min.iters.check50, i1 true, i1 %diff.check47
  br i1 %or.cond, label %for.body.i.i.i.i.i.preheader, label %vector.ph51

vector.ph51:                                      ; preds = %for.body.lr.ph.i.i.i.i.i
  %n.vec53 = and i64 %wide.trip.count.i.i.i.i.i, 4294967288
  br label %vector.body56

vector.body56:                                    ; preds = %vector.body56, %vector.ph51
  %index57 = phi i64 [ 0, %vector.ph51 ], [ %index.next60, %vector.body56 ]
  %11 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %index57
  %12 = getelementptr inbounds i32, ptr %8, i64 %index57
  %wide.load58 = load <4 x i32>, ptr %12, align 4, !tbaa !140
  %13 = getelementptr inbounds i32, ptr %12, i64 4
  %wide.load59 = load <4 x i32>, ptr %13, align 4, !tbaa !140
  store <4 x i32> %wide.load58, ptr %11, align 4, !tbaa !140
  %14 = getelementptr inbounds i32, ptr %11, i64 4
  store <4 x i32> %wide.load59, ptr %14, align 4, !tbaa !140
  %index.next60 = add nuw i64 %index57, 8
  %15 = icmp eq i64 %index.next60, %n.vec53
  br i1 %15, label %middle.block48, label %vector.body56, !llvm.loop !335

middle.block48:                                   ; preds = %vector.body56
  %cmp.n55 = icmp eq i64 %n.vec53, %wide.trip.count.i.i.i.i.i
  br i1 %cmp.n55, label %if.then.i11.i.i.i.i, label %for.body.i.i.i.i.i.preheader

for.body.i.i.i.i.i.preheader:                     ; preds = %for.body.lr.ph.i.i.i.i.i, %middle.block48
  %indvars.iv.i.i.i.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i.i.i ], [ %n.vec53, %middle.block48 ]
  %16 = xor i64 %indvars.iv.i.i.i.i.i.ph, -1
  %17 = add nsw i64 %16, %wide.trip.count.i.i.i.i.i
  %xtraiter = and i64 %wide.trip.count.i.i.i.i.i, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.i.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.i.prol

for.body.i.i.i.i.i.prol:                          ; preds = %for.body.i.i.i.i.i.preheader, %for.body.i.i.i.i.i.prol
  %indvars.iv.i.i.i.i.i.prol = phi i64 [ %indvars.iv.next.i.i.i.i.i.prol, %for.body.i.i.i.i.i.prol ], [ %indvars.iv.i.i.i.i.i.ph, %for.body.i.i.i.i.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.i.i.i.i.prol ], [ 0, %for.body.i.i.i.i.i.preheader ]
  %arrayidx.i.i.i.i.i.prol = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.i.i.i.i.i.prol
  %arrayidx3.i.i.i.i.i.prol = getelementptr inbounds i32, ptr %8, i64 %indvars.iv.i.i.i.i.i.prol
  %18 = load i32, ptr %arrayidx3.i.i.i.i.i.prol, align 4, !tbaa !140
  store i32 %18, ptr %arrayidx.i.i.i.i.i.prol, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i.prol = add nuw nsw i64 %indvars.iv.i.i.i.i.i.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.i.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.i.prol, !llvm.loop !336

for.body.i.i.i.i.i.prol.loopexit:                 ; preds = %for.body.i.i.i.i.i.prol, %for.body.i.i.i.i.i.preheader
  %indvars.iv.i.i.i.i.i.unr = phi i64 [ %indvars.iv.i.i.i.i.i.ph, %for.body.i.i.i.i.i.preheader ], [ %indvars.iv.next.i.i.i.i.i.prol, %for.body.i.i.i.i.i.prol ]
  %19 = icmp ult i64 %17, 3
  br i1 %19, label %if.then.i11.i.i.i.i, label %for.body.i.i.i.i.i

for.body.i.i.i.i.i:                               ; preds = %for.body.i.i.i.i.i.prol.loopexit, %for.body.i.i.i.i.i
  %indvars.iv.i.i.i.i.i = phi i64 [ %indvars.iv.next.i.i.i.i.i.3, %for.body.i.i.i.i.i ], [ %indvars.iv.i.i.i.i.i.unr, %for.body.i.i.i.i.i.prol.loopexit ]
  %arrayidx.i.i.i.i.i = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.i.i.i.i.i
  %arrayidx3.i.i.i.i.i = getelementptr inbounds i32, ptr %8, i64 %indvars.iv.i.i.i.i.i
  %20 = load i32, ptr %arrayidx3.i.i.i.i.i, align 4, !tbaa !140
  store i32 %20, ptr %arrayidx.i.i.i.i.i, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i.i.i, 1
  %arrayidx.i.i.i.i.i.1 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.next.i.i.i.i.i
  %arrayidx3.i.i.i.i.i.1 = getelementptr inbounds i32, ptr %8, i64 %indvars.iv.next.i.i.i.i.i
  %21 = load i32, ptr %arrayidx3.i.i.i.i.i.1, align 4, !tbaa !140
  store i32 %21, ptr %arrayidx.i.i.i.i.i.1, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i.i.i, 2
  %arrayidx.i.i.i.i.i.2 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.next.i.i.i.i.i.1
  %arrayidx3.i.i.i.i.i.2 = getelementptr inbounds i32, ptr %8, i64 %indvars.iv.next.i.i.i.i.i.1
  %22 = load i32, ptr %arrayidx3.i.i.i.i.i.2, align 4, !tbaa !140
  store i32 %22, ptr %arrayidx.i.i.i.i.i.2, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i.2 = add nuw nsw i64 %indvars.iv.i.i.i.i.i, 3
  %arrayidx.i.i.i.i.i.3 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.next.i.i.i.i.i.2
  %arrayidx3.i.i.i.i.i.3 = getelementptr inbounds i32, ptr %8, i64 %indvars.iv.next.i.i.i.i.i.2
  %23 = load i32, ptr %arrayidx3.i.i.i.i.i.3, align 4, !tbaa !140
  store i32 %23, ptr %arrayidx.i.i.i.i.i.3, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i.i.i, 4
  %exitcond.not.i.i.i.i.i.3 = icmp eq i64 %indvars.iv.next.i.i.i.i.i.3, %wide.trip.count.i.i.i.i.i
  br i1 %exitcond.not.i.i.i.i.i.3, label %if.then.i11.i.i.i.i, label %for.body.i.i.i.i.i, !llvm.loop !337

_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i.i: ; preds = %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i.i.i
  %tobool.not.i10.i.i.i.i = icmp eq ptr %8, null
  %24 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i.i = icmp eq i8 %24, 0
  %or.cond10.i.i = select i1 %tobool.not.i10.i.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i.i
  br i1 %or.cond10.i.i, label %for.body.lr.ph.i.i.i, label %if.then3.i.i.i.i.i

if.then.i11.i.i.i.i:                              ; preds = %for.body.i.i.i.i.i.prol.loopexit, %for.body.i.i.i.i.i, %middle.block48
  %.old.i.i = load i8, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !130, !range !159, !noundef !192
  %tobool2.not.i.i.i.old.i.i = icmp eq i8 %.old.i.i, 0
  br i1 %tobool2.not.i.i.i.old.i.i, label %for.body.lr.ph.i.i.i, label %if.then3.i.i.i.i.i

if.then3.i.i.i.i.i:                               ; preds = %if.then.i11.i.i.i.i, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %8)
  br label %for.body.lr.ph.i.i.i

for.body.lr.ph.i.i.i:                             ; preds = %if.then3.i.i.i.i.i, %if.then.i11.i.i.i.i, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !130
  store ptr %call.i.i.i.i.i.i, ptr %m_data.i.i.i, align 8, !tbaa !131
  store i32 %7, ptr %m_capacity.i.i.i, align 8, !tbaa !133
  %wide.trip.count.i.i.i = sext i32 %7 to i64
  %25 = shl nuw nsw i64 %wide.trip.count.i.i.i, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %call.i.i.i.i.i.i, i8 0, i64 %25, i1 false), !tbaa !140
  store i32 %7, ptr %m_size.i.i.i, align 4, !tbaa !132
  %26 = load ptr, ptr %m_data.i5.i.i, align 8, !tbaa !131
  %min.iters.check = icmp ult i32 %7, 8
  %27 = ptrtoint ptr %26 to i64
  %28 = sub i64 %call.i.i.i.i.i.i44, %27
  %diff.check = icmp ult i64 %28, 32
  %or.cond62 = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond62, label %for.body.i.i.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i.i
  %n.vec = and i64 %conv.i.i.i.i.i.i, 4294967288
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %29 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %index
  %30 = getelementptr inbounds i32, ptr %26, i64 %index
  %wide.load = load <4 x i32>, ptr %30, align 4, !tbaa !140
  %31 = getelementptr inbounds i32, ptr %30, i64 4
  %wide.load45 = load <4 x i32>, ptr %31, align 4, !tbaa !140
  store <4 x i32> %wide.load, ptr %29, align 4, !tbaa !140
  %32 = getelementptr inbounds i32, ptr %29, i64 4
  store <4 x i32> %wide.load45, ptr %32, align 4, !tbaa !140
  %index.next = add nuw i64 %index, 8
  %33 = icmp eq i64 %index.next, %n.vec
  br i1 %33, label %middle.block, label %vector.body, !llvm.loop !338

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %conv.i.i.i.i.i.i
  br i1 %cmp.n, label %_ZN9NodeLinksC2ERKS_.exit, label %for.body.i.i.i.preheader

for.body.i.i.i.preheader:                         ; preds = %for.body.lr.ph.i.i.i, %middle.block
  %indvars.iv.i7.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %n.vec, %middle.block ]
  %34 = xor i64 %indvars.iv.i7.i.i.ph, -1
  %35 = add nsw i64 %34, %conv.i.i.i.i.i.i
  %xtraiter64 = and i64 %conv.i.i.i.i.i.i, 3
  %lcmp.mod65.not = icmp eq i64 %xtraiter64, 0
  br i1 %lcmp.mod65.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol

for.body.i.i.i.prol:                              ; preds = %for.body.i.i.i.preheader, %for.body.i.i.i.prol
  %indvars.iv.i7.i.i.prol = phi i64 [ %indvars.iv.next.i8.i.i.prol, %for.body.i.i.i.prol ], [ %indvars.iv.i7.i.i.ph, %for.body.i.i.i.preheader ]
  %prol.iter66 = phi i64 [ %prol.iter66.next, %for.body.i.i.i.prol ], [ 0, %for.body.i.i.i.preheader ]
  %arrayidx.i.i.i.prol = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.i7.i.i.prol
  %arrayidx3.i.i.i.prol = getelementptr inbounds i32, ptr %26, i64 %indvars.iv.i7.i.i.prol
  %36 = load i32, ptr %arrayidx3.i.i.i.prol, align 4, !tbaa !140
  store i32 %36, ptr %arrayidx.i.i.i.prol, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i.prol = add nuw nsw i64 %indvars.iv.i7.i.i.prol, 1
  %prol.iter66.next = add i64 %prol.iter66, 1
  %prol.iter66.cmp.not = icmp eq i64 %prol.iter66.next, %xtraiter64
  br i1 %prol.iter66.cmp.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol, !llvm.loop !339

for.body.i.i.i.prol.loopexit:                     ; preds = %for.body.i.i.i.prol, %for.body.i.i.i.preheader
  %indvars.iv.i7.i.i.unr = phi i64 [ %indvars.iv.i7.i.i.ph, %for.body.i.i.i.preheader ], [ %indvars.iv.next.i8.i.i.prol, %for.body.i.i.i.prol ]
  %37 = icmp ult i64 %35, 3
  br i1 %37, label %_ZN9NodeLinksC2ERKS_.exit, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i
  %indvars.iv.i7.i.i = phi i64 [ %indvars.iv.next.i8.i.i.3, %for.body.i.i.i ], [ %indvars.iv.i7.i.i.unr, %for.body.i.i.i.prol.loopexit ]
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.i7.i.i
  %arrayidx3.i.i.i = getelementptr inbounds i32, ptr %26, i64 %indvars.iv.i7.i.i
  %38 = load i32, ptr %arrayidx3.i.i.i, align 4, !tbaa !140
  store i32 %38, ptr %arrayidx.i.i.i, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i = add nuw nsw i64 %indvars.iv.i7.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.next.i8.i.i
  %arrayidx3.i.i.i.1 = getelementptr inbounds i32, ptr %26, i64 %indvars.iv.next.i8.i.i
  %39 = load i32, ptr %arrayidx3.i.i.i.1, align 4, !tbaa !140
  store i32 %39, ptr %arrayidx.i.i.i.1, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i.1 = add nuw nsw i64 %indvars.iv.i7.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.next.i8.i.i.1
  %arrayidx3.i.i.i.2 = getelementptr inbounds i32, ptr %26, i64 %indvars.iv.next.i8.i.i.1
  %40 = load i32, ptr %arrayidx3.i.i.i.2, align 4, !tbaa !140
  store i32 %40, ptr %arrayidx.i.i.i.2, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i.2 = add nuw nsw i64 %indvars.iv.i7.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.next.i8.i.i.2
  %arrayidx3.i.i.i.3 = getelementptr inbounds i32, ptr %26, i64 %indvars.iv.next.i8.i.i.2
  %41 = load i32, ptr %arrayidx3.i.i.i.3, align 4, !tbaa !140
  store i32 %41, ptr %arrayidx.i.i.i.3, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i.3 = add nuw nsw i64 %indvars.iv.i7.i.i, 4
  %exitcond.not.i9.i.i.3 = icmp eq i64 %indvars.iv.next.i8.i.i.3, %conv.i.i.i.i.i.i
  br i1 %exitcond.not.i9.i.i.3, label %_ZN9NodeLinksC2ERKS_.exit, label %for.body.i.i.i, !llvm.loop !340

_ZN9NodeLinksC2ERKS_.exit:                        ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i, %middle.block, %_ZN20btAlignedObjectArrayIiE6resizeEiRKi.exit.thread.i.i
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %lftr.wideiv, %newsize
  br i1 %exitcond.not, label %if.end17, label %for.body10

if.end17:                                         ; preds = %_ZN9NodeLinksC2ERKS_.exit, %_ZN9NodeLinksD2Ev.exit, %if.else
  store i32 %newsize, ptr %m_size.i, align 4, !tbaa !327
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayI9NodeLinksED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 2
  %0 = load i32, ptr %m_size.i.i, align 4, !tbaa !327
  %cmp4.i.i = icmp sgt i32 %0, 0
  br i1 %cmp4.i.i, label %for.body.lr.ph.i.i, label %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i

for.body.lr.ph.i.i:                               ; preds = %entry
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 5
  %zext.i = zext i32 %0 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %_ZN9NodeLinksD2Ev.exit.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %_ZN9NodeLinksD2Ev.exit.i.i ]
  %1 = load ptr, ptr %m_data.i.i, align 8, !tbaa !326
  %arrayidx.i.i = getelementptr inbounds %struct.NodeLinks, ptr %1, i64 %indvars.iv.i.i
  %m_data.i.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i.i, i64 0, i32 5
  %2 = load ptr, ptr %m_data.i.i.i.i.i.i, align 8, !tbaa !131
  %tobool.not.i.i.i.i.i.i = icmp eq ptr %2, null
  %m_ownsMemory.i.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i.i, i64 0, i32 6
  %3 = load i8, ptr %m_ownsMemory.i.i.i.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i.i.i = icmp eq i8 %3, 0
  %or.cond.i.i.i.i.i = select i1 %tobool.not.i.i.i.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i.i.i
  br i1 %or.cond.i.i.i.i.i, label %_ZN9NodeLinksD2Ev.exit.i.i, label %if.then3.i.i.i.i.i.i

if.then3.i.i.i.i.i.i:                             ; preds = %for.body.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %2)
  br label %_ZN9NodeLinksD2Ev.exit.i.i

_ZN9NodeLinksD2Ev.exit.i.i:                       ; preds = %if.then3.i.i.i.i.i.i, %for.body.i.i
  %m_size.i.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i.i, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i.i.i.i, align 8, !tbaa !130
  store ptr null, ptr %m_data.i.i.i.i.i.i, align 8, !tbaa !131
  store i32 0, ptr %m_size.i.i.i.i.i.i, align 4, !tbaa !132
  %m_capacity.i.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i.i, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i.i.i.i, align 8, !tbaa !133
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %4 = icmp eq i64 %indvars.iv.next.i.i, %zext.i
  br i1 %4, label %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i, label %for.body.i.i

_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i: ; preds = %_ZN9NodeLinksD2Ev.exit.i.i, %entry
  %m_data.i2.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 5
  %5 = load ptr, ptr %m_data.i2.i, align 8, !tbaa !326
  %tobool.not.i.i = icmp eq ptr %5, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 6
  %6 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %6, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayI9NodeLinksE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %5)
  br label %_ZN20btAlignedObjectArrayI9NodeLinksE5clearEv.exit

_ZN20btAlignedObjectArrayI9NodeLinksE5clearEv.exit: ; preds = %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !323
  store ptr null, ptr %m_data.i2.i, align 8, !tbaa !326
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !327
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !328
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(ptr noundef) local_unnamed_addr #6

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody20randomizeConstraintsEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #10 align 2 {
entry:
  %tmp.i43 = alloca %"struct.btSoftBody::Face", align 8
  %tmp.i = alloca %"struct.btSoftBody::Link", align 8
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !92
  %cmp45 = icmp sgt i32 %0, 0
  br i1 %cmp45, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %conv = zext i32 %0 to i64
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %seed.046 = phi i64 [ 243703, %for.body.lr.ph ], [ %and, %for.body ]
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !91
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv
  %mul = mul nuw nsw i64 %seed.046, 1664525
  %add = add nuw nsw i64 %mul, 1013904223
  %and = and i64 %add, 4294967295
  %rem = urem i64 %and, %conv
  %sext44 = shl nuw i64 %rem, 32
  %idxprom.i34 = ashr exact i64 %sext44, 32
  %arrayidx.i35 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %idxprom.i34
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %tmp.i)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tmp.i, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i, i64 72, i1 false)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(68) %arrayidx.i, ptr noundef nonnull align 8 dereferenceable(68) %arrayidx.i35, i64 68, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(68) %arrayidx.i35, ptr noundef nonnull align 8 dereferenceable(68) %tmp.i, i64 68, i1 false)
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %tmp.i)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %seed.0.lcssa = phi i64 [ 243703, %entry ], [ %and, %for.body ]
  %m_size.i36 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %2 = load i32, ptr %m_size.i36, align 4, !tbaa !96
  %cmp948 = icmp sgt i32 %2, 0
  br i1 %cmp948, label %for.body10.lr.ph, label %for.end23

for.body10.lr.ph:                                 ; preds = %for.end
  %m_data.i37 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %conv17 = zext i32 %2 to i64
  %wide.trip.count55 = zext i32 %2 to i64
  br label %for.body10

for.body10:                                       ; preds = %for.body10.lr.ph, %for.body10
  %indvars.iv52 = phi i64 [ 0, %for.body10.lr.ph ], [ %indvars.iv.next53, %for.body10 ]
  %seed.149 = phi i64 [ %seed.0.lcssa, %for.body10.lr.ph ], [ %and16, %for.body10 ]
  %3 = load ptr, ptr %m_data.i37, align 8, !tbaa !95
  %arrayidx.i39 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 %indvars.iv52
  %mul14 = mul nuw nsw i64 %seed.149, 1664525
  %add15 = add nuw nsw i64 %mul14, 1013904223
  %and16 = and i64 %add15, 4294967295
  %rem18 = urem i64 %and16, %conv17
  %sext = shl nuw i64 %rem18, 32
  %idxprom.i41 = ashr exact i64 %sext, 32
  %arrayidx.i42 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 %idxprom.i41
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %tmp.i43)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tmp.i43, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i39, i64 72, i1 false)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i39, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i42, i64 72, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i42, ptr noundef nonnull align 8 dereferenceable(72) %tmp.i43, i64 72, i1 false)
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %tmp.i43)
  %indvars.iv.next53 = add nuw nsw i64 %indvars.iv52, 1
  %exitcond56.not = icmp eq i64 %indvars.iv.next53, %wide.trip.count55
  br i1 %exitcond56.not, label %for.end23, label %for.body10

for.end23:                                        ; preds = %for.body10, %for.end
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody14releaseClusterEi(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %index) local_unnamed_addr #4 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %idxprom.i = sext i32 %index to i64
  %arrayidx.i = getelementptr inbounds ptr, ptr %0, i64 %idxprom.i
  %1 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 15
  %2 = load ptr, ptr %m_leaf, align 8, !tbaa !221
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %m_cdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  tail call void @_ZN6btDbvt6removeEP10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt, ptr noundef nonnull %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  tail call void @_ZN10btSoftBody7ClusterD2Ev(ptr noundef nonnull align 8 dereferenceable(424) %1)
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %1)
  %m_size.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  %3 = load i32, ptr %m_size.i.i.i, align 4, !tbaa !124
  %cmp8.i.i = icmp sgt i32 %3, 0
  br i1 %cmp8.i.i, label %for.body.lr.ph.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6removeERKS2_.exit

for.body.lr.ph.i.i:                               ; preds = %if.end
  %4 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %wide.trip.count.i.i = zext i32 %3 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %for.inc.i.i ]
  %arrayidx.i.i = getelementptr inbounds ptr, ptr %4, i64 %indvars.iv.i.i
  %5 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !219
  %cmp3.i.i = icmp eq ptr %5, %1
  br i1 %cmp3.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i, label %for.inc.i.i

for.inc.i.i:                                      ; preds = %for.body.i.i
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6removeERKS2_.exit, label %for.body.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i: ; preds = %for.body.i.i
  %6 = trunc i64 %indvars.iv.i.i to i32
  %cmp.i = icmp sgt i32 %3, %6
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6removeERKS2_.exit

if.then.i:                                        ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i
  %sub.i = add nsw i32 %3, -1
  %sext.i = shl i64 %indvars.iv.i.i, 32
  %idxprom.i.i = ashr exact i64 %sext.i, 32
  %arrayidx.i7.i = getelementptr inbounds ptr, ptr %4, i64 %idxprom.i.i
  %7 = load ptr, ptr %arrayidx.i7.i, align 8, !tbaa !219
  %idxprom3.i.i = sext i32 %sub.i to i64
  %arrayidx4.i.i = getelementptr inbounds ptr, ptr %4, i64 %idxprom3.i.i
  %8 = load ptr, ptr %arrayidx4.i.i, align 8, !tbaa !219
  store ptr %8, ptr %arrayidx.i7.i, align 8, !tbaa !219
  %9 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %arrayidx10.i.i = getelementptr inbounds ptr, ptr %9, i64 %idxprom3.i.i
  store ptr %7, ptr %arrayidx10.i.i, align 8, !tbaa !219
  store i32 %sub.i, ptr %m_size.i.i.i, align 4, !tbaa !124
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6removeERKS2_.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6removeERKS2_.exit: ; preds = %for.inc.i.i, %if.end, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i, %if.then.i
  ret void
}

declare void @_ZN6btDbvt6removeEP10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(64), ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody7ClusterD2Ev(ptr noundef nonnull align 8 dereferenceable(424) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %m_data.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %this, i64 0, i32 2, i32 5
  %0 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !33
  %tobool.not.i.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %this, i64 0, i32 2, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %1, 0
  %or.cond.i.i = select i1 %tobool.not.i.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %invoke.cont, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %entry
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry, %if.then3.i.i.i
  %m_size.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %this, i64 0, i32 2, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !30
  store ptr null, ptr %m_data.i.i.i, align 8, !tbaa !33
  store i32 0, ptr %m_size.i.i.i, align 4, !tbaa !34
  %m_capacity.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %this, i64 0, i32 2, i32 3
  store i32 0, ptr %m_capacity.i.i.i, align 8, !tbaa !35
  %m_data.i.i.i10 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %this, i64 0, i32 1, i32 5
  %2 = load ptr, ptr %m_data.i.i.i10, align 8, !tbaa !39
  %tobool.not.i.i.i11 = icmp eq ptr %2, null
  %m_ownsMemory.i.i.i12 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %this, i64 0, i32 1, i32 6
  %3 = load i8, ptr %m_ownsMemory.i.i.i12, align 8, !range !159
  %tobool2.not.i.i.i13 = icmp eq i8 %3, 0
  %or.cond.i.i14 = select i1 %tobool.not.i.i.i11, i1 true, i1 %tobool2.not.i.i.i13
  br i1 %or.cond.i.i14, label %invoke.cont3, label %if.then3.i.i.i15

if.then3.i.i.i15:                                 ; preds = %invoke.cont
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %2)
          to label %invoke.cont3 unwind label %lpad2

invoke.cont3:                                     ; preds = %invoke.cont, %if.then3.i.i.i15
  %m_size.i.i.i16 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %this, i64 0, i32 1, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i12, align 8, !tbaa !36
  store ptr null, ptr %m_data.i.i.i10, align 8, !tbaa !39
  store i32 0, ptr %m_size.i.i.i16, align 4, !tbaa !40
  %m_capacity.i.i.i17 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %this, i64 0, i32 1, i32 3
  store i32 0, ptr %m_capacity.i.i.i17, align 8, !tbaa !41
  %m_data.i.i.i19 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %this, i64 0, i32 5
  %4 = load ptr, ptr %m_data.i.i.i19, align 8, !tbaa !320
  %tobool.not.i.i.i20 = icmp eq ptr %4, null
  %m_ownsMemory.i.i.i21 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %this, i64 0, i32 6
  %5 = load i8, ptr %m_ownsMemory.i.i.i21, align 8, !range !159
  %tobool2.not.i.i.i22 = icmp eq i8 %5, 0
  %or.cond.i.i23 = select i1 %tobool.not.i.i.i20, i1 true, i1 %tobool2.not.i.i.i22
  br i1 %or.cond.i.i23, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEED2Ev.exit, label %if.then3.i.i.i24

if.then3.i.i.i24:                                 ; preds = %invoke.cont3
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %4)
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEED2Ev.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEED2Ev.exit: ; preds = %invoke.cont3, %if.then3.i.i.i24
  %m_size.i.i.i25 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i21, align 8, !tbaa !341
  store ptr null, ptr %m_data.i.i.i19, align 8, !tbaa !320
  store i32 0, ptr %m_size.i.i.i25, align 4, !tbaa !319
  %m_capacity.i.i.i26 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i26, align 8, !tbaa !342
  ret void

lpad:                                             ; preds = %if.then3.i.i.i
  %6 = landingpad { ptr, i32 }
          cleanup
  %m_masses4 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %this, i64 0, i32 1
  invoke void @_ZN20btAlignedObjectArrayIfED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_masses4)
          to label %ehcleanup unwind label %terminate.lpad

lpad2:                                            ; preds = %if.then3.i.i.i15
  %7 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad, %lpad2
  %.pn = phi { ptr, i32 } [ %7, %lpad2 ], [ %6, %lpad ]
  invoke void @_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this)
          to label %eh.resume unwind label %terminate.lpad

eh.resume:                                        ; preds = %ehcleanup
  resume { ptr, i32 } %.pn

terminate.lpad:                                   ; preds = %ehcleanup, %lpad
  %8 = landingpad { ptr, i32 }
          catch ptr null
  %9 = extractvalue { ptr, i32 } %8, 0
  tail call void @__clang_call_terminate(ptr %9) #39
  unreachable
}

; Function Attrs: uwtable
define dso_local noundef i32 @_ZN10btSoftBody16generateClustersEii(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %k, i32 noundef %maxiterations) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %idx = alloca [3 x i32], align 4
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  %0 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp3.i = icmp sgt i32 %0, 0
  br i1 %cmp3.i, label %while.body.lr.ph.i, label %_ZN10btSoftBody15releaseClustersEv.exit

while.body.lr.ph.i:                               ; preds = %entry
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %m_cdbvt.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  br label %while.body.i

while.body.i:                                     ; preds = %_ZN10btSoftBody14releaseClusterEi.exit.i, %while.body.lr.ph.i
  %1 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !123
  %2 = load ptr, ptr %1, align 8, !tbaa !219
  %m_leaf.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 15
  %3 = load ptr, ptr %m_leaf.i.i, align 8, !tbaa !221
  %tobool.not.i.i = icmp eq ptr %3, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %while.body.i
  tail call void @_ZN6btDbvt6removeEP10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt.i.i, ptr noundef nonnull %3)
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %while.body.i
  tail call void @_ZN10btSoftBody7ClusterD2Ev(ptr noundef nonnull align 8 dereferenceable(424) %2)
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %2)
  %4 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp8.i.i.i.i = icmp sgt i32 %4, 0
  br i1 %cmp8.i.i.i.i, label %for.body.lr.ph.i.i.i.i, label %_ZN10btSoftBody15releaseClustersEv.exit

for.body.lr.ph.i.i.i.i:                           ; preds = %if.end.i.i
  %5 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !123
  %wide.trip.count.i.i.i.i = zext i32 %4 to i64
  br label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.inc.i.i.i.i, %for.body.lr.ph.i.i.i.i
  %indvars.iv.i.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.i ], [ %indvars.iv.next.i.i.i.i, %for.inc.i.i.i.i ]
  %arrayidx.i.i.i.i = getelementptr inbounds ptr, ptr %5, i64 %indvars.iv.i.i.i.i
  %6 = load ptr, ptr %arrayidx.i.i.i.i, align 8, !tbaa !219
  %cmp3.i.i.i.i = icmp eq ptr %6, %2
  br i1 %cmp3.i.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i, label %for.inc.i.i.i.i

for.inc.i.i.i.i:                                  ; preds = %for.body.i.i.i.i
  %indvars.iv.next.i.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i.i, 1
  %exitcond.not.i.i.i.i = icmp eq i64 %indvars.iv.next.i.i.i.i, %wide.trip.count.i.i.i.i
  br i1 %exitcond.not.i.i.i.i, label %_ZN10btSoftBody14releaseClusterEi.exit.i, label %for.body.i.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i: ; preds = %for.body.i.i.i.i
  %7 = trunc i64 %indvars.iv.i.i.i.i to i32
  %cmp.i.i.i = icmp sgt i32 %4, %7
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN10btSoftBody14releaseClusterEi.exit.i

if.then.i.i.i:                                    ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i
  %sub.i.i.i = add nsw i32 %4, -1
  %sext.i.i.i = shl i64 %indvars.iv.i.i.i.i, 32
  %idxprom.i.i.i.i = ashr exact i64 %sext.i.i.i, 32
  %arrayidx.i7.i.i.i = getelementptr inbounds ptr, ptr %5, i64 %idxprom.i.i.i.i
  %8 = load ptr, ptr %arrayidx.i7.i.i.i, align 8, !tbaa !219
  %idxprom3.i.i.i.i = sext i32 %sub.i.i.i to i64
  %arrayidx4.i.i.i.i = getelementptr inbounds ptr, ptr %5, i64 %idxprom3.i.i.i.i
  %9 = load ptr, ptr %arrayidx4.i.i.i.i, align 8, !tbaa !219
  store ptr %9, ptr %arrayidx.i7.i.i.i, align 8, !tbaa !219
  %10 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !123
  %arrayidx10.i.i.i.i = getelementptr inbounds ptr, ptr %10, i64 %idxprom3.i.i.i.i
  store ptr %8, ptr %arrayidx10.i.i.i.i, align 8, !tbaa !219
  store i32 %sub.i.i.i, ptr %m_size.i.i, align 4, !tbaa !124
  br label %_ZN10btSoftBody14releaseClusterEi.exit.i

_ZN10btSoftBody14releaseClusterEi.exit.i:         ; preds = %for.inc.i.i.i.i, %if.then.i.i.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i
  %11 = phi i32 [ %4, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i ], [ %sub.i.i.i, %if.then.i.i.i ], [ %4, %for.inc.i.i.i.i ]
  %cmp.i = icmp sgt i32 %11, 0
  br i1 %cmp.i, label %while.body.i, label %_ZN10btSoftBody15releaseClustersEv.exit

_ZN10btSoftBody15releaseClustersEv.exit:          ; preds = %if.end.i.i, %_ZN10btSoftBody14releaseClusterEi.exit.i, %entry
  %12 = phi i32 [ %0, %entry ], [ %4, %if.end.i.i ], [ %11, %_ZN10btSoftBody14releaseClusterEi.exit.i ]
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %13 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %.sroa.speculated1729 = tail call i32 @llvm.smin.i32(i32 %13, i32 %k)
  %cmp4.i = icmp slt i32 %12, %.sroa.speculated1729
  br i1 %cmp4.i, label %if.then5.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit

if.then5.i:                                       ; preds = %_ZN10btSoftBody15releaseClustersEv.exit
  %m_capacity.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 3
  %14 = load i32, ptr %m_capacity.i.i.i, align 8, !tbaa !125
  %cmp.i.i = icmp slt i32 %14, %.sroa.speculated1729
  br i1 %cmp.i.i, label %if.then.i.i733, label %for.body10.lr.ph.i

if.then.i.i733:                                   ; preds = %if.then5.i
  %tobool.not.i.i.i = icmp eq i32 %.sroa.speculated1729, 0
  br i1 %tobool.not.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i: ; preds = %if.then.i.i733
  %conv.i.i.i.i = sext i32 %.sroa.speculated1729 to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 3
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp7.i.i.i = icmp sgt i32 %.pre.i, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i
  %m_data.i.i.i735 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %wide.trip.count.i.i.i = zext i32 %.pre.i to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 3
  %15 = icmp ult i32 %.pre.i, 4
  br i1 %15, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967292
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.3, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds ptr, ptr %call.i.i.i.i, i64 %indvars.iv.i.i.i
  %16 = load ptr, ptr %m_data.i.i.i735, align 8, !tbaa !123
  %arrayidx3.i.i.i = getelementptr inbounds ptr, ptr %16, i64 %indvars.iv.i.i.i
  %17 = load ptr, ptr %arrayidx3.i.i.i, align 8, !tbaa !219
  store ptr %17, ptr %arrayidx.i.i.i, align 8, !tbaa !219
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds ptr, ptr %call.i.i.i.i, i64 %indvars.iv.next.i.i.i
  %18 = load ptr, ptr %m_data.i.i.i735, align 8, !tbaa !123
  %arrayidx3.i.i.i.1 = getelementptr inbounds ptr, ptr %18, i64 %indvars.iv.next.i.i.i
  %19 = load ptr, ptr %arrayidx3.i.i.i.1, align 8, !tbaa !219
  store ptr %19, ptr %arrayidx.i.i.i.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.1 = or i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds ptr, ptr %call.i.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %20 = load ptr, ptr %m_data.i.i.i735, align 8, !tbaa !123
  %arrayidx3.i.i.i.2 = getelementptr inbounds ptr, ptr %20, i64 %indvars.iv.next.i.i.i.1
  %21 = load ptr, ptr %arrayidx3.i.i.i.2, align 8, !tbaa !219
  store ptr %21, ptr %arrayidx.i.i.i.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.2 = or i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds ptr, ptr %call.i.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %22 = load ptr, ptr %m_data.i.i.i735, align 8, !tbaa !123
  %arrayidx3.i.i.i.3 = getelementptr inbounds ptr, ptr %22, i64 %indvars.iv.next.i.i.i.2
  %23 = load ptr, ptr %arrayidx3.i.i.i.3, align 8, !tbaa !219
  store ptr %23, ptr %arrayidx.i.i.i.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil
  %indvars.iv.i.i.i.epil = phi i64 [ %indvars.iv.next.i.i.i.epil, %for.body.i.i.i.epil ], [ %indvars.iv.i.i.i.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.i.i.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %arrayidx.i.i.i.epil = getelementptr inbounds ptr, ptr %call.i.i.i.i, i64 %indvars.iv.i.i.i.epil
  %24 = load ptr, ptr %m_data.i.i.i735, align 8, !tbaa !123
  %arrayidx3.i.i.i.epil = getelementptr inbounds ptr, ptr %24, i64 %indvars.iv.i.i.i.epil
  %25 = load ptr, ptr %arrayidx3.i.i.i.epil, align 8, !tbaa !219
  store ptr %25, ptr %arrayidx.i.i.i.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.epil = add nuw nsw i64 %indvars.iv.i.i.i.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil, !llvm.loop !343

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil, %if.then.i.i733, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i
  %retval.0.i.i.i1930 = phi ptr [ %call.i.i.i.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i ], [ null, %if.then.i.i733 ], [ %call.i.i.i.i, %for.body.i.i.i.epil ], [ %call.i.i.i.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %26 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !123
  %tobool.not.i10.i.i = icmp eq ptr %26, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 6
  %27 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %27, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %if.end.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %26)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !122
  store ptr %retval.0.i.i.i1930, ptr %m_data.i9.i.i, align 8, !tbaa !123
  store i32 %.sroa.speculated1729, ptr %m_capacity.i.i.i, align 8, !tbaa !125
  br label %for.body10.lr.ph.i

for.body10.lr.ph.i:                               ; preds = %if.end.i, %if.then5.i
  %m_data11.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %28 = sext i32 %12 to i64
  %wide.trip.count.i = sext i32 %.sroa.speculated1729 to i64
  %29 = sub nsw i64 %wide.trip.count.i, %28
  %30 = xor i64 %28, -1
  %31 = add nsw i64 %30, %wide.trip.count.i
  %xtraiter1978 = and i64 %29, 3
  %lcmp.mod1979.not = icmp eq i64 %xtraiter1978, 0
  br i1 %lcmp.mod1979.not, label %for.body10.i.prol.loopexit, label %for.body10.i.prol

for.body10.i.prol:                                ; preds = %for.body10.lr.ph.i, %for.body10.i.prol
  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %for.body10.i.prol ], [ %28, %for.body10.lr.ph.i ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body10.i.prol ], [ 0, %for.body10.lr.ph.i ]
  %32 = load ptr, ptr %m_data11.i, align 8, !tbaa !123
  %arrayidx13.i.prol = getelementptr inbounds ptr, ptr %32, i64 %indvars.iv.i.prol
  store ptr null, ptr %arrayidx13.i.prol, align 8, !tbaa !219
  %indvars.iv.next.i.prol = add nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter1978
  br i1 %prol.iter.cmp.not, label %for.body10.i.prol.loopexit, label %for.body10.i.prol, !llvm.loop !344

for.body10.i.prol.loopexit:                       ; preds = %for.body10.i.prol, %for.body10.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ %28, %for.body10.lr.ph.i ], [ %indvars.iv.next.i.prol, %for.body10.i.prol ]
  %33 = icmp ult i64 %31, 3
  br i1 %33, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit, label %for.body10.i

for.body10.i:                                     ; preds = %for.body10.i.prol.loopexit, %for.body10.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body10.i ], [ %indvars.iv.i.unr, %for.body10.i.prol.loopexit ]
  %34 = load ptr, ptr %m_data11.i, align 8, !tbaa !123
  %arrayidx13.i = getelementptr inbounds ptr, ptr %34, i64 %indvars.iv.i
  store ptr null, ptr %arrayidx13.i, align 8, !tbaa !219
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %35 = load ptr, ptr %m_data11.i, align 8, !tbaa !123
  %arrayidx13.i.1 = getelementptr inbounds ptr, ptr %35, i64 %indvars.iv.next.i
  store ptr null, ptr %arrayidx13.i.1, align 8, !tbaa !219
  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, 2
  %36 = load ptr, ptr %m_data11.i, align 8, !tbaa !123
  %arrayidx13.i.2 = getelementptr inbounds ptr, ptr %36, i64 %indvars.iv.next.i.1
  store ptr null, ptr %arrayidx13.i.2, align 8, !tbaa !219
  %indvars.iv.next.i.2 = add nsw i64 %indvars.iv.i, 3
  %37 = load ptr, ptr %m_data11.i, align 8, !tbaa !123
  %arrayidx13.i.3 = getelementptr inbounds ptr, ptr %37, i64 %indvars.iv.next.i.2
  store ptr null, ptr %arrayidx13.i.3, align 8, !tbaa !219
  %indvars.iv.next.i.3 = add nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, %wide.trip.count.i
  br i1 %exitcond.not.i.3, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit, label %for.body10.i

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit: ; preds = %for.body10.i.prol.loopexit, %for.body10.i, %_ZN10btSoftBody15releaseClustersEv.exit
  store i32 %.sroa.speculated1729, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp1773 = icmp sgt i32 %.sroa.speculated1729, 0
  br i1 %cmp1773, label %for.body.lr.ph, label %if.else

for.body.lr.ph:                                   ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %call6 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 424, i32 noundef 16)
  %m_ownsMemory.i.i.i737 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call6, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i.i737, align 8, !tbaa !341
  %m_data.i.i.i738 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call6, i64 0, i32 5
  store ptr null, ptr %m_data.i.i.i738, align 8, !tbaa !320
  %m_size.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call6, i64 0, i32 2
  store i32 0, ptr %m_size.i.i.i, align 4, !tbaa !319
  %m_capacity.i.i.i739 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call6, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i739, align 8, !tbaa !342
  %m_ownsMemory.i.i27.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 1, i32 6
  store i8 1, ptr %m_ownsMemory.i.i27.i, align 8, !tbaa !36
  %m_data.i.i28.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 1, i32 5
  store ptr null, ptr %m_data.i.i28.i, align 8, !tbaa !39
  %m_size.i.i29.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 1, i32 2
  store i32 0, ptr %m_size.i.i29.i, align 4, !tbaa !40
  %m_capacity.i.i30.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 1, i32 3
  store i32 0, ptr %m_capacity.i.i30.i, align 8, !tbaa !41
  %m_ownsMemory.i.i31.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 2, i32 6
  store i8 1, ptr %m_ownsMemory.i.i31.i, align 8, !tbaa !30
  %m_data.i.i32.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 2, i32 5
  store ptr null, ptr %m_data.i.i32.i, align 8, !tbaa !33
  %m_size.i.i33.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 2, i32 2
  store i32 0, ptr %m_size.i.i33.i, align 4, !tbaa !34
  %m_capacity.i.i34.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 2, i32 3
  store i32 0, ptr %m_capacity.i.i34.i, align 8, !tbaa !35
  %m_leaf.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 15
  %m_maxSelfCollisionImpulse.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 20
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %m_leaf.i, i8 0, i64 24, i1 false)
  store <2 x float> <float 1.000000e+02, float 0x3F847AE140000000>, ptr %m_maxSelfCollisionImpulse.i, align 8, !tbaa !137
  %m_containsAnchor.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 22
  store i8 0, ptr %m_containsAnchor.i, align 8, !tbaa !345
  %38 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %arrayidx.i = getelementptr inbounds ptr, ptr %38, i64 %indvars.iv
  store ptr %call6, ptr %arrayidx.i, align 8, !tbaa !219
  %39 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %arrayidx.i742 = getelementptr inbounds ptr, ptr %39, i64 %indvars.iv
  %40 = load ptr, ptr %arrayidx.i742, align 8, !tbaa !219
  %m_collide = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %40, i64 0, i32 23
  store i8 1, ptr %m_collide, align 1, !tbaa !346
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %.pr = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %41 = sext i32 %.pr to i64
  %cmp = icmp slt i64 %indvars.iv.next, %41
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %cmp13 = icmp sgt i32 %.pr, 0
  br i1 %cmp13, label %for.cond18.preheader, label %if.else

for.cond18.preheader:                             ; preds = %for.end
  %42 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp231785 = icmp sgt i32 %42, 0
  br i1 %cmp231785, label %for.body24.lr.ph, label %invoke.cont51

for.body24.lr.ph:                                 ; preds = %for.cond18.preheader
  %m_data.i746 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %m_data.i752 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  br label %for.body24

for.body24:                                       ; preds = %for.body24.lr.ph, %invoke.cont42
  %43 = phi i32 [ %42, %for.body24.lr.ph ], [ %70, %invoke.cont42 ]
  %indvars.iv1861 = phi i64 [ 0, %for.body24.lr.ph ], [ %indvars.iv.next1862, %invoke.cont42 ]
  %cog.sroa.14.01788 = phi float [ 0.000000e+00, %for.body24.lr.ph ], [ %add13.i, %invoke.cont42 ]
  %44 = phi <2 x float> [ zeroinitializer, %for.body24.lr.ph ], [ %47, %invoke.cont42 ]
  %45 = load ptr, ptr %m_data.i746, align 8, !tbaa !87
  %arrayidx.i748 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %45, i64 %indvars.iv1861
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %45, i64 %indvars.iv1861, i32 1
  %46 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %47 = fadd <2 x float> %44, %46
  %arrayidx10.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %48 = load float, ptr %arrayidx10.i, align 4, !tbaa !137
  %add13.i = fadd float %cog.sroa.14.01788, %48
  %49 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %50 = trunc i64 %indvars.iv1861 to i32
  %51 = mul i32 %50, 29873
  %rem = srem i32 %51, %49
  %52 = load ptr, ptr %m_data.i752, align 8, !tbaa !123
  %idxprom.i753 = zext i32 %rem to i64
  %arrayidx.i754 = getelementptr inbounds ptr, ptr %52, i64 %idxprom.i753
  %53 = load ptr, ptr %arrayidx.i754, align 8, !tbaa !219
  %m_size.i.i758 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %53, i64 0, i32 2
  %54 = load i32, ptr %m_size.i.i758, align 4, !tbaa !319
  %m_capacity.i.i759 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %53, i64 0, i32 3
  %55 = load i32, ptr %m_capacity.i.i759, align 8, !tbaa !342
  %cmp.i760 = icmp eq i32 %54, %55
  br i1 %cmp.i760, label %if.then.i, label %invoke.cont42

if.then.i:                                        ; preds = %for.body24
  %tobool.not.i.i761 = icmp eq i32 %54, 0
  %mul.i.i = shl nsw i32 %54, 1
  %cond.i.i = select i1 %tobool.not.i.i761, i32 1, i32 %mul.i.i
  %cmp.i.i762 = icmp slt i32 %54, %cond.i.i
  br i1 %cmp.i.i762, label %if.then.i.i764, label %invoke.cont42

if.then.i.i764:                                   ; preds = %if.then.i
  %tobool.not.i.i.i763 = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i763, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i, label %if.then.i.i.i769

if.then.i.i.i769:                                 ; preds = %if.then.i.i764
  %conv.i.i.i.i765 = sext i32 %cond.i.i to i64
  %mul.i.i.i.i766 = shl nsw i64 %conv.i.i.i.i765, 3
  %call.i.i.i.i767791 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i766, i32 noundef 16)
  %.pre.i768 = load i32, ptr %m_size.i.i758, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i769, %if.then.i.i764
  %56 = phi i32 [ %.pre.i768, %if.then.i.i.i769 ], [ %54, %if.then.i.i764 ]
  %retval.0.i.i.i770 = phi ptr [ %call.i.i.i.i767791, %if.then.i.i.i769 ], [ null, %if.then.i.i764 ]
  %cmp7.i.i.i771 = icmp sgt i32 %56, 0
  br i1 %cmp7.i.i.i771, label %for.body.lr.ph.i.i.i774, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i

for.body.lr.ph.i.i.i774:                          ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i
  %m_data.i.i.i772 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %53, i64 0, i32 5
  %wide.trip.count.i.i.i773 = zext i32 %56 to i64
  %xtraiter2061 = and i64 %wide.trip.count.i.i.i773, 3
  %57 = icmp ult i32 %56, 4
  br i1 %57, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i774.new

for.body.lr.ph.i.i.i774.new:                      ; preds = %for.body.lr.ph.i.i.i774
  %unroll_iter2064 = and i64 %wide.trip.count.i.i.i773, 4294967292
  br label %for.body.i.i.i780

for.body.i.i.i780:                                ; preds = %for.body.i.i.i780, %for.body.lr.ph.i.i.i774.new
  %indvars.iv.i.i.i775 = phi i64 [ 0, %for.body.lr.ph.i.i.i774.new ], [ %indvars.iv.next.i.i.i778.3, %for.body.i.i.i780 ]
  %niter2065 = phi i64 [ 0, %for.body.lr.ph.i.i.i774.new ], [ %niter2065.next.3, %for.body.i.i.i780 ]
  %arrayidx.i.i.i776 = getelementptr inbounds ptr, ptr %retval.0.i.i.i770, i64 %indvars.iv.i.i.i775
  %58 = load ptr, ptr %m_data.i.i.i772, align 8, !tbaa !320
  %arrayidx3.i.i.i777 = getelementptr inbounds ptr, ptr %58, i64 %indvars.iv.i.i.i775
  %59 = load ptr, ptr %arrayidx3.i.i.i777, align 8, !tbaa !219
  store ptr %59, ptr %arrayidx.i.i.i776, align 8, !tbaa !219
  %indvars.iv.next.i.i.i778 = or i64 %indvars.iv.i.i.i775, 1
  %arrayidx.i.i.i776.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i770, i64 %indvars.iv.next.i.i.i778
  %60 = load ptr, ptr %m_data.i.i.i772, align 8, !tbaa !320
  %arrayidx3.i.i.i777.1 = getelementptr inbounds ptr, ptr %60, i64 %indvars.iv.next.i.i.i778
  %61 = load ptr, ptr %arrayidx3.i.i.i777.1, align 8, !tbaa !219
  store ptr %61, ptr %arrayidx.i.i.i776.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i778.1 = or i64 %indvars.iv.i.i.i775, 2
  %arrayidx.i.i.i776.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i770, i64 %indvars.iv.next.i.i.i778.1
  %62 = load ptr, ptr %m_data.i.i.i772, align 8, !tbaa !320
  %arrayidx3.i.i.i777.2 = getelementptr inbounds ptr, ptr %62, i64 %indvars.iv.next.i.i.i778.1
  %63 = load ptr, ptr %arrayidx3.i.i.i777.2, align 8, !tbaa !219
  store ptr %63, ptr %arrayidx.i.i.i776.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i778.2 = or i64 %indvars.iv.i.i.i775, 3
  %arrayidx.i.i.i776.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i770, i64 %indvars.iv.next.i.i.i778.2
  %64 = load ptr, ptr %m_data.i.i.i772, align 8, !tbaa !320
  %arrayidx3.i.i.i777.3 = getelementptr inbounds ptr, ptr %64, i64 %indvars.iv.next.i.i.i778.2
  %65 = load ptr, ptr %arrayidx3.i.i.i777.3, align 8, !tbaa !219
  store ptr %65, ptr %arrayidx.i.i.i776.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i778.3 = add nuw nsw i64 %indvars.iv.i.i.i775, 4
  %niter2065.next.3 = add i64 %niter2065, 4
  %niter2065.ncmp.3 = icmp eq i64 %niter2065.next.3, %unroll_iter2064
  br i1 %niter2065.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i780

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i780, %for.body.lr.ph.i.i.i774
  %indvars.iv.i.i.i775.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i774 ], [ %indvars.iv.next.i.i.i778.3, %for.body.i.i.i780 ]
  %lcmp.mod2063.not = icmp eq i64 %xtraiter2061, 0
  br i1 %lcmp.mod2063.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i780.epil

for.body.i.i.i780.epil:                           ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i780.epil
  %indvars.iv.i.i.i775.epil = phi i64 [ %indvars.iv.next.i.i.i778.epil, %for.body.i.i.i780.epil ], [ %indvars.iv.i.i.i775.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %epil.iter2062 = phi i64 [ %epil.iter2062.next, %for.body.i.i.i780.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %arrayidx.i.i.i776.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i770, i64 %indvars.iv.i.i.i775.epil
  %66 = load ptr, ptr %m_data.i.i.i772, align 8, !tbaa !320
  %arrayidx3.i.i.i777.epil = getelementptr inbounds ptr, ptr %66, i64 %indvars.iv.i.i.i775.epil
  %67 = load ptr, ptr %arrayidx3.i.i.i777.epil, align 8, !tbaa !219
  store ptr %67, ptr %arrayidx.i.i.i776.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i778.epil = add nuw nsw i64 %indvars.iv.i.i.i775.epil, 1
  %epil.iter2062.next = add i64 %epil.iter2062, 1
  %epil.iter2062.cmp.not = icmp eq i64 %epil.iter2062.next, %xtraiter2061
  br i1 %epil.iter2062.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i780.epil, !llvm.loop !347

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i780.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i
  %m_data.i9.i.i781 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %53, i64 0, i32 5
  %68 = load ptr, ptr %m_data.i9.i.i781, align 8, !tbaa !320
  %tobool.not.i10.i.i782 = icmp eq ptr %68, null
  %m_ownsMemory.i.i.i783 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %53, i64 0, i32 6
  %69 = load i8, ptr %m_ownsMemory.i.i.i783, align 8, !range !159
  %tobool2.not.i.i.i784 = icmp eq i8 %69, 0
  %or.cond.i.i785 = select i1 %tobool.not.i10.i.i782, i1 true, i1 %tobool2.not.i.i.i784
  br i1 %or.cond.i.i785, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i, label %if.then3.i.i.i786

if.then3.i.i.i786:                                ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %68)
  %.pre7.pre.i = load i32, ptr %m_size.i.i758, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i786, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i
  %.pre7.i = phi i32 [ %.pre7.pre.i, %if.then3.i.i.i786 ], [ %56, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i ]
  store i8 1, ptr %m_ownsMemory.i.i.i783, align 8, !tbaa !341
  store ptr %retval.0.i.i.i770, ptr %m_data.i9.i.i781, align 8, !tbaa !320
  store i32 %cond.i.i, ptr %m_capacity.i.i759, align 8, !tbaa !342
  %.pre = load i32, ptr %m_size.i, align 4, !tbaa !88
  br label %invoke.cont42

invoke.cont42:                                    ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i, %if.then.i, %for.body24
  %70 = phi i32 [ %.pre, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i ], [ %43, %if.then.i ], [ %43, %for.body24 ]
  %71 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i ], [ %54, %if.then.i ], [ %54, %for.body24 ]
  %m_data.i787 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %53, i64 0, i32 5
  %72 = load ptr, ptr %m_data.i787, align 8, !tbaa !320
  %idxprom.i788 = sext i32 %71 to i64
  %arrayidx.i789 = getelementptr inbounds ptr, ptr %72, i64 %idxprom.i788
  store ptr %arrayidx.i748, ptr %arrayidx.i789, align 8, !tbaa !219
  %inc.i = add nsw i32 %71, 1
  store i32 %inc.i, ptr %m_size.i.i758, align 4, !tbaa !319
  %indvars.iv.next1862 = add nuw nsw i64 %indvars.iv1861, 1
  %73 = sext i32 %70 to i64
  %cmp23 = icmp slt i64 %indvars.iv.next1862, %73
  br i1 %cmp23, label %for.body24, label %invoke.cont51

invoke.cont51:                                    ; preds = %invoke.cont42, %for.cond18.preheader
  %cog.sroa.14.0.lcssa = phi float [ 0.000000e+00, %for.cond18.preheader ], [ %add13.i, %invoke.cont42 ]
  %.lcssa1770 = phi i32 [ %42, %for.cond18.preheader ], [ %70, %invoke.cont42 ]
  %74 = phi <2 x float> [ zeroinitializer, %for.cond18.preheader ], [ %47, %invoke.cont42 ]
  %conv = sitofp i32 %.lcssa1770 to float
  %div.i = fdiv float 1.000000e+00, %conv
  %75 = insertelement <2 x float> poison, float %div.i, i64 0
  %76 = shufflevector <2 x float> %75, <2 x float> poison, <2 x i32> zeroinitializer
  %77 = fmul <2 x float> %74, %76
  %mul7.i.i = fmul float %cog.sroa.14.0.lcssa, %div.i
  %conv.i.i.i.i803 = zext i32 %.pr to i64
  %mul.i.i.i.i804 = shl nuw nsw i64 %conv.i.i.i.i803, 4
  %call.i.i.i.i805834 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i804, i32 noundef 16)
  %xtraiter2066 = and i64 %conv.i.i.i.i803, 3
  %78 = icmp ult i32 %.pr, 4
  br i1 %78, label %do.body.preheader.unr-lcssa, label %invoke.cont51.new

invoke.cont51.new:                                ; preds = %invoke.cont51
  %unroll_iter2069 = and i64 %conv.i.i.i.i803, 4294967292
  br label %for.body10.i833

for.body10.i833:                                  ; preds = %for.body10.i833, %invoke.cont51.new
  %indvars.iv.i829 = phi i64 [ 0, %invoke.cont51.new ], [ %indvars.iv.next.i831.3, %for.body10.i833 ]
  %niter2070 = phi i64 [ 0, %invoke.cont51.new ], [ %niter2070.next.3, %for.body10.i833 ]
  %arrayidx13.i830 = getelementptr inbounds %class.btVector3, ptr %call.i.i.i.i805834, i64 %indvars.iv.i829
  store <2 x float> %77, ptr %arrayidx13.i830, align 4
  %cog.sroa.14.0.arrayidx13.i830.sroa_idx = getelementptr inbounds i8, ptr %arrayidx13.i830, i64 8
  store float %mul7.i.i, ptr %cog.sroa.14.0.arrayidx13.i830.sroa_idx, align 4, !tbaa.struct !165
  %cog.sroa.19.0.arrayidx13.i830.sroa_idx = getelementptr inbounds i8, ptr %arrayidx13.i830, i64 12
  store float 0.000000e+00, ptr %cog.sroa.19.0.arrayidx13.i830.sroa_idx, align 4, !tbaa.struct !318
  %indvars.iv.next.i831 = or i64 %indvars.iv.i829, 1
  %arrayidx13.i830.1 = getelementptr inbounds %class.btVector3, ptr %call.i.i.i.i805834, i64 %indvars.iv.next.i831
  store <2 x float> %77, ptr %arrayidx13.i830.1, align 4
  %cog.sroa.14.0.arrayidx13.i830.sroa_idx.1 = getelementptr inbounds i8, ptr %arrayidx13.i830.1, i64 8
  store float %mul7.i.i, ptr %cog.sroa.14.0.arrayidx13.i830.sroa_idx.1, align 4, !tbaa.struct !165
  %cog.sroa.19.0.arrayidx13.i830.sroa_idx.1 = getelementptr inbounds i8, ptr %arrayidx13.i830.1, i64 12
  store float 0.000000e+00, ptr %cog.sroa.19.0.arrayidx13.i830.sroa_idx.1, align 4, !tbaa.struct !318
  %indvars.iv.next.i831.1 = or i64 %indvars.iv.i829, 2
  %arrayidx13.i830.2 = getelementptr inbounds %class.btVector3, ptr %call.i.i.i.i805834, i64 %indvars.iv.next.i831.1
  store <2 x float> %77, ptr %arrayidx13.i830.2, align 4
  %cog.sroa.14.0.arrayidx13.i830.sroa_idx.2 = getelementptr inbounds i8, ptr %arrayidx13.i830.2, i64 8
  store float %mul7.i.i, ptr %cog.sroa.14.0.arrayidx13.i830.sroa_idx.2, align 4, !tbaa.struct !165
  %cog.sroa.19.0.arrayidx13.i830.sroa_idx.2 = getelementptr inbounds i8, ptr %arrayidx13.i830.2, i64 12
  store float 0.000000e+00, ptr %cog.sroa.19.0.arrayidx13.i830.sroa_idx.2, align 4, !tbaa.struct !318
  %indvars.iv.next.i831.2 = or i64 %indvars.iv.i829, 3
  %arrayidx13.i830.3 = getelementptr inbounds %class.btVector3, ptr %call.i.i.i.i805834, i64 %indvars.iv.next.i831.2
  store <2 x float> %77, ptr %arrayidx13.i830.3, align 4
  %cog.sroa.14.0.arrayidx13.i830.sroa_idx.3 = getelementptr inbounds i8, ptr %arrayidx13.i830.3, i64 8
  store float %mul7.i.i, ptr %cog.sroa.14.0.arrayidx13.i830.sroa_idx.3, align 4, !tbaa.struct !165
  %cog.sroa.19.0.arrayidx13.i830.sroa_idx.3 = getelementptr inbounds i8, ptr %arrayidx13.i830.3, i64 12
  store float 0.000000e+00, ptr %cog.sroa.19.0.arrayidx13.i830.sroa_idx.3, align 4, !tbaa.struct !318
  %indvars.iv.next.i831.3 = add nuw nsw i64 %indvars.iv.i829, 4
  %niter2070.next.3 = add i64 %niter2070, 4
  %niter2070.ncmp.3 = icmp eq i64 %niter2070.next.3, %unroll_iter2069
  br i1 %niter2070.ncmp.3, label %do.body.preheader.unr-lcssa, label %for.body10.i833

do.body.preheader.unr-lcssa:                      ; preds = %for.body10.i833, %invoke.cont51
  %indvars.iv.i829.unr = phi i64 [ 0, %invoke.cont51 ], [ %indvars.iv.next.i831.3, %for.body10.i833 ]
  %lcmp.mod2068.not = icmp eq i64 %xtraiter2066, 0
  br i1 %lcmp.mod2068.not, label %do.body.preheader, label %for.body10.i833.epil

for.body10.i833.epil:                             ; preds = %do.body.preheader.unr-lcssa, %for.body10.i833.epil
  %indvars.iv.i829.epil = phi i64 [ %indvars.iv.next.i831.epil, %for.body10.i833.epil ], [ %indvars.iv.i829.unr, %do.body.preheader.unr-lcssa ]
  %epil.iter2067 = phi i64 [ %epil.iter2067.next, %for.body10.i833.epil ], [ 0, %do.body.preheader.unr-lcssa ]
  %arrayidx13.i830.epil = getelementptr inbounds %class.btVector3, ptr %call.i.i.i.i805834, i64 %indvars.iv.i829.epil
  store <2 x float> %77, ptr %arrayidx13.i830.epil, align 4
  %cog.sroa.14.0.arrayidx13.i830.sroa_idx.epil = getelementptr inbounds i8, ptr %arrayidx13.i830.epil, i64 8
  store float %mul7.i.i, ptr %cog.sroa.14.0.arrayidx13.i830.sroa_idx.epil, align 4, !tbaa.struct !165
  %cog.sroa.19.0.arrayidx13.i830.sroa_idx.epil = getelementptr inbounds i8, ptr %arrayidx13.i830.epil, i64 12
  store float 0.000000e+00, ptr %cog.sroa.19.0.arrayidx13.i830.sroa_idx.epil, align 4, !tbaa.struct !318
  %indvars.iv.next.i831.epil = add nuw nsw i64 %indvars.iv.i829.epil, 1
  %epil.iter2067.next = add i64 %epil.iter2067, 1
  %epil.iter2067.cmp.not = icmp eq i64 %epil.iter2067.next, %xtraiter2066
  br i1 %epil.iter2067.cmp.not, label %do.body.preheader, label %for.body10.i833.epil, !llvm.loop !348

do.body.preheader:                                ; preds = %for.body10.i833.epil, %do.body.preheader.unr-lcssa
  %m_data.i841 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %m_data.i957 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %arrayidx5.i.i961 = getelementptr inbounds [4 x float], ptr %call.i.i.i.i805834, i64 0, i64 1
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %call.i.i.i.i805834, i64 0, i64 2
  %cmp1761806 = icmp sgt i32 %.pr, 1
  br label %for.cond70.preheader.preheader

for.cond70.preheader.preheader:                   ; preds = %for.end208, %do.body.preheader
  %iterations.0 = phi i32 [ %inc60, %for.end208 ], [ 0, %do.body.preheader ]
  %conv56 = sitofp i32 %iterations.0 to float
  %div = fmul float %conv56, 6.250000e-02
  %cmp.i836 = fcmp ogt float %div, 1.000000e+00
  %79 = fsub float 2.000000e+00, %div
  %sub = select i1 %cmp.i836, float 1.000000e+00, float %79
  %inc60 = add nuw nsw i32 %iterations.0, 1
  %80 = insertelement <2 x float> poison, float %sub, i64 0
  %81 = shufflevector <2 x float> %80, <2 x float> poison, <2 x i32> zeroinitializer
  br label %for.cond70.preheader

for.cond157.preheader:                            ; preds = %if.end
  %82 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp1621811 = icmp sgt i32 %82, 0
  br i1 %cmp1621811, label %for.body163, label %for.end208

for.cond70.preheader:                             ; preds = %for.cond70.preheader.preheader, %if.end
  %indvars.iv1868 = phi i64 [ 0, %for.cond70.preheader.preheader ], [ %indvars.iv.next1869, %if.end ]
  %changed.01804 = phi i8 [ 0, %for.cond70.preheader.preheader ], [ %changed.1, %if.end ]
  %83 = load ptr, ptr %m_data.i841, align 8, !tbaa !123
  %arrayidx.i843 = getelementptr inbounds ptr, ptr %83, i64 %indvars.iv1868
  %84 = load ptr, ptr %arrayidx.i843, align 8, !tbaa !219
  %m_size.i844 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %84, i64 0, i32 2
  %85 = load i32, ptr %m_size.i844, align 4, !tbaa !319
  %cmp781794 = icmp sgt i32 %85, 0
  br i1 %cmp781794, label %for.body79.lr.ph, label %for.cond.cleanup

for.body79.lr.ph:                                 ; preds = %for.cond70.preheader
  %m_data.i852 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %84, i64 0, i32 5
  %86 = load ptr, ptr %m_data.i852, align 8, !tbaa !320
  %wide.trip.count = zext i32 %85 to i64
  %xtraiter2071 = and i64 %wide.trip.count, 1
  %87 = icmp eq i32 %85, 1
  br i1 %87, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body79.lr.ph.new

for.body79.lr.ph.new:                             ; preds = %for.body79.lr.ph
  %unroll_iter2076 = and i64 %wide.trip.count, 4294967294
  br label %for.body79

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body79, %for.body79.lr.ph
  %.lcssa1972.ph = phi <2 x float> [ undef, %for.body79.lr.ph ], [ %98, %for.body79 ]
  %c.sroa.19.8.vec.insert1703.lcssa.ph = phi <2 x float> [ undef, %for.body79.lr.ph ], [ %c.sroa.19.8.vec.insert1703.1, %for.body79 ]
  %indvars.iv1865.unr = phi i64 [ 0, %for.body79.lr.ph ], [ %indvars.iv.next1866.1, %for.body79 ]
  %c.sroa.19.21796.unr = phi <2 x float> [ zeroinitializer, %for.body79.lr.ph ], [ %c.sroa.19.8.vec.insert1703.1, %for.body79 ]
  %c.sroa.0.21795.unr = phi <2 x float> [ zeroinitializer, %for.body79.lr.ph ], [ %98, %for.body79 ]
  %lcmp.mod2073.not = icmp eq i64 %xtraiter2071, 0
  br i1 %lcmp.mod2073.not, label %for.cond.cleanup, label %for.body79.epil

for.body79.epil:                                  ; preds = %for.cond.cleanup.loopexit.unr-lcssa
  %arrayidx.i854.epil = getelementptr inbounds ptr, ptr %86, i64 %indvars.iv1865.unr
  %88 = load ptr, ptr %arrayidx.i854.epil, align 8, !tbaa !219
  %m_x86.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %88, i64 0, i32 1
  %89 = load <2 x float>, ptr %m_x86.epil, align 4, !tbaa !137
  %90 = fadd <2 x float> %c.sroa.0.21795.unr, %89
  %arrayidx10.i859.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %88, i64 0, i32 1, i32 0, i64 2
  %91 = load float, ptr %arrayidx10.i859.epil, align 4, !tbaa !137
  %c.sroa.19.8.vec.extract.epil = extractelement <2 x float> %c.sroa.19.21796.unr, i64 0
  %add13.i861.epil = fadd float %c.sroa.19.8.vec.extract.epil, %91
  %c.sroa.19.8.vec.insert1703.epil = insertelement <2 x float> %c.sroa.19.21796.unr, float %add13.i861.epil, i64 0
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body79.epil, %for.cond.cleanup.loopexit.unr-lcssa, %for.cond70.preheader
  %c.sroa.0.2.lcssa = phi <2 x float> [ zeroinitializer, %for.cond70.preheader ], [ %.lcssa1972.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %90, %for.body79.epil ]
  %c.sroa.19.2.lcssa = phi <2 x float> [ zeroinitializer, %for.cond70.preheader ], [ %c.sroa.19.8.vec.insert1703.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %c.sroa.19.8.vec.insert1703.epil, %for.body79.epil ]
  %tobool.not = icmp eq i32 %85, 0
  br i1 %tobool.not, label %if.end, label %invoke.cont132

for.body79:                                       ; preds = %for.body79, %for.body79.lr.ph.new
  %indvars.iv1865 = phi i64 [ 0, %for.body79.lr.ph.new ], [ %indvars.iv.next1866.1, %for.body79 ]
  %c.sroa.19.21796 = phi <2 x float> [ zeroinitializer, %for.body79.lr.ph.new ], [ %c.sroa.19.8.vec.insert1703.1, %for.body79 ]
  %c.sroa.0.21795 = phi <2 x float> [ zeroinitializer, %for.body79.lr.ph.new ], [ %98, %for.body79 ]
  %niter2077 = phi i64 [ 0, %for.body79.lr.ph.new ], [ %niter2077.next.1, %for.body79 ]
  %arrayidx.i854 = getelementptr inbounds ptr, ptr %86, i64 %indvars.iv1865
  %92 = load ptr, ptr %arrayidx.i854, align 8, !tbaa !219
  %m_x86 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %92, i64 0, i32 1
  %93 = load <2 x float>, ptr %m_x86, align 4, !tbaa !137
  %94 = fadd <2 x float> %c.sroa.0.21795, %93
  %arrayidx10.i859 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %92, i64 0, i32 1, i32 0, i64 2
  %95 = load float, ptr %arrayidx10.i859, align 4, !tbaa !137
  %c.sroa.19.8.vec.extract = extractelement <2 x float> %c.sroa.19.21796, i64 0
  %add13.i861 = fadd float %c.sroa.19.8.vec.extract, %95
  %indvars.iv.next1866 = or i64 %indvars.iv1865, 1
  %arrayidx.i854.1 = getelementptr inbounds ptr, ptr %86, i64 %indvars.iv.next1866
  %96 = load ptr, ptr %arrayidx.i854.1, align 8, !tbaa !219
  %m_x86.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %96, i64 0, i32 1
  %97 = load <2 x float>, ptr %m_x86.1, align 4, !tbaa !137
  %98 = fadd <2 x float> %94, %97
  %arrayidx10.i859.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %96, i64 0, i32 1, i32 0, i64 2
  %99 = load float, ptr %arrayidx10.i859.1, align 4, !tbaa !137
  %add13.i861.1 = fadd float %add13.i861, %99
  %c.sroa.19.8.vec.insert1703.1 = insertelement <2 x float> %c.sroa.19.21796, float %add13.i861.1, i64 0
  %indvars.iv.next1866.1 = add nuw nsw i64 %indvars.iv1865, 2
  %niter2077.next.1 = add i64 %niter2077, 2
  %niter2077.ncmp.1 = icmp eq i64 %niter2077.next.1, %unroll_iter2076
  br i1 %niter2077.ncmp.1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body79

invoke.cont132:                                   ; preds = %for.cond.cleanup
  %conv108 = sitofp i32 %85 to float
  %div.i866 = fdiv float 1.000000e+00, %conv108
  %c.sroa.19.8.vec.extract1705 = extractelement <2 x float> %c.sroa.19.2.lcssa, i64 0
  %mul7.i.i871 = fmul float %c.sroa.19.8.vec.extract1705, %div.i866
  %arrayidx.i874 = getelementptr inbounds %class.btVector3, ptr %call.i.i.i.i805834, i64 %indvars.iv1868
  %arrayidx13.i880 = getelementptr inbounds [4 x float], ptr %arrayidx.i874, i64 0, i64 2
  %100 = load float, ptr %arrayidx13.i880, align 4, !tbaa !137
  %sub14.i = fsub float %mul7.i.i871, %100
  %mul8.i = fmul float %sub, %sub14.i
  %101 = insertelement <2 x float> poison, float %div.i866, i64 0
  %102 = shufflevector <2 x float> %101, <2 x float> poison, <2 x i32> zeroinitializer
  %103 = fmul <2 x float> %c.sroa.0.2.lcssa, %102
  %104 = load <2 x float>, ptr %arrayidx.i874, align 4, !tbaa !137
  %105 = fsub <2 x float> %103, %104
  %106 = fmul <2 x float> %81, %105
  %107 = fadd <2 x float> %104, %106
  %add14.i = fadd float %100, %mul8.i
  %retval.sroa.3.12.vec.insert.i896 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i, i64 0
  %108 = fsub <2 x float> %107, %104
  %sub.i902 = extractelement <2 x float> %108, i64 0
  %109 = fsub <2 x float> %107, %104
  %sub14.i908 = fsub float %add14.i, %100
  %110 = fmul <2 x float> %109, %109
  %mul8.i.i = extractelement <2 x float> %110, i64 1
  %111 = tail call float @llvm.fmuladd.f32(float %sub.i902, float %sub.i902, float %mul8.i.i)
  %112 = tail call float @llvm.fmuladd.f32(float %sub14.i908, float %sub14.i908, float %111)
  store <2 x float> %107, ptr %arrayidx.i874, align 4, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i896, ptr %arrayidx13.i880, align 4, !tbaa.struct !165
  %113 = load ptr, ptr %m_data.i841, align 8, !tbaa !123
  %arrayidx.i919 = getelementptr inbounds ptr, ptr %113, i64 %indvars.iv1868
  %114 = load ptr, ptr %arrayidx.i919, align 8, !tbaa !219
  %m_size.i.i920 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %114, i64 0, i32 2
  %115 = load i32, ptr %m_size.i.i920, align 4, !tbaa !319
  %cmp4.i922 = icmp slt i32 %115, 0
  br i1 %cmp4.i922, label %if.then5.i926, label %invoke.cont151

if.then5.i926:                                    ; preds = %invoke.cont132
  %m_capacity.i.i.i924 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %114, i64 0, i32 3
  %116 = load i32, ptr %m_capacity.i.i.i924, align 8, !tbaa !342
  %cmp.i.i925 = icmp slt i32 %116, 0
  br i1 %cmp.i.i925, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i945, label %for.body10.lr.ph.i949

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i945: ; preds = %if.then5.i926
  %m_data.i9.i.i940 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %114, i64 0, i32 5
  %117 = load ptr, ptr %m_data.i9.i.i940, align 8, !tbaa !320
  %tobool.not.i10.i.i941 = icmp eq ptr %117, null
  %m_ownsMemory.i.i.i942 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %114, i64 0, i32 6
  %118 = load i8, ptr %m_ownsMemory.i.i.i942, align 8, !range !159
  %tobool2.not.i.i.i943 = icmp eq i8 %118, 0
  %or.cond.i.i944 = select i1 %tobool.not.i10.i.i941, i1 true, i1 %tobool2.not.i.i.i943
  br i1 %or.cond.i.i944, label %if.end.i947, label %if.then3.i.i.i946

if.then3.i.i.i946:                                ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i945
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %117)
          to label %if.end.i947 unwind label %ehcleanup449.thread1745

if.end.i947:                                      ; preds = %if.then3.i.i.i946, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i945
  store i8 1, ptr %m_ownsMemory.i.i.i942, align 8, !tbaa !341
  store ptr null, ptr %m_data.i9.i.i940, align 8, !tbaa !320
  store i32 0, ptr %m_capacity.i.i.i924, align 8, !tbaa !342
  br label %for.body10.lr.ph.i949

for.body10.lr.ph.i949:                            ; preds = %if.end.i947, %if.then5.i926
  %m_data11.i948 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %114, i64 0, i32 5
  %119 = sext i32 %115 to i64
  %120 = sub nsw i64 0, %119
  %xtraiter2078 = and i64 %120, 3
  %lcmp.mod2079.not = icmp eq i64 %xtraiter2078, 0
  br i1 %lcmp.mod2079.not, label %for.body10.i954.prol.loopexit, label %for.body10.i954.prol

for.body10.i954.prol:                             ; preds = %for.body10.lr.ph.i949, %for.body10.i954.prol
  %indvars.iv.i950.prol = phi i64 [ %indvars.iv.next.i952.prol, %for.body10.i954.prol ], [ %119, %for.body10.lr.ph.i949 ]
  %prol.iter2080 = phi i64 [ %prol.iter2080.next, %for.body10.i954.prol ], [ 0, %for.body10.lr.ph.i949 ]
  %121 = load ptr, ptr %m_data11.i948, align 8, !tbaa !320
  %arrayidx13.i951.prol = getelementptr inbounds ptr, ptr %121, i64 %indvars.iv.i950.prol
  store ptr null, ptr %arrayidx13.i951.prol, align 8, !tbaa !219
  %indvars.iv.next.i952.prol = add nsw i64 %indvars.iv.i950.prol, 1
  %prol.iter2080.next = add i64 %prol.iter2080, 1
  %prol.iter2080.cmp.not = icmp eq i64 %prol.iter2080.next, %xtraiter2078
  br i1 %prol.iter2080.cmp.not, label %for.body10.i954.prol.loopexit, label %for.body10.i954.prol, !llvm.loop !349

for.body10.i954.prol.loopexit:                    ; preds = %for.body10.i954.prol, %for.body10.lr.ph.i949
  %indvars.iv.i950.unr = phi i64 [ %119, %for.body10.lr.ph.i949 ], [ %indvars.iv.next.i952.prol, %for.body10.i954.prol ]
  %122 = icmp ugt i32 %115, -4
  br i1 %122, label %invoke.cont151, label %for.body10.i954

for.body10.i954:                                  ; preds = %for.body10.i954.prol.loopexit, %for.body10.i954
  %indvars.iv.i950 = phi i64 [ %indvars.iv.next.i952.3, %for.body10.i954 ], [ %indvars.iv.i950.unr, %for.body10.i954.prol.loopexit ]
  %123 = load ptr, ptr %m_data11.i948, align 8, !tbaa !320
  %arrayidx13.i951 = getelementptr inbounds ptr, ptr %123, i64 %indvars.iv.i950
  store ptr null, ptr %arrayidx13.i951, align 8, !tbaa !219
  %indvars.iv.next.i952 = add nsw i64 %indvars.iv.i950, 1
  %124 = load ptr, ptr %m_data11.i948, align 8, !tbaa !320
  %arrayidx13.i951.1 = getelementptr inbounds ptr, ptr %124, i64 %indvars.iv.next.i952
  store ptr null, ptr %arrayidx13.i951.1, align 8, !tbaa !219
  %indvars.iv.next.i952.1 = add nsw i64 %indvars.iv.i950, 2
  %125 = load ptr, ptr %m_data11.i948, align 8, !tbaa !320
  %arrayidx13.i951.2 = getelementptr inbounds ptr, ptr %125, i64 %indvars.iv.next.i952.1
  store ptr null, ptr %arrayidx13.i951.2, align 8, !tbaa !219
  %indvars.iv.next.i952.2 = add nsw i64 %indvars.iv.i950, 3
  %126 = load ptr, ptr %m_data11.i948, align 8, !tbaa !320
  %arrayidx13.i951.3 = getelementptr inbounds ptr, ptr %126, i64 %indvars.iv.next.i952.2
  store ptr null, ptr %arrayidx13.i951.3, align 8, !tbaa !219
  %indvars.iv.next.i952.3 = add nsw i64 %indvars.iv.i950, 4
  %exitcond.not.i953.3 = icmp eq i64 %indvars.iv.next.i952.3, 0
  br i1 %exitcond.not.i953.3, label %invoke.cont151, label %for.body10.i954

invoke.cont151:                                   ; preds = %for.body10.i954.prol.loopexit, %for.body10.i954, %invoke.cont132
  store i32 0, ptr %m_size.i.i920, align 4, !tbaa !319
  %127 = and i8 %changed.01804, 1
  %cmp137 = fcmp ogt float %112, 0x3E80000000000000
  %128 = zext i1 %cmp137 to i8
  %129 = or i8 %127, %128
  br label %if.end

ehcleanup449.thread1745:                          ; preds = %if.then3.i.i.i946
  %130 = landingpad { ptr, i32 }
          cleanup
  br label %if.then3.i.i.i1357

if.end:                                           ; preds = %invoke.cont151, %for.cond.cleanup
  %changed.1 = phi i8 [ %129, %invoke.cont151 ], [ %changed.01804, %for.cond.cleanup ]
  %indvars.iv.next1869 = add nuw nsw i64 %indvars.iv1868, 1
  %exitcond1871.not = icmp eq i64 %indvars.iv.next1869, %conv.i.i.i.i803
  br i1 %exitcond1871.not, label %for.cond157.preheader, label %for.cond70.preheader

for.body163:                                      ; preds = %for.cond157.preheader, %invoke.cont201
  %131 = phi i32 [ %167, %invoke.cont201 ], [ %82, %for.cond157.preheader ]
  %indvars.iv1877 = phi i64 [ %indvars.iv.next1878, %invoke.cont201 ], [ 0, %for.cond157.preheader ]
  %132 = load ptr, ptr %m_data.i957, align 8, !tbaa !87
  %arrayidx.i959 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %132, i64 %indvars.iv1877
  %m_x168 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %132, i64 %indvars.iv1877, i32 1
  %133 = load <2 x float>, ptr %m_x168, align 8
  %nx.sroa.8.0.m_x168.sroa_idx = getelementptr inbounds i8, ptr %m_x168, i64 8
  %nx.sroa.8.0.copyload = load float, ptr %nx.sroa.8.0.m_x168.sroa_idx, align 8, !tbaa.struct !165
  br i1 %cmp1761806, label %invoke.cont182.preheader, label %for.cond.cleanup177

invoke.cont182.preheader:                         ; preds = %for.body163
  %134 = load float, ptr %call.i.i.i.i805834, align 4, !tbaa !137
  %135 = extractelement <2 x float> %133, i64 0
  %sub.i.i = fsub float %134, %135
  %136 = tail call float @llvm.fabs.f32(float %sub.i.i)
  %137 = load float, ptr %arrayidx5.i.i961, align 4, !tbaa !137
  %138 = extractelement <2 x float> %133, i64 1
  %sub8.i.i = fsub float %137, %138
  %139 = tail call float @llvm.fabs.f32(float %sub8.i.i)
  %add.i962 = fadd float %136, %139
  %140 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %140, %nx.sroa.8.0.copyload
  %141 = tail call float @llvm.fabs.f32(float %sub14.i.i)
  %add9.i = fadd float %add.i962, %141
  br label %invoke.cont182

for.cond.cleanup177:                              ; preds = %invoke.cont182, %for.body163
  %kbest.0.lcssa = phi i32 [ 0, %for.body163 ], [ %kbest.1, %invoke.cont182 ]
  %142 = load ptr, ptr %m_data.i841, align 8, !tbaa !123
  %idxprom.i964 = sext i32 %kbest.0.lcssa to i64
  %arrayidx.i965 = getelementptr inbounds ptr, ptr %142, i64 %idxprom.i964
  %143 = load ptr, ptr %arrayidx.i965, align 8, !tbaa !219
  %m_size.i.i969 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %143, i64 0, i32 2
  %144 = load i32, ptr %m_size.i.i969, align 4, !tbaa !319
  %m_capacity.i.i970 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %143, i64 0, i32 3
  %145 = load i32, ptr %m_capacity.i.i970, align 8, !tbaa !342
  %cmp.i971 = icmp eq i32 %144, %145
  br i1 %cmp.i971, label %if.then.i976, label %invoke.cont201

if.then.i976:                                     ; preds = %for.cond.cleanup177
  %tobool.not.i.i972 = icmp eq i32 %144, 0
  %mul.i.i973 = shl nsw i32 %144, 1
  %cond.i.i974 = select i1 %tobool.not.i.i972, i32 1, i32 %mul.i.i973
  %cmp.i.i975 = icmp slt i32 %144, %cond.i.i974
  br i1 %cmp.i.i975, label %if.then.i.i978, label %invoke.cont201

if.then.i.i978:                                   ; preds = %if.then.i976
  %tobool.not.i.i.i977 = icmp eq i32 %cond.i.i974, 0
  br i1 %tobool.not.i.i.i977, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i986, label %if.then.i.i.i983

if.then.i.i.i983:                                 ; preds = %if.then.i.i978
  %conv.i.i.i.i979 = sext i32 %cond.i.i974 to i64
  %mul.i.i.i.i980 = shl nsw i64 %conv.i.i.i.i979, 3
  %call.i.i.i.i9811011 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i980, i32 noundef 16)
          to label %call.i.i.i.i981.noexc unwind label %lpad198

call.i.i.i.i981.noexc:                            ; preds = %if.then.i.i.i983
  %.pre.i982 = load i32, ptr %m_size.i.i969, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i986

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i986: ; preds = %call.i.i.i.i981.noexc, %if.then.i.i978
  %146 = phi i32 [ %.pre.i982, %call.i.i.i.i981.noexc ], [ %144, %if.then.i.i978 ]
  %retval.0.i.i.i984 = phi ptr [ %call.i.i.i.i9811011, %call.i.i.i.i981.noexc ], [ null, %if.then.i.i978 ]
  %cmp7.i.i.i985 = icmp sgt i32 %146, 0
  br i1 %cmp7.i.i.i985, label %for.body.lr.ph.i.i.i989, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1001

for.body.lr.ph.i.i.i989:                          ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i986
  %m_data.i.i.i987 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %143, i64 0, i32 5
  %wide.trip.count.i.i.i988 = zext i32 %146 to i64
  %xtraiter2081 = and i64 %wide.trip.count.i.i.i988, 3
  %147 = icmp ult i32 %146, 4
  br i1 %147, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1001.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i989.new

for.body.lr.ph.i.i.i989.new:                      ; preds = %for.body.lr.ph.i.i.i989
  %unroll_iter2084 = and i64 %wide.trip.count.i.i.i988, 4294967292
  br label %for.body.i.i.i995

for.body.i.i.i995:                                ; preds = %for.body.i.i.i995, %for.body.lr.ph.i.i.i989.new
  %indvars.iv.i.i.i990 = phi i64 [ 0, %for.body.lr.ph.i.i.i989.new ], [ %indvars.iv.next.i.i.i993.3, %for.body.i.i.i995 ]
  %niter2085 = phi i64 [ 0, %for.body.lr.ph.i.i.i989.new ], [ %niter2085.next.3, %for.body.i.i.i995 ]
  %arrayidx.i.i.i991 = getelementptr inbounds ptr, ptr %retval.0.i.i.i984, i64 %indvars.iv.i.i.i990
  %148 = load ptr, ptr %m_data.i.i.i987, align 8, !tbaa !320
  %arrayidx3.i.i.i992 = getelementptr inbounds ptr, ptr %148, i64 %indvars.iv.i.i.i990
  %149 = load ptr, ptr %arrayidx3.i.i.i992, align 8, !tbaa !219
  store ptr %149, ptr %arrayidx.i.i.i991, align 8, !tbaa !219
  %indvars.iv.next.i.i.i993 = or i64 %indvars.iv.i.i.i990, 1
  %arrayidx.i.i.i991.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i984, i64 %indvars.iv.next.i.i.i993
  %150 = load ptr, ptr %m_data.i.i.i987, align 8, !tbaa !320
  %arrayidx3.i.i.i992.1 = getelementptr inbounds ptr, ptr %150, i64 %indvars.iv.next.i.i.i993
  %151 = load ptr, ptr %arrayidx3.i.i.i992.1, align 8, !tbaa !219
  store ptr %151, ptr %arrayidx.i.i.i991.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i993.1 = or i64 %indvars.iv.i.i.i990, 2
  %arrayidx.i.i.i991.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i984, i64 %indvars.iv.next.i.i.i993.1
  %152 = load ptr, ptr %m_data.i.i.i987, align 8, !tbaa !320
  %arrayidx3.i.i.i992.2 = getelementptr inbounds ptr, ptr %152, i64 %indvars.iv.next.i.i.i993.1
  %153 = load ptr, ptr %arrayidx3.i.i.i992.2, align 8, !tbaa !219
  store ptr %153, ptr %arrayidx.i.i.i991.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i993.2 = or i64 %indvars.iv.i.i.i990, 3
  %arrayidx.i.i.i991.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i984, i64 %indvars.iv.next.i.i.i993.2
  %154 = load ptr, ptr %m_data.i.i.i987, align 8, !tbaa !320
  %arrayidx3.i.i.i992.3 = getelementptr inbounds ptr, ptr %154, i64 %indvars.iv.next.i.i.i993.2
  %155 = load ptr, ptr %arrayidx3.i.i.i992.3, align 8, !tbaa !219
  store ptr %155, ptr %arrayidx.i.i.i991.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i993.3 = add nuw nsw i64 %indvars.iv.i.i.i990, 4
  %niter2085.next.3 = add i64 %niter2085, 4
  %niter2085.ncmp.3 = icmp eq i64 %niter2085.next.3, %unroll_iter2084
  br i1 %niter2085.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1001.loopexit.unr-lcssa, label %for.body.i.i.i995

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1001.loopexit.unr-lcssa: ; preds = %for.body.i.i.i995, %for.body.lr.ph.i.i.i989
  %indvars.iv.i.i.i990.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i989 ], [ %indvars.iv.next.i.i.i993.3, %for.body.i.i.i995 ]
  %lcmp.mod2083.not = icmp eq i64 %xtraiter2081, 0
  br i1 %lcmp.mod2083.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1001, label %for.body.i.i.i995.epil

for.body.i.i.i995.epil:                           ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1001.loopexit.unr-lcssa, %for.body.i.i.i995.epil
  %indvars.iv.i.i.i990.epil = phi i64 [ %indvars.iv.next.i.i.i993.epil, %for.body.i.i.i995.epil ], [ %indvars.iv.i.i.i990.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1001.loopexit.unr-lcssa ]
  %epil.iter2082 = phi i64 [ %epil.iter2082.next, %for.body.i.i.i995.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1001.loopexit.unr-lcssa ]
  %arrayidx.i.i.i991.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i984, i64 %indvars.iv.i.i.i990.epil
  %156 = load ptr, ptr %m_data.i.i.i987, align 8, !tbaa !320
  %arrayidx3.i.i.i992.epil = getelementptr inbounds ptr, ptr %156, i64 %indvars.iv.i.i.i990.epil
  %157 = load ptr, ptr %arrayidx3.i.i.i992.epil, align 8, !tbaa !219
  store ptr %157, ptr %arrayidx.i.i.i991.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i993.epil = add nuw nsw i64 %indvars.iv.i.i.i990.epil, 1
  %epil.iter2082.next = add i64 %epil.iter2082, 1
  %epil.iter2082.cmp.not = icmp eq i64 %epil.iter2082.next, %xtraiter2081
  br i1 %epil.iter2082.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1001, label %for.body.i.i.i995.epil, !llvm.loop !350

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1001: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1001.loopexit.unr-lcssa, %for.body.i.i.i995.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i986
  %m_data.i9.i.i996 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %143, i64 0, i32 5
  %158 = load ptr, ptr %m_data.i9.i.i996, align 8, !tbaa !320
  %tobool.not.i10.i.i997 = icmp eq ptr %158, null
  %m_ownsMemory.i.i.i998 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %143, i64 0, i32 6
  %159 = load i8, ptr %m_ownsMemory.i.i.i998, align 8, !range !159
  %tobool2.not.i.i.i999 = icmp eq i8 %159, 0
  %or.cond.i.i1000 = select i1 %tobool.not.i10.i.i997, i1 true, i1 %tobool2.not.i.i.i999
  br i1 %or.cond.i.i1000, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1005, label %if.then3.i.i.i1003

if.then3.i.i.i1003:                               ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1001
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %158)
          to label %.noexc1012 unwind label %lpad198

.noexc1012:                                       ; preds = %if.then3.i.i.i1003
  %.pre7.pre.i1002 = load i32, ptr %m_size.i.i969, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1005

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1005: ; preds = %.noexc1012, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1001
  %.pre7.i1004 = phi i32 [ %.pre7.pre.i1002, %.noexc1012 ], [ %146, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1001 ]
  store i8 1, ptr %m_ownsMemory.i.i.i998, align 8, !tbaa !341
  store ptr %retval.0.i.i.i984, ptr %m_data.i9.i.i996, align 8, !tbaa !320
  store i32 %cond.i.i974, ptr %m_capacity.i.i970, align 8, !tbaa !342
  %.pre1919 = load i32, ptr %m_size.i, align 4, !tbaa !88
  br label %invoke.cont201

invoke.cont182:                                   ; preds = %invoke.cont182.preheader, %invoke.cont182
  %indvars.iv1872 = phi i64 [ 1, %invoke.cont182.preheader ], [ %indvars.iv.next1873, %invoke.cont182 ]
  %kdist.01808 = phi float [ %add9.i, %invoke.cont182.preheader ], [ %kdist.1, %invoke.cont182 ]
  %kbest.01807 = phi i32 [ 0, %invoke.cont182.preheader ], [ %kbest.1, %invoke.cont182 ]
  %arrayidx.i1016 = getelementptr inbounds %class.btVector3, ptr %call.i.i.i.i805834, i64 %indvars.iv1872
  %arrayidx11.i.i1021 = getelementptr inbounds [4 x float], ptr %arrayidx.i1016, i64 0, i64 2
  %160 = load float, ptr %arrayidx11.i.i1021, align 4, !tbaa !137
  %sub14.i.i1023 = fsub float %160, %nx.sroa.8.0.copyload
  %161 = load <2 x float>, ptr %arrayidx.i1016, align 4, !tbaa !137
  %162 = fsub <2 x float> %161, %133
  %163 = tail call <2 x float> @llvm.fabs.v2f32(<2 x float> %162)
  %shift = shufflevector <2 x float> %163, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %164 = fadd <2 x float> %163, %shift
  %add.i1024 = extractelement <2 x float> %164, i64 0
  %165 = tail call float @llvm.fabs.f32(float %sub14.i.i1023)
  %add9.i1025 = fadd float %add.i1024, %165
  %cmp184 = fcmp olt float %add9.i1025, %kdist.01808
  %166 = trunc i64 %indvars.iv1872 to i32
  %kbest.1 = select i1 %cmp184, i32 %166, i32 %kbest.01807
  %kdist.1 = select i1 %cmp184, float %add9.i1025, float %kdist.01808
  %indvars.iv.next1873 = add nuw nsw i64 %indvars.iv1872, 1
  %exitcond1876.not = icmp eq i64 %indvars.iv.next1873, %conv.i.i.i.i803
  br i1 %exitcond1876.not, label %for.cond.cleanup177, label %invoke.cont182

invoke.cont201:                                   ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1005, %if.then.i976, %for.cond.cleanup177
  %167 = phi i32 [ %.pre1919, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1005 ], [ %131, %if.then.i976 ], [ %131, %for.cond.cleanup177 ]
  %168 = phi i32 [ %.pre7.i1004, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1005 ], [ %144, %if.then.i976 ], [ %144, %for.cond.cleanup177 ]
  %m_data.i1006 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %143, i64 0, i32 5
  %169 = load ptr, ptr %m_data.i1006, align 8, !tbaa !320
  %idxprom.i1007 = sext i32 %168 to i64
  %arrayidx.i1008 = getelementptr inbounds ptr, ptr %169, i64 %idxprom.i1007
  store ptr %arrayidx.i959, ptr %arrayidx.i1008, align 8, !tbaa !219
  %inc.i1009 = add nsw i32 %168, 1
  store i32 %inc.i1009, ptr %m_size.i.i969, align 4, !tbaa !319
  %indvars.iv.next1878 = add nuw nsw i64 %indvars.iv1877, 1
  %170 = sext i32 %167 to i64
  %cmp162 = icmp slt i64 %indvars.iv.next1878, %170
  br i1 %cmp162, label %for.body163, label %for.end208

lpad198:                                          ; preds = %if.then3.i.i.i1003, %if.then.i.i.i983
  %171 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup449

for.end208:                                       ; preds = %invoke.cont201, %for.cond157.preheader
  %.lcssa1768 = phi i32 [ %82, %for.cond157.preheader ], [ %167, %invoke.cont201 ]
  %172 = and i8 %changed.1, 1
  %tobool211 = icmp ne i8 %172, 0
  %cmp212 = icmp slt i32 %inc60, %maxiterations
  %173 = select i1 %tobool211, i1 %cmp212, i1 false
  br i1 %173, label %for.cond70.preheader.preheader, label %invoke.cont214

invoke.cont214:                                   ; preds = %for.end208
  %or.cond1759 = icmp sgt i32 %.lcssa1768, 0
  br i1 %or.cond1759, label %if.then.i.i.i1044, label %invoke.cont221

if.then.i.i.i1044:                                ; preds = %invoke.cont214
  %conv.i.i.i.i1040 = zext i32 %.lcssa1768 to i64
  %mul.i.i.i.i1041 = shl nuw nsw i64 %conv.i.i.i.i1040, 2
  %call.i.i.i.i10421070 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1041, i32 noundef 16)
          to label %for.body10.lr.ph.i1064 unwind label %ehcleanup443.thread

for.body10.lr.ph.i1064:                           ; preds = %if.then.i.i.i1044
  tail call void @llvm.memset.p0.i64(ptr align 4 %call.i.i.i.i10421070, i8 -1, i64 %mul.i.i.i.i1041, i1 false), !tbaa !140
  br label %invoke.cont221

invoke.cont221:                                   ; preds = %for.body10.lr.ph.i1064, %invoke.cont214
  %cids.sroa.151667.1 = phi ptr [ null, %invoke.cont214 ], [ %call.i.i.i.i10421070, %for.body10.lr.ph.i1064 ]
  %174 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp2271816 = icmp sgt i32 %174, 0
  br i1 %cmp2271816, label %for.cond230.preheader.lr.ph, label %for.cond260.preheader

for.cond230.preheader.lr.ph:                      ; preds = %invoke.cont221
  %175 = load ptr, ptr %m_data.i841, align 8, !tbaa !123
  %176 = load ptr, ptr %m_data.i957, align 8
  %sub.ptr.rhs.cast = ptrtoint ptr %176 to i64
  br label %for.cond230.preheader

for.cond230.preheader:                            ; preds = %for.cond230.preheader.lr.ph, %for.cond.cleanup239
  %177 = phi i32 [ %174, %for.cond230.preheader.lr.ph ], [ %184, %for.cond.cleanup239 ]
  %indvars.iv1883 = phi i64 [ 0, %for.cond230.preheader.lr.ph ], [ %indvars.iv.next1884, %for.cond.cleanup239 ]
  %arrayidx.i1075 = getelementptr inbounds ptr, ptr %175, i64 %indvars.iv1883
  %178 = load ptr, ptr %arrayidx.i1075, align 8, !tbaa !219
  %m_size.i1076 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %178, i64 0, i32 2
  %179 = load i32, ptr %m_size.i1076, align 4, !tbaa !319
  %cmp2381814 = icmp sgt i32 %179, 0
  br i1 %cmp2381814, label %for.body240.lr.ph, label %for.cond.cleanup239

for.body240.lr.ph:                                ; preds = %for.cond230.preheader
  %m_data.i1080 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %178, i64 0, i32 5
  %180 = load ptr, ptr %m_data.i1080, align 8, !tbaa !320
  %181 = trunc i64 %indvars.iv1883 to i32
  br label %for.body240

for.cond260.preheader:                            ; preds = %for.cond.cleanup239, %invoke.cont221
  %182 = phi i32 [ %174, %invoke.cont221 ], [ %184, %for.cond.cleanup239 ]
  %m_size.i1087 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %183 = load i32, ptr %m_size.i1087, align 4, !tbaa !96
  %cmp2631820 = icmp sgt i32 %183, 0
  br i1 %cmp2631820, label %for.body264.lr.ph, label %for.end371

for.body264.lr.ph:                                ; preds = %for.cond260.preheader
  %m_data.i1088 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %arrayinit.element = getelementptr inbounds i32, ptr %idx, i64 1
  %arrayinit.element290 = getelementptr inbounds i32, ptr %idx, i64 2
  br label %for.body264

for.cond.cleanup239.loopexit:                     ; preds = %for.body240
  %.pre1920 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  br label %for.cond.cleanup239

for.cond.cleanup239:                              ; preds = %for.cond.cleanup239.loopexit, %for.cond230.preheader
  %184 = phi i32 [ %.pre1920, %for.cond.cleanup239.loopexit ], [ %177, %for.cond230.preheader ]
  %indvars.iv.next1884 = add nuw nsw i64 %indvars.iv1883, 1
  %185 = sext i32 %184 to i64
  %cmp227 = icmp slt i64 %indvars.iv.next1884, %185
  br i1 %cmp227, label %for.cond230.preheader, label %for.cond260.preheader

lpad213:                                          ; preds = %if.then3.i.i.i1330
  %186 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup449

lpad216:                                          ; preds = %.noexc1323, %if.end.i1311, %if.then.i1310
  %187 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup443

ehcleanup443.thread:                              ; preds = %if.then.i.i.i1044
  %188 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup449

for.body240:                                      ; preds = %for.body240.lr.ph, %for.body240
  %indvars.iv1880 = phi i64 [ 0, %for.body240.lr.ph ], [ %indvars.iv.next1881, %for.body240 ]
  %arrayidx.i1082 = getelementptr inbounds ptr, ptr %180, i64 %indvars.iv1880
  %189 = load ptr, ptr %arrayidx.i1082, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %189 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 120
  %sext = shl i64 %sub.ptr.div, 32
  %idxprom.i1085 = ashr exact i64 %sext, 32
  %arrayidx.i1086 = getelementptr inbounds i32, ptr %cids.sroa.151667.1, i64 %idxprom.i1085
  store i32 %181, ptr %arrayidx.i1086, align 4, !tbaa !140
  %indvars.iv.next1881 = add nuw nsw i64 %indvars.iv1880, 1
  %190 = load i32, ptr %m_size.i1076, align 4, !tbaa !319
  %191 = sext i32 %190 to i64
  %cmp238 = icmp slt i64 %indvars.iv.next1881, %191
  br i1 %cmp238, label %for.body240, label %for.cond.cleanup239.loopexit

for.body264:                                      ; preds = %for.body264.lr.ph, %for.cond.cleanup307
  %indvars.iv1892 = phi i64 [ 0, %for.body264.lr.ph ], [ %indvars.iv.next1893, %for.cond.cleanup307 ]
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %idx) #38
  %192 = load ptr, ptr %m_data.i1088, align 8, !tbaa !95
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %192, i64 %indvars.iv1892, i32 1
  %193 = load ptr, ptr %m_n, align 8, !tbaa !219
  %194 = load ptr, ptr %m_data.i957, align 8, !tbaa !87
  %sub.ptr.lhs.cast272 = ptrtoint ptr %193 to i64
  %sub.ptr.rhs.cast273 = ptrtoint ptr %194 to i64
  %sub.ptr.sub274 = sub i64 %sub.ptr.lhs.cast272, %sub.ptr.rhs.cast273
  %sub.ptr.div275 = sdiv exact i64 %sub.ptr.sub274, 120
  %conv276 = trunc i64 %sub.ptr.div275 to i32
  store i32 %conv276, ptr %idx, align 4, !tbaa !140
  %arrayidx281 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %192, i64 %indvars.iv1892, i32 1, i64 1
  %195 = load ptr, ptr %arrayidx281, align 8, !tbaa !219
  %sub.ptr.lhs.cast285 = ptrtoint ptr %195 to i64
  %sub.ptr.sub287 = sub i64 %sub.ptr.lhs.cast285, %sub.ptr.rhs.cast273
  %sub.ptr.div288 = sdiv exact i64 %sub.ptr.sub287, 120
  %conv289 = trunc i64 %sub.ptr.div288 to i32
  store i32 %conv289, ptr %arrayinit.element, align 4, !tbaa !140
  %arrayidx295 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %192, i64 %indvars.iv1892, i32 1, i64 2
  %196 = load ptr, ptr %arrayidx295, align 8, !tbaa !219
  %sub.ptr.lhs.cast299 = ptrtoint ptr %196 to i64
  %sub.ptr.sub301 = sub i64 %sub.ptr.lhs.cast299, %sub.ptr.rhs.cast273
  %sub.ptr.div302 = sdiv exact i64 %sub.ptr.sub301, 120
  %conv303 = trunc i64 %sub.ptr.div302 to i32
  store i32 %conv303, ptr %arrayinit.element290, align 4, !tbaa !140
  br label %for.body308

for.cond.cleanup307:                              ; preds = %if.end357.1
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %idx) #38
  %indvars.iv.next1893 = add nuw nsw i64 %indvars.iv1892, 1
  %197 = load i32, ptr %m_size.i1087, align 4, !tbaa !96
  %198 = sext i32 %197 to i64
  %cmp263 = icmp slt i64 %indvars.iv.next1893, %198
  br i1 %cmp263, label %for.body264, label %for.end371.loopexit

for.body308:                                      ; preds = %for.body264, %if.end357.1
  %indvars.iv1887 = phi i64 [ 0, %for.body264 ], [ %indvars.iv.next1888, %if.end357.1 ]
  %arrayidx309 = getelementptr inbounds [3 x i32], ptr %idx, i64 0, i64 %indvars.iv1887
  %199 = load i32, ptr %arrayidx309, align 4, !tbaa !140
  %idxprom.i1101 = sext i32 %199 to i64
  %arrayidx.i1102 = getelementptr inbounds i32, ptr %cids.sroa.151667.1, i64 %idxprom.i1101
  %200 = load i32, ptr %arrayidx.i1102, align 4, !tbaa !140
  %idxprom.i1107 = sext i32 %200 to i64
  %indvars.iv.next1888 = add nuw nsw i64 %indvars.iv1887, 1
  %201 = icmp eq i64 %indvars.iv.next1888, 3
  %202 = and i64 %indvars.iv.next1888, 4294967295
  %idxprom318 = select i1 %201, i64 0, i64 %202
  %arrayidx319 = getelementptr inbounds [3 x i32], ptr %idx, i64 0, i64 %idxprom318
  %203 = load i32, ptr %arrayidx319, align 4, !tbaa !140
  %idxprom.i1104 = sext i32 %203 to i64
  %arrayidx.i1105 = getelementptr inbounds i32, ptr %cids.sroa.151667.1, i64 %idxprom.i1104
  %204 = load i32, ptr %arrayidx.i1105, align 4, !tbaa !140
  %cmp323.not = icmp eq i32 %204, %200
  br i1 %cmp323.not, label %if.end357, label %if.then324

if.then324:                                       ; preds = %for.body308
  %205 = load ptr, ptr %m_data.i841, align 8, !tbaa !123
  %arrayidx.i1108 = getelementptr inbounds ptr, ptr %205, i64 %idxprom.i1107
  %206 = load ptr, ptr %arrayidx.i1108, align 8, !tbaa !219
  %207 = load ptr, ptr %m_data.i957, align 8, !tbaa !87
  %arrayidx.i1111 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %207, i64 %idxprom.i1104
  %m_size.i.i1112 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %206, i64 0, i32 2
  %208 = load i32, ptr %m_size.i.i1112, align 4, !tbaa !319
  %cmp8.i = icmp sgt i32 %208, 0
  br i1 %cmp8.i, label %for.body.lr.ph.i, label %if.then344

for.body.lr.ph.i:                                 ; preds = %if.then324
  %m_data.i1113 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %206, i64 0, i32 5
  %209 = load ptr, ptr %m_data.i1113, align 8, !tbaa !320
  %wide.trip.count.i1114 = zext i32 %208 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %indvars.iv.i1115 = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i1118, %for.inc.i ]
  %arrayidx.i1116 = getelementptr inbounds ptr, ptr %209, i64 %indvars.iv.i1115
  %210 = load ptr, ptr %arrayidx.i1116, align 8, !tbaa !219
  %cmp3.i1117 = icmp eq ptr %210, %arrayidx.i1111
  br i1 %cmp3.i1117, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE16findLinearSearchERKS2_.exit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %indvars.iv.next.i1118 = add nuw nsw i64 %indvars.iv.i1115, 1
  %exitcond.not.i1119 = icmp eq i64 %indvars.iv.next.i1118, %wide.trip.count.i1114
  br i1 %exitcond.not.i1119, label %if.then344, label %for.body.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE16findLinearSearchERKS2_.exit: ; preds = %for.body.i
  %211 = trunc i64 %indvars.iv.i1115 to i32
  %cmp342 = icmp eq i32 %208, %211
  br i1 %cmp342, label %if.then344, label %if.end357

if.then344:                                       ; preds = %for.inc.i, %if.then324, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE16findLinearSearchERKS2_.exit
  %m_capacity.i.i1131 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %206, i64 0, i32 3
  %212 = load i32, ptr %m_capacity.i.i1131, align 8, !tbaa !342
  %cmp.i1132 = icmp eq i32 %208, %212
  br i1 %cmp.i1132, label %if.then.i1137, label %invoke.cont354

if.then.i1137:                                    ; preds = %if.then344
  %tobool.not.i.i1133 = icmp eq i32 %208, 0
  %mul.i.i1134 = shl nsw i32 %208, 1
  %cond.i.i1135 = select i1 %tobool.not.i.i1133, i32 1, i32 %mul.i.i1134
  %cmp.i.i1136 = icmp slt i32 %208, %cond.i.i1135
  br i1 %cmp.i.i1136, label %if.then.i.i1139, label %invoke.cont354

if.then.i.i1139:                                  ; preds = %if.then.i1137
  %tobool.not.i.i.i1138 = icmp eq i32 %cond.i.i1135, 0
  br i1 %tobool.not.i.i.i1138, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1147, label %if.then.i.i.i1144

if.then.i.i.i1144:                                ; preds = %if.then.i.i1139
  %conv.i.i.i.i1140 = sext i32 %cond.i.i1135 to i64
  %mul.i.i.i.i1141 = shl nsw i64 %conv.i.i.i.i1140, 3
  %call.i.i.i.i11421172 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1141, i32 noundef 16)
          to label %call.i.i.i.i1142.noexc unwind label %lpad351

call.i.i.i.i1142.noexc:                           ; preds = %if.then.i.i.i1144
  %.pre.i1143 = load i32, ptr %m_size.i.i1112, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1147

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1147: ; preds = %call.i.i.i.i1142.noexc, %if.then.i.i1139
  %213 = phi i32 [ %.pre.i1143, %call.i.i.i.i1142.noexc ], [ %208, %if.then.i.i1139 ]
  %retval.0.i.i.i1145 = phi ptr [ %call.i.i.i.i11421172, %call.i.i.i.i1142.noexc ], [ null, %if.then.i.i1139 ]
  %cmp7.i.i.i1146 = icmp sgt i32 %213, 0
  br i1 %cmp7.i.i.i1146, label %for.body.lr.ph.i.i.i1150, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162

for.body.lr.ph.i.i.i1150:                         ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1147
  %m_data.i.i.i1148 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %206, i64 0, i32 5
  %wide.trip.count.i.i.i1149 = zext i32 %213 to i64
  %xtraiter2086 = and i64 %wide.trip.count.i.i.i1149, 3
  %214 = icmp ult i32 %213, 4
  br i1 %214, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1150.new

for.body.lr.ph.i.i.i1150.new:                     ; preds = %for.body.lr.ph.i.i.i1150
  %unroll_iter2089 = and i64 %wide.trip.count.i.i.i1149, 4294967292
  br label %for.body.i.i.i1156

for.body.i.i.i1156:                               ; preds = %for.body.i.i.i1156, %for.body.lr.ph.i.i.i1150.new
  %indvars.iv.i.i.i1151 = phi i64 [ 0, %for.body.lr.ph.i.i.i1150.new ], [ %indvars.iv.next.i.i.i1154.3, %for.body.i.i.i1156 ]
  %niter2090 = phi i64 [ 0, %for.body.lr.ph.i.i.i1150.new ], [ %niter2090.next.3, %for.body.i.i.i1156 ]
  %arrayidx.i.i.i1152 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1145, i64 %indvars.iv.i.i.i1151
  %215 = load ptr, ptr %m_data.i.i.i1148, align 8, !tbaa !320
  %arrayidx3.i.i.i1153 = getelementptr inbounds ptr, ptr %215, i64 %indvars.iv.i.i.i1151
  %216 = load ptr, ptr %arrayidx3.i.i.i1153, align 8, !tbaa !219
  store ptr %216, ptr %arrayidx.i.i.i1152, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1154 = or i64 %indvars.iv.i.i.i1151, 1
  %arrayidx.i.i.i1152.12092 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1145, i64 %indvars.iv.next.i.i.i1154
  %217 = load ptr, ptr %m_data.i.i.i1148, align 8, !tbaa !320
  %arrayidx3.i.i.i1153.12093 = getelementptr inbounds ptr, ptr %217, i64 %indvars.iv.next.i.i.i1154
  %218 = load ptr, ptr %arrayidx3.i.i.i1153.12093, align 8, !tbaa !219
  store ptr %218, ptr %arrayidx.i.i.i1152.12092, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1154.12094 = or i64 %indvars.iv.i.i.i1151, 2
  %arrayidx.i.i.i1152.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1145, i64 %indvars.iv.next.i.i.i1154.12094
  %219 = load ptr, ptr %m_data.i.i.i1148, align 8, !tbaa !320
  %arrayidx3.i.i.i1153.2 = getelementptr inbounds ptr, ptr %219, i64 %indvars.iv.next.i.i.i1154.12094
  %220 = load ptr, ptr %arrayidx3.i.i.i1153.2, align 8, !tbaa !219
  store ptr %220, ptr %arrayidx.i.i.i1152.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1154.2 = or i64 %indvars.iv.i.i.i1151, 3
  %arrayidx.i.i.i1152.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1145, i64 %indvars.iv.next.i.i.i1154.2
  %221 = load ptr, ptr %m_data.i.i.i1148, align 8, !tbaa !320
  %arrayidx3.i.i.i1153.3 = getelementptr inbounds ptr, ptr %221, i64 %indvars.iv.next.i.i.i1154.2
  %222 = load ptr, ptr %arrayidx3.i.i.i1153.3, align 8, !tbaa !219
  store ptr %222, ptr %arrayidx.i.i.i1152.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1154.3 = add nuw nsw i64 %indvars.iv.i.i.i1151, 4
  %niter2090.next.3 = add i64 %niter2090, 4
  %niter2090.ncmp.3 = icmp eq i64 %niter2090.next.3, %unroll_iter2089
  br i1 %niter2090.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.loopexit.unr-lcssa, label %for.body.i.i.i1156

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1156, %for.body.lr.ph.i.i.i1150
  %indvars.iv.i.i.i1151.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1150 ], [ %indvars.iv.next.i.i.i1154.3, %for.body.i.i.i1156 ]
  %lcmp.mod2088.not = icmp eq i64 %xtraiter2086, 0
  br i1 %lcmp.mod2088.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162, label %for.body.i.i.i1156.epil

for.body.i.i.i1156.epil:                          ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.loopexit.unr-lcssa, %for.body.i.i.i1156.epil
  %indvars.iv.i.i.i1151.epil = phi i64 [ %indvars.iv.next.i.i.i1154.epil, %for.body.i.i.i1156.epil ], [ %indvars.iv.i.i.i1151.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.loopexit.unr-lcssa ]
  %epil.iter2087 = phi i64 [ %epil.iter2087.next, %for.body.i.i.i1156.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1152.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1145, i64 %indvars.iv.i.i.i1151.epil
  %223 = load ptr, ptr %m_data.i.i.i1148, align 8, !tbaa !320
  %arrayidx3.i.i.i1153.epil = getelementptr inbounds ptr, ptr %223, i64 %indvars.iv.i.i.i1151.epil
  %224 = load ptr, ptr %arrayidx3.i.i.i1153.epil, align 8, !tbaa !219
  store ptr %224, ptr %arrayidx.i.i.i1152.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1154.epil = add nuw nsw i64 %indvars.iv.i.i.i1151.epil, 1
  %epil.iter2087.next = add i64 %epil.iter2087, 1
  %epil.iter2087.cmp.not = icmp eq i64 %epil.iter2087.next, %xtraiter2086
  br i1 %epil.iter2087.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162, label %for.body.i.i.i1156.epil, !llvm.loop !351

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.loopexit.unr-lcssa, %for.body.i.i.i1156.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1147
  %m_data.i9.i.i1157 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %206, i64 0, i32 5
  %225 = load ptr, ptr %m_data.i9.i.i1157, align 8, !tbaa !320
  %tobool.not.i10.i.i1158 = icmp eq ptr %225, null
  %m_ownsMemory.i.i.i1159 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %206, i64 0, i32 6
  %226 = load i8, ptr %m_ownsMemory.i.i.i1159, align 8, !range !159
  %tobool2.not.i.i.i1160 = icmp eq i8 %226, 0
  %or.cond.i.i1161 = select i1 %tobool.not.i10.i.i1158, i1 true, i1 %tobool2.not.i.i.i1160
  br i1 %or.cond.i.i1161, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1166, label %if.then3.i.i.i1164

if.then3.i.i.i1164:                               ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %225)
          to label %.noexc1173 unwind label %lpad351

.noexc1173:                                       ; preds = %if.then3.i.i.i1164
  %.pre7.pre.i1163 = load i32, ptr %m_size.i.i1112, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1166

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1166: ; preds = %.noexc1173, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162
  %.pre7.i1165 = phi i32 [ %.pre7.pre.i1163, %.noexc1173 ], [ %213, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1159, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1145, ptr %m_data.i9.i.i1157, align 8, !tbaa !320
  store i32 %cond.i.i1135, ptr %m_capacity.i.i1131, align 8, !tbaa !342
  br label %invoke.cont354

invoke.cont354:                                   ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1166, %if.then.i1137, %if.then344
  %227 = phi i32 [ %.pre7.i1165, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1166 ], [ %208, %if.then.i1137 ], [ %208, %if.then344 ]
  %m_data.i1167 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %206, i64 0, i32 5
  %228 = load ptr, ptr %m_data.i1167, align 8, !tbaa !320
  %idxprom.i1168 = sext i32 %227 to i64
  %arrayidx.i1169 = getelementptr inbounds ptr, ptr %228, i64 %idxprom.i1168
  store ptr %arrayidx.i1111, ptr %arrayidx.i1169, align 8, !tbaa !219
  %inc.i1170 = add nsw i32 %227, 1
  store i32 %inc.i1170, ptr %m_size.i.i1112, align 4, !tbaa !319
  br label %if.end357

lpad351:                                          ; preds = %if.then3.i.i.i1164.1, %if.then.i.i.i1144.1, %if.then3.i.i.i1164, %if.then.i.i.i1144
  %229 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %idx) #38
  br label %ehcleanup443

if.end357:                                        ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE16findLinearSearchERKS2_.exit, %invoke.cont354, %for.body308
  %230 = trunc i64 %indvars.iv1887 to i32
  %231 = add i32 %230, 2
  %rem317.1 = urem i32 %231, 3
  %idxprom318.1 = zext i32 %rem317.1 to i64
  %arrayidx319.1 = getelementptr inbounds [3 x i32], ptr %idx, i64 0, i64 %idxprom318.1
  %232 = load i32, ptr %arrayidx319.1, align 4, !tbaa !140
  %idxprom.i1104.1 = sext i32 %232 to i64
  %arrayidx.i1105.1 = getelementptr inbounds i32, ptr %cids.sroa.151667.1, i64 %idxprom.i1104.1
  %233 = load i32, ptr %arrayidx.i1105.1, align 4, !tbaa !140
  %cmp323.not.1 = icmp eq i32 %233, %200
  br i1 %cmp323.not.1, label %if.end357.1, label %if.then324.1

if.then324.1:                                     ; preds = %if.end357
  %234 = load ptr, ptr %m_data.i841, align 8, !tbaa !123
  %arrayidx.i1108.1 = getelementptr inbounds ptr, ptr %234, i64 %idxprom.i1107
  %235 = load ptr, ptr %arrayidx.i1108.1, align 8, !tbaa !219
  %236 = load ptr, ptr %m_data.i957, align 8, !tbaa !87
  %arrayidx.i1111.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %236, i64 %idxprom.i1104.1
  %m_size.i.i1112.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %235, i64 0, i32 2
  %237 = load i32, ptr %m_size.i.i1112.1, align 4, !tbaa !319
  %cmp8.i.1 = icmp sgt i32 %237, 0
  br i1 %cmp8.i.1, label %for.body.lr.ph.i.1, label %if.then344.1

for.body.lr.ph.i.1:                               ; preds = %if.then324.1
  %m_data.i1113.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %235, i64 0, i32 5
  %238 = load ptr, ptr %m_data.i1113.1, align 8, !tbaa !320
  %wide.trip.count.i1114.1 = zext i32 %237 to i64
  br label %for.body.i.1

for.body.i.1:                                     ; preds = %for.inc.i.1, %for.body.lr.ph.i.1
  %indvars.iv.i1115.1 = phi i64 [ 0, %for.body.lr.ph.i.1 ], [ %indvars.iv.next.i1118.1, %for.inc.i.1 ]
  %arrayidx.i1116.1 = getelementptr inbounds ptr, ptr %238, i64 %indvars.iv.i1115.1
  %239 = load ptr, ptr %arrayidx.i1116.1, align 8, !tbaa !219
  %cmp3.i1117.1 = icmp eq ptr %239, %arrayidx.i1111.1
  br i1 %cmp3.i1117.1, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE16findLinearSearchERKS2_.exit.1, label %for.inc.i.1

for.inc.i.1:                                      ; preds = %for.body.i.1
  %indvars.iv.next.i1118.1 = add nuw nsw i64 %indvars.iv.i1115.1, 1
  %exitcond.not.i1119.1 = icmp eq i64 %indvars.iv.next.i1118.1, %wide.trip.count.i1114.1
  br i1 %exitcond.not.i1119.1, label %if.then344.1, label %for.body.i.1

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE16findLinearSearchERKS2_.exit.1: ; preds = %for.body.i.1
  %240 = trunc i64 %indvars.iv.i1115.1 to i32
  %cmp342.1 = icmp eq i32 %237, %240
  br i1 %cmp342.1, label %if.then344.1, label %if.end357.1

if.then344.1:                                     ; preds = %for.inc.i.1, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE16findLinearSearchERKS2_.exit.1, %if.then324.1
  %m_capacity.i.i1131.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %235, i64 0, i32 3
  %241 = load i32, ptr %m_capacity.i.i1131.1, align 8, !tbaa !342
  %cmp.i1132.1 = icmp eq i32 %237, %241
  br i1 %cmp.i1132.1, label %if.then.i1137.1, label %invoke.cont354.1

if.then.i1137.1:                                  ; preds = %if.then344.1
  %tobool.not.i.i1133.1 = icmp eq i32 %237, 0
  %mul.i.i1134.1 = shl nsw i32 %237, 1
  %cond.i.i1135.1 = select i1 %tobool.not.i.i1133.1, i32 1, i32 %mul.i.i1134.1
  %cmp.i.i1136.1 = icmp slt i32 %237, %cond.i.i1135.1
  br i1 %cmp.i.i1136.1, label %if.then.i.i1139.1, label %invoke.cont354.1

if.then.i.i1139.1:                                ; preds = %if.then.i1137.1
  %tobool.not.i.i.i1138.1 = icmp eq i32 %cond.i.i1135.1, 0
  br i1 %tobool.not.i.i.i1138.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1147.1, label %if.then.i.i.i1144.1

if.then.i.i.i1144.1:                              ; preds = %if.then.i.i1139.1
  %conv.i.i.i.i1140.1 = sext i32 %cond.i.i1135.1 to i64
  %mul.i.i.i.i1141.1 = shl nsw i64 %conv.i.i.i.i1140.1, 3
  %call.i.i.i.i11421172.1 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1141.1, i32 noundef 16)
          to label %call.i.i.i.i1142.noexc.1 unwind label %lpad351

call.i.i.i.i1142.noexc.1:                         ; preds = %if.then.i.i.i1144.1
  %.pre.i1143.1 = load i32, ptr %m_size.i.i1112.1, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1147.1

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1147.1: ; preds = %call.i.i.i.i1142.noexc.1, %if.then.i.i1139.1
  %242 = phi i32 [ %.pre.i1143.1, %call.i.i.i.i1142.noexc.1 ], [ %237, %if.then.i.i1139.1 ]
  %retval.0.i.i.i1145.1 = phi ptr [ %call.i.i.i.i11421172.1, %call.i.i.i.i1142.noexc.1 ], [ null, %if.then.i.i1139.1 ]
  %cmp7.i.i.i1146.1 = icmp sgt i32 %242, 0
  br i1 %cmp7.i.i.i1146.1, label %for.body.lr.ph.i.i.i1150.1, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.1

for.body.lr.ph.i.i.i1150.1:                       ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1147.1
  %m_data.i.i.i1148.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %235, i64 0, i32 5
  %wide.trip.count.i.i.i1149.1 = zext i32 %242 to i64
  %xtraiter2097 = and i64 %wide.trip.count.i.i.i1149.1, 3
  %243 = icmp ult i32 %242, 4
  br i1 %243, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.1.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1150.1.new

for.body.lr.ph.i.i.i1150.1.new:                   ; preds = %for.body.lr.ph.i.i.i1150.1
  %unroll_iter2100 = and i64 %wide.trip.count.i.i.i1149.1, 4294967292
  br label %for.body.i.i.i1156.1

for.body.i.i.i1156.1:                             ; preds = %for.body.i.i.i1156.1, %for.body.lr.ph.i.i.i1150.1.new
  %indvars.iv.i.i.i1151.1 = phi i64 [ 0, %for.body.lr.ph.i.i.i1150.1.new ], [ %indvars.iv.next.i.i.i1154.1.3, %for.body.i.i.i1156.1 ]
  %niter2101 = phi i64 [ 0, %for.body.lr.ph.i.i.i1150.1.new ], [ %niter2101.next.3, %for.body.i.i.i1156.1 ]
  %arrayidx.i.i.i1152.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1145.1, i64 %indvars.iv.i.i.i1151.1
  %244 = load ptr, ptr %m_data.i.i.i1148.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1153.1 = getelementptr inbounds ptr, ptr %244, i64 %indvars.iv.i.i.i1151.1
  %245 = load ptr, ptr %arrayidx3.i.i.i1153.1, align 8, !tbaa !219
  store ptr %245, ptr %arrayidx.i.i.i1152.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1154.1 = or i64 %indvars.iv.i.i.i1151.1, 1
  %arrayidx.i.i.i1152.1.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1145.1, i64 %indvars.iv.next.i.i.i1154.1
  %246 = load ptr, ptr %m_data.i.i.i1148.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1153.1.1 = getelementptr inbounds ptr, ptr %246, i64 %indvars.iv.next.i.i.i1154.1
  %247 = load ptr, ptr %arrayidx3.i.i.i1153.1.1, align 8, !tbaa !219
  store ptr %247, ptr %arrayidx.i.i.i1152.1.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1154.1.1 = or i64 %indvars.iv.i.i.i1151.1, 2
  %arrayidx.i.i.i1152.1.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1145.1, i64 %indvars.iv.next.i.i.i1154.1.1
  %248 = load ptr, ptr %m_data.i.i.i1148.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1153.1.2 = getelementptr inbounds ptr, ptr %248, i64 %indvars.iv.next.i.i.i1154.1.1
  %249 = load ptr, ptr %arrayidx3.i.i.i1153.1.2, align 8, !tbaa !219
  store ptr %249, ptr %arrayidx.i.i.i1152.1.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1154.1.2 = or i64 %indvars.iv.i.i.i1151.1, 3
  %arrayidx.i.i.i1152.1.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1145.1, i64 %indvars.iv.next.i.i.i1154.1.2
  %250 = load ptr, ptr %m_data.i.i.i1148.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1153.1.3 = getelementptr inbounds ptr, ptr %250, i64 %indvars.iv.next.i.i.i1154.1.2
  %251 = load ptr, ptr %arrayidx3.i.i.i1153.1.3, align 8, !tbaa !219
  store ptr %251, ptr %arrayidx.i.i.i1152.1.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1154.1.3 = add nuw nsw i64 %indvars.iv.i.i.i1151.1, 4
  %niter2101.next.3 = add i64 %niter2101, 4
  %niter2101.ncmp.3 = icmp eq i64 %niter2101.next.3, %unroll_iter2100
  br i1 %niter2101.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.1.loopexit.unr-lcssa, label %for.body.i.i.i1156.1

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.1.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1156.1, %for.body.lr.ph.i.i.i1150.1
  %indvars.iv.i.i.i1151.1.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1150.1 ], [ %indvars.iv.next.i.i.i1154.1.3, %for.body.i.i.i1156.1 ]
  %lcmp.mod2099.not = icmp eq i64 %xtraiter2097, 0
  br i1 %lcmp.mod2099.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.1, label %for.body.i.i.i1156.1.epil

for.body.i.i.i1156.1.epil:                        ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.1.loopexit.unr-lcssa, %for.body.i.i.i1156.1.epil
  %indvars.iv.i.i.i1151.1.epil = phi i64 [ %indvars.iv.next.i.i.i1154.1.epil, %for.body.i.i.i1156.1.epil ], [ %indvars.iv.i.i.i1151.1.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.1.loopexit.unr-lcssa ]
  %epil.iter2098 = phi i64 [ %epil.iter2098.next, %for.body.i.i.i1156.1.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.1.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1152.1.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1145.1, i64 %indvars.iv.i.i.i1151.1.epil
  %252 = load ptr, ptr %m_data.i.i.i1148.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1153.1.epil = getelementptr inbounds ptr, ptr %252, i64 %indvars.iv.i.i.i1151.1.epil
  %253 = load ptr, ptr %arrayidx3.i.i.i1153.1.epil, align 8, !tbaa !219
  store ptr %253, ptr %arrayidx.i.i.i1152.1.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1154.1.epil = add nuw nsw i64 %indvars.iv.i.i.i1151.1.epil, 1
  %epil.iter2098.next = add i64 %epil.iter2098, 1
  %epil.iter2098.cmp.not = icmp eq i64 %epil.iter2098.next, %xtraiter2097
  br i1 %epil.iter2098.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.1, label %for.body.i.i.i1156.1.epil, !llvm.loop !352

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.1: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.1.loopexit.unr-lcssa, %for.body.i.i.i1156.1.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1147.1
  %m_data.i9.i.i1157.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %235, i64 0, i32 5
  %254 = load ptr, ptr %m_data.i9.i.i1157.1, align 8, !tbaa !320
  %tobool.not.i10.i.i1158.1 = icmp eq ptr %254, null
  %m_ownsMemory.i.i.i1159.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %235, i64 0, i32 6
  %255 = load i8, ptr %m_ownsMemory.i.i.i1159.1, align 8, !range !159
  %tobool2.not.i.i.i1160.1 = icmp eq i8 %255, 0
  %or.cond.i.i1161.1 = select i1 %tobool.not.i10.i.i1158.1, i1 true, i1 %tobool2.not.i.i.i1160.1
  br i1 %or.cond.i.i1161.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1166.1, label %if.then3.i.i.i1164.1

if.then3.i.i.i1164.1:                             ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.1
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %254)
          to label %.noexc1173.1 unwind label %lpad351

.noexc1173.1:                                     ; preds = %if.then3.i.i.i1164.1
  %.pre7.pre.i1163.1 = load i32, ptr %m_size.i.i1112.1, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1166.1

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1166.1: ; preds = %.noexc1173.1, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.1
  %.pre7.i1165.1 = phi i32 [ %.pre7.pre.i1163.1, %.noexc1173.1 ], [ %242, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1162.1 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1159.1, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1145.1, ptr %m_data.i9.i.i1157.1, align 8, !tbaa !320
  store i32 %cond.i.i1135.1, ptr %m_capacity.i.i1131.1, align 8, !tbaa !342
  br label %invoke.cont354.1

invoke.cont354.1:                                 ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1166.1, %if.then.i1137.1, %if.then344.1
  %256 = phi i32 [ %.pre7.i1165.1, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1166.1 ], [ %237, %if.then.i1137.1 ], [ %237, %if.then344.1 ]
  %m_data.i1167.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %235, i64 0, i32 5
  %257 = load ptr, ptr %m_data.i1167.1, align 8, !tbaa !320
  %idxprom.i1168.1 = sext i32 %256 to i64
  %arrayidx.i1169.1 = getelementptr inbounds ptr, ptr %257, i64 %idxprom.i1168.1
  store ptr %arrayidx.i1111.1, ptr %arrayidx.i1169.1, align 8, !tbaa !219
  %inc.i1170.1 = add nsw i32 %256, 1
  store i32 %inc.i1170.1, ptr %m_size.i.i1112.1, align 4, !tbaa !319
  br label %if.end357.1

if.end357.1:                                      ; preds = %invoke.cont354.1, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE16findLinearSearchERKS2_.exit.1, %if.end357
  %exitcond1891.not = icmp eq i64 %indvars.iv.next1888, 3
  br i1 %exitcond1891.not, label %for.cond.cleanup307, label %for.body308

for.end371.loopexit:                              ; preds = %for.cond.cleanup307
  %.pre1921 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  br label %for.end371

for.end371:                                       ; preds = %for.end371.loopexit, %for.cond260.preheader
  %258 = phi i32 [ %.pre1921, %for.end371.loopexit ], [ %182, %for.cond260.preheader ]
  %cmp375 = icmp sgt i32 %258, 1
  br i1 %cmp375, label %if.then376, label %if.end422

if.then376:                                       ; preds = %for.end371
  %call379 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 424, i32 noundef 16)
          to label %invoke.cont380 unwind label %lpad377

invoke.cont380:                                   ; preds = %if.then376
  %m_ownsMemory.i.i.i1176 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call379, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i.i1176, align 8, !tbaa !341
  %m_data.i.i.i1177 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call379, i64 0, i32 5
  store ptr null, ptr %m_data.i.i.i1177, align 8, !tbaa !320
  %m_size.i.i.i1178 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call379, i64 0, i32 2
  store i32 0, ptr %m_size.i.i.i1178, align 4, !tbaa !319
  %m_capacity.i.i.i1179 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call379, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i1179, align 8, !tbaa !342
  %m_ownsMemory.i.i27.i1180 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 1, i32 6
  store i8 1, ptr %m_ownsMemory.i.i27.i1180, align 8, !tbaa !36
  %m_data.i.i28.i1181 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 1, i32 5
  store ptr null, ptr %m_data.i.i28.i1181, align 8, !tbaa !39
  %m_size.i.i29.i1182 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 1, i32 2
  store i32 0, ptr %m_size.i.i29.i1182, align 4, !tbaa !40
  %m_capacity.i.i30.i1183 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 1, i32 3
  store i32 0, ptr %m_capacity.i.i30.i1183, align 8, !tbaa !41
  %m_ownsMemory.i.i31.i1184 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 2, i32 6
  store i8 1, ptr %m_ownsMemory.i.i31.i1184, align 8, !tbaa !30
  %m_data.i.i32.i1185 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 2, i32 5
  store ptr null, ptr %m_data.i.i32.i1185, align 8, !tbaa !33
  %m_size.i.i33.i1186 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 2, i32 2
  store i32 0, ptr %m_size.i.i33.i1186, align 4, !tbaa !34
  %m_capacity.i.i34.i1187 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 2, i32 3
  store i32 0, ptr %m_capacity.i.i34.i1187, align 8, !tbaa !35
  %m_leaf.i1188 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 15
  %m_maxSelfCollisionImpulse.i1189 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 20
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %m_leaf.i1188, i8 0, i64 24, i1 false)
  store <2 x float> <float 1.000000e+02, float 0x3F847AE140000000>, ptr %m_maxSelfCollisionImpulse.i1189, align 8, !tbaa !137
  %m_containsAnchor.i1191 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 22
  store i8 0, ptr %m_containsAnchor.i1191, align 8, !tbaa !345
  %m_collide381 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 23
  store i8 0, ptr %m_collide381, align 1, !tbaa !346
  %259 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp.i1194 = icmp sgt i32 %259, 0
  br i1 %cmp.i1194, label %if.then.i.i1197, label %for.cond.cleanup394

if.then.i.i1197:                                  ; preds = %invoke.cont380
  %conv.i.i.i = zext i32 %259 to i64
  %mul.i.i.i = shl nuw nsw i64 %conv.i.i.i, 3
  %call.i.i.i1203 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i, i32 noundef 16)
          to label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i unwind label %lpad377

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i: ; preds = %if.then.i.i1197
  %260 = load i32, ptr %m_size.i.i.i1178, align 4, !tbaa !319
  %cmp7.i.i = icmp sgt i32 %260, 0
  br i1 %cmp7.i.i, label %for.body.lr.ph.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i

for.body.lr.ph.i.i:                               ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i
  %wide.trip.count.i.i = zext i32 %260 to i64
  %xtraiter2102 = and i64 %wide.trip.count.i.i, 3
  %261 = icmp ult i32 %260, 4
  br i1 %261, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.new

for.body.lr.ph.i.i.new:                           ; preds = %for.body.lr.ph.i.i
  %unroll_iter2105 = and i64 %wide.trip.count.i.i, 4294967292
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %for.body.lr.ph.i.i.new
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.new ], [ %indvars.iv.next.i.i.3, %for.body.i.i ]
  %niter2106 = phi i64 [ 0, %for.body.lr.ph.i.i.new ], [ %niter2106.next.3, %for.body.i.i ]
  %arrayidx.i.i = getelementptr inbounds ptr, ptr %call.i.i.i1203, i64 %indvars.iv.i.i
  %262 = load ptr, ptr %m_data.i.i.i1177, align 8, !tbaa !320
  %arrayidx3.i.i1200 = getelementptr inbounds ptr, ptr %262, i64 %indvars.iv.i.i
  %263 = load ptr, ptr %arrayidx3.i.i1200, align 8, !tbaa !219
  store ptr %263, ptr %arrayidx.i.i, align 8, !tbaa !219
  %indvars.iv.next.i.i = or i64 %indvars.iv.i.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds ptr, ptr %call.i.i.i1203, i64 %indvars.iv.next.i.i
  %264 = load ptr, ptr %m_data.i.i.i1177, align 8, !tbaa !320
  %arrayidx3.i.i1200.1 = getelementptr inbounds ptr, ptr %264, i64 %indvars.iv.next.i.i
  %265 = load ptr, ptr %arrayidx3.i.i1200.1, align 8, !tbaa !219
  store ptr %265, ptr %arrayidx.i.i.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.1 = or i64 %indvars.iv.i.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds ptr, ptr %call.i.i.i1203, i64 %indvars.iv.next.i.i.1
  %266 = load ptr, ptr %m_data.i.i.i1177, align 8, !tbaa !320
  %arrayidx3.i.i1200.2 = getelementptr inbounds ptr, ptr %266, i64 %indvars.iv.next.i.i.1
  %267 = load ptr, ptr %arrayidx3.i.i1200.2, align 8, !tbaa !219
  store ptr %267, ptr %arrayidx.i.i.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.2 = or i64 %indvars.iv.i.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds ptr, ptr %call.i.i.i1203, i64 %indvars.iv.next.i.i.2
  %268 = load ptr, ptr %m_data.i.i.i1177, align 8, !tbaa !320
  %arrayidx3.i.i1200.3 = getelementptr inbounds ptr, ptr %268, i64 %indvars.iv.next.i.i.2
  %269 = load ptr, ptr %arrayidx3.i.i1200.3, align 8, !tbaa !219
  store ptr %269, ptr %arrayidx.i.i.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.3 = add nuw nsw i64 %indvars.iv.i.i, 4
  %niter2106.next.3 = add i64 %niter2106, 4
  %niter2106.ncmp.3 = icmp eq i64 %niter2106.next.3, %unroll_iter2105
  br i1 %niter2106.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.loopexit.unr-lcssa, label %for.body.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.loopexit.unr-lcssa: ; preds = %for.body.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i.3, %for.body.i.i ]
  %lcmp.mod2104.not = icmp eq i64 %xtraiter2102, 0
  br i1 %lcmp.mod2104.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i, label %for.body.i.i.epil

for.body.i.i.epil:                                ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.loopexit.unr-lcssa, %for.body.i.i.epil
  %indvars.iv.i.i.epil = phi i64 [ %indvars.iv.next.i.i.epil, %for.body.i.i.epil ], [ %indvars.iv.i.i.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.loopexit.unr-lcssa ]
  %epil.iter2103 = phi i64 [ %epil.iter2103.next, %for.body.i.i.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.loopexit.unr-lcssa ]
  %arrayidx.i.i.epil = getelementptr inbounds ptr, ptr %call.i.i.i1203, i64 %indvars.iv.i.i.epil
  %270 = load ptr, ptr %m_data.i.i.i1177, align 8, !tbaa !320
  %arrayidx3.i.i1200.epil = getelementptr inbounds ptr, ptr %270, i64 %indvars.iv.i.i.epil
  %271 = load ptr, ptr %arrayidx3.i.i1200.epil, align 8, !tbaa !219
  store ptr %271, ptr %arrayidx.i.i.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.epil = add nuw nsw i64 %indvars.iv.i.i.epil, 1
  %epil.iter2103.next = add i64 %epil.iter2103, 1
  %epil.iter2103.cmp.not = icmp eq i64 %epil.iter2103.next, %xtraiter2102
  br i1 %epil.iter2103.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i, label %for.body.i.i.epil, !llvm.loop !353

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.loopexit.unr-lcssa, %for.body.i.i.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i
  %272 = load ptr, ptr %m_data.i.i.i1177, align 8, !tbaa !320
  %tobool.not.i10.i = icmp eq ptr %272, null
  %273 = load i8, ptr %m_ownsMemory.i.i.i1176, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %273, 0
  %or.cond.i = select i1 %tobool.not.i10.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE7reserveEi.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %272)
          to label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE7reserveEi.exit unwind label %lpad377

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE7reserveEi.exit: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i1176, align 8, !tbaa !341
  store ptr %call.i.i.i1203, ptr %m_data.i.i.i1177, align 8, !tbaa !320
  store i32 %259, ptr %m_capacity.i.i.i1179, align 8, !tbaa !342
  %.pre1922 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp3931822 = icmp sgt i32 %.pre1922, 0
  br i1 %cmp3931822, label %for.body395.lr.ph, label %for.cond.cleanup394

for.body395.lr.ph:                                ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE7reserveEi.exit
  %.pre1923 = load i32, ptr %m_size.i.i.i1178, align 4, !tbaa !319
  br label %for.body395

for.cond.cleanup394:                              ; preds = %invoke.cont402, %invoke.cont380, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE7reserveEi.exit
  %274 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %m_capacity.i.i1207 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 3
  %275 = load i32, ptr %m_capacity.i.i1207, align 8, !tbaa !125
  %cmp.i1208 = icmp eq i32 %274, %275
  br i1 %cmp.i1208, label %if.then.i1213, label %invoke.cont409

if.then.i1213:                                    ; preds = %for.cond.cleanup394
  %tobool.not.i.i1209 = icmp eq i32 %274, 0
  %mul.i.i1210 = shl nsw i32 %274, 1
  %cond.i.i1211 = select i1 %tobool.not.i.i1209, i32 1, i32 %mul.i.i1210
  %cmp.i.i1212 = icmp slt i32 %274, %cond.i.i1211
  br i1 %cmp.i.i1212, label %if.then.i.i1215, label %invoke.cont409

if.then.i.i1215:                                  ; preds = %if.then.i1213
  %tobool.not.i.i.i1214 = icmp eq i32 %cond.i.i1211, 0
  br i1 %tobool.not.i.i.i1214, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1223, label %if.then.i.i.i1220

if.then.i.i.i1220:                                ; preds = %if.then.i.i1215
  %conv.i.i.i.i1216 = sext i32 %cond.i.i1211 to i64
  %mul.i.i.i.i1217 = shl nsw i64 %conv.i.i.i.i1216, 3
  %call.i.i.i.i12181247 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1217, i32 noundef 16)
          to label %call.i.i.i.i1218.noexc unwind label %lpad377

call.i.i.i.i1218.noexc:                           ; preds = %if.then.i.i.i1220
  %.pre.i1219 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1223

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1223: ; preds = %call.i.i.i.i1218.noexc, %if.then.i.i1215
  %276 = phi i32 [ %.pre.i1219, %call.i.i.i.i1218.noexc ], [ %274, %if.then.i.i1215 ]
  %retval.0.i.i.i1221 = phi ptr [ %call.i.i.i.i12181247, %call.i.i.i.i1218.noexc ], [ null, %if.then.i.i1215 ]
  %cmp7.i.i.i1222 = icmp sgt i32 %276, 0
  br i1 %cmp7.i.i.i1222, label %for.body.lr.ph.i.i.i1226, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1238

for.body.lr.ph.i.i.i1226:                         ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1223
  %wide.trip.count.i.i.i1225 = zext i32 %276 to i64
  %xtraiter2112 = and i64 %wide.trip.count.i.i.i1225, 3
  %277 = icmp ult i32 %276, 4
  br i1 %277, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1238.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1226.new

for.body.lr.ph.i.i.i1226.new:                     ; preds = %for.body.lr.ph.i.i.i1226
  %unroll_iter2115 = and i64 %wide.trip.count.i.i.i1225, 4294967292
  br label %for.body.i.i.i1232

for.body.i.i.i1232:                               ; preds = %for.body.i.i.i1232, %for.body.lr.ph.i.i.i1226.new
  %indvars.iv.i.i.i1227 = phi i64 [ 0, %for.body.lr.ph.i.i.i1226.new ], [ %indvars.iv.next.i.i.i1230.3, %for.body.i.i.i1232 ]
  %niter2116 = phi i64 [ 0, %for.body.lr.ph.i.i.i1226.new ], [ %niter2116.next.3, %for.body.i.i.i1232 ]
  %arrayidx.i.i.i1228 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1221, i64 %indvars.iv.i.i.i1227
  %278 = load ptr, ptr %m_data.i841, align 8, !tbaa !123
  %arrayidx3.i.i.i1229 = getelementptr inbounds ptr, ptr %278, i64 %indvars.iv.i.i.i1227
  %279 = load ptr, ptr %arrayidx3.i.i.i1229, align 8, !tbaa !219
  store ptr %279, ptr %arrayidx.i.i.i1228, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1230 = or i64 %indvars.iv.i.i.i1227, 1
  %arrayidx.i.i.i1228.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1221, i64 %indvars.iv.next.i.i.i1230
  %280 = load ptr, ptr %m_data.i841, align 8, !tbaa !123
  %arrayidx3.i.i.i1229.1 = getelementptr inbounds ptr, ptr %280, i64 %indvars.iv.next.i.i.i1230
  %281 = load ptr, ptr %arrayidx3.i.i.i1229.1, align 8, !tbaa !219
  store ptr %281, ptr %arrayidx.i.i.i1228.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1230.1 = or i64 %indvars.iv.i.i.i1227, 2
  %arrayidx.i.i.i1228.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1221, i64 %indvars.iv.next.i.i.i1230.1
  %282 = load ptr, ptr %m_data.i841, align 8, !tbaa !123
  %arrayidx3.i.i.i1229.2 = getelementptr inbounds ptr, ptr %282, i64 %indvars.iv.next.i.i.i1230.1
  %283 = load ptr, ptr %arrayidx3.i.i.i1229.2, align 8, !tbaa !219
  store ptr %283, ptr %arrayidx.i.i.i1228.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1230.2 = or i64 %indvars.iv.i.i.i1227, 3
  %arrayidx.i.i.i1228.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1221, i64 %indvars.iv.next.i.i.i1230.2
  %284 = load ptr, ptr %m_data.i841, align 8, !tbaa !123
  %arrayidx3.i.i.i1229.3 = getelementptr inbounds ptr, ptr %284, i64 %indvars.iv.next.i.i.i1230.2
  %285 = load ptr, ptr %arrayidx3.i.i.i1229.3, align 8, !tbaa !219
  store ptr %285, ptr %arrayidx.i.i.i1228.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1230.3 = add nuw nsw i64 %indvars.iv.i.i.i1227, 4
  %niter2116.next.3 = add i64 %niter2116, 4
  %niter2116.ncmp.3 = icmp eq i64 %niter2116.next.3, %unroll_iter2115
  br i1 %niter2116.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1238.loopexit.unr-lcssa, label %for.body.i.i.i1232

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1238.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1232, %for.body.lr.ph.i.i.i1226
  %indvars.iv.i.i.i1227.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1226 ], [ %indvars.iv.next.i.i.i1230.3, %for.body.i.i.i1232 ]
  %lcmp.mod2114.not = icmp eq i64 %xtraiter2112, 0
  br i1 %lcmp.mod2114.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1238, label %for.body.i.i.i1232.epil

for.body.i.i.i1232.epil:                          ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1238.loopexit.unr-lcssa, %for.body.i.i.i1232.epil
  %indvars.iv.i.i.i1227.epil = phi i64 [ %indvars.iv.next.i.i.i1230.epil, %for.body.i.i.i1232.epil ], [ %indvars.iv.i.i.i1227.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1238.loopexit.unr-lcssa ]
  %epil.iter2113 = phi i64 [ %epil.iter2113.next, %for.body.i.i.i1232.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1238.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1228.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1221, i64 %indvars.iv.i.i.i1227.epil
  %286 = load ptr, ptr %m_data.i841, align 8, !tbaa !123
  %arrayidx3.i.i.i1229.epil = getelementptr inbounds ptr, ptr %286, i64 %indvars.iv.i.i.i1227.epil
  %287 = load ptr, ptr %arrayidx3.i.i.i1229.epil, align 8, !tbaa !219
  store ptr %287, ptr %arrayidx.i.i.i1228.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1230.epil = add nuw nsw i64 %indvars.iv.i.i.i1227.epil, 1
  %epil.iter2113.next = add i64 %epil.iter2113, 1
  %epil.iter2113.cmp.not = icmp eq i64 %epil.iter2113.next, %xtraiter2112
  br i1 %epil.iter2113.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1238, label %for.body.i.i.i1232.epil, !llvm.loop !354

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1238: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1238.loopexit.unr-lcssa, %for.body.i.i.i1232.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1223
  %288 = load ptr, ptr %m_data.i841, align 8, !tbaa !123
  %tobool.not.i10.i.i1234 = icmp eq ptr %288, null
  %m_ownsMemory.i.i.i1235 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 6
  %289 = load i8, ptr %m_ownsMemory.i.i.i1235, align 8, !range !159
  %tobool2.not.i.i.i1236 = icmp eq i8 %289, 0
  %or.cond.i.i1237 = select i1 %tobool.not.i10.i.i1234, i1 true, i1 %tobool2.not.i.i.i1236
  br i1 %or.cond.i.i1237, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE10deallocateEv.exit.i.i, label %if.then3.i.i.i1240

if.then3.i.i.i1240:                               ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1238
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %288)
          to label %.noexc1248 unwind label %lpad377

.noexc1248:                                       ; preds = %if.then3.i.i.i1240
  %.pre7.pre.i1239 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE10deallocateEv.exit.i.i: ; preds = %.noexc1248, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1238
  %.pre7.i1241 = phi i32 [ %.pre7.pre.i1239, %.noexc1248 ], [ %276, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1238 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1235, align 8, !tbaa !122
  store ptr %retval.0.i.i.i1221, ptr %m_data.i841, align 8, !tbaa !123
  store i32 %cond.i.i1211, ptr %m_capacity.i.i1207, align 8, !tbaa !125
  br label %invoke.cont409

lpad377:                                          ; preds = %if.then3.i.i.i1240, %if.then.i.i.i1220, %if.then3.i.i, %if.then.i.i1197, %if.then376
  %290 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup443

for.body395:                                      ; preds = %for.body395.lr.ph, %invoke.cont402
  %291 = phi i32 [ %.pre1922, %for.body395.lr.ph ], [ %309, %invoke.cont402 ]
  %292 = phi i32 [ %259, %for.body395.lr.ph ], [ %310, %invoke.cont402 ]
  %293 = phi i32 [ %.pre1923, %for.body395.lr.ph ], [ %inc.i1292, %invoke.cont402 ]
  %indvars.iv1895 = phi i64 [ 0, %for.body395.lr.ph ], [ %indvars.iv.next1896, %invoke.cont402 ]
  %294 = load ptr, ptr %m_data.i957, align 8, !tbaa !87
  %arrayidx.i1251 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %294, i64 %indvars.iv1895
  %cmp.i1254 = icmp eq i32 %293, %292
  br i1 %cmp.i1254, label %if.then.i1259, label %invoke.cont402

if.then.i1259:                                    ; preds = %for.body395
  %tobool.not.i.i1255 = icmp eq i32 %292, 0
  %mul.i.i1256 = shl nsw i32 %292, 1
  %cond.i.i1257 = select i1 %tobool.not.i.i1255, i32 1, i32 %mul.i.i1256
  %cmp.i.i1258 = icmp slt i32 %292, %cond.i.i1257
  br i1 %cmp.i.i1258, label %if.then.i.i1261, label %invoke.cont402

if.then.i.i1261:                                  ; preds = %if.then.i1259
  %tobool.not.i.i.i1260 = icmp eq i32 %cond.i.i1257, 0
  br i1 %tobool.not.i.i.i1260, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1269, label %if.then.i.i.i1266

if.then.i.i.i1266:                                ; preds = %if.then.i.i1261
  %conv.i.i.i.i1262 = sext i32 %cond.i.i1257 to i64
  %mul.i.i.i.i1263 = shl nsw i64 %conv.i.i.i.i1262, 3
  %call.i.i.i.i12641294 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1263, i32 noundef 16)
          to label %call.i.i.i.i1264.noexc unwind label %lpad399

call.i.i.i.i1264.noexc:                           ; preds = %if.then.i.i.i1266
  %.pre.i1265 = load i32, ptr %m_size.i.i.i1178, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1269

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1269: ; preds = %call.i.i.i.i1264.noexc, %if.then.i.i1261
  %295 = phi i32 [ %.pre.i1265, %call.i.i.i.i1264.noexc ], [ %292, %if.then.i.i1261 ]
  %retval.0.i.i.i1267 = phi ptr [ %call.i.i.i.i12641294, %call.i.i.i.i1264.noexc ], [ null, %if.then.i.i1261 ]
  %cmp7.i.i.i1268 = icmp sgt i32 %295, 0
  br i1 %cmp7.i.i.i1268, label %for.body.lr.ph.i.i.i1272, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1284

for.body.lr.ph.i.i.i1272:                         ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1269
  %wide.trip.count.i.i.i1271 = zext i32 %295 to i64
  %xtraiter2107 = and i64 %wide.trip.count.i.i.i1271, 3
  %296 = icmp ult i32 %295, 4
  br i1 %296, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1284.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1272.new

for.body.lr.ph.i.i.i1272.new:                     ; preds = %for.body.lr.ph.i.i.i1272
  %unroll_iter2110 = and i64 %wide.trip.count.i.i.i1271, 4294967292
  br label %for.body.i.i.i1278

for.body.i.i.i1278:                               ; preds = %for.body.i.i.i1278, %for.body.lr.ph.i.i.i1272.new
  %indvars.iv.i.i.i1273 = phi i64 [ 0, %for.body.lr.ph.i.i.i1272.new ], [ %indvars.iv.next.i.i.i1276.3, %for.body.i.i.i1278 ]
  %niter2111 = phi i64 [ 0, %for.body.lr.ph.i.i.i1272.new ], [ %niter2111.next.3, %for.body.i.i.i1278 ]
  %arrayidx.i.i.i1274 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1267, i64 %indvars.iv.i.i.i1273
  %297 = load ptr, ptr %m_data.i.i.i1177, align 8, !tbaa !320
  %arrayidx3.i.i.i1275 = getelementptr inbounds ptr, ptr %297, i64 %indvars.iv.i.i.i1273
  %298 = load ptr, ptr %arrayidx3.i.i.i1275, align 8, !tbaa !219
  store ptr %298, ptr %arrayidx.i.i.i1274, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1276 = or i64 %indvars.iv.i.i.i1273, 1
  %arrayidx.i.i.i1274.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1267, i64 %indvars.iv.next.i.i.i1276
  %299 = load ptr, ptr %m_data.i.i.i1177, align 8, !tbaa !320
  %arrayidx3.i.i.i1275.1 = getelementptr inbounds ptr, ptr %299, i64 %indvars.iv.next.i.i.i1276
  %300 = load ptr, ptr %arrayidx3.i.i.i1275.1, align 8, !tbaa !219
  store ptr %300, ptr %arrayidx.i.i.i1274.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1276.1 = or i64 %indvars.iv.i.i.i1273, 2
  %arrayidx.i.i.i1274.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1267, i64 %indvars.iv.next.i.i.i1276.1
  %301 = load ptr, ptr %m_data.i.i.i1177, align 8, !tbaa !320
  %arrayidx3.i.i.i1275.2 = getelementptr inbounds ptr, ptr %301, i64 %indvars.iv.next.i.i.i1276.1
  %302 = load ptr, ptr %arrayidx3.i.i.i1275.2, align 8, !tbaa !219
  store ptr %302, ptr %arrayidx.i.i.i1274.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1276.2 = or i64 %indvars.iv.i.i.i1273, 3
  %arrayidx.i.i.i1274.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1267, i64 %indvars.iv.next.i.i.i1276.2
  %303 = load ptr, ptr %m_data.i.i.i1177, align 8, !tbaa !320
  %arrayidx3.i.i.i1275.3 = getelementptr inbounds ptr, ptr %303, i64 %indvars.iv.next.i.i.i1276.2
  %304 = load ptr, ptr %arrayidx3.i.i.i1275.3, align 8, !tbaa !219
  store ptr %304, ptr %arrayidx.i.i.i1274.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1276.3 = add nuw nsw i64 %indvars.iv.i.i.i1273, 4
  %niter2111.next.3 = add i64 %niter2111, 4
  %niter2111.ncmp.3 = icmp eq i64 %niter2111.next.3, %unroll_iter2110
  br i1 %niter2111.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1284.loopexit.unr-lcssa, label %for.body.i.i.i1278

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1284.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1278, %for.body.lr.ph.i.i.i1272
  %indvars.iv.i.i.i1273.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1272 ], [ %indvars.iv.next.i.i.i1276.3, %for.body.i.i.i1278 ]
  %lcmp.mod2109.not = icmp eq i64 %xtraiter2107, 0
  br i1 %lcmp.mod2109.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1284, label %for.body.i.i.i1278.epil

for.body.i.i.i1278.epil:                          ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1284.loopexit.unr-lcssa, %for.body.i.i.i1278.epil
  %indvars.iv.i.i.i1273.epil = phi i64 [ %indvars.iv.next.i.i.i1276.epil, %for.body.i.i.i1278.epil ], [ %indvars.iv.i.i.i1273.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1284.loopexit.unr-lcssa ]
  %epil.iter2108 = phi i64 [ %epil.iter2108.next, %for.body.i.i.i1278.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1284.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1274.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1267, i64 %indvars.iv.i.i.i1273.epil
  %305 = load ptr, ptr %m_data.i.i.i1177, align 8, !tbaa !320
  %arrayidx3.i.i.i1275.epil = getelementptr inbounds ptr, ptr %305, i64 %indvars.iv.i.i.i1273.epil
  %306 = load ptr, ptr %arrayidx3.i.i.i1275.epil, align 8, !tbaa !219
  store ptr %306, ptr %arrayidx.i.i.i1274.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1276.epil = add nuw nsw i64 %indvars.iv.i.i.i1273.epil, 1
  %epil.iter2108.next = add i64 %epil.iter2108, 1
  %epil.iter2108.cmp.not = icmp eq i64 %epil.iter2108.next, %xtraiter2107
  br i1 %epil.iter2108.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1284, label %for.body.i.i.i1278.epil, !llvm.loop !355

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1284: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1284.loopexit.unr-lcssa, %for.body.i.i.i1278.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1269
  %307 = load ptr, ptr %m_data.i.i.i1177, align 8, !tbaa !320
  %tobool.not.i10.i.i1280 = icmp eq ptr %307, null
  %308 = load i8, ptr %m_ownsMemory.i.i.i1176, align 8, !range !159
  %tobool2.not.i.i.i1282 = icmp eq i8 %308, 0
  %or.cond.i.i1283 = select i1 %tobool.not.i10.i.i1280, i1 true, i1 %tobool2.not.i.i.i1282
  br i1 %or.cond.i.i1283, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1288, label %if.then3.i.i.i1286

if.then3.i.i.i1286:                               ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1284
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %307)
          to label %.noexc1295 unwind label %lpad399

.noexc1295:                                       ; preds = %if.then3.i.i.i1286
  %.pre7.pre.i1285 = load i32, ptr %m_size.i.i.i1178, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1288

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1288: ; preds = %.noexc1295, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1284
  %.pre7.i1287 = phi i32 [ %.pre7.pre.i1285, %.noexc1295 ], [ %295, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1284 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1176, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1267, ptr %m_data.i.i.i1177, align 8, !tbaa !320
  store i32 %cond.i.i1257, ptr %m_capacity.i.i.i1179, align 8, !tbaa !342
  %.pre1924 = load i32, ptr %m_size.i, align 4, !tbaa !88
  br label %invoke.cont402

invoke.cont402:                                   ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1288, %if.then.i1259, %for.body395
  %309 = phi i32 [ %.pre1924, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1288 ], [ %291, %if.then.i1259 ], [ %291, %for.body395 ]
  %310 = phi i32 [ %cond.i.i1257, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1288 ], [ %292, %if.then.i1259 ], [ %292, %for.body395 ]
  %311 = phi i32 [ %.pre7.i1287, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1288 ], [ %292, %if.then.i1259 ], [ %293, %for.body395 ]
  %312 = load ptr, ptr %m_data.i.i.i1177, align 8, !tbaa !320
  %idxprom.i1290 = sext i32 %311 to i64
  %arrayidx.i1291 = getelementptr inbounds ptr, ptr %312, i64 %idxprom.i1290
  store ptr %arrayidx.i1251, ptr %arrayidx.i1291, align 8, !tbaa !219
  %inc.i1292 = add nsw i32 %311, 1
  store i32 %inc.i1292, ptr %m_size.i.i.i1178, align 4, !tbaa !319
  %indvars.iv.next1896 = add nuw nsw i64 %indvars.iv1895, 1
  %313 = sext i32 %309 to i64
  %cmp393 = icmp slt i64 %indvars.iv.next1896, %313
  br i1 %cmp393, label %for.body395, label %for.cond.cleanup394

lpad399:                                          ; preds = %if.then3.i.i.i1286, %if.then.i.i.i1266
  %314 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup443

invoke.cont409:                                   ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE10deallocateEv.exit.i.i, %if.then.i1213, %for.cond.cleanup394
  %315 = phi i32 [ %.pre7.i1241, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE10deallocateEv.exit.i.i ], [ %274, %if.then.i1213 ], [ %274, %for.cond.cleanup394 ]
  %316 = load ptr, ptr %m_data.i841, align 8, !tbaa !123
  %idxprom.i1243 = sext i32 %315 to i64
  %arrayidx.i1244 = getelementptr inbounds ptr, ptr %316, i64 %idxprom.i1243
  store ptr %call379, ptr %arrayidx.i1244, align 8, !tbaa !219
  %inc.i1245 = add nsw i32 %315, 1
  store i32 %inc.i1245, ptr %m_size.i.i, align 4, !tbaa !124
  %317 = load ptr, ptr %m_data.i841, align 8, !tbaa !123
  %arrayidx.i1301 = getelementptr inbounds ptr, ptr %317, i64 %idxprom.i1243
  %318 = load ptr, ptr %317, align 8, !tbaa !219
  %319 = load ptr, ptr %arrayidx.i1301, align 8, !tbaa !219
  store ptr %319, ptr %317, align 8, !tbaa !219
  store ptr %318, ptr %arrayidx.i1301, align 8, !tbaa !219
  br label %if.end422

if.end422:                                        ; preds = %invoke.cont409, %for.end371
  %320 = phi i32 [ %inc.i1245, %invoke.cont409 ], [ %258, %for.end371 ]
  %cmp4271824 = icmp sgt i32 %320, 0
  br i1 %cmp4271824, label %for.body428.lr.ph, label %for.end441

for.body428.lr.ph:                                ; preds = %if.end422
  %m_cdbvt.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  br label %for.body428

for.body428:                                      ; preds = %for.body428.lr.ph, %for.inc439
  %321 = phi i32 [ %320, %for.body428.lr.ph ], [ %333, %for.inc439 ]
  %i17.31825 = phi i32 [ 0, %for.body428.lr.ph ], [ %inc440, %for.inc439 ]
  %322 = load ptr, ptr %m_data.i841, align 8, !tbaa !123
  %idxprom.i1304 = sext i32 %i17.31825 to i64
  %arrayidx.i1305 = getelementptr inbounds ptr, ptr %322, i64 %idxprom.i1304
  %323 = load ptr, ptr %arrayidx.i1305, align 8, !tbaa !219
  %m_size.i1306 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %323, i64 0, i32 2
  %324 = load i32, ptr %m_size.i1306, align 4, !tbaa !319
  %cmp435 = icmp eq i32 %324, 0
  br i1 %cmp435, label %if.then436, label %for.inc439

if.then436:                                       ; preds = %for.body428
  %dec = add nsw i32 %i17.31825, -1
  %m_leaf.i1309 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %323, i64 0, i32 15
  %325 = load ptr, ptr %m_leaf.i1309, align 8, !tbaa !221
  %tobool.not.i = icmp eq ptr %325, null
  br i1 %tobool.not.i, label %if.end.i1311, label %if.then.i1310

if.then.i1310:                                    ; preds = %if.then436
  invoke void @_ZN6btDbvt6removeEP10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt.i, ptr noundef nonnull %325)
          to label %if.end.i1311 unwind label %lpad216

if.end.i1311:                                     ; preds = %if.then.i1310, %if.then436
  invoke void @_ZN10btSoftBody7ClusterD2Ev(ptr noundef nonnull align 8 dereferenceable(424) %323)
          to label %.noexc1323 unwind label %lpad216

.noexc1323:                                       ; preds = %if.end.i1311
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %323)
          to label %.noexc1324 unwind label %lpad216

.noexc1324:                                       ; preds = %.noexc1323
  %326 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp8.i.i.i = icmp sgt i32 %326, 0
  br i1 %cmp8.i.i.i, label %for.body.lr.ph.i.i.i1313, label %for.inc439

for.body.lr.ph.i.i.i1313:                         ; preds = %.noexc1324
  %327 = load ptr, ptr %m_data.i841, align 8, !tbaa !123
  %wide.trip.count.i.i.i1312 = zext i32 %326 to i64
  br label %for.body.i.i.i1316

for.body.i.i.i1316:                               ; preds = %for.inc.i.i.i, %for.body.lr.ph.i.i.i1313
  %indvars.iv.i.i.i1314 = phi i64 [ 0, %for.body.lr.ph.i.i.i1313 ], [ %indvars.iv.next.i.i.i1317, %for.inc.i.i.i ]
  %arrayidx.i.i.i1315 = getelementptr inbounds ptr, ptr %327, i64 %indvars.iv.i.i.i1314
  %328 = load ptr, ptr %arrayidx.i.i.i1315, align 8, !tbaa !219
  %cmp3.i.i.i = icmp eq ptr %328, %323
  br i1 %cmp3.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i, label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %for.body.i.i.i1316
  %indvars.iv.next.i.i.i1317 = add nuw nsw i64 %indvars.iv.i.i.i1314, 1
  %exitcond.not.i.i.i1318 = icmp eq i64 %indvars.iv.next.i.i.i1317, %wide.trip.count.i.i.i1312
  br i1 %exitcond.not.i.i.i1318, label %for.inc439, label %for.body.i.i.i1316

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i: ; preds = %for.body.i.i.i1316
  %329 = trunc i64 %indvars.iv.i.i.i1314 to i32
  %cmp.i.i1319 = icmp sgt i32 %326, %329
  br i1 %cmp.i.i1319, label %if.then.i.i1321, label %for.inc439

if.then.i.i1321:                                  ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i
  %sub.i.i1320 = add nsw i32 %326, -1
  %sext.i.i = shl i64 %indvars.iv.i.i.i1314, 32
  %idxprom.i.i.i = ashr exact i64 %sext.i.i, 32
  %arrayidx.i7.i.i = getelementptr inbounds ptr, ptr %327, i64 %idxprom.i.i.i
  %330 = load ptr, ptr %arrayidx.i7.i.i, align 8, !tbaa !219
  %idxprom3.i.i.i = sext i32 %sub.i.i1320 to i64
  %arrayidx4.i.i.i = getelementptr inbounds ptr, ptr %327, i64 %idxprom3.i.i.i
  %331 = load ptr, ptr %arrayidx4.i.i.i, align 8, !tbaa !219
  store ptr %331, ptr %arrayidx.i7.i.i, align 8, !tbaa !219
  %332 = load ptr, ptr %m_data.i841, align 8, !tbaa !123
  %arrayidx10.i.i.i = getelementptr inbounds ptr, ptr %332, i64 %idxprom3.i.i.i
  store ptr %330, ptr %arrayidx10.i.i.i, align 8, !tbaa !219
  store i32 %sub.i.i1320, ptr %m_size.i.i, align 4, !tbaa !124
  br label %for.inc439

for.inc439:                                       ; preds = %for.inc.i.i.i, %if.then.i.i1321, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i, %.noexc1324, %for.body428
  %333 = phi i32 [ %321, %for.body428 ], [ %326, %.noexc1324 ], [ %326, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i ], [ %sub.i.i1320, %if.then.i.i1321 ], [ %326, %for.inc.i.i.i ]
  %i17.4 = phi i32 [ %i17.31825, %for.body428 ], [ %dec, %.noexc1324 ], [ %dec, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i ], [ %dec, %if.then.i.i1321 ], [ %dec, %for.inc.i.i.i ]
  %inc440 = add nsw i32 %i17.4, 1
  %cmp427 = icmp slt i32 %inc440, %333
  br i1 %cmp427, label %for.body428, label %for.end441

for.end441:                                       ; preds = %for.inc439, %if.end422
  %tobool.not.i.i.i1326 = icmp eq ptr %cids.sroa.151667.1, null
  br i1 %tobool.not.i.i.i1326, label %invoke.cont442, label %if.then3.i.i.i1330

if.then3.i.i.i1330:                               ; preds = %for.end441
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %cids.sroa.151667.1)
          to label %invoke.cont442 unwind label %lpad213

invoke.cont442:                                   ; preds = %for.end441, %if.then3.i.i.i1330
  %tobool.not.i.i.i1335 = icmp eq ptr %call.i.i.i.i805834, null
  br i1 %tobool.not.i.i.i1335, label %if.end543, label %if.then3.i.i.i1339

if.then3.i.i.i1339:                               ; preds = %invoke.cont442
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %call.i.i.i.i805834)
  br label %if.end543

ehcleanup443:                                     ; preds = %lpad377, %lpad399, %lpad351, %lpad216
  %.pn718 = phi { ptr, i32 } [ %229, %lpad351 ], [ %187, %lpad216 ], [ %314, %lpad399 ], [ %290, %lpad377 ]
  %tobool.not.i.i.i1343 = icmp eq ptr %cids.sroa.151667.1, null
  br i1 %tobool.not.i.i.i1343, label %ehcleanup449, label %if.then3.i.i.i1347

if.then3.i.i.i1347:                               ; preds = %ehcleanup443
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %cids.sroa.151667.1)
          to label %ehcleanup449 unwind label %terminate.lpad

ehcleanup449:                                     ; preds = %lpad213, %if.then3.i.i.i1347, %ehcleanup443.thread, %ehcleanup443, %lpad198
  %.pn725 = phi { ptr, i32 } [ %171, %lpad198 ], [ %186, %lpad213 ], [ %188, %ehcleanup443.thread ], [ %.pn718, %ehcleanup443 ], [ %.pn718, %if.then3.i.i.i1347 ]
  %tobool.not.i.i.i1353 = icmp eq ptr %call.i.i.i.i805834, null
  br i1 %tobool.not.i.i.i1353, label %invoke.cont452, label %if.then3.i.i.i1357

if.then3.i.i.i1357:                               ; preds = %ehcleanup449.thread1745, %ehcleanup449
  %.pn7251750 = phi { ptr, i32 } [ %130, %ehcleanup449.thread1745 ], [ %.pn725, %ehcleanup449 ]
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %call.i.i.i.i805834)
          to label %invoke.cont452 unwind label %terminate.lpad

invoke.cont452:                                   ; preds = %ehcleanup449, %if.then3.i.i.i1357
  %.pn7251744 = phi { ptr, i32 } [ %.pn725, %ehcleanup449 ], [ %.pn7251750, %if.then3.i.i.i1357 ]
  resume { ptr, i32 } %.pn7251744

if.else:                                          ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit, %for.end
  %.lcssa17711933 = phi i32 [ %.pr, %for.end ], [ %.sroa.speculated1729, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit ]
  %m_size.i1362 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 2
  %334 = load i32, ptr %m_size.i1362, align 4, !tbaa !100
  %tobool455.not = icmp eq i32 %334, 0
  br i1 %tobool455.not, label %if.else499, label %if.then456

if.then456:                                       ; preds = %if.else
  %cmp4.i1366 = icmp slt i32 %.lcssa17711933, %334
  br i1 %cmp4.i1366, label %if.then5.i1370, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1406

if.then5.i1370:                                   ; preds = %if.then456
  %m_capacity.i.i.i1368 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 3
  %335 = load i32, ptr %m_capacity.i.i.i1368, align 8, !tbaa !125
  %cmp.i.i1369 = icmp slt i32 %335, %334
  %conv.i.i.i.i1373 = sext i32 %334 to i64
  br i1 %cmp.i.i1369, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1380, label %for.body10.lr.ph.i1400

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1380: ; preds = %if.then5.i1370
  %mul.i.i.i.i1374 = shl nsw i64 %conv.i.i.i.i1373, 3
  %call.i.i.i.i1375 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1374, i32 noundef 16)
  %.pre.i1376 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp7.i.i.i1379 = icmp sgt i32 %.pre.i1376, 0
  br i1 %cmp7.i.i.i1379, label %for.body.lr.ph.i.i.i1383, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1395

for.body.lr.ph.i.i.i1383:                         ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1380
  %m_data.i.i.i1381 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %wide.trip.count.i.i.i1382 = zext i32 %.pre.i1376 to i64
  %xtraiter1980 = and i64 %wide.trip.count.i.i.i1382, 3
  %336 = icmp ult i32 %.pre.i1376, 4
  br i1 %336, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1395.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1383.new

for.body.lr.ph.i.i.i1383.new:                     ; preds = %for.body.lr.ph.i.i.i1383
  %unroll_iter1983 = and i64 %wide.trip.count.i.i.i1382, 4294967292
  br label %for.body.i.i.i1389

for.body.i.i.i1389:                               ; preds = %for.body.i.i.i1389, %for.body.lr.ph.i.i.i1383.new
  %indvars.iv.i.i.i1384 = phi i64 [ 0, %for.body.lr.ph.i.i.i1383.new ], [ %indvars.iv.next.i.i.i1387.3, %for.body.i.i.i1389 ]
  %niter1984 = phi i64 [ 0, %for.body.lr.ph.i.i.i1383.new ], [ %niter1984.next.3, %for.body.i.i.i1389 ]
  %arrayidx.i.i.i1385 = getelementptr inbounds ptr, ptr %call.i.i.i.i1375, i64 %indvars.iv.i.i.i1384
  %337 = load ptr, ptr %m_data.i.i.i1381, align 8, !tbaa !123
  %arrayidx3.i.i.i1386 = getelementptr inbounds ptr, ptr %337, i64 %indvars.iv.i.i.i1384
  %338 = load ptr, ptr %arrayidx3.i.i.i1386, align 8, !tbaa !219
  store ptr %338, ptr %arrayidx.i.i.i1385, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1387 = or i64 %indvars.iv.i.i.i1384, 1
  %arrayidx.i.i.i1385.1 = getelementptr inbounds ptr, ptr %call.i.i.i.i1375, i64 %indvars.iv.next.i.i.i1387
  %339 = load ptr, ptr %m_data.i.i.i1381, align 8, !tbaa !123
  %arrayidx3.i.i.i1386.1 = getelementptr inbounds ptr, ptr %339, i64 %indvars.iv.next.i.i.i1387
  %340 = load ptr, ptr %arrayidx3.i.i.i1386.1, align 8, !tbaa !219
  store ptr %340, ptr %arrayidx.i.i.i1385.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1387.1 = or i64 %indvars.iv.i.i.i1384, 2
  %arrayidx.i.i.i1385.2 = getelementptr inbounds ptr, ptr %call.i.i.i.i1375, i64 %indvars.iv.next.i.i.i1387.1
  %341 = load ptr, ptr %m_data.i.i.i1381, align 8, !tbaa !123
  %arrayidx3.i.i.i1386.2 = getelementptr inbounds ptr, ptr %341, i64 %indvars.iv.next.i.i.i1387.1
  %342 = load ptr, ptr %arrayidx3.i.i.i1386.2, align 8, !tbaa !219
  store ptr %342, ptr %arrayidx.i.i.i1385.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1387.2 = or i64 %indvars.iv.i.i.i1384, 3
  %arrayidx.i.i.i1385.3 = getelementptr inbounds ptr, ptr %call.i.i.i.i1375, i64 %indvars.iv.next.i.i.i1387.2
  %343 = load ptr, ptr %m_data.i.i.i1381, align 8, !tbaa !123
  %arrayidx3.i.i.i1386.3 = getelementptr inbounds ptr, ptr %343, i64 %indvars.iv.next.i.i.i1387.2
  %344 = load ptr, ptr %arrayidx3.i.i.i1386.3, align 8, !tbaa !219
  store ptr %344, ptr %arrayidx.i.i.i1385.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1387.3 = add nuw nsw i64 %indvars.iv.i.i.i1384, 4
  %niter1984.next.3 = add i64 %niter1984, 4
  %niter1984.ncmp.3 = icmp eq i64 %niter1984.next.3, %unroll_iter1983
  br i1 %niter1984.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1395.loopexit.unr-lcssa, label %for.body.i.i.i1389

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1395.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1389, %for.body.lr.ph.i.i.i1383
  %indvars.iv.i.i.i1384.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1383 ], [ %indvars.iv.next.i.i.i1387.3, %for.body.i.i.i1389 ]
  %lcmp.mod1982.not = icmp eq i64 %xtraiter1980, 0
  br i1 %lcmp.mod1982.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1395, label %for.body.i.i.i1389.epil

for.body.i.i.i1389.epil:                          ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1395.loopexit.unr-lcssa, %for.body.i.i.i1389.epil
  %indvars.iv.i.i.i1384.epil = phi i64 [ %indvars.iv.next.i.i.i1387.epil, %for.body.i.i.i1389.epil ], [ %indvars.iv.i.i.i1384.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1395.loopexit.unr-lcssa ]
  %epil.iter1981 = phi i64 [ %epil.iter1981.next, %for.body.i.i.i1389.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1395.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1385.epil = getelementptr inbounds ptr, ptr %call.i.i.i.i1375, i64 %indvars.iv.i.i.i1384.epil
  %345 = load ptr, ptr %m_data.i.i.i1381, align 8, !tbaa !123
  %arrayidx3.i.i.i1386.epil = getelementptr inbounds ptr, ptr %345, i64 %indvars.iv.i.i.i1384.epil
  %346 = load ptr, ptr %arrayidx3.i.i.i1386.epil, align 8, !tbaa !219
  store ptr %346, ptr %arrayidx.i.i.i1385.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1387.epil = add nuw nsw i64 %indvars.iv.i.i.i1384.epil, 1
  %epil.iter1981.next = add i64 %epil.iter1981, 1
  %epil.iter1981.cmp.not = icmp eq i64 %epil.iter1981.next, %xtraiter1980
  br i1 %epil.iter1981.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1395, label %for.body.i.i.i1389.epil, !llvm.loop !356

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1395: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1395.loopexit.unr-lcssa, %for.body.i.i.i1389.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1380
  %m_data.i9.i.i1390 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %347 = load ptr, ptr %m_data.i9.i.i1390, align 8, !tbaa !123
  %tobool.not.i10.i.i1391 = icmp eq ptr %347, null
  %m_ownsMemory.i.i.i1392 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 6
  %348 = load i8, ptr %m_ownsMemory.i.i.i1392, align 8, !range !159
  %tobool2.not.i.i.i1393 = icmp eq i8 %348, 0
  %or.cond.i.i1394 = select i1 %tobool.not.i10.i.i1391, i1 true, i1 %tobool2.not.i.i.i1393
  br i1 %or.cond.i.i1394, label %if.end.i1397, label %if.then3.i.i.i1396

if.then3.i.i.i1396:                               ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1395
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %347)
  br label %if.end.i1397

if.end.i1397:                                     ; preds = %if.then3.i.i.i1396, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1395
  store i8 1, ptr %m_ownsMemory.i.i.i1392, align 8, !tbaa !122
  store ptr %call.i.i.i.i1375, ptr %m_data.i9.i.i1390, align 8, !tbaa !123
  store i32 %334, ptr %m_capacity.i.i.i1368, align 8, !tbaa !125
  br label %for.body10.lr.ph.i1400

for.body10.lr.ph.i1400:                           ; preds = %if.then5.i1370, %if.end.i1397
  %m_data11.i1398 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %349 = sext i32 %.lcssa17711933 to i64
  %350 = sub nsw i64 %conv.i.i.i.i1373, %349
  %351 = xor i64 %349, -1
  %352 = add nsw i64 %351, %conv.i.i.i.i1373
  %xtraiter1985 = and i64 %350, 3
  %lcmp.mod1986.not = icmp eq i64 %xtraiter1985, 0
  br i1 %lcmp.mod1986.not, label %for.body10.i1405.prol.loopexit, label %for.body10.i1405.prol

for.body10.i1405.prol:                            ; preds = %for.body10.lr.ph.i1400, %for.body10.i1405.prol
  %indvars.iv.i1401.prol = phi i64 [ %indvars.iv.next.i1403.prol, %for.body10.i1405.prol ], [ %349, %for.body10.lr.ph.i1400 ]
  %prol.iter1987 = phi i64 [ %prol.iter1987.next, %for.body10.i1405.prol ], [ 0, %for.body10.lr.ph.i1400 ]
  %353 = load ptr, ptr %m_data11.i1398, align 8, !tbaa !123
  %arrayidx13.i1402.prol = getelementptr inbounds ptr, ptr %353, i64 %indvars.iv.i1401.prol
  store ptr null, ptr %arrayidx13.i1402.prol, align 8, !tbaa !219
  %indvars.iv.next.i1403.prol = add nsw i64 %indvars.iv.i1401.prol, 1
  %prol.iter1987.next = add i64 %prol.iter1987, 1
  %prol.iter1987.cmp.not = icmp eq i64 %prol.iter1987.next, %xtraiter1985
  br i1 %prol.iter1987.cmp.not, label %for.body10.i1405.prol.loopexit, label %for.body10.i1405.prol, !llvm.loop !357

for.body10.i1405.prol.loopexit:                   ; preds = %for.body10.i1405.prol, %for.body10.lr.ph.i1400
  %indvars.iv.i1401.unr = phi i64 [ %349, %for.body10.lr.ph.i1400 ], [ %indvars.iv.next.i1403.prol, %for.body10.i1405.prol ]
  %354 = icmp ult i64 %352, 3
  br i1 %354, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1406, label %for.body10.i1405

for.body10.i1405:                                 ; preds = %for.body10.i1405.prol.loopexit, %for.body10.i1405
  %indvars.iv.i1401 = phi i64 [ %indvars.iv.next.i1403.3, %for.body10.i1405 ], [ %indvars.iv.i1401.unr, %for.body10.i1405.prol.loopexit ]
  %355 = load ptr, ptr %m_data11.i1398, align 8, !tbaa !123
  %arrayidx13.i1402 = getelementptr inbounds ptr, ptr %355, i64 %indvars.iv.i1401
  store ptr null, ptr %arrayidx13.i1402, align 8, !tbaa !219
  %indvars.iv.next.i1403 = add nsw i64 %indvars.iv.i1401, 1
  %356 = load ptr, ptr %m_data11.i1398, align 8, !tbaa !123
  %arrayidx13.i1402.1 = getelementptr inbounds ptr, ptr %356, i64 %indvars.iv.next.i1403
  store ptr null, ptr %arrayidx13.i1402.1, align 8, !tbaa !219
  %indvars.iv.next.i1403.1 = add nsw i64 %indvars.iv.i1401, 2
  %357 = load ptr, ptr %m_data11.i1398, align 8, !tbaa !123
  %arrayidx13.i1402.2 = getelementptr inbounds ptr, ptr %357, i64 %indvars.iv.next.i1403.1
  store ptr null, ptr %arrayidx13.i1402.2, align 8, !tbaa !219
  %indvars.iv.next.i1403.2 = add nsw i64 %indvars.iv.i1401, 3
  %358 = load ptr, ptr %m_data11.i1398, align 8, !tbaa !123
  %arrayidx13.i1402.3 = getelementptr inbounds ptr, ptr %358, i64 %indvars.iv.next.i1403.2
  store ptr null, ptr %arrayidx13.i1402.3, align 8, !tbaa !219
  %indvars.iv.next.i1403.3 = add nsw i64 %indvars.iv.i1401, 4
  %exitcond.not.i1404.3 = icmp eq i64 %indvars.iv.next.i1403.3, %conv.i.i.i.i1373
  br i1 %exitcond.not.i1404.3, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1406, label %for.body10.i1405

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1406: ; preds = %for.body10.i1405.prol.loopexit, %for.body10.i1405, %if.then456
  store i32 %334, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp4641775 = icmp sgt i32 %334, 0
  br i1 %cmp4641775, label %for.body465.lr.ph, label %for.cond475.preheader

for.body465.lr.ph:                                ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1406
  %m_data.i1424 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  br label %for.body465

for.cond475.preheader:                            ; preds = %for.body465, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1406
  %359 = load i32, ptr %m_size.i1362, align 4, !tbaa !100
  %cmp4781778 = icmp sgt i32 %359, 0
  br i1 %cmp4781778, label %for.cond481.preheader.lr.ph, label %if.end543

for.cond481.preheader.lr.ph:                      ; preds = %for.cond475.preheader
  %m_data.i1431 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %m_data.i1434 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  br label %for.cond481.preheader

for.body465:                                      ; preds = %for.body465.lr.ph, %for.body465
  %indvars.iv1843 = phi i64 [ 0, %for.body465.lr.ph ], [ %indvars.iv.next1844, %for.body465 ]
  %call466 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 424, i32 noundef 16)
  %m_ownsMemory.i.i.i1408 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call466, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i.i1408, align 8, !tbaa !341
  %m_data.i.i.i1409 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call466, i64 0, i32 5
  store ptr null, ptr %m_data.i.i.i1409, align 8, !tbaa !320
  %m_size.i.i.i1410 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call466, i64 0, i32 2
  store i32 0, ptr %m_size.i.i.i1410, align 4, !tbaa !319
  %m_capacity.i.i.i1411 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call466, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i1411, align 8, !tbaa !342
  %m_ownsMemory.i.i27.i1412 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 1, i32 6
  store i8 1, ptr %m_ownsMemory.i.i27.i1412, align 8, !tbaa !36
  %m_data.i.i28.i1413 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 1, i32 5
  store ptr null, ptr %m_data.i.i28.i1413, align 8, !tbaa !39
  %m_size.i.i29.i1414 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 1, i32 2
  store i32 0, ptr %m_size.i.i29.i1414, align 4, !tbaa !40
  %m_capacity.i.i30.i1415 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 1, i32 3
  store i32 0, ptr %m_capacity.i.i30.i1415, align 8, !tbaa !41
  %m_ownsMemory.i.i31.i1416 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 2, i32 6
  store i8 1, ptr %m_ownsMemory.i.i31.i1416, align 8, !tbaa !30
  %m_data.i.i32.i1417 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 2, i32 5
  store ptr null, ptr %m_data.i.i32.i1417, align 8, !tbaa !33
  %m_size.i.i33.i1418 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 2, i32 2
  store i32 0, ptr %m_size.i.i33.i1418, align 4, !tbaa !34
  %m_capacity.i.i34.i1419 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 2, i32 3
  store i32 0, ptr %m_capacity.i.i34.i1419, align 8, !tbaa !35
  %m_leaf.i1420 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 15
  %m_maxSelfCollisionImpulse.i1421 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 20
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %m_leaf.i1420, i8 0, i64 24, i1 false)
  store <2 x float> <float 1.000000e+02, float 0x3F847AE140000000>, ptr %m_maxSelfCollisionImpulse.i1421, align 8, !tbaa !137
  %m_containsAnchor.i1423 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 22
  store i8 0, ptr %m_containsAnchor.i1423, align 8, !tbaa !345
  %360 = load ptr, ptr %m_data.i1424, align 8, !tbaa !123
  %arrayidx.i1426 = getelementptr inbounds ptr, ptr %360, i64 %indvars.iv1843
  store ptr %call466, ptr %arrayidx.i1426, align 8, !tbaa !219
  %361 = load ptr, ptr %m_data.i1424, align 8, !tbaa !123
  %arrayidx.i1429 = getelementptr inbounds ptr, ptr %361, i64 %indvars.iv1843
  %362 = load ptr, ptr %arrayidx.i1429, align 8, !tbaa !219
  %m_collide471 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %362, i64 0, i32 23
  store i8 1, ptr %m_collide471, align 1, !tbaa !346
  %indvars.iv.next1844 = add nuw nsw i64 %indvars.iv1843, 1
  %363 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %364 = sext i32 %363 to i64
  %cmp464 = icmp slt i64 %indvars.iv.next1844, %364
  br i1 %cmp464, label %for.body465, label %for.cond475.preheader

for.cond481.preheader:                            ; preds = %for.cond481.preheader.lr.ph, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.3
  %indvars.iv1849 = phi i64 [ 0, %for.cond481.preheader.lr.ph ], [ %indvars.iv.next1850, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.3 ]
  %365 = load ptr, ptr %m_data.i1431, align 8, !tbaa !123
  %arrayidx.i1433 = getelementptr inbounds ptr, ptr %365, i64 %indvars.iv1849
  %366 = load ptr, ptr %arrayidx.i1433, align 8, !tbaa !219
  %367 = load ptr, ptr %m_data.i1434, align 8, !tbaa !99
  %arrayidx492 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %367, i64 %indvars.iv1849, i32 1, i64 0
  %m_size.i.i1437 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %366, i64 0, i32 2
  %368 = load i32, ptr %m_size.i.i1437, align 4, !tbaa !319
  %m_capacity.i.i1438 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %366, i64 0, i32 3
  %369 = load i32, ptr %m_capacity.i.i1438, align 8, !tbaa !342
  %cmp.i1439 = icmp eq i32 %368, %369
  br i1 %cmp.i1439, label %if.then.i1444, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479

if.then.i1444:                                    ; preds = %for.cond481.preheader
  %tobool.not.i.i1440 = icmp eq i32 %368, 0
  %mul.i.i1441 = shl nsw i32 %368, 1
  %cond.i.i1442 = select i1 %tobool.not.i.i1440, i32 1, i32 %mul.i.i1441
  %cmp.i.i1443 = icmp slt i32 %368, %cond.i.i1442
  br i1 %cmp.i.i1443, label %if.then.i.i1446, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479

if.then.i.i1446:                                  ; preds = %if.then.i1444
  %tobool.not.i.i.i1445 = icmp eq i32 %cond.i.i1442, 0
  br i1 %tobool.not.i.i.i1445, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454, label %if.then.i.i.i1451

if.then.i.i.i1451:                                ; preds = %if.then.i.i1446
  %conv.i.i.i.i1447 = sext i32 %cond.i.i1442 to i64
  %mul.i.i.i.i1448 = shl nsw i64 %conv.i.i.i.i1447, 3
  %call.i.i.i.i1449 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1448, i32 noundef 16)
  %.pre.i1450 = load i32, ptr %m_size.i.i1437, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454: ; preds = %if.then.i.i.i1451, %if.then.i.i1446
  %370 = phi i32 [ %.pre.i1450, %if.then.i.i.i1451 ], [ %368, %if.then.i.i1446 ]
  %retval.0.i.i.i1452 = phi ptr [ %call.i.i.i.i1449, %if.then.i.i.i1451 ], [ null, %if.then.i.i1446 ]
  %cmp7.i.i.i1453 = icmp sgt i32 %370, 0
  br i1 %cmp7.i.i.i1453, label %for.body.lr.ph.i.i.i1457, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469

for.body.lr.ph.i.i.i1457:                         ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454
  %m_data.i.i.i1455 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %366, i64 0, i32 5
  %wide.trip.count.i.i.i1456 = zext i32 %370 to i64
  %xtraiter1988 = and i64 %wide.trip.count.i.i.i1456, 3
  %371 = icmp ult i32 %370, 4
  br i1 %371, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1457.new

for.body.lr.ph.i.i.i1457.new:                     ; preds = %for.body.lr.ph.i.i.i1457
  %unroll_iter1991 = and i64 %wide.trip.count.i.i.i1456, 4294967292
  br label %for.body.i.i.i1463

for.body.i.i.i1463:                               ; preds = %for.body.i.i.i1463, %for.body.lr.ph.i.i.i1457.new
  %indvars.iv.i.i.i1458 = phi i64 [ 0, %for.body.lr.ph.i.i.i1457.new ], [ %indvars.iv.next.i.i.i1461.32008, %for.body.i.i.i1463 ]
  %niter1992 = phi i64 [ 0, %for.body.lr.ph.i.i.i1457.new ], [ %niter1992.next.3, %for.body.i.i.i1463 ]
  %arrayidx.i.i.i1459 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452, i64 %indvars.iv.i.i.i1458
  %372 = load ptr, ptr %m_data.i.i.i1455, align 8, !tbaa !320
  %arrayidx3.i.i.i1460 = getelementptr inbounds ptr, ptr %372, i64 %indvars.iv.i.i.i1458
  %373 = load ptr, ptr %arrayidx3.i.i.i1460, align 8, !tbaa !219
  store ptr %373, ptr %arrayidx.i.i.i1459, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461 = or i64 %indvars.iv.i.i.i1458, 1
  %arrayidx.i.i.i1459.11994 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452, i64 %indvars.iv.next.i.i.i1461
  %374 = load ptr, ptr %m_data.i.i.i1455, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.11995 = getelementptr inbounds ptr, ptr %374, i64 %indvars.iv.next.i.i.i1461
  %375 = load ptr, ptr %arrayidx3.i.i.i1460.11995, align 8, !tbaa !219
  store ptr %375, ptr %arrayidx.i.i.i1459.11994, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.11996 = or i64 %indvars.iv.i.i.i1458, 2
  %arrayidx.i.i.i1459.22000 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452, i64 %indvars.iv.next.i.i.i1461.11996
  %376 = load ptr, ptr %m_data.i.i.i1455, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.22001 = getelementptr inbounds ptr, ptr %376, i64 %indvars.iv.next.i.i.i1461.11996
  %377 = load ptr, ptr %arrayidx3.i.i.i1460.22001, align 8, !tbaa !219
  store ptr %377, ptr %arrayidx.i.i.i1459.22000, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.22002 = or i64 %indvars.iv.i.i.i1458, 3
  %arrayidx.i.i.i1459.32006 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452, i64 %indvars.iv.next.i.i.i1461.22002
  %378 = load ptr, ptr %m_data.i.i.i1455, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.32007 = getelementptr inbounds ptr, ptr %378, i64 %indvars.iv.next.i.i.i1461.22002
  %379 = load ptr, ptr %arrayidx3.i.i.i1460.32007, align 8, !tbaa !219
  store ptr %379, ptr %arrayidx.i.i.i1459.32006, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.32008 = add nuw nsw i64 %indvars.iv.i.i.i1458, 4
  %niter1992.next.3 = add i64 %niter1992, 4
  %niter1992.ncmp.3 = icmp eq i64 %niter1992.next.3, %unroll_iter1991
  br i1 %niter1992.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.loopexit.unr-lcssa, label %for.body.i.i.i1463

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1463, %for.body.lr.ph.i.i.i1457
  %indvars.iv.i.i.i1458.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1457 ], [ %indvars.iv.next.i.i.i1461.32008, %for.body.i.i.i1463 ]
  %lcmp.mod1990.not = icmp eq i64 %xtraiter1988, 0
  br i1 %lcmp.mod1990.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469, label %for.body.i.i.i1463.epil

for.body.i.i.i1463.epil:                          ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.loopexit.unr-lcssa, %for.body.i.i.i1463.epil
  %indvars.iv.i.i.i1458.epil = phi i64 [ %indvars.iv.next.i.i.i1461.epil, %for.body.i.i.i1463.epil ], [ %indvars.iv.i.i.i1458.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.loopexit.unr-lcssa ]
  %epil.iter1989 = phi i64 [ %epil.iter1989.next, %for.body.i.i.i1463.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1459.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452, i64 %indvars.iv.i.i.i1458.epil
  %380 = load ptr, ptr %m_data.i.i.i1455, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.epil = getelementptr inbounds ptr, ptr %380, i64 %indvars.iv.i.i.i1458.epil
  %381 = load ptr, ptr %arrayidx3.i.i.i1460.epil, align 8, !tbaa !219
  store ptr %381, ptr %arrayidx.i.i.i1459.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.epil = add nuw nsw i64 %indvars.iv.i.i.i1458.epil, 1
  %epil.iter1989.next = add i64 %epil.iter1989, 1
  %epil.iter1989.cmp.not = icmp eq i64 %epil.iter1989.next, %xtraiter1988
  br i1 %epil.iter1989.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469, label %for.body.i.i.i1463.epil, !llvm.loop !358

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.loopexit.unr-lcssa, %for.body.i.i.i1463.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454
  %m_data.i9.i.i1464 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %366, i64 0, i32 5
  %382 = load ptr, ptr %m_data.i9.i.i1464, align 8, !tbaa !320
  %tobool.not.i10.i.i1465 = icmp eq ptr %382, null
  %m_ownsMemory.i.i.i1466 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %366, i64 0, i32 6
  %383 = load i8, ptr %m_ownsMemory.i.i.i1466, align 8, !range !159
  %tobool2.not.i.i.i1467 = icmp eq i8 %383, 0
  %or.cond.i.i1468 = select i1 %tobool.not.i10.i.i1465, i1 true, i1 %tobool2.not.i.i.i1467
  br i1 %or.cond.i.i1468, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473, label %if.then3.i.i.i1471

if.then3.i.i.i1471:                               ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %382)
  %.pre7.pre.i1470 = load i32, ptr %m_size.i.i1437, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473: ; preds = %if.then3.i.i.i1471, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469
  %.pre7.i1472 = phi i32 [ %.pre7.pre.i1470, %if.then3.i.i.i1471 ], [ %370, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1466, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1452, ptr %m_data.i9.i.i1464, align 8, !tbaa !320
  store i32 %cond.i.i1442, ptr %m_capacity.i.i1438, align 8, !tbaa !342
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479: ; preds = %for.cond481.preheader, %if.then.i1444, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473
  %384 = phi i32 [ %.pre7.i1472, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473 ], [ %368, %if.then.i1444 ], [ %368, %for.cond481.preheader ]
  %m_data.i1474 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %366, i64 0, i32 5
  %385 = load ptr, ptr %m_data.i1474, align 8, !tbaa !320
  %idxprom.i1475 = sext i32 %384 to i64
  %arrayidx.i1476 = getelementptr inbounds ptr, ptr %385, i64 %idxprom.i1475
  %386 = load ptr, ptr %arrayidx492, align 8, !tbaa !219
  store ptr %386, ptr %arrayidx.i1476, align 8, !tbaa !219
  %inc.i1477 = add nsw i32 %384, 1
  store i32 %inc.i1477, ptr %m_size.i.i1437, align 4, !tbaa !319
  %387 = load ptr, ptr %m_data.i1431, align 8, !tbaa !123
  %arrayidx.i1433.1 = getelementptr inbounds ptr, ptr %387, i64 %indvars.iv1849
  %388 = load ptr, ptr %arrayidx.i1433.1, align 8, !tbaa !219
  %389 = load ptr, ptr %m_data.i1434, align 8, !tbaa !99
  %arrayidx492.1 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %389, i64 %indvars.iv1849, i32 1, i64 1
  %m_size.i.i1437.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %388, i64 0, i32 2
  %390 = load i32, ptr %m_size.i.i1437.1, align 4, !tbaa !319
  %m_capacity.i.i1438.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %388, i64 0, i32 3
  %391 = load i32, ptr %m_capacity.i.i1438.1, align 8, !tbaa !342
  %cmp.i1439.1 = icmp eq i32 %390, %391
  br i1 %cmp.i1439.1, label %if.then.i1444.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.1

if.then.i1444.1:                                  ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479
  %tobool.not.i.i1440.1 = icmp eq i32 %390, 0
  %mul.i.i1441.1 = shl nsw i32 %390, 1
  %cond.i.i1442.1 = select i1 %tobool.not.i.i1440.1, i32 1, i32 %mul.i.i1441.1
  %cmp.i.i1443.1 = icmp slt i32 %390, %cond.i.i1442.1
  br i1 %cmp.i.i1443.1, label %if.then.i.i1446.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.1

if.then.i.i1446.1:                                ; preds = %if.then.i1444.1
  %tobool.not.i.i.i1445.1 = icmp eq i32 %cond.i.i1442.1, 0
  br i1 %tobool.not.i.i.i1445.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454.1, label %if.then.i.i.i1451.1

if.then.i.i.i1451.1:                              ; preds = %if.then.i.i1446.1
  %conv.i.i.i.i1447.1 = sext i32 %cond.i.i1442.1 to i64
  %mul.i.i.i.i1448.1 = shl nsw i64 %conv.i.i.i.i1447.1, 3
  %call.i.i.i.i1449.1 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1448.1, i32 noundef 16)
  %.pre.i1450.1 = load i32, ptr %m_size.i.i1437.1, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454.1

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454.1: ; preds = %if.then.i.i.i1451.1, %if.then.i.i1446.1
  %392 = phi i32 [ %.pre.i1450.1, %if.then.i.i.i1451.1 ], [ %390, %if.then.i.i1446.1 ]
  %retval.0.i.i.i1452.1 = phi ptr [ %call.i.i.i.i1449.1, %if.then.i.i.i1451.1 ], [ null, %if.then.i.i1446.1 ]
  %cmp7.i.i.i1453.1 = icmp sgt i32 %392, 0
  br i1 %cmp7.i.i.i1453.1, label %for.body.lr.ph.i.i.i1457.1, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.1

for.body.lr.ph.i.i.i1457.1:                       ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454.1
  %m_data.i.i.i1455.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %388, i64 0, i32 5
  %wide.trip.count.i.i.i1456.1 = zext i32 %392 to i64
  %xtraiter2011 = and i64 %wide.trip.count.i.i.i1456.1, 3
  %393 = icmp ult i32 %392, 4
  br i1 %393, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.1.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1457.1.new

for.body.lr.ph.i.i.i1457.1.new:                   ; preds = %for.body.lr.ph.i.i.i1457.1
  %unroll_iter2014 = and i64 %wide.trip.count.i.i.i1456.1, 4294967292
  br label %for.body.i.i.i1463.1

for.body.i.i.i1463.1:                             ; preds = %for.body.i.i.i1463.1, %for.body.lr.ph.i.i.i1457.1.new
  %indvars.iv.i.i.i1458.1 = phi i64 [ 0, %for.body.lr.ph.i.i.i1457.1.new ], [ %indvars.iv.next.i.i.i1461.1.3, %for.body.i.i.i1463.1 ]
  %niter2015 = phi i64 [ 0, %for.body.lr.ph.i.i.i1457.1.new ], [ %niter2015.next.3, %for.body.i.i.i1463.1 ]
  %arrayidx.i.i.i1459.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452.1, i64 %indvars.iv.i.i.i1458.1
  %394 = load ptr, ptr %m_data.i.i.i1455.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.1 = getelementptr inbounds ptr, ptr %394, i64 %indvars.iv.i.i.i1458.1
  %395 = load ptr, ptr %arrayidx3.i.i.i1460.1, align 8, !tbaa !219
  store ptr %395, ptr %arrayidx.i.i.i1459.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.1 = or i64 %indvars.iv.i.i.i1458.1, 1
  %arrayidx.i.i.i1459.1.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452.1, i64 %indvars.iv.next.i.i.i1461.1
  %396 = load ptr, ptr %m_data.i.i.i1455.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.1.1 = getelementptr inbounds ptr, ptr %396, i64 %indvars.iv.next.i.i.i1461.1
  %397 = load ptr, ptr %arrayidx3.i.i.i1460.1.1, align 8, !tbaa !219
  store ptr %397, ptr %arrayidx.i.i.i1459.1.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.1.1 = or i64 %indvars.iv.i.i.i1458.1, 2
  %arrayidx.i.i.i1459.1.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452.1, i64 %indvars.iv.next.i.i.i1461.1.1
  %398 = load ptr, ptr %m_data.i.i.i1455.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.1.2 = getelementptr inbounds ptr, ptr %398, i64 %indvars.iv.next.i.i.i1461.1.1
  %399 = load ptr, ptr %arrayidx3.i.i.i1460.1.2, align 8, !tbaa !219
  store ptr %399, ptr %arrayidx.i.i.i1459.1.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.1.2 = or i64 %indvars.iv.i.i.i1458.1, 3
  %arrayidx.i.i.i1459.1.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452.1, i64 %indvars.iv.next.i.i.i1461.1.2
  %400 = load ptr, ptr %m_data.i.i.i1455.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.1.3 = getelementptr inbounds ptr, ptr %400, i64 %indvars.iv.next.i.i.i1461.1.2
  %401 = load ptr, ptr %arrayidx3.i.i.i1460.1.3, align 8, !tbaa !219
  store ptr %401, ptr %arrayidx.i.i.i1459.1.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.1.3 = add nuw nsw i64 %indvars.iv.i.i.i1458.1, 4
  %niter2015.next.3 = add i64 %niter2015, 4
  %niter2015.ncmp.3 = icmp eq i64 %niter2015.next.3, %unroll_iter2014
  br i1 %niter2015.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.1.loopexit.unr-lcssa, label %for.body.i.i.i1463.1

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.1.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1463.1, %for.body.lr.ph.i.i.i1457.1
  %indvars.iv.i.i.i1458.1.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1457.1 ], [ %indvars.iv.next.i.i.i1461.1.3, %for.body.i.i.i1463.1 ]
  %lcmp.mod2013.not = icmp eq i64 %xtraiter2011, 0
  br i1 %lcmp.mod2013.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.1, label %for.body.i.i.i1463.1.epil

for.body.i.i.i1463.1.epil:                        ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.1.loopexit.unr-lcssa, %for.body.i.i.i1463.1.epil
  %indvars.iv.i.i.i1458.1.epil = phi i64 [ %indvars.iv.next.i.i.i1461.1.epil, %for.body.i.i.i1463.1.epil ], [ %indvars.iv.i.i.i1458.1.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.1.loopexit.unr-lcssa ]
  %epil.iter2012 = phi i64 [ %epil.iter2012.next, %for.body.i.i.i1463.1.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.1.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1459.1.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452.1, i64 %indvars.iv.i.i.i1458.1.epil
  %402 = load ptr, ptr %m_data.i.i.i1455.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.1.epil = getelementptr inbounds ptr, ptr %402, i64 %indvars.iv.i.i.i1458.1.epil
  %403 = load ptr, ptr %arrayidx3.i.i.i1460.1.epil, align 8, !tbaa !219
  store ptr %403, ptr %arrayidx.i.i.i1459.1.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.1.epil = add nuw nsw i64 %indvars.iv.i.i.i1458.1.epil, 1
  %epil.iter2012.next = add i64 %epil.iter2012, 1
  %epil.iter2012.cmp.not = icmp eq i64 %epil.iter2012.next, %xtraiter2011
  br i1 %epil.iter2012.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.1, label %for.body.i.i.i1463.1.epil, !llvm.loop !359

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.1: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.1.loopexit.unr-lcssa, %for.body.i.i.i1463.1.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454.1
  %m_data.i9.i.i1464.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %388, i64 0, i32 5
  %404 = load ptr, ptr %m_data.i9.i.i1464.1, align 8, !tbaa !320
  %tobool.not.i10.i.i1465.1 = icmp eq ptr %404, null
  %m_ownsMemory.i.i.i1466.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %388, i64 0, i32 6
  %405 = load i8, ptr %m_ownsMemory.i.i.i1466.1, align 8, !range !159
  %tobool2.not.i.i.i1467.1 = icmp eq i8 %405, 0
  %or.cond.i.i1468.1 = select i1 %tobool.not.i10.i.i1465.1, i1 true, i1 %tobool2.not.i.i.i1467.1
  br i1 %or.cond.i.i1468.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473.1, label %if.then3.i.i.i1471.1

if.then3.i.i.i1471.1:                             ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.1
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %404)
  %.pre7.pre.i1470.1 = load i32, ptr %m_size.i.i1437.1, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473.1

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473.1: ; preds = %if.then3.i.i.i1471.1, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.1
  %.pre7.i1472.1 = phi i32 [ %.pre7.pre.i1470.1, %if.then3.i.i.i1471.1 ], [ %392, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.1 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1466.1, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1452.1, ptr %m_data.i9.i.i1464.1, align 8, !tbaa !320
  store i32 %cond.i.i1442.1, ptr %m_capacity.i.i1438.1, align 8, !tbaa !342
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.1

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.1: ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473.1, %if.then.i1444.1, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479
  %406 = phi i32 [ %.pre7.i1472.1, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473.1 ], [ %390, %if.then.i1444.1 ], [ %390, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479 ]
  %m_data.i1474.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %388, i64 0, i32 5
  %407 = load ptr, ptr %m_data.i1474.1, align 8, !tbaa !320
  %idxprom.i1475.1 = sext i32 %406 to i64
  %arrayidx.i1476.1 = getelementptr inbounds ptr, ptr %407, i64 %idxprom.i1475.1
  %408 = load ptr, ptr %arrayidx492.1, align 8, !tbaa !219
  store ptr %408, ptr %arrayidx.i1476.1, align 8, !tbaa !219
  %inc.i1477.1 = add nsw i32 %406, 1
  store i32 %inc.i1477.1, ptr %m_size.i.i1437.1, align 4, !tbaa !319
  %409 = load ptr, ptr %m_data.i1431, align 8, !tbaa !123
  %arrayidx.i1433.2 = getelementptr inbounds ptr, ptr %409, i64 %indvars.iv1849
  %410 = load ptr, ptr %arrayidx.i1433.2, align 8, !tbaa !219
  %411 = load ptr, ptr %m_data.i1434, align 8, !tbaa !99
  %arrayidx492.2 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %411, i64 %indvars.iv1849, i32 1, i64 2
  %m_size.i.i1437.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %410, i64 0, i32 2
  %412 = load i32, ptr %m_size.i.i1437.2, align 4, !tbaa !319
  %m_capacity.i.i1438.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %410, i64 0, i32 3
  %413 = load i32, ptr %m_capacity.i.i1438.2, align 8, !tbaa !342
  %cmp.i1439.2 = icmp eq i32 %412, %413
  br i1 %cmp.i1439.2, label %if.then.i1444.2, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.2

if.then.i1444.2:                                  ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.1
  %tobool.not.i.i1440.2 = icmp eq i32 %412, 0
  %mul.i.i1441.2 = shl nsw i32 %412, 1
  %cond.i.i1442.2 = select i1 %tobool.not.i.i1440.2, i32 1, i32 %mul.i.i1441.2
  %cmp.i.i1443.2 = icmp slt i32 %412, %cond.i.i1442.2
  br i1 %cmp.i.i1443.2, label %if.then.i.i1446.2, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.2

if.then.i.i1446.2:                                ; preds = %if.then.i1444.2
  %tobool.not.i.i.i1445.2 = icmp eq i32 %cond.i.i1442.2, 0
  br i1 %tobool.not.i.i.i1445.2, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454.2, label %if.then.i.i.i1451.2

if.then.i.i.i1451.2:                              ; preds = %if.then.i.i1446.2
  %conv.i.i.i.i1447.2 = sext i32 %cond.i.i1442.2 to i64
  %mul.i.i.i.i1448.2 = shl nsw i64 %conv.i.i.i.i1447.2, 3
  %call.i.i.i.i1449.2 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1448.2, i32 noundef 16)
  %.pre.i1450.2 = load i32, ptr %m_size.i.i1437.2, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454.2

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454.2: ; preds = %if.then.i.i.i1451.2, %if.then.i.i1446.2
  %414 = phi i32 [ %.pre.i1450.2, %if.then.i.i.i1451.2 ], [ %412, %if.then.i.i1446.2 ]
  %retval.0.i.i.i1452.2 = phi ptr [ %call.i.i.i.i1449.2, %if.then.i.i.i1451.2 ], [ null, %if.then.i.i1446.2 ]
  %cmp7.i.i.i1453.2 = icmp sgt i32 %414, 0
  br i1 %cmp7.i.i.i1453.2, label %for.body.lr.ph.i.i.i1457.2, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.2

for.body.lr.ph.i.i.i1457.2:                       ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454.2
  %m_data.i.i.i1455.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %410, i64 0, i32 5
  %wide.trip.count.i.i.i1456.2 = zext i32 %414 to i64
  %xtraiter2016 = and i64 %wide.trip.count.i.i.i1456.2, 3
  %415 = icmp ult i32 %414, 4
  br i1 %415, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.2.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1457.2.new

for.body.lr.ph.i.i.i1457.2.new:                   ; preds = %for.body.lr.ph.i.i.i1457.2
  %unroll_iter2019 = and i64 %wide.trip.count.i.i.i1456.2, 4294967292
  br label %for.body.i.i.i1463.2

for.body.i.i.i1463.2:                             ; preds = %for.body.i.i.i1463.2, %for.body.lr.ph.i.i.i1457.2.new
  %indvars.iv.i.i.i1458.2 = phi i64 [ 0, %for.body.lr.ph.i.i.i1457.2.new ], [ %indvars.iv.next.i.i.i1461.2.3, %for.body.i.i.i1463.2 ]
  %niter2020 = phi i64 [ 0, %for.body.lr.ph.i.i.i1457.2.new ], [ %niter2020.next.3, %for.body.i.i.i1463.2 ]
  %arrayidx.i.i.i1459.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452.2, i64 %indvars.iv.i.i.i1458.2
  %416 = load ptr, ptr %m_data.i.i.i1455.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.2 = getelementptr inbounds ptr, ptr %416, i64 %indvars.iv.i.i.i1458.2
  %417 = load ptr, ptr %arrayidx3.i.i.i1460.2, align 8, !tbaa !219
  store ptr %417, ptr %arrayidx.i.i.i1459.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.2 = or i64 %indvars.iv.i.i.i1458.2, 1
  %arrayidx.i.i.i1459.2.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452.2, i64 %indvars.iv.next.i.i.i1461.2
  %418 = load ptr, ptr %m_data.i.i.i1455.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.2.1 = getelementptr inbounds ptr, ptr %418, i64 %indvars.iv.next.i.i.i1461.2
  %419 = load ptr, ptr %arrayidx3.i.i.i1460.2.1, align 8, !tbaa !219
  store ptr %419, ptr %arrayidx.i.i.i1459.2.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.2.1 = or i64 %indvars.iv.i.i.i1458.2, 2
  %arrayidx.i.i.i1459.2.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452.2, i64 %indvars.iv.next.i.i.i1461.2.1
  %420 = load ptr, ptr %m_data.i.i.i1455.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.2.2 = getelementptr inbounds ptr, ptr %420, i64 %indvars.iv.next.i.i.i1461.2.1
  %421 = load ptr, ptr %arrayidx3.i.i.i1460.2.2, align 8, !tbaa !219
  store ptr %421, ptr %arrayidx.i.i.i1459.2.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.2.2 = or i64 %indvars.iv.i.i.i1458.2, 3
  %arrayidx.i.i.i1459.2.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452.2, i64 %indvars.iv.next.i.i.i1461.2.2
  %422 = load ptr, ptr %m_data.i.i.i1455.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.2.3 = getelementptr inbounds ptr, ptr %422, i64 %indvars.iv.next.i.i.i1461.2.2
  %423 = load ptr, ptr %arrayidx3.i.i.i1460.2.3, align 8, !tbaa !219
  store ptr %423, ptr %arrayidx.i.i.i1459.2.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.2.3 = add nuw nsw i64 %indvars.iv.i.i.i1458.2, 4
  %niter2020.next.3 = add i64 %niter2020, 4
  %niter2020.ncmp.3 = icmp eq i64 %niter2020.next.3, %unroll_iter2019
  br i1 %niter2020.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.2.loopexit.unr-lcssa, label %for.body.i.i.i1463.2

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.2.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1463.2, %for.body.lr.ph.i.i.i1457.2
  %indvars.iv.i.i.i1458.2.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1457.2 ], [ %indvars.iv.next.i.i.i1461.2.3, %for.body.i.i.i1463.2 ]
  %lcmp.mod2018.not = icmp eq i64 %xtraiter2016, 0
  br i1 %lcmp.mod2018.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.2, label %for.body.i.i.i1463.2.epil

for.body.i.i.i1463.2.epil:                        ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.2.loopexit.unr-lcssa, %for.body.i.i.i1463.2.epil
  %indvars.iv.i.i.i1458.2.epil = phi i64 [ %indvars.iv.next.i.i.i1461.2.epil, %for.body.i.i.i1463.2.epil ], [ %indvars.iv.i.i.i1458.2.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.2.loopexit.unr-lcssa ]
  %epil.iter2017 = phi i64 [ %epil.iter2017.next, %for.body.i.i.i1463.2.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.2.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1459.2.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452.2, i64 %indvars.iv.i.i.i1458.2.epil
  %424 = load ptr, ptr %m_data.i.i.i1455.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.2.epil = getelementptr inbounds ptr, ptr %424, i64 %indvars.iv.i.i.i1458.2.epil
  %425 = load ptr, ptr %arrayidx3.i.i.i1460.2.epil, align 8, !tbaa !219
  store ptr %425, ptr %arrayidx.i.i.i1459.2.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.2.epil = add nuw nsw i64 %indvars.iv.i.i.i1458.2.epil, 1
  %epil.iter2017.next = add i64 %epil.iter2017, 1
  %epil.iter2017.cmp.not = icmp eq i64 %epil.iter2017.next, %xtraiter2016
  br i1 %epil.iter2017.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.2, label %for.body.i.i.i1463.2.epil, !llvm.loop !360

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.2: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.2.loopexit.unr-lcssa, %for.body.i.i.i1463.2.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454.2
  %m_data.i9.i.i1464.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %410, i64 0, i32 5
  %426 = load ptr, ptr %m_data.i9.i.i1464.2, align 8, !tbaa !320
  %tobool.not.i10.i.i1465.2 = icmp eq ptr %426, null
  %m_ownsMemory.i.i.i1466.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %410, i64 0, i32 6
  %427 = load i8, ptr %m_ownsMemory.i.i.i1466.2, align 8, !range !159
  %tobool2.not.i.i.i1467.2 = icmp eq i8 %427, 0
  %or.cond.i.i1468.2 = select i1 %tobool.not.i10.i.i1465.2, i1 true, i1 %tobool2.not.i.i.i1467.2
  br i1 %or.cond.i.i1468.2, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473.2, label %if.then3.i.i.i1471.2

if.then3.i.i.i1471.2:                             ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.2
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %426)
  %.pre7.pre.i1470.2 = load i32, ptr %m_size.i.i1437.2, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473.2

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473.2: ; preds = %if.then3.i.i.i1471.2, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.2
  %.pre7.i1472.2 = phi i32 [ %.pre7.pre.i1470.2, %if.then3.i.i.i1471.2 ], [ %414, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.2 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1466.2, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1452.2, ptr %m_data.i9.i.i1464.2, align 8, !tbaa !320
  store i32 %cond.i.i1442.2, ptr %m_capacity.i.i1438.2, align 8, !tbaa !342
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.2

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.2: ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473.2, %if.then.i1444.2, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.1
  %428 = phi i32 [ %.pre7.i1472.2, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473.2 ], [ %412, %if.then.i1444.2 ], [ %412, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.1 ]
  %m_data.i1474.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %410, i64 0, i32 5
  %429 = load ptr, ptr %m_data.i1474.2, align 8, !tbaa !320
  %idxprom.i1475.2 = sext i32 %428 to i64
  %arrayidx.i1476.2 = getelementptr inbounds ptr, ptr %429, i64 %idxprom.i1475.2
  %430 = load ptr, ptr %arrayidx492.2, align 8, !tbaa !219
  store ptr %430, ptr %arrayidx.i1476.2, align 8, !tbaa !219
  %inc.i1477.2 = add nsw i32 %428, 1
  store i32 %inc.i1477.2, ptr %m_size.i.i1437.2, align 4, !tbaa !319
  %431 = load ptr, ptr %m_data.i1431, align 8, !tbaa !123
  %arrayidx.i1433.3 = getelementptr inbounds ptr, ptr %431, i64 %indvars.iv1849
  %432 = load ptr, ptr %arrayidx.i1433.3, align 8, !tbaa !219
  %433 = load ptr, ptr %m_data.i1434, align 8, !tbaa !99
  %arrayidx492.3 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %433, i64 %indvars.iv1849, i32 1, i64 3
  %m_size.i.i1437.3 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %432, i64 0, i32 2
  %434 = load i32, ptr %m_size.i.i1437.3, align 4, !tbaa !319
  %m_capacity.i.i1438.3 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %432, i64 0, i32 3
  %435 = load i32, ptr %m_capacity.i.i1438.3, align 8, !tbaa !342
  %cmp.i1439.3 = icmp eq i32 %434, %435
  br i1 %cmp.i1439.3, label %if.then.i1444.3, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.3

if.then.i1444.3:                                  ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.2
  %tobool.not.i.i1440.3 = icmp eq i32 %434, 0
  %mul.i.i1441.3 = shl nsw i32 %434, 1
  %cond.i.i1442.3 = select i1 %tobool.not.i.i1440.3, i32 1, i32 %mul.i.i1441.3
  %cmp.i.i1443.3 = icmp slt i32 %434, %cond.i.i1442.3
  br i1 %cmp.i.i1443.3, label %if.then.i.i1446.3, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.3

if.then.i.i1446.3:                                ; preds = %if.then.i1444.3
  %tobool.not.i.i.i1445.3 = icmp eq i32 %cond.i.i1442.3, 0
  br i1 %tobool.not.i.i.i1445.3, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454.3, label %if.then.i.i.i1451.3

if.then.i.i.i1451.3:                              ; preds = %if.then.i.i1446.3
  %conv.i.i.i.i1447.3 = sext i32 %cond.i.i1442.3 to i64
  %mul.i.i.i.i1448.3 = shl nsw i64 %conv.i.i.i.i1447.3, 3
  %call.i.i.i.i1449.3 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1448.3, i32 noundef 16)
  %.pre.i1450.3 = load i32, ptr %m_size.i.i1437.3, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454.3

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454.3: ; preds = %if.then.i.i.i1451.3, %if.then.i.i1446.3
  %436 = phi i32 [ %.pre.i1450.3, %if.then.i.i.i1451.3 ], [ %434, %if.then.i.i1446.3 ]
  %retval.0.i.i.i1452.3 = phi ptr [ %call.i.i.i.i1449.3, %if.then.i.i.i1451.3 ], [ null, %if.then.i.i1446.3 ]
  %cmp7.i.i.i1453.3 = icmp sgt i32 %436, 0
  br i1 %cmp7.i.i.i1453.3, label %for.body.lr.ph.i.i.i1457.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.3

for.body.lr.ph.i.i.i1457.3:                       ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454.3
  %m_data.i.i.i1455.3 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %432, i64 0, i32 5
  %wide.trip.count.i.i.i1456.3 = zext i32 %436 to i64
  %xtraiter2021 = and i64 %wide.trip.count.i.i.i1456.3, 3
  %437 = icmp ult i32 %436, 4
  br i1 %437, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.3.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1457.3.new

for.body.lr.ph.i.i.i1457.3.new:                   ; preds = %for.body.lr.ph.i.i.i1457.3
  %unroll_iter2024 = and i64 %wide.trip.count.i.i.i1456.3, 4294967292
  br label %for.body.i.i.i1463.3

for.body.i.i.i1463.3:                             ; preds = %for.body.i.i.i1463.3, %for.body.lr.ph.i.i.i1457.3.new
  %indvars.iv.i.i.i1458.3 = phi i64 [ 0, %for.body.lr.ph.i.i.i1457.3.new ], [ %indvars.iv.next.i.i.i1461.3.3, %for.body.i.i.i1463.3 ]
  %niter2025 = phi i64 [ 0, %for.body.lr.ph.i.i.i1457.3.new ], [ %niter2025.next.3, %for.body.i.i.i1463.3 ]
  %arrayidx.i.i.i1459.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452.3, i64 %indvars.iv.i.i.i1458.3
  %438 = load ptr, ptr %m_data.i.i.i1455.3, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.3 = getelementptr inbounds ptr, ptr %438, i64 %indvars.iv.i.i.i1458.3
  %439 = load ptr, ptr %arrayidx3.i.i.i1460.3, align 8, !tbaa !219
  store ptr %439, ptr %arrayidx.i.i.i1459.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.3 = or i64 %indvars.iv.i.i.i1458.3, 1
  %arrayidx.i.i.i1459.3.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452.3, i64 %indvars.iv.next.i.i.i1461.3
  %440 = load ptr, ptr %m_data.i.i.i1455.3, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.3.1 = getelementptr inbounds ptr, ptr %440, i64 %indvars.iv.next.i.i.i1461.3
  %441 = load ptr, ptr %arrayidx3.i.i.i1460.3.1, align 8, !tbaa !219
  store ptr %441, ptr %arrayidx.i.i.i1459.3.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.3.1 = or i64 %indvars.iv.i.i.i1458.3, 2
  %arrayidx.i.i.i1459.3.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452.3, i64 %indvars.iv.next.i.i.i1461.3.1
  %442 = load ptr, ptr %m_data.i.i.i1455.3, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.3.2 = getelementptr inbounds ptr, ptr %442, i64 %indvars.iv.next.i.i.i1461.3.1
  %443 = load ptr, ptr %arrayidx3.i.i.i1460.3.2, align 8, !tbaa !219
  store ptr %443, ptr %arrayidx.i.i.i1459.3.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.3.2 = or i64 %indvars.iv.i.i.i1458.3, 3
  %arrayidx.i.i.i1459.3.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452.3, i64 %indvars.iv.next.i.i.i1461.3.2
  %444 = load ptr, ptr %m_data.i.i.i1455.3, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.3.3 = getelementptr inbounds ptr, ptr %444, i64 %indvars.iv.next.i.i.i1461.3.2
  %445 = load ptr, ptr %arrayidx3.i.i.i1460.3.3, align 8, !tbaa !219
  store ptr %445, ptr %arrayidx.i.i.i1459.3.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.3.3 = add nuw nsw i64 %indvars.iv.i.i.i1458.3, 4
  %niter2025.next.3 = add i64 %niter2025, 4
  %niter2025.ncmp.3 = icmp eq i64 %niter2025.next.3, %unroll_iter2024
  br i1 %niter2025.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.3.loopexit.unr-lcssa, label %for.body.i.i.i1463.3

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.3.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1463.3, %for.body.lr.ph.i.i.i1457.3
  %indvars.iv.i.i.i1458.3.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1457.3 ], [ %indvars.iv.next.i.i.i1461.3.3, %for.body.i.i.i1463.3 ]
  %lcmp.mod2023.not = icmp eq i64 %xtraiter2021, 0
  br i1 %lcmp.mod2023.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.3, label %for.body.i.i.i1463.3.epil

for.body.i.i.i1463.3.epil:                        ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.3.loopexit.unr-lcssa, %for.body.i.i.i1463.3.epil
  %indvars.iv.i.i.i1458.3.epil = phi i64 [ %indvars.iv.next.i.i.i1461.3.epil, %for.body.i.i.i1463.3.epil ], [ %indvars.iv.i.i.i1458.3.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.3.loopexit.unr-lcssa ]
  %epil.iter2022 = phi i64 [ %epil.iter2022.next, %for.body.i.i.i1463.3.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.3.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1459.3.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1452.3, i64 %indvars.iv.i.i.i1458.3.epil
  %446 = load ptr, ptr %m_data.i.i.i1455.3, align 8, !tbaa !320
  %arrayidx3.i.i.i1460.3.epil = getelementptr inbounds ptr, ptr %446, i64 %indvars.iv.i.i.i1458.3.epil
  %447 = load ptr, ptr %arrayidx3.i.i.i1460.3.epil, align 8, !tbaa !219
  store ptr %447, ptr %arrayidx.i.i.i1459.3.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1461.3.epil = add nuw nsw i64 %indvars.iv.i.i.i1458.3.epil, 1
  %epil.iter2022.next = add i64 %epil.iter2022, 1
  %epil.iter2022.cmp.not = icmp eq i64 %epil.iter2022.next, %xtraiter2021
  br i1 %epil.iter2022.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.3, label %for.body.i.i.i1463.3.epil, !llvm.loop !361

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.3: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.3.loopexit.unr-lcssa, %for.body.i.i.i1463.3.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1454.3
  %m_data.i9.i.i1464.3 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %432, i64 0, i32 5
  %448 = load ptr, ptr %m_data.i9.i.i1464.3, align 8, !tbaa !320
  %tobool.not.i10.i.i1465.3 = icmp eq ptr %448, null
  %m_ownsMemory.i.i.i1466.3 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %432, i64 0, i32 6
  %449 = load i8, ptr %m_ownsMemory.i.i.i1466.3, align 8, !range !159
  %tobool2.not.i.i.i1467.3 = icmp eq i8 %449, 0
  %or.cond.i.i1468.3 = select i1 %tobool.not.i10.i.i1465.3, i1 true, i1 %tobool2.not.i.i.i1467.3
  br i1 %or.cond.i.i1468.3, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473.3, label %if.then3.i.i.i1471.3

if.then3.i.i.i1471.3:                             ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.3
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %448)
  %.pre7.pre.i1470.3 = load i32, ptr %m_size.i.i1437.3, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473.3

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473.3: ; preds = %if.then3.i.i.i1471.3, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.3
  %.pre7.i1472.3 = phi i32 [ %.pre7.pre.i1470.3, %if.then3.i.i.i1471.3 ], [ %436, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1469.3 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1466.3, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1452.3, ptr %m_data.i9.i.i1464.3, align 8, !tbaa !320
  store i32 %cond.i.i1442.3, ptr %m_capacity.i.i1438.3, align 8, !tbaa !342
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.3

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.3: ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473.3, %if.then.i1444.3, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.2
  %450 = phi i32 [ %.pre7.i1472.3, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1473.3 ], [ %434, %if.then.i1444.3 ], [ %434, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.2 ]
  %m_data.i1474.3 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %432, i64 0, i32 5
  %451 = load ptr, ptr %m_data.i1474.3, align 8, !tbaa !320
  %idxprom.i1475.3 = sext i32 %450 to i64
  %arrayidx.i1476.3 = getelementptr inbounds ptr, ptr %451, i64 %idxprom.i1475.3
  %452 = load ptr, ptr %arrayidx492.3, align 8, !tbaa !219
  store ptr %452, ptr %arrayidx.i1476.3, align 8, !tbaa !219
  %inc.i1477.3 = add nsw i32 %450, 1
  store i32 %inc.i1477.3, ptr %m_size.i.i1437.3, align 4, !tbaa !319
  %indvars.iv.next1850 = add nuw nsw i64 %indvars.iv1849, 1
  %453 = load i32, ptr %m_size.i1362, align 4, !tbaa !100
  %454 = sext i32 %453 to i64
  %cmp478 = icmp slt i64 %indvars.iv.next1850, %454
  br i1 %cmp478, label %for.cond481.preheader, label %if.end543

if.else499:                                       ; preds = %if.else
  %m_size.i1480 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %455 = load i32, ptr %m_size.i1480, align 4, !tbaa !96
  %cmp4.i1483 = icmp slt i32 %.lcssa17711933, %455
  br i1 %cmp4.i1483, label %if.then5.i1487, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1523

if.then5.i1487:                                   ; preds = %if.else499
  %m_capacity.i.i.i1485 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 3
  %456 = load i32, ptr %m_capacity.i.i.i1485, align 8, !tbaa !125
  %cmp.i.i1486 = icmp slt i32 %456, %455
  br i1 %cmp.i.i1486, label %if.then.i.i1489, label %for.body10.lr.ph.i1517

if.then.i.i1489:                                  ; preds = %if.then5.i1487
  %tobool.not.i.i.i1488 = icmp eq i32 %455, 0
  br i1 %tobool.not.i.i.i1488, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1512, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1497

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1497: ; preds = %if.then.i.i1489
  %conv.i.i.i.i1490 = sext i32 %455 to i64
  %mul.i.i.i.i1491 = shl nsw i64 %conv.i.i.i.i1490, 3
  %call.i.i.i.i1492 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1491, i32 noundef 16)
  %.pre.i1493 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp7.i.i.i1496 = icmp sgt i32 %.pre.i1493, 0
  br i1 %cmp7.i.i.i1496, label %for.body.lr.ph.i.i.i1500, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1512

for.body.lr.ph.i.i.i1500:                         ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1497
  %m_data.i.i.i1498 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %wide.trip.count.i.i.i1499 = zext i32 %.pre.i1493 to i64
  %xtraiter2026 = and i64 %wide.trip.count.i.i.i1499, 3
  %457 = icmp ult i32 %.pre.i1493, 4
  br i1 %457, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1512.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1500.new

for.body.lr.ph.i.i.i1500.new:                     ; preds = %for.body.lr.ph.i.i.i1500
  %unroll_iter2029 = and i64 %wide.trip.count.i.i.i1499, 4294967292
  br label %for.body.i.i.i1506

for.body.i.i.i1506:                               ; preds = %for.body.i.i.i1506, %for.body.lr.ph.i.i.i1500.new
  %indvars.iv.i.i.i1501 = phi i64 [ 0, %for.body.lr.ph.i.i.i1500.new ], [ %indvars.iv.next.i.i.i1504.3, %for.body.i.i.i1506 ]
  %niter2030 = phi i64 [ 0, %for.body.lr.ph.i.i.i1500.new ], [ %niter2030.next.3, %for.body.i.i.i1506 ]
  %arrayidx.i.i.i1502 = getelementptr inbounds ptr, ptr %call.i.i.i.i1492, i64 %indvars.iv.i.i.i1501
  %458 = load ptr, ptr %m_data.i.i.i1498, align 8, !tbaa !123
  %arrayidx3.i.i.i1503 = getelementptr inbounds ptr, ptr %458, i64 %indvars.iv.i.i.i1501
  %459 = load ptr, ptr %arrayidx3.i.i.i1503, align 8, !tbaa !219
  store ptr %459, ptr %arrayidx.i.i.i1502, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1504 = or i64 %indvars.iv.i.i.i1501, 1
  %arrayidx.i.i.i1502.1 = getelementptr inbounds ptr, ptr %call.i.i.i.i1492, i64 %indvars.iv.next.i.i.i1504
  %460 = load ptr, ptr %m_data.i.i.i1498, align 8, !tbaa !123
  %arrayidx3.i.i.i1503.1 = getelementptr inbounds ptr, ptr %460, i64 %indvars.iv.next.i.i.i1504
  %461 = load ptr, ptr %arrayidx3.i.i.i1503.1, align 8, !tbaa !219
  store ptr %461, ptr %arrayidx.i.i.i1502.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1504.1 = or i64 %indvars.iv.i.i.i1501, 2
  %arrayidx.i.i.i1502.2 = getelementptr inbounds ptr, ptr %call.i.i.i.i1492, i64 %indvars.iv.next.i.i.i1504.1
  %462 = load ptr, ptr %m_data.i.i.i1498, align 8, !tbaa !123
  %arrayidx3.i.i.i1503.2 = getelementptr inbounds ptr, ptr %462, i64 %indvars.iv.next.i.i.i1504.1
  %463 = load ptr, ptr %arrayidx3.i.i.i1503.2, align 8, !tbaa !219
  store ptr %463, ptr %arrayidx.i.i.i1502.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1504.2 = or i64 %indvars.iv.i.i.i1501, 3
  %arrayidx.i.i.i1502.3 = getelementptr inbounds ptr, ptr %call.i.i.i.i1492, i64 %indvars.iv.next.i.i.i1504.2
  %464 = load ptr, ptr %m_data.i.i.i1498, align 8, !tbaa !123
  %arrayidx3.i.i.i1503.3 = getelementptr inbounds ptr, ptr %464, i64 %indvars.iv.next.i.i.i1504.2
  %465 = load ptr, ptr %arrayidx3.i.i.i1503.3, align 8, !tbaa !219
  store ptr %465, ptr %arrayidx.i.i.i1502.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1504.3 = add nuw nsw i64 %indvars.iv.i.i.i1501, 4
  %niter2030.next.3 = add i64 %niter2030, 4
  %niter2030.ncmp.3 = icmp eq i64 %niter2030.next.3, %unroll_iter2029
  br i1 %niter2030.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1512.loopexit.unr-lcssa, label %for.body.i.i.i1506

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1512.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1506, %for.body.lr.ph.i.i.i1500
  %indvars.iv.i.i.i1501.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1500 ], [ %indvars.iv.next.i.i.i1504.3, %for.body.i.i.i1506 ]
  %lcmp.mod2028.not = icmp eq i64 %xtraiter2026, 0
  br i1 %lcmp.mod2028.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1512, label %for.body.i.i.i1506.epil

for.body.i.i.i1506.epil:                          ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1512.loopexit.unr-lcssa, %for.body.i.i.i1506.epil
  %indvars.iv.i.i.i1501.epil = phi i64 [ %indvars.iv.next.i.i.i1504.epil, %for.body.i.i.i1506.epil ], [ %indvars.iv.i.i.i1501.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1512.loopexit.unr-lcssa ]
  %epil.iter2027 = phi i64 [ %epil.iter2027.next, %for.body.i.i.i1506.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1512.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1502.epil = getelementptr inbounds ptr, ptr %call.i.i.i.i1492, i64 %indvars.iv.i.i.i1501.epil
  %466 = load ptr, ptr %m_data.i.i.i1498, align 8, !tbaa !123
  %arrayidx3.i.i.i1503.epil = getelementptr inbounds ptr, ptr %466, i64 %indvars.iv.i.i.i1501.epil
  %467 = load ptr, ptr %arrayidx3.i.i.i1503.epil, align 8, !tbaa !219
  store ptr %467, ptr %arrayidx.i.i.i1502.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1504.epil = add nuw nsw i64 %indvars.iv.i.i.i1501.epil, 1
  %epil.iter2027.next = add i64 %epil.iter2027, 1
  %epil.iter2027.cmp.not = icmp eq i64 %epil.iter2027.next, %xtraiter2026
  br i1 %epil.iter2027.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1512, label %for.body.i.i.i1506.epil, !llvm.loop !362

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1512: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1512.loopexit.unr-lcssa, %for.body.i.i.i1506.epil, %if.then.i.i1489, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1497
  %retval.0.i.i.i14951757 = phi ptr [ %call.i.i.i.i1492, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1497 ], [ null, %if.then.i.i1489 ], [ %call.i.i.i.i1492, %for.body.i.i.i1506.epil ], [ %call.i.i.i.i1492, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1512.loopexit.unr-lcssa ]
  %m_data.i9.i.i1507 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %468 = load ptr, ptr %m_data.i9.i.i1507, align 8, !tbaa !123
  %tobool.not.i10.i.i1508 = icmp eq ptr %468, null
  %m_ownsMemory.i.i.i1509 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 6
  %469 = load i8, ptr %m_ownsMemory.i.i.i1509, align 8, !range !159
  %tobool2.not.i.i.i1510 = icmp eq i8 %469, 0
  %or.cond.i.i1511 = select i1 %tobool.not.i10.i.i1508, i1 true, i1 %tobool2.not.i.i.i1510
  br i1 %or.cond.i.i1511, label %if.end.i1514, label %if.then3.i.i.i1513

if.then3.i.i.i1513:                               ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1512
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %468)
  br label %if.end.i1514

if.end.i1514:                                     ; preds = %if.then3.i.i.i1513, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1512
  store i8 1, ptr %m_ownsMemory.i.i.i1509, align 8, !tbaa !122
  store ptr %retval.0.i.i.i14951757, ptr %m_data.i9.i.i1507, align 8, !tbaa !123
  store i32 %455, ptr %m_capacity.i.i.i1485, align 8, !tbaa !125
  br label %for.body10.lr.ph.i1517

for.body10.lr.ph.i1517:                           ; preds = %if.end.i1514, %if.then5.i1487
  %m_data11.i1515 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %470 = sext i32 %.lcssa17711933 to i64
  %wide.trip.count.i1516 = sext i32 %455 to i64
  %471 = sub nsw i64 %wide.trip.count.i1516, %470
  %472 = xor i64 %470, -1
  %473 = add nsw i64 %472, %wide.trip.count.i1516
  %xtraiter2031 = and i64 %471, 3
  %lcmp.mod2032.not = icmp eq i64 %xtraiter2031, 0
  br i1 %lcmp.mod2032.not, label %for.body10.i1522.prol.loopexit, label %for.body10.i1522.prol

for.body10.i1522.prol:                            ; preds = %for.body10.lr.ph.i1517, %for.body10.i1522.prol
  %indvars.iv.i1518.prol = phi i64 [ %indvars.iv.next.i1520.prol, %for.body10.i1522.prol ], [ %470, %for.body10.lr.ph.i1517 ]
  %prol.iter2033 = phi i64 [ %prol.iter2033.next, %for.body10.i1522.prol ], [ 0, %for.body10.lr.ph.i1517 ]
  %474 = load ptr, ptr %m_data11.i1515, align 8, !tbaa !123
  %arrayidx13.i1519.prol = getelementptr inbounds ptr, ptr %474, i64 %indvars.iv.i1518.prol
  store ptr null, ptr %arrayidx13.i1519.prol, align 8, !tbaa !219
  %indvars.iv.next.i1520.prol = add nsw i64 %indvars.iv.i1518.prol, 1
  %prol.iter2033.next = add i64 %prol.iter2033, 1
  %prol.iter2033.cmp.not = icmp eq i64 %prol.iter2033.next, %xtraiter2031
  br i1 %prol.iter2033.cmp.not, label %for.body10.i1522.prol.loopexit, label %for.body10.i1522.prol, !llvm.loop !363

for.body10.i1522.prol.loopexit:                   ; preds = %for.body10.i1522.prol, %for.body10.lr.ph.i1517
  %indvars.iv.i1518.unr = phi i64 [ %470, %for.body10.lr.ph.i1517 ], [ %indvars.iv.next.i1520.prol, %for.body10.i1522.prol ]
  %475 = icmp ult i64 %473, 3
  br i1 %475, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1523, label %for.body10.i1522

for.body10.i1522:                                 ; preds = %for.body10.i1522.prol.loopexit, %for.body10.i1522
  %indvars.iv.i1518 = phi i64 [ %indvars.iv.next.i1520.3, %for.body10.i1522 ], [ %indvars.iv.i1518.unr, %for.body10.i1522.prol.loopexit ]
  %476 = load ptr, ptr %m_data11.i1515, align 8, !tbaa !123
  %arrayidx13.i1519 = getelementptr inbounds ptr, ptr %476, i64 %indvars.iv.i1518
  store ptr null, ptr %arrayidx13.i1519, align 8, !tbaa !219
  %indvars.iv.next.i1520 = add nsw i64 %indvars.iv.i1518, 1
  %477 = load ptr, ptr %m_data11.i1515, align 8, !tbaa !123
  %arrayidx13.i1519.1 = getelementptr inbounds ptr, ptr %477, i64 %indvars.iv.next.i1520
  store ptr null, ptr %arrayidx13.i1519.1, align 8, !tbaa !219
  %indvars.iv.next.i1520.1 = add nsw i64 %indvars.iv.i1518, 2
  %478 = load ptr, ptr %m_data11.i1515, align 8, !tbaa !123
  %arrayidx13.i1519.2 = getelementptr inbounds ptr, ptr %478, i64 %indvars.iv.next.i1520.1
  store ptr null, ptr %arrayidx13.i1519.2, align 8, !tbaa !219
  %indvars.iv.next.i1520.2 = add nsw i64 %indvars.iv.i1518, 3
  %479 = load ptr, ptr %m_data11.i1515, align 8, !tbaa !123
  %arrayidx13.i1519.3 = getelementptr inbounds ptr, ptr %479, i64 %indvars.iv.next.i1520.2
  store ptr null, ptr %arrayidx13.i1519.3, align 8, !tbaa !219
  %indvars.iv.next.i1520.3 = add nsw i64 %indvars.iv.i1518, 4
  %exitcond.not.i1521.3 = icmp eq i64 %indvars.iv.next.i1520.3, %wide.trip.count.i1516
  br i1 %exitcond.not.i1521.3, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1523, label %for.body10.i1522

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1523: ; preds = %for.body10.i1522.prol.loopexit, %for.body10.i1522, %if.else499
  store i32 %455, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp5071780 = icmp sgt i32 %455, 0
  br i1 %cmp5071780, label %for.body508.lr.ph, label %for.cond518.preheader

for.body508.lr.ph:                                ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1523
  %m_data.i1541 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  br label %for.body508

for.cond518.preheader:                            ; preds = %for.body508, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1523
  %480 = load i32, ptr %m_size.i1480, align 4, !tbaa !96
  %cmp5211783 = icmp sgt i32 %480, 0
  br i1 %cmp5211783, label %for.cond524.preheader.lr.ph, label %if.end543

for.cond524.preheader.lr.ph:                      ; preds = %for.cond518.preheader
  %m_data.i1548 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %m_data.i1551 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  br label %for.cond524.preheader

for.body508:                                      ; preds = %for.body508.lr.ph, %for.body508
  %indvars.iv1852 = phi i64 [ 0, %for.body508.lr.ph ], [ %indvars.iv.next1853, %for.body508 ]
  %call509 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 424, i32 noundef 16)
  %m_ownsMemory.i.i.i1525 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call509, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i.i1525, align 8, !tbaa !341
  %m_data.i.i.i1526 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call509, i64 0, i32 5
  store ptr null, ptr %m_data.i.i.i1526, align 8, !tbaa !320
  %m_size.i.i.i1527 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call509, i64 0, i32 2
  store i32 0, ptr %m_size.i.i.i1527, align 4, !tbaa !319
  %m_capacity.i.i.i1528 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call509, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i1528, align 8, !tbaa !342
  %m_ownsMemory.i.i27.i1529 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 1, i32 6
  store i8 1, ptr %m_ownsMemory.i.i27.i1529, align 8, !tbaa !36
  %m_data.i.i28.i1530 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 1, i32 5
  store ptr null, ptr %m_data.i.i28.i1530, align 8, !tbaa !39
  %m_size.i.i29.i1531 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 1, i32 2
  store i32 0, ptr %m_size.i.i29.i1531, align 4, !tbaa !40
  %m_capacity.i.i30.i1532 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 1, i32 3
  store i32 0, ptr %m_capacity.i.i30.i1532, align 8, !tbaa !41
  %m_ownsMemory.i.i31.i1533 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 2, i32 6
  store i8 1, ptr %m_ownsMemory.i.i31.i1533, align 8, !tbaa !30
  %m_data.i.i32.i1534 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 2, i32 5
  store ptr null, ptr %m_data.i.i32.i1534, align 8, !tbaa !33
  %m_size.i.i33.i1535 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 2, i32 2
  store i32 0, ptr %m_size.i.i33.i1535, align 4, !tbaa !34
  %m_capacity.i.i34.i1536 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 2, i32 3
  store i32 0, ptr %m_capacity.i.i34.i1536, align 8, !tbaa !35
  %m_leaf.i1537 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 15
  %m_maxSelfCollisionImpulse.i1538 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 20
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %m_leaf.i1537, i8 0, i64 24, i1 false)
  store <2 x float> <float 1.000000e+02, float 0x3F847AE140000000>, ptr %m_maxSelfCollisionImpulse.i1538, align 8, !tbaa !137
  %m_containsAnchor.i1540 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 22
  store i8 0, ptr %m_containsAnchor.i1540, align 8, !tbaa !345
  %481 = load ptr, ptr %m_data.i1541, align 8, !tbaa !123
  %arrayidx.i1543 = getelementptr inbounds ptr, ptr %481, i64 %indvars.iv1852
  store ptr %call509, ptr %arrayidx.i1543, align 8, !tbaa !219
  %482 = load ptr, ptr %m_data.i1541, align 8, !tbaa !123
  %arrayidx.i1546 = getelementptr inbounds ptr, ptr %482, i64 %indvars.iv1852
  %483 = load ptr, ptr %arrayidx.i1546, align 8, !tbaa !219
  %m_collide514 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %483, i64 0, i32 23
  store i8 1, ptr %m_collide514, align 1, !tbaa !346
  %indvars.iv.next1853 = add nuw nsw i64 %indvars.iv1852, 1
  %484 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %485 = sext i32 %484 to i64
  %cmp507 = icmp slt i64 %indvars.iv.next1853, %485
  br i1 %cmp507, label %for.body508, label %for.cond518.preheader

for.cond524.preheader:                            ; preds = %for.cond524.preheader.lr.ph, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596.2
  %indvars.iv1858 = phi i64 [ 0, %for.cond524.preheader.lr.ph ], [ %indvars.iv.next1859, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596.2 ]
  %486 = load ptr, ptr %m_data.i1548, align 8, !tbaa !123
  %arrayidx.i1550 = getelementptr inbounds ptr, ptr %486, i64 %indvars.iv1858
  %487 = load ptr, ptr %arrayidx.i1550, align 8, !tbaa !219
  %488 = load ptr, ptr %m_data.i1551, align 8, !tbaa !95
  %arrayidx535 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %488, i64 %indvars.iv1858, i32 1, i64 0
  %m_size.i.i1554 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %487, i64 0, i32 2
  %489 = load i32, ptr %m_size.i.i1554, align 4, !tbaa !319
  %m_capacity.i.i1555 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %487, i64 0, i32 3
  %490 = load i32, ptr %m_capacity.i.i1555, align 8, !tbaa !342
  %cmp.i1556 = icmp eq i32 %489, %490
  br i1 %cmp.i1556, label %if.then.i1561, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596

if.then.i1561:                                    ; preds = %for.cond524.preheader
  %tobool.not.i.i1557 = icmp eq i32 %489, 0
  %mul.i.i1558 = shl nsw i32 %489, 1
  %cond.i.i1559 = select i1 %tobool.not.i.i1557, i32 1, i32 %mul.i.i1558
  %cmp.i.i1560 = icmp slt i32 %489, %cond.i.i1559
  br i1 %cmp.i.i1560, label %if.then.i.i1563, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596

if.then.i.i1563:                                  ; preds = %if.then.i1561
  %tobool.not.i.i.i1562 = icmp eq i32 %cond.i.i1559, 0
  br i1 %tobool.not.i.i.i1562, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1571, label %if.then.i.i.i1568

if.then.i.i.i1568:                                ; preds = %if.then.i.i1563
  %conv.i.i.i.i1564 = sext i32 %cond.i.i1559 to i64
  %mul.i.i.i.i1565 = shl nsw i64 %conv.i.i.i.i1564, 3
  %call.i.i.i.i1566 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1565, i32 noundef 16)
  %.pre.i1567 = load i32, ptr %m_size.i.i1554, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1571

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1571: ; preds = %if.then.i.i.i1568, %if.then.i.i1563
  %491 = phi i32 [ %.pre.i1567, %if.then.i.i.i1568 ], [ %489, %if.then.i.i1563 ]
  %retval.0.i.i.i1569 = phi ptr [ %call.i.i.i.i1566, %if.then.i.i.i1568 ], [ null, %if.then.i.i1563 ]
  %cmp7.i.i.i1570 = icmp sgt i32 %491, 0
  br i1 %cmp7.i.i.i1570, label %for.body.lr.ph.i.i.i1574, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586

for.body.lr.ph.i.i.i1574:                         ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1571
  %m_data.i.i.i1572 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %487, i64 0, i32 5
  %wide.trip.count.i.i.i1573 = zext i32 %491 to i64
  %xtraiter2034 = and i64 %wide.trip.count.i.i.i1573, 3
  %492 = icmp ult i32 %491, 4
  br i1 %492, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1574.new

for.body.lr.ph.i.i.i1574.new:                     ; preds = %for.body.lr.ph.i.i.i1574
  %unroll_iter2037 = and i64 %wide.trip.count.i.i.i1573, 4294967292
  br label %for.body.i.i.i1580

for.body.i.i.i1580:                               ; preds = %for.body.i.i.i1580, %for.body.lr.ph.i.i.i1574.new
  %indvars.iv.i.i.i1575 = phi i64 [ 0, %for.body.lr.ph.i.i.i1574.new ], [ %indvars.iv.next.i.i.i1578.3, %for.body.i.i.i1580 ]
  %niter2038 = phi i64 [ 0, %for.body.lr.ph.i.i.i1574.new ], [ %niter2038.next.3, %for.body.i.i.i1580 ]
  %arrayidx.i.i.i1576 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1569, i64 %indvars.iv.i.i.i1575
  %493 = load ptr, ptr %m_data.i.i.i1572, align 8, !tbaa !320
  %arrayidx3.i.i.i1577 = getelementptr inbounds ptr, ptr %493, i64 %indvars.iv.i.i.i1575
  %494 = load ptr, ptr %arrayidx3.i.i.i1577, align 8, !tbaa !219
  store ptr %494, ptr %arrayidx.i.i.i1576, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1578 = or i64 %indvars.iv.i.i.i1575, 1
  %arrayidx.i.i.i1576.12040 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1569, i64 %indvars.iv.next.i.i.i1578
  %495 = load ptr, ptr %m_data.i.i.i1572, align 8, !tbaa !320
  %arrayidx3.i.i.i1577.12041 = getelementptr inbounds ptr, ptr %495, i64 %indvars.iv.next.i.i.i1578
  %496 = load ptr, ptr %arrayidx3.i.i.i1577.12041, align 8, !tbaa !219
  store ptr %496, ptr %arrayidx.i.i.i1576.12040, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1578.12042 = or i64 %indvars.iv.i.i.i1575, 2
  %arrayidx.i.i.i1576.22046 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1569, i64 %indvars.iv.next.i.i.i1578.12042
  %497 = load ptr, ptr %m_data.i.i.i1572, align 8, !tbaa !320
  %arrayidx3.i.i.i1577.22047 = getelementptr inbounds ptr, ptr %497, i64 %indvars.iv.next.i.i.i1578.12042
  %498 = load ptr, ptr %arrayidx3.i.i.i1577.22047, align 8, !tbaa !219
  store ptr %498, ptr %arrayidx.i.i.i1576.22046, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1578.22048 = or i64 %indvars.iv.i.i.i1575, 3
  %arrayidx.i.i.i1576.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1569, i64 %indvars.iv.next.i.i.i1578.22048
  %499 = load ptr, ptr %m_data.i.i.i1572, align 8, !tbaa !320
  %arrayidx3.i.i.i1577.3 = getelementptr inbounds ptr, ptr %499, i64 %indvars.iv.next.i.i.i1578.22048
  %500 = load ptr, ptr %arrayidx3.i.i.i1577.3, align 8, !tbaa !219
  store ptr %500, ptr %arrayidx.i.i.i1576.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1578.3 = add nuw nsw i64 %indvars.iv.i.i.i1575, 4
  %niter2038.next.3 = add i64 %niter2038, 4
  %niter2038.ncmp.3 = icmp eq i64 %niter2038.next.3, %unroll_iter2037
  br i1 %niter2038.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.loopexit.unr-lcssa, label %for.body.i.i.i1580

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1580, %for.body.lr.ph.i.i.i1574
  %indvars.iv.i.i.i1575.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1574 ], [ %indvars.iv.next.i.i.i1578.3, %for.body.i.i.i1580 ]
  %lcmp.mod2036.not = icmp eq i64 %xtraiter2034, 0
  br i1 %lcmp.mod2036.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586, label %for.body.i.i.i1580.epil

for.body.i.i.i1580.epil:                          ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.loopexit.unr-lcssa, %for.body.i.i.i1580.epil
  %indvars.iv.i.i.i1575.epil = phi i64 [ %indvars.iv.next.i.i.i1578.epil, %for.body.i.i.i1580.epil ], [ %indvars.iv.i.i.i1575.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.loopexit.unr-lcssa ]
  %epil.iter2035 = phi i64 [ %epil.iter2035.next, %for.body.i.i.i1580.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1576.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1569, i64 %indvars.iv.i.i.i1575.epil
  %501 = load ptr, ptr %m_data.i.i.i1572, align 8, !tbaa !320
  %arrayidx3.i.i.i1577.epil = getelementptr inbounds ptr, ptr %501, i64 %indvars.iv.i.i.i1575.epil
  %502 = load ptr, ptr %arrayidx3.i.i.i1577.epil, align 8, !tbaa !219
  store ptr %502, ptr %arrayidx.i.i.i1576.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1578.epil = add nuw nsw i64 %indvars.iv.i.i.i1575.epil, 1
  %epil.iter2035.next = add i64 %epil.iter2035, 1
  %epil.iter2035.cmp.not = icmp eq i64 %epil.iter2035.next, %xtraiter2034
  br i1 %epil.iter2035.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586, label %for.body.i.i.i1580.epil, !llvm.loop !364

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.loopexit.unr-lcssa, %for.body.i.i.i1580.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1571
  %m_data.i9.i.i1581 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %487, i64 0, i32 5
  %503 = load ptr, ptr %m_data.i9.i.i1581, align 8, !tbaa !320
  %tobool.not.i10.i.i1582 = icmp eq ptr %503, null
  %m_ownsMemory.i.i.i1583 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %487, i64 0, i32 6
  %504 = load i8, ptr %m_ownsMemory.i.i.i1583, align 8, !range !159
  %tobool2.not.i.i.i1584 = icmp eq i8 %504, 0
  %or.cond.i.i1585 = select i1 %tobool.not.i10.i.i1582, i1 true, i1 %tobool2.not.i.i.i1584
  br i1 %or.cond.i.i1585, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1590, label %if.then3.i.i.i1588

if.then3.i.i.i1588:                               ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %503)
  %.pre7.pre.i1587 = load i32, ptr %m_size.i.i1554, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1590

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1590: ; preds = %if.then3.i.i.i1588, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586
  %.pre7.i1589 = phi i32 [ %.pre7.pre.i1587, %if.then3.i.i.i1588 ], [ %491, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1583, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1569, ptr %m_data.i9.i.i1581, align 8, !tbaa !320
  store i32 %cond.i.i1559, ptr %m_capacity.i.i1555, align 8, !tbaa !342
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596: ; preds = %for.cond524.preheader, %if.then.i1561, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1590
  %505 = phi i32 [ %.pre7.i1589, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1590 ], [ %489, %if.then.i1561 ], [ %489, %for.cond524.preheader ]
  %m_data.i1591 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %487, i64 0, i32 5
  %506 = load ptr, ptr %m_data.i1591, align 8, !tbaa !320
  %idxprom.i1592 = sext i32 %505 to i64
  %arrayidx.i1593 = getelementptr inbounds ptr, ptr %506, i64 %idxprom.i1592
  %507 = load ptr, ptr %arrayidx535, align 8, !tbaa !219
  store ptr %507, ptr %arrayidx.i1593, align 8, !tbaa !219
  %inc.i1594 = add nsw i32 %505, 1
  store i32 %inc.i1594, ptr %m_size.i.i1554, align 4, !tbaa !319
  %508 = load ptr, ptr %m_data.i1548, align 8, !tbaa !123
  %arrayidx.i1550.1 = getelementptr inbounds ptr, ptr %508, i64 %indvars.iv1858
  %509 = load ptr, ptr %arrayidx.i1550.1, align 8, !tbaa !219
  %510 = load ptr, ptr %m_data.i1551, align 8, !tbaa !95
  %arrayidx535.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %510, i64 %indvars.iv1858, i32 1, i64 1
  %m_size.i.i1554.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %509, i64 0, i32 2
  %511 = load i32, ptr %m_size.i.i1554.1, align 4, !tbaa !319
  %m_capacity.i.i1555.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %509, i64 0, i32 3
  %512 = load i32, ptr %m_capacity.i.i1555.1, align 8, !tbaa !342
  %cmp.i1556.1 = icmp eq i32 %511, %512
  br i1 %cmp.i1556.1, label %if.then.i1561.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596.1

if.then.i1561.1:                                  ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596
  %tobool.not.i.i1557.1 = icmp eq i32 %511, 0
  %mul.i.i1558.1 = shl nsw i32 %511, 1
  %cond.i.i1559.1 = select i1 %tobool.not.i.i1557.1, i32 1, i32 %mul.i.i1558.1
  %cmp.i.i1560.1 = icmp slt i32 %511, %cond.i.i1559.1
  br i1 %cmp.i.i1560.1, label %if.then.i.i1563.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596.1

if.then.i.i1563.1:                                ; preds = %if.then.i1561.1
  %tobool.not.i.i.i1562.1 = icmp eq i32 %cond.i.i1559.1, 0
  br i1 %tobool.not.i.i.i1562.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1571.1, label %if.then.i.i.i1568.1

if.then.i.i.i1568.1:                              ; preds = %if.then.i.i1563.1
  %conv.i.i.i.i1564.1 = sext i32 %cond.i.i1559.1 to i64
  %mul.i.i.i.i1565.1 = shl nsw i64 %conv.i.i.i.i1564.1, 3
  %call.i.i.i.i1566.1 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1565.1, i32 noundef 16)
  %.pre.i1567.1 = load i32, ptr %m_size.i.i1554.1, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1571.1

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1571.1: ; preds = %if.then.i.i.i1568.1, %if.then.i.i1563.1
  %513 = phi i32 [ %.pre.i1567.1, %if.then.i.i.i1568.1 ], [ %511, %if.then.i.i1563.1 ]
  %retval.0.i.i.i1569.1 = phi ptr [ %call.i.i.i.i1566.1, %if.then.i.i.i1568.1 ], [ null, %if.then.i.i1563.1 ]
  %cmp7.i.i.i1570.1 = icmp sgt i32 %513, 0
  br i1 %cmp7.i.i.i1570.1, label %for.body.lr.ph.i.i.i1574.1, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.1

for.body.lr.ph.i.i.i1574.1:                       ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1571.1
  %m_data.i.i.i1572.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %509, i64 0, i32 5
  %wide.trip.count.i.i.i1573.1 = zext i32 %513 to i64
  %xtraiter2051 = and i64 %wide.trip.count.i.i.i1573.1, 3
  %514 = icmp ult i32 %513, 4
  br i1 %514, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.1.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1574.1.new

for.body.lr.ph.i.i.i1574.1.new:                   ; preds = %for.body.lr.ph.i.i.i1574.1
  %unroll_iter2054 = and i64 %wide.trip.count.i.i.i1573.1, 4294967292
  br label %for.body.i.i.i1580.1

for.body.i.i.i1580.1:                             ; preds = %for.body.i.i.i1580.1, %for.body.lr.ph.i.i.i1574.1.new
  %indvars.iv.i.i.i1575.1 = phi i64 [ 0, %for.body.lr.ph.i.i.i1574.1.new ], [ %indvars.iv.next.i.i.i1578.1.3, %for.body.i.i.i1580.1 ]
  %niter2055 = phi i64 [ 0, %for.body.lr.ph.i.i.i1574.1.new ], [ %niter2055.next.3, %for.body.i.i.i1580.1 ]
  %arrayidx.i.i.i1576.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1569.1, i64 %indvars.iv.i.i.i1575.1
  %515 = load ptr, ptr %m_data.i.i.i1572.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1577.1 = getelementptr inbounds ptr, ptr %515, i64 %indvars.iv.i.i.i1575.1
  %516 = load ptr, ptr %arrayidx3.i.i.i1577.1, align 8, !tbaa !219
  store ptr %516, ptr %arrayidx.i.i.i1576.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1578.1 = or i64 %indvars.iv.i.i.i1575.1, 1
  %arrayidx.i.i.i1576.1.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1569.1, i64 %indvars.iv.next.i.i.i1578.1
  %517 = load ptr, ptr %m_data.i.i.i1572.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1577.1.1 = getelementptr inbounds ptr, ptr %517, i64 %indvars.iv.next.i.i.i1578.1
  %518 = load ptr, ptr %arrayidx3.i.i.i1577.1.1, align 8, !tbaa !219
  store ptr %518, ptr %arrayidx.i.i.i1576.1.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1578.1.1 = or i64 %indvars.iv.i.i.i1575.1, 2
  %arrayidx.i.i.i1576.1.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1569.1, i64 %indvars.iv.next.i.i.i1578.1.1
  %519 = load ptr, ptr %m_data.i.i.i1572.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1577.1.2 = getelementptr inbounds ptr, ptr %519, i64 %indvars.iv.next.i.i.i1578.1.1
  %520 = load ptr, ptr %arrayidx3.i.i.i1577.1.2, align 8, !tbaa !219
  store ptr %520, ptr %arrayidx.i.i.i1576.1.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1578.1.2 = or i64 %indvars.iv.i.i.i1575.1, 3
  %arrayidx.i.i.i1576.1.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1569.1, i64 %indvars.iv.next.i.i.i1578.1.2
  %521 = load ptr, ptr %m_data.i.i.i1572.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1577.1.3 = getelementptr inbounds ptr, ptr %521, i64 %indvars.iv.next.i.i.i1578.1.2
  %522 = load ptr, ptr %arrayidx3.i.i.i1577.1.3, align 8, !tbaa !219
  store ptr %522, ptr %arrayidx.i.i.i1576.1.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1578.1.3 = add nuw nsw i64 %indvars.iv.i.i.i1575.1, 4
  %niter2055.next.3 = add i64 %niter2055, 4
  %niter2055.ncmp.3 = icmp eq i64 %niter2055.next.3, %unroll_iter2054
  br i1 %niter2055.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.1.loopexit.unr-lcssa, label %for.body.i.i.i1580.1

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.1.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1580.1, %for.body.lr.ph.i.i.i1574.1
  %indvars.iv.i.i.i1575.1.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1574.1 ], [ %indvars.iv.next.i.i.i1578.1.3, %for.body.i.i.i1580.1 ]
  %lcmp.mod2053.not = icmp eq i64 %xtraiter2051, 0
  br i1 %lcmp.mod2053.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.1, label %for.body.i.i.i1580.1.epil

for.body.i.i.i1580.1.epil:                        ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.1.loopexit.unr-lcssa, %for.body.i.i.i1580.1.epil
  %indvars.iv.i.i.i1575.1.epil = phi i64 [ %indvars.iv.next.i.i.i1578.1.epil, %for.body.i.i.i1580.1.epil ], [ %indvars.iv.i.i.i1575.1.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.1.loopexit.unr-lcssa ]
  %epil.iter2052 = phi i64 [ %epil.iter2052.next, %for.body.i.i.i1580.1.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.1.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1576.1.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1569.1, i64 %indvars.iv.i.i.i1575.1.epil
  %523 = load ptr, ptr %m_data.i.i.i1572.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1577.1.epil = getelementptr inbounds ptr, ptr %523, i64 %indvars.iv.i.i.i1575.1.epil
  %524 = load ptr, ptr %arrayidx3.i.i.i1577.1.epil, align 8, !tbaa !219
  store ptr %524, ptr %arrayidx.i.i.i1576.1.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1578.1.epil = add nuw nsw i64 %indvars.iv.i.i.i1575.1.epil, 1
  %epil.iter2052.next = add i64 %epil.iter2052, 1
  %epil.iter2052.cmp.not = icmp eq i64 %epil.iter2052.next, %xtraiter2051
  br i1 %epil.iter2052.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.1, label %for.body.i.i.i1580.1.epil, !llvm.loop !365

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.1: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.1.loopexit.unr-lcssa, %for.body.i.i.i1580.1.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1571.1
  %m_data.i9.i.i1581.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %509, i64 0, i32 5
  %525 = load ptr, ptr %m_data.i9.i.i1581.1, align 8, !tbaa !320
  %tobool.not.i10.i.i1582.1 = icmp eq ptr %525, null
  %m_ownsMemory.i.i.i1583.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %509, i64 0, i32 6
  %526 = load i8, ptr %m_ownsMemory.i.i.i1583.1, align 8, !range !159
  %tobool2.not.i.i.i1584.1 = icmp eq i8 %526, 0
  %or.cond.i.i1585.1 = select i1 %tobool.not.i10.i.i1582.1, i1 true, i1 %tobool2.not.i.i.i1584.1
  br i1 %or.cond.i.i1585.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1590.1, label %if.then3.i.i.i1588.1

if.then3.i.i.i1588.1:                             ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.1
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %525)
  %.pre7.pre.i1587.1 = load i32, ptr %m_size.i.i1554.1, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1590.1

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1590.1: ; preds = %if.then3.i.i.i1588.1, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.1
  %.pre7.i1589.1 = phi i32 [ %.pre7.pre.i1587.1, %if.then3.i.i.i1588.1 ], [ %513, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.1 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1583.1, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1569.1, ptr %m_data.i9.i.i1581.1, align 8, !tbaa !320
  store i32 %cond.i.i1559.1, ptr %m_capacity.i.i1555.1, align 8, !tbaa !342
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596.1

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596.1: ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1590.1, %if.then.i1561.1, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596
  %527 = phi i32 [ %.pre7.i1589.1, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1590.1 ], [ %511, %if.then.i1561.1 ], [ %511, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596 ]
  %m_data.i1591.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %509, i64 0, i32 5
  %528 = load ptr, ptr %m_data.i1591.1, align 8, !tbaa !320
  %idxprom.i1592.1 = sext i32 %527 to i64
  %arrayidx.i1593.1 = getelementptr inbounds ptr, ptr %528, i64 %idxprom.i1592.1
  %529 = load ptr, ptr %arrayidx535.1, align 8, !tbaa !219
  store ptr %529, ptr %arrayidx.i1593.1, align 8, !tbaa !219
  %inc.i1594.1 = add nsw i32 %527, 1
  store i32 %inc.i1594.1, ptr %m_size.i.i1554.1, align 4, !tbaa !319
  %530 = load ptr, ptr %m_data.i1548, align 8, !tbaa !123
  %arrayidx.i1550.2 = getelementptr inbounds ptr, ptr %530, i64 %indvars.iv1858
  %531 = load ptr, ptr %arrayidx.i1550.2, align 8, !tbaa !219
  %532 = load ptr, ptr %m_data.i1551, align 8, !tbaa !95
  %arrayidx535.2 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %532, i64 %indvars.iv1858, i32 1, i64 2
  %m_size.i.i1554.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %531, i64 0, i32 2
  %533 = load i32, ptr %m_size.i.i1554.2, align 4, !tbaa !319
  %m_capacity.i.i1555.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %531, i64 0, i32 3
  %534 = load i32, ptr %m_capacity.i.i1555.2, align 8, !tbaa !342
  %cmp.i1556.2 = icmp eq i32 %533, %534
  br i1 %cmp.i1556.2, label %if.then.i1561.2, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596.2

if.then.i1561.2:                                  ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596.1
  %tobool.not.i.i1557.2 = icmp eq i32 %533, 0
  %mul.i.i1558.2 = shl nsw i32 %533, 1
  %cond.i.i1559.2 = select i1 %tobool.not.i.i1557.2, i32 1, i32 %mul.i.i1558.2
  %cmp.i.i1560.2 = icmp slt i32 %533, %cond.i.i1559.2
  br i1 %cmp.i.i1560.2, label %if.then.i.i1563.2, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596.2

if.then.i.i1563.2:                                ; preds = %if.then.i1561.2
  %tobool.not.i.i.i1562.2 = icmp eq i32 %cond.i.i1559.2, 0
  br i1 %tobool.not.i.i.i1562.2, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1571.2, label %if.then.i.i.i1568.2

if.then.i.i.i1568.2:                              ; preds = %if.then.i.i1563.2
  %conv.i.i.i.i1564.2 = sext i32 %cond.i.i1559.2 to i64
  %mul.i.i.i.i1565.2 = shl nsw i64 %conv.i.i.i.i1564.2, 3
  %call.i.i.i.i1566.2 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1565.2, i32 noundef 16)
  %.pre.i1567.2 = load i32, ptr %m_size.i.i1554.2, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1571.2

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1571.2: ; preds = %if.then.i.i.i1568.2, %if.then.i.i1563.2
  %535 = phi i32 [ %.pre.i1567.2, %if.then.i.i.i1568.2 ], [ %533, %if.then.i.i1563.2 ]
  %retval.0.i.i.i1569.2 = phi ptr [ %call.i.i.i.i1566.2, %if.then.i.i.i1568.2 ], [ null, %if.then.i.i1563.2 ]
  %cmp7.i.i.i1570.2 = icmp sgt i32 %535, 0
  br i1 %cmp7.i.i.i1570.2, label %for.body.lr.ph.i.i.i1574.2, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.2

for.body.lr.ph.i.i.i1574.2:                       ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1571.2
  %m_data.i.i.i1572.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %531, i64 0, i32 5
  %wide.trip.count.i.i.i1573.2 = zext i32 %535 to i64
  %xtraiter2056 = and i64 %wide.trip.count.i.i.i1573.2, 3
  %536 = icmp ult i32 %535, 4
  br i1 %536, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.2.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1574.2.new

for.body.lr.ph.i.i.i1574.2.new:                   ; preds = %for.body.lr.ph.i.i.i1574.2
  %unroll_iter2059 = and i64 %wide.trip.count.i.i.i1573.2, 4294967292
  br label %for.body.i.i.i1580.2

for.body.i.i.i1580.2:                             ; preds = %for.body.i.i.i1580.2, %for.body.lr.ph.i.i.i1574.2.new
  %indvars.iv.i.i.i1575.2 = phi i64 [ 0, %for.body.lr.ph.i.i.i1574.2.new ], [ %indvars.iv.next.i.i.i1578.2.3, %for.body.i.i.i1580.2 ]
  %niter2060 = phi i64 [ 0, %for.body.lr.ph.i.i.i1574.2.new ], [ %niter2060.next.3, %for.body.i.i.i1580.2 ]
  %arrayidx.i.i.i1576.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1569.2, i64 %indvars.iv.i.i.i1575.2
  %537 = load ptr, ptr %m_data.i.i.i1572.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1577.2 = getelementptr inbounds ptr, ptr %537, i64 %indvars.iv.i.i.i1575.2
  %538 = load ptr, ptr %arrayidx3.i.i.i1577.2, align 8, !tbaa !219
  store ptr %538, ptr %arrayidx.i.i.i1576.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1578.2 = or i64 %indvars.iv.i.i.i1575.2, 1
  %arrayidx.i.i.i1576.2.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1569.2, i64 %indvars.iv.next.i.i.i1578.2
  %539 = load ptr, ptr %m_data.i.i.i1572.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1577.2.1 = getelementptr inbounds ptr, ptr %539, i64 %indvars.iv.next.i.i.i1578.2
  %540 = load ptr, ptr %arrayidx3.i.i.i1577.2.1, align 8, !tbaa !219
  store ptr %540, ptr %arrayidx.i.i.i1576.2.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1578.2.1 = or i64 %indvars.iv.i.i.i1575.2, 2
  %arrayidx.i.i.i1576.2.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1569.2, i64 %indvars.iv.next.i.i.i1578.2.1
  %541 = load ptr, ptr %m_data.i.i.i1572.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1577.2.2 = getelementptr inbounds ptr, ptr %541, i64 %indvars.iv.next.i.i.i1578.2.1
  %542 = load ptr, ptr %arrayidx3.i.i.i1577.2.2, align 8, !tbaa !219
  store ptr %542, ptr %arrayidx.i.i.i1576.2.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1578.2.2 = or i64 %indvars.iv.i.i.i1575.2, 3
  %arrayidx.i.i.i1576.2.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1569.2, i64 %indvars.iv.next.i.i.i1578.2.2
  %543 = load ptr, ptr %m_data.i.i.i1572.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1577.2.3 = getelementptr inbounds ptr, ptr %543, i64 %indvars.iv.next.i.i.i1578.2.2
  %544 = load ptr, ptr %arrayidx3.i.i.i1577.2.3, align 8, !tbaa !219
  store ptr %544, ptr %arrayidx.i.i.i1576.2.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1578.2.3 = add nuw nsw i64 %indvars.iv.i.i.i1575.2, 4
  %niter2060.next.3 = add i64 %niter2060, 4
  %niter2060.ncmp.3 = icmp eq i64 %niter2060.next.3, %unroll_iter2059
  br i1 %niter2060.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.2.loopexit.unr-lcssa, label %for.body.i.i.i1580.2

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.2.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1580.2, %for.body.lr.ph.i.i.i1574.2
  %indvars.iv.i.i.i1575.2.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1574.2 ], [ %indvars.iv.next.i.i.i1578.2.3, %for.body.i.i.i1580.2 ]
  %lcmp.mod2058.not = icmp eq i64 %xtraiter2056, 0
  br i1 %lcmp.mod2058.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.2, label %for.body.i.i.i1580.2.epil

for.body.i.i.i1580.2.epil:                        ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.2.loopexit.unr-lcssa, %for.body.i.i.i1580.2.epil
  %indvars.iv.i.i.i1575.2.epil = phi i64 [ %indvars.iv.next.i.i.i1578.2.epil, %for.body.i.i.i1580.2.epil ], [ %indvars.iv.i.i.i1575.2.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.2.loopexit.unr-lcssa ]
  %epil.iter2057 = phi i64 [ %epil.iter2057.next, %for.body.i.i.i1580.2.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.2.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1576.2.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1569.2, i64 %indvars.iv.i.i.i1575.2.epil
  %545 = load ptr, ptr %m_data.i.i.i1572.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1577.2.epil = getelementptr inbounds ptr, ptr %545, i64 %indvars.iv.i.i.i1575.2.epil
  %546 = load ptr, ptr %arrayidx3.i.i.i1577.2.epil, align 8, !tbaa !219
  store ptr %546, ptr %arrayidx.i.i.i1576.2.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1578.2.epil = add nuw nsw i64 %indvars.iv.i.i.i1575.2.epil, 1
  %epil.iter2057.next = add i64 %epil.iter2057, 1
  %epil.iter2057.cmp.not = icmp eq i64 %epil.iter2057.next, %xtraiter2056
  br i1 %epil.iter2057.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.2, label %for.body.i.i.i1580.2.epil, !llvm.loop !366

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.2: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.2.loopexit.unr-lcssa, %for.body.i.i.i1580.2.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1571.2
  %m_data.i9.i.i1581.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %531, i64 0, i32 5
  %547 = load ptr, ptr %m_data.i9.i.i1581.2, align 8, !tbaa !320
  %tobool.not.i10.i.i1582.2 = icmp eq ptr %547, null
  %m_ownsMemory.i.i.i1583.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %531, i64 0, i32 6
  %548 = load i8, ptr %m_ownsMemory.i.i.i1583.2, align 8, !range !159
  %tobool2.not.i.i.i1584.2 = icmp eq i8 %548, 0
  %or.cond.i.i1585.2 = select i1 %tobool.not.i10.i.i1582.2, i1 true, i1 %tobool2.not.i.i.i1584.2
  br i1 %or.cond.i.i1585.2, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1590.2, label %if.then3.i.i.i1588.2

if.then3.i.i.i1588.2:                             ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.2
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %547)
  %.pre7.pre.i1587.2 = load i32, ptr %m_size.i.i1554.2, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1590.2

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1590.2: ; preds = %if.then3.i.i.i1588.2, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.2
  %.pre7.i1589.2 = phi i32 [ %.pre7.pre.i1587.2, %if.then3.i.i.i1588.2 ], [ %535, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1586.2 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1583.2, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1569.2, ptr %m_data.i9.i.i1581.2, align 8, !tbaa !320
  store i32 %cond.i.i1559.2, ptr %m_capacity.i.i1555.2, align 8, !tbaa !342
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596.2

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596.2: ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1590.2, %if.then.i1561.2, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596.1
  %549 = phi i32 [ %.pre7.i1589.2, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1590.2 ], [ %533, %if.then.i1561.2 ], [ %533, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596.1 ]
  %m_data.i1591.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %531, i64 0, i32 5
  %550 = load ptr, ptr %m_data.i1591.2, align 8, !tbaa !320
  %idxprom.i1592.2 = sext i32 %549 to i64
  %arrayidx.i1593.2 = getelementptr inbounds ptr, ptr %550, i64 %idxprom.i1592.2
  %551 = load ptr, ptr %arrayidx535.2, align 8, !tbaa !219
  store ptr %551, ptr %arrayidx.i1593.2, align 8, !tbaa !219
  %inc.i1594.2 = add nsw i32 %549, 1
  store i32 %inc.i1594.2, ptr %m_size.i.i1554.2, align 4, !tbaa !319
  %indvars.iv.next1859 = add nuw nsw i64 %indvars.iv1858, 1
  %552 = load i32, ptr %m_size.i1480, align 4, !tbaa !96
  %553 = sext i32 %552 to i64
  %cmp521 = icmp slt i64 %indvars.iv.next1859, %553
  br i1 %cmp521, label %for.cond524.preheader, label %if.end543

if.end543:                                        ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1479.3, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1596.2, %for.cond475.preheader, %for.cond518.preheader, %if.then3.i.i.i1339, %invoke.cont442
  %554 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %tobool546.not = icmp eq i32 %554, 0
  br i1 %tobool546.not, label %if.end619, label %if.then547

if.then547:                                       ; preds = %if.end543
  tail call void @_ZN10btSoftBody18initializeClustersEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  tail call void @_ZN10btSoftBody14updateClustersEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  %555 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %mul552 = mul nsw i32 %555, %555
  %m_size.i.i1600 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 2
  %556 = load i32, ptr %m_size.i.i1600, align 4, !tbaa !128
  %cmp4.i1602 = icmp slt i32 %556, %mul552
  br i1 %cmp4.i1602, label %if.then5.i1606, label %_ZN20btAlignedObjectArrayIbE6resizeEiRKb.exit

if.then5.i1606:                                   ; preds = %if.then547
  %m_capacity.i.i.i1604 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 3
  %557 = load i32, ptr %m_capacity.i.i.i1604, align 8, !tbaa !129
  %cmp.i.i1605 = icmp slt i32 %557, %mul552
  br i1 %cmp.i.i1605, label %if.then.i.i1608, label %if.then5.i1606.for.body10.lr.ph.i1635_crit_edge

if.then5.i1606.for.body10.lr.ph.i1635_crit_edge:  ; preds = %if.then5.i1606
  %m_data11.i1633.phi.trans.insert = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 5
  %.pre1925 = load ptr, ptr %m_data11.i1633.phi.trans.insert, align 8, !tbaa !127
  br label %for.body10.lr.ph.i1635

if.then.i.i1608:                                  ; preds = %if.then5.i1606
  %tobool.not.i.i.i1607 = icmp eq i32 %555, 0
  br i1 %tobool.not.i.i.i1607, label %_ZN20btAlignedObjectArrayIbE8allocateEi.exit.i.i, label %if.then.i.i.i1612

if.then.i.i.i1612:                                ; preds = %if.then.i.i1608
  %conv.i.i.i.i1609 = zext i32 %mul552 to i64
  %call.i.i.i.i1610 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %conv.i.i.i.i1609, i32 noundef 16)
  %.pre.i1611 = load i32, ptr %m_size.i.i1600, align 4, !tbaa !128
  br label %_ZN20btAlignedObjectArrayIbE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIbE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i1612, %if.then.i.i1608
  %558 = phi i32 [ %.pre.i1611, %if.then.i.i.i1612 ], [ %556, %if.then.i.i1608 ]
  %retval.0.i.i.i1613 = phi ptr [ %call.i.i.i.i1610, %if.then.i.i.i1612 ], [ null, %if.then.i.i1608 ]
  %cmp7.i.i.i1614 = icmp sgt i32 %558, 0
  %m_data.i.i.i1615 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 5
  %559 = load ptr, ptr %m_data.i.i.i1615, align 8, !tbaa !127
  br i1 %cmp7.i.i.i1614, label %iter.check, label %_ZNK20btAlignedObjectArrayIbE4copyEiiPb.exit.i.i

iter.check:                                       ; preds = %_ZN20btAlignedObjectArrayIbE8allocateEi.exit.i.i
  %560 = ptrtoint ptr %559 to i64
  %retval.0.i.i.i16131958 = ptrtoint ptr %retval.0.i.i.i1613 to i64
  %wide.trip.count.i.i.i1616 = zext i32 %558 to i64
  %min.iters.check = icmp ult i32 %558, 8
  %561 = sub i64 %retval.0.i.i.i16131958, %560
  %diff.check = icmp ult i64 %561, 32
  %or.cond = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond, label %for.body.i.i.i1623.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %iter.check
  %min.iters.check1959 = icmp ult i32 %558, 32
  br i1 %min.iters.check1959, label %vec.epilog.ph, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %wide.trip.count.i.i.i1616, 4294967264
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %562 = getelementptr inbounds i8, ptr %retval.0.i.i.i1613, i64 %index
  %563 = getelementptr inbounds i8, ptr %559, i64 %index
  %wide.load = load <16 x i8>, ptr %563, align 1, !tbaa !367
  %564 = getelementptr inbounds i8, ptr %563, i64 16
  %wide.load1960 = load <16 x i8>, ptr %564, align 1, !tbaa !367
  store <16 x i8> %wide.load, ptr %562, align 1, !tbaa !367
  %565 = getelementptr inbounds i8, ptr %562, i64 16
  store <16 x i8> %wide.load1960, ptr %565, align 1, !tbaa !367
  %index.next = add nuw i64 %index, 32
  %566 = icmp eq i64 %index.next, %n.vec
  br i1 %566, label %middle.block, label %vector.body, !llvm.loop !368

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i.i1616
  br i1 %cmp.n, label %if.then.i11.i.i1629, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %n.vec.remaining = and i64 %wide.trip.count.i.i.i1616, 24
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %for.body.i.i.i1623.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vector.main.loop.iter.check, %vec.epilog.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %n.vec1962 = and i64 %wide.trip.count.i.i.i1616, 4294967288
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %index1964 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next1966, %vec.epilog.vector.body ]
  %567 = getelementptr inbounds i8, ptr %retval.0.i.i.i1613, i64 %index1964
  %568 = getelementptr inbounds i8, ptr %559, i64 %index1964
  %wide.load1965 = load <8 x i8>, ptr %568, align 1, !tbaa !367
  store <8 x i8> %wide.load1965, ptr %567, align 1, !tbaa !367
  %index.next1966 = add nuw i64 %index1964, 8
  %569 = icmp eq i64 %index.next1966, %n.vec1962
  br i1 %569, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !369

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n1963 = icmp eq i64 %n.vec1962, %wide.trip.count.i.i.i1616
  br i1 %cmp.n1963, label %if.then.i11.i.i1629, label %for.body.i.i.i1623.preheader

for.body.i.i.i1623.preheader:                     ; preds = %iter.check, %vec.epilog.iter.check, %vec.epilog.middle.block
  %indvars.iv.i.i.i1618.ph = phi i64 [ 0, %iter.check ], [ %n.vec, %vec.epilog.iter.check ], [ %n.vec1962, %vec.epilog.middle.block ]
  %570 = xor i64 %indvars.iv.i.i.i1618.ph, -1
  %571 = add nsw i64 %570, %wide.trip.count.i.i.i1616
  %xtraiter2117 = and i64 %wide.trip.count.i.i.i1616, 3
  %lcmp.mod2118.not = icmp eq i64 %xtraiter2117, 0
  br i1 %lcmp.mod2118.not, label %for.body.i.i.i1623.prol.loopexit, label %for.body.i.i.i1623.prol

for.body.i.i.i1623.prol:                          ; preds = %for.body.i.i.i1623.preheader, %for.body.i.i.i1623.prol
  %indvars.iv.i.i.i1618.prol = phi i64 [ %indvars.iv.next.i.i.i1621.prol, %for.body.i.i.i1623.prol ], [ %indvars.iv.i.i.i1618.ph, %for.body.i.i.i1623.preheader ]
  %prol.iter2119 = phi i64 [ %prol.iter2119.next, %for.body.i.i.i1623.prol ], [ 0, %for.body.i.i.i1623.preheader ]
  %arrayidx.i.i.i1619.prol = getelementptr inbounds i8, ptr %retval.0.i.i.i1613, i64 %indvars.iv.i.i.i1618.prol
  %arrayidx3.i.i.i1620.prol = getelementptr inbounds i8, ptr %559, i64 %indvars.iv.i.i.i1618.prol
  %572 = load i8, ptr %arrayidx3.i.i.i1620.prol, align 1, !tbaa !367, !range !159, !noundef !192
  store i8 %572, ptr %arrayidx.i.i.i1619.prol, align 1, !tbaa !367
  %indvars.iv.next.i.i.i1621.prol = add nuw nsw i64 %indvars.iv.i.i.i1618.prol, 1
  %prol.iter2119.next = add i64 %prol.iter2119, 1
  %prol.iter2119.cmp.not = icmp eq i64 %prol.iter2119.next, %xtraiter2117
  br i1 %prol.iter2119.cmp.not, label %for.body.i.i.i1623.prol.loopexit, label %for.body.i.i.i1623.prol, !llvm.loop !370

for.body.i.i.i1623.prol.loopexit:                 ; preds = %for.body.i.i.i1623.prol, %for.body.i.i.i1623.preheader
  %indvars.iv.i.i.i1618.unr = phi i64 [ %indvars.iv.i.i.i1618.ph, %for.body.i.i.i1623.preheader ], [ %indvars.iv.next.i.i.i1621.prol, %for.body.i.i.i1623.prol ]
  %573 = icmp ult i64 %571, 3
  br i1 %573, label %if.then.i11.i.i1629, label %for.body.i.i.i1623

for.body.i.i.i1623:                               ; preds = %for.body.i.i.i1623.prol.loopexit, %for.body.i.i.i1623
  %indvars.iv.i.i.i1618 = phi i64 [ %indvars.iv.next.i.i.i1621.3, %for.body.i.i.i1623 ], [ %indvars.iv.i.i.i1618.unr, %for.body.i.i.i1623.prol.loopexit ]
  %arrayidx.i.i.i1619 = getelementptr inbounds i8, ptr %retval.0.i.i.i1613, i64 %indvars.iv.i.i.i1618
  %arrayidx3.i.i.i1620 = getelementptr inbounds i8, ptr %559, i64 %indvars.iv.i.i.i1618
  %574 = load i8, ptr %arrayidx3.i.i.i1620, align 1, !tbaa !367, !range !159, !noundef !192
  store i8 %574, ptr %arrayidx.i.i.i1619, align 1, !tbaa !367
  %indvars.iv.next.i.i.i1621 = add nuw nsw i64 %indvars.iv.i.i.i1618, 1
  %arrayidx.i.i.i1619.1 = getelementptr inbounds i8, ptr %retval.0.i.i.i1613, i64 %indvars.iv.next.i.i.i1621
  %arrayidx3.i.i.i1620.1 = getelementptr inbounds i8, ptr %559, i64 %indvars.iv.next.i.i.i1621
  %575 = load i8, ptr %arrayidx3.i.i.i1620.1, align 1, !tbaa !367, !range !159, !noundef !192
  store i8 %575, ptr %arrayidx.i.i.i1619.1, align 1, !tbaa !367
  %indvars.iv.next.i.i.i1621.1 = add nuw nsw i64 %indvars.iv.i.i.i1618, 2
  %arrayidx.i.i.i1619.2 = getelementptr inbounds i8, ptr %retval.0.i.i.i1613, i64 %indvars.iv.next.i.i.i1621.1
  %arrayidx3.i.i.i1620.2 = getelementptr inbounds i8, ptr %559, i64 %indvars.iv.next.i.i.i1621.1
  %576 = load i8, ptr %arrayidx3.i.i.i1620.2, align 1, !tbaa !367, !range !159, !noundef !192
  store i8 %576, ptr %arrayidx.i.i.i1619.2, align 1, !tbaa !367
  %indvars.iv.next.i.i.i1621.2 = add nuw nsw i64 %indvars.iv.i.i.i1618, 3
  %arrayidx.i.i.i1619.3 = getelementptr inbounds i8, ptr %retval.0.i.i.i1613, i64 %indvars.iv.next.i.i.i1621.2
  %arrayidx3.i.i.i1620.3 = getelementptr inbounds i8, ptr %559, i64 %indvars.iv.next.i.i.i1621.2
  %577 = load i8, ptr %arrayidx3.i.i.i1620.3, align 1, !tbaa !367, !range !159, !noundef !192
  store i8 %577, ptr %arrayidx.i.i.i1619.3, align 1, !tbaa !367
  %indvars.iv.next.i.i.i1621.3 = add nuw nsw i64 %indvars.iv.i.i.i1618, 4
  %exitcond.not.i.i.i1622.3 = icmp eq i64 %indvars.iv.next.i.i.i1621.3, %wide.trip.count.i.i.i1616
  br i1 %exitcond.not.i.i.i1622.3, label %if.then.i11.i.i1629, label %for.body.i.i.i1623, !llvm.loop !371

_ZNK20btAlignedObjectArrayIbE4copyEiiPb.exit.i.i: ; preds = %_ZN20btAlignedObjectArrayIbE8allocateEi.exit.i.i
  %tobool.not.i10.i.i1624 = icmp eq ptr %559, null
  br i1 %tobool.not.i10.i.i1624, label %if.end.thread36.i1626, label %if.then.i11.i.i1629

if.end.thread36.i1626:                            ; preds = %_ZNK20btAlignedObjectArrayIbE4copyEiiPb.exit.i.i
  %m_ownsMemory.i37.i1625 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 6
  store i8 1, ptr %m_ownsMemory.i37.i1625, align 8, !tbaa !126
  store ptr %retval.0.i.i.i1613, ptr %m_data.i.i.i1615, align 8, !tbaa !127
  store i32 %mul552, ptr %m_capacity.i.i.i1604, align 8, !tbaa !129
  br label %for.body10.lr.ph.i1635

if.then.i11.i.i1629:                              ; preds = %for.body.i.i.i1623.prol.loopexit, %for.body.i.i.i1623, %middle.block, %vec.epilog.middle.block, %_ZNK20btAlignedObjectArrayIbE4copyEiiPb.exit.i.i
  %m_ownsMemory.i.i.i1627 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 6
  %578 = load i8, ptr %m_ownsMemory.i.i.i1627, align 8, !tbaa !126, !range !159, !noundef !192
  %tobool2.not.i.i.i1628 = icmp eq i8 %578, 0
  br i1 %tobool2.not.i.i.i1628, label %if.end.i1632, label %if.then3.i.i.i1630

if.then3.i.i.i1630:                               ; preds = %if.then.i11.i.i1629
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %559)
  br label %if.end.i1632

if.end.i1632:                                     ; preds = %if.then3.i.i.i1630, %if.then.i11.i.i1629
  store i8 1, ptr %m_ownsMemory.i.i.i1627, align 8, !tbaa !126
  store ptr %retval.0.i.i.i1613, ptr %m_data.i.i.i1615, align 8, !tbaa !127
  store i32 %mul552, ptr %m_capacity.i.i.i1604, align 8, !tbaa !129
  br label %for.body10.lr.ph.i1635

for.body10.lr.ph.i1635:                           ; preds = %if.then5.i1606.for.body10.lr.ph.i1635_crit_edge, %if.end.i1632, %if.end.thread36.i1626
  %579 = phi ptr [ %.pre1925, %if.then5.i1606.for.body10.lr.ph.i1635_crit_edge ], [ %retval.0.i.i.i1613, %if.end.i1632 ], [ %retval.0.i.i.i1613, %if.end.thread36.i1626 ]
  %580 = sext i32 %556 to i64
  %wide.trip.count.i1634 = zext i32 %mul552 to i64
  %scevgep = getelementptr i8, ptr %579, i64 %580
  %581 = sub nsw i64 %wide.trip.count.i1634, %580
  tail call void @llvm.memset.p0.i64(ptr align 1 %scevgep, i8 0, i64 %581, i1 false), !tbaa !367
  %.pre1926 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  br label %_ZN20btAlignedObjectArrayIbE6resizeEiRKb.exit

_ZN20btAlignedObjectArrayIbE6resizeEiRKb.exit:    ; preds = %for.body10.lr.ph.i1635, %if.then547
  %582 = phi i32 [ %.pre1926, %for.body10.lr.ph.i1635 ], [ %555, %if.then547 ]
  store i32 %mul552, ptr %m_size.i.i1600, align 4, !tbaa !128
  %cmp5571834 = icmp sgt i32 %582, 0
  br i1 %cmp5571834, label %for.body559.lr.ph, label %if.end619

for.body559.lr.ph:                                ; preds = %_ZN20btAlignedObjectArrayIbE6resizeEiRKb.exit
  %m_data.i1642 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %583 = load ptr, ptr %m_data.i1642, align 8, !tbaa !123
  %m_data.i1654 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 5
  %584 = load ptr, ptr %m_data.i1654, align 8
  %585 = zext i32 %582 to i64
  %wide.trip.count1917 = zext i32 %582 to i64
  br label %for.body567.lr.ph

for.body567.lr.ph:                                ; preds = %for.cond.cleanup566, %for.body559.lr.ph
  %indvars.iv1914 = phi i64 [ 0, %for.body559.lr.ph ], [ %indvars.iv.next1915, %for.cond.cleanup566 ]
  %arrayidx.i1644 = getelementptr inbounds ptr, ptr %583, i64 %indvars.iv1914
  %586 = load ptr, ptr %arrayidx.i1644, align 8, !tbaa !219
  %m_clusterIndex = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %586, i64 0, i32 24
  %587 = trunc i64 %indvars.iv1914 to i32
  store i32 %587, ptr %m_clusterIndex, align 4, !tbaa !372
  %m_size.i1652 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %586, i64 0, i32 2
  %588 = load i32, ptr %m_size.i1652, align 4, !tbaa !319
  %m_data.i1658 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %586, i64 0, i32 5
  %smax = tail call i32 @llvm.smax.i32(i32 %588, i32 0)
  %wide.trip.count1905 = zext i32 %smax to i64
  %exitcond1906.not1956 = icmp slt i32 %588, 1
  br label %for.body567

for.cond.cleanup566:                              ; preds = %for.cond.cleanup580
  %indvars.iv.next1915 = add nuw nsw i64 %indvars.iv1914, 1
  %exitcond1918.not = icmp eq i64 %indvars.iv.next1915, %wide.trip.count1917
  br i1 %exitcond1918.not, label %if.end619, label %for.body567.lr.ph

for.body567:                                      ; preds = %for.body567.lr.ph, %for.cond.cleanup580
  %indvars.iv1907 = phi i64 [ 0, %for.body567.lr.ph ], [ %indvars.iv.next1908, %for.cond.cleanup580 ]
  %arrayidx.i1651 = getelementptr inbounds ptr, ptr %583, i64 %indvars.iv1907
  %589 = load ptr, ptr %arrayidx.i1651, align 8, !tbaa !219
  %m_size.i1657 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %589, i64 0, i32 2
  %m_data.i1661 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %589, i64 0, i32 5
  br i1 %exitcond1906.not1956, label %for.cond.cleanup580, label %for.cond583.preheader.preheader

for.cond583.preheader.preheader:                  ; preds = %for.body567
  %590 = load i32, ptr %m_size.i1657, align 4, !tbaa !319
  %cmp5861826 = icmp sgt i32 %590, 0
  %wide.trip.count1901 = zext i32 %590 to i64
  br label %for.cond583.preheader

for.cond583.preheader:                            ; preds = %for.cond583.preheader.preheader, %cleanup
  %indvars.iv19031957 = phi i64 [ %indvars.iv.next1904, %cleanup ], [ 0, %for.cond583.preheader.preheader ]
  br i1 %cmp5861826, label %for.body588.lr.ph, label %cleanup

for.body588.lr.ph:                                ; preds = %for.cond583.preheader
  %591 = load ptr, ptr %m_data.i1658, align 8, !tbaa !320
  %arrayidx.i1660 = getelementptr inbounds ptr, ptr %591, i64 %indvars.iv19031957
  %592 = load ptr, ptr %arrayidx.i1660, align 8, !tbaa !219
  %593 = load ptr, ptr %m_data.i1661, align 8, !tbaa !320
  br label %for.body588

for.cond.cleanup580:                              ; preds = %cleanup, %for.body588, %for.body567
  %.lcssa = phi i8 [ 0, %for.body567 ], [ 1, %for.body588 ], [ 0, %cleanup ]
  %594 = mul nsw i64 %indvars.iv1907, %585
  %595 = add nuw nsw i64 %594, %indvars.iv1914
  %arrayidx.i1656 = getelementptr inbounds i8, ptr %584, i64 %595
  store i8 %.lcssa, ptr %arrayidx.i1656, align 1, !tbaa !367
  %indvars.iv.next1908 = add nuw nsw i64 %indvars.iv1907, 1
  %exitcond1913.not = icmp eq i64 %indvars.iv.next1908, %wide.trip.count1917
  br i1 %exitcond1913.not, label %for.cond.cleanup566, label %for.body567

for.cond583:                                      ; preds = %for.body588
  %indvars.iv.next1899 = add nuw nsw i64 %indvars.iv1898, 1
  %exitcond1902.not = icmp eq i64 %indvars.iv.next1899, %wide.trip.count1901
  br i1 %exitcond1902.not, label %cleanup, label %for.body588

for.body588:                                      ; preds = %for.body588.lr.ph, %for.cond583
  %indvars.iv1898 = phi i64 [ 0, %for.body588.lr.ph ], [ %indvars.iv.next1899, %for.cond583 ]
  %arrayidx.i1663 = getelementptr inbounds ptr, ptr %593, i64 %indvars.iv1898
  %596 = load ptr, ptr %arrayidx.i1663, align 8, !tbaa !219
  %cmp593 = icmp eq ptr %592, %596
  br i1 %cmp593, label %for.cond.cleanup580, label %for.cond583

cleanup:                                          ; preds = %for.cond583, %for.cond583.preheader
  %indvars.iv.next1904 = add nuw nsw i64 %indvars.iv19031957, 1
  %exitcond1906.not = icmp eq i64 %indvars.iv.next1904, %wide.trip.count1905
  br i1 %exitcond1906.not, label %for.cond.cleanup580, label %for.cond583.preheader

if.end619:                                        ; preds = %for.cond.cleanup566, %_ZN20btAlignedObjectArrayIbE6resizeEiRKb.exit, %if.end543
  %597 = phi i32 [ %582, %_ZN20btAlignedObjectArrayIbE6resizeEiRKb.exit ], [ 0, %if.end543 ], [ %582, %for.cond.cleanup566 ]
  ret i32 %597

terminate.lpad:                                   ; preds = %if.then3.i.i.i1357, %if.then3.i.i.i1347
  %598 = landingpad { ptr, i32 }
          catch ptr null
  %599 = extractvalue { ptr, i32 } %598, 0
  tail call void @__clang_call_terminate(ptr %599) #39
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayI9btVector3ED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.8, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !33
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.8, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayI9btVector3E5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayI9btVector3E5clearEv.exit

_ZN20btAlignedObjectArrayI9btVector3E5clearEv.exit: ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.8, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !30
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !33
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !34
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.8, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !35
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody18initializeClustersEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #0 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !124
  %cmp381 = icmp sgt i32 %0, 0
  br i1 %cmp381, label %for.body.lr.ph, label %for.end157

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.end154
  %indvars.iv392 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next393, %for.end154 ]
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv392
  %2 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %m_imass = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 5
  store float 0.000000e+00, ptr %m_imass, align 4, !tbaa !373
  %m_size.i224 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %2, i64 0, i32 2
  %3 = load i32, ptr %m_size.i224, align 4, !tbaa !319
  %m_size.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 1, i32 2
  %4 = load i32, ptr %m_size.i.i, align 4, !tbaa !40
  %cmp4.i = icmp slt i32 %4, %3
  br i1 %cmp4.i, label %if.then5.i, label %_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit

if.then5.i:                                       ; preds = %for.body
  %m_capacity.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 1, i32 3
  %5 = load i32, ptr %m_capacity.i.i.i, align 8, !tbaa !41
  %cmp.i.i = icmp slt i32 %5, %3
  br i1 %cmp.i.i, label %if.then.i.i, label %if.then5.i.for.body10.lr.ph.i_crit_edge

if.then5.i.for.body10.lr.ph.i_crit_edge:          ; preds = %if.then5.i
  %m_data11.i.phi.trans.insert = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 1, i32 5
  %.pre = load ptr, ptr %m_data11.i.phi.trans.insert, align 8, !tbaa !39
  br label %for.body10.lr.ph.i

if.then.i.i:                                      ; preds = %if.then5.i
  %tobool.not.i.i.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %3 to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 2
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !40
  br label %_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %6 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %4, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %6, 0
  %m_data.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 1, i32 5
  %7 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !39
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIfE4copyEiiPf.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i
  %8 = ptrtoint ptr %7 to i64
  %retval.0.i.i.i415 = ptrtoint ptr %retval.0.i.i.i to i64
  %wide.trip.count.i.i.i = zext i32 %6 to i64
  %min.iters.check = icmp ult i32 %6, 8
  %9 = sub i64 %retval.0.i.i.i415, %8
  %diff.check = icmp ult i64 %9, 32
  %or.cond = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond, label %for.body.i.i.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i.i
  %n.vec = and i64 %wide.trip.count.i.i.i, 4294967288
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %10 = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %index
  %11 = getelementptr inbounds float, ptr %7, i64 %index
  %wide.load = load <4 x float>, ptr %11, align 4, !tbaa !137
  %12 = getelementptr inbounds float, ptr %11, i64 4
  %wide.load416 = load <4 x float>, ptr %12, align 4, !tbaa !137
  store <4 x float> %wide.load, ptr %10, align 4, !tbaa !137
  %13 = getelementptr inbounds float, ptr %10, i64 4
  store <4 x float> %wide.load416, ptr %13, align 4, !tbaa !137
  %index.next = add nuw i64 %index, 8
  %14 = icmp eq i64 %index.next, %n.vec
  br i1 %14, label %middle.block, label %vector.body, !llvm.loop !374

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i.i
  br i1 %cmp.n, label %if.then.i11.i.i, label %for.body.i.i.i.preheader

for.body.i.i.i.preheader:                         ; preds = %for.body.lr.ph.i.i.i, %middle.block
  %indvars.iv.i.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %n.vec, %middle.block ]
  %15 = xor i64 %indvars.iv.i.i.i.ph, -1
  %16 = add nsw i64 %15, %wide.trip.count.i.i.i
  %xtraiter = and i64 %wide.trip.count.i.i.i, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol

for.body.i.i.i.prol:                              ; preds = %for.body.i.i.i.preheader, %for.body.i.i.i.prol
  %indvars.iv.i.i.i.prol = phi i64 [ %indvars.iv.next.i.i.i.prol, %for.body.i.i.i.prol ], [ %indvars.iv.i.i.i.ph, %for.body.i.i.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.i.i.prol ], [ 0, %for.body.i.i.i.preheader ]
  %arrayidx.i.i.i.prol = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.prol
  %arrayidx3.i.i.i.prol = getelementptr inbounds float, ptr %7, i64 %indvars.iv.i.i.i.prol
  %17 = load float, ptr %arrayidx3.i.i.i.prol, align 4, !tbaa !137
  store float %17, ptr %arrayidx.i.i.i.prol, align 4, !tbaa !137
  %indvars.iv.next.i.i.i.prol = add nuw nsw i64 %indvars.iv.i.i.i.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol, !llvm.loop !375

for.body.i.i.i.prol.loopexit:                     ; preds = %for.body.i.i.i.prol, %for.body.i.i.i.preheader
  %indvars.iv.i.i.i.unr = phi i64 [ %indvars.iv.i.i.i.ph, %for.body.i.i.i.preheader ], [ %indvars.iv.next.i.i.i.prol, %for.body.i.i.i.prol ]
  %18 = icmp ult i64 %16, 3
  br i1 %18, label %if.then.i11.i.i, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i
  %indvars.iv.i.i.i = phi i64 [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ], [ %indvars.iv.i.i.i.unr, %for.body.i.i.i.prol.loopexit ]
  %arrayidx.i.i.i = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %arrayidx3.i.i.i = getelementptr inbounds float, ptr %7, i64 %indvars.iv.i.i.i
  %19 = load float, ptr %arrayidx3.i.i.i, align 4, !tbaa !137
  store float %19, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %indvars.iv.next.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %arrayidx3.i.i.i.1 = getelementptr inbounds float, ptr %7, i64 %indvars.iv.next.i.i.i
  %20 = load float, ptr %arrayidx3.i.i.i.1, align 4, !tbaa !137
  store float %20, ptr %arrayidx.i.i.i.1, align 4, !tbaa !137
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %arrayidx3.i.i.i.2 = getelementptr inbounds float, ptr %7, i64 %indvars.iv.next.i.i.i.1
  %21 = load float, ptr %arrayidx3.i.i.i.2, align 4, !tbaa !137
  store float %21, ptr %arrayidx.i.i.i.2, align 4, !tbaa !137
  %indvars.iv.next.i.i.i.2 = add nuw nsw i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %arrayidx3.i.i.i.3 = getelementptr inbounds float, ptr %7, i64 %indvars.iv.next.i.i.i.2
  %22 = load float, ptr %arrayidx3.i.i.i.3, align 4, !tbaa !137
  store float %22, ptr %arrayidx.i.i.i.3, align 4, !tbaa !137
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %exitcond.not.i.i.i.3 = icmp eq i64 %indvars.iv.next.i.i.i.3, %wide.trip.count.i.i.i
  br i1 %exitcond.not.i.i.i.3, label %if.then.i11.i.i, label %for.body.i.i.i, !llvm.loop !376

_ZNK20btAlignedObjectArrayIfE4copyEiiPf.exit.i.i: ; preds = %_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i
  %tobool.not.i10.i.i = icmp eq ptr %7, null
  br i1 %tobool.not.i10.i.i, label %if.end.thread36.i, label %if.then.i11.i.i

if.end.thread36.i:                                ; preds = %_ZNK20btAlignedObjectArrayIfE4copyEiiPf.exit.i.i
  %m_ownsMemory.i37.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 1, i32 6
  store i8 1, ptr %m_ownsMemory.i37.i, align 8, !tbaa !36
  store ptr %retval.0.i.i.i, ptr %m_data.i.i.i, align 8, !tbaa !39
  store i32 %3, ptr %m_capacity.i.i.i, align 8, !tbaa !41
  br label %for.body10.lr.ph.i

if.then.i11.i.i:                                  ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i, %middle.block, %_ZNK20btAlignedObjectArrayIfE4copyEiiPf.exit.i.i
  %m_ownsMemory.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 1, i32 6
  %23 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !36, !range !159, !noundef !192
  %tobool2.not.i.i.i = icmp eq i8 %23, 0
  br i1 %tobool2.not.i.i.i, label %if.end.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %if.then.i11.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %7)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i.i.i, %if.then.i11.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !36
  store ptr %retval.0.i.i.i, ptr %m_data.i.i.i, align 8, !tbaa !39
  store i32 %3, ptr %m_capacity.i.i.i, align 8, !tbaa !41
  br label %for.body10.lr.ph.i

for.body10.lr.ph.i:                               ; preds = %if.then5.i.for.body10.lr.ph.i_crit_edge, %if.end.i, %if.end.thread36.i
  %24 = phi ptr [ %.pre, %if.then5.i.for.body10.lr.ph.i_crit_edge ], [ %retval.0.i.i.i, %if.end.i ], [ %retval.0.i.i.i, %if.end.thread36.i ]
  %25 = sext i32 %4 to i64
  %wide.trip.count.i = sext i32 %3 to i64
  %26 = shl nsw i64 %25, 2
  %scevgep = getelementptr i8, ptr %24, i64 %26
  %27 = sub nsw i64 %wide.trip.count.i, %25
  %28 = shl nsw i64 %27, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %scevgep, i8 0, i64 %28, i1 false), !tbaa !137
  %.pre395 = load i32, ptr %m_size.i224, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit

_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit:    ; preds = %for.body10.lr.ph.i, %for.body
  %29 = phi i32 [ %.pre395, %for.body10.lr.ph.i ], [ %3, %for.body ]
  store i32 %3, ptr %m_size.i.i, align 4, !tbaa !40
  %cmp8375 = icmp sgt i32 %29, 0
  br i1 %cmp8375, label %for.body9.lr.ph, label %for.cond.cleanup.thread

for.cond.cleanup.thread:                          ; preds = %_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit
  %.pre397 = load float, ptr %m_imass, align 4, !tbaa !373
  %div24403 = fdiv float 1.000000e+00, %.pre397
  store float %div24403, ptr %m_imass, align 4, !tbaa !373
  br label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit

for.body9.lr.ph:                                  ; preds = %_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit
  %m_data.i240 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %2, i64 0, i32 5
  %30 = load ptr, ptr %m_data.i240, align 8, !tbaa !320
  %m_data.i249 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 1, i32 5
  %m_containsAnchor = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 22
  %31 = load ptr, ptr %m_data.i249, align 8, !tbaa !39
  %wide.trip.count = zext i32 %29 to i64
  br label %for.body9

for.cond.cleanup:                                 ; preds = %if.end
  %div24 = fdiv float 1.000000e+00, %add
  store float %div24, ptr %m_imass, align 4, !tbaa !373
  br i1 %cmp8375, label %for.body.lr.ph.i, label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit

for.body.lr.ph.i:                                 ; preds = %for.cond.cleanup
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %2, i64 0, i32 5
  %32 = load ptr, ptr %m_data.i.i, align 8, !tbaa !320
  %m_data.i20.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 1, i32 5
  %33 = load ptr, ptr %m_data.i20.i, align 8, !tbaa !39
  %xtraiter423 = and i64 %wide.trip.count, 1
  %34 = icmp eq i32 %29, 1
  br i1 %34, label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i228 = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i229.1, %for.body.i ]
  %com.sroa.10.041.i = phi float [ 0.000000e+00, %for.body.lr.ph.i.new ], [ %add13.i.i.1, %for.body.i ]
  %35 = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i.new ], [ %51, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.1, %for.body.i ]
  %arrayidx.i.i = getelementptr inbounds ptr, ptr %32, i64 %indvars.iv.i228
  %36 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !219
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %36, i64 0, i32 1
  %arrayidx.i22.i = getelementptr inbounds float, ptr %33, i64 %indvars.iv.i228
  %37 = load float, ptr %arrayidx.i22.i, align 4, !tbaa !137
  %38 = load <2 x float>, ptr %m_x.i, align 4, !tbaa !137
  %39 = insertelement <2 x float> poison, float %37, i64 0
  %40 = shufflevector <2 x float> %39, <2 x float> poison, <2 x i32> zeroinitializer
  %41 = fmul <2 x float> %38, %40
  %arrayidx7.i26.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %36, i64 0, i32 1, i32 0, i64 2
  %42 = load float, ptr %arrayidx7.i26.i, align 4, !tbaa !137
  %mul8.i27.i = fmul float %37, %42
  %43 = fadd <2 x float> %35, %41
  %add13.i.i = fadd float %com.sroa.10.041.i, %mul8.i27.i
  %indvars.iv.next.i229 = or i64 %indvars.iv.i228, 1
  %arrayidx.i.i.1 = getelementptr inbounds ptr, ptr %32, i64 %indvars.iv.next.i229
  %44 = load ptr, ptr %arrayidx.i.i.1, align 8, !tbaa !219
  %m_x.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %44, i64 0, i32 1
  %arrayidx.i22.i.1 = getelementptr inbounds float, ptr %33, i64 %indvars.iv.next.i229
  %45 = load float, ptr %arrayidx.i22.i.1, align 4, !tbaa !137
  %46 = load <2 x float>, ptr %m_x.i.1, align 4, !tbaa !137
  %47 = insertelement <2 x float> poison, float %45, i64 0
  %48 = shufflevector <2 x float> %47, <2 x float> poison, <2 x i32> zeroinitializer
  %49 = fmul <2 x float> %46, %48
  %arrayidx7.i26.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %44, i64 0, i32 1, i32 0, i64 2
  %50 = load float, ptr %arrayidx7.i26.i.1, align 4, !tbaa !137
  %mul8.i27.i.1 = fmul float %45, %50
  %51 = fadd <2 x float> %43, %49
  %add13.i.i.1 = fadd float %add13.i.i, %mul8.i27.i.1
  %indvars.iv.next.i229.1 = add nuw nsw i64 %indvars.iv.i228, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa, label %for.body.i

_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa: ; preds = %for.body.i, %for.body.lr.ph.i
  %.lcssa.ph = phi <2 x float> [ undef, %for.body.lr.ph.i ], [ %51, %for.body.i ]
  %add13.i.i.lcssa.ph = phi float [ undef, %for.body.lr.ph.i ], [ %add13.i.i.1, %for.body.i ]
  %indvars.iv.i228.unr = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i229.1, %for.body.i ]
  %com.sroa.10.041.i.unr = phi float [ 0.000000e+00, %for.body.lr.ph.i ], [ %add13.i.i.1, %for.body.i ]
  %.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i ], [ %51, %for.body.i ]
  %lcmp.mod424.not = icmp eq i64 %xtraiter423, 0
  br i1 %lcmp.mod424.not, label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit, label %for.body.i.epil

for.body.i.epil:                                  ; preds = %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa
  %arrayidx.i.i.epil = getelementptr inbounds ptr, ptr %32, i64 %indvars.iv.i228.unr
  %52 = load ptr, ptr %arrayidx.i.i.epil, align 8, !tbaa !219
  %m_x.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %52, i64 0, i32 1
  %arrayidx.i22.i.epil = getelementptr inbounds float, ptr %33, i64 %indvars.iv.i228.unr
  %53 = load float, ptr %arrayidx.i22.i.epil, align 4, !tbaa !137
  %54 = load <2 x float>, ptr %m_x.i.epil, align 4, !tbaa !137
  %55 = insertelement <2 x float> poison, float %53, i64 0
  %56 = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> zeroinitializer
  %57 = fmul <2 x float> %54, %56
  %arrayidx7.i26.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %52, i64 0, i32 1, i32 0, i64 2
  %58 = load float, ptr %arrayidx7.i26.i.epil, align 4, !tbaa !137
  %mul8.i27.i.epil = fmul float %53, %58
  %59 = fadd <2 x float> %.unr, %57
  %add13.i.i.epil = fadd float %com.sroa.10.041.i.unr, %mul8.i27.i.epil
  br label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit

_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit:  ; preds = %for.body.i.epil, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa, %for.cond.cleanup.thread, %for.cond.cleanup
  %div24404 = phi float [ %div24, %for.cond.cleanup ], [ %div24403, %for.cond.cleanup.thread ], [ %div24, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa ], [ %div24, %for.body.i.epil ]
  %com.sroa.10.0.lcssa.i = phi float [ 0.000000e+00, %for.cond.cleanup ], [ 0.000000e+00, %for.cond.cleanup.thread ], [ %add13.i.i.lcssa.ph, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa ], [ %add13.i.i.epil, %for.body.i.epil ]
  %60 = phi <2 x float> [ zeroinitializer, %for.cond.cleanup ], [ zeroinitializer, %for.cond.cleanup.thread ], [ %.lcssa.ph, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa ], [ %59, %for.body.i.epil ]
  %61 = insertelement <2 x float> poison, float %div24404, i64 0
  %62 = shufflevector <2 x float> %61, <2 x float> poison, <2 x i32> zeroinitializer
  %63 = fmul <2 x float> %62, %60
  %mul8.i.i = fmul float %div24404, %com.sroa.10.0.lcssa.i
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i, i64 0
  %m_com = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 8
  store <2 x float> %63, ptr %m_com, align 8, !tbaa.struct !163
  %ref.tmp26.sroa.4.0.m_com.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 8, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i, ptr %ref.tmp26.sroa.4.0.m_com.sroa_idx, align 8, !tbaa.struct !165
  %m_lv = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 13
  %m_locii = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6
  %arrayidx.i237 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 2
  %ref.tmp36.sroa.5.0.arrayidx.i237.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 2, i32 0, i64 2
  %ref.tmp36.sroa.6.0.arrayidx.i237.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 2, i32 0, i64 3
  %arrayidx.i238 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %m_lv, i8 0, i64 40, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) %m_locii, i8 0, i64 48, i1 false)
  br i1 %cmp8375, label %for.body48.lr.ph, label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.for.end111_crit_edge

_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.for.end111_crit_edge: ; preds = %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit
  %arrayidx114.phi.trans.insert = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 0, i32 0, i64 1
  %arrayidx120.phi.trans.insert = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 0, i32 0, i64 2
  %.pre399 = load float, ptr %arrayidx120.phi.trans.insert, align 4, !tbaa !137
  %arrayidx126.phi.trans.insert = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 1, i32 0, i64 2
  %.pre398 = load float, ptr %arrayidx114.phi.trans.insert, align 4, !tbaa !137
  %.pre400 = load float, ptr %arrayidx126.phi.trans.insert, align 4, !tbaa !137
  %arrayidx3.i.i.phi.trans.insert = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 1, i32 0, i64 1
  %.pre401 = load float, ptr %arrayidx3.i.i.phi.trans.insert, align 4, !tbaa !137, !noalias !377
  %64 = insertelement <2 x float> poison, float %.pre398, i64 0
  %65 = insertelement <2 x float> %64, float %.pre400, i64 1
  %66 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %.pre401, i64 0
  br label %for.end111

for.body48.lr.ph:                                 ; preds = %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit
  %m_data.i255 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %2, i64 0, i32 5
  %67 = load ptr, ptr %m_data.i255, align 8, !tbaa !320
  %m_data.i270 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 1, i32 5
  %68 = load ptr, ptr %m_data.i270, align 8, !tbaa !39
  %arrayidx72 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 1, i32 0, i64 1
  %arrayidx88 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 0, i32 0, i64 1
  %arrayidx97 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 0, i32 0, i64 2
  %arrayidx107 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 1, i32 0, i64 2
  %arrayidx72.promoted = load float, ptr %arrayidx72, align 4, !tbaa !137
  %arrayidx97.promoted = load float, ptr %arrayidx97, align 4, !tbaa !137
  %arrayidx88.promoted = load float, ptr %arrayidx88, align 4, !tbaa !137
  %arrayidx107.promoted = load float, ptr %arrayidx107, align 4, !tbaa !137
  %wide.trip.count387 = zext i32 %29 to i64
  %69 = insertelement <2 x float> poison, float %arrayidx88.promoted, i64 0
  %70 = insertelement <2 x float> %69, float %arrayidx107.promoted, i64 1
  %71 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %arrayidx72.promoted, i64 0
  br label %for.body48

for.body9:                                        ; preds = %for.body9.lr.ph, %if.end
  %indvars.iv = phi i64 [ 0, %for.body9.lr.ph ], [ %indvars.iv.next, %if.end ]
  %arrayidx.i242 = getelementptr inbounds ptr, ptr %30, i64 %indvars.iv
  %72 = load ptr, ptr %arrayidx.i242, align 8, !tbaa !219
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %72, i64 0, i32 6
  %73 = load float, ptr %m_im, align 8, !tbaa !175
  %cmp12 = fcmp oeq float %73, 0.000000e+00
  %arrayidx.i245 = getelementptr inbounds float, ptr %31, i64 %indvars.iv
  br i1 %cmp12, label %if.then, label %if.else

if.then:                                          ; preds = %for.body9
  store i8 1, ptr %m_containsAnchor, align 8, !tbaa !345
  br label %if.end

if.else:                                          ; preds = %for.body9
  %div = fdiv float 1.000000e+00, %73
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %div.sink = phi float [ %div, %if.else ], [ 0x43ABC16D60000000, %if.then ]
  store float %div.sink, ptr %arrayidx.i245, align 4, !tbaa !137
  %74 = load float, ptr %m_imass, align 4, !tbaa !373
  %add = fadd float %div.sink, %74
  store float %add, ptr %m_imass, align 4, !tbaa !373
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body9

for.body48:                                       ; preds = %for.body48.lr.ph, %for.body48
  %indvars.iv384 = phi i64 [ 0, %for.body48.lr.ph ], [ %indvars.iv.next385, %for.body48 ]
  %75 = phi float [ %arrayidx97.promoted, %for.body48.lr.ph ], [ %104, %for.body48 ]
  %76 = phi float [ 0.000000e+00, %for.body48.lr.ph ], [ %89, %for.body48 ]
  %77 = phi <2 x float> [ %70, %for.body48.lr.ph ], [ %101, %for.body48 ]
  %78 = phi <2 x float> [ %71, %for.body48.lr.ph ], [ %94, %for.body48 ]
  %arrayidx.i257 = getelementptr inbounds ptr, ptr %67, i64 %indvars.iv384
  %79 = load ptr, ptr %arrayidx.i257, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %79, i64 0, i32 1
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %79, i64 0, i32 1, i32 0, i64 2
  %80 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %sub14.i = fsub float %80, %mul8.i.i
  %arrayidx.i272 = getelementptr inbounds float, ptr %68, i64 %indvars.iv384
  %81 = load float, ptr %arrayidx.i272, align 4, !tbaa !137
  %82 = fneg float %81
  %83 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %84 = fsub <2 x float> %83, %63
  %85 = fmul <2 x float> %84, %84
  %86 = insertelement <2 x float> %84, float %sub14.i, i64 0
  %87 = fmul <2 x float> %86, %86
  %shift = shufflevector <2 x float> %87, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %88 = fadd <2 x float> %shift, %87
  %add61 = extractelement <2 x float> %88, i64 0
  %89 = tail call float @llvm.fmuladd.f32(float %81, float %add61, float %76)
  store float %89, ptr %m_locii, align 4, !tbaa !137
  %90 = shufflevector <2 x float> %85, <2 x float> poison, <2 x i32> zeroinitializer
  %91 = fadd <2 x float> %90, %87
  %92 = insertelement <2 x float> poison, float %81, i64 0
  %93 = shufflevector <2 x float> %92, <2 x float> poison, <2 x i32> zeroinitializer
  %94 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %93, <2 x float> %91, <2 x float> %78)
  %95 = extractelement <2 x float> %94, i64 0
  store float %95, ptr %arrayidx72, align 4, !tbaa !137
  %96 = extractelement <2 x float> %94, i64 1
  store float %96, ptr %ref.tmp36.sroa.5.0.arrayidx.i237.sroa_idx, align 4, !tbaa !137
  %97 = insertelement <2 x float> poison, float %82, i64 0
  %98 = shufflevector <2 x float> %97, <2 x float> poison, <2 x i32> zeroinitializer
  %99 = fmul <2 x float> %84, %98
  %100 = shufflevector <2 x float> %86, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %101 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %99, <2 x float> %100, <2 x float> %77)
  %102 = extractelement <2 x float> %101, i64 0
  store float %102, ptr %arrayidx88, align 4, !tbaa !137
  %103 = extractelement <2 x float> %99, i64 0
  %104 = tail call float @llvm.fmuladd.f32(float %103, float %sub14.i, float %75)
  store float %104, ptr %arrayidx97, align 4, !tbaa !137
  %105 = extractelement <2 x float> %101, i64 1
  store float %105, ptr %arrayidx107, align 4, !tbaa !137
  %indvars.iv.next385 = add nuw nsw i64 %indvars.iv384, 1
  %exitcond388.not = icmp eq i64 %indvars.iv.next385, %wide.trip.count387
  br i1 %exitcond388.not, label %for.end111, label %for.body48

for.end111:                                       ; preds = %for.body48, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.for.end111_crit_edge
  %106 = phi float [ 0.000000e+00, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.for.end111_crit_edge ], [ %89, %for.body48 ]
  %107 = phi float [ %.pre399, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.for.end111_crit_edge ], [ %104, %for.body48 ]
  %108 = phi <2 x float> [ %65, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.for.end111_crit_edge ], [ %101, %for.body48 ]
  %109 = phi <2 x float> [ %66, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.for.end111_crit_edge ], [ %94, %for.body48 ]
  %arrayidx114 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 0, i32 0, i64 1
  %arrayidx126 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 1, i32 0, i64 2
  %arrayidx3.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 1, i32 0, i64 1
  %110 = shufflevector <2 x float> %108, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %111 = extractelement <2 x float> %108, i64 1
  %112 = fneg float %111
  %neg.i.i = fmul float %111, %112
  %113 = extractelement <2 x float> %109, i64 0
  %114 = extractelement <2 x float> %109, i64 1
  %115 = tail call float @llvm.fmuladd.f32(float %113, float %114, float %neg.i.i)
  %116 = insertelement <2 x float> %110, float %107, i64 0
  %117 = fneg <2 x float> %116
  %118 = extractelement <2 x float> %117, i64 0
  %neg.i71.i = fmul float %107, %118
  %119 = tail call float @llvm.fmuladd.f32(float %106, float %114, float %neg.i71.i)
  %shift417 = shufflevector <2 x float> %117, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %120 = fmul <2 x float> %108, %shift417
  %neg.i84.i = extractelement <2 x float> %120, i64 0
  %121 = tail call float @llvm.fmuladd.f32(float %106, float %113, float %neg.i84.i)
  %122 = fmul <2 x float> %109, %117
  %123 = shufflevector <2 x float> %108, <2 x float> %116, <2 x i32> <i32 1, i32 2>
  %124 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %108, <2 x float> %123, <2 x float> %122)
  %shift418 = shufflevector <2 x float> %124, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %125 = fmul <2 x float> %shift418, %108
  %mul8.i.i281 = extractelement <2 x float> %125, i64 0
  %126 = tail call float @llvm.fmuladd.f32(float %106, float %115, float %mul8.i.i281)
  %ref.tmp130.sroa.6.0.m_locii.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 0, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp130.sroa.6.0.m_locii.sroa_idx, align 4, !tbaa.struct !318
  %ref.tmp130.sroa.11.16.arrayidx7.i285.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 1, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp130.sroa.11.16.arrayidx7.i285.sroa_idx, align 4, !tbaa.struct !318
  %127 = insertelement <2 x float> %109, float %106, i64 1
  %128 = fneg <2 x float> %127
  %129 = insertelement <2 x float> %108, float %107, i64 0
  %130 = fmul <2 x float> %129, %128
  %131 = insertelement <2 x float> %108, float %107, i64 1
  %132 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %131, <2 x float> %110, <2 x float> %130)
  %133 = extractelement <2 x float> %132, i64 0
  %134 = tail call float @llvm.fmuladd.f32(float %107, float %133, float %126)
  %div.i = fdiv float 1.000000e+00, %134
  %mul.i282 = fmul float %115, %div.i
  %135 = insertelement <2 x float> poison, float %div.i, i64 0
  %136 = shufflevector <2 x float> %135, <2 x float> poison, <2 x i32> zeroinitializer
  %137 = fmul <2 x float> %124, %136
  %mul21.i = fmul float %119, %div.i
  %138 = fmul <2 x float> %132, %136
  %mul33.i = fmul float %121, %div.i
  store float %mul.i282, ptr %m_locii, align 4, !tbaa.struct !163
  %139 = shufflevector <2 x float> %137, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  store <2 x float> %139, ptr %arrayidx114, align 4
  %140 = extractelement <2 x float> %137, i64 1
  store float %140, ptr %arrayidx.i238, align 4, !tbaa.struct !163
  store float %mul21.i, ptr %arrayidx3.i.i, align 4, !tbaa.struct !293
  %141 = extractelement <2 x float> %138, i64 1
  store float %141, ptr %arrayidx126, align 4, !tbaa.struct !165
  store <2 x float> %138, ptr %arrayidx.i237, align 4
  store float %mul33.i, ptr %ref.tmp36.sroa.5.0.arrayidx.i237.sroa_idx, align 4, !tbaa.struct !165
  store float 0.000000e+00, ptr %ref.tmp36.sroa.6.0.arrayidx.i237.sroa_idx, align 4, !tbaa.struct !318
  %m_framexform = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 3
  store float 1.000000e+00, ptr %m_framexform, align 4, !tbaa !137
  %arrayidx3.i.i.i.i287 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 3, i32 0, i32 0, i64 0, i32 0, i64 1
  %arrayidx3.i6.i.i.i288 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 3, i32 0, i32 0, i64 1, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i.i287, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i.i288, align 4, !tbaa !137
  %arrayidx5.i7.i.i.i289 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 3, i32 0, i32 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i.i290 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 3, i32 0, i32 0, i64 2, i32 0, i64 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i7.i.i.i289, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i.i290, align 4, !tbaa !137
  %arrayidx7.i11.i.i.i291 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 3, i32 0, i32 0, i64 2, i32 0, i64 3
  store i32 0, ptr %arrayidx7.i11.i.i.i291, align 4
  %m_origin.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 3, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %m_origin.i, ptr noundef nonnull align 4 dereferenceable(16) %m_com, i64 16, i1 false), !tbaa.struct !163
  %m_size.i.i293 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 2, i32 2
  %142 = load i32, ptr %m_size.i.i293, align 4, !tbaa !34
  %cmp4.i295 = icmp slt i32 %142, %29
  br i1 %cmp4.i295, label %if.then5.i299, label %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit

if.then5.i299:                                    ; preds = %for.end111
  %m_capacity.i.i.i297 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 2, i32 3
  %143 = load i32, ptr %m_capacity.i.i.i297, align 8, !tbaa !35
  %cmp.i.i298 = icmp slt i32 %143, %29
  br i1 %cmp.i.i298, label %if.then.i.i301, label %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit

if.then.i.i301:                                   ; preds = %if.then5.i299
  %tobool.not.i.i.i300 = icmp eq i32 %29, 0
  br i1 %tobool.not.i.i.i300, label %_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i, label %if.then.i.i.i306

if.then.i.i.i306:                                 ; preds = %if.then.i.i301
  %conv.i.i.i.i302 = sext i32 %29 to i64
  %mul.i.i.i.i303 = shl nsw i64 %conv.i.i.i.i302, 4
  %call.i.i.i.i304 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i303, i32 noundef 16)
  %.pre.i305 = load i32, ptr %m_size.i.i293, align 4, !tbaa !34
  br label %_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i: ; preds = %if.then.i.i.i306, %if.then.i.i301
  %144 = phi i32 [ %.pre.i305, %if.then.i.i.i306 ], [ %142, %if.then.i.i301 ]
  %retval.0.i.i.i307 = phi ptr [ %call.i.i.i.i304, %if.then.i.i.i306 ], [ null, %if.then.i.i301 ]
  %cmp7.i.i.i308 = icmp sgt i32 %144, 0
  br i1 %cmp7.i.i.i308, label %for.body.lr.ph.i.i.i311, label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i

for.body.lr.ph.i.i.i311:                          ; preds = %_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i
  %m_data.i.i.i309 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 2, i32 5
  %wide.trip.count.i.i.i310 = zext i32 %144 to i64
  %xtraiter427 = and i64 %wide.trip.count.i.i.i310, 1
  %145 = icmp eq i32 %144, 1
  br i1 %145, label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i311.new

for.body.lr.ph.i.i.i311.new:                      ; preds = %for.body.lr.ph.i.i.i311
  %unroll_iter429 = and i64 %wide.trip.count.i.i.i310, 4294967294
  br label %for.body.i.i.i317

for.body.i.i.i317:                                ; preds = %for.body.i.i.i317, %for.body.lr.ph.i.i.i311.new
  %indvars.iv.i.i.i312 = phi i64 [ 0, %for.body.lr.ph.i.i.i311.new ], [ %indvars.iv.next.i.i.i315.1, %for.body.i.i.i317 ]
  %niter430 = phi i64 [ 0, %for.body.lr.ph.i.i.i311.new ], [ %niter430.next.1, %for.body.i.i.i317 ]
  %arrayidx.i.i.i313 = getelementptr inbounds %class.btVector3, ptr %retval.0.i.i.i307, i64 %indvars.iv.i.i.i312
  %146 = load ptr, ptr %m_data.i.i.i309, align 8, !tbaa !33
  %arrayidx3.i.i.i314 = getelementptr inbounds %class.btVector3, ptr %146, i64 %indvars.iv.i.i.i312
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx.i.i.i313, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i314, i64 16, i1 false), !tbaa.struct !163
  %indvars.iv.next.i.i.i315 = or i64 %indvars.iv.i.i.i312, 1
  %arrayidx.i.i.i313.1 = getelementptr inbounds %class.btVector3, ptr %retval.0.i.i.i307, i64 %indvars.iv.next.i.i.i315
  %147 = load ptr, ptr %m_data.i.i.i309, align 8, !tbaa !33
  %arrayidx3.i.i.i314.1 = getelementptr inbounds %class.btVector3, ptr %147, i64 %indvars.iv.next.i.i.i315
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx.i.i.i313.1, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i314.1, i64 16, i1 false), !tbaa.struct !163
  %indvars.iv.next.i.i.i315.1 = add nuw nsw i64 %indvars.iv.i.i.i312, 2
  %niter430.next.1 = add i64 %niter430, 2
  %niter430.ncmp.1 = icmp eq i64 %niter430.next.1, %unroll_iter429
  br i1 %niter430.ncmp.1, label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i317

_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i317, %for.body.lr.ph.i.i.i311
  %indvars.iv.i.i.i312.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i311 ], [ %indvars.iv.next.i.i.i315.1, %for.body.i.i.i317 ]
  %lcmp.mod428.not = icmp eq i64 %xtraiter427, 0
  br i1 %lcmp.mod428.not, label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i, label %for.body.i.i.i317.epil

for.body.i.i.i317.epil:                           ; preds = %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i313.epil = getelementptr inbounds %class.btVector3, ptr %retval.0.i.i.i307, i64 %indvars.iv.i.i.i312.unr
  %148 = load ptr, ptr %m_data.i.i.i309, align 8, !tbaa !33
  %arrayidx3.i.i.i314.epil = getelementptr inbounds %class.btVector3, ptr %148, i64 %indvars.iv.i.i.i312.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx.i.i.i313.epil, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i314.epil, i64 16, i1 false), !tbaa.struct !163
  br label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i

_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i: ; preds = %for.body.i.i.i317.epil, %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 2, i32 5
  %149 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !33
  %tobool.not.i10.i.i318 = icmp eq ptr %149, null
  %m_ownsMemory.i.i.i319 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 2, i32 6
  %150 = load i8, ptr %m_ownsMemory.i.i.i319, align 8, !range !159
  %tobool2.not.i.i.i320 = icmp eq i8 %150, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i318, i1 true, i1 %tobool2.not.i.i.i320
  br i1 %or.cond.i.i, label %if.end.i322, label %if.then3.i.i.i321

if.then3.i.i.i321:                                ; preds = %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %149)
  br label %if.end.i322

if.end.i322:                                      ; preds = %if.then3.i.i.i321, %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i319, align 8, !tbaa !30
  store ptr %retval.0.i.i.i307, ptr %m_data.i9.i.i, align 8, !tbaa !33
  store i32 %29, ptr %m_capacity.i.i.i297, align 8, !tbaa !35
  br label %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit

_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit: ; preds = %if.end.i322, %if.then5.i299, %for.end111
  store i32 %29, ptr %m_size.i.i293, align 4, !tbaa !34
  br i1 %cmp8375, label %for.body142.lr.ph, label %for.end154

for.body142.lr.ph:                                ; preds = %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit
  %m_data.i332 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %2, i64 0, i32 5
  %m_data.i347 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 2, i32 5
  br label %for.body142

for.body142:                                      ; preds = %for.body142.lr.ph, %for.body142
  %indvars.iv389 = phi i64 [ 0, %for.body142.lr.ph ], [ %indvars.iv.next390, %for.body142 ]
  %151 = load ptr, ptr %m_data.i332, align 8, !tbaa !320
  %arrayidx.i334 = getelementptr inbounds ptr, ptr %151, i64 %indvars.iv389
  %152 = load ptr, ptr %arrayidx.i334, align 8, !tbaa !219
  %m_x146 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %152, i64 0, i32 1
  %153 = load <2 x float>, ptr %m_x146, align 4, !tbaa !137
  %154 = load <2 x float>, ptr %m_com, align 4, !tbaa !137
  %155 = fsub <2 x float> %153, %154
  %arrayidx11.i339 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %152, i64 0, i32 1, i32 0, i64 2
  %156 = load float, ptr %arrayidx11.i339, align 4, !tbaa !137
  %157 = load float, ptr %ref.tmp26.sroa.4.0.m_com.sroa_idx, align 4, !tbaa !137
  %sub14.i341 = fsub float %156, %157
  %retval.sroa.3.12.vec.insert.i344 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i341, i64 0
  %158 = load ptr, ptr %m_data.i347, align 8, !tbaa !33
  %arrayidx.i349 = getelementptr inbounds %class.btVector3, ptr %158, i64 %indvars.iv389
  store <2 x float> %155, ptr %arrayidx.i349, align 4, !tbaa.struct !163
  %ref.tmp143.sroa.4.0.call151.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i349, i64 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i344, ptr %ref.tmp143.sroa.4.0.call151.sroa_idx, align 4, !tbaa.struct !165
  %indvars.iv.next390 = add nuw nsw i64 %indvars.iv389, 1
  %159 = load i32, ptr %m_size.i.i293, align 4, !tbaa !34
  %160 = sext i32 %159 to i64
  %cmp141 = icmp slt i64 %indvars.iv.next390, %160
  br i1 %cmp141, label %for.body142, label %for.end154

for.end154:                                       ; preds = %for.body142, %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit
  %indvars.iv.next393 = add nuw nsw i64 %indvars.iv392, 1
  %161 = load i32, ptr %m_size.i, align 4, !tbaa !124
  %162 = sext i32 %161 to i64
  %cmp = icmp slt i64 %indvars.iv.next393, %162
  br i1 %cmp, label %for.body, label %for.end157

for.end157:                                       ; preds = %for.end154, %entry
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody14updateClustersEv(ptr noundef nonnull align 8 dereferenceable(1496) %this) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %m = alloca %class.btMatrix3x3, align 4
  %r = alloca %class.btMatrix3x3, align 4
  %s = alloca %class.btMatrix3x3, align 4
  %bounds = alloca %struct.btDbvtAabbMm, align 16
  %ref.tmp316 = alloca %class.btVector3, align 8
  tail call void @_ZN15CProfileManager13Start_ProfileEPKc(ptr noundef nonnull @.str)
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !124
  %cmp782 = icmp sgt i32 %0, 0
  br i1 %cmp782, label %for.body.lr.ph, label %for.end352

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %arrayidx.i449 = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 2
  %ref.tmp.sroa.4.0.arrayidx.i449.sroa_idx = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 2, i32 0, i64 1
  %ref.tmp.sroa.5.0.arrayidx.i449.sroa_idx = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 2, i32 0, i64 2
  %arrayidx.i450 = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 1
  %arrayidx34 = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 1, i32 0, i64 1
  %arrayidx7.i471 = getelementptr inbounds [4 x float], ptr %m, i64 0, i64 1
  %arrayidx12.i488 = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 1, i32 0, i64 2
  %arrayidx5.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %r, i64 0, i64 1
  %arrayidx9.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %r, i64 0, i64 2
  %mx2.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %bounds, i64 0, i32 1
  %m_cdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3
  %1 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp316, i64 0, i32 1
  %radmrg = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end347
  %2 = phi i32 [ %0, %for.body.lr.ph ], [ %318, %if.end347 ]
  %indvars.iv798 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next799, %if.end347 ]
  %3 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %arrayidx.i = getelementptr inbounds ptr, ptr %3, i64 %indvars.iv798
  %4 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %m_size.i448 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %4, i64 0, i32 2
  %5 = load i32, ptr %m_size.i448, align 4, !tbaa !319
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %if.end347, label %invoke.cont14

invoke.cont14:                                    ; preds = %for.body
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %m) #38
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %r) #38
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %s) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) %m, i8 0, i64 48, i1 false)
  store float 0x3F2A36E2E0000000, ptr %arrayidx34, align 4, !tbaa !137
  store float 0x3F33A92A20000000, ptr %ref.tmp.sroa.5.0.arrayidx.i449.sroa_idx, align 4, !tbaa !137
  %cmp38.i = icmp sgt i32 %5, 0
  br i1 %cmp38.i, label %for.body.lr.ph.i, label %invoke.cont42

for.body.lr.ph.i:                                 ; preds = %invoke.cont14
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %4, i64 0, i32 5
  %6 = load ptr, ptr %m_data.i.i, align 8, !tbaa !320
  %m_data.i20.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 1, i32 5
  %7 = load ptr, ptr %m_data.i20.i, align 8, !tbaa !39
  %wide.trip.count.i = zext i32 %5 to i64
  %xtraiter = and i64 %wide.trip.count.i, 1
  %8 = icmp eq i32 %5, 1
  br i1 %8, label %invoke.cont42.loopexit.unr-lcssa, label %for.body.lr.ph.i.new

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %wide.trip.count.i, 4294967294
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.1, %for.body.i ]
  %com.sroa.10.041.i = phi float [ 0.000000e+00, %for.body.lr.ph.i.new ], [ %add13.i.i.1, %for.body.i ]
  %9 = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i.new ], [ %25, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.1, %for.body.i ]
  %arrayidx.i.i = getelementptr inbounds ptr, ptr %6, i64 %indvars.iv.i
  %10 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !219
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %10, i64 0, i32 1
  %arrayidx.i22.i = getelementptr inbounds float, ptr %7, i64 %indvars.iv.i
  %11 = load float, ptr %arrayidx.i22.i, align 4, !tbaa !137
  %12 = load <2 x float>, ptr %m_x.i, align 4, !tbaa !137
  %13 = insertelement <2 x float> poison, float %11, i64 0
  %14 = shufflevector <2 x float> %13, <2 x float> poison, <2 x i32> zeroinitializer
  %15 = fmul <2 x float> %14, %12
  %arrayidx7.i26.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %10, i64 0, i32 1, i32 0, i64 2
  %16 = load float, ptr %arrayidx7.i26.i, align 4, !tbaa !137
  %mul8.i27.i = fmul float %11, %16
  %17 = fadd <2 x float> %9, %15
  %add13.i.i = fadd float %com.sroa.10.041.i, %mul8.i27.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds ptr, ptr %6, i64 %indvars.iv.next.i
  %18 = load ptr, ptr %arrayidx.i.i.1, align 8, !tbaa !219
  %m_x.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 0, i32 1
  %arrayidx.i22.i.1 = getelementptr inbounds float, ptr %7, i64 %indvars.iv.next.i
  %19 = load float, ptr %arrayidx.i22.i.1, align 4, !tbaa !137
  %20 = load <2 x float>, ptr %m_x.i.1, align 4, !tbaa !137
  %21 = insertelement <2 x float> poison, float %19, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> zeroinitializer
  %23 = fmul <2 x float> %22, %20
  %arrayidx7.i26.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 0, i32 1, i32 0, i64 2
  %24 = load float, ptr %arrayidx7.i26.i.1, align 4, !tbaa !137
  %mul8.i27.i.1 = fmul float %19, %24
  %25 = fadd <2 x float> %17, %23
  %add13.i.i.1 = fadd float %add13.i.i, %mul8.i27.i.1
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %invoke.cont42.loopexit.unr-lcssa, label %for.body.i

invoke.cont42.loopexit.unr-lcssa:                 ; preds = %for.body.i, %for.body.lr.ph.i
  %.lcssa.ph = phi <2 x float> [ undef, %for.body.lr.ph.i ], [ %25, %for.body.i ]
  %add13.i.i.lcssa.ph = phi float [ undef, %for.body.lr.ph.i ], [ %add13.i.i.1, %for.body.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i.1, %for.body.i ]
  %com.sroa.10.041.i.unr = phi float [ 0.000000e+00, %for.body.lr.ph.i ], [ %add13.i.i.1, %for.body.i ]
  %.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i ], [ %25, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %invoke.cont42, label %for.body.i.epil

for.body.i.epil:                                  ; preds = %invoke.cont42.loopexit.unr-lcssa
  %arrayidx.i.i.epil = getelementptr inbounds ptr, ptr %6, i64 %indvars.iv.i.unr
  %26 = load ptr, ptr %arrayidx.i.i.epil, align 8, !tbaa !219
  %m_x.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %26, i64 0, i32 1
  %arrayidx.i22.i.epil = getelementptr inbounds float, ptr %7, i64 %indvars.iv.i.unr
  %27 = load float, ptr %arrayidx.i22.i.epil, align 4, !tbaa !137
  %28 = load <2 x float>, ptr %m_x.i.epil, align 4, !tbaa !137
  %29 = insertelement <2 x float> poison, float %27, i64 0
  %30 = shufflevector <2 x float> %29, <2 x float> poison, <2 x i32> zeroinitializer
  %31 = fmul <2 x float> %30, %28
  %arrayidx7.i26.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %26, i64 0, i32 1, i32 0, i64 2
  %32 = load float, ptr %arrayidx7.i26.i.epil, align 4, !tbaa !137
  %mul8.i27.i.epil = fmul float %27, %32
  %33 = fadd <2 x float> %.unr, %31
  %add13.i.i.epil = fadd float %com.sroa.10.041.i.unr, %mul8.i27.i.epil
  br label %invoke.cont42

invoke.cont42:                                    ; preds = %for.body.i.epil, %invoke.cont42.loopexit.unr-lcssa, %invoke.cont14
  %com.sroa.10.0.lcssa.i = phi float [ 0.000000e+00, %invoke.cont14 ], [ %add13.i.i.lcssa.ph, %invoke.cont42.loopexit.unr-lcssa ], [ %add13.i.i.epil, %for.body.i.epil ]
  %34 = phi <2 x float> [ zeroinitializer, %invoke.cont14 ], [ %.lcssa.ph, %invoke.cont42.loopexit.unr-lcssa ], [ %33, %for.body.i.epil ]
  %m_imass.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 5
  %35 = load float, ptr %m_imass.i, align 4, !tbaa !137
  %36 = insertelement <2 x float> poison, float %35, i64 0
  %37 = shufflevector <2 x float> %36, <2 x float> poison, <2 x i32> zeroinitializer
  %38 = fmul <2 x float> %34, %37
  %mul8.i.i = fmul float %com.sroa.10.0.lcssa.i, %35
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i, i64 0
  %m_com = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 8
  store <2 x float> %38, ptr %m_com, align 8, !tbaa.struct !163
  %ref.tmp40.sroa.5.0.m_com.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 8, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i, ptr %ref.tmp40.sroa.5.0.m_com.sroa_idx, align 8, !tbaa.struct !165
  %arrayidx.i450.promoted = load float, ptr %arrayidx.i450, align 4, !tbaa !137
  %39 = insertelement <2 x float> <float 0x3F1A36E2E0000000, float poison>, float %arrayidx.i450.promoted, i64 1
  br i1 %cmp38.i, label %invoke.cont92.lr.ph, label %for.cond.cleanup

invoke.cont92.lr.ph:                              ; preds = %invoke.cont42
  %m_data.i454 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %4, i64 0, i32 5
  %40 = load ptr, ptr %m_data.i454, align 8, !tbaa !320
  %m_data.i459 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 2, i32 5
  %41 = load ptr, ptr %m_data.i459, align 8, !tbaa !33
  %42 = load <2 x float>, ptr %arrayidx7.i471, align 4, !tbaa !137
  %arrayidx12.i488.promoted = load float, ptr %arrayidx12.i488, align 4, !tbaa !137
  %wide.trip.count = zext i32 %5 to i64
  %43 = insertelement <2 x float> <float 0x3F2A36E2E0000000, float poison>, float %arrayidx12.i488.promoted, i64 1
  br label %invoke.cont92

for.cond45.for.cond.cleanup_crit_edge:            ; preds = %invoke.cont92
  store <2 x float> %162, ptr %arrayidx7.i471, align 4, !tbaa !137
  store <2 x float> %166, ptr %arrayidx34, align 4, !tbaa !137
  store <2 x float> %170, ptr %ref.tmp.sroa.4.0.arrayidx.i449.sroa_idx, align 4, !tbaa !137
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond45.for.cond.cleanup_crit_edge, %invoke.cont42
  %.lcssa750 = phi float [ %add.i501, %for.cond45.for.cond.cleanup_crit_edge ], [ 0.000000e+00, %invoke.cont42 ]
  %44 = phi <2 x float> [ %165, %for.cond45.for.cond.cleanup_crit_edge ], [ %39, %invoke.cont42 ]
  %45 = extractelement <2 x float> %44, i64 0
  store float %45, ptr %m, align 4, !tbaa !137
  %46 = extractelement <2 x float> %44, i64 1
  store float %46, ptr %arrayidx.i450, align 4, !tbaa !137
  store float %.lcssa750, ptr %arrayidx.i449, align 4, !tbaa !137
  call fastcc void @_ZL14PolarDecomposeRK11btMatrix3x3RS_S2_(ptr noundef nonnull align 4 dereferenceable(48) %m, ptr noundef nonnull align 4 dereferenceable(48) %r, ptr noundef nonnull align 4 dereferenceable(48) %s)
  %m_framexform = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3
  %m_origin.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %m_origin.i, ptr noundef nonnull align 4 dereferenceable(16) %m_com, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %m_framexform, ptr noundef nonnull align 4 dereferenceable(16) %r, i64 16, i1 false), !tbaa.struct !163
  %arrayidx7.i.i508 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx7.i.i508, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx11.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx11.i.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx9.i.i, i64 16, i1 false), !tbaa.struct !163
  %m_locii = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 6
  %47 = load float, ptr %m_locii, align 4, !tbaa !137, !noalias !380
  %arrayidx4.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 6, i32 0, i64 1
  %48 = load float, ptr %arrayidx4.i.i, align 4, !tbaa !137, !noalias !380
  %arrayidx.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 0, i32 0, i64 1
  %arrayidx9.i.i509 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 6, i32 0, i64 2
  %49 = load float, ptr %arrayidx9.i.i509, align 4, !tbaa !137, !noalias !380
  %arrayidx.i14.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i42.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 6, i32 0, i64 0, i32 0, i64 1
  %50 = load float, ptr %arrayidx.i.i42.i, align 4, !tbaa !137, !noalias !380
  %arrayidx.i14.i43.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 6, i32 0, i64 1, i32 0, i64 1
  %arrayidx.i16.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 6, i32 0, i64 2, i32 0, i64 1
  %51 = load float, ptr %arrayidx.i16.i.i, align 4, !tbaa !137, !noalias !380
  %arrayidx.i.i45.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 6, i32 0, i64 0, i32 0, i64 2
  %52 = load float, ptr %arrayidx.i.i45.i, align 4, !tbaa !137, !noalias !380
  %arrayidx.i14.i46.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 6, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i16.i49.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 6, i32 0, i64 2, i32 0, i64 2
  %53 = load float, ptr %arrayidx.i16.i49.i, align 4, !tbaa !137, !noalias !380
  %arrayidx.i.i52.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1, i32 0, i64 1
  %arrayidx.i14.i55.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1, i32 0, i64 2
  %54 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137, !noalias !192
  %arrayidx.i.i72.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 2, i32 0, i64 1
  %55 = load float, ptr %arrayidx.i.i72.i, align 4, !tbaa !137, !noalias !192
  %mul7.i73.i = fmul float %48, %55
  %56 = call float @llvm.fmuladd.f32(float %47, float %54, float %mul7.i73.i)
  %arrayidx.i14.i75.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 2, i32 0, i64 2
  %57 = load float, ptr %arrayidx.i14.i75.i, align 4, !tbaa !137, !noalias !192
  %58 = call float @llvm.fmuladd.f32(float %49, float %57, float %56)
  %59 = load float, ptr %arrayidx.i14.i43.i, align 4, !tbaa !137, !noalias !380
  %60 = load float, ptr %arrayidx.i14.i46.i, align 4, !tbaa !137, !noalias !380
  %61 = insertelement <2 x float> poison, float %48, i64 0
  %62 = shufflevector <2 x float> %61, <2 x float> poison, <2 x i32> zeroinitializer
  %63 = insertelement <2 x float> poison, float %47, i64 0
  %64 = shufflevector <2 x float> %63, <2 x float> poison, <2 x i32> zeroinitializer
  %65 = insertelement <2 x float> poison, float %49, i64 0
  %66 = shufflevector <2 x float> %65, <2 x float> poison, <2 x i32> zeroinitializer
  %67 = insertelement <2 x float> poison, float %59, i64 0
  %68 = insertelement <2 x float> poison, float %50, i64 0
  %69 = shufflevector <2 x float> %68, <2 x float> poison, <2 x i32> zeroinitializer
  %70 = insertelement <2 x float> poison, float %51, i64 0
  %71 = shufflevector <2 x float> %70, <2 x float> poison, <2 x i32> zeroinitializer
  %72 = insertelement <2 x float> poison, float %60, i64 0
  %73 = insertelement <2 x float> poison, float %52, i64 0
  %74 = shufflevector <2 x float> %73, <2 x float> poison, <2 x i32> zeroinitializer
  %75 = insertelement <2 x float> poison, float %53, i64 0
  %76 = shufflevector <2 x float> %75, <2 x float> poison, <2 x i32> zeroinitializer
  %mul7.i80.i = fmul float %59, %55
  %77 = call float @llvm.fmuladd.f32(float %50, float %54, float %mul7.i80.i)
  %78 = call float @llvm.fmuladd.f32(float %51, float %57, float %77)
  %mul7.i87.i = fmul float %60, %55
  %79 = call float @llvm.fmuladd.f32(float %52, float %54, float %mul7.i87.i)
  %80 = call float @llvm.fmuladd.f32(float %53, float %57, float %79)
  %81 = insertelement <2 x float> poison, float %55, i64 0
  %82 = shufflevector <2 x float> %81, <2 x float> poison, <2 x i32> zeroinitializer
  %83 = insertelement <2 x float> poison, float %54, i64 0
  %84 = shufflevector <2 x float> %83, <2 x float> poison, <2 x i32> zeroinitializer
  %85 = insertelement <2 x float> poison, float %57, i64 0
  %86 = shufflevector <2 x float> %85, <2 x float> poison, <2 x i32> zeroinitializer
  %mul7.i87.i548 = fmul float %55, %78
  %87 = call float @llvm.fmuladd.f32(float %54, float %58, float %mul7.i87.i548)
  %88 = call float @llvm.fmuladd.f32(float %57, float %80, float %87)
  %m_invwi = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7
  %ref.tmp107.sroa.5.0.m_invwi.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %ref.tmp107.sroa.6.0.m_invwi.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %ref.tmp107.sroa.7.0.m_invwi.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7, i32 0, i64 0, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp107.sroa.7.0.m_invwi.sroa_idx, align 4, !tbaa.struct !318
  %arrayidx7.i561 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7, i32 0, i64 1
  %ref.tmp107.sroa.11.16.arrayidx7.i561.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %ref.tmp107.sroa.12.16.arrayidx7.i561.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7, i32 0, i64 1, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp107.sroa.12.16.arrayidx7.i561.sroa_idx, align 4, !tbaa.struct !318
  %arrayidx11.i562 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7, i32 0, i64 2
  %89 = load float, ptr %m_framexform, align 4, !tbaa !137, !noalias !192
  %90 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137, !noalias !192
  %91 = load float, ptr %arrayidx.i14.i.i, align 4, !tbaa !137, !noalias !192
  %92 = load float, ptr %arrayidx7.i.i508, align 4, !tbaa !137, !noalias !192
  %93 = load float, ptr %arrayidx.i.i52.i, align 4, !tbaa !137, !noalias !192
  %94 = insertelement <2 x float> poison, float %90, i64 0
  %95 = insertelement <2 x float> %94, float %93, i64 1
  %96 = fmul <2 x float> %62, %95
  %97 = insertelement <2 x float> poison, float %89, i64 0
  %98 = insertelement <2 x float> %97, float %92, i64 1
  %99 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %64, <2 x float> %98, <2 x float> %96)
  %100 = load float, ptr %arrayidx.i14.i55.i, align 4, !tbaa !137, !noalias !192
  %101 = insertelement <2 x float> poison, float %91, i64 0
  %102 = insertelement <2 x float> %101, float %100, i64 1
  %103 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %66, <2 x float> %102, <2 x float> %99)
  %104 = insertelement <2 x float> %94, float %59, i64 1
  %105 = insertelement <2 x float> %67, float %93, i64 1
  %106 = fmul <2 x float> %104, %105
  %107 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %69, <2 x float> %98, <2 x float> %106)
  %108 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %71, <2 x float> %102, <2 x float> %107)
  %109 = insertelement <2 x float> %94, float %60, i64 1
  %110 = insertelement <2 x float> %72, float %93, i64 1
  %111 = fmul <2 x float> %109, %110
  %112 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %74, <2 x float> %98, <2 x float> %111)
  %113 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %76, <2 x float> %102, <2 x float> %112)
  %114 = shufflevector <2 x float> %94, <2 x float> poison, <2 x i32> zeroinitializer
  %115 = fmul <2 x float> %114, %108
  %116 = shufflevector <2 x float> %97, <2 x float> poison, <2 x i32> zeroinitializer
  %117 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %116, <2 x float> %103, <2 x float> %115)
  %118 = shufflevector <2 x float> %101, <2 x float> poison, <2 x i32> zeroinitializer
  %119 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %118, <2 x float> %113, <2 x float> %117)
  %120 = shufflevector <2 x float> %110, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %121 = fmul <2 x float> %108, %120
  %122 = shufflevector <2 x float> %98, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %123 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %122, <2 x float> %103, <2 x float> %121)
  %124 = shufflevector <2 x float> %102, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %125 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %124, <2 x float> %113, <2 x float> %123)
  %126 = fmul <2 x float> %108, %82
  %127 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %84, <2 x float> %103, <2 x float> %126)
  %128 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %86, <2 x float> %113, <2 x float> %127)
  %129 = insertelement <2 x float> poison, float %78, i64 0
  %130 = shufflevector <2 x float> %129, <2 x float> poison, <2 x i32> zeroinitializer
  %131 = fmul <2 x float> %95, %130
  %132 = insertelement <2 x float> poison, float %58, i64 0
  %133 = shufflevector <2 x float> %132, <2 x float> poison, <2 x i32> zeroinitializer
  %134 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %98, <2 x float> %133, <2 x float> %131)
  %135 = insertelement <2 x float> poison, float %80, i64 0
  %136 = shufflevector <2 x float> %135, <2 x float> poison, <2 x i32> zeroinitializer
  %137 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %102, <2 x float> %136, <2 x float> %134)
  %138 = extractelement <2 x float> %119, i64 0
  store float %138, ptr %m_invwi, align 4, !tbaa.struct !163
  %139 = extractelement <2 x float> %125, i64 0
  store float %139, ptr %ref.tmp107.sroa.5.0.m_invwi.sroa_idx, align 4, !tbaa.struct !293
  %140 = extractelement <2 x float> %128, i64 0
  store float %140, ptr %ref.tmp107.sroa.6.0.m_invwi.sroa_idx, align 4, !tbaa.struct !165
  %141 = shufflevector <2 x float> %119, <2 x float> %125, <2 x i32> <i32 1, i32 3>
  store <2 x float> %141, ptr %arrayidx7.i561, align 4
  %142 = extractelement <2 x float> %128, i64 1
  store float %142, ptr %ref.tmp107.sroa.11.16.arrayidx7.i561.sroa_idx, align 4, !tbaa.struct !165
  store <2 x float> %137, ptr %arrayidx11.i562, align 4
  %ref.tmp107.sroa.16.32.arrayidx11.i562.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  store float %88, ptr %ref.tmp107.sroa.16.32.arrayidx11.i562.sroa_idx, align 4, !tbaa.struct !165
  %ref.tmp107.sroa.17.32.arrayidx11.i562.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7, i32 0, i64 2, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp107.sroa.17.32.arrayidx11.i562.sroa_idx, align 4, !tbaa.struct !318
  %m_lv = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 13
  %ref.tmp126.sroa.5.0.m_lv.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 13, i32 0, i64 2
  %m_av = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 14
  %ref.tmp136.sroa.5.0.m_av.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 14, i32 0, i64 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %m_lv, i8 0, i64 32, i1 false)
  br i1 %cmp38.i, label %invoke.cont173.lr.ph, label %invoke.cont213

invoke.cont173.lr.ph:                             ; preds = %for.cond.cleanup
  %m_data.i569 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %4, i64 0, i32 5
  %143 = load ptr, ptr %m_data.i569, align 8, !tbaa !320
  %m_data.i572 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 1, i32 5
  %144 = load ptr, ptr %m_data.i572, align 8, !tbaa !39
  %arrayidx7.i594 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 8, i32 0, i64 1
  %wide.trip.count788 = zext i32 %5 to i64
  %.pre = load float, ptr %m_com, align 4, !tbaa !137
  %145 = load <2 x float>, ptr %arrayidx7.i594, align 4, !tbaa !137
  br label %invoke.cont173

invoke.cont92:                                    ; preds = %invoke.cont92.lr.ph, %invoke.cont92
  %indvars.iv = phi i64 [ 0, %invoke.cont92.lr.ph ], [ %indvars.iv.next, %invoke.cont92 ]
  %146 = phi float [ 0.000000e+00, %invoke.cont92.lr.ph ], [ %add.i501, %invoke.cont92 ]
  %147 = phi <2 x float> [ %39, %invoke.cont92.lr.ph ], [ %165, %invoke.cont92 ]
  %148 = phi <2 x float> [ %42, %invoke.cont92.lr.ph ], [ %162, %invoke.cont92 ]
  %149 = phi <2 x float> [ %43, %invoke.cont92.lr.ph ], [ %166, %invoke.cont92 ]
  %150 = phi <2 x float> [ <float 0.000000e+00, float 0x3F33A92A20000000>, %invoke.cont92.lr.ph ], [ %170, %invoke.cont92 ]
  %arrayidx.i456 = getelementptr inbounds ptr, ptr %40, i64 %indvars.iv
  %151 = load ptr, ptr %arrayidx.i456, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %151, i64 0, i32 1
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %151, i64 0, i32 1, i32 0, i64 2
  %152 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %sub14.i = fsub float %152, %mul8.i.i
  %arrayidx.i461 = getelementptr inbounds %class.btVector3, ptr %41, i64 %indvars.iv
  %153 = load float, ptr %arrayidx.i461, align 4, !tbaa !137
  %arrayidx3.i.i = getelementptr inbounds [4 x float], ptr %arrayidx.i461, i64 0, i64 1
  %154 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %155 = fsub <2 x float> %154, %38
  %156 = load <2 x float>, ptr %arrayidx3.i.i, align 4, !tbaa !137
  %157 = shufflevector <2 x float> %155, <2 x float> poison, <2 x i32> zeroinitializer
  %158 = fmul <2 x float> %157, %156
  %159 = insertelement <2 x float> poison, float %153, i64 0
  %160 = shufflevector <2 x float> %159, <2 x float> poison, <2 x i32> zeroinitializer
  %161 = fmul <2 x float> %155, %160
  %162 = fadd <2 x float> %158, %148
  %163 = shufflevector <2 x float> %155, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %164 = fmul <2 x float> %163, %156
  %165 = fadd <2 x float> %161, %147
  %166 = fadd <2 x float> %164, %149
  %mul.i.i490 = fmul float %sub14.i, %153
  %167 = insertelement <2 x float> poison, float %sub14.i, i64 0
  %168 = shufflevector <2 x float> %167, <2 x float> poison, <2 x i32> zeroinitializer
  %169 = fmul <2 x float> %168, %156
  %add.i501 = fadd float %mul.i.i490, %146
  %170 = fadd <2 x float> %169, %150
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond45.for.cond.cleanup_crit_edge, label %invoke.cont92

invoke.cont173:                                   ; preds = %invoke.cont173.lr.ph, %invoke.cont173
  %indvars.iv785 = phi i64 [ 0, %invoke.cont173.lr.ph ], [ %indvars.iv.next786, %invoke.cont173 ]
  %171 = phi float [ 0.000000e+00, %invoke.cont173.lr.ph ], [ %add13.i619, %invoke.cont173 ]
  %172 = phi float [ 0.000000e+00, %invoke.cont173.lr.ph ], [ %add13.i588, %invoke.cont173 ]
  %173 = phi <2 x float> [ zeroinitializer, %invoke.cont173.lr.ph ], [ %182, %invoke.cont173 ]
  %174 = phi <2 x float> [ zeroinitializer, %invoke.cont173.lr.ph ], [ %199, %invoke.cont173 ]
  %arrayidx.i571 = getelementptr inbounds ptr, ptr %143, i64 %indvars.iv785
  %175 = load ptr, ptr %arrayidx.i571, align 8, !tbaa !219
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %175, i64 0, i32 3
  %arrayidx.i574 = getelementptr inbounds float, ptr %144, i64 %indvars.iv785
  %176 = load float, ptr %arrayidx.i574, align 4, !tbaa !137
  %arrayidx7.i576 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %175, i64 0, i32 3, i32 0, i64 2
  %177 = load float, ptr %arrayidx7.i576, align 4, !tbaa !137
  %mul8.i = fmul float %176, %177
  %178 = load <2 x float>, ptr %m_v, align 4, !tbaa !137
  %179 = insertelement <2 x float> poison, float %176, i64 0
  %180 = shufflevector <2 x float> %179, <2 x float> poison, <2 x i32> zeroinitializer
  %181 = fmul <2 x float> %180, %178
  %182 = fadd <2 x float> %181, %173
  store <2 x float> %182, ptr %m_lv, align 4, !tbaa !137
  %add13.i588 = fadd float %mul8.i, %172
  store float %add13.i588, ptr %ref.tmp126.sroa.5.0.m_lv.sroa_idx, align 4, !tbaa !137
  %m_x168 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %175, i64 0, i32 1
  %183 = load float, ptr %m_x168, align 4, !tbaa !137
  %sub.i592 = fsub float %183, %.pre
  %arrayidx5.i593 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %175, i64 0, i32 1, i32 0, i64 1
  %184 = extractelement <2 x float> %181, i64 1
  %185 = extractelement <2 x float> %181, i64 0
  %186 = load <2 x float>, ptr %arrayidx5.i593, align 4, !tbaa !137
  %187 = fsub <2 x float> %186, %145
  %188 = shufflevector <2 x float> %187, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %189 = insertelement <2 x float> %188, float %sub.i592, i64 1
  %190 = fneg <2 x float> %189
  %191 = shufflevector <2 x float> %181, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %192 = insertelement <2 x float> %191, float %mul8.i, i64 1
  %193 = fmul <2 x float> %192, %190
  %194 = insertelement <2 x float> %191, float %mul8.i, i64 0
  %195 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %187, <2 x float> %194, <2 x float> %193)
  %196 = extractelement <2 x float> %187, i64 0
  %197 = fneg float %196
  %neg30.i.i = fmul float %185, %197
  %198 = call float @llvm.fmuladd.f32(float %sub.i592, float %184, float %neg30.i.i)
  %199 = fadd <2 x float> %174, %195
  store <2 x float> %199, ptr %m_av, align 4, !tbaa !137
  %add13.i619 = fadd float %198, %171
  store float %add13.i619, ptr %ref.tmp136.sroa.5.0.m_av.sroa_idx, align 4, !tbaa !137
  %indvars.iv.next786 = add nuw nsw i64 %indvars.iv785, 1
  %exitcond789.not = icmp eq i64 %indvars.iv.next786, %wide.trip.count788
  br i1 %exitcond789.not, label %invoke.cont213.loopexit, label %invoke.cont173

invoke.cont213.loopexit:                          ; preds = %invoke.cont173
  %200 = extractelement <2 x float> %199, i64 1
  %201 = extractelement <2 x float> %199, i64 0
  br label %invoke.cont213

invoke.cont213:                                   ; preds = %invoke.cont213.loopexit, %for.cond.cleanup
  %202 = phi float [ 0.000000e+00, %for.cond.cleanup ], [ %add13.i619, %invoke.cont213.loopexit ]
  %203 = phi float [ 0.000000e+00, %for.cond.cleanup ], [ %200, %invoke.cont213.loopexit ]
  %204 = phi float [ 0.000000e+00, %for.cond.cleanup ], [ %201, %invoke.cont213.loopexit ]
  %205 = phi float [ 0.000000e+00, %for.cond.cleanup ], [ %add13.i588, %invoke.cont213.loopexit ]
  %206 = phi <2 x float> [ zeroinitializer, %for.cond.cleanup ], [ %182, %invoke.cont213.loopexit ]
  %207 = load float, ptr %m_imass.i, align 4, !tbaa !137
  %mul8.i.i624 = fmul float %207, %205
  %m_ldamping = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 17
  %208 = load float, ptr %m_ldamping, align 4, !tbaa !383
  %sub = fsub float 1.000000e+00, %208
  %209 = insertelement <2 x float> poison, float %207, i64 0
  %210 = shufflevector <2 x float> %209, <2 x float> poison, <2 x i32> zeroinitializer
  %211 = fmul <2 x float> %206, %210
  %212 = insertelement <2 x float> poison, float %sub, i64 0
  %213 = shufflevector <2 x float> %212, <2 x float> poison, <2 x i32> zeroinitializer
  %214 = fmul <2 x float> %211, %213
  %mul8.i634 = fmul float %mul8.i.i624, %sub
  %retval.sroa.3.12.vec.insert.i637 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i634, i64 0
  store <2 x float> %214, ptr %m_lv, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i637, ptr %ref.tmp126.sroa.5.0.m_lv.sroa_idx, align 8, !tbaa.struct !165
  %215 = insertelement <2 x float> poison, float %203, i64 0
  %216 = shufflevector <2 x float> %215, <2 x float> poison, <2 x i32> zeroinitializer
  %217 = fmul <2 x float> %125, %216
  %218 = extractelement <2 x float> %137, i64 1
  %mul8.i20.i = fmul float %203, %218
  %219 = extractelement <2 x float> %137, i64 0
  %220 = call float @llvm.fmuladd.f32(float %219, float %204, float %mul8.i20.i)
  %221 = call float @llvm.fmuladd.f32(float %88, float %202, float %220)
  %m_adamping = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 18
  %222 = load float, ptr %m_adamping, align 8, !tbaa !384
  %sub211 = fsub float 1.000000e+00, %222
  %223 = insertelement <2 x float> poison, float %204, i64 0
  %224 = shufflevector <2 x float> %223, <2 x float> poison, <2 x i32> zeroinitializer
  %225 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %119, <2 x float> %224, <2 x float> %217)
  %226 = insertelement <2 x float> poison, float %202, i64 0
  %227 = shufflevector <2 x float> %226, <2 x float> poison, <2 x i32> zeroinitializer
  %228 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %128, <2 x float> %227, <2 x float> %225)
  %229 = insertelement <2 x float> poison, float %sub211, i64 0
  %230 = shufflevector <2 x float> %229, <2 x float> poison, <2 x i32> zeroinitializer
  %231 = fmul <2 x float> %228, %230
  %mul8.i653 = fmul float %sub211, %221
  %retval.sroa.3.12.vec.insert.i656 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i653, i64 0
  store <2 x float> %231, ptr %m_av, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i656, ptr %ref.tmp136.sroa.5.0.m_av.sroa_idx, align 8, !tbaa.struct !165
  %m_vimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 9
  %m_matching = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %m_vimpulses, i8 0, i64 72, i1 false)
  %232 = load float, ptr %m_matching, align 4, !tbaa !385
  %cmp246 = fcmp ogt float %232, 0.000000e+00
  br i1 %cmp246, label %for.cond248.preheader, label %if.end

for.cond248.preheader:                            ; preds = %invoke.cont213
  %233 = load i32, ptr %m_size.i448, align 4, !tbaa !319
  %cmp253762 = icmp sgt i32 %233, 0
  br i1 %cmp253762, label %invoke.cont273.lr.ph, label %if.end

invoke.cont273.lr.ph:                             ; preds = %for.cond248.preheader
  %m_data.i666 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %4, i64 0, i32 5
  %m_data.i669 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 2, i32 5
  %arrayidx.i32.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 1, i32 0, i64 2
  br label %invoke.cont273

invoke.cont273:                                   ; preds = %invoke.cont273.lr.ph, %invoke.cont273
  %indvars.iv790 = phi i64 [ 0, %invoke.cont273.lr.ph ], [ %indvars.iv.next791, %invoke.cont273 ]
  %234 = load ptr, ptr %m_data.i666, align 8, !tbaa !320
  %arrayidx.i668 = getelementptr inbounds ptr, ptr %234, i64 %indvars.iv790
  %235 = load ptr, ptr %arrayidx.i668, align 8, !tbaa !219
  %236 = load ptr, ptr %m_data.i669, align 8, !tbaa !33
  %arrayidx.i671 = getelementptr inbounds %class.btVector3, ptr %236, i64 %indvars.iv790
  %237 = load float, ptr %arrayidx.i671, align 4, !tbaa !137
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %arrayidx.i671, i64 0, i64 1
  %238 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %arrayidx.i671, i64 0, i64 2
  %239 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %240 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %241 = load float, ptr %arrayidx.i.i72.i, align 4, !tbaa !137
  %mul8.i29.i.i = fmul float %238, %241
  %242 = call float @llvm.fmuladd.f32(float %240, float %237, float %mul8.i29.i.i)
  %243 = load float, ptr %arrayidx.i14.i75.i, align 4, !tbaa !137
  %244 = call float @llvm.fmuladd.f32(float %243, float %239, float %242)
  %245 = load float, ptr %arrayidx.i32.i.i, align 4, !tbaa !137
  %add17.i.i = fadd float %245, %244
  %m_x270 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %235, i64 0, i32 1
  %246 = load float, ptr %m_matching, align 4, !tbaa !385
  %arrayidx13.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %235, i64 0, i32 1, i32 0, i64 2
  %247 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %add17.i.i, %247
  %mul8.i.i685 = fmul float %246, %sub14.i.i
  %248 = load float, ptr %m_framexform, align 4, !tbaa !137
  %249 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %250 = load float, ptr %arrayidx.i14.i.i, align 4, !tbaa !137
  %251 = load float, ptr %arrayidx7.i.i508, align 4, !tbaa !137
  %252 = load float, ptr %arrayidx.i.i52.i, align 4, !tbaa !137
  %253 = insertelement <2 x float> poison, float %238, i64 0
  %254 = shufflevector <2 x float> %253, <2 x float> poison, <2 x i32> zeroinitializer
  %255 = insertelement <2 x float> poison, float %249, i64 0
  %256 = insertelement <2 x float> %255, float %252, i64 1
  %257 = fmul <2 x float> %254, %256
  %258 = insertelement <2 x float> poison, float %248, i64 0
  %259 = insertelement <2 x float> %258, float %251, i64 1
  %260 = insertelement <2 x float> poison, float %237, i64 0
  %261 = shufflevector <2 x float> %260, <2 x float> poison, <2 x i32> zeroinitializer
  %262 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %259, <2 x float> %261, <2 x float> %257)
  %263 = load float, ptr %arrayidx.i14.i55.i, align 4, !tbaa !137
  %264 = insertelement <2 x float> poison, float %250, i64 0
  %265 = insertelement <2 x float> %264, float %263, i64 1
  %266 = insertelement <2 x float> poison, float %239, i64 0
  %267 = shufflevector <2 x float> %266, <2 x float> poison, <2 x i32> zeroinitializer
  %268 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %265, <2 x float> %267, <2 x float> %262)
  %269 = load <2 x float>, ptr %m_origin.i, align 4, !tbaa !137
  %270 = fadd <2 x float> %268, %269
  %271 = load <2 x float>, ptr %m_x270, align 4, !tbaa !137
  %272 = fsub <2 x float> %270, %271
  %273 = insertelement <2 x float> poison, float %246, i64 0
  %274 = shufflevector <2 x float> %273, <2 x float> poison, <2 x i32> zeroinitializer
  %275 = fmul <2 x float> %274, %272
  %276 = fadd <2 x float> %271, %275
  %add14.i.i = fadd float %247, %mul8.i.i685
  %retval.sroa.3.12.vec.insert.i20.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i, i64 0
  store <2 x float> %276, ptr %m_x270, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i20.i, ptr %arrayidx13.i.i, align 8, !tbaa.struct !165
  %indvars.iv.next791 = add nuw nsw i64 %indvars.iv790, 1
  %277 = load i32, ptr %m_size.i448, align 4, !tbaa !319
  %278 = sext i32 %277 to i64
  %cmp253 = icmp slt i64 %indvars.iv.next791, %278
  br i1 %cmp253, label %invoke.cont273, label %if.end

if.end:                                           ; preds = %invoke.cont273, %for.cond248.preheader, %invoke.cont213
  %m_collide = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 23
  %279 = load i8, ptr %m_collide, align 1, !tbaa !346, !range !159, !noundef !192
  %tobool284.not = icmp eq i8 %279, 0
  br i1 %tobool284.not, label %if.end342, label %if.then285

if.then285:                                       ; preds = %if.end
  %m_data.i688 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %4, i64 0, i32 5
  %280 = load ptr, ptr %m_data.i688, align 8, !tbaa !320
  %281 = load ptr, ptr %280, align 8, !tbaa !219
  %m_x290 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %281, i64 0, i32 1
  %282 = load <4 x float>, ptr %m_x290, align 8
  %cmp293764 = icmp sgt i32 %5, 1
  br i1 %cmp293764, label %for.body295.preheader, label %invoke.cont312

for.body295.preheader:                            ; preds = %if.then285
  %wide.trip.count796 = zext i32 %5 to i64
  %283 = add nsw i64 %wide.trip.count796, -1
  %xtraiter815 = and i64 %283, 1
  %284 = icmp eq i32 %5, 2
  br i1 %284, label %invoke.cont312.loopexit.unr-lcssa, label %for.body295.preheader.new

for.body295.preheader.new:                        ; preds = %for.body295.preheader
  %unroll_iter821 = and i64 %283, -2
  br label %for.body295

for.body295:                                      ; preds = %for.body295, %for.body295.preheader.new
  %indvars.iv793 = phi i64 [ 1, %for.body295.preheader.new ], [ %indvars.iv.next794.1, %for.body295 ]
  %285 = phi <4 x float> [ %282, %for.body295.preheader.new ], [ %296, %for.body295 ]
  %286 = phi <4 x float> [ %282, %for.body295.preheader.new ], [ %298, %for.body295 ]
  %niter822 = phi i64 [ 0, %for.body295.preheader.new ], [ %niter822.next.1, %for.body295 ]
  %arrayidx.i691 = getelementptr inbounds ptr, ptr %280, i64 %indvars.iv793
  %287 = load ptr, ptr %arrayidx.i691, align 8, !tbaa !219
  %m_x300 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %287, i64 0, i32 1
  %288 = load <4 x float>, ptr %m_x300, align 4, !tbaa !137
  %289 = fcmp olt <4 x float> %288, %285
  %290 = select <4 x i1> %289, <4 x float> %288, <4 x float> %285
  %291 = fcmp olt <4 x float> %286, %288
  %292 = select <4 x i1> %291, <4 x float> %288, <4 x float> %286
  %indvars.iv.next794 = add nuw nsw i64 %indvars.iv793, 1
  %arrayidx.i691.1 = getelementptr inbounds ptr, ptr %280, i64 %indvars.iv.next794
  %293 = load ptr, ptr %arrayidx.i691.1, align 8, !tbaa !219
  %m_x300.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %293, i64 0, i32 1
  %294 = load <4 x float>, ptr %m_x300.1, align 4, !tbaa !137
  %295 = fcmp olt <4 x float> %294, %290
  %296 = select <4 x i1> %295, <4 x float> %294, <4 x float> %290
  %297 = fcmp olt <4 x float> %292, %294
  %298 = select <4 x i1> %297, <4 x float> %294, <4 x float> %292
  %indvars.iv.next794.1 = add nuw nsw i64 %indvars.iv793, 2
  %niter822.next.1 = add i64 %niter822, 2
  %niter822.ncmp.1 = icmp eq i64 %niter822.next.1, %unroll_iter821
  br i1 %niter822.ncmp.1, label %invoke.cont312.loopexit.unr-lcssa, label %for.body295

invoke.cont312.loopexit.unr-lcssa:                ; preds = %for.body295, %for.body295.preheader
  %.lcssa812.ph = phi <4 x float> [ undef, %for.body295.preheader ], [ %296, %for.body295 ]
  %.lcssa811.ph = phi <4 x float> [ undef, %for.body295.preheader ], [ %298, %for.body295 ]
  %indvars.iv793.unr = phi i64 [ 1, %for.body295.preheader ], [ %indvars.iv.next794.1, %for.body295 ]
  %.unr816 = phi <4 x float> [ %282, %for.body295.preheader ], [ %296, %for.body295 ]
  %.unr817 = phi <4 x float> [ %282, %for.body295.preheader ], [ %298, %for.body295 ]
  %lcmp.mod818.not = icmp eq i64 %xtraiter815, 0
  br i1 %lcmp.mod818.not, label %invoke.cont312, label %for.body295.epil

for.body295.epil:                                 ; preds = %invoke.cont312.loopexit.unr-lcssa
  %arrayidx.i691.epil = getelementptr inbounds ptr, ptr %280, i64 %indvars.iv793.unr
  %299 = load ptr, ptr %arrayidx.i691.epil, align 8, !tbaa !219
  %m_x300.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %299, i64 0, i32 1
  %300 = load <4 x float>, ptr %m_x300.epil, align 4, !tbaa !137
  %301 = fcmp olt <4 x float> %300, %.unr816
  %302 = select <4 x i1> %301, <4 x float> %300, <4 x float> %.unr816
  %303 = fcmp olt <4 x float> %.unr817, %300
  %304 = select <4 x i1> %303, <4 x float> %300, <4 x float> %.unr817
  br label %invoke.cont312

invoke.cont312:                                   ; preds = %for.body295.epil, %invoke.cont312.loopexit.unr-lcssa, %if.then285
  %305 = phi <4 x float> [ %282, %if.then285 ], [ %.lcssa812.ph, %invoke.cont312.loopexit.unr-lcssa ], [ %302, %for.body295.epil ]
  %306 = phi <4 x float> [ %282, %if.then285 ], [ %.lcssa811.ph, %invoke.cont312.loopexit.unr-lcssa ], [ %304, %for.body295.epil ]
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %bounds) #38
  store <4 x float> %305, ptr %bounds, align 16
  store <4 x float> %306, ptr %mx2.i, align 16
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 15
  %307 = load ptr, ptr %m_leaf, align 8, !tbaa !221
  %tobool313.not = icmp eq ptr %307, null
  br i1 %tobool313.not, label %if.else, label %invoke.cont325

invoke.cont325:                                   ; preds = %invoke.cont312
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp316) #38
  %308 = load float, ptr %m_sst, align 8, !tbaa !137
  %309 = load float, ptr %ref.tmp126.sroa.5.0.m_lv.sroa_idx, align 4, !tbaa !137
  %mul8.i719 = fmul float %308, %309
  %310 = load <2 x float>, ptr %m_lv, align 4, !tbaa !137
  %311 = insertelement <2 x float> poison, float %308, i64 0
  %312 = shufflevector <2 x float> %311, <2 x float> poison, <2 x i32> zeroinitializer
  %313 = fmul <2 x float> %312, %310
  %314 = fmul <2 x float> %313, <float 3.000000e+00, float 3.000000e+00>
  %mul8.i729 = fmul float %mul8.i719, 3.000000e+00
  %retval.sroa.3.12.vec.insert.i732 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i729, i64 0
  store <2 x float> %314, ptr %ref.tmp316, align 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i732, ptr %1, align 8
  %315 = load float, ptr %radmrg, align 4, !tbaa !386
  %call330 = invoke noundef zeroext i1 @_ZN6btDbvt6updateEP10btDbvtNodeR12btDbvtAabbMmRK9btVector3f(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt, ptr noundef nonnull %307, ptr noundef nonnull align 4 dereferenceable(32) %bounds, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp316, float noundef %315)
          to label %invoke.cont329 unwind label %lpad324

invoke.cont329:                                   ; preds = %invoke.cont325
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp316) #38
  br label %if.end338

lpad311:                                          ; preds = %if.else
  %316 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup339

lpad324:                                          ; preds = %invoke.cont325
  %317 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp316) #38
  br label %ehcleanup339

if.else:                                          ; preds = %invoke.cont312
  %call336 = invoke noundef ptr @_ZN6btDbvt6insertERK12btDbvtAabbMmPv(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt, ptr noundef nonnull align 4 dereferenceable(32) %bounds, ptr noundef nonnull %4)
          to label %invoke.cont335 unwind label %lpad311

invoke.cont335:                                   ; preds = %if.else
  store ptr %call336, ptr %m_leaf, align 8, !tbaa !221
  br label %if.end338

if.end338:                                        ; preds = %invoke.cont335, %invoke.cont329
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %bounds) #38
  br label %if.end342

ehcleanup339:                                     ; preds = %lpad324, %lpad311
  %.pn433.pn = phi { ptr, i32 } [ %317, %lpad324 ], [ %316, %lpad311 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %bounds) #38
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %s) #38
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %r) #38
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %m) #38
  invoke void @_ZN15CProfileManager12Stop_ProfileEv()
          to label %invoke.cont355 unwind label %terminate.lpad

if.end342:                                        ; preds = %if.end338, %if.end
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %s) #38
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %r) #38
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %m) #38
  %.pre803 = load i32, ptr %m_size.i, align 4, !tbaa !124
  br label %if.end347

if.end347:                                        ; preds = %if.end342, %for.body
  %318 = phi i32 [ %.pre803, %if.end342 ], [ %2, %for.body ]
  %indvars.iv.next799 = add nuw nsw i64 %indvars.iv798, 1
  %319 = sext i32 %318 to i64
  %cmp = icmp slt i64 %indvars.iv.next799, %319
  br i1 %cmp, label %for.body, label %for.end352

for.end352:                                       ; preds = %if.end347, %entry
  call void @_ZN15CProfileManager12Stop_ProfileEv()
  ret void

invoke.cont355:                                   ; preds = %ehcleanup339
  resume { ptr, i32 } %.pn433.pn

terminate.lpad:                                   ; preds = %ehcleanup339
  %320 = landingpad { ptr, i32 }
          catch ptr null
  %321 = extractvalue { ptr, i32 } %320, 0
  call void @__clang_call_terminate(ptr %321) #39
  unreachable
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6refineEPNS_10ImplicitFnEfb(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %ifn, float noundef %accurary, i1 noundef zeroext %cut) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %l.sroa.7.i = alloca <{ [2 x ptr], float, i8, [3 x i8], float, float, float, %class.btVector3, [4 x i8] }>, align 8
  %tmp.i1494 = alloca %"struct.btSoftBody::Link", align 8
  %f.sroa.7.i = alloca { [3 x ptr], %class.btVector3, float, ptr }, align 8
  %ref.tmp.i = alloca %class.btVector3, align 8
  %tmp.i = alloca %"struct.btSoftBody::Link", align 8
  %edges = alloca %struct.btSymMatrix, align 8
  %ref.tmp = alloca i32, align 4
  %x = alloca %class.btVector3, align 8
  %idx335 = alloca [3 x i32], align 4
  %x475 = alloca %class.btVector3, align 4
  %v490.sroa.0 = alloca [4 x float], align 4
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %1 = load i32, ptr %m_size.i, align 4, !tbaa !88
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %edges) #38
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ref.tmp) #38
  store i32 -2, ptr %ref.tmp, align 4, !tbaa !140
  call void @_ZN11btSymMatrixIiEC2EiRKi(ptr noundef nonnull align 8 dereferenceable(36) %edges, i32 noundef %1, ptr noundef nonnull align 4 dereferenceable(4) %ref.tmp)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ref.tmp) #38
  %m_size.i1120 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %2 = load i32, ptr %m_size.i1120, align 4, !tbaa !92
  %cmp1695 = icmp sgt i32 %2, 0
  br i1 %cmp1695, label %for.body.lr.ph, label %for.cond65.preheader

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i1121 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  br label %for.body

for.cond39.preheader:                             ; preds = %if.end37
  %cmp431697 = icmp sgt i32 %17, 0
  br i1 %cmp431697, label %invoke.cont59.lr.ph, label %for.cond65.preheader

invoke.cont59.lr.ph:                              ; preds = %for.cond39.preheader
  %m_data.i1131 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %3 = load ptr, ptr %m_data.i1131, align 8, !tbaa !91
  %sub.ptr.rhs.cast = ptrtoint ptr %0 to i64
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %edges, i64 0, i32 5
  %4 = load ptr, ptr %m_data.i.i, align 8, !tbaa !131
  br label %invoke.cont59

for.body:                                         ; preds = %for.body.lr.ph, %if.end37
  %5 = phi i32 [ %2, %for.body.lr.ph ], [ %17, %if.end37 ]
  %i.01696 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end37 ]
  %6 = load ptr, ptr %m_data.i1121, align 8, !tbaa !91
  %idxprom.i = sext i32 %i.01696 to i64
  %m_bbending = getelementptr inbounds %"struct.btSoftBody::Link", ptr %6, i64 %idxprom.i, i32 3
  %bf.load = load i8, ptr %m_bbending, align 4
  %7 = and i8 %bf.load, 1
  %tobool.not = icmp eq i8 %7, 0
  br i1 %tobool.not, label %if.end37, label %if.then

if.then:                                          ; preds = %for.body
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %6, i64 %idxprom.i, i32 1
  %8 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %8, i64 0, i32 1
  %vtable = load ptr, ptr %ifn, align 8, !tbaa !5
  %9 = load ptr, ptr %vtable, align 8
  %call12 = invoke noundef float %9(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %m_x)
          to label %invoke.cont11 unwind label %lpad10

invoke.cont11:                                    ; preds = %if.then
  %arrayidx15 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %6, i64 %idxprom.i, i32 1, i64 1
  %10 = load ptr, ptr %arrayidx15, align 8, !tbaa !219
  %m_x16 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %10, i64 0, i32 1
  %vtable17 = load ptr, ptr %ifn, align 8, !tbaa !5
  %11 = load ptr, ptr %vtable17, align 8
  %call21 = invoke noundef float %11(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %m_x16)
          to label %invoke.cont20 unwind label %lpad19

invoke.cont20:                                    ; preds = %invoke.cont11
  %mul.i = fmul float %call12, %call21
  %cmp.i = fcmp ogt float %mul.i, 0.000000e+00
  br i1 %cmp.i, label %invoke.cont20.if.end37_crit_edge, label %if.then24

invoke.cont20.if.end37_crit_edge:                 ; preds = %invoke.cont20
  %.pre = load i32, ptr %m_size.i1120, align 4, !tbaa !92
  br label %if.end37

if.then24:                                        ; preds = %invoke.cont20
  %12 = load ptr, ptr %m_data.i1121, align 8, !tbaa !91
  %arrayidx.i1124 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %12, i64 %idxprom.i
  %13 = load i32, ptr %m_size.i1120, align 4, !tbaa !92
  %sub = add nsw i32 %13, -1
  %idxprom.i1127 = sext i32 %sub to i64
  %arrayidx.i1128 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %12, i64 %idxprom.i1127
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %tmp.i)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tmp.i, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i1124, i64 72, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(68) %arrayidx.i1124, ptr noundef nonnull align 8 dereferenceable(68) %arrayidx.i1128, i64 68, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(68) %arrayidx.i1128, ptr noundef nonnull align 8 dereferenceable(68) %tmp.i, i64 68, i1 false)
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %tmp.i)
  %14 = load i32, ptr %m_size.i1120, align 4, !tbaa !92
  %dec.i = add nsw i32 %14, -1
  store i32 %dec.i, ptr %m_size.i1120, align 4, !tbaa !92
  %dec = add nsw i32 %i.01696, -1
  br label %if.end37

lpad10:                                           ; preds = %if.then
  %15 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup894

lpad19:                                           ; preds = %invoke.cont11
  %16 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup894

if.end37:                                         ; preds = %invoke.cont20.if.end37_crit_edge, %if.then24, %for.body
  %17 = phi i32 [ %dec.i, %if.then24 ], [ %.pre, %invoke.cont20.if.end37_crit_edge ], [ %5, %for.body ]
  %i.1 = phi i32 [ %dec, %if.then24 ], [ %i.01696, %invoke.cont20.if.end37_crit_edge ], [ %i.01696, %for.body ]
  %inc = add nsw i32 %i.1, 1
  %cmp = icmp slt i32 %inc, %17
  br i1 %cmp, label %for.body, label %for.cond39.preheader

for.cond65.preheader:                             ; preds = %invoke.cont59, %entry, %for.cond39.preheader
  %m_size.i1134 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %18 = load i32, ptr %m_size.i1134, align 4, !tbaa !96
  %cmp681699 = icmp sgt i32 %18, 0
  br i1 %cmp681699, label %invoke.cont120.lr.ph, label %for.cond126.preheader

invoke.cont120.lr.ph:                             ; preds = %for.cond65.preheader
  %m_data.i1135 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %19 = load ptr, ptr %m_data.i1135, align 8, !tbaa !95
  %sub.ptr.rhs.cast77 = ptrtoint ptr %0 to i64
  %m_data.i.i1144 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %edges, i64 0, i32 5
  %20 = load ptr, ptr %m_data.i.i1144, align 8, !tbaa !131
  br label %invoke.cont120

invoke.cont59:                                    ; preds = %invoke.cont59.lr.ph, %invoke.cont59
  %indvars.iv = phi i64 [ 0, %invoke.cont59.lr.ph ], [ %indvars.iv.next, %invoke.cont59 ]
  %m_n50 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %3, i64 %indvars.iv, i32 1
  %21 = load ptr, ptr %m_n50, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %21 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 120
  %conv = trunc i64 %sub.ptr.div to i32
  %arrayidx53 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %3, i64 %indvars.iv, i32 1, i64 1
  %22 = load ptr, ptr %arrayidx53, align 8, !tbaa !219
  %sub.ptr.lhs.cast54 = ptrtoint ptr %22 to i64
  %sub.ptr.sub56 = sub i64 %sub.ptr.lhs.cast54, %sub.ptr.rhs.cast
  %sub.ptr.div57 = sdiv exact i64 %sub.ptr.sub56, 120
  %conv58 = trunc i64 %sub.ptr.div57 to i32
  %spec.select.i.i = call i32 @llvm.smin.i32(i32 %conv, i32 %conv58)
  %spec.select5.i.i = call i32 @llvm.smax.i32(i32 %conv, i32 %conv58)
  %add.i.i = add nsw i32 %spec.select5.i.i, 1
  %mul.i.i = mul nsw i32 %add.i.i, %spec.select5.i.i
  %div.i.i = sdiv i32 %mul.i.i, 2
  %add2.i.i = add nsw i32 %div.i.i, %spec.select.i.i
  %idxprom.i.i = sext i32 %add2.i.i to i64
  %arrayidx.i.i = getelementptr inbounds i32, ptr %4, i64 %idxprom.i.i
  store i32 -1, ptr %arrayidx.i.i, align 4, !tbaa !140
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %23 = load i32, ptr %m_size.i1120, align 4, !tbaa !92
  %24 = sext i32 %23 to i64
  %cmp43 = icmp slt i64 %indvars.iv.next, %24
  br i1 %cmp43, label %invoke.cont59, label %for.cond65.preheader

for.cond126.preheader:                            ; preds = %invoke.cont120, %for.cond65.preheader
  %cmp1271705 = icmp sgt i32 %1, 0
  br i1 %cmp1271705, label %for.body128.lr.ph, label %for.end234

for.body128.lr.ph:                                ; preds = %for.cond126.preheader
  %m_data.i.i1171 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %edges, i64 0, i32 5
  %fneg.i = fneg float %accurary
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp.i, i64 0, i32 1
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %x, i64 0, i32 1
  %27 = zext i32 %1 to i64
  %wide.trip.count1748 = zext i32 %1 to i64
  br label %for.body128

invoke.cont120:                                   ; preds = %invoke.cont120.lr.ph, %invoke.cont120
  %indvars.iv1737 = phi i64 [ 0, %invoke.cont120.lr.ph ], [ %indvars.iv.next1738, %invoke.cont120 ]
  %m_n74 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %19, i64 %indvars.iv1737, i32 1
  %28 = load ptr, ptr %m_n74, align 8, !tbaa !219
  %sub.ptr.lhs.cast76 = ptrtoint ptr %28 to i64
  %sub.ptr.sub78 = sub i64 %sub.ptr.lhs.cast76, %sub.ptr.rhs.cast77
  %sub.ptr.div79 = sdiv exact i64 %sub.ptr.sub78, 120
  %conv80 = trunc i64 %sub.ptr.div79 to i32
  %arrayidx82 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %19, i64 %indvars.iv1737, i32 1, i64 1
  %29 = load ptr, ptr %arrayidx82, align 8, !tbaa !219
  %sub.ptr.lhs.cast83 = ptrtoint ptr %29 to i64
  %sub.ptr.sub85 = sub i64 %sub.ptr.lhs.cast83, %sub.ptr.rhs.cast77
  %sub.ptr.div86 = sdiv exact i64 %sub.ptr.sub85, 120
  %conv87 = trunc i64 %sub.ptr.div86 to i32
  %spec.select.i.i1138 = call i32 @llvm.smin.i32(i32 %conv80, i32 %conv87)
  %spec.select5.i.i1139 = call i32 @llvm.smax.i32(i32 %conv80, i32 %conv87)
  %add.i.i1140 = add nsw i32 %spec.select5.i.i1139, 1
  %mul.i.i1141 = mul nsw i32 %add.i.i1140, %spec.select5.i.i1139
  %div.i.i1142 = sdiv i32 %mul.i.i1141, 2
  %add2.i.i1143 = add nsw i32 %div.i.i1142, %spec.select.i.i1138
  %idxprom.i.i1145 = sext i32 %add2.i.i1143 to i64
  %arrayidx.i.i1146 = getelementptr inbounds i32, ptr %20, i64 %idxprom.i.i1145
  store i32 -1, ptr %arrayidx.i.i1146, align 4, !tbaa !140
  %arrayidx98 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %19, i64 %indvars.iv1737, i32 1, i64 2
  %30 = load ptr, ptr %arrayidx98, align 8, !tbaa !219
  %sub.ptr.lhs.cast99 = ptrtoint ptr %30 to i64
  %sub.ptr.sub101 = sub i64 %sub.ptr.lhs.cast99, %sub.ptr.rhs.cast77
  %sub.ptr.div102 = sdiv exact i64 %sub.ptr.sub101, 120
  %conv103 = trunc i64 %sub.ptr.div102 to i32
  %spec.select.i.i1147 = call i32 @llvm.smin.i32(i32 %conv87, i32 %conv103)
  %spec.select5.i.i1148 = call i32 @llvm.smax.i32(i32 %conv87, i32 %conv103)
  %add.i.i1149 = add nsw i32 %spec.select5.i.i1148, 1
  %mul.i.i1150 = mul nsw i32 %add.i.i1149, %spec.select5.i.i1148
  %div.i.i1151 = sdiv i32 %mul.i.i1150, 2
  %add2.i.i1152 = add nsw i32 %div.i.i1151, %spec.select.i.i1147
  %idxprom.i.i1154 = sext i32 %add2.i.i1152 to i64
  %arrayidx.i.i1155 = getelementptr inbounds i32, ptr %20, i64 %idxprom.i.i1154
  store i32 -1, ptr %arrayidx.i.i1155, align 4, !tbaa !140
  %spec.select.i.i1156 = call i32 @llvm.smin.i32(i32 %conv103, i32 %conv80)
  %spec.select5.i.i1157 = call i32 @llvm.smax.i32(i32 %conv103, i32 %conv80)
  %add.i.i1158 = add nsw i32 %spec.select5.i.i1157, 1
  %mul.i.i1159 = mul nsw i32 %add.i.i1158, %spec.select5.i.i1157
  %div.i.i1160 = sdiv i32 %mul.i.i1159, 2
  %add2.i.i1161 = add nsw i32 %div.i.i1160, %spec.select.i.i1156
  %idxprom.i.i1163 = sext i32 %add2.i.i1161 to i64
  %arrayidx.i.i1164 = getelementptr inbounds i32, ptr %20, i64 %idxprom.i.i1163
  store i32 -1, ptr %arrayidx.i.i1164, align 4, !tbaa !140
  %indvars.iv.next1738 = add nuw nsw i64 %indvars.iv1737, 1
  %31 = load i32, ptr %m_size.i1134, align 4, !tbaa !96
  %32 = sext i32 %31 to i64
  %cmp68 = icmp slt i64 %indvars.iv.next1738, %32
  br i1 %cmp68, label %invoke.cont120, label %for.cond126.preheader

for.cond126.loopexit:                             ; preds = %for.inc229, %for.body128
  %indvars.iv.next1741 = add nuw nsw i64 %indvars.iv1740, 1
  %exitcond1749.not = icmp eq i64 %indvars.iv.next1746, %wide.trip.count1748
  br i1 %exitcond1749.not, label %for.end234, label %for.body128

for.body128:                                      ; preds = %for.body128.lr.ph, %for.cond126.loopexit
  %indvars.iv1745 = phi i64 [ 0, %for.body128.lr.ph ], [ %indvars.iv.next1746, %for.cond126.loopexit ]
  %indvars.iv1740 = phi i64 [ 1, %for.body128.lr.ph ], [ %indvars.iv.next1741, %for.cond126.loopexit ]
  %indvars.iv.next1746 = add nuw nsw i64 %indvars.iv1745, 1
  %cmp1301701 = icmp ult i64 %indvars.iv.next1746, %27
  br i1 %cmp1301701, label %invoke.cont132.lr.ph, label %for.cond126.loopexit

invoke.cont132.lr.ph:                             ; preds = %for.body128
  %33 = trunc i64 %indvars.iv1745 to i32
  br label %invoke.cont132

invoke.cont132:                                   ; preds = %invoke.cont132.lr.ph, %for.inc229
  %indvars.iv1742 = phi i64 [ %indvars.iv1740, %invoke.cont132.lr.ph ], [ %indvars.iv.next1743, %for.inc229 ]
  %34 = trunc i64 %indvars.iv1742 to i32
  %spec.select.i.i1165 = call i32 @llvm.smin.i32(i32 %33, i32 %34)
  %spec.select5.i.i1166 = call i32 @llvm.smax.i32(i32 %33, i32 %34)
  %add.i.i1167 = add nuw nsw i32 %spec.select5.i.i1166, 1
  %mul.i.i1168 = mul nsw i32 %add.i.i1167, %spec.select5.i.i1166
  %div.i.i11691685 = lshr i32 %mul.i.i1168, 1
  %add2.i.i1170 = add nuw nsw i32 %div.i.i11691685, %spec.select.i.i1165
  %35 = load ptr, ptr %m_data.i.i1171, align 8, !tbaa !131
  %idxprom.i.i1172 = zext i32 %add2.i.i1170 to i64
  %arrayidx.i.i1173 = getelementptr inbounds i32, ptr %35, i64 %idxprom.i.i1172
  %36 = load i32, ptr %arrayidx.i.i1173, align 4, !tbaa !140
  %cmp134 = icmp eq i32 %36, -1
  br i1 %cmp134, label %if.then135, label %for.inc229

if.then135:                                       ; preds = %invoke.cont132
  %37 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_x144 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv1745, i32 1
  %m_x145 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv1742, i32 1
  %vtable.i = load ptr, ptr %ifn, align 8, !tbaa !5
  %38 = load ptr, ptr %vtable.i, align 8
  %call.i1181 = invoke noundef float %38(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %m_x144)
          to label %call.i.noexc unwind label %lpad146.loopexit.split-lp

call.i.noexc:                                     ; preds = %if.then135
  %vtable1.i = load ptr, ptr %ifn, align 8, !tbaa !5
  %39 = load ptr, ptr %vtable1.i, align 8
  %call3.i1182 = invoke noundef float %39(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %m_x145)
          to label %call3.i.noexc unwind label %lpad146.loopexit.split-lp

call3.i.noexc:                                    ; preds = %call.i.noexc
  %cmp.i1180 = fcmp ogt float %call.i1181, %call3.i1182
  br i1 %cmp.i1180, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %call3.i.noexc
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %call3.i.noexc
  %span.sroa.7.0.i = phi float [ 0.000000e+00, %if.then.i ], [ 1.000000e+00, %call3.i.noexc ]
  %span.sroa.0.0.i = phi float [ 1.000000e+00, %if.then.i ], [ 0.000000e+00, %call3.i.noexc ]
  %values.sroa.9.0.i = phi float [ %call.i1181, %if.then.i ], [ %call3.i1182, %call3.i.noexc ]
  %values.sroa.0.0.i = phi float [ %call3.i1182, %if.then.i ], [ %call.i1181, %call3.i.noexc ]
  %cmp10.i = fcmp ogt float %values.sroa.0.0.i, %fneg.i
  %cmp14.i = fcmp olt float %values.sroa.9.0.i, %accurary
  %or.cond65.i = or i1 %cmp14.i, %cmp10.i
  br i1 %or.cond65.i, label %for.inc229, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.end.i
  %arrayidx11.i.i.i = getelementptr inbounds [4 x float], ptr %m_x145, i64 0, i64 2
  %arrayidx13.i.i.i = getelementptr inbounds [4 x float], ptr %m_x144, i64 0, i64 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.cond.preheader.i
  %i.091.i = phi i32 [ 0, %for.cond.preheader.i ], [ %inc.i, %for.inc.i ]
  %values.sroa.0.190.i = phi float [ %values.sroa.0.0.i, %for.cond.preheader.i ], [ %values.sroa.0.2.ph.i, %for.inc.i ]
  %values.sroa.9.189.i = phi float [ %values.sroa.9.0.i, %for.cond.preheader.i ], [ %values.sroa.9.2.ph.i, %for.inc.i ]
  %span.sroa.0.188.i = phi float [ %span.sroa.0.0.i, %for.cond.preheader.i ], [ %span.sroa.0.2.ph.i, %for.inc.i ]
  %span.sroa.7.187.i = phi float [ %span.sroa.7.0.i, %for.cond.preheader.i ], [ %span.sroa.7.2.ph.i, %for.inc.i ]
  %sub.i = fsub float %values.sroa.0.190.i, %values.sroa.9.189.i
  %div.i = fdiv float %values.sroa.0.190.i, %sub.i
  %sub.i.i = fsub float %span.sroa.7.187.i, %span.sroa.0.188.i
  %40 = call float @llvm.fmuladd.f32(float %sub.i.i, float %div.i, float %span.sroa.0.188.i)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp.i) #38
  %41 = load float, ptr %arrayidx11.i.i.i, align 4, !tbaa !137
  %42 = load float, ptr %arrayidx13.i.i.i, align 4, !tbaa !137
  %sub14.i.i.i = fsub float %41, %42
  %mul8.i.i.i = fmul float %40, %sub14.i.i.i
  %43 = load <2 x float>, ptr %m_x145, align 4, !tbaa !137
  %44 = load <2 x float>, ptr %m_x144, align 4, !tbaa !137
  %45 = fsub <2 x float> %43, %44
  %46 = insertelement <2 x float> poison, float %40, i64 0
  %47 = shufflevector <2 x float> %46, <2 x float> poison, <2 x i32> zeroinitializer
  %48 = fmul <2 x float> %47, %45
  %49 = fadd <2 x float> %44, %48
  %add14.i.i.i = fadd float %42, %mul8.i.i.i
  %retval.sroa.3.12.vec.insert.i20.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i.i, i64 0
  store <2 x float> %49, ptr %ref.tmp.i, align 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i20.i.i, ptr %25, align 8
  %vtable25.i = load ptr, ptr %ifn, align 8, !tbaa !5
  %50 = load ptr, ptr %vtable25.i, align 8
  %call27.i1183 = invoke noundef float %50(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp.i)
          to label %call27.i.noexc unwind label %lpad146.loopexit

call27.i.noexc:                                   ; preds = %for.body.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp.i) #38
  %cmp28.i = fcmp ole float %40, 0.000000e+00
  %cmp29.i = fcmp oge float %40, 1.000000e+00
  %or.cond.i = or i1 %cmp28.i, %cmp29.i
  br i1 %or.cond.i, label %for.inc229, label %if.end31.i

if.end31.i:                                       ; preds = %call27.i.noexc
  %51 = call float @llvm.fabs.f32(float %call27.i1183)
  %cmp33.i = fcmp olt float %51, %accurary
  br i1 %cmp33.i, label %invoke.cont147, label %if.end35.i

if.end35.i:                                       ; preds = %if.end31.i
  %cmp36.i = fcmp olt float %call27.i1183, 0.000000e+00
  br i1 %cmp36.i, label %for.inc.i, label %if.else.i

if.else.i:                                        ; preds = %if.end35.i
  br label %for.inc.i

for.inc.i:                                        ; preds = %if.else.i, %if.end35.i
  %span.sroa.7.2.ph.i = phi float [ %span.sroa.7.187.i, %if.end35.i ], [ %40, %if.else.i ]
  %span.sroa.0.2.ph.i = phi float [ %40, %if.end35.i ], [ %span.sroa.0.188.i, %if.else.i ]
  %values.sroa.9.2.ph.i = phi float [ %values.sroa.9.189.i, %if.end35.i ], [ %call27.i1183, %if.else.i ]
  %values.sroa.0.2.ph.i = phi float [ %call27.i1183, %if.end35.i ], [ %values.sroa.0.190.i, %if.else.i ]
  %inc.i = add nuw nsw i32 %i.091.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 256
  br i1 %exitcond.not.i, label %for.inc229, label %for.body.i

invoke.cont147:                                   ; preds = %if.end31.i
  %cmp149 = fcmp ogt float %40, 0.000000e+00
  br i1 %cmp149, label %invoke.cont158, label %for.inc229

invoke.cont158:                                   ; preds = %invoke.cont147
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %x) #38
  %52 = load float, ptr %arrayidx11.i.i.i, align 4, !tbaa !137
  %53 = load float, ptr %arrayidx13.i.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %52, %53
  %mul8.i.i = fmul float %40, %sub14.i.i
  %54 = load <2 x float>, ptr %m_x145, align 4, !tbaa !137
  %55 = load <2 x float>, ptr %m_x144, align 4, !tbaa !137
  %56 = fsub <2 x float> %54, %55
  %57 = fmul <2 x float> %47, %56
  %58 = fadd <2 x float> %55, %57
  %add14.i.i = fadd float %53, %mul8.i.i
  %retval.sroa.3.12.vec.insert.i20.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i, i64 0
  store <2 x float> %58, ptr %x, align 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i20.i, ptr %26, align 8
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv1745, i32 3
  %m_v156 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv1742, i32 3
  %arrayidx11.i.i1191 = getelementptr inbounds [4 x float], ptr %m_v156, i64 0, i64 2
  %59 = load float, ptr %arrayidx11.i.i1191, align 4, !tbaa !137
  %arrayidx13.i.i1192 = getelementptr inbounds [4 x float], ptr %m_v, i64 0, i64 2
  %60 = load float, ptr %arrayidx13.i.i1192, align 4, !tbaa !137
  %sub14.i.i1193 = fsub float %59, %60
  %mul8.i.i1196 = fmul float %40, %sub14.i.i1193
  %61 = load <2 x float>, ptr %m_v156, align 4, !tbaa !137
  %62 = load <2 x float>, ptr %m_v, align 4, !tbaa !137
  %63 = fsub <2 x float> %61, %62
  %64 = fmul <2 x float> %47, %63
  %65 = fadd <2 x float> %62, %64
  %add14.i.i1199 = fadd float %60, %mul8.i.i1196
  %retval.sroa.3.12.vec.insert.i20.i1202 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i1199, i64 0
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv1745, i32 6
  %m_im163 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv1742, i32 6
  %66 = load float, ptr %m_im, align 8, !tbaa !175
  %cmp161 = fcmp ogt float %66, 0.000000e+00
  %67 = load float, ptr %m_im163, align 8, !tbaa !175
  %cmp164 = fcmp ogt float %67, 0.000000e+00
  br i1 %cmp161, label %if.then162, label %if.else193

if.then162:                                       ; preds = %invoke.cont158
  br i1 %cmp164, label %if.then165, label %if.else

if.then165:                                       ; preds = %if.then162
  %68 = insertelement <2 x float> poison, float %67, i64 0
  %69 = insertelement <2 x float> %68, float %66, i64 1
  %70 = fdiv <2 x float> <float 1.000000e+00, float 1.000000e+00>, %69
  %71 = extractelement <2 x float> %70, i64 0
  %72 = extractelement <2 x float> %70, i64 1
  %sub.i1205 = fsub float %71, %72
  %73 = call float @llvm.fmuladd.f32(float %sub.i1205, float %40, float %72)
  %add173 = fadd float %72, %71
  %add175 = fadd float %add173, %73
  %div176 = fdiv float %add173, %add175
  %mul = fmul float %72, %div176
  %div177 = fdiv float 1.000000e+00, %mul
  store float %div177, ptr %m_im, align 8, !tbaa !175
  %mul179 = fmul float %71, %div176
  %div180 = fdiv float 1.000000e+00, %mul179
  store float %div180, ptr %m_im163, align 8, !tbaa !175
  %mul182 = fmul float %73, %div176
  br label %if.end205

lpad146.loopexit:                                 ; preds = %for.body.i
  %lpad.loopexit = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup894

lpad146.loopexit.split-lp:                        ; preds = %if.then135, %call.i.noexc
  %lpad.loopexit.split-lp = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup894

if.else:                                          ; preds = %if.then162
  %conv189 = fmul float %66, 2.000000e+00
  store float %conv189, ptr %m_im, align 8, !tbaa !175
  %div191 = fdiv float 1.000000e+00, %conv189
  br label %if.end205

if.else193:                                       ; preds = %invoke.cont158
  br i1 %cmp164, label %if.then196, label %if.end205

if.then196:                                       ; preds = %if.else193
  %conv200 = fmul float %67, 2.000000e+00
  store float %conv200, ptr %m_im163, align 8, !tbaa !175
  %div202 = fdiv float 1.000000e+00, %conv200
  br label %if.end205

if.end205:                                        ; preds = %if.else193, %if.then196, %if.then165, %if.else
  %m.0 = phi float [ %mul182, %if.then165 ], [ %div191, %if.else ], [ %div202, %if.then196 ], [ 0.000000e+00, %if.else193 ]
  invoke void @_ZN10btSoftBody10appendNodeERK9btVector3f(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(16) %x, float noundef %m.0)
          to label %invoke.cont215 unwind label %lpad206

invoke.cont215:                                   ; preds = %if.end205
  %74 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %75 = load ptr, ptr %m_data.i.i1171, align 8, !tbaa !131
  %arrayidx.i.i1215 = getelementptr inbounds i32, ptr %75, i64 %idxprom.i.i1172
  %sub211 = add nsw i32 %74, -1
  store i32 %sub211, ptr %arrayidx.i.i1215, align 4, !tbaa !140
  %76 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1226 = sext i32 %sub211 to i64
  %m_v219 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %76, i64 %idxprom.i1226, i32 3
  store <2 x float> %65, ptr %m_v219, align 8, !tbaa.struct !163
  %v.sroa.5.0.m_v219.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %76, i64 %idxprom.i1226, i32 3, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i20.i1202, ptr %v.sroa.5.0.m_v219.sroa_idx, align 8, !tbaa.struct !165
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %x) #38
  br label %for.inc229

lpad206:                                          ; preds = %if.end205
  %77 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %x) #38
  br label %ehcleanup894

for.inc229:                                       ; preds = %for.inc.i, %call27.i.noexc, %if.end.i, %invoke.cont147, %invoke.cont215, %invoke.cont132
  %indvars.iv.next1743 = add nuw nsw i64 %indvars.iv1742, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next1743, %wide.trip.count1748
  br i1 %exitcond.not, label %for.cond126.loopexit, label %invoke.cont132

for.end234:                                       ; preds = %for.cond126.loopexit, %for.cond126.preheader
  %78 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %79 = load i32, ptr %m_size.i1120, align 4, !tbaa !92
  %cmp2421708 = icmp sgt i32 %79, 0
  br i1 %cmp2421708, label %for.body243.lr.ph, label %for.cond324.preheader

for.body243.lr.ph:                                ; preds = %for.end234
  %m_data.i1230 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %sub.ptr.rhs.cast251 = ptrtoint ptr %78 to i64
  %m_data.i.i1239 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %edges, i64 0, i32 5
  %wide.trip.count1753 = zext i32 %79 to i64
  br label %for.body243

for.cond324.preheader:                            ; preds = %if.end318, %for.end234
  %80 = load i32, ptr %m_size.i1134, align 4, !tbaa !96
  %cmp3281712 = icmp sgt i32 %80, 0
  br i1 %cmp3281712, label %for.body329.lr.ph, label %for.end458

for.body329.lr.ph:                                ; preds = %for.cond324.preheader
  %m_data.i1262 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %sub.ptr.rhs.cast340 = ptrtoint ptr %78 to i64
  %arrayinit.element344 = getelementptr inbounds i32, ptr %idx335, i64 1
  %arrayinit.element352 = getelementptr inbounds i32, ptr %idx335, i64 2
  %m_data.i.i1271 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %edges, i64 0, i32 5
  %m_data.i6.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %m_capacity.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 3
  %m_ownsMemory.i.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 6
  %m_capacity.i.i.i1583 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 3
  %m_data.i.i.i.i1599 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %m_ownsMemory.i.i.i.i1610 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 6
  %m_bUpdateRtCst.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  br label %for.body329

for.body243:                                      ; preds = %for.body243.lr.ph, %if.end318
  %indvars.iv1750 = phi i64 [ 0, %for.body243.lr.ph ], [ %indvars.iv.next1751, %if.end318 ]
  %81 = load ptr, ptr %m_data.i1230, align 8, !tbaa !91
  %m_n248 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %81, i64 %indvars.iv1750, i32 1
  %82 = load ptr, ptr %m_n248, align 8, !tbaa !219
  %sub.ptr.lhs.cast250 = ptrtoint ptr %82 to i64
  %sub.ptr.sub252 = sub i64 %sub.ptr.lhs.cast250, %sub.ptr.rhs.cast251
  %sub.ptr.div253 = sdiv exact i64 %sub.ptr.sub252, 120
  %conv254 = trunc i64 %sub.ptr.div253 to i32
  %arrayidx256 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %81, i64 %indvars.iv1750, i32 1, i64 1
  %83 = load ptr, ptr %arrayidx256, align 8, !tbaa !219
  %sub.ptr.lhs.cast257 = ptrtoint ptr %83 to i64
  %sub.ptr.sub259 = sub i64 %sub.ptr.lhs.cast257, %sub.ptr.rhs.cast251
  %sub.ptr.div260 = sdiv exact i64 %sub.ptr.sub259, 120
  %conv261 = trunc i64 %sub.ptr.div260 to i32
  %cmp263 = icmp sgt i32 %1, %conv254
  %cmp265 = icmp sgt i32 %1, %conv261
  %or.cond = select i1 %cmp263, i1 %cmp265, i1 false
  br i1 %or.cond, label %invoke.cont271, label %if.end318

invoke.cont271:                                   ; preds = %for.body243
  %spec.select.i.i1233 = call i32 @llvm.smin.i32(i32 %conv254, i32 %conv261)
  %spec.select5.i.i1234 = call i32 @llvm.smax.i32(i32 %conv254, i32 %conv261)
  %add.i.i1235 = add nsw i32 %spec.select5.i.i1234, 1
  %mul.i.i1236 = mul nsw i32 %add.i.i1235, %spec.select5.i.i1234
  %div.i.i1237 = sdiv i32 %mul.i.i1236, 2
  %add2.i.i1238 = add nsw i32 %div.i.i1237, %spec.select.i.i1233
  %84 = load ptr, ptr %m_data.i.i1239, align 8, !tbaa !131
  %idxprom.i.i1240 = sext i32 %add2.i.i1238 to i64
  %arrayidx.i.i1241 = getelementptr inbounds i32, ptr %84, i64 %idxprom.i.i1240
  %85 = load i32, ptr %arrayidx.i.i1241, align 4, !tbaa !140
  %cmp273 = icmp sgt i32 %85, 0
  br i1 %cmp273, label %if.then274, label %if.end318

if.then274:                                       ; preds = %invoke.cont271
  %86 = trunc i64 %indvars.iv1750 to i32
  invoke void @_ZN10btSoftBody10appendLinkEiPNS_8MaterialE(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %86, ptr noundef null)
          to label %invoke.cont275 unwind label %lpad270

invoke.cont275:                                   ; preds = %if.then274
  %87 = load ptr, ptr %m_data.i1230, align 8, !tbaa !91
  %88 = load i32, ptr %m_size.i1120, align 4, !tbaa !92
  %sub286 = add nsw i32 %88, -1
  %idxprom.i1247 = sext i32 %sub286 to i64
  %89 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %sext1683 = shl i64 %sub.ptr.div253, 32
  %idxprom.i1250 = ashr exact i64 %sext1683, 32
  %arrayidx.i1251 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %89, i64 %idxprom.i1250
  %m_n294 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %87, i64 %indvars.iv1750, i32 1
  store ptr %arrayidx.i1251, ptr %m_n294, align 8, !tbaa !219
  %90 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1253 = zext i32 %85 to i64
  %arrayidx.i1254 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %90, i64 %idxprom.i1253
  %arrayidx301 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %87, i64 %indvars.iv1750, i32 1, i64 1
  store ptr %arrayidx.i1254, ptr %arrayidx301, align 8, !tbaa !219
  %91 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %arrayidx.i1257 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %91, i64 %idxprom.i1253
  %m_n306 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %87, i64 %idxprom.i1247, i32 1
  store ptr %arrayidx.i1257, ptr %m_n306, align 8, !tbaa !219
  %92 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %sext1684 = shl i64 %sub.ptr.div260, 32
  %idxprom.i1259 = ashr exact i64 %sext1684, 32
  %arrayidx.i1260 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %92, i64 %idxprom.i1259
  %arrayidx314 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %87, i64 %idxprom.i1247, i32 1, i64 1
  store ptr %arrayidx.i1260, ptr %arrayidx314, align 8, !tbaa !219
  br label %if.end318

lpad270:                                          ; preds = %if.then274
  %93 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup894

if.end318:                                        ; preds = %invoke.cont271, %invoke.cont275, %for.body243
  %indvars.iv.next1751 = add nuw nsw i64 %indvars.iv1750, 1
  %exitcond1754.not = icmp eq i64 %indvars.iv.next1751, %wide.trip.count1753
  br i1 %exitcond1754.not, label %for.cond324.preheader, label %for.body243

for.body329:                                      ; preds = %for.body329.lr.ph, %for.end453
  %94 = phi i32 [ %80, %for.body329.lr.ph ], [ %165, %for.end453 ]
  %i.61713 = phi i32 [ 0, %for.body329.lr.ph ], [ %inc457, %for.end453 ]
  %95 = load ptr, ptr %m_data.i1262, align 8, !tbaa !95
  %idxprom.i1263 = sext i32 %i.61713 to i64
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %idx335) #38
  %m_n337 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %95, i64 %idxprom.i1263, i32 1
  %96 = load ptr, ptr %m_n337, align 8, !tbaa !219
  %sub.ptr.lhs.cast339 = ptrtoint ptr %96 to i64
  %sub.ptr.sub341 = sub i64 %sub.ptr.lhs.cast339, %sub.ptr.rhs.cast340
  %sub.ptr.div342 = sdiv exact i64 %sub.ptr.sub341, 120
  %conv343 = trunc i64 %sub.ptr.div342 to i32
  store i32 %conv343, ptr %idx335, align 4, !tbaa !140
  %arrayidx346 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %95, i64 %idxprom.i1263, i32 1, i64 1
  %97 = load ptr, ptr %arrayidx346, align 8, !tbaa !219
  %sub.ptr.lhs.cast347 = ptrtoint ptr %97 to i64
  %sub.ptr.sub349 = sub i64 %sub.ptr.lhs.cast347, %sub.ptr.rhs.cast340
  %sub.ptr.div350 = sdiv exact i64 %sub.ptr.sub349, 120
  %conv351 = trunc i64 %sub.ptr.div350 to i32
  store i32 %conv351, ptr %arrayinit.element344, align 4, !tbaa !140
  %arrayidx354 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %95, i64 %idxprom.i1263, i32 1, i64 2
  %98 = load ptr, ptr %arrayidx354, align 8, !tbaa !219
  %sub.ptr.lhs.cast355 = ptrtoint ptr %98 to i64
  %sub.ptr.sub357 = sub i64 %sub.ptr.lhs.cast355, %sub.ptr.rhs.cast340
  %sub.ptr.div358 = sdiv exact i64 %sub.ptr.sub357, 120
  %conv359 = trunc i64 %sub.ptr.div358 to i32
  store i32 %conv359, ptr %arrayinit.element352, align 4, !tbaa !140
  %99 = load ptr, ptr %m_data.i.i1271, align 8
  %cmp364 = icmp sgt i32 %1, %conv359
  %cmp368 = icmp sgt i32 %1, %conv343
  %or.cond1812 = select i1 %cmp364, i1 %cmp368, i1 false
  br i1 %or.cond1812, label %invoke.cont376, label %for.inc451

invoke.cont376:                                   ; preds = %for.body329
  %spec.select.i.i1265 = call i32 @llvm.smin.i32(i32 %conv359, i32 %conv343)
  %spec.select5.i.i1266 = call i32 @llvm.smax.i32(i32 %conv359, i32 %conv343)
  %add.i.i1267 = add nsw i32 %spec.select5.i.i1266, 1
  %mul.i.i1268 = mul nsw i32 %add.i.i1267, %spec.select5.i.i1266
  %div.i.i1269 = sdiv i32 %mul.i.i1268, 2
  %add2.i.i1270 = add nsw i32 %div.i.i1269, %spec.select.i.i1265
  %idxprom.i.i1272 = sext i32 %add2.i.i1270 to i64
  %arrayidx.i.i1273 = getelementptr inbounds i32, ptr %99, i64 %idxprom.i.i1272
  %100 = load i32, ptr %arrayidx.i.i1273, align 4, !tbaa !140
  %cmp378 = icmp sgt i32 %100, 0
  br i1 %cmp378, label %if.then379, label %for.inc451

if.then379:                                       ; preds = %invoke.cont376.2, %invoke.cont376.1, %invoke.cont376
  %k.01710.lcssa.wide = phi i64 [ 0, %invoke.cont376 ], [ 1, %invoke.cont376.1 ], [ 2, %invoke.cont376.2 ]
  %idxprom.lcssa = phi i64 [ 2, %invoke.cont376 ], [ 0, %invoke.cont376.1 ], [ 1, %invoke.cont376.2 ]
  %.lcssa = phi i32 [ %100, %invoke.cont376 ], [ %163, %invoke.cont376.1 ], [ %164, %invoke.cont376.2 ]
  %101 = trunc i64 %k.01710.lcssa.wide to i32
  %arrayidx363.le = getelementptr inbounds [3 x i32], ptr %idx335, i64 0, i64 %idxprom.lcssa
  %arrayidx367.le = getelementptr inbounds [3 x i32], ptr %idx335, i64 0, i64 %k.01710.lcssa.wide
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %f.sroa.7.i)
  %cmp.i1274 = icmp sgt i32 %i.61713, -1
  br i1 %cmp.i1274, label %if.then.i1278, label %if.else.i1279

if.then.i1278:                                    ; preds = %if.then379
  %idxprom.i.i1276 = zext i32 %i.61713 to i64
  %arrayidx.i.i1277 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %95, i64 %idxprom.i.i1276
  %102 = load <2 x ptr>, ptr %arrayidx.i.i1277, align 8
  %f.sroa.7.0.arrayidx.i.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i.i1277, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.i, ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.0.arrayidx.i.sroa_idx.i, i64 56, i1 false)
  br label %if.end.i1280

if.else.i1279:                                    ; preds = %if.then379
  %103 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i.i = icmp eq i8 %103, 0
  br i1 %guard.uninitialized.i.i, label %init.check.i.i, label %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit.i, !prof !173

init.check.i.i:                                   ; preds = %if.else.i1279
  %104 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy) #38
  %tobool.not.i.i = icmp eq i32 %104, 0
  br i1 %tobool.not.i.i, label %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit.i, label %invoke.cont.i.i

invoke.cont.i.i:                                  ; preds = %init.check.i.i
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy, align 8, !tbaa !174
  %105 = call ptr @llvm.invariant.start.p0(i64 72, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy)
  call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit.i

_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit.i: ; preds = %invoke.cont.i.i, %init.check.i.i, %if.else.i1279
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.i, ptr noundef nonnull align 8 dereferenceable(56) getelementptr inbounds (%"struct.btSoftBody::Face", ptr @_ZZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy, i64 0, i32 1, i64 0), i64 56, i1 false)
  %106 = load ptr, ptr %m_data.i6.i, align 8, !tbaa !119
  %f.sroa.0.0.copyload10.i = load ptr, ptr @_ZZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy, align 8
  %107 = load ptr, ptr %106, align 8, !tbaa !219
  %.pre1798 = load i32, ptr %m_size.i1134, align 4, !tbaa !96
  %108 = insertelement <2 x ptr> poison, ptr %f.sroa.0.0.copyload10.i, i64 0
  %109 = insertelement <2 x ptr> %108, ptr %107, i64 1
  br label %if.end.i1280

if.end.i1280:                                     ; preds = %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit.i, %if.then.i1278
  %110 = phi i32 [ %94, %if.then.i1278 ], [ %.pre1798, %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit.i ]
  %111 = phi <2 x ptr> [ %102, %if.then.i1278 ], [ %109, %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit.i ]
  %112 = load i32, ptr %m_capacity.i.i.i, align 8, !tbaa !97
  %cmp.i.i = icmp eq i32 %110, %112
  br i1 %cmp.i.i, label %if.then.i.i, label %invoke.cont380

if.then.i.i:                                      ; preds = %if.end.i1280
  %tobool.not.i.i.i = icmp eq i32 %110, 0
  %mul.i.i.i1281 = shl nsw i32 %110, 1
  %cond.i.i.i = select i1 %tobool.not.i.i.i, i32 1, i32 %mul.i.i.i1281
  %cmp.i.i.i = icmp slt i32 %110, %cond.i.i.i
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %invoke.cont380

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %tobool.not.i.i.i.i = icmp eq i32 %cond.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.then.i.i.i
  %conv.i.i.i.i.i = sext i32 %cond.i.i.i to i64
  %mul.i.i.i.i.i = mul nsw i64 %conv.i.i.i.i.i, 72
  %call.i.i.i.i.i1282 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i.i, i32 noundef 16)
          to label %call.i.i.i.i.i.noexc unwind label %lpad375

call.i.i.i.i.i.noexc:                             ; preds = %if.then.i.i.i.i
  %.pre.i.i = load i32, ptr %m_size.i1134, align 4, !tbaa !96
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i: ; preds = %call.i.i.i.i.i.noexc, %if.then.i.i.i
  %113 = phi i32 [ %.pre.i.i, %call.i.i.i.i.i.noexc ], [ %110, %if.then.i.i.i ]
  %retval.0.i.i.i.i = phi ptr [ %call.i.i.i.i.i1282, %call.i.i.i.i.i.noexc ], [ null, %if.then.i.i.i ]
  %cmp7.i.i.i.i = icmp sgt i32 %113, 0
  br i1 %cmp7.i.i.i.i, label %for.body.lr.ph.i.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i

for.body.lr.ph.i.i.i.i:                           ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i
  %wide.trip.count.i.i.i.i = zext i32 %113 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i.i, 1
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.i.new

for.body.lr.ph.i.i.i.i.new:                       ; preds = %for.body.lr.ph.i.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i.i, 4294967294
  br label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i, %for.body.lr.ph.i.i.i.i.new
  %indvars.iv.i.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.i.new ], [ %indvars.iv.next.i.i.i.i.1, %for.body.i.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.i.new ], [ %niter.next.1, %for.body.i.i.i.i ]
  %arrayidx.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %retval.0.i.i.i.i, i64 %indvars.iv.i.i.i.i
  %115 = load ptr, ptr %m_data.i1262, align 8, !tbaa !95
  %arrayidx3.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %115, i64 %indvars.iv.i.i.i.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i = or i64 %indvars.iv.i.i.i.i, 1
  %arrayidx.i.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %retval.0.i.i.i.i, i64 %indvars.iv.next.i.i.i.i
  %116 = load ptr, ptr %m_data.i1262, align 8, !tbaa !95
  %arrayidx3.i.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %116, i64 %indvars.iv.next.i.i.i.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i.1, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.i.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i.i, %for.body.lr.ph.i.i.i.i
  %indvars.iv.i.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i.i ], [ %indvars.iv.next.i.i.i.i.1, %for.body.i.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i, label %for.body.i.i.i.i.epil

for.body.i.i.i.i.epil:                            ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Face", ptr %retval.0.i.i.i.i, i64 %indvars.iv.i.i.i.i.unr
  %117 = load ptr, ptr %m_data.i1262, align 8, !tbaa !95
  %arrayidx3.i.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Face", ptr %117, i64 %indvars.iv.i.i.i.i.unr
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i.epil, i64 72, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i: ; preds = %for.body.i.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i
  %118 = load ptr, ptr %m_data.i1262, align 8, !tbaa !95
  %tobool.not.i10.i.i.i = icmp eq ptr %118, null
  %119 = load i8, ptr %m_ownsMemory.i.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i = icmp eq i8 %119, 0
  %or.cond.i.i.i = select i1 %tobool.not.i10.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i
  br i1 %or.cond.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i, label %if.then3.i.i.i.i

if.then3.i.i.i.i:                                 ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %118)
          to label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i unwind label %lpad375

_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i: ; preds = %if.then3.i.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i.i, align 8, !tbaa !94
  store ptr %retval.0.i.i.i.i, ptr %m_data.i1262, align 8, !tbaa !95
  store i32 %cond.i.i.i, ptr %m_capacity.i.i.i, align 8, !tbaa !97
  %.pre7.i.i = load i32, ptr %m_size.i1134, align 4, !tbaa !96
  br label %invoke.cont380

invoke.cont380:                                   ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i, %if.then.i.i, %if.end.i1280
  %120 = phi i32 [ %.pre7.i.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i ], [ %110, %if.then.i.i ], [ %110, %if.end.i1280 ]
  %121 = load ptr, ptr %m_data.i1262, align 8, !tbaa !95
  %idxprom.i8.i = sext i32 %120 to i64
  %arrayidx.i9.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %121, i64 %idxprom.i8.i
  store <2 x ptr> %111, ptr %arrayidx.i9.i, align 8
  %f.sroa.7.0.arrayidx.i9.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i9.i, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.0.arrayidx.i9.sroa_idx.i, ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.i, i64 56, i1 false)
  %122 = load i32, ptr %m_size.i1134, align 4, !tbaa !96
  %inc.i.i = add nsw i32 %122, 1
  store i32 %inc.i.i, ptr %m_size.i1134, align 4, !tbaa !96
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %f.sroa.7.i)
  %add382 = add nuw nsw i32 %101, 1
  %rem = urem i32 %add382, 3
  %123 = load ptr, ptr %m_data.i1262, align 8, !tbaa !95
  %idxprom.i1288 = sext i32 %122 to i64
  %idxprom398 = zext i32 %rem to i64
  %arrayidx399 = getelementptr inbounds [3 x i32], ptr %idx335, i64 0, i64 %idxprom398
  %124 = load i32, ptr %arrayidx399, align 4, !tbaa !140
  %125 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1291 = sext i32 %124 to i64
  %arrayidx.i1292 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %125, i64 %idxprom.i1291
  %m_n403 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %123, i64 %idxprom.i1263, i32 1
  store ptr %arrayidx.i1292, ptr %m_n403, align 8, !tbaa !219
  %126 = load i32, ptr %arrayidx363.le, align 4, !tbaa !140
  %127 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1294 = sext i32 %126 to i64
  %arrayidx.i1295 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %127, i64 %idxprom.i1294
  %arrayidx412 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %123, i64 %idxprom.i1263, i32 1, i64 1
  store ptr %arrayidx.i1295, ptr %arrayidx412, align 8, !tbaa !219
  %128 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1297 = sext i32 %.lcssa to i64
  %arrayidx.i1298 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %128, i64 %idxprom.i1297
  %arrayidx418 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %123, i64 %idxprom.i1263, i32 1, i64 2
  store ptr %arrayidx.i1298, ptr %arrayidx418, align 8, !tbaa !219
  %129 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %arrayidx.i1301 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %129, i64 %idxprom.i1297
  %m_n423 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %123, i64 %idxprom.i1288, i32 1
  store ptr %arrayidx.i1301, ptr %m_n423, align 8, !tbaa !219
  %130 = load i32, ptr %arrayidx367.le, align 4, !tbaa !140
  %131 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1303 = sext i32 %130 to i64
  %arrayidx.i1304 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %131, i64 %idxprom.i1303
  %arrayidx432 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %123, i64 %idxprom.i1288, i32 1, i64 1
  store ptr %arrayidx.i1304, ptr %arrayidx432, align 8, !tbaa !219
  %132 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %arrayidx.i1307 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %132, i64 %idxprom.i1291
  %arrayidx440 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %123, i64 %idxprom.i1288, i32 1, i64 2
  store ptr %arrayidx.i1307, ptr %arrayidx440, align 8, !tbaa !219
  %m_material = getelementptr inbounds %"struct.btSoftBody::Face", ptr %123, i64 %idxprom.i1263, i32 0, i32 1
  %133 = load ptr, ptr %m_material, align 8, !tbaa !184
  %134 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %arrayidx.i.i1310 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %134, i64 %idxprom.i1297
  %arrayidx.i6.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %134, i64 %idxprom.i1291
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %l.sroa.7.i)
  %135 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i.i1576 = icmp eq i8 %135, 0
  br i1 %guard.uninitialized.i.i1576, label %init.check.i.i1579, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i, !prof !173

init.check.i.i1579:                               ; preds = %invoke.cont380
  %136 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  %tobool.not.i.i1578 = icmp eq i32 %136, 0
  br i1 %tobool.not.i.i1578, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i, label %invoke.cont.i.i1580

invoke.cont.i.i1580:                              ; preds = %init.check.i.i1579
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8, !tbaa !174
  %137 = call ptr @llvm.invariant.start.p0(i64 72, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy)
  call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i

_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i: ; preds = %invoke.cont.i.i1580, %init.check.i.i1579, %invoke.cont380
  %l.sroa.0.0.copyload11.i = load ptr, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(52) %l.sroa.7.i, ptr noundef nonnull align 8 dereferenceable(52) getelementptr inbounds (%"struct.btSoftBody::Link", ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, i64 0, i32 1, i64 0), i64 52, i1 false)
  %tobool.not.i = icmp eq ptr %133, null
  br i1 %tobool.not.i, label %cond.false.i, label %if.end.i1585

cond.false.i:                                     ; preds = %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i
  %138 = load ptr, ptr %m_data.i6.i, align 8, !tbaa !119
  %139 = load ptr, ptr %138, align 8, !tbaa !219
  br label %if.end.i1585

if.end.i1585:                                     ; preds = %cond.false.i, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i
  %l.sroa.6.0.i = phi ptr [ %139, %cond.false.i ], [ %133, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i ]
  %140 = load i32, ptr %m_size.i1120, align 4, !tbaa !92
  %141 = load i32, ptr %m_capacity.i.i.i1583, align 8, !tbaa !93
  %cmp.i.i1584 = icmp eq i32 %140, %141
  br i1 %cmp.i.i1584, label %if.then.i.i1590, label %cleanup

if.then.i.i1590:                                  ; preds = %if.end.i1585
  %tobool.not.i.i.i1586 = icmp eq i32 %140, 0
  %mul.i.i.i1587 = shl nsw i32 %140, 1
  %cond.i.i.i1588 = select i1 %tobool.not.i.i.i1586, i32 1, i32 %mul.i.i.i1587
  %cmp.i.i.i1589 = icmp slt i32 %140, %cond.i.i.i1588
  br i1 %cmp.i.i.i1589, label %if.then.i.i.i1592, label %cleanup

if.then.i.i.i1592:                                ; preds = %if.then.i.i1590
  %tobool.not.i.i.i.i1591 = icmp eq i32 %cond.i.i.i1588, 0
  br i1 %tobool.not.i.i.i.i1591, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i, label %if.then.i.i.i.i1596

if.then.i.i.i.i1596:                              ; preds = %if.then.i.i.i1592
  %conv.i.i.i.i.i1593 = sext i32 %cond.i.i.i1588 to i64
  %mul.i.i.i.i.i1594 = mul nsw i64 %conv.i.i.i.i.i1593, 72
  %call.i.i.i.i.i1620 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i.i1594, i32 noundef 16)
          to label %call.i.i.i.i.i.noexc1619 unwind label %lpad386

call.i.i.i.i.i.noexc1619:                         ; preds = %if.then.i.i.i.i1596
  %.pre.i.i1595 = load i32, ptr %m_size.i1120, align 4, !tbaa !92
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i: ; preds = %call.i.i.i.i.i.noexc1619, %if.then.i.i.i1592
  %142 = phi i32 [ %.pre.i.i1595, %call.i.i.i.i.i.noexc1619 ], [ %140, %if.then.i.i.i1592 ]
  %retval.0.i.i.i.i1597 = phi ptr [ %call.i.i.i.i.i1620, %call.i.i.i.i.i.noexc1619 ], [ null, %if.then.i.i.i1592 ]
  %cmp7.i.i.i.i1598 = icmp sgt i32 %142, 0
  br i1 %cmp7.i.i.i.i1598, label %for.body.lr.ph.i.i.i.i1601, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i

for.body.lr.ph.i.i.i.i1601:                       ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i
  %wide.trip.count.i.i.i.i1600 = zext i32 %142 to i64
  %xtraiter1825 = and i64 %wide.trip.count.i.i.i.i1600, 1
  %143 = icmp eq i32 %142, 1
  br i1 %143, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.i1601.new

for.body.lr.ph.i.i.i.i1601.new:                   ; preds = %for.body.lr.ph.i.i.i.i1601
  %unroll_iter1827 = and i64 %wide.trip.count.i.i.i.i1600, 4294967294
  br label %for.body.i.i.i.i1607

for.body.i.i.i.i1607:                             ; preds = %for.body.i.i.i.i1607, %for.body.lr.ph.i.i.i.i1601.new
  %indvars.iv.i.i.i.i1602 = phi i64 [ 0, %for.body.lr.ph.i.i.i.i1601.new ], [ %indvars.iv.next.i.i.i.i1605.1, %for.body.i.i.i.i1607 ]
  %niter1828 = phi i64 [ 0, %for.body.lr.ph.i.i.i.i1601.new ], [ %niter1828.next.1, %for.body.i.i.i.i1607 ]
  %arrayidx.i.i.i.i1603 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i1597, i64 %indvars.iv.i.i.i.i1602
  %144 = load ptr, ptr %m_data.i.i.i.i1599, align 8, !tbaa !91
  %arrayidx3.i.i.i.i1604 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %144, i64 %indvars.iv.i.i.i.i1602
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i1603, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i1604, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i1605 = or i64 %indvars.iv.i.i.i.i1602, 1
  %arrayidx.i.i.i.i1603.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i1597, i64 %indvars.iv.next.i.i.i.i1605
  %145 = load ptr, ptr %m_data.i.i.i.i1599, align 8, !tbaa !91
  %arrayidx3.i.i.i.i1604.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %145, i64 %indvars.iv.next.i.i.i.i1605
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i1603.1, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i1604.1, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i1605.1 = add nuw nsw i64 %indvars.iv.i.i.i.i1602, 2
  %niter1828.next.1 = add i64 %niter1828, 2
  %niter1828.ncmp.1 = icmp eq i64 %niter1828.next.1, %unroll_iter1827
  br i1 %niter1828.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.i.i.i.i1607

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i.i1607, %for.body.lr.ph.i.i.i.i1601
  %indvars.iv.i.i.i.i1602.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i.i1601 ], [ %indvars.iv.next.i.i.i.i1605.1, %for.body.i.i.i.i1607 ]
  %lcmp.mod1826.not = icmp eq i64 %xtraiter1825, 0
  br i1 %lcmp.mod1826.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i, label %for.body.i.i.i.i1607.epil

for.body.i.i.i.i1607.epil:                        ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.i1603.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i1597, i64 %indvars.iv.i.i.i.i1602.unr
  %146 = load ptr, ptr %m_data.i.i.i.i1599, align 8, !tbaa !91
  %arrayidx3.i.i.i.i1604.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %146, i64 %indvars.iv.i.i.i.i1602.unr
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i1603.epil, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i1604.epil, i64 72, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i: ; preds = %for.body.i.i.i.i1607.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i
  %147 = load ptr, ptr %m_data.i.i.i.i1599, align 8, !tbaa !91
  %tobool.not.i10.i.i.i1609 = icmp eq ptr %147, null
  %148 = load i8, ptr %m_ownsMemory.i.i.i.i1610, align 8, !range !159
  %tobool2.not.i.i.i.i1611 = icmp eq i8 %148, 0
  %or.cond.i.i.i1612 = select i1 %tobool.not.i10.i.i.i1609, i1 true, i1 %tobool2.not.i.i.i.i1611
  br i1 %or.cond.i.i.i1612, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i, label %if.then3.i.i.i.i1613

if.then3.i.i.i.i1613:                             ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %147)
          to label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i unwind label %lpad386

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i: ; preds = %if.then3.i.i.i.i1613, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i.i1610, align 8, !tbaa !90
  store ptr %retval.0.i.i.i.i1597, ptr %m_data.i.i.i.i1599, align 8, !tbaa !91
  store i32 %cond.i.i.i1588, ptr %m_capacity.i.i.i1583, align 8, !tbaa !93
  %.pre7.i.i1614 = load i32, ptr %m_size.i1120, align 4, !tbaa !92
  br label %cleanup

lpad375:                                          ; preds = %if.then3.i.i.i.i, %if.then.i.i.i.i
  %149 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup449

lpad386:                                          ; preds = %if.then3.i.i.i.i1613, %if.then.i.i.i.i1596
  %150 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup449

cleanup:                                          ; preds = %if.end.i1585, %if.then.i.i1590, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i
  %151 = phi i32 [ %.pre7.i.i1614, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i ], [ %140, %if.then.i.i1590 ], [ %140, %if.end.i1585 ]
  %152 = load ptr, ptr %m_data.i.i.i.i1599, align 8, !tbaa !91
  %idxprom.i8.i1616 = sext i32 %151 to i64
  %arrayidx.i9.i1617 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %152, i64 %idxprom.i8.i1616
  store ptr %l.sroa.0.0.copyload11.i, ptr %arrayidx.i9.i1617, align 8
  %l.sroa.6.0.arrayidx.i9.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i9.i1617, i64 8
  store ptr %l.sroa.6.0.i, ptr %l.sroa.6.0.arrayidx.i9.sroa_idx.i, align 8
  %l.sroa.7.0.arrayidx.i9.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i9.i1617, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7.0.arrayidx.i9.sroa_idx.i, ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7.i, i64 56, i1 false)
  %153 = load i32, ptr %m_size.i1120, align 4, !tbaa !92
  %inc.i.i1618 = add nsw i32 %153, 1
  store i32 %inc.i.i1618, ptr %m_size.i1120, align 4, !tbaa !92
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %l.sroa.7.i)
  %154 = load ptr, ptr %m_data.i.i.i.i1599, align 8, !tbaa !91
  %idxprom.i.i1566 = sext i32 %153 to i64
  %m_n.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %154, i64 %idxprom.i.i1566, i32 1
  store ptr %arrayidx.i.i1310, ptr %m_n.i, align 8, !tbaa !219
  %arrayidx6.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %154, i64 %idxprom.i.i1566, i32 1, i64 1
  store ptr %arrayidx.i6.i, ptr %arrayidx6.i, align 8, !tbaa !219
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %134, i64 %idxprom.i1297, i32 1
  %m_x11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %134, i64 %idxprom.i1291, i32 1
  %155 = load float, ptr %m_x.i, align 4, !tbaa !137
  %156 = load float, ptr %m_x11.i, align 4, !tbaa !137
  %sub.i.i1567 = fsub float %155, %156
  %arrayidx5.i.i1568 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %134, i64 %idxprom.i1297, i32 1, i32 0, i64 1
  %157 = load float, ptr %arrayidx5.i.i1568, align 4, !tbaa !137
  %arrayidx7.i20.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %134, i64 %idxprom.i1291, i32 1, i32 0, i64 1
  %158 = load float, ptr %arrayidx7.i20.i, align 4, !tbaa !137
  %sub8.i.i1569 = fsub float %157, %158
  %arrayidx11.i.i1570 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %134, i64 %idxprom.i1297, i32 1, i32 0, i64 2
  %159 = load float, ptr %arrayidx11.i.i1570, align 4, !tbaa !137
  %arrayidx13.i.i1571 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %134, i64 %idxprom.i1291, i32 1, i32 0, i64 2
  %160 = load float, ptr %arrayidx13.i.i1571, align 4, !tbaa !137
  %sub14.i.i1572 = fsub float %159, %160
  %mul8.i.i.i.i = fmul float %sub8.i.i1569, %sub8.i.i1569
  %161 = call float @llvm.fmuladd.f32(float %sub.i.i1567, float %sub.i.i1567, float %mul8.i.i.i.i)
  %162 = call float @llvm.fmuladd.f32(float %sub14.i.i1572, float %sub14.i.i1572, float %161)
  %sqrt.i.i = call float @llvm.sqrt.f32(float %162)
  %m_rl.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %154, i64 %idxprom.i.i1566, i32 2
  store float %sqrt.i.i, ptr %m_rl.i, align 8, !tbaa !239
  store i8 1, ptr %m_bUpdateRtCst.i, align 4, !tbaa !147
  %dec445 = add nsw i32 %i.61713, -1
  %.pre1799 = load i32, ptr %m_size.i1134, align 4, !tbaa !96
  br label %for.end453

ehcleanup449:                                     ; preds = %lpad386, %lpad375
  %.pn1110 = phi { ptr, i32 } [ %150, %lpad386 ], [ %149, %lpad375 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %idx335) #38
  br label %ehcleanup894

for.inc451:                                       ; preds = %invoke.cont376, %for.body329
  %cmp364.1 = icmp sgt i32 %1, %conv343
  %cmp368.1 = icmp sgt i32 %1, %conv351
  %or.cond1813 = select i1 %cmp364.1, i1 %cmp368.1, i1 false
  br i1 %or.cond1813, label %invoke.cont376.1, label %for.inc451.1

invoke.cont376.1:                                 ; preds = %for.inc451
  %spec.select.i.i1265.1 = call i32 @llvm.smin.i32(i32 %conv343, i32 %conv351)
  %spec.select5.i.i1266.1 = call i32 @llvm.smax.i32(i32 %conv343, i32 %conv351)
  %add.i.i1267.1 = add nsw i32 %spec.select5.i.i1266.1, 1
  %mul.i.i1268.1 = mul nsw i32 %add.i.i1267.1, %spec.select5.i.i1266.1
  %div.i.i1269.1 = sdiv i32 %mul.i.i1268.1, 2
  %add2.i.i1270.1 = add nsw i32 %div.i.i1269.1, %spec.select.i.i1265.1
  %idxprom.i.i1272.1 = sext i32 %add2.i.i1270.1 to i64
  %arrayidx.i.i1273.1 = getelementptr inbounds i32, ptr %99, i64 %idxprom.i.i1272.1
  %163 = load i32, ptr %arrayidx.i.i1273.1, align 4, !tbaa !140
  %cmp378.1 = icmp sgt i32 %163, 0
  br i1 %cmp378.1, label %if.then379, label %for.inc451.1

for.inc451.1:                                     ; preds = %invoke.cont376.1, %for.inc451
  %cmp364.2 = icmp sgt i32 %1, %conv351
  %brmerge.not = and i1 %cmp364.2, %cmp364
  br i1 %brmerge.not, label %invoke.cont376.2, label %for.end453

invoke.cont376.2:                                 ; preds = %for.inc451.1
  %spec.select.i.i1265.2 = call i32 @llvm.smin.i32(i32 %conv351, i32 %conv359)
  %spec.select5.i.i1266.2 = call i32 @llvm.smax.i32(i32 %conv351, i32 %conv359)
  %add.i.i1267.2 = add nsw i32 %spec.select5.i.i1266.2, 1
  %mul.i.i1268.2 = mul nsw i32 %add.i.i1267.2, %spec.select5.i.i1266.2
  %div.i.i1269.2 = sdiv i32 %mul.i.i1268.2, 2
  %add2.i.i1270.2 = add nsw i32 %div.i.i1269.2, %spec.select.i.i1265.2
  %idxprom.i.i1272.2 = sext i32 %add2.i.i1270.2 to i64
  %arrayidx.i.i1273.2 = getelementptr inbounds i32, ptr %99, i64 %idxprom.i.i1272.2
  %164 = load i32, ptr %arrayidx.i.i1273.2, align 4, !tbaa !140
  %cmp378.2 = icmp sgt i32 %164, 0
  br i1 %cmp378.2, label %if.then379, label %for.end453

for.end453:                                       ; preds = %for.inc451.1, %invoke.cont376.2, %cleanup
  %165 = phi i32 [ %.pre1799, %cleanup ], [ %94, %invoke.cont376.2 ], [ %94, %for.inc451.1 ]
  %i.10 = phi i32 [ %dec445, %cleanup ], [ %i.61713, %invoke.cont376.2 ], [ %i.61713, %for.inc451.1 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %idx335) #38
  %inc457 = add nsw i32 %i.10, 1
  %cmp328 = icmp slt i32 %inc457, %165
  br i1 %cmp328, label %for.body329, label %for.end458

for.end458:                                       ; preds = %for.end453, %for.cond324.preheader
  br i1 %cut, label %invoke.cont462, label %if.end893

invoke.cont462:                                   ; preds = %for.end458
  %166 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %or.cond1673 = icmp sgt i32 %166, 0
  br i1 %or.cond1673, label %if.then.i.i.i1321, label %for.end532

if.then.i.i.i1321:                                ; preds = %invoke.cont462
  %conv.i.i.i.i = zext i32 %166 to i64
  %mul.i.i.i.i = shl nuw nsw i64 %conv.i.i.i.i, 2
  %call.i.i.i.i1325 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
          to label %for.body474.preheader unwind label %ehcleanup887.thread

for.body474.preheader:                            ; preds = %if.then.i.i.i1321
  call void @llvm.memset.p0.i64(ptr align 4 %call.i.i.i.i1325, i8 0, i64 %mul.i.i.i.i, i1 false), !tbaa !140
  %167 = sext i32 %1 to i64
  %wide.trip.count1762 = zext i32 %166 to i64
  br label %for.body474

for.body474:                                      ; preds = %for.body474.preheader, %if.end528
  %indvars.iv1759 = phi i64 [ 0, %for.body474.preheader ], [ %indvars.iv.next1760, %if.end528 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %x475) #38
  %168 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_x480 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %168, i64 %indvars.iv1759, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %x475, ptr noundef nonnull align 8 dereferenceable(16) %m_x480, i64 16, i1 false), !tbaa.struct !163
  %cmp481.not = icmp slt i64 %indvars.iv1759, %167
  br i1 %cmp481.not, label %lor.lhs.false, label %invoke.cont498

lor.lhs.false:                                    ; preds = %for.body474
  %vtable482 = load ptr, ptr %ifn, align 8, !tbaa !5
  %169 = load ptr, ptr %vtable482, align 8
  %call485 = invoke noundef float %169(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %x475)
          to label %invoke.cont484 unwind label %lpad477

invoke.cont484:                                   ; preds = %lor.lhs.false
  %170 = call float @llvm.fabs.f32(float %call485)
  %cmp488 = fcmp olt float %170, %accurary
  br i1 %cmp488, label %invoke.cont484.invoke.cont498_crit_edge, label %if.end528

invoke.cont484.invoke.cont498_crit_edge:          ; preds = %invoke.cont484
  %.pre1800 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  br label %invoke.cont498

invoke.cont498:                                   ; preds = %invoke.cont484.invoke.cont498_crit_edge, %for.body474
  %171 = phi ptr [ %.pre1800, %invoke.cont484.invoke.cont498_crit_edge ], [ %168, %for.body474 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %v490.sroa.0)
  %m_v495 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %171, i64 %indvars.iv1759, i32 3
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %v490.sroa.0, ptr noundef nonnull align 8 dereferenceable(16) %m_v495, i64 16, i1 false), !tbaa.struct !163
  %m_im.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %171, i64 %indvars.iv1759, i32 6
  %172 = load float, ptr %m_im.i, align 8, !tbaa !175
  %cmp.i1335 = fcmp ogt float %172, 0.000000e+00
  %div.i1336 = fdiv float 1.000000e+00, %172
  %cond.i = select i1 %cmp.i1335, float %div.i1336, float 0.000000e+00
  %cmp500 = fcmp ogt float %cond.i, 0.000000e+00
  br i1 %cmp500, label %if.then501, label %if.end512

if.then501:                                       ; preds = %invoke.cont498
  %conv504 = fmul float %cond.i, 5.000000e-01
  %conv511 = fmul float %172, 2.000000e+00
  store float %conv511, ptr %m_im.i, align 8, !tbaa !175
  br label %if.end512

lpad461:                                          ; preds = %if.then3.i.i.i1522
  %173 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup894

ehcleanup887.thread:                              ; preds = %if.then.i.i.i1321
  %174 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup894

lpad477:                                          ; preds = %lor.lhs.false
  %175 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup529

lpad497:                                          ; preds = %if.end512
  %176 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %v490.sroa.0)
  br label %ehcleanup529

if.end512:                                        ; preds = %if.then501, %invoke.cont498
  %m496.0 = phi float [ %conv504, %if.then501 ], [ %cond.i, %invoke.cont498 ]
  invoke void @_ZN10btSoftBody10appendNodeERK9btVector3f(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(16) %x475, float noundef %m496.0)
          to label %invoke.cont513 unwind label %lpad497

invoke.cont513:                                   ; preds = %if.end512
  %177 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %sub517 = add nsw i32 %177, -1
  %arrayidx.i1343 = getelementptr inbounds i32, ptr %call.i.i.i.i1325, i64 %indvars.iv1759
  store i32 %sub517, ptr %arrayidx.i1343, align 4, !tbaa !140
  %178 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1348 = sext i32 %sub517 to i64
  %m_v525 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %178, i64 %idxprom.i1348, i32 3
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_v525, ptr noundef nonnull align 4 dereferenceable(16) %v490.sroa.0, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %v490.sroa.0)
  br label %if.end528

if.end528:                                        ; preds = %invoke.cont513, %invoke.cont484
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %x475) #38
  %indvars.iv.next1760 = add nuw nsw i64 %indvars.iv1759, 1
  %exitcond1763.not = icmp eq i64 %indvars.iv.next1760, %wide.trip.count1762
  br i1 %exitcond1763.not, label %for.end532, label %for.body474

ehcleanup529:                                     ; preds = %lpad497, %lpad477
  %.pn1106 = phi { ptr, i32 } [ %176, %lpad497 ], [ %175, %lpad477 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %x475) #38
  br label %ehcleanup887

for.end532:                                       ; preds = %if.end528, %invoke.cont462
  %cnodes.sroa.151639.11804 = phi ptr [ null, %invoke.cont462 ], [ %call.i.i.i.i1325, %if.end528 ]
  %179 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %180 = load i32, ptr %m_size.i1120, align 4, !tbaa !92
  %cmp5401717 = icmp sgt i32 %180, 0
  br i1 %cmp5401717, label %for.body541.lr.ph, label %for.end649

for.body541.lr.ph:                                ; preds = %for.end532
  %m_data.i1352 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %sub.ptr.rhs.cast550 = ptrtoint ptr %179 to i64
  %wide.trip.count1770 = zext i32 %180 to i64
  br label %for.body541

for.body541:                                      ; preds = %for.body541.lr.ph, %if.end644
  %indvars.iv1767 = phi i64 [ 0, %for.body541.lr.ph ], [ %indvars.iv.next1768, %if.end644 ]
  %181 = load ptr, ptr %m_data.i1352, align 8, !tbaa !91
  %m_n547 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %181, i64 %indvars.iv1767, i32 1
  %182 = load ptr, ptr %m_n547, align 8, !tbaa !219
  %sub.ptr.lhs.cast549 = ptrtoint ptr %182 to i64
  %sub.ptr.sub551 = sub i64 %sub.ptr.lhs.cast549, %sub.ptr.rhs.cast550
  %sub.ptr.div552 = sdiv exact i64 %sub.ptr.sub551, 120
  %arrayidx559 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %181, i64 %indvars.iv1767, i32 1, i64 1
  %183 = load ptr, ptr %arrayidx559, align 8, !tbaa !219
  %sub.ptr.lhs.cast560 = ptrtoint ptr %183 to i64
  %sub.ptr.sub562 = sub i64 %sub.ptr.lhs.cast560, %sub.ptr.rhs.cast550
  %sub.ptr.div563 = sdiv exact i64 %sub.ptr.sub562, 120
  %sext1679 = shl i64 %sub.ptr.div552, 32
  %idxprom.i1359 = ashr exact i64 %sext1679, 32
  %arrayidx.i1360 = getelementptr inbounds i32, ptr %cnodes.sroa.151639.11804, i64 %idxprom.i1359
  %184 = load i32, ptr %arrayidx.i1360, align 4, !tbaa !140
  %tobool569.not = icmp eq i32 %184, 0
  br i1 %tobool569.not, label %if.else581, label %land.lhs.true570

land.lhs.true570:                                 ; preds = %for.body541
  %sext1680 = shl i64 %sub.ptr.div563, 32
  %idxprom.i1362 = ashr exact i64 %sext1680, 32
  %arrayidx.i1363 = getelementptr inbounds i32, ptr %cnodes.sroa.151639.11804, i64 %idxprom.i1362
  %185 = load i32, ptr %arrayidx.i1363, align 4, !tbaa !140
  %tobool574.not = icmp eq i32 %185, 0
  br i1 %tobool574.not, label %if.else581, label %if.then575

if.then575:                                       ; preds = %land.lhs.true570
  %186 = trunc i64 %indvars.iv1767 to i32
  invoke void @_ZN10btSoftBody10appendLinkEiPNS_8MaterialE(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %186, ptr noundef null)
          to label %invoke.cont576 unwind label %ehcleanup887.thread1667

invoke.cont576:                                   ; preds = %if.then575
  %187 = load i32, ptr %m_size.i1120, align 4, !tbaa !92
  %sub580 = add nsw i32 %187, -1
  br label %if.end605

ehcleanup887.thread1667:                          ; preds = %if.then575, %if.else581, %land.lhs.true592
  %188 = landingpad { ptr, i32 }
          cleanup
  br label %if.then3.i.i.i1542

if.else581:                                       ; preds = %land.lhs.true570, %for.body541
  %189 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_x586 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %189, i64 %idxprom.i1359, i32 1
  %vtable587 = load ptr, ptr %ifn, align 8, !tbaa !5
  %190 = load ptr, ptr %vtable587, align 8
  %call590 = invoke noundef float %190(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %m_x586)
          to label %invoke.cont589 unwind label %ehcleanup887.thread1667

invoke.cont589:                                   ; preds = %if.else581
  %cmp591 = fcmp olt float %call590, %accurary
  br i1 %cmp591, label %land.lhs.true592, label %if.end644

land.lhs.true592:                                 ; preds = %invoke.cont589
  %191 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %sext1682 = shl i64 %sub.ptr.div563, 32
  %idxprom.i1369 = ashr exact i64 %sext1682, 32
  %m_x597 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %191, i64 %idxprom.i1369, i32 1
  %vtable598 = load ptr, ptr %ifn, align 8, !tbaa !5
  %192 = load ptr, ptr %vtable598, align 8
  %call601 = invoke noundef float %192(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %m_x597)
          to label %invoke.cont600 unwind label %ehcleanup887.thread1667

invoke.cont600:                                   ; preds = %land.lhs.true592
  %cmp602 = fcmp olt float %call601, %accurary
  %193 = trunc i64 %indvars.iv1767 to i32
  br i1 %cmp602, label %if.end605, label %if.end644

if.end605:                                        ; preds = %invoke.cont600, %invoke.cont576
  %todetach.0 = phi i32 [ %sub580, %invoke.cont576 ], [ %193, %invoke.cont600 ]
  %tobool606.not = icmp eq i32 %todetach.0, 0
  br i1 %tobool606.not, label %if.end644, label %if.then607

if.then607:                                       ; preds = %if.end605
  %194 = load ptr, ptr %m_data.i1352, align 8, !tbaa !91
  %idxprom.i1372 = sext i32 %todetach.0 to i64
  %arrayidx619 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %194, i64 %idxprom.i1372, i32 1, i64 0
  %195 = load ptr, ptr %arrayidx619, align 8, !tbaa !219
  %sub.ptr.lhs.cast620 = ptrtoint ptr %195 to i64
  %sub.ptr.sub622 = sub i64 %sub.ptr.lhs.cast620, %sub.ptr.rhs.cast550
  %sub.ptr.div623 = sdiv exact i64 %sub.ptr.sub622, 120
  %sext1681 = shl i64 %sub.ptr.div623, 32
  %idxprom.i1375 = ashr exact i64 %sext1681, 32
  %arrayidx.i1376 = getelementptr inbounds i32, ptr %cnodes.sroa.151639.11804, i64 %idxprom.i1375
  %196 = load i32, ptr %arrayidx.i1376, align 4, !tbaa !140
  %tobool628.not = icmp eq i32 %196, 0
  br i1 %tobool628.not, label %if.end636, label %if.then629

if.then629:                                       ; preds = %if.then607
  %197 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1378 = sext i32 %196 to i64
  %arrayidx.i1379 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %197, i64 %idxprom.i1378
  store ptr %arrayidx.i1379, ptr %arrayidx619, align 8, !tbaa !219
  br label %if.end636

if.end636:                                        ; preds = %if.then629, %if.then607
  %arrayidx619.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %194, i64 %idxprom.i1372, i32 1, i64 1
  %198 = load ptr, ptr %arrayidx619.1, align 8, !tbaa !219
  %sub.ptr.lhs.cast620.1 = ptrtoint ptr %198 to i64
  %sub.ptr.sub622.1 = sub i64 %sub.ptr.lhs.cast620.1, %sub.ptr.rhs.cast550
  %sub.ptr.div623.1 = sdiv exact i64 %sub.ptr.sub622.1, 120
  %sext1681.1 = shl i64 %sub.ptr.div623.1, 32
  %idxprom.i1375.1 = ashr exact i64 %sext1681.1, 32
  %arrayidx.i1376.1 = getelementptr inbounds i32, ptr %cnodes.sroa.151639.11804, i64 %idxprom.i1375.1
  %199 = load i32, ptr %arrayidx.i1376.1, align 4, !tbaa !140
  %tobool628.not.1 = icmp eq i32 %199, 0
  br i1 %tobool628.not.1, label %if.end644, label %if.then629.1

if.then629.1:                                     ; preds = %if.end636
  %200 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1378.1 = sext i32 %199 to i64
  %arrayidx.i1379.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %200, i64 %idxprom.i1378.1
  store ptr %arrayidx.i1379.1, ptr %arrayidx619.1, align 8, !tbaa !219
  br label %if.end644

if.end644:                                        ; preds = %if.end636, %if.then629.1, %invoke.cont589, %invoke.cont600, %if.end605
  %indvars.iv.next1768 = add nuw nsw i64 %indvars.iv1767, 1
  %exitcond1771.not = icmp eq i64 %indvars.iv.next1768, %wide.trip.count1770
  br i1 %exitcond1771.not, label %for.end649, label %for.body541

for.end649:                                       ; preds = %if.end644, %for.end532
  %201 = load i32, ptr %m_size.i1134, align 4, !tbaa !96
  %cmp6541721 = icmp sgt i32 %201, 0
  br i1 %cmp6541721, label %for.body655.lr.ph, label %invoke.cont727

for.body655.lr.ph:                                ; preds = %for.end649
  %m_data.i1381 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %sub.ptr.rhs.cast694 = ptrtoint ptr %179 to i64
  %wide.trip.count1779 = zext i32 %201 to i64
  br label %for.body655

for.body655:                                      ; preds = %for.body655.lr.ph, %if.end715
  %indvars.iv1776 = phi i64 [ 0, %for.body655.lr.ph ], [ %indvars.iv.next1777, %if.end715 ]
  %202 = load ptr, ptr %m_data.i1381, align 8, !tbaa !95
  %m_n660 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %202, i64 %indvars.iv1776, i32 1
  %203 = load ptr, ptr %m_n660, align 8, !tbaa !219
  %m_x662 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %203, i64 0, i32 1
  %vtable663 = load ptr, ptr %ifn, align 8, !tbaa !5
  %204 = load ptr, ptr %vtable663, align 8
  %call666 = invoke noundef float %204(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %m_x662)
          to label %invoke.cont665 unwind label %lpad657

invoke.cont665:                                   ; preds = %for.body655
  %cmp667 = fcmp olt float %call666, %accurary
  br i1 %cmp667, label %land.lhs.true668, label %if.end715

land.lhs.true668:                                 ; preds = %invoke.cont665
  %arrayidx669 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %202, i64 %indvars.iv1776, i32 1, i64 1
  %205 = load ptr, ptr %arrayidx669, align 8, !tbaa !219
  %m_x670 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %205, i64 0, i32 1
  %vtable671 = load ptr, ptr %ifn, align 8, !tbaa !5
  %206 = load ptr, ptr %vtable671, align 8
  %call674 = invoke noundef float %206(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %m_x670)
          to label %invoke.cont673 unwind label %lpad657

invoke.cont673:                                   ; preds = %land.lhs.true668
  %cmp675 = fcmp olt float %call674, %accurary
  br i1 %cmp675, label %land.lhs.true676, label %if.end715

land.lhs.true676:                                 ; preds = %invoke.cont673
  %arrayidx677 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %202, i64 %indvars.iv1776, i32 1, i64 2
  %207 = load ptr, ptr %arrayidx677, align 8, !tbaa !219
  %m_x678 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %207, i64 0, i32 1
  %vtable679 = load ptr, ptr %ifn, align 8, !tbaa !5
  %208 = load ptr, ptr %vtable679, align 8
  %call682 = invoke noundef float %208(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %m_x678)
          to label %invoke.cont681 unwind label %lpad657

invoke.cont681:                                   ; preds = %land.lhs.true676
  %cmp683 = fcmp olt float %call682, %accurary
  br i1 %cmp683, label %for.body689.preheader, label %if.end715

for.body689.preheader:                            ; preds = %invoke.cont681
  %209 = load ptr, ptr %m_n660, align 8, !tbaa !219
  %sub.ptr.lhs.cast693 = ptrtoint ptr %209 to i64
  %sub.ptr.sub695 = sub i64 %sub.ptr.lhs.cast693, %sub.ptr.rhs.cast694
  %sub.ptr.div696 = sdiv exact i64 %sub.ptr.sub695, 120
  %sext1678 = shl i64 %sub.ptr.div696, 32
  %idxprom.i1385 = ashr exact i64 %sext1678, 32
  %arrayidx.i1386 = getelementptr inbounds i32, ptr %cnodes.sroa.151639.11804, i64 %idxprom.i1385
  %210 = load i32, ptr %arrayidx.i1386, align 4, !tbaa !140
  %tobool701.not = icmp eq i32 %210, 0
  br i1 %tobool701.not, label %if.end708, label %if.then702

lpad657:                                          ; preds = %land.lhs.true676, %land.lhs.true668, %for.body655
  %211 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup887

if.then702:                                       ; preds = %for.body689.preheader
  %212 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1388 = sext i32 %210 to i64
  %arrayidx.i1389 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %212, i64 %idxprom.i1388
  store ptr %arrayidx.i1389, ptr %m_n660, align 8, !tbaa !219
  br label %if.end708

if.end708:                                        ; preds = %if.then702, %for.body689.preheader
  %arrayidx692.1 = getelementptr inbounds ptr, ptr %m_n660, i64 1
  %213 = load ptr, ptr %arrayidx692.1, align 8, !tbaa !219
  %sub.ptr.lhs.cast693.1 = ptrtoint ptr %213 to i64
  %sub.ptr.sub695.1 = sub i64 %sub.ptr.lhs.cast693.1, %sub.ptr.rhs.cast694
  %sub.ptr.div696.1 = sdiv exact i64 %sub.ptr.sub695.1, 120
  %sext1678.1 = shl i64 %sub.ptr.div696.1, 32
  %idxprom.i1385.1 = ashr exact i64 %sext1678.1, 32
  %arrayidx.i1386.1 = getelementptr inbounds i32, ptr %cnodes.sroa.151639.11804, i64 %idxprom.i1385.1
  %214 = load i32, ptr %arrayidx.i1386.1, align 4, !tbaa !140
  %tobool701.not.1 = icmp eq i32 %214, 0
  br i1 %tobool701.not.1, label %if.end708.1, label %if.then702.1

if.then702.1:                                     ; preds = %if.end708
  %215 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1388.1 = sext i32 %214 to i64
  %arrayidx.i1389.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %215, i64 %idxprom.i1388.1
  store ptr %arrayidx.i1389.1, ptr %arrayidx692.1, align 8, !tbaa !219
  br label %if.end708.1

if.end708.1:                                      ; preds = %if.then702.1, %if.end708
  %arrayidx692.2 = getelementptr inbounds ptr, ptr %m_n660, i64 2
  %216 = load ptr, ptr %arrayidx692.2, align 8, !tbaa !219
  %sub.ptr.lhs.cast693.2 = ptrtoint ptr %216 to i64
  %sub.ptr.sub695.2 = sub i64 %sub.ptr.lhs.cast693.2, %sub.ptr.rhs.cast694
  %sub.ptr.div696.2 = sdiv exact i64 %sub.ptr.sub695.2, 120
  %sext1678.2 = shl i64 %sub.ptr.div696.2, 32
  %idxprom.i1385.2 = ashr exact i64 %sext1678.2, 32
  %arrayidx.i1386.2 = getelementptr inbounds i32, ptr %cnodes.sroa.151639.11804, i64 %idxprom.i1385.2
  %217 = load i32, ptr %arrayidx.i1386.2, align 4, !tbaa !140
  %tobool701.not.2 = icmp eq i32 %217, 0
  br i1 %tobool701.not.2, label %if.end715, label %if.then702.2

if.then702.2:                                     ; preds = %if.end708.1
  %218 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1388.2 = sext i32 %217 to i64
  %arrayidx.i1389.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %218, i64 %idxprom.i1388.2
  store ptr %arrayidx.i1389.2, ptr %arrayidx692.2, align 8, !tbaa !219
  br label %if.end715

if.end715:                                        ; preds = %if.end708.1, %if.then702.2, %invoke.cont681, %invoke.cont673, %invoke.cont665
  %indvars.iv.next1777 = add nuw nsw i64 %indvars.iv1776, 1
  %exitcond1780.not = icmp eq i64 %indvars.iv.next1777, %wide.trip.count1779
  br i1 %exitcond1780.not, label %invoke.cont727, label %for.body655

invoke.cont727:                                   ; preds = %if.end715, %for.end649
  %219 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %or.cond1674 = icmp sgt i32 %219, 0
  br i1 %or.cond1674, label %if.then.i.i.i1411, label %invoke.cont730

if.then.i.i.i1411:                                ; preds = %invoke.cont727
  %conv.i.i.i.i1408 = zext i32 %219 to i64
  %mul.i.i.i.i1409 = shl nuw nsw i64 %conv.i.i.i.i1408, 2
  %call.i.i.i.i1443 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1409, i32 noundef 16)
          to label %for.body10.lr.ph.i1436 unwind label %_ZN20btAlignedObjectArrayIiED2Ev.exit1536

for.body10.lr.ph.i1436:                           ; preds = %if.then.i.i.i1411
  call void @llvm.memset.p0.i64(ptr align 4 %call.i.i.i.i1443, i8 0, i64 %mul.i.i.i.i1409, i1 false), !tbaa !140
  br label %invoke.cont730

invoke.cont730:                                   ; preds = %for.body10.lr.ph.i1436, %invoke.cont727
  %ranks.sroa.151626.1 = phi ptr [ null, %invoke.cont727 ], [ %call.i.i.i.i1443, %for.body10.lr.ph.i1436 ]
  %220 = load i32, ptr %m_size.i1120, align 4, !tbaa !92
  %cmp7371724 = icmp sgt i32 %220, 0
  br i1 %cmp7371724, label %for.cond740.preheader.lr.ph, label %for.end766

for.cond740.preheader.lr.ph:                      ; preds = %invoke.cont730
  %m_data.i1455 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %221 = load ptr, ptr %m_data.i1455, align 8, !tbaa !91
  %sub.ptr.rhs.cast752 = ptrtoint ptr %179 to i64
  %wide.trip.count1787 = zext i32 %220 to i64
  br label %for.cond740.preheader

for.cond740.preheader:                            ; preds = %for.cond740.preheader.lr.ph, %for.cond740.preheader
  %indvars.iv1784 = phi i64 [ 0, %for.cond740.preheader.lr.ph ], [ %indvars.iv.next1785, %for.cond740.preheader ]
  %arrayidx750 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %221, i64 %indvars.iv1784, i32 1, i64 0
  %222 = load ptr, ptr %arrayidx750, align 8, !tbaa !219
  %sub.ptr.lhs.cast751 = ptrtoint ptr %222 to i64
  %sub.ptr.sub753 = sub i64 %sub.ptr.lhs.cast751, %sub.ptr.rhs.cast752
  %sub.ptr.div754 = sdiv exact i64 %sub.ptr.sub753, 120
  %sext1677 = shl i64 %sub.ptr.div754, 32
  %idxprom.i1459 = ashr exact i64 %sext1677, 32
  %arrayidx.i1460 = getelementptr inbounds i32, ptr %ranks.sroa.151626.1, i64 %idxprom.i1459
  %223 = load i32, ptr %arrayidx.i1460, align 4, !tbaa !140
  %inc758 = add nsw i32 %223, 1
  store i32 %inc758, ptr %arrayidx.i1460, align 4, !tbaa !140
  %arrayidx750.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %221, i64 %indvars.iv1784, i32 1, i64 1
  %224 = load ptr, ptr %arrayidx750.1, align 8, !tbaa !219
  %sub.ptr.lhs.cast751.1 = ptrtoint ptr %224 to i64
  %sub.ptr.sub753.1 = sub i64 %sub.ptr.lhs.cast751.1, %sub.ptr.rhs.cast752
  %sub.ptr.div754.1 = sdiv exact i64 %sub.ptr.sub753.1, 120
  %sext1677.1 = shl i64 %sub.ptr.div754.1, 32
  %idxprom.i1459.1 = ashr exact i64 %sext1677.1, 32
  %arrayidx.i1460.1 = getelementptr inbounds i32, ptr %ranks.sroa.151626.1, i64 %idxprom.i1459.1
  %225 = load i32, ptr %arrayidx.i1460.1, align 4, !tbaa !140
  %inc758.1 = add nsw i32 %225, 1
  store i32 %inc758.1, ptr %arrayidx.i1460.1, align 4, !tbaa !140
  %indvars.iv.next1785 = add nuw nsw i64 %indvars.iv1784, 1
  %exitcond1788.not = icmp eq i64 %indvars.iv.next1785, %wide.trip.count1787
  br i1 %exitcond1788.not, label %for.end766, label %for.cond740.preheader

lpad724:                                          ; preds = %if.then3.i.i.i1512
  %226 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup887

for.end766:                                       ; preds = %for.cond740.preheader, %invoke.cont730
  %227 = load i32, ptr %m_size.i1134, align 4, !tbaa !96
  %cmp7711727 = icmp sgt i32 %227, 0
  br i1 %cmp7711727, label %for.cond774.preheader.lr.ph, label %for.cond801.preheader

for.cond774.preheader.lr.ph:                      ; preds = %for.end766
  %m_data.i1462 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %228 = load ptr, ptr %m_data.i1462, align 8, !tbaa !95
  %sub.ptr.rhs.cast786 = ptrtoint ptr %179 to i64
  %wide.trip.count1796 = zext i32 %227 to i64
  br label %for.cond774.preheader

for.cond774.preheader:                            ; preds = %for.cond774.preheader.lr.ph, %for.cond774.preheader
  %indvars.iv1793 = phi i64 [ 0, %for.cond774.preheader.lr.ph ], [ %indvars.iv.next1794, %for.cond774.preheader ]
  %arrayidx784 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %228, i64 %indvars.iv1793, i32 1, i64 0
  %229 = load ptr, ptr %arrayidx784, align 8, !tbaa !219
  %sub.ptr.lhs.cast785 = ptrtoint ptr %229 to i64
  %sub.ptr.sub787 = sub i64 %sub.ptr.lhs.cast785, %sub.ptr.rhs.cast786
  %sub.ptr.div788 = sdiv exact i64 %sub.ptr.sub787, 120
  %sext1676 = shl i64 %sub.ptr.div788, 32
  %idxprom.i1466 = ashr exact i64 %sext1676, 32
  %arrayidx.i1467 = getelementptr inbounds i32, ptr %ranks.sroa.151626.1, i64 %idxprom.i1466
  %230 = load i32, ptr %arrayidx.i1467, align 4, !tbaa !140
  %inc792 = add nsw i32 %230, 1
  store i32 %inc792, ptr %arrayidx.i1467, align 4, !tbaa !140
  %arrayidx784.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %228, i64 %indvars.iv1793, i32 1, i64 1
  %231 = load ptr, ptr %arrayidx784.1, align 8, !tbaa !219
  %sub.ptr.lhs.cast785.1 = ptrtoint ptr %231 to i64
  %sub.ptr.sub787.1 = sub i64 %sub.ptr.lhs.cast785.1, %sub.ptr.rhs.cast786
  %sub.ptr.div788.1 = sdiv exact i64 %sub.ptr.sub787.1, 120
  %sext1676.1 = shl i64 %sub.ptr.div788.1, 32
  %idxprom.i1466.1 = ashr exact i64 %sext1676.1, 32
  %arrayidx.i1467.1 = getelementptr inbounds i32, ptr %ranks.sroa.151626.1, i64 %idxprom.i1466.1
  %232 = load i32, ptr %arrayidx.i1467.1, align 4, !tbaa !140
  %inc792.1 = add nsw i32 %232, 1
  store i32 %inc792.1, ptr %arrayidx.i1467.1, align 4, !tbaa !140
  %arrayidx784.2 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %228, i64 %indvars.iv1793, i32 1, i64 2
  %233 = load ptr, ptr %arrayidx784.2, align 8, !tbaa !219
  %sub.ptr.lhs.cast785.2 = ptrtoint ptr %233 to i64
  %sub.ptr.sub787.2 = sub i64 %sub.ptr.lhs.cast785.2, %sub.ptr.rhs.cast786
  %sub.ptr.div788.2 = sdiv exact i64 %sub.ptr.sub787.2, 120
  %sext1676.2 = shl i64 %sub.ptr.div788.2, 32
  %idxprom.i1466.2 = ashr exact i64 %sext1676.2, 32
  %arrayidx.i1467.2 = getelementptr inbounds i32, ptr %ranks.sroa.151626.1, i64 %idxprom.i1466.2
  %234 = load i32, ptr %arrayidx.i1467.2, align 4, !tbaa !140
  %inc792.2 = add nsw i32 %234, 1
  store i32 %inc792.2, ptr %arrayidx.i1467.2, align 4, !tbaa !140
  %indvars.iv.next1794 = add nuw nsw i64 %indvars.iv1793, 1
  %exitcond1797.not = icmp eq i64 %indvars.iv.next1794, %wide.trip.count1796
  br i1 %exitcond1797.not, label %for.cond801.preheader, label %for.cond774.preheader

for.cond801.preheader:                            ; preds = %for.cond774.preheader, %for.end766
  %235 = load i32, ptr %m_size.i1120, align 4, !tbaa !92
  %cmp8051729 = icmp sgt i32 %235, 0
  br i1 %cmp8051729, label %for.body806.lr.ph, label %invoke.cont878

for.body806.lr.ph:                                ; preds = %for.cond801.preheader
  %m_data.i1469 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %sub.ptr.rhs.cast816 = ptrtoint ptr %179 to i64
  br label %for.body806

for.body806:                                      ; preds = %for.body806.lr.ph, %if.end872
  %236 = phi i32 [ %235, %for.body806.lr.ph ], [ %245, %if.end872 ]
  %i463.51730 = phi i32 [ 0, %for.body806.lr.ph ], [ %inc876, %if.end872 ]
  %237 = load ptr, ptr %m_data.i1469, align 8, !tbaa !91
  %idxprom.i1470 = sext i32 %i463.51730 to i64
  %m_n813 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %237, i64 %idxprom.i1470, i32 1
  %238 = load ptr, ptr %m_n813, align 8, !tbaa !219
  %sub.ptr.lhs.cast815 = ptrtoint ptr %238 to i64
  %sub.ptr.sub817 = sub i64 %sub.ptr.lhs.cast815, %sub.ptr.rhs.cast816
  %sub.ptr.div818 = sdiv exact i64 %sub.ptr.sub817, 120
  %arrayidx825 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %237, i64 %idxprom.i1470, i32 1, i64 1
  %239 = load ptr, ptr %arrayidx825, align 8, !tbaa !219
  %sub.ptr.lhs.cast826 = ptrtoint ptr %239 to i64
  %sub.ptr.sub828 = sub i64 %sub.ptr.lhs.cast826, %sub.ptr.rhs.cast816
  %sub.ptr.div829 = sdiv exact i64 %sub.ptr.sub828, 120
  %sext = shl i64 %sub.ptr.div818, 32
  %idxprom.i1476 = ashr exact i64 %sext, 32
  %arrayidx.i1477 = getelementptr inbounds i32, ptr %ranks.sroa.151626.1, i64 %idxprom.i1476
  %240 = load i32, ptr %arrayidx.i1477, align 4, !tbaa !140
  %cmp836 = icmp eq i32 %240, 1
  %sext1675 = shl i64 %sub.ptr.div829, 32
  %idxprom.i1479 = ashr exact i64 %sext1675, 32
  %arrayidx.i1480 = getelementptr inbounds i32, ptr %ranks.sroa.151626.1, i64 %idxprom.i1479
  %241 = load i32, ptr %arrayidx.i1480, align 4
  %cmp842 = icmp eq i32 %241, 1
  %or.cond1119 = select i1 %cmp836, i1 true, i1 %cmp842
  br i1 %or.cond1119, label %if.then849, label %if.end872

if.then849:                                       ; preds = %for.body806
  %arrayidx.i1471 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %237, i64 %idxprom.i1470
  %dec853 = add nsw i32 %240, -1
  store i32 %dec853, ptr %arrayidx.i1477, align 4, !tbaa !140
  %242 = load i32, ptr %arrayidx.i1480, align 4, !tbaa !140
  %dec857 = add nsw i32 %242, -1
  store i32 %dec857, ptr %arrayidx.i1480, align 4, !tbaa !140
  %243 = load i32, ptr %m_size.i1120, align 4, !tbaa !92
  %sub865 = add nsw i32 %243, -1
  %idxprom.i1492 = sext i32 %sub865 to i64
  %arrayidx.i1493 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %237, i64 %idxprom.i1492
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %tmp.i1494)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tmp.i1494, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i1471, i64 72, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(68) %arrayidx.i1471, ptr noundef nonnull align 8 dereferenceable(68) %arrayidx.i1493, i64 68, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(68) %arrayidx.i1493, ptr noundef nonnull align 8 dereferenceable(68) %tmp.i1494, i64 68, i1 false)
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %tmp.i1494)
  %244 = load i32, ptr %m_size.i1120, align 4, !tbaa !92
  %dec.i1496 = add nsw i32 %244, -1
  store i32 %dec.i1496, ptr %m_size.i1120, align 4, !tbaa !92
  %dec871 = add nsw i32 %i463.51730, -1
  br label %if.end872

if.end872:                                        ; preds = %for.body806, %if.then849
  %245 = phi i32 [ %dec.i1496, %if.then849 ], [ %236, %for.body806 ]
  %i463.6 = phi i32 [ %dec871, %if.then849 ], [ %i463.51730, %for.body806 ]
  %inc876 = add nsw i32 %i463.6, 1
  %cmp805 = icmp slt i32 %inc876, %245
  br i1 %cmp805, label %for.body806, label %if.then3.i.i.i1512

invoke.cont878:                                   ; preds = %for.cond801.preheader
  %tobool.not.i.i.i1508 = icmp eq ptr %ranks.sroa.151626.1, null
  br i1 %tobool.not.i.i.i1508, label %invoke.cont882, label %if.then3.i.i.i1512

if.then3.i.i.i1512:                               ; preds = %if.end872, %invoke.cont878
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %ranks.sroa.151626.1)
          to label %invoke.cont882 unwind label %lpad724

invoke.cont882:                                   ; preds = %invoke.cont878, %if.then3.i.i.i1512
  %tobool.not.i.i.i1518 = icmp eq ptr %cnodes.sroa.151639.11804, null
  br i1 %tobool.not.i.i.i1518, label %if.end893, label %if.then3.i.i.i1522

if.then3.i.i.i1522:                               ; preds = %invoke.cont882
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %cnodes.sroa.151639.11804)
          to label %if.end893 unwind label %lpad461

_ZN20btAlignedObjectArrayIiED2Ev.exit1536:        ; preds = %if.then.i.i.i1411
  %246 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup887

ehcleanup887:                                     ; preds = %lpad724, %_ZN20btAlignedObjectArrayIiED2Ev.exit1536, %lpad657, %ehcleanup529
  %cnodes.sroa.151639.11805 = phi ptr [ %call.i.i.i.i1325, %ehcleanup529 ], [ %cnodes.sroa.151639.11804, %lpad657 ], [ %cnodes.sroa.151639.11804, %lpad724 ], [ %cnodes.sroa.151639.11804, %_ZN20btAlignedObjectArrayIiED2Ev.exit1536 ]
  %.pn1106.pn = phi { ptr, i32 } [ %.pn1106, %ehcleanup529 ], [ %211, %lpad657 ], [ %226, %lpad724 ], [ %246, %_ZN20btAlignedObjectArrayIiED2Ev.exit1536 ]
  %tobool.not.i.i.i1538 = icmp eq ptr %cnodes.sroa.151639.11805, null
  br i1 %tobool.not.i.i.i1538, label %ehcleanup894, label %if.then3.i.i.i1542

if.then3.i.i.i1542:                               ; preds = %ehcleanup887.thread1667, %ehcleanup887
  %cnodes.sroa.151639.11806 = phi ptr [ %cnodes.sroa.151639.11804, %ehcleanup887.thread1667 ], [ %cnodes.sroa.151639.11805, %ehcleanup887 ]
  %.pn1106.pn1672 = phi { ptr, i32 } [ %188, %ehcleanup887.thread1667 ], [ %.pn1106.pn, %ehcleanup887 ]
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %cnodes.sroa.151639.11806)
          to label %ehcleanup894 unwind label %terminate.lpad

if.end893:                                        ; preds = %if.then3.i.i.i1522, %invoke.cont882, %for.end458
  %m_bUpdateRtCst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  store i8 1, ptr %m_bUpdateRtCst, align 4, !tbaa !147
  %m_data.i.i.i.i1547 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %edges, i64 0, i32 5
  %247 = load ptr, ptr %m_data.i.i.i.i1547, align 8, !tbaa !131
  %tobool.not.i.i.i.i1548 = icmp eq ptr %247, null
  %m_ownsMemory.i.i.i.i1549 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %edges, i64 0, i32 6
  %248 = load i8, ptr %m_ownsMemory.i.i.i.i1549, align 8, !range !159
  %tobool2.not.i.i.i.i1550 = icmp eq i8 %248, 0
  %or.cond.i.i.i1551 = select i1 %tobool.not.i.i.i.i1548, i1 true, i1 %tobool2.not.i.i.i.i1550
  br i1 %or.cond.i.i.i1551, label %_ZN11btSymMatrixIiED2Ev.exit, label %if.then3.i.i.i.i1552

if.then3.i.i.i.i1552:                             ; preds = %if.end893
  call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %247)
  br label %_ZN11btSymMatrixIiED2Ev.exit

_ZN11btSymMatrixIiED2Ev.exit:                     ; preds = %if.end893, %if.then3.i.i.i.i1552
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %edges) #38
  ret void

ehcleanup894:                                     ; preds = %lpad146.loopexit, %lpad146.loopexit.split-lp, %lpad461, %if.then3.i.i.i1542, %ehcleanup887.thread, %ehcleanup887, %lpad10, %lpad19, %lpad206, %ehcleanup449, %lpad270
  %.pn1116.pn = phi { ptr, i32 } [ %93, %lpad270 ], [ %.pn1110, %ehcleanup449 ], [ %77, %lpad206 ], [ %16, %lpad19 ], [ %15, %lpad10 ], [ %173, %lpad461 ], [ %174, %ehcleanup887.thread ], [ %.pn1106.pn, %ehcleanup887 ], [ %.pn1106.pn1672, %if.then3.i.i.i1542 ], [ %lpad.loopexit, %lpad146.loopexit ], [ %lpad.loopexit.split-lp, %lpad146.loopexit.split-lp ]
  %m_data.i.i.i.i1553 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %edges, i64 0, i32 5
  %249 = load ptr, ptr %m_data.i.i.i.i1553, align 8, !tbaa !131
  %tobool.not.i.i.i.i1554 = icmp eq ptr %249, null
  %m_ownsMemory.i.i.i.i1555 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %edges, i64 0, i32 6
  %250 = load i8, ptr %m_ownsMemory.i.i.i.i1555, align 8, !range !159
  %tobool2.not.i.i.i.i1556 = icmp eq i8 %250, 0
  %or.cond.i.i.i1557 = select i1 %tobool.not.i.i.i.i1554, i1 true, i1 %tobool2.not.i.i.i.i1556
  br i1 %or.cond.i.i.i1557, label %invoke.cont900, label %if.then3.i.i.i.i1558

if.then3.i.i.i.i1558:                             ; preds = %ehcleanup894
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %249)
          to label %invoke.cont900 unwind label %terminate.lpad

invoke.cont900:                                   ; preds = %ehcleanup894, %if.then3.i.i.i.i1558
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %edges) #38
  resume { ptr, i32 } %.pn1116.pn

terminate.lpad:                                   ; preds = %if.then3.i.i.i.i1558, %if.then3.i.i.i1542
  %251 = landingpad { ptr, i32 }
          catch ptr null
  %252 = extractvalue { ptr, i32 } %251, 0
  call void @__clang_call_terminate(ptr %252) #39
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN11btSymMatrixIiEC2EiRKi(ptr noundef nonnull align 8 dereferenceable(36) %this, i32 noundef %n, ptr noundef nonnull align 4 dereferenceable(4) %init) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %this, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !130
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %this, i64 0, i32 5
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !131
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !132
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !133
  %dim.i = getelementptr inbounds %struct.btSymMatrix, ptr %this, i64 0, i32 1
  store i32 %n, ptr %dim.i, align 8, !tbaa !387
  %add.i = add nsw i32 %n, 1
  %mul.i = mul nsw i32 %add.i, %n
  %div.i = sdiv i32 %mul.i, 2
  %cmp4.i.i = icmp sgt i32 %mul.i, 1
  br i1 %cmp4.i.i, label %if.then.i.i.i.i, label %invoke.cont

if.then.i.i.i.i:                                  ; preds = %entry
  %conv.i.i.i.i.i = zext i32 %div.i to i64
  %mul.i.i.i.i.i = shl nuw nsw i64 %conv.i.i.i.i.i, 2
  %call.i.i.i.i.i4 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i.i, i32 noundef 16)
          to label %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i.i unwind label %lpad

_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i.i: ; preds = %if.then.i.i.i.i
  %.pre.i.i = load i32, ptr %m_size.i.i, align 4, !tbaa !132
  %cmp7.i.i.i.i = icmp sgt i32 %.pre.i.i, 0
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !131
  br i1 %cmp7.i.i.i.i, label %for.body.lr.ph.i.i.i.i, label %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i

for.body.lr.ph.i.i.i.i:                           ; preds = %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i.i
  %1 = ptrtoint ptr %0 to i64
  %call.i.i.i.i.i410 = ptrtoint ptr %call.i.i.i.i.i4 to i64
  %wide.trip.count.i.i.i.i = zext i32 %.pre.i.i to i64
  %min.iters.check = icmp ult i32 %.pre.i.i, 8
  %2 = sub i64 %call.i.i.i.i.i410, %1
  %diff.check = icmp ult i64 %2, 32
  %or.cond28 = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond28, label %for.body.i.i.i.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i.i.i
  %n.vec = and i64 %wide.trip.count.i.i.i.i, 4294967288
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %3 = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %index
  %4 = getelementptr inbounds i32, ptr %0, i64 %index
  %wide.load = load <4 x i32>, ptr %4, align 4, !tbaa !140
  %5 = getelementptr inbounds i32, ptr %4, i64 4
  %wide.load11 = load <4 x i32>, ptr %5, align 4, !tbaa !140
  store <4 x i32> %wide.load, ptr %3, align 4, !tbaa !140
  %6 = getelementptr inbounds i32, ptr %3, i64 4
  store <4 x i32> %wide.load11, ptr %6, align 4, !tbaa !140
  %index.next = add nuw i64 %index, 8
  %7 = icmp eq i64 %index.next, %n.vec
  br i1 %7, label %middle.block, label %vector.body, !llvm.loop !389

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i.i.i
  br i1 %cmp.n, label %if.then.i11.i.i.i, label %for.body.i.i.i.i.preheader

for.body.i.i.i.i.preheader:                       ; preds = %for.body.lr.ph.i.i.i.i, %middle.block
  %indvars.iv.i.i.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i.i ], [ %n.vec, %middle.block ]
  %8 = xor i64 %indvars.iv.i.i.i.i.ph, -1
  %9 = add nsw i64 %8, %wide.trip.count.i.i.i.i
  %xtraiter = and i64 %wide.trip.count.i.i.i.i, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.prol

for.body.i.i.i.i.prol:                            ; preds = %for.body.i.i.i.i.preheader, %for.body.i.i.i.i.prol
  %indvars.iv.i.i.i.i.prol = phi i64 [ %indvars.iv.next.i.i.i.i.prol, %for.body.i.i.i.i.prol ], [ %indvars.iv.i.i.i.i.ph, %for.body.i.i.i.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.i.i.i.prol ], [ 0, %for.body.i.i.i.i.preheader ]
  %arrayidx.i.i.i.i.prol = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.i.i.i.i.prol
  %arrayidx3.i.i.i.i.prol = getelementptr inbounds i32, ptr %0, i64 %indvars.iv.i.i.i.i.prol
  %10 = load i32, ptr %arrayidx3.i.i.i.i.prol, align 4, !tbaa !140
  store i32 %10, ptr %arrayidx.i.i.i.i.prol, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.prol = add nuw nsw i64 %indvars.iv.i.i.i.i.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.prol, !llvm.loop !390

for.body.i.i.i.i.prol.loopexit:                   ; preds = %for.body.i.i.i.i.prol, %for.body.i.i.i.i.preheader
  %indvars.iv.i.i.i.i.unr = phi i64 [ %indvars.iv.i.i.i.i.ph, %for.body.i.i.i.i.preheader ], [ %indvars.iv.next.i.i.i.i.prol, %for.body.i.i.i.i.prol ]
  %11 = icmp ult i64 %9, 3
  br i1 %11, label %if.then.i11.i.i.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i.prol.loopexit, %for.body.i.i.i.i
  %indvars.iv.i.i.i.i = phi i64 [ %indvars.iv.next.i.i.i.i.3, %for.body.i.i.i.i ], [ %indvars.iv.i.i.i.i.unr, %for.body.i.i.i.i.prol.loopexit ]
  %arrayidx.i.i.i.i = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.i.i.i.i
  %arrayidx3.i.i.i.i = getelementptr inbounds i32, ptr %0, i64 %indvars.iv.i.i.i.i
  %12 = load i32, ptr %arrayidx3.i.i.i.i, align 4, !tbaa !140
  store i32 %12, ptr %arrayidx.i.i.i.i, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i.i, 1
  %arrayidx.i.i.i.i.1 = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.next.i.i.i.i
  %arrayidx3.i.i.i.i.1 = getelementptr inbounds i32, ptr %0, i64 %indvars.iv.next.i.i.i.i
  %13 = load i32, ptr %arrayidx3.i.i.i.i.1, align 4, !tbaa !140
  store i32 %13, ptr %arrayidx.i.i.i.i.1, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i.i, 2
  %arrayidx.i.i.i.i.2 = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.next.i.i.i.i.1
  %arrayidx3.i.i.i.i.2 = getelementptr inbounds i32, ptr %0, i64 %indvars.iv.next.i.i.i.i.1
  %14 = load i32, ptr %arrayidx3.i.i.i.i.2, align 4, !tbaa !140
  store i32 %14, ptr %arrayidx.i.i.i.i.2, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.2 = add nuw nsw i64 %indvars.iv.i.i.i.i, 3
  %arrayidx.i.i.i.i.3 = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.next.i.i.i.i.2
  %arrayidx3.i.i.i.i.3 = getelementptr inbounds i32, ptr %0, i64 %indvars.iv.next.i.i.i.i.2
  %15 = load i32, ptr %arrayidx3.i.i.i.i.3, align 4, !tbaa !140
  store i32 %15, ptr %arrayidx.i.i.i.i.3, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i.i, 4
  %exitcond.not.i.i.i.i.3 = icmp eq i64 %indvars.iv.next.i.i.i.i.3, %wide.trip.count.i.i.i.i
  br i1 %exitcond.not.i.i.i.i.3, label %if.then.i11.i.i.i, label %for.body.i.i.i.i, !llvm.loop !391

_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i: ; preds = %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i.i
  %tobool.not.i10.i.i.i = icmp eq ptr %0, null
  %16 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i = icmp eq i8 %16, 0
  %or.cond = select i1 %tobool.not.i10.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i
  br i1 %or.cond, label %for.body10.lr.ph.i.i, label %if.then3.i.i.i.i

if.then.i11.i.i.i:                                ; preds = %for.body.i.i.i.i.prol.loopexit, %for.body.i.i.i.i, %middle.block
  %.old = load i8, ptr %m_ownsMemory.i.i, align 8, !tbaa !130, !range !159, !noundef !192
  %tobool2.not.i.i.i.i.old = icmp eq i8 %.old, 0
  br i1 %tobool2.not.i.i.i.i.old, label %for.body10.lr.ph.i.i, label %if.then3.i.i.i.i

if.then3.i.i.i.i:                                 ; preds = %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i, %if.then.i11.i.i.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
          to label %for.body10.lr.ph.i.i unwind label %lpad

for.body10.lr.ph.i.i:                             ; preds = %if.then.i11.i.i.i, %if.then3.i.i.i.i, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !130
  store ptr %call.i.i.i.i.i4, ptr %m_data.i.i, align 8, !tbaa !131
  store i32 %div.i, ptr %m_capacity.i.i, align 8, !tbaa !133
  %wide.trip.count.i.i = sext i32 %div.i to i64
  %min.iters.check16 = icmp ult i32 %div.i, 12
  br i1 %min.iters.check16, label %for.body10.i.i.preheader, label %vector.memcheck12

vector.memcheck12:                                ; preds = %for.body10.lr.ph.i.i
  %17 = shl nsw i64 %wide.trip.count.i.i, 2
  %scevgep = getelementptr i8, ptr %call.i.i.i.i.i4, i64 %17
  %scevgep13 = getelementptr i8, ptr %init, i64 4
  %bound0 = icmp ult ptr %call.i.i.i.i.i4, %scevgep13
  %bound1 = icmp ugt ptr %scevgep, %init
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body10.i.i.preheader, label %vector.ph17

vector.ph17:                                      ; preds = %vector.memcheck12
  %n.vec19 = and i64 %wide.trip.count.i.i, -8
  %18 = load i32, ptr %init, align 4, !tbaa !140, !alias.scope !392
  %broadcast.splatinsert24 = insertelement <4 x i32> poison, i32 %18, i64 0
  %broadcast.splat25 = shufflevector <4 x i32> %broadcast.splatinsert24, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %vector.body22

vector.body22:                                    ; preds = %vector.body22, %vector.ph17
  %index23 = phi i64 [ 0, %vector.ph17 ], [ %index.next26, %vector.body22 ]
  %19 = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %index23
  store <4 x i32> %broadcast.splat25, ptr %19, align 4, !tbaa !140, !alias.scope !395, !noalias !392
  %20 = getelementptr inbounds i32, ptr %19, i64 4
  store <4 x i32> %broadcast.splat25, ptr %20, align 4, !tbaa !140, !alias.scope !395, !noalias !392
  %index.next26 = add nuw i64 %index23, 8
  %21 = icmp eq i64 %index.next26, %n.vec19
  br i1 %21, label %middle.block14, label %vector.body22, !llvm.loop !397

middle.block14:                                   ; preds = %vector.body22
  %cmp.n21 = icmp eq i64 %n.vec19, %wide.trip.count.i.i
  br i1 %cmp.n21, label %invoke.cont, label %for.body10.i.i.preheader

for.body10.i.i.preheader:                         ; preds = %vector.memcheck12, %for.body10.lr.ph.i.i, %middle.block14
  %indvars.iv.i.i.ph = phi i64 [ 0, %vector.memcheck12 ], [ 0, %for.body10.lr.ph.i.i ], [ %n.vec19, %middle.block14 ]
  %22 = xor i64 %indvars.iv.i.i.ph, -1
  %23 = add nsw i64 %22, %wide.trip.count.i.i
  %xtraiter29 = and i64 %wide.trip.count.i.i, 3
  %lcmp.mod30.not = icmp eq i64 %xtraiter29, 0
  br i1 %lcmp.mod30.not, label %for.body10.i.i.prol.loopexit, label %for.body10.i.i.prol

for.body10.i.i.prol:                              ; preds = %for.body10.i.i.preheader, %for.body10.i.i.prol
  %indvars.iv.i.i.prol = phi i64 [ %indvars.iv.next.i.i.prol, %for.body10.i.i.prol ], [ %indvars.iv.i.i.ph, %for.body10.i.i.preheader ]
  %prol.iter31 = phi i64 [ %prol.iter31.next, %for.body10.i.i.prol ], [ 0, %for.body10.i.i.preheader ]
  %arrayidx13.i.i.prol = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.i.i.prol
  %24 = load i32, ptr %init, align 4, !tbaa !140
  store i32 %24, ptr %arrayidx13.i.i.prol, align 4, !tbaa !140
  %indvars.iv.next.i.i.prol = add nuw nsw i64 %indvars.iv.i.i.prol, 1
  %prol.iter31.next = add i64 %prol.iter31, 1
  %prol.iter31.cmp.not = icmp eq i64 %prol.iter31.next, %xtraiter29
  br i1 %prol.iter31.cmp.not, label %for.body10.i.i.prol.loopexit, label %for.body10.i.i.prol, !llvm.loop !398

for.body10.i.i.prol.loopexit:                     ; preds = %for.body10.i.i.prol, %for.body10.i.i.preheader
  %indvars.iv.i.i.unr = phi i64 [ %indvars.iv.i.i.ph, %for.body10.i.i.preheader ], [ %indvars.iv.next.i.i.prol, %for.body10.i.i.prol ]
  %25 = icmp ult i64 %23, 3
  br i1 %25, label %invoke.cont, label %for.body10.i.i

for.body10.i.i:                                   ; preds = %for.body10.i.i.prol.loopexit, %for.body10.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i.3, %for.body10.i.i ], [ %indvars.iv.i.i.unr, %for.body10.i.i.prol.loopexit ]
  %arrayidx13.i.i = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.i.i
  %26 = load i32, ptr %init, align 4, !tbaa !140
  store i32 %26, ptr %arrayidx13.i.i, align 4, !tbaa !140
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %arrayidx13.i.i.1 = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.next.i.i
  %27 = load i32, ptr %init, align 4, !tbaa !140
  store i32 %27, ptr %arrayidx13.i.i.1, align 4, !tbaa !140
  %indvars.iv.next.i.i.1 = add nuw nsw i64 %indvars.iv.i.i, 2
  %arrayidx13.i.i.2 = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.next.i.i.1
  %28 = load i32, ptr %init, align 4, !tbaa !140
  store i32 %28, ptr %arrayidx13.i.i.2, align 4, !tbaa !140
  %indvars.iv.next.i.i.2 = add nuw nsw i64 %indvars.iv.i.i, 3
  %arrayidx13.i.i.3 = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.next.i.i.2
  %29 = load i32, ptr %init, align 4, !tbaa !140
  store i32 %29, ptr %arrayidx13.i.i.3, align 4, !tbaa !140
  %indvars.iv.next.i.i.3 = add nuw nsw i64 %indvars.iv.i.i, 4
  %exitcond.not.i.i.3 = icmp eq i64 %indvars.iv.next.i.i.3, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i.3, label %invoke.cont, label %for.body10.i.i, !llvm.loop !399

invoke.cont:                                      ; preds = %for.body10.i.i.prol.loopexit, %for.body10.i.i, %middle.block14, %entry
  store i32 %div.i, ptr %m_size.i.i, align 4, !tbaa !132
  ret void

lpad:                                             ; preds = %if.then3.i.i.i.i, %if.then.i.i.i.i
  %30 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN20btAlignedObjectArrayIiED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this)
          to label %eh.resume unwind label %terminate.lpad

eh.resume:                                        ; preds = %lpad
  resume { ptr, i32 } %30

terminate.lpad:                                   ; preds = %lpad
  %31 = landingpad { ptr, i32 }
          catch ptr null
  %32 = extractvalue { ptr, i32 } %31, 0
  tail call void @__clang_call_terminate(ptr %32) #39
  unreachable
}

; Function Attrs: uwtable
define dso_local noundef zeroext i1 @_ZN10btSoftBody7cutLinkEPKNS_4NodeES2_f(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %node0, ptr noundef %node1, float noundef %position) local_unnamed_addr #4 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %sub.ptr.lhs.cast = ptrtoint ptr %node0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 120
  %conv = trunc i64 %sub.ptr.div to i32
  %sub.ptr.lhs.cast4 = ptrtoint ptr %node1 to i64
  %sub.ptr.sub6 = sub i64 %sub.ptr.lhs.cast4, %sub.ptr.rhs.cast
  %sub.ptr.div7 = sdiv exact i64 %sub.ptr.sub6, 120
  %conv8 = trunc i64 %sub.ptr.div7 to i32
  %call9 = tail call noundef zeroext i1 @_ZN10btSoftBody7cutLinkEiif(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %conv, i32 noundef %conv8, float noundef %position)
  ret i1 %call9
}

; Function Attrs: uwtable
define dso_local noundef zeroext i1 @_ZN10btSoftBody7cutLinkEiif(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %node0, i32 noundef %node1, float noundef %position) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %l.sroa.7.i371 = alloca <{ [2 x ptr], float, i8, [3 x i8], float, float, float, %class.btVector3, [4 x i8] }>, align 8
  %l.sroa.7.i = alloca <{ [2 x ptr], float, i8, [3 x i8], float, float, float, %class.btVector3, [4 x i8] }>, align 8
  %f.sroa.7.i = alloca { [3 x ptr], %class.btVector3, float, ptr }, align 8
  %x = alloca %class.btVector3, align 8
  %pn = alloca [2 x ptr], align 16
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i = sext i32 %node0 to i64
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i, i32 1
  %idxprom.i180 = sext i32 %node1 to i64
  %m_x4 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i180, i32 1
  %arrayidx11.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %1 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds [4 x float], ptr %m_x4, i64 0, i64 2
  %2 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %x) #38
  %sub14.i.i = fsub float %2, %1
  %mul8.i.i = fmul float %sub14.i.i, %position
  %3 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %4 = load <2 x float>, ptr %m_x4, align 4, !tbaa !137
  %5 = fsub <2 x float> %4, %3
  %6 = insertelement <2 x float> poison, float %position, i64 0
  %7 = shufflevector <2 x float> %6, <2 x float> poison, <2 x i32> zeroinitializer
  %8 = fmul <2 x float> %5, %7
  %9 = fadd <2 x float> %3, %8
  %add14.i.i = fadd float %1, %mul8.i.i
  %retval.sroa.3.12.vec.insert.i20.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i, i64 0
  store <2 x float> %9, ptr %x, align 8
  %10 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %x, i64 0, i32 1
  store <2 x float> %retval.sroa.3.12.vec.insert.i20.i, ptr %10, align 8
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i, i32 3
  %m_v18 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i180, i32 3
  %arrayidx11.i.i198 = getelementptr inbounds [4 x float], ptr %m_v18, i64 0, i64 2
  %11 = load float, ptr %arrayidx11.i.i198, align 4, !tbaa !137
  %arrayidx13.i.i199 = getelementptr inbounds [4 x float], ptr %m_v, i64 0, i64 2
  %12 = load float, ptr %arrayidx13.i.i199, align 4, !tbaa !137
  %sub14.i.i200 = fsub float %11, %12
  %mul8.i.i203 = fmul float %sub14.i.i200, %position
  %13 = load <2 x float>, ptr %m_v18, align 4, !tbaa !137
  %14 = load <2 x float>, ptr %m_v, align 4, !tbaa !137
  %15 = fsub <2 x float> %13, %14
  %16 = fmul <2 x float> %15, %7
  %17 = fadd <2 x float> %14, %16
  %add14.i.i206 = fadd float %12, %mul8.i.i203
  %retval.sroa.3.12.vec.insert.i20.i209 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i206, i64 0
  call void @_ZN10btSoftBody10appendNodeERK9btVector3f(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(16) %x, float noundef 1.000000e+00)
  call void @_ZN10btSoftBody10appendNodeERK9btVector3f(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(16) %x, float noundef 1.000000e+00)
  %18 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %arrayidx.i214 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %idxprom.i
  %arrayidx.i217 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %idxprom.i180
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %pn) #38
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %19 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %sub = add nsw i32 %19, -2
  %idxprom.i219 = sext i32 %sub to i64
  %arrayidx.i220 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %idxprom.i219
  store ptr %arrayidx.i220, ptr %pn, align 16, !tbaa !219
  %arrayinit.element = getelementptr inbounds ptr, ptr %pn, i64 1
  %sub32 = add nsw i32 %19, -1
  %idxprom.i223 = sext i32 %sub32 to i64
  %arrayidx.i224 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %idxprom.i223
  store ptr %arrayidx.i224, ptr %arrayinit.element, align 8, !tbaa !219
  %m_v34 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %idxprom.i219, i32 3
  store <2 x float> %17, ptr %m_v34, align 8, !tbaa.struct !163
  %v.sroa.5.0.m_v34.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %idxprom.i219, i32 3, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i20.i209, ptr %v.sroa.5.0.m_v34.sroa_idx, align 8, !tbaa.struct !165
  %m_v36 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %idxprom.i223, i32 3
  store <2 x float> %17, ptr %m_v36, align 8, !tbaa.struct !163
  %v.sroa.5.0.m_v36.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %idxprom.i223, i32 3, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i20.i209, ptr %v.sroa.5.0.m_v36.sroa_idx, align 8, !tbaa.struct !165
  %m_size.i225 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %20 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  %cmp427 = icmp sgt i32 %20, 0
  br i1 %cmp427, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i226 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %wide.trip.count = zext i32 %20 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end ]
  %done.0429 = phi i8 [ 0, %for.body.lr.ph ], [ %done.1, %if.end ]
  %21 = load ptr, ptr %m_data.i226, align 8, !tbaa !91
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %21, i64 %indvars.iv, i32 1
  %22 = load ptr, ptr %m_n, align 8, !tbaa !219
  %arrayidx44 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %21, i64 %indvars.iv, i32 1, i64 1
  %23 = load ptr, ptr %arrayidx44, align 8, !tbaa !219
  %cmp.i = icmp eq ptr %22, %arrayidx.i214
  %cmp1.i = icmp eq ptr %23, %arrayidx.i217
  %or.cond.i = and i1 %cmp.i, %cmp1.i
  %cmp2.i = icmp eq ptr %22, %arrayidx.i217
  %cmp4.i = icmp eq ptr %23, %arrayidx.i214
  %or.cond11.i = and i1 %cmp2.i, %cmp4.i
  %spec.select.i = select i1 %or.cond11.i, i32 1, i32 -1
  %retval.0.i = select i1 %or.cond.i, i32 0, i32 %spec.select.i
  %cmp46.not = icmp eq i32 %retval.0.i, -1
  br i1 %cmp46.not, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %24 = trunc i64 %indvars.iv to i32
  tail call void @_ZN10btSoftBody10appendLinkEiPNS_8MaterialE(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %24, ptr noundef null)
  %25 = load ptr, ptr %m_data.i226, align 8, !tbaa !91
  %26 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  %sub54 = add nsw i32 %26, -1
  %idxprom.i237 = sext i32 %sub54 to i64
  %idxprom = zext i32 %retval.0.i to i64
  %arrayidx56 = getelementptr inbounds [2 x ptr], ptr %pn, i64 0, i64 %idxprom
  %27 = load ptr, ptr %arrayidx56, align 8, !tbaa !219
  %arrayidx59 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %25, i64 %indvars.iv, i32 1, i64 1
  store ptr %27, ptr %arrayidx59, align 8, !tbaa !219
  %sub60 = sub nuw nsw i32 1, %retval.0.i
  %idxprom61 = zext i32 %sub60 to i64
  %arrayidx62 = getelementptr inbounds [2 x ptr], ptr %pn, i64 0, i64 %idxprom61
  %28 = load ptr, ptr %arrayidx62, align 8, !tbaa !219
  %m_n64 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %25, i64 %idxprom.i237, i32 1
  store ptr %28, ptr %m_n64, align 8, !tbaa !219
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %done.1 = phi i8 [ 1, %if.then ], [ %done.0429, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %if.end, %entry
  %done.0.lcssa = phi i8 [ 0, %entry ], [ %done.1, %if.end ]
  %m_size.i239 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %29 = load i32, ptr %m_size.i239, align 4, !tbaa !96
  %cmp68446 = icmp sgt i32 %29, 0
  br i1 %cmp68446, label %for.cond70.preheader.lr.ph, label %for.end131

for.cond70.preheader.lr.ph:                       ; preds = %for.end
  %m_data.i240 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %m_capacity.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 3
  %m_ownsMemory.i.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 6
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %m_data.i6.i332 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %m_capacity.i.i.i334 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 3
  %m_ownsMemory.i.i.i.i362 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 6
  %m_bUpdateRtCst.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  %wide.trip.count456 = zext i32 %29 to i64
  br label %for.cond70.preheader

for.cond70.preheader:                             ; preds = %for.cond70.preheader.lr.ph, %for.cond.cleanup
  %indvars.iv453 = phi i64 [ 0, %for.cond70.preheader.lr.ph ], [ %indvars.iv.next454, %for.cond.cleanup ]
  br label %for.body72

for.cond.cleanup:                                 ; preds = %if.end125
  %indvars.iv.next454 = add nuw nsw i64 %indvars.iv453, 1
  %exitcond457.not = icmp eq i64 %indvars.iv.next454, %wide.trip.count456
  br i1 %exitcond457.not, label %for.end131, label %for.cond70.preheader

for.body72:                                       ; preds = %for.cond70.preheader, %if.end125
  %indvars.iv448 = phi i64 [ 0, %for.cond70.preheader ], [ %indvars.iv.next449.pre-phi, %if.end125 ]
  %k.0444 = phi i64 [ 2, %for.cond70.preheader ], [ %indvars.iv448, %if.end125 ]
  %30 = load ptr, ptr %m_data.i240, align 8, !tbaa !95
  %idxprom77 = and i64 %k.0444, 4294967295
  %arrayidx78 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %30, i64 %indvars.iv453, i32 1, i64 %idxprom77
  %31 = load ptr, ptr %arrayidx78, align 8, !tbaa !219
  %arrayidx83 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %30, i64 %indvars.iv453, i32 1, i64 %indvars.iv448
  %32 = load ptr, ptr %arrayidx83, align 8, !tbaa !219
  %cmp.i246 = icmp eq ptr %31, %arrayidx.i214
  %cmp1.i247 = icmp eq ptr %32, %arrayidx.i217
  %or.cond.i248 = and i1 %cmp.i246, %cmp1.i247
  %cmp2.i249 = icmp eq ptr %31, %arrayidx.i217
  %cmp4.i250 = icmp eq ptr %32, %arrayidx.i214
  %or.cond11.i251 = and i1 %cmp2.i249, %cmp4.i250
  %spec.select.i252 = select i1 %or.cond11.i251, i32 1, i32 -1
  %retval.0.i253 = select i1 %or.cond.i248, i32 0, i32 %spec.select.i252
  %cmp85.not = icmp eq i32 %retval.0.i253, -1
  br i1 %cmp85.not, label %for.body72.if.end125_crit_edge, label %if.then86

for.body72.if.end125_crit_edge:                   ; preds = %for.body72
  %.pre459 = add nuw nsw i64 %indvars.iv448, 1
  br label %if.end125

if.then86:                                        ; preds = %for.body72
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %f.sroa.7.i)
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %30, i64 %indvars.iv453
  %33 = load <2 x ptr>, ptr %arrayidx.i.i, align 8
  %f.sroa.7.0.arrayidx.i.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i.i, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.i, ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.0.arrayidx.i.sroa_idx.i, i64 56, i1 false)
  %34 = load i32, ptr %m_size.i239, align 4, !tbaa !96
  %35 = load i32, ptr %m_capacity.i.i.i, align 8, !tbaa !97
  %cmp.i.i = icmp eq i32 %34, %35
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN10btSoftBody10appendFaceEiPNS_8MaterialE.exit

if.then.i.i:                                      ; preds = %if.then86
  %tobool.not.i.i.i = icmp eq i32 %34, 0
  %mul.i.i.i = shl nsw i32 %34, 1
  %cond.i.i.i = select i1 %tobool.not.i.i.i, i32 1, i32 %mul.i.i.i
  %cmp.i.i.i = icmp slt i32 %34, %cond.i.i.i
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN10btSoftBody10appendFaceEiPNS_8MaterialE.exit

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %tobool.not.i.i.i.i = icmp eq i32 %cond.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.then.i.i.i
  %conv.i.i.i.i.i = sext i32 %cond.i.i.i to i64
  %mul.i.i.i.i.i = mul nsw i64 %conv.i.i.i.i.i, 72
  %call.i.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i.i, i32 noundef 16)
  %.pre.i.i = load i32, ptr %m_size.i239, align 4, !tbaa !96
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i: ; preds = %if.then.i.i.i.i, %if.then.i.i.i
  %36 = phi i32 [ %.pre.i.i, %if.then.i.i.i.i ], [ %34, %if.then.i.i.i ]
  %retval.0.i.i.i.i = phi ptr [ %call.i.i.i.i.i, %if.then.i.i.i.i ], [ null, %if.then.i.i.i ]
  %cmp7.i.i.i.i = icmp sgt i32 %36, 0
  br i1 %cmp7.i.i.i.i, label %for.body.lr.ph.i.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i

for.body.lr.ph.i.i.i.i:                           ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i
  %wide.trip.count.i.i.i.i = zext i32 %36 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i.i, 1
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.i.new

for.body.lr.ph.i.i.i.i.new:                       ; preds = %for.body.lr.ph.i.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i.i, 4294967294
  br label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i, %for.body.lr.ph.i.i.i.i.new
  %indvars.iv.i.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.i.new ], [ %indvars.iv.next.i.i.i.i.1, %for.body.i.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.i.new ], [ %niter.next.1, %for.body.i.i.i.i ]
  %arrayidx.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %retval.0.i.i.i.i, i64 %indvars.iv.i.i.i.i
  %38 = load ptr, ptr %m_data.i240, align 8, !tbaa !95
  %arrayidx3.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %38, i64 %indvars.iv.i.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i = or i64 %indvars.iv.i.i.i.i, 1
  %arrayidx.i.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %retval.0.i.i.i.i, i64 %indvars.iv.next.i.i.i.i
  %39 = load ptr, ptr %m_data.i240, align 8, !tbaa !95
  %arrayidx3.i.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %39, i64 %indvars.iv.next.i.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i.1, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.i.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i.i, %for.body.lr.ph.i.i.i.i
  %indvars.iv.i.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i.i ], [ %indvars.iv.next.i.i.i.i.1, %for.body.i.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i, label %for.body.i.i.i.i.epil

for.body.i.i.i.i.epil:                            ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Face", ptr %retval.0.i.i.i.i, i64 %indvars.iv.i.i.i.i.unr
  %40 = load ptr, ptr %m_data.i240, align 8, !tbaa !95
  %arrayidx3.i.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Face", ptr %40, i64 %indvars.iv.i.i.i.i.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i.epil, i64 72, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i: ; preds = %for.body.i.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i
  %41 = load ptr, ptr %m_data.i240, align 8, !tbaa !95
  %tobool.not.i10.i.i.i = icmp eq ptr %41, null
  %42 = load i8, ptr %m_ownsMemory.i.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i = icmp eq i8 %42, 0
  %or.cond.i.i.i = select i1 %tobool.not.i10.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i
  br i1 %or.cond.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i, label %if.then3.i.i.i.i

if.then3.i.i.i.i:                                 ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %41)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i: ; preds = %if.then3.i.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i.i, align 8, !tbaa !94
  store ptr %retval.0.i.i.i.i, ptr %m_data.i240, align 8, !tbaa !95
  store i32 %cond.i.i.i, ptr %m_capacity.i.i.i, align 8, !tbaa !97
  %.pre7.i.i = load i32, ptr %m_size.i239, align 4, !tbaa !96
  br label %_ZN10btSoftBody10appendFaceEiPNS_8MaterialE.exit

_ZN10btSoftBody10appendFaceEiPNS_8MaterialE.exit: ; preds = %if.then86, %if.then.i.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i
  %43 = phi ptr [ %retval.0.i.i.i.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i ], [ %30, %if.then.i.i ], [ %30, %if.then86 ]
  %44 = phi i32 [ %.pre7.i.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i ], [ %34, %if.then.i.i ], [ %34, %if.then86 ]
  %idxprom.i8.i = sext i32 %44 to i64
  %arrayidx.i9.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %43, i64 %idxprom.i8.i
  store <2 x ptr> %33, ptr %arrayidx.i9.i, align 8
  %f.sroa.7.0.arrayidx.i9.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i9.i, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.0.arrayidx.i9.sroa_idx.i, ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.i, i64 56, i1 false)
  %45 = load i32, ptr %m_size.i239, align 4, !tbaa !96
  %inc.i.i = add nsw i32 %45, 1
  store i32 %inc.i.i, ptr %m_size.i239, align 4, !tbaa !96
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %f.sroa.7.i)
  %46 = load ptr, ptr %m_data.i240, align 8, !tbaa !95
  %idxprom.i260 = sext i32 %45 to i64
  %idxprom97 = sext i32 %retval.0.i253 to i64
  %arrayidx98 = getelementptr inbounds [2 x ptr], ptr %pn, i64 0, i64 %idxprom97
  %47 = load ptr, ptr %arrayidx98, align 8, !tbaa !219
  %arrayidx102 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %46, i64 %indvars.iv453, i32 1, i64 %indvars.iv448
  store ptr %47, ptr %arrayidx102, align 8, !tbaa !219
  %sub103 = sub nsw i32 1, %retval.0.i253
  %idxprom104 = zext i32 %sub103 to i64
  %arrayidx105 = getelementptr inbounds [2 x ptr], ptr %pn, i64 0, i64 %idxprom104
  %48 = load ptr, ptr %arrayidx105, align 8, !tbaa !219
  %arrayidx109 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %46, i64 %idxprom.i260, i32 1, i64 %idxprom77
  store ptr %48, ptr %arrayidx109, align 8, !tbaa !219
  %49 = load ptr, ptr %pn, align 16, !tbaa !219
  %50 = add nuw nsw i64 %indvars.iv448, 1
  %51 = icmp eq i64 %50, 3
  %52 = and i64 %50, 4294967295
  %idxprom113 = select i1 %51, i64 0, i64 %52
  %arrayidx114 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %46, i64 %indvars.iv453, i32 1, i64 %idxprom113
  %53 = load ptr, ptr %arrayidx114, align 8, !tbaa !219
  %m_material = getelementptr inbounds %"struct.btSoftBody::Face", ptr %46, i64 %indvars.iv453, i32 0, i32 1
  %54 = load ptr, ptr %m_material, align 8, !tbaa !184
  %55 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  %cmp.not33.i.i = icmp sgt i32 %55, 0
  br i1 %cmp.not33.i.i, label %for.body.lr.ph.i.i, label %if.then.i273

for.body.lr.ph.i.i:                               ; preds = %_ZN10btSoftBody10appendFaceEiPNS_8MaterialE.exit
  %56 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %57 = zext i32 %55 to i64
  %m_n.i22.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %56, i64 0, i32 1
  %58 = load ptr, ptr %m_n.i22.i, align 8, !tbaa !219
  %cmp5.i23.i = icmp eq ptr %58, %49
  %arrayidx7.i24.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %56, i64 0, i32 1, i64 1
  %59 = load ptr, ptr %arrayidx7.i24.i, align 8
  %cmp9.i25.i = icmp eq ptr %59, %53
  %or.cond.i26.i = select i1 %cmp5.i23.i, i1 %cmp9.i25.i, i1 false
  br i1 %or.cond.i26.i, label %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit.thread, label %lor.lhs.false.i.i.preheader

lor.lhs.false.i.i.preheader:                      ; preds = %for.body.lr.ph.i.i
  %cmp13.i.i430 = icmp eq ptr %58, %53
  %cmp18.i.i431 = icmp eq ptr %59, %49
  %or.cond32.i.i432 = select i1 %cmp13.i.i430, i1 %cmp18.i.i431, i1 false
  br i1 %or.cond32.i.i432, label %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit.thread, label %for.cond.i.i

for.cond.i.i:                                     ; preds = %lor.lhs.false.i.i.preheader, %lor.lhs.false.i.i
  %indvars.iv.i27.i433 = phi i64 [ %indvars.iv.next.i.i, %lor.lhs.false.i.i ], [ 0, %lor.lhs.false.i.i.preheader ]
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i27.i433, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %57
  br i1 %exitcond.not.i.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i, label %for.body.i.i

for.body.i.i:                                     ; preds = %for.cond.i.i
  %m_n.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %56, i64 %indvars.iv.next.i.i, i32 1
  %60 = load ptr, ptr %m_n.i.i, align 8, !tbaa !219
  %cmp5.i.i = icmp eq ptr %60, %49
  %arrayidx7.i.i263 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %56, i64 %indvars.iv.next.i.i, i32 1, i64 1
  %61 = load ptr, ptr %arrayidx7.i.i263, align 8
  %cmp9.i.i = icmp eq ptr %61, %53
  %or.cond.i.i = select i1 %cmp5.i.i, i1 %cmp9.i.i, i1 false
  br i1 %or.cond.i.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %for.body.i.i
  %cmp13.i.i = icmp eq ptr %60, %53
  %cmp18.i.i = icmp eq ptr %61, %49
  %or.cond32.i.i = select i1 %cmp13.i.i, i1 %cmp18.i.i, i1 false
  br i1 %or.cond32.i.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i, label %for.cond.i.i

_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i: ; preds = %for.cond.i.i, %for.body.i.i, %lor.lhs.false.i.i
  %cmp.not.i.i.le = icmp ult i64 %indvars.iv.next.i.i, %57
  br i1 %cmp.not.i.i.le, label %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit, label %if.then.i273

if.then.i273:                                     ; preds = %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i, %_ZN10btSoftBody10appendFaceEiPNS_8MaterialE.exit
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %l.sroa.7.i)
  %62 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i.i327 = icmp eq i8 %62, 0
  br i1 %guard.uninitialized.i.i327, label %init.check.i.i330, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i, !prof !173

init.check.i.i330:                                ; preds = %if.then.i273
  %63 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  %tobool.not.i.i329 = icmp eq i32 %63, 0
  br i1 %tobool.not.i.i329, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i, label %invoke.cont.i.i331

invoke.cont.i.i331:                               ; preds = %init.check.i.i330
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8, !tbaa !174
  %64 = tail call ptr @llvm.invariant.start.p0(i64 72, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i

_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i: ; preds = %invoke.cont.i.i331, %init.check.i.i330, %if.then.i273
  %l.sroa.0.0.copyload11.i = load ptr, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(52) %l.sroa.7.i, ptr noundef nonnull align 8 dereferenceable(52) getelementptr inbounds (%"struct.btSoftBody::Link", ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, i64 0, i32 1, i64 0), i64 52, i1 false)
  %tobool.not.i = icmp eq ptr %54, null
  br i1 %tobool.not.i, label %cond.false.i, label %if.end.i336

cond.false.i:                                     ; preds = %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i
  %65 = load ptr, ptr %m_data.i6.i332, align 8, !tbaa !119
  %66 = load ptr, ptr %65, align 8, !tbaa !219
  br label %if.end.i336

if.end.i336:                                      ; preds = %cond.false.i, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i
  %l.sroa.6.0.i = phi ptr [ %66, %cond.false.i ], [ %54, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i ]
  %67 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  %68 = load i32, ptr %m_capacity.i.i.i334, align 8, !tbaa !93
  %cmp.i.i335 = icmp eq i32 %67, %68
  br i1 %cmp.i.i335, label %if.then.i.i341, label %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit

if.then.i.i341:                                   ; preds = %if.end.i336
  %tobool.not.i.i.i337 = icmp eq i32 %67, 0
  %mul.i.i.i338 = shl nsw i32 %67, 1
  %cond.i.i.i339 = select i1 %tobool.not.i.i.i337, i32 1, i32 %mul.i.i.i338
  %cmp.i.i.i340 = icmp slt i32 %67, %cond.i.i.i339
  br i1 %cmp.i.i.i340, label %if.then.i.i.i343, label %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit

if.then.i.i.i343:                                 ; preds = %if.then.i.i341
  %tobool.not.i.i.i.i342 = icmp eq i32 %cond.i.i.i339, 0
  br i1 %tobool.not.i.i.i.i342, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i, label %if.then.i.i.i.i348

if.then.i.i.i.i348:                               ; preds = %if.then.i.i.i343
  %conv.i.i.i.i.i344 = sext i32 %cond.i.i.i339 to i64
  %mul.i.i.i.i.i345 = mul nsw i64 %conv.i.i.i.i.i344, 72
  %call.i.i.i.i.i346 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i.i345, i32 noundef 16)
  %.pre.i.i347 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i: ; preds = %if.then.i.i.i.i348, %if.then.i.i.i343
  %69 = phi i32 [ %.pre.i.i347, %if.then.i.i.i.i348 ], [ %67, %if.then.i.i.i343 ]
  %retval.0.i.i.i.i349 = phi ptr [ %call.i.i.i.i.i346, %if.then.i.i.i.i348 ], [ null, %if.then.i.i.i343 ]
  %cmp7.i.i.i.i350 = icmp sgt i32 %69, 0
  br i1 %cmp7.i.i.i.i350, label %for.body.lr.ph.i.i.i.i353, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i

for.body.lr.ph.i.i.i.i353:                        ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i
  %wide.trip.count.i.i.i.i352 = zext i32 %69 to i64
  %xtraiter461 = and i64 %wide.trip.count.i.i.i.i352, 1
  %70 = icmp eq i32 %69, 1
  br i1 %70, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.i353.new

for.body.lr.ph.i.i.i.i353.new:                    ; preds = %for.body.lr.ph.i.i.i.i353
  %unroll_iter463 = and i64 %wide.trip.count.i.i.i.i352, 4294967294
  br label %for.body.i.i.i.i359

for.body.i.i.i.i359:                              ; preds = %for.body.i.i.i.i359, %for.body.lr.ph.i.i.i.i353.new
  %indvars.iv.i.i.i.i354 = phi i64 [ 0, %for.body.lr.ph.i.i.i.i353.new ], [ %indvars.iv.next.i.i.i.i357.1, %for.body.i.i.i.i359 ]
  %niter464 = phi i64 [ 0, %for.body.lr.ph.i.i.i.i353.new ], [ %niter464.next.1, %for.body.i.i.i.i359 ]
  %arrayidx.i.i.i.i355 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i349, i64 %indvars.iv.i.i.i.i354
  %71 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %arrayidx3.i.i.i.i356 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %71, i64 %indvars.iv.i.i.i.i354
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i355, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i356, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i357 = or i64 %indvars.iv.i.i.i.i354, 1
  %arrayidx.i.i.i.i355.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i349, i64 %indvars.iv.next.i.i.i.i357
  %72 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %arrayidx3.i.i.i.i356.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %72, i64 %indvars.iv.next.i.i.i.i357
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i355.1, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i356.1, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i357.1 = add nuw nsw i64 %indvars.iv.i.i.i.i354, 2
  %niter464.next.1 = add i64 %niter464, 2
  %niter464.ncmp.1 = icmp eq i64 %niter464.next.1, %unroll_iter463
  br i1 %niter464.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.i.i.i.i359

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i.i359, %for.body.lr.ph.i.i.i.i353
  %indvars.iv.i.i.i.i354.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i.i353 ], [ %indvars.iv.next.i.i.i.i357.1, %for.body.i.i.i.i359 ]
  %lcmp.mod462.not = icmp eq i64 %xtraiter461, 0
  br i1 %lcmp.mod462.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i, label %for.body.i.i.i.i359.epil

for.body.i.i.i.i359.epil:                         ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.i355.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i349, i64 %indvars.iv.i.i.i.i354.unr
  %73 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %arrayidx3.i.i.i.i356.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %73, i64 %indvars.iv.i.i.i.i354.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i355.epil, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i356.epil, i64 72, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i: ; preds = %for.body.i.i.i.i359.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i
  %74 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %tobool.not.i10.i.i.i361 = icmp eq ptr %74, null
  %75 = load i8, ptr %m_ownsMemory.i.i.i.i362, align 8, !range !159
  %tobool2.not.i.i.i.i363 = icmp eq i8 %75, 0
  %or.cond.i.i.i364 = select i1 %tobool.not.i10.i.i.i361, i1 true, i1 %tobool2.not.i.i.i.i363
  br i1 %or.cond.i.i.i364, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i, label %if.then3.i.i.i.i365

if.then3.i.i.i.i365:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %74)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i: ; preds = %if.then3.i.i.i.i365, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i.i362, align 8, !tbaa !90
  store ptr %retval.0.i.i.i.i349, ptr %m_data.i.i.i, align 8, !tbaa !91
  store i32 %cond.i.i.i339, ptr %m_capacity.i.i.i334, align 8, !tbaa !93
  %.pre7.i.i366 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  br label %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit

_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit: ; preds = %if.end.i336, %if.then.i.i341, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i
  %76 = phi i32 [ %.pre7.i.i366, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i ], [ %67, %if.then.i.i341 ], [ %67, %if.end.i336 ]
  %77 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %idxprom.i8.i368 = sext i32 %76 to i64
  %arrayidx.i9.i369 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %77, i64 %idxprom.i8.i368
  store ptr %l.sroa.0.0.copyload11.i, ptr %arrayidx.i9.i369, align 8
  %l.sroa.6.0.arrayidx.i9.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i9.i369, i64 8
  store ptr %l.sroa.6.0.i, ptr %l.sroa.6.0.arrayidx.i9.sroa_idx.i, align 8
  %l.sroa.7.0.arrayidx.i9.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i9.i369, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7.0.arrayidx.i9.sroa_idx.i, ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7.i, i64 56, i1 false)
  %78 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  %inc.i.i370 = add nsw i32 %78, 1
  store i32 %inc.i.i370, ptr %m_size.i225, align 4, !tbaa !92
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %l.sroa.7.i)
  %79 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %idxprom.i.i266 = sext i32 %78 to i64
  %m_n.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %79, i64 %idxprom.i.i266, i32 1
  store ptr %49, ptr %m_n.i, align 8, !tbaa !219
  %arrayidx6.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %79, i64 %idxprom.i.i266, i32 1, i64 1
  store ptr %53, ptr %arrayidx6.i, align 8, !tbaa !219
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %49, i64 0, i32 1
  %m_x11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %53, i64 0, i32 1
  %80 = load float, ptr %m_x.i, align 4, !tbaa !137
  %81 = load float, ptr %m_x11.i, align 4, !tbaa !137
  %sub.i.i267 = fsub float %80, %81
  %arrayidx5.i.i268 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %49, i64 0, i32 1, i32 0, i64 1
  %82 = load float, ptr %arrayidx5.i.i268, align 4, !tbaa !137
  %arrayidx7.i20.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %53, i64 0, i32 1, i32 0, i64 1
  %83 = load float, ptr %arrayidx7.i20.i, align 4, !tbaa !137
  %sub8.i.i269 = fsub float %82, %83
  %arrayidx11.i.i270 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %49, i64 0, i32 1, i32 0, i64 2
  %84 = load float, ptr %arrayidx11.i.i270, align 4, !tbaa !137
  %arrayidx13.i.i271 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %53, i64 0, i32 1, i32 0, i64 2
  %85 = load float, ptr %arrayidx13.i.i271, align 4, !tbaa !137
  %sub14.i.i272 = fsub float %84, %85
  %mul8.i.i.i.i = fmul float %sub8.i.i269, %sub8.i.i269
  %86 = tail call float @llvm.fmuladd.f32(float %sub.i.i267, float %sub.i.i267, float %mul8.i.i.i.i)
  %87 = tail call float @llvm.fmuladd.f32(float %sub14.i.i272, float %sub14.i.i272, float %86)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %87)
  %m_rl.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %79, i64 %idxprom.i.i266, i32 2
  store float %sqrt.i.i, ptr %m_rl.i, align 8, !tbaa !239
  store i8 1, ptr %m_bUpdateRtCst.i, align 4, !tbaa !147
  %.pre = load ptr, ptr %arrayidx114, align 8, !tbaa !219
  %.pre458 = load ptr, ptr %m_material, align 8, !tbaa !184
  br label %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit

_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit.thread: ; preds = %lor.lhs.false.i.i.preheader, %for.body.lr.ph.i.i
  %88 = load ptr, ptr %arrayinit.element, align 8, !tbaa !219
  br label %for.body.lr.ph.i.i283

_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit: ; preds = %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i, %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit
  %89 = phi i32 [ %55, %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i ], [ %inc.i.i370, %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit ]
  %90 = phi ptr [ %54, %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i ], [ %.pre458, %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit ]
  %91 = phi ptr [ %53, %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i ], [ %.pre, %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit ]
  %92 = load ptr, ptr %arrayinit.element, align 8, !tbaa !219
  %cmp.not33.i.i276 = icmp sgt i32 %89, 0
  br i1 %cmp.not33.i.i276, label %for.body.lr.ph.i.i283, label %if.then.i321

for.body.lr.ph.i.i283:                            ; preds = %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit.thread, %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit
  %93 = phi ptr [ %88, %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit.thread ], [ %92, %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit ]
  %94 = phi ptr [ %53, %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit.thread ], [ %91, %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit ]
  %95 = phi ptr [ %54, %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit.thread ], [ %90, %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit ]
  %96 = phi i32 [ %55, %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit.thread ], [ %89, %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit ]
  %97 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %98 = zext i32 %96 to i64
  %m_n.i22.i278 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %97, i64 0, i32 1
  %99 = load ptr, ptr %m_n.i22.i278, align 8, !tbaa !219
  %cmp5.i23.i279 = icmp eq ptr %99, %93
  %arrayidx7.i24.i280 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %97, i64 0, i32 1, i64 1
  %100 = load ptr, ptr %arrayidx7.i24.i280, align 8
  %cmp9.i25.i281 = icmp eq ptr %100, %94
  %or.cond.i26.i282 = select i1 %cmp5.i23.i279, i1 %cmp9.i25.i281, i1 false
  br i1 %or.cond.i26.i282, label %if.end125, label %lor.lhs.false.i.i299.preheader

lor.lhs.false.i.i299.preheader:                   ; preds = %for.body.lr.ph.i.i283
  %cmp13.i.i296437 = icmp eq ptr %99, %94
  %cmp18.i.i297438 = icmp eq ptr %100, %93
  %or.cond32.i.i298439 = select i1 %cmp13.i.i296437, i1 %cmp18.i.i297438, i1 false
  br i1 %or.cond32.i.i298439, label %if.end125, label %for.cond.i.i287

for.cond.i.i287:                                  ; preds = %lor.lhs.false.i.i299.preheader, %lor.lhs.false.i.i299
  %indvars.iv.i27.i295440 = phi i64 [ %indvars.iv.next.i.i284, %lor.lhs.false.i.i299 ], [ 0, %lor.lhs.false.i.i299.preheader ]
  %indvars.iv.next.i.i284 = add nuw nsw i64 %indvars.iv.i27.i295440, 1
  %exitcond.not.i.i286 = icmp eq i64 %indvars.iv.next.i.i284, %98
  br i1 %exitcond.not.i.i286, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i301, label %for.body.i.i293

for.body.i.i293:                                  ; preds = %for.cond.i.i287
  %m_n.i.i288 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %97, i64 %indvars.iv.next.i.i284, i32 1
  %101 = load ptr, ptr %m_n.i.i288, align 8, !tbaa !219
  %cmp5.i.i289 = icmp eq ptr %101, %93
  %arrayidx7.i.i290 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %97, i64 %indvars.iv.next.i.i284, i32 1, i64 1
  %102 = load ptr, ptr %arrayidx7.i.i290, align 8
  %cmp9.i.i291 = icmp eq ptr %102, %94
  %or.cond.i.i292 = select i1 %cmp5.i.i289, i1 %cmp9.i.i291, i1 false
  br i1 %or.cond.i.i292, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i301, label %lor.lhs.false.i.i299

lor.lhs.false.i.i299:                             ; preds = %for.body.i.i293
  %cmp13.i.i296 = icmp eq ptr %101, %94
  %cmp18.i.i297 = icmp eq ptr %102, %93
  %or.cond32.i.i298 = select i1 %cmp13.i.i296, i1 %cmp18.i.i297, i1 false
  br i1 %or.cond32.i.i298, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i301, label %for.cond.i.i287

_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i301: ; preds = %for.cond.i.i287, %for.body.i.i293, %lor.lhs.false.i.i299
  %cmp.not.i.i285.le = icmp ult i64 %indvars.iv.next.i.i284, %98
  br i1 %cmp.not.i.i285.le, label %if.end125, label %if.then.i321

if.then.i321:                                     ; preds = %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i301, %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit
  %103 = phi ptr [ %93, %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i301 ], [ %92, %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit ]
  %104 = phi ptr [ %94, %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i301 ], [ %91, %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit ]
  %105 = phi ptr [ %95, %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i301 ], [ %90, %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit ]
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %l.sroa.7.i371)
  %106 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i.i372 = icmp eq i8 %106, 0
  br i1 %guard.uninitialized.i.i372, label %init.check.i.i375, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i379, !prof !173

init.check.i.i375:                                ; preds = %if.then.i321
  %107 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  %tobool.not.i.i374 = icmp eq i32 %107, 0
  br i1 %tobool.not.i.i374, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i379, label %invoke.cont.i.i376

invoke.cont.i.i376:                               ; preds = %init.check.i.i375
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8, !tbaa !174
  %108 = tail call ptr @llvm.invariant.start.p0(i64 72, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i379

_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i379: ; preds = %invoke.cont.i.i376, %init.check.i.i375, %if.then.i321
  %l.sroa.0.0.copyload11.i377 = load ptr, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(52) %l.sroa.7.i371, ptr noundef nonnull align 8 dereferenceable(52) getelementptr inbounds (%"struct.btSoftBody::Link", ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, i64 0, i32 1, i64 0), i64 52, i1 false)
  %tobool.not.i378 = icmp eq ptr %105, null
  br i1 %tobool.not.i378, label %cond.false.i381, label %if.end.i386

cond.false.i381:                                  ; preds = %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i379
  %109 = load ptr, ptr %m_data.i6.i332, align 8, !tbaa !119
  %110 = load ptr, ptr %109, align 8, !tbaa !219
  br label %if.end.i386

if.end.i386:                                      ; preds = %cond.false.i381, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i379
  %l.sroa.6.0.i382 = phi ptr [ %110, %cond.false.i381 ], [ %105, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i379 ]
  %111 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  %112 = load i32, ptr %m_capacity.i.i.i334, align 8, !tbaa !93
  %cmp.i.i385 = icmp eq i32 %111, %112
  br i1 %cmp.i.i385, label %if.then.i.i391, label %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit426

if.then.i.i391:                                   ; preds = %if.end.i386
  %tobool.not.i.i.i387 = icmp eq i32 %111, 0
  %mul.i.i.i388 = shl nsw i32 %111, 1
  %cond.i.i.i389 = select i1 %tobool.not.i.i.i387, i32 1, i32 %mul.i.i.i388
  %cmp.i.i.i390 = icmp slt i32 %111, %cond.i.i.i389
  br i1 %cmp.i.i.i390, label %if.then.i.i.i393, label %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit426

if.then.i.i.i393:                                 ; preds = %if.then.i.i391
  %tobool.not.i.i.i.i392 = icmp eq i32 %cond.i.i.i389, 0
  br i1 %tobool.not.i.i.i.i392, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i401, label %if.then.i.i.i.i398

if.then.i.i.i.i398:                               ; preds = %if.then.i.i.i393
  %conv.i.i.i.i.i394 = sext i32 %cond.i.i.i389 to i64
  %mul.i.i.i.i.i395 = mul nsw i64 %conv.i.i.i.i.i394, 72
  %call.i.i.i.i.i396 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i.i395, i32 noundef 16)
  %.pre.i.i397 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i401

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i401: ; preds = %if.then.i.i.i.i398, %if.then.i.i.i393
  %113 = phi i32 [ %.pre.i.i397, %if.then.i.i.i.i398 ], [ %111, %if.then.i.i.i393 ]
  %retval.0.i.i.i.i399 = phi ptr [ %call.i.i.i.i.i396, %if.then.i.i.i.i398 ], [ null, %if.then.i.i.i393 ]
  %cmp7.i.i.i.i400 = icmp sgt i32 %113, 0
  br i1 %cmp7.i.i.i.i400, label %for.body.lr.ph.i.i.i.i404, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i416

for.body.lr.ph.i.i.i.i404:                        ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i401
  %wide.trip.count.i.i.i.i403 = zext i32 %113 to i64
  %xtraiter465 = and i64 %wide.trip.count.i.i.i.i403, 1
  %114 = icmp eq i32 %113, 1
  br i1 %114, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i416.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.i404.new

for.body.lr.ph.i.i.i.i404.new:                    ; preds = %for.body.lr.ph.i.i.i.i404
  %unroll_iter467 = and i64 %wide.trip.count.i.i.i.i403, 4294967294
  br label %for.body.i.i.i.i410

for.body.i.i.i.i410:                              ; preds = %for.body.i.i.i.i410, %for.body.lr.ph.i.i.i.i404.new
  %indvars.iv.i.i.i.i405 = phi i64 [ 0, %for.body.lr.ph.i.i.i.i404.new ], [ %indvars.iv.next.i.i.i.i408.1, %for.body.i.i.i.i410 ]
  %niter468 = phi i64 [ 0, %for.body.lr.ph.i.i.i.i404.new ], [ %niter468.next.1, %for.body.i.i.i.i410 ]
  %arrayidx.i.i.i.i406 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i399, i64 %indvars.iv.i.i.i.i405
  %115 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %arrayidx3.i.i.i.i407 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %115, i64 %indvars.iv.i.i.i.i405
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i406, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i407, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i408 = or i64 %indvars.iv.i.i.i.i405, 1
  %arrayidx.i.i.i.i406.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i399, i64 %indvars.iv.next.i.i.i.i408
  %116 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %arrayidx3.i.i.i.i407.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %116, i64 %indvars.iv.next.i.i.i.i408
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i406.1, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i407.1, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i408.1 = add nuw nsw i64 %indvars.iv.i.i.i.i405, 2
  %niter468.next.1 = add i64 %niter468, 2
  %niter468.ncmp.1 = icmp eq i64 %niter468.next.1, %unroll_iter467
  br i1 %niter468.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i416.loopexit.unr-lcssa, label %for.body.i.i.i.i410

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i416.loopexit.unr-lcssa: ; preds = %for.body.i.i.i.i410, %for.body.lr.ph.i.i.i.i404
  %indvars.iv.i.i.i.i405.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i.i404 ], [ %indvars.iv.next.i.i.i.i408.1, %for.body.i.i.i.i410 ]
  %lcmp.mod466.not = icmp eq i64 %xtraiter465, 0
  br i1 %lcmp.mod466.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i416, label %for.body.i.i.i.i410.epil

for.body.i.i.i.i410.epil:                         ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i416.loopexit.unr-lcssa
  %arrayidx.i.i.i.i406.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i399, i64 %indvars.iv.i.i.i.i405.unr
  %117 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %arrayidx3.i.i.i.i407.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %117, i64 %indvars.iv.i.i.i.i405.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i406.epil, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i407.epil, i64 72, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i416

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i416: ; preds = %for.body.i.i.i.i410.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i416.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i401
  %118 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %tobool.not.i10.i.i.i412 = icmp eq ptr %118, null
  %119 = load i8, ptr %m_ownsMemory.i.i.i.i362, align 8, !range !159
  %tobool2.not.i.i.i.i414 = icmp eq i8 %119, 0
  %or.cond.i.i.i415 = select i1 %tobool.not.i10.i.i.i412, i1 true, i1 %tobool2.not.i.i.i.i414
  br i1 %or.cond.i.i.i415, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i419, label %if.then3.i.i.i.i417

if.then3.i.i.i.i417:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i416
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %118)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i419

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i419: ; preds = %if.then3.i.i.i.i417, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i416
  store i8 1, ptr %m_ownsMemory.i.i.i.i362, align 8, !tbaa !90
  store ptr %retval.0.i.i.i.i399, ptr %m_data.i.i.i, align 8, !tbaa !91
  store i32 %cond.i.i.i389, ptr %m_capacity.i.i.i334, align 8, !tbaa !93
  %.pre7.i.i418 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  br label %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit426

_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit426: ; preds = %if.end.i386, %if.then.i.i391, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i419
  %120 = phi i32 [ %.pre7.i.i418, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i419 ], [ %111, %if.then.i.i391 ], [ %111, %if.end.i386 ]
  %121 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %idxprom.i8.i421 = sext i32 %120 to i64
  %arrayidx.i9.i422 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %121, i64 %idxprom.i8.i421
  store ptr %l.sroa.0.0.copyload11.i377, ptr %arrayidx.i9.i422, align 8
  %l.sroa.6.0.arrayidx.i9.sroa_idx.i423 = getelementptr inbounds i8, ptr %arrayidx.i9.i422, i64 8
  store ptr %l.sroa.6.0.i382, ptr %l.sroa.6.0.arrayidx.i9.sroa_idx.i423, align 8
  %l.sroa.7.0.arrayidx.i9.sroa_idx.i424 = getelementptr inbounds i8, ptr %arrayidx.i9.i422, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7.0.arrayidx.i9.sroa_idx.i424, ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7.i371, i64 56, i1 false)
  %122 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  %inc.i.i425 = add nsw i32 %122, 1
  store i32 %inc.i.i425, ptr %m_size.i225, align 4, !tbaa !92
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %l.sroa.7.i371)
  %123 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %idxprom.i.i305 = sext i32 %122 to i64
  %m_n.i306 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %123, i64 %idxprom.i.i305, i32 1
  store ptr %103, ptr %m_n.i306, align 8, !tbaa !219
  %arrayidx6.i307 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %123, i64 %idxprom.i.i305, i32 1, i64 1
  store ptr %104, ptr %arrayidx6.i307, align 8, !tbaa !219
  %m_x.i308 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %103, i64 0, i32 1
  %m_x11.i309 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %104, i64 0, i32 1
  %124 = load float, ptr %m_x.i308, align 4, !tbaa !137
  %125 = load float, ptr %m_x11.i309, align 4, !tbaa !137
  %sub.i.i310 = fsub float %124, %125
  %arrayidx5.i.i311 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %103, i64 0, i32 1, i32 0, i64 1
  %126 = load float, ptr %arrayidx5.i.i311, align 4, !tbaa !137
  %arrayidx7.i20.i312 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %104, i64 0, i32 1, i32 0, i64 1
  %127 = load float, ptr %arrayidx7.i20.i312, align 4, !tbaa !137
  %sub8.i.i313 = fsub float %126, %127
  %arrayidx11.i.i314 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %103, i64 0, i32 1, i32 0, i64 2
  %128 = load float, ptr %arrayidx11.i.i314, align 4, !tbaa !137
  %arrayidx13.i.i315 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %104, i64 0, i32 1, i32 0, i64 2
  %129 = load float, ptr %arrayidx13.i.i315, align 4, !tbaa !137
  %sub14.i.i316 = fsub float %128, %129
  %mul8.i.i.i.i317 = fmul float %sub8.i.i313, %sub8.i.i313
  %130 = tail call float @llvm.fmuladd.f32(float %sub.i.i310, float %sub.i.i310, float %mul8.i.i.i.i317)
  %131 = tail call float @llvm.fmuladd.f32(float %sub14.i.i316, float %sub14.i.i316, float %130)
  %sqrt.i.i318 = tail call float @llvm.sqrt.f32(float %131)
  %m_rl.i319 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %123, i64 %idxprom.i.i305, i32 2
  store float %sqrt.i.i318, ptr %m_rl.i319, align 8, !tbaa !239
  store i8 1, ptr %m_bUpdateRtCst.i, align 4, !tbaa !147
  br label %if.end125

if.end125:                                        ; preds = %for.body72.if.end125_crit_edge, %lor.lhs.false.i.i299.preheader, %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit426, %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i301, %for.body.lr.ph.i.i283
  %indvars.iv.next449.pre-phi = phi i64 [ %.pre459, %for.body72.if.end125_crit_edge ], [ %50, %lor.lhs.false.i.i299.preheader ], [ %50, %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit426 ], [ %50, %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i301 ], [ %50, %for.body.lr.ph.i.i283 ]
  %exitcond452.not = icmp eq i64 %indvars.iv.next449.pre-phi, 3
  br i1 %exitcond452.not, label %for.cond.cleanup, label %for.body72

for.end131:                                       ; preds = %for.cond.cleanup, %for.end
  %132 = and i8 %done.0.lcssa, 1
  %tobool = icmp ne i8 %132, 0
  br i1 %tobool, label %if.end139, label %if.then132

if.then132:                                       ; preds = %for.end131
  %m_ndbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  %133 = load ptr, ptr %pn, align 16, !tbaa !219
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Node", ptr %133, i64 0, i32 8
  %134 = load ptr, ptr %m_leaf, align 8, !tbaa !183
  tail call void @_ZN6btDbvt6removeEP10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt, ptr noundef %134)
  %135 = load ptr, ptr %arrayinit.element, align 8, !tbaa !219
  %m_leaf136 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %135, i64 0, i32 8
  %136 = load ptr, ptr %m_leaf136, align 8, !tbaa !183
  tail call void @_ZN6btDbvt6removeEP10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt, ptr noundef %136)
  %137 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %dec.i326 = add nsw i32 %137, -2
  store i32 %dec.i326, ptr %m_size.i, align 4, !tbaa !88
  br label %if.end139

if.end139:                                        ; preds = %if.then132, %for.end131
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %pn) #38
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %x) #38
  ret i1 %tobool
}

; Function Attrs: uwtable
define dso_local noundef zeroext i1 @_ZN10btSoftBody7rayTestERK9btVector3S2_RNS_8sRayCastE(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, ptr nocapture noundef nonnull align 8 dereferenceable(24) %results) local_unnamed_addr #4 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !96
  %tobool.not = icmp ne i32 %0, 0
  %m_fdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 22
  %1 = load ptr, ptr %m_fdbvt, align 8
  %cmp.i = icmp eq ptr %1, null
  %or.cond = select i1 %tobool.not, i1 %cmp.i, i1 false
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_ZN10btSoftBody18initializeFaceTreeEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store ptr %this, ptr %results, align 8, !tbaa !400
  %fraction = getelementptr inbounds %"struct.btSoftBody::sRayCast", ptr %results, i64 0, i32 3
  store float 1.000000e+00, ptr %fraction, align 8, !tbaa !403
  %feature = getelementptr inbounds %"struct.btSoftBody::sRayCast", ptr %results, i64 0, i32 1
  store i32 0, ptr %feature, align 8, !tbaa !404
  %index = getelementptr inbounds %"struct.btSoftBody::sRayCast", ptr %results, i64 0, i32 2
  store i32 -1, ptr %index, align 4, !tbaa !405
  %call6 = tail call noundef i32 @_ZNK10btSoftBody7rayTestERK9btVector3S2_RfRNS_8eFeature1_ERib(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, ptr noundef nonnull align 4 dereferenceable(4) %fraction, ptr noundef nonnull align 4 dereferenceable(4) %feature, ptr noundef nonnull align 4 dereferenceable(4) %index, i1 noundef zeroext false)
  %cmp = icmp ne i32 %call6, 0
  ret i1 %cmp
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody18initializeFaceTreeEv(ptr noundef nonnull align 8 dereferenceable(1496) %this) local_unnamed_addr #4 align 2 {
entry:
  %ref.tmp = alloca %struct.btDbvtAabbMm, align 8
  %m_fdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 22
  tail call void @_ZN6btDbvt5clearEv(ptr noundef nonnull align 8 dereferenceable(64) %m_fdbvt)
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !96
  %cmp10 = icmp sgt i32 %0, 0
  br i1 %cmp10, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %mx.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp, i64 0, i32 1
  %arrayidx5.i.i.i = getelementptr inbounds [4 x float], ptr %ref.tmp, i64 0, i64 1
  %arrayidx9.i.i.i = getelementptr inbounds [4 x float], ptr %ref.tmp, i64 0, i64 2
  %arrayidx13.i.i.i = getelementptr inbounds [4 x float], ptr %ref.tmp, i64 0, i64 3
  %arrayidx5.i13.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp, i64 0, i32 1, i32 0, i64 1
  %arrayidx9.i17.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp, i64 0, i32 1, i32 0, i64 2
  %arrayidx13.i21.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp, i64 0, i32 1, i32 0, i64 3
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZL8VolumeOfRKN10btSoftBody4FaceEf.exit, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %_ZL8VolumeOfRKN10btSoftBody4FaceEf.exit
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %_ZL8VolumeOfRKN10btSoftBody4FaceEf.exit ]
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !95
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 %indvars.iv
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %ref.tmp) #38
  call void @llvm.experimental.noalias.scope.decl(metadata !406)
  %m_n.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 %indvars.iv, i32 1
  %2 = load ptr, ptr %m_n.i, align 8, !tbaa !219, !noalias !406
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 1
  %arrayidx2.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 %indvars.iv, i32 1, i64 1
  %3 = load ptr, ptr %arrayidx2.i, align 8, !tbaa !219, !noalias !406
  %m_x3.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1
  %arrayidx6.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 %indvars.iv, i32 1, i64 2
  %4 = load ptr, ptr %arrayidx6.i, align 8, !tbaa !219, !noalias !406
  %m_x7.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1
  call void @llvm.experimental.noalias.scope.decl(metadata !409)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %mx.i.i, ptr noundef nonnull align 4 dereferenceable(16) %m_x.i, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ref.tmp, ptr noundef nonnull align 4 dereferenceable(16) %m_x.i, i64 16, i1 false)
  %mx.promoted.i.i = load float, ptr %mx.i.i, align 8, !tbaa !137, !alias.scope !406
  %agg.result.promoted.i.i = load float, ptr %ref.tmp, align 8, !tbaa !137, !alias.scope !406
  %arrayidx5.i.promoted.i.i = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137, !alias.scope !406
  %arrayidx9.i.promoted.i.i = load float, ptr %arrayidx9.i.i.i, align 8, !tbaa !137, !alias.scope !406
  %arrayidx13.i.promoted.i.i = load float, ptr %arrayidx13.i.i.i, align 4, !tbaa !137, !alias.scope !412
  %arrayidx5.i13.promoted.i.i = load float, ptr %arrayidx5.i13.i.i, align 4, !tbaa !137, !alias.scope !406
  %arrayidx9.i17.promoted.i.i = load float, ptr %arrayidx9.i17.i.i, align 8, !tbaa !137, !alias.scope !406
  %arrayidx13.i21.promoted.i.i = load float, ptr %arrayidx13.i21.i.i, align 4, !tbaa !137, !alias.scope !412
  %5 = load float, ptr %m_x3.i, align 4, !tbaa !137, !noalias !412
  %cmp.i.i.i.i = fcmp olt float %5, %agg.result.promoted.i.i
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %_Z8btSetMinIfEvRT_RKS0_.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %for.body
  store float %5, ptr %ref.tmp, align 8, !tbaa !137, !alias.scope !412
  br label %_Z8btSetMinIfEvRT_RKS0_.exit.i.i.i

_Z8btSetMinIfEvRT_RKS0_.exit.i.i.i:               ; preds = %if.then.i.i.i.i, %for.body
  %6 = phi float [ %5, %if.then.i.i.i.i ], [ %agg.result.promoted.i.i, %for.body ]
  %arrayidx7.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1, i32 0, i64 1
  %7 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137, !noalias !412
  %cmp.i17.i.i.i = fcmp olt float %7, %arrayidx5.i.promoted.i.i
  br i1 %cmp.i17.i.i.i, label %if.then.i18.i.i.i, label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.i.i

if.then.i18.i.i.i:                                ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit.i.i.i
  store float %7, ptr %arrayidx5.i.i.i, align 4, !tbaa !137, !alias.scope !412
  br label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.i.i

_Z8btSetMinIfEvRT_RKS0_.exit19.i.i.i:             ; preds = %if.then.i18.i.i.i, %_Z8btSetMinIfEvRT_RKS0_.exit.i.i.i
  %8 = phi float [ %7, %if.then.i18.i.i.i ], [ %arrayidx5.i.promoted.i.i, %_Z8btSetMinIfEvRT_RKS0_.exit.i.i.i ]
  %arrayidx11.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1, i32 0, i64 2
  %9 = load float, ptr %arrayidx11.i.i.i, align 4, !tbaa !137, !noalias !412
  %cmp.i20.i.i.i = fcmp olt float %9, %arrayidx9.i.promoted.i.i
  br i1 %cmp.i20.i.i.i, label %if.then.i21.i.i.i, label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.i.i

if.then.i21.i.i.i:                                ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit19.i.i.i
  store float %9, ptr %arrayidx9.i.i.i, align 8, !tbaa !137, !alias.scope !412
  br label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.i.i

_Z8btSetMinIfEvRT_RKS0_.exit22.i.i.i:             ; preds = %if.then.i21.i.i.i, %_Z8btSetMinIfEvRT_RKS0_.exit19.i.i.i
  %10 = phi float [ %9, %if.then.i21.i.i.i ], [ %arrayidx9.i.promoted.i.i, %_Z8btSetMinIfEvRT_RKS0_.exit19.i.i.i ]
  %arrayidx.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1, i32 0, i64 3
  %11 = load float, ptr %arrayidx.i.i.i.i, align 4, !tbaa !137, !noalias !412
  %cmp.i23.i.i.i = fcmp olt float %11, %arrayidx13.i.promoted.i.i
  br i1 %cmp.i23.i.i.i, label %if.then.i24.i.i.i, label %_ZN9btVector36setMinERKS_.exit.i.i

if.then.i24.i.i.i:                                ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit22.i.i.i
  store float %11, ptr %arrayidx13.i.i.i, align 4, !tbaa !137, !alias.scope !412
  br label %_ZN9btVector36setMinERKS_.exit.i.i

_ZN9btVector36setMinERKS_.exit.i.i:               ; preds = %if.then.i24.i.i.i, %_Z8btSetMinIfEvRT_RKS0_.exit22.i.i.i
  %12 = phi float [ %arrayidx13.i.promoted.i.i, %_Z8btSetMinIfEvRT_RKS0_.exit22.i.i.i ], [ %11, %if.then.i24.i.i.i ]
  %cmp.i.i11.i.i = fcmp olt float %mx.promoted.i.i, %5
  br i1 %cmp.i.i11.i.i, label %if.then.i.i12.i.i, label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.i.i

if.then.i.i12.i.i:                                ; preds = %_ZN9btVector36setMinERKS_.exit.i.i
  store float %5, ptr %mx.i.i, align 8, !tbaa !137, !alias.scope !412
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.i.i

_Z8btSetMaxIfEvRT_RKS0_.exit.i.i.i:               ; preds = %if.then.i.i12.i.i, %_ZN9btVector36setMinERKS_.exit.i.i
  %13 = phi float [ %5, %if.then.i.i12.i.i ], [ %mx.promoted.i.i, %_ZN9btVector36setMinERKS_.exit.i.i ]
  %cmp.i17.i15.i.i = fcmp olt float %arrayidx5.i13.promoted.i.i, %7
  %14 = select i1 %cmp.i17.i15.i.i, float %7, float %arrayidx5.i13.promoted.i.i
  %cmp.i20.i19.i.i = fcmp olt float %arrayidx9.i17.promoted.i.i, %9
  %15 = select i1 %cmp.i20.i19.i.i, float %9, float %arrayidx9.i17.promoted.i.i
  %cmp.i23.i23.i.i = fcmp olt float %arrayidx13.i21.promoted.i.i, %11
  br i1 %cmp.i23.i23.i.i, label %if.then.i24.i24.i.i, label %_ZN9btVector36setMaxERKS_.exit.i.i

if.then.i24.i24.i.i:                              ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit.i.i.i
  store float %11, ptr %arrayidx13.i21.i.i, align 4, !tbaa !137, !alias.scope !412
  br label %_ZN9btVector36setMaxERKS_.exit.i.i

_ZN9btVector36setMaxERKS_.exit.i.i:               ; preds = %if.then.i24.i24.i.i, %_Z8btSetMaxIfEvRT_RKS0_.exit.i.i.i
  %16 = phi float [ %arrayidx13.i21.promoted.i.i, %_Z8btSetMaxIfEvRT_RKS0_.exit.i.i.i ], [ %11, %if.then.i24.i24.i.i ]
  %17 = load <2 x float>, ptr %m_x7.i, align 4, !tbaa !137, !noalias !412
  %18 = insertelement <2 x float> poison, float %6, i64 0
  %19 = insertelement <2 x float> %18, float %8, i64 1
  %20 = fcmp olt <2 x float> %17, %19
  %21 = select <2 x i1> %20, <2 x float> %17, <2 x float> %19
  %arrayidx11.i.i.1.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 2
  %22 = load float, ptr %arrayidx11.i.i.1.i, align 4, !tbaa !137, !noalias !412
  %arrayidx.i.i.i.1.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 3
  %23 = load float, ptr %arrayidx.i.i.i.1.i, align 4, !tbaa !137, !noalias !412
  %cmp.i23.i.i.1.i = fcmp olt float %23, %12
  br i1 %cmp.i23.i.i.1.i, label %if.then.i24.i.i.1.i, label %_ZN9btVector36setMinERKS_.exit.i.1.i

if.then.i24.i.i.1.i:                              ; preds = %_ZN9btVector36setMaxERKS_.exit.i.i
  store float %23, ptr %arrayidx13.i.i.i, align 4, !tbaa !137, !alias.scope !412
  br label %_ZN9btVector36setMinERKS_.exit.i.1.i

_ZN9btVector36setMinERKS_.exit.i.1.i:             ; preds = %if.then.i24.i.i.1.i, %_ZN9btVector36setMaxERKS_.exit.i.i
  %cmp.i23.i23.i.1.i = fcmp olt float %16, %23
  br i1 %cmp.i23.i23.i.1.i, label %if.then.i24.i24.i.1.i, label %_ZL8VolumeOfRKN10btSoftBody4FaceEf.exit

if.then.i24.i24.i.1.i:                            ; preds = %_ZN9btVector36setMinERKS_.exit.i.1.i
  store float %23, ptr %arrayidx13.i21.i.i, align 4, !tbaa !137, !alias.scope !412
  br label %_ZL8VolumeOfRKN10btSoftBody4FaceEf.exit

_ZL8VolumeOfRKN10btSoftBody4FaceEf.exit:          ; preds = %_ZN9btVector36setMinERKS_.exit.i.1.i, %if.then.i24.i24.i.1.i
  %cmp.i20.i19.i.1.i = fcmp olt float %15, %22
  %24 = select i1 %cmp.i20.i19.i.1.i, float %22, float %15
  %cmp.i20.i.i.1.i = fcmp olt float %22, %10
  %25 = select i1 %cmp.i20.i.i.1.i, float %22, float %10
  store <2 x float> %21, ptr %ref.tmp, align 8, !tbaa !137, !alias.scope !406
  store float %25, ptr %arrayidx9.i.i.i, align 8, !tbaa !137, !alias.scope !406
  %26 = insertelement <2 x float> poison, float %13, i64 0
  %27 = insertelement <2 x float> %26, float %14, i64 1
  %28 = fcmp olt <2 x float> %27, %17
  %29 = select <2 x i1> %28, <2 x float> %17, <2 x float> %27
  %30 = fadd <2 x float> %29, zeroinitializer
  store <2 x float> %30, ptr %mx.i.i, align 8, !tbaa !137, !alias.scope !406
  %add13.i.i.i = fadd float %24, 0.000000e+00
  store float %add13.i.i.i, ptr %arrayidx9.i17.i.i, align 8, !tbaa !137, !alias.scope !406
  %call5 = call noundef ptr @_ZN6btDbvt6insertERK12btDbvtAabbMmPv(ptr noundef nonnull align 8 dereferenceable(64) %m_fdbvt, ptr noundef nonnull align 4 dereferenceable(32) %ref.tmp, ptr noundef nonnull %arrayidx.i)
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 %indvars.iv, i32 4
  store ptr %call5, ptr %m_leaf, align 8, !tbaa !232
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %ref.tmp) #38
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %31 = load i32, ptr %m_size.i, align 4, !tbaa !96
  %32 = sext i32 %31 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %32
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: uwtable
define dso_local noundef i32 @_ZNK10btSoftBody7rayTestERK9btVector3S2_RfRNS_8eFeature1_ERib(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, ptr nocapture noundef nonnull align 4 dereferenceable(4) %mint, ptr nocapture noundef nonnull writeonly align 4 dereferenceable(4) %feature, ptr nocapture noundef nonnull writeonly align 4 dereferenceable(4) %index, i1 noundef zeroext %bcountonly) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %dir = alloca %class.btVector3, align 8
  %collider = alloca %"struct.btSoftBody::RayFromToCaster", align 8
  br i1 %bcountonly, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %m_fdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 22
  %0 = load ptr, ptr %m_fdbvt, align 8, !tbaa !413
  %cmp.i = icmp eq ptr %0, null
  br i1 %cmp.i, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %dir) #38
  %arrayidx11.i = getelementptr inbounds [4 x float], ptr %rayTo, i64 0, i64 2
  %1 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds [4 x float], ptr %rayFrom, i64 0, i64 2
  %2 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %1, %2
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i, i64 0
  %3 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %dir, i64 0, i32 1
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %3, align 8
  %4 = load <2 x float>, ptr %rayTo, align 4, !tbaa !137
  %5 = load <2 x float>, ptr %rayFrom, align 4, !tbaa !137
  %6 = fsub <2 x float> %4, %5
  %7 = fmul <2 x float> %6, %6
  %mul8.i.i.i.i = extractelement <2 x float> %7, i64 1
  %8 = extractelement <2 x float> %6, i64 0
  %9 = tail call float @llvm.fmuladd.f32(float %8, float %8, float %mul8.i.i.i.i)
  %10 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub14.i, float %9)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %10)
  %div.i.i = fdiv float 1.000000e+00, %sqrt.i.i
  %11 = insertelement <2 x float> poison, float %div.i.i, i64 0
  %12 = shufflevector <2 x float> %11, <2 x float> poison, <2 x i32> zeroinitializer
  %13 = fmul <2 x float> %12, %6
  store <2 x float> %13, ptr %dir, align 8, !tbaa !137
  %mul7.i.i.i = fmul float %sub14.i, %div.i.i
  store float %mul7.i.i.i, ptr %3, align 8, !tbaa !137
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %14 = load i32, ptr %m_size.i, align 4, !tbaa !96
  %cmp51 = icmp sgt i32 %14, 0
  br i1 %cmp51, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %if.then
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %wide.trip.count59 = zext i32 %14 to i64
  br i1 %bcountonly, label %for.body.us, label %for.body

for.body.us:                                      ; preds = %for.body.lr.ph, %for.body.us
  %indvars.iv56 = phi i64 [ %indvars.iv.next57, %for.body.us ], [ 0, %for.body.lr.ph ]
  %cnt.053.us = phi i32 [ %cnt.1.us, %for.body.us ], [ 0, %for.body.lr.ph ]
  %15 = load ptr, ptr %m_data.i, align 8, !tbaa !95
  %m_n.us = getelementptr inbounds %"struct.btSoftBody::Face", ptr %15, i64 %indvars.iv56, i32 1
  %16 = load ptr, ptr %m_n.us, align 8, !tbaa !219
  %m_x.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %16, i64 0, i32 1
  %arrayidx8.us = getelementptr inbounds %"struct.btSoftBody::Face", ptr %15, i64 %indvars.iv56, i32 1, i64 1
  %17 = load ptr, ptr %arrayidx8.us, align 8, !tbaa !219
  %m_x9.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %17, i64 0, i32 1
  %arrayidx11.us = getelementptr inbounds %"struct.btSoftBody::Face", ptr %15, i64 %indvars.iv56, i32 1, i64 2
  %18 = load ptr, ptr %arrayidx11.us, align 8, !tbaa !219
  %m_x12.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 0, i32 1
  %19 = load float, ptr %mint, align 4, !tbaa !137
  %call13.us = call noundef float @_ZN10btSoftBody15RayFromToCaster17rayFromToTriangleERK9btVector3S3_S3_S3_S3_S3_f(ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, ptr noundef nonnull align 4 dereferenceable(16) %dir, ptr noundef nonnull align 4 dereferenceable(16) %m_x.us, ptr noundef nonnull align 4 dereferenceable(16) %m_x9.us, ptr noundef nonnull align 4 dereferenceable(16) %m_x12.us, float noundef %19)
  %cmp14.us = fcmp ogt float %call13.us, 0.000000e+00
  %inc.us = zext i1 %cmp14.us to i32
  %cnt.1.us = add nuw nsw i32 %cnt.053.us, %inc.us
  %indvars.iv.next57 = add nuw nsw i64 %indvars.iv56, 1
  %exitcond60.not = icmp eq i64 %indvars.iv.next57, %wide.trip.count59
  br i1 %exitcond60.not, label %for.cond.cleanup, label %for.body.us

for.cond.cleanup:                                 ; preds = %if.end18, %for.body.us, %if.then
  %cnt.0.lcssa = phi i32 [ 0, %if.then ], [ %cnt.1.us, %for.body.us ], [ %cnt.1, %if.end18 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %dir) #38
  br label %if.end29

for.body:                                         ; preds = %for.body.lr.ph, %if.end18
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end18 ], [ 0, %for.body.lr.ph ]
  %cnt.053 = phi i32 [ %cnt.1, %if.end18 ], [ 0, %for.body.lr.ph ]
  %20 = load ptr, ptr %m_data.i, align 8, !tbaa !95
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %20, i64 %indvars.iv, i32 1
  %21 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 0, i32 1
  %arrayidx8 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %20, i64 %indvars.iv, i32 1, i64 1
  %22 = load ptr, ptr %arrayidx8, align 8, !tbaa !219
  %m_x9 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %22, i64 0, i32 1
  %arrayidx11 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %20, i64 %indvars.iv, i32 1, i64 2
  %23 = load ptr, ptr %arrayidx11, align 8, !tbaa !219
  %m_x12 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %23, i64 0, i32 1
  %24 = load float, ptr %mint, align 4, !tbaa !137
  %call13 = call noundef float @_ZN10btSoftBody15RayFromToCaster17rayFromToTriangleERK9btVector3S3_S3_S3_S3_S3_f(ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, ptr noundef nonnull align 4 dereferenceable(16) %dir, ptr noundef nonnull align 4 dereferenceable(16) %m_x, ptr noundef nonnull align 4 dereferenceable(16) %m_x9, ptr noundef nonnull align 4 dereferenceable(16) %m_x12, float noundef %24)
  %cmp14 = fcmp ogt float %call13, 0.000000e+00
  br i1 %cmp14, label %if.then15, label %if.end18

if.then15:                                        ; preds = %for.body
  %inc = add nsw i32 %cnt.053, 1
  store i32 3, ptr %feature, align 4, !tbaa !414
  %25 = trunc i64 %indvars.iv to i32
  store i32 %25, ptr %index, align 4, !tbaa !140
  store float %call13, ptr %mint, align 4, !tbaa !137
  br label %if.end18

if.end18:                                         ; preds = %if.then15, %for.body
  %cnt.1 = phi i32 [ %inc, %if.then15 ], [ %cnt.053, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count59
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %collider) #38
  %26 = load float, ptr %mint, align 4, !tbaa !137
  store ptr getelementptr inbounds ({ [9 x ptr] }, ptr @_ZTVN10btSoftBody15RayFromToCasterE, i64 0, inrange i32 0, i64 2), ptr %collider, align 8, !tbaa !5
  %m_rayFrom.i = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %collider, i64 0, i32 1
  %m_rayTo.i = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %collider, i64 0, i32 2
  %m_rayNormalizedDirection.i = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %collider, i64 0, i32 3
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rayFrom.i, ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, i64 16, i1 false), !tbaa.struct !163
  %27 = load <2 x float>, ptr %rayTo, align 4, !tbaa !137
  %28 = load <2 x float>, ptr %rayFrom, align 4, !tbaa !137
  %29 = fsub <2 x float> %27, %28
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %rayTo, i64 0, i64 2
  %30 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %arrayidx13.i.i = getelementptr inbounds [4 x float], ptr %rayFrom, i64 0, i64 2
  %31 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %30, %31
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i, i64 0
  store <2 x float> %29, ptr %m_rayNormalizedDirection.i, align 8, !tbaa.struct !163
  %ref.tmp.sroa.5.0.m_rayNormalizedDirection7.sroa_idx.i = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %collider, i64 0, i32 3, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i, ptr %ref.tmp.sroa.5.0.m_rayNormalizedDirection7.sroa_idx.i, align 8, !tbaa.struct !165
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rayTo.i, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, i64 16, i1 false), !tbaa.struct !163
  %m_mint.i = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %collider, i64 0, i32 4
  store float %26, ptr %m_mint.i, align 8, !tbaa !415
  %m_face.i = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %collider, i64 0, i32 6
  store ptr null, ptr %m_face.i, align 8, !tbaa !418
  %m_tests.i = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %collider, i64 0, i32 7
  store i32 0, ptr %m_tests.i, align 8, !tbaa !419
  call void @_ZN6btDbvt7rayTestEPK10btDbvtNodeRK9btVector3S5_RNS_8ICollideE(ptr noundef nonnull %0, ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, ptr noundef nonnull align 8 dereferenceable(8) %collider)
  %32 = load ptr, ptr %m_face.i, align 8, !tbaa !418
  %tobool21.not = icmp eq ptr %32, null
  br i1 %tobool21.not, label %if.end27, label %if.then22

if.then22:                                        ; preds = %if.else
  %33 = load float, ptr %m_mint.i, align 8, !tbaa !415
  store float %33, ptr %mint, align 4, !tbaa !137
  store i32 3, ptr %feature, align 4, !tbaa !414
  %m_data.i50 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %34 = load ptr, ptr %m_data.i50, align 8, !tbaa !95
  %sub.ptr.lhs.cast = ptrtoint ptr %32 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %34 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 72
  %conv = trunc i64 %sub.ptr.div to i32
  store i32 %conv, ptr %index, align 4, !tbaa !140
  br label %if.end27

if.end27:                                         ; preds = %if.then22, %if.else
  %cnt.2 = phi i32 [ 1, %if.then22 ], [ 0, %if.else ]
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %collider) #38
  br label %if.end29

if.end29:                                         ; preds = %if.end27, %for.cond.cleanup
  %cnt.3 = phi i32 [ %cnt.0.lcssa, %for.cond.cleanup ], [ %cnt.2, %if.end27 ]
  ret i32 %cnt.3
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody13predictMotionEf(ptr noundef nonnull align 8 dereferenceable(1496) %this, float noundef %dt) local_unnamed_addr #0 align 2 {
entry:
  %vol = alloca %struct.btDbvtAabbMm, align 8
  %ref.tmp60 = alloca %class.btVector3, align 8
  %ref.tmp103 = alloca %class.btVector3, align 8
  %ref.tmp154 = alloca %"struct.btSoftBody::RContact", align 8
  %m_bUpdateRtCst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  %0 = load i8, ptr %m_bUpdateRtCst, align 4, !tbaa !147, !range !159, !noundef !192
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.end5, label %if.then

if.then:                                          ; preds = %entry
  store i8 0, ptr %m_bUpdateRtCst, align 4, !tbaa !147
  tail call void @_ZN10btSoftBody15updateConstantsEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  %m_fdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 22
  tail call void @_ZN6btDbvt5clearEv(ptr noundef nonnull align 8 dereferenceable(64) %m_fdbvt)
  %collisions = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 25
  %1 = load i32, ptr %collisions, align 4, !tbaa !141
  %and = and i32 %1, 16
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.then
  tail call void @_ZN10btSoftBody18initializeFaceTreeEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  br label %if.end5

if.end5:                                          ; preds = %if.then, %if.then4, %entry
  %timescale = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 20
  %2 = load float, ptr %timescale, align 8, !tbaa !139
  %mul = fmul float %2, %dt
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3
  store float %mul, ptr %m_sst, align 8, !tbaa !420
  %div = fdiv float 1.000000e+00, %mul
  %isdt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3, i32 1
  store float %div, ptr %isdt, align 4, !tbaa !421
  %mul12 = fmul float %mul, 3.000000e+00
  %velmrg = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3, i32 2
  store float %mul12, ptr %velmrg, align 8, !tbaa !422
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %3 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable = load ptr, ptr %3, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 11
  %4 = load ptr, ptr %vfn, align 8
  %call14 = tail call noundef float %4(ptr noundef nonnull align 8 dereferenceable(24) %3)
  %radmrg = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3, i32 3
  store float %call14, ptr %radmrg, align 4, !tbaa !386
  %mul18 = fmul float %call14, 2.500000e-01
  %updmrg = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3, i32 4
  store float %mul18, ptr %updmrg, align 8, !tbaa !423
  %m_worldInfo = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 7
  %5 = load ptr, ptr %m_worldInfo, align 8, !tbaa !42
  %m_gravity = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %5, i64 0, i32 6
  %6 = load float, ptr %m_sst, align 8, !tbaa !137
  %7 = load <2 x float>, ptr %m_gravity, align 4, !tbaa !137
  %8 = insertelement <2 x float> poison, float %6, i64 0
  %9 = shufflevector <2 x float> %8, <2 x float> poison, <2 x i32> zeroinitializer
  %10 = fmul <2 x float> %9, %7
  %arrayidx7.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %5, i64 0, i32 6, i32 0, i64 2
  %11 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %mul8.i = fmul float %6, %11
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %12 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  %cmp4.i = icmp sgt i32 %12, 0
  br i1 %cmp4.i, label %for.body.lr.ph.i, label %_ZN10btSoftBody11addVelocityERK9btVector3.exit

for.body.lr.ph.i:                                 ; preds = %if.end5
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %13 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !87
  %wide.trip.count.i = zext i32 %12 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %_ZN10btSoftBody11addVelocityERK9btVector3i.exit.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %_ZN10btSoftBody11addVelocityERK9btVector3i.exit.i ]
  %m_im.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 %indvars.iv.i, i32 6
  %14 = load float, ptr %m_im.i.i, align 8, !tbaa !175
  %cmp.i.i = fcmp ogt float %14, 0.000000e+00
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN10btSoftBody11addVelocityERK9btVector3i.exit.i

if.then.i.i:                                      ; preds = %for.body.i
  %m_v.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 %indvars.iv.i, i32 3
  %15 = load <2 x float>, ptr %m_v.i.i, align 4, !tbaa !137
  %16 = fadd <2 x float> %10, %15
  store <2 x float> %16, ptr %m_v.i.i, align 4, !tbaa !137
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %m_v.i.i, i64 0, i64 2
  %17 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %add13.i.i.i = fadd float %mul8.i, %17
  store float %add13.i.i.i, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  br label %_ZN10btSoftBody11addVelocityERK9btVector3i.exit.i

_ZN10btSoftBody11addVelocityERK9btVector3i.exit.i: ; preds = %if.then.i.i, %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %_ZN10btSoftBody11addVelocityERK9btVector3.exit, label %for.body.i

_ZN10btSoftBody11addVelocityERK9btVector3.exit:   ; preds = %_ZN10btSoftBody11addVelocityERK9btVector3i.exit.i, %if.end5
  tail call void @_ZN10btSoftBody11applyForcesEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  %18 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  %cmp380 = icmp sgt i32 %18, 0
  br i1 %cmp380, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %_ZN10btSoftBody11addVelocityERK9btVector3.exit
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %wide.trip.count = zext i32 %18 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %19 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 %indvars.iv, i32 1
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 %indvars.iv, i32 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_q, ptr noundef nonnull align 8 dereferenceable(16) %m_x, i64 16, i1 false), !tbaa.struct !163
  %m_f = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 %indvars.iv, i32 4
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 %indvars.iv, i32 6
  %arrayidx3.i185 = getelementptr inbounds [4 x float], ptr %m_f, i64 0, i64 1
  %arrayidx7.i187 = getelementptr inbounds [4 x float], ptr %m_f, i64 0, i64 2
  %20 = load float, ptr %arrayidx7.i187, align 4, !tbaa !137
  %21 = load float, ptr %m_sst, align 8, !tbaa !137
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 %indvars.iv, i32 3
  %arrayidx12.i = getelementptr inbounds [4 x float], ptr %m_v, i64 0, i64 2
  %22 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %23 = load float, ptr %m_f, align 4, !tbaa !137
  %24 = load float, ptr %m_im, align 4, !tbaa !137
  %25 = load float, ptr %arrayidx3.i185, align 4, !tbaa !137
  %26 = insertelement <2 x float> poison, float %23, i64 0
  %27 = insertelement <2 x float> %26, float %24, i64 1
  %28 = insertelement <2 x float> poison, float %24, i64 0
  %29 = insertelement <2 x float> %28, float %25, i64 1
  %30 = fmul <2 x float> %27, %29
  %mul8.i188 = fmul float %24, %20
  %31 = insertelement <2 x float> poison, float %21, i64 0
  %32 = shufflevector <2 x float> %31, <2 x float> poison, <2 x i32> zeroinitializer
  %33 = fmul <2 x float> %30, %32
  %mul8.i198 = fmul float %21, %mul8.i188
  %34 = load <2 x float>, ptr %m_v, align 4, !tbaa !137
  %35 = fadd <2 x float> %33, %34
  store <2 x float> %35, ptr %m_v, align 4, !tbaa !137
  %add13.i = fadd float %mul8.i198, %22
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %36 = load float, ptr %m_sst, align 8, !tbaa !137
  %37 = insertelement <2 x float> poison, float %36, i64 0
  %38 = shufflevector <2 x float> %37, <2 x float> poison, <2 x i32> zeroinitializer
  %39 = fmul <2 x float> %35, %38
  %mul8.i209 = fmul float %add13.i, %36
  %40 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %41 = fadd <2 x float> %39, %40
  store <2 x float> %41, ptr %m_x, align 4, !tbaa !137
  %arrayidx12.i220 = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %42 = load float, ptr %arrayidx12.i220, align 4, !tbaa !137
  %add13.i221 = fadd float %mul8.i209, %42
  store float %add13.i221, ptr %arrayidx12.i220, align 4, !tbaa !137
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_f, i8 0, i64 16, i1 false)
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %_ZN10btSoftBody11addVelocityERK9btVector3.exit
  tail call void @_ZN10btSoftBody14updateClustersEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  %m_ndbvt.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  %43 = load ptr, ptr %m_ndbvt.i, align 8, !tbaa !162
  %tobool.not.i = icmp eq ptr %43, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %for.end
  %mx.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %43, i64 0, i32 1
  %44 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable.i = load ptr, ptr %44, align 8, !tbaa !5
  %vfn.i = getelementptr inbounds ptr, ptr %vtable.i, i64 11
  %45 = load ptr, ptr %vfn.i, align 8
  %call9.i = tail call noundef float %45(ptr noundef nonnull align 8 dereferenceable(24) %44)
  %46 = load <2 x float>, ptr %43, align 4, !tbaa !137
  %47 = insertelement <2 x float> poison, float %call9.i, i64 0
  %48 = shufflevector <2 x float> %47, <2 x float> poison, <2 x i32> zeroinitializer
  %49 = fsub <2 x float> %46, %48
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %43, i64 0, i64 2
  %50 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %50, %call9.i
  %retval.sroa.3.12.vec.insert.i45.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i, i64 0
  %m_bounds.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  store <2 x float> %49, ptr %m_bounds.i, align 4, !tbaa.struct !163
  %ref.tmp12.sroa.4.0.arrayidx.sroa_idx.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 0, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i45.i, ptr %ref.tmp12.sroa.4.0.arrayidx.sroa_idx.i, align 4, !tbaa.struct !165
  %51 = load <2 x float>, ptr %mx.i.i, align 4, !tbaa !137
  %52 = fadd <2 x float> %48, %51
  %arrayidx11.i50.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %43, i64 0, i32 1, i32 0, i64 2
  %53 = load float, ptr %arrayidx11.i50.i, align 4, !tbaa !137
  %add14.i.i = fadd float %call9.i, %53
  %retval.sroa.3.12.vec.insert.i54.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i, i64 0
  %arrayidx19.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1
  store <2 x float> %52, ptr %arrayidx19.i, align 4, !tbaa.struct !163
  %ref.tmp15.sroa.4.0.arrayidx19.sroa_idx.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i54.i, ptr %ref.tmp15.sroa.4.0.arrayidx19.sroa_idx.i, align 4, !tbaa.struct !165
  %m_broadphaseHandle.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 8
  %54 = load ptr, ptr %m_broadphaseHandle.i.i, align 8, !tbaa !166
  %cmp.not.i = icmp eq ptr %54, null
  br i1 %cmp.not.i, label %_ZN10btSoftBody12updateBoundsEv.exit, label %if.then21.i

if.then21.i:                                      ; preds = %if.then.i
  %55 = load ptr, ptr %m_worldInfo, align 8, !tbaa !42
  %m_broadphase.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %55, i64 0, i32 4
  %56 = load ptr, ptr %m_broadphase.i, align 8, !tbaa !167
  %m_dispatcher.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %55, i64 0, i32 5
  %57 = load ptr, ptr %m_dispatcher.i, align 8, !tbaa !172
  %vtable28.i = load ptr, ptr %56, align 8, !tbaa !5
  %vfn29.i = getelementptr inbounds ptr, ptr %vtable28.i, i64 4
  %58 = load ptr, ptr %vfn29.i, align 8
  tail call void %58(ptr noundef nonnull align 8 dereferenceable(8) %56, ptr noundef nonnull %54, ptr noundef nonnull align 4 dereferenceable(16) %m_bounds.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx19.i, ptr noundef %57)
  br label %_ZN10btSoftBody12updateBoundsEv.exit

if.else.i:                                        ; preds = %for.end
  %m_bounds34.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %m_bounds34.i, i8 0, i64 32, i1 false)
  br label %_ZN10btSoftBody12updateBoundsEv.exit

_ZN10btSoftBody12updateBoundsEv.exit:             ; preds = %if.then.i, %if.then21.i, %if.else.i
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %vol) #38
  %59 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  %cmp51382 = icmp sgt i32 %59, 0
  br i1 %cmp51382, label %for.body52.lr.ph, label %for.end71

for.body52.lr.ph:                                 ; preds = %_ZN10btSoftBody12updateBoundsEv.exit
  %m_data.i226 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %ref.tmp56.sroa.4.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 8
  %ref.tmp56.sroa.5.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 16
  %ref.tmp56.sroa.6.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 24
  %60 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp60, i64 0, i32 1
  %wide.trip.count392 = zext i32 %59 to i64
  br label %for.body52

for.body52:                                       ; preds = %for.body52.lr.ph, %for.body52
  %indvars.iv389 = phi i64 [ 0, %for.body52.lr.ph ], [ %indvars.iv.next390, %for.body52 ]
  %61 = load ptr, ptr %m_data.i226, align 8, !tbaa !87
  %m_x57 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %61, i64 %indvars.iv389, i32 1
  %62 = load float, ptr %radmrg, align 4, !tbaa !386
  %arrayidx11.i.i.i = getelementptr inbounds [4 x float], ptr %m_x57, i64 0, i64 2
  %63 = load float, ptr %arrayidx11.i.i.i, align 4, !tbaa !137, !noalias !424
  %sub14.i.i.i = fsub float %63, %62
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i.i, i64 0
  %64 = load <2 x float>, ptr %m_x57, align 4, !tbaa !137, !noalias !424
  %65 = insertelement <2 x float> poison, float %62, i64 0
  %66 = shufflevector <2 x float> %65, <2 x float> poison, <2 x i32> zeroinitializer
  %67 = fsub <2 x float> %64, %66
  %68 = fadd <2 x float> %66, %64
  %add14.i.i.i = fadd float %62, %63
  %retval.sroa.3.12.vec.insert.i12.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i.i, i64 0
  store <2 x float> %67, ptr %vol, align 8, !tbaa.struct !297
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i, ptr %ref.tmp56.sroa.4.0.vol.sroa_idx, align 8, !tbaa.struct !298
  store <2 x float> %68, ptr %ref.tmp56.sroa.5.0.vol.sroa_idx, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i12.i.i, ptr %ref.tmp56.sroa.6.0.vol.sroa_idx, align 8, !tbaa.struct !165
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Node", ptr %61, i64 %indvars.iv389, i32 8
  %69 = load ptr, ptr %m_leaf, align 8, !tbaa !183
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp60) #38
  %m_v61 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %61, i64 %indvars.iv389, i32 3
  %70 = load float, ptr %velmrg, align 8, !tbaa !137
  %71 = load <2 x float>, ptr %m_v61, align 4, !tbaa !137
  %72 = insertelement <2 x float> poison, float %70, i64 0
  %73 = shufflevector <2 x float> %72, <2 x float> poison, <2 x i32> zeroinitializer
  %74 = fmul <2 x float> %73, %71
  %arrayidx7.i236 = getelementptr inbounds [4 x float], ptr %m_v61, i64 0, i64 2
  %75 = load float, ptr %arrayidx7.i236, align 4, !tbaa !137
  %mul8.i237 = fmul float %70, %75
  %retval.sroa.3.12.vec.insert.i240 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i237, i64 0
  store <2 x float> %74, ptr %ref.tmp60, align 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i240, ptr %60, align 8
  %76 = load float, ptr %updmrg, align 8, !tbaa !423
  %call68 = call noundef zeroext i1 @_ZN6btDbvt6updateEP10btDbvtNodeR12btDbvtAabbMmRK9btVector3f(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt.i, ptr noundef %69, ptr noundef nonnull align 4 dereferenceable(32) %vol, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp60, float noundef %76)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp60) #38
  %indvars.iv.next390 = add nuw nsw i64 %indvars.iv389, 1
  %exitcond393.not = icmp eq i64 %indvars.iv.next390, %wide.trip.count392
  br i1 %exitcond393.not, label %for.end71, label %for.body52

for.end71:                                        ; preds = %for.body52, %_ZN10btSoftBody12updateBoundsEv.exit
  %m_fdbvt72 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 22
  %77 = load ptr, ptr %m_fdbvt72, align 8, !tbaa !413
  %cmp.i = icmp eq ptr %77, null
  br i1 %cmp.i, label %if.end114, label %for.cond76.preheader

for.cond76.preheader:                             ; preds = %for.end71
  %m_size.i243 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %78 = load i32, ptr %m_size.i243, align 4, !tbaa !96
  %cmp78384 = icmp sgt i32 %78, 0
  br i1 %cmp78384, label %for.body79.lr.ph, label %if.end114

for.body79.lr.ph:                                 ; preds = %for.cond76.preheader
  %m_data.i244 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %ref.tmp98.sroa.12.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 8
  %ref.tmp98.sroa.15.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 12
  %ref.tmp98.sroa.18.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 16
  %ref.tmp98.sroa.25.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 24
  %ref.tmp98.sroa.28.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 28
  %79 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp103, i64 0, i32 1
  br label %for.body79

for.body79:                                       ; preds = %for.body79.lr.ph, %for.body79
  %indvars.iv394 = phi i64 [ 0, %for.body79.lr.ph ], [ %indvars.iv.next395, %for.body79 ]
  %80 = load ptr, ptr %m_data.i244, align 8, !tbaa !95
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %80, i64 %indvars.iv394, i32 1
  %81 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_v84 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %81, i64 0, i32 3
  %arrayidx86 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %80, i64 %indvars.iv394, i32 1, i64 1
  %82 = load ptr, ptr %arrayidx86, align 8, !tbaa !219
  %m_v87 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %82, i64 0, i32 3
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %81, i64 0, i32 3, i32 0, i64 2
  %83 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %82, i64 0, i32 3, i32 0, i64 2
  %84 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %add14.i = fadd float %83, %84
  %arrayidx91 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %80, i64 %indvars.iv394, i32 1, i64 2
  %85 = load ptr, ptr %arrayidx91, align 8, !tbaa !219
  %m_v92 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %85, i64 0, i32 3
  %arrayidx13.i261 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %85, i64 0, i32 3, i32 0, i64 2
  %86 = load float, ptr %arrayidx13.i261, align 4, !tbaa !137
  %add14.i262 = fadd float %add14.i, %86
  %mul8.i.i = fmul float %add14.i262, 0x3FD5555560000000
  %87 = load float, ptr %radmrg, align 4, !tbaa !386
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %81, i64 0, i32 1
  %m_x3.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %82, i64 0, i32 1
  %m_x7.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %85, i64 0, i32 1
  %ref.tmp98.sroa.25.16.m_x.i.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %81, i64 0, i32 1, i32 0, i64 2
  %ref.tmp98.sroa.25.16.copyload = load float, ptr %ref.tmp98.sroa.25.16.m_x.i.sroa_idx, align 4
  %ref.tmp98.sroa.28.16.m_x.i.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %81, i64 0, i32 1, i32 0, i64 3
  %ref.tmp98.sroa.28.16.copyload = load float, ptr %ref.tmp98.sroa.28.16.m_x.i.sroa_idx, align 4
  %arrayidx11.i.i.i271 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %82, i64 0, i32 1, i32 0, i64 2
  %88 = load float, ptr %arrayidx11.i.i.i271, align 4, !tbaa !137, !noalias !429
  %cmp.i20.i.i.i = fcmp olt float %88, %ref.tmp98.sroa.25.16.copyload
  %89 = select i1 %cmp.i20.i.i.i, float %88, float %ref.tmp98.sroa.25.16.copyload
  %arrayidx.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %82, i64 0, i32 1, i32 0, i64 3
  %90 = load float, ptr %arrayidx.i.i.i.i, align 4, !tbaa !137, !noalias !429
  %cmp.i23.i.i.i = fcmp olt float %90, %ref.tmp98.sroa.28.16.copyload
  %ref.tmp98.sroa.15.0 = select i1 %cmp.i23.i.i.i, float %90, float %ref.tmp98.sroa.28.16.copyload
  %cmp.i20.i19.i.i = fcmp olt float %ref.tmp98.sroa.25.16.copyload, %88
  %91 = select i1 %cmp.i20.i19.i.i, float %88, float %ref.tmp98.sroa.25.16.copyload
  %cmp.i23.i23.i.i = fcmp olt float %ref.tmp98.sroa.28.16.copyload, %90
  %ref.tmp98.sroa.28.0 = select i1 %cmp.i23.i23.i.i, float %90, float %ref.tmp98.sroa.28.16.copyload
  %arrayidx11.i.i.1.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %85, i64 0, i32 1, i32 0, i64 2
  %92 = load float, ptr %arrayidx11.i.i.1.i, align 4, !tbaa !137, !noalias !429
  %arrayidx.i.i.i.1.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %85, i64 0, i32 1, i32 0, i64 3
  %93 = load float, ptr %arrayidx.i.i.i.1.i, align 4, !tbaa !137, !noalias !429
  %cmp.i23.i.i.1.i = fcmp olt float %93, %ref.tmp98.sroa.15.0
  %ref.tmp98.sroa.15.1 = select i1 %cmp.i23.i.i.1.i, float %93, float %ref.tmp98.sroa.15.0
  %cmp.i23.i23.i.1.i = fcmp olt float %ref.tmp98.sroa.28.0, %93
  %ref.tmp98.sroa.28.1 = select i1 %cmp.i23.i23.i.1.i, float %93, float %ref.tmp98.sroa.28.0
  %cmp.i20.i19.i.1.i = fcmp olt float %91, %92
  %94 = select i1 %cmp.i20.i19.i.1.i, float %92, float %91
  %cmp.i20.i.i.1.i = fcmp olt float %92, %89
  %95 = select i1 %cmp.i20.i.i.1.i, float %92, float %89
  %sub13.i.i.i = fsub float %95, %87
  %add13.i.i.i276 = fadd float %87, %94
  %96 = load <2 x float>, ptr %m_x.i, align 4
  %97 = load <2 x float>, ptr %m_x3.i, align 4, !tbaa !137, !noalias !429
  %98 = fcmp olt <2 x float> %97, %96
  %99 = select <2 x i1> %98, <2 x float> %97, <2 x float> %96
  %100 = load <2 x float>, ptr %m_x7.i, align 4, !tbaa !137, !noalias !429
  %101 = fcmp olt <2 x float> %100, %99
  %102 = select <2 x i1> %101, <2 x float> %100, <2 x float> %99
  %103 = insertelement <2 x float> poison, float %87, i64 0
  %104 = shufflevector <2 x float> %103, <2 x float> poison, <2 x i32> zeroinitializer
  %105 = fsub <2 x float> %102, %104
  store <2 x float> %105, ptr %vol, align 8
  store float %sub13.i.i.i, ptr %ref.tmp98.sroa.12.0.vol.sroa_idx, align 8, !tbaa.struct !298
  store float %ref.tmp98.sroa.15.1, ptr %ref.tmp98.sroa.15.0.vol.sroa_idx, align 4, !tbaa.struct !434
  %106 = fcmp olt <2 x float> %96, %97
  %107 = select <2 x i1> %106, <2 x float> %97, <2 x float> %96
  %108 = fcmp olt <2 x float> %107, %100
  %109 = select <2 x i1> %108, <2 x float> %100, <2 x float> %107
  %110 = fadd <2 x float> %104, %109
  store <2 x float> %110, ptr %ref.tmp98.sroa.18.0.vol.sroa_idx, align 8
  store float %add13.i.i.i276, ptr %ref.tmp98.sroa.25.0.vol.sroa_idx, align 8, !tbaa.struct !165
  store float %ref.tmp98.sroa.28.1, ptr %ref.tmp98.sroa.28.0.vol.sroa_idx, align 4, !tbaa.struct !318
  %m_leaf102 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %80, i64 %indvars.iv394, i32 4
  %111 = load ptr, ptr %m_leaf102, align 8, !tbaa !232
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp103) #38
  %112 = load float, ptr %velmrg, align 8, !tbaa !137
  %113 = load <2 x float>, ptr %m_v84, align 4, !tbaa !137
  %114 = load <2 x float>, ptr %m_v87, align 4, !tbaa !137
  %115 = fadd <2 x float> %113, %114
  %116 = load <2 x float>, ptr %m_v92, align 4, !tbaa !137
  %117 = fadd <2 x float> %115, %116
  %118 = fmul <2 x float> %117, <float 0x3FD5555560000000, float 0x3FD5555560000000>
  %119 = insertelement <2 x float> poison, float %112, i64 0
  %120 = shufflevector <2 x float> %119, <2 x float> poison, <2 x i32> zeroinitializer
  %121 = fmul <2 x float> %118, %120
  %mul8.i281 = fmul float %mul8.i.i, %112
  %retval.sroa.3.12.vec.insert.i284 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i281, i64 0
  store <2 x float> %121, ptr %ref.tmp103, align 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i284, ptr %79, align 8
  %122 = load float, ptr %updmrg, align 8, !tbaa !423
  %call110 = call noundef zeroext i1 @_ZN6btDbvt6updateEP10btDbvtNodeR12btDbvtAabbMmRK9btVector3f(ptr noundef nonnull align 8 dereferenceable(64) %m_fdbvt72, ptr noundef %111, ptr noundef nonnull align 4 dereferenceable(32) %vol, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp103, float noundef %122)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp103) #38
  %indvars.iv.next395 = add nuw nsw i64 %indvars.iv394, 1
  %123 = load i32, ptr %m_size.i243, align 4, !tbaa !96
  %124 = sext i32 %123 to i64
  %cmp78 = icmp slt i64 %indvars.iv.next395, %124
  br i1 %cmp78, label %for.body79, label %if.end114

if.end114:                                        ; preds = %for.body79, %for.cond76.preheader, %for.end71
  call void @_ZN10btSoftBody10updatePoseEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  %m_bframe = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 1
  %125 = load i8, ptr %m_bframe, align 1, !tbaa !143, !range !159, !noundef !192
  %tobool115.not = icmp eq i8 %125, 0
  br i1 %tobool115.not, label %if.end153, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end114
  %kMT = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 8
  %126 = load float, ptr %kMT, align 8, !tbaa !435
  %cmp117 = fcmp ogt float %126, 0.000000e+00
  br i1 %cmp117, label %if.then118, label %if.end153

if.then118:                                       ; preds = %land.lhs.true
  %arrayidx10.i288 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 2
  %posetrs.sroa.10374.32.copyload = load float, ptr %arrayidx10.i288, align 8, !tbaa.struct !163
  %posetrs.sroa.12.32.arrayidx10.i288.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 2, i32 0, i64 1
  %posetrs.sroa.12.32.copyload = load float, ptr %posetrs.sroa.12.32.arrayidx10.i288.sroa_idx, align 4, !tbaa.struct !293
  %posetrs.sroa.13.32.arrayidx10.i288.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 2, i32 0, i64 2
  %posetrs.sroa.13.32.copyload = load float, ptr %posetrs.sroa.13.32.arrayidx10.i288.sroa_idx, align 8, !tbaa.struct !165
  %127 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  %cmp125386 = icmp sgt i32 %127, 0
  br i1 %cmp125386, label %for.body127.lr.ph, label %if.end153

for.body127.lr.ph:                                ; preds = %if.then118
  %posetrs.sroa.9.16.arrayidx6.i287.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 1, i32 0, i64 2
  %posetrs.sroa.9.16.copyload = load float, ptr %posetrs.sroa.9.16.arrayidx6.i287.sroa_idx, align 8, !tbaa.struct !165
  %posetrs.sroa.8.16.arrayidx6.i287.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 1, i32 0, i64 1
  %posetrs.sroa.8.16.copyload = load float, ptr %posetrs.sroa.8.16.arrayidx6.i287.sroa_idx, align 4, !tbaa.struct !293
  %arrayidx6.i287 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 1
  %posetrs.sroa.6373.16.copyload = load float, ptr %arrayidx6.i287, align 8, !tbaa.struct !163
  %posetrs.sroa.5.0.m_rot.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 0, i32 0, i64 2
  %128 = load <4 x float>, ptr %posetrs.sroa.5.0.m_rot.sroa_idx, align 8
  %129 = shufflevector <4 x float> %128, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %posetrs.sroa.4.0.m_rot.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 0, i32 0, i64 1
  %130 = load <4 x float>, ptr %posetrs.sroa.4.0.m_rot.sroa_idx, align 4
  %131 = shufflevector <4 x float> %130, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %m_rot = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6
  %132 = load <4 x float>, ptr %m_rot, align 8
  %133 = shufflevector <4 x float> %132, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %m_data.i291 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %m_data.i294 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 5
  %m_com = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 5
  %arrayidx13.i309 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 5, i32 0, i64 2
  %wide.trip.count400 = zext i32 %127 to i64
  %134 = insertelement <2 x float> %129, float %posetrs.sroa.9.16.copyload, i64 1
  %135 = insertelement <2 x float> %133, float %posetrs.sroa.6373.16.copyload, i64 1
  %136 = insertelement <2 x float> %131, float %posetrs.sroa.8.16.copyload, i64 1
  br label %for.body127

for.body127:                                      ; preds = %for.body127.lr.ph, %if.end149
  %indvars.iv397 = phi i64 [ 0, %for.body127.lr.ph ], [ %indvars.iv.next398, %if.end149 ]
  %137 = load ptr, ptr %m_data.i291, align 8, !tbaa !87
  %m_im131 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %137, i64 %indvars.iv397, i32 6
  %138 = load float, ptr %m_im131, align 8, !tbaa !175
  %cmp132 = fcmp ogt float %138, 0.000000e+00
  br i1 %cmp132, label %if.then133, label %if.end149

if.then133:                                       ; preds = %for.body127
  %139 = load ptr, ptr %m_data.i294, align 8, !tbaa !33
  %arrayidx.i296 = getelementptr inbounds %class.btVector3, ptr %139, i64 %indvars.iv397
  %140 = load float, ptr %arrayidx.i296, align 4, !tbaa !137
  %arrayidx7.i.i297 = getelementptr inbounds [4 x float], ptr %arrayidx.i296, i64 0, i64 1
  %141 = load float, ptr %arrayidx7.i.i297, align 4, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds [4 x float], ptr %arrayidx.i296, i64 0, i64 2
  %142 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %mul8.i20.i = fmul float %posetrs.sroa.12.32.copyload, %141
  %143 = call float @llvm.fmuladd.f32(float %posetrs.sroa.10374.32.copyload, float %140, float %mul8.i20.i)
  %144 = call float @llvm.fmuladd.f32(float %posetrs.sroa.13.32.copyload, float %142, float %143)
  %145 = load float, ptr %arrayidx13.i309, align 8, !tbaa !137
  %add14.i310 = fadd float %144, %145
  %m_x143 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %137, i64 %indvars.iv397, i32 1
  %146 = load float, ptr %kMT, align 8, !tbaa !435
  %arrayidx13.i.i = getelementptr inbounds [4 x float], ptr %m_x143, i64 0, i64 2
  %147 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %sub14.i.i321 = fsub float %add14.i310, %147
  %mul8.i.i324 = fmul float %146, %sub14.i.i321
  %148 = insertelement <2 x float> poison, float %141, i64 0
  %149 = shufflevector <2 x float> %148, <2 x float> poison, <2 x i32> zeroinitializer
  %150 = fmul <2 x float> %136, %149
  %151 = insertelement <2 x float> poison, float %140, i64 0
  %152 = shufflevector <2 x float> %151, <2 x float> poison, <2 x i32> zeroinitializer
  %153 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %135, <2 x float> %152, <2 x float> %150)
  %154 = insertelement <2 x float> poison, float %142, i64 0
  %155 = shufflevector <2 x float> %154, <2 x float> poison, <2 x i32> zeroinitializer
  %156 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %134, <2 x float> %155, <2 x float> %153)
  %157 = load <2 x float>, ptr %m_com, align 8, !tbaa !137
  %158 = fadd <2 x float> %157, %156
  %159 = load <2 x float>, ptr %m_x143, align 4, !tbaa !137
  %160 = fsub <2 x float> %158, %159
  %161 = insertelement <2 x float> poison, float %146, i64 0
  %162 = shufflevector <2 x float> %161, <2 x float> poison, <2 x i32> zeroinitializer
  %163 = fmul <2 x float> %162, %160
  %164 = fadd <2 x float> %159, %163
  %add14.i.i327 = fadd float %147, %mul8.i.i324
  %retval.sroa.3.12.vec.insert.i20.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i327, i64 0
  store <2 x float> %164, ptr %m_x143, align 8, !tbaa.struct !163
  %ref.tmp142.sroa.4.0.m_x148.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %137, i64 %indvars.iv397, i32 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i20.i, ptr %ref.tmp142.sroa.4.0.m_x148.sroa_idx, align 8, !tbaa.struct !165
  br label %if.end149

if.end149:                                        ; preds = %if.then133, %for.body127
  %indvars.iv.next398 = add nuw nsw i64 %indvars.iv397, 1
  %exitcond401.not = icmp eq i64 %indvars.iv.next398, %wide.trip.count400
  br i1 %exitcond401.not, label %if.end153, label %for.body127

if.end153:                                        ; preds = %if.end149, %if.then118, %land.lhs.true, %if.end114
  call void @llvm.lifetime.start.p0(i64 120, ptr nonnull %ref.tmp154)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %ref.tmp154, i8 0, i64 120, i1 false)
  %m_size.i.i328 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 2
  %165 = load i32, ptr %m_size.i.i328, align 4, !tbaa !108
  %cmp4.i330 = icmp slt i32 %165, 0
  br i1 %cmp4.i330, label %if.then5.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE6resizeEiRKS1_.exit

if.then5.i:                                       ; preds = %if.end153
  %m_capacity.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 3
  %166 = load i32, ptr %m_capacity.i.i.i, align 8, !tbaa !109
  %cmp.i.i332 = icmp slt i32 %166, 0
  br i1 %cmp.i.i332, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8RContactEE4copyEiiPS1_.exit.i.i, label %for.body10.lr.ph.i

_ZNK20btAlignedObjectArrayIN10btSoftBody8RContactEE4copyEiiPS1_.exit.i.i: ; preds = %if.then5.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 5
  %167 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !107
  %tobool.not.i10.i.i = icmp eq ptr %167, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 6
  %168 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %168, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %if.end.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody8RContactEE4copyEiiPS1_.exit.i.i
  call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %167)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody8RContactEE4copyEiiPS1_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !106
  store ptr null, ptr %m_data.i9.i.i, align 8, !tbaa !107
  store i32 0, ptr %m_capacity.i.i.i, align 8, !tbaa !109
  br label %for.body10.lr.ph.i

for.body10.lr.ph.i:                               ; preds = %if.end.i, %if.then5.i
  %m_data11.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 5
  %m_c03.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %ref.tmp154, i64 0, i32 2
  %arrayidx6.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %ref.tmp154, i64 0, i32 2, i32 0, i64 1
  %arrayidx10.i.i.i335 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %ref.tmp154, i64 0, i32 2, i32 0, i64 2
  %m_c14.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %ref.tmp154, i64 0, i32 3
  %169 = sext i32 %165 to i64
  br label %for.body10.i

for.body10.i:                                     ; preds = %for.body10.i, %for.body10.lr.ph.i
  %indvars.iv.i336 = phi i64 [ %169, %for.body10.lr.ph.i ], [ %indvars.iv.next.i339, %for.body10.i ]
  %170 = load ptr, ptr %m_data11.i, align 8, !tbaa !107
  %arrayidx13.i337 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %170, i64 %indvars.iv.i336
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %arrayidx13.i337, i8 0, i64 40, i1 false)
  %m_c0.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %170, i64 %indvars.iv.i336, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_c0.i.i, ptr noundef nonnull align 8 dereferenceable(16) %m_c03.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx8.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %170, i64 %indvars.iv.i336, i32 2, i32 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx8.i.i.i, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx6.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx12.i.i.i338 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %170, i64 %indvars.iv.i336, i32 2, i32 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx12.i.i.i338, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx10.i.i.i335, i64 16, i1 false), !tbaa.struct !163
  %m_c1.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %170, i64 %indvars.iv.i336, i32 3
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %m_c1.i.i, ptr noundef nonnull align 8 dereferenceable(28) %m_c14.i.i, i64 28, i1 false)
  %indvars.iv.next.i339 = add nsw i64 %indvars.iv.i336, 1
  %exitcond.not.i340 = icmp eq i64 %indvars.iv.next.i339, 0
  br i1 %exitcond.not.i340, label %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE6resizeEiRKS1_.exit, label %for.body10.i

_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE6resizeEiRKS1_.exit: ; preds = %for.body10.i, %if.end153
  store i32 0, ptr %m_size.i.i328, align 4, !tbaa !108
  call void @llvm.lifetime.end.p0(i64 120, ptr nonnull %ref.tmp154)
  %m_size.i.i341 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 2
  %171 = load i32, ptr %m_size.i.i341, align 4, !tbaa !112
  %cmp4.i343 = icmp slt i32 %171, 0
  br i1 %cmp4.i343, label %if.then5.i347, label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE6resizeEiRKS1_.exit

if.then5.i347:                                    ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE6resizeEiRKS1_.exit
  %m_capacity.i.i.i345 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 3
  %172 = load i32, ptr %m_capacity.i.i.i345, align 8, !tbaa !113
  %cmp.i.i346 = icmp slt i32 %172, 0
  br i1 %cmp.i.i346, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i, label %for.body10.lr.ph.i367

_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i: ; preds = %if.then5.i347
  %m_data.i9.i.i359 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 5
  %173 = load ptr, ptr %m_data.i9.i.i359, align 8, !tbaa !111
  %tobool.not.i10.i.i360 = icmp eq ptr %173, null
  %m_ownsMemory.i.i.i361 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 6
  %174 = load i8, ptr %m_ownsMemory.i.i.i361, align 8, !range !159
  %tobool2.not.i.i.i362 = icmp eq i8 %174, 0
  %or.cond.i.i363 = select i1 %tobool.not.i10.i.i360, i1 true, i1 %tobool2.not.i.i.i362
  br i1 %or.cond.i.i363, label %if.end.i365, label %if.then3.i.i.i364

if.then3.i.i.i364:                                ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i
  call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %173)
  br label %if.end.i365

if.end.i365:                                      ; preds = %if.then3.i.i.i364, %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i361, align 8, !tbaa !110
  store ptr null, ptr %m_data.i9.i.i359, align 8, !tbaa !111
  store i32 0, ptr %m_capacity.i.i.i345, align 8, !tbaa !113
  br label %for.body10.lr.ph.i367

for.body10.lr.ph.i367:                            ; preds = %if.end.i365, %if.then5.i347
  %m_data11.i366 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 5
  %175 = sext i32 %171 to i64
  %176 = sub nsw i64 0, %175
  %xtraiter = and i64 %176, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body10.i372.prol.loopexit, label %for.body10.i372.prol

for.body10.i372.prol:                             ; preds = %for.body10.lr.ph.i367, %for.body10.i372.prol
  %indvars.iv.i368.prol = phi i64 [ %indvars.iv.next.i370.prol, %for.body10.i372.prol ], [ %175, %for.body10.lr.ph.i367 ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body10.i372.prol ], [ 0, %for.body10.lr.ph.i367 ]
  %177 = load ptr, ptr %m_data11.i366, align 8, !tbaa !111
  %arrayidx13.i369.prol = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %177, i64 %indvars.iv.i368.prol
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %arrayidx13.i369.prol, i8 0, i64 64, i1 false)
  %indvars.iv.next.i370.prol = add nsw i64 %indvars.iv.i368.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body10.i372.prol.loopexit, label %for.body10.i372.prol, !llvm.loop !436

for.body10.i372.prol.loopexit:                    ; preds = %for.body10.i372.prol, %for.body10.lr.ph.i367
  %indvars.iv.i368.unr = phi i64 [ %175, %for.body10.lr.ph.i367 ], [ %indvars.iv.next.i370.prol, %for.body10.i372.prol ]
  %178 = icmp ugt i32 %171, -4
  br i1 %178, label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE6resizeEiRKS1_.exit, label %for.body10.i372

for.body10.i372:                                  ; preds = %for.body10.i372.prol.loopexit, %for.body10.i372
  %indvars.iv.i368 = phi i64 [ %indvars.iv.next.i370.3, %for.body10.i372 ], [ %indvars.iv.i368.unr, %for.body10.i372.prol.loopexit ]
  %179 = load ptr, ptr %m_data11.i366, align 8, !tbaa !111
  %arrayidx13.i369 = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %179, i64 %indvars.iv.i368
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %arrayidx13.i369, i8 0, i64 64, i1 false)
  %indvars.iv.next.i370 = add nsw i64 %indvars.iv.i368, 1
  %180 = load ptr, ptr %m_data11.i366, align 8, !tbaa !111
  %arrayidx13.i369.1 = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %180, i64 %indvars.iv.next.i370
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %arrayidx13.i369.1, i8 0, i64 64, i1 false)
  %indvars.iv.next.i370.1 = add nsw i64 %indvars.iv.i368, 2
  %181 = load ptr, ptr %m_data11.i366, align 8, !tbaa !111
  %arrayidx13.i369.2 = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %181, i64 %indvars.iv.next.i370.1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %arrayidx13.i369.2, i8 0, i64 64, i1 false)
  %indvars.iv.next.i370.2 = add nsw i64 %indvars.iv.i368, 3
  %182 = load ptr, ptr %m_data11.i366, align 8, !tbaa !111
  %arrayidx13.i369.3 = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %182, i64 %indvars.iv.next.i370.2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %arrayidx13.i369.3, i8 0, i64 64, i1 false)
  %indvars.iv.next.i370.3 = add nsw i64 %indvars.iv.i368, 4
  %exitcond.not.i371.3 = icmp eq i64 %indvars.iv.next.i370.3, 0
  br i1 %exitcond.not.i371.3, label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE6resizeEiRKS1_.exit, label %for.body10.i372

_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE6resizeEiRKS1_.exit: ; preds = %for.body10.i372.prol.loopexit, %for.body10.i372, %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE6resizeEiRKS1_.exit
  store i32 0, ptr %m_size.i.i341, align 4, !tbaa !112
  call void @_ZN6btDbvt19optimizeIncrementalEi(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt.i, i32 noundef 1)
  call void @_ZN6btDbvt19optimizeIncrementalEi(ptr noundef nonnull align 8 dereferenceable(64) %m_fdbvt72, i32 noundef 1)
  %m_cdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  call void @_ZN6btDbvt19optimizeIncrementalEi(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt, i32 noundef 1)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %vol) #38
  ret void
}

declare void @_ZN6btDbvt5clearEv(ptr noundef nonnull align 8 dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody11applyForcesEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZN15CProfileManager13Start_ProfileEPKc(ptr noundef nonnull @.str.2)
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3
  %0 = load float, ptr %m_sst, align 8, !tbaa !420
  %m_cfg = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2
  %kDG4 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 3
  %1 = load <2 x float>, ptr %kDG4, align 4, !tbaa !137
  %kPR6 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 5
  %2 = load float, ptr %kPR6, align 4, !tbaa !437
  %kVC8 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 6
  %3 = load float, ptr %kVC8, align 8, !tbaa !438
  %4 = extractelement <2 x float> %1, i64 1
  %cmp = fcmp ogt float %4, 0.000000e+00
  %5 = extractelement <2 x float> %1, i64 0
  %cmp9 = fcmp ogt float %5, 0.000000e+00
  %cmp11 = fcmp une float %2, 0.000000e+00
  %cmp13 = fcmp ogt float %3, 0.000000e+00
  %6 = select i1 %cmp, i1 true, i1 %cmp9
  br i1 %6, label %land.rhs22, label %invoke.cont

land.rhs22:                                       ; preds = %entry
  %7 = load i32, ptr %m_cfg, align 8, !tbaa !135
  %cmp19 = icmp slt i32 %7, 3
  %cmp25 = icmp sgt i32 %7, 2
  br label %invoke.cont

invoke.cont:                                      ; preds = %land.rhs22, %entry
  %8 = phi i1 [ %cmp19, %land.rhs22 ], [ false, %entry ]
  %9 = phi i1 [ %cmp25, %land.rhs22 ], [ false, %entry ]
  %10 = select i1 %cmp11, i1 true, i1 %cmp13
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %11 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  br i1 %10, label %if.then, label %if.end

if.then:                                          ; preds = %invoke.cont
  %cmp.i = icmp sgt i32 %11, 0
  br i1 %cmp.i, label %if.then.i, label %invoke.cont36

if.then.i:                                        ; preds = %if.then
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %12 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1
  %org.sroa.0.0.copyload.i = load float, ptr %m_x.i, align 8, !tbaa.struct !163
  %org.sroa.6.0.m_x.sroa_idx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1, i32 0, i64 1
  %org.sroa.6.0.copyload.i = load float, ptr %org.sroa.6.0.m_x.sroa_idx.i, align 4, !tbaa.struct !293
  %org.sroa.9.0.m_x.sroa_idx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1, i32 0, i64 2
  %org.sroa.9.0.copyload.i = load float, ptr %org.sroa.9.0.m_x.sroa_idx.i, align 8, !tbaa.struct !165
  %m_size.i32.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %13 = load i32, ptr %m_size.i32.i, align 4, !tbaa !96
  %cmp566.i = icmp sgt i32 %13, 0
  br i1 %cmp566.i, label %for.body.lr.ph.i, label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.then.i
  %m_data.i33.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %14 = load ptr, ptr %m_data.i33.i, align 8, !tbaa !95
  %wide.trip.count.i = zext i32 %13 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %vol.068.i = phi float [ 0.000000e+00, %for.body.lr.ph.i ], [ %add.i, %for.body.i ]
  %m_n.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %14, i64 %indvars.iv.i, i32 1
  %15 = load ptr, ptr %m_n.i, align 8, !tbaa !219
  %m_x8.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %15, i64 0, i32 1
  %16 = load float, ptr %m_x8.i, align 4, !tbaa !137
  %sub.i.i = fsub float %16, %org.sroa.0.0.copyload.i
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %15, i64 0, i32 1, i32 0, i64 1
  %17 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %sub8.i.i = fsub float %17, %org.sroa.6.0.copyload.i
  %arrayidx11.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %15, i64 0, i32 1, i32 0, i64 2
  %18 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %18, %org.sroa.9.0.copyload.i
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %14, i64 %indvars.iv.i, i32 1, i64 1
  %19 = load ptr, ptr %arrayidx13.i, align 8, !tbaa !219
  %m_x14.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 0, i32 1
  %20 = load float, ptr %m_x14.i, align 4, !tbaa !137
  %sub.i34.i = fsub float %20, %org.sroa.0.0.copyload.i
  %arrayidx5.i35.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 0, i32 1, i32 0, i64 1
  %21 = load float, ptr %arrayidx5.i35.i, align 4, !tbaa !137
  %sub8.i37.i = fsub float %21, %org.sroa.6.0.copyload.i
  %arrayidx11.i38.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 0, i32 1, i32 0, i64 2
  %22 = load float, ptr %arrayidx11.i38.i, align 4, !tbaa !137
  %sub14.i40.i = fsub float %22, %org.sroa.9.0.copyload.i
  %arrayidx19.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %14, i64 %indvars.iv.i, i32 1, i64 2
  %23 = load ptr, ptr %arrayidx19.i, align 8, !tbaa !219
  %m_x20.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %23, i64 0, i32 1
  %24 = load float, ptr %m_x20.i, align 4, !tbaa !137
  %sub.i46.i = fsub float %24, %org.sroa.0.0.copyload.i
  %arrayidx5.i47.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %23, i64 0, i32 1, i32 0, i64 1
  %25 = load float, ptr %arrayidx5.i47.i, align 4, !tbaa !137
  %sub8.i49.i = fsub float %25, %org.sroa.6.0.copyload.i
  %arrayidx11.i50.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %23, i64 0, i32 1, i32 0, i64 2
  %26 = load float, ptr %arrayidx11.i50.i, align 4, !tbaa !137
  %sub14.i52.i = fsub float %26, %org.sroa.9.0.copyload.i
  %27 = fneg float %sub14.i40.i
  %neg.i.i.i = fmul float %sub8.i49.i, %27
  %28 = tail call float @llvm.fmuladd.f32(float %sub8.i37.i, float %sub14.i52.i, float %neg.i.i.i)
  %29 = fneg float %sub.i34.i
  %neg19.i.i.i = fmul float %sub14.i52.i, %29
  %30 = tail call float @llvm.fmuladd.f32(float %sub14.i40.i, float %sub.i46.i, float %neg19.i.i.i)
  %31 = fneg float %sub8.i37.i
  %neg30.i.i.i = fmul float %sub.i46.i, %31
  %32 = tail call float @llvm.fmuladd.f32(float %sub.i34.i, float %sub8.i49.i, float %neg30.i.i.i)
  %mul8.i.i.i = fmul float %sub8.i.i, %30
  %33 = tail call float @llvm.fmuladd.f32(float %sub.i.i, float %28, float %mul8.i.i.i)
  %34 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %32, float %33)
  %add.i = fadd float %vol.068.i, %34
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i, %if.then.i
  %vol.0.lcssa.i = phi float [ 0.000000e+00, %if.then.i ], [ %add.i, %for.body.i ]
  %div.i = fdiv float %vol.0.lcssa.i, 6.000000e+00
  br label %invoke.cont36

invoke.cont36:                                    ; preds = %for.end.i, %if.then
  %vol.1.i = phi float [ %div.i, %for.end.i ], [ 0.000000e+00, %if.then ]
  %35 = tail call float @llvm.fabs.f32(float %vol.1.i)
  %div = fdiv float 1.000000e+00, %35
  %mul = fmul float %2, %div
  %m_volume = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 2
  %36 = load float, ptr %m_volume, align 4, !tbaa !144
  %sub = fsub float %36, %vol.1.i
  %mul39 = fmul float %3, %sub
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %invoke.cont36
  %dvolumetv.0 = phi float [ %mul39, %invoke.cont36 ], [ 0.000000e+00, %invoke.cont ]
  %ivolumetp.0 = phi float [ %mul, %invoke.cont36 ], [ 0.000000e+00, %invoke.cont ]
  %cmp43865 = icmp sgt i32 %11, 0
  br i1 %cmp43865, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %37 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_worldInfo = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 7
  %38 = load ptr, ptr %m_worldInfo, align 8
  %water_density.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %38, i64 0, i32 1
  %water_normal.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %38, i64 0, i32 3
  %arrayidx7.i.i.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %38, i64 0, i32 3, i32 0, i64 1
  %arrayidx12.i.i.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %38, i64 0, i32 3, i32 0, i64 2
  %water_offset.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %38, i64 0, i32 2
  %39 = load i32, ptr %m_cfg, align 8
  %wide.trip.count = zext i32 %11 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end162
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end162 ]
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 6
  %40 = load float, ptr %m_im, align 8, !tbaa !175
  %cmp48 = fcmp ogt float %40, 0.000000e+00
  br i1 %cmp48, label %if.then49, label %if.end162

if.then49:                                        ; preds = %for.body
  br i1 %6, label %if.then51, label %if.end128

if.then51:                                        ; preds = %if.then49
  %41 = load float, ptr %38, align 8, !tbaa !439
  %42 = load float, ptr %water_density.i, align 4, !tbaa !440
  %cmp.i429 = fcmp ogt float %42, 0.000000e+00
  br i1 %cmp.i429, label %if.then.i432, label %invoke.cont52

if.then.i432:                                     ; preds = %if.then51
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 1
  %43 = load float, ptr %m_x, align 4, !tbaa !137
  %44 = load float, ptr %water_normal.i, align 4, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 1
  %45 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %46 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %mul8.i.i.i430 = fmul float %45, %46
  %47 = tail call float @llvm.fmuladd.f32(float %43, float %44, float %mul8.i.i.i430)
  %arrayidx10.i.i.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %48 = load float, ptr %arrayidx10.i.i.i, align 4, !tbaa !137
  %49 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %50 = tail call float @llvm.fmuladd.f32(float %48, float %49, float %47)
  %51 = load float, ptr %water_offset.i, align 8, !tbaa !441
  %add.i431 = fadd float %50, %51
  %cmp4.i = fcmp olt float %add.i431, 0.000000e+00
  br i1 %cmp4.i, label %if.then5.i, label %invoke.cont52

if.then5.i:                                       ; preds = %if.then.i432
  br label %invoke.cont52

invoke.cont52:                                    ; preds = %if.then5.i, %if.then.i432, %if.then51
  %medium.sroa.13.0 = phi float [ %42, %if.then5.i ], [ %41, %if.then.i432 ], [ %41, %if.then51 ]
  br i1 %8, label %invoke.cont56, label %if.end128

invoke.cont56:                                    ; preds = %invoke.cont52
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 3
  %52 = load <2 x float>, ptr %m_v, align 4, !tbaa !137
  %arrayidx11.i = getelementptr inbounds [4 x float], ptr %m_v, i64 0, i64 2
  %53 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %54 = extractelement <2 x float> %52, i64 1
  %mul8.i.i = fmul float %54, %54
  %55 = extractelement <2 x float> %52, i64 0
  %56 = tail call float @llvm.fmuladd.f32(float %55, float %55, float %mul8.i.i)
  %57 = tail call float @llvm.fmuladd.f32(float %53, float %53, float %56)
  %cmp61 = fcmp ogt float %57, 0x3E80000000000000
  br i1 %cmp61, label %if.then62, label %if.end128

if.then62:                                        ; preds = %invoke.cont56
  %m_n = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 5
  %nrm.sroa.0.0.copyload = load <2 x float>, ptr %m_n, align 8, !tbaa.struct !163
  %nrm.sroa.15.0.m_n.sroa_idx = getelementptr inbounds i8, ptr %m_n, i64 8
  %nrm.sroa.15.0.copyload = load <2 x float>, ptr %nrm.sroa.15.0.m_n.sroa_idx, align 8, !tbaa.struct !165
  switch i32 %39, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb69
  ]

sw.bb:                                            ; preds = %if.then62
  %sqrt.i.i438 = tail call float @llvm.sqrt.f32(float %57)
  %cmp.i439 = fcmp ogt float %sqrt.i.i438, 0x3E80000000000000
  br i1 %cmp.i439, label %if.then.i441, label %sw.epilog

if.then.i441:                                     ; preds = %sw.bb
  %div.i.i = fdiv float 1.000000e+00, %sqrt.i.i438
  %58 = insertelement <2 x float> poison, float %div.i.i, i64 0
  %59 = shufflevector <2 x float> %58, <2 x float> poison, <2 x i32> zeroinitializer
  %60 = fmul <2 x float> %52, %59
  %mul8.i.i.i440 = fmul float %53, %div.i.i
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i.i440, i64 0
  br label %sw.epilog

sw.bb69:                                          ; preds = %if.then62
  %61 = fmul <2 x float> %52, %nrm.sroa.0.0.copyload
  %mul8.i.i445 = extractelement <2 x float> %61, i64 1
  %62 = extractelement <2 x float> %nrm.sroa.0.0.copyload, i64 0
  %63 = tail call float @llvm.fmuladd.f32(float %62, float %55, float %mul8.i.i445)
  %nrm.sroa.15.8.vec.extract = extractelement <2 x float> %nrm.sroa.15.0.copyload, i64 0
  %64 = tail call float @llvm.fmuladd.f32(float %nrm.sroa.15.8.vec.extract, float %53, float %63)
  %cmp74 = fcmp olt float %64, 0.000000e+00
  %conv = select i1 %cmp74, float -1.000000e+00, float 1.000000e+00
  %65 = insertelement <2 x float> poison, float %conv, i64 0
  %66 = shufflevector <2 x float> %65, <2 x float> poison, <2 x i32> zeroinitializer
  %67 = fmul <2 x float> %nrm.sroa.0.0.copyload, %66
  %mul7.i = fmul float %nrm.sroa.15.8.vec.extract, %conv
  %nrm.sroa.15.8.vec.insert = insertelement <2 x float> %nrm.sroa.15.0.copyload, float %mul7.i, i64 0
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb, %if.then.i441, %if.then62, %sw.bb69
  %nrm.sroa.0.0 = phi <2 x float> [ %nrm.sroa.0.0.copyload, %if.then62 ], [ %67, %sw.bb69 ], [ %60, %if.then.i441 ], [ zeroinitializer, %sw.bb ]
  %nrm.sroa.15.0 = phi <2 x float> [ %nrm.sroa.15.0.copyload, %if.then62 ], [ %nrm.sroa.15.8.vec.insert, %sw.bb69 ], [ %retval.sroa.3.12.vec.insert.i.i.i, %if.then.i441 ], [ zeroinitializer, %sw.bb ]
  %68 = fmul <2 x float> %52, %nrm.sroa.0.0
  %mul8.i.i450 = extractelement <2 x float> %68, i64 1
  %69 = extractelement <2 x float> %nrm.sroa.0.0, i64 0
  %70 = tail call float @llvm.fmuladd.f32(float %55, float %69, float %mul8.i.i450)
  %nrm.sroa.15.8.vec.extract829 = extractelement <2 x float> %nrm.sroa.15.0, i64 0
  %71 = tail call float @llvm.fmuladd.f32(float %53, float %nrm.sroa.15.8.vec.extract829, float %70)
  %cmp80 = fcmp ogt float %71, 0.000000e+00
  br i1 %cmp80, label %invoke.cont110, label %if.end128

invoke.cont110:                                   ; preds = %sw.epilog
  %m_area = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 7
  %72 = load float, ptr %m_area, align 4, !tbaa !303
  %mul87 = fmul float %71, %72
  %mul88 = fmul float %57, %mul87
  %73 = fmul float %mul88, -5.000000e-01
  %fneg = fmul float %medium.sroa.13.0, %73
  %sqrt.i.i471 = tail call float @llvm.sqrt.f32(float %57)
  %div.i.i472 = fdiv float 1.000000e+00, %sqrt.i.i471
  %mul8.i.i.i475 = fmul float %53, %div.i.i472
  %74 = insertelement <2 x float> poison, float %fneg, i64 0
  %75 = shufflevector <2 x float> %74, <2 x float> poison, <2 x i32> zeroinitializer
  %76 = fmul <2 x float> %1, %75
  %77 = shufflevector <2 x float> %nrm.sroa.15.0, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %78 = insertelement <2 x float> %77, float %mul8.i.i.i475, i64 0
  %79 = fmul <2 x float> %78, %76
  %80 = extractelement <2 x float> %79, i64 1
  %add13.i = fadd float %80, 0.000000e+00
  %81 = shufflevector <2 x float> %76, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %82 = fmul <2 x float> %nrm.sroa.0.0, %81
  %83 = fadd <2 x float> %82, zeroinitializer
  %84 = insertelement <2 x float> poison, float %div.i.i472, i64 0
  %85 = shufflevector <2 x float> %84, <2 x float> poison, <2 x i32> zeroinitializer
  %86 = fmul <2 x float> %52, %85
  %87 = shufflevector <2 x float> %76, <2 x float> poison, <2 x i32> zeroinitializer
  %88 = fmul <2 x float> %86, %87
  %89 = fadd <2 x float> %88, %83
  %90 = extractelement <2 x float> %79, i64 0
  %add13.i495 = fadd float %90, %add13.i
  %mul.i496 = fmul float %0, %40
  %91 = extractelement <2 x float> %89, i64 0
  %mul.i.i = fmul float %mul.i496, %91
  %92 = extractelement <2 x float> %89, i64 1
  %mul4.i.i = fmul float %mul.i496, %92
  %mul8.i.i498 = fmul float %mul.i496, %add13.i495
  %mul8.i.i.i499 = fmul float %mul4.i.i, %mul4.i.i
  %93 = tail call float @llvm.fmuladd.f32(float %mul.i.i, float %mul.i.i, float %mul8.i.i.i499)
  %94 = tail call float @llvm.fmuladd.f32(float %mul8.i.i498, float %mul8.i.i498, float %93)
  %cmp.i500 = fcmp ogt float %94, %57
  br i1 %cmp.i500, label %if.then.i508, label %if.else.i

if.then.i508:                                     ; preds = %invoke.cont110
  %mul8.i.i.i.i.i = fmul float %92, %92
  %95 = tail call float @llvm.fmuladd.f32(float %91, float %91, float %mul8.i.i.i.i.i)
  %96 = tail call float @llvm.fmuladd.f32(float %add13.i495, float %add13.i495, float %95)
  %sqrt.i.i.i = tail call float @llvm.sqrt.f32(float %96)
  %div.i.i.i = fdiv float 1.000000e+00, %sqrt.i.i.i
  %mul8.i.i.i.i501 = fmul float %add13.i495, %div.i.i.i
  %div.i.i504 = fdiv float 1.000000e+00, %mul.i496
  %m_f.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 4
  %97 = insertelement <2 x float> poison, float %div.i.i.i, i64 0
  %98 = shufflevector <2 x float> %97, <2 x float> poison, <2 x i32> zeroinitializer
  %99 = fmul <2 x float> %89, %98
  %100 = fmul <2 x float> %52, %99
  %mul8.i.i.i25.i = extractelement <2 x float> %100, i64 1
  %101 = extractelement <2 x float> %99, i64 0
  %102 = tail call float @llvm.fmuladd.f32(float %55, float %101, float %mul8.i.i.i25.i)
  %103 = tail call float @llvm.fmuladd.f32(float %53, float %mul8.i.i.i.i501, float %102)
  %104 = insertelement <2 x float> poison, float %103, i64 0
  %105 = shufflevector <2 x float> %104, <2 x float> poison, <2 x i32> zeroinitializer
  %106 = fmul <2 x float> %99, %105
  %mul8.i.i26.i = fmul float %mul8.i.i.i.i501, %103
  %107 = insertelement <2 x float> poison, float %div.i.i504, i64 0
  %108 = shufflevector <2 x float> %107, <2 x float> poison, <2 x i32> zeroinitializer
  %109 = fmul <2 x float> %108, %106
  %mul8.i.i29.i = fmul float %div.i.i504, %mul8.i.i26.i
  %110 = load <2 x float>, ptr %m_f.i, align 8, !tbaa !137
  %111 = fsub <2 x float> %110, %109
  store <2 x float> %111, ptr %m_f.i, align 8, !tbaa !137
  %arrayidx12.i.i507 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 4, i32 0, i64 2
  %112 = load float, ptr %arrayidx12.i.i507, align 8, !tbaa !137
  %sub13.i.i = fsub float %112, %mul8.i.i29.i
  store float %sub13.i.i, ptr %arrayidx12.i.i507, align 8, !tbaa !137
  br label %if.end128

if.else.i:                                        ; preds = %invoke.cont110
  %m_f14.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 4
  %113 = load <2 x float>, ptr %m_f14.i, align 8, !tbaa !137
  %114 = fadd <2 x float> %89, %113
  store <2 x float> %114, ptr %m_f14.i, align 8, !tbaa !137
  %arrayidx12.i39.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 4, i32 0, i64 2
  %115 = load float, ptr %arrayidx12.i39.i, align 8, !tbaa !137
  %add13.i.i = fadd float %add13.i495, %115
  store float %add13.i.i, ptr %arrayidx12.i39.i, align 8, !tbaa !137
  br label %if.end128

if.end128:                                        ; preds = %invoke.cont56, %if.then.i508, %if.else.i, %sw.epilog, %invoke.cont52, %if.then49
  br i1 %cmp11, label %invoke.cont137, label %if.end144

invoke.cont137:                                   ; preds = %if.end128
  %m_n132 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 5
  %m_area134 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 7
  %116 = load float, ptr %m_area134, align 4, !tbaa !303
  %mul135 = fmul float %ivolumetp.0, %116
  %arrayidx7.i512 = getelementptr inbounds [4 x float], ptr %m_n132, i64 0, i64 2
  %117 = load float, ptr %arrayidx7.i512, align 4, !tbaa !137
  %mul8.i513 = fmul float %mul135, %117
  %m_f = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 4
  %118 = load <2 x float>, ptr %m_n132, align 4, !tbaa !137
  %119 = insertelement <2 x float> poison, float %mul135, i64 0
  %120 = shufflevector <2 x float> %119, <2 x float> poison, <2 x i32> zeroinitializer
  %121 = fmul <2 x float> %118, %120
  %122 = load <2 x float>, ptr %m_f, align 4, !tbaa !137
  %123 = fadd <2 x float> %121, %122
  store <2 x float> %123, ptr %m_f, align 4, !tbaa !137
  %arrayidx12.i524 = getelementptr inbounds [4 x float], ptr %m_f, i64 0, i64 2
  %124 = load float, ptr %arrayidx12.i524, align 4, !tbaa !137
  %add13.i525 = fadd float %mul8.i513, %124
  store float %add13.i525, ptr %arrayidx12.i524, align 4, !tbaa !137
  br label %if.end144

if.end144:                                        ; preds = %invoke.cont137, %if.end128
  br i1 %cmp13, label %invoke.cont153, label %if.end162

invoke.cont153:                                   ; preds = %if.end144
  %m_n148 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 5
  %m_area150 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 7
  %125 = load float, ptr %m_area150, align 4, !tbaa !303
  %mul151 = fmul float %dvolumetv.0, %125
  %arrayidx7.i529 = getelementptr inbounds [4 x float], ptr %m_n148, i64 0, i64 2
  %126 = load float, ptr %arrayidx7.i529, align 4, !tbaa !137
  %mul8.i530 = fmul float %mul151, %126
  %m_f156 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 4
  %127 = load <2 x float>, ptr %m_n148, align 4, !tbaa !137
  %128 = insertelement <2 x float> poison, float %mul151, i64 0
  %129 = shufflevector <2 x float> %128, <2 x float> poison, <2 x i32> zeroinitializer
  %130 = fmul <2 x float> %127, %129
  %131 = load <2 x float>, ptr %m_f156, align 4, !tbaa !137
  %132 = fadd <2 x float> %130, %131
  store <2 x float> %132, ptr %m_f156, align 4, !tbaa !137
  %arrayidx12.i541 = getelementptr inbounds [4 x float], ptr %m_f156, i64 0, i64 2
  %133 = load float, ptr %arrayidx12.i541, align 4, !tbaa !137
  %add13.i542 = fadd float %mul8.i530, %133
  store float %add13.i542, ptr %arrayidx12.i541, align 4, !tbaa !137
  br label %if.end162

if.end162:                                        ; preds = %if.end144, %invoke.cont153, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %if.end162, %if.end
  %m_size.i543 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %134 = load i32, ptr %m_size.i543, align 4, !tbaa !96
  %cmp167872 = icmp sgt i32 %134, 0
  br i1 %cmp167872, label %for.body168.lr.ph, label %for.end338

for.body168.lr.ph:                                ; preds = %for.end
  %m_data.i544 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %135 = load ptr, ptr %m_data.i544, align 8, !tbaa !95
  %m_worldInfo226 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 7
  %136 = load ptr, ptr %m_worldInfo226, align 8
  %water_density.i613 = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %136, i64 0, i32 1
  %water_normal.i615 = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %136, i64 0, i32 3
  %arrayidx7.i.i.i617 = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %136, i64 0, i32 3, i32 0, i64 1
  %arrayidx12.i.i.i620 = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %136, i64 0, i32 3, i32 0, i64 2
  %water_offset.i621 = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %136, i64 0, i32 2
  %137 = load i32, ptr %m_cfg, align 8
  %cond363 = icmp eq i32 %137, 3
  br i1 %9, label %for.body168.us.preheader, label %for.end338

for.body168.us.preheader:                         ; preds = %for.body168.lr.ph
  %wide.trip.count883 = zext i32 %134 to i64
  br label %for.body168.us

for.body168.us:                                   ; preds = %for.body168.us.preheader, %if.end334.us
  %indvars.iv880 = phi i64 [ 0, %for.body168.us.preheader ], [ %indvars.iv.next881, %if.end334.us ]
  %m_n177.us = getelementptr inbounds %"struct.btSoftBody::Face", ptr %135, i64 %indvars.iv880, i32 1
  %138 = load ptr, ptr %m_n177.us, align 8, !tbaa !219
  %m_v178.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 3
  %arrayidx180.us = getelementptr inbounds %"struct.btSoftBody::Face", ptr %135, i64 %indvars.iv880, i32 1, i64 1
  %139 = load ptr, ptr %arrayidx180.us, align 8, !tbaa !219
  %m_v181.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %139, i64 0, i32 3
  %140 = load float, ptr %m_v178.us, align 4, !tbaa !137
  %arrayidx5.i548.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 3, i32 0, i64 1
  %141 = load float, ptr %arrayidx5.i548.us, align 4, !tbaa !137
  %arrayidx7.i549.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %139, i64 0, i32 3, i32 0, i64 1
  %142 = load <2 x float>, ptr %m_v181.us, align 4, !tbaa !137
  %arrayidx11.i551.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 3, i32 0, i64 2
  %143 = load float, ptr %arrayidx11.i551.us, align 4, !tbaa !137
  %arrayidx13.i552.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %139, i64 0, i32 3, i32 0, i64 2
  %144 = load float, ptr %arrayidx13.i552.us, align 4, !tbaa !137
  %add14.i.us = fadd float %143, %144
  %arrayidx187.us = getelementptr inbounds %"struct.btSoftBody::Face", ptr %135, i64 %indvars.iv880, i32 1, i64 2
  %145 = load ptr, ptr %arrayidx187.us, align 8, !tbaa !219
  %m_v188.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %145, i64 0, i32 3
  %arrayidx7.i560.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %145, i64 0, i32 3, i32 0, i64 1
  %146 = insertelement <2 x float> poison, float %140, i64 0
  %147 = insertelement <2 x float> %146, float %141, i64 1
  %148 = fadd <2 x float> %147, %142
  %149 = load <2 x float>, ptr %m_v188.us, align 4, !tbaa !137
  %150 = fadd <2 x float> %148, %149
  %arrayidx13.i563.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %145, i64 0, i32 3, i32 0, i64 2
  %151 = load float, ptr %arrayidx13.i563.us, align 4, !tbaa !137
  %add14.i564.us = fadd float %add14.i.us, %151
  %152 = fmul <2 x float> %150, <float 0x3FD5555560000000, float 0x3FD5555560000000>
  %mul8.i.i575.us = fmul float %add14.i564.us, 0x3FD5555560000000
  %153 = load float, ptr %136, align 8, !tbaa !439
  %154 = load float, ptr %water_density.i613, align 4, !tbaa !440
  %cmp.i614.us = fcmp ogt float %154, 0.000000e+00
  br i1 %cmp.i614.us, label %if.then.i624.us, label %invoke.cont232.us

if.then.i624.us:                                  ; preds = %for.body168.us
  %arrayidx11.i580.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 1, i32 0, i64 2
  %155 = load float, ptr %arrayidx11.i580.us, align 4, !tbaa !137
  %arrayidx13.i581.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %139, i64 0, i32 1, i32 0, i64 2
  %156 = load float, ptr %arrayidx13.i581.us, align 4, !tbaa !137
  %add14.i582.us = fadd float %155, %156
  %arrayidx13.i593.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %145, i64 0, i32 1, i32 0, i64 2
  %157 = load float, ptr %arrayidx13.i593.us, align 4, !tbaa !137
  %add14.i594.us = fadd float %add14.i582.us, %157
  %mul8.i.i605.us = fmul float %add14.i594.us, 0x3FD5555560000000
  %arrayidx5.i577.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 1, i32 0, i64 1
  %158 = load float, ptr %arrayidx5.i577.us, align 4, !tbaa !137
  %arrayidx7.i578.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %139, i64 0, i32 1, i32 0, i64 1
  %159 = load float, ptr %arrayidx7.i578.us, align 4, !tbaa !137
  %add8.i579.us = fadd float %158, %159
  %arrayidx7.i590.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %145, i64 0, i32 1, i32 0, i64 1
  %160 = load float, ptr %arrayidx7.i590.us, align 4, !tbaa !137
  %add8.i591.us = fadd float %add8.i579.us, %160
  %mul4.i.i603.us = fmul float %add8.i591.us, 0x3FD5555560000000
  %m_x204.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 1
  %161 = load float, ptr %m_x204.us, align 4, !tbaa !137
  %m_x207.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %139, i64 0, i32 1
  %162 = load float, ptr %m_x207.us, align 4, !tbaa !137
  %add.i576.us = fadd float %161, %162
  %m_x214.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %145, i64 0, i32 1
  %163 = load float, ptr %m_x214.us, align 4, !tbaa !137
  %add.i588.us = fadd float %add.i576.us, %163
  %mul.i.i601.us = fmul float %add.i588.us, 0x3FD5555560000000
  %164 = load float, ptr %water_normal.i615, align 4, !tbaa !137
  %165 = load float, ptr %arrayidx7.i.i.i617, align 4, !tbaa !137
  %mul8.i.i.i618.us = fmul float %mul4.i.i603.us, %165
  %166 = tail call float @llvm.fmuladd.f32(float %mul.i.i601.us, float %164, float %mul8.i.i.i618.us)
  %167 = load float, ptr %arrayidx12.i.i.i620, align 4, !tbaa !137
  %168 = tail call float @llvm.fmuladd.f32(float %mul8.i.i605.us, float %167, float %166)
  %169 = load float, ptr %water_offset.i621, align 8, !tbaa !441
  %add.i622.us = fadd float %169, %168
  %cmp4.i623.us = fcmp olt float %add.i622.us, 0.000000e+00
  br i1 %cmp4.i623.us, label %if.then5.i633.us, label %invoke.cont232.us

if.then5.i633.us:                                 ; preds = %if.then.i624.us
  br label %invoke.cont232.us

invoke.cont232.us:                                ; preds = %if.then5.i633.us, %if.then.i624.us, %for.body168.us
  %medium.sroa.13.1.us = phi float [ %154, %if.then5.i633.us ], [ %153, %if.then.i624.us ], [ %153, %for.body168.us ]
  %170 = extractelement <2 x float> %152, i64 1
  %mul8.i.i648.us = fmul float %170, %170
  %171 = extractelement <2 x float> %152, i64 0
  %172 = tail call float @llvm.fmuladd.f32(float %171, float %171, float %mul8.i.i648.us)
  %173 = tail call float @llvm.fmuladd.f32(float %mul8.i.i575.us, float %mul8.i.i575.us, float %172)
  %cmp239.us = fcmp ogt float %173, 0x3E80000000000000
  br i1 %cmp239.us, label %if.then240.us, label %if.end334.us

if.then240.us:                                    ; preds = %invoke.cont232.us
  %m_normal.us = getelementptr inbounds %"struct.btSoftBody::Face", ptr %135, i64 %indvars.iv880, i32 2
  %174 = load <2 x float>, ptr %m_normal.us, align 8
  %nrm241.sroa.14.0.m_normal.sroa_idx.us = getelementptr inbounds i8, ptr %m_normal.us, i64 8
  %nrm241.sroa.14.0.copyload.us = load float, ptr %nrm241.sroa.14.0.m_normal.sroa_idx.us, align 8, !tbaa.struct !165
  br i1 %cond363, label %sw.bb244.us, label %sw.epilog255.us

sw.bb244.us:                                      ; preds = %if.then240.us
  %175 = fmul <2 x float> %152, %174
  %mul8.i.i652.us = extractelement <2 x float> %175, i64 1
  %176 = extractelement <2 x float> %174, i64 0
  %177 = tail call float @llvm.fmuladd.f32(float %176, float %171, float %mul8.i.i652.us)
  %178 = tail call float @llvm.fmuladd.f32(float %nrm241.sroa.14.0.copyload.us, float %mul8.i.i575.us, float %177)
  %cmp249.us = fcmp olt float %178, 0.000000e+00
  %conv251.us = select i1 %cmp249.us, float -1.000000e+00, float 1.000000e+00
  %179 = insertelement <2 x float> poison, float %conv251.us, i64 0
  %180 = shufflevector <2 x float> %179, <2 x float> poison, <2 x i32> zeroinitializer
  %181 = fmul <2 x float> %174, %180
  %mul7.i659.us = fmul float %nrm241.sroa.14.0.copyload.us, %conv251.us
  br label %sw.epilog255.us

sw.epilog255.us:                                  ; preds = %sw.bb244.us, %if.then240.us
  %nrm241.sroa.14.0.us = phi float [ %mul7.i659.us, %sw.bb244.us ], [ %nrm241.sroa.14.0.copyload.us, %if.then240.us ]
  %182 = phi <2 x float> [ %181, %sw.bb244.us ], [ %174, %if.then240.us ]
  %183 = fmul <2 x float> %152, %182
  %mul8.i.i662.us = extractelement <2 x float> %183, i64 1
  %184 = extractelement <2 x float> %182, i64 0
  %185 = tail call float @llvm.fmuladd.f32(float %171, float %184, float %mul8.i.i662.us)
  %186 = tail call float @llvm.fmuladd.f32(float %mul8.i.i575.us, float %nrm241.sroa.14.0.us, float %185)
  %cmp260.us = fcmp ogt float %186, 0.000000e+00
  br i1 %cmp260.us, label %invoke.cont309.us, label %if.end334.us

invoke.cont309.us:                                ; preds = %sw.epilog255.us
  %m_ra.us = getelementptr inbounds %"struct.btSoftBody::Face", ptr %135, i64 %indvars.iv880, i32 3
  %187 = load float, ptr %m_ra.us, align 8, !tbaa !241
  %188 = fneg float %187
  %189 = fmul float %186, %188
  %190 = fmul float %173, %189
  %fneg279.us = fmul float %medium.sroa.13.1.us, %190
  %sqrt.i.i688.us = tail call float @llvm.sqrt.f32(float %173)
  %div.i.i689.us = fdiv float 1.000000e+00, %sqrt.i.i688.us
  %mul8.i.i.i692.us = fmul float %mul8.i.i575.us, %div.i.i689.us
  %191 = insertelement <2 x float> poison, float %fneg279.us, i64 0
  %192 = shufflevector <2 x float> %191, <2 x float> poison, <2 x i32> zeroinitializer
  %193 = fmul <2 x float> %1, %192
  %194 = insertelement <2 x float> poison, float %mul8.i.i.i692.us, i64 0
  %195 = insertelement <2 x float> %194, float %nrm241.sroa.14.0.us, i64 1
  %196 = fmul <2 x float> %195, %193
  %197 = extractelement <2 x float> %196, i64 1
  %add13.i684.us = fadd float %197, 0.000000e+00
  %198 = extractelement <2 x float> %196, i64 0
  %add13.i714.us = fadd float %198, %add13.i684.us
  %199 = shufflevector <2 x float> %193, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %200 = fmul <2 x float> %182, %199
  %201 = fadd <2 x float> %200, zeroinitializer
  %202 = insertelement <2 x float> poison, float %div.i.i689.us, i64 0
  %203 = shufflevector <2 x float> %202, <2 x float> poison, <2 x i32> zeroinitializer
  %204 = fmul <2 x float> %152, %203
  %205 = shufflevector <2 x float> %193, <2 x float> poison, <2 x i32> zeroinitializer
  %206 = fmul <2 x float> %204, %205
  %207 = fadd <2 x float> %206, %201
  %208 = fmul <2 x float> %207, <float 0x3FD5555560000000, float 0x3FD5555560000000>
  %mul7.i.i.us = fmul float %add13.i714.us, 0x3FD5555560000000
  %209 = extractelement <2 x float> %208, i64 1
  %mul8.i.i.i.i.i732.us = fmul float %209, %209
  %210 = extractelement <2 x float> %208, i64 0
  %211 = tail call float @llvm.fmuladd.f32(float %210, float %210, float %mul8.i.i.i.i.i732.us)
  %212 = tail call float @llvm.fmuladd.f32(float %mul7.i.i.us, float %mul7.i.i.us, float %211)
  %sqrt.i.i.i733.us = tail call float @llvm.sqrt.f32(float %212)
  %div.i.i.i734.us = fdiv float 1.000000e+00, %sqrt.i.i.i733.us
  %213 = insertelement <2 x float> poison, float %div.i.i.i734.us, i64 0
  %214 = shufflevector <2 x float> %213, <2 x float> poison, <2 x i32> zeroinitializer
  %215 = fmul <2 x float> %208, %214
  %mul8.i.i.i.i737.us = fmul float %mul7.i.i.us, %div.i.i.i734.us
  %m_im.i719.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 6
  %216 = load float, ptr %m_im.i719.us, align 8, !tbaa !175
  %mul.i720.us = fmul float %0, %216
  %mul.i.i721.us = fmul float %210, %mul.i720.us
  %mul4.i.i723.us = fmul float %209, %mul.i720.us
  %mul8.i.i725.us = fmul float %mul7.i.i.us, %mul.i720.us
  %217 = insertelement <2 x float> poison, float %mul4.i.i723.us, i64 0
  %218 = insertelement <2 x float> %217, float %141, i64 1
  %219 = fmul <2 x float> %218, %218
  %220 = insertelement <2 x float> poison, float %mul.i.i721.us, i64 0
  %221 = insertelement <2 x float> %220, float %140, i64 1
  %222 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %221, <2 x float> %221, <2 x float> %219)
  %223 = insertelement <2 x float> poison, float %mul8.i.i725.us, i64 0
  %224 = insertelement <2 x float> %223, float %143, i64 1
  %225 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %224, <2 x float> %224, <2 x float> %222)
  %226 = extractelement <2 x float> %225, i64 0
  %227 = extractelement <2 x float> %225, i64 1
  %cmp.i731.us = fcmp ogt float %226, %227
  br i1 %cmp.i731.us, label %if.then.i752.us, label %if.else.i759.us

if.end334.us:                                     ; preds = %if.else.i759.us.2, %if.then.i752.us.2, %sw.epilog255.us, %invoke.cont232.us
  %indvars.iv.next881 = add nuw nsw i64 %indvars.iv880, 1
  %exitcond884.not = icmp eq i64 %indvars.iv.next881, %wide.trip.count883
  br i1 %exitcond884.not, label %for.end338, label %for.body168.us

if.else.i759.us:                                  ; preds = %invoke.cont309.us
  %m_f14.i753.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 4
  %228 = load <2 x float>, ptr %m_f14.i753.us, align 8, !tbaa !137
  %229 = fadd <2 x float> %208, %228
  store <2 x float> %229, ptr %m_f14.i753.us, align 8, !tbaa !137
  %arrayidx12.i39.i757.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 4, i32 0, i64 2
  %230 = load float, ptr %arrayidx12.i39.i757.us, align 8, !tbaa !137
  %add13.i.i758.us = fadd float %mul7.i.i.us, %230
  store float %add13.i.i758.us, ptr %arrayidx12.i39.i757.us, align 8, !tbaa !137
  br label %for.inc319.us

if.then.i752.us:                                  ; preds = %invoke.cont309.us
  %231 = extractelement <2 x float> %215, i64 1
  %mul8.i.i.i25.i738.us = fmul float %231, %141
  %232 = extractelement <2 x float> %215, i64 0
  %233 = tail call float @llvm.fmuladd.f32(float %140, float %232, float %mul8.i.i.i25.i738.us)
  %234 = tail call float @llvm.fmuladd.f32(float %143, float %mul8.i.i.i.i737.us, float %233)
  %mul8.i.i26.i741.us = fmul float %mul8.i.i.i.i737.us, %234
  %div.i.i742.us = fdiv float 1.000000e+00, %mul.i720.us
  %mul8.i.i29.i745.us = fmul float %div.i.i742.us, %mul8.i.i26.i741.us
  %m_f.i746.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 4
  %235 = insertelement <2 x float> poison, float %234, i64 0
  %236 = shufflevector <2 x float> %235, <2 x float> poison, <2 x i32> zeroinitializer
  %237 = fmul <2 x float> %215, %236
  %238 = insertelement <2 x float> poison, float %div.i.i742.us, i64 0
  %239 = shufflevector <2 x float> %238, <2 x float> poison, <2 x i32> zeroinitializer
  %240 = fmul <2 x float> %239, %237
  %241 = load <2 x float>, ptr %m_f.i746.us, align 8, !tbaa !137
  %242 = fsub <2 x float> %241, %240
  store <2 x float> %242, ptr %m_f.i746.us, align 8, !tbaa !137
  %arrayidx12.i.i750.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 4, i32 0, i64 2
  %243 = load float, ptr %arrayidx12.i.i750.us, align 8, !tbaa !137
  %sub13.i.i751.us = fsub float %243, %mul8.i.i29.i745.us
  store float %sub13.i.i751.us, ptr %arrayidx12.i.i750.us, align 8, !tbaa !137
  br label %for.inc319.us

for.inc319.us:                                    ; preds = %if.then.i752.us, %if.else.i759.us
  %m_im.i719.us.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %139, i64 0, i32 6
  %244 = load float, ptr %m_im.i719.us.1, align 8, !tbaa !175
  %mul.i720.us.1 = fmul float %0, %244
  %mul.i.i721.us.1 = fmul float %210, %mul.i720.us.1
  %mul4.i.i723.us.1 = fmul float %209, %mul.i720.us.1
  %mul8.i.i725.us.1 = fmul float %mul7.i.i.us, %mul.i720.us.1
  %245 = load float, ptr %m_v181.us, align 8, !tbaa !137
  %246 = load float, ptr %arrayidx7.i549.us, align 4, !tbaa !137
  %247 = load float, ptr %arrayidx13.i552.us, align 8, !tbaa !137
  %248 = insertelement <2 x float> poison, float %mul4.i.i723.us.1, i64 0
  %249 = insertelement <2 x float> %248, float %246, i64 1
  %250 = fmul <2 x float> %249, %249
  %251 = insertelement <2 x float> poison, float %mul.i.i721.us.1, i64 0
  %252 = insertelement <2 x float> %251, float %245, i64 1
  %253 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %252, <2 x float> %252, <2 x float> %250)
  %254 = insertelement <2 x float> poison, float %mul8.i.i725.us.1, i64 0
  %255 = insertelement <2 x float> %254, float %247, i64 1
  %256 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %255, <2 x float> %255, <2 x float> %253)
  %257 = extractelement <2 x float> %256, i64 0
  %258 = extractelement <2 x float> %256, i64 1
  %cmp.i731.us.1 = fcmp ogt float %257, %258
  br i1 %cmp.i731.us.1, label %if.then.i752.us.1, label %if.else.i759.us.1

if.else.i759.us.1:                                ; preds = %for.inc319.us
  %m_f14.i753.us.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %139, i64 0, i32 4
  %259 = load <2 x float>, ptr %m_f14.i753.us.1, align 8, !tbaa !137
  %260 = fadd <2 x float> %208, %259
  store <2 x float> %260, ptr %m_f14.i753.us.1, align 8, !tbaa !137
  %arrayidx12.i39.i757.us.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %139, i64 0, i32 4, i32 0, i64 2
  %261 = load float, ptr %arrayidx12.i39.i757.us.1, align 8, !tbaa !137
  %add13.i.i758.us.1 = fadd float %mul7.i.i.us, %261
  store float %add13.i.i758.us.1, ptr %arrayidx12.i39.i757.us.1, align 8, !tbaa !137
  br label %for.inc319.us.1

if.then.i752.us.1:                                ; preds = %for.inc319.us
  %262 = extractelement <2 x float> %215, i64 1
  %mul8.i.i.i25.i738.us.1 = fmul float %262, %246
  %263 = extractelement <2 x float> %215, i64 0
  %264 = tail call float @llvm.fmuladd.f32(float %245, float %263, float %mul8.i.i.i25.i738.us.1)
  %265 = tail call float @llvm.fmuladd.f32(float %247, float %mul8.i.i.i.i737.us, float %264)
  %mul8.i.i26.i741.us.1 = fmul float %mul8.i.i.i.i737.us, %265
  %div.i.i742.us.1 = fdiv float 1.000000e+00, %mul.i720.us.1
  %mul8.i.i29.i745.us.1 = fmul float %div.i.i742.us.1, %mul8.i.i26.i741.us.1
  %m_f.i746.us.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %139, i64 0, i32 4
  %266 = insertelement <2 x float> poison, float %265, i64 0
  %267 = shufflevector <2 x float> %266, <2 x float> poison, <2 x i32> zeroinitializer
  %268 = fmul <2 x float> %215, %267
  %269 = insertelement <2 x float> poison, float %div.i.i742.us.1, i64 0
  %270 = shufflevector <2 x float> %269, <2 x float> poison, <2 x i32> zeroinitializer
  %271 = fmul <2 x float> %270, %268
  %272 = load <2 x float>, ptr %m_f.i746.us.1, align 8, !tbaa !137
  %273 = fsub <2 x float> %272, %271
  store <2 x float> %273, ptr %m_f.i746.us.1, align 8, !tbaa !137
  %arrayidx12.i.i750.us.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %139, i64 0, i32 4, i32 0, i64 2
  %274 = load float, ptr %arrayidx12.i.i750.us.1, align 8, !tbaa !137
  %sub13.i.i751.us.1 = fsub float %274, %mul8.i.i29.i745.us.1
  store float %sub13.i.i751.us.1, ptr %arrayidx12.i.i750.us.1, align 8, !tbaa !137
  br label %for.inc319.us.1

for.inc319.us.1:                                  ; preds = %if.then.i752.us.1, %if.else.i759.us.1
  %m_im.i719.us.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %145, i64 0, i32 6
  %275 = load float, ptr %m_im.i719.us.2, align 8, !tbaa !175
  %mul.i720.us.2 = fmul float %0, %275
  %mul.i.i721.us.2 = fmul float %210, %mul.i720.us.2
  %mul4.i.i723.us.2 = fmul float %209, %mul.i720.us.2
  %mul8.i.i725.us.2 = fmul float %mul7.i.i.us, %mul.i720.us.2
  %276 = load float, ptr %m_v188.us, align 8, !tbaa !137
  %277 = load float, ptr %arrayidx7.i560.us, align 4, !tbaa !137
  %278 = load float, ptr %arrayidx13.i563.us, align 8, !tbaa !137
  %279 = insertelement <2 x float> poison, float %mul4.i.i723.us.2, i64 0
  %280 = insertelement <2 x float> %279, float %277, i64 1
  %281 = fmul <2 x float> %280, %280
  %282 = insertelement <2 x float> poison, float %mul.i.i721.us.2, i64 0
  %283 = insertelement <2 x float> %282, float %276, i64 1
  %284 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %283, <2 x float> %283, <2 x float> %281)
  %285 = insertelement <2 x float> poison, float %mul8.i.i725.us.2, i64 0
  %286 = insertelement <2 x float> %285, float %278, i64 1
  %287 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %286, <2 x float> %286, <2 x float> %284)
  %288 = extractelement <2 x float> %287, i64 0
  %289 = extractelement <2 x float> %287, i64 1
  %cmp.i731.us.2 = fcmp ogt float %288, %289
  br i1 %cmp.i731.us.2, label %if.then.i752.us.2, label %if.else.i759.us.2

if.else.i759.us.2:                                ; preds = %for.inc319.us.1
  %m_f14.i753.us.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %145, i64 0, i32 4
  %290 = load <2 x float>, ptr %m_f14.i753.us.2, align 8, !tbaa !137
  %291 = fadd <2 x float> %208, %290
  store <2 x float> %291, ptr %m_f14.i753.us.2, align 8, !tbaa !137
  %arrayidx12.i39.i757.us.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %145, i64 0, i32 4, i32 0, i64 2
  %292 = load float, ptr %arrayidx12.i39.i757.us.2, align 8, !tbaa !137
  %add13.i.i758.us.2 = fadd float %mul7.i.i.us, %292
  store float %add13.i.i758.us.2, ptr %arrayidx12.i39.i757.us.2, align 8, !tbaa !137
  br label %if.end334.us

if.then.i752.us.2:                                ; preds = %for.inc319.us.1
  %293 = extractelement <2 x float> %215, i64 1
  %mul8.i.i.i25.i738.us.2 = fmul float %293, %277
  %294 = extractelement <2 x float> %215, i64 0
  %295 = tail call float @llvm.fmuladd.f32(float %276, float %294, float %mul8.i.i.i25.i738.us.2)
  %296 = tail call float @llvm.fmuladd.f32(float %278, float %mul8.i.i.i.i737.us, float %295)
  %mul8.i.i26.i741.us.2 = fmul float %mul8.i.i.i.i737.us, %296
  %div.i.i742.us.2 = fdiv float 1.000000e+00, %mul.i720.us.2
  %mul8.i.i29.i745.us.2 = fmul float %div.i.i742.us.2, %mul8.i.i26.i741.us.2
  %m_f.i746.us.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %145, i64 0, i32 4
  %297 = insertelement <2 x float> poison, float %296, i64 0
  %298 = shufflevector <2 x float> %297, <2 x float> poison, <2 x i32> zeroinitializer
  %299 = fmul <2 x float> %215, %298
  %300 = insertelement <2 x float> poison, float %div.i.i742.us.2, i64 0
  %301 = shufflevector <2 x float> %300, <2 x float> poison, <2 x i32> zeroinitializer
  %302 = fmul <2 x float> %301, %299
  %303 = load <2 x float>, ptr %m_f.i746.us.2, align 8, !tbaa !137
  %304 = fsub <2 x float> %303, %302
  store <2 x float> %304, ptr %m_f.i746.us.2, align 8, !tbaa !137
  %arrayidx12.i.i750.us.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %145, i64 0, i32 4, i32 0, i64 2
  %305 = load float, ptr %arrayidx12.i.i750.us.2, align 8, !tbaa !137
  %sub13.i.i751.us.2 = fsub float %305, %mul8.i.i29.i745.us.2
  store float %sub13.i.i751.us.2, ptr %arrayidx12.i.i750.us.2, align 8, !tbaa !137
  br label %if.end334.us

for.end338:                                       ; preds = %if.end334.us, %for.body168.lr.ph, %for.end
  tail call void @_ZN15CProfileManager12Stop_ProfileEv()
  ret void
}

declare noundef zeroext i1 @_ZN6btDbvt6updateEP10btDbvtNodeR12btDbvtAabbMmRK9btVector3f(ptr noundef nonnull align 8 dereferenceable(64), ptr noundef, ptr noundef nonnull align 4 dereferenceable(32), ptr noundef nonnull align 4 dereferenceable(16), float noundef) local_unnamed_addr #1

; Function Attrs: nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody10updatePoseEv(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this) local_unnamed_addr #23 align 2 {
entry:
  %Apq = alloca %class.btMatrix3x3, align 4
  %r = alloca %class.btMatrix3x3, align 4
  %s = alloca %class.btMatrix3x3, align 4
  %m_bframe = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 1
  %0 = load i8, ptr %m_bframe, align 1, !tbaa !143, !range !159, !noundef !192
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.end59, label %if.then.i

if.then.i:                                        ; preds = %entry
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %1 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  %cmp33.i = icmp sgt i32 %1, 0
  br i1 %cmp33.i, label %for.body.lr.ph.i, label %_ZNK10btSoftBody11evaluateComEv.exit

for.body.lr.ph.i:                                 ; preds = %if.then.i
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %2 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %m_data.i15.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  %3 = load ptr, ptr %m_data.i15.i, align 8, !tbaa !39
  %wide.trip.count.i = zext i32 %1 to i64
  %xtraiter = and i64 %wide.trip.count.i, 1
  %4 = icmp eq i32 %1, 1
  br i1 %4, label %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %wide.trip.count.i, 4294967294
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.1, %for.body.i ]
  %retval.sroa.7.035.i = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i.new ], [ %retval.sroa.7.8.vec.insert32.i.1, %for.body.i ]
  %retval.sroa.0.034.i = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i.new ], [ %18, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.1, %for.body.i ]
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv.i, i32 1
  %arrayidx.i17.i = getelementptr inbounds float, ptr %3, i64 %indvars.iv.i
  %5 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx7.i19.i = getelementptr inbounds [4 x float], ptr %m_x.i, i64 0, i64 2
  %6 = load float, ptr %arrayidx7.i19.i, align 4, !tbaa !137
  %mul8.i.i = fmul float %5, %6
  %7 = load <2 x float>, ptr %m_x.i, align 4, !tbaa !137
  %8 = insertelement <2 x float> poison, float %5, i64 0
  %9 = shufflevector <2 x float> %8, <2 x float> poison, <2 x i32> zeroinitializer
  %10 = fmul <2 x float> %9, %7
  %11 = fadd <2 x float> %retval.sroa.0.034.i, %10
  %retval.sroa.7.8.vec.extract.i = extractelement <2 x float> %retval.sroa.7.035.i, i64 0
  %add13.i.i = fadd float %retval.sroa.7.8.vec.extract.i, %mul8.i.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %m_x.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv.next.i, i32 1
  %arrayidx.i17.i.1 = getelementptr inbounds float, ptr %3, i64 %indvars.iv.next.i
  %12 = load float, ptr %arrayidx.i17.i.1, align 4, !tbaa !137
  %arrayidx7.i19.i.1 = getelementptr inbounds [4 x float], ptr %m_x.i.1, i64 0, i64 2
  %13 = load float, ptr %arrayidx7.i19.i.1, align 4, !tbaa !137
  %mul8.i.i.1 = fmul float %12, %13
  %14 = load <2 x float>, ptr %m_x.i.1, align 4, !tbaa !137
  %15 = insertelement <2 x float> poison, float %12, i64 0
  %16 = shufflevector <2 x float> %15, <2 x float> poison, <2 x i32> zeroinitializer
  %17 = fmul <2 x float> %16, %14
  %18 = fadd <2 x float> %11, %17
  %add13.i.i.1 = fadd float %add13.i.i, %mul8.i.i.1
  %retval.sroa.7.8.vec.insert32.i.1 = insertelement <2 x float> %retval.sroa.7.035.i, float %add13.i.i.1, i64 0
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa, label %for.body.i

_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa: ; preds = %for.body.i, %for.body.lr.ph.i
  %.lcssa235.ph = phi <2 x float> [ undef, %for.body.lr.ph.i ], [ %18, %for.body.i ]
  %retval.sroa.7.8.vec.insert32.i.lcssa.ph = phi <2 x float> [ undef, %for.body.lr.ph.i ], [ %retval.sroa.7.8.vec.insert32.i.1, %for.body.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i.1, %for.body.i ]
  %retval.sroa.7.035.i.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i ], [ %retval.sroa.7.8.vec.insert32.i.1, %for.body.i ]
  %retval.sroa.0.034.i.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i ], [ %18, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK10btSoftBody11evaluateComEv.exit, label %for.body.i.epil

for.body.i.epil:                                  ; preds = %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa
  %m_x.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv.i.unr, i32 1
  %arrayidx.i17.i.epil = getelementptr inbounds float, ptr %3, i64 %indvars.iv.i.unr
  %19 = load float, ptr %arrayidx.i17.i.epil, align 4, !tbaa !137
  %arrayidx7.i19.i.epil = getelementptr inbounds [4 x float], ptr %m_x.i.epil, i64 0, i64 2
  %20 = load float, ptr %arrayidx7.i19.i.epil, align 4, !tbaa !137
  %mul8.i.i.epil = fmul float %19, %20
  %21 = load <2 x float>, ptr %m_x.i.epil, align 4, !tbaa !137
  %22 = insertelement <2 x float> poison, float %19, i64 0
  %23 = shufflevector <2 x float> %22, <2 x float> poison, <2 x i32> zeroinitializer
  %24 = fmul <2 x float> %23, %21
  %25 = fadd <2 x float> %retval.sroa.0.034.i.unr, %24
  %retval.sroa.7.8.vec.extract.i.epil = extractelement <2 x float> %retval.sroa.7.035.i.unr, i64 0
  %add13.i.i.epil = fadd float %retval.sroa.7.8.vec.extract.i.epil, %mul8.i.i.epil
  %retval.sroa.7.8.vec.insert32.i.epil = insertelement <2 x float> %retval.sroa.7.035.i.unr, float %add13.i.i.epil, i64 0
  br label %_ZNK10btSoftBody11evaluateComEv.exit

_ZNK10btSoftBody11evaluateComEv.exit:             ; preds = %for.body.i.epil, %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa, %if.then.i
  %retval.sroa.0.1.i = phi <2 x float> [ zeroinitializer, %if.then.i ], [ %.lcssa235.ph, %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa ], [ %25, %for.body.i.epil ]
  %retval.sroa.7.1.i = phi <2 x float> [ zeroinitializer, %if.then.i ], [ %retval.sroa.7.8.vec.insert32.i.lcssa.ph, %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa ], [ %retval.sroa.7.8.vec.insert32.i.epil, %for.body.i.epil ]
  %m_com = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 5
  store <2 x float> %retval.sroa.0.1.i, ptr %m_com, align 8, !tbaa.struct !163
  %com.sroa.6.0.m_com.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 5, i32 0, i64 2
  store <2 x float> %retval.sroa.7.1.i, ptr %com.sroa.6.0.m_com.sroa_idx, align 8, !tbaa.struct !165
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %Apq) #38
  %arrayidx.i = getelementptr inbounds [3 x %class.btVector3], ptr %Apq, i64 0, i64 2
  %ref.tmp.sroa.4.0.arrayidx.i.sroa_idx = getelementptr inbounds [3 x %class.btVector3], ptr %Apq, i64 0, i64 2, i32 0, i64 1
  %ref.tmp.sroa.5.0.arrayidx.i.sroa_idx = getelementptr inbounds [3 x %class.btVector3], ptr %Apq, i64 0, i64 2, i32 0, i64 2
  %arrayidx.i74 = getelementptr inbounds [3 x %class.btVector3], ptr %Apq, i64 0, i64 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) %Apq, i8 0, i64 48, i1 false)
  %arrayidx.i74.promoted = load float, ptr %arrayidx.i74, align 4, !tbaa !137
  br i1 %cmp33.i, label %for.body.lr.ph, label %_ZNK10btSoftBody11evaluateComEv.exit.for.cond.cleanup_crit_edge

_ZNK10btSoftBody11evaluateComEv.exit.for.cond.cleanup_crit_edge: ; preds = %_ZNK10btSoftBody11evaluateComEv.exit
  %arrayidx.i.i42.i99.phi.trans.insert = getelementptr inbounds [4 x float], ptr %Apq, i64 0, i64 1
  %.pre = load float, ptr %arrayidx.i.i42.i99.phi.trans.insert, align 4, !tbaa !137, !noalias !442
  %arrayidx.i.i45.i103.phi.trans.insert = getelementptr inbounds [4 x float], ptr %Apq, i64 0, i64 2
  %arrayidx.i14.i46.i104.phi.trans.insert = getelementptr inbounds [3 x %class.btVector3], ptr %Apq, i64 0, i64 1, i32 0, i64 2
  %26 = load <4 x float>, ptr %arrayidx.i.i45.i103.phi.trans.insert, align 4
  %27 = shufflevector <4 x float> %26, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %.pre231 = load float, ptr %arrayidx.i14.i46.i104.phi.trans.insert, align 4, !tbaa !137, !noalias !442
  %28 = insertelement <2 x float> <float 0x3E80000000000000, float poison>, float %.pre, i64 1
  %29 = insertelement <2 x float> <float poison, float 0x3E90000000000000>, float %arrayidx.i74.promoted, i64 0
  %30 = insertelement <2 x float> %27, float %.pre231, i64 1
  br label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %_ZNK10btSoftBody11evaluateComEv.exit
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  %31 = load ptr, ptr %m_data.i, align 8, !tbaa !39
  %m_data.i135 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %32 = load ptr, ptr %m_data.i135, align 8, !tbaa !87
  %com.sroa.6.8.vec.extract = extractelement <2 x float> %retval.sroa.7.1.i, i64 0
  %m_data.i146 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 5
  %33 = load ptr, ptr %m_data.i146, align 8, !tbaa !33
  %arrayidx7.i160 = getelementptr inbounds [4 x float], ptr %Apq, i64 0, i64 1
  %arrayidx12.i = getelementptr inbounds [4 x float], ptr %Apq, i64 0, i64 2
  %arrayidx12.i178 = getelementptr inbounds [3 x %class.btVector3], ptr %Apq, i64 0, i64 1, i32 0, i64 2
  %arrayidx7.i160.promoted = load float, ptr %arrayidx7.i160, align 4, !tbaa !137
  %34 = load <4 x float>, ptr %arrayidx12.i, align 4
  %35 = shufflevector <4 x float> %34, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %arrayidx12.i178.promoted = load float, ptr %arrayidx12.i178, align 4, !tbaa !137
  %wide.trip.count = zext i32 %1 to i64
  %36 = insertelement <2 x float> <float 0x3E80000000000000, float poison>, float %arrayidx7.i160.promoted, i64 1
  %37 = insertelement <2 x float> <float poison, float 0x3E90000000000000>, float %arrayidx.i74.promoted, i64 0
  %38 = insertelement <2 x float> %35, float %arrayidx12.i178.promoted, i64 1
  br label %for.body

for.cond.for.cond.cleanup_crit_edge:              ; preds = %for.body
  %39 = extractelement <2 x float> %140, i64 1
  store float %39, ptr %arrayidx7.i160, align 4, !tbaa !137
  %40 = extractelement <2 x float> %136, i64 0
  store float %40, ptr %arrayidx12.i, align 4, !tbaa !137
  %41 = extractelement <2 x float> %136, i64 1
  store float %41, ptr %arrayidx12.i178, align 4, !tbaa !137
  %42 = extractelement <2 x float> %147, i64 1
  store float %42, ptr %ref.tmp.sroa.4.0.arrayidx.i.sroa_idx, align 4, !tbaa !137
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %_ZNK10btSoftBody11evaluateComEv.exit.for.cond.cleanup_crit_edge, %for.cond.for.cond.cleanup_crit_edge
  %add13.i198217.lcssa = phi float [ %add13.i198, %for.cond.for.cond.cleanup_crit_edge ], [ 0x3E98000000000000, %_ZNK10btSoftBody11evaluateComEv.exit.for.cond.cleanup_crit_edge ]
  %43 = phi <2 x float> [ %147, %for.cond.for.cond.cleanup_crit_edge ], [ zeroinitializer, %_ZNK10btSoftBody11evaluateComEv.exit.for.cond.cleanup_crit_edge ]
  %44 = phi <2 x float> [ %140, %for.cond.for.cond.cleanup_crit_edge ], [ %28, %_ZNK10btSoftBody11evaluateComEv.exit.for.cond.cleanup_crit_edge ]
  %45 = phi <2 x float> [ %143, %for.cond.for.cond.cleanup_crit_edge ], [ %29, %_ZNK10btSoftBody11evaluateComEv.exit.for.cond.cleanup_crit_edge ]
  %46 = phi <2 x float> [ %136, %for.cond.for.cond.cleanup_crit_edge ], [ %30, %_ZNK10btSoftBody11evaluateComEv.exit.for.cond.cleanup_crit_edge ]
  %47 = extractelement <2 x float> %44, i64 0
  store float %47, ptr %Apq, align 4, !tbaa !137
  store <2 x float> %45, ptr %arrayidx.i74, align 4, !tbaa !137
  %48 = extractelement <2 x float> %43, i64 0
  store float %48, ptr %arrayidx.i, align 4, !tbaa !137
  store float %add13.i198217.lcssa, ptr %ref.tmp.sroa.5.0.arrayidx.i.sroa_idx, align 4, !tbaa !137
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %r) #38
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %s) #38
  call fastcc void @_ZL14PolarDecomposeRK11btMatrix3x3RS_S2_(ptr noundef nonnull align 4 dereferenceable(48) %Apq, ptr noundef nonnull align 4 dereferenceable(48) %r, ptr noundef nonnull align 4 dereferenceable(48) %s)
  %m_rot = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rot, ptr noundef nonnull align 4 dereferenceable(16) %r, i64 16, i1 false), !tbaa.struct !163
  %arrayidx5.i79 = getelementptr inbounds [3 x %class.btVector3], ptr %r, i64 0, i64 1
  %arrayidx7.i80 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx7.i80, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i79, i64 16, i1 false), !tbaa.struct !163
  %arrayidx9.i = getelementptr inbounds [3 x %class.btVector3], ptr %r, i64 0, i64 2
  %arrayidx11.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx11.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx9.i, i64 16, i1 false), !tbaa.struct !163
  %m_aqq = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8
  %arrayidx.i.i = getelementptr inbounds [4 x float], ptr %r, i64 0, i64 1
  %arrayidx.i26.i = getelementptr inbounds [3 x %class.btVector3], ptr %r, i64 0, i64 1, i32 0, i64 1
  %arrayidx.i27.i = getelementptr inbounds [3 x %class.btVector3], ptr %r, i64 0, i64 2, i32 0, i64 1
  %arrayidx.i28.i = getelementptr inbounds [4 x float], ptr %r, i64 0, i64 2
  %arrayidx.i29.i = getelementptr inbounds [3 x %class.btVector3], ptr %r, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i30.i = getelementptr inbounds [3 x %class.btVector3], ptr %r, i64 0, i64 2, i32 0, i64 2
  %49 = load float, ptr %r, align 4, !tbaa !137, !noalias !445
  %50 = load float, ptr %arrayidx5.i79, align 4, !tbaa !137, !noalias !445
  %51 = load float, ptr %arrayidx9.i, align 4, !tbaa !137, !noalias !445
  %52 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137, !noalias !445
  %53 = load float, ptr %arrayidx.i26.i, align 4, !tbaa !137, !noalias !445
  %54 = load float, ptr %arrayidx.i27.i, align 4, !tbaa !137, !noalias !445
  %55 = load float, ptr %arrayidx.i28.i, align 4, !tbaa !137, !noalias !445
  %56 = load float, ptr %arrayidx.i29.i, align 4, !tbaa !137, !noalias !445
  %57 = load float, ptr %arrayidx.i30.i, align 4, !tbaa !137, !noalias !445
  %58 = load float, ptr %m_aqq, align 8, !tbaa !137, !noalias !448
  %arrayidx.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 0, i32 0, i64 1
  %59 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137, !noalias !448
  %mul7.i.i = fmul float %52, %59
  %60 = tail call float @llvm.fmuladd.f32(float %49, float %58, float %mul7.i.i)
  %arrayidx.i14.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 0, i32 0, i64 2
  %61 = load float, ptr %arrayidx.i14.i.i, align 8, !tbaa !137, !noalias !448
  %62 = tail call float @llvm.fmuladd.f32(float %55, float %61, float %60)
  %mul7.i44.i = fmul float %53, %59
  %63 = tail call float @llvm.fmuladd.f32(float %50, float %58, float %mul7.i44.i)
  %64 = tail call float @llvm.fmuladd.f32(float %56, float %61, float %63)
  %mul7.i48.i = fmul float %54, %59
  %65 = tail call float @llvm.fmuladd.f32(float %51, float %58, float %mul7.i48.i)
  %66 = tail call float @llvm.fmuladd.f32(float %57, float %61, float %65)
  %arrayidx.i.i82 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 1
  %67 = load float, ptr %arrayidx.i.i82, align 8, !tbaa !137, !noalias !448
  %arrayidx.i.i52.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 1, i32 0, i64 1
  %68 = load float, ptr %arrayidx.i.i52.i, align 4, !tbaa !137, !noalias !448
  %mul7.i53.i = fmul float %52, %68
  %69 = tail call float @llvm.fmuladd.f32(float %49, float %67, float %mul7.i53.i)
  %arrayidx.i14.i55.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 1, i32 0, i64 2
  %70 = load float, ptr %arrayidx.i14.i55.i, align 8, !tbaa !137, !noalias !448
  %71 = tail call float @llvm.fmuladd.f32(float %55, float %70, float %69)
  %mul7.i60.i = fmul float %53, %68
  %72 = tail call float @llvm.fmuladd.f32(float %50, float %67, float %mul7.i60.i)
  %73 = tail call float @llvm.fmuladd.f32(float %56, float %70, float %72)
  %mul7.i67.i = fmul float %54, %68
  %74 = tail call float @llvm.fmuladd.f32(float %51, float %67, float %mul7.i67.i)
  %75 = tail call float @llvm.fmuladd.f32(float %57, float %70, float %74)
  %arrayidx.i70.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 2
  %76 = load float, ptr %arrayidx.i70.i, align 8, !tbaa !137, !noalias !448
  %arrayidx.i.i72.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 2, i32 0, i64 1
  %77 = load float, ptr %arrayidx.i.i72.i, align 4, !tbaa !137, !noalias !448
  %mul7.i73.i = fmul float %52, %77
  %78 = tail call float @llvm.fmuladd.f32(float %49, float %76, float %mul7.i73.i)
  %arrayidx.i14.i75.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 2, i32 0, i64 2
  %79 = load float, ptr %arrayidx.i14.i75.i, align 8, !tbaa !137, !noalias !448
  %80 = tail call float @llvm.fmuladd.f32(float %55, float %79, float %78)
  %mul7.i80.i = fmul float %53, %77
  %81 = tail call float @llvm.fmuladd.f32(float %50, float %76, float %mul7.i80.i)
  %82 = tail call float @llvm.fmuladd.f32(float %56, float %79, float %81)
  %mul7.i87.i = fmul float %54, %77
  %83 = tail call float @llvm.fmuladd.f32(float %51, float %76, float %mul7.i87.i)
  %84 = tail call float @llvm.fmuladd.f32(float %57, float %79, float %83)
  %85 = insertelement <2 x float> poison, float %64, i64 0
  %86 = shufflevector <2 x float> %85, <2 x float> poison, <2 x i32> zeroinitializer
  %87 = fmul <2 x float> %86, %45
  %88 = insertelement <2 x float> poison, float %62, i64 0
  %89 = shufflevector <2 x float> %88, <2 x float> poison, <2 x i32> zeroinitializer
  %90 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %44, <2 x float> %89, <2 x float> %87)
  %91 = insertelement <2 x float> poison, float %66, i64 0
  %92 = shufflevector <2 x float> %91, <2 x float> poison, <2 x i32> zeroinitializer
  %93 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %43, <2 x float> %92, <2 x float> %90)
  %94 = extractelement <2 x float> %46, i64 1
  %mul7.i48.i105 = fmul float %64, %94
  %95 = extractelement <2 x float> %46, i64 0
  %96 = tail call float @llvm.fmuladd.f32(float %95, float %62, float %mul7.i48.i105)
  %97 = tail call float @llvm.fmuladd.f32(float %add13.i198217.lcssa, float %66, float %96)
  %98 = insertelement <2 x float> poison, float %73, i64 0
  %99 = shufflevector <2 x float> %98, <2 x float> poison, <2 x i32> zeroinitializer
  %100 = fmul <2 x float> %99, %45
  %101 = insertelement <2 x float> poison, float %71, i64 0
  %102 = shufflevector <2 x float> %101, <2 x float> poison, <2 x i32> zeroinitializer
  %103 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %44, <2 x float> %102, <2 x float> %100)
  %104 = insertelement <2 x float> poison, float %75, i64 0
  %105 = shufflevector <2 x float> %104, <2 x float> poison, <2 x i32> zeroinitializer
  %106 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %43, <2 x float> %105, <2 x float> %103)
  %mul7.i67.i112 = fmul float %73, %94
  %107 = tail call float @llvm.fmuladd.f32(float %95, float %71, float %mul7.i67.i112)
  %108 = tail call float @llvm.fmuladd.f32(float %add13.i198217.lcssa, float %75, float %107)
  %109 = insertelement <2 x float> poison, float %82, i64 0
  %110 = shufflevector <2 x float> %109, <2 x float> poison, <2 x i32> zeroinitializer
  %111 = fmul <2 x float> %45, %110
  %112 = insertelement <2 x float> poison, float %80, i64 0
  %113 = shufflevector <2 x float> %112, <2 x float> poison, <2 x i32> zeroinitializer
  %114 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %44, <2 x float> %113, <2 x float> %111)
  %115 = insertelement <2 x float> poison, float %84, i64 0
  %116 = shufflevector <2 x float> %115, <2 x float> poison, <2 x i32> zeroinitializer
  %117 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %43, <2 x float> %116, <2 x float> %114)
  %mul7.i87.i118 = fmul float %82, %94
  %118 = tail call float @llvm.fmuladd.f32(float %95, float %80, float %mul7.i87.i118)
  %119 = tail call float @llvm.fmuladd.f32(float %add13.i198217.lcssa, float %84, float %118)
  %m_scl = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7
  store <2 x float> %93, ptr %m_scl, align 8
  %ref.tmp42.sroa.5.0.m_scl.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 0, i32 0, i64 2
  store float %97, ptr %ref.tmp42.sroa.5.0.m_scl.sroa_idx, align 8, !tbaa.struct !165
  %ref.tmp42.sroa.6.0.m_scl.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 0, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp42.sroa.6.0.m_scl.sroa_idx, align 4, !tbaa.struct !318
  %arrayidx7.i131 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 1
  store <2 x float> %106, ptr %arrayidx7.i131, align 8
  %ref.tmp42.sroa.10.16.arrayidx7.i131.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 1, i32 0, i64 2
  store float %108, ptr %ref.tmp42.sroa.10.16.arrayidx7.i131.sroa_idx, align 8, !tbaa.struct !165
  %ref.tmp42.sroa.11.16.arrayidx7.i131.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 1, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp42.sroa.11.16.arrayidx7.i131.sroa_idx, align 4, !tbaa.struct !318
  %arrayidx11.i133 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 2
  store <2 x float> %117, ptr %arrayidx11.i133, align 8
  %ref.tmp42.sroa.15.32.arrayidx11.i133.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 2, i32 0, i64 2
  store float %119, ptr %ref.tmp42.sroa.15.32.arrayidx11.i133.sroa_idx, align 8, !tbaa.struct !165
  %ref.tmp42.sroa.16.32.arrayidx11.i133.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 2, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp42.sroa.16.32.arrayidx11.i133.sroa_idx, align 4, !tbaa.struct !318
  %maxvolume = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 19
  %120 = load float, ptr %maxvolume, align 4
  %cmp46 = fcmp ogt float %120, 1.000000e+00
  br i1 %cmp46, label %if.then47, label %if.end

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %add13.i198217219 = phi float [ 0x3E98000000000000, %for.body.lr.ph ], [ %add13.i198, %for.body ]
  %121 = phi <2 x float> [ zeroinitializer, %for.body.lr.ph ], [ %147, %for.body ]
  %122 = phi <2 x float> [ %36, %for.body.lr.ph ], [ %140, %for.body ]
  %123 = phi <2 x float> [ %37, %for.body.lr.ph ], [ %143, %for.body ]
  %124 = phi <2 x float> [ %38, %for.body.lr.ph ], [ %136, %for.body ]
  %arrayidx.i134 = getelementptr inbounds float, ptr %31, i64 %indvars.iv
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %32, i64 %indvars.iv, i32 1
  %arrayidx11.i140 = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %125 = load float, ptr %arrayidx11.i140, align 4, !tbaa !137
  %sub14.i = fsub float %125, %com.sroa.6.8.vec.extract
  %126 = load float, ptr %arrayidx.i134, align 4, !tbaa !137
  %mul8.i.i145 = fmul float %126, %sub14.i
  %arrayidx.i148 = getelementptr inbounds %class.btVector3, ptr %33, i64 %indvars.iv
  %arrayidx7.i.i152 = getelementptr inbounds [4 x float], ptr %arrayidx.i148, i64 0, i64 2
  %127 = load float, ptr %arrayidx7.i.i152, align 4, !tbaa !137
  %128 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %129 = fsub <2 x float> %128, %retval.sroa.0.1.i
  %130 = insertelement <2 x float> poison, float %126, i64 0
  %131 = shufflevector <2 x float> %130, <2 x float> poison, <2 x i32> zeroinitializer
  %132 = fmul <2 x float> %129, %131
  %133 = insertelement <2 x float> poison, float %127, i64 0
  %134 = shufflevector <2 x float> %133, <2 x float> poison, <2 x i32> zeroinitializer
  %135 = fmul <2 x float> %132, %134
  %136 = fadd <2 x float> %135, %124
  %137 = load <2 x float>, ptr %arrayidx.i148, align 4, !tbaa !137
  %138 = shufflevector <2 x float> %132, <2 x float> poison, <2 x i32> zeroinitializer
  %139 = fmul <2 x float> %138, %137
  %140 = fadd <2 x float> %139, %122
  %141 = shufflevector <2 x float> %132, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %142 = fmul <2 x float> %141, %137
  %143 = fadd <2 x float> %142, %123
  %144 = insertelement <2 x float> poison, float %mul8.i.i145, i64 0
  %145 = shufflevector <2 x float> %144, <2 x float> poison, <2 x i32> zeroinitializer
  %146 = fmul <2 x float> %145, %137
  %mul8.i.i185 = fmul float %mul8.i.i145, %127
  %147 = fadd <2 x float> %146, %121
  %add13.i198 = fadd float %mul8.i.i185, %add13.i198217219
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.for.cond.cleanup_crit_edge, label %for.body

if.then47:                                        ; preds = %for.cond.cleanup
  %148 = fneg float %108
  %149 = extractelement <2 x float> %117, i64 1
  %neg.i.i.i = fmul float %149, %148
  %150 = extractelement <2 x float> %106, i64 1
  %151 = tail call float @llvm.fmuladd.f32(float %150, float %119, float %neg.i.i.i)
  %152 = extractelement <2 x float> %106, i64 0
  %153 = fneg float %152
  %neg23.i.i.i = fmul float %119, %153
  %154 = extractelement <2 x float> %117, i64 0
  %155 = tail call float @llvm.fmuladd.f32(float %108, float %154, float %neg23.i.i.i)
  %156 = extractelement <2 x float> %93, i64 1
  %mul24.i.i.i = fmul float %155, %156
  %157 = extractelement <2 x float> %93, i64 0
  %158 = tail call float @llvm.fmuladd.f32(float %157, float %151, float %mul24.i.i.i)
  %159 = fneg float %150
  %neg36.i.i.i = fmul float %154, %159
  %160 = tail call float @llvm.fmuladd.f32(float %152, float %149, float %neg36.i.i.i)
  %161 = tail call float @llvm.fmuladd.f32(float %97, float %160, float %158)
  %div = fdiv float 1.000000e+00, %161
  %cmp.i = fcmp olt float %div, 1.000000e+00
  %cmp1.i = fcmp ogt float %div, %120
  %..i = select i1 %cmp1.i, float %120, float %div
  %cond5.i = select i1 %cmp.i, float 1.000000e+00, float %..i
  %162 = insertelement <2 x float> poison, float %cond5.i, i64 0
  %163 = shufflevector <2 x float> %162, <2 x float> poison, <2 x i32> zeroinitializer
  %164 = fmul <2 x float> %93, %163
  %mul8.i.i206 = fmul float %97, %cond5.i
  %retval.sroa.3.12.vec.insert.i.i209 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i206, i64 0
  %165 = fmul <2 x float> %106, %163
  %mul8.i.1.i = fmul float %108, %cond5.i
  %retval.sroa.3.12.vec.insert.i.1.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.1.i, i64 0
  %166 = fmul <2 x float> %117, %163
  %mul8.i.2.i = fmul float %119, %cond5.i
  %retval.sroa.3.12.vec.insert.i.2.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.2.i, i64 0
  store <2 x float> %164, ptr %m_scl, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i209, ptr %ref.tmp42.sroa.5.0.m_scl.sroa_idx, align 8, !tbaa.struct !165
  store <2 x float> %165, ptr %arrayidx7.i131, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.1.i, ptr %ref.tmp42.sroa.10.16.arrayidx7.i131.sroa_idx, align 8, !tbaa.struct !165
  store <2 x float> %166, ptr %arrayidx11.i133, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.2.i, ptr %ref.tmp42.sroa.15.32.arrayidx11.i133.sroa_idx, align 8, !tbaa.struct !165
  br label %if.end

if.end:                                           ; preds = %if.then47, %for.cond.cleanup
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %s) #38
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %r) #38
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %Apq) #38
  br label %if.end59

if.end59:                                         ; preds = %if.end, %entry
  ret void
}

declare void @_ZN6btDbvt19optimizeIncrementalEi(ptr noundef nonnull align 8 dereferenceable(64), i32 noundef) local_unnamed_addr #1

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody16solveConstraintsEv(ptr noundef nonnull align 8 dereferenceable(1496) %this) local_unnamed_addr #0 align 2 {
entry:
  %ra = alloca %class.btVector3, align 8
  %ref.tmp20 = alloca %class.btMatrix3x3, align 4
  tail call void @_ZN10btSoftBody13applyClustersEb(ptr noundef nonnull align 8 dereferenceable(1496) %this, i1 noundef zeroext false)
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !92
  %cmp371 = icmp sgt i32 %0, 0
  br i1 %cmp371, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !91
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 1
  %arrayidx = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 1, i64 1
  %2 = load ptr, ptr %arrayidx, align 8, !tbaa !219
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 2
  %3 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_q6 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 2
  %4 = load <2 x float>, ptr %m_q, align 4, !tbaa !137
  %5 = load <2 x float>, ptr %m_q6, align 4, !tbaa !137
  %6 = fsub <2 x float> %4, %5
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 2, i32 0, i64 2
  %7 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 2, i32 0, i64 2
  %8 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %7, %8
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i, i64 0
  %m_c3 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 8
  store <2 x float> %6, ptr %m_c3, align 4, !tbaa.struct !163
  %ref.tmp.sroa.4.0.m_c3.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 8, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %ref.tmp.sroa.4.0.m_c3.sroa_idx, align 4, !tbaa.struct !165
  %9 = fmul <2 x float> %6, %6
  %mul8.i.i = extractelement <2 x float> %9, i64 1
  %10 = extractelement <2 x float> %6, i64 0
  %11 = tail call float @llvm.fmuladd.f32(float %10, float %10, float %mul8.i.i)
  %12 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub14.i, float %11)
  %m_c0 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 5
  %13 = load float, ptr %m_c0, align 8, !tbaa !301
  %mul = fmul float %13, %12
  %div = fdiv float 1.000000e+00, %mul
  %m_c2 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 7
  store float %div, ptr %m_c2, align 8, !tbaa !451
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %m_size.i256 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 2
  %14 = load i32, ptr %m_size.i256, align 4, !tbaa !104
  %cmp12373 = icmp sgt i32 %14, 0
  br i1 %cmp12373, label %for.body13.lr.ph, label %for.end36

for.body13.lr.ph:                                 ; preds = %for.end
  %m_data.i257 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 5
  %15 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ra, i64 0, i32 1
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3
  %arrayidx5.i268 = getelementptr inbounds [3 x %class.btVector3], ptr %ref.tmp20, i64 0, i64 1
  %arrayidx9.i = getelementptr inbounds [3 x %class.btVector3], ptr %ref.tmp20, i64 0, i64 2
  %wide.trip.count401 = zext i32 %14 to i64
  br label %for.body13

for.body13:                                       ; preds = %for.body13.lr.ph, %for.body13
  %indvars.iv398 = phi i64 [ 0, %for.body13.lr.ph ], [ %indvars.iv.next399, %for.body13 ]
  %16 = load ptr, ptr %m_data.i257, align 8, !tbaa !103
  %arrayidx.i259 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %16, i64 %indvars.iv398
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ra) #38
  %m_body = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %16, i64 %indvars.iv398, i32 2
  %17 = load ptr, ptr %m_body, align 8, !tbaa !245
  %m_worldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %17, i64 0, i32 1
  %m_local = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %16, i64 %indvars.iv398, i32 1
  %18 = load float, ptr %m_local, align 4, !tbaa !137
  %arrayidx5.i.i260 = getelementptr inbounds %class.btCollisionObject, ptr %17, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, i64 1
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %m_local, i64 0, i64 1
  %19 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %arrayidx10.i.i262 = getelementptr inbounds %class.btCollisionObject, ptr %17, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i = getelementptr inbounds [4 x float], ptr %m_local, i64 0, i64 2
  %20 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %arrayidx.i.i = getelementptr inbounds %class.btCollisionObject, ptr %17, i64 0, i32 1, i32 0, i32 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds %class.btCollisionObject, ptr %17, i64 0, i32 1, i32 0, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %class.btCollisionObject, ptr %17, i64 0, i32 1, i32 0, i32 0, i64 1, i32 0, i64 2
  %21 = load float, ptr %m_worldTransform.i, align 4, !tbaa !137
  %22 = load float, ptr %arrayidx5.i.i260, align 4, !tbaa !137
  %23 = load float, ptr %arrayidx10.i.i262, align 4, !tbaa !137
  %24 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %25 = load float, ptr %arrayidx5.i12.i, align 4, !tbaa !137
  %26 = insertelement <2 x float> poison, float %19, i64 0
  %27 = shufflevector <2 x float> %26, <2 x float> poison, <2 x i32> zeroinitializer
  %28 = insertelement <2 x float> poison, float %22, i64 0
  %29 = insertelement <2 x float> %28, float %25, i64 1
  %30 = fmul <2 x float> %27, %29
  %31 = insertelement <2 x float> poison, float %21, i64 0
  %32 = insertelement <2 x float> %31, float %24, i64 1
  %33 = insertelement <2 x float> poison, float %18, i64 0
  %34 = shufflevector <2 x float> %33, <2 x float> poison, <2 x i32> zeroinitializer
  %35 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %32, <2 x float> %34, <2 x float> %30)
  %36 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %37 = insertelement <2 x float> poison, float %23, i64 0
  %38 = insertelement <2 x float> %37, float %36, i64 1
  %39 = insertelement <2 x float> poison, float %20, i64 0
  %40 = shufflevector <2 x float> %39, <2 x float> poison, <2 x i32> zeroinitializer
  %41 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %38, <2 x float> %40, <2 x float> %35)
  %arrayidx.i17.i = getelementptr inbounds %class.btCollisionObject, ptr %17, i64 0, i32 1, i32 0, i32 0, i64 2
  %42 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %class.btCollisionObject, ptr %17, i64 0, i32 1, i32 0, i32 0, i64 2, i32 0, i64 1
  %43 = load float, ptr %arrayidx5.i18.i, align 4, !tbaa !137
  %mul8.i20.i = fmul float %19, %43
  %44 = tail call float @llvm.fmuladd.f32(float %42, float %18, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds %class.btCollisionObject, ptr %17, i64 0, i32 1, i32 0, i32 0, i64 2, i32 0, i64 2
  %45 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %46 = tail call float @llvm.fmuladd.f32(float %45, float %20, float %44)
  %retval.sroa.3.12.vec.insert.i265 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %46, i64 0
  store <2 x float> %41, ptr %ra, align 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i265, ptr %15, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %ref.tmp20) #38
  %47 = load float, ptr %m_sst, align 8, !tbaa !420
  %48 = load ptr, ptr %arrayidx.i259, align 8, !tbaa !234
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %48, i64 0, i32 6
  %49 = load float, ptr %m_im, align 8, !tbaa !175
  %m_inverseMass.i = getelementptr inbounds %class.btRigidBody, ptr %17, i64 0, i32 4
  %50 = load float, ptr %m_inverseMass.i, align 8, !tbaa !452
  %m_invInertiaTensorWorld.i = getelementptr inbounds %class.btRigidBody, ptr %17, i64 0, i32 1
  call fastcc void @_ZL13ImpulseMatrixfffRK11btMatrix3x3RK9btVector3(ptr noalias nonnull align 4 %ref.tmp20, float noundef %47, float noundef %49, float noundef %50, ptr noundef nonnull align 4 dereferenceable(48) %m_invInertiaTensorWorld.i, ptr noundef nonnull align 4 dereferenceable(16) %ra)
  %m_c025 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %16, i64 %indvars.iv398, i32 3
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %m_c025, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp20, i64 16, i1 false), !tbaa.struct !163
  %arrayidx7.i269 = getelementptr inbounds [3 x %class.btVector3], ptr %m_c025, i64 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx7.i269, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i268, i64 16, i1 false), !tbaa.struct !163
  %arrayidx11.i270 = getelementptr inbounds [3 x %class.btVector3], ptr %m_c025, i64 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx11.i270, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx9.i, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %ref.tmp20) #38
  %m_c1 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %16, i64 %indvars.iv398, i32 4
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_c1, ptr noundef nonnull align 8 dereferenceable(16) %ra, i64 16, i1 false), !tbaa.struct !163
  %51 = load float, ptr %m_sst, align 8, !tbaa !420
  %52 = load float, ptr %m_im, align 8, !tbaa !175
  %mul31 = fmul float %51, %52
  %m_c232 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %16, i64 %indvars.iv398, i32 5
  store float %mul31, ptr %m_c232, align 8, !tbaa !456
  tail call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %17, i1 noundef zeroext false)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ra) #38
  %indvars.iv.next399 = add nuw nsw i64 %indvars.iv398, 1
  %exitcond402.not = icmp eq i64 %indvars.iv.next399, %wide.trip.count401
  br i1 %exitcond402.not, label %for.end36, label %for.body13

for.end36:                                        ; preds = %for.body13, %for.end
  %viterations = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 21
  %53 = load i32, ptr %viterations, align 4, !tbaa !457
  %cmp37 = icmp sgt i32 %53, 0
  br i1 %cmp37, label %for.cond43.preheader.lr.ph, label %if.end

for.cond43.preheader.lr.ph:                       ; preds = %for.end36
  %m_size.i272 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 2
  %m_data.i273 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 5
  %54 = load i32, ptr %m_size.i272, align 4, !tbaa !22
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %for.cond43.preheader, label %for.cond.cleanup

for.cond43.preheader:                             ; preds = %for.cond43.preheader.lr.ph, %for.cond.cleanup47
  %56 = phi i32 [ %59, %for.cond.cleanup47 ], [ %53, %for.cond43.preheader.lr.ph ]
  %57 = phi i32 [ %60, %for.cond.cleanup47 ], [ %54, %for.cond43.preheader.lr.ph ]
  %isolve.0378 = phi i32 [ %inc57, %for.cond.cleanup47 ], [ 0, %for.cond43.preheader.lr.ph ]
  %cmp46375 = icmp sgt i32 %57, 0
  br i1 %cmp46375, label %for.body48, label %for.cond.cleanup47

for.cond.cleanup:                                 ; preds = %for.cond.cleanup47, %for.cond43.preheader.lr.ph
  %m_size.i271 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %58 = load i32, ptr %m_size.i271, align 4, !tbaa !88
  %cmp61379 = icmp sgt i32 %58, 0
  br i1 %cmp61379, label %for.body62.lr.ph, label %if.end

for.body62.lr.ph:                                 ; preds = %for.cond.cleanup
  %m_data.i276 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %m_sst68 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3
  %wide.trip.count409 = zext i32 %58 to i64
  br label %for.body62

for.cond.cleanup47.loopexit:                      ; preds = %for.body48
  %.pre = load i32, ptr %viterations, align 4, !tbaa !457
  br label %for.cond.cleanup47

for.cond.cleanup47:                               ; preds = %for.cond.cleanup47.loopexit, %for.cond43.preheader
  %59 = phi i32 [ %.pre, %for.cond.cleanup47.loopexit ], [ %56, %for.cond43.preheader ]
  %60 = phi i32 [ %63, %for.cond.cleanup47.loopexit ], [ %57, %for.cond43.preheader ]
  %inc57 = add nuw nsw i32 %isolve.0378, 1
  %cmp41 = icmp slt i32 %inc57, %59
  br i1 %cmp41, label %for.cond43.preheader, label %for.cond.cleanup, !llvm.loop !458

for.body48:                                       ; preds = %for.cond43.preheader, %for.body48
  %indvars.iv403 = phi i64 [ %indvars.iv.next404, %for.body48 ], [ 0, %for.cond43.preheader ]
  %61 = load ptr, ptr %m_data.i273, align 8, !tbaa !21
  %arrayidx.i275 = getelementptr inbounds i32, ptr %61, i64 %indvars.iv403
  %62 = load i32, ptr %arrayidx.i275, align 4, !tbaa !202
  %cond.i = icmp eq i32 %62, 0
  %_ZN10btSoftBody12VSolve_LinksEPS_f..i = select i1 %cond.i, ptr @_ZN10btSoftBody12VSolve_LinksEPS_f, ptr null
  tail call void %_ZN10btSoftBody12VSolve_LinksEPS_f..i(ptr noundef nonnull %this, float noundef 1.000000e+00), !callees !460
  %indvars.iv.next404 = add nuw nsw i64 %indvars.iv403, 1
  %63 = load i32, ptr %m_size.i272, align 4, !tbaa !22
  %64 = sext i32 %63 to i64
  %cmp46 = icmp slt i64 %indvars.iv.next404, %64
  br i1 %cmp46, label %for.body48, label %for.cond.cleanup47.loopexit

for.body62:                                       ; preds = %for.body62.lr.ph, %for.body62
  %indvars.iv406 = phi i64 [ 0, %for.body62.lr.ph ], [ %indvars.iv.next407, %for.body62 ]
  %65 = load ptr, ptr %m_data.i276, align 8, !tbaa !87
  %m_q66 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %65, i64 %indvars.iv406, i32 2
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %65, i64 %indvars.iv406, i32 3
  %66 = load float, ptr %m_sst68, align 8, !tbaa !137
  %arrayidx7.i279 = getelementptr inbounds [4 x float], ptr %m_v, i64 0, i64 2
  %67 = load float, ptr %arrayidx7.i279, align 4, !tbaa !137
  %mul8.i = fmul float %66, %67
  %68 = load <2 x float>, ptr %m_v, align 4, !tbaa !137
  %69 = insertelement <2 x float> poison, float %66, i64 0
  %70 = shufflevector <2 x float> %69, <2 x float> poison, <2 x i32> zeroinitializer
  %71 = fmul <2 x float> %70, %68
  %72 = load <2 x float>, ptr %m_q66, align 4, !tbaa !137
  %73 = fadd <2 x float> %71, %72
  %arrayidx11.i287 = getelementptr inbounds [4 x float], ptr %m_q66, i64 0, i64 2
  %74 = load float, ptr %arrayidx11.i287, align 4, !tbaa !137
  %add14.i = fadd float %mul8.i, %74
  %retval.sroa.3.12.vec.insert.i291 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i, i64 0
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %65, i64 %indvars.iv406, i32 1
  store <2 x float> %73, ptr %m_x, align 8, !tbaa.struct !163
  %ref.tmp65.sroa.4.0.m_x.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %65, i64 %indvars.iv406, i32 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i291, ptr %ref.tmp65.sroa.4.0.m_x.sroa_idx, align 8, !tbaa.struct !165
  %indvars.iv.next407 = add nuw nsw i64 %indvars.iv406, 1
  %exitcond410.not = icmp eq i64 %indvars.iv.next407, %wide.trip.count409
  br i1 %exitcond410.not, label %if.end, label %for.body62

if.end:                                           ; preds = %for.body62, %for.cond.cleanup, %for.end36
  %piterations = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 22
  %75 = load i32, ptr %piterations, align 8, !tbaa !461
  %cmp78 = icmp sgt i32 %75, 0
  br i1 %cmp78, label %for.body86.lr.ph, label %if.end135

for.body86.lr.ph:                                 ; preds = %if.end
  %m_size.i295 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 2
  %m_data.i296 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 5
  %.pre432 = load i32, ptr %m_size.i295, align 4, !tbaa !28
  br label %for.body86

for.cond.cleanup85:                               ; preds = %for.cond.cleanup96
  %isdt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3, i32 1
  %76 = load float, ptr %isdt, align 4, !tbaa !421
  %kDP = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 2
  %77 = load float, ptr %kDP, align 8, !tbaa !462
  %sub = fsub float 1.000000e+00, %77
  %mul110 = fmul float %76, %sub
  %m_size.i294 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %78 = load i32, ptr %m_size.i294, align 4, !tbaa !88
  %cmp114385 = icmp sgt i32 %78, 0
  br i1 %cmp114385, label %for.body115.lr.ph, label %if.end135

for.body115.lr.ph:                                ; preds = %for.cond.cleanup85
  %m_data.i299 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %wide.trip.count417 = zext i32 %78 to i64
  %79 = insertelement <2 x float> poison, float %mul110, i64 0
  %80 = shufflevector <2 x float> %79, <2 x float> poison, <2 x i32> zeroinitializer
  br label %for.body115

for.body86:                                       ; preds = %for.body86.lr.ph, %for.cond.cleanup96
  %81 = phi i32 [ %75, %for.body86.lr.ph ], [ %83, %for.cond.cleanup96 ]
  %82 = phi i32 [ %.pre432, %for.body86.lr.ph ], [ %84, %for.cond.cleanup96 ]
  %isolve80.0384 = phi i32 [ 0, %for.body86.lr.ph ], [ %inc106, %for.cond.cleanup96 ]
  %conv = sitofp i32 %isolve80.0384 to float
  %conv89 = sitofp i32 %81 to float
  %div90 = fdiv float %conv, %conv89
  %cmp95381 = icmp sgt i32 %82, 0
  br i1 %cmp95381, label %for.body97, label %for.cond.cleanup96

for.cond.cleanup96.loopexit:                      ; preds = %for.body97
  %.pre433 = load i32, ptr %piterations, align 8, !tbaa !461
  br label %for.cond.cleanup96

for.cond.cleanup96:                               ; preds = %for.cond.cleanup96.loopexit, %for.body86
  %83 = phi i32 [ %.pre433, %for.cond.cleanup96.loopexit ], [ %81, %for.body86 ]
  %84 = phi i32 [ %88, %for.cond.cleanup96.loopexit ], [ %82, %for.body86 ]
  %inc106 = add nuw nsw i32 %isolve80.0384, 1
  %cmp84 = icmp slt i32 %inc106, %83
  br i1 %cmp84, label %for.body86, label %for.cond.cleanup85

for.body97:                                       ; preds = %for.body86, %for.body97
  %indvars.iv411 = phi i64 [ %indvars.iv.next412, %for.body97 ], [ 0, %for.body86 ]
  %85 = load ptr, ptr %m_data.i296, align 8, !tbaa !27
  %arrayidx.i298 = getelementptr inbounds i32, ptr %85, i64 %indvars.iv411
  %86 = load i32, ptr %arrayidx.i298, align 4, !tbaa !185
  %87 = sext i32 %86 to i64
  %switch.gep = getelementptr inbounds [4 x ptr], ptr @switch.table._ZN10btSoftBody11staticSolveEi, i64 0, i64 %87
  %switch.load = load ptr, ptr %switch.gep, align 8
  tail call void %switch.load(ptr noundef nonnull %this, float noundef 1.000000e+00, float noundef %div90), !callees !463
  %indvars.iv.next412 = add nuw nsw i64 %indvars.iv411, 1
  %88 = load i32, ptr %m_size.i295, align 4, !tbaa !28
  %89 = sext i32 %88 to i64
  %cmp95 = icmp slt i64 %indvars.iv.next412, %89
  br i1 %cmp95, label %for.body97, label %for.cond.cleanup96.loopexit

for.body115:                                      ; preds = %for.body115.lr.ph, %for.body115
  %indvars.iv414 = phi i64 [ 0, %for.body115.lr.ph ], [ %indvars.iv.next415, %for.body115 ]
  %90 = load ptr, ptr %m_data.i299, align 8, !tbaa !87
  %m_x121 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %90, i64 %indvars.iv414, i32 1
  %m_q122 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %90, i64 %indvars.iv414, i32 2
  %arrayidx11.i306 = getelementptr inbounds [4 x float], ptr %m_x121, i64 0, i64 2
  %91 = load float, ptr %arrayidx11.i306, align 4, !tbaa !137
  %arrayidx13.i307 = getelementptr inbounds [4 x float], ptr %m_q122, i64 0, i64 2
  %92 = load float, ptr %arrayidx13.i307, align 4, !tbaa !137
  %sub14.i308 = fsub float %91, %92
  %93 = load <2 x float>, ptr %m_x121, align 4, !tbaa !137
  %94 = load <2 x float>, ptr %m_q122, align 4, !tbaa !137
  %95 = fsub <2 x float> %93, %94
  %96 = fmul <2 x float> %80, %95
  %mul8.i318 = fmul float %mul110, %sub14.i308
  %retval.sroa.3.12.vec.insert.i321 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i318, i64 0
  %m_v127 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %90, i64 %indvars.iv414, i32 3
  store <2 x float> %96, ptr %m_v127, align 8, !tbaa.struct !163
  %ref.tmp119.sroa.4.0.m_v127.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %90, i64 %indvars.iv414, i32 3, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i321, ptr %ref.tmp119.sroa.4.0.m_v127.sroa_idx, align 8, !tbaa.struct !165
  %m_f = getelementptr inbounds %"struct.btSoftBody::Node", ptr %90, i64 %indvars.iv414, i32 4
  %indvars.iv.next415 = add nuw nsw i64 %indvars.iv414, 1
  %exitcond418.not = icmp eq i64 %indvars.iv.next415, %wide.trip.count417
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_f, i8 0, i64 16, i1 false)
  br i1 %exitcond418.not, label %if.end135, label %for.body115

if.end135:                                        ; preds = %for.body115, %for.cond.cleanup85, %if.end
  %diterations = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 23
  %97 = load i32, ptr %diterations, align 4, !tbaa !464
  %cmp137 = icmp sgt i32 %97, 0
  br i1 %cmp137, label %if.then138, label %if.end203

if.then138:                                       ; preds = %if.end135
  %kVCF = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 1
  %98 = load float, ptr %kVCF, align 4, !tbaa !136
  %isdt141 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3, i32 1
  %99 = load float, ptr %isdt141, align 4, !tbaa !421
  %mul142 = fmul float %98, %99
  %m_size.i327 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %100 = load i32, ptr %m_size.i327, align 4, !tbaa !88
  %cmp146387 = icmp sgt i32 %100, 0
  br i1 %cmp146387, label %for.body147.lr.ph, label %for.cond163.preheader.lr.ph

for.body147.lr.ph:                                ; preds = %if.then138
  %m_data.i328 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %wide.trip.count422 = zext i32 %100 to i64
  %xtraiter = and i64 %wide.trip.count422, 1
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %for.cond156.preheader.unr-lcssa, label %for.body147.lr.ph.new

for.body147.lr.ph.new:                            ; preds = %for.body147.lr.ph
  %unroll_iter = and i64 %wide.trip.count422, 4294967294
  br label %for.body147

for.cond156.preheader.unr-lcssa:                  ; preds = %for.body147, %for.body147.lr.ph
  %indvars.iv419.unr = phi i64 [ 0, %for.body147.lr.ph ], [ %indvars.iv.next420.1, %for.body147 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond156.preheader, label %for.body147.epil

for.body147.epil:                                 ; preds = %for.cond156.preheader.unr-lcssa
  %102 = load ptr, ptr %m_data.i328, align 8, !tbaa !87
  %m_x151.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %102, i64 %indvars.iv419.unr, i32 1
  %m_q152.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %102, i64 %indvars.iv419.unr, i32 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_q152.epil, ptr noundef nonnull align 8 dereferenceable(16) %m_x151.epil, i64 16, i1 false), !tbaa.struct !163
  br label %for.cond156.preheader

for.cond156.preheader:                            ; preds = %for.cond156.preheader.unr-lcssa, %for.body147.epil
  %.pre434 = load i32, ptr %diterations, align 4, !tbaa !464
  %cmp159391 = icmp sgt i32 %.pre434, 0
  br i1 %cmp159391, label %for.cond163.preheader.lr.ph, label %for.cond.cleanup160

for.cond163.preheader.lr.ph:                      ; preds = %if.then138, %for.cond156.preheader
  %103 = phi i32 [ %.pre434, %for.cond156.preheader ], [ %97, %if.then138 ]
  %m_size.i332 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 2
  %m_data.i333 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 5
  %104 = load i32, ptr %m_size.i332, align 4, !tbaa !28
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %for.cond163.preheader, label %for.cond.cleanup160

for.body147:                                      ; preds = %for.body147, %for.body147.lr.ph.new
  %indvars.iv419 = phi i64 [ 0, %for.body147.lr.ph.new ], [ %indvars.iv.next420.1, %for.body147 ]
  %niter = phi i64 [ 0, %for.body147.lr.ph.new ], [ %niter.next.1, %for.body147 ]
  %106 = load ptr, ptr %m_data.i328, align 8, !tbaa !87
  %m_x151 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %106, i64 %indvars.iv419, i32 1
  %m_q152 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %106, i64 %indvars.iv419, i32 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_q152, ptr noundef nonnull align 8 dereferenceable(16) %m_x151, i64 16, i1 false), !tbaa.struct !163
  %indvars.iv.next420 = or i64 %indvars.iv419, 1
  %107 = load ptr, ptr %m_data.i328, align 8, !tbaa !87
  %m_x151.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %107, i64 %indvars.iv.next420, i32 1
  %m_q152.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %107, i64 %indvars.iv.next420, i32 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_q152.1, ptr noundef nonnull align 8 dereferenceable(16) %m_x151.1, i64 16, i1 false), !tbaa.struct !163
  %indvars.iv.next420.1 = add nuw nsw i64 %indvars.iv419, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond156.preheader.unr-lcssa, label %for.body147

for.cond163.preheader:                            ; preds = %for.cond163.preheader.lr.ph, %for.cond.cleanup167
  %108 = phi i32 [ %114, %for.cond.cleanup167 ], [ %103, %for.cond163.preheader.lr.ph ]
  %109 = phi i32 [ %115, %for.cond.cleanup167 ], [ %104, %for.cond163.preheader.lr.ph ]
  %idrift.0392 = phi i32 [ %inc177, %for.cond.cleanup167 ], [ 0, %for.cond163.preheader.lr.ph ]
  %cmp166389 = icmp sgt i32 %109, 0
  br i1 %cmp166389, label %for.body168, label %for.cond.cleanup167

for.cond.cleanup160:                              ; preds = %for.cond.cleanup167, %for.cond163.preheader.lr.ph, %for.cond156.preheader
  %110 = load i32, ptr %m_size.i327, align 4, !tbaa !88
  %cmp184393 = icmp sgt i32 %110, 0
  br i1 %cmp184393, label %for.body186.lr.ph, label %if.end203

for.body186.lr.ph:                                ; preds = %for.cond.cleanup160
  %m_data.i342 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %111 = load ptr, ptr %m_data.i342, align 8, !tbaa !87
  %wide.trip.count430 = zext i32 %110 to i64
  %112 = insertelement <2 x float> poison, float %mul142, i64 0
  %113 = shufflevector <2 x float> %112, <2 x float> poison, <2 x i32> zeroinitializer
  br label %for.body186

for.cond.cleanup167.loopexit:                     ; preds = %for.body168
  %.pre435 = load i32, ptr %diterations, align 4, !tbaa !464
  br label %for.cond.cleanup167

for.cond.cleanup167:                              ; preds = %for.cond.cleanup167.loopexit, %for.cond163.preheader
  %114 = phi i32 [ %.pre435, %for.cond.cleanup167.loopexit ], [ %108, %for.cond163.preheader ]
  %115 = phi i32 [ %119, %for.cond.cleanup167.loopexit ], [ %109, %for.cond163.preheader ]
  %inc177 = add nuw nsw i32 %idrift.0392, 1
  %cmp159 = icmp slt i32 %inc177, %114
  br i1 %cmp159, label %for.cond163.preheader, label %for.cond.cleanup160, !llvm.loop !465

for.body168:                                      ; preds = %for.cond163.preheader, %for.body168
  %indvars.iv424 = phi i64 [ %indvars.iv.next425, %for.body168 ], [ 0, %for.cond163.preheader ]
  %116 = load ptr, ptr %m_data.i333, align 8, !tbaa !27
  %arrayidx.i335 = getelementptr inbounds i32, ptr %116, i64 %indvars.iv424
  %117 = load i32, ptr %arrayidx.i335, align 4, !tbaa !185
  %118 = sext i32 %117 to i64
  %switch.gep441 = getelementptr inbounds [4 x ptr], ptr @switch.table._ZN10btSoftBody11staticSolveEi, i64 0, i64 %118
  %switch.load442 = load ptr, ptr %switch.gep441, align 8
  tail call void %switch.load442(ptr noundef nonnull %this, float noundef 1.000000e+00, float noundef 0.000000e+00), !callees !463
  %indvars.iv.next425 = add nuw nsw i64 %indvars.iv424, 1
  %119 = load i32, ptr %m_size.i332, align 4, !tbaa !28
  %120 = sext i32 %119 to i64
  %cmp166 = icmp slt i64 %indvars.iv.next425, %120
  br i1 %cmp166, label %for.body168, label %for.cond.cleanup167.loopexit

for.body186:                                      ; preds = %for.body186.lr.ph, %for.body186
  %indvars.iv427 = phi i64 [ 0, %for.body186.lr.ph ], [ %indvars.iv.next428, %for.body186 ]
  %m_x192 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %111, i64 %indvars.iv427, i32 1
  %m_q193 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %111, i64 %indvars.iv427, i32 2
  %arrayidx11.i349 = getelementptr inbounds [4 x float], ptr %m_x192, i64 0, i64 2
  %121 = load float, ptr %arrayidx11.i349, align 4, !tbaa !137
  %arrayidx13.i350 = getelementptr inbounds [4 x float], ptr %m_q193, i64 0, i64 2
  %122 = load float, ptr %arrayidx13.i350, align 4, !tbaa !137
  %sub14.i351 = fsub float %121, %122
  %mul8.i361 = fmul float %mul142, %sub14.i351
  %m_v198 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %111, i64 %indvars.iv427, i32 3
  %123 = load <2 x float>, ptr %m_x192, align 4, !tbaa !137
  %124 = load <2 x float>, ptr %m_q193, align 4, !tbaa !137
  %125 = fsub <2 x float> %123, %124
  %126 = fmul <2 x float> %113, %125
  %127 = load <2 x float>, ptr %m_v198, align 4, !tbaa !137
  %128 = fadd <2 x float> %126, %127
  store <2 x float> %128, ptr %m_v198, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds [4 x float], ptr %m_v198, i64 0, i64 2
  %129 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %mul8.i361, %129
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %indvars.iv.next428 = add nuw nsw i64 %indvars.iv427, 1
  %exitcond431.not = icmp eq i64 %indvars.iv.next428, %wide.trip.count430
  br i1 %exitcond431.not, label %if.end203, label %for.body186

if.end203:                                        ; preds = %for.body186, %for.cond.cleanup160, %if.end135
  tail call void @_ZN10btSoftBody12dampClustersEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  tail call void @_ZN10btSoftBody13applyClustersEb(ptr noundef nonnull align 8 dereferenceable(1496) %this, i1 noundef zeroext true)
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody13applyClustersEb(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, i1 noundef zeroext %drift) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
invoke.cont3:
  tail call void @_ZN15CProfileManager13Start_ProfileEPKc(ptr noundef nonnull @.str.1)
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %or.cond = icmp sgt i32 %0, 0
  br i1 %or.cond, label %if.then.i.i.i, label %invoke.cont17

if.then.i.i.i:                                    ; preds = %invoke.cont3
  %conv.i.i.i.i = zext i32 %0 to i64
  %mul.i.i.i.i = shl nuw nsw i64 %conv.i.i.i.i, 4
  %call.i.i.i.i235 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
          to label %invoke.cont11 unwind label %ehcleanup179.thread

invoke.cont11:                                    ; preds = %if.then.i.i.i
  tail call void @llvm.memset.p0.i64(ptr align 4 %call.i.i.i.i235, i8 0, i64 %mul.i.i.i.i, i1 false)
  %.pre = load i32, ptr %m_size.i, align 4, !tbaa !88
  %or.cond450 = icmp sgt i32 %.pre, 0
  br i1 %or.cond450, label %if.then.i.i.i249, label %invoke.cont17

if.then.i.i.i249:                                 ; preds = %invoke.cont11
  %conv.i.i.i.i246 = zext i32 %.pre to i64
  %mul.i.i.i.i247 = shl nuw nsw i64 %conv.i.i.i.i246, 2
  %call.i.i.i.i276 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i247, i32 noundef 16)
          to label %for.body10.lr.ph.i269 unwind label %lpad16

for.body10.lr.ph.i269:                            ; preds = %if.then.i.i.i249
  tail call void @llvm.memset.p0.i64(ptr align 4 %call.i.i.i.i276, i8 0, i64 %mul.i.i.i.i247, i1 false), !tbaa !137
  br label %invoke.cont17

invoke.cont17:                                    ; preds = %invoke.cont3, %for.body10.lr.ph.i269, %invoke.cont11
  %deltas.sroa.15431.1489 = phi ptr [ %call.i.i.i.i235, %invoke.cont11 ], [ %call.i.i.i.i235, %for.body10.lr.ph.i269 ], [ null, %invoke.cont3 ]
  %weights.sroa.15420.1 = phi ptr [ null, %invoke.cont11 ], [ %call.i.i.i.i276, %for.body10.lr.ph.i269 ], [ null, %invoke.cont3 ]
  %m_size.i278 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  %1 = load i32, ptr %m_size.i278, align 4, !tbaa !124
  %cmp451 = icmp sgt i32 %1, 0
  br i1 %drift, label %for.cond.preheader, label %if.end40.thread492

for.cond.preheader:                               ; preds = %invoke.cont17
  br i1 %cmp451, label %for.body.lr.ph, label %for.cond146.preheader

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %2 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %wide.trip.count = zext i32 %1 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end ]
  %arrayidx.i = getelementptr inbounds ptr, ptr %2, i64 %indvars.iv
  %3 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %m_ndimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 12
  %4 = load i32, ptr %m_ndimpulses, align 4, !tbaa !322
  %tobool25.not = icmp eq i32 %4, 0
  br i1 %tobool25.not, label %if.end, label %invoke.cont38

invoke.cont38:                                    ; preds = %for.body
  %conv = sitofp i32 %4 to float
  %m_dimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 10
  %div.i = fdiv float 1.000000e+00, %conv
  %5 = load <2 x float>, ptr %m_dimpulses, align 4, !tbaa !137
  %6 = insertelement <2 x float> poison, float %div.i, i64 0
  %7 = shufflevector <2 x float> %6, <2 x float> poison, <2 x i32> zeroinitializer
  %8 = fmul <2 x float> %7, %5
  store <2 x float> %8, ptr %m_dimpulses, align 4, !tbaa !137
  %arrayidx6.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 10, i64 0, i32 0, i64 2
  %9 = load float, ptr %arrayidx6.i.i, align 4, !tbaa !137
  %mul7.i.i = fmul float %div.i, %9
  store float %mul7.i.i, ptr %arrayidx6.i.i, align 4, !tbaa !137
  %arrayidx36 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 10, i64 1
  %10 = load <2 x float>, ptr %arrayidx36, align 4, !tbaa !137
  %11 = fmul <2 x float> %7, %10
  store <2 x float> %11, ptr %arrayidx36, align 4, !tbaa !137
  %arrayidx6.i.i283 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 10, i64 1, i32 0, i64 2
  %12 = load float, ptr %arrayidx6.i.i283, align 4, !tbaa !137
  %mul7.i.i284 = fmul float %div.i, %12
  store float %mul7.i.i284, ptr %arrayidx6.i.i283, align 4, !tbaa !137
  br label %if.end

lpad:                                             ; preds = %if.then3.i.i.i393
  %13 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup183

lpad2:                                            ; preds = %if.then3.i.i.i385
  %14 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup179

ehcleanup179.thread:                              ; preds = %if.then.i.i.i
  %15 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup183

lpad16:                                           ; preds = %if.then.i.i.i249
  %16 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup179

if.end:                                           ; preds = %invoke.cont38, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.end40, label %for.body

if.end40:                                         ; preds = %if.end
  %cmp45455 = icmp sgt i32 %1, 0
  br i1 %cmp45455, label %for.body46.lr.ph, label %for.cond146.preheader

if.end40.thread492:                               ; preds = %invoke.cont17
  br i1 %cmp451, label %for.body46.lr.ph.thread, label %for.cond146.preheader

for.body46.lr.ph.thread:                          ; preds = %if.end40.thread492
  %m_data.i286494 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %17 = load ptr, ptr %m_data.i286494, align 8, !tbaa !123
  %m_data.i305495 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %18 = load ptr, ptr %m_data.i305495, align 8
  %sub.ptr.rhs.cast496 = ptrtoint ptr %18 to i64
  br label %for.body46.preheader

for.body46.lr.ph:                                 ; preds = %if.end40
  %m_data.i286 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %19 = load ptr, ptr %m_data.i286, align 8, !tbaa !123
  %m_data.i305 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %20 = load ptr, ptr %m_data.i305, align 8
  %sub.ptr.rhs.cast = ptrtoint ptr %20 to i64
  br i1 %drift, label %for.body46.us.preheader, label %for.body46.preheader

for.body46.preheader:                             ; preds = %for.body46.lr.ph.thread, %for.body46.lr.ph
  %sub.ptr.rhs.cast497 = phi i64 [ %sub.ptr.rhs.cast496, %for.body46.lr.ph.thread ], [ %sub.ptr.rhs.cast, %for.body46.lr.ph ]
  %21 = phi ptr [ %17, %for.body46.lr.ph.thread ], [ %19, %for.body46.lr.ph ]
  %wide.trip.count469 = zext i32 %1 to i64
  br label %for.body46

for.body46.us.preheader:                          ; preds = %for.body46.lr.ph
  %wide.trip.count479 = zext i32 %1 to i64
  br label %for.body46.us

for.body46.us:                                    ; preds = %for.body46.us.preheader, %if.end141.us
  %indvars.iv476 = phi i64 [ 0, %for.body46.us.preheader ], [ %indvars.iv.next477, %if.end141.us ]
  %arrayidx.i288.us = getelementptr inbounds ptr, ptr %19, i64 %indvars.iv476
  %22 = load ptr, ptr %arrayidx.i288.us, align 8, !tbaa !219
  %m_ndimpulses53.us = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %22, i64 0, i32 12
  %cond.us = load i32, ptr %m_ndimpulses53.us, align 4, !tbaa !140
  %cmp54.us = icmp sgt i32 %cond.us, 0
  br i1 %cmp54.us, label %invoke.cont80.us, label %if.end141.us

invoke.cont80.us:                                 ; preds = %for.body46.us
  %m_dimpulses58.us = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %22, i64 0, i32 10
  %23 = load float, ptr %m_sst, align 8, !tbaa !137
  %arrayidx7.i290.us = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %22, i64 0, i32 10, i64 0, i32 0, i64 2
  %24 = load float, ptr %arrayidx7.i290.us, align 4, !tbaa !137
  %mul8.i.us = fmul float %23, %24
  %arrayidx71.us = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %22, i64 0, i32 10, i64 1
  %25 = load float, ptr %arrayidx71.us, align 4, !tbaa !137
  %mul.i291.us = fmul float %23, %25
  %arrayidx3.i292.us = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %22, i64 0, i32 10, i64 1, i32 0, i64 1
  %26 = load <2 x float>, ptr %m_dimpulses58.us, align 4, !tbaa !137
  %27 = insertelement <2 x float> poison, float %23, i64 0
  %28 = shufflevector <2 x float> %27, <2 x float> poison, <2 x i32> zeroinitializer
  %29 = fmul <2 x float> %28, %26
  %30 = load <2 x float>, ptr %arrayidx3.i292.us, align 4, !tbaa !137
  %31 = fmul <2 x float> %28, %30
  %m_size.i301.us = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %22, i64 0, i32 2
  %32 = load i32, ptr %m_size.i301.us, align 4, !tbaa !319
  %cmp88453.us = icmp sgt i32 %32, 0
  br i1 %cmp88453.us, label %invoke.cont119.lr.ph.us, label %if.end141.us

if.end141.us:                                     ; preds = %invoke.cont119.us, %invoke.cont80.us, %for.body46.us
  %indvars.iv.next477 = add nuw nsw i64 %indvars.iv476, 1
  %exitcond480.not = icmp eq i64 %indvars.iv.next477, %wide.trip.count479
  br i1 %exitcond480.not, label %for.cond146.preheader, label %for.body46.us

invoke.cont119.us:                                ; preds = %invoke.cont119.lr.ph.us, %invoke.cont119.us
  %indvars.iv471 = phi i64 [ 0, %invoke.cont119.lr.ph.us ], [ %indvars.iv.next472, %invoke.cont119.us ]
  %arrayidx.i304.us = getelementptr inbounds ptr, ptr %60, i64 %indvars.iv471
  %33 = load ptr, ptr %arrayidx.i304.us, align 8, !tbaa !219
  %sub.ptr.lhs.cast.us = ptrtoint ptr %33 to i64
  %sub.ptr.sub.us = sub i64 %sub.ptr.lhs.cast.us, %sub.ptr.rhs.cast
  %sub.ptr.div.us = sdiv exact i64 %sub.ptr.sub.us, 120
  %m_x.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %33, i64 0, i32 1
  %arrayidx.i311.us = getelementptr inbounds float, ptr %61, i64 %indvars.iv471
  %34 = load float, ptr %arrayidx.i311.us, align 4, !tbaa !137
  %arrayidx5.i312.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %33, i64 0, i32 1, i32 0, i64 1
  %35 = load float, ptr %arrayidx5.i312.us, align 4, !tbaa !137
  %36 = load float, ptr %arrayidx7.i313.us, align 4, !tbaa !137
  %sub8.i.us = fsub float %35, %36
  %arrayidx11.i.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %33, i64 0, i32 1, i32 0, i64 2
  %sext.us = shl i64 %sub.ptr.div.us, 32
  %idxprom.i341.us = ashr exact i64 %sext.us, 32
  %arrayidx.i342.us = getelementptr inbounds %class.btVector3, ptr %deltas.sroa.15431.1489, i64 %idxprom.i341.us
  %37 = load float, ptr %m_x.us, align 4, !tbaa !137
  %38 = load float, ptr %m_com.us, align 4, !tbaa !137
  %39 = load float, ptr %arrayidx11.i.us, align 4, !tbaa !137
  %40 = load float, ptr %arrayidx13.i314.us, align 4, !tbaa !137
  %41 = insertelement <2 x float> poison, float %39, i64 0
  %42 = insertelement <2 x float> %41, float %37, i64 1
  %43 = insertelement <2 x float> poison, float %40, i64 0
  %44 = insertelement <2 x float> %43, float %38, i64 1
  %45 = fsub <2 x float> %42, %44
  %46 = shufflevector <2 x float> %45, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %47 = insertelement <2 x float> %46, float %sub8.i.us, i64 0
  %48 = fmul <2 x float> %47, %64
  %49 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %31, <2 x float> %45, <2 x float> %48)
  %50 = extractelement <2 x float> %45, i64 1
  %neg30.i.i.us = fmul float %50, %66
  %51 = tail call float @llvm.fmuladd.f32(float %mul.i291.us, float %sub8.i.us, float %neg30.i.i.us)
  %52 = fadd <2 x float> %29, %49
  %add14.i.us = fadd float %mul8.i.us, %51
  %53 = insertelement <2 x float> poison, float %34, i64 0
  %54 = shufflevector <2 x float> %53, <2 x float> poison, <2 x i32> zeroinitializer
  %55 = fmul <2 x float> %54, %52
  %mul8.i334.us = fmul float %34, %add14.i.us
  %56 = load <2 x float>, ptr %arrayidx.i342.us, align 4, !tbaa !137
  %57 = fadd <2 x float> %56, %55
  store <2 x float> %57, ptr %arrayidx.i342.us, align 4, !tbaa !137
  %arrayidx12.i.us = getelementptr inbounds [4 x float], ptr %arrayidx.i342.us, i64 0, i64 2
  %58 = load float, ptr %arrayidx12.i.us, align 4, !tbaa !137
  %add13.i.us = fadd float %mul8.i334.us, %58
  store float %add13.i.us, ptr %arrayidx12.i.us, align 4, !tbaa !137
  %arrayidx.i349.us = getelementptr inbounds float, ptr %weights.sroa.15420.1, i64 %idxprom.i341.us
  %59 = load float, ptr %arrayidx.i349.us, align 4, !tbaa !137
  %add.us = fadd float %34, %59
  store float %add.us, ptr %arrayidx.i349.us, align 4, !tbaa !137
  %indvars.iv.next472 = add nuw nsw i64 %indvars.iv471, 1
  %exitcond475.not = icmp eq i64 %indvars.iv.next472, %wide.trip.count474
  br i1 %exitcond475.not, label %if.end141.us, label %invoke.cont119.us

invoke.cont119.lr.ph.us:                          ; preds = %invoke.cont80.us
  %m_data.i302.us = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %22, i64 0, i32 5
  %60 = load ptr, ptr %m_data.i302.us, align 8, !tbaa !320
  %m_data.i309.us = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %22, i64 0, i32 1, i32 5
  %61 = load ptr, ptr %m_data.i309.us, align 8, !tbaa !39
  %m_com.us = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %22, i64 0, i32 8
  %arrayidx7.i313.us = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %22, i64 0, i32 8, i32 0, i64 1
  %arrayidx13.i314.us = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %22, i64 0, i32 8, i32 0, i64 2
  %62 = shufflevector <2 x float> %31, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %63 = insertelement <2 x float> %62, float %mul.i291.us, i64 1
  %64 = fneg <2 x float> %63
  %65 = extractelement <2 x float> %31, i64 0
  %66 = fneg float %65
  %wide.trip.count474 = zext i32 %32 to i64
  br label %invoke.cont119.us

for.cond146.preheader:                            ; preds = %if.end141, %if.end141.us, %for.cond.preheader, %if.end40.thread492, %if.end40
  br i1 %or.cond, label %for.body150.lr.ph, label %for.end174

for.body150.lr.ph:                                ; preds = %for.cond146.preheader
  %m_data.i370 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %67 = load ptr, ptr %m_data.i370, align 8
  %wide.trip.count484 = zext i32 %0 to i64
  br label %for.body150

for.body46:                                       ; preds = %for.body46.preheader, %if.end141
  %indvars.iv466 = phi i64 [ 0, %for.body46.preheader ], [ %indvars.iv.next467, %if.end141 ]
  %arrayidx.i288 = getelementptr inbounds ptr, ptr %21, i64 %indvars.iv466
  %68 = load ptr, ptr %arrayidx.i288, align 8, !tbaa !219
  %m_nvimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %68, i64 0, i32 11
  %cond = load i32, ptr %m_nvimpulses, align 4, !tbaa !140
  %cmp54 = icmp sgt i32 %cond, 0
  br i1 %cmp54, label %invoke.cont80, label %if.end141

invoke.cont80:                                    ; preds = %for.body46
  %m_vimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %68, i64 0, i32 9
  %69 = load float, ptr %m_sst, align 8, !tbaa !137
  %arrayidx7.i290 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %68, i64 0, i32 9, i64 0, i32 0, i64 2
  %70 = load float, ptr %arrayidx7.i290, align 4, !tbaa !137
  %mul8.i = fmul float %69, %70
  %arrayidx74 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %68, i64 0, i32 9, i64 1
  %71 = load float, ptr %arrayidx74, align 4, !tbaa !137
  %mul.i291 = fmul float %69, %71
  %arrayidx3.i292 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %68, i64 0, i32 9, i64 1, i32 0, i64 1
  %72 = load <2 x float>, ptr %m_vimpulses, align 4, !tbaa !137
  %73 = insertelement <2 x float> poison, float %69, i64 0
  %74 = shufflevector <2 x float> %73, <2 x float> poison, <2 x i32> zeroinitializer
  %75 = fmul <2 x float> %74, %72
  %76 = load <2 x float>, ptr %arrayidx3.i292, align 4, !tbaa !137
  %77 = fmul <2 x float> %74, %76
  %m_size.i301 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %68, i64 0, i32 2
  %78 = load i32, ptr %m_size.i301, align 4, !tbaa !319
  %cmp88453 = icmp sgt i32 %78, 0
  br i1 %cmp88453, label %invoke.cont119.lr.ph, label %if.end141

invoke.cont119.lr.ph:                             ; preds = %invoke.cont80
  %m_data.i302 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %68, i64 0, i32 5
  %79 = load ptr, ptr %m_data.i302, align 8, !tbaa !320
  %m_data.i309 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %68, i64 0, i32 1, i32 5
  %80 = load ptr, ptr %m_data.i309, align 8, !tbaa !39
  %m_com = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %68, i64 0, i32 8
  %arrayidx7.i313 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %68, i64 0, i32 8, i32 0, i64 1
  %arrayidx13.i314 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %68, i64 0, i32 8, i32 0, i64 2
  %81 = shufflevector <2 x float> %77, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %82 = insertelement <2 x float> %81, float %mul.i291, i64 1
  %83 = fneg <2 x float> %82
  %84 = extractelement <2 x float> %77, i64 0
  %85 = fneg float %84
  %wide.trip.count464 = zext i32 %78 to i64
  br label %invoke.cont119

invoke.cont119:                                   ; preds = %invoke.cont119.lr.ph, %invoke.cont119
  %indvars.iv461 = phi i64 [ 0, %invoke.cont119.lr.ph ], [ %indvars.iv.next462, %invoke.cont119 ]
  %arrayidx.i304 = getelementptr inbounds ptr, ptr %79, i64 %indvars.iv461
  %86 = load ptr, ptr %arrayidx.i304, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %86 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast497
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 120
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %86, i64 0, i32 1
  %arrayidx.i311 = getelementptr inbounds float, ptr %80, i64 %indvars.iv461
  %87 = load float, ptr %arrayidx.i311, align 4, !tbaa !137
  %arrayidx5.i312 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %86, i64 0, i32 1, i32 0, i64 1
  %88 = load float, ptr %arrayidx5.i312, align 4, !tbaa !137
  %89 = load float, ptr %arrayidx7.i313, align 4, !tbaa !137
  %sub8.i = fsub float %88, %89
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %86, i64 0, i32 1, i32 0, i64 2
  %sext = shl i64 %sub.ptr.div, 32
  %idxprom.i341 = ashr exact i64 %sext, 32
  %arrayidx.i342 = getelementptr inbounds %class.btVector3, ptr %deltas.sroa.15431.1489, i64 %idxprom.i341
  %90 = load float, ptr %m_x, align 4, !tbaa !137
  %91 = load float, ptr %m_com, align 4, !tbaa !137
  %92 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %93 = load float, ptr %arrayidx13.i314, align 4, !tbaa !137
  %94 = insertelement <2 x float> poison, float %92, i64 0
  %95 = insertelement <2 x float> %94, float %90, i64 1
  %96 = insertelement <2 x float> poison, float %93, i64 0
  %97 = insertelement <2 x float> %96, float %91, i64 1
  %98 = fsub <2 x float> %95, %97
  %99 = shufflevector <2 x float> %98, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %100 = insertelement <2 x float> %99, float %sub8.i, i64 0
  %101 = fmul <2 x float> %100, %83
  %102 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %77, <2 x float> %98, <2 x float> %101)
  %103 = extractelement <2 x float> %98, i64 1
  %neg30.i.i = fmul float %103, %85
  %104 = tail call float @llvm.fmuladd.f32(float %mul.i291, float %sub8.i, float %neg30.i.i)
  %105 = fadd <2 x float> %75, %102
  %add14.i = fadd float %mul8.i, %104
  %106 = insertelement <2 x float> poison, float %87, i64 0
  %107 = shufflevector <2 x float> %106, <2 x float> poison, <2 x i32> zeroinitializer
  %108 = fmul <2 x float> %107, %105
  %mul8.i334 = fmul float %87, %add14.i
  %109 = load <2 x float>, ptr %arrayidx.i342, align 4, !tbaa !137
  %110 = fadd <2 x float> %109, %108
  store <2 x float> %110, ptr %arrayidx.i342, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds [4 x float], ptr %arrayidx.i342, i64 0, i64 2
  %111 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %mul8.i334, %111
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %arrayidx.i349 = getelementptr inbounds float, ptr %weights.sroa.15420.1, i64 %idxprom.i341
  %112 = load float, ptr %arrayidx.i349, align 4, !tbaa !137
  %add = fadd float %87, %112
  store float %add, ptr %arrayidx.i349, align 4, !tbaa !137
  %indvars.iv.next462 = add nuw nsw i64 %indvars.iv461, 1
  %exitcond465.not = icmp eq i64 %indvars.iv.next462, %wide.trip.count464
  br i1 %exitcond465.not, label %if.end141, label %invoke.cont119

if.end141:                                        ; preds = %invoke.cont119, %invoke.cont80, %for.body46
  %indvars.iv.next467 = add nuw nsw i64 %indvars.iv466, 1
  %exitcond470.not = icmp eq i64 %indvars.iv.next467, %wide.trip.count469
  br i1 %exitcond470.not, label %for.cond146.preheader, label %for.body46

for.body150:                                      ; preds = %for.body150.lr.ph, %for.inc172
  %indvars.iv481 = phi i64 [ 0, %for.body150.lr.ph ], [ %indvars.iv.next482, %for.inc172 ]
  %arrayidx.i353 = getelementptr inbounds float, ptr %weights.sroa.15420.1, i64 %indvars.iv481
  %113 = load float, ptr %arrayidx.i353, align 4, !tbaa !137
  %cmp153 = fcmp ogt float %113, 0.000000e+00
  br i1 %cmp153, label %invoke.cont161, label %for.inc172

invoke.cont161:                                   ; preds = %for.body150
  %arrayidx.i356 = getelementptr inbounds %class.btVector3, ptr %deltas.sroa.15431.1489, i64 %indvars.iv481
  %div.i360 = fdiv float 1.000000e+00, %113
  %arrayidx7.i.i364 = getelementptr inbounds [4 x float], ptr %arrayidx.i356, i64 0, i64 2
  %114 = load float, ptr %arrayidx7.i.i364, align 4, !tbaa !137
  %mul8.i.i = fmul float %div.i360, %114
  %m_x167 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %67, i64 %indvars.iv481, i32 1
  %115 = load <2 x float>, ptr %arrayidx.i356, align 4, !tbaa !137
  %116 = insertelement <2 x float> poison, float %div.i360, i64 0
  %117 = shufflevector <2 x float> %116, <2 x float> poison, <2 x i32> zeroinitializer
  %118 = fmul <2 x float> %117, %115
  %119 = load <2 x float>, ptr %m_x167, align 4, !tbaa !137
  %120 = fadd <2 x float> %118, %119
  store <2 x float> %120, ptr %m_x167, align 4, !tbaa !137
  %arrayidx12.i378 = getelementptr inbounds [4 x float], ptr %m_x167, i64 0, i64 2
  %121 = load float, ptr %arrayidx12.i378, align 4, !tbaa !137
  %add13.i379 = fadd float %mul8.i.i, %121
  store float %add13.i379, ptr %arrayidx12.i378, align 4, !tbaa !137
  br label %for.inc172

for.inc172:                                       ; preds = %for.body150, %invoke.cont161
  %indvars.iv.next482 = add nuw nsw i64 %indvars.iv481, 1
  %exitcond485.not = icmp eq i64 %indvars.iv.next482, %wide.trip.count484
  br i1 %exitcond485.not, label %if.then3.i.i.i385, label %for.body150

for.end174:                                       ; preds = %for.cond146.preheader
  %tobool.not.i.i.i381 = icmp eq ptr %weights.sroa.15420.1, null
  br i1 %tobool.not.i.i.i381, label %invoke.cont176, label %if.then3.i.i.i385

if.then3.i.i.i385:                                ; preds = %for.inc172, %for.end174
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %weights.sroa.15420.1)
          to label %invoke.cont176 unwind label %lpad2

invoke.cont176:                                   ; preds = %for.end174, %if.then3.i.i.i385
  %tobool.not.i.i.i389 = icmp eq ptr %deltas.sroa.15431.1489, null
  br i1 %tobool.not.i.i.i389, label %invoke.cont180, label %if.then3.i.i.i393

if.then3.i.i.i393:                                ; preds = %invoke.cont176
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %deltas.sroa.15431.1489)
          to label %invoke.cont180 unwind label %lpad

invoke.cont180:                                   ; preds = %invoke.cont176, %if.then3.i.i.i393
  tail call void @_ZN15CProfileManager12Stop_ProfileEv()
  ret void

ehcleanup179:                                     ; preds = %lpad16, %lpad2
  %deltas.sroa.15431.1490 = phi ptr [ %deltas.sroa.15431.1489, %lpad2 ], [ %call.i.i.i.i235, %lpad16 ]
  %.pn224.pn.pn.pn = phi { ptr, i32 } [ %14, %lpad2 ], [ %16, %lpad16 ]
  %tobool.not.i.i.i408 = icmp eq ptr %deltas.sroa.15431.1490, null
  br i1 %tobool.not.i.i.i408, label %ehcleanup183, label %if.then3.i.i.i412

if.then3.i.i.i412:                                ; preds = %ehcleanup179
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %deltas.sroa.15431.1490)
          to label %ehcleanup183 unwind label %terminate.lpad

ehcleanup183:                                     ; preds = %ehcleanup179, %ehcleanup179.thread, %if.then3.i.i.i412, %lpad
  %.pn224.pn.pn.pn.pn = phi { ptr, i32 } [ %13, %lpad ], [ %15, %ehcleanup179.thread ], [ %.pn224.pn.pn.pn, %ehcleanup179 ], [ %.pn224.pn.pn.pn, %if.then3.i.i.i412 ]
  invoke void @_ZN15CProfileManager12Stop_ProfileEv()
          to label %invoke.cont186 unwind label %terminate.lpad

invoke.cont186:                                   ; preds = %ehcleanup183
  resume { ptr, i32 } %.pn224.pn.pn.pn.pn

terminate.lpad:                                   ; preds = %ehcleanup183, %if.then3.i.i.i412
  %122 = landingpad { ptr, i32 }
          catch ptr null
  %123 = extractvalue { ptr, i32 } %122, 0
  tail call void @__clang_call_terminate(ptr %123) #39
  unreachable
}

; Function Attrs: inlinehint mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal fastcc void @_ZL13ImpulseMatrixfffRK11btMatrix3x3RK9btVector3(ptr noalias nocapture writeonly align 4 %agg.result, float noundef %dt, float noundef %ima, float noundef %imb, ptr nocapture noundef nonnull readonly align 4 dereferenceable(48) %iwi, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %r) unnamed_addr #24 {
entry:
  %div = fdiv float 1.000000e+00, %dt
  %arrayidx.i.i.i = getelementptr inbounds [4 x float], ptr %r, i64 0, i64 2
  %0 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137, !noalias !466
  %fneg.i.i = fneg float %0
  %arrayidx.i27.i.i = getelementptr inbounds [4 x float], ptr %r, i64 0, i64 1
  %1 = load float, ptr %arrayidx.i27.i.i, align 4, !tbaa !137, !noalias !466
  %2 = load float, ptr %r, align 4, !tbaa !137, !noalias !466
  %fneg12.i.i = fneg float %2
  %fneg17.i.i = fneg float %1
  %3 = load float, ptr %iwi, align 4, !tbaa !137, !noalias !471
  %arrayidx4.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iwi, i64 0, i64 1
  %4 = load float, ptr %arrayidx4.i.i.i, align 4, !tbaa !137, !noalias !471
  %mul7.i.i.i = fmul float %4, %fneg.i.i
  %5 = tail call float @llvm.fmuladd.f32(float %3, float 0.000000e+00, float %mul7.i.i.i)
  %arrayidx9.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iwi, i64 0, i64 2
  %6 = load float, ptr %arrayidx9.i.i.i, align 4, !tbaa !137, !noalias !471
  %7 = tail call float @llvm.fmuladd.f32(float %6, float %1, float %5)
  %arrayidx.i.i42.i.i = getelementptr inbounds [4 x float], ptr %iwi, i64 0, i64 1
  %8 = load float, ptr %arrayidx.i.i42.i.i, align 4, !tbaa !137, !noalias !471
  %arrayidx.i14.i43.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iwi, i64 0, i64 1, i32 0, i64 1
  %9 = load float, ptr %arrayidx.i14.i43.i.i, align 4, !tbaa !137, !noalias !471
  %arrayidx.i16.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iwi, i64 0, i64 2, i32 0, i64 1
  %10 = load float, ptr %arrayidx.i16.i.i.i, align 4, !tbaa !137, !noalias !471
  %arrayidx.i.i45.i.i = getelementptr inbounds [4 x float], ptr %iwi, i64 0, i64 2
  %11 = load float, ptr %arrayidx.i.i45.i.i, align 4, !tbaa !137, !noalias !471
  %arrayidx.i14.i46.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iwi, i64 0, i64 1, i32 0, i64 2
  %12 = load float, ptr %arrayidx.i14.i46.i.i, align 4, !tbaa !137, !noalias !471
  %arrayidx.i16.i49.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iwi, i64 0, i64 2, i32 0, i64 2
  %13 = load float, ptr %arrayidx.i16.i49.i.i, align 4, !tbaa !137, !noalias !471
  %mul7.i53.i.i = fmul float %4, 0.000000e+00
  %14 = tail call float @llvm.fmuladd.f32(float %3, float %0, float %mul7.i53.i.i)
  %15 = tail call float @llvm.fmuladd.f32(float %6, float %fneg12.i.i, float %14)
  %mul7.i73.i.i = fmul float %2, %4
  %16 = tail call float @llvm.fmuladd.f32(float %3, float %fneg17.i.i, float %mul7.i73.i.i)
  %17 = tail call float @llvm.fmuladd.f32(float %6, float 0.000000e+00, float %16)
  %mul7.i80.i.i = fmul float %2, %9
  %18 = tail call float @llvm.fmuladd.f32(float %8, float %fneg17.i.i, float %mul7.i80.i.i)
  %19 = tail call float @llvm.fmuladd.f32(float %10, float 0.000000e+00, float %18)
  %mul7.i87.i.i = fmul float %2, %12
  %20 = tail call float @llvm.fmuladd.f32(float %11, float %fneg17.i.i, float %mul7.i87.i.i)
  %21 = tail call float @llvm.fmuladd.f32(float %13, float 0.000000e+00, float %20)
  %mul7.i87.i29.i = fmul float %19, %fneg12.i.i
  %22 = tail call float @llvm.fmuladd.f32(float %1, float %17, float %mul7.i87.i29.i)
  %23 = tail call float @llvm.fmuladd.f32(float %21, float 0.000000e+00, float %22)
  %sub14.i.2.i.i = fsub float %imb, %23
  %add14.i.2.i = fadd float %sub14.i.2.i.i, %ima
  %24 = insertelement <2 x float> poison, float %9, i64 0
  %25 = shufflevector <2 x float> %24, <2 x float> poison, <2 x i32> zeroinitializer
  %26 = insertelement <2 x float> <float 0.000000e+00, float poison>, float %fneg.i.i, i64 1
  %27 = fmul <2 x float> %25, %26
  %28 = insertelement <2 x float> poison, float %8, i64 0
  %29 = shufflevector <2 x float> %28, <2 x float> poison, <2 x i32> zeroinitializer
  %30 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %0, i64 0
  %31 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %29, <2 x float> %30, <2 x float> %27)
  %32 = insertelement <2 x float> poison, float %10, i64 0
  %33 = shufflevector <2 x float> %32, <2 x float> poison, <2 x i32> zeroinitializer
  %34 = insertelement <2 x float> poison, float %fneg12.i.i, i64 0
  %35 = insertelement <2 x float> %34, float %1, i64 1
  %36 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %33, <2 x float> %35, <2 x float> %31)
  %37 = insertelement <2 x float> poison, float %12, i64 0
  %38 = shufflevector <2 x float> %37, <2 x float> poison, <2 x i32> zeroinitializer
  %39 = fmul <2 x float> %38, %26
  %40 = insertelement <2 x float> poison, float %11, i64 0
  %41 = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> zeroinitializer
  %42 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %41, <2 x float> %30, <2 x float> %39)
  %43 = insertelement <2 x float> poison, float %13, i64 0
  %44 = shufflevector <2 x float> %43, <2 x float> poison, <2 x i32> zeroinitializer
  %45 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %44, <2 x float> %35, <2 x float> %42)
  %46 = extractelement <2 x float> %36, i64 1
  %mul7.i48.i16.i = fmul float %46, %fneg12.i.i
  %47 = tail call float @llvm.fmuladd.f32(float %1, float %7, float %mul7.i48.i16.i)
  %48 = extractelement <2 x float> %45, i64 1
  %49 = tail call float @llvm.fmuladd.f32(float %48, float 0.000000e+00, float %47)
  %50 = fmul <2 x float> %30, %36
  %51 = insertelement <2 x float> %26, float %15, i64 0
  %52 = insertelement <2 x float> <float 0.000000e+00, float poison>, float %7, i64 1
  %53 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %51, <2 x float> %52, <2 x float> %50)
  %54 = insertelement <2 x float> poison, float %fneg17.i.i, i64 0
  %55 = insertelement <2 x float> %54, float %2, i64 1
  %56 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %55, <2 x float> %45, <2 x float> %53)
  %57 = insertelement <2 x float> <float 0.000000e+00, float poison>, float %0, i64 1
  %58 = fmul <2 x float> %57, %36
  %59 = insertelement <2 x float> %52, float %fneg.i.i, i64 0
  %60 = insertelement <2 x float> %51, float 0.000000e+00, i64 1
  %61 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %59, <2 x float> %60, <2 x float> %58)
  %62 = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %63 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %62, <2 x float> %45, <2 x float> %61)
  %64 = extractelement <2 x float> %36, i64 0
  %mul7.i67.i23.i = fmul float %64, %fneg12.i.i
  %65 = tail call float @llvm.fmuladd.f32(float %1, float %15, float %mul7.i67.i23.i)
  %66 = extractelement <2 x float> %45, i64 0
  %67 = tail call float @llvm.fmuladd.f32(float %66, float 0.000000e+00, float %65)
  %68 = insertelement <2 x float> poison, float %19, i64 0
  %69 = shufflevector <2 x float> %68, <2 x float> poison, <2 x i32> zeroinitializer
  %70 = fmul <2 x float> %57, %69
  %71 = insertelement <2 x float> poison, float %fneg.i.i, i64 0
  %72 = insertelement <2 x float> %71, float %17, i64 1
  %73 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %17, i64 0
  %74 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %72, <2 x float> %73, <2 x float> %70)
  %75 = insertelement <2 x float> poison, float %21, i64 0
  %76 = shufflevector <2 x float> %75, <2 x float> poison, <2 x i32> zeroinitializer
  %77 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %62, <2 x float> %76, <2 x float> %74)
  %sub14.i.i.i = fsub float 0.000000e+00, %49
  %78 = fsub <2 x float> zeroinitializer, %56
  %79 = insertelement <2 x float> poison, float %imb, i64 0
  %80 = shufflevector <2 x float> %79, <2 x float> poison, <2 x i32> zeroinitializer
  %81 = fsub <2 x float> %80, %63
  %sub14.i.1.i.i = fsub float 0.000000e+00, %67
  %82 = fsub <2 x float> zeroinitializer, %77
  %add14.i.i = fadd float %sub14.i.i.i, 0.000000e+00
  %83 = fadd <2 x float> %78, zeroinitializer
  %84 = insertelement <2 x float> poison, float %ima, i64 0
  %85 = shufflevector <2 x float> %84, <2 x float> poison, <2 x i32> zeroinitializer
  %86 = fadd <2 x float> %81, %85
  %add14.i.1.i = fadd float %sub14.i.1.i.i, 0.000000e+00
  %87 = fadd <2 x float> %82, zeroinitializer
  %88 = insertelement <2 x float> %83, float %add14.i.i, i64 1
  %89 = fneg <2 x float> %88
  %90 = insertelement <2 x float> %87, float %add14.i.2.i, i64 0
  %91 = fmul <2 x float> %90, %89
  %92 = insertelement <2 x float> %86, float %add14.i.1.i, i64 0
  %93 = shufflevector <2 x float> %90, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %94 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %92, <2 x float> %93, <2 x float> %91)
  %95 = extractelement <2 x float> %83, i64 1
  %96 = extractelement <2 x float> %94, i64 0
  %mul8.i.i = fmul float %95, %96
  %97 = insertelement <2 x float> %83, float %add14.i.1.i, i64 0
  %98 = fneg <2 x float> %97
  %99 = shufflevector <2 x float> %87, <2 x float> %93, <2 x i32> <i32 0, i32 3>
  %100 = fmul <2 x float> %99, %98
  %101 = insertelement <2 x float> %86, float %add14.i.i, i64 1
  %102 = shufflevector <2 x float> %99, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %103 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %101, <2 x float> %102, <2 x float> %100)
  %104 = extractelement <2 x float> %86, i64 1
  %105 = extractelement <2 x float> %103, i64 0
  %106 = tail call float @llvm.fmuladd.f32(float %104, float %105, float %mul8.i.i)
  %107 = fneg <2 x float> %86
  %108 = shufflevector <2 x float> %87, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %109 = fmul <2 x float> %108, %107
  %110 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %83, <2 x float> %87, <2 x float> %109)
  %111 = extractelement <2 x float> %110, i64 0
  %112 = tail call float @llvm.fmuladd.f32(float %add14.i.i, float %111, float %106)
  %div.i = fdiv float 1.000000e+00, %112
  %113 = insertelement <2 x float> poison, float %div.i, i64 0
  %114 = shufflevector <2 x float> %113, <2 x float> poison, <2 x i32> zeroinitializer
  %115 = fmul <2 x float> %103, %114
  %116 = extractelement <2 x float> %86, i64 0
  %shift = shufflevector <2 x float> %89, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %117 = fmul <2 x float> %86, %shift
  %neg.i66.i = extractelement <2 x float> %117, i64 0
  %118 = tail call float @llvm.fmuladd.f32(float %95, float %add14.i.1.i, float %neg.i66.i)
  %mul15.i = fmul float %118, %div.i
  %119 = fmul <2 x float> %94, %114
  %120 = extractelement <2 x float> %107, i64 1
  %neg.i75.i = fmul float %add14.i.1.i, %120
  %121 = extractelement <2 x float> %83, i64 0
  %122 = tail call float @llvm.fmuladd.f32(float %add14.i.i, float %121, float %neg.i75.i)
  %mul24.i = fmul float %122, %div.i
  %123 = fmul <2 x float> %110, %114
  %shift28 = shufflevector <2 x float> %98, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %124 = fmul <2 x float> %83, %shift28
  %neg.i84.i = extractelement <2 x float> %124, i64 0
  %125 = tail call float @llvm.fmuladd.f32(float %104, float %116, float %neg.i84.i)
  %mul33.i = fmul float %125, %div.i
  %126 = fmul <2 x float> %119, zeroinitializer
  %127 = insertelement <2 x float> poison, float %div, i64 0
  %128 = shufflevector <2 x float> %127, <2 x float> poison, <2 x i32> zeroinitializer
  %129 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %115, <2 x float> %128, <2 x float> %126)
  %130 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %123, <2 x float> zeroinitializer, <2 x float> %129)
  %mul7.i48.i = fmul float %mul24.i, 0.000000e+00
  %131 = tail call float @llvm.fmuladd.f32(float %mul15.i, float %div, float %mul7.i48.i)
  %132 = tail call float @llvm.fmuladd.f32(float %mul33.i, float 0.000000e+00, float %131)
  %mul7.i67.i = fmul float %div, %mul24.i
  %133 = tail call float @llvm.fmuladd.f32(float %mul15.i, float 0.000000e+00, float %mul7.i67.i)
  %134 = tail call float @llvm.fmuladd.f32(float %mul33.i, float 0.000000e+00, float %133)
  %135 = tail call float @llvm.fmuladd.f32(float %mul15.i, float 0.000000e+00, float %mul7.i48.i)
  %136 = tail call float @llvm.fmuladd.f32(float %mul33.i, float %div, float %135)
  store <2 x float> %130, ptr %agg.result, align 4, !tbaa !137, !alias.scope !474
  %arrayidx5.i.i.i.i14 = getelementptr inbounds [4 x float], ptr %agg.result, i64 0, i64 2
  store float %132, ptr %arrayidx5.i.i.i.i14, align 4, !tbaa !137, !alias.scope !474
  %arrayidx7.i.i.i.i15 = getelementptr inbounds [4 x float], ptr %agg.result, i64 0, i64 3
  store float 0.000000e+00, ptr %arrayidx7.i.i.i.i15, align 4, !tbaa !137, !alias.scope !474
  %arrayidx3.i.i.i16 = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 1
  %137 = fmul <2 x float> %128, %119
  %138 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %115, <2 x float> zeroinitializer, <2 x float> %137)
  %139 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %123, <2 x float> zeroinitializer, <2 x float> %138)
  store <2 x float> %139, ptr %arrayidx3.i.i.i16, align 4, !tbaa !137, !alias.scope !474
  %arrayidx5.i7.i.i.i18 = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 1, i32 0, i64 2
  store float %134, ptr %arrayidx5.i7.i.i.i18, align 4, !tbaa !137, !alias.scope !474
  %arrayidx7.i8.i.i.i19 = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 1, i32 0, i64 3
  store float 0.000000e+00, ptr %arrayidx7.i8.i.i.i19, align 4, !tbaa !137, !alias.scope !474
  %arrayidx5.i.i.i20 = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 2
  %140 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %115, <2 x float> zeroinitializer, <2 x float> %126)
  %141 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %123, <2 x float> %128, <2 x float> %140)
  store <2 x float> %141, ptr %arrayidx5.i.i.i20, align 4, !tbaa !137, !alias.scope !474
  %arrayidx5.i10.i.i.i22 = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 2, i32 0, i64 2
  store float %136, ptr %arrayidx5.i10.i.i.i22, align 4, !tbaa !137, !alias.scope !474
  %arrayidx7.i11.i.i.i23 = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 2, i32 0, i64 3
  store float 0.000000e+00, ptr %arrayidx7.i11.i.i.i23, align 4, !tbaa !137, !alias.scope !474
  ret void
}

declare void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280), i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef ptr @_ZN10btSoftBody9getSolverENS_8eVSolver1_E(i32 noundef %solver) local_unnamed_addr #25 align 2 {
entry:
  %cond = icmp eq i32 %solver, 0
  %_ZN10btSoftBody12VSolve_LinksEPS_f. = select i1 %cond, ptr @_ZN10btSoftBody12VSolve_LinksEPS_f, ptr null
  ret ptr %_ZN10btSoftBody12VSolve_LinksEPS_f.
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef ptr @_ZN10btSoftBody9getSolverENS_8ePSolver1_E(i32 noundef %solver) local_unnamed_addr #25 align 2 {
entry:
  %0 = icmp ult i32 %solver, 4
  br i1 %0, label %switch.lookup, label %return

switch.lookup:                                    ; preds = %entry
  %1 = sext i32 %solver to i64
  %switch.gep = getelementptr inbounds [4 x ptr], ptr @switch.table._ZN10btSoftBody11staticSolveEi, i64 0, i64 %1
  %switch.load = load ptr, ptr %switch.gep, align 8
  br label %return

return:                                           ; preds = %entry, %switch.lookup
  %retval.0 = phi ptr [ %switch.load, %switch.lookup ], [ null, %entry ]
  ret ptr %retval.0
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody12dampClustersEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #16 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !124
  %cmp107 = icmp sgt i32 %0, 0
  br i1 %cmp107, label %for.body.lr.ph, label %for.end39

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %wide.trip.count113 = zext i32 %0 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end36
  %indvars.iv110 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next111, %if.end36 ]
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv110
  %2 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %m_ndamping = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 16
  %3 = load float, ptr %m_ndamping, align 8, !tbaa !477
  %cmp4 = fcmp ogt float %3, 0.000000e+00
  br i1 %cmp4, label %for.cond5.preheader, label %if.end36

for.cond5.preheader:                              ; preds = %for.body
  %m_size.i55 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %2, i64 0, i32 2
  %4 = load i32, ptr %m_size.i55, align 4, !tbaa !319
  %cmp7105 = icmp sgt i32 %4, 0
  br i1 %cmp7105, label %for.body8.lr.ph, label %if.end36

for.body8.lr.ph:                                  ; preds = %for.cond5.preheader
  %m_data.i56 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %2, i64 0, i32 5
  %5 = load ptr, ptr %m_data.i56, align 8, !tbaa !320
  %m_lv = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 13
  %m_av = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 14
  %m_com = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 8
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 8, i32 0, i64 1
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 8, i32 0, i64 2
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 14, i32 0, i64 1
  %arrayidx11.i64 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 13, i32 0, i64 2
  %wide.trip.count = zext i32 %4 to i64
  br label %for.body8

for.body8:                                        ; preds = %for.body8.lr.ph, %if.end35
  %indvars.iv = phi i64 [ 0, %for.body8.lr.ph ], [ %indvars.iv.next, %if.end35 ]
  %arrayidx.i58 = getelementptr inbounds ptr, ptr %5, i64 %indvars.iv
  %6 = load ptr, ptr %arrayidx.i58, align 8, !tbaa !219
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 6
  %7 = load float, ptr %m_im, align 8, !tbaa !175
  %cmp11 = fcmp ogt float %7, 0.000000e+00
  br i1 %cmp11, label %if.then12, label %if.end35

if.then12:                                        ; preds = %for.body8
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 2
  %arrayidx5.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 2, i32 0, i64 1
  %8 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %9 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %sub8.i = fsub float %8, %9
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 2, i32 0, i64 2
  %10 = load float, ptr %m_av, align 4, !tbaa !137
  %11 = load float, ptr %arrayidx11.i64, align 4, !tbaa !137
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 3
  %12 = load float, ptr %m_q, align 4, !tbaa !137
  %13 = load float, ptr %m_com, align 4, !tbaa !137
  %14 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %15 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %16 = insertelement <2 x float> poison, float %14, i64 0
  %17 = insertelement <2 x float> %16, float %12, i64 1
  %18 = insertelement <2 x float> poison, float %15, i64 0
  %19 = insertelement <2 x float> %18, float %13, i64 1
  %20 = fsub <2 x float> %17, %19
  %21 = load <2 x float>, ptr %arrayidx.i.i, align 4, !tbaa !137
  %22 = insertelement <2 x float> %21, float %10, i64 0
  %23 = fneg <2 x float> %22
  %24 = insertelement <2 x float> %20, float %sub8.i, i64 1
  %25 = fmul <2 x float> %24, %23
  %26 = shufflevector <2 x float> %25, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %27 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %21, <2 x float> %20, <2 x float> %26)
  %28 = extractelement <2 x float> %21, i64 0
  %29 = fneg float %28
  %30 = extractelement <2 x float> %20, i64 1
  %neg30.i.i = fmul float %30, %29
  %31 = tail call float @llvm.fmuladd.f32(float %10, float %sub8.i, float %neg30.i.i)
  %32 = load <2 x float>, ptr %m_lv, align 4, !tbaa !137
  %33 = fadd <2 x float> %32, %27
  %add14.i = fadd float %31, %11
  %34 = load <2 x float>, ptr %m_v, align 4, !tbaa !137
  %arrayidx10.i.i74 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 3, i32 0, i64 2
  %35 = load float, ptr %arrayidx10.i.i74, align 4, !tbaa !137
  %36 = shufflevector <2 x float> %33, <2 x float> %34, <2 x i32> <i32 1, i32 3>
  %37 = fmul <2 x float> %36, %36
  %38 = shufflevector <2 x float> %33, <2 x float> %34, <2 x i32> <i32 0, i32 2>
  %39 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %38, <2 x float> %38, <2 x float> %37)
  %40 = insertelement <2 x float> poison, float %add14.i, i64 0
  %41 = insertelement <2 x float> %40, float %35, i64 1
  %42 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %41, <2 x float> %41, <2 x float> %39)
  %43 = extractelement <2 x float> %42, i64 0
  %44 = extractelement <2 x float> %42, i64 1
  %cmp23 = fcmp ugt float %43, %44
  br i1 %cmp23, label %if.end35, label %if.then24

if.then24:                                        ; preds = %if.then12
  %45 = fsub <2 x float> %33, %34
  %sub14.i81 = fsub float %add14.i, %35
  %46 = load float, ptr %m_ndamping, align 4, !tbaa !137
  %mul8.i.i89 = fmul float %sub14.i81, %46
  %47 = insertelement <2 x float> poison, float %46, i64 0
  %48 = shufflevector <2 x float> %47, <2 x float> poison, <2 x i32> zeroinitializer
  %49 = fmul <2 x float> %45, %48
  %50 = fadd <2 x float> %34, %49
  store <2 x float> %50, ptr %m_v, align 4, !tbaa !137
  %add13.i = fadd float %35, %mul8.i.i89
  store float %add13.i, ptr %arrayidx10.i.i74, align 4, !tbaa !137
  br label %if.end35

if.end35:                                         ; preds = %if.then12, %if.then24, %for.body8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.end36, label %for.body8

if.end36:                                         ; preds = %if.end35, %for.cond5.preheader, %for.body
  %indvars.iv.next111 = add nuw nsw i64 %indvars.iv110, 1
  %exitcond114.not = icmp eq i64 %indvars.iv.next111, %wide.trip.count113
  br i1 %exitcond114.not, label %for.end39, label %for.body

for.end39:                                        ; preds = %if.end36, %entry
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody11staticSolveEi(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %iterations) local_unnamed_addr #4 align 2 {
entry:
  %cmp18 = icmp sgt i32 %iterations, 0
  br i1 %cmp18, label %for.cond2.preheader.lr.ph, label %for.cond.cleanup

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 2
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 5
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !28
  %1 = icmp sgt i32 %0, 0
  br i1 %1, label %for.cond2.preheader, label %for.cond.cleanup

for.cond2.preheader:                              ; preds = %for.cond2.preheader.lr.ph, %for.cond.cleanup4
  %2 = phi i32 [ %3, %for.cond.cleanup4 ], [ %0, %for.cond2.preheader.lr.ph ]
  %isolve.019 = phi i32 [ %inc11, %for.cond.cleanup4 ], [ 0, %for.cond2.preheader.lr.ph ]
  %cmp316 = icmp sgt i32 %2, 0
  br i1 %cmp316, label %for.body5, label %for.cond.cleanup4

for.cond.cleanup:                                 ; preds = %for.cond.cleanup4, %for.cond2.preheader.lr.ph, %entry
  ret void

for.cond.cleanup4:                                ; preds = %for.body5, %for.cond2.preheader
  %3 = phi i32 [ %2, %for.cond2.preheader ], [ %7, %for.body5 ]
  %inc11 = add nuw nsw i32 %isolve.019, 1
  %exitcond.not = icmp eq i32 %inc11, %iterations
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond2.preheader, !llvm.loop !478

for.body5:                                        ; preds = %for.cond2.preheader, %for.body5
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body5 ], [ 0, %for.cond2.preheader ]
  %4 = load ptr, ptr %m_data.i, align 8, !tbaa !27
  %arrayidx.i = getelementptr inbounds i32, ptr %4, i64 %indvars.iv
  %5 = load i32, ptr %arrayidx.i, align 4, !tbaa !185
  %6 = sext i32 %5 to i64
  %switch.gep = getelementptr inbounds [4 x ptr], ptr @switch.table._ZN10btSoftBody11staticSolveEi, i64 0, i64 %6
  %switch.load = load ptr, ptr %switch.gep, align 8
  tail call void %switch.load(ptr noundef nonnull %this, float noundef 1.000000e+00, float noundef 0.000000e+00), !callees !463
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %7 = load i32, ptr %m_size.i, align 4, !tbaa !28
  %8 = sext i32 %7 to i64
  %cmp3 = icmp slt i64 %indvars.iv.next, %8
  br i1 %cmp3, label %for.body5, label %for.cond.cleanup4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local void @_ZN10btSoftBody22solveCommonConstraintsEPPS_ii(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #25 align 2 {
entry:
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody13solveClustersERK20btAlignedObjectArrayIPS_E(ptr nocapture noundef nonnull readonly align 8 dereferenceable(25) %bodies) local_unnamed_addr #4 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btAlignedObjectArray.88, ptr %bodies, i64 0, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !479
  %cmp85 = icmp sgt i32 %0, 0
  br i1 %cmp85, label %for.body.lr.ph, label %for.end29

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btAlignedObjectArray.88, ptr %bodies, i64 0, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !482
  %wide.trip.count = zext i32 %0 to i64
  %xtraiter = and i64 %wide.trip.count, 3
  %2 = icmp ult i32 %0, 4
  br i1 %2, label %for.cond3.preheader.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967292
  br label %for.body

for.cond3.preheader.unr-lcssa:                    ; preds = %for.body, %for.body.lr.ph
  %.sroa.speculated.lcssa.ph = phi i32 [ undef, %for.body.lr.ph ], [ %.sroa.speculated.3, %for.body ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %iterations.086.unr = phi i32 [ 0, %for.body.lr.ph ], [ %.sroa.speculated.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond3.preheader, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond3.preheader.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.cond3.preheader.unr-lcssa ]
  %iterations.086.epil = phi i32 [ %.sroa.speculated.epil, %for.body.epil ], [ %iterations.086.unr, %for.cond3.preheader.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.cond3.preheader.unr-lcssa ]
  %arrayidx.i.epil = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv.epil
  %3 = load ptr, ptr %arrayidx.i.epil, align 8, !tbaa !219
  %citerations.epil = getelementptr inbounds %class.btSoftBody, ptr %3, i64 0, i32 2, i32 24
  %4 = load i32, ptr %citerations.epil, align 4, !tbaa !140
  %.sroa.speculated.epil = tail call i32 @llvm.smax.i32(i32 %iterations.086.epil, i32 %4)
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond3.preheader, label %for.body.epil, !llvm.loop !483

for.cond3.preheader:                              ; preds = %for.body.epil, %for.cond3.preheader.unr-lcssa
  %.sroa.speculated.lcssa = phi i32 [ %.sroa.speculated.lcssa.ph, %for.cond3.preheader.unr-lcssa ], [ %.sroa.speculated.epil, %for.body.epil ]
  br i1 %cmp85, label %for.body5.lr.ph, label %for.end29

for.body5.lr.ph:                                  ; preds = %for.cond3.preheader
  %m_data.i49 = getelementptr inbounds %class.btAlignedObjectArray.88, ptr %bodies, i64 0, i32 5
  %wide.trip.count102 = zext i32 %0 to i64
  br label %for.body5

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %iterations.086 = phi i32 [ 0, %for.body.lr.ph.new ], [ %.sroa.speculated.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv
  %5 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %citerations = getelementptr inbounds %class.btSoftBody, ptr %5, i64 0, i32 2, i32 24
  %6 = load i32, ptr %citerations, align 4, !tbaa !140
  %.sroa.speculated = tail call i32 @llvm.smax.i32(i32 %iterations.086, i32 %6)
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.i.1 = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv.next
  %7 = load ptr, ptr %arrayidx.i.1, align 8, !tbaa !219
  %citerations.1 = getelementptr inbounds %class.btSoftBody, ptr %7, i64 0, i32 2, i32 24
  %8 = load i32, ptr %citerations.1, align 4, !tbaa !140
  %.sroa.speculated.1 = tail call i32 @llvm.smax.i32(i32 %.sroa.speculated, i32 %8)
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %arrayidx.i.2 = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv.next.1
  %9 = load ptr, ptr %arrayidx.i.2, align 8, !tbaa !219
  %citerations.2 = getelementptr inbounds %class.btSoftBody, ptr %9, i64 0, i32 2, i32 24
  %10 = load i32, ptr %citerations.2, align 4, !tbaa !140
  %.sroa.speculated.2 = tail call i32 @llvm.smax.i32(i32 %.sroa.speculated.1, i32 %10)
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %arrayidx.i.3 = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv.next.2
  %11 = load ptr, ptr %arrayidx.i.3, align 8, !tbaa !219
  %citerations.3 = getelementptr inbounds %class.btSoftBody, ptr %11, i64 0, i32 2, i32 24
  %12 = load i32, ptr %citerations.3, align 4, !tbaa !140
  %.sroa.speculated.3 = tail call i32 @llvm.smax.i32(i32 %.sroa.speculated.2, i32 %12)
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.cond3.preheader.unr-lcssa, label %for.body

for.cond10.preheader:                             ; preds = %_ZN10btSoftBody15prepareClustersEi.exit
  %cmp1192 = icmp sgt i32 %.sroa.speculated.lcssa, 0
  br i1 %cmp1192, label %for.cond13.preheader.lr.ph, label %for.cond23.preheader

for.cond13.preheader.lr.ph:                       ; preds = %for.cond10.preheader
  %m_data.i53 = getelementptr inbounds %class.btAlignedObjectArray.88, ptr %bodies, i64 0, i32 5
  br i1 %cmp85, label %for.cond13.preheader.us.preheader, label %for.end29

for.cond13.preheader.us.preheader:                ; preds = %for.cond13.preheader.lr.ph
  %wide.trip.count107 = zext i32 %0 to i64
  br label %for.cond13.preheader.us

for.cond13.preheader.us:                          ; preds = %for.cond13.preheader.us.preheader, %for.cond13.for.cond.cleanup_crit_edge.us
  %i.293.us = phi i32 [ %inc21.us, %for.cond13.for.cond.cleanup_crit_edge.us ], [ 0, %for.cond13.preheader.us.preheader ]
  br label %for.body15.us

for.body15.us:                                    ; preds = %for.cond13.preheader.us, %_ZN10btSoftBody13solveClustersEf.exit.us
  %indvars.iv104 = phi i64 [ 0, %for.cond13.preheader.us ], [ %indvars.iv.next105, %_ZN10btSoftBody13solveClustersEf.exit.us ]
  %13 = load ptr, ptr %m_data.i53, align 8, !tbaa !482
  %arrayidx.i55.us = getelementptr inbounds ptr, ptr %13, i64 %indvars.iv104
  %14 = load ptr, ptr %arrayidx.i55.us, align 8, !tbaa !219
  %m_size.i.i56.us = getelementptr inbounds %class.btSoftBody, ptr %14, i64 0, i32 16, i32 2
  %15 = load i32, ptr %m_size.i.i56.us, align 4, !tbaa !116
  %cmp6.i57.us = icmp sgt i32 %15, 0
  br i1 %cmp6.i57.us, label %for.body.lr.ph.i60.us, label %_ZN10btSoftBody13solveClustersEf.exit.us

for.body.lr.ph.i60.us:                            ; preds = %for.body15.us
  %m_data.i.i58.us = getelementptr inbounds %class.btSoftBody, ptr %14, i64 0, i32 16, i32 5
  %m_sst.i59.us = getelementptr inbounds %class.btSoftBody, ptr %14, i64 0, i32 3
  %wide.trip.count.i.us = zext i32 %15 to i64
  br label %for.body.i66.us

for.body.i66.us:                                  ; preds = %for.body.i66.us, %for.body.lr.ph.i60.us
  %indvars.iv.i61.us = phi i64 [ 0, %for.body.lr.ph.i60.us ], [ %indvars.iv.next.i65.us, %for.body.i66.us ]
  %16 = load ptr, ptr %m_data.i.i58.us, align 8, !tbaa !115
  %arrayidx.i.i62.us = getelementptr inbounds ptr, ptr %16, i64 %indvars.iv.i61.us
  %17 = load ptr, ptr %arrayidx.i.i62.us, align 8, !tbaa !219
  %18 = load float, ptr %m_sst.i59.us, align 8, !tbaa !420
  %vtable.i63.us = load ptr, ptr %17, align 8, !tbaa !5
  %vfn.i64.us = getelementptr inbounds ptr, ptr %vtable.i63.us, i64 3
  %19 = load ptr, ptr %vfn.i64.us, align 8
  tail call void %19(ptr noundef nonnull align 8 dereferenceable(181) %17, float noundef %18, float noundef 1.000000e+00)
  %indvars.iv.next.i65.us = add nuw nsw i64 %indvars.iv.i61.us, 1
  %exitcond.not.i.us = icmp eq i64 %indvars.iv.next.i65.us, %wide.trip.count.i.us
  br i1 %exitcond.not.i.us, label %_ZN10btSoftBody13solveClustersEf.exit.us, label %for.body.i66.us

_ZN10btSoftBody13solveClustersEf.exit.us:         ; preds = %for.body.i66.us, %for.body15.us
  %indvars.iv.next105 = add nuw nsw i64 %indvars.iv104, 1
  %exitcond108.not = icmp eq i64 %indvars.iv.next105, %wide.trip.count107
  br i1 %exitcond108.not, label %for.cond13.for.cond.cleanup_crit_edge.us, label %for.body15.us

for.cond13.for.cond.cleanup_crit_edge.us:         ; preds = %_ZN10btSoftBody13solveClustersEf.exit.us
  %inc21.us = add nuw nsw i32 %i.293.us, 1
  %exitcond109.not = icmp eq i32 %inc21.us, %.sroa.speculated.lcssa
  br i1 %exitcond109.not, label %for.cond23.preheader, label %for.cond13.preheader.us

for.body5:                                        ; preds = %for.body5.lr.ph, %_ZN10btSoftBody15prepareClustersEi.exit
  %indvars.iv99 = phi i64 [ 0, %for.body5.lr.ph ], [ %indvars.iv.next100, %_ZN10btSoftBody15prepareClustersEi.exit ]
  %20 = load ptr, ptr %m_data.i49, align 8, !tbaa !482
  %arrayidx.i51 = getelementptr inbounds ptr, ptr %20, i64 %indvars.iv99
  %21 = load ptr, ptr %arrayidx.i51, align 8, !tbaa !219
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %21, i64 0, i32 16, i32 2
  %22 = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  %cmp6.i = icmp sgt i32 %22, 0
  br i1 %cmp6.i, label %for.body.lr.ph.i, label %_ZN10btSoftBody15prepareClustersEi.exit

for.body.lr.ph.i:                                 ; preds = %for.body5
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %21, i64 0, i32 16, i32 5
  %m_sst.i = getelementptr inbounds %class.btSoftBody, ptr %21, i64 0, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %23 = load ptr, ptr %m_data.i.i, align 8, !tbaa !115
  %arrayidx.i.i = getelementptr inbounds ptr, ptr %23, i64 %indvars.iv.i
  %24 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !219
  %25 = load float, ptr %m_sst.i, align 8, !tbaa !420
  %vtable.i = load ptr, ptr %24, align 8, !tbaa !5
  %vfn.i = getelementptr inbounds ptr, ptr %vtable.i, i64 2
  %26 = load ptr, ptr %vfn.i, align 8
  tail call void %26(ptr noundef nonnull align 8 dereferenceable(181) %24, float noundef %25, i32 noundef %.sroa.speculated.lcssa)
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %27 = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  %28 = sext i32 %27 to i64
  %cmp.i52 = icmp slt i64 %indvars.iv.next.i, %28
  br i1 %cmp.i52, label %for.body.i, label %_ZN10btSoftBody15prepareClustersEi.exit

_ZN10btSoftBody15prepareClustersEi.exit:          ; preds = %for.body.i, %for.body5
  %indvars.iv.next100 = add nuw nsw i64 %indvars.iv99, 1
  %exitcond103.not = icmp eq i64 %indvars.iv.next100, %wide.trip.count102
  br i1 %exitcond103.not, label %for.cond10.preheader, label %for.body5

for.cond23.preheader:                             ; preds = %for.cond13.for.cond.cleanup_crit_edge.us, %for.cond10.preheader
  br i1 %cmp85, label %for.body25.lr.ph, label %for.end29

for.body25.lr.ph:                                 ; preds = %for.cond23.preheader
  %m_data.i67 = getelementptr inbounds %class.btAlignedObjectArray.88, ptr %bodies, i64 0, i32 5
  %wide.trip.count113 = zext i32 %0 to i64
  br label %for.body25

for.body25:                                       ; preds = %for.body25.lr.ph, %_ZN10btSoftBody15cleanupClustersEv.exit
  %indvars.iv110 = phi i64 [ 0, %for.body25.lr.ph ], [ %indvars.iv.next111, %_ZN10btSoftBody15cleanupClustersEv.exit ]
  %29 = load ptr, ptr %m_data.i67, align 8, !tbaa !482
  %arrayidx.i69 = getelementptr inbounds ptr, ptr %29, i64 %indvars.iv110
  %30 = load ptr, ptr %arrayidx.i69, align 8, !tbaa !219
  %m_size.i.i70 = getelementptr inbounds %class.btSoftBody, ptr %30, i64 0, i32 16, i32 2
  %31 = load i32, ptr %m_size.i.i70, align 4, !tbaa !116
  %cmp26.i = icmp sgt i32 %31, 0
  br i1 %cmp26.i, label %for.body.lr.ph.i73, label %_ZN10btSoftBody15cleanupClustersEv.exit

for.body.lr.ph.i73:                               ; preds = %for.body25
  %m_data.i.i71 = getelementptr inbounds %class.btSoftBody, ptr %30, i64 0, i32 16, i32 5
  %m_sst.i72 = getelementptr inbounds %class.btSoftBody, ptr %30, i64 0, i32 3
  br label %for.body.i77

for.body.i77:                                     ; preds = %for.inc.i, %for.body.lr.ph.i73
  %i.027.i = phi i32 [ 0, %for.body.lr.ph.i73 ], [ %inc.i, %for.inc.i ]
  %32 = load ptr, ptr %m_data.i.i71, align 8, !tbaa !115
  %idxprom.i.i = sext i32 %i.027.i to i64
  %arrayidx.i.i74 = getelementptr inbounds ptr, ptr %32, i64 %idxprom.i.i
  %33 = load ptr, ptr %arrayidx.i.i74, align 8, !tbaa !219
  %34 = load float, ptr %m_sst.i72, align 8, !tbaa !420
  %vtable.i75 = load ptr, ptr %33, align 8, !tbaa !5
  %vfn.i76 = getelementptr inbounds ptr, ptr %vtable.i75, i64 4
  %35 = load ptr, ptr %vfn.i76, align 8
  tail call void %35(ptr noundef nonnull align 8 dereferenceable(181) %33, float noundef %34)
  %36 = load ptr, ptr %m_data.i.i71, align 8, !tbaa !115
  %arrayidx.i18.i = getelementptr inbounds ptr, ptr %36, i64 %idxprom.i.i
  %37 = load ptr, ptr %arrayidx.i18.i, align 8, !tbaa !219
  %m_delete.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %37, i64 0, i32 9
  %38 = load i8, ptr %m_delete.i, align 4, !tbaa !484, !range !159, !noundef !192
  %tobool.not.i = icmp eq i8 %38, 0
  br i1 %tobool.not.i, label %for.body.for.inc_crit_edge.i, label %if.then.i

for.body.for.inc_crit_edge.i:                     ; preds = %for.body.i77
  %.pre.i = load i32, ptr %m_size.i.i70, align 4, !tbaa !116
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i77
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %37)
  %dec.i = add nsw i32 %i.027.i, -1
  %39 = load ptr, ptr %m_data.i.i71, align 8, !tbaa !115
  %40 = load i32, ptr %m_size.i.i70, align 4, !tbaa !116
  %cmp8.i.i.i = icmp sgt i32 %40, 0
  br i1 %cmp8.i.i.i, label %for.body.lr.ph.i.i.i, label %for.inc.i

for.body.lr.ph.i.i.i:                             ; preds = %if.then.i
  %arrayidx.i24.i = getelementptr inbounds ptr, ptr %39, i64 %idxprom.i.i
  %41 = load ptr, ptr %arrayidx.i24.i, align 8, !tbaa !219
  %wide.trip.count.i.i.i = zext i32 %40 to i64
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i, %for.inc.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds ptr, ptr %39, i64 %indvars.iv.i.i.i
  %42 = load ptr, ptr %arrayidx.i.i.i, align 8, !tbaa !219
  %cmp3.i.i.i = icmp eq ptr %42, %41
  br i1 %cmp3.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i.i, label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %for.body.i.i.i
  %indvars.iv.next.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i64 %indvars.iv.next.i.i.i, %wide.trip.count.i.i.i
  br i1 %exitcond.not.i.i.i, label %for.inc.i, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i.i: ; preds = %for.body.i.i.i
  %43 = trunc i64 %indvars.iv.i.i.i to i32
  %cmp.i.i = icmp sgt i32 %40, %43
  br i1 %cmp.i.i, label %if.then.i.i, label %for.inc.i

if.then.i.i:                                      ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i.i
  %sub.i.i = add nsw i32 %40, -1
  %sext.i.i = shl i64 %indvars.iv.i.i.i, 32
  %idxprom.i.i.i = ashr exact i64 %sext.i.i, 32
  %arrayidx.i7.i.i = getelementptr inbounds ptr, ptr %39, i64 %idxprom.i.i.i
  %44 = load ptr, ptr %arrayidx.i7.i.i, align 8, !tbaa !219
  %idxprom3.i.i.i = sext i32 %sub.i.i to i64
  %arrayidx4.i.i.i = getelementptr inbounds ptr, ptr %39, i64 %idxprom3.i.i.i
  %45 = load ptr, ptr %arrayidx4.i.i.i, align 8, !tbaa !219
  store ptr %45, ptr %arrayidx.i7.i.i, align 8, !tbaa !219
  %46 = load ptr, ptr %m_data.i.i71, align 8, !tbaa !115
  %arrayidx10.i.i.i = getelementptr inbounds ptr, ptr %46, i64 %idxprom3.i.i.i
  store ptr %44, ptr %arrayidx10.i.i.i, align 8, !tbaa !219
  store i32 %sub.i.i, ptr %m_size.i.i70, align 4, !tbaa !116
  br label %for.inc.i

for.inc.i:                                        ; preds = %for.inc.i.i.i, %if.then.i.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i.i, %if.then.i, %for.body.for.inc_crit_edge.i
  %47 = phi i32 [ %.pre.i, %for.body.for.inc_crit_edge.i ], [ %40, %if.then.i ], [ %40, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i.i ], [ %sub.i.i, %if.then.i.i ], [ %40, %for.inc.i.i.i ]
  %i.1.i = phi i32 [ %i.027.i, %for.body.for.inc_crit_edge.i ], [ %dec.i, %if.then.i ], [ %dec.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i.i ], [ %dec.i, %if.then.i.i ], [ %dec.i, %for.inc.i.i.i ]
  %inc.i = add nsw i32 %i.1.i, 1
  %cmp.i78 = icmp slt i32 %inc.i, %47
  br i1 %cmp.i78, label %for.body.i77, label %_ZN10btSoftBody15cleanupClustersEv.exit

_ZN10btSoftBody15cleanupClustersEv.exit:          ; preds = %for.inc.i, %for.body25
  %indvars.iv.next111 = add nuw nsw i64 %indvars.iv110, 1
  %exitcond114.not = icmp eq i64 %indvars.iv.next111, %wide.trip.count113
  br i1 %exitcond114.not, label %for.end29, label %for.body25

for.end29:                                        ; preds = %_ZN10btSoftBody15cleanupClustersEv.exit, %for.cond3.preheader, %entry, %for.cond13.preheader.lr.ph, %for.cond23.preheader
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody15prepareClustersEi(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, i32 noundef %iterations) local_unnamed_addr #4 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !116
  %cmp6 = icmp sgt i32 %0, 0
  br i1 %cmp6, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !115
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv
  %2 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %3 = load float, ptr %m_sst, align 8, !tbaa !420
  %vtable = load ptr, ptr %2, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 2
  %4 = load ptr, ptr %vfn, align 8
  tail call void %4(ptr noundef nonnull align 8 dereferenceable(181) %2, float noundef %3, i32 noundef %iterations)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = load i32, ptr %m_size.i, align 4, !tbaa !116
  %6 = sext i32 %5 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %6
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody13solveClustersEf(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, float noundef %sor) local_unnamed_addr #4 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !116
  %cmp6 = icmp sgt i32 %0, 0
  br i1 %cmp6, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !115
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv
  %2 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %3 = load float, ptr %m_sst, align 8, !tbaa !420
  %vtable = load ptr, ptr %2, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 3
  %4 = load ptr, ptr %vfn, align 8
  tail call void %4(ptr noundef nonnull align 8 dereferenceable(181) %2, float noundef %3, float noundef %sor)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody15cleanupClustersEv(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this) local_unnamed_addr #4 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !116
  %cmp26 = icmp sgt i32 %0, 0
  br i1 %cmp26, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.inc, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %i.027 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !115
  %idxprom.i = sext i32 %i.027 to i64
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %idxprom.i
  %2 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %3 = load float, ptr %m_sst, align 8, !tbaa !420
  %vtable = load ptr, ptr %2, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 4
  %4 = load ptr, ptr %vfn, align 8
  tail call void %4(ptr noundef nonnull align 8 dereferenceable(181) %2, float noundef %3)
  %5 = load ptr, ptr %m_data.i, align 8, !tbaa !115
  %arrayidx.i18 = getelementptr inbounds ptr, ptr %5, i64 %idxprom.i
  %6 = load ptr, ptr %arrayidx.i18, align 8, !tbaa !219
  %m_delete = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %6, i64 0, i32 9
  %7 = load i8, ptr %m_delete, align 4, !tbaa !484, !range !159, !noundef !192
  %tobool.not = icmp eq i8 %7, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  %.pre = load i32, ptr %m_size.i, align 4, !tbaa !116
  br label %for.inc

if.then:                                          ; preds = %for.body
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %6)
  %dec = add nsw i32 %i.027, -1
  %8 = load ptr, ptr %m_data.i, align 8, !tbaa !115
  %9 = load i32, ptr %m_size.i, align 4, !tbaa !116
  %cmp8.i.i = icmp sgt i32 %9, 0
  br i1 %cmp8.i.i, label %for.body.lr.ph.i.i, label %for.inc

for.body.lr.ph.i.i:                               ; preds = %if.then
  %arrayidx.i24 = getelementptr inbounds ptr, ptr %8, i64 %idxprom.i
  %10 = load ptr, ptr %arrayidx.i24, align 8, !tbaa !219
  %wide.trip.count.i.i = zext i32 %9 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %for.inc.i.i ]
  %arrayidx.i.i = getelementptr inbounds ptr, ptr %8, i64 %indvars.iv.i.i
  %11 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !219
  %cmp3.i.i = icmp eq ptr %11, %10
  br i1 %cmp3.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i, label %for.inc.i.i

for.inc.i.i:                                      ; preds = %for.body.i.i
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.inc, label %for.body.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i: ; preds = %for.body.i.i
  %12 = trunc i64 %indvars.iv.i.i to i32
  %cmp.i = icmp sgt i32 %9, %12
  br i1 %cmp.i, label %if.then.i, label %for.inc

if.then.i:                                        ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i
  %sub.i = add nsw i32 %9, -1
  %sext.i = shl i64 %indvars.iv.i.i, 32
  %idxprom.i.i = ashr exact i64 %sext.i, 32
  %arrayidx.i7.i = getelementptr inbounds ptr, ptr %8, i64 %idxprom.i.i
  %13 = load ptr, ptr %arrayidx.i7.i, align 8, !tbaa !219
  %idxprom3.i.i = sext i32 %sub.i to i64
  %arrayidx4.i.i = getelementptr inbounds ptr, ptr %8, i64 %idxprom3.i.i
  %14 = load ptr, ptr %arrayidx4.i.i, align 8, !tbaa !219
  store ptr %14, ptr %arrayidx.i7.i, align 8, !tbaa !219
  %15 = load ptr, ptr %m_data.i, align 8, !tbaa !115
  %arrayidx10.i.i = getelementptr inbounds ptr, ptr %15, i64 %idxprom3.i.i
  store ptr %13, ptr %arrayidx10.i.i, align 8, !tbaa !219
  store i32 %sub.i, ptr %m_size.i, align 4, !tbaa !116
  br label %for.inc

for.inc:                                          ; preds = %for.inc.i.i, %for.body.for.inc_crit_edge, %if.then.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i, %if.then
  %16 = phi i32 [ %.pre, %for.body.for.inc_crit_edge ], [ %9, %if.then ], [ %9, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i ], [ %sub.i, %if.then.i ], [ %9, %for.inc.i.i ]
  %i.1 = phi i32 [ %i.027, %for.body.for.inc_crit_edge ], [ %dec, %if.then ], [ %dec, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i ], [ %dec, %if.then.i ], [ %dec, %for.inc.i.i ]
  %inc = add nsw i32 %i.1, 1
  %cmp = icmp slt i32 %inc, %16
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody15integrateMotionEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #10 align 2 {
entry:
  tail call void @_ZN10btSoftBody13updateNormalsEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_ZN10btSoftBody15RayFromToCasterC2ERK9btVector3S3_f(ptr nocapture noundef nonnull writeonly align 8 dereferenceable(76) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %rayFrom, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %rayTo, float noundef %mxt) unnamed_addr #21 align 2 personality ptr @__gxx_personality_v0 {
invoke.cont6:
  store ptr getelementptr inbounds ({ [9 x ptr] }, ptr @_ZTVN10btSoftBody15RayFromToCasterE, i64 0, inrange i32 0, i64 2), ptr %this, align 8, !tbaa !5
  %m_rayFrom = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 1
  %m_rayTo = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 2
  %m_rayNormalizedDirection = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, i64 16, i1 false), !tbaa.struct !163
  %0 = load <2 x float>, ptr %rayTo, align 4, !tbaa !137
  %1 = load <2 x float>, ptr %rayFrom, align 4, !tbaa !137
  %2 = fsub <2 x float> %0, %1
  %arrayidx11.i = getelementptr inbounds [4 x float], ptr %rayTo, i64 0, i64 2
  %3 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds [4 x float], ptr %rayFrom, i64 0, i64 2
  %4 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %3, %4
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i, i64 0
  store <2 x float> %2, ptr %m_rayNormalizedDirection, align 8, !tbaa.struct !163
  %ref.tmp.sroa.5.0.m_rayNormalizedDirection7.sroa_idx = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 3, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %ref.tmp.sroa.5.0.m_rayNormalizedDirection7.sroa_idx, align 8, !tbaa.struct !165
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rayTo, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, i64 16, i1 false), !tbaa.struct !163
  %m_mint = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 4
  store float %mxt, ptr %m_mint, align 8, !tbaa !415
  %m_face = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 6
  store ptr null, ptr %m_face, align 8, !tbaa !418
  %m_tests = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 7
  store i32 0, ptr %m_tests, align 8, !tbaa !419
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody15RayFromToCaster7ProcessEPK10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(76) %this, ptr nocapture noundef readonly %leaf) unnamed_addr #4 align 2 {
entry:
  %0 = getelementptr inbounds %struct.btDbvtNode, ptr %leaf, i64 0, i32 2
  %1 = load ptr, ptr %0, align 8, !tbaa !164
  %m_rayFrom = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 1
  %m_rayTo = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 2
  %m_rayNormalizedDirection = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 3
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 0, i32 1
  %2 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 1
  %arrayidx3 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 0, i32 1, i64 1
  %3 = load ptr, ptr %arrayidx3, align 8, !tbaa !219
  %m_x4 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1
  %arrayidx6 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 0, i32 1, i64 2
  %4 = load ptr, ptr %arrayidx6, align 8, !tbaa !219
  %m_x7 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1
  %m_mint = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 4
  %5 = load float, ptr %m_mint, align 8, !tbaa !415
  %call = tail call noundef float @_ZN10btSoftBody15RayFromToCaster17rayFromToTriangleERK9btVector3S3_S3_S3_S3_S3_f(ptr noundef nonnull align 4 dereferenceable(16) %m_rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %m_rayTo, ptr noundef nonnull align 4 dereferenceable(16) %m_rayNormalizedDirection, ptr noundef nonnull align 4 dereferenceable(16) %m_x, ptr noundef nonnull align 4 dereferenceable(16) %m_x4, ptr noundef nonnull align 4 dereferenceable(16) %m_x7, float noundef %5)
  %cmp = fcmp ogt float %call, 0.000000e+00
  %6 = load float, ptr %m_mint, align 8
  %cmp9 = fcmp olt float %call, %6
  %or.cond = select i1 %cmp, i1 %cmp9, i1 false
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store float %call, ptr %m_mint, align 8, !tbaa !415
  %m_face = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 6
  store ptr %1, ptr %m_face, align 8, !tbaa !418
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %m_tests = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 7
  %7 = load i32, ptr %m_tests, align 8, !tbaa !419
  %inc = add nsw i32 %7, 1
  store i32 %inc, ptr %m_tests, align 8, !tbaa !419
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local noundef float @_ZN10btSoftBody15RayFromToCaster17rayFromToTriangleERK9btVector3S3_S3_S3_S3_S3_f(ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, ptr noundef nonnull align 4 dereferenceable(16) %rayNormalizedDirection, ptr noundef nonnull align 4 dereferenceable(16) %a, ptr noundef nonnull align 4 dereferenceable(16) %b, ptr noundef nonnull align 4 dereferenceable(16) %c, float noundef %maxt) local_unnamed_addr #26 comdat align 2 {
entry:
  %0 = load float, ptr %b, align 4, !tbaa !137
  %1 = load float, ptr %a, align 4, !tbaa !137
  %sub.i = fsub float %0, %1
  %arrayidx5.i = getelementptr inbounds [4 x float], ptr %b, i64 0, i64 1
  %2 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds [4 x float], ptr %a, i64 0, i64 1
  %3 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %sub8.i = fsub float %2, %3
  %arrayidx11.i = getelementptr inbounds [4 x float], ptr %b, i64 0, i64 2
  %4 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds [4 x float], ptr %a, i64 0, i64 2
  %5 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %4, %5
  %6 = load float, ptr %c, align 4, !tbaa !137
  %sub.i74 = fsub float %6, %1
  %arrayidx5.i75 = getelementptr inbounds [4 x float], ptr %c, i64 0, i64 1
  %7 = load float, ptr %arrayidx5.i75, align 4, !tbaa !137
  %sub8.i77 = fsub float %7, %3
  %arrayidx11.i78 = getelementptr inbounds [4 x float], ptr %c, i64 0, i64 2
  %8 = load float, ptr %arrayidx11.i78, align 4, !tbaa !137
  %sub14.i80 = fsub float %8, %5
  %9 = fneg float %sub14.i
  %neg.i.i = fmul float %sub8.i77, %9
  %10 = tail call float @llvm.fmuladd.f32(float %sub8.i, float %sub14.i80, float %neg.i.i)
  %11 = fneg float %sub.i
  %neg19.i.i = fmul float %sub14.i80, %11
  %12 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub.i74, float %neg19.i.i)
  %13 = fneg float %sub8.i
  %neg30.i.i = fmul float %sub.i74, %13
  %14 = tail call float @llvm.fmuladd.f32(float %sub.i, float %sub8.i77, float %neg30.i.i)
  %15 = load float, ptr %rayNormalizedDirection, align 4, !tbaa !137
  %arrayidx5.i.i88 = getelementptr inbounds [4 x float], ptr %rayNormalizedDirection, i64 0, i64 1
  %16 = load float, ptr %arrayidx5.i.i88, align 4, !tbaa !137
  %mul8.i.i90 = fmul float %16, %12
  %17 = tail call float @llvm.fmuladd.f32(float %15, float %10, float %mul8.i.i90)
  %arrayidx10.i.i91 = getelementptr inbounds [4 x float], ptr %rayNormalizedDirection, i64 0, i64 2
  %18 = load float, ptr %arrayidx10.i.i91, align 4, !tbaa !137
  %19 = tail call float @llvm.fmuladd.f32(float %18, float %14, float %17)
  %20 = tail call float @llvm.fabs.f32(float %19)
  %cmp.i = fcmp olt float %20, 0x3E80000000000000
  br i1 %cmp.i, label %cleanup58, label %if.then

if.then:                                          ; preds = %entry
  %21 = load float, ptr %rayFrom, align 4, !tbaa !137
  %arrayidx5.i.i93 = getelementptr inbounds [4 x float], ptr %rayFrom, i64 0, i64 1
  %22 = load float, ptr %arrayidx5.i.i93, align 4, !tbaa !137
  %arrayidx10.i.i96 = getelementptr inbounds [4 x float], ptr %rayFrom, i64 0, i64 2
  %23 = load float, ptr %arrayidx10.i.i96, align 4, !tbaa !137
  %24 = insertelement <2 x float> poison, float %12, i64 0
  %25 = shufflevector <2 x float> %24, <2 x float> poison, <2 x i32> zeroinitializer
  %26 = insertelement <2 x float> poison, float %22, i64 0
  %27 = insertelement <2 x float> %26, float %3, i64 1
  %28 = fmul <2 x float> %25, %27
  %29 = insertelement <2 x float> poison, float %21, i64 0
  %30 = insertelement <2 x float> %29, float %1, i64 1
  %31 = insertelement <2 x float> poison, float %10, i64 0
  %32 = shufflevector <2 x float> %31, <2 x float> poison, <2 x i32> zeroinitializer
  %33 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %30, <2 x float> %32, <2 x float> %28)
  %34 = insertelement <2 x float> poison, float %23, i64 0
  %35 = insertelement <2 x float> %34, float %5, i64 1
  %36 = insertelement <2 x float> poison, float %14, i64 0
  %37 = shufflevector <2 x float> %36, <2 x float> poison, <2 x i32> zeroinitializer
  %38 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %35, <2 x float> %37, <2 x float> %33)
  %shift = shufflevector <2 x float> %38, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %39 = fsub <2 x float> %38, %shift
  %sub = extractelement <2 x float> %39, i64 0
  %fneg = fneg float %sub
  %div = fdiv float %fneg, %19
  %cmp = fcmp ogt float %div, 0x3EB4000000000000
  %cmp10 = fcmp olt float %div, %maxt
  %or.cond = and i1 %cmp, %cmp10
  br i1 %or.cond, label %if.then11, label %cleanup53.thread

if.then11:                                        ; preds = %if.then
  %mul.i = fmul float %15, %div
  %mul4.i = fmul float %16, %div
  %mul8.i = fmul float %18, %div
  %add.i = fadd float %21, %mul.i
  %add8.i = fadd float %22, %mul4.i
  %add14.i = fadd float %23, %mul8.i
  %sub.i113 = fsub float %1, %add.i
  %sub8.i116 = fsub float %3, %add8.i
  %sub14.i119 = fsub float %5, %add14.i
  %sub.i125 = fsub float %0, %add.i
  %sub8.i128 = fsub float %2, %add8.i
  %sub14.i131 = fsub float %4, %add14.i
  %40 = fneg float %sub14.i119
  %neg.i.i141 = fmul float %sub8.i128, %40
  %41 = tail call float @llvm.fmuladd.f32(float %sub8.i116, float %sub14.i131, float %neg.i.i141)
  %42 = fneg float %sub.i113
  %neg19.i.i142 = fmul float %sub14.i131, %42
  %43 = tail call float @llvm.fmuladd.f32(float %sub14.i119, float %sub.i125, float %neg19.i.i142)
  %44 = fneg float %sub8.i116
  %neg30.i.i143 = fmul float %sub.i125, %44
  %45 = tail call float @llvm.fmuladd.f32(float %sub.i113, float %sub8.i128, float %neg30.i.i143)
  %mul8.i.i151 = fmul float %12, %43
  %46 = tail call float @llvm.fmuladd.f32(float %10, float %41, float %mul8.i.i151)
  %47 = tail call float @llvm.fmuladd.f32(float %14, float %45, float %46)
  %cmp27 = fcmp ogt float %47, 0xBEB4000000000000
  br i1 %cmp27, label %land.lhs.true28, label %cleanup53.thread

land.lhs.true28:                                  ; preds = %if.then11
  %sub.i166 = fsub float %6, %add.i
  %sub8.i169 = fsub float %7, %add8.i
  %sub14.i172 = fsub float %8, %add14.i
  %48 = fneg float %sub14.i131
  %neg.i.i182 = fmul float %sub8.i169, %48
  %49 = tail call float @llvm.fmuladd.f32(float %sub8.i128, float %sub14.i172, float %neg.i.i182)
  %50 = fneg float %sub.i125
  %neg19.i.i183 = fmul float %sub14.i172, %50
  %51 = tail call float @llvm.fmuladd.f32(float %sub14.i131, float %sub.i166, float %neg19.i.i183)
  %52 = fneg float %sub8.i128
  %neg30.i.i184 = fmul float %sub.i166, %52
  %53 = tail call float @llvm.fmuladd.f32(float %sub.i125, float %sub8.i169, float %neg30.i.i184)
  %mul8.i.i192 = fmul float %12, %51
  %54 = tail call float @llvm.fmuladd.f32(float %10, float %49, float %mul8.i.i192)
  %55 = tail call float @llvm.fmuladd.f32(float %14, float %53, float %54)
  %cmp39 = fcmp ogt float %55, 0xBEB4000000000000
  br i1 %cmp39, label %land.rhs, label %cleanup53.thread

land.rhs:                                         ; preds = %land.lhs.true28
  %56 = fneg float %sub14.i172
  %neg.i.i223 = fmul float %sub8.i116, %56
  %57 = tail call float @llvm.fmuladd.f32(float %sub8.i169, float %sub14.i119, float %neg.i.i223)
  %58 = fneg float %sub.i166
  %neg19.i.i224 = fmul float %sub14.i119, %58
  %59 = tail call float @llvm.fmuladd.f32(float %sub14.i172, float %sub.i113, float %neg19.i.i224)
  %60 = fneg float %sub8.i169
  %neg30.i.i225 = fmul float %sub.i113, %60
  %61 = tail call float @llvm.fmuladd.f32(float %sub.i166, float %sub8.i116, float %neg30.i.i225)
  %mul8.i.i233 = fmul float %12, %59
  %62 = tail call float @llvm.fmuladd.f32(float %10, float %57, float %mul8.i.i233)
  %63 = tail call float @llvm.fmuladd.f32(float %14, float %61, float %62)
  %cmp50 = fcmp ogt float %63, 0xBEB4000000000000
  br i1 %cmp50, label %cleanup58, label %cleanup53.thread

cleanup53.thread:                                 ; preds = %if.then, %land.rhs, %if.then11, %land.lhs.true28
  br label %cleanup58

cleanup58:                                        ; preds = %entry, %cleanup53.thread, %land.rhs
  %retval.3 = phi float [ %div, %land.rhs ], [ -1.000000e+00, %cleanup53.thread ], [ -1.000000e+00, %entry ]
  ret float %retval.3
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN6btDbvt7rayTestEPK10btDbvtNodeRK9btVector3S5_RNS_8ICollideE(ptr noundef %root, ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, ptr noundef nonnull align 8 dereferenceable(8) %policy) local_unnamed_addr #26 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %bounds = alloca [2 x %class.btVector3], align 16
  %tobool.not = icmp eq ptr %root, null
  br i1 %tobool.not, label %if.end109, label %if.then

if.then:                                          ; preds = %entry
  %arrayidx11.i = getelementptr inbounds [4 x float], ptr %rayTo, i64 0, i64 2
  %0 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds [4 x float], ptr %rayFrom, i64 0, i64 2
  %1 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %0, %1
  %2 = load <2 x float>, ptr %rayTo, align 4, !tbaa !137
  %3 = load <2 x float>, ptr %rayFrom, align 4, !tbaa !137
  %4 = fsub <2 x float> %2, %3
  %5 = extractelement <2 x float> %4, i64 1
  %mul8.i.i.i.i = fmul float %5, %5
  %6 = extractelement <2 x float> %4, i64 0
  %7 = tail call float @llvm.fmuladd.f32(float %6, float %6, float %mul8.i.i.i.i)
  %8 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub14.i, float %7)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %8)
  %div.i.i = fdiv float 1.000000e+00, %sqrt.i.i
  %9 = insertelement <2 x float> poison, float %div.i.i, i64 0
  %10 = shufflevector <2 x float> %9, <2 x float> poison, <2 x i32> zeroinitializer
  %11 = fmul <2 x float> %4, %10
  %mul7.i.i.i = fmul float %sub14.i, %div.i.i
  %12 = fdiv <2 x float> <float 1.000000e+00, float 1.000000e+00>, %11
  %cmp21 = fcmp oeq float %mul7.i.i.i, 0.000000e+00
  %div26 = fdiv float 1.000000e+00, %mul7.i.i.i
  %cond28 = select i1 %cmp21, float 0x43ABC16D60000000, float %div26
  %13 = fcmp oeq <2 x float> %11, zeroinitializer
  %14 = select <2 x i1> %13, <2 x float> <float 0x43ABC16D60000000, float 0x43ABC16D60000000>, <2 x float> %12
  %15 = extractelement <2 x float> %14, i64 1
  %cmp38 = fcmp olt float %15, 0.000000e+00
  %16 = fmul <2 x float> %4, %11
  %mul8.i = extractelement <2 x float> %16, i64 1
  %17 = extractelement <2 x float> %11, i64 0
  %18 = tail call float @llvm.fmuladd.f32(float %17, float %6, float %mul8.i)
  %call.i.i.i.i142 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 1024, i32 noundef 16)
  %19 = getelementptr inbounds i8, ptr %call.i.i.i.i142, i64 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(1024) %19, i8 0, i64 1016, i1 false), !tbaa !219
  %cmp44 = fcmp olt float %cond28, 0.000000e+00
  store ptr %root, ptr %call.i.i.i.i142, align 8, !tbaa !219
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %bounds) #38
  %20 = extractelement <2 x float> %14, i64 0
  %cmp33 = fcmp olt float %20, 0.000000e+00
  %21 = tail call float @llvm.fmuladd.f32(float %mul7.i.i.i, float %sub14.i, float %18)
  %arrayidx64 = getelementptr inbounds [2 x %class.btVector3], ptr %bounds, i64 0, i64 1
  %idxprom.i144 = zext i1 %cmp33 to i64
  %arrayidx1.i = getelementptr inbounds %class.btVector3, ptr %bounds, i64 %idxprom.i144
  %not.cmp33 = xor i1 %cmp33, true
  %idxprom6.i = zext i1 %not.cmp33 to i64
  %arrayidx7.i146 = getelementptr inbounds %class.btVector3, ptr %bounds, i64 %idxprom6.i
  %idxprom14.i = zext i1 %cmp38 to i64
  %arrayidx.i.i = getelementptr inbounds %class.btVector3, ptr %bounds, i64 %idxprom14.i, i32 0, i64 1
  %not.cmp38 = xor i1 %cmp38, true
  %idxprom23.i = zext i1 %not.cmp38 to i64
  %arrayidx.i114.i = getelementptr inbounds %class.btVector3, ptr %bounds, i64 %idxprom23.i, i32 0, i64 1
  %idxprom38.i = zext i1 %cmp44 to i64
  %arrayidx.i117.i = getelementptr inbounds %class.btVector3, ptr %bounds, i64 %idxprom38.i, i32 0, i64 2
  %not.cmp44 = xor i1 %cmp44, true
  %idxprom47.i = zext i1 %not.cmp44 to i64
  %arrayidx.i120.i = getelementptr inbounds %class.btVector3, ptr %bounds, i64 %idxprom47.i, i32 0, i64 2
  br label %do.body

do.body:                                          ; preds = %if.then, %if.end93
  %stack.sroa.21220.2 = phi ptr [ %stack.sroa.21220.6, %if.end93 ], [ %call.i.i.i.i142, %if.then ]
  %stack.sroa.14.2 = phi i32 [ %stack.sroa.14.6, %if.end93 ], [ 128, %if.then ]
  %stack.sroa.3.0 = phi i32 [ %stack.sroa.3.2, %if.end93 ], [ 128, %if.then ]
  %treshold.0 = phi i32 [ %treshold.2, %if.end93 ], [ 126, %if.then ]
  %depth.0 = phi i32 [ %depth.1, %if.end93 ], [ 1, %if.then ]
  %stack.sroa.21220.2284 = ptrtoint ptr %stack.sroa.21220.2 to i64
  %dec = add nsw i32 %depth.0, -1
  %idxprom.i = sext i32 %dec to i64
  %arrayidx.i = getelementptr inbounds ptr, ptr %stack.sroa.21220.2, i64 %idxprom.i
  %22 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %bounds, ptr noundef nonnull align 4 dereferenceable(16) %22, i64 16, i1 false), !tbaa.struct !163
  %mx.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %22, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %arrayidx64, ptr noundef nonnull align 4 dereferenceable(16) %mx.i, i64 16, i1 false), !tbaa.struct !163
  %23 = load float, ptr %arrayidx1.i, align 16, !tbaa !137
  %24 = load float, ptr %arrayidx7.i146, align 16, !tbaa !137
  %25 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %26 = load <2 x float>, ptr %rayFrom, align 4, !tbaa !137
  %27 = insertelement <2 x float> poison, float %24, i64 0
  %28 = insertelement <2 x float> %27, float %25, i64 1
  %29 = fsub <2 x float> %28, %26
  %30 = fmul <2 x float> %14, %29
  %31 = load float, ptr %arrayidx.i114.i, align 4, !tbaa !137
  %32 = insertelement <2 x float> poison, float %23, i64 0
  %33 = insertelement <2 x float> %32, float %31, i64 1
  %34 = fsub <2 x float> %33, %26
  %35 = fmul <2 x float> %14, %34
  %36 = extractelement <2 x float> %35, i64 0
  %37 = extractelement <2 x float> %35, i64 1
  %cmp.i148 = fcmp ogt float %36, %37
  %38 = extractelement <2 x float> %30, i64 0
  %39 = extractelement <2 x float> %30, i64 1
  %cmp30.i = fcmp ogt float %39, %38
  %or.cond.i = select i1 %cmp.i148, i1 true, i1 %cmp30.i
  br i1 %or.cond.i, label %if.end93, label %if.end.i149

if.end.i149:                                      ; preds = %do.body
  %40 = shufflevector <2 x float> %30, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %41 = fcmp olt <2 x float> %35, %40
  %42 = extractelement <2 x i1> %41, i64 0
  %43 = select i1 %42, float %39, float %36
  %44 = extractelement <2 x i1> %41, i64 1
  %tmax.0.i = select i1 %44, float %37, float %38
  %45 = load float, ptr %arrayidx.i117.i, align 8, !tbaa !137
  %46 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub42.i = fsub float %45, %46
  %mul44.i = fmul float %cond28, %sub42.i
  %47 = load float, ptr %arrayidx.i120.i, align 8, !tbaa !137
  %sub51.i = fsub float %47, %46
  %mul53.i = fmul float %cond28, %sub51.i
  %cmp54.i = fcmp ogt float %43, %mul53.i
  %cmp56.i = fcmp ogt float %mul44.i, %tmax.0.i
  %or.cond111.i = select i1 %cmp54.i, i1 true, i1 %cmp56.i
  br i1 %or.cond111.i, label %if.end93, label %if.end58.i

if.end58.i:                                       ; preds = %if.end.i149
  %cmp59.i = fcmp ogt float %mul44.i, %43
  %48 = select i1 %cmp59.i, float %mul44.i, float %43
  %cmp62.i = fcmp olt float %mul53.i, %tmax.0.i
  %tmax.1.i = select i1 %cmp62.i, float %mul53.i, float %tmax.0.i
  %cmp65.i = fcmp olt float %48, %21
  %cmp66.i = fcmp ogt float %tmax.1.i, 0.000000e+00
  %49 = select i1 %cmp65.i, i1 %cmp66.i, i1 false
  br i1 %49, label %invoke.cont72, label %if.end93

invoke.cont72:                                    ; preds = %if.end58.i
  %arrayidx.i.i150 = getelementptr inbounds %struct.btDbvtNode, ptr %22, i64 0, i32 2, i32 0, i64 1
  %50 = load ptr, ptr %arrayidx.i.i150, align 8, !tbaa !164
  %cmp.i.i151.not = icmp eq ptr %50, null
  br i1 %cmp.i.i151.not, label %if.else, label %if.then74

if.then74:                                        ; preds = %invoke.cont72
  %cmp75 = icmp sgt i32 %dec, %treshold.0
  br i1 %cmp75, label %if.then76, label %if.end

if.then76:                                        ; preds = %if.then74
  %mul = shl nsw i32 %stack.sroa.3.0, 1
  %cmp4.i154 = icmp slt i32 %stack.sroa.3.0, %mul
  br i1 %cmp4.i154, label %if.then5.i158, label %invoke.cont81

if.then5.i158:                                    ; preds = %if.then76
  %cmp.i.i157 = icmp slt i32 %stack.sroa.14.2, %mul
  br i1 %cmp.i.i157, label %if.then.i.i159, label %for.body10.lr.ph.i180

if.then.i.i159:                                   ; preds = %if.then5.i158
  %tobool.not.i.i.i = icmp eq i32 %stack.sroa.3.0, 0
  br i1 %tobool.not.i.i.i, label %if.then3.i.i.i177, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i159
  %conv.i.i.i.i = sext i32 %mul to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 3
  %call.i.i.i.i187 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
          to label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i unwind label %lpad80

_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i
  %cmp7.i.i.i161 = icmp sgt i32 %stack.sroa.3.0, 0
  br i1 %cmp7.i.i.i161, label %for.body.lr.ph.i.i.i164, label %if.then3.i.i.i177

for.body.lr.ph.i.i.i164:                          ; preds = %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i
  %call.i.i.i.i187283 = ptrtoint ptr %call.i.i.i.i187 to i64
  %wide.trip.count.i.i.i163 = zext i32 %stack.sroa.3.0 to i64
  %min.iters.check = icmp ult i32 %stack.sroa.3.0, 6
  %51 = sub i64 %call.i.i.i.i187283, %stack.sroa.21220.2284
  %diff.check = icmp ult i64 %51, 32
  %or.cond = or i1 %min.iters.check, %diff.check
  br i1 %or.cond, label %for.body.i.i.i170.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i.i164
  %n.vec = and i64 %wide.trip.count.i.i.i163, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %52 = getelementptr inbounds ptr, ptr %call.i.i.i.i187, i64 %index
  %53 = getelementptr inbounds ptr, ptr %stack.sroa.21220.2, i64 %index
  %wide.load = load <2 x ptr>, ptr %53, align 8, !tbaa !219
  %54 = getelementptr inbounds ptr, ptr %53, i64 2
  %wide.load285 = load <2 x ptr>, ptr %54, align 8, !tbaa !219
  store <2 x ptr> %wide.load, ptr %52, align 8, !tbaa !219
  %55 = getelementptr inbounds ptr, ptr %52, i64 2
  store <2 x ptr> %wide.load285, ptr %55, align 8, !tbaa !219
  %index.next = add nuw i64 %index, 4
  %56 = icmp eq i64 %index.next, %n.vec
  br i1 %56, label %middle.block, label %vector.body, !llvm.loop !485

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i.i163
  br i1 %cmp.n, label %if.then3.i.i.i177, label %for.body.i.i.i170.preheader

for.body.i.i.i170.preheader:                      ; preds = %for.body.lr.ph.i.i.i164, %middle.block
  %indvars.iv.i.i.i165.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i164 ], [ %n.vec, %middle.block ]
  %57 = xor i64 %indvars.iv.i.i.i165.ph, -1
  %58 = add nsw i64 %57, %wide.trip.count.i.i.i163
  %xtraiter = and i64 %wide.trip.count.i.i.i163, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.i.i.i170.prol.loopexit, label %for.body.i.i.i170.prol

for.body.i.i.i170.prol:                           ; preds = %for.body.i.i.i170.preheader, %for.body.i.i.i170.prol
  %indvars.iv.i.i.i165.prol = phi i64 [ %indvars.iv.next.i.i.i168.prol, %for.body.i.i.i170.prol ], [ %indvars.iv.i.i.i165.ph, %for.body.i.i.i170.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.i.i170.prol ], [ 0, %for.body.i.i.i170.preheader ]
  %arrayidx.i.i.i166.prol = getelementptr inbounds ptr, ptr %call.i.i.i.i187, i64 %indvars.iv.i.i.i165.prol
  %arrayidx3.i.i.i167.prol = getelementptr inbounds ptr, ptr %stack.sroa.21220.2, i64 %indvars.iv.i.i.i165.prol
  %59 = load ptr, ptr %arrayidx3.i.i.i167.prol, align 8, !tbaa !219
  store ptr %59, ptr %arrayidx.i.i.i166.prol, align 8, !tbaa !219
  %indvars.iv.next.i.i.i168.prol = add nuw nsw i64 %indvars.iv.i.i.i165.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.i.i.i170.prol.loopexit, label %for.body.i.i.i170.prol, !llvm.loop !486

for.body.i.i.i170.prol.loopexit:                  ; preds = %for.body.i.i.i170.prol, %for.body.i.i.i170.preheader
  %indvars.iv.i.i.i165.unr = phi i64 [ %indvars.iv.i.i.i165.ph, %for.body.i.i.i170.preheader ], [ %indvars.iv.next.i.i.i168.prol, %for.body.i.i.i170.prol ]
  %60 = icmp ult i64 %58, 3
  br i1 %60, label %if.then3.i.i.i177, label %for.body.i.i.i170

for.body.i.i.i170:                                ; preds = %for.body.i.i.i170.prol.loopexit, %for.body.i.i.i170
  %indvars.iv.i.i.i165 = phi i64 [ %indvars.iv.next.i.i.i168.3, %for.body.i.i.i170 ], [ %indvars.iv.i.i.i165.unr, %for.body.i.i.i170.prol.loopexit ]
  %arrayidx.i.i.i166 = getelementptr inbounds ptr, ptr %call.i.i.i.i187, i64 %indvars.iv.i.i.i165
  %arrayidx3.i.i.i167 = getelementptr inbounds ptr, ptr %stack.sroa.21220.2, i64 %indvars.iv.i.i.i165
  %61 = load ptr, ptr %arrayidx3.i.i.i167, align 8, !tbaa !219
  store ptr %61, ptr %arrayidx.i.i.i166, align 8, !tbaa !219
  %indvars.iv.next.i.i.i168 = add nuw nsw i64 %indvars.iv.i.i.i165, 1
  %arrayidx.i.i.i166.1 = getelementptr inbounds ptr, ptr %call.i.i.i.i187, i64 %indvars.iv.next.i.i.i168
  %arrayidx3.i.i.i167.1 = getelementptr inbounds ptr, ptr %stack.sroa.21220.2, i64 %indvars.iv.next.i.i.i168
  %62 = load ptr, ptr %arrayidx3.i.i.i167.1, align 8, !tbaa !219
  store ptr %62, ptr %arrayidx.i.i.i166.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i168.1 = add nuw nsw i64 %indvars.iv.i.i.i165, 2
  %arrayidx.i.i.i166.2 = getelementptr inbounds ptr, ptr %call.i.i.i.i187, i64 %indvars.iv.next.i.i.i168.1
  %arrayidx3.i.i.i167.2 = getelementptr inbounds ptr, ptr %stack.sroa.21220.2, i64 %indvars.iv.next.i.i.i168.1
  %63 = load ptr, ptr %arrayidx3.i.i.i167.2, align 8, !tbaa !219
  store ptr %63, ptr %arrayidx.i.i.i166.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i168.2 = add nuw nsw i64 %indvars.iv.i.i.i165, 3
  %arrayidx.i.i.i166.3 = getelementptr inbounds ptr, ptr %call.i.i.i.i187, i64 %indvars.iv.next.i.i.i168.2
  %arrayidx3.i.i.i167.3 = getelementptr inbounds ptr, ptr %stack.sroa.21220.2, i64 %indvars.iv.next.i.i.i168.2
  %64 = load ptr, ptr %arrayidx3.i.i.i167.3, align 8, !tbaa !219
  store ptr %64, ptr %arrayidx.i.i.i166.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i168.3 = add nuw nsw i64 %indvars.iv.i.i.i165, 4
  %exitcond.not.i.i.i169.3 = icmp eq i64 %indvars.iv.next.i.i.i168.3, %wide.trip.count.i.i.i163
  br i1 %exitcond.not.i.i.i169.3, label %if.then3.i.i.i177, label %for.body.i.i.i170, !llvm.loop !487

if.then3.i.i.i177:                                ; preds = %for.body.i.i.i170.prol.loopexit, %for.body.i.i.i170, %middle.block, %if.then.i.i159, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i
  %retval.0.i.i.i276 = phi ptr [ %call.i.i.i.i187, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i ], [ null, %if.then.i.i159 ], [ %call.i.i.i.i187, %middle.block ], [ %call.i.i.i.i187, %for.body.i.i.i170 ], [ %call.i.i.i.i187, %for.body.i.i.i170.prol.loopexit ]
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stack.sroa.21220.2)
          to label %for.body10.lr.ph.i180 unwind label %lpad80

for.body10.lr.ph.i180:                            ; preds = %if.then3.i.i.i177, %if.then5.i158
  %stack.sroa.21220.3 = phi ptr [ %stack.sroa.21220.2, %if.then5.i158 ], [ %retval.0.i.i.i276, %if.then3.i.i.i177 ]
  %stack.sroa.14.3 = phi i32 [ %stack.sroa.14.2, %if.then5.i158 ], [ %mul, %if.then3.i.i.i177 ]
  %65 = sext i32 %stack.sroa.3.0 to i64
  %wide.trip.count.i = sext i32 %mul to i64
  %66 = shl nsw i64 %65, 3
  %scevgep = getelementptr i8, ptr %stack.sroa.21220.3, i64 %66
  %67 = sub nsw i64 %wide.trip.count.i, %65
  %68 = shl nsw i64 %67, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %scevgep, i8 0, i64 %68, i1 false), !tbaa !219
  br label %invoke.cont81

invoke.cont81:                                    ; preds = %for.body10.lr.ph.i180, %if.then76
  %stack.sroa.21220.4 = phi ptr [ %stack.sroa.21220.2, %if.then76 ], [ %stack.sroa.21220.3, %for.body10.lr.ph.i180 ]
  %stack.sroa.14.4 = phi i32 [ %stack.sroa.14.2, %if.then76 ], [ %stack.sroa.14.3, %for.body10.lr.ph.i180 ]
  %sub = add nsw i32 %mul, -2
  br label %if.end

lpad66:                                           ; preds = %if.else
  %69 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup99

lpad80:                                           ; preds = %if.then3.i.i.i177, %if.then.i.i.i
  %70 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup99

if.end:                                           ; preds = %invoke.cont81, %if.then74
  %stack.sroa.21220.5 = phi ptr [ %stack.sroa.21220.4, %invoke.cont81 ], [ %stack.sroa.21220.2, %if.then74 ]
  %stack.sroa.14.5 = phi i32 [ %stack.sroa.14.4, %invoke.cont81 ], [ %stack.sroa.14.2, %if.then74 ]
  %stack.sroa.3.1 = phi i32 [ %mul, %invoke.cont81 ], [ %stack.sroa.3.0, %if.then74 ]
  %treshold.1 = phi i32 [ %sub, %invoke.cont81 ], [ %treshold.0, %if.then74 ]
  %71 = getelementptr inbounds %struct.btDbvtNode, ptr %22, i64 0, i32 2
  %72 = load ptr, ptr %71, align 8, !tbaa !164
  %arrayidx.i193 = getelementptr inbounds ptr, ptr %stack.sroa.21220.5, i64 %idxprom.i
  store ptr %72, ptr %arrayidx.i193, align 8, !tbaa !219
  %73 = load ptr, ptr %arrayidx.i.i150, align 8, !tbaa !164
  %inc88 = add nsw i32 %depth.0, 1
  %idxprom.i195 = sext i32 %depth.0 to i64
  %arrayidx.i196 = getelementptr inbounds ptr, ptr %stack.sroa.21220.5, i64 %idxprom.i195
  store ptr %73, ptr %arrayidx.i196, align 8, !tbaa !219
  br label %if.end93

if.else:                                          ; preds = %invoke.cont72
  %vtable = load ptr, ptr %policy, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 3
  %74 = load ptr, ptr %vfn, align 8
  invoke void %74(ptr noundef nonnull align 8 dereferenceable(8) %policy, ptr noundef nonnull %22)
          to label %if.end93 unwind label %lpad66

if.end93:                                         ; preds = %if.end.i149, %do.body, %if.end, %if.else, %if.end58.i
  %stack.sroa.21220.6 = phi ptr [ %stack.sroa.21220.5, %if.end ], [ %stack.sroa.21220.2, %if.else ], [ %stack.sroa.21220.2, %if.end58.i ], [ %stack.sroa.21220.2, %do.body ], [ %stack.sroa.21220.2, %if.end.i149 ]
  %stack.sroa.14.6 = phi i32 [ %stack.sroa.14.5, %if.end ], [ %stack.sroa.14.2, %if.else ], [ %stack.sroa.14.2, %if.end58.i ], [ %stack.sroa.14.2, %do.body ], [ %stack.sroa.14.2, %if.end.i149 ]
  %stack.sroa.3.2 = phi i32 [ %stack.sroa.3.1, %if.end ], [ %stack.sroa.3.0, %if.else ], [ %stack.sroa.3.0, %if.end58.i ], [ %stack.sroa.3.0, %do.body ], [ %stack.sroa.3.0, %if.end.i149 ]
  %treshold.2 = phi i32 [ %treshold.1, %if.end ], [ %treshold.0, %if.else ], [ %treshold.0, %if.end58.i ], [ %treshold.0, %do.body ], [ %treshold.0, %if.end.i149 ]
  %depth.1 = phi i32 [ %inc88, %if.end ], [ %dec, %if.else ], [ %dec, %if.end58.i ], [ %dec, %do.body ], [ %dec, %if.end.i149 ]
  %tobool97.not = icmp eq i32 %depth.1, 0
  br i1 %tobool97.not, label %do.end, label %do.body

do.end:                                           ; preds = %if.end93
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %bounds) #38
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stack.sroa.21220.6)
  br label %if.end109

ehcleanup99:                                      ; preds = %lpad66, %lpad80
  %.pn = phi { ptr, i32 } [ %70, %lpad80 ], [ %69, %lpad66 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %bounds) #38
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stack.sroa.21220.2)
          to label %invoke.cont102 unwind label %terminate.lpad

invoke.cont102:                                   ; preds = %ehcleanup99
  resume { ptr, i32 } %.pn

if.end109:                                        ; preds = %do.end, %entry
  ret void

terminate.lpad:                                   ; preds = %ehcleanup99
  %75 = landingpad { ptr, i32 }
          catch ptr null
  %76 = extractvalue { ptr, i32 } %75, 0
  tail call void @__clang_call_terminate(ptr %76) #39
  unreachable
}

; Function Attrs: uwtable
define dso_local noundef zeroext i1 @_ZNK10btSoftBody12checkContactEP17btCollisionObjectRK9btVector3fRNS_4sCtiE(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, ptr noundef %colObj, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %x, float noundef %margin, ptr nocapture noundef nonnull writeonly align 8 dereferenceable(28) %cti) local_unnamed_addr #0 align 2 {
entry:
  %nrm = alloca %class.btVector3, align 4
  %ref.tmp = alloca %class.btVector3, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %nrm) #38
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %colObj, i64 0, i32 9
  %0 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %m_internalType.i.i = getelementptr inbounds %class.btCollisionObject, ptr %colObj, i64 0, i32 19
  %1 = load i32, ptr %m_internalType.i.i, align 8, !tbaa !134
  %cmp.i = icmp eq i32 %1, 2
  %colObj..i = select i1 %cmp.i, ptr %colObj, ptr null
  %tobool.not = icmp eq ptr %colObj..i, null
  %m_interpolationWorldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %colObj..i, i64 0, i32 2
  %m_worldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %colObj, i64 0, i32 1
  %cond-lvalue = select i1 %tobool.not, ptr %m_worldTransform.i, ptr %m_interpolationWorldTransform.i
  %m_worldInfo = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 7
  %2 = load ptr, ptr %m_worldInfo, align 8, !tbaa !42
  %m_sparsesdf = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %2, i64 0, i32 7
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #38
  %m_origin.i = getelementptr inbounds %class.btTransform, ptr %cond-lvalue, i64 0, i32 1
  %3 = load float, ptr %x, align 4, !tbaa !137
  %4 = load float, ptr %m_origin.i, align 4, !tbaa !137
  %sub.i.i = fsub float %3, %4
  %arrayidx5.i.i = getelementptr inbounds [4 x float], ptr %x, i64 0, i64 1
  %5 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds %class.btTransform, ptr %cond-lvalue, i64 0, i32 1, i32 0, i64 1
  %6 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %sub8.i.i = fsub float %5, %6
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %x, i64 0, i64 2
  %7 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %arrayidx13.i.i = getelementptr inbounds %class.btTransform, ptr %cond-lvalue, i64 0, i32 1, i32 0, i64 2
  %8 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %7, %8
  %arrayidx3.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %cond-lvalue, i64 0, i64 1
  %arrayidx6.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %cond-lvalue, i64 0, i64 2
  %arrayidx.i28.i.i = getelementptr inbounds [4 x float], ptr %cond-lvalue, i64 0, i64 2
  %arrayidx.i29.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %cond-lvalue, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i30.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %cond-lvalue, i64 0, i64 2, i32 0, i64 2
  %9 = load float, ptr %arrayidx.i28.i.i, align 4, !tbaa !137, !noalias !488
  %10 = load float, ptr %arrayidx.i29.i.i, align 4, !tbaa !137, !noalias !488
  %11 = load float, ptr %arrayidx.i30.i.i, align 4, !tbaa !137, !noalias !488
  %12 = load <2 x float>, ptr %cond-lvalue, align 4, !tbaa !137, !noalias !488
  %13 = load <2 x float>, ptr %arrayidx3.i.i, align 4, !tbaa !137, !noalias !488
  %14 = load <2 x float>, ptr %arrayidx6.i.i, align 4, !tbaa !137, !noalias !488
  %15 = insertelement <2 x float> poison, float %sub8.i.i, i64 0
  %16 = shufflevector <2 x float> %15, <2 x float> poison, <2 x i32> zeroinitializer
  %17 = fmul <2 x float> %16, %13
  %18 = insertelement <2 x float> poison, float %sub.i.i, i64 0
  %19 = shufflevector <2 x float> %18, <2 x float> poison, <2 x i32> zeroinitializer
  %20 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %12, <2 x float> %19, <2 x float> %17)
  %21 = insertelement <2 x float> poison, float %sub14.i.i, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> zeroinitializer
  %23 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %14, <2 x float> %22, <2 x float> %20)
  %mul8.i20.i.i = fmul float %sub8.i.i, %10
  %24 = tail call float @llvm.fmuladd.f32(float %9, float %sub.i.i, float %mul8.i20.i.i)
  %25 = tail call float @llvm.fmuladd.f32(float %11, float %sub14.i.i, float %24)
  %retval.sroa.3.12.vec.insert.i8.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %25, i64 0
  store <2 x float> %23, ptr %ref.tmp, align 8
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp, i64 0, i32 1
  store <2 x float> %retval.sroa.3.12.vec.insert.i8.i, ptr %26, align 8
  %call6 = call noundef float @_ZN11btSparseSdfILi3EE8EvaluateERK9btVector3P16btCollisionShapeRS1_f(ptr noundef nonnull align 8 dereferenceable(52) %m_sparsesdf, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp, ptr noundef %0, ptr noundef nonnull align 4 dereferenceable(16) %nrm, float noundef %margin)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  %cmp = fcmp olt float %call6, 0.000000e+00
  br i1 %cmp, label %if.then, label %cleanup

if.then:                                          ; preds = %entry
  %arrayidx.i27.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %cond-lvalue, i64 0, i64 2, i32 0, i64 1
  %arrayidx.i26.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %cond-lvalue, i64 0, i64 1, i32 0, i64 1
  %arrayidx.i.i.i = getelementptr inbounds [4 x float], ptr %cond-lvalue, i64 0, i64 1
  store ptr %colObj, ptr %cti, align 8, !tbaa !491
  %27 = load float, ptr %nrm, align 4, !tbaa !137
  %arrayidx7.i.i35 = getelementptr inbounds [4 x float], ptr %nrm, i64 0, i64 1
  %28 = load float, ptr %arrayidx7.i.i35, align 4, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds [4 x float], ptr %nrm, i64 0, i64 2
  %29 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %30 = load float, ptr %cond-lvalue, align 4, !tbaa !137
  %31 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %32 = load float, ptr %arrayidx.i28.i.i, align 4, !tbaa !137
  %33 = load float, ptr %arrayidx3.i.i, align 4, !tbaa !137
  %34 = load float, ptr %arrayidx.i26.i.i, align 4, !tbaa !137
  %35 = insertelement <2 x float> poison, float %28, i64 0
  %36 = shufflevector <2 x float> %35, <2 x float> poison, <2 x i32> zeroinitializer
  %37 = insertelement <2 x float> poison, float %31, i64 0
  %38 = insertelement <2 x float> %37, float %34, i64 1
  %39 = fmul <2 x float> %36, %38
  %40 = insertelement <2 x float> poison, float %30, i64 0
  %41 = insertelement <2 x float> %40, float %33, i64 1
  %42 = insertelement <2 x float> poison, float %27, i64 0
  %43 = shufflevector <2 x float> %42, <2 x float> poison, <2 x i32> zeroinitializer
  %44 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %41, <2 x float> %43, <2 x float> %39)
  %45 = load float, ptr %arrayidx.i29.i.i, align 4, !tbaa !137
  %46 = insertelement <2 x float> poison, float %32, i64 0
  %47 = insertelement <2 x float> %46, float %45, i64 1
  %48 = insertelement <2 x float> poison, float %29, i64 0
  %49 = shufflevector <2 x float> %48, <2 x float> poison, <2 x i32> zeroinitializer
  %50 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %47, <2 x float> %49, <2 x float> %44)
  %51 = load float, ptr %arrayidx6.i.i, align 4, !tbaa !137
  %52 = load float, ptr %arrayidx.i27.i.i, align 4, !tbaa !137
  %mul8.i20.i = fmul float %28, %52
  %53 = call float @llvm.fmuladd.f32(float %51, float %27, float %mul8.i20.i)
  %54 = load float, ptr %arrayidx.i30.i.i, align 4, !tbaa !137
  %55 = call float @llvm.fmuladd.f32(float %54, float %29, float %53)
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %55, i64 0
  %m_normal = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %cti, i64 0, i32 1
  store <2 x float> %50, ptr %m_normal, align 8, !tbaa.struct !163
  %ref.tmp7.sroa.4.0.m_normal.sroa_idx = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %cti, i64 0, i32 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %ref.tmp7.sroa.4.0.m_normal.sroa_idx, align 8, !tbaa.struct !165
  %56 = extractelement <2 x float> %50, i64 0
  %mul.i = fmul float %call6, %56
  %57 = extractelement <2 x float> %50, i64 1
  %mul4.i = fmul float %call6, %57
  %mul8.i = fmul float %call6, %55
  %58 = load float, ptr %x, align 4, !tbaa !137
  %sub.i = fsub float %58, %mul.i
  %59 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %sub8.i = fsub float %59, %mul4.i
  %60 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %sub14.i = fsub float %60, %mul8.i
  %mul8.i.i49 = fmul float %57, %sub8.i
  %61 = call float @llvm.fmuladd.f32(float %56, float %sub.i, float %mul8.i.i49)
  %62 = call float @llvm.fmuladd.f32(float %55, float %sub14.i, float %61)
  %fneg = fneg float %62
  %m_offset = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %cti, i64 0, i32 2
  store float %fneg, ptr %m_offset, align 8, !tbaa !493
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.then
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %nrm) #38
  ret i1 %cmp
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef float @_ZN11btSparseSdfILi3EE8EvaluateERK9btVector3P16btCollisionShapeRS1_f(ptr noundef nonnull align 8 dereferenceable(52) %this, ptr noundef nonnull align 4 dereferenceable(16) %x, ptr noundef %shape, ptr noundef nonnull align 4 dereferenceable(16) %normal, float noundef %margin) local_unnamed_addr #0 comdat align 2 {
entry:
  %voxelsz = getelementptr inbounds %struct.btSparseSdf, ptr %this, i64 0, i32 1
  %0 = load float, ptr %voxelsz, align 8, !tbaa !137
  %div.i = fdiv float 1.000000e+00, %0
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %x, i64 0, i64 2
  %1 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %mul8.i.i = fmul float %div.i, %1
  %2 = load <2 x float>, ptr %x, align 4, !tbaa !137
  %3 = insertelement <2 x float> poison, float %div.i, i64 0
  %4 = shufflevector <2 x float> %3, <2 x float> poison, <2 x i32> zeroinitializer
  %5 = fmul <2 x float> %4, %2
  %6 = fdiv <2 x float> %5, <float 3.000000e+00, float 3.000000e+00>
  %7 = shufflevector <2 x float> %6, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %8 = fcmp olt <2 x float> %7, zeroinitializer
  %9 = fsub <2 x float> <float 1.000000e+00, float 1.000000e+00>, %7
  %10 = fptosi <2 x float> %9 to <2 x i32>
  %11 = select <2 x i1> %8, <2 x i32> %10, <2 x i32> zeroinitializer
  %12 = sitofp <2 x i32> %11 to <2 x float>
  %13 = fadd <2 x float> %7, %12
  %14 = fptosi <2 x float> %13 to <2 x i32>
  %15 = sub nsw <2 x i32> %14, %11
  %div.i395 = fdiv float %mul8.i.i, 3.000000e+00
  %cmp.i396 = fcmp olt float %div.i395, 0.000000e+00
  %add.i397 = fsub float 1.000000e+00, %div.i395
  %conv.i398 = fptosi float %add.i397 to i32
  %cond.i399 = select i1 %cmp.i396, i32 %conv.i398, i32 0
  %conv1.i400 = sitofp i32 %cond.i399 to float
  %add2.i401 = fadd float %div.i395, %conv1.i400
  %conv3.i402 = fptosi float %add2.i401 to i32
  %sub11.i409 = sub nsw i32 %conv3.i402, %cond.i399
  %16 = extractelement <2 x i32> %15, i64 1
  %conv.i.i = and i32 %16, 65535
  %add.i.i = add nuw nsw i32 %conv.i.i, 24
  %17 = lshr i32 %16, 5
  %shl.i.i = and i32 %17, 134215680
  %shl3.i.i = shl i32 %add.i.i, 16
  %18 = xor i32 %shl.i.i, %shl3.i.i
  %xor4.i.i = xor i32 %18, %add.i.i
  %shr.i.i = lshr i32 %xor4.i.i, 11
  %19 = extractelement <2 x i32> %15, i64 0
  %conv.1.i.i = and i32 %19, 65535
  %add5.i.i = add i32 %xor4.i.i, %conv.1.i.i
  %add.1.i.i = add i32 %add5.i.i, %shr.i.i
  %20 = lshr i32 %19, 5
  %shl.1.i.i = and i32 %20, 134215680
  %shl3.1.i.i = shl i32 %add.1.i.i, 16
  %21 = xor i32 %shl.1.i.i, %shl3.1.i.i
  %xor4.1.i.i = xor i32 %21, %add.1.i.i
  %shr.1.i.i = lshr i32 %xor4.1.i.i, 11
  %conv.2.i.i = and i32 %sub11.i409, 65535
  %add5.1.i.i = add i32 %xor4.1.i.i, %conv.2.i.i
  %add.2.i.i = add i32 %add5.1.i.i, %shr.1.i.i
  %22 = lshr i32 %sub11.i409, 5
  %shl.2.i.i = and i32 %22, 134215680
  %shl3.2.i.i = shl i32 %add.2.i.i, 16
  %23 = xor i32 %shl.2.i.i, %shl3.2.i.i
  %xor4.2.i.i = xor i32 %23, %add.2.i.i
  %shr.2.i.i = lshr i32 %xor4.2.i.i, 11
  %add5.2.i.i = add i32 %shr.2.i.i, %xor4.2.i.i
  %shl3.3.i.i = shl i32 %add5.2.i.i, 16
  %xor4.3.i.i = xor i32 %shl3.3.i.i, %add5.2.i.i
  %shr.3.i.i = lshr i32 %xor4.3.i.i, 11
  %24 = ptrtoint ptr %shape to i64
  %myset.sroa.13.16.extract.trunc.i = trunc i64 %24 to i32
  %conv.4.i.i = and i32 %myset.sroa.13.16.extract.trunc.i, 65535
  %add5.3.i.i = add i32 %xor4.3.i.i, %conv.4.i.i
  %add.4.i.i = add i32 %add5.3.i.i, %shr.3.i.i
  %25 = lshr i32 %myset.sroa.13.16.extract.trunc.i, 5
  %shl.4.i.i = and i32 %25, 134215680
  %shl3.4.i.i = shl i32 %add.4.i.i, 16
  %26 = xor i32 %shl.4.i.i, %shl3.4.i.i
  %xor4.4.i.i = xor i32 %26, %add.4.i.i
  %shr.4.i.i = lshr i32 %xor4.4.i.i, 11
  %myset.sroa.13.20.extract.shift.i = lshr i64 %24, 32
  %myset.sroa.13.20.extract.trunc.i = trunc i64 %myset.sroa.13.20.extract.shift.i to i32
  %conv.5.i.i = and i32 %myset.sroa.13.20.extract.trunc.i, 65535
  %add5.4.i.i = add i32 %xor4.4.i.i, %conv.5.i.i
  %add.5.i.i = add i32 %add5.4.i.i, %shr.4.i.i
  %sh.diff.i = lshr i64 %24, 37
  %tr.sh.diff.i = trunc i64 %sh.diff.i to i32
  %shl.5.i.i = and i32 %tr.sh.diff.i, 134215680
  %shl3.5.i.i = shl i32 %add.5.i.i, 16
  %27 = xor i32 %shl.5.i.i, %shl3.5.i.i
  %xor4.5.i.i = xor i32 %27, %add.5.i.i
  %shr.5.i.i = lshr i32 %xor4.5.i.i, 11
  %add5.5.i.i = add i32 %shr.5.i.i, %xor4.5.i.i
  %shl6.i.i = shl i32 %add5.5.i.i, 3
  %xor7.i.i = xor i32 %shl6.i.i, %add5.5.i.i
  %shr8.i.i = lshr i32 %xor7.i.i, 5
  %add9.i.i = add i32 %shr8.i.i, %xor7.i.i
  %shl10.i.i = shl i32 %add9.i.i, 4
  %xor11.i.i = xor i32 %shl10.i.i, %add9.i.i
  %shr12.i.i = lshr i32 %xor11.i.i, 17
  %add13.i.i = add i32 %shr12.i.i, %xor11.i.i
  %shl14.i.i = shl i32 %add13.i.i, 25
  %xor15.i.i = xor i32 %shl14.i.i, %add13.i.i
  %shr16.i.i = lshr i32 %xor15.i.i, 6
  %add17.i.i = add i32 %shr16.i.i, %xor15.i.i
  %m_size.i = getelementptr inbounds %class.btAlignedObjectArray.16, ptr %this, i64 0, i32 2
  %28 = load i32, ptr %m_size.i, align 4, !tbaa !494
  %rem = urem i32 %add17.i.i, %28
  %m_data.i = getelementptr inbounds %class.btAlignedObjectArray.16, ptr %this, i64 0, i32 5
  %29 = load ptr, ptr %m_data.i, align 8, !tbaa !495
  %idxprom.i = sext i32 %rem to i64
  %arrayidx.i416 = getelementptr inbounds ptr, ptr %29, i64 %idxprom.i
  %30 = load ptr, ptr %arrayidx.i416, align 8, !tbaa !219
  %nqueries = getelementptr inbounds %struct.btSparseSdf, ptr %this, i64 0, i32 5
  %31 = load i32, ptr %nqueries, align 8, !tbaa !496
  %inc = add nsw i32 %31, 1
  store i32 %inc, ptr %nqueries, align 8, !tbaa !496
  %tobool.not436 = icmp eq ptr %30, null
  %nprobes34.phi.trans.insert = getelementptr inbounds %struct.btSparseSdf, ptr %this, i64 0, i32 4
  %.pre = load i32, ptr %nprobes34.phi.trans.insert, align 4, !tbaa !497
  br i1 %tobool.not436, label %if.then33, label %while.body

while.body:                                       ; preds = %entry, %if.else
  %inc16438 = phi i32 [ %inc16, %if.else ], [ %.pre, %entry ]
  %c.0437 = phi ptr [ %37, %if.else ], [ %30, %entry ]
  %inc16 = add nsw i32 %inc16438, 1
  store i32 %inc16, ptr %nprobes34.phi.trans.insert, align 4, !tbaa !497
  %hash = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c.0437, i64 0, i32 3
  %32 = load i32, ptr %hash, align 8, !tbaa !498
  %cmp = icmp eq i32 %32, %add17.i.i
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %while.body
  %c17 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c.0437, i64 0, i32 1
  %33 = load i32, ptr %c17, align 8, !tbaa !140
  %cmp19 = icmp eq i32 %33, %16
  br i1 %cmp19, label %land.lhs.true20, label %if.else

land.lhs.true20:                                  ; preds = %land.lhs.true
  %arrayidx22 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c.0437, i64 0, i32 1, i64 1
  %34 = load i32, ptr %arrayidx22, align 4, !tbaa !140
  %cmp24 = icmp eq i32 %34, %19
  br i1 %cmp24, label %land.lhs.true25, label %if.else

land.lhs.true25:                                  ; preds = %land.lhs.true20
  %arrayidx27 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c.0437, i64 0, i32 1, i64 2
  %35 = load i32, ptr %arrayidx27, align 8, !tbaa !140
  %cmp29 = icmp eq i32 %35, %sub11.i409
  br i1 %cmp29, label %land.lhs.true30, label %if.else

land.lhs.true30:                                  ; preds = %land.lhs.true25
  %pclient = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c.0437, i64 0, i32 4
  %36 = load ptr, ptr %pclient, align 8, !tbaa !500
  %cmp31 = icmp eq ptr %36, %shape
  br i1 %cmp31, label %if.end50, label %if.else

if.else:                                          ; preds = %land.lhs.true30, %land.lhs.true25, %land.lhs.true20, %land.lhs.true, %while.body
  %next = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c.0437, i64 0, i32 5
  %37 = load ptr, ptr %next, align 8, !tbaa !501
  %tobool.not = icmp eq ptr %37, null
  br i1 %tobool.not, label %if.then33, label %while.body

if.then33:                                        ; preds = %if.else, %entry
  %38 = phi i32 [ %.pre, %entry ], [ %inc16, %if.else ]
  %nprobes34 = getelementptr inbounds %struct.btSparseSdf, ptr %this, i64 0, i32 4
  %inc35 = add nsw i32 %38, 1
  store i32 %inc35, ptr %nprobes34, align 4, !tbaa !497
  %ncells = getelementptr inbounds %struct.btSparseSdf, ptr %this, i64 0, i32 3
  %39 = load i32, ptr %ncells, align 8, !tbaa !502
  %inc36 = add nsw i32 %39, 1
  store i32 %inc36, ptr %ncells, align 8, !tbaa !502
  %call37 = tail call noalias noundef nonnull dereferenceable(296) ptr @_Znwm(i64 noundef 296) #36
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(296) %call37, i8 0, i64 288, i1 false)
  %40 = load ptr, ptr %arrayidx.i416, align 8, !tbaa !219
  %next38 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %call37, i64 0, i32 5
  store ptr %40, ptr %next38, align 8, !tbaa !501
  store ptr %call37, ptr %arrayidx.i416, align 8, !tbaa !219
  %pclient39 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %call37, i64 0, i32 4
  store ptr %shape, ptr %pclient39, align 8, !tbaa !500
  %hash40 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %call37, i64 0, i32 3
  store i32 %add17.i.i, ptr %hash40, align 8, !tbaa !498
  %c42 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %call37, i64 0, i32 1
  %41 = shufflevector <2 x i32> %15, <2 x i32> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i32> %41, ptr %c42, align 8, !tbaa !140
  %arrayidx49 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %call37, i64 0, i32 1, i64 2
  store i32 %sub11.i409, ptr %arrayidx49, align 8, !tbaa !140
  tail call void @_ZN11btSparseSdfILi3EE9BuildCellERNS0_4CellE(ptr noundef nonnull align 8 dereferenceable(52) %this, ptr noundef nonnull align 8 dereferenceable(296) %call37)
  br label %if.end50

if.end50:                                         ; preds = %land.lhs.true30, %if.then33
  %c.1 = phi ptr [ %call37, %if.then33 ], [ %c.0437, %land.lhs.true30 ]
  %conv5.i403 = sitofp i32 %conv3.i402 to float
  %sub.i404 = fsub float %add2.i401, %conv5.i403
  %mul.i405 = fmul float %sub.i404, 3.000000e+00
  %conv6.i406 = fptosi float %mul.i405 to i32
  %retval.sroa.5.0.insert.ext.i410 = zext i32 %conv6.i406 to i64
  %retval.sroa.5.0.insert.shift.i411 = shl nuw i64 %retval.sroa.5.0.insert.ext.i410, 32
  %42 = sitofp <2 x i32> %14 to <2 x float>
  %conv8.i407 = sitofp i32 %conv6.i406 to float
  %sub9.i408 = fsub float %mul.i405, %conv8.i407
  %puid = getelementptr inbounds %struct.btSparseSdf, ptr %this, i64 0, i32 2
  %43 = load i32, ptr %puid, align 4, !tbaa !503
  %puid51 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c.1, i64 0, i32 2
  store i32 %43, ptr %puid51, align 4, !tbaa !504
  %idxprom65 = sext i32 %conv6.i406 to i64
  %sext371 = add i64 %retval.sroa.5.0.insert.shift.i411, 4294967296
  %idxprom121 = ashr exact i64 %sext371, 32
  %arrayidx.i427 = getelementptr inbounds [4 x float], ptr %normal, i64 0, i64 2
  %44 = fsub <2 x float> %13, %42
  %45 = fmul <2 x float> %44, <float 3.000000e+00, float 3.000000e+00>
  %46 = fptosi <2 x float> %45 to <2 x i32>
  %47 = extractelement <2 x i32> %46, i64 0
  %retval.sroa.5.0.insert.ext.i388 = zext i32 %47 to i64
  %retval.sroa.5.0.insert.shift.i389 = shl nuw i64 %retval.sroa.5.0.insert.ext.i388, 32
  %48 = extractelement <2 x i32> %46, i64 1
  %retval.sroa.5.0.insert.ext.i = zext i32 %48 to i64
  %retval.sroa.5.0.insert.shift.i = shl nuw i64 %retval.sroa.5.0.insert.ext.i, 32
  %49 = sitofp <2 x i32> %46 to <2 x float>
  %50 = fsub <2 x float> %45, %49
  %idxprom = sext i32 %48 to i64
  %idxprom61 = sext i32 %47 to i64
  %arrayidx66 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c.1, i64 0, i64 %idxprom, i64 %idxprom61, i64 %idxprom65
  %sext = add i64 %retval.sroa.5.0.insert.shift.i, 4294967296
  %idxprom71 = ashr exact i64 %sext, 32
  %arrayidx80 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c.1, i64 0, i64 %idxprom71, i64 %idxprom61, i64 %idxprom65
  %sext370 = add i64 %retval.sroa.5.0.insert.shift.i389, 4294967296
  %idxprom89 = ashr exact i64 %sext370, 32
  %arrayidx94 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c.1, i64 0, i64 %idxprom71, i64 %idxprom89, i64 %idxprom65
  %arrayidx108 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c.1, i64 0, i64 %idxprom, i64 %idxprom89, i64 %idxprom65
  %arrayidx122 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c.1, i64 0, i64 %idxprom, i64 %idxprom61, i64 %idxprom121
  %arrayidx136 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c.1, i64 0, i64 %idxprom71, i64 %idxprom61, i64 %idxprom121
  %arrayidx150 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c.1, i64 0, i64 %idxprom71, i64 %idxprom89, i64 %idxprom121
  %arrayidx164 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c.1, i64 0, i64 %idxprom, i64 %idxprom89, i64 %idxprom121
  %51 = insertelement <2 x float> poison, float %sub9.i408, i64 0
  %52 = shufflevector <2 x float> %51, <2 x float> poison, <2 x i32> zeroinitializer
  %53 = load float, ptr %arrayidx80, align 4, !tbaa !137
  %54 = load float, ptr %arrayidx94, align 4, !tbaa !137
  %55 = load float, ptr %arrayidx136, align 4, !tbaa !137
  %56 = load float, ptr %arrayidx150, align 4, !tbaa !137
  %57 = insertelement <2 x float> poison, float %53, i64 0
  %58 = insertelement <2 x float> poison, float %54, i64 0
  %59 = shufflevector <2 x float> %58, <2 x float> poison, <2 x i32> zeroinitializer
  %60 = insertelement <2 x float> poison, float %55, i64 0
  %61 = insertelement <2 x float> poison, float %56, i64 0
  %62 = shufflevector <2 x float> %61, <2 x float> poison, <2 x i32> zeroinitializer
  %63 = insertelement <2 x float> %61, float %55, i64 1
  %64 = insertelement <2 x float> %58, float %53, i64 1
  %65 = fsub <2 x float> %63, %64
  %66 = shufflevector <2 x float> %50, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %67 = extractelement <2 x float> %50, i64 0
  %68 = load float, ptr %arrayidx66, align 4, !tbaa !137
  %69 = load float, ptr %arrayidx108, align 4, !tbaa !137
  %70 = load float, ptr %arrayidx122, align 4, !tbaa !137
  %71 = load float, ptr %arrayidx164, align 4, !tbaa !137
  %72 = insertelement <2 x float> %57, float %69, i64 1
  %73 = insertelement <2 x float> poison, float %68, i64 0
  %74 = shufflevector <2 x float> %73, <2 x float> poison, <2 x i32> zeroinitializer
  %75 = fsub <2 x float> %72, %74
  %76 = insertelement <2 x float> poison, float %69, i64 0
  %77 = insertelement <2 x float> %76, float %53, i64 1
  %78 = fsub <2 x float> %59, %77
  %79 = insertelement <2 x float> %60, float %71, i64 1
  %80 = insertelement <2 x float> poison, float %70, i64 0
  %81 = shufflevector <2 x float> %80, <2 x float> poison, <2 x i32> zeroinitializer
  %82 = fsub <2 x float> %79, %81
  %83 = insertelement <2 x float> poison, float %71, i64 0
  %84 = insertelement <2 x float> %83, float %55, i64 1
  %85 = fsub <2 x float> %62, %84
  %86 = insertelement <2 x float> %83, float %70, i64 1
  %87 = insertelement <2 x float> %76, float %68, i64 1
  %88 = fsub <2 x float> %86, %87
  %89 = fsub <2 x float> %78, %75
  %90 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %89, <2 x float> %50, <2 x float> %75)
  %91 = fsub <2 x float> %85, %82
  %92 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %91, <2 x float> %50, <2 x float> %82)
  %93 = fsub <2 x float> %92, %90
  %94 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %93, <2 x float> %52, <2 x float> %90)
  %95 = fsub <2 x float> %65, %88
  %96 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %95, <2 x float> %66, <2 x float> %88)
  %97 = extractelement <2 x float> %96, i64 0
  %98 = extractelement <2 x float> %96, i64 1
  %sub.i426 = fsub float %97, %98
  %99 = tail call float @llvm.fmuladd.f32(float %sub.i426, float %67, float %98)
  %100 = fmul <2 x float> %94, %94
  %mul8.i.i.i.i = extractelement <2 x float> %100, i64 1
  %101 = extractelement <2 x float> %94, i64 0
  %102 = tail call float @llvm.fmuladd.f32(float %101, float %101, float %mul8.i.i.i.i)
  %103 = tail call float @llvm.fmuladd.f32(float %99, float %99, float %102)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %103)
  %div.i.i = fdiv float 1.000000e+00, %sqrt.i.i
  %104 = insertelement <2 x float> poison, float %div.i.i, i64 0
  %105 = shufflevector <2 x float> %104, <2 x float> poison, <2 x i32> zeroinitializer
  %106 = fmul <2 x float> %94, %105
  %mul8.i.i.i = fmul float %99, %div.i.i
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i.i, i64 0
  store <2 x float> %106, ptr %normal, align 4, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i, ptr %arrayidx.i427, align 4, !tbaa.struct !165
  %107 = shufflevector <2 x float> %82, <2 x float> %75, <2 x i32> <i32 0, i32 2>
  %108 = insertelement <2 x float> %80, float %68, i64 1
  %109 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %107, <2 x float> %66, <2 x float> %108)
  %110 = shufflevector <2 x float> %85, <2 x float> %78, <2 x i32> <i32 0, i32 2>
  %111 = insertelement <2 x float> %83, float %69, i64 1
  %112 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %110, <2 x float> %66, <2 x float> %111)
  %113 = fsub <2 x float> %112, %109
  %114 = shufflevector <2 x float> %50, <2 x float> poison, <2 x i32> zeroinitializer
  %115 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %113, <2 x float> %114, <2 x float> %109)
  %116 = extractelement <2 x float> %115, i64 0
  %117 = extractelement <2 x float> %115, i64 1
  %sub.i434 = fsub float %116, %117
  %118 = tail call float @llvm.fmuladd.f32(float %sub.i434, float %sub9.i408, float %117)
  %sub265 = fsub float %118, %margin
  ret float %sub265
}

; Function Attrs: inlinehint nofree nosync nounwind memory(argmem: readwrite) uwtable
define internal fastcc void @_ZL14PolarDecomposeRK11btMatrix3x3RS_S2_(ptr nocapture noundef nonnull readonly align 4 dereferenceable(48) %m, ptr nocapture noundef nonnull writeonly align 4 dereferenceable(48) %q, ptr nocapture noundef nonnull writeonly align 4 dereferenceable(48) %s) unnamed_addr #27 {
entry:
  %arrayidx.i = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 1
  %arrayidx5 = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 1, i32 0, i64 1
  %arrayidx.i50 = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 2
  %arrayidx8 = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 2, i32 0, i64 2
  %0 = load float, ptr %m, align 4, !tbaa !137
  %arrayidx3.i.i = getelementptr inbounds [4 x float], ptr %m, i64 0, i64 1
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %m, i64 0, i64 2
  %1 = load float, ptr %arrayidx.i, align 4, !tbaa !137, !noalias !505
  %arrayidx7.i.1.i = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 1, i32 0, i64 2
  %2 = load <4 x float>, ptr %arrayidx7.i.1.i, align 4
  %3 = shufflevector <4 x float> %2, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %4 = load <2 x float>, ptr %arrayidx3.i.i, align 4, !tbaa !137, !noalias !505
  %5 = insertelement <2 x float> %3, float %1, i64 1
  %6 = load <2 x float>, ptr %arrayidx.i50, align 4, !tbaa !137, !noalias !505
  %7 = load float, ptr %arrayidx5, align 4, !tbaa !137
  %8 = load float, ptr %arrayidx8, align 4, !tbaa !137
  %mul8.i.i.i = fmul float %7, %7
  %9 = tail call float @llvm.fmuladd.f32(float %0, float %0, float %mul8.i.i.i)
  %10 = tail call float @llvm.fmuladd.f32(float %8, float %8, float %9)
  %sqrt.i = tail call float @llvm.sqrt.f32(float %10)
  %div = fdiv float 1.000000e+00, %sqrt.i
  %mul.i.i = fmul float %0, %div
  %11 = insertelement <2 x float> poison, float %div, i64 0
  %12 = shufflevector <2 x float> %11, <2 x float> poison, <2 x i32> zeroinitializer
  %13 = fmul <2 x float> %4, %12
  %14 = fmul <2 x float> %12, %5
  %15 = fmul <2 x float> %12, %6
  %16 = insertelement <2 x float> poison, float %8, i64 0
  %17 = insertelement <2 x float> %16, float %7, i64 1
  %18 = fmul <2 x float> %12, %17
  %ref.tmp.sroa.4.0.q.sroa_idx = getelementptr inbounds i8, ptr %q, i64 8
  %arrayidx7.i52 = getelementptr inbounds [3 x %class.btVector3], ptr %q, i64 0, i64 1
  %ref.tmp.sroa.7.16.arrayidx7.i52.sroa_idx = getelementptr inbounds [3 x %class.btVector3], ptr %q, i64 0, i64 1, i32 0, i64 2
  %arrayidx11.i = getelementptr inbounds [3 x %class.btVector3], ptr %q, i64 0, i64 2
  %ref.tmp.sroa.10.32.arrayidx11.i.sroa_idx = getelementptr inbounds [3 x %class.btVector3], ptr %q, i64 0, i64 2, i32 0, i64 2
  %19 = extractelement <2 x float> %14, i64 0
  %20 = fneg float %19
  %21 = extractelement <2 x float> %15, i64 1
  %neg.i.i.i = fmul float %21, %20
  %22 = extractelement <2 x float> %18, i64 0
  %23 = extractelement <2 x float> %18, i64 1
  %24 = tail call float @llvm.fmuladd.f32(float %23, float %22, float %neg.i.i.i)
  %25 = extractelement <2 x float> %14, i64 1
  %26 = fneg float %25
  %neg23.i.i.i = fmul float %22, %26
  %27 = extractelement <2 x float> %15, i64 0
  %28 = tail call float @llvm.fmuladd.f32(float %19, float %27, float %neg23.i.i.i)
  %29 = extractelement <2 x float> %13, i64 0
  %mul24.i.i.i = fmul float %29, %28
  %30 = tail call float @llvm.fmuladd.f32(float %mul.i.i, float %24, float %mul24.i.i.i)
  %31 = fneg float %23
  %neg36.i.i.i = fmul float %27, %31
  %32 = tail call float @llvm.fmuladd.f32(float %25, float %21, float %neg36.i.i.i)
  %33 = extractelement <2 x float> %13, i64 1
  %34 = tail call float @llvm.fmuladd.f32(float %33, float %32, float %30)
  %35 = tail call float @llvm.fabs.f32(float %34)
  %cmp.i = fcmp olt float %35, 0x3E80000000000000
  br i1 %cmp.i, label %if.else28, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %36 = phi float [ %mul.i.i116, %for.body ], [ %mul.i.i, %entry ]
  %i.0212 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %det.0211 = phi float [ %99, %for.body ], [ %34, %entry ]
  %37 = phi <2 x float> [ %60, %for.body ], [ %13, %entry ]
  %38 = phi <2 x float> [ %81, %for.body ], [ %14, %entry ]
  %39 = phi <2 x float> [ %82, %for.body ], [ %15, %entry ]
  %40 = phi <2 x float> [ %83, %for.body ], [ %18, %entry ]
  %41 = extractelement <2 x float> %38, i64 0
  %42 = fneg float %41
  %43 = extractelement <2 x float> %39, i64 1
  %neg.i.i = fmul float %43, %42
  %44 = extractelement <2 x float> %40, i64 0
  %45 = extractelement <2 x float> %40, i64 1
  %46 = tail call float @llvm.fmuladd.f32(float %45, float %44, float %neg.i.i)
  %47 = shufflevector <2 x float> %38, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %48 = shufflevector <2 x float> %47, <2 x float> %40, <2 x i32> <i32 0, i32 3>
  %49 = fneg <2 x float> %48
  %50 = fneg float %36
  %neg.i42.i = fmul float %41, %50
  %neg.i51.i = fmul float %43, %50
  %div18 = fdiv float 1.000000e+00, %det.0211
  %mul.i.i58 = fmul float %div18, %46
  %add.i.i = fadd float %mul.i.i58, %36
  %mul.i.i116 = fmul float %add.i.i, 5.000000e-01
  %51 = shufflevector <2 x float> %39, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %52 = shufflevector <2 x float> %40, <2 x float> %51, <2 x i32> <i32 0, i32 3>
  %53 = fmul <2 x float> %52, %49
  %54 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %38, <2 x float> %39, <2 x float> %53)
  %55 = insertelement <2 x float> poison, float %neg.i51.i, i64 0
  %56 = insertelement <2 x float> poison, float %div18, i64 0
  %57 = shufflevector <2 x float> %56, <2 x float> poison, <2 x i32> zeroinitializer
  %58 = fmul <2 x float> %57, %54
  %59 = fadd <2 x float> %37, %58
  %60 = fmul <2 x float> %59, <float 5.000000e-01, float 5.000000e-01>
  %61 = fneg <2 x float> %37
  %62 = fmul <2 x float> %40, %61
  %63 = fmul <2 x float> %40, %61
  %neg.i29.i = extractelement <2 x float> %63, i64 1
  %64 = shufflevector <2 x float> %38, <2 x float> %39, <2 x i32> <i32 1, i32 2>
  %65 = fmul <2 x float> %64, %61
  %66 = insertelement <2 x float> poison, float %36, i64 0
  %67 = shufflevector <2 x float> %66, <2 x float> poison, <2 x i32> zeroinitializer
  %68 = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %69 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %67, <2 x float> %68, <2 x float> %65)
  %70 = fmul <2 x float> %57, %69
  %71 = fadd <2 x float> %40, %70
  %72 = insertelement <2 x float> poison, float %neg.i29.i, i64 0
  %73 = insertelement <2 x float> %72, float %neg.i42.i, i64 1
  %74 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %37, <2 x float> %38, <2 x float> %73)
  %75 = shufflevector <2 x float> %55, <2 x float> %62, <2 x i32> <i32 0, i32 2>
  %76 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %37, <2 x float> %39, <2 x float> %75)
  %77 = fmul <2 x float> %57, %74
  %78 = fmul <2 x float> %57, %76
  %79 = fadd <2 x float> %38, %78
  %80 = fadd <2 x float> %39, %77
  %81 = fmul <2 x float> %79, <float 5.000000e-01, float 5.000000e-01>
  %82 = fmul <2 x float> %80, <float 5.000000e-01, float 5.000000e-01>
  %83 = fmul <2 x float> %71, <float 5.000000e-01, float 5.000000e-01>
  %84 = extractelement <2 x float> %81, i64 0
  %85 = fneg float %84
  %86 = extractelement <2 x float> %82, i64 1
  %neg.i.i.i157 = fmul float %86, %85
  %87 = extractelement <2 x float> %83, i64 0
  %88 = extractelement <2 x float> %83, i64 1
  %89 = tail call float @llvm.fmuladd.f32(float %88, float %87, float %neg.i.i.i157)
  %90 = extractelement <2 x float> %81, i64 1
  %91 = fneg float %90
  %neg23.i.i.i159 = fmul float %87, %91
  %92 = extractelement <2 x float> %82, i64 0
  %93 = tail call float @llvm.fmuladd.f32(float %84, float %92, float %neg23.i.i.i159)
  %94 = extractelement <2 x float> %60, i64 0
  %mul24.i.i.i160 = fmul float %94, %93
  %95 = tail call float @llvm.fmuladd.f32(float %mul.i.i116, float %89, float %mul24.i.i.i160)
  %96 = fneg float %88
  %neg36.i.i.i162 = fmul float %92, %96
  %97 = tail call float @llvm.fmuladd.f32(float %90, float %86, float %neg36.i.i.i162)
  %98 = extractelement <2 x float> %60, i64 1
  %99 = tail call float @llvm.fmuladd.f32(float %98, float %97, float %95)
  %sub = fsub float %99, %det.0211
  %mul.i = fmul float %sub, %sub
  %cmp23 = fcmp ule float %mul.i, 0x3F1A36E2E0000000
  %inc = add nuw nsw i32 %i.0212, 1
  %exitcond.not = icmp eq i32 %inc, 16
  %or.cond = select i1 %cmp23, i1 true, i1 %exitcond.not
  br i1 %or.cond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %100 = shufflevector <2 x float> %60, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %101 = insertelement <2 x float> %100, float %mul.i.i116, i64 1
  %102 = fneg <2 x float> %101
  %103 = fneg float %94
  %neg30.i.i.i = fmul float %90, %103
  %104 = tail call float @llvm.fmuladd.f32(float %mul.i.i116, float %88, float %neg30.i.i.i)
  %105 = shufflevector <2 x float> %81, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %106 = shufflevector <2 x float> %105, <2 x float> %83, <2 x i32> <i32 3, i32 1>
  %107 = fmul <2 x float> %106, %102
  %108 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %60, <2 x float> %81, <2 x float> %107)
  %109 = fmul <2 x float> %108, %108
  %mul8.i.i.i.i.i = extractelement <2 x float> %109, i64 1
  %110 = extractelement <2 x float> %108, i64 0
  %111 = tail call float @llvm.fmuladd.f32(float %110, float %110, float %mul8.i.i.i.i.i)
  %112 = tail call float @llvm.fmuladd.f32(float %104, float %104, float %111)
  %sqrt.i.i.i = tail call float @llvm.sqrt.f32(float %112)
  %div.i.i.i = fdiv float 1.000000e+00, %sqrt.i.i.i
  %113 = insertelement <2 x float> poison, float %div.i.i.i, i64 0
  %114 = shufflevector <2 x float> %113, <2 x float> poison, <2 x i32> zeroinitializer
  %115 = fmul <2 x float> %108, %114
  %mul8.i.i.i.i = fmul float %104, %div.i.i.i
  %retval.sroa.3.12.vec.insert.i.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i.i.i, i64 0
  store <2 x float> %115, ptr %arrayidx11.i, align 4, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i.i, ptr %ref.tmp.sroa.10.32.arrayidx11.i.sroa_idx, align 4, !tbaa.struct !165
  %116 = extractelement <2 x float> %115, i64 1
  %117 = extractelement <2 x float> %115, i64 0
  %118 = fneg float %116
  %neg30.i.i41.i = fmul float %mul.i.i116, %118
  %119 = tail call float @llvm.fmuladd.f32(float %117, float %94, float %neg30.i.i41.i)
  %120 = shufflevector <2 x float> %115, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %121 = insertelement <2 x float> %120, float %mul8.i.i.i.i, i64 0
  %122 = fneg <2 x float> %121
  %123 = fmul <2 x float> %60, %122
  %124 = insertelement <2 x float> %120, float %mul8.i.i.i.i, i64 1
  %125 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %124, <2 x float> %101, <2 x float> %123)
  %126 = fmul <2 x float> %125, %125
  %mul8.i.i.i.i48.i = extractelement <2 x float> %126, i64 1
  %127 = extractelement <2 x float> %125, i64 0
  %128 = tail call float @llvm.fmuladd.f32(float %127, float %127, float %mul8.i.i.i.i48.i)
  %129 = tail call float @llvm.fmuladd.f32(float %119, float %119, float %128)
  %sqrt.i.i50.i = tail call float @llvm.sqrt.f32(float %129)
  %div.i.i51.i = fdiv float 1.000000e+00, %sqrt.i.i50.i
  %130 = insertelement <2 x float> poison, float %div.i.i51.i, i64 0
  %131 = shufflevector <2 x float> %130, <2 x float> poison, <2 x i32> zeroinitializer
  %132 = fmul <2 x float> %125, %131
  %mul8.i.i.i54.i = fmul float %119, %div.i.i51.i
  %retval.sroa.3.12.vec.insert.i.i.i57.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i.i54.i, i64 0
  store <2 x float> %132, ptr %arrayidx7.i52, align 4, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i57.i, ptr %ref.tmp.sroa.7.16.arrayidx7.i52.sroa_idx, align 4, !tbaa.struct !165
  %133 = fneg float %mul8.i.i.i54.i
  %neg.i.i67.i = fmul float %116, %133
  %134 = extractelement <2 x float> %132, i64 1
  %135 = tail call float @llvm.fmuladd.f32(float %134, float %mul8.i.i.i.i, float %neg.i.i67.i)
  %136 = extractelement <2 x float> %132, i64 0
  %137 = fneg float %136
  %neg19.i.i68.i = fmul float %mul8.i.i.i.i, %137
  %138 = tail call float @llvm.fmuladd.f32(float %mul8.i.i.i54.i, float %117, float %neg19.i.i68.i)
  %139 = fneg float %134
  %neg30.i.i69.i = fmul float %117, %139
  %140 = tail call float @llvm.fmuladd.f32(float %136, float %116, float %neg30.i.i69.i)
  %mul8.i.i.i.i76.i = fmul float %138, %138
  %141 = tail call float @llvm.fmuladd.f32(float %135, float %135, float %mul8.i.i.i.i76.i)
  %142 = tail call float @llvm.fmuladd.f32(float %140, float %140, float %141)
  %sqrt.i.i78.i = tail call float @llvm.sqrt.f32(float %142)
  %div.i.i79.i = fdiv float 1.000000e+00, %sqrt.i.i78.i
  %mul.i.i.i80.i = fmul float %135, %div.i.i79.i
  %mul4.i.i.i81.i = fmul float %138, %div.i.i79.i
  %mul8.i.i.i82.i = fmul float %140, %div.i.i79.i
  %retval.sroa.0.0.vec.insert.i.i.i83.i = insertelement <2 x float> undef, float %mul.i.i.i80.i, i64 0
  %retval.sroa.0.4.vec.insert.i.i.i84.i = insertelement <2 x float> %retval.sroa.0.0.vec.insert.i.i.i83.i, float %mul4.i.i.i81.i, i64 1
  %retval.sroa.3.12.vec.insert.i.i.i85.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i.i82.i, i64 0
  store <2 x float> %retval.sroa.0.4.vec.insert.i.i.i84.i, ptr %q, align 4, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i85.i, ptr %ref.tmp.sroa.4.0.q.sroa_idx, align 4, !tbaa.struct !165
  %143 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137, !noalias !508
  %144 = load float, ptr %arrayidx7.i.1.i, align 4, !tbaa !137, !noalias !508
  %mul7.i48.i = fmul float %144, %136
  %145 = tail call float @llvm.fmuladd.f32(float %143, float %mul.i.i.i80.i, float %mul7.i48.i)
  %146 = load float, ptr %arrayidx8, align 4, !tbaa !137, !noalias !508
  %147 = tail call float @llvm.fmuladd.f32(float %146, float %117, float %145)
  %mul7.i67.i = fmul float %134, %144
  %148 = tail call float @llvm.fmuladd.f32(float %143, float %mul4.i.i.i81.i, float %mul7.i67.i)
  %149 = tail call float @llvm.fmuladd.f32(float %146, float %116, float %148)
  %mul7.i87.i = fmul float %mul8.i.i.i54.i, %144
  %150 = tail call float @llvm.fmuladd.f32(float %143, float %mul8.i.i.i82.i, float %mul7.i87.i)
  %151 = tail call float @llvm.fmuladd.f32(float %146, float %mul8.i.i.i.i, float %150)
  %152 = load <2 x float>, ptr %m, align 4, !tbaa !137, !noalias !508
  %153 = load <2 x float>, ptr %arrayidx.i, align 4, !tbaa !137, !noalias !508
  %154 = shufflevector <2 x float> %132, <2 x float> poison, <2 x i32> zeroinitializer
  %155 = fmul <2 x float> %153, %154
  %156 = insertelement <2 x float> poison, float %mul.i.i.i80.i, i64 0
  %157 = shufflevector <2 x float> %156, <2 x float> poison, <2 x i32> zeroinitializer
  %158 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %152, <2 x float> %157, <2 x float> %155)
  %159 = load <2 x float>, ptr %arrayidx.i50, align 4, !tbaa !137, !noalias !508
  %160 = shufflevector <2 x float> %115, <2 x float> poison, <2 x i32> zeroinitializer
  %161 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %159, <2 x float> %160, <2 x float> %158)
  store <2 x float> %161, ptr %s, align 4
  %ref.tmp25.sroa.5.0.s.sroa_idx = getelementptr inbounds i8, ptr %s, i64 8
  store float %147, ptr %ref.tmp25.sroa.5.0.s.sroa_idx, align 4, !tbaa.struct !165
  %ref.tmp25.sroa.6.0.s.sroa_idx = getelementptr inbounds i8, ptr %s, i64 12
  store float 0.000000e+00, ptr %ref.tmp25.sroa.6.0.s.sroa_idx, align 4, !tbaa.struct !318
  %arrayidx7.i202 = getelementptr inbounds [3 x %class.btVector3], ptr %s, i64 0, i64 1
  %162 = shufflevector <2 x float> %132, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %163 = fmul <2 x float> %162, %153
  %164 = insertelement <2 x float> poison, float %mul4.i.i.i81.i, i64 0
  %165 = shufflevector <2 x float> %164, <2 x float> poison, <2 x i32> zeroinitializer
  %166 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %152, <2 x float> %165, <2 x float> %163)
  %167 = shufflevector <2 x float> %115, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %168 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %159, <2 x float> %167, <2 x float> %166)
  store <2 x float> %168, ptr %arrayidx7.i202, align 4
  %ref.tmp25.sroa.10.16.arrayidx7.i202.sroa_idx = getelementptr inbounds [3 x %class.btVector3], ptr %s, i64 0, i64 1, i32 0, i64 2
  store float %149, ptr %ref.tmp25.sroa.10.16.arrayidx7.i202.sroa_idx, align 4, !tbaa.struct !165
  %ref.tmp25.sroa.11.16.arrayidx7.i202.sroa_idx = getelementptr inbounds [3 x %class.btVector3], ptr %s, i64 0, i64 1, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp25.sroa.11.16.arrayidx7.i202.sroa_idx, align 4, !tbaa.struct !318
  %arrayidx11.i204 = getelementptr inbounds [3 x %class.btVector3], ptr %s, i64 0, i64 2
  %169 = insertelement <2 x float> poison, float %mul8.i.i.i54.i, i64 0
  %170 = shufflevector <2 x float> %169, <2 x float> poison, <2 x i32> zeroinitializer
  %171 = fmul <2 x float> %170, %153
  %172 = insertelement <2 x float> poison, float %mul8.i.i.i82.i, i64 0
  %173 = shufflevector <2 x float> %172, <2 x float> poison, <2 x i32> zeroinitializer
  %174 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %152, <2 x float> %173, <2 x float> %171)
  %175 = insertelement <2 x float> poison, float %mul8.i.i.i.i, i64 0
  %176 = shufflevector <2 x float> %175, <2 x float> poison, <2 x i32> zeroinitializer
  %177 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %159, <2 x float> %176, <2 x float> %174)
  store <2 x float> %177, ptr %arrayidx11.i204, align 4
  %ref.tmp25.sroa.15.32.arrayidx11.i204.sroa_idx = getelementptr inbounds [3 x %class.btVector3], ptr %s, i64 0, i64 2, i32 0, i64 2
  store float %151, ptr %ref.tmp25.sroa.15.32.arrayidx11.i204.sroa_idx, align 4, !tbaa.struct !165
  br label %if.end29

if.else28:                                        ; preds = %entry
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %q, i64 0, i64 1
  %arrayidx3.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %q, i64 0, i64 1, i32 0, i64 1
  store float 1.000000e+00, ptr %q, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx12.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i.i.i, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp.sroa.7.16.arrayidx7.i52.sroa_idx, i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr %ref.tmp.sroa.10.32.arrayidx11.i.sroa_idx, align 4, !tbaa !137
  store float 1.000000e+00, ptr %s, align 4, !tbaa !137
  %arrayidx3.i.i.i206 = getelementptr inbounds [4 x float], ptr %s, i64 0, i64 1
  %arrayidx3.i6.i.i207 = getelementptr inbounds [3 x %class.btVector3], ptr %s, i64 0, i64 1, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i206, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i207, align 4, !tbaa !137
  %arrayidx5.i7.i.i208 = getelementptr inbounds [3 x %class.btVector3], ptr %s, i64 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i209 = getelementptr inbounds [3 x %class.btVector3], ptr %s, i64 0, i64 2, i32 0, i64 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i7.i.i208, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i209, align 4, !tbaa !137
  br label %if.end29

if.end29:                                         ; preds = %if.else28, %for.end
  %arrayidx7.i11.i.i210 = getelementptr inbounds [3 x %class.btVector3], ptr %s, i64 0, i64 2, i32 0, i64 3
  store float 0.000000e+00, ptr %arrayidx7.i11.i.i210, align 4
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fmuladd.f32(float, float, float) #28

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody5Joint7PrepareEfi(ptr nocapture noundef nonnull readonly align 8 dereferenceable(181) %this, float %dt, i32 %0) unnamed_addr #4 align 2 {
entry:
  %m_rigid.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 0, i32 1
  %1 = load ptr, ptr %m_rigid.i, align 8, !tbaa !511
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %_ZNK10btSoftBody4Body8activateEv.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  tail call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %1, i1 noundef zeroext false)
  br label %_ZNK10btSoftBody4Body8activateEv.exit

_ZNK10btSoftBody4Body8activateEv.exit:            ; preds = %entry, %if.then.i
  %m_rigid.i4 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1, i32 1
  %2 = load ptr, ptr %m_rigid.i4, align 8, !tbaa !511
  %tobool.not.i5 = icmp eq ptr %2, null
  br i1 %tobool.not.i5, label %_ZNK10btSoftBody4Body8activateEv.exit7, label %if.then.i6

if.then.i6:                                       ; preds = %_ZNK10btSoftBody4Body8activateEv.exit
  tail call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %2, i1 noundef zeroext false)
  br label %_ZNK10btSoftBody4Body8activateEv.exit7

_ZNK10btSoftBody4Body8activateEv.exit7:           ; preds = %_ZNK10btSoftBody4Body8activateEv.exit, %if.then.i6
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6LJoint7PrepareEfi(ptr noundef nonnull align 8 dereferenceable(216) %this, float noundef %dt, i32 noundef %iterations) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %ref.tmp45 = alloca %class.btMatrix3x3, align 4
  %m_rigid.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 0, i32 1
  %0 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool.not.i.i = icmp eq ptr %0, null
  br i1 %tobool.not.i.i, label %_ZNK10btSoftBody4Body8activateEv.exit.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %0, i1 noundef zeroext false)
  br label %_ZNK10btSoftBody4Body8activateEv.exit.i

_ZNK10btSoftBody4Body8activateEv.exit.i:          ; preds = %if.then.i.i, %entry
  %m_rigid.i4.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1, i32 1
  %1 = load ptr, ptr %m_rigid.i4.i, align 8, !tbaa !511
  %tobool.not.i5.i = icmp eq ptr %1, null
  br i1 %tobool.not.i5.i, label %_ZN10btSoftBody5Joint7PrepareEfi.exit, label %if.then.i6.i

if.then.i6.i:                                     ; preds = %_ZNK10btSoftBody4Body8activateEv.exit.i
  tail call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %1, i1 noundef zeroext false)
  br label %_ZN10btSoftBody5Joint7PrepareEfi.exit

_ZN10btSoftBody5Joint7PrepareEfi.exit:            ; preds = %_ZNK10btSoftBody4Body8activateEv.exit.i, %if.then.i6.i
  %m_bodies = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1
  %2 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %2, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZNK10btSoftBody4Body5xformEv.exit, !prof !173

init.check.i:                                     ; preds = %_ZN10btSoftBody5Joint7PrepareEfi.exit
  %3 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %_ZNK10btSoftBody4Body5xformEv.exit, label %init.i

init.i:                                           ; preds = %init.check.i
  %4 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i249 = icmp eq i8 %4, 0
  br i1 %guard.uninitialized.i249, label %init.check.i251, label %invoke.cont2.i, !prof !173

init.check.i251:                                  ; preds = %init.i
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i250 = icmp eq i32 %5, 0
  br i1 %tobool.not.i250, label %invoke.cont2.i, label %init.i253

init.i253:                                        ; preds = %init.check.i251
  %6 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i289 = icmp eq i8 %6, 0
  br i1 %guard.uninitialized.i289, label %init.check.i291, label %invoke.cont6.i, !prof !173

init.check.i291:                                  ; preds = %init.i253
  %7 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i290 = icmp eq i32 %7, 0
  br i1 %tobool.not.i290, label %invoke.cont6.i, label %invoke.cont.i292

invoke.cont.i292:                                 ; preds = %init.check.i291
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %8 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont6.i

invoke.cont6.i:                                   ; preds = %invoke.cont.i292, %init.check.i291, %init.i253
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %9 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont2.i

invoke.cont2.i:                                   ; preds = %invoke.cont6.i, %init.check.i251, %init.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %10 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit

_ZNK10btSoftBody4Body5xformEv.exit:               ; preds = %_ZN10btSoftBody5Joint7PrepareEfi.exit, %init.check.i, %invoke.cont2.i
  %m_collisionObject.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 0, i32 2
  %11 = load ptr, ptr %m_collisionObject.i, align 8, !tbaa !253
  %tobool3.not.i = icmp eq ptr %11, null
  %m_interpolationWorldTransform.i.i = getelementptr inbounds %class.btCollisionObject, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %m_bodies, align 8
  %tobool6.not.i = icmp eq ptr %12, null
  %m_framexform.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %12, i64 0, i32 3
  %spec.select.i = select i1 %tobool6.not.i, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i
  %retval.0.i = select i1 %tobool3.not.i, ptr %spec.select.i, ptr %m_interpolationWorldTransform.i.i
  %m_refs = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2
  %13 = load float, ptr %m_refs, align 8, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds [4 x float], ptr %retval.0.i, i64 0, i64 1
  %arrayidx7.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 0, i32 0, i64 1
  %14 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %arrayidx10.i.i.i80 = getelementptr inbounds [4 x float], ptr %retval.0.i, i64 0, i64 2
  %arrayidx12.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 0, i32 0, i64 2
  %15 = load float, ptr %arrayidx12.i.i.i, align 8, !tbaa !137
  %m_origin.i.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i, i64 0, i32 1
  %arrayidx.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1
  %arrayidx5.i20.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1, i32 0, i64 1
  %arrayidx10.i23.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1, i32 0, i64 2
  %16 = load float, ptr %retval.0.i, align 4, !tbaa !137
  %17 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %18 = load float, ptr %arrayidx10.i.i.i80, align 4, !tbaa !137
  %19 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %20 = load float, ptr %arrayidx5.i20.i.i, align 4, !tbaa !137
  %21 = insertelement <2 x float> poison, float %14, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> zeroinitializer
  %23 = insertelement <2 x float> poison, float %17, i64 0
  %24 = insertelement <2 x float> %23, float %20, i64 1
  %25 = fmul <2 x float> %22, %24
  %26 = insertelement <2 x float> poison, float %16, i64 0
  %27 = insertelement <2 x float> %26, float %19, i64 1
  %28 = insertelement <2 x float> poison, float %13, i64 0
  %29 = shufflevector <2 x float> %28, <2 x float> poison, <2 x i32> zeroinitializer
  %30 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %27, <2 x float> %29, <2 x float> %25)
  %31 = load float, ptr %arrayidx10.i23.i.i, align 4, !tbaa !137
  %32 = insertelement <2 x float> poison, float %18, i64 0
  %33 = insertelement <2 x float> %32, float %31, i64 1
  %34 = insertelement <2 x float> poison, float %15, i64 0
  %35 = shufflevector <2 x float> %34, <2 x float> poison, <2 x i32> zeroinitializer
  %36 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %33, <2 x float> %35, <2 x float> %30)
  %37 = load <2 x float>, ptr %m_origin.i.i, align 4, !tbaa !137
  %38 = fadd <2 x float> %36, %37
  %arrayidx.i26.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2
  %39 = load float, ptr %arrayidx.i26.i.i, align 4, !tbaa !137
  %arrayidx5.i27.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2, i32 0, i64 1
  %40 = load float, ptr %arrayidx5.i27.i.i, align 4, !tbaa !137
  %mul8.i29.i.i = fmul float %14, %40
  %41 = tail call float @llvm.fmuladd.f32(float %39, float %13, float %mul8.i29.i.i)
  %arrayidx10.i30.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2, i32 0, i64 2
  %42 = load float, ptr %arrayidx10.i30.i.i, align 4, !tbaa !137
  %43 = tail call float @llvm.fmuladd.f32(float %42, float %15, float %41)
  %arrayidx.i32.i.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i, i64 0, i32 1, i32 0, i64 2
  %44 = load float, ptr %arrayidx.i32.i.i, align 4, !tbaa !137
  %add17.i.i = fadd float %44, %43
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add17.i.i, i64 0
  %m_rpos = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1
  store <2 x float> %38, ptr %m_rpos, align 8, !tbaa.struct !163
  %ref.tmp.sroa.4.0.arrayidx4.sroa_idx = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 0, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i, ptr %ref.tmp.sroa.4.0.arrayidx4.sroa_idx, align 8, !tbaa.struct !165
  %arrayidx7 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1
  %45 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i81 = icmp eq i8 %45, 0
  br i1 %guard.uninitialized.i81, label %init.check.i83, label %_ZNK10btSoftBody4Body5xformEv.exit98, !prof !173

init.check.i83:                                   ; preds = %_ZNK10btSoftBody4Body5xformEv.exit
  %46 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i82 = icmp eq i32 %46, 0
  br i1 %tobool.not.i82, label %_ZNK10btSoftBody4Body5xformEv.exit98, label %init.i85

init.i85:                                         ; preds = %init.check.i83
  %47 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i257 = icmp eq i8 %47, 0
  br i1 %guard.uninitialized.i257, label %init.check.i259, label %invoke.cont2.i89, !prof !173

init.check.i259:                                  ; preds = %init.i85
  %48 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i258 = icmp eq i32 %48, 0
  br i1 %tobool.not.i258, label %invoke.cont2.i89, label %init.i260

init.i260:                                        ; preds = %init.check.i259
  %49 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i293 = icmp eq i8 %49, 0
  br i1 %guard.uninitialized.i293, label %init.check.i295, label %invoke.cont6.i263, !prof !173

init.check.i295:                                  ; preds = %init.i260
  %50 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i294 = icmp eq i32 %50, 0
  br i1 %tobool.not.i294, label %invoke.cont6.i263, label %invoke.cont.i296

invoke.cont.i296:                                 ; preds = %init.check.i295
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %51 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont6.i263

invoke.cont6.i263:                                ; preds = %invoke.cont.i296, %init.check.i295, %init.i260
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %52 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont2.i89

invoke.cont2.i89:                                 ; preds = %invoke.cont6.i263, %init.check.i259, %init.i85
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %53 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit98

_ZNK10btSoftBody4Body5xformEv.exit98:             ; preds = %_ZNK10btSoftBody4Body5xformEv.exit, %init.check.i83, %invoke.cont2.i89
  %m_collisionObject.i90 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1, i32 2
  %54 = load ptr, ptr %m_collisionObject.i90, align 8, !tbaa !253
  %tobool3.not.i91 = icmp eq ptr %54, null
  %m_interpolationWorldTransform.i.i92 = getelementptr inbounds %class.btCollisionObject, ptr %54, i64 0, i32 2
  %55 = load ptr, ptr %arrayidx7, align 8
  %tobool6.not.i93 = icmp eq ptr %55, null
  %m_framexform.i94 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %55, i64 0, i32 3
  %spec.select.i95 = select i1 %tobool6.not.i93, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i94
  %retval.0.i96 = select i1 %tobool3.not.i91, ptr %spec.select.i95, ptr %m_interpolationWorldTransform.i.i92
  %arrayidx10 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 1
  %56 = load float, ptr %arrayidx10, align 8, !tbaa !137
  %arrayidx5.i.i.i99 = getelementptr inbounds [4 x float], ptr %retval.0.i96, i64 0, i64 1
  %arrayidx7.i.i.i100 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 1, i32 0, i64 1
  %57 = load float, ptr %arrayidx7.i.i.i100, align 4, !tbaa !137
  %arrayidx10.i.i.i102 = getelementptr inbounds [4 x float], ptr %retval.0.i96, i64 0, i64 2
  %arrayidx12.i.i.i103 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 1, i32 0, i64 2
  %58 = load float, ptr %arrayidx12.i.i.i103, align 8, !tbaa !137
  %m_origin.i.i104 = getelementptr inbounds %class.btTransform, ptr %retval.0.i96, i64 0, i32 1
  %arrayidx.i.i.i106 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i96, i64 0, i64 1
  %arrayidx5.i20.i.i107 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i96, i64 0, i64 1, i32 0, i64 1
  %arrayidx10.i23.i.i109 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i96, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i26.i.i112 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i96, i64 0, i64 2
  %59 = load float, ptr %arrayidx.i26.i.i112, align 4, !tbaa !137
  %arrayidx5.i27.i.i113 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i96, i64 0, i64 2, i32 0, i64 1
  %60 = load float, ptr %arrayidx5.i27.i.i113, align 4, !tbaa !137
  %mul8.i29.i.i114 = fmul float %57, %60
  %61 = tail call float @llvm.fmuladd.f32(float %59, float %56, float %mul8.i29.i.i114)
  %arrayidx10.i30.i.i115 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i96, i64 0, i64 2, i32 0, i64 2
  %62 = load float, ptr %arrayidx10.i30.i.i115, align 4, !tbaa !137
  %63 = tail call float @llvm.fmuladd.f32(float %62, float %58, float %61)
  %arrayidx.i32.i.i116 = getelementptr inbounds %class.btTransform, ptr %retval.0.i96, i64 0, i32 1, i32 0, i64 2
  %64 = load float, ptr %arrayidx.i32.i.i116, align 4, !tbaa !137
  %add17.i.i117 = fadd float %64, %63
  %retval.sroa.3.12.vec.insert.i.i120 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add17.i.i117, i64 0
  %arrayidx14 = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 1
  %ref.tmp5.sroa.4.0.arrayidx14.sroa_idx = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 1, i32 0, i64 2
  %arrayidx5.i = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 0, i32 0, i64 1
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 1, i32 0, i64 1
  %65 = load float, ptr %retval.0.i96, align 4, !tbaa !137
  %66 = load float, ptr %arrayidx5.i.i.i99, align 4, !tbaa !137
  %67 = load float, ptr %arrayidx10.i.i.i102, align 4, !tbaa !137
  %68 = load float, ptr %arrayidx.i.i.i106, align 4, !tbaa !137
  %69 = load float, ptr %arrayidx5.i20.i.i107, align 4, !tbaa !137
  %70 = insertelement <2 x float> poison, float %57, i64 0
  %71 = shufflevector <2 x float> %70, <2 x float> poison, <2 x i32> zeroinitializer
  %72 = insertelement <2 x float> poison, float %66, i64 0
  %73 = insertelement <2 x float> %72, float %69, i64 1
  %74 = fmul <2 x float> %71, %73
  %75 = insertelement <2 x float> poison, float %65, i64 0
  %76 = insertelement <2 x float> %75, float %68, i64 1
  %77 = insertelement <2 x float> poison, float %56, i64 0
  %78 = shufflevector <2 x float> %77, <2 x float> poison, <2 x i32> zeroinitializer
  %79 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %76, <2 x float> %78, <2 x float> %74)
  %80 = load float, ptr %arrayidx10.i23.i.i109, align 4, !tbaa !137
  %81 = insertelement <2 x float> poison, float %67, i64 0
  %82 = insertelement <2 x float> %81, float %80, i64 1
  %83 = insertelement <2 x float> poison, float %58, i64 0
  %84 = shufflevector <2 x float> %83, <2 x float> poison, <2 x i32> zeroinitializer
  %85 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %82, <2 x float> %84, <2 x float> %79)
  %86 = load <2 x float>, ptr %m_origin.i.i104, align 4, !tbaa !137
  %87 = fadd <2 x float> %85, %86
  store <2 x float> %87, ptr %arrayidx14, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i120, ptr %ref.tmp5.sroa.4.0.arrayidx14.sroa_idx, align 8, !tbaa.struct !165
  %88 = load <2 x float>, ptr %m_rpos, align 8, !tbaa !137
  %89 = fsub <2 x float> %88, %87
  %90 = load float, ptr %ref.tmp.sroa.4.0.arrayidx4.sroa_idx, align 8, !tbaa !137
  %sub14.i = fsub float %90, %add17.i.i117
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i, i64 0
  %91 = fmul <2 x float> %89, %89
  %mul8.i.i.i124 = extractelement <2 x float> %91, i64 1
  %92 = extractelement <2 x float> %89, i64 0
  %93 = tail call float @llvm.fmuladd.f32(float %92, float %92, float %mul8.i.i.i124)
  %94 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub14.i, float %93)
  %cmp.i = fcmp ogt float %94, 1.600000e+01
  br i1 %cmp.i, label %if.then.i, label %_ZL5ClampRK9btVector3f.exit

if.then.i:                                        ; preds = %_ZNK10btSoftBody4Body5xformEv.exit98
  %95 = fmul <2 x float> %89, <float 4.000000e+00, float 4.000000e+00>
  %mul8.i.i = fmul float %sub14.i, 4.000000e+00
  %sqrt.i = tail call float @llvm.sqrt.f32(float %94)
  %div.i.i = fdiv float 1.000000e+00, %sqrt.i
  %96 = insertelement <2 x float> poison, float %div.i.i, i64 0
  %97 = shufflevector <2 x float> %96, <2 x float> poison, <2 x i32> zeroinitializer
  %98 = fmul <2 x float> %95, %97
  %mul8.i.i10.i = fmul float %mul8.i.i, %div.i.i
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i10.i, i64 0
  br label %_ZL5ClampRK9btVector3f.exit

_ZL5ClampRK9btVector3f.exit:                      ; preds = %_ZNK10btSoftBody4Body5xformEv.exit98, %if.then.i
  %retval.sroa.0.0.i = phi <2 x float> [ %98, %if.then.i ], [ %89, %_ZNK10btSoftBody4Body5xformEv.exit98 ]
  %retval.sroa.3.0.i = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i.i.i, %if.then.i ], [ %retval.sroa.3.12.vec.insert.i, %_ZNK10btSoftBody4Body5xformEv.exit98 ]
  %m_erp = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 4
  %99 = load float, ptr %m_erp, align 4, !tbaa !137
  %ref.tmp17.sroa.5.8.vec.extract = extractelement <2 x float> %retval.sroa.3.0.i, i64 0
  %mul8.i = fmul float %99, %ref.tmp17.sroa.5.8.vec.extract
  %div.i = fdiv float 1.000000e+00, %dt
  %100 = insertelement <2 x float> poison, float %99, i64 0
  %101 = shufflevector <2 x float> %100, <2 x float> poison, <2 x i32> zeroinitializer
  %102 = fmul <2 x float> %retval.sroa.0.0.i, %101
  %103 = insertelement <2 x float> poison, float %div.i, i64 0
  %104 = shufflevector <2 x float> %103, <2 x float> poison, <2 x i32> zeroinitializer
  %105 = fmul <2 x float> %104, %102
  %mul8.i.i136 = fmul float %div.i, %mul8.i
  %retval.sroa.3.12.vec.insert.i.i139 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i136, i64 0
  %m_drift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6
  store <2 x float> %105, ptr %m_drift, align 4, !tbaa.struct !163
  %ref.tmp15.sroa.4.0.m_drift.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i139, ptr %ref.tmp15.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa.struct !165
  %106 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i142 = icmp eq i8 %106, 0
  br i1 %guard.uninitialized.i142, label %init.check.i144, label %_ZNK10btSoftBody4Body5xformEv.exit159, !prof !173

init.check.i144:                                  ; preds = %_ZL5ClampRK9btVector3f.exit
  %107 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i143 = icmp eq i32 %107, 0
  br i1 %tobool.not.i143, label %_ZNK10btSoftBody4Body5xformEv.exit159, label %init.i146

init.i146:                                        ; preds = %init.check.i144
  %108 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i267 = icmp eq i8 %108, 0
  br i1 %guard.uninitialized.i267, label %init.check.i269, label %invoke.cont2.i150, !prof !173

init.check.i269:                                  ; preds = %init.i146
  %109 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i268 = icmp eq i32 %109, 0
  br i1 %tobool.not.i268, label %invoke.cont2.i150, label %init.i271

init.i271:                                        ; preds = %init.check.i269
  %110 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i298 = icmp eq i8 %110, 0
  br i1 %guard.uninitialized.i298, label %init.check.i300, label %invoke.cont6.i274, !prof !173

init.check.i300:                                  ; preds = %init.i271
  %111 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i299 = icmp eq i32 %111, 0
  br i1 %tobool.not.i299, label %invoke.cont6.i274, label %invoke.cont.i301

invoke.cont.i301:                                 ; preds = %init.check.i300
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %112 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont6.i274

invoke.cont6.i274:                                ; preds = %invoke.cont.i301, %init.check.i300, %init.i271
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %113 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont2.i150

invoke.cont2.i150:                                ; preds = %invoke.cont6.i274, %init.check.i269, %init.i146
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %114 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit159

_ZNK10btSoftBody4Body5xformEv.exit159:            ; preds = %_ZL5ClampRK9btVector3f.exit, %init.check.i144, %invoke.cont2.i150
  %115 = load ptr, ptr %m_collisionObject.i, align 8, !tbaa !253
  %tobool3.not.i152 = icmp eq ptr %115, null
  %m_interpolationWorldTransform.i.i153 = getelementptr inbounds %class.btCollisionObject, ptr %115, i64 0, i32 2
  %116 = load ptr, ptr %m_bodies, align 8
  %tobool6.not.i154 = icmp eq ptr %116, null
  %m_framexform.i155 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %116, i64 0, i32 3
  %spec.select.i156 = select i1 %tobool6.not.i154, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i155
  %retval.0.i157 = select i1 %tobool3.not.i152, ptr %spec.select.i156, ptr %m_interpolationWorldTransform.i.i153
  %m_origin.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i157, i64 0, i32 1
  %117 = load float, ptr %m_origin.i, align 4, !tbaa !137
  %118 = load float, ptr %m_rpos, align 8, !tbaa !137
  %sub.i160 = fsub float %118, %117
  store float %sub.i160, ptr %m_rpos, align 8, !tbaa !137
  %arrayidx5.i161 = getelementptr inbounds %class.btTransform, ptr %retval.0.i157, i64 0, i32 1, i32 0, i64 1
  %119 = load float, ptr %arrayidx5.i161, align 4, !tbaa !137
  %120 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %sub8.i163 = fsub float %120, %119
  store float %sub8.i163, ptr %arrayidx5.i, align 4, !tbaa !137
  %arrayidx10.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i157, i64 0, i32 1, i32 0, i64 2
  %121 = load float, ptr %arrayidx10.i, align 4, !tbaa !137
  %122 = load float, ptr %ref.tmp.sroa.4.0.arrayidx4.sroa_idx, align 8, !tbaa !137
  %sub13.i = fsub float %122, %121
  store float %sub13.i, ptr %ref.tmp.sroa.4.0.arrayidx4.sroa_idx, align 8, !tbaa !137
  %123 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i164 = icmp eq i8 %123, 0
  br i1 %guard.uninitialized.i164, label %init.check.i166, label %_ZNK10btSoftBody4Body5xformEv.exit181, !prof !173

init.check.i166:                                  ; preds = %_ZNK10btSoftBody4Body5xformEv.exit159
  %124 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i165 = icmp eq i32 %124, 0
  br i1 %tobool.not.i165, label %_ZNK10btSoftBody4Body5xformEv.exit181, label %init.i168

init.i168:                                        ; preds = %init.check.i166
  %125 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i278 = icmp eq i8 %125, 0
  br i1 %guard.uninitialized.i278, label %init.check.i280, label %invoke.cont2.i172, !prof !173

init.check.i280:                                  ; preds = %init.i168
  %126 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i279 = icmp eq i32 %126, 0
  br i1 %tobool.not.i279, label %invoke.cont2.i172, label %init.i282

init.i282:                                        ; preds = %init.check.i280
  %127 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i303 = icmp eq i8 %127, 0
  br i1 %guard.uninitialized.i303, label %init.check.i305, label %invoke.cont6.i285, !prof !173

init.check.i305:                                  ; preds = %init.i282
  %128 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i304 = icmp eq i32 %128, 0
  br i1 %tobool.not.i304, label %invoke.cont6.i285, label %invoke.cont.i306

invoke.cont.i306:                                 ; preds = %init.check.i305
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %129 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont6.i285

invoke.cont6.i285:                                ; preds = %invoke.cont.i306, %init.check.i305, %init.i282
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %130 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont2.i172

invoke.cont2.i172:                                ; preds = %invoke.cont6.i285, %init.check.i280, %init.i168
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %131 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit181

_ZNK10btSoftBody4Body5xformEv.exit181:            ; preds = %_ZNK10btSoftBody4Body5xformEv.exit159, %init.check.i166, %invoke.cont2.i172
  %132 = load ptr, ptr %m_collisionObject.i90, align 8, !tbaa !253
  %tobool3.not.i174 = icmp eq ptr %132, null
  %m_interpolationWorldTransform.i.i175 = getelementptr inbounds %class.btCollisionObject, ptr %132, i64 0, i32 2
  %133 = load ptr, ptr %arrayidx7, align 8
  %tobool6.not.i176 = icmp eq ptr %133, null
  %m_framexform.i177 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %133, i64 0, i32 3
  %spec.select.i178 = select i1 %tobool6.not.i176, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i177
  %retval.0.i179 = select i1 %tobool3.not.i174, ptr %spec.select.i178, ptr %m_interpolationWorldTransform.i.i175
  %m_origin.i182 = getelementptr inbounds %class.btTransform, ptr %retval.0.i179, i64 0, i32 1
  %134 = load float, ptr %m_origin.i182, align 4, !tbaa !137
  %135 = load float, ptr %arrayidx14, align 8, !tbaa !137
  %sub.i183 = fsub float %135, %134
  store float %sub.i183, ptr %arrayidx14, align 8, !tbaa !137
  %arrayidx5.i184 = getelementptr inbounds %class.btTransform, ptr %retval.0.i179, i64 0, i32 1, i32 0, i64 1
  %136 = load float, ptr %arrayidx5.i184, align 4, !tbaa !137
  %137 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %sub8.i186 = fsub float %137, %136
  store float %sub8.i186, ptr %arrayidx7.i, align 4, !tbaa !137
  %arrayidx10.i187 = getelementptr inbounds %class.btTransform, ptr %retval.0.i179, i64 0, i32 1, i32 0, i64 2
  %138 = load float, ptr %arrayidx10.i187, align 4, !tbaa !137
  %139 = load float, ptr %ref.tmp5.sroa.4.0.arrayidx14.sroa_idx, align 8, !tbaa !137
  %sub13.i189 = fsub float %139, %138
  store float %sub13.i189, ptr %ref.tmp5.sroa.4.0.arrayidx14.sroa_idx, align 8, !tbaa !137
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %ref.tmp45) #38
  %140 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool.not.i190 = icmp eq ptr %140, null
  br i1 %tobool.not.i190, label %if.end.i, label %if.then.i191

if.then.i191:                                     ; preds = %_ZNK10btSoftBody4Body5xformEv.exit181
  %m_inverseMass.i.i = getelementptr inbounds %class.btRigidBody, ptr %140, i64 0, i32 4
  %141 = load float, ptr %m_inverseMass.i.i, align 8, !tbaa !452
  br label %_ZNK10btSoftBody4Body7invMassEv.exit

if.end.i:                                         ; preds = %_ZNK10btSoftBody4Body5xformEv.exit181
  %142 = load ptr, ptr %m_bodies, align 8, !tbaa !272
  %tobool3.not.i192 = icmp eq ptr %142, null
  br i1 %tobool3.not.i192, label %_ZNK10btSoftBody4Body7invMassEv.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  %m_imass.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %142, i64 0, i32 5
  %143 = load float, ptr %m_imass.i, align 4, !tbaa !373
  br label %_ZNK10btSoftBody4Body7invMassEv.exit

_ZNK10btSoftBody4Body7invMassEv.exit:             ; preds = %if.then.i191, %if.end.i, %if.then4.i
  %retval.0.i193 = phi float [ %141, %if.then.i191 ], [ %143, %if.then4.i ], [ 0.000000e+00, %if.end.i ]
  %144 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi acquire, align 8
  %guard.uninitialized.i194 = icmp eq i8 %144, 0
  br i1 %guard.uninitialized.i194, label %init.check.i196, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit, !prof !173

init.check.i196:                                  ; preds = %_ZNK10btSoftBody4Body7invMassEv.exit
  %145 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  %tobool.not.i195 = icmp eq i32 %145, 0
  br i1 %tobool.not.i195, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit, label %invoke.cont.i

invoke.cont.i:                                    ; preds = %init.check.i196
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, i8 0, i64 48, i1 false)
  %146 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  br label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit

_ZNK10btSoftBody4Body15invWorldInertiaEv.exit:    ; preds = %_ZNK10btSoftBody4Body7invMassEv.exit, %init.check.i196, %invoke.cont.i
  %147 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool10.not.i = icmp eq ptr %147, null
  %m_invInertiaTensorWorld.i.i = getelementptr inbounds %class.btRigidBody, ptr %147, i64 0, i32 1
  %148 = load ptr, ptr %m_bodies, align 8
  %tobool12.not.i = icmp eq ptr %148, null
  %m_invwi.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %148, i64 0, i32 7
  %spec.select.i198 = select i1 %tobool12.not.i, ptr @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, ptr %m_invwi.i
  %retval.0.i199 = select i1 %tobool10.not.i, ptr %spec.select.i198, ptr %m_invInertiaTensorWorld.i.i
  %149 = load ptr, ptr %m_rigid.i4.i, align 8, !tbaa !511
  %tobool.not.i201 = icmp eq ptr %149, null
  br i1 %tobool.not.i201, label %if.end.i205, label %if.then.i203

if.then.i203:                                     ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit
  %m_inverseMass.i.i202 = getelementptr inbounds %class.btRigidBody, ptr %149, i64 0, i32 4
  %150 = load float, ptr %m_inverseMass.i.i202, align 8, !tbaa !452
  br label %_ZNK10btSoftBody4Body7invMassEv.exit209

if.end.i205:                                      ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit
  %151 = load ptr, ptr %arrayidx7, align 8, !tbaa !272
  %tobool3.not.i204 = icmp eq ptr %151, null
  br i1 %tobool3.not.i204, label %_ZNK10btSoftBody4Body7invMassEv.exit209, label %if.then4.i207

if.then4.i207:                                    ; preds = %if.end.i205
  %m_imass.i206 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %151, i64 0, i32 5
  %152 = load float, ptr %m_imass.i206, align 4, !tbaa !373
  br label %_ZNK10btSoftBody4Body7invMassEv.exit209

_ZNK10btSoftBody4Body7invMassEv.exit209:          ; preds = %if.then.i203, %if.end.i205, %if.then4.i207
  %retval.0.i208 = phi float [ %150, %if.then.i203 ], [ %152, %if.then4.i207 ], [ 0.000000e+00, %if.end.i205 ]
  %153 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi acquire, align 8
  %guard.uninitialized.i210 = icmp eq i8 %153, 0
  br i1 %guard.uninitialized.i210, label %init.check.i212, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit221, !prof !173

init.check.i212:                                  ; preds = %_ZNK10btSoftBody4Body7invMassEv.exit209
  %154 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  %tobool.not.i211 = icmp eq i32 %154, 0
  br i1 %tobool.not.i211, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit221, label %invoke.cont.i213

invoke.cont.i213:                                 ; preds = %init.check.i212
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, i8 0, i64 48, i1 false)
  %155 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  br label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit221

_ZNK10btSoftBody4Body15invWorldInertiaEv.exit221: ; preds = %_ZNK10btSoftBody4Body7invMassEv.exit209, %init.check.i212, %invoke.cont.i213
  %156 = load ptr, ptr %m_rigid.i4.i, align 8, !tbaa !511
  %tobool10.not.i215 = icmp eq ptr %156, null
  %m_invInertiaTensorWorld.i.i216 = getelementptr inbounds %class.btRigidBody, ptr %156, i64 0, i32 1
  %157 = load ptr, ptr %arrayidx7, align 8
  %tobool12.not.i217 = icmp eq ptr %157, null
  %m_invwi.i218 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %157, i64 0, i32 7
  %spec.select.i219 = select i1 %tobool12.not.i217, ptr @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, ptr %m_invwi.i218
  %retval.0.i220 = select i1 %tobool10.not.i215, ptr %spec.select.i219, ptr %m_invInertiaTensorWorld.i.i216
  call fastcc void @_ZL13ImpulseMatrixfRK11btMatrix3x3RK9btVector3fS1_S4_(ptr noalias nonnull align 4 %ref.tmp45, float noundef %retval.0.i193, ptr noundef nonnull align 4 dereferenceable(48) %retval.0.i199, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos, float noundef %retval.0.i208, ptr noundef nonnull align 4 dereferenceable(48) %retval.0.i220, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx14)
  %m_massmatrix = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %m_massmatrix, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp45, i64 16, i1 false), !tbaa.struct !163
  %arrayidx5.i222 = getelementptr inbounds [3 x %class.btVector3], ptr %ref.tmp45, i64 0, i64 1
  %arrayidx7.i223 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx7.i223, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i222, i64 16, i1 false), !tbaa.struct !163
  %arrayidx9.i = getelementptr inbounds [3 x %class.btVector3], ptr %ref.tmp45, i64 0, i64 2
  %arrayidx11.i224 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx11.i224, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx9.i, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %ref.tmp45) #38
  %m_split = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 5
  %158 = load float, ptr %m_split, align 8, !tbaa !137
  %cmp = fcmp ogt float %158, 0.000000e+00
  %159 = load float, ptr %m_drift, align 4, !tbaa !137
  br i1 %cmp, label %if.then, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit221.if.end_crit_edge

_ZNK10btSoftBody4Body15invWorldInertiaEv.exit221.if.end_crit_edge: ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit221
  %arrayidx3.i.i247.phi.trans.insert = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 1
  %.pre312 = load float, ptr %arrayidx3.i.i247.phi.trans.insert, align 8, !tbaa !137
  %.pre313 = load float, ptr %ref.tmp15.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa !137
  %160 = insertelement <2 x float> poison, float %159, i64 0
  %161 = insertelement <2 x float> %160, float %.pre312, i64 1
  br label %if.end

if.then:                                          ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit221
  %mul.i225 = fmul float %158, %159
  %arrayidx3.i226 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 1
  %162 = load float, ptr %arrayidx3.i226, align 8, !tbaa !137
  %mul4.i227 = fmul float %158, %162
  %163 = load float, ptr %ref.tmp15.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa !137
  %mul8.i229 = fmul float %158, %163
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 2
  %arrayidx5.i12.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 2
  %164 = load <4 x float>, ptr %m_massmatrix, align 4
  %165 = shufflevector <4 x float> %164, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %166 = load <4 x float>, ptr %arrayidx5.i.i, align 8
  %167 = shufflevector <4 x float> %166, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %168 = load <4 x float>, ptr %arrayidx10.i.i, align 4
  %169 = shufflevector <4 x float> %168, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %170 = load float, ptr %arrayidx7.i223, align 4, !tbaa !137
  %171 = load float, ptr %arrayidx5.i12.i, align 8, !tbaa !137
  %172 = insertelement <2 x float> poison, float %mul4.i227, i64 0
  %173 = shufflevector <2 x float> %172, <2 x float> poison, <2 x i32> zeroinitializer
  %174 = insertelement <2 x float> %167, float %171, i64 1
  %175 = fmul <2 x float> %173, %174
  %176 = insertelement <2 x float> %165, float %170, i64 1
  %177 = insertelement <2 x float> poison, float %mul.i225, i64 0
  %178 = shufflevector <2 x float> %177, <2 x float> poison, <2 x i32> zeroinitializer
  %179 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %176, <2 x float> %178, <2 x float> %175)
  %180 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %181 = insertelement <2 x float> %169, float %180, i64 1
  %182 = insertelement <2 x float> poison, float %mul8.i229, i64 0
  %183 = shufflevector <2 x float> %182, <2 x float> poison, <2 x i32> zeroinitializer
  %184 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %181, <2 x float> %183, <2 x float> %179)
  %185 = load float, ptr %arrayidx11.i224, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 1
  %186 = load float, ptr %arrayidx5.i18.i, align 8, !tbaa !137
  %mul8.i20.i = fmul float %mul4.i227, %186
  %187 = tail call float @llvm.fmuladd.f32(float %185, float %mul.i225, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 2
  %188 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %189 = tail call float @llvm.fmuladd.f32(float %188, float %mul8.i229, float %187)
  %retval.sroa.3.12.vec.insert.i239 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %189, i64 0
  %m_sdrift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7
  store <2 x float> %184, ptr %m_sdrift, align 4, !tbaa.struct !163
  %ref.tmp63.sroa.4.0.m_sdrift.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i239, ptr %ref.tmp63.sroa.4.0.m_sdrift.sroa_idx, align 4, !tbaa.struct !165
  %sub = fsub float 1.000000e+00, %158
  %190 = insertelement <2 x float> poison, float %sub, i64 0
  %191 = shufflevector <2 x float> %190, <2 x float> poison, <2 x i32> zeroinitializer
  %192 = insertelement <2 x float> poison, float %159, i64 0
  %193 = insertelement <2 x float> %192, float %162, i64 1
  %194 = fmul <2 x float> %191, %193
  %mul7.i = fmul float %sub, %163
  br label %if.end

if.end:                                           ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit221.if.end_crit_edge, %if.then
  %195 = phi float [ %.pre313, %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit221.if.end_crit_edge ], [ %mul7.i, %if.then ]
  %196 = phi <2 x float> [ %161, %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit221.if.end_crit_edge ], [ %194, %if.then ]
  %conv = sitofp i32 %iterations to float
  %div.i245 = fdiv float 1.000000e+00, %conv
  %197 = insertelement <2 x float> poison, float %div.i245, i64 0
  %198 = shufflevector <2 x float> %197, <2 x float> poison, <2 x i32> zeroinitializer
  %199 = fmul <2 x float> %198, %196
  store <2 x float> %199, ptr %m_drift, align 4, !tbaa !137
  %mul7.i.i = fmul float %div.i245, %195
  store float %mul7.i.i, ptr %ref.tmp15.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa !137
  ret void
}

; Function Attrs: inlinehint mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal fastcc void @_ZL13ImpulseMatrixfRK11btMatrix3x3RK9btVector3fS1_S4_(ptr noalias nocapture writeonly align 4 %agg.result, float noundef %ima, ptr nocapture noundef nonnull readonly align 4 dereferenceable(48) %iia, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %ra, float noundef %imb, ptr nocapture noundef nonnull readonly align 4 dereferenceable(48) %iib, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %rb) unnamed_addr #24 {
entry:
  %arrayidx.i.i.i = getelementptr inbounds [4 x float], ptr %ra, i64 0, i64 2
  %arrayidx.i27.i.i = getelementptr inbounds [4 x float], ptr %ra, i64 0, i64 1
  %arrayidx4.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iia, i64 0, i64 1
  %arrayidx9.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iia, i64 0, i64 2
  %arrayidx.i.i42.i.i = getelementptr inbounds [4 x float], ptr %iia, i64 0, i64 1
  %arrayidx.i14.i43.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iia, i64 0, i64 1, i32 0, i64 1
  %arrayidx.i16.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iia, i64 0, i64 2, i32 0, i64 1
  %arrayidx.i.i45.i.i = getelementptr inbounds [4 x float], ptr %iia, i64 0, i64 2
  %arrayidx.i14.i46.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iia, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i16.i49.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iia, i64 0, i64 2, i32 0, i64 2
  %arrayidx.i.i.i3 = getelementptr inbounds [4 x float], ptr %rb, i64 0, i64 2
  %arrayidx.i27.i.i5 = getelementptr inbounds [4 x float], ptr %rb, i64 0, i64 1
  %arrayidx4.i.i.i8 = getelementptr inbounds [3 x %class.btVector3], ptr %iib, i64 0, i64 1
  %arrayidx9.i.i.i10 = getelementptr inbounds [3 x %class.btVector3], ptr %iib, i64 0, i64 2
  %arrayidx.i.i42.i.i11 = getelementptr inbounds [4 x float], ptr %iib, i64 0, i64 1
  %arrayidx.i14.i43.i.i12 = getelementptr inbounds [3 x %class.btVector3], ptr %iib, i64 0, i64 1, i32 0, i64 1
  %arrayidx.i16.i.i.i14 = getelementptr inbounds [3 x %class.btVector3], ptr %iib, i64 0, i64 2, i32 0, i64 1
  %arrayidx.i.i45.i.i15 = getelementptr inbounds [4 x float], ptr %iib, i64 0, i64 2
  %arrayidx.i14.i46.i.i16 = getelementptr inbounds [3 x %class.btVector3], ptr %iib, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i16.i49.i.i18 = getelementptr inbounds [3 x %class.btVector3], ptr %iib, i64 0, i64 2, i32 0, i64 2
  %0 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %ima, i64 0
  %1 = load float, ptr %arrayidx.i27.i.i, align 4, !tbaa !137, !noalias !512
  %2 = load float, ptr %arrayidx.i27.i.i5, align 4, !tbaa !137, !noalias !517
  %3 = insertelement <2 x float> poison, float %1, i64 0
  %4 = insertelement <2 x float> %3, float %2, i64 1
  %5 = fneg <2 x float> %4
  %6 = load <4 x float>, ptr %iia, align 4
  %7 = shufflevector <4 x float> %6, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %8 = load <4 x float>, ptr %arrayidx4.i.i.i, align 4
  %9 = shufflevector <4 x float> %8, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %10 = load <4 x float>, ptr %arrayidx9.i.i.i, align 4
  %11 = shufflevector <4 x float> %10, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %12 = load <4 x float>, ptr %arrayidx.i.i42.i.i, align 4
  %13 = shufflevector <4 x float> %12, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %14 = load <4 x float>, ptr %arrayidx.i14.i43.i.i, align 4
  %15 = shufflevector <4 x float> %14, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %16 = load float, ptr %arrayidx.i16.i.i.i, align 4, !tbaa !137, !noalias !522
  %17 = load float, ptr %iib, align 4, !tbaa !137, !noalias !525
  %18 = load float, ptr %arrayidx4.i.i.i8, align 4, !tbaa !137, !noalias !525
  %19 = load float, ptr %arrayidx9.i.i.i10, align 4, !tbaa !137, !noalias !525
  %20 = load float, ptr %arrayidx.i.i42.i.i11, align 4, !tbaa !137, !noalias !525
  %21 = load float, ptr %arrayidx.i14.i43.i.i12, align 4, !tbaa !137, !noalias !525
  %22 = load float, ptr %arrayidx.i16.i.i.i14, align 4, !tbaa !137, !noalias !525
  %23 = insertelement <2 x float> %9, float %18, i64 1
  %24 = insertelement <2 x float> %15, float %21, i64 1
  %25 = shufflevector <4 x float> %8, <4 x float> poison, <2 x i32> zeroinitializer
  %26 = shufflevector <4 x float> %6, <4 x float> poison, <2 x i32> zeroinitializer
  %27 = shufflevector <4 x float> %10, <4 x float> poison, <2 x i32> zeroinitializer
  %28 = shufflevector <4 x float> %14, <4 x float> poison, <2 x i32> zeroinitializer
  %29 = shufflevector <4 x float> %12, <4 x float> poison, <2 x i32> zeroinitializer
  %30 = insertelement <2 x float> poison, float %16, i64 0
  %31 = shufflevector <2 x float> %30, <2 x float> poison, <2 x i32> zeroinitializer
  %32 = insertelement <2 x float> poison, float %18, i64 0
  %33 = shufflevector <2 x float> %32, <2 x float> poison, <2 x i32> zeroinitializer
  %34 = insertelement <2 x float> poison, float %17, i64 0
  %35 = shufflevector <2 x float> %34, <2 x float> poison, <2 x i32> zeroinitializer
  %36 = insertelement <2 x float> poison, float %19, i64 0
  %37 = shufflevector <2 x float> %36, <2 x float> poison, <2 x i32> zeroinitializer
  %38 = insertelement <2 x float> poison, float %21, i64 0
  %39 = shufflevector <2 x float> %38, <2 x float> poison, <2 x i32> zeroinitializer
  %40 = insertelement <2 x float> poison, float %20, i64 0
  %41 = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> zeroinitializer
  %42 = insertelement <2 x float> poison, float %22, i64 0
  %43 = shufflevector <2 x float> %42, <2 x float> poison, <2 x i32> zeroinitializer
  %44 = insertelement <2 x float> %7, float %17, i64 1
  %45 = insertelement <2 x float> %11, float %19, i64 1
  %46 = insertelement <2 x float> %13, float %20, i64 1
  %47 = insertelement <2 x float> %30, float %22, i64 1
  %48 = insertelement <2 x float> poison, float %ima, i64 0
  %49 = insertelement <2 x float> %48, float %imb, i64 1
  %50 = load <4 x float>, ptr %ra, align 4
  %51 = shufflevector <4 x float> %50, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %52 = load float, ptr %rb, align 4, !tbaa !137, !noalias !517
  %53 = insertelement <2 x float> %51, float %52, i64 1
  %54 = fneg <2 x float> %53
  %55 = fmul <2 x float> %53, %23
  %56 = fmul <2 x float> %53, %24
  %57 = shufflevector <2 x float> %54, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %58 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137, !noalias !512
  %59 = load <4 x float>, ptr %arrayidx.i.i45.i.i, align 4
  %60 = shufflevector <4 x float> %59, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %61 = load <4 x float>, ptr %arrayidx.i14.i46.i.i, align 4
  %62 = shufflevector <4 x float> %61, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %63 = load float, ptr %arrayidx.i16.i49.i.i, align 4, !tbaa !137, !noalias !522
  %64 = load float, ptr %arrayidx.i.i.i3, align 4, !tbaa !137, !noalias !517
  %65 = insertelement <2 x float> poison, float %58, i64 0
  %66 = insertelement <2 x float> %65, float %64, i64 1
  %67 = fneg <2 x float> %66
  %68 = load float, ptr %arrayidx.i.i45.i.i15, align 4, !tbaa !137, !noalias !525
  %69 = load float, ptr %arrayidx.i14.i46.i.i16, align 4, !tbaa !137, !noalias !525
  %70 = insertelement <2 x float> %62, float %69, i64 1
  %71 = fmul <2 x float> %70, %67
  %72 = insertelement <2 x float> %60, float %68, i64 1
  %73 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %72, <2 x float> zeroinitializer, <2 x float> %71)
  %74 = load float, ptr %arrayidx.i16.i49.i.i18, align 4, !tbaa !137, !noalias !525
  %75 = insertelement <2 x float> poison, float %63, i64 0
  %76 = insertelement <2 x float> %75, float %74, i64 1
  %77 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %76, <2 x float> %4, <2 x float> %73)
  %78 = fmul <2 x float> %70, zeroinitializer
  %79 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %72, <2 x float> %66, <2 x float> %78)
  %80 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %76, <2 x float> %54, <2 x float> %79)
  %81 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %44, <2 x float> %5, <2 x float> %55)
  %82 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %45, <2 x float> zeroinitializer, <2 x float> %81)
  %83 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %46, <2 x float> %5, <2 x float> %56)
  %84 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %47, <2 x float> zeroinitializer, <2 x float> %83)
  %85 = fmul <2 x float> %53, %70
  %86 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %72, <2 x float> %5, <2 x float> %85)
  %87 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %76, <2 x float> zeroinitializer, <2 x float> %86)
  %88 = fmul <2 x float> %66, %84
  %89 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %82, <2 x float> zeroinitializer, <2 x float> %88)
  %90 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %5, <2 x float> %87, <2 x float> %89)
  %91 = fsub <2 x float> zeroinitializer, %90
  %shift = shufflevector <2 x float> %91, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %92 = fadd <2 x float> %91, %shift
  %add.i.2.i = extractelement <2 x float> %92, i64 0
  %93 = shufflevector <2 x float> <float 0.000000e+00, float poison>, <2 x float> %67, <2 x i32> <i32 0, i32 2>
  %94 = fmul <2 x float> %25, %93
  %95 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %58, i64 0
  %96 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %26, <2 x float> %95, <2 x float> %94)
  %97 = insertelement <2 x float> %54, float %1, i64 1
  %98 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %27, <2 x float> %97, <2 x float> %96)
  %99 = fmul <2 x float> %28, %93
  %100 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %29, <2 x float> %95, <2 x float> %99)
  %101 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %31, <2 x float> %97, <2 x float> %100)
  %102 = shufflevector <2 x float> %54, <2 x float> <float 0.000000e+00, float poison>, <2 x i32> <i32 2, i32 0>
  %103 = fmul <2 x float> %101, %102
  %104 = shufflevector <2 x float> %93, <2 x float> %97, <2 x i32> <i32 1, i32 3>
  %105 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %104, <2 x float> %98, <2 x float> %103)
  %106 = shufflevector <2 x float> %51, <2 x float> %77, <2 x i32> <i32 0, i32 2>
  %107 = insertelement <2 x float> %80, float 0.000000e+00, i64 1
  %108 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %106, <2 x float> %107, <2 x float> %105)
  %109 = insertelement <2 x float> %97, float 0.000000e+00, i64 1
  %110 = fmul <2 x float> %101, %109
  %111 = shufflevector <2 x float> %104, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %112 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %111, <2 x float> %98, <2 x float> %110)
  %113 = shufflevector <2 x float> %80, <2 x float> %106, <2 x i32> <i32 0, i32 2>
  %114 = insertelement <2 x float> %106, float 0.000000e+00, i64 0
  %115 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %113, <2 x float> %114, <2 x float> %112)
  %116 = shufflevector <2 x float> %84, <2 x float> poison, <2 x i32> zeroinitializer
  %117 = fmul <2 x float> %116, %109
  %118 = shufflevector <2 x float> %82, <2 x float> poison, <2 x i32> zeroinitializer
  %119 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %111, <2 x float> %118, <2 x float> %117)
  %120 = shufflevector <4 x float> %50, <4 x float> poison, <2 x i32> <i32 poison, i32 0>
  %121 = shufflevector <2 x float> %87, <2 x float> %120, <2 x i32> <i32 0, i32 3>
  %122 = shufflevector <2 x float> %121, <2 x float> <float 0.000000e+00, float poison>, <2 x i32> <i32 2, i32 0>
  %123 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %121, <2 x float> %122, <2 x float> %119)
  %124 = fsub <2 x float> %0, %108
  %125 = fsub <2 x float> zeroinitializer, %115
  %126 = fsub <2 x float> %0, %123
  %127 = insertelement <2 x float> %67, float 0.000000e+00, i64 0
  %128 = fmul <2 x float> %33, %127
  %129 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %64, i64 0
  %130 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %35, <2 x float> %129, <2 x float> %128)
  %131 = insertelement <2 x float> %57, float %2, i64 1
  %132 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %37, <2 x float> %131, <2 x float> %130)
  %133 = fmul <2 x float> %39, %127
  %134 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %41, <2 x float> %129, <2 x float> %133)
  %135 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %43, <2 x float> %131, <2 x float> %134)
  %136 = shufflevector <2 x float> %101, <2 x float> %135, <2 x i32> <i32 1, i32 3>
  %137 = fmul <2 x float> %66, %136
  %138 = shufflevector <2 x float> %98, <2 x float> %132, <2 x i32> <i32 1, i32 3>
  %139 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %138, <2 x float> zeroinitializer, <2 x float> %137)
  %140 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %5, <2 x float> %77, <2 x float> %139)
  %141 = shufflevector <2 x float> %101, <2 x float> %135, <2 x i32> <i32 0, i32 2>
  %142 = fmul <2 x float> %66, %141
  %143 = shufflevector <2 x float> %98, <2 x float> %132, <2 x i32> <i32 0, i32 2>
  %144 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %143, <2 x float> zeroinitializer, <2 x float> %142)
  %145 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %5, <2 x float> %80, <2 x float> %144)
  %146 = shufflevector <2 x float> %57, <2 x float> <float 0.000000e+00, float poison>, <2 x i32> <i32 2, i32 0>
  %147 = fmul <2 x float> %135, %146
  %148 = shufflevector <2 x float> %67, <2 x float> %131, <2 x i32> <i32 1, i32 3>
  %149 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %148, <2 x float> %132, <2 x float> %147)
  %150 = insertelement <2 x float> %77, float %52, i64 0
  %151 = shufflevector <2 x float> <float poison, float 0.000000e+00>, <2 x float> %80, <2 x i32> <i32 3, i32 1>
  %152 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %150, <2 x float> %151, <2 x float> %149)
  %153 = insertelement <2 x float> %131, float 0.000000e+00, i64 1
  %154 = fmul <2 x float> %135, %153
  %155 = shufflevector <2 x float> %148, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %156 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %155, <2 x float> %132, <2 x float> %154)
  %157 = insertelement <2 x float> %151, float %52, i64 1
  %158 = insertelement <2 x float> %150, float 0.000000e+00, i64 0
  %159 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %157, <2 x float> %158, <2 x float> %156)
  %160 = shufflevector <2 x float> %84, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %161 = fmul <2 x float> %160, %153
  %162 = shufflevector <2 x float> %82, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %163 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %155, <2 x float> %162, <2 x float> %161)
  %164 = insertelement <2 x float> poison, float %52, i64 1
  %165 = shufflevector <2 x float> %164, <2 x float> %87, <2 x i32> <i32 3, i32 1>
  %166 = shufflevector <2 x float> %165, <2 x float> <float 0.000000e+00, float poison>, <2 x i32> <i32 2, i32 0>
  %167 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %165, <2 x float> %166, <2 x float> %163)
  %168 = fsub <2 x float> %49, %140
  %169 = fsub <2 x float> zeroinitializer, %145
  %170 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %imb, i64 0
  %171 = fsub <2 x float> %170, %152
  %172 = fsub <2 x float> zeroinitializer, %159
  %173 = fsub <2 x float> %170, %167
  %shift57 = shufflevector <2 x float> %168, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %174 = fadd <2 x float> %168, %shift57
  %add.i.i = extractelement <2 x float> %174, i64 0
  %shift58 = shufflevector <2 x float> %169, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %175 = fadd <2 x float> %169, %shift58
  %add.i.1.i = extractelement <2 x float> %175, i64 0
  %176 = fadd <2 x float> %124, %171
  %177 = fadd <2 x float> %125, %172
  %178 = fadd <2 x float> %126, %173
  %179 = fneg float %add.i.1.i
  %180 = extractelement <2 x float> %178, i64 0
  %neg.i46.i = fmul float %180, %179
  %181 = extractelement <2 x float> %177, i64 0
  %182 = tail call float @llvm.fmuladd.f32(float %181, float %add.i.2.i, float %neg.i46.i)
  %183 = extractelement <2 x float> %176, i64 0
  %184 = extractelement <2 x float> %177, i64 1
  %mul8.i.i = fmul float %184, %182
  %185 = fneg <2 x float> %177
  %186 = shufflevector <2 x float> %178, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %187 = fmul <2 x float> %186, %185
  %188 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %176, <2 x float> %178, <2 x float> %187)
  %189 = extractelement <2 x float> %188, i64 0
  %190 = tail call float @llvm.fmuladd.f32(float %add.i.i, float %189, float %mul8.i.i)
  %191 = extractelement <2 x float> %176, i64 1
  %192 = fneg float %191
  %neg.i66.i = fmul float %183, %192
  %193 = tail call float @llvm.fmuladd.f32(float %184, float %181, float %neg.i66.i)
  %neg.i71.i = fmul float %add.i.2.i, %192
  %194 = tail call float @llvm.fmuladd.f32(float %add.i.i, float %180, float %neg.i71.i)
  %shift59 = shufflevector <2 x float> %185, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %195 = fmul <2 x float> %175, %shift59
  %neg.i84.i = extractelement <2 x float> %195, i64 0
  %196 = tail call float @llvm.fmuladd.f32(float %add.i.i, float %183, float %neg.i84.i)
  %arrayidx5.i.i.i.i = getelementptr inbounds [4 x float], ptr %agg.result, i64 0, i64 2
  %arrayidx7.i.i.i.i = getelementptr inbounds [4 x float], ptr %agg.result, i64 0, i64 3
  store float 0.000000e+00, ptr %arrayidx7.i.i.i.i, align 4, !tbaa !137, !alias.scope !528
  %arrayidx3.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 1
  %arrayidx3.i6.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 1, i32 0, i64 1
  %arrayidx5.i7.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 1, i32 0, i64 2
  %arrayidx7.i8.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 1, i32 0, i64 3
  store float 0.000000e+00, ptr %arrayidx7.i8.i.i.i, align 4, !tbaa !137, !alias.scope !528
  %arrayidx5.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 2
  %197 = shufflevector <2 x float> %176, <2 x float> %174, <2 x i32> <i32 0, i32 2>
  %198 = fneg <2 x float> %197
  %199 = shufflevector <2 x float> %92, <2 x float> %178, <2 x i32> <i32 0, i32 3>
  %200 = fmul <2 x float> %199, %198
  %201 = shufflevector <2 x float> %175, <2 x float> %177, <2 x i32> <i32 0, i32 3>
  %202 = shufflevector <2 x float> %186, <2 x float> %92, <2 x i32> <i32 0, i32 2>
  %203 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %201, <2 x float> %202, <2 x float> %200)
  %204 = extractelement <2 x float> %203, i64 0
  %205 = tail call float @llvm.fmuladd.f32(float %191, float %204, float %190)
  %div.i = fdiv float 1.000000e+00, %205
  %206 = insertelement <2 x float> poison, float %div.i, i64 0
  %207 = shufflevector <2 x float> %206, <2 x float> poison, <2 x i32> zeroinitializer
  %208 = fmul <2 x float> %188, %207
  %mul15.i = fmul float %193, %div.i
  %mul18.i = fmul float %182, %div.i
  %mul21.i = fmul float %194, %div.i
  %shift60 = shufflevector <2 x float> %198, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %209 = fmul <2 x float> %177, %shift60
  %neg.i75.i = extractelement <2 x float> %209, i64 0
  %210 = tail call float @llvm.fmuladd.f32(float %191, float %add.i.1.i, float %neg.i75.i)
  %mul24.i = fmul float %210, %div.i
  %211 = fmul <2 x float> %203, %207
  %mul33.i = fmul float %196, %div.i
  store <2 x float> %208, ptr %agg.result, align 4, !tbaa !137, !alias.scope !528
  store float %mul15.i, ptr %arrayidx5.i.i.i.i, align 4, !tbaa !137, !alias.scope !528
  store float %mul18.i, ptr %arrayidx3.i.i.i, align 4, !tbaa !137, !alias.scope !528
  store float %mul21.i, ptr %arrayidx3.i6.i.i.i, align 4, !tbaa !137, !alias.scope !528
  store float %mul24.i, ptr %arrayidx5.i7.i.i.i, align 4, !tbaa !137, !alias.scope !528
  store <2 x float> %211, ptr %arrayidx5.i.i.i, align 4, !tbaa !137, !alias.scope !528
  %arrayidx5.i10.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 2, i32 0, i64 2
  store float %mul33.i, ptr %arrayidx5.i10.i.i.i, align 4, !tbaa !137, !alias.scope !528
  %arrayidx7.i11.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 2, i32 0, i64 3
  store float 0.000000e+00, ptr %arrayidx7.i11.i.i.i, align 4, !tbaa !137, !alias.scope !528
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6LJoint5SolveEff(ptr noundef nonnull align 8 dereferenceable(216) %this, float %dt, float noundef %sor) unnamed_addr #0 align 2 {
entry:
  %impulse = alloca %"struct.btSoftBody::Impulse", align 8
  %ref.tmp24 = alloca %"struct.btSoftBody::Impulse", align 8
  %m_bodies = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1
  %m_rpos = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1
  %m_rigid.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 0, i32 1
  %0 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool.not.i.i = icmp eq ptr %0, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i10.i

if.end.i.i:                                       ; preds = %entry
  %1 = load ptr, ptr %m_bodies, align 8, !tbaa !272
  %tobool3.not.i.i = icmp eq ptr %1, null
  br i1 %tobool3.not.i.i, label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit, label %if.then5.i.i

if.then.i10.i:                                    ; preds = %entry
  %m_linearVelocity.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 2
  %retval.sroa.0.0.copyload.i.i = load <2 x float>, ptr %m_linearVelocity.i.i.i, align 4, !tbaa.struct !163
  %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 2, i32 0, i64 2
  %retval.sroa.5.0.copyload.i.i = load <2 x float>, ptr %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i, align 4, !tbaa.struct !165
  %m_angularVelocity.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3
  %arrayidx.i.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3, i32 0, i64 1
  %arrayidx7.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 0, i32 0, i64 1
  %2 = load float, ptr %m_angularVelocity.i.i.i, align 4, !tbaa !137
  %3 = load <2 x float>, ptr %arrayidx.i.i.i.i, align 4, !tbaa !137
  %4 = load <2 x float>, ptr %arrayidx7.i.i.i.i, align 4, !tbaa !137
  %5 = load float, ptr %m_rpos, align 8, !tbaa !137
  %6 = insertelement <2 x float> %3, float %2, i64 0
  %7 = shufflevector <2 x float> %6, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %8 = fneg <2 x float> %7
  %9 = fmul <2 x float> %4, %8
  %10 = shufflevector <2 x float> %4, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %11 = insertelement <2 x float> %10, float %5, i64 1
  %12 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %3, <2 x float> %11, <2 x float> %9)
  %13 = extractelement <2 x float> %3, i64 0
  %14 = fneg float %13
  %neg30.i.i.i.i = fmul float %5, %14
  %15 = extractelement <2 x float> %4, i64 0
  %16 = tail call float @llvm.fmuladd.f32(float %2, float %15, float %neg30.i.i.i.i)
  %retval.sroa.3.12.vec.insert.i.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %16, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit

if.then5.i.i:                                     ; preds = %if.end.i.i
  %retval.sroa.5.0.m_lv.sroa_idx.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 13, i32 0, i64 2
  %retval.sroa.5.0.copyload12.i.i = load <2 x float>, ptr %retval.sroa.5.0.m_lv.sroa_idx.i.i, align 8, !tbaa.struct !165
  %m_lv.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 13
  %retval.sroa.0.0.copyload11.i.i = load <2 x float>, ptr %m_lv.i.i, align 8, !tbaa.struct !163
  %m_av.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 14
  %arrayidx.i.i15.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 14, i32 0, i64 1
  %arrayidx7.i.i18.i.i = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 0, i32 0, i64 1
  %17 = load float, ptr %m_av.i.i, align 4, !tbaa !137
  %18 = load <2 x float>, ptr %arrayidx.i.i15.i.i, align 4, !tbaa !137
  %19 = load <2 x float>, ptr %arrayidx7.i.i18.i.i, align 4, !tbaa !137
  %20 = load float, ptr %m_rpos, align 8, !tbaa !137
  %21 = insertelement <2 x float> %18, float %17, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %23 = fneg <2 x float> %22
  %24 = fmul <2 x float> %19, %23
  %25 = shufflevector <2 x float> %19, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %26 = insertelement <2 x float> %25, float %20, i64 1
  %27 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %18, <2 x float> %26, <2 x float> %24)
  %28 = extractelement <2 x float> %18, i64 0
  %29 = fneg float %28
  %neg30.i.i21.i.i = fmul float %20, %29
  %30 = extractelement <2 x float> %19, i64 0
  %31 = tail call float @llvm.fmuladd.f32(float %17, float %30, float %neg30.i.i21.i.i)
  %retval.sroa.3.12.vec.insert.i.i24.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %31, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit

_ZNK10btSoftBody4Body8velocityERK9btVector3.exit: ; preds = %if.end.i.i, %if.then.i10.i, %if.then5.i.i
  %retval.sroa.5.0.i24.i = phi <2 x float> [ %retval.sroa.5.0.copyload12.i.i, %if.then5.i.i ], [ %retval.sroa.5.0.copyload.i.i, %if.then.i10.i ], [ zeroinitializer, %if.end.i.i ]
  %retval.sroa.0.0.i22.i = phi <2 x float> [ %retval.sroa.0.0.copyload11.i.i, %if.then5.i.i ], [ %retval.sroa.0.0.copyload.i.i, %if.then.i10.i ], [ zeroinitializer, %if.end.i.i ]
  %retval.sroa.0.0.i12.i = phi <2 x float> [ %27, %if.then5.i.i ], [ %12, %if.then.i10.i ], [ zeroinitializer, %if.end.i.i ]
  %retval.sroa.5.0.i13.i = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i.i24.i.i, %if.then5.i.i ], [ %retval.sroa.3.12.vec.insert.i.i.i.i, %if.then.i10.i ], [ zeroinitializer, %if.end.i.i ]
  %32 = fadd <2 x float> %retval.sroa.0.0.i22.i, %retval.sroa.0.0.i12.i
  %33 = fadd <2 x float> %retval.sroa.0.0.i22.i, %retval.sroa.0.0.i12.i
  %34 = fadd <2 x float> %retval.sroa.5.0.i24.i, %retval.sroa.5.0.i13.i
  %arrayidx4 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1
  %arrayidx6 = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 1
  %m_rigid.i.i31 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1, i32 1
  %35 = load ptr, ptr %m_rigid.i.i31, align 8, !tbaa !511
  %tobool.not.i.i32 = icmp eq ptr %35, null
  br i1 %tobool.not.i.i32, label %if.end.i.i34, label %if.then.i10.i50

if.end.i.i34:                                     ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit
  %36 = load ptr, ptr %arrayidx4, align 8, !tbaa !272
  %tobool3.not.i.i33 = icmp eq ptr %36, null
  br i1 %tobool3.not.i.i33, label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit85, label %if.then5.i.i66

if.then.i10.i50:                                  ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit
  %m_linearVelocity.i.i.i35 = getelementptr inbounds %class.btRigidBody, ptr %35, i64 0, i32 2
  %retval.sroa.0.0.copyload.i.i36 = load <2 x float>, ptr %m_linearVelocity.i.i.i35, align 4, !tbaa.struct !163
  %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i37 = getelementptr inbounds %class.btRigidBody, ptr %35, i64 0, i32 2, i32 0, i64 2
  %retval.sroa.5.0.copyload.i.i38 = load <2 x float>, ptr %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i37, align 4, !tbaa.struct !165
  %m_angularVelocity.i.i.i39 = getelementptr inbounds %class.btRigidBody, ptr %35, i64 0, i32 3
  %arrayidx.i.i.i.i40 = getelementptr inbounds %class.btRigidBody, ptr %35, i64 0, i32 3, i32 0, i64 1
  %arrayidx7.i.i.i.i43 = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 1, i32 0, i64 1
  %37 = load float, ptr %m_angularVelocity.i.i.i39, align 4, !tbaa !137
  %38 = load <2 x float>, ptr %arrayidx.i.i.i.i40, align 4, !tbaa !137
  %39 = load <2 x float>, ptr %arrayidx7.i.i.i.i43, align 4, !tbaa !137
  %40 = load float, ptr %arrayidx6, align 8, !tbaa !137
  %41 = insertelement <2 x float> %38, float %37, i64 0
  %42 = shufflevector <2 x float> %41, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %43 = fneg <2 x float> %42
  %44 = fmul <2 x float> %39, %43
  %45 = shufflevector <2 x float> %39, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %46 = insertelement <2 x float> %45, float %40, i64 1
  %47 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %38, <2 x float> %46, <2 x float> %44)
  %48 = extractelement <2 x float> %38, i64 0
  %49 = fneg float %48
  %neg30.i.i.i.i46 = fmul float %40, %49
  %50 = extractelement <2 x float> %39, i64 0
  %51 = tail call float @llvm.fmuladd.f32(float %37, float %50, float %neg30.i.i.i.i46)
  %retval.sroa.3.12.vec.insert.i.i.i.i49 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %51, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit85

if.then5.i.i66:                                   ; preds = %if.end.i.i34
  %retval.sroa.5.0.m_lv.sroa_idx.i.i51 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 13, i32 0, i64 2
  %retval.sroa.5.0.copyload12.i.i52 = load <2 x float>, ptr %retval.sroa.5.0.m_lv.sroa_idx.i.i51, align 8, !tbaa.struct !165
  %m_lv.i.i53 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 13
  %retval.sroa.0.0.copyload11.i.i54 = load <2 x float>, ptr %m_lv.i.i53, align 8, !tbaa.struct !163
  %m_av.i.i55 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 14
  %arrayidx.i.i15.i.i56 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 14, i32 0, i64 1
  %arrayidx7.i.i18.i.i59 = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 1, i32 0, i64 1
  %52 = load float, ptr %m_av.i.i55, align 4, !tbaa !137
  %53 = load <2 x float>, ptr %arrayidx.i.i15.i.i56, align 4, !tbaa !137
  %54 = load <2 x float>, ptr %arrayidx7.i.i18.i.i59, align 4, !tbaa !137
  %55 = load float, ptr %arrayidx6, align 8, !tbaa !137
  %56 = insertelement <2 x float> %53, float %52, i64 0
  %57 = shufflevector <2 x float> %56, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %58 = fneg <2 x float> %57
  %59 = fmul <2 x float> %54, %58
  %60 = shufflevector <2 x float> %54, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %61 = insertelement <2 x float> %60, float %55, i64 1
  %62 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %53, <2 x float> %61, <2 x float> %59)
  %63 = extractelement <2 x float> %53, i64 0
  %64 = fneg float %63
  %neg30.i.i21.i.i62 = fmul float %55, %64
  %65 = extractelement <2 x float> %54, i64 0
  %66 = tail call float @llvm.fmuladd.f32(float %52, float %65, float %neg30.i.i21.i.i62)
  %retval.sroa.3.12.vec.insert.i.i24.i.i65 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %66, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit85

_ZNK10btSoftBody4Body8velocityERK9btVector3.exit85: ; preds = %if.end.i.i34, %if.then.i10.i50, %if.then5.i.i66
  %retval.sroa.5.0.i24.i67 = phi <2 x float> [ %retval.sroa.5.0.copyload12.i.i52, %if.then5.i.i66 ], [ %retval.sroa.5.0.copyload.i.i38, %if.then.i10.i50 ], [ zeroinitializer, %if.end.i.i34 ]
  %retval.sroa.0.0.i22.i68 = phi <2 x float> [ %retval.sroa.0.0.copyload11.i.i54, %if.then5.i.i66 ], [ %retval.sroa.0.0.copyload.i.i36, %if.then.i10.i50 ], [ zeroinitializer, %if.end.i.i34 ]
  %retval.sroa.0.0.i12.i69 = phi <2 x float> [ %62, %if.then5.i.i66 ], [ %47, %if.then.i10.i50 ], [ zeroinitializer, %if.end.i.i34 ]
  %retval.sroa.5.0.i13.i70 = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i.i24.i.i65, %if.then5.i.i66 ], [ %retval.sroa.3.12.vec.insert.i.i.i.i49, %if.then.i10.i50 ], [ zeroinitializer, %if.end.i.i34 ]
  %67 = fadd <2 x float> %retval.sroa.0.0.i22.i68, %retval.sroa.0.0.i12.i69
  %68 = fadd <2 x float> %retval.sroa.0.0.i22.i68, %retval.sroa.0.0.i12.i69
  %69 = fadd <2 x float> %retval.sroa.5.0.i24.i67, %retval.sroa.5.0.i13.i70
  %70 = fsub <2 x float> %32, %67
  %sub.i = extractelement <2 x float> %70, i64 0
  %71 = fsub <2 x float> %33, %68
  %sub8.i = extractelement <2 x float> %71, i64 1
  %72 = fsub <2 x float> %34, %69
  %sub14.i = extractelement <2 x float> %72, i64 0
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %impulse) #38
  %m_asVelocity.i = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 2
  %73 = getelementptr inbounds i8, ptr %impulse, i64 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %73, i8 0, i64 16, i1 false)
  store i8 1, ptr %m_asVelocity.i, align 8
  %m_massmatrix = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8
  %m_drift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6
  %m_cfm = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 3
  %74 = load float, ptr %m_cfm, align 8, !tbaa !137
  %mul.i = fmul float %sub.i, %74
  %mul4.i = fmul float %sub8.i, %74
  %mul8.i = fmul float %sub14.i, %74
  %75 = load float, ptr %m_drift, align 4, !tbaa !137
  %add.i = fadd float %75, %mul.i
  %arrayidx5.i92 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 1
  %76 = load float, ptr %arrayidx5.i92, align 8, !tbaa !137
  %add8.i = fadd float %mul4.i, %76
  %arrayidx11.i94 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 2
  %77 = load float, ptr %arrayidx11.i94, align 4, !tbaa !137
  %add14.i = fadd float %mul8.i, %77
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2
  %78 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 1
  %79 = load float, ptr %arrayidx5.i18.i, align 8, !tbaa !137
  %mul8.i20.i = fmul float %add8.i, %79
  %80 = tail call float @llvm.fmuladd.f32(float %78, float %add.i, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 2
  %81 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %82 = tail call float @llvm.fmuladd.f32(float %81, float %add14.i, float %80)
  %83 = load <4 x float>, ptr %m_massmatrix, align 4
  %84 = shufflevector <4 x float> %83, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %85 = load <4 x float>, ptr %arrayidx5.i.i, align 8
  %86 = shufflevector <4 x float> %85, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %87 = load <4 x float>, ptr %arrayidx10.i.i, align 4
  %88 = shufflevector <4 x float> %87, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %89 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %90 = load float, ptr %arrayidx5.i12.i, align 8, !tbaa !137
  %91 = insertelement <2 x float> poison, float %add8.i, i64 0
  %92 = shufflevector <2 x float> %91, <2 x float> poison, <2 x i32> zeroinitializer
  %93 = insertelement <2 x float> %86, float %90, i64 1
  %94 = fmul <2 x float> %92, %93
  %95 = insertelement <2 x float> %84, float %89, i64 1
  %96 = insertelement <2 x float> poison, float %add.i, i64 0
  %97 = shufflevector <2 x float> %96, <2 x float> poison, <2 x i32> zeroinitializer
  %98 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %95, <2 x float> %97, <2 x float> %94)
  %99 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %100 = insertelement <2 x float> %88, float %99, i64 1
  %101 = insertelement <2 x float> poison, float %add14.i, i64 0
  %102 = shufflevector <2 x float> %101, <2 x float> poison, <2 x i32> zeroinitializer
  %103 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %100, <2 x float> %102, <2 x float> %98)
  %104 = insertelement <2 x float> poison, float %sor, i64 0
  %105 = shufflevector <2 x float> %104, <2 x float> poison, <2 x i32> zeroinitializer
  %106 = fmul <2 x float> %103, %105
  %mul8.i110 = fmul float %82, %sor
  %retval.sroa.3.12.vec.insert.i113 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i110, i64 0
  store <2 x float> %106, ptr %impulse, align 8, !tbaa.struct !163
  %ref.tmp.sroa.4.0.m_velocity.sroa_idx = getelementptr inbounds i8, ptr %impulse, i64 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i113, ptr %ref.tmp.sroa.4.0.m_velocity.sroa_idx, align 8, !tbaa.struct !165
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %ref.tmp24) #38
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %ref.tmp24, ptr noundef nonnull align 8 dereferenceable(36) %impulse, i64 36, i1 false), !tbaa.struct !531
  %107 = load <2 x float>, ptr %ref.tmp24, align 8, !tbaa !137, !alias.scope !532
  %108 = fneg <2 x float> %107
  %arrayidx7.i.i116 = getelementptr inbounds [4 x float], ptr %ref.tmp24, i64 0, i64 2
  %109 = load float, ptr %arrayidx7.i.i116, align 8, !tbaa !137, !alias.scope !532
  %fneg8.i.i = fneg float %109
  %retval.sroa.3.12.vec.insert.i.i119 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i.i, i64 0
  store <2 x float> %108, ptr %ref.tmp24, align 8, !tbaa.struct !163, !alias.scope !532
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i119, ptr %arrayidx7.i.i116, align 8, !tbaa.struct !165, !alias.scope !532
  %m_drift.i = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp24, i64 0, i32 1
  %110 = load <2 x float>, ptr %m_drift.i, align 8, !tbaa !137, !alias.scope !532
  %111 = fneg <2 x float> %110
  %arrayidx7.i10.i = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp24, i64 0, i32 1, i32 0, i64 2
  %112 = load float, ptr %arrayidx7.i10.i, align 8, !tbaa !137, !alias.scope !532
  %fneg8.i11.i = fneg float %112
  %retval.sroa.3.12.vec.insert.i14.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i11.i, i64 0
  store <2 x float> %111, ptr %m_drift.i, align 8, !tbaa.struct !163, !alias.scope !532
  store <2 x float> %retval.sroa.3.12.vec.insert.i14.i, ptr %arrayidx7.i10.i, align 8, !tbaa.struct !165, !alias.scope !532
  %m_asVelocity.i120 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp24, i64 0, i32 2
  %bf.load.i121 = load i8, ptr %m_asVelocity.i120, align 8
  %113 = and i8 %bf.load.i121, 1
  %tobool.not.i = icmp eq i8 %113, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit85
  call void @_ZNK10btSoftBody4Body13applyVImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp24, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos)
  %bf.load2.pre.i = load i8, ptr %m_asVelocity.i120, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit85
  %bf.load2.i = phi i8 [ %bf.load2.pre.i, %if.then.i ], [ %bf.load.i121, %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit85 ]
  %bf.shl3.mask.i = and i8 %bf.load2.i, 2
  %tobool6.not.i = icmp eq i8 %bf.shl3.mask.i, 0
  br i1 %tobool6.not.i, label %if.end.i131, label %if.then7.i

if.then7.i:                                       ; preds = %if.end.i
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %m_drift.i, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos)
  br label %if.end.i131

if.end.i131:                                      ; preds = %if.end.i, %if.then7.i
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %ref.tmp24) #38
  call void @_ZNK10btSoftBody4Body13applyVImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx4, ptr noundef nonnull align 4 dereferenceable(16) %impulse, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx6)
  %bf.load2.pre.i126 = load i8, ptr %m_asVelocity.i, align 8
  %bf.shl3.mask.i129 = and i8 %bf.load2.pre.i126, 2
  %tobool6.not.i130 = icmp eq i8 %bf.shl3.mask.i129, 0
  br i1 %tobool6.not.i130, label %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit134, label %if.then7.i133

if.then7.i133:                                    ; preds = %if.end.i131
  %m_drift.i132 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 1
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx4, ptr noundef nonnull align 4 dereferenceable(16) %m_drift.i132, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx6)
  br label %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit134

_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit134: ; preds = %if.end.i131, %if.then7.i133
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %impulse) #38
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6LJoint9TerminateEf(ptr noundef nonnull align 8 dereferenceable(216) %this, float %dt) unnamed_addr #0 align 2 {
entry:
  %ref.tmp = alloca %class.btVector3, align 8
  %m_split = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 5
  %0 = load float, ptr %m_split, align 8, !tbaa !269
  %cmp = fcmp ogt float %0, 0.000000e+00
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %m_bodies = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #38
  %m_sdrift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7
  %1 = load <2 x float>, ptr %m_sdrift, align 4, !tbaa !137
  %2 = fneg <2 x float> %1
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7, i32 0, i64 2
  %3 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %fneg8.i = fneg float %3
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i, i64 0
  store <2 x float> %2, ptr %ref.tmp, align 8
  %4 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp, i64 0, i32 1
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %4, align 8
  %m_rpos = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  %arrayidx4 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1
  %arrayidx7 = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 1
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx4, ptr noundef nonnull align 4 dereferenceable(16) %m_sdrift, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx7)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef nonnull align 4 dereferenceable(16) %impulse, ptr noundef nonnull align 4 dereferenceable(16) %rpos) local_unnamed_addr #0 comdat align 2 {
entry:
  %m_rigid = getelementptr inbounds %"struct.btSoftBody::Body", ptr %this, i64 0, i32 1
  %0 = load ptr, ptr %m_rigid, align 8, !tbaa !511
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_ZN11btRigidBody12applyImpulseERK9btVector3S2_(ptr noundef nonnull align 8 dereferenceable(564) %0, ptr noundef nonnull align 4 dereferenceable(16) %impulse, ptr noundef nonnull align 4 dereferenceable(16) %rpos)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load ptr, ptr %this, align 8, !tbaa !272
  %tobool3.not = icmp eq ptr %1, null
  br i1 %tobool3.not, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  %m_imass.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 5
  %2 = load float, ptr %m_imass.i, align 4, !tbaa !137
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %3 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %mul8.i.i.i = fmul float %2, %3
  %m_invwi.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7
  %arrayidx.i.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 1
  %4 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 2
  %5 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %6 = fneg float %5
  %7 = load float, ptr %rpos, align 4, !tbaa !137
  %8 = fneg float %7
  %neg19.i.i.i = fmul float %3, %8
  %9 = fneg float %4
  %arrayidx5.i.i21.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i24.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 2
  %10 = load float, ptr %arrayidx.i17.i.i, align 4, !tbaa !137
  %arrayidx5.i18.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %11 = load float, ptr %arrayidx5.i18.i.i, align 4, !tbaa !137
  %arrayidx10.i21.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %12 = load float, ptr %arrayidx10.i21.i.i, align 4, !tbaa !137
  %m_dimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 10
  %13 = load <2 x float>, ptr %impulse, align 4, !tbaa !137
  %14 = insertelement <2 x float> poison, float %2, i64 0
  %15 = shufflevector <2 x float> %14, <2 x float> poison, <2 x i32> zeroinitializer
  %16 = fmul <2 x float> %15, %13
  %17 = extractelement <2 x float> %13, i64 1
  %neg.i.i.i = fmul float %17, %6
  %18 = tail call float @llvm.fmuladd.f32(float %4, float %3, float %neg.i.i.i)
  %19 = extractelement <2 x float> %13, i64 0
  %20 = tail call float @llvm.fmuladd.f32(float %5, float %19, float %neg19.i.i.i)
  %neg30.i.i.i = fmul float %19, %9
  %21 = tail call float @llvm.fmuladd.f32(float %7, float %17, float %neg30.i.i.i)
  %mul8.i20.i.i = fmul float %20, %11
  %22 = tail call float @llvm.fmuladd.f32(float %10, float %18, float %mul8.i20.i.i)
  %23 = tail call float @llvm.fmuladd.f32(float %12, float %21, float %22)
  %24 = load <2 x float>, ptr %m_dimpulses.i, align 4, !tbaa !137
  %25 = fadd <2 x float> %16, %24
  store <2 x float> %25, ptr %m_dimpulses.i, align 4, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 10, i64 0, i32 0, i64 2
  %26 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %add13.i.i = fadd float %mul8.i.i.i, %26
  store float %add13.i.i, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 10, i64 1
  %27 = load float, ptr %m_invwi.i, align 4, !tbaa !137
  %28 = load float, ptr %arrayidx5.i.i21.i, align 4, !tbaa !137
  %29 = load float, ptr %arrayidx10.i.i.i, align 4, !tbaa !137
  %30 = load float, ptr %arrayidx.i.i24.i, align 4, !tbaa !137
  %31 = load float, ptr %arrayidx5.i12.i.i, align 4, !tbaa !137
  %32 = load float, ptr %arrayidx10.i15.i.i, align 4, !tbaa !137
  %33 = insertelement <2 x float> poison, float %28, i64 0
  %34 = insertelement <2 x float> %33, float %31, i64 1
  %35 = insertelement <2 x float> poison, float %20, i64 0
  %36 = shufflevector <2 x float> %35, <2 x float> poison, <2 x i32> zeroinitializer
  %37 = fmul <2 x float> %34, %36
  %38 = insertelement <2 x float> poison, float %27, i64 0
  %39 = insertelement <2 x float> %38, float %30, i64 1
  %40 = insertelement <2 x float> poison, float %18, i64 0
  %41 = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> zeroinitializer
  %42 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %39, <2 x float> %41, <2 x float> %37)
  %43 = insertelement <2 x float> poison, float %29, i64 0
  %44 = insertelement <2 x float> %43, float %32, i64 1
  %45 = insertelement <2 x float> poison, float %21, i64 0
  %46 = shufflevector <2 x float> %45, <2 x float> poison, <2 x i32> zeroinitializer
  %47 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %44, <2 x float> %46, <2 x float> %42)
  %48 = load <2 x float>, ptr %arrayidx7.i, align 4, !tbaa !137
  %49 = fadd <2 x float> %47, %48
  store <2 x float> %49, ptr %arrayidx7.i, align 4, !tbaa !137
  %arrayidx12.i30.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 10, i64 1, i32 0, i64 2
  %50 = load float, ptr %arrayidx12.i30.i, align 4, !tbaa !137
  %add13.i31.i = fadd float %23, %50
  store float %add13.i31.i, ptr %arrayidx12.i30.i, align 4, !tbaa !137
  %m_ndimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 12
  %51 = load i32, ptr %m_ndimpulses.i, align 4, !tbaa !322
  %inc.i = add nsw i32 %51, 1
  store i32 %inc.i, ptr %m_ndimpulses.i, align 4, !tbaa !322
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6AJoint7PrepareEfi(ptr noundef nonnull align 8 dereferenceable(224) %this, float noundef %dt, i32 noundef %iterations) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %m_icontrol = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 2
  %0 = load ptr, ptr %m_icontrol, align 8, !tbaa !285
  %vtable = load ptr, ptr %0, align 8, !tbaa !5
  %1 = load ptr, ptr %vtable, align 8
  tail call void %1(ptr noundef nonnull align 8 dereferenceable(8) %0, ptr noundef nonnull %this)
  %m_rigid.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 0, i32 1
  %2 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool.not.i.i = icmp eq ptr %2, null
  br i1 %tobool.not.i.i, label %_ZNK10btSoftBody4Body8activateEv.exit.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %2, i1 noundef zeroext false)
  br label %_ZNK10btSoftBody4Body8activateEv.exit.i

_ZNK10btSoftBody4Body8activateEv.exit.i:          ; preds = %if.then.i.i, %entry
  %m_rigid.i4.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1, i32 1
  %3 = load ptr, ptr %m_rigid.i4.i, align 8, !tbaa !511
  %tobool.not.i5.i = icmp eq ptr %3, null
  br i1 %tobool.not.i5.i, label %_ZN10btSoftBody5Joint7PrepareEfi.exit, label %if.then.i6.i

if.then.i6.i:                                     ; preds = %_ZNK10btSoftBody4Body8activateEv.exit.i
  tail call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %3, i1 noundef zeroext false)
  br label %_ZN10btSoftBody5Joint7PrepareEfi.exit

_ZN10btSoftBody5Joint7PrepareEfi.exit:            ; preds = %_ZNK10btSoftBody4Body8activateEv.exit.i, %if.then.i6.i
  %m_bodies = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1
  %4 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %4, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZNK10btSoftBody4Body5xformEv.exit, !prof !173

init.check.i:                                     ; preds = %_ZN10btSoftBody5Joint7PrepareEfi.exit
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i, label %_ZNK10btSoftBody4Body5xformEv.exit, label %init.i

init.i:                                           ; preds = %init.check.i
  %6 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i178 = icmp eq i8 %6, 0
  br i1 %guard.uninitialized.i178, label %init.check.i180, label %invoke.cont2.i, !prof !173

init.check.i180:                                  ; preds = %init.i
  %7 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i179 = icmp eq i32 %7, 0
  br i1 %tobool.not.i179, label %invoke.cont2.i, label %init.i182

init.i182:                                        ; preds = %init.check.i180
  %8 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i196 = icmp eq i8 %8, 0
  br i1 %guard.uninitialized.i196, label %init.check.i198, label %invoke.cont6.i, !prof !173

init.check.i198:                                  ; preds = %init.i182
  %9 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i197 = icmp eq i32 %9, 0
  br i1 %tobool.not.i197, label %invoke.cont6.i, label %invoke.cont.i199

invoke.cont.i199:                                 ; preds = %init.check.i198
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %10 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont6.i

invoke.cont6.i:                                   ; preds = %invoke.cont.i199, %init.check.i198, %init.i182
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %11 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont2.i

invoke.cont2.i:                                   ; preds = %invoke.cont6.i, %init.check.i180, %init.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %12 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit

_ZNK10btSoftBody4Body5xformEv.exit:               ; preds = %_ZN10btSoftBody5Joint7PrepareEfi.exit, %init.check.i, %invoke.cont2.i
  %m_collisionObject.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 0, i32 2
  %13 = load ptr, ptr %m_collisionObject.i, align 8, !tbaa !253
  %tobool3.not.i = icmp eq ptr %13, null
  %m_interpolationWorldTransform.i.i = getelementptr inbounds %class.btCollisionObject, ptr %13, i64 0, i32 2
  %14 = load ptr, ptr %m_bodies, align 8
  %tobool6.not.i = icmp eq ptr %14, null
  %m_framexform.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %14, i64 0, i32 3
  %spec.select.i = select i1 %tobool6.not.i, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i
  %retval.0.i = select i1 %tobool3.not.i, ptr %spec.select.i, ptr %m_interpolationWorldTransform.i.i
  %m_refs = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2
  %15 = load float, ptr %m_refs, align 8, !tbaa !137
  %arrayidx5.i.i = getelementptr inbounds [4 x float], ptr %retval.0.i, i64 0, i64 1
  %arrayidx7.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 0, i32 0, i64 1
  %16 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %arrayidx10.i.i = getelementptr inbounds [4 x float], ptr %retval.0.i, i64 0, i64 2
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 0, i32 0, i64 2
  %17 = load float, ptr %arrayidx12.i.i, align 8, !tbaa !137
  %arrayidx.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1, i32 0, i64 2
  %18 = load float, ptr %retval.0.i, align 4, !tbaa !137
  %19 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %20 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %21 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %22 = load float, ptr %arrayidx5.i12.i, align 4, !tbaa !137
  %23 = insertelement <2 x float> poison, float %16, i64 0
  %24 = shufflevector <2 x float> %23, <2 x float> poison, <2 x i32> zeroinitializer
  %25 = insertelement <2 x float> poison, float %19, i64 0
  %26 = insertelement <2 x float> %25, float %22, i64 1
  %27 = fmul <2 x float> %24, %26
  %28 = insertelement <2 x float> poison, float %18, i64 0
  %29 = insertelement <2 x float> %28, float %21, i64 1
  %30 = insertelement <2 x float> poison, float %15, i64 0
  %31 = shufflevector <2 x float> %30, <2 x float> poison, <2 x i32> zeroinitializer
  %32 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %29, <2 x float> %31, <2 x float> %27)
  %33 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %34 = insertelement <2 x float> poison, float %20, i64 0
  %35 = insertelement <2 x float> %34, float %33, i64 1
  %36 = insertelement <2 x float> poison, float %17, i64 0
  %37 = shufflevector <2 x float> %36, <2 x float> poison, <2 x i32> zeroinitializer
  %38 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %35, <2 x float> %37, <2 x float> %32)
  %arrayidx.i17.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2
  %39 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2, i32 0, i64 1
  %40 = load float, ptr %arrayidx5.i18.i, align 4, !tbaa !137
  %mul8.i20.i = fmul float %16, %40
  %41 = tail call float @llvm.fmuladd.f32(float %39, float %15, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2, i32 0, i64 2
  %42 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %43 = tail call float @llvm.fmuladd.f32(float %42, float %17, float %41)
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %43, i64 0
  %m_axis = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 1
  store <2 x float> %38, ptr %m_axis, align 8, !tbaa.struct !163
  %ref.tmp.sroa.4.0.arrayidx5.sroa_idx = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 1, i64 0, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %ref.tmp.sroa.4.0.arrayidx5.sroa_idx, align 8, !tbaa.struct !165
  %arrayidx8 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1
  %44 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i70 = icmp eq i8 %44, 0
  br i1 %guard.uninitialized.i70, label %init.check.i72, label %_ZNK10btSoftBody4Body5xformEv.exit87, !prof !173

init.check.i72:                                   ; preds = %_ZNK10btSoftBody4Body5xformEv.exit
  %45 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i71 = icmp eq i32 %45, 0
  br i1 %tobool.not.i71, label %_ZNK10btSoftBody4Body5xformEv.exit87, label %init.i74

init.i74:                                         ; preds = %init.check.i72
  %46 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i186 = icmp eq i8 %46, 0
  br i1 %guard.uninitialized.i186, label %init.check.i188, label %invoke.cont2.i78, !prof !173

init.check.i188:                                  ; preds = %init.i74
  %47 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i187 = icmp eq i32 %47, 0
  br i1 %tobool.not.i187, label %invoke.cont2.i78, label %init.i189

init.i189:                                        ; preds = %init.check.i188
  %48 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i200 = icmp eq i8 %48, 0
  br i1 %guard.uninitialized.i200, label %init.check.i202, label %invoke.cont6.i192, !prof !173

init.check.i202:                                  ; preds = %init.i189
  %49 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i201 = icmp eq i32 %49, 0
  br i1 %tobool.not.i201, label %invoke.cont6.i192, label %invoke.cont.i203

invoke.cont.i203:                                 ; preds = %init.check.i202
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %50 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont6.i192

invoke.cont6.i192:                                ; preds = %invoke.cont.i203, %init.check.i202, %init.i189
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %51 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont2.i78

invoke.cont2.i78:                                 ; preds = %invoke.cont6.i192, %init.check.i188, %init.i74
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %52 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit87

_ZNK10btSoftBody4Body5xformEv.exit87:             ; preds = %_ZNK10btSoftBody4Body5xformEv.exit, %init.check.i72, %invoke.cont2.i78
  %m_collisionObject.i79 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1, i32 2
  %53 = load ptr, ptr %m_collisionObject.i79, align 8, !tbaa !253
  %tobool3.not.i80 = icmp eq ptr %53, null
  %m_interpolationWorldTransform.i.i81 = getelementptr inbounds %class.btCollisionObject, ptr %53, i64 0, i32 2
  %54 = load ptr, ptr %arrayidx8, align 8
  %tobool6.not.i82 = icmp eq ptr %54, null
  %m_framexform.i83 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %54, i64 0, i32 3
  %spec.select.i84 = select i1 %tobool6.not.i82, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i83
  %retval.0.i85 = select i1 %tobool3.not.i80, ptr %spec.select.i84, ptr %m_interpolationWorldTransform.i.i81
  %arrayidx12 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 1
  %55 = load float, ptr %retval.0.i85, align 4, !tbaa !137
  %56 = load float, ptr %arrayidx12, align 8, !tbaa !137
  %arrayidx5.i.i88 = getelementptr inbounds [4 x float], ptr %retval.0.i85, i64 0, i64 1
  %57 = load float, ptr %arrayidx5.i.i88, align 4, !tbaa !137
  %arrayidx7.i.i89 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 1, i32 0, i64 1
  %58 = load float, ptr %arrayidx7.i.i89, align 4, !tbaa !137
  %mul8.i.i90 = fmul float %57, %58
  %59 = tail call float @llvm.fmuladd.f32(float %55, float %56, float %mul8.i.i90)
  %arrayidx10.i.i91 = getelementptr inbounds [4 x float], ptr %retval.0.i85, i64 0, i64 2
  %60 = load float, ptr %arrayidx10.i.i91, align 4, !tbaa !137
  %arrayidx12.i.i92 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 1, i32 0, i64 2
  %61 = load float, ptr %arrayidx12.i.i92, align 8, !tbaa !137
  %62 = tail call float @llvm.fmuladd.f32(float %60, float %61, float %59)
  %arrayidx.i.i93 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i85, i64 0, i64 1
  %arrayidx5.i12.i94 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i85, i64 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i96 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i85, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i97 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i85, i64 0, i64 2
  %arrayidx5.i18.i98 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i85, i64 0, i64 2, i32 0, i64 1
  %arrayidx10.i21.i100 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i85, i64 0, i64 2, i32 0, i64 2
  %retval.sroa.0.0.vec.insert.i101 = insertelement <2 x float> undef, float %62, i64 0
  %arrayidx16 = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 1, i64 1
  %ref.tmp6.sroa.4.0.arrayidx16.sroa_idx = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 1, i64 1, i32 0, i64 2
  %arrayidx7.i.i108 = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 1, i64 0, i32 0, i64 1
  %63 = load float, ptr %arrayidx.i.i93, align 4, !tbaa !137
  %64 = load float, ptr %arrayidx5.i12.i94, align 4, !tbaa !137
  %65 = load float, ptr %arrayidx10.i15.i96, align 4, !tbaa !137
  %66 = load float, ptr %arrayidx.i17.i97, align 4, !tbaa !137
  %67 = load float, ptr %arrayidx5.i18.i98, align 4, !tbaa !137
  %68 = insertelement <2 x float> poison, float %58, i64 0
  %69 = shufflevector <2 x float> %68, <2 x float> poison, <2 x i32> zeroinitializer
  %70 = insertelement <2 x float> poison, float %64, i64 0
  %71 = insertelement <2 x float> %70, float %67, i64 1
  %72 = fmul <2 x float> %69, %71
  %73 = insertelement <2 x float> poison, float %63, i64 0
  %74 = insertelement <2 x float> %73, float %66, i64 1
  %75 = insertelement <2 x float> poison, float %56, i64 0
  %76 = shufflevector <2 x float> %75, <2 x float> poison, <2 x i32> zeroinitializer
  %77 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %74, <2 x float> %76, <2 x float> %72)
  %78 = load float, ptr %arrayidx10.i21.i100, align 4, !tbaa !137
  %79 = insertelement <2 x float> poison, float %65, i64 0
  %80 = insertelement <2 x float> %79, float %78, i64 1
  %81 = insertelement <2 x float> poison, float %61, i64 0
  %82 = shufflevector <2 x float> %81, <2 x float> poison, <2 x i32> zeroinitializer
  %83 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %80, <2 x float> %82, <2 x float> %77)
  %84 = shufflevector <2 x float> %retval.sroa.0.0.vec.insert.i101, <2 x float> %83, <2 x i32> <i32 0, i32 2>
  %85 = shufflevector <2 x float> <float poison, float 0.000000e+00>, <2 x float> %83, <2 x i32> <i32 3, i32 1>
  store <2 x float> %84, ptr %arrayidx16, align 8, !tbaa.struct !163
  store <2 x float> %85, ptr %ref.tmp6.sroa.4.0.arrayidx16.sroa_idx, align 8, !tbaa.struct !165
  %86 = load <2 x float>, ptr %arrayidx7.i.i108, align 4, !tbaa !137
  %87 = load float, ptr %m_axis, align 8, !tbaa !137
  %88 = shufflevector <2 x float> %83, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %89 = insertelement <2 x float> %88, float %62, i64 1
  %90 = fneg <2 x float> %89
  %91 = fmul <2 x float> %86, %90
  %92 = shufflevector <2 x float> %86, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %93 = insertelement <2 x float> %92, float %87, i64 1
  %94 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %83, <2 x float> %93, <2 x float> %91)
  %95 = extractelement <2 x float> %83, i64 0
  %96 = fneg float %95
  %neg30.i.i = fmul float %87, %96
  %97 = extractelement <2 x float> %86, i64 0
  %98 = tail call float @llvm.fmuladd.f32(float %62, float %97, float %neg30.i.i)
  %99 = fmul <2 x float> %94, %94
  %mul8.i.i.i.i = extractelement <2 x float> %99, i64 1
  %100 = extractelement <2 x float> %94, i64 0
  %101 = tail call float @llvm.fmuladd.f32(float %100, float %100, float %mul8.i.i.i.i)
  %102 = tail call float @llvm.fmuladd.f32(float %98, float %98, float %101)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %102)
  %cmp.i = fcmp ogt float %sqrt.i.i, 0x3E80000000000000
  br i1 %cmp.i, label %if.then.i, label %_ZL12NormalizeAnyRK9btVector3.exit

if.then.i:                                        ; preds = %_ZNK10btSoftBody4Body5xformEv.exit87
  %div.i.i = fdiv float 1.000000e+00, %sqrt.i.i
  %103 = insertelement <2 x float> poison, float %div.i.i, i64 0
  %104 = shufflevector <2 x float> %103, <2 x float> poison, <2 x i32> zeroinitializer
  %105 = fmul <2 x float> %94, %104
  %mul8.i.i.i = fmul float %98, %div.i.i
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i.i, i64 0
  br label %_ZL12NormalizeAnyRK9btVector3.exit

_ZL12NormalizeAnyRK9btVector3.exit:               ; preds = %_ZNK10btSoftBody4Body5xformEv.exit87, %if.then.i
  %retval.sroa.0.0.i = phi <2 x float> [ %105, %if.then.i ], [ zeroinitializer, %_ZNK10btSoftBody4Body5xformEv.exit87 ]
  %retval.sroa.4.0.i = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i.i.i, %if.then.i ], [ zeroinitializer, %_ZNK10btSoftBody4Body5xformEv.exit87 ]
  %m_drift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6
  store <2 x float> %retval.sroa.0.0.i, ptr %m_drift, align 4, !tbaa.struct !163
  %ref.tmp17.sroa.4.0.m_drift.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 2
  store <2 x float> %retval.sroa.4.0.i, ptr %ref.tmp17.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa.struct !165
  %106 = fmul <2 x float> %83, %86
  %mul8.i.i113 = extractelement <2 x float> %106, i64 0
  %107 = tail call float @llvm.fmuladd.f32(float %87, float %62, float %mul8.i.i113)
  %108 = extractelement <2 x float> %83, i64 1
  %109 = extractelement <2 x float> %86, i64 1
  %110 = tail call float @llvm.fmuladd.f32(float %109, float %108, float %107)
  %cmp.i116 = fcmp olt float %110, -1.000000e+00
  %cmp1.i = fcmp ogt float %110, 1.000000e+00
  %..i = select i1 %cmp1.i, float 1.000000e+00, float %110
  %cond5.i = select i1 %cmp.i116, float -1.000000e+00, float %..i
  %call.i117 = tail call float @acosf(float noundef %cond5.i) #38
  %cmp.i118 = fcmp ogt float %call.i117, 0x3FC921FB60000000
  %.sroa.speculated214 = select i1 %cmp.i118, float 0x3FC921FB60000000, float %call.i117
  %arrayidx3.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 1
  %111 = load float, ptr %ref.tmp17.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa !137
  %mul7.i = fmul float %.sroa.speculated214, %111
  %m_erp = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 4
  %112 = load float, ptr %m_erp, align 4, !tbaa !535
  %div = fdiv float %112, %dt
  %113 = load <2 x float>, ptr %m_drift, align 4, !tbaa !137
  %114 = insertelement <2 x float> poison, float %.sroa.speculated214, i64 0
  %115 = shufflevector <2 x float> %114, <2 x float> poison, <2 x i32> zeroinitializer
  %116 = fmul <2 x float> %113, %115
  %117 = insertelement <2 x float> poison, float %div, i64 0
  %118 = shufflevector <2 x float> %117, <2 x float> poison, <2 x i32> zeroinitializer
  %119 = fmul <2 x float> %116, %118
  store <2 x float> %119, ptr %m_drift, align 4, !tbaa !137
  %mul7.i123 = fmul float %mul7.i, %div
  store float %mul7.i123, ptr %ref.tmp17.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa !137
  %120 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi acquire, align 8
  %guard.uninitialized.i124 = icmp eq i8 %120, 0
  br i1 %guard.uninitialized.i124, label %init.check.i126, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit, !prof !173

init.check.i126:                                  ; preds = %_ZL12NormalizeAnyRK9btVector3.exit
  %121 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  %tobool.not.i125 = icmp eq i32 %121, 0
  br i1 %tobool.not.i125, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit, label %invoke.cont.i

invoke.cont.i:                                    ; preds = %init.check.i126
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, i8 0, i64 48, i1 false)
  %122 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  br label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit

_ZNK10btSoftBody4Body15invWorldInertiaEv.exit:    ; preds = %_ZL12NormalizeAnyRK9btVector3.exit, %init.check.i126, %invoke.cont.i
  %123 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool10.not.i = icmp eq ptr %123, null
  %m_invInertiaTensorWorld.i.i = getelementptr inbounds %class.btRigidBody, ptr %123, i64 0, i32 1
  %124 = load ptr, ptr %m_bodies, align 8
  %tobool12.not.i = icmp eq ptr %124, null
  %m_invwi.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %124, i64 0, i32 7
  %spec.select.i127 = select i1 %tobool12.not.i, ptr @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, ptr %m_invwi.i
  %retval.0.i128 = select i1 %tobool10.not.i, ptr %spec.select.i127, ptr %m_invInertiaTensorWorld.i.i
  %125 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi acquire, align 8
  %guard.uninitialized.i129 = icmp eq i8 %125, 0
  br i1 %guard.uninitialized.i129, label %init.check.i131, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit140, !prof !173

init.check.i131:                                  ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit
  %126 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  %tobool.not.i130 = icmp eq i32 %126, 0
  br i1 %tobool.not.i130, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit140, label %invoke.cont.i132

invoke.cont.i132:                                 ; preds = %init.check.i131
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, i8 0, i64 48, i1 false)
  %127 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  br label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit140

_ZNK10btSoftBody4Body15invWorldInertiaEv.exit140: ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit, %init.check.i131, %invoke.cont.i132
  %128 = load ptr, ptr %m_rigid.i4.i, align 8, !tbaa !511
  %tobool10.not.i134 = icmp eq ptr %128, null
  %m_invInertiaTensorWorld.i.i135 = getelementptr inbounds %class.btRigidBody, ptr %128, i64 0, i32 1
  %129 = load ptr, ptr %arrayidx8, align 8
  %tobool12.not.i136 = icmp eq ptr %129, null
  %m_invwi.i137 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %129, i64 0, i32 7
  %spec.select.i138 = select i1 %tobool12.not.i136, ptr @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, ptr %m_invwi.i137
  %retval.0.i139 = select i1 %tobool10.not.i134, ptr %spec.select.i138, ptr %m_invInertiaTensorWorld.i.i135
  %130 = load float, ptr %retval.0.i128, align 4, !tbaa !137, !noalias !536
  %131 = load float, ptr %retval.0.i139, align 4, !tbaa !137, !noalias !536
  %add.i.i.i = fadd float %130, %131
  %arrayidx5.i.i.i = getelementptr inbounds [4 x float], ptr %retval.0.i128, i64 0, i64 1
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %retval.0.i139, i64 0, i64 1
  %arrayidx.i.1.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i128, i64 0, i64 1
  %arrayidx.i9.1.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i139, i64 0, i64 1
  %arrayidx5.i.1.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i128, i64 0, i64 1, i32 0, i64 1
  %132 = load float, ptr %arrayidx5.i.1.i.i, align 4, !tbaa !137, !noalias !536
  %arrayidx7.i.1.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i139, i64 0, i64 1, i32 0, i64 1
  %133 = load float, ptr %arrayidx7.i.1.i.i, align 4, !tbaa !137, !noalias !536
  %add8.i.1.i.i = fadd float %132, %133
  %arrayidx11.i.1.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i128, i64 0, i64 1, i32 0, i64 2
  %arrayidx13.i.1.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i139, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i.2.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i128, i64 0, i64 2
  %arrayidx.i9.2.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i139, i64 0, i64 2
  %arrayidx5.i.2.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i128, i64 0, i64 2, i32 0, i64 1
  %134 = load float, ptr %arrayidx5.i.2.i.i, align 4, !tbaa !137, !noalias !536
  %arrayidx7.i.2.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i139, i64 0, i64 2, i32 0, i64 1
  %135 = load float, ptr %arrayidx7.i.2.i.i, align 4, !tbaa !137, !noalias !536
  %add8.i.2.i.i = fadd float %134, %135
  %arrayidx11.i.2.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i128, i64 0, i64 2, i32 0, i64 2
  %arrayidx13.i.2.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i139, i64 0, i64 2, i32 0, i64 2
  %136 = fneg float %add8.i.1.i.i
  %137 = load <2 x float>, ptr %arrayidx5.i.i.i, align 4, !tbaa !137, !noalias !536
  %138 = load <2 x float>, ptr %arrayidx7.i.i.i, align 4, !tbaa !137, !noalias !536
  %139 = fadd <2 x float> %137, %138
  %140 = load float, ptr %arrayidx.i.1.i.i, align 4, !tbaa !137, !noalias !536
  %141 = load float, ptr %arrayidx.i9.1.i.i, align 4, !tbaa !137, !noalias !536
  %142 = load float, ptr %arrayidx11.i.1.i.i, align 4, !tbaa !137, !noalias !536
  %143 = load float, ptr %arrayidx13.i.1.i.i, align 4, !tbaa !137, !noalias !536
  %144 = insertelement <2 x float> poison, float %142, i64 0
  %145 = insertelement <2 x float> %144, float %140, i64 1
  %146 = insertelement <2 x float> poison, float %143, i64 0
  %147 = insertelement <2 x float> %146, float %141, i64 1
  %148 = fadd <2 x float> %145, %147
  %149 = load float, ptr %arrayidx.i.2.i.i, align 4, !tbaa !137, !noalias !536
  %150 = load float, ptr %arrayidx.i9.2.i.i, align 4, !tbaa !137, !noalias !536
  %151 = load float, ptr %arrayidx11.i.2.i.i, align 4, !tbaa !137, !noalias !536
  %152 = load float, ptr %arrayidx13.i.2.i.i, align 4, !tbaa !137, !noalias !536
  %153 = insertelement <2 x float> poison, float %151, i64 0
  %154 = insertelement <2 x float> %153, float %149, i64 1
  %155 = insertelement <2 x float> poison, float %152, i64 0
  %156 = insertelement <2 x float> %155, float %150, i64 1
  %157 = fadd <2 x float> %154, %156
  %158 = fneg <2 x float> %148
  %159 = shufflevector <2 x float> %157, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %160 = insertelement <2 x float> %159, float %add8.i.2.i.i, i64 0
  %161 = fmul <2 x float> %160, %158
  %162 = shufflevector <2 x float> %148, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %163 = insertelement <2 x float> %162, float %add8.i.1.i.i, i64 0
  %164 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %163, <2 x float> %157, <2 x float> %161)
  %165 = extractelement <2 x float> %148, i64 1
  %166 = extractelement <2 x float> %139, i64 0
  %shift = shufflevector <2 x float> %164, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %167 = fmul <2 x float> %139, %shift
  %mul8.i.i.i141 = extractelement <2 x float> %167, i64 0
  %168 = extractelement <2 x float> %164, i64 0
  %169 = tail call float @llvm.fmuladd.f32(float %add.i.i.i, float %168, float %mul8.i.i.i141)
  %170 = extractelement <2 x float> %139, i64 1
  %171 = fneg float %166
  %172 = shufflevector <2 x float> %139, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %173 = insertelement <2 x float> %172, float %add.i.i.i, i64 1
  %174 = fneg <2 x float> %173
  %175 = shufflevector <2 x float> %174, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %176 = insertelement <2 x float> %175, float %171, i64 0
  %177 = fmul <2 x float> %157, %176
  %178 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %173, <2 x float> %160, <2 x float> %177)
  %179 = fmul <2 x float> %163, %174
  %180 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %139, <2 x float> %148, <2 x float> %179)
  %neg.i84.i.i = fmul float %165, %171
  %181 = tail call float @llvm.fmuladd.f32(float %add.i.i.i, float %add8.i.1.i.i, float %neg.i84.i.i)
  %m_massmatrix = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8
  %ref.tmp44.sroa.4.0.m_massmatrix.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 1
  %ref.tmp44.sroa.5.0.m_massmatrix.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 2
  %ref.tmp44.sroa.6.0.m_massmatrix.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp44.sroa.6.0.m_massmatrix.sroa_idx, align 8, !tbaa.struct !318
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1
  %ref.tmp44.sroa.10.16.arrayidx7.i.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 2
  %ref.tmp44.sroa.11.16.arrayidx7.i.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp44.sroa.11.16.arrayidx7.i.sroa_idx, align 8, !tbaa.struct !318
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2
  %182 = shufflevector <2 x float> %157, <2 x float> %174, <2 x i32> <i32 1, i32 3>
  %183 = insertelement <2 x float> poison, float %136, i64 0
  %184 = insertelement <2 x float> %183, float %add8.i.2.i.i, i64 1
  %185 = fmul <2 x float> %182, %184
  %186 = shufflevector <2 x float> %148, <2 x float> %139, <2 x i32> <i32 1, i32 2>
  %187 = insertelement <2 x float> %157, float %add8.i.2.i.i, i64 0
  %188 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %186, <2 x float> %187, <2 x float> %185)
  %189 = extractelement <2 x float> %188, i64 0
  %190 = tail call float @llvm.fmuladd.f32(float %170, float %189, float %169)
  %div.i.i142 = fdiv float 1.000000e+00, %190
  %191 = insertelement <2 x float> poison, float %div.i.i142, i64 0
  %192 = shufflevector <2 x float> %191, <2 x float> poison, <2 x i32> zeroinitializer
  %193 = fmul <2 x float> %164, %192
  %194 = fmul <2 x float> %178, %192
  %195 = fmul <2 x float> %180, %192
  %196 = fmul <2 x float> %188, %192
  %mul33.i.i = fmul float %181, %div.i.i142
  %197 = extractelement <2 x float> %193, i64 0
  store float %197, ptr %m_massmatrix, align 4, !tbaa.struct !163
  %198 = extractelement <2 x float> %194, i64 0
  store float %198, ptr %ref.tmp44.sroa.4.0.m_massmatrix.sroa_idx, align 8, !tbaa.struct !293
  %199 = extractelement <2 x float> %195, i64 0
  store float %199, ptr %ref.tmp44.sroa.5.0.m_massmatrix.sroa_idx, align 4, !tbaa.struct !165
  %200 = shufflevector <2 x float> %193, <2 x float> %194, <2 x i32> <i32 1, i32 3>
  store <2 x float> %200, ptr %arrayidx7.i, align 4
  %201 = extractelement <2 x float> %195, i64 1
  store float %201, ptr %ref.tmp44.sroa.10.16.arrayidx7.i.sroa_idx, align 4, !tbaa.struct !165
  store <2 x float> %196, ptr %arrayidx11.i, align 4
  %ref.tmp44.sroa.15.32.arrayidx11.i.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 2
  store float %mul33.i.i, ptr %ref.tmp44.sroa.15.32.arrayidx11.i.sroa_idx, align 4, !tbaa.struct !165
  %ref.tmp44.sroa.16.32.arrayidx11.i.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp44.sroa.16.32.arrayidx11.i.sroa_idx, align 8, !tbaa.struct !318
  %m_split = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 5
  %202 = load float, ptr %m_split, align 8, !tbaa !137
  %cmp = fcmp ogt float %202, 0.000000e+00
  %203 = load float, ptr %m_drift, align 4, !tbaa !137
  br i1 %cmp, label %if.then, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit140.if.end_crit_edge

_ZNK10btSoftBody4Body15invWorldInertiaEv.exit140.if.end_crit_edge: ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit140
  %.pre215 = load float, ptr %arrayidx3.i, align 8, !tbaa !137
  %.pre216 = load float, ptr %ref.tmp17.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa !137
  %204 = insertelement <2 x float> poison, float %203, i64 0
  %205 = insertelement <2 x float> %204, float %.pre215, i64 1
  br label %if.end

if.then:                                          ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit140
  %mul.i144 = fmul float %202, %203
  %206 = load float, ptr %arrayidx3.i, align 8, !tbaa !137
  %mul4.i146 = fmul float %202, %206
  %207 = load float, ptr %ref.tmp17.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa !137
  %mul8.i = fmul float %202, %207
  %208 = insertelement <2 x float> poison, float %mul4.i146, i64 0
  %209 = shufflevector <2 x float> %208, <2 x float> poison, <2 x i32> zeroinitializer
  %210 = fmul <2 x float> %209, %194
  %211 = insertelement <2 x float> poison, float %mul.i144, i64 0
  %212 = shufflevector <2 x float> %211, <2 x float> poison, <2 x i32> zeroinitializer
  %213 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %193, <2 x float> %212, <2 x float> %210)
  %214 = insertelement <2 x float> poison, float %mul8.i, i64 0
  %215 = shufflevector <2 x float> %214, <2 x float> poison, <2 x i32> zeroinitializer
  %216 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %195, <2 x float> %215, <2 x float> %213)
  %217 = extractelement <2 x float> %196, i64 1
  %mul8.i20.i164 = fmul float %mul4.i146, %217
  %218 = extractelement <2 x float> %196, i64 0
  %219 = tail call float @llvm.fmuladd.f32(float %218, float %mul.i144, float %mul8.i20.i164)
  %220 = tail call float @llvm.fmuladd.f32(float %mul33.i.i, float %mul8.i, float %219)
  %retval.sroa.3.12.vec.insert.i168 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %220, i64 0
  %m_sdrift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7
  store <2 x float> %216, ptr %m_sdrift, align 4, !tbaa.struct !163
  %ref.tmp52.sroa.4.0.m_sdrift.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i168, ptr %ref.tmp52.sroa.4.0.m_sdrift.sroa_idx, align 4, !tbaa.struct !165
  %sub = fsub float 1.000000e+00, %202
  %221 = insertelement <2 x float> poison, float %sub, i64 0
  %222 = shufflevector <2 x float> %221, <2 x float> poison, <2 x i32> zeroinitializer
  %223 = insertelement <2 x float> poison, float %203, i64 0
  %224 = insertelement <2 x float> %223, float %206, i64 1
  %225 = fmul <2 x float> %222, %224
  %mul7.i175 = fmul float %sub, %207
  br label %if.end

if.end:                                           ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit140.if.end_crit_edge, %if.then
  %226 = phi float [ %.pre216, %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit140.if.end_crit_edge ], [ %mul7.i175, %if.then ]
  %227 = phi <2 x float> [ %205, %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit140.if.end_crit_edge ], [ %225, %if.then ]
  %conv = sitofp i32 %iterations to float
  %div.i = fdiv float 1.000000e+00, %conv
  %228 = insertelement <2 x float> poison, float %div.i, i64 0
  %229 = shufflevector <2 x float> %228, <2 x float> poison, <2 x i32> zeroinitializer
  %230 = fmul <2 x float> %229, %227
  store <2 x float> %230, ptr %m_drift, align 4, !tbaa !137
  %mul7.i.i = fmul float %div.i, %226
  store float %mul7.i.i, ptr %ref.tmp17.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa !137
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6AJoint5SolveEff(ptr noundef nonnull align 8 dereferenceable(224) %this, float %dt, float noundef %sor) unnamed_addr #0 align 2 {
entry:
  %impulse = alloca %"struct.btSoftBody::Impulse", align 8
  %ref.tmp32 = alloca %"struct.btSoftBody::Impulse", align 8
  %m_bodies = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1
  %m_rigid.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 0, i32 1
  %0 = load ptr, ptr %m_rigid.i, align 8, !tbaa !511
  %tobool.not.i = icmp eq ptr %0, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %m_angularVelocity.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3
  %retval.sroa.0.0.copyload.i = load <2 x float>, ptr %m_angularVelocity.i.i, align 4, !tbaa.struct !163
  %retval.sroa.5.0.m_angularVelocity.i.sroa_idx.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3, i32 0, i64 2
  %retval.sroa.5.0.copyload.i = load <2 x float>, ptr %retval.sroa.5.0.m_angularVelocity.i.sroa_idx.i, align 4, !tbaa.struct !165
  br label %_ZNK10btSoftBody4Body15angularVelocityEv.exit

if.end.i:                                         ; preds = %entry
  %1 = load ptr, ptr %m_bodies, align 8, !tbaa !272
  %tobool3.not.i = icmp eq ptr %1, null
  br i1 %tobool3.not.i, label %_ZNK10btSoftBody4Body15angularVelocityEv.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  %m_av.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 14
  %retval.sroa.0.0.copyload11.i = load <2 x float>, ptr %m_av.i, align 8, !tbaa.struct !163
  %retval.sroa.5.0.m_av.sroa_idx.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 14, i32 0, i64 2
  %retval.sroa.5.0.copyload12.i = load <2 x float>, ptr %retval.sroa.5.0.m_av.sroa_idx.i, align 8, !tbaa.struct !165
  br label %_ZNK10btSoftBody4Body15angularVelocityEv.exit

_ZNK10btSoftBody4Body15angularVelocityEv.exit:    ; preds = %if.then.i, %if.end.i, %if.then4.i
  %retval.sroa.0.0.i = phi <2 x float> [ %retval.sroa.0.0.copyload11.i, %if.then4.i ], [ %retval.sroa.0.0.copyload.i, %if.then.i ], [ zeroinitializer, %if.end.i ]
  %retval.sroa.5.0.i = phi <2 x float> [ %retval.sroa.5.0.copyload12.i, %if.then4.i ], [ %retval.sroa.5.0.copyload.i, %if.then.i ], [ zeroinitializer, %if.end.i ]
  %arrayidx3 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1
  %m_rigid.i35 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1, i32 1
  %2 = load ptr, ptr %m_rigid.i35, align 8, !tbaa !511
  %tobool.not.i36 = icmp eq ptr %2, null
  br i1 %tobool.not.i36, label %if.end.i43, label %if.then.i41

if.then.i41:                                      ; preds = %_ZNK10btSoftBody4Body15angularVelocityEv.exit
  %m_angularVelocity.i.i37 = getelementptr inbounds %class.btRigidBody, ptr %2, i64 0, i32 3
  %retval.sroa.0.0.copyload.i38 = load <2 x float>, ptr %m_angularVelocity.i.i37, align 4, !tbaa.struct !163
  %retval.sroa.5.0.m_angularVelocity.i.sroa_idx.i39 = getelementptr inbounds %class.btRigidBody, ptr %2, i64 0, i32 3, i32 0, i64 2
  %retval.sroa.5.0.copyload.i40 = load <2 x float>, ptr %retval.sroa.5.0.m_angularVelocity.i.sroa_idx.i39, align 4, !tbaa.struct !165
  br label %_ZNK10btSoftBody4Body15angularVelocityEv.exit53

if.end.i43:                                       ; preds = %_ZNK10btSoftBody4Body15angularVelocityEv.exit
  %3 = load ptr, ptr %arrayidx3, align 8, !tbaa !272
  %tobool3.not.i42 = icmp eq ptr %3, null
  br i1 %tobool3.not.i42, label %_ZNK10btSoftBody4Body15angularVelocityEv.exit53, label %if.then4.i48

if.then4.i48:                                     ; preds = %if.end.i43
  %m_av.i44 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 14
  %retval.sroa.0.0.copyload11.i45 = load <2 x float>, ptr %m_av.i44, align 8, !tbaa.struct !163
  %retval.sroa.5.0.m_av.sroa_idx.i46 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 14, i32 0, i64 2
  %retval.sroa.5.0.copyload12.i47 = load <2 x float>, ptr %retval.sroa.5.0.m_av.sroa_idx.i46, align 8, !tbaa.struct !165
  br label %_ZNK10btSoftBody4Body15angularVelocityEv.exit53

_ZNK10btSoftBody4Body15angularVelocityEv.exit53:  ; preds = %if.then.i41, %if.end.i43, %if.then4.i48
  %retval.sroa.0.0.i49 = phi <2 x float> [ %retval.sroa.0.0.copyload11.i45, %if.then4.i48 ], [ %retval.sroa.0.0.copyload.i38, %if.then.i41 ], [ zeroinitializer, %if.end.i43 ]
  %retval.sroa.5.0.i50 = phi <2 x float> [ %retval.sroa.5.0.copyload12.i47, %if.then4.i48 ], [ %retval.sroa.5.0.copyload.i40, %if.then.i41 ], [ zeroinitializer, %if.end.i43 ]
  %4 = fsub <2 x float> %retval.sroa.0.0.i, %retval.sroa.0.0.i49
  %sub.i = extractelement <2 x float> %4, i64 0
  %5 = fsub <2 x float> %retval.sroa.0.0.i, %retval.sroa.0.0.i49
  %sub8.i = extractelement <2 x float> %5, i64 1
  %6 = fsub <2 x float> %retval.sroa.5.0.i, %retval.sroa.5.0.i50
  %sub14.i = extractelement <2 x float> %6, i64 0
  %m_axis = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 1
  %7 = load float, ptr %m_axis, align 8, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 1, i64 0, i32 0, i64 1
  %8 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %mul8.i.i = fmul float %sub8.i, %8
  %9 = tail call float @llvm.fmuladd.f32(float %sub.i, float %7, float %mul8.i.i)
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 1, i64 0, i32 0, i64 2
  %10 = load float, ptr %arrayidx12.i.i, align 8, !tbaa !137
  %11 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %10, float %9)
  %m_icontrol = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 2
  %12 = load ptr, ptr %m_icontrol, align 8, !tbaa !285
  %vtable = load ptr, ptr %12, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 1
  %13 = load ptr, ptr %vfn, align 8
  %call13 = tail call noundef float %13(ptr noundef nonnull align 8 dereferenceable(8) %12, ptr noundef nonnull %this, float noundef %11)
  %14 = load float, ptr %m_axis, align 8, !tbaa !137
  %mul.i = fmul float %call13, %14
  %15 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %mul4.i = fmul float %call13, %15
  %16 = load float, ptr %arrayidx12.i.i, align 8, !tbaa !137
  %mul8.i = fmul float %call13, %16
  %sub.i62 = fsub float %sub.i, %mul.i
  %sub8.i65 = fsub float %sub8.i, %mul4.i
  %sub14.i68 = fsub float %sub14.i, %mul8.i
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %impulse) #38
  %m_asVelocity.i = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 2
  %17 = getelementptr inbounds i8, ptr %impulse, i64 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %17, i8 0, i64 16, i1 false)
  store i8 1, ptr %m_asVelocity.i, align 8
  %m_massmatrix = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8
  %m_drift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6
  %m_cfm = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 3
  %18 = load float, ptr %m_cfm, align 8, !tbaa !137
  %mul.i74 = fmul float %sub.i62, %18
  %mul4.i76 = fmul float %sub8.i65, %18
  %mul8.i78 = fmul float %sub14.i68, %18
  %19 = load float, ptr %m_drift, align 4, !tbaa !137
  %add.i = fadd float %19, %mul.i74
  %arrayidx5.i84 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 1
  %20 = load float, ptr %arrayidx5.i84, align 8, !tbaa !137
  %add8.i = fadd float %mul4.i76, %20
  %arrayidx11.i86 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 2
  %21 = load float, ptr %arrayidx11.i86, align 4, !tbaa !137
  %add14.i = fadd float %mul8.i78, %21
  %arrayidx5.i.i93 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i96 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2
  %22 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 1
  %23 = load float, ptr %arrayidx5.i18.i, align 8, !tbaa !137
  %mul8.i20.i = fmul float %add8.i, %23
  %24 = tail call float @llvm.fmuladd.f32(float %22, float %add.i, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 2
  %25 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %26 = tail call float @llvm.fmuladd.f32(float %25, float %add14.i, float %24)
  %27 = load <4 x float>, ptr %m_massmatrix, align 4
  %28 = shufflevector <4 x float> %27, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %29 = load <4 x float>, ptr %arrayidx5.i.i93, align 8
  %30 = shufflevector <4 x float> %29, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %31 = load <4 x float>, ptr %arrayidx10.i.i96, align 4
  %32 = shufflevector <4 x float> %31, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %33 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %34 = load float, ptr %arrayidx5.i12.i, align 8, !tbaa !137
  %35 = insertelement <2 x float> poison, float %add8.i, i64 0
  %36 = shufflevector <2 x float> %35, <2 x float> poison, <2 x i32> zeroinitializer
  %37 = insertelement <2 x float> %30, float %34, i64 1
  %38 = fmul <2 x float> %36, %37
  %39 = insertelement <2 x float> %28, float %33, i64 1
  %40 = insertelement <2 x float> poison, float %add.i, i64 0
  %41 = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> zeroinitializer
  %42 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %39, <2 x float> %41, <2 x float> %38)
  %43 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %44 = insertelement <2 x float> %32, float %43, i64 1
  %45 = insertelement <2 x float> poison, float %add14.i, i64 0
  %46 = shufflevector <2 x float> %45, <2 x float> poison, <2 x i32> zeroinitializer
  %47 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %44, <2 x float> %46, <2 x float> %42)
  %48 = insertelement <2 x float> poison, float %sor, i64 0
  %49 = shufflevector <2 x float> %48, <2 x float> poison, <2 x i32> zeroinitializer
  %50 = fmul <2 x float> %47, %49
  %mul8.i107 = fmul float %26, %sor
  %retval.sroa.3.12.vec.insert.i110 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i107, i64 0
  store <2 x float> %50, ptr %impulse, align 8, !tbaa.struct !163
  %ref.tmp18.sroa.4.0.m_velocity.sroa_idx = getelementptr inbounds i8, ptr %impulse, i64 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i110, ptr %ref.tmp18.sroa.4.0.m_velocity.sroa_idx, align 8, !tbaa.struct !165
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %ref.tmp32) #38
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %ref.tmp32, ptr noundef nonnull align 8 dereferenceable(36) %impulse, i64 36, i1 false), !tbaa.struct !531
  %51 = load <2 x float>, ptr %ref.tmp32, align 8, !tbaa !137, !alias.scope !541
  %52 = fneg <2 x float> %51
  %arrayidx7.i.i113 = getelementptr inbounds [4 x float], ptr %ref.tmp32, i64 0, i64 2
  %53 = load float, ptr %arrayidx7.i.i113, align 8, !tbaa !137, !alias.scope !541
  %fneg8.i.i = fneg float %53
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i.i, i64 0
  store <2 x float> %52, ptr %ref.tmp32, align 8, !tbaa.struct !163, !alias.scope !541
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i, ptr %arrayidx7.i.i113, align 8, !tbaa.struct !165, !alias.scope !541
  %m_drift.i = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp32, i64 0, i32 1
  %54 = load <2 x float>, ptr %m_drift.i, align 8, !tbaa !137, !alias.scope !541
  %55 = fneg <2 x float> %54
  %arrayidx7.i10.i = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp32, i64 0, i32 1, i32 0, i64 2
  %56 = load float, ptr %arrayidx7.i10.i, align 8, !tbaa !137, !alias.scope !541
  %fneg8.i11.i = fneg float %56
  %retval.sroa.3.12.vec.insert.i14.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i11.i, i64 0
  store <2 x float> %55, ptr %m_drift.i, align 8, !tbaa.struct !163, !alias.scope !541
  store <2 x float> %retval.sroa.3.12.vec.insert.i14.i, ptr %arrayidx7.i10.i, align 8, !tbaa.struct !165, !alias.scope !541
  %m_asVelocity.i114 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp32, i64 0, i32 2
  %bf.load.i115 = load i8, ptr %m_asVelocity.i114, align 8
  %57 = and i8 %bf.load.i115, 1
  %tobool.not.i116 = icmp eq i8 %57, 0
  br i1 %tobool.not.i116, label %if.end.i118, label %if.then.i117

if.then.i117:                                     ; preds = %_ZNK10btSoftBody4Body15angularVelocityEv.exit53
  call void @_ZNK10btSoftBody4Body14applyVAImpulseERK9btVector3(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp32)
  %bf.load2.pre.i = load i8, ptr %m_asVelocity.i114, align 8
  br label %if.end.i118

if.end.i118:                                      ; preds = %if.then.i117, %_ZNK10btSoftBody4Body15angularVelocityEv.exit53
  %bf.load2.i = phi i8 [ %bf.load2.pre.i, %if.then.i117 ], [ %bf.load.i115, %_ZNK10btSoftBody4Body15angularVelocityEv.exit53 ]
  %bf.shl3.mask.i = and i8 %bf.load2.i, 2
  %tobool6.not.i = icmp eq i8 %bf.shl3.mask.i, 0
  br i1 %tobool6.not.i, label %if.end.i128, label %if.then7.i

if.then7.i:                                       ; preds = %if.end.i118
  call void @_ZNK10btSoftBody4Body14applyDAImpulseERK9btVector3(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %m_drift.i)
  br label %if.end.i128

if.end.i128:                                      ; preds = %if.end.i118, %if.then7.i
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %ref.tmp32) #38
  call void @_ZNK10btSoftBody4Body14applyVAImpulseERK9btVector3(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx3, ptr noundef nonnull align 4 dereferenceable(16) %impulse)
  %bf.load2.pre.i123 = load i8, ptr %m_asVelocity.i, align 8
  %bf.shl3.mask.i126 = and i8 %bf.load2.pre.i123, 2
  %tobool6.not.i127 = icmp eq i8 %bf.shl3.mask.i126, 0
  br i1 %tobool6.not.i127, label %_ZNK10btSoftBody4Body13applyAImpulseERKNS_7ImpulseE.exit131, label %if.then7.i130

if.then7.i130:                                    ; preds = %if.end.i128
  %m_drift.i129 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 1
  call void @_ZNK10btSoftBody4Body14applyDAImpulseERK9btVector3(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx3, ptr noundef nonnull align 4 dereferenceable(16) %m_drift.i129)
  br label %_ZNK10btSoftBody4Body13applyAImpulseERKNS_7ImpulseE.exit131

_ZNK10btSoftBody4Body13applyAImpulseERKNS_7ImpulseE.exit131: ; preds = %if.end.i128, %if.then7.i130
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %impulse) #38
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6AJoint9TerminateEf(ptr noundef nonnull align 8 dereferenceable(224) %this, float %dt) unnamed_addr #0 align 2 {
entry:
  %ref.tmp = alloca %class.btVector3, align 8
  %m_split = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 5
  %0 = load float, ptr %m_split, align 8, !tbaa !269
  %cmp = fcmp ogt float %0, 0.000000e+00
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %m_bodies = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #38
  %m_sdrift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7
  %1 = load <2 x float>, ptr %m_sdrift, align 4, !tbaa !137
  %2 = fneg <2 x float> %1
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7, i32 0, i64 2
  %3 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %fneg8.i = fneg float %3
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i, i64 0
  store <2 x float> %2, ptr %ref.tmp, align 8
  %4 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp, i64 0, i32 1
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %4, align 8
  call void @_ZNK10btSoftBody4Body14applyDAImpulseERK9btVector3(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  %arrayidx3 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1
  call void @_ZNK10btSoftBody4Body14applyDAImpulseERK9btVector3(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx3, ptr noundef nonnull align 4 dereferenceable(16) %m_sdrift)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNK10btSoftBody4Body14applyDAImpulseERK9btVector3(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef nonnull align 4 dereferenceable(16) %impulse) local_unnamed_addr #0 comdat align 2 {
entry:
  %m_rigid = getelementptr inbounds %"struct.btSoftBody::Body", ptr %this, i64 0, i32 1
  %0 = load ptr, ptr %m_rigid, align 8, !tbaa !511
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %m_invInertiaTensorWorld.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1
  %1 = load float, ptr %impulse, align 4, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 0, i32 0, i64 1
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 1
  %2 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %arrayidx10.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %3 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %arrayidx.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 1
  %arrayidx5.i12.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 2
  %4 = load float, ptr %arrayidx.i17.i.i, align 8, !tbaa !137
  %arrayidx5.i18.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 2, i32 0, i64 1
  %5 = load float, ptr %arrayidx5.i18.i.i, align 4, !tbaa !137
  %mul8.i20.i.i = fmul float %2, %5
  %6 = tail call float @llvm.fmuladd.f32(float %4, float %1, float %mul8.i20.i.i)
  %arrayidx10.i21.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 2, i32 0, i64 2
  %7 = load float, ptr %arrayidx10.i21.i.i, align 8, !tbaa !137
  %8 = tail call float @llvm.fmuladd.f32(float %7, float %3, float %6)
  %m_angularFactor.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 5
  %arrayidx13.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 5, i32 0, i64 2
  %9 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %mul14.i.i = fmul float %8, %9
  %m_angularVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3
  %10 = load float, ptr %m_invInertiaTensorWorld.i, align 8, !tbaa !137
  %11 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %12 = load float, ptr %arrayidx10.i.i.i, align 8, !tbaa !137
  %13 = load float, ptr %arrayidx.i.i.i, align 8, !tbaa !137
  %14 = load float, ptr %arrayidx5.i12.i.i, align 4, !tbaa !137
  %15 = insertelement <2 x float> poison, float %2, i64 0
  %16 = shufflevector <2 x float> %15, <2 x float> poison, <2 x i32> zeroinitializer
  %17 = insertelement <2 x float> poison, float %11, i64 0
  %18 = insertelement <2 x float> %17, float %14, i64 1
  %19 = fmul <2 x float> %16, %18
  %20 = insertelement <2 x float> poison, float %10, i64 0
  %21 = insertelement <2 x float> %20, float %13, i64 1
  %22 = insertelement <2 x float> poison, float %1, i64 0
  %23 = shufflevector <2 x float> %22, <2 x float> poison, <2 x i32> zeroinitializer
  %24 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %21, <2 x float> %23, <2 x float> %19)
  %25 = load float, ptr %arrayidx10.i15.i.i, align 8, !tbaa !137
  %26 = insertelement <2 x float> poison, float %12, i64 0
  %27 = insertelement <2 x float> %26, float %25, i64 1
  %28 = insertelement <2 x float> poison, float %3, i64 0
  %29 = shufflevector <2 x float> %28, <2 x float> poison, <2 x i32> zeroinitializer
  %30 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %27, <2 x float> %29, <2 x float> %24)
  %31 = load <2 x float>, ptr %m_angularFactor.i, align 4, !tbaa !137
  %32 = fmul <2 x float> %30, %31
  %33 = load <2 x float>, ptr %m_angularVelocity.i, align 8, !tbaa !137
  %34 = fadd <2 x float> %32, %33
  store <2 x float> %34, ptr %m_angularVelocity.i, align 8, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3, i32 0, i64 2
  %35 = load float, ptr %arrayidx12.i.i, align 8, !tbaa !137
  %add13.i.i = fadd float %mul14.i.i, %35
  store float %add13.i.i, ptr %arrayidx12.i.i, align 8, !tbaa !137
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %36 = load ptr, ptr %this, align 8, !tbaa !272
  %tobool3.not = icmp eq ptr %36, null
  br i1 %tobool3.not, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  %m_invwi.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7
  %37 = load float, ptr %impulse, align 4, !tbaa !137
  %arrayidx5.i.i.i9 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx7.i.i.i10 = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 1
  %38 = load float, ptr %arrayidx7.i.i.i10, align 4, !tbaa !137
  %arrayidx10.i.i.i12 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i.i13 = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %39 = load float, ptr %arrayidx12.i.i.i13, align 4, !tbaa !137
  %arrayidx.i.i.i14 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i.i15 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i17 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i18 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 2
  %40 = load float, ptr %arrayidx.i17.i.i18, align 4, !tbaa !137
  %arrayidx5.i18.i.i19 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %41 = load float, ptr %arrayidx5.i18.i.i19, align 4, !tbaa !137
  %mul8.i20.i.i20 = fmul float %38, %41
  %42 = tail call float @llvm.fmuladd.f32(float %40, float %37, float %mul8.i20.i.i20)
  %arrayidx10.i21.i.i21 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %43 = load float, ptr %arrayidx10.i21.i.i21, align 4, !tbaa !137
  %44 = tail call float @llvm.fmuladd.f32(float %43, float %39, float %42)
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 10, i64 1
  %45 = load float, ptr %m_invwi.i, align 4, !tbaa !137
  %46 = load float, ptr %arrayidx5.i.i.i9, align 4, !tbaa !137
  %47 = load float, ptr %arrayidx10.i.i.i12, align 4, !tbaa !137
  %48 = load float, ptr %arrayidx.i.i.i14, align 4, !tbaa !137
  %49 = load float, ptr %arrayidx5.i12.i.i15, align 4, !tbaa !137
  %50 = insertelement <2 x float> poison, float %38, i64 0
  %51 = shufflevector <2 x float> %50, <2 x float> poison, <2 x i32> zeroinitializer
  %52 = insertelement <2 x float> poison, float %46, i64 0
  %53 = insertelement <2 x float> %52, float %49, i64 1
  %54 = fmul <2 x float> %51, %53
  %55 = insertelement <2 x float> poison, float %45, i64 0
  %56 = insertelement <2 x float> %55, float %48, i64 1
  %57 = insertelement <2 x float> poison, float %37, i64 0
  %58 = shufflevector <2 x float> %57, <2 x float> poison, <2 x i32> zeroinitializer
  %59 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %56, <2 x float> %58, <2 x float> %54)
  %60 = load float, ptr %arrayidx10.i15.i.i17, align 4, !tbaa !137
  %61 = insertelement <2 x float> poison, float %47, i64 0
  %62 = insertelement <2 x float> %61, float %60, i64 1
  %63 = insertelement <2 x float> poison, float %39, i64 0
  %64 = shufflevector <2 x float> %63, <2 x float> poison, <2 x i32> zeroinitializer
  %65 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %62, <2 x float> %64, <2 x float> %59)
  %66 = load <2 x float>, ptr %arrayidx.i, align 4, !tbaa !137
  %67 = fadd <2 x float> %65, %66
  store <2 x float> %67, ptr %arrayidx.i, align 4, !tbaa !137
  %arrayidx12.i.i25 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 10, i64 1, i32 0, i64 2
  %68 = load float, ptr %arrayidx12.i.i25, align 4, !tbaa !137
  %add13.i.i26 = fadd float %44, %68
  store float %add13.i.i26, ptr %arrayidx12.i.i25, align 4, !tbaa !137
  %m_ndimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 12
  %69 = load i32, ptr %m_ndimpulses.i, align 4, !tbaa !322
  %inc.i = add nsw i32 %69, 1
  store i32 %inc.i, ptr %m_ndimpulses.i, align 4, !tbaa !322
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6CJoint7PrepareEfi(ptr nocapture noundef nonnull align 8 dereferenceable(244) %this, float noundef %dt, i32 noundef %iterations) unnamed_addr #0 align 2 {
entry:
  %m_rigid.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 0, i32 1
  %0 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool.not.i.i = icmp eq ptr %0, null
  br i1 %tobool.not.i.i, label %_ZNK10btSoftBody4Body8activateEv.exit.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %0, i1 noundef zeroext false)
  br label %_ZNK10btSoftBody4Body8activateEv.exit.i

_ZNK10btSoftBody4Body8activateEv.exit.i:          ; preds = %if.then.i.i, %entry
  %m_rigid.i4.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1, i32 1
  %1 = load ptr, ptr %m_rigid.i4.i, align 8, !tbaa !511
  %tobool.not.i5.i = icmp eq ptr %1, null
  br i1 %tobool.not.i5.i, label %_ZN10btSoftBody5Joint7PrepareEfi.exit, label %if.then.i6.i

if.then.i6.i:                                     ; preds = %_ZNK10btSoftBody4Body8activateEv.exit.i
  tail call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %1, i1 noundef zeroext false)
  br label %_ZN10btSoftBody5Joint7PrepareEfi.exit

_ZN10btSoftBody5Joint7PrepareEfi.exit:            ; preds = %_ZNK10btSoftBody4Body8activateEv.exit.i, %if.then.i6.i
  %m_life = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 1
  %2 = load i32, ptr %m_life, align 8, !tbaa !544
  %cmp = icmp eq i32 %2, 0
  %inc = add nsw i32 %2, 1
  store i32 %inc, ptr %m_life, align 8, !tbaa !544
  %m_maxlife = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 2
  %3 = load i32, ptr %m_maxlife, align 4, !tbaa !546
  %cmp3 = icmp sge i32 %2, %3
  %m_delete = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 9
  %frombool4 = zext i1 %cmp3 to i8
  store i8 %frombool4, ptr %m_delete, align 4, !tbaa !484
  %m_drift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %_ZN10btSoftBody5Joint7PrepareEfi.exit
  %m_erp = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 4
  %arrayidx3.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 1
  %4 = load <4 x float>, ptr %m_drift, align 4
  %5 = shufflevector <4 x float> %4, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %6 = load float, ptr %m_erp, align 4, !tbaa !137
  %7 = load float, ptr %arrayidx3.i, align 8, !tbaa !137
  %8 = insertelement <2 x float> %5, float %6, i64 1
  %9 = insertelement <2 x float> poison, float %6, i64 0
  %10 = insertelement <2 x float> %9, float %7, i64 1
  %11 = fmul <2 x float> %8, %10
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 2
  %12 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %mul8.i = fmul float %6, %12
  %div.i = fdiv float 1.000000e+00, %dt
  %13 = insertelement <2 x float> poison, float %div.i, i64 0
  %14 = shufflevector <2 x float> %13, <2 x float> poison, <2 x i32> zeroinitializer
  %15 = fmul <2 x float> %14, %11
  %mul8.i.i = fmul float %div.i, %mul8.i
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i, i64 0
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i, ptr %arrayidx7.i, align 4, !tbaa.struct !165
  %m_split = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 5
  %16 = load float, ptr %m_split, align 8, !tbaa !137
  %cmp9 = fcmp ogt float %16, 0.000000e+00
  br i1 %cmp9, label %if.then10, label %if.end

if.then10:                                        ; preds = %if.then
  %m_massmatrix = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8
  %17 = extractelement <2 x float> %15, i64 0
  %mul.i34 = fmul float %16, %17
  %18 = extractelement <2 x float> %15, i64 1
  %mul4.i36 = fmul float %16, %18
  %mul8.i38 = fmul float %16, %mul8.i.i
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 2
  %19 = load <4 x float>, ptr %m_massmatrix, align 4
  %20 = shufflevector <4 x float> %19, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %21 = load <4 x float>, ptr %arrayidx5.i.i, align 8
  %22 = shufflevector <4 x float> %21, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %23 = load <4 x float>, ptr %arrayidx10.i.i, align 4
  %24 = shufflevector <4 x float> %23, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %25 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %26 = load float, ptr %arrayidx5.i12.i, align 8, !tbaa !137
  %27 = insertelement <2 x float> poison, float %mul4.i36, i64 0
  %28 = shufflevector <2 x float> %27, <2 x float> poison, <2 x i32> zeroinitializer
  %29 = insertelement <2 x float> %22, float %26, i64 1
  %30 = fmul <2 x float> %28, %29
  %31 = insertelement <2 x float> %20, float %25, i64 1
  %32 = insertelement <2 x float> poison, float %mul.i34, i64 0
  %33 = shufflevector <2 x float> %32, <2 x float> poison, <2 x i32> zeroinitializer
  %34 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %31, <2 x float> %33, <2 x float> %30)
  %35 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %36 = insertelement <2 x float> %24, float %35, i64 1
  %37 = insertelement <2 x float> poison, float %mul8.i38, i64 0
  %38 = shufflevector <2 x float> %37, <2 x float> poison, <2 x i32> zeroinitializer
  %39 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %36, <2 x float> %38, <2 x float> %34)
  %arrayidx.i17.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2
  %40 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 1
  %41 = load float, ptr %arrayidx5.i18.i, align 8, !tbaa !137
  %mul8.i20.i = fmul float %mul4.i36, %41
  %42 = tail call float @llvm.fmuladd.f32(float %40, float %mul.i34, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 2
  %43 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %44 = tail call float @llvm.fmuladd.f32(float %43, float %mul8.i38, float %42)
  %retval.sroa.3.12.vec.insert.i48 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %44, i64 0
  %m_sdrift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7
  store <2 x float> %39, ptr %m_sdrift, align 4, !tbaa.struct !163
  %ref.tmp11.sroa.4.0.m_sdrift.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i48, ptr %ref.tmp11.sroa.4.0.m_sdrift.sroa_idx, align 4, !tbaa.struct !165
  %sub = fsub float 1.000000e+00, %16
  %45 = insertelement <2 x float> poison, float %sub, i64 0
  %46 = shufflevector <2 x float> %45, <2 x float> poison, <2 x i32> zeroinitializer
  %47 = fmul <2 x float> %46, %15
  %mul7.i = fmul float %sub, %mul8.i.i
  br label %if.end

if.end:                                           ; preds = %if.then10, %if.then
  %48 = phi float [ %mul7.i, %if.then10 ], [ %mul8.i.i, %if.then ]
  %49 = phi <2 x float> [ %47, %if.then10 ], [ %15, %if.then ]
  %conv = sitofp i32 %iterations to float
  %div.i54 = fdiv float 1.000000e+00, %conv
  %50 = insertelement <2 x float> poison, float %div.i54, i64 0
  %51 = shufflevector <2 x float> %50, <2 x float> poison, <2 x i32> zeroinitializer
  %52 = fmul <2 x float> %51, %49
  store <2 x float> %52, ptr %m_drift, align 4, !tbaa !137
  %mul7.i.i = fmul float %div.i54, %48
  store float %mul7.i.i, ptr %arrayidx7.i, align 4, !tbaa !137
  br label %if.end32

if.else:                                          ; preds = %_ZN10btSoftBody5Joint7PrepareEfi.exit
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %m_drift, i8 0, i64 32, i1 false)
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.end
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6CJoint5SolveEff(ptr noundef nonnull align 8 dereferenceable(244) %this, float %dt, float noundef %sor) unnamed_addr #0 align 2 {
entry:
  %impulse = alloca %"struct.btSoftBody::Impulse", align 8
  %ref.tmp68 = alloca %"struct.btSoftBody::Impulse", align 8
  %ref.tmp77 = alloca %"struct.btSoftBody::Impulse", align 8
  %ref.tmp90 = alloca %"struct.btSoftBody::Impulse", align 8
  %m_bodies = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1
  %m_rpos = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 3
  %m_rigid.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 0, i32 1
  %0 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool.not.i.i = icmp eq ptr %0, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i10.i

if.end.i.i:                                       ; preds = %entry
  %1 = load ptr, ptr %m_bodies, align 8, !tbaa !272
  %tobool3.not.i.i = icmp eq ptr %1, null
  br i1 %tobool3.not.i.i, label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit, label %if.then5.i.i

if.then.i10.i:                                    ; preds = %entry
  %m_linearVelocity.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 2
  %retval.sroa.0.0.copyload.i.i = load <2 x float>, ptr %m_linearVelocity.i.i.i, align 4, !tbaa.struct !163
  %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 2, i32 0, i64 2
  %retval.sroa.5.0.copyload.i.i = load <2 x float>, ptr %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i, align 4, !tbaa.struct !165
  %m_angularVelocity.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3
  %arrayidx.i.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3, i32 0, i64 1
  %arrayidx7.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 3, i64 0, i32 0, i64 1
  %2 = load float, ptr %m_angularVelocity.i.i.i, align 4, !tbaa !137
  %3 = load <2 x float>, ptr %arrayidx.i.i.i.i, align 4, !tbaa !137
  %4 = load <2 x float>, ptr %arrayidx7.i.i.i.i, align 4, !tbaa !137
  %5 = load float, ptr %m_rpos, align 8, !tbaa !137
  %6 = insertelement <2 x float> %3, float %2, i64 0
  %7 = shufflevector <2 x float> %6, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %8 = fneg <2 x float> %7
  %9 = fmul <2 x float> %4, %8
  %10 = shufflevector <2 x float> %4, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %11 = insertelement <2 x float> %10, float %5, i64 1
  %12 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %3, <2 x float> %11, <2 x float> %9)
  %13 = extractelement <2 x float> %3, i64 0
  %14 = fneg float %13
  %neg30.i.i.i.i = fmul float %5, %14
  %15 = extractelement <2 x float> %4, i64 0
  %16 = tail call float @llvm.fmuladd.f32(float %2, float %15, float %neg30.i.i.i.i)
  %retval.sroa.3.12.vec.insert.i.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %16, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit

if.then5.i.i:                                     ; preds = %if.end.i.i
  %retval.sroa.5.0.m_lv.sroa_idx.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 13, i32 0, i64 2
  %retval.sroa.5.0.copyload12.i.i = load <2 x float>, ptr %retval.sroa.5.0.m_lv.sroa_idx.i.i, align 8, !tbaa.struct !165
  %m_lv.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 13
  %retval.sroa.0.0.copyload11.i.i = load <2 x float>, ptr %m_lv.i.i, align 8, !tbaa.struct !163
  %m_av.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 14
  %arrayidx.i.i15.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 14, i32 0, i64 1
  %arrayidx7.i.i18.i.i = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 3, i64 0, i32 0, i64 1
  %17 = load float, ptr %m_av.i.i, align 4, !tbaa !137
  %18 = load <2 x float>, ptr %arrayidx.i.i15.i.i, align 4, !tbaa !137
  %19 = load <2 x float>, ptr %arrayidx7.i.i18.i.i, align 4, !tbaa !137
  %20 = load float, ptr %m_rpos, align 8, !tbaa !137
  %21 = insertelement <2 x float> %18, float %17, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %23 = fneg <2 x float> %22
  %24 = fmul <2 x float> %19, %23
  %25 = shufflevector <2 x float> %19, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %26 = insertelement <2 x float> %25, float %20, i64 1
  %27 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %18, <2 x float> %26, <2 x float> %24)
  %28 = extractelement <2 x float> %18, i64 0
  %29 = fneg float %28
  %neg30.i.i21.i.i = fmul float %20, %29
  %30 = extractelement <2 x float> %19, i64 0
  %31 = tail call float @llvm.fmuladd.f32(float %17, float %30, float %neg30.i.i21.i.i)
  %retval.sroa.3.12.vec.insert.i.i24.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %31, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit

_ZNK10btSoftBody4Body8velocityERK9btVector3.exit: ; preds = %if.end.i.i, %if.then.i10.i, %if.then5.i.i
  %retval.sroa.5.0.i24.i = phi <2 x float> [ %retval.sroa.5.0.copyload12.i.i, %if.then5.i.i ], [ %retval.sroa.5.0.copyload.i.i, %if.then.i10.i ], [ zeroinitializer, %if.end.i.i ]
  %retval.sroa.0.0.i22.i = phi <2 x float> [ %retval.sroa.0.0.copyload11.i.i, %if.then5.i.i ], [ %retval.sroa.0.0.copyload.i.i, %if.then.i10.i ], [ zeroinitializer, %if.end.i.i ]
  %retval.sroa.0.0.i12.i = phi <2 x float> [ %27, %if.then5.i.i ], [ %12, %if.then.i10.i ], [ zeroinitializer, %if.end.i.i ]
  %retval.sroa.5.0.i13.i = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i.i24.i.i, %if.then5.i.i ], [ %retval.sroa.3.12.vec.insert.i.i.i.i, %if.then.i10.i ], [ zeroinitializer, %if.end.i.i ]
  %32 = fadd <2 x float> %retval.sroa.0.0.i22.i, %retval.sroa.0.0.i12.i
  %33 = fadd <2 x float> %retval.sroa.5.0.i24.i, %retval.sroa.5.0.i13.i
  %arrayidx4 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1
  %arrayidx6 = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 3, i64 1
  %m_rigid.i.i98 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1, i32 1
  %34 = load ptr, ptr %m_rigid.i.i98, align 8, !tbaa !511
  %tobool.not.i.i99 = icmp eq ptr %34, null
  br i1 %tobool.not.i.i99, label %if.end.i.i101, label %if.then.i10.i117

if.end.i.i101:                                    ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit
  %35 = load ptr, ptr %arrayidx4, align 8, !tbaa !272
  %tobool3.not.i.i100 = icmp eq ptr %35, null
  br i1 %tobool3.not.i.i100, label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152, label %if.then5.i.i133

if.then.i10.i117:                                 ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit
  %m_linearVelocity.i.i.i102 = getelementptr inbounds %class.btRigidBody, ptr %34, i64 0, i32 2
  %retval.sroa.0.0.copyload.i.i103 = load <2 x float>, ptr %m_linearVelocity.i.i.i102, align 4, !tbaa.struct !163
  %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i104 = getelementptr inbounds %class.btRigidBody, ptr %34, i64 0, i32 2, i32 0, i64 2
  %retval.sroa.5.0.copyload.i.i105 = load <2 x float>, ptr %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i104, align 4, !tbaa.struct !165
  %m_angularVelocity.i.i.i106 = getelementptr inbounds %class.btRigidBody, ptr %34, i64 0, i32 3
  %arrayidx.i.i.i.i107 = getelementptr inbounds %class.btRigidBody, ptr %34, i64 0, i32 3, i32 0, i64 1
  %arrayidx7.i.i.i.i110 = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 3, i64 1, i32 0, i64 1
  %36 = load float, ptr %m_angularVelocity.i.i.i106, align 4, !tbaa !137
  %37 = load <2 x float>, ptr %arrayidx.i.i.i.i107, align 4, !tbaa !137
  %38 = load <2 x float>, ptr %arrayidx7.i.i.i.i110, align 4, !tbaa !137
  %39 = load float, ptr %arrayidx6, align 8, !tbaa !137
  %40 = insertelement <2 x float> %37, float %36, i64 0
  %41 = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %42 = fneg <2 x float> %41
  %43 = fmul <2 x float> %38, %42
  %44 = shufflevector <2 x float> %38, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %45 = insertelement <2 x float> %44, float %39, i64 1
  %46 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %37, <2 x float> %45, <2 x float> %43)
  %47 = extractelement <2 x float> %37, i64 0
  %48 = fneg float %47
  %neg30.i.i.i.i113 = fmul float %39, %48
  %49 = extractelement <2 x float> %38, i64 0
  %50 = tail call float @llvm.fmuladd.f32(float %36, float %49, float %neg30.i.i.i.i113)
  %retval.sroa.3.12.vec.insert.i.i.i.i116 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %50, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152

if.then5.i.i133:                                  ; preds = %if.end.i.i101
  %retval.sroa.5.0.m_lv.sroa_idx.i.i118 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %35, i64 0, i32 13, i32 0, i64 2
  %retval.sroa.5.0.copyload12.i.i119 = load <2 x float>, ptr %retval.sroa.5.0.m_lv.sroa_idx.i.i118, align 8, !tbaa.struct !165
  %m_lv.i.i120 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %35, i64 0, i32 13
  %retval.sroa.0.0.copyload11.i.i121 = load <2 x float>, ptr %m_lv.i.i120, align 8, !tbaa.struct !163
  %m_av.i.i122 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %35, i64 0, i32 14
  %arrayidx.i.i15.i.i123 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %35, i64 0, i32 14, i32 0, i64 1
  %arrayidx7.i.i18.i.i126 = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 3, i64 1, i32 0, i64 1
  %51 = load float, ptr %m_av.i.i122, align 4, !tbaa !137
  %52 = load <2 x float>, ptr %arrayidx.i.i15.i.i123, align 4, !tbaa !137
  %53 = load <2 x float>, ptr %arrayidx7.i.i18.i.i126, align 4, !tbaa !137
  %54 = load float, ptr %arrayidx6, align 8, !tbaa !137
  %55 = insertelement <2 x float> %52, float %51, i64 0
  %56 = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %57 = fneg <2 x float> %56
  %58 = fmul <2 x float> %53, %57
  %59 = shufflevector <2 x float> %53, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %60 = insertelement <2 x float> %59, float %54, i64 1
  %61 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %52, <2 x float> %60, <2 x float> %58)
  %62 = extractelement <2 x float> %52, i64 0
  %63 = fneg float %62
  %neg30.i.i21.i.i129 = fmul float %54, %63
  %64 = extractelement <2 x float> %53, i64 0
  %65 = tail call float @llvm.fmuladd.f32(float %51, float %64, float %neg30.i.i21.i.i129)
  %retval.sroa.3.12.vec.insert.i.i24.i.i132 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %65, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152

_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152: ; preds = %if.end.i.i101, %if.then.i10.i117, %if.then5.i.i133
  %retval.sroa.5.0.i24.i134 = phi <2 x float> [ %retval.sroa.5.0.copyload12.i.i119, %if.then5.i.i133 ], [ %retval.sroa.5.0.copyload.i.i105, %if.then.i10.i117 ], [ zeroinitializer, %if.end.i.i101 ]
  %retval.sroa.0.0.i22.i135 = phi <2 x float> [ %retval.sroa.0.0.copyload11.i.i121, %if.then5.i.i133 ], [ %retval.sroa.0.0.copyload.i.i103, %if.then.i10.i117 ], [ zeroinitializer, %if.end.i.i101 ]
  %retval.sroa.0.0.i12.i136 = phi <2 x float> [ %61, %if.then5.i.i133 ], [ %46, %if.then.i10.i117 ], [ zeroinitializer, %if.end.i.i101 ]
  %retval.sroa.5.0.i13.i137 = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i.i24.i.i132, %if.then5.i.i133 ], [ %retval.sroa.3.12.vec.insert.i.i.i.i116, %if.then.i10.i117 ], [ zeroinitializer, %if.end.i.i101 ]
  %66 = fadd <2 x float> %retval.sroa.5.0.i24.i134, %retval.sroa.5.0.i13.i137
  %67 = fsub <2 x float> %33, %66
  %sub14.i = extractelement <2 x float> %67, i64 0
  %m_normal = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 4
  %68 = fadd <2 x float> %retval.sroa.0.0.i22.i135, %retval.sroa.0.0.i12.i136
  %69 = fsub <2 x float> %32, %68
  %70 = load <2 x float>, ptr %m_normal, align 8, !tbaa !137
  %71 = fmul <2 x float> %69, %70
  %mul8.i.i = extractelement <2 x float> %71, i64 1
  %72 = extractelement <2 x float> %70, i64 0
  %73 = extractelement <2 x float> %69, i64 0
  %74 = tail call float @llvm.fmuladd.f32(float %73, float %72, float %mul8.i.i)
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 4, i32 0, i64 2
  %75 = load float, ptr %arrayidx12.i.i, align 8, !tbaa !137
  %76 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %75, float %74)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %impulse) #38
  %m_asVelocity.i = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 2
  store i8 1, ptr %m_asVelocity.i, align 8
  %m_drift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6
  %77 = getelementptr inbounds i8, ptr %impulse, i64 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %77, i8 0, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %impulse, ptr noundef nonnull align 4 dereferenceable(16) %m_drift, i64 16, i1 false), !tbaa.struct !163
  %cmp = fcmp olt float %76, 0.000000e+00
  br i1 %cmp, label %if.then, label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152.if.end_crit_edge

_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152.if.end_crit_edge: ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152
  %78 = load <2 x float>, ptr %impulse, align 8, !tbaa !137
  %arrayidx12.i.i198.phi.trans.insert = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %.pre308 = load float, ptr %arrayidx12.i.i198.phi.trans.insert, align 8, !tbaa !137
  br label %if.end

if.then:                                          ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152
  %79 = insertelement <2 x float> poison, float %76, i64 0
  %80 = shufflevector <2 x float> %79, <2 x float> poison, <2 x i32> zeroinitializer
  %81 = fmul <2 x float> %70, %80
  %mul8.i = fmul float %75, %76
  %sub14.i165 = fsub float %sub14.i, %mul8.i
  %m_friction = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 5
  %82 = load float, ptr %m_friction, align 8, !tbaa !137
  %mul8.i175 = fmul float %sub14.i165, %82
  %add14.i = fadd float %mul8.i, %mul8.i175
  %83 = fsub <2 x float> %69, %81
  %84 = insertelement <2 x float> poison, float %82, i64 0
  %85 = shufflevector <2 x float> %84, <2 x float> poison, <2 x i32> zeroinitializer
  %86 = fmul <2 x float> %83, %85
  %87 = fadd <2 x float> %81, %86
  %88 = load <2 x float>, ptr %impulse, align 8, !tbaa !137
  %89 = fadd <2 x float> %87, %88
  %arrayidx12.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %90 = load float, ptr %arrayidx12.i, align 8, !tbaa !137
  %add13.i = fadd float %add14.i, %90
  br label %if.end

if.end:                                           ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152.if.end_crit_edge, %if.then
  %91 = phi float [ %.pre308, %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152.if.end_crit_edge ], [ %add13.i, %if.then ]
  %92 = phi <2 x float> [ %78, %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152.if.end_crit_edge ], [ %89, %if.then ]
  %m_massmatrix = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8
  %arrayidx5.i.i194 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i197 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i198 = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2
  %93 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 1
  %94 = load float, ptr %arrayidx5.i18.i, align 8, !tbaa !137
  %95 = extractelement <2 x float> %92, i64 1
  %mul8.i20.i = fmul float %95, %94
  %96 = extractelement <2 x float> %92, i64 0
  %97 = tail call float @llvm.fmuladd.f32(float %93, float %96, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 2
  %98 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %99 = tail call float @llvm.fmuladd.f32(float %98, float %91, float %97)
  %100 = load <4 x float>, ptr %m_massmatrix, align 4
  %101 = shufflevector <4 x float> %100, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %102 = load <4 x float>, ptr %arrayidx5.i.i194, align 8
  %103 = shufflevector <4 x float> %102, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %104 = load <4 x float>, ptr %arrayidx10.i.i197, align 4
  %105 = shufflevector <4 x float> %104, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %106 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %107 = load float, ptr %arrayidx5.i12.i, align 8, !tbaa !137
  %108 = insertelement <2 x float> %103, float %107, i64 1
  %109 = shufflevector <2 x float> %92, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %110 = fmul <2 x float> %108, %109
  %111 = insertelement <2 x float> %101, float %106, i64 1
  %112 = shufflevector <2 x float> %92, <2 x float> poison, <2 x i32> zeroinitializer
  %113 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %111, <2 x float> %112, <2 x float> %110)
  %114 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %115 = insertelement <2 x float> %105, float %114, i64 1
  %116 = insertelement <2 x float> poison, float %91, i64 0
  %117 = shufflevector <2 x float> %116, <2 x float> poison, <2 x i32> zeroinitializer
  %118 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %115, <2 x float> %117, <2 x float> %113)
  %119 = insertelement <2 x float> poison, float %sor, i64 0
  %120 = shufflevector <2 x float> %119, <2 x float> poison, <2 x i32> zeroinitializer
  %121 = fmul <2 x float> %118, %120
  %mul8.i208 = fmul float %99, %sor
  %retval.sroa.3.12.vec.insert.i211 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i208, i64 0
  store <2 x float> %121, ptr %impulse, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i211, ptr %arrayidx12.i.i198, align 8, !tbaa.struct !165
  %122 = load ptr, ptr %m_bodies, align 8, !tbaa !272
  %123 = load ptr, ptr %arrayidx4, align 8, !tbaa !272
  %cmp37 = icmp eq ptr %122, %123
  br i1 %cmp37, label %if.then38, label %if.else87

if.then38:                                        ; preds = %if.end
  %124 = extractelement <2 x float> %121, i64 0
  %cmp43 = fcmp ord float %124, 0.000000e+00
  %125 = extractelement <2 x float> %121, i64 1
  %cmp48 = fcmp ord float %125, 0.000000e+00
  %or.cond = select i1 %cmp43, i1 %cmp48, i1 false
  %cmp54 = fcmp ord float %mul8.i208, 0.000000e+00
  %or.cond309 = select i1 %or.cond, i1 %cmp54, i1 false
  br i1 %or.cond309, label %if.then58, label %if.end97

if.then58:                                        ; preds = %if.then38
  %mul8.i.i.i = fmul float %125, %125
  %126 = tail call float @llvm.fmuladd.f32(float %124, float %124, float %mul8.i.i.i)
  %127 = tail call float @llvm.fmuladd.f32(float %mul8.i208, float %mul8.i208, float %126)
  %sqrt.i = tail call float @llvm.sqrt.f32(float %127)
  %m_maxSelfCollisionImpulse = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %122, i64 0, i32 20
  %128 = load float, ptr %m_maxSelfCollisionImpulse, align 8, !tbaa !547
  %cmp64 = fcmp olt float %sqrt.i, %128
  br i1 %cmp64, label %if.end97, label %if.else

if.else:                                          ; preds = %if.then58
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %ref.tmp68) #38
  %129 = load i32, ptr %m_asVelocity.i, align 8
  %130 = fneg <2 x float> %121
  %fneg8.i.i = fneg float %mul8.i208
  %retval.sroa.3.12.vec.insert.i.i220 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i.i, i64 0
  %m_selfCollisionImpulseFactor = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %122, i64 0, i32 21
  %131 = load float, ptr %m_selfCollisionImpulseFactor, align 4, !tbaa !548
  %ref.tmp69.sroa.7.0.ref.tmp68.sroa_idx = getelementptr inbounds i8, ptr %ref.tmp68, i64 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i220, ptr %ref.tmp69.sroa.7.0.ref.tmp68.sroa_idx, align 8, !tbaa.struct !549
  %ref.tmp69.sroa.9.0.ref.tmp68.sroa_idx = getelementptr inbounds i8, ptr %ref.tmp68, i64 16
  %ref.tmp69.sroa.12.0.ref.tmp68.sroa_idx = getelementptr inbounds i8, ptr %ref.tmp68, i64 24
  store <2 x float> <float -0.000000e+00, float 0.000000e+00>, ptr %ref.tmp69.sroa.12.0.ref.tmp68.sroa_idx, align 8, !tbaa.struct !550
  %ref.tmp69.sroa.14.0.ref.tmp68.sroa_idx = getelementptr inbounds i8, ptr %ref.tmp68, i64 32
  store i32 %129, ptr %ref.tmp69.sroa.14.0.ref.tmp68.sroa_idx, align 8
  %132 = insertelement <2 x float> poison, float %131, i64 0
  %133 = shufflevector <2 x float> %132, <2 x float> poison, <2 x i32> zeroinitializer
  %134 = fmul <2 x float> %133, %130
  store <2 x float> %134, ptr %ref.tmp68, align 8, !tbaa !137, !alias.scope !551
  %mul7.i.i = fmul float %131, %fneg8.i.i
  store float %mul7.i.i, ptr %ref.tmp69.sroa.7.0.ref.tmp68.sroa_idx, align 8, !tbaa !137, !alias.scope !551
  %mul.i3.i = fmul float %131, -0.000000e+00
  store float %mul.i3.i, ptr %ref.tmp69.sroa.9.0.ref.tmp68.sroa_idx, align 8, !tbaa !137, !alias.scope !551
  %arrayidx3.i4.i = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp68, i64 0, i32 1, i32 0, i64 1
  store float %mul.i3.i, ptr %arrayidx3.i4.i, align 4, !tbaa !137, !alias.scope !551
  store float %mul.i3.i, ptr %ref.tmp69.sroa.12.0.ref.tmp68.sroa_idx, align 8, !tbaa !137, !alias.scope !551
  %135 = trunc i32 %129 to i8
  %136 = and i8 %135, 1
  %tobool.not.i = icmp eq i8 %136, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.else
  call void @_ZNK10btSoftBody4Body13applyVImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp68, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos)
  %bf.load2.pre.i = load i8, ptr %ref.tmp69.sroa.14.0.ref.tmp68.sroa_idx, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.else
  %bf.load2.i = phi i8 [ %bf.load2.pre.i, %if.then.i ], [ %135, %if.else ]
  %bf.shl3.mask.i = and i8 %bf.load2.i, 2
  %tobool6.not.i = icmp eq i8 %bf.shl3.mask.i, 0
  br i1 %tobool6.not.i, label %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit, label %if.then7.i

if.then7.i:                                       ; preds = %if.end.i
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp69.sroa.9.0.ref.tmp68.sroa_idx, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos)
  br label %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit

_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit: ; preds = %if.end.i, %if.then7.i
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %ref.tmp68) #38
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %ref.tmp77) #38
  %137 = load ptr, ptr %m_bodies, align 8, !tbaa !272
  %m_selfCollisionImpulseFactor81 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %137, i64 0, i32 21
  %138 = load float, ptr %m_selfCollisionImpulseFactor81, align 4, !tbaa !548
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %ref.tmp77, ptr noundef nonnull align 8 dereferenceable(36) %impulse, i64 36, i1 false), !tbaa.struct !531
  %139 = load <2 x float>, ptr %ref.tmp77, align 8, !tbaa !137, !alias.scope !554
  %140 = insertelement <2 x float> poison, float %138, i64 0
  %141 = shufflevector <2 x float> %140, <2 x float> poison, <2 x i32> zeroinitializer
  %142 = fmul <2 x float> %141, %139
  store <2 x float> %142, ptr %ref.tmp77, align 8, !tbaa !137, !alias.scope !554
  %arrayidx6.i.i229 = getelementptr inbounds [4 x float], ptr %ref.tmp77, i64 0, i64 2
  %143 = load float, ptr %arrayidx6.i.i229, align 8, !tbaa !137, !alias.scope !554
  %mul7.i.i230 = fmul float %138, %143
  store float %mul7.i.i230, ptr %arrayidx6.i.i229, align 8, !tbaa !137, !alias.scope !554
  %m_drift.i231 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp77, i64 0, i32 1
  %144 = load <2 x float>, ptr %m_drift.i231, align 8, !tbaa !137, !alias.scope !554
  %145 = fmul <2 x float> %141, %144
  store <2 x float> %145, ptr %m_drift.i231, align 8, !tbaa !137, !alias.scope !554
  %arrayidx6.i6.i235 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp77, i64 0, i32 1, i32 0, i64 2
  %146 = load float, ptr %arrayidx6.i6.i235, align 8, !tbaa !137, !alias.scope !554
  %mul7.i7.i236 = fmul float %138, %146
  store float %mul7.i7.i236, ptr %arrayidx6.i6.i235, align 8, !tbaa !137, !alias.scope !554
  %m_asVelocity.i237 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp77, i64 0, i32 2
  %bf.load.i238 = load i8, ptr %m_asVelocity.i237, align 8
  %147 = and i8 %bf.load.i238, 1
  %tobool.not.i239 = icmp eq i8 %147, 0
  br i1 %tobool.not.i239, label %if.end.i245, label %if.then.i241

if.then.i241:                                     ; preds = %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit
  call void @_ZNK10btSoftBody4Body13applyVImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx4, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp77, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx6)
  %bf.load2.pre.i240 = load i8, ptr %m_asVelocity.i237, align 8
  br label %if.end.i245

if.end.i245:                                      ; preds = %if.then.i241, %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit
  %bf.load2.i242 = phi i8 [ %bf.load2.pre.i240, %if.then.i241 ], [ %bf.load.i238, %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit ]
  %bf.shl3.mask.i243 = and i8 %bf.load2.i242, 2
  %tobool6.not.i244 = icmp eq i8 %bf.shl3.mask.i243, 0
  br i1 %tobool6.not.i244, label %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit248, label %if.then7.i247

if.then7.i247:                                    ; preds = %if.end.i245
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx4, ptr noundef nonnull align 4 dereferenceable(16) %m_drift.i231, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx6)
  br label %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit248

_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit248: ; preds = %if.end.i245, %if.then7.i247
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %ref.tmp77) #38
  br label %if.end97

if.else87:                                        ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %ref.tmp90) #38
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %ref.tmp90, ptr noundef nonnull align 8 dereferenceable(36) %impulse, i64 36, i1 false), !tbaa.struct !531
  %148 = load <2 x float>, ptr %ref.tmp90, align 8, !tbaa !137, !alias.scope !557
  %149 = fneg <2 x float> %148
  %arrayidx7.i.i252 = getelementptr inbounds [4 x float], ptr %ref.tmp90, i64 0, i64 2
  %150 = load float, ptr %arrayidx7.i.i252, align 8, !tbaa !137, !alias.scope !557
  %fneg8.i.i253 = fneg float %150
  %retval.sroa.3.12.vec.insert.i.i256 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i.i253, i64 0
  store <2 x float> %149, ptr %ref.tmp90, align 8, !tbaa.struct !163, !alias.scope !557
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i256, ptr %arrayidx7.i.i252, align 8, !tbaa.struct !165, !alias.scope !557
  %m_drift.i257 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp90, i64 0, i32 1
  %151 = load <2 x float>, ptr %m_drift.i257, align 8, !tbaa !137, !alias.scope !557
  %152 = fneg <2 x float> %151
  %arrayidx7.i10.i261 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp90, i64 0, i32 1, i32 0, i64 2
  %153 = load float, ptr %arrayidx7.i10.i261, align 8, !tbaa !137, !alias.scope !557
  %fneg8.i11.i262 = fneg float %153
  %retval.sroa.3.12.vec.insert.i14.i265 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i11.i262, i64 0
  store <2 x float> %152, ptr %m_drift.i257, align 8, !tbaa.struct !163, !alias.scope !557
  store <2 x float> %retval.sroa.3.12.vec.insert.i14.i265, ptr %arrayidx7.i10.i261, align 8, !tbaa.struct !165, !alias.scope !557
  %m_asVelocity.i266 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp90, i64 0, i32 2
  %bf.load.i267 = load i8, ptr %m_asVelocity.i266, align 8
  %154 = and i8 %bf.load.i267, 1
  %tobool.not.i268 = icmp eq i8 %154, 0
  br i1 %tobool.not.i268, label %if.end.i274, label %if.then.i270

if.then.i270:                                     ; preds = %if.else87
  call void @_ZNK10btSoftBody4Body13applyVImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp90, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos)
  %bf.load2.pre.i269 = load i8, ptr %m_asVelocity.i266, align 8
  br label %if.end.i274

if.end.i274:                                      ; preds = %if.then.i270, %if.else87
  %bf.load2.i271 = phi i8 [ %bf.load2.pre.i269, %if.then.i270 ], [ %bf.load.i267, %if.else87 ]
  %bf.shl3.mask.i272 = and i8 %bf.load2.i271, 2
  %tobool6.not.i273 = icmp eq i8 %bf.shl3.mask.i272, 0
  br i1 %tobool6.not.i273, label %if.end.i286, label %if.then7.i276

if.then7.i276:                                    ; preds = %if.end.i274
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %m_drift.i257, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos)
  br label %if.end.i286

if.end.i286:                                      ; preds = %if.end.i274, %if.then7.i276
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %ref.tmp90) #38
  call void @_ZNK10btSoftBody4Body13applyVImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx4, ptr noundef nonnull align 4 dereferenceable(16) %impulse, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx6)
  %bf.load2.pre.i281 = load i8, ptr %m_asVelocity.i, align 8
  %bf.shl3.mask.i284 = and i8 %bf.load2.pre.i281, 2
  %tobool6.not.i285 = icmp eq i8 %bf.shl3.mask.i284, 0
  br i1 %tobool6.not.i285, label %if.end97, label %if.then7.i288

if.then7.i288:                                    ; preds = %if.end.i286
  %m_drift.i287 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 1
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx4, ptr noundef nonnull align 4 dereferenceable(16) %m_drift.i287, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx6)
  br label %if.end97

if.end97:                                         ; preds = %if.then7.i288, %if.end.i286, %if.then38, %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit248, %if.then58
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %impulse) #38
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6CJoint9TerminateEf(ptr noundef nonnull align 8 dereferenceable(244) %this, float %dt) unnamed_addr #0 align 2 {
entry:
  %ref.tmp = alloca %class.btVector3, align 8
  %m_split = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 5
  %0 = load float, ptr %m_split, align 8, !tbaa !269
  %cmp = fcmp ogt float %0, 0.000000e+00
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %m_bodies = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #38
  %m_sdrift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7
  %1 = load <2 x float>, ptr %m_sdrift, align 4, !tbaa !137
  %2 = fneg <2 x float> %1
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7, i32 0, i64 2
  %3 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %fneg8.i = fneg float %3
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i, i64 0
  store <2 x float> %2, ptr %ref.tmp, align 8
  %4 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp, i64 0, i32 1
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %4, align 8
  %m_rpos = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 3
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  %arrayidx4 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1
  %arrayidx7 = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 3, i64 1
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx4, ptr noundef nonnull align 4 dereferenceable(16) %m_sdrift, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx7)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody14PSolve_AnchorsEPS_ff(ptr nocapture noundef readonly %psb, float noundef %kst, float %ti) #0 align 2 {
entry:
  %ref.tmp33 = alloca %class.btVector3, align 8
  %kAHR1 = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 2, i32 12
  %0 = load float, ptr %kAHR1, align 8, !tbaa !560
  %mul = fmul float %0, %kst
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 3
  %1 = load float, ptr %m_sst, align 8, !tbaa !420
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 13, i32 2
  %2 = load i32, ptr %m_size.i, align 4, !tbaa !104
  %cmp138 = icmp sgt i32 %2, 0
  br i1 %cmp138, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 13, i32 5
  %3 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp33, i64 0, i32 1
  %wide.trip.count = zext i32 %2 to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %4 = load ptr, ptr %m_data.i, align 8, !tbaa !103
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %4, i64 %indvars.iv
  %m_body = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %4, i64 %indvars.iv, i32 2
  %5 = load ptr, ptr %m_body, align 8, !tbaa !245
  %m_interpolationWorldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2
  %6 = load ptr, ptr %arrayidx.i, align 8, !tbaa !234
  %m_local = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %4, i64 %indvars.iv, i32 1
  %7 = load float, ptr %m_interpolationWorldTransform.i, align 4, !tbaa !137
  %8 = load float, ptr %m_local, align 4, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 0, i32 0, i64 0, i32 0, i64 1
  %9 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %m_local, i64 0, i64 1
  %10 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %mul8.i.i.i = fmul float %9, %10
  %11 = call float @llvm.fmuladd.f32(float %7, float %8, float %mul8.i.i.i)
  %arrayidx10.i.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 0, i32 0, i64 0, i32 0, i64 2
  %12 = load float, ptr %arrayidx10.i.i.i, align 4, !tbaa !137
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %m_local, i64 0, i64 2
  %13 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %14 = call float @llvm.fmuladd.f32(float %12, float %13, float %11)
  %m_origin.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 1
  %15 = load float, ptr %m_origin.i.i, align 4, !tbaa !137
  %add.i.i = fadd float %14, %15
  %arrayidx.i.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 0, i32 0, i64 1
  %16 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %arrayidx5.i20.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 0, i32 0, i64 1, i32 0, i64 1
  %17 = load float, ptr %arrayidx5.i20.i.i, align 4, !tbaa !137
  %mul8.i22.i.i = fmul float %10, %17
  %18 = call float @llvm.fmuladd.f32(float %16, float %8, float %mul8.i22.i.i)
  %arrayidx10.i23.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 0, i32 0, i64 1, i32 0, i64 2
  %19 = load float, ptr %arrayidx10.i23.i.i, align 4, !tbaa !137
  %20 = call float @llvm.fmuladd.f32(float %19, float %13, float %18)
  %arrayidx.i25.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 1, i32 0, i64 1
  %21 = load float, ptr %arrayidx.i25.i.i, align 4, !tbaa !137
  %add10.i.i = fadd float %21, %20
  %arrayidx.i26.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 0, i32 0, i64 2
  %22 = load float, ptr %arrayidx.i26.i.i, align 4, !tbaa !137
  %arrayidx5.i27.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 0, i32 0, i64 2, i32 0, i64 1
  %23 = load float, ptr %arrayidx5.i27.i.i, align 4, !tbaa !137
  %mul8.i29.i.i = fmul float %10, %23
  %24 = call float @llvm.fmuladd.f32(float %22, float %8, float %mul8.i29.i.i)
  %arrayidx10.i30.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 0, i32 0, i64 2, i32 0, i64 2
  %25 = load float, ptr %arrayidx10.i30.i.i, align 4, !tbaa !137
  %26 = call float @llvm.fmuladd.f32(float %25, float %13, float %24)
  %arrayidx.i32.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 1, i32 0, i64 2
  %27 = load float, ptr %arrayidx.i32.i.i, align 4, !tbaa !137
  %add17.i.i = fadd float %27, %26
  %m_c1 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %4, i64 %indvars.iv, i32 4
  %m_linearVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %5, i64 0, i32 2
  %m_angularVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %5, i64 0, i32 3
  %arrayidx.i.i = getelementptr inbounds %class.btRigidBody, ptr %5, i64 0, i32 3, i32 0, i64 1
  %28 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %arrayidx3.i.i = getelementptr inbounds [4 x float], ptr %m_c1, i64 0, i64 2
  %29 = load float, ptr %arrayidx3.i.i, align 4, !tbaa !137
  %arrayidx5.i.i = getelementptr inbounds %class.btRigidBody, ptr %5, i64 0, i32 3, i32 0, i64 2
  %30 = load float, ptr %arrayidx5.i.i, align 8, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %m_c1, i64 0, i64 1
  %31 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %32 = fneg float %30
  %neg.i.i = fmul float %31, %32
  %33 = call float @llvm.fmuladd.f32(float %28, float %29, float %neg.i.i)
  %34 = load float, ptr %m_c1, align 4, !tbaa !137
  %35 = load float, ptr %m_angularVelocity.i, align 8, !tbaa !137
  %36 = fneg float %35
  %neg19.i.i = fmul float %29, %36
  %37 = call float @llvm.fmuladd.f32(float %30, float %34, float %neg19.i.i)
  %38 = fneg float %28
  %neg30.i.i = fmul float %34, %38
  %39 = call float @llvm.fmuladd.f32(float %35, float %31, float %neg30.i.i)
  %40 = load float, ptr %m_linearVelocity.i, align 8, !tbaa !137
  %add.i.i53 = fadd float %33, %40
  %arrayidx5.i5.i = getelementptr inbounds %class.btRigidBody, ptr %5, i64 0, i32 2, i32 0, i64 1
  %41 = load float, ptr %arrayidx5.i5.i, align 4, !tbaa !137
  %add8.i.i = fadd float %41, %37
  %arrayidx11.i.i = getelementptr inbounds %class.btRigidBody, ptr %5, i64 0, i32 2, i32 0, i64 2
  %42 = load float, ptr %arrayidx11.i.i, align 8, !tbaa !137
  %add14.i.i = fadd float %39, %42
  %mul.i = fmul float %1, %add.i.i53
  %mul4.i = fmul float %1, %add8.i.i
  %mul8.i = fmul float %1, %add14.i.i
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 1
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 2
  %43 = load float, ptr %m_q, align 4, !tbaa !137
  %arrayidx7.i54 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 2, i32 0, i64 1
  %44 = load float, ptr %arrayidx7.i54, align 4, !tbaa !137
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 1, i32 0, i64 2
  %45 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 2, i32 0, i64 2
  %46 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %45, %46
  %sub14.i66 = fsub float %mul8.i, %sub14.i
  %sub14.i78 = fsub float %add17.i.i, %45
  %mul8.i88 = fmul float %mul, %sub14.i78
  %add14.i = fadd float %mul8.i88, %sub14.i66
  %m_c0 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %4, i64 %indvars.iv, i32 3
  %arrayidx5.i.i103 = getelementptr inbounds [4 x float], ptr %m_c0, i64 0, i64 1
  %arrayidx10.i.i = getelementptr inbounds [4 x float], ptr %m_c0, i64 0, i64 2
  %arrayidx.i.i105 = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 2
  %47 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 2, i32 0, i64 1
  %48 = load float, ptr %arrayidx5.i18.i, align 4, !tbaa !137
  %arrayidx10.i21.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 2, i32 0, i64 2
  %49 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %m_c2 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %4, i64 %indvars.iv, i32 5
  %50 = load float, ptr %m_c2, align 4, !tbaa !137
  %51 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %52 = extractelement <2 x float> %51, i64 0
  %sub.i = fsub float %52, %43
  %53 = extractelement <2 x float> %51, i64 1
  %sub8.i = fsub float %53, %44
  %sub.i60 = fsub float %mul.i, %sub.i
  %sub8.i63 = fsub float %mul4.i, %sub8.i
  %sub.i72 = fsub float %add.i.i, %52
  %sub8.i75 = fsub float %add10.i.i, %53
  %mul.i84 = fmul float %mul, %sub.i72
  %mul4.i86 = fmul float %mul, %sub8.i75
  %add.i = fadd float %mul.i84, %sub.i60
  %add8.i = fadd float %mul4.i86, %sub8.i63
  %54 = load float, ptr %m_c0, align 4, !tbaa !137
  %55 = load float, ptr %arrayidx5.i.i103, align 4, !tbaa !137
  %56 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %57 = load float, ptr %arrayidx.i.i105, align 4, !tbaa !137
  %58 = load float, ptr %arrayidx5.i12.i, align 4, !tbaa !137
  %59 = insertelement <2 x float> poison, float %add8.i, i64 0
  %60 = shufflevector <2 x float> %59, <2 x float> poison, <2 x i32> zeroinitializer
  %61 = insertelement <2 x float> poison, float %55, i64 0
  %62 = insertelement <2 x float> %61, float %58, i64 1
  %63 = fmul <2 x float> %60, %62
  %64 = insertelement <2 x float> poison, float %54, i64 0
  %65 = insertelement <2 x float> %64, float %57, i64 1
  %66 = insertelement <2 x float> poison, float %add.i, i64 0
  %67 = shufflevector <2 x float> %66, <2 x float> poison, <2 x i32> zeroinitializer
  %68 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %65, <2 x float> %67, <2 x float> %63)
  %69 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %70 = insertelement <2 x float> poison, float %56, i64 0
  %71 = insertelement <2 x float> %70, float %69, i64 1
  %72 = insertelement <2 x float> poison, float %add14.i, i64 0
  %73 = shufflevector <2 x float> %72, <2 x float> poison, <2 x i32> zeroinitializer
  %74 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %71, <2 x float> %73, <2 x float> %68)
  %mul8.i20.i = fmul float %add8.i, %48
  %75 = call float @llvm.fmuladd.f32(float %47, float %add.i, float %mul8.i20.i)
  %76 = call float @llvm.fmuladd.f32(float %49, float %add14.i, float %75)
  %77 = insertelement <2 x float> poison, float %50, i64 0
  %78 = shufflevector <2 x float> %77, <2 x float> poison, <2 x i32> zeroinitializer
  %79 = fmul <2 x float> %74, %78
  %mul8.i115 = fmul float %50, %76
  %80 = fadd <2 x float> %51, %79
  store <2 x float> %80, ptr %m_x, align 4, !tbaa !137
  %add13.i = fadd float %45, %mul8.i115
  store float %add13.i, ptr %arrayidx11.i, align 4, !tbaa !137
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp33) #38
  %81 = fneg <2 x float> %74
  %fneg8.i = fneg float %76
  %retval.sroa.3.12.vec.insert.i129 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i, i64 0
  store <2 x float> %81, ptr %ref.tmp33, align 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i129, ptr %3, align 8
  call void @_ZN11btRigidBody12applyImpulseERK9btVector3S2_(ptr noundef nonnull align 8 dereferenceable(564) %5, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp33, ptr noundef nonnull align 4 dereferenceable(16) %m_c1)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp33) #38
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN11btRigidBody12applyImpulseERK9btVector3S2_(ptr noundef nonnull align 8 dereferenceable(564) %this, ptr noundef nonnull align 4 dereferenceable(16) %impulse, ptr noundef nonnull align 4 dereferenceable(16) %rel_pos) local_unnamed_addr #0 comdat align 2 {
entry:
  %m_inverseMass = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 4
  %0 = load float, ptr %m_inverseMass, align 8, !tbaa !137
  %cmp = fcmp une float %0, 0.000000e+00
  br i1 %cmp, label %if.then2, label %if.end7

if.then2:                                         ; preds = %entry
  %m_linearFactor.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 6
  %arrayidx5.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 1
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %1 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %arrayidx13.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 6, i32 0, i64 2
  %2 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %mul14.i.i = fmul float %1, %2
  %mul8.i8.i = fmul float %0, %mul14.i.i
  %m_linearVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 2
  %3 = load <2 x float>, ptr %impulse, align 4, !tbaa !137
  %4 = load <2 x float>, ptr %m_linearFactor.i, align 4, !tbaa !137
  %5 = fmul <2 x float> %3, %4
  %6 = insertelement <2 x float> poison, float %0, i64 0
  %7 = shufflevector <2 x float> %6, <2 x float> poison, <2 x i32> zeroinitializer
  %8 = fmul <2 x float> %7, %5
  %9 = load <2 x float>, ptr %m_linearVelocity.i, align 8, !tbaa !137
  %10 = fadd <2 x float> %8, %9
  store <2 x float> %10, ptr %m_linearVelocity.i, align 8, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 2, i32 0, i64 2
  %11 = load float, ptr %arrayidx12.i.i, align 8, !tbaa !137
  %add13.i.i = fadd float %mul8.i8.i, %11
  store float %add13.i.i, ptr %arrayidx12.i.i, align 8, !tbaa !137
  %m_angularFactor = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 5
  %12 = load float, ptr %impulse, align 4, !tbaa !137
  %13 = extractelement <2 x float> %4, i64 0
  %mul.i = fmul float %13, %12
  %14 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %15 = extractelement <2 x float> %4, i64 1
  %mul8.i = fmul float %14, %15
  %16 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %mul14.i = fmul float %16, %2
  %arrayidx.i = getelementptr inbounds [4 x float], ptr %rel_pos, i64 0, i64 1
  %17 = load float, ptr %arrayidx.i, align 4, !tbaa !137
  %arrayidx5.i9 = getelementptr inbounds [4 x float], ptr %rel_pos, i64 0, i64 2
  %18 = load float, ptr %arrayidx5.i9, align 4, !tbaa !137
  %19 = fneg float %18
  %neg.i = fmul float %mul8.i, %19
  %20 = tail call float @llvm.fmuladd.f32(float %17, float %mul14.i, float %neg.i)
  %21 = load float, ptr %rel_pos, align 4, !tbaa !137
  %22 = fneg float %21
  %neg19.i = fmul float %mul14.i, %22
  %23 = tail call float @llvm.fmuladd.f32(float %18, float %mul.i, float %neg19.i)
  %24 = fneg float %17
  %neg30.i = fmul float %mul.i, %24
  %25 = tail call float @llvm.fmuladd.f32(float %21, float %mul8.i, float %neg30.i)
  %m_invInertiaTensorWorld.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 1
  %arrayidx5.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 1, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 1, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 1, i32 0, i64 1
  %arrayidx5.i12.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 1, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 1, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 1, i32 0, i64 2
  %26 = load float, ptr %arrayidx.i17.i.i, align 8, !tbaa !137
  %arrayidx5.i18.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 1, i32 0, i64 2, i32 0, i64 1
  %27 = load float, ptr %arrayidx5.i18.i.i, align 4, !tbaa !137
  %mul8.i20.i.i = fmul float %23, %27
  %28 = tail call float @llvm.fmuladd.f32(float %26, float %20, float %mul8.i20.i.i)
  %arrayidx10.i21.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 1, i32 0, i64 2, i32 0, i64 2
  %29 = load float, ptr %arrayidx10.i21.i.i, align 8, !tbaa !137
  %30 = tail call float @llvm.fmuladd.f32(float %29, float %25, float %28)
  %arrayidx13.i.i19 = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 5, i32 0, i64 2
  %31 = load float, ptr %arrayidx13.i.i19, align 4, !tbaa !137
  %mul14.i.i20 = fmul float %30, %31
  %m_angularVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 3
  %32 = load <4 x float>, ptr %m_invInertiaTensorWorld.i, align 8
  %33 = shufflevector <4 x float> %32, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %34 = load <4 x float>, ptr %arrayidx5.i.i.i, align 4
  %35 = shufflevector <4 x float> %34, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %36 = load <4 x float>, ptr %arrayidx10.i.i.i, align 8
  %37 = shufflevector <4 x float> %36, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %38 = load float, ptr %arrayidx.i.i.i, align 8, !tbaa !137
  %39 = load float, ptr %arrayidx5.i12.i.i, align 4, !tbaa !137
  %40 = insertelement <2 x float> %35, float %39, i64 1
  %41 = insertelement <2 x float> poison, float %23, i64 0
  %42 = shufflevector <2 x float> %41, <2 x float> poison, <2 x i32> zeroinitializer
  %43 = fmul <2 x float> %40, %42
  %44 = insertelement <2 x float> %33, float %38, i64 1
  %45 = insertelement <2 x float> poison, float %20, i64 0
  %46 = shufflevector <2 x float> %45, <2 x float> poison, <2 x i32> zeroinitializer
  %47 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %44, <2 x float> %46, <2 x float> %43)
  %48 = load float, ptr %arrayidx10.i15.i.i, align 8, !tbaa !137
  %49 = insertelement <2 x float> %37, float %48, i64 1
  %50 = insertelement <2 x float> poison, float %25, i64 0
  %51 = shufflevector <2 x float> %50, <2 x float> poison, <2 x i32> zeroinitializer
  %52 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %49, <2 x float> %51, <2 x float> %47)
  %53 = load <2 x float>, ptr %m_angularFactor, align 4, !tbaa !137
  %54 = fmul <2 x float> %52, %53
  %55 = load <2 x float>, ptr %m_angularVelocity.i, align 8, !tbaa !137
  %56 = fadd <2 x float> %54, %55
  store <2 x float> %56, ptr %m_angularVelocity.i, align 8, !tbaa !137
  %arrayidx12.i.i23 = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 3, i32 0, i64 2
  %57 = load float, ptr %arrayidx12.i.i23, align 8, !tbaa !137
  %add13.i.i24 = fadd float %mul14.i.i20, %57
  store float %add13.i.i24, ptr %arrayidx12.i.i23, align 8, !tbaa !137
  br label %if.end7

if.end7:                                          ; preds = %if.then2, %entry
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody16PSolve_RContactsEPS_ff(ptr nocapture noundef readonly %psb, float noundef %kst, float %ti) #0 align 2 {
entry:
  %impulse = alloca %class.btVector3, align 8
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 3
  %0 = load float, ptr %m_sst, align 8, !tbaa !420
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %psb, i64 0, i32 9
  %1 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable = load ptr, ptr %1, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 11
  %2 = load ptr, ptr %vfn, align 8
  %call1 = tail call noundef float %2(ptr noundef nonnull align 8 dereferenceable(24) %1)
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 14, i32 2
  %3 = load i32, ptr %m_size.i, align 4, !tbaa !108
  %cmp225 = icmp sgt i32 %3, 0
  br i1 %cmp225, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 14, i32 5
  %4 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %impulse, i64 0, i32 1
  %wide.trip.count = zext i32 %3 to i64
  %5 = insertelement <2 x float> poison, float %0, i64 0
  %6 = shufflevector <2 x float> %5, <2 x float> poison, <2 x i32> zeroinitializer
  br label %for.body

for.cond.cleanup:                                 ; preds = %if.end59, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %if.end59
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end59 ]
  %7 = load ptr, ptr %m_data.i, align 8, !tbaa !107
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %indvars.iv
  %8 = load ptr, ptr %arrayidx.i, align 8, !tbaa !491
  %m_internalType.i.i = getelementptr inbounds %class.btCollisionObject, ptr %8, i64 0, i32 19
  %9 = load i32, ptr %m_internalType.i.i, align 8, !tbaa !134
  %cmp.i = icmp eq i32 %9, 2
  %colObj..i = select i1 %cmp.i, ptr %8, ptr null
  %tobool.not = icmp eq ptr %colObj..i, null
  br i1 %tobool.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %for.body
  %m_c1 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %indvars.iv, i32 3
  %m_linearVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %colObj..i, i64 0, i32 2
  %m_angularVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %colObj..i, i64 0, i32 3
  %arrayidx.i.i = getelementptr inbounds %class.btRigidBody, ptr %colObj..i, i64 0, i32 3, i32 0, i64 1
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %m_c1, i64 0, i64 1
  %10 = load float, ptr %m_angularVelocity.i, align 8, !tbaa !137
  %arrayidx11.i.i = getelementptr inbounds %class.btRigidBody, ptr %colObj..i, i64 0, i32 2, i32 0, i64 2
  %11 = load float, ptr %arrayidx11.i.i, align 8, !tbaa !137
  %12 = load <2 x float>, ptr %arrayidx.i.i, align 4, !tbaa !137
  %13 = load <2 x float>, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %14 = load float, ptr %m_c1, align 4, !tbaa !137
  %15 = insertelement <2 x float> %12, float %10, i64 0
  %16 = shufflevector <2 x float> %15, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %17 = fneg <2 x float> %16
  %18 = fmul <2 x float> %13, %17
  %19 = shufflevector <2 x float> %13, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %20 = insertelement <2 x float> %19, float %14, i64 1
  %21 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %12, <2 x float> %20, <2 x float> %18)
  %22 = extractelement <2 x float> %12, i64 0
  %23 = fneg float %22
  %neg30.i.i = fmul float %14, %23
  %24 = extractelement <2 x float> %13, i64 0
  %25 = call float @llvm.fmuladd.f32(float %10, float %24, float %neg30.i.i)
  %26 = load <2 x float>, ptr %m_linearVelocity.i, align 8, !tbaa !137
  %27 = fadd <2 x float> %21, %26
  %add14.i.i = fadd float %25, %11
  %28 = fmul <2 x float> %6, %27
  %mul8.i = fmul float %0, %add14.i.i
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i, i64 0
  br label %cond.end

cond.end:                                         ; preds = %for.body, %cond.true
  %va.sroa.0.1 = phi <2 x float> [ %28, %cond.true ], [ zeroinitializer, %for.body ]
  %va.sroa.7.1 = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i, %cond.true ], [ zeroinitializer, %for.body ]
  %m_node = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %indvars.iv, i32 1
  %29 = load ptr, ptr %m_node, align 8, !tbaa !561
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 1
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 2
  %30 = load float, ptr %m_x, align 4, !tbaa !137
  %31 = load float, ptr %m_q, align 4, !tbaa !137
  %sub.i = fsub float %30, %31
  %arrayidx5.i85 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 1, i32 0, i64 1
  %32 = load float, ptr %arrayidx5.i85, align 4, !tbaa !137
  %arrayidx7.i86 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 2, i32 0, i64 1
  %33 = load float, ptr %arrayidx7.i86, align 4, !tbaa !137
  %sub8.i = fsub float %32, %33
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 1, i32 0, i64 2
  %34 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 2, i32 0, i64 2
  %35 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %34, %35
  %va.sroa.0.0.vec.extract = extractelement <2 x float> %va.sroa.0.1, i64 0
  %sub.i92 = fsub float %sub.i, %va.sroa.0.0.vec.extract
  %va.sroa.0.4.vec.extract = extractelement <2 x float> %va.sroa.0.1, i64 1
  %sub8.i95 = fsub float %sub8.i, %va.sroa.0.4.vec.extract
  %va.sroa.7.8.vec.extract = extractelement <2 x float> %va.sroa.7.1, i64 0
  %sub14.i98 = fsub float %sub14.i, %va.sroa.7.8.vec.extract
  %m_normal = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %arrayidx.i, i64 0, i32 1
  %36 = load float, ptr %m_normal, align 4, !tbaa !137
  %arrayidx7.i.i105 = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %arrayidx.i, i64 0, i32 1, i32 0, i64 1
  %37 = load float, ptr %arrayidx7.i.i105, align 4, !tbaa !137
  %mul8.i.i = fmul float %sub8.i95, %37
  %38 = call float @llvm.fmuladd.f32(float %sub.i92, float %36, float %mul8.i.i)
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %arrayidx.i, i64 0, i32 1, i32 0, i64 2
  %39 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %40 = call float @llvm.fmuladd.f32(float %sub14.i98, float %39, float %38)
  %cmp18 = fcmp ugt float %40, 0x3E80000000000000
  br i1 %cmp18, label %if.end59, label %if.then

if.then:                                          ; preds = %cond.end
  %mul8.i.i108 = fmul float %32, %37
  %41 = call float @llvm.fmuladd.f32(float %30, float %36, float %mul8.i.i108)
  %42 = call float @llvm.fmuladd.f32(float %34, float %39, float %41)
  %m_offset = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %arrayidx.i, i64 0, i32 2
  %43 = load float, ptr %m_offset, align 8, !tbaa !493
  %add = fadd float %42, %43
  %cmp.i111 = fcmp olt float %add, %call1
  %.sroa.speculated = select i1 %cmp.i111, float %add, float %call1
  %mul.i112 = fmul float %36, %40
  %mul4.i114 = fmul float %37, %40
  %mul8.i116 = fmul float %39, %40
  %sub.i122 = fsub float %sub.i92, %mul.i112
  %sub8.i125 = fsub float %sub8.i95, %mul4.i114
  %sub14.i128 = fsub float %sub14.i98, %mul8.i116
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %impulse) #38
  %m_c0 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %indvars.iv, i32 2
  %m_c3 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %indvars.iv, i32 5
  %44 = load float, ptr %m_c3, align 4, !tbaa !137
  %mul.i134 = fmul float %sub.i122, %44
  %mul4.i136 = fmul float %sub8.i125, %44
  %mul8.i138 = fmul float %sub14.i128, %44
  %sub.i144 = fsub float %sub.i92, %mul.i134
  %sub8.i147 = fsub float %sub8.i95, %mul4.i136
  %sub14.i150 = fsub float %sub14.i98, %mul8.i138
  %m_c4 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %indvars.iv, i32 6
  %45 = load float, ptr %m_c4, align 8, !tbaa !563
  %mul = fmul float %.sroa.speculated, %45
  %mul.i156 = fmul float %36, %mul
  %mul4.i158 = fmul float %mul, %37
  %mul8.i160 = fmul float %mul, %39
  %add.i = fadd float %sub.i144, %mul.i156
  %add8.i = fadd float %sub8.i147, %mul4.i158
  %add14.i = fadd float %sub14.i150, %mul8.i160
  %mul.i175 = fmul float %add.i, %kst
  %mul4.i177 = fmul float %add8.i, %kst
  %mul8.i179 = fmul float %add14.i, %kst
  %arrayidx5.i.i185 = getelementptr inbounds [4 x float], ptr %m_c0, i64 0, i64 1
  %arrayidx10.i.i188 = getelementptr inbounds [4 x float], ptr %m_c0, i64 0, i64 2
  %arrayidx.i.i190 = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 2
  %46 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 2, i32 0, i64 1
  %47 = load float, ptr %arrayidx5.i18.i, align 4, !tbaa !137
  %mul8.i20.i = fmul float %mul4.i177, %47
  %48 = call float @llvm.fmuladd.f32(float %46, float %mul.i175, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 2, i32 0, i64 2
  %49 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %50 = call float @llvm.fmuladd.f32(float %49, float %mul8.i179, float %48)
  %retval.sroa.3.12.vec.insert.i193 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %50, i64 0
  %m_c2 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %indvars.iv, i32 4
  %51 = load float, ptr %m_c0, align 4, !tbaa !137
  %52 = load float, ptr %arrayidx5.i.i185, align 4, !tbaa !137
  %53 = load float, ptr %arrayidx10.i.i188, align 4, !tbaa !137
  %54 = load float, ptr %arrayidx.i.i190, align 4, !tbaa !137
  %55 = load float, ptr %arrayidx5.i12.i, align 4, !tbaa !137
  %56 = insertelement <2 x float> poison, float %52, i64 0
  %57 = insertelement <2 x float> %56, float %55, i64 1
  %58 = insertelement <2 x float> poison, float %mul4.i177, i64 0
  %59 = shufflevector <2 x float> %58, <2 x float> poison, <2 x i32> zeroinitializer
  %60 = fmul <2 x float> %57, %59
  %61 = insertelement <2 x float> poison, float %51, i64 0
  %62 = insertelement <2 x float> %61, float %54, i64 1
  %63 = insertelement <2 x float> poison, float %mul.i175, i64 0
  %64 = shufflevector <2 x float> %63, <2 x float> poison, <2 x i32> zeroinitializer
  %65 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %62, <2 x float> %64, <2 x float> %60)
  %66 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %67 = insertelement <2 x float> poison, float %53, i64 0
  %68 = insertelement <2 x float> %67, float %66, i64 1
  %69 = insertelement <2 x float> poison, float %mul8.i179, i64 0
  %70 = shufflevector <2 x float> %69, <2 x float> poison, <2 x i32> zeroinitializer
  %71 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %68, <2 x float> %70, <2 x float> %65)
  store <2 x float> %71, ptr %impulse, align 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i193, ptr %4, align 8
  %72 = load float, ptr %m_c2, align 4, !tbaa !137
  %73 = insertelement <2 x float> poison, float %72, i64 0
  %74 = shufflevector <2 x float> %73, <2 x float> poison, <2 x i32> zeroinitializer
  %75 = fmul <2 x float> %74, %71
  %mul8.i200 = fmul float %72, %50
  %76 = load ptr, ptr %m_node, align 8, !tbaa !561
  %m_x54 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %76, i64 0, i32 1
  %77 = load <2 x float>, ptr %m_x54, align 4, !tbaa !137
  %78 = fsub <2 x float> %77, %75
  store <2 x float> %78, ptr %m_x54, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %76, i64 0, i32 1, i32 0, i64 2
  %79 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %sub13.i = fsub float %79, %mul8.i200
  store float %sub13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  br i1 %tobool.not, label %if.end, label %if.then57

if.then57:                                        ; preds = %if.then
  %m_c158 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %indvars.iv, i32 3
  call void @_ZN11btRigidBody12applyImpulseERK9btVector3S2_(ptr noundef nonnull align 8 dereferenceable(564) %colObj..i, ptr noundef nonnull align 4 dereferenceable(16) %impulse, ptr noundef nonnull align 4 dereferenceable(16) %m_c158)
  br label %if.end

if.end:                                           ; preds = %if.then57, %if.then
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %impulse) #38
  br label %if.end59

if.end59:                                         ; preds = %if.end, %cond.end
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody16PSolve_SContactsEPS_ff(ptr nocapture noundef readonly %psb, float %0, float %ti) #16 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 15, i32 2
  %1 = load i32, ptr %m_size.i, align 4, !tbaa !112
  %cmp314 = icmp sgt i32 %1, 0
  br i1 %cmp314, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 15, i32 5
  %2 = load ptr, ptr %m_data.i, align 8, !tbaa !111
  %wide.trip.count = zext i32 %1 to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %if.end, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %if.end
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end ]
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %2, i64 %indvars.iv
  %m_normal = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %2, i64 %indvars.iv, i32 3
  %3 = load ptr, ptr %arrayidx.i, align 8, !tbaa !564
  %m_face = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %2, i64 %indvars.iv, i32 1
  %4 = load ptr, ptr %m_face, align 8, !tbaa !566
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %4, i64 0, i32 1
  %5 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 0, i32 1
  %arrayidx4 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %4, i64 0, i32 1, i64 1
  %6 = load ptr, ptr %arrayidx4, align 8, !tbaa !219
  %m_x5 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 1
  %arrayidx7 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %4, i64 0, i32 1, i64 2
  %7 = load ptr, ptr %arrayidx7, align 8, !tbaa !219
  %m_x8 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 0, i32 1
  %m_weights = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %2, i64 %indvars.iv, i32 2
  %arrayidx7.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 0, i32 1, i32 0, i64 2
  %arrayidx.i.i = getelementptr inbounds [4 x float], ptr %m_weights, i64 0, i64 1
  %arrayidx7.i21.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 1, i32 0, i64 2
  %arrayidx.i34.i = getelementptr inbounds [4 x float], ptr %m_weights, i64 0, i64 2
  %8 = load float, ptr %arrayidx.i34.i, align 4, !tbaa !137
  %arrayidx7.i38.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 0, i32 1, i32 0, i64 2
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 0, i32 2
  %m_q14 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 2
  %m_q17 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 0, i32 2
  %arrayidx7.i.i129 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 0, i32 2, i32 0, i64 2
  %arrayidx7.i21.i135 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 2, i32 0, i64 2
  %arrayidx7.i38.i144 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 0, i32 2, i32 0, i64 2
  %9 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %10 = load <2 x float>, ptr %m_weights, align 4, !tbaa !137
  %11 = load float, ptr %arrayidx7.i21.i, align 4, !tbaa !137
  %12 = load float, ptr %arrayidx7.i38.i, align 4, !tbaa !137
  %13 = load float, ptr %arrayidx7.i.i129, align 4, !tbaa !137
  %14 = insertelement <2 x float> poison, float %13, i64 0
  %15 = insertelement <2 x float> %14, float %11, i64 1
  %16 = fmul <2 x float> %10, %15
  %17 = shufflevector <2 x float> %16, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %18 = load float, ptr %arrayidx7.i21.i135, align 4, !tbaa !137
  %19 = insertelement <2 x float> poison, float %9, i64 0
  %20 = insertelement <2 x float> %19, float %18, i64 1
  %21 = fmul <2 x float> %10, %20
  %22 = fadd <2 x float> %17, %21
  %23 = load float, ptr %arrayidx7.i38.i144, align 4, !tbaa !137
  %24 = insertelement <2 x float> poison, float %8, i64 0
  %25 = shufflevector <2 x float> %24, <2 x float> poison, <2 x i32> zeroinitializer
  %26 = insertelement <2 x float> poison, float %12, i64 0
  %27 = insertelement <2 x float> %26, float %23, i64 1
  %28 = fmul <2 x float> %25, %27
  %29 = fadd <2 x float> %22, %28
  %m_x21 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1
  %m_q22 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 2
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1, i32 0, i64 2
  %30 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 2, i32 0, i64 2
  %31 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %30, %31
  %shift = shufflevector <2 x float> %29, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %32 = fsub <2 x float> %29, %shift
  %sub14.i160 = extractelement <2 x float> %32, i64 0
  %sub14.i172 = fsub float %sub14.i, %sub14.i160
  %33 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %34 = shufflevector <2 x float> %10, <2 x float> poison, <2 x i32> zeroinitializer
  %35 = fmul <2 x float> %34, %33
  %36 = load <2 x float>, ptr %m_x5, align 4, !tbaa !137
  %37 = shufflevector <2 x float> %10, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %38 = fmul <2 x float> %37, %36
  %39 = fadd <2 x float> %35, %38
  %40 = load <2 x float>, ptr %m_x8, align 4, !tbaa !137
  %41 = fmul <2 x float> %25, %40
  %42 = fadd <2 x float> %39, %41
  %43 = load <2 x float>, ptr %m_q, align 4, !tbaa !137
  %44 = fmul <2 x float> %34, %43
  %45 = load <2 x float>, ptr %m_q14, align 4, !tbaa !137
  %46 = fmul <2 x float> %37, %45
  %47 = fadd <2 x float> %44, %46
  %48 = load <2 x float>, ptr %m_q17, align 4, !tbaa !137
  %49 = fmul <2 x float> %25, %48
  %50 = fadd <2 x float> %47, %49
  %51 = load <2 x float>, ptr %m_x21, align 4, !tbaa !137
  %52 = load <2 x float>, ptr %m_q22, align 4, !tbaa !137
  %53 = fsub <2 x float> %51, %52
  %54 = fsub <2 x float> %42, %50
  %55 = fsub <2 x float> %53, %54
  %56 = load <2 x float>, ptr %m_normal, align 4, !tbaa !137
  %57 = fmul <2 x float> %55, %56
  %mul8.i.i181 = extractelement <2 x float> %57, i64 1
  %58 = extractelement <2 x float> %56, i64 0
  %59 = extractelement <2 x float> %55, i64 0
  %60 = tail call float @llvm.fmuladd.f32(float %59, float %58, float %mul8.i.i181)
  %arrayidx12.i.i = getelementptr inbounds [4 x float], ptr %m_normal, i64 0, i64 2
  %61 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %62 = tail call float @llvm.fmuladd.f32(float %sub14.i172, float %61, float %60)
  %cmp34 = fcmp olt float %62, 0.000000e+00
  br i1 %cmp34, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %m_margin = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %2, i64 %indvars.iv, i32 4
  %63 = load float, ptr %m_margin, align 8, !tbaa !567
  %64 = shufflevector <2 x float> %51, <2 x float> %42, <2 x i32> <i32 1, i32 3>
  %65 = shufflevector <2 x float> %56, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %66 = fmul <2 x float> %64, %65
  %67 = shufflevector <2 x float> %56, <2 x float> poison, <2 x i32> zeroinitializer
  %68 = shufflevector <2 x float> %51, <2 x float> %42, <2 x i32> <i32 0, i32 2>
  %69 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %67, <2 x float> %68, <2 x float> %66)
  %70 = insertelement <2 x float> poison, float %61, i64 0
  %71 = shufflevector <2 x float> %70, <2 x float> poison, <2 x i32> zeroinitializer
  %72 = insertelement <2 x float> poison, float %30, i64 0
  %73 = shufflevector <2 x float> %72, <2 x float> %29, <2 x i32> <i32 0, i32 2>
  %74 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %71, <2 x float> %73, <2 x float> %69)
  %shift317 = shufflevector <2 x float> %74, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %75 = fsub <2 x float> %74, %shift317
  %sub = extractelement <2 x float> %75, i64 0
  %sub38 = fsub float %63, %sub
  %76 = insertelement <2 x float> poison, float %sub38, i64 0
  %77 = shufflevector <2 x float> %76, <2 x float> poison, <2 x i32> zeroinitializer
  %78 = fmul <2 x float> %56, %77
  %mul8.i = fmul float %61, %sub38
  %79 = fadd <2 x float> %78, zeroinitializer
  %add13.i = fadd float %mul8.i, 0.000000e+00
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %corr.sroa.20.0 = phi float [ %add13.i, %if.then ], [ 0.000000e+00, %for.body ]
  %80 = phi <2 x float> [ %79, %if.then ], [ zeroinitializer, %for.body ]
  %81 = insertelement <2 x float> poison, float %62, i64 0
  %82 = shufflevector <2 x float> %81, <2 x float> poison, <2 x i32> zeroinitializer
  %83 = fmul <2 x float> %56, %82
  %mul8.i.i.i = fmul float %61, %62
  %sub14.i.i = fsub float %sub14.i172, %mul8.i.i.i
  %m_friction = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %2, i64 %indvars.iv, i32 5
  %84 = load float, ptr %m_friction, align 4, !tbaa !137
  %mul8.i205 = fmul float %sub14.i.i, %84
  %sub13.i = fsub float %corr.sroa.20.0, %mul8.i205
  %m_cfm = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %2, i64 %indvars.iv, i32 6
  %85 = load float, ptr %m_cfm, align 4, !tbaa !137
  %mul8.i221 = fmul float %85, %sub13.i
  %86 = fsub <2 x float> %55, %83
  %87 = insertelement <2 x float> poison, float %84, i64 0
  %88 = shufflevector <2 x float> %87, <2 x float> poison, <2 x i32> zeroinitializer
  %89 = fmul <2 x float> %86, %88
  %90 = fsub <2 x float> %80, %89
  %91 = insertelement <2 x float> poison, float %85, i64 0
  %92 = shufflevector <2 x float> %91, <2 x float> poison, <2 x i32> zeroinitializer
  %93 = fmul <2 x float> %92, %90
  %94 = fadd <2 x float> %51, %93
  store <2 x float> %94, ptr %m_x21, align 4, !tbaa !137
  %add13.i233 = fadd float %30, %mul8.i221
  store float %add13.i233, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx60 = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %2, i64 %indvars.iv, i32 6, i64 1
  %95 = load float, ptr %arrayidx60, align 4, !tbaa !137
  %96 = load float, ptr %m_weights, align 4, !tbaa !137
  %mul = fmul float %95, %96
  %mul8.i238 = fmul float %sub13.i, %mul
  %97 = insertelement <2 x float> poison, float %mul, i64 0
  %98 = shufflevector <2 x float> %97, <2 x float> poison, <2 x i32> zeroinitializer
  %99 = fmul <2 x float> %90, %98
  %100 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %101 = fsub <2 x float> %100, %99
  store <2 x float> %101, ptr %m_x, align 4, !tbaa !137
  %102 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %sub13.i250 = fsub float %102, %mul8.i238
  store float %sub13.i250, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %103 = load float, ptr %arrayidx60, align 4, !tbaa !137
  %104 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %mul75 = fmul float %103, %104
  %mul8.i256 = fmul float %sub13.i, %mul75
  %105 = insertelement <2 x float> poison, float %mul75, i64 0
  %106 = shufflevector <2 x float> %105, <2 x float> poison, <2 x i32> zeroinitializer
  %107 = fmul <2 x float> %90, %106
  %108 = load <2 x float>, ptr %m_x5, align 4, !tbaa !137
  %109 = fsub <2 x float> %108, %107
  store <2 x float> %109, ptr %m_x5, align 4, !tbaa !137
  %110 = load float, ptr %arrayidx7.i21.i, align 4, !tbaa !137
  %sub13.i268 = fsub float %110, %mul8.i256
  store float %sub13.i268, ptr %arrayidx7.i21.i, align 4, !tbaa !137
  %111 = load float, ptr %arrayidx60, align 4, !tbaa !137
  %112 = load float, ptr %arrayidx.i34.i, align 4, !tbaa !137
  %mul88 = fmul float %111, %112
  %mul8.i274 = fmul float %sub13.i, %mul88
  %113 = insertelement <2 x float> poison, float %mul88, i64 0
  %114 = shufflevector <2 x float> %113, <2 x float> poison, <2 x i32> zeroinitializer
  %115 = fmul <2 x float> %90, %114
  %116 = load <2 x float>, ptr %m_x8, align 4, !tbaa !137
  %117 = fsub <2 x float> %116, %115
  store <2 x float> %117, ptr %m_x8, align 4, !tbaa !137
  %118 = load float, ptr %arrayidx7.i38.i, align 4, !tbaa !137
  %sub13.i286 = fsub float %118, %mul8.i274
  store float %sub13.i286, ptr %arrayidx7.i38.i, align 4, !tbaa !137
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody12PSolve_LinksEPS_ff(ptr nocapture noundef readonly %psb, float noundef %kst, float %ti) #16 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 10, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !92
  %cmp76 = icmp sgt i32 %0, 0
  br i1 %cmp76, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 10, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !91
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %if.end, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %if.end
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end ]
  %m_c0 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 5
  %2 = load float, ptr %m_c0, align 8, !tbaa !301
  %cmp3 = fcmp ogt float %2, 0.000000e+00
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 1
  %3 = load ptr, ptr %m_n, align 8, !tbaa !219
  %arrayidx5 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 1, i64 1
  %4 = load ptr, ptr %arrayidx5, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1
  %m_x6 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 2
  %5 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1, i32 0, i64 2
  %6 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %5, %6
  %m_c1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 6
  %7 = load float, ptr %m_c1, align 4, !tbaa !302
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 6
  %8 = load float, ptr %m_im, align 8, !tbaa !175
  %9 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %10 = load <2 x float>, ptr %m_x6, align 4, !tbaa !137
  %11 = fsub <2 x float> %9, %10
  %12 = fmul <2 x float> %11, %11
  %mul8.i.i = extractelement <2 x float> %12, i64 1
  %13 = extractelement <2 x float> %11, i64 0
  %14 = tail call float @llvm.fmuladd.f32(float %13, float %13, float %mul8.i.i)
  %15 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub14.i, float %14)
  %sub = fsub float %7, %15
  %add = fadd float %7, %15
  %mul = fmul float %2, %add
  %div = fdiv float %sub, %mul
  %mul11 = fmul float %div, %kst
  %mul13 = fmul float %8, %mul11
  %16 = insertelement <2 x float> poison, float %mul13, i64 0
  %17 = shufflevector <2 x float> %16, <2 x float> poison, <2 x i32> zeroinitializer
  %18 = fmul <2 x float> %11, %17
  %mul8.i = fmul float %sub14.i, %mul13
  %19 = fsub <2 x float> %10, %18
  store <2 x float> %19, ptr %m_x6, align 4, !tbaa !137
  %sub13.i = fsub float %6, %mul8.i
  store float %sub13.i, ptr %arrayidx13.i, align 4, !tbaa !137
  %m_im20 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 6
  %20 = load float, ptr %m_im20, align 8, !tbaa !175
  %mul21 = fmul float %mul11, %20
  %mul8.i54 = fmul float %sub14.i, %mul21
  %21 = insertelement <2 x float> poison, float %mul21, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> zeroinitializer
  %23 = fmul <2 x float> %11, %22
  %24 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %25 = fadd <2 x float> %24, %23
  store <2 x float> %25, ptr %m_x, align 4, !tbaa !137
  %26 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %add13.i = fadd float %mul8.i54, %26
  store float %add13.i, ptr %arrayidx11.i, align 4, !tbaa !137
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody12VSolve_LinksEPS_f(ptr nocapture noundef readonly %psb, float noundef %kst) #16 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 10, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !92
  %cmp66 = icmp sgt i32 %0, 0
  br i1 %cmp66, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 10, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !91
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 1
  %m_c3 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 8
  %2 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 3
  %arrayidx3 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 1, i64 1
  %3 = load ptr, ptr %arrayidx3, align 8, !tbaa !219
  %m_v4 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 3
  %4 = load float, ptr %m_v4, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 3, i32 0, i64 1
  %5 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 3, i32 0, i64 2
  %6 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 3, i32 0, i64 2
  %7 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %6, %7
  %arrayidx10.i.i = getelementptr inbounds [4 x float], ptr %m_c3, i64 0, i64 2
  %8 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %m_c2 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 7
  %9 = load float, ptr %m_c2, align 8, !tbaa !451
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 6
  %10 = load float, ptr %m_im, align 8, !tbaa !175
  %11 = load <2 x float>, ptr %m_v, align 4, !tbaa !137
  %12 = extractelement <2 x float> %11, i64 0
  %sub.i = fsub float %12, %4
  %13 = extractelement <2 x float> %11, i64 1
  %sub8.i = fsub float %13, %5
  %14 = load <2 x float>, ptr %m_c3, align 4, !tbaa !137
  %15 = extractelement <2 x float> %14, i64 1
  %mul8.i.i = fmul float %sub8.i, %15
  %16 = extractelement <2 x float> %14, i64 0
  %17 = tail call float @llvm.fmuladd.f32(float %16, float %sub.i, float %mul8.i.i)
  %18 = tail call float @llvm.fmuladd.f32(float %8, float %sub14.i, float %17)
  %fneg = fneg float %18
  %mul = fmul float %9, %fneg
  %mul7 = fmul float %mul, %kst
  %mul12 = fmul float %10, %mul7
  %19 = insertelement <2 x float> poison, float %mul12, i64 0
  %20 = shufflevector <2 x float> %19, <2 x float> poison, <2 x i32> zeroinitializer
  %21 = fmul <2 x float> %14, %20
  %mul8.i = fmul float %8, %mul12
  %22 = fadd <2 x float> %11, %21
  store <2 x float> %22, ptr %m_v, align 4, !tbaa !137
  %add13.i = fadd float %6, %mul8.i
  store float %add13.i, ptr %arrayidx11.i, align 4, !tbaa !137
  %m_im22 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 6
  %23 = load float, ptr %m_im22, align 8, !tbaa !175
  %mul23 = fmul float %mul7, %23
  %24 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %mul8.i54 = fmul float %mul23, %24
  %25 = load <2 x float>, ptr %m_c3, align 4, !tbaa !137
  %26 = insertelement <2 x float> poison, float %mul23, i64 0
  %27 = shufflevector <2 x float> %26, <2 x float> poison, <2 x i32> zeroinitializer
  %28 = fmul <2 x float> %25, %27
  %29 = load <2 x float>, ptr %m_v4, align 4, !tbaa !137
  %30 = fsub <2 x float> %29, %28
  store <2 x float> %30, ptr %m_v4, align 4, !tbaa !137
  %31 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub13.i = fsub float %31, %mul8.i54
  store float %sub13.i, ptr %arrayidx13.i, align 4, !tbaa !137
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody23defaultCollisionHandlerEP17btCollisionObject(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %pco) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %mins.i = alloca %class.btVector3, align 4
  %maxs.i = alloca %class.btVector3, align 4
  %volume.i = alloca %struct.btDbvtAabbMm, align 8
  %ref.tmp17.i = alloca %struct.btDbvtAabbMm, align 4
  %docollide = alloca %"struct.btSoftColliders::CollideSDF_RS", align 8
  %mins = alloca %class.btVector3, align 4
  %maxs = alloca %class.btVector3, align 4
  %volume = alloca %struct.btDbvtAabbMm, align 8
  %ref.tmp39 = alloca %struct.btDbvtAabbMm, align 4
  %collider = alloca %"struct.btSoftColliders::CollideCL_RS", align 8
  %collisions = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 25
  %0 = load i32, ptr %collisions, align 4, !tbaa !141
  %and = and i32 %0, 15
  switch i32 %and, label %sw.epilog [
    i32 1, label %invoke.cont
    i32 2, label %sw.bb58
  ]

invoke.cont:                                      ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %docollide) #38
  store ptr getelementptr inbounds ({ [9 x ptr] }, ptr @_ZTVN15btSoftColliders13CollideSDF_RSE, i64 0, inrange i32 0, i64 2), ptr %docollide, align 8, !tbaa !5
  %m_internalType.i.i = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 19
  %1 = load i32, ptr %m_internalType.i.i, align 8, !tbaa !134
  %cmp.i = icmp eq i32 %1, 2
  %colObj..i = select i1 %cmp.i, ptr %pco, ptr null
  %tobool.not = icmp eq ptr %colObj..i, null
  %m_interpolationWorldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %colObj..i, i64 0, i32 2
  %m_worldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 1
  %cond-lvalue = select i1 %tobool.not, ptr %m_worldTransform.i, ptr %m_interpolationWorldTransform.i
  %m_origin3.i = getelementptr inbounds %class.btTransform, ptr %cond-lvalue, i64 0, i32 1
  %wtr.sroa.6.48.copyload = load float, ptr %m_origin3.i, align 4, !tbaa.struct !163
  %wtr.sroa.8.48.m_origin3.i.sroa_idx = getelementptr inbounds %class.btTransform, ptr %cond-lvalue, i64 0, i32 1, i32 0, i64 1
  %wtr.sroa.8.48.copyload = load float, ptr %wtr.sroa.8.48.m_origin3.i.sroa_idx, align 4, !tbaa.struct !293
  %wtr.sroa.9.48.m_origin3.i.sroa_idx = getelementptr inbounds %class.btTransform, ptr %cond-lvalue, i64 0, i32 1, i32 0, i64 2
  %wtr.sroa.9.48.copyload = load float, ptr %wtr.sroa.9.48.m_origin3.i.sroa_idx, align 4, !tbaa.struct !165
  %m_origin3.i87 = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 1, i32 1
  %ctr.sroa.6.48.copyload = load float, ptr %m_origin3.i87, align 4, !tbaa.struct !163
  %ctr.sroa.8.48.m_origin3.i87.sroa_idx = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 1, i32 1, i32 0, i64 1
  %ctr.sroa.8.48.copyload = load float, ptr %ctr.sroa.8.48.m_origin3.i87.sroa_idx, align 4, !tbaa.struct !293
  %ctr.sroa.9.48.m_origin3.i87.sroa_idx = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 1, i32 1, i32 0, i64 2
  %ctr.sroa.9.48.copyload = load float, ptr %ctr.sroa.9.48.m_origin3.i87.sroa_idx, align 4, !tbaa.struct !165
  %sub.i = fsub float %wtr.sroa.6.48.copyload, %ctr.sroa.6.48.copyload
  %sub8.i = fsub float %wtr.sroa.8.48.copyload, %ctr.sroa.8.48.copyload
  %sub14.i = fsub float %wtr.sroa.9.48.copyload, %ctr.sroa.9.48.copyload
  %mul8.i.i.i = fmul float %sub8.i, %sub8.i
  %2 = tail call float @llvm.fmuladd.f32(float %sub.i, float %sub.i, float %mul8.i.i.i)
  %3 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub14.i, float %2)
  %sqrt.i = tail call float @llvm.sqrt.f32(float %3)
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %4 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable = load ptr, ptr %4, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 11
  %5 = load ptr, ptr %vfn, align 8
  %call25 = tail call noundef float %5(ptr noundef nonnull align 8 dereferenceable(24) %4)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %mins) #38
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %maxs) #38
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %volume) #38
  %m_collisionShape.i90 = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 9
  %6 = load ptr, ptr %m_collisionShape.i90, align 8, !tbaa !157
  %m_interpolationWorldTransform.i91 = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 2
  %vtable36 = load ptr, ptr %6, align 8, !tbaa !5
  %vfn37 = getelementptr inbounds ptr, ptr %vtable36, i64 2
  %7 = load ptr, ptr %vfn37, align 8
  call void %7(ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef nonnull align 4 dereferenceable(64) %m_interpolationWorldTransform.i91, ptr noundef nonnull align 4 dereferenceable(16) %mins, ptr noundef nonnull align 4 dereferenceable(16) %maxs)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %ref.tmp39)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp39, ptr noundef nonnull align 4 dereferenceable(16) %mins, i64 16, i1 false), !tbaa.struct !163
  %mx2.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp39, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %mx2.i, ptr noundef nonnull align 4 dereferenceable(16) %maxs, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %volume, ptr noundef nonnull align 4 dereferenceable(32) %ref.tmp39, i64 32, i1 false), !tbaa.struct !297
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %ref.tmp39)
  %8 = load <2 x float>, ptr %volume, align 8, !tbaa !137
  %9 = insertelement <2 x float> poison, float %call25, i64 0
  %10 = shufflevector <2 x float> %9, <2 x float> poison, <2 x i32> zeroinitializer
  %11 = fsub <2 x float> %8, %10
  store <2 x float> %11, ptr %volume, align 8, !tbaa !137
  %arrayidx12.i.i95 = getelementptr inbounds [4 x float], ptr %volume, i64 0, i64 2
  %12 = load float, ptr %arrayidx12.i.i95, align 8, !tbaa !137
  %sub13.i.i = fsub float %12, %call25
  store float %sub13.i.i, ptr %arrayidx12.i.i95, align 8, !tbaa !137
  %mx.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %volume, i64 0, i32 1
  %13 = load <2 x float>, ptr %mx.i, align 8, !tbaa !137
  %14 = fadd <2 x float> %10, %13
  store <2 x float> %14, ptr %mx.i, align 8, !tbaa !137
  %arrayidx12.i7.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %volume, i64 0, i32 1, i32 0, i64 2
  %15 = load float, ptr %arrayidx12.i7.i, align 8, !tbaa !137
  %add13.i.i = fadd float %call25, %15
  store float %add13.i.i, ptr %arrayidx12.i7.i, align 8, !tbaa !137
  %psb = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %docollide, i64 0, i32 1
  store ptr %this, ptr %psb, align 8, !tbaa !568
  %m_colObj1 = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %docollide, i64 0, i32 2
  store ptr %pco, ptr %m_colObj1, align 8, !tbaa !570
  %m_rigidBody = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %docollide, i64 0, i32 3
  store ptr %colObj..i, ptr %m_rigidBody, align 8, !tbaa !571
  %add = fadd float %call25, %sqrt.i
  %dynmargin = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %docollide, i64 0, i32 4
  store float %add, ptr %dynmargin, align 8, !tbaa !572
  %stamargin = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %docollide, i64 0, i32 5
  store float %call25, ptr %stamargin, align 4, !tbaa !573
  %m_ndbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  %16 = load ptr, ptr %m_ndbvt, align 8, !tbaa !162
  call void @_ZN6btDbvt9collideTVEPK10btDbvtNodeRK12btDbvtAabbMmRNS_8ICollideE(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt, ptr noundef %16, ptr noundef nonnull align 4 dereferenceable(32) %volume, ptr noundef nonnull align 8 dereferenceable(8) %docollide)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %volume) #38
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %maxs) #38
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %mins) #38
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %docollide) #38
  br label %sw.epilog

sw.bb58:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %collider) #38
  %erp.i.i = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %collider, i64 0, i32 1
  store float 1.000000e+00, ptr %erp.i.i, align 8, !tbaa !574
  %idt.i.i = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %collider, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %collider, i64 0, i32 5
  store i32 0, ptr %17, align 8
  store ptr getelementptr inbounds ({ [9 x ptr] }, ptr @_ZTVN15btSoftColliders12CollideCL_RSE, i64 0, inrange i32 0, i64 2), ptr %collider, align 8, !tbaa !5
  %psb.i = getelementptr inbounds %"struct.btSoftColliders::CollideCL_RS", ptr %collider, i64 0, i32 1
  store ptr %this, ptr %psb.i, align 8, !tbaa !576
  %m_colObj.i = getelementptr inbounds %"struct.btSoftColliders::CollideCL_RS", ptr %collider, i64 0, i32 2
  store ptr %pco, ptr %m_colObj.i, align 8, !tbaa !578
  %isdt.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3, i32 1
  %18 = load float, ptr %isdt.i, align 4, !tbaa !421
  store float %18, ptr %idt.i.i, align 4, !tbaa !579
  %m_collisionShape.i.i = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 9
  %19 = load ptr, ptr %m_collisionShape.i.i, align 8, !tbaa !157
  %vtable.i = load ptr, ptr %19, align 8, !tbaa !5
  %vfn.i = getelementptr inbounds ptr, ptr %vtable.i, i64 11
  %20 = load ptr, ptr %vfn.i, align 8
  %call3.i96 = tail call noundef float %20(ptr noundef nonnull align 8 dereferenceable(24) %19)
  %m_collisionShape.i31.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %21 = load ptr, ptr %m_collisionShape.i31.i, align 8, !tbaa !157
  %vtable6.i = load ptr, ptr %21, align 8, !tbaa !5
  %vfn7.i = getelementptr inbounds ptr, ptr %vtable6.i, i64 11
  %22 = load ptr, ptr %vfn7.i, align 8
  %call8.i97 = tail call noundef float %22(ptr noundef nonnull align 8 dereferenceable(24) %21)
  %add.i = fadd float %call3.i96, %call8.i97
  %m_margin.i = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %collider, i64 0, i32 3
  store float %add.i, ptr %m_margin.i, align 8, !tbaa !580
  %kDF.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 7
  %m_friction.i.i = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 16
  %23 = load float, ptr %m_friction.i.i, align 4, !tbaa !581
  %24 = load float, ptr %kDF.i, align 4, !tbaa !137
  %cmp.i.i = fcmp olt float %24, %23
  %.sroa.speculated.i = select i1 %cmp.i.i, float %24, float %23
  %friction.i = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %collider, i64 0, i32 4
  store float %.sroa.speculated.i, ptr %friction.i, align 4, !tbaa !582
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %mins.i) #38
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %maxs.i) #38
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %volume.i) #38
  %25 = load ptr, ptr %m_collisionShape.i.i, align 8, !tbaa !157
  %m_interpolationWorldTransform.i.i = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 2
  %vtable15.i = load ptr, ptr %25, align 8, !tbaa !5
  %vfn16.i = getelementptr inbounds ptr, ptr %vtable15.i, i64 2
  %26 = load ptr, ptr %vfn16.i, align 8
  call void %26(ptr noundef nonnull align 8 dereferenceable(24) %25, ptr noundef nonnull align 4 dereferenceable(64) %m_interpolationWorldTransform.i.i, ptr noundef nonnull align 4 dereferenceable(16) %mins.i, ptr noundef nonnull align 4 dereferenceable(16) %maxs.i)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %ref.tmp17.i)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp17.i, ptr noundef nonnull align 4 dereferenceable(16) %mins.i, i64 16, i1 false), !tbaa.struct !163
  %mx2.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp17.i, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %mx2.i.i, ptr noundef nonnull align 4 dereferenceable(16) %maxs.i, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %volume.i, ptr noundef nonnull align 4 dereferenceable(32) %ref.tmp17.i, i64 32, i1 false), !tbaa.struct !297
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %ref.tmp17.i)
  %27 = load <2 x float>, ptr %volume.i, align 8, !tbaa !137
  %28 = insertelement <2 x float> poison, float %add.i, i64 0
  %29 = shufflevector <2 x float> %28, <2 x float> poison, <2 x i32> zeroinitializer
  %30 = fsub <2 x float> %27, %29
  store <2 x float> %30, ptr %volume.i, align 8, !tbaa !137
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %volume.i, i64 0, i64 2
  %31 = load float, ptr %arrayidx12.i.i.i, align 8, !tbaa !137
  %sub13.i.i.i = fsub float %31, %add.i
  store float %sub13.i.i.i, ptr %arrayidx12.i.i.i, align 8, !tbaa !137
  %mx.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %volume.i, i64 0, i32 1
  %32 = load <2 x float>, ptr %mx.i.i, align 8, !tbaa !137
  %33 = fadd <2 x float> %29, %32
  store <2 x float> %33, ptr %mx.i.i, align 8, !tbaa !137
  %arrayidx12.i7.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %volume.i, i64 0, i32 1, i32 0, i64 2
  %34 = load float, ptr %arrayidx12.i7.i.i, align 8, !tbaa !137
  %add13.i.i.i = fadd float %add.i, %34
  store float %add13.i.i.i, ptr %arrayidx12.i7.i.i, align 8, !tbaa !137
  %m_cdbvt.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  %35 = load ptr, ptr %m_cdbvt.i, align 8, !tbaa !583
  call void @_ZN6btDbvt9collideTVEPK10btDbvtNodeRK12btDbvtAabbMmRNS_8ICollideE(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt.i, ptr noundef %35, ptr noundef nonnull align 4 dereferenceable(32) %volume.i, ptr noundef nonnull align 8 dereferenceable(8) %collider)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %volume.i) #38
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %maxs.i) #38
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %mins.i) #38
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %collider) #38
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %sw.bb58, %invoke.cont
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN6btDbvt9collideTVEPK10btDbvtNodeRK12btDbvtAabbMmRNS_8ICollideE(ptr noundef nonnull align 8 dereferenceable(64) %this, ptr noundef %root, ptr noundef nonnull align 4 dereferenceable(32) %vol, ptr noundef nonnull align 8 dereferenceable(8) %policy) local_unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %tobool.not = icmp eq ptr %root, null
  br i1 %tobool.not, label %if.end24, label %if.then.i

if.then.i:                                        ; preds = %entry
  %volume.sroa.0.0.copyload = load float, ptr %vol, align 4, !tbaa.struct !297
  %volume.sroa.5.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 4
  %volume.sroa.5.0.copyload = load float, ptr %volume.sroa.5.0.vol.sroa_idx, align 4, !tbaa.struct !584
  %volume.sroa.6.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 8
  %volume.sroa.6.0.copyload = load float, ptr %volume.sroa.6.0.vol.sroa_idx, align 4, !tbaa.struct !298
  %volume.sroa.7223.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 16
  %volume.sroa.7223.0.copyload = load float, ptr %volume.sroa.7223.0.vol.sroa_idx, align 4, !tbaa.struct !163
  %volume.sroa.8.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 20
  %volume.sroa.8.0.copyload = load float, ptr %volume.sroa.8.0.vol.sroa_idx, align 4, !tbaa.struct !293
  %volume.sroa.9.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 24
  %volume.sroa.9.0.copyload = load float, ptr %volume.sroa.9.0.vol.sroa_idx, align 4, !tbaa.struct !165
  %call.i.i.i39 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 512, i32 noundef 16)
  store ptr %root, ptr %call.i.i.i39, align 8, !tbaa !219
  br label %do.body

do.body:                                          ; preds = %if.then.i, %if.end19
  %stack.sroa.25.4 = phi i32 [ 64, %if.then.i ], [ %stack.sroa.25.7, %if.end19 ]
  %stack.sroa.3.0 = phi i32 [ 1, %if.then.i ], [ %stack.sroa.3.1, %if.end19 ]
  %stack.sroa.38200.4 = phi ptr [ %call.i.i.i39, %if.then.i ], [ %stack.sroa.38200.9, %if.end19 ]
  %stack.sroa.38200.4236 = ptrtoint ptr %stack.sroa.38200.4 to i64
  %sub = add nsw i32 %stack.sroa.3.0, -1
  %idxprom.i68 = zext i32 %sub to i64
  %arrayidx.i69 = getelementptr inbounds ptr, ptr %stack.sroa.38200.4, i64 %idxprom.i68
  %0 = load ptr, ptr %arrayidx.i69, align 8, !tbaa !219
  %1 = load float, ptr %0, align 4, !tbaa !137
  %cmp.i71 = fcmp ugt float %1, %volume.sroa.7223.0.copyload
  br i1 %cmp.i71, label %if.end19, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body
  %mx2.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %0, i64 0, i32 1
  %2 = load float, ptr %mx2.i, align 4, !tbaa !137
  %cmp6.i = fcmp ult float %2, %volume.sroa.0.0.copyload
  br i1 %cmp6.i, label %if.end19, label %land.lhs.true7.i

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i
  %arrayidx.i.i72 = getelementptr inbounds [4 x float], ptr %0, i64 0, i64 1
  %3 = load float, ptr %arrayidx.i.i72, align 4, !tbaa !137
  %cmp12.i = fcmp ugt float %3, %volume.sroa.8.0.copyload
  br i1 %cmp12.i, label %if.end19, label %land.lhs.true13.i

land.lhs.true13.i:                                ; preds = %land.lhs.true7.i
  %arrayidx.i41.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %0, i64 0, i32 1, i32 0, i64 1
  %4 = load float, ptr %arrayidx.i41.i, align 4, !tbaa !137
  %cmp18.i = fcmp ult float %4, %volume.sroa.5.0.copyload
  br i1 %cmp18.i, label %if.end19, label %land.lhs.true19.i

land.lhs.true19.i:                                ; preds = %land.lhs.true13.i
  %arrayidx.i43.i = getelementptr inbounds [4 x float], ptr %0, i64 0, i64 2
  %5 = load float, ptr %arrayidx.i43.i, align 4, !tbaa !137
  %cmp24.i = fcmp ugt float %5, %volume.sroa.9.0.copyload
  br i1 %cmp24.i, label %if.end19, label %_Z9IntersectRK12btDbvtAabbMmS1_.exit

_Z9IntersectRK12btDbvtAabbMmS1_.exit:             ; preds = %land.lhs.true19.i
  %arrayidx.i45.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %0, i64 0, i32 1, i32 0, i64 2
  %6 = load float, ptr %arrayidx.i45.i, align 4, !tbaa !137
  %cmp29.i = fcmp ult float %6, %volume.sroa.6.0.copyload
  br i1 %cmp29.i, label %if.end19, label %invoke.cont12

invoke.cont12:                                    ; preds = %_Z9IntersectRK12btDbvtAabbMmS1_.exit
  %arrayidx.i.i73 = getelementptr inbounds %struct.btDbvtNode, ptr %0, i64 0, i32 2, i32 0, i64 1
  %7 = load ptr, ptr %arrayidx.i.i73, align 8, !tbaa !164
  %cmp.i.i74.not = icmp eq ptr %7, null
  br i1 %cmp.i.i74.not, label %if.else, label %if.then14

if.then14:                                        ; preds = %invoke.cont12
  %8 = getelementptr inbounds %struct.btDbvtNode, ptr %0, i64 0, i32 2
  %cmp.i77 = icmp eq i32 %sub, %stack.sroa.25.4
  br i1 %cmp.i77, label %if.then.i82, label %invoke.cont15

if.then.i82:                                      ; preds = %if.then14
  %tobool.not.i.i78 = icmp eq i32 %stack.sroa.25.4, 0
  %mul.i.i79 = shl nuw nsw i32 %stack.sroa.25.4, 1
  %cond.i.i80 = select i1 %tobool.not.i.i78, i32 1, i32 %mul.i.i79
  %cmp.i.i81.not = icmp sgt i32 %stack.sroa.3.0, %cond.i.i80
  br i1 %cmp.i.i81.not, label %invoke.cont15, label %if.then.i.i84

if.then.i.i84:                                    ; preds = %if.then.i82
  %tobool.not.i.i.i83 = icmp eq i32 %cond.i.i80, 0
  br i1 %tobool.not.i.i.i83, label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i91, label %if.then.i.i.i88

if.then.i.i.i88:                                  ; preds = %if.then.i.i84
  %conv.i.i.i.i85 = sext i32 %cond.i.i80 to i64
  %mul.i.i.i.i86 = shl nsw i64 %conv.i.i.i.i85, 3
  %call.i.i.i.i117 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i86, i32 noundef 16)
          to label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i91 unwind label %if.then3.i.i.i178

_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i91: ; preds = %if.then.i.i.i88, %if.then.i.i84
  %retval.0.i.i.i89 = phi ptr [ null, %if.then.i.i84 ], [ %call.i.i.i.i117, %if.then.i.i.i88 ]
  br i1 %tobool.not.i.i78, label %if.then3.i.i.i108, label %for.body.lr.ph.i.i.i94

for.body.lr.ph.i.i.i94:                           ; preds = %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i91
  %retval.0.i.i.i89235 = ptrtoint ptr %retval.0.i.i.i89 to i64
  %wide.trip.count.i.i.i93 = zext i32 %stack.sroa.25.4 to i64
  %min.iters.check240 = icmp ult i32 %stack.sroa.25.4, 6
  %9 = sub i64 %retval.0.i.i.i89235, %stack.sroa.38200.4236
  %diff.check237 = icmp ult i64 %9, 32
  %or.cond = or i1 %min.iters.check240, %diff.check237
  br i1 %or.cond, label %for.body.i.i.i100.preheader, label %vector.ph241

vector.ph241:                                     ; preds = %for.body.lr.ph.i.i.i94
  %n.vec243 = and i64 %wide.trip.count.i.i.i93, 4294967292
  br label %vector.body246

vector.body246:                                   ; preds = %vector.body246, %vector.ph241
  %index247 = phi i64 [ 0, %vector.ph241 ], [ %index.next250, %vector.body246 ]
  %10 = getelementptr inbounds ptr, ptr %retval.0.i.i.i89, i64 %index247
  %11 = getelementptr inbounds ptr, ptr %stack.sroa.38200.4, i64 %index247
  %wide.load248 = load <2 x ptr>, ptr %11, align 8, !tbaa !219
  %12 = getelementptr inbounds ptr, ptr %11, i64 2
  %wide.load249 = load <2 x ptr>, ptr %12, align 8, !tbaa !219
  store <2 x ptr> %wide.load248, ptr %10, align 8, !tbaa !219
  %13 = getelementptr inbounds ptr, ptr %10, i64 2
  store <2 x ptr> %wide.load249, ptr %13, align 8, !tbaa !219
  %index.next250 = add nuw i64 %index247, 4
  %14 = icmp eq i64 %index.next250, %n.vec243
  br i1 %14, label %middle.block238, label %vector.body246, !llvm.loop !585

middle.block238:                                  ; preds = %vector.body246
  %cmp.n245 = icmp eq i64 %n.vec243, %wide.trip.count.i.i.i93
  br i1 %cmp.n245, label %if.then3.i.i.i108, label %for.body.i.i.i100.preheader

for.body.i.i.i100.preheader:                      ; preds = %for.body.lr.ph.i.i.i94, %middle.block238
  %indvars.iv.i.i.i95.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i94 ], [ %n.vec243, %middle.block238 ]
  %15 = xor i64 %indvars.iv.i.i.i95.ph, -1
  %16 = add nsw i64 %15, %wide.trip.count.i.i.i93
  %xtraiter = and i64 %wide.trip.count.i.i.i93, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.i.i.i100.prol.loopexit, label %for.body.i.i.i100.prol

for.body.i.i.i100.prol:                           ; preds = %for.body.i.i.i100.preheader, %for.body.i.i.i100.prol
  %indvars.iv.i.i.i95.prol = phi i64 [ %indvars.iv.next.i.i.i98.prol, %for.body.i.i.i100.prol ], [ %indvars.iv.i.i.i95.ph, %for.body.i.i.i100.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.i.i100.prol ], [ 0, %for.body.i.i.i100.preheader ]
  %arrayidx.i.i.i96.prol = getelementptr inbounds ptr, ptr %retval.0.i.i.i89, i64 %indvars.iv.i.i.i95.prol
  %arrayidx3.i.i.i97.prol = getelementptr inbounds ptr, ptr %stack.sroa.38200.4, i64 %indvars.iv.i.i.i95.prol
  %17 = load ptr, ptr %arrayidx3.i.i.i97.prol, align 8, !tbaa !219
  store ptr %17, ptr %arrayidx.i.i.i96.prol, align 8, !tbaa !219
  %indvars.iv.next.i.i.i98.prol = add nuw nsw i64 %indvars.iv.i.i.i95.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.i.i.i100.prol.loopexit, label %for.body.i.i.i100.prol, !llvm.loop !586

for.body.i.i.i100.prol.loopexit:                  ; preds = %for.body.i.i.i100.prol, %for.body.i.i.i100.preheader
  %indvars.iv.i.i.i95.unr = phi i64 [ %indvars.iv.i.i.i95.ph, %for.body.i.i.i100.preheader ], [ %indvars.iv.next.i.i.i98.prol, %for.body.i.i.i100.prol ]
  %18 = icmp ult i64 %16, 3
  br i1 %18, label %if.then3.i.i.i108, label %for.body.i.i.i100

for.body.i.i.i100:                                ; preds = %for.body.i.i.i100.prol.loopexit, %for.body.i.i.i100
  %indvars.iv.i.i.i95 = phi i64 [ %indvars.iv.next.i.i.i98.3, %for.body.i.i.i100 ], [ %indvars.iv.i.i.i95.unr, %for.body.i.i.i100.prol.loopexit ]
  %arrayidx.i.i.i96 = getelementptr inbounds ptr, ptr %retval.0.i.i.i89, i64 %indvars.iv.i.i.i95
  %arrayidx3.i.i.i97 = getelementptr inbounds ptr, ptr %stack.sroa.38200.4, i64 %indvars.iv.i.i.i95
  %19 = load ptr, ptr %arrayidx3.i.i.i97, align 8, !tbaa !219
  store ptr %19, ptr %arrayidx.i.i.i96, align 8, !tbaa !219
  %indvars.iv.next.i.i.i98 = add nuw nsw i64 %indvars.iv.i.i.i95, 1
  %arrayidx.i.i.i96.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i89, i64 %indvars.iv.next.i.i.i98
  %arrayidx3.i.i.i97.1 = getelementptr inbounds ptr, ptr %stack.sroa.38200.4, i64 %indvars.iv.next.i.i.i98
  %20 = load ptr, ptr %arrayidx3.i.i.i97.1, align 8, !tbaa !219
  store ptr %20, ptr %arrayidx.i.i.i96.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i98.1 = add nuw nsw i64 %indvars.iv.i.i.i95, 2
  %arrayidx.i.i.i96.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i89, i64 %indvars.iv.next.i.i.i98.1
  %arrayidx3.i.i.i97.2 = getelementptr inbounds ptr, ptr %stack.sroa.38200.4, i64 %indvars.iv.next.i.i.i98.1
  %21 = load ptr, ptr %arrayidx3.i.i.i97.2, align 8, !tbaa !219
  store ptr %21, ptr %arrayidx.i.i.i96.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i98.2 = add nuw nsw i64 %indvars.iv.i.i.i95, 3
  %arrayidx.i.i.i96.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i89, i64 %indvars.iv.next.i.i.i98.2
  %arrayidx3.i.i.i97.3 = getelementptr inbounds ptr, ptr %stack.sroa.38200.4, i64 %indvars.iv.next.i.i.i98.2
  %22 = load ptr, ptr %arrayidx3.i.i.i97.3, align 8, !tbaa !219
  store ptr %22, ptr %arrayidx.i.i.i96.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i98.3 = add nuw nsw i64 %indvars.iv.i.i.i95, 4
  %exitcond.not.i.i.i99.3 = icmp eq i64 %indvars.iv.next.i.i.i98.3, %wide.trip.count.i.i.i93
  br i1 %exitcond.not.i.i.i99.3, label %if.then3.i.i.i108, label %for.body.i.i.i100, !llvm.loop !587

if.then3.i.i.i108:                                ; preds = %for.body.i.i.i100.prol.loopexit, %for.body.i.i.i100, %middle.block238, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i91
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stack.sroa.38200.4)
          to label %invoke.cont15 unwind label %if.then3.i.i.i178

invoke.cont15:                                    ; preds = %if.then.i82, %if.then14, %if.then3.i.i.i108
  %stack.sroa.25.5 = phi i32 [ %stack.sroa.25.4, %if.then.i82 ], [ %stack.sroa.25.4, %if.then14 ], [ %cond.i.i80, %if.then3.i.i.i108 ]
  %stack.sroa.38200.5 = phi ptr [ %stack.sroa.38200.4, %if.then.i82 ], [ %stack.sroa.38200.4, %if.then14 ], [ %retval.0.i.i.i89, %if.then3.i.i.i108 ]
  %stack.sroa.38200.5232 = ptrtoint ptr %stack.sroa.38200.5 to i64
  %arrayidx.i113 = getelementptr inbounds ptr, ptr %stack.sroa.38200.5, i64 %idxprom.i68
  %23 = load ptr, ptr %8, align 8, !tbaa !219
  store ptr %23, ptr %arrayidx.i113, align 8, !tbaa !219
  %cmp.i122 = icmp eq i32 %stack.sroa.3.0, %stack.sroa.25.5
  br i1 %cmp.i122, label %if.then.i127, label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit164

if.then.i127:                                     ; preds = %invoke.cont15
  %tobool.not.i.i123 = icmp eq i32 %stack.sroa.3.0, 0
  %mul.i.i124 = shl nsw i32 %stack.sroa.3.0, 1
  %cond.i.i125 = select i1 %tobool.not.i.i123, i32 1, i32 %mul.i.i124
  %cmp.i.i126 = icmp slt i32 %stack.sroa.3.0, %cond.i.i125
  br i1 %cmp.i.i126, label %if.then.i.i129, label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit164

if.then.i.i129:                                   ; preds = %if.then.i127
  %tobool.not.i.i.i128 = icmp eq i32 %cond.i.i125, 0
  br i1 %tobool.not.i.i.i128, label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i136, label %if.then.i.i.i133

if.then.i.i.i133:                                 ; preds = %if.then.i.i129
  %conv.i.i.i.i130 = sext i32 %cond.i.i125 to i64
  %mul.i.i.i.i131 = shl nsw i64 %conv.i.i.i.i130, 3
  %call.i.i.i.i162 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i131, i32 noundef 16)
          to label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i136 unwind label %if.then3.i.i.i178

_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i136: ; preds = %if.then.i.i.i133, %if.then.i.i129
  %retval.0.i.i.i134 = phi ptr [ null, %if.then.i.i129 ], [ %call.i.i.i.i162, %if.then.i.i.i133 ]
  %cmp7.i.i.i135 = icmp sgt i32 %stack.sroa.3.0, 0
  br i1 %cmp7.i.i.i135, label %for.body.lr.ph.i.i.i139, label %if.then3.i.i.i153

for.body.lr.ph.i.i.i139:                          ; preds = %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i136
  %retval.0.i.i.i134231 = ptrtoint ptr %retval.0.i.i.i134 to i64
  %wide.trip.count.i.i.i138 = zext i32 %stack.sroa.3.0 to i64
  %min.iters.check = icmp ult i32 %stack.sroa.3.0, 6
  %24 = sub i64 %retval.0.i.i.i134231, %stack.sroa.38200.5232
  %diff.check = icmp ult i64 %24, 32
  %or.cond251 = or i1 %min.iters.check, %diff.check
  br i1 %or.cond251, label %for.body.i.i.i145.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i.i139
  %n.vec = and i64 %wide.trip.count.i.i.i138, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %25 = getelementptr inbounds ptr, ptr %retval.0.i.i.i134, i64 %index
  %26 = getelementptr inbounds ptr, ptr %stack.sroa.38200.5, i64 %index
  %wide.load = load <2 x ptr>, ptr %26, align 8, !tbaa !219
  %27 = getelementptr inbounds ptr, ptr %26, i64 2
  %wide.load233 = load <2 x ptr>, ptr %27, align 8, !tbaa !219
  store <2 x ptr> %wide.load, ptr %25, align 8, !tbaa !219
  %28 = getelementptr inbounds ptr, ptr %25, i64 2
  store <2 x ptr> %wide.load233, ptr %28, align 8, !tbaa !219
  %index.next = add nuw i64 %index, 4
  %29 = icmp eq i64 %index.next, %n.vec
  br i1 %29, label %middle.block, label %vector.body, !llvm.loop !588

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i.i138
  br i1 %cmp.n, label %if.then3.i.i.i153, label %for.body.i.i.i145.preheader

for.body.i.i.i145.preheader:                      ; preds = %for.body.lr.ph.i.i.i139, %middle.block
  %indvars.iv.i.i.i140.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i139 ], [ %n.vec, %middle.block ]
  %30 = xor i64 %indvars.iv.i.i.i140.ph, -1
  %31 = add nsw i64 %30, %wide.trip.count.i.i.i138
  %xtraiter252 = and i64 %wide.trip.count.i.i.i138, 3
  %lcmp.mod253.not = icmp eq i64 %xtraiter252, 0
  br i1 %lcmp.mod253.not, label %for.body.i.i.i145.prol.loopexit, label %for.body.i.i.i145.prol

for.body.i.i.i145.prol:                           ; preds = %for.body.i.i.i145.preheader, %for.body.i.i.i145.prol
  %indvars.iv.i.i.i140.prol = phi i64 [ %indvars.iv.next.i.i.i143.prol, %for.body.i.i.i145.prol ], [ %indvars.iv.i.i.i140.ph, %for.body.i.i.i145.preheader ]
  %prol.iter254 = phi i64 [ %prol.iter254.next, %for.body.i.i.i145.prol ], [ 0, %for.body.i.i.i145.preheader ]
  %arrayidx.i.i.i141.prol = getelementptr inbounds ptr, ptr %retval.0.i.i.i134, i64 %indvars.iv.i.i.i140.prol
  %arrayidx3.i.i.i142.prol = getelementptr inbounds ptr, ptr %stack.sroa.38200.5, i64 %indvars.iv.i.i.i140.prol
  %32 = load ptr, ptr %arrayidx3.i.i.i142.prol, align 8, !tbaa !219
  store ptr %32, ptr %arrayidx.i.i.i141.prol, align 8, !tbaa !219
  %indvars.iv.next.i.i.i143.prol = add nuw nsw i64 %indvars.iv.i.i.i140.prol, 1
  %prol.iter254.next = add i64 %prol.iter254, 1
  %prol.iter254.cmp.not = icmp eq i64 %prol.iter254.next, %xtraiter252
  br i1 %prol.iter254.cmp.not, label %for.body.i.i.i145.prol.loopexit, label %for.body.i.i.i145.prol, !llvm.loop !589

for.body.i.i.i145.prol.loopexit:                  ; preds = %for.body.i.i.i145.prol, %for.body.i.i.i145.preheader
  %indvars.iv.i.i.i140.unr = phi i64 [ %indvars.iv.i.i.i140.ph, %for.body.i.i.i145.preheader ], [ %indvars.iv.next.i.i.i143.prol, %for.body.i.i.i145.prol ]
  %33 = icmp ult i64 %31, 3
  br i1 %33, label %if.then3.i.i.i153, label %for.body.i.i.i145

for.body.i.i.i145:                                ; preds = %for.body.i.i.i145.prol.loopexit, %for.body.i.i.i145
  %indvars.iv.i.i.i140 = phi i64 [ %indvars.iv.next.i.i.i143.3, %for.body.i.i.i145 ], [ %indvars.iv.i.i.i140.unr, %for.body.i.i.i145.prol.loopexit ]
  %arrayidx.i.i.i141 = getelementptr inbounds ptr, ptr %retval.0.i.i.i134, i64 %indvars.iv.i.i.i140
  %arrayidx3.i.i.i142 = getelementptr inbounds ptr, ptr %stack.sroa.38200.5, i64 %indvars.iv.i.i.i140
  %34 = load ptr, ptr %arrayidx3.i.i.i142, align 8, !tbaa !219
  store ptr %34, ptr %arrayidx.i.i.i141, align 8, !tbaa !219
  %indvars.iv.next.i.i.i143 = add nuw nsw i64 %indvars.iv.i.i.i140, 1
  %arrayidx.i.i.i141.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i134, i64 %indvars.iv.next.i.i.i143
  %arrayidx3.i.i.i142.1 = getelementptr inbounds ptr, ptr %stack.sroa.38200.5, i64 %indvars.iv.next.i.i.i143
  %35 = load ptr, ptr %arrayidx3.i.i.i142.1, align 8, !tbaa !219
  store ptr %35, ptr %arrayidx.i.i.i141.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i143.1 = add nuw nsw i64 %indvars.iv.i.i.i140, 2
  %arrayidx.i.i.i141.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i134, i64 %indvars.iv.next.i.i.i143.1
  %arrayidx3.i.i.i142.2 = getelementptr inbounds ptr, ptr %stack.sroa.38200.5, i64 %indvars.iv.next.i.i.i143.1
  %36 = load ptr, ptr %arrayidx3.i.i.i142.2, align 8, !tbaa !219
  store ptr %36, ptr %arrayidx.i.i.i141.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i143.2 = add nuw nsw i64 %indvars.iv.i.i.i140, 3
  %arrayidx.i.i.i141.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i134, i64 %indvars.iv.next.i.i.i143.2
  %arrayidx3.i.i.i142.3 = getelementptr inbounds ptr, ptr %stack.sroa.38200.5, i64 %indvars.iv.next.i.i.i143.2
  %37 = load ptr, ptr %arrayidx3.i.i.i142.3, align 8, !tbaa !219
  store ptr %37, ptr %arrayidx.i.i.i141.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i143.3 = add nuw nsw i64 %indvars.iv.i.i.i140, 4
  %exitcond.not.i.i.i144.3 = icmp eq i64 %indvars.iv.next.i.i.i143.3, %wide.trip.count.i.i.i138
  br i1 %exitcond.not.i.i.i144.3, label %if.then3.i.i.i153, label %for.body.i.i.i145, !llvm.loop !590

if.then3.i.i.i153:                                ; preds = %for.body.i.i.i145.prol.loopexit, %for.body.i.i.i145, %middle.block, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i136
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stack.sroa.38200.5)
          to label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit164 unwind label %if.then3.i.i.i178

_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit164: ; preds = %if.then3.i.i.i153, %invoke.cont15, %if.then.i127
  %stack.sroa.25.6 = phi i32 [ %stack.sroa.3.0, %if.then.i127 ], [ %stack.sroa.25.5, %invoke.cont15 ], [ %cond.i.i125, %if.then3.i.i.i153 ]
  %stack.sroa.38200.6 = phi ptr [ %stack.sroa.38200.5, %if.then.i127 ], [ %stack.sroa.38200.5, %invoke.cont15 ], [ %retval.0.i.i.i134, %if.then3.i.i.i153 ]
  %idxprom.i157 = sext i32 %stack.sroa.3.0 to i64
  %arrayidx.i158 = getelementptr inbounds ptr, ptr %stack.sroa.38200.6, i64 %idxprom.i157
  %38 = load ptr, ptr %arrayidx.i.i73, align 8, !tbaa !219
  store ptr %38, ptr %arrayidx.i158, align 8, !tbaa !219
  %inc.i159 = add nsw i32 %stack.sroa.3.0, 1
  br label %if.end19

if.else:                                          ; preds = %invoke.cont12
  %vtable = load ptr, ptr %policy, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 3
  %39 = load ptr, ptr %vfn, align 8
  invoke void %39(ptr noundef nonnull align 8 dereferenceable(8) %policy, ptr noundef nonnull %0)
          to label %if.end19 unwind label %if.then3.i.i.i178

if.end19:                                         ; preds = %do.body, %land.lhs.true.i, %land.lhs.true7.i, %land.lhs.true13.i, %land.lhs.true19.i, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit164, %if.else, %_Z9IntersectRK12btDbvtAabbMmS1_.exit
  %stack.sroa.25.7 = phi i32 [ %stack.sroa.25.6, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit164 ], [ %stack.sroa.25.4, %if.else ], [ %stack.sroa.25.4, %_Z9IntersectRK12btDbvtAabbMmS1_.exit ], [ %stack.sroa.25.4, %land.lhs.true19.i ], [ %stack.sroa.25.4, %land.lhs.true13.i ], [ %stack.sroa.25.4, %land.lhs.true7.i ], [ %stack.sroa.25.4, %land.lhs.true.i ], [ %stack.sroa.25.4, %do.body ]
  %stack.sroa.3.1 = phi i32 [ %inc.i159, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit164 ], [ %sub, %if.else ], [ %sub, %_Z9IntersectRK12btDbvtAabbMmS1_.exit ], [ %sub, %land.lhs.true19.i ], [ %sub, %land.lhs.true13.i ], [ %sub, %land.lhs.true7.i ], [ %sub, %land.lhs.true.i ], [ %sub, %do.body ]
  %stack.sroa.38200.9 = phi ptr [ %stack.sroa.38200.6, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit164 ], [ %stack.sroa.38200.4, %if.else ], [ %stack.sroa.38200.4, %_Z9IntersectRK12btDbvtAabbMmS1_.exit ], [ %stack.sroa.38200.4, %land.lhs.true19.i ], [ %stack.sroa.38200.4, %land.lhs.true13.i ], [ %stack.sroa.38200.4, %land.lhs.true7.i ], [ %stack.sroa.38200.4, %land.lhs.true.i ], [ %stack.sroa.38200.4, %do.body ]
  %cmp = icmp sgt i32 %stack.sroa.3.1, 0
  br i1 %cmp, label %do.body, label %if.then3.i.i.i171

if.then3.i.i.i171:                                ; preds = %if.end19
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stack.sroa.38200.9)
  br label %if.end24

if.then3.i.i.i178:                                ; preds = %if.then3.i.i.i153, %if.then.i.i.i133, %if.then3.i.i.i108, %if.then.i.i.i88, %if.else
  %stack.sroa.38200.8 = phi ptr [ %stack.sroa.38200.5, %if.then3.i.i.i153 ], [ %stack.sroa.38200.5, %if.then.i.i.i133 ], [ %stack.sroa.38200.4, %if.then3.i.i.i108 ], [ %stack.sroa.38200.4, %if.then.i.i.i88 ], [ %stack.sroa.38200.4, %if.else ]
  %40 = landingpad { ptr, i32 }
          cleanup
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stack.sroa.38200.8)
          to label %invoke.cont21 unwind label %terminate.lpad

invoke.cont21:                                    ; preds = %if.then3.i.i.i178
  resume { ptr, i32 } %40

if.end24:                                         ; preds = %if.then3.i.i.i171, %entry
  ret void

terminate.lpad:                                   ; preds = %if.then3.i.i.i178
  %41 = landingpad { ptr, i32 }
          catch ptr null
  %42 = extractvalue { ptr, i32 } %41, 0
  tail call void @__clang_call_terminate(ptr %42) #39
  unreachable
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody23defaultCollisionHandlerEPS_(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %psb) local_unnamed_addr #4 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %docollide = alloca %"struct.btSoftColliders::CollideCL_SS", align 8
  %docollide12 = alloca %"struct.btSoftColliders::CollideVF_SS", align 8
  %collisions = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 25
  %0 = load i32, ptr %collisions, align 4, !tbaa !141
  %collisions3 = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 2, i32 25
  %1 = load i32, ptr %collisions3, align 4, !tbaa !141
  %and = and i32 %0, 48
  %and4 = and i32 %and, %1
  switch i32 %and4, label %sw.epilog [
    i32 32, label %sw.bb
    i32 16, label %sw.bb9
  ]

sw.bb:                                            ; preds = %entry
  %cmp.not = icmp eq ptr %this, %psb
  %and7 = and i32 %1, 64
  %tobool.not = icmp eq i32 %and7, 0
  %or.cond = and i1 %cmp.not, %tobool.not
  br i1 %or.cond, label %sw.epilog, label %if.then

if.then:                                          ; preds = %sw.bb
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %docollide) #38
  %erp.i.i = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %docollide, i64 0, i32 1
  store float 1.000000e+00, ptr %erp.i.i, align 8, !tbaa !574
  %idt.i.i = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %docollide, i64 0, i32 2
  %2 = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %docollide, i64 0, i32 5
  store i32 0, ptr %2, align 8
  store ptr getelementptr inbounds ({ [9 x ptr] }, ptr @_ZTVN15btSoftColliders12CollideCL_SSE, i64 0, inrange i32 0, i64 2), ptr %docollide, align 8, !tbaa !5
  %isdt.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3, i32 1
  %3 = load float, ptr %isdt.i, align 4, !tbaa !421
  store float %3, ptr %idt.i.i, align 4, !tbaa !579
  %m_collisionShape.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %4 = load ptr, ptr %m_collisionShape.i.i, align 8, !tbaa !157
  %vtable.i = load ptr, ptr %4, align 8, !tbaa !5
  %vfn.i = getelementptr inbounds ptr, ptr %vtable.i, i64 11
  %5 = load ptr, ptr %vfn.i, align 8
  %call2.i62 = tail call noundef float %5(ptr noundef nonnull align 8 dereferenceable(24) %4)
  %m_collisionShape.i23.i = getelementptr inbounds %class.btCollisionObject, ptr %psb, i64 0, i32 9
  %6 = load ptr, ptr %m_collisionShape.i23.i, align 8, !tbaa !157
  %vtable4.i = load ptr, ptr %6, align 8, !tbaa !5
  %vfn5.i = getelementptr inbounds ptr, ptr %vtable4.i, i64 11
  %7 = load ptr, ptr %vfn5.i, align 8
  %call6.i63 = tail call noundef float %7(ptr noundef nonnull align 8 dereferenceable(24) %6)
  %add.i = fadd float %call2.i62, %call6.i63
  %m_margin.i = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %docollide, i64 0, i32 3
  store float %add.i, ptr %m_margin.i, align 8, !tbaa !580
  %kDF.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 7
  %kDF8.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 2, i32 7
  %8 = load float, ptr %kDF.i, align 4
  %9 = load float, ptr %kDF8.i, align 4
  %cmp.i.i = fcmp olt float %8, %9
  %10 = select i1 %cmp.i.i, float %8, float %9
  %friction.i = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %docollide, i64 0, i32 4
  store float %10, ptr %friction.i, align 4, !tbaa !582
  %bodies.i = getelementptr inbounds %"struct.btSoftColliders::CollideCL_SS", ptr %docollide, i64 0, i32 1
  store ptr %this, ptr %bodies.i, align 8, !tbaa !219
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftColliders::CollideCL_SS", ptr %docollide, i64 0, i32 1, i64 1
  store ptr %psb, ptr %arrayidx11.i, align 8, !tbaa !219
  %m_cdbvt.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  %11 = load ptr, ptr %m_cdbvt.i, align 8, !tbaa !583
  %m_cdbvt13.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 23
  %12 = load ptr, ptr %m_cdbvt13.i, align 8, !tbaa !583
  call void @_ZN6btDbvt9collideTTEPK10btDbvtNodeS2_RNS_8ICollideE(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt.i, ptr noundef %11, ptr noundef %12, ptr noundef nonnull align 8 dereferenceable(8) %docollide)
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %docollide) #38
  br label %sw.epilog

sw.bb9:                                           ; preds = %entry
  %cmp10.not = icmp eq ptr %this, %psb
  br i1 %cmp10.not, label %sw.epilog, label %if.then11

if.then11:                                        ; preds = %sw.bb9
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %docollide12) #38
  store ptr getelementptr inbounds ({ [9 x ptr] }, ptr @_ZTVN15btSoftColliders12CollideVF_SSE, i64 0, inrange i32 0, i64 2), ptr %docollide12, align 8, !tbaa !5
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %13 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable = load ptr, ptr %13, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 11
  %14 = load ptr, ptr %vfn, align 8
  %call16 = tail call noundef float %14(ptr noundef nonnull align 8 dereferenceable(24) %13)
  %m_collisionShape.i64 = getelementptr inbounds %class.btCollisionObject, ptr %psb, i64 0, i32 9
  %15 = load ptr, ptr %m_collisionShape.i64, align 8, !tbaa !157
  %vtable19 = load ptr, ptr %15, align 8, !tbaa !5
  %vfn20 = getelementptr inbounds ptr, ptr %vtable19, i64 11
  %16 = load ptr, ptr %vfn20, align 8
  %call22 = tail call noundef float %16(ptr noundef nonnull align 8 dereferenceable(24) %15)
  %add = fadd float %call16, %call22
  %mrg = getelementptr inbounds %"struct.btSoftColliders::CollideVF_SS", ptr %docollide12, i64 0, i32 2
  store float %add, ptr %mrg, align 8, !tbaa !591
  %psb23 = getelementptr inbounds %"struct.btSoftColliders::CollideVF_SS", ptr %docollide12, i64 0, i32 1
  store ptr %this, ptr %psb23, align 8, !tbaa !219
  %arrayidx25 = getelementptr inbounds %"struct.btSoftColliders::CollideVF_SS", ptr %docollide12, i64 0, i32 1, i64 1
  store ptr %psb, ptr %arrayidx25, align 8, !tbaa !219
  %m_ndbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  %17 = load ptr, ptr %m_ndbvt, align 8, !tbaa !162
  %m_fdbvt = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 22
  %18 = load ptr, ptr %m_fdbvt, align 8, !tbaa !593
  call void @_ZN6btDbvt9collideTTEPK10btDbvtNodeS2_RNS_8ICollideE(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt, ptr noundef %17, ptr noundef %18, ptr noundef nonnull align 8 dereferenceable(8) %docollide12)
  store ptr %psb, ptr %psb23, align 8, !tbaa !219
  store ptr %this, ptr %arrayidx25, align 8, !tbaa !219
  %m_ndbvt41 = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 21
  %19 = load ptr, ptr %m_ndbvt41, align 8, !tbaa !162
  %m_fdbvt48 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 22
  %20 = load ptr, ptr %m_fdbvt48, align 8, !tbaa !593
  call void @_ZN6btDbvt9collideTTEPK10btDbvtNodeS2_RNS_8ICollideE(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt41, ptr noundef %19, ptr noundef %20, ptr noundef nonnull align 8 dereferenceable(8) %docollide12)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %docollide12) #38
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb, %entry, %sw.bb9, %if.then11, %if.then
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN6btDbvt9collideTTEPK10btDbvtNodeS2_RNS_8ICollideE(ptr noundef nonnull align 8 dereferenceable(64) %this, ptr noundef %root0, ptr noundef %root1, ptr noundef nonnull align 8 dereferenceable(8) %policy) local_unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %ref.tmp14 = alloca %"struct.btDbvt::sStkNN", align 8
  %tobool = icmp ne ptr %root0, null
  %tobool2 = icmp ne ptr %root1, null
  %or.cond = and i1 %tobool, %tobool2
  br i1 %or.cond, label %if.then.i.i, label %if.end165

if.then.i.i:                                      ; preds = %entry
  %call.i.i.i.i215 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 2048, i32 noundef 16)
  store ptr %root0, ptr %call.i.i.i.i215, align 8, !tbaa.struct !594
  %ref.tmp4.sroa.4.0..sroa_idx = getelementptr inbounds i8, ptr %call.i.i.i.i215, i64 8
  store ptr %root1, ptr %ref.tmp4.sroa.4.0..sroa_idx, align 8, !tbaa.struct !595
  br label %do.body

do.body:                                          ; preds = %if.end158, %if.then.i.i
  %stkStack.sroa.3.0 = phi i32 [ 128, %if.then.i.i ], [ %stkStack.sroa.3.1, %if.end158 ]
  %stkStack.sroa.14.2 = phi i32 [ 128, %if.then.i.i ], [ %stkStack.sroa.14.5, %if.end158 ]
  %stkStack.sroa.21332.2 = phi ptr [ %call.i.i.i.i215, %if.then.i.i ], [ %stkStack.sroa.21332.5, %if.end158 ]
  %treshold.0 = phi i32 [ 124, %if.then.i.i ], [ %treshold.1, %if.end158 ]
  %depth.0 = phi i32 [ 1, %if.then.i.i ], [ %depth.1, %if.end158 ]
  %dec = add nsw i32 %depth.0, -1
  %idxprom.i = sext i32 %dec to i64
  %arrayidx.i = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.2, i64 %idxprom.i
  %p.sroa.0.0.copyload = load ptr, ptr %arrayidx.i, align 8, !tbaa.struct !594
  %p.sroa.23.0.call10.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 8
  %p.sroa.23.0.copyload = load ptr, ptr %p.sroa.23.0.call10.sroa_idx, align 8, !tbaa.struct !595
  %cmp = icmp sgt i32 %dec, %treshold.0
  br i1 %cmp, label %if.then11, label %if.end

if.then11:                                        ; preds = %do.body
  %mul = shl nsw i32 %stkStack.sroa.3.0, 1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp14)
  %cmp4.i219 = icmp slt i32 %stkStack.sroa.3.0, %mul
  br i1 %cmp4.i219, label %if.then5.i223, label %invoke.cont17

if.then5.i223:                                    ; preds = %if.then11
  %cmp.i.i222 = icmp slt i32 %stkStack.sroa.14.2, %mul
  br i1 %cmp.i.i222, label %if.then.i.i224, label %for.body10.lr.ph.i245

if.then.i.i224:                                   ; preds = %if.then5.i223
  %tobool.not.i.i.i = icmp eq i32 %stkStack.sroa.3.0, 0
  br i1 %tobool.not.i.i.i, label %if.then3.i.i.i242, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i224
  %conv.i.i.i.i = sext i32 %mul to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 4
  %call.i.i.i.i252 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
          to label %_ZN20btAlignedObjectArrayIN6btDbvt6sStkNNEE8allocateEi.exit.i.i unwind label %lpad15

_ZN20btAlignedObjectArrayIN6btDbvt6sStkNNEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i
  %cmp7.i.i.i226 = icmp sgt i32 %stkStack.sroa.3.0, 0
  br i1 %cmp7.i.i.i226, label %for.body.lr.ph.i.i.i229, label %if.then3.i.i.i242

for.body.lr.ph.i.i.i229:                          ; preds = %_ZN20btAlignedObjectArrayIN6btDbvt6sStkNNEE8allocateEi.exit.i.i
  %wide.trip.count.i.i.i228 = zext i32 %stkStack.sroa.3.0 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i228, 1
  %0 = icmp eq i32 %stkStack.sroa.3.0, 1
  br i1 %0, label %if.then3.i.i.i242.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i229.new

for.body.lr.ph.i.i.i229.new:                      ; preds = %for.body.lr.ph.i.i.i229
  %unroll_iter = and i64 %wide.trip.count.i.i.i228, 4294967294
  br label %for.body.i.i.i235

for.body.i.i.i235:                                ; preds = %for.body.i.i.i235, %for.body.lr.ph.i.i.i229.new
  %indvars.iv.i.i.i230 = phi i64 [ 0, %for.body.lr.ph.i.i.i229.new ], [ %indvars.iv.next.i.i.i233.1, %for.body.i.i.i235 ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i229.new ], [ %niter.next.1, %for.body.i.i.i235 ]
  %arrayidx.i.i.i231 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %call.i.i.i.i252, i64 %indvars.iv.i.i.i230
  %arrayidx3.i.i.i232 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.2, i64 %indvars.iv.i.i.i230
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx.i.i.i231, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx3.i.i.i232, i64 16, i1 false), !tbaa.struct !594
  %indvars.iv.next.i.i.i233 = or i64 %indvars.iv.i.i.i230, 1
  %arrayidx.i.i.i231.1 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %call.i.i.i.i252, i64 %indvars.iv.next.i.i.i233
  %arrayidx3.i.i.i232.1 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.2, i64 %indvars.iv.next.i.i.i233
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx.i.i.i231.1, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx3.i.i.i232.1, i64 16, i1 false), !tbaa.struct !594
  %indvars.iv.next.i.i.i233.1 = add nuw nsw i64 %indvars.iv.i.i.i230, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %if.then3.i.i.i242.loopexit.unr-lcssa, label %for.body.i.i.i235

if.then3.i.i.i242.loopexit.unr-lcssa:             ; preds = %for.body.i.i.i235, %for.body.lr.ph.i.i.i229
  %indvars.iv.i.i.i230.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i229 ], [ %indvars.iv.next.i.i.i233.1, %for.body.i.i.i235 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %if.then3.i.i.i242, label %for.body.i.i.i235.epil

for.body.i.i.i235.epil:                           ; preds = %if.then3.i.i.i242.loopexit.unr-lcssa
  %arrayidx.i.i.i231.epil = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %call.i.i.i.i252, i64 %indvars.iv.i.i.i230.unr
  %arrayidx3.i.i.i232.epil = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.2, i64 %indvars.iv.i.i.i230.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx.i.i.i231.epil, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx3.i.i.i232.epil, i64 16, i1 false), !tbaa.struct !594
  br label %if.then3.i.i.i242

if.then3.i.i.i242:                                ; preds = %for.body.i.i.i235.epil, %if.then3.i.i.i242.loopexit.unr-lcssa, %if.then.i.i224, %_ZN20btAlignedObjectArrayIN6btDbvt6sStkNNEE8allocateEi.exit.i.i
  %retval.0.i.i.i372 = phi ptr [ %call.i.i.i.i252, %_ZN20btAlignedObjectArrayIN6btDbvt6sStkNNEE8allocateEi.exit.i.i ], [ null, %if.then.i.i224 ], [ %call.i.i.i.i252, %if.then3.i.i.i242.loopexit.unr-lcssa ], [ %call.i.i.i.i252, %for.body.i.i.i235.epil ]
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stkStack.sroa.21332.2)
          to label %for.body10.lr.ph.i245 unwind label %lpad15

for.body10.lr.ph.i245:                            ; preds = %if.then3.i.i.i242, %if.then5.i223
  %stkStack.sroa.14.3 = phi i32 [ %stkStack.sroa.14.2, %if.then5.i223 ], [ %mul, %if.then3.i.i.i242 ]
  %stkStack.sroa.21332.3 = phi ptr [ %stkStack.sroa.21332.2, %if.then5.i223 ], [ %retval.0.i.i.i372, %if.then3.i.i.i242 ]
  %1 = sext i32 %stkStack.sroa.3.0 to i64
  %wide.trip.count.i = sext i32 %mul to i64
  %2 = sub nsw i64 %wide.trip.count.i, %1
  %3 = xor i64 %1, -1
  %4 = add nsw i64 %3, %wide.trip.count.i
  %xtraiter382 = and i64 %2, 3
  %lcmp.mod383.not = icmp eq i64 %xtraiter382, 0
  br i1 %lcmp.mod383.not, label %for.body10.i250.prol.loopexit, label %for.body10.i250.prol

for.body10.i250.prol:                             ; preds = %for.body10.lr.ph.i245, %for.body10.i250.prol
  %indvars.iv.i246.prol = phi i64 [ %indvars.iv.next.i248.prol, %for.body10.i250.prol ], [ %1, %for.body10.lr.ph.i245 ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body10.i250.prol ], [ 0, %for.body10.lr.ph.i245 ]
  %arrayidx13.i247.prol = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.3, i64 %indvars.iv.i246.prol
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx13.i247.prol, ptr noundef nonnull align 8 dereferenceable(16) %ref.tmp14, i64 16, i1 false), !tbaa.struct !594
  %indvars.iv.next.i248.prol = add nsw i64 %indvars.iv.i246.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter382
  br i1 %prol.iter.cmp.not, label %for.body10.i250.prol.loopexit, label %for.body10.i250.prol, !llvm.loop !596

for.body10.i250.prol.loopexit:                    ; preds = %for.body10.i250.prol, %for.body10.lr.ph.i245
  %indvars.iv.i246.unr = phi i64 [ %1, %for.body10.lr.ph.i245 ], [ %indvars.iv.next.i248.prol, %for.body10.i250.prol ]
  %5 = icmp ult i64 %4, 3
  br i1 %5, label %invoke.cont17, label %for.body10.i250

for.body10.i250:                                  ; preds = %for.body10.i250.prol.loopexit, %for.body10.i250
  %indvars.iv.i246 = phi i64 [ %indvars.iv.next.i248.3, %for.body10.i250 ], [ %indvars.iv.i246.unr, %for.body10.i250.prol.loopexit ]
  %arrayidx13.i247 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.3, i64 %indvars.iv.i246
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx13.i247, ptr noundef nonnull align 8 dereferenceable(16) %ref.tmp14, i64 16, i1 false), !tbaa.struct !594
  %indvars.iv.next.i248 = add nsw i64 %indvars.iv.i246, 1
  %arrayidx13.i247.1 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.3, i64 %indvars.iv.next.i248
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx13.i247.1, ptr noundef nonnull align 8 dereferenceable(16) %ref.tmp14, i64 16, i1 false), !tbaa.struct !594
  %indvars.iv.next.i248.1 = add nsw i64 %indvars.iv.i246, 2
  %arrayidx13.i247.2 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.3, i64 %indvars.iv.next.i248.1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx13.i247.2, ptr noundef nonnull align 8 dereferenceable(16) %ref.tmp14, i64 16, i1 false), !tbaa.struct !594
  %indvars.iv.next.i248.2 = add nsw i64 %indvars.iv.i246, 3
  %arrayidx13.i247.3 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.3, i64 %indvars.iv.next.i248.2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx13.i247.3, ptr noundef nonnull align 8 dereferenceable(16) %ref.tmp14, i64 16, i1 false), !tbaa.struct !594
  %indvars.iv.next.i248.3 = add nsw i64 %indvars.iv.i246, 4
  %exitcond.not.i249.3 = icmp eq i64 %indvars.iv.next.i248.3, %wide.trip.count.i
  br i1 %exitcond.not.i249.3, label %invoke.cont17, label %for.body10.i250

invoke.cont17:                                    ; preds = %for.body10.i250.prol.loopexit, %for.body10.i250, %if.then11
  %stkStack.sroa.14.4 = phi i32 [ %stkStack.sroa.14.2, %if.then11 ], [ %stkStack.sroa.14.3, %for.body10.i250 ], [ %stkStack.sroa.14.3, %for.body10.i250.prol.loopexit ]
  %stkStack.sroa.21332.4 = phi ptr [ %stkStack.sroa.21332.2, %if.then11 ], [ %stkStack.sroa.21332.3, %for.body10.i250 ], [ %stkStack.sroa.21332.3, %for.body10.i250.prol.loopexit ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp14)
  %sub = add nsw i32 %mul, -4
  br label %if.end

lpad8:                                            ; preds = %if.else151
  %6 = landingpad { ptr, i32 }
          cleanup
  br label %if.then3.i.i.i321

lpad15:                                           ; preds = %if.then3.i.i.i242, %if.then.i.i.i
  %7 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp14)
  br label %if.then3.i.i.i321

if.end:                                           ; preds = %invoke.cont17, %do.body
  %stkStack.sroa.3.1 = phi i32 [ %mul, %invoke.cont17 ], [ %stkStack.sroa.3.0, %do.body ]
  %stkStack.sroa.14.5 = phi i32 [ %stkStack.sroa.14.4, %invoke.cont17 ], [ %stkStack.sroa.14.2, %do.body ]
  %stkStack.sroa.21332.5 = phi ptr [ %stkStack.sroa.21332.4, %invoke.cont17 ], [ %stkStack.sroa.21332.2, %do.body ]
  %treshold.1 = phi i32 [ %sub, %invoke.cont17 ], [ %treshold.0, %do.body ]
  %cmp20 = icmp eq ptr %p.sroa.0.0.copyload, %p.sroa.23.0.copyload
  br i1 %cmp20, label %invoke.cont23, label %if.else

invoke.cont23:                                    ; preds = %if.end
  %arrayidx.i.i = getelementptr inbounds %struct.btDbvtNode, ptr %p.sroa.0.0.copyload, i64 0, i32 2, i32 0, i64 1
  %8 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !164
  %cmp.i.i256.not = icmp eq ptr %8, null
  br i1 %cmp.i.i256.not, label %if.end158, label %if.then25

if.then25:                                        ; preds = %invoke.cont23
  %9 = getelementptr inbounds %struct.btDbvtNode, ptr %p.sroa.0.0.copyload, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !164
  %arrayidx.i260 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.5, i64 %idxprom.i
  store ptr %10, ptr %arrayidx.i260, align 8, !tbaa.struct !594
  %ref.tmp26.sroa.4.0.arrayidx.i260.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i260, i64 8
  store ptr %10, ptr %ref.tmp26.sroa.4.0.arrayidx.i260.sroa_idx, align 8, !tbaa.struct !595
  %11 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !164
  %inc41 = add nsw i32 %depth.0, 1
  %idxprom.i263 = sext i32 %depth.0 to i64
  %arrayidx.i264 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.5, i64 %idxprom.i263
  store ptr %11, ptr %arrayidx.i264, align 8, !tbaa.struct !594
  %ref.tmp34.sroa.4.0.arrayidx.i264.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i264, i64 8
  store ptr %11, ptr %ref.tmp34.sroa.4.0.arrayidx.i264.sroa_idx, align 8, !tbaa.struct !595
  %12 = load ptr, ptr %9, align 8, !tbaa !164
  %13 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !164
  %inc51 = add nsw i32 %depth.0, 2
  %idxprom.i267 = sext i32 %inc41 to i64
  %arrayidx.i268 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.5, i64 %idxprom.i267
  store ptr %12, ptr %arrayidx.i268, align 8, !tbaa.struct !594
  br label %if.end158.sink.split

if.else:                                          ; preds = %if.end
  %14 = load float, ptr %p.sroa.0.0.copyload, align 4, !tbaa !137
  %mx.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %p.sroa.23.0.copyload, i64 0, i32 1
  %15 = load float, ptr %mx.i, align 4, !tbaa !137
  %cmp.i269 = fcmp ugt float %14, %15
  br i1 %cmp.i269, label %if.end158, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.else
  %mx2.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %p.sroa.0.0.copyload, i64 0, i32 1
  %16 = load float, ptr %mx2.i, align 4, !tbaa !137
  %17 = load float, ptr %p.sroa.23.0.copyload, align 4, !tbaa !137
  %cmp6.i = fcmp ult float %16, %17
  br i1 %cmp6.i, label %if.end158, label %land.lhs.true7.i

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i
  %arrayidx.i.i270 = getelementptr inbounds [4 x float], ptr %p.sroa.0.0.copyload, i64 0, i64 1
  %18 = load float, ptr %arrayidx.i.i270, align 4, !tbaa !137
  %arrayidx.i40.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %p.sroa.23.0.copyload, i64 0, i32 1, i32 0, i64 1
  %19 = load float, ptr %arrayidx.i40.i, align 4, !tbaa !137
  %cmp12.i = fcmp ugt float %18, %19
  br i1 %cmp12.i, label %if.end158, label %land.lhs.true13.i

land.lhs.true13.i:                                ; preds = %land.lhs.true7.i
  %arrayidx.i41.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %p.sroa.0.0.copyload, i64 0, i32 1, i32 0, i64 1
  %20 = load float, ptr %arrayidx.i41.i, align 4, !tbaa !137
  %arrayidx.i42.i = getelementptr inbounds [4 x float], ptr %p.sroa.23.0.copyload, i64 0, i64 1
  %21 = load float, ptr %arrayidx.i42.i, align 4, !tbaa !137
  %cmp18.i = fcmp ult float %20, %21
  br i1 %cmp18.i, label %if.end158, label %land.lhs.true19.i

land.lhs.true19.i:                                ; preds = %land.lhs.true13.i
  %arrayidx.i43.i = getelementptr inbounds [4 x float], ptr %p.sroa.0.0.copyload, i64 0, i64 2
  %22 = load float, ptr %arrayidx.i43.i, align 4, !tbaa !137
  %arrayidx.i44.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %p.sroa.23.0.copyload, i64 0, i32 1, i32 0, i64 2
  %23 = load float, ptr %arrayidx.i44.i, align 4, !tbaa !137
  %cmp24.i = fcmp ugt float %22, %23
  br i1 %cmp24.i, label %if.end158, label %_Z9IntersectRK12btDbvtAabbMmS1_.exit

_Z9IntersectRK12btDbvtAabbMmS1_.exit:             ; preds = %land.lhs.true19.i
  %arrayidx.i45.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %p.sroa.0.0.copyload, i64 0, i32 1, i32 0, i64 2
  %24 = load float, ptr %arrayidx.i45.i, align 4, !tbaa !137
  %arrayidx.i46.i = getelementptr inbounds [4 x float], ptr %p.sroa.23.0.copyload, i64 0, i64 2
  %25 = load float, ptr %arrayidx.i46.i, align 4, !tbaa !137
  %cmp29.i = fcmp ult float %24, %25
  br i1 %cmp29.i, label %if.end158, label %invoke.cont61

invoke.cont61:                                    ; preds = %_Z9IntersectRK12btDbvtAabbMmS1_.exit
  %arrayidx.i.i271 = getelementptr inbounds %struct.btDbvtNode, ptr %p.sroa.0.0.copyload, i64 0, i32 2, i32 0, i64 1
  %26 = load ptr, ptr %arrayidx.i.i271, align 8, !tbaa !164
  %cmp.i.i272.not = icmp eq ptr %26, null
  %arrayidx.i.i299 = getelementptr inbounds %struct.btDbvtNode, ptr %p.sroa.23.0.copyload, i64 0, i32 2, i32 0, i64 1
  %27 = load ptr, ptr %arrayidx.i.i299, align 8, !tbaa !164
  %cmp.i.i300.not = icmp eq ptr %27, null
  br i1 %cmp.i.i272.not, label %invoke.cont130, label %invoke.cont65

invoke.cont65:                                    ; preds = %invoke.cont61
  %28 = getelementptr inbounds %struct.btDbvtNode, ptr %p.sroa.0.0.copyload, i64 0, i32 2
  %29 = load ptr, ptr %28, align 8, !tbaa !164
  br i1 %cmp.i.i300.not, label %if.else108, label %if.then67

if.then67:                                        ; preds = %invoke.cont65
  %30 = getelementptr inbounds %struct.btDbvtNode, ptr %p.sroa.23.0.copyload, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !164
  %arrayidx.i278 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.5, i64 %idxprom.i
  store ptr %29, ptr %arrayidx.i278, align 8, !tbaa.struct !594
  %ref.tmp68.sroa.4.0.arrayidx.i278.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i278, i64 8
  store ptr %31, ptr %ref.tmp68.sroa.4.0.arrayidx.i278.sroa_idx, align 8, !tbaa.struct !595
  %32 = load ptr, ptr %arrayidx.i.i271, align 8, !tbaa !164
  %33 = load ptr, ptr %30, align 8, !tbaa !164
  %inc85 = add nsw i32 %depth.0, 1
  %idxprom.i281 = sext i32 %depth.0 to i64
  %arrayidx.i282 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.5, i64 %idxprom.i281
  store ptr %32, ptr %arrayidx.i282, align 8, !tbaa.struct !594
  %ref.tmp78.sroa.4.0.arrayidx.i282.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i282, i64 8
  store ptr %33, ptr %ref.tmp78.sroa.4.0.arrayidx.i282.sroa_idx, align 8, !tbaa.struct !595
  %34 = load ptr, ptr %28, align 8, !tbaa !164
  %35 = load ptr, ptr %arrayidx.i.i299, align 8, !tbaa !164
  %inc95 = add nsw i32 %depth.0, 2
  %idxprom.i285 = sext i32 %inc85 to i64
  %arrayidx.i286 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.5, i64 %idxprom.i285
  store ptr %34, ptr %arrayidx.i286, align 8, !tbaa.struct !594
  %ref.tmp88.sroa.4.0.arrayidx.i286.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i286, i64 8
  store ptr %35, ptr %ref.tmp88.sroa.4.0.arrayidx.i286.sroa_idx, align 8, !tbaa.struct !595
  %36 = load ptr, ptr %arrayidx.i.i271, align 8, !tbaa !164
  %37 = load ptr, ptr %arrayidx.i.i299, align 8, !tbaa !164
  %inc105 = add nsw i32 %depth.0, 3
  %idxprom.i289 = sext i32 %inc95 to i64
  %arrayidx.i290 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.5, i64 %idxprom.i289
  store ptr %36, ptr %arrayidx.i290, align 8, !tbaa.struct !594
  br label %if.end158.sink.split

if.else108:                                       ; preds = %invoke.cont65
  %arrayidx.i294 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.5, i64 %idxprom.i
  store ptr %29, ptr %arrayidx.i294, align 8, !tbaa.struct !594
  %ref.tmp109.sroa.4.0.arrayidx.i294.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i294, i64 8
  store ptr %p.sroa.23.0.copyload, ptr %ref.tmp109.sroa.4.0.arrayidx.i294.sroa_idx, align 8, !tbaa.struct !595
  %38 = load ptr, ptr %arrayidx.i.i271, align 8, !tbaa !164
  %inc124 = add nsw i32 %depth.0, 1
  %idxprom.i297 = sext i32 %depth.0 to i64
  %arrayidx.i298 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.5, i64 %idxprom.i297
  store ptr %38, ptr %arrayidx.i298, align 8, !tbaa.struct !594
  br label %if.end158.sink.split

invoke.cont130:                                   ; preds = %invoke.cont61
  br i1 %cmp.i.i300.not, label %if.else151, label %if.then132

if.then132:                                       ; preds = %invoke.cont130
  %39 = getelementptr inbounds %struct.btDbvtNode, ptr %p.sroa.23.0.copyload, i64 0, i32 2
  %40 = load ptr, ptr %39, align 8, !tbaa !164
  %arrayidx.i304 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.5, i64 %idxprom.i
  store ptr %p.sroa.0.0.copyload, ptr %arrayidx.i304, align 8, !tbaa.struct !594
  %ref.tmp133.sroa.4.0.arrayidx.i304.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i304, i64 8
  store ptr %40, ptr %ref.tmp133.sroa.4.0.arrayidx.i304.sroa_idx, align 8, !tbaa.struct !595
  %41 = load ptr, ptr %arrayidx.i.i299, align 8, !tbaa !164
  %inc148 = add nsw i32 %depth.0, 1
  %idxprom.i307 = sext i32 %depth.0 to i64
  %arrayidx.i308 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21332.5, i64 %idxprom.i307
  store ptr %p.sroa.0.0.copyload, ptr %arrayidx.i308, align 8, !tbaa.struct !594
  br label %if.end158.sink.split

if.else151:                                       ; preds = %invoke.cont130
  %vtable = load ptr, ptr %policy, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 2
  %42 = load ptr, ptr %vfn, align 8
  invoke void %42(ptr noundef nonnull align 8 dereferenceable(8) %policy, ptr noundef nonnull %p.sroa.0.0.copyload, ptr noundef nonnull %p.sroa.23.0.copyload)
          to label %if.end158 unwind label %lpad8

if.end158.sink.split:                             ; preds = %if.then25, %if.else108, %if.then67, %if.then132
  %arrayidx.i308.sink = phi ptr [ %arrayidx.i308, %if.then132 ], [ %arrayidx.i290, %if.then67 ], [ %arrayidx.i298, %if.else108 ], [ %arrayidx.i268, %if.then25 ]
  %.sink = phi ptr [ %41, %if.then132 ], [ %37, %if.then67 ], [ %p.sroa.23.0.copyload, %if.else108 ], [ %13, %if.then25 ]
  %depth.1.ph = phi i32 [ %inc148, %if.then132 ], [ %inc105, %if.then67 ], [ %inc124, %if.else108 ], [ %inc51, %if.then25 ]
  %ref.tmp142.sroa.4.0.arrayidx.i308.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i308.sink, i64 8
  store ptr %.sink, ptr %ref.tmp142.sroa.4.0.arrayidx.i308.sroa_idx, align 8
  br label %if.end158

if.end158:                                        ; preds = %if.end158.sink.split, %if.else, %land.lhs.true.i, %land.lhs.true7.i, %land.lhs.true13.i, %land.lhs.true19.i, %_Z9IntersectRK12btDbvtAabbMmS1_.exit, %if.else151, %invoke.cont23
  %depth.1 = phi i32 [ %dec, %invoke.cont23 ], [ %dec, %if.else151 ], [ %dec, %_Z9IntersectRK12btDbvtAabbMmS1_.exit ], [ %dec, %land.lhs.true19.i ], [ %dec, %land.lhs.true13.i ], [ %dec, %land.lhs.true7.i ], [ %dec, %land.lhs.true.i ], [ %dec, %if.else ], [ %depth.1.ph, %if.end158.sink.split ]
  %tobool159.not = icmp eq i32 %depth.1, 0
  br i1 %tobool159.not, label %if.then3.i.i.i314, label %do.body

if.then3.i.i.i314:                                ; preds = %if.end158
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stkStack.sroa.21332.5)
  br label %if.end165

if.then3.i.i.i321:                                ; preds = %lpad15, %lpad8
  %stkStack.sroa.21332.6 = phi ptr [ %stkStack.sroa.21332.5, %lpad8 ], [ %stkStack.sroa.21332.2, %lpad15 ]
  %.pn.pn = phi { ptr, i32 } [ %6, %lpad8 ], [ %7, %lpad15 ]
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stkStack.sroa.21332.6)
          to label %invoke.cont161 unwind label %terminate.lpad

invoke.cont161:                                   ; preds = %if.then3.i.i.i321
  resume { ptr, i32 } %.pn.pn

if.end165:                                        ; preds = %if.then3.i.i.i314, %entry
  ret void

terminate.lpad:                                   ; preds = %if.then3.i.i.i321
  %43 = landingpad { ptr, i32 }
          catch ptr null
  %44 = extractvalue { ptr, i32 } %43, 0
  tail call void @__clang_call_terminate(ptr %44) #39
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody5JointD0Ev(ptr noundef nonnull align 8 dereferenceable(181) %this) unnamed_addr #29 comdat align 2 {
entry:
  tail call void @llvm.trap() #39
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody5JointD2Ev(ptr noundef nonnull align 8 dereferenceable(181) %this) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody6CJointD0Ev(ptr noundef nonnull align 8 dereferenceable(244) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef i32 @_ZNK10btSoftBody6CJoint4TypeEv(ptr noundef nonnull align 8 dereferenceable(244) %this) unnamed_addr #29 comdat align 2 {
entry:
  ret i32 2
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN17btCollisionObject24checkCollideWithOverrideEPS_(ptr noundef nonnull align 8 dereferenceable(280) %this, ptr noundef %0) unnamed_addr #29 comdat align 2 {
entry:
  ret i1 true
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody17setCollisionShapeEP16btCollisionShape(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %collisionShape) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNK10btSoftBody7getAabbER9btVector3S1_(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(16) %aabbMin, ptr noundef nonnull align 4 dereferenceable(16) %aabbMax) unnamed_addr #29 comdat align 2 {
entry:
  %m_bounds = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %aabbMin, ptr noundef nonnull align 4 dereferenceable(16) %m_bounds, i64 16, i1 false), !tbaa.struct !163
  %arrayidx3 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %aabbMax, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3, i64 16, i1 false), !tbaa.struct !163
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody6LJointD0Ev(ptr noundef nonnull align 8 dereferenceable(216) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef i32 @_ZNK10btSoftBody6LJoint4TypeEv(ptr noundef nonnull align 8 dereferenceable(216) %this) unnamed_addr #29 comdat align 2 {
entry:
  ret i32 0
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody6AJointD0Ev(ptr noundef nonnull align 8 dereferenceable(224) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef i32 @_ZNK10btSoftBody6AJoint4TypeEv(ptr noundef nonnull align 8 dereferenceable(224) %this) unnamed_addr #29 comdat align 2 {
entry:
  ret i32 1
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody15RayFromToCasterD0Ev(ptr noundef nonnull align 8 dereferenceable(76) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodeS3_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %0, ptr noundef %1) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodef(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %n, float noundef %0) unnamed_addr #4 comdat align 2 {
entry:
  %vtable = load ptr, ptr %this, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 3
  %1 = load ptr, ptr %vfn, align 8
  tail call void %1(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %n)
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN6btDbvt8ICollide7DescentEPK10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %0) unnamed_addr #29 comdat align 2 {
entry:
  ret i1 true
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN6btDbvt8ICollide9AllLeavesEPK10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %0) unnamed_addr #29 comdat align 2 {
entry:
  ret i1 true
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.4, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !27
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.4, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.4, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !24
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !27
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !28
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.4, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !29
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.0, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !21
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.0, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.0, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !18
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !21
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !22
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.0, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !23
  ret void
}

declare void @_ZN14btConcaveShapeC2Ev(ptr noundef nonnull align 8 dereferenceable(28)) unnamed_addr #1

declare void @_ZN14btConcaveShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(28)) unnamed_addr #1

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN24btSoftBodyCollisionShapeD0Ev(ptr noundef nonnull align 8 dereferenceable(40) %this) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  invoke void @_ZN14btConcaveShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(40) %this)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  ret void

lpad:                                             ; preds = %entry
  %0 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  resume { ptr, i32 } %0
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNK24btSoftBodyCollisionShape7getAabbERK11btTransformR9btVector3S4_(ptr noundef nonnull align 8 dereferenceable(40) %this, ptr noundef nonnull align 4 dereferenceable(64) %t, ptr noundef nonnull align 4 dereferenceable(16) %aabbMin, ptr noundef nonnull align 4 dereferenceable(16) %aabbMax) unnamed_addr #0 comdat align 2 {
entry:
  %m_body = getelementptr inbounds %class.btSoftBodyCollisionShape, ptr %this, i64 0, i32 1
  %0 = load ptr, ptr %m_body, align 8, !tbaa !154
  %m_bounds = getelementptr inbounds %class.btSoftBody, ptr %0, i64 0, i32 19
  %mins.sroa.0.0.copyload = load float, ptr %m_bounds, align 4, !tbaa.struct !163
  %mins.sroa.7.0.m_bounds.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %0, i64 0, i32 19, i64 0, i32 0, i64 1
  %mins.sroa.7.0.copyload = load float, ptr %mins.sroa.7.0.m_bounds.sroa_idx, align 4, !tbaa.struct !293
  %mins.sroa.11.0.m_bounds.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %0, i64 0, i32 19, i64 0, i32 0, i64 2
  %mins.sroa.11.0.copyload = load float, ptr %mins.sroa.11.0.m_bounds.sroa_idx, align 4, !tbaa.struct !165
  %arrayidx4 = getelementptr inbounds %class.btSoftBody, ptr %0, i64 0, i32 19, i64 1
  %maxs.sroa.0.0.copyload = load float, ptr %arrayidx4, align 4, !tbaa.struct !163
  %maxs.sroa.7.0.arrayidx4.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %0, i64 0, i32 19, i64 1, i32 0, i64 1
  %maxs.sroa.7.0.copyload = load float, ptr %maxs.sroa.7.0.arrayidx4.sroa_idx, align 4, !tbaa.struct !293
  %maxs.sroa.11.0.arrayidx4.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %0, i64 0, i32 19, i64 1, i32 0, i64 2
  %maxs.sroa.11.0.copyload = load float, ptr %maxs.sroa.11.0.arrayidx4.sroa_idx, align 4, !tbaa.struct !165
  %arrayidx5.i.i.i = getelementptr inbounds [4 x float], ptr %t, i64 0, i64 1
  %arrayidx10.i.i.i = getelementptr inbounds [4 x float], ptr %t, i64 0, i64 2
  %m_origin.i.i = getelementptr inbounds %class.btTransform, ptr %t, i64 0, i32 1
  %arrayidx.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 1
  %arrayidx5.i20.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 1, i32 0, i64 1
  %arrayidx10.i23.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 1, i32 0, i64 2
  %1 = load float, ptr %t, align 4, !tbaa !137
  %2 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %3 = load float, ptr %arrayidx10.i.i.i, align 4, !tbaa !137
  %4 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %5 = load float, ptr %arrayidx5.i20.i.i, align 4, !tbaa !137
  %6 = insertelement <2 x float> poison, float %mins.sroa.7.0.copyload, i64 0
  %7 = shufflevector <2 x float> %6, <2 x float> poison, <2 x i32> zeroinitializer
  %8 = insertelement <2 x float> poison, float %2, i64 0
  %9 = insertelement <2 x float> %8, float %5, i64 1
  %10 = fmul <2 x float> %7, %9
  %11 = insertelement <2 x float> poison, float %1, i64 0
  %12 = insertelement <2 x float> %11, float %4, i64 1
  %13 = insertelement <2 x float> poison, float %mins.sroa.0.0.copyload, i64 0
  %14 = shufflevector <2 x float> %13, <2 x float> poison, <2 x i32> zeroinitializer
  %15 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %12, <2 x float> %14, <2 x float> %10)
  %16 = load float, ptr %arrayidx10.i23.i.i, align 4, !tbaa !137
  %17 = insertelement <2 x float> poison, float %3, i64 0
  %18 = insertelement <2 x float> %17, float %16, i64 1
  %19 = insertelement <2 x float> poison, float %mins.sroa.11.0.copyload, i64 0
  %20 = shufflevector <2 x float> %19, <2 x float> poison, <2 x i32> zeroinitializer
  %21 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %18, <2 x float> %20, <2 x float> %15)
  %22 = load <2 x float>, ptr %m_origin.i.i, align 4, !tbaa !137
  %23 = fadd <2 x float> %22, %21
  %arrayidx.i26.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 2
  %24 = load float, ptr %arrayidx.i26.i.i, align 4, !tbaa !137
  %arrayidx5.i27.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 2, i32 0, i64 1
  %25 = load float, ptr %arrayidx5.i27.i.i, align 4, !tbaa !137
  %mul8.i29.i.i = fmul float %mins.sroa.7.0.copyload, %25
  %26 = tail call float @llvm.fmuladd.f32(float %24, float %mins.sroa.0.0.copyload, float %mul8.i29.i.i)
  %arrayidx10.i30.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 2, i32 0, i64 2
  %27 = load float, ptr %arrayidx10.i30.i.i, align 4, !tbaa !137
  %28 = tail call float @llvm.fmuladd.f32(float %27, float %mins.sroa.11.0.copyload, float %26)
  %arrayidx.i32.i.i = getelementptr inbounds %class.btTransform, ptr %t, i64 0, i32 1, i32 0, i64 2
  %29 = load float, ptr %arrayidx.i32.i.i, align 4, !tbaa !137
  %add17.i.i = fadd float %29, %28
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add17.i.i, i64 0
  %30 = extractelement <2 x float> %10, i64 0
  %31 = tail call float @llvm.fmuladd.f32(float %1, float %maxs.sroa.0.0.copyload, float %30)
  %32 = tail call float @llvm.fmuladd.f32(float %3, float %mins.sroa.11.0.copyload, float %31)
  %33 = extractelement <2 x float> %22, i64 0
  %add.i.i84 = fadd float %33, %32
  %34 = extractelement <2 x float> %10, i64 1
  %35 = tail call float @llvm.fmuladd.f32(float %4, float %maxs.sroa.0.0.copyload, float %34)
  %36 = tail call float @llvm.fmuladd.f32(float %16, float %mins.sroa.11.0.copyload, float %35)
  %37 = extractelement <2 x float> %22, i64 1
  %add10.i.i90 = fadd float %37, %36
  %38 = tail call float @llvm.fmuladd.f32(float %24, float %maxs.sroa.0.0.copyload, float %mul8.i29.i.i)
  %39 = tail call float @llvm.fmuladd.f32(float %27, float %mins.sroa.11.0.copyload, float %38)
  %add17.i.i96 = fadd float %29, %39
  %mul8.i.i.i109 = fmul float %maxs.sroa.7.0.copyload, %2
  %40 = tail call float @llvm.fmuladd.f32(float %1, float %maxs.sroa.0.0.copyload, float %mul8.i.i.i109)
  %41 = tail call float @llvm.fmuladd.f32(float %3, float %mins.sroa.11.0.copyload, float %40)
  %add.i.i113 = fadd float %33, %41
  %mul8.i22.i.i116 = fmul float %maxs.sroa.7.0.copyload, %5
  %42 = tail call float @llvm.fmuladd.f32(float %4, float %maxs.sroa.0.0.copyload, float %mul8.i22.i.i116)
  %43 = tail call float @llvm.fmuladd.f32(float %16, float %mins.sroa.11.0.copyload, float %42)
  %add10.i.i119 = fadd float %37, %43
  %mul8.i29.i.i122 = fmul float %maxs.sroa.7.0.copyload, %25
  %44 = tail call float @llvm.fmuladd.f32(float %24, float %maxs.sroa.0.0.copyload, float %mul8.i29.i.i122)
  %45 = tail call float @llvm.fmuladd.f32(float %27, float %mins.sroa.11.0.copyload, float %44)
  %add17.i.i125 = fadd float %29, %45
  %46 = tail call float @llvm.fmuladd.f32(float %1, float %mins.sroa.0.0.copyload, float %mul8.i.i.i109)
  %47 = tail call float @llvm.fmuladd.f32(float %3, float %mins.sroa.11.0.copyload, float %46)
  %add.i.i142 = fadd float %33, %47
  %48 = tail call float @llvm.fmuladd.f32(float %4, float %mins.sroa.0.0.copyload, float %mul8.i22.i.i116)
  %49 = tail call float @llvm.fmuladd.f32(float %16, float %mins.sroa.11.0.copyload, float %48)
  %add10.i.i148 = fadd float %37, %49
  %50 = tail call float @llvm.fmuladd.f32(float %24, float %mins.sroa.0.0.copyload, float %mul8.i29.i.i122)
  %51 = tail call float @llvm.fmuladd.f32(float %27, float %mins.sroa.11.0.copyload, float %50)
  %add17.i.i154 = fadd float %29, %51
  %52 = extractelement <2 x float> %15, i64 0
  %53 = tail call float @llvm.fmuladd.f32(float %3, float %maxs.sroa.11.0.copyload, float %52)
  %add.i.i171 = fadd float %33, %53
  %54 = extractelement <2 x float> %15, i64 1
  %55 = tail call float @llvm.fmuladd.f32(float %16, float %maxs.sroa.11.0.copyload, float %54)
  %add10.i.i177 = fadd float %37, %55
  %56 = tail call float @llvm.fmuladd.f32(float %27, float %maxs.sroa.11.0.copyload, float %26)
  %add17.i.i183 = fadd float %29, %56
  %57 = tail call float @llvm.fmuladd.f32(float %3, float %maxs.sroa.11.0.copyload, float %31)
  %add.i.i200 = fadd float %33, %57
  %58 = tail call float @llvm.fmuladd.f32(float %16, float %maxs.sroa.11.0.copyload, float %35)
  %add10.i.i206 = fadd float %37, %58
  %59 = tail call float @llvm.fmuladd.f32(float %27, float %maxs.sroa.11.0.copyload, float %38)
  %add17.i.i212 = fadd float %29, %59
  %60 = tail call float @llvm.fmuladd.f32(float %3, float %maxs.sroa.11.0.copyload, float %40)
  %add.i.i229 = fadd float %33, %60
  %61 = tail call float @llvm.fmuladd.f32(float %16, float %maxs.sroa.11.0.copyload, float %42)
  %add10.i.i235 = fadd float %37, %61
  %62 = tail call float @llvm.fmuladd.f32(float %27, float %maxs.sroa.11.0.copyload, float %44)
  %add17.i.i241 = fadd float %29, %62
  %63 = tail call float @llvm.fmuladd.f32(float %3, float %maxs.sroa.11.0.copyload, float %46)
  %add.i.i258 = fadd float %33, %63
  %64 = tail call float @llvm.fmuladd.f32(float %16, float %maxs.sroa.11.0.copyload, float %48)
  %add10.i.i264 = fadd float %37, %64
  %65 = tail call float @llvm.fmuladd.f32(float %27, float %maxs.sroa.11.0.copyload, float %50)
  %add17.i.i270 = fadd float %29, %65
  store <2 x float> %23, ptr %aabbMax, align 4, !tbaa.struct !163
  %crns.sroa.4.0.aabbMax.sroa_idx = getelementptr inbounds i8, ptr %aabbMax, i64 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa.struct !165
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %aabbMin, ptr noundef nonnull align 4 dereferenceable(16) %aabbMax, i64 16, i1 false), !tbaa.struct !163
  %arrayidx5.i276 = getelementptr inbounds [4 x float], ptr %aabbMin, i64 0, i64 1
  %arrayidx9.i = getelementptr inbounds [4 x float], ptr %aabbMin, i64 0, i64 2
  %arrayidx13.i = getelementptr inbounds [4 x float], ptr %aabbMin, i64 0, i64 3
  %arrayidx5.i280 = getelementptr inbounds [4 x float], ptr %aabbMax, i64 0, i64 1
  %arrayidx13.i288 = getelementptr inbounds [4 x float], ptr %aabbMax, i64 0, i64 3
  %66 = load float, ptr %aabbMin, align 4, !tbaa !137
  %cmp.i.i = fcmp olt float %add.i.i84, %66
  br i1 %cmp.i.i, label %if.then.i.i, label %_Z8btSetMinIfEvRT_RKS0_.exit.i

if.then.i.i:                                      ; preds = %entry
  store float %add.i.i84, ptr %aabbMin, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit.i

_Z8btSetMinIfEvRT_RKS0_.exit.i:                   ; preds = %if.then.i.i, %entry
  %67 = load float, ptr %arrayidx5.i276, align 4, !tbaa !137
  %cmp.i17.i = fcmp olt float %add10.i.i90, %67
  br i1 %cmp.i17.i, label %if.then.i18.i, label %_Z8btSetMinIfEvRT_RKS0_.exit19.i

if.then.i18.i:                                    ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit.i
  store float %add10.i.i90, ptr %arrayidx5.i276, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit19.i

_Z8btSetMinIfEvRT_RKS0_.exit19.i:                 ; preds = %if.then.i18.i, %_Z8btSetMinIfEvRT_RKS0_.exit.i
  %68 = load float, ptr %arrayidx9.i, align 4, !tbaa !137
  %cmp.i20.i = fcmp olt float %add17.i.i96, %68
  br i1 %cmp.i20.i, label %if.then.i21.i, label %_Z8btSetMinIfEvRT_RKS0_.exit22.i

if.then.i21.i:                                    ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit19.i
  store float %add17.i.i96, ptr %arrayidx9.i, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit22.i

_Z8btSetMinIfEvRT_RKS0_.exit22.i:                 ; preds = %if.then.i21.i, %_Z8btSetMinIfEvRT_RKS0_.exit19.i
  %69 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %cmp.i23.i = fcmp ogt float %69, 0.000000e+00
  br i1 %cmp.i23.i, label %if.then.i24.i, label %_ZN9btVector36setMinERKS_.exit

if.then.i24.i:                                    ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit22.i
  store float 0.000000e+00, ptr %arrayidx13.i, align 4, !tbaa !137
  br label %_ZN9btVector36setMinERKS_.exit

_ZN9btVector36setMinERKS_.exit:                   ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit22.i, %if.then.i24.i
  %70 = load float, ptr %aabbMax, align 4, !tbaa !137
  %cmp.i.i278 = fcmp olt float %70, %add.i.i84
  br i1 %cmp.i.i278, label %if.then.i.i279, label %_Z8btSetMaxIfEvRT_RKS0_.exit.i

if.then.i.i279:                                   ; preds = %_ZN9btVector36setMinERKS_.exit
  store float %add.i.i84, ptr %aabbMax, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit.i

_Z8btSetMaxIfEvRT_RKS0_.exit.i:                   ; preds = %if.then.i.i279, %_ZN9btVector36setMinERKS_.exit
  %71 = load float, ptr %arrayidx5.i280, align 4, !tbaa !137
  %cmp.i17.i282 = fcmp olt float %71, %add10.i.i90
  br i1 %cmp.i17.i282, label %if.then.i18.i283, label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i

if.then.i18.i283:                                 ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit.i
  store float %add10.i.i90, ptr %arrayidx5.i280, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i

_Z8btSetMaxIfEvRT_RKS0_.exit19.i:                 ; preds = %if.then.i18.i283, %_Z8btSetMaxIfEvRT_RKS0_.exit.i
  %72 = load float, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  %cmp.i20.i286 = fcmp olt float %72, %add17.i.i96
  br i1 %cmp.i20.i286, label %if.then.i21.i287, label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i

if.then.i21.i287:                                 ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit19.i
  store float %add17.i.i96, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i

_Z8btSetMaxIfEvRT_RKS0_.exit22.i:                 ; preds = %if.then.i21.i287, %_Z8btSetMaxIfEvRT_RKS0_.exit19.i
  %73 = load float, ptr %arrayidx13.i288, align 4, !tbaa !137
  %cmp.i23.i290 = fcmp olt float %73, 0.000000e+00
  br i1 %cmp.i23.i290, label %if.then.i24.i291, label %_ZN9btVector36setMaxERKS_.exit

if.then.i24.i291:                                 ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit22.i
  store float 0.000000e+00, ptr %arrayidx13.i288, align 4, !tbaa !137
  br label %_ZN9btVector36setMaxERKS_.exit

_ZN9btVector36setMaxERKS_.exit:                   ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit22.i, %if.then.i24.i291
  %74 = load float, ptr %aabbMin, align 4, !tbaa !137
  %cmp.i.i.1 = fcmp olt float %add.i.i113, %74
  br i1 %cmp.i.i.1, label %if.then.i.i.1, label %_Z8btSetMinIfEvRT_RKS0_.exit.i.1

if.then.i.i.1:                                    ; preds = %_ZN9btVector36setMaxERKS_.exit
  store float %add.i.i113, ptr %aabbMin, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit.i.1

_Z8btSetMinIfEvRT_RKS0_.exit.i.1:                 ; preds = %if.then.i.i.1, %_ZN9btVector36setMaxERKS_.exit
  %75 = load float, ptr %arrayidx5.i276, align 4, !tbaa !137
  %cmp.i17.i.1 = fcmp olt float %add10.i.i119, %75
  br i1 %cmp.i17.i.1, label %if.then.i18.i.1, label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.1

if.then.i18.i.1:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit.i.1
  store float %add10.i.i119, ptr %arrayidx5.i276, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.1

_Z8btSetMinIfEvRT_RKS0_.exit19.i.1:               ; preds = %if.then.i18.i.1, %_Z8btSetMinIfEvRT_RKS0_.exit.i.1
  %76 = load float, ptr %arrayidx9.i, align 4, !tbaa !137
  %cmp.i20.i.1 = fcmp olt float %add17.i.i125, %76
  br i1 %cmp.i20.i.1, label %if.then.i21.i.1, label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.1

if.then.i21.i.1:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit19.i.1
  store float %add17.i.i125, ptr %arrayidx9.i, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.1

_Z8btSetMinIfEvRT_RKS0_.exit22.i.1:               ; preds = %if.then.i21.i.1, %_Z8btSetMinIfEvRT_RKS0_.exit19.i.1
  %77 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %cmp.i23.i.1 = fcmp ogt float %77, 0.000000e+00
  br i1 %cmp.i23.i.1, label %if.then.i24.i.1, label %_ZN9btVector36setMinERKS_.exit.1

if.then.i24.i.1:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit22.i.1
  store float 0.000000e+00, ptr %arrayidx13.i, align 4, !tbaa !137
  br label %_ZN9btVector36setMinERKS_.exit.1

_ZN9btVector36setMinERKS_.exit.1:                 ; preds = %if.then.i24.i.1, %_Z8btSetMinIfEvRT_RKS0_.exit22.i.1
  %78 = load float, ptr %aabbMax, align 4, !tbaa !137
  %cmp.i.i278.1 = fcmp olt float %78, %add.i.i113
  br i1 %cmp.i.i278.1, label %if.then.i.i279.1, label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.1

if.then.i.i279.1:                                 ; preds = %_ZN9btVector36setMinERKS_.exit.1
  store float %add.i.i113, ptr %aabbMax, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.1

_Z8btSetMaxIfEvRT_RKS0_.exit.i.1:                 ; preds = %if.then.i.i279.1, %_ZN9btVector36setMinERKS_.exit.1
  %79 = load float, ptr %arrayidx5.i280, align 4, !tbaa !137
  %cmp.i17.i282.1 = fcmp olt float %79, %add10.i.i119
  br i1 %cmp.i17.i282.1, label %if.then.i18.i283.1, label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.1

if.then.i18.i283.1:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit.i.1
  store float %add10.i.i119, ptr %arrayidx5.i280, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.1

_Z8btSetMaxIfEvRT_RKS0_.exit19.i.1:               ; preds = %if.then.i18.i283.1, %_Z8btSetMaxIfEvRT_RKS0_.exit.i.1
  %80 = load float, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  %cmp.i20.i286.1 = fcmp olt float %80, %add17.i.i125
  br i1 %cmp.i20.i286.1, label %if.then.i21.i287.1, label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.1

if.then.i21.i287.1:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.1
  store float %add17.i.i125, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.1

_Z8btSetMaxIfEvRT_RKS0_.exit22.i.1:               ; preds = %if.then.i21.i287.1, %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.1
  %81 = load float, ptr %arrayidx13.i288, align 4, !tbaa !137
  %cmp.i23.i290.1 = fcmp olt float %81, 0.000000e+00
  br i1 %cmp.i23.i290.1, label %if.then.i24.i291.1, label %_ZN9btVector36setMaxERKS_.exit.1

if.then.i24.i291.1:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.1
  store float 0.000000e+00, ptr %arrayidx13.i288, align 4, !tbaa !137
  br label %_ZN9btVector36setMaxERKS_.exit.1

_ZN9btVector36setMaxERKS_.exit.1:                 ; preds = %if.then.i24.i291.1, %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.1
  %82 = load float, ptr %aabbMin, align 4, !tbaa !137
  %cmp.i.i.2 = fcmp olt float %add.i.i142, %82
  br i1 %cmp.i.i.2, label %if.then.i.i.2, label %_Z8btSetMinIfEvRT_RKS0_.exit.i.2

if.then.i.i.2:                                    ; preds = %_ZN9btVector36setMaxERKS_.exit.1
  store float %add.i.i142, ptr %aabbMin, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit.i.2

_Z8btSetMinIfEvRT_RKS0_.exit.i.2:                 ; preds = %if.then.i.i.2, %_ZN9btVector36setMaxERKS_.exit.1
  %83 = load float, ptr %arrayidx5.i276, align 4, !tbaa !137
  %cmp.i17.i.2 = fcmp olt float %add10.i.i148, %83
  br i1 %cmp.i17.i.2, label %if.then.i18.i.2, label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.2

if.then.i18.i.2:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit.i.2
  store float %add10.i.i148, ptr %arrayidx5.i276, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.2

_Z8btSetMinIfEvRT_RKS0_.exit19.i.2:               ; preds = %if.then.i18.i.2, %_Z8btSetMinIfEvRT_RKS0_.exit.i.2
  %84 = load float, ptr %arrayidx9.i, align 4, !tbaa !137
  %cmp.i20.i.2 = fcmp olt float %add17.i.i154, %84
  br i1 %cmp.i20.i.2, label %if.then.i21.i.2, label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.2

if.then.i21.i.2:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit19.i.2
  store float %add17.i.i154, ptr %arrayidx9.i, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.2

_Z8btSetMinIfEvRT_RKS0_.exit22.i.2:               ; preds = %if.then.i21.i.2, %_Z8btSetMinIfEvRT_RKS0_.exit19.i.2
  %85 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %cmp.i23.i.2 = fcmp ogt float %85, 0.000000e+00
  br i1 %cmp.i23.i.2, label %if.then.i24.i.2, label %_ZN9btVector36setMinERKS_.exit.2

if.then.i24.i.2:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit22.i.2
  store float 0.000000e+00, ptr %arrayidx13.i, align 4, !tbaa !137
  br label %_ZN9btVector36setMinERKS_.exit.2

_ZN9btVector36setMinERKS_.exit.2:                 ; preds = %if.then.i24.i.2, %_Z8btSetMinIfEvRT_RKS0_.exit22.i.2
  %86 = load float, ptr %aabbMax, align 4, !tbaa !137
  %cmp.i.i278.2 = fcmp olt float %86, %add.i.i142
  br i1 %cmp.i.i278.2, label %if.then.i.i279.2, label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.2

if.then.i.i279.2:                                 ; preds = %_ZN9btVector36setMinERKS_.exit.2
  store float %add.i.i142, ptr %aabbMax, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.2

_Z8btSetMaxIfEvRT_RKS0_.exit.i.2:                 ; preds = %if.then.i.i279.2, %_ZN9btVector36setMinERKS_.exit.2
  %87 = load float, ptr %arrayidx5.i280, align 4, !tbaa !137
  %cmp.i17.i282.2 = fcmp olt float %87, %add10.i.i148
  br i1 %cmp.i17.i282.2, label %if.then.i18.i283.2, label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.2

if.then.i18.i283.2:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit.i.2
  store float %add10.i.i148, ptr %arrayidx5.i280, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.2

_Z8btSetMaxIfEvRT_RKS0_.exit19.i.2:               ; preds = %if.then.i18.i283.2, %_Z8btSetMaxIfEvRT_RKS0_.exit.i.2
  %88 = load float, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  %cmp.i20.i286.2 = fcmp olt float %88, %add17.i.i154
  br i1 %cmp.i20.i286.2, label %if.then.i21.i287.2, label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.2

if.then.i21.i287.2:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.2
  store float %add17.i.i154, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.2

_Z8btSetMaxIfEvRT_RKS0_.exit22.i.2:               ; preds = %if.then.i21.i287.2, %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.2
  %89 = load float, ptr %arrayidx13.i288, align 4, !tbaa !137
  %cmp.i23.i290.2 = fcmp olt float %89, 0.000000e+00
  br i1 %cmp.i23.i290.2, label %if.then.i24.i291.2, label %_ZN9btVector36setMaxERKS_.exit.2

if.then.i24.i291.2:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.2
  store float 0.000000e+00, ptr %arrayidx13.i288, align 4, !tbaa !137
  br label %_ZN9btVector36setMaxERKS_.exit.2

_ZN9btVector36setMaxERKS_.exit.2:                 ; preds = %if.then.i24.i291.2, %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.2
  %90 = load float, ptr %aabbMin, align 4, !tbaa !137
  %cmp.i.i.3 = fcmp olt float %add.i.i171, %90
  br i1 %cmp.i.i.3, label %if.then.i.i.3, label %_Z8btSetMinIfEvRT_RKS0_.exit.i.3

if.then.i.i.3:                                    ; preds = %_ZN9btVector36setMaxERKS_.exit.2
  store float %add.i.i171, ptr %aabbMin, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit.i.3

_Z8btSetMinIfEvRT_RKS0_.exit.i.3:                 ; preds = %if.then.i.i.3, %_ZN9btVector36setMaxERKS_.exit.2
  %91 = load float, ptr %arrayidx5.i276, align 4, !tbaa !137
  %cmp.i17.i.3 = fcmp olt float %add10.i.i177, %91
  br i1 %cmp.i17.i.3, label %if.then.i18.i.3, label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.3

if.then.i18.i.3:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit.i.3
  store float %add10.i.i177, ptr %arrayidx5.i276, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.3

_Z8btSetMinIfEvRT_RKS0_.exit19.i.3:               ; preds = %if.then.i18.i.3, %_Z8btSetMinIfEvRT_RKS0_.exit.i.3
  %92 = load float, ptr %arrayidx9.i, align 4, !tbaa !137
  %cmp.i20.i.3 = fcmp olt float %add17.i.i183, %92
  br i1 %cmp.i20.i.3, label %if.then.i21.i.3, label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.3

if.then.i21.i.3:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit19.i.3
  store float %add17.i.i183, ptr %arrayidx9.i, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.3

_Z8btSetMinIfEvRT_RKS0_.exit22.i.3:               ; preds = %if.then.i21.i.3, %_Z8btSetMinIfEvRT_RKS0_.exit19.i.3
  %93 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %cmp.i23.i.3 = fcmp ogt float %93, 0.000000e+00
  br i1 %cmp.i23.i.3, label %if.then.i24.i.3, label %_ZN9btVector36setMinERKS_.exit.3

if.then.i24.i.3:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit22.i.3
  store float 0.000000e+00, ptr %arrayidx13.i, align 4, !tbaa !137
  br label %_ZN9btVector36setMinERKS_.exit.3

_ZN9btVector36setMinERKS_.exit.3:                 ; preds = %if.then.i24.i.3, %_Z8btSetMinIfEvRT_RKS0_.exit22.i.3
  %94 = load float, ptr %aabbMax, align 4, !tbaa !137
  %cmp.i.i278.3 = fcmp olt float %94, %add.i.i171
  br i1 %cmp.i.i278.3, label %if.then.i.i279.3, label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.3

if.then.i.i279.3:                                 ; preds = %_ZN9btVector36setMinERKS_.exit.3
  store float %add.i.i171, ptr %aabbMax, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.3

_Z8btSetMaxIfEvRT_RKS0_.exit.i.3:                 ; preds = %if.then.i.i279.3, %_ZN9btVector36setMinERKS_.exit.3
  %95 = load float, ptr %arrayidx5.i280, align 4, !tbaa !137
  %cmp.i17.i282.3 = fcmp olt float %95, %add10.i.i177
  br i1 %cmp.i17.i282.3, label %if.then.i18.i283.3, label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.3

if.then.i18.i283.3:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit.i.3
  store float %add10.i.i177, ptr %arrayidx5.i280, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.3

_Z8btSetMaxIfEvRT_RKS0_.exit19.i.3:               ; preds = %if.then.i18.i283.3, %_Z8btSetMaxIfEvRT_RKS0_.exit.i.3
  %96 = load float, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  %cmp.i20.i286.3 = fcmp olt float %96, %add17.i.i183
  br i1 %cmp.i20.i286.3, label %if.then.i21.i287.3, label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.3

if.then.i21.i287.3:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.3
  store float %add17.i.i183, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.3

_Z8btSetMaxIfEvRT_RKS0_.exit22.i.3:               ; preds = %if.then.i21.i287.3, %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.3
  %97 = load float, ptr %arrayidx13.i288, align 4, !tbaa !137
  %cmp.i23.i290.3 = fcmp olt float %97, 0.000000e+00
  br i1 %cmp.i23.i290.3, label %if.then.i24.i291.3, label %_ZN9btVector36setMaxERKS_.exit.3

if.then.i24.i291.3:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.3
  store float 0.000000e+00, ptr %arrayidx13.i288, align 4, !tbaa !137
  br label %_ZN9btVector36setMaxERKS_.exit.3

_ZN9btVector36setMaxERKS_.exit.3:                 ; preds = %if.then.i24.i291.3, %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.3
  %98 = load float, ptr %aabbMin, align 4, !tbaa !137
  %cmp.i.i.4 = fcmp olt float %add.i.i200, %98
  br i1 %cmp.i.i.4, label %if.then.i.i.4, label %_Z8btSetMinIfEvRT_RKS0_.exit.i.4

if.then.i.i.4:                                    ; preds = %_ZN9btVector36setMaxERKS_.exit.3
  store float %add.i.i200, ptr %aabbMin, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit.i.4

_Z8btSetMinIfEvRT_RKS0_.exit.i.4:                 ; preds = %if.then.i.i.4, %_ZN9btVector36setMaxERKS_.exit.3
  %99 = load float, ptr %arrayidx5.i276, align 4, !tbaa !137
  %cmp.i17.i.4 = fcmp olt float %add10.i.i206, %99
  br i1 %cmp.i17.i.4, label %if.then.i18.i.4, label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.4

if.then.i18.i.4:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit.i.4
  store float %add10.i.i206, ptr %arrayidx5.i276, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.4

_Z8btSetMinIfEvRT_RKS0_.exit19.i.4:               ; preds = %if.then.i18.i.4, %_Z8btSetMinIfEvRT_RKS0_.exit.i.4
  %100 = load float, ptr %arrayidx9.i, align 4, !tbaa !137
  %cmp.i20.i.4 = fcmp olt float %add17.i.i212, %100
  br i1 %cmp.i20.i.4, label %if.then.i21.i.4, label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.4

if.then.i21.i.4:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit19.i.4
  store float %add17.i.i212, ptr %arrayidx9.i, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.4

_Z8btSetMinIfEvRT_RKS0_.exit22.i.4:               ; preds = %if.then.i21.i.4, %_Z8btSetMinIfEvRT_RKS0_.exit19.i.4
  %101 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %cmp.i23.i.4 = fcmp ogt float %101, 0.000000e+00
  br i1 %cmp.i23.i.4, label %if.then.i24.i.4, label %_ZN9btVector36setMinERKS_.exit.4

if.then.i24.i.4:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit22.i.4
  store float 0.000000e+00, ptr %arrayidx13.i, align 4, !tbaa !137
  br label %_ZN9btVector36setMinERKS_.exit.4

_ZN9btVector36setMinERKS_.exit.4:                 ; preds = %if.then.i24.i.4, %_Z8btSetMinIfEvRT_RKS0_.exit22.i.4
  %102 = load float, ptr %aabbMax, align 4, !tbaa !137
  %cmp.i.i278.4 = fcmp olt float %102, %add.i.i200
  br i1 %cmp.i.i278.4, label %if.then.i.i279.4, label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.4

if.then.i.i279.4:                                 ; preds = %_ZN9btVector36setMinERKS_.exit.4
  store float %add.i.i200, ptr %aabbMax, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.4

_Z8btSetMaxIfEvRT_RKS0_.exit.i.4:                 ; preds = %if.then.i.i279.4, %_ZN9btVector36setMinERKS_.exit.4
  %103 = load float, ptr %arrayidx5.i280, align 4, !tbaa !137
  %cmp.i17.i282.4 = fcmp olt float %103, %add10.i.i206
  br i1 %cmp.i17.i282.4, label %if.then.i18.i283.4, label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.4

if.then.i18.i283.4:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit.i.4
  store float %add10.i.i206, ptr %arrayidx5.i280, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.4

_Z8btSetMaxIfEvRT_RKS0_.exit19.i.4:               ; preds = %if.then.i18.i283.4, %_Z8btSetMaxIfEvRT_RKS0_.exit.i.4
  %104 = load float, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  %cmp.i20.i286.4 = fcmp olt float %104, %add17.i.i212
  br i1 %cmp.i20.i286.4, label %if.then.i21.i287.4, label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.4

if.then.i21.i287.4:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.4
  store float %add17.i.i212, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.4

_Z8btSetMaxIfEvRT_RKS0_.exit22.i.4:               ; preds = %if.then.i21.i287.4, %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.4
  %105 = load float, ptr %arrayidx13.i288, align 4, !tbaa !137
  %cmp.i23.i290.4 = fcmp olt float %105, 0.000000e+00
  br i1 %cmp.i23.i290.4, label %if.then.i24.i291.4, label %_ZN9btVector36setMaxERKS_.exit.4

if.then.i24.i291.4:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.4
  store float 0.000000e+00, ptr %arrayidx13.i288, align 4, !tbaa !137
  br label %_ZN9btVector36setMaxERKS_.exit.4

_ZN9btVector36setMaxERKS_.exit.4:                 ; preds = %if.then.i24.i291.4, %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.4
  %106 = load float, ptr %aabbMin, align 4, !tbaa !137
  %cmp.i.i.5 = fcmp olt float %add.i.i229, %106
  br i1 %cmp.i.i.5, label %if.then.i.i.5, label %_Z8btSetMinIfEvRT_RKS0_.exit.i.5

if.then.i.i.5:                                    ; preds = %_ZN9btVector36setMaxERKS_.exit.4
  store float %add.i.i229, ptr %aabbMin, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit.i.5

_Z8btSetMinIfEvRT_RKS0_.exit.i.5:                 ; preds = %if.then.i.i.5, %_ZN9btVector36setMaxERKS_.exit.4
  %107 = load float, ptr %arrayidx5.i276, align 4, !tbaa !137
  %cmp.i17.i.5 = fcmp olt float %add10.i.i235, %107
  br i1 %cmp.i17.i.5, label %if.then.i18.i.5, label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.5

if.then.i18.i.5:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit.i.5
  store float %add10.i.i235, ptr %arrayidx5.i276, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.5

_Z8btSetMinIfEvRT_RKS0_.exit19.i.5:               ; preds = %if.then.i18.i.5, %_Z8btSetMinIfEvRT_RKS0_.exit.i.5
  %108 = load float, ptr %arrayidx9.i, align 4, !tbaa !137
  %cmp.i20.i.5 = fcmp olt float %add17.i.i241, %108
  br i1 %cmp.i20.i.5, label %if.then.i21.i.5, label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.5

if.then.i21.i.5:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit19.i.5
  store float %add17.i.i241, ptr %arrayidx9.i, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.5

_Z8btSetMinIfEvRT_RKS0_.exit22.i.5:               ; preds = %if.then.i21.i.5, %_Z8btSetMinIfEvRT_RKS0_.exit19.i.5
  %109 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %cmp.i23.i.5 = fcmp ogt float %109, 0.000000e+00
  br i1 %cmp.i23.i.5, label %if.then.i24.i.5, label %_ZN9btVector36setMinERKS_.exit.5

if.then.i24.i.5:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit22.i.5
  store float 0.000000e+00, ptr %arrayidx13.i, align 4, !tbaa !137
  br label %_ZN9btVector36setMinERKS_.exit.5

_ZN9btVector36setMinERKS_.exit.5:                 ; preds = %if.then.i24.i.5, %_Z8btSetMinIfEvRT_RKS0_.exit22.i.5
  %110 = load float, ptr %aabbMax, align 4, !tbaa !137
  %cmp.i.i278.5 = fcmp olt float %110, %add.i.i229
  br i1 %cmp.i.i278.5, label %if.then.i.i279.5, label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.5

if.then.i.i279.5:                                 ; preds = %_ZN9btVector36setMinERKS_.exit.5
  store float %add.i.i229, ptr %aabbMax, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.5

_Z8btSetMaxIfEvRT_RKS0_.exit.i.5:                 ; preds = %if.then.i.i279.5, %_ZN9btVector36setMinERKS_.exit.5
  %111 = load float, ptr %arrayidx5.i280, align 4, !tbaa !137
  %cmp.i17.i282.5 = fcmp olt float %111, %add10.i.i235
  br i1 %cmp.i17.i282.5, label %if.then.i18.i283.5, label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.5

if.then.i18.i283.5:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit.i.5
  store float %add10.i.i235, ptr %arrayidx5.i280, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.5

_Z8btSetMaxIfEvRT_RKS0_.exit19.i.5:               ; preds = %if.then.i18.i283.5, %_Z8btSetMaxIfEvRT_RKS0_.exit.i.5
  %112 = load float, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  %cmp.i20.i286.5 = fcmp olt float %112, %add17.i.i241
  br i1 %cmp.i20.i286.5, label %if.then.i21.i287.5, label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.5

if.then.i21.i287.5:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.5
  store float %add17.i.i241, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.5

_Z8btSetMaxIfEvRT_RKS0_.exit22.i.5:               ; preds = %if.then.i21.i287.5, %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.5
  %113 = load float, ptr %arrayidx13.i288, align 4, !tbaa !137
  %cmp.i23.i290.5 = fcmp olt float %113, 0.000000e+00
  br i1 %cmp.i23.i290.5, label %if.then.i24.i291.5, label %_ZN9btVector36setMaxERKS_.exit.5

if.then.i24.i291.5:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.5
  store float 0.000000e+00, ptr %arrayidx13.i288, align 4, !tbaa !137
  br label %_ZN9btVector36setMaxERKS_.exit.5

_ZN9btVector36setMaxERKS_.exit.5:                 ; preds = %if.then.i24.i291.5, %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.5
  %114 = load float, ptr %aabbMin, align 4, !tbaa !137
  %cmp.i.i.6 = fcmp olt float %add.i.i258, %114
  br i1 %cmp.i.i.6, label %if.then.i.i.6, label %_Z8btSetMinIfEvRT_RKS0_.exit.i.6

if.then.i.i.6:                                    ; preds = %_ZN9btVector36setMaxERKS_.exit.5
  store float %add.i.i258, ptr %aabbMin, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit.i.6

_Z8btSetMinIfEvRT_RKS0_.exit.i.6:                 ; preds = %if.then.i.i.6, %_ZN9btVector36setMaxERKS_.exit.5
  %115 = load float, ptr %arrayidx5.i276, align 4, !tbaa !137
  %cmp.i17.i.6 = fcmp olt float %add10.i.i264, %115
  br i1 %cmp.i17.i.6, label %if.then.i18.i.6, label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.6

if.then.i18.i.6:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit.i.6
  store float %add10.i.i264, ptr %arrayidx5.i276, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.6

_Z8btSetMinIfEvRT_RKS0_.exit19.i.6:               ; preds = %if.then.i18.i.6, %_Z8btSetMinIfEvRT_RKS0_.exit.i.6
  %116 = load float, ptr %arrayidx9.i, align 4, !tbaa !137
  %cmp.i20.i.6 = fcmp olt float %add17.i.i270, %116
  br i1 %cmp.i20.i.6, label %if.then.i21.i.6, label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.6

if.then.i21.i.6:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit19.i.6
  store float %add17.i.i270, ptr %arrayidx9.i, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.6

_Z8btSetMinIfEvRT_RKS0_.exit22.i.6:               ; preds = %if.then.i21.i.6, %_Z8btSetMinIfEvRT_RKS0_.exit19.i.6
  %117 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %cmp.i23.i.6 = fcmp ogt float %117, 0.000000e+00
  br i1 %cmp.i23.i.6, label %if.then.i24.i.6, label %_ZN9btVector36setMinERKS_.exit.6

if.then.i24.i.6:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit22.i.6
  store float 0.000000e+00, ptr %arrayidx13.i, align 4, !tbaa !137
  br label %_ZN9btVector36setMinERKS_.exit.6

_ZN9btVector36setMinERKS_.exit.6:                 ; preds = %if.then.i24.i.6, %_Z8btSetMinIfEvRT_RKS0_.exit22.i.6
  %118 = load float, ptr %aabbMax, align 4, !tbaa !137
  %cmp.i.i278.6 = fcmp olt float %118, %add.i.i258
  br i1 %cmp.i.i278.6, label %if.then.i.i279.6, label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.6

if.then.i.i279.6:                                 ; preds = %_ZN9btVector36setMinERKS_.exit.6
  store float %add.i.i258, ptr %aabbMax, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.6

_Z8btSetMaxIfEvRT_RKS0_.exit.i.6:                 ; preds = %if.then.i.i279.6, %_ZN9btVector36setMinERKS_.exit.6
  %119 = load float, ptr %arrayidx5.i280, align 4, !tbaa !137
  %cmp.i17.i282.6 = fcmp olt float %119, %add10.i.i264
  br i1 %cmp.i17.i282.6, label %if.then.i18.i283.6, label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.6

if.then.i18.i283.6:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit.i.6
  store float %add10.i.i264, ptr %arrayidx5.i280, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.6

_Z8btSetMaxIfEvRT_RKS0_.exit19.i.6:               ; preds = %if.then.i18.i283.6, %_Z8btSetMaxIfEvRT_RKS0_.exit.i.6
  %120 = load float, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  %cmp.i20.i286.6 = fcmp olt float %120, %add17.i.i270
  br i1 %cmp.i20.i286.6, label %if.then.i21.i287.6, label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.6

if.then.i21.i287.6:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.6
  store float %add17.i.i270, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.6

_Z8btSetMaxIfEvRT_RKS0_.exit22.i.6:               ; preds = %if.then.i21.i287.6, %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.6
  %121 = load float, ptr %arrayidx13.i288, align 4, !tbaa !137
  %cmp.i23.i290.6 = fcmp olt float %121, 0.000000e+00
  br i1 %cmp.i23.i290.6, label %if.then.i24.i291.6, label %_ZN9btVector36setMaxERKS_.exit.6

if.then.i24.i291.6:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.6
  store float 0.000000e+00, ptr %arrayidx13.i288, align 4, !tbaa !137
  br label %_ZN9btVector36setMaxERKS_.exit.6

_ZN9btVector36setMaxERKS_.exit.6:                 ; preds = %if.then.i24.i291.6, %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.6
  ret void
}

declare void @_ZNK16btCollisionShape17getBoundingSphereER9btVector3Rf(ptr noundef nonnull align 8 dereferenceable(24), ptr noundef nonnull align 4 dereferenceable(16), ptr noundef nonnull align 4 dereferenceable(4)) unnamed_addr #1

declare noundef float @_ZNK16btCollisionShape20getAngularMotionDiscEv(ptr noundef nonnull align 8 dereferenceable(24)) unnamed_addr #1

declare noundef float @_ZNK16btCollisionShape27getContactBreakingThresholdEv(ptr noundef nonnull align 8 dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN24btSoftBodyCollisionShape15setLocalScalingERK9btVector3(ptr noundef nonnull align 8 dereferenceable(40) %this, ptr noundef nonnull align 4 dereferenceable(16) %0) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef nonnull align 4 dereferenceable(16) ptr @_ZNK24btSoftBodyCollisionShape15getLocalScalingEv(ptr noundef nonnull align 8 dereferenceable(40) %this) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !173

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy) #38
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %init

init:                                             ; preds = %init.check
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00>, ptr @_ZZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy, align 4, !tbaa !137
  %2 = tail call ptr @llvm.invariant.start.p0(i64 16, ptr nonnull @_ZZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy) #38
  br label %init.end

init.end:                                         ; preds = %init, %init.check, %entry
  ret ptr @_ZZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNK24btSoftBodyCollisionShape21calculateLocalInertiaEfR9btVector3(ptr noundef nonnull align 8 dereferenceable(40) %this, float noundef %0, ptr noundef nonnull align 4 dereferenceable(16) %1) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef ptr @_ZNK24btSoftBodyCollisionShape7getNameEv(ptr noundef nonnull align 8 dereferenceable(40) %this) unnamed_addr #29 comdat align 2 {
entry:
  ret ptr @.str.3
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN14btConcaveShape9setMarginEf(ptr noundef nonnull align 8 dereferenceable(28) %this, float noundef %collisionMargin) unnamed_addr #29 comdat align 2 {
entry:
  %m_collisionMargin = getelementptr inbounds %class.btConcaveShape, ptr %this, i64 0, i32 1
  store float %collisionMargin, ptr %m_collisionMargin, align 8, !tbaa !158
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef float @_ZNK14btConcaveShape9getMarginEv(ptr noundef nonnull align 8 dereferenceable(28) %this) unnamed_addr #29 comdat align 2 {
entry:
  %m_collisionMargin = getelementptr inbounds %class.btConcaveShape, ptr %this, i64 0, i32 1
  %0 = load float, ptr %m_collisionMargin, align 8, !tbaa !158
  ret float %0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNK24btSoftBodyCollisionShape19processAllTrianglesEP18btTriangleCallbackRK9btVector3S4_(ptr noundef nonnull align 8 dereferenceable(40) %this, ptr noundef %0, ptr noundef nonnull align 4 dereferenceable(16) %1, ptr noundef nonnull align 4 dereferenceable(16) %2) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(ptr) local_unnamed_addr #30

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare ptr @llvm.invariant.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_abort(ptr) local_unnamed_addr #30

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(ptr) local_unnamed_addr #30

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare float @sqrtf(float noundef) local_unnamed_addr #31

; Function Attrs: uwtable
define linkonce_odr dso_local noundef nonnull align 4 dereferenceable(48) ptr @_ZN11btMatrix3x311getIdentityEv() local_unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !173

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %invoke.cont

invoke.cont:                                      ; preds = %init.check
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %2 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %init.end

init.end:                                         ; preds = %invoke.cont, %init.check, %entry
  ret ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #28

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !320
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE5clearEv.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %this, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !341
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !320
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !319
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !342
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN6btDbvt8ICollideD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %0) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

declare void @_ZN15CProfileManager13Start_ProfileEPKc(ptr noundef) local_unnamed_addr #1

declare void @_ZN15CProfileManager12Stop_ProfileEv() local_unnamed_addr #1

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNK10btSoftBody4Body13applyVImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef nonnull align 4 dereferenceable(16) %impulse, ptr noundef nonnull align 4 dereferenceable(16) %rpos) local_unnamed_addr #0 comdat align 2 {
entry:
  %m_rigid = getelementptr inbounds %"struct.btSoftBody::Body", ptr %this, i64 0, i32 1
  %0 = load ptr, ptr %m_rigid, align 8, !tbaa !511
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_ZN11btRigidBody12applyImpulseERK9btVector3S2_(ptr noundef nonnull align 8 dereferenceable(564) %0, ptr noundef nonnull align 4 dereferenceable(16) %impulse, ptr noundef nonnull align 4 dereferenceable(16) %rpos)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load ptr, ptr %this, align 8, !tbaa !272
  %tobool3.not = icmp eq ptr %1, null
  br i1 %tobool3.not, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  %m_imass.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 5
  %2 = load float, ptr %m_imass.i, align 4, !tbaa !137
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %3 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %mul8.i.i.i = fmul float %2, %3
  %m_invwi.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7
  %arrayidx.i.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 1
  %4 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 2
  %5 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %6 = fneg float %5
  %7 = load float, ptr %rpos, align 4, !tbaa !137
  %8 = fneg float %7
  %neg19.i.i.i = fmul float %3, %8
  %9 = fneg float %4
  %arrayidx5.i.i25.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i28.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 2
  %10 = load float, ptr %arrayidx.i17.i.i, align 4, !tbaa !137
  %arrayidx5.i18.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %11 = load float, ptr %arrayidx5.i18.i.i, align 4, !tbaa !137
  %arrayidx10.i21.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %12 = load float, ptr %arrayidx10.i21.i.i, align 4, !tbaa !137
  %m_vimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 9
  %13 = load <2 x float>, ptr %impulse, align 4, !tbaa !137
  %14 = insertelement <2 x float> poison, float %2, i64 0
  %15 = shufflevector <2 x float> %14, <2 x float> poison, <2 x i32> zeroinitializer
  %16 = fmul <2 x float> %15, %13
  %17 = extractelement <2 x float> %13, i64 1
  %neg.i.i.i = fmul float %17, %6
  %18 = tail call float @llvm.fmuladd.f32(float %4, float %3, float %neg.i.i.i)
  %19 = extractelement <2 x float> %13, i64 0
  %20 = tail call float @llvm.fmuladd.f32(float %5, float %19, float %neg19.i.i.i)
  %neg30.i.i.i = fmul float %19, %9
  %21 = tail call float @llvm.fmuladd.f32(float %7, float %17, float %neg30.i.i.i)
  %mul8.i20.i.i = fmul float %20, %11
  %22 = tail call float @llvm.fmuladd.f32(float %10, float %18, float %mul8.i20.i.i)
  %23 = tail call float @llvm.fmuladd.f32(float %12, float %21, float %22)
  %24 = load <2 x float>, ptr %m_vimpulses.i, align 4, !tbaa !137
  %25 = fadd <2 x float> %16, %24
  store <2 x float> %25, ptr %m_vimpulses.i, align 4, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 9, i64 0, i32 0, i64 2
  %26 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %add13.i.i = fadd float %mul8.i.i.i, %26
  store float %add13.i.i, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %m_lv.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 13
  %27 = load <2 x float>, ptr %m_lv.i, align 4, !tbaa !137
  %28 = fadd <2 x float> %16, %27
  store <2 x float> %28, ptr %m_lv.i, align 4, !tbaa !137
  %arrayidx12.i34.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 13, i32 0, i64 2
  %29 = load float, ptr %arrayidx12.i34.i, align 4, !tbaa !137
  %add13.i35.i = fadd float %mul8.i.i.i, %29
  store float %add13.i35.i, ptr %arrayidx12.i34.i, align 4, !tbaa !137
  %arrayidx8.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 9, i64 1
  %30 = load float, ptr %m_invwi.i, align 4, !tbaa !137
  %31 = load float, ptr %arrayidx5.i.i25.i, align 4, !tbaa !137
  %32 = load float, ptr %arrayidx10.i.i.i, align 4, !tbaa !137
  %33 = load float, ptr %arrayidx.i.i28.i, align 4, !tbaa !137
  %34 = load float, ptr %arrayidx5.i12.i.i, align 4, !tbaa !137
  %35 = load float, ptr %arrayidx10.i15.i.i, align 4, !tbaa !137
  %36 = insertelement <2 x float> poison, float %31, i64 0
  %37 = insertelement <2 x float> %36, float %34, i64 1
  %38 = insertelement <2 x float> poison, float %20, i64 0
  %39 = shufflevector <2 x float> %38, <2 x float> poison, <2 x i32> zeroinitializer
  %40 = fmul <2 x float> %37, %39
  %41 = insertelement <2 x float> poison, float %30, i64 0
  %42 = insertelement <2 x float> %41, float %33, i64 1
  %43 = insertelement <2 x float> poison, float %18, i64 0
  %44 = shufflevector <2 x float> %43, <2 x float> poison, <2 x i32> zeroinitializer
  %45 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %42, <2 x float> %44, <2 x float> %40)
  %46 = insertelement <2 x float> poison, float %32, i64 0
  %47 = insertelement <2 x float> %46, float %35, i64 1
  %48 = insertelement <2 x float> poison, float %21, i64 0
  %49 = shufflevector <2 x float> %48, <2 x float> poison, <2 x i32> zeroinitializer
  %50 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %47, <2 x float> %49, <2 x float> %45)
  %51 = load <2 x float>, ptr %arrayidx8.i, align 4, !tbaa !137
  %52 = fadd <2 x float> %50, %51
  store <2 x float> %52, ptr %arrayidx8.i, align 4, !tbaa !137
  %arrayidx12.i41.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 9, i64 1, i32 0, i64 2
  %53 = load float, ptr %arrayidx12.i41.i, align 4, !tbaa !137
  %add13.i42.i = fadd float %23, %53
  store float %add13.i42.i, ptr %arrayidx12.i41.i, align 4, !tbaa !137
  %m_av.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 14
  %54 = load <2 x float>, ptr %m_av.i, align 4, !tbaa !137
  %55 = fadd <2 x float> %50, %54
  store <2 x float> %55, ptr %m_av.i, align 4, !tbaa !137
  %arrayidx12.i48.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 14, i32 0, i64 2
  %56 = load float, ptr %arrayidx12.i48.i, align 4, !tbaa !137
  %add13.i49.i = fadd float %23, %56
  store float %add13.i49.i, ptr %arrayidx12.i48.i, align 4, !tbaa !137
  %m_nvimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 11
  %57 = load i32, ptr %m_nvimpulses.i, align 8, !tbaa !321
  %inc.i = add nsw i32 %57, 1
  store i32 %inc.i, ptr %m_nvimpulses.i, align 8, !tbaa !321
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare float @acosf(float noundef) local_unnamed_addr #31

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNK10btSoftBody4Body14applyVAImpulseERK9btVector3(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef nonnull align 4 dereferenceable(16) %impulse) local_unnamed_addr #0 comdat align 2 {
entry:
  %m_rigid = getelementptr inbounds %"struct.btSoftBody::Body", ptr %this, i64 0, i32 1
  %0 = load ptr, ptr %m_rigid, align 8, !tbaa !511
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %m_invInertiaTensorWorld.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1
  %1 = load float, ptr %impulse, align 4, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 0, i32 0, i64 1
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 1
  %2 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %arrayidx10.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %3 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %arrayidx.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 1
  %arrayidx5.i12.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 2
  %4 = load float, ptr %arrayidx.i17.i.i, align 8, !tbaa !137
  %arrayidx5.i18.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 2, i32 0, i64 1
  %5 = load float, ptr %arrayidx5.i18.i.i, align 4, !tbaa !137
  %mul8.i20.i.i = fmul float %2, %5
  %6 = tail call float @llvm.fmuladd.f32(float %4, float %1, float %mul8.i20.i.i)
  %arrayidx10.i21.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 2, i32 0, i64 2
  %7 = load float, ptr %arrayidx10.i21.i.i, align 8, !tbaa !137
  %8 = tail call float @llvm.fmuladd.f32(float %7, float %3, float %6)
  %m_angularFactor.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 5
  %arrayidx13.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 5, i32 0, i64 2
  %9 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %mul14.i.i = fmul float %8, %9
  %m_angularVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3
  %10 = load float, ptr %m_invInertiaTensorWorld.i, align 8, !tbaa !137
  %11 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %12 = load float, ptr %arrayidx10.i.i.i, align 8, !tbaa !137
  %13 = load float, ptr %arrayidx.i.i.i, align 8, !tbaa !137
  %14 = load float, ptr %arrayidx5.i12.i.i, align 4, !tbaa !137
  %15 = insertelement <2 x float> poison, float %2, i64 0
  %16 = shufflevector <2 x float> %15, <2 x float> poison, <2 x i32> zeroinitializer
  %17 = insertelement <2 x float> poison, float %11, i64 0
  %18 = insertelement <2 x float> %17, float %14, i64 1
  %19 = fmul <2 x float> %16, %18
  %20 = insertelement <2 x float> poison, float %10, i64 0
  %21 = insertelement <2 x float> %20, float %13, i64 1
  %22 = insertelement <2 x float> poison, float %1, i64 0
  %23 = shufflevector <2 x float> %22, <2 x float> poison, <2 x i32> zeroinitializer
  %24 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %21, <2 x float> %23, <2 x float> %19)
  %25 = load float, ptr %arrayidx10.i15.i.i, align 8, !tbaa !137
  %26 = insertelement <2 x float> poison, float %12, i64 0
  %27 = insertelement <2 x float> %26, float %25, i64 1
  %28 = insertelement <2 x float> poison, float %3, i64 0
  %29 = shufflevector <2 x float> %28, <2 x float> poison, <2 x i32> zeroinitializer
  %30 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %27, <2 x float> %29, <2 x float> %24)
  %31 = load <2 x float>, ptr %m_angularFactor.i, align 4, !tbaa !137
  %32 = fmul <2 x float> %30, %31
  %33 = load <2 x float>, ptr %m_angularVelocity.i, align 8, !tbaa !137
  %34 = fadd <2 x float> %32, %33
  store <2 x float> %34, ptr %m_angularVelocity.i, align 8, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3, i32 0, i64 2
  %35 = load float, ptr %arrayidx12.i.i, align 8, !tbaa !137
  %add13.i.i = fadd float %mul14.i.i, %35
  store float %add13.i.i, ptr %arrayidx12.i.i, align 8, !tbaa !137
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %36 = load ptr, ptr %this, align 8, !tbaa !272
  %tobool3.not = icmp eq ptr %36, null
  br i1 %tobool3.not, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  %m_invwi.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7
  %37 = load float, ptr %impulse, align 4, !tbaa !137
  %arrayidx5.i.i.i9 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx7.i.i.i10 = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 1
  %38 = load float, ptr %arrayidx7.i.i.i10, align 4, !tbaa !137
  %arrayidx10.i.i.i12 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i.i13 = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %39 = load float, ptr %arrayidx12.i.i.i13, align 4, !tbaa !137
  %arrayidx.i.i.i14 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i.i15 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i17 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i18 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 2
  %40 = load float, ptr %arrayidx.i17.i.i18, align 4, !tbaa !137
  %arrayidx5.i18.i.i19 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %41 = load float, ptr %arrayidx5.i18.i.i19, align 4, !tbaa !137
  %mul8.i20.i.i20 = fmul float %38, %41
  %42 = tail call float @llvm.fmuladd.f32(float %40, float %37, float %mul8.i20.i.i20)
  %arrayidx10.i21.i.i21 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %43 = load float, ptr %arrayidx10.i21.i.i21, align 4, !tbaa !137
  %44 = tail call float @llvm.fmuladd.f32(float %43, float %39, float %42)
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 9, i64 1
  %45 = load float, ptr %m_invwi.i, align 4, !tbaa !137
  %46 = load float, ptr %arrayidx5.i.i.i9, align 4, !tbaa !137
  %47 = load float, ptr %arrayidx10.i.i.i12, align 4, !tbaa !137
  %48 = load float, ptr %arrayidx.i.i.i14, align 4, !tbaa !137
  %49 = load float, ptr %arrayidx5.i12.i.i15, align 4, !tbaa !137
  %50 = insertelement <2 x float> poison, float %38, i64 0
  %51 = shufflevector <2 x float> %50, <2 x float> poison, <2 x i32> zeroinitializer
  %52 = insertelement <2 x float> poison, float %46, i64 0
  %53 = insertelement <2 x float> %52, float %49, i64 1
  %54 = fmul <2 x float> %51, %53
  %55 = insertelement <2 x float> poison, float %45, i64 0
  %56 = insertelement <2 x float> %55, float %48, i64 1
  %57 = insertelement <2 x float> poison, float %37, i64 0
  %58 = shufflevector <2 x float> %57, <2 x float> poison, <2 x i32> zeroinitializer
  %59 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %56, <2 x float> %58, <2 x float> %54)
  %60 = load float, ptr %arrayidx10.i15.i.i17, align 4, !tbaa !137
  %61 = insertelement <2 x float> poison, float %47, i64 0
  %62 = insertelement <2 x float> %61, float %60, i64 1
  %63 = insertelement <2 x float> poison, float %39, i64 0
  %64 = shufflevector <2 x float> %63, <2 x float> poison, <2 x i32> zeroinitializer
  %65 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %62, <2 x float> %64, <2 x float> %59)
  %66 = load <2 x float>, ptr %arrayidx.i, align 4, !tbaa !137
  %67 = fadd <2 x float> %65, %66
  store <2 x float> %67, ptr %arrayidx.i, align 4, !tbaa !137
  %arrayidx12.i.i25 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 9, i64 1, i32 0, i64 2
  %68 = load float, ptr %arrayidx12.i.i25, align 4, !tbaa !137
  %add13.i.i26 = fadd float %44, %68
  store float %add13.i.i26, ptr %arrayidx12.i.i25, align 4, !tbaa !137
  %m_av.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 14
  %69 = load <2 x float>, ptr %m_av.i, align 4, !tbaa !137
  %70 = fadd <2 x float> %65, %69
  store <2 x float> %70, ptr %m_av.i, align 4, !tbaa !137
  %arrayidx12.i11.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 14, i32 0, i64 2
  %71 = load float, ptr %arrayidx12.i11.i, align 4, !tbaa !137
  %add13.i12.i = fadd float %44, %71
  store float %add13.i12.i, ptr %arrayidx12.i11.i, align 4, !tbaa !137
  %m_nvimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 11
  %72 = load i32, ptr %m_nvimpulses.i, align 8, !tbaa !321
  %inc.i = add nsw i32 %72, 1
  store i32 %inc.i, ptr %m_nvimpulses.i, align 8, !tbaa !321
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN15btSoftColliders13CollideSDF_RSD0Ev(ptr noundef nonnull align 8 dereferenceable(40) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN15btSoftColliders13CollideSDF_RS7ProcessEPK10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(40) %this, ptr noundef %leaf) unnamed_addr #4 comdat align 2 {
entry:
  %0 = getelementptr inbounds %struct.btDbvtNode, ptr %leaf, i64 0, i32 2
  %1 = load ptr, ptr %0, align 8, !tbaa !164
  tail call void @_ZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeE(ptr noundef nonnull align 8 dereferenceable(40) %this, ptr noundef nonnull align 8 dereferenceable(113) %1)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeE(ptr noundef nonnull align 8 dereferenceable(40) %this, ptr noundef nonnull align 8 dereferenceable(113) %n) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %c = alloca %"struct.btSoftBody::RContact", align 8
  %ra = alloca %class.btVector3, align 8
  %ref.tmp73 = alloca %class.btMatrix3x3, align 4
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %n, i64 0, i32 6
  %0 = load float, ptr %m_im, align 8, !tbaa !175
  %dynmargin = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %this, i64 0, i32 4
  %stamargin = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %this, i64 0, i32 5
  %dynmargin.val = load float, ptr %dynmargin, align 8
  %stamargin.val = load float, ptr %stamargin, align 4
  call void @llvm.lifetime.start.p0(i64 120, ptr nonnull %c) #38
  %m_battach = getelementptr inbounds %"struct.btSoftBody::Node", ptr %n, i64 0, i32 9
  %bf.load = load i8, ptr %m_battach, align 8
  %1 = and i8 %bf.load, 1
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.end106

land.lhs.true:                                    ; preds = %entry
  %cmp = fcmp ogt float %0, 0.000000e+00
  %cond = select i1 %cmp, float %dynmargin.val, float %stamargin.val
  %psb = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %this, i64 0, i32 1
  %2 = load ptr, ptr %psb, align 8, !tbaa !568
  %m_colObj1 = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %this, i64 0, i32 2
  %3 = load ptr, ptr %m_colObj1, align 8, !tbaa !570
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %n, i64 0, i32 1
  %call = call noundef zeroext i1 @_ZNK10btSoftBody12checkContactEP17btCollisionObjectRK9btVector3fRNS_4sCtiE(ptr noundef nonnull align 8 dereferenceable(1496) %2, ptr noundef %3, ptr noundef nonnull align 4 dereferenceable(16) %m_x, float noundef %cond, ptr noundef nonnull align 8 dereferenceable(28) %c)
  br i1 %call, label %if.then, label %if.end106

if.then:                                          ; preds = %land.lhs.true
  %4 = load float, ptr %m_im, align 8, !tbaa !175
  %m_rigidBody = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %this, i64 0, i32 3
  %5 = load ptr, ptr %m_rigidBody, align 8, !tbaa !571
  %tobool3.not = icmp eq ptr %5, null
  br i1 %tobool3.not, label %cond.end8, label %cond.end8.thread

cond.end8:                                        ; preds = %if.then
  %add = fadd float %4, 0.000000e+00
  %cmp10 = fcmp ogt float %add, 0.000000e+00
  br i1 %cmp10, label %cond.false17, label %if.end106

cond.end8.thread:                                 ; preds = %if.then
  %m_inverseMass.i = getelementptr inbounds %class.btRigidBody, ptr %5, i64 0, i32 4
  %6 = load float, ptr %m_inverseMass.i, align 8, !tbaa !452
  %add196 = fadd float %4, %6
  %cmp10197 = fcmp ogt float %add196, 0.000000e+00
  br i1 %cmp10197, label %cond.true14, label %if.end106

cond.true14:                                      ; preds = %cond.end8.thread
  %m_interpolationWorldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2
  br label %cond.end20

cond.false17:                                     ; preds = %cond.end8
  %7 = load ptr, ptr %m_colObj1, align 8, !tbaa !570
  %m_worldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %7, i64 0, i32 1
  br label %cond.end20

cond.end20:                                       ; preds = %cond.false17, %cond.true14
  %cond9198200 = phi float [ %6, %cond.true14 ], [ 0.000000e+00, %cond.false17 ]
  %cond-lvalue = phi ptr [ %m_interpolationWorldTransform.i, %cond.true14 ], [ %m_worldTransform.i, %cond.false17 ]
  %8 = load atomic i8, ptr @_ZGVZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic acquire, align 8
  %guard.uninitialized = icmp eq i8 %8, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !173

init.check:                                       ; preds = %cond.end20
  %9 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic) #38
  %tobool21.not = icmp eq i32 %9, 0
  br i1 %tobool21.not, label %init.end, label %invoke.cont

invoke.cont:                                      ; preds = %init.check
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) @_ZZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic, i8 0, i64 48, i1 false)
  %10 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic) #38
  br label %init.end

init.end:                                         ; preds = %invoke.cont, %init.check, %cond.end20
  %11 = load ptr, ptr %m_rigidBody, align 8, !tbaa !571
  %tobool31.not = icmp eq ptr %11, null
  %m_invInertiaTensorWorld.i = getelementptr inbounds %class.btRigidBody, ptr %11, i64 0, i32 1
  %spec.select = select i1 %tobool31.not, ptr @_ZZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic, ptr %m_invInertiaTensorWorld.i
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ra) #38
  %m_origin.i = getelementptr inbounds %class.btTransform, ptr %cond-lvalue, i64 0, i32 1
  %arrayidx5.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %n, i64 0, i32 1, i32 0, i64 1
  %12 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds %class.btTransform, ptr %cond-lvalue, i64 0, i32 1, i32 0, i64 1
  %13 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %sub8.i = fsub float %12, %13
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %n, i64 0, i32 1, i32 0, i64 2
  %arrayidx13.i = getelementptr inbounds %class.btTransform, ptr %cond-lvalue, i64 0, i32 1, i32 0, i64 2
  %14 = load float, ptr %m_x, align 8, !tbaa !137
  %15 = load float, ptr %m_origin.i, align 4, !tbaa !137
  %16 = load float, ptr %arrayidx11.i, align 8, !tbaa !137
  %17 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %18 = insertelement <2 x float> poison, float %16, i64 0
  %19 = insertelement <2 x float> %18, float %14, i64 1
  %20 = insertelement <2 x float> poison, float %17, i64 0
  %21 = insertelement <2 x float> %20, float %15, i64 1
  %22 = fsub <2 x float> %19, %21
  %23 = shufflevector <2 x float> %22, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %retval.sroa.0.4.vec.insert.i = insertelement <2 x float> %23, float %sub8.i, i64 1
  %24 = insertelement <2 x float> %22, float 0.000000e+00, i64 1
  store <2 x float> %retval.sroa.0.4.vec.insert.i, ptr %ra, align 8
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ra, i64 0, i32 1
  store <2 x float> %24, ptr %25, align 8
  br i1 %tobool31.not, label %init.end.cond.end55_crit_edge, label %cond.true43

init.end.cond.end55_crit_edge:                    ; preds = %init.end
  %.pre = load ptr, ptr %psb, align 8
  %m_sst75.phi.trans.insert = getelementptr inbounds %class.btSoftBody, ptr %.pre, i64 0, i32 3
  %.pre202 = load float, ptr %m_sst75.phi.trans.insert, align 8, !tbaa !420
  br label %cond.end55

cond.true43:                                      ; preds = %init.end
  %m_linearVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %11, i64 0, i32 2
  %m_angularVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %11, i64 0, i32 3
  %arrayidx.i.i = getelementptr inbounds %class.btRigidBody, ptr %11, i64 0, i32 3, i32 0, i64 1
  %26 = load float, ptr %m_angularVelocity.i, align 8, !tbaa !137
  %arrayidx11.i.i = getelementptr inbounds %class.btRigidBody, ptr %11, i64 0, i32 2, i32 0, i64 2
  %27 = load float, ptr %arrayidx11.i.i, align 8, !tbaa !137
  %28 = load ptr, ptr %psb, align 8
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %28, i64 0, i32 3
  %29 = load float, ptr %m_sst, align 4, !tbaa !137
  %30 = load <2 x float>, ptr %arrayidx.i.i, align 4, !tbaa !137
  %31 = insertelement <2 x float> %30, float %26, i64 0
  %32 = fneg <2 x float> %31
  %33 = insertelement <2 x float> %22, float %sub8.i, i64 1
  %34 = fmul <2 x float> %33, %32
  %35 = shufflevector <2 x float> %34, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %36 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %30, <2 x float> %22, <2 x float> %35)
  %37 = extractelement <2 x float> %30, i64 0
  %38 = fneg float %37
  %39 = extractelement <2 x float> %22, i64 1
  %neg30.i.i = fmul float %39, %38
  %40 = tail call float @llvm.fmuladd.f32(float %26, float %sub8.i, float %neg30.i.i)
  %41 = load <2 x float>, ptr %m_linearVelocity.i, align 8, !tbaa !137
  %42 = fadd <2 x float> %36, %41
  %add14.i.i = fadd float %40, %27
  %43 = insertelement <2 x float> poison, float %29, i64 0
  %44 = shufflevector <2 x float> %43, <2 x float> poison, <2 x i32> zeroinitializer
  %45 = fmul <2 x float> %42, %44
  %mul8.i = fmul float %add14.i.i, %29
  %retval.sroa.3.12.vec.insert.i125 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i, i64 0
  br label %cond.end55

cond.end55:                                       ; preds = %init.end.cond.end55_crit_edge, %cond.true43
  %46 = phi float [ %29, %cond.true43 ], [ %.pre202, %init.end.cond.end55_crit_edge ]
  %47 = phi ptr [ %28, %cond.true43 ], [ %.pre, %init.end.cond.end55_crit_edge ]
  %va.sroa.0.0 = phi <2 x float> [ %45, %cond.true43 ], [ zeroinitializer, %init.end.cond.end55_crit_edge ]
  %va.sroa.7.0 = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i125, %cond.true43 ], [ zeroinitializer, %init.end.cond.end55_crit_edge ]
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %n, i64 0, i32 2
  %48 = load float, ptr %m_q, align 8, !tbaa !137
  %sub.i131 = fsub float %14, %48
  %arrayidx7.i133 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %n, i64 0, i32 2, i32 0, i64 1
  %49 = load float, ptr %arrayidx7.i133, align 4, !tbaa !137
  %sub8.i134 = fsub float %12, %49
  %arrayidx13.i136 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %n, i64 0, i32 2, i32 0, i64 2
  %50 = load float, ptr %arrayidx13.i136, align 8, !tbaa !137
  %sub14.i137 = fsub float %16, %50
  %va.sroa.0.0.vec.extract = extractelement <2 x float> %va.sroa.0.0, i64 0
  %sub.i143 = fsub float %sub.i131, %va.sroa.0.0.vec.extract
  %va.sroa.0.4.vec.extract = extractelement <2 x float> %va.sroa.0.0, i64 1
  %sub8.i146 = fsub float %sub8.i134, %va.sroa.0.4.vec.extract
  %va.sroa.7.8.vec.extract = extractelement <2 x float> %va.sroa.7.0, i64 0
  %sub14.i149 = fsub float %sub14.i137, %va.sroa.7.8.vec.extract
  %m_normal = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %c, i64 0, i32 1
  %51 = load float, ptr %m_normal, align 8, !tbaa !137
  %arrayidx7.i.i156 = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %c, i64 0, i32 1, i32 0, i64 1
  %52 = load float, ptr %arrayidx7.i.i156, align 4, !tbaa !137
  %mul8.i.i = fmul float %sub8.i146, %52
  %53 = tail call float @llvm.fmuladd.f32(float %sub.i143, float %51, float %mul8.i.i)
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %c, i64 0, i32 1, i32 0, i64 2
  %54 = load float, ptr %arrayidx12.i.i, align 8, !tbaa !137
  %55 = tail call float @llvm.fmuladd.f32(float %sub14.i149, float %54, float %53)
  %mul.i157 = fmul float %51, %55
  %mul4.i159 = fmul float %52, %55
  %mul8.i161 = fmul float %54, %55
  %sub.i167 = fsub float %sub.i143, %mul.i157
  %sub8.i170 = fsub float %sub8.i146, %mul4.i159
  %sub14.i173 = fsub float %sub14.i149, %mul8.i161
  %kDF = getelementptr inbounds %class.btSoftBody, ptr %47, i64 0, i32 2, i32 7
  %56 = load float, ptr %kDF, align 4, !tbaa !597
  %57 = load ptr, ptr %m_colObj1, align 8, !tbaa !570
  %m_friction.i = getelementptr inbounds %class.btCollisionObject, ptr %57, i64 0, i32 16
  %58 = load float, ptr %m_friction.i, align 4, !tbaa !581
  %mul = fmul float %56, %58
  %m_node = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %c, i64 0, i32 1
  store ptr %n, ptr %m_node, align 8, !tbaa !561
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %ref.tmp73) #38
  call fastcc void @_ZL13ImpulseMatrixfffRK11btMatrix3x3RK9btVector3(ptr noalias nonnull align 4 %ref.tmp73, float noundef %46, float noundef %4, float noundef %cond9198200, ptr noundef nonnull align 4 dereferenceable(48) %spec.select, ptr noundef nonnull align 4 dereferenceable(16) %ra)
  %m_c0 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %c, i64 0, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_c0, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp73, i64 16, i1 false), !tbaa.struct !163
  %arrayidx5.i179 = getelementptr inbounds [3 x %class.btVector3], ptr %ref.tmp73, i64 0, i64 1
  %arrayidx7.i180 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %c, i64 0, i32 2, i32 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx7.i180, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i179, i64 16, i1 false), !tbaa.struct !163
  %arrayidx9.i = getelementptr inbounds [3 x %class.btVector3], ptr %ref.tmp73, i64 0, i64 2
  %arrayidx11.i181 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %c, i64 0, i32 2, i32 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx11.i181, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx9.i, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %ref.tmp73) #38
  %m_c1 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %c, i64 0, i32 3
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_c1, ptr noundef nonnull align 8 dereferenceable(16) %ra, i64 16, i1 false), !tbaa.struct !163
  %mul81 = fmul float %4, %46
  %m_c2 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %c, i64 0, i32 4
  store float %mul81, ptr %m_c2, align 8, !tbaa !598
  %mul8.i.i183 = fmul float %sub8.i170, %sub8.i170
  %59 = tail call float @llvm.fmuladd.f32(float %sub.i167, float %sub.i167, float %mul8.i.i183)
  %60 = tail call float @llvm.fmuladd.f32(float %sub14.i173, float %sub14.i173, float %59)
  %61 = tail call float @llvm.fabs.f32(float %55)
  %mul84 = fmul float %61, %mul
  %cmp85 = fcmp olt float %60, %mul84
  %sub = fsub float 1.000000e+00, %mul
  %cond89 = select i1 %cmp85, float 0.000000e+00, float %sub
  %m_c3 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %c, i64 0, i32 5
  store float %cond89, ptr %m_c3, align 4, !tbaa !599
  %m_collisionFlags.i = getelementptr inbounds %class.btCollisionObject, ptr %57, i64 0, i32 11
  %62 = load i32, ptr %m_collisionFlags.i, align 8, !tbaa !600
  %and.i = and i32 %62, 3
  %cmp.i.not = icmp eq i32 %and.i, 0
  %kKHR = getelementptr inbounds %class.btSoftBody, ptr %47, i64 0, i32 2, i32 10
  %kCHR = getelementptr inbounds %class.btSoftBody, ptr %47, i64 0, i32 2, i32 9
  %cond99.in = select i1 %cmp.i.not, ptr %kCHR, ptr %kKHR
  %cond99 = load float, ptr %cond99.in, align 4, !tbaa !137
  %m_c4 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %c, i64 0, i32 6
  store float %cond99, ptr %m_c4, align 8, !tbaa !563
  %m_rcontacts = getelementptr inbounds %class.btSoftBody, ptr %47, i64 0, i32 14
  call void @_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE9push_backERKS1_(ptr noundef nonnull align 8 dereferenceable(25) %m_rcontacts, ptr noundef nonnull align 8 dereferenceable(116) %c)
  %63 = load ptr, ptr %m_rigidBody, align 8, !tbaa !571
  %tobool102.not = icmp eq ptr %63, null
  br i1 %tobool102.not, label %if.end, label %if.then103

if.then103:                                       ; preds = %cond.end55
  call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %63, i1 noundef zeroext false)
  br label %if.end

if.end:                                           ; preds = %if.then103, %cond.end55
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ra) #38
  br label %if.end106

if.end106:                                        ; preds = %cond.end8.thread, %cond.end8, %if.end, %land.lhs.true, %entry
  call void @llvm.lifetime.end.p0(i64 120, ptr nonnull %c) #38
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE9push_backERKS1_(ptr noundef nonnull align 8 dereferenceable(25) %this, ptr noundef nonnull align 8 dereferenceable(116) %_Val) local_unnamed_addr #8 comdat align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !108
  %m_capacity.i = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 3
  %1 = load i32, ptr %m_capacity.i, align 8, !tbaa !109
  %cmp = icmp eq i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tobool.not.i = icmp eq i32 %0, 0
  %mul.i = shl nsw i32 %0, 1
  %cond.i = select i1 %tobool.not.i, i32 1, i32 %mul.i
  %cmp.i = icmp slt i32 %0, %cond.i
  br i1 %cmp.i, label %if.then.i, label %if.end

if.then.i:                                        ; preds = %if.then
  %tobool.not.i.i = icmp eq i32 %cond.i, 0
  br i1 %tobool.not.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE8allocateEi.exit.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %conv.i.i.i = sext i32 %cond.i to i64
  %mul.i.i.i = mul nsw i64 %conv.i.i.i, 120
  %call.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i, i32 noundef 16)
  %.pre = load i32, ptr %m_size.i, align 4, !tbaa !108
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE8allocateEi.exit.i

_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE8allocateEi.exit.i: ; preds = %if.then.i.i, %if.then.i
  %2 = phi i32 [ %.pre, %if.then.i.i ], [ %0, %if.then.i ]
  %retval.0.i.i = phi ptr [ %call.i.i.i, %if.then.i.i ], [ null, %if.then.i ]
  %cmp7.i.i = icmp sgt i32 %2, 0
  br i1 %cmp7.i.i, label %for.body.lr.ph.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8RContactEE4copyEiiPS1_.exit.i

for.body.lr.ph.i.i:                               ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE8allocateEi.exit.i
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 5
  %wide.trip.count.i.i = zext i32 %2 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %for.body.i.i ]
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %retval.0.i.i, i64 %indvars.iv.i.i
  %3 = load ptr, ptr %m_data.i.i, align 8, !tbaa !107
  %arrayidx3.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %3, i64 %indvars.iv.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %arrayidx.i.i, ptr noundef nonnull align 8 dereferenceable(40) %arrayidx3.i.i, i64 40, i1 false)
  %m_c0.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %retval.0.i.i, i64 %indvars.iv.i.i, i32 2
  %m_c03.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %3, i64 %indvars.iv.i.i, i32 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_c0.i.i.i, ptr noundef nonnull align 8 dereferenceable(16) %m_c03.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx6.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %3, i64 %indvars.iv.i.i, i32 2, i32 0, i64 1
  %arrayidx8.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %retval.0.i.i, i64 %indvars.iv.i.i, i32 2, i32 0, i64 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx8.i.i.i.i, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx6.i.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx10.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %3, i64 %indvars.iv.i.i, i32 2, i32 0, i64 2
  %arrayidx12.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %retval.0.i.i, i64 %indvars.iv.i.i, i32 2, i32 0, i64 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx12.i.i.i.i, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx10.i.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %m_c1.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %retval.0.i.i, i64 %indvars.iv.i.i, i32 3
  %m_c14.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %3, i64 %indvars.iv.i.i, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %m_c1.i.i.i, ptr noundef nonnull align 8 dereferenceable(28) %m_c14.i.i.i, i64 28, i1 false)
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8RContactEE4copyEiiPS1_.exit.i, label %for.body.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody8RContactEE4copyEiiPS1_.exit.i: ; preds = %for.body.i.i, %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE8allocateEi.exit.i
  %m_data.i9.i = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 5
  %4 = load ptr, ptr %m_data.i9.i, align 8, !tbaa !107
  %tobool.not.i10.i = icmp eq ptr %4, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 6
  %5 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %5, 0
  %or.cond.i = select i1 %tobool.not.i10.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE10deallocateEv.exit.i, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody8RContactEE4copyEiiPS1_.exit.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %4)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE10deallocateEv.exit.i

_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE10deallocateEv.exit.i: ; preds = %if.then3.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody8RContactEE4copyEiiPS1_.exit.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !106
  store ptr %retval.0.i.i, ptr %m_data.i9.i, align 8, !tbaa !107
  store i32 %cond.i, ptr %m_capacity.i, align 8, !tbaa !109
  %.pre7 = load i32, ptr %m_size.i, align 4, !tbaa !108
  br label %if.end

if.end:                                           ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE10deallocateEv.exit.i, %if.then, %entry
  %6 = phi i32 [ %.pre7, %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE10deallocateEv.exit.i ], [ %0, %if.then ], [ %0, %entry ]
  %m_data = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 5
  %7 = load ptr, ptr %m_data, align 8, !tbaa !107
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %idxprom
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %arrayidx, ptr noundef nonnull align 8 dereferenceable(40) %_Val, i64 40, i1 false)
  %m_c0.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %idxprom, i32 2
  %m_c03.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %_Val, i64 0, i32 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_c0.i, ptr noundef nonnull align 8 dereferenceable(16) %m_c03.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx6.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %_Val, i64 0, i32 2, i32 0, i64 1
  %arrayidx8.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %idxprom, i32 2, i32 0, i64 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx8.i.i, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx6.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx10.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %_Val, i64 0, i32 2, i32 0, i64 2
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %idxprom, i32 2, i32 0, i64 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx12.i.i, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx10.i.i, i64 16, i1 false), !tbaa.struct !163
  %m_c1.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %idxprom, i32 3
  %m_c14.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %_Val, i64 0, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %m_c1.i, ptr noundef nonnull align 8 dereferenceable(28) %m_c14.i, i64 28, i1 false)
  %8 = load i32, ptr %m_size.i, align 4, !tbaa !108
  %inc = add nsw i32 %8, 1
  store i32 %inc, ptr %m_size.i, align 4, !tbaa !108
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN15btSoftColliders12CollideCL_RSD0Ev(ptr noundef nonnull align 8 dereferenceable(48) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN15btSoftColliders12CollideCL_RS7ProcessEPK10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(48) %this, ptr noundef %leaf) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %cshape = alloca %class.btSoftClusterCollisionShape, align 8
  %res = alloca %"struct.btGjkEpaSolver2::sResults", align 4
  %ref.tmp = alloca %class.btVector3, align 16
  %joint = alloca %"struct.btSoftBody::CJoint", align 8
  %agg.tmp = alloca %"struct.btSoftBody::Body", align 8
  %agg.tmp20 = alloca %"struct.btSoftBody::Body", align 8
  %0 = getelementptr inbounds %struct.btDbvtNode, ptr %leaf, i64 0, i32 2
  %1 = load ptr, ptr %0, align 8, !tbaa !164
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %cshape) #38
  call void @_ZN21btConvexInternalShapeC2Ev(ptr noundef nonnull align 8 dereferenceable(64) %cshape)
  store ptr getelementptr inbounds ({ [21 x ptr] }, ptr @_ZTV27btSoftClusterCollisionShape, i64 0, inrange i32 0, i64 2), ptr %cshape, align 8, !tbaa !5
  %m_cluster.i = getelementptr inbounds %class.btSoftClusterCollisionShape, ptr %cshape, i64 0, i32 1
  store ptr %1, ptr %m_cluster.i, align 8, !tbaa !601
  %m_collisionMargin.i.i.i = getelementptr inbounds %class.btConvexInternalShape, ptr %cshape, i64 0, i32 3
  store float 0.000000e+00, ptr %m_collisionMargin.i.i.i, align 8, !tbaa !605
  %m_colObj = getelementptr inbounds %"struct.btSoftColliders::CollideCL_RS", ptr %this, i64 0, i32 2
  %2 = load ptr, ptr %m_colObj, align 8, !tbaa !578
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %2, i64 0, i32 9
  %3 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %m_collisionFlags.i = getelementptr inbounds %class.btCollisionObject, ptr %2, i64 0, i32 11
  %4 = load i32, ptr %m_collisionFlags.i, align 8, !tbaa !600
  %and.i = and i32 %4, 3
  %cmp.i.not = icmp eq i32 %and.i, 0
  br i1 %cmp.i.not, label %invoke.cont, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %m_containsAnchor = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 22
  %5 = load i8, ptr %m_containsAnchor, align 8, !tbaa !345, !range !159, !noundef !192
  %tobool.not = icmp eq i8 %5, 0
  br i1 %tobool.not, label %invoke.cont, label %cleanup

invoke.cont:                                      ; preds = %entry, %land.lhs.true
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %res) #38
  %6 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %6, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %invoke.cont4, !prof !173

init.check.i:                                     ; preds = %invoke.cont
  %7 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i = icmp eq i32 %7, 0
  br i1 %tobool.not.i, label %invoke.cont4, label %init.i

init.i:                                           ; preds = %init.check.i
  %call.i = invoke noundef nonnull align 4 dereferenceable(48) ptr @_ZN11btMatrix3x311getIdentityEv()
          to label %invoke.cont6.i unwind label %lpad.i

invoke.cont6.i:                                   ; preds = %init.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) %call.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx6.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %call.i, i64 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) %arrayidx6.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx10.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %call.i, i64 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) %arrayidx10.i.i.i, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %8 = call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont4

lpad.i:                                           ; preds = %init.i
  %9 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_guard_abort(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %ehcleanup57

invoke.cont4:                                     ; preds = %invoke.cont6.i, %init.check.i, %invoke.cont
  %10 = load ptr, ptr %m_colObj, align 8, !tbaa !578
  %m_interpolationWorldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %10, i64 0, i32 2
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #38
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, ptr %ref.tmp, align 16, !tbaa !137
  %call14 = invoke noundef zeroext i1 @_ZN15btGjkEpaSolver214SignedDistanceEPK13btConvexShapeRK11btTransformS2_S5_RK9btVector3RNS_8sResultsE(ptr noundef nonnull %cshape, ptr noundef nonnull align 4 dereferenceable(64) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef %3, ptr noundef nonnull align 4 dereferenceable(64) %m_interpolationWorldTransform.i, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp, ptr noundef nonnull align 4 dereferenceable(56) %res)
          to label %invoke.cont13 unwind label %lpad11

invoke.cont13:                                    ; preds = %invoke.cont4
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  br i1 %call14, label %invoke.cont22, label %if.end56

invoke.cont22:                                    ; preds = %invoke.cont13
  call void @llvm.lifetime.start.p0(i64 248, ptr nonnull %joint) #38
  %m_bodies.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %m_bodies.i.i, i8 0, i64 48, i1 false)
  %m_delete.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 9
  store i8 0, ptr %m_delete.i.i, align 4, !tbaa !484
  store ptr getelementptr inbounds ({ [8 x ptr] }, ptr @_ZTVN10btSoftBody6CJointE, i64 0, inrange i32 0, i64 2), ptr %joint, align 8, !tbaa !5
  store ptr %1, ptr %agg.tmp, align 8, !tbaa !272
  %m_rigid.i = getelementptr inbounds %"struct.btSoftBody::Body", ptr %agg.tmp, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rigid.i, i8 0, i64 16, i1 false)
  %11 = load ptr, ptr %m_colObj, align 8, !tbaa !578
  store ptr null, ptr %agg.tmp20, align 8, !tbaa !272
  %m_collisionObject.i = getelementptr inbounds %"struct.btSoftBody::Body", ptr %agg.tmp20, i64 0, i32 2
  store ptr %11, ptr %m_collisionObject.i, align 8, !tbaa !253
  %m_internalType.i.i.i = getelementptr inbounds %class.btCollisionObject, ptr %11, i64 0, i32 19
  %12 = load i32, ptr %m_internalType.i.i.i, align 8, !tbaa !134
  %cmp.i.i = icmp eq i32 %12, 2
  %colObj..i.i = select i1 %cmp.i.i, ptr %11, ptr null
  %m_rigid.i78 = getelementptr inbounds %"struct.btSoftBody::Body", ptr %agg.tmp20, i64 0, i32 1
  store ptr %colObj..i.i, ptr %m_rigid.i78, align 8, !tbaa !511
  %call24 = invoke noundef zeroext i1 @_ZN15btSoftColliders11ClusterBase12SolveContactERKN15btGjkEpaSolver28sResultsEN10btSoftBody4BodyES6_RNS5_6CJointE(ptr noundef nonnull align 8 dereferenceable(28) %this, ptr noundef nonnull align 4 dereferenceable(56) %res, ptr noundef nonnull byval(%"struct.btSoftBody::Body") align 8 %agg.tmp, ptr noundef nonnull byval(%"struct.btSoftBody::Body") align 8 %agg.tmp20, ptr noundef nonnull align 8 dereferenceable(244) %joint)
          to label %invoke.cont23 unwind label %lpad18

invoke.cont23:                                    ; preds = %invoke.cont22
  br i1 %call24, label %if.then25, label %if.end51

if.then25:                                        ; preds = %invoke.cont23
  %call28 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 248, i32 noundef 16)
          to label %invoke.cont30 unwind label %lpad26

invoke.cont30:                                    ; preds = %if.then25
  %m_bodies.i.i79 = getelementptr %"struct.btSoftBody::Joint", ptr %call28, i64 0, i32 1
  %m_delete.i.i80 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call28, i64 0, i32 9
  %13 = getelementptr inbounds i8, ptr %call28, i64 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(240) %13, i8 0, i64 240, i1 false)
  store ptr getelementptr inbounds ({ [8 x ptr] }, ptr @_ZTVN10btSoftBody6CJointE, i64 0, inrange i32 0, i64 2), ptr %call28, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(124) %m_bodies.i.i79, ptr noundef nonnull align 8 dereferenceable(124) %m_bodies.i.i, i64 124, i1 false)
  %m_massmatrix.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call28, i64 0, i32 8
  %m_massmatrix3.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %m_massmatrix.i.i, ptr noundef nonnull align 4 dereferenceable(16) %m_massmatrix3.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx5.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 8, i32 0, i64 1
  %arrayidx7.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call28, i64 0, i32 8, i32 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx7.i.i.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx9.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 8, i32 0, i64 2
  %arrayidx11.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call28, i64 0, i32 8, i32 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx11.i.i.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx9.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %14 = load i8, ptr %m_delete.i.i, align 4, !tbaa !484, !range !159, !noundef !192
  store i8 %14, ptr %m_delete.i.i80, align 4, !tbaa !484
  %m_life.i = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %call28, i64 0, i32 1
  %m_life2.i = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(60) %m_life.i, ptr noundef nonnull align 8 dereferenceable(60) %m_life2.i, i64 60, i1 false)
  %psb = getelementptr inbounds %"struct.btSoftColliders::CollideCL_RS", ptr %this, i64 0, i32 1
  %15 = load ptr, ptr %psb, align 8, !tbaa !576
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %15, i64 0, i32 16, i32 2
  %16 = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %15, i64 0, i32 16, i32 3
  %17 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !117
  %cmp.i83 = icmp eq i32 %16, %17
  br i1 %cmp.i83, label %if.then.i, label %invoke.cont34

if.then.i:                                        ; preds = %invoke.cont30
  %tobool.not.i.i = icmp eq i32 %16, 0
  %mul.i.i = shl nsw i32 %16, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i84 = icmp slt i32 %16, %cond.i.i
  br i1 %cmp.i.i84, label %if.then.i.i, label %invoke.cont34

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 3
  %call.i.i.i.i85 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
          to label %call.i.i.i.i.noexc unwind label %lpad33

call.i.i.i.i.noexc:                               ; preds = %if.then.i.i.i
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i: ; preds = %call.i.i.i.i.noexc, %if.then.i.i
  %18 = phi i32 [ %.pre.i, %call.i.i.i.i.noexc ], [ %16, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i85, %call.i.i.i.i.noexc ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %18, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %15, i64 0, i32 16, i32 5
  %wide.trip.count.i.i.i = zext i32 %18 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 3
  %19 = icmp ult i32 %18, 4
  br i1 %19, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967292
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.3, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %20 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i = getelementptr inbounds ptr, ptr %20, i64 %indvars.iv.i.i.i
  %21 = load ptr, ptr %arrayidx3.i.i.i, align 8, !tbaa !219
  store ptr %21, ptr %arrayidx.i.i.i, align 8, !tbaa !219
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %22 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.1 = getelementptr inbounds ptr, ptr %22, i64 %indvars.iv.next.i.i.i
  %23 = load ptr, ptr %arrayidx3.i.i.i.1, align 8, !tbaa !219
  store ptr %23, ptr %arrayidx.i.i.i.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.1 = or i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %24 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.2 = getelementptr inbounds ptr, ptr %24, i64 %indvars.iv.next.i.i.i.1
  %25 = load ptr, ptr %arrayidx3.i.i.i.2, align 8, !tbaa !219
  store ptr %25, ptr %arrayidx.i.i.i.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.2 = or i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %26 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.3 = getelementptr inbounds ptr, ptr %26, i64 %indvars.iv.next.i.i.i.2
  %27 = load ptr, ptr %arrayidx3.i.i.i.3, align 8, !tbaa !219
  store ptr %27, ptr %arrayidx.i.i.i.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil
  %indvars.iv.i.i.i.epil = phi i64 [ %indvars.iv.next.i.i.i.epil, %for.body.i.i.i.epil ], [ %indvars.iv.i.i.i.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.i.i.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %arrayidx.i.i.i.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.epil
  %28 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.epil = getelementptr inbounds ptr, ptr %28, i64 %indvars.iv.i.i.i.epil
  %29 = load ptr, ptr %arrayidx3.i.i.i.epil, align 8, !tbaa !219
  store ptr %29, ptr %arrayidx.i.i.i.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.epil = add nuw nsw i64 %indvars.iv.i.i.i.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil, !llvm.loop !606

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %15, i64 0, i32 16, i32 5
  %30 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !115
  %tobool.not.i10.i.i = icmp eq ptr %30, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %15, i64 0, i32 16, i32 6
  %31 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %31, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %30)
          to label %.noexc unwind label %lpad33

.noexc:                                           ; preds = %if.then3.i.i.i
  %.pre7.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i: ; preds = %.noexc, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i
  %.pre7.i = phi i32 [ %.pre7.pre.i, %.noexc ], [ %18, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i ]
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !114
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !115
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !117
  br label %invoke.cont34

invoke.cont34:                                    ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i, %if.then.i, %invoke.cont30
  %32 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i ], [ %16, %if.then.i ], [ %16, %invoke.cont30 ]
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %15, i64 0, i32 16, i32 5
  %33 = load ptr, ptr %m_data.i, align 8, !tbaa !115
  %idxprom.i = sext i32 %32 to i64
  %arrayidx.i = getelementptr inbounds ptr, ptr %33, i64 %idxprom.i
  store ptr %call28, ptr %arrayidx.i, align 8, !tbaa !219
  %inc.i = add nsw i32 %32, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !116
  %34 = load ptr, ptr %m_colObj, align 8, !tbaa !578
  %m_collisionFlags.i86 = getelementptr inbounds %class.btCollisionObject, ptr %34, i64 0, i32 11
  %35 = load i32, ptr %m_collisionFlags.i86, align 8, !tbaa !600
  %and.i87 = and i32 %35, 3
  %cmp.i88.not = icmp eq i32 %and.i87, 0
  %36 = load ptr, ptr %psb, align 8, !tbaa !576
  %m_erp44 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call28, i64 0, i32 4
  %37 = load float, ptr %m_erp44, align 4, !tbaa !535
  %m_split48 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call28, i64 0, i32 5
  br i1 %cmp.i88.not, label %if.else, label %if.then37

if.then37:                                        ; preds = %invoke.cont34
  %kSKHR_CL = getelementptr inbounds %class.btSoftBody, ptr %36, i64 0, i32 2, i32 14
  %38 = load float, ptr %kSKHR_CL, align 8, !tbaa !607
  %mul = fmul float %38, %37
  store float %mul, ptr %m_erp44, align 4, !tbaa !535
  %kSK_SPLT_CL = getelementptr inbounds %class.btSoftBody, ptr %36, i64 0, i32 2, i32 17
  br label %if.end51.sink.split

lpad11:                                           ; preds = %invoke.cont4
  %39 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  br label %ehcleanup57

lpad18:                                           ; preds = %invoke.cont22
  %40 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup55

lpad26:                                           ; preds = %if.then25
  %41 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup55

lpad33:                                           ; preds = %if.then3.i.i.i, %if.then.i.i.i
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup55

if.else:                                          ; preds = %invoke.cont34
  %kSRHR_CL = getelementptr inbounds %class.btSoftBody, ptr %36, i64 0, i32 2, i32 13
  %43 = load float, ptr %kSRHR_CL, align 4, !tbaa !608
  %mul45 = fmul float %43, %37
  store float %mul45, ptr %m_erp44, align 4, !tbaa !535
  %kSR_SPLT_CL = getelementptr inbounds %class.btSoftBody, ptr %36, i64 0, i32 2, i32 16
  br label %if.end51.sink.split

if.end51.sink.split:                              ; preds = %if.else, %if.then37
  %.sink.in = phi ptr [ %kSK_SPLT_CL, %if.then37 ], [ %kSR_SPLT_CL, %if.else ]
  %.sink = load float, ptr %.sink.in, align 4, !tbaa !137
  %44 = load float, ptr %m_split48, align 8, !tbaa !269
  %mul41 = fmul float %.sink, %44
  store float %mul41, ptr %m_split48, align 8, !tbaa !269
  br label %if.end51

if.end51:                                         ; preds = %if.end51.sink.split, %invoke.cont23
  call void @llvm.lifetime.end.p0(i64 248, ptr nonnull %joint) #38
  br label %if.end56

ehcleanup55:                                      ; preds = %lpad18, %lpad33, %lpad26
  %.pn.pn.pn = phi { ptr, i32 } [ %40, %lpad18 ], [ %42, %lpad33 ], [ %41, %lpad26 ]
  call void @llvm.lifetime.end.p0(i64 248, ptr nonnull %joint) #38
  br label %ehcleanup57

if.end56:                                         ; preds = %if.end51, %invoke.cont13
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %res) #38
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true, %if.end56
  call void @_ZN13btConvexShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %cshape)
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %cshape) #38
  ret void

ehcleanup57:                                      ; preds = %lpad.i, %ehcleanup55, %lpad11
  %.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn, %ehcleanup55 ], [ %39, %lpad11 ], [ %9, %lpad.i ]
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %res) #38
  invoke void @_ZN13btConvexShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %cshape)
          to label %invoke.cont61 unwind label %terminate.lpad

invoke.cont61:                                    ; preds = %ehcleanup57
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %cshape) #38
  resume { ptr, i32 } %.pn.pn.pn.pn

terminate.lpad:                                   ; preds = %ehcleanup57
  %45 = landingpad { ptr, i32 }
          catch ptr null
  %46 = extractvalue { ptr, i32 } %45, 0
  call void @__clang_call_terminate(ptr %46) #39
  unreachable
}

declare noundef zeroext i1 @_ZN15btGjkEpaSolver214SignedDistanceEPK13btConvexShapeRK11btTransformS2_S5_RK9btVector3RNS_8sResultsE(ptr noundef, ptr noundef nonnull align 4 dereferenceable(64), ptr noundef, ptr noundef nonnull align 4 dereferenceable(64), ptr noundef nonnull align 4 dereferenceable(16), ptr noundef nonnull align 4 dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN15btSoftColliders11ClusterBase12SolveContactERKN15btGjkEpaSolver28sResultsEN10btSoftBody4BodyES6_RNS5_6CJointE(ptr noundef nonnull align 8 dereferenceable(28) %this, ptr noundef nonnull align 4 dereferenceable(56) %res, ptr noundef byval(%"struct.btSoftBody::Body") align 8 %ba, ptr noundef byval(%"struct.btSoftBody::Body") align 8 %bb, ptr noundef nonnull align 8 dereferenceable(244) %joint) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %ref.tmp48 = alloca %class.btMatrix3x3, align 4
  %distance = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 3
  %0 = load float, ptr %distance, align 4, !tbaa !609
  %m_margin = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %this, i64 0, i32 3
  %1 = load float, ptr %m_margin, align 8, !tbaa !580
  %cmp = fcmp olt float %0, %1
  br i1 %cmp, label %if.then, label %return

if.then:                                          ; preds = %entry
  %normal = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 2
  %2 = load <2 x float>, ptr %normal, align 4
  %norm.sroa.14.0.normal.sroa_idx = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 2, i32 0, i64 2
  %norm.sroa.14.0.copyload = load float, ptr %norm.sroa.14.0.normal.sroa_idx, align 4, !tbaa.struct !165
  %norm.sroa.19.0.normal.sroa_idx = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 2, i32 0, i64 3
  %norm.sroa.19.0.copyload = load float, ptr %norm.sroa.19.0.normal.sroa_idx, align 4, !tbaa.struct !318
  %3 = fmul <2 x float> %2, %2
  %mul8.i.i.i.i = extractelement <2 x float> %3, i64 1
  %4 = extractelement <2 x float> %2, i64 0
  %5 = tail call float @llvm.fmuladd.f32(float %4, float %4, float %mul8.i.i.i.i)
  %6 = tail call float @llvm.fmuladd.f32(float %norm.sroa.14.0.copyload, float %norm.sroa.14.0.copyload, float %5)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %6)
  %div.i.i = fdiv float 1.000000e+00, %sqrt.i.i
  %7 = insertelement <2 x float> poison, float %div.i.i, i64 0
  %8 = shufflevector <2 x float> %7, <2 x float> poison, <2 x i32> zeroinitializer
  %9 = fmul <2 x float> %2, %8
  %mul7.i.i.i = fmul float %norm.sroa.14.0.copyload, %div.i.i
  %witnesses = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 1
  %10 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %10, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZNK10btSoftBody4Body5xformEv.exit, !prof !173

init.check.i:                                     ; preds = %if.then
  %11 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i = icmp eq i32 %11, 0
  br i1 %tobool.not.i, label %_ZNK10btSoftBody4Body5xformEv.exit, label %init.i

init.i:                                           ; preds = %init.check.i
  %12 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i297 = icmp eq i8 %12, 0
  br i1 %guard.uninitialized.i297, label %init.check.i299, label %invoke.cont2.i, !prof !173

init.check.i299:                                  ; preds = %init.i
  %13 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i298 = icmp eq i32 %13, 0
  br i1 %tobool.not.i298, label %invoke.cont2.i, label %init.i301

init.i301:                                        ; preds = %init.check.i299
  %14 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i337 = icmp eq i8 %14, 0
  br i1 %guard.uninitialized.i337, label %init.check.i339, label %invoke.cont6.i, !prof !173

init.check.i339:                                  ; preds = %init.i301
  %15 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i338 = icmp eq i32 %15, 0
  br i1 %tobool.not.i338, label %invoke.cont6.i, label %invoke.cont.i340

invoke.cont.i340:                                 ; preds = %init.check.i339
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %16 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont6.i

invoke.cont6.i:                                   ; preds = %invoke.cont.i340, %init.check.i339, %init.i301
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %17 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont2.i

invoke.cont2.i:                                   ; preds = %invoke.cont6.i, %init.check.i299, %init.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %18 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit

_ZNK10btSoftBody4Body5xformEv.exit:               ; preds = %if.then, %init.check.i, %invoke.cont2.i
  %m_collisionObject.i = getelementptr inbounds %"struct.btSoftBody::Body", ptr %ba, i64 0, i32 2
  %19 = load ptr, ptr %m_collisionObject.i, align 8, !tbaa !253
  %tobool3.not.i = icmp eq ptr %19, null
  %m_interpolationWorldTransform.i.i = getelementptr inbounds %class.btCollisionObject, ptr %19, i64 0, i32 2
  %20 = load ptr, ptr %ba, align 8
  %tobool6.not.i = icmp eq ptr %20, null
  %m_framexform.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %20, i64 0, i32 3
  %spec.select.i = select i1 %tobool6.not.i, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i
  %retval.0.i = select i1 %tobool3.not.i, ptr %spec.select.i, ptr %m_interpolationWorldTransform.i.i
  %m_origin.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i, i64 0, i32 1
  %arrayidx5.i = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 1, i64 0, i32 0, i64 1
  %21 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i, i64 0, i32 1, i32 0, i64 1
  %22 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %sub8.i = fsub float %21, %22
  %arrayidx11.i = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 1, i64 0, i32 0, i64 2
  %arrayidx13.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i, i64 0, i32 1, i32 0, i64 2
  %23 = load float, ptr %witnesses, align 4, !tbaa !137
  %24 = load float, ptr %m_origin.i, align 4, !tbaa !137
  %25 = load <4 x float>, ptr %arrayidx11.i, align 4
  %26 = shufflevector <4 x float> %25, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %27 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %28 = insertelement <2 x float> %26, float %23, i64 1
  %29 = insertelement <2 x float> poison, float %27, i64 0
  %30 = insertelement <2 x float> %29, float %24, i64 1
  %31 = fsub <2 x float> %28, %30
  %32 = shufflevector <2 x float> %31, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %retval.sroa.0.4.vec.insert.i = insertelement <2 x float> %32, float %sub8.i, i64 1
  %33 = insertelement <2 x float> %31, float 0.000000e+00, i64 1
  %arrayidx6 = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 1, i64 1
  %34 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i79 = icmp eq i8 %34, 0
  br i1 %guard.uninitialized.i79, label %init.check.i81, label %_ZNK10btSoftBody4Body5xformEv.exit96, !prof !173

init.check.i81:                                   ; preds = %_ZNK10btSoftBody4Body5xformEv.exit
  %35 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i80 = icmp eq i32 %35, 0
  br i1 %tobool.not.i80, label %_ZNK10btSoftBody4Body5xformEv.exit96, label %init.i83

init.i83:                                         ; preds = %init.check.i81
  %36 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i305 = icmp eq i8 %36, 0
  br i1 %guard.uninitialized.i305, label %init.check.i307, label %invoke.cont2.i87, !prof !173

init.check.i307:                                  ; preds = %init.i83
  %37 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i306 = icmp eq i32 %37, 0
  br i1 %tobool.not.i306, label %invoke.cont2.i87, label %init.i308

init.i308:                                        ; preds = %init.check.i307
  %38 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i341 = icmp eq i8 %38, 0
  br i1 %guard.uninitialized.i341, label %init.check.i343, label %invoke.cont6.i311, !prof !173

init.check.i343:                                  ; preds = %init.i308
  %39 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i342 = icmp eq i32 %39, 0
  br i1 %tobool.not.i342, label %invoke.cont6.i311, label %invoke.cont.i344

invoke.cont.i344:                                 ; preds = %init.check.i343
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %40 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont6.i311

invoke.cont6.i311:                                ; preds = %invoke.cont.i344, %init.check.i343, %init.i308
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %41 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont2.i87

invoke.cont2.i87:                                 ; preds = %invoke.cont6.i311, %init.check.i307, %init.i83
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %42 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit96

_ZNK10btSoftBody4Body5xformEv.exit96:             ; preds = %_ZNK10btSoftBody4Body5xformEv.exit, %init.check.i81, %invoke.cont2.i87
  %m_collisionObject.i88 = getelementptr inbounds %"struct.btSoftBody::Body", ptr %bb, i64 0, i32 2
  %43 = load ptr, ptr %m_collisionObject.i88, align 8, !tbaa !253
  %tobool3.not.i89 = icmp eq ptr %43, null
  %m_interpolationWorldTransform.i.i90 = getelementptr inbounds %class.btCollisionObject, ptr %43, i64 0, i32 2
  %44 = load ptr, ptr %bb, align 8
  %tobool6.not.i91 = icmp eq ptr %44, null
  %m_framexform.i92 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %44, i64 0, i32 3
  %spec.select.i93 = select i1 %tobool6.not.i91, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i92
  %retval.0.i94 = select i1 %tobool3.not.i89, ptr %spec.select.i93, ptr %m_interpolationWorldTransform.i.i90
  %m_origin.i97 = getelementptr inbounds %class.btTransform, ptr %retval.0.i94, i64 0, i32 1
  %arrayidx5.i99 = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 1, i64 1, i32 0, i64 1
  %45 = load float, ptr %arrayidx5.i99, align 4, !tbaa !137
  %arrayidx7.i100 = getelementptr inbounds %class.btTransform, ptr %retval.0.i94, i64 0, i32 1, i32 0, i64 1
  %46 = load float, ptr %arrayidx7.i100, align 4, !tbaa !137
  %sub8.i101 = fsub float %45, %46
  %arrayidx11.i102 = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 1, i64 1, i32 0, i64 2
  %arrayidx13.i103 = getelementptr inbounds %class.btTransform, ptr %retval.0.i94, i64 0, i32 1, i32 0, i64 2
  %47 = load float, ptr %arrayidx6, align 4, !tbaa !137
  %48 = load float, ptr %m_origin.i97, align 4, !tbaa !137
  %49 = load <4 x float>, ptr %arrayidx11.i102, align 4
  %50 = shufflevector <4 x float> %49, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %51 = load float, ptr %arrayidx13.i103, align 4, !tbaa !137
  %52 = insertelement <2 x float> %50, float %47, i64 1
  %53 = insertelement <2 x float> poison, float %51, i64 0
  %54 = insertelement <2 x float> %53, float %48, i64 1
  %55 = fsub <2 x float> %52, %54
  %56 = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %retval.sroa.0.4.vec.insert.i106 = insertelement <2 x float> %56, float %sub8.i101, i64 1
  %57 = insertelement <2 x float> %55, float 0.000000e+00, i64 1
  %m_rigid.i.i = getelementptr inbounds %"struct.btSoftBody::Body", ptr %ba, i64 0, i32 1
  %58 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool.not.i.i = icmp eq ptr %58, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i10.i

if.end.i.i:                                       ; preds = %_ZNK10btSoftBody4Body5xformEv.exit96
  %59 = load ptr, ptr %ba, align 8, !tbaa !272
  %tobool3.not.i.i = icmp eq ptr %59, null
  br i1 %tobool3.not.i.i, label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit, label %if.then5.i.i

if.then.i10.i:                                    ; preds = %_ZNK10btSoftBody4Body5xformEv.exit96
  %m_linearVelocity.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %58, i64 0, i32 2
  %retval.sroa.0.0.copyload.i.i = load <2 x float>, ptr %m_linearVelocity.i.i.i, align 4, !tbaa.struct !163
  %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i = getelementptr inbounds %class.btRigidBody, ptr %58, i64 0, i32 2, i32 0, i64 2
  %retval.sroa.5.0.copyload.i.i = load <2 x float>, ptr %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i, align 4, !tbaa.struct !165
  %m_angularVelocity.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %58, i64 0, i32 3
  %arrayidx.i.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %58, i64 0, i32 3, i32 0, i64 1
  %60 = load float, ptr %m_angularVelocity.i.i.i, align 4, !tbaa !137
  %61 = load <2 x float>, ptr %arrayidx.i.i.i.i, align 4, !tbaa !137
  %62 = insertelement <2 x float> %61, float %60, i64 0
  %63 = fneg <2 x float> %62
  %64 = insertelement <2 x float> %31, float %sub8.i, i64 1
  %65 = fmul <2 x float> %64, %63
  %66 = shufflevector <2 x float> %65, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %67 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %61, <2 x float> %31, <2 x float> %66)
  %68 = extractelement <2 x float> %61, i64 0
  %69 = fneg float %68
  %70 = extractelement <2 x float> %31, i64 1
  %neg30.i.i.i.i = fmul float %70, %69
  %71 = tail call float @llvm.fmuladd.f32(float %60, float %sub8.i, float %neg30.i.i.i.i)
  %retval.sroa.3.12.vec.insert.i.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %71, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit

if.then5.i.i:                                     ; preds = %if.end.i.i
  %retval.sroa.5.0.m_lv.sroa_idx.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %59, i64 0, i32 13, i32 0, i64 2
  %retval.sroa.5.0.copyload12.i.i = load <2 x float>, ptr %retval.sroa.5.0.m_lv.sroa_idx.i.i, align 8, !tbaa.struct !165
  %m_lv.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %59, i64 0, i32 13
  %retval.sroa.0.0.copyload11.i.i = load <2 x float>, ptr %m_lv.i.i, align 8, !tbaa.struct !163
  %m_av.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %59, i64 0, i32 14
  %arrayidx.i.i15.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %59, i64 0, i32 14, i32 0, i64 1
  %72 = load float, ptr %m_av.i.i, align 4, !tbaa !137
  %73 = load <2 x float>, ptr %arrayidx.i.i15.i.i, align 4, !tbaa !137
  %74 = insertelement <2 x float> %73, float %72, i64 0
  %75 = fneg <2 x float> %74
  %76 = insertelement <2 x float> %31, float %sub8.i, i64 1
  %77 = fmul <2 x float> %76, %75
  %78 = shufflevector <2 x float> %77, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %79 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %73, <2 x float> %31, <2 x float> %78)
  %80 = extractelement <2 x float> %73, i64 0
  %81 = fneg float %80
  %82 = extractelement <2 x float> %31, i64 1
  %neg30.i.i21.i.i = fmul float %82, %81
  %83 = tail call float @llvm.fmuladd.f32(float %72, float %sub8.i, float %neg30.i.i21.i.i)
  %retval.sroa.3.12.vec.insert.i.i24.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %83, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit

_ZNK10btSoftBody4Body8velocityERK9btVector3.exit: ; preds = %if.end.i.i, %if.then.i10.i, %if.then5.i.i
  %retval.sroa.5.0.i24.i = phi <2 x float> [ %retval.sroa.5.0.copyload12.i.i, %if.then5.i.i ], [ %retval.sroa.5.0.copyload.i.i, %if.then.i10.i ], [ zeroinitializer, %if.end.i.i ]
  %retval.sroa.0.0.i22.i = phi <2 x float> [ %retval.sroa.0.0.copyload11.i.i, %if.then5.i.i ], [ %retval.sroa.0.0.copyload.i.i, %if.then.i10.i ], [ zeroinitializer, %if.end.i.i ]
  %retval.sroa.0.0.i12.i = phi <2 x float> [ %79, %if.then5.i.i ], [ %67, %if.then.i10.i ], [ zeroinitializer, %if.end.i.i ]
  %retval.sroa.5.0.i13.i = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i.i24.i.i, %if.then5.i.i ], [ %retval.sroa.3.12.vec.insert.i.i.i.i, %if.then.i10.i ], [ zeroinitializer, %if.end.i.i ]
  %84 = fadd <2 x float> %retval.sroa.0.0.i22.i, %retval.sroa.0.0.i12.i
  %85 = fadd <2 x float> %retval.sroa.0.0.i22.i, %retval.sroa.0.0.i12.i
  %86 = fadd <2 x float> %retval.sroa.5.0.i24.i, %retval.sroa.5.0.i13.i
  %m_rigid.i.i111 = getelementptr inbounds %"struct.btSoftBody::Body", ptr %bb, i64 0, i32 1
  %87 = load ptr, ptr %m_rigid.i.i111, align 8, !tbaa !511
  %tobool.not.i.i112 = icmp eq ptr %87, null
  br i1 %tobool.not.i.i112, label %if.end.i.i114, label %if.then.i10.i130

if.end.i.i114:                                    ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit
  br i1 %tobool6.not.i91, label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit165, label %if.then5.i.i146

if.then.i10.i130:                                 ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit
  %m_linearVelocity.i.i.i115 = getelementptr inbounds %class.btRigidBody, ptr %87, i64 0, i32 2
  %retval.sroa.0.0.copyload.i.i116 = load <2 x float>, ptr %m_linearVelocity.i.i.i115, align 4, !tbaa.struct !163
  %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i117 = getelementptr inbounds %class.btRigidBody, ptr %87, i64 0, i32 2, i32 0, i64 2
  %retval.sroa.5.0.copyload.i.i118 = load <2 x float>, ptr %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i117, align 4, !tbaa.struct !165
  %m_angularVelocity.i.i.i119 = getelementptr inbounds %class.btRigidBody, ptr %87, i64 0, i32 3
  %arrayidx.i.i.i.i120 = getelementptr inbounds %class.btRigidBody, ptr %87, i64 0, i32 3, i32 0, i64 1
  %88 = load float, ptr %m_angularVelocity.i.i.i119, align 4, !tbaa !137
  %89 = load <2 x float>, ptr %arrayidx.i.i.i.i120, align 4, !tbaa !137
  %90 = insertelement <2 x float> %89, float %88, i64 0
  %91 = fneg <2 x float> %90
  %92 = insertelement <2 x float> %55, float %sub8.i101, i64 1
  %93 = fmul <2 x float> %92, %91
  %94 = shufflevector <2 x float> %93, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %95 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %89, <2 x float> %55, <2 x float> %94)
  %96 = extractelement <2 x float> %89, i64 0
  %97 = fneg float %96
  %98 = extractelement <2 x float> %55, i64 1
  %neg30.i.i.i.i126 = fmul float %98, %97
  %99 = tail call float @llvm.fmuladd.f32(float %88, float %sub8.i101, float %neg30.i.i.i.i126)
  %retval.sroa.3.12.vec.insert.i.i.i.i129 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %99, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit165

if.then5.i.i146:                                  ; preds = %if.end.i.i114
  %retval.sroa.5.0.m_lv.sroa_idx.i.i131 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %44, i64 0, i32 13, i32 0, i64 2
  %retval.sroa.5.0.copyload12.i.i132 = load <2 x float>, ptr %retval.sroa.5.0.m_lv.sroa_idx.i.i131, align 8, !tbaa.struct !165
  %m_lv.i.i133 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %44, i64 0, i32 13
  %retval.sroa.0.0.copyload11.i.i134 = load <2 x float>, ptr %m_lv.i.i133, align 8, !tbaa.struct !163
  %m_av.i.i135 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %44, i64 0, i32 14
  %arrayidx.i.i15.i.i136 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %44, i64 0, i32 14, i32 0, i64 1
  %100 = load float, ptr %m_av.i.i135, align 4, !tbaa !137
  %101 = load <2 x float>, ptr %arrayidx.i.i15.i.i136, align 4, !tbaa !137
  %102 = insertelement <2 x float> %101, float %100, i64 0
  %103 = fneg <2 x float> %102
  %104 = insertelement <2 x float> %55, float %sub8.i101, i64 1
  %105 = fmul <2 x float> %104, %103
  %106 = shufflevector <2 x float> %105, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %107 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %101, <2 x float> %55, <2 x float> %106)
  %108 = extractelement <2 x float> %101, i64 0
  %109 = fneg float %108
  %110 = extractelement <2 x float> %55, i64 1
  %neg30.i.i21.i.i142 = fmul float %110, %109
  %111 = tail call float @llvm.fmuladd.f32(float %100, float %sub8.i101, float %neg30.i.i21.i.i142)
  %retval.sroa.3.12.vec.insert.i.i24.i.i145 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %111, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit165

_ZNK10btSoftBody4Body8velocityERK9btVector3.exit165: ; preds = %if.end.i.i114, %if.then.i10.i130, %if.then5.i.i146
  %retval.sroa.5.0.i24.i147 = phi <2 x float> [ %retval.sroa.5.0.copyload12.i.i132, %if.then5.i.i146 ], [ %retval.sroa.5.0.copyload.i.i118, %if.then.i10.i130 ], [ zeroinitializer, %if.end.i.i114 ]
  %retval.sroa.0.0.i22.i148 = phi <2 x float> [ %retval.sroa.0.0.copyload11.i.i134, %if.then5.i.i146 ], [ %retval.sroa.0.0.copyload.i.i116, %if.then.i10.i130 ], [ zeroinitializer, %if.end.i.i114 ]
  %retval.sroa.0.0.i12.i149 = phi <2 x float> [ %107, %if.then5.i.i146 ], [ %95, %if.then.i10.i130 ], [ zeroinitializer, %if.end.i.i114 ]
  %retval.sroa.5.0.i13.i150 = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i.i24.i.i145, %if.then5.i.i146 ], [ %retval.sroa.3.12.vec.insert.i.i.i.i129, %if.then.i10.i130 ], [ zeroinitializer, %if.end.i.i114 ]
  %112 = fadd <2 x float> %retval.sroa.0.0.i22.i148, %retval.sroa.0.0.i12.i149
  %113 = fadd <2 x float> %retval.sroa.0.0.i22.i148, %retval.sroa.0.0.i12.i149
  %114 = fadd <2 x float> %retval.sroa.5.0.i24.i147, %retval.sroa.5.0.i13.i150
  %115 = fsub <2 x float> %84, %112
  %sub.i166 = extractelement <2 x float> %115, i64 0
  %116 = fsub <2 x float> %85, %113
  %sub8.i169 = extractelement <2 x float> %116, i64 1
  %117 = fsub <2 x float> %86, %114
  %sub14.i172 = extractelement <2 x float> %117, i64 0
  %118 = extractelement <2 x float> %9, i64 1
  %mul8.i.i = fmul float %118, %sub8.i169
  %119 = extractelement <2 x float> %9, i64 0
  %120 = tail call float @llvm.fmuladd.f32(float %sub.i166, float %119, float %mul8.i.i)
  %121 = tail call float @llvm.fmuladd.f32(float %sub14.i172, float %mul7.i.i.i, float %120)
  %122 = load float, ptr %distance, align 4, !tbaa !609
  %123 = load float, ptr %m_margin, align 8, !tbaa !580
  %sub = fsub float %122, %123
  %mul.i = fmul float %119, %121
  %mul4.i = fmul float %118, %121
  %mul8.i = fmul float %mul7.i.i.i, %121
  %sub.i184 = fsub float %sub.i166, %mul.i
  %sub8.i187 = fsub float %sub8.i169, %mul4.i
  %sub14.i190 = fsub float %sub14.i172, %mul8.i
  %m_bodies = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 8 dereferenceable(24) %ba, i64 24, i1 false), !tbaa.struct !252
  %arrayidx26 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 1, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx26, ptr noundef nonnull align 8 dereferenceable(24) %bb, i64 24, i1 false), !tbaa.struct !252
  %124 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i196 = icmp eq i8 %124, 0
  br i1 %guard.uninitialized.i196, label %init.check.i198, label %_ZNK10btSoftBody4Body5xformEv.exit213, !prof !173

init.check.i198:                                  ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit165
  %125 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i197 = icmp eq i32 %125, 0
  br i1 %tobool.not.i197, label %_ZNK10btSoftBody4Body5xformEv.exit213, label %init.i200

init.i200:                                        ; preds = %init.check.i198
  %126 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i315 = icmp eq i8 %126, 0
  br i1 %guard.uninitialized.i315, label %init.check.i317, label %invoke.cont2.i204, !prof !173

init.check.i317:                                  ; preds = %init.i200
  %127 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i316 = icmp eq i32 %127, 0
  br i1 %tobool.not.i316, label %invoke.cont2.i204, label %init.i319

init.i319:                                        ; preds = %init.check.i317
  %128 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i346 = icmp eq i8 %128, 0
  br i1 %guard.uninitialized.i346, label %init.check.i348, label %invoke.cont6.i322, !prof !173

init.check.i348:                                  ; preds = %init.i319
  %129 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i347 = icmp eq i32 %129, 0
  br i1 %tobool.not.i347, label %invoke.cont6.i322, label %invoke.cont.i349

invoke.cont.i349:                                 ; preds = %init.check.i348
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %130 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont6.i322

invoke.cont6.i322:                                ; preds = %invoke.cont.i349, %init.check.i348, %init.i319
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %131 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont2.i204

invoke.cont2.i204:                                ; preds = %invoke.cont6.i322, %init.check.i317, %init.i200
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %132 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit213

_ZNK10btSoftBody4Body5xformEv.exit213:            ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit165, %init.check.i198, %invoke.cont2.i204
  %133 = load ptr, ptr %m_collisionObject.i, align 8, !tbaa !253
  %tobool3.not.i206 = icmp eq ptr %133, null
  %m_interpolationWorldTransform.i.i207 = getelementptr inbounds %class.btCollisionObject, ptr %133, i64 0, i32 2
  %134 = load ptr, ptr %ba, align 8
  %tobool6.not.i208 = icmp eq ptr %134, null
  %m_framexform.i209 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %134, i64 0, i32 3
  %spec.select.i210 = select i1 %tobool6.not.i208, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i209
  %retval.0.i211 = select i1 %tobool3.not.i206, ptr %spec.select.i210, ptr %m_interpolationWorldTransform.i.i207
  %arrayidx4.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i211, i64 0, i64 1
  %arrayidx9.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i211, i64 0, i64 2
  %135 = load <2 x float>, ptr %retval.0.i211, align 4, !tbaa !137
  %136 = load <2 x float>, ptr %arrayidx4.i.i, align 4, !tbaa !137
  %137 = insertelement <2 x float> poison, float %sub8.i, i64 0
  %138 = shufflevector <2 x float> %137, <2 x float> poison, <2 x i32> zeroinitializer
  %139 = fmul <2 x float> %138, %136
  %140 = shufflevector <2 x float> %31, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %141 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %135, <2 x float> %140, <2 x float> %139)
  %142 = load <2 x float>, ptr %arrayidx9.i.i, align 4, !tbaa !137
  %143 = shufflevector <2 x float> %31, <2 x float> poison, <2 x i32> zeroinitializer
  %144 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %142, <2 x float> %143, <2 x float> %141)
  %arrayidx.i.i12.i = getelementptr inbounds [4 x float], ptr %retval.0.i211, i64 0, i64 2
  %145 = load float, ptr %arrayidx.i.i12.i, align 4, !tbaa !137
  %arrayidx.i14.i13.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i211, i64 0, i64 1, i32 0, i64 2
  %146 = load float, ptr %arrayidx.i14.i13.i, align 4, !tbaa !137
  %mul7.i15.i = fmul float %sub8.i, %146
  %147 = extractelement <2 x float> %31, i64 1
  %148 = tail call float @llvm.fmuladd.f32(float %145, float %147, float %mul7.i15.i)
  %arrayidx.i16.i16.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i211, i64 0, i64 2, i32 0, i64 2
  %149 = load float, ptr %arrayidx.i16.i16.i, align 4, !tbaa !137
  %150 = extractelement <2 x float> %31, i64 0
  %151 = tail call float @llvm.fmuladd.f32(float %149, float %150, float %148)
  %retval.sroa.3.12.vec.insert.i216 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %151, i64 0
  %m_refs = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 2
  store <2 x float> %144, ptr %m_refs, align 8, !tbaa.struct !163
  %ref.tmp.sroa.4.0.arrayidx31.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 2, i64 0, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i216, ptr %ref.tmp.sroa.4.0.arrayidx31.sroa_idx, align 8, !tbaa.struct !165
  %152 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i219 = icmp eq i8 %152, 0
  br i1 %guard.uninitialized.i219, label %init.check.i221, label %_ZNK10btSoftBody4Body5xformEv.exit236, !prof !173

init.check.i221:                                  ; preds = %_ZNK10btSoftBody4Body5xformEv.exit213
  %153 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i220 = icmp eq i32 %153, 0
  br i1 %tobool.not.i220, label %_ZNK10btSoftBody4Body5xformEv.exit236, label %init.i223

init.i223:                                        ; preds = %init.check.i221
  %154 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i326 = icmp eq i8 %154, 0
  br i1 %guard.uninitialized.i326, label %init.check.i328, label %invoke.cont2.i227, !prof !173

init.check.i328:                                  ; preds = %init.i223
  %155 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i327 = icmp eq i32 %155, 0
  br i1 %tobool.not.i327, label %invoke.cont2.i227, label %init.i330

init.i330:                                        ; preds = %init.check.i328
  %156 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i351 = icmp eq i8 %156, 0
  br i1 %guard.uninitialized.i351, label %init.check.i353, label %invoke.cont6.i333, !prof !173

init.check.i353:                                  ; preds = %init.i330
  %157 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i352 = icmp eq i32 %157, 0
  br i1 %tobool.not.i352, label %invoke.cont6.i333, label %invoke.cont.i354

invoke.cont.i354:                                 ; preds = %init.check.i353
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %158 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont6.i333

invoke.cont6.i333:                                ; preds = %invoke.cont.i354, %init.check.i353, %init.i330
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %159 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont2.i227

invoke.cont2.i227:                                ; preds = %invoke.cont6.i333, %init.check.i328, %init.i223
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %160 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit236

_ZNK10btSoftBody4Body5xformEv.exit236:            ; preds = %_ZNK10btSoftBody4Body5xformEv.exit213, %init.check.i221, %invoke.cont2.i227
  %161 = load ptr, ptr %m_collisionObject.i88, align 8, !tbaa !253
  %tobool3.not.i229 = icmp eq ptr %161, null
  %m_interpolationWorldTransform.i.i230 = getelementptr inbounds %class.btCollisionObject, ptr %161, i64 0, i32 2
  %162 = load ptr, ptr %bb, align 8
  %tobool6.not.i231 = icmp eq ptr %162, null
  %m_framexform.i232 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %162, i64 0, i32 3
  %spec.select.i233 = select i1 %tobool6.not.i231, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i232
  %retval.0.i234 = select i1 %tobool3.not.i229, ptr %spec.select.i233, ptr %m_interpolationWorldTransform.i.i230
  %arrayidx4.i.i237 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i234, i64 0, i64 1
  %arrayidx9.i.i240 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i234, i64 0, i64 2
  %163 = load <2 x float>, ptr %retval.0.i234, align 4, !tbaa !137
  %164 = load <2 x float>, ptr %arrayidx4.i.i237, align 4, !tbaa !137
  %165 = insertelement <2 x float> poison, float %sub8.i101, i64 0
  %166 = shufflevector <2 x float> %165, <2 x float> poison, <2 x i32> zeroinitializer
  %167 = fmul <2 x float> %166, %164
  %168 = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %169 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %163, <2 x float> %168, <2 x float> %167)
  %170 = load <2 x float>, ptr %arrayidx9.i.i240, align 4, !tbaa !137
  %171 = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> zeroinitializer
  %172 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %170, <2 x float> %171, <2 x float> %169)
  %arrayidx.i.i12.i246 = getelementptr inbounds [4 x float], ptr %retval.0.i234, i64 0, i64 2
  %173 = load float, ptr %arrayidx.i.i12.i246, align 4, !tbaa !137
  %arrayidx.i14.i13.i247 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i234, i64 0, i64 1, i32 0, i64 2
  %174 = load float, ptr %arrayidx.i14.i13.i247, align 4, !tbaa !137
  %mul7.i15.i248 = fmul float %sub8.i101, %174
  %175 = extractelement <2 x float> %55, i64 1
  %176 = tail call float @llvm.fmuladd.f32(float %173, float %175, float %mul7.i15.i248)
  %arrayidx.i16.i16.i249 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i234, i64 0, i64 2, i32 0, i64 2
  %177 = load float, ptr %arrayidx.i16.i16.i249, align 4, !tbaa !137
  %178 = extractelement <2 x float> %55, i64 0
  %179 = tail call float @llvm.fmuladd.f32(float %177, float %178, float %176)
  %retval.sroa.3.12.vec.insert.i252 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %179, i64 0
  %arrayidx38 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 2, i64 1
  store <2 x float> %172, ptr %arrayidx38, align 8, !tbaa.struct !163
  %ref.tmp32.sroa.4.0.arrayidx38.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 2, i64 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i252, ptr %ref.tmp32.sroa.4.0.arrayidx38.sroa_idx, align 8, !tbaa.struct !165
  %m_rpos = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 3
  store <2 x float> %retval.sroa.0.4.vec.insert.i, ptr %m_rpos, align 8, !tbaa.struct !163
  %ra.sroa.10.0.m_rpos.sroa_idx = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 3, i64 0, i32 0, i64 2
  store <2 x float> %33, ptr %ra.sroa.10.0.m_rpos.sroa_idx, align 8, !tbaa.struct !165
  %arrayidx41 = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 3, i64 1
  store <2 x float> %retval.sroa.0.4.vec.insert.i106, ptr %arrayidx41, align 8, !tbaa.struct !163
  %rb.sroa.10.0.arrayidx41.sroa_idx = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 3, i64 1, i32 0, i64 2
  store <2 x float> %57, ptr %rb.sroa.10.0.arrayidx41.sroa_idx, align 8, !tbaa.struct !165
  %m_cfm = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 3
  store <2 x float> <float 1.000000e+00, float 1.000000e+00>, ptr %m_cfm, align 8, !tbaa !137
  %m_life = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 1
  store i32 0, ptr %m_life, align 8, !tbaa !544
  %m_maxlife = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 2
  store i32 0, ptr %m_maxlife, align 4, !tbaa !546
  %m_split = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 5
  store float 1.000000e+00, ptr %m_split, align 8, !tbaa !269
  %180 = insertelement <2 x float> poison, float %sub, i64 0
  %181 = shufflevector <2 x float> %180, <2 x float> poison, <2 x i32> zeroinitializer
  %182 = fmul <2 x float> %9, %181
  %mul8.i.i256 = fmul float %mul7.i.i.i, %sub
  %retval.sroa.3.12.vec.insert.i.i259 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i256, i64 0
  %m_drift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 6
  store <2 x float> %182, ptr %m_drift, align 4, !tbaa.struct !163
  %ref.tmp42.sroa.4.0.m_drift.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 6, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i259, ptr %ref.tmp42.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa.struct !165
  %m_normal = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 4
  store <2 x float> %9, ptr %m_normal, align 8
  %norm.sroa.14.0.m_normal.sroa_idx = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 4, i32 0, i64 2
  store float %mul7.i.i.i, ptr %norm.sroa.14.0.m_normal.sroa_idx, align 8, !tbaa.struct !165
  %norm.sroa.19.0.m_normal.sroa_idx = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 4, i32 0, i64 3
  store float %norm.sroa.19.0.copyload, ptr %norm.sroa.19.0.m_normal.sroa_idx, align 4, !tbaa.struct !318
  %m_delete = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 9
  store i8 0, ptr %m_delete, align 4, !tbaa !484
  %mul8.i.i261 = fmul float %sub8.i187, %sub8.i187
  %183 = tail call float @llvm.fmuladd.f32(float %sub.i184, float %sub.i184, float %mul8.i.i261)
  %184 = tail call float @llvm.fmuladd.f32(float %sub14.i190, float %sub14.i190, float %183)
  %fneg = fneg float %121
  %friction = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %this, i64 0, i32 4
  %185 = load float, ptr %friction, align 4, !tbaa !582
  %mul = fmul float %185, %fneg
  %cmp46 = fcmp olt float %184, %mul
  %cond = select i1 %cmp46, float 1.000000e+00, float %185
  %m_friction = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 5
  store float %cond, ptr %m_friction, align 8, !tbaa !612
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %ref.tmp48) #38
  %186 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool.not.i263 = icmp eq ptr %186, null
  br i1 %tobool.not.i263, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %_ZNK10btSoftBody4Body5xformEv.exit236
  %m_inverseMass.i.i = getelementptr inbounds %class.btRigidBody, ptr %186, i64 0, i32 4
  %187 = load float, ptr %m_inverseMass.i.i, align 8, !tbaa !452
  br label %_ZNK10btSoftBody4Body7invMassEv.exit

if.end.i:                                         ; preds = %_ZNK10btSoftBody4Body5xformEv.exit236
  %188 = load ptr, ptr %ba, align 8, !tbaa !272
  %tobool3.not.i264 = icmp eq ptr %188, null
  br i1 %tobool3.not.i264, label %_ZNK10btSoftBody4Body7invMassEv.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  %m_imass.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %188, i64 0, i32 5
  %189 = load float, ptr %m_imass.i, align 4, !tbaa !373
  br label %_ZNK10btSoftBody4Body7invMassEv.exit

_ZNK10btSoftBody4Body7invMassEv.exit:             ; preds = %if.then.i, %if.end.i, %if.then4.i
  %retval.0.i265 = phi float [ %187, %if.then.i ], [ %189, %if.then4.i ], [ 0.000000e+00, %if.end.i ]
  %190 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi acquire, align 8
  %guard.uninitialized.i266 = icmp eq i8 %190, 0
  br i1 %guard.uninitialized.i266, label %init.check.i268, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit, !prof !173

init.check.i268:                                  ; preds = %_ZNK10btSoftBody4Body7invMassEv.exit
  %191 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  %tobool.not.i267 = icmp eq i32 %191, 0
  br i1 %tobool.not.i267, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit, label %invoke.cont.i

invoke.cont.i:                                    ; preds = %init.check.i268
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, i8 0, i64 48, i1 false)
  %192 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  br label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit

_ZNK10btSoftBody4Body15invWorldInertiaEv.exit:    ; preds = %_ZNK10btSoftBody4Body7invMassEv.exit, %init.check.i268, %invoke.cont.i
  %193 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool10.not.i = icmp eq ptr %193, null
  %m_invInertiaTensorWorld.i.i = getelementptr inbounds %class.btRigidBody, ptr %193, i64 0, i32 1
  %194 = load ptr, ptr %ba, align 8
  %tobool12.not.i = icmp eq ptr %194, null
  %m_invwi.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %194, i64 0, i32 7
  %spec.select.i270 = select i1 %tobool12.not.i, ptr @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, ptr %m_invwi.i
  %retval.0.i271 = select i1 %tobool10.not.i, ptr %spec.select.i270, ptr %m_invInertiaTensorWorld.i.i
  %195 = load ptr, ptr %m_rigid.i.i111, align 8, !tbaa !511
  %tobool.not.i273 = icmp eq ptr %195, null
  br i1 %tobool.not.i273, label %if.end.i277, label %if.then.i275

if.then.i275:                                     ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit
  %m_inverseMass.i.i274 = getelementptr inbounds %class.btRigidBody, ptr %195, i64 0, i32 4
  %196 = load float, ptr %m_inverseMass.i.i274, align 8, !tbaa !452
  br label %_ZNK10btSoftBody4Body7invMassEv.exit281

if.end.i277:                                      ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit
  %197 = load ptr, ptr %bb, align 8, !tbaa !272
  %tobool3.not.i276 = icmp eq ptr %197, null
  br i1 %tobool3.not.i276, label %_ZNK10btSoftBody4Body7invMassEv.exit281, label %if.then4.i279

if.then4.i279:                                    ; preds = %if.end.i277
  %m_imass.i278 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %197, i64 0, i32 5
  %198 = load float, ptr %m_imass.i278, align 4, !tbaa !373
  br label %_ZNK10btSoftBody4Body7invMassEv.exit281

_ZNK10btSoftBody4Body7invMassEv.exit281:          ; preds = %if.then.i275, %if.end.i277, %if.then4.i279
  %retval.0.i280 = phi float [ %196, %if.then.i275 ], [ %198, %if.then4.i279 ], [ 0.000000e+00, %if.end.i277 ]
  %199 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi acquire, align 8
  %guard.uninitialized.i282 = icmp eq i8 %199, 0
  br i1 %guard.uninitialized.i282, label %init.check.i284, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit293, !prof !173

init.check.i284:                                  ; preds = %_ZNK10btSoftBody4Body7invMassEv.exit281
  %200 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  %tobool.not.i283 = icmp eq i32 %200, 0
  br i1 %tobool.not.i283, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit293, label %invoke.cont.i285

invoke.cont.i285:                                 ; preds = %init.check.i284
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, i8 0, i64 48, i1 false)
  %201 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  br label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit293

_ZNK10btSoftBody4Body15invWorldInertiaEv.exit293: ; preds = %_ZNK10btSoftBody4Body7invMassEv.exit281, %init.check.i284, %invoke.cont.i285
  %202 = load ptr, ptr %m_rigid.i.i111, align 8, !tbaa !511
  %tobool10.not.i287 = icmp eq ptr %202, null
  %m_invInertiaTensorWorld.i.i288 = getelementptr inbounds %class.btRigidBody, ptr %202, i64 0, i32 1
  %203 = load ptr, ptr %bb, align 8
  %tobool12.not.i289 = icmp eq ptr %203, null
  %m_invwi.i290 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %203, i64 0, i32 7
  %spec.select.i291 = select i1 %tobool12.not.i289, ptr @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, ptr %m_invwi.i290
  %retval.0.i292 = select i1 %tobool10.not.i287, ptr %spec.select.i291, ptr %m_invInertiaTensorWorld.i.i288
  call fastcc void @_ZL13ImpulseMatrixfRK11btMatrix3x3RK9btVector3fS1_S4_(ptr noalias nonnull align 4 %ref.tmp48, float noundef %retval.0.i265, ptr noundef nonnull align 4 dereferenceable(48) %retval.0.i271, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos, float noundef %retval.0.i280, ptr noundef nonnull align 4 dereferenceable(48) %retval.0.i292, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx41)
  %m_massmatrix = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %m_massmatrix, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp48, i64 16, i1 false), !tbaa.struct !163
  %arrayidx5.i294 = getelementptr inbounds [3 x %class.btVector3], ptr %ref.tmp48, i64 0, i64 1
  %arrayidx7.i295 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 8, i32 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx7.i295, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i294, i64 16, i1 false), !tbaa.struct !163
  %arrayidx9.i = getelementptr inbounds [3 x %class.btVector3], ptr %ref.tmp48, i64 0, i64 2
  %arrayidx11.i296 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 8, i32 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx11.i296, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx9.i, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %ref.tmp48) #38
  br label %return

return:                                           ; preds = %entry, %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit293
  ret i1 %cmp
}

declare void @_ZN13btConvexShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(24)) unnamed_addr #1

declare void @_ZN21btConvexInternalShapeC2Ev(ptr noundef nonnull align 8 dereferenceable(64)) unnamed_addr #1

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN27btSoftClusterCollisionShapeD0Ev(ptr noundef nonnull align 8 dereferenceable(72) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  invoke void @_ZN13btConvexShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %this)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %this)
  ret void

lpad:                                             ; preds = %entry
  %0 = landingpad { ptr, i32 }
          cleanup
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %this)
          to label %eh.resume unwind label %terminate.lpad

eh.resume:                                        ; preds = %lpad
  resume { ptr, i32 } %0

terminate.lpad:                                   ; preds = %lpad
  %1 = landingpad { ptr, i32 }
          catch ptr null
  %2 = extractvalue { ptr, i32 } %1, 0
  tail call void @__clang_call_terminate(ptr %2) #39
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNK27btSoftClusterCollisionShape7getAabbERK11btTransformR9btVector3S4_(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef nonnull align 4 dereferenceable(64) %t, ptr noundef nonnull align 4 dereferenceable(16) %aabbMin, ptr noundef nonnull align 4 dereferenceable(16) %aabbMax) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

declare void @_ZN21btConvexInternalShape15setLocalScalingERK9btVector3(ptr noundef nonnull align 8 dereferenceable(64), ptr noundef nonnull align 4 dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef nonnull align 4 dereferenceable(16) ptr @_ZNK21btConvexInternalShape15getLocalScalingEv(ptr noundef nonnull align 8 dereferenceable(64) %this) unnamed_addr #29 comdat align 2 {
entry:
  %m_localScaling = getelementptr inbounds %class.btConvexInternalShape, ptr %this, i64 0, i32 1
  ret ptr %m_localScaling
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNK27btSoftClusterCollisionShape21calculateLocalInertiaEfR9btVector3(ptr noundef nonnull align 8 dereferenceable(72) %this, float noundef %mass, ptr noundef nonnull align 4 dereferenceable(16) %inertia) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef ptr @_ZNK27btSoftClusterCollisionShape7getNameEv(ptr noundef nonnull align 8 dereferenceable(72) %this) unnamed_addr #29 comdat align 2 {
entry:
  ret ptr @.str.4
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN27btSoftClusterCollisionShape9setMarginEf(ptr noundef nonnull align 8 dereferenceable(72) %this, float noundef %margin) unnamed_addr #4 comdat align 2 {
entry:
  %m_collisionMargin.i = getelementptr inbounds %class.btConvexInternalShape, ptr %this, i64 0, i32 3
  store float %margin, ptr %m_collisionMargin.i, align 8, !tbaa !605
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef float @_ZNK27btSoftClusterCollisionShape9getMarginEv(ptr noundef nonnull align 8 dereferenceable(72) %this) unnamed_addr #4 comdat align 2 {
entry:
  %vtable = load ptr, ptr %this, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 11
  %0 = load ptr, ptr %vfn, align 8
  %call = tail call noundef float %0(ptr noundef nonnull align 8 dereferenceable(72) %this)
  ret float %call
}

; Function Attrs: uwtable
define linkonce_odr dso_local { <2 x float>, <2 x float> } @_ZNK27btSoftClusterCollisionShape24localGetSupportingVertexERK9btVector3(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef nonnull align 4 dereferenceable(16) %vec) unnamed_addr #4 comdat align 2 {
entry:
  %m_cluster = getelementptr inbounds %class.btSoftClusterCollisionShape, ptr %this, i64 0, i32 1
  %0 = load ptr, ptr %m_cluster, align 8, !tbaa !601
  %m_data.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %0, i64 0, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !320
  %2 = load ptr, ptr %1, align 8, !tbaa !219
  %3 = load float, ptr %vec, align 4, !tbaa !137
  %arrayidx5.i.i = getelementptr inbounds [4 x float], ptr %vec, i64 0, i64 1
  %4 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %arrayidx10.i.i = getelementptr inbounds [4 x float], ptr %vec, i64 0, i64 2
  %5 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %m_size.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %m_size.i, align 4, !tbaa !319
  %cmp25 = icmp sgt i32 %6, 1
  br i1 %cmp25, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %entry
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 1, i32 0, i64 2
  %7 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 1
  %8 = load float, ptr %m_x, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 1, i32 0, i64 1
  %9 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %mul8.i.i = fmul float %4, %9
  %10 = tail call float @llvm.fmuladd.f32(float %3, float %8, float %mul8.i.i)
  %11 = tail call float @llvm.fmuladd.f32(float %5, float %7, float %10)
  %wide.trip.count = zext i32 %6 to i64
  br label %for.body

for.cond.cleanup.loopexit:                        ; preds = %for.body
  %idxprom10.phi.trans.insert = sext i32 %j.1 to i64
  %arrayidx11.phi.trans.insert = getelementptr inbounds ptr, ptr %1, i64 %idxprom10.phi.trans.insert
  %.pre = load ptr, ptr %arrayidx11.phi.trans.insert, align 8, !tbaa !219
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %entry, %for.cond.cleanup.loopexit
  %12 = phi ptr [ %.pre, %for.cond.cleanup.loopexit ], [ %2, %entry ]
  %m_x12 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1
  %retval.sroa.0.0.copyload = load <2 x float>, ptr %m_x12, align 8, !tbaa.struct !163
  %retval.sroa.2.0.m_x12.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1, i32 0, i64 2
  %retval.sroa.2.0.copyload = load <2 x float>, ptr %retval.sroa.2.0.m_x12.sroa_idx, align 8, !tbaa.struct !165
  %.fca.0.insert = insertvalue { <2 x float>, <2 x float> } poison, <2 x float> %retval.sroa.0.0.copyload, 0
  %.fca.1.insert = insertvalue { <2 x float>, <2 x float> } %.fca.0.insert, <2 x float> %retval.sroa.2.0.copyload, 1
  ret { <2 x float>, <2 x float> } %.fca.1.insert

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %d.028 = phi float [ %11, %for.body.preheader ], [ %d.1, %for.body ]
  %j.027 = phi i32 [ 0, %for.body.preheader ], [ %j.1, %for.body ]
  %arrayidx6 = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv
  %13 = load ptr, ptr %arrayidx6, align 8, !tbaa !219
  %m_x7 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 0, i32 1
  %14 = load float, ptr %m_x7, align 4, !tbaa !137
  %arrayidx7.i.i21 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 0, i32 1, i32 0, i64 1
  %15 = load float, ptr %arrayidx7.i.i21, align 4, !tbaa !137
  %mul8.i.i22 = fmul float %4, %15
  %16 = tail call float @llvm.fmuladd.f32(float %3, float %14, float %mul8.i.i22)
  %arrayidx12.i.i24 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 0, i32 1, i32 0, i64 2
  %17 = load float, ptr %arrayidx12.i.i24, align 4, !tbaa !137
  %18 = tail call float @llvm.fmuladd.f32(float %5, float %17, float %16)
  %cmp9 = fcmp ogt float %18, %d.028
  %19 = trunc i64 %indvars.iv to i32
  %j.1 = select i1 %cmp9, i32 %19, i32 %j.027
  %d.1 = select i1 %cmp9, float %18, float %d.028
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup.loopexit, label %for.body
}

; Function Attrs: uwtable
define linkonce_odr dso_local { <2 x float>, <2 x float> } @_ZNK27btSoftClusterCollisionShape37localGetSupportingVertexWithoutMarginERK9btVector3(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef nonnull align 4 dereferenceable(16) %vec) unnamed_addr #0 comdat align 2 {
entry:
  %vtable = load ptr, ptr %this, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 12
  %0 = load ptr, ptr %vfn, align 8
  %call = tail call { <2 x float>, <2 x float> } %0(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef nonnull align 4 dereferenceable(16) %vec)
  ret { <2 x float>, <2 x float> } %call
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNK27btSoftClusterCollisionShape49batchedUnitVectorGetSupportingVertexWithoutMarginEPK9btVector3PS0_i(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef %vectors, ptr noundef %supportVerticesOut, i32 noundef %numVectors) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

declare void @_ZNK21btConvexInternalShape11getAabbSlowERK11btTransformR9btVector3S4_(ptr noundef nonnull align 8 dereferenceable(64), ptr noundef nonnull align 4 dereferenceable(64), ptr noundef nonnull align 4 dereferenceable(16), ptr noundef nonnull align 4 dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef i32 @_ZNK21btConvexInternalShape36getNumPreferredPenetrationDirectionsEv(ptr noundef nonnull align 8 dereferenceable(64) %this) unnamed_addr #29 comdat align 2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNK21btConvexInternalShape32getPreferredPenetrationDirectionEiR9btVector3(ptr noundef nonnull align 8 dereferenceable(64) %this, i32 noundef %index, ptr noundef nonnull align 4 dereferenceable(16) %penetrationVector) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef i32 @_ZNK27btSoftClusterCollisionShape12getShapeTypeEv(ptr noundef nonnull align 8 dereferenceable(72) %this) unnamed_addr #29 comdat align 2 {
entry:
  ret i32 32
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN15btSoftColliders12CollideCL_SSD0Ev(ptr noundef nonnull align 8 dereferenceable(48) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN15btSoftColliders12CollideCL_SS7ProcessEPK10btDbvtNodeS3_(ptr noundef nonnull align 8 dereferenceable(48) %this, ptr noundef %la, ptr noundef %lb) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %csa = alloca %class.btSoftClusterCollisionShape, align 8
  %csb = alloca %class.btSoftClusterCollisionShape, align 8
  %res = alloca %"struct.btGjkEpaSolver2::sResults", align 4
  %ref.tmp = alloca %class.btVector3, align 8
  %joint = alloca %"struct.btSoftBody::CJoint", align 8
  %agg.tmp = alloca %"struct.btSoftBody::Body", align 8
  %agg.tmp34 = alloca %"struct.btSoftBody::Body", align 8
  %0 = getelementptr inbounds %struct.btDbvtNode, ptr %la, i64 0, i32 2
  %1 = load ptr, ptr %0, align 8, !tbaa !164
  %2 = getelementptr inbounds %struct.btDbvtNode, ptr %lb, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !164
  %bodies = getelementptr inbounds %"struct.btSoftColliders::CollideCL_SS", ptr %this, i64 0, i32 1
  %4 = load ptr, ptr %bodies, align 8, !tbaa !219
  %arrayidx3 = getelementptr inbounds %"struct.btSoftColliders::CollideCL_SS", ptr %this, i64 0, i32 1, i64 1
  %5 = load ptr, ptr %arrayidx3, align 8, !tbaa !219
  %cmp = icmp eq ptr %4, %5
  br i1 %cmp, label %land.lhs.true, label %if.then16

land.lhs.true:                                    ; preds = %entry
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %4, i64 0, i32 25, i32 2
  %6 = load i32, ptr %m_size.i, align 4, !tbaa !128
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %if.then16, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %m_clusterIndex = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 24
  %7 = load i32, ptr %m_clusterIndex, align 4, !tbaa !372
  %m_size.i102 = getelementptr inbounds %class.btSoftBody, ptr %4, i64 0, i32 24, i32 2
  %8 = load i32, ptr %m_size.i102, align 4, !tbaa !124
  %m_clusterIndex12 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 24
  %9 = load i32, ptr %m_clusterIndex12, align 4, !tbaa !372
  %mul = mul nsw i32 %9, %8
  %add = add nsw i32 %mul, %7
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %4, i64 0, i32 25, i32 5
  %10 = load ptr, ptr %m_data.i, align 8, !tbaa !127
  %idxprom.i = sext i32 %add to i64
  %arrayidx.i = getelementptr inbounds i8, ptr %10, i64 %idxprom.i
  %11 = load i8, ptr %arrayidx.i, align 1, !tbaa !367, !range !159, !noundef !192
  %tobool14.not = icmp eq i8 %11, 0
  br i1 %tobool14.not, label %if.then16, label %if.else

if.then16:                                        ; preds = %land.lhs.true, %entry, %if.then
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %csa) #38
  call void @_ZN21btConvexInternalShapeC2Ev(ptr noundef nonnull align 8 dereferenceable(64) %csa)
  store ptr getelementptr inbounds ({ [21 x ptr] }, ptr @_ZTV27btSoftClusterCollisionShape, i64 0, inrange i32 0, i64 2), ptr %csa, align 8, !tbaa !5
  %m_cluster.i = getelementptr inbounds %class.btSoftClusterCollisionShape, ptr %csa, i64 0, i32 1
  store ptr %1, ptr %m_cluster.i, align 8, !tbaa !601
  %m_collisionMargin.i.i.i = getelementptr inbounds %class.btConvexInternalShape, ptr %csa, i64 0, i32 3
  store float 0.000000e+00, ptr %m_collisionMargin.i.i.i, align 8, !tbaa !605
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %csb) #38
  invoke void @_ZN21btConvexInternalShapeC2Ev(ptr noundef nonnull align 8 dereferenceable(64) %csb)
          to label %invoke.cont18 unwind label %lpad

invoke.cont18:                                    ; preds = %if.then16
  store ptr getelementptr inbounds ({ [21 x ptr] }, ptr @_ZTV27btSoftClusterCollisionShape, i64 0, inrange i32 0, i64 2), ptr %csb, align 8, !tbaa !5
  %m_cluster.i103 = getelementptr inbounds %class.btSoftClusterCollisionShape, ptr %csb, i64 0, i32 1
  store ptr %3, ptr %m_cluster.i103, align 8, !tbaa !601
  %m_collisionMargin.i.i.i104 = getelementptr inbounds %class.btConvexInternalShape, ptr %csb, i64 0, i32 3
  store float 0.000000e+00, ptr %m_collisionMargin.i.i.i104, align 8, !tbaa !605
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %res) #38
  %12 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %12, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %invoke.cont19, !prof !173

init.check.i:                                     ; preds = %invoke.cont18
  %13 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i = icmp eq i32 %13, 0
  br i1 %tobool.not.i, label %invoke.cont19, label %init.i

init.i:                                           ; preds = %init.check.i
  %call.i = invoke noundef nonnull align 4 dereferenceable(48) ptr @_ZN11btMatrix3x311getIdentityEv()
          to label %invoke.cont6.i unwind label %lpad.i

invoke.cont6.i:                                   ; preds = %init.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) %call.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx6.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %call.i, i64 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) %arrayidx6.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx10.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %call.i, i64 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) %arrayidx10.i.i.i, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %14 = call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont19

lpad.i:                                           ; preds = %init.i
  %15 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_guard_abort(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %ehcleanup74

invoke.cont19:                                    ; preds = %invoke.cont6.i, %init.check.i, %invoke.cont18
  %16 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i105 = icmp eq i8 %16, 0
  br i1 %guard.uninitialized.i105, label %init.check.i107, label %invoke.cont25, !prof !173

init.check.i107:                                  ; preds = %invoke.cont19
  %17 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i106 = icmp eq i32 %17, 0
  br i1 %tobool.not.i106, label %invoke.cont25, label %init.i109

init.i109:                                        ; preds = %init.check.i107
  %call.i108 = invoke noundef nonnull align 4 dereferenceable(48) ptr @_ZN11btMatrix3x311getIdentityEv()
          to label %invoke.cont6.i112 unwind label %lpad.i113

invoke.cont6.i112:                                ; preds = %init.i109
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) %call.i108, i64 16, i1 false), !tbaa.struct !163
  %arrayidx6.i.i.i110 = getelementptr inbounds [3 x %class.btVector3], ptr %call.i108, i64 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) %arrayidx6.i.i.i110, i64 16, i1 false), !tbaa.struct !163
  %arrayidx10.i.i.i111 = getelementptr inbounds [3 x %class.btVector3], ptr %call.i108, i64 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) %arrayidx10.i.i.i111, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %18 = call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont25

lpad.i113:                                        ; preds = %init.i109
  %19 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_guard_abort(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %ehcleanup74

invoke.cont25:                                    ; preds = %invoke.cont19, %init.check.i107, %invoke.cont6.i112
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #38
  %m_com = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 8
  %m_com23 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 8
  %20 = load <2 x float>, ptr %m_com, align 4, !tbaa !137
  %21 = load <2 x float>, ptr %m_com23, align 4, !tbaa !137
  %22 = fsub <2 x float> %20, %21
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 8, i32 0, i64 2
  %23 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 8, i32 0, i64 2
  %24 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %23, %24
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i, i64 0
  store <2 x float> %22, ptr %ref.tmp, align 8
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp, i64 0, i32 1
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %25, align 8
  %call28 = invoke noundef zeroext i1 @_ZN15btGjkEpaSolver214SignedDistanceEPK13btConvexShapeRK11btTransformS2_S5_RK9btVector3RNS_8sResultsE(ptr noundef nonnull %csa, ptr noundef nonnull align 4 dereferenceable(64) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull %csb, ptr noundef nonnull align 4 dereferenceable(64) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp, ptr noundef nonnull align 4 dereferenceable(56) %res)
          to label %invoke.cont27 unwind label %lpad24

invoke.cont27:                                    ; preds = %invoke.cont25
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  br i1 %call28, label %invoke.cont31, label %if.end73

invoke.cont31:                                    ; preds = %invoke.cont27
  call void @llvm.lifetime.start.p0(i64 248, ptr nonnull %joint) #38
  %m_bodies.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %m_bodies.i.i, i8 0, i64 48, i1 false)
  %m_delete.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 9
  store i8 0, ptr %m_delete.i.i, align 4, !tbaa !484
  store ptr getelementptr inbounds ({ [8 x ptr] }, ptr @_ZTVN10btSoftBody6CJointE, i64 0, inrange i32 0, i64 2), ptr %joint, align 8, !tbaa !5
  store ptr %1, ptr %agg.tmp, align 8, !tbaa !272
  %m_rigid.i = getelementptr inbounds %"struct.btSoftBody::Body", ptr %agg.tmp, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rigid.i, i8 0, i64 16, i1 false)
  store ptr %3, ptr %agg.tmp34, align 8, !tbaa !272
  %m_rigid.i117 = getelementptr inbounds %"struct.btSoftBody::Body", ptr %agg.tmp34, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rigid.i117, i8 0, i64 16, i1 false)
  %call37 = invoke noundef zeroext i1 @_ZN15btSoftColliders11ClusterBase12SolveContactERKN15btGjkEpaSolver28sResultsEN10btSoftBody4BodyES6_RNS5_6CJointE(ptr noundef nonnull align 8 dereferenceable(28) %this, ptr noundef nonnull align 4 dereferenceable(56) %res, ptr noundef nonnull byval(%"struct.btSoftBody::Body") align 8 %agg.tmp, ptr noundef nonnull byval(%"struct.btSoftBody::Body") align 8 %agg.tmp34, ptr noundef nonnull align 8 dereferenceable(244) %joint)
          to label %invoke.cont36 unwind label %lpad32

invoke.cont36:                                    ; preds = %invoke.cont31
  br i1 %call37, label %if.then38, label %if.end68

if.then38:                                        ; preds = %invoke.cont36
  %call41 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 248, i32 noundef 16)
          to label %invoke.cont43 unwind label %lpad39

invoke.cont43:                                    ; preds = %if.then38
  %m_bodies.i.i118 = getelementptr %"struct.btSoftBody::Joint", ptr %call41, i64 0, i32 1
  %m_delete.i.i119 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call41, i64 0, i32 9
  %26 = getelementptr inbounds i8, ptr %call41, i64 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(240) %26, i8 0, i64 240, i1 false)
  store ptr getelementptr inbounds ({ [8 x ptr] }, ptr @_ZTVN10btSoftBody6CJointE, i64 0, inrange i32 0, i64 2), ptr %call41, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(124) %m_bodies.i.i118, ptr noundef nonnull align 8 dereferenceable(124) %m_bodies.i.i, i64 124, i1 false)
  %m_massmatrix.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call41, i64 0, i32 8
  %m_massmatrix3.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %m_massmatrix.i.i, ptr noundef nonnull align 4 dereferenceable(16) %m_massmatrix3.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx5.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 8, i32 0, i64 1
  %arrayidx7.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call41, i64 0, i32 8, i32 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx7.i.i.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx9.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 8, i32 0, i64 2
  %arrayidx11.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call41, i64 0, i32 8, i32 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx11.i.i.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx9.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %27 = load i8, ptr %m_delete.i.i, align 4, !tbaa !484, !range !159, !noundef !192
  store i8 %27, ptr %m_delete.i.i119, align 4, !tbaa !484
  %m_life.i = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %call41, i64 0, i32 1
  %m_life2.i = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(60) %m_life.i, ptr noundef nonnull align 8 dereferenceable(60) %m_life2.i, i64 60, i1 false)
  %28 = load ptr, ptr %bodies, align 8, !tbaa !219
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %28, i64 0, i32 16, i32 2
  %29 = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %28, i64 0, i32 16, i32 3
  %30 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !117
  %cmp.i = icmp eq i32 %29, %30
  br i1 %cmp.i, label %if.then.i, label %invoke.cont49

if.then.i:                                        ; preds = %invoke.cont43
  %tobool.not.i.i = icmp eq i32 %29, 0
  %mul.i.i = shl nsw i32 %29, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %29, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %invoke.cont49

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 3
  %call.i.i.i.i125 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
          to label %call.i.i.i.i.noexc unwind label %lpad48

call.i.i.i.i.noexc:                               ; preds = %if.then.i.i.i
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i: ; preds = %call.i.i.i.i.noexc, %if.then.i.i
  %31 = phi i32 [ %.pre.i, %call.i.i.i.i.noexc ], [ %29, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i125, %call.i.i.i.i.noexc ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %31, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %28, i64 0, i32 16, i32 5
  %wide.trip.count.i.i.i = zext i32 %31 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 3
  %32 = icmp ult i32 %31, 4
  br i1 %32, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967292
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.3, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %33 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i = getelementptr inbounds ptr, ptr %33, i64 %indvars.iv.i.i.i
  %34 = load ptr, ptr %arrayidx3.i.i.i, align 8, !tbaa !219
  store ptr %34, ptr %arrayidx.i.i.i, align 8, !tbaa !219
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %35 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.1 = getelementptr inbounds ptr, ptr %35, i64 %indvars.iv.next.i.i.i
  %36 = load ptr, ptr %arrayidx3.i.i.i.1, align 8, !tbaa !219
  store ptr %36, ptr %arrayidx.i.i.i.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.1 = or i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %37 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.2 = getelementptr inbounds ptr, ptr %37, i64 %indvars.iv.next.i.i.i.1
  %38 = load ptr, ptr %arrayidx3.i.i.i.2, align 8, !tbaa !219
  store ptr %38, ptr %arrayidx.i.i.i.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.2 = or i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %39 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.3 = getelementptr inbounds ptr, ptr %39, i64 %indvars.iv.next.i.i.i.2
  %40 = load ptr, ptr %arrayidx3.i.i.i.3, align 8, !tbaa !219
  store ptr %40, ptr %arrayidx.i.i.i.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil
  %indvars.iv.i.i.i.epil = phi i64 [ %indvars.iv.next.i.i.i.epil, %for.body.i.i.i.epil ], [ %indvars.iv.i.i.i.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.i.i.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %arrayidx.i.i.i.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.epil
  %41 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.epil = getelementptr inbounds ptr, ptr %41, i64 %indvars.iv.i.i.i.epil
  %42 = load ptr, ptr %arrayidx3.i.i.i.epil, align 8, !tbaa !219
  store ptr %42, ptr %arrayidx.i.i.i.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.epil = add nuw nsw i64 %indvars.iv.i.i.i.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil, !llvm.loop !613

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %28, i64 0, i32 16, i32 5
  %43 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !115
  %tobool.not.i10.i.i = icmp eq ptr %43, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %28, i64 0, i32 16, i32 6
  %44 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %44, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %43)
          to label %.noexc unwind label %lpad48

.noexc:                                           ; preds = %if.then3.i.i.i
  %.pre7.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i: ; preds = %.noexc, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i
  %.pre7.i = phi i32 [ %.pre7.pre.i, %.noexc ], [ %31, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i ]
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !114
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !115
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !117
  br label %invoke.cont49

invoke.cont49:                                    ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i, %if.then.i, %invoke.cont43
  %45 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i ], [ %29, %if.then.i ], [ %29, %invoke.cont43 ]
  %m_data.i122 = getelementptr inbounds %class.btSoftBody, ptr %28, i64 0, i32 16, i32 5
  %46 = load ptr, ptr %m_data.i122, align 8, !tbaa !115
  %idxprom.i123 = sext i32 %45 to i64
  %arrayidx.i124 = getelementptr inbounds ptr, ptr %46, i64 %idxprom.i123
  store ptr %call41, ptr %arrayidx.i124, align 8, !tbaa !219
  %inc.i = add nsw i32 %45, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !116
  %47 = load ptr, ptr %bodies, align 8, !tbaa !219
  %kSSHR_CL = getelementptr inbounds %class.btSoftBody, ptr %47, i64 0, i32 2, i32 15
  %48 = load ptr, ptr %arrayidx3, align 8, !tbaa !219
  %kSSHR_CL55 = getelementptr inbounds %class.btSoftBody, ptr %48, i64 0, i32 2, i32 15
  %49 = load float, ptr %kSSHR_CL, align 4
  %50 = load float, ptr %kSSHR_CL55, align 4
  %cmp.i126 = fcmp ogt float %49, %50
  %51 = select i1 %cmp.i126, float %49, float %50
  %m_erp = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call41, i64 0, i32 4
  %kSS_SPLT_CL = getelementptr inbounds %class.btSoftBody, ptr %47, i64 0, i32 2, i32 18
  %52 = load float, ptr %kSS_SPLT_CL, align 8, !tbaa !614
  %kSS_SPLT_CL65 = getelementptr inbounds %class.btSoftBody, ptr %48, i64 0, i32 2, i32 18
  %53 = load float, ptr %kSS_SPLT_CL65, align 8, !tbaa !614
  %add66 = fadd float %52, %53
  %div = fmul float %add66, 5.000000e-01
  %54 = load <2 x float>, ptr %m_erp, align 4, !tbaa !137
  %55 = insertelement <2 x float> poison, float %51, i64 0
  %56 = insertelement <2 x float> %55, float %div, i64 1
  %57 = fmul <2 x float> %54, %56
  store <2 x float> %57, ptr %m_erp, align 4, !tbaa !137
  br label %if.end68

lpad:                                             ; preds = %if.then16, %if.end73
  %58 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup78

lpad24:                                           ; preds = %invoke.cont25
  %59 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  br label %ehcleanup74

lpad32:                                           ; preds = %invoke.cont31
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup72

lpad39:                                           ; preds = %if.then38
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup72

lpad48:                                           ; preds = %if.then3.i.i.i, %if.then.i.i.i
  %62 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup72

if.end68:                                         ; preds = %invoke.cont49, %invoke.cont36
  call void @llvm.lifetime.end.p0(i64 248, ptr nonnull %joint) #38
  br label %if.end73

ehcleanup72:                                      ; preds = %lpad32, %lpad48, %lpad39
  %.pn.pn.pn = phi { ptr, i32 } [ %60, %lpad32 ], [ %62, %lpad48 ], [ %61, %lpad39 ]
  call void @llvm.lifetime.end.p0(i64 248, ptr nonnull %joint) #38
  br label %ehcleanup74

if.end73:                                         ; preds = %if.end68, %invoke.cont27
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %res) #38
  invoke void @_ZN13btConvexShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %csb)
          to label %invoke.cont75 unwind label %lpad

invoke.cont75:                                    ; preds = %if.end73
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %csb) #38
  call void @_ZN13btConvexShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %csa)
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %csa) #38
  br label %if.end82

ehcleanup74:                                      ; preds = %lpad.i, %lpad.i113, %ehcleanup72, %lpad24
  %.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn, %ehcleanup72 ], [ %59, %lpad24 ], [ %15, %lpad.i ], [ %19, %lpad.i113 ]
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %res) #38
  invoke void @_ZN13btConvexShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %csb)
          to label %ehcleanup78 unwind label %terminate.lpad

ehcleanup78:                                      ; preds = %ehcleanup74, %lpad
  %.pn96 = phi { ptr, i32 } [ %58, %lpad ], [ %.pn.pn.pn.pn, %ehcleanup74 ]
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %csb) #38
  invoke void @_ZN13btConvexShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %csa)
          to label %invoke.cont80 unwind label %terminate.lpad

invoke.cont80:                                    ; preds = %ehcleanup78
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %csa) #38
  resume { ptr, i32 } %.pn96

if.else:                                          ; preds = %if.then
  %63 = load i32, ptr @_ZZN15btSoftColliders12CollideCL_SS7ProcessEPK10btDbvtNodeS3_E5count, align 4, !tbaa !140
  %inc = add nsw i32 %63, 1
  store i32 %inc, ptr @_ZZN15btSoftColliders12CollideCL_SS7ProcessEPK10btDbvtNodeS3_E5count, align 4, !tbaa !140
  br label %if.end82

if.end82:                                         ; preds = %if.else, %invoke.cont75
  ret void

terminate.lpad:                                   ; preds = %ehcleanup78, %ehcleanup74
  %64 = landingpad { ptr, i32 }
          catch ptr null
  %65 = extractvalue { ptr, i32 } %64, 0
  call void @__clang_call_terminate(ptr %65) #39
  unreachable
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN15btSoftColliders12CollideVF_SSD0Ev(ptr noundef nonnull align 8 dereferenceable(28) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN15btSoftColliders12CollideVF_SS7ProcessEPK10btDbvtNodeS3_(ptr noundef nonnull align 8 dereferenceable(28) %this, ptr noundef %lnode, ptr noundef %lface) unnamed_addr #0 comdat align 2 {
entry:
  %0 = getelementptr inbounds %struct.btDbvtNode, ptr %lnode, i64 0, i32 2
  %1 = load ptr, ptr %0, align 8, !tbaa !164
  %2 = getelementptr inbounds %struct.btDbvtNode, ptr %lface, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !164
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 1
  %o.sroa.13.0.m_x.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 1, i32 0, i64 2
  %o.sroa.13.0.copyload = load float, ptr %o.sroa.13.0.m_x.sroa_idx, align 8, !tbaa.struct !165
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_x2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 2
  %arrayidx5 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 0, i32 1, i64 1
  %5 = load ptr, ptr %arrayidx5, align 8, !tbaa !219
  %m_x6 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 0, i32 1
  %arrayidx11.i110 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 0, i32 1, i32 0, i64 2
  %6 = load float, ptr %arrayidx11.i110, align 4, !tbaa !137
  %sub14.i112 = fsub float %6, %o.sroa.13.0.copyload
  %arrayidx11 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 0, i32 1, i64 2
  %7 = load ptr, ptr %arrayidx11, align 8, !tbaa !219
  %m_x12 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 0, i32 1
  %8 = load <2 x float>, ptr %m_x, align 8
  %9 = load <2 x float>, ptr %m_x2, align 4, !tbaa !137
  %10 = fsub <2 x float> %9, %8
  %11 = load <2 x float>, ptr %m_x6, align 4, !tbaa !137
  %12 = fsub <2 x float> %11, %8
  %13 = load <2 x float>, ptr %m_x12, align 4, !tbaa !137
  %14 = fsub <2 x float> %13, %8
  %arrayidx11.i122 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 0, i32 1, i32 0, i64 2
  %15 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %sub14.i = fsub float %15, %o.sroa.13.0.copyload
  %16 = load float, ptr %arrayidx11.i122, align 4, !tbaa !137
  %sub14.i124 = fsub float %16, %o.sroa.13.0.copyload
  %17 = fsub <2 x float> %12, %10
  %sub14.i.i = fsub float %sub14.i112, %sub14.i
  %18 = extractelement <2 x float> %14, i64 0
  %19 = extractelement <2 x float> %10, i64 0
  %20 = fsub <2 x float> %14, %10
  %sub.i80.i = extractelement <2 x float> %20, i64 0
  %21 = extractelement <2 x float> %14, i64 1
  %22 = extractelement <2 x float> %10, i64 1
  %sub8.i83.i = fsub float %21, %22
  %sub14.i86.i = fsub float %sub14.i124, %sub14.i
  %23 = fneg float %sub14.i.i
  %neg.i.i.i = fmul float %sub8.i83.i, %23
  %24 = extractelement <2 x float> %17, i64 1
  %25 = tail call float @llvm.fmuladd.f32(float %24, float %sub14.i86.i, float %neg.i.i.i)
  %26 = extractelement <2 x float> %17, i64 0
  %27 = fneg float %26
  %neg19.i.i.i = fmul float %sub14.i86.i, %27
  %28 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %sub.i80.i, float %neg19.i.i.i)
  %29 = fneg float %24
  %neg30.i.i.i = fmul float %sub.i80.i, %29
  %30 = tail call float @llvm.fmuladd.f32(float %26, float %sub8.i83.i, float %neg30.i.i.i)
  %mul8.i.i.i = fmul float %28, %28
  %31 = tail call float @llvm.fmuladd.f32(float %25, float %25, float %mul8.i.i.i)
  %32 = tail call float @llvm.fmuladd.f32(float %30, float %30, float %31)
  %cmp.i = fcmp ogt float %32, 0x3E80000000000000
  br i1 %cmp.i, label %if.then.i, label %_ZL13ProjectOriginRK9btVector3S1_S1_RS_Rf.exit

if.then.i:                                        ; preds = %entry
  %sqrt.i = tail call float @llvm.sqrt.f32(float %32)
  %div.i.i = fdiv float 1.000000e+00, %sqrt.i
  %mul.i.i.i = fmul float %25, %div.i.i
  %mul4.i.i.i = fmul float %28, %div.i.i
  %mul8.i.i95.i = fmul float %30, %div.i.i
  %mul8.i.i103.i = fmul float %22, %mul4.i.i.i
  %33 = tail call float @llvm.fmuladd.f32(float %19, float %mul.i.i.i, float %mul8.i.i103.i)
  %34 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %mul8.i.i95.i, float %33)
  %mul.i = fmul float %34, %34
  %cmp13.i = fcmp olt float %mul.i, 0x47EFFFFFE0000000
  br i1 %cmp13.i, label %if.then14.i, label %_ZL13ProjectOriginRK9btVector3S1_S1_RS_Rf.exit

if.then14.i:                                      ; preds = %if.then.i
  %mul.i.i = fmul float %mul.i.i.i, %34
  %mul4.i.i = fmul float %mul4.i.i.i, %34
  %mul8.i.i = fmul float %mul8.i.i95.i, %34
  %retval.sroa.0.0.vec.insert.i106.i = insertelement <2 x float> undef, float %mul.i.i, i64 0
  %retval.sroa.0.4.vec.insert.i107.i = insertelement <2 x float> %retval.sroa.0.0.vec.insert.i106.i, float %mul4.i.i, i64 1
  %retval.sroa.3.12.vec.insert.i108.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i, i64 0
  %sub.i111.i = fsub float %19, %mul.i.i
  %sub8.i114.i = fsub float %22, %mul4.i.i
  %sub14.i117.i = fsub float %sub14.i, %mul8.i.i
  %35 = extractelement <2 x float> %12, i64 0
  %sub.i123.i = fsub float %35, %mul.i.i
  %36 = extractelement <2 x float> %12, i64 1
  %sub8.i126.i = fsub float %36, %mul4.i.i
  %sub14.i129.i = fsub float %sub14.i112, %mul8.i.i
  %37 = fneg float %sub14.i117.i
  %neg.i.i139.i = fmul float %sub8.i126.i, %37
  %38 = tail call float @llvm.fmuladd.f32(float %sub8.i114.i, float %sub14.i129.i, float %neg.i.i139.i)
  %39 = fneg float %sub.i111.i
  %neg19.i.i140.i = fmul float %sub14.i129.i, %39
  %40 = tail call float @llvm.fmuladd.f32(float %sub14.i117.i, float %sub.i123.i, float %neg19.i.i140.i)
  %41 = fneg float %sub8.i114.i
  %neg30.i.i141.i = fmul float %sub.i123.i, %41
  %42 = tail call float @llvm.fmuladd.f32(float %sub.i111.i, float %sub8.i126.i, float %neg30.i.i141.i)
  %mul8.i.i149.i = fmul float %28, %40
  %43 = tail call float @llvm.fmuladd.f32(float %38, float %25, float %mul8.i.i149.i)
  %44 = tail call float @llvm.fmuladd.f32(float %42, float %30, float %43)
  %cmp27.i = fcmp ogt float %44, 0.000000e+00
  br i1 %cmp27.i, label %land.lhs.true.i, label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then14.i
  %sub.i164.i = fsub float %18, %mul.i.i
  %sub8.i167.i = fsub float %21, %mul4.i.i
  %sub14.i170.i = fsub float %sub14.i124, %mul8.i.i
  %45 = fneg float %sub14.i129.i
  %neg.i.i180.i = fmul float %sub8.i167.i, %45
  %46 = tail call float @llvm.fmuladd.f32(float %sub8.i126.i, float %sub14.i170.i, float %neg.i.i180.i)
  %47 = fneg float %sub.i123.i
  %neg19.i.i181.i = fmul float %sub14.i170.i, %47
  %48 = tail call float @llvm.fmuladd.f32(float %sub14.i129.i, float %sub.i164.i, float %neg19.i.i181.i)
  %49 = fneg float %sub8.i126.i
  %neg30.i.i182.i = fmul float %sub.i164.i, %49
  %50 = tail call float @llvm.fmuladd.f32(float %sub.i123.i, float %sub8.i167.i, float %neg30.i.i182.i)
  %mul8.i.i190.i = fmul float %28, %48
  %51 = tail call float @llvm.fmuladd.f32(float %46, float %25, float %mul8.i.i190.i)
  %52 = tail call float @llvm.fmuladd.f32(float %50, float %30, float %51)
  %cmp38.i = fcmp ogt float %52, 0.000000e+00
  br i1 %cmp38.i, label %land.rhs.i, label %if.else.i

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %53 = fneg float %sub14.i170.i
  %neg.i.i221.i = fmul float %sub8.i114.i, %53
  %54 = tail call float @llvm.fmuladd.f32(float %sub8.i167.i, float %sub14.i117.i, float %neg.i.i221.i)
  %55 = fneg float %sub.i164.i
  %neg19.i.i222.i = fmul float %sub14.i117.i, %55
  %56 = tail call float @llvm.fmuladd.f32(float %sub14.i170.i, float %sub.i111.i, float %neg19.i.i222.i)
  %57 = fneg float %sub8.i167.i
  %neg30.i.i223.i = fmul float %sub.i111.i, %57
  %58 = tail call float @llvm.fmuladd.f32(float %sub.i164.i, float %sub8.i114.i, float %neg30.i.i223.i)
  %mul8.i.i231.i = fmul float %28, %56
  %59 = tail call float @llvm.fmuladd.f32(float %54, float %25, float %mul8.i.i231.i)
  %60 = tail call float @llvm.fmuladd.f32(float %58, float %30, float %59)
  %cmp49.i = fcmp ogt float %60, 0.000000e+00
  br i1 %cmp49.i, label %_ZL13ProjectOriginRK9btVector3S1_S1_RS_Rf.exit, label %if.else.i

if.else.i:                                        ; preds = %land.rhs.i, %land.lhs.true.i, %if.then14.i
  %mul8.i.i.i.i = fmul float %24, %24
  %61 = tail call float @llvm.fmuladd.f32(float %26, float %26, float %mul8.i.i.i.i)
  %62 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %sub14.i.i, float %61)
  %cmp.i.i = fcmp ogt float %62, 0x3E80000000000000
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit.i

if.then.i.i:                                      ; preds = %if.else.i
  %mul8.i.i21.i.i = fmul float %22, %24
  %63 = tail call float @llvm.fmuladd.f32(float %19, float %26, float %mul8.i.i21.i.i)
  %64 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub14.i.i, float %63)
  %fneg.i.i = fneg float %64
  %div.i236.i = fdiv float %fneg.i.i, %62
  %cmp.i.i.i = fcmp olt float %div.i236.i, 0.000000e+00
  %cmp1.i.i.i = fcmp ogt float %div.i236.i, 1.000000e+00
  %..i.i.i = select i1 %cmp1.i.i.i, float 1.000000e+00, float %div.i236.i
  %cond5.i.i.i = select i1 %cmp.i.i.i, float 0.000000e+00, float %..i.i.i
  %mul8.i.i239.i = fmul float %sub14.i.i, %cond5.i.i.i
  %65 = insertelement <2 x float> poison, float %cond5.i.i.i, i64 0
  %66 = shufflevector <2 x float> %65, <2 x float> poison, <2 x i32> zeroinitializer
  %67 = fmul <2 x float> %17, %66
  %68 = fadd <2 x float> %10, %67
  %add14.i.i.i = fadd float %sub14.i, %mul8.i.i239.i
  %69 = fmul <2 x float> %68, %68
  %mul8.i.i39.i.i = extractelement <2 x float> %69, i64 1
  %70 = extractelement <2 x float> %68, i64 0
  %71 = tail call float @llvm.fmuladd.f32(float %70, float %70, float %mul8.i.i39.i.i)
  %72 = tail call float @llvm.fmuladd.f32(float %add14.i.i.i, float %add14.i.i.i, float %71)
  %cmp12.i.i = fcmp olt float %72, 0x47EFFFFFE0000000
  br i1 %cmp12.i.i, label %if.then13.i.i, label %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit.i

if.then13.i.i:                                    ; preds = %if.then.i.i
  %retval.sroa.3.12.vec.insert.i35.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i.i, i64 0
  br label %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit.i

_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit.i:    ; preds = %if.then13.i.i, %if.then.i.i, %if.else.i
  %d.0 = phi float [ %72, %if.then13.i.i ], [ 0x47EFFFFFE0000000, %if.then.i.i ], [ 0x47EFFFFFE0000000, %if.else.i ]
  %p.sroa.0.0 = phi <2 x float> [ %68, %if.then13.i.i ], [ undef, %if.then.i.i ], [ undef, %if.else.i ]
  %p.sroa.9.0 = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i35.i.i, %if.then13.i.i ], [ undef, %if.then.i.i ], [ undef, %if.else.i ]
  %73 = fsub <2 x float> %14, %12
  %sub14.i.i246.i = fsub float %sub14.i124, %sub14.i112
  %74 = extractelement <2 x float> %73, i64 1
  %mul8.i.i.i247.i = fmul float %74, %74
  %75 = extractelement <2 x float> %73, i64 0
  %76 = tail call float @llvm.fmuladd.f32(float %75, float %75, float %mul8.i.i.i247.i)
  %77 = tail call float @llvm.fmuladd.f32(float %sub14.i.i246.i, float %sub14.i.i246.i, float %76)
  %cmp.i248.i = fcmp ogt float %77, 0x3E80000000000000
  br i1 %cmp.i248.i, label %if.then.i264.i, label %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit270.i

if.then.i264.i:                                   ; preds = %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit.i
  %mul8.i.i21.i249.i = fmul float %36, %74
  %78 = tail call float @llvm.fmuladd.f32(float %35, float %75, float %mul8.i.i21.i249.i)
  %79 = tail call float @llvm.fmuladd.f32(float %sub14.i112, float %sub14.i.i246.i, float %78)
  %fneg.i250.i = fneg float %79
  %div.i251.i = fdiv float %fneg.i250.i, %77
  %cmp.i.i252.i = fcmp olt float %div.i251.i, 0.000000e+00
  %cmp1.i.i253.i = fcmp ogt float %div.i251.i, 1.000000e+00
  %..i.i254.i = select i1 %cmp1.i.i253.i, float 1.000000e+00, float %div.i251.i
  %cond5.i.i255.i = select i1 %cmp.i.i252.i, float 0.000000e+00, float %..i.i254.i
  %mul8.i.i258.i = fmul float %sub14.i.i246.i, %cond5.i.i255.i
  %80 = insertelement <2 x float> poison, float %cond5.i.i255.i, i64 0
  %81 = shufflevector <2 x float> %80, <2 x float> poison, <2 x i32> zeroinitializer
  %82 = fmul <2 x float> %73, %81
  %83 = fadd <2 x float> %12, %82
  %add14.i.i261.i = fadd float %sub14.i112, %mul8.i.i258.i
  %84 = fmul <2 x float> %83, %83
  %mul8.i.i39.i262.i = extractelement <2 x float> %84, i64 1
  %85 = extractelement <2 x float> %83, i64 0
  %86 = tail call float @llvm.fmuladd.f32(float %85, float %85, float %mul8.i.i39.i262.i)
  %87 = tail call float @llvm.fmuladd.f32(float %add14.i.i261.i, float %add14.i.i261.i, float %86)
  %cmp12.i263.i = fcmp olt float %87, %d.0
  br i1 %cmp12.i263.i, label %if.then13.i269.i, label %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit270.i

if.then13.i269.i:                                 ; preds = %if.then.i264.i
  %retval.sroa.3.12.vec.insert.i35.i265.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i261.i, i64 0
  br label %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit270.i

_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit270.i: ; preds = %if.then13.i269.i, %if.then.i264.i, %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit.i
  %d.1 = phi float [ %87, %if.then13.i269.i ], [ %d.0, %if.then.i264.i ], [ %d.0, %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit.i ]
  %p.sroa.0.1 = phi <2 x float> [ %83, %if.then13.i269.i ], [ %p.sroa.0.0, %if.then.i264.i ], [ %p.sroa.0.0, %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit.i ]
  %p.sroa.9.1 = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i35.i265.i, %if.then13.i269.i ], [ %p.sroa.9.0, %if.then.i264.i ], [ %p.sroa.9.0, %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit.i ]
  %88 = fsub <2 x float> %10, %14
  %sub14.i.i277.i = fsub float %sub14.i, %sub14.i124
  %89 = extractelement <2 x float> %88, i64 1
  %mul8.i.i.i278.i = fmul float %89, %89
  %90 = extractelement <2 x float> %88, i64 0
  %91 = tail call float @llvm.fmuladd.f32(float %90, float %90, float %mul8.i.i.i278.i)
  %92 = tail call float @llvm.fmuladd.f32(float %sub14.i.i277.i, float %sub14.i.i277.i, float %91)
  %cmp.i279.i = fcmp ogt float %92, 0x3E80000000000000
  br i1 %cmp.i279.i, label %if.then.i295.i, label %_ZL13ProjectOriginRK9btVector3S1_S1_RS_Rf.exit

if.then.i295.i:                                   ; preds = %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit270.i
  %mul8.i.i21.i280.i = fmul float %21, %89
  %93 = tail call float @llvm.fmuladd.f32(float %18, float %90, float %mul8.i.i21.i280.i)
  %94 = tail call float @llvm.fmuladd.f32(float %sub14.i124, float %sub14.i.i277.i, float %93)
  %fneg.i281.i = fneg float %94
  %div.i282.i = fdiv float %fneg.i281.i, %92
  %cmp.i.i283.i = fcmp olt float %div.i282.i, 0.000000e+00
  %cmp1.i.i284.i = fcmp ogt float %div.i282.i, 1.000000e+00
  %..i.i285.i = select i1 %cmp1.i.i284.i, float 1.000000e+00, float %div.i282.i
  %cond5.i.i286.i = select i1 %cmp.i.i283.i, float 0.000000e+00, float %..i.i285.i
  %mul8.i.i289.i = fmul float %sub14.i.i277.i, %cond5.i.i286.i
  %95 = insertelement <2 x float> poison, float %cond5.i.i286.i, i64 0
  %96 = shufflevector <2 x float> %95, <2 x float> poison, <2 x i32> zeroinitializer
  %97 = fmul <2 x float> %88, %96
  %98 = fadd <2 x float> %14, %97
  %add14.i.i292.i = fadd float %sub14.i124, %mul8.i.i289.i
  %99 = fmul <2 x float> %98, %98
  %mul8.i.i39.i293.i = extractelement <2 x float> %99, i64 1
  %100 = extractelement <2 x float> %98, i64 0
  %101 = tail call float @llvm.fmuladd.f32(float %100, float %100, float %mul8.i.i39.i293.i)
  %102 = tail call float @llvm.fmuladd.f32(float %add14.i.i292.i, float %add14.i.i292.i, float %101)
  %cmp12.i294.i = fcmp olt float %102, %d.1
  br i1 %cmp12.i294.i, label %if.then13.i300.i, label %_ZL13ProjectOriginRK9btVector3S1_S1_RS_Rf.exit

if.then13.i300.i:                                 ; preds = %if.then.i295.i
  %retval.sroa.3.12.vec.insert.i35.i296.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i292.i, i64 0
  br label %_ZL13ProjectOriginRK9btVector3S1_S1_RS_Rf.exit

_ZL13ProjectOriginRK9btVector3S1_S1_RS_Rf.exit:   ; preds = %land.rhs.i, %if.then13.i300.i, %entry, %if.then.i, %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit270.i, %if.then.i295.i
  %d.2 = phi float [ %d.1, %if.then.i295.i ], [ %d.1, %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit270.i ], [ 0x47EFFFFFE0000000, %if.then.i ], [ 0x47EFFFFFE0000000, %entry ], [ %102, %if.then13.i300.i ], [ %mul.i, %land.rhs.i ]
  %p.sroa.0.2 = phi <2 x float> [ %p.sroa.0.1, %if.then.i295.i ], [ %p.sroa.0.1, %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit270.i ], [ undef, %if.then.i ], [ undef, %entry ], [ %98, %if.then13.i300.i ], [ %retval.sroa.0.4.vec.insert.i107.i, %land.rhs.i ]
  %p.sroa.9.2 = phi <2 x float> [ %p.sroa.9.1, %if.then.i295.i ], [ %p.sroa.9.1, %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit270.i ], [ undef, %if.then.i ], [ undef, %entry ], [ %retval.sroa.3.12.vec.insert.i35.i296.i, %if.then13.i300.i ], [ %retval.sroa.3.12.vec.insert.i108.i, %land.rhs.i ]
  %mrg = getelementptr inbounds %"struct.btSoftColliders::CollideVF_SS", ptr %this, i64 0, i32 2
  %103 = load float, ptr %mrg, align 8, !tbaa !591
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 2
  %104 = load float, ptr %m_q, align 4, !tbaa !137
  %105 = extractelement <2 x float> %8, i64 0
  %sub.i130 = fsub float %105, %104
  %arrayidx7.i132 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 2, i32 0, i64 1
  %106 = load float, ptr %arrayidx7.i132, align 4, !tbaa !137
  %107 = extractelement <2 x float> %8, i64 1
  %sub8.i133 = fsub float %107, %106
  %arrayidx13.i135 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 2, i32 0, i64 2
  %108 = load float, ptr %arrayidx13.i135, align 4, !tbaa !137
  %sub14.i136 = fsub float %o.sroa.13.0.copyload, %108
  %mul8.i.i.i142 = fmul float %sub8.i133, %sub8.i133
  %109 = tail call float @llvm.fmuladd.f32(float %sub.i130, float %sub.i130, float %mul8.i.i.i142)
  %110 = tail call float @llvm.fmuladd.f32(float %sub14.i136, float %sub14.i136, float %109)
  %sqrt.i143 = tail call float @llvm.sqrt.f32(float %110)
  %111 = tail call float @llvm.fmuladd.f32(float %sqrt.i143, float 2.000000e+00, float %103)
  %mul = fmul float %111, %111
  %cmp = fcmp olt float %d.2, %mul
  br i1 %cmp, label %if.then, label %if.end84

if.then:                                          ; preds = %_ZL13ProjectOriginRK9btVector3S1_S1_RS_Rf.exit
  %112 = fadd <2 x float> %8, %p.sroa.0.2
  %113 = fadd <2 x float> %8, %p.sroa.0.2
  %p.sroa.9.8.vec.extract = extractelement <2 x float> %p.sroa.9.2, i64 0
  %add14.i = fadd float %o.sroa.13.0.copyload, %p.sroa.9.8.vec.extract
  %114 = fsub <2 x float> %9, %112
  %sub.i.i153 = extractelement <2 x float> %114, i64 0
  %115 = fsub <2 x float> %11, %113
  %sub8.i57.i = extractelement <2 x float> %115, i64 1
  %sub14.i60.i = fsub float %6, %add14.i
  %116 = fneg float %sub.i.i153
  %neg19.i.i.i161 = fmul float %sub14.i60.i, %116
  %117 = insertelement <2 x float> poison, float %16, i64 0
  %118 = insertelement <2 x float> %117, float %15, i64 1
  %119 = insertelement <2 x float> poison, float %add14.i, i64 0
  %120 = shufflevector <2 x float> %119, <2 x float> poison, <2 x i32> zeroinitializer
  %121 = fsub <2 x float> %118, %120
  %122 = extractelement <2 x float> %121, i64 1
  %123 = fneg float %122
  %neg.i.i.i160 = fmul float %sub8.i57.i, %123
  %124 = shufflevector <2 x float> %13, <2 x float> %9, <2 x i32> <i32 1, i32 3>
  %125 = shufflevector <2 x float> %113, <2 x float> undef, <2 x i32> <i32 1, i32 1>
  %126 = fsub <2 x float> %124, %125
  %127 = extractelement <2 x float> %126, i64 1
  %128 = tail call float @llvm.fmuladd.f32(float %127, float %sub14.i60.i, float %neg.i.i.i160)
  %129 = shufflevector <2 x float> %11, <2 x float> %13, <2 x i32> <i32 0, i32 2>
  %130 = shufflevector <2 x float> %112, <2 x float> poison, <2 x i32> zeroinitializer
  %131 = fsub <2 x float> %129, %130
  %132 = extractelement <2 x float> %131, i64 0
  %133 = tail call float @llvm.fmuladd.f32(float %122, float %132, float %neg19.i.i.i161)
  %134 = fneg float %127
  %neg30.i.i.i162 = fmul float %132, %134
  %135 = tail call float @llvm.fmuladd.f32(float %sub.i.i153, float %sub8.i57.i, float %neg30.i.i.i162)
  %mul8.i.i.i.i163 = fmul float %133, %133
  %136 = tail call float @llvm.fmuladd.f32(float %128, float %128, float %mul8.i.i.i.i163)
  %137 = tail call float @llvm.fmuladd.f32(float %135, float %135, float %136)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %137)
  %138 = shufflevector <2 x float> %121, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %139 = insertelement <2 x float> %138, float %sub14.i60.i, i64 0
  %140 = fneg <2 x float> %139
  %141 = fmul <2 x float> %126, %140
  %142 = shufflevector <2 x float> %126, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %143 = shufflevector <2 x float> %142, <2 x float> %115, <2 x i32> <i32 3, i32 1>
  %144 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %143, <2 x float> %121, <2 x float> %141)
  %145 = fneg <2 x float> %131
  %146 = fmul <2 x float> %121, %145
  %147 = shufflevector <2 x float> %131, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %148 = shufflevector <2 x float> %147, <2 x float> %114, <2 x i32> <i32 0, i32 2>
  %149 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %139, <2 x float> %148, <2 x float> %146)
  %150 = fneg <2 x float> %143
  %151 = fmul <2 x float> %148, %150
  %152 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %131, <2 x float> %126, <2 x float> %151)
  %153 = fmul <2 x float> %149, %149
  %154 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %144, <2 x float> %144, <2 x float> %153)
  %155 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %152, <2 x float> %152, <2 x float> %154)
  %156 = tail call <2 x float> @llvm.sqrt.v2f32(<2 x float> %155)
  %157 = extractelement <2 x float> %156, i64 0
  %add.i164 = fadd float %sqrt.i.i, %157
  %158 = extractelement <2 x float> %156, i64 1
  %add31.i = fadd float %158, %add.i164
  %div.i = fdiv float 1.000000e+00, %add31.i
  %159 = insertelement <2 x float> poison, float %div.i, i64 0
  %160 = shufflevector <2 x float> %159, <2 x float> poison, <2 x i32> zeroinitializer
  %161 = fmul <2 x float> %156, %160
  %mul39.i = fmul float %sqrt.i.i, %div.i
  %retval.sroa.3.12.vec.insert.i168 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul39.i, i64 0
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 6
  %162 = load float, ptr %m_im, align 8, !tbaa !175
  %m_im38 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 6
  %m_im40 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 0, i32 6
  %m_im42 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 0, i32 6
  %m_im38.val = load float, ptr %m_im38, align 4, !tbaa !137
  %m_im40.val = load float, ptr %m_im40, align 4, !tbaa !137
  %m_im42.val = load float, ptr %m_im42, align 4, !tbaa !137
  %163 = extractelement <2 x float> %161, i64 1
  %mul2.i = fmul float %163, %m_im40.val
  %164 = extractelement <2 x float> %161, i64 0
  %165 = tail call float @llvm.fmuladd.f32(float %m_im38.val, float %164, float %mul2.i)
  %166 = tail call float @llvm.fmuladd.f32(float %m_im42.val, float %mul39.i, float %165)
  %cmp46 = fcmp ugt float %m_im38.val, 0.000000e+00
  %cmp49 = fcmp ugt float %m_im40.val, 0.000000e+00
  %or.cond = select i1 %cmp46, i1 %cmp49, i1 false
  %cmp53 = fcmp ugt float %m_im42.val, 0.000000e+00
  %or.cond227 = select i1 %or.cond, i1 %cmp53, i1 false
  %mb.0 = select i1 %or.cond227, float %166, float 0.000000e+00
  %add = fadd float %162, %mb.0
  %cmp55 = fcmp ogt float %add, 0.000000e+00
  br i1 %cmp55, label %if.then56, label %if.end84

if.then56:                                        ; preds = %if.then
  %call.i = tail call float @sqrtf(float noundef %d.2) #38
  %div.i171 = fdiv float -1.000000e+00, %call.i
  %167 = insertelement <2 x float> poison, float %div.i171, i64 0
  %168 = shufflevector <2 x float> %167, <2 x float> poison, <2 x i32> zeroinitializer
  %169 = fmul <2 x float> %p.sroa.0.2, %168
  %mul8.i.i175 = fmul float %p.sroa.9.8.vec.extract, %div.i171
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i175, i64 0
  %psb = getelementptr inbounds %"struct.btSoftColliders::CollideVF_SS", ptr %this, i64 0, i32 1
  %170 = load ptr, ptr %psb, align 8, !tbaa !219
  %kDF = getelementptr inbounds %class.btSoftBody, ptr %170, i64 0, i32 2, i32 7
  %arrayidx64 = getelementptr inbounds %"struct.btSoftColliders::CollideVF_SS", ptr %this, i64 0, i32 1, i64 1
  %171 = load ptr, ptr %arrayidx64, align 8, !tbaa !219
  %kDF66 = getelementptr inbounds %class.btSoftBody, ptr %171, i64 0, i32 2, i32 7
  %172 = load float, ptr %kDF, align 4
  %173 = load float, ptr %kDF66, align 4
  %cmp.i176 = fcmp ogt float %172, %173
  %174 = select i1 %cmp.i176, float %172, float %173
  %175 = insertelement <2 x float> poison, float %162, i64 0
  %176 = insertelement <2 x float> %175, float %mb.0, i64 1
  %177 = insertelement <2 x float> poison, float %add, i64 0
  %178 = shufflevector <2 x float> %177, <2 x float> poison, <2 x i32> zeroinitializer
  %179 = fdiv <2 x float> %176, %178
  %kSHR = getelementptr inbounds %class.btSoftBody, ptr %170, i64 0, i32 2, i32 11
  %kSHR77 = getelementptr inbounds %class.btSoftBody, ptr %171, i64 0, i32 2, i32 11
  %180 = load float, ptr %kSHR, align 4, !tbaa !615
  %181 = load float, ptr %kSHR77, align 4, !tbaa !615
  %182 = insertelement <2 x float> poison, float %180, i64 0
  %183 = insertelement <2 x float> %182, float %181, i64 1
  %184 = fmul <2 x float> %179, %183
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %170, i64 0, i32 15, i32 2
  %185 = load i32, ptr %m_size.i.i, align 4, !tbaa !112
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %170, i64 0, i32 15, i32 3
  %186 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !113
  %cmp.i177 = icmp eq i32 %185, %186
  br i1 %cmp.i177, label %if.then.i180, label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE9push_backERKS1_.exit

if.then.i180:                                     ; preds = %if.then56
  %tobool.not.i.i = icmp eq i32 %185, 0
  %mul.i.i178 = shl nsw i32 %185, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i178
  %cmp.i.i179 = icmp slt i32 %185, %cond.i.i
  br i1 %cmp.i.i179, label %if.then.i.i181, label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE9push_backERKS1_.exit

if.then.i.i181:                                   ; preds = %if.then.i180
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i181
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 6
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i182 = load i32, ptr %m_size.i.i, align 4, !tbaa !112
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i181
  %187 = phi i32 [ %.pre.i182, %if.then.i.i.i ], [ %185, %if.then.i.i181 ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i181 ]
  %cmp7.i.i.i = icmp sgt i32 %187, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %170, i64 0, i32 15, i32 5
  %wide.trip.count.i.i.i = zext i32 %187 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 1
  %188 = icmp eq i32 %187, 1
  br i1 %188, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967294
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.1, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %189 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !111
  %arrayidx3.i.i.i = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %189, i64 %indvars.iv.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %arrayidx.i.i.i, ptr noundef nonnull align 8 dereferenceable(64) %arrayidx3.i.i.i, i64 64, i1 false), !tbaa.struct !616
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %190 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !111
  %arrayidx3.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %190, i64 %indvars.iv.next.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %arrayidx.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(64) %arrayidx3.i.i.i.1, i64 64, i1 false), !tbaa.struct !616
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.unr
  %191 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !111
  %arrayidx3.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %191, i64 %indvars.iv.i.i.i.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %arrayidx.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(64) %arrayidx3.i.i.i.epil, i64 64, i1 false), !tbaa.struct !616
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i: ; preds = %for.body.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %170, i64 0, i32 15, i32 5
  %192 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !111
  %tobool.not.i10.i.i = icmp eq ptr %192, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %170, i64 0, i32 15, i32 6
  %193 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %193, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %192)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !110
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !111
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !113
  %.pre7.i = load i32, ptr %m_size.i.i, align 4, !tbaa !112
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE9push_backERKS1_.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE9push_backERKS1_.exit: ; preds = %if.then56, %if.then.i180, %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE10deallocateEv.exit.i.i
  %194 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE10deallocateEv.exit.i.i ], [ %185, %if.then.i180 ], [ %185, %if.then56 ]
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %170, i64 0, i32 15, i32 5
  %195 = load ptr, ptr %m_data.i, align 8, !tbaa !111
  %idxprom.i = sext i32 %194 to i64
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %195, i64 %idxprom.i
  store ptr %1, ptr %arrayidx.i, align 8, !tbaa.struct !616
  %c.sroa.4.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 8
  store ptr %3, ptr %c.sroa.4.0.arrayidx.i.sroa_idx, align 8, !tbaa.struct !617
  %c.sroa.5.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 16
  store <2 x float> %161, ptr %c.sroa.5.0.arrayidx.i.sroa_idx, align 8, !tbaa.struct !618
  %c.sroa.5.sroa.4.0.c.sroa.5.0.arrayidx.i.sroa_idx.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 24
  store <2 x float> %retval.sroa.3.12.vec.insert.i168, ptr %c.sroa.5.sroa.4.0.c.sroa.5.0.arrayidx.i.sroa_idx.sroa_idx, align 8, !tbaa.struct !619
  %c.sroa.6.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 32
  store <2 x float> %169, ptr %c.sroa.6.0.arrayidx.i.sroa_idx, align 8, !tbaa.struct !620
  %c.sroa.7.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 40
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i, ptr %c.sroa.7.0.arrayidx.i.sroa_idx, align 8, !tbaa.struct !621
  %c.sroa.8.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 48
  store float %111, ptr %c.sroa.8.0.arrayidx.i.sroa_idx, align 8, !tbaa.struct !622
  %c.sroa.9.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 52
  store float %174, ptr %c.sroa.9.0.arrayidx.i.sroa_idx, align 4, !tbaa.struct !623
  %c.sroa.10.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 56
  store <2 x float> %184, ptr %c.sroa.10.0.arrayidx.i.sroa_idx, align 8
  %196 = load i32, ptr %m_size.i.i, align 4, !tbaa !112
  %inc.i = add nsw i32 %196, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !112
  br label %if.end84

if.end84:                                         ; preds = %if.then, %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE9push_backERKS1_.exit, %_ZL13ProjectOriginRK9btVector3S1_S1_RS_Rf.exit
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #32

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayI9NodeLinksE7reserveEi(ptr noundef nonnull align 8 dereferenceable(25) %this, i32 noundef %_Count) local_unnamed_addr #8 comdat align 2 {
entry:
  %m_capacity.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 3
  %0 = load i32, ptr %m_capacity.i, align 8, !tbaa !328
  %cmp = icmp slt i32 %0, %_Count
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tobool.not.i = icmp eq i32 %_Count, 0
  br i1 %tobool.not.i, label %_ZN20btAlignedObjectArrayI9NodeLinksE8allocateEi.exit, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %conv.i.i = sext i32 %_Count to i64
  %mul.i.i = shl nsw i64 %conv.i.i, 5
  %call.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i, i32 noundef 16)
  br label %_ZN20btAlignedObjectArrayI9NodeLinksE8allocateEi.exit

_ZN20btAlignedObjectArrayI9NodeLinksE8allocateEi.exit: ; preds = %if.then, %if.then.i
  %retval.0.i = phi ptr [ %call.i.i, %if.then.i ], [ null, %if.then ]
  %m_size.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 2
  %1 = load i32, ptr %m_size.i, align 4, !tbaa !327
  %cmp7.i = icmp sgt i32 %1, 0
  br i1 %cmp7.i, label %for.body.lr.ph.i, label %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit

for.body.lr.ph.i:                                 ; preds = %_ZN20btAlignedObjectArrayI9NodeLinksE8allocateEi.exit
  %m_data.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 5
  %zext = zext i32 %1 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %_ZN9NodeLinksC2ERKS_.exit.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %_ZN9NodeLinksC2ERKS_.exit.i ]
  %arrayidx.i = getelementptr inbounds %struct.NodeLinks, ptr %retval.0.i, i64 %indvars.iv.i
  %2 = load ptr, ptr %m_data.i, align 8, !tbaa !326
  %arrayidx3.i = getelementptr inbounds %struct.NodeLinks, ptr %2, i64 %indvars.iv.i
  %m_ownsMemory.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i.i.i, align 8, !tbaa !130
  %m_data.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i, i64 0, i32 5
  store ptr null, ptr %m_data.i.i.i.i, align 8, !tbaa !131
  %m_size.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i, i64 0, i32 2
  store i32 0, ptr %m_size.i.i.i.i, align 4, !tbaa !132
  %m_capacity.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i.i, align 8, !tbaa !133
  %m_size.i4.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx3.i, i64 0, i32 2
  %3 = load i32, ptr %m_size.i4.i.i.i, align 4, !tbaa !132
  %or.cond.i.i.i = icmp sgt i32 %3, 0
  br i1 %or.cond.i.i.i, label %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i.i.i.i, label %_ZN20btAlignedObjectArrayIiE6resizeEiRKi.exit.thread.i.i.i

_ZN20btAlignedObjectArrayIiE6resizeEiRKi.exit.thread.i.i.i: ; preds = %for.body.i
  store i32 %3, ptr %m_size.i.i.i.i, align 4, !tbaa !132
  br label %_ZN9NodeLinksC2ERKS_.exit.i

_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i.i.i.i: ; preds = %for.body.i
  %conv.i.i.i.i.i.i.i = zext i32 %3 to i64
  %mul.i.i.i.i.i.i.i = shl nuw nsw i64 %conv.i.i.i.i.i.i.i, 2
  %call.i.i.i.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i.i.i.i, i32 noundef 16)
  %call.i.i.i.i.i.i.i22 = ptrtoint ptr %call.i.i.i.i.i.i.i to i64
  %.pre.i.i.i.i = load i32, ptr %m_size.i.i.i.i, align 4, !tbaa !132
  %cmp7.i.i.i.i.i.i = icmp sgt i32 %.pre.i.i.i.i, 0
  %4 = load ptr, ptr %m_data.i.i.i.i, align 8, !tbaa !131
  br i1 %cmp7.i.i.i.i.i.i, label %for.body.lr.ph.i.i.i.i.i.i, label %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i.i.i

for.body.lr.ph.i.i.i.i.i.i:                       ; preds = %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i.i.i.i
  %5 = ptrtoint ptr %4 to i64
  %wide.trip.count.i.i.i.i.i.i = zext i32 %.pre.i.i.i.i to i64
  %min.iters.check28 = icmp ult i32 %.pre.i.i.i.i, 8
  %6 = sub i64 %call.i.i.i.i.i.i.i22, %5
  %diff.check25 = icmp ult i64 %6, 32
  %or.cond39 = select i1 %min.iters.check28, i1 true, i1 %diff.check25
  br i1 %or.cond39, label %for.body.i.i.i.i.i.i.preheader, label %vector.ph29

vector.ph29:                                      ; preds = %for.body.lr.ph.i.i.i.i.i.i
  %n.vec31 = and i64 %wide.trip.count.i.i.i.i.i.i, 4294967288
  br label %vector.body34

vector.body34:                                    ; preds = %vector.body34, %vector.ph29
  %index35 = phi i64 [ 0, %vector.ph29 ], [ %index.next38, %vector.body34 ]
  %7 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %index35
  %8 = getelementptr inbounds i32, ptr %4, i64 %index35
  %wide.load36 = load <4 x i32>, ptr %8, align 4, !tbaa !140
  %9 = getelementptr inbounds i32, ptr %8, i64 4
  %wide.load37 = load <4 x i32>, ptr %9, align 4, !tbaa !140
  store <4 x i32> %wide.load36, ptr %7, align 4, !tbaa !140
  %10 = getelementptr inbounds i32, ptr %7, i64 4
  store <4 x i32> %wide.load37, ptr %10, align 4, !tbaa !140
  %index.next38 = add nuw i64 %index35, 8
  %11 = icmp eq i64 %index.next38, %n.vec31
  br i1 %11, label %middle.block26, label %vector.body34, !llvm.loop !624

middle.block26:                                   ; preds = %vector.body34
  %cmp.n33 = icmp eq i64 %n.vec31, %wide.trip.count.i.i.i.i.i.i
  br i1 %cmp.n33, label %if.then.i11.i.i.i.i.i, label %for.body.i.i.i.i.i.i.preheader

for.body.i.i.i.i.i.i.preheader:                   ; preds = %for.body.lr.ph.i.i.i.i.i.i, %middle.block26
  %indvars.iv.i.i.i.i.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i.i.i.i ], [ %n.vec31, %middle.block26 ]
  %12 = xor i64 %indvars.iv.i.i.i.i.i.i.ph, -1
  %13 = add nsw i64 %12, %wide.trip.count.i.i.i.i.i.i
  %xtraiter = and i64 %wide.trip.count.i.i.i.i.i.i, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.i.i.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.i.i.prol

for.body.i.i.i.i.i.i.prol:                        ; preds = %for.body.i.i.i.i.i.i.preheader, %for.body.i.i.i.i.i.i.prol
  %indvars.iv.i.i.i.i.i.i.prol = phi i64 [ %indvars.iv.next.i.i.i.i.i.i.prol, %for.body.i.i.i.i.i.i.prol ], [ %indvars.iv.i.i.i.i.i.i.ph, %for.body.i.i.i.i.i.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.i.i.i.i.i.prol ], [ 0, %for.body.i.i.i.i.i.i.preheader ]
  %arrayidx.i.i.i.i.i.i.prol = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.i.i.i.i.i.i.prol
  %arrayidx3.i.i.i.i.i.i.prol = getelementptr inbounds i32, ptr %4, i64 %indvars.iv.i.i.i.i.i.i.prol
  %14 = load i32, ptr %arrayidx3.i.i.i.i.i.i.prol, align 4, !tbaa !140
  store i32 %14, ptr %arrayidx.i.i.i.i.i.i.prol, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i.i.prol = add nuw nsw i64 %indvars.iv.i.i.i.i.i.i.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.i.i.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.i.i.prol, !llvm.loop !625

for.body.i.i.i.i.i.i.prol.loopexit:               ; preds = %for.body.i.i.i.i.i.i.prol, %for.body.i.i.i.i.i.i.preheader
  %indvars.iv.i.i.i.i.i.i.unr = phi i64 [ %indvars.iv.i.i.i.i.i.i.ph, %for.body.i.i.i.i.i.i.preheader ], [ %indvars.iv.next.i.i.i.i.i.i.prol, %for.body.i.i.i.i.i.i.prol ]
  %15 = icmp ult i64 %13, 3
  br i1 %15, label %if.then.i11.i.i.i.i.i, label %for.body.i.i.i.i.i.i

for.body.i.i.i.i.i.i:                             ; preds = %for.body.i.i.i.i.i.i.prol.loopexit, %for.body.i.i.i.i.i.i
  %indvars.iv.i.i.i.i.i.i = phi i64 [ %indvars.iv.next.i.i.i.i.i.i.3, %for.body.i.i.i.i.i.i ], [ %indvars.iv.i.i.i.i.i.i.unr, %for.body.i.i.i.i.i.i.prol.loopexit ]
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.i.i.i.i.i.i
  %arrayidx3.i.i.i.i.i.i = getelementptr inbounds i32, ptr %4, i64 %indvars.iv.i.i.i.i.i.i
  %16 = load i32, ptr %arrayidx3.i.i.i.i.i.i, align 4, !tbaa !140
  store i32 %16, ptr %arrayidx.i.i.i.i.i.i, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i.i.i.i, 1
  %arrayidx.i.i.i.i.i.i.1 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.next.i.i.i.i.i.i
  %arrayidx3.i.i.i.i.i.i.1 = getelementptr inbounds i32, ptr %4, i64 %indvars.iv.next.i.i.i.i.i.i
  %17 = load i32, ptr %arrayidx3.i.i.i.i.i.i.1, align 4, !tbaa !140
  store i32 %17, ptr %arrayidx.i.i.i.i.i.i.1, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i.i.i.i, 2
  %arrayidx.i.i.i.i.i.i.2 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.next.i.i.i.i.i.i.1
  %arrayidx3.i.i.i.i.i.i.2 = getelementptr inbounds i32, ptr %4, i64 %indvars.iv.next.i.i.i.i.i.i.1
  %18 = load i32, ptr %arrayidx3.i.i.i.i.i.i.2, align 4, !tbaa !140
  store i32 %18, ptr %arrayidx.i.i.i.i.i.i.2, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i.i.2 = add nuw nsw i64 %indvars.iv.i.i.i.i.i.i, 3
  %arrayidx.i.i.i.i.i.i.3 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.next.i.i.i.i.i.i.2
  %arrayidx3.i.i.i.i.i.i.3 = getelementptr inbounds i32, ptr %4, i64 %indvars.iv.next.i.i.i.i.i.i.2
  %19 = load i32, ptr %arrayidx3.i.i.i.i.i.i.3, align 4, !tbaa !140
  store i32 %19, ptr %arrayidx.i.i.i.i.i.i.3, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i.i.i.i, 4
  %exitcond.not.i.i.i.i.i.i.3 = icmp eq i64 %indvars.iv.next.i.i.i.i.i.i.3, %wide.trip.count.i.i.i.i.i.i
  br i1 %exitcond.not.i.i.i.i.i.i.3, label %if.then.i11.i.i.i.i.i, label %for.body.i.i.i.i.i.i, !llvm.loop !626

_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i.i.i: ; preds = %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i.i.i.i
  %tobool.not.i10.i.i.i.i.i = icmp eq ptr %4, null
  %20 = load i8, ptr %m_ownsMemory.i.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i.i.i = icmp eq i8 %20, 0
  %or.cond10.i.i.i = select i1 %tobool.not.i10.i.i.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i.i.i
  br i1 %or.cond10.i.i.i, label %for.body.lr.ph.i.i.i.i, label %if.then3.i.i.i.i.i.i

if.then.i11.i.i.i.i.i:                            ; preds = %for.body.i.i.i.i.i.i.prol.loopexit, %for.body.i.i.i.i.i.i, %middle.block26
  %.old.i.i.i = load i8, ptr %m_ownsMemory.i.i.i.i, align 8, !tbaa !130, !range !159, !noundef !192
  %tobool2.not.i.i.i.old.i.i.i = icmp eq i8 %.old.i.i.i, 0
  br i1 %tobool2.not.i.i.i.old.i.i.i, label %for.body.lr.ph.i.i.i.i, label %if.then3.i.i.i.i.i.i

if.then3.i.i.i.i.i.i:                             ; preds = %if.then.i11.i.i.i.i.i, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %4)
  br label %for.body.lr.ph.i.i.i.i

for.body.lr.ph.i.i.i.i:                           ; preds = %if.then3.i.i.i.i.i.i, %if.then.i11.i.i.i.i.i, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i.i, align 8, !tbaa !130
  store ptr %call.i.i.i.i.i.i.i, ptr %m_data.i.i.i.i, align 8, !tbaa !131
  store i32 %3, ptr %m_capacity.i.i.i.i, align 8, !tbaa !133
  %wide.trip.count.i.i.i.i = sext i32 %3 to i64
  %21 = shl nuw nsw i64 %wide.trip.count.i.i.i.i, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %call.i.i.i.i.i.i.i, i8 0, i64 %21, i1 false), !tbaa !140
  store i32 %3, ptr %m_size.i.i.i.i, align 4, !tbaa !132
  %m_data.i5.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx3.i, i64 0, i32 5
  %22 = load ptr, ptr %m_data.i5.i.i.i, align 8, !tbaa !131
  %min.iters.check = icmp ult i32 %3, 8
  %23 = ptrtoint ptr %22 to i64
  %24 = sub i64 %call.i.i.i.i.i.i.i22, %23
  %diff.check = icmp ult i64 %24, 32
  %or.cond41 = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond41, label %for.body.i.i.i.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i.i.i
  %n.vec = and i64 %conv.i.i.i.i.i.i.i, 4294967288
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %25 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %index
  %26 = getelementptr inbounds i32, ptr %22, i64 %index
  %wide.load = load <4 x i32>, ptr %26, align 4, !tbaa !140
  %27 = getelementptr inbounds i32, ptr %26, i64 4
  %wide.load23 = load <4 x i32>, ptr %27, align 4, !tbaa !140
  store <4 x i32> %wide.load, ptr %25, align 4, !tbaa !140
  %28 = getelementptr inbounds i32, ptr %25, i64 4
  store <4 x i32> %wide.load23, ptr %28, align 4, !tbaa !140
  %index.next = add nuw i64 %index, 8
  %29 = icmp eq i64 %index.next, %n.vec
  br i1 %29, label %middle.block, label %vector.body, !llvm.loop !627

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %conv.i.i.i.i.i.i.i
  br i1 %cmp.n, label %_ZN9NodeLinksC2ERKS_.exit.i, label %for.body.i.i.i.i.preheader

for.body.i.i.i.i.preheader:                       ; preds = %for.body.lr.ph.i.i.i.i, %middle.block
  %indvars.iv.i7.i.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i.i ], [ %n.vec, %middle.block ]
  %30 = xor i64 %indvars.iv.i7.i.i.i.ph, -1
  %31 = add nsw i64 %30, %conv.i.i.i.i.i.i.i
  %xtraiter42 = and i64 %conv.i.i.i.i.i.i.i, 3
  %lcmp.mod43.not = icmp eq i64 %xtraiter42, 0
  br i1 %lcmp.mod43.not, label %for.body.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.prol

for.body.i.i.i.i.prol:                            ; preds = %for.body.i.i.i.i.preheader, %for.body.i.i.i.i.prol
  %indvars.iv.i7.i.i.i.prol = phi i64 [ %indvars.iv.next.i8.i.i.i.prol, %for.body.i.i.i.i.prol ], [ %indvars.iv.i7.i.i.i.ph, %for.body.i.i.i.i.preheader ]
  %prol.iter44 = phi i64 [ %prol.iter44.next, %for.body.i.i.i.i.prol ], [ 0, %for.body.i.i.i.i.preheader ]
  %arrayidx.i.i.i.i.prol = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.i7.i.i.i.prol
  %arrayidx3.i.i.i.i.prol = getelementptr inbounds i32, ptr %22, i64 %indvars.iv.i7.i.i.i.prol
  %32 = load i32, ptr %arrayidx3.i.i.i.i.prol, align 4, !tbaa !140
  store i32 %32, ptr %arrayidx.i.i.i.i.prol, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i.i.prol = add nuw nsw i64 %indvars.iv.i7.i.i.i.prol, 1
  %prol.iter44.next = add i64 %prol.iter44, 1
  %prol.iter44.cmp.not = icmp eq i64 %prol.iter44.next, %xtraiter42
  br i1 %prol.iter44.cmp.not, label %for.body.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.prol, !llvm.loop !628

for.body.i.i.i.i.prol.loopexit:                   ; preds = %for.body.i.i.i.i.prol, %for.body.i.i.i.i.preheader
  %indvars.iv.i7.i.i.i.unr = phi i64 [ %indvars.iv.i7.i.i.i.ph, %for.body.i.i.i.i.preheader ], [ %indvars.iv.next.i8.i.i.i.prol, %for.body.i.i.i.i.prol ]
  %33 = icmp ult i64 %31, 3
  br i1 %33, label %_ZN9NodeLinksC2ERKS_.exit.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i.prol.loopexit, %for.body.i.i.i.i
  %indvars.iv.i7.i.i.i = phi i64 [ %indvars.iv.next.i8.i.i.i.3, %for.body.i.i.i.i ], [ %indvars.iv.i7.i.i.i.unr, %for.body.i.i.i.i.prol.loopexit ]
  %arrayidx.i.i.i.i = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.i7.i.i.i
  %arrayidx3.i.i.i.i = getelementptr inbounds i32, ptr %22, i64 %indvars.iv.i7.i.i.i
  %34 = load i32, ptr %arrayidx3.i.i.i.i, align 4, !tbaa !140
  store i32 %34, ptr %arrayidx.i.i.i.i, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i.i = add nuw nsw i64 %indvars.iv.i7.i.i.i, 1
  %arrayidx.i.i.i.i.1 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.next.i8.i.i.i
  %arrayidx3.i.i.i.i.1 = getelementptr inbounds i32, ptr %22, i64 %indvars.iv.next.i8.i.i.i
  %35 = load i32, ptr %arrayidx3.i.i.i.i.1, align 4, !tbaa !140
  store i32 %35, ptr %arrayidx.i.i.i.i.1, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i.i.1 = add nuw nsw i64 %indvars.iv.i7.i.i.i, 2
  %arrayidx.i.i.i.i.2 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.next.i8.i.i.i.1
  %arrayidx3.i.i.i.i.2 = getelementptr inbounds i32, ptr %22, i64 %indvars.iv.next.i8.i.i.i.1
  %36 = load i32, ptr %arrayidx3.i.i.i.i.2, align 4, !tbaa !140
  store i32 %36, ptr %arrayidx.i.i.i.i.2, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i.i.2 = add nuw nsw i64 %indvars.iv.i7.i.i.i, 3
  %arrayidx.i.i.i.i.3 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.next.i8.i.i.i.2
  %arrayidx3.i.i.i.i.3 = getelementptr inbounds i32, ptr %22, i64 %indvars.iv.next.i8.i.i.i.2
  %37 = load i32, ptr %arrayidx3.i.i.i.i.3, align 4, !tbaa !140
  store i32 %37, ptr %arrayidx.i.i.i.i.3, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i.i.3 = add nuw nsw i64 %indvars.iv.i7.i.i.i, 4
  %exitcond.not.i9.i.i.i.3 = icmp eq i64 %indvars.iv.next.i8.i.i.i.3, %conv.i.i.i.i.i.i.i
  br i1 %exitcond.not.i9.i.i.i.3, label %_ZN9NodeLinksC2ERKS_.exit.i, label %for.body.i.i.i.i, !llvm.loop !629

_ZN9NodeLinksC2ERKS_.exit.i:                      ; preds = %for.body.i.i.i.i.prol.loopexit, %for.body.i.i.i.i, %middle.block, %_ZN20btAlignedObjectArrayIiE6resizeEiRKi.exit.thread.i.i.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %38 = icmp eq i64 %indvars.iv.next.i, %zext
  br i1 %38, label %_ZNK20btAlignedObjectArrayI9NodeLinksE4copyEiiPS0_.exit, label %for.body.i

_ZNK20btAlignedObjectArrayI9NodeLinksE4copyEiiPS0_.exit: ; preds = %_ZN9NodeLinksC2ERKS_.exit.i
  %.pre = load i32, ptr %m_size.i, align 4, !tbaa !327
  %cmp4.i = icmp sgt i32 %.pre, 0
  br i1 %cmp4.i, label %for.body.lr.ph.i10, label %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit

for.body.lr.ph.i10:                               ; preds = %_ZNK20btAlignedObjectArrayI9NodeLinksE4copyEiiPS0_.exit
  %m_data.i9 = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 5
  %zext20 = zext i32 %.pre to i64
  br label %for.body.i13

for.body.i13:                                     ; preds = %_ZN9NodeLinksD2Ev.exit.i, %for.body.lr.ph.i10
  %indvars.iv.i11 = phi i64 [ 0, %for.body.lr.ph.i10 ], [ %indvars.iv.next.i14, %_ZN9NodeLinksD2Ev.exit.i ]
  %39 = load ptr, ptr %m_data.i9, align 8, !tbaa !326
  %arrayidx.i12 = getelementptr inbounds %struct.NodeLinks, ptr %39, i64 %indvars.iv.i11
  %m_data.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i12, i64 0, i32 5
  %40 = load ptr, ptr %m_data.i.i.i.i.i, align 8, !tbaa !131
  %tobool.not.i.i.i.i.i = icmp eq ptr %40, null
  %m_ownsMemory.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i12, i64 0, i32 6
  %41 = load i8, ptr %m_ownsMemory.i.i.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i.i = icmp eq i8 %41, 0
  %or.cond.i.i.i.i = select i1 %tobool.not.i.i.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i.i
  br i1 %or.cond.i.i.i.i, label %_ZN9NodeLinksD2Ev.exit.i, label %if.then3.i.i.i.i.i

if.then3.i.i.i.i.i:                               ; preds = %for.body.i13
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %40)
  br label %_ZN9NodeLinksD2Ev.exit.i

_ZN9NodeLinksD2Ev.exit.i:                         ; preds = %if.then3.i.i.i.i.i, %for.body.i13
  %m_size.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i12, i64 0, i32 2
  store i8 1, ptr %m_ownsMemory.i.i.i.i.i, align 8, !tbaa !130
  store ptr null, ptr %m_data.i.i.i.i.i, align 8, !tbaa !131
  store i32 0, ptr %m_size.i.i.i.i.i, align 4, !tbaa !132
  %m_capacity.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i12, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i.i.i, align 8, !tbaa !133
  %indvars.iv.next.i14 = add nuw nsw i64 %indvars.iv.i11, 1
  %42 = icmp eq i64 %indvars.iv.next.i14, %zext20
  br i1 %42, label %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit, label %for.body.i13

_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit: ; preds = %_ZN9NodeLinksD2Ev.exit.i, %_ZN20btAlignedObjectArrayI9NodeLinksE8allocateEi.exit, %_ZNK20btAlignedObjectArrayI9NodeLinksE4copyEiiPS0_.exit
  %m_data.i17 = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 5
  %43 = load ptr, ptr %m_data.i17, align 8, !tbaa !326
  %tobool.not.i18 = icmp eq ptr %43, null
  %m_ownsMemory.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 6
  %44 = load i8, ptr %m_ownsMemory.i, align 8, !range !159
  %tobool2.not.i = icmp eq i8 %44, 0
  %or.cond = select i1 %tobool.not.i18, i1 true, i1 %tobool2.not.i
  br i1 %or.cond, label %_ZN20btAlignedObjectArrayI9NodeLinksE10deallocateEv.exit, label %if.then3.i

if.then3.i:                                       ; preds = %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %43)
  br label %_ZN20btAlignedObjectArrayI9NodeLinksE10deallocateEv.exit

_ZN20btAlignedObjectArrayI9NodeLinksE10deallocateEv.exit: ; preds = %if.then3.i, %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit
  %m_ownsMemory = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory, align 8, !tbaa !323
  store ptr %retval.0.i, ptr %m_data.i17, align 8, !tbaa !326
  store i32 %_Count, ptr %m_capacity.i, align 8, !tbaa !328
  br label %if.end

if.end:                                           ; preds = %_ZN20btAlignedObjectArrayI9NodeLinksE10deallocateEv.exit, %entry
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN11btSparseSdfILi3EE9BuildCellERNS0_4CellE(ptr noundef nonnull align 8 dereferenceable(52) %this, ptr noundef nonnull align 8 dereferenceable(296) %c) local_unnamed_addr #0 comdat align 2 {
entry:
  %unit.i = alloca %class.btTransform, align 4
  %res.i = alloca %"struct.btGjkEpaSolver2::sResults", align 4
  %ref.tmp33 = alloca %class.btVector3, align 8
  %c4 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c, i64 0, i32 1
  %arrayidx11 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c, i64 0, i32 1, i64 2
  %0 = load i32, ptr %arrayidx11, align 8, !tbaa !140
  %conv12 = sitofp i32 %0 to float
  %1 = load <2 x i32>, ptr %c4, align 8, !tbaa !140
  %2 = sitofp <2 x i32> %1 to <2 x float>
  %3 = fmul <2 x float> %2, <float 3.000000e+00, float 3.000000e+00>
  %mul8.i = fmul float %conv12, 3.000000e+00
  %voxelsz = getelementptr inbounds %struct.btSparseSdf, ptr %this, i64 0, i32 1
  %4 = load float, ptr %voxelsz, align 8, !tbaa !137
  %5 = insertelement <2 x float> poison, float %4, i64 0
  %6 = shufflevector <2 x float> %5, <2 x float> poison, <2 x i32> zeroinitializer
  %7 = fmul <2 x float> %3, %6
  %mul8.i65 = fmul float %4, %mul8.i
  %arrayidx3.i72 = getelementptr inbounds [4 x float], ptr %ref.tmp33, i64 0, i64 1
  %arrayidx5.i73 = getelementptr inbounds [4 x float], ptr %ref.tmp33, i64 0, i64 2
  %arrayidx7.i74 = getelementptr inbounds [4 x float], ptr %ref.tmp33, i64 0, i64 3
  %pclient = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c, i64 0, i32 4
  %arrayidx3.i.i.i.i.i = getelementptr inbounds [4 x float], ptr %unit.i, i64 0, i64 1
  %arrayidx3.i6.i.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %unit.i, i64 0, i64 1, i32 0, i64 1
  %arrayidx5.i7.i.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %unit.i, i64 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %unit.i, i64 0, i64 2, i32 0, i64 2
  %arrayidx7.i11.i.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %unit.i, i64 0, i64 2, i32 0, i64 3
  %8 = extractelement <2 x float> %7, i64 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup21
  ret void

for.body:                                         ; preds = %entry, %for.cond.cleanup21
  %indvars.iv80 = phi i64 [ 0, %entry ], [ %indvars.iv.next81, %for.cond.cleanup21 ]
  %9 = load float, ptr %voxelsz, align 8, !tbaa !630
  %10 = trunc i64 %indvars.iv80 to i32
  %conv17 = sitofp i32 %10 to float
  %11 = call float @llvm.fmuladd.f32(float %9, float %conv17, float %mul8.i65)
  br label %for.body22

for.cond.cleanup21:                               ; preds = %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.3
  %indvars.iv.next81 = add nuw nsw i64 %indvars.iv80, 1
  %exitcond83.not = icmp eq i64 %indvars.iv.next81, 4
  br i1 %exitcond83.not, label %for.cond.cleanup, label %for.body

for.body22:                                       ; preds = %for.body, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.3 ]
  %12 = load <4 x float>, ptr %voxelsz, align 8
  %13 = trunc i64 %indvars.iv to i32
  %conv24 = sitofp i32 %13 to float
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp33) #38
  %14 = shufflevector <4 x float> %12, <4 x float> poison, <2 x i32> zeroinitializer
  %15 = insertelement <2 x float> <float 0.000000e+00, float poison>, float %conv24, i64 1
  %16 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %14, <2 x float> %15, <2 x float> %7)
  store <2 x float> %16, ptr %ref.tmp33, align 8, !tbaa !137
  store float %11, ptr %arrayidx5.i73, align 8, !tbaa !137
  store float 0.000000e+00, ptr %arrayidx7.i74, align 4, !tbaa !137
  %17 = load ptr, ptr %pclient, align 8, !tbaa !500
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %unit.i) #38
  store float 1.000000e+00, ptr %unit.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i.i.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i7.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i.i.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %arrayidx7.i11.i.i.i.i, i8 0, i64 20, i1 false)
  %m_shapeType.i.i.i = getelementptr inbounds %class.btCollisionShape, ptr %17, i64 0, i32 1
  %18 = load i32, ptr %m_shapeType.i.i.i, align 8, !tbaa !152
  %cmp.i.i.i = icmp slt i32 %18, 20
  br i1 %cmp.i.i.i, label %if.then.i, label %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit

if.then.i:                                        ; preds = %for.body22
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %res.i) #38
  %call1.i = call noundef float @_ZN15btGjkEpaSolver214SignedDistanceERK9btVector3fPK13btConvexShapeRK11btTransformRNS_8sResultsE(ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp33, float noundef 0.000000e+00, ptr noundef nonnull %17, ptr noundef nonnull align 4 dereferenceable(64) %unit.i, ptr noundef nonnull align 4 dereferenceable(56) %res.i)
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %res.i) #38
  %.pre = load ptr, ptr %pclient, align 8, !tbaa !500
  br label %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit

_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit: ; preds = %for.body22, %if.then.i
  %19 = phi ptr [ %.pre, %if.then.i ], [ %17, %for.body22 ]
  %retval.0.i = phi float [ %call1.i, %if.then.i ], [ 0.000000e+00, %for.body22 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %unit.i) #38
  %arrayidx39 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c, i64 0, i64 0, i64 %indvars.iv, i64 %indvars.iv80
  store float %retval.0.i, ptr %arrayidx39, align 4, !tbaa !137
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp33) #38
  %20 = load float, ptr %voxelsz, align 8, !tbaa !630
  %21 = fadd float %20, %8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp33) #38
  store float %21, ptr %ref.tmp33, align 8, !tbaa !137
  %22 = extractelement <2 x float> %16, i64 1
  store float %22, ptr %arrayidx3.i72, align 4, !tbaa !137
  store float %11, ptr %arrayidx5.i73, align 8, !tbaa !137
  store float 0.000000e+00, ptr %arrayidx7.i74, align 4, !tbaa !137
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %unit.i) #38
  store float 1.000000e+00, ptr %unit.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i.i.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i7.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i.i.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %arrayidx7.i11.i.i.i.i, i8 0, i64 20, i1 false)
  %m_shapeType.i.i.i.1 = getelementptr inbounds %class.btCollisionShape, ptr %19, i64 0, i32 1
  %23 = load i32, ptr %m_shapeType.i.i.i.1, align 8, !tbaa !152
  %cmp.i.i.i.1 = icmp slt i32 %23, 20
  br i1 %cmp.i.i.i.1, label %if.then.i.1, label %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.1

if.then.i.1:                                      ; preds = %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %res.i) #38
  %call1.i.1 = call noundef float @_ZN15btGjkEpaSolver214SignedDistanceERK9btVector3fPK13btConvexShapeRK11btTransformRNS_8sResultsE(ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp33, float noundef 0.000000e+00, ptr noundef nonnull %19, ptr noundef nonnull align 4 dereferenceable(64) %unit.i, ptr noundef nonnull align 4 dereferenceable(56) %res.i)
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %res.i) #38
  %.pre84 = load ptr, ptr %pclient, align 8, !tbaa !500
  br label %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.1

_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.1: ; preds = %if.then.i.1, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit
  %24 = phi ptr [ %.pre84, %if.then.i.1 ], [ %19, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit ]
  %retval.0.i.1 = phi float [ %call1.i.1, %if.then.i.1 ], [ 0.000000e+00, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %unit.i) #38
  %arrayidx39.1 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c, i64 0, i64 1, i64 %indvars.iv, i64 %indvars.iv80
  store float %retval.0.i.1, ptr %arrayidx39.1, align 4, !tbaa !137
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp33) #38
  %25 = load float, ptr %voxelsz, align 8, !tbaa !630
  %26 = call float @llvm.fmuladd.f32(float %25, float 2.000000e+00, float %8)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp33) #38
  store float %26, ptr %ref.tmp33, align 8, !tbaa !137
  store float %22, ptr %arrayidx3.i72, align 4, !tbaa !137
  store float %11, ptr %arrayidx5.i73, align 8, !tbaa !137
  store float 0.000000e+00, ptr %arrayidx7.i74, align 4, !tbaa !137
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %unit.i) #38
  store float 1.000000e+00, ptr %unit.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i.i.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i7.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i.i.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %arrayidx7.i11.i.i.i.i, i8 0, i64 20, i1 false)
  %m_shapeType.i.i.i.2 = getelementptr inbounds %class.btCollisionShape, ptr %24, i64 0, i32 1
  %27 = load i32, ptr %m_shapeType.i.i.i.2, align 8, !tbaa !152
  %cmp.i.i.i.2 = icmp slt i32 %27, 20
  br i1 %cmp.i.i.i.2, label %if.then.i.2, label %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.2

if.then.i.2:                                      ; preds = %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.1
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %res.i) #38
  %call1.i.2 = call noundef float @_ZN15btGjkEpaSolver214SignedDistanceERK9btVector3fPK13btConvexShapeRK11btTransformRNS_8sResultsE(ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp33, float noundef 0.000000e+00, ptr noundef nonnull %24, ptr noundef nonnull align 4 dereferenceable(64) %unit.i, ptr noundef nonnull align 4 dereferenceable(56) %res.i)
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %res.i) #38
  %.pre85 = load ptr, ptr %pclient, align 8, !tbaa !500
  br label %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.2

_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.2: ; preds = %if.then.i.2, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.1
  %28 = phi ptr [ %.pre85, %if.then.i.2 ], [ %24, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.1 ]
  %retval.0.i.2 = phi float [ %call1.i.2, %if.then.i.2 ], [ 0.000000e+00, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.1 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %unit.i) #38
  %arrayidx39.2 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c, i64 0, i64 2, i64 %indvars.iv, i64 %indvars.iv80
  store float %retval.0.i.2, ptr %arrayidx39.2, align 4, !tbaa !137
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp33) #38
  %29 = load float, ptr %voxelsz, align 8, !tbaa !630
  %30 = call float @llvm.fmuladd.f32(float %29, float 3.000000e+00, float %8)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp33) #38
  store float %30, ptr %ref.tmp33, align 8, !tbaa !137
  store float %22, ptr %arrayidx3.i72, align 4, !tbaa !137
  store float %11, ptr %arrayidx5.i73, align 8, !tbaa !137
  store float 0.000000e+00, ptr %arrayidx7.i74, align 4, !tbaa !137
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %unit.i) #38
  store float 1.000000e+00, ptr %unit.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i.i.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i7.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i.i.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %arrayidx7.i11.i.i.i.i, i8 0, i64 20, i1 false)
  %m_shapeType.i.i.i.3 = getelementptr inbounds %class.btCollisionShape, ptr %28, i64 0, i32 1
  %31 = load i32, ptr %m_shapeType.i.i.i.3, align 8, !tbaa !152
  %cmp.i.i.i.3 = icmp slt i32 %31, 20
  br i1 %cmp.i.i.i.3, label %if.then.i.3, label %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.3

if.then.i.3:                                      ; preds = %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.2
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %res.i) #38
  %call1.i.3 = call noundef float @_ZN15btGjkEpaSolver214SignedDistanceERK9btVector3fPK13btConvexShapeRK11btTransformRNS_8sResultsE(ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp33, float noundef 0.000000e+00, ptr noundef nonnull %28, ptr noundef nonnull align 4 dereferenceable(64) %unit.i, ptr noundef nonnull align 4 dereferenceable(56) %res.i)
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %res.i) #38
  br label %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.3

_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.3: ; preds = %if.then.i.3, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.2
  %retval.0.i.3 = phi float [ %call1.i.3, %if.then.i.3 ], [ 0.000000e+00, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.2 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %unit.i) #38
  %arrayidx39.3 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c, i64 0, i64 3, i64 %indvars.iv, i64 %indvars.iv80
  store float %retval.0.i.3, ptr %arrayidx39.3, align 4, !tbaa !137
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp33) #38
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for.cond.cleanup21, label %for.body22
}

declare noundef float @_ZN15btGjkEpaSolver214SignedDistanceERK9btVector3fPK13btConvexShapeRK11btTransformRNS_8sResultsE(ptr noundef nonnull align 4 dereferenceable(16), float noundef, ptr noundef, ptr noundef nonnull align 4 dereferenceable(64), ptr noundef nonnull align 4 dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.experimental.noalias.scope.decl(metadata) #33

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #34

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.sqrt.f32(float) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.fmuladd.v2f32(<2 x float>, <2 x float>, <2 x float>) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.sqrt.v2f32(<2 x float>) #35

attributes #0 = { uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { noinline noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { inlinehint uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #13 = { mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { nofree nosync nounwind memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { mustprogress nofree nosync nounwind willreturn memory(argmem: read) uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #22 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { inlinehint mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #26 = { inlinehint uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #27 = { inlinehint nofree nosync nounwind memory(argmem: readwrite) uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #28 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #29 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #30 = { nofree nounwind }
attributes #31 = { mustprogress nofree nounwind willreturn memory(write) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #32 = { cold noreturn nounwind }
attributes #33 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #34 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #35 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #36 = { builtin allocsize(0) }
attributes #37 = { builtin nounwind }
attributes #38 = { nounwind }
attributes #39 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"vtable pointer", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !14, i64 24}
!9 = !{!"_ZTS20btAlignedObjectArrayIP17btCollisionObjectE", !10, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!10 = !{!"_ZTS18btAlignedAllocatorIP17btCollisionObjectLj16EE"}
!11 = !{!"int", !12, i64 0}
!12 = !{!"omnipotent char", !7, i64 0}
!13 = !{!"any pointer", !12, i64 0}
!14 = !{!"bool", !12, i64 0}
!15 = !{!9, !13, i64 16}
!16 = !{!9, !11, i64 4}
!17 = !{!9, !11, i64 8}
!18 = !{!19, !14, i64 24}
!19 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE", !20, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!20 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody8eVSolver1_ELj16EE"}
!21 = !{!19, !13, i64 16}
!22 = !{!19, !11, i64 4}
!23 = !{!19, !11, i64 8}
!24 = !{!25, !14, i64 24}
!25 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE", !26, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!26 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody8ePSolver1_ELj16EE"}
!27 = !{!25, !13, i64 16}
!28 = !{!25, !11, i64 4}
!29 = !{!25, !11, i64 8}
!30 = !{!31, !14, i64 24}
!31 = !{!"_ZTS20btAlignedObjectArrayI9btVector3E", !32, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!32 = !{!"_ZTS18btAlignedAllocatorI9btVector3Lj16EE"}
!33 = !{!31, !13, i64 16}
!34 = !{!31, !11, i64 4}
!35 = !{!31, !11, i64 8}
!36 = !{!37, !14, i64 24}
!37 = !{!"_ZTS20btAlignedObjectArrayIfE", !38, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!38 = !{!"_ZTS18btAlignedAllocatorIfLj16EE"}
!39 = !{!37, !13, i64 16}
!40 = !{!37, !11, i64 4}
!41 = !{!37, !11, i64 8}
!42 = !{!43, !13, i64 776}
!43 = !{!"_ZTS10btSoftBody", !44, i64 0, !9, i64 280, !49, i64 312, !51, i64 512, !52, i64 536, !13, i64 768, !13, i64 776, !53, i64 784, !55, i64 816, !57, i64 848, !59, i64 880, !61, i64 912, !63, i64 944, !65, i64 976, !67, i64 1008, !69, i64 1040, !71, i64 1072, !48, i64 1104, !12, i64 1108, !14, i64 1140, !73, i64 1144, !73, i64 1208, !73, i64 1272, !76, i64 1336, !78, i64 1368, !45, i64 1400, !80, i64 1464}
!44 = !{!"_ZTS17btCollisionObject", !45, i64 8, !45, i64 72, !47, i64 136, !47, i64 152, !47, i64 168, !14, i64 184, !48, i64 188, !13, i64 192, !13, i64 200, !13, i64 208, !11, i64 216, !11, i64 220, !11, i64 224, !11, i64 228, !48, i64 232, !48, i64 236, !48, i64 240, !13, i64 248, !11, i64 256, !48, i64 260, !48, i64 264, !48, i64 268, !14, i64 272, !12, i64 273}
!45 = !{!"_ZTS11btTransform", !46, i64 0, !47, i64 48}
!46 = !{!"_ZTS11btMatrix3x3", !12, i64 0}
!47 = !{!"_ZTS9btVector3", !12, i64 0}
!48 = !{!"float", !12, i64 0}
!49 = !{!"_ZTSN10btSoftBody6ConfigE", !50, i64 0, !48, i64 4, !48, i64 8, !48, i64 12, !48, i64 16, !48, i64 20, !48, i64 24, !48, i64 28, !48, i64 32, !48, i64 36, !48, i64 40, !48, i64 44, !48, i64 48, !48, i64 52, !48, i64 56, !48, i64 60, !48, i64 64, !48, i64 68, !48, i64 72, !48, i64 76, !48, i64 80, !11, i64 84, !11, i64 88, !11, i64 92, !11, i64 96, !11, i64 100, !19, i64 104, !25, i64 136, !25, i64 168}
!50 = !{!"_ZTSN10btSoftBody10eAeroModel1_E", !12, i64 0}
!51 = !{!"_ZTSN10btSoftBody11SolverStateE", !48, i64 0, !48, i64 4, !48, i64 8, !48, i64 12, !48, i64 16}
!52 = !{!"_ZTSN10btSoftBody4PoseE", !14, i64 0, !14, i64 1, !48, i64 4, !31, i64 8, !37, i64 40, !47, i64 72, !46, i64 88, !46, i64 136, !46, i64 184}
!53 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody4NoteEE", !54, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!54 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody4NoteELj16EE"}
!55 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody4NodeEE", !56, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!56 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody4NodeELj16EE"}
!57 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody4LinkEE", !58, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!58 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody4LinkELj16EE"}
!59 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody4FaceEE", !60, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!60 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody4FaceELj16EE"}
!61 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody5TetraEE", !62, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!62 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody5TetraELj16EE"}
!63 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody6AnchorEE", !64, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!64 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody6AnchorELj16EE"}
!65 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody8RContactEE", !66, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!66 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody8RContactELj16EE"}
!67 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody8SContactEE", !68, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!68 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody8SContactELj16EE"}
!69 = !{!"_ZTS20btAlignedObjectArrayIPN10btSoftBody5JointEE", !70, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!70 = !{!"_ZTS18btAlignedAllocatorIPN10btSoftBody5JointELj16EE"}
!71 = !{!"_ZTS20btAlignedObjectArrayIPN10btSoftBody8MaterialEE", !72, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!72 = !{!"_ZTS18btAlignedAllocatorIPN10btSoftBody8MaterialELj16EE"}
!73 = !{!"_ZTS6btDbvt", !13, i64 0, !13, i64 8, !11, i64 16, !11, i64 20, !11, i64 24, !74, i64 32}
!74 = !{!"_ZTS20btAlignedObjectArrayIN6btDbvt6sStkNNEE", !75, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!75 = !{!"_ZTS18btAlignedAllocatorIN6btDbvt6sStkNNELj16EE"}
!76 = !{!"_ZTS20btAlignedObjectArrayIPN10btSoftBody7ClusterEE", !77, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!77 = !{!"_ZTS18btAlignedAllocatorIPN10btSoftBody7ClusterELj16EE"}
!78 = !{!"_ZTS20btAlignedObjectArrayIbE", !79, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!79 = !{!"_ZTS18btAlignedAllocatorIbLj16EE"}
!80 = !{!"_ZTS20btAlignedObjectArrayIiE", !81, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!81 = !{!"_ZTS18btAlignedAllocatorIiLj16EE"}
!82 = !{!53, !14, i64 24}
!83 = !{!53, !13, i64 16}
!84 = !{!53, !11, i64 4}
!85 = !{!53, !11, i64 8}
!86 = !{!55, !14, i64 24}
!87 = !{!55, !13, i64 16}
!88 = !{!55, !11, i64 4}
!89 = !{!55, !11, i64 8}
!90 = !{!57, !14, i64 24}
!91 = !{!57, !13, i64 16}
!92 = !{!57, !11, i64 4}
!93 = !{!57, !11, i64 8}
!94 = !{!59, !14, i64 24}
!95 = !{!59, !13, i64 16}
!96 = !{!59, !11, i64 4}
!97 = !{!59, !11, i64 8}
!98 = !{!61, !14, i64 24}
!99 = !{!61, !13, i64 16}
!100 = !{!61, !11, i64 4}
!101 = !{!61, !11, i64 8}
!102 = !{!63, !14, i64 24}
!103 = !{!63, !13, i64 16}
!104 = !{!63, !11, i64 4}
!105 = !{!63, !11, i64 8}
!106 = !{!65, !14, i64 24}
!107 = !{!65, !13, i64 16}
!108 = !{!65, !11, i64 4}
!109 = !{!65, !11, i64 8}
!110 = !{!67, !14, i64 24}
!111 = !{!67, !13, i64 16}
!112 = !{!67, !11, i64 4}
!113 = !{!67, !11, i64 8}
!114 = !{!69, !14, i64 24}
!115 = !{!69, !13, i64 16}
!116 = !{!69, !11, i64 4}
!117 = !{!69, !11, i64 8}
!118 = !{!71, !14, i64 24}
!119 = !{!71, !13, i64 16}
!120 = !{!71, !11, i64 4}
!121 = !{!71, !11, i64 8}
!122 = !{!76, !14, i64 24}
!123 = !{!76, !13, i64 16}
!124 = !{!76, !11, i64 4}
!125 = !{!76, !11, i64 8}
!126 = !{!78, !14, i64 24}
!127 = !{!78, !13, i64 16}
!128 = !{!78, !11, i64 4}
!129 = !{!78, !11, i64 8}
!130 = !{!80, !14, i64 24}
!131 = !{!80, !13, i64 16}
!132 = !{!80, !11, i64 4}
!133 = !{!80, !11, i64 8}
!134 = !{!44, !11, i64 256}
!135 = !{!43, !50, i64 312}
!136 = !{!43, !48, i64 316}
!137 = !{!48, !48, i64 0}
!138 = !{!43, !48, i64 348}
!139 = !{!43, !48, i64 392}
!140 = !{!11, !11, i64 0}
!141 = !{!43, !11, i64 412}
!142 = !{!43, !14, i64 536}
!143 = !{!43, !14, i64 537}
!144 = !{!43, !48, i64 540}
!145 = !{!43, !13, i64 768}
!146 = !{!43, !48, i64 1104}
!147 = !{!43, !14, i64 1140}
!148 = !{!149, !48, i64 16}
!149 = !{!"_ZTSN10btSoftBody8MaterialE", !150, i64 0, !48, i64 8, !48, i64 12, !48, i64 16, !11, i64 20}
!150 = !{!"_ZTSN10btSoftBody7ElementE", !13, i64 0}
!151 = !{!149, !11, i64 20}
!152 = !{!153, !11, i64 8}
!153 = !{!"_ZTS16btCollisionShape", !11, i64 8, !13, i64 16}
!154 = !{!155, !13, i64 32}
!155 = !{!"_ZTS24btSoftBodyCollisionShape", !156, i64 0, !13, i64 32}
!156 = !{!"_ZTS14btConcaveShape", !153, i64 0, !48, i64 24}
!157 = !{!44, !13, i64 200}
!158 = !{!156, !48, i64 24}
!159 = !{i8 0, i8 2}
!160 = distinct !{!160, !161}
!161 = !{!"llvm.loop.unroll.disable"}
!162 = !{!43, !13, i64 1144}
!163 = !{i64 0, i64 16, !164}
!164 = !{!12, !12, i64 0}
!165 = !{i64 0, i64 8, !164}
!166 = !{!44, !13, i64 192}
!167 = !{!168, !13, i64 32}
!168 = !{!"_ZTS19btSoftBodyWorldInfo", !48, i64 0, !48, i64 4, !48, i64 8, !47, i64 12, !13, i64 32, !13, i64 40, !47, i64 48, !169, i64 64}
!169 = !{!"_ZTS11btSparseSdfILi3EE", !170, i64 0, !48, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48}
!170 = !{!"_ZTS20btAlignedObjectArrayIPN11btSparseSdfILi3EE4CellEE", !171, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!171 = !{!"_ZTS18btAlignedAllocatorIPN11btSparseSdfILi3EE4CellELj16EE"}
!172 = !{!168, !13, i64 40}
!173 = !{!"branch_weights", i32 1, i32 1048575}
!174 = !{!150, !13, i64 0}
!175 = !{!176, !48, i64 96}
!176 = !{!"_ZTSN10btSoftBody4NodeE", !177, i64 0, !47, i64 16, !47, i64 32, !47, i64 48, !47, i64 64, !47, i64 80, !48, i64 96, !48, i64 100, !13, i64 104, !11, i64 112}
!177 = !{!"_ZTSN10btSoftBody7FeatureE", !150, i64 0, !13, i64 8}
!178 = !{!179, !181}
!179 = distinct !{!179, !180, !"_ZN12btDbvtAabbMm6FromCEERK9btVector3S2_: %agg.result"}
!180 = distinct !{!180, !"_ZN12btDbvtAabbMm6FromCEERK9btVector3S2_"}
!181 = distinct !{!181, !182, !"_ZN12btDbvtAabbMm6FromCRERK9btVector3f: %agg.result"}
!182 = distinct !{!182, !"_ZN12btDbvtAabbMm6FromCRERK9btVector3f"}
!183 = !{!176, !13, i64 104}
!184 = !{!177, !13, i64 8}
!185 = !{!186, !186, i64 0}
!186 = !{!"_ZTSN10btSoftBody8ePSolver1_E", !12, i64 0}
!187 = distinct !{!187, !188, !189}
!188 = !{!"llvm.loop.isvectorized", i32 1}
!189 = !{!"llvm.loop.unroll.runtime.disable"}
!190 = distinct !{!190, !161}
!191 = distinct !{!191, !188}
!192 = !{}
!193 = distinct !{!193, !188, !189}
!194 = distinct !{!194, !161}
!195 = distinct !{!195, !188}
!196 = distinct !{!196, !188, !189}
!197 = distinct !{!197, !161}
!198 = distinct !{!198, !188}
!199 = distinct !{!199, !188, !189}
!200 = distinct !{!200, !161}
!201 = distinct !{!201, !188}
!202 = !{!203, !203, i64 0}
!203 = !{!"_ZTSN10btSoftBody8eVSolver1_E", !12, i64 0}
!204 = distinct !{!204, !188, !189}
!205 = distinct !{!205, !161}
!206 = distinct !{!206, !188}
!207 = distinct !{!207, !188, !189}
!208 = distinct !{!208, !161}
!209 = distinct !{!209, !188}
!210 = distinct !{!210, !188, !189}
!211 = distinct !{!211, !161}
!212 = distinct !{!212, !188}
!213 = distinct !{!213, !188, !189}
!214 = distinct !{!214, !161}
!215 = distinct !{!215, !188}
!216 = distinct !{!216, !188, !189}
!217 = distinct !{!217, !161}
!218 = distinct !{!218, !188}
!219 = !{!13, !13, i64 0}
!220 = distinct !{!220, !161}
!221 = !{!222, !13, i64 384}
!222 = !{!"_ZTSN10btSoftBody7ClusterE", !223, i64 0, !37, i64 32, !31, i64 64, !45, i64 96, !48, i64 160, !48, i64 164, !46, i64 168, !46, i64 216, !47, i64 264, !12, i64 280, !12, i64 312, !11, i64 344, !11, i64 348, !47, i64 352, !47, i64 368, !13, i64 384, !48, i64 392, !48, i64 396, !48, i64 400, !48, i64 404, !48, i64 408, !48, i64 412, !14, i64 416, !14, i64 417, !11, i64 420}
!223 = !{!"_ZTS20btAlignedObjectArrayIPN10btSoftBody4NodeEE", !224, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!224 = !{!"_ZTS18btAlignedAllocatorIPN10btSoftBody4NodeELj16EE"}
!225 = !{!226}
!226 = distinct !{!226, !227, !"_ZN12btDbvtAabbMm6FromCRERK9btVector3f: %agg.result"}
!227 = distinct !{!227, !"_ZN12btDbvtAabbMm6FromCRERK9btVector3f"}
!228 = !{!229}
!229 = distinct !{!229, !230, !"_ZN12btDbvtAabbMm6FromCEERK9btVector3S2_: %agg.result"}
!230 = distinct !{!230, !"_ZN12btDbvtAabbMm6FromCEERK9btVector3S2_"}
!231 = !{!229, !226}
!232 = !{!233, !13, i64 64}
!233 = !{!"_ZTSN10btSoftBody4FaceE", !177, i64 0, !12, i64 16, !47, i64 40, !48, i64 56, !13, i64 64}
!234 = !{!235, !13, i64 0}
!235 = !{!"_ZTSN10btSoftBody6AnchorE", !13, i64 0, !47, i64 8, !13, i64 24, !46, i64 32, !47, i64 80, !48, i64 96}
!236 = !{!237, !11, i64 32}
!237 = !{!"_ZTSN10btSoftBody4NoteE", !150, i64 0, !13, i64 8, !47, i64 16, !11, i64 32, !12, i64 40, !12, i64 72}
!238 = distinct !{!238, !161}
!239 = !{!240, !48, i64 32}
!240 = !{!"_ZTSN10btSoftBody4LinkE", !177, i64 0, !12, i64 16, !48, i64 32, !11, i64 36, !48, i64 40, !48, i64 44, !48, i64 48, !47, i64 52}
!241 = !{!233, !48, i64 56}
!242 = !{!243, !48, i64 48}
!243 = !{!"_ZTSN10btSoftBody5TetraE", !177, i64 0, !12, i64 16, !48, i64 48, !13, i64 56, !12, i64 64, !48, i64 128, !48, i64 132}
!244 = distinct !{!244, !161}
!245 = !{!235, !13, i64 24}
!246 = !{!247, !249}
!247 = distinct !{!247, !248, !"_ZNK11btMatrix3x39transposeEv: %agg.result"}
!248 = distinct !{!248, !"_ZNK11btMatrix3x39transposeEv"}
!249 = distinct !{!249, !250, !"_ZNK11btTransform7inverseEv: %agg.result"}
!250 = distinct !{!250, !"_ZNK11btTransform7inverseEv"}
!251 = !{!249}
!252 = !{i64 0, i64 8, !219, i64 8, i64 8, !219, i64 16, i64 8, !219}
!253 = !{!254, !13, i64 16}
!254 = !{!"_ZTSN10btSoftBody4BodyE", !13, i64 0, !13, i64 8, !13, i64 16}
!255 = !{!256, !258}
!256 = distinct !{!256, !257, !"_ZNK11btMatrix3x39transposeEv: %agg.result"}
!257 = distinct !{!257, !"_ZNK11btMatrix3x39transposeEv"}
!258 = distinct !{!258, !259, !"_ZNK11btTransform7inverseEv: %agg.result"}
!259 = distinct !{!259, !"_ZNK11btTransform7inverseEv"}
!260 = !{!258}
!261 = !{!262, !264}
!262 = distinct !{!262, !263, !"_ZNK11btMatrix3x39transposeEv: %agg.result"}
!263 = distinct !{!263, !"_ZNK11btMatrix3x39transposeEv"}
!264 = distinct !{!264, !265, !"_ZNK11btTransform7inverseEv: %agg.result"}
!265 = distinct !{!265, !"_ZNK11btTransform7inverseEv"}
!266 = !{!264}
!267 = !{!268, !48, i64 8}
!268 = !{!"_ZTSN10btSoftBody5Joint5SpecsE", !48, i64 0, !48, i64 4, !48, i64 8}
!269 = !{!270, !48, i64 96}
!270 = !{!"_ZTSN10btSoftBody5JointE", !12, i64 8, !12, i64 56, !48, i64 88, !48, i64 92, !48, i64 96, !47, i64 100, !47, i64 116, !46, i64 132, !14, i64 180}
!271 = distinct !{!271, !161}
!272 = !{!254, !13, i64 0}
!273 = !{!274, !276}
!274 = distinct !{!274, !275, !"_ZNK11btMatrix3x39transposeEv: %agg.result"}
!275 = distinct !{!275, !"_ZNK11btMatrix3x39transposeEv"}
!276 = distinct !{!276, !277, !"_ZNK11btTransform7inverseEv: %agg.result"}
!277 = distinct !{!277, !"_ZNK11btTransform7inverseEv"}
!278 = !{!279, !281}
!279 = distinct !{!279, !280, !"_ZNK11btMatrix3x39transposeEv: %agg.result"}
!280 = distinct !{!280, !"_ZNK11btMatrix3x39transposeEv"}
!281 = distinct !{!281, !282, !"_ZNK11btTransform7inverseEv: %agg.result"}
!282 = distinct !{!282, !"_ZNK11btTransform7inverseEv"}
!283 = !{!284, !13, i64 32}
!284 = !{!"_ZTSN10btSoftBody6AJoint5SpecsE", !268, i64 0, !47, i64 12, !13, i64 32}
!285 = !{!286, !13, i64 216}
!286 = !{!"_ZTSN10btSoftBody6AJointE", !270, i64 0, !12, i64 184, !13, i64 216}
!287 = distinct !{!287, !161}
!288 = distinct !{!288, !161}
!289 = distinct !{!289, !188, !189}
!290 = distinct !{!290, !189, !188}
!291 = distinct !{!291, !188, !189}
!292 = distinct !{!292, !189, !188}
!293 = !{i64 0, i64 12, !164}
!294 = distinct !{!294, !161}
!295 = distinct !{!295, !188, !189}
!296 = distinct !{!296, !189, !188}
!297 = !{i64 0, i64 16, !164, i64 16, i64 16, !164}
!298 = !{i64 0, i64 8, !164, i64 8, i64 16, !164}
!299 = distinct !{!299, !161}
!300 = !{!149, !48, i64 8}
!301 = !{!240, !48, i64 40}
!302 = !{!240, !48, i64 44}
!303 = !{!176, !48, i64 100}
!304 = distinct !{!304, !161}
!305 = distinct !{!305, !188, !189}
!306 = distinct !{!306, !161}
!307 = distinct !{!307, !188}
!308 = !{!309}
!309 = distinct !{!309, !310}
!310 = distinct !{!310, !"LVerDomain"}
!311 = !{!312}
!312 = distinct !{!312, !310}
!313 = distinct !{!313, !188, !189}
!314 = distinct !{!314, !188}
!315 = !{!316}
!316 = distinct !{!316, !317, !"_ZNK11btMatrix3x37inverseEv: %agg.result"}
!317 = distinct !{!317, !"_ZNK11btMatrix3x37inverseEv"}
!318 = !{i64 0, i64 4, !164}
!319 = !{!223, !11, i64 4}
!320 = !{!223, !13, i64 16}
!321 = !{!222, !11, i64 344}
!322 = !{!222, !11, i64 348}
!323 = !{!324, !14, i64 24}
!324 = !{!"_ZTS20btAlignedObjectArrayI9NodeLinksE", !325, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!325 = !{!"_ZTS18btAlignedAllocatorI9NodeLinksLj16EE"}
!326 = !{!324, !13, i64 16}
!327 = !{!324, !11, i64 4}
!328 = !{!324, !11, i64 8}
!329 = distinct !{!329, !188, !189}
!330 = distinct !{!330, !161}
!331 = distinct !{!331, !188}
!332 = distinct !{!332, !188, !189}
!333 = distinct !{!333, !161}
!334 = distinct !{!334, !188}
!335 = distinct !{!335, !188, !189}
!336 = distinct !{!336, !161}
!337 = distinct !{!337, !188}
!338 = distinct !{!338, !188, !189}
!339 = distinct !{!339, !161}
!340 = distinct !{!340, !188}
!341 = !{!223, !14, i64 24}
!342 = !{!223, !11, i64 8}
!343 = distinct !{!343, !161}
!344 = distinct !{!344, !161}
!345 = !{!222, !14, i64 416}
!346 = !{!222, !14, i64 417}
!347 = distinct !{!347, !161}
!348 = distinct !{!348, !161}
!349 = distinct !{!349, !161}
!350 = distinct !{!350, !161}
!351 = distinct !{!351, !161}
!352 = distinct !{!352, !161}
!353 = distinct !{!353, !161}
!354 = distinct !{!354, !161}
!355 = distinct !{!355, !161}
!356 = distinct !{!356, !161}
!357 = distinct !{!357, !161}
!358 = distinct !{!358, !161}
!359 = distinct !{!359, !161}
!360 = distinct !{!360, !161}
!361 = distinct !{!361, !161}
!362 = distinct !{!362, !161}
!363 = distinct !{!363, !161}
!364 = distinct !{!364, !161}
!365 = distinct !{!365, !161}
!366 = distinct !{!366, !161}
!367 = !{!14, !14, i64 0}
!368 = distinct !{!368, !188, !189}
!369 = distinct !{!369, !188, !189}
!370 = distinct !{!370, !161}
!371 = distinct !{!371, !188}
!372 = !{!222, !11, i64 420}
!373 = !{!222, !48, i64 164}
!374 = distinct !{!374, !188, !189}
!375 = distinct !{!375, !161}
!376 = distinct !{!376, !188}
!377 = !{!378}
!378 = distinct !{!378, !379, !"_ZNK11btMatrix3x37inverseEv: %agg.result"}
!379 = distinct !{!379, !"_ZNK11btMatrix3x37inverseEv"}
!380 = !{!381}
!381 = distinct !{!381, !382, !"_ZmlRK11btMatrix3x3S1_: %agg.result"}
!382 = distinct !{!382, !"_ZmlRK11btMatrix3x3S1_"}
!383 = !{!222, !48, i64 396}
!384 = !{!222, !48, i64 400}
!385 = !{!222, !48, i64 404}
!386 = !{!43, !48, i64 524}
!387 = !{!388, !11, i64 32}
!388 = !{!"_ZTS11btSymMatrixIiE", !80, i64 0, !11, i64 32}
!389 = distinct !{!389, !188, !189}
!390 = distinct !{!390, !161}
!391 = distinct !{!391, !188}
!392 = !{!393}
!393 = distinct !{!393, !394}
!394 = distinct !{!394, !"LVerDomain"}
!395 = !{!396}
!396 = distinct !{!396, !394}
!397 = distinct !{!397, !188, !189}
!398 = distinct !{!398, !161}
!399 = distinct !{!399, !188}
!400 = !{!401, !13, i64 0}
!401 = !{!"_ZTSN10btSoftBody8sRayCastE", !13, i64 0, !402, i64 8, !11, i64 12, !48, i64 16}
!402 = !{!"_ZTSN10btSoftBody8eFeature1_E", !12, i64 0}
!403 = !{!401, !48, i64 16}
!404 = !{!401, !402, i64 8}
!405 = !{!401, !11, i64 12}
!406 = !{!407}
!407 = distinct !{!407, !408, !"_ZL8VolumeOfRKN10btSoftBody4FaceEf: %agg.result"}
!408 = distinct !{!408, !"_ZL8VolumeOfRKN10btSoftBody4FaceEf"}
!409 = !{!410}
!410 = distinct !{!410, !411, !"_ZN12btDbvtAabbMm10FromPointsEPPK9btVector3i: %agg.result"}
!411 = distinct !{!411, !"_ZN12btDbvtAabbMm10FromPointsEPPK9btVector3i"}
!412 = !{!410, !407}
!413 = !{!73, !13, i64 0}
!414 = !{!402, !402, i64 0}
!415 = !{!416, !48, i64 56}
!416 = !{!"_ZTSN10btSoftBody15RayFromToCasterE", !417, i64 0, !47, i64 8, !47, i64 24, !47, i64 40, !48, i64 56, !13, i64 64, !11, i64 72}
!417 = !{!"_ZTSN6btDbvt8ICollideE"}
!418 = !{!416, !13, i64 64}
!419 = !{!416, !11, i64 72}
!420 = !{!43, !48, i64 512}
!421 = !{!43, !48, i64 516}
!422 = !{!43, !48, i64 520}
!423 = !{!43, !48, i64 528}
!424 = !{!425, !427}
!425 = distinct !{!425, !426, !"_ZN12btDbvtAabbMm6FromCEERK9btVector3S2_: %agg.result"}
!426 = distinct !{!426, !"_ZN12btDbvtAabbMm6FromCEERK9btVector3S2_"}
!427 = distinct !{!427, !428, !"_ZN12btDbvtAabbMm6FromCRERK9btVector3f: %agg.result"}
!428 = distinct !{!428, !"_ZN12btDbvtAabbMm6FromCRERK9btVector3f"}
!429 = !{!430, !432}
!430 = distinct !{!430, !431, !"_ZN12btDbvtAabbMm10FromPointsEPPK9btVector3i: %agg.result"}
!431 = distinct !{!431, !"_ZN12btDbvtAabbMm10FromPointsEPPK9btVector3i"}
!432 = distinct !{!432, !433, !"_ZL8VolumeOfRKN10btSoftBody4FaceEf: %agg.result"}
!433 = distinct !{!433, !"_ZL8VolumeOfRKN10btSoftBody4FaceEf"}
!434 = !{i64 0, i64 4, !164, i64 4, i64 16, !164}
!435 = !{!43, !48, i64 344}
!436 = distinct !{!436, !161}
!437 = !{!43, !48, i64 332}
!438 = !{!43, !48, i64 336}
!439 = !{!168, !48, i64 0}
!440 = !{!168, !48, i64 4}
!441 = !{!168, !48, i64 8}
!442 = !{!443}
!443 = distinct !{!443, !444, !"_ZmlRK11btMatrix3x3S1_: %agg.result"}
!444 = distinct !{!444, !"_ZmlRK11btMatrix3x3S1_"}
!445 = !{!446}
!446 = distinct !{!446, !447, !"_ZNK11btMatrix3x39transposeEv: %agg.result"}
!447 = distinct !{!447, !"_ZNK11btMatrix3x39transposeEv"}
!448 = !{!449}
!449 = distinct !{!449, !450, !"_ZmlRK11btMatrix3x3S1_: %agg.result"}
!450 = distinct !{!450, !"_ZmlRK11btMatrix3x3S1_"}
!451 = !{!240, !48, i64 48}
!452 = !{!453, !48, i64 360}
!453 = !{!"_ZTS11btRigidBody", !44, i64 0, !46, i64 280, !47, i64 328, !47, i64 344, !48, i64 360, !47, i64 364, !47, i64 380, !47, i64 396, !47, i64 412, !47, i64 428, !47, i64 444, !47, i64 460, !48, i64 476, !48, i64 480, !14, i64 484, !48, i64 488, !48, i64 492, !48, i64 496, !48, i64 500, !48, i64 504, !48, i64 508, !13, i64 512, !454, i64 520, !11, i64 552, !11, i64 556, !11, i64 560}
!454 = !{!"_ZTS20btAlignedObjectArrayIP17btTypedConstraintE", !455, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!455 = !{!"_ZTS18btAlignedAllocatorIP17btTypedConstraintLj16EE"}
!456 = !{!235, !48, i64 96}
!457 = !{!43, !11, i64 396}
!458 = distinct !{!458, !459}
!459 = !{!"llvm.loop.unswitch.partial.disable"}
!460 = !{ptr @_ZN10btSoftBody12VSolve_LinksEPS_f}
!461 = !{!43, !11, i64 400}
!462 = !{!43, !48, i64 320}
!463 = !{ptr @_ZN10btSoftBody12PSolve_LinksEPS_ff, ptr @_ZN10btSoftBody14PSolve_AnchorsEPS_ff, ptr @_ZN10btSoftBody16PSolve_RContactsEPS_ff, ptr @_ZN10btSoftBody16PSolve_SContactsEPS_ff}
!464 = !{!43, !11, i64 404}
!465 = distinct !{!465, !459}
!466 = !{!467, !469}
!467 = distinct !{!467, !468, !"_ZL5CrossRK9btVector3: %agg.result"}
!468 = distinct !{!468, !"_ZL5CrossRK9btVector3"}
!469 = distinct !{!469, !470, !"_ZL10MassMatrixfRK11btMatrix3x3RK9btVector3: %agg.result"}
!470 = distinct !{!470, !"_ZL10MassMatrixfRK11btMatrix3x3RK9btVector3"}
!471 = !{!472, !469}
!472 = distinct !{!472, !473, !"_ZmlRK11btMatrix3x3S1_: %agg.result"}
!473 = distinct !{!473, !"_ZmlRK11btMatrix3x3S1_"}
!474 = !{!475}
!475 = distinct !{!475, !476, !"_ZmlRK11btMatrix3x3S1_: %agg.result"}
!476 = distinct !{!476, !"_ZmlRK11btMatrix3x3S1_"}
!477 = !{!222, !48, i64 392}
!478 = distinct !{!478, !459}
!479 = !{!480, !11, i64 4}
!480 = !{!"_ZTS20btAlignedObjectArrayIP10btSoftBodyE", !481, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!481 = !{!"_ZTS18btAlignedAllocatorIP10btSoftBodyLj16EE"}
!482 = !{!480, !13, i64 16}
!483 = distinct !{!483, !161}
!484 = !{!270, !14, i64 180}
!485 = distinct !{!485, !188, !189}
!486 = distinct !{!486, !161}
!487 = distinct !{!487, !188}
!488 = !{!489}
!489 = distinct !{!489, !490, !"_ZNK11btMatrix3x39transposeEv: %agg.result"}
!490 = distinct !{!490, !"_ZNK11btMatrix3x39transposeEv"}
!491 = !{!492, !13, i64 0}
!492 = !{!"_ZTSN10btSoftBody4sCtiE", !13, i64 0, !47, i64 8, !48, i64 24}
!493 = !{!492, !48, i64 24}
!494 = !{!170, !11, i64 4}
!495 = !{!170, !13, i64 16}
!496 = !{!169, !11, i64 48}
!497 = !{!169, !11, i64 44}
!498 = !{!499, !11, i64 272}
!499 = !{!"_ZTSN11btSparseSdfILi3EE4CellE", !12, i64 0, !12, i64 256, !11, i64 268, !11, i64 272, !13, i64 280, !13, i64 288}
!500 = !{!499, !13, i64 280}
!501 = !{!499, !13, i64 288}
!502 = !{!169, !11, i64 40}
!503 = !{!169, !11, i64 36}
!504 = !{!499, !11, i64 268}
!505 = !{!506}
!506 = distinct !{!506, !507, !"_ZL3MulRK11btMatrix3x3f: %agg.result"}
!507 = distinct !{!507, !"_ZL3MulRK11btMatrix3x3f"}
!508 = !{!509}
!509 = distinct !{!509, !510, !"_ZmlRK11btMatrix3x3S1_: %agg.result"}
!510 = distinct !{!510, !"_ZmlRK11btMatrix3x3S1_"}
!511 = !{!254, !13, i64 8}
!512 = !{!513, !515}
!513 = distinct !{!513, !514, !"_ZL5CrossRK9btVector3: %agg.result"}
!514 = distinct !{!514, !"_ZL5CrossRK9btVector3"}
!515 = distinct !{!515, !516, !"_ZL10MassMatrixfRK11btMatrix3x3RK9btVector3: %agg.result"}
!516 = distinct !{!516, !"_ZL10MassMatrixfRK11btMatrix3x3RK9btVector3"}
!517 = !{!518, !520}
!518 = distinct !{!518, !519, !"_ZL5CrossRK9btVector3: %agg.result"}
!519 = distinct !{!519, !"_ZL5CrossRK9btVector3"}
!520 = distinct !{!520, !521, !"_ZL10MassMatrixfRK11btMatrix3x3RK9btVector3: %agg.result"}
!521 = distinct !{!521, !"_ZL10MassMatrixfRK11btMatrix3x3RK9btVector3"}
!522 = !{!523, !515}
!523 = distinct !{!523, !524, !"_ZmlRK11btMatrix3x3S1_: %agg.result"}
!524 = distinct !{!524, !"_ZmlRK11btMatrix3x3S1_"}
!525 = !{!526, !520}
!526 = distinct !{!526, !527, !"_ZmlRK11btMatrix3x3S1_: %agg.result"}
!527 = distinct !{!527, !"_ZmlRK11btMatrix3x3S1_"}
!528 = !{!529}
!529 = distinct !{!529, !530, !"_ZNK11btMatrix3x37inverseEv: %agg.result"}
!530 = distinct !{!530, !"_ZNK11btMatrix3x37inverseEv"}
!531 = !{i64 0, i64 16, !164, i64 16, i64 16, !164, i64 32, i64 4, !140, i64 32, i64 4, !140}
!532 = !{!533}
!533 = distinct !{!533, !534, !"_ZNK10btSoftBody7ImpulsengEv: %agg.result"}
!534 = distinct !{!534, !"_ZNK10btSoftBody7ImpulsengEv"}
!535 = !{!270, !48, i64 92}
!536 = !{!537, !539}
!537 = distinct !{!537, !538, !"_ZL3AddRK11btMatrix3x3S1_: %agg.result"}
!538 = distinct !{!538, !"_ZL3AddRK11btMatrix3x3S1_"}
!539 = distinct !{!539, !540, !"_ZL20AngularImpulseMatrixRK11btMatrix3x3S1_: %agg.result"}
!540 = distinct !{!540, !"_ZL20AngularImpulseMatrixRK11btMatrix3x3S1_"}
!541 = !{!542}
!542 = distinct !{!542, !543, !"_ZNK10btSoftBody7ImpulsengEv: %agg.result"}
!543 = distinct !{!543, !"_ZNK10btSoftBody7ImpulsengEv"}
!544 = !{!545, !11, i64 184}
!545 = !{!"_ZTSN10btSoftBody6CJointE", !270, i64 0, !11, i64 184, !11, i64 188, !12, i64 192, !47, i64 224, !48, i64 240}
!546 = !{!545, !11, i64 188}
!547 = !{!222, !48, i64 408}
!548 = !{!222, !48, i64 412}
!549 = !{i64 0, i64 8, !164, i64 8, i64 16, !164, i64 24, i64 4, !140, i64 24, i64 4, !140}
!550 = !{i64 0, i64 8, !164, i64 8, i64 4, !140, i64 8, i64 4, !140}
!551 = !{!552}
!552 = distinct !{!552, !553, !"_ZNK10btSoftBody7ImpulsemlEf: %agg.result"}
!553 = distinct !{!553, !"_ZNK10btSoftBody7ImpulsemlEf"}
!554 = !{!555}
!555 = distinct !{!555, !556, !"_ZNK10btSoftBody7ImpulsemlEf: %agg.result"}
!556 = distinct !{!556, !"_ZNK10btSoftBody7ImpulsemlEf"}
!557 = !{!558}
!558 = distinct !{!558, !559, !"_ZNK10btSoftBody7ImpulsengEv: %agg.result"}
!559 = distinct !{!559, !"_ZNK10btSoftBody7ImpulsengEv"}
!560 = !{!43, !48, i64 360}
!561 = !{!562, !13, i64 32}
!562 = !{!"_ZTSN10btSoftBody8RContactE", !492, i64 0, !13, i64 32, !46, i64 40, !47, i64 88, !48, i64 104, !48, i64 108, !48, i64 112}
!563 = !{!562, !48, i64 112}
!564 = !{!565, !13, i64 0}
!565 = !{!"_ZTSN10btSoftBody8SContactE", !13, i64 0, !13, i64 8, !47, i64 16, !47, i64 32, !48, i64 48, !48, i64 52, !12, i64 56}
!566 = !{!565, !13, i64 8}
!567 = !{!565, !48, i64 48}
!568 = !{!569, !13, i64 8}
!569 = !{!"_ZTSN15btSoftColliders13CollideSDF_RSE", !417, i64 0, !13, i64 8, !13, i64 16, !13, i64 24, !48, i64 32, !48, i64 36}
!570 = !{!569, !13, i64 16}
!571 = !{!569, !13, i64 24}
!572 = !{!569, !48, i64 32}
!573 = !{!569, !48, i64 36}
!574 = !{!575, !48, i64 8}
!575 = !{!"_ZTSN15btSoftColliders11ClusterBaseE", !417, i64 0, !48, i64 8, !48, i64 12, !48, i64 16, !48, i64 20, !48, i64 24}
!576 = !{!577, !13, i64 32}
!577 = !{!"_ZTSN15btSoftColliders12CollideCL_RSE", !575, i64 0, !13, i64 32, !13, i64 40}
!578 = !{!577, !13, i64 40}
!579 = !{!575, !48, i64 12}
!580 = !{!575, !48, i64 16}
!581 = !{!44, !48, i64 236}
!582 = !{!575, !48, i64 20}
!583 = !{!43, !13, i64 1272}
!584 = !{i64 0, i64 12, !164, i64 12, i64 16, !164}
!585 = distinct !{!585, !188, !189}
!586 = distinct !{!586, !161}
!587 = distinct !{!587, !188}
!588 = distinct !{!588, !188, !189}
!589 = distinct !{!589, !161}
!590 = distinct !{!590, !188}
!591 = !{!592, !48, i64 24}
!592 = !{!"_ZTSN15btSoftColliders12CollideVF_SSE", !417, i64 0, !12, i64 8, !48, i64 24}
!593 = !{!43, !13, i64 1208}
!594 = !{i64 0, i64 8, !219, i64 8, i64 8, !219}
!595 = !{i64 0, i64 8, !219}
!596 = distinct !{!596, !161}
!597 = !{!43, !48, i64 340}
!598 = !{!562, !48, i64 104}
!599 = !{!562, !48, i64 108}
!600 = !{!44, !11, i64 216}
!601 = !{!602, !13, i64 64}
!602 = !{!"_ZTS27btSoftClusterCollisionShape", !603, i64 0, !13, i64 64}
!603 = !{!"_ZTS21btConvexInternalShape", !604, i64 0, !47, i64 24, !47, i64 40, !48, i64 56, !48, i64 60}
!604 = !{!"_ZTS13btConvexShape", !153, i64 0}
!605 = !{!603, !48, i64 56}
!606 = distinct !{!606, !161}
!607 = !{!43, !48, i64 368}
!608 = !{!43, !48, i64 364}
!609 = !{!610, !48, i64 52}
!610 = !{!"_ZTSN15btGjkEpaSolver28sResultsE", !611, i64 0, !12, i64 4, !47, i64 36, !48, i64 52}
!611 = !{!"_ZTSN15btGjkEpaSolver28sResults7eStatusE", !12, i64 0}
!612 = !{!545, !48, i64 240}
!613 = distinct !{!613, !161}
!614 = !{!43, !48, i64 384}
!615 = !{!43, !48, i64 356}
!616 = !{i64 0, i64 8, !219, i64 8, i64 8, !219, i64 16, i64 16, !164, i64 32, i64 16, !164, i64 48, i64 4, !137, i64 52, i64 4, !137, i64 56, i64 8, !164}
!617 = !{i64 0, i64 8, !219, i64 8, i64 16, !164, i64 24, i64 16, !164, i64 40, i64 4, !137, i64 44, i64 4, !137, i64 48, i64 8, !164}
!618 = !{i64 0, i64 16, !164, i64 16, i64 16, !164, i64 32, i64 4, !137, i64 36, i64 4, !137, i64 40, i64 8, !164}
!619 = !{i64 0, i64 8, !164, i64 8, i64 16, !164, i64 24, i64 4, !137, i64 28, i64 4, !137, i64 32, i64 8, !164}
!620 = !{i64 0, i64 16, !164, i64 16, i64 4, !137, i64 20, i64 4, !137, i64 24, i64 8, !164}
!621 = !{i64 0, i64 8, !164, i64 8, i64 4, !137, i64 12, i64 4, !137, i64 16, i64 8, !164}
!622 = !{i64 0, i64 4, !137, i64 4, i64 4, !137, i64 8, i64 8, !164}
!623 = !{i64 0, i64 4, !137, i64 4, i64 8, !164}
!624 = distinct !{!624, !188, !189}
!625 = distinct !{!625, !161}
!626 = distinct !{!626, !188}
!627 = distinct !{!627, !188, !189}
!628 = distinct !{!628, !161}
!629 = distinct !{!629, !188}
!630 = !{!169, !48, i64 32}
