; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/Bullet/btSoftBody.cpp'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/Bullet/btSoftBody.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.btVector3 = type { [4 x float] }
%class.btTransform = type { %class.btMatrix3x3, %class.btVector3 }
%class.btMatrix3x3 = type { [3 x %class.btVector3] }
%"struct.btSoftBody::Node" = type <{ %"struct.btSoftBody::Feature", %class.btVector3, %class.btVector3, %class.btVector3, %class.btVector3, %class.btVector3, float, float, ptr, i8, [7 x i8] }>
%"struct.btSoftBody::Feature" = type { %"struct.btSoftBody::Element", ptr }
%"struct.btSoftBody::Element" = type { ptr }
%"struct.btSoftBody::Material" = type { %"struct.btSoftBody::Element", float, float, float, i32 }
%"struct.btSoftBody::Note" = type { %"struct.btSoftBody::Element", ptr, %class.btVector3, i32, [4 x ptr], [4 x float] }
%"struct.btSoftBody::Link" = type <{ %"struct.btSoftBody::Feature", [2 x ptr], float, i8, [3 x i8], float, float, float, %class.btVector3, [4 x i8] }>
%"struct.btSoftBody::Face" = type { %"struct.btSoftBody::Feature", [3 x ptr], %class.btVector3, float, ptr }
%"struct.btSoftBody::Tetra" = type { %"struct.btSoftBody::Feature", [4 x ptr], float, ptr, [4 x %class.btVector3], float, float }
%struct.btDbvtAabbMm = type { %class.btVector3, %class.btVector3 }
%class.btSoftBody = type { %class.btCollisionObject, %class.btAlignedObjectArray, %"struct.btSoftBody::Config", %"struct.btSoftBody::SolverState", [4 x i8], %"struct.btSoftBody::Pose", ptr, ptr, %class.btAlignedObjectArray.20, %class.btAlignedObjectArray.24, %class.btAlignedObjectArray.28, %class.btAlignedObjectArray.32, %class.btAlignedObjectArray.36, %class.btAlignedObjectArray.40, %class.btAlignedObjectArray.48, %class.btAlignedObjectArray.52, %class.btAlignedObjectArray.56, %class.btAlignedObjectArray.64, float, [2 x %class.btVector3], i8, %struct.btDbvt, %struct.btDbvt, %struct.btDbvt, %class.btAlignedObjectArray.72, %class.btAlignedObjectArray.76, %class.btTransform, %class.btAlignedObjectArray.80 }
%class.btCollisionObject = type { ptr, %class.btTransform, %class.btTransform, %class.btVector3, %class.btVector3, %class.btVector3, i8, float, ptr, ptr, ptr, i32, i32, i32, i32, float, float, float, ptr, i32, float, float, float, i8, [7 x i8] }
%class.btAlignedObjectArray = type <{ %class.btAlignedAllocator, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator = type { i8 }
%"struct.btSoftBody::Config" = type { i32, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, float, i32, i32, i32, i32, i32, %class.btAlignedObjectArray.0, %class.btAlignedObjectArray.4, %class.btAlignedObjectArray.4 }
%class.btAlignedObjectArray.0 = type <{ %class.btAlignedAllocator.1, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.1 = type { i8 }
%class.btAlignedObjectArray.4 = type <{ %class.btAlignedAllocator.5, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.5 = type { i8 }
%"struct.btSoftBody::SolverState" = type { float, float, float, float, float }
%"struct.btSoftBody::Pose" = type { i8, i8, float, %class.btAlignedObjectArray.8, %class.btAlignedObjectArray.12, %class.btVector3, %class.btMatrix3x3, %class.btMatrix3x3, %class.btMatrix3x3 }
%class.btAlignedObjectArray.8 = type <{ %class.btAlignedAllocator.9, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.9 = type { i8 }
%class.btAlignedObjectArray.12 = type <{ %class.btAlignedAllocator.13, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.13 = type { i8 }
%class.btAlignedObjectArray.20 = type <{ %class.btAlignedAllocator.21, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.21 = type { i8 }
%class.btAlignedObjectArray.24 = type <{ %class.btAlignedAllocator.25, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.25 = type { i8 }
%class.btAlignedObjectArray.28 = type <{ %class.btAlignedAllocator.29, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.29 = type { i8 }
%class.btAlignedObjectArray.32 = type <{ %class.btAlignedAllocator.33, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.33 = type { i8 }
%class.btAlignedObjectArray.36 = type <{ %class.btAlignedAllocator.37, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.37 = type { i8 }
%class.btAlignedObjectArray.40 = type <{ %class.btAlignedAllocator.41, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.41 = type { i8 }
%class.btAlignedObjectArray.48 = type <{ %class.btAlignedAllocator.49, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.49 = type { i8 }
%class.btAlignedObjectArray.52 = type <{ %class.btAlignedAllocator.53, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.53 = type { i8 }
%class.btAlignedObjectArray.56 = type <{ %class.btAlignedAllocator.57, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.57 = type { i8 }
%class.btAlignedObjectArray.64 = type <{ %class.btAlignedAllocator.65, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.65 = type { i8 }
%struct.btDbvt = type { ptr, ptr, i32, i32, i32, [4 x i8], %class.btAlignedObjectArray.68 }
%class.btAlignedObjectArray.68 = type <{ %class.btAlignedAllocator.69, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.69 = type { i8 }
%class.btAlignedObjectArray.72 = type <{ %class.btAlignedAllocator.73, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.73 = type { i8 }
%class.btAlignedObjectArray.76 = type <{ %class.btAlignedAllocator.77, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.77 = type { i8 }
%class.btAlignedObjectArray.80 = type <{ %class.btAlignedAllocator.81, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.81 = type { i8 }
%class.btCollisionShape = type { ptr, i32, ptr }
%class.btSoftBodyCollisionShape = type { %class.btConcaveShape.base, ptr }
%class.btConcaveShape.base = type <{ %class.btCollisionShape, float }>
%class.btConcaveShape = type <{ %class.btCollisionShape, float, [4 x i8] }>
%struct.btSoftBodyWorldInfo = type { float, float, float, %class.btVector3, ptr, ptr, %class.btVector3, %struct.btSparseSdf }
%struct.btSparseSdf = type { %class.btAlignedObjectArray.16, float, i32, i32, i32, i32, [4 x i8] }
%class.btAlignedObjectArray.16 = type <{ %class.btAlignedAllocator.17, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.17 = type { i8 }
%"struct.btSoftBody::Cluster" = type { %class.btAlignedObjectArray.59, %class.btAlignedObjectArray.12, %class.btAlignedObjectArray.8, %class.btTransform, float, float, %class.btMatrix3x3, %class.btMatrix3x3, %class.btVector3, [2 x %class.btVector3], [2 x %class.btVector3], i32, i32, %class.btVector3, %class.btVector3, ptr, float, float, float, float, float, float, i8, i8, i32 }
%class.btAlignedObjectArray.59 = type <{ %class.btAlignedAllocator.60, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.60 = type { i8 }
%class.btVector4 = type { %class.btVector3 }
%struct.btDbvtNode = type { %struct.btDbvtAabbMm, ptr, %union.anon }
%union.anon = type { [2 x ptr] }
%"struct.btSoftBody::Anchor" = type <{ ptr, %class.btVector3, ptr, %class.btMatrix3x3, %class.btVector3, float, [4 x i8] }>
%"struct.btSoftBody::Body" = type { ptr, ptr, ptr }
%"struct.btSoftBody::Joint" = type <{ ptr, [2 x %"struct.btSoftBody::Body"], [2 x %class.btVector3], float, float, float, %class.btVector3, %class.btVector3, %class.btMatrix3x3, i8, [3 x i8] }>
%"struct.btSoftBody::LJoint::Specs" = type { %"struct.btSoftBody::Joint::Specs", %class.btVector3 }
%"struct.btSoftBody::Joint::Specs" = type { float, float, float }
%"struct.btSoftBody::AJoint::Specs" = type { %"struct.btSoftBody::Joint::Specs", %class.btVector3, ptr }
%"struct.btSoftBody::AJoint" = type { %"struct.btSoftBody::Joint.base", [2 x %class.btVector3], ptr }
%"struct.btSoftBody::Joint.base" = type <{ ptr, [2 x %"struct.btSoftBody::Body"], [2 x %class.btVector3], float, float, float, %class.btVector3, %class.btVector3, %class.btMatrix3x3, i8 }>
%"struct.btSoftBody::Impulse" = type <{ %class.btVector3, %class.btVector3, i8, [3 x i8] }>
%class.btAlignedObjectArray.84 = type <{ %class.btAlignedAllocator.85, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.85 = type { i8 }
%struct.NodeLinks = type { %class.btAlignedObjectArray.80 }
%struct.btSymMatrix = type { %class.btAlignedObjectArray.80, i32, [4 x i8] }
%"struct.btSoftBody::sRayCast" = type { ptr, i32, i32, float }
%"struct.btSoftBody::RayFromToCaster" = type <{ %"struct.btDbvt::ICollide", %class.btVector3, %class.btVector3, %class.btVector3, float, [4 x i8], ptr, i32, [4 x i8] }>
%"struct.btDbvt::ICollide" = type { ptr }
%"struct.btSoftBody::RContact" = type <{ %"struct.btSoftBody::sCti", ptr, %class.btMatrix3x3, %class.btVector3, float, float, float, [4 x i8] }>
%"struct.btSoftBody::sCti" = type <{ ptr, %class.btVector3, float, [4 x i8] }>
%"struct.btSoftBody::SContact" = type { ptr, ptr, %class.btVector3, %class.btVector3, float, float, [2 x float] }
%class.btRigidBody = type <{ %class.btCollisionObject, %class.btMatrix3x3, %class.btVector3, %class.btVector3, float, %class.btVector3, %class.btVector3, %class.btVector3, %class.btVector3, %class.btVector3, %class.btVector3, %class.btVector3, float, float, i8, [3 x i8], float, float, float, float, float, float, ptr, %class.btAlignedObjectArray.43, i32, i32, i32, [4 x i8] }>
%class.btAlignedObjectArray.43 = type <{ %class.btAlignedAllocator.44, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.44 = type { i8 }
%class.btAlignedObjectArray.88 = type <{ %class.btAlignedAllocator.89, [3 x i8], i32, i32, [4 x i8], ptr, i8, [7 x i8] }>
%class.btAlignedAllocator.89 = type { i8 }
%"struct.btSparseSdf<3>::Cell" = type { [4 x [4 x [4 x float]]], [3 x i32], i32, i32, ptr, ptr }
%"struct.btSoftBody::LJoint" = type { %"struct.btSoftBody::Joint.base", [2 x %class.btVector3] }
%"struct.btSoftBody::CJoint" = type { %"struct.btSoftBody::Joint.base", i32, i32, [2 x %class.btVector3], %class.btVector3, float, [4 x i8] }
%"struct.btSoftColliders::CollideSDF_RS" = type { %"struct.btDbvt::ICollide", ptr, ptr, ptr, float, float }
%"struct.btSoftColliders::CollideCL_RS" = type { %"struct.btSoftColliders::ClusterBase.base", ptr, ptr }
%"struct.btSoftColliders::ClusterBase.base" = type <{ %"struct.btDbvt::ICollide", float, float, float, float, float }>
%"struct.btSoftColliders::ClusterBase" = type <{ %"struct.btDbvt::ICollide", float, float, float, float, float, [4 x i8] }>
%"struct.btSoftColliders::CollideCL_SS" = type { %"struct.btSoftColliders::ClusterBase.base", [2 x ptr] }
%"struct.btSoftColliders::CollideVF_SS" = type <{ %"struct.btDbvt::ICollide", [2 x ptr], float, [4 x i8] }>
%"struct.btDbvt::sStkNN" = type { ptr, ptr }
%class.btSoftClusterCollisionShape = type { %class.btConvexInternalShape, ptr }
%class.btConvexInternalShape = type { %class.btConvexShape, %class.btVector3, %class.btVector3, float, float }
%class.btConvexShape = type { %class.btCollisionShape }
%"struct.btGjkEpaSolver2::sResults" = type { i32, [2 x %class.btVector3], %class.btVector3, float }

$_ZN20btAlignedObjectArrayIiED2Ev = comdat any

$__clang_call_terminate = comdat any

$_ZN20btAlignedObjectArrayIbED2Ev = comdat any

$_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEED2Ev = comdat any

$_ZN10btSoftBody4PoseD2Ev = comdat any

$_ZN10btSoftBody6ConfigD2Ev = comdat any

$_ZN20btAlignedObjectArrayIP17btCollisionObjectED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE9push_backERKS1_ = comdat any

$_ZN20btAlignedObjectArrayIfED2Ev = comdat any

$_ZN20btAlignedObjectArrayI9NodeLinksE6resizeEiRKS0_ = comdat any

$_ZN20btAlignedObjectArrayI9NodeLinksED2Ev = comdat any

$_ZN10btSoftBody7ClusterD2Ev = comdat any

$_ZN20btAlignedObjectArrayI9btVector3ED2Ev = comdat any

$_ZN11btSymMatrixIiEC2EiRKi = comdat any

$_ZN10btSoftBody15RayFromToCaster17rayFromToTriangleERK9btVector3S3_S3_S3_S3_S3_f = comdat any

$_ZN6btDbvt7rayTestEPK10btDbvtNodeRK9btVector3S5_RNS_8ICollideE = comdat any

$_ZN11btSparseSdfILi3EE8EvaluateERK9btVector3P16btCollisionShapeRS1_f = comdat any

$_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_ = comdat any

$_ZNK10btSoftBody4Body14applyDAImpulseERK9btVector3 = comdat any

$_ZN11btRigidBody12applyImpulseERK9btVector3S2_ = comdat any

$_ZN6btDbvt9collideTVEPK10btDbvtNodeRK12btDbvtAabbMmRNS_8ICollideE = comdat any

$_ZN6btDbvt9collideTTEPK10btDbvtNodeS2_RNS_8ICollideE = comdat any

$_ZN10btSoftBody5JointD0Ev = comdat any

$_ZN10btSoftBody5JointD2Ev = comdat any

$_ZN10btSoftBody6CJointD0Ev = comdat any

$_ZNK10btSoftBody6CJoint4TypeEv = comdat any

$_ZN17btCollisionObject24checkCollideWithOverrideEPS_ = comdat any

$_ZN10btSoftBody17setCollisionShapeEP16btCollisionShape = comdat any

$_ZNK10btSoftBody7getAabbER9btVector3S1_ = comdat any

$_ZN10btSoftBody6LJointD0Ev = comdat any

$_ZNK10btSoftBody6LJoint4TypeEv = comdat any

$_ZN10btSoftBody6AJointD0Ev = comdat any

$_ZNK10btSoftBody6AJoint4TypeEv = comdat any

$_ZN10btSoftBody15RayFromToCasterD0Ev = comdat any

$_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodeS3_ = comdat any

$_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodef = comdat any

$_ZN6btDbvt8ICollide7DescentEPK10btDbvtNode = comdat any

$_ZN6btDbvt8ICollide9AllLeavesEPK10btDbvtNode = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EED2Ev = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EED2Ev = comdat any

$_ZN24btSoftBodyCollisionShapeD0Ev = comdat any

$_ZNK24btSoftBodyCollisionShape7getAabbERK11btTransformR9btVector3S4_ = comdat any

$_ZN24btSoftBodyCollisionShape15setLocalScalingERK9btVector3 = comdat any

$_ZNK24btSoftBodyCollisionShape15getLocalScalingEv = comdat any

$_ZNK24btSoftBodyCollisionShape21calculateLocalInertiaEfR9btVector3 = comdat any

$_ZNK24btSoftBodyCollisionShape7getNameEv = comdat any

$_ZN14btConcaveShape9setMarginEf = comdat any

$_ZNK14btConcaveShape9getMarginEv = comdat any

$_ZNK24btSoftBodyCollisionShape19processAllTrianglesEP18btTriangleCallbackRK9btVector3S4_ = comdat any

$_ZN11btMatrix3x311getIdentityEv = comdat any

$_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEED2Ev = comdat any

$_ZN6btDbvt8ICollideD2Ev = comdat any

$_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNode = comdat any

$_ZNK10btSoftBody4Body13applyVImpulseERK9btVector3S3_ = comdat any

$_ZNK10btSoftBody4Body14applyVAImpulseERK9btVector3 = comdat any

$_ZN15btSoftColliders13CollideSDF_RSD0Ev = comdat any

$_ZN15btSoftColliders13CollideSDF_RS7ProcessEPK10btDbvtNode = comdat any

$_ZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeE = comdat any

$_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE9push_backERKS1_ = comdat any

$_ZN15btSoftColliders12CollideCL_RSD0Ev = comdat any

$_ZN15btSoftColliders12CollideCL_RS7ProcessEPK10btDbvtNode = comdat any

$_ZN15btSoftColliders11ClusterBase12SolveContactERKN15btGjkEpaSolver28sResultsEN10btSoftBody4BodyES6_RNS5_6CJointE = comdat any

$_ZN27btSoftClusterCollisionShapeD0Ev = comdat any

$_ZNK27btSoftClusterCollisionShape7getAabbERK11btTransformR9btVector3S4_ = comdat any

$_ZNK21btConvexInternalShape15getLocalScalingEv = comdat any

$_ZNK27btSoftClusterCollisionShape21calculateLocalInertiaEfR9btVector3 = comdat any

$_ZNK27btSoftClusterCollisionShape7getNameEv = comdat any

$_ZN27btSoftClusterCollisionShape9setMarginEf = comdat any

$_ZNK27btSoftClusterCollisionShape9getMarginEv = comdat any

$_ZNK27btSoftClusterCollisionShape24localGetSupportingVertexERK9btVector3 = comdat any

$_ZNK27btSoftClusterCollisionShape37localGetSupportingVertexWithoutMarginERK9btVector3 = comdat any

$_ZNK27btSoftClusterCollisionShape49batchedUnitVectorGetSupportingVertexWithoutMarginEPK9btVector3PS0_i = comdat any

$_ZNK21btConvexInternalShape36getNumPreferredPenetrationDirectionsEv = comdat any

$_ZNK21btConvexInternalShape32getPreferredPenetrationDirectionEiR9btVector3 = comdat any

$_ZNK27btSoftClusterCollisionShape12getShapeTypeEv = comdat any

$_ZN15btSoftColliders12CollideCL_SSD0Ev = comdat any

$_ZN15btSoftColliders12CollideCL_SS7ProcessEPK10btDbvtNodeS3_ = comdat any

$_ZN15btSoftColliders12CollideVF_SSD0Ev = comdat any

$_ZN15btSoftColliders12CollideVF_SS7ProcessEPK10btDbvtNodeS3_ = comdat any

$_ZN20btAlignedObjectArrayI9NodeLinksE7reserveEi = comdat any

$_ZN11btSparseSdfILi3EE9BuildCellERNS0_4CellE = comdat any

$_ZTSN6btDbvt8ICollideE = comdat any

$_ZTIN6btDbvt8ICollideE = comdat any

$_ZTV24btSoftBodyCollisionShape = comdat any

$_ZTS24btSoftBodyCollisionShape = comdat any

$_ZTI24btSoftBodyCollisionShape = comdat any

$_ZZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy = comdat any

$_ZGVZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy = comdat any

$_ZZNK10btSoftBody4Body5xformEvE8identity = comdat any

$_ZGVZNK10btSoftBody4Body5xformEvE8identity = comdat any

$_ZZN11btTransform11getIdentityEvE17identityTransform = comdat any

$_ZGVZN11btTransform11getIdentityEvE17identityTransform = comdat any

$_ZZN11btMatrix3x311getIdentityEvE14identityMatrix = comdat any

$_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix = comdat any

$_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi = comdat any

$_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi = comdat any

$_ZTVN15btSoftColliders13CollideSDF_RSE = comdat any

$_ZTSN15btSoftColliders13CollideSDF_RSE = comdat any

$_ZTIN15btSoftColliders13CollideSDF_RSE = comdat any

$_ZZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic = comdat any

$_ZGVZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic = comdat any

$_ZTVN15btSoftColliders12CollideCL_RSE = comdat any

$_ZTSN15btSoftColliders12CollideCL_RSE = comdat any

$_ZTSN15btSoftColliders11ClusterBaseE = comdat any

$_ZTIN15btSoftColliders11ClusterBaseE = comdat any

$_ZTIN15btSoftColliders12CollideCL_RSE = comdat any

$_ZTV27btSoftClusterCollisionShape = comdat any

$_ZTS27btSoftClusterCollisionShape = comdat any

$_ZTI27btSoftClusterCollisionShape = comdat any

$_ZTVN15btSoftColliders12CollideCL_SSE = comdat any

$_ZTSN15btSoftColliders12CollideCL_SSE = comdat any

$_ZTIN15btSoftColliders12CollideCL_SSE = comdat any

$_ZZN15btSoftColliders12CollideCL_SS7ProcessEPK10btDbvtNodeS3_E5count = comdat any

$_ZTVN15btSoftColliders12CollideVF_SSE = comdat any

$_ZTSN15btSoftColliders12CollideVF_SSE = comdat any

$_ZTIN15btSoftColliders12CollideVF_SSE = comdat any

@_ZTV10btSoftBody = dso_local unnamed_addr constant { [7 x ptr] } { [7 x ptr] [ptr null, ptr @_ZTI10btSoftBody, ptr @_ZN17btCollisionObject24checkCollideWithOverrideEPS_, ptr @_ZN10btSoftBodyD2Ev, ptr @_ZN10btSoftBodyD0Ev, ptr @_ZN10btSoftBody17setCollisionShapeEP16btCollisionShape, ptr @_ZNK10btSoftBody7getAabbER9btVector3S1_] }, align 8
@_ZTVN10btSoftBody15RayFromToCasterE = dso_local unnamed_addr constant { [9 x ptr] } { [9 x ptr] [ptr null, ptr @_ZTIN10btSoftBody15RayFromToCasterE, ptr @_ZN6btDbvt8ICollideD2Ev, ptr @_ZN10btSoftBody15RayFromToCasterD0Ev, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodeS3_, ptr @_ZN10btSoftBody15RayFromToCaster7ProcessEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodef, ptr @_ZN6btDbvt8ICollide7DescentEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide9AllLeavesEPK10btDbvtNode] }, align 8
@.str = private unnamed_addr constant [15 x i8] c"UpdateClusters\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"ApplyClusters\00", align 1
@.str.2 = private unnamed_addr constant [21 x i8] c"SoftBody applyForces\00", align 1
@_ZTVN10btSoftBody5JointE = dso_local unnamed_addr constant { [8 x ptr] } { [8 x ptr] [ptr null, ptr @_ZTIN10btSoftBody5JointE, ptr @_ZN10btSoftBody5JointD2Ev, ptr @_ZN10btSoftBody5JointD0Ev, ptr @_ZN10btSoftBody5Joint7PrepareEfi, ptr @__cxa_pure_virtual, ptr @__cxa_pure_virtual, ptr @__cxa_pure_virtual] }, align 8
@_ZTVN10__cxxabiv117__class_type_infoE = external global ptr
@_ZTSN10btSoftBody5JointE = dso_local constant [21 x i8] c"N10btSoftBody5JointE\00", align 1
@_ZTIN10btSoftBody5JointE = dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN10btSoftBody5JointE }, align 8
@_ZTVN10btSoftBody6CJointE = dso_local unnamed_addr constant { [8 x ptr] } { [8 x ptr] [ptr null, ptr @_ZTIN10btSoftBody6CJointE, ptr @_ZN10btSoftBody5JointD2Ev, ptr @_ZN10btSoftBody6CJointD0Ev, ptr @_ZN10btSoftBody6CJoint7PrepareEfi, ptr @_ZN10btSoftBody6CJoint5SolveEff, ptr @_ZN10btSoftBody6CJoint9TerminateEf, ptr @_ZNK10btSoftBody6CJoint4TypeEv] }, align 8
@_ZTVN10__cxxabiv120__si_class_type_infoE = external global ptr
@_ZTSN10btSoftBody6CJointE = dso_local constant [22 x i8] c"N10btSoftBody6CJointE\00", align 1
@_ZTIN10btSoftBody6CJointE = dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN10btSoftBody6CJointE, ptr @_ZTIN10btSoftBody5JointE }, align 8
@_ZTS10btSoftBody = dso_local constant [13 x i8] c"10btSoftBody\00", align 1
@_ZTI17btCollisionObject = external constant ptr
@_ZTI10btSoftBody = dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTS10btSoftBody, ptr @_ZTI17btCollisionObject }, align 8
@_ZTVN10btSoftBody6LJointE = dso_local unnamed_addr constant { [8 x ptr] } { [8 x ptr] [ptr null, ptr @_ZTIN10btSoftBody6LJointE, ptr @_ZN10btSoftBody5JointD2Ev, ptr @_ZN10btSoftBody6LJointD0Ev, ptr @_ZN10btSoftBody6LJoint7PrepareEfi, ptr @_ZN10btSoftBody6LJoint5SolveEff, ptr @_ZN10btSoftBody6LJoint9TerminateEf, ptr @_ZNK10btSoftBody6LJoint4TypeEv] }, align 8
@_ZTSN10btSoftBody6LJointE = dso_local constant [22 x i8] c"N10btSoftBody6LJointE\00", align 1
@_ZTIN10btSoftBody6LJointE = dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN10btSoftBody6LJointE, ptr @_ZTIN10btSoftBody5JointE }, align 8
@_ZTVN10btSoftBody6AJointE = dso_local unnamed_addr constant { [8 x ptr] } { [8 x ptr] [ptr null, ptr @_ZTIN10btSoftBody6AJointE, ptr @_ZN10btSoftBody5JointD2Ev, ptr @_ZN10btSoftBody6AJointD0Ev, ptr @_ZN10btSoftBody6AJoint7PrepareEfi, ptr @_ZN10btSoftBody6AJoint5SolveEff, ptr @_ZN10btSoftBody6AJoint9TerminateEf, ptr @_ZNK10btSoftBody6AJoint4TypeEv] }, align 8
@_ZTSN10btSoftBody6AJointE = dso_local constant [22 x i8] c"N10btSoftBody6AJointE\00", align 1
@_ZTIN10btSoftBody6AJointE = dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN10btSoftBody6AJointE, ptr @_ZTIN10btSoftBody5JointE }, align 8
@_ZTSN10btSoftBody15RayFromToCasterE = dso_local constant [32 x i8] c"N10btSoftBody15RayFromToCasterE\00", align 1
@_ZTSN6btDbvt8ICollideE = linkonce_odr dso_local constant [19 x i8] c"N6btDbvt8ICollideE\00", comdat, align 1
@_ZTIN6btDbvt8ICollideE = linkonce_odr dso_local constant { ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv117__class_type_infoE, i64 2), ptr @_ZTSN6btDbvt8ICollideE }, comdat, align 8
@_ZTIN10btSoftBody15RayFromToCasterE = dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN10btSoftBody15RayFromToCasterE, ptr @_ZTIN6btDbvt8ICollideE }, align 8
@_ZTV24btSoftBodyCollisionShape = linkonce_odr dso_local unnamed_addr constant { [15 x ptr] } { [15 x ptr] [ptr null, ptr @_ZTI24btSoftBodyCollisionShape, ptr @_ZN14btConcaveShapeD2Ev, ptr @_ZN24btSoftBodyCollisionShapeD0Ev, ptr @_ZNK24btSoftBodyCollisionShape7getAabbERK11btTransformR9btVector3S4_, ptr @_ZNK16btCollisionShape17getBoundingSphereER9btVector3Rf, ptr @_ZNK16btCollisionShape20getAngularMotionDiscEv, ptr @_ZNK16btCollisionShape27getContactBreakingThresholdEv, ptr @_ZN24btSoftBodyCollisionShape15setLocalScalingERK9btVector3, ptr @_ZNK24btSoftBodyCollisionShape15getLocalScalingEv, ptr @_ZNK24btSoftBodyCollisionShape21calculateLocalInertiaEfR9btVector3, ptr @_ZNK24btSoftBodyCollisionShape7getNameEv, ptr @_ZN14btConcaveShape9setMarginEf, ptr @_ZNK14btConcaveShape9getMarginEv, ptr @_ZNK24btSoftBodyCollisionShape19processAllTrianglesEP18btTriangleCallbackRK9btVector3S4_] }, comdat, align 8
@_ZTS24btSoftBodyCollisionShape = linkonce_odr dso_local constant [27 x i8] c"24btSoftBodyCollisionShape\00", comdat, align 1
@_ZTI14btConcaveShape = external constant ptr
@_ZTI24btSoftBodyCollisionShape = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTS24btSoftBodyCollisionShape, ptr @_ZTI14btConcaveShape }, comdat, align 8
@_ZZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy = linkonce_odr dso_local global %class.btVector3 zeroinitializer, comdat, align 4
@_ZGVZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy = linkonce_odr dso_local global i64 0, comdat, align 8
@.str.3 = private unnamed_addr constant [9 x i8] c"SoftBody\00", align 1
@_ZZNK10btSoftBody4Body5xformEvE8identity = linkonce_odr dso_local global %class.btTransform zeroinitializer, comdat, align 4
@_ZGVZNK10btSoftBody4Body5xformEvE8identity = linkonce_odr dso_local global i64 0, comdat, align 8
@_ZZN11btTransform11getIdentityEvE17identityTransform = linkonce_odr dso_local global %class.btTransform zeroinitializer, comdat, align 4
@_ZGVZN11btTransform11getIdentityEvE17identityTransform = linkonce_odr dso_local global i64 0, comdat, align 8
@_ZZN11btMatrix3x311getIdentityEvE14identityMatrix = linkonce_odr dso_local global %class.btMatrix3x3 zeroinitializer, comdat, align 4
@_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix = linkonce_odr dso_local global i64 0, comdat, align 8
@_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi = linkonce_odr dso_local global %class.btMatrix3x3 zeroinitializer, comdat, align 4
@_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi = linkonce_odr dso_local global i64 0, comdat, align 8
@_ZTVN15btSoftColliders13CollideSDF_RSE = linkonce_odr dso_local unnamed_addr constant { [9 x ptr] } { [9 x ptr] [ptr null, ptr @_ZTIN15btSoftColliders13CollideSDF_RSE, ptr @_ZN6btDbvt8ICollideD2Ev, ptr @_ZN15btSoftColliders13CollideSDF_RSD0Ev, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodeS3_, ptr @_ZN15btSoftColliders13CollideSDF_RS7ProcessEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodef, ptr @_ZN6btDbvt8ICollide7DescentEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide9AllLeavesEPK10btDbvtNode] }, comdat, align 8
@_ZTSN15btSoftColliders13CollideSDF_RSE = linkonce_odr dso_local constant [35 x i8] c"N15btSoftColliders13CollideSDF_RSE\00", comdat, align 1
@_ZTIN15btSoftColliders13CollideSDF_RSE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN15btSoftColliders13CollideSDF_RSE, ptr @_ZTIN6btDbvt8ICollideE }, comdat, align 8
@_ZZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic = linkonce_odr dso_local global %class.btMatrix3x3 zeroinitializer, comdat, align 4
@_ZGVZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic = linkonce_odr dso_local global i64 0, comdat, align 8
@_ZTVN15btSoftColliders12CollideCL_RSE = linkonce_odr dso_local unnamed_addr constant { [9 x ptr] } { [9 x ptr] [ptr null, ptr @_ZTIN15btSoftColliders12CollideCL_RSE, ptr @_ZN6btDbvt8ICollideD2Ev, ptr @_ZN15btSoftColliders12CollideCL_RSD0Ev, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodeS3_, ptr @_ZN15btSoftColliders12CollideCL_RS7ProcessEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodef, ptr @_ZN6btDbvt8ICollide7DescentEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide9AllLeavesEPK10btDbvtNode] }, comdat, align 8
@_ZTSN15btSoftColliders12CollideCL_RSE = linkonce_odr dso_local constant [34 x i8] c"N15btSoftColliders12CollideCL_RSE\00", comdat, align 1
@_ZTSN15btSoftColliders11ClusterBaseE = linkonce_odr dso_local constant [33 x i8] c"N15btSoftColliders11ClusterBaseE\00", comdat, align 1
@_ZTIN15btSoftColliders11ClusterBaseE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN15btSoftColliders11ClusterBaseE, ptr @_ZTIN6btDbvt8ICollideE }, comdat, align 8
@_ZTIN15btSoftColliders12CollideCL_RSE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN15btSoftColliders12CollideCL_RSE, ptr @_ZTIN15btSoftColliders11ClusterBaseE }, comdat, align 8
@_ZTV27btSoftClusterCollisionShape = linkonce_odr dso_local unnamed_addr constant { [21 x ptr] } { [21 x ptr] [ptr null, ptr @_ZTI27btSoftClusterCollisionShape, ptr @_ZN13btConvexShapeD2Ev, ptr @_ZN27btSoftClusterCollisionShapeD0Ev, ptr @_ZNK27btSoftClusterCollisionShape7getAabbERK11btTransformR9btVector3S4_, ptr @_ZNK16btCollisionShape17getBoundingSphereER9btVector3Rf, ptr @_ZNK16btCollisionShape20getAngularMotionDiscEv, ptr @_ZNK16btCollisionShape27getContactBreakingThresholdEv, ptr @_ZN21btConvexInternalShape15setLocalScalingERK9btVector3, ptr @_ZNK21btConvexInternalShape15getLocalScalingEv, ptr @_ZNK27btSoftClusterCollisionShape21calculateLocalInertiaEfR9btVector3, ptr @_ZNK27btSoftClusterCollisionShape7getNameEv, ptr @_ZN27btSoftClusterCollisionShape9setMarginEf, ptr @_ZNK27btSoftClusterCollisionShape9getMarginEv, ptr @_ZNK27btSoftClusterCollisionShape24localGetSupportingVertexERK9btVector3, ptr @_ZNK27btSoftClusterCollisionShape37localGetSupportingVertexWithoutMarginERK9btVector3, ptr @_ZNK27btSoftClusterCollisionShape49batchedUnitVectorGetSupportingVertexWithoutMarginEPK9btVector3PS0_i, ptr @_ZNK21btConvexInternalShape11getAabbSlowERK11btTransformR9btVector3S4_, ptr @_ZNK21btConvexInternalShape36getNumPreferredPenetrationDirectionsEv, ptr @_ZNK21btConvexInternalShape32getPreferredPenetrationDirectionEiR9btVector3, ptr @_ZNK27btSoftClusterCollisionShape12getShapeTypeEv] }, comdat, align 8
@_ZTS27btSoftClusterCollisionShape = linkonce_odr dso_local constant [30 x i8] c"27btSoftClusterCollisionShape\00", comdat, align 1
@_ZTI21btConvexInternalShape = external constant ptr
@_ZTI27btSoftClusterCollisionShape = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTS27btSoftClusterCollisionShape, ptr @_ZTI21btConvexInternalShape }, comdat, align 8
@.str.4 = private unnamed_addr constant [12 x i8] c"SOFTCLUSTER\00", align 1
@_ZTVN15btSoftColliders12CollideCL_SSE = linkonce_odr dso_local unnamed_addr constant { [9 x ptr] } { [9 x ptr] [ptr null, ptr @_ZTIN15btSoftColliders12CollideCL_SSE, ptr @_ZN6btDbvt8ICollideD2Ev, ptr @_ZN15btSoftColliders12CollideCL_SSD0Ev, ptr @_ZN15btSoftColliders12CollideCL_SS7ProcessEPK10btDbvtNodeS3_, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodef, ptr @_ZN6btDbvt8ICollide7DescentEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide9AllLeavesEPK10btDbvtNode] }, comdat, align 8
@_ZTSN15btSoftColliders12CollideCL_SSE = linkonce_odr dso_local constant [34 x i8] c"N15btSoftColliders12CollideCL_SSE\00", comdat, align 1
@_ZTIN15btSoftColliders12CollideCL_SSE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN15btSoftColliders12CollideCL_SSE, ptr @_ZTIN15btSoftColliders11ClusterBaseE }, comdat, align 8
@_ZZN15btSoftColliders12CollideCL_SS7ProcessEPK10btDbvtNodeS3_E5count = linkonce_odr dso_local local_unnamed_addr global i32 0, comdat, align 4
@_ZTVN15btSoftColliders12CollideVF_SSE = linkonce_odr dso_local unnamed_addr constant { [9 x ptr] } { [9 x ptr] [ptr null, ptr @_ZTIN15btSoftColliders12CollideVF_SSE, ptr @_ZN6btDbvt8ICollideD2Ev, ptr @_ZN15btSoftColliders12CollideVF_SSD0Ev, ptr @_ZN15btSoftColliders12CollideVF_SS7ProcessEPK10btDbvtNodeS3_, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodef, ptr @_ZN6btDbvt8ICollide7DescentEPK10btDbvtNode, ptr @_ZN6btDbvt8ICollide9AllLeavesEPK10btDbvtNode] }, comdat, align 8
@_ZTSN15btSoftColliders12CollideVF_SSE = linkonce_odr dso_local constant [34 x i8] c"N15btSoftColliders12CollideVF_SSE\00", comdat, align 1
@_ZTIN15btSoftColliders12CollideVF_SSE = linkonce_odr dso_local constant { ptr, ptr, ptr } { ptr getelementptr inbounds (ptr, ptr @_ZTVN10__cxxabiv120__si_class_type_infoE, i64 2), ptr @_ZTSN15btSoftColliders12CollideVF_SSE, ptr @_ZTIN6btDbvt8ICollideE }, comdat, align 8
@_ZZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy = internal global %"struct.btSoftBody::Node" zeroinitializer, align 8
@_ZGVZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy = internal global i64 0, align 8
@_ZZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_E9zerodummy = internal global %"struct.btSoftBody::Material" zeroinitializer, align 8
@_ZGVZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_E9zerodummy = internal global i64 0, align 8
@_ZZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_E9zerodummy = internal global %"struct.btSoftBody::Note" zeroinitializer, align 8
@_ZGVZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_E9zerodummy = internal global i64 0, align 8
@_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy = internal global %"struct.btSoftBody::Link" zeroinitializer, align 8
@_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy = internal global i64 0, align 8
@_ZZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy = internal global %"struct.btSoftBody::Face" zeroinitializer, align 8
@_ZGVZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy = internal global i64 0, align 8
@_ZZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_E9zerodummy = internal global %"struct.btSoftBody::Tetra" zeroinitializer, align 8
@_ZGVZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_E9zerodummy = internal global i64 0, align 8
@switch.table._ZN10btSoftBody11staticSolveEi = private unnamed_addr constant [4 x ptr] [ptr @_ZN10btSoftBody12PSolve_LinksEPS_ff, ptr @_ZN10btSoftBody14PSolve_AnchorsEPS_ff, ptr @_ZN10btSoftBody16PSolve_RContactsEPS_ff, ptr @_ZN10btSoftBody16PSolve_SContactsEPS_ff], align 8

@_ZN10btSoftBodyC1EP19btSoftBodyWorldInfoiPK9btVector3PKf = dso_local unnamed_addr alias void (ptr, ptr, i32, ptr, ptr), ptr @_ZN10btSoftBodyC2EP19btSoftBodyWorldInfoiPK9btVector3PKf
@_ZN10btSoftBodyD1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN10btSoftBodyD2Ev
@_ZN10btSoftBody15RayFromToCasterC1ERK9btVector3S3_f = dso_local unnamed_addr alias void (ptr, ptr, ptr, float), ptr @_ZN10btSoftBody15RayFromToCasterC2ERK9btVector3S3_f

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBodyC2EP19btSoftBodyWorldInfoiPK9btVector3PKf(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %worldInfo, i32 noundef %node_count, ptr noundef readonly %x, ptr noundef readonly %m) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %ref.tmp143 = alloca %struct.btDbvtAabbMm, align 8
  tail call void @_ZN17btCollisionObjectC2Ev(ptr noundef nonnull align 8 dereferenceable(280) %this)
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTV10btSoftBody, i64 0, inrange i32 0, i64 2), ptr %this, align 8, !tbaa !5
  %m_ownsMemory.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 6
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !8
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 5
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !15
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 2
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !16
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !17
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 6
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !18
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 5
  store ptr null, ptr %m_data.i.i.i, align 8, !tbaa !21
  %m_size.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 2
  store i32 0, ptr %m_size.i.i.i, align 4, !tbaa !22
  %m_capacity.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 3
  store i32 0, ptr %m_capacity.i.i.i, align 8, !tbaa !23
  %m_ownsMemory.i.i7.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 6
  store i8 1, ptr %m_ownsMemory.i.i7.i, align 8, !tbaa !24
  %m_data.i.i8.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 5
  store ptr null, ptr %m_data.i.i8.i, align 8, !tbaa !27
  %m_size.i.i9.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 2
  store i32 0, ptr %m_size.i.i9.i, align 4, !tbaa !28
  %m_capacity.i.i10.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 3
  store i32 0, ptr %m_capacity.i.i10.i, align 8, !tbaa !29
  %m_ownsMemory.i.i11.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 6
  store i8 1, ptr %m_ownsMemory.i.i11.i, align 8, !tbaa !24
  %m_data.i.i12.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 5
  store ptr null, ptr %m_data.i.i12.i, align 8, !tbaa !27
  %m_size.i.i13.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 2
  store i32 0, ptr %m_size.i.i13.i, align 4, !tbaa !28
  %m_capacity.i.i14.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 3
  store i32 0, ptr %m_capacity.i.i14.i, align 8, !tbaa !29
  %m_ownsMemory.i.i.i217 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 6
  store i8 1, ptr %m_ownsMemory.i.i.i217, align 8, !tbaa !30
  %m_data.i.i.i218 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 5
  store ptr null, ptr %m_data.i.i.i218, align 8, !tbaa !33
  %m_size.i.i.i219 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 2
  store i32 0, ptr %m_size.i.i.i219, align 4, !tbaa !34
  %m_capacity.i.i.i220 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 3
  store i32 0, ptr %m_capacity.i.i.i220, align 8, !tbaa !35
  %m_ownsMemory.i.i10.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 6
  store i8 1, ptr %m_ownsMemory.i.i10.i, align 8, !tbaa !36
  %m_data.i.i11.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  store ptr null, ptr %m_data.i.i11.i, align 8, !tbaa !39
  %m_size.i.i12.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 2
  store i32 0, ptr %m_size.i.i12.i, align 4, !tbaa !40
  %m_capacity.i.i13.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 3
  store i32 0, ptr %m_capacity.i.i13.i, align 8, !tbaa !41
  %m_worldInfo = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 7
  store ptr %worldInfo, ptr %m_worldInfo, align 8, !tbaa !42
  %m_ownsMemory.i.i221 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 6
  store i8 1, ptr %m_ownsMemory.i.i221, align 8, !tbaa !82
  %m_data.i.i222 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 5
  store ptr null, ptr %m_data.i.i222, align 8, !tbaa !83
  %m_size.i.i223 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 2
  store i32 0, ptr %m_size.i.i223, align 4, !tbaa !84
  %m_capacity.i.i224 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 3
  store i32 0, ptr %m_capacity.i.i224, align 8, !tbaa !85
  %m_ownsMemory.i.i225 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 6
  store i8 1, ptr %m_ownsMemory.i.i225, align 8, !tbaa !86
  %m_data.i.i226 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  store ptr null, ptr %m_data.i.i226, align 8, !tbaa !87
  %m_size.i.i227 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  store i32 0, ptr %m_size.i.i227, align 4, !tbaa !88
  %m_capacity.i.i228 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 3
  store i32 0, ptr %m_capacity.i.i228, align 8, !tbaa !89
  %m_ownsMemory.i.i229 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 6
  store i8 1, ptr %m_ownsMemory.i.i229, align 8, !tbaa !90
  %m_data.i.i230 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  store ptr null, ptr %m_data.i.i230, align 8, !tbaa !91
  %m_size.i.i231 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  store i32 0, ptr %m_size.i.i231, align 4, !tbaa !92
  %m_capacity.i.i232 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 3
  store i32 0, ptr %m_capacity.i.i232, align 8, !tbaa !93
  %m_ownsMemory.i.i233 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 6
  store i8 1, ptr %m_ownsMemory.i.i233, align 8, !tbaa !94
  %m_data.i.i234 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  store ptr null, ptr %m_data.i.i234, align 8, !tbaa !95
  %m_size.i.i235 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  store i32 0, ptr %m_size.i.i235, align 4, !tbaa !96
  %m_capacity.i.i236 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 3
  store i32 0, ptr %m_capacity.i.i236, align 8, !tbaa !97
  %m_ownsMemory.i.i237 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 6
  store i8 1, ptr %m_ownsMemory.i.i237, align 8, !tbaa !98
  %m_data.i.i238 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  store ptr null, ptr %m_data.i.i238, align 8, !tbaa !99
  %m_size.i.i239 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 2
  store i32 0, ptr %m_size.i.i239, align 4, !tbaa !100
  %m_capacity.i.i240 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 3
  store i32 0, ptr %m_capacity.i.i240, align 8, !tbaa !101
  %m_ownsMemory.i.i241 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 6
  store i8 1, ptr %m_ownsMemory.i.i241, align 8, !tbaa !102
  %m_data.i.i242 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 5
  store ptr null, ptr %m_data.i.i242, align 8, !tbaa !103
  %m_size.i.i243 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 2
  store i32 0, ptr %m_size.i.i243, align 4, !tbaa !104
  %m_capacity.i.i244 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 3
  store i32 0, ptr %m_capacity.i.i244, align 8, !tbaa !105
  %m_ownsMemory.i.i245 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 6
  store i8 1, ptr %m_ownsMemory.i.i245, align 8, !tbaa !106
  %m_data.i.i246 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 5
  store ptr null, ptr %m_data.i.i246, align 8, !tbaa !107
  %m_size.i.i247 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 2
  store i32 0, ptr %m_size.i.i247, align 4, !tbaa !108
  %m_capacity.i.i248 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 3
  store i32 0, ptr %m_capacity.i.i248, align 8, !tbaa !109
  %m_ownsMemory.i.i249 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 6
  store i8 1, ptr %m_ownsMemory.i.i249, align 8, !tbaa !110
  %m_data.i.i250 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 5
  store ptr null, ptr %m_data.i.i250, align 8, !tbaa !111
  %m_size.i.i251 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 2
  store i32 0, ptr %m_size.i.i251, align 4, !tbaa !112
  %m_capacity.i.i252 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 3
  store i32 0, ptr %m_capacity.i.i252, align 8, !tbaa !113
  %m_ownsMemory.i.i253 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 6
  store i8 1, ptr %m_ownsMemory.i.i253, align 8, !tbaa !114
  %m_data.i.i254 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  store ptr null, ptr %m_data.i.i254, align 8, !tbaa !115
  %m_size.i.i255 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 2
  store i32 0, ptr %m_size.i.i255, align 4, !tbaa !116
  %m_capacity.i.i256 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 3
  store i32 0, ptr %m_capacity.i.i256, align 8, !tbaa !117
  %m_ownsMemory.i.i257 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 6
  store i8 1, ptr %m_ownsMemory.i.i257, align 8, !tbaa !118
  %m_data.i.i258 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  store ptr null, ptr %m_data.i.i258, align 8, !tbaa !119
  %m_size.i.i259 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 2
  store i32 0, ptr %m_size.i.i259, align 4, !tbaa !120
  %m_capacity.i.i260 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 3
  store i32 0, ptr %m_capacity.i.i260, align 8, !tbaa !121
  %m_bounds = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  %m_collisionDisabledObjects = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1
  %m_cfg = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2
  %m_pose = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5
  %m_notes = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8
  %m_nodes = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9
  %m_links = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10
  %m_faces = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11
  %m_tetras = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12
  %m_anchors = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13
  %m_rcontacts = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14
  %m_scontacts = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15
  %m_joints = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16
  %m_materials = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17
  %arrayctor.end = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  %m_ndbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  invoke void @_ZN6btDbvtC1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt)
          to label %invoke.cont28 unwind label %lpad26

invoke.cont28:                                    ; preds = %entry
  %m_fdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 22
  invoke void @_ZN6btDbvtC1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_fdbvt)
          to label %invoke.cont30 unwind label %lpad29

invoke.cont30:                                    ; preds = %invoke.cont28
  %m_cdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  invoke void @_ZN6btDbvtC1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt)
          to label %invoke.cont32 unwind label %lpad31

invoke.cont32:                                    ; preds = %invoke.cont30
  %m_clusters = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24
  %m_ownsMemory.i.i261 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 6
  store i8 1, ptr %m_ownsMemory.i.i261, align 8, !tbaa !122
  %m_data.i.i262 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  store ptr null, ptr %m_data.i.i262, align 8, !tbaa !123
  %m_size.i.i263 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  store i32 0, ptr %m_size.i.i263, align 4, !tbaa !124
  %m_capacity.i.i264 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 3
  store i32 0, ptr %m_capacity.i.i264, align 8, !tbaa !125
  %m_clusterConnectivity = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25
  %m_ownsMemory.i.i265 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 6
  store i8 1, ptr %m_ownsMemory.i.i265, align 8, !tbaa !126
  %m_data.i.i266 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 5
  store ptr null, ptr %m_data.i.i266, align 8, !tbaa !127
  %m_size.i.i267 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 2
  store i32 0, ptr %m_size.i.i267, align 4, !tbaa !128
  %m_capacity.i.i268 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 3
  store i32 0, ptr %m_capacity.i.i268, align 8, !tbaa !129
  %m_userIndexMapping = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27
  %m_ownsMemory.i.i269 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27, i32 6
  store i8 1, ptr %m_ownsMemory.i.i269, align 8, !tbaa !130
  %m_data.i.i270 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27, i32 5
  store ptr null, ptr %m_data.i.i270, align 8, !tbaa !131
  %m_size.i.i271 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27, i32 2
  store i32 0, ptr %m_size.i.i271, align 4, !tbaa !132
  %m_capacity.i.i272 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27, i32 3
  store i32 0, ptr %m_capacity.i.i272, align 8, !tbaa !133
  %m_internalType = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 19
  store i32 4, ptr %m_internalType, align 8, !tbaa !134
  store i32 0, ptr %m_cfg, align 8, !tbaa !135
  %kVCF = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 1
  store float 1.000000e+00, ptr %kVCF, align 4, !tbaa !136
  %kDP = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 2
  %kDF = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %kDP, i8 0, i64 20, i1 false)
  store <2 x float> <float 0x3FC99999A0000000, float 0.000000e+00>, ptr %kDF, align 4, !tbaa !137
  %kCHR = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 9
  store float 1.000000e+00, ptr %kCHR, align 4, !tbaa !138
  %kKHR = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 10
  store <4 x float> <float 0x3FB99999A0000000, float 1.000000e+00, float 0x3FE6666660000000, float 0x3FB99999A0000000>, ptr %kKHR, align 8, !tbaa !137
  %kSKHR_CL = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 14
  store <4 x float> <float 1.000000e+00, float 5.000000e-01, float 5.000000e-01, float 5.000000e-01>, ptr %kSKHR_CL, align 8, !tbaa !137
  %kSS_SPLT_CL = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 18
  store <2 x float> <float 5.000000e-01, float 1.000000e+00>, ptr %kSS_SPLT_CL, align 8, !tbaa !137
  %timescale = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 20
  store float 1.000000e+00, ptr %timescale, align 8, !tbaa !139
  %viterations = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 21
  store <4 x i32> <i32 0, i32 1, i32 0, i32 4>, ptr %viterations, align 4, !tbaa !140
  %collisions = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 25
  store i32 1, ptr %collisions, align 4, !tbaa !141
  store i8 0, ptr %m_pose, align 8, !tbaa !142
  %m_bframe = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 1
  store i8 0, ptr %m_bframe, align 1, !tbaa !143
  %m_volume = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 2
  store float 0.000000e+00, ptr %m_volume, align 4, !tbaa !144
  %m_com = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 5
  %m_rot = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_com, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %m_rot, align 8, !tbaa !137
  %arrayidx3.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 0, i32 0, i64 1
  %arrayidx3.i6.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 1, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i, align 4, !tbaa !137
  %arrayidx5.i7.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 2, i32 0, i64 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx5.i7.i.i, i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr %arrayidx5.i10.i.i, align 8, !tbaa !137
  %m_scl = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7
  store float 1.000000e+00, ptr %m_scl, align 8, !tbaa !137
  %arrayidx3.i.i.i273 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx3.i6.i.i274 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 1, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i273, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i274, align 4, !tbaa !137
  %arrayidx5.i7.i.i275 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i276 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 2, i32 0, i64 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx5.i7.i.i275, i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr %arrayidx5.i10.i.i276, align 8, !tbaa !137
  %m_tag = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 6
  store ptr null, ptr %m_tag, align 8, !tbaa !145
  %m_timeacc = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 18
  store float 0.000000e+00, ptr %m_timeacc, align 8, !tbaa !146
  store i8 1, ptr %arrayctor.end, align 4, !tbaa !147
  %ref.tmp80.sroa.5.0.m_bounds.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 0, i32 0, i64 2
  %arrayidx94 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1
  %ref.tmp87.sroa.5.0.arrayidx94.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1, i32 0, i64 2
  %m_worldTransform = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %m_bounds, i8 0, i64 32, i1 false)
  store float 1.000000e+00, ptr %m_worldTransform, align 8, !tbaa !137
  %arrayidx3.i.i.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, i64 1
  %arrayidx3.i6.i.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 1, i32 0, i32 0, i64 1, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i.i, align 4, !tbaa !137
  %arrayidx5.i7.i.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 1, i32 0, i32 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 1, i32 0, i32 0, i64 2, i32 0, i64 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx5.i7.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i.i, align 8, !tbaa !137
  %arrayidx7.i11.i.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 1, i32 0, i32 0, i64 2, i32 0, i64 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %arrayidx7.i11.i.i.i, i8 0, i64 20, i1 false)
  invoke void @_ZN10btSoftBody9setSolverENS_14eSolverPresets1_E(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef 0)
          to label %invoke.cont96 unwind label %lpad76

invoke.cont96:                                    ; preds = %invoke.cont32
  %call = invoke noundef ptr @_ZN10btSoftBody14appendMaterialEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
          to label %invoke.cont98 unwind label %lpad97

invoke.cont98:                                    ; preds = %invoke.cont96
  %m_kLST = getelementptr inbounds %"struct.btSoftBody::Material", ptr %call, i64 0, i32 1
  store <2 x float> <float 1.000000e+00, float 1.000000e+00>, ptr %m_kLST, align 8, !tbaa !137
  %m_kVST = getelementptr inbounds %"struct.btSoftBody::Material", ptr %call, i64 0, i32 3
  store float 1.000000e+00, ptr %m_kVST, align 8, !tbaa !148
  %m_flags = getelementptr inbounds %"struct.btSoftBody::Material", ptr %call, i64 0, i32 4
  store i32 1, ptr %m_flags, align 4, !tbaa !151
  %call100 = invoke noalias noundef nonnull dereferenceable(40) ptr @_Znwm(i64 noundef 40) #36
          to label %invoke.cont99 unwind label %lpad97

invoke.cont99:                                    ; preds = %invoke.cont98
  invoke void @_ZN14btConcaveShapeC2Ev(ptr noundef nonnull align 8 dereferenceable(28) %call100)
          to label %_ZN24btSoftBodyCollisionShapeC2EP10btSoftBody.exit unwind label %lpad101

_ZN24btSoftBodyCollisionShapeC2EP10btSoftBody.exit: ; preds = %invoke.cont99
  store ptr getelementptr inbounds ({ [15 x ptr] }, ptr @_ZTV24btSoftBodyCollisionShape, i64 0, inrange i32 0, i64 2), ptr %call100, align 8, !tbaa !5
  %m_shapeType.i = getelementptr inbounds %class.btCollisionShape, ptr %call100, i64 0, i32 1
  store i32 32, ptr %m_shapeType.i, align 8, !tbaa !152
  %m_body.i = getelementptr inbounds %class.btSoftBodyCollisionShape, ptr %call100, i64 0, i32 1
  store ptr %this, ptr %m_body.i, align 8, !tbaa !154
  %m_collisionShape = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  store ptr %call100, ptr %m_collisionShape, align 8, !tbaa !157
  %m_collisionMargin.i = getelementptr inbounds %class.btConcaveShape, ptr %call100, i64 0, i32 1
  store float 2.500000e-01, ptr %m_collisionMargin.i, align 8, !tbaa !158
  %0 = load i32, ptr %m_size.i.i227, align 4, !tbaa !88
  %cmp4.i = icmp slt i32 %0, %node_count
  br i1 %cmp4.i, label %if.then5.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE6resizeEiRKS1_.exit

if.then5.i:                                       ; preds = %_ZN24btSoftBodyCollisionShapeC2EP10btSoftBody.exit
  %1 = load i32, ptr %m_capacity.i.i228, align 8, !tbaa !89
  %cmp.i.i = icmp slt i32 %1, %node_count
  br i1 %cmp.i.i, label %if.then.i.i, label %for.body10.lr.ph.i

if.then.i.i:                                      ; preds = %if.then5.i
  %tobool.not.i.i.i = icmp eq i32 %node_count, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %node_count to i64
  %mul.i.i.i.i = mul nsw i64 %conv.i.i.i.i, 120
  %call.i.i.i.i289 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
          to label %call.i.i.i.i.noexc unwind label %lpad114

call.i.i.i.i.noexc:                               ; preds = %if.then.i.i.i
  %.pre.i = load i32, ptr %m_size.i.i227, align 4, !tbaa !88
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i: ; preds = %call.i.i.i.i.noexc, %if.then.i.i
  %2 = phi i32 [ %.pre.i, %call.i.i.i.i.noexc ], [ %0, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i289, %call.i.i.i.i.noexc ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %2, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i
  %wide.trip.count.i.i.i = zext i32 %2 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 1
  %3 = icmp eq i32 %2, 1
  br i1 %3, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967294
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.1, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %4 = load ptr, ptr %m_data.i.i226, align 8, !tbaa !87
  %arrayidx3.i.i.i287 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 %indvars.iv.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %arrayidx.i.i.i, ptr noundef nonnull align 8 dereferenceable(120) %arrayidx3.i.i.i287, i64 120, i1 false)
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %5 = load ptr, ptr %m_data.i.i226, align 8, !tbaa !87
  %arrayidx3.i.i.i287.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 %indvars.iv.next.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %arrayidx.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(120) %arrayidx3.i.i.i287.1, i64 120, i1 false)
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.unr
  %6 = load ptr, ptr %m_data.i.i226, align 8, !tbaa !87
  %arrayidx3.i.i.i287.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 %indvars.iv.i.i.i.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %arrayidx.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(120) %arrayidx3.i.i.i287.epil, i64 120, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i: ; preds = %for.body.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i
  %7 = load ptr, ptr %m_data.i.i226, align 8, !tbaa !87
  %tobool.not.i10.i.i = icmp eq ptr %7, null
  %8 = load i8, ptr %m_ownsMemory.i.i225, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %8, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %if.end.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %7)
          to label %if.end.i unwind label %lpad114

if.end.i:                                         ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i225, align 8, !tbaa !86
  store ptr %retval.0.i.i.i, ptr %m_data.i.i226, align 8, !tbaa !87
  store i32 %node_count, ptr %m_capacity.i.i228, align 8, !tbaa !89
  br label %for.body10.lr.ph.i

for.body10.lr.ph.i:                               ; preds = %if.end.i, %if.then5.i
  %9 = sext i32 %0 to i64
  %wide.trip.count.i = sext i32 %node_count to i64
  %10 = sub nsw i64 %wide.trip.count.i, %9
  %11 = xor i64 %9, -1
  %12 = add nsw i64 %11, %wide.trip.count.i
  %xtraiter319 = and i64 %10, 3
  %lcmp.mod320.not = icmp eq i64 %xtraiter319, 0
  br i1 %lcmp.mod320.not, label %for.body10.i.prol.loopexit, label %for.body10.i.prol

for.body10.i.prol:                                ; preds = %for.body10.lr.ph.i, %for.body10.i.prol
  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %for.body10.i.prol ], [ %9, %for.body10.lr.ph.i ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body10.i.prol ], [ 0, %for.body10.lr.ph.i ]
  %13 = load ptr, ptr %m_data.i.i226, align 8, !tbaa !87
  %arrayidx13.i.prol = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 %indvars.iv.i.prol
  store ptr null, ptr %arrayidx13.i.prol, align 8
  %indvars.iv.next.i.prol = add nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter319
  br i1 %prol.iter.cmp.not, label %for.body10.i.prol.loopexit, label %for.body10.i.prol, !llvm.loop !160

for.body10.i.prol.loopexit:                       ; preds = %for.body10.i.prol, %for.body10.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ %9, %for.body10.lr.ph.i ], [ %indvars.iv.next.i.prol, %for.body10.i.prol ]
  %14 = icmp ult i64 %12, 3
  br i1 %14, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE6resizeEiRKS1_.exit, label %for.body10.i

for.body10.i:                                     ; preds = %for.body10.i.prol.loopexit, %for.body10.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body10.i ], [ %indvars.iv.i.unr, %for.body10.i.prol.loopexit ]
  %15 = load ptr, ptr %m_data.i.i226, align 8, !tbaa !87
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %15, i64 %indvars.iv.i
  store ptr null, ptr %arrayidx13.i, align 8
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %16 = load ptr, ptr %m_data.i.i226, align 8, !tbaa !87
  %arrayidx13.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %16, i64 %indvars.iv.next.i
  store ptr null, ptr %arrayidx13.i.1, align 8
  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, 2
  %17 = load ptr, ptr %m_data.i.i226, align 8, !tbaa !87
  %arrayidx13.i.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %17, i64 %indvars.iv.next.i.1
  store ptr null, ptr %arrayidx13.i.2, align 8
  %indvars.iv.next.i.2 = add nsw i64 %indvars.iv.i, 3
  %18 = load ptr, ptr %m_data.i.i226, align 8, !tbaa !87
  %arrayidx13.i.3 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %indvars.iv.next.i.2
  store ptr null, ptr %arrayidx13.i.3, align 8
  %indvars.iv.next.i.3 = add nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, %wide.trip.count.i
  br i1 %exitcond.not.i.3, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE6resizeEiRKS1_.exit, label %for.body10.i

_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE6resizeEiRKS1_.exit: ; preds = %for.body10.i.prol.loopexit, %for.body10.i, %_ZN24btSoftBodyCollisionShapeC2EP10btSoftBody.exit
  store i32 %node_count, ptr %m_size.i.i227, align 4, !tbaa !88
  %cmp313 = icmp sgt i32 %node_count, 0
  br i1 %cmp313, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE6resizeEiRKS1_.exit
  %ref.tmp.sroa.4.0.mi.sroa_idx.i.i = getelementptr inbounds i8, ptr %ref.tmp143, i64 8
  %mx.i.i297 = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp143, i64 0, i32 1
  %ref.tmp1.sroa.4.0.mx.sroa_idx.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp143, i64 0, i32 1, i32 0, i64 2
  %wide.trip.count = zext i32 %node_count to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %invoke.cont147, %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE6resizeEiRKS1_.exit
  %19 = load ptr, ptr %m_ndbvt, align 8, !tbaa !162
  %tobool.not.i = icmp eq ptr %19, null
  br i1 %tobool.not.i, label %if.else.i290, label %if.then.i

if.then.i:                                        ; preds = %for.cond.cleanup
  %20 = load ptr, ptr %m_collisionShape, align 8, !tbaa !157
  %vtable.i = load ptr, ptr %20, align 8, !tbaa !5
  %vfn.i = getelementptr inbounds ptr, ptr %vtable.i, i64 11
  %21 = load ptr, ptr %vfn.i, align 8
  %call9.i291 = invoke noundef float %21(ptr noundef nonnull align 8 dereferenceable(24) %20)
          to label %call9.i.noexc unwind label %lpad105

call9.i.noexc:                                    ; preds = %if.then.i
  %mx.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %19, i64 0, i32 1
  %22 = load <2 x float>, ptr %19, align 4, !tbaa !137
  %23 = insertelement <2 x float> poison, float %call9.i291, i64 0
  %24 = shufflevector <2 x float> %23, <2 x float> poison, <2 x i32> zeroinitializer
  %25 = fsub <2 x float> %22, %24
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %19, i64 0, i64 2
  %26 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %26, %call9.i291
  %retval.sroa.3.12.vec.insert.i45.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i, i64 0
  store <2 x float> %25, ptr %m_bounds, align 4, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i45.i, ptr %ref.tmp80.sroa.5.0.m_bounds.sroa_idx, align 4, !tbaa.struct !165
  %27 = load <2 x float>, ptr %mx.i.i, align 4, !tbaa !137
  %28 = fadd <2 x float> %24, %27
  %arrayidx11.i50.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %19, i64 0, i32 1, i32 0, i64 2
  %29 = load float, ptr %arrayidx11.i50.i, align 4, !tbaa !137
  %add14.i.i = fadd float %call9.i291, %29
  %retval.sroa.3.12.vec.insert.i54.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i, i64 0
  store <2 x float> %28, ptr %arrayidx94, align 4, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i54.i, ptr %ref.tmp87.sroa.5.0.arrayidx94.sroa_idx, align 4, !tbaa.struct !165
  %m_broadphaseHandle.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 8
  %30 = load ptr, ptr %m_broadphaseHandle.i.i, align 8, !tbaa !166
  %cmp.not.i = icmp eq ptr %30, null
  br i1 %cmp.not.i, label %invoke.cont151, label %if.then21.i

if.then21.i:                                      ; preds = %call9.i.noexc
  %31 = load ptr, ptr %m_worldInfo, align 8, !tbaa !42
  %m_broadphase.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %31, i64 0, i32 4
  %32 = load ptr, ptr %m_broadphase.i, align 8, !tbaa !167
  %m_dispatcher.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %31, i64 0, i32 5
  %33 = load ptr, ptr %m_dispatcher.i, align 8, !tbaa !172
  %vtable28.i = load ptr, ptr %32, align 8, !tbaa !5
  %vfn29.i = getelementptr inbounds ptr, ptr %vtable28.i, i64 4
  %34 = load ptr, ptr %vfn29.i, align 8
  invoke void %34(ptr noundef nonnull align 8 dereferenceable(8) %32, ptr noundef nonnull %30, ptr noundef nonnull align 4 dereferenceable(16) %m_bounds, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx94, ptr noundef %33)
          to label %invoke.cont151 unwind label %lpad105

if.else.i290:                                     ; preds = %for.cond.cleanup
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %m_bounds, i8 0, i64 32, i1 false)
  br label %invoke.cont151

lpad26:                                           ; preds = %entry
  %35 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup168

lpad29:                                           ; preds = %invoke.cont28
  %36 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup166

lpad31:                                           ; preds = %invoke.cont30
  %37 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup164

lpad76:                                           ; preds = %invoke.cont32
  %38 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup156

lpad97:                                           ; preds = %invoke.cont98, %invoke.cont96
  %39 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup156

lpad101:                                          ; preds = %invoke.cont99
  %40 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %call100) #37
  br label %ehcleanup156

lpad105:                                          ; preds = %if.then21.i, %if.then.i
  %41 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup156

lpad114:                                          ; preds = %if.then3.i.i.i, %if.then.i.i.i
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup156

for.body:                                         ; preds = %for.body.lr.ph, %invoke.cont147
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %invoke.cont147 ]
  %x.addr.0316 = phi ptr [ %x, %for.body.lr.ph ], [ %x.addr.1, %invoke.cont147 ]
  %m.addr.0315 = phi ptr [ %m, %for.body.lr.ph ], [ %m.addr.1, %invoke.cont147 ]
  %43 = load ptr, ptr %m_data.i.i226, align 8, !tbaa !87
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %43, i64 %indvars.iv
  %44 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %44, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_.exit, !prof !173

init.check.i:                                     ; preds = %for.body
  %45 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy) #38
  %tobool.not.i293 = icmp eq i32 %45, 0
  br i1 %tobool.not.i293, label %_ZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_.exit, label %init.i

init.i:                                           ; preds = %init.check.i
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy, align 8, !tbaa !174
  %46 = call ptr @llvm.invariant.start.p0(i64 120, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy)
  call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_.exit

_ZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_.exit: ; preds = %for.body, %init.check.i, %init.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(113) %arrayidx.i, ptr noundef nonnull align 8 dereferenceable(113) @_ZZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy, i64 113, i1 false)
  %tobool.not = icmp eq ptr %x.addr.0316, null
  br i1 %tobool.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %_ZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_.exit
  %incdec.ptr = getelementptr inbounds %class.btVector3, ptr %x.addr.0316, i64 1
  %47 = load <2 x float>, ptr %x.addr.0316, align 4
  %ref.tmp122.sroa.6.0.x.addr.0.sroa_idx = getelementptr inbounds i8, ptr %x.addr.0316, i64 8
  %48 = load <2 x float>, ptr %ref.tmp122.sroa.6.0.x.addr.0.sroa_idx, align 4
  br label %cond.end

cond.end:                                         ; preds = %_ZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_.exit, %cond.true
  %x.addr.1 = phi ptr [ %incdec.ptr, %cond.true ], [ null, %_ZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_.exit ]
  %49 = phi <2 x float> [ %47, %cond.true ], [ zeroinitializer, %_ZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_.exit ]
  %50 = phi <2 x float> [ %48, %cond.true ], [ zeroinitializer, %_ZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_.exit ]
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %43, i64 %indvars.iv, i32 1
  store <2 x float> %49, ptr %m_x, align 8
  %ref.tmp122.sroa.6.0.m_x.sroa_idx = getelementptr inbounds i8, ptr %m_x, i64 8
  store <2 x float> %50, ptr %ref.tmp122.sroa.6.0.m_x.sroa_idx, align 8
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %43, i64 %indvars.iv, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_q, ptr noundef nonnull align 8 dereferenceable(16) %m_x, i64 16, i1 false), !tbaa.struct !163
  %tobool129.not = icmp eq ptr %m.addr.0315, null
  br i1 %tobool129.not, label %cond.end133, label %cond.true130

cond.true130:                                     ; preds = %cond.end
  %incdec.ptr131 = getelementptr inbounds float, ptr %m.addr.0315, i64 1
  %51 = load float, ptr %m.addr.0315, align 4, !tbaa !137
  br label %cond.end133

cond.end133:                                      ; preds = %cond.end, %cond.true130
  %m.addr.1 = phi ptr [ %incdec.ptr131, %cond.true130 ], [ null, %cond.end ]
  %cond = phi float [ %51, %cond.true130 ], [ 1.000000e+00, %cond.end ]
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %43, i64 %indvars.iv, i32 6
  %cmp135 = fcmp ogt float %cond, 0.000000e+00
  %div = fdiv float 1.000000e+00, %cond
  %cond140 = select i1 %cmp135, float %div, float 0.000000e+00
  store float %cond140, ptr %m_im, align 8, !tbaa !175
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %ref.tmp143) #38
  %52 = fadd <2 x float> %49, <float -2.500000e-01, float -2.500000e-01>
  %53 = extractelement <2 x float> %50, i64 0
  %sub14.i.i.i = fadd float %53, -2.500000e-01
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i.i, i64 0
  store <2 x float> %52, ptr %ref.tmp143, align 8, !tbaa.struct !163, !alias.scope !178
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i, ptr %ref.tmp.sroa.4.0.mi.sroa_idx.i.i, align 8, !tbaa.struct !165, !alias.scope !178
  %54 = fadd <2 x float> %49, <float 2.500000e-01, float 2.500000e-01>
  %add14.i.i.i = fadd float %53, 2.500000e-01
  %retval.sroa.3.12.vec.insert.i12.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i.i, i64 0
  store <2 x float> %54, ptr %mx.i.i297, align 8, !tbaa.struct !163, !alias.scope !178
  store <2 x float> %retval.sroa.3.12.vec.insert.i12.i.i, ptr %ref.tmp1.sroa.4.0.mx.sroa_idx.i.i, align 8, !tbaa.struct !165, !alias.scope !178
  %call148 = invoke noundef ptr @_ZN6btDbvt6insertERK12btDbvtAabbMmPv(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt, ptr noundef nonnull align 4 dereferenceable(32) %ref.tmp143, ptr noundef nonnull %arrayidx.i)
          to label %invoke.cont147 unwind label %lpad145

invoke.cont147:                                   ; preds = %cond.end133
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Node", ptr %43, i64 %indvars.iv, i32 8
  store ptr %call148, ptr %m_leaf, align 8, !tbaa !183
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %ref.tmp143) #38
  %m_material = getelementptr inbounds %"struct.btSoftBody::Feature", ptr %arrayidx.i, i64 0, i32 1
  store ptr %call, ptr %m_material, align 8, !tbaa !184
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body

lpad145:                                          ; preds = %cond.end133
  %55 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %ref.tmp143) #38
  br label %ehcleanup156

invoke.cont151:                                   ; preds = %if.else.i290, %call9.i.noexc, %if.then21.i
  %m_initialWorldTransform = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26
  store float 1.000000e+00, ptr %m_initialWorldTransform, align 8, !tbaa !137
  %arrayidx3.i.i.i.i298 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26, i32 0, i32 0, i64 0, i32 0, i64 1
  %arrayidx3.i6.i.i.i299 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26, i32 0, i32 0, i64 1, i32 0, i64 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i.i298, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i.i299, align 4, !tbaa !137
  %arrayidx5.i7.i.i.i300 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26, i32 0, i32 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i.i301 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26, i32 0, i32 0, i64 2, i32 0, i64 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx5.i7.i.i.i300, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i.i301, align 8, !tbaa !137
  %arrayidx7.i11.i.i.i302 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26, i32 0, i32 0, i64 2, i32 0, i64 3
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %arrayidx7.i11.i.i.i302, i8 0, i64 20, i1 false)
  ret void

ehcleanup156:                                     ; preds = %lpad97, %lpad101, %lpad145, %lpad114, %lpad105, %lpad76
  %.pn.pn.pn = phi { ptr, i32 } [ %38, %lpad76 ], [ %39, %lpad97 ], [ %40, %lpad101 ], [ %55, %lpad145 ], [ %41, %lpad105 ], [ %42, %lpad114 ]
  invoke void @_ZN20btAlignedObjectArrayIiED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_userIndexMapping)
          to label %ehcleanup158 unwind label %terminate.lpad

ehcleanup158:                                     ; preds = %ehcleanup156
  invoke void @_ZN20btAlignedObjectArrayIbED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_clusterConnectivity)
          to label %ehcleanup160 unwind label %terminate.lpad

ehcleanup160:                                     ; preds = %ehcleanup158
  invoke void @_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_clusters)
          to label %ehcleanup162 unwind label %terminate.lpad

ehcleanup162:                                     ; preds = %ehcleanup160
  invoke void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt)
          to label %ehcleanup164 unwind label %terminate.lpad

ehcleanup164:                                     ; preds = %ehcleanup162, %lpad31
  %.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn, %ehcleanup162 ], [ %37, %lpad31 ]
  invoke void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_fdbvt)
          to label %ehcleanup166 unwind label %terminate.lpad

ehcleanup166:                                     ; preds = %ehcleanup164, %lpad29
  %.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn, %ehcleanup164 ], [ %36, %lpad29 ]
  invoke void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt)
          to label %ehcleanup168 unwind label %terminate.lpad

ehcleanup168:                                     ; preds = %ehcleanup166, %lpad26
  %.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn, %ehcleanup166 ], [ %35, %lpad26 ]
  invoke void @_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_materials)
          to label %ehcleanup170 unwind label %terminate.lpad

ehcleanup170:                                     ; preds = %ehcleanup168
  invoke void @_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_joints)
          to label %ehcleanup172 unwind label %terminate.lpad

ehcleanup172:                                     ; preds = %ehcleanup170
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_scontacts)
          to label %ehcleanup174 unwind label %terminate.lpad

ehcleanup174:                                     ; preds = %ehcleanup172
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_rcontacts)
          to label %ehcleanup176 unwind label %terminate.lpad

ehcleanup176:                                     ; preds = %ehcleanup174
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_anchors)
          to label %ehcleanup178 unwind label %terminate.lpad

ehcleanup178:                                     ; preds = %ehcleanup176
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_tetras)
          to label %ehcleanup180 unwind label %terminate.lpad

ehcleanup180:                                     ; preds = %ehcleanup178
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_faces)
          to label %ehcleanup182 unwind label %terminate.lpad

ehcleanup182:                                     ; preds = %ehcleanup180
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_links)
          to label %ehcleanup184 unwind label %terminate.lpad

ehcleanup184:                                     ; preds = %ehcleanup182
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_nodes)
          to label %ehcleanup186 unwind label %terminate.lpad

ehcleanup186:                                     ; preds = %ehcleanup184
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_notes)
          to label %ehcleanup188 unwind label %terminate.lpad

ehcleanup188:                                     ; preds = %ehcleanup186
  invoke void @_ZN10btSoftBody4PoseD2Ev(ptr noundef nonnull align 8 dereferenceable(232) %m_pose)
          to label %ehcleanup190 unwind label %terminate.lpad

ehcleanup190:                                     ; preds = %ehcleanup188
  invoke void @_ZN10btSoftBody6ConfigD2Ev(ptr noundef nonnull align 8 dereferenceable(200) %m_cfg)
          to label %ehcleanup192 unwind label %terminate.lpad

ehcleanup192:                                     ; preds = %ehcleanup190
  invoke void @_ZN20btAlignedObjectArrayIP17btCollisionObjectED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_collisionDisabledObjects)
          to label %ehcleanup194 unwind label %terminate.lpad

ehcleanup194:                                     ; preds = %ehcleanup192
  invoke void @_ZN17btCollisionObjectD2Ev(ptr noundef nonnull align 8 dereferenceable(280) %this)
          to label %eh.resume unwind label %terminate.lpad

eh.resume:                                        ; preds = %ehcleanup194
  resume { ptr, i32 } %.pn.pn.pn.pn.pn.pn

terminate.lpad:                                   ; preds = %ehcleanup194, %ehcleanup192, %ehcleanup190, %ehcleanup188, %ehcleanup186, %ehcleanup184, %ehcleanup182, %ehcleanup180, %ehcleanup178, %ehcleanup176, %ehcleanup174, %ehcleanup172, %ehcleanup170, %ehcleanup168, %ehcleanup166, %ehcleanup164, %ehcleanup162, %ehcleanup160, %ehcleanup158, %ehcleanup156
  %56 = landingpad { ptr, i32 }
          catch ptr null
  %57 = extractvalue { ptr, i32 } %56, 0
  call void @__clang_call_terminate(ptr %57) #39
  unreachable
}

declare void @_ZN17btCollisionObjectC2Ev(ptr noundef nonnull align 8 dereferenceable(280)) unnamed_addr #1

declare i32 @__gxx_personality_v0(...)

declare void @_ZN6btDbvtC1Ev(ptr noundef nonnull align 8 dereferenceable(64)) unnamed_addr #1

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #3

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody9setSolverENS_14eSolverPresets1_E(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %preset) local_unnamed_addr #4 align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !21
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !18
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !21
  %m_size.i4.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !22
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !23
  %m_data.i.i31 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 5
  %2 = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  %tobool.not.i.i32 = icmp eq ptr %2, null
  %m_ownsMemory.i.i33 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 6
  %3 = load i8, ptr %m_ownsMemory.i.i33, align 8, !range !159
  %tobool2.not.i.i34 = icmp eq i8 %3, 0
  %or.cond.i35 = select i1 %tobool.not.i.i32, i1 true, i1 %tobool2.not.i.i34
  br i1 %or.cond.i35, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit, label %if.then3.i.i36

if.then3.i.i36:                                   ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE5clearEv.exit
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %2)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE5clearEv.exit, %if.then3.i.i36
  store i8 1, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24
  store ptr null, ptr %m_data.i.i31, align 8, !tbaa !27
  %m_size.i4.i38 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 2
  store i32 0, ptr %m_size.i4.i38, align 4, !tbaa !28
  %m_capacity.i.i39 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 3
  store i32 0, ptr %m_capacity.i.i39, align 8, !tbaa !29
  %m_data.i.i40 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 5
  %4 = load ptr, ptr %m_data.i.i40, align 8, !tbaa !27
  %tobool.not.i.i41 = icmp eq ptr %4, null
  %m_ownsMemory.i.i42 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 6
  %5 = load i8, ptr %m_ownsMemory.i.i42, align 8, !range !159
  %tobool2.not.i.i43 = icmp eq i8 %5, 0
  %or.cond.i44 = select i1 %tobool.not.i.i41, i1 true, i1 %tobool2.not.i.i43
  br i1 %or.cond.i44, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit49, label %if.then3.i.i45

if.then3.i.i45:                                   ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %4)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit49

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit49: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit, %if.then3.i.i45
  store i8 1, ptr %m_ownsMemory.i.i42, align 8, !tbaa !24
  store ptr null, ptr %m_data.i.i40, align 8, !tbaa !27
  %m_size.i4.i47 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 2
  store i32 0, ptr %m_size.i4.i47, align 4, !tbaa !28
  %m_capacity.i.i48 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 3
  store i32 0, ptr %m_capacity.i.i48, align 8, !tbaa !29
  switch i32 %preset, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb15
  ]

sw.bb:                                            ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit49
  %6 = load i32, ptr %m_size.i4.i38, align 4, !tbaa !28
  %7 = load i32, ptr %m_capacity.i.i39, align 8, !tbaa !29
  %cmp.i = icmp eq i32 %6, %7
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit

if.then.i:                                        ; preds = %sw.bb
  %tobool.not.i.i51 = icmp eq i32 %6, 0
  %mul.i.i = shl nsw i32 %6, 1
  %cond.i.i = select i1 %tobool.not.i.i51, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %6, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 2
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i4.i38, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %8 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %6, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %8, 0
  %9 = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i
  %10 = ptrtoint ptr %9 to i64
  %retval.0.i.i.i491 = ptrtoint ptr %retval.0.i.i.i to i64
  %wide.trip.count.i.i.i = zext i32 %8 to i64
  %min.iters.check495 = icmp ult i32 %8, 8
  %11 = sub i64 %retval.0.i.i.i491, %10
  %diff.check492 = icmp ult i64 %11, 32
  %or.cond = select i1 %min.iters.check495, i1 true, i1 %diff.check492
  br i1 %or.cond, label %for.body.i.i.i.preheader, label %vector.ph496

vector.ph496:                                     ; preds = %for.body.lr.ph.i.i.i
  %n.vec498 = and i64 %wide.trip.count.i.i.i, 4294967288
  br label %vector.body501

vector.body501:                                   ; preds = %vector.body501, %vector.ph496
  %index502 = phi i64 [ 0, %vector.ph496 ], [ %index.next505, %vector.body501 ]
  %12 = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %index502
  %13 = getelementptr inbounds i32, ptr %9, i64 %index502
  %wide.load503 = load <4 x i32>, ptr %13, align 4, !tbaa !185
  %14 = getelementptr inbounds i32, ptr %13, i64 4
  %wide.load504 = load <4 x i32>, ptr %14, align 4, !tbaa !185
  store <4 x i32> %wide.load503, ptr %12, align 4, !tbaa !185
  %15 = getelementptr inbounds i32, ptr %12, i64 4
  store <4 x i32> %wide.load504, ptr %15, align 4, !tbaa !185
  %index.next505 = add nuw i64 %index502, 8
  %16 = icmp eq i64 %index.next505, %n.vec498
  br i1 %16, label %middle.block493, label %vector.body501, !llvm.loop !187

middle.block493:                                  ; preds = %vector.body501
  %cmp.n500 = icmp eq i64 %n.vec498, %wide.trip.count.i.i.i
  br i1 %cmp.n500, label %if.then.i11.i.i, label %for.body.i.i.i.preheader

for.body.i.i.i.preheader:                         ; preds = %for.body.lr.ph.i.i.i, %middle.block493
  %indvars.iv.i.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %n.vec498, %middle.block493 ]
  %17 = xor i64 %indvars.iv.i.i.i.ph, -1
  %18 = add nsw i64 %17, %wide.trip.count.i.i.i
  %xtraiter574 = and i64 %wide.trip.count.i.i.i, 3
  %lcmp.mod575.not = icmp eq i64 %xtraiter574, 0
  br i1 %lcmp.mod575.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol

for.body.i.i.i.prol:                              ; preds = %for.body.i.i.i.preheader, %for.body.i.i.i.prol
  %indvars.iv.i.i.i.prol = phi i64 [ %indvars.iv.next.i.i.i.prol, %for.body.i.i.i.prol ], [ %indvars.iv.i.i.i.ph, %for.body.i.i.i.preheader ]
  %prol.iter576 = phi i64 [ %prol.iter576.next, %for.body.i.i.i.prol ], [ 0, %for.body.i.i.i.preheader ]
  %arrayidx.i.i.i.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.prol
  %arrayidx3.i.i.i.prol = getelementptr inbounds i32, ptr %9, i64 %indvars.iv.i.i.i.prol
  %19 = load i32, ptr %arrayidx3.i.i.i.prol, align 4, !tbaa !185
  store i32 %19, ptr %arrayidx.i.i.i.prol, align 4, !tbaa !185
  %indvars.iv.next.i.i.i.prol = add nuw nsw i64 %indvars.iv.i.i.i.prol, 1
  %prol.iter576.next = add i64 %prol.iter576, 1
  %prol.iter576.cmp.not = icmp eq i64 %prol.iter576.next, %xtraiter574
  br i1 %prol.iter576.cmp.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol, !llvm.loop !190

for.body.i.i.i.prol.loopexit:                     ; preds = %for.body.i.i.i.prol, %for.body.i.i.i.preheader
  %indvars.iv.i.i.i.unr = phi i64 [ %indvars.iv.i.i.i.ph, %for.body.i.i.i.preheader ], [ %indvars.iv.next.i.i.i.prol, %for.body.i.i.i.prol ]
  %20 = icmp ult i64 %18, 3
  br i1 %20, label %if.then.i11.i.i, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i
  %indvars.iv.i.i.i = phi i64 [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ], [ %indvars.iv.i.i.i.unr, %for.body.i.i.i.prol.loopexit ]
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %arrayidx3.i.i.i = getelementptr inbounds i32, ptr %9, i64 %indvars.iv.i.i.i
  %21 = load i32, ptr %arrayidx3.i.i.i, align 4, !tbaa !185
  store i32 %21, ptr %arrayidx.i.i.i, align 4, !tbaa !185
  %indvars.iv.next.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %arrayidx3.i.i.i.1 = getelementptr inbounds i32, ptr %9, i64 %indvars.iv.next.i.i.i
  %22 = load i32, ptr %arrayidx3.i.i.i.1, align 4, !tbaa !185
  store i32 %22, ptr %arrayidx.i.i.i.1, align 4, !tbaa !185
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %arrayidx3.i.i.i.2 = getelementptr inbounds i32, ptr %9, i64 %indvars.iv.next.i.i.i.1
  %23 = load i32, ptr %arrayidx3.i.i.i.2, align 4, !tbaa !185
  store i32 %23, ptr %arrayidx.i.i.i.2, align 4, !tbaa !185
  %indvars.iv.next.i.i.i.2 = add nuw nsw i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %arrayidx3.i.i.i.3 = getelementptr inbounds i32, ptr %9, i64 %indvars.iv.next.i.i.i.2
  %24 = load i32, ptr %arrayidx3.i.i.i.3, align 4, !tbaa !185
  store i32 %24, ptr %arrayidx.i.i.i.3, align 4, !tbaa !185
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %exitcond.not.i.i.i.3 = icmp eq i64 %indvars.iv.next.i.i.i.3, %wide.trip.count.i.i.i
  br i1 %exitcond.not.i.i.i.3, label %if.then.i11.i.i, label %for.body.i.i.i, !llvm.loop !191

_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i
  %tobool.not.i10.i.i = icmp eq ptr %9, null
  %25 = load i8, ptr %m_ownsMemory.i.i33, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %25, 0
  %or.cond.i52 = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i52, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then.i11.i.i:                                  ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i, %middle.block493
  %.old.i = load i8, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24, !range !159, !noundef !192
  %tobool2.not.i.i.old.i = icmp eq i8 %.old.i, 0
  br i1 %tobool2.not.i.i.old.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %if.then.i11.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %9)
  %.pre7.pre.pre.i = load i32, ptr %m_size.i4.i38, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %if.then.i11.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i
  %.pre7.i = phi i32 [ %8, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i ], [ %.pre7.pre.pre.i, %if.then3.i.i.i ], [ %8, %if.then.i11.i.i ]
  store i8 1, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24
  store ptr %retval.0.i.i.i, ptr %m_data.i.i31, align 8, !tbaa !27
  store i32 %cond.i.i, ptr %m_capacity.i.i39, align 8, !tbaa !29
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit: ; preds = %sw.bb, %if.then.i, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i
  %26 = phi i32 [ %cond.i.i, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i ], [ %6, %if.then.i ], [ %7, %sw.bb ]
  %27 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i ], [ %6, %if.then.i ], [ %6, %sw.bb ]
  %28 = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  %idxprom.i = sext i32 %27 to i64
  %arrayidx.i = getelementptr inbounds i32, ptr %28, i64 %idxprom.i
  store i32 1, ptr %arrayidx.i, align 4, !tbaa !185
  %inc.i = add nsw i32 %27, 1
  store i32 %inc.i, ptr %m_size.i4.i38, align 4, !tbaa !28
  %cmp.i56 = icmp eq i32 %inc.i, %26
  br i1 %cmp.i56, label %if.then.i61, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit99

if.then.i61:                                      ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit
  %tobool.not.i.i57 = icmp eq i32 %26, 0
  %mul.i.i58 = shl nsw i32 %26, 1
  %cond.i.i59 = select i1 %tobool.not.i.i57, i32 1, i32 %mul.i.i58
  %cmp.i.i60 = icmp slt i32 %26, %cond.i.i59
  br i1 %cmp.i.i60, label %if.then.i.i63, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit99

if.then.i.i63:                                    ; preds = %if.then.i61
  %tobool.not.i.i.i62 = icmp eq i32 %cond.i.i59, 0
  br i1 %tobool.not.i.i.i62, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i72, label %if.then.i.i.i68

if.then.i.i.i68:                                  ; preds = %if.then.i.i63
  %conv.i.i.i.i64 = sext i32 %cond.i.i59 to i64
  %mul.i.i.i.i65 = shl nsw i64 %conv.i.i.i.i64, 2
  %call.i.i.i.i66 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i65, i32 noundef 16)
  %.pre.i67 = load i32, ptr %m_size.i4.i38, align 4, !tbaa !28
  %.pre419 = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i72

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i72: ; preds = %if.then.i.i.i68, %if.then.i.i63
  %29 = phi ptr [ %.pre419, %if.then.i.i.i68 ], [ %28, %if.then.i.i63 ]
  %30 = phi i32 [ %.pre.i67, %if.then.i.i.i68 ], [ %26, %if.then.i.i63 ]
  %retval.0.i.i.i69 = phi ptr [ %call.i.i.i.i66, %if.then.i.i.i68 ], [ null, %if.then.i.i63 ]
  %cmp7.i.i.i70 = icmp sgt i32 %30, 0
  br i1 %cmp7.i.i.i70, label %for.body.lr.ph.i.i.i74, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i85

for.body.lr.ph.i.i.i74:                           ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i72
  %31 = ptrtoint ptr %29 to i64
  %retval.0.i.i.i69507 = ptrtoint ptr %retval.0.i.i.i69 to i64
  %wide.trip.count.i.i.i73 = zext i32 %30 to i64
  %min.iters.check511 = icmp ult i32 %30, 8
  %32 = sub i64 %retval.0.i.i.i69507, %31
  %diff.check508 = icmp ult i64 %32, 32
  %or.cond554 = select i1 %min.iters.check511, i1 true, i1 %diff.check508
  br i1 %or.cond554, label %for.body.i.i.i80.preheader, label %vector.ph512

vector.ph512:                                     ; preds = %for.body.lr.ph.i.i.i74
  %n.vec514 = and i64 %wide.trip.count.i.i.i73, 4294967288
  br label %vector.body517

vector.body517:                                   ; preds = %vector.body517, %vector.ph512
  %index518 = phi i64 [ 0, %vector.ph512 ], [ %index.next521, %vector.body517 ]
  %33 = getelementptr inbounds i32, ptr %retval.0.i.i.i69, i64 %index518
  %34 = getelementptr inbounds i32, ptr %29, i64 %index518
  %wide.load519 = load <4 x i32>, ptr %34, align 4, !tbaa !185
  %35 = getelementptr inbounds i32, ptr %34, i64 4
  %wide.load520 = load <4 x i32>, ptr %35, align 4, !tbaa !185
  store <4 x i32> %wide.load519, ptr %33, align 4, !tbaa !185
  %36 = getelementptr inbounds i32, ptr %33, i64 4
  store <4 x i32> %wide.load520, ptr %36, align 4, !tbaa !185
  %index.next521 = add nuw i64 %index518, 8
  %37 = icmp eq i64 %index.next521, %n.vec514
  br i1 %37, label %middle.block509, label %vector.body517, !llvm.loop !193

middle.block509:                                  ; preds = %vector.body517
  %cmp.n516 = icmp eq i64 %n.vec514, %wide.trip.count.i.i.i73
  br i1 %cmp.n516, label %if.then.i11.i.i89, label %for.body.i.i.i80.preheader

for.body.i.i.i80.preheader:                       ; preds = %for.body.lr.ph.i.i.i74, %middle.block509
  %indvars.iv.i.i.i75.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i74 ], [ %n.vec514, %middle.block509 ]
  %38 = xor i64 %indvars.iv.i.i.i75.ph, -1
  %39 = add nsw i64 %38, %wide.trip.count.i.i.i73
  %xtraiter577 = and i64 %wide.trip.count.i.i.i73, 3
  %lcmp.mod578.not = icmp eq i64 %xtraiter577, 0
  br i1 %lcmp.mod578.not, label %for.body.i.i.i80.prol.loopexit, label %for.body.i.i.i80.prol

for.body.i.i.i80.prol:                            ; preds = %for.body.i.i.i80.preheader, %for.body.i.i.i80.prol
  %indvars.iv.i.i.i75.prol = phi i64 [ %indvars.iv.next.i.i.i78.prol, %for.body.i.i.i80.prol ], [ %indvars.iv.i.i.i75.ph, %for.body.i.i.i80.preheader ]
  %prol.iter579 = phi i64 [ %prol.iter579.next, %for.body.i.i.i80.prol ], [ 0, %for.body.i.i.i80.preheader ]
  %arrayidx.i.i.i76.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i69, i64 %indvars.iv.i.i.i75.prol
  %arrayidx3.i.i.i77.prol = getelementptr inbounds i32, ptr %29, i64 %indvars.iv.i.i.i75.prol
  %40 = load i32, ptr %arrayidx3.i.i.i77.prol, align 4, !tbaa !185
  store i32 %40, ptr %arrayidx.i.i.i76.prol, align 4, !tbaa !185
  %indvars.iv.next.i.i.i78.prol = add nuw nsw i64 %indvars.iv.i.i.i75.prol, 1
  %prol.iter579.next = add i64 %prol.iter579, 1
  %prol.iter579.cmp.not = icmp eq i64 %prol.iter579.next, %xtraiter577
  br i1 %prol.iter579.cmp.not, label %for.body.i.i.i80.prol.loopexit, label %for.body.i.i.i80.prol, !llvm.loop !194

for.body.i.i.i80.prol.loopexit:                   ; preds = %for.body.i.i.i80.prol, %for.body.i.i.i80.preheader
  %indvars.iv.i.i.i75.unr = phi i64 [ %indvars.iv.i.i.i75.ph, %for.body.i.i.i80.preheader ], [ %indvars.iv.next.i.i.i78.prol, %for.body.i.i.i80.prol ]
  %41 = icmp ult i64 %39, 3
  br i1 %41, label %if.then.i11.i.i89, label %for.body.i.i.i80

for.body.i.i.i80:                                 ; preds = %for.body.i.i.i80.prol.loopexit, %for.body.i.i.i80
  %indvars.iv.i.i.i75 = phi i64 [ %indvars.iv.next.i.i.i78.3, %for.body.i.i.i80 ], [ %indvars.iv.i.i.i75.unr, %for.body.i.i.i80.prol.loopexit ]
  %arrayidx.i.i.i76 = getelementptr inbounds i32, ptr %retval.0.i.i.i69, i64 %indvars.iv.i.i.i75
  %arrayidx3.i.i.i77 = getelementptr inbounds i32, ptr %29, i64 %indvars.iv.i.i.i75
  %42 = load i32, ptr %arrayidx3.i.i.i77, align 4, !tbaa !185
  store i32 %42, ptr %arrayidx.i.i.i76, align 4, !tbaa !185
  %indvars.iv.next.i.i.i78 = add nuw nsw i64 %indvars.iv.i.i.i75, 1
  %arrayidx.i.i.i76.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i69, i64 %indvars.iv.next.i.i.i78
  %arrayidx3.i.i.i77.1 = getelementptr inbounds i32, ptr %29, i64 %indvars.iv.next.i.i.i78
  %43 = load i32, ptr %arrayidx3.i.i.i77.1, align 4, !tbaa !185
  store i32 %43, ptr %arrayidx.i.i.i76.1, align 4, !tbaa !185
  %indvars.iv.next.i.i.i78.1 = add nuw nsw i64 %indvars.iv.i.i.i75, 2
  %arrayidx.i.i.i76.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i69, i64 %indvars.iv.next.i.i.i78.1
  %arrayidx3.i.i.i77.2 = getelementptr inbounds i32, ptr %29, i64 %indvars.iv.next.i.i.i78.1
  %44 = load i32, ptr %arrayidx3.i.i.i77.2, align 4, !tbaa !185
  store i32 %44, ptr %arrayidx.i.i.i76.2, align 4, !tbaa !185
  %indvars.iv.next.i.i.i78.2 = add nuw nsw i64 %indvars.iv.i.i.i75, 3
  %arrayidx.i.i.i76.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i69, i64 %indvars.iv.next.i.i.i78.2
  %arrayidx3.i.i.i77.3 = getelementptr inbounds i32, ptr %29, i64 %indvars.iv.next.i.i.i78.2
  %45 = load i32, ptr %arrayidx3.i.i.i77.3, align 4, !tbaa !185
  store i32 %45, ptr %arrayidx.i.i.i76.3, align 4, !tbaa !185
  %indvars.iv.next.i.i.i78.3 = add nuw nsw i64 %indvars.iv.i.i.i75, 4
  %exitcond.not.i.i.i79.3 = icmp eq i64 %indvars.iv.next.i.i.i78.3, %wide.trip.count.i.i.i73
  br i1 %exitcond.not.i.i.i79.3, label %if.then.i11.i.i89, label %for.body.i.i.i80, !llvm.loop !195

_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i85: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i72
  %tobool.not.i10.i.i81 = icmp eq ptr %29, null
  %46 = load i8, ptr %m_ownsMemory.i.i33, align 8, !range !159
  %tobool2.not.i.i.i83 = icmp eq i8 %46, 0
  %or.cond.i84 = select i1 %tobool.not.i10.i.i81, i1 true, i1 %tobool2.not.i.i.i83
  br i1 %or.cond.i84, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i94, label %if.then3.i.i.i91

if.then.i11.i.i89:                                ; preds = %for.body.i.i.i80.prol.loopexit, %for.body.i.i.i80, %middle.block509
  %.old.i87 = load i8, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24, !range !159, !noundef !192
  %tobool2.not.i.i.old.i88 = icmp eq i8 %.old.i87, 0
  br i1 %tobool2.not.i.i.old.i88, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i94, label %if.then3.i.i.i91

if.then3.i.i.i91:                                 ; preds = %if.then.i11.i.i89, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i85
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %29)
  %.pre7.pre.pre.i90 = load i32, ptr %m_size.i4.i38, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i94

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i94: ; preds = %if.then3.i.i.i91, %if.then.i11.i.i89, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i85
  %.pre7.i92 = phi i32 [ %30, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i85 ], [ %.pre7.pre.pre.i90, %if.then3.i.i.i91 ], [ %30, %if.then.i11.i.i89 ]
  store i8 1, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24
  store ptr %retval.0.i.i.i69, ptr %m_data.i.i31, align 8, !tbaa !27
  store i32 %cond.i.i59, ptr %m_capacity.i.i39, align 8, !tbaa !29
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit99

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit99: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit, %if.then.i61, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i94
  %47 = phi i32 [ %cond.i.i59, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i94 ], [ %26, %if.then.i61 ], [ %26, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit ]
  %48 = phi ptr [ %retval.0.i.i.i69, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i94 ], [ %28, %if.then.i61 ], [ %28, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit ]
  %49 = phi i32 [ %.pre7.i92, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i94 ], [ %26, %if.then.i61 ], [ %inc.i, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit ]
  %idxprom.i96 = sext i32 %49 to i64
  %arrayidx.i97 = getelementptr inbounds i32, ptr %48, i64 %idxprom.i96
  store i32 2, ptr %arrayidx.i97, align 4, !tbaa !185
  %inc.i98 = add nsw i32 %49, 1
  store i32 %inc.i98, ptr %m_size.i4.i38, align 4, !tbaa !28
  %cmp.i102 = icmp eq i32 %inc.i98, %47
  br i1 %cmp.i102, label %if.then.i107, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit145

if.then.i107:                                     ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit99
  %tobool.not.i.i103 = icmp eq i32 %47, 0
  %mul.i.i104 = shl nsw i32 %47, 1
  %cond.i.i105 = select i1 %tobool.not.i.i103, i32 1, i32 %mul.i.i104
  %cmp.i.i106 = icmp slt i32 %47, %cond.i.i105
  br i1 %cmp.i.i106, label %if.then.i.i109, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit145

if.then.i.i109:                                   ; preds = %if.then.i107
  %tobool.not.i.i.i108 = icmp eq i32 %cond.i.i105, 0
  br i1 %tobool.not.i.i.i108, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i118, label %if.then.i.i.i114

if.then.i.i.i114:                                 ; preds = %if.then.i.i109
  %conv.i.i.i.i110 = sext i32 %cond.i.i105 to i64
  %mul.i.i.i.i111 = shl nsw i64 %conv.i.i.i.i110, 2
  %call.i.i.i.i112 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i111, i32 noundef 16)
  %.pre.i113 = load i32, ptr %m_size.i4.i38, align 4, !tbaa !28
  %.pre420 = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i118

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i118: ; preds = %if.then.i.i.i114, %if.then.i.i109
  %50 = phi ptr [ %.pre420, %if.then.i.i.i114 ], [ %48, %if.then.i.i109 ]
  %51 = phi i32 [ %.pre.i113, %if.then.i.i.i114 ], [ %47, %if.then.i.i109 ]
  %retval.0.i.i.i115 = phi ptr [ %call.i.i.i.i112, %if.then.i.i.i114 ], [ null, %if.then.i.i109 ]
  %cmp7.i.i.i116 = icmp sgt i32 %51, 0
  br i1 %cmp7.i.i.i116, label %for.body.lr.ph.i.i.i120, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i131

for.body.lr.ph.i.i.i120:                          ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i118
  %52 = ptrtoint ptr %50 to i64
  %retval.0.i.i.i115523 = ptrtoint ptr %retval.0.i.i.i115 to i64
  %wide.trip.count.i.i.i119 = zext i32 %51 to i64
  %min.iters.check527 = icmp ult i32 %51, 8
  %53 = sub i64 %retval.0.i.i.i115523, %52
  %diff.check524 = icmp ult i64 %53, 32
  %or.cond555 = select i1 %min.iters.check527, i1 true, i1 %diff.check524
  br i1 %or.cond555, label %for.body.i.i.i126.preheader, label %vector.ph528

vector.ph528:                                     ; preds = %for.body.lr.ph.i.i.i120
  %n.vec530 = and i64 %wide.trip.count.i.i.i119, 4294967288
  br label %vector.body533

vector.body533:                                   ; preds = %vector.body533, %vector.ph528
  %index534 = phi i64 [ 0, %vector.ph528 ], [ %index.next537, %vector.body533 ]
  %54 = getelementptr inbounds i32, ptr %retval.0.i.i.i115, i64 %index534
  %55 = getelementptr inbounds i32, ptr %50, i64 %index534
  %wide.load535 = load <4 x i32>, ptr %55, align 4, !tbaa !185
  %56 = getelementptr inbounds i32, ptr %55, i64 4
  %wide.load536 = load <4 x i32>, ptr %56, align 4, !tbaa !185
  store <4 x i32> %wide.load535, ptr %54, align 4, !tbaa !185
  %57 = getelementptr inbounds i32, ptr %54, i64 4
  store <4 x i32> %wide.load536, ptr %57, align 4, !tbaa !185
  %index.next537 = add nuw i64 %index534, 8
  %58 = icmp eq i64 %index.next537, %n.vec530
  br i1 %58, label %middle.block525, label %vector.body533, !llvm.loop !196

middle.block525:                                  ; preds = %vector.body533
  %cmp.n532 = icmp eq i64 %n.vec530, %wide.trip.count.i.i.i119
  br i1 %cmp.n532, label %if.then.i11.i.i135, label %for.body.i.i.i126.preheader

for.body.i.i.i126.preheader:                      ; preds = %for.body.lr.ph.i.i.i120, %middle.block525
  %indvars.iv.i.i.i121.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i120 ], [ %n.vec530, %middle.block525 ]
  %59 = xor i64 %indvars.iv.i.i.i121.ph, -1
  %60 = add nsw i64 %59, %wide.trip.count.i.i.i119
  %xtraiter580 = and i64 %wide.trip.count.i.i.i119, 3
  %lcmp.mod581.not = icmp eq i64 %xtraiter580, 0
  br i1 %lcmp.mod581.not, label %for.body.i.i.i126.prol.loopexit, label %for.body.i.i.i126.prol

for.body.i.i.i126.prol:                           ; preds = %for.body.i.i.i126.preheader, %for.body.i.i.i126.prol
  %indvars.iv.i.i.i121.prol = phi i64 [ %indvars.iv.next.i.i.i124.prol, %for.body.i.i.i126.prol ], [ %indvars.iv.i.i.i121.ph, %for.body.i.i.i126.preheader ]
  %prol.iter582 = phi i64 [ %prol.iter582.next, %for.body.i.i.i126.prol ], [ 0, %for.body.i.i.i126.preheader ]
  %arrayidx.i.i.i122.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i115, i64 %indvars.iv.i.i.i121.prol
  %arrayidx3.i.i.i123.prol = getelementptr inbounds i32, ptr %50, i64 %indvars.iv.i.i.i121.prol
  %61 = load i32, ptr %arrayidx3.i.i.i123.prol, align 4, !tbaa !185
  store i32 %61, ptr %arrayidx.i.i.i122.prol, align 4, !tbaa !185
  %indvars.iv.next.i.i.i124.prol = add nuw nsw i64 %indvars.iv.i.i.i121.prol, 1
  %prol.iter582.next = add i64 %prol.iter582, 1
  %prol.iter582.cmp.not = icmp eq i64 %prol.iter582.next, %xtraiter580
  br i1 %prol.iter582.cmp.not, label %for.body.i.i.i126.prol.loopexit, label %for.body.i.i.i126.prol, !llvm.loop !197

for.body.i.i.i126.prol.loopexit:                  ; preds = %for.body.i.i.i126.prol, %for.body.i.i.i126.preheader
  %indvars.iv.i.i.i121.unr = phi i64 [ %indvars.iv.i.i.i121.ph, %for.body.i.i.i126.preheader ], [ %indvars.iv.next.i.i.i124.prol, %for.body.i.i.i126.prol ]
  %62 = icmp ult i64 %60, 3
  br i1 %62, label %if.then.i11.i.i135, label %for.body.i.i.i126

for.body.i.i.i126:                                ; preds = %for.body.i.i.i126.prol.loopexit, %for.body.i.i.i126
  %indvars.iv.i.i.i121 = phi i64 [ %indvars.iv.next.i.i.i124.3, %for.body.i.i.i126 ], [ %indvars.iv.i.i.i121.unr, %for.body.i.i.i126.prol.loopexit ]
  %arrayidx.i.i.i122 = getelementptr inbounds i32, ptr %retval.0.i.i.i115, i64 %indvars.iv.i.i.i121
  %arrayidx3.i.i.i123 = getelementptr inbounds i32, ptr %50, i64 %indvars.iv.i.i.i121
  %63 = load i32, ptr %arrayidx3.i.i.i123, align 4, !tbaa !185
  store i32 %63, ptr %arrayidx.i.i.i122, align 4, !tbaa !185
  %indvars.iv.next.i.i.i124 = add nuw nsw i64 %indvars.iv.i.i.i121, 1
  %arrayidx.i.i.i122.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i115, i64 %indvars.iv.next.i.i.i124
  %arrayidx3.i.i.i123.1 = getelementptr inbounds i32, ptr %50, i64 %indvars.iv.next.i.i.i124
  %64 = load i32, ptr %arrayidx3.i.i.i123.1, align 4, !tbaa !185
  store i32 %64, ptr %arrayidx.i.i.i122.1, align 4, !tbaa !185
  %indvars.iv.next.i.i.i124.1 = add nuw nsw i64 %indvars.iv.i.i.i121, 2
  %arrayidx.i.i.i122.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i115, i64 %indvars.iv.next.i.i.i124.1
  %arrayidx3.i.i.i123.2 = getelementptr inbounds i32, ptr %50, i64 %indvars.iv.next.i.i.i124.1
  %65 = load i32, ptr %arrayidx3.i.i.i123.2, align 4, !tbaa !185
  store i32 %65, ptr %arrayidx.i.i.i122.2, align 4, !tbaa !185
  %indvars.iv.next.i.i.i124.2 = add nuw nsw i64 %indvars.iv.i.i.i121, 3
  %arrayidx.i.i.i122.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i115, i64 %indvars.iv.next.i.i.i124.2
  %arrayidx3.i.i.i123.3 = getelementptr inbounds i32, ptr %50, i64 %indvars.iv.next.i.i.i124.2
  %66 = load i32, ptr %arrayidx3.i.i.i123.3, align 4, !tbaa !185
  store i32 %66, ptr %arrayidx.i.i.i122.3, align 4, !tbaa !185
  %indvars.iv.next.i.i.i124.3 = add nuw nsw i64 %indvars.iv.i.i.i121, 4
  %exitcond.not.i.i.i125.3 = icmp eq i64 %indvars.iv.next.i.i.i124.3, %wide.trip.count.i.i.i119
  br i1 %exitcond.not.i.i.i125.3, label %if.then.i11.i.i135, label %for.body.i.i.i126, !llvm.loop !198

_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i131: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i118
  %tobool.not.i10.i.i127 = icmp eq ptr %50, null
  %67 = load i8, ptr %m_ownsMemory.i.i33, align 8, !range !159
  %tobool2.not.i.i.i129 = icmp eq i8 %67, 0
  %or.cond.i130 = select i1 %tobool.not.i10.i.i127, i1 true, i1 %tobool2.not.i.i.i129
  br i1 %or.cond.i130, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i140, label %if.then3.i.i.i137

if.then.i11.i.i135:                               ; preds = %for.body.i.i.i126.prol.loopexit, %for.body.i.i.i126, %middle.block525
  %.old.i133 = load i8, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24, !range !159, !noundef !192
  %tobool2.not.i.i.old.i134 = icmp eq i8 %.old.i133, 0
  br i1 %tobool2.not.i.i.old.i134, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i140, label %if.then3.i.i.i137

if.then3.i.i.i137:                                ; preds = %if.then.i11.i.i135, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i131
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %50)
  %.pre7.pre.pre.i136 = load i32, ptr %m_size.i4.i38, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i140

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i140: ; preds = %if.then3.i.i.i137, %if.then.i11.i.i135, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i131
  %.pre7.i138 = phi i32 [ %51, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i131 ], [ %.pre7.pre.pre.i136, %if.then3.i.i.i137 ], [ %51, %if.then.i11.i.i135 ]
  store i8 1, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24
  store ptr %retval.0.i.i.i115, ptr %m_data.i.i31, align 8, !tbaa !27
  store i32 %cond.i.i105, ptr %m_capacity.i.i39, align 8, !tbaa !29
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit145

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit145: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit99, %if.then.i107, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i140
  %68 = phi i32 [ %cond.i.i105, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i140 ], [ %47, %if.then.i107 ], [ %47, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit99 ]
  %69 = phi ptr [ %retval.0.i.i.i115, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i140 ], [ %48, %if.then.i107 ], [ %48, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit99 ]
  %70 = phi i32 [ %.pre7.i138, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i140 ], [ %47, %if.then.i107 ], [ %inc.i98, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit99 ]
  %idxprom.i142 = sext i32 %70 to i64
  %arrayidx.i143 = getelementptr inbounds i32, ptr %69, i64 %idxprom.i142
  store i32 3, ptr %arrayidx.i143, align 4, !tbaa !185
  %inc.i144 = add nsw i32 %70, 1
  store i32 %inc.i144, ptr %m_size.i4.i38, align 4, !tbaa !28
  %cmp.i148 = icmp eq i32 %inc.i144, %68
  br i1 %cmp.i148, label %if.then.i153, label %sw.epilog.sink.split

if.then.i153:                                     ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit145
  %tobool.not.i.i149 = icmp eq i32 %68, 0
  %mul.i.i150 = shl nsw i32 %68, 1
  %cond.i.i151 = select i1 %tobool.not.i.i149, i32 1, i32 %mul.i.i150
  %cmp.i.i152 = icmp slt i32 %68, %cond.i.i151
  br i1 %cmp.i.i152, label %if.then.i.i155, label %sw.epilog.sink.split

if.then.i.i155:                                   ; preds = %if.then.i153
  %tobool.not.i.i.i154 = icmp eq i32 %cond.i.i151, 0
  br i1 %tobool.not.i.i.i154, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i164, label %if.then.i.i.i160

if.then.i.i.i160:                                 ; preds = %if.then.i.i155
  %conv.i.i.i.i156 = sext i32 %cond.i.i151 to i64
  %mul.i.i.i.i157 = shl nsw i64 %conv.i.i.i.i156, 2
  %call.i.i.i.i158 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i157, i32 noundef 16)
  %.pre.i159 = load i32, ptr %m_size.i4.i38, align 4, !tbaa !28
  %.pre421 = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i164

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i164: ; preds = %if.then.i.i.i160, %if.then.i.i155
  %71 = phi ptr [ %.pre421, %if.then.i.i.i160 ], [ %69, %if.then.i.i155 ]
  %72 = phi i32 [ %.pre.i159, %if.then.i.i.i160 ], [ %68, %if.then.i.i155 ]
  %retval.0.i.i.i161 = phi ptr [ %call.i.i.i.i158, %if.then.i.i.i160 ], [ null, %if.then.i.i155 ]
  %cmp7.i.i.i162 = icmp sgt i32 %72, 0
  br i1 %cmp7.i.i.i162, label %for.body.lr.ph.i.i.i166, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i177

for.body.lr.ph.i.i.i166:                          ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i164
  %73 = ptrtoint ptr %71 to i64
  %retval.0.i.i.i161539 = ptrtoint ptr %retval.0.i.i.i161 to i64
  %wide.trip.count.i.i.i165 = zext i32 %72 to i64
  %min.iters.check543 = icmp ult i32 %72, 8
  %74 = sub i64 %retval.0.i.i.i161539, %73
  %diff.check540 = icmp ult i64 %74, 32
  %or.cond556 = select i1 %min.iters.check543, i1 true, i1 %diff.check540
  br i1 %or.cond556, label %for.body.i.i.i172.preheader, label %vector.ph544

vector.ph544:                                     ; preds = %for.body.lr.ph.i.i.i166
  %n.vec546 = and i64 %wide.trip.count.i.i.i165, 4294967288
  br label %vector.body549

vector.body549:                                   ; preds = %vector.body549, %vector.ph544
  %index550 = phi i64 [ 0, %vector.ph544 ], [ %index.next553, %vector.body549 ]
  %75 = getelementptr inbounds i32, ptr %retval.0.i.i.i161, i64 %index550
  %76 = getelementptr inbounds i32, ptr %71, i64 %index550
  %wide.load551 = load <4 x i32>, ptr %76, align 4, !tbaa !185
  %77 = getelementptr inbounds i32, ptr %76, i64 4
  %wide.load552 = load <4 x i32>, ptr %77, align 4, !tbaa !185
  store <4 x i32> %wide.load551, ptr %75, align 4, !tbaa !185
  %78 = getelementptr inbounds i32, ptr %75, i64 4
  store <4 x i32> %wide.load552, ptr %78, align 4, !tbaa !185
  %index.next553 = add nuw i64 %index550, 8
  %79 = icmp eq i64 %index.next553, %n.vec546
  br i1 %79, label %middle.block541, label %vector.body549, !llvm.loop !199

middle.block541:                                  ; preds = %vector.body549
  %cmp.n548 = icmp eq i64 %n.vec546, %wide.trip.count.i.i.i165
  br i1 %cmp.n548, label %if.then.i11.i.i181, label %for.body.i.i.i172.preheader

for.body.i.i.i172.preheader:                      ; preds = %for.body.lr.ph.i.i.i166, %middle.block541
  %indvars.iv.i.i.i167.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i166 ], [ %n.vec546, %middle.block541 ]
  %80 = xor i64 %indvars.iv.i.i.i167.ph, -1
  %81 = add nsw i64 %80, %wide.trip.count.i.i.i165
  %xtraiter583 = and i64 %wide.trip.count.i.i.i165, 3
  %lcmp.mod584.not = icmp eq i64 %xtraiter583, 0
  br i1 %lcmp.mod584.not, label %for.body.i.i.i172.prol.loopexit, label %for.body.i.i.i172.prol

for.body.i.i.i172.prol:                           ; preds = %for.body.i.i.i172.preheader, %for.body.i.i.i172.prol
  %indvars.iv.i.i.i167.prol = phi i64 [ %indvars.iv.next.i.i.i170.prol, %for.body.i.i.i172.prol ], [ %indvars.iv.i.i.i167.ph, %for.body.i.i.i172.preheader ]
  %prol.iter585 = phi i64 [ %prol.iter585.next, %for.body.i.i.i172.prol ], [ 0, %for.body.i.i.i172.preheader ]
  %arrayidx.i.i.i168.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i161, i64 %indvars.iv.i.i.i167.prol
  %arrayidx3.i.i.i169.prol = getelementptr inbounds i32, ptr %71, i64 %indvars.iv.i.i.i167.prol
  %82 = load i32, ptr %arrayidx3.i.i.i169.prol, align 4, !tbaa !185
  store i32 %82, ptr %arrayidx.i.i.i168.prol, align 4, !tbaa !185
  %indvars.iv.next.i.i.i170.prol = add nuw nsw i64 %indvars.iv.i.i.i167.prol, 1
  %prol.iter585.next = add i64 %prol.iter585, 1
  %prol.iter585.cmp.not = icmp eq i64 %prol.iter585.next, %xtraiter583
  br i1 %prol.iter585.cmp.not, label %for.body.i.i.i172.prol.loopexit, label %for.body.i.i.i172.prol, !llvm.loop !200

for.body.i.i.i172.prol.loopexit:                  ; preds = %for.body.i.i.i172.prol, %for.body.i.i.i172.preheader
  %indvars.iv.i.i.i167.unr = phi i64 [ %indvars.iv.i.i.i167.ph, %for.body.i.i.i172.preheader ], [ %indvars.iv.next.i.i.i170.prol, %for.body.i.i.i172.prol ]
  %83 = icmp ult i64 %81, 3
  br i1 %83, label %if.then.i11.i.i181, label %for.body.i.i.i172

for.body.i.i.i172:                                ; preds = %for.body.i.i.i172.prol.loopexit, %for.body.i.i.i172
  %indvars.iv.i.i.i167 = phi i64 [ %indvars.iv.next.i.i.i170.3, %for.body.i.i.i172 ], [ %indvars.iv.i.i.i167.unr, %for.body.i.i.i172.prol.loopexit ]
  %arrayidx.i.i.i168 = getelementptr inbounds i32, ptr %retval.0.i.i.i161, i64 %indvars.iv.i.i.i167
  %arrayidx3.i.i.i169 = getelementptr inbounds i32, ptr %71, i64 %indvars.iv.i.i.i167
  %84 = load i32, ptr %arrayidx3.i.i.i169, align 4, !tbaa !185
  store i32 %84, ptr %arrayidx.i.i.i168, align 4, !tbaa !185
  %indvars.iv.next.i.i.i170 = add nuw nsw i64 %indvars.iv.i.i.i167, 1
  %arrayidx.i.i.i168.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i161, i64 %indvars.iv.next.i.i.i170
  %arrayidx3.i.i.i169.1 = getelementptr inbounds i32, ptr %71, i64 %indvars.iv.next.i.i.i170
  %85 = load i32, ptr %arrayidx3.i.i.i169.1, align 4, !tbaa !185
  store i32 %85, ptr %arrayidx.i.i.i168.1, align 4, !tbaa !185
  %indvars.iv.next.i.i.i170.1 = add nuw nsw i64 %indvars.iv.i.i.i167, 2
  %arrayidx.i.i.i168.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i161, i64 %indvars.iv.next.i.i.i170.1
  %arrayidx3.i.i.i169.2 = getelementptr inbounds i32, ptr %71, i64 %indvars.iv.next.i.i.i170.1
  %86 = load i32, ptr %arrayidx3.i.i.i169.2, align 4, !tbaa !185
  store i32 %86, ptr %arrayidx.i.i.i168.2, align 4, !tbaa !185
  %indvars.iv.next.i.i.i170.2 = add nuw nsw i64 %indvars.iv.i.i.i167, 3
  %arrayidx.i.i.i168.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i161, i64 %indvars.iv.next.i.i.i170.2
  %arrayidx3.i.i.i169.3 = getelementptr inbounds i32, ptr %71, i64 %indvars.iv.next.i.i.i170.2
  %87 = load i32, ptr %arrayidx3.i.i.i169.3, align 4, !tbaa !185
  store i32 %87, ptr %arrayidx.i.i.i168.3, align 4, !tbaa !185
  %indvars.iv.next.i.i.i170.3 = add nuw nsw i64 %indvars.iv.i.i.i167, 4
  %exitcond.not.i.i.i171.3 = icmp eq i64 %indvars.iv.next.i.i.i170.3, %wide.trip.count.i.i.i165
  br i1 %exitcond.not.i.i.i171.3, label %if.then.i11.i.i181, label %for.body.i.i.i172, !llvm.loop !201

_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i177: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i164
  %tobool.not.i10.i.i173 = icmp eq ptr %71, null
  %88 = load i8, ptr %m_ownsMemory.i.i33, align 8, !range !159
  %tobool2.not.i.i.i175 = icmp eq i8 %88, 0
  %or.cond.i176 = select i1 %tobool.not.i10.i.i173, i1 true, i1 %tobool2.not.i.i.i175
  br i1 %or.cond.i176, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i186, label %if.then3.i.i.i183

if.then.i11.i.i181:                               ; preds = %for.body.i.i.i172.prol.loopexit, %for.body.i.i.i172, %middle.block541
  %.old.i179 = load i8, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24, !range !159, !noundef !192
  %tobool2.not.i.i.old.i180 = icmp eq i8 %.old.i179, 0
  br i1 %tobool2.not.i.i.old.i180, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i186, label %if.then3.i.i.i183

if.then3.i.i.i183:                                ; preds = %if.then.i11.i.i181, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i177
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %71)
  %.pre7.pre.pre.i182 = load i32, ptr %m_size.i4.i38, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i186

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i186: ; preds = %if.then3.i.i.i183, %if.then.i11.i.i181, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i177
  %.pre7.i184 = phi i32 [ %72, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i177 ], [ %.pre7.pre.pre.i182, %if.then3.i.i.i183 ], [ %72, %if.then.i11.i.i181 ]
  store i8 1, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24
  store ptr %retval.0.i.i.i161, ptr %m_data.i.i31, align 8, !tbaa !27
  store i32 %cond.i.i151, ptr %m_capacity.i.i39, align 8, !tbaa !29
  br label %sw.epilog.sink.split

sw.bb15:                                          ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit49
  %89 = load i32, ptr %m_size.i4.i, align 4, !tbaa !22
  %90 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !23
  %cmp.i194 = icmp eq i32 %89, %90
  br i1 %cmp.i194, label %if.then.i199, label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE9push_backERKS2_.exit

if.then.i199:                                     ; preds = %sw.bb15
  %tobool.not.i.i195 = icmp eq i32 %89, 0
  %mul.i.i196 = shl nsw i32 %89, 1
  %cond.i.i197 = select i1 %tobool.not.i.i195, i32 1, i32 %mul.i.i196
  %cmp.i.i198 = icmp slt i32 %89, %cond.i.i197
  br i1 %cmp.i.i198, label %if.then.i.i201, label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE9push_backERKS2_.exit

if.then.i.i201:                                   ; preds = %if.then.i199
  %tobool.not.i.i.i200 = icmp eq i32 %cond.i.i197, 0
  br i1 %tobool.not.i.i.i200, label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE8allocateEi.exit.i.i, label %if.then.i.i.i206

if.then.i.i.i206:                                 ; preds = %if.then.i.i201
  %conv.i.i.i.i202 = sext i32 %cond.i.i197 to i64
  %mul.i.i.i.i203 = shl nsw i64 %conv.i.i.i.i202, 2
  %call.i.i.i.i204 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i203, i32 noundef 16)
  %.pre.i205 = load i32, ptr %m_size.i4.i, align 4, !tbaa !22
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i206, %if.then.i.i201
  %91 = phi i32 [ %.pre.i205, %if.then.i.i.i206 ], [ %89, %if.then.i.i201 ]
  %retval.0.i.i.i207 = phi ptr [ %call.i.i.i.i204, %if.then.i.i.i206 ], [ null, %if.then.i.i201 ]
  %cmp7.i.i.i208 = icmp sgt i32 %91, 0
  %92 = load ptr, ptr %m_data.i.i, align 8, !tbaa !21
  br i1 %cmp7.i.i.i208, label %for.body.lr.ph.i.i.i211, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE4copyEiiPS2_.exit.i.i

for.body.lr.ph.i.i.i211:                          ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE8allocateEi.exit.i.i
  %93 = ptrtoint ptr %92 to i64
  %retval.0.i.i.i207424 = ptrtoint ptr %retval.0.i.i.i207 to i64
  %wide.trip.count.i.i.i210 = zext i32 %91 to i64
  %min.iters.check = icmp ult i32 %91, 8
  %94 = sub i64 %retval.0.i.i.i207424, %93
  %diff.check = icmp ult i64 %94, 32
  %or.cond557 = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond557, label %for.body.i.i.i217.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i.i211
  %n.vec = and i64 %wide.trip.count.i.i.i210, 4294967288
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %95 = getelementptr inbounds i32, ptr %retval.0.i.i.i207, i64 %index
  %96 = getelementptr inbounds i32, ptr %92, i64 %index
  %wide.load = load <4 x i32>, ptr %96, align 4, !tbaa !202
  %97 = getelementptr inbounds i32, ptr %96, i64 4
  %wide.load425 = load <4 x i32>, ptr %97, align 4, !tbaa !202
  store <4 x i32> %wide.load, ptr %95, align 4, !tbaa !202
  %98 = getelementptr inbounds i32, ptr %95, i64 4
  store <4 x i32> %wide.load425, ptr %98, align 4, !tbaa !202
  %index.next = add nuw i64 %index, 8
  %99 = icmp eq i64 %index.next, %n.vec
  br i1 %99, label %middle.block, label %vector.body, !llvm.loop !204

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i.i210
  br i1 %cmp.n, label %if.then.i11.i.i225, label %for.body.i.i.i217.preheader

for.body.i.i.i217.preheader:                      ; preds = %for.body.lr.ph.i.i.i211, %middle.block
  %indvars.iv.i.i.i212.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i211 ], [ %n.vec, %middle.block ]
  %100 = xor i64 %indvars.iv.i.i.i212.ph, -1
  %101 = add nsw i64 %100, %wide.trip.count.i.i.i210
  %xtraiter = and i64 %wide.trip.count.i.i.i210, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.i.i.i217.prol.loopexit, label %for.body.i.i.i217.prol

for.body.i.i.i217.prol:                           ; preds = %for.body.i.i.i217.preheader, %for.body.i.i.i217.prol
  %indvars.iv.i.i.i212.prol = phi i64 [ %indvars.iv.next.i.i.i215.prol, %for.body.i.i.i217.prol ], [ %indvars.iv.i.i.i212.ph, %for.body.i.i.i217.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.i.i217.prol ], [ 0, %for.body.i.i.i217.preheader ]
  %arrayidx.i.i.i213.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i207, i64 %indvars.iv.i.i.i212.prol
  %arrayidx3.i.i.i214.prol = getelementptr inbounds i32, ptr %92, i64 %indvars.iv.i.i.i212.prol
  %102 = load i32, ptr %arrayidx3.i.i.i214.prol, align 4, !tbaa !202
  store i32 %102, ptr %arrayidx.i.i.i213.prol, align 4, !tbaa !202
  %indvars.iv.next.i.i.i215.prol = add nuw nsw i64 %indvars.iv.i.i.i212.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.i.i.i217.prol.loopexit, label %for.body.i.i.i217.prol, !llvm.loop !205

for.body.i.i.i217.prol.loopexit:                  ; preds = %for.body.i.i.i217.prol, %for.body.i.i.i217.preheader
  %indvars.iv.i.i.i212.unr = phi i64 [ %indvars.iv.i.i.i212.ph, %for.body.i.i.i217.preheader ], [ %indvars.iv.next.i.i.i215.prol, %for.body.i.i.i217.prol ]
  %103 = icmp ult i64 %101, 3
  br i1 %103, label %if.then.i11.i.i225, label %for.body.i.i.i217

for.body.i.i.i217:                                ; preds = %for.body.i.i.i217.prol.loopexit, %for.body.i.i.i217
  %indvars.iv.i.i.i212 = phi i64 [ %indvars.iv.next.i.i.i215.3, %for.body.i.i.i217 ], [ %indvars.iv.i.i.i212.unr, %for.body.i.i.i217.prol.loopexit ]
  %arrayidx.i.i.i213 = getelementptr inbounds i32, ptr %retval.0.i.i.i207, i64 %indvars.iv.i.i.i212
  %arrayidx3.i.i.i214 = getelementptr inbounds i32, ptr %92, i64 %indvars.iv.i.i.i212
  %104 = load i32, ptr %arrayidx3.i.i.i214, align 4, !tbaa !202
  store i32 %104, ptr %arrayidx.i.i.i213, align 4, !tbaa !202
  %indvars.iv.next.i.i.i215 = add nuw nsw i64 %indvars.iv.i.i.i212, 1
  %arrayidx.i.i.i213.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i207, i64 %indvars.iv.next.i.i.i215
  %arrayidx3.i.i.i214.1 = getelementptr inbounds i32, ptr %92, i64 %indvars.iv.next.i.i.i215
  %105 = load i32, ptr %arrayidx3.i.i.i214.1, align 4, !tbaa !202
  store i32 %105, ptr %arrayidx.i.i.i213.1, align 4, !tbaa !202
  %indvars.iv.next.i.i.i215.1 = add nuw nsw i64 %indvars.iv.i.i.i212, 2
  %arrayidx.i.i.i213.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i207, i64 %indvars.iv.next.i.i.i215.1
  %arrayidx3.i.i.i214.2 = getelementptr inbounds i32, ptr %92, i64 %indvars.iv.next.i.i.i215.1
  %106 = load i32, ptr %arrayidx3.i.i.i214.2, align 4, !tbaa !202
  store i32 %106, ptr %arrayidx.i.i.i213.2, align 4, !tbaa !202
  %indvars.iv.next.i.i.i215.2 = add nuw nsw i64 %indvars.iv.i.i.i212, 3
  %arrayidx.i.i.i213.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i207, i64 %indvars.iv.next.i.i.i215.2
  %arrayidx3.i.i.i214.3 = getelementptr inbounds i32, ptr %92, i64 %indvars.iv.next.i.i.i215.2
  %107 = load i32, ptr %arrayidx3.i.i.i214.3, align 4, !tbaa !202
  store i32 %107, ptr %arrayidx.i.i.i213.3, align 4, !tbaa !202
  %indvars.iv.next.i.i.i215.3 = add nuw nsw i64 %indvars.iv.i.i.i212, 4
  %exitcond.not.i.i.i216.3 = icmp eq i64 %indvars.iv.next.i.i.i215.3, %wide.trip.count.i.i.i210
  br i1 %exitcond.not.i.i.i216.3, label %if.then.i11.i.i225, label %for.body.i.i.i217, !llvm.loop !206

_ZNK20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE4copyEiiPS2_.exit.i.i: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE8allocateEi.exit.i.i
  %tobool.not.i10.i.i218 = icmp eq ptr %92, null
  %108 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i.i220 = icmp eq i8 %108, 0
  %or.cond.i221 = select i1 %tobool.not.i10.i.i218, i1 true, i1 %tobool2.not.i.i.i220
  br i1 %or.cond.i221, label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE10deallocateEv.exit.i.i, label %if.then3.i.i.i227

if.then.i11.i.i225:                               ; preds = %for.body.i.i.i217.prol.loopexit, %for.body.i.i.i217, %middle.block
  %.old.i223 = load i8, ptr %m_ownsMemory.i.i, align 8, !tbaa !18, !range !159, !noundef !192
  %tobool2.not.i.i.old.i224 = icmp eq i8 %.old.i223, 0
  br i1 %tobool2.not.i.i.old.i224, label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE10deallocateEv.exit.i.i, label %if.then3.i.i.i227

if.then3.i.i.i227:                                ; preds = %if.then.i11.i.i225, %_ZNK20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE4copyEiiPS2_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %92)
  %.pre7.pre.pre.i226 = load i32, ptr %m_size.i4.i, align 4, !tbaa !22
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i227, %if.then.i11.i.i225, %_ZNK20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE4copyEiiPS2_.exit.i.i
  %.pre7.i228 = phi i32 [ %91, %_ZNK20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE4copyEiiPS2_.exit.i.i ], [ %.pre7.pre.pre.i226, %if.then3.i.i.i227 ], [ %91, %if.then.i11.i.i225 ]
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !18
  store ptr %retval.0.i.i.i207, ptr %m_data.i.i, align 8, !tbaa !21
  store i32 %cond.i.i197, ptr %m_capacity.i.i, align 8, !tbaa !23
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE9push_backERKS2_.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE9push_backERKS2_.exit: ; preds = %sw.bb15, %if.then.i199, %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE10deallocateEv.exit.i.i
  %109 = phi i32 [ %.pre7.i228, %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE10deallocateEv.exit.i.i ], [ %89, %if.then.i199 ], [ %89, %sw.bb15 ]
  %110 = load ptr, ptr %m_data.i.i, align 8, !tbaa !21
  %idxprom.i231 = sext i32 %109 to i64
  %arrayidx.i232 = getelementptr inbounds i32, ptr %110, i64 %idxprom.i231
  store i32 0, ptr %arrayidx.i232, align 4, !tbaa !202
  %inc.i233 = add nsw i32 %109, 1
  store i32 %inc.i233, ptr %m_size.i4.i, align 4, !tbaa !22
  %111 = load i32, ptr %m_size.i4.i38, align 4, !tbaa !28
  %112 = load i32, ptr %m_capacity.i.i39, align 8, !tbaa !29
  %cmp.i236 = icmp eq i32 %111, %112
  br i1 %cmp.i236, label %if.then.i241, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit279

if.then.i241:                                     ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE9push_backERKS2_.exit
  %tobool.not.i.i237 = icmp eq i32 %111, 0
  %mul.i.i238 = shl nsw i32 %111, 1
  %cond.i.i239 = select i1 %tobool.not.i.i237, i32 1, i32 %mul.i.i238
  %cmp.i.i240 = icmp slt i32 %111, %cond.i.i239
  br i1 %cmp.i.i240, label %if.then.i.i243, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit279

if.then.i.i243:                                   ; preds = %if.then.i241
  %tobool.not.i.i.i242 = icmp eq i32 %cond.i.i239, 0
  br i1 %tobool.not.i.i.i242, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i252, label %if.then.i.i.i248

if.then.i.i.i248:                                 ; preds = %if.then.i.i243
  %conv.i.i.i.i244 = sext i32 %cond.i.i239 to i64
  %mul.i.i.i.i245 = shl nsw i64 %conv.i.i.i.i244, 2
  %call.i.i.i.i246 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i245, i32 noundef 16)
  %.pre.i247 = load i32, ptr %m_size.i4.i38, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i252

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i252: ; preds = %if.then.i.i.i248, %if.then.i.i243
  %113 = phi i32 [ %.pre.i247, %if.then.i.i.i248 ], [ %111, %if.then.i.i243 ]
  %retval.0.i.i.i249 = phi ptr [ %call.i.i.i.i246, %if.then.i.i.i248 ], [ null, %if.then.i.i243 ]
  %cmp7.i.i.i250 = icmp sgt i32 %113, 0
  %114 = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  br i1 %cmp7.i.i.i250, label %for.body.lr.ph.i.i.i254, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i265

for.body.lr.ph.i.i.i254:                          ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i252
  %115 = ptrtoint ptr %114 to i64
  %retval.0.i.i.i249427 = ptrtoint ptr %retval.0.i.i.i249 to i64
  %wide.trip.count.i.i.i253 = zext i32 %113 to i64
  %min.iters.check431 = icmp ult i32 %113, 8
  %116 = sub i64 %retval.0.i.i.i249427, %115
  %diff.check428 = icmp ult i64 %116, 32
  %or.cond558 = select i1 %min.iters.check431, i1 true, i1 %diff.check428
  br i1 %or.cond558, label %for.body.i.i.i260.preheader, label %vector.ph432

vector.ph432:                                     ; preds = %for.body.lr.ph.i.i.i254
  %n.vec434 = and i64 %wide.trip.count.i.i.i253, 4294967288
  br label %vector.body437

vector.body437:                                   ; preds = %vector.body437, %vector.ph432
  %index438 = phi i64 [ 0, %vector.ph432 ], [ %index.next441, %vector.body437 ]
  %117 = getelementptr inbounds i32, ptr %retval.0.i.i.i249, i64 %index438
  %118 = getelementptr inbounds i32, ptr %114, i64 %index438
  %wide.load439 = load <4 x i32>, ptr %118, align 4, !tbaa !185
  %119 = getelementptr inbounds i32, ptr %118, i64 4
  %wide.load440 = load <4 x i32>, ptr %119, align 4, !tbaa !185
  store <4 x i32> %wide.load439, ptr %117, align 4, !tbaa !185
  %120 = getelementptr inbounds i32, ptr %117, i64 4
  store <4 x i32> %wide.load440, ptr %120, align 4, !tbaa !185
  %index.next441 = add nuw i64 %index438, 8
  %121 = icmp eq i64 %index.next441, %n.vec434
  br i1 %121, label %middle.block429, label %vector.body437, !llvm.loop !207

middle.block429:                                  ; preds = %vector.body437
  %cmp.n436 = icmp eq i64 %n.vec434, %wide.trip.count.i.i.i253
  br i1 %cmp.n436, label %if.then.i11.i.i269, label %for.body.i.i.i260.preheader

for.body.i.i.i260.preheader:                      ; preds = %for.body.lr.ph.i.i.i254, %middle.block429
  %indvars.iv.i.i.i255.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i254 ], [ %n.vec434, %middle.block429 ]
  %122 = xor i64 %indvars.iv.i.i.i255.ph, -1
  %123 = add nsw i64 %122, %wide.trip.count.i.i.i253
  %xtraiter562 = and i64 %wide.trip.count.i.i.i253, 3
  %lcmp.mod563.not = icmp eq i64 %xtraiter562, 0
  br i1 %lcmp.mod563.not, label %for.body.i.i.i260.prol.loopexit, label %for.body.i.i.i260.prol

for.body.i.i.i260.prol:                           ; preds = %for.body.i.i.i260.preheader, %for.body.i.i.i260.prol
  %indvars.iv.i.i.i255.prol = phi i64 [ %indvars.iv.next.i.i.i258.prol, %for.body.i.i.i260.prol ], [ %indvars.iv.i.i.i255.ph, %for.body.i.i.i260.preheader ]
  %prol.iter564 = phi i64 [ %prol.iter564.next, %for.body.i.i.i260.prol ], [ 0, %for.body.i.i.i260.preheader ]
  %arrayidx.i.i.i256.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i249, i64 %indvars.iv.i.i.i255.prol
  %arrayidx3.i.i.i257.prol = getelementptr inbounds i32, ptr %114, i64 %indvars.iv.i.i.i255.prol
  %124 = load i32, ptr %arrayidx3.i.i.i257.prol, align 4, !tbaa !185
  store i32 %124, ptr %arrayidx.i.i.i256.prol, align 4, !tbaa !185
  %indvars.iv.next.i.i.i258.prol = add nuw nsw i64 %indvars.iv.i.i.i255.prol, 1
  %prol.iter564.next = add i64 %prol.iter564, 1
  %prol.iter564.cmp.not = icmp eq i64 %prol.iter564.next, %xtraiter562
  br i1 %prol.iter564.cmp.not, label %for.body.i.i.i260.prol.loopexit, label %for.body.i.i.i260.prol, !llvm.loop !208

for.body.i.i.i260.prol.loopexit:                  ; preds = %for.body.i.i.i260.prol, %for.body.i.i.i260.preheader
  %indvars.iv.i.i.i255.unr = phi i64 [ %indvars.iv.i.i.i255.ph, %for.body.i.i.i260.preheader ], [ %indvars.iv.next.i.i.i258.prol, %for.body.i.i.i260.prol ]
  %125 = icmp ult i64 %123, 3
  br i1 %125, label %if.then.i11.i.i269, label %for.body.i.i.i260

for.body.i.i.i260:                                ; preds = %for.body.i.i.i260.prol.loopexit, %for.body.i.i.i260
  %indvars.iv.i.i.i255 = phi i64 [ %indvars.iv.next.i.i.i258.3, %for.body.i.i.i260 ], [ %indvars.iv.i.i.i255.unr, %for.body.i.i.i260.prol.loopexit ]
  %arrayidx.i.i.i256 = getelementptr inbounds i32, ptr %retval.0.i.i.i249, i64 %indvars.iv.i.i.i255
  %arrayidx3.i.i.i257 = getelementptr inbounds i32, ptr %114, i64 %indvars.iv.i.i.i255
  %126 = load i32, ptr %arrayidx3.i.i.i257, align 4, !tbaa !185
  store i32 %126, ptr %arrayidx.i.i.i256, align 4, !tbaa !185
  %indvars.iv.next.i.i.i258 = add nuw nsw i64 %indvars.iv.i.i.i255, 1
  %arrayidx.i.i.i256.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i249, i64 %indvars.iv.next.i.i.i258
  %arrayidx3.i.i.i257.1 = getelementptr inbounds i32, ptr %114, i64 %indvars.iv.next.i.i.i258
  %127 = load i32, ptr %arrayidx3.i.i.i257.1, align 4, !tbaa !185
  store i32 %127, ptr %arrayidx.i.i.i256.1, align 4, !tbaa !185
  %indvars.iv.next.i.i.i258.1 = add nuw nsw i64 %indvars.iv.i.i.i255, 2
  %arrayidx.i.i.i256.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i249, i64 %indvars.iv.next.i.i.i258.1
  %arrayidx3.i.i.i257.2 = getelementptr inbounds i32, ptr %114, i64 %indvars.iv.next.i.i.i258.1
  %128 = load i32, ptr %arrayidx3.i.i.i257.2, align 4, !tbaa !185
  store i32 %128, ptr %arrayidx.i.i.i256.2, align 4, !tbaa !185
  %indvars.iv.next.i.i.i258.2 = add nuw nsw i64 %indvars.iv.i.i.i255, 3
  %arrayidx.i.i.i256.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i249, i64 %indvars.iv.next.i.i.i258.2
  %arrayidx3.i.i.i257.3 = getelementptr inbounds i32, ptr %114, i64 %indvars.iv.next.i.i.i258.2
  %129 = load i32, ptr %arrayidx3.i.i.i257.3, align 4, !tbaa !185
  store i32 %129, ptr %arrayidx.i.i.i256.3, align 4, !tbaa !185
  %indvars.iv.next.i.i.i258.3 = add nuw nsw i64 %indvars.iv.i.i.i255, 4
  %exitcond.not.i.i.i259.3 = icmp eq i64 %indvars.iv.next.i.i.i258.3, %wide.trip.count.i.i.i253
  br i1 %exitcond.not.i.i.i259.3, label %if.then.i11.i.i269, label %for.body.i.i.i260, !llvm.loop !209

_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i265: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i252
  %tobool.not.i10.i.i261 = icmp eq ptr %114, null
  %130 = load i8, ptr %m_ownsMemory.i.i33, align 8, !range !159
  %tobool2.not.i.i.i263 = icmp eq i8 %130, 0
  %or.cond.i264 = select i1 %tobool.not.i10.i.i261, i1 true, i1 %tobool2.not.i.i.i263
  br i1 %or.cond.i264, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i274, label %if.then3.i.i.i271

if.then.i11.i.i269:                               ; preds = %for.body.i.i.i260.prol.loopexit, %for.body.i.i.i260, %middle.block429
  %.old.i267 = load i8, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24, !range !159, !noundef !192
  %tobool2.not.i.i.old.i268 = icmp eq i8 %.old.i267, 0
  br i1 %tobool2.not.i.i.old.i268, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i274, label %if.then3.i.i.i271

if.then3.i.i.i271:                                ; preds = %if.then.i11.i.i269, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i265
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %114)
  %.pre7.pre.pre.i270 = load i32, ptr %m_size.i4.i38, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i274

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i274: ; preds = %if.then3.i.i.i271, %if.then.i11.i.i269, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i265
  %.pre7.i272 = phi i32 [ %113, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i265 ], [ %.pre7.pre.pre.i270, %if.then3.i.i.i271 ], [ %113, %if.then.i11.i.i269 ]
  store i8 1, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24
  store ptr %retval.0.i.i.i249, ptr %m_data.i.i31, align 8, !tbaa !27
  store i32 %cond.i.i239, ptr %m_capacity.i.i39, align 8, !tbaa !29
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit279

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit279: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE9push_backERKS2_.exit, %if.then.i241, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i274
  %131 = phi i32 [ %cond.i.i239, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i274 ], [ %111, %if.then.i241 ], [ %112, %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE9push_backERKS2_.exit ]
  %132 = phi i32 [ %.pre7.i272, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i274 ], [ %111, %if.then.i241 ], [ %111, %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE9push_backERKS2_.exit ]
  %133 = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  %idxprom.i276 = sext i32 %132 to i64
  %arrayidx.i277 = getelementptr inbounds i32, ptr %133, i64 %idxprom.i276
  store i32 1, ptr %arrayidx.i277, align 4, !tbaa !185
  %inc.i278 = add nsw i32 %132, 1
  store i32 %inc.i278, ptr %m_size.i4.i38, align 4, !tbaa !28
  %cmp.i282 = icmp eq i32 %inc.i278, %131
  br i1 %cmp.i282, label %if.then.i287, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit325

if.then.i287:                                     ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit279
  %tobool.not.i.i283 = icmp eq i32 %131, 0
  %mul.i.i284 = shl nsw i32 %131, 1
  %cond.i.i285 = select i1 %tobool.not.i.i283, i32 1, i32 %mul.i.i284
  %cmp.i.i286 = icmp slt i32 %131, %cond.i.i285
  br i1 %cmp.i.i286, label %if.then.i.i289, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit325

if.then.i.i289:                                   ; preds = %if.then.i287
  %tobool.not.i.i.i288 = icmp eq i32 %cond.i.i285, 0
  br i1 %tobool.not.i.i.i288, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i298, label %if.then.i.i.i294

if.then.i.i.i294:                                 ; preds = %if.then.i.i289
  %conv.i.i.i.i290 = sext i32 %cond.i.i285 to i64
  %mul.i.i.i.i291 = shl nsw i64 %conv.i.i.i.i290, 2
  %call.i.i.i.i292 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i291, i32 noundef 16)
  %.pre.i293 = load i32, ptr %m_size.i4.i38, align 4, !tbaa !28
  %.pre = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i298

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i298: ; preds = %if.then.i.i.i294, %if.then.i.i289
  %134 = phi ptr [ %.pre, %if.then.i.i.i294 ], [ %133, %if.then.i.i289 ]
  %135 = phi i32 [ %.pre.i293, %if.then.i.i.i294 ], [ %131, %if.then.i.i289 ]
  %retval.0.i.i.i295 = phi ptr [ %call.i.i.i.i292, %if.then.i.i.i294 ], [ null, %if.then.i.i289 ]
  %cmp7.i.i.i296 = icmp sgt i32 %135, 0
  br i1 %cmp7.i.i.i296, label %for.body.lr.ph.i.i.i300, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i311

for.body.lr.ph.i.i.i300:                          ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i298
  %136 = ptrtoint ptr %134 to i64
  %retval.0.i.i.i295443 = ptrtoint ptr %retval.0.i.i.i295 to i64
  %wide.trip.count.i.i.i299 = zext i32 %135 to i64
  %min.iters.check447 = icmp ult i32 %135, 8
  %137 = sub i64 %retval.0.i.i.i295443, %136
  %diff.check444 = icmp ult i64 %137, 32
  %or.cond559 = select i1 %min.iters.check447, i1 true, i1 %diff.check444
  br i1 %or.cond559, label %for.body.i.i.i306.preheader, label %vector.ph448

vector.ph448:                                     ; preds = %for.body.lr.ph.i.i.i300
  %n.vec450 = and i64 %wide.trip.count.i.i.i299, 4294967288
  br label %vector.body453

vector.body453:                                   ; preds = %vector.body453, %vector.ph448
  %index454 = phi i64 [ 0, %vector.ph448 ], [ %index.next457, %vector.body453 ]
  %138 = getelementptr inbounds i32, ptr %retval.0.i.i.i295, i64 %index454
  %139 = getelementptr inbounds i32, ptr %134, i64 %index454
  %wide.load455 = load <4 x i32>, ptr %139, align 4, !tbaa !185
  %140 = getelementptr inbounds i32, ptr %139, i64 4
  %wide.load456 = load <4 x i32>, ptr %140, align 4, !tbaa !185
  store <4 x i32> %wide.load455, ptr %138, align 4, !tbaa !185
  %141 = getelementptr inbounds i32, ptr %138, i64 4
  store <4 x i32> %wide.load456, ptr %141, align 4, !tbaa !185
  %index.next457 = add nuw i64 %index454, 8
  %142 = icmp eq i64 %index.next457, %n.vec450
  br i1 %142, label %middle.block445, label %vector.body453, !llvm.loop !210

middle.block445:                                  ; preds = %vector.body453
  %cmp.n452 = icmp eq i64 %n.vec450, %wide.trip.count.i.i.i299
  br i1 %cmp.n452, label %if.then.i11.i.i315, label %for.body.i.i.i306.preheader

for.body.i.i.i306.preheader:                      ; preds = %for.body.lr.ph.i.i.i300, %middle.block445
  %indvars.iv.i.i.i301.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i300 ], [ %n.vec450, %middle.block445 ]
  %143 = xor i64 %indvars.iv.i.i.i301.ph, -1
  %144 = add nsw i64 %143, %wide.trip.count.i.i.i299
  %xtraiter565 = and i64 %wide.trip.count.i.i.i299, 3
  %lcmp.mod566.not = icmp eq i64 %xtraiter565, 0
  br i1 %lcmp.mod566.not, label %for.body.i.i.i306.prol.loopexit, label %for.body.i.i.i306.prol

for.body.i.i.i306.prol:                           ; preds = %for.body.i.i.i306.preheader, %for.body.i.i.i306.prol
  %indvars.iv.i.i.i301.prol = phi i64 [ %indvars.iv.next.i.i.i304.prol, %for.body.i.i.i306.prol ], [ %indvars.iv.i.i.i301.ph, %for.body.i.i.i306.preheader ]
  %prol.iter567 = phi i64 [ %prol.iter567.next, %for.body.i.i.i306.prol ], [ 0, %for.body.i.i.i306.preheader ]
  %arrayidx.i.i.i302.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i295, i64 %indvars.iv.i.i.i301.prol
  %arrayidx3.i.i.i303.prol = getelementptr inbounds i32, ptr %134, i64 %indvars.iv.i.i.i301.prol
  %145 = load i32, ptr %arrayidx3.i.i.i303.prol, align 4, !tbaa !185
  store i32 %145, ptr %arrayidx.i.i.i302.prol, align 4, !tbaa !185
  %indvars.iv.next.i.i.i304.prol = add nuw nsw i64 %indvars.iv.i.i.i301.prol, 1
  %prol.iter567.next = add i64 %prol.iter567, 1
  %prol.iter567.cmp.not = icmp eq i64 %prol.iter567.next, %xtraiter565
  br i1 %prol.iter567.cmp.not, label %for.body.i.i.i306.prol.loopexit, label %for.body.i.i.i306.prol, !llvm.loop !211

for.body.i.i.i306.prol.loopexit:                  ; preds = %for.body.i.i.i306.prol, %for.body.i.i.i306.preheader
  %indvars.iv.i.i.i301.unr = phi i64 [ %indvars.iv.i.i.i301.ph, %for.body.i.i.i306.preheader ], [ %indvars.iv.next.i.i.i304.prol, %for.body.i.i.i306.prol ]
  %146 = icmp ult i64 %144, 3
  br i1 %146, label %if.then.i11.i.i315, label %for.body.i.i.i306

for.body.i.i.i306:                                ; preds = %for.body.i.i.i306.prol.loopexit, %for.body.i.i.i306
  %indvars.iv.i.i.i301 = phi i64 [ %indvars.iv.next.i.i.i304.3, %for.body.i.i.i306 ], [ %indvars.iv.i.i.i301.unr, %for.body.i.i.i306.prol.loopexit ]
  %arrayidx.i.i.i302 = getelementptr inbounds i32, ptr %retval.0.i.i.i295, i64 %indvars.iv.i.i.i301
  %arrayidx3.i.i.i303 = getelementptr inbounds i32, ptr %134, i64 %indvars.iv.i.i.i301
  %147 = load i32, ptr %arrayidx3.i.i.i303, align 4, !tbaa !185
  store i32 %147, ptr %arrayidx.i.i.i302, align 4, !tbaa !185
  %indvars.iv.next.i.i.i304 = add nuw nsw i64 %indvars.iv.i.i.i301, 1
  %arrayidx.i.i.i302.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i295, i64 %indvars.iv.next.i.i.i304
  %arrayidx3.i.i.i303.1 = getelementptr inbounds i32, ptr %134, i64 %indvars.iv.next.i.i.i304
  %148 = load i32, ptr %arrayidx3.i.i.i303.1, align 4, !tbaa !185
  store i32 %148, ptr %arrayidx.i.i.i302.1, align 4, !tbaa !185
  %indvars.iv.next.i.i.i304.1 = add nuw nsw i64 %indvars.iv.i.i.i301, 2
  %arrayidx.i.i.i302.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i295, i64 %indvars.iv.next.i.i.i304.1
  %arrayidx3.i.i.i303.2 = getelementptr inbounds i32, ptr %134, i64 %indvars.iv.next.i.i.i304.1
  %149 = load i32, ptr %arrayidx3.i.i.i303.2, align 4, !tbaa !185
  store i32 %149, ptr %arrayidx.i.i.i302.2, align 4, !tbaa !185
  %indvars.iv.next.i.i.i304.2 = add nuw nsw i64 %indvars.iv.i.i.i301, 3
  %arrayidx.i.i.i302.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i295, i64 %indvars.iv.next.i.i.i304.2
  %arrayidx3.i.i.i303.3 = getelementptr inbounds i32, ptr %134, i64 %indvars.iv.next.i.i.i304.2
  %150 = load i32, ptr %arrayidx3.i.i.i303.3, align 4, !tbaa !185
  store i32 %150, ptr %arrayidx.i.i.i302.3, align 4, !tbaa !185
  %indvars.iv.next.i.i.i304.3 = add nuw nsw i64 %indvars.iv.i.i.i301, 4
  %exitcond.not.i.i.i305.3 = icmp eq i64 %indvars.iv.next.i.i.i304.3, %wide.trip.count.i.i.i299
  br i1 %exitcond.not.i.i.i305.3, label %if.then.i11.i.i315, label %for.body.i.i.i306, !llvm.loop !212

_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i311: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i298
  %tobool.not.i10.i.i307 = icmp eq ptr %134, null
  %151 = load i8, ptr %m_ownsMemory.i.i33, align 8, !range !159
  %tobool2.not.i.i.i309 = icmp eq i8 %151, 0
  %or.cond.i310 = select i1 %tobool.not.i10.i.i307, i1 true, i1 %tobool2.not.i.i.i309
  br i1 %or.cond.i310, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i320, label %if.then3.i.i.i317

if.then.i11.i.i315:                               ; preds = %for.body.i.i.i306.prol.loopexit, %for.body.i.i.i306, %middle.block445
  %.old.i313 = load i8, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24, !range !159, !noundef !192
  %tobool2.not.i.i.old.i314 = icmp eq i8 %.old.i313, 0
  br i1 %tobool2.not.i.i.old.i314, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i320, label %if.then3.i.i.i317

if.then3.i.i.i317:                                ; preds = %if.then.i11.i.i315, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i311
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %134)
  %.pre7.pre.pre.i316 = load i32, ptr %m_size.i4.i38, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i320

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i320: ; preds = %if.then3.i.i.i317, %if.then.i11.i.i315, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i311
  %.pre7.i318 = phi i32 [ %135, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i311 ], [ %.pre7.pre.pre.i316, %if.then3.i.i.i317 ], [ %135, %if.then.i11.i.i315 ]
  store i8 1, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24
  store ptr %retval.0.i.i.i295, ptr %m_data.i.i31, align 8, !tbaa !27
  store i32 %cond.i.i285, ptr %m_capacity.i.i39, align 8, !tbaa !29
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit325

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit325: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit279, %if.then.i287, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i320
  %152 = phi i32 [ %cond.i.i285, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i320 ], [ %131, %if.then.i287 ], [ %131, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit279 ]
  %153 = phi ptr [ %retval.0.i.i.i295, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i320 ], [ %133, %if.then.i287 ], [ %133, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit279 ]
  %154 = phi i32 [ %.pre7.i318, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i320 ], [ %131, %if.then.i287 ], [ %inc.i278, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit279 ]
  %idxprom.i322 = sext i32 %154 to i64
  %arrayidx.i323 = getelementptr inbounds i32, ptr %153, i64 %idxprom.i322
  store i32 2, ptr %arrayidx.i323, align 4, !tbaa !185
  %inc.i324 = add nsw i32 %154, 1
  store i32 %inc.i324, ptr %m_size.i4.i38, align 4, !tbaa !28
  %cmp.i328 = icmp eq i32 %inc.i324, %152
  br i1 %cmp.i328, label %if.then.i333, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit371

if.then.i333:                                     ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit325
  %tobool.not.i.i329 = icmp eq i32 %152, 0
  %mul.i.i330 = shl nsw i32 %152, 1
  %cond.i.i331 = select i1 %tobool.not.i.i329, i32 1, i32 %mul.i.i330
  %cmp.i.i332 = icmp slt i32 %152, %cond.i.i331
  br i1 %cmp.i.i332, label %if.then.i.i335, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit371

if.then.i.i335:                                   ; preds = %if.then.i333
  %tobool.not.i.i.i334 = icmp eq i32 %cond.i.i331, 0
  br i1 %tobool.not.i.i.i334, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i344, label %if.then.i.i.i340

if.then.i.i.i340:                                 ; preds = %if.then.i.i335
  %conv.i.i.i.i336 = sext i32 %cond.i.i331 to i64
  %mul.i.i.i.i337 = shl nsw i64 %conv.i.i.i.i336, 2
  %call.i.i.i.i338 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i337, i32 noundef 16)
  %.pre.i339 = load i32, ptr %m_size.i4.i38, align 4, !tbaa !28
  %.pre418 = load ptr, ptr %m_data.i.i31, align 8, !tbaa !27
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i344

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i344: ; preds = %if.then.i.i.i340, %if.then.i.i335
  %155 = phi ptr [ %.pre418, %if.then.i.i.i340 ], [ %153, %if.then.i.i335 ]
  %156 = phi i32 [ %.pre.i339, %if.then.i.i.i340 ], [ %152, %if.then.i.i335 ]
  %retval.0.i.i.i341 = phi ptr [ %call.i.i.i.i338, %if.then.i.i.i340 ], [ null, %if.then.i.i335 ]
  %cmp7.i.i.i342 = icmp sgt i32 %156, 0
  br i1 %cmp7.i.i.i342, label %for.body.lr.ph.i.i.i346, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i357

for.body.lr.ph.i.i.i346:                          ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i344
  %157 = ptrtoint ptr %155 to i64
  %retval.0.i.i.i341459 = ptrtoint ptr %retval.0.i.i.i341 to i64
  %wide.trip.count.i.i.i345 = zext i32 %156 to i64
  %min.iters.check463 = icmp ult i32 %156, 8
  %158 = sub i64 %retval.0.i.i.i341459, %157
  %diff.check460 = icmp ult i64 %158, 32
  %or.cond560 = select i1 %min.iters.check463, i1 true, i1 %diff.check460
  br i1 %or.cond560, label %for.body.i.i.i352.preheader, label %vector.ph464

vector.ph464:                                     ; preds = %for.body.lr.ph.i.i.i346
  %n.vec466 = and i64 %wide.trip.count.i.i.i345, 4294967288
  br label %vector.body469

vector.body469:                                   ; preds = %vector.body469, %vector.ph464
  %index470 = phi i64 [ 0, %vector.ph464 ], [ %index.next473, %vector.body469 ]
  %159 = getelementptr inbounds i32, ptr %retval.0.i.i.i341, i64 %index470
  %160 = getelementptr inbounds i32, ptr %155, i64 %index470
  %wide.load471 = load <4 x i32>, ptr %160, align 4, !tbaa !185
  %161 = getelementptr inbounds i32, ptr %160, i64 4
  %wide.load472 = load <4 x i32>, ptr %161, align 4, !tbaa !185
  store <4 x i32> %wide.load471, ptr %159, align 4, !tbaa !185
  %162 = getelementptr inbounds i32, ptr %159, i64 4
  store <4 x i32> %wide.load472, ptr %162, align 4, !tbaa !185
  %index.next473 = add nuw i64 %index470, 8
  %163 = icmp eq i64 %index.next473, %n.vec466
  br i1 %163, label %middle.block461, label %vector.body469, !llvm.loop !213

middle.block461:                                  ; preds = %vector.body469
  %cmp.n468 = icmp eq i64 %n.vec466, %wide.trip.count.i.i.i345
  br i1 %cmp.n468, label %if.then.i11.i.i361, label %for.body.i.i.i352.preheader

for.body.i.i.i352.preheader:                      ; preds = %for.body.lr.ph.i.i.i346, %middle.block461
  %indvars.iv.i.i.i347.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i346 ], [ %n.vec466, %middle.block461 ]
  %164 = xor i64 %indvars.iv.i.i.i347.ph, -1
  %165 = add nsw i64 %164, %wide.trip.count.i.i.i345
  %xtraiter568 = and i64 %wide.trip.count.i.i.i345, 3
  %lcmp.mod569.not = icmp eq i64 %xtraiter568, 0
  br i1 %lcmp.mod569.not, label %for.body.i.i.i352.prol.loopexit, label %for.body.i.i.i352.prol

for.body.i.i.i352.prol:                           ; preds = %for.body.i.i.i352.preheader, %for.body.i.i.i352.prol
  %indvars.iv.i.i.i347.prol = phi i64 [ %indvars.iv.next.i.i.i350.prol, %for.body.i.i.i352.prol ], [ %indvars.iv.i.i.i347.ph, %for.body.i.i.i352.preheader ]
  %prol.iter570 = phi i64 [ %prol.iter570.next, %for.body.i.i.i352.prol ], [ 0, %for.body.i.i.i352.preheader ]
  %arrayidx.i.i.i348.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i341, i64 %indvars.iv.i.i.i347.prol
  %arrayidx3.i.i.i349.prol = getelementptr inbounds i32, ptr %155, i64 %indvars.iv.i.i.i347.prol
  %166 = load i32, ptr %arrayidx3.i.i.i349.prol, align 4, !tbaa !185
  store i32 %166, ptr %arrayidx.i.i.i348.prol, align 4, !tbaa !185
  %indvars.iv.next.i.i.i350.prol = add nuw nsw i64 %indvars.iv.i.i.i347.prol, 1
  %prol.iter570.next = add i64 %prol.iter570, 1
  %prol.iter570.cmp.not = icmp eq i64 %prol.iter570.next, %xtraiter568
  br i1 %prol.iter570.cmp.not, label %for.body.i.i.i352.prol.loopexit, label %for.body.i.i.i352.prol, !llvm.loop !214

for.body.i.i.i352.prol.loopexit:                  ; preds = %for.body.i.i.i352.prol, %for.body.i.i.i352.preheader
  %indvars.iv.i.i.i347.unr = phi i64 [ %indvars.iv.i.i.i347.ph, %for.body.i.i.i352.preheader ], [ %indvars.iv.next.i.i.i350.prol, %for.body.i.i.i352.prol ]
  %167 = icmp ult i64 %165, 3
  br i1 %167, label %if.then.i11.i.i361, label %for.body.i.i.i352

for.body.i.i.i352:                                ; preds = %for.body.i.i.i352.prol.loopexit, %for.body.i.i.i352
  %indvars.iv.i.i.i347 = phi i64 [ %indvars.iv.next.i.i.i350.3, %for.body.i.i.i352 ], [ %indvars.iv.i.i.i347.unr, %for.body.i.i.i352.prol.loopexit ]
  %arrayidx.i.i.i348 = getelementptr inbounds i32, ptr %retval.0.i.i.i341, i64 %indvars.iv.i.i.i347
  %arrayidx3.i.i.i349 = getelementptr inbounds i32, ptr %155, i64 %indvars.iv.i.i.i347
  %168 = load i32, ptr %arrayidx3.i.i.i349, align 4, !tbaa !185
  store i32 %168, ptr %arrayidx.i.i.i348, align 4, !tbaa !185
  %indvars.iv.next.i.i.i350 = add nuw nsw i64 %indvars.iv.i.i.i347, 1
  %arrayidx.i.i.i348.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i341, i64 %indvars.iv.next.i.i.i350
  %arrayidx3.i.i.i349.1 = getelementptr inbounds i32, ptr %155, i64 %indvars.iv.next.i.i.i350
  %169 = load i32, ptr %arrayidx3.i.i.i349.1, align 4, !tbaa !185
  store i32 %169, ptr %arrayidx.i.i.i348.1, align 4, !tbaa !185
  %indvars.iv.next.i.i.i350.1 = add nuw nsw i64 %indvars.iv.i.i.i347, 2
  %arrayidx.i.i.i348.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i341, i64 %indvars.iv.next.i.i.i350.1
  %arrayidx3.i.i.i349.2 = getelementptr inbounds i32, ptr %155, i64 %indvars.iv.next.i.i.i350.1
  %170 = load i32, ptr %arrayidx3.i.i.i349.2, align 4, !tbaa !185
  store i32 %170, ptr %arrayidx.i.i.i348.2, align 4, !tbaa !185
  %indvars.iv.next.i.i.i350.2 = add nuw nsw i64 %indvars.iv.i.i.i347, 3
  %arrayidx.i.i.i348.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i341, i64 %indvars.iv.next.i.i.i350.2
  %arrayidx3.i.i.i349.3 = getelementptr inbounds i32, ptr %155, i64 %indvars.iv.next.i.i.i350.2
  %171 = load i32, ptr %arrayidx3.i.i.i349.3, align 4, !tbaa !185
  store i32 %171, ptr %arrayidx.i.i.i348.3, align 4, !tbaa !185
  %indvars.iv.next.i.i.i350.3 = add nuw nsw i64 %indvars.iv.i.i.i347, 4
  %exitcond.not.i.i.i351.3 = icmp eq i64 %indvars.iv.next.i.i.i350.3, %wide.trip.count.i.i.i345
  br i1 %exitcond.not.i.i.i351.3, label %if.then.i11.i.i361, label %for.body.i.i.i352, !llvm.loop !215

_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i357: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i344
  %tobool.not.i10.i.i353 = icmp eq ptr %155, null
  %172 = load i8, ptr %m_ownsMemory.i.i33, align 8, !range !159
  %tobool2.not.i.i.i355 = icmp eq i8 %172, 0
  %or.cond.i356 = select i1 %tobool.not.i10.i.i353, i1 true, i1 %tobool2.not.i.i.i355
  br i1 %or.cond.i356, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i366, label %if.then3.i.i.i363

if.then.i11.i.i361:                               ; preds = %for.body.i.i.i352.prol.loopexit, %for.body.i.i.i352, %middle.block461
  %.old.i359 = load i8, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24, !range !159, !noundef !192
  %tobool2.not.i.i.old.i360 = icmp eq i8 %.old.i359, 0
  br i1 %tobool2.not.i.i.old.i360, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i366, label %if.then3.i.i.i363

if.then3.i.i.i363:                                ; preds = %if.then.i11.i.i361, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i357
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %155)
  %.pre7.pre.pre.i362 = load i32, ptr %m_size.i4.i38, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i366

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i366: ; preds = %if.then3.i.i.i363, %if.then.i11.i.i361, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i357
  %.pre7.i364 = phi i32 [ %156, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i357 ], [ %.pre7.pre.pre.i362, %if.then3.i.i.i363 ], [ %156, %if.then.i11.i.i361 ]
  store i8 1, ptr %m_ownsMemory.i.i33, align 8, !tbaa !24
  store ptr %retval.0.i.i.i341, ptr %m_data.i.i31, align 8, !tbaa !27
  store i32 %cond.i.i331, ptr %m_capacity.i.i39, align 8, !tbaa !29
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit371

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit371: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit325, %if.then.i333, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i366
  %173 = phi ptr [ %retval.0.i.i.i341, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i366 ], [ %153, %if.then.i333 ], [ %153, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit325 ]
  %174 = phi i32 [ %.pre7.i364, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i366 ], [ %152, %if.then.i333 ], [ %inc.i324, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit325 ]
  %idxprom.i368 = sext i32 %174 to i64
  %arrayidx.i369 = getelementptr inbounds i32, ptr %173, i64 %idxprom.i368
  store i32 3, ptr %arrayidx.i369, align 4, !tbaa !185
  %inc.i370 = add nsw i32 %174, 1
  store i32 %inc.i370, ptr %m_size.i4.i38, align 4, !tbaa !28
  %175 = load i32, ptr %m_size.i4.i47, align 4, !tbaa !28
  %176 = load i32, ptr %m_capacity.i.i48, align 8, !tbaa !29
  %cmp.i374 = icmp eq i32 %175, %176
  br i1 %cmp.i374, label %if.then.i379, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit417

if.then.i379:                                     ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit371
  %tobool.not.i.i375 = icmp eq i32 %175, 0
  %mul.i.i376 = shl nsw i32 %175, 1
  %cond.i.i377 = select i1 %tobool.not.i.i375, i32 1, i32 %mul.i.i376
  %cmp.i.i378 = icmp slt i32 %175, %cond.i.i377
  br i1 %cmp.i.i378, label %if.then.i.i381, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit417

if.then.i.i381:                                   ; preds = %if.then.i379
  %tobool.not.i.i.i380 = icmp eq i32 %cond.i.i377, 0
  br i1 %tobool.not.i.i.i380, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i390, label %if.then.i.i.i386

if.then.i.i.i386:                                 ; preds = %if.then.i.i381
  %conv.i.i.i.i382 = sext i32 %cond.i.i377 to i64
  %mul.i.i.i.i383 = shl nsw i64 %conv.i.i.i.i382, 2
  %call.i.i.i.i384 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i383, i32 noundef 16)
  %.pre.i385 = load i32, ptr %m_size.i4.i47, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i390

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i390: ; preds = %if.then.i.i.i386, %if.then.i.i381
  %177 = phi i32 [ %.pre.i385, %if.then.i.i.i386 ], [ %175, %if.then.i.i381 ]
  %retval.0.i.i.i387 = phi ptr [ %call.i.i.i.i384, %if.then.i.i.i386 ], [ null, %if.then.i.i381 ]
  %cmp7.i.i.i388 = icmp sgt i32 %177, 0
  %178 = load ptr, ptr %m_data.i.i40, align 8, !tbaa !27
  br i1 %cmp7.i.i.i388, label %for.body.lr.ph.i.i.i392, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i403

for.body.lr.ph.i.i.i392:                          ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i390
  %179 = ptrtoint ptr %178 to i64
  %retval.0.i.i.i387475 = ptrtoint ptr %retval.0.i.i.i387 to i64
  %wide.trip.count.i.i.i391 = zext i32 %177 to i64
  %min.iters.check479 = icmp ult i32 %177, 8
  %180 = sub i64 %retval.0.i.i.i387475, %179
  %diff.check476 = icmp ult i64 %180, 32
  %or.cond561 = select i1 %min.iters.check479, i1 true, i1 %diff.check476
  br i1 %or.cond561, label %for.body.i.i.i398.preheader, label %vector.ph480

vector.ph480:                                     ; preds = %for.body.lr.ph.i.i.i392
  %n.vec482 = and i64 %wide.trip.count.i.i.i391, 4294967288
  br label %vector.body485

vector.body485:                                   ; preds = %vector.body485, %vector.ph480
  %index486 = phi i64 [ 0, %vector.ph480 ], [ %index.next489, %vector.body485 ]
  %181 = getelementptr inbounds i32, ptr %retval.0.i.i.i387, i64 %index486
  %182 = getelementptr inbounds i32, ptr %178, i64 %index486
  %wide.load487 = load <4 x i32>, ptr %182, align 4, !tbaa !185
  %183 = getelementptr inbounds i32, ptr %182, i64 4
  %wide.load488 = load <4 x i32>, ptr %183, align 4, !tbaa !185
  store <4 x i32> %wide.load487, ptr %181, align 4, !tbaa !185
  %184 = getelementptr inbounds i32, ptr %181, i64 4
  store <4 x i32> %wide.load488, ptr %184, align 4, !tbaa !185
  %index.next489 = add nuw i64 %index486, 8
  %185 = icmp eq i64 %index.next489, %n.vec482
  br i1 %185, label %middle.block477, label %vector.body485, !llvm.loop !216

middle.block477:                                  ; preds = %vector.body485
  %cmp.n484 = icmp eq i64 %n.vec482, %wide.trip.count.i.i.i391
  br i1 %cmp.n484, label %if.then.i11.i.i407, label %for.body.i.i.i398.preheader

for.body.i.i.i398.preheader:                      ; preds = %for.body.lr.ph.i.i.i392, %middle.block477
  %indvars.iv.i.i.i393.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i392 ], [ %n.vec482, %middle.block477 ]
  %186 = xor i64 %indvars.iv.i.i.i393.ph, -1
  %187 = add nsw i64 %186, %wide.trip.count.i.i.i391
  %xtraiter571 = and i64 %wide.trip.count.i.i.i391, 3
  %lcmp.mod572.not = icmp eq i64 %xtraiter571, 0
  br i1 %lcmp.mod572.not, label %for.body.i.i.i398.prol.loopexit, label %for.body.i.i.i398.prol

for.body.i.i.i398.prol:                           ; preds = %for.body.i.i.i398.preheader, %for.body.i.i.i398.prol
  %indvars.iv.i.i.i393.prol = phi i64 [ %indvars.iv.next.i.i.i396.prol, %for.body.i.i.i398.prol ], [ %indvars.iv.i.i.i393.ph, %for.body.i.i.i398.preheader ]
  %prol.iter573 = phi i64 [ %prol.iter573.next, %for.body.i.i.i398.prol ], [ 0, %for.body.i.i.i398.preheader ]
  %arrayidx.i.i.i394.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i387, i64 %indvars.iv.i.i.i393.prol
  %arrayidx3.i.i.i395.prol = getelementptr inbounds i32, ptr %178, i64 %indvars.iv.i.i.i393.prol
  %188 = load i32, ptr %arrayidx3.i.i.i395.prol, align 4, !tbaa !185
  store i32 %188, ptr %arrayidx.i.i.i394.prol, align 4, !tbaa !185
  %indvars.iv.next.i.i.i396.prol = add nuw nsw i64 %indvars.iv.i.i.i393.prol, 1
  %prol.iter573.next = add i64 %prol.iter573, 1
  %prol.iter573.cmp.not = icmp eq i64 %prol.iter573.next, %xtraiter571
  br i1 %prol.iter573.cmp.not, label %for.body.i.i.i398.prol.loopexit, label %for.body.i.i.i398.prol, !llvm.loop !217

for.body.i.i.i398.prol.loopexit:                  ; preds = %for.body.i.i.i398.prol, %for.body.i.i.i398.preheader
  %indvars.iv.i.i.i393.unr = phi i64 [ %indvars.iv.i.i.i393.ph, %for.body.i.i.i398.preheader ], [ %indvars.iv.next.i.i.i396.prol, %for.body.i.i.i398.prol ]
  %189 = icmp ult i64 %187, 3
  br i1 %189, label %if.then.i11.i.i407, label %for.body.i.i.i398

for.body.i.i.i398:                                ; preds = %for.body.i.i.i398.prol.loopexit, %for.body.i.i.i398
  %indvars.iv.i.i.i393 = phi i64 [ %indvars.iv.next.i.i.i396.3, %for.body.i.i.i398 ], [ %indvars.iv.i.i.i393.unr, %for.body.i.i.i398.prol.loopexit ]
  %arrayidx.i.i.i394 = getelementptr inbounds i32, ptr %retval.0.i.i.i387, i64 %indvars.iv.i.i.i393
  %arrayidx3.i.i.i395 = getelementptr inbounds i32, ptr %178, i64 %indvars.iv.i.i.i393
  %190 = load i32, ptr %arrayidx3.i.i.i395, align 4, !tbaa !185
  store i32 %190, ptr %arrayidx.i.i.i394, align 4, !tbaa !185
  %indvars.iv.next.i.i.i396 = add nuw nsw i64 %indvars.iv.i.i.i393, 1
  %arrayidx.i.i.i394.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i387, i64 %indvars.iv.next.i.i.i396
  %arrayidx3.i.i.i395.1 = getelementptr inbounds i32, ptr %178, i64 %indvars.iv.next.i.i.i396
  %191 = load i32, ptr %arrayidx3.i.i.i395.1, align 4, !tbaa !185
  store i32 %191, ptr %arrayidx.i.i.i394.1, align 4, !tbaa !185
  %indvars.iv.next.i.i.i396.1 = add nuw nsw i64 %indvars.iv.i.i.i393, 2
  %arrayidx.i.i.i394.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i387, i64 %indvars.iv.next.i.i.i396.1
  %arrayidx3.i.i.i395.2 = getelementptr inbounds i32, ptr %178, i64 %indvars.iv.next.i.i.i396.1
  %192 = load i32, ptr %arrayidx3.i.i.i395.2, align 4, !tbaa !185
  store i32 %192, ptr %arrayidx.i.i.i394.2, align 4, !tbaa !185
  %indvars.iv.next.i.i.i396.2 = add nuw nsw i64 %indvars.iv.i.i.i393, 3
  %arrayidx.i.i.i394.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i387, i64 %indvars.iv.next.i.i.i396.2
  %arrayidx3.i.i.i395.3 = getelementptr inbounds i32, ptr %178, i64 %indvars.iv.next.i.i.i396.2
  %193 = load i32, ptr %arrayidx3.i.i.i395.3, align 4, !tbaa !185
  store i32 %193, ptr %arrayidx.i.i.i394.3, align 4, !tbaa !185
  %indvars.iv.next.i.i.i396.3 = add nuw nsw i64 %indvars.iv.i.i.i393, 4
  %exitcond.not.i.i.i397.3 = icmp eq i64 %indvars.iv.next.i.i.i396.3, %wide.trip.count.i.i.i391
  br i1 %exitcond.not.i.i.i397.3, label %if.then.i11.i.i407, label %for.body.i.i.i398, !llvm.loop !218

_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i403: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE8allocateEi.exit.i.i390
  %tobool.not.i10.i.i399 = icmp eq ptr %178, null
  %194 = load i8, ptr %m_ownsMemory.i.i42, align 8, !range !159
  %tobool2.not.i.i.i401 = icmp eq i8 %194, 0
  %or.cond.i402 = select i1 %tobool.not.i10.i.i399, i1 true, i1 %tobool2.not.i.i.i401
  br i1 %or.cond.i402, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i412, label %if.then3.i.i.i409

if.then.i11.i.i407:                               ; preds = %for.body.i.i.i398.prol.loopexit, %for.body.i.i.i398, %middle.block477
  %.old.i405 = load i8, ptr %m_ownsMemory.i.i42, align 8, !tbaa !24, !range !159, !noundef !192
  %tobool2.not.i.i.old.i406 = icmp eq i8 %.old.i405, 0
  br i1 %tobool2.not.i.i.old.i406, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i412, label %if.then3.i.i.i409

if.then3.i.i.i409:                                ; preds = %if.then.i11.i.i407, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i403
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %178)
  %.pre7.pre.pre.i408 = load i32, ptr %m_size.i4.i47, align 4, !tbaa !28
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i412

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i412: ; preds = %if.then3.i.i.i409, %if.then.i11.i.i407, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i403
  %.pre7.i410 = phi i32 [ %177, %_ZNK20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE4copyEiiPS2_.exit.i.i403 ], [ %.pre7.pre.pre.i408, %if.then3.i.i.i409 ], [ %177, %if.then.i11.i.i407 ]
  store i8 1, ptr %m_ownsMemory.i.i42, align 8, !tbaa !24
  store ptr %retval.0.i.i.i387, ptr %m_data.i.i40, align 8, !tbaa !27
  store i32 %cond.i.i377, ptr %m_capacity.i.i48, align 8, !tbaa !29
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit417

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit417: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit371, %if.then.i379, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i412
  %195 = phi i32 [ %.pre7.i410, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i412 ], [ %175, %if.then.i379 ], [ %175, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit371 ]
  %196 = load ptr, ptr %m_data.i.i40, align 8, !tbaa !27
  br label %sw.epilog.sink.split

sw.epilog.sink.split:                             ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i186, %if.then.i153, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit145, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit417
  %.sink423 = phi i32 [ %195, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit417 ], [ %.pre7.i184, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i186 ], [ %68, %if.then.i153 ], [ %inc.i144, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit145 ]
  %.sink422 = phi ptr [ %196, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit417 ], [ %retval.0.i.i.i161, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i186 ], [ %69, %if.then.i153 ], [ %69, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit145 ]
  %m_size.i4.i47.sink = phi ptr [ %m_size.i4.i47, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit417 ], [ %m_size.i4.i38, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE10deallocateEv.exit.i.i186 ], [ %m_size.i4.i38, %if.then.i153 ], [ %m_size.i4.i38, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE9push_backERKS2_.exit145 ]
  %idxprom.i414 = sext i32 %.sink423 to i64
  %arrayidx.i415 = getelementptr inbounds i32, ptr %.sink422, i64 %idxprom.i414
  store i32 0, ptr %arrayidx.i415, align 4, !tbaa !185
  %inc.i416 = add nsw i32 %.sink423, 1
  store i32 %inc.i416, ptr %m_size.i4.i47.sink, align 4, !tbaa !28
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.epilog.sink.split, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit49
  ret void
}

; Function Attrs: uwtable
define dso_local noundef ptr @_ZN10btSoftBody14appendMaterialEv(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this) local_unnamed_addr #4 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %call = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 24, i32 noundef 16)
  store ptr null, ptr %call, align 8, !tbaa !174
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !120
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !119
  %2 = load ptr, ptr %1, align 8, !tbaa !219
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %call, ptr noundef nonnull align 8 dereferenceable(24) %2, i64 24, i1 false)
  br label %if.end

if.else:                                          ; preds = %entry
  %3 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %3, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_.exit, !prof !173

init.check.i:                                     ; preds = %if.else
  %4 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_E9zerodummy) #38
  %tobool.not.i = icmp eq i32 %4, 0
  br i1 %tobool.not.i, label %_ZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_.exit, label %init.i

init.i:                                           ; preds = %init.check.i
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_E9zerodummy, align 8, !tbaa !174
  %5 = tail call ptr @llvm.invariant.start.p0(i64 24, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_E9zerodummy)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_.exit

_ZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_.exit: ; preds = %if.else, %init.check.i, %init.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %call, ptr noundef nonnull align 8 dereferenceable(24) @_ZZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_E9zerodummy, i64 24, i1 false)
  br label %if.end

if.end:                                           ; preds = %_ZL14ZeroInitializeIN10btSoftBody8MaterialEEvRT_.exit, %if.then
  %6 = load i32, ptr %m_size.i, align 4, !tbaa !120
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 3
  %7 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !121
  %cmp.i = icmp eq i32 %6, %7
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE9push_backERKS2_.exit

if.then.i:                                        ; preds = %if.end
  %tobool.not.i.i = icmp eq i32 %6, 0
  %mul.i.i = shl nsw i32 %6, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %6, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE9push_backERKS2_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 3
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i, align 4, !tbaa !120
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %8 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %6, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %8, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %wide.trip.count.i.i.i = zext i32 %8 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 3
  %9 = icmp ult i32 %8, 4
  br i1 %9, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967292
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.3, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %10 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !119
  %arrayidx3.i.i.i = getelementptr inbounds ptr, ptr %10, i64 %indvars.iv.i.i.i
  %11 = load ptr, ptr %arrayidx3.i.i.i, align 8, !tbaa !219
  store ptr %11, ptr %arrayidx.i.i.i, align 8, !tbaa !219
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %12 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !119
  %arrayidx3.i.i.i.1 = getelementptr inbounds ptr, ptr %12, i64 %indvars.iv.next.i.i.i
  %13 = load ptr, ptr %arrayidx3.i.i.i.1, align 8, !tbaa !219
  store ptr %13, ptr %arrayidx.i.i.i.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.1 = or i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %14 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !119
  %arrayidx3.i.i.i.2 = getelementptr inbounds ptr, ptr %14, i64 %indvars.iv.next.i.i.i.1
  %15 = load ptr, ptr %arrayidx3.i.i.i.2, align 8, !tbaa !219
  store ptr %15, ptr %arrayidx.i.i.i.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.2 = or i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %16 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !119
  %arrayidx3.i.i.i.3 = getelementptr inbounds ptr, ptr %16, i64 %indvars.iv.next.i.i.i.2
  %17 = load ptr, ptr %arrayidx3.i.i.i.3, align 8, !tbaa !219
  store ptr %17, ptr %arrayidx.i.i.i.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil
  %indvars.iv.i.i.i.epil = phi i64 [ %indvars.iv.next.i.i.i.epil, %for.body.i.i.i.epil ], [ %indvars.iv.i.i.i.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.i.i.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %arrayidx.i.i.i.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.epil
  %18 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !119
  %arrayidx3.i.i.i.epil = getelementptr inbounds ptr, ptr %18, i64 %indvars.iv.i.i.i.epil
  %19 = load ptr, ptr %arrayidx3.i.i.i.epil, align 8, !tbaa !219
  store ptr %19, ptr %arrayidx.i.i.i.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.epil = add nuw nsw i64 %indvars.iv.i.i.i.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil, !llvm.loop !220

_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %20 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !119
  %tobool.not.i10.i.i = icmp eq ptr %20, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 6
  %21 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %21, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %20)
  %.pre7.pre.i = load i32, ptr %m_size.i, align 4, !tbaa !120
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i
  %.pre7.i = phi i32 [ %.pre7.pre.i, %if.then3.i.i.i ], [ %8, %_ZNK20btAlignedObjectArrayIPN10btSoftBody8MaterialEE4copyEiiPS2_.exit.i.i ]
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !118
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !119
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !121
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE9push_backERKS2_.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE9push_backERKS2_.exit: ; preds = %if.end, %if.then.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE10deallocateEv.exit.i.i
  %22 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE10deallocateEv.exit.i.i ], [ %6, %if.then.i ], [ %6, %if.end ]
  %m_data.i6 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %23 = load ptr, ptr %m_data.i6, align 8, !tbaa !119
  %idxprom.i = sext i32 %22 to i64
  %arrayidx.i = getelementptr inbounds ptr, ptr %23, i64 %idxprom.i
  store ptr %call, ptr %arrayidx.i, align 8, !tbaa !219
  %inc.i = add nsw i32 %22, 1
  store i32 %inc.i, ptr %m_size.i, align 4, !tbaa !120
  ret ptr %call
}

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #6

declare noundef ptr @_ZN6btDbvt6insertERK12btDbvtAabbMmPv(ptr noundef nonnull align 8 dereferenceable(64), ptr noundef nonnull align 4 dereferenceable(32), ptr noundef) local_unnamed_addr #1

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody12updateBoundsEv(ptr noundef nonnull align 8 dereferenceable(1496) %this) local_unnamed_addr #0 align 2 {
entry:
  %m_ndbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  %0 = load ptr, ptr %m_ndbvt, align 8, !tbaa !162
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.else, label %if.then

if.then:                                          ; preds = %entry
  %mx.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %0, i64 0, i32 1
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %1 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable = load ptr, ptr %1, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 11
  %2 = load ptr, ptr %vfn, align 8
  %call9 = tail call noundef float %2(ptr noundef nonnull align 8 dereferenceable(24) %1)
  %3 = load <2 x float>, ptr %0, align 4, !tbaa !137
  %4 = insertelement <2 x float> poison, float %call9, i64 0
  %5 = shufflevector <2 x float> %4, <2 x float> poison, <2 x i32> zeroinitializer
  %6 = fsub <2 x float> %3, %5
  %arrayidx11.i = getelementptr inbounds [4 x float], ptr %0, i64 0, i64 2
  %7 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %sub14.i = fsub float %7, %call9
  %retval.sroa.3.12.vec.insert.i45 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i, i64 0
  %m_bounds = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  store <2 x float> %6, ptr %m_bounds, align 4, !tbaa.struct !163
  %ref.tmp12.sroa.4.0.arrayidx.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 0, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i45, ptr %ref.tmp12.sroa.4.0.arrayidx.sroa_idx, align 4, !tbaa.struct !165
  %8 = load <2 x float>, ptr %mx.i, align 4, !tbaa !137
  %9 = fadd <2 x float> %5, %8
  %arrayidx11.i50 = getelementptr inbounds %struct.btDbvtAabbMm, ptr %0, i64 0, i32 1, i32 0, i64 2
  %10 = load float, ptr %arrayidx11.i50, align 4, !tbaa !137
  %add14.i = fadd float %call9, %10
  %retval.sroa.3.12.vec.insert.i54 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i, i64 0
  %arrayidx19 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1
  store <2 x float> %9, ptr %arrayidx19, align 4, !tbaa.struct !163
  %ref.tmp15.sroa.4.0.arrayidx19.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i54, ptr %ref.tmp15.sroa.4.0.arrayidx19.sroa_idx, align 4, !tbaa.struct !165
  %m_broadphaseHandle.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 8
  %11 = load ptr, ptr %m_broadphaseHandle.i, align 8, !tbaa !166
  %cmp.not = icmp eq ptr %11, null
  br i1 %cmp.not, label %if.end38, label %if.then21

if.then21:                                        ; preds = %if.then
  %m_worldInfo = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 7
  %12 = load ptr, ptr %m_worldInfo, align 8, !tbaa !42
  %m_broadphase = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %12, i64 0, i32 4
  %13 = load ptr, ptr %m_broadphase, align 8, !tbaa !167
  %m_dispatcher = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %12, i64 0, i32 5
  %14 = load ptr, ptr %m_dispatcher, align 8, !tbaa !172
  %vtable28 = load ptr, ptr %13, align 8, !tbaa !5
  %vfn29 = getelementptr inbounds ptr, ptr %vtable28, i64 4
  %15 = load ptr, ptr %vfn29, align 8
  tail call void %15(ptr noundef nonnull align 8 dereferenceable(8) %13, ptr noundef nonnull %11, ptr noundef nonnull align 4 dereferenceable(16) %m_bounds, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx19, ptr noundef %14)
  br label %if.end38

if.else:                                          ; preds = %entry
  %m_bounds34 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %m_bounds34, i8 0, i64 32, i1 false)
  br label %if.end38

if.end38:                                         ; preds = %if.then, %if.then21, %if.else
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIiED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !131
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIiE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIiE5clearEv.exit

_ZN20btAlignedObjectArrayIiE5clearEv.exit:        ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !130
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !131
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !132
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !133
  ret void
}

; Function Attrs: noinline noreturn nounwind
define linkonce_odr hidden void @__clang_call_terminate(ptr noundef %0) local_unnamed_addr #7 comdat {
  %2 = tail call ptr @__cxa_begin_catch(ptr %0) #38
  tail call void @_ZSt9terminatev() #39
  unreachable
}

declare ptr @__cxa_begin_catch(ptr) local_unnamed_addr

declare void @_ZSt9terminatev() local_unnamed_addr

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIbED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.76, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !127
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.76, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIbE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIbE5clearEv.exit

_ZN20btAlignedObjectArrayIbE5clearEv.exit:        ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !126
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !127
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray.76, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !128
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.76, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !129
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.72, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !123
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.72, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE5clearEv.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !122
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !123
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray.72, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !124
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.72, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !125
  ret void
}

declare void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64)) unnamed_addr #1

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.64, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !119
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.64, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE5clearEv.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !118
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !119
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray.64, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !120
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.64, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !121
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.56, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !115
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.56, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE5clearEv.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !114
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !115
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray.56, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !116
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.56, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !117
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.52, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !111
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.52, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !110
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !111
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray.52, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !112
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.52, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !113
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !107
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !106
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !107
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !108
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !109
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !103
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !102
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !103
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !104
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !105
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.36, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !99
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.36, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !98
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !99
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray.36, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !100
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.36, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !101
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.32, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !95
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.32, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !94
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !95
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray.32, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !96
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.32, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !97
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.28, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !91
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.28, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !90
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !91
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray.28, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !92
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.28, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !93
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.24, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.24, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !86
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !87
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray.24, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !88
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.24, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !89
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.20, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !83
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.20, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !82
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !83
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray.20, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !84
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.20, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !85
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody4PoseD2Ev(ptr noundef nonnull align 8 dereferenceable(232) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %m_data.i.i.i = getelementptr inbounds %"struct.btSoftBody::Pose", ptr %this, i64 0, i32 4, i32 5
  %0 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !39
  %tobool.not.i.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %"struct.btSoftBody::Pose", ptr %this, i64 0, i32 4, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %1, 0
  %or.cond.i.i = select i1 %tobool.not.i.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIfED2Ev.exit, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %entry
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
          to label %_ZN20btAlignedObjectArrayIfED2Ev.exit unwind label %lpad

_ZN20btAlignedObjectArrayIfED2Ev.exit:            ; preds = %if.then3.i.i.i, %entry
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !36
  store ptr null, ptr %m_data.i.i.i, align 8, !tbaa !39
  %m_size.i4.i.i = getelementptr inbounds %"struct.btSoftBody::Pose", ptr %this, i64 0, i32 4, i32 2
  store i32 0, ptr %m_size.i4.i.i, align 4, !tbaa !40
  %m_capacity.i.i.i = getelementptr inbounds %"struct.btSoftBody::Pose", ptr %this, i64 0, i32 4, i32 3
  store i32 0, ptr %m_capacity.i.i.i, align 8, !tbaa !41
  %m_data.i.i.i5 = getelementptr inbounds %"struct.btSoftBody::Pose", ptr %this, i64 0, i32 3, i32 5
  %2 = load ptr, ptr %m_data.i.i.i5, align 8, !tbaa !33
  %tobool.not.i.i.i6 = icmp eq ptr %2, null
  %m_ownsMemory.i.i.i7 = getelementptr inbounds %"struct.btSoftBody::Pose", ptr %this, i64 0, i32 3, i32 6
  %3 = load i8, ptr %m_ownsMemory.i.i.i7, align 8, !range !159
  %tobool2.not.i.i.i8 = icmp eq i8 %3, 0
  %or.cond.i.i9 = select i1 %tobool.not.i.i.i6, i1 true, i1 %tobool2.not.i.i.i8
  br i1 %or.cond.i.i9, label %_ZN20btAlignedObjectArrayI9btVector3ED2Ev.exit, label %if.then3.i.i.i10

if.then3.i.i.i10:                                 ; preds = %_ZN20btAlignedObjectArrayIfED2Ev.exit
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %2)
  br label %_ZN20btAlignedObjectArrayI9btVector3ED2Ev.exit

_ZN20btAlignedObjectArrayI9btVector3ED2Ev.exit:   ; preds = %_ZN20btAlignedObjectArrayIfED2Ev.exit, %if.then3.i.i.i10
  store i8 1, ptr %m_ownsMemory.i.i.i7, align 8, !tbaa !30
  store ptr null, ptr %m_data.i.i.i5, align 8, !tbaa !33
  %m_size.i4.i.i11 = getelementptr inbounds %"struct.btSoftBody::Pose", ptr %this, i64 0, i32 3, i32 2
  store i32 0, ptr %m_size.i4.i.i11, align 4, !tbaa !34
  %m_capacity.i.i.i12 = getelementptr inbounds %"struct.btSoftBody::Pose", ptr %this, i64 0, i32 3, i32 3
  store i32 0, ptr %m_capacity.i.i.i12, align 8, !tbaa !35
  ret void

lpad:                                             ; preds = %if.then3.i.i.i
  %4 = landingpad { ptr, i32 }
          cleanup
  %m_pos2 = getelementptr inbounds %"struct.btSoftBody::Pose", ptr %this, i64 0, i32 3
  invoke void @_ZN20btAlignedObjectArrayI9btVector3ED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_pos2)
          to label %eh.resume unwind label %terminate.lpad

eh.resume:                                        ; preds = %lpad
  resume { ptr, i32 } %4

terminate.lpad:                                   ; preds = %lpad
  %5 = landingpad { ptr, i32 }
          catch ptr null
  %6 = extractvalue { ptr, i32 } %5, 0
  tail call void @__clang_call_terminate(ptr %6) #39
  unreachable
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody6ConfigD2Ev(ptr noundef nonnull align 8 dereferenceable(200) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %m_data.i.i.i = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 28, i32 5
  %0 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !27
  %tobool.not.i.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 28, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %1, 0
  %or.cond.i.i = select i1 %tobool.not.i.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EED2Ev.exit, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %entry
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
          to label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EED2Ev.exit unwind label %lpad

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EED2Ev.exit: ; preds = %if.then3.i.i.i, %entry
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !24
  store ptr null, ptr %m_data.i.i.i, align 8, !tbaa !27
  %m_size.i4.i.i = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 28, i32 2
  store i32 0, ptr %m_size.i4.i.i, align 4, !tbaa !28
  %m_capacity.i.i.i = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 28, i32 3
  store i32 0, ptr %m_capacity.i.i.i, align 8, !tbaa !29
  %m_data.i.i.i9 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 27, i32 5
  %2 = load ptr, ptr %m_data.i.i.i9, align 8, !tbaa !27
  %tobool.not.i.i.i10 = icmp eq ptr %2, null
  %m_ownsMemory.i.i.i11 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 27, i32 6
  %3 = load i8, ptr %m_ownsMemory.i.i.i11, align 8, !range !159
  %tobool2.not.i.i.i12 = icmp eq i8 %3, 0
  %or.cond.i.i13 = select i1 %tobool.not.i.i.i10, i1 true, i1 %tobool2.not.i.i.i12
  br i1 %or.cond.i.i13, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EED2Ev.exit18, label %if.then3.i.i.i14

if.then3.i.i.i14:                                 ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EED2Ev.exit
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %2)
          to label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EED2Ev.exit18 unwind label %lpad2

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EED2Ev.exit18: ; preds = %if.then3.i.i.i14, %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EED2Ev.exit
  store i8 1, ptr %m_ownsMemory.i.i.i11, align 8, !tbaa !24
  store ptr null, ptr %m_data.i.i.i9, align 8, !tbaa !27
  %m_size.i4.i.i15 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 27, i32 2
  store i32 0, ptr %m_size.i4.i.i15, align 4, !tbaa !28
  %m_capacity.i.i.i16 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 27, i32 3
  store i32 0, ptr %m_capacity.i.i.i16, align 8, !tbaa !29
  %m_data.i.i.i19 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 26, i32 5
  %4 = load ptr, ptr %m_data.i.i.i19, align 8, !tbaa !21
  %tobool.not.i.i.i20 = icmp eq ptr %4, null
  %m_ownsMemory.i.i.i21 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 26, i32 6
  %5 = load i8, ptr %m_ownsMemory.i.i.i21, align 8, !range !159
  %tobool2.not.i.i.i22 = icmp eq i8 %5, 0
  %or.cond.i.i23 = select i1 %tobool.not.i.i.i20, i1 true, i1 %tobool2.not.i.i.i22
  br i1 %or.cond.i.i23, label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EED2Ev.exit, label %if.then3.i.i.i24

if.then3.i.i.i24:                                 ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EED2Ev.exit18
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %4)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EED2Ev.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EED2Ev.exit: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EED2Ev.exit18, %if.then3.i.i.i24
  store i8 1, ptr %m_ownsMemory.i.i.i21, align 8, !tbaa !18
  store ptr null, ptr %m_data.i.i.i19, align 8, !tbaa !21
  %m_size.i4.i.i25 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 26, i32 2
  store i32 0, ptr %m_size.i4.i.i25, align 4, !tbaa !22
  %m_capacity.i.i.i26 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 26, i32 3
  store i32 0, ptr %m_capacity.i.i.i26, align 8, !tbaa !23
  ret void

lpad:                                             ; preds = %if.then3.i.i.i
  %6 = landingpad { ptr, i32 }
          cleanup
  %m_psequence4 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 27
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_psequence4)
          to label %ehcleanup unwind label %terminate.lpad

lpad2:                                            ; preds = %if.then3.i.i.i14
  %7 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad, %lpad2
  %.pn = phi { ptr, i32 } [ %7, %lpad2 ], [ %6, %lpad ]
  %m_vsequence6 = getelementptr inbounds %"struct.btSoftBody::Config", ptr %this, i64 0, i32 26
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_vsequence6)
          to label %eh.resume unwind label %terminate.lpad

eh.resume:                                        ; preds = %ehcleanup
  resume { ptr, i32 } %.pn

terminate.lpad:                                   ; preds = %ehcleanup, %lpad
  %8 = landingpad { ptr, i32 }
          catch ptr null
  %9 = extractvalue { ptr, i32 } %8, 0
  tail call void @__clang_call_terminate(ptr %9) #39
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIP17btCollisionObjectED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !15
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIP17btCollisionObjectE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIP17btCollisionObjectE5clearEv.exit

_ZN20btAlignedObjectArrayIP17btCollisionObjectE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !8
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !15
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !16
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !17
  ret void
}

declare void @_ZN17btCollisionObjectD2Ev(ptr noundef nonnull align 8 dereferenceable(280)) unnamed_addr #1

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBodyD2Ev(ptr noundef nonnull align 8 dereferenceable(1496) %this) unnamed_addr #4 align 2 personality ptr @__gxx_personality_v0 {
entry:
  store ptr getelementptr inbounds ({ [7 x ptr] }, ptr @_ZTV10btSoftBody, i64 0, inrange i32 0, i64 2), ptr %this, align 8, !tbaa !5
  %m_collisionShape = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %0 = load ptr, ptr %m_collisionShape, align 8, !tbaa !157
  %isnull = icmp eq ptr %0, null
  br i1 %isnull, label %delete.end, label %delete.notnull

delete.notnull:                                   ; preds = %entry
  %vtable = load ptr, ptr %0, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 1
  %1 = load ptr, ptr %vfn, align 8
  invoke void %1(ptr noundef nonnull align 8 dereferenceable(24) %0)
          to label %delete.end unwind label %lpad

delete.end:                                       ; preds = %delete.notnull, %entry
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  %2 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp3.i = icmp sgt i32 %2, 0
  br i1 %cmp3.i, label %while.body.lr.ph.i, label %invoke.cont3

while.body.lr.ph.i:                               ; preds = %delete.end
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %m_cdbvt.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  br label %while.body.i

while.body.i:                                     ; preds = %_ZN10btSoftBody14releaseClusterEi.exit.i, %while.body.lr.ph.i
  %3 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !123
  %4 = load ptr, ptr %3, align 8, !tbaa !219
  %m_leaf.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 15
  %5 = load ptr, ptr %m_leaf.i.i, align 8, !tbaa !221
  %tobool.not.i.i = icmp eq ptr %5, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %while.body.i
  invoke void @_ZN6btDbvt6removeEP10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt.i.i, ptr noundef nonnull %5)
          to label %if.end.i.i unwind label %lpad2.loopexit.split-lp.loopexit.split-lp

if.end.i.i:                                       ; preds = %if.then.i.i, %while.body.i
  invoke void @_ZN10btSoftBody7ClusterD2Ev(ptr noundef nonnull align 8 dereferenceable(424) %4)
          to label %.noexc125 unwind label %lpad2.loopexit.split-lp.loopexit.split-lp

.noexc125:                                        ; preds = %if.end.i.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %4)
          to label %.noexc126 unwind label %lpad2.loopexit.split-lp.loopexit.split-lp

.noexc126:                                        ; preds = %.noexc125
  %6 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp8.i.i.i.i = icmp sgt i32 %6, 0
  br i1 %cmp8.i.i.i.i, label %for.body.lr.ph.i.i.i.i, label %invoke.cont3

for.body.lr.ph.i.i.i.i:                           ; preds = %.noexc126
  %7 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !123
  %wide.trip.count.i.i.i.i = zext i32 %6 to i64
  br label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.inc.i.i.i.i, %for.body.lr.ph.i.i.i.i
  %indvars.iv.i.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.i ], [ %indvars.iv.next.i.i.i.i, %for.inc.i.i.i.i ]
  %arrayidx.i.i.i.i = getelementptr inbounds ptr, ptr %7, i64 %indvars.iv.i.i.i.i
  %8 = load ptr, ptr %arrayidx.i.i.i.i, align 8, !tbaa !219
  %cmp3.i.i.i.i = icmp eq ptr %8, %4
  br i1 %cmp3.i.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i, label %for.inc.i.i.i.i

for.inc.i.i.i.i:                                  ; preds = %for.body.i.i.i.i
  %indvars.iv.next.i.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i.i, 1
  %exitcond.not.i.i.i.i = icmp eq i64 %indvars.iv.next.i.i.i.i, %wide.trip.count.i.i.i.i
  br i1 %exitcond.not.i.i.i.i, label %_ZN10btSoftBody14releaseClusterEi.exit.i, label %for.body.i.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i: ; preds = %for.body.i.i.i.i
  %9 = trunc i64 %indvars.iv.i.i.i.i to i32
  %cmp.i.i.i = icmp sgt i32 %6, %9
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN10btSoftBody14releaseClusterEi.exit.i

if.then.i.i.i:                                    ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i
  %sub.i.i.i = add nsw i32 %6, -1
  %sext.i.i.i = shl i64 %indvars.iv.i.i.i.i, 32
  %idxprom.i.i.i.i = ashr exact i64 %sext.i.i.i, 32
  %arrayidx.i7.i.i.i = getelementptr inbounds ptr, ptr %7, i64 %idxprom.i.i.i.i
  %10 = load ptr, ptr %arrayidx.i7.i.i.i, align 8, !tbaa !219
  %idxprom3.i.i.i.i = sext i32 %sub.i.i.i to i64
  %arrayidx4.i.i.i.i = getelementptr inbounds ptr, ptr %7, i64 %idxprom3.i.i.i.i
  %11 = load ptr, ptr %arrayidx4.i.i.i.i, align 8, !tbaa !219
  store ptr %11, ptr %arrayidx.i7.i.i.i, align 8, !tbaa !219
  %12 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !123
  %arrayidx10.i.i.i.i = getelementptr inbounds ptr, ptr %12, i64 %idxprom3.i.i.i.i
  store ptr %10, ptr %arrayidx10.i.i.i.i, align 8, !tbaa !219
  store i32 %sub.i.i.i, ptr %m_size.i.i, align 4, !tbaa !124
  br label %_ZN10btSoftBody14releaseClusterEi.exit.i

_ZN10btSoftBody14releaseClusterEi.exit.i:         ; preds = %for.inc.i.i.i.i, %if.then.i.i.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i
  %13 = phi i32 [ %6, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i ], [ %sub.i.i.i, %if.then.i.i.i ], [ %6, %for.inc.i.i.i.i ]
  %cmp.i = icmp sgt i32 %13, 0
  br i1 %cmp.i, label %while.body.i, label %invoke.cont3

invoke.cont3:                                     ; preds = %_ZN10btSoftBody14releaseClusterEi.exit.i, %.noexc126, %delete.end
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 2
  %14 = load i32, ptr %m_size.i, align 4, !tbaa !120
  %cmp277 = icmp sgt i32 %14, 0
  br i1 %cmp277, label %for.body.lr.ph, label %for.cond9.preheader

for.body.lr.ph:                                   ; preds = %invoke.cont3
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  br label %for.body

for.cond9.preheader:                              ; preds = %for.inc, %invoke.cont3
  %m_size.i127 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 2
  %15 = load i32, ptr %m_size.i127, align 4, !tbaa !116
  %cmp12279 = icmp sgt i32 %15, 0
  br i1 %cmp12279, label %for.body13.lr.ph, label %for.end20

for.body13.lr.ph:                                 ; preds = %for.cond9.preheader
  %m_data.i128 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  br label %for.body13

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.inc ]
  %16 = load ptr, ptr %m_data.i, align 8, !tbaa !119
  %arrayidx.i = getelementptr inbounds ptr, ptr %16, i64 %indvars.iv
  %17 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef %17)
          to label %for.inc unwind label %lpad2.loopexit.split-lp.loopexit

for.inc:                                          ; preds = %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %18 = load i32, ptr %m_size.i, align 4, !tbaa !120
  %19 = sext i32 %18 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %19
  br i1 %cmp, label %for.body, label %for.cond9.preheader

lpad:                                             ; preds = %delete.notnull
  %20 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad2.loopexit:                                   ; preds = %for.body13
  %lpad.loopexit = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad2.loopexit.split-lp.loopexit:                 ; preds = %for.body
  %lpad.loopexit271 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad2.loopexit.split-lp.loopexit.split-lp:        ; preds = %.noexc125, %if.end.i.i, %if.then.i.i
  %lpad.loopexit.split-lp272 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

for.body13:                                       ; preds = %for.body13.lr.ph, %for.inc18
  %indvars.iv283 = phi i64 [ 0, %for.body13.lr.ph ], [ %indvars.iv.next284, %for.inc18 ]
  %21 = load ptr, ptr %m_data.i128, align 8, !tbaa !115
  %arrayidx.i130 = getelementptr inbounds ptr, ptr %21, i64 %indvars.iv283
  %22 = load ptr, ptr %arrayidx.i130, align 8, !tbaa !219
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef %22)
          to label %for.inc18 unwind label %lpad2.loopexit

for.inc18:                                        ; preds = %for.body13
  %indvars.iv.next284 = add nuw nsw i64 %indvars.iv283, 1
  %23 = load i32, ptr %m_size.i127, align 4, !tbaa !116
  %24 = sext i32 %23 to i64
  %cmp12 = icmp slt i64 %indvars.iv.next284, %24
  br i1 %cmp12, label %for.body13, label %for.end20

for.end20:                                        ; preds = %for.inc18, %for.cond9.preheader
  %m_data.i.i.i131 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27, i32 5
  %25 = load ptr, ptr %m_data.i.i.i131, align 8, !tbaa !131
  %tobool.not.i.i.i = icmp eq ptr %25, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27, i32 6
  %26 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %26, 0
  %or.cond.i.i = select i1 %tobool.not.i.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIiED2Ev.exit, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %for.end20
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %25)
          to label %_ZN20btAlignedObjectArrayIiED2Ev.exit unwind label %lpad21

_ZN20btAlignedObjectArrayIiED2Ev.exit:            ; preds = %if.then3.i.i.i, %for.end20
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !130
  store ptr null, ptr %m_data.i.i.i131, align 8, !tbaa !131
  %m_size.i4.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27, i32 2
  store i32 0, ptr %m_size.i4.i.i, align 4, !tbaa !132
  %m_capacity.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27, i32 3
  store i32 0, ptr %m_capacity.i.i.i, align 8, !tbaa !133
  %m_data.i.i.i133 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 5
  %27 = load ptr, ptr %m_data.i.i.i133, align 8, !tbaa !127
  %tobool.not.i.i.i134 = icmp eq ptr %27, null
  %m_ownsMemory.i.i.i135 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 6
  %28 = load i8, ptr %m_ownsMemory.i.i.i135, align 8, !range !159
  %tobool2.not.i.i.i136 = icmp eq i8 %28, 0
  %or.cond.i.i137 = select i1 %tobool.not.i.i.i134, i1 true, i1 %tobool2.not.i.i.i136
  br i1 %or.cond.i.i137, label %_ZN20btAlignedObjectArrayIbED2Ev.exit, label %if.then3.i.i.i138

if.then3.i.i.i138:                                ; preds = %_ZN20btAlignedObjectArrayIiED2Ev.exit
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %27)
          to label %_ZN20btAlignedObjectArrayIbED2Ev.exit unwind label %lpad25

_ZN20btAlignedObjectArrayIbED2Ev.exit:            ; preds = %if.then3.i.i.i138, %_ZN20btAlignedObjectArrayIiED2Ev.exit
  store i8 1, ptr %m_ownsMemory.i.i.i135, align 8, !tbaa !126
  store ptr null, ptr %m_data.i.i.i133, align 8, !tbaa !127
  %m_size.i4.i.i139 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 2
  store i32 0, ptr %m_size.i4.i.i139, align 4, !tbaa !128
  %m_capacity.i.i.i140 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 3
  store i32 0, ptr %m_capacity.i.i.i140, align 8, !tbaa !129
  %m_data.i.i.i142 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %29 = load ptr, ptr %m_data.i.i.i142, align 8, !tbaa !123
  %tobool.not.i.i.i143 = icmp eq ptr %29, null
  %m_ownsMemory.i.i.i144 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 6
  %30 = load i8, ptr %m_ownsMemory.i.i.i144, align 8, !range !159
  %tobool2.not.i.i.i145 = icmp eq i8 %30, 0
  %or.cond.i.i146 = select i1 %tobool.not.i.i.i143, i1 true, i1 %tobool2.not.i.i.i145
  br i1 %or.cond.i.i146, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEED2Ev.exit, label %if.then3.i.i.i147

if.then3.i.i.i147:                                ; preds = %_ZN20btAlignedObjectArrayIbED2Ev.exit
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %29)
          to label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEED2Ev.exit unwind label %lpad30

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEED2Ev.exit: ; preds = %if.then3.i.i.i147, %_ZN20btAlignedObjectArrayIbED2Ev.exit
  store i8 1, ptr %m_ownsMemory.i.i.i144, align 8, !tbaa !122
  store ptr null, ptr %m_data.i.i.i142, align 8, !tbaa !123
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !124
  %m_capacity.i.i.i149 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 3
  store i32 0, ptr %m_capacity.i.i.i149, align 8, !tbaa !125
  %m_cdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  invoke void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt)
          to label %invoke.cont36 unwind label %lpad35

invoke.cont36:                                    ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEED2Ev.exit
  %m_fdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 22
  invoke void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_fdbvt)
          to label %invoke.cont41 unwind label %lpad40

invoke.cont41:                                    ; preds = %invoke.cont36
  %m_ndbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  invoke void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt)
          to label %invoke.cont46 unwind label %lpad45

invoke.cont46:                                    ; preds = %invoke.cont41
  %m_data.i.i.i151 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %31 = load ptr, ptr %m_data.i.i.i151, align 8, !tbaa !119
  %tobool.not.i.i.i152 = icmp eq ptr %31, null
  %m_ownsMemory.i.i.i153 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 6
  %32 = load i8, ptr %m_ownsMemory.i.i.i153, align 8, !range !159
  %tobool2.not.i.i.i154 = icmp eq i8 %32, 0
  %or.cond.i.i155 = select i1 %tobool.not.i.i.i152, i1 true, i1 %tobool2.not.i.i.i154
  br i1 %or.cond.i.i155, label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEED2Ev.exit, label %if.then3.i.i.i156

if.then3.i.i.i156:                                ; preds = %invoke.cont46
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %31)
          to label %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEED2Ev.exit unwind label %lpad51

_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEED2Ev.exit: ; preds = %if.then3.i.i.i156, %invoke.cont46
  store i8 1, ptr %m_ownsMemory.i.i.i153, align 8, !tbaa !118
  store ptr null, ptr %m_data.i.i.i151, align 8, !tbaa !119
  store i32 0, ptr %m_size.i, align 4, !tbaa !120
  %m_capacity.i.i.i158 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 3
  store i32 0, ptr %m_capacity.i.i.i158, align 8, !tbaa !121
  %m_data.i.i.i160 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %33 = load ptr, ptr %m_data.i.i.i160, align 8, !tbaa !115
  %tobool.not.i.i.i161 = icmp eq ptr %33, null
  %m_ownsMemory.i.i.i162 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 6
  %34 = load i8, ptr %m_ownsMemory.i.i.i162, align 8, !range !159
  %tobool2.not.i.i.i163 = icmp eq i8 %34, 0
  %or.cond.i.i164 = select i1 %tobool.not.i.i.i161, i1 true, i1 %tobool2.not.i.i.i163
  br i1 %or.cond.i.i164, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEED2Ev.exit, label %if.then3.i.i.i165

if.then3.i.i.i165:                                ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEED2Ev.exit
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %33)
          to label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEED2Ev.exit unwind label %lpad57

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEED2Ev.exit: ; preds = %if.then3.i.i.i165, %_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEED2Ev.exit
  store i8 1, ptr %m_ownsMemory.i.i.i162, align 8, !tbaa !114
  store ptr null, ptr %m_data.i.i.i160, align 8, !tbaa !115
  store i32 0, ptr %m_size.i127, align 4, !tbaa !116
  %m_capacity.i.i.i167 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 3
  store i32 0, ptr %m_capacity.i.i.i167, align 8, !tbaa !117
  %m_data.i.i.i169 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 5
  %35 = load ptr, ptr %m_data.i.i.i169, align 8, !tbaa !111
  %tobool.not.i.i.i170 = icmp eq ptr %35, null
  %m_ownsMemory.i.i.i171 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 6
  %36 = load i8, ptr %m_ownsMemory.i.i.i171, align 8, !range !159
  %tobool2.not.i.i.i172 = icmp eq i8 %36, 0
  %or.cond.i.i173 = select i1 %tobool.not.i.i.i170, i1 true, i1 %tobool2.not.i.i.i172
  br i1 %or.cond.i.i173, label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEED2Ev.exit, label %if.then3.i.i.i174

if.then3.i.i.i174:                                ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEED2Ev.exit
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %35)
          to label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEED2Ev.exit unwind label %lpad62

_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEED2Ev.exit: ; preds = %if.then3.i.i.i174, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEED2Ev.exit
  store i8 1, ptr %m_ownsMemory.i.i.i171, align 8, !tbaa !110
  store ptr null, ptr %m_data.i.i.i169, align 8, !tbaa !111
  %m_size.i4.i.i175 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 2
  store i32 0, ptr %m_size.i4.i.i175, align 4, !tbaa !112
  %m_capacity.i.i.i176 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 3
  store i32 0, ptr %m_capacity.i.i.i176, align 8, !tbaa !113
  %m_data.i.i.i178 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 5
  %37 = load ptr, ptr %m_data.i.i.i178, align 8, !tbaa !107
  %tobool.not.i.i.i179 = icmp eq ptr %37, null
  %m_ownsMemory.i.i.i180 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 6
  %38 = load i8, ptr %m_ownsMemory.i.i.i180, align 8, !range !159
  %tobool2.not.i.i.i181 = icmp eq i8 %38, 0
  %or.cond.i.i182 = select i1 %tobool.not.i.i.i179, i1 true, i1 %tobool2.not.i.i.i181
  br i1 %or.cond.i.i182, label %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEED2Ev.exit, label %if.then3.i.i.i183

if.then3.i.i.i183:                                ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEED2Ev.exit
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %37)
          to label %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEED2Ev.exit unwind label %lpad67

_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEED2Ev.exit: ; preds = %if.then3.i.i.i183, %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEED2Ev.exit
  store i8 1, ptr %m_ownsMemory.i.i.i180, align 8, !tbaa !106
  store ptr null, ptr %m_data.i.i.i178, align 8, !tbaa !107
  %m_size.i4.i.i184 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 2
  store i32 0, ptr %m_size.i4.i.i184, align 4, !tbaa !108
  %m_capacity.i.i.i185 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 3
  store i32 0, ptr %m_capacity.i.i.i185, align 8, !tbaa !109
  %m_data.i.i.i187 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 5
  %39 = load ptr, ptr %m_data.i.i.i187, align 8, !tbaa !103
  %tobool.not.i.i.i188 = icmp eq ptr %39, null
  %m_ownsMemory.i.i.i189 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 6
  %40 = load i8, ptr %m_ownsMemory.i.i.i189, align 8, !range !159
  %tobool2.not.i.i.i190 = icmp eq i8 %40, 0
  %or.cond.i.i191 = select i1 %tobool.not.i.i.i188, i1 true, i1 %tobool2.not.i.i.i190
  br i1 %or.cond.i.i191, label %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEED2Ev.exit, label %if.then3.i.i.i192

if.then3.i.i.i192:                                ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEED2Ev.exit
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %39)
          to label %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEED2Ev.exit unwind label %lpad72

_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEED2Ev.exit: ; preds = %if.then3.i.i.i192, %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEED2Ev.exit
  store i8 1, ptr %m_ownsMemory.i.i.i189, align 8, !tbaa !102
  store ptr null, ptr %m_data.i.i.i187, align 8, !tbaa !103
  %m_size.i4.i.i193 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 2
  store i32 0, ptr %m_size.i4.i.i193, align 4, !tbaa !104
  %m_capacity.i.i.i194 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 3
  store i32 0, ptr %m_capacity.i.i.i194, align 8, !tbaa !105
  %m_data.i.i.i196 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  %41 = load ptr, ptr %m_data.i.i.i196, align 8, !tbaa !99
  %tobool.not.i.i.i197 = icmp eq ptr %41, null
  %m_ownsMemory.i.i.i198 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 6
  %42 = load i8, ptr %m_ownsMemory.i.i.i198, align 8, !range !159
  %tobool2.not.i.i.i199 = icmp eq i8 %42, 0
  %or.cond.i.i200 = select i1 %tobool.not.i.i.i197, i1 true, i1 %tobool2.not.i.i.i199
  br i1 %or.cond.i.i200, label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEED2Ev.exit, label %if.then3.i.i.i201

if.then3.i.i.i201:                                ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEED2Ev.exit
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %41)
          to label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEED2Ev.exit unwind label %lpad77

_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEED2Ev.exit: ; preds = %if.then3.i.i.i201, %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEED2Ev.exit
  store i8 1, ptr %m_ownsMemory.i.i.i198, align 8, !tbaa !98
  store ptr null, ptr %m_data.i.i.i196, align 8, !tbaa !99
  %m_size.i4.i.i202 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 2
  store i32 0, ptr %m_size.i4.i.i202, align 4, !tbaa !100
  %m_capacity.i.i.i203 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 3
  store i32 0, ptr %m_capacity.i.i.i203, align 8, !tbaa !101
  %m_data.i.i.i205 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %43 = load ptr, ptr %m_data.i.i.i205, align 8, !tbaa !95
  %tobool.not.i.i.i206 = icmp eq ptr %43, null
  %m_ownsMemory.i.i.i207 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 6
  %44 = load i8, ptr %m_ownsMemory.i.i.i207, align 8, !range !159
  %tobool2.not.i.i.i208 = icmp eq i8 %44, 0
  %or.cond.i.i209 = select i1 %tobool.not.i.i.i206, i1 true, i1 %tobool2.not.i.i.i208
  br i1 %or.cond.i.i209, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEED2Ev.exit, label %if.then3.i.i.i210

if.then3.i.i.i210:                                ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEED2Ev.exit
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %43)
          to label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEED2Ev.exit unwind label %lpad82

_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEED2Ev.exit: ; preds = %if.then3.i.i.i210, %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEED2Ev.exit
  store i8 1, ptr %m_ownsMemory.i.i.i207, align 8, !tbaa !94
  store ptr null, ptr %m_data.i.i.i205, align 8, !tbaa !95
  %m_size.i4.i.i211 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  store i32 0, ptr %m_size.i4.i.i211, align 4, !tbaa !96
  %m_capacity.i.i.i212 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 3
  store i32 0, ptr %m_capacity.i.i.i212, align 8, !tbaa !97
  %m_data.i.i.i214 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %45 = load ptr, ptr %m_data.i.i.i214, align 8, !tbaa !91
  %tobool.not.i.i.i215 = icmp eq ptr %45, null
  %m_ownsMemory.i.i.i216 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 6
  %46 = load i8, ptr %m_ownsMemory.i.i.i216, align 8, !range !159
  %tobool2.not.i.i.i217 = icmp eq i8 %46, 0
  %or.cond.i.i218 = select i1 %tobool.not.i.i.i215, i1 true, i1 %tobool2.not.i.i.i217
  br i1 %or.cond.i.i218, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEED2Ev.exit, label %if.then3.i.i.i219

if.then3.i.i.i219:                                ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEED2Ev.exit
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %45)
          to label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEED2Ev.exit unwind label %lpad87

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEED2Ev.exit: ; preds = %if.then3.i.i.i219, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEED2Ev.exit
  store i8 1, ptr %m_ownsMemory.i.i.i216, align 8, !tbaa !90
  store ptr null, ptr %m_data.i.i.i214, align 8, !tbaa !91
  %m_size.i4.i.i220 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  store i32 0, ptr %m_size.i4.i.i220, align 4, !tbaa !92
  %m_capacity.i.i.i221 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 3
  store i32 0, ptr %m_capacity.i.i.i221, align 8, !tbaa !93
  %m_data.i.i.i223 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %47 = load ptr, ptr %m_data.i.i.i223, align 8, !tbaa !87
  %tobool.not.i.i.i224 = icmp eq ptr %47, null
  %m_ownsMemory.i.i.i225 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 6
  %48 = load i8, ptr %m_ownsMemory.i.i.i225, align 8, !range !159
  %tobool2.not.i.i.i226 = icmp eq i8 %48, 0
  %or.cond.i.i227 = select i1 %tobool.not.i.i.i224, i1 true, i1 %tobool2.not.i.i.i226
  br i1 %or.cond.i.i227, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEED2Ev.exit, label %if.then3.i.i.i228

if.then3.i.i.i228:                                ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEED2Ev.exit
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %47)
          to label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEED2Ev.exit unwind label %lpad92

_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEED2Ev.exit: ; preds = %if.then3.i.i.i228, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEED2Ev.exit
  store i8 1, ptr %m_ownsMemory.i.i.i225, align 8, !tbaa !86
  store ptr null, ptr %m_data.i.i.i223, align 8, !tbaa !87
  %m_size.i4.i.i229 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  store i32 0, ptr %m_size.i4.i.i229, align 4, !tbaa !88
  %m_capacity.i.i.i230 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 3
  store i32 0, ptr %m_capacity.i.i.i230, align 8, !tbaa !89
  %m_data.i.i.i232 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 5
  %49 = load ptr, ptr %m_data.i.i.i232, align 8, !tbaa !83
  %tobool.not.i.i.i233 = icmp eq ptr %49, null
  %m_ownsMemory.i.i.i234 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 6
  %50 = load i8, ptr %m_ownsMemory.i.i.i234, align 8, !range !159
  %tobool2.not.i.i.i235 = icmp eq i8 %50, 0
  %or.cond.i.i236 = select i1 %tobool.not.i.i.i233, i1 true, i1 %tobool2.not.i.i.i235
  br i1 %or.cond.i.i236, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEED2Ev.exit, label %if.then3.i.i.i237

if.then3.i.i.i237:                                ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEED2Ev.exit
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %49)
          to label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEED2Ev.exit unwind label %lpad97

_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEED2Ev.exit: ; preds = %if.then3.i.i.i237, %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEED2Ev.exit
  store i8 1, ptr %m_ownsMemory.i.i.i234, align 8, !tbaa !82
  store ptr null, ptr %m_data.i.i.i232, align 8, !tbaa !83
  %m_size.i4.i.i238 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 2
  store i32 0, ptr %m_size.i4.i.i238, align 4, !tbaa !84
  %m_capacity.i.i.i239 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 3
  store i32 0, ptr %m_capacity.i.i.i239, align 8, !tbaa !85
  %m_data.i.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  %51 = load ptr, ptr %m_data.i.i.i.i, align 8, !tbaa !39
  %tobool.not.i.i.i.i = icmp eq ptr %51, null
  %m_ownsMemory.i.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 6
  %52 = load i8, ptr %m_ownsMemory.i.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i = icmp eq i8 %52, 0
  %or.cond.i.i.i = select i1 %tobool.not.i.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i
  br i1 %or.cond.i.i.i, label %_ZN20btAlignedObjectArrayIfED2Ev.exit.i, label %if.then3.i.i.i.i

if.then3.i.i.i.i:                                 ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEED2Ev.exit
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %51)
          to label %_ZN20btAlignedObjectArrayIfED2Ev.exit.i unwind label %lpad.i

_ZN20btAlignedObjectArrayIfED2Ev.exit.i:          ; preds = %if.then3.i.i.i.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEED2Ev.exit
  store i8 1, ptr %m_ownsMemory.i.i.i.i, align 8, !tbaa !36
  store ptr null, ptr %m_data.i.i.i.i, align 8, !tbaa !39
  %m_size.i4.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 2
  store i32 0, ptr %m_size.i4.i.i.i, align 4, !tbaa !40
  %m_capacity.i.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 3
  store i32 0, ptr %m_capacity.i.i.i.i, align 8, !tbaa !41
  %m_data.i.i.i5.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 5
  %53 = load ptr, ptr %m_data.i.i.i5.i, align 8, !tbaa !33
  %tobool.not.i.i.i6.i = icmp eq ptr %53, null
  %m_ownsMemory.i.i.i7.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 6
  %54 = load i8, ptr %m_ownsMemory.i.i.i7.i, align 8, !range !159
  %tobool2.not.i.i.i8.i = icmp eq i8 %54, 0
  %or.cond.i.i9.i = select i1 %tobool.not.i.i.i6.i, i1 true, i1 %tobool2.not.i.i.i8.i
  br i1 %or.cond.i.i9.i, label %_ZN10btSoftBody4PoseD2Ev.exit, label %if.then3.i.i.i10.i

if.then3.i.i.i10.i:                               ; preds = %_ZN20btAlignedObjectArrayIfED2Ev.exit.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %53)
          to label %_ZN10btSoftBody4PoseD2Ev.exit unwind label %lpad102

lpad.i:                                           ; preds = %if.then3.i.i.i.i
  %55 = landingpad { ptr, i32 }
          cleanup
  %m_pos2.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3
  invoke void @_ZN20btAlignedObjectArrayI9btVector3ED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_pos2.i)
          to label %ehcleanup109 unwind label %terminate.lpad.i

terminate.lpad.i:                                 ; preds = %lpad.i
  %56 = landingpad { ptr, i32 }
          catch ptr null
  %57 = extractvalue { ptr, i32 } %56, 0
  tail call void @__clang_call_terminate(ptr %57) #39
  unreachable

_ZN10btSoftBody4PoseD2Ev.exit:                    ; preds = %if.then3.i.i.i10.i, %_ZN20btAlignedObjectArrayIfED2Ev.exit.i
  store i8 1, ptr %m_ownsMemory.i.i.i7.i, align 8, !tbaa !30
  store ptr null, ptr %m_data.i.i.i5.i, align 8, !tbaa !33
  %m_size.i4.i.i11.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 2
  store i32 0, ptr %m_size.i4.i.i11.i, align 4, !tbaa !34
  %m_capacity.i.i.i12.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 3
  store i32 0, ptr %m_capacity.i.i.i12.i, align 8, !tbaa !35
  %m_cfg = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2
  invoke void @_ZN10btSoftBody6ConfigD2Ev(ptr noundef nonnull align 8 dereferenceable(200) %m_cfg)
          to label %invoke.cont108 unwind label %lpad107

invoke.cont108:                                   ; preds = %_ZN10btSoftBody4PoseD2Ev.exit
  %m_data.i.i.i242 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 5
  %58 = load ptr, ptr %m_data.i.i.i242, align 8, !tbaa !15
  %tobool.not.i.i.i243 = icmp eq ptr %58, null
  %m_ownsMemory.i.i.i244 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 6
  %59 = load i8, ptr %m_ownsMemory.i.i.i244, align 8, !range !159
  %tobool2.not.i.i.i245 = icmp eq i8 %59, 0
  %or.cond.i.i246 = select i1 %tobool.not.i.i.i243, i1 true, i1 %tobool2.not.i.i.i245
  br i1 %or.cond.i.i246, label %_ZN20btAlignedObjectArrayIP17btCollisionObjectED2Ev.exit, label %if.then3.i.i.i247

if.then3.i.i.i247:                                ; preds = %invoke.cont108
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %58)
          to label %_ZN20btAlignedObjectArrayIP17btCollisionObjectED2Ev.exit unwind label %lpad112

_ZN20btAlignedObjectArrayIP17btCollisionObjectED2Ev.exit: ; preds = %if.then3.i.i.i247, %invoke.cont108
  store i8 1, ptr %m_ownsMemory.i.i.i244, align 8, !tbaa !8
  store ptr null, ptr %m_data.i.i.i242, align 8, !tbaa !15
  %m_size.i4.i.i248 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 2
  store i32 0, ptr %m_size.i4.i.i248, align 4, !tbaa !16
  %m_capacity.i.i.i249 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 3
  store i32 0, ptr %m_capacity.i.i.i249, align 8, !tbaa !17
  tail call void @_ZN17btCollisionObjectD2Ev(ptr noundef nonnull align 8 dereferenceable(280) %this)
  ret void

lpad21:                                           ; preds = %if.then3.i.i.i
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup27

ehcleanup:                                        ; preds = %lpad2.loopexit, %lpad2.loopexit.split-lp.loopexit.split-lp, %lpad2.loopexit.split-lp.loopexit, %lpad
  %.pn = phi { ptr, i32 } [ %20, %lpad ], [ %lpad.loopexit, %lpad2.loopexit ], [ %lpad.loopexit271, %lpad2.loopexit.split-lp.loopexit ], [ %lpad.loopexit.split-lp272, %lpad2.loopexit.split-lp.loopexit.split-lp ]
  %m_userIndexMapping23 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 27
  invoke void @_ZN20btAlignedObjectArrayIiED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_userIndexMapping23)
          to label %ehcleanup27 unwind label %terminate.lpad

lpad25:                                           ; preds = %if.then3.i.i.i138
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup32

ehcleanup27:                                      ; preds = %ehcleanup, %lpad21
  %.pn.pn = phi { ptr, i32 } [ %.pn, %ehcleanup ], [ %60, %lpad21 ]
  %m_clusterConnectivity28 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25
  invoke void @_ZN20btAlignedObjectArrayIbED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_clusterConnectivity28)
          to label %ehcleanup32 unwind label %terminate.lpad

lpad30:                                           ; preds = %if.then3.i.i.i147
  %62 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup37

ehcleanup32:                                      ; preds = %ehcleanup27, %lpad25
  %.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn, %ehcleanup27 ], [ %61, %lpad25 ]
  %m_clusters33 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24
  invoke void @_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_clusters33)
          to label %ehcleanup37 unwind label %terminate.lpad

lpad35:                                           ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEED2Ev.exit
  %63 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup42

ehcleanup37:                                      ; preds = %ehcleanup32, %lpad30
  %.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn, %ehcleanup32 ], [ %62, %lpad30 ]
  %m_cdbvt38 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  invoke void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt38)
          to label %ehcleanup42 unwind label %terminate.lpad

lpad40:                                           ; preds = %invoke.cont36
  %64 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup47

ehcleanup42:                                      ; preds = %ehcleanup37, %lpad35
  %.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn, %ehcleanup37 ], [ %63, %lpad35 ]
  %m_fdbvt43 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 22
  invoke void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_fdbvt43)
          to label %ehcleanup47 unwind label %terminate.lpad

lpad45:                                           ; preds = %invoke.cont41
  %65 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup53

ehcleanup47:                                      ; preds = %ehcleanup42, %lpad40
  %.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn, %ehcleanup42 ], [ %64, %lpad40 ]
  %m_ndbvt48 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  invoke void @_ZN6btDbvtD1Ev(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt48)
          to label %ehcleanup53 unwind label %terminate.lpad

lpad51:                                           ; preds = %if.then3.i.i.i156
  %66 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup59

ehcleanup53:                                      ; preds = %ehcleanup47, %lpad45
  %.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn, %ehcleanup47 ], [ %65, %lpad45 ]
  %m_materials54 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17
  invoke void @_ZN20btAlignedObjectArrayIPN10btSoftBody8MaterialEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_materials54)
          to label %ehcleanup59 unwind label %terminate.lpad

lpad57:                                           ; preds = %if.then3.i.i.i165
  %67 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup64

ehcleanup59:                                      ; preds = %ehcleanup53, %lpad51
  %.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn, %ehcleanup53 ], [ %66, %lpad51 ]
  %m_joints60 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16
  invoke void @_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_joints60)
          to label %ehcleanup64 unwind label %terminate.lpad

lpad62:                                           ; preds = %if.then3.i.i.i174
  %68 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup69

ehcleanup64:                                      ; preds = %ehcleanup59, %lpad57
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup59 ], [ %67, %lpad57 ]
  %m_scontacts65 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_scontacts65)
          to label %ehcleanup69 unwind label %terminate.lpad

lpad67:                                           ; preds = %if.then3.i.i.i183
  %69 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup74

ehcleanup69:                                      ; preds = %ehcleanup64, %lpad62
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup64 ], [ %68, %lpad62 ]
  %m_rcontacts70 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_rcontacts70)
          to label %ehcleanup74 unwind label %terminate.lpad

lpad72:                                           ; preds = %if.then3.i.i.i192
  %70 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup79

ehcleanup74:                                      ; preds = %ehcleanup69, %lpad67
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup69 ], [ %69, %lpad67 ]
  %m_anchors75 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_anchors75)
          to label %ehcleanup79 unwind label %terminate.lpad

lpad77:                                           ; preds = %if.then3.i.i.i201
  %71 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup84

ehcleanup79:                                      ; preds = %ehcleanup74, %lpad72
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup74 ], [ %70, %lpad72 ]
  %m_tetras80 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_tetras80)
          to label %ehcleanup84 unwind label %terminate.lpad

lpad82:                                           ; preds = %if.then3.i.i.i210
  %72 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup89

ehcleanup84:                                      ; preds = %ehcleanup79, %lpad77
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup79 ], [ %71, %lpad77 ]
  %m_faces85 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_faces85)
          to label %ehcleanup89 unwind label %terminate.lpad

lpad87:                                           ; preds = %if.then3.i.i.i219
  %73 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup94

ehcleanup89:                                      ; preds = %ehcleanup84, %lpad82
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup84 ], [ %72, %lpad82 ]
  %m_links90 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_links90)
          to label %ehcleanup94 unwind label %terminate.lpad

lpad92:                                           ; preds = %if.then3.i.i.i228
  %74 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup99

ehcleanup94:                                      ; preds = %ehcleanup89, %lpad87
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup89 ], [ %73, %lpad87 ]
  %m_nodes95 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_nodes95)
          to label %ehcleanup99 unwind label %terminate.lpad

lpad97:                                           ; preds = %if.then3.i.i.i237
  %75 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup104

ehcleanup99:                                      ; preds = %ehcleanup94, %lpad92
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup94 ], [ %74, %lpad92 ]
  %m_notes100 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8
  invoke void @_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_notes100)
          to label %ehcleanup104 unwind label %terminate.lpad

lpad102:                                          ; preds = %if.then3.i.i.i10.i
  %76 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup109

ehcleanup104:                                     ; preds = %ehcleanup99, %lpad97
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup99 ], [ %75, %lpad97 ]
  %m_pose105 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5
  invoke void @_ZN10btSoftBody4PoseD2Ev(ptr noundef nonnull align 8 dereferenceable(232) %m_pose105)
          to label %ehcleanup109 unwind label %terminate.lpad

lpad107:                                          ; preds = %_ZN10btSoftBody4PoseD2Ev.exit
  %77 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup114

ehcleanup109:                                     ; preds = %lpad102, %lpad.i, %ehcleanup104
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup104 ], [ %76, %lpad102 ], [ %55, %lpad.i ]
  %m_cfg110 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2
  invoke void @_ZN10btSoftBody6ConfigD2Ev(ptr noundef nonnull align 8 dereferenceable(200) %m_cfg110)
          to label %ehcleanup114 unwind label %terminate.lpad

lpad112:                                          ; preds = %if.then3.i.i.i247
  %78 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup117

ehcleanup114:                                     ; preds = %ehcleanup109, %lpad107
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup109 ], [ %77, %lpad107 ]
  %m_collisionDisabledObjects115 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1
  invoke void @_ZN20btAlignedObjectArrayIP17btCollisionObjectED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_collisionDisabledObjects115)
          to label %ehcleanup117 unwind label %terminate.lpad

ehcleanup117:                                     ; preds = %ehcleanup114, %lpad112
  %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn, %ehcleanup114 ], [ %78, %lpad112 ]
  invoke void @_ZN17btCollisionObjectD2Ev(ptr noundef nonnull align 8 dereferenceable(280) %this)
          to label %eh.resume unwind label %terminate.lpad

eh.resume:                                        ; preds = %ehcleanup117
  resume { ptr, i32 } %.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn.pn

terminate.lpad:                                   ; preds = %ehcleanup117, %ehcleanup114, %ehcleanup109, %ehcleanup104, %ehcleanup99, %ehcleanup94, %ehcleanup89, %ehcleanup84, %ehcleanup79, %ehcleanup74, %ehcleanup69, %ehcleanup64, %ehcleanup59, %ehcleanup53, %ehcleanup47, %ehcleanup42, %ehcleanup37, %ehcleanup32, %ehcleanup27, %ehcleanup
  %79 = landingpad { ptr, i32 }
          catch ptr null
  %80 = extractvalue { ptr, i32 } %79, 0
  tail call void @__clang_call_terminate(ptr %80) #39
  unreachable
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody15releaseClustersEv(ptr noundef nonnull align 8 dereferenceable(1496) %this) local_unnamed_addr #4 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !124
  %cmp3 = icmp sgt i32 %0, 0
  br i1 %cmp3, label %while.body.lr.ph, label %while.end

while.body.lr.ph:                                 ; preds = %entry
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %m_cdbvt.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  br label %while.body

while.body:                                       ; preds = %while.body.lr.ph, %_ZN10btSoftBody14releaseClusterEi.exit
  %1 = load ptr, ptr %m_data.i.i, align 8, !tbaa !123
  %2 = load ptr, ptr %1, align 8, !tbaa !219
  %m_leaf.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 15
  %3 = load ptr, ptr %m_leaf.i, align 8, !tbaa !221
  %tobool.not.i = icmp eq ptr %3, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %while.body
  tail call void @_ZN6btDbvt6removeEP10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt.i, ptr noundef nonnull %3)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %while.body
  tail call void @_ZN10btSoftBody7ClusterD2Ev(ptr noundef nonnull align 8 dereferenceable(424) %2)
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %2)
  %4 = load i32, ptr %m_size.i, align 4, !tbaa !124
  %cmp8.i.i.i = icmp sgt i32 %4, 0
  br i1 %cmp8.i.i.i, label %for.body.lr.ph.i.i.i, label %while.end

for.body.lr.ph.i.i.i:                             ; preds = %if.end.i
  %5 = load ptr, ptr %m_data.i.i, align 8, !tbaa !123
  %wide.trip.count.i.i.i = zext i32 %4 to i64
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i, %for.inc.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds ptr, ptr %5, i64 %indvars.iv.i.i.i
  %6 = load ptr, ptr %arrayidx.i.i.i, align 8, !tbaa !219
  %cmp3.i.i.i = icmp eq ptr %6, %2
  br i1 %cmp3.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i, label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %for.body.i.i.i
  %indvars.iv.next.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i64 %indvars.iv.next.i.i.i, %wide.trip.count.i.i.i
  br i1 %exitcond.not.i.i.i, label %_ZN10btSoftBody14releaseClusterEi.exit, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i: ; preds = %for.body.i.i.i
  %7 = trunc i64 %indvars.iv.i.i.i to i32
  %cmp.i.i = icmp sgt i32 %4, %7
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN10btSoftBody14releaseClusterEi.exit

if.then.i.i:                                      ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i
  %sub.i.i = add nsw i32 %4, -1
  %sext.i.i = shl i64 %indvars.iv.i.i.i, 32
  %idxprom.i.i.i = ashr exact i64 %sext.i.i, 32
  %arrayidx.i7.i.i = getelementptr inbounds ptr, ptr %5, i64 %idxprom.i.i.i
  %8 = load ptr, ptr %arrayidx.i7.i.i, align 8, !tbaa !219
  %idxprom3.i.i.i = sext i32 %sub.i.i to i64
  %arrayidx4.i.i.i = getelementptr inbounds ptr, ptr %5, i64 %idxprom3.i.i.i
  %9 = load ptr, ptr %arrayidx4.i.i.i, align 8, !tbaa !219
  store ptr %9, ptr %arrayidx.i7.i.i, align 8, !tbaa !219
  %10 = load ptr, ptr %m_data.i.i, align 8, !tbaa !123
  %arrayidx10.i.i.i = getelementptr inbounds ptr, ptr %10, i64 %idxprom3.i.i.i
  store ptr %8, ptr %arrayidx10.i.i.i, align 8, !tbaa !219
  store i32 %sub.i.i, ptr %m_size.i, align 4, !tbaa !124
  br label %_ZN10btSoftBody14releaseClusterEi.exit

_ZN10btSoftBody14releaseClusterEi.exit:           ; preds = %for.inc.i.i.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i, %if.then.i.i
  %11 = phi i32 [ %4, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i ], [ %sub.i.i, %if.then.i.i ], [ %4, %for.inc.i.i.i ]
  %cmp = icmp sgt i32 %11, 0
  br i1 %cmp, label %while.body, label %while.end

while.end:                                        ; preds = %if.end.i, %_ZN10btSoftBody14releaseClusterEi.exit, %entry
  ret void
}

declare void @_Z21btAlignedFreeInternalPv(ptr noundef) local_unnamed_addr #1

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBodyD0Ev(ptr noundef nonnull align 8 dereferenceable(1496) %this) unnamed_addr #4 align 2 personality ptr @__gxx_personality_v0 {
entry:
  invoke void @_ZN10btSoftBodyD2Ev(ptr noundef nonnull align 8 dereferenceable(1496) %this)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %this)
  ret void

lpad:                                             ; preds = %entry
  %0 = landingpad { ptr, i32 }
          cleanup
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %this)
          to label %eh.resume unwind label %terminate.lpad

eh.resume:                                        ; preds = %lpad
  resume { ptr, i32 } %0

terminate.lpad:                                   ; preds = %lpad
  %1 = landingpad { ptr, i32 }
          catch ptr null
  %2 = extractvalue { ptr, i32 } %1, 0
  tail call void @__clang_call_terminate(ptr %2) #39
  unreachable
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local noundef zeroext i1 @_ZNK10btSoftBody9checkLinkEii(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, i32 noundef %node0, i32 noundef %node1) local_unnamed_addr #9 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i = sext i32 %node0 to i64
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i
  %idxprom.i6 = sext i32 %node1 to i64
  %arrayidx.i7 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i6
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %1 = load i32, ptr %m_size.i.i, align 4, !tbaa !92
  %cmp.not32.i = icmp sgt i32 %1, 0
  br i1 %cmp.not32.i, label %for.body.lr.ph.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %2 = load ptr, ptr %m_data.i.i, align 8, !tbaa !91
  %3 = zext i32 %1 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %if.end.i ]
  %cmp.not34.i = phi i1 [ true, %for.body.lr.ph.i ], [ %cmp.not.i, %if.end.i ]
  %m_n.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %2, i64 %indvars.iv.i, i32 1
  %4 = load ptr, ptr %m_n.i, align 8, !tbaa !219
  %cmp5.i = icmp eq ptr %4, %arrayidx.i
  br i1 %cmp5.i, label %land.lhs.true.i, label %lor.lhs.false.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %2, i64 %indvars.iv.i, i32 1, i64 1
  %5 = load ptr, ptr %arrayidx7.i, align 8, !tbaa !219
  %cmp9.i = icmp eq ptr %5, %arrayidx.i7
  br i1 %cmp9.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %land.lhs.true.i, %for.body.i
  %cmp13.i = icmp eq ptr %4, %arrayidx.i7
  br i1 %cmp13.i, label %land.lhs.true14.i, label %if.end.i

land.lhs.true14.i:                                ; preds = %lor.lhs.false.i
  %arrayidx16.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %2, i64 %indvars.iv.i, i32 1, i64 1
  %6 = load ptr, ptr %arrayidx16.i, align 8, !tbaa !219
  %cmp18.i = icmp eq ptr %6, %arrayidx.i
  br i1 %cmp18.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit, label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true14.i, %lor.lhs.false.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp.not.i = icmp ult i64 %indvars.iv.next.i, %3
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %3
  br i1 %exitcond.not.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit, label %for.body.i

_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit:   ; preds = %land.lhs.true.i, %land.lhs.true14.i, %if.end.i, %entry
  %cmp.not.lcssa.i = phi i1 [ false, %entry ], [ %cmp.not34.i, %land.lhs.true14.i ], [ %cmp.not34.i, %land.lhs.true.i ], [ %cmp.not.i, %if.end.i ]
  ret i1 %cmp.not.lcssa.i
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local noundef zeroext i1 @_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, ptr noundef readnone %node0, ptr noundef readnone %node1) local_unnamed_addr #9 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !92
  %cmp.not32 = icmp sgt i32 %0, 0
  br i1 %cmp.not32, label %for.body.lr.ph, label %cleanup22

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !91
  %2 = zext i32 %0 to i64
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end ]
  %cmp.not34 = phi i1 [ true, %for.body.lr.ph ], [ %cmp.not, %if.end ]
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 1
  %3 = load ptr, ptr %m_n, align 8, !tbaa !219
  %cmp5 = icmp eq ptr %3, %node0
  br i1 %cmp5, label %land.lhs.true, label %lor.lhs.false

land.lhs.true:                                    ; preds = %for.body
  %arrayidx7 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 1, i64 1
  %4 = load ptr, ptr %arrayidx7, align 8, !tbaa !219
  %cmp9 = icmp eq ptr %4, %node1
  br i1 %cmp9, label %cleanup22, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %land.lhs.true, %for.body
  %cmp13 = icmp eq ptr %3, %node1
  br i1 %cmp13, label %land.lhs.true14, label %if.end

land.lhs.true14:                                  ; preds = %lor.lhs.false
  %arrayidx16 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 1, i64 1
  %5 = load ptr, ptr %arrayidx16, align 8, !tbaa !219
  %cmp18 = icmp eq ptr %5, %node0
  br i1 %cmp18, label %cleanup22, label %if.end

if.end:                                           ; preds = %land.lhs.true14, %lor.lhs.false
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp.not = icmp ult i64 %indvars.iv.next, %2
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %cleanup22, label %for.body

cleanup22:                                        ; preds = %land.lhs.true14, %land.lhs.true, %if.end, %entry
  %cmp.not.lcssa = phi i1 [ false, %entry ], [ %cmp.not, %if.end ], [ %cmp.not34, %land.lhs.true ], [ %cmp.not34, %land.lhs.true14 ]
  ret i1 %cmp.not.lcssa
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local noundef zeroext i1 @_ZNK10btSoftBody9checkFaceEiii(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, i32 noundef %node0, i32 noundef %node1, i32 noundef %node2) local_unnamed_addr #9 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i = sext i32 %node0 to i64
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i
  %idxprom.i52 = sext i32 %node1 to i64
  %arrayidx.i53 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i52
  %idxprom.i55 = sext i32 %node2 to i64
  %arrayidx.i56 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i55
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %1 = load i32, ptr %m_size.i, align 4, !tbaa !96
  %cmp.not63 = icmp sgt i32 %1, 0
  br i1 %cmp.not63, label %for.body.lr.ph, label %cleanup38

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i57 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %2 = load ptr, ptr %m_data.i57, align 8, !tbaa !95
  %3 = zext i32 %1 to i64
  %wide.trip.count = zext i32 %1 to i64
  br label %for.body

for.cond:                                         ; preds = %if.then.1, %if.then, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %cmp.not = icmp ult i64 %indvars.iv.next, %3
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %cleanup38, label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.cond
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.cond ]
  %cmp.not65 = phi i1 [ true, %for.body.lr.ph ], [ %cmp.not, %for.cond ]
  %arrayidx = getelementptr inbounds %"struct.btSoftBody::Face", ptr %2, i64 %indvars.iv, i32 1, i64 0
  %4 = load ptr, ptr %arrayidx, align 8, !tbaa !219
  %cmp15 = icmp eq ptr %4, %arrayidx.i
  %cmp20 = icmp eq ptr %4, %arrayidx.i53
  %or.cond = select i1 %cmp15, i1 true, i1 %cmp20
  %cmp26 = icmp eq ptr %4, %arrayidx.i56
  %or.cond60 = select i1 %or.cond, i1 true, i1 %cmp26
  br i1 %or.cond60, label %if.then, label %for.cond

if.then:                                          ; preds = %for.body
  %arrayidx.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %2, i64 %indvars.iv, i32 1, i64 1
  %5 = load ptr, ptr %arrayidx.1, align 8, !tbaa !219
  %cmp15.1 = icmp eq ptr %5, %arrayidx.i
  %cmp20.1 = icmp eq ptr %5, %arrayidx.i53
  %or.cond.1 = select i1 %cmp15.1, i1 true, i1 %cmp20.1
  %cmp26.1 = icmp eq ptr %5, %arrayidx.i56
  %or.cond60.1 = select i1 %or.cond.1, i1 true, i1 %cmp26.1
  br i1 %or.cond60.1, label %if.then.1, label %for.cond

if.then.1:                                        ; preds = %if.then
  %arrayidx.2 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %2, i64 %indvars.iv, i32 1, i64 2
  %6 = load ptr, ptr %arrayidx.2, align 8, !tbaa !219
  %cmp15.2 = icmp eq ptr %6, %arrayidx.i
  %cmp20.2 = icmp eq ptr %6, %arrayidx.i53
  %or.cond.2 = select i1 %cmp15.2, i1 true, i1 %cmp20.2
  %cmp26.2 = icmp eq ptr %6, %arrayidx.i56
  %or.cond60.2 = select i1 %or.cond.2, i1 true, i1 %cmp26.2
  br i1 %or.cond60.2, label %cleanup38, label %for.cond

cleanup38:                                        ; preds = %for.cond, %if.then.1, %entry
  %cmp.not.lcssa = phi i1 [ false, %entry ], [ %cmp.not65, %if.then.1 ], [ %cmp.not, %for.cond ]
  ret i1 %cmp.not.lcssa
}

declare noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef, i32 noundef) local_unnamed_addr #1

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendNoteEPKcRK9btVector3RK9btVector4PNS_4NodeES9_S9_S9_(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %text, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %o, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %c, ptr noundef %n0, ptr noundef %n1, ptr noundef %n2, ptr noundef %n3) local_unnamed_addr #4 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %n.sroa.6 = alloca [4 x float], align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %n.sroa.6)
  %0 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %0, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_.exit, !prof !173

init.check.i:                                     ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_E9zerodummy) #38
  %tobool.not.i = icmp eq i32 %1, 0
  br i1 %tobool.not.i, label %_ZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_.exit, label %init.i

init.i:                                           ; preds = %init.check.i
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_E9zerodummy, align 8, !tbaa !174
  %2 = tail call ptr @llvm.invariant.start.p0(i64 88, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_E9zerodummy)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_.exit

_ZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_.exit: ; preds = %entry, %init.check.i, %init.i
  %n.sroa.0.0.copyload = load ptr, ptr @_ZZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_E9zerodummy, align 8
  %n.sroa.16.0.copyload = load i32, ptr getelementptr inbounds (i8, ptr @_ZZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_E9zerodummy, i64 36), align 4
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %n.sroa.6, ptr noundef nonnull align 4 dereferenceable(16) %o, i64 16, i1 false), !tbaa.struct !163
  %3 = load <4 x float>, ptr %c, align 4, !tbaa !137
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 2
  %4 = load i32, ptr %m_size.i.i, align 4, !tbaa !84
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 3
  %5 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !85
  %cmp.i = icmp eq i32 %4, %5
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE9push_backERKS1_.exit

if.then.i:                                        ; preds = %_ZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_.exit
  %tobool.not.i.i = icmp eq i32 %4, 0
  %mul.i.i = shl nsw i32 %4, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %4, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE9push_backERKS1_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = mul nsw i64 %conv.i.i.i.i, 88
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !84
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %6 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %4, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %6, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 5
  %wide.trip.count.i.i.i = zext i32 %6 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 1
  %7 = icmp eq i32 %6, 1
  br i1 %7, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967294
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.1, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds %"struct.btSoftBody::Note", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %8 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !83
  %arrayidx3.i.i.i = getelementptr inbounds %"struct.btSoftBody::Note", ptr %8, i64 %indvars.iv.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %arrayidx.i.i.i, ptr noundef nonnull align 8 dereferenceable(88) %arrayidx3.i.i.i, i64 88, i1 false)
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Note", ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %9 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !83
  %arrayidx3.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Note", ptr %9, i64 %indvars.iv.next.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %arrayidx.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(88) %arrayidx3.i.i.i.1, i64 88, i1 false)
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Note", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.unr
  %10 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !83
  %arrayidx3.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Note", ptr %10, i64 %indvars.iv.i.i.i.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(88) %arrayidx.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(88) %arrayidx3.i.i.i.epil, i64 88, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i: ; preds = %for.body.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 5
  %11 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !83
  %tobool.not.i10.i.i = icmp eq ptr %11, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 6
  %12 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %12, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %11)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody4NoteEE4copyEiiPS1_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !82
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !83
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !85
  %.pre7.i = load i32, ptr %m_size.i.i, align 4, !tbaa !84
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE9push_backERKS1_.exit

_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE9push_backERKS1_.exit: ; preds = %_ZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_.exit, %if.then.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE10deallocateEv.exit.i.i
  %13 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4NoteEE10deallocateEv.exit.i.i ], [ %4, %if.then.i ], [ %4, %_ZL14ZeroInitializeIN10btSoftBody4NoteEEvRT_.exit ]
  %tobool.not = icmp ne ptr %n0, null
  %cond = zext i1 %tobool.not to i32
  %tobool15.not = icmp ne ptr %n1, null
  %cond16 = zext i1 %tobool15.not to i32
  %add18 = add nuw nsw i32 %cond16, %cond
  %tobool21.not = icmp ne ptr %n2, null
  %cond22 = zext i1 %tobool21.not to i32
  %add24 = add nuw nsw i32 %add18, %cond22
  %tobool27.not = icmp ne ptr %n3, null
  %cond28 = zext i1 %tobool27.not to i32
  %add30 = add nuw nsw i32 %add24, %cond28
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 5
  %14 = load ptr, ptr %m_data.i, align 8, !tbaa !83
  %idxprom.i = sext i32 %13 to i64
  %arrayidx.i40 = getelementptr inbounds %"struct.btSoftBody::Note", ptr %14, i64 %idxprom.i
  store ptr %n.sroa.0.0.copyload, ptr %arrayidx.i40, align 8
  %n.sroa.5.0.arrayidx.i40.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i40, i64 8
  store ptr %text, ptr %n.sroa.5.0.arrayidx.i40.sroa_idx, align 8
  %n.sroa.6.0.arrayidx.i40.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i40, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %n.sroa.6.0.arrayidx.i40.sroa_idx, ptr noundef nonnull align 8 dereferenceable(16) %n.sroa.6, i64 16, i1 false)
  %n.sroa.7.0.arrayidx.i40.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i40, i64 32
  store i32 %add30, ptr %n.sroa.7.0.arrayidx.i40.sroa_idx, align 8
  %n.sroa.16.0.arrayidx.i40.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i40, i64 36
  store i32 %n.sroa.16.0.copyload, ptr %n.sroa.16.0.arrayidx.i40.sroa_idx, align 4
  %n.sroa.1648.0.arrayidx.i40.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i40, i64 40
  store ptr %n0, ptr %n.sroa.1648.0.arrayidx.i40.sroa_idx, align 8
  %n.sroa.17.0.arrayidx.i40.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i40, i64 48
  store ptr %n1, ptr %n.sroa.17.0.arrayidx.i40.sroa_idx, align 8
  %n.sroa.18.0.arrayidx.i40.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i40, i64 56
  store ptr %n2, ptr %n.sroa.18.0.arrayidx.i40.sroa_idx, align 8
  %n.sroa.19.0.arrayidx.i40.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i40, i64 64
  store ptr %n3, ptr %n.sroa.19.0.arrayidx.i40.sroa_idx, align 8
  %n.sroa.20.0.arrayidx.i40.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i40, i64 72
  store <4 x float> %3, ptr %n.sroa.20.0.arrayidx.i40.sroa_idx, align 8
  %15 = load i32, ptr %m_size.i.i, align 4, !tbaa !84
  %inc.i = add nsw i32 %15, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !84
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %n.sroa.6)
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendNoteEPKcRK9btVector3PNS_4NodeE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %text, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %o, ptr noundef %feature) local_unnamed_addr #4 align 2 {
entry:
  %ref.tmp = alloca %class.btVector4, align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #38
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, ptr %ref.tmp, align 16, !tbaa !137
  call void @_ZN10btSoftBody10appendNoteEPKcRK9btVector3RK9btVector4PNS_4NodeES9_S9_S9_(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %text, ptr noundef nonnull align 4 dereferenceable(16) %o, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp, ptr noundef %feature, ptr noundef null, ptr noundef null, ptr noundef null)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendNoteEPKcRK9btVector3PNS_4LinkE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %text, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %o, ptr nocapture noundef readonly %feature) local_unnamed_addr #4 align 2 {
entry:
  %ref.tmp = alloca %class.btVector4, align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #38
  store <4 x float> <float 5.000000e-01, float 5.000000e-01, float 0.000000e+00, float 0.000000e+00>, ptr %ref.tmp, align 16, !tbaa !137
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %feature, i64 0, i32 1
  %0 = load ptr, ptr %m_n, align 8, !tbaa !219
  %arrayidx5 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %feature, i64 0, i32 1, i64 1
  %1 = load ptr, ptr %arrayidx5, align 8, !tbaa !219
  call void @_ZN10btSoftBody10appendNoteEPKcRK9btVector3RK9btVector4PNS_4NodeES9_S9_S9_(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %text, ptr noundef nonnull align 4 dereferenceable(16) %o, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp, ptr noundef %0, ptr noundef %1, ptr noundef null, ptr noundef null)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendNoteEPKcRK9btVector3PNS_4FaceE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %text, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %o, ptr nocapture noundef readonly %feature) local_unnamed_addr #4 align 2 {
entry:
  %ref.tmp = alloca %class.btVector4, align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #38
  store <4 x float> <float 0x3FD5555560000000, float 0x3FD5555560000000, float 0x3FD5555560000000, float 0.000000e+00>, ptr %ref.tmp, align 16, !tbaa !137
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %feature, i64 0, i32 1
  %0 = load ptr, ptr %m_n, align 8, !tbaa !219
  %arrayidx4 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %feature, i64 0, i32 1, i64 1
  %1 = load ptr, ptr %arrayidx4, align 8, !tbaa !219
  %arrayidx6 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %feature, i64 0, i32 1, i64 2
  %2 = load ptr, ptr %arrayidx6, align 8, !tbaa !219
  call void @_ZN10btSoftBody10appendNoteEPKcRK9btVector3RK9btVector4PNS_4NodeES9_S9_S9_(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %text, ptr noundef nonnull align 4 dereferenceable(16) %o, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp, ptr noundef %0, ptr noundef %1, ptr noundef %2, ptr noundef null)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendNodeERK9btVector3f(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %x, float noundef %m) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %ref.tmp17 = alloca %struct.btDbvtAabbMm, align 8
  %m_capacity.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 3
  %0 = load i32, ptr %m_capacity.i, align 8, !tbaa !89
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %1 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp = icmp eq i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_ZN10btSoftBody17pointersToIndicesEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  %2 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %mul = shl nsw i32 %2, 1
  %add = or i32 %mul, 1
  %3 = load i32, ptr %m_capacity.i, align 8, !tbaa !89
  %cmp.i = icmp slt i32 %3, %add
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE7reserveEi.exit

if.then.i:                                        ; preds = %if.then
  %conv.i.i.i = sext i32 %add to i64
  %mul.i.i.i = mul nsw i64 %conv.i.i.i, 120
  %call.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i, i32 noundef 16)
  %4 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp7.i.i = icmp sgt i32 %4, 0
  br i1 %cmp7.i.i, label %for.body.lr.ph.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i

for.body.lr.ph.i.i:                               ; preds = %if.then.i
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %wide.trip.count.i.i = zext i32 %4 to i64
  %xtraiter = and i64 %wide.trip.count.i.i, 1
  %5 = icmp eq i32 %4, 1
  br i1 %5, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.new

for.body.lr.ph.i.i.new:                           ; preds = %for.body.lr.ph.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i, 4294967294
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %for.body.lr.ph.i.i.new
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.new ], [ %indvars.iv.next.i.i.1, %for.body.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.new ], [ %niter.next.1, %for.body.i.i ]
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %call.i.i.i, i64 %indvars.iv.i.i
  %6 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %arrayidx3.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 %indvars.iv.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %arrayidx.i.i, ptr noundef nonnull align 8 dereferenceable(120) %arrayidx3.i.i, i64 120, i1 false)
  %indvars.iv.next.i.i = or i64 %indvars.iv.i.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %call.i.i.i, i64 %indvars.iv.next.i.i
  %7 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %arrayidx3.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 %indvars.iv.next.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %arrayidx.i.i.1, ptr noundef nonnull align 8 dereferenceable(120) %arrayidx3.i.i.1, i64 120, i1 false)
  %indvars.iv.next.i.i.1 = add nuw nsw i64 %indvars.iv.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.loopexit.unr-lcssa, label %for.body.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.loopexit.unr-lcssa: ; preds = %for.body.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i.1, %for.body.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i, label %for.body.i.i.epil

for.body.i.i.epil:                                ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.loopexit.unr-lcssa
  %arrayidx.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %call.i.i.i, i64 %indvars.iv.i.i.unr
  %8 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %arrayidx3.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %8, i64 %indvars.iv.i.i.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %arrayidx.i.i.epil, ptr noundef nonnull align 8 dereferenceable(120) %arrayidx3.i.i.epil, i64 120, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i: ; preds = %for.body.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.loopexit.unr-lcssa, %if.then.i
  %m_data.i9.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %9 = load ptr, ptr %m_data.i9.i, align 8, !tbaa !87
  %tobool.not.i10.i = icmp eq ptr %9, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 6
  %10 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %10, 0
  %or.cond.i = select i1 %tobool.not.i10.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE10deallocateEv.exit.i, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %9)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE10deallocateEv.exit.i

_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE10deallocateEv.exit.i: ; preds = %if.then3.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !86
  store ptr %call.i.i.i, ptr %m_data.i9.i, align 8, !tbaa !87
  store i32 %add, ptr %m_capacity.i, align 8, !tbaa !89
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE7reserveEi.exit

_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE7reserveEi.exit: ; preds = %if.then, %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE10deallocateEv.exit.i
  tail call void @_ZN10btSoftBody17indicesToPointersEPKi(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef null)
  br label %if.end

if.end:                                           ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE7reserveEi.exit, %entry
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %11 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable = load ptr, ptr %11, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 11
  %12 = load ptr, ptr %vfn, align 8
  %call8 = tail call noundef float %12(ptr noundef nonnull align 8 dereferenceable(24) %11)
  %13 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %14 = load i32, ptr %m_capacity.i, align 8, !tbaa !89
  %cmp.i32 = icmp eq i32 %13, %14
  br i1 %cmp.i32, label %if.then.i33, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE9push_backERKS1_.exit

if.then.i33:                                      ; preds = %if.end
  %tobool.not.i.i = icmp eq i32 %13, 0
  %mul.i.i = shl nsw i32 %13, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %13, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE9push_backERKS1_.exit

if.then.i.i:                                      ; preds = %if.then.i33
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = mul nsw i64 %conv.i.i.i.i, 120
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i, align 4, !tbaa !88
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %15 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %13, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %15, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %wide.trip.count.i.i.i = zext i32 %15 to i64
  %xtraiter39 = and i64 %wide.trip.count.i.i.i, 1
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter41 = and i64 %wide.trip.count.i.i.i, 4294967294
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %niter42 = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter42.next.1, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %17 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !87
  %arrayidx3.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %17, i64 %indvars.iv.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %arrayidx.i.i.i, ptr noundef nonnull align 8 dereferenceable(120) %arrayidx3.i.i.i, i64 120, i1 false)
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %18 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !87
  %arrayidx3.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %indvars.iv.next.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %arrayidx.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(120) %arrayidx3.i.i.i.1, i64 120, i1 false)
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %niter42.next.1 = add i64 %niter42, 2
  %niter42.ncmp.1 = icmp eq i64 %niter42.next.1, %unroll_iter41
  br i1 %niter42.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %lcmp.mod40.not = icmp eq i64 %xtraiter39, 0
  br i1 %lcmp.mod40.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.unr
  %19 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !87
  %arrayidx3.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 %indvars.iv.i.i.i.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %arrayidx.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(120) %arrayidx3.i.i.i.epil, i64 120, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i: ; preds = %for.body.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %20 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !87
  %tobool.not.i10.i.i = icmp eq ptr %20, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 6
  %21 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %21, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %20)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody4NodeEE4copyEiiPS1_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !86
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !87
  store i32 %cond.i.i, ptr %m_capacity.i, align 8, !tbaa !89
  %.pre7.i = load i32, ptr %m_size.i, align 4, !tbaa !88
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE9push_backERKS1_.exit

_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE9push_backERKS1_.exit: ; preds = %if.end, %if.then.i33, %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE10deallocateEv.exit.i.i
  %22 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE10deallocateEv.exit.i.i ], [ %13, %if.then.i33 ], [ %13, %if.end ]
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %23 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i = sext i32 %22 to i64
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %23, i64 %idxprom.i
  store ptr null, ptr %arrayidx.i, align 8
  %24 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %inc.i = add nsw i32 %24, 1
  store i32 %inc.i, ptr %m_size.i, align 4, !tbaa !88
  %25 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %26 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %26, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_.exit, !prof !173

init.check.i:                                     ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE9push_backERKS1_.exit
  %27 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy) #38
  %tobool.not.i = icmp eq i32 %27, 0
  br i1 %tobool.not.i, label %_ZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_.exit, label %init.i

init.i:                                           ; preds = %init.check.i
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy, align 8, !tbaa !174
  %28 = tail call ptr @llvm.invariant.start.p0(i64 120, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_.exit

_ZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_.exit: ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4NodeEE9push_backERKS1_.exit, %init.check.i, %init.i
  %idxprom.i36 = sext i32 %24 to i64
  %arrayidx.i37 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %25, i64 %idxprom.i36
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(113) %arrayidx.i37, ptr noundef nonnull align 8 dereferenceable(113) @_ZZL14ZeroInitializeIN10btSoftBody4NodeEEvRT_E9zerodummy, i64 113, i1 false)
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %25, i64 %idxprom.i36, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_x, ptr noundef nonnull align 4 dereferenceable(16) %x, i64 16, i1 false), !tbaa.struct !163
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %25, i64 %idxprom.i36, i32 2
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_q, ptr noundef nonnull align 4 dereferenceable(16) %x, i64 16, i1 false)
  %cmp15 = fcmp ogt float %m, 0.000000e+00
  %div = fdiv float 1.000000e+00, %m
  %cond = select i1 %cmp15, float %div, float 0.000000e+00
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %25, i64 %idxprom.i36, i32 6
  store float %cond, ptr %m_im, align 8, !tbaa !175
  %m_data.i38 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %29 = load ptr, ptr %m_data.i38, align 8, !tbaa !119
  %30 = load ptr, ptr %29, align 8, !tbaa !219
  %m_material = getelementptr inbounds %"struct.btSoftBody::Feature", ptr %arrayidx.i37, i64 0, i32 1
  store ptr %30, ptr %m_material, align 8, !tbaa !184
  %m_ndbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %ref.tmp17) #38
  tail call void @llvm.experimental.noalias.scope.decl(metadata !225)
  tail call void @llvm.experimental.noalias.scope.decl(metadata !228)
  %31 = load <2 x float>, ptr %m_x, align 4, !tbaa !137, !noalias !231
  %32 = insertelement <2 x float> poison, float %call8, i64 0
  %33 = shufflevector <2 x float> %32, <2 x float> poison, <2 x i32> zeroinitializer
  %34 = fsub <2 x float> %31, %33
  %arrayidx11.i.i.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %35 = load float, ptr %arrayidx11.i.i.i, align 4, !tbaa !137, !noalias !231
  %sub14.i.i.i = fsub float %35, %call8
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i.i, i64 0
  store <2 x float> %34, ptr %ref.tmp17, align 8, !tbaa.struct !163, !alias.scope !231
  %ref.tmp.sroa.4.0.mi.sroa_idx.i.i = getelementptr inbounds i8, ptr %ref.tmp17, i64 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i, ptr %ref.tmp.sroa.4.0.mi.sroa_idx.i.i, align 8, !tbaa.struct !165, !alias.scope !231
  %36 = fadd <2 x float> %33, %31
  %add14.i.i.i = fadd float %call8, %35
  %retval.sroa.3.12.vec.insert.i12.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i.i, i64 0
  %mx.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp17, i64 0, i32 1
  store <2 x float> %36, ptr %mx.i.i, align 8, !tbaa.struct !163, !alias.scope !231
  %ref.tmp1.sroa.4.0.mx.sroa_idx.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp17, i64 0, i32 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i12.i.i, ptr %ref.tmp1.sroa.4.0.mx.sroa_idx.i.i, align 8, !tbaa.struct !165, !alias.scope !231
  %call19 = call noundef ptr @_ZN6btDbvt6insertERK12btDbvtAabbMmPv(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt, ptr noundef nonnull align 4 dereferenceable(32) %ref.tmp17, ptr noundef %arrayidx.i37)
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Node", ptr %25, i64 %idxprom.i36, i32 8
  store ptr %call19, ptr %m_leaf, align 8, !tbaa !183
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %ref.tmp17) #38
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody17pointersToIndicesEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #10 align 2 {
entry:
  %i = alloca i32, align 8
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %i)
  store i32 0, ptr %i, align 8, !tbaa !140
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %1 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp233 = icmp sgt i32 %1, 0
  br i1 %cmp233, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %1 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.preheader, %for.inc
  %indvars.iv = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next, %for.inc ]
  %2 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv, i32 8
  %3 = load ptr, ptr %m_leaf, align 8, !tbaa !183
  %tobool.not = icmp eq ptr %3, null
  br i1 %tobool.not, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %i.0.i.0.i.0.i.0. = load ptr, ptr %i, align 8
  %4 = ptrtoint ptr %i.0.i.0.i.0.i.0. to i64
  %sext278 = shl i64 %4, 32
  %idxprom.i175 = ashr exact i64 %sext278, 32
  %m_leaf8 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %idxprom.i175, i32 8
  %5 = load ptr, ptr %m_leaf8, align 8, !tbaa !183
  %6 = getelementptr inbounds %struct.btDbvtNode, ptr %5, i64 0, i32 2
  store ptr %i.0.i.0.i.0.i.0., ptr %6, align 8, !tbaa !164
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %7 = trunc i64 %indvars.iv.next to i32
  store i32 %7, ptr %i, align 8, !tbaa !140
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.inc, %entry
  %m_size.i177 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %8 = load i32, ptr %m_size.i177, align 4, !tbaa !92
  %cmp11236 = icmp sgt i32 %8, 0
  br i1 %cmp11236, label %for.body12.lr.ph, label %for.end33

for.body12.lr.ph:                                 ; preds = %for.end
  %m_data.i178 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %sub.ptr.rhs.cast = ptrtoint ptr %0 to i64
  %wide.trip.count258 = zext i32 %8 to i64
  br label %for.body12

for.body12:                                       ; preds = %for.body12.lr.ph, %for.body12
  %indvars.iv255 = phi i64 [ 0, %for.body12.lr.ph ], [ %indvars.iv.next256, %for.body12 ]
  %9 = load ptr, ptr %m_data.i178, align 8, !tbaa !91
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %9, i64 %indvars.iv255, i32 1
  %10 = load ptr, ptr %m_n, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %10 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 120
  %11 = inttoptr i64 %sub.ptr.div to ptr
  store ptr %11, ptr %m_n, align 8, !tbaa !219
  %12 = load ptr, ptr %m_data.i178, align 8, !tbaa !91
  %arrayidx22 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %12, i64 %indvars.iv255, i32 1, i64 1
  %13 = load ptr, ptr %arrayidx22, align 8, !tbaa !219
  %sub.ptr.lhs.cast23 = ptrtoint ptr %13 to i64
  %sub.ptr.sub25 = sub i64 %sub.ptr.lhs.cast23, %sub.ptr.rhs.cast
  %sub.ptr.div26 = sdiv exact i64 %sub.ptr.sub25, 120
  %14 = inttoptr i64 %sub.ptr.div26 to ptr
  store ptr %14, ptr %arrayidx22, align 8, !tbaa !219
  %indvars.iv.next256 = add nuw nsw i64 %indvars.iv255, 1
  %exitcond259.not = icmp eq i64 %indvars.iv.next256, %wide.trip.count258
  br i1 %exitcond259.not, label %for.end33, label %for.body12

for.end33:                                        ; preds = %for.body12, %for.end
  store i32 0, ptr %i, align 8, !tbaa !140
  %m_size.i190 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %15 = load i32, ptr %m_size.i190, align 4, !tbaa !96
  %cmp36239 = icmp sgt i32 %15, 0
  br i1 %cmp36239, label %for.body37.lr.ph, label %for.end85

for.body37.lr.ph:                                 ; preds = %for.end33
  %m_data.i191 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %sub.ptr.rhs.cast43 = ptrtoint ptr %0 to i64
  %wide.trip.count263 = zext i32 %15 to i64
  br label %for.body37

for.body37:                                       ; preds = %for.body37.lr.ph, %for.inc83
  %indvars.iv260 = phi i64 [ 0, %for.body37.lr.ph ], [ %indvars.iv.next261, %for.inc83 ]
  %16 = load ptr, ptr %m_data.i191, align 8, !tbaa !95
  %m_n40 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %16, i64 %indvars.iv260, i32 1
  %17 = load ptr, ptr %m_n40, align 8, !tbaa !219
  %sub.ptr.lhs.cast42 = ptrtoint ptr %17 to i64
  %sub.ptr.sub44 = sub i64 %sub.ptr.lhs.cast42, %sub.ptr.rhs.cast43
  %sub.ptr.div45 = sdiv exact i64 %sub.ptr.sub44, 120
  %18 = inttoptr i64 %sub.ptr.div45 to ptr
  store ptr %18, ptr %m_n40, align 8, !tbaa !219
  %19 = load ptr, ptr %m_data.i191, align 8, !tbaa !95
  %arrayidx53 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %19, i64 %indvars.iv260, i32 1, i64 1
  %20 = load ptr, ptr %arrayidx53, align 8, !tbaa !219
  %sub.ptr.lhs.cast54 = ptrtoint ptr %20 to i64
  %sub.ptr.sub56 = sub i64 %sub.ptr.lhs.cast54, %sub.ptr.rhs.cast43
  %sub.ptr.div57 = sdiv exact i64 %sub.ptr.sub56, 120
  %21 = inttoptr i64 %sub.ptr.div57 to ptr
  store ptr %21, ptr %arrayidx53, align 8, !tbaa !219
  %22 = load ptr, ptr %m_data.i191, align 8, !tbaa !95
  %arrayidx65 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %22, i64 %indvars.iv260, i32 1, i64 2
  %23 = load ptr, ptr %arrayidx65, align 8, !tbaa !219
  %sub.ptr.lhs.cast66 = ptrtoint ptr %23 to i64
  %sub.ptr.sub68 = sub i64 %sub.ptr.lhs.cast66, %sub.ptr.rhs.cast43
  %sub.ptr.div69 = sdiv exact i64 %sub.ptr.sub68, 120
  %24 = inttoptr i64 %sub.ptr.div69 to ptr
  store ptr %24, ptr %arrayidx65, align 8, !tbaa !219
  %25 = load ptr, ptr %m_data.i191, align 8, !tbaa !95
  %m_leaf76 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %25, i64 %indvars.iv260, i32 4
  %26 = load ptr, ptr %m_leaf76, align 8, !tbaa !232
  %tobool77.not = icmp eq ptr %26, null
  br i1 %tobool77.not, label %for.inc83, label %if.then78

if.then78:                                        ; preds = %for.body37
  %i.0.i.0.i.0.i.0.137 = load ptr, ptr %i, align 8
  %27 = ptrtoint ptr %i.0.i.0.i.0.i.0.137 to i64
  %sext = shl i64 %27, 32
  %idxprom.i213 = ashr exact i64 %sext, 32
  %m_leaf81 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %25, i64 %idxprom.i213, i32 4
  %28 = load ptr, ptr %m_leaf81, align 8, !tbaa !232
  %29 = getelementptr inbounds %struct.btDbvtNode, ptr %28, i64 0, i32 2
  store ptr %i.0.i.0.i.0.i.0.137, ptr %29, align 8, !tbaa !164
  br label %for.inc83

for.inc83:                                        ; preds = %for.body37, %if.then78
  %indvars.iv.next261 = add nuw nsw i64 %indvars.iv260, 1
  %30 = trunc i64 %indvars.iv.next261 to i32
  store i32 %30, ptr %i, align 8, !tbaa !140
  %exitcond264.not = icmp eq i64 %indvars.iv.next261, %wide.trip.count263
  br i1 %exitcond264.not, label %for.end85, label %for.body37

for.end85:                                        ; preds = %for.inc83, %for.end33
  %m_size.i215 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 2
  %31 = load i32, ptr %m_size.i215, align 4, !tbaa !104
  %cmp88243 = icmp sgt i32 %31, 0
  br i1 %cmp88243, label %for.body89.lr.ph, label %for.end101

for.body89.lr.ph:                                 ; preds = %for.end85
  %m_data.i216 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 5
  %32 = load ptr, ptr %m_data.i216, align 8, !tbaa !103
  %sub.ptr.rhs.cast93 = ptrtoint ptr %0 to i64
  %wide.trip.count268 = zext i32 %31 to i64
  %xtraiter = and i64 %wide.trip.count268, 1
  %33 = icmp eq i32 %31, 1
  br i1 %33, label %for.end101.loopexit.unr-lcssa, label %for.body89.lr.ph.new

for.body89.lr.ph.new:                             ; preds = %for.body89.lr.ph
  %unroll_iter = and i64 %wide.trip.count268, 4294967294
  br label %for.body89

for.body89:                                       ; preds = %for.body89, %for.body89.lr.ph.new
  %indvars.iv265 = phi i64 [ 0, %for.body89.lr.ph.new ], [ %indvars.iv.next266.1, %for.body89 ]
  %niter = phi i64 [ 0, %for.body89.lr.ph.new ], [ %niter.next.1, %for.body89 ]
  %arrayidx.i218 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %32, i64 %indvars.iv265
  %34 = load ptr, ptr %arrayidx.i218, align 8, !tbaa !234
  %sub.ptr.lhs.cast92 = ptrtoint ptr %34 to i64
  %sub.ptr.sub94 = sub i64 %sub.ptr.lhs.cast92, %sub.ptr.rhs.cast93
  %sub.ptr.div95 = sdiv exact i64 %sub.ptr.sub94, 120
  %35 = inttoptr i64 %sub.ptr.div95 to ptr
  store ptr %35, ptr %arrayidx.i218, align 8, !tbaa !234
  %indvars.iv.next266 = or i64 %indvars.iv265, 1
  %arrayidx.i218.1 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %32, i64 %indvars.iv.next266
  %36 = load ptr, ptr %arrayidx.i218.1, align 8, !tbaa !234
  %sub.ptr.lhs.cast92.1 = ptrtoint ptr %36 to i64
  %sub.ptr.sub94.1 = sub i64 %sub.ptr.lhs.cast92.1, %sub.ptr.rhs.cast93
  %sub.ptr.div95.1 = sdiv exact i64 %sub.ptr.sub94.1, 120
  %37 = inttoptr i64 %sub.ptr.div95.1 to ptr
  store ptr %37, ptr %arrayidx.i218.1, align 8, !tbaa !234
  %indvars.iv.next266.1 = add nuw nsw i64 %indvars.iv265, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.end101.loopexit.unr-lcssa, label %for.body89

for.end101.loopexit.unr-lcssa:                    ; preds = %for.body89, %for.body89.lr.ph
  %indvars.iv265.unr = phi i64 [ 0, %for.body89.lr.ph ], [ %indvars.iv.next266.1, %for.body89 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end101, label %for.body89.epil

for.body89.epil:                                  ; preds = %for.end101.loopexit.unr-lcssa
  %arrayidx.i218.epil = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %32, i64 %indvars.iv265.unr
  %38 = load ptr, ptr %arrayidx.i218.epil, align 8, !tbaa !234
  %sub.ptr.lhs.cast92.epil = ptrtoint ptr %38 to i64
  %sub.ptr.sub94.epil = sub i64 %sub.ptr.lhs.cast92.epil, %sub.ptr.rhs.cast93
  %sub.ptr.div95.epil = sdiv exact i64 %sub.ptr.sub94.epil, 120
  %39 = inttoptr i64 %sub.ptr.div95.epil to ptr
  store ptr %39, ptr %arrayidx.i218.epil, align 8, !tbaa !234
  br label %for.end101

for.end101:                                       ; preds = %for.body89.epil, %for.end101.loopexit.unr-lcssa, %for.end85
  store i32 0, ptr %i, align 8, !tbaa !140
  %m_size.i222 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 2
  %40 = load i32, ptr %m_size.i222, align 4, !tbaa !84
  %cmp104251 = icmp sgt i32 %40, 0
  br i1 %cmp104251, label %for.cond106.preheader.lr.ph, label %for.end129

for.cond106.preheader.lr.ph:                      ; preds = %for.end101
  %m_data.i223 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 5
  %sub.ptr.rhs.cast116 = ptrtoint ptr %0 to i64
  %wide.trip.count276 = zext i32 %40 to i64
  %.pre = load ptr, ptr %m_data.i223, align 8, !tbaa !83
  br label %for.cond106.preheader

for.cond106.preheader:                            ; preds = %for.cond106.preheader.lr.ph, %for.cond.cleanup
  %41 = phi ptr [ %.pre, %for.cond106.preheader.lr.ph ], [ %43, %for.cond.cleanup ]
  %indvars.iv273 = phi i64 [ 0, %for.cond106.preheader.lr.ph ], [ %indvars.iv.next274, %for.cond.cleanup ]
  %m_rank246 = getelementptr inbounds %"struct.btSoftBody::Note", ptr %41, i64 %indvars.iv273, i32 3
  %42 = load i32, ptr %m_rank246, align 8, !tbaa !236
  %cmp109247 = icmp sgt i32 %42, 0
  br i1 %cmp109247, label %for.body110, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body110, %for.cond106.preheader
  %43 = phi ptr [ %41, %for.cond106.preheader ], [ %47, %for.body110 ]
  %indvars.iv.next274 = add nuw nsw i64 %indvars.iv273, 1
  %exitcond277.not = icmp eq i64 %indvars.iv.next274, %wide.trip.count276
  br i1 %exitcond277.not, label %for.end129, label %for.cond106.preheader

for.body110:                                      ; preds = %for.cond106.preheader, %for.body110
  %indvars.iv270 = phi i64 [ %indvars.iv.next271, %for.body110 ], [ 0, %for.cond106.preheader ]
  %44 = phi ptr [ %47, %for.body110 ], [ %41, %for.cond106.preheader ]
  %arrayidx114 = getelementptr inbounds %"struct.btSoftBody::Note", ptr %44, i64 %indvars.iv273, i32 4, i64 %indvars.iv270
  %45 = load ptr, ptr %arrayidx114, align 8, !tbaa !219
  %sub.ptr.lhs.cast115 = ptrtoint ptr %45 to i64
  %sub.ptr.sub117 = sub i64 %sub.ptr.lhs.cast115, %sub.ptr.rhs.cast116
  %sub.ptr.div118 = sdiv exact i64 %sub.ptr.sub117, 120
  %46 = inttoptr i64 %sub.ptr.div118 to ptr
  store ptr %46, ptr %arrayidx114, align 8, !tbaa !219
  %indvars.iv.next271 = add nuw nsw i64 %indvars.iv270, 1
  %47 = load ptr, ptr %m_data.i223, align 8, !tbaa !83
  %m_rank = getelementptr inbounds %"struct.btSoftBody::Note", ptr %47, i64 %indvars.iv273, i32 3
  %48 = load i32, ptr %m_rank, align 8, !tbaa !236
  %49 = sext i32 %48 to i64
  %cmp109 = icmp slt i64 %indvars.iv.next271, %49
  br i1 %cmp109, label %for.body110, label %for.cond.cleanup

for.end129:                                       ; preds = %for.cond.cleanup, %for.end101
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %i)
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody17indicesToPointersEPKi(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, ptr noundef readonly %map) local_unnamed_addr #11 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %1 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp407 = icmp sgt i32 %1, 0
  br i1 %cmp407, label %for.body.preheader, label %for.end

for.body.preheader:                               ; preds = %entry
  %wide.trip.count = zext i32 %1 to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %2 = icmp eq i32 %1, 1
  br i1 %2, label %for.end.loopexit.unr-lcssa, label %for.body.preheader.new

for.body.preheader.new:                           ; preds = %for.body.preheader
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body

for.body:                                         ; preds = %for.inc.1, %for.body.preheader.new
  %indvars.iv = phi i64 [ 0, %for.body.preheader.new ], [ %indvars.iv.next.1, %for.inc.1 ]
  %niter = phi i64 [ 0, %for.body.preheader.new ], [ %niter.next.1, %for.inc.1 ]
  %3 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 %indvars.iv, i32 8
  %4 = load ptr, ptr %m_leaf, align 8, !tbaa !183
  %tobool.not = icmp eq ptr %4, null
  br i1 %tobool.not, label %for.inc, label %if.then

if.then:                                          ; preds = %for.body
  %arrayidx.i297 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 %indvars.iv
  %5 = getelementptr inbounds %struct.btDbvtNode, ptr %4, i64 0, i32 2
  store ptr %arrayidx.i297, ptr %5, align 8, !tbaa !164
  br label %for.inc

for.inc:                                          ; preds = %for.body, %if.then
  %indvars.iv.next = or i64 %indvars.iv, 1
  %6 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_leaf.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 %indvars.iv.next, i32 8
  %7 = load ptr, ptr %m_leaf.1, align 8, !tbaa !183
  %tobool.not.1 = icmp eq ptr %7, null
  br i1 %tobool.not.1, label %for.inc.1, label %if.then.1

if.then.1:                                        ; preds = %for.inc
  %arrayidx.i297.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 %indvars.iv.next
  %8 = getelementptr inbounds %struct.btDbvtNode, ptr %7, i64 0, i32 2
  store ptr %arrayidx.i297.1, ptr %8, align 8, !tbaa !164
  br label %for.inc.1

for.inc.1:                                        ; preds = %if.then.1, %for.inc
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.end.loopexit.unr-lcssa, label %for.body

for.end.loopexit.unr-lcssa:                       ; preds = %for.inc.1, %for.body.preheader
  %indvars.iv.unr = phi i64 [ 0, %for.body.preheader ], [ %indvars.iv.next.1, %for.inc.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa
  %9 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_leaf.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %9, i64 %indvars.iv.unr, i32 8
  %10 = load ptr, ptr %m_leaf.epil, align 8, !tbaa !183
  %tobool.not.epil = icmp eq ptr %10, null
  br i1 %tobool.not.epil, label %for.end, label %if.then.epil

if.then.epil:                                     ; preds = %for.body.epil
  %arrayidx.i297.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %9, i64 %indvars.iv.unr
  %11 = getelementptr inbounds %struct.btDbvtNode, ptr %10, i64 0, i32 2
  store ptr %arrayidx.i297.epil, ptr %11, align 8, !tbaa !164
  br label %for.end

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %if.then.epil, %for.body.epil, %entry
  %m_size.i301 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %12 = load i32, ptr %m_size.i301, align 4, !tbaa !92
  %cmp13409 = icmp sgt i32 %12, 0
  br i1 %cmp13409, label %for.body14.lr.ph, label %for.end58

for.body14.lr.ph:                                 ; preds = %for.end
  %tobool15.not = icmp eq ptr %map, null
  %m_data.i302 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %wide.trip.count432 = zext i32 %12 to i64
  br i1 %tobool15.not, label %for.body14.us.preheader, label %for.body14

for.body14.us.preheader:                          ; preds = %for.body14.lr.ph
  %xtraiter478 = and i64 %wide.trip.count432, 1
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %for.end58.loopexit.unr-lcssa, label %for.body14.us.preheader.new

for.body14.us.preheader.new:                      ; preds = %for.body14.us.preheader
  %unroll_iter480 = and i64 %wide.trip.count432, 4294967294
  br label %for.body14.us

for.body14.us:                                    ; preds = %for.body14.us, %for.body14.us.preheader.new
  %indvars.iv429 = phi i64 [ 0, %for.body14.us.preheader.new ], [ %indvars.iv.next430.1, %for.body14.us ]
  %niter481 = phi i64 [ 0, %for.body14.us.preheader.new ], [ %niter481.next.1, %for.body14.us ]
  %14 = load ptr, ptr %m_data.i302, align 8, !tbaa !91
  %m_n22.us = getelementptr inbounds %"struct.btSoftBody::Link", ptr %14, i64 %indvars.iv429, i32 1
  %15 = load ptr, ptr %m_n22.us, align 8, !tbaa !219
  %sub.ptr.lhs.cast24.us = ptrtoint ptr %15 to i64
  %cond381.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast24.us
  store ptr %cond381.us, ptr %m_n22.us, align 8, !tbaa !219
  %16 = load ptr, ptr %m_data.i302, align 8, !tbaa !91
  %arrayidx46.us = getelementptr inbounds %"struct.btSoftBody::Link", ptr %16, i64 %indvars.iv429, i32 1, i64 1
  %17 = load ptr, ptr %arrayidx46.us, align 8, !tbaa !219
  %sub.ptr.lhs.cast47.us = ptrtoint ptr %17 to i64
  %cond51.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast47.us
  store ptr %cond51.us, ptr %arrayidx46.us, align 8, !tbaa !219
  %indvars.iv.next430 = or i64 %indvars.iv429, 1
  %18 = load ptr, ptr %m_data.i302, align 8, !tbaa !91
  %m_n22.us.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %18, i64 %indvars.iv.next430, i32 1
  %19 = load ptr, ptr %m_n22.us.1, align 8, !tbaa !219
  %sub.ptr.lhs.cast24.us.1 = ptrtoint ptr %19 to i64
  %cond381.us.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast24.us.1
  store ptr %cond381.us.1, ptr %m_n22.us.1, align 8, !tbaa !219
  %20 = load ptr, ptr %m_data.i302, align 8, !tbaa !91
  %arrayidx46.us.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %20, i64 %indvars.iv.next430, i32 1, i64 1
  %21 = load ptr, ptr %arrayidx46.us.1, align 8, !tbaa !219
  %sub.ptr.lhs.cast47.us.1 = ptrtoint ptr %21 to i64
  %cond51.us.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast47.us.1
  store ptr %cond51.us.1, ptr %arrayidx46.us.1, align 8, !tbaa !219
  %indvars.iv.next430.1 = add nuw nsw i64 %indvars.iv429, 2
  %niter481.next.1 = add i64 %niter481, 2
  %niter481.ncmp.1 = icmp eq i64 %niter481.next.1, %unroll_iter480
  br i1 %niter481.ncmp.1, label %for.end58.loopexit.unr-lcssa, label %for.body14.us

for.body14:                                       ; preds = %for.body14.lr.ph, %for.body14
  %indvars.iv424 = phi i64 [ %indvars.iv.next425, %for.body14 ], [ 0, %for.body14.lr.ph ]
  %22 = load ptr, ptr %m_data.i302, align 8, !tbaa !91
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %22, i64 %indvars.iv424, i32 1
  %23 = load ptr, ptr %m_n, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %23 to i64
  %arrayidx18 = getelementptr inbounds i32, ptr %map, i64 %sub.ptr.lhs.cast
  %24 = load i32, ptr %arrayidx18, align 4, !tbaa !140
  %idxprom = sext i32 %24 to i64
  %cond = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom
  store ptr %cond, ptr %m_n, align 8, !tbaa !219
  %25 = load ptr, ptr %m_data.i302, align 8, !tbaa !91
  %arrayidx36 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %25, i64 %indvars.iv424, i32 1, i64 1
  %26 = load ptr, ptr %arrayidx36, align 8, !tbaa !219
  %sub.ptr.lhs.cast37 = ptrtoint ptr %26 to i64
  %arrayidx39 = getelementptr inbounds i32, ptr %map, i64 %sub.ptr.lhs.cast37
  %27 = load i32, ptr %arrayidx39, align 4, !tbaa !140
  %idxprom40 = sext i32 %27 to i64
  %cond51 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom40
  store ptr %cond51, ptr %arrayidx36, align 8, !tbaa !219
  %indvars.iv.next425 = add nuw nsw i64 %indvars.iv424, 1
  %exitcond428.not = icmp eq i64 %indvars.iv.next425, %wide.trip.count432
  br i1 %exitcond428.not, label %for.end58, label %for.body14

for.end58.loopexit.unr-lcssa:                     ; preds = %for.body14.us, %for.body14.us.preheader
  %indvars.iv429.unr = phi i64 [ 0, %for.body14.us.preheader ], [ %indvars.iv.next430.1, %for.body14.us ]
  %lcmp.mod479.not = icmp eq i64 %xtraiter478, 0
  br i1 %lcmp.mod479.not, label %for.end58, label %for.body14.us.epil

for.body14.us.epil:                               ; preds = %for.end58.loopexit.unr-lcssa
  %28 = load ptr, ptr %m_data.i302, align 8, !tbaa !91
  %m_n22.us.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %28, i64 %indvars.iv429.unr, i32 1
  %29 = load ptr, ptr %m_n22.us.epil, align 8, !tbaa !219
  %sub.ptr.lhs.cast24.us.epil = ptrtoint ptr %29 to i64
  %cond381.us.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast24.us.epil
  store ptr %cond381.us.epil, ptr %m_n22.us.epil, align 8, !tbaa !219
  %30 = load ptr, ptr %m_data.i302, align 8, !tbaa !91
  %arrayidx46.us.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %30, i64 %indvars.iv429.unr, i32 1, i64 1
  %31 = load ptr, ptr %arrayidx46.us.epil, align 8, !tbaa !219
  %sub.ptr.lhs.cast47.us.epil = ptrtoint ptr %31 to i64
  %cond51.us.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast47.us.epil
  store ptr %cond51.us.epil, ptr %arrayidx46.us.epil, align 8, !tbaa !219
  br label %for.end58

for.end58:                                        ; preds = %for.body14, %for.body14.us.epil, %for.end58.loopexit.unr-lcssa, %for.end
  %m_size.i320 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %32 = load i32, ptr %m_size.i320, align 4, !tbaa !96
  %cmp61411 = icmp sgt i32 %32, 0
  br i1 %cmp61411, label %for.body62.lr.ph, label %for.end151

for.body62.lr.ph:                                 ; preds = %for.end58
  %tobool63.not = icmp eq ptr %map, null
  %m_data.i321 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %wide.trip.count437 = zext i32 %32 to i64
  br label %for.body62

for.body62:                                       ; preds = %for.body62.lr.ph, %for.inc149
  %indvars.iv434 = phi i64 [ 0, %for.body62.lr.ph ], [ %indvars.iv.next435, %for.inc149 ]
  %33 = load ptr, ptr %m_data.i321, align 8, !tbaa !95
  %m_n77 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %33, i64 %indvars.iv434, i32 1
  %34 = load ptr, ptr %m_n77, align 8, !tbaa !219
  %sub.ptr.lhs.cast79 = ptrtoint ptr %34 to i64
  br i1 %tobool63.not, label %cond.false124, label %cond.true114

cond.true114:                                     ; preds = %for.body62
  %arrayidx71 = getelementptr inbounds i32, ptr %map, i64 %sub.ptr.lhs.cast79
  %35 = load i32, ptr %arrayidx71, align 4, !tbaa !140
  %idxprom72 = sext i32 %35 to i64
  %cond83 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom72
  store ptr %cond83, ptr %m_n77, align 8, !tbaa !219
  %36 = load ptr, ptr %m_data.i321, align 8, !tbaa !95
  %arrayidx93 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %36, i64 %indvars.iv434, i32 1, i64 1
  %37 = load ptr, ptr %arrayidx93, align 8, !tbaa !219
  %sub.ptr.lhs.cast94 = ptrtoint ptr %37 to i64
  %arrayidx96 = getelementptr inbounds i32, ptr %map, i64 %sub.ptr.lhs.cast94
  %38 = load i32, ptr %arrayidx96, align 4, !tbaa !140
  %idxprom97 = sext i32 %38 to i64
  %cond108 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom97
  store ptr %cond108, ptr %arrayidx93, align 8, !tbaa !219
  %39 = load ptr, ptr %m_data.i321, align 8, !tbaa !95
  %arrayidx118 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %39, i64 %indvars.iv434, i32 1, i64 2
  %40 = load ptr, ptr %arrayidx118, align 8, !tbaa !219
  %sub.ptr.lhs.cast119 = ptrtoint ptr %40 to i64
  %arrayidx121 = getelementptr inbounds i32, ptr %map, i64 %sub.ptr.lhs.cast119
  %41 = load i32, ptr %arrayidx121, align 4, !tbaa !140
  %idxprom122 = sext i32 %41 to i64
  br label %cond.end132

cond.false124:                                    ; preds = %for.body62
  %cond83390 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast79
  store ptr %cond83390, ptr %m_n77, align 8, !tbaa !219
  %42 = load ptr, ptr %m_data.i321, align 8, !tbaa !95
  %arrayidx103 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %42, i64 %indvars.iv434, i32 1, i64 1
  %43 = load ptr, ptr %arrayidx103, align 8, !tbaa !219
  %sub.ptr.lhs.cast104 = ptrtoint ptr %43 to i64
  %cond108401 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast104
  store ptr %cond108401, ptr %arrayidx103, align 8, !tbaa !219
  %44 = load ptr, ptr %m_data.i321, align 8, !tbaa !95
  %arrayidx128 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %44, i64 %indvars.iv434, i32 1, i64 2
  %45 = load ptr, ptr %arrayidx128, align 8, !tbaa !219
  %sub.ptr.lhs.cast129 = ptrtoint ptr %45 to i64
  br label %cond.end132

cond.end132:                                      ; preds = %cond.false124, %cond.true114
  %46 = phi ptr [ %39, %cond.true114 ], [ %44, %cond.false124 ]
  %idxprom122.pn = phi i64 [ %idxprom122, %cond.true114 ], [ %sub.ptr.lhs.cast129, %cond.false124 ]
  %cond133 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom122.pn
  %arrayidx137 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %46, i64 %indvars.iv434, i32 1, i64 2
  store ptr %cond133, ptr %arrayidx137, align 8, !tbaa !219
  %47 = load ptr, ptr %m_data.i321, align 8, !tbaa !95
  %m_leaf140 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %47, i64 %indvars.iv434, i32 4
  %48 = load ptr, ptr %m_leaf140, align 8, !tbaa !232
  %tobool141.not = icmp eq ptr %48, null
  br i1 %tobool141.not, label %for.inc149, label %if.then142

if.then142:                                       ; preds = %cond.end132
  %arrayidx.i353 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %47, i64 %indvars.iv434
  %49 = getelementptr inbounds %struct.btDbvtNode, ptr %48, i64 0, i32 2
  store ptr %arrayidx.i353, ptr %49, align 8, !tbaa !164
  br label %for.inc149

for.inc149:                                       ; preds = %cond.end132, %if.then142
  %indvars.iv.next435 = add nuw nsw i64 %indvars.iv434, 1
  %exitcond438.not = icmp eq i64 %indvars.iv.next435, %wide.trip.count437
  br i1 %exitcond438.not, label %for.end151, label %for.body62

for.end151:                                       ; preds = %for.inc149, %for.end58
  %m_size.i357 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 2
  %50 = load i32, ptr %m_size.i357, align 4, !tbaa !104
  %cmp154413 = icmp sgt i32 %50, 0
  br i1 %cmp154413, label %for.body155.lr.ph, label %for.end179

for.body155.lr.ph:                                ; preds = %for.end151
  %tobool156.not = icmp eq ptr %map, null
  %m_data.i358 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 5
  %51 = load ptr, ptr %m_data.i358, align 8
  %wide.trip.count447 = zext i32 %50 to i64
  br i1 %tobool156.not, label %for.body155.us.preheader, label %for.body155.preheader

for.body155.preheader:                            ; preds = %for.body155.lr.ph
  %xtraiter482 = and i64 %wide.trip.count447, 1
  %52 = icmp eq i32 %50, 1
  br i1 %52, label %for.end179.loopexit476.unr-lcssa, label %for.body155.preheader.new

for.body155.preheader.new:                        ; preds = %for.body155.preheader
  %unroll_iter484 = and i64 %wide.trip.count447, 4294967294
  br label %for.body155

for.body155.us.preheader:                         ; preds = %for.body155.lr.ph
  %xtraiter486 = and i64 %wide.trip.count447, 3
  %53 = icmp ult i32 %50, 4
  br i1 %53, label %for.end179.loopexit.unr-lcssa, label %for.body155.us.preheader.new

for.body155.us.preheader.new:                     ; preds = %for.body155.us.preheader
  %unroll_iter488 = and i64 %wide.trip.count447, 4294967292
  br label %for.body155.us

for.body155.us:                                   ; preds = %for.body155.us, %for.body155.us.preheader.new
  %indvars.iv444 = phi i64 [ 0, %for.body155.us.preheader.new ], [ %indvars.iv.next445.3, %for.body155.us ]
  %niter489 = phi i64 [ 0, %for.body155.us.preheader.new ], [ %niter489.next.3, %for.body155.us ]
  %arrayidx.i363.us = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %51, i64 %indvars.iv444
  %54 = load ptr, ptr %arrayidx.i363.us, align 8, !tbaa !234
  %sub.ptr.lhs.cast169.us = ptrtoint ptr %54 to i64
  %cond173.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast169.us
  store ptr %cond173.us, ptr %arrayidx.i363.us, align 8, !tbaa !234
  %indvars.iv.next445 = or i64 %indvars.iv444, 1
  %arrayidx.i363.us.1 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %51, i64 %indvars.iv.next445
  %55 = load ptr, ptr %arrayidx.i363.us.1, align 8, !tbaa !234
  %sub.ptr.lhs.cast169.us.1 = ptrtoint ptr %55 to i64
  %cond173.us.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast169.us.1
  store ptr %cond173.us.1, ptr %arrayidx.i363.us.1, align 8, !tbaa !234
  %indvars.iv.next445.1 = or i64 %indvars.iv444, 2
  %arrayidx.i363.us.2 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %51, i64 %indvars.iv.next445.1
  %56 = load ptr, ptr %arrayidx.i363.us.2, align 8, !tbaa !234
  %sub.ptr.lhs.cast169.us.2 = ptrtoint ptr %56 to i64
  %cond173.us.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast169.us.2
  store ptr %cond173.us.2, ptr %arrayidx.i363.us.2, align 8, !tbaa !234
  %indvars.iv.next445.2 = or i64 %indvars.iv444, 3
  %arrayidx.i363.us.3 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %51, i64 %indvars.iv.next445.2
  %57 = load ptr, ptr %arrayidx.i363.us.3, align 8, !tbaa !234
  %sub.ptr.lhs.cast169.us.3 = ptrtoint ptr %57 to i64
  %cond173.us.3 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast169.us.3
  store ptr %cond173.us.3, ptr %arrayidx.i363.us.3, align 8, !tbaa !234
  %indvars.iv.next445.3 = add nuw nsw i64 %indvars.iv444, 4
  %niter489.next.3 = add i64 %niter489, 4
  %niter489.ncmp.3 = icmp eq i64 %niter489.next.3, %unroll_iter488
  br i1 %niter489.ncmp.3, label %for.end179.loopexit.unr-lcssa, label %for.body155.us

for.body155:                                      ; preds = %for.body155, %for.body155.preheader.new
  %indvars.iv439 = phi i64 [ 0, %for.body155.preheader.new ], [ %indvars.iv.next440.1, %for.body155 ]
  %niter485 = phi i64 [ 0, %for.body155.preheader.new ], [ %niter485.next.1, %for.body155 ]
  %arrayidx.i360 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %51, i64 %indvars.iv439
  %58 = load ptr, ptr %arrayidx.i360, align 8, !tbaa !234
  %sub.ptr.lhs.cast160 = ptrtoint ptr %58 to i64
  %arrayidx162 = getelementptr inbounds i32, ptr %map, i64 %sub.ptr.lhs.cast160
  %59 = load i32, ptr %arrayidx162, align 4, !tbaa !140
  %idxprom163 = sext i32 %59 to i64
  %cond173 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom163
  store ptr %cond173, ptr %arrayidx.i360, align 8, !tbaa !234
  %indvars.iv.next440 = or i64 %indvars.iv439, 1
  %arrayidx.i360.1 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %51, i64 %indvars.iv.next440
  %60 = load ptr, ptr %arrayidx.i360.1, align 8, !tbaa !234
  %sub.ptr.lhs.cast160.1 = ptrtoint ptr %60 to i64
  %arrayidx162.1 = getelementptr inbounds i32, ptr %map, i64 %sub.ptr.lhs.cast160.1
  %61 = load i32, ptr %arrayidx162.1, align 4, !tbaa !140
  %idxprom163.1 = sext i32 %61 to i64
  %cond173.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom163.1
  store ptr %cond173.1, ptr %arrayidx.i360.1, align 8, !tbaa !234
  %indvars.iv.next440.1 = add nuw nsw i64 %indvars.iv439, 2
  %niter485.next.1 = add i64 %niter485, 2
  %niter485.ncmp.1 = icmp eq i64 %niter485.next.1, %unroll_iter484
  br i1 %niter485.ncmp.1, label %for.end179.loopexit476.unr-lcssa, label %for.body155

for.end179.loopexit.unr-lcssa:                    ; preds = %for.body155.us, %for.body155.us.preheader
  %indvars.iv444.unr = phi i64 [ 0, %for.body155.us.preheader ], [ %indvars.iv.next445.3, %for.body155.us ]
  %lcmp.mod487.not = icmp eq i64 %xtraiter486, 0
  br i1 %lcmp.mod487.not, label %for.end179, label %for.body155.us.epil

for.body155.us.epil:                              ; preds = %for.end179.loopexit.unr-lcssa, %for.body155.us.epil
  %indvars.iv444.epil = phi i64 [ %indvars.iv.next445.epil, %for.body155.us.epil ], [ %indvars.iv444.unr, %for.end179.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body155.us.epil ], [ 0, %for.end179.loopexit.unr-lcssa ]
  %arrayidx.i363.us.epil = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %51, i64 %indvars.iv444.epil
  %62 = load ptr, ptr %arrayidx.i363.us.epil, align 8, !tbaa !234
  %sub.ptr.lhs.cast169.us.epil = ptrtoint ptr %62 to i64
  %cond173.us.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast169.us.epil
  store ptr %cond173.us.epil, ptr %arrayidx.i363.us.epil, align 8, !tbaa !234
  %indvars.iv.next445.epil = add nuw nsw i64 %indvars.iv444.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter486
  br i1 %epil.iter.cmp.not, label %for.end179, label %for.body155.us.epil, !llvm.loop !238

for.end179.loopexit476.unr-lcssa:                 ; preds = %for.body155, %for.body155.preheader
  %indvars.iv439.unr = phi i64 [ 0, %for.body155.preheader ], [ %indvars.iv.next440.1, %for.body155 ]
  %lcmp.mod483.not = icmp eq i64 %xtraiter482, 0
  br i1 %lcmp.mod483.not, label %for.end179, label %for.body155.epil

for.body155.epil:                                 ; preds = %for.end179.loopexit476.unr-lcssa
  %arrayidx.i360.epil = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %51, i64 %indvars.iv439.unr
  %63 = load ptr, ptr %arrayidx.i360.epil, align 8, !tbaa !234
  %sub.ptr.lhs.cast160.epil = ptrtoint ptr %63 to i64
  %arrayidx162.epil = getelementptr inbounds i32, ptr %map, i64 %sub.ptr.lhs.cast160.epil
  %64 = load i32, ptr %arrayidx162.epil, align 4, !tbaa !140
  %idxprom163.epil = sext i32 %64 to i64
  %cond173.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom163.epil
  store ptr %cond173.epil, ptr %arrayidx.i360.epil, align 8, !tbaa !234
  br label %for.end179

for.end179:                                       ; preds = %for.body155.epil, %for.end179.loopexit476.unr-lcssa, %for.end179.loopexit.unr-lcssa, %for.body155.us.epil, %for.end151
  %m_size.i367 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 2
  %65 = load i32, ptr %m_size.i367, align 4, !tbaa !84
  %cmp182418 = icmp sgt i32 %65, 0
  br i1 %cmp182418, label %for.cond184.preheader.lr.ph, label %for.end222

for.cond184.preheader.lr.ph:                      ; preds = %for.end179
  %m_data.i368 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 8, i32 5
  %tobool189.not = icmp eq ptr %map, null
  %wide.trip.count463 = zext i32 %65 to i64
  %.pre465 = load ptr, ptr %m_data.i368, align 8, !tbaa !83
  br i1 %tobool189.not, label %for.cond184.preheader.us, label %for.cond184.preheader

for.cond184.preheader.us:                         ; preds = %for.cond184.preheader.lr.ph, %for.cond.cleanup.us
  %66 = phi ptr [ %68, %for.cond.cleanup.us ], [ %.pre465, %for.cond184.preheader.lr.ph ]
  %indvars.iv460 = phi i64 [ %indvars.iv.next461, %for.cond.cleanup.us ], [ 0, %for.cond184.preheader.lr.ph ]
  %m_rank415.us = getelementptr inbounds %"struct.btSoftBody::Note", ptr %66, i64 %indvars.iv460, i32 3
  %67 = load i32, ptr %m_rank415.us, align 8, !tbaa !236
  %cmp187416.us = icmp sgt i32 %67, 0
  br i1 %cmp187416.us, label %for.body188.us.us, label %for.cond.cleanup.us

for.cond.cleanup.us:                              ; preds = %for.body188.us.us, %for.cond184.preheader.us
  %68 = phi ptr [ %66, %for.cond184.preheader.us ], [ %71, %for.body188.us.us ]
  %indvars.iv.next461 = add nuw nsw i64 %indvars.iv460, 1
  %exitcond464.not = icmp eq i64 %indvars.iv.next461, %wide.trip.count463
  br i1 %exitcond464.not, label %for.end222, label %for.cond184.preheader.us

for.body188.us.us:                                ; preds = %for.cond184.preheader.us, %for.body188.us.us
  %indvars.iv457 = phi i64 [ %indvars.iv.next458, %for.body188.us.us ], [ 0, %for.cond184.preheader.us ]
  %69 = phi ptr [ %71, %for.body188.us.us ], [ %66, %for.cond184.preheader.us ]
  %arrayidx206.us.us = getelementptr inbounds %"struct.btSoftBody::Note", ptr %69, i64 %indvars.iv460, i32 4, i64 %indvars.iv457
  %70 = load ptr, ptr %arrayidx206.us.us, align 8, !tbaa !219
  %sub.ptr.lhs.cast207.us.us = ptrtoint ptr %70 to i64
  %cond211.us.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %sub.ptr.lhs.cast207.us.us
  store ptr %cond211.us.us, ptr %arrayidx206.us.us, align 8, !tbaa !219
  %indvars.iv.next458 = add nuw nsw i64 %indvars.iv457, 1
  %71 = load ptr, ptr %m_data.i368, align 8, !tbaa !83
  %m_rank.us.us = getelementptr inbounds %"struct.btSoftBody::Note", ptr %71, i64 %indvars.iv460, i32 3
  %72 = load i32, ptr %m_rank.us.us, align 8, !tbaa !236
  %73 = sext i32 %72 to i64
  %cmp187.us.us = icmp slt i64 %indvars.iv.next458, %73
  br i1 %cmp187.us.us, label %for.body188.us.us, label %for.cond.cleanup.us

for.cond184.preheader:                            ; preds = %for.cond184.preheader.lr.ph, %for.cond.cleanup
  %74 = phi ptr [ %76, %for.cond.cleanup ], [ %.pre465, %for.cond184.preheader.lr.ph ]
  %indvars.iv452 = phi i64 [ %indvars.iv.next453, %for.cond.cleanup ], [ 0, %for.cond184.preheader.lr.ph ]
  %m_rank415 = getelementptr inbounds %"struct.btSoftBody::Note", ptr %74, i64 %indvars.iv452, i32 3
  %75 = load i32, ptr %m_rank415, align 8, !tbaa !236
  %cmp187416 = icmp sgt i32 %75, 0
  br i1 %cmp187416, label %for.body188, label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body188, %for.cond184.preheader
  %76 = phi ptr [ %74, %for.cond184.preheader ], [ %80, %for.body188 ]
  %indvars.iv.next453 = add nuw nsw i64 %indvars.iv452, 1
  %exitcond456.not = icmp eq i64 %indvars.iv.next453, %wide.trip.count463
  br i1 %exitcond456.not, label %for.end222, label %for.cond184.preheader

for.body188:                                      ; preds = %for.cond184.preheader, %for.body188
  %indvars.iv449 = phi i64 [ %indvars.iv.next450, %for.body188 ], [ 0, %for.cond184.preheader ]
  %77 = phi ptr [ %80, %for.body188 ], [ %74, %for.cond184.preheader ]
  %arrayidx195 = getelementptr inbounds %"struct.btSoftBody::Note", ptr %77, i64 %indvars.iv452, i32 4, i64 %indvars.iv449
  %78 = load ptr, ptr %arrayidx195, align 8, !tbaa !219
  %sub.ptr.lhs.cast196 = ptrtoint ptr %78 to i64
  %arrayidx198 = getelementptr inbounds i32, ptr %map, i64 %sub.ptr.lhs.cast196
  %79 = load i32, ptr %arrayidx198, align 4, !tbaa !140
  %idxprom199 = sext i32 %79 to i64
  %cond211 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom199
  store ptr %cond211, ptr %arrayidx195, align 8, !tbaa !219
  %indvars.iv.next450 = add nuw nsw i64 %indvars.iv449, 1
  %80 = load ptr, ptr %m_data.i368, align 8, !tbaa !83
  %m_rank = getelementptr inbounds %"struct.btSoftBody::Note", ptr %80, i64 %indvars.iv452, i32 3
  %81 = load i32, ptr %m_rank, align 8, !tbaa !236
  %82 = sext i32 %81 to i64
  %cmp187 = icmp slt i64 %indvars.iv.next450, %82
  br i1 %cmp187, label %for.body188, label %for.cond.cleanup

for.end222:                                       ; preds = %for.cond.cleanup, %for.cond.cleanup.us, %for.end179
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendLinkEiPNS_8MaterialE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %model, ptr noundef %mat) local_unnamed_addr #4 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %l.sroa.7 = alloca <{ [2 x ptr], float, i8, [3 x i8], float, float, float, %class.btVector3, [4 x i8] }>, align 8
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %l.sroa.7)
  %cmp = icmp sgt i32 %model, -1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !91
  %idxprom.i = zext i32 %model to i64
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %0, i64 %idxprom.i
  %l.sroa.0.0.copyload10 = load ptr, ptr %arrayidx.i, align 8
  %l.sroa.6.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 8
  %l.sroa.6.0.copyload12 = load ptr, ptr %l.sroa.6.0.arrayidx.i.sroa_idx, align 8
  %l.sroa.7.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(52) %l.sroa.7, ptr noundef nonnull align 8 dereferenceable(52) %l.sroa.7.0.arrayidx.i.sroa_idx, i64 52, i1 false)
  br label %if.end

if.else:                                          ; preds = %entry
  %1 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %1, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit, !prof !173

init.check.i:                                     ; preds = %if.else
  %2 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit, label %init.i

init.i:                                           ; preds = %init.check.i
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8, !tbaa !174
  %3 = tail call ptr @llvm.invariant.start.p0(i64 72, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit

_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit: ; preds = %if.else, %init.check.i, %init.i
  %l.sroa.0.0.copyload11 = load ptr, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(52) %l.sroa.7, ptr noundef nonnull align 8 dereferenceable(52) getelementptr inbounds (%"struct.btSoftBody::Link", ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, i64 0, i32 1, i64 0), i64 52, i1 false)
  %tobool.not = icmp eq ptr %mat, null
  br i1 %tobool.not, label %cond.false, label %if.end

cond.false:                                       ; preds = %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit
  %m_data.i6 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %4 = load ptr, ptr %m_data.i6, align 8, !tbaa !119
  %5 = load ptr, ptr %4, align 8, !tbaa !219
  br label %if.end

if.end:                                           ; preds = %cond.false, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit, %if.then
  %l.sroa.6.0 = phi ptr [ %l.sroa.6.0.copyload12, %if.then ], [ %5, %cond.false ], [ %mat, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit ]
  %l.sroa.0.0 = phi ptr [ %l.sroa.0.0.copyload10, %if.then ], [ %l.sroa.0.0.copyload11, %cond.false ], [ %l.sroa.0.0.copyload11, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit ]
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %6 = load i32, ptr %m_size.i.i, align 4, !tbaa !92
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 3
  %7 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !93
  %cmp.i = icmp eq i32 %6, %7
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE9push_backERKS1_.exit

if.then.i:                                        ; preds = %if.end
  %tobool.not.i.i = icmp eq i32 %6, 0
  %mul.i.i = shl nsw i32 %6, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %6, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE9push_backERKS1_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = mul nsw i64 %conv.i.i.i.i, 72
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !92
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %8 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %6, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %8, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %wide.trip.count.i.i.i = zext i32 %8 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 1
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967294
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.1, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %10 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %arrayidx3.i.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %10, i64 %indvars.iv.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i, i64 72, i1 false)
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %11 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %arrayidx3.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %11, i64 %indvars.iv.next.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.1, i64 72, i1 false)
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.unr
  %12 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %arrayidx3.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %12, i64 %indvars.iv.i.i.i.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.epil, i64 72, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i: ; preds = %for.body.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %13 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !91
  %tobool.not.i10.i.i = icmp eq ptr %13, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 6
  %14 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %14, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %13)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !90
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !91
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !93
  %.pre7.i = load i32, ptr %m_size.i.i, align 4, !tbaa !92
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE9push_backERKS1_.exit

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE9push_backERKS1_.exit: ; preds = %if.end, %if.then.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i
  %15 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i ], [ %6, %if.then.i ], [ %6, %if.end ]
  %m_data.i7 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %16 = load ptr, ptr %m_data.i7, align 8, !tbaa !91
  %idxprom.i8 = sext i32 %15 to i64
  %arrayidx.i9 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %16, i64 %idxprom.i8
  store ptr %l.sroa.0.0, ptr %arrayidx.i9, align 8
  %l.sroa.6.0.arrayidx.i9.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i9, i64 8
  store ptr %l.sroa.6.0, ptr %l.sroa.6.0.arrayidx.i9.sroa_idx, align 8
  %l.sroa.7.0.arrayidx.i9.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i9, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7.0.arrayidx.i9.sroa_idx, ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7, i64 56, i1 false)
  %17 = load i32, ptr %m_size.i.i, align 4, !tbaa !92
  %inc.i = add nsw i32 %17, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !92
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %l.sroa.7)
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendLinkEiiPNS_8MaterialEb(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %node0, i32 noundef %node1, ptr noundef %mat, i1 noundef zeroext %bcheckexist) local_unnamed_addr #0 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i = sext i32 %node0 to i64
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i
  %idxprom.i5 = sext i32 %node1 to i64
  %arrayidx.i6 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i5
  br i1 %bcheckexist, label %lor.lhs.false.i, label %if.then.i

lor.lhs.false.i:                                  ; preds = %entry
  %m_size.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %1 = load i32, ptr %m_size.i.i.i, align 4, !tbaa !92
  %cmp.not32.i.i = icmp sgt i32 %1, 0
  br i1 %cmp.not32.i.i, label %for.body.lr.ph.i.i, label %if.then.i

for.body.lr.ph.i.i:                               ; preds = %lor.lhs.false.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %2 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %3 = zext i32 %1 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %if.end.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %if.end.i.i ]
  %cmp.not34.i.i = phi i1 [ true, %for.body.lr.ph.i.i ], [ %cmp.not.i.i, %if.end.i.i ]
  %m_n.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %2, i64 %indvars.iv.i.i, i32 1
  %4 = load ptr, ptr %m_n.i.i, align 8, !tbaa !219
  %cmp5.i.i = icmp eq ptr %4, %arrayidx.i
  br i1 %cmp5.i.i, label %land.lhs.true.i.i, label %lor.lhs.false.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %arrayidx7.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %2, i64 %indvars.iv.i.i, i32 1, i64 1
  %5 = load ptr, ptr %arrayidx7.i.i, align 8, !tbaa !219
  %cmp9.i.i = icmp eq ptr %5, %arrayidx.i6
  br i1 %cmp9.i.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i, %for.body.i.i
  %cmp13.i.i = icmp eq ptr %4, %arrayidx.i6
  br i1 %cmp13.i.i, label %land.lhs.true14.i.i, label %if.end.i.i

land.lhs.true14.i.i:                              ; preds = %lor.lhs.false.i.i
  %arrayidx16.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %2, i64 %indvars.iv.i.i, i32 1, i64 1
  %6 = load ptr, ptr %arrayidx16.i.i, align 8, !tbaa !219
  %cmp18.i.i = icmp eq ptr %6, %arrayidx.i
  br i1 %cmp18.i.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i, label %if.end.i.i

if.end.i.i:                                       ; preds = %land.lhs.true14.i.i, %lor.lhs.false.i.i
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %cmp.not.i.i = icmp ult i64 %indvars.iv.next.i.i, %3
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %3
  br i1 %exitcond.not.i.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i, label %for.body.i.i

_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i: ; preds = %if.end.i.i, %land.lhs.true14.i.i, %land.lhs.true.i.i
  %cmp.not.lcssa.i.i = phi i1 [ %cmp.not.i.i, %if.end.i.i ], [ %cmp.not34.i.i, %land.lhs.true.i.i ], [ %cmp.not34.i.i, %land.lhs.true14.i.i ]
  br i1 %cmp.not.lcssa.i.i, label %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit, label %if.then.i

if.then.i:                                        ; preds = %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i, %lor.lhs.false.i, %entry
  tail call void @_ZN10btSoftBody10appendLinkEiPNS_8MaterialE(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef -1, ptr noundef %mat)
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %7 = load i32, ptr %m_size.i.i, align 4, !tbaa !92
  %sub.i = add nsw i32 %7, -1
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %8 = load ptr, ptr %m_data.i.i, align 8, !tbaa !91
  %idxprom.i.i = sext i32 %sub.i to i64
  %m_n.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %8, i64 %idxprom.i.i, i32 1
  store ptr %arrayidx.i, ptr %m_n.i, align 8, !tbaa !219
  %arrayidx6.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %8, i64 %idxprom.i.i, i32 1, i64 1
  store ptr %arrayidx.i6, ptr %arrayidx6.i, align 8, !tbaa !219
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i, i32 1
  %m_x11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i5, i32 1
  %9 = load float, ptr %m_x.i, align 4, !tbaa !137
  %10 = load float, ptr %m_x11.i, align 4, !tbaa !137
  %sub.i.i = fsub float %9, %10
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i, i32 1, i32 0, i64 1
  %11 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %arrayidx7.i20.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i5, i32 1, i32 0, i64 1
  %12 = load float, ptr %arrayidx7.i20.i, align 4, !tbaa !137
  %sub8.i.i = fsub float %11, %12
  %arrayidx11.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i, i32 1, i32 0, i64 2
  %13 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %arrayidx13.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i5, i32 1, i32 0, i64 2
  %14 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %13, %14
  %mul8.i.i.i.i = fmul float %sub8.i.i, %sub8.i.i
  %15 = tail call float @llvm.fmuladd.f32(float %sub.i.i, float %sub.i.i, float %mul8.i.i.i.i)
  %16 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %sub14.i.i, float %15)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %16)
  %m_rl.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %8, i64 %idxprom.i.i, i32 2
  store float %sqrt.i.i, ptr %m_rl.i, align 8, !tbaa !239
  %m_bUpdateRtCst.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  store i8 1, ptr %m_bUpdateRtCst.i, align 4, !tbaa !147
  br label %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit

_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit: ; preds = %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i, %if.then.i
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %node0, ptr noundef %node1, ptr noundef %mat, i1 noundef zeroext %bcheckexist) local_unnamed_addr #0 align 2 {
entry:
  br i1 %bcheckexist, label %lor.lhs.false, label %if.then

lor.lhs.false:                                    ; preds = %entry
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %0 = load i32, ptr %m_size.i.i, align 4, !tbaa !92
  %cmp.not32.i = icmp sgt i32 %0, 0
  br i1 %cmp.not32.i, label %for.body.lr.ph.i, label %if.then

for.body.lr.ph.i:                                 ; preds = %lor.lhs.false
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %1 = load ptr, ptr %m_data.i.i, align 8, !tbaa !91
  %2 = zext i32 %0 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %if.end.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %if.end.i ]
  %cmp.not34.i = phi i1 [ true, %for.body.lr.ph.i ], [ %cmp.not.i, %if.end.i ]
  %m_n.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv.i, i32 1
  %3 = load ptr, ptr %m_n.i, align 8, !tbaa !219
  %cmp5.i = icmp eq ptr %3, %node0
  br i1 %cmp5.i, label %land.lhs.true.i, label %lor.lhs.false.i

land.lhs.true.i:                                  ; preds = %for.body.i
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv.i, i32 1, i64 1
  %4 = load ptr, ptr %arrayidx7.i, align 8, !tbaa !219
  %cmp9.i = icmp eq ptr %4, %node1
  br i1 %cmp9.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit, label %lor.lhs.false.i

lor.lhs.false.i:                                  ; preds = %land.lhs.true.i, %for.body.i
  %cmp13.i = icmp eq ptr %3, %node1
  br i1 %cmp13.i, label %land.lhs.true14.i, label %if.end.i

land.lhs.true14.i:                                ; preds = %lor.lhs.false.i
  %arrayidx16.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv.i, i32 1, i64 1
  %5 = load ptr, ptr %arrayidx16.i, align 8, !tbaa !219
  %cmp18.i = icmp eq ptr %5, %node0
  br i1 %cmp18.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit, label %if.end.i

if.end.i:                                         ; preds = %land.lhs.true14.i, %lor.lhs.false.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %cmp.not.i = icmp ult i64 %indvars.iv.next.i, %2
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %2
  br i1 %exitcond.not.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit, label %for.body.i

_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit:   ; preds = %land.lhs.true.i, %land.lhs.true14.i, %if.end.i
  %cmp.not.lcssa.i = phi i1 [ %cmp.not.i, %if.end.i ], [ %cmp.not34.i, %land.lhs.true.i ], [ %cmp.not34.i, %land.lhs.true14.i ]
  br i1 %cmp.not.lcssa.i, label %if.end, label %if.then

if.then:                                          ; preds = %lor.lhs.false, %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit, %entry
  tail call void @_ZN10btSoftBody10appendLinkEiPNS_8MaterialE(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef -1, ptr noundef %mat)
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %6 = load i32, ptr %m_size.i, align 4, !tbaa !92
  %sub = add nsw i32 %6, -1
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %7 = load ptr, ptr %m_data.i, align 8, !tbaa !91
  %idxprom.i = sext i32 %sub to i64
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %7, i64 %idxprom.i, i32 1
  store ptr %node0, ptr %m_n, align 8, !tbaa !219
  %arrayidx6 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %7, i64 %idxprom.i, i32 1, i64 1
  store ptr %node1, ptr %arrayidx6, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %node0, i64 0, i32 1
  %m_x11 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %node1, i64 0, i32 1
  %8 = load float, ptr %m_x, align 4, !tbaa !137
  %9 = load float, ptr %m_x11, align 4, !tbaa !137
  %sub.i = fsub float %8, %9
  %arrayidx5.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %node0, i64 0, i32 1, i32 0, i64 1
  %10 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %arrayidx7.i20 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %node1, i64 0, i32 1, i32 0, i64 1
  %11 = load float, ptr %arrayidx7.i20, align 4, !tbaa !137
  %sub8.i = fsub float %10, %11
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %node0, i64 0, i32 1, i32 0, i64 2
  %12 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %node1, i64 0, i32 1, i32 0, i64 2
  %13 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %12, %13
  %mul8.i.i.i = fmul float %sub8.i, %sub8.i
  %14 = tail call float @llvm.fmuladd.f32(float %sub.i, float %sub.i, float %mul8.i.i.i)
  %15 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub14.i, float %14)
  %sqrt.i = tail call float @llvm.sqrt.f32(float %15)
  %m_rl = getelementptr inbounds %"struct.btSoftBody::Link", ptr %7, i64 %idxprom.i, i32 2
  store float %sqrt.i, ptr %m_rl, align 8, !tbaa !239
  %m_bUpdateRtCst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  store i8 1, ptr %m_bUpdateRtCst, align 4, !tbaa !147
  br label %if.end

if.end:                                           ; preds = %if.then, %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendFaceEiPNS_8MaterialE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %model, ptr noundef %mat) local_unnamed_addr #4 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %f.sroa.7 = alloca { [3 x ptr], %class.btVector3, float, ptr }, align 8
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %f.sroa.7)
  %cmp = icmp sgt i32 %model, -1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !95
  %idxprom.i = zext i32 %model to i64
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %0, i64 %idxprom.i
  %f.sroa.0.0.copyload = load ptr, ptr %arrayidx.i, align 8
  %f.sroa.6.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 8
  %f.sroa.6.0.copyload = load ptr, ptr %f.sroa.6.0.arrayidx.i.sroa_idx, align 8
  %f.sroa.7.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7, ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.0.arrayidx.i.sroa_idx, i64 56, i1 false)
  br label %if.end

if.else:                                          ; preds = %entry
  %1 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %1, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit, !prof !173

init.check.i:                                     ; preds = %if.else
  %2 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy) #38
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit, label %init.i

init.i:                                           ; preds = %init.check.i
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy, align 8, !tbaa !174
  %3 = tail call ptr @llvm.invariant.start.p0(i64 72, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit

_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit: ; preds = %if.else, %init.check.i, %init.i
  %f.sroa.0.0.copyload10 = load ptr, ptr @_ZZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7, ptr noundef nonnull align 8 dereferenceable(56) getelementptr inbounds (%"struct.btSoftBody::Face", ptr @_ZZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy, i64 0, i32 1, i64 0), i64 56, i1 false)
  %tobool.not = icmp eq ptr %mat, null
  br i1 %tobool.not, label %cond.false, label %if.end

cond.false:                                       ; preds = %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit
  %m_data.i6 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %4 = load ptr, ptr %m_data.i6, align 8, !tbaa !119
  %5 = load ptr, ptr %4, align 8, !tbaa !219
  br label %if.end

if.end:                                           ; preds = %cond.false, %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit, %if.then
  %f.sroa.6.0 = phi ptr [ %f.sroa.6.0.copyload, %if.then ], [ %5, %cond.false ], [ %mat, %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit ]
  %f.sroa.0.0 = phi ptr [ %f.sroa.0.0.copyload, %if.then ], [ %f.sroa.0.0.copyload10, %cond.false ], [ %f.sroa.0.0.copyload10, %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit ]
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %6 = load i32, ptr %m_size.i.i, align 4, !tbaa !96
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 3
  %7 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !97
  %cmp.i = icmp eq i32 %6, %7
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE9push_backERKS1_.exit

if.then.i:                                        ; preds = %if.end
  %tobool.not.i.i = icmp eq i32 %6, 0
  %mul.i.i = shl nsw i32 %6, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %6, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE9push_backERKS1_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = mul nsw i64 %conv.i.i.i.i, 72
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !96
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %8 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %6, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %8, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %wide.trip.count.i.i.i = zext i32 %8 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 1
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967294
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.1, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %10 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !95
  %arrayidx3.i.i.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %10, i64 %indvars.iv.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i, i64 72, i1 false)
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %11 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !95
  %arrayidx3.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %11, i64 %indvars.iv.next.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.1, i64 72, i1 false)
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Face", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.unr
  %12 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !95
  %arrayidx3.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Face", ptr %12, i64 %indvars.iv.i.i.i.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.epil, i64 72, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i: ; preds = %for.body.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %13 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !95
  %tobool.not.i10.i.i = icmp eq ptr %13, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 6
  %14 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %14, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %13)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !94
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !95
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !97
  %.pre7.i = load i32, ptr %m_size.i.i, align 4, !tbaa !96
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE9push_backERKS1_.exit

_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE9push_backERKS1_.exit: ; preds = %if.end, %if.then.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i
  %15 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i ], [ %6, %if.then.i ], [ %6, %if.end ]
  %m_data.i7 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %16 = load ptr, ptr %m_data.i7, align 8, !tbaa !95
  %idxprom.i8 = sext i32 %15 to i64
  %arrayidx.i9 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %16, i64 %idxprom.i8
  store ptr %f.sroa.0.0, ptr %arrayidx.i9, align 8
  %f.sroa.6.0.arrayidx.i9.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i9, i64 8
  store ptr %f.sroa.6.0, ptr %f.sroa.6.0.arrayidx.i9.sroa_idx, align 8
  %f.sroa.7.0.arrayidx.i9.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i9, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.0.arrayidx.i9.sroa_idx, ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7, i64 56, i1 false)
  %17 = load i32, ptr %m_size.i.i, align 4, !tbaa !96
  %inc.i = add nsw i32 %17, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !96
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %f.sroa.7)
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody10appendFaceEiiiPNS_8MaterialE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %node0, i32 noundef %node1, i32 noundef %node2, ptr noundef %mat) local_unnamed_addr #0 align 2 {
entry:
  %cmp = icmp eq i32 %node0, %node1
  %cmp2 = icmp eq i32 %node1, %node2
  %or.cond = or i1 %cmp, %cmp2
  %cmp5 = icmp eq i32 %node2, %node0
  %or.cond49 = or i1 %cmp5, %or.cond
  br i1 %or.cond49, label %return, label %if.end7

if.end7:                                          ; preds = %entry
  tail call void @_ZN10btSoftBody10appendFaceEiPNS_8MaterialE(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef -1, ptr noundef %mat)
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !96
  %sub = add nsw i32 %0, -1
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !95
  %idxprom.i = sext i32 %sub to i64
  %m_data.i40 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %2 = load ptr, ptr %m_data.i40, align 8, !tbaa !87
  %idxprom.i41 = sext i32 %node0 to i64
  %arrayidx.i42 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %idxprom.i41
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 %idxprom.i, i32 1
  store ptr %arrayidx.i42, ptr %m_n, align 8, !tbaa !219
  %3 = load ptr, ptr %m_data.i40, align 8, !tbaa !87
  %idxprom.i44 = sext i32 %node1 to i64
  %arrayidx.i45 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 %idxprom.i44
  %arrayidx14 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 %idxprom.i, i32 1, i64 1
  store ptr %arrayidx.i45, ptr %arrayidx14, align 8, !tbaa !219
  %4 = load ptr, ptr %m_data.i40, align 8, !tbaa !87
  %idxprom.i47 = sext i32 %node2 to i64
  %arrayidx.i48 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 %idxprom.i47
  %arrayidx18 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 %idxprom.i, i32 1, i64 2
  store ptr %arrayidx.i48, ptr %arrayidx18, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %idxprom.i41, i32 1
  %m_x23 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 %idxprom.i44, i32 1
  %m_x26 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 %idxprom.i47, i32 1
  %5 = load float, ptr %m_x23, align 4, !tbaa !137
  %6 = load float, ptr %m_x, align 4, !tbaa !137
  %sub.i.i = fsub float %5, %6
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 %idxprom.i44, i32 1, i32 0, i64 1
  %7 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %idxprom.i41, i32 1, i32 0, i64 1
  %8 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %sub8.i.i = fsub float %7, %8
  %arrayidx11.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 %idxprom.i44, i32 1, i32 0, i64 2
  %9 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %arrayidx13.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %idxprom.i41, i32 1, i32 0, i64 2
  %10 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %9, %10
  %11 = load float, ptr %m_x26, align 4, !tbaa !137
  %sub.i7.i = fsub float %11, %6
  %arrayidx5.i8.i = getelementptr inbounds [4 x float], ptr %m_x26, i64 0, i64 1
  %12 = load float, ptr %arrayidx5.i8.i, align 4, !tbaa !137
  %sub8.i10.i = fsub float %12, %8
  %arrayidx11.i11.i = getelementptr inbounds [4 x float], ptr %m_x26, i64 0, i64 2
  %13 = load float, ptr %arrayidx11.i11.i, align 4, !tbaa !137
  %sub14.i13.i = fsub float %13, %10
  %14 = fneg float %sub14.i.i
  %neg.i.i.i = fmul float %sub8.i10.i, %14
  %15 = tail call float @llvm.fmuladd.f32(float %sub8.i.i, float %sub14.i13.i, float %neg.i.i.i)
  %16 = fneg float %sub.i.i
  %neg19.i.i.i = fmul float %sub14.i13.i, %16
  %17 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %sub.i7.i, float %neg19.i.i.i)
  %18 = fneg float %sub8.i.i
  %neg30.i.i.i = fmul float %sub.i7.i, %18
  %19 = tail call float @llvm.fmuladd.f32(float %sub.i.i, float %sub8.i10.i, float %neg30.i.i.i)
  %mul8.i.i.i.i = fmul float %17, %17
  %20 = tail call float @llvm.fmuladd.f32(float %15, float %15, float %mul8.i.i.i.i)
  %21 = tail call float @llvm.fmuladd.f32(float %19, float %19, float %20)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %21)
  %m_ra = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 %idxprom.i, i32 3
  store float %sqrt.i.i, ptr %m_ra, align 8, !tbaa !241
  %m_bUpdateRtCst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  store i8 1, ptr %m_bUpdateRtCst, align 4, !tbaa !147
  br label %return

return:                                           ; preds = %entry, %if.end7
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody11appendTetraEiPNS_8MaterialE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %model, ptr noundef %mat) local_unnamed_addr #4 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %t.sroa.7 = alloca { [4 x ptr], float, ptr, [4 x %class.btVector3], float, float }, align 8
  call void @llvm.lifetime.start.p0(i64 120, ptr nonnull %t.sroa.7)
  %cmp = icmp sgt i32 %model, -1
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !99
  %idxprom.i = zext i32 %model to i64
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %0, i64 %idxprom.i
  %t.sroa.0.0.copyload = load ptr, ptr %arrayidx.i, align 8
  %t.sroa.6.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 8
  %t.sroa.6.0.copyload = load ptr, ptr %t.sroa.6.0.arrayidx.i.sroa_idx, align 8
  %t.sroa.7.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %t.sroa.7, ptr noundef nonnull align 8 dereferenceable(120) %t.sroa.7.0.arrayidx.i.sroa_idx, i64 120, i1 false)
  br label %if.end

if.else:                                          ; preds = %entry
  %1 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %1, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_.exit, !prof !173

init.check.i:                                     ; preds = %if.else
  %2 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_E9zerodummy) #38
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %_ZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_.exit, label %init.i

init.i:                                           ; preds = %init.check.i
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_E9zerodummy, align 8, !tbaa !174
  %3 = tail call ptr @llvm.invariant.start.p0(i64 136, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_E9zerodummy)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_.exit

_ZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_.exit: ; preds = %if.else, %init.check.i, %init.i
  %t.sroa.0.0.copyload10 = load ptr, ptr @_ZZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_E9zerodummy, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %t.sroa.7, ptr noundef nonnull align 8 dereferenceable(120) getelementptr inbounds (%"struct.btSoftBody::Tetra", ptr @_ZZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_E9zerodummy, i64 0, i32 1, i64 0), i64 120, i1 false)
  %tobool.not = icmp eq ptr %mat, null
  br i1 %tobool.not, label %cond.false, label %if.end

cond.false:                                       ; preds = %_ZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_.exit
  %m_data.i6 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %4 = load ptr, ptr %m_data.i6, align 8, !tbaa !119
  %5 = load ptr, ptr %4, align 8, !tbaa !219
  br label %if.end

if.end:                                           ; preds = %cond.false, %_ZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_.exit, %if.then
  %t.sroa.6.0 = phi ptr [ %t.sroa.6.0.copyload, %if.then ], [ %5, %cond.false ], [ %mat, %_ZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_.exit ]
  %t.sroa.0.0 = phi ptr [ %t.sroa.0.0.copyload, %if.then ], [ %t.sroa.0.0.copyload10, %cond.false ], [ %t.sroa.0.0.copyload10, %_ZL14ZeroInitializeIN10btSoftBody5TetraEEvRT_.exit ]
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 2
  %6 = load i32, ptr %m_size.i.i, align 4, !tbaa !100
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 3
  %7 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !101
  %cmp.i = icmp eq i32 %6, %7
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE9push_backERKS1_.exit

if.then.i:                                        ; preds = %if.end
  %tobool.not.i.i = icmp eq i32 %6, 0
  %mul.i.i = shl nsw i32 %6, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %6, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE9push_backERKS1_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = mul nsw i64 %conv.i.i.i.i, 136
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !100
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %8 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %6, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %8, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  %wide.trip.count.i.i.i = zext i32 %8 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 1
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967294
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.1, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %10 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !99
  %arrayidx3.i.i.i = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %10, i64 %indvars.iv.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(136) %arrayidx.i.i.i, ptr noundef nonnull align 8 dereferenceable(136) %arrayidx3.i.i.i, i64 136, i1 false)
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %11 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !99
  %arrayidx3.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %11, i64 %indvars.iv.next.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(136) %arrayidx.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(136) %arrayidx3.i.i.i.1, i64 136, i1 false)
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.unr
  %12 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !99
  %arrayidx3.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %12, i64 %indvars.iv.i.i.i.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(136) %arrayidx.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(136) %arrayidx3.i.i.i.epil, i64 136, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i: ; preds = %for.body.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  %13 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !99
  %tobool.not.i10.i.i = icmp eq ptr %13, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 6
  %14 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %14, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %13)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody5TetraEE4copyEiiPS1_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !98
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !99
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !101
  %.pre7.i = load i32, ptr %m_size.i.i, align 4, !tbaa !100
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE9push_backERKS1_.exit

_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE9push_backERKS1_.exit: ; preds = %if.end, %if.then.i, %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE10deallocateEv.exit.i.i
  %15 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIN10btSoftBody5TetraEE10deallocateEv.exit.i.i ], [ %6, %if.then.i ], [ %6, %if.end ]
  %m_data.i7 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  %16 = load ptr, ptr %m_data.i7, align 8, !tbaa !99
  %idxprom.i8 = sext i32 %15 to i64
  %arrayidx.i9 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %16, i64 %idxprom.i8
  store ptr %t.sroa.0.0, ptr %arrayidx.i9, align 8
  %t.sroa.6.0.arrayidx.i9.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i9, i64 8
  store ptr %t.sroa.6.0, ptr %t.sroa.6.0.arrayidx.i9.sroa_idx, align 8
  %t.sroa.7.0.arrayidx.i9.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i9, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %t.sroa.7.0.arrayidx.i9.sroa_idx, ptr noundef nonnull align 8 dereferenceable(120) %t.sroa.7, i64 120, i1 false)
  %17 = load i32, ptr %m_size.i.i, align 4, !tbaa !100
  %inc.i = add nsw i32 %17, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !100
  call void @llvm.lifetime.end.p0(i64 120, ptr nonnull %t.sroa.7)
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody11appendTetraEiiiiPNS_8MaterialE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %node0, i32 noundef %node1, i32 noundef %node2, i32 noundef %node3, ptr noundef %mat) local_unnamed_addr #0 align 2 {
entry:
  tail call void @_ZN10btSoftBody11appendTetraEiPNS_8MaterialE(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef -1, ptr noundef %mat)
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !100
  %sub = add nsw i32 %0, -1
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !99
  %idxprom.i = sext i32 %sub to i64
  %m_data.i37 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %2 = load ptr, ptr %m_data.i37, align 8, !tbaa !87
  %idxprom.i38 = sext i32 %node0 to i64
  %arrayidx.i39 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %idxprom.i38
  %m_n = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %1, i64 %idxprom.i, i32 1
  store ptr %arrayidx.i39, ptr %m_n, align 8, !tbaa !219
  %3 = load ptr, ptr %m_data.i37, align 8, !tbaa !87
  %idxprom.i41 = sext i32 %node1 to i64
  %arrayidx.i42 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 %idxprom.i41
  %arrayidx8 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %1, i64 %idxprom.i, i32 1, i64 1
  store ptr %arrayidx.i42, ptr %arrayidx8, align 8, !tbaa !219
  %4 = load ptr, ptr %m_data.i37, align 8, !tbaa !87
  %idxprom.i44 = sext i32 %node2 to i64
  %arrayidx.i45 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 %idxprom.i44
  %arrayidx12 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %1, i64 %idxprom.i, i32 1, i64 2
  store ptr %arrayidx.i45, ptr %arrayidx12, align 8, !tbaa !219
  %5 = load ptr, ptr %m_data.i37, align 8, !tbaa !87
  %idxprom.i47 = sext i32 %node3 to i64
  %arrayidx.i48 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 %idxprom.i47
  %arrayidx16 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %1, i64 %idxprom.i, i32 1, i64 3
  store ptr %arrayidx.i48, ptr %arrayidx16, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %idxprom.i38, i32 1
  %m_x21 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 %idxprom.i41, i32 1
  %m_x24 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 %idxprom.i44, i32 1
  %m_x27 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 %idxprom.i47, i32 1
  %6 = load float, ptr %m_x21, align 4, !tbaa !137
  %7 = load float, ptr %m_x, align 4, !tbaa !137
  %sub.i.i = fsub float %6, %7
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 %idxprom.i41, i32 1, i32 0, i64 1
  %8 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %idxprom.i38, i32 1, i32 0, i64 1
  %9 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %sub8.i.i = fsub float %8, %9
  %arrayidx11.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 %idxprom.i41, i32 1, i32 0, i64 2
  %10 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %arrayidx13.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %idxprom.i38, i32 1, i32 0, i64 2
  %11 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %10, %11
  %12 = load float, ptr %m_x24, align 4, !tbaa !137
  %sub.i10.i = fsub float %12, %7
  %arrayidx5.i11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 %idxprom.i44, i32 1, i32 0, i64 1
  %13 = load float, ptr %arrayidx5.i11.i, align 4, !tbaa !137
  %sub8.i13.i = fsub float %13, %9
  %arrayidx11.i14.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 %idxprom.i44, i32 1, i32 0, i64 2
  %14 = load float, ptr %arrayidx11.i14.i, align 4, !tbaa !137
  %sub14.i16.i = fsub float %14, %11
  %15 = load float, ptr %m_x27, align 4, !tbaa !137
  %sub.i22.i = fsub float %15, %7
  %arrayidx5.i23.i = getelementptr inbounds [4 x float], ptr %m_x27, i64 0, i64 1
  %16 = load float, ptr %arrayidx5.i23.i, align 4, !tbaa !137
  %sub8.i25.i = fsub float %16, %9
  %arrayidx11.i26.i = getelementptr inbounds [4 x float], ptr %m_x27, i64 0, i64 2
  %17 = load float, ptr %arrayidx11.i26.i, align 4, !tbaa !137
  %sub14.i28.i = fsub float %17, %11
  %18 = fneg float %sub14.i16.i
  %neg.i.i.i = fmul float %sub8.i25.i, %18
  %19 = tail call float @llvm.fmuladd.f32(float %sub8.i13.i, float %sub14.i28.i, float %neg.i.i.i)
  %20 = fneg float %sub.i10.i
  %neg19.i.i.i = fmul float %sub14.i28.i, %20
  %21 = tail call float @llvm.fmuladd.f32(float %sub14.i16.i, float %sub.i22.i, float %neg19.i.i.i)
  %22 = fneg float %sub8.i13.i
  %neg30.i.i.i = fmul float %sub.i22.i, %22
  %23 = tail call float @llvm.fmuladd.f32(float %sub.i10.i, float %sub8.i25.i, float %neg30.i.i.i)
  %mul8.i.i.i = fmul float %sub8.i.i, %21
  %24 = tail call float @llvm.fmuladd.f32(float %sub.i.i, float %19, float %mul8.i.i.i)
  %25 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %23, float %24)
  %m_rv = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %1, i64 %idxprom.i, i32 2
  store float %25, ptr %m_rv, align 8, !tbaa !242
  %m_bUpdateRtCst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  store i8 1, ptr %m_bUpdateRtCst, align 4, !tbaa !147
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody12appendAnchorEiP11btRigidBodyb(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %node, ptr noundef %body, i1 noundef zeroext %disableCollisionBetweenLinkedBodies) local_unnamed_addr #0 align 2 {
entry:
  %a = alloca %"struct.btSoftBody::Anchor", align 8
  br i1 %disableCollisionBetweenLinkedBodies, label %if.then, label %if.end7

if.then:                                          ; preds = %entry
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 2
  %0 = load i32, ptr %m_size.i.i, align 4, !tbaa !16
  %cmp8.i = icmp sgt i32 %0, 0
  br i1 %cmp8.i, label %for.body.lr.ph.i, label %if.then4

for.body.lr.ph.i:                                 ; preds = %if.then
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !15
  %wide.trip.count.i = zext i32 %0 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.inc.i ]
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv.i
  %2 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %cmp3.i = icmp eq ptr %2, %body
  br i1 %cmp3.i, label %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE16findLinearSearchERKS1_.exit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %if.then4, label %for.body.i

_ZNK20btAlignedObjectArrayIP17btCollisionObjectE16findLinearSearchERKS1_.exit: ; preds = %for.body.i
  %3 = trunc i64 %indvars.iv.i to i32
  %cmp = icmp eq i32 %0, %3
  br i1 %cmp, label %if.then4, label %if.end7

if.then4:                                         ; preds = %for.inc.i, %if.then, %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE16findLinearSearchERKS1_.exit
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 3
  %4 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !17
  %cmp.i = icmp eq i32 %0, %4
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIP17btCollisionObjectE9push_backERKS1_.exit

if.then.i:                                        ; preds = %if.then4
  %tobool.not.i.i = icmp eq i32 %0, 0
  %mul.i.i = shl nsw i32 %0, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %0, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIP17btCollisionObjectE9push_backERKS1_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIP17btCollisionObjectE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 3
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !16
  br label %_ZN20btAlignedObjectArrayIP17btCollisionObjectE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIP17btCollisionObjectE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %5 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %0, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %5, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIP17btCollisionObjectE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 5
  %wide.trip.count.i.i.i = zext i32 %5 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 3
  %6 = icmp ult i32 %5, 4
  br i1 %6, label %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967292
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.3, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %7 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !15
  %arrayidx3.i.i.i = getelementptr inbounds ptr, ptr %7, i64 %indvars.iv.i.i.i
  %8 = load ptr, ptr %arrayidx3.i.i.i, align 8, !tbaa !219
  store ptr %8, ptr %arrayidx.i.i.i, align 8, !tbaa !219
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %9 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !15
  %arrayidx3.i.i.i.1 = getelementptr inbounds ptr, ptr %9, i64 %indvars.iv.next.i.i.i
  %10 = load ptr, ptr %arrayidx3.i.i.i.1, align 8, !tbaa !219
  store ptr %10, ptr %arrayidx.i.i.i.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.1 = or i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %11 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !15
  %arrayidx3.i.i.i.2 = getelementptr inbounds ptr, ptr %11, i64 %indvars.iv.next.i.i.i.1
  %12 = load ptr, ptr %arrayidx3.i.i.i.2, align 8, !tbaa !219
  store ptr %12, ptr %arrayidx.i.i.i.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.2 = or i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %13 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !15
  %arrayidx3.i.i.i.3 = getelementptr inbounds ptr, ptr %13, i64 %indvars.iv.next.i.i.i.2
  %14 = load ptr, ptr %arrayidx3.i.i.i.3, align 8, !tbaa !219
  store ptr %14, ptr %arrayidx.i.i.i.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil
  %indvars.iv.i.i.i.epil = phi i64 [ %indvars.iv.next.i.i.i.epil, %for.body.i.i.i.epil ], [ %indvars.iv.i.i.i.unr, %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.i.i.epil ], [ 0, %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa ]
  %arrayidx.i.i.i.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.epil
  %15 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !15
  %arrayidx3.i.i.i.epil = getelementptr inbounds ptr, ptr %15, i64 %indvars.iv.i.i.i.epil
  %16 = load ptr, ptr %arrayidx3.i.i.i.epil, align 8, !tbaa !219
  store ptr %16, ptr %arrayidx.i.i.i.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.epil = add nuw nsw i64 %indvars.iv.i.i.i.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i, label %for.body.i.i.i.epil, !llvm.loop !244

_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i: ; preds = %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil, %_ZN20btAlignedObjectArrayIP17btCollisionObjectE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 5
  %17 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !15
  %tobool.not.i10.i.i = icmp eq ptr %17, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 6
  %18 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %18, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIP17btCollisionObjectE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %17)
  %.pre7.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !16
  br label %_ZN20btAlignedObjectArrayIP17btCollisionObjectE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIP17btCollisionObjectE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i
  %.pre7.i = phi i32 [ %.pre7.pre.i, %if.then3.i.i.i ], [ %5, %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE4copyEiiPS1_.exit.i.i ]
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !8
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !15
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !17
  br label %_ZN20btAlignedObjectArrayIP17btCollisionObjectE9push_backERKS1_.exit

_ZN20btAlignedObjectArrayIP17btCollisionObjectE9push_backERKS1_.exit: ; preds = %if.then4, %if.then.i, %_ZN20btAlignedObjectArrayIP17btCollisionObjectE10deallocateEv.exit.i.i
  %19 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIP17btCollisionObjectE10deallocateEv.exit.i.i ], [ %0, %if.then.i ], [ %0, %if.then4 ]
  %m_data.i19 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 1, i32 5
  %20 = load ptr, ptr %m_data.i19, align 8, !tbaa !15
  %idxprom.i = sext i32 %19 to i64
  %arrayidx.i20 = getelementptr inbounds ptr, ptr %20, i64 %idxprom.i
  store ptr %body, ptr %arrayidx.i20, align 8, !tbaa !219
  %inc.i = add nsw i32 %19, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !16
  br label %if.end7

if.end7:                                          ; preds = %_ZNK20btAlignedObjectArrayIP17btCollisionObjectE16findLinearSearchERKS1_.exit, %_ZN20btAlignedObjectArrayIP17btCollisionObjectE9push_backERKS1_.exit, %entry
  call void @llvm.lifetime.start.p0(i64 104, ptr nonnull %a) #38
  %m_data.i21 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %21 = load ptr, ptr %m_data.i21, align 8, !tbaa !87
  %idxprom.i22 = sext i32 %node to i64
  %arrayidx.i23 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %idxprom.i22
  store ptr %arrayidx.i23, ptr %a, align 8, !tbaa !234
  %m_body = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %a, i64 0, i32 2
  store ptr %body, ptr %m_body, align 8, !tbaa !245
  %m_interpolationWorldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %body, i64 0, i32 2
  %arrayidx3.i.i = getelementptr inbounds %class.btCollisionObject, ptr %body, i64 0, i32 2, i32 0, i32 0, i64 1
  %arrayidx6.i.i = getelementptr inbounds %class.btCollisionObject, ptr %body, i64 0, i32 2, i32 0, i32 0, i64 2
  %arrayidx.i28.i.i = getelementptr inbounds %class.btCollisionObject, ptr %body, i64 0, i32 2, i32 0, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i29.i.i = getelementptr inbounds %class.btCollisionObject, ptr %body, i64 0, i32 2, i32 0, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i30.i.i = getelementptr inbounds %class.btCollisionObject, ptr %body, i64 0, i32 2, i32 0, i32 0, i64 2, i32 0, i64 2
  %22 = load float, ptr %arrayidx.i28.i.i, align 4, !tbaa !137, !noalias !246
  %23 = load float, ptr %arrayidx.i29.i.i, align 4, !tbaa !137, !noalias !246
  %24 = load float, ptr %arrayidx.i30.i.i, align 4, !tbaa !137, !noalias !246
  %m_origin.i = getelementptr inbounds %class.btCollisionObject, ptr %body, i64 0, i32 2, i32 1
  %25 = load float, ptr %m_origin.i, align 4, !tbaa !137, !noalias !251
  %fneg.i.i = fneg float %25
  %arrayidx3.i5.i = getelementptr inbounds %class.btCollisionObject, ptr %body, i64 0, i32 2, i32 1, i32 0, i64 1
  %26 = load float, ptr %arrayidx3.i5.i, align 4, !tbaa !137, !noalias !251
  %fneg4.i.i = fneg float %26
  %arrayidx7.i.i = getelementptr inbounds %class.btCollisionObject, ptr %body, i64 0, i32 2, i32 1, i32 0, i64 2
  %27 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137, !noalias !251
  %fneg8.i.i = fneg float %27
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %idxprom.i22, i32 1
  %28 = load float, ptr %m_x, align 4, !tbaa !137
  %arrayidx7.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %idxprom.i22, i32 1, i32 0, i64 1
  %29 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %arrayidx12.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %idxprom.i22, i32 1, i32 0, i64 2
  %30 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %31 = load <2 x float>, ptr %m_interpolationWorldTransform.i, align 4, !tbaa !137, !noalias !246
  %32 = load <2 x float>, ptr %arrayidx3.i.i, align 4, !tbaa !137, !noalias !246
  %33 = load <2 x float>, ptr %arrayidx6.i.i, align 4, !tbaa !137, !noalias !246
  %34 = insertelement <2 x float> poison, float %fneg4.i.i, i64 0
  %35 = shufflevector <2 x float> %34, <2 x float> poison, <2 x i32> zeroinitializer
  %36 = fmul <2 x float> %32, %35
  %37 = insertelement <2 x float> poison, float %fneg.i.i, i64 0
  %38 = shufflevector <2 x float> %37, <2 x float> poison, <2 x i32> zeroinitializer
  %39 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %31, <2 x float> %38, <2 x float> %36)
  %40 = insertelement <2 x float> poison, float %fneg8.i.i, i64 0
  %41 = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> zeroinitializer
  %42 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %33, <2 x float> %41, <2 x float> %39)
  %43 = insertelement <2 x float> poison, float %29, i64 0
  %44 = shufflevector <2 x float> %43, <2 x float> poison, <2 x i32> zeroinitializer
  %45 = fmul <2 x float> %32, %44
  %46 = insertelement <2 x float> poison, float %28, i64 0
  %47 = shufflevector <2 x float> %46, <2 x float> poison, <2 x i32> zeroinitializer
  %48 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %31, <2 x float> %47, <2 x float> %45)
  %49 = insertelement <2 x float> poison, float %30, i64 0
  %50 = shufflevector <2 x float> %49, <2 x float> poison, <2 x i32> zeroinitializer
  %51 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %33, <2 x float> %50, <2 x float> %48)
  %52 = fadd <2 x float> %42, %51
  %53 = insertelement <2 x float> poison, float %23, i64 0
  %54 = shufflevector <2 x float> %53, <2 x float> poison, <2 x i32> zeroinitializer
  %55 = insertelement <2 x float> %34, float %29, i64 1
  %56 = fmul <2 x float> %54, %55
  %57 = insertelement <2 x float> poison, float %22, i64 0
  %58 = shufflevector <2 x float> %57, <2 x float> poison, <2 x i32> zeroinitializer
  %59 = insertelement <2 x float> %37, float %28, i64 1
  %60 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %58, <2 x float> %59, <2 x float> %56)
  %61 = insertelement <2 x float> poison, float %24, i64 0
  %62 = shufflevector <2 x float> %61, <2 x float> poison, <2 x i32> zeroinitializer
  %63 = insertelement <2 x float> %40, float %30, i64 1
  %64 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %62, <2 x float> %63, <2 x float> %60)
  %shift = shufflevector <2 x float> %64, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %65 = fadd <2 x float> %64, %shift
  %retval.sroa.3.12.vec.insert.i.i35 = insertelement <2 x float> %65, float 0.000000e+00, i64 1
  %m_local = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %a, i64 0, i32 1
  store <2 x float> %52, ptr %m_local, align 8, !tbaa.struct !163
  %ref.tmp9.sroa.4.0.m_local.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %a, i64 0, i32 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i35, ptr %ref.tmp9.sroa.4.0.m_local.sroa_idx, align 8, !tbaa.struct !165
  %m_battach = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %idxprom.i22, i32 9
  %bf.load = load i8, ptr %m_battach, align 8
  %bf.set = or i8 %bf.load, 1
  store i8 %bf.set, ptr %m_battach, align 8
  %m_anchors = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13
  call void @_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE9push_backERKS1_(ptr noundef nonnull align 8 dereferenceable(25) %m_anchors, ptr noundef nonnull align 8 dereferenceable(100) %a)
  call void @llvm.lifetime.end.p0(i64 104, ptr nonnull %a) #38
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE9push_backERKS1_(ptr noundef nonnull align 8 dereferenceable(25) %this, ptr noundef nonnull align 8 dereferenceable(100) %_Val) local_unnamed_addr #8 comdat align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !104
  %m_capacity.i = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 3
  %1 = load i32, ptr %m_capacity.i, align 8, !tbaa !105
  %cmp = icmp eq i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tobool.not.i = icmp eq i32 %0, 0
  %mul.i = shl nsw i32 %0, 1
  %cond.i = select i1 %tobool.not.i, i32 1, i32 %mul.i
  %cmp.i = icmp slt i32 %0, %cond.i
  br i1 %cmp.i, label %if.then.i, label %if.end

if.then.i:                                        ; preds = %if.then
  %tobool.not.i.i = icmp eq i32 %cond.i, 0
  br i1 %tobool.not.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE8allocateEi.exit.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %conv.i.i.i = sext i32 %cond.i to i64
  %mul.i.i.i = mul nsw i64 %conv.i.i.i, 104
  %call.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i, i32 noundef 16)
  %.pre = load i32, ptr %m_size.i, align 4, !tbaa !104
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE8allocateEi.exit.i

_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE8allocateEi.exit.i: ; preds = %if.then.i.i, %if.then.i
  %2 = phi i32 [ %.pre, %if.then.i.i ], [ %0, %if.then.i ]
  %retval.0.i.i = phi ptr [ %call.i.i.i, %if.then.i.i ], [ null, %if.then.i ]
  %cmp7.i.i = icmp sgt i32 %2, 0
  br i1 %cmp7.i.i, label %for.body.lr.ph.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody6AnchorEE4copyEiiPS1_.exit.i

for.body.lr.ph.i.i:                               ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE8allocateEi.exit.i
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 5
  %wide.trip.count.i.i = zext i32 %2 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %for.body.i.i ]
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %retval.0.i.i, i64 %indvars.iv.i.i
  %3 = load ptr, ptr %m_data.i.i, align 8, !tbaa !103
  %arrayidx3.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %3, i64 %indvars.iv.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %arrayidx.i.i, ptr noundef nonnull align 8 dereferenceable(32) %arrayidx3.i.i, i64 32, i1 false)
  %m_c0.i.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %retval.0.i.i, i64 %indvars.iv.i.i, i32 3
  %m_c03.i.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %3, i64 %indvars.iv.i.i, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_c0.i.i.i, ptr noundef nonnull align 8 dereferenceable(16) %m_c03.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx6.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %3, i64 %indvars.iv.i.i, i32 3, i32 0, i64 1
  %arrayidx8.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %retval.0.i.i, i64 %indvars.iv.i.i, i32 3, i32 0, i64 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx8.i.i.i.i, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx6.i.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx10.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %3, i64 %indvars.iv.i.i, i32 3, i32 0, i64 2
  %arrayidx12.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %retval.0.i.i, i64 %indvars.iv.i.i, i32 3, i32 0, i64 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx12.i.i.i.i, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx10.i.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %m_c1.i.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %retval.0.i.i, i64 %indvars.iv.i.i, i32 4
  %m_c14.i.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %3, i64 %indvars.iv.i.i, i32 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %m_c1.i.i.i, ptr noundef nonnull align 8 dereferenceable(20) %m_c14.i.i.i, i64 20, i1 false)
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody6AnchorEE4copyEiiPS1_.exit.i, label %for.body.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody6AnchorEE4copyEiiPS1_.exit.i: ; preds = %for.body.i.i, %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE8allocateEi.exit.i
  %m_data.i9.i = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 5
  %4 = load ptr, ptr %m_data.i9.i, align 8, !tbaa !103
  %tobool.not.i10.i = icmp eq ptr %4, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 6
  %5 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %5, 0
  %or.cond.i = select i1 %tobool.not.i10.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE10deallocateEv.exit.i, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody6AnchorEE4copyEiiPS1_.exit.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %4)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE10deallocateEv.exit.i

_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE10deallocateEv.exit.i: ; preds = %if.then3.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody6AnchorEE4copyEiiPS1_.exit.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !102
  store ptr %retval.0.i.i, ptr %m_data.i9.i, align 8, !tbaa !103
  store i32 %cond.i, ptr %m_capacity.i, align 8, !tbaa !105
  %.pre7 = load i32, ptr %m_size.i, align 4, !tbaa !104
  br label %if.end

if.end:                                           ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE10deallocateEv.exit.i, %if.then, %entry
  %6 = phi i32 [ %.pre7, %_ZN20btAlignedObjectArrayIN10btSoftBody6AnchorEE10deallocateEv.exit.i ], [ %0, %if.then ], [ %0, %entry ]
  %m_data = getelementptr inbounds %class.btAlignedObjectArray.40, ptr %this, i64 0, i32 5
  %7 = load ptr, ptr %m_data, align 8, !tbaa !103
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %7, i64 %idxprom
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %arrayidx, ptr noundef nonnull align 8 dereferenceable(32) %_Val, i64 32, i1 false)
  %m_c0.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %7, i64 %idxprom, i32 3
  %m_c03.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %_Val, i64 0, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_c0.i, ptr noundef nonnull align 8 dereferenceable(16) %m_c03.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx6.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %_Val, i64 0, i32 3, i32 0, i64 1
  %arrayidx8.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %7, i64 %idxprom, i32 3, i32 0, i64 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx8.i.i, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx6.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx10.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %_Val, i64 0, i32 3, i32 0, i64 2
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %7, i64 %idxprom, i32 3, i32 0, i64 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx12.i.i, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx10.i.i, i64 16, i1 false), !tbaa.struct !163
  %m_c1.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %7, i64 %idxprom, i32 4
  %m_c14.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %_Val, i64 0, i32 4
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %m_c1.i, ptr noundef nonnull align 8 dereferenceable(20) %m_c14.i, i64 20, i1 false)
  %8 = load i32, ptr %m_size.i, align 4, !tbaa !104
  %inc = add nsw i32 %8, 1
  store i32 %inc, ptr %m_size.i, align 4, !tbaa !104
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody17appendLinearJointERKNS_6LJoint5SpecsEPNS_7ClusterENS_4BodyE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(28) %specs, ptr noundef %body0, ptr nocapture noundef readonly byval(%"struct.btSoftBody::Body") align 8 %body1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %call = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 216, i32 noundef 16)
  %m_bodies.i.i = getelementptr %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1
  %0 = getelementptr inbounds i8, ptr %call, i64 56
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(160) %0, i8 0, i64 160, i1 false)
  store ptr getelementptr inbounds ({ [8 x ptr] }, ptr @_ZTVN10btSoftBody6LJointE, i64 0, inrange i32 0, i64 2), ptr %call, align 8, !tbaa !5
  store ptr %body0, ptr %m_bodies.i.i, align 8, !tbaa.struct !252
  %ref.tmp.sroa.4.0.m_bodies.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ref.tmp.sroa.4.0.m_bodies.sroa_idx, i8 0, i64 16, i1 false)
  %arrayidx3 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx3, ptr noundef nonnull align 8 dereferenceable(24) %body1, i64 24, i1 false), !tbaa.struct !252
  %1 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %1, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZNK10btSoftBody4Body5xformEv.exit, !prof !173

init.check.i:                                     ; preds = %entry
  %2 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %_ZNK10btSoftBody4Body5xformEv.exit, label %init.i

init.i:                                           ; preds = %init.check.i
  %3 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i116 = icmp eq i8 %3, 0
  br i1 %guard.uninitialized.i116, label %init.check.i118, label %invoke.cont.i, !prof !173

init.check.i118:                                  ; preds = %init.i
  %4 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i117 = icmp eq i32 %4, 0
  br i1 %tobool.not.i117, label %invoke.cont.i, label %init.i120

init.i120:                                        ; preds = %init.check.i118
  %5 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i135 = icmp eq i8 %5, 0
  br i1 %guard.uninitialized.i135, label %init.check.i137, label %invoke.cont.i123, !prof !173

init.check.i137:                                  ; preds = %init.i120
  %6 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i136 = icmp eq i32 %6, 0
  br i1 %tobool.not.i136, label %invoke.cont.i123, label %init.i138

init.i138:                                        ; preds = %init.check.i137
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %7 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont.i123

invoke.cont.i123:                                 ; preds = %init.i138, %init.check.i137, %init.i120
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %8 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont.i

invoke.cont.i:                                    ; preds = %invoke.cont.i123, %init.check.i118, %init.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %9 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit

_ZNK10btSoftBody4Body5xformEv.exit:               ; preds = %entry, %init.check.i, %invoke.cont.i
  %m_collisionObject.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1, i64 0, i32 2
  %10 = load ptr, ptr %m_collisionObject.i, align 8, !tbaa !253
  %tobool3.not.i = icmp eq ptr %10, null
  %m_interpolationWorldTransform.i.i = getelementptr inbounds %class.btCollisionObject, ptr %10, i64 0, i32 2
  %11 = load ptr, ptr %m_bodies.i.i, align 8
  %tobool6.not.i = icmp eq ptr %11, null
  %m_framexform.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %11, i64 0, i32 3
  %spec.select.i = select i1 %tobool6.not.i, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i
  %retval.0.i = select i1 %tobool3.not.i, ptr %spec.select.i, ptr %m_interpolationWorldTransform.i.i
  %arrayidx3.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1
  %arrayidx6.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2
  %arrayidx.i28.i.i = getelementptr inbounds [4 x float], ptr %retval.0.i, i64 0, i64 2
  %arrayidx.i29.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i30.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2, i32 0, i64 2
  %12 = load float, ptr %arrayidx.i28.i.i, align 4, !tbaa !137, !noalias !255
  %13 = load float, ptr %arrayidx.i29.i.i, align 4, !tbaa !137, !noalias !255
  %14 = load float, ptr %arrayidx.i30.i.i, align 4, !tbaa !137, !noalias !255
  %m_origin.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i, i64 0, i32 1
  %15 = load float, ptr %m_origin.i, align 4, !tbaa !137, !noalias !260
  %fneg.i.i = fneg float %15
  %arrayidx3.i5.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i, i64 0, i32 1, i32 0, i64 1
  %16 = load float, ptr %arrayidx3.i5.i, align 4, !tbaa !137, !noalias !260
  %fneg4.i.i = fneg float %16
  %arrayidx7.i.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i, i64 0, i32 1, i32 0, i64 2
  %17 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137, !noalias !260
  %fneg8.i.i = fneg float %17
  %position = getelementptr inbounds %"struct.btSoftBody::LJoint::Specs", ptr %specs, i64 0, i32 1
  %18 = load float, ptr %position, align 4, !tbaa !137
  %arrayidx7.i.i.i = getelementptr inbounds %"struct.btSoftBody::LJoint::Specs", ptr %specs, i64 0, i32 1, i32 0, i64 1
  %19 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %arrayidx12.i.i.i = getelementptr inbounds %"struct.btSoftBody::LJoint::Specs", ptr %specs, i64 0, i32 1, i32 0, i64 2
  %20 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %21 = load <2 x float>, ptr %retval.0.i, align 4, !tbaa !137, !noalias !255
  %22 = load <2 x float>, ptr %arrayidx3.i.i, align 4, !tbaa !137, !noalias !255
  %23 = load <2 x float>, ptr %arrayidx6.i.i, align 4, !tbaa !137, !noalias !255
  %24 = insertelement <2 x float> poison, float %fneg4.i.i, i64 0
  %25 = shufflevector <2 x float> %24, <2 x float> poison, <2 x i32> zeroinitializer
  %26 = fmul <2 x float> %22, %25
  %27 = insertelement <2 x float> poison, float %fneg.i.i, i64 0
  %28 = shufflevector <2 x float> %27, <2 x float> poison, <2 x i32> zeroinitializer
  %29 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %21, <2 x float> %28, <2 x float> %26)
  %30 = insertelement <2 x float> poison, float %fneg8.i.i, i64 0
  %31 = shufflevector <2 x float> %30, <2 x float> poison, <2 x i32> zeroinitializer
  %32 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %23, <2 x float> %31, <2 x float> %29)
  %33 = insertelement <2 x float> poison, float %19, i64 0
  %34 = shufflevector <2 x float> %33, <2 x float> poison, <2 x i32> zeroinitializer
  %35 = fmul <2 x float> %22, %34
  %36 = insertelement <2 x float> poison, float %18, i64 0
  %37 = shufflevector <2 x float> %36, <2 x float> poison, <2 x i32> zeroinitializer
  %38 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %21, <2 x float> %37, <2 x float> %35)
  %39 = insertelement <2 x float> poison, float %20, i64 0
  %40 = shufflevector <2 x float> %39, <2 x float> poison, <2 x i32> zeroinitializer
  %41 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %23, <2 x float> %40, <2 x float> %38)
  %42 = fadd <2 x float> %32, %41
  %43 = insertelement <2 x float> poison, float %13, i64 0
  %44 = shufflevector <2 x float> %43, <2 x float> poison, <2 x i32> zeroinitializer
  %45 = insertelement <2 x float> %24, float %19, i64 1
  %46 = fmul <2 x float> %44, %45
  %47 = insertelement <2 x float> poison, float %12, i64 0
  %48 = shufflevector <2 x float> %47, <2 x float> poison, <2 x i32> zeroinitializer
  %49 = insertelement <2 x float> %27, float %18, i64 1
  %50 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %48, <2 x float> %49, <2 x float> %46)
  %51 = insertelement <2 x float> poison, float %14, i64 0
  %52 = shufflevector <2 x float> %51, <2 x float> poison, <2 x i32> zeroinitializer
  %53 = insertelement <2 x float> %30, float %20, i64 1
  %54 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %52, <2 x float> %53, <2 x float> %50)
  %shift = shufflevector <2 x float> %54, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %55 = fadd <2 x float> %54, %shift
  %retval.sroa.3.12.vec.insert.i.i145 = insertelement <2 x float> %55, float 0.000000e+00, i64 1
  %m_refs = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 2
  store <2 x float> %42, ptr %m_refs, align 8, !tbaa.struct !163
  %ref.tmp4.sroa.4.0.arrayidx10.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 2, i64 0, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i145, ptr %ref.tmp4.sroa.4.0.arrayidx10.sroa_idx, align 8, !tbaa.struct !165
  %56 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i40 = icmp eq i8 %56, 0
  br i1 %guard.uninitialized.i40, label %init.check.i42, label %_ZNK10btSoftBody4Body5xformEv.exit57, !prof !173

init.check.i42:                                   ; preds = %_ZNK10btSoftBody4Body5xformEv.exit
  %57 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i41 = icmp eq i32 %57, 0
  br i1 %tobool.not.i41, label %_ZNK10btSoftBody4Body5xformEv.exit57, label %init.i44

init.i44:                                         ; preds = %init.check.i42
  %58 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i125 = icmp eq i8 %58, 0
  br i1 %guard.uninitialized.i125, label %init.check.i127, label %invoke.cont.i48, !prof !173

init.check.i127:                                  ; preds = %init.i44
  %59 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i126 = icmp eq i32 %59, 0
  br i1 %tobool.not.i126, label %invoke.cont.i48, label %init.i128

init.i128:                                        ; preds = %init.check.i127
  %60 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i139 = icmp eq i8 %60, 0
  br i1 %guard.uninitialized.i139, label %init.check.i141, label %invoke.cont.i131, !prof !173

init.check.i141:                                  ; preds = %init.i128
  %61 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i140 = icmp eq i32 %61, 0
  br i1 %tobool.not.i140, label %invoke.cont.i131, label %init.i142

init.i142:                                        ; preds = %init.check.i141
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %62 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont.i131

invoke.cont.i131:                                 ; preds = %init.i142, %init.check.i141, %init.i128
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %63 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont.i48

invoke.cont.i48:                                  ; preds = %invoke.cont.i131, %init.check.i127, %init.i44
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %64 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit57

_ZNK10btSoftBody4Body5xformEv.exit57:             ; preds = %_ZNK10btSoftBody4Body5xformEv.exit, %init.check.i42, %invoke.cont.i48
  %m_collisionObject.i49 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1, i64 1, i32 2
  %65 = load ptr, ptr %m_collisionObject.i49, align 8, !tbaa !253
  %tobool3.not.i50 = icmp eq ptr %65, null
  %m_interpolationWorldTransform.i.i51 = getelementptr inbounds %class.btCollisionObject, ptr %65, i64 0, i32 2
  %66 = load ptr, ptr %arrayidx3, align 8
  %tobool6.not.i52 = icmp eq ptr %66, null
  %m_framexform.i53 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %66, i64 0, i32 3
  %spec.select.i54 = select i1 %tobool6.not.i52, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i53
  %retval.0.i55 = select i1 %tobool3.not.i50, ptr %spec.select.i54, ptr %m_interpolationWorldTransform.i.i51
  %arrayidx3.i.i58 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i55, i64 0, i64 1
  %arrayidx6.i.i59 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i55, i64 0, i64 2
  %arrayidx.i28.i.i63 = getelementptr inbounds [4 x float], ptr %retval.0.i55, i64 0, i64 2
  %arrayidx.i29.i.i64 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i55, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i30.i.i65 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i55, i64 0, i64 2, i32 0, i64 2
  %67 = load float, ptr %arrayidx.i28.i.i63, align 4, !tbaa !137, !noalias !261
  %68 = load float, ptr %arrayidx.i29.i.i64, align 4, !tbaa !137, !noalias !261
  %69 = load float, ptr %arrayidx.i30.i.i65, align 4, !tbaa !137, !noalias !261
  %m_origin.i66 = getelementptr inbounds %class.btTransform, ptr %retval.0.i55, i64 0, i32 1
  %70 = load float, ptr %m_origin.i66, align 4, !tbaa !137, !noalias !266
  %fneg.i.i67 = fneg float %70
  %arrayidx3.i5.i68 = getelementptr inbounds %class.btTransform, ptr %retval.0.i55, i64 0, i32 1, i32 0, i64 1
  %71 = load float, ptr %arrayidx3.i5.i68, align 4, !tbaa !137, !noalias !266
  %fneg4.i.i69 = fneg float %71
  %arrayidx7.i.i70 = getelementptr inbounds %class.btTransform, ptr %retval.0.i55, i64 0, i32 1, i32 0, i64 2
  %72 = load float, ptr %arrayidx7.i.i70, align 4, !tbaa !137, !noalias !266
  %fneg8.i.i71 = fneg float %72
  %73 = load float, ptr %position, align 4, !tbaa !137
  %74 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %75 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %76 = load <2 x float>, ptr %retval.0.i55, align 4, !tbaa !137, !noalias !261
  %77 = load <2 x float>, ptr %arrayidx3.i.i58, align 4, !tbaa !137, !noalias !261
  %78 = load <2 x float>, ptr %arrayidx6.i.i59, align 4, !tbaa !137, !noalias !261
  %79 = insertelement <2 x float> poison, float %fneg4.i.i69, i64 0
  %80 = shufflevector <2 x float> %79, <2 x float> poison, <2 x i32> zeroinitializer
  %81 = fmul <2 x float> %77, %80
  %82 = insertelement <2 x float> poison, float %fneg.i.i67, i64 0
  %83 = shufflevector <2 x float> %82, <2 x float> poison, <2 x i32> zeroinitializer
  %84 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %76, <2 x float> %83, <2 x float> %81)
  %85 = insertelement <2 x float> poison, float %fneg8.i.i71, i64 0
  %86 = shufflevector <2 x float> %85, <2 x float> poison, <2 x i32> zeroinitializer
  %87 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %78, <2 x float> %86, <2 x float> %84)
  %88 = insertelement <2 x float> poison, float %74, i64 0
  %89 = shufflevector <2 x float> %88, <2 x float> poison, <2 x i32> zeroinitializer
  %90 = fmul <2 x float> %77, %89
  %91 = insertelement <2 x float> poison, float %73, i64 0
  %92 = shufflevector <2 x float> %91, <2 x float> poison, <2 x i32> zeroinitializer
  %93 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %76, <2 x float> %92, <2 x float> %90)
  %94 = insertelement <2 x float> poison, float %75, i64 0
  %95 = shufflevector <2 x float> %94, <2 x float> poison, <2 x i32> zeroinitializer
  %96 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %78, <2 x float> %95, <2 x float> %93)
  %97 = fadd <2 x float> %87, %96
  %98 = insertelement <2 x float> poison, float %68, i64 0
  %99 = shufflevector <2 x float> %98, <2 x float> poison, <2 x i32> zeroinitializer
  %100 = insertelement <2 x float> %79, float %74, i64 1
  %101 = fmul <2 x float> %99, %100
  %102 = insertelement <2 x float> poison, float %67, i64 0
  %103 = shufflevector <2 x float> %102, <2 x float> poison, <2 x i32> zeroinitializer
  %104 = insertelement <2 x float> %82, float %73, i64 1
  %105 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %103, <2 x float> %104, <2 x float> %101)
  %106 = insertelement <2 x float> poison, float %69, i64 0
  %107 = shufflevector <2 x float> %106, <2 x float> poison, <2 x i32> zeroinitializer
  %108 = insertelement <2 x float> %85, float %75, i64 1
  %109 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %107, <2 x float> %108, <2 x float> %105)
  %shift144 = shufflevector <2 x float> %109, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %110 = fadd <2 x float> %109, %shift144
  %retval.sroa.3.12.vec.insert.i.i112146 = insertelement <2 x float> %110, float 0.000000e+00, i64 1
  %arrayidx20 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 2, i64 1
  store <2 x float> %97, ptr %arrayidx20, align 8, !tbaa.struct !163
  %ref.tmp11.sroa.4.0.arrayidx20.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 2, i64 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i112146, ptr %ref.tmp11.sroa.4.0.arrayidx20.sroa_idx, align 8, !tbaa.struct !165
  %m_cfm = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 3
  %111 = load <2 x float>, ptr %specs, align 4, !tbaa !137
  %112 = shufflevector <2 x float> %111, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  store <2 x float> %112, ptr %m_cfm, align 8, !tbaa !137
  %split = getelementptr inbounds %"struct.btSoftBody::Joint::Specs", ptr %specs, i64 0, i32 2
  %113 = load float, ptr %split, align 4, !tbaa !267
  %m_split = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 5
  store float %113, ptr %m_split, align 8, !tbaa !269
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 2
  %114 = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 3
  %115 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !117
  %cmp.i = icmp eq i32 %114, %115
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit

if.then.i:                                        ; preds = %_ZNK10btSoftBody4Body5xformEv.exit57
  %tobool.not.i.i = icmp eq i32 %114, 0
  %mul.i.i = shl nsw i32 %114, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %114, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 3
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %116 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %114, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %116, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %wide.trip.count.i.i.i = zext i32 %116 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 3
  %117 = icmp ult i32 %116, 4
  br i1 %117, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967292
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.3, %for.body.i.i.i ]
  %arrayidx.i.i.i115 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %118 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i = getelementptr inbounds ptr, ptr %118, i64 %indvars.iv.i.i.i
  %119 = load ptr, ptr %arrayidx3.i.i.i, align 8, !tbaa !219
  store ptr %119, ptr %arrayidx.i.i.i115, align 8, !tbaa !219
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i115.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %120 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.1 = getelementptr inbounds ptr, ptr %120, i64 %indvars.iv.next.i.i.i
  %121 = load ptr, ptr %arrayidx3.i.i.i.1, align 8, !tbaa !219
  store ptr %121, ptr %arrayidx.i.i.i115.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.1 = or i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i115.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %122 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.2 = getelementptr inbounds ptr, ptr %122, i64 %indvars.iv.next.i.i.i.1
  %123 = load ptr, ptr %arrayidx3.i.i.i.2, align 8, !tbaa !219
  store ptr %123, ptr %arrayidx.i.i.i115.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.2 = or i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i115.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %124 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.3 = getelementptr inbounds ptr, ptr %124, i64 %indvars.iv.next.i.i.i.2
  %125 = load ptr, ptr %arrayidx3.i.i.i.3, align 8, !tbaa !219
  store ptr %125, ptr %arrayidx.i.i.i115.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil
  %indvars.iv.i.i.i.epil = phi i64 [ %indvars.iv.next.i.i.i.epil, %for.body.i.i.i.epil ], [ %indvars.iv.i.i.i.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.i.i.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %arrayidx.i.i.i115.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.epil
  %126 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.epil = getelementptr inbounds ptr, ptr %126, i64 %indvars.iv.i.i.i.epil
  %127 = load ptr, ptr %arrayidx3.i.i.i.epil, align 8, !tbaa !219
  store ptr %127, ptr %arrayidx.i.i.i115.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.epil = add nuw nsw i64 %indvars.iv.i.i.i.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil, !llvm.loop !271

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %128 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !115
  %tobool.not.i10.i.i = icmp eq ptr %128, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 6
  %129 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %129, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %128)
  %.pre7.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i
  %.pre7.i = phi i32 [ %.pre7.pre.i, %if.then3.i.i.i ], [ %116, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i ]
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !114
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !115
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !117
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit: ; preds = %_ZNK10btSoftBody4Body5xformEv.exit57, %if.then.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i
  %130 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i ], [ %114, %if.then.i ], [ %114, %_ZNK10btSoftBody4Body5xformEv.exit57 ]
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %131 = load ptr, ptr %m_data.i, align 8, !tbaa !115
  %idxprom.i = sext i32 %130 to i64
  %arrayidx.i = getelementptr inbounds ptr, ptr %131, i64 %idxprom.i
  store ptr %call, ptr %arrayidx.i, align 8, !tbaa !219
  %inc.i = add nsw i32 %130, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !116
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #12

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody17appendLinearJointERKNS_6LJoint5SpecsENS_4BodyE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(28) %specs, ptr nocapture noundef readonly byval(%"struct.btSoftBody::Body") align 8 %body) local_unnamed_addr #4 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %1 = load ptr, ptr %0, align 8, !tbaa !219
  tail call void @_ZN10btSoftBody17appendLinearJointERKNS_6LJoint5SpecsEPNS_7ClusterENS_4BodyE(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(28) %specs, ptr noundef %1, ptr noundef nonnull byval(%"struct.btSoftBody::Body") align 8 %body)
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody17appendLinearJointERKNS_6LJoint5SpecsEPS_(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(28) %specs, ptr nocapture noundef readonly %body) local_unnamed_addr #4 align 2 {
entry:
  %agg.tmp = alloca %"struct.btSoftBody::Body", align 8
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %1 = load ptr, ptr %0, align 8, !tbaa !219
  %m_data.i4 = getelementptr inbounds %class.btSoftBody, ptr %body, i64 0, i32 24, i32 5
  %2 = load ptr, ptr %m_data.i4, align 8, !tbaa !123
  %3 = load ptr, ptr %2, align 8, !tbaa !219
  store ptr %3, ptr %agg.tmp, align 8, !tbaa !272
  %m_rigid.i = getelementptr inbounds %"struct.btSoftBody::Body", ptr %agg.tmp, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rigid.i, i8 0, i64 16, i1 false)
  tail call void @_ZN10btSoftBody17appendLinearJointERKNS_6LJoint5SpecsEPNS_7ClusterENS_4BodyE(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(28) %specs, ptr noundef %1, ptr noundef nonnull byval(%"struct.btSoftBody::Body") align 8 %agg.tmp)
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody18appendAngularJointERKNS_6AJoint5SpecsEPNS_7ClusterENS_4BodyE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 8 dereferenceable(40) %specs, ptr noundef %body0, ptr nocapture noundef readonly byval(%"struct.btSoftBody::Body") align 8 %body1) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %call = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 224, i32 noundef 16)
  %m_bodies.i.i = getelementptr %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1
  %0 = getelementptr inbounds i8, ptr %call, i64 56
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(168) %0, i8 0, i64 168, i1 false)
  store ptr getelementptr inbounds ({ [8 x ptr] }, ptr @_ZTVN10btSoftBody6AJointE, i64 0, inrange i32 0, i64 2), ptr %call, align 8, !tbaa !5
  store ptr %body0, ptr %m_bodies.i.i, align 8, !tbaa.struct !252
  %ref.tmp.sroa.4.0.m_bodies.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1, i64 0, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ref.tmp.sroa.4.0.m_bodies.sroa_idx, i8 0, i64 16, i1 false)
  %arrayidx3 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx3, ptr noundef nonnull align 8 dereferenceable(24) %body1, i64 24, i1 false), !tbaa.struct !252
  %1 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %1, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZNK10btSoftBody4Body5xformEv.exit, !prof !173

init.check.i:                                     ; preds = %entry
  %2 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i = icmp eq i32 %2, 0
  br i1 %tobool.not.i, label %_ZNK10btSoftBody4Body5xformEv.exit, label %init.i

init.i:                                           ; preds = %init.check.i
  %3 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i110 = icmp eq i8 %3, 0
  br i1 %guard.uninitialized.i110, label %init.check.i112, label %invoke.cont.i, !prof !173

init.check.i112:                                  ; preds = %init.i
  %4 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i111 = icmp eq i32 %4, 0
  br i1 %tobool.not.i111, label %invoke.cont.i, label %init.i114

init.i114:                                        ; preds = %init.check.i112
  %5 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i129 = icmp eq i8 %5, 0
  br i1 %guard.uninitialized.i129, label %init.check.i131, label %invoke.cont.i117, !prof !173

init.check.i131:                                  ; preds = %init.i114
  %6 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i130 = icmp eq i32 %6, 0
  br i1 %tobool.not.i130, label %invoke.cont.i117, label %init.i132

init.i132:                                        ; preds = %init.check.i131
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %7 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont.i117

invoke.cont.i117:                                 ; preds = %init.i132, %init.check.i131, %init.i114
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %8 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont.i

invoke.cont.i:                                    ; preds = %invoke.cont.i117, %init.check.i112, %init.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %9 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit

_ZNK10btSoftBody4Body5xformEv.exit:               ; preds = %entry, %init.check.i, %invoke.cont.i
  %m_collisionObject.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1, i64 0, i32 2
  %10 = load ptr, ptr %m_collisionObject.i, align 8, !tbaa !253
  %tobool3.not.i = icmp eq ptr %10, null
  %m_interpolationWorldTransform.i.i = getelementptr inbounds %class.btCollisionObject, ptr %10, i64 0, i32 2
  %11 = load ptr, ptr %m_bodies.i.i, align 8
  %tobool6.not.i = icmp eq ptr %11, null
  %m_framexform.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %11, i64 0, i32 3
  %spec.select.i = select i1 %tobool6.not.i, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i
  %retval.0.i = select i1 %tobool3.not.i, ptr %spec.select.i, ptr %m_interpolationWorldTransform.i.i
  %arrayidx3.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1
  %arrayidx6.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2
  %arrayidx.i28.i.i = getelementptr inbounds [4 x float], ptr %retval.0.i, i64 0, i64 2
  %arrayidx.i29.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i30.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2, i32 0, i64 2
  %12 = load float, ptr %arrayidx.i28.i.i, align 4, !tbaa !137, !noalias !273
  %13 = load float, ptr %arrayidx.i29.i.i, align 4, !tbaa !137, !noalias !273
  %14 = load float, ptr %arrayidx.i30.i.i, align 4, !tbaa !137, !noalias !273
  %axis = getelementptr inbounds %"struct.btSoftBody::AJoint::Specs", ptr %specs, i64 0, i32 1
  %15 = load float, ptr %axis, align 4, !tbaa !137
  %arrayidx7.i.i39 = getelementptr inbounds %"struct.btSoftBody::AJoint::Specs", ptr %specs, i64 0, i32 1, i32 0, i64 1
  %16 = load float, ptr %arrayidx7.i.i39, align 8, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::AJoint::Specs", ptr %specs, i64 0, i32 1, i32 0, i64 2
  %17 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %18 = load <2 x float>, ptr %retval.0.i, align 4, !tbaa !137, !noalias !273
  %19 = load <2 x float>, ptr %arrayidx3.i.i, align 4, !tbaa !137, !noalias !273
  %20 = load <2 x float>, ptr %arrayidx6.i.i, align 4, !tbaa !137, !noalias !273
  %21 = insertelement <2 x float> poison, float %16, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> zeroinitializer
  %23 = fmul <2 x float> %19, %22
  %24 = insertelement <2 x float> poison, float %15, i64 0
  %25 = shufflevector <2 x float> %24, <2 x float> poison, <2 x i32> zeroinitializer
  %26 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %18, <2 x float> %25, <2 x float> %23)
  %27 = insertelement <2 x float> poison, float %17, i64 0
  %28 = shufflevector <2 x float> %27, <2 x float> poison, <2 x i32> zeroinitializer
  %29 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %20, <2 x float> %28, <2 x float> %26)
  %mul8.i20.i = fmul float %13, %16
  %30 = tail call float @llvm.fmuladd.f32(float %12, float %15, float %mul8.i20.i)
  %31 = tail call float @llvm.fmuladd.f32(float %14, float %17, float %30)
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %31, i64 0
  %m_refs = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 2
  store <2 x float> %29, ptr %m_refs, align 8, !tbaa.struct !163
  %ref.tmp4.sroa.4.0.arrayidx11.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 2, i64 0, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %ref.tmp4.sroa.4.0.arrayidx11.sroa_idx, align 8, !tbaa.struct !165
  %32 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i40 = icmp eq i8 %32, 0
  br i1 %guard.uninitialized.i40, label %init.check.i42, label %_ZNK10btSoftBody4Body5xformEv.exit57, !prof !173

init.check.i42:                                   ; preds = %_ZNK10btSoftBody4Body5xformEv.exit
  %33 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i41 = icmp eq i32 %33, 0
  br i1 %tobool.not.i41, label %_ZNK10btSoftBody4Body5xformEv.exit57, label %init.i44

init.i44:                                         ; preds = %init.check.i42
  %34 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i119 = icmp eq i8 %34, 0
  br i1 %guard.uninitialized.i119, label %init.check.i121, label %invoke.cont.i48, !prof !173

init.check.i121:                                  ; preds = %init.i44
  %35 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i120 = icmp eq i32 %35, 0
  br i1 %tobool.not.i120, label %invoke.cont.i48, label %init.i122

init.i122:                                        ; preds = %init.check.i121
  %36 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i133 = icmp eq i8 %36, 0
  br i1 %guard.uninitialized.i133, label %init.check.i135, label %invoke.cont.i125, !prof !173

init.check.i135:                                  ; preds = %init.i122
  %37 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i134 = icmp eq i32 %37, 0
  br i1 %tobool.not.i134, label %invoke.cont.i125, label %init.i136

init.i136:                                        ; preds = %init.check.i135
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %38 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont.i125

invoke.cont.i125:                                 ; preds = %init.i136, %init.check.i135, %init.i122
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %39 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont.i48

invoke.cont.i48:                                  ; preds = %invoke.cont.i125, %init.check.i121, %init.i44
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %40 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit57

_ZNK10btSoftBody4Body5xformEv.exit57:             ; preds = %_ZNK10btSoftBody4Body5xformEv.exit, %init.check.i42, %invoke.cont.i48
  %m_collisionObject.i49 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 1, i64 1, i32 2
  %41 = load ptr, ptr %m_collisionObject.i49, align 8, !tbaa !253
  %tobool3.not.i50 = icmp eq ptr %41, null
  %m_interpolationWorldTransform.i.i51 = getelementptr inbounds %class.btCollisionObject, ptr %41, i64 0, i32 2
  %42 = load ptr, ptr %arrayidx3, align 8
  %tobool6.not.i52 = icmp eq ptr %42, null
  %m_framexform.i53 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %42, i64 0, i32 3
  %spec.select.i54 = select i1 %tobool6.not.i52, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i53
  %retval.0.i55 = select i1 %tobool3.not.i50, ptr %spec.select.i54, ptr %m_interpolationWorldTransform.i.i51
  %arrayidx3.i.i58 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i55, i64 0, i64 1
  %arrayidx6.i.i59 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i55, i64 0, i64 2
  %arrayidx.i28.i.i63 = getelementptr inbounds [4 x float], ptr %retval.0.i55, i64 0, i64 2
  %arrayidx.i29.i.i64 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i55, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i30.i.i65 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i55, i64 0, i64 2, i32 0, i64 2
  %43 = load float, ptr %arrayidx.i28.i.i63, align 4, !tbaa !137, !noalias !278
  %44 = load float, ptr %arrayidx.i29.i.i64, align 4, !tbaa !137, !noalias !278
  %45 = load float, ptr %arrayidx.i30.i.i65, align 4, !tbaa !137, !noalias !278
  %46 = load float, ptr %axis, align 4, !tbaa !137
  %47 = load float, ptr %arrayidx7.i.i39, align 8, !tbaa !137
  %48 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %49 = load <2 x float>, ptr %retval.0.i55, align 4, !tbaa !137, !noalias !278
  %50 = load <2 x float>, ptr %arrayidx3.i.i58, align 4, !tbaa !137, !noalias !278
  %51 = load <2 x float>, ptr %arrayidx6.i.i59, align 4, !tbaa !137, !noalias !278
  %52 = insertelement <2 x float> poison, float %47, i64 0
  %53 = shufflevector <2 x float> %52, <2 x float> poison, <2 x i32> zeroinitializer
  %54 = fmul <2 x float> %50, %53
  %55 = insertelement <2 x float> poison, float %46, i64 0
  %56 = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> zeroinitializer
  %57 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %49, <2 x float> %56, <2 x float> %54)
  %58 = insertelement <2 x float> poison, float %48, i64 0
  %59 = shufflevector <2 x float> %58, <2 x float> poison, <2 x i32> zeroinitializer
  %60 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %51, <2 x float> %59, <2 x float> %57)
  %mul8.i20.i102 = fmul float %44, %47
  %61 = tail call float @llvm.fmuladd.f32(float %43, float %46, float %mul8.i20.i102)
  %62 = tail call float @llvm.fmuladd.f32(float %45, float %48, float %61)
  %retval.sroa.3.12.vec.insert.i106 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %62, i64 0
  %arrayidx22 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 2, i64 1
  store <2 x float> %60, ptr %arrayidx22, align 8, !tbaa.struct !163
  %ref.tmp12.sroa.4.0.arrayidx22.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 2, i64 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i106, ptr %ref.tmp12.sroa.4.0.arrayidx22.sroa_idx, align 8, !tbaa.struct !165
  %m_cfm = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 3
  %63 = load <2 x float>, ptr %specs, align 8, !tbaa !137
  %64 = shufflevector <2 x float> %63, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  store <2 x float> %64, ptr %m_cfm, align 8, !tbaa !137
  %split = getelementptr inbounds %"struct.btSoftBody::Joint::Specs", ptr %specs, i64 0, i32 2
  %65 = load float, ptr %split, align 8, !tbaa !267
  %m_split = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call, i64 0, i32 5
  store float %65, ptr %m_split, align 8, !tbaa !269
  %icontrol = getelementptr inbounds %"struct.btSoftBody::AJoint::Specs", ptr %specs, i64 0, i32 2
  %66 = load ptr, ptr %icontrol, align 8, !tbaa !283
  %m_icontrol = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %call, i64 0, i32 2
  store ptr %66, ptr %m_icontrol, align 8, !tbaa !285
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 2
  %67 = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 3
  %68 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !117
  %cmp.i = icmp eq i32 %67, %68
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit

if.then.i:                                        ; preds = %_ZNK10btSoftBody4Body5xformEv.exit57
  %tobool.not.i.i = icmp eq i32 %67, 0
  %mul.i.i = shl nsw i32 %67, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %67, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 3
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %69 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %67, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %69, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %wide.trip.count.i.i.i = zext i32 %69 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 3
  %70 = icmp ult i32 %69, 4
  br i1 %70, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967292
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.3, %for.body.i.i.i ]
  %arrayidx.i.i.i109 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %71 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i = getelementptr inbounds ptr, ptr %71, i64 %indvars.iv.i.i.i
  %72 = load ptr, ptr %arrayidx3.i.i.i, align 8, !tbaa !219
  store ptr %72, ptr %arrayidx.i.i.i109, align 8, !tbaa !219
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i109.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %73 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.1 = getelementptr inbounds ptr, ptr %73, i64 %indvars.iv.next.i.i.i
  %74 = load ptr, ptr %arrayidx3.i.i.i.1, align 8, !tbaa !219
  store ptr %74, ptr %arrayidx.i.i.i109.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.1 = or i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i109.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %75 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.2 = getelementptr inbounds ptr, ptr %75, i64 %indvars.iv.next.i.i.i.1
  %76 = load ptr, ptr %arrayidx3.i.i.i.2, align 8, !tbaa !219
  store ptr %76, ptr %arrayidx.i.i.i109.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.2 = or i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i109.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %77 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.3 = getelementptr inbounds ptr, ptr %77, i64 %indvars.iv.next.i.i.i.2
  %78 = load ptr, ptr %arrayidx3.i.i.i.3, align 8, !tbaa !219
  store ptr %78, ptr %arrayidx.i.i.i109.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil
  %indvars.iv.i.i.i.epil = phi i64 [ %indvars.iv.next.i.i.i.epil, %for.body.i.i.i.epil ], [ %indvars.iv.i.i.i.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.i.i.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %arrayidx.i.i.i109.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.epil
  %79 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.epil = getelementptr inbounds ptr, ptr %79, i64 %indvars.iv.i.i.i.epil
  %80 = load ptr, ptr %arrayidx3.i.i.i.epil, align 8, !tbaa !219
  store ptr %80, ptr %arrayidx.i.i.i109.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.epil = add nuw nsw i64 %indvars.iv.i.i.i.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil, !llvm.loop !287

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %81 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !115
  %tobool.not.i10.i.i = icmp eq ptr %81, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 6
  %82 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %82, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %81)
  %.pre7.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i
  %.pre7.i = phi i32 [ %.pre7.pre.i, %if.then3.i.i.i ], [ %69, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i ]
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !114
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !115
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !117
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit: ; preds = %_ZNK10btSoftBody4Body5xformEv.exit57, %if.then.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i
  %83 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i ], [ %67, %if.then.i ], [ %67, %_ZNK10btSoftBody4Body5xformEv.exit57 ]
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %84 = load ptr, ptr %m_data.i, align 8, !tbaa !115
  %idxprom.i = sext i32 %83 to i64
  %arrayidx.i = getelementptr inbounds ptr, ptr %84, i64 %idxprom.i
  store ptr %call, ptr %arrayidx.i, align 8, !tbaa !219
  %inc.i = add nsw i32 %83, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !116
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody18appendAngularJointERKNS_6AJoint5SpecsENS_4BodyE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 8 dereferenceable(40) %specs, ptr nocapture noundef readonly byval(%"struct.btSoftBody::Body") align 8 %body) local_unnamed_addr #4 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %1 = load ptr, ptr %0, align 8, !tbaa !219
  tail call void @_ZN10btSoftBody18appendAngularJointERKNS_6AJoint5SpecsEPNS_7ClusterENS_4BodyE(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 8 dereferenceable(40) %specs, ptr noundef %1, ptr noundef nonnull byval(%"struct.btSoftBody::Body") align 8 %body)
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody18appendAngularJointERKNS_6AJoint5SpecsEPS_(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 8 dereferenceable(40) %specs, ptr nocapture noundef readonly %body) local_unnamed_addr #4 align 2 {
entry:
  %agg.tmp = alloca %"struct.btSoftBody::Body", align 8
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %1 = load ptr, ptr %0, align 8, !tbaa !219
  %m_data.i4 = getelementptr inbounds %class.btSoftBody, ptr %body, i64 0, i32 24, i32 5
  %2 = load ptr, ptr %m_data.i4, align 8, !tbaa !123
  %3 = load ptr, ptr %2, align 8, !tbaa !219
  store ptr %3, ptr %agg.tmp, align 8, !tbaa !272
  %m_rigid.i = getelementptr inbounds %"struct.btSoftBody::Body", ptr %agg.tmp, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rigid.i, i8 0, i64 16, i1 false)
  tail call void @_ZN10btSoftBody18appendAngularJointERKNS_6AJoint5SpecsEPNS_7ClusterENS_4BodyE(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 8 dereferenceable(40) %specs, ptr noundef %1, ptr noundef nonnull byval(%"struct.btSoftBody::Body") align 8 %agg.tmp)
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody8addForceERK9btVector3(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %force) local_unnamed_addr #11 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp4 = icmp sgt i32 %0, 0
  br i1 %cmp4, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %1 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %arrayidx5.i.i = getelementptr inbounds [4 x float], ptr %force, i64 0, i64 1
  %arrayidx10.i.i = getelementptr inbounds [4 x float], ptr %force, i64 0, i64 2
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZN10btSoftBody8addForceERK9btVector3i.exit, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %_ZN10btSoftBody8addForceERK9btVector3i.exit
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %_ZN10btSoftBody8addForceERK9btVector3i.exit ]
  %m_im.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv, i32 6
  %2 = load float, ptr %m_im.i, align 8, !tbaa !175
  %cmp.i = fcmp ogt float %2, 0.000000e+00
  br i1 %cmp.i, label %if.then.i, label %_ZN10btSoftBody8addForceERK9btVector3i.exit

if.then.i:                                        ; preds = %for.body
  %m_f.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv, i32 4
  %3 = load float, ptr %force, align 4, !tbaa !137
  %4 = load float, ptr %m_f.i, align 4, !tbaa !137
  %add.i.i = fadd float %3, %4
  store float %add.i.i, ptr %m_f.i, align 4, !tbaa !137
  %5 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %m_f.i, i64 0, i64 1
  %6 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %add8.i.i = fadd float %5, %6
  store float %add8.i.i, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %7 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds [4 x float], ptr %m_f.i, i64 0, i64 2
  %8 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %add13.i.i = fadd float %7, %8
  store float %add13.i.i, ptr %arrayidx12.i.i, align 4, !tbaa !137
  br label %_ZN10btSoftBody8addForceERK9btVector3i.exit

_ZN10btSoftBody8addForceERK9btVector3i.exit:      ; preds = %for.body, %if.then.i
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody8addForceERK9btVector3i(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %force, i32 noundef %node) local_unnamed_addr #13 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i = sext i32 %node to i64
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i, i32 6
  %1 = load float, ptr %m_im, align 8, !tbaa !175
  %cmp = fcmp ogt float %1, 0.000000e+00
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %m_f = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i, i32 4
  %2 = load float, ptr %force, align 4, !tbaa !137
  %3 = load float, ptr %m_f, align 4, !tbaa !137
  %add.i = fadd float %2, %3
  store float %add.i, ptr %m_f, align 4, !tbaa !137
  %arrayidx5.i = getelementptr inbounds [4 x float], ptr %force, i64 0, i64 1
  %4 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds [4 x float], ptr %m_f, i64 0, i64 1
  %5 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %add8.i = fadd float %4, %5
  store float %add8.i, ptr %arrayidx7.i, align 4, !tbaa !137
  %arrayidx10.i = getelementptr inbounds [4 x float], ptr %force, i64 0, i64 2
  %6 = load float, ptr %arrayidx10.i, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds [4 x float], ptr %m_f, i64 0, i64 2
  %7 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %6, %7
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody11addVelocityERK9btVector3(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %velocity) local_unnamed_addr #11 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp4 = icmp sgt i32 %0, 0
  br i1 %cmp4, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %1 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %arrayidx5.i.i = getelementptr inbounds [4 x float], ptr %velocity, i64 0, i64 1
  %arrayidx10.i.i = getelementptr inbounds [4 x float], ptr %velocity, i64 0, i64 2
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZN10btSoftBody11addVelocityERK9btVector3i.exit, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %_ZN10btSoftBody11addVelocityERK9btVector3i.exit
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %_ZN10btSoftBody11addVelocityERK9btVector3i.exit ]
  %m_im.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv, i32 6
  %2 = load float, ptr %m_im.i, align 8, !tbaa !175
  %cmp.i = fcmp ogt float %2, 0.000000e+00
  br i1 %cmp.i, label %if.then.i, label %_ZN10btSoftBody11addVelocityERK9btVector3i.exit

if.then.i:                                        ; preds = %for.body
  %m_v.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv, i32 3
  %3 = load float, ptr %velocity, align 4, !tbaa !137
  %4 = load float, ptr %m_v.i, align 4, !tbaa !137
  %add.i.i = fadd float %3, %4
  store float %add.i.i, ptr %m_v.i, align 4, !tbaa !137
  %5 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %m_v.i, i64 0, i64 1
  %6 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %add8.i.i = fadd float %5, %6
  store float %add8.i.i, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %7 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds [4 x float], ptr %m_v.i, i64 0, i64 2
  %8 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %add13.i.i = fadd float %7, %8
  store float %add13.i.i, ptr %arrayidx12.i.i, align 4, !tbaa !137
  br label %_ZN10btSoftBody11addVelocityERK9btVector3i.exit

_ZN10btSoftBody11addVelocityERK9btVector3i.exit:  ; preds = %for.body, %if.then.i
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody11addVelocityERK9btVector3i(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %velocity, i32 noundef %node) local_unnamed_addr #13 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i = sext i32 %node to i64
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i, i32 6
  %1 = load float, ptr %m_im, align 8, !tbaa !175
  %cmp = fcmp ogt float %1, 0.000000e+00
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i, i32 3
  %2 = load float, ptr %velocity, align 4, !tbaa !137
  %3 = load float, ptr %m_v, align 4, !tbaa !137
  %add.i = fadd float %2, %3
  store float %add.i, ptr %m_v, align 4, !tbaa !137
  %arrayidx5.i = getelementptr inbounds [4 x float], ptr %velocity, i64 0, i64 1
  %4 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds [4 x float], ptr %m_v, i64 0, i64 1
  %5 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %add8.i = fadd float %4, %5
  store float %add8.i, ptr %arrayidx7.i, align 4, !tbaa !137
  %arrayidx10.i = getelementptr inbounds [4 x float], ptr %velocity, i64 0, i64 2
  %6 = load float, ptr %arrayidx10.i, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds [4 x float], ptr %m_v, i64 0, i64 2
  %7 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %6, %7
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody11setVelocityERK9btVector3(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %velocity) local_unnamed_addr #10 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp8 = icmp sgt i32 %0, 0
  br i1 %cmp8, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %wide.trip.count = zext i32 %0 to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %1 = icmp eq i32 %0, 1
  br i1 %1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %if.end.1, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.1, %if.end.1 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.loopexit.unr-lcssa
  %2 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_im.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv.unr, i32 6
  %3 = load float, ptr %m_im.epil, align 8, !tbaa !175
  %cmp4.epil = fcmp ogt float %3, 0.000000e+00
  br i1 %cmp4.epil, label %if.then.epil, label %for.cond.cleanup

if.then.epil:                                     ; preds = %for.body.epil
  %m_v.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv.unr, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_v.epil, ptr noundef nonnull align 4 dereferenceable(16) %velocity, i64 16, i1 false), !tbaa.struct !163
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond.cleanup.loopexit.unr-lcssa, %if.then.epil, %for.body.epil, %entry
  ret void

for.body:                                         ; preds = %if.end.1, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.1, %if.end.1 ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.1, %if.end.1 ]
  %4 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 %indvars.iv, i32 6
  %5 = load float, ptr %m_im, align 8, !tbaa !175
  %cmp4 = fcmp ogt float %5, 0.000000e+00
  br i1 %cmp4, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 %indvars.iv, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_v, ptr noundef nonnull align 4 dereferenceable(16) %velocity, i64 16, i1 false), !tbaa.struct !163
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %indvars.iv.next = or i64 %indvars.iv, 1
  %6 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_im.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 %indvars.iv.next, i32 6
  %7 = load float, ptr %m_im.1, align 8, !tbaa !175
  %cmp4.1 = fcmp ogt float %7, 0.000000e+00
  br i1 %cmp4.1, label %if.then.1, label %if.end.1

if.then.1:                                        ; preds = %if.end
  %m_v.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 %indvars.iv.next, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_v.1, ptr noundef nonnull align 4 dereferenceable(16) %velocity, i64 16, i1 false), !tbaa.struct !163
  br label %if.end.1

if.end.1:                                         ; preds = %if.then.1, %if.end
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody7setMassEif(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %node, float noundef %mass) local_unnamed_addr #14 align 2 {
entry:
  %cmp = fcmp ogt float %mass, 0.000000e+00
  %div = fdiv float 1.000000e+00, %mass
  %cond = select i1 %cmp, float %div, float 0.000000e+00
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i = sext i32 %node to i64
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i, i32 6
  store float %cond, ptr %m_im, align 8, !tbaa !175
  %m_bUpdateRtCst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  store i8 1, ptr %m_bUpdateRtCst, align 4, !tbaa !147
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local noundef float @_ZNK10btSoftBody7getMassEi(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, i32 noundef %node) local_unnamed_addr #15 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i = sext i32 %node to i64
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i, i32 6
  %1 = load float, ptr %m_im, align 8, !tbaa !175
  %cmp = fcmp ogt float %1, 0.000000e+00
  %div = fdiv float 1.000000e+00, %1
  %cond = select i1 %cmp, float %div, float 0.000000e+00
  ret float %cond
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local noundef float @_ZNK10btSoftBody12getTotalMassEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #9 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp6 = icmp sgt i32 %0, 0
  br i1 %cmp6, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %1 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %wide.trip.count = zext i32 %0 to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body, %for.body.lr.ph
  %add.lcssa.ph = phi float [ undef, %for.body.lr.ph ], [ %add.1, %for.body ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.1, %for.body ]
  %mass.07.unr = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %add.1, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.loopexit.unr-lcssa
  %m_im.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.unr, i32 6
  %3 = load float, ptr %m_im.i.epil, align 8, !tbaa !175
  %cmp.i.epil = fcmp ogt float %3, 0.000000e+00
  %div.i.epil = fdiv float 1.000000e+00, %3
  %cond.i.epil = select i1 %cmp.i.epil, float %div.i.epil, float 0.000000e+00
  %add.epil = fadd float %mass.07.unr, %cond.i.epil
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body.epil, %for.cond.cleanup.loopexit.unr-lcssa, %entry
  %mass.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %add.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %add.epil, %for.body.epil ]
  ret float %mass.0.lcssa

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.1, %for.body ]
  %mass.07 = phi float [ 0.000000e+00, %for.body.lr.ph.new ], [ %add.1, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.1, %for.body ]
  %m_im.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv, i32 6
  %4 = load float, ptr %m_im.i, align 8, !tbaa !175
  %cmp.i = fcmp ogt float %4, 0.000000e+00
  %div.i = fdiv float 1.000000e+00, %4
  %cond.i = select i1 %cmp.i, float %div.i, float 0.000000e+00
  %add = fadd float %mass.07, %cond.i
  %indvars.iv.next = or i64 %indvars.iv, 1
  %m_im.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.next, i32 6
  %5 = load float, ptr %m_im.i.1, align 8, !tbaa !175
  %cmp.i.1 = fcmp ogt float %5, 0.000000e+00
  %div.i.1 = fdiv float 1.000000e+00, %5
  %cond.i.1 = select i1 %cmp.i.1, float %div.i.1, float 0.000000e+00
  %add.1 = fadd float %add, %cond.i.1
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody12setTotalMassEfb(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, float noundef %mass, i1 noundef zeroext %fromfaces) local_unnamed_addr #16 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  br i1 %fromfaces, label %for.cond.preheader, label %if.end

for.cond.preheader:                               ; preds = %entry
  %cmp89 = icmp sgt i32 %0, 0
  br i1 %cmp89, label %for.body.lr.ph, label %for.cond4.preheader

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %wide.trip.count = zext i32 %0 to i64
  %xtraiter = and i64 %wide.trip.count, 3
  %2 = icmp ult i32 %0, 4
  br i1 %2, label %for.cond4.preheader.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967292
  br label %for.body

for.cond4.preheader.loopexit.unr-lcssa:           ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond4.preheader, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond4.preheader.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.cond4.preheader.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.cond4.preheader.loopexit.unr-lcssa ]
  %m_im.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.epil, i32 6
  store float 0.000000e+00, ptr %m_im.epil, align 8, !tbaa !175
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond4.preheader, label %for.body.epil, !llvm.loop !288

for.cond4.preheader:                              ; preds = %for.cond4.preheader.loopexit.unr-lcssa, %for.body.epil, %for.cond.preheader
  %m_size.i74 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %3 = load i32, ptr %m_size.i74, align 4, !tbaa !96
  %cmp692 = icmp sgt i32 %3, 0
  br i1 %cmp692, label %for.body7.lr.ph, label %for.cond29.preheader

for.body7.lr.ph:                                  ; preds = %for.cond4.preheader
  %m_data.i75 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %4 = load ptr, ptr %m_data.i75, align 8, !tbaa !95
  %wide.trip.count106 = zext i32 %3 to i64
  br label %for.body7

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv, i32 6
  store float 0.000000e+00, ptr %m_im, align 8, !tbaa !175
  %indvars.iv.next = or i64 %indvars.iv, 1
  %m_im.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.next, i32 6
  store float 0.000000e+00, ptr %m_im.1, align 8, !tbaa !175
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %m_im.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.next.1, i32 6
  store float 0.000000e+00, ptr %m_im.2, align 8, !tbaa !175
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %m_im.3 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.next.2, i32 6
  store float 0.000000e+00, ptr %m_im.3, align 8, !tbaa !175
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.cond4.preheader.loopexit.unr-lcssa, label %for.body

for.cond29.preheader:                             ; preds = %for.body7, %for.cond4.preheader
  br i1 %cmp89, label %for.body33.lr.ph, label %for.end56

for.body33.lr.ph:                                 ; preds = %for.cond29.preheader
  %m_data.i79 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %5 = load ptr, ptr %m_data.i79, align 8, !tbaa !87
  %wide.trip.count111 = zext i32 %0 to i64
  %min.iters.check = icmp ult i32 %0, 4
  br i1 %min.iters.check, label %for.body33.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body33.lr.ph
  %n.vec = and i64 %wide.trip.count111, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %6 = or i64 %index, 1
  %7 = or i64 %index, 2
  %8 = or i64 %index, 3
  %9 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 %index, i32 6
  %10 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 %6, i32 6
  %11 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 %7, i32 6
  %12 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 %8, i32 6
  %13 = load float, ptr %9, align 8, !tbaa !175
  %14 = load float, ptr %10, align 8, !tbaa !175
  %15 = load float, ptr %11, align 8, !tbaa !175
  %16 = load float, ptr %12, align 8, !tbaa !175
  %17 = insertelement <4 x float> poison, float %13, i64 0
  %18 = insertelement <4 x float> %17, float %14, i64 1
  %19 = insertelement <4 x float> %18, float %15, i64 2
  %20 = insertelement <4 x float> %19, float %16, i64 3
  %21 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %20
  %22 = extractelement <4 x float> %21, i64 0
  store float %22, ptr %9, align 8, !tbaa !175
  %23 = extractelement <4 x float> %21, i64 1
  store float %23, ptr %10, align 8, !tbaa !175
  %24 = extractelement <4 x float> %21, i64 2
  store float %24, ptr %11, align 8, !tbaa !175
  %25 = extractelement <4 x float> %21, i64 3
  store float %25, ptr %12, align 8, !tbaa !175
  %index.next = add nuw i64 %index, 4
  %26 = icmp eq i64 %index.next, %n.vec
  br i1 %26, label %middle.block, label %vector.body, !llvm.loop !289

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count111
  br i1 %cmp.n, label %if.end, label %for.body33.preheader

for.body33.preheader:                             ; preds = %for.body33.lr.ph, %middle.block
  %indvars.iv108.ph = phi i64 [ 0, %for.body33.lr.ph ], [ %n.vec, %middle.block ]
  br label %for.body33

for.body7:                                        ; preds = %for.body7.lr.ph, %for.body7
  %indvars.iv103 = phi i64 [ 0, %for.body7.lr.ph ], [ %indvars.iv.next104, %for.body7 ]
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %4, i64 %indvars.iv103, i32 1
  %27 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %27, i64 0, i32 1
  %arrayidx11 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %4, i64 %indvars.iv103, i32 1, i64 1
  %28 = load ptr, ptr %arrayidx11, align 8, !tbaa !219
  %m_x12 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %28, i64 0, i32 1
  %arrayidx14 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %4, i64 %indvars.iv103, i32 1, i64 2
  %29 = load ptr, ptr %arrayidx14, align 8, !tbaa !219
  %m_x15 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 1
  %30 = load float, ptr %m_x12, align 4, !tbaa !137
  %31 = load float, ptr %m_x, align 4, !tbaa !137
  %sub.i.i = fsub float %30, %31
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %28, i64 0, i32 1, i32 0, i64 1
  %32 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %27, i64 0, i32 1, i32 0, i64 1
  %33 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %sub8.i.i = fsub float %32, %33
  %arrayidx11.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %28, i64 0, i32 1, i32 0, i64 2
  %34 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %arrayidx13.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %27, i64 0, i32 1, i32 0, i64 2
  %35 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %34, %35
  %36 = load float, ptr %m_x15, align 4, !tbaa !137
  %sub.i7.i = fsub float %36, %31
  %arrayidx5.i8.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 1, i32 0, i64 1
  %37 = load float, ptr %arrayidx5.i8.i, align 4, !tbaa !137
  %sub8.i10.i = fsub float %37, %33
  %arrayidx11.i11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 1, i32 0, i64 2
  %38 = load float, ptr %arrayidx11.i11.i, align 4, !tbaa !137
  %sub14.i13.i = fsub float %38, %35
  %39 = fneg float %sub14.i.i
  %neg.i.i.i = fmul float %sub8.i10.i, %39
  %40 = tail call float @llvm.fmuladd.f32(float %sub8.i.i, float %sub14.i13.i, float %neg.i.i.i)
  %41 = fneg float %sub.i.i
  %neg19.i.i.i = fmul float %sub14.i13.i, %41
  %42 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %sub.i7.i, float %neg19.i.i.i)
  %43 = fneg float %sub8.i.i
  %neg30.i.i.i = fmul float %sub.i7.i, %43
  %44 = tail call float @llvm.fmuladd.f32(float %sub.i.i, float %sub8.i10.i, float %neg30.i.i.i)
  %mul8.i.i.i.i = fmul float %42, %42
  %45 = tail call float @llvm.fmuladd.f32(float %40, float %40, float %mul8.i.i.i.i)
  %46 = tail call float @llvm.fmuladd.f32(float %44, float %44, float %45)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %46)
  %m_im22 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %27, i64 0, i32 6
  %47 = load float, ptr %m_im22, align 8, !tbaa !175
  %add = fadd float %sqrt.i.i, %47
  store float %add, ptr %m_im22, align 8, !tbaa !175
  %m_im22.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %28, i64 0, i32 6
  %48 = load float, ptr %m_im22.1, align 8, !tbaa !175
  %add.1 = fadd float %sqrt.i.i, %48
  store float %add.1, ptr %m_im22.1, align 8, !tbaa !175
  %m_im22.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 6
  %49 = load float, ptr %m_im22.2, align 8, !tbaa !175
  %add.2 = fadd float %sqrt.i.i, %49
  store float %add.2, ptr %m_im22.2, align 8, !tbaa !175
  %indvars.iv.next104 = add nuw nsw i64 %indvars.iv103, 1
  %exitcond107.not = icmp eq i64 %indvars.iv.next104, %wide.trip.count106
  br i1 %exitcond107.not, label %for.cond29.preheader, label %for.body7

for.body33:                                       ; preds = %for.body33.preheader, %for.body33
  %indvars.iv108 = phi i64 [ %indvars.iv.next109, %for.body33 ], [ %indvars.iv108.ph, %for.body33.preheader ]
  %m_im36 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 %indvars.iv108, i32 6
  %50 = load float, ptr %m_im36, align 8, !tbaa !175
  %div = fdiv float 1.000000e+00, %50
  store float %div, ptr %m_im36, align 8, !tbaa !175
  %indvars.iv.next109 = add nuw nsw i64 %indvars.iv108, 1
  %exitcond112.not = icmp eq i64 %indvars.iv.next109, %wide.trip.count111
  br i1 %exitcond112.not, label %if.end, label %for.body33, !llvm.loop !290

if.end:                                           ; preds = %for.body33, %middle.block, %entry
  %cmp6.i = icmp sgt i32 %0, 0
  br i1 %cmp6.i, label %for.body.lr.ph.i, label %for.end56

for.body.lr.ph.i:                                 ; preds = %if.end
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %51 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !87
  %wide.trip.count.i = zext i32 %0 to i64
  %xtraiter133 = and i64 %wide.trip.count.i, 1
  %52 = icmp eq i32 %0, 1
  br i1 %52, label %_ZNK10btSoftBody12getTotalMassEv.exit.unr-lcssa, label %for.body.lr.ph.i.new

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter137 = and i64 %wide.trip.count.i, 4294967294
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.1, %for.body.i ]
  %mass.07.i = phi float [ 0.000000e+00, %for.body.lr.ph.i.new ], [ %add.i.1, %for.body.i ]
  %niter138 = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter138.next.1, %for.body.i ]
  %m_im.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %51, i64 %indvars.iv.i, i32 6
  %53 = load float, ptr %m_im.i.i, align 8, !tbaa !175
  %cmp.i.i = fcmp ogt float %53, 0.000000e+00
  %div.i.i = fdiv float 1.000000e+00, %53
  %cond.i.i = select i1 %cmp.i.i, float %div.i.i, float 0.000000e+00
  %add.i = fadd float %mass.07.i, %cond.i.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %m_im.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %51, i64 %indvars.iv.next.i, i32 6
  %54 = load float, ptr %m_im.i.i.1, align 8, !tbaa !175
  %cmp.i.i.1 = fcmp ogt float %54, 0.000000e+00
  %div.i.i.1 = fdiv float 1.000000e+00, %54
  %cond.i.i.1 = select i1 %cmp.i.i.1, float %div.i.i.1, float 0.000000e+00
  %add.i.1 = fadd float %add.i, %cond.i.i.1
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %niter138.next.1 = add i64 %niter138, 2
  %niter138.ncmp.1 = icmp eq i64 %niter138.next.1, %unroll_iter137
  br i1 %niter138.ncmp.1, label %_ZNK10btSoftBody12getTotalMassEv.exit.unr-lcssa, label %for.body.i

_ZNK10btSoftBody12getTotalMassEv.exit.unr-lcssa:  ; preds = %for.body.i, %for.body.lr.ph.i
  %add.i.lcssa.ph = phi float [ undef, %for.body.lr.ph.i ], [ %add.i.1, %for.body.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i.1, %for.body.i ]
  %mass.07.i.unr = phi float [ 0.000000e+00, %for.body.lr.ph.i ], [ %add.i.1, %for.body.i ]
  %lcmp.mod135.not = icmp eq i64 %xtraiter133, 0
  br i1 %lcmp.mod135.not, label %_ZNK10btSoftBody12getTotalMassEv.exit, label %for.body.i.epil

for.body.i.epil:                                  ; preds = %_ZNK10btSoftBody12getTotalMassEv.exit.unr-lcssa
  %m_im.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %51, i64 %indvars.iv.i.unr, i32 6
  %55 = load float, ptr %m_im.i.i.epil, align 8, !tbaa !175
  %cmp.i.i.epil = fcmp ogt float %55, 0.000000e+00
  %div.i.i.epil = fdiv float 1.000000e+00, %55
  %cond.i.i.epil = select i1 %cmp.i.i.epil, float %div.i.i.epil, float 0.000000e+00
  %add.i.epil = fadd float %mass.07.i.unr, %cond.i.i.epil
  br label %_ZNK10btSoftBody12getTotalMassEv.exit

_ZNK10btSoftBody12getTotalMassEv.exit:            ; preds = %_ZNK10btSoftBody12getTotalMassEv.exit.unr-lcssa, %for.body.i.epil
  %add.i.lcssa = phi float [ %add.i.lcssa.ph, %_ZNK10btSoftBody12getTotalMassEv.exit.unr-lcssa ], [ %add.i.epil, %for.body.i.epil ]
  br i1 %cmp6.i, label %for.body49.lr.ph, label %for.end56

for.body49.lr.ph:                                 ; preds = %_ZNK10btSoftBody12getTotalMassEv.exit
  %div44 = fdiv float 1.000000e+00, %add.i.lcssa
  %mul = fmul float %div44, %mass
  %m_data.i86 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %56 = load ptr, ptr %m_data.i86, align 8, !tbaa !87
  %wide.trip.count116 = zext i32 %0 to i64
  %min.iters.check124 = icmp ult i32 %0, 4
  br i1 %min.iters.check124, label %for.body49.preheader, label %vector.ph125

vector.ph125:                                     ; preds = %for.body49.lr.ph
  %n.vec127 = and i64 %wide.trip.count.i, 4294967292
  %broadcast.splatinsert = insertelement <4 x float> poison, float %mul, i64 0
  %broadcast.splat = shufflevector <4 x float> %broadcast.splatinsert, <4 x float> poison, <4 x i32> zeroinitializer
  br label %vector.body130

vector.body130:                                   ; preds = %vector.body130, %vector.ph125
  %index131 = phi i64 [ 0, %vector.ph125 ], [ %index.next132, %vector.body130 ]
  %57 = or i64 %index131, 1
  %58 = or i64 %index131, 2
  %59 = or i64 %index131, 3
  %60 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %56, i64 %index131, i32 6
  %61 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %56, i64 %57, i32 6
  %62 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %56, i64 %58, i32 6
  %63 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %56, i64 %59, i32 6
  %64 = load float, ptr %60, align 8, !tbaa !175
  %65 = load float, ptr %61, align 8, !tbaa !175
  %66 = load float, ptr %62, align 8, !tbaa !175
  %67 = load float, ptr %63, align 8, !tbaa !175
  %68 = insertelement <4 x float> poison, float %64, i64 0
  %69 = insertelement <4 x float> %68, float %65, i64 1
  %70 = insertelement <4 x float> %69, float %66, i64 2
  %71 = insertelement <4 x float> %70, float %67, i64 3
  %72 = fdiv <4 x float> %71, %broadcast.splat
  %73 = extractelement <4 x float> %72, i64 0
  store float %73, ptr %60, align 8, !tbaa !175
  %74 = extractelement <4 x float> %72, i64 1
  store float %74, ptr %61, align 8, !tbaa !175
  %75 = extractelement <4 x float> %72, i64 2
  store float %75, ptr %62, align 8, !tbaa !175
  %76 = extractelement <4 x float> %72, i64 3
  store float %76, ptr %63, align 8, !tbaa !175
  %index.next132 = add nuw i64 %index131, 4
  %77 = icmp eq i64 %index.next132, %n.vec127
  br i1 %77, label %middle.block122, label %vector.body130, !llvm.loop !291

middle.block122:                                  ; preds = %vector.body130
  %cmp.n129 = icmp eq i64 %n.vec127, %wide.trip.count.i
  br i1 %cmp.n129, label %for.end56, label %for.body49.preheader

for.body49.preheader:                             ; preds = %for.body49.lr.ph, %middle.block122
  %indvars.iv113.ph = phi i64 [ 0, %for.body49.lr.ph ], [ %n.vec127, %middle.block122 ]
  br label %for.body49

for.body49:                                       ; preds = %for.body49.preheader, %for.body49
  %indvars.iv113 = phi i64 [ %indvars.iv.next114, %for.body49 ], [ %indvars.iv113.ph, %for.body49.preheader ]
  %m_im52 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %56, i64 %indvars.iv113, i32 6
  %78 = load float, ptr %m_im52, align 8, !tbaa !175
  %div53 = fdiv float %78, %mul
  store float %div53, ptr %m_im52, align 8, !tbaa !175
  %indvars.iv.next114 = add nuw nsw i64 %indvars.iv113, 1
  %exitcond117.not = icmp eq i64 %indvars.iv.next114, %wide.trip.count116
  br i1 %exitcond117.not, label %for.end56, label %for.body49, !llvm.loop !292

for.end56:                                        ; preds = %for.body49, %middle.block122, %for.cond29.preheader, %if.end, %_ZNK10btSoftBody12getTotalMassEv.exit
  %m_bUpdateRtCst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  store i8 1, ptr %m_bUpdateRtCst, align 4, !tbaa !147
  ret void
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody15setTotalDensityEf(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, float noundef %density) local_unnamed_addr #16 align 2 {
entry:
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  %cmp.i = icmp sgt i32 %0, 0
  br i1 %cmp.i, label %if.then.i, label %_ZNK10btSoftBody9getVolumeEv.exit

if.then.i:                                        ; preds = %entry
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %1 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 1
  %org.sroa.0.0.copyload.i = load float, ptr %m_x.i, align 8, !tbaa.struct !163
  %org.sroa.6.0.m_x.sroa_idx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 1, i32 0, i64 1
  %org.sroa.6.0.copyload.i = load float, ptr %org.sroa.6.0.m_x.sroa_idx.i, align 4, !tbaa.struct !293
  %org.sroa.9.0.m_x.sroa_idx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 1, i32 0, i64 2
  %org.sroa.9.0.copyload.i = load float, ptr %org.sroa.9.0.m_x.sroa_idx.i, align 8, !tbaa.struct !165
  %m_size.i32.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %2 = load i32, ptr %m_size.i32.i, align 4, !tbaa !96
  %cmp566.i = icmp sgt i32 %2, 0
  br i1 %cmp566.i, label %for.body.lr.ph.i, label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.then.i
  %m_data.i33.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %3 = load ptr, ptr %m_data.i33.i, align 8, !tbaa !95
  %wide.trip.count.i = zext i32 %2 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %vol.068.i = phi float [ 0.000000e+00, %for.body.lr.ph.i ], [ %add.i, %for.body.i ]
  %m_n.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 %indvars.iv.i, i32 1
  %4 = load ptr, ptr %m_n.i, align 8, !tbaa !219
  %m_x8.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1
  %5 = load float, ptr %m_x8.i, align 4, !tbaa !137
  %sub.i.i = fsub float %5, %org.sroa.0.0.copyload.i
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 1
  %6 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %sub8.i.i = fsub float %6, %org.sroa.6.0.copyload.i
  %arrayidx11.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 2
  %7 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %7, %org.sroa.9.0.copyload.i
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 %indvars.iv.i, i32 1, i64 1
  %8 = load ptr, ptr %arrayidx13.i, align 8, !tbaa !219
  %m_x14.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %8, i64 0, i32 1
  %9 = load float, ptr %m_x14.i, align 4, !tbaa !137
  %sub.i34.i = fsub float %9, %org.sroa.0.0.copyload.i
  %arrayidx5.i35.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %8, i64 0, i32 1, i32 0, i64 1
  %10 = load float, ptr %arrayidx5.i35.i, align 4, !tbaa !137
  %sub8.i37.i = fsub float %10, %org.sroa.6.0.copyload.i
  %arrayidx11.i38.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %8, i64 0, i32 1, i32 0, i64 2
  %11 = load float, ptr %arrayidx11.i38.i, align 4, !tbaa !137
  %sub14.i40.i = fsub float %11, %org.sroa.9.0.copyload.i
  %arrayidx19.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 %indvars.iv.i, i32 1, i64 2
  %12 = load ptr, ptr %arrayidx19.i, align 8, !tbaa !219
  %m_x20.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1
  %13 = load float, ptr %m_x20.i, align 4, !tbaa !137
  %sub.i46.i = fsub float %13, %org.sroa.0.0.copyload.i
  %arrayidx5.i47.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1, i32 0, i64 1
  %14 = load float, ptr %arrayidx5.i47.i, align 4, !tbaa !137
  %sub8.i49.i = fsub float %14, %org.sroa.6.0.copyload.i
  %arrayidx11.i50.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1, i32 0, i64 2
  %15 = load float, ptr %arrayidx11.i50.i, align 4, !tbaa !137
  %sub14.i52.i = fsub float %15, %org.sroa.9.0.copyload.i
  %16 = fneg float %sub14.i40.i
  %neg.i.i.i = fmul float %sub8.i49.i, %16
  %17 = tail call float @llvm.fmuladd.f32(float %sub8.i37.i, float %sub14.i52.i, float %neg.i.i.i)
  %18 = fneg float %sub.i34.i
  %neg19.i.i.i = fmul float %sub14.i52.i, %18
  %19 = tail call float @llvm.fmuladd.f32(float %sub14.i40.i, float %sub.i46.i, float %neg19.i.i.i)
  %20 = fneg float %sub8.i37.i
  %neg30.i.i.i = fmul float %sub.i46.i, %20
  %21 = tail call float @llvm.fmuladd.f32(float %sub.i34.i, float %sub8.i49.i, float %neg30.i.i.i)
  %mul8.i.i.i = fmul float %sub8.i.i, %19
  %22 = tail call float @llvm.fmuladd.f32(float %sub.i.i, float %17, float %mul8.i.i.i)
  %23 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %21, float %22)
  %add.i = fadd float %vol.068.i, %23
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i, %if.then.i
  %vol.0.lcssa.i = phi float [ 0.000000e+00, %if.then.i ], [ %add.i, %for.body.i ]
  %div.i = fdiv float %vol.0.lcssa.i, 6.000000e+00
  br label %_ZNK10btSoftBody9getVolumeEv.exit

_ZNK10btSoftBody9getVolumeEv.exit:                ; preds = %entry, %for.end.i
  %vol.1.i = phi float [ %div.i, %for.end.i ], [ 0.000000e+00, %entry ]
  %mul = fmul float %vol.1.i, %density
  tail call void @_ZN10btSoftBody12setTotalMassEfb(ptr noundef nonnull align 8 dereferenceable(1496) %this, float noundef %mul, i1 noundef zeroext true)
  ret void
}

; Function Attrs: nofree nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local noundef float @_ZNK10btSoftBody9getVolumeEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #17 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp = icmp sgt i32 %0, 0
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 1
  %org.sroa.0.0.copyload = load float, ptr %m_x, align 8, !tbaa.struct !163
  %org.sroa.6.0.m_x.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 1, i32 0, i64 1
  %org.sroa.6.0.copyload = load float, ptr %org.sroa.6.0.m_x.sroa_idx, align 4, !tbaa.struct !293
  %org.sroa.9.0.m_x.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 1, i32 0, i64 2
  %org.sroa.9.0.copyload = load float, ptr %org.sroa.9.0.m_x.sroa_idx, align 8, !tbaa.struct !165
  %m_size.i32 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %2 = load i32, ptr %m_size.i32, align 4, !tbaa !96
  %cmp566 = icmp sgt i32 %2, 0
  br i1 %cmp566, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.then
  %m_data.i33 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %3 = load ptr, ptr %m_data.i33, align 8, !tbaa !95
  %wide.trip.count = zext i32 %2 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %vol.068 = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %add, %for.body ]
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 %indvars.iv, i32 1
  %4 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_x8 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1
  %5 = load float, ptr %m_x8, align 4, !tbaa !137
  %sub.i = fsub float %5, %org.sroa.0.0.copyload
  %arrayidx5.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 1
  %6 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %sub8.i = fsub float %6, %org.sroa.6.0.copyload
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 2
  %7 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %sub14.i = fsub float %7, %org.sroa.9.0.copyload
  %arrayidx13 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 %indvars.iv, i32 1, i64 1
  %8 = load ptr, ptr %arrayidx13, align 8, !tbaa !219
  %m_x14 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %8, i64 0, i32 1
  %9 = load float, ptr %m_x14, align 4, !tbaa !137
  %sub.i34 = fsub float %9, %org.sroa.0.0.copyload
  %arrayidx5.i35 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %8, i64 0, i32 1, i32 0, i64 1
  %10 = load float, ptr %arrayidx5.i35, align 4, !tbaa !137
  %sub8.i37 = fsub float %10, %org.sroa.6.0.copyload
  %arrayidx11.i38 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %8, i64 0, i32 1, i32 0, i64 2
  %11 = load float, ptr %arrayidx11.i38, align 4, !tbaa !137
  %sub14.i40 = fsub float %11, %org.sroa.9.0.copyload
  %arrayidx19 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 %indvars.iv, i32 1, i64 2
  %12 = load ptr, ptr %arrayidx19, align 8, !tbaa !219
  %m_x20 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1
  %13 = load float, ptr %m_x20, align 4, !tbaa !137
  %sub.i46 = fsub float %13, %org.sroa.0.0.copyload
  %arrayidx5.i47 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1, i32 0, i64 1
  %14 = load float, ptr %arrayidx5.i47, align 4, !tbaa !137
  %sub8.i49 = fsub float %14, %org.sroa.6.0.copyload
  %arrayidx11.i50 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1, i32 0, i64 2
  %15 = load float, ptr %arrayidx11.i50, align 4, !tbaa !137
  %sub14.i52 = fsub float %15, %org.sroa.9.0.copyload
  %16 = fneg float %sub14.i40
  %neg.i.i = fmul float %sub8.i49, %16
  %17 = tail call float @llvm.fmuladd.f32(float %sub8.i37, float %sub14.i52, float %neg.i.i)
  %18 = fneg float %sub.i34
  %neg19.i.i = fmul float %sub14.i52, %18
  %19 = tail call float @llvm.fmuladd.f32(float %sub14.i40, float %sub.i46, float %neg19.i.i)
  %20 = fneg float %sub8.i37
  %neg30.i.i = fmul float %sub.i46, %20
  %21 = tail call float @llvm.fmuladd.f32(float %sub.i34, float %sub8.i49, float %neg30.i.i)
  %mul8.i.i = fmul float %sub8.i, %19
  %22 = tail call float @llvm.fmuladd.f32(float %sub.i, float %17, float %mul8.i.i)
  %23 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %21, float %22)
  %add = fadd float %vol.068, %23
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %if.then
  %vol.0.lcssa = phi float [ 0.000000e+00, %if.then ], [ %add, %for.body ]
  %div = fdiv float %vol.0.lcssa, 6.000000e+00
  br label %if.end

if.end:                                           ; preds = %for.end, %entry
  %vol.1 = phi float [ %div, %for.end ], [ 0.000000e+00, %entry ]
  ret float %vol.1
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody13setVolumeMassEf(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, float noundef %mass) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %or.cond = icmp slt i32 %0, 1
  br i1 %or.cond, label %for.cond12.preheader, label %invoke.cont3

invoke.cont3:                                     ; preds = %entry
  %conv.i.i.i.i = zext i32 %0 to i64
  %mul.i.i.i.i = shl nuw nsw i64 %conv.i.i.i.i, 2
  %call.i.i.i.i96 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  tail call void @llvm.memset.p0.i64(ptr align 4 %call.i.i.i.i96, i8 0, i64 %mul.i.i.i.i, i1 false), !tbaa !137
  %.pre = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp146 = icmp sgt i32 %.pre, 0
  br i1 %cmp146, label %for.body.lr.ph, label %for.cond12.preheader

for.body.lr.ph:                                   ; preds = %invoke.cont3
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %wide.trip.count = zext i32 %.pre to i64
  %xtraiter = and i64 %wide.trip.count, 3
  %2 = icmp ult i32 %.pre, 4
  br i1 %2, label %for.cond12.preheader.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967292
  br label %for.body

for.cond12.preheader.loopexit.unr-lcssa:          ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond12.preheader, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond12.preheader.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.cond12.preheader.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.cond12.preheader.loopexit.unr-lcssa ]
  %m_im.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.epil, i32 6
  store float 0.000000e+00, ptr %m_im.epil, align 8, !tbaa !175
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond12.preheader, label %for.body.epil, !llvm.loop !294

for.cond12.preheader:                             ; preds = %for.cond12.preheader.loopexit.unr-lcssa, %for.body.epil, %entry, %invoke.cont3
  %cmp146171 = phi i1 [ false, %invoke.cont3 ], [ false, %entry ], [ %cmp146, %for.body.epil ], [ %cmp146, %for.cond12.preheader.loopexit.unr-lcssa ]
  %ranks.sroa.15138.1170 = phi ptr [ %call.i.i.i.i96, %invoke.cont3 ], [ null, %entry ], [ %call.i.i.i.i96, %for.body.epil ], [ %call.i.i.i.i96, %for.cond12.preheader.loopexit.unr-lcssa ]
  %3 = phi i32 [ %.pre, %invoke.cont3 ], [ %0, %entry ], [ %.pre, %for.body.epil ], [ %.pre, %for.cond12.preheader.loopexit.unr-lcssa ]
  %m_size.i98 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 2
  %4 = load i32, ptr %m_size.i98, align 4, !tbaa !100
  %cmp16149 = icmp sgt i32 %4, 0
  br i1 %cmp16149, label %for.body18.lr.ph, label %for.cond48.preheader

for.body18.lr.ph:                                 ; preds = %for.cond12.preheader
  %m_data.i99 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  %5 = load ptr, ptr %m_data.i99, align 8, !tbaa !99
  %m_data.i102 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %6 = load ptr, ptr %m_data.i102, align 8, !tbaa !87
  %sub.ptr.rhs.cast = ptrtoint ptr %6 to i64
  %wide.trip.count161 = zext i32 %4 to i64
  br label %for.body18

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv, i32 6
  store float 0.000000e+00, ptr %m_im, align 8, !tbaa !175
  %indvars.iv.next = or i64 %indvars.iv, 1
  %m_im.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.next, i32 6
  store float 0.000000e+00, ptr %m_im.1, align 8, !tbaa !175
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %m_im.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.next.1, i32 6
  store float 0.000000e+00, ptr %m_im.2, align 8, !tbaa !175
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %m_im.3 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.next.2, i32 6
  store float 0.000000e+00, ptr %m_im.3, align 8, !tbaa !175
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.cond12.preheader.loopexit.unr-lcssa, label %for.body

for.cond48.preheader:                             ; preds = %for.body18, %for.cond12.preheader
  br i1 %cmp146171, label %for.body55.lr.ph, label %_ZN10btSoftBody12setTotalMassEfb.exit

for.body55.lr.ph:                                 ; preds = %for.cond48.preheader
  %m_data.i109 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %7 = load ptr, ptr %m_data.i109, align 8, !tbaa !87
  %wide.trip.count166 = zext i32 %3 to i64
  %xtraiter172 = and i64 %wide.trip.count166, 1
  %8 = icmp eq i32 %3, 1
  br i1 %8, label %for.cond.cleanup54.unr-lcssa, label %for.body55.lr.ph.new

for.body55.lr.ph.new:                             ; preds = %for.body55.lr.ph
  %unroll_iter175 = and i64 %wide.trip.count166, 4294967294
  br label %for.body55

for.body18:                                       ; preds = %for.body18.lr.ph, %for.body18
  %indvars.iv158 = phi i64 [ 0, %for.body18.lr.ph ], [ %indvars.iv.next159, %for.body18 ]
  %m_rv = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %5, i64 %indvars.iv158, i32 2
  %9 = load float, ptr %m_rv, align 8, !tbaa !242
  %10 = tail call float @llvm.fabs.f32(float %9)
  %arrayidx = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %5, i64 %indvars.iv158, i32 1, i64 0
  %11 = load ptr, ptr %arrayidx, align 8, !tbaa !219
  %m_im30 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %11, i64 0, i32 6
  %12 = load float, ptr %m_im30, align 8, !tbaa !175
  %add = fadd float %10, %12
  store float %add, ptr %m_im30, align 8, !tbaa !175
  %sub.ptr.lhs.cast = ptrtoint ptr %11 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 120
  %sext = shl i64 %sub.ptr.div, 32
  %idxprom.i104 = ashr exact i64 %sext, 32
  %arrayidx.i105 = getelementptr inbounds float, ptr %ranks.sroa.15138.1170, i64 %idxprom.i104
  %13 = load float, ptr %arrayidx.i105, align 4, !tbaa !137
  %add39 = fadd float %13, 1.000000e+00
  store float %add39, ptr %arrayidx.i105, align 4, !tbaa !137
  %14 = load float, ptr %m_rv, align 8, !tbaa !242
  %15 = tail call float @llvm.fabs.f32(float %14)
  %arrayidx.1 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %5, i64 %indvars.iv158, i32 1, i64 1
  %16 = load ptr, ptr %arrayidx.1, align 8, !tbaa !219
  %m_im30.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %16, i64 0, i32 6
  %17 = load float, ptr %m_im30.1, align 8, !tbaa !175
  %add.1 = fadd float %15, %17
  store float %add.1, ptr %m_im30.1, align 8, !tbaa !175
  %sub.ptr.lhs.cast.1 = ptrtoint ptr %16 to i64
  %sub.ptr.sub.1 = sub i64 %sub.ptr.lhs.cast.1, %sub.ptr.rhs.cast
  %sub.ptr.div.1 = sdiv exact i64 %sub.ptr.sub.1, 120
  %sext.1 = shl i64 %sub.ptr.div.1, 32
  %idxprom.i104.1 = ashr exact i64 %sext.1, 32
  %arrayidx.i105.1 = getelementptr inbounds float, ptr %ranks.sroa.15138.1170, i64 %idxprom.i104.1
  %18 = load float, ptr %arrayidx.i105.1, align 4, !tbaa !137
  %add39.1 = fadd float %18, 1.000000e+00
  store float %add39.1, ptr %arrayidx.i105.1, align 4, !tbaa !137
  %19 = load float, ptr %m_rv, align 8, !tbaa !242
  %20 = tail call float @llvm.fabs.f32(float %19)
  %arrayidx.2 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %5, i64 %indvars.iv158, i32 1, i64 2
  %21 = load ptr, ptr %arrayidx.2, align 8, !tbaa !219
  %m_im30.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 0, i32 6
  %22 = load float, ptr %m_im30.2, align 8, !tbaa !175
  %add.2 = fadd float %20, %22
  store float %add.2, ptr %m_im30.2, align 8, !tbaa !175
  %sub.ptr.lhs.cast.2 = ptrtoint ptr %21 to i64
  %sub.ptr.sub.2 = sub i64 %sub.ptr.lhs.cast.2, %sub.ptr.rhs.cast
  %sub.ptr.div.2 = sdiv exact i64 %sub.ptr.sub.2, 120
  %sext.2 = shl i64 %sub.ptr.div.2, 32
  %idxprom.i104.2 = ashr exact i64 %sext.2, 32
  %arrayidx.i105.2 = getelementptr inbounds float, ptr %ranks.sroa.15138.1170, i64 %idxprom.i104.2
  %23 = load float, ptr %arrayidx.i105.2, align 4, !tbaa !137
  %add39.2 = fadd float %23, 1.000000e+00
  store float %add39.2, ptr %arrayidx.i105.2, align 4, !tbaa !137
  %24 = load float, ptr %m_rv, align 8, !tbaa !242
  %25 = tail call float @llvm.fabs.f32(float %24)
  %arrayidx.3 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %5, i64 %indvars.iv158, i32 1, i64 3
  %26 = load ptr, ptr %arrayidx.3, align 8, !tbaa !219
  %m_im30.3 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %26, i64 0, i32 6
  %27 = load float, ptr %m_im30.3, align 8, !tbaa !175
  %add.3 = fadd float %25, %27
  store float %add.3, ptr %m_im30.3, align 8, !tbaa !175
  %sub.ptr.lhs.cast.3 = ptrtoint ptr %26 to i64
  %sub.ptr.sub.3 = sub i64 %sub.ptr.lhs.cast.3, %sub.ptr.rhs.cast
  %sub.ptr.div.3 = sdiv exact i64 %sub.ptr.sub.3, 120
  %sext.3 = shl i64 %sub.ptr.div.3, 32
  %idxprom.i104.3 = ashr exact i64 %sext.3, 32
  %arrayidx.i105.3 = getelementptr inbounds float, ptr %ranks.sroa.15138.1170, i64 %idxprom.i104.3
  %28 = load float, ptr %arrayidx.i105.3, align 4, !tbaa !137
  %add39.3 = fadd float %28, 1.000000e+00
  store float %add39.3, ptr %arrayidx.i105.3, align 4, !tbaa !137
  %indvars.iv.next159 = add nuw nsw i64 %indvars.iv158, 1
  %exitcond162.not = icmp eq i64 %indvars.iv.next159, %wide.trip.count161
  br i1 %exitcond162.not, label %for.cond48.preheader, label %for.body18

for.cond.cleanup54.unr-lcssa:                     ; preds = %for.inc71.1, %for.body55.lr.ph
  %indvars.iv163.unr = phi i64 [ 0, %for.body55.lr.ph ], [ %indvars.iv.next164.1, %for.inc71.1 ]
  %lcmp.mod174.not = icmp eq i64 %xtraiter172, 0
  br i1 %lcmp.mod174.not, label %for.cond.cleanup54, label %for.body55.epil

for.body55.epil:                                  ; preds = %for.cond.cleanup54.unr-lcssa
  %m_im59.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 %indvars.iv163.unr, i32 6
  %29 = load float, ptr %m_im59.epil, align 8, !tbaa !175
  %cmp60.epil = fcmp ogt float %29, 0.000000e+00
  br i1 %cmp60.epil, label %if.then.epil, label %for.cond.cleanup54

if.then.epil:                                     ; preds = %for.body55.epil
  %arrayidx.i114.epil = getelementptr inbounds float, ptr %ranks.sroa.15138.1170, i64 %indvars.iv163.unr
  %30 = load float, ptr %arrayidx.i114.epil, align 4, !tbaa !137
  %div.epil = fdiv float %30, %29
  store float %div.epil, ptr %m_im59.epil, align 8, !tbaa !175
  br label %for.cond.cleanup54

for.cond.cleanup54:                               ; preds = %for.body55.epil, %if.then.epil, %for.cond.cleanup54.unr-lcssa
  br i1 %cmp146171, label %for.body.lr.ph.i.i, label %_ZN10btSoftBody12setTotalMassEfb.exit

for.body.lr.ph.i.i:                               ; preds = %for.cond.cleanup54
  %m_data.i.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %31 = load ptr, ptr %m_data.i.i.i.i, align 8, !tbaa !87
  %wide.trip.count.i.i = zext i32 %3 to i64
  %xtraiter177 = and i64 %wide.trip.count166, 1
  %32 = icmp eq i32 %3, 1
  br i1 %32, label %for.body49.lr.ph.i.unr-lcssa, label %for.body.lr.ph.i.i.new

for.body.lr.ph.i.i.new:                           ; preds = %for.body.lr.ph.i.i
  %unroll_iter181 = and i64 %wide.trip.count166, 4294967294
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %for.body.lr.ph.i.i.new
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.new ], [ %indvars.iv.next.i.i.1, %for.body.i.i ]
  %mass.07.i.i = phi float [ 0.000000e+00, %for.body.lr.ph.i.i.new ], [ %add.i.i.1, %for.body.i.i ]
  %niter182 = phi i64 [ 0, %for.body.lr.ph.i.i.new ], [ %niter182.next.1, %for.body.i.i ]
  %m_im.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %31, i64 %indvars.iv.i.i, i32 6
  %33 = load float, ptr %m_im.i.i.i, align 8, !tbaa !175
  %cmp.i.i.i = fcmp ogt float %33, 0.000000e+00
  %div.i.i.i = fdiv float 1.000000e+00, %33
  %cond.i.i.i = select i1 %cmp.i.i.i, float %div.i.i.i, float 0.000000e+00
  %add.i.i = fadd float %mass.07.i.i, %cond.i.i.i
  %indvars.iv.next.i.i = or i64 %indvars.iv.i.i, 1
  %m_im.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %31, i64 %indvars.iv.next.i.i, i32 6
  %34 = load float, ptr %m_im.i.i.i.1, align 8, !tbaa !175
  %cmp.i.i.i.1 = fcmp ogt float %34, 0.000000e+00
  %div.i.i.i.1 = fdiv float 1.000000e+00, %34
  %cond.i.i.i.1 = select i1 %cmp.i.i.i.1, float %div.i.i.i.1, float 0.000000e+00
  %add.i.i.1 = fadd float %add.i.i, %cond.i.i.i.1
  %indvars.iv.next.i.i.1 = add nuw nsw i64 %indvars.iv.i.i, 2
  %niter182.next.1 = add i64 %niter182, 2
  %niter182.ncmp.1 = icmp eq i64 %niter182.next.1, %unroll_iter181
  br i1 %niter182.ncmp.1, label %for.body49.lr.ph.i.unr-lcssa, label %for.body.i.i

for.body49.lr.ph.i.unr-lcssa:                     ; preds = %for.body.i.i, %for.body.lr.ph.i.i
  %add.i.i.lcssa.ph = phi float [ undef, %for.body.lr.ph.i.i ], [ %add.i.i.1, %for.body.i.i ]
  %indvars.iv.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i.1, %for.body.i.i ]
  %mass.07.i.i.unr = phi float [ 0.000000e+00, %for.body.lr.ph.i.i ], [ %add.i.i.1, %for.body.i.i ]
  %lcmp.mod179.not = icmp eq i64 %xtraiter177, 0
  br i1 %lcmp.mod179.not, label %for.body49.lr.ph.i, label %for.body.i.i.epil

for.body.i.i.epil:                                ; preds = %for.body49.lr.ph.i.unr-lcssa
  %m_im.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %31, i64 %indvars.iv.i.i.unr, i32 6
  %35 = load float, ptr %m_im.i.i.i.epil, align 8, !tbaa !175
  %cmp.i.i.i.epil = fcmp ogt float %35, 0.000000e+00
  %div.i.i.i.epil = fdiv float 1.000000e+00, %35
  %cond.i.i.i.epil = select i1 %cmp.i.i.i.epil, float %div.i.i.i.epil, float 0.000000e+00
  %add.i.i.epil = fadd float %mass.07.i.i.unr, %cond.i.i.i.epil
  br label %for.body49.lr.ph.i

for.body49.lr.ph.i:                               ; preds = %for.body49.lr.ph.i.unr-lcssa, %for.body.i.i.epil
  %add.i.i.lcssa = phi float [ %add.i.i.lcssa.ph, %for.body49.lr.ph.i.unr-lcssa ], [ %add.i.i.epil, %for.body.i.i.epil ]
  %div44.i = fdiv float 1.000000e+00, %add.i.i.lcssa
  %mul.i = fmul float %div44.i, %mass
  %min.iters.check = icmp ult i32 %3, 4
  br i1 %min.iters.check, label %for.body49.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body49.lr.ph.i
  %n.vec = and i64 %wide.trip.count166, 4294967292
  %broadcast.splatinsert = insertelement <4 x float> poison, float %mul.i, i64 0
  %broadcast.splat = shufflevector <4 x float> %broadcast.splatinsert, <4 x float> poison, <4 x i32> zeroinitializer
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %36 = or i64 %index, 1
  %37 = or i64 %index, 2
  %38 = or i64 %index, 3
  %39 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %31, i64 %index, i32 6
  %40 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %31, i64 %36, i32 6
  %41 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %31, i64 %37, i32 6
  %42 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %31, i64 %38, i32 6
  %43 = load float, ptr %39, align 8, !tbaa !175
  %44 = load float, ptr %40, align 8, !tbaa !175
  %45 = load float, ptr %41, align 8, !tbaa !175
  %46 = load float, ptr %42, align 8, !tbaa !175
  %47 = insertelement <4 x float> poison, float %43, i64 0
  %48 = insertelement <4 x float> %47, float %44, i64 1
  %49 = insertelement <4 x float> %48, float %45, i64 2
  %50 = insertelement <4 x float> %49, float %46, i64 3
  %51 = fdiv <4 x float> %50, %broadcast.splat
  %52 = extractelement <4 x float> %51, i64 0
  store float %52, ptr %39, align 8, !tbaa !175
  %53 = extractelement <4 x float> %51, i64 1
  store float %53, ptr %40, align 8, !tbaa !175
  %54 = extractelement <4 x float> %51, i64 2
  store float %54, ptr %41, align 8, !tbaa !175
  %55 = extractelement <4 x float> %51, i64 3
  store float %55, ptr %42, align 8, !tbaa !175
  %index.next = add nuw i64 %index, 4
  %56 = icmp eq i64 %index.next, %n.vec
  br i1 %56, label %middle.block, label %vector.body, !llvm.loop !295

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count166
  br i1 %cmp.n, label %_ZN10btSoftBody12setTotalMassEfb.exit, label %for.body49.i.preheader

for.body49.i.preheader:                           ; preds = %for.body49.lr.ph.i, %middle.block
  %indvars.iv113.i.ph = phi i64 [ 0, %for.body49.lr.ph.i ], [ %n.vec, %middle.block ]
  br label %for.body49.i

for.body49.i:                                     ; preds = %for.body49.i.preheader, %for.body49.i
  %indvars.iv113.i = phi i64 [ %indvars.iv.next114.i, %for.body49.i ], [ %indvars.iv113.i.ph, %for.body49.i.preheader ]
  %m_im52.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %31, i64 %indvars.iv113.i, i32 6
  %57 = load float, ptr %m_im52.i, align 8, !tbaa !175
  %div53.i = fdiv float %57, %mul.i
  store float %div53.i, ptr %m_im52.i, align 8, !tbaa !175
  %indvars.iv.next114.i = add nuw nsw i64 %indvars.iv113.i, 1
  %exitcond117.not.i = icmp eq i64 %indvars.iv.next114.i, %wide.trip.count.i.i
  br i1 %exitcond117.not.i, label %_ZN10btSoftBody12setTotalMassEfb.exit, label %for.body49.i, !llvm.loop !296

_ZN10btSoftBody12setTotalMassEfb.exit:            ; preds = %for.body49.i, %middle.block, %for.cond48.preheader, %for.cond.cleanup54
  %m_bUpdateRtCst.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  store i8 1, ptr %m_bUpdateRtCst.i, align 4, !tbaa !147
  %tobool.not.i.i.i122 = icmp eq ptr %ranks.sroa.15138.1170, null
  br i1 %tobool.not.i.i.i122, label %_ZN20btAlignedObjectArrayIfED2Ev.exit, label %if.then3.i.i.i125

for.body55:                                       ; preds = %for.inc71.1, %for.body55.lr.ph.new
  %indvars.iv163 = phi i64 [ 0, %for.body55.lr.ph.new ], [ %indvars.iv.next164.1, %for.inc71.1 ]
  %niter176 = phi i64 [ 0, %for.body55.lr.ph.new ], [ %niter176.next.1, %for.inc71.1 ]
  %m_im59 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 %indvars.iv163, i32 6
  %58 = load float, ptr %m_im59, align 8, !tbaa !175
  %cmp60 = fcmp ogt float %58, 0.000000e+00
  br i1 %cmp60, label %if.then, label %for.inc71

if.then:                                          ; preds = %for.body55
  %arrayidx.i114 = getelementptr inbounds float, ptr %ranks.sroa.15138.1170, i64 %indvars.iv163
  %59 = load float, ptr %arrayidx.i114, align 4, !tbaa !137
  %div = fdiv float %59, %58
  store float %div, ptr %m_im59, align 8, !tbaa !175
  br label %for.inc71

for.inc71:                                        ; preds = %for.body55, %if.then
  %indvars.iv.next164 = or i64 %indvars.iv163, 1
  %m_im59.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 %indvars.iv.next164, i32 6
  %60 = load float, ptr %m_im59.1, align 8, !tbaa !175
  %cmp60.1 = fcmp ogt float %60, 0.000000e+00
  br i1 %cmp60.1, label %if.then.1, label %for.inc71.1

if.then.1:                                        ; preds = %for.inc71
  %arrayidx.i114.1 = getelementptr inbounds float, ptr %ranks.sroa.15138.1170, i64 %indvars.iv.next164
  %61 = load float, ptr %arrayidx.i114.1, align 4, !tbaa !137
  %div.1 = fdiv float %61, %60
  store float %div.1, ptr %m_im59.1, align 8, !tbaa !175
  br label %for.inc71.1

for.inc71.1:                                      ; preds = %if.then.1, %for.inc71
  %indvars.iv.next164.1 = add nuw nsw i64 %indvars.iv163, 2
  %niter176.next.1 = add i64 %niter176, 2
  %niter176.ncmp.1 = icmp eq i64 %niter176.next.1, %unroll_iter175
  br i1 %niter176.ncmp.1, label %for.cond.cleanup54.unr-lcssa, label %for.body55

if.then3.i.i.i125:                                ; preds = %_ZN10btSoftBody12setTotalMassEfb.exit
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %ranks.sroa.15138.1170)
  br label %_ZN20btAlignedObjectArrayIfED2Ev.exit

_ZN20btAlignedObjectArrayIfED2Ev.exit:            ; preds = %_ZN10btSoftBody12setTotalMassEfb.exit, %if.then3.i.i.i125
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIfED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.12, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !39
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.12, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIfE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIfE5clearEv.exit

_ZN20btAlignedObjectArrayIfE5clearEv.exit:        ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !36
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !39
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray.12, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !40
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.12, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !41
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody16setVolumeDensityEf(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, float noundef %density) local_unnamed_addr #4 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !100
  %cmp18 = icmp sgt i32 %0, 0
  br i1 %cmp18, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !99
  %wide.trip.count = zext i32 %0 to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body, %for.body.lr.ph
  %add.3.lcssa.ph = phi float [ undef, %for.body.lr.ph ], [ %add.3.1, %for.body ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.1, %for.body ]
  %volume.020.unr = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %add.3.1, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.loopexit.unr-lcssa
  %m_rv.epil = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %1, i64 %indvars.iv.unr, i32 2
  %3 = load float, ptr %m_rv.epil, align 8, !tbaa !242
  %4 = tail call float @llvm.fabs.f32(float %3)
  %add.epil = fadd float %volume.020.unr, %4
  %add.1.epil = fadd float %add.epil, %4
  %add.2.epil = fadd float %add.1.epil, %4
  %add.3.epil = fadd float %add.2.epil, %4
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body.epil, %for.cond.cleanup.loopexit.unr-lcssa, %entry
  %volume.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %add.3.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %add.3.epil, %for.body.epil ]
  %mul = fmul float %volume.0.lcssa, %density
  %div = fdiv float %mul, 6.000000e+00
  tail call void @_ZN10btSoftBody13setVolumeMassEf(ptr noundef nonnull align 8 dereferenceable(1496) %this, float noundef %div)
  ret void

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.1, %for.body ]
  %volume.020 = phi float [ 0.000000e+00, %for.body.lr.ph.new ], [ %add.3.1, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.1, %for.body ]
  %m_rv = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %1, i64 %indvars.iv, i32 2
  %5 = load float, ptr %m_rv, align 8, !tbaa !242
  %6 = tail call float @llvm.fabs.f32(float %5)
  %add = fadd float %volume.020, %6
  %add.1 = fadd float %add, %6
  %add.2 = fadd float %add.1, %6
  %add.3 = fadd float %add.2, %6
  %indvars.iv.next = or i64 %indvars.iv, 1
  %m_rv.1 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %1, i64 %indvars.iv.next, i32 2
  %7 = load float, ptr %m_rv.1, align 8, !tbaa !242
  %8 = tail call float @llvm.fabs.f32(float %7)
  %add.123 = fadd float %add.3, %8
  %add.1.1 = fadd float %add.123, %8
  %add.2.1 = fadd float %add.1.1, %8
  %add.3.1 = fadd float %add.2.1, %8
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody9transformERK11btTransform(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(64) %trs) local_unnamed_addr #0 align 2 {
entry:
  %vol = alloca %struct.btDbvtAabbMm, align 8
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %0 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable = load ptr, ptr %0, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 11
  %1 = load ptr, ptr %vfn, align 8
  %call2 = tail call noundef float %1(ptr noundef nonnull align 8 dereferenceable(24) %0)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %vol) #38
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %2 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp62 = icmp sgt i32 %2, 0
  br i1 %cmp62, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %arrayidx5.i.i.i = getelementptr inbounds [4 x float], ptr %trs, i64 0, i64 1
  %arrayidx10.i.i.i = getelementptr inbounds [4 x float], ptr %trs, i64 0, i64 2
  %m_origin.i.i = getelementptr inbounds %class.btTransform, ptr %trs, i64 0, i32 1
  %arrayidx.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %trs, i64 0, i64 1
  %arrayidx5.i20.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %trs, i64 0, i64 1, i32 0, i64 1
  %arrayidx10.i23.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %trs, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i26.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %trs, i64 0, i64 2
  %arrayidx5.i27.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %trs, i64 0, i64 2, i32 0, i64 1
  %arrayidx10.i30.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %trs, i64 0, i64 2, i32 0, i64 2
  %arrayidx.i32.i.i = getelementptr inbounds %class.btTransform, ptr %trs, i64 0, i32 1, i32 0, i64 2
  %ref.tmp17.sroa.4.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 8
  %ref.tmp17.sroa.5.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 16
  %ref.tmp17.sroa.6.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 24
  %m_ndbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  %wide.trip.count = zext i32 %2 to i64
  %3 = insertelement <2 x float> poison, float %call2, i64 0
  %4 = shufflevector <2 x float> %3, <2 x float> poison, <2 x i32> zeroinitializer
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  call void @_ZN10btSoftBody13updateNormalsEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  %m_ndbvt.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  %5 = load ptr, ptr %m_ndbvt.i, align 8, !tbaa !162
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.cleanup
  %mx.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %5, i64 0, i32 1
  %6 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable.i = load ptr, ptr %6, align 8, !tbaa !5
  %vfn.i = getelementptr inbounds ptr, ptr %vtable.i, i64 11
  %7 = load ptr, ptr %vfn.i, align 8
  %call9.i = call noundef float %7(ptr noundef nonnull align 8 dereferenceable(24) %6)
  %8 = load <2 x float>, ptr %5, align 4, !tbaa !137
  %9 = insertelement <2 x float> poison, float %call9.i, i64 0
  %10 = shufflevector <2 x float> %9, <2 x float> poison, <2 x i32> zeroinitializer
  %11 = fsub <2 x float> %8, %10
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %5, i64 0, i64 2
  %12 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %12, %call9.i
  %retval.sroa.3.12.vec.insert.i45.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i, i64 0
  %m_bounds.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  store <2 x float> %11, ptr %m_bounds.i, align 4, !tbaa.struct !163
  %ref.tmp12.sroa.4.0.arrayidx.sroa_idx.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 0, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i45.i, ptr %ref.tmp12.sroa.4.0.arrayidx.sroa_idx.i, align 4, !tbaa.struct !165
  %13 = load <2 x float>, ptr %mx.i.i, align 4, !tbaa !137
  %14 = fadd <2 x float> %10, %13
  %arrayidx11.i50.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %5, i64 0, i32 1, i32 0, i64 2
  %15 = load float, ptr %arrayidx11.i50.i, align 4, !tbaa !137
  %add14.i.i = fadd float %call9.i, %15
  %retval.sroa.3.12.vec.insert.i54.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i, i64 0
  %arrayidx19.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1
  store <2 x float> %14, ptr %arrayidx19.i, align 4, !tbaa.struct !163
  %ref.tmp15.sroa.4.0.arrayidx19.sroa_idx.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i54.i, ptr %ref.tmp15.sroa.4.0.arrayidx19.sroa_idx.i, align 4, !tbaa.struct !165
  %m_broadphaseHandle.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 8
  %16 = load ptr, ptr %m_broadphaseHandle.i.i, align 8, !tbaa !166
  %cmp.not.i = icmp eq ptr %16, null
  br i1 %cmp.not.i, label %_ZN10btSoftBody12updateBoundsEv.exit, label %if.then21.i

if.then21.i:                                      ; preds = %if.then.i
  %m_worldInfo.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 7
  %17 = load ptr, ptr %m_worldInfo.i, align 8, !tbaa !42
  %m_broadphase.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %17, i64 0, i32 4
  %18 = load ptr, ptr %m_broadphase.i, align 8, !tbaa !167
  %m_dispatcher.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %17, i64 0, i32 5
  %19 = load ptr, ptr %m_dispatcher.i, align 8, !tbaa !172
  %vtable28.i = load ptr, ptr %18, align 8, !tbaa !5
  %vfn29.i = getelementptr inbounds ptr, ptr %vtable28.i, i64 4
  %20 = load ptr, ptr %vfn29.i, align 8
  call void %20(ptr noundef nonnull align 8 dereferenceable(8) %18, ptr noundef nonnull %16, ptr noundef nonnull align 4 dereferenceable(16) %m_bounds.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx19.i, ptr noundef %19)
  br label %_ZN10btSoftBody12updateBoundsEv.exit

if.else.i:                                        ; preds = %for.cond.cleanup
  %m_bounds34.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %m_bounds34.i, i8 0, i64 32, i1 false)
  br label %_ZN10btSoftBody12updateBoundsEv.exit

_ZN10btSoftBody12updateBoundsEv.exit:             ; preds = %if.then.i, %if.then21.i, %if.else.i
  call void @_ZN10btSoftBody15updateConstantsEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  %m_initialWorldTransform = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_initialWorldTransform, ptr noundef nonnull align 4 dereferenceable(16) %trs, i64 16, i1 false), !tbaa.struct !163
  %arrayidx5.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %trs, i64 0, i64 1
  %arrayidx7.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26, i32 0, i32 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx7.i.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx9.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %trs, i64 0, i64 2
  %arrayidx11.i.i32 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26, i32 0, i32 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx11.i.i32, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx9.i.i, i64 16, i1 false), !tbaa.struct !163
  %m_origin.i = getelementptr inbounds %class.btTransform, ptr %trs, i64 0, i32 1
  %m_origin3.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 26, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_origin3.i, ptr noundef nonnull align 4 dereferenceable(16) %m_origin.i, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %vol) #38
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %21 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %indvars.iv, i32 1
  %22 = load float, ptr %m_x, align 4, !tbaa !137
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 1
  %23 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %24 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %25 = load <4 x float>, ptr %trs, align 4
  %26 = shufflevector <4 x float> %25, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %27 = load <4 x float>, ptr %arrayidx5.i.i.i, align 4
  %28 = shufflevector <4 x float> %27, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %29 = load <4 x float>, ptr %arrayidx10.i.i.i, align 4
  %30 = shufflevector <4 x float> %29, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %31 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %32 = load float, ptr %arrayidx5.i20.i.i, align 4, !tbaa !137
  %33 = insertelement <2 x float> poison, float %23, i64 0
  %34 = shufflevector <2 x float> %33, <2 x float> poison, <2 x i32> zeroinitializer
  %35 = insertelement <2 x float> %28, float %32, i64 1
  %36 = fmul <2 x float> %34, %35
  %37 = insertelement <2 x float> %26, float %31, i64 1
  %38 = insertelement <2 x float> poison, float %22, i64 0
  %39 = shufflevector <2 x float> %38, <2 x float> poison, <2 x i32> zeroinitializer
  %40 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %37, <2 x float> %39, <2 x float> %36)
  %41 = load float, ptr %arrayidx10.i23.i.i, align 4, !tbaa !137
  %42 = insertelement <2 x float> %30, float %41, i64 1
  %43 = insertelement <2 x float> poison, float %24, i64 0
  %44 = shufflevector <2 x float> %43, <2 x float> poison, <2 x i32> zeroinitializer
  %45 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %42, <2 x float> %44, <2 x float> %40)
  %46 = load <2 x float>, ptr %m_origin.i.i, align 4, !tbaa !137
  %47 = fadd <2 x float> %45, %46
  %48 = load float, ptr %arrayidx.i26.i.i, align 4, !tbaa !137
  %49 = load float, ptr %arrayidx5.i27.i.i, align 4, !tbaa !137
  %mul8.i29.i.i = fmul float %23, %49
  %50 = call float @llvm.fmuladd.f32(float %48, float %22, float %mul8.i29.i.i)
  %51 = load float, ptr %arrayidx10.i30.i.i, align 4, !tbaa !137
  %52 = call float @llvm.fmuladd.f32(float %51, float %24, float %50)
  %53 = load float, ptr %arrayidx.i32.i.i, align 4, !tbaa !137
  %add17.i.i = fadd float %53, %52
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add17.i.i, i64 0
  store <2 x float> %47, ptr %m_x, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i, ptr %arrayidx12.i.i.i, align 8, !tbaa.struct !165
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %indvars.iv, i32 2
  %54 = load float, ptr %m_q, align 4, !tbaa !137
  %arrayidx7.i.i.i35 = getelementptr inbounds [4 x float], ptr %m_q, i64 0, i64 1
  %55 = load float, ptr %arrayidx7.i.i.i35, align 4, !tbaa !137
  %arrayidx12.i.i.i38 = getelementptr inbounds [4 x float], ptr %m_q, i64 0, i64 2
  %56 = load float, ptr %arrayidx12.i.i.i38, align 4, !tbaa !137
  %57 = load <4 x float>, ptr %trs, align 4
  %58 = shufflevector <4 x float> %57, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %59 = load <4 x float>, ptr %arrayidx5.i.i.i, align 4
  %60 = shufflevector <4 x float> %59, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %61 = load <4 x float>, ptr %arrayidx10.i.i.i, align 4
  %62 = shufflevector <4 x float> %61, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %63 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %64 = load float, ptr %arrayidx5.i20.i.i, align 4, !tbaa !137
  %65 = insertelement <2 x float> poison, float %55, i64 0
  %66 = shufflevector <2 x float> %65, <2 x float> poison, <2 x i32> zeroinitializer
  %67 = insertelement <2 x float> %60, float %64, i64 1
  %68 = fmul <2 x float> %66, %67
  %69 = insertelement <2 x float> %58, float %63, i64 1
  %70 = insertelement <2 x float> poison, float %54, i64 0
  %71 = shufflevector <2 x float> %70, <2 x float> poison, <2 x i32> zeroinitializer
  %72 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %69, <2 x float> %71, <2 x float> %68)
  %73 = load float, ptr %arrayidx10.i23.i.i, align 4, !tbaa !137
  %74 = insertelement <2 x float> %62, float %73, i64 1
  %75 = insertelement <2 x float> poison, float %56, i64 0
  %76 = shufflevector <2 x float> %75, <2 x float> poison, <2 x i32> zeroinitializer
  %77 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %74, <2 x float> %76, <2 x float> %72)
  %78 = load <2 x float>, ptr %m_origin.i.i, align 4, !tbaa !137
  %79 = fadd <2 x float> %77, %78
  %80 = load float, ptr %arrayidx.i26.i.i, align 4, !tbaa !137
  %81 = load float, ptr %arrayidx5.i27.i.i, align 4, !tbaa !137
  %mul8.i29.i.i49 = fmul float %55, %81
  %82 = call float @llvm.fmuladd.f32(float %80, float %54, float %mul8.i29.i.i49)
  %83 = load float, ptr %arrayidx10.i30.i.i, align 4, !tbaa !137
  %84 = call float @llvm.fmuladd.f32(float %83, float %56, float %82)
  %85 = load float, ptr %arrayidx.i32.i.i, align 4, !tbaa !137
  %add17.i.i52 = fadd float %85, %84
  %retval.sroa.3.12.vec.insert.i.i55 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add17.i.i52, i64 0
  store <2 x float> %79, ptr %m_q, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i55, ptr %arrayidx12.i.i.i38, align 8, !tbaa.struct !165
  %m_n = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %indvars.iv, i32 5
  %86 = load float, ptr %m_n, align 4, !tbaa !137
  %arrayidx7.i.i59 = getelementptr inbounds [4 x float], ptr %m_n, i64 0, i64 1
  %87 = load float, ptr %arrayidx7.i.i59, align 4, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds [4 x float], ptr %m_n, i64 0, i64 2
  %88 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %89 = load <4 x float>, ptr %trs, align 4
  %90 = shufflevector <4 x float> %89, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %91 = load <4 x float>, ptr %arrayidx5.i.i.i, align 4
  %92 = shufflevector <4 x float> %91, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %93 = load <4 x float>, ptr %arrayidx10.i.i.i, align 4
  %94 = shufflevector <4 x float> %93, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %95 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %96 = load float, ptr %arrayidx5.i20.i.i, align 4, !tbaa !137
  %97 = insertelement <2 x float> poison, float %87, i64 0
  %98 = shufflevector <2 x float> %97, <2 x float> poison, <2 x i32> zeroinitializer
  %99 = insertelement <2 x float> %92, float %96, i64 1
  %100 = fmul <2 x float> %98, %99
  %101 = insertelement <2 x float> %90, float %95, i64 1
  %102 = insertelement <2 x float> poison, float %86, i64 0
  %103 = shufflevector <2 x float> %102, <2 x float> poison, <2 x i32> zeroinitializer
  %104 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %101, <2 x float> %103, <2 x float> %100)
  %105 = load float, ptr %arrayidx10.i23.i.i, align 4, !tbaa !137
  %106 = insertelement <2 x float> %94, float %105, i64 1
  %107 = insertelement <2 x float> poison, float %88, i64 0
  %108 = shufflevector <2 x float> %107, <2 x float> poison, <2 x i32> zeroinitializer
  %109 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %106, <2 x float> %108, <2 x float> %104)
  %110 = load float, ptr %arrayidx.i26.i.i, align 4, !tbaa !137
  %111 = load float, ptr %arrayidx5.i27.i.i, align 4, !tbaa !137
  %mul8.i20.i = fmul float %87, %111
  %112 = call float @llvm.fmuladd.f32(float %110, float %86, float %mul8.i20.i)
  %113 = load float, ptr %arrayidx10.i30.i.i, align 4, !tbaa !137
  %114 = call float @llvm.fmuladd.f32(float %113, float %88, float %112)
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %114, i64 0
  store <2 x float> %109, ptr %m_n, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %arrayidx12.i.i, align 8, !tbaa.struct !165
  %115 = fsub <2 x float> %47, %4
  %sub14.i.i.i = fsub float %add17.i.i, %call2
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i.i, i64 0
  %116 = fadd <2 x float> %4, %47
  %add14.i.i.i = fadd float %call2, %add17.i.i
  %retval.sroa.3.12.vec.insert.i12.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i.i, i64 0
  store <2 x float> %115, ptr %vol, align 8, !tbaa.struct !297
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i, ptr %ref.tmp17.sroa.4.0.vol.sroa_idx, align 8, !tbaa.struct !298
  store <2 x float> %116, ptr %ref.tmp17.sroa.5.0.vol.sroa_idx, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i12.i.i, ptr %ref.tmp17.sroa.6.0.vol.sroa_idx, align 8, !tbaa.struct !165
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %indvars.iv, i32 8
  %117 = load ptr, ptr %m_leaf, align 8, !tbaa !183
  call void @_ZN6btDbvt6updateEP10btDbvtNodeR12btDbvtAabbMm(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt, ptr noundef %117, ptr noundef nonnull align 4 dereferenceable(32) %vol)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

declare void @_ZN6btDbvt6updateEP10btDbvtNodeR12btDbvtAabbMm(ptr noundef nonnull align 8 dereferenceable(64), ptr noundef, ptr noundef nonnull align 4 dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody13updateNormalsEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #16 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp143 = icmp sgt i32 %0, 0
  br i1 %cmp143, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %wide.trip.count = zext i32 %0 to i64
  %xtraiter = and i64 %wide.trip.count, 3
  %1 = icmp ult i32 %0, 4
  br i1 %1, label %for.end.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967292
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
  %2 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_n = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv, i32 5
  %indvars.iv.next = or i64 %indvars.iv, 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_n, i8 0, i64 16, i1 false)
  %3 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_n.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 %indvars.iv.next, i32 5
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_n.1, i8 0, i64 16, i1 false)
  %4 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_n.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 %indvars.iv.next.1, i32 5
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_n.2, i8 0, i64 16, i1 false)
  %5 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_n.3 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 %indvars.iv.next.2, i32 5
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_n.3, i8 0, i64 16, i1 false)
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.end.loopexit.unr-lcssa, label %for.body

for.end.loopexit.unr-lcssa:                       ; preds = %for.body, %for.body.lr.ph
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end, label %for.body.epil

for.body.epil:                                    ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.end.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.end.loopexit.unr-lcssa ]
  %6 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_n.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 %indvars.iv.epil, i32 5
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_n.epil, i8 0, i64 16, i1 false)
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.end, label %for.body.epil, !llvm.loop !299

for.end:                                          ; preds = %for.end.loopexit.unr-lcssa, %for.body.epil, %entry
  %m_size.i82 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %7 = load i32, ptr %m_size.i82, align 4, !tbaa !96
  %cmp8145 = icmp sgt i32 %7, 0
  br i1 %cmp8145, label %for.body9.lr.ph, label %for.end46

for.body9.lr.ph:                                  ; preds = %for.end
  %m_data.i83 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %wide.trip.count153 = zext i32 %7 to i64
  br label %for.body9

for.body9:                                        ; preds = %for.body9.lr.ph, %for.body9
  %indvars.iv150 = phi i64 [ 0, %for.body9.lr.ph ], [ %indvars.iv.next151, %for.body9 ]
  %8 = load ptr, ptr %m_data.i83, align 8, !tbaa !95
  %m_n13 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %8, i64 %indvars.iv150, i32 1
  %arrayidx = getelementptr inbounds %"struct.btSoftBody::Face", ptr %8, i64 %indvars.iv150, i32 1, i64 1
  %9 = load ptr, ptr %arrayidx, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %9, i64 0, i32 1
  %10 = load ptr, ptr %m_n13, align 8, !tbaa !219
  %m_x16 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %10, i64 0, i32 1
  %11 = load float, ptr %m_x, align 4, !tbaa !137
  %12 = load float, ptr %m_x16, align 4, !tbaa !137
  %sub.i = fsub float %11, %12
  %arrayidx5.i86 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %9, i64 0, i32 1, i32 0, i64 1
  %arrayidx7.i87 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %10, i64 0, i32 1, i32 0, i64 1
  %arrayidx20 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %8, i64 %indvars.iv150, i32 1, i64 2
  %13 = load ptr, ptr %arrayidx20, align 8, !tbaa !219
  %m_x21 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 0, i32 1
  %arrayidx5.i89 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 0, i32 1, i32 0, i64 1
  %14 = load float, ptr %arrayidx5.i89, align 4, !tbaa !137
  %arrayidx11.i92 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 0, i32 1, i32 0, i64 2
  %m_normal = getelementptr inbounds %"struct.btSoftBody::Face", ptr %8, i64 %indvars.iv150, i32 2
  %ref.tmp29.sroa.4.0.m_normal.sroa_idx = getelementptr inbounds i8, ptr %m_normal, i64 8
  %m_n34 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %10, i64 0, i32 5
  %15 = load <2 x float>, ptr %arrayidx5.i86, align 4, !tbaa !137
  %16 = load <2 x float>, ptr %arrayidx7.i87, align 4, !tbaa !137
  %17 = fsub <2 x float> %15, %16
  %18 = load float, ptr %m_x21, align 4, !tbaa !137
  %19 = extractelement <2 x float> %16, i64 0
  %sub8.i91 = fsub float %14, %19
  %20 = load float, ptr %arrayidx11.i92, align 4, !tbaa !137
  %21 = insertelement <2 x float> poison, float %18, i64 0
  %22 = insertelement <2 x float> %21, float %20, i64 1
  %23 = insertelement <2 x float> %16, float %12, i64 0
  %24 = fsub <2 x float> %22, %23
  %25 = shufflevector <2 x float> %24, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %26 = shufflevector <2 x float> %17, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %27 = insertelement <2 x float> %26, float %sub.i, i64 1
  %28 = fneg <2 x float> %27
  %29 = insertelement <2 x float> %24, float %sub8.i91, i64 0
  %30 = fmul <2 x float> %29, %28
  %31 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %17, <2 x float> %25, <2 x float> %30)
  %32 = extractelement <2 x float> %17, i64 0
  %33 = fneg float %32
  %34 = extractelement <2 x float> %24, i64 0
  %neg30.i.i = fmul float %34, %33
  %35 = tail call float @llvm.fmuladd.f32(float %sub.i, float %sub8.i91, float %neg30.i.i)
  %36 = fmul <2 x float> %31, %31
  %mul8.i.i.i.i = extractelement <2 x float> %36, i64 1
  %37 = extractelement <2 x float> %31, i64 0
  %38 = tail call float @llvm.fmuladd.f32(float %37, float %37, float %mul8.i.i.i.i)
  %39 = tail call float @llvm.fmuladd.f32(float %35, float %35, float %38)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %39)
  %div.i.i = fdiv float 1.000000e+00, %sqrt.i.i
  %40 = insertelement <2 x float> poison, float %div.i.i, i64 0
  %41 = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> zeroinitializer
  %42 = fmul <2 x float> %31, %41
  %mul8.i.i.i = fmul float %35, %div.i.i
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i.i, i64 0
  store <2 x float> %42, ptr %m_normal, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i, ptr %ref.tmp29.sroa.4.0.m_normal.sroa_idx, align 8, !tbaa.struct !165
  %43 = load <2 x float>, ptr %m_n34, align 4, !tbaa !137
  %44 = fadd <2 x float> %31, %43
  store <2 x float> %44, ptr %m_n34, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %10, i64 0, i32 5, i32 0, i64 2
  %45 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %35, %45
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %m_n38 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %9, i64 0, i32 5
  %46 = load <2 x float>, ptr %m_n38, align 4, !tbaa !137
  %47 = fadd <2 x float> %31, %46
  store <2 x float> %47, ptr %m_n38, align 4, !tbaa !137
  %arrayidx12.i107 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %9, i64 0, i32 5, i32 0, i64 2
  %48 = load float, ptr %arrayidx12.i107, align 4, !tbaa !137
  %add13.i108 = fadd float %35, %48
  store float %add13.i108, ptr %arrayidx12.i107, align 4, !tbaa !137
  %m_n42 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 0, i32 5
  %49 = load <2 x float>, ptr %m_n42, align 4, !tbaa !137
  %50 = fadd <2 x float> %31, %49
  store <2 x float> %50, ptr %m_n42, align 4, !tbaa !137
  %arrayidx12.i114 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 0, i32 5, i32 0, i64 2
  %51 = load float, ptr %arrayidx12.i114, align 4, !tbaa !137
  %add13.i115 = fadd float %35, %51
  store float %add13.i115, ptr %arrayidx12.i114, align 4, !tbaa !137
  %indvars.iv.next151 = add nuw nsw i64 %indvars.iv150, 1
  %exitcond154.not = icmp eq i64 %indvars.iv.next151, %wide.trip.count153
  br i1 %exitcond154.not, label %for.end46, label %for.body9

for.end46:                                        ; preds = %for.body9, %for.end
  %52 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp50147 = icmp sgt i32 %52, 0
  br i1 %cmp50147, label %for.body51.lr.ph, label %for.end63

for.body51.lr.ph:                                 ; preds = %for.end46
  %m_data.i117 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %53 = load ptr, ptr %m_data.i117, align 8, !tbaa !87
  %wide.trip.count158 = zext i32 %52 to i64
  br label %for.body51

for.body51:                                       ; preds = %for.body51.lr.ph, %if.end
  %indvars.iv155 = phi i64 [ 0, %for.body51.lr.ph ], [ %indvars.iv.next156, %if.end ]
  %m_n54 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %53, i64 %indvars.iv155, i32 5
  %54 = load <2 x float>, ptr %m_n54, align 4, !tbaa !137
  %55 = fmul <2 x float> %54, %54
  %mul8.i.i.i120 = extractelement <2 x float> %55, i64 1
  %56 = extractelement <2 x float> %54, i64 0
  %57 = tail call float @llvm.fmuladd.f32(float %56, float %56, float %mul8.i.i.i120)
  %arrayidx10.i.i.i = getelementptr inbounds [4 x float], ptr %m_n54, i64 0, i64 2
  %58 = load float, ptr %arrayidx10.i.i.i, align 4, !tbaa !137
  %59 = tail call float @llvm.fmuladd.f32(float %58, float %58, float %57)
  %sqrt.i = tail call float @llvm.sqrt.f32(float %59)
  %cmp56 = fcmp ogt float %sqrt.i, 0x3E80000000000000
  br i1 %cmp56, label %if.then, label %if.end

if.then:                                          ; preds = %for.body51
  %div.i = fdiv float 1.000000e+00, %sqrt.i
  %60 = insertelement <2 x float> poison, float %div.i, i64 0
  %61 = shufflevector <2 x float> %60, <2 x float> poison, <2 x i32> zeroinitializer
  %62 = fmul <2 x float> %54, %61
  store <2 x float> %62, ptr %m_n54, align 4, !tbaa !137
  %mul7.i.i = fmul float %58, %div.i
  store float %mul7.i.i, ptr %arrayidx10.i.i.i, align 4, !tbaa !137
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body51
  %indvars.iv.next156 = add nuw nsw i64 %indvars.iv155, 1
  %exitcond159.not = icmp eq i64 %indvars.iv.next156, %wide.trip.count158
  br i1 %exitcond159.not, label %for.end63, label %for.body51

for.end63:                                        ; preds = %if.end, %for.end46
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody15updateConstantsEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !92
  %cmp216 = icmp sgt i32 %0, 0
  br i1 %cmp216, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !91
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %m_material = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 0, i32 1
  %2 = load ptr, ptr %m_material, align 8, !tbaa !184
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 1
  %3 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1
  %arrayidx5 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 1, i64 1
  %4 = load ptr, ptr %arrayidx5, align 8, !tbaa !219
  %m_x6 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1
  %5 = load float, ptr %m_x, align 4, !tbaa !137
  %6 = load float, ptr %m_x6, align 4, !tbaa !137
  %sub.i = fsub float %5, %6
  %arrayidx5.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1, i32 0, i64 1
  %7 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 1
  %8 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %sub8.i = fsub float %7, %8
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1, i32 0, i64 2
  %9 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 2
  %10 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %9, %10
  %mul8.i.i.i = fmul float %sub8.i, %sub8.i
  %11 = tail call float @llvm.fmuladd.f32(float %sub.i, float %sub.i, float %mul8.i.i.i)
  %12 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub14.i, float %11)
  %sqrt.i = tail call float @llvm.sqrt.f32(float %12)
  %m_rl = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 2
  store float %sqrt.i, ptr %m_rl, align 8, !tbaa !239
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 6
  %13 = load float, ptr %m_im, align 8, !tbaa !175
  %m_im13 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 6
  %14 = load float, ptr %m_im13, align 8, !tbaa !175
  %add = fadd float %13, %14
  %m_kLST = getelementptr inbounds %"struct.btSoftBody::Material", ptr %2, i64 0, i32 1
  %15 = load float, ptr %m_kLST, align 8, !tbaa !300
  %div = fdiv float %add, %15
  %m_c0 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 5
  store float %div, ptr %m_c0, align 8, !tbaa !301
  %mul = fmul float %sqrt.i, %sqrt.i
  %m_c1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 6
  store float %mul, ptr %m_c1, align 4, !tbaa !302
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %m_size.i156 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %16 = load i32, ptr %m_size.i156, align 4, !tbaa !96
  %cmp18218 = icmp sgt i32 %16, 0
  br i1 %cmp18218, label %for.body19.lr.ph, label %for.end34

for.body19.lr.ph:                                 ; preds = %for.end
  %m_data.i157 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %17 = load ptr, ptr %m_data.i157, align 8, !tbaa !95
  %wide.trip.count231 = zext i32 %16 to i64
  br label %for.body19

for.body19:                                       ; preds = %for.body19.lr.ph, %for.body19
  %indvars.iv228 = phi i64 [ 0, %for.body19.lr.ph ], [ %indvars.iv.next229, %for.body19 ]
  %m_n22 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %17, i64 %indvars.iv228, i32 1
  %18 = load ptr, ptr %m_n22, align 8, !tbaa !219
  %m_x24 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 0, i32 1
  %arrayidx26 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %17, i64 %indvars.iv228, i32 1, i64 1
  %19 = load ptr, ptr %arrayidx26, align 8, !tbaa !219
  %m_x27 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 0, i32 1
  %arrayidx29 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %17, i64 %indvars.iv228, i32 1, i64 2
  %20 = load ptr, ptr %arrayidx29, align 8, !tbaa !219
  %m_x30 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %20, i64 0, i32 1
  %21 = load float, ptr %m_x27, align 4, !tbaa !137
  %22 = load float, ptr %m_x24, align 4, !tbaa !137
  %sub.i.i = fsub float %21, %22
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 0, i32 1, i32 0, i64 1
  %23 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 0, i32 1, i32 0, i64 1
  %24 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %sub8.i.i = fsub float %23, %24
  %arrayidx11.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 0, i32 1, i32 0, i64 2
  %25 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %arrayidx13.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 0, i32 1, i32 0, i64 2
  %26 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %25, %26
  %27 = load float, ptr %m_x30, align 4, !tbaa !137
  %sub.i7.i = fsub float %27, %22
  %arrayidx5.i8.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %20, i64 0, i32 1, i32 0, i64 1
  %28 = load float, ptr %arrayidx5.i8.i, align 4, !tbaa !137
  %sub8.i10.i = fsub float %28, %24
  %arrayidx11.i11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %20, i64 0, i32 1, i32 0, i64 2
  %29 = load float, ptr %arrayidx11.i11.i, align 4, !tbaa !137
  %sub14.i13.i = fsub float %29, %26
  %30 = fneg float %sub14.i.i
  %neg.i.i.i = fmul float %sub8.i10.i, %30
  %31 = tail call float @llvm.fmuladd.f32(float %sub8.i.i, float %sub14.i13.i, float %neg.i.i.i)
  %32 = fneg float %sub.i.i
  %neg19.i.i.i = fmul float %sub14.i13.i, %32
  %33 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %sub.i7.i, float %neg19.i.i.i)
  %34 = fneg float %sub8.i.i
  %neg30.i.i.i = fmul float %sub.i7.i, %34
  %35 = tail call float @llvm.fmuladd.f32(float %sub.i.i, float %sub8.i10.i, float %neg30.i.i.i)
  %mul8.i.i.i.i = fmul float %33, %33
  %36 = tail call float @llvm.fmuladd.f32(float %31, float %31, float %mul8.i.i.i.i)
  %37 = tail call float @llvm.fmuladd.f32(float %35, float %35, float %36)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %37)
  %m_ra = getelementptr inbounds %"struct.btSoftBody::Face", ptr %17, i64 %indvars.iv228, i32 3
  store float %sqrt.i.i, ptr %m_ra, align 8, !tbaa !241
  %indvars.iv.next229 = add nuw nsw i64 %indvars.iv228, 1
  %exitcond232.not = icmp eq i64 %indvars.iv.next229, %wide.trip.count231
  br i1 %exitcond232.not, label %for.end34, label %for.body19

for.end34:                                        ; preds = %for.body19, %for.end
  %m_size.i160 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %38 = load i32, ptr %m_size.i160, align 4, !tbaa !88
  %or.cond = icmp slt i32 %38, 1
  br i1 %or.cond, label %for.end50, label %invoke.cont38

invoke.cont38:                                    ; preds = %for.end34
  %conv.i.i.i.i = zext i32 %38 to i64
  %mul.i.i.i.i = shl nuw nsw i64 %conv.i.i.i.i, 2
  %call.i.i.i.i164 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  tail call void @llvm.memset.p0.i64(ptr align 4 %call.i.i.i.i164, i8 0, i64 %mul.i.i.i.i, i1 false), !tbaa !140
  %.pre = load i32, ptr %m_size.i160, align 4, !tbaa !88
  %cmp43220 = icmp sgt i32 %.pre, 0
  br i1 %cmp43220, label %for.body44.lr.ph, label %for.end50

for.body44.lr.ph:                                 ; preds = %invoke.cont38
  %m_data.i166 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %39 = load ptr, ptr %m_data.i166, align 8, !tbaa !87
  %wide.trip.count236 = zext i32 %.pre to i64
  %xtraiter = and i64 %wide.trip.count236, 3
  %40 = icmp ult i32 %.pre, 4
  br i1 %40, label %for.end50.loopexit.unr-lcssa, label %for.body44.lr.ph.new

for.body44.lr.ph.new:                             ; preds = %for.body44.lr.ph
  %unroll_iter = and i64 %wide.trip.count236, 4294967292
  br label %for.body44

for.body44:                                       ; preds = %for.body44, %for.body44.lr.ph.new
  %indvars.iv233 = phi i64 [ 0, %for.body44.lr.ph.new ], [ %indvars.iv.next234.3, %for.body44 ]
  %niter = phi i64 [ 0, %for.body44.lr.ph.new ], [ %niter.next.3, %for.body44 ]
  %m_area = getelementptr inbounds %"struct.btSoftBody::Node", ptr %39, i64 %indvars.iv233, i32 7
  store float 0.000000e+00, ptr %m_area, align 4, !tbaa !303
  %indvars.iv.next234 = or i64 %indvars.iv233, 1
  %m_area.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %39, i64 %indvars.iv.next234, i32 7
  store float 0.000000e+00, ptr %m_area.1, align 4, !tbaa !303
  %indvars.iv.next234.1 = or i64 %indvars.iv233, 2
  %m_area.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %39, i64 %indvars.iv.next234.1, i32 7
  store float 0.000000e+00, ptr %m_area.2, align 4, !tbaa !303
  %indvars.iv.next234.2 = or i64 %indvars.iv233, 3
  %m_area.3 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %39, i64 %indvars.iv.next234.2, i32 7
  store float 0.000000e+00, ptr %m_area.3, align 4, !tbaa !303
  %indvars.iv.next234.3 = add nuw nsw i64 %indvars.iv233, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.end50.loopexit.unr-lcssa, label %for.body44

for.end50.loopexit.unr-lcssa:                     ; preds = %for.body44, %for.body44.lr.ph
  %indvars.iv233.unr = phi i64 [ 0, %for.body44.lr.ph ], [ %indvars.iv.next234.3, %for.body44 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.end50, label %for.body44.epil

for.body44.epil:                                  ; preds = %for.end50.loopexit.unr-lcssa, %for.body44.epil
  %indvars.iv233.epil = phi i64 [ %indvars.iv.next234.epil, %for.body44.epil ], [ %indvars.iv233.unr, %for.end50.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body44.epil ], [ 0, %for.end50.loopexit.unr-lcssa ]
  %m_area.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %39, i64 %indvars.iv233.epil, i32 7
  store float 0.000000e+00, ptr %m_area.epil, align 4, !tbaa !303
  %indvars.iv.next234.epil = add nuw nsw i64 %indvars.iv233.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.end50, label %for.body44.epil, !llvm.loop !304

for.end50:                                        ; preds = %for.end50.loopexit.unr-lcssa, %for.body44.epil, %for.end34, %invoke.cont38
  %counts.sroa.15207.1255 = phi ptr [ %call.i.i.i.i164, %invoke.cont38 ], [ null, %for.end34 ], [ %call.i.i.i.i164, %for.body44.epil ], [ %call.i.i.i.i164, %for.end50.loopexit.unr-lcssa ]
  %41 = phi i32 [ %.pre, %invoke.cont38 ], [ %38, %for.end34 ], [ %.pre, %for.body44.epil ], [ %.pre, %for.end50.loopexit.unr-lcssa ]
  %42 = load i32, ptr %m_size.i156, align 4, !tbaa !96
  %cmp55223 = icmp sgt i32 %42, 0
  br i1 %cmp55223, label %for.body56.lr.ph, label %for.end87

for.body56.lr.ph:                                 ; preds = %for.end50
  %m_data.i177 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %43 = load ptr, ptr %m_data.i177, align 8, !tbaa !95
  %m_data.i180 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %44 = load ptr, ptr %m_data.i180, align 8, !tbaa !87
  %sub.ptr.rhs.cast = ptrtoint ptr %44 to i64
  %wide.trip.count245 = zext i32 %42 to i64
  br label %for.body56

for.body56:                                       ; preds = %for.body56.lr.ph, %for.body56
  %indvars.iv242 = phi i64 [ 0, %for.body56.lr.ph ], [ %indvars.iv.next243, %for.body56 ]
  %m_ra74 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %43, i64 %indvars.iv242, i32 3
  %45 = load float, ptr %m_ra74, align 8, !tbaa !241
  %46 = tail call float @llvm.fabs.f32(float %45)
  %arrayidx66 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %43, i64 %indvars.iv242, i32 1, i64 0
  %47 = load ptr, ptr %arrayidx66, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %47 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 120
  %sext = shl i64 %sub.ptr.div, 32
  %idxprom.i182 = ashr exact i64 %sext, 32
  %arrayidx.i183 = getelementptr inbounds i32, ptr %counts.sroa.15207.1255, i64 %idxprom.i182
  %48 = load i32, ptr %arrayidx.i183, align 4, !tbaa !140
  %inc73 = add nsw i32 %48, 1
  store i32 %inc73, ptr %arrayidx.i183, align 4, !tbaa !140
  %m_area80 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %47, i64 0, i32 7
  %49 = load float, ptr %m_area80, align 4, !tbaa !303
  %add81 = fadd float %49, %46
  store float %add81, ptr %m_area80, align 4, !tbaa !303
  %arrayidx66.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %43, i64 %indvars.iv242, i32 1, i64 1
  %50 = load ptr, ptr %arrayidx66.1, align 8, !tbaa !219
  %sub.ptr.lhs.cast.1 = ptrtoint ptr %50 to i64
  %sub.ptr.sub.1 = sub i64 %sub.ptr.lhs.cast.1, %sub.ptr.rhs.cast
  %sub.ptr.div.1 = sdiv exact i64 %sub.ptr.sub.1, 120
  %sext.1 = shl i64 %sub.ptr.div.1, 32
  %idxprom.i182.1 = ashr exact i64 %sext.1, 32
  %arrayidx.i183.1 = getelementptr inbounds i32, ptr %counts.sroa.15207.1255, i64 %idxprom.i182.1
  %51 = load i32, ptr %arrayidx.i183.1, align 4, !tbaa !140
  %inc73.1 = add nsw i32 %51, 1
  store i32 %inc73.1, ptr %arrayidx.i183.1, align 4, !tbaa !140
  %m_area80.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %50, i64 0, i32 7
  %52 = load float, ptr %m_area80.1, align 4, !tbaa !303
  %add81.1 = fadd float %52, %46
  store float %add81.1, ptr %m_area80.1, align 4, !tbaa !303
  %arrayidx66.2 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %43, i64 %indvars.iv242, i32 1, i64 2
  %53 = load ptr, ptr %arrayidx66.2, align 8, !tbaa !219
  %sub.ptr.lhs.cast.2 = ptrtoint ptr %53 to i64
  %sub.ptr.sub.2 = sub i64 %sub.ptr.lhs.cast.2, %sub.ptr.rhs.cast
  %sub.ptr.div.2 = sdiv exact i64 %sub.ptr.sub.2, 120
  %sext.2 = shl i64 %sub.ptr.div.2, 32
  %idxprom.i182.2 = ashr exact i64 %sext.2, 32
  %arrayidx.i183.2 = getelementptr inbounds i32, ptr %counts.sroa.15207.1255, i64 %idxprom.i182.2
  %54 = load i32, ptr %arrayidx.i183.2, align 4, !tbaa !140
  %inc73.2 = add nsw i32 %54, 1
  store i32 %inc73.2, ptr %arrayidx.i183.2, align 4, !tbaa !140
  %m_area80.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %53, i64 0, i32 7
  %55 = load float, ptr %m_area80.2, align 4, !tbaa !303
  %add81.2 = fadd float %55, %46
  store float %add81.2, ptr %m_area80.2, align 4, !tbaa !303
  %indvars.iv.next243 = add nuw nsw i64 %indvars.iv242, 1
  %exitcond246.not = icmp eq i64 %indvars.iv.next243, %wide.trip.count245
  br i1 %exitcond246.not, label %for.end87.loopexit, label %for.body56

for.end87.loopexit:                               ; preds = %for.body56
  %.pre252 = load i32, ptr %m_size.i160, align 4, !tbaa !88
  br label %for.end87

for.end87:                                        ; preds = %for.end87.loopexit, %for.end50
  %56 = phi i32 [ %.pre252, %for.end87.loopexit ], [ %41, %for.end50 ]
  %cmp92225 = icmp sgt i32 %56, 0
  br i1 %cmp92225, label %for.body93.lr.ph, label %for.end111

for.body93.lr.ph:                                 ; preds = %for.end87
  %m_data.i194 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %57 = load ptr, ptr %m_data.i194, align 8
  %wide.trip.count250 = zext i32 %56 to i64
  br label %for.body93

for.body93:                                       ; preds = %for.body93.lr.ph, %for.inc109
  %indvars.iv247 = phi i64 [ 0, %for.body93.lr.ph ], [ %indvars.iv.next248, %for.inc109 ]
  %arrayidx.i187 = getelementptr inbounds i32, ptr %counts.sroa.15207.1255, i64 %indvars.iv247
  %58 = load i32, ptr %arrayidx.i187, align 4, !tbaa !140
  %cmp96 = icmp sgt i32 %58, 0
  br i1 %cmp96, label %if.then, label %if.else

if.then:                                          ; preds = %for.body93
  %conv99 = sitofp i32 %58 to float
  %m_area103 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %57, i64 %indvars.iv247, i32 7
  %59 = load float, ptr %m_area103, align 4, !tbaa !303
  %div104 = fdiv float %59, %conv99
  store float %div104, ptr %m_area103, align 4, !tbaa !303
  br label %for.inc109

if.else:                                          ; preds = %for.body93
  %m_area108 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %57, i64 %indvars.iv247, i32 7
  store float 0.000000e+00, ptr %m_area108, align 4, !tbaa !303
  br label %for.inc109

for.inc109:                                       ; preds = %if.then, %if.else
  %indvars.iv.next248 = add nuw nsw i64 %indvars.iv247, 1
  %exitcond251.not = icmp eq i64 %indvars.iv.next248, %wide.trip.count250
  br i1 %exitcond251.not, label %if.then3.i.i.i202, label %for.body93

for.end111:                                       ; preds = %for.end87
  %tobool.not.i.i.i198 = icmp eq ptr %counts.sroa.15207.1255, null
  br i1 %tobool.not.i.i.i198, label %_ZN20btAlignedObjectArrayIiED2Ev.exit205, label %if.then3.i.i.i202

if.then3.i.i.i202:                                ; preds = %for.inc109, %for.end111
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %counts.sroa.15207.1255)
  br label %_ZN20btAlignedObjectArrayIiED2Ev.exit205

_ZN20btAlignedObjectArrayIiED2Ev.exit205:         ; preds = %for.end111, %if.then3.i.i.i202
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody9translateERK9btVector3(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %trs) local_unnamed_addr #4 align 2 {
entry:
  %t = alloca %class.btTransform, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %t) #38
  store float 1.000000e+00, ptr %t, align 4, !tbaa !137
  %arrayidx3.i.i.i.i = getelementptr inbounds [4 x float], ptr %t, i64 0, i64 1
  %arrayidx3.i6.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 1, i32 0, i64 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i.i, align 4, !tbaa !137
  %arrayidx5.i7.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 2, i32 0, i64 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i7.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i.i, align 4, !tbaa !137
  %arrayidx7.i11.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 2, i32 0, i64 3
  store i32 0, ptr %arrayidx7.i11.i.i.i, align 4
  %m_origin.i = getelementptr inbounds %class.btTransform, ptr %t, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %m_origin.i, ptr noundef nonnull align 4 dereferenceable(16) %trs, i64 16, i1 false), !tbaa.struct !163
  call void @_ZN10btSoftBody9transformERK11btTransform(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(64) %t)
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %t) #38
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6rotateERK12btQuaternion(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %rot) local_unnamed_addr #4 align 2 {
entry:
  %t = alloca %class.btTransform, align 4
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %t) #38
  %arrayidx3.i.i.i.i = getelementptr inbounds [4 x float], ptr %t, i64 0, i64 1
  %arrayidx3.i6.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 1, i32 0, i64 1
  %arrayidx5.i7.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 2, i32 0, i64 2
  %arrayidx7.i11.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 2, i32 0, i64 3
  %0 = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %0, i8 0, i64 16, i1 false)
  %1 = load float, ptr %rot, align 4, !tbaa !137
  %arrayidx3.i.i.i.i2 = getelementptr inbounds [4 x float], ptr %rot, i64 0, i64 1
  %2 = load float, ptr %arrayidx3.i.i.i.i2, align 4, !tbaa !137
  %mul5.i.i.i.i = fmul float %2, %2
  %3 = tail call float @llvm.fmuladd.f32(float %1, float %1, float %mul5.i.i.i.i)
  %arrayidx7.i.i.i.i = getelementptr inbounds [4 x float], ptr %rot, i64 0, i64 2
  %4 = load float, ptr %arrayidx7.i.i.i.i, align 4, !tbaa !137
  %5 = tail call float @llvm.fmuladd.f32(float %4, float %4, float %3)
  %arrayidx10.i.i.i.i = getelementptr inbounds [4 x float], ptr %rot, i64 0, i64 3
  %6 = load float, ptr %arrayidx10.i.i.i.i, align 4, !tbaa !137
  %7 = tail call float @llvm.fmuladd.f32(float %6, float %6, float %5)
  %div.i.i = fdiv float 2.000000e+00, %7
  %mul.i.i = fmul float %1, %div.i.i
  %mul4.i.i = fmul float %2, %div.i.i
  %mul6.i.i = fmul float %4, %div.i.i
  %mul8.i.i = fmul float %6, %mul.i.i
  %mul10.i.i = fmul float %6, %mul4.i.i
  %mul12.i.i = fmul float %6, %mul6.i.i
  %mul14.i.i = fmul float %1, %mul.i.i
  %mul16.i.i = fmul float %1, %mul4.i.i
  %mul18.i.i = fmul float %1, %mul6.i.i
  %mul20.i.i = fmul float %2, %mul4.i.i
  %mul22.i.i = fmul float %2, %mul6.i.i
  %mul24.i.i = fmul float %4, %mul6.i.i
  %add.i.i = fadd float %mul20.i.i, %mul24.i.i
  %sub.i.i = fsub float 1.000000e+00, %add.i.i
  %sub26.i.i = fsub float %mul16.i.i, %mul12.i.i
  %add28.i.i = fadd float %mul18.i.i, %mul10.i.i
  %add30.i.i = fadd float %mul16.i.i, %mul12.i.i
  %add32.i.i = fadd float %mul14.i.i, %mul24.i.i
  %sub33.i.i = fsub float 1.000000e+00, %add32.i.i
  %sub35.i.i = fsub float %mul22.i.i, %mul8.i.i
  %sub37.i.i = fsub float %mul18.i.i, %mul10.i.i
  %add39.i.i = fadd float %mul22.i.i, %mul8.i.i
  %add41.i.i = fadd float %mul14.i.i, %mul20.i.i
  %sub42.i.i = fsub float 1.000000e+00, %add41.i.i
  store float %sub.i.i, ptr %t, align 4, !tbaa !137
  store float %sub26.i.i, ptr %arrayidx3.i.i.i.i, align 4, !tbaa !137
  %arrayidx5.i.i.i.i = getelementptr inbounds [4 x float], ptr %t, i64 0, i64 2
  store float %add28.i.i, ptr %arrayidx5.i.i.i.i, align 4, !tbaa !137
  %arrayidx7.i.i80.i.i = getelementptr inbounds [4 x float], ptr %t, i64 0, i64 3
  store float 0.000000e+00, ptr %arrayidx7.i.i80.i.i, align 4, !tbaa !137
  %arrayidx3.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 1
  store float %add30.i.i, ptr %arrayidx3.i.i.i, align 4, !tbaa !137
  store float %sub33.i.i, ptr %arrayidx3.i6.i.i.i, align 4, !tbaa !137
  store float %sub35.i.i, ptr %arrayidx5.i7.i.i.i, align 4, !tbaa !137
  %arrayidx7.i8.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 1, i32 0, i64 3
  store float 0.000000e+00, ptr %arrayidx7.i8.i.i.i, align 4, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 2
  store float %sub37.i.i, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %arrayidx3.i9.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 2, i32 0, i64 1
  store float %add39.i.i, ptr %arrayidx3.i9.i.i.i, align 4, !tbaa !137
  store float %sub42.i.i, ptr %arrayidx5.i10.i.i.i, align 4, !tbaa !137
  store float 0.000000e+00, ptr %arrayidx7.i11.i.i.i, align 4, !tbaa !137
  call void @_ZN10btSoftBody9transformERK11btTransform(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(64) %t)
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %t) #38
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody5scaleERK9btVector3(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %scl) local_unnamed_addr #0 align 2 {
entry:
  %vol = alloca %struct.btDbvtAabbMm, align 8
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %0 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable = load ptr, ptr %0, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 11
  %1 = load ptr, ptr %vfn, align 8
  %call2 = tail call noundef float %1(ptr noundef nonnull align 8 dereferenceable(24) %0)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %vol) #38
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %2 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp23 = icmp sgt i32 %2, 0
  br i1 %cmp23, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %arrayidx5.i = getelementptr inbounds [4 x float], ptr %scl, i64 0, i64 1
  %arrayidx10.i = getelementptr inbounds [4 x float], ptr %scl, i64 0, i64 2
  %ref.tmp.sroa.4.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 8
  %ref.tmp.sroa.5.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 16
  %ref.tmp.sroa.6.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 24
  %m_ndbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  %wide.trip.count = zext i32 %2 to i64
  %3 = insertelement <2 x float> poison, float %call2, i64 0
  %4 = shufflevector <2 x float> %3, <2 x float> poison, <2 x i32> zeroinitializer
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  call void @_ZN10btSoftBody13updateNormalsEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  %m_ndbvt.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  %5 = load ptr, ptr %m_ndbvt.i, align 8, !tbaa !162
  %tobool.not.i = icmp eq ptr %5, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %for.cond.cleanup
  %mx.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %5, i64 0, i32 1
  %6 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable.i = load ptr, ptr %6, align 8, !tbaa !5
  %vfn.i = getelementptr inbounds ptr, ptr %vtable.i, i64 11
  %7 = load ptr, ptr %vfn.i, align 8
  %call9.i = call noundef float %7(ptr noundef nonnull align 8 dereferenceable(24) %6)
  %8 = load <2 x float>, ptr %5, align 4, !tbaa !137
  %9 = insertelement <2 x float> poison, float %call9.i, i64 0
  %10 = shufflevector <2 x float> %9, <2 x float> poison, <2 x i32> zeroinitializer
  %11 = fsub <2 x float> %8, %10
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %5, i64 0, i64 2
  %12 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %12, %call9.i
  %retval.sroa.3.12.vec.insert.i45.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i, i64 0
  %m_bounds.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  store <2 x float> %11, ptr %m_bounds.i, align 4, !tbaa.struct !163
  %ref.tmp12.sroa.4.0.arrayidx.sroa_idx.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 0, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i45.i, ptr %ref.tmp12.sroa.4.0.arrayidx.sroa_idx.i, align 4, !tbaa.struct !165
  %13 = load <2 x float>, ptr %mx.i.i, align 4, !tbaa !137
  %14 = fadd <2 x float> %10, %13
  %arrayidx11.i50.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %5, i64 0, i32 1, i32 0, i64 2
  %15 = load float, ptr %arrayidx11.i50.i, align 4, !tbaa !137
  %add14.i.i = fadd float %call9.i, %15
  %retval.sroa.3.12.vec.insert.i54.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i, i64 0
  %arrayidx19.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1
  store <2 x float> %14, ptr %arrayidx19.i, align 4, !tbaa.struct !163
  %ref.tmp15.sroa.4.0.arrayidx19.sroa_idx.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i54.i, ptr %ref.tmp15.sroa.4.0.arrayidx19.sroa_idx.i, align 4, !tbaa.struct !165
  %m_broadphaseHandle.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 8
  %16 = load ptr, ptr %m_broadphaseHandle.i.i, align 8, !tbaa !166
  %cmp.not.i = icmp eq ptr %16, null
  br i1 %cmp.not.i, label %_ZN10btSoftBody12updateBoundsEv.exit, label %if.then21.i

if.then21.i:                                      ; preds = %if.then.i
  %m_worldInfo.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 7
  %17 = load ptr, ptr %m_worldInfo.i, align 8, !tbaa !42
  %m_broadphase.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %17, i64 0, i32 4
  %18 = load ptr, ptr %m_broadphase.i, align 8, !tbaa !167
  %m_dispatcher.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %17, i64 0, i32 5
  %19 = load ptr, ptr %m_dispatcher.i, align 8, !tbaa !172
  %vtable28.i = load ptr, ptr %18, align 8, !tbaa !5
  %vfn29.i = getelementptr inbounds ptr, ptr %vtable28.i, i64 4
  %20 = load ptr, ptr %vfn29.i, align 8
  call void %20(ptr noundef nonnull align 8 dereferenceable(8) %18, ptr noundef nonnull %16, ptr noundef nonnull align 4 dereferenceable(16) %m_bounds.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx19.i, ptr noundef %19)
  br label %_ZN10btSoftBody12updateBoundsEv.exit

if.else.i:                                        ; preds = %for.cond.cleanup
  %m_bounds34.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %m_bounds34.i, i8 0, i64 32, i1 false)
  br label %_ZN10btSoftBody12updateBoundsEv.exit

_ZN10btSoftBody12updateBoundsEv.exit:             ; preds = %if.then.i, %if.then21.i, %if.else.i
  call void @_ZN10btSoftBody15updateConstantsEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %vol) #38
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %21 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %indvars.iv, i32 1
  %22 = load float, ptr %scl, align 4, !tbaa !137
  %23 = load float, ptr %m_x, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 1
  %24 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %25 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %indvars.iv, i32 2
  %26 = load float, ptr %m_q, align 4, !tbaa !137
  %arrayidx7.i17 = getelementptr inbounds [4 x float], ptr %m_q, i64 0, i64 1
  %27 = load float, ptr %arrayidx7.i17, align 4, !tbaa !137
  %arrayidx12.i20 = getelementptr inbounds [4 x float], ptr %m_q, i64 0, i64 2
  %28 = load float, ptr %arrayidx12.i20, align 4, !tbaa !137
  %mul.i = fmul float %22, %23
  store float %mul.i, ptr %m_x, align 4, !tbaa !137
  %29 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %mul8.i = fmul float %29, %24
  store float %mul8.i, ptr %arrayidx7.i, align 4, !tbaa !137
  %30 = load float, ptr %arrayidx10.i, align 4, !tbaa !137
  %mul13.i = fmul float %30, %25
  store float %mul13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %31 = load float, ptr %scl, align 4, !tbaa !137
  %mul.i15 = fmul float %31, %26
  store float %mul.i15, ptr %m_q, align 4, !tbaa !137
  %32 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %mul8.i18 = fmul float %32, %27
  store float %mul8.i18, ptr %arrayidx7.i17, align 4, !tbaa !137
  %33 = load float, ptr %arrayidx10.i, align 4, !tbaa !137
  %mul13.i21 = fmul float %33, %28
  store float %mul13.i21, ptr %arrayidx12.i20, align 4, !tbaa !137
  %34 = insertelement <2 x float> poison, float %mul.i, i64 0
  %35 = insertelement <2 x float> %34, float %mul8.i, i64 1
  %36 = fsub <2 x float> %35, %4
  %sub14.i.i.i = fsub float %mul13.i, %call2
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i.i, i64 0
  %37 = fadd <2 x float> %4, %35
  %add14.i.i.i = fadd float %call2, %mul13.i
  %retval.sroa.3.12.vec.insert.i12.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i.i, i64 0
  store <2 x float> %36, ptr %vol, align 8, !tbaa.struct !297
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i, ptr %ref.tmp.sroa.4.0.vol.sroa_idx, align 8, !tbaa.struct !298
  store <2 x float> %37, ptr %ref.tmp.sroa.5.0.vol.sroa_idx, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i12.i.i, ptr %ref.tmp.sroa.6.0.vol.sroa_idx, align 8, !tbaa.struct !165
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 %indvars.iv, i32 8
  %38 = load ptr, ptr %m_leaf, align 8, !tbaa !183
  call void @_ZN6btDbvt6updateEP10btDbvtNodeR12btDbvtAabbMm(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt, ptr noundef %38, ptr noundef nonnull align 4 dereferenceable(32) %vol)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody7setPoseEbb(ptr noundef nonnull align 8 dereferenceable(1496) %this, i1 noundef zeroext %bvolume, i1 noundef zeroext %bframe) local_unnamed_addr #0 align 2 {
entry:
  %frombool = zext i1 %bvolume to i8
  %frombool1 = zext i1 %bframe to i8
  %m_pose = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5
  store i8 %frombool, ptr %m_pose, align 8, !tbaa !142
  %m_bframe = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 1
  store i8 %frombool1, ptr %m_bframe, align 1, !tbaa !143
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  %cmp6.i = icmp sgt i32 %0, 0
  br i1 %cmp6.i, label %for.body.lr.ph.i, label %_ZNK10btSoftBody12getTotalMassEv.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %1 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !87
  %wide.trip.count.i = zext i32 %0 to i64
  %xtraiter = and i64 %wide.trip.count.i, 1
  %2 = icmp eq i32 %0, 1
  br i1 %2, label %_ZNK10btSoftBody12getTotalMassEv.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %wide.trip.count.i, 4294967294
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.1, %for.body.i ]
  %mass.07.i = phi float [ 0.000000e+00, %for.body.lr.ph.i.new ], [ %add.i.1, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.1, %for.body.i ]
  %m_im.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.i, i32 6
  %3 = load float, ptr %m_im.i.i, align 8, !tbaa !175
  %cmp.i.i = fcmp ogt float %3, 0.000000e+00
  %div.i.i = fdiv float 1.000000e+00, %3
  %cond.i.i = select i1 %cmp.i.i, float %div.i.i, float 0.000000e+00
  %add.i = fadd float %mass.07.i, %cond.i.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %m_im.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.next.i, i32 6
  %4 = load float, ptr %m_im.i.i.1, align 8, !tbaa !175
  %cmp.i.i.1 = fcmp ogt float %4, 0.000000e+00
  %div.i.i.1 = fdiv float 1.000000e+00, %4
  %cond.i.i.1 = select i1 %cmp.i.i.1, float %div.i.i.1, float 0.000000e+00
  %add.i.1 = fadd float %add.i, %cond.i.i.1
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK10btSoftBody12getTotalMassEv.exit.loopexit.unr-lcssa, label %for.body.i

_ZNK10btSoftBody12getTotalMassEv.exit.loopexit.unr-lcssa: ; preds = %for.body.i, %for.body.lr.ph.i
  %add.i.lcssa.ph = phi float [ undef, %for.body.lr.ph.i ], [ %add.i.1, %for.body.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i.1, %for.body.i ]
  %mass.07.i.unr = phi float [ 0.000000e+00, %for.body.lr.ph.i ], [ %add.i.1, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK10btSoftBody12getTotalMassEv.exit, label %for.body.i.epil

for.body.i.epil:                                  ; preds = %_ZNK10btSoftBody12getTotalMassEv.exit.loopexit.unr-lcssa
  %m_im.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 %indvars.iv.i.unr, i32 6
  %5 = load float, ptr %m_im.i.i.epil, align 8, !tbaa !175
  %cmp.i.i.epil = fcmp ogt float %5, 0.000000e+00
  %div.i.i.epil = fdiv float 1.000000e+00, %5
  %cond.i.i.epil = select i1 %cmp.i.i.epil, float %div.i.i.epil, float 0.000000e+00
  %add.i.epil = fadd float %mass.07.i.unr, %cond.i.i.epil
  br label %_ZNK10btSoftBody12getTotalMassEv.exit

_ZNK10btSoftBody12getTotalMassEv.exit:            ; preds = %for.body.i.epil, %_ZNK10btSoftBody12getTotalMassEv.exit.loopexit.unr-lcssa, %entry
  %mass.0.lcssa.i = phi float [ 0.000000e+00, %entry ], [ %add.i.lcssa.ph, %_ZNK10btSoftBody12getTotalMassEv.exit.loopexit.unr-lcssa ], [ %add.i.epil, %for.body.i.epil ]
  %conv = sitofp i32 %0 to float
  %mul = fmul float %mass.0.lcssa.i, %conv
  %mul8 = fmul float %mul, 1.000000e+03
  %m_size.i.i153 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 2
  %6 = load i32, ptr %m_size.i.i153, align 4, !tbaa !40
  %cmp4.i = icmp slt i32 %6, %0
  br i1 %cmp4.i, label %if.then5.i, label %_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit

if.then5.i:                                       ; preds = %_ZNK10btSoftBody12getTotalMassEv.exit
  %m_capacity.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 3
  %7 = load i32, ptr %m_capacity.i.i.i, align 8, !tbaa !41
  %cmp.i.i154 = icmp slt i32 %7, %0
  br i1 %cmp.i.i154, label %if.then.i.i, label %if.then5.i.for.body10.lr.ph.i_crit_edge

if.then5.i.for.body10.lr.ph.i_crit_edge:          ; preds = %if.then5.i
  %m_data11.i.phi.trans.insert = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  %.pre = load ptr, ptr %m_data11.i.phi.trans.insert, align 8, !tbaa !39
  br label %for.body10.lr.ph.i

if.then.i.i:                                      ; preds = %if.then5.i
  %tobool.not.i.i.i = icmp eq i32 %0, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %0 to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 2
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i153, align 4, !tbaa !40
  br label %_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %8 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %6, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %8, 0
  %m_data.i.i.i155 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  %9 = load ptr, ptr %m_data.i.i.i155, align 8, !tbaa !39
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIfE4copyEiiPf.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i
  %10 = ptrtoint ptr %9 to i64
  %retval.0.i.i.i367 = ptrtoint ptr %retval.0.i.i.i to i64
  %wide.trip.count.i.i.i = zext i32 %8 to i64
  %min.iters.check = icmp ult i32 %8, 8
  %11 = sub i64 %retval.0.i.i.i367, %10
  %diff.check = icmp ult i64 %11, 32
  %or.cond386 = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond386, label %for.body.i.i.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i.i
  %n.vec = and i64 %wide.trip.count.i.i.i, 4294967288
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %12 = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %index
  %13 = getelementptr inbounds float, ptr %9, i64 %index
  %wide.load = load <4 x float>, ptr %13, align 4, !tbaa !137
  %14 = getelementptr inbounds float, ptr %13, i64 4
  %wide.load368 = load <4 x float>, ptr %14, align 4, !tbaa !137
  store <4 x float> %wide.load, ptr %12, align 4, !tbaa !137
  %15 = getelementptr inbounds float, ptr %12, i64 4
  store <4 x float> %wide.load368, ptr %15, align 4, !tbaa !137
  %index.next = add nuw i64 %index, 8
  %16 = icmp eq i64 %index.next, %n.vec
  br i1 %16, label %middle.block, label %vector.body, !llvm.loop !305

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i.i
  br i1 %cmp.n, label %if.then.i11.i.i, label %for.body.i.i.i.preheader

for.body.i.i.i.preheader:                         ; preds = %for.body.lr.ph.i.i.i, %middle.block
  %indvars.iv.i.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %n.vec, %middle.block ]
  %17 = xor i64 %indvars.iv.i.i.i.ph, -1
  %18 = add nsw i64 %17, %wide.trip.count.i.i.i
  %xtraiter393 = and i64 %wide.trip.count.i.i.i, 3
  %lcmp.mod394.not = icmp eq i64 %xtraiter393, 0
  br i1 %lcmp.mod394.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol

for.body.i.i.i.prol:                              ; preds = %for.body.i.i.i.preheader, %for.body.i.i.i.prol
  %indvars.iv.i.i.i.prol = phi i64 [ %indvars.iv.next.i.i.i.prol, %for.body.i.i.i.prol ], [ %indvars.iv.i.i.i.ph, %for.body.i.i.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.i.i.prol ], [ 0, %for.body.i.i.i.preheader ]
  %arrayidx.i.i.i.prol = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.prol
  %arrayidx3.i.i.i.prol = getelementptr inbounds float, ptr %9, i64 %indvars.iv.i.i.i.prol
  %19 = load float, ptr %arrayidx3.i.i.i.prol, align 4, !tbaa !137
  store float %19, ptr %arrayidx.i.i.i.prol, align 4, !tbaa !137
  %indvars.iv.next.i.i.i.prol = add nuw nsw i64 %indvars.iv.i.i.i.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter393
  br i1 %prol.iter.cmp.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol, !llvm.loop !306

for.body.i.i.i.prol.loopexit:                     ; preds = %for.body.i.i.i.prol, %for.body.i.i.i.preheader
  %indvars.iv.i.i.i.unr = phi i64 [ %indvars.iv.i.i.i.ph, %for.body.i.i.i.preheader ], [ %indvars.iv.next.i.i.i.prol, %for.body.i.i.i.prol ]
  %20 = icmp ult i64 %18, 3
  br i1 %20, label %if.then.i11.i.i, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i
  %indvars.iv.i.i.i = phi i64 [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ], [ %indvars.iv.i.i.i.unr, %for.body.i.i.i.prol.loopexit ]
  %arrayidx.i.i.i = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %arrayidx3.i.i.i = getelementptr inbounds float, ptr %9, i64 %indvars.iv.i.i.i
  %21 = load float, ptr %arrayidx3.i.i.i, align 4, !tbaa !137
  store float %21, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %indvars.iv.next.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %arrayidx3.i.i.i.1 = getelementptr inbounds float, ptr %9, i64 %indvars.iv.next.i.i.i
  %22 = load float, ptr %arrayidx3.i.i.i.1, align 4, !tbaa !137
  store float %22, ptr %arrayidx.i.i.i.1, align 4, !tbaa !137
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %arrayidx3.i.i.i.2 = getelementptr inbounds float, ptr %9, i64 %indvars.iv.next.i.i.i.1
  %23 = load float, ptr %arrayidx3.i.i.i.2, align 4, !tbaa !137
  store float %23, ptr %arrayidx.i.i.i.2, align 4, !tbaa !137
  %indvars.iv.next.i.i.i.2 = add nuw nsw i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %arrayidx3.i.i.i.3 = getelementptr inbounds float, ptr %9, i64 %indvars.iv.next.i.i.i.2
  %24 = load float, ptr %arrayidx3.i.i.i.3, align 4, !tbaa !137
  store float %24, ptr %arrayidx.i.i.i.3, align 4, !tbaa !137
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %exitcond.not.i.i.i.3 = icmp eq i64 %indvars.iv.next.i.i.i.3, %wide.trip.count.i.i.i
  br i1 %exitcond.not.i.i.i.3, label %if.then.i11.i.i, label %for.body.i.i.i, !llvm.loop !307

_ZNK20btAlignedObjectArrayIfE4copyEiiPf.exit.i.i: ; preds = %_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i
  %tobool.not.i10.i.i = icmp eq ptr %9, null
  br i1 %tobool.not.i10.i.i, label %if.end.thread36.i, label %if.then.i11.i.i

if.end.thread36.i:                                ; preds = %_ZNK20btAlignedObjectArrayIfE4copyEiiPf.exit.i.i
  %m_ownsMemory.i37.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 6
  store i8 1, ptr %m_ownsMemory.i37.i, align 8, !tbaa !36
  store ptr %retval.0.i.i.i, ptr %m_data.i.i.i155, align 8, !tbaa !39
  store i32 %0, ptr %m_capacity.i.i.i, align 8, !tbaa !41
  br label %for.body10.lr.ph.i

if.then.i11.i.i:                                  ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i, %middle.block, %_ZNK20btAlignedObjectArrayIfE4copyEiiPf.exit.i.i
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 6
  %25 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !36, !range !159, !noundef !192
  %tobool2.not.i.i.i = icmp eq i8 %25, 0
  br i1 %tobool2.not.i.i.i, label %if.end.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %if.then.i11.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %9)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i.i.i, %if.then.i11.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !36
  store ptr %retval.0.i.i.i, ptr %m_data.i.i.i155, align 8, !tbaa !39
  store i32 %0, ptr %m_capacity.i.i.i, align 8, !tbaa !41
  br label %for.body10.lr.ph.i

for.body10.lr.ph.i:                               ; preds = %if.then5.i.for.body10.lr.ph.i_crit_edge, %if.end.i, %if.end.thread36.i
  %26 = phi ptr [ %.pre, %if.then5.i.for.body10.lr.ph.i_crit_edge ], [ %retval.0.i.i.i, %if.end.i ], [ %retval.0.i.i.i, %if.end.thread36.i ]
  %27 = sext i32 %6 to i64
  %wide.trip.count.i156 = sext i32 %0 to i64
  %28 = shl nsw i64 %27, 2
  %scevgep = getelementptr i8, ptr %26, i64 %28
  %29 = sub nsw i64 %wide.trip.count.i156, %27
  %30 = shl nsw i64 %29, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %scevgep, i8 0, i64 %30, i1 false), !tbaa !137
  %.pre356 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  br label %_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit

_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit:    ; preds = %for.body10.lr.ph.i, %_ZNK10btSoftBody12getTotalMassEv.exit
  %31 = phi i32 [ %.pre356, %for.body10.lr.ph.i ], [ %0, %_ZNK10btSoftBody12getTotalMassEv.exit ]
  store i32 %0, ptr %m_size.i.i153, align 4, !tbaa !40
  %cmp323 = icmp sgt i32 %31, 0
  br i1 %cmp323, label %for.body.lr.ph, label %_ZNK10btSoftBody11evaluateComEv.exit

for.body.lr.ph:                                   ; preds = %_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %32 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %wide.trip.count = zext i32 %31 to i64
  %33 = add nsw i64 %wide.trip.count, -1
  %xtraiter395 = and i64 %wide.trip.count, 1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %for.cond19.preheader.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter398 = and i64 %wide.trip.count, 4294967294
  br label %for.body

for.cond19.preheader.unr-lcssa:                   ; preds = %for.body, %for.body.lr.ph
  %tmass.1.lcssa.ph = phi float [ undef, %for.body.lr.ph ], [ %tmass.1.1, %for.body ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.1, %for.body ]
  %tmass.0324.unr = phi float [ %mass.0.lcssa.i, %for.body.lr.ph ], [ %tmass.1.1, %for.body ]
  %lcmp.mod396.not = icmp eq i64 %xtraiter395, 0
  br i1 %lcmp.mod396.not, label %for.cond19.preheader, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond19.preheader.unr-lcssa
  %m_im.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %32, i64 %indvars.iv.unr, i32 6
  %35 = load float, ptr %m_im.epil, align 8, !tbaa !175
  %cmp16.epil = fcmp ugt float %35, 0.000000e+00
  %add.epil = select i1 %cmp16.epil, float -0.000000e+00, float %mul8
  %tmass.1.epil = fadd float %tmass.0324.unr, %add.epil
  br label %for.cond19.preheader

for.cond19.preheader:                             ; preds = %for.cond19.preheader.unr-lcssa, %for.body.epil
  %tmass.1.lcssa = phi float [ %tmass.1.lcssa.ph, %for.cond19.preheader.unr-lcssa ], [ %tmass.1.epil, %for.body.epil ]
  br i1 %cmp323, label %for.body21.lr.ph, label %_ZNK10btSoftBody11evaluateComEv.exit

for.body21.lr.ph:                                 ; preds = %for.cond19.preheader
  %m_data.i162 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %36 = load ptr, ptr %m_data.i162, align 8, !tbaa !87
  %div30 = fdiv float %mul8, %tmass.1.lcssa
  %m_data.i168 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  %37 = load ptr, ptr %m_data.i168, align 8, !tbaa !39
  %wide.trip.count344 = zext i32 %31 to i64
  %min.iters.check375 = icmp ult i32 %31, 4
  br i1 %min.iters.check375, label %for.body21.preheader, label %vector.memcheck369

vector.memcheck369:                               ; preds = %for.body21.lr.ph
  %38 = shl nuw nsw i64 %wide.trip.count, 2
  %scevgep370 = getelementptr i8, ptr %37, i64 %38
  %scevgep371 = getelementptr i8, ptr %36, i64 96
  %39 = mul nuw nsw i64 %wide.trip.count, 120
  %40 = add nsw i64 %39, -20
  %scevgep372 = getelementptr i8, ptr %36, i64 %40
  %bound0 = icmp ult ptr %37, %scevgep372
  %bound1 = icmp ult ptr %scevgep371, %scevgep370
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body21.preheader, label %vector.ph376

vector.ph376:                                     ; preds = %vector.memcheck369
  %n.vec378 = and i64 %wide.trip.count, 4294967292
  %broadcast.splatinsert = insertelement <4 x float> poison, float %tmass.1.lcssa, i64 0
  %broadcast.splat = shufflevector <4 x float> %broadcast.splatinsert, <4 x float> poison, <4 x i32> zeroinitializer
  %broadcast.splatinsert383 = insertelement <4 x float> poison, float %div30, i64 0
  %broadcast.splat384 = shufflevector <4 x float> %broadcast.splatinsert383, <4 x float> poison, <4 x i32> zeroinitializer
  br label %vector.body381

vector.body381:                                   ; preds = %vector.body381, %vector.ph376
  %index382 = phi i64 [ 0, %vector.ph376 ], [ %index.next385, %vector.body381 ]
  %41 = or i64 %index382, 1
  %42 = or i64 %index382, 2
  %43 = or i64 %index382, 3
  %44 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %36, i64 %index382, i32 6
  %45 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %36, i64 %41, i32 6
  %46 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %36, i64 %42, i32 6
  %47 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %36, i64 %43, i32 6
  %48 = load float, ptr %44, align 8, !tbaa !175, !alias.scope !308
  %49 = load float, ptr %45, align 8, !tbaa !175, !alias.scope !308
  %50 = load float, ptr %46, align 8, !tbaa !175, !alias.scope !308
  %51 = load float, ptr %47, align 8, !tbaa !175, !alias.scope !308
  %52 = insertelement <4 x float> poison, float %48, i64 0
  %53 = insertelement <4 x float> %52, float %49, i64 1
  %54 = insertelement <4 x float> %53, float %50, i64 2
  %55 = insertelement <4 x float> %54, float %51, i64 3
  %56 = fcmp ogt <4 x float> %55, zeroinitializer
  %57 = fmul <4 x float> %broadcast.splat, %55
  %58 = fdiv <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>, %57
  %59 = select <4 x i1> %56, <4 x float> %58, <4 x float> %broadcast.splat384
  %60 = getelementptr inbounds float, ptr %37, i64 %index382
  store <4 x float> %59, ptr %60, align 4, !tbaa !137, !alias.scope !311, !noalias !308
  %index.next385 = add nuw i64 %index382, 4
  %61 = icmp eq i64 %index.next385, %n.vec378
  br i1 %61, label %middle.block373, label %vector.body381, !llvm.loop !313

middle.block373:                                  ; preds = %vector.body381
  %cmp.n380 = icmp eq i64 %n.vec378, %wide.trip.count
  br i1 %cmp.n380, label %for.end36, label %for.body21.preheader

for.body21.preheader:                             ; preds = %vector.memcheck369, %for.body21.lr.ph, %middle.block373
  %indvars.iv341.ph = phi i64 [ 0, %vector.memcheck369 ], [ 0, %for.body21.lr.ph ], [ %n.vec378, %middle.block373 ]
  %62 = xor i64 %indvars.iv341.ph, -1
  %xtraiter400 = and i64 %wide.trip.count, 1
  %lcmp.mod401.not = icmp eq i64 %xtraiter400, 0
  br i1 %lcmp.mod401.not, label %for.body21.prol.loopexit, label %for.body21.prol

for.body21.prol:                                  ; preds = %for.body21.preheader
  %m_im24.prol = getelementptr inbounds %"struct.btSoftBody::Node", ptr %36, i64 %indvars.iv341.ph, i32 6
  %63 = load float, ptr %m_im24.prol, align 8, !tbaa !175
  %cmp25.prol = fcmp ogt float %63, 0.000000e+00
  %mul29.prol = fmul float %tmass.1.lcssa, %63
  %div.prol = fdiv float 1.000000e+00, %mul29.prol
  %cond.prol = select i1 %cmp25.prol, float %div.prol, float %div30
  %arrayidx.i170.prol = getelementptr inbounds float, ptr %37, i64 %indvars.iv341.ph
  store float %cond.prol, ptr %arrayidx.i170.prol, align 4, !tbaa !137
  %indvars.iv.next342.prol = or i64 %indvars.iv341.ph, 1
  br label %for.body21.prol.loopexit

for.body21.prol.loopexit:                         ; preds = %for.body21.prol, %for.body21.preheader
  %indvars.iv341.unr = phi i64 [ %indvars.iv341.ph, %for.body21.preheader ], [ %indvars.iv.next342.prol, %for.body21.prol ]
  %64 = sub nsw i64 0, %wide.trip.count
  %65 = icmp eq i64 %62, %64
  br i1 %65, label %for.end36, label %for.body21

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.1, %for.body ]
  %tmass.0324 = phi float [ %mass.0.lcssa.i, %for.body.lr.ph.new ], [ %tmass.1.1, %for.body ]
  %niter399 = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter399.next.1, %for.body ]
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %32, i64 %indvars.iv, i32 6
  %66 = load float, ptr %m_im, align 8, !tbaa !175
  %cmp16 = fcmp ugt float %66, 0.000000e+00
  %add = select i1 %cmp16, float -0.000000e+00, float %mul8
  %tmass.1 = fadd float %tmass.0324, %add
  %indvars.iv.next = or i64 %indvars.iv, 1
  %m_im.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %32, i64 %indvars.iv.next, i32 6
  %67 = load float, ptr %m_im.1, align 8, !tbaa !175
  %cmp16.1 = fcmp ugt float %67, 0.000000e+00
  %add.1 = select i1 %cmp16.1, float -0.000000e+00, float %mul8
  %tmass.1.1 = fadd float %tmass.1, %add.1
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter399.next.1 = add i64 %niter399, 2
  %niter399.ncmp.1 = icmp eq i64 %niter399.next.1, %unroll_iter398
  br i1 %niter399.ncmp.1, label %for.cond19.preheader.unr-lcssa, label %for.body

for.body21:                                       ; preds = %for.body21.prol.loopexit, %for.body21
  %indvars.iv341 = phi i64 [ %indvars.iv.next342.1, %for.body21 ], [ %indvars.iv341.unr, %for.body21.prol.loopexit ]
  %m_im24 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %36, i64 %indvars.iv341, i32 6
  %68 = load float, ptr %m_im24, align 8, !tbaa !175
  %cmp25 = fcmp ogt float %68, 0.000000e+00
  %mul29 = fmul float %tmass.1.lcssa, %68
  %div = fdiv float 1.000000e+00, %mul29
  %cond = select i1 %cmp25, float %div, float %div30
  %arrayidx.i170 = getelementptr inbounds float, ptr %37, i64 %indvars.iv341
  store float %cond, ptr %arrayidx.i170, align 4, !tbaa !137
  %indvars.iv.next342 = add nuw nsw i64 %indvars.iv341, 1
  %m_im24.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %36, i64 %indvars.iv.next342, i32 6
  %69 = load float, ptr %m_im24.1, align 8, !tbaa !175
  %cmp25.1 = fcmp ogt float %69, 0.000000e+00
  %mul29.1 = fmul float %tmass.1.lcssa, %69
  %div.1 = fdiv float 1.000000e+00, %mul29.1
  %cond.1 = select i1 %cmp25.1, float %div.1, float %div30
  %arrayidx.i170.1 = getelementptr inbounds float, ptr %37, i64 %indvars.iv.next342
  store float %cond.1, ptr %arrayidx.i170.1, align 4, !tbaa !137
  %indvars.iv.next342.1 = add nuw nsw i64 %indvars.iv341, 2
  %exitcond345.not.1 = icmp eq i64 %indvars.iv.next342.1, %wide.trip.count344
  br i1 %exitcond345.not.1, label %for.end36, label %for.body21, !llvm.loop !314

for.end36:                                        ; preds = %for.body21.prol.loopexit, %for.body21, %middle.block373
  %70 = load i8, ptr %m_bframe, align 1, !tbaa !143, !range !159, !noundef !192
  %tobool.not.i = icmp ne i8 %70, 0
  %or.cond321 = and i1 %cmp323, %tobool.not.i
  br i1 %or.cond321, label %for.body.lr.ph.i173, label %_ZNK10btSoftBody11evaluateComEv.exit

for.body.lr.ph.i173:                              ; preds = %for.end36
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %71 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %m_data.i15.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  %72 = load ptr, ptr %m_data.i15.i, align 8, !tbaa !39
  %xtraiter403 = and i64 %wide.trip.count, 1
  %73 = icmp eq i64 %33, 0
  br i1 %73, label %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i173.new

for.body.lr.ph.i173.new:                          ; preds = %for.body.lr.ph.i173
  %unroll_iter407 = and i64 %wide.trip.count, 4294967294
  br label %for.body.i177

for.body.i177:                                    ; preds = %for.body.i177, %for.body.lr.ph.i173.new
  %indvars.iv.i174 = phi i64 [ 0, %for.body.lr.ph.i173.new ], [ %indvars.iv.next.i175.1, %for.body.i177 ]
  %retval.sroa.7.035.i = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i173.new ], [ %retval.sroa.7.8.vec.insert32.i.1, %for.body.i177 ]
  %retval.sroa.0.034.i = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i173.new ], [ %87, %for.body.i177 ]
  %niter408 = phi i64 [ 0, %for.body.lr.ph.i173.new ], [ %niter408.next.1, %for.body.i177 ]
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %71, i64 %indvars.iv.i174, i32 1
  %arrayidx.i17.i = getelementptr inbounds float, ptr %72, i64 %indvars.iv.i174
  %74 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx7.i19.i = getelementptr inbounds [4 x float], ptr %m_x.i, i64 0, i64 2
  %75 = load float, ptr %arrayidx7.i19.i, align 4, !tbaa !137
  %mul8.i.i = fmul float %74, %75
  %76 = load <2 x float>, ptr %m_x.i, align 4, !tbaa !137
  %77 = insertelement <2 x float> poison, float %74, i64 0
  %78 = shufflevector <2 x float> %77, <2 x float> poison, <2 x i32> zeroinitializer
  %79 = fmul <2 x float> %78, %76
  %80 = fadd <2 x float> %retval.sroa.0.034.i, %79
  %retval.sroa.7.8.vec.extract.i = extractelement <2 x float> %retval.sroa.7.035.i, i64 0
  %add13.i.i = fadd float %retval.sroa.7.8.vec.extract.i, %mul8.i.i
  %indvars.iv.next.i175 = or i64 %indvars.iv.i174, 1
  %m_x.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %71, i64 %indvars.iv.next.i175, i32 1
  %arrayidx.i17.i.1 = getelementptr inbounds float, ptr %72, i64 %indvars.iv.next.i175
  %81 = load float, ptr %arrayidx.i17.i.1, align 4, !tbaa !137
  %arrayidx7.i19.i.1 = getelementptr inbounds [4 x float], ptr %m_x.i.1, i64 0, i64 2
  %82 = load float, ptr %arrayidx7.i19.i.1, align 4, !tbaa !137
  %mul8.i.i.1 = fmul float %81, %82
  %83 = load <2 x float>, ptr %m_x.i.1, align 4, !tbaa !137
  %84 = insertelement <2 x float> poison, float %81, i64 0
  %85 = shufflevector <2 x float> %84, <2 x float> poison, <2 x i32> zeroinitializer
  %86 = fmul <2 x float> %85, %83
  %87 = fadd <2 x float> %80, %86
  %add13.i.i.1 = fadd float %add13.i.i, %mul8.i.i.1
  %retval.sroa.7.8.vec.insert32.i.1 = insertelement <2 x float> %retval.sroa.7.035.i, float %add13.i.i.1, i64 0
  %indvars.iv.next.i175.1 = add nuw nsw i64 %indvars.iv.i174, 2
  %niter408.next.1 = add i64 %niter408, 2
  %niter408.ncmp.1 = icmp eq i64 %niter408.next.1, %unroll_iter407
  br i1 %niter408.ncmp.1, label %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa, label %for.body.i177

_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa: ; preds = %for.body.i177, %for.body.lr.ph.i173
  %.lcssa391.ph = phi <2 x float> [ undef, %for.body.lr.ph.i173 ], [ %87, %for.body.i177 ]
  %retval.sroa.7.8.vec.insert32.i.lcssa.ph = phi <2 x float> [ undef, %for.body.lr.ph.i173 ], [ %retval.sroa.7.8.vec.insert32.i.1, %for.body.i177 ]
  %indvars.iv.i174.unr = phi i64 [ 0, %for.body.lr.ph.i173 ], [ %indvars.iv.next.i175.1, %for.body.i177 ]
  %retval.sroa.7.035.i.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i173 ], [ %retval.sroa.7.8.vec.insert32.i.1, %for.body.i177 ]
  %retval.sroa.0.034.i.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i173 ], [ %87, %for.body.i177 ]
  %lcmp.mod404.not = icmp eq i64 %xtraiter403, 0
  br i1 %lcmp.mod404.not, label %_ZNK10btSoftBody11evaluateComEv.exit, label %for.body.i177.epil

for.body.i177.epil:                               ; preds = %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa
  %m_x.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %71, i64 %indvars.iv.i174.unr, i32 1
  %arrayidx.i17.i.epil = getelementptr inbounds float, ptr %72, i64 %indvars.iv.i174.unr
  %88 = load float, ptr %arrayidx.i17.i.epil, align 4, !tbaa !137
  %arrayidx7.i19.i.epil = getelementptr inbounds [4 x float], ptr %m_x.i.epil, i64 0, i64 2
  %89 = load float, ptr %arrayidx7.i19.i.epil, align 4, !tbaa !137
  %mul8.i.i.epil = fmul float %88, %89
  %90 = load <2 x float>, ptr %m_x.i.epil, align 4, !tbaa !137
  %91 = insertelement <2 x float> poison, float %88, i64 0
  %92 = shufflevector <2 x float> %91, <2 x float> poison, <2 x i32> zeroinitializer
  %93 = fmul <2 x float> %92, %90
  %94 = fadd <2 x float> %retval.sroa.0.034.i.unr, %93
  %retval.sroa.7.8.vec.extract.i.epil = extractelement <2 x float> %retval.sroa.7.035.i.unr, i64 0
  %add13.i.i.epil = fadd float %retval.sroa.7.8.vec.extract.i.epil, %mul8.i.i.epil
  %retval.sroa.7.8.vec.insert32.i.epil = insertelement <2 x float> %retval.sroa.7.035.i.unr, float %add13.i.i.epil, i64 0
  br label %_ZNK10btSoftBody11evaluateComEv.exit

_ZNK10btSoftBody11evaluateComEv.exit:             ; preds = %for.body.i177.epil, %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit, %for.cond19.preheader, %for.end36
  %retval.sroa.0.1.i = phi <2 x float> [ zeroinitializer, %for.end36 ], [ zeroinitializer, %for.cond19.preheader ], [ zeroinitializer, %_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit ], [ %.lcssa391.ph, %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa ], [ %94, %for.body.i177.epil ]
  %retval.sroa.7.1.i = phi <2 x float> [ zeroinitializer, %for.end36 ], [ zeroinitializer, %for.cond19.preheader ], [ zeroinitializer, %_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit ], [ %retval.sroa.7.8.vec.insert32.i.lcssa.ph, %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa ], [ %retval.sroa.7.8.vec.insert32.i.epil, %for.body.i177.epil ]
  %m_size.i.i180 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 2
  %95 = load i32, ptr %m_size.i.i180, align 4, !tbaa !34
  %cmp4.i182 = icmp slt i32 %95, %31
  br i1 %cmp4.i182, label %if.then5.i186, label %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit

if.then5.i186:                                    ; preds = %_ZNK10btSoftBody11evaluateComEv.exit
  %m_capacity.i.i.i184 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 3
  %96 = load i32, ptr %m_capacity.i.i.i184, align 8, !tbaa !35
  %cmp.i.i185 = icmp slt i32 %96, %31
  br i1 %cmp.i.i185, label %if.then.i.i188, label %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit.loopexit

if.then.i.i188:                                   ; preds = %if.then5.i186
  %tobool.not.i.i.i187 = icmp eq i32 %31, 0
  br i1 %tobool.not.i.i.i187, label %_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i, label %if.then.i.i.i193

if.then.i.i.i193:                                 ; preds = %if.then.i.i188
  %conv.i.i.i.i189 = sext i32 %31 to i64
  %mul.i.i.i.i190 = shl nsw i64 %conv.i.i.i.i189, 4
  %call.i.i.i.i191 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i190, i32 noundef 16)
  %.pre.i192 = load i32, ptr %m_size.i.i180, align 4, !tbaa !34
  br label %_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i: ; preds = %if.then.i.i.i193, %if.then.i.i188
  %97 = phi i32 [ %.pre.i192, %if.then.i.i.i193 ], [ %95, %if.then.i.i188 ]
  %retval.0.i.i.i194 = phi ptr [ %call.i.i.i.i191, %if.then.i.i.i193 ], [ null, %if.then.i.i188 ]
  %cmp7.i.i.i195 = icmp sgt i32 %97, 0
  br i1 %cmp7.i.i.i195, label %for.body.lr.ph.i.i.i198, label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i

for.body.lr.ph.i.i.i198:                          ; preds = %_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i
  %m_data.i.i.i196 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 5
  %wide.trip.count.i.i.i197 = zext i32 %97 to i64
  %xtraiter409 = and i64 %wide.trip.count.i.i.i197, 1
  %98 = icmp eq i32 %97, 1
  br i1 %98, label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i198.new

for.body.lr.ph.i.i.i198.new:                      ; preds = %for.body.lr.ph.i.i.i198
  %unroll_iter411 = and i64 %wide.trip.count.i.i.i197, 4294967294
  br label %for.body.i.i.i204

for.body.i.i.i204:                                ; preds = %for.body.i.i.i204, %for.body.lr.ph.i.i.i198.new
  %indvars.iv.i.i.i199 = phi i64 [ 0, %for.body.lr.ph.i.i.i198.new ], [ %indvars.iv.next.i.i.i202.1, %for.body.i.i.i204 ]
  %niter412 = phi i64 [ 0, %for.body.lr.ph.i.i.i198.new ], [ %niter412.next.1, %for.body.i.i.i204 ]
  %arrayidx.i.i.i200 = getelementptr inbounds %class.btVector3, ptr %retval.0.i.i.i194, i64 %indvars.iv.i.i.i199
  %99 = load ptr, ptr %m_data.i.i.i196, align 8, !tbaa !33
  %arrayidx3.i.i.i201 = getelementptr inbounds %class.btVector3, ptr %99, i64 %indvars.iv.i.i.i199
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx.i.i.i200, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i201, i64 16, i1 false), !tbaa.struct !163
  %indvars.iv.next.i.i.i202 = or i64 %indvars.iv.i.i.i199, 1
  %arrayidx.i.i.i200.1 = getelementptr inbounds %class.btVector3, ptr %retval.0.i.i.i194, i64 %indvars.iv.next.i.i.i202
  %100 = load ptr, ptr %m_data.i.i.i196, align 8, !tbaa !33
  %arrayidx3.i.i.i201.1 = getelementptr inbounds %class.btVector3, ptr %100, i64 %indvars.iv.next.i.i.i202
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx.i.i.i200.1, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i201.1, i64 16, i1 false), !tbaa.struct !163
  %indvars.iv.next.i.i.i202.1 = add nuw nsw i64 %indvars.iv.i.i.i199, 2
  %niter412.next.1 = add i64 %niter412, 2
  %niter412.ncmp.1 = icmp eq i64 %niter412.next.1, %unroll_iter411
  br i1 %niter412.ncmp.1, label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i204

_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i204, %for.body.lr.ph.i.i.i198
  %indvars.iv.i.i.i199.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i198 ], [ %indvars.iv.next.i.i.i202.1, %for.body.i.i.i204 ]
  %lcmp.mod410.not = icmp eq i64 %xtraiter409, 0
  br i1 %lcmp.mod410.not, label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i, label %for.body.i.i.i204.epil

for.body.i.i.i204.epil:                           ; preds = %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i200.epil = getelementptr inbounds %class.btVector3, ptr %retval.0.i.i.i194, i64 %indvars.iv.i.i.i199.unr
  %101 = load ptr, ptr %m_data.i.i.i196, align 8, !tbaa !33
  %arrayidx3.i.i.i201.epil = getelementptr inbounds %class.btVector3, ptr %101, i64 %indvars.iv.i.i.i199.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx.i.i.i200.epil, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i201.epil, i64 16, i1 false), !tbaa.struct !163
  br label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i

_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i: ; preds = %for.body.i.i.i204.epil, %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 5
  %102 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !33
  %tobool.not.i10.i.i205 = icmp eq ptr %102, null
  %m_ownsMemory.i.i.i206 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 6
  %103 = load i8, ptr %m_ownsMemory.i.i.i206, align 8, !range !159
  %tobool2.not.i.i.i207 = icmp eq i8 %103, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i205, i1 true, i1 %tobool2.not.i.i.i207
  br i1 %or.cond.i.i, label %if.end.i209, label %if.then3.i.i.i208

if.then3.i.i.i208:                                ; preds = %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %102)
  br label %if.end.i209

if.end.i209:                                      ; preds = %if.then3.i.i.i208, %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i206, align 8, !tbaa !30
  store ptr %retval.0.i.i.i194, ptr %m_data.i9.i.i, align 8, !tbaa !33
  store i32 %31, ptr %m_capacity.i.i.i184, align 8, !tbaa !35
  br label %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit.loopexit

_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit.loopexit: ; preds = %if.then5.i186, %if.end.i209
  %.pre357 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  br label %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit

_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit: ; preds = %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit.loopexit, %_ZNK10btSoftBody11evaluateComEv.exit
  %104 = phi i32 [ %.pre357, %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit.loopexit ], [ %31, %_ZNK10btSoftBody11evaluateComEv.exit ]
  store i32 %31, ptr %m_size.i.i180, align 4, !tbaa !34
  %cmp45328 = icmp sgt i32 %104, 0
  br i1 %cmp45328, label %for.body46.lr.ph, label %for.end57

for.body46.lr.ph:                                 ; preds = %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit
  %m_data.i219 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %com.sroa.6.8.vec.extract = extractelement <2 x float> %retval.sroa.7.1.i, i64 0
  %m_data.i225 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 5
  %wide.trip.count349 = zext i32 %104 to i64
  br label %for.body46

for.body46:                                       ; preds = %for.body46.lr.ph, %for.body46
  %indvars.iv346 = phi i64 [ 0, %for.body46.lr.ph ], [ %indvars.iv.next347, %for.body46 ]
  %105 = load ptr, ptr %m_data.i219, align 8, !tbaa !87
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %105, i64 %indvars.iv346, i32 1
  %106 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %107 = fsub <2 x float> %106, %retval.sroa.0.1.i
  %arrayidx11.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %108 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %sub14.i = fsub float %108, %com.sroa.6.8.vec.extract
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i, i64 0
  %109 = load ptr, ptr %m_data.i225, align 8, !tbaa !33
  %arrayidx.i227 = getelementptr inbounds %class.btVector3, ptr %109, i64 %indvars.iv346
  store <2 x float> %107, ptr %arrayidx.i227, align 4, !tbaa.struct !163
  %ref.tmp47.sroa.4.0.call54.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i227, i64 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %ref.tmp47.sroa.4.0.call54.sroa_idx, align 4, !tbaa.struct !165
  %indvars.iv.next347 = add nuw nsw i64 %indvars.iv346, 1
  %exitcond350.not = icmp eq i64 %indvars.iv.next347, %wide.trip.count349
  br i1 %exitcond350.not, label %for.end57, label %for.body46

for.end57:                                        ; preds = %for.body46, %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit
  %110 = load i32, ptr %m_size.i.i, align 4
  %cmp.i229 = icmp sgt i32 %110, 0
  %or.cond = select i1 %bvolume, i1 %cmp.i229, i1 false
  br i1 %or.cond, label %if.then.i232, label %cond.end62

if.then.i232:                                     ; preds = %for.end57
  %m_data.i.i230 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %111 = load ptr, ptr %m_data.i.i230, align 8, !tbaa !87
  %m_x.i231 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %111, i64 0, i32 1
  %org.sroa.0.0.copyload.i = load float, ptr %m_x.i231, align 8, !tbaa.struct !163
  %org.sroa.6.0.m_x.sroa_idx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %111, i64 0, i32 1, i32 0, i64 1
  %org.sroa.6.0.copyload.i = load float, ptr %org.sroa.6.0.m_x.sroa_idx.i, align 4, !tbaa.struct !293
  %org.sroa.9.0.m_x.sroa_idx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %111, i64 0, i32 1, i32 0, i64 2
  %org.sroa.9.0.copyload.i = load float, ptr %org.sroa.9.0.m_x.sroa_idx.i, align 8, !tbaa.struct !165
  %m_size.i32.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %112 = load i32, ptr %m_size.i32.i, align 4, !tbaa !96
  %cmp566.i = icmp sgt i32 %112, 0
  br i1 %cmp566.i, label %for.body.lr.ph.i234, label %for.end.i

for.body.lr.ph.i234:                              ; preds = %if.then.i232
  %m_data.i33.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %113 = load ptr, ptr %m_data.i33.i, align 8, !tbaa !95
  %wide.trip.count.i233 = zext i32 %112 to i64
  br label %for.body.i240

for.body.i240:                                    ; preds = %for.body.i240, %for.body.lr.ph.i234
  %indvars.iv.i235 = phi i64 [ 0, %for.body.lr.ph.i234 ], [ %indvars.iv.next.i238, %for.body.i240 ]
  %vol.068.i = phi float [ 0.000000e+00, %for.body.lr.ph.i234 ], [ %add.i237, %for.body.i240 ]
  %m_n.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %113, i64 %indvars.iv.i235, i32 1
  %114 = load ptr, ptr %m_n.i, align 8, !tbaa !219
  %m_x8.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %114, i64 0, i32 1
  %115 = load float, ptr %m_x8.i, align 4, !tbaa !137
  %sub.i.i = fsub float %115, %org.sroa.0.0.copyload.i
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %114, i64 0, i32 1, i32 0, i64 1
  %116 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %sub8.i.i = fsub float %116, %org.sroa.6.0.copyload.i
  %arrayidx11.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %114, i64 0, i32 1, i32 0, i64 2
  %117 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %117, %org.sroa.9.0.copyload.i
  %arrayidx13.i236 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %113, i64 %indvars.iv.i235, i32 1, i64 1
  %118 = load ptr, ptr %arrayidx13.i236, align 8, !tbaa !219
  %m_x14.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %118, i64 0, i32 1
  %119 = load float, ptr %m_x14.i, align 4, !tbaa !137
  %sub.i34.i = fsub float %119, %org.sroa.0.0.copyload.i
  %arrayidx5.i35.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %118, i64 0, i32 1, i32 0, i64 1
  %120 = load float, ptr %arrayidx5.i35.i, align 4, !tbaa !137
  %sub8.i37.i = fsub float %120, %org.sroa.6.0.copyload.i
  %arrayidx11.i38.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %118, i64 0, i32 1, i32 0, i64 2
  %121 = load float, ptr %arrayidx11.i38.i, align 4, !tbaa !137
  %sub14.i40.i = fsub float %121, %org.sroa.9.0.copyload.i
  %arrayidx19.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %113, i64 %indvars.iv.i235, i32 1, i64 2
  %122 = load ptr, ptr %arrayidx19.i, align 8, !tbaa !219
  %m_x20.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 0, i32 1
  %123 = load float, ptr %m_x20.i, align 4, !tbaa !137
  %sub.i46.i = fsub float %123, %org.sroa.0.0.copyload.i
  %arrayidx5.i47.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 0, i32 1, i32 0, i64 1
  %124 = load float, ptr %arrayidx5.i47.i, align 4, !tbaa !137
  %sub8.i49.i = fsub float %124, %org.sroa.6.0.copyload.i
  %arrayidx11.i50.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 0, i32 1, i32 0, i64 2
  %125 = load float, ptr %arrayidx11.i50.i, align 4, !tbaa !137
  %sub14.i52.i = fsub float %125, %org.sroa.9.0.copyload.i
  %126 = fneg float %sub14.i40.i
  %neg.i.i.i = fmul float %sub8.i49.i, %126
  %127 = tail call float @llvm.fmuladd.f32(float %sub8.i37.i, float %sub14.i52.i, float %neg.i.i.i)
  %128 = fneg float %sub.i34.i
  %neg19.i.i.i = fmul float %sub14.i52.i, %128
  %129 = tail call float @llvm.fmuladd.f32(float %sub14.i40.i, float %sub.i46.i, float %neg19.i.i.i)
  %130 = fneg float %sub8.i37.i
  %neg30.i.i.i = fmul float %sub.i46.i, %130
  %131 = tail call float @llvm.fmuladd.f32(float %sub.i34.i, float %sub8.i49.i, float %neg30.i.i.i)
  %mul8.i.i.i = fmul float %sub8.i.i, %129
  %132 = tail call float @llvm.fmuladd.f32(float %sub.i.i, float %127, float %mul8.i.i.i)
  %133 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %131, float %132)
  %add.i237 = fadd float %vol.068.i, %133
  %indvars.iv.next.i238 = add nuw nsw i64 %indvars.iv.i235, 1
  %exitcond.not.i239 = icmp eq i64 %indvars.iv.next.i238, %wide.trip.count.i233
  br i1 %exitcond.not.i239, label %for.end.i, label %for.body.i240

for.end.i:                                        ; preds = %for.body.i240, %if.then.i232
  %vol.0.lcssa.i = phi float [ 0.000000e+00, %if.then.i232 ], [ %add.i237, %for.body.i240 ]
  %div.i = fdiv float %vol.0.lcssa.i, 6.000000e+00
  br label %cond.end62

cond.end62:                                       ; preds = %for.end.i, %for.end57
  %cond63 = phi float [ 0.000000e+00, %for.end57 ], [ %div.i, %for.end.i ]
  %m_volume = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 2
  store float %cond63, ptr %m_volume, align 4, !tbaa !144
  %m_com = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 5
  store <2 x float> %retval.sroa.0.1.i, ptr %m_com, align 8, !tbaa.struct !163
  %com.sroa.6.0.m_com.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 5, i32 0, i64 2
  store <2 x float> %retval.sroa.7.1.i, ptr %com.sroa.6.0.m_com.sroa_idx, align 8, !tbaa.struct !165
  %m_rot = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6
  store float 1.000000e+00, ptr %m_rot, align 8, !tbaa !137
  %arrayidx3.i.i.i242 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 0, i32 0, i64 1
  %arrayidx3.i6.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 1, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i242, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i, align 4, !tbaa !137
  %arrayidx5.i7.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 2, i32 0, i64 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx5.i7.i.i, i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr %arrayidx5.i10.i.i, align 8, !tbaa !137
  %m_scl = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7
  store float 1.000000e+00, ptr %m_scl, align 8, !tbaa !137
  %arrayidx3.i.i.i243 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx3.i6.i.i244 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 1, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i243, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i244, align 4, !tbaa !137
  %arrayidx5.i7.i.i245 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i246 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 2, i32 0, i64 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx5.i7.i.i245, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i246, align 8, !tbaa !137
  %arrayidx7.i11.i.i247 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 2, i32 0, i64 3
  %m_aqq = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8
  %arrayidx.i250 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 2
  %ref.tmp68.sroa.4.0.arrayidx.i250.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 2, i32 0, i64 1
  %arrayidx.i251 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(52) %arrayidx7.i11.i.i247, i8 0, i64 52, i1 false)
  br i1 %cmp.i229, label %for.body84.lr.ph, label %cond.end62.for.end119_crit_edge

cond.end62.for.end119_crit_edge:                  ; preds = %cond.end62
  %arrayidx7.i274 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 0, i32 0, i64 1
  %arrayidx3.i.i313.phi.trans.insert = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 1, i32 0, i64 1
  %arrayidx15.i.i.phi.trans.insert = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 1, i32 0, i64 2
  %.pre360 = load float, ptr %arrayidx.i251, align 8, !tbaa !137, !noalias !315
  %.pre361 = load float, ptr %m_aqq, align 8, !tbaa !137, !noalias !315
  %arrayidx10.i.i.phi.trans.insert = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 0, i32 0, i64 2
  %.pre358 = load float, ptr %arrayidx3.i.i313.phi.trans.insert, align 4, !tbaa !137, !noalias !315
  %.pre359 = load float, ptr %arrayidx15.i.i.phi.trans.insert, align 8, !tbaa !137, !noalias !315
  %134 = load <4 x float>, ptr %arrayidx7.i274, align 4
  %135 = shufflevector <4 x float> %134, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %136 = load <4 x float>, ptr %arrayidx10.i.i.phi.trans.insert, align 8
  %137 = shufflevector <4 x float> %136, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %138 = insertelement <2 x float> %137, float %.pre358, i64 1
  %139 = insertelement <2 x float> %135, float %.pre359, i64 1
  br label %for.end119

for.body84.lr.ph:                                 ; preds = %cond.end62
  %m_data.i253 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 5
  %140 = load ptr, ptr %m_data.i253, align 8, !tbaa !33
  %m_data.i256 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  %141 = load ptr, ptr %m_data.i256, align 8, !tbaa !39
  %arrayidx12.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i292 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 1, i32 0, i64 2
  %142 = load <2 x float>, ptr %m_aqq, align 8, !tbaa !137
  %arrayidx12.i.promoted = load float, ptr %arrayidx12.i, align 8, !tbaa !137
  %143 = load <2 x float>, ptr %arrayidx.i251, align 8, !tbaa !137
  %arrayidx12.i292.promoted = load float, ptr %arrayidx12.i292, align 8, !tbaa !137
  %wide.trip.count354 = zext i32 %110 to i64
  br label %for.body84

for.body84:                                       ; preds = %for.body84.lr.ph, %for.body84
  %indvars.iv351 = phi i64 [ 0, %for.body84.lr.ph ], [ %indvars.iv.next352, %for.body84 ]
  %144 = phi float [ %arrayidx12.i292.promoted, %for.body84.lr.ph ], [ %add13.i293, %for.body84 ]
  %145 = phi float [ %arrayidx12.i.promoted, %for.body84.lr.ph ], [ %add13.i, %for.body84 ]
  %add.i306331337 = phi float [ 0.000000e+00, %for.body84.lr.ph ], [ %add.i306, %for.body84 ]
  %146 = phi <2 x float> [ zeroinitializer, %for.body84.lr.ph ], [ %169, %for.body84 ]
  %147 = phi <2 x float> [ %142, %for.body84.lr.ph ], [ %157, %for.body84 ]
  %148 = phi <2 x float> [ %143, %for.body84.lr.ph ], [ %163, %for.body84 ]
  %arrayidx.i255 = getelementptr inbounds %class.btVector3, ptr %140, i64 %indvars.iv351
  %arrayidx.i258 = getelementptr inbounds float, ptr %141, i64 %indvars.iv351
  %149 = load float, ptr %arrayidx.i258, align 4, !tbaa !137
  %arrayidx3.i.i = getelementptr inbounds [4 x float], ptr %arrayidx.i255, i64 0, i64 1
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %arrayidx.i255, i64 0, i64 2
  %150 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %mul8.i.i261 = fmul float %149, %150
  %151 = load <2 x float>, ptr %arrayidx.i255, align 4, !tbaa !137
  %152 = extractelement <2 x float> %151, i64 0
  %mul.i.i259 = fmul float %152, %149
  %153 = extractelement <2 x float> %151, i64 1
  %mul4.i.i260 = fmul float %149, %153
  %154 = insertelement <2 x float> poison, float %mul.i.i259, i64 0
  %155 = shufflevector <2 x float> %154, <2 x float> poison, <2 x i32> zeroinitializer
  %156 = fmul <2 x float> %151, %155
  %mul8.i.i266 = fmul float %mul.i.i259, %150
  %add13.i = fadd float %mul8.i.i266, %145
  store float %add13.i, ptr %arrayidx12.i, align 8, !tbaa !137
  %157 = fadd <2 x float> %156, %147
  store <2 x float> %157, ptr %m_aqq, align 8, !tbaa !137
  %158 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %mul8.i.i280 = fmul float %mul4.i.i260, %158
  %159 = load <2 x float>, ptr %arrayidx.i255, align 4, !tbaa !137
  %160 = insertelement <2 x float> poison, float %mul4.i.i260, i64 0
  %161 = shufflevector <2 x float> %160, <2 x float> poison, <2 x i32> zeroinitializer
  %162 = fmul <2 x float> %161, %159
  %163 = fadd <2 x float> %162, %148
  store <2 x float> %163, ptr %arrayidx.i251, align 8, !tbaa !137
  %add13.i293 = fadd float %mul8.i.i280, %144
  store float %add13.i293, ptr %arrayidx12.i292, align 8, !tbaa !137
  %164 = load float, ptr %arrayidx.i255, align 4, !tbaa !137
  %mul.i.i295 = fmul float %mul8.i.i261, %164
  %165 = load <2 x float>, ptr %arrayidx3.i.i, align 4, !tbaa !137
  %166 = insertelement <2 x float> poison, float %mul8.i.i261, i64 0
  %167 = shufflevector <2 x float> %166, <2 x float> poison, <2 x i32> zeroinitializer
  %168 = fmul <2 x float> %167, %165
  %add.i306 = fadd float %mul.i.i295, %add.i306331337
  store float %add.i306, ptr %arrayidx.i250, align 8, !tbaa !137
  %169 = fadd <2 x float> %168, %146
  store <2 x float> %169, ptr %ref.tmp68.sroa.4.0.arrayidx.i250.sroa_idx, align 4, !tbaa !137
  %indvars.iv.next352 = add nuw nsw i64 %indvars.iv351, 1
  %exitcond355.not = icmp eq i64 %indvars.iv.next352, %wide.trip.count354
  br i1 %exitcond355.not, label %for.end119.loopexit, label %for.body84

for.end119.loopexit:                              ; preds = %for.body84
  %170 = extractelement <2 x float> %163, i64 0
  %171 = extractelement <2 x float> %157, i64 0
  %172 = shufflevector <2 x float> %157, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %173 = insertelement <2 x float> %172, float %add13.i293, i64 1
  %174 = insertelement <2 x float> %163, float %add13.i, i64 0
  br label %for.end119

for.end119:                                       ; preds = %for.end119.loopexit, %cond.end62.for.end119_crit_edge
  %175 = phi float [ %.pre361, %cond.end62.for.end119_crit_edge ], [ %171, %for.end119.loopexit ]
  %176 = phi float [ %.pre360, %cond.end62.for.end119_crit_edge ], [ %170, %for.end119.loopexit ]
  %177 = phi float [ 0.000000e+00, %cond.end62.for.end119_crit_edge ], [ %add.i306, %for.end119.loopexit ]
  %178 = phi <2 x float> [ %138, %cond.end62.for.end119_crit_edge ], [ %174, %for.end119.loopexit ]
  %179 = phi <2 x float> [ zeroinitializer, %cond.end62.for.end119_crit_edge ], [ %169, %for.end119.loopexit ]
  %180 = phi <2 x float> [ %139, %cond.end62.for.end119_crit_edge ], [ %173, %for.end119.loopexit ]
  %ref.tmp68.sroa.6.0.arrayidx.i250.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 2, i32 0, i64 3
  %arrayidx15.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 1, i32 0, i64 2
  %181 = fneg <2 x float> %180
  %182 = extractelement <2 x float> %180, i64 1
  %183 = extractelement <2 x float> %178, i64 1
  %184 = fneg float %183
  %neg.i51.i = fmul float %177, %184
  %185 = extractelement <2 x float> %179, i64 0
  %186 = tail call float @llvm.fmuladd.f32(float %176, float %185, float %neg.i51.i)
  %187 = extractelement <2 x float> %180, i64 0
  %arrayidx10.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 0, i32 0, i64 2
  %188 = extractelement <2 x float> %178, i64 0
  %189 = fneg float %175
  %neg.i75.i = fmul float %182, %189
  %190 = tail call float @llvm.fmuladd.f32(float %188, float %176, float %neg.i75.i)
  %191 = shufflevector <2 x float> %179, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %192 = fmul <2 x float> %191, %181
  %193 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %178, <2 x float> %179, <2 x float> %192)
  %194 = extractelement <2 x float> %193, i64 1
  %ref.tmp120.sroa.6.0.m_aqq.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 0, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp120.sroa.6.0.m_aqq.sroa_idx, align 4, !tbaa.struct !318
  %195 = shufflevector <2 x float> %178, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %196 = insertelement <2 x float> %195, float %176, i64 0
  %197 = fneg <2 x float> %196
  %198 = insertelement <2 x float> %191, float %177, i64 1
  %199 = fmul <2 x float> %198, %197
  %200 = shufflevector <2 x float> %180, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %201 = insertelement <2 x float> %200, float %175, i64 1
  %202 = insertelement <2 x float> %179, float %177, i64 0
  %203 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %201, <2 x float> %202, <2 x float> %199)
  %204 = fmul <2 x float> %180, %203
  %mul8.i.i314 = extractelement <2 x float> %204, i64 0
  %205 = fmul <2 x float> %178, %197
  %neg.i66.i = extractelement <2 x float> %205, i64 1
  %206 = tail call float @llvm.fmuladd.f32(float %187, float %182, float %neg.i66.i)
  %207 = tail call float @llvm.fmuladd.f32(float %175, float %194, float %mul8.i.i314)
  %208 = tail call float @llvm.fmuladd.f32(float %188, float %186, float %207)
  %div.i315 = fdiv float 1.000000e+00, %208
  %209 = insertelement <2 x float> poison, float %div.i315, i64 0
  %210 = shufflevector <2 x float> %209, <2 x float> poison, <2 x i32> zeroinitializer
  %211 = fmul <2 x float> %193, %210
  %mul15.i = fmul float %206, %div.i315
  %212 = fmul <2 x float> %203, %210
  %mul24.i = fmul float %190, %div.i315
  %mul27.i = fmul float %186, %div.i315
  %213 = shufflevector <2 x float> %211, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  store <2 x float> %213, ptr %m_aqq, align 8
  store float %mul15.i, ptr %arrayidx10.i.i, align 8, !tbaa.struct !165
  store <2 x float> %212, ptr %arrayidx.i251, align 8
  store float %mul24.i, ptr %arrayidx15.i.i, align 8, !tbaa.struct !165
  %ref.tmp120.sroa.11.16.arrayidx7.i318.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 1, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp120.sroa.11.16.arrayidx7.i318.sroa_idx, align 4, !tbaa.struct !318
  store float %mul27.i, ptr %arrayidx.i250, align 8, !tbaa.struct !163
  %214 = shufflevector <2 x float> %179, <2 x float> %181, <2 x i32> <i32 0, i32 2>
  %215 = insertelement <2 x float> poison, float %189, i64 0
  %216 = insertelement <2 x float> %215, float %176, i64 1
  %217 = fmul <2 x float> %214, %216
  %218 = insertelement <2 x float> %180, float %175, i64 1
  %219 = insertelement <2 x float> %178, float %177, i64 0
  %220 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %218, <2 x float> %219, <2 x float> %217)
  %221 = fmul <2 x float> %220, %210
  store <2 x float> %221, ptr %ref.tmp68.sroa.4.0.arrayidx.i250.sroa_idx, align 4
  store float 0.000000e+00, ptr %ref.tmp68.sroa.6.0.arrayidx.i250.sroa_idx, align 4, !tbaa.struct !318
  tail call void @_ZN10btSoftBody15updateConstantsEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  ret void
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local { <2 x float>, <2 x float> } @_ZNK10btSoftBody11evaluateComEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #18 align 2 {
entry:
  %m_bframe = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 1
  %0 = load i8, ptr %m_bframe, align 1, !tbaa !143, !range !159, !noundef !192
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %1 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp33 = icmp sgt i32 %1, 0
  br i1 %cmp33, label %for.body.lr.ph, label %if.end

for.body.lr.ph:                                   ; preds = %if.then
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %2 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_data.i15 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  %3 = load ptr, ptr %m_data.i15, align 8, !tbaa !39
  %wide.trip.count = zext i32 %1 to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %4 = icmp eq i32 %1, 1
  br i1 %4, label %if.end.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.1, %for.body ]
  %retval.sroa.7.035 = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.new ], [ %retval.sroa.7.8.vec.insert32.1, %for.body ]
  %retval.sroa.0.034 = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.new ], [ %18, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.1, %for.body ]
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv, i32 1
  %arrayidx.i17 = getelementptr inbounds float, ptr %3, i64 %indvars.iv
  %5 = load float, ptr %arrayidx.i17, align 4, !tbaa !137
  %arrayidx7.i19 = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %6 = load float, ptr %arrayidx7.i19, align 4, !tbaa !137
  %mul8.i = fmul float %5, %6
  %7 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %8 = insertelement <2 x float> poison, float %5, i64 0
  %9 = shufflevector <2 x float> %8, <2 x float> poison, <2 x i32> zeroinitializer
  %10 = fmul <2 x float> %9, %7
  %11 = fadd <2 x float> %retval.sroa.0.034, %10
  %retval.sroa.7.8.vec.extract = extractelement <2 x float> %retval.sroa.7.035, i64 0
  %add13.i = fadd float %retval.sroa.7.8.vec.extract, %mul8.i
  %indvars.iv.next = or i64 %indvars.iv, 1
  %m_x.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv.next, i32 1
  %arrayidx.i17.1 = getelementptr inbounds float, ptr %3, i64 %indvars.iv.next
  %12 = load float, ptr %arrayidx.i17.1, align 4, !tbaa !137
  %arrayidx7.i19.1 = getelementptr inbounds [4 x float], ptr %m_x.1, i64 0, i64 2
  %13 = load float, ptr %arrayidx7.i19.1, align 4, !tbaa !137
  %mul8.i.1 = fmul float %12, %13
  %14 = load <2 x float>, ptr %m_x.1, align 4, !tbaa !137
  %15 = insertelement <2 x float> poison, float %12, i64 0
  %16 = shufflevector <2 x float> %15, <2 x float> poison, <2 x i32> zeroinitializer
  %17 = fmul <2 x float> %16, %14
  %18 = fadd <2 x float> %11, %17
  %add13.i.1 = fadd float %add13.i, %mul8.i.1
  %retval.sroa.7.8.vec.insert32.1 = insertelement <2 x float> %retval.sroa.7.035, float %add13.i.1, i64 0
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %if.end.loopexit.unr-lcssa, label %for.body

if.end.loopexit.unr-lcssa:                        ; preds = %for.body, %for.body.lr.ph
  %.lcssa.ph = phi <2 x float> [ undef, %for.body.lr.ph ], [ %18, %for.body ]
  %retval.sroa.7.8.vec.insert32.lcssa.ph = phi <2 x float> [ undef, %for.body.lr.ph ], [ %retval.sroa.7.8.vec.insert32.1, %for.body ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.1, %for.body ]
  %retval.sroa.7.035.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph ], [ %retval.sroa.7.8.vec.insert32.1, %for.body ]
  %retval.sroa.0.034.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph ], [ %18, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %if.end, label %for.body.epil

for.body.epil:                                    ; preds = %if.end.loopexit.unr-lcssa
  %m_x.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv.unr, i32 1
  %arrayidx.i17.epil = getelementptr inbounds float, ptr %3, i64 %indvars.iv.unr
  %19 = load float, ptr %arrayidx.i17.epil, align 4, !tbaa !137
  %arrayidx7.i19.epil = getelementptr inbounds [4 x float], ptr %m_x.epil, i64 0, i64 2
  %20 = load float, ptr %arrayidx7.i19.epil, align 4, !tbaa !137
  %mul8.i.epil = fmul float %19, %20
  %21 = load <2 x float>, ptr %m_x.epil, align 4, !tbaa !137
  %22 = insertelement <2 x float> poison, float %19, i64 0
  %23 = shufflevector <2 x float> %22, <2 x float> poison, <2 x i32> zeroinitializer
  %24 = fmul <2 x float> %23, %21
  %25 = fadd <2 x float> %retval.sroa.0.034.unr, %24
  %retval.sroa.7.8.vec.extract.epil = extractelement <2 x float> %retval.sroa.7.035.unr, i64 0
  %add13.i.epil = fadd float %retval.sroa.7.8.vec.extract.epil, %mul8.i.epil
  %retval.sroa.7.8.vec.insert32.epil = insertelement <2 x float> %retval.sroa.7.035.unr, float %add13.i.epil, i64 0
  br label %if.end

if.end:                                           ; preds = %for.body.epil, %if.end.loopexit.unr-lcssa, %if.then, %entry
  %retval.sroa.0.1 = phi <2 x float> [ zeroinitializer, %entry ], [ zeroinitializer, %if.then ], [ %.lcssa.ph, %if.end.loopexit.unr-lcssa ], [ %25, %for.body.epil ]
  %retval.sroa.7.1 = phi <2 x float> [ zeroinitializer, %entry ], [ zeroinitializer, %if.then ], [ %retval.sroa.7.8.vec.insert32.lcssa.ph, %if.end.loopexit.unr-lcssa ], [ %retval.sroa.7.8.vec.insert32.epil, %for.body.epil ]
  %.fca.0.insert = insertvalue { <2 x float>, <2 x float> } poison, <2 x float> %retval.sroa.0.1, 0
  %.fca.1.insert = insertvalue { <2 x float>, <2 x float> } %.fca.0.insert, <2 x float> %retval.sroa.7.1, 1
  ret { <2 x float>, <2 x float> } %.fca.1.insert
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local noundef i32 @_ZNK10btSoftBody12clusterCountEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #19 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !124
  ret i32 %0
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local { <2 x float>, <2 x float> } @_ZN10btSoftBody10clusterComEPKNS_7ClusterE(ptr nocapture noundef readonly %cluster) local_unnamed_addr #18 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %cluster, i64 0, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !319
  %cmp38 = icmp sgt i32 %0, 0
  br i1 %cmp38, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %cluster, i64 0, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !320
  %m_data.i20 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 1, i32 5
  %2 = load ptr, ptr %m_data.i20, align 8, !tbaa !39
  %wide.trip.count = zext i32 %0 to i64
  %xtraiter = and i64 %wide.trip.count, 1
  %3 = icmp eq i32 %0, 1
  br i1 %3, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body, %for.body.lr.ph
  %add.i.lcssa.ph = phi float [ undef, %for.body.lr.ph ], [ %add.i.1, %for.body ]
  %.lcssa.ph = phi <2 x float> [ undef, %for.body.lr.ph ], [ %32, %for.body ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.1, %for.body ]
  %com.sroa.0.039.unr = phi float [ 0.000000e+00, %for.body.lr.ph ], [ %add.i.1, %for.body ]
  %.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph ], [ %32, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond.cleanup, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond.cleanup.loopexit.unr-lcssa
  %arrayidx.i.epil = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv.unr
  %4 = load ptr, ptr %arrayidx.i.epil, align 8, !tbaa !219
  %m_x.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1
  %arrayidx.i22.epil = getelementptr inbounds float, ptr %2, i64 %indvars.iv.unr
  %5 = load float, ptr %m_x.epil, align 4, !tbaa !137
  %6 = load float, ptr %arrayidx.i22.epil, align 4, !tbaa !137
  %mul.i23.epil = fmul float %5, %6
  %arrayidx3.i24.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 1
  %7 = load <2 x float>, ptr %arrayidx3.i24.epil, align 4, !tbaa !137
  %8 = insertelement <2 x float> poison, float %6, i64 0
  %9 = shufflevector <2 x float> %8, <2 x float> poison, <2 x i32> zeroinitializer
  %10 = fmul <2 x float> %9, %7
  %add.i.epil = fadd float %com.sroa.0.039.unr, %mul.i23.epil
  %11 = fadd <2 x float> %.unr, %10
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body.epil, %for.cond.cleanup.loopexit.unr-lcssa, %entry
  %com.sroa.0.0.lcssa = phi float [ 0.000000e+00, %entry ], [ %add.i.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %add.i.epil, %for.body.epil ]
  %12 = phi <2 x float> [ zeroinitializer, %entry ], [ %.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %11, %for.body.epil ]
  %m_imass = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 5
  %13 = load float, ptr %m_imass, align 4, !tbaa !137
  %mul.i = fmul float %com.sroa.0.0.lcssa, %13
  %14 = extractelement <2 x float> %12, i64 0
  %mul4.i = fmul float %14, %13
  %15 = extractelement <2 x float> %12, i64 1
  %mul8.i = fmul float %15, %13
  %retval.sroa.0.0.vec.insert.i = insertelement <2 x float> undef, float %mul.i, i64 0
  %retval.sroa.0.4.vec.insert.i = insertelement <2 x float> %retval.sroa.0.0.vec.insert.i, float %mul4.i, i64 1
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i, i64 0
  %.fca.0.insert.i = insertvalue { <2 x float>, <2 x float> } poison, <2 x float> %retval.sroa.0.4.vec.insert.i, 0
  %.fca.1.insert.i = insertvalue { <2 x float>, <2 x float> } %.fca.0.insert.i, <2 x float> %retval.sroa.3.12.vec.insert.i, 1
  ret { <2 x float>, <2 x float> } %.fca.1.insert.i

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.1, %for.body ]
  %com.sroa.0.039 = phi float [ 0.000000e+00, %for.body.lr.ph.new ], [ %add.i.1, %for.body ]
  %16 = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.new ], [ %32, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.1, %for.body ]
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv
  %17 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %17, i64 0, i32 1
  %arrayidx.i22 = getelementptr inbounds float, ptr %2, i64 %indvars.iv
  %18 = load float, ptr %m_x, align 4, !tbaa !137
  %19 = load float, ptr %arrayidx.i22, align 4, !tbaa !137
  %mul.i23 = fmul float %18, %19
  %arrayidx3.i24 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %17, i64 0, i32 1, i32 0, i64 1
  %20 = load <2 x float>, ptr %arrayidx3.i24, align 4, !tbaa !137
  %21 = insertelement <2 x float> poison, float %19, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> zeroinitializer
  %23 = fmul <2 x float> %22, %20
  %add.i = fadd float %com.sroa.0.039, %mul.i23
  %24 = fadd <2 x float> %16, %23
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.i.1 = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv.next
  %25 = load ptr, ptr %arrayidx.i.1, align 8, !tbaa !219
  %m_x.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %25, i64 0, i32 1
  %arrayidx.i22.1 = getelementptr inbounds float, ptr %2, i64 %indvars.iv.next
  %26 = load float, ptr %m_x.1, align 4, !tbaa !137
  %27 = load float, ptr %arrayidx.i22.1, align 4, !tbaa !137
  %mul.i23.1 = fmul float %26, %27
  %arrayidx3.i24.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %25, i64 0, i32 1, i32 0, i64 1
  %28 = load <2 x float>, ptr %arrayidx3.i24.1, align 4, !tbaa !137
  %29 = insertelement <2 x float> poison, float %27, i64 0
  %30 = shufflevector <2 x float> %29, <2 x float> poison, <2 x i32> zeroinitializer
  %31 = fmul <2 x float> %30, %28
  %add.i.1 = fadd float %add.i, %mul.i23.1
  %32 = fadd <2 x float> %24, %31
  %indvars.iv.next.1 = add nuw nsw i64 %indvars.iv, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body
}

; Function Attrs: nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable
define dso_local { <2 x float>, <2 x float> } @_ZNK10btSoftBody10clusterComEi(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, i32 noundef %cluster) local_unnamed_addr #18 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %idxprom.i = sext i32 %cluster to i64
  %arrayidx.i = getelementptr inbounds ptr, ptr %0, i64 %idxprom.i
  %1 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %1, i64 0, i32 2
  %2 = load i32, ptr %m_size.i.i, align 4, !tbaa !319
  %cmp38.i = icmp sgt i32 %2, 0
  br i1 %cmp38.i, label %for.body.lr.ph.i, label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit

for.body.lr.ph.i:                                 ; preds = %entry
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %1, i64 0, i32 5
  %3 = load ptr, ptr %m_data.i.i, align 8, !tbaa !320
  %m_data.i20.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 1, i32 5
  %4 = load ptr, ptr %m_data.i20.i, align 8, !tbaa !39
  %wide.trip.count.i = zext i32 %2 to i64
  %xtraiter = and i64 %wide.trip.count.i, 1
  %5 = icmp eq i32 %2, 1
  br i1 %5, label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %wide.trip.count.i, 4294967294
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.1, %for.body.i ]
  %com.sroa.0.039.i = phi float [ 0.000000e+00, %for.body.lr.ph.i.new ], [ %add.i.i.1, %for.body.i ]
  %6 = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i.new ], [ %22, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.1, %for.body.i ]
  %arrayidx.i.i = getelementptr inbounds ptr, ptr %3, i64 %indvars.iv.i
  %7 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !219
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 0, i32 1
  %arrayidx.i22.i = getelementptr inbounds float, ptr %4, i64 %indvars.iv.i
  %8 = load float, ptr %m_x.i, align 4, !tbaa !137
  %9 = load float, ptr %arrayidx.i22.i, align 4, !tbaa !137
  %mul.i23.i = fmul float %8, %9
  %arrayidx3.i24.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 0, i32 1, i32 0, i64 1
  %10 = load <2 x float>, ptr %arrayidx3.i24.i, align 4, !tbaa !137
  %11 = insertelement <2 x float> poison, float %9, i64 0
  %12 = shufflevector <2 x float> %11, <2 x float> poison, <2 x i32> zeroinitializer
  %13 = fmul <2 x float> %12, %10
  %add.i.i = fadd float %com.sroa.0.039.i, %mul.i23.i
  %14 = fadd <2 x float> %6, %13
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds ptr, ptr %3, i64 %indvars.iv.next.i
  %15 = load ptr, ptr %arrayidx.i.i.1, align 8, !tbaa !219
  %m_x.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %15, i64 0, i32 1
  %arrayidx.i22.i.1 = getelementptr inbounds float, ptr %4, i64 %indvars.iv.next.i
  %16 = load float, ptr %m_x.i.1, align 4, !tbaa !137
  %17 = load float, ptr %arrayidx.i22.i.1, align 4, !tbaa !137
  %mul.i23.i.1 = fmul float %16, %17
  %arrayidx3.i24.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %15, i64 0, i32 1, i32 0, i64 1
  %18 = load <2 x float>, ptr %arrayidx3.i24.i.1, align 4, !tbaa !137
  %19 = insertelement <2 x float> poison, float %17, i64 0
  %20 = shufflevector <2 x float> %19, <2 x float> poison, <2 x i32> zeroinitializer
  %21 = fmul <2 x float> %20, %18
  %add.i.i.1 = fadd float %add.i.i, %mul.i23.i.1
  %22 = fadd <2 x float> %14, %21
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa, label %for.body.i

_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa: ; preds = %for.body.i, %for.body.lr.ph.i
  %add.i.i.lcssa.ph = phi float [ undef, %for.body.lr.ph.i ], [ %add.i.i.1, %for.body.i ]
  %.lcssa.ph = phi <2 x float> [ undef, %for.body.lr.ph.i ], [ %22, %for.body.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i.1, %for.body.i ]
  %com.sroa.0.039.i.unr = phi float [ 0.000000e+00, %for.body.lr.ph.i ], [ %add.i.i.1, %for.body.i ]
  %.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i ], [ %22, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit, label %for.body.i.epil

for.body.i.epil:                                  ; preds = %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa
  %arrayidx.i.i.epil = getelementptr inbounds ptr, ptr %3, i64 %indvars.iv.i.unr
  %23 = load ptr, ptr %arrayidx.i.i.epil, align 8, !tbaa !219
  %m_x.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %23, i64 0, i32 1
  %arrayidx.i22.i.epil = getelementptr inbounds float, ptr %4, i64 %indvars.iv.i.unr
  %24 = load float, ptr %m_x.i.epil, align 4, !tbaa !137
  %25 = load float, ptr %arrayidx.i22.i.epil, align 4, !tbaa !137
  %mul.i23.i.epil = fmul float %24, %25
  %arrayidx3.i24.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %23, i64 0, i32 1, i32 0, i64 1
  %26 = load <2 x float>, ptr %arrayidx3.i24.i.epil, align 4, !tbaa !137
  %27 = insertelement <2 x float> poison, float %25, i64 0
  %28 = shufflevector <2 x float> %27, <2 x float> poison, <2 x i32> zeroinitializer
  %29 = fmul <2 x float> %28, %26
  %add.i.i.epil = fadd float %com.sroa.0.039.i.unr, %mul.i23.i.epil
  %30 = fadd <2 x float> %.unr, %29
  br label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit

_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit:  ; preds = %for.body.i.epil, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa, %entry
  %com.sroa.0.0.lcssa.i = phi float [ 0.000000e+00, %entry ], [ %add.i.i.lcssa.ph, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa ], [ %add.i.i.epil, %for.body.i.epil ]
  %31 = phi <2 x float> [ zeroinitializer, %entry ], [ %.lcssa.ph, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa ], [ %30, %for.body.i.epil ]
  %m_imass.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 5
  %32 = load float, ptr %m_imass.i, align 4, !tbaa !137
  %mul.i.i = fmul float %com.sroa.0.0.lcssa.i, %32
  %33 = extractelement <2 x float> %31, i64 0
  %mul4.i.i = fmul float %33, %32
  %34 = extractelement <2 x float> %31, i64 1
  %mul8.i.i = fmul float %34, %32
  %retval.sroa.0.0.vec.insert.i.i = insertelement <2 x float> undef, float %mul.i.i, i64 0
  %retval.sroa.0.4.vec.insert.i.i = insertelement <2 x float> %retval.sroa.0.0.vec.insert.i.i, float %mul4.i.i, i64 1
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i, i64 0
  %.fca.0.insert.i.i = insertvalue { <2 x float>, <2 x float> } poison, <2 x float> %retval.sroa.0.4.vec.insert.i.i, 0
  %.fca.1.insert.i.i = insertvalue { <2 x float>, <2 x float> } %.fca.0.insert.i.i, <2 x float> %retval.sroa.3.12.vec.insert.i.i, 1
  ret { <2 x float>, <2 x float> } %.fca.1.insert.i.i
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local { <2 x float>, <2 x float> } @_ZN10btSoftBody15clusterVelocityEPKNS_7ClusterERK9btVector3(ptr nocapture noundef readonly %cluster, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %rpos) local_unnamed_addr #20 align 2 {
entry:
  %m_lv = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 13
  %m_av = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14
  %arrayidx3.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 2
  %0 = load float, ptr %arrayidx3.i.i, align 4, !tbaa !137
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14, i32 0, i64 2
  %1 = load float, ptr %m_lv, align 4, !tbaa !137
  %arrayidx5.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 13, i32 0, i64 1
  %2 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %3 = fneg float %2
  %4 = load <2 x float>, ptr %rpos, align 4, !tbaa !137
  %5 = extractelement <2 x float> %4, i64 1
  %neg.i.i = fmul float %5, %3
  %6 = load <2 x float>, ptr %m_av, align 4, !tbaa !137
  %7 = extractelement <2 x float> %6, i64 1
  %8 = tail call float @llvm.fmuladd.f32(float %7, float %0, float %neg.i.i)
  %9 = fneg <2 x float> %6
  %10 = insertelement <2 x float> poison, float %0, i64 0
  %11 = shufflevector <2 x float> %10, <2 x float> %4, <2 x i32> <i32 0, i32 2>
  %12 = fmul <2 x float> %11, %9
  %13 = insertelement <2 x float> poison, float %2, i64 0
  %14 = shufflevector <2 x float> %13, <2 x float> %6, <2 x i32> <i32 0, i32 2>
  %15 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %14, <2 x float> %4, <2 x float> %12)
  %add.i = fadd float %8, %1
  %16 = load <2 x float>, ptr %arrayidx5.i, align 4, !tbaa !137
  %17 = fadd <2 x float> %16, %15
  %retval.sroa.0.0.vec.insert.i = insertelement <2 x float> undef, float %add.i, i64 0
  %18 = shufflevector <2 x float> %retval.sroa.0.0.vec.insert.i, <2 x float> %17, <2 x i32> <i32 0, i32 2>
  %19 = shufflevector <2 x float> <float poison, float 0.000000e+00>, <2 x float> %17, <2 x i32> <i32 3, i32 1>
  %.fca.0.insert.i = insertvalue { <2 x float>, <2 x float> } poison, <2 x float> %18, 0
  %.fca.1.insert.i = insertvalue { <2 x float>, <2 x float> } %.fca.0.insert.i, <2 x float> %19, 1
  ret { <2 x float>, <2 x float> } %.fca.1.insert.i
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_ZN10btSoftBody15clusterVImpulseEPNS_7ClusterERK9btVector3S4_(ptr nocapture noundef %cluster, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %rpos, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %impulse) local_unnamed_addr #21 align 2 {
entry:
  %m_imass = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 5
  %0 = load float, ptr %m_imass, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %1 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %mul8.i.i = fmul float %0, %1
  %m_invwi = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7
  %arrayidx.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 1
  %2 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %arrayidx5.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 2
  %3 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %4 = fneg float %3
  %5 = load float, ptr %rpos, align 4, !tbaa !137
  %6 = fneg float %5
  %neg19.i.i = fmul float %1, %6
  %7 = fneg float %2
  %arrayidx5.i.i25 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i28 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2
  %8 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %9 = load float, ptr %arrayidx5.i18.i, align 4, !tbaa !137
  %arrayidx10.i21.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %10 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %m_vimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9
  %11 = load <2 x float>, ptr %impulse, align 4, !tbaa !137
  %12 = insertelement <2 x float> poison, float %0, i64 0
  %13 = shufflevector <2 x float> %12, <2 x float> poison, <2 x i32> zeroinitializer
  %14 = fmul <2 x float> %13, %11
  %15 = extractelement <2 x float> %11, i64 1
  %neg.i.i = fmul float %15, %4
  %16 = tail call float @llvm.fmuladd.f32(float %2, float %1, float %neg.i.i)
  %17 = extractelement <2 x float> %11, i64 0
  %18 = tail call float @llvm.fmuladd.f32(float %3, float %17, float %neg19.i.i)
  %neg30.i.i = fmul float %17, %7
  %19 = tail call float @llvm.fmuladd.f32(float %5, float %15, float %neg30.i.i)
  %mul8.i20.i = fmul float %18, %9
  %20 = tail call float @llvm.fmuladd.f32(float %8, float %16, float %mul8.i20.i)
  %21 = tail call float @llvm.fmuladd.f32(float %10, float %19, float %20)
  %22 = load <2 x float>, ptr %m_vimpulses, align 4, !tbaa !137
  %23 = fadd <2 x float> %14, %22
  store <2 x float> %23, ptr %m_vimpulses, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 0, i32 0, i64 2
  %24 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %mul8.i.i, %24
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %m_lv = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 13
  %25 = load <2 x float>, ptr %m_lv, align 4, !tbaa !137
  %26 = fadd <2 x float> %14, %25
  store <2 x float> %26, ptr %m_lv, align 4, !tbaa !137
  %arrayidx12.i34 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 13, i32 0, i64 2
  %27 = load float, ptr %arrayidx12.i34, align 4, !tbaa !137
  %add13.i35 = fadd float %mul8.i.i, %27
  store float %add13.i35, ptr %arrayidx12.i34, align 4, !tbaa !137
  %arrayidx8 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 1
  %28 = load float, ptr %m_invwi, align 4, !tbaa !137
  %29 = load float, ptr %arrayidx5.i.i25, align 4, !tbaa !137
  %30 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %31 = load float, ptr %arrayidx.i.i28, align 4, !tbaa !137
  %32 = load float, ptr %arrayidx5.i12.i, align 4, !tbaa !137
  %33 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %34 = insertelement <2 x float> poison, float %29, i64 0
  %35 = insertelement <2 x float> %34, float %32, i64 1
  %36 = insertelement <2 x float> poison, float %18, i64 0
  %37 = shufflevector <2 x float> %36, <2 x float> poison, <2 x i32> zeroinitializer
  %38 = fmul <2 x float> %35, %37
  %39 = insertelement <2 x float> poison, float %28, i64 0
  %40 = insertelement <2 x float> %39, float %31, i64 1
  %41 = insertelement <2 x float> poison, float %16, i64 0
  %42 = shufflevector <2 x float> %41, <2 x float> poison, <2 x i32> zeroinitializer
  %43 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %40, <2 x float> %42, <2 x float> %38)
  %44 = insertelement <2 x float> poison, float %30, i64 0
  %45 = insertelement <2 x float> %44, float %33, i64 1
  %46 = insertelement <2 x float> poison, float %19, i64 0
  %47 = shufflevector <2 x float> %46, <2 x float> poison, <2 x i32> zeroinitializer
  %48 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %45, <2 x float> %47, <2 x float> %43)
  %49 = load <2 x float>, ptr %arrayidx8, align 4, !tbaa !137
  %50 = fadd <2 x float> %48, %49
  store <2 x float> %50, ptr %arrayidx8, align 4, !tbaa !137
  %arrayidx12.i41 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 1, i32 0, i64 2
  %51 = load float, ptr %arrayidx12.i41, align 4, !tbaa !137
  %add13.i42 = fadd float %21, %51
  store float %add13.i42, ptr %arrayidx12.i41, align 4, !tbaa !137
  %m_av = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14
  %52 = load <2 x float>, ptr %m_av, align 4, !tbaa !137
  %53 = fadd <2 x float> %48, %52
  store <2 x float> %53, ptr %m_av, align 4, !tbaa !137
  %arrayidx12.i48 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14, i32 0, i64 2
  %54 = load float, ptr %arrayidx12.i48, align 4, !tbaa !137
  %add13.i49 = fadd float %21, %54
  store float %add13.i49, ptr %arrayidx12.i48, align 4, !tbaa !137
  %m_nvimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 11
  %55 = load i32, ptr %m_nvimpulses, align 8, !tbaa !321
  %inc = add nsw i32 %55, 1
  store i32 %inc, ptr %m_nvimpulses, align 8, !tbaa !321
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_ZN10btSoftBody15clusterDImpulseEPNS_7ClusterERK9btVector3S4_(ptr nocapture noundef %cluster, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %rpos, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %impulse) local_unnamed_addr #21 align 2 {
entry:
  %m_imass = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 5
  %0 = load float, ptr %m_imass, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %1 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %mul8.i.i = fmul float %0, %1
  %m_invwi = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7
  %arrayidx.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 1
  %2 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %arrayidx5.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 2
  %3 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %4 = fneg float %3
  %5 = load float, ptr %rpos, align 4, !tbaa !137
  %6 = fneg float %5
  %neg19.i.i = fmul float %1, %6
  %7 = fneg float %2
  %arrayidx5.i.i21 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i24 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2
  %8 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %9 = load float, ptr %arrayidx5.i18.i, align 4, !tbaa !137
  %arrayidx10.i21.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %10 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %m_dimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10
  %11 = load <2 x float>, ptr %impulse, align 4, !tbaa !137
  %12 = insertelement <2 x float> poison, float %0, i64 0
  %13 = shufflevector <2 x float> %12, <2 x float> poison, <2 x i32> zeroinitializer
  %14 = fmul <2 x float> %13, %11
  %15 = extractelement <2 x float> %11, i64 1
  %neg.i.i = fmul float %15, %4
  %16 = tail call float @llvm.fmuladd.f32(float %2, float %1, float %neg.i.i)
  %17 = extractelement <2 x float> %11, i64 0
  %18 = tail call float @llvm.fmuladd.f32(float %3, float %17, float %neg19.i.i)
  %neg30.i.i = fmul float %17, %7
  %19 = tail call float @llvm.fmuladd.f32(float %5, float %15, float %neg30.i.i)
  %mul8.i20.i = fmul float %18, %9
  %20 = tail call float @llvm.fmuladd.f32(float %8, float %16, float %mul8.i20.i)
  %21 = tail call float @llvm.fmuladd.f32(float %10, float %19, float %20)
  %22 = load <2 x float>, ptr %m_dimpulses, align 4, !tbaa !137
  %23 = fadd <2 x float> %14, %22
  store <2 x float> %23, ptr %m_dimpulses, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 0, i32 0, i64 2
  %24 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %mul8.i.i, %24
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %arrayidx7 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 1
  %25 = load float, ptr %m_invwi, align 4, !tbaa !137
  %26 = load float, ptr %arrayidx5.i.i21, align 4, !tbaa !137
  %27 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %28 = load float, ptr %arrayidx.i.i24, align 4, !tbaa !137
  %29 = load float, ptr %arrayidx5.i12.i, align 4, !tbaa !137
  %30 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %31 = insertelement <2 x float> poison, float %26, i64 0
  %32 = insertelement <2 x float> %31, float %29, i64 1
  %33 = insertelement <2 x float> poison, float %18, i64 0
  %34 = shufflevector <2 x float> %33, <2 x float> poison, <2 x i32> zeroinitializer
  %35 = fmul <2 x float> %32, %34
  %36 = insertelement <2 x float> poison, float %25, i64 0
  %37 = insertelement <2 x float> %36, float %28, i64 1
  %38 = insertelement <2 x float> poison, float %16, i64 0
  %39 = shufflevector <2 x float> %38, <2 x float> poison, <2 x i32> zeroinitializer
  %40 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %37, <2 x float> %39, <2 x float> %35)
  %41 = insertelement <2 x float> poison, float %27, i64 0
  %42 = insertelement <2 x float> %41, float %30, i64 1
  %43 = insertelement <2 x float> poison, float %19, i64 0
  %44 = shufflevector <2 x float> %43, <2 x float> poison, <2 x i32> zeroinitializer
  %45 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %42, <2 x float> %44, <2 x float> %40)
  %46 = load <2 x float>, ptr %arrayidx7, align 4, !tbaa !137
  %47 = fadd <2 x float> %45, %46
  store <2 x float> %47, ptr %arrayidx7, align 4, !tbaa !137
  %arrayidx12.i30 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 1, i32 0, i64 2
  %48 = load float, ptr %arrayidx12.i30, align 4, !tbaa !137
  %add13.i31 = fadd float %21, %48
  store float %add13.i31, ptr %arrayidx12.i30, align 4, !tbaa !137
  %m_ndimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 12
  %49 = load i32, ptr %m_ndimpulses, align 4, !tbaa !322
  %inc = add nsw i32 %49, 1
  store i32 %inc, ptr %m_ndimpulses, align 4, !tbaa !322
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_ZN10btSoftBody14clusterImpulseEPNS_7ClusterERK9btVector3RKNS_7ImpulseE(ptr nocapture noundef %cluster, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %rpos, ptr nocapture noundef nonnull readonly align 4 dereferenceable(33) %impulse) local_unnamed_addr #21 align 2 {
entry:
  %m_asVelocity = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 2
  %bf.load = load i8, ptr %m_asVelocity, align 4
  %0 = and i8 %bf.load, 1
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %m_imass.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 5
  %1 = load float, ptr %m_imass.i, align 4, !tbaa !137
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %2 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %mul8.i.i.i = fmul float %1, %2
  %m_invwi.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7
  %arrayidx.i.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 1
  %3 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 2
  %4 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %5 = fneg float %4
  %6 = load float, ptr %rpos, align 4, !tbaa !137
  %7 = fneg float %6
  %neg19.i.i.i = fmul float %2, %7
  %8 = fneg float %3
  %arrayidx5.i.i25.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i28.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2
  %9 = load float, ptr %arrayidx.i17.i.i, align 4, !tbaa !137
  %arrayidx5.i18.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %10 = load float, ptr %arrayidx5.i18.i.i, align 4, !tbaa !137
  %arrayidx10.i21.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %11 = load float, ptr %arrayidx10.i21.i.i, align 4, !tbaa !137
  %m_vimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9
  %12 = load <2 x float>, ptr %impulse, align 4, !tbaa !137
  %13 = insertelement <2 x float> poison, float %1, i64 0
  %14 = shufflevector <2 x float> %13, <2 x float> poison, <2 x i32> zeroinitializer
  %15 = fmul <2 x float> %14, %12
  %16 = extractelement <2 x float> %12, i64 1
  %neg.i.i.i = fmul float %16, %5
  %17 = tail call float @llvm.fmuladd.f32(float %3, float %2, float %neg.i.i.i)
  %18 = extractelement <2 x float> %12, i64 0
  %19 = tail call float @llvm.fmuladd.f32(float %4, float %18, float %neg19.i.i.i)
  %neg30.i.i.i = fmul float %18, %8
  %20 = tail call float @llvm.fmuladd.f32(float %6, float %16, float %neg30.i.i.i)
  %mul8.i20.i.i = fmul float %19, %10
  %21 = tail call float @llvm.fmuladd.f32(float %9, float %17, float %mul8.i20.i.i)
  %22 = tail call float @llvm.fmuladd.f32(float %11, float %20, float %21)
  %23 = load <2 x float>, ptr %m_vimpulses.i, align 4, !tbaa !137
  %24 = fadd <2 x float> %15, %23
  store <2 x float> %24, ptr %m_vimpulses.i, align 4, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 0, i32 0, i64 2
  %25 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %add13.i.i = fadd float %mul8.i.i.i, %25
  store float %add13.i.i, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %m_lv.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 13
  %26 = load <2 x float>, ptr %m_lv.i, align 4, !tbaa !137
  %27 = fadd <2 x float> %15, %26
  store <2 x float> %27, ptr %m_lv.i, align 4, !tbaa !137
  %arrayidx12.i34.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 13, i32 0, i64 2
  %28 = load float, ptr %arrayidx12.i34.i, align 4, !tbaa !137
  %add13.i35.i = fadd float %mul8.i.i.i, %28
  store float %add13.i35.i, ptr %arrayidx12.i34.i, align 4, !tbaa !137
  %arrayidx8.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 1
  %29 = load float, ptr %m_invwi.i, align 4, !tbaa !137
  %30 = load float, ptr %arrayidx5.i.i25.i, align 4, !tbaa !137
  %31 = load float, ptr %arrayidx10.i.i.i, align 4, !tbaa !137
  %32 = load float, ptr %arrayidx.i.i28.i, align 4, !tbaa !137
  %33 = load float, ptr %arrayidx5.i12.i.i, align 4, !tbaa !137
  %34 = load float, ptr %arrayidx10.i15.i.i, align 4, !tbaa !137
  %35 = insertelement <2 x float> poison, float %30, i64 0
  %36 = insertelement <2 x float> %35, float %33, i64 1
  %37 = insertelement <2 x float> poison, float %19, i64 0
  %38 = shufflevector <2 x float> %37, <2 x float> poison, <2 x i32> zeroinitializer
  %39 = fmul <2 x float> %36, %38
  %40 = insertelement <2 x float> poison, float %29, i64 0
  %41 = insertelement <2 x float> %40, float %32, i64 1
  %42 = insertelement <2 x float> poison, float %17, i64 0
  %43 = shufflevector <2 x float> %42, <2 x float> poison, <2 x i32> zeroinitializer
  %44 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %41, <2 x float> %43, <2 x float> %39)
  %45 = insertelement <2 x float> poison, float %31, i64 0
  %46 = insertelement <2 x float> %45, float %34, i64 1
  %47 = insertelement <2 x float> poison, float %20, i64 0
  %48 = shufflevector <2 x float> %47, <2 x float> poison, <2 x i32> zeroinitializer
  %49 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %46, <2 x float> %48, <2 x float> %44)
  %50 = load <2 x float>, ptr %arrayidx8.i, align 4, !tbaa !137
  %51 = fadd <2 x float> %49, %50
  store <2 x float> %51, ptr %arrayidx8.i, align 4, !tbaa !137
  %arrayidx12.i41.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 1, i32 0, i64 2
  %52 = load float, ptr %arrayidx12.i41.i, align 4, !tbaa !137
  %add13.i42.i = fadd float %22, %52
  store float %add13.i42.i, ptr %arrayidx12.i41.i, align 4, !tbaa !137
  %m_av.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14
  %53 = load <2 x float>, ptr %m_av.i, align 4, !tbaa !137
  %54 = fadd <2 x float> %49, %53
  store <2 x float> %54, ptr %m_av.i, align 4, !tbaa !137
  %arrayidx12.i48.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14, i32 0, i64 2
  %55 = load float, ptr %arrayidx12.i48.i, align 4, !tbaa !137
  %add13.i49.i = fadd float %22, %55
  store float %add13.i49.i, ptr %arrayidx12.i48.i, align 4, !tbaa !137
  %m_nvimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 11
  %56 = load i32, ptr %m_nvimpulses.i, align 8, !tbaa !321
  %inc.i = add nsw i32 %56, 1
  store i32 %inc.i, ptr %m_nvimpulses.i, align 8, !tbaa !321
  %bf.load1.pre = load i8, ptr %m_asVelocity, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %bf.load1 = phi i8 [ %bf.load1.pre, %if.then ], [ %bf.load, %entry ]
  %bf.shl2.mask = and i8 %bf.load1, 2
  %tobool5.not = icmp eq i8 %bf.shl2.mask, 0
  br i1 %tobool5.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  %m_drift = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 1
  %m_imass.i13 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 5
  %57 = load float, ptr %m_imass.i13, align 4, !tbaa !137
  %arrayidx7.i.i.i17 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 1, i32 0, i64 2
  %58 = load float, ptr %arrayidx7.i.i.i17, align 4, !tbaa !137
  %mul8.i.i.i18 = fmul float %57, %58
  %m_invwi.i19 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7
  %arrayidx.i.i.i20 = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 1
  %59 = load float, ptr %arrayidx.i.i.i20, align 4, !tbaa !137
  %arrayidx5.i.i.i21 = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 2
  %60 = load float, ptr %arrayidx5.i.i.i21, align 4, !tbaa !137
  %61 = fneg float %60
  %62 = load float, ptr %rpos, align 4, !tbaa !137
  %63 = fneg float %62
  %neg19.i.i.i23 = fmul float %58, %63
  %64 = fneg float %59
  %arrayidx5.i.i21.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i.i25 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i24.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i.i26 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i28 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i29 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2
  %65 = load float, ptr %arrayidx.i17.i.i29, align 4, !tbaa !137
  %arrayidx5.i18.i.i30 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %66 = load float, ptr %arrayidx5.i18.i.i30, align 4, !tbaa !137
  %arrayidx10.i21.i.i32 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %67 = load float, ptr %arrayidx10.i21.i.i32, align 4, !tbaa !137
  %m_dimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10
  %68 = load <2 x float>, ptr %m_drift, align 4, !tbaa !137
  %69 = insertelement <2 x float> poison, float %57, i64 0
  %70 = shufflevector <2 x float> %69, <2 x float> poison, <2 x i32> zeroinitializer
  %71 = fmul <2 x float> %70, %68
  %72 = extractelement <2 x float> %68, i64 1
  %neg.i.i.i22 = fmul float %72, %61
  %73 = tail call float @llvm.fmuladd.f32(float %59, float %58, float %neg.i.i.i22)
  %74 = extractelement <2 x float> %68, i64 0
  %75 = tail call float @llvm.fmuladd.f32(float %60, float %74, float %neg19.i.i.i23)
  %neg30.i.i.i24 = fmul float %74, %64
  %76 = tail call float @llvm.fmuladd.f32(float %62, float %72, float %neg30.i.i.i24)
  %mul8.i20.i.i31 = fmul float %75, %66
  %77 = tail call float @llvm.fmuladd.f32(float %65, float %73, float %mul8.i20.i.i31)
  %78 = tail call float @llvm.fmuladd.f32(float %67, float %76, float %77)
  %79 = load <2 x float>, ptr %m_dimpulses.i, align 4, !tbaa !137
  %80 = fadd <2 x float> %71, %79
  store <2 x float> %80, ptr %m_dimpulses.i, align 4, !tbaa !137
  %arrayidx12.i.i36 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 0, i32 0, i64 2
  %81 = load float, ptr %arrayidx12.i.i36, align 4, !tbaa !137
  %add13.i.i37 = fadd float %mul8.i.i.i18, %81
  store float %add13.i.i37, ptr %arrayidx12.i.i36, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 1
  %82 = load float, ptr %m_invwi.i19, align 4, !tbaa !137
  %83 = load float, ptr %arrayidx5.i.i21.i, align 4, !tbaa !137
  %84 = load float, ptr %arrayidx10.i.i.i25, align 4, !tbaa !137
  %85 = load float, ptr %arrayidx.i.i24.i, align 4, !tbaa !137
  %86 = load float, ptr %arrayidx5.i12.i.i26, align 4, !tbaa !137
  %87 = load float, ptr %arrayidx10.i15.i.i28, align 4, !tbaa !137
  %88 = insertelement <2 x float> poison, float %83, i64 0
  %89 = insertelement <2 x float> %88, float %86, i64 1
  %90 = insertelement <2 x float> poison, float %75, i64 0
  %91 = shufflevector <2 x float> %90, <2 x float> poison, <2 x i32> zeroinitializer
  %92 = fmul <2 x float> %89, %91
  %93 = insertelement <2 x float> poison, float %82, i64 0
  %94 = insertelement <2 x float> %93, float %85, i64 1
  %95 = insertelement <2 x float> poison, float %73, i64 0
  %96 = shufflevector <2 x float> %95, <2 x float> poison, <2 x i32> zeroinitializer
  %97 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %94, <2 x float> %96, <2 x float> %92)
  %98 = insertelement <2 x float> poison, float %84, i64 0
  %99 = insertelement <2 x float> %98, float %87, i64 1
  %100 = insertelement <2 x float> poison, float %76, i64 0
  %101 = shufflevector <2 x float> %100, <2 x float> poison, <2 x i32> zeroinitializer
  %102 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %99, <2 x float> %101, <2 x float> %97)
  %103 = load <2 x float>, ptr %arrayidx7.i, align 4, !tbaa !137
  %104 = fadd <2 x float> %102, %103
  store <2 x float> %104, ptr %arrayidx7.i, align 4, !tbaa !137
  %arrayidx12.i30.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 1, i32 0, i64 2
  %105 = load float, ptr %arrayidx12.i30.i, align 4, !tbaa !137
  %add13.i31.i = fadd float %78, %105
  store float %add13.i31.i, ptr %arrayidx12.i30.i, align 4, !tbaa !137
  %m_ndimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 12
  %106 = load i32, ptr %m_ndimpulses.i, align 4, !tbaa !322
  %inc.i38 = add nsw i32 %106, 1
  store i32 %inc.i38, ptr %m_ndimpulses.i, align 4, !tbaa !322
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_ZN10btSoftBody16clusterVAImpulseEPNS_7ClusterERK9btVector3(ptr nocapture noundef %cluster, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %impulse) local_unnamed_addr #21 align 2 {
entry:
  %m_invwi = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7
  %0 = load float, ptr %impulse, align 4, !tbaa !137
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 1
  %1 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %arrayidx10.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %2 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2
  %3 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %4 = load float, ptr %arrayidx5.i18.i, align 4, !tbaa !137
  %mul8.i20.i = fmul float %1, %4
  %5 = tail call float @llvm.fmuladd.f32(float %3, float %0, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %6 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %7 = tail call float @llvm.fmuladd.f32(float %6, float %2, float %5)
  %arrayidx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 1
  %8 = load float, ptr %m_invwi, align 4, !tbaa !137
  %9 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %10 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %11 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %12 = load float, ptr %arrayidx5.i12.i, align 4, !tbaa !137
  %13 = insertelement <2 x float> poison, float %1, i64 0
  %14 = shufflevector <2 x float> %13, <2 x float> poison, <2 x i32> zeroinitializer
  %15 = insertelement <2 x float> poison, float %9, i64 0
  %16 = insertelement <2 x float> %15, float %12, i64 1
  %17 = fmul <2 x float> %14, %16
  %18 = insertelement <2 x float> poison, float %8, i64 0
  %19 = insertelement <2 x float> %18, float %11, i64 1
  %20 = insertelement <2 x float> poison, float %0, i64 0
  %21 = shufflevector <2 x float> %20, <2 x float> poison, <2 x i32> zeroinitializer
  %22 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %19, <2 x float> %21, <2 x float> %17)
  %23 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %24 = insertelement <2 x float> poison, float %10, i64 0
  %25 = insertelement <2 x float> %24, float %23, i64 1
  %26 = insertelement <2 x float> poison, float %2, i64 0
  %27 = shufflevector <2 x float> %26, <2 x float> poison, <2 x i32> zeroinitializer
  %28 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %25, <2 x float> %27, <2 x float> %22)
  %29 = load <2 x float>, ptr %arrayidx, align 4, !tbaa !137
  %30 = fadd <2 x float> %28, %29
  store <2 x float> %30, ptr %arrayidx, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 1, i32 0, i64 2
  %31 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %7, %31
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %m_av = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14
  %32 = load <2 x float>, ptr %m_av, align 4, !tbaa !137
  %33 = fadd <2 x float> %28, %32
  store <2 x float> %33, ptr %m_av, align 4, !tbaa !137
  %arrayidx12.i11 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14, i32 0, i64 2
  %34 = load float, ptr %arrayidx12.i11, align 4, !tbaa !137
  %add13.i12 = fadd float %7, %34
  store float %add13.i12, ptr %arrayidx12.i11, align 4, !tbaa !137
  %m_nvimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 11
  %35 = load i32, ptr %m_nvimpulses, align 8, !tbaa !321
  %inc = add nsw i32 %35, 1
  store i32 %inc, ptr %m_nvimpulses, align 8, !tbaa !321
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_ZN10btSoftBody16clusterDAImpulseEPNS_7ClusterERK9btVector3(ptr nocapture noundef %cluster, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %impulse) local_unnamed_addr #21 align 2 {
entry:
  %m_invwi = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7
  %0 = load float, ptr %impulse, align 4, !tbaa !137
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 1
  %1 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %arrayidx10.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %2 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2
  %3 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %4 = load float, ptr %arrayidx5.i18.i, align 4, !tbaa !137
  %mul8.i20.i = fmul float %1, %4
  %5 = tail call float @llvm.fmuladd.f32(float %3, float %0, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %6 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %7 = tail call float @llvm.fmuladd.f32(float %6, float %2, float %5)
  %arrayidx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 1
  %8 = load float, ptr %m_invwi, align 4, !tbaa !137
  %9 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %10 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %11 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %12 = load float, ptr %arrayidx5.i12.i, align 4, !tbaa !137
  %13 = insertelement <2 x float> poison, float %1, i64 0
  %14 = shufflevector <2 x float> %13, <2 x float> poison, <2 x i32> zeroinitializer
  %15 = insertelement <2 x float> poison, float %9, i64 0
  %16 = insertelement <2 x float> %15, float %12, i64 1
  %17 = fmul <2 x float> %14, %16
  %18 = insertelement <2 x float> poison, float %8, i64 0
  %19 = insertelement <2 x float> %18, float %11, i64 1
  %20 = insertelement <2 x float> poison, float %0, i64 0
  %21 = shufflevector <2 x float> %20, <2 x float> poison, <2 x i32> zeroinitializer
  %22 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %19, <2 x float> %21, <2 x float> %17)
  %23 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %24 = insertelement <2 x float> poison, float %10, i64 0
  %25 = insertelement <2 x float> %24, float %23, i64 1
  %26 = insertelement <2 x float> poison, float %2, i64 0
  %27 = shufflevector <2 x float> %26, <2 x float> poison, <2 x i32> zeroinitializer
  %28 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %25, <2 x float> %27, <2 x float> %22)
  %29 = load <2 x float>, ptr %arrayidx, align 4, !tbaa !137
  %30 = fadd <2 x float> %28, %29
  store <2 x float> %30, ptr %arrayidx, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 1, i32 0, i64 2
  %31 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %7, %31
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %m_ndimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 12
  %32 = load i32, ptr %m_ndimpulses, align 4, !tbaa !322
  %inc = add nsw i32 %32, 1
  store i32 %inc, ptr %m_ndimpulses, align 4, !tbaa !322
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_ZN10btSoftBody15clusterAImpulseEPNS_7ClusterERKNS_7ImpulseE(ptr nocapture noundef %cluster, ptr nocapture noundef nonnull readonly align 4 dereferenceable(33) %impulse) local_unnamed_addr #21 align 2 {
entry:
  %m_asVelocity = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 2
  %bf.load = load i8, ptr %m_asVelocity, align 4
  %0 = and i8 %bf.load, 1
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %m_invwi.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7
  %1 = load float, ptr %impulse, align 4, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 1
  %2 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %arrayidx10.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %3 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %arrayidx.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2
  %4 = load float, ptr %arrayidx.i17.i.i, align 4, !tbaa !137
  %arrayidx5.i18.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %5 = load float, ptr %arrayidx5.i18.i.i, align 4, !tbaa !137
  %mul8.i20.i.i = fmul float %2, %5
  %6 = tail call float @llvm.fmuladd.f32(float %4, float %1, float %mul8.i20.i.i)
  %arrayidx10.i21.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %7 = load float, ptr %arrayidx10.i21.i.i, align 4, !tbaa !137
  %8 = tail call float @llvm.fmuladd.f32(float %7, float %3, float %6)
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 1
  %9 = load float, ptr %m_invwi.i, align 4, !tbaa !137
  %10 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %11 = load float, ptr %arrayidx10.i.i.i, align 4, !tbaa !137
  %12 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %13 = load float, ptr %arrayidx5.i12.i.i, align 4, !tbaa !137
  %14 = insertelement <2 x float> poison, float %2, i64 0
  %15 = shufflevector <2 x float> %14, <2 x float> poison, <2 x i32> zeroinitializer
  %16 = insertelement <2 x float> poison, float %10, i64 0
  %17 = insertelement <2 x float> %16, float %13, i64 1
  %18 = fmul <2 x float> %15, %17
  %19 = insertelement <2 x float> poison, float %9, i64 0
  %20 = insertelement <2 x float> %19, float %12, i64 1
  %21 = insertelement <2 x float> poison, float %1, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> zeroinitializer
  %23 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %20, <2 x float> %22, <2 x float> %18)
  %24 = load float, ptr %arrayidx10.i15.i.i, align 4, !tbaa !137
  %25 = insertelement <2 x float> poison, float %11, i64 0
  %26 = insertelement <2 x float> %25, float %24, i64 1
  %27 = insertelement <2 x float> poison, float %3, i64 0
  %28 = shufflevector <2 x float> %27, <2 x float> poison, <2 x i32> zeroinitializer
  %29 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %26, <2 x float> %28, <2 x float> %23)
  %30 = load <2 x float>, ptr %arrayidx.i, align 4, !tbaa !137
  %31 = fadd <2 x float> %29, %30
  store <2 x float> %31, ptr %arrayidx.i, align 4, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 9, i64 1, i32 0, i64 2
  %32 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %add13.i.i = fadd float %8, %32
  store float %add13.i.i, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %m_av.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14
  %33 = load <2 x float>, ptr %m_av.i, align 4, !tbaa !137
  %34 = fadd <2 x float> %29, %33
  store <2 x float> %34, ptr %m_av.i, align 4, !tbaa !137
  %arrayidx12.i11.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 14, i32 0, i64 2
  %35 = load float, ptr %arrayidx12.i11.i, align 4, !tbaa !137
  %add13.i12.i = fadd float %8, %35
  store float %add13.i12.i, ptr %arrayidx12.i11.i, align 4, !tbaa !137
  %m_nvimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 11
  %36 = load i32, ptr %m_nvimpulses.i, align 8, !tbaa !321
  %inc.i = add nsw i32 %36, 1
  store i32 %inc.i, ptr %m_nvimpulses.i, align 8, !tbaa !321
  %bf.load1.pre = load i8, ptr %m_asVelocity, align 4
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %bf.load1 = phi i8 [ %bf.load1.pre, %if.then ], [ %bf.load, %entry ]
  %bf.shl2.mask = and i8 %bf.load1, 2
  %tobool5.not = icmp eq i8 %bf.shl2.mask, 0
  br i1 %tobool5.not, label %if.end7, label %if.then6

if.then6:                                         ; preds = %if.end
  %m_drift = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 1
  %m_invwi.i12 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7
  %37 = load float, ptr %m_drift, align 4, !tbaa !137
  %arrayidx5.i.i.i13 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx7.i.i.i14 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 1, i32 0, i64 1
  %38 = load float, ptr %arrayidx7.i.i.i14, align 4, !tbaa !137
  %arrayidx10.i.i.i16 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i.i17 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 1, i32 0, i64 2
  %39 = load float, ptr %arrayidx12.i.i.i17, align 4, !tbaa !137
  %arrayidx.i.i.i18 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i.i19 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i21 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i22 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2
  %40 = load float, ptr %arrayidx.i17.i.i22, align 4, !tbaa !137
  %arrayidx5.i18.i.i23 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %41 = load float, ptr %arrayidx5.i18.i.i23, align 4, !tbaa !137
  %mul8.i20.i.i24 = fmul float %38, %41
  %42 = tail call float @llvm.fmuladd.f32(float %40, float %37, float %mul8.i20.i.i24)
  %arrayidx10.i21.i.i25 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %43 = load float, ptr %arrayidx10.i21.i.i25, align 4, !tbaa !137
  %44 = tail call float @llvm.fmuladd.f32(float %43, float %39, float %42)
  %arrayidx.i26 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 1
  %45 = load float, ptr %m_invwi.i12, align 4, !tbaa !137
  %46 = load float, ptr %arrayidx5.i.i.i13, align 4, !tbaa !137
  %47 = load float, ptr %arrayidx10.i.i.i16, align 4, !tbaa !137
  %48 = load float, ptr %arrayidx.i.i.i18, align 4, !tbaa !137
  %49 = load float, ptr %arrayidx5.i12.i.i19, align 4, !tbaa !137
  %50 = insertelement <2 x float> poison, float %38, i64 0
  %51 = shufflevector <2 x float> %50, <2 x float> poison, <2 x i32> zeroinitializer
  %52 = insertelement <2 x float> poison, float %46, i64 0
  %53 = insertelement <2 x float> %52, float %49, i64 1
  %54 = fmul <2 x float> %51, %53
  %55 = insertelement <2 x float> poison, float %45, i64 0
  %56 = insertelement <2 x float> %55, float %48, i64 1
  %57 = insertelement <2 x float> poison, float %37, i64 0
  %58 = shufflevector <2 x float> %57, <2 x float> poison, <2 x i32> zeroinitializer
  %59 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %56, <2 x float> %58, <2 x float> %54)
  %60 = load float, ptr %arrayidx10.i15.i.i21, align 4, !tbaa !137
  %61 = insertelement <2 x float> poison, float %47, i64 0
  %62 = insertelement <2 x float> %61, float %60, i64 1
  %63 = insertelement <2 x float> poison, float %39, i64 0
  %64 = shufflevector <2 x float> %63, <2 x float> poison, <2 x i32> zeroinitializer
  %65 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %62, <2 x float> %64, <2 x float> %59)
  %66 = load <2 x float>, ptr %arrayidx.i26, align 4, !tbaa !137
  %67 = fadd <2 x float> %65, %66
  store <2 x float> %67, ptr %arrayidx.i26, align 4, !tbaa !137
  %arrayidx12.i.i30 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 1, i32 0, i64 2
  %68 = load float, ptr %arrayidx12.i.i30, align 4, !tbaa !137
  %add13.i.i31 = fadd float %44, %68
  store float %add13.i.i31, ptr %arrayidx12.i.i30, align 4, !tbaa !137
  %m_ndimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 12
  %69 = load i32, ptr %m_ndimpulses.i, align 4, !tbaa !322
  %inc.i32 = add nsw i32 %69, 1
  store i32 %inc.i32, ptr %m_ndimpulses.i, align 4, !tbaa !322
  br label %if.end7

if.end7:                                          ; preds = %if.then6, %if.end
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_ZN10btSoftBody16clusterDCImpulseEPNS_7ClusterERK9btVector3(ptr nocapture noundef %cluster, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %impulse) local_unnamed_addr #22 align 2 {
entry:
  %m_imass = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 5
  %0 = load float, ptr %m_imass, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %1 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %mul8.i = fmul float %0, %1
  %m_dimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10
  %2 = load <2 x float>, ptr %impulse, align 4, !tbaa !137
  %3 = insertelement <2 x float> poison, float %0, i64 0
  %4 = shufflevector <2 x float> %3, <2 x float> poison, <2 x i32> zeroinitializer
  %5 = fmul <2 x float> %4, %2
  %6 = load <2 x float>, ptr %m_dimpulses, align 4, !tbaa !137
  %7 = fadd <2 x float> %5, %6
  store <2 x float> %7, ptr %m_dimpulses, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 10, i64 0, i32 0, i64 2
  %8 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %mul8.i, %8
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %m_ndimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %cluster, i64 0, i32 12
  %9 = load i32, ptr %m_ndimpulses, align 4, !tbaa !322
  %inc = add nsw i32 %9, 1
  store i32 %inc, ptr %m_ndimpulses, align 4, !tbaa !322
  ret void
}

; Function Attrs: uwtable
define dso_local noundef i32 @_ZN10btSoftBody26generateBendingConstraintsEiPNS_8MaterialE(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %distance, ptr noundef %mat) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %l.sroa.7.i = alloca <{ [2 x ptr], float, i8, [3 x i8], float, float, float, %class.btVector3, [4 x i8] }>, align 8
  %nodeLinks = alloca %class.btAlignedObjectArray.84, align 8
  %ref.tmp = alloca %struct.NodeLinks, align 8
  %cmp = icmp sgt i32 %distance, 1
  br i1 %cmp, label %if.then, label %cleanup

if.then:                                          ; preds = %entry
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %mul = mul nsw i32 %0, %0
  %1 = zext i32 %mul to i64
  %2 = shl nuw nsw i64 %1, 2
  %call2 = tail call noalias noundef nonnull ptr @_Znam(i64 noundef %2) #36
  %cmp3613 = icmp sgt i32 %0, 0
  br i1 %cmp3613, label %for.cond4.preheader.us.preheader, label %for.cond25.preheader

for.cond4.preheader.us.preheader:                 ; preds = %if.then
  %3 = zext i32 %0 to i64
  %wide.trip.count653 = zext i32 %0 to i64
  br label %for.cond4.preheader.us

for.cond4.preheader.us:                           ; preds = %for.cond4.preheader.us.preheader, %for.cond4.for.inc22_crit_edge.us
  %indvars.iv648 = phi i64 [ 0, %for.cond4.preheader.us.preheader ], [ %indvars.iv.next649, %for.cond4.for.inc22_crit_edge.us ]
  %4 = mul nsw i64 %indvars.iv648, %3
  %5 = add nuw nsw i64 %4, %indvars.iv648
  %arrayidx17.us = getelementptr inbounds i32, ptr %call2, i64 %5
  br label %for.body6.us

for.body6.us:                                     ; preds = %for.cond4.preheader.us, %for.inc.us
  %indvars.iv = phi i64 [ 0, %for.cond4.preheader.us ], [ %indvars.iv.next, %for.inc.us ]
  %cmp7.not.us = icmp eq i64 %indvars.iv, %indvars.iv648
  br i1 %cmp7.not.us, label %if.else.us, label %if.then8.us

if.then8.us:                                      ; preds = %for.body6.us
  %6 = mul nsw i64 %indvars.iv, %3
  %7 = add nuw nsw i64 %6, %indvars.iv648
  %arrayidx.us = getelementptr inbounds i32, ptr %call2, i64 %7
  store i32 2147483647, ptr %arrayidx.us, align 4, !tbaa !140
  %8 = add nuw nsw i64 %indvars.iv, %4
  %arrayidx13.us = getelementptr inbounds i32, ptr %call2, i64 %8
  store i32 2147483647, ptr %arrayidx13.us, align 4, !tbaa !140
  br label %for.inc.us

if.else.us:                                       ; preds = %for.body6.us
  store i32 0, ptr %arrayidx17.us, align 4, !tbaa !140
  br label %for.inc.us

for.inc.us:                                       ; preds = %if.else.us, %if.then8.us
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count653
  br i1 %exitcond.not, label %for.cond4.for.inc22_crit_edge.us, label %for.body6.us

for.cond4.for.inc22_crit_edge.us:                 ; preds = %for.inc.us
  %indvars.iv.next649 = add nuw nsw i64 %indvars.iv648, 1
  %exitcond654.not = icmp eq i64 %indvars.iv.next649, %wide.trip.count653
  br i1 %exitcond654.not, label %for.cond25.preheader, label %for.cond4.preheader.us

for.cond25.preheader:                             ; preds = %for.cond4.for.inc22_crit_edge.us, %if.then
  %m_size.i420 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %9 = load i32, ptr %m_size.i420, align 4, !tbaa !92
  %cmp27615 = icmp sgt i32 %9, 0
  br i1 %cmp27615, label %for.body28.lr.ph, label %for.end55

for.body28.lr.ph:                                 ; preds = %for.cond25.preheader
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %10 = load ptr, ptr %m_data.i, align 8, !tbaa !91
  %m_data.i421 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %11 = load ptr, ptr %m_data.i421, align 8, !tbaa !87
  %sub.ptr.rhs.cast = ptrtoint ptr %11 to i64
  %wide.trip.count658 = zext i32 %9 to i64
  br label %for.body28

for.body28:                                       ; preds = %for.body28.lr.ph, %for.body28
  %indvars.iv655 = phi i64 [ 0, %for.body28.lr.ph ], [ %indvars.iv.next656, %for.body28 ]
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %10, i64 %indvars.iv655, i32 1
  %12 = load ptr, ptr %m_n, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %12 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 120
  %conv = trunc i64 %sub.ptr.div to i32
  %arrayidx37 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %10, i64 %indvars.iv655, i32 1, i64 1
  %13 = load ptr, ptr %arrayidx37, align 8, !tbaa !219
  %sub.ptr.lhs.cast40 = ptrtoint ptr %13 to i64
  %sub.ptr.sub42 = sub i64 %sub.ptr.lhs.cast40, %sub.ptr.rhs.cast
  %sub.ptr.div43 = sdiv exact i64 %sub.ptr.sub42, 120
  %conv44 = trunc i64 %sub.ptr.div43 to i32
  %mul45 = mul nsw i32 %0, %conv44
  %add46 = add nsw i32 %mul45, %conv
  %idxprom47 = sext i32 %add46 to i64
  %arrayidx48 = getelementptr inbounds i32, ptr %call2, i64 %idxprom47
  store i32 1, ptr %arrayidx48, align 4, !tbaa !140
  %mul49 = mul nsw i32 %0, %conv
  %add50 = add nsw i32 %mul49, %conv44
  %idxprom51 = sext i32 %add50 to i64
  %arrayidx52 = getelementptr inbounds i32, ptr %call2, i64 %idxprom51
  store i32 1, ptr %arrayidx52, align 4, !tbaa !140
  %indvars.iv.next656 = add nuw nsw i64 %indvars.iv655, 1
  %exitcond659.not = icmp eq i64 %indvars.iv.next656, %wide.trip.count658
  br i1 %exitcond659.not, label %for.end55, label %for.body28

for.end55:                                        ; preds = %for.body28, %for.cond25.preheader
  %cmp56 = icmp eq i32 %distance, 2
  br i1 %cmp56, label %if.then57, label %for.cond228.preheader

for.cond228.preheader:                            ; preds = %for.end55
  br i1 %cmp3613, label %for.cond232.preheader.us.preheader, label %delete.notnull

for.cond232.preheader.us.preheader:               ; preds = %for.cond228.preheader
  %14 = zext i32 %0 to i64
  %wide.trip.count682 = zext i32 %0 to i64
  br label %for.cond232.preheader.us

for.cond232.preheader.us:                         ; preds = %for.cond232.preheader.us.preheader, %for.cond232.for.inc270_crit_edge.us
  %indvars.iv678 = phi i64 [ 0, %for.cond232.preheader.us.preheader ], [ %indvars.iv.next679, %for.cond232.for.inc270_crit_edge.us ]
  %15 = mul nsw i64 %indvars.iv678, %14
  br label %for.body234.us

for.body234.us:                                   ; preds = %for.cond232.preheader.us, %for.cond232.loopexit.us
  %indvars.iv671 = phi i64 [ 0, %for.cond232.preheader.us ], [ %indvars.iv.next672, %for.cond232.loopexit.us ]
  %indvars.iv660 = phi i64 [ 1, %for.cond232.preheader.us ], [ %indvars.iv.next661, %for.cond232.loopexit.us ]
  %indvars.iv.next672 = add nuw nsw i64 %indvars.iv671, 1
  %cmp237617.us = icmp ult i64 %indvars.iv.next672, %14
  br i1 %cmp237617.us, label %for.body238.lr.ph.us, label %for.cond232.loopexit.us

for.body238.us:                                   ; preds = %for.body238.lr.ph.us, %if.end263.us
  %indvars.iv662 = phi i64 [ %indvars.iv660, %for.body238.lr.ph.us ], [ %indvars.iv.next663, %if.end263.us ]
  %16 = add nuw nsw i64 %indvars.iv662, %15
  %arrayidx243.us = getelementptr inbounds i32, ptr %call2, i64 %16
  %17 = load i32, ptr %arrayidx243.us, align 4, !tbaa !140
  %18 = load i32, ptr %arrayidx247.us, align 4, !tbaa !140
  %add248.us = add i32 %18, %17
  %19 = add nuw nsw i64 %indvars.iv662, %23
  %arrayidx252.us = getelementptr inbounds i32, ptr %call2, i64 %19
  %20 = load i32, ptr %arrayidx252.us, align 4, !tbaa !140
  %cmp253.us = icmp ugt i32 %20, %add248.us
  br i1 %cmp253.us, label %if.then254.us, label %if.end263.us

if.then254.us:                                    ; preds = %for.body238.us
  %21 = mul nsw i64 %indvars.iv662, %14
  %22 = add nuw nsw i64 %21, %indvars.iv671
  %arrayidx258.us = getelementptr inbounds i32, ptr %call2, i64 %22
  store i32 %add248.us, ptr %arrayidx258.us, align 4, !tbaa !140
  store i32 %add248.us, ptr %arrayidx252.us, align 4, !tbaa !140
  br label %if.end263.us

if.end263.us:                                     ; preds = %if.then254.us, %for.body238.us
  %indvars.iv.next663 = add nuw nsw i64 %indvars.iv662, 1
  %exitcond670.not = icmp eq i64 %indvars.iv.next663, %wide.trip.count682
  br i1 %exitcond670.not, label %for.cond232.loopexit.us, label %for.body238.us

for.cond232.loopexit.us:                          ; preds = %if.end263.us, %for.body234.us
  %indvars.iv.next661 = add nuw nsw i64 %indvars.iv660, 1
  %exitcond677.not = icmp eq i64 %indvars.iv.next672, %wide.trip.count682
  br i1 %exitcond677.not, label %for.cond232.for.inc270_crit_edge.us, label %for.body234.us

for.body238.lr.ph.us:                             ; preds = %for.body234.us
  %23 = mul nsw i64 %indvars.iv671, %14
  %24 = add nuw nsw i64 %23, %indvars.iv678
  %arrayidx247.us = getelementptr inbounds i32, ptr %call2, i64 %24
  br label %for.body238.us

for.cond232.for.inc270_crit_edge.us:              ; preds = %for.cond232.loopexit.us
  %indvars.iv.next679 = add nuw nsw i64 %indvars.iv678, 1
  %exitcond683.not = icmp eq i64 %indvars.iv.next679, %wide.trip.count682
  br i1 %exitcond683.not, label %if.end273, label %for.cond232.preheader.us

if.then57:                                        ; preds = %for.end55
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %nodeLinks) #38
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %nodeLinks, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !323
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %nodeLinks, i64 0, i32 5
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !326
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %nodeLinks, i64 0, i32 2
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !327
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %nodeLinks, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !328
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %ref.tmp) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %ref.tmp, i8 0, i64 32, i1 false)
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %ref.tmp, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !130
  %m_data.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %ref.tmp, i64 0, i32 5
  %m_size.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %ref.tmp, i64 0, i32 2
  store i32 0, ptr %m_size.i.i.i, align 4, !tbaa !132
  invoke void @_ZN20btAlignedObjectArrayI9NodeLinksE6resizeEiRKS0_(ptr noundef nonnull align 8 dereferenceable(25) %nodeLinks, i32 noundef %0, ptr noundef nonnull align 8 dereferenceable(32) %ref.tmp)
          to label %invoke.cont63 unwind label %lpad62

invoke.cont63:                                    ; preds = %if.then57
  %25 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !131
  %tobool.not.i.i.i.i = icmp eq ptr %25, null
  %26 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i = icmp eq i8 %26, 0
  %or.cond.i.i.i = select i1 %tobool.not.i.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i
  br i1 %or.cond.i.i.i, label %_ZN9NodeLinksD2Ev.exit, label %if.then3.i.i.i.i

if.then3.i.i.i.i:                                 ; preds = %invoke.cont63
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %25)
          to label %_ZN9NodeLinksD2Ev.exit unwind label %lpad60

_ZN9NodeLinksD2Ev.exit:                           ; preds = %if.then3.i.i.i.i, %invoke.cont63
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %ref.tmp) #38
  %27 = load i32, ptr %m_size.i420, align 4, !tbaa !92
  %cmp70623 = icmp sgt i32 %27, 0
  br i1 %cmp70623, label %for.body71.lr.ph, label %for.cond141.preheader

for.body71.lr.ph:                                 ; preds = %_ZN9NodeLinksD2Ev.exit
  %m_data.i428 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %m_data.i431 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  br label %for.body71

for.cond141.preheader:                            ; preds = %if.end135, %_ZN9NodeLinksD2Ev.exit
  %28 = load i32, ptr %m_size.i.i, align 4, !tbaa !327
  %cmp145629 = icmp sgt i32 %28, 0
  br i1 %cmp145629, label %for.cond148.preheader.lr.ph, label %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i.i

for.cond148.preheader.lr.ph:                      ; preds = %for.cond141.preheader
  %29 = load ptr, ptr %m_data.i.i, align 8, !tbaa !326
  %wide.trip.count696 = zext i32 %28 to i64
  br label %for.cond148.preheader

for.body71:                                       ; preds = %for.body71.lr.ph, %if.end135
  %indvars.iv684 = phi i64 [ 0, %for.body71.lr.ph ], [ %indvars.iv.next685, %if.end135 ]
  %30 = load ptr, ptr %m_data.i428, align 8, !tbaa !91
  %m_n77 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %30, i64 %indvars.iv684, i32 1
  %31 = load ptr, ptr %m_n77, align 8, !tbaa !219
  %32 = load ptr, ptr %m_data.i431, align 8, !tbaa !87
  %sub.ptr.lhs.cast82 = ptrtoint ptr %31 to i64
  %sub.ptr.rhs.cast83 = ptrtoint ptr %32 to i64
  %sub.ptr.sub84 = sub i64 %sub.ptr.lhs.cast82, %sub.ptr.rhs.cast83
  %sub.ptr.div85 = sdiv exact i64 %sub.ptr.sub84, 120
  %conv86 = trunc i64 %sub.ptr.div85 to i32
  %arrayidx93 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %30, i64 %indvars.iv684, i32 1, i64 1
  %33 = load ptr, ptr %arrayidx93, align 8, !tbaa !219
  %sub.ptr.lhs.cast97 = ptrtoint ptr %33 to i64
  %sub.ptr.sub99 = sub i64 %sub.ptr.lhs.cast97, %sub.ptr.rhs.cast83
  %sub.ptr.div100 = sdiv exact i64 %sub.ptr.sub99, 120
  %conv101 = trunc i64 %sub.ptr.div100 to i32
  %34 = load ptr, ptr %m_data.i.i, align 8, !tbaa !326
  %sext = shl i64 %sub.ptr.div85, 32
  %idxprom.i437 = ashr exact i64 %sext, 32
  %arrayidx.i438 = getelementptr inbounds %struct.NodeLinks, ptr %34, i64 %idxprom.i437
  %m_size.i.i439 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i438, i64 0, i32 2
  %35 = load i32, ptr %m_size.i.i439, align 4, !tbaa !132
  %cmp8.i = icmp sgt i32 %35, 0
  br i1 %cmp8.i, label %for.body.lr.ph.i, label %if.then113

for.body.lr.ph.i:                                 ; preds = %for.body71
  %m_data.i440 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i438, i64 0, i32 5
  %36 = load ptr, ptr %m_data.i440, align 8, !tbaa !131
  %wide.trip.count.i = zext i32 %35 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.inc.i ]
  %arrayidx.i441 = getelementptr inbounds i32, ptr %36, i64 %indvars.iv.i
  %37 = load i32, ptr %arrayidx.i441, align 4, !tbaa !140
  %cmp3.i = icmp eq i32 %37, %conv101
  br i1 %cmp3.i, label %_ZNK20btAlignedObjectArrayIiE16findLinearSearchERKi.exit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %if.then113, label %for.body.i

_ZNK20btAlignedObjectArrayIiE16findLinearSearchERKi.exit: ; preds = %for.body.i
  %38 = trunc i64 %indvars.iv.i to i32
  %cmp112 = icmp eq i32 %35, %38
  br i1 %cmp112, label %if.then113, label %if.end118

if.then113:                                       ; preds = %for.inc.i, %for.body71, %_ZNK20btAlignedObjectArrayIiE16findLinearSearchERKi.exit
  %m_capacity.i.i450 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i438, i64 0, i32 3
  %39 = load i32, ptr %m_capacity.i.i450, align 8, !tbaa !133
  %cmp.i = icmp eq i32 %35, %39
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIiE9push_backERKi.exit

if.then.i:                                        ; preds = %if.then113
  %tobool.not.i.i = icmp eq i32 %35, 0
  %mul.i.i = shl nsw i32 %35, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %35, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIiE9push_backERKi.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 2
  %call.i.i.i.i457 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
          to label %call.i.i.i.i.noexc unwind label %lpad89

call.i.i.i.i.noexc:                               ; preds = %if.then.i.i.i
  %.pre.i = load i32, ptr %m_size.i.i439, align 4, !tbaa !132
  br label %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i: ; preds = %call.i.i.i.i.noexc, %if.then.i.i
  %40 = phi i32 [ %.pre.i, %call.i.i.i.i.noexc ], [ %35, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i457, %call.i.i.i.i.noexc ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %40, 0
  %m_data.i.i.i451 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i438, i64 0, i32 5
  %41 = load ptr, ptr %m_data.i.i.i451, align 8, !tbaa !131
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i
  %42 = ptrtoint ptr %41 to i64
  %retval.0.i.i.i726 = ptrtoint ptr %retval.0.i.i.i to i64
  %wide.trip.count.i.i.i = zext i32 %40 to i64
  %min.iters.check730 = icmp ult i32 %40, 8
  %43 = sub i64 %retval.0.i.i.i726, %42
  %diff.check727 = icmp ult i64 %43, 32
  %or.cond = select i1 %min.iters.check730, i1 true, i1 %diff.check727
  br i1 %or.cond, label %for.body.i.i.i.preheader, label %vector.ph731

vector.ph731:                                     ; preds = %for.body.lr.ph.i.i.i
  %n.vec733 = and i64 %wide.trip.count.i.i.i, 4294967288
  br label %vector.body736

vector.body736:                                   ; preds = %vector.body736, %vector.ph731
  %index737 = phi i64 [ 0, %vector.ph731 ], [ %index.next740, %vector.body736 ]
  %44 = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %index737
  %45 = getelementptr inbounds i32, ptr %41, i64 %index737
  %wide.load738 = load <4 x i32>, ptr %45, align 4, !tbaa !140
  %46 = getelementptr inbounds i32, ptr %45, i64 4
  %wide.load739 = load <4 x i32>, ptr %46, align 4, !tbaa !140
  store <4 x i32> %wide.load738, ptr %44, align 4, !tbaa !140
  %47 = getelementptr inbounds i32, ptr %44, i64 4
  store <4 x i32> %wide.load739, ptr %47, align 4, !tbaa !140
  %index.next740 = add nuw i64 %index737, 8
  %48 = icmp eq i64 %index.next740, %n.vec733
  br i1 %48, label %middle.block728, label %vector.body736, !llvm.loop !329

middle.block728:                                  ; preds = %vector.body736
  %cmp.n735 = icmp eq i64 %n.vec733, %wide.trip.count.i.i.i
  br i1 %cmp.n735, label %if.then.i11.i.i, label %for.body.i.i.i.preheader

for.body.i.i.i.preheader:                         ; preds = %for.body.lr.ph.i.i.i, %middle.block728
  %indvars.iv.i.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %n.vec733, %middle.block728 ]
  %49 = xor i64 %indvars.iv.i.i.i.ph, -1
  %50 = add nsw i64 %49, %wide.trip.count.i.i.i
  %xtraiter = and i64 %wide.trip.count.i.i.i, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol

for.body.i.i.i.prol:                              ; preds = %for.body.i.i.i.preheader, %for.body.i.i.i.prol
  %indvars.iv.i.i.i.prol = phi i64 [ %indvars.iv.next.i.i.i.prol, %for.body.i.i.i.prol ], [ %indvars.iv.i.i.i.ph, %for.body.i.i.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.i.i.prol ], [ 0, %for.body.i.i.i.preheader ]
  %arrayidx.i.i.i.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.prol
  %arrayidx3.i.i.i.prol = getelementptr inbounds i32, ptr %41, i64 %indvars.iv.i.i.i.prol
  %51 = load i32, ptr %arrayidx3.i.i.i.prol, align 4, !tbaa !140
  store i32 %51, ptr %arrayidx.i.i.i.prol, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.prol = add nuw nsw i64 %indvars.iv.i.i.i.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol, !llvm.loop !330

for.body.i.i.i.prol.loopexit:                     ; preds = %for.body.i.i.i.prol, %for.body.i.i.i.preheader
  %indvars.iv.i.i.i.unr = phi i64 [ %indvars.iv.i.i.i.ph, %for.body.i.i.i.preheader ], [ %indvars.iv.next.i.i.i.prol, %for.body.i.i.i.prol ]
  %52 = icmp ult i64 %50, 3
  br i1 %52, label %if.then.i11.i.i, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i
  %indvars.iv.i.i.i = phi i64 [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ], [ %indvars.iv.i.i.i.unr, %for.body.i.i.i.prol.loopexit ]
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %arrayidx3.i.i.i = getelementptr inbounds i32, ptr %41, i64 %indvars.iv.i.i.i
  %53 = load i32, ptr %arrayidx3.i.i.i, align 4, !tbaa !140
  store i32 %53, ptr %arrayidx.i.i.i, align 4, !tbaa !140
  %indvars.iv.next.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %arrayidx3.i.i.i.1 = getelementptr inbounds i32, ptr %41, i64 %indvars.iv.next.i.i.i
  %54 = load i32, ptr %arrayidx3.i.i.i.1, align 4, !tbaa !140
  store i32 %54, ptr %arrayidx.i.i.i.1, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %arrayidx3.i.i.i.2 = getelementptr inbounds i32, ptr %41, i64 %indvars.iv.next.i.i.i.1
  %55 = load i32, ptr %arrayidx3.i.i.i.2, align 4, !tbaa !140
  store i32 %55, ptr %arrayidx.i.i.i.2, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.2 = add nuw nsw i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %arrayidx3.i.i.i.3 = getelementptr inbounds i32, ptr %41, i64 %indvars.iv.next.i.i.i.2
  %56 = load i32, ptr %arrayidx3.i.i.i.3, align 4, !tbaa !140
  store i32 %56, ptr %arrayidx.i.i.i.3, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %exitcond.not.i.i.i.3 = icmp eq i64 %indvars.iv.next.i.i.i.3, %wide.trip.count.i.i.i
  br i1 %exitcond.not.i.i.i.3, label %if.then.i11.i.i, label %for.body.i.i.i, !llvm.loop !331

_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i: ; preds = %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i
  %tobool.not.i10.i.i = icmp eq ptr %41, null
  br i1 %tobool.not.i10.i.i, label %_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i, label %if.then.i11.i.i

if.then.i11.i.i:                                  ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i, %middle.block728, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i
  %m_ownsMemory.i.i.i452 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i438, i64 0, i32 6
  %57 = load i8, ptr %m_ownsMemory.i.i.i452, align 8, !tbaa !130, !range !159, !noundef !192
  %tobool2.not.i.i.i = icmp eq i8 %57, 0
  br i1 %tobool2.not.i.i.i, label %if.end.i.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %if.then.i11.i.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %41)
          to label %if.end.i.i.i unwind label %lpad89

if.end.i.i.i:                                     ; preds = %if.then3.i.i.i, %if.then.i11.i.i
  %.pre7.pre.i = load i32, ptr %m_size.i.i439, align 4, !tbaa !132
  br label %_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i: ; preds = %if.end.i.i.i, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i
  %.pre7.i = phi i32 [ %.pre7.pre.i, %if.end.i.i.i ], [ %40, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i ]
  %m_ownsMemory.i.i453 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i438, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i453, align 8, !tbaa !130
  store ptr %retval.0.i.i.i, ptr %m_data.i.i.i451, align 8, !tbaa !131
  store i32 %cond.i.i, ptr %m_capacity.i.i450, align 8, !tbaa !133
  %.pre.pre = load ptr, ptr %m_data.i.i, align 8, !tbaa !326
  br label %_ZN20btAlignedObjectArrayIiE9push_backERKi.exit

_ZN20btAlignedObjectArrayIiE9push_backERKi.exit:  ; preds = %if.then113, %if.then.i, %_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i
  %.pre = phi ptr [ %.pre.pre, %_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i ], [ %34, %if.then.i ], [ %34, %if.then113 ]
  %58 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i ], [ %35, %if.then.i ], [ %35, %if.then113 ]
  %m_data.i454 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i438, i64 0, i32 5
  %59 = load ptr, ptr %m_data.i454, align 8, !tbaa !131
  %idxprom.i455 = sext i32 %58 to i64
  %arrayidx.i456 = getelementptr inbounds i32, ptr %59, i64 %idxprom.i455
  store i32 %conv101, ptr %arrayidx.i456, align 4, !tbaa !140
  %60 = load i32, ptr %m_size.i.i439, align 4, !tbaa !132
  %inc.i = add nsw i32 %60, 1
  store i32 %inc.i, ptr %m_size.i.i439, align 4, !tbaa !132
  br label %if.end118

lpad60:                                           ; preds = %if.then3.i.i.i.i
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad62:                                           ; preds = %if.then57
  %62 = landingpad { ptr, i32 }
          cleanup
  %63 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !131
  %tobool.not.i.i.i.i460 = icmp eq ptr %63, null
  %64 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i462 = icmp eq i8 %64, 0
  %or.cond.i.i.i463 = select i1 %tobool.not.i.i.i.i460, i1 true, i1 %tobool2.not.i.i.i.i462
  br i1 %or.cond.i.i.i463, label %ehcleanup, label %if.then3.i.i.i.i464

if.then3.i.i.i.i464:                              ; preds = %lpad62
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %63)
          to label %ehcleanup unwind label %terminate.lpad

ehcleanup:                                        ; preds = %lpad62, %if.then3.i.i.i.i464, %lpad60
  %.pn = phi { ptr, i32 } [ %61, %lpad60 ], [ %62, %if.then3.i.i.i.i464 ], [ %62, %lpad62 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %ref.tmp) #38
  br label %ehcleanup223

lpad89:                                           ; preds = %if.then3.i.i.i525, %if.then.i.i.i507, %if.then3.i.i.i, %if.then.i.i.i
  %65 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup223

if.end118:                                        ; preds = %_ZN20btAlignedObjectArrayIiE9push_backERKi.exit, %_ZNK20btAlignedObjectArrayIiE16findLinearSearchERKi.exit
  %66 = phi ptr [ %.pre, %_ZN20btAlignedObjectArrayIiE9push_backERKi.exit ], [ %34, %_ZNK20btAlignedObjectArrayIiE16findLinearSearchERKi.exit ]
  %sext605 = shl i64 %sub.ptr.div100, 32
  %idxprom.i470 = ashr exact i64 %sext605, 32
  %arrayidx.i471 = getelementptr inbounds %struct.NodeLinks, ptr %66, i64 %idxprom.i470
  %m_size.i.i472 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i471, i64 0, i32 2
  %67 = load i32, ptr %m_size.i.i472, align 4, !tbaa !132
  %cmp8.i473 = icmp sgt i32 %67, 0
  br i1 %cmp8.i473, label %for.body.lr.ph.i476, label %if.then130

for.body.lr.ph.i476:                              ; preds = %if.end118
  %m_data.i474 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i471, i64 0, i32 5
  %68 = load ptr, ptr %m_data.i474, align 8, !tbaa !131
  %wide.trip.count.i475 = zext i32 %67 to i64
  br label %for.body.i480

for.body.i480:                                    ; preds = %for.inc.i483, %for.body.lr.ph.i476
  %indvars.iv.i477 = phi i64 [ 0, %for.body.lr.ph.i476 ], [ %indvars.iv.next.i481, %for.inc.i483 ]
  %arrayidx.i478 = getelementptr inbounds i32, ptr %68, i64 %indvars.iv.i477
  %69 = load i32, ptr %arrayidx.i478, align 4, !tbaa !140
  %cmp3.i479 = icmp eq i32 %69, %conv86
  br i1 %cmp3.i479, label %_ZNK20btAlignedObjectArrayIiE16findLinearSearchERKi.exit486, label %for.inc.i483

for.inc.i483:                                     ; preds = %for.body.i480
  %indvars.iv.next.i481 = add nuw nsw i64 %indvars.iv.i477, 1
  %exitcond.not.i482 = icmp eq i64 %indvars.iv.next.i481, %wide.trip.count.i475
  br i1 %exitcond.not.i482, label %if.then130, label %for.body.i480

_ZNK20btAlignedObjectArrayIiE16findLinearSearchERKi.exit486: ; preds = %for.body.i480
  %70 = trunc i64 %indvars.iv.i477 to i32
  %cmp129 = icmp eq i32 %67, %70
  br i1 %cmp129, label %if.then130, label %if.end135

if.then130:                                       ; preds = %for.inc.i483, %if.end118, %_ZNK20btAlignedObjectArrayIiE16findLinearSearchERKi.exit486
  %m_capacity.i.i495 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i471, i64 0, i32 3
  %71 = load i32, ptr %m_capacity.i.i495, align 8, !tbaa !133
  %cmp.i496 = icmp eq i32 %67, %71
  br i1 %cmp.i496, label %if.then.i501, label %_ZN20btAlignedObjectArrayIiE9push_backERKi.exit538

if.then.i501:                                     ; preds = %if.then130
  %tobool.not.i.i497 = icmp eq i32 %67, 0
  %mul.i.i498 = shl nsw i32 %67, 1
  %cond.i.i499 = select i1 %tobool.not.i.i497, i32 1, i32 %mul.i.i498
  %cmp.i.i500 = icmp slt i32 %67, %cond.i.i499
  br i1 %cmp.i.i500, label %if.then.i.i503, label %_ZN20btAlignedObjectArrayIiE9push_backERKi.exit538

if.then.i.i503:                                   ; preds = %if.then.i501
  %tobool.not.i.i.i502 = icmp eq i32 %cond.i.i499, 0
  br i1 %tobool.not.i.i.i502, label %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i511, label %if.then.i.i.i507

if.then.i.i.i507:                                 ; preds = %if.then.i.i503
  %conv.i.i.i.i504 = sext i32 %cond.i.i499 to i64
  %mul.i.i.i.i505 = shl nsw i64 %conv.i.i.i.i504, 2
  %call.i.i.i.i536 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i505, i32 noundef 16)
          to label %call.i.i.i.i.noexc535 unwind label %lpad89

call.i.i.i.i.noexc535:                            ; preds = %if.then.i.i.i507
  %.pre.i506 = load i32, ptr %m_size.i.i472, align 4, !tbaa !132
  br label %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i511

_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i511: ; preds = %call.i.i.i.i.noexc535, %if.then.i.i503
  %72 = phi i32 [ %.pre.i506, %call.i.i.i.i.noexc535 ], [ %67, %if.then.i.i503 ]
  %retval.0.i.i.i508 = phi ptr [ %call.i.i.i.i536, %call.i.i.i.i.noexc535 ], [ null, %if.then.i.i503 ]
  %cmp7.i.i.i509 = icmp sgt i32 %72, 0
  %m_data.i.i.i510 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i471, i64 0, i32 5
  %73 = load ptr, ptr %m_data.i.i.i510, align 8, !tbaa !131
  br i1 %cmp7.i.i.i509, label %for.body.lr.ph.i.i.i513, label %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i521

for.body.lr.ph.i.i.i513:                          ; preds = %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i511
  %74 = ptrtoint ptr %73 to i64
  %retval.0.i.i.i508723 = ptrtoint ptr %retval.0.i.i.i508 to i64
  %wide.trip.count.i.i.i512 = zext i32 %72 to i64
  %min.iters.check = icmp ult i32 %72, 8
  %75 = sub i64 %retval.0.i.i.i508723, %74
  %diff.check = icmp ult i64 %75, 32
  %or.cond741 = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond741, label %for.body.i.i.i519.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i.i513
  %n.vec = and i64 %wide.trip.count.i.i.i512, 4294967288
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %76 = getelementptr inbounds i32, ptr %retval.0.i.i.i508, i64 %index
  %77 = getelementptr inbounds i32, ptr %73, i64 %index
  %wide.load = load <4 x i32>, ptr %77, align 4, !tbaa !140
  %78 = getelementptr inbounds i32, ptr %77, i64 4
  %wide.load724 = load <4 x i32>, ptr %78, align 4, !tbaa !140
  store <4 x i32> %wide.load, ptr %76, align 4, !tbaa !140
  %79 = getelementptr inbounds i32, ptr %76, i64 4
  store <4 x i32> %wide.load724, ptr %79, align 4, !tbaa !140
  %index.next = add nuw i64 %index, 8
  %80 = icmp eq i64 %index.next, %n.vec
  br i1 %80, label %middle.block, label %vector.body, !llvm.loop !332

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i.i512
  br i1 %cmp.n, label %if.then.i11.i.i524, label %for.body.i.i.i519.preheader

for.body.i.i.i519.preheader:                      ; preds = %for.body.lr.ph.i.i.i513, %middle.block
  %indvars.iv.i.i.i514.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i513 ], [ %n.vec, %middle.block ]
  %81 = xor i64 %indvars.iv.i.i.i514.ph, -1
  %82 = add nsw i64 %81, %wide.trip.count.i.i.i512
  %xtraiter744 = and i64 %wide.trip.count.i.i.i512, 3
  %lcmp.mod745.not = icmp eq i64 %xtraiter744, 0
  br i1 %lcmp.mod745.not, label %for.body.i.i.i519.prol.loopexit, label %for.body.i.i.i519.prol

for.body.i.i.i519.prol:                           ; preds = %for.body.i.i.i519.preheader, %for.body.i.i.i519.prol
  %indvars.iv.i.i.i514.prol = phi i64 [ %indvars.iv.next.i.i.i517.prol, %for.body.i.i.i519.prol ], [ %indvars.iv.i.i.i514.ph, %for.body.i.i.i519.preheader ]
  %prol.iter746 = phi i64 [ %prol.iter746.next, %for.body.i.i.i519.prol ], [ 0, %for.body.i.i.i519.preheader ]
  %arrayidx.i.i.i515.prol = getelementptr inbounds i32, ptr %retval.0.i.i.i508, i64 %indvars.iv.i.i.i514.prol
  %arrayidx3.i.i.i516.prol = getelementptr inbounds i32, ptr %73, i64 %indvars.iv.i.i.i514.prol
  %83 = load i32, ptr %arrayidx3.i.i.i516.prol, align 4, !tbaa !140
  store i32 %83, ptr %arrayidx.i.i.i515.prol, align 4, !tbaa !140
  %indvars.iv.next.i.i.i517.prol = add nuw nsw i64 %indvars.iv.i.i.i514.prol, 1
  %prol.iter746.next = add i64 %prol.iter746, 1
  %prol.iter746.cmp.not = icmp eq i64 %prol.iter746.next, %xtraiter744
  br i1 %prol.iter746.cmp.not, label %for.body.i.i.i519.prol.loopexit, label %for.body.i.i.i519.prol, !llvm.loop !333

for.body.i.i.i519.prol.loopexit:                  ; preds = %for.body.i.i.i519.prol, %for.body.i.i.i519.preheader
  %indvars.iv.i.i.i514.unr = phi i64 [ %indvars.iv.i.i.i514.ph, %for.body.i.i.i519.preheader ], [ %indvars.iv.next.i.i.i517.prol, %for.body.i.i.i519.prol ]
  %84 = icmp ult i64 %82, 3
  br i1 %84, label %if.then.i11.i.i524, label %for.body.i.i.i519

for.body.i.i.i519:                                ; preds = %for.body.i.i.i519.prol.loopexit, %for.body.i.i.i519
  %indvars.iv.i.i.i514 = phi i64 [ %indvars.iv.next.i.i.i517.3, %for.body.i.i.i519 ], [ %indvars.iv.i.i.i514.unr, %for.body.i.i.i519.prol.loopexit ]
  %arrayidx.i.i.i515 = getelementptr inbounds i32, ptr %retval.0.i.i.i508, i64 %indvars.iv.i.i.i514
  %arrayidx3.i.i.i516 = getelementptr inbounds i32, ptr %73, i64 %indvars.iv.i.i.i514
  %85 = load i32, ptr %arrayidx3.i.i.i516, align 4, !tbaa !140
  store i32 %85, ptr %arrayidx.i.i.i515, align 4, !tbaa !140
  %indvars.iv.next.i.i.i517 = add nuw nsw i64 %indvars.iv.i.i.i514, 1
  %arrayidx.i.i.i515.1 = getelementptr inbounds i32, ptr %retval.0.i.i.i508, i64 %indvars.iv.next.i.i.i517
  %arrayidx3.i.i.i516.1 = getelementptr inbounds i32, ptr %73, i64 %indvars.iv.next.i.i.i517
  %86 = load i32, ptr %arrayidx3.i.i.i516.1, align 4, !tbaa !140
  store i32 %86, ptr %arrayidx.i.i.i515.1, align 4, !tbaa !140
  %indvars.iv.next.i.i.i517.1 = add nuw nsw i64 %indvars.iv.i.i.i514, 2
  %arrayidx.i.i.i515.2 = getelementptr inbounds i32, ptr %retval.0.i.i.i508, i64 %indvars.iv.next.i.i.i517.1
  %arrayidx3.i.i.i516.2 = getelementptr inbounds i32, ptr %73, i64 %indvars.iv.next.i.i.i517.1
  %87 = load i32, ptr %arrayidx3.i.i.i516.2, align 4, !tbaa !140
  store i32 %87, ptr %arrayidx.i.i.i515.2, align 4, !tbaa !140
  %indvars.iv.next.i.i.i517.2 = add nuw nsw i64 %indvars.iv.i.i.i514, 3
  %arrayidx.i.i.i515.3 = getelementptr inbounds i32, ptr %retval.0.i.i.i508, i64 %indvars.iv.next.i.i.i517.2
  %arrayidx3.i.i.i516.3 = getelementptr inbounds i32, ptr %73, i64 %indvars.iv.next.i.i.i517.2
  %88 = load i32, ptr %arrayidx3.i.i.i516.3, align 4, !tbaa !140
  store i32 %88, ptr %arrayidx.i.i.i515.3, align 4, !tbaa !140
  %indvars.iv.next.i.i.i517.3 = add nuw nsw i64 %indvars.iv.i.i.i514, 4
  %exitcond.not.i.i.i518.3 = icmp eq i64 %indvars.iv.next.i.i.i517.3, %wide.trip.count.i.i.i512
  br i1 %exitcond.not.i.i.i518.3, label %if.then.i11.i.i524, label %for.body.i.i.i519, !llvm.loop !334

_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i521: ; preds = %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i511
  %tobool.not.i10.i.i520 = icmp eq ptr %73, null
  br i1 %tobool.not.i10.i.i520, label %_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i530, label %if.then.i11.i.i524

if.then.i11.i.i524:                               ; preds = %for.body.i.i.i519.prol.loopexit, %for.body.i.i.i519, %middle.block, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i521
  %m_ownsMemory.i.i.i522 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i471, i64 0, i32 6
  %89 = load i8, ptr %m_ownsMemory.i.i.i522, align 8, !tbaa !130, !range !159, !noundef !192
  %tobool2.not.i.i.i523 = icmp eq i8 %89, 0
  br i1 %tobool2.not.i.i.i523, label %if.end.i.i.i527, label %if.then3.i.i.i525

if.then3.i.i.i525:                                ; preds = %if.then.i11.i.i524
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %73)
          to label %if.end.i.i.i527 unwind label %lpad89

if.end.i.i.i527:                                  ; preds = %if.then3.i.i.i525, %if.then.i11.i.i524
  %.pre7.pre.i526 = load i32, ptr %m_size.i.i472, align 4, !tbaa !132
  br label %_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i530

_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i530: ; preds = %if.end.i.i.i527, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i521
  %.pre7.i528 = phi i32 [ %.pre7.pre.i526, %if.end.i.i.i527 ], [ %72, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i521 ]
  %m_ownsMemory.i.i529 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i471, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i529, align 8, !tbaa !130
  store ptr %retval.0.i.i.i508, ptr %m_data.i.i.i510, align 8, !tbaa !131
  store i32 %cond.i.i499, ptr %m_capacity.i.i495, align 8, !tbaa !133
  br label %_ZN20btAlignedObjectArrayIiE9push_backERKi.exit538

_ZN20btAlignedObjectArrayIiE9push_backERKi.exit538: ; preds = %if.then130, %if.then.i501, %_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i530
  %90 = phi i32 [ %.pre7.i528, %_ZN20btAlignedObjectArrayIiE10deallocateEv.exit.i.i530 ], [ %67, %if.then.i501 ], [ %67, %if.then130 ]
  %m_data.i531 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i471, i64 0, i32 5
  %91 = load ptr, ptr %m_data.i531, align 8, !tbaa !131
  %idxprom.i532 = sext i32 %90 to i64
  %arrayidx.i533 = getelementptr inbounds i32, ptr %91, i64 %idxprom.i532
  store i32 %conv86, ptr %arrayidx.i533, align 4, !tbaa !140
  %92 = load i32, ptr %m_size.i.i472, align 4, !tbaa !132
  %inc.i534 = add nsw i32 %92, 1
  store i32 %inc.i534, ptr %m_size.i.i472, align 4, !tbaa !132
  br label %if.end135

if.end135:                                        ; preds = %_ZN20btAlignedObjectArrayIiE9push_backERKi.exit538, %_ZNK20btAlignedObjectArrayIiE16findLinearSearchERKi.exit486
  %indvars.iv.next685 = add nuw nsw i64 %indvars.iv684, 1
  %93 = load i32, ptr %m_size.i420, align 4, !tbaa !92
  %94 = sext i32 %93 to i64
  %cmp70 = icmp slt i64 %indvars.iv.next685, %94
  br i1 %cmp70, label %for.body71, label %for.cond141.preheader

for.cond148.preheader:                            ; preds = %for.cond148.preheader.lr.ph, %for.cond.cleanup156
  %indvars.iv693 = phi i64 [ 0, %for.cond148.preheader.lr.ph ], [ %indvars.iv.next694, %for.cond.cleanup156 ]
  %m_size.i555 = getelementptr inbounds %struct.NodeLinks, ptr %29, i64 %indvars.iv693, i32 0, i32 2
  %95 = load i32, ptr %m_size.i555, align 4, !tbaa !132
  %cmp155627 = icmp sgt i32 %95, 0
  br i1 %cmp155627, label %for.body157.lr.ph, label %for.cond.cleanup156

for.body157.lr.ph:                                ; preds = %for.cond148.preheader
  %m_data.i559 = getelementptr inbounds %struct.NodeLinks, ptr %29, i64 %indvars.iv693, i32 0, i32 5
  %96 = load ptr, ptr %m_data.i559, align 8, !tbaa !131
  %97 = trunc i64 %indvars.iv693 to i32
  %mul198 = mul nsw i32 %0, %97
  br label %for.body157

for.cond.cleanup:                                 ; preds = %for.cond.cleanup156
  br i1 %cmp145629, label %for.body.lr.ph.i.i.i542, label %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i.i

for.body.lr.ph.i.i.i542:                          ; preds = %for.cond.cleanup
  %zext.i.i = zext i32 %28 to i64
  br label %for.body.i.i.i545

for.body.i.i.i545:                                ; preds = %_ZN9NodeLinksD2Ev.exit.i.i.i, %for.body.lr.ph.i.i.i542
  %indvars.iv.i.i.i543 = phi i64 [ 0, %for.body.lr.ph.i.i.i542 ], [ %indvars.iv.next.i.i.i546, %_ZN9NodeLinksD2Ev.exit.i.i.i ]
  %98 = load ptr, ptr %m_data.i.i, align 8, !tbaa !326
  %arrayidx.i.i.i544 = getelementptr inbounds %struct.NodeLinks, ptr %98, i64 %indvars.iv.i.i.i543
  %m_data.i.i.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i.i.i544, i64 0, i32 5
  %99 = load ptr, ptr %m_data.i.i.i.i.i.i.i, align 8, !tbaa !131
  %tobool.not.i.i.i.i.i.i.i = icmp eq ptr %99, null
  %m_ownsMemory.i.i.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i.i.i544, i64 0, i32 6
  %100 = load i8, ptr %m_ownsMemory.i.i.i.i.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i.i.i.i = icmp eq i8 %100, 0
  %or.cond.i.i.i.i.i.i = select i1 %tobool.not.i.i.i.i.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i.i.i.i
  br i1 %or.cond.i.i.i.i.i.i, label %_ZN9NodeLinksD2Ev.exit.i.i.i, label %if.then3.i.i.i.i.i.i.i

if.then3.i.i.i.i.i.i.i:                           ; preds = %for.body.i.i.i545
  call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %99)
  br label %_ZN9NodeLinksD2Ev.exit.i.i.i

_ZN9NodeLinksD2Ev.exit.i.i.i:                     ; preds = %if.then3.i.i.i.i.i.i.i, %for.body.i.i.i545
  store i8 1, ptr %m_ownsMemory.i.i.i.i.i.i.i, align 8, !tbaa !130
  store ptr null, ptr %m_data.i.i.i.i.i.i.i, align 8, !tbaa !131
  %m_size.i4.i.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i.i.i544, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i.i.i.i.i.i, align 4, !tbaa !132
  %m_capacity.i.i.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i.i.i544, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i.i.i.i.i, align 8, !tbaa !133
  %indvars.iv.next.i.i.i546 = add nuw nsw i64 %indvars.iv.i.i.i543, 1
  %101 = icmp eq i64 %indvars.iv.next.i.i.i546, %zext.i.i
  br i1 %101, label %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i.i, label %for.body.i.i.i545

_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i.i: ; preds = %_ZN9NodeLinksD2Ev.exit.i.i.i, %for.cond141.preheader, %for.cond.cleanup
  %102 = load ptr, ptr %m_data.i.i, align 8, !tbaa !326
  %tobool.not.i.i.i547 = icmp eq ptr %102, null
  %103 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i.i549 = icmp eq i8 %103, 0
  %or.cond.i.i = select i1 %tobool.not.i.i.i547, i1 true, i1 %tobool2.not.i.i.i549
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayI9NodeLinksED2Ev.exit, label %if.then3.i.i.i550

if.then3.i.i.i550:                                ; preds = %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i.i
  call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %102)
  br label %_ZN20btAlignedObjectArrayI9NodeLinksED2Ev.exit

_ZN20btAlignedObjectArrayI9NodeLinksED2Ev.exit:   ; preds = %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i.i, %if.then3.i.i.i550
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %nodeLinks) #38
  br label %if.end273

for.cond.cleanup156:                              ; preds = %for.cond.cleanup172, %for.cond148.preheader
  %indvars.iv.next694 = add nuw nsw i64 %indvars.iv693, 1
  %exitcond697.not = icmp eq i64 %indvars.iv.next694, %wide.trip.count696
  br i1 %exitcond697.not, label %for.cond.cleanup, label %for.cond148.preheader

for.body157:                                      ; preds = %for.body157.lr.ph, %for.cond.cleanup172
  %104 = phi i32 [ %95, %for.body157.lr.ph ], [ %108, %for.cond.cleanup172 ]
  %indvars.iv690 = phi i64 [ 0, %for.body157.lr.ph ], [ %indvars.iv.next691, %for.cond.cleanup172 ]
  %arrayidx.i561 = getelementptr inbounds i32, ptr %96, i64 %indvars.iv690
  %105 = load i32, ptr %arrayidx.i561, align 4, !tbaa !140
  %idxprom.i563 = sext i32 %105 to i64
  %m_size.i565 = getelementptr inbounds %struct.NodeLinks, ptr %29, i64 %idxprom.i563, i32 0, i32 2
  %106 = load i32, ptr %m_size.i565, align 4, !tbaa !132
  %cmp171625 = icmp sgt i32 %106, 0
  br i1 %cmp171625, label %for.body173.lr.ph, label %for.cond.cleanup172

for.body173.lr.ph:                                ; preds = %for.body157
  %m_data.i569 = getelementptr inbounds %struct.NodeLinks, ptr %29, i64 %idxprom.i563, i32 0, i32 5
  %107 = load ptr, ptr %m_data.i569, align 8, !tbaa !131
  %mul183 = mul nsw i32 %105, %0
  %add184 = add nsw i32 %mul183, %97
  %idxprom185 = sext i32 %add184 to i64
  %arrayidx186 = getelementptr inbounds i32, ptr %call2, i64 %idxprom185
  br label %for.body173

for.cond.cleanup172.loopexit:                     ; preds = %if.end207
  %.pre713 = load i32, ptr %m_size.i555, align 4, !tbaa !132
  br label %for.cond.cleanup172

for.cond.cleanup172:                              ; preds = %for.cond.cleanup172.loopexit, %for.body157
  %108 = phi i32 [ %.pre713, %for.cond.cleanup172.loopexit ], [ %104, %for.body157 ]
  %indvars.iv.next691 = add nuw nsw i64 %indvars.iv690, 1
  %109 = sext i32 %108 to i64
  %cmp155 = icmp slt i64 %indvars.iv.next691, %109
  br i1 %cmp155, label %for.body157, label %for.cond.cleanup156

for.body173:                                      ; preds = %for.body173.lr.ph, %if.end207
  %110 = phi i32 [ %106, %for.body173.lr.ph ], [ %116, %if.end207 ]
  %indvars.iv687 = phi i64 [ 0, %for.body173.lr.ph ], [ %indvars.iv.next688, %if.end207 ]
  %arrayidx.i571 = getelementptr inbounds i32, ptr %107, i64 %indvars.iv687
  %111 = load i32, ptr %arrayidx.i571, align 4, !tbaa !140
  %112 = zext i32 %111 to i64
  %cmp181.not = icmp eq i64 %indvars.iv693, %112
  br i1 %cmp181.not, label %if.end207, label %if.then182

if.then182:                                       ; preds = %for.body173
  %113 = load i32, ptr %arrayidx186, align 4, !tbaa !140
  %mul187 = mul nsw i32 %111, %0
  %add188 = add nsw i32 %mul187, %105
  %idxprom189 = sext i32 %add188 to i64
  %arrayidx190 = getelementptr inbounds i32, ptr %call2, i64 %idxprom189
  %114 = load i32, ptr %arrayidx190, align 4, !tbaa !140
  %add191 = add i32 %114, %113
  %add193 = add nsw i32 %mul187, %97
  %idxprom194 = sext i32 %add193 to i64
  %arrayidx195 = getelementptr inbounds i32, ptr %call2, i64 %idxprom194
  %115 = load i32, ptr %arrayidx195, align 4, !tbaa !140
  %cmp196 = icmp ugt i32 %115, %add191
  br i1 %cmp196, label %if.then197, label %if.end207

if.then197:                                       ; preds = %if.then182
  %add199 = add nsw i32 %111, %mul198
  %idxprom200 = sext i32 %add199 to i64
  %arrayidx201 = getelementptr inbounds i32, ptr %call2, i64 %idxprom200
  store i32 %add191, ptr %arrayidx201, align 4, !tbaa !140
  store i32 %add191, ptr %arrayidx195, align 4, !tbaa !140
  %.pre712 = load i32, ptr %m_size.i565, align 4, !tbaa !132
  br label %if.end207

if.end207:                                        ; preds = %if.then182, %if.then197, %for.body173
  %116 = phi i32 [ %110, %if.then182 ], [ %.pre712, %if.then197 ], [ %110, %for.body173 ]
  %indvars.iv.next688 = add nuw nsw i64 %indvars.iv687, 1
  %117 = sext i32 %116 to i64
  %cmp171 = icmp slt i64 %indvars.iv.next688, %117
  br i1 %cmp171, label %for.body173, label %for.cond.cleanup172.loopexit

ehcleanup223:                                     ; preds = %lpad89, %ehcleanup
  %.pn602 = phi { ptr, i32 } [ %65, %lpad89 ], [ %.pn, %ehcleanup ]
  invoke void @_ZN20btAlignedObjectArrayI9NodeLinksED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %nodeLinks)
          to label %invoke.cont224 unwind label %terminate.lpad

invoke.cont224:                                   ; preds = %ehcleanup223
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %nodeLinks) #38
  resume { ptr, i32 } %.pn602

if.end273:                                        ; preds = %for.cond232.for.inc270_crit_edge.us, %_ZN20btAlignedObjectArrayI9NodeLinksED2Ev.exit
  br i1 %cmp3613, label %for.body276.lr.ph, label %delete.notnull

for.body276.lr.ph:                                ; preds = %if.end273
  %m_data.i.i572 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %tobool.not.i = icmp eq ptr %mat, null
  %m_data.i6.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %m_capacity.i.i.i582 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 3
  %m_data.i.i.i.i588 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %m_ownsMemory.i.i.i.i589 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 6
  %m_bUpdateRtCst.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  %118 = zext i32 %0 to i64
  %wide.trip.count710 = zext i32 %0 to i64
  br label %for.body276

for.cond274.loopexit:                             ; preds = %for.inc293, %for.body276
  %nlinks.1.lcssa = phi i32 [ %nlinks.0637, %for.body276 ], [ %nlinks.2, %for.inc293 ]
  %indvars.iv.next699 = add nuw nsw i64 %indvars.iv698, 1
  %exitcond711.not = icmp eq i64 %indvars.iv.next707, %wide.trip.count710
  br i1 %exitcond711.not, label %delete.notnull, label %for.body276

for.body276:                                      ; preds = %for.body276.lr.ph, %for.cond274.loopexit
  %indvars.iv706 = phi i64 [ 0, %for.body276.lr.ph ], [ %indvars.iv.next707, %for.cond274.loopexit ]
  %indvars.iv698 = phi i64 [ 1, %for.body276.lr.ph ], [ %indvars.iv.next699, %for.cond274.loopexit ]
  %nlinks.0637 = phi i32 [ 0, %for.body276.lr.ph ], [ %nlinks.1.lcssa, %for.cond274.loopexit ]
  %indvars.iv.next707 = add nuw nsw i64 %indvars.iv706, 1
  %cmp279631 = icmp ult i64 %indvars.iv.next707, %118
  br i1 %cmp279631, label %for.body280.lr.ph, label %for.cond274.loopexit

for.body280.lr.ph:                                ; preds = %for.body276
  %119 = mul nsw i64 %indvars.iv706, %118
  br label %for.body280

for.body280:                                      ; preds = %for.body280.lr.ph, %for.inc293
  %indvars.iv700 = phi i64 [ %indvars.iv698, %for.body280.lr.ph ], [ %indvars.iv.next701, %for.inc293 ]
  %nlinks.1633 = phi i32 [ %nlinks.0637, %for.body280.lr.ph ], [ %nlinks.2, %for.inc293 ]
  %120 = add nuw nsw i64 %indvars.iv700, %119
  %arrayidx284 = getelementptr inbounds i32, ptr %call2, i64 %120
  %121 = load i32, ptr %arrayidx284, align 4, !tbaa !140
  %cmp285 = icmp eq i32 %121, %distance
  br i1 %cmp285, label %if.then286, label %for.inc293

if.then286:                                       ; preds = %for.body280
  %122 = load ptr, ptr %m_data.i.i572, align 8, !tbaa !87
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 %indvars.iv700
  %arrayidx.i6.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 %indvars.iv706
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %l.sroa.7.i)
  %123 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i.i = icmp eq i8 %123, 0
  br i1 %guard.uninitialized.i.i, label %init.check.i.i, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i, !prof !173

init.check.i.i:                                   ; preds = %if.then286
  %124 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  %tobool.not.i.i580 = icmp eq i32 %124, 0
  br i1 %tobool.not.i.i580, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i, label %init.i.i

init.i.i:                                         ; preds = %init.check.i.i
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8, !tbaa !174
  %125 = call ptr @llvm.invariant.start.p0(i64 72, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy)
  call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i

_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i: ; preds = %init.i.i, %init.check.i.i, %if.then286
  %l.sroa.0.0.copyload11.i = load ptr, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(52) %l.sroa.7.i, ptr noundef nonnull align 8 dereferenceable(52) getelementptr inbounds (%"struct.btSoftBody::Link", ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, i64 0, i32 1, i64 0), i64 52, i1 false)
  br i1 %tobool.not.i, label %cond.false.i, label %if.end.i

cond.false.i:                                     ; preds = %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i
  %126 = load ptr, ptr %m_data.i6.i, align 8, !tbaa !119
  %127 = load ptr, ptr %126, align 8, !tbaa !219
  br label %if.end.i

if.end.i:                                         ; preds = %cond.false.i, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i
  %l.sroa.6.0.i = phi ptr [ %127, %cond.false.i ], [ %mat, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i ]
  %128 = load i32, ptr %m_size.i420, align 4, !tbaa !92
  %129 = load i32, ptr %m_capacity.i.i.i582, align 8, !tbaa !93
  %cmp.i.i583 = icmp eq i32 %128, %129
  br i1 %cmp.i.i583, label %if.then.i.i585, label %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit

if.then.i.i585:                                   ; preds = %if.end.i
  %tobool.not.i.i.i584 = icmp eq i32 %128, 0
  %mul.i.i.i = shl nsw i32 %128, 1
  %cond.i.i.i = select i1 %tobool.not.i.i.i584, i32 1, i32 %mul.i.i.i
  %cmp.i.i.i = icmp slt i32 %128, %cond.i.i.i
  br i1 %cmp.i.i.i, label %if.then.i.i.i587, label %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit

if.then.i.i.i587:                                 ; preds = %if.then.i.i585
  %tobool.not.i.i.i.i586 = icmp eq i32 %cond.i.i.i, 0
  br i1 %tobool.not.i.i.i.i586, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.then.i.i.i587
  %conv.i.i.i.i.i = sext i32 %cond.i.i.i to i64
  %mul.i.i.i.i.i = mul nsw i64 %conv.i.i.i.i.i, 72
  %call.i.i.i.i.i = call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i.i, i32 noundef 16)
  %.pre.i.i = load i32, ptr %m_size.i420, align 4, !tbaa !92
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i: ; preds = %if.then.i.i.i.i, %if.then.i.i.i587
  %130 = phi i32 [ %.pre.i.i, %if.then.i.i.i.i ], [ %128, %if.then.i.i.i587 ]
  %retval.0.i.i.i.i = phi ptr [ %call.i.i.i.i.i, %if.then.i.i.i.i ], [ null, %if.then.i.i.i587 ]
  %cmp7.i.i.i.i = icmp sgt i32 %130, 0
  br i1 %cmp7.i.i.i.i, label %for.body.lr.ph.i.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i

for.body.lr.ph.i.i.i.i:                           ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i
  %wide.trip.count.i.i.i.i = zext i32 %130 to i64
  %xtraiter747 = and i64 %wide.trip.count.i.i.i.i, 1
  %131 = icmp eq i32 %130, 1
  br i1 %131, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.i.new

for.body.lr.ph.i.i.i.i.new:                       ; preds = %for.body.lr.ph.i.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i.i, 4294967294
  br label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i, %for.body.lr.ph.i.i.i.i.new
  %indvars.iv.i.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.i.new ], [ %indvars.iv.next.i.i.i.i.1, %for.body.i.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.i.new ], [ %niter.next.1, %for.body.i.i.i.i ]
  %arrayidx.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i, i64 %indvars.iv.i.i.i.i
  %132 = load ptr, ptr %m_data.i.i.i.i588, align 8, !tbaa !91
  %arrayidx3.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %132, i64 %indvars.iv.i.i.i.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i = or i64 %indvars.iv.i.i.i.i, 1
  %arrayidx.i.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i, i64 %indvars.iv.next.i.i.i.i
  %133 = load ptr, ptr %m_data.i.i.i.i588, align 8, !tbaa !91
  %arrayidx3.i.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %133, i64 %indvars.iv.next.i.i.i.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i.1, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.i.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i.i, %for.body.lr.ph.i.i.i.i
  %indvars.iv.i.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i.i ], [ %indvars.iv.next.i.i.i.i.1, %for.body.i.i.i.i ]
  %lcmp.mod748.not = icmp eq i64 %xtraiter747, 0
  br i1 %lcmp.mod748.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i, label %for.body.i.i.i.i.epil

for.body.i.i.i.i.epil:                            ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i, i64 %indvars.iv.i.i.i.i.unr
  %134 = load ptr, ptr %m_data.i.i.i.i588, align 8, !tbaa !91
  %arrayidx3.i.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %134, i64 %indvars.iv.i.i.i.i.unr
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i.epil, i64 72, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i: ; preds = %for.body.i.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i
  %135 = load ptr, ptr %m_data.i.i.i.i588, align 8, !tbaa !91
  %tobool.not.i10.i.i.i = icmp eq ptr %135, null
  %136 = load i8, ptr %m_ownsMemory.i.i.i.i589, align 8, !range !159
  %tobool2.not.i.i.i.i590 = icmp eq i8 %136, 0
  %or.cond.i.i.i591 = select i1 %tobool.not.i10.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i590
  br i1 %or.cond.i.i.i591, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i, label %if.then3.i.i.i.i592

if.then3.i.i.i.i592:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i
  call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %135)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i: ; preds = %if.then3.i.i.i.i592, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i.i589, align 8, !tbaa !90
  store ptr %retval.0.i.i.i.i, ptr %m_data.i.i.i.i588, align 8, !tbaa !91
  store i32 %cond.i.i.i, ptr %m_capacity.i.i.i582, align 8, !tbaa !93
  %.pre7.i.i = load i32, ptr %m_size.i420, align 4, !tbaa !92
  br label %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit

_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit: ; preds = %if.end.i, %if.then.i.i585, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i
  %137 = phi i32 [ %.pre7.i.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i ], [ %128, %if.then.i.i585 ], [ %128, %if.end.i ]
  %138 = load ptr, ptr %m_data.i.i.i.i588, align 8, !tbaa !91
  %idxprom.i8.i = sext i32 %137 to i64
  %arrayidx.i9.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %138, i64 %idxprom.i8.i
  store ptr %l.sroa.0.0.copyload11.i, ptr %arrayidx.i9.i, align 8
  %l.sroa.6.0.arrayidx.i9.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i9.i, i64 8
  store ptr %l.sroa.6.0.i, ptr %l.sroa.6.0.arrayidx.i9.sroa_idx.i, align 8
  %l.sroa.7.0.arrayidx.i9.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i9.i, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7.0.arrayidx.i9.sroa_idx.i, ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7.i, i64 56, i1 false)
  %139 = load i32, ptr %m_size.i420, align 4, !tbaa !92
  %inc.i.i = add nsw i32 %139, 1
  store i32 %inc.i.i, ptr %m_size.i420, align 4, !tbaa !92
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %l.sroa.7.i)
  %140 = load ptr, ptr %m_data.i.i.i.i588, align 8, !tbaa !91
  %idxprom.i.i.i = sext i32 %139 to i64
  %m_n.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %140, i64 %idxprom.i.i.i, i32 1
  store ptr %arrayidx.i.i, ptr %m_n.i.i, align 8, !tbaa !219
  %arrayidx6.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %140, i64 %idxprom.i.i.i, i32 1, i64 1
  store ptr %arrayidx.i6.i, ptr %arrayidx6.i.i, align 8, !tbaa !219
  %m_x.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 %indvars.iv700, i32 1
  %m_x11.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 %indvars.iv706, i32 1
  %141 = load float, ptr %m_x.i.i, align 4, !tbaa !137
  %142 = load float, ptr %m_x11.i.i, align 4, !tbaa !137
  %sub.i.i.i = fsub float %141, %142
  %arrayidx5.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 %indvars.iv700, i32 1, i32 0, i64 1
  %143 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %arrayidx7.i20.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 %indvars.iv706, i32 1, i32 0, i64 1
  %144 = load float, ptr %arrayidx7.i20.i.i, align 4, !tbaa !137
  %sub8.i.i.i = fsub float %143, %144
  %arrayidx11.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 %indvars.iv700, i32 1, i32 0, i64 2
  %145 = load float, ptr %arrayidx11.i.i.i, align 4, !tbaa !137
  %arrayidx13.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %122, i64 %indvars.iv706, i32 1, i32 0, i64 2
  %146 = load float, ptr %arrayidx13.i.i.i, align 4, !tbaa !137
  %sub14.i.i.i = fsub float %145, %146
  %mul8.i.i.i.i.i = fmul float %sub8.i.i.i, %sub8.i.i.i
  %147 = call float @llvm.fmuladd.f32(float %sub.i.i.i, float %sub.i.i.i, float %mul8.i.i.i.i.i)
  %148 = call float @llvm.fmuladd.f32(float %sub14.i.i.i, float %sub14.i.i.i, float %147)
  %sqrt.i.i.i = call float @llvm.sqrt.f32(float %148)
  %m_rl.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %140, i64 %idxprom.i.i.i, i32 2
  store float %sqrt.i.i.i, ptr %m_rl.i.i, align 8, !tbaa !239
  store i8 1, ptr %m_bUpdateRtCst.i.i, align 4, !tbaa !147
  %149 = load ptr, ptr %m_data.i.i.i.i588, align 8, !tbaa !91
  %m_bbending = getelementptr inbounds %"struct.btSoftBody::Link", ptr %149, i64 %idxprom.i.i.i, i32 3
  %bf.load = load i8, ptr %m_bbending, align 4
  %bf.set = or i8 %bf.load, 1
  store i8 %bf.set, ptr %m_bbending, align 4
  %inc291 = add nsw i32 %nlinks.1633, 1
  br label %for.inc293

for.inc293:                                       ; preds = %for.body280, %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit
  %nlinks.2 = phi i32 [ %inc291, %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit ], [ %nlinks.1633, %for.body280 ]
  %indvars.iv.next701 = add nuw nsw i64 %indvars.iv700, 1
  %exitcond705.not = icmp eq i64 %indvars.iv.next701, %wide.trip.count710
  br i1 %exitcond705.not, label %for.cond274.loopexit, label %for.body280

delete.notnull:                                   ; preds = %for.cond274.loopexit, %for.cond228.preheader, %if.end273
  %nlinks.0.lcssa = phi i32 [ 0, %if.end273 ], [ 0, %for.cond228.preheader ], [ %nlinks.1.lcssa, %for.cond274.loopexit ]
  call void @_ZdaPv(ptr noundef nonnull %call2) #37
  br label %cleanup

cleanup:                                          ; preds = %entry, %delete.notnull
  %retval.0 = phi i32 [ %nlinks.0.lcssa, %delete.notnull ], [ 0, %entry ]
  ret i32 %retval.0

terminate.lpad:                                   ; preds = %if.then3.i.i.i.i464, %ehcleanup223
  %150 = landingpad { ptr, i32 }
          catch ptr null
  %151 = extractvalue { ptr, i32 } %150, 0
  call void @__clang_call_terminate(ptr %151) #39
  unreachable
}

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znam(i64 noundef) local_unnamed_addr #5

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayI9NodeLinksE6resizeEiRKS0_(ptr noundef nonnull align 8 dereferenceable(25) %this, i32 noundef %newsize, ptr noundef nonnull align 8 dereferenceable(32) %fillData) local_unnamed_addr #8 comdat align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !327
  %cmp = icmp sgt i32 %0, %newsize
  br i1 %cmp, label %for.body.lr.ph, label %if.else

for.body.lr.ph:                                   ; preds = %entry
  %m_data = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 5
  %1 = sext i32 %newsize to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %_ZN9NodeLinksD2Ev.exit
  %indvars.iv37 = phi i64 [ %1, %for.body.lr.ph ], [ %indvars.iv.next38, %_ZN9NodeLinksD2Ev.exit ]
  %2 = load ptr, ptr %m_data, align 8, !tbaa !326
  %arrayidx = getelementptr inbounds %struct.NodeLinks, ptr %2, i64 %indvars.iv37
  %m_data.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx, i64 0, i32 5
  %3 = load ptr, ptr %m_data.i.i.i.i, align 8, !tbaa !131
  %tobool.not.i.i.i.i = icmp eq ptr %3, null
  %m_ownsMemory.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx, i64 0, i32 6
  %4 = load i8, ptr %m_ownsMemory.i.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i = icmp eq i8 %4, 0
  %or.cond.i.i.i = select i1 %tobool.not.i.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i
  br i1 %or.cond.i.i.i, label %_ZN9NodeLinksD2Ev.exit, label %if.then3.i.i.i.i

if.then3.i.i.i.i:                                 ; preds = %for.body
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %3)
  br label %_ZN9NodeLinksD2Ev.exit

_ZN9NodeLinksD2Ev.exit:                           ; preds = %for.body, %if.then3.i.i.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i.i, align 8, !tbaa !130
  store ptr null, ptr %m_data.i.i.i.i, align 8, !tbaa !131
  %m_size.i4.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i.i.i, align 4, !tbaa !132
  %m_capacity.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i.i, align 8, !tbaa !133
  %indvars.iv.next38 = add nsw i64 %indvars.iv37, 1
  %lftr.wideiv40 = trunc i64 %indvars.iv.next38 to i32
  %exitcond41.not = icmp eq i32 %0, %lftr.wideiv40
  br i1 %exitcond41.not, label %if.end17, label %for.body

if.else:                                          ; preds = %entry
  %cmp4 = icmp slt i32 %0, %newsize
  br i1 %cmp4, label %for.body10.lr.ph, label %if.end17

for.body10.lr.ph:                                 ; preds = %if.else
  tail call void @_ZN20btAlignedObjectArrayI9NodeLinksE7reserveEi(ptr noundef nonnull align 8 dereferenceable(25) %this, i32 noundef %newsize)
  %m_data11 = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 5
  %m_size.i4.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %fillData, i64 0, i32 2
  %m_data.i5.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %fillData, i64 0, i32 5
  %5 = sext i32 %0 to i64
  br label %for.body10

for.body10:                                       ; preds = %for.body10.lr.ph, %_ZN9NodeLinksC2ERKS_.exit
  %indvars.iv = phi i64 [ %5, %for.body10.lr.ph ], [ %indvars.iv.next, %_ZN9NodeLinksC2ERKS_.exit ]
  %6 = load ptr, ptr %m_data11, align 8, !tbaa !326
  %arrayidx13 = getelementptr inbounds %struct.NodeLinks, ptr %6, i64 %indvars.iv
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx13, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !130
  %m_data.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx13, i64 0, i32 5
  store ptr null, ptr %m_data.i.i.i, align 8, !tbaa !131
  %m_size.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx13, i64 0, i32 2
  store i32 0, ptr %m_size.i.i.i, align 4, !tbaa !132
  %m_capacity.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx13, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i, align 8, !tbaa !133
  %7 = load i32, ptr %m_size.i4.i.i, align 4, !tbaa !132
  %or.cond.i.i = icmp slt i32 %7, 1
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIiE6resizeEiRKi.exit.thread.i.i, label %if.then.i.i.i.i.i

if.then.i.i.i.i.i:                                ; preds = %for.body10
  %conv.i.i.i.i.i.i = zext i32 %7 to i64
  %mul.i.i.i.i.i.i = shl nuw nsw i64 %conv.i.i.i.i.i.i, 2
  %call.i.i.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i.i.i, i32 noundef 16)
  %call.i.i.i.i.i.i44 = ptrtoint ptr %call.i.i.i.i.i.i to i64
  %.pre.i.i.i = load i32, ptr %m_size.i.i.i, align 4, !tbaa !132
  %cmp7.i.i.i.i.i = icmp sgt i32 %.pre.i.i.i, 0
  %8 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !131
  br i1 %cmp7.i.i.i.i.i, label %for.body.lr.ph.i.i.i.i.i, label %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i.i

for.body.lr.ph.i.i.i.i.i:                         ; preds = %if.then.i.i.i.i.i
  %9 = ptrtoint ptr %8 to i64
  %wide.trip.count.i.i.i.i.i = zext i32 %.pre.i.i.i to i64
  %min.iters.check50 = icmp ult i32 %.pre.i.i.i, 8
  %10 = sub i64 %call.i.i.i.i.i.i44, %9
  %diff.check47 = icmp ult i64 %10, 32
  %or.cond = select i1 %min.iters.check50, i1 true, i1 %diff.check47
  br i1 %or.cond, label %for.body.i.i.i.i.i.preheader, label %vector.ph51

vector.ph51:                                      ; preds = %for.body.lr.ph.i.i.i.i.i
  %n.vec53 = and i64 %wide.trip.count.i.i.i.i.i, 4294967288
  br label %vector.body56

vector.body56:                                    ; preds = %vector.body56, %vector.ph51
  %index57 = phi i64 [ 0, %vector.ph51 ], [ %index.next60, %vector.body56 ]
  %11 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %index57
  %12 = getelementptr inbounds i32, ptr %8, i64 %index57
  %wide.load58 = load <4 x i32>, ptr %12, align 4, !tbaa !140
  %13 = getelementptr inbounds i32, ptr %12, i64 4
  %wide.load59 = load <4 x i32>, ptr %13, align 4, !tbaa !140
  store <4 x i32> %wide.load58, ptr %11, align 4, !tbaa !140
  %14 = getelementptr inbounds i32, ptr %11, i64 4
  store <4 x i32> %wide.load59, ptr %14, align 4, !tbaa !140
  %index.next60 = add nuw i64 %index57, 8
  %15 = icmp eq i64 %index.next60, %n.vec53
  br i1 %15, label %middle.block48, label %vector.body56, !llvm.loop !335

middle.block48:                                   ; preds = %vector.body56
  %cmp.n55 = icmp eq i64 %n.vec53, %wide.trip.count.i.i.i.i.i
  br i1 %cmp.n55, label %if.then.i11.i.i.i.i, label %for.body.i.i.i.i.i.preheader

for.body.i.i.i.i.i.preheader:                     ; preds = %for.body.lr.ph.i.i.i.i.i, %middle.block48
  %indvars.iv.i.i.i.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i.i.i ], [ %n.vec53, %middle.block48 ]
  %16 = xor i64 %indvars.iv.i.i.i.i.i.ph, -1
  %17 = add nsw i64 %16, %wide.trip.count.i.i.i.i.i
  %xtraiter = and i64 %wide.trip.count.i.i.i.i.i, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.i.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.i.prol

for.body.i.i.i.i.i.prol:                          ; preds = %for.body.i.i.i.i.i.preheader, %for.body.i.i.i.i.i.prol
  %indvars.iv.i.i.i.i.i.prol = phi i64 [ %indvars.iv.next.i.i.i.i.i.prol, %for.body.i.i.i.i.i.prol ], [ %indvars.iv.i.i.i.i.i.ph, %for.body.i.i.i.i.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.i.i.i.i.prol ], [ 0, %for.body.i.i.i.i.i.preheader ]
  %arrayidx.i.i.i.i.i.prol = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.i.i.i.i.i.prol
  %arrayidx3.i.i.i.i.i.prol = getelementptr inbounds i32, ptr %8, i64 %indvars.iv.i.i.i.i.i.prol
  %18 = load i32, ptr %arrayidx3.i.i.i.i.i.prol, align 4, !tbaa !140
  store i32 %18, ptr %arrayidx.i.i.i.i.i.prol, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i.prol = add nuw nsw i64 %indvars.iv.i.i.i.i.i.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.i.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.i.prol, !llvm.loop !336

for.body.i.i.i.i.i.prol.loopexit:                 ; preds = %for.body.i.i.i.i.i.prol, %for.body.i.i.i.i.i.preheader
  %indvars.iv.i.i.i.i.i.unr = phi i64 [ %indvars.iv.i.i.i.i.i.ph, %for.body.i.i.i.i.i.preheader ], [ %indvars.iv.next.i.i.i.i.i.prol, %for.body.i.i.i.i.i.prol ]
  %19 = icmp ult i64 %17, 3
  br i1 %19, label %if.then.i11.i.i.i.i, label %for.body.i.i.i.i.i

for.body.i.i.i.i.i:                               ; preds = %for.body.i.i.i.i.i.prol.loopexit, %for.body.i.i.i.i.i
  %indvars.iv.i.i.i.i.i = phi i64 [ %indvars.iv.next.i.i.i.i.i.3, %for.body.i.i.i.i.i ], [ %indvars.iv.i.i.i.i.i.unr, %for.body.i.i.i.i.i.prol.loopexit ]
  %arrayidx.i.i.i.i.i = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.i.i.i.i.i
  %arrayidx3.i.i.i.i.i = getelementptr inbounds i32, ptr %8, i64 %indvars.iv.i.i.i.i.i
  %20 = load i32, ptr %arrayidx3.i.i.i.i.i, align 4, !tbaa !140
  store i32 %20, ptr %arrayidx.i.i.i.i.i, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i.i.i, 1
  %arrayidx.i.i.i.i.i.1 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.next.i.i.i.i.i
  %arrayidx3.i.i.i.i.i.1 = getelementptr inbounds i32, ptr %8, i64 %indvars.iv.next.i.i.i.i.i
  %21 = load i32, ptr %arrayidx3.i.i.i.i.i.1, align 4, !tbaa !140
  store i32 %21, ptr %arrayidx.i.i.i.i.i.1, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i.i.i, 2
  %arrayidx.i.i.i.i.i.2 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.next.i.i.i.i.i.1
  %arrayidx3.i.i.i.i.i.2 = getelementptr inbounds i32, ptr %8, i64 %indvars.iv.next.i.i.i.i.i.1
  %22 = load i32, ptr %arrayidx3.i.i.i.i.i.2, align 4, !tbaa !140
  store i32 %22, ptr %arrayidx.i.i.i.i.i.2, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i.2 = add nuw nsw i64 %indvars.iv.i.i.i.i.i, 3
  %arrayidx.i.i.i.i.i.3 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.next.i.i.i.i.i.2
  %arrayidx3.i.i.i.i.i.3 = getelementptr inbounds i32, ptr %8, i64 %indvars.iv.next.i.i.i.i.i.2
  %23 = load i32, ptr %arrayidx3.i.i.i.i.i.3, align 4, !tbaa !140
  store i32 %23, ptr %arrayidx.i.i.i.i.i.3, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i.i.i, 4
  %exitcond.not.i.i.i.i.i.3 = icmp eq i64 %indvars.iv.next.i.i.i.i.i.3, %wide.trip.count.i.i.i.i.i
  br i1 %exitcond.not.i.i.i.i.i.3, label %if.then.i11.i.i.i.i, label %for.body.i.i.i.i.i, !llvm.loop !337

_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i.i: ; preds = %if.then.i.i.i.i.i
  %tobool.not.i10.i.i.i.i = icmp eq ptr %8, null
  %24 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i.i = icmp eq i8 %24, 0
  %or.cond11.i.i = select i1 %tobool.not.i10.i.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i.i
  br i1 %or.cond11.i.i, label %for.body10.lr.ph.i.i.i, label %if.then3.i.i.i.i.i

if.then.i11.i.i.i.i:                              ; preds = %for.body.i.i.i.i.i.prol.loopexit, %for.body.i.i.i.i.i, %middle.block48
  %.old.i.i = load i8, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !130, !range !159, !noundef !192
  %tobool2.not.i.i.i.old.i.i = icmp eq i8 %.old.i.i, 0
  br i1 %tobool2.not.i.i.i.old.i.i, label %for.body10.lr.ph.i.i.i, label %if.then3.i.i.i.i.i

if.then3.i.i.i.i.i:                               ; preds = %if.then.i11.i.i.i.i, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %8)
  br label %for.body10.lr.ph.i.i.i

for.body10.lr.ph.i.i.i:                           ; preds = %if.then3.i.i.i.i.i, %if.then.i11.i.i.i.i, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !130
  store ptr %call.i.i.i.i.i.i, ptr %m_data.i.i.i, align 8, !tbaa !131
  store i32 %7, ptr %m_capacity.i.i.i, align 8, !tbaa !133
  %wide.trip.count.i.i.i = sext i32 %7 to i64
  %25 = shl nuw nsw i64 %wide.trip.count.i.i.i, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %call.i.i.i.i.i.i, i8 0, i64 %25, i1 false), !tbaa !140
  store i32 %7, ptr %m_size.i.i.i, align 4, !tbaa !132
  %26 = load ptr, ptr %m_data.i5.i.i, align 8, !tbaa !131
  %min.iters.check = icmp ult i32 %7, 8
  %27 = ptrtoint ptr %26 to i64
  %28 = sub i64 %call.i.i.i.i.i.i44, %27
  %diff.check = icmp ult i64 %28, 32
  %or.cond62 = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond62, label %for.body.i.i.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body10.lr.ph.i.i.i
  %n.vec = and i64 %conv.i.i.i.i.i.i, 4294967288
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %29 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %index
  %30 = getelementptr inbounds i32, ptr %26, i64 %index
  %wide.load = load <4 x i32>, ptr %30, align 4, !tbaa !140
  %31 = getelementptr inbounds i32, ptr %30, i64 4
  %wide.load45 = load <4 x i32>, ptr %31, align 4, !tbaa !140
  store <4 x i32> %wide.load, ptr %29, align 4, !tbaa !140
  %32 = getelementptr inbounds i32, ptr %29, i64 4
  store <4 x i32> %wide.load45, ptr %32, align 4, !tbaa !140
  %index.next = add nuw i64 %index, 8
  %33 = icmp eq i64 %index.next, %n.vec
  br i1 %33, label %middle.block, label %vector.body, !llvm.loop !338

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %conv.i.i.i.i.i.i
  br i1 %cmp.n, label %_ZN9NodeLinksC2ERKS_.exit, label %for.body.i.i.i.preheader

for.body.i.i.i.preheader:                         ; preds = %for.body10.lr.ph.i.i.i, %middle.block
  %indvars.iv.i7.i.i.ph = phi i64 [ 0, %for.body10.lr.ph.i.i.i ], [ %n.vec, %middle.block ]
  %34 = xor i64 %indvars.iv.i7.i.i.ph, -1
  %35 = add nsw i64 %34, %conv.i.i.i.i.i.i
  %xtraiter64 = and i64 %conv.i.i.i.i.i.i, 3
  %lcmp.mod65.not = icmp eq i64 %xtraiter64, 0
  br i1 %lcmp.mod65.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol

for.body.i.i.i.prol:                              ; preds = %for.body.i.i.i.preheader, %for.body.i.i.i.prol
  %indvars.iv.i7.i.i.prol = phi i64 [ %indvars.iv.next.i8.i.i.prol, %for.body.i.i.i.prol ], [ %indvars.iv.i7.i.i.ph, %for.body.i.i.i.preheader ]
  %prol.iter66 = phi i64 [ %prol.iter66.next, %for.body.i.i.i.prol ], [ 0, %for.body.i.i.i.preheader ]
  %arrayidx.i.i.i.prol = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.i7.i.i.prol
  %arrayidx3.i.i.i.prol = getelementptr inbounds i32, ptr %26, i64 %indvars.iv.i7.i.i.prol
  %36 = load i32, ptr %arrayidx3.i.i.i.prol, align 4, !tbaa !140
  store i32 %36, ptr %arrayidx.i.i.i.prol, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i.prol = add nuw nsw i64 %indvars.iv.i7.i.i.prol, 1
  %prol.iter66.next = add i64 %prol.iter66, 1
  %prol.iter66.cmp.not = icmp eq i64 %prol.iter66.next, %xtraiter64
  br i1 %prol.iter66.cmp.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol, !llvm.loop !339

for.body.i.i.i.prol.loopexit:                     ; preds = %for.body.i.i.i.prol, %for.body.i.i.i.preheader
  %indvars.iv.i7.i.i.unr = phi i64 [ %indvars.iv.i7.i.i.ph, %for.body.i.i.i.preheader ], [ %indvars.iv.next.i8.i.i.prol, %for.body.i.i.i.prol ]
  %37 = icmp ult i64 %35, 3
  br i1 %37, label %_ZN9NodeLinksC2ERKS_.exit, label %for.body.i.i.i

_ZN20btAlignedObjectArrayIiE6resizeEiRKi.exit.thread.i.i: ; preds = %for.body10
  store i32 %7, ptr %m_size.i.i.i, align 4, !tbaa !132
  br label %_ZN9NodeLinksC2ERKS_.exit

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i
  %indvars.iv.i7.i.i = phi i64 [ %indvars.iv.next.i8.i.i.3, %for.body.i.i.i ], [ %indvars.iv.i7.i.i.unr, %for.body.i.i.i.prol.loopexit ]
  %arrayidx.i.i.i = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.i7.i.i
  %arrayidx3.i.i.i = getelementptr inbounds i32, ptr %26, i64 %indvars.iv.i7.i.i
  %38 = load i32, ptr %arrayidx3.i.i.i, align 4, !tbaa !140
  store i32 %38, ptr %arrayidx.i.i.i, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i = add nuw nsw i64 %indvars.iv.i7.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.next.i8.i.i
  %arrayidx3.i.i.i.1 = getelementptr inbounds i32, ptr %26, i64 %indvars.iv.next.i8.i.i
  %39 = load i32, ptr %arrayidx3.i.i.i.1, align 4, !tbaa !140
  store i32 %39, ptr %arrayidx.i.i.i.1, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i.1 = add nuw nsw i64 %indvars.iv.i7.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.next.i8.i.i.1
  %arrayidx3.i.i.i.2 = getelementptr inbounds i32, ptr %26, i64 %indvars.iv.next.i8.i.i.1
  %40 = load i32, ptr %arrayidx3.i.i.i.2, align 4, !tbaa !140
  store i32 %40, ptr %arrayidx.i.i.i.2, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i.2 = add nuw nsw i64 %indvars.iv.i7.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i, i64 %indvars.iv.next.i8.i.i.2
  %arrayidx3.i.i.i.3 = getelementptr inbounds i32, ptr %26, i64 %indvars.iv.next.i8.i.i.2
  %41 = load i32, ptr %arrayidx3.i.i.i.3, align 4, !tbaa !140
  store i32 %41, ptr %arrayidx.i.i.i.3, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i.3 = add nuw nsw i64 %indvars.iv.i7.i.i, 4
  %exitcond.not.i9.i.i.3 = icmp eq i64 %indvars.iv.next.i8.i.i.3, %conv.i.i.i.i.i.i
  br i1 %exitcond.not.i9.i.i.3, label %_ZN9NodeLinksC2ERKS_.exit, label %for.body.i.i.i, !llvm.loop !340

_ZN9NodeLinksC2ERKS_.exit:                        ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i, %middle.block, %_ZN20btAlignedObjectArrayIiE6resizeEiRKi.exit.thread.i.i
  %indvars.iv.next = add nsw i64 %indvars.iv, 1
  %lftr.wideiv = trunc i64 %indvars.iv.next to i32
  %exitcond.not = icmp eq i32 %lftr.wideiv, %newsize
  br i1 %exitcond.not, label %if.end17, label %for.body10

if.end17:                                         ; preds = %_ZN9NodeLinksC2ERKS_.exit, %_ZN9NodeLinksD2Ev.exit, %if.else
  store i32 %newsize, ptr %m_size.i, align 4, !tbaa !327
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayI9NodeLinksED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 2
  %0 = load i32, ptr %m_size.i.i, align 4, !tbaa !327
  %cmp4.i.i = icmp sgt i32 %0, 0
  br i1 %cmp4.i.i, label %for.body.lr.ph.i.i, label %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i

for.body.lr.ph.i.i:                               ; preds = %entry
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 5
  %zext.i = zext i32 %0 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %_ZN9NodeLinksD2Ev.exit.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %_ZN9NodeLinksD2Ev.exit.i.i ]
  %1 = load ptr, ptr %m_data.i.i, align 8, !tbaa !326
  %arrayidx.i.i = getelementptr inbounds %struct.NodeLinks, ptr %1, i64 %indvars.iv.i.i
  %m_data.i.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i.i, i64 0, i32 5
  %2 = load ptr, ptr %m_data.i.i.i.i.i.i, align 8, !tbaa !131
  %tobool.not.i.i.i.i.i.i = icmp eq ptr %2, null
  %m_ownsMemory.i.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i.i, i64 0, i32 6
  %3 = load i8, ptr %m_ownsMemory.i.i.i.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i.i.i = icmp eq i8 %3, 0
  %or.cond.i.i.i.i.i = select i1 %tobool.not.i.i.i.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i.i.i
  br i1 %or.cond.i.i.i.i.i, label %_ZN9NodeLinksD2Ev.exit.i.i, label %if.then3.i.i.i.i.i.i

if.then3.i.i.i.i.i.i:                             ; preds = %for.body.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %2)
  br label %_ZN9NodeLinksD2Ev.exit.i.i

_ZN9NodeLinksD2Ev.exit.i.i:                       ; preds = %if.then3.i.i.i.i.i.i, %for.body.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i.i.i.i, align 8, !tbaa !130
  store ptr null, ptr %m_data.i.i.i.i.i.i, align 8, !tbaa !131
  %m_size.i4.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i.i, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i.i.i.i.i, align 4, !tbaa !132
  %m_capacity.i.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i.i, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i.i.i.i, align 8, !tbaa !133
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %4 = icmp eq i64 %indvars.iv.next.i.i, %zext.i
  br i1 %4, label %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i, label %for.body.i.i

_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i: ; preds = %_ZN9NodeLinksD2Ev.exit.i.i, %entry
  %m_data.i2.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 5
  %5 = load ptr, ptr %m_data.i2.i, align 8, !tbaa !326
  %tobool.not.i.i = icmp eq ptr %5, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 6
  %6 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %6, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayI9NodeLinksE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %5)
  br label %_ZN20btAlignedObjectArrayI9NodeLinksE5clearEv.exit

_ZN20btAlignedObjectArrayI9NodeLinksE5clearEv.exit: ; preds = %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit.i, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !323
  store ptr null, ptr %m_data.i2.i, align 8, !tbaa !326
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !327
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !328
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(ptr noundef) local_unnamed_addr #6

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody20randomizeConstraintsEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #10 align 2 {
entry:
  %tmp.i43 = alloca %"struct.btSoftBody::Face", align 8
  %tmp.i = alloca %"struct.btSoftBody::Link", align 8
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !92
  %cmp45 = icmp sgt i32 %0, 0
  br i1 %cmp45, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %conv = zext i32 %0 to i64
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %seed.046 = phi i64 [ 243703, %for.body.lr.ph ], [ %and, %for.body ]
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !91
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv
  %mul = mul nuw nsw i64 %seed.046, 1664525
  %add = add nuw nsw i64 %mul, 1013904223
  %and = and i64 %add, 4294967295
  %rem = urem i64 %and, %conv
  %sext44 = shl nuw i64 %rem, 32
  %idxprom.i34 = ashr exact i64 %sext44, 32
  %arrayidx.i35 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %idxprom.i34
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %tmp.i)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tmp.i, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i, i64 72, i1 false)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(68) %arrayidx.i, ptr noundef nonnull align 8 dereferenceable(68) %arrayidx.i35, i64 68, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(68) %arrayidx.i35, ptr noundef nonnull align 8 dereferenceable(68) %tmp.i, i64 68, i1 false)
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %tmp.i)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %seed.0.lcssa = phi i64 [ 243703, %entry ], [ %and, %for.body ]
  %m_size.i36 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %2 = load i32, ptr %m_size.i36, align 4, !tbaa !96
  %cmp948 = icmp sgt i32 %2, 0
  br i1 %cmp948, label %for.body10.lr.ph, label %for.end23

for.body10.lr.ph:                                 ; preds = %for.end
  %m_data.i37 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %conv17 = zext i32 %2 to i64
  %wide.trip.count55 = zext i32 %2 to i64
  br label %for.body10

for.body10:                                       ; preds = %for.body10.lr.ph, %for.body10
  %indvars.iv52 = phi i64 [ 0, %for.body10.lr.ph ], [ %indvars.iv.next53, %for.body10 ]
  %seed.149 = phi i64 [ %seed.0.lcssa, %for.body10.lr.ph ], [ %and16, %for.body10 ]
  %3 = load ptr, ptr %m_data.i37, align 8, !tbaa !95
  %arrayidx.i39 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 %indvars.iv52
  %mul14 = mul nuw nsw i64 %seed.149, 1664525
  %add15 = add nuw nsw i64 %mul14, 1013904223
  %and16 = and i64 %add15, 4294967295
  %rem18 = urem i64 %and16, %conv17
  %sext = shl nuw i64 %rem18, 32
  %idxprom.i41 = ashr exact i64 %sext, 32
  %arrayidx.i42 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 %idxprom.i41
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %tmp.i43)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tmp.i43, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i39, i64 72, i1 false)
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i39, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i42, i64 72, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i42, ptr noundef nonnull align 8 dereferenceable(72) %tmp.i43, i64 72, i1 false)
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %tmp.i43)
  %indvars.iv.next53 = add nuw nsw i64 %indvars.iv52, 1
  %exitcond56.not = icmp eq i64 %indvars.iv.next53, %wide.trip.count55
  br i1 %exitcond56.not, label %for.end23, label %for.body10

for.end23:                                        ; preds = %for.body10, %for.end
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody14releaseClusterEi(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %index) local_unnamed_addr #4 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %idxprom.i = sext i32 %index to i64
  %arrayidx.i = getelementptr inbounds ptr, ptr %0, i64 %idxprom.i
  %1 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 15
  %2 = load ptr, ptr %m_leaf, align 8, !tbaa !221
  %tobool.not = icmp eq ptr %2, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %m_cdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  tail call void @_ZN6btDbvt6removeEP10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt, ptr noundef nonnull %2)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  tail call void @_ZN10btSoftBody7ClusterD2Ev(ptr noundef nonnull align 8 dereferenceable(424) %1)
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %1)
  %m_size.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  %3 = load i32, ptr %m_size.i.i.i, align 4, !tbaa !124
  %cmp8.i.i = icmp sgt i32 %3, 0
  br i1 %cmp8.i.i, label %for.body.lr.ph.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6removeERKS2_.exit

for.body.lr.ph.i.i:                               ; preds = %if.end
  %4 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %wide.trip.count.i.i = zext i32 %3 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %for.inc.i.i ]
  %arrayidx.i.i = getelementptr inbounds ptr, ptr %4, i64 %indvars.iv.i.i
  %5 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !219
  %cmp3.i.i = icmp eq ptr %5, %1
  br i1 %cmp3.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i, label %for.inc.i.i

for.inc.i.i:                                      ; preds = %for.body.i.i
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6removeERKS2_.exit, label %for.body.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i: ; preds = %for.body.i.i
  %6 = trunc i64 %indvars.iv.i.i to i32
  %cmp.i = icmp sgt i32 %3, %6
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6removeERKS2_.exit

if.then.i:                                        ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i
  %sub.i = add nsw i32 %3, -1
  %sext.i = shl i64 %indvars.iv.i.i, 32
  %idxprom.i.i = ashr exact i64 %sext.i, 32
  %arrayidx.i7.i = getelementptr inbounds ptr, ptr %4, i64 %idxprom.i.i
  %7 = load ptr, ptr %arrayidx.i7.i, align 8, !tbaa !219
  %idxprom3.i.i = sext i32 %sub.i to i64
  %arrayidx4.i.i = getelementptr inbounds ptr, ptr %4, i64 %idxprom3.i.i
  %8 = load ptr, ptr %arrayidx4.i.i, align 8, !tbaa !219
  store ptr %8, ptr %arrayidx.i7.i, align 8, !tbaa !219
  %9 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %arrayidx10.i.i = getelementptr inbounds ptr, ptr %9, i64 %idxprom3.i.i
  store ptr %7, ptr %arrayidx10.i.i, align 8, !tbaa !219
  store i32 %sub.i, ptr %m_size.i.i.i, align 4, !tbaa !124
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6removeERKS2_.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6removeERKS2_.exit: ; preds = %for.inc.i.i, %if.end, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i, %if.then.i
  ret void
}

declare void @_ZN6btDbvt6removeEP10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(64), ptr noundef) local_unnamed_addr #1

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody7ClusterD2Ev(ptr noundef nonnull align 8 dereferenceable(424) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %m_data.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %this, i64 0, i32 2, i32 5
  %0 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !33
  %tobool.not.i.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %this, i64 0, i32 2, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %1, 0
  %or.cond.i.i = select i1 %tobool.not.i.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayI9btVector3ED2Ev.exit, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %entry
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
          to label %_ZN20btAlignedObjectArrayI9btVector3ED2Ev.exit unwind label %lpad

_ZN20btAlignedObjectArrayI9btVector3ED2Ev.exit:   ; preds = %if.then3.i.i.i, %entry
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !30
  store ptr null, ptr %m_data.i.i.i, align 8, !tbaa !33
  %m_size.i4.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %this, i64 0, i32 2, i32 2
  store i32 0, ptr %m_size.i4.i.i, align 4, !tbaa !34
  %m_capacity.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %this, i64 0, i32 2, i32 3
  store i32 0, ptr %m_capacity.i.i.i, align 8, !tbaa !35
  %m_data.i.i.i9 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %this, i64 0, i32 1, i32 5
  %2 = load ptr, ptr %m_data.i.i.i9, align 8, !tbaa !39
  %tobool.not.i.i.i10 = icmp eq ptr %2, null
  %m_ownsMemory.i.i.i11 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %this, i64 0, i32 1, i32 6
  %3 = load i8, ptr %m_ownsMemory.i.i.i11, align 8, !range !159
  %tobool2.not.i.i.i12 = icmp eq i8 %3, 0
  %or.cond.i.i13 = select i1 %tobool.not.i.i.i10, i1 true, i1 %tobool2.not.i.i.i12
  br i1 %or.cond.i.i13, label %_ZN20btAlignedObjectArrayIfED2Ev.exit, label %if.then3.i.i.i14

if.then3.i.i.i14:                                 ; preds = %_ZN20btAlignedObjectArrayI9btVector3ED2Ev.exit
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %2)
          to label %_ZN20btAlignedObjectArrayIfED2Ev.exit unwind label %lpad2

_ZN20btAlignedObjectArrayIfED2Ev.exit:            ; preds = %if.then3.i.i.i14, %_ZN20btAlignedObjectArrayI9btVector3ED2Ev.exit
  store i8 1, ptr %m_ownsMemory.i.i.i11, align 8, !tbaa !36
  store ptr null, ptr %m_data.i.i.i9, align 8, !tbaa !39
  %m_size.i4.i.i15 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %this, i64 0, i32 1, i32 2
  store i32 0, ptr %m_size.i4.i.i15, align 4, !tbaa !40
  %m_capacity.i.i.i16 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %this, i64 0, i32 1, i32 3
  store i32 0, ptr %m_capacity.i.i.i16, align 8, !tbaa !41
  %m_data.i.i.i18 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %this, i64 0, i32 5
  %4 = load ptr, ptr %m_data.i.i.i18, align 8, !tbaa !320
  %tobool.not.i.i.i19 = icmp eq ptr %4, null
  %m_ownsMemory.i.i.i20 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %this, i64 0, i32 6
  %5 = load i8, ptr %m_ownsMemory.i.i.i20, align 8, !range !159
  %tobool2.not.i.i.i21 = icmp eq i8 %5, 0
  %or.cond.i.i22 = select i1 %tobool.not.i.i.i19, i1 true, i1 %tobool2.not.i.i.i21
  br i1 %or.cond.i.i22, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEED2Ev.exit, label %if.then3.i.i.i23

if.then3.i.i.i23:                                 ; preds = %_ZN20btAlignedObjectArrayIfED2Ev.exit
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %4)
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEED2Ev.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEED2Ev.exit: ; preds = %_ZN20btAlignedObjectArrayIfED2Ev.exit, %if.then3.i.i.i23
  store i8 1, ptr %m_ownsMemory.i.i.i20, align 8, !tbaa !341
  store ptr null, ptr %m_data.i.i.i18, align 8, !tbaa !320
  %m_size.i4.i.i24 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i.i24, align 4, !tbaa !319
  %m_capacity.i.i.i25 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i25, align 8, !tbaa !342
  ret void

lpad:                                             ; preds = %if.then3.i.i.i
  %6 = landingpad { ptr, i32 }
          cleanup
  %m_masses4 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %this, i64 0, i32 1
  invoke void @_ZN20btAlignedObjectArrayIfED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %m_masses4)
          to label %ehcleanup unwind label %terminate.lpad

lpad2:                                            ; preds = %if.then3.i.i.i14
  %7 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad, %lpad2
  %.pn = phi { ptr, i32 } [ %7, %lpad2 ], [ %6, %lpad ]
  invoke void @_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this)
          to label %eh.resume unwind label %terminate.lpad

eh.resume:                                        ; preds = %ehcleanup
  resume { ptr, i32 } %.pn

terminate.lpad:                                   ; preds = %ehcleanup, %lpad
  %8 = landingpad { ptr, i32 }
          catch ptr null
  %9 = extractvalue { ptr, i32 } %8, 0
  tail call void @__clang_call_terminate(ptr %9) #39
  unreachable
}

; Function Attrs: uwtable
define dso_local noundef i32 @_ZN10btSoftBody16generateClustersEii(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %k, i32 noundef %maxiterations) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %idx = alloca [3 x i32], align 4
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  %0 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp3.i = icmp sgt i32 %0, 0
  br i1 %cmp3.i, label %while.body.lr.ph.i, label %_ZN10btSoftBody15releaseClustersEv.exit

while.body.lr.ph.i:                               ; preds = %entry
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %m_cdbvt.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  br label %while.body.i

while.body.i:                                     ; preds = %_ZN10btSoftBody14releaseClusterEi.exit.i, %while.body.lr.ph.i
  %1 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !123
  %2 = load ptr, ptr %1, align 8, !tbaa !219
  %m_leaf.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 15
  %3 = load ptr, ptr %m_leaf.i.i, align 8, !tbaa !221
  %tobool.not.i.i = icmp eq ptr %3, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %while.body.i
  tail call void @_ZN6btDbvt6removeEP10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt.i.i, ptr noundef nonnull %3)
  br label %if.end.i.i

if.end.i.i:                                       ; preds = %if.then.i.i, %while.body.i
  tail call void @_ZN10btSoftBody7ClusterD2Ev(ptr noundef nonnull align 8 dereferenceable(424) %2)
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %2)
  %4 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp8.i.i.i.i = icmp sgt i32 %4, 0
  br i1 %cmp8.i.i.i.i, label %for.body.lr.ph.i.i.i.i, label %_ZN10btSoftBody15releaseClustersEv.exit

for.body.lr.ph.i.i.i.i:                           ; preds = %if.end.i.i
  %5 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !123
  %wide.trip.count.i.i.i.i = zext i32 %4 to i64
  br label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.inc.i.i.i.i, %for.body.lr.ph.i.i.i.i
  %indvars.iv.i.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.i ], [ %indvars.iv.next.i.i.i.i, %for.inc.i.i.i.i ]
  %arrayidx.i.i.i.i = getelementptr inbounds ptr, ptr %5, i64 %indvars.iv.i.i.i.i
  %6 = load ptr, ptr %arrayidx.i.i.i.i, align 8, !tbaa !219
  %cmp3.i.i.i.i = icmp eq ptr %6, %2
  br i1 %cmp3.i.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i, label %for.inc.i.i.i.i

for.inc.i.i.i.i:                                  ; preds = %for.body.i.i.i.i
  %indvars.iv.next.i.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i.i, 1
  %exitcond.not.i.i.i.i = icmp eq i64 %indvars.iv.next.i.i.i.i, %wide.trip.count.i.i.i.i
  br i1 %exitcond.not.i.i.i.i, label %_ZN10btSoftBody14releaseClusterEi.exit.i, label %for.body.i.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i: ; preds = %for.body.i.i.i.i
  %7 = trunc i64 %indvars.iv.i.i.i.i to i32
  %cmp.i.i.i = icmp sgt i32 %4, %7
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN10btSoftBody14releaseClusterEi.exit.i

if.then.i.i.i:                                    ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i
  %sub.i.i.i = add nsw i32 %4, -1
  %sext.i.i.i = shl i64 %indvars.iv.i.i.i.i, 32
  %idxprom.i.i.i.i = ashr exact i64 %sext.i.i.i, 32
  %arrayidx.i7.i.i.i = getelementptr inbounds ptr, ptr %5, i64 %idxprom.i.i.i.i
  %8 = load ptr, ptr %arrayidx.i7.i.i.i, align 8, !tbaa !219
  %idxprom3.i.i.i.i = sext i32 %sub.i.i.i to i64
  %arrayidx4.i.i.i.i = getelementptr inbounds ptr, ptr %5, i64 %idxprom3.i.i.i.i
  %9 = load ptr, ptr %arrayidx4.i.i.i.i, align 8, !tbaa !219
  store ptr %9, ptr %arrayidx.i7.i.i.i, align 8, !tbaa !219
  %10 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !123
  %arrayidx10.i.i.i.i = getelementptr inbounds ptr, ptr %10, i64 %idxprom3.i.i.i.i
  store ptr %8, ptr %arrayidx10.i.i.i.i, align 8, !tbaa !219
  store i32 %sub.i.i.i, ptr %m_size.i.i, align 4, !tbaa !124
  br label %_ZN10btSoftBody14releaseClusterEi.exit.i

_ZN10btSoftBody14releaseClusterEi.exit.i:         ; preds = %for.inc.i.i.i.i, %if.then.i.i.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i
  %11 = phi i32 [ %4, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i.i ], [ %sub.i.i.i, %if.then.i.i.i ], [ %4, %for.inc.i.i.i.i ]
  %cmp.i = icmp sgt i32 %11, 0
  br i1 %cmp.i, label %while.body.i, label %_ZN10btSoftBody15releaseClustersEv.exit

_ZN10btSoftBody15releaseClustersEv.exit:          ; preds = %if.end.i.i, %_ZN10btSoftBody14releaseClusterEi.exit.i, %entry
  %12 = phi i32 [ %0, %entry ], [ %4, %if.end.i.i ], [ %11, %_ZN10btSoftBody14releaseClusterEi.exit.i ]
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %13 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %.sroa.speculated1717 = tail call i32 @llvm.smin.i32(i32 %13, i32 %k)
  %cmp4.i = icmp slt i32 %12, %.sroa.speculated1717
  br i1 %cmp4.i, label %if.then5.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit

if.then5.i:                                       ; preds = %_ZN10btSoftBody15releaseClustersEv.exit
  %m_capacity.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 3
  %14 = load i32, ptr %m_capacity.i.i.i, align 8, !tbaa !125
  %cmp.i.i = icmp slt i32 %14, %.sroa.speculated1717
  br i1 %cmp.i.i, label %if.then.i.i721, label %for.body10.lr.ph.i

if.then.i.i721:                                   ; preds = %if.then5.i
  %tobool.not.i.i.i = icmp eq i32 %.sroa.speculated1717, 0
  br i1 %tobool.not.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i: ; preds = %if.then.i.i721
  %conv.i.i.i.i = sext i32 %.sroa.speculated1717 to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 3
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp7.i.i.i = icmp sgt i32 %.pre.i, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i
  %m_data.i.i.i723 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %wide.trip.count.i.i.i = zext i32 %.pre.i to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 3
  %15 = icmp ult i32 %.pre.i, 4
  br i1 %15, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967292
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.3, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds ptr, ptr %call.i.i.i.i, i64 %indvars.iv.i.i.i
  %16 = load ptr, ptr %m_data.i.i.i723, align 8, !tbaa !123
  %arrayidx3.i.i.i = getelementptr inbounds ptr, ptr %16, i64 %indvars.iv.i.i.i
  %17 = load ptr, ptr %arrayidx3.i.i.i, align 8, !tbaa !219
  store ptr %17, ptr %arrayidx.i.i.i, align 8, !tbaa !219
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds ptr, ptr %call.i.i.i.i, i64 %indvars.iv.next.i.i.i
  %18 = load ptr, ptr %m_data.i.i.i723, align 8, !tbaa !123
  %arrayidx3.i.i.i.1 = getelementptr inbounds ptr, ptr %18, i64 %indvars.iv.next.i.i.i
  %19 = load ptr, ptr %arrayidx3.i.i.i.1, align 8, !tbaa !219
  store ptr %19, ptr %arrayidx.i.i.i.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.1 = or i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds ptr, ptr %call.i.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %20 = load ptr, ptr %m_data.i.i.i723, align 8, !tbaa !123
  %arrayidx3.i.i.i.2 = getelementptr inbounds ptr, ptr %20, i64 %indvars.iv.next.i.i.i.1
  %21 = load ptr, ptr %arrayidx3.i.i.i.2, align 8, !tbaa !219
  store ptr %21, ptr %arrayidx.i.i.i.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.2 = or i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds ptr, ptr %call.i.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %22 = load ptr, ptr %m_data.i.i.i723, align 8, !tbaa !123
  %arrayidx3.i.i.i.3 = getelementptr inbounds ptr, ptr %22, i64 %indvars.iv.next.i.i.i.2
  %23 = load ptr, ptr %arrayidx3.i.i.i.3, align 8, !tbaa !219
  store ptr %23, ptr %arrayidx.i.i.i.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil
  %indvars.iv.i.i.i.epil = phi i64 [ %indvars.iv.next.i.i.i.epil, %for.body.i.i.i.epil ], [ %indvars.iv.i.i.i.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.i.i.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %arrayidx.i.i.i.epil = getelementptr inbounds ptr, ptr %call.i.i.i.i, i64 %indvars.iv.i.i.i.epil
  %24 = load ptr, ptr %m_data.i.i.i723, align 8, !tbaa !123
  %arrayidx3.i.i.i.epil = getelementptr inbounds ptr, ptr %24, i64 %indvars.iv.i.i.i.epil
  %25 = load ptr, ptr %arrayidx3.i.i.i.epil, align 8, !tbaa !219
  store ptr %25, ptr %arrayidx.i.i.i.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.epil = add nuw nsw i64 %indvars.iv.i.i.i.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil, !llvm.loop !343

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil, %if.then.i.i721, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i
  %retval.0.i.i.i1931 = phi ptr [ %call.i.i.i.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i ], [ null, %if.then.i.i721 ], [ %call.i.i.i.i, %for.body.i.i.i.epil ], [ %call.i.i.i.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %26 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !123
  %tobool.not.i10.i.i = icmp eq ptr %26, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 6
  %27 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %27, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %if.end.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %26)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !122
  store ptr %retval.0.i.i.i1931, ptr %m_data.i9.i.i, align 8, !tbaa !123
  store i32 %.sroa.speculated1717, ptr %m_capacity.i.i.i, align 8, !tbaa !125
  br label %for.body10.lr.ph.i

for.body10.lr.ph.i:                               ; preds = %if.end.i, %if.then5.i
  %m_data11.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %28 = sext i32 %12 to i64
  %wide.trip.count.i = sext i32 %.sroa.speculated1717 to i64
  %29 = sub nsw i64 %wide.trip.count.i, %28
  %30 = xor i64 %28, -1
  %31 = add nsw i64 %30, %wide.trip.count.i
  %xtraiter1988 = and i64 %29, 3
  %lcmp.mod1989.not = icmp eq i64 %xtraiter1988, 0
  br i1 %lcmp.mod1989.not, label %for.body10.i.prol.loopexit, label %for.body10.i.prol

for.body10.i.prol:                                ; preds = %for.body10.lr.ph.i, %for.body10.i.prol
  %indvars.iv.i.prol = phi i64 [ %indvars.iv.next.i.prol, %for.body10.i.prol ], [ %28, %for.body10.lr.ph.i ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body10.i.prol ], [ 0, %for.body10.lr.ph.i ]
  %32 = load ptr, ptr %m_data11.i, align 8, !tbaa !123
  %arrayidx13.i.prol = getelementptr inbounds ptr, ptr %32, i64 %indvars.iv.i.prol
  store ptr null, ptr %arrayidx13.i.prol, align 8, !tbaa !219
  %indvars.iv.next.i.prol = add nsw i64 %indvars.iv.i.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter1988
  br i1 %prol.iter.cmp.not, label %for.body10.i.prol.loopexit, label %for.body10.i.prol, !llvm.loop !344

for.body10.i.prol.loopexit:                       ; preds = %for.body10.i.prol, %for.body10.lr.ph.i
  %indvars.iv.i.unr = phi i64 [ %28, %for.body10.lr.ph.i ], [ %indvars.iv.next.i.prol, %for.body10.i.prol ]
  %33 = icmp ult i64 %31, 3
  br i1 %33, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit, label %for.body10.i

for.body10.i:                                     ; preds = %for.body10.i.prol.loopexit, %for.body10.i
  %indvars.iv.i = phi i64 [ %indvars.iv.next.i.3, %for.body10.i ], [ %indvars.iv.i.unr, %for.body10.i.prol.loopexit ]
  %34 = load ptr, ptr %m_data11.i, align 8, !tbaa !123
  %arrayidx13.i = getelementptr inbounds ptr, ptr %34, i64 %indvars.iv.i
  store ptr null, ptr %arrayidx13.i, align 8, !tbaa !219
  %indvars.iv.next.i = add nsw i64 %indvars.iv.i, 1
  %35 = load ptr, ptr %m_data11.i, align 8, !tbaa !123
  %arrayidx13.i.1 = getelementptr inbounds ptr, ptr %35, i64 %indvars.iv.next.i
  store ptr null, ptr %arrayidx13.i.1, align 8, !tbaa !219
  %indvars.iv.next.i.1 = add nsw i64 %indvars.iv.i, 2
  %36 = load ptr, ptr %m_data11.i, align 8, !tbaa !123
  %arrayidx13.i.2 = getelementptr inbounds ptr, ptr %36, i64 %indvars.iv.next.i.1
  store ptr null, ptr %arrayidx13.i.2, align 8, !tbaa !219
  %indvars.iv.next.i.2 = add nsw i64 %indvars.iv.i, 3
  %37 = load ptr, ptr %m_data11.i, align 8, !tbaa !123
  %arrayidx13.i.3 = getelementptr inbounds ptr, ptr %37, i64 %indvars.iv.next.i.2
  store ptr null, ptr %arrayidx13.i.3, align 8, !tbaa !219
  %indvars.iv.next.i.3 = add nsw i64 %indvars.iv.i, 4
  %exitcond.not.i.3 = icmp eq i64 %indvars.iv.next.i.3, %wide.trip.count.i
  br i1 %exitcond.not.i.3, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit, label %for.body10.i

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit: ; preds = %for.body10.i.prol.loopexit, %for.body10.i, %_ZN10btSoftBody15releaseClustersEv.exit
  store i32 %.sroa.speculated1717, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp1770 = icmp sgt i32 %.sroa.speculated1717, 0
  br i1 %cmp1770, label %for.body.lr.ph, label %if.else

for.body.lr.ph:                                   ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %call6 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 424, i32 noundef 16)
  %m_ownsMemory.i.i.i725 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call6, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i.i725, align 8, !tbaa !341
  %m_data.i.i.i726 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call6, i64 0, i32 5
  store ptr null, ptr %m_data.i.i.i726, align 8, !tbaa !320
  %m_size.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call6, i64 0, i32 2
  store i32 0, ptr %m_size.i.i.i, align 4, !tbaa !319
  %m_capacity.i.i.i727 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call6, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i727, align 8, !tbaa !342
  %m_ownsMemory.i.i25.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 1, i32 6
  store i8 1, ptr %m_ownsMemory.i.i25.i, align 8, !tbaa !36
  %m_data.i.i26.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 1, i32 5
  store ptr null, ptr %m_data.i.i26.i, align 8, !tbaa !39
  %m_size.i.i27.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 1, i32 2
  store i32 0, ptr %m_size.i.i27.i, align 4, !tbaa !40
  %m_capacity.i.i28.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 1, i32 3
  store i32 0, ptr %m_capacity.i.i28.i, align 8, !tbaa !41
  %m_ownsMemory.i.i29.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 2, i32 6
  store i8 1, ptr %m_ownsMemory.i.i29.i, align 8, !tbaa !30
  %m_data.i.i30.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 2, i32 5
  store ptr null, ptr %m_data.i.i30.i, align 8, !tbaa !33
  %m_size.i.i31.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 2, i32 2
  store i32 0, ptr %m_size.i.i31.i, align 4, !tbaa !34
  %m_capacity.i.i32.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 2, i32 3
  store i32 0, ptr %m_capacity.i.i32.i, align 8, !tbaa !35
  %m_leaf.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 15
  %m_maxSelfCollisionImpulse.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 20
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %m_leaf.i, i8 0, i64 24, i1 false)
  store <2 x float> <float 1.000000e+02, float 0x3F847AE140000000>, ptr %m_maxSelfCollisionImpulse.i, align 8, !tbaa !137
  %m_containsAnchor.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call6, i64 0, i32 22
  store i8 0, ptr %m_containsAnchor.i, align 8, !tbaa !345
  %38 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %arrayidx.i = getelementptr inbounds ptr, ptr %38, i64 %indvars.iv
  store ptr %call6, ptr %arrayidx.i, align 8, !tbaa !219
  %39 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %arrayidx.i730 = getelementptr inbounds ptr, ptr %39, i64 %indvars.iv
  %40 = load ptr, ptr %arrayidx.i730, align 8, !tbaa !219
  %m_collide = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %40, i64 0, i32 23
  store i8 1, ptr %m_collide, align 1, !tbaa !346
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %.pr = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %41 = sext i32 %.pr to i64
  %cmp = icmp slt i64 %indvars.iv.next, %41
  br i1 %cmp, label %for.body, label %for.end

for.end:                                          ; preds = %for.body
  %cmp13 = icmp sgt i32 %.pr, 0
  br i1 %cmp13, label %for.cond18.preheader, label %if.else

for.cond18.preheader:                             ; preds = %for.end
  %42 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp231782 = icmp sgt i32 %42, 0
  br i1 %cmp231782, label %for.body24.lr.ph, label %if.then.i.i.i795

for.body24.lr.ph:                                 ; preds = %for.cond18.preheader
  %m_data.i734 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %m_data.i740 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  br label %for.body24

for.body24:                                       ; preds = %for.body24.lr.ph, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit
  %43 = phi i32 [ %42, %for.body24.lr.ph ], [ %70, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit ]
  %indvars.iv1861 = phi i64 [ 0, %for.body24.lr.ph ], [ %indvars.iv.next1862, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit ]
  %cog.sroa.14.01785 = phi float [ 0.000000e+00, %for.body24.lr.ph ], [ %add13.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit ]
  %44 = phi <2 x float> [ zeroinitializer, %for.body24.lr.ph ], [ %47, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit ]
  %45 = load ptr, ptr %m_data.i734, align 8, !tbaa !87
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %45, i64 %indvars.iv1861, i32 1
  %46 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %47 = fadd <2 x float> %44, %46
  %arrayidx10.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %48 = load float, ptr %arrayidx10.i, align 4, !tbaa !137
  %add13.i = fadd float %cog.sroa.14.01785, %48
  %49 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %50 = trunc i64 %indvars.iv1861 to i32
  %51 = mul i32 %50, 29873
  %rem = srem i32 %51, %49
  %52 = load ptr, ptr %m_data.i740, align 8, !tbaa !123
  %idxprom.i741 = zext i32 %rem to i64
  %arrayidx.i742 = getelementptr inbounds ptr, ptr %52, i64 %idxprom.i741
  %53 = load ptr, ptr %arrayidx.i742, align 8, !tbaa !219
  %arrayidx.i745 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %45, i64 %indvars.iv1861
  %m_size.i.i746 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %53, i64 0, i32 2
  %54 = load i32, ptr %m_size.i.i746, align 4, !tbaa !319
  %m_capacity.i.i747 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %53, i64 0, i32 3
  %55 = load i32, ptr %m_capacity.i.i747, align 8, !tbaa !342
  %cmp.i748 = icmp eq i32 %54, %55
  br i1 %cmp.i748, label %if.then.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit

if.then.i:                                        ; preds = %for.body24
  %tobool.not.i.i749 = icmp eq i32 %54, 0
  %mul.i.i = shl nsw i32 %54, 1
  %cond.i.i = select i1 %tobool.not.i.i749, i32 1, i32 %mul.i.i
  %cmp.i.i750 = icmp slt i32 %54, %cond.i.i
  br i1 %cmp.i.i750, label %if.then.i.i752, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit

if.then.i.i752:                                   ; preds = %if.then.i
  %tobool.not.i.i.i751 = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i751, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i, label %if.then.i.i.i757

if.then.i.i.i757:                                 ; preds = %if.then.i.i752
  %conv.i.i.i.i753 = sext i32 %cond.i.i to i64
  %mul.i.i.i.i754 = shl nsw i64 %conv.i.i.i.i753, 3
  %call.i.i.i.i755779 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i754, i32 noundef 16)
          to label %call.i.i.i.i755.noexc unwind label %lpad39

call.i.i.i.i755.noexc:                            ; preds = %if.then.i.i.i757
  %.pre.i756 = load i32, ptr %m_size.i.i746, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i: ; preds = %call.i.i.i.i755.noexc, %if.then.i.i752
  %56 = phi i32 [ %.pre.i756, %call.i.i.i.i755.noexc ], [ %54, %if.then.i.i752 ]
  %retval.0.i.i.i758 = phi ptr [ %call.i.i.i.i755779, %call.i.i.i.i755.noexc ], [ null, %if.then.i.i752 ]
  %cmp7.i.i.i759 = icmp sgt i32 %56, 0
  br i1 %cmp7.i.i.i759, label %for.body.lr.ph.i.i.i762, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i

for.body.lr.ph.i.i.i762:                          ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i
  %m_data.i.i.i760 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %53, i64 0, i32 5
  %wide.trip.count.i.i.i761 = zext i32 %56 to i64
  %xtraiter2071 = and i64 %wide.trip.count.i.i.i761, 3
  %57 = icmp ult i32 %56, 4
  br i1 %57, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i762.new

for.body.lr.ph.i.i.i762.new:                      ; preds = %for.body.lr.ph.i.i.i762
  %unroll_iter2074 = and i64 %wide.trip.count.i.i.i761, 4294967292
  br label %for.body.i.i.i768

for.body.i.i.i768:                                ; preds = %for.body.i.i.i768, %for.body.lr.ph.i.i.i762.new
  %indvars.iv.i.i.i763 = phi i64 [ 0, %for.body.lr.ph.i.i.i762.new ], [ %indvars.iv.next.i.i.i766.3, %for.body.i.i.i768 ]
  %niter2075 = phi i64 [ 0, %for.body.lr.ph.i.i.i762.new ], [ %niter2075.next.3, %for.body.i.i.i768 ]
  %arrayidx.i.i.i764 = getelementptr inbounds ptr, ptr %retval.0.i.i.i758, i64 %indvars.iv.i.i.i763
  %58 = load ptr, ptr %m_data.i.i.i760, align 8, !tbaa !320
  %arrayidx3.i.i.i765 = getelementptr inbounds ptr, ptr %58, i64 %indvars.iv.i.i.i763
  %59 = load ptr, ptr %arrayidx3.i.i.i765, align 8, !tbaa !219
  store ptr %59, ptr %arrayidx.i.i.i764, align 8, !tbaa !219
  %indvars.iv.next.i.i.i766 = or i64 %indvars.iv.i.i.i763, 1
  %arrayidx.i.i.i764.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i758, i64 %indvars.iv.next.i.i.i766
  %60 = load ptr, ptr %m_data.i.i.i760, align 8, !tbaa !320
  %arrayidx3.i.i.i765.1 = getelementptr inbounds ptr, ptr %60, i64 %indvars.iv.next.i.i.i766
  %61 = load ptr, ptr %arrayidx3.i.i.i765.1, align 8, !tbaa !219
  store ptr %61, ptr %arrayidx.i.i.i764.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i766.1 = or i64 %indvars.iv.i.i.i763, 2
  %arrayidx.i.i.i764.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i758, i64 %indvars.iv.next.i.i.i766.1
  %62 = load ptr, ptr %m_data.i.i.i760, align 8, !tbaa !320
  %arrayidx3.i.i.i765.2 = getelementptr inbounds ptr, ptr %62, i64 %indvars.iv.next.i.i.i766.1
  %63 = load ptr, ptr %arrayidx3.i.i.i765.2, align 8, !tbaa !219
  store ptr %63, ptr %arrayidx.i.i.i764.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i766.2 = or i64 %indvars.iv.i.i.i763, 3
  %arrayidx.i.i.i764.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i758, i64 %indvars.iv.next.i.i.i766.2
  %64 = load ptr, ptr %m_data.i.i.i760, align 8, !tbaa !320
  %arrayidx3.i.i.i765.3 = getelementptr inbounds ptr, ptr %64, i64 %indvars.iv.next.i.i.i766.2
  %65 = load ptr, ptr %arrayidx3.i.i.i765.3, align 8, !tbaa !219
  store ptr %65, ptr %arrayidx.i.i.i764.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i766.3 = add nuw nsw i64 %indvars.iv.i.i.i763, 4
  %niter2075.next.3 = add i64 %niter2075, 4
  %niter2075.ncmp.3 = icmp eq i64 %niter2075.next.3, %unroll_iter2074
  br i1 %niter2075.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i768

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i768, %for.body.lr.ph.i.i.i762
  %indvars.iv.i.i.i763.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i762 ], [ %indvars.iv.next.i.i.i766.3, %for.body.i.i.i768 ]
  %lcmp.mod2073.not = icmp eq i64 %xtraiter2071, 0
  br i1 %lcmp.mod2073.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i768.epil

for.body.i.i.i768.epil:                           ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i768.epil
  %indvars.iv.i.i.i763.epil = phi i64 [ %indvars.iv.next.i.i.i766.epil, %for.body.i.i.i768.epil ], [ %indvars.iv.i.i.i763.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %epil.iter2072 = phi i64 [ %epil.iter2072.next, %for.body.i.i.i768.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %arrayidx.i.i.i764.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i758, i64 %indvars.iv.i.i.i763.epil
  %66 = load ptr, ptr %m_data.i.i.i760, align 8, !tbaa !320
  %arrayidx3.i.i.i765.epil = getelementptr inbounds ptr, ptr %66, i64 %indvars.iv.i.i.i763.epil
  %67 = load ptr, ptr %arrayidx3.i.i.i765.epil, align 8, !tbaa !219
  store ptr %67, ptr %arrayidx.i.i.i764.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i766.epil = add nuw nsw i64 %indvars.iv.i.i.i763.epil, 1
  %epil.iter2072.next = add i64 %epil.iter2072, 1
  %epil.iter2072.cmp.not = icmp eq i64 %epil.iter2072.next, %xtraiter2071
  br i1 %epil.iter2072.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i768.epil, !llvm.loop !347

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i768.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i
  %m_data.i9.i.i769 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %53, i64 0, i32 5
  %68 = load ptr, ptr %m_data.i9.i.i769, align 8, !tbaa !320
  %tobool.not.i10.i.i770 = icmp eq ptr %68, null
  %m_ownsMemory.i.i.i771 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %53, i64 0, i32 6
  %69 = load i8, ptr %m_ownsMemory.i.i.i771, align 8, !range !159
  %tobool2.not.i.i.i772 = icmp eq i8 %69, 0
  %or.cond.i.i773 = select i1 %tobool.not.i10.i.i770, i1 true, i1 %tobool2.not.i.i.i772
  br i1 %or.cond.i.i773, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i, label %if.then3.i.i.i774

if.then3.i.i.i774:                                ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %68)
          to label %.noexc unwind label %lpad39

.noexc:                                           ; preds = %if.then3.i.i.i774
  %.pre7.pre.i = load i32, ptr %m_size.i.i746, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i: ; preds = %.noexc, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i
  %.pre7.i = phi i32 [ %.pre7.pre.i, %.noexc ], [ %56, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i ]
  store i8 1, ptr %m_ownsMemory.i.i.i771, align 8, !tbaa !341
  store ptr %retval.0.i.i.i758, ptr %m_data.i9.i.i769, align 8, !tbaa !320
  store i32 %cond.i.i, ptr %m_capacity.i.i747, align 8, !tbaa !342
  %.pre = load i32, ptr %m_size.i, align 4, !tbaa !88
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit: ; preds = %for.body24, %if.then.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i
  %70 = phi i32 [ %.pre, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i ], [ %43, %if.then.i ], [ %43, %for.body24 ]
  %71 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i ], [ %54, %if.then.i ], [ %54, %for.body24 ]
  %m_data.i775 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %53, i64 0, i32 5
  %72 = load ptr, ptr %m_data.i775, align 8, !tbaa !320
  %idxprom.i776 = sext i32 %71 to i64
  %arrayidx.i777 = getelementptr inbounds ptr, ptr %72, i64 %idxprom.i776
  store ptr %arrayidx.i745, ptr %arrayidx.i777, align 8, !tbaa !219
  %inc.i = add nsw i32 %71, 1
  store i32 %inc.i, ptr %m_size.i.i746, align 4, !tbaa !319
  %indvars.iv.next1862 = add nuw nsw i64 %indvars.iv1861, 1
  %73 = sext i32 %70 to i64
  %cmp23 = icmp slt i64 %indvars.iv.next1862, %73
  br i1 %cmp23, label %for.body24, label %if.then.i.i.i795

lpad20:                                           ; preds = %if.then.i.i.i795
  %74 = landingpad { ptr, i32 }
          cleanup
  %75 = extractvalue { ptr, i32 } %74, 0
  %76 = extractvalue { ptr, i32 } %74, 1
  br label %invoke.cont452

lpad39:                                           ; preds = %if.then3.i.i.i774, %if.then.i.i.i757
  %77 = landingpad { ptr, i32 }
          cleanup
  %78 = extractvalue { ptr, i32 } %77, 0
  %79 = extractvalue { ptr, i32 } %77, 1
  br label %invoke.cont452

if.then.i.i.i795:                                 ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit, %for.cond18.preheader
  %cog.sroa.14.0.lcssa = phi float [ 0.000000e+00, %for.cond18.preheader ], [ %add13.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit ]
  %.lcssa1763 = phi i32 [ %42, %for.cond18.preheader ], [ %70, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit ]
  %80 = phi <2 x float> [ zeroinitializer, %for.cond18.preheader ], [ %47, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit ]
  %conv = sitofp i32 %.lcssa1763 to float
  %div.i = fdiv float 1.000000e+00, %conv
  %81 = insertelement <2 x float> poison, float %div.i, i64 0
  %82 = shufflevector <2 x float> %81, <2 x float> poison, <2 x i32> zeroinitializer
  %83 = fmul <2 x float> %80, %82
  %mul7.i.i = fmul float %cog.sroa.14.0.lcssa, %div.i
  %conv.i.i.i.i791 = zext i32 %.pr to i64
  %mul.i.i.i.i792 = shl nuw nsw i64 %conv.i.i.i.i791, 4
  %call.i.i.i.i793822 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i792, i32 noundef 16)
          to label %for.body10.i821.preheader unwind label %lpad20

for.body10.i821.preheader:                        ; preds = %if.then.i.i.i795
  %xtraiter2076 = and i64 %conv.i.i.i.i791, 3
  %84 = icmp ult i32 %.pr, 4
  br i1 %84, label %do.body.preheader.unr-lcssa, label %for.body10.i821.preheader.new

for.body10.i821.preheader.new:                    ; preds = %for.body10.i821.preheader
  %unroll_iter2079 = and i64 %conv.i.i.i.i791, 4294967292
  br label %for.body10.i821

for.body10.i821:                                  ; preds = %for.body10.i821, %for.body10.i821.preheader.new
  %indvars.iv.i817 = phi i64 [ 0, %for.body10.i821.preheader.new ], [ %indvars.iv.next.i819.3, %for.body10.i821 ]
  %niter2080 = phi i64 [ 0, %for.body10.i821.preheader.new ], [ %niter2080.next.3, %for.body10.i821 ]
  %arrayidx13.i818 = getelementptr inbounds %class.btVector3, ptr %call.i.i.i.i793822, i64 %indvars.iv.i817
  store <2 x float> %83, ptr %arrayidx13.i818, align 4
  %cog.sroa.14.0.arrayidx13.i818.sroa_idx = getelementptr inbounds i8, ptr %arrayidx13.i818, i64 8
  store float %mul7.i.i, ptr %cog.sroa.14.0.arrayidx13.i818.sroa_idx, align 4, !tbaa.struct !165
  %cog.sroa.19.0.arrayidx13.i818.sroa_idx = getelementptr inbounds i8, ptr %arrayidx13.i818, i64 12
  store float 0.000000e+00, ptr %cog.sroa.19.0.arrayidx13.i818.sroa_idx, align 4, !tbaa.struct !318
  %indvars.iv.next.i819 = or i64 %indvars.iv.i817, 1
  %arrayidx13.i818.1 = getelementptr inbounds %class.btVector3, ptr %call.i.i.i.i793822, i64 %indvars.iv.next.i819
  store <2 x float> %83, ptr %arrayidx13.i818.1, align 4
  %cog.sroa.14.0.arrayidx13.i818.sroa_idx.1 = getelementptr inbounds i8, ptr %arrayidx13.i818.1, i64 8
  store float %mul7.i.i, ptr %cog.sroa.14.0.arrayidx13.i818.sroa_idx.1, align 4, !tbaa.struct !165
  %cog.sroa.19.0.arrayidx13.i818.sroa_idx.1 = getelementptr inbounds i8, ptr %arrayidx13.i818.1, i64 12
  store float 0.000000e+00, ptr %cog.sroa.19.0.arrayidx13.i818.sroa_idx.1, align 4, !tbaa.struct !318
  %indvars.iv.next.i819.1 = or i64 %indvars.iv.i817, 2
  %arrayidx13.i818.2 = getelementptr inbounds %class.btVector3, ptr %call.i.i.i.i793822, i64 %indvars.iv.next.i819.1
  store <2 x float> %83, ptr %arrayidx13.i818.2, align 4
  %cog.sroa.14.0.arrayidx13.i818.sroa_idx.2 = getelementptr inbounds i8, ptr %arrayidx13.i818.2, i64 8
  store float %mul7.i.i, ptr %cog.sroa.14.0.arrayidx13.i818.sroa_idx.2, align 4, !tbaa.struct !165
  %cog.sroa.19.0.arrayidx13.i818.sroa_idx.2 = getelementptr inbounds i8, ptr %arrayidx13.i818.2, i64 12
  store float 0.000000e+00, ptr %cog.sroa.19.0.arrayidx13.i818.sroa_idx.2, align 4, !tbaa.struct !318
  %indvars.iv.next.i819.2 = or i64 %indvars.iv.i817, 3
  %arrayidx13.i818.3 = getelementptr inbounds %class.btVector3, ptr %call.i.i.i.i793822, i64 %indvars.iv.next.i819.2
  store <2 x float> %83, ptr %arrayidx13.i818.3, align 4
  %cog.sroa.14.0.arrayidx13.i818.sroa_idx.3 = getelementptr inbounds i8, ptr %arrayidx13.i818.3, i64 8
  store float %mul7.i.i, ptr %cog.sroa.14.0.arrayidx13.i818.sroa_idx.3, align 4, !tbaa.struct !165
  %cog.sroa.19.0.arrayidx13.i818.sroa_idx.3 = getelementptr inbounds i8, ptr %arrayidx13.i818.3, i64 12
  store float 0.000000e+00, ptr %cog.sroa.19.0.arrayidx13.i818.sroa_idx.3, align 4, !tbaa.struct !318
  %indvars.iv.next.i819.3 = add nuw nsw i64 %indvars.iv.i817, 4
  %niter2080.next.3 = add i64 %niter2080, 4
  %niter2080.ncmp.3 = icmp eq i64 %niter2080.next.3, %unroll_iter2079
  br i1 %niter2080.ncmp.3, label %do.body.preheader.unr-lcssa, label %for.body10.i821

do.body.preheader.unr-lcssa:                      ; preds = %for.body10.i821, %for.body10.i821.preheader
  %indvars.iv.i817.unr = phi i64 [ 0, %for.body10.i821.preheader ], [ %indvars.iv.next.i819.3, %for.body10.i821 ]
  %lcmp.mod2078.not = icmp eq i64 %xtraiter2076, 0
  br i1 %lcmp.mod2078.not, label %do.body.preheader, label %for.body10.i821.epil

for.body10.i821.epil:                             ; preds = %do.body.preheader.unr-lcssa, %for.body10.i821.epil
  %indvars.iv.i817.epil = phi i64 [ %indvars.iv.next.i819.epil, %for.body10.i821.epil ], [ %indvars.iv.i817.unr, %do.body.preheader.unr-lcssa ]
  %epil.iter2077 = phi i64 [ %epil.iter2077.next, %for.body10.i821.epil ], [ 0, %do.body.preheader.unr-lcssa ]
  %arrayidx13.i818.epil = getelementptr inbounds %class.btVector3, ptr %call.i.i.i.i793822, i64 %indvars.iv.i817.epil
  store <2 x float> %83, ptr %arrayidx13.i818.epil, align 4
  %cog.sroa.14.0.arrayidx13.i818.sroa_idx.epil = getelementptr inbounds i8, ptr %arrayidx13.i818.epil, i64 8
  store float %mul7.i.i, ptr %cog.sroa.14.0.arrayidx13.i818.sroa_idx.epil, align 4, !tbaa.struct !165
  %cog.sroa.19.0.arrayidx13.i818.sroa_idx.epil = getelementptr inbounds i8, ptr %arrayidx13.i818.epil, i64 12
  store float 0.000000e+00, ptr %cog.sroa.19.0.arrayidx13.i818.sroa_idx.epil, align 4, !tbaa.struct !318
  %indvars.iv.next.i819.epil = add nuw nsw i64 %indvars.iv.i817.epil, 1
  %epil.iter2077.next = add i64 %epil.iter2077, 1
  %epil.iter2077.cmp.not = icmp eq i64 %epil.iter2077.next, %xtraiter2076
  br i1 %epil.iter2077.cmp.not, label %do.body.preheader, label %for.body10.i821.epil, !llvm.loop !348

do.body.preheader:                                ; preds = %for.body10.i821.epil, %do.body.preheader.unr-lcssa
  %m_data.i829 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %m_data.i945 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %arrayidx5.i.i949 = getelementptr inbounds [4 x float], ptr %call.i.i.i.i793822, i64 0, i64 1
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %call.i.i.i.i793822, i64 0, i64 2
  %cmp1761803 = icmp sgt i32 %.pr, 1
  br label %for.cond70.preheader.preheader

for.cond70.preheader.preheader:                   ; preds = %for.end208, %do.body.preheader
  %iterations.0 = phi i32 [ %inc60, %for.end208 ], [ 0, %do.body.preheader ]
  %conv56 = sitofp i32 %iterations.0 to float
  %div = fmul float %conv56, 6.250000e-02
  %cmp.i824 = fcmp ogt float %div, 1.000000e+00
  %85 = fsub float 2.000000e+00, %div
  %sub = select i1 %cmp.i824, float 1.000000e+00, float %85
  %inc60 = add nuw nsw i32 %iterations.0, 1
  %86 = insertelement <2 x float> poison, float %sub, i64 0
  %87 = shufflevector <2 x float> %86, <2 x float> poison, <2 x i32> zeroinitializer
  br label %for.cond70.preheader

for.cond157.preheader:                            ; preds = %if.end
  %88 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp1621808 = icmp sgt i32 %88, 0
  br i1 %cmp1621808, label %for.body163, label %for.end208

for.cond70.preheader:                             ; preds = %for.cond70.preheader.preheader, %if.end
  %indvars.iv1868 = phi i64 [ 0, %for.cond70.preheader.preheader ], [ %indvars.iv.next1869, %if.end ]
  %changed.01801 = phi i8 [ 0, %for.cond70.preheader.preheader ], [ %changed.1, %if.end ]
  %89 = load ptr, ptr %m_data.i829, align 8, !tbaa !123
  %arrayidx.i831 = getelementptr inbounds ptr, ptr %89, i64 %indvars.iv1868
  %90 = load ptr, ptr %arrayidx.i831, align 8, !tbaa !219
  %m_size.i832 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %90, i64 0, i32 2
  %91 = load i32, ptr %m_size.i832, align 4, !tbaa !319
  %cmp781791 = icmp sgt i32 %91, 0
  br i1 %cmp781791, label %for.body79.lr.ph, label %for.cond.cleanup

for.body79.lr.ph:                                 ; preds = %for.cond70.preheader
  %m_data.i840 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %90, i64 0, i32 5
  %92 = load ptr, ptr %m_data.i840, align 8, !tbaa !320
  %wide.trip.count = zext i32 %91 to i64
  %xtraiter2081 = and i64 %wide.trip.count, 1
  %93 = icmp eq i32 %91, 1
  br i1 %93, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body79.lr.ph.new

for.body79.lr.ph.new:                             ; preds = %for.body79.lr.ph
  %unroll_iter2086 = and i64 %wide.trip.count, 4294967294
  br label %for.body79

for.cond.cleanup.loopexit.unr-lcssa:              ; preds = %for.body79, %for.body79.lr.ph
  %.lcssa1980.ph = phi <2 x float> [ undef, %for.body79.lr.ph ], [ %104, %for.body79 ]
  %c.sroa.19.8.vec.insert1691.lcssa.ph = phi <2 x float> [ undef, %for.body79.lr.ph ], [ %c.sroa.19.8.vec.insert1691.1, %for.body79 ]
  %indvars.iv1865.unr = phi i64 [ 0, %for.body79.lr.ph ], [ %indvars.iv.next1866.1, %for.body79 ]
  %c.sroa.19.21793.unr = phi <2 x float> [ zeroinitializer, %for.body79.lr.ph ], [ %c.sroa.19.8.vec.insert1691.1, %for.body79 ]
  %c.sroa.0.21792.unr = phi <2 x float> [ zeroinitializer, %for.body79.lr.ph ], [ %104, %for.body79 ]
  %lcmp.mod2083.not = icmp eq i64 %xtraiter2081, 0
  br i1 %lcmp.mod2083.not, label %for.cond.cleanup, label %for.body79.epil

for.body79.epil:                                  ; preds = %for.cond.cleanup.loopexit.unr-lcssa
  %arrayidx.i842.epil = getelementptr inbounds ptr, ptr %92, i64 %indvars.iv1865.unr
  %94 = load ptr, ptr %arrayidx.i842.epil, align 8, !tbaa !219
  %m_x86.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %94, i64 0, i32 1
  %95 = load <2 x float>, ptr %m_x86.epil, align 4, !tbaa !137
  %96 = fadd <2 x float> %c.sroa.0.21792.unr, %95
  %arrayidx10.i847.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %94, i64 0, i32 1, i32 0, i64 2
  %97 = load float, ptr %arrayidx10.i847.epil, align 4, !tbaa !137
  %c.sroa.19.8.vec.extract.epil = extractelement <2 x float> %c.sroa.19.21793.unr, i64 0
  %add13.i849.epil = fadd float %c.sroa.19.8.vec.extract.epil, %97
  %c.sroa.19.8.vec.insert1691.epil = insertelement <2 x float> %c.sroa.19.21793.unr, float %add13.i849.epil, i64 0
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.body79.epil, %for.cond.cleanup.loopexit.unr-lcssa, %for.cond70.preheader
  %c.sroa.0.2.lcssa = phi <2 x float> [ zeroinitializer, %for.cond70.preheader ], [ %.lcssa1980.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %96, %for.body79.epil ]
  %c.sroa.19.2.lcssa = phi <2 x float> [ zeroinitializer, %for.cond70.preheader ], [ %c.sroa.19.8.vec.insert1691.lcssa.ph, %for.cond.cleanup.loopexit.unr-lcssa ], [ %c.sroa.19.8.vec.insert1691.epil, %for.body79.epil ]
  %tobool.not = icmp eq i32 %91, 0
  br i1 %tobool.not, label %if.end, label %invoke.cont109

for.body79:                                       ; preds = %for.body79, %for.body79.lr.ph.new
  %indvars.iv1865 = phi i64 [ 0, %for.body79.lr.ph.new ], [ %indvars.iv.next1866.1, %for.body79 ]
  %c.sroa.19.21793 = phi <2 x float> [ zeroinitializer, %for.body79.lr.ph.new ], [ %c.sroa.19.8.vec.insert1691.1, %for.body79 ]
  %c.sroa.0.21792 = phi <2 x float> [ zeroinitializer, %for.body79.lr.ph.new ], [ %104, %for.body79 ]
  %niter2087 = phi i64 [ 0, %for.body79.lr.ph.new ], [ %niter2087.next.1, %for.body79 ]
  %arrayidx.i842 = getelementptr inbounds ptr, ptr %92, i64 %indvars.iv1865
  %98 = load ptr, ptr %arrayidx.i842, align 8, !tbaa !219
  %m_x86 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %98, i64 0, i32 1
  %99 = load <2 x float>, ptr %m_x86, align 4, !tbaa !137
  %100 = fadd <2 x float> %c.sroa.0.21792, %99
  %arrayidx10.i847 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %98, i64 0, i32 1, i32 0, i64 2
  %101 = load float, ptr %arrayidx10.i847, align 4, !tbaa !137
  %c.sroa.19.8.vec.extract = extractelement <2 x float> %c.sroa.19.21793, i64 0
  %add13.i849 = fadd float %c.sroa.19.8.vec.extract, %101
  %indvars.iv.next1866 = or i64 %indvars.iv1865, 1
  %arrayidx.i842.1 = getelementptr inbounds ptr, ptr %92, i64 %indvars.iv.next1866
  %102 = load ptr, ptr %arrayidx.i842.1, align 8, !tbaa !219
  %m_x86.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %102, i64 0, i32 1
  %103 = load <2 x float>, ptr %m_x86.1, align 4, !tbaa !137
  %104 = fadd <2 x float> %100, %103
  %arrayidx10.i847.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %102, i64 0, i32 1, i32 0, i64 2
  %105 = load float, ptr %arrayidx10.i847.1, align 4, !tbaa !137
  %add13.i849.1 = fadd float %add13.i849, %105
  %c.sroa.19.8.vec.insert1691.1 = insertelement <2 x float> %c.sroa.19.21793, float %add13.i849.1, i64 0
  %indvars.iv.next1866.1 = add nuw nsw i64 %indvars.iv1865, 2
  %niter2087.next.1 = add i64 %niter2087, 2
  %niter2087.ncmp.1 = icmp eq i64 %niter2087.next.1, %unroll_iter2086
  br i1 %niter2087.ncmp.1, label %for.cond.cleanup.loopexit.unr-lcssa, label %for.body79

invoke.cont109:                                   ; preds = %for.cond.cleanup
  %arrayidx.i862 = getelementptr inbounds %class.btVector3, ptr %call.i.i.i.i793822, i64 %indvars.iv1868
  %conv108 = sitofp i32 %91 to float
  %div.i854 = fdiv float 1.000000e+00, %conv108
  %106 = load <2 x float>, ptr %arrayidx.i862, align 4, !tbaa !137
  %107 = insertelement <2 x float> poison, float %div.i854, i64 0
  %108 = shufflevector <2 x float> %107, <2 x float> poison, <2 x i32> zeroinitializer
  %109 = fmul <2 x float> %c.sroa.0.2.lcssa, %108
  %110 = fsub <2 x float> %109, %106
  %111 = fmul <2 x float> %87, %110
  %112 = fadd <2 x float> %106, %111
  %113 = fsub <2 x float> %112, %106
  %sub.i890 = extractelement <2 x float> %113, i64 0
  %114 = fsub <2 x float> %112, %106
  %arrayidx11.i880 = getelementptr inbounds [4 x float], ptr %arrayidx.i862, i64 0, i64 2
  %115 = load float, ptr %arrayidx11.i880, align 4, !tbaa !137
  %c.sroa.19.8.vec.extract1693 = extractelement <2 x float> %c.sroa.19.2.lcssa, i64 0
  %mul7.i.i859 = fmul float %c.sroa.19.8.vec.extract1693, %div.i854
  %sub14.i = fsub float %mul7.i.i859, %115
  %mul8.i = fmul float %sub, %sub14.i
  %add14.i = fadd float %115, %mul8.i
  %sub14.i896 = fsub float %add14.i, %115
  %retval.sroa.3.12.vec.insert.i884 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i, i64 0
  %116 = fmul <2 x float> %114, %114
  %mul8.i.i = extractelement <2 x float> %116, i64 1
  %117 = tail call float @llvm.fmuladd.f32(float %sub.i890, float %sub.i890, float %mul8.i.i)
  %118 = tail call float @llvm.fmuladd.f32(float %sub14.i896, float %sub14.i896, float %117)
  %cmp137 = fcmp ogt float %118, 0x3E80000000000000
  %119 = and i8 %changed.01801, 1
  %120 = zext i1 %cmp137 to i8
  %121 = or i8 %119, %120
  store <2 x float> %112, ptr %arrayidx.i862, align 4, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i884, ptr %arrayidx11.i880, align 4, !tbaa.struct !165
  %122 = load ptr, ptr %m_data.i829, align 8, !tbaa !123
  %arrayidx.i907 = getelementptr inbounds ptr, ptr %122, i64 %indvars.iv1868
  %123 = load ptr, ptr %arrayidx.i907, align 8, !tbaa !219
  %m_size.i.i908 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %123, i64 0, i32 2
  %124 = load i32, ptr %m_size.i.i908, align 4, !tbaa !319
  %cmp4.i910 = icmp slt i32 %124, 0
  br i1 %cmp4.i910, label %if.then5.i914, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE6resizeEiRKS2_.exit

if.then5.i914:                                    ; preds = %invoke.cont109
  %m_capacity.i.i.i912 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %123, i64 0, i32 3
  %125 = load i32, ptr %m_capacity.i.i.i912, align 8, !tbaa !342
  %cmp.i.i913 = icmp slt i32 %125, 0
  br i1 %cmp.i.i913, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i933, label %for.body10.lr.ph.i937

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i933: ; preds = %if.then5.i914
  %m_data.i9.i.i928 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %123, i64 0, i32 5
  %126 = load ptr, ptr %m_data.i9.i.i928, align 8, !tbaa !320
  %tobool.not.i10.i.i929 = icmp eq ptr %126, null
  %m_ownsMemory.i.i.i930 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %123, i64 0, i32 6
  %127 = load i8, ptr %m_ownsMemory.i.i.i930, align 8, !range !159
  %tobool2.not.i.i.i931 = icmp eq i8 %127, 0
  %or.cond.i.i932 = select i1 %tobool.not.i10.i.i929, i1 true, i1 %tobool2.not.i.i.i931
  br i1 %or.cond.i.i932, label %if.end.i935, label %if.then3.i.i.i934

if.then3.i.i.i934:                                ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i933
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %126)
          to label %if.end.i935 unwind label %ehcleanup449.thread1741

if.end.i935:                                      ; preds = %if.then3.i.i.i934, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i933
  store i8 1, ptr %m_ownsMemory.i.i.i930, align 8, !tbaa !341
  store ptr null, ptr %m_data.i9.i.i928, align 8, !tbaa !320
  store i32 0, ptr %m_capacity.i.i.i912, align 8, !tbaa !342
  br label %for.body10.lr.ph.i937

for.body10.lr.ph.i937:                            ; preds = %if.end.i935, %if.then5.i914
  %m_data11.i936 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %123, i64 0, i32 5
  %128 = sext i32 %124 to i64
  %129 = sub nsw i64 0, %128
  %xtraiter2088 = and i64 %129, 3
  %lcmp.mod2089.not = icmp eq i64 %xtraiter2088, 0
  br i1 %lcmp.mod2089.not, label %for.body10.i942.prol.loopexit, label %for.body10.i942.prol

for.body10.i942.prol:                             ; preds = %for.body10.lr.ph.i937, %for.body10.i942.prol
  %indvars.iv.i938.prol = phi i64 [ %indvars.iv.next.i940.prol, %for.body10.i942.prol ], [ %128, %for.body10.lr.ph.i937 ]
  %prol.iter2090 = phi i64 [ %prol.iter2090.next, %for.body10.i942.prol ], [ 0, %for.body10.lr.ph.i937 ]
  %130 = load ptr, ptr %m_data11.i936, align 8, !tbaa !320
  %arrayidx13.i939.prol = getelementptr inbounds ptr, ptr %130, i64 %indvars.iv.i938.prol
  store ptr null, ptr %arrayidx13.i939.prol, align 8, !tbaa !219
  %indvars.iv.next.i940.prol = add nsw i64 %indvars.iv.i938.prol, 1
  %prol.iter2090.next = add i64 %prol.iter2090, 1
  %prol.iter2090.cmp.not = icmp eq i64 %prol.iter2090.next, %xtraiter2088
  br i1 %prol.iter2090.cmp.not, label %for.body10.i942.prol.loopexit, label %for.body10.i942.prol, !llvm.loop !349

for.body10.i942.prol.loopexit:                    ; preds = %for.body10.i942.prol, %for.body10.lr.ph.i937
  %indvars.iv.i938.unr = phi i64 [ %128, %for.body10.lr.ph.i937 ], [ %indvars.iv.next.i940.prol, %for.body10.i942.prol ]
  %131 = icmp ugt i32 %124, -4
  br i1 %131, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE6resizeEiRKS2_.exit, label %for.body10.i942

for.body10.i942:                                  ; preds = %for.body10.i942.prol.loopexit, %for.body10.i942
  %indvars.iv.i938 = phi i64 [ %indvars.iv.next.i940.3, %for.body10.i942 ], [ %indvars.iv.i938.unr, %for.body10.i942.prol.loopexit ]
  %132 = load ptr, ptr %m_data11.i936, align 8, !tbaa !320
  %arrayidx13.i939 = getelementptr inbounds ptr, ptr %132, i64 %indvars.iv.i938
  store ptr null, ptr %arrayidx13.i939, align 8, !tbaa !219
  %indvars.iv.next.i940 = add nsw i64 %indvars.iv.i938, 1
  %133 = load ptr, ptr %m_data11.i936, align 8, !tbaa !320
  %arrayidx13.i939.1 = getelementptr inbounds ptr, ptr %133, i64 %indvars.iv.next.i940
  store ptr null, ptr %arrayidx13.i939.1, align 8, !tbaa !219
  %indvars.iv.next.i940.1 = add nsw i64 %indvars.iv.i938, 2
  %134 = load ptr, ptr %m_data11.i936, align 8, !tbaa !320
  %arrayidx13.i939.2 = getelementptr inbounds ptr, ptr %134, i64 %indvars.iv.next.i940.1
  store ptr null, ptr %arrayidx13.i939.2, align 8, !tbaa !219
  %indvars.iv.next.i940.2 = add nsw i64 %indvars.iv.i938, 3
  %135 = load ptr, ptr %m_data11.i936, align 8, !tbaa !320
  %arrayidx13.i939.3 = getelementptr inbounds ptr, ptr %135, i64 %indvars.iv.next.i940.2
  store ptr null, ptr %arrayidx13.i939.3, align 8, !tbaa !219
  %indvars.iv.next.i940.3 = add nsw i64 %indvars.iv.i938, 4
  %exitcond.not.i941.3 = icmp eq i64 %indvars.iv.next.i940.3, 0
  br i1 %exitcond.not.i941.3, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE6resizeEiRKS2_.exit, label %for.body10.i942

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE6resizeEiRKS2_.exit: ; preds = %for.body10.i942.prol.loopexit, %for.body10.i942, %invoke.cont109
  store i32 0, ptr %m_size.i.i908, align 4, !tbaa !319
  br label %if.end

ehcleanup449.thread1741:                          ; preds = %if.then3.i.i.i934
  %136 = landingpad { ptr, i32 }
          cleanup
  %exn.slot.61743 = extractvalue { ptr, i32 } %136, 0
  %ehselector.slot.61744 = extractvalue { ptr, i32 } %136, 1
  br label %if.then3.i.i.i1344

if.end:                                           ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE6resizeEiRKS2_.exit, %for.cond.cleanup
  %changed.1 = phi i8 [ %121, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE6resizeEiRKS2_.exit ], [ %changed.01801, %for.cond.cleanup ]
  %indvars.iv.next1869 = add nuw nsw i64 %indvars.iv1868, 1
  %exitcond1871.not = icmp eq i64 %indvars.iv.next1869, %conv.i.i.i.i791
  br i1 %exitcond1871.not, label %for.cond157.preheader, label %for.cond70.preheader

for.body163:                                      ; preds = %for.cond157.preheader, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1001
  %137 = phi i32 [ %166, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1001 ], [ %88, %for.cond157.preheader ]
  %indvars.iv1877 = phi i64 [ %indvars.iv.next1878, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1001 ], [ 0, %for.cond157.preheader ]
  %138 = load ptr, ptr %m_data.i945, align 8, !tbaa !87
  %m_x168 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 %indvars.iv1877, i32 1
  %139 = load <2 x float>, ptr %m_x168, align 8
  %nx.sroa.8.0.m_x168.sroa_idx = getelementptr inbounds i8, ptr %m_x168, i64 8
  %nx.sroa.8.0.copyload = load float, ptr %nx.sroa.8.0.m_x168.sroa_idx, align 8, !tbaa.struct !165
  br i1 %cmp1761803, label %for.body178.preheader, label %for.cond.cleanup177

for.body178.preheader:                            ; preds = %for.body163
  %140 = load float, ptr %call.i.i.i.i793822, align 4, !tbaa !137
  %141 = extractelement <2 x float> %139, i64 0
  %sub.i.i = fsub float %140, %141
  %142 = tail call float @llvm.fabs.f32(float %sub.i.i)
  %143 = load float, ptr %arrayidx5.i.i949, align 4, !tbaa !137
  %144 = extractelement <2 x float> %139, i64 1
  %sub8.i.i = fsub float %143, %144
  %145 = tail call float @llvm.fabs.f32(float %sub8.i.i)
  %add.i950 = fadd float %142, %145
  %146 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %146, %nx.sroa.8.0.copyload
  %147 = tail call float @llvm.fabs.f32(float %sub14.i.i)
  %add9.i = fadd float %add.i950, %147
  br label %for.body178

for.cond.cleanup177:                              ; preds = %for.body178, %for.body163
  %kbest.0.lcssa = phi i32 [ 0, %for.body163 ], [ %kbest.1, %for.body178 ]
  %148 = load ptr, ptr %m_data.i829, align 8, !tbaa !123
  %idxprom.i952 = sext i32 %kbest.0.lcssa to i64
  %arrayidx.i953 = getelementptr inbounds ptr, ptr %148, i64 %idxprom.i952
  %149 = load ptr, ptr %arrayidx.i953, align 8, !tbaa !219
  %arrayidx.i956 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 %indvars.iv1877
  %m_size.i.i957 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %149, i64 0, i32 2
  %150 = load i32, ptr %m_size.i.i957, align 4, !tbaa !319
  %m_capacity.i.i958 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %149, i64 0, i32 3
  %151 = load i32, ptr %m_capacity.i.i958, align 8, !tbaa !342
  %cmp.i959 = icmp eq i32 %150, %151
  br i1 %cmp.i959, label %if.then.i964, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1001

if.then.i964:                                     ; preds = %for.cond.cleanup177
  %tobool.not.i.i960 = icmp eq i32 %150, 0
  %mul.i.i961 = shl nsw i32 %150, 1
  %cond.i.i962 = select i1 %tobool.not.i.i960, i32 1, i32 %mul.i.i961
  %cmp.i.i963 = icmp slt i32 %150, %cond.i.i962
  br i1 %cmp.i.i963, label %if.then.i.i966, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1001

if.then.i.i966:                                   ; preds = %if.then.i964
  %tobool.not.i.i.i965 = icmp eq i32 %cond.i.i962, 0
  br i1 %tobool.not.i.i.i965, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i974, label %if.then.i.i.i971

if.then.i.i.i971:                                 ; preds = %if.then.i.i966
  %conv.i.i.i.i967 = sext i32 %cond.i.i962 to i64
  %mul.i.i.i.i968 = shl nsw i64 %conv.i.i.i.i967, 3
  %call.i.i.i.i969999 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i968, i32 noundef 16)
          to label %call.i.i.i.i969.noexc unwind label %lpad198

call.i.i.i.i969.noexc:                            ; preds = %if.then.i.i.i971
  %.pre.i970 = load i32, ptr %m_size.i.i957, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i974

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i974: ; preds = %call.i.i.i.i969.noexc, %if.then.i.i966
  %152 = phi i32 [ %.pre.i970, %call.i.i.i.i969.noexc ], [ %150, %if.then.i.i966 ]
  %retval.0.i.i.i972 = phi ptr [ %call.i.i.i.i969999, %call.i.i.i.i969.noexc ], [ null, %if.then.i.i966 ]
  %cmp7.i.i.i973 = icmp sgt i32 %152, 0
  br i1 %cmp7.i.i.i973, label %for.body.lr.ph.i.i.i977, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i989

for.body.lr.ph.i.i.i977:                          ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i974
  %m_data.i.i.i975 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %149, i64 0, i32 5
  %wide.trip.count.i.i.i976 = zext i32 %152 to i64
  %xtraiter2091 = and i64 %wide.trip.count.i.i.i976, 3
  %153 = icmp ult i32 %152, 4
  br i1 %153, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i989.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i977.new

for.body.lr.ph.i.i.i977.new:                      ; preds = %for.body.lr.ph.i.i.i977
  %unroll_iter2094 = and i64 %wide.trip.count.i.i.i976, 4294967292
  br label %for.body.i.i.i983

for.body.i.i.i983:                                ; preds = %for.body.i.i.i983, %for.body.lr.ph.i.i.i977.new
  %indvars.iv.i.i.i978 = phi i64 [ 0, %for.body.lr.ph.i.i.i977.new ], [ %indvars.iv.next.i.i.i981.3, %for.body.i.i.i983 ]
  %niter2095 = phi i64 [ 0, %for.body.lr.ph.i.i.i977.new ], [ %niter2095.next.3, %for.body.i.i.i983 ]
  %arrayidx.i.i.i979 = getelementptr inbounds ptr, ptr %retval.0.i.i.i972, i64 %indvars.iv.i.i.i978
  %154 = load ptr, ptr %m_data.i.i.i975, align 8, !tbaa !320
  %arrayidx3.i.i.i980 = getelementptr inbounds ptr, ptr %154, i64 %indvars.iv.i.i.i978
  %155 = load ptr, ptr %arrayidx3.i.i.i980, align 8, !tbaa !219
  store ptr %155, ptr %arrayidx.i.i.i979, align 8, !tbaa !219
  %indvars.iv.next.i.i.i981 = or i64 %indvars.iv.i.i.i978, 1
  %arrayidx.i.i.i979.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i972, i64 %indvars.iv.next.i.i.i981
  %156 = load ptr, ptr %m_data.i.i.i975, align 8, !tbaa !320
  %arrayidx3.i.i.i980.1 = getelementptr inbounds ptr, ptr %156, i64 %indvars.iv.next.i.i.i981
  %157 = load ptr, ptr %arrayidx3.i.i.i980.1, align 8, !tbaa !219
  store ptr %157, ptr %arrayidx.i.i.i979.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i981.1 = or i64 %indvars.iv.i.i.i978, 2
  %arrayidx.i.i.i979.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i972, i64 %indvars.iv.next.i.i.i981.1
  %158 = load ptr, ptr %m_data.i.i.i975, align 8, !tbaa !320
  %arrayidx3.i.i.i980.2 = getelementptr inbounds ptr, ptr %158, i64 %indvars.iv.next.i.i.i981.1
  %159 = load ptr, ptr %arrayidx3.i.i.i980.2, align 8, !tbaa !219
  store ptr %159, ptr %arrayidx.i.i.i979.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i981.2 = or i64 %indvars.iv.i.i.i978, 3
  %arrayidx.i.i.i979.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i972, i64 %indvars.iv.next.i.i.i981.2
  %160 = load ptr, ptr %m_data.i.i.i975, align 8, !tbaa !320
  %arrayidx3.i.i.i980.3 = getelementptr inbounds ptr, ptr %160, i64 %indvars.iv.next.i.i.i981.2
  %161 = load ptr, ptr %arrayidx3.i.i.i980.3, align 8, !tbaa !219
  store ptr %161, ptr %arrayidx.i.i.i979.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i981.3 = add nuw nsw i64 %indvars.iv.i.i.i978, 4
  %niter2095.next.3 = add i64 %niter2095, 4
  %niter2095.ncmp.3 = icmp eq i64 %niter2095.next.3, %unroll_iter2094
  br i1 %niter2095.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i989.loopexit.unr-lcssa, label %for.body.i.i.i983

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i989.loopexit.unr-lcssa: ; preds = %for.body.i.i.i983, %for.body.lr.ph.i.i.i977
  %indvars.iv.i.i.i978.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i977 ], [ %indvars.iv.next.i.i.i981.3, %for.body.i.i.i983 ]
  %lcmp.mod2093.not = icmp eq i64 %xtraiter2091, 0
  br i1 %lcmp.mod2093.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i989, label %for.body.i.i.i983.epil

for.body.i.i.i983.epil:                           ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i989.loopexit.unr-lcssa, %for.body.i.i.i983.epil
  %indvars.iv.i.i.i978.epil = phi i64 [ %indvars.iv.next.i.i.i981.epil, %for.body.i.i.i983.epil ], [ %indvars.iv.i.i.i978.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i989.loopexit.unr-lcssa ]
  %epil.iter2092 = phi i64 [ %epil.iter2092.next, %for.body.i.i.i983.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i989.loopexit.unr-lcssa ]
  %arrayidx.i.i.i979.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i972, i64 %indvars.iv.i.i.i978.epil
  %162 = load ptr, ptr %m_data.i.i.i975, align 8, !tbaa !320
  %arrayidx3.i.i.i980.epil = getelementptr inbounds ptr, ptr %162, i64 %indvars.iv.i.i.i978.epil
  %163 = load ptr, ptr %arrayidx3.i.i.i980.epil, align 8, !tbaa !219
  store ptr %163, ptr %arrayidx.i.i.i979.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i981.epil = add nuw nsw i64 %indvars.iv.i.i.i978.epil, 1
  %epil.iter2092.next = add i64 %epil.iter2092, 1
  %epil.iter2092.cmp.not = icmp eq i64 %epil.iter2092.next, %xtraiter2091
  br i1 %epil.iter2092.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i989, label %for.body.i.i.i983.epil, !llvm.loop !350

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i989: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i989.loopexit.unr-lcssa, %for.body.i.i.i983.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i974
  %m_data.i9.i.i984 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %149, i64 0, i32 5
  %164 = load ptr, ptr %m_data.i9.i.i984, align 8, !tbaa !320
  %tobool.not.i10.i.i985 = icmp eq ptr %164, null
  %m_ownsMemory.i.i.i986 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %149, i64 0, i32 6
  %165 = load i8, ptr %m_ownsMemory.i.i.i986, align 8, !range !159
  %tobool2.not.i.i.i987 = icmp eq i8 %165, 0
  %or.cond.i.i988 = select i1 %tobool.not.i10.i.i985, i1 true, i1 %tobool2.not.i.i.i987
  br i1 %or.cond.i.i988, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i993, label %if.then3.i.i.i991

if.then3.i.i.i991:                                ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i989
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %164)
          to label %.noexc1000 unwind label %lpad198

.noexc1000:                                       ; preds = %if.then3.i.i.i991
  %.pre7.pre.i990 = load i32, ptr %m_size.i.i957, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i993

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i993: ; preds = %.noexc1000, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i989
  %.pre7.i992 = phi i32 [ %.pre7.pre.i990, %.noexc1000 ], [ %152, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i989 ]
  store i8 1, ptr %m_ownsMemory.i.i.i986, align 8, !tbaa !341
  store ptr %retval.0.i.i.i972, ptr %m_data.i9.i.i984, align 8, !tbaa !320
  store i32 %cond.i.i962, ptr %m_capacity.i.i958, align 8, !tbaa !342
  %.pre1919 = load i32, ptr %m_size.i, align 4, !tbaa !88
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1001

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1001: ; preds = %for.cond.cleanup177, %if.then.i964, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i993
  %166 = phi i32 [ %.pre1919, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i993 ], [ %137, %if.then.i964 ], [ %137, %for.cond.cleanup177 ]
  %167 = phi i32 [ %.pre7.i992, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i993 ], [ %150, %if.then.i964 ], [ %150, %for.cond.cleanup177 ]
  %m_data.i994 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %149, i64 0, i32 5
  %168 = load ptr, ptr %m_data.i994, align 8, !tbaa !320
  %idxprom.i995 = sext i32 %167 to i64
  %arrayidx.i996 = getelementptr inbounds ptr, ptr %168, i64 %idxprom.i995
  store ptr %arrayidx.i956, ptr %arrayidx.i996, align 8, !tbaa !219
  %inc.i997 = add nsw i32 %167, 1
  store i32 %inc.i997, ptr %m_size.i.i957, align 4, !tbaa !319
  %indvars.iv.next1878 = add nuw nsw i64 %indvars.iv1877, 1
  %169 = sext i32 %166 to i64
  %cmp162 = icmp slt i64 %indvars.iv.next1878, %169
  br i1 %cmp162, label %for.body163, label %for.end208

for.body178:                                      ; preds = %for.body178.preheader, %for.body178
  %indvars.iv1872 = phi i64 [ 1, %for.body178.preheader ], [ %indvars.iv.next1873, %for.body178 ]
  %kdist.01805 = phi float [ %add9.i, %for.body178.preheader ], [ %kdist.1, %for.body178 ]
  %kbest.01804 = phi i32 [ 0, %for.body178.preheader ], [ %kbest.1, %for.body178 ]
  %arrayidx.i1004 = getelementptr inbounds %class.btVector3, ptr %call.i.i.i.i793822, i64 %indvars.iv1872
  %arrayidx11.i.i1009 = getelementptr inbounds [4 x float], ptr %arrayidx.i1004, i64 0, i64 2
  %170 = load float, ptr %arrayidx11.i.i1009, align 4, !tbaa !137
  %sub14.i.i1011 = fsub float %170, %nx.sroa.8.0.copyload
  %171 = load <2 x float>, ptr %arrayidx.i1004, align 4, !tbaa !137
  %172 = fsub <2 x float> %171, %139
  %173 = tail call <2 x float> @llvm.fabs.v2f32(<2 x float> %172)
  %shift = shufflevector <2 x float> %173, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %174 = fadd <2 x float> %173, %shift
  %add.i1012 = extractelement <2 x float> %174, i64 0
  %175 = tail call float @llvm.fabs.f32(float %sub14.i.i1011)
  %add9.i1013 = fadd float %add.i1012, %175
  %cmp184 = fcmp olt float %add9.i1013, %kdist.01805
  %176 = trunc i64 %indvars.iv1872 to i32
  %kbest.1 = select i1 %cmp184, i32 %176, i32 %kbest.01804
  %kdist.1 = select i1 %cmp184, float %add9.i1013, float %kdist.01805
  %indvars.iv.next1873 = add nuw nsw i64 %indvars.iv1872, 1
  %exitcond1876.not = icmp eq i64 %indvars.iv.next1873, %conv.i.i.i.i791
  br i1 %exitcond1876.not, label %for.cond.cleanup177, label %for.body178

lpad198:                                          ; preds = %if.then3.i.i.i991, %if.then.i.i.i971
  %177 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup449

for.end208:                                       ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1001, %for.cond157.preheader
  %.lcssa1761 = phi i32 [ %88, %for.cond157.preheader ], [ %166, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1001 ]
  %178 = and i8 %changed.1, 1
  %tobool211 = icmp ne i8 %178, 0
  %cmp212 = icmp slt i32 %inc60, %maxiterations
  %179 = select i1 %tobool211, i1 %cmp212, i1 false
  br i1 %179, label %for.cond70.preheader.preheader, label %invoke.cont214

invoke.cont214:                                   ; preds = %for.end208
  %or.cond = icmp slt i32 %.lcssa1761, 1
  br i1 %or.cond, label %invoke.cont221, label %if.then.i.i.i1032

if.then.i.i.i1032:                                ; preds = %invoke.cont214
  %conv.i.i.i.i1028 = zext i32 %.lcssa1761 to i64
  %mul.i.i.i.i1029 = shl nuw nsw i64 %conv.i.i.i.i1028, 2
  %call.i.i.i.i10301058 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1029, i32 noundef 16)
          to label %for.body10.lr.ph.i1052 unwind label %ehcleanup443.thread

for.body10.lr.ph.i1052:                           ; preds = %if.then.i.i.i1032
  tail call void @llvm.memset.p0.i64(ptr align 4 %call.i.i.i.i10301058, i8 -1, i64 %mul.i.i.i.i1029, i1 false), !tbaa !140
  br label %invoke.cont221

invoke.cont221:                                   ; preds = %for.body10.lr.ph.i1052, %invoke.cont214
  %cids.sroa.151655.1 = phi ptr [ null, %invoke.cont214 ], [ %call.i.i.i.i10301058, %for.body10.lr.ph.i1052 ]
  %180 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp2271813 = icmp sgt i32 %180, 0
  br i1 %cmp2271813, label %for.cond230.preheader.lr.ph, label %for.cond260.preheader

for.cond230.preheader.lr.ph:                      ; preds = %invoke.cont221
  %181 = load ptr, ptr %m_data.i829, align 8, !tbaa !123
  %182 = load ptr, ptr %m_data.i945, align 8
  %sub.ptr.rhs.cast = ptrtoint ptr %182 to i64
  br label %for.cond230.preheader

for.cond230.preheader:                            ; preds = %for.cond230.preheader.lr.ph, %for.cond.cleanup239
  %183 = phi i32 [ %180, %for.cond230.preheader.lr.ph ], [ %190, %for.cond.cleanup239 ]
  %indvars.iv1883 = phi i64 [ 0, %for.cond230.preheader.lr.ph ], [ %indvars.iv.next1884, %for.cond.cleanup239 ]
  %arrayidx.i1063 = getelementptr inbounds ptr, ptr %181, i64 %indvars.iv1883
  %184 = load ptr, ptr %arrayidx.i1063, align 8, !tbaa !219
  %m_size.i1064 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %184, i64 0, i32 2
  %185 = load i32, ptr %m_size.i1064, align 4, !tbaa !319
  %cmp2381811 = icmp sgt i32 %185, 0
  br i1 %cmp2381811, label %for.body240.lr.ph, label %for.cond.cleanup239

for.body240.lr.ph:                                ; preds = %for.cond230.preheader
  %m_data.i1068 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %184, i64 0, i32 5
  %186 = load ptr, ptr %m_data.i1068, align 8, !tbaa !320
  %187 = trunc i64 %indvars.iv1883 to i32
  br label %for.body240

for.cond260.preheader:                            ; preds = %for.cond.cleanup239, %invoke.cont221
  %188 = phi i32 [ %180, %invoke.cont221 ], [ %190, %for.cond.cleanup239 ]
  %m_size.i1075 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %189 = load i32, ptr %m_size.i1075, align 4, !tbaa !96
  %cmp2631817 = icmp sgt i32 %189, 0
  br i1 %cmp2631817, label %for.body264.lr.ph, label %for.end371

for.body264.lr.ph:                                ; preds = %for.cond260.preheader
  %m_data.i1076 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %arrayinit.element = getelementptr inbounds i32, ptr %idx, i64 1
  %arrayinit.element290 = getelementptr inbounds i32, ptr %idx, i64 2
  br label %for.body264

for.cond.cleanup239.loopexit:                     ; preds = %for.body240
  %.pre1920 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  br label %for.cond.cleanup239

for.cond.cleanup239:                              ; preds = %for.cond.cleanup239.loopexit, %for.cond230.preheader
  %190 = phi i32 [ %.pre1920, %for.cond.cleanup239.loopexit ], [ %183, %for.cond230.preheader ]
  %indvars.iv.next1884 = add nuw nsw i64 %indvars.iv1883, 1
  %191 = sext i32 %190 to i64
  %cmp227 = icmp slt i64 %indvars.iv.next1884, %191
  br i1 %cmp227, label %for.cond230.preheader, label %for.cond260.preheader

lpad213:                                          ; preds = %if.then3.i.i.i1318
  %192 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup449

lpad216:                                          ; preds = %.noexc1311, %if.end.i1299, %if.then.i1298
  %193 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup443

ehcleanup443.thread:                              ; preds = %if.then.i.i.i1032
  %194 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup449

for.body240:                                      ; preds = %for.body240.lr.ph, %for.body240
  %indvars.iv1880 = phi i64 [ 0, %for.body240.lr.ph ], [ %indvars.iv.next1881, %for.body240 ]
  %arrayidx.i1070 = getelementptr inbounds ptr, ptr %186, i64 %indvars.iv1880
  %195 = load ptr, ptr %arrayidx.i1070, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %195 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 120
  %sext = shl i64 %sub.ptr.div, 32
  %idxprom.i1073 = ashr exact i64 %sext, 32
  %arrayidx.i1074 = getelementptr inbounds i32, ptr %cids.sroa.151655.1, i64 %idxprom.i1073
  store i32 %187, ptr %arrayidx.i1074, align 4, !tbaa !140
  %indvars.iv.next1881 = add nuw nsw i64 %indvars.iv1880, 1
  %196 = load i32, ptr %m_size.i1064, align 4, !tbaa !319
  %197 = sext i32 %196 to i64
  %cmp238 = icmp slt i64 %indvars.iv.next1881, %197
  br i1 %cmp238, label %for.body240, label %for.cond.cleanup239.loopexit

for.body264:                                      ; preds = %for.body264.lr.ph, %for.cond.cleanup307
  %indvars.iv1892 = phi i64 [ 0, %for.body264.lr.ph ], [ %indvars.iv.next1893, %for.cond.cleanup307 ]
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %idx) #38
  %198 = load ptr, ptr %m_data.i1076, align 8, !tbaa !95
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %198, i64 %indvars.iv1892, i32 1
  %199 = load ptr, ptr %m_n, align 8, !tbaa !219
  %200 = load ptr, ptr %m_data.i945, align 8, !tbaa !87
  %sub.ptr.lhs.cast272 = ptrtoint ptr %199 to i64
  %sub.ptr.rhs.cast273 = ptrtoint ptr %200 to i64
  %sub.ptr.sub274 = sub i64 %sub.ptr.lhs.cast272, %sub.ptr.rhs.cast273
  %sub.ptr.div275 = sdiv exact i64 %sub.ptr.sub274, 120
  %conv276 = trunc i64 %sub.ptr.div275 to i32
  store i32 %conv276, ptr %idx, align 4, !tbaa !140
  %arrayidx281 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %198, i64 %indvars.iv1892, i32 1, i64 1
  %201 = load ptr, ptr %arrayidx281, align 8, !tbaa !219
  %sub.ptr.lhs.cast285 = ptrtoint ptr %201 to i64
  %sub.ptr.sub287 = sub i64 %sub.ptr.lhs.cast285, %sub.ptr.rhs.cast273
  %sub.ptr.div288 = sdiv exact i64 %sub.ptr.sub287, 120
  %conv289 = trunc i64 %sub.ptr.div288 to i32
  store i32 %conv289, ptr %arrayinit.element, align 4, !tbaa !140
  %arrayidx295 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %198, i64 %indvars.iv1892, i32 1, i64 2
  %202 = load ptr, ptr %arrayidx295, align 8, !tbaa !219
  %sub.ptr.lhs.cast299 = ptrtoint ptr %202 to i64
  %sub.ptr.sub301 = sub i64 %sub.ptr.lhs.cast299, %sub.ptr.rhs.cast273
  %sub.ptr.div302 = sdiv exact i64 %sub.ptr.sub301, 120
  %conv303 = trunc i64 %sub.ptr.div302 to i32
  store i32 %conv303, ptr %arrayinit.element290, align 4, !tbaa !140
  br label %for.body308

for.cond.cleanup307:                              ; preds = %if.end357.1
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %idx) #38
  %indvars.iv.next1893 = add nuw nsw i64 %indvars.iv1892, 1
  %203 = load i32, ptr %m_size.i1075, align 4, !tbaa !96
  %204 = sext i32 %203 to i64
  %cmp263 = icmp slt i64 %indvars.iv.next1893, %204
  br i1 %cmp263, label %for.body264, label %for.end371.loopexit

for.body308:                                      ; preds = %for.body264, %if.end357.1
  %indvars.iv1887 = phi i64 [ 0, %for.body264 ], [ %indvars.iv.next1888, %if.end357.1 ]
  %arrayidx309 = getelementptr inbounds [3 x i32], ptr %idx, i64 0, i64 %indvars.iv1887
  %205 = load i32, ptr %arrayidx309, align 4, !tbaa !140
  %idxprom.i1089 = sext i32 %205 to i64
  %arrayidx.i1090 = getelementptr inbounds i32, ptr %cids.sroa.151655.1, i64 %idxprom.i1089
  %206 = load i32, ptr %arrayidx.i1090, align 4, !tbaa !140
  %idxprom.i1095 = sext i32 %206 to i64
  %indvars.iv.next1888 = add nuw nsw i64 %indvars.iv1887, 1
  %207 = icmp eq i64 %indvars.iv.next1888, 3
  %208 = and i64 %indvars.iv.next1888, 4294967295
  %idxprom318 = select i1 %207, i64 0, i64 %208
  %arrayidx319 = getelementptr inbounds [3 x i32], ptr %idx, i64 0, i64 %idxprom318
  %209 = load i32, ptr %arrayidx319, align 4, !tbaa !140
  %idxprom.i1092 = sext i32 %209 to i64
  %arrayidx.i1093 = getelementptr inbounds i32, ptr %cids.sroa.151655.1, i64 %idxprom.i1092
  %210 = load i32, ptr %arrayidx.i1093, align 4, !tbaa !140
  %cmp323.not = icmp eq i32 %210, %206
  br i1 %cmp323.not, label %if.end357, label %if.then324

if.then324:                                       ; preds = %for.body308
  %211 = load ptr, ptr %m_data.i829, align 8, !tbaa !123
  %arrayidx.i1096 = getelementptr inbounds ptr, ptr %211, i64 %idxprom.i1095
  %212 = load ptr, ptr %arrayidx.i1096, align 8, !tbaa !219
  %213 = load ptr, ptr %m_data.i945, align 8, !tbaa !87
  %arrayidx.i1099 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %213, i64 %idxprom.i1092
  %m_size.i.i1100 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %212, i64 0, i32 2
  %214 = load i32, ptr %m_size.i.i1100, align 4, !tbaa !319
  %cmp8.i = icmp sgt i32 %214, 0
  br i1 %cmp8.i, label %for.body.lr.ph.i, label %if.then344

for.body.lr.ph.i:                                 ; preds = %if.then324
  %m_data.i1101 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %212, i64 0, i32 5
  %215 = load ptr, ptr %m_data.i1101, align 8, !tbaa !320
  %wide.trip.count.i1102 = zext i32 %214 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.body.lr.ph.i
  %indvars.iv.i1103 = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i1106, %for.inc.i ]
  %arrayidx.i1104 = getelementptr inbounds ptr, ptr %215, i64 %indvars.iv.i1103
  %216 = load ptr, ptr %arrayidx.i1104, align 8, !tbaa !219
  %cmp3.i1105 = icmp eq ptr %216, %arrayidx.i1099
  br i1 %cmp3.i1105, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE16findLinearSearchERKS2_.exit, label %for.inc.i

for.inc.i:                                        ; preds = %for.body.i
  %indvars.iv.next.i1106 = add nuw nsw i64 %indvars.iv.i1103, 1
  %exitcond.not.i1107 = icmp eq i64 %indvars.iv.next.i1106, %wide.trip.count.i1102
  br i1 %exitcond.not.i1107, label %if.then344, label %for.body.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE16findLinearSearchERKS2_.exit: ; preds = %for.body.i
  %217 = trunc i64 %indvars.iv.i1103 to i32
  %cmp342 = icmp eq i32 %214, %217
  br i1 %cmp342, label %if.then344, label %if.end357

if.then344:                                       ; preds = %for.inc.i, %if.then324, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE16findLinearSearchERKS2_.exit
  %m_capacity.i.i1119 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %212, i64 0, i32 3
  %218 = load i32, ptr %m_capacity.i.i1119, align 8, !tbaa !342
  %cmp.i1120 = icmp eq i32 %214, %218
  br i1 %cmp.i1120, label %if.then.i1125, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1162

if.then.i1125:                                    ; preds = %if.then344
  %tobool.not.i.i1121 = icmp eq i32 %214, 0
  %mul.i.i1122 = shl nsw i32 %214, 1
  %cond.i.i1123 = select i1 %tobool.not.i.i1121, i32 1, i32 %mul.i.i1122
  %cmp.i.i1124 = icmp slt i32 %214, %cond.i.i1123
  br i1 %cmp.i.i1124, label %if.then.i.i1127, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1162

if.then.i.i1127:                                  ; preds = %if.then.i1125
  %tobool.not.i.i.i1126 = icmp eq i32 %cond.i.i1123, 0
  br i1 %tobool.not.i.i.i1126, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1135, label %if.then.i.i.i1132

if.then.i.i.i1132:                                ; preds = %if.then.i.i1127
  %conv.i.i.i.i1128 = sext i32 %cond.i.i1123 to i64
  %mul.i.i.i.i1129 = shl nsw i64 %conv.i.i.i.i1128, 3
  %call.i.i.i.i11301160 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1129, i32 noundef 16)
          to label %call.i.i.i.i1130.noexc unwind label %lpad351

call.i.i.i.i1130.noexc:                           ; preds = %if.then.i.i.i1132
  %.pre.i1131 = load i32, ptr %m_size.i.i1100, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1135

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1135: ; preds = %call.i.i.i.i1130.noexc, %if.then.i.i1127
  %219 = phi i32 [ %.pre.i1131, %call.i.i.i.i1130.noexc ], [ %214, %if.then.i.i1127 ]
  %retval.0.i.i.i1133 = phi ptr [ %call.i.i.i.i11301160, %call.i.i.i.i1130.noexc ], [ null, %if.then.i.i1127 ]
  %cmp7.i.i.i1134 = icmp sgt i32 %219, 0
  br i1 %cmp7.i.i.i1134, label %for.body.lr.ph.i.i.i1138, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150

for.body.lr.ph.i.i.i1138:                         ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1135
  %m_data.i.i.i1136 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %212, i64 0, i32 5
  %wide.trip.count.i.i.i1137 = zext i32 %219 to i64
  %xtraiter2096 = and i64 %wide.trip.count.i.i.i1137, 3
  %220 = icmp ult i32 %219, 4
  br i1 %220, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1138.new

for.body.lr.ph.i.i.i1138.new:                     ; preds = %for.body.lr.ph.i.i.i1138
  %unroll_iter2099 = and i64 %wide.trip.count.i.i.i1137, 4294967292
  br label %for.body.i.i.i1144

for.body.i.i.i1144:                               ; preds = %for.body.i.i.i1144, %for.body.lr.ph.i.i.i1138.new
  %indvars.iv.i.i.i1139 = phi i64 [ 0, %for.body.lr.ph.i.i.i1138.new ], [ %indvars.iv.next.i.i.i1142.3, %for.body.i.i.i1144 ]
  %niter2100 = phi i64 [ 0, %for.body.lr.ph.i.i.i1138.new ], [ %niter2100.next.3, %for.body.i.i.i1144 ]
  %arrayidx.i.i.i1140 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1133, i64 %indvars.iv.i.i.i1139
  %221 = load ptr, ptr %m_data.i.i.i1136, align 8, !tbaa !320
  %arrayidx3.i.i.i1141 = getelementptr inbounds ptr, ptr %221, i64 %indvars.iv.i.i.i1139
  %222 = load ptr, ptr %arrayidx3.i.i.i1141, align 8, !tbaa !219
  store ptr %222, ptr %arrayidx.i.i.i1140, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1142 = or i64 %indvars.iv.i.i.i1139, 1
  %arrayidx.i.i.i1140.12102 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1133, i64 %indvars.iv.next.i.i.i1142
  %223 = load ptr, ptr %m_data.i.i.i1136, align 8, !tbaa !320
  %arrayidx3.i.i.i1141.12103 = getelementptr inbounds ptr, ptr %223, i64 %indvars.iv.next.i.i.i1142
  %224 = load ptr, ptr %arrayidx3.i.i.i1141.12103, align 8, !tbaa !219
  store ptr %224, ptr %arrayidx.i.i.i1140.12102, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1142.12104 = or i64 %indvars.iv.i.i.i1139, 2
  %arrayidx.i.i.i1140.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1133, i64 %indvars.iv.next.i.i.i1142.12104
  %225 = load ptr, ptr %m_data.i.i.i1136, align 8, !tbaa !320
  %arrayidx3.i.i.i1141.2 = getelementptr inbounds ptr, ptr %225, i64 %indvars.iv.next.i.i.i1142.12104
  %226 = load ptr, ptr %arrayidx3.i.i.i1141.2, align 8, !tbaa !219
  store ptr %226, ptr %arrayidx.i.i.i1140.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1142.2 = or i64 %indvars.iv.i.i.i1139, 3
  %arrayidx.i.i.i1140.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1133, i64 %indvars.iv.next.i.i.i1142.2
  %227 = load ptr, ptr %m_data.i.i.i1136, align 8, !tbaa !320
  %arrayidx3.i.i.i1141.3 = getelementptr inbounds ptr, ptr %227, i64 %indvars.iv.next.i.i.i1142.2
  %228 = load ptr, ptr %arrayidx3.i.i.i1141.3, align 8, !tbaa !219
  store ptr %228, ptr %arrayidx.i.i.i1140.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1142.3 = add nuw nsw i64 %indvars.iv.i.i.i1139, 4
  %niter2100.next.3 = add i64 %niter2100, 4
  %niter2100.ncmp.3 = icmp eq i64 %niter2100.next.3, %unroll_iter2099
  br i1 %niter2100.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.loopexit.unr-lcssa, label %for.body.i.i.i1144

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1144, %for.body.lr.ph.i.i.i1138
  %indvars.iv.i.i.i1139.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1138 ], [ %indvars.iv.next.i.i.i1142.3, %for.body.i.i.i1144 ]
  %lcmp.mod2098.not = icmp eq i64 %xtraiter2096, 0
  br i1 %lcmp.mod2098.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150, label %for.body.i.i.i1144.epil

for.body.i.i.i1144.epil:                          ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.loopexit.unr-lcssa, %for.body.i.i.i1144.epil
  %indvars.iv.i.i.i1139.epil = phi i64 [ %indvars.iv.next.i.i.i1142.epil, %for.body.i.i.i1144.epil ], [ %indvars.iv.i.i.i1139.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.loopexit.unr-lcssa ]
  %epil.iter2097 = phi i64 [ %epil.iter2097.next, %for.body.i.i.i1144.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1140.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1133, i64 %indvars.iv.i.i.i1139.epil
  %229 = load ptr, ptr %m_data.i.i.i1136, align 8, !tbaa !320
  %arrayidx3.i.i.i1141.epil = getelementptr inbounds ptr, ptr %229, i64 %indvars.iv.i.i.i1139.epil
  %230 = load ptr, ptr %arrayidx3.i.i.i1141.epil, align 8, !tbaa !219
  store ptr %230, ptr %arrayidx.i.i.i1140.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1142.epil = add nuw nsw i64 %indvars.iv.i.i.i1139.epil, 1
  %epil.iter2097.next = add i64 %epil.iter2097, 1
  %epil.iter2097.cmp.not = icmp eq i64 %epil.iter2097.next, %xtraiter2096
  br i1 %epil.iter2097.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150, label %for.body.i.i.i1144.epil, !llvm.loop !351

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.loopexit.unr-lcssa, %for.body.i.i.i1144.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1135
  %m_data.i9.i.i1145 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %212, i64 0, i32 5
  %231 = load ptr, ptr %m_data.i9.i.i1145, align 8, !tbaa !320
  %tobool.not.i10.i.i1146 = icmp eq ptr %231, null
  %m_ownsMemory.i.i.i1147 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %212, i64 0, i32 6
  %232 = load i8, ptr %m_ownsMemory.i.i.i1147, align 8, !range !159
  %tobool2.not.i.i.i1148 = icmp eq i8 %232, 0
  %or.cond.i.i1149 = select i1 %tobool.not.i10.i.i1146, i1 true, i1 %tobool2.not.i.i.i1148
  br i1 %or.cond.i.i1149, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1154, label %if.then3.i.i.i1152

if.then3.i.i.i1152:                               ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %231)
          to label %.noexc1161 unwind label %lpad351

.noexc1161:                                       ; preds = %if.then3.i.i.i1152
  %.pre7.pre.i1151 = load i32, ptr %m_size.i.i1100, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1154

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1154: ; preds = %.noexc1161, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150
  %.pre7.i1153 = phi i32 [ %.pre7.pre.i1151, %.noexc1161 ], [ %219, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1147, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1133, ptr %m_data.i9.i.i1145, align 8, !tbaa !320
  store i32 %cond.i.i1123, ptr %m_capacity.i.i1119, align 8, !tbaa !342
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1162

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1162: ; preds = %if.then344, %if.then.i1125, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1154
  %233 = phi i32 [ %.pre7.i1153, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1154 ], [ %214, %if.then.i1125 ], [ %214, %if.then344 ]
  %m_data.i1155 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %212, i64 0, i32 5
  %234 = load ptr, ptr %m_data.i1155, align 8, !tbaa !320
  %idxprom.i1156 = sext i32 %233 to i64
  %arrayidx.i1157 = getelementptr inbounds ptr, ptr %234, i64 %idxprom.i1156
  store ptr %arrayidx.i1099, ptr %arrayidx.i1157, align 8, !tbaa !219
  %inc.i1158 = add nsw i32 %233, 1
  store i32 %inc.i1158, ptr %m_size.i.i1100, align 4, !tbaa !319
  br label %if.end357

lpad351:                                          ; preds = %if.then3.i.i.i1152.1, %if.then.i.i.i1132.1, %if.then3.i.i.i1152, %if.then.i.i.i1132
  %235 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %idx) #38
  br label %ehcleanup443

if.end357:                                        ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE16findLinearSearchERKS2_.exit, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1162, %for.body308
  %236 = trunc i64 %indvars.iv1887 to i32
  %237 = add i32 %236, 2
  %rem317.1 = urem i32 %237, 3
  %idxprom318.1 = zext i32 %rem317.1 to i64
  %arrayidx319.1 = getelementptr inbounds [3 x i32], ptr %idx, i64 0, i64 %idxprom318.1
  %238 = load i32, ptr %arrayidx319.1, align 4, !tbaa !140
  %idxprom.i1092.1 = sext i32 %238 to i64
  %arrayidx.i1093.1 = getelementptr inbounds i32, ptr %cids.sroa.151655.1, i64 %idxprom.i1092.1
  %239 = load i32, ptr %arrayidx.i1093.1, align 4, !tbaa !140
  %cmp323.not.1 = icmp eq i32 %239, %206
  br i1 %cmp323.not.1, label %if.end357.1, label %if.then324.1

if.then324.1:                                     ; preds = %if.end357
  %240 = load ptr, ptr %m_data.i829, align 8, !tbaa !123
  %arrayidx.i1096.1 = getelementptr inbounds ptr, ptr %240, i64 %idxprom.i1095
  %241 = load ptr, ptr %arrayidx.i1096.1, align 8, !tbaa !219
  %242 = load ptr, ptr %m_data.i945, align 8, !tbaa !87
  %arrayidx.i1099.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %242, i64 %idxprom.i1092.1
  %m_size.i.i1100.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %241, i64 0, i32 2
  %243 = load i32, ptr %m_size.i.i1100.1, align 4, !tbaa !319
  %cmp8.i.1 = icmp sgt i32 %243, 0
  br i1 %cmp8.i.1, label %for.body.lr.ph.i.1, label %if.then344.1

for.body.lr.ph.i.1:                               ; preds = %if.then324.1
  %m_data.i1101.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %241, i64 0, i32 5
  %244 = load ptr, ptr %m_data.i1101.1, align 8, !tbaa !320
  %wide.trip.count.i1102.1 = zext i32 %243 to i64
  br label %for.body.i.1

for.body.i.1:                                     ; preds = %for.inc.i.1, %for.body.lr.ph.i.1
  %indvars.iv.i1103.1 = phi i64 [ 0, %for.body.lr.ph.i.1 ], [ %indvars.iv.next.i1106.1, %for.inc.i.1 ]
  %arrayidx.i1104.1 = getelementptr inbounds ptr, ptr %244, i64 %indvars.iv.i1103.1
  %245 = load ptr, ptr %arrayidx.i1104.1, align 8, !tbaa !219
  %cmp3.i1105.1 = icmp eq ptr %245, %arrayidx.i1099.1
  br i1 %cmp3.i1105.1, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE16findLinearSearchERKS2_.exit.1, label %for.inc.i.1

for.inc.i.1:                                      ; preds = %for.body.i.1
  %indvars.iv.next.i1106.1 = add nuw nsw i64 %indvars.iv.i1103.1, 1
  %exitcond.not.i1107.1 = icmp eq i64 %indvars.iv.next.i1106.1, %wide.trip.count.i1102.1
  br i1 %exitcond.not.i1107.1, label %if.then344.1, label %for.body.i.1

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE16findLinearSearchERKS2_.exit.1: ; preds = %for.body.i.1
  %246 = trunc i64 %indvars.iv.i1103.1 to i32
  %cmp342.1 = icmp eq i32 %243, %246
  br i1 %cmp342.1, label %if.then344.1, label %if.end357.1

if.then344.1:                                     ; preds = %for.inc.i.1, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE16findLinearSearchERKS2_.exit.1, %if.then324.1
  %m_capacity.i.i1119.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %241, i64 0, i32 3
  %247 = load i32, ptr %m_capacity.i.i1119.1, align 8, !tbaa !342
  %cmp.i1120.1 = icmp eq i32 %243, %247
  br i1 %cmp.i1120.1, label %if.then.i1125.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1162.1

if.then.i1125.1:                                  ; preds = %if.then344.1
  %tobool.not.i.i1121.1 = icmp eq i32 %243, 0
  %mul.i.i1122.1 = shl nsw i32 %243, 1
  %cond.i.i1123.1 = select i1 %tobool.not.i.i1121.1, i32 1, i32 %mul.i.i1122.1
  %cmp.i.i1124.1 = icmp slt i32 %243, %cond.i.i1123.1
  br i1 %cmp.i.i1124.1, label %if.then.i.i1127.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1162.1

if.then.i.i1127.1:                                ; preds = %if.then.i1125.1
  %tobool.not.i.i.i1126.1 = icmp eq i32 %cond.i.i1123.1, 0
  br i1 %tobool.not.i.i.i1126.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1135.1, label %if.then.i.i.i1132.1

if.then.i.i.i1132.1:                              ; preds = %if.then.i.i1127.1
  %conv.i.i.i.i1128.1 = sext i32 %cond.i.i1123.1 to i64
  %mul.i.i.i.i1129.1 = shl nsw i64 %conv.i.i.i.i1128.1, 3
  %call.i.i.i.i11301160.1 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1129.1, i32 noundef 16)
          to label %call.i.i.i.i1130.noexc.1 unwind label %lpad351

call.i.i.i.i1130.noexc.1:                         ; preds = %if.then.i.i.i1132.1
  %.pre.i1131.1 = load i32, ptr %m_size.i.i1100.1, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1135.1

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1135.1: ; preds = %call.i.i.i.i1130.noexc.1, %if.then.i.i1127.1
  %248 = phi i32 [ %.pre.i1131.1, %call.i.i.i.i1130.noexc.1 ], [ %243, %if.then.i.i1127.1 ]
  %retval.0.i.i.i1133.1 = phi ptr [ %call.i.i.i.i11301160.1, %call.i.i.i.i1130.noexc.1 ], [ null, %if.then.i.i1127.1 ]
  %cmp7.i.i.i1134.1 = icmp sgt i32 %248, 0
  br i1 %cmp7.i.i.i1134.1, label %for.body.lr.ph.i.i.i1138.1, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.1

for.body.lr.ph.i.i.i1138.1:                       ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1135.1
  %m_data.i.i.i1136.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %241, i64 0, i32 5
  %wide.trip.count.i.i.i1137.1 = zext i32 %248 to i64
  %xtraiter2107 = and i64 %wide.trip.count.i.i.i1137.1, 3
  %249 = icmp ult i32 %248, 4
  br i1 %249, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.1.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1138.1.new

for.body.lr.ph.i.i.i1138.1.new:                   ; preds = %for.body.lr.ph.i.i.i1138.1
  %unroll_iter2110 = and i64 %wide.trip.count.i.i.i1137.1, 4294967292
  br label %for.body.i.i.i1144.1

for.body.i.i.i1144.1:                             ; preds = %for.body.i.i.i1144.1, %for.body.lr.ph.i.i.i1138.1.new
  %indvars.iv.i.i.i1139.1 = phi i64 [ 0, %for.body.lr.ph.i.i.i1138.1.new ], [ %indvars.iv.next.i.i.i1142.1.3, %for.body.i.i.i1144.1 ]
  %niter2111 = phi i64 [ 0, %for.body.lr.ph.i.i.i1138.1.new ], [ %niter2111.next.3, %for.body.i.i.i1144.1 ]
  %arrayidx.i.i.i1140.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1133.1, i64 %indvars.iv.i.i.i1139.1
  %250 = load ptr, ptr %m_data.i.i.i1136.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1141.1 = getelementptr inbounds ptr, ptr %250, i64 %indvars.iv.i.i.i1139.1
  %251 = load ptr, ptr %arrayidx3.i.i.i1141.1, align 8, !tbaa !219
  store ptr %251, ptr %arrayidx.i.i.i1140.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1142.1 = or i64 %indvars.iv.i.i.i1139.1, 1
  %arrayidx.i.i.i1140.1.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1133.1, i64 %indvars.iv.next.i.i.i1142.1
  %252 = load ptr, ptr %m_data.i.i.i1136.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1141.1.1 = getelementptr inbounds ptr, ptr %252, i64 %indvars.iv.next.i.i.i1142.1
  %253 = load ptr, ptr %arrayidx3.i.i.i1141.1.1, align 8, !tbaa !219
  store ptr %253, ptr %arrayidx.i.i.i1140.1.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1142.1.1 = or i64 %indvars.iv.i.i.i1139.1, 2
  %arrayidx.i.i.i1140.1.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1133.1, i64 %indvars.iv.next.i.i.i1142.1.1
  %254 = load ptr, ptr %m_data.i.i.i1136.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1141.1.2 = getelementptr inbounds ptr, ptr %254, i64 %indvars.iv.next.i.i.i1142.1.1
  %255 = load ptr, ptr %arrayidx3.i.i.i1141.1.2, align 8, !tbaa !219
  store ptr %255, ptr %arrayidx.i.i.i1140.1.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1142.1.2 = or i64 %indvars.iv.i.i.i1139.1, 3
  %arrayidx.i.i.i1140.1.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1133.1, i64 %indvars.iv.next.i.i.i1142.1.2
  %256 = load ptr, ptr %m_data.i.i.i1136.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1141.1.3 = getelementptr inbounds ptr, ptr %256, i64 %indvars.iv.next.i.i.i1142.1.2
  %257 = load ptr, ptr %arrayidx3.i.i.i1141.1.3, align 8, !tbaa !219
  store ptr %257, ptr %arrayidx.i.i.i1140.1.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1142.1.3 = add nuw nsw i64 %indvars.iv.i.i.i1139.1, 4
  %niter2111.next.3 = add i64 %niter2111, 4
  %niter2111.ncmp.3 = icmp eq i64 %niter2111.next.3, %unroll_iter2110
  br i1 %niter2111.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.1.loopexit.unr-lcssa, label %for.body.i.i.i1144.1

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.1.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1144.1, %for.body.lr.ph.i.i.i1138.1
  %indvars.iv.i.i.i1139.1.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1138.1 ], [ %indvars.iv.next.i.i.i1142.1.3, %for.body.i.i.i1144.1 ]
  %lcmp.mod2109.not = icmp eq i64 %xtraiter2107, 0
  br i1 %lcmp.mod2109.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.1, label %for.body.i.i.i1144.1.epil

for.body.i.i.i1144.1.epil:                        ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.1.loopexit.unr-lcssa, %for.body.i.i.i1144.1.epil
  %indvars.iv.i.i.i1139.1.epil = phi i64 [ %indvars.iv.next.i.i.i1142.1.epil, %for.body.i.i.i1144.1.epil ], [ %indvars.iv.i.i.i1139.1.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.1.loopexit.unr-lcssa ]
  %epil.iter2108 = phi i64 [ %epil.iter2108.next, %for.body.i.i.i1144.1.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.1.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1140.1.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1133.1, i64 %indvars.iv.i.i.i1139.1.epil
  %258 = load ptr, ptr %m_data.i.i.i1136.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1141.1.epil = getelementptr inbounds ptr, ptr %258, i64 %indvars.iv.i.i.i1139.1.epil
  %259 = load ptr, ptr %arrayidx3.i.i.i1141.1.epil, align 8, !tbaa !219
  store ptr %259, ptr %arrayidx.i.i.i1140.1.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1142.1.epil = add nuw nsw i64 %indvars.iv.i.i.i1139.1.epil, 1
  %epil.iter2108.next = add i64 %epil.iter2108, 1
  %epil.iter2108.cmp.not = icmp eq i64 %epil.iter2108.next, %xtraiter2107
  br i1 %epil.iter2108.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.1, label %for.body.i.i.i1144.1.epil, !llvm.loop !352

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.1: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.1.loopexit.unr-lcssa, %for.body.i.i.i1144.1.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1135.1
  %m_data.i9.i.i1145.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %241, i64 0, i32 5
  %260 = load ptr, ptr %m_data.i9.i.i1145.1, align 8, !tbaa !320
  %tobool.not.i10.i.i1146.1 = icmp eq ptr %260, null
  %m_ownsMemory.i.i.i1147.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %241, i64 0, i32 6
  %261 = load i8, ptr %m_ownsMemory.i.i.i1147.1, align 8, !range !159
  %tobool2.not.i.i.i1148.1 = icmp eq i8 %261, 0
  %or.cond.i.i1149.1 = select i1 %tobool.not.i10.i.i1146.1, i1 true, i1 %tobool2.not.i.i.i1148.1
  br i1 %or.cond.i.i1149.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1154.1, label %if.then3.i.i.i1152.1

if.then3.i.i.i1152.1:                             ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.1
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %260)
          to label %.noexc1161.1 unwind label %lpad351

.noexc1161.1:                                     ; preds = %if.then3.i.i.i1152.1
  %.pre7.pre.i1151.1 = load i32, ptr %m_size.i.i1100.1, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1154.1

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1154.1: ; preds = %.noexc1161.1, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.1
  %.pre7.i1153.1 = phi i32 [ %.pre7.pre.i1151.1, %.noexc1161.1 ], [ %248, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1150.1 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1147.1, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1133.1, ptr %m_data.i9.i.i1145.1, align 8, !tbaa !320
  store i32 %cond.i.i1123.1, ptr %m_capacity.i.i1119.1, align 8, !tbaa !342
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1162.1

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1162.1: ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1154.1, %if.then.i1125.1, %if.then344.1
  %262 = phi i32 [ %.pre7.i1153.1, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1154.1 ], [ %243, %if.then.i1125.1 ], [ %243, %if.then344.1 ]
  %m_data.i1155.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %241, i64 0, i32 5
  %263 = load ptr, ptr %m_data.i1155.1, align 8, !tbaa !320
  %idxprom.i1156.1 = sext i32 %262 to i64
  %arrayidx.i1157.1 = getelementptr inbounds ptr, ptr %263, i64 %idxprom.i1156.1
  store ptr %arrayidx.i1099.1, ptr %arrayidx.i1157.1, align 8, !tbaa !219
  %inc.i1158.1 = add nsw i32 %262, 1
  store i32 %inc.i1158.1, ptr %m_size.i.i1100.1, align 4, !tbaa !319
  br label %if.end357.1

if.end357.1:                                      ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1162.1, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE16findLinearSearchERKS2_.exit.1, %if.end357
  %exitcond1891.not = icmp eq i64 %indvars.iv.next1888, 3
  br i1 %exitcond1891.not, label %for.cond.cleanup307, label %for.body308

for.end371.loopexit:                              ; preds = %for.cond.cleanup307
  %.pre1921 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  br label %for.end371

for.end371:                                       ; preds = %for.end371.loopexit, %for.cond260.preheader
  %264 = phi i32 [ %.pre1921, %for.end371.loopexit ], [ %188, %for.cond260.preheader ]
  %cmp375 = icmp sgt i32 %264, 1
  br i1 %cmp375, label %if.then376, label %if.end422

if.then376:                                       ; preds = %for.end371
  %call379 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 424, i32 noundef 16)
          to label %invoke.cont378 unwind label %lpad377

invoke.cont378:                                   ; preds = %if.then376
  %m_ownsMemory.i.i.i1164 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call379, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i.i1164, align 8, !tbaa !341
  %m_data.i.i.i1165 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call379, i64 0, i32 5
  store ptr null, ptr %m_data.i.i.i1165, align 8, !tbaa !320
  %m_size.i.i.i1166 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call379, i64 0, i32 2
  store i32 0, ptr %m_size.i.i.i1166, align 4, !tbaa !319
  %m_capacity.i.i.i1167 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call379, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i1167, align 8, !tbaa !342
  %m_ownsMemory.i.i25.i1168 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 1, i32 6
  store i8 1, ptr %m_ownsMemory.i.i25.i1168, align 8, !tbaa !36
  %m_data.i.i26.i1169 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 1, i32 5
  store ptr null, ptr %m_data.i.i26.i1169, align 8, !tbaa !39
  %m_size.i.i27.i1170 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 1, i32 2
  store i32 0, ptr %m_size.i.i27.i1170, align 4, !tbaa !40
  %m_capacity.i.i28.i1171 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 1, i32 3
  store i32 0, ptr %m_capacity.i.i28.i1171, align 8, !tbaa !41
  %m_ownsMemory.i.i29.i1172 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 2, i32 6
  store i8 1, ptr %m_ownsMemory.i.i29.i1172, align 8, !tbaa !30
  %m_data.i.i30.i1173 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 2, i32 5
  store ptr null, ptr %m_data.i.i30.i1173, align 8, !tbaa !33
  %m_size.i.i31.i1174 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 2, i32 2
  store i32 0, ptr %m_size.i.i31.i1174, align 4, !tbaa !34
  %m_capacity.i.i32.i1175 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 2, i32 3
  store i32 0, ptr %m_capacity.i.i32.i1175, align 8, !tbaa !35
  %m_leaf.i1176 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 15
  %m_maxSelfCollisionImpulse.i1177 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 20
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %m_leaf.i1176, i8 0, i64 24, i1 false)
  store <2 x float> <float 1.000000e+02, float 0x3F847AE140000000>, ptr %m_maxSelfCollisionImpulse.i1177, align 8, !tbaa !137
  %m_containsAnchor.i1179 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 22
  store i8 0, ptr %m_containsAnchor.i1179, align 8, !tbaa !345
  %m_collide381 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call379, i64 0, i32 23
  store i8 0, ptr %m_collide381, align 1, !tbaa !346
  %265 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp.i1182 = icmp sgt i32 %265, 0
  br i1 %cmp.i1182, label %if.then.i.i1185, label %for.cond.cleanup394

if.then.i.i1185:                                  ; preds = %invoke.cont378
  %conv.i.i.i = zext i32 %265 to i64
  %mul.i.i.i = shl nuw nsw i64 %conv.i.i.i, 3
  %call.i.i.i1191 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i, i32 noundef 16)
          to label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i unwind label %lpad377

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i: ; preds = %if.then.i.i1185
  %266 = load i32, ptr %m_size.i.i.i1166, align 4, !tbaa !319
  %cmp7.i.i = icmp sgt i32 %266, 0
  br i1 %cmp7.i.i, label %for.body.lr.ph.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i

for.body.lr.ph.i.i:                               ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i
  %wide.trip.count.i.i = zext i32 %266 to i64
  %xtraiter2112 = and i64 %wide.trip.count.i.i, 3
  %267 = icmp ult i32 %266, 4
  br i1 %267, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.new

for.body.lr.ph.i.i.new:                           ; preds = %for.body.lr.ph.i.i
  %unroll_iter2115 = and i64 %wide.trip.count.i.i, 4294967292
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %for.body.lr.ph.i.i.new
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.new ], [ %indvars.iv.next.i.i.3, %for.body.i.i ]
  %niter2116 = phi i64 [ 0, %for.body.lr.ph.i.i.new ], [ %niter2116.next.3, %for.body.i.i ]
  %arrayidx.i.i = getelementptr inbounds ptr, ptr %call.i.i.i1191, i64 %indvars.iv.i.i
  %268 = load ptr, ptr %m_data.i.i.i1165, align 8, !tbaa !320
  %arrayidx3.i.i1188 = getelementptr inbounds ptr, ptr %268, i64 %indvars.iv.i.i
  %269 = load ptr, ptr %arrayidx3.i.i1188, align 8, !tbaa !219
  store ptr %269, ptr %arrayidx.i.i, align 8, !tbaa !219
  %indvars.iv.next.i.i = or i64 %indvars.iv.i.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds ptr, ptr %call.i.i.i1191, i64 %indvars.iv.next.i.i
  %270 = load ptr, ptr %m_data.i.i.i1165, align 8, !tbaa !320
  %arrayidx3.i.i1188.1 = getelementptr inbounds ptr, ptr %270, i64 %indvars.iv.next.i.i
  %271 = load ptr, ptr %arrayidx3.i.i1188.1, align 8, !tbaa !219
  store ptr %271, ptr %arrayidx.i.i.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.1 = or i64 %indvars.iv.i.i, 2
  %arrayidx.i.i.2 = getelementptr inbounds ptr, ptr %call.i.i.i1191, i64 %indvars.iv.next.i.i.1
  %272 = load ptr, ptr %m_data.i.i.i1165, align 8, !tbaa !320
  %arrayidx3.i.i1188.2 = getelementptr inbounds ptr, ptr %272, i64 %indvars.iv.next.i.i.1
  %273 = load ptr, ptr %arrayidx3.i.i1188.2, align 8, !tbaa !219
  store ptr %273, ptr %arrayidx.i.i.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.2 = or i64 %indvars.iv.i.i, 3
  %arrayidx.i.i.3 = getelementptr inbounds ptr, ptr %call.i.i.i1191, i64 %indvars.iv.next.i.i.2
  %274 = load ptr, ptr %m_data.i.i.i1165, align 8, !tbaa !320
  %arrayidx3.i.i1188.3 = getelementptr inbounds ptr, ptr %274, i64 %indvars.iv.next.i.i.2
  %275 = load ptr, ptr %arrayidx3.i.i1188.3, align 8, !tbaa !219
  store ptr %275, ptr %arrayidx.i.i.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.3 = add nuw nsw i64 %indvars.iv.i.i, 4
  %niter2116.next.3 = add i64 %niter2116, 4
  %niter2116.ncmp.3 = icmp eq i64 %niter2116.next.3, %unroll_iter2115
  br i1 %niter2116.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.loopexit.unr-lcssa, label %for.body.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.loopexit.unr-lcssa: ; preds = %for.body.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i.3, %for.body.i.i ]
  %lcmp.mod2114.not = icmp eq i64 %xtraiter2112, 0
  br i1 %lcmp.mod2114.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i, label %for.body.i.i.epil

for.body.i.i.epil:                                ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.loopexit.unr-lcssa, %for.body.i.i.epil
  %indvars.iv.i.i.epil = phi i64 [ %indvars.iv.next.i.i.epil, %for.body.i.i.epil ], [ %indvars.iv.i.i.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.loopexit.unr-lcssa ]
  %epil.iter2113 = phi i64 [ %epil.iter2113.next, %for.body.i.i.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.loopexit.unr-lcssa ]
  %arrayidx.i.i.epil = getelementptr inbounds ptr, ptr %call.i.i.i1191, i64 %indvars.iv.i.i.epil
  %276 = load ptr, ptr %m_data.i.i.i1165, align 8, !tbaa !320
  %arrayidx3.i.i1188.epil = getelementptr inbounds ptr, ptr %276, i64 %indvars.iv.i.i.epil
  %277 = load ptr, ptr %arrayidx3.i.i1188.epil, align 8, !tbaa !219
  store ptr %277, ptr %arrayidx.i.i.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.epil = add nuw nsw i64 %indvars.iv.i.i.epil, 1
  %epil.iter2113.next = add i64 %epil.iter2113, 1
  %epil.iter2113.cmp.not = icmp eq i64 %epil.iter2113.next, %xtraiter2112
  br i1 %epil.iter2113.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i, label %for.body.i.i.epil, !llvm.loop !353

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.loopexit.unr-lcssa, %for.body.i.i.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i
  %278 = load ptr, ptr %m_data.i.i.i1165, align 8, !tbaa !320
  %tobool.not.i10.i = icmp eq ptr %278, null
  %279 = load i8, ptr %m_ownsMemory.i.i.i1164, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %279, 0
  %or.cond.i = select i1 %tobool.not.i10.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %invoke.cont386, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %278)
          to label %invoke.cont386 unwind label %lpad377

invoke.cont386:                                   ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i1164, align 8, !tbaa !341
  store ptr %call.i.i.i1191, ptr %m_data.i.i.i1165, align 8, !tbaa !320
  store i32 %265, ptr %m_capacity.i.i.i1167, align 8, !tbaa !342
  %.pre1922 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %cmp3931819 = icmp sgt i32 %.pre1922, 0
  br i1 %cmp3931819, label %for.body395.lr.ph, label %for.cond.cleanup394

for.body395.lr.ph:                                ; preds = %invoke.cont386
  %.pre1923 = load i32, ptr %m_size.i.i.i1166, align 4, !tbaa !319
  br label %for.body395

for.cond.cleanup394:                              ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1284, %invoke.cont378, %invoke.cont386
  %280 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %m_capacity.i.i1195 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 3
  %281 = load i32, ptr %m_capacity.i.i1195, align 8, !tbaa !125
  %cmp.i1196 = icmp eq i32 %280, %281
  br i1 %cmp.i1196, label %if.then.i1201, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE9push_backERKS2_.exit

if.then.i1201:                                    ; preds = %for.cond.cleanup394
  %tobool.not.i.i1197 = icmp eq i32 %280, 0
  %mul.i.i1198 = shl nsw i32 %280, 1
  %cond.i.i1199 = select i1 %tobool.not.i.i1197, i32 1, i32 %mul.i.i1198
  %cmp.i.i1200 = icmp slt i32 %280, %cond.i.i1199
  br i1 %cmp.i.i1200, label %if.then.i.i1203, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE9push_backERKS2_.exit

if.then.i.i1203:                                  ; preds = %if.then.i1201
  %tobool.not.i.i.i1202 = icmp eq i32 %cond.i.i1199, 0
  br i1 %tobool.not.i.i.i1202, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1211, label %if.then.i.i.i1208

if.then.i.i.i1208:                                ; preds = %if.then.i.i1203
  %conv.i.i.i.i1204 = sext i32 %cond.i.i1199 to i64
  %mul.i.i.i.i1205 = shl nsw i64 %conv.i.i.i.i1204, 3
  %call.i.i.i.i12061235 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1205, i32 noundef 16)
          to label %call.i.i.i.i1206.noexc unwind label %lpad377

call.i.i.i.i1206.noexc:                           ; preds = %if.then.i.i.i1208
  %.pre.i1207 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1211

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1211: ; preds = %call.i.i.i.i1206.noexc, %if.then.i.i1203
  %282 = phi i32 [ %.pre.i1207, %call.i.i.i.i1206.noexc ], [ %280, %if.then.i.i1203 ]
  %retval.0.i.i.i1209 = phi ptr [ %call.i.i.i.i12061235, %call.i.i.i.i1206.noexc ], [ null, %if.then.i.i1203 ]
  %cmp7.i.i.i1210 = icmp sgt i32 %282, 0
  br i1 %cmp7.i.i.i1210, label %for.body.lr.ph.i.i.i1214, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1226

for.body.lr.ph.i.i.i1214:                         ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1211
  %wide.trip.count.i.i.i1213 = zext i32 %282 to i64
  %xtraiter2122 = and i64 %wide.trip.count.i.i.i1213, 3
  %283 = icmp ult i32 %282, 4
  br i1 %283, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1226.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1214.new

for.body.lr.ph.i.i.i1214.new:                     ; preds = %for.body.lr.ph.i.i.i1214
  %unroll_iter2125 = and i64 %wide.trip.count.i.i.i1213, 4294967292
  br label %for.body.i.i.i1220

for.body.i.i.i1220:                               ; preds = %for.body.i.i.i1220, %for.body.lr.ph.i.i.i1214.new
  %indvars.iv.i.i.i1215 = phi i64 [ 0, %for.body.lr.ph.i.i.i1214.new ], [ %indvars.iv.next.i.i.i1218.3, %for.body.i.i.i1220 ]
  %niter2126 = phi i64 [ 0, %for.body.lr.ph.i.i.i1214.new ], [ %niter2126.next.3, %for.body.i.i.i1220 ]
  %arrayidx.i.i.i1216 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1209, i64 %indvars.iv.i.i.i1215
  %284 = load ptr, ptr %m_data.i829, align 8, !tbaa !123
  %arrayidx3.i.i.i1217 = getelementptr inbounds ptr, ptr %284, i64 %indvars.iv.i.i.i1215
  %285 = load ptr, ptr %arrayidx3.i.i.i1217, align 8, !tbaa !219
  store ptr %285, ptr %arrayidx.i.i.i1216, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1218 = or i64 %indvars.iv.i.i.i1215, 1
  %arrayidx.i.i.i1216.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1209, i64 %indvars.iv.next.i.i.i1218
  %286 = load ptr, ptr %m_data.i829, align 8, !tbaa !123
  %arrayidx3.i.i.i1217.1 = getelementptr inbounds ptr, ptr %286, i64 %indvars.iv.next.i.i.i1218
  %287 = load ptr, ptr %arrayidx3.i.i.i1217.1, align 8, !tbaa !219
  store ptr %287, ptr %arrayidx.i.i.i1216.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1218.1 = or i64 %indvars.iv.i.i.i1215, 2
  %arrayidx.i.i.i1216.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1209, i64 %indvars.iv.next.i.i.i1218.1
  %288 = load ptr, ptr %m_data.i829, align 8, !tbaa !123
  %arrayidx3.i.i.i1217.2 = getelementptr inbounds ptr, ptr %288, i64 %indvars.iv.next.i.i.i1218.1
  %289 = load ptr, ptr %arrayidx3.i.i.i1217.2, align 8, !tbaa !219
  store ptr %289, ptr %arrayidx.i.i.i1216.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1218.2 = or i64 %indvars.iv.i.i.i1215, 3
  %arrayidx.i.i.i1216.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1209, i64 %indvars.iv.next.i.i.i1218.2
  %290 = load ptr, ptr %m_data.i829, align 8, !tbaa !123
  %arrayidx3.i.i.i1217.3 = getelementptr inbounds ptr, ptr %290, i64 %indvars.iv.next.i.i.i1218.2
  %291 = load ptr, ptr %arrayidx3.i.i.i1217.3, align 8, !tbaa !219
  store ptr %291, ptr %arrayidx.i.i.i1216.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1218.3 = add nuw nsw i64 %indvars.iv.i.i.i1215, 4
  %niter2126.next.3 = add i64 %niter2126, 4
  %niter2126.ncmp.3 = icmp eq i64 %niter2126.next.3, %unroll_iter2125
  br i1 %niter2126.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1226.loopexit.unr-lcssa, label %for.body.i.i.i1220

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1226.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1220, %for.body.lr.ph.i.i.i1214
  %indvars.iv.i.i.i1215.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1214 ], [ %indvars.iv.next.i.i.i1218.3, %for.body.i.i.i1220 ]
  %lcmp.mod2124.not = icmp eq i64 %xtraiter2122, 0
  br i1 %lcmp.mod2124.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1226, label %for.body.i.i.i1220.epil

for.body.i.i.i1220.epil:                          ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1226.loopexit.unr-lcssa, %for.body.i.i.i1220.epil
  %indvars.iv.i.i.i1215.epil = phi i64 [ %indvars.iv.next.i.i.i1218.epil, %for.body.i.i.i1220.epil ], [ %indvars.iv.i.i.i1215.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1226.loopexit.unr-lcssa ]
  %epil.iter2123 = phi i64 [ %epil.iter2123.next, %for.body.i.i.i1220.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1226.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1216.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1209, i64 %indvars.iv.i.i.i1215.epil
  %292 = load ptr, ptr %m_data.i829, align 8, !tbaa !123
  %arrayidx3.i.i.i1217.epil = getelementptr inbounds ptr, ptr %292, i64 %indvars.iv.i.i.i1215.epil
  %293 = load ptr, ptr %arrayidx3.i.i.i1217.epil, align 8, !tbaa !219
  store ptr %293, ptr %arrayidx.i.i.i1216.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1218.epil = add nuw nsw i64 %indvars.iv.i.i.i1215.epil, 1
  %epil.iter2123.next = add i64 %epil.iter2123, 1
  %epil.iter2123.cmp.not = icmp eq i64 %epil.iter2123.next, %xtraiter2122
  br i1 %epil.iter2123.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1226, label %for.body.i.i.i1220.epil, !llvm.loop !354

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1226: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1226.loopexit.unr-lcssa, %for.body.i.i.i1220.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1211
  %294 = load ptr, ptr %m_data.i829, align 8, !tbaa !123
  %tobool.not.i10.i.i1222 = icmp eq ptr %294, null
  %m_ownsMemory.i.i.i1223 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 6
  %295 = load i8, ptr %m_ownsMemory.i.i.i1223, align 8, !range !159
  %tobool2.not.i.i.i1224 = icmp eq i8 %295, 0
  %or.cond.i.i1225 = select i1 %tobool.not.i10.i.i1222, i1 true, i1 %tobool2.not.i.i.i1224
  br i1 %or.cond.i.i1225, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE10deallocateEv.exit.i.i, label %if.then3.i.i.i1228

if.then3.i.i.i1228:                               ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1226
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %294)
          to label %.noexc1236 unwind label %lpad377

.noexc1236:                                       ; preds = %if.then3.i.i.i1228
  %.pre7.pre.i1227 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE10deallocateEv.exit.i.i: ; preds = %.noexc1236, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1226
  %.pre7.i1229 = phi i32 [ %.pre7.pre.i1227, %.noexc1236 ], [ %282, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1226 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1223, align 8, !tbaa !122
  store ptr %retval.0.i.i.i1209, ptr %m_data.i829, align 8, !tbaa !123
  store i32 %cond.i.i1199, ptr %m_capacity.i.i1195, align 8, !tbaa !125
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE9push_backERKS2_.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE9push_backERKS2_.exit: ; preds = %for.cond.cleanup394, %if.then.i1201, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE10deallocateEv.exit.i.i
  %296 = phi i32 [ %.pre7.i1229, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE10deallocateEv.exit.i.i ], [ %280, %if.then.i1201 ], [ %280, %for.cond.cleanup394 ]
  %297 = load ptr, ptr %m_data.i829, align 8, !tbaa !123
  %idxprom.i1231 = sext i32 %296 to i64
  %arrayidx.i1232 = getelementptr inbounds ptr, ptr %297, i64 %idxprom.i1231
  store ptr %call379, ptr %arrayidx.i1232, align 8, !tbaa !219
  %inc.i1233 = add nsw i32 %296, 1
  store i32 %inc.i1233, ptr %m_size.i.i, align 4, !tbaa !124
  %298 = load ptr, ptr %m_data.i829, align 8, !tbaa !123
  %arrayidx.i1289 = getelementptr inbounds ptr, ptr %298, i64 %idxprom.i1231
  %299 = load ptr, ptr %298, align 8, !tbaa !219
  %300 = load ptr, ptr %arrayidx.i1289, align 8, !tbaa !219
  store ptr %300, ptr %298, align 8, !tbaa !219
  store ptr %299, ptr %arrayidx.i1289, align 8, !tbaa !219
  br label %if.end422

lpad377:                                          ; preds = %if.then3.i.i.i1228, %if.then.i.i.i1208, %if.then3.i.i, %if.then.i.i1185, %if.then376
  %301 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup443

for.body395:                                      ; preds = %for.body395.lr.ph, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1284
  %302 = phi i32 [ %.pre1922, %for.body395.lr.ph ], [ %320, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1284 ]
  %303 = phi i32 [ %265, %for.body395.lr.ph ], [ %321, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1284 ]
  %304 = phi i32 [ %.pre1923, %for.body395.lr.ph ], [ %inc.i1280, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1284 ]
  %indvars.iv1895 = phi i64 [ 0, %for.body395.lr.ph ], [ %indvars.iv.next1896, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1284 ]
  %305 = load ptr, ptr %m_data.i945, align 8, !tbaa !87
  %arrayidx.i1239 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %305, i64 %indvars.iv1895
  %cmp.i1242 = icmp eq i32 %304, %303
  br i1 %cmp.i1242, label %if.then.i1247, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1284

if.then.i1247:                                    ; preds = %for.body395
  %tobool.not.i.i1243 = icmp eq i32 %303, 0
  %mul.i.i1244 = shl nsw i32 %303, 1
  %cond.i.i1245 = select i1 %tobool.not.i.i1243, i32 1, i32 %mul.i.i1244
  %cmp.i.i1246 = icmp slt i32 %303, %cond.i.i1245
  br i1 %cmp.i.i1246, label %if.then.i.i1249, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1284

if.then.i.i1249:                                  ; preds = %if.then.i1247
  %tobool.not.i.i.i1248 = icmp eq i32 %cond.i.i1245, 0
  br i1 %tobool.not.i.i.i1248, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1257, label %if.then.i.i.i1254

if.then.i.i.i1254:                                ; preds = %if.then.i.i1249
  %conv.i.i.i.i1250 = sext i32 %cond.i.i1245 to i64
  %mul.i.i.i.i1251 = shl nsw i64 %conv.i.i.i.i1250, 3
  %call.i.i.i.i12521282 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1251, i32 noundef 16)
          to label %call.i.i.i.i1252.noexc unwind label %lpad399

call.i.i.i.i1252.noexc:                           ; preds = %if.then.i.i.i1254
  %.pre.i1253 = load i32, ptr %m_size.i.i.i1166, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1257

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1257: ; preds = %call.i.i.i.i1252.noexc, %if.then.i.i1249
  %306 = phi i32 [ %.pre.i1253, %call.i.i.i.i1252.noexc ], [ %303, %if.then.i.i1249 ]
  %retval.0.i.i.i1255 = phi ptr [ %call.i.i.i.i12521282, %call.i.i.i.i1252.noexc ], [ null, %if.then.i.i1249 ]
  %cmp7.i.i.i1256 = icmp sgt i32 %306, 0
  br i1 %cmp7.i.i.i1256, label %for.body.lr.ph.i.i.i1260, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1272

for.body.lr.ph.i.i.i1260:                         ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1257
  %wide.trip.count.i.i.i1259 = zext i32 %306 to i64
  %xtraiter2117 = and i64 %wide.trip.count.i.i.i1259, 3
  %307 = icmp ult i32 %306, 4
  br i1 %307, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1272.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1260.new

for.body.lr.ph.i.i.i1260.new:                     ; preds = %for.body.lr.ph.i.i.i1260
  %unroll_iter2120 = and i64 %wide.trip.count.i.i.i1259, 4294967292
  br label %for.body.i.i.i1266

for.body.i.i.i1266:                               ; preds = %for.body.i.i.i1266, %for.body.lr.ph.i.i.i1260.new
  %indvars.iv.i.i.i1261 = phi i64 [ 0, %for.body.lr.ph.i.i.i1260.new ], [ %indvars.iv.next.i.i.i1264.3, %for.body.i.i.i1266 ]
  %niter2121 = phi i64 [ 0, %for.body.lr.ph.i.i.i1260.new ], [ %niter2121.next.3, %for.body.i.i.i1266 ]
  %arrayidx.i.i.i1262 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1255, i64 %indvars.iv.i.i.i1261
  %308 = load ptr, ptr %m_data.i.i.i1165, align 8, !tbaa !320
  %arrayidx3.i.i.i1263 = getelementptr inbounds ptr, ptr %308, i64 %indvars.iv.i.i.i1261
  %309 = load ptr, ptr %arrayidx3.i.i.i1263, align 8, !tbaa !219
  store ptr %309, ptr %arrayidx.i.i.i1262, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1264 = or i64 %indvars.iv.i.i.i1261, 1
  %arrayidx.i.i.i1262.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1255, i64 %indvars.iv.next.i.i.i1264
  %310 = load ptr, ptr %m_data.i.i.i1165, align 8, !tbaa !320
  %arrayidx3.i.i.i1263.1 = getelementptr inbounds ptr, ptr %310, i64 %indvars.iv.next.i.i.i1264
  %311 = load ptr, ptr %arrayidx3.i.i.i1263.1, align 8, !tbaa !219
  store ptr %311, ptr %arrayidx.i.i.i1262.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1264.1 = or i64 %indvars.iv.i.i.i1261, 2
  %arrayidx.i.i.i1262.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1255, i64 %indvars.iv.next.i.i.i1264.1
  %312 = load ptr, ptr %m_data.i.i.i1165, align 8, !tbaa !320
  %arrayidx3.i.i.i1263.2 = getelementptr inbounds ptr, ptr %312, i64 %indvars.iv.next.i.i.i1264.1
  %313 = load ptr, ptr %arrayidx3.i.i.i1263.2, align 8, !tbaa !219
  store ptr %313, ptr %arrayidx.i.i.i1262.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1264.2 = or i64 %indvars.iv.i.i.i1261, 3
  %arrayidx.i.i.i1262.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1255, i64 %indvars.iv.next.i.i.i1264.2
  %314 = load ptr, ptr %m_data.i.i.i1165, align 8, !tbaa !320
  %arrayidx3.i.i.i1263.3 = getelementptr inbounds ptr, ptr %314, i64 %indvars.iv.next.i.i.i1264.2
  %315 = load ptr, ptr %arrayidx3.i.i.i1263.3, align 8, !tbaa !219
  store ptr %315, ptr %arrayidx.i.i.i1262.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1264.3 = add nuw nsw i64 %indvars.iv.i.i.i1261, 4
  %niter2121.next.3 = add i64 %niter2121, 4
  %niter2121.ncmp.3 = icmp eq i64 %niter2121.next.3, %unroll_iter2120
  br i1 %niter2121.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1272.loopexit.unr-lcssa, label %for.body.i.i.i1266

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1272.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1266, %for.body.lr.ph.i.i.i1260
  %indvars.iv.i.i.i1261.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1260 ], [ %indvars.iv.next.i.i.i1264.3, %for.body.i.i.i1266 ]
  %lcmp.mod2119.not = icmp eq i64 %xtraiter2117, 0
  br i1 %lcmp.mod2119.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1272, label %for.body.i.i.i1266.epil

for.body.i.i.i1266.epil:                          ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1272.loopexit.unr-lcssa, %for.body.i.i.i1266.epil
  %indvars.iv.i.i.i1261.epil = phi i64 [ %indvars.iv.next.i.i.i1264.epil, %for.body.i.i.i1266.epil ], [ %indvars.iv.i.i.i1261.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1272.loopexit.unr-lcssa ]
  %epil.iter2118 = phi i64 [ %epil.iter2118.next, %for.body.i.i.i1266.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1272.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1262.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1255, i64 %indvars.iv.i.i.i1261.epil
  %316 = load ptr, ptr %m_data.i.i.i1165, align 8, !tbaa !320
  %arrayidx3.i.i.i1263.epil = getelementptr inbounds ptr, ptr %316, i64 %indvars.iv.i.i.i1261.epil
  %317 = load ptr, ptr %arrayidx3.i.i.i1263.epil, align 8, !tbaa !219
  store ptr %317, ptr %arrayidx.i.i.i1262.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1264.epil = add nuw nsw i64 %indvars.iv.i.i.i1261.epil, 1
  %epil.iter2118.next = add i64 %epil.iter2118, 1
  %epil.iter2118.cmp.not = icmp eq i64 %epil.iter2118.next, %xtraiter2117
  br i1 %epil.iter2118.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1272, label %for.body.i.i.i1266.epil, !llvm.loop !355

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1272: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1272.loopexit.unr-lcssa, %for.body.i.i.i1266.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1257
  %318 = load ptr, ptr %m_data.i.i.i1165, align 8, !tbaa !320
  %tobool.not.i10.i.i1268 = icmp eq ptr %318, null
  %319 = load i8, ptr %m_ownsMemory.i.i.i1164, align 8, !range !159
  %tobool2.not.i.i.i1270 = icmp eq i8 %319, 0
  %or.cond.i.i1271 = select i1 %tobool.not.i10.i.i1268, i1 true, i1 %tobool2.not.i.i.i1270
  br i1 %or.cond.i.i1271, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1276, label %if.then3.i.i.i1274

if.then3.i.i.i1274:                               ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1272
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %318)
          to label %.noexc1283 unwind label %lpad399

.noexc1283:                                       ; preds = %if.then3.i.i.i1274
  %.pre7.pre.i1273 = load i32, ptr %m_size.i.i.i1166, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1276

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1276: ; preds = %.noexc1283, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1272
  %.pre7.i1275 = phi i32 [ %.pre7.pre.i1273, %.noexc1283 ], [ %306, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1272 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1164, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1255, ptr %m_data.i.i.i1165, align 8, !tbaa !320
  store i32 %cond.i.i1245, ptr %m_capacity.i.i.i1167, align 8, !tbaa !342
  %.pre1924 = load i32, ptr %m_size.i, align 4, !tbaa !88
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1284

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1284: ; preds = %for.body395, %if.then.i1247, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1276
  %320 = phi i32 [ %.pre1924, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1276 ], [ %302, %if.then.i1247 ], [ %302, %for.body395 ]
  %321 = phi i32 [ %cond.i.i1245, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1276 ], [ %303, %if.then.i1247 ], [ %303, %for.body395 ]
  %322 = phi i32 [ %.pre7.i1275, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1276 ], [ %303, %if.then.i1247 ], [ %304, %for.body395 ]
  %323 = load ptr, ptr %m_data.i.i.i1165, align 8, !tbaa !320
  %idxprom.i1278 = sext i32 %322 to i64
  %arrayidx.i1279 = getelementptr inbounds ptr, ptr %323, i64 %idxprom.i1278
  store ptr %arrayidx.i1239, ptr %arrayidx.i1279, align 8, !tbaa !219
  %inc.i1280 = add nsw i32 %322, 1
  store i32 %inc.i1280, ptr %m_size.i.i.i1166, align 4, !tbaa !319
  %indvars.iv.next1896 = add nuw nsw i64 %indvars.iv1895, 1
  %324 = sext i32 %320 to i64
  %cmp393 = icmp slt i64 %indvars.iv.next1896, %324
  br i1 %cmp393, label %for.body395, label %for.cond.cleanup394

lpad399:                                          ; preds = %if.then3.i.i.i1274, %if.then.i.i.i1254
  %325 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup443

if.end422:                                        ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE9push_backERKS2_.exit, %for.end371
  %326 = phi i32 [ %inc.i1233, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE9push_backERKS2_.exit ], [ %264, %for.end371 ]
  %cmp4271821 = icmp sgt i32 %326, 0
  br i1 %cmp4271821, label %for.body428.lr.ph, label %for.end441

for.body428.lr.ph:                                ; preds = %if.end422
  %m_cdbvt.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  br label %for.body428

for.body428:                                      ; preds = %for.body428.lr.ph, %for.inc439
  %327 = phi i32 [ %326, %for.body428.lr.ph ], [ %339, %for.inc439 ]
  %i17.31822 = phi i32 [ 0, %for.body428.lr.ph ], [ %inc440, %for.inc439 ]
  %328 = load ptr, ptr %m_data.i829, align 8, !tbaa !123
  %idxprom.i1292 = sext i32 %i17.31822 to i64
  %arrayidx.i1293 = getelementptr inbounds ptr, ptr %328, i64 %idxprom.i1292
  %329 = load ptr, ptr %arrayidx.i1293, align 8, !tbaa !219
  %m_size.i1294 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %329, i64 0, i32 2
  %330 = load i32, ptr %m_size.i1294, align 4, !tbaa !319
  %cmp435 = icmp eq i32 %330, 0
  br i1 %cmp435, label %if.then436, label %for.inc439

if.then436:                                       ; preds = %for.body428
  %dec = add nsw i32 %i17.31822, -1
  %m_leaf.i1297 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %329, i64 0, i32 15
  %331 = load ptr, ptr %m_leaf.i1297, align 8, !tbaa !221
  %tobool.not.i = icmp eq ptr %331, null
  br i1 %tobool.not.i, label %if.end.i1299, label %if.then.i1298

if.then.i1298:                                    ; preds = %if.then436
  invoke void @_ZN6btDbvt6removeEP10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt.i, ptr noundef nonnull %331)
          to label %if.end.i1299 unwind label %lpad216

if.end.i1299:                                     ; preds = %if.then.i1298, %if.then436
  invoke void @_ZN10btSoftBody7ClusterD2Ev(ptr noundef nonnull align 8 dereferenceable(424) %329)
          to label %.noexc1311 unwind label %lpad216

.noexc1311:                                       ; preds = %if.end.i1299
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %329)
          to label %.noexc1312 unwind label %lpad216

.noexc1312:                                       ; preds = %.noexc1311
  %332 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp8.i.i.i = icmp sgt i32 %332, 0
  br i1 %cmp8.i.i.i, label %for.body.lr.ph.i.i.i1301, label %for.inc439

for.body.lr.ph.i.i.i1301:                         ; preds = %.noexc1312
  %333 = load ptr, ptr %m_data.i829, align 8, !tbaa !123
  %wide.trip.count.i.i.i1300 = zext i32 %332 to i64
  br label %for.body.i.i.i1304

for.body.i.i.i1304:                               ; preds = %for.inc.i.i.i, %for.body.lr.ph.i.i.i1301
  %indvars.iv.i.i.i1302 = phi i64 [ 0, %for.body.lr.ph.i.i.i1301 ], [ %indvars.iv.next.i.i.i1305, %for.inc.i.i.i ]
  %arrayidx.i.i.i1303 = getelementptr inbounds ptr, ptr %333, i64 %indvars.iv.i.i.i1302
  %334 = load ptr, ptr %arrayidx.i.i.i1303, align 8, !tbaa !219
  %cmp3.i.i.i = icmp eq ptr %334, %329
  br i1 %cmp3.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i, label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %for.body.i.i.i1304
  %indvars.iv.next.i.i.i1305 = add nuw nsw i64 %indvars.iv.i.i.i1302, 1
  %exitcond.not.i.i.i1306 = icmp eq i64 %indvars.iv.next.i.i.i1305, %wide.trip.count.i.i.i1300
  br i1 %exitcond.not.i.i.i1306, label %for.inc439, label %for.body.i.i.i1304

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i: ; preds = %for.body.i.i.i1304
  %335 = trunc i64 %indvars.iv.i.i.i1302 to i32
  %cmp.i.i1307 = icmp sgt i32 %332, %335
  br i1 %cmp.i.i1307, label %if.then.i.i1309, label %for.inc439

if.then.i.i1309:                                  ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i
  %sub.i.i1308 = add nsw i32 %332, -1
  %sext.i.i = shl i64 %indvars.iv.i.i.i1302, 32
  %idxprom.i.i.i = ashr exact i64 %sext.i.i, 32
  %arrayidx.i7.i.i = getelementptr inbounds ptr, ptr %333, i64 %idxprom.i.i.i
  %336 = load ptr, ptr %arrayidx.i7.i.i, align 8, !tbaa !219
  %idxprom3.i.i.i = sext i32 %sub.i.i1308 to i64
  %arrayidx4.i.i.i = getelementptr inbounds ptr, ptr %333, i64 %idxprom3.i.i.i
  %337 = load ptr, ptr %arrayidx4.i.i.i, align 8, !tbaa !219
  store ptr %337, ptr %arrayidx.i7.i.i, align 8, !tbaa !219
  %338 = load ptr, ptr %m_data.i829, align 8, !tbaa !123
  %arrayidx10.i.i.i = getelementptr inbounds ptr, ptr %338, i64 %idxprom3.i.i.i
  store ptr %336, ptr %arrayidx10.i.i.i, align 8, !tbaa !219
  store i32 %sub.i.i1308, ptr %m_size.i.i, align 4, !tbaa !124
  br label %for.inc439

for.inc439:                                       ; preds = %for.inc.i.i.i, %if.then.i.i1309, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i, %.noexc1312, %for.body428
  %339 = phi i32 [ %327, %for.body428 ], [ %332, %.noexc1312 ], [ %332, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i ], [ %sub.i.i1308, %if.then.i.i1309 ], [ %332, %for.inc.i.i.i ]
  %i17.4 = phi i32 [ %i17.31822, %for.body428 ], [ %dec, %.noexc1312 ], [ %dec, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE16findLinearSearchERKS2_.exit.i.i ], [ %dec, %if.then.i.i1309 ], [ %dec, %for.inc.i.i.i ]
  %inc440 = add nsw i32 %i17.4, 1
  %cmp427 = icmp slt i32 %inc440, %339
  br i1 %cmp427, label %for.body428, label %for.end441

for.end441:                                       ; preds = %for.inc439, %if.end422
  %tobool.not.i.i.i1314 = icmp eq ptr %cids.sroa.151655.1, null
  br i1 %tobool.not.i.i.i1314, label %invoke.cont442, label %if.then3.i.i.i1318

if.then3.i.i.i1318:                               ; preds = %for.end441
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %cids.sroa.151655.1)
          to label %invoke.cont442 unwind label %lpad213

invoke.cont442:                                   ; preds = %for.end441, %if.then3.i.i.i1318
  %tobool.not.i.i.i1322 = icmp eq ptr %call.i.i.i.i793822, null
  br i1 %tobool.not.i.i.i1322, label %if.end543, label %if.then3.i.i.i1326

if.then3.i.i.i1326:                               ; preds = %invoke.cont442
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %call.i.i.i.i793822)
  br label %if.end543

ehcleanup443:                                     ; preds = %lpad377, %lpad399, %lpad351, %lpad216
  %.pn1723 = phi { ptr, i32 } [ %235, %lpad351 ], [ %193, %lpad216 ], [ %325, %lpad399 ], [ %301, %lpad377 ]
  %tobool.not.i.i.i1330 = icmp eq ptr %cids.sroa.151655.1, null
  br i1 %tobool.not.i.i.i1330, label %ehcleanup449, label %if.then3.i.i.i1334

if.then3.i.i.i1334:                               ; preds = %ehcleanup443
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %cids.sroa.151655.1)
          to label %ehcleanup449 unwind label %terminate.lpad

ehcleanup449:                                     ; preds = %lpad198, %ehcleanup443, %if.then3.i.i.i1334, %lpad213, %ehcleanup443.thread
  %.pn1727.pn = phi { ptr, i32 } [ %177, %lpad198 ], [ %192, %lpad213 ], [ %.pn1723, %if.then3.i.i.i1334 ], [ %.pn1723, %ehcleanup443 ], [ %194, %ehcleanup443.thread ]
  %exn.slot.6 = extractvalue { ptr, i32 } %.pn1727.pn, 0
  %ehselector.slot.6 = extractvalue { ptr, i32 } %.pn1727.pn, 1
  %tobool.not.i.i.i1340 = icmp eq ptr %call.i.i.i.i793822, null
  br i1 %tobool.not.i.i.i1340, label %invoke.cont452, label %if.then3.i.i.i1344

if.then3.i.i.i1344:                               ; preds = %ehcleanup449.thread1741, %ehcleanup449
  %ehselector.slot.61747 = phi i32 [ %ehselector.slot.61744, %ehcleanup449.thread1741 ], [ %ehselector.slot.6, %ehcleanup449 ]
  %exn.slot.61746 = phi ptr [ %exn.slot.61743, %ehcleanup449.thread1741 ], [ %exn.slot.6, %ehcleanup449 ]
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %call.i.i.i.i793822)
          to label %invoke.cont452 unwind label %terminate.lpad

invoke.cont452:                                   ; preds = %lpad20, %lpad39, %ehcleanup449, %if.then3.i.i.i1344
  %exn.slot.71740 = phi ptr [ %exn.slot.6, %ehcleanup449 ], [ %exn.slot.61746, %if.then3.i.i.i1344 ], [ %75, %lpad20 ], [ %78, %lpad39 ]
  %ehselector.slot.71739 = phi i32 [ %ehselector.slot.6, %ehcleanup449 ], [ %ehselector.slot.61747, %if.then3.i.i.i1344 ], [ %76, %lpad20 ], [ %79, %lpad39 ]
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn.slot.71740, 0
  %lpad.val624 = insertvalue { ptr, i32 } %lpad.val, i32 %ehselector.slot.71739, 1
  resume { ptr, i32 } %lpad.val624

if.else:                                          ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit, %for.end
  %.lcssa17681934 = phi i32 [ %.pr, %for.end ], [ %.sroa.speculated1717, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit ]
  %m_size.i1349 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 2
  %340 = load i32, ptr %m_size.i1349, align 4, !tbaa !100
  %tobool455.not = icmp eq i32 %340, 0
  br i1 %tobool455.not, label %if.else499, label %if.then456

if.then456:                                       ; preds = %if.else
  %cmp4.i1353 = icmp slt i32 %.lcssa17681934, %340
  br i1 %cmp4.i1353, label %if.then5.i1357, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1393

if.then5.i1357:                                   ; preds = %if.then456
  %m_capacity.i.i.i1355 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 3
  %341 = load i32, ptr %m_capacity.i.i.i1355, align 8, !tbaa !125
  %cmp.i.i1356 = icmp slt i32 %341, %340
  %conv.i.i.i.i1360 = sext i32 %340 to i64
  br i1 %cmp.i.i1356, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1367, label %for.body10.lr.ph.i1387

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1367: ; preds = %if.then5.i1357
  %mul.i.i.i.i1361 = shl nsw i64 %conv.i.i.i.i1360, 3
  %call.i.i.i.i1362 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1361, i32 noundef 16)
  %.pre.i1363 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp7.i.i.i1366 = icmp sgt i32 %.pre.i1363, 0
  br i1 %cmp7.i.i.i1366, label %for.body.lr.ph.i.i.i1370, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1382

for.body.lr.ph.i.i.i1370:                         ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1367
  %m_data.i.i.i1368 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %wide.trip.count.i.i.i1369 = zext i32 %.pre.i1363 to i64
  %xtraiter1990 = and i64 %wide.trip.count.i.i.i1369, 3
  %342 = icmp ult i32 %.pre.i1363, 4
  br i1 %342, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1382.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1370.new

for.body.lr.ph.i.i.i1370.new:                     ; preds = %for.body.lr.ph.i.i.i1370
  %unroll_iter1993 = and i64 %wide.trip.count.i.i.i1369, 4294967292
  br label %for.body.i.i.i1376

for.body.i.i.i1376:                               ; preds = %for.body.i.i.i1376, %for.body.lr.ph.i.i.i1370.new
  %indvars.iv.i.i.i1371 = phi i64 [ 0, %for.body.lr.ph.i.i.i1370.new ], [ %indvars.iv.next.i.i.i1374.3, %for.body.i.i.i1376 ]
  %niter1994 = phi i64 [ 0, %for.body.lr.ph.i.i.i1370.new ], [ %niter1994.next.3, %for.body.i.i.i1376 ]
  %arrayidx.i.i.i1372 = getelementptr inbounds ptr, ptr %call.i.i.i.i1362, i64 %indvars.iv.i.i.i1371
  %343 = load ptr, ptr %m_data.i.i.i1368, align 8, !tbaa !123
  %arrayidx3.i.i.i1373 = getelementptr inbounds ptr, ptr %343, i64 %indvars.iv.i.i.i1371
  %344 = load ptr, ptr %arrayidx3.i.i.i1373, align 8, !tbaa !219
  store ptr %344, ptr %arrayidx.i.i.i1372, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1374 = or i64 %indvars.iv.i.i.i1371, 1
  %arrayidx.i.i.i1372.1 = getelementptr inbounds ptr, ptr %call.i.i.i.i1362, i64 %indvars.iv.next.i.i.i1374
  %345 = load ptr, ptr %m_data.i.i.i1368, align 8, !tbaa !123
  %arrayidx3.i.i.i1373.1 = getelementptr inbounds ptr, ptr %345, i64 %indvars.iv.next.i.i.i1374
  %346 = load ptr, ptr %arrayidx3.i.i.i1373.1, align 8, !tbaa !219
  store ptr %346, ptr %arrayidx.i.i.i1372.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1374.1 = or i64 %indvars.iv.i.i.i1371, 2
  %arrayidx.i.i.i1372.2 = getelementptr inbounds ptr, ptr %call.i.i.i.i1362, i64 %indvars.iv.next.i.i.i1374.1
  %347 = load ptr, ptr %m_data.i.i.i1368, align 8, !tbaa !123
  %arrayidx3.i.i.i1373.2 = getelementptr inbounds ptr, ptr %347, i64 %indvars.iv.next.i.i.i1374.1
  %348 = load ptr, ptr %arrayidx3.i.i.i1373.2, align 8, !tbaa !219
  store ptr %348, ptr %arrayidx.i.i.i1372.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1374.2 = or i64 %indvars.iv.i.i.i1371, 3
  %arrayidx.i.i.i1372.3 = getelementptr inbounds ptr, ptr %call.i.i.i.i1362, i64 %indvars.iv.next.i.i.i1374.2
  %349 = load ptr, ptr %m_data.i.i.i1368, align 8, !tbaa !123
  %arrayidx3.i.i.i1373.3 = getelementptr inbounds ptr, ptr %349, i64 %indvars.iv.next.i.i.i1374.2
  %350 = load ptr, ptr %arrayidx3.i.i.i1373.3, align 8, !tbaa !219
  store ptr %350, ptr %arrayidx.i.i.i1372.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1374.3 = add nuw nsw i64 %indvars.iv.i.i.i1371, 4
  %niter1994.next.3 = add i64 %niter1994, 4
  %niter1994.ncmp.3 = icmp eq i64 %niter1994.next.3, %unroll_iter1993
  br i1 %niter1994.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1382.loopexit.unr-lcssa, label %for.body.i.i.i1376

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1382.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1376, %for.body.lr.ph.i.i.i1370
  %indvars.iv.i.i.i1371.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1370 ], [ %indvars.iv.next.i.i.i1374.3, %for.body.i.i.i1376 ]
  %lcmp.mod1992.not = icmp eq i64 %xtraiter1990, 0
  br i1 %lcmp.mod1992.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1382, label %for.body.i.i.i1376.epil

for.body.i.i.i1376.epil:                          ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1382.loopexit.unr-lcssa, %for.body.i.i.i1376.epil
  %indvars.iv.i.i.i1371.epil = phi i64 [ %indvars.iv.next.i.i.i1374.epil, %for.body.i.i.i1376.epil ], [ %indvars.iv.i.i.i1371.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1382.loopexit.unr-lcssa ]
  %epil.iter1991 = phi i64 [ %epil.iter1991.next, %for.body.i.i.i1376.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1382.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1372.epil = getelementptr inbounds ptr, ptr %call.i.i.i.i1362, i64 %indvars.iv.i.i.i1371.epil
  %351 = load ptr, ptr %m_data.i.i.i1368, align 8, !tbaa !123
  %arrayidx3.i.i.i1373.epil = getelementptr inbounds ptr, ptr %351, i64 %indvars.iv.i.i.i1371.epil
  %352 = load ptr, ptr %arrayidx3.i.i.i1373.epil, align 8, !tbaa !219
  store ptr %352, ptr %arrayidx.i.i.i1372.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1374.epil = add nuw nsw i64 %indvars.iv.i.i.i1371.epil, 1
  %epil.iter1991.next = add i64 %epil.iter1991, 1
  %epil.iter1991.cmp.not = icmp eq i64 %epil.iter1991.next, %xtraiter1990
  br i1 %epil.iter1991.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1382, label %for.body.i.i.i1376.epil, !llvm.loop !356

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1382: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1382.loopexit.unr-lcssa, %for.body.i.i.i1376.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1367
  %m_data.i9.i.i1377 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %353 = load ptr, ptr %m_data.i9.i.i1377, align 8, !tbaa !123
  %tobool.not.i10.i.i1378 = icmp eq ptr %353, null
  %m_ownsMemory.i.i.i1379 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 6
  %354 = load i8, ptr %m_ownsMemory.i.i.i1379, align 8, !range !159
  %tobool2.not.i.i.i1380 = icmp eq i8 %354, 0
  %or.cond.i.i1381 = select i1 %tobool.not.i10.i.i1378, i1 true, i1 %tobool2.not.i.i.i1380
  br i1 %or.cond.i.i1381, label %if.end.i1384, label %if.then3.i.i.i1383

if.then3.i.i.i1383:                               ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1382
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %353)
  br label %if.end.i1384

if.end.i1384:                                     ; preds = %if.then3.i.i.i1383, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1382
  store i8 1, ptr %m_ownsMemory.i.i.i1379, align 8, !tbaa !122
  store ptr %call.i.i.i.i1362, ptr %m_data.i9.i.i1377, align 8, !tbaa !123
  store i32 %340, ptr %m_capacity.i.i.i1355, align 8, !tbaa !125
  br label %for.body10.lr.ph.i1387

for.body10.lr.ph.i1387:                           ; preds = %if.then5.i1357, %if.end.i1384
  %m_data11.i1385 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %355 = sext i32 %.lcssa17681934 to i64
  %356 = sub nsw i64 %conv.i.i.i.i1360, %355
  %357 = xor i64 %355, -1
  %358 = add nsw i64 %357, %conv.i.i.i.i1360
  %xtraiter1995 = and i64 %356, 3
  %lcmp.mod1996.not = icmp eq i64 %xtraiter1995, 0
  br i1 %lcmp.mod1996.not, label %for.body10.i1392.prol.loopexit, label %for.body10.i1392.prol

for.body10.i1392.prol:                            ; preds = %for.body10.lr.ph.i1387, %for.body10.i1392.prol
  %indvars.iv.i1388.prol = phi i64 [ %indvars.iv.next.i1390.prol, %for.body10.i1392.prol ], [ %355, %for.body10.lr.ph.i1387 ]
  %prol.iter1997 = phi i64 [ %prol.iter1997.next, %for.body10.i1392.prol ], [ 0, %for.body10.lr.ph.i1387 ]
  %359 = load ptr, ptr %m_data11.i1385, align 8, !tbaa !123
  %arrayidx13.i1389.prol = getelementptr inbounds ptr, ptr %359, i64 %indvars.iv.i1388.prol
  store ptr null, ptr %arrayidx13.i1389.prol, align 8, !tbaa !219
  %indvars.iv.next.i1390.prol = add nsw i64 %indvars.iv.i1388.prol, 1
  %prol.iter1997.next = add i64 %prol.iter1997, 1
  %prol.iter1997.cmp.not = icmp eq i64 %prol.iter1997.next, %xtraiter1995
  br i1 %prol.iter1997.cmp.not, label %for.body10.i1392.prol.loopexit, label %for.body10.i1392.prol, !llvm.loop !357

for.body10.i1392.prol.loopexit:                   ; preds = %for.body10.i1392.prol, %for.body10.lr.ph.i1387
  %indvars.iv.i1388.unr = phi i64 [ %355, %for.body10.lr.ph.i1387 ], [ %indvars.iv.next.i1390.prol, %for.body10.i1392.prol ]
  %360 = icmp ult i64 %358, 3
  br i1 %360, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1393, label %for.body10.i1392

for.body10.i1392:                                 ; preds = %for.body10.i1392.prol.loopexit, %for.body10.i1392
  %indvars.iv.i1388 = phi i64 [ %indvars.iv.next.i1390.3, %for.body10.i1392 ], [ %indvars.iv.i1388.unr, %for.body10.i1392.prol.loopexit ]
  %361 = load ptr, ptr %m_data11.i1385, align 8, !tbaa !123
  %arrayidx13.i1389 = getelementptr inbounds ptr, ptr %361, i64 %indvars.iv.i1388
  store ptr null, ptr %arrayidx13.i1389, align 8, !tbaa !219
  %indvars.iv.next.i1390 = add nsw i64 %indvars.iv.i1388, 1
  %362 = load ptr, ptr %m_data11.i1385, align 8, !tbaa !123
  %arrayidx13.i1389.1 = getelementptr inbounds ptr, ptr %362, i64 %indvars.iv.next.i1390
  store ptr null, ptr %arrayidx13.i1389.1, align 8, !tbaa !219
  %indvars.iv.next.i1390.1 = add nsw i64 %indvars.iv.i1388, 2
  %363 = load ptr, ptr %m_data11.i1385, align 8, !tbaa !123
  %arrayidx13.i1389.2 = getelementptr inbounds ptr, ptr %363, i64 %indvars.iv.next.i1390.1
  store ptr null, ptr %arrayidx13.i1389.2, align 8, !tbaa !219
  %indvars.iv.next.i1390.2 = add nsw i64 %indvars.iv.i1388, 3
  %364 = load ptr, ptr %m_data11.i1385, align 8, !tbaa !123
  %arrayidx13.i1389.3 = getelementptr inbounds ptr, ptr %364, i64 %indvars.iv.next.i1390.2
  store ptr null, ptr %arrayidx13.i1389.3, align 8, !tbaa !219
  %indvars.iv.next.i1390.3 = add nsw i64 %indvars.iv.i1388, 4
  %exitcond.not.i1391.3 = icmp eq i64 %indvars.iv.next.i1390.3, %conv.i.i.i.i1360
  br i1 %exitcond.not.i1391.3, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1393, label %for.body10.i1392

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1393: ; preds = %for.body10.i1392.prol.loopexit, %for.body10.i1392, %if.then456
  store i32 %340, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp4641772 = icmp sgt i32 %340, 0
  br i1 %cmp4641772, label %for.body465.lr.ph, label %for.cond475.preheader

for.body465.lr.ph:                                ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1393
  %m_data.i1411 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  br label %for.body465

for.cond475.preheader:                            ; preds = %for.body465, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1393
  %365 = load i32, ptr %m_size.i1349, align 4, !tbaa !100
  %cmp4781775 = icmp sgt i32 %365, 0
  br i1 %cmp4781775, label %for.cond481.preheader.lr.ph, label %if.end543

for.cond481.preheader.lr.ph:                      ; preds = %for.cond475.preheader
  %m_data.i1418 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %m_data.i1421 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 12, i32 5
  br label %for.cond481.preheader

for.body465:                                      ; preds = %for.body465.lr.ph, %for.body465
  %indvars.iv1843 = phi i64 [ 0, %for.body465.lr.ph ], [ %indvars.iv.next1844, %for.body465 ]
  %call466 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 424, i32 noundef 16)
  %m_ownsMemory.i.i.i1395 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call466, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i.i1395, align 8, !tbaa !341
  %m_data.i.i.i1396 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call466, i64 0, i32 5
  store ptr null, ptr %m_data.i.i.i1396, align 8, !tbaa !320
  %m_size.i.i.i1397 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call466, i64 0, i32 2
  store i32 0, ptr %m_size.i.i.i1397, align 4, !tbaa !319
  %m_capacity.i.i.i1398 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call466, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i1398, align 8, !tbaa !342
  %m_ownsMemory.i.i25.i1399 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 1, i32 6
  store i8 1, ptr %m_ownsMemory.i.i25.i1399, align 8, !tbaa !36
  %m_data.i.i26.i1400 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 1, i32 5
  store ptr null, ptr %m_data.i.i26.i1400, align 8, !tbaa !39
  %m_size.i.i27.i1401 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 1, i32 2
  store i32 0, ptr %m_size.i.i27.i1401, align 4, !tbaa !40
  %m_capacity.i.i28.i1402 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 1, i32 3
  store i32 0, ptr %m_capacity.i.i28.i1402, align 8, !tbaa !41
  %m_ownsMemory.i.i29.i1403 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 2, i32 6
  store i8 1, ptr %m_ownsMemory.i.i29.i1403, align 8, !tbaa !30
  %m_data.i.i30.i1404 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 2, i32 5
  store ptr null, ptr %m_data.i.i30.i1404, align 8, !tbaa !33
  %m_size.i.i31.i1405 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 2, i32 2
  store i32 0, ptr %m_size.i.i31.i1405, align 4, !tbaa !34
  %m_capacity.i.i32.i1406 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 2, i32 3
  store i32 0, ptr %m_capacity.i.i32.i1406, align 8, !tbaa !35
  %m_leaf.i1407 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 15
  %m_maxSelfCollisionImpulse.i1408 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 20
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %m_leaf.i1407, i8 0, i64 24, i1 false)
  store <2 x float> <float 1.000000e+02, float 0x3F847AE140000000>, ptr %m_maxSelfCollisionImpulse.i1408, align 8, !tbaa !137
  %m_containsAnchor.i1410 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call466, i64 0, i32 22
  store i8 0, ptr %m_containsAnchor.i1410, align 8, !tbaa !345
  %366 = load ptr, ptr %m_data.i1411, align 8, !tbaa !123
  %arrayidx.i1413 = getelementptr inbounds ptr, ptr %366, i64 %indvars.iv1843
  store ptr %call466, ptr %arrayidx.i1413, align 8, !tbaa !219
  %367 = load ptr, ptr %m_data.i1411, align 8, !tbaa !123
  %arrayidx.i1416 = getelementptr inbounds ptr, ptr %367, i64 %indvars.iv1843
  %368 = load ptr, ptr %arrayidx.i1416, align 8, !tbaa !219
  %m_collide471 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %368, i64 0, i32 23
  store i8 1, ptr %m_collide471, align 1, !tbaa !346
  %indvars.iv.next1844 = add nuw nsw i64 %indvars.iv1843, 1
  %369 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %370 = sext i32 %369 to i64
  %cmp464 = icmp slt i64 %indvars.iv.next1844, %370
  br i1 %cmp464, label %for.body465, label %for.cond475.preheader

for.cond481.preheader:                            ; preds = %for.cond481.preheader.lr.ph, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.3
  %indvars.iv1849 = phi i64 [ 0, %for.cond481.preheader.lr.ph ], [ %indvars.iv.next1850, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.3 ]
  %371 = load ptr, ptr %m_data.i1418, align 8, !tbaa !123
  %arrayidx.i1420 = getelementptr inbounds ptr, ptr %371, i64 %indvars.iv1849
  %372 = load ptr, ptr %arrayidx.i1420, align 8, !tbaa !219
  %373 = load ptr, ptr %m_data.i1421, align 8, !tbaa !99
  %arrayidx492 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %373, i64 %indvars.iv1849, i32 1, i64 0
  %m_size.i.i1424 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %372, i64 0, i32 2
  %374 = load i32, ptr %m_size.i.i1424, align 4, !tbaa !319
  %m_capacity.i.i1425 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %372, i64 0, i32 3
  %375 = load i32, ptr %m_capacity.i.i1425, align 8, !tbaa !342
  %cmp.i1426 = icmp eq i32 %374, %375
  br i1 %cmp.i1426, label %if.then.i1431, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466

if.then.i1431:                                    ; preds = %for.cond481.preheader
  %tobool.not.i.i1427 = icmp eq i32 %374, 0
  %mul.i.i1428 = shl nsw i32 %374, 1
  %cond.i.i1429 = select i1 %tobool.not.i.i1427, i32 1, i32 %mul.i.i1428
  %cmp.i.i1430 = icmp slt i32 %374, %cond.i.i1429
  br i1 %cmp.i.i1430, label %if.then.i.i1433, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466

if.then.i.i1433:                                  ; preds = %if.then.i1431
  %tobool.not.i.i.i1432 = icmp eq i32 %cond.i.i1429, 0
  br i1 %tobool.not.i.i.i1432, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441, label %if.then.i.i.i1438

if.then.i.i.i1438:                                ; preds = %if.then.i.i1433
  %conv.i.i.i.i1434 = sext i32 %cond.i.i1429 to i64
  %mul.i.i.i.i1435 = shl nsw i64 %conv.i.i.i.i1434, 3
  %call.i.i.i.i1436 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1435, i32 noundef 16)
  %.pre.i1437 = load i32, ptr %m_size.i.i1424, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441: ; preds = %if.then.i.i.i1438, %if.then.i.i1433
  %376 = phi i32 [ %.pre.i1437, %if.then.i.i.i1438 ], [ %374, %if.then.i.i1433 ]
  %retval.0.i.i.i1439 = phi ptr [ %call.i.i.i.i1436, %if.then.i.i.i1438 ], [ null, %if.then.i.i1433 ]
  %cmp7.i.i.i1440 = icmp sgt i32 %376, 0
  br i1 %cmp7.i.i.i1440, label %for.body.lr.ph.i.i.i1444, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456

for.body.lr.ph.i.i.i1444:                         ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441
  %m_data.i.i.i1442 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %372, i64 0, i32 5
  %wide.trip.count.i.i.i1443 = zext i32 %376 to i64
  %xtraiter1998 = and i64 %wide.trip.count.i.i.i1443, 3
  %377 = icmp ult i32 %376, 4
  br i1 %377, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1444.new

for.body.lr.ph.i.i.i1444.new:                     ; preds = %for.body.lr.ph.i.i.i1444
  %unroll_iter2001 = and i64 %wide.trip.count.i.i.i1443, 4294967292
  br label %for.body.i.i.i1450

for.body.i.i.i1450:                               ; preds = %for.body.i.i.i1450, %for.body.lr.ph.i.i.i1444.new
  %indvars.iv.i.i.i1445 = phi i64 [ 0, %for.body.lr.ph.i.i.i1444.new ], [ %indvars.iv.next.i.i.i1448.32018, %for.body.i.i.i1450 ]
  %niter2002 = phi i64 [ 0, %for.body.lr.ph.i.i.i1444.new ], [ %niter2002.next.3, %for.body.i.i.i1450 ]
  %arrayidx.i.i.i1446 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439, i64 %indvars.iv.i.i.i1445
  %378 = load ptr, ptr %m_data.i.i.i1442, align 8, !tbaa !320
  %arrayidx3.i.i.i1447 = getelementptr inbounds ptr, ptr %378, i64 %indvars.iv.i.i.i1445
  %379 = load ptr, ptr %arrayidx3.i.i.i1447, align 8, !tbaa !219
  store ptr %379, ptr %arrayidx.i.i.i1446, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448 = or i64 %indvars.iv.i.i.i1445, 1
  %arrayidx.i.i.i1446.12004 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439, i64 %indvars.iv.next.i.i.i1448
  %380 = load ptr, ptr %m_data.i.i.i1442, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.12005 = getelementptr inbounds ptr, ptr %380, i64 %indvars.iv.next.i.i.i1448
  %381 = load ptr, ptr %arrayidx3.i.i.i1447.12005, align 8, !tbaa !219
  store ptr %381, ptr %arrayidx.i.i.i1446.12004, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.12006 = or i64 %indvars.iv.i.i.i1445, 2
  %arrayidx.i.i.i1446.22010 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439, i64 %indvars.iv.next.i.i.i1448.12006
  %382 = load ptr, ptr %m_data.i.i.i1442, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.22011 = getelementptr inbounds ptr, ptr %382, i64 %indvars.iv.next.i.i.i1448.12006
  %383 = load ptr, ptr %arrayidx3.i.i.i1447.22011, align 8, !tbaa !219
  store ptr %383, ptr %arrayidx.i.i.i1446.22010, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.22012 = or i64 %indvars.iv.i.i.i1445, 3
  %arrayidx.i.i.i1446.32016 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439, i64 %indvars.iv.next.i.i.i1448.22012
  %384 = load ptr, ptr %m_data.i.i.i1442, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.32017 = getelementptr inbounds ptr, ptr %384, i64 %indvars.iv.next.i.i.i1448.22012
  %385 = load ptr, ptr %arrayidx3.i.i.i1447.32017, align 8, !tbaa !219
  store ptr %385, ptr %arrayidx.i.i.i1446.32016, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.32018 = add nuw nsw i64 %indvars.iv.i.i.i1445, 4
  %niter2002.next.3 = add i64 %niter2002, 4
  %niter2002.ncmp.3 = icmp eq i64 %niter2002.next.3, %unroll_iter2001
  br i1 %niter2002.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.loopexit.unr-lcssa, label %for.body.i.i.i1450

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1450, %for.body.lr.ph.i.i.i1444
  %indvars.iv.i.i.i1445.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1444 ], [ %indvars.iv.next.i.i.i1448.32018, %for.body.i.i.i1450 ]
  %lcmp.mod2000.not = icmp eq i64 %xtraiter1998, 0
  br i1 %lcmp.mod2000.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456, label %for.body.i.i.i1450.epil

for.body.i.i.i1450.epil:                          ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.loopexit.unr-lcssa, %for.body.i.i.i1450.epil
  %indvars.iv.i.i.i1445.epil = phi i64 [ %indvars.iv.next.i.i.i1448.epil, %for.body.i.i.i1450.epil ], [ %indvars.iv.i.i.i1445.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.loopexit.unr-lcssa ]
  %epil.iter1999 = phi i64 [ %epil.iter1999.next, %for.body.i.i.i1450.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1446.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439, i64 %indvars.iv.i.i.i1445.epil
  %386 = load ptr, ptr %m_data.i.i.i1442, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.epil = getelementptr inbounds ptr, ptr %386, i64 %indvars.iv.i.i.i1445.epil
  %387 = load ptr, ptr %arrayidx3.i.i.i1447.epil, align 8, !tbaa !219
  store ptr %387, ptr %arrayidx.i.i.i1446.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.epil = add nuw nsw i64 %indvars.iv.i.i.i1445.epil, 1
  %epil.iter1999.next = add i64 %epil.iter1999, 1
  %epil.iter1999.cmp.not = icmp eq i64 %epil.iter1999.next, %xtraiter1998
  br i1 %epil.iter1999.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456, label %for.body.i.i.i1450.epil, !llvm.loop !358

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.loopexit.unr-lcssa, %for.body.i.i.i1450.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441
  %m_data.i9.i.i1451 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %372, i64 0, i32 5
  %388 = load ptr, ptr %m_data.i9.i.i1451, align 8, !tbaa !320
  %tobool.not.i10.i.i1452 = icmp eq ptr %388, null
  %m_ownsMemory.i.i.i1453 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %372, i64 0, i32 6
  %389 = load i8, ptr %m_ownsMemory.i.i.i1453, align 8, !range !159
  %tobool2.not.i.i.i1454 = icmp eq i8 %389, 0
  %or.cond.i.i1455 = select i1 %tobool.not.i10.i.i1452, i1 true, i1 %tobool2.not.i.i.i1454
  br i1 %or.cond.i.i1455, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460, label %if.then3.i.i.i1458

if.then3.i.i.i1458:                               ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %388)
  %.pre7.pre.i1457 = load i32, ptr %m_size.i.i1424, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460: ; preds = %if.then3.i.i.i1458, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456
  %.pre7.i1459 = phi i32 [ %.pre7.pre.i1457, %if.then3.i.i.i1458 ], [ %376, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1453, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1439, ptr %m_data.i9.i.i1451, align 8, !tbaa !320
  store i32 %cond.i.i1429, ptr %m_capacity.i.i1425, align 8, !tbaa !342
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466: ; preds = %for.cond481.preheader, %if.then.i1431, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460
  %390 = phi i32 [ %.pre7.i1459, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460 ], [ %374, %if.then.i1431 ], [ %374, %for.cond481.preheader ]
  %m_data.i1461 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %372, i64 0, i32 5
  %391 = load ptr, ptr %m_data.i1461, align 8, !tbaa !320
  %idxprom.i1462 = sext i32 %390 to i64
  %arrayidx.i1463 = getelementptr inbounds ptr, ptr %391, i64 %idxprom.i1462
  %392 = load ptr, ptr %arrayidx492, align 8, !tbaa !219
  store ptr %392, ptr %arrayidx.i1463, align 8, !tbaa !219
  %inc.i1464 = add nsw i32 %390, 1
  store i32 %inc.i1464, ptr %m_size.i.i1424, align 4, !tbaa !319
  %393 = load ptr, ptr %m_data.i1418, align 8, !tbaa !123
  %arrayidx.i1420.1 = getelementptr inbounds ptr, ptr %393, i64 %indvars.iv1849
  %394 = load ptr, ptr %arrayidx.i1420.1, align 8, !tbaa !219
  %395 = load ptr, ptr %m_data.i1421, align 8, !tbaa !99
  %arrayidx492.1 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %395, i64 %indvars.iv1849, i32 1, i64 1
  %m_size.i.i1424.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %394, i64 0, i32 2
  %396 = load i32, ptr %m_size.i.i1424.1, align 4, !tbaa !319
  %m_capacity.i.i1425.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %394, i64 0, i32 3
  %397 = load i32, ptr %m_capacity.i.i1425.1, align 8, !tbaa !342
  %cmp.i1426.1 = icmp eq i32 %396, %397
  br i1 %cmp.i1426.1, label %if.then.i1431.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.1

if.then.i1431.1:                                  ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466
  %tobool.not.i.i1427.1 = icmp eq i32 %396, 0
  %mul.i.i1428.1 = shl nsw i32 %396, 1
  %cond.i.i1429.1 = select i1 %tobool.not.i.i1427.1, i32 1, i32 %mul.i.i1428.1
  %cmp.i.i1430.1 = icmp slt i32 %396, %cond.i.i1429.1
  br i1 %cmp.i.i1430.1, label %if.then.i.i1433.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.1

if.then.i.i1433.1:                                ; preds = %if.then.i1431.1
  %tobool.not.i.i.i1432.1 = icmp eq i32 %cond.i.i1429.1, 0
  br i1 %tobool.not.i.i.i1432.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441.1, label %if.then.i.i.i1438.1

if.then.i.i.i1438.1:                              ; preds = %if.then.i.i1433.1
  %conv.i.i.i.i1434.1 = sext i32 %cond.i.i1429.1 to i64
  %mul.i.i.i.i1435.1 = shl nsw i64 %conv.i.i.i.i1434.1, 3
  %call.i.i.i.i1436.1 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1435.1, i32 noundef 16)
  %.pre.i1437.1 = load i32, ptr %m_size.i.i1424.1, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441.1

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441.1: ; preds = %if.then.i.i.i1438.1, %if.then.i.i1433.1
  %398 = phi i32 [ %.pre.i1437.1, %if.then.i.i.i1438.1 ], [ %396, %if.then.i.i1433.1 ]
  %retval.0.i.i.i1439.1 = phi ptr [ %call.i.i.i.i1436.1, %if.then.i.i.i1438.1 ], [ null, %if.then.i.i1433.1 ]
  %cmp7.i.i.i1440.1 = icmp sgt i32 %398, 0
  br i1 %cmp7.i.i.i1440.1, label %for.body.lr.ph.i.i.i1444.1, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.1

for.body.lr.ph.i.i.i1444.1:                       ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441.1
  %m_data.i.i.i1442.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %394, i64 0, i32 5
  %wide.trip.count.i.i.i1443.1 = zext i32 %398 to i64
  %xtraiter2021 = and i64 %wide.trip.count.i.i.i1443.1, 3
  %399 = icmp ult i32 %398, 4
  br i1 %399, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.1.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1444.1.new

for.body.lr.ph.i.i.i1444.1.new:                   ; preds = %for.body.lr.ph.i.i.i1444.1
  %unroll_iter2024 = and i64 %wide.trip.count.i.i.i1443.1, 4294967292
  br label %for.body.i.i.i1450.1

for.body.i.i.i1450.1:                             ; preds = %for.body.i.i.i1450.1, %for.body.lr.ph.i.i.i1444.1.new
  %indvars.iv.i.i.i1445.1 = phi i64 [ 0, %for.body.lr.ph.i.i.i1444.1.new ], [ %indvars.iv.next.i.i.i1448.1.3, %for.body.i.i.i1450.1 ]
  %niter2025 = phi i64 [ 0, %for.body.lr.ph.i.i.i1444.1.new ], [ %niter2025.next.3, %for.body.i.i.i1450.1 ]
  %arrayidx.i.i.i1446.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439.1, i64 %indvars.iv.i.i.i1445.1
  %400 = load ptr, ptr %m_data.i.i.i1442.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.1 = getelementptr inbounds ptr, ptr %400, i64 %indvars.iv.i.i.i1445.1
  %401 = load ptr, ptr %arrayidx3.i.i.i1447.1, align 8, !tbaa !219
  store ptr %401, ptr %arrayidx.i.i.i1446.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.1 = or i64 %indvars.iv.i.i.i1445.1, 1
  %arrayidx.i.i.i1446.1.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439.1, i64 %indvars.iv.next.i.i.i1448.1
  %402 = load ptr, ptr %m_data.i.i.i1442.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.1.1 = getelementptr inbounds ptr, ptr %402, i64 %indvars.iv.next.i.i.i1448.1
  %403 = load ptr, ptr %arrayidx3.i.i.i1447.1.1, align 8, !tbaa !219
  store ptr %403, ptr %arrayidx.i.i.i1446.1.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.1.1 = or i64 %indvars.iv.i.i.i1445.1, 2
  %arrayidx.i.i.i1446.1.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439.1, i64 %indvars.iv.next.i.i.i1448.1.1
  %404 = load ptr, ptr %m_data.i.i.i1442.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.1.2 = getelementptr inbounds ptr, ptr %404, i64 %indvars.iv.next.i.i.i1448.1.1
  %405 = load ptr, ptr %arrayidx3.i.i.i1447.1.2, align 8, !tbaa !219
  store ptr %405, ptr %arrayidx.i.i.i1446.1.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.1.2 = or i64 %indvars.iv.i.i.i1445.1, 3
  %arrayidx.i.i.i1446.1.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439.1, i64 %indvars.iv.next.i.i.i1448.1.2
  %406 = load ptr, ptr %m_data.i.i.i1442.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.1.3 = getelementptr inbounds ptr, ptr %406, i64 %indvars.iv.next.i.i.i1448.1.2
  %407 = load ptr, ptr %arrayidx3.i.i.i1447.1.3, align 8, !tbaa !219
  store ptr %407, ptr %arrayidx.i.i.i1446.1.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.1.3 = add nuw nsw i64 %indvars.iv.i.i.i1445.1, 4
  %niter2025.next.3 = add i64 %niter2025, 4
  %niter2025.ncmp.3 = icmp eq i64 %niter2025.next.3, %unroll_iter2024
  br i1 %niter2025.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.1.loopexit.unr-lcssa, label %for.body.i.i.i1450.1

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.1.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1450.1, %for.body.lr.ph.i.i.i1444.1
  %indvars.iv.i.i.i1445.1.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1444.1 ], [ %indvars.iv.next.i.i.i1448.1.3, %for.body.i.i.i1450.1 ]
  %lcmp.mod2023.not = icmp eq i64 %xtraiter2021, 0
  br i1 %lcmp.mod2023.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.1, label %for.body.i.i.i1450.1.epil

for.body.i.i.i1450.1.epil:                        ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.1.loopexit.unr-lcssa, %for.body.i.i.i1450.1.epil
  %indvars.iv.i.i.i1445.1.epil = phi i64 [ %indvars.iv.next.i.i.i1448.1.epil, %for.body.i.i.i1450.1.epil ], [ %indvars.iv.i.i.i1445.1.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.1.loopexit.unr-lcssa ]
  %epil.iter2022 = phi i64 [ %epil.iter2022.next, %for.body.i.i.i1450.1.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.1.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1446.1.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439.1, i64 %indvars.iv.i.i.i1445.1.epil
  %408 = load ptr, ptr %m_data.i.i.i1442.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.1.epil = getelementptr inbounds ptr, ptr %408, i64 %indvars.iv.i.i.i1445.1.epil
  %409 = load ptr, ptr %arrayidx3.i.i.i1447.1.epil, align 8, !tbaa !219
  store ptr %409, ptr %arrayidx.i.i.i1446.1.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.1.epil = add nuw nsw i64 %indvars.iv.i.i.i1445.1.epil, 1
  %epil.iter2022.next = add i64 %epil.iter2022, 1
  %epil.iter2022.cmp.not = icmp eq i64 %epil.iter2022.next, %xtraiter2021
  br i1 %epil.iter2022.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.1, label %for.body.i.i.i1450.1.epil, !llvm.loop !359

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.1: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.1.loopexit.unr-lcssa, %for.body.i.i.i1450.1.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441.1
  %m_data.i9.i.i1451.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %394, i64 0, i32 5
  %410 = load ptr, ptr %m_data.i9.i.i1451.1, align 8, !tbaa !320
  %tobool.not.i10.i.i1452.1 = icmp eq ptr %410, null
  %m_ownsMemory.i.i.i1453.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %394, i64 0, i32 6
  %411 = load i8, ptr %m_ownsMemory.i.i.i1453.1, align 8, !range !159
  %tobool2.not.i.i.i1454.1 = icmp eq i8 %411, 0
  %or.cond.i.i1455.1 = select i1 %tobool.not.i10.i.i1452.1, i1 true, i1 %tobool2.not.i.i.i1454.1
  br i1 %or.cond.i.i1455.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460.1, label %if.then3.i.i.i1458.1

if.then3.i.i.i1458.1:                             ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.1
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %410)
  %.pre7.pre.i1457.1 = load i32, ptr %m_size.i.i1424.1, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460.1

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460.1: ; preds = %if.then3.i.i.i1458.1, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.1
  %.pre7.i1459.1 = phi i32 [ %.pre7.pre.i1457.1, %if.then3.i.i.i1458.1 ], [ %398, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.1 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1453.1, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1439.1, ptr %m_data.i9.i.i1451.1, align 8, !tbaa !320
  store i32 %cond.i.i1429.1, ptr %m_capacity.i.i1425.1, align 8, !tbaa !342
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.1

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.1: ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460.1, %if.then.i1431.1, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466
  %412 = phi i32 [ %.pre7.i1459.1, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460.1 ], [ %396, %if.then.i1431.1 ], [ %396, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466 ]
  %m_data.i1461.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %394, i64 0, i32 5
  %413 = load ptr, ptr %m_data.i1461.1, align 8, !tbaa !320
  %idxprom.i1462.1 = sext i32 %412 to i64
  %arrayidx.i1463.1 = getelementptr inbounds ptr, ptr %413, i64 %idxprom.i1462.1
  %414 = load ptr, ptr %arrayidx492.1, align 8, !tbaa !219
  store ptr %414, ptr %arrayidx.i1463.1, align 8, !tbaa !219
  %inc.i1464.1 = add nsw i32 %412, 1
  store i32 %inc.i1464.1, ptr %m_size.i.i1424.1, align 4, !tbaa !319
  %415 = load ptr, ptr %m_data.i1418, align 8, !tbaa !123
  %arrayidx.i1420.2 = getelementptr inbounds ptr, ptr %415, i64 %indvars.iv1849
  %416 = load ptr, ptr %arrayidx.i1420.2, align 8, !tbaa !219
  %417 = load ptr, ptr %m_data.i1421, align 8, !tbaa !99
  %arrayidx492.2 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %417, i64 %indvars.iv1849, i32 1, i64 2
  %m_size.i.i1424.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %416, i64 0, i32 2
  %418 = load i32, ptr %m_size.i.i1424.2, align 4, !tbaa !319
  %m_capacity.i.i1425.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %416, i64 0, i32 3
  %419 = load i32, ptr %m_capacity.i.i1425.2, align 8, !tbaa !342
  %cmp.i1426.2 = icmp eq i32 %418, %419
  br i1 %cmp.i1426.2, label %if.then.i1431.2, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.2

if.then.i1431.2:                                  ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.1
  %tobool.not.i.i1427.2 = icmp eq i32 %418, 0
  %mul.i.i1428.2 = shl nsw i32 %418, 1
  %cond.i.i1429.2 = select i1 %tobool.not.i.i1427.2, i32 1, i32 %mul.i.i1428.2
  %cmp.i.i1430.2 = icmp slt i32 %418, %cond.i.i1429.2
  br i1 %cmp.i.i1430.2, label %if.then.i.i1433.2, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.2

if.then.i.i1433.2:                                ; preds = %if.then.i1431.2
  %tobool.not.i.i.i1432.2 = icmp eq i32 %cond.i.i1429.2, 0
  br i1 %tobool.not.i.i.i1432.2, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441.2, label %if.then.i.i.i1438.2

if.then.i.i.i1438.2:                              ; preds = %if.then.i.i1433.2
  %conv.i.i.i.i1434.2 = sext i32 %cond.i.i1429.2 to i64
  %mul.i.i.i.i1435.2 = shl nsw i64 %conv.i.i.i.i1434.2, 3
  %call.i.i.i.i1436.2 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1435.2, i32 noundef 16)
  %.pre.i1437.2 = load i32, ptr %m_size.i.i1424.2, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441.2

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441.2: ; preds = %if.then.i.i.i1438.2, %if.then.i.i1433.2
  %420 = phi i32 [ %.pre.i1437.2, %if.then.i.i.i1438.2 ], [ %418, %if.then.i.i1433.2 ]
  %retval.0.i.i.i1439.2 = phi ptr [ %call.i.i.i.i1436.2, %if.then.i.i.i1438.2 ], [ null, %if.then.i.i1433.2 ]
  %cmp7.i.i.i1440.2 = icmp sgt i32 %420, 0
  br i1 %cmp7.i.i.i1440.2, label %for.body.lr.ph.i.i.i1444.2, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.2

for.body.lr.ph.i.i.i1444.2:                       ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441.2
  %m_data.i.i.i1442.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %416, i64 0, i32 5
  %wide.trip.count.i.i.i1443.2 = zext i32 %420 to i64
  %xtraiter2026 = and i64 %wide.trip.count.i.i.i1443.2, 3
  %421 = icmp ult i32 %420, 4
  br i1 %421, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.2.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1444.2.new

for.body.lr.ph.i.i.i1444.2.new:                   ; preds = %for.body.lr.ph.i.i.i1444.2
  %unroll_iter2029 = and i64 %wide.trip.count.i.i.i1443.2, 4294967292
  br label %for.body.i.i.i1450.2

for.body.i.i.i1450.2:                             ; preds = %for.body.i.i.i1450.2, %for.body.lr.ph.i.i.i1444.2.new
  %indvars.iv.i.i.i1445.2 = phi i64 [ 0, %for.body.lr.ph.i.i.i1444.2.new ], [ %indvars.iv.next.i.i.i1448.2.3, %for.body.i.i.i1450.2 ]
  %niter2030 = phi i64 [ 0, %for.body.lr.ph.i.i.i1444.2.new ], [ %niter2030.next.3, %for.body.i.i.i1450.2 ]
  %arrayidx.i.i.i1446.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439.2, i64 %indvars.iv.i.i.i1445.2
  %422 = load ptr, ptr %m_data.i.i.i1442.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.2 = getelementptr inbounds ptr, ptr %422, i64 %indvars.iv.i.i.i1445.2
  %423 = load ptr, ptr %arrayidx3.i.i.i1447.2, align 8, !tbaa !219
  store ptr %423, ptr %arrayidx.i.i.i1446.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.2 = or i64 %indvars.iv.i.i.i1445.2, 1
  %arrayidx.i.i.i1446.2.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439.2, i64 %indvars.iv.next.i.i.i1448.2
  %424 = load ptr, ptr %m_data.i.i.i1442.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.2.1 = getelementptr inbounds ptr, ptr %424, i64 %indvars.iv.next.i.i.i1448.2
  %425 = load ptr, ptr %arrayidx3.i.i.i1447.2.1, align 8, !tbaa !219
  store ptr %425, ptr %arrayidx.i.i.i1446.2.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.2.1 = or i64 %indvars.iv.i.i.i1445.2, 2
  %arrayidx.i.i.i1446.2.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439.2, i64 %indvars.iv.next.i.i.i1448.2.1
  %426 = load ptr, ptr %m_data.i.i.i1442.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.2.2 = getelementptr inbounds ptr, ptr %426, i64 %indvars.iv.next.i.i.i1448.2.1
  %427 = load ptr, ptr %arrayidx3.i.i.i1447.2.2, align 8, !tbaa !219
  store ptr %427, ptr %arrayidx.i.i.i1446.2.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.2.2 = or i64 %indvars.iv.i.i.i1445.2, 3
  %arrayidx.i.i.i1446.2.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439.2, i64 %indvars.iv.next.i.i.i1448.2.2
  %428 = load ptr, ptr %m_data.i.i.i1442.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.2.3 = getelementptr inbounds ptr, ptr %428, i64 %indvars.iv.next.i.i.i1448.2.2
  %429 = load ptr, ptr %arrayidx3.i.i.i1447.2.3, align 8, !tbaa !219
  store ptr %429, ptr %arrayidx.i.i.i1446.2.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.2.3 = add nuw nsw i64 %indvars.iv.i.i.i1445.2, 4
  %niter2030.next.3 = add i64 %niter2030, 4
  %niter2030.ncmp.3 = icmp eq i64 %niter2030.next.3, %unroll_iter2029
  br i1 %niter2030.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.2.loopexit.unr-lcssa, label %for.body.i.i.i1450.2

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.2.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1450.2, %for.body.lr.ph.i.i.i1444.2
  %indvars.iv.i.i.i1445.2.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1444.2 ], [ %indvars.iv.next.i.i.i1448.2.3, %for.body.i.i.i1450.2 ]
  %lcmp.mod2028.not = icmp eq i64 %xtraiter2026, 0
  br i1 %lcmp.mod2028.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.2, label %for.body.i.i.i1450.2.epil

for.body.i.i.i1450.2.epil:                        ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.2.loopexit.unr-lcssa, %for.body.i.i.i1450.2.epil
  %indvars.iv.i.i.i1445.2.epil = phi i64 [ %indvars.iv.next.i.i.i1448.2.epil, %for.body.i.i.i1450.2.epil ], [ %indvars.iv.i.i.i1445.2.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.2.loopexit.unr-lcssa ]
  %epil.iter2027 = phi i64 [ %epil.iter2027.next, %for.body.i.i.i1450.2.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.2.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1446.2.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439.2, i64 %indvars.iv.i.i.i1445.2.epil
  %430 = load ptr, ptr %m_data.i.i.i1442.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.2.epil = getelementptr inbounds ptr, ptr %430, i64 %indvars.iv.i.i.i1445.2.epil
  %431 = load ptr, ptr %arrayidx3.i.i.i1447.2.epil, align 8, !tbaa !219
  store ptr %431, ptr %arrayidx.i.i.i1446.2.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.2.epil = add nuw nsw i64 %indvars.iv.i.i.i1445.2.epil, 1
  %epil.iter2027.next = add i64 %epil.iter2027, 1
  %epil.iter2027.cmp.not = icmp eq i64 %epil.iter2027.next, %xtraiter2026
  br i1 %epil.iter2027.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.2, label %for.body.i.i.i1450.2.epil, !llvm.loop !360

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.2: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.2.loopexit.unr-lcssa, %for.body.i.i.i1450.2.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441.2
  %m_data.i9.i.i1451.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %416, i64 0, i32 5
  %432 = load ptr, ptr %m_data.i9.i.i1451.2, align 8, !tbaa !320
  %tobool.not.i10.i.i1452.2 = icmp eq ptr %432, null
  %m_ownsMemory.i.i.i1453.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %416, i64 0, i32 6
  %433 = load i8, ptr %m_ownsMemory.i.i.i1453.2, align 8, !range !159
  %tobool2.not.i.i.i1454.2 = icmp eq i8 %433, 0
  %or.cond.i.i1455.2 = select i1 %tobool.not.i10.i.i1452.2, i1 true, i1 %tobool2.not.i.i.i1454.2
  br i1 %or.cond.i.i1455.2, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460.2, label %if.then3.i.i.i1458.2

if.then3.i.i.i1458.2:                             ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.2
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %432)
  %.pre7.pre.i1457.2 = load i32, ptr %m_size.i.i1424.2, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460.2

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460.2: ; preds = %if.then3.i.i.i1458.2, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.2
  %.pre7.i1459.2 = phi i32 [ %.pre7.pre.i1457.2, %if.then3.i.i.i1458.2 ], [ %420, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.2 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1453.2, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1439.2, ptr %m_data.i9.i.i1451.2, align 8, !tbaa !320
  store i32 %cond.i.i1429.2, ptr %m_capacity.i.i1425.2, align 8, !tbaa !342
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.2

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.2: ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460.2, %if.then.i1431.2, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.1
  %434 = phi i32 [ %.pre7.i1459.2, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460.2 ], [ %418, %if.then.i1431.2 ], [ %418, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.1 ]
  %m_data.i1461.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %416, i64 0, i32 5
  %435 = load ptr, ptr %m_data.i1461.2, align 8, !tbaa !320
  %idxprom.i1462.2 = sext i32 %434 to i64
  %arrayidx.i1463.2 = getelementptr inbounds ptr, ptr %435, i64 %idxprom.i1462.2
  %436 = load ptr, ptr %arrayidx492.2, align 8, !tbaa !219
  store ptr %436, ptr %arrayidx.i1463.2, align 8, !tbaa !219
  %inc.i1464.2 = add nsw i32 %434, 1
  store i32 %inc.i1464.2, ptr %m_size.i.i1424.2, align 4, !tbaa !319
  %437 = load ptr, ptr %m_data.i1418, align 8, !tbaa !123
  %arrayidx.i1420.3 = getelementptr inbounds ptr, ptr %437, i64 %indvars.iv1849
  %438 = load ptr, ptr %arrayidx.i1420.3, align 8, !tbaa !219
  %439 = load ptr, ptr %m_data.i1421, align 8, !tbaa !99
  %arrayidx492.3 = getelementptr inbounds %"struct.btSoftBody::Tetra", ptr %439, i64 %indvars.iv1849, i32 1, i64 3
  %m_size.i.i1424.3 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %438, i64 0, i32 2
  %440 = load i32, ptr %m_size.i.i1424.3, align 4, !tbaa !319
  %m_capacity.i.i1425.3 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %438, i64 0, i32 3
  %441 = load i32, ptr %m_capacity.i.i1425.3, align 8, !tbaa !342
  %cmp.i1426.3 = icmp eq i32 %440, %441
  br i1 %cmp.i1426.3, label %if.then.i1431.3, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.3

if.then.i1431.3:                                  ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.2
  %tobool.not.i.i1427.3 = icmp eq i32 %440, 0
  %mul.i.i1428.3 = shl nsw i32 %440, 1
  %cond.i.i1429.3 = select i1 %tobool.not.i.i1427.3, i32 1, i32 %mul.i.i1428.3
  %cmp.i.i1430.3 = icmp slt i32 %440, %cond.i.i1429.3
  br i1 %cmp.i.i1430.3, label %if.then.i.i1433.3, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.3

if.then.i.i1433.3:                                ; preds = %if.then.i1431.3
  %tobool.not.i.i.i1432.3 = icmp eq i32 %cond.i.i1429.3, 0
  br i1 %tobool.not.i.i.i1432.3, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441.3, label %if.then.i.i.i1438.3

if.then.i.i.i1438.3:                              ; preds = %if.then.i.i1433.3
  %conv.i.i.i.i1434.3 = sext i32 %cond.i.i1429.3 to i64
  %mul.i.i.i.i1435.3 = shl nsw i64 %conv.i.i.i.i1434.3, 3
  %call.i.i.i.i1436.3 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1435.3, i32 noundef 16)
  %.pre.i1437.3 = load i32, ptr %m_size.i.i1424.3, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441.3

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441.3: ; preds = %if.then.i.i.i1438.3, %if.then.i.i1433.3
  %442 = phi i32 [ %.pre.i1437.3, %if.then.i.i.i1438.3 ], [ %440, %if.then.i.i1433.3 ]
  %retval.0.i.i.i1439.3 = phi ptr [ %call.i.i.i.i1436.3, %if.then.i.i.i1438.3 ], [ null, %if.then.i.i1433.3 ]
  %cmp7.i.i.i1440.3 = icmp sgt i32 %442, 0
  br i1 %cmp7.i.i.i1440.3, label %for.body.lr.ph.i.i.i1444.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.3

for.body.lr.ph.i.i.i1444.3:                       ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441.3
  %m_data.i.i.i1442.3 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %438, i64 0, i32 5
  %wide.trip.count.i.i.i1443.3 = zext i32 %442 to i64
  %xtraiter2031 = and i64 %wide.trip.count.i.i.i1443.3, 3
  %443 = icmp ult i32 %442, 4
  br i1 %443, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.3.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1444.3.new

for.body.lr.ph.i.i.i1444.3.new:                   ; preds = %for.body.lr.ph.i.i.i1444.3
  %unroll_iter2034 = and i64 %wide.trip.count.i.i.i1443.3, 4294967292
  br label %for.body.i.i.i1450.3

for.body.i.i.i1450.3:                             ; preds = %for.body.i.i.i1450.3, %for.body.lr.ph.i.i.i1444.3.new
  %indvars.iv.i.i.i1445.3 = phi i64 [ 0, %for.body.lr.ph.i.i.i1444.3.new ], [ %indvars.iv.next.i.i.i1448.3.3, %for.body.i.i.i1450.3 ]
  %niter2035 = phi i64 [ 0, %for.body.lr.ph.i.i.i1444.3.new ], [ %niter2035.next.3, %for.body.i.i.i1450.3 ]
  %arrayidx.i.i.i1446.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439.3, i64 %indvars.iv.i.i.i1445.3
  %444 = load ptr, ptr %m_data.i.i.i1442.3, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.3 = getelementptr inbounds ptr, ptr %444, i64 %indvars.iv.i.i.i1445.3
  %445 = load ptr, ptr %arrayidx3.i.i.i1447.3, align 8, !tbaa !219
  store ptr %445, ptr %arrayidx.i.i.i1446.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.3 = or i64 %indvars.iv.i.i.i1445.3, 1
  %arrayidx.i.i.i1446.3.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439.3, i64 %indvars.iv.next.i.i.i1448.3
  %446 = load ptr, ptr %m_data.i.i.i1442.3, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.3.1 = getelementptr inbounds ptr, ptr %446, i64 %indvars.iv.next.i.i.i1448.3
  %447 = load ptr, ptr %arrayidx3.i.i.i1447.3.1, align 8, !tbaa !219
  store ptr %447, ptr %arrayidx.i.i.i1446.3.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.3.1 = or i64 %indvars.iv.i.i.i1445.3, 2
  %arrayidx.i.i.i1446.3.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439.3, i64 %indvars.iv.next.i.i.i1448.3.1
  %448 = load ptr, ptr %m_data.i.i.i1442.3, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.3.2 = getelementptr inbounds ptr, ptr %448, i64 %indvars.iv.next.i.i.i1448.3.1
  %449 = load ptr, ptr %arrayidx3.i.i.i1447.3.2, align 8, !tbaa !219
  store ptr %449, ptr %arrayidx.i.i.i1446.3.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.3.2 = or i64 %indvars.iv.i.i.i1445.3, 3
  %arrayidx.i.i.i1446.3.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439.3, i64 %indvars.iv.next.i.i.i1448.3.2
  %450 = load ptr, ptr %m_data.i.i.i1442.3, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.3.3 = getelementptr inbounds ptr, ptr %450, i64 %indvars.iv.next.i.i.i1448.3.2
  %451 = load ptr, ptr %arrayidx3.i.i.i1447.3.3, align 8, !tbaa !219
  store ptr %451, ptr %arrayidx.i.i.i1446.3.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.3.3 = add nuw nsw i64 %indvars.iv.i.i.i1445.3, 4
  %niter2035.next.3 = add i64 %niter2035, 4
  %niter2035.ncmp.3 = icmp eq i64 %niter2035.next.3, %unroll_iter2034
  br i1 %niter2035.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.3.loopexit.unr-lcssa, label %for.body.i.i.i1450.3

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.3.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1450.3, %for.body.lr.ph.i.i.i1444.3
  %indvars.iv.i.i.i1445.3.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1444.3 ], [ %indvars.iv.next.i.i.i1448.3.3, %for.body.i.i.i1450.3 ]
  %lcmp.mod2033.not = icmp eq i64 %xtraiter2031, 0
  br i1 %lcmp.mod2033.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.3, label %for.body.i.i.i1450.3.epil

for.body.i.i.i1450.3.epil:                        ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.3.loopexit.unr-lcssa, %for.body.i.i.i1450.3.epil
  %indvars.iv.i.i.i1445.3.epil = phi i64 [ %indvars.iv.next.i.i.i1448.3.epil, %for.body.i.i.i1450.3.epil ], [ %indvars.iv.i.i.i1445.3.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.3.loopexit.unr-lcssa ]
  %epil.iter2032 = phi i64 [ %epil.iter2032.next, %for.body.i.i.i1450.3.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.3.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1446.3.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1439.3, i64 %indvars.iv.i.i.i1445.3.epil
  %452 = load ptr, ptr %m_data.i.i.i1442.3, align 8, !tbaa !320
  %arrayidx3.i.i.i1447.3.epil = getelementptr inbounds ptr, ptr %452, i64 %indvars.iv.i.i.i1445.3.epil
  %453 = load ptr, ptr %arrayidx3.i.i.i1447.3.epil, align 8, !tbaa !219
  store ptr %453, ptr %arrayidx.i.i.i1446.3.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1448.3.epil = add nuw nsw i64 %indvars.iv.i.i.i1445.3.epil, 1
  %epil.iter2032.next = add i64 %epil.iter2032, 1
  %epil.iter2032.cmp.not = icmp eq i64 %epil.iter2032.next, %xtraiter2031
  br i1 %epil.iter2032.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.3, label %for.body.i.i.i1450.3.epil, !llvm.loop !361

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.3: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.3.loopexit.unr-lcssa, %for.body.i.i.i1450.3.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1441.3
  %m_data.i9.i.i1451.3 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %438, i64 0, i32 5
  %454 = load ptr, ptr %m_data.i9.i.i1451.3, align 8, !tbaa !320
  %tobool.not.i10.i.i1452.3 = icmp eq ptr %454, null
  %m_ownsMemory.i.i.i1453.3 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %438, i64 0, i32 6
  %455 = load i8, ptr %m_ownsMemory.i.i.i1453.3, align 8, !range !159
  %tobool2.not.i.i.i1454.3 = icmp eq i8 %455, 0
  %or.cond.i.i1455.3 = select i1 %tobool.not.i10.i.i1452.3, i1 true, i1 %tobool2.not.i.i.i1454.3
  br i1 %or.cond.i.i1455.3, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460.3, label %if.then3.i.i.i1458.3

if.then3.i.i.i1458.3:                             ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.3
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %454)
  %.pre7.pre.i1457.3 = load i32, ptr %m_size.i.i1424.3, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460.3

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460.3: ; preds = %if.then3.i.i.i1458.3, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.3
  %.pre7.i1459.3 = phi i32 [ %.pre7.pre.i1457.3, %if.then3.i.i.i1458.3 ], [ %442, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1456.3 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1453.3, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1439.3, ptr %m_data.i9.i.i1451.3, align 8, !tbaa !320
  store i32 %cond.i.i1429.3, ptr %m_capacity.i.i1425.3, align 8, !tbaa !342
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.3

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.3: ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460.3, %if.then.i1431.3, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.2
  %456 = phi i32 [ %.pre7.i1459.3, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1460.3 ], [ %440, %if.then.i1431.3 ], [ %440, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.2 ]
  %m_data.i1461.3 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %438, i64 0, i32 5
  %457 = load ptr, ptr %m_data.i1461.3, align 8, !tbaa !320
  %idxprom.i1462.3 = sext i32 %456 to i64
  %arrayidx.i1463.3 = getelementptr inbounds ptr, ptr %457, i64 %idxprom.i1462.3
  %458 = load ptr, ptr %arrayidx492.3, align 8, !tbaa !219
  store ptr %458, ptr %arrayidx.i1463.3, align 8, !tbaa !219
  %inc.i1464.3 = add nsw i32 %456, 1
  store i32 %inc.i1464.3, ptr %m_size.i.i1424.3, align 4, !tbaa !319
  %indvars.iv.next1850 = add nuw nsw i64 %indvars.iv1849, 1
  %459 = load i32, ptr %m_size.i1349, align 4, !tbaa !100
  %460 = sext i32 %459 to i64
  %cmp478 = icmp slt i64 %indvars.iv.next1850, %460
  br i1 %cmp478, label %for.cond481.preheader, label %if.end543

if.else499:                                       ; preds = %if.else
  %m_size.i1467 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %461 = load i32, ptr %m_size.i1467, align 4, !tbaa !96
  %cmp4.i1470 = icmp slt i32 %.lcssa17681934, %461
  br i1 %cmp4.i1470, label %if.then5.i1474, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1510

if.then5.i1474:                                   ; preds = %if.else499
  %m_capacity.i.i.i1472 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 3
  %462 = load i32, ptr %m_capacity.i.i.i1472, align 8, !tbaa !125
  %cmp.i.i1473 = icmp slt i32 %462, %461
  br i1 %cmp.i.i1473, label %if.then.i.i1476, label %for.body10.lr.ph.i1504

if.then.i.i1476:                                  ; preds = %if.then5.i1474
  %tobool.not.i.i.i1475 = icmp eq i32 %461, 0
  br i1 %tobool.not.i.i.i1475, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1499, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1484

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1484: ; preds = %if.then.i.i1476
  %conv.i.i.i.i1477 = sext i32 %461 to i64
  %mul.i.i.i.i1478 = shl nsw i64 %conv.i.i.i.i1477, 3
  %call.i.i.i.i1479 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1478, i32 noundef 16)
  %.pre.i1480 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp7.i.i.i1483 = icmp sgt i32 %.pre.i1480, 0
  br i1 %cmp7.i.i.i1483, label %for.body.lr.ph.i.i.i1487, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1499

for.body.lr.ph.i.i.i1487:                         ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1484
  %m_data.i.i.i1485 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %wide.trip.count.i.i.i1486 = zext i32 %.pre.i1480 to i64
  %xtraiter2036 = and i64 %wide.trip.count.i.i.i1486, 3
  %463 = icmp ult i32 %.pre.i1480, 4
  br i1 %463, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1499.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1487.new

for.body.lr.ph.i.i.i1487.new:                     ; preds = %for.body.lr.ph.i.i.i1487
  %unroll_iter2039 = and i64 %wide.trip.count.i.i.i1486, 4294967292
  br label %for.body.i.i.i1493

for.body.i.i.i1493:                               ; preds = %for.body.i.i.i1493, %for.body.lr.ph.i.i.i1487.new
  %indvars.iv.i.i.i1488 = phi i64 [ 0, %for.body.lr.ph.i.i.i1487.new ], [ %indvars.iv.next.i.i.i1491.3, %for.body.i.i.i1493 ]
  %niter2040 = phi i64 [ 0, %for.body.lr.ph.i.i.i1487.new ], [ %niter2040.next.3, %for.body.i.i.i1493 ]
  %arrayidx.i.i.i1489 = getelementptr inbounds ptr, ptr %call.i.i.i.i1479, i64 %indvars.iv.i.i.i1488
  %464 = load ptr, ptr %m_data.i.i.i1485, align 8, !tbaa !123
  %arrayidx3.i.i.i1490 = getelementptr inbounds ptr, ptr %464, i64 %indvars.iv.i.i.i1488
  %465 = load ptr, ptr %arrayidx3.i.i.i1490, align 8, !tbaa !219
  store ptr %465, ptr %arrayidx.i.i.i1489, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1491 = or i64 %indvars.iv.i.i.i1488, 1
  %arrayidx.i.i.i1489.1 = getelementptr inbounds ptr, ptr %call.i.i.i.i1479, i64 %indvars.iv.next.i.i.i1491
  %466 = load ptr, ptr %m_data.i.i.i1485, align 8, !tbaa !123
  %arrayidx3.i.i.i1490.1 = getelementptr inbounds ptr, ptr %466, i64 %indvars.iv.next.i.i.i1491
  %467 = load ptr, ptr %arrayidx3.i.i.i1490.1, align 8, !tbaa !219
  store ptr %467, ptr %arrayidx.i.i.i1489.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1491.1 = or i64 %indvars.iv.i.i.i1488, 2
  %arrayidx.i.i.i1489.2 = getelementptr inbounds ptr, ptr %call.i.i.i.i1479, i64 %indvars.iv.next.i.i.i1491.1
  %468 = load ptr, ptr %m_data.i.i.i1485, align 8, !tbaa !123
  %arrayidx3.i.i.i1490.2 = getelementptr inbounds ptr, ptr %468, i64 %indvars.iv.next.i.i.i1491.1
  %469 = load ptr, ptr %arrayidx3.i.i.i1490.2, align 8, !tbaa !219
  store ptr %469, ptr %arrayidx.i.i.i1489.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1491.2 = or i64 %indvars.iv.i.i.i1488, 3
  %arrayidx.i.i.i1489.3 = getelementptr inbounds ptr, ptr %call.i.i.i.i1479, i64 %indvars.iv.next.i.i.i1491.2
  %470 = load ptr, ptr %m_data.i.i.i1485, align 8, !tbaa !123
  %arrayidx3.i.i.i1490.3 = getelementptr inbounds ptr, ptr %470, i64 %indvars.iv.next.i.i.i1491.2
  %471 = load ptr, ptr %arrayidx3.i.i.i1490.3, align 8, !tbaa !219
  store ptr %471, ptr %arrayidx.i.i.i1489.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1491.3 = add nuw nsw i64 %indvars.iv.i.i.i1488, 4
  %niter2040.next.3 = add i64 %niter2040, 4
  %niter2040.ncmp.3 = icmp eq i64 %niter2040.next.3, %unroll_iter2039
  br i1 %niter2040.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1499.loopexit.unr-lcssa, label %for.body.i.i.i1493

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1499.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1493, %for.body.lr.ph.i.i.i1487
  %indvars.iv.i.i.i1488.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1487 ], [ %indvars.iv.next.i.i.i1491.3, %for.body.i.i.i1493 ]
  %lcmp.mod2038.not = icmp eq i64 %xtraiter2036, 0
  br i1 %lcmp.mod2038.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1499, label %for.body.i.i.i1493.epil

for.body.i.i.i1493.epil:                          ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1499.loopexit.unr-lcssa, %for.body.i.i.i1493.epil
  %indvars.iv.i.i.i1488.epil = phi i64 [ %indvars.iv.next.i.i.i1491.epil, %for.body.i.i.i1493.epil ], [ %indvars.iv.i.i.i1488.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1499.loopexit.unr-lcssa ]
  %epil.iter2037 = phi i64 [ %epil.iter2037.next, %for.body.i.i.i1493.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1499.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1489.epil = getelementptr inbounds ptr, ptr %call.i.i.i.i1479, i64 %indvars.iv.i.i.i1488.epil
  %472 = load ptr, ptr %m_data.i.i.i1485, align 8, !tbaa !123
  %arrayidx3.i.i.i1490.epil = getelementptr inbounds ptr, ptr %472, i64 %indvars.iv.i.i.i1488.epil
  %473 = load ptr, ptr %arrayidx3.i.i.i1490.epil, align 8, !tbaa !219
  store ptr %473, ptr %arrayidx.i.i.i1489.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1491.epil = add nuw nsw i64 %indvars.iv.i.i.i1488.epil, 1
  %epil.iter2037.next = add i64 %epil.iter2037, 1
  %epil.iter2037.cmp.not = icmp eq i64 %epil.iter2037.next, %xtraiter2036
  br i1 %epil.iter2037.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1499, label %for.body.i.i.i1493.epil, !llvm.loop !362

_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1499: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1499.loopexit.unr-lcssa, %for.body.i.i.i1493.epil, %if.then.i.i1476, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1484
  %retval.0.i.i.i14821750 = phi ptr [ %call.i.i.i.i1479, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE8allocateEi.exit.i.i1484 ], [ null, %if.then.i.i1476 ], [ %call.i.i.i.i1479, %for.body.i.i.i1493.epil ], [ %call.i.i.i.i1479, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1499.loopexit.unr-lcssa ]
  %m_data.i9.i.i1494 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %474 = load ptr, ptr %m_data.i9.i.i1494, align 8, !tbaa !123
  %tobool.not.i10.i.i1495 = icmp eq ptr %474, null
  %m_ownsMemory.i.i.i1496 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 6
  %475 = load i8, ptr %m_ownsMemory.i.i.i1496, align 8, !range !159
  %tobool2.not.i.i.i1497 = icmp eq i8 %475, 0
  %or.cond.i.i1498 = select i1 %tobool.not.i10.i.i1495, i1 true, i1 %tobool2.not.i.i.i1497
  br i1 %or.cond.i.i1498, label %if.end.i1501, label %if.then3.i.i.i1500

if.then3.i.i.i1500:                               ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1499
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %474)
  br label %if.end.i1501

if.end.i1501:                                     ; preds = %if.then3.i.i.i1500, %_ZNK20btAlignedObjectArrayIPN10btSoftBody7ClusterEE4copyEiiPS2_.exit.i.i1499
  store i8 1, ptr %m_ownsMemory.i.i.i1496, align 8, !tbaa !122
  store ptr %retval.0.i.i.i14821750, ptr %m_data.i9.i.i1494, align 8, !tbaa !123
  store i32 %461, ptr %m_capacity.i.i.i1472, align 8, !tbaa !125
  br label %for.body10.lr.ph.i1504

for.body10.lr.ph.i1504:                           ; preds = %if.end.i1501, %if.then5.i1474
  %m_data11.i1502 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %476 = sext i32 %.lcssa17681934 to i64
  %wide.trip.count.i1503 = sext i32 %461 to i64
  %477 = sub nsw i64 %wide.trip.count.i1503, %476
  %478 = xor i64 %476, -1
  %479 = add nsw i64 %478, %wide.trip.count.i1503
  %xtraiter2041 = and i64 %477, 3
  %lcmp.mod2042.not = icmp eq i64 %xtraiter2041, 0
  br i1 %lcmp.mod2042.not, label %for.body10.i1509.prol.loopexit, label %for.body10.i1509.prol

for.body10.i1509.prol:                            ; preds = %for.body10.lr.ph.i1504, %for.body10.i1509.prol
  %indvars.iv.i1505.prol = phi i64 [ %indvars.iv.next.i1507.prol, %for.body10.i1509.prol ], [ %476, %for.body10.lr.ph.i1504 ]
  %prol.iter2043 = phi i64 [ %prol.iter2043.next, %for.body10.i1509.prol ], [ 0, %for.body10.lr.ph.i1504 ]
  %480 = load ptr, ptr %m_data11.i1502, align 8, !tbaa !123
  %arrayidx13.i1506.prol = getelementptr inbounds ptr, ptr %480, i64 %indvars.iv.i1505.prol
  store ptr null, ptr %arrayidx13.i1506.prol, align 8, !tbaa !219
  %indvars.iv.next.i1507.prol = add nsw i64 %indvars.iv.i1505.prol, 1
  %prol.iter2043.next = add i64 %prol.iter2043, 1
  %prol.iter2043.cmp.not = icmp eq i64 %prol.iter2043.next, %xtraiter2041
  br i1 %prol.iter2043.cmp.not, label %for.body10.i1509.prol.loopexit, label %for.body10.i1509.prol, !llvm.loop !363

for.body10.i1509.prol.loopexit:                   ; preds = %for.body10.i1509.prol, %for.body10.lr.ph.i1504
  %indvars.iv.i1505.unr = phi i64 [ %476, %for.body10.lr.ph.i1504 ], [ %indvars.iv.next.i1507.prol, %for.body10.i1509.prol ]
  %481 = icmp ult i64 %479, 3
  br i1 %481, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1510, label %for.body10.i1509

for.body10.i1509:                                 ; preds = %for.body10.i1509.prol.loopexit, %for.body10.i1509
  %indvars.iv.i1505 = phi i64 [ %indvars.iv.next.i1507.3, %for.body10.i1509 ], [ %indvars.iv.i1505.unr, %for.body10.i1509.prol.loopexit ]
  %482 = load ptr, ptr %m_data11.i1502, align 8, !tbaa !123
  %arrayidx13.i1506 = getelementptr inbounds ptr, ptr %482, i64 %indvars.iv.i1505
  store ptr null, ptr %arrayidx13.i1506, align 8, !tbaa !219
  %indvars.iv.next.i1507 = add nsw i64 %indvars.iv.i1505, 1
  %483 = load ptr, ptr %m_data11.i1502, align 8, !tbaa !123
  %arrayidx13.i1506.1 = getelementptr inbounds ptr, ptr %483, i64 %indvars.iv.next.i1507
  store ptr null, ptr %arrayidx13.i1506.1, align 8, !tbaa !219
  %indvars.iv.next.i1507.1 = add nsw i64 %indvars.iv.i1505, 2
  %484 = load ptr, ptr %m_data11.i1502, align 8, !tbaa !123
  %arrayidx13.i1506.2 = getelementptr inbounds ptr, ptr %484, i64 %indvars.iv.next.i1507.1
  store ptr null, ptr %arrayidx13.i1506.2, align 8, !tbaa !219
  %indvars.iv.next.i1507.2 = add nsw i64 %indvars.iv.i1505, 3
  %485 = load ptr, ptr %m_data11.i1502, align 8, !tbaa !123
  %arrayidx13.i1506.3 = getelementptr inbounds ptr, ptr %485, i64 %indvars.iv.next.i1507.2
  store ptr null, ptr %arrayidx13.i1506.3, align 8, !tbaa !219
  %indvars.iv.next.i1507.3 = add nsw i64 %indvars.iv.i1505, 4
  %exitcond.not.i1508.3 = icmp eq i64 %indvars.iv.next.i1507.3, %wide.trip.count.i1503
  br i1 %exitcond.not.i1508.3, label %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1510, label %for.body10.i1509

_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1510: ; preds = %for.body10.i1509.prol.loopexit, %for.body10.i1509, %if.else499
  store i32 %461, ptr %m_size.i.i, align 4, !tbaa !124
  %cmp5071777 = icmp sgt i32 %461, 0
  br i1 %cmp5071777, label %for.body508.lr.ph, label %for.cond518.preheader

for.body508.lr.ph:                                ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1510
  %m_data.i1528 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  br label %for.body508

for.cond518.preheader:                            ; preds = %for.body508, %_ZN20btAlignedObjectArrayIPN10btSoftBody7ClusterEE6resizeEiRKS2_.exit1510
  %486 = load i32, ptr %m_size.i1467, align 4, !tbaa !96
  %cmp5211780 = icmp sgt i32 %486, 0
  br i1 %cmp5211780, label %for.cond524.preheader.lr.ph, label %if.end543

for.cond524.preheader.lr.ph:                      ; preds = %for.cond518.preheader
  %m_data.i1535 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %m_data.i1538 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  br label %for.cond524.preheader

for.body508:                                      ; preds = %for.body508.lr.ph, %for.body508
  %indvars.iv1852 = phi i64 [ 0, %for.body508.lr.ph ], [ %indvars.iv.next1853, %for.body508 ]
  %call509 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 424, i32 noundef 16)
  %m_ownsMemory.i.i.i1512 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call509, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i.i1512, align 8, !tbaa !341
  %m_data.i.i.i1513 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call509, i64 0, i32 5
  store ptr null, ptr %m_data.i.i.i1513, align 8, !tbaa !320
  %m_size.i.i.i1514 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call509, i64 0, i32 2
  store i32 0, ptr %m_size.i.i.i1514, align 4, !tbaa !319
  %m_capacity.i.i.i1515 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %call509, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i1515, align 8, !tbaa !342
  %m_ownsMemory.i.i25.i1516 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 1, i32 6
  store i8 1, ptr %m_ownsMemory.i.i25.i1516, align 8, !tbaa !36
  %m_data.i.i26.i1517 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 1, i32 5
  store ptr null, ptr %m_data.i.i26.i1517, align 8, !tbaa !39
  %m_size.i.i27.i1518 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 1, i32 2
  store i32 0, ptr %m_size.i.i27.i1518, align 4, !tbaa !40
  %m_capacity.i.i28.i1519 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 1, i32 3
  store i32 0, ptr %m_capacity.i.i28.i1519, align 8, !tbaa !41
  %m_ownsMemory.i.i29.i1520 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 2, i32 6
  store i8 1, ptr %m_ownsMemory.i.i29.i1520, align 8, !tbaa !30
  %m_data.i.i30.i1521 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 2, i32 5
  store ptr null, ptr %m_data.i.i30.i1521, align 8, !tbaa !33
  %m_size.i.i31.i1522 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 2, i32 2
  store i32 0, ptr %m_size.i.i31.i1522, align 4, !tbaa !34
  %m_capacity.i.i32.i1523 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 2, i32 3
  store i32 0, ptr %m_capacity.i.i32.i1523, align 8, !tbaa !35
  %m_leaf.i1524 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 15
  %m_maxSelfCollisionImpulse.i1525 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 20
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %m_leaf.i1524, i8 0, i64 24, i1 false)
  store <2 x float> <float 1.000000e+02, float 0x3F847AE140000000>, ptr %m_maxSelfCollisionImpulse.i1525, align 8, !tbaa !137
  %m_containsAnchor.i1527 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %call509, i64 0, i32 22
  store i8 0, ptr %m_containsAnchor.i1527, align 8, !tbaa !345
  %487 = load ptr, ptr %m_data.i1528, align 8, !tbaa !123
  %arrayidx.i1530 = getelementptr inbounds ptr, ptr %487, i64 %indvars.iv1852
  store ptr %call509, ptr %arrayidx.i1530, align 8, !tbaa !219
  %488 = load ptr, ptr %m_data.i1528, align 8, !tbaa !123
  %arrayidx.i1533 = getelementptr inbounds ptr, ptr %488, i64 %indvars.iv1852
  %489 = load ptr, ptr %arrayidx.i1533, align 8, !tbaa !219
  %m_collide514 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %489, i64 0, i32 23
  store i8 1, ptr %m_collide514, align 1, !tbaa !346
  %indvars.iv.next1853 = add nuw nsw i64 %indvars.iv1852, 1
  %490 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %491 = sext i32 %490 to i64
  %cmp507 = icmp slt i64 %indvars.iv.next1853, %491
  br i1 %cmp507, label %for.body508, label %for.cond518.preheader

for.cond524.preheader:                            ; preds = %for.cond524.preheader.lr.ph, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583.2
  %indvars.iv1858 = phi i64 [ 0, %for.cond524.preheader.lr.ph ], [ %indvars.iv.next1859, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583.2 ]
  %492 = load ptr, ptr %m_data.i1535, align 8, !tbaa !123
  %arrayidx.i1537 = getelementptr inbounds ptr, ptr %492, i64 %indvars.iv1858
  %493 = load ptr, ptr %arrayidx.i1537, align 8, !tbaa !219
  %494 = load ptr, ptr %m_data.i1538, align 8, !tbaa !95
  %arrayidx535 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %494, i64 %indvars.iv1858, i32 1, i64 0
  %m_size.i.i1541 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %493, i64 0, i32 2
  %495 = load i32, ptr %m_size.i.i1541, align 4, !tbaa !319
  %m_capacity.i.i1542 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %493, i64 0, i32 3
  %496 = load i32, ptr %m_capacity.i.i1542, align 8, !tbaa !342
  %cmp.i1543 = icmp eq i32 %495, %496
  br i1 %cmp.i1543, label %if.then.i1548, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583

if.then.i1548:                                    ; preds = %for.cond524.preheader
  %tobool.not.i.i1544 = icmp eq i32 %495, 0
  %mul.i.i1545 = shl nsw i32 %495, 1
  %cond.i.i1546 = select i1 %tobool.not.i.i1544, i32 1, i32 %mul.i.i1545
  %cmp.i.i1547 = icmp slt i32 %495, %cond.i.i1546
  br i1 %cmp.i.i1547, label %if.then.i.i1550, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583

if.then.i.i1550:                                  ; preds = %if.then.i1548
  %tobool.not.i.i.i1549 = icmp eq i32 %cond.i.i1546, 0
  br i1 %tobool.not.i.i.i1549, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1558, label %if.then.i.i.i1555

if.then.i.i.i1555:                                ; preds = %if.then.i.i1550
  %conv.i.i.i.i1551 = sext i32 %cond.i.i1546 to i64
  %mul.i.i.i.i1552 = shl nsw i64 %conv.i.i.i.i1551, 3
  %call.i.i.i.i1553 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1552, i32 noundef 16)
  %.pre.i1554 = load i32, ptr %m_size.i.i1541, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1558

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1558: ; preds = %if.then.i.i.i1555, %if.then.i.i1550
  %497 = phi i32 [ %.pre.i1554, %if.then.i.i.i1555 ], [ %495, %if.then.i.i1550 ]
  %retval.0.i.i.i1556 = phi ptr [ %call.i.i.i.i1553, %if.then.i.i.i1555 ], [ null, %if.then.i.i1550 ]
  %cmp7.i.i.i1557 = icmp sgt i32 %497, 0
  br i1 %cmp7.i.i.i1557, label %for.body.lr.ph.i.i.i1561, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573

for.body.lr.ph.i.i.i1561:                         ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1558
  %m_data.i.i.i1559 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %493, i64 0, i32 5
  %wide.trip.count.i.i.i1560 = zext i32 %497 to i64
  %xtraiter2044 = and i64 %wide.trip.count.i.i.i1560, 3
  %498 = icmp ult i32 %497, 4
  br i1 %498, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1561.new

for.body.lr.ph.i.i.i1561.new:                     ; preds = %for.body.lr.ph.i.i.i1561
  %unroll_iter2047 = and i64 %wide.trip.count.i.i.i1560, 4294967292
  br label %for.body.i.i.i1567

for.body.i.i.i1567:                               ; preds = %for.body.i.i.i1567, %for.body.lr.ph.i.i.i1561.new
  %indvars.iv.i.i.i1562 = phi i64 [ 0, %for.body.lr.ph.i.i.i1561.new ], [ %indvars.iv.next.i.i.i1565.3, %for.body.i.i.i1567 ]
  %niter2048 = phi i64 [ 0, %for.body.lr.ph.i.i.i1561.new ], [ %niter2048.next.3, %for.body.i.i.i1567 ]
  %arrayidx.i.i.i1563 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1556, i64 %indvars.iv.i.i.i1562
  %499 = load ptr, ptr %m_data.i.i.i1559, align 8, !tbaa !320
  %arrayidx3.i.i.i1564 = getelementptr inbounds ptr, ptr %499, i64 %indvars.iv.i.i.i1562
  %500 = load ptr, ptr %arrayidx3.i.i.i1564, align 8, !tbaa !219
  store ptr %500, ptr %arrayidx.i.i.i1563, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1565 = or i64 %indvars.iv.i.i.i1562, 1
  %arrayidx.i.i.i1563.12050 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1556, i64 %indvars.iv.next.i.i.i1565
  %501 = load ptr, ptr %m_data.i.i.i1559, align 8, !tbaa !320
  %arrayidx3.i.i.i1564.12051 = getelementptr inbounds ptr, ptr %501, i64 %indvars.iv.next.i.i.i1565
  %502 = load ptr, ptr %arrayidx3.i.i.i1564.12051, align 8, !tbaa !219
  store ptr %502, ptr %arrayidx.i.i.i1563.12050, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1565.12052 = or i64 %indvars.iv.i.i.i1562, 2
  %arrayidx.i.i.i1563.22056 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1556, i64 %indvars.iv.next.i.i.i1565.12052
  %503 = load ptr, ptr %m_data.i.i.i1559, align 8, !tbaa !320
  %arrayidx3.i.i.i1564.22057 = getelementptr inbounds ptr, ptr %503, i64 %indvars.iv.next.i.i.i1565.12052
  %504 = load ptr, ptr %arrayidx3.i.i.i1564.22057, align 8, !tbaa !219
  store ptr %504, ptr %arrayidx.i.i.i1563.22056, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1565.22058 = or i64 %indvars.iv.i.i.i1562, 3
  %arrayidx.i.i.i1563.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1556, i64 %indvars.iv.next.i.i.i1565.22058
  %505 = load ptr, ptr %m_data.i.i.i1559, align 8, !tbaa !320
  %arrayidx3.i.i.i1564.3 = getelementptr inbounds ptr, ptr %505, i64 %indvars.iv.next.i.i.i1565.22058
  %506 = load ptr, ptr %arrayidx3.i.i.i1564.3, align 8, !tbaa !219
  store ptr %506, ptr %arrayidx.i.i.i1563.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1565.3 = add nuw nsw i64 %indvars.iv.i.i.i1562, 4
  %niter2048.next.3 = add i64 %niter2048, 4
  %niter2048.ncmp.3 = icmp eq i64 %niter2048.next.3, %unroll_iter2047
  br i1 %niter2048.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.loopexit.unr-lcssa, label %for.body.i.i.i1567

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1567, %for.body.lr.ph.i.i.i1561
  %indvars.iv.i.i.i1562.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1561 ], [ %indvars.iv.next.i.i.i1565.3, %for.body.i.i.i1567 ]
  %lcmp.mod2046.not = icmp eq i64 %xtraiter2044, 0
  br i1 %lcmp.mod2046.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573, label %for.body.i.i.i1567.epil

for.body.i.i.i1567.epil:                          ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.loopexit.unr-lcssa, %for.body.i.i.i1567.epil
  %indvars.iv.i.i.i1562.epil = phi i64 [ %indvars.iv.next.i.i.i1565.epil, %for.body.i.i.i1567.epil ], [ %indvars.iv.i.i.i1562.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.loopexit.unr-lcssa ]
  %epil.iter2045 = phi i64 [ %epil.iter2045.next, %for.body.i.i.i1567.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1563.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1556, i64 %indvars.iv.i.i.i1562.epil
  %507 = load ptr, ptr %m_data.i.i.i1559, align 8, !tbaa !320
  %arrayidx3.i.i.i1564.epil = getelementptr inbounds ptr, ptr %507, i64 %indvars.iv.i.i.i1562.epil
  %508 = load ptr, ptr %arrayidx3.i.i.i1564.epil, align 8, !tbaa !219
  store ptr %508, ptr %arrayidx.i.i.i1563.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1565.epil = add nuw nsw i64 %indvars.iv.i.i.i1562.epil, 1
  %epil.iter2045.next = add i64 %epil.iter2045, 1
  %epil.iter2045.cmp.not = icmp eq i64 %epil.iter2045.next, %xtraiter2044
  br i1 %epil.iter2045.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573, label %for.body.i.i.i1567.epil, !llvm.loop !364

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.loopexit.unr-lcssa, %for.body.i.i.i1567.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1558
  %m_data.i9.i.i1568 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %493, i64 0, i32 5
  %509 = load ptr, ptr %m_data.i9.i.i1568, align 8, !tbaa !320
  %tobool.not.i10.i.i1569 = icmp eq ptr %509, null
  %m_ownsMemory.i.i.i1570 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %493, i64 0, i32 6
  %510 = load i8, ptr %m_ownsMemory.i.i.i1570, align 8, !range !159
  %tobool2.not.i.i.i1571 = icmp eq i8 %510, 0
  %or.cond.i.i1572 = select i1 %tobool.not.i10.i.i1569, i1 true, i1 %tobool2.not.i.i.i1571
  br i1 %or.cond.i.i1572, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1577, label %if.then3.i.i.i1575

if.then3.i.i.i1575:                               ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %509)
  %.pre7.pre.i1574 = load i32, ptr %m_size.i.i1541, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1577

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1577: ; preds = %if.then3.i.i.i1575, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573
  %.pre7.i1576 = phi i32 [ %.pre7.pre.i1574, %if.then3.i.i.i1575 ], [ %497, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1570, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1556, ptr %m_data.i9.i.i1568, align 8, !tbaa !320
  store i32 %cond.i.i1546, ptr %m_capacity.i.i1542, align 8, !tbaa !342
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583: ; preds = %for.cond524.preheader, %if.then.i1548, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1577
  %511 = phi i32 [ %.pre7.i1576, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1577 ], [ %495, %if.then.i1548 ], [ %495, %for.cond524.preheader ]
  %m_data.i1578 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %493, i64 0, i32 5
  %512 = load ptr, ptr %m_data.i1578, align 8, !tbaa !320
  %idxprom.i1579 = sext i32 %511 to i64
  %arrayidx.i1580 = getelementptr inbounds ptr, ptr %512, i64 %idxprom.i1579
  %513 = load ptr, ptr %arrayidx535, align 8, !tbaa !219
  store ptr %513, ptr %arrayidx.i1580, align 8, !tbaa !219
  %inc.i1581 = add nsw i32 %511, 1
  store i32 %inc.i1581, ptr %m_size.i.i1541, align 4, !tbaa !319
  %514 = load ptr, ptr %m_data.i1535, align 8, !tbaa !123
  %arrayidx.i1537.1 = getelementptr inbounds ptr, ptr %514, i64 %indvars.iv1858
  %515 = load ptr, ptr %arrayidx.i1537.1, align 8, !tbaa !219
  %516 = load ptr, ptr %m_data.i1538, align 8, !tbaa !95
  %arrayidx535.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %516, i64 %indvars.iv1858, i32 1, i64 1
  %m_size.i.i1541.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %515, i64 0, i32 2
  %517 = load i32, ptr %m_size.i.i1541.1, align 4, !tbaa !319
  %m_capacity.i.i1542.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %515, i64 0, i32 3
  %518 = load i32, ptr %m_capacity.i.i1542.1, align 8, !tbaa !342
  %cmp.i1543.1 = icmp eq i32 %517, %518
  br i1 %cmp.i1543.1, label %if.then.i1548.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583.1

if.then.i1548.1:                                  ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583
  %tobool.not.i.i1544.1 = icmp eq i32 %517, 0
  %mul.i.i1545.1 = shl nsw i32 %517, 1
  %cond.i.i1546.1 = select i1 %tobool.not.i.i1544.1, i32 1, i32 %mul.i.i1545.1
  %cmp.i.i1547.1 = icmp slt i32 %517, %cond.i.i1546.1
  br i1 %cmp.i.i1547.1, label %if.then.i.i1550.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583.1

if.then.i.i1550.1:                                ; preds = %if.then.i1548.1
  %tobool.not.i.i.i1549.1 = icmp eq i32 %cond.i.i1546.1, 0
  br i1 %tobool.not.i.i.i1549.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1558.1, label %if.then.i.i.i1555.1

if.then.i.i.i1555.1:                              ; preds = %if.then.i.i1550.1
  %conv.i.i.i.i1551.1 = sext i32 %cond.i.i1546.1 to i64
  %mul.i.i.i.i1552.1 = shl nsw i64 %conv.i.i.i.i1551.1, 3
  %call.i.i.i.i1553.1 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1552.1, i32 noundef 16)
  %.pre.i1554.1 = load i32, ptr %m_size.i.i1541.1, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1558.1

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1558.1: ; preds = %if.then.i.i.i1555.1, %if.then.i.i1550.1
  %519 = phi i32 [ %.pre.i1554.1, %if.then.i.i.i1555.1 ], [ %517, %if.then.i.i1550.1 ]
  %retval.0.i.i.i1556.1 = phi ptr [ %call.i.i.i.i1553.1, %if.then.i.i.i1555.1 ], [ null, %if.then.i.i1550.1 ]
  %cmp7.i.i.i1557.1 = icmp sgt i32 %519, 0
  br i1 %cmp7.i.i.i1557.1, label %for.body.lr.ph.i.i.i1561.1, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.1

for.body.lr.ph.i.i.i1561.1:                       ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1558.1
  %m_data.i.i.i1559.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %515, i64 0, i32 5
  %wide.trip.count.i.i.i1560.1 = zext i32 %519 to i64
  %xtraiter2061 = and i64 %wide.trip.count.i.i.i1560.1, 3
  %520 = icmp ult i32 %519, 4
  br i1 %520, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.1.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1561.1.new

for.body.lr.ph.i.i.i1561.1.new:                   ; preds = %for.body.lr.ph.i.i.i1561.1
  %unroll_iter2064 = and i64 %wide.trip.count.i.i.i1560.1, 4294967292
  br label %for.body.i.i.i1567.1

for.body.i.i.i1567.1:                             ; preds = %for.body.i.i.i1567.1, %for.body.lr.ph.i.i.i1561.1.new
  %indvars.iv.i.i.i1562.1 = phi i64 [ 0, %for.body.lr.ph.i.i.i1561.1.new ], [ %indvars.iv.next.i.i.i1565.1.3, %for.body.i.i.i1567.1 ]
  %niter2065 = phi i64 [ 0, %for.body.lr.ph.i.i.i1561.1.new ], [ %niter2065.next.3, %for.body.i.i.i1567.1 ]
  %arrayidx.i.i.i1563.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1556.1, i64 %indvars.iv.i.i.i1562.1
  %521 = load ptr, ptr %m_data.i.i.i1559.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1564.1 = getelementptr inbounds ptr, ptr %521, i64 %indvars.iv.i.i.i1562.1
  %522 = load ptr, ptr %arrayidx3.i.i.i1564.1, align 8, !tbaa !219
  store ptr %522, ptr %arrayidx.i.i.i1563.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1565.1 = or i64 %indvars.iv.i.i.i1562.1, 1
  %arrayidx.i.i.i1563.1.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1556.1, i64 %indvars.iv.next.i.i.i1565.1
  %523 = load ptr, ptr %m_data.i.i.i1559.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1564.1.1 = getelementptr inbounds ptr, ptr %523, i64 %indvars.iv.next.i.i.i1565.1
  %524 = load ptr, ptr %arrayidx3.i.i.i1564.1.1, align 8, !tbaa !219
  store ptr %524, ptr %arrayidx.i.i.i1563.1.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1565.1.1 = or i64 %indvars.iv.i.i.i1562.1, 2
  %arrayidx.i.i.i1563.1.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1556.1, i64 %indvars.iv.next.i.i.i1565.1.1
  %525 = load ptr, ptr %m_data.i.i.i1559.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1564.1.2 = getelementptr inbounds ptr, ptr %525, i64 %indvars.iv.next.i.i.i1565.1.1
  %526 = load ptr, ptr %arrayidx3.i.i.i1564.1.2, align 8, !tbaa !219
  store ptr %526, ptr %arrayidx.i.i.i1563.1.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1565.1.2 = or i64 %indvars.iv.i.i.i1562.1, 3
  %arrayidx.i.i.i1563.1.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1556.1, i64 %indvars.iv.next.i.i.i1565.1.2
  %527 = load ptr, ptr %m_data.i.i.i1559.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1564.1.3 = getelementptr inbounds ptr, ptr %527, i64 %indvars.iv.next.i.i.i1565.1.2
  %528 = load ptr, ptr %arrayidx3.i.i.i1564.1.3, align 8, !tbaa !219
  store ptr %528, ptr %arrayidx.i.i.i1563.1.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1565.1.3 = add nuw nsw i64 %indvars.iv.i.i.i1562.1, 4
  %niter2065.next.3 = add i64 %niter2065, 4
  %niter2065.ncmp.3 = icmp eq i64 %niter2065.next.3, %unroll_iter2064
  br i1 %niter2065.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.1.loopexit.unr-lcssa, label %for.body.i.i.i1567.1

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.1.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1567.1, %for.body.lr.ph.i.i.i1561.1
  %indvars.iv.i.i.i1562.1.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1561.1 ], [ %indvars.iv.next.i.i.i1565.1.3, %for.body.i.i.i1567.1 ]
  %lcmp.mod2063.not = icmp eq i64 %xtraiter2061, 0
  br i1 %lcmp.mod2063.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.1, label %for.body.i.i.i1567.1.epil

for.body.i.i.i1567.1.epil:                        ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.1.loopexit.unr-lcssa, %for.body.i.i.i1567.1.epil
  %indvars.iv.i.i.i1562.1.epil = phi i64 [ %indvars.iv.next.i.i.i1565.1.epil, %for.body.i.i.i1567.1.epil ], [ %indvars.iv.i.i.i1562.1.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.1.loopexit.unr-lcssa ]
  %epil.iter2062 = phi i64 [ %epil.iter2062.next, %for.body.i.i.i1567.1.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.1.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1563.1.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1556.1, i64 %indvars.iv.i.i.i1562.1.epil
  %529 = load ptr, ptr %m_data.i.i.i1559.1, align 8, !tbaa !320
  %arrayidx3.i.i.i1564.1.epil = getelementptr inbounds ptr, ptr %529, i64 %indvars.iv.i.i.i1562.1.epil
  %530 = load ptr, ptr %arrayidx3.i.i.i1564.1.epil, align 8, !tbaa !219
  store ptr %530, ptr %arrayidx.i.i.i1563.1.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1565.1.epil = add nuw nsw i64 %indvars.iv.i.i.i1562.1.epil, 1
  %epil.iter2062.next = add i64 %epil.iter2062, 1
  %epil.iter2062.cmp.not = icmp eq i64 %epil.iter2062.next, %xtraiter2061
  br i1 %epil.iter2062.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.1, label %for.body.i.i.i1567.1.epil, !llvm.loop !365

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.1: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.1.loopexit.unr-lcssa, %for.body.i.i.i1567.1.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1558.1
  %m_data.i9.i.i1568.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %515, i64 0, i32 5
  %531 = load ptr, ptr %m_data.i9.i.i1568.1, align 8, !tbaa !320
  %tobool.not.i10.i.i1569.1 = icmp eq ptr %531, null
  %m_ownsMemory.i.i.i1570.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %515, i64 0, i32 6
  %532 = load i8, ptr %m_ownsMemory.i.i.i1570.1, align 8, !range !159
  %tobool2.not.i.i.i1571.1 = icmp eq i8 %532, 0
  %or.cond.i.i1572.1 = select i1 %tobool.not.i10.i.i1569.1, i1 true, i1 %tobool2.not.i.i.i1571.1
  br i1 %or.cond.i.i1572.1, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1577.1, label %if.then3.i.i.i1575.1

if.then3.i.i.i1575.1:                             ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.1
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %531)
  %.pre7.pre.i1574.1 = load i32, ptr %m_size.i.i1541.1, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1577.1

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1577.1: ; preds = %if.then3.i.i.i1575.1, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.1
  %.pre7.i1576.1 = phi i32 [ %.pre7.pre.i1574.1, %if.then3.i.i.i1575.1 ], [ %519, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.1 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1570.1, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1556.1, ptr %m_data.i9.i.i1568.1, align 8, !tbaa !320
  store i32 %cond.i.i1546.1, ptr %m_capacity.i.i1542.1, align 8, !tbaa !342
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583.1

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583.1: ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1577.1, %if.then.i1548.1, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583
  %533 = phi i32 [ %.pre7.i1576.1, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1577.1 ], [ %517, %if.then.i1548.1 ], [ %517, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583 ]
  %m_data.i1578.1 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %515, i64 0, i32 5
  %534 = load ptr, ptr %m_data.i1578.1, align 8, !tbaa !320
  %idxprom.i1579.1 = sext i32 %533 to i64
  %arrayidx.i1580.1 = getelementptr inbounds ptr, ptr %534, i64 %idxprom.i1579.1
  %535 = load ptr, ptr %arrayidx535.1, align 8, !tbaa !219
  store ptr %535, ptr %arrayidx.i1580.1, align 8, !tbaa !219
  %inc.i1581.1 = add nsw i32 %533, 1
  store i32 %inc.i1581.1, ptr %m_size.i.i1541.1, align 4, !tbaa !319
  %536 = load ptr, ptr %m_data.i1535, align 8, !tbaa !123
  %arrayidx.i1537.2 = getelementptr inbounds ptr, ptr %536, i64 %indvars.iv1858
  %537 = load ptr, ptr %arrayidx.i1537.2, align 8, !tbaa !219
  %538 = load ptr, ptr %m_data.i1538, align 8, !tbaa !95
  %arrayidx535.2 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %538, i64 %indvars.iv1858, i32 1, i64 2
  %m_size.i.i1541.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %537, i64 0, i32 2
  %539 = load i32, ptr %m_size.i.i1541.2, align 4, !tbaa !319
  %m_capacity.i.i1542.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %537, i64 0, i32 3
  %540 = load i32, ptr %m_capacity.i.i1542.2, align 8, !tbaa !342
  %cmp.i1543.2 = icmp eq i32 %539, %540
  br i1 %cmp.i1543.2, label %if.then.i1548.2, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583.2

if.then.i1548.2:                                  ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583.1
  %tobool.not.i.i1544.2 = icmp eq i32 %539, 0
  %mul.i.i1545.2 = shl nsw i32 %539, 1
  %cond.i.i1546.2 = select i1 %tobool.not.i.i1544.2, i32 1, i32 %mul.i.i1545.2
  %cmp.i.i1547.2 = icmp slt i32 %539, %cond.i.i1546.2
  br i1 %cmp.i.i1547.2, label %if.then.i.i1550.2, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583.2

if.then.i.i1550.2:                                ; preds = %if.then.i1548.2
  %tobool.not.i.i.i1549.2 = icmp eq i32 %cond.i.i1546.2, 0
  br i1 %tobool.not.i.i.i1549.2, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1558.2, label %if.then.i.i.i1555.2

if.then.i.i.i1555.2:                              ; preds = %if.then.i.i1550.2
  %conv.i.i.i.i1551.2 = sext i32 %cond.i.i1546.2 to i64
  %mul.i.i.i.i1552.2 = shl nsw i64 %conv.i.i.i.i1551.2, 3
  %call.i.i.i.i1553.2 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1552.2, i32 noundef 16)
  %.pre.i1554.2 = load i32, ptr %m_size.i.i1541.2, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1558.2

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1558.2: ; preds = %if.then.i.i.i1555.2, %if.then.i.i1550.2
  %541 = phi i32 [ %.pre.i1554.2, %if.then.i.i.i1555.2 ], [ %539, %if.then.i.i1550.2 ]
  %retval.0.i.i.i1556.2 = phi ptr [ %call.i.i.i.i1553.2, %if.then.i.i.i1555.2 ], [ null, %if.then.i.i1550.2 ]
  %cmp7.i.i.i1557.2 = icmp sgt i32 %541, 0
  br i1 %cmp7.i.i.i1557.2, label %for.body.lr.ph.i.i.i1561.2, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.2

for.body.lr.ph.i.i.i1561.2:                       ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1558.2
  %m_data.i.i.i1559.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %537, i64 0, i32 5
  %wide.trip.count.i.i.i1560.2 = zext i32 %541 to i64
  %xtraiter2066 = and i64 %wide.trip.count.i.i.i1560.2, 3
  %542 = icmp ult i32 %541, 4
  br i1 %542, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.2.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i1561.2.new

for.body.lr.ph.i.i.i1561.2.new:                   ; preds = %for.body.lr.ph.i.i.i1561.2
  %unroll_iter2069 = and i64 %wide.trip.count.i.i.i1560.2, 4294967292
  br label %for.body.i.i.i1567.2

for.body.i.i.i1567.2:                             ; preds = %for.body.i.i.i1567.2, %for.body.lr.ph.i.i.i1561.2.new
  %indvars.iv.i.i.i1562.2 = phi i64 [ 0, %for.body.lr.ph.i.i.i1561.2.new ], [ %indvars.iv.next.i.i.i1565.2.3, %for.body.i.i.i1567.2 ]
  %niter2070 = phi i64 [ 0, %for.body.lr.ph.i.i.i1561.2.new ], [ %niter2070.next.3, %for.body.i.i.i1567.2 ]
  %arrayidx.i.i.i1563.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1556.2, i64 %indvars.iv.i.i.i1562.2
  %543 = load ptr, ptr %m_data.i.i.i1559.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1564.2 = getelementptr inbounds ptr, ptr %543, i64 %indvars.iv.i.i.i1562.2
  %544 = load ptr, ptr %arrayidx3.i.i.i1564.2, align 8, !tbaa !219
  store ptr %544, ptr %arrayidx.i.i.i1563.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1565.2 = or i64 %indvars.iv.i.i.i1562.2, 1
  %arrayidx.i.i.i1563.2.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1556.2, i64 %indvars.iv.next.i.i.i1565.2
  %545 = load ptr, ptr %m_data.i.i.i1559.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1564.2.1 = getelementptr inbounds ptr, ptr %545, i64 %indvars.iv.next.i.i.i1565.2
  %546 = load ptr, ptr %arrayidx3.i.i.i1564.2.1, align 8, !tbaa !219
  store ptr %546, ptr %arrayidx.i.i.i1563.2.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1565.2.1 = or i64 %indvars.iv.i.i.i1562.2, 2
  %arrayidx.i.i.i1563.2.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1556.2, i64 %indvars.iv.next.i.i.i1565.2.1
  %547 = load ptr, ptr %m_data.i.i.i1559.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1564.2.2 = getelementptr inbounds ptr, ptr %547, i64 %indvars.iv.next.i.i.i1565.2.1
  %548 = load ptr, ptr %arrayidx3.i.i.i1564.2.2, align 8, !tbaa !219
  store ptr %548, ptr %arrayidx.i.i.i1563.2.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1565.2.2 = or i64 %indvars.iv.i.i.i1562.2, 3
  %arrayidx.i.i.i1563.2.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i1556.2, i64 %indvars.iv.next.i.i.i1565.2.2
  %549 = load ptr, ptr %m_data.i.i.i1559.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1564.2.3 = getelementptr inbounds ptr, ptr %549, i64 %indvars.iv.next.i.i.i1565.2.2
  %550 = load ptr, ptr %arrayidx3.i.i.i1564.2.3, align 8, !tbaa !219
  store ptr %550, ptr %arrayidx.i.i.i1563.2.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1565.2.3 = add nuw nsw i64 %indvars.iv.i.i.i1562.2, 4
  %niter2070.next.3 = add i64 %niter2070, 4
  %niter2070.ncmp.3 = icmp eq i64 %niter2070.next.3, %unroll_iter2069
  br i1 %niter2070.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.2.loopexit.unr-lcssa, label %for.body.i.i.i1567.2

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.2.loopexit.unr-lcssa: ; preds = %for.body.i.i.i1567.2, %for.body.lr.ph.i.i.i1561.2
  %indvars.iv.i.i.i1562.2.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i1561.2 ], [ %indvars.iv.next.i.i.i1565.2.3, %for.body.i.i.i1567.2 ]
  %lcmp.mod2068.not = icmp eq i64 %xtraiter2066, 0
  br i1 %lcmp.mod2068.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.2, label %for.body.i.i.i1567.2.epil

for.body.i.i.i1567.2.epil:                        ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.2.loopexit.unr-lcssa, %for.body.i.i.i1567.2.epil
  %indvars.iv.i.i.i1562.2.epil = phi i64 [ %indvars.iv.next.i.i.i1565.2.epil, %for.body.i.i.i1567.2.epil ], [ %indvars.iv.i.i.i1562.2.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.2.loopexit.unr-lcssa ]
  %epil.iter2067 = phi i64 [ %epil.iter2067.next, %for.body.i.i.i1567.2.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.2.loopexit.unr-lcssa ]
  %arrayidx.i.i.i1563.2.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i1556.2, i64 %indvars.iv.i.i.i1562.2.epil
  %551 = load ptr, ptr %m_data.i.i.i1559.2, align 8, !tbaa !320
  %arrayidx3.i.i.i1564.2.epil = getelementptr inbounds ptr, ptr %551, i64 %indvars.iv.i.i.i1562.2.epil
  %552 = load ptr, ptr %arrayidx3.i.i.i1564.2.epil, align 8, !tbaa !219
  store ptr %552, ptr %arrayidx.i.i.i1563.2.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i1565.2.epil = add nuw nsw i64 %indvars.iv.i.i.i1562.2.epil, 1
  %epil.iter2067.next = add i64 %epil.iter2067, 1
  %epil.iter2067.cmp.not = icmp eq i64 %epil.iter2067.next, %xtraiter2066
  br i1 %epil.iter2067.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.2, label %for.body.i.i.i1567.2.epil, !llvm.loop !366

_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.2: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.2.loopexit.unr-lcssa, %for.body.i.i.i1567.2.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE8allocateEi.exit.i.i1558.2
  %m_data.i9.i.i1568.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %537, i64 0, i32 5
  %553 = load ptr, ptr %m_data.i9.i.i1568.2, align 8, !tbaa !320
  %tobool.not.i10.i.i1569.2 = icmp eq ptr %553, null
  %m_ownsMemory.i.i.i1570.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %537, i64 0, i32 6
  %554 = load i8, ptr %m_ownsMemory.i.i.i1570.2, align 8, !range !159
  %tobool2.not.i.i.i1571.2 = icmp eq i8 %554, 0
  %or.cond.i.i1572.2 = select i1 %tobool.not.i10.i.i1569.2, i1 true, i1 %tobool2.not.i.i.i1571.2
  br i1 %or.cond.i.i1572.2, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1577.2, label %if.then3.i.i.i1575.2

if.then3.i.i.i1575.2:                             ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.2
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %553)
  %.pre7.pre.i1574.2 = load i32, ptr %m_size.i.i1541.2, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1577.2

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1577.2: ; preds = %if.then3.i.i.i1575.2, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.2
  %.pre7.i1576.2 = phi i32 [ %.pre7.pre.i1574.2, %if.then3.i.i.i1575.2 ], [ %541, %_ZNK20btAlignedObjectArrayIPN10btSoftBody4NodeEE4copyEiiPS2_.exit.i.i1573.2 ]
  store i8 1, ptr %m_ownsMemory.i.i.i1570.2, align 8, !tbaa !341
  store ptr %retval.0.i.i.i1556.2, ptr %m_data.i9.i.i1568.2, align 8, !tbaa !320
  store i32 %cond.i.i1546.2, ptr %m_capacity.i.i1542.2, align 8, !tbaa !342
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583.2

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583.2: ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1577.2, %if.then.i1548.2, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583.1
  %555 = phi i32 [ %.pre7.i1576.2, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE10deallocateEv.exit.i.i1577.2 ], [ %539, %if.then.i1548.2 ], [ %539, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583.1 ]
  %m_data.i1578.2 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %537, i64 0, i32 5
  %556 = load ptr, ptr %m_data.i1578.2, align 8, !tbaa !320
  %idxprom.i1579.2 = sext i32 %555 to i64
  %arrayidx.i1580.2 = getelementptr inbounds ptr, ptr %556, i64 %idxprom.i1579.2
  %557 = load ptr, ptr %arrayidx535.2, align 8, !tbaa !219
  store ptr %557, ptr %arrayidx.i1580.2, align 8, !tbaa !219
  %inc.i1581.2 = add nsw i32 %555, 1
  store i32 %inc.i1581.2, ptr %m_size.i.i1541.2, align 4, !tbaa !319
  %indvars.iv.next1859 = add nuw nsw i64 %indvars.iv1858, 1
  %558 = load i32, ptr %m_size.i1467, align 4, !tbaa !96
  %559 = sext i32 %558 to i64
  %cmp521 = icmp slt i64 %indvars.iv.next1859, %559
  br i1 %cmp521, label %for.cond524.preheader, label %if.end543

if.end543:                                        ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1466.3, %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE9push_backERKS2_.exit1583.2, %for.cond475.preheader, %for.cond518.preheader, %if.then3.i.i.i1326, %invoke.cont442
  %560 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %tobool546.not = icmp eq i32 %560, 0
  br i1 %tobool546.not, label %if.end619, label %if.then547

if.then547:                                       ; preds = %if.end543
  tail call void @_ZN10btSoftBody18initializeClustersEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  tail call void @_ZN10btSoftBody14updateClustersEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  %561 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  %mul552 = mul nsw i32 %561, %561
  %m_size.i.i1587 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 2
  %562 = load i32, ptr %m_size.i.i1587, align 4, !tbaa !128
  %cmp4.i1589 = icmp slt i32 %562, %mul552
  br i1 %cmp4.i1589, label %if.then5.i1593, label %_ZN20btAlignedObjectArrayIbE6resizeEiRKb.exit

if.then5.i1593:                                   ; preds = %if.then547
  %m_capacity.i.i.i1591 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 3
  %563 = load i32, ptr %m_capacity.i.i.i1591, align 8, !tbaa !129
  %cmp.i.i1592 = icmp slt i32 %563, %mul552
  br i1 %cmp.i.i1592, label %if.then.i.i1595, label %if.then5.i1593.for.body10.lr.ph.i1622_crit_edge

if.then5.i1593.for.body10.lr.ph.i1622_crit_edge:  ; preds = %if.then5.i1593
  %m_data11.i1620.phi.trans.insert = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 5
  %.pre1925 = load ptr, ptr %m_data11.i1620.phi.trans.insert, align 8, !tbaa !127
  br label %for.body10.lr.ph.i1622

if.then.i.i1595:                                  ; preds = %if.then5.i1593
  %tobool.not.i.i.i1594 = icmp eq i32 %561, 0
  br i1 %tobool.not.i.i.i1594, label %_ZN20btAlignedObjectArrayIbE8allocateEi.exit.i.i, label %if.then.i.i.i1599

if.then.i.i.i1599:                                ; preds = %if.then.i.i1595
  %conv.i.i.i.i1596 = zext i32 %mul552 to i64
  %call.i.i.i.i1597 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %conv.i.i.i.i1596, i32 noundef 16)
  %.pre.i1598 = load i32, ptr %m_size.i.i1587, align 4, !tbaa !128
  br label %_ZN20btAlignedObjectArrayIbE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIbE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i1599, %if.then.i.i1595
  %564 = phi i32 [ %.pre.i1598, %if.then.i.i.i1599 ], [ %562, %if.then.i.i1595 ]
  %retval.0.i.i.i1600 = phi ptr [ %call.i.i.i.i1597, %if.then.i.i.i1599 ], [ null, %if.then.i.i1595 ]
  %cmp7.i.i.i1601 = icmp sgt i32 %564, 0
  %m_data.i.i.i1602 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 5
  %565 = load ptr, ptr %m_data.i.i.i1602, align 8, !tbaa !127
  br i1 %cmp7.i.i.i1601, label %iter.check, label %_ZNK20btAlignedObjectArrayIbE4copyEiiPb.exit.i.i

iter.check:                                       ; preds = %_ZN20btAlignedObjectArrayIbE8allocateEi.exit.i.i
  %566 = ptrtoint ptr %565 to i64
  %retval.0.i.i.i16001965 = ptrtoint ptr %retval.0.i.i.i1600 to i64
  %wide.trip.count.i.i.i1603 = zext i32 %564 to i64
  %min.iters.check = icmp ult i32 %564, 8
  %567 = sub i64 %retval.0.i.i.i16001965, %566
  %diff.check = icmp ult i64 %567, 32
  %or.cond1974 = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond1974, label %for.body.i.i.i1610.preheader, label %vector.main.loop.iter.check

vector.main.loop.iter.check:                      ; preds = %iter.check
  %min.iters.check1966 = icmp ult i32 %564, 32
  br i1 %min.iters.check1966, label %vec.epilog.ph, label %vector.ph

vector.ph:                                        ; preds = %vector.main.loop.iter.check
  %n.vec = and i64 %wide.trip.count.i.i.i1603, 4294967264
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %568 = getelementptr inbounds i8, ptr %retval.0.i.i.i1600, i64 %index
  %569 = getelementptr inbounds i8, ptr %565, i64 %index
  %wide.load = load <16 x i8>, ptr %569, align 1, !tbaa !367
  %570 = getelementptr inbounds i8, ptr %569, i64 16
  %wide.load1967 = load <16 x i8>, ptr %570, align 1, !tbaa !367
  store <16 x i8> %wide.load, ptr %568, align 1, !tbaa !367
  %571 = getelementptr inbounds i8, ptr %568, i64 16
  store <16 x i8> %wide.load1967, ptr %571, align 1, !tbaa !367
  %index.next = add nuw i64 %index, 32
  %572 = icmp eq i64 %index.next, %n.vec
  br i1 %572, label %middle.block, label %vector.body, !llvm.loop !368

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i.i1603
  br i1 %cmp.n, label %if.then.i11.i.i1616, label %vec.epilog.iter.check

vec.epilog.iter.check:                            ; preds = %middle.block
  %n.vec.remaining = and i64 %wide.trip.count.i.i.i1603, 24
  %min.epilog.iters.check = icmp eq i64 %n.vec.remaining, 0
  br i1 %min.epilog.iters.check, label %for.body.i.i.i1610.preheader, label %vec.epilog.ph

vec.epilog.ph:                                    ; preds = %vector.main.loop.iter.check, %vec.epilog.iter.check
  %vec.epilog.resume.val = phi i64 [ %n.vec, %vec.epilog.iter.check ], [ 0, %vector.main.loop.iter.check ]
  %n.vec1969 = and i64 %wide.trip.count.i.i.i1603, 4294967288
  br label %vec.epilog.vector.body

vec.epilog.vector.body:                           ; preds = %vec.epilog.vector.body, %vec.epilog.ph
  %index1971 = phi i64 [ %vec.epilog.resume.val, %vec.epilog.ph ], [ %index.next1973, %vec.epilog.vector.body ]
  %573 = getelementptr inbounds i8, ptr %retval.0.i.i.i1600, i64 %index1971
  %574 = getelementptr inbounds i8, ptr %565, i64 %index1971
  %wide.load1972 = load <8 x i8>, ptr %574, align 1, !tbaa !367
  store <8 x i8> %wide.load1972, ptr %573, align 1, !tbaa !367
  %index.next1973 = add nuw i64 %index1971, 8
  %575 = icmp eq i64 %index.next1973, %n.vec1969
  br i1 %575, label %vec.epilog.middle.block, label %vec.epilog.vector.body, !llvm.loop !369

vec.epilog.middle.block:                          ; preds = %vec.epilog.vector.body
  %cmp.n1970 = icmp eq i64 %n.vec1969, %wide.trip.count.i.i.i1603
  br i1 %cmp.n1970, label %if.then.i11.i.i1616, label %for.body.i.i.i1610.preheader

for.body.i.i.i1610.preheader:                     ; preds = %iter.check, %vec.epilog.iter.check, %vec.epilog.middle.block
  %indvars.iv.i.i.i1605.ph = phi i64 [ 0, %iter.check ], [ %n.vec, %vec.epilog.iter.check ], [ %n.vec1969, %vec.epilog.middle.block ]
  %576 = xor i64 %indvars.iv.i.i.i1605.ph, -1
  %577 = add nsw i64 %576, %wide.trip.count.i.i.i1603
  %xtraiter2127 = and i64 %wide.trip.count.i.i.i1603, 3
  %lcmp.mod2128.not = icmp eq i64 %xtraiter2127, 0
  br i1 %lcmp.mod2128.not, label %for.body.i.i.i1610.prol.loopexit, label %for.body.i.i.i1610.prol

for.body.i.i.i1610.prol:                          ; preds = %for.body.i.i.i1610.preheader, %for.body.i.i.i1610.prol
  %indvars.iv.i.i.i1605.prol = phi i64 [ %indvars.iv.next.i.i.i1608.prol, %for.body.i.i.i1610.prol ], [ %indvars.iv.i.i.i1605.ph, %for.body.i.i.i1610.preheader ]
  %prol.iter2129 = phi i64 [ %prol.iter2129.next, %for.body.i.i.i1610.prol ], [ 0, %for.body.i.i.i1610.preheader ]
  %arrayidx.i.i.i1606.prol = getelementptr inbounds i8, ptr %retval.0.i.i.i1600, i64 %indvars.iv.i.i.i1605.prol
  %arrayidx3.i.i.i1607.prol = getelementptr inbounds i8, ptr %565, i64 %indvars.iv.i.i.i1605.prol
  %578 = load i8, ptr %arrayidx3.i.i.i1607.prol, align 1, !tbaa !367, !range !159, !noundef !192
  store i8 %578, ptr %arrayidx.i.i.i1606.prol, align 1, !tbaa !367
  %indvars.iv.next.i.i.i1608.prol = add nuw nsw i64 %indvars.iv.i.i.i1605.prol, 1
  %prol.iter2129.next = add i64 %prol.iter2129, 1
  %prol.iter2129.cmp.not = icmp eq i64 %prol.iter2129.next, %xtraiter2127
  br i1 %prol.iter2129.cmp.not, label %for.body.i.i.i1610.prol.loopexit, label %for.body.i.i.i1610.prol, !llvm.loop !370

for.body.i.i.i1610.prol.loopexit:                 ; preds = %for.body.i.i.i1610.prol, %for.body.i.i.i1610.preheader
  %indvars.iv.i.i.i1605.unr = phi i64 [ %indvars.iv.i.i.i1605.ph, %for.body.i.i.i1610.preheader ], [ %indvars.iv.next.i.i.i1608.prol, %for.body.i.i.i1610.prol ]
  %579 = icmp ult i64 %577, 3
  br i1 %579, label %if.then.i11.i.i1616, label %for.body.i.i.i1610

for.body.i.i.i1610:                               ; preds = %for.body.i.i.i1610.prol.loopexit, %for.body.i.i.i1610
  %indvars.iv.i.i.i1605 = phi i64 [ %indvars.iv.next.i.i.i1608.3, %for.body.i.i.i1610 ], [ %indvars.iv.i.i.i1605.unr, %for.body.i.i.i1610.prol.loopexit ]
  %arrayidx.i.i.i1606 = getelementptr inbounds i8, ptr %retval.0.i.i.i1600, i64 %indvars.iv.i.i.i1605
  %arrayidx3.i.i.i1607 = getelementptr inbounds i8, ptr %565, i64 %indvars.iv.i.i.i1605
  %580 = load i8, ptr %arrayidx3.i.i.i1607, align 1, !tbaa !367, !range !159, !noundef !192
  store i8 %580, ptr %arrayidx.i.i.i1606, align 1, !tbaa !367
  %indvars.iv.next.i.i.i1608 = add nuw nsw i64 %indvars.iv.i.i.i1605, 1
  %arrayidx.i.i.i1606.1 = getelementptr inbounds i8, ptr %retval.0.i.i.i1600, i64 %indvars.iv.next.i.i.i1608
  %arrayidx3.i.i.i1607.1 = getelementptr inbounds i8, ptr %565, i64 %indvars.iv.next.i.i.i1608
  %581 = load i8, ptr %arrayidx3.i.i.i1607.1, align 1, !tbaa !367, !range !159, !noundef !192
  store i8 %581, ptr %arrayidx.i.i.i1606.1, align 1, !tbaa !367
  %indvars.iv.next.i.i.i1608.1 = add nuw nsw i64 %indvars.iv.i.i.i1605, 2
  %arrayidx.i.i.i1606.2 = getelementptr inbounds i8, ptr %retval.0.i.i.i1600, i64 %indvars.iv.next.i.i.i1608.1
  %arrayidx3.i.i.i1607.2 = getelementptr inbounds i8, ptr %565, i64 %indvars.iv.next.i.i.i1608.1
  %582 = load i8, ptr %arrayidx3.i.i.i1607.2, align 1, !tbaa !367, !range !159, !noundef !192
  store i8 %582, ptr %arrayidx.i.i.i1606.2, align 1, !tbaa !367
  %indvars.iv.next.i.i.i1608.2 = add nuw nsw i64 %indvars.iv.i.i.i1605, 3
  %arrayidx.i.i.i1606.3 = getelementptr inbounds i8, ptr %retval.0.i.i.i1600, i64 %indvars.iv.next.i.i.i1608.2
  %arrayidx3.i.i.i1607.3 = getelementptr inbounds i8, ptr %565, i64 %indvars.iv.next.i.i.i1608.2
  %583 = load i8, ptr %arrayidx3.i.i.i1607.3, align 1, !tbaa !367, !range !159, !noundef !192
  store i8 %583, ptr %arrayidx.i.i.i1606.3, align 1, !tbaa !367
  %indvars.iv.next.i.i.i1608.3 = add nuw nsw i64 %indvars.iv.i.i.i1605, 4
  %exitcond.not.i.i.i1609.3 = icmp eq i64 %indvars.iv.next.i.i.i1608.3, %wide.trip.count.i.i.i1603
  br i1 %exitcond.not.i.i.i1609.3, label %if.then.i11.i.i1616, label %for.body.i.i.i1610, !llvm.loop !371

_ZNK20btAlignedObjectArrayIbE4copyEiiPb.exit.i.i: ; preds = %_ZN20btAlignedObjectArrayIbE8allocateEi.exit.i.i
  %tobool.not.i10.i.i1611 = icmp eq ptr %565, null
  br i1 %tobool.not.i10.i.i1611, label %if.end.thread36.i1613, label %if.then.i11.i.i1616

if.end.thread36.i1613:                            ; preds = %_ZNK20btAlignedObjectArrayIbE4copyEiiPb.exit.i.i
  %m_ownsMemory.i37.i1612 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 6
  store i8 1, ptr %m_ownsMemory.i37.i1612, align 8, !tbaa !126
  store ptr %retval.0.i.i.i1600, ptr %m_data.i.i.i1602, align 8, !tbaa !127
  store i32 %mul552, ptr %m_capacity.i.i.i1591, align 8, !tbaa !129
  br label %for.body10.lr.ph.i1622

if.then.i11.i.i1616:                              ; preds = %for.body.i.i.i1610.prol.loopexit, %for.body.i.i.i1610, %middle.block, %vec.epilog.middle.block, %_ZNK20btAlignedObjectArrayIbE4copyEiiPb.exit.i.i
  %m_ownsMemory.i.i.i1614 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 6
  %584 = load i8, ptr %m_ownsMemory.i.i.i1614, align 8, !tbaa !126, !range !159, !noundef !192
  %tobool2.not.i.i.i1615 = icmp eq i8 %584, 0
  br i1 %tobool2.not.i.i.i1615, label %if.end.i1619, label %if.then3.i.i.i1617

if.then3.i.i.i1617:                               ; preds = %if.then.i11.i.i1616
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %565)
  br label %if.end.i1619

if.end.i1619:                                     ; preds = %if.then3.i.i.i1617, %if.then.i11.i.i1616
  store i8 1, ptr %m_ownsMemory.i.i.i1614, align 8, !tbaa !126
  store ptr %retval.0.i.i.i1600, ptr %m_data.i.i.i1602, align 8, !tbaa !127
  store i32 %mul552, ptr %m_capacity.i.i.i1591, align 8, !tbaa !129
  br label %for.body10.lr.ph.i1622

for.body10.lr.ph.i1622:                           ; preds = %if.then5.i1593.for.body10.lr.ph.i1622_crit_edge, %if.end.i1619, %if.end.thread36.i1613
  %585 = phi ptr [ %.pre1925, %if.then5.i1593.for.body10.lr.ph.i1622_crit_edge ], [ %retval.0.i.i.i1600, %if.end.i1619 ], [ %retval.0.i.i.i1600, %if.end.thread36.i1613 ]
  %586 = sext i32 %562 to i64
  %wide.trip.count.i1621 = zext i32 %mul552 to i64
  %scevgep = getelementptr i8, ptr %585, i64 %586
  %587 = sub nsw i64 %wide.trip.count.i1621, %586
  tail call void @llvm.memset.p0.i64(ptr align 1 %scevgep, i8 0, i64 %587, i1 false), !tbaa !367
  %.pre1926 = load i32, ptr %m_size.i.i, align 4, !tbaa !124
  br label %_ZN20btAlignedObjectArrayIbE6resizeEiRKb.exit

_ZN20btAlignedObjectArrayIbE6resizeEiRKb.exit:    ; preds = %for.body10.lr.ph.i1622, %if.then547
  %588 = phi i32 [ %.pre1926, %for.body10.lr.ph.i1622 ], [ %561, %if.then547 ]
  store i32 %mul552, ptr %m_size.i.i1587, align 4, !tbaa !128
  %cmp5571831 = icmp sgt i32 %588, 0
  br i1 %cmp5571831, label %for.body559.lr.ph, label %if.end619

for.body559.lr.ph:                                ; preds = %_ZN20btAlignedObjectArrayIbE6resizeEiRKb.exit
  %m_data.i1629 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %589 = load ptr, ptr %m_data.i1629, align 8, !tbaa !123
  %m_data.i1641 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 25, i32 5
  %590 = load ptr, ptr %m_data.i1641, align 8
  %591 = zext i32 %588 to i64
  %wide.trip.count1917 = zext i32 %588 to i64
  br label %for.body567.lr.ph

for.body567.lr.ph:                                ; preds = %for.cond.cleanup566, %for.body559.lr.ph
  %indvars.iv1914 = phi i64 [ 0, %for.body559.lr.ph ], [ %indvars.iv.next1915, %for.cond.cleanup566 ]
  %arrayidx.i1631 = getelementptr inbounds ptr, ptr %589, i64 %indvars.iv1914
  %592 = load ptr, ptr %arrayidx.i1631, align 8, !tbaa !219
  %m_clusterIndex = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %592, i64 0, i32 24
  %593 = trunc i64 %indvars.iv1914 to i32
  store i32 %593, ptr %m_clusterIndex, align 4, !tbaa !372
  %m_size.i1639 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %592, i64 0, i32 2
  %594 = load i32, ptr %m_size.i1639, align 4, !tbaa !319
  %m_data.i1645 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %592, i64 0, i32 5
  %smax = tail call i32 @llvm.smax.i32(i32 %594, i32 0)
  %wide.trip.count1905 = zext i32 %smax to i64
  %exitcond1906.not1963 = icmp slt i32 %594, 1
  br label %for.body567

for.cond.cleanup566:                              ; preds = %for.cond.cleanup580
  %indvars.iv.next1915 = add nuw nsw i64 %indvars.iv1914, 1
  %exitcond1918.not = icmp eq i64 %indvars.iv.next1915, %wide.trip.count1917
  br i1 %exitcond1918.not, label %if.end619, label %for.body567.lr.ph

for.body567:                                      ; preds = %for.body567.lr.ph, %for.cond.cleanup580
  %indvars.iv1907 = phi i64 [ 0, %for.body567.lr.ph ], [ %indvars.iv.next1908, %for.cond.cleanup580 ]
  %arrayidx.i1638 = getelementptr inbounds ptr, ptr %589, i64 %indvars.iv1907
  %595 = load ptr, ptr %arrayidx.i1638, align 8, !tbaa !219
  %m_size.i1644 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %595, i64 0, i32 2
  %m_data.i1648 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %595, i64 0, i32 5
  br i1 %exitcond1906.not1963, label %for.cond.cleanup580, label %for.cond583.preheader.preheader

for.cond583.preheader.preheader:                  ; preds = %for.body567
  %596 = load i32, ptr %m_size.i1644, align 4, !tbaa !319
  %cmp5861823 = icmp sgt i32 %596, 0
  %wide.trip.count1901 = zext i32 %596 to i64
  br label %for.cond583.preheader

for.cond583.preheader:                            ; preds = %for.cond583.preheader.preheader, %cleanup
  %indvars.iv19031964 = phi i64 [ %indvars.iv.next1904, %cleanup ], [ 0, %for.cond583.preheader.preheader ]
  br i1 %cmp5861823, label %for.body588.lr.ph, label %cleanup

for.body588.lr.ph:                                ; preds = %for.cond583.preheader
  %597 = load ptr, ptr %m_data.i1645, align 8, !tbaa !320
  %arrayidx.i1647 = getelementptr inbounds ptr, ptr %597, i64 %indvars.iv19031964
  %598 = load ptr, ptr %arrayidx.i1647, align 8, !tbaa !219
  %599 = load ptr, ptr %m_data.i1648, align 8, !tbaa !320
  br label %for.body588

for.cond.cleanup580:                              ; preds = %cleanup, %for.body588, %for.body567
  %.lcssa = phi i8 [ 0, %for.body567 ], [ 1, %for.body588 ], [ 0, %cleanup ]
  %600 = mul nsw i64 %indvars.iv1907, %591
  %601 = add nuw nsw i64 %600, %indvars.iv1914
  %arrayidx.i1643 = getelementptr inbounds i8, ptr %590, i64 %601
  store i8 %.lcssa, ptr %arrayidx.i1643, align 1, !tbaa !367
  %indvars.iv.next1908 = add nuw nsw i64 %indvars.iv1907, 1
  %exitcond1913.not = icmp eq i64 %indvars.iv.next1908, %wide.trip.count1917
  br i1 %exitcond1913.not, label %for.cond.cleanup566, label %for.body567

for.cond583:                                      ; preds = %for.body588
  %indvars.iv.next1899 = add nuw nsw i64 %indvars.iv1898, 1
  %exitcond1902.not = icmp eq i64 %indvars.iv.next1899, %wide.trip.count1901
  br i1 %exitcond1902.not, label %cleanup, label %for.body588

for.body588:                                      ; preds = %for.body588.lr.ph, %for.cond583
  %indvars.iv1898 = phi i64 [ 0, %for.body588.lr.ph ], [ %indvars.iv.next1899, %for.cond583 ]
  %arrayidx.i1650 = getelementptr inbounds ptr, ptr %599, i64 %indvars.iv1898
  %602 = load ptr, ptr %arrayidx.i1650, align 8, !tbaa !219
  %cmp593 = icmp eq ptr %598, %602
  br i1 %cmp593, label %for.cond.cleanup580, label %for.cond583

cleanup:                                          ; preds = %for.cond583, %for.cond583.preheader
  %indvars.iv.next1904 = add nuw nsw i64 %indvars.iv19031964, 1
  %exitcond1906.not = icmp eq i64 %indvars.iv.next1904, %wide.trip.count1905
  br i1 %exitcond1906.not, label %for.cond.cleanup580, label %for.cond583.preheader

if.end619:                                        ; preds = %for.cond.cleanup566, %_ZN20btAlignedObjectArrayIbE6resizeEiRKb.exit, %if.end543
  %603 = phi i32 [ %588, %_ZN20btAlignedObjectArrayIbE6resizeEiRKb.exit ], [ 0, %if.end543 ], [ %588, %for.cond.cleanup566 ]
  ret i32 %603

terminate.lpad:                                   ; preds = %if.then3.i.i.i1344, %if.then3.i.i.i1334
  %604 = landingpad { ptr, i32 }
          catch ptr null
  %605 = extractvalue { ptr, i32 } %604, 0
  tail call void @__clang_call_terminate(ptr %605) #39
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayI9btVector3ED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.8, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !33
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.8, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayI9btVector3E5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayI9btVector3E5clearEv.exit

_ZN20btAlignedObjectArrayI9btVector3E5clearEv.exit: ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !30
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !33
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray.8, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !34
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.8, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !35
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody18initializeClustersEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #0 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !124
  %cmp380 = icmp sgt i32 %0, 0
  br i1 %cmp380, label %for.body.lr.ph, label %for.end157

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.end154
  %indvars.iv391 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next392, %for.end154 ]
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv391
  %2 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %m_imass = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 5
  store float 0.000000e+00, ptr %m_imass, align 4, !tbaa !373
  %m_size.i224 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %2, i64 0, i32 2
  %3 = load i32, ptr %m_size.i224, align 4, !tbaa !319
  %m_size.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 1, i32 2
  %4 = load i32, ptr %m_size.i.i, align 4, !tbaa !40
  %cmp4.i = icmp slt i32 %4, %3
  br i1 %cmp4.i, label %if.then5.i, label %_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit

if.then5.i:                                       ; preds = %for.body
  %m_capacity.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 1, i32 3
  %5 = load i32, ptr %m_capacity.i.i.i, align 8, !tbaa !41
  %cmp.i.i = icmp slt i32 %5, %3
  br i1 %cmp.i.i, label %if.then.i.i, label %if.then5.i.for.body10.lr.ph.i_crit_edge

if.then5.i.for.body10.lr.ph.i_crit_edge:          ; preds = %if.then5.i
  %m_data11.i.phi.trans.insert = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 1, i32 5
  %.pre = load ptr, ptr %m_data11.i.phi.trans.insert, align 8, !tbaa !39
  br label %for.body10.lr.ph.i

if.then.i.i:                                      ; preds = %if.then5.i
  %tobool.not.i.i.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %3 to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 2
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !40
  br label %_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i
  %6 = phi i32 [ %.pre.i, %if.then.i.i.i ], [ %4, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %6, 0
  %m_data.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 1, i32 5
  %7 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !39
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIfE4copyEiiPf.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i
  %8 = ptrtoint ptr %7 to i64
  %retval.0.i.i.i414 = ptrtoint ptr %retval.0.i.i.i to i64
  %wide.trip.count.i.i.i = zext i32 %6 to i64
  %min.iters.check = icmp ult i32 %6, 8
  %9 = sub i64 %retval.0.i.i.i414, %8
  %diff.check = icmp ult i64 %9, 32
  %or.cond = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond, label %for.body.i.i.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i.i
  %n.vec = and i64 %wide.trip.count.i.i.i, 4294967288
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %10 = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %index
  %11 = getelementptr inbounds float, ptr %7, i64 %index
  %wide.load = load <4 x float>, ptr %11, align 4, !tbaa !137
  %12 = getelementptr inbounds float, ptr %11, i64 4
  %wide.load415 = load <4 x float>, ptr %12, align 4, !tbaa !137
  store <4 x float> %wide.load, ptr %10, align 4, !tbaa !137
  %13 = getelementptr inbounds float, ptr %10, i64 4
  store <4 x float> %wide.load415, ptr %13, align 4, !tbaa !137
  %index.next = add nuw i64 %index, 8
  %14 = icmp eq i64 %index.next, %n.vec
  br i1 %14, label %middle.block, label %vector.body, !llvm.loop !374

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i.i
  br i1 %cmp.n, label %if.then.i11.i.i, label %for.body.i.i.i.preheader

for.body.i.i.i.preheader:                         ; preds = %for.body.lr.ph.i.i.i, %middle.block
  %indvars.iv.i.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %n.vec, %middle.block ]
  %15 = xor i64 %indvars.iv.i.i.i.ph, -1
  %16 = add nsw i64 %15, %wide.trip.count.i.i.i
  %xtraiter = and i64 %wide.trip.count.i.i.i, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol

for.body.i.i.i.prol:                              ; preds = %for.body.i.i.i.preheader, %for.body.i.i.i.prol
  %indvars.iv.i.i.i.prol = phi i64 [ %indvars.iv.next.i.i.i.prol, %for.body.i.i.i.prol ], [ %indvars.iv.i.i.i.ph, %for.body.i.i.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.i.i.prol ], [ 0, %for.body.i.i.i.preheader ]
  %arrayidx.i.i.i.prol = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.prol
  %arrayidx3.i.i.i.prol = getelementptr inbounds float, ptr %7, i64 %indvars.iv.i.i.i.prol
  %17 = load float, ptr %arrayidx3.i.i.i.prol, align 4, !tbaa !137
  store float %17, ptr %arrayidx.i.i.i.prol, align 4, !tbaa !137
  %indvars.iv.next.i.i.i.prol = add nuw nsw i64 %indvars.iv.i.i.i.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.i.i.i.prol.loopexit, label %for.body.i.i.i.prol, !llvm.loop !375

for.body.i.i.i.prol.loopexit:                     ; preds = %for.body.i.i.i.prol, %for.body.i.i.i.preheader
  %indvars.iv.i.i.i.unr = phi i64 [ %indvars.iv.i.i.i.ph, %for.body.i.i.i.preheader ], [ %indvars.iv.next.i.i.i.prol, %for.body.i.i.i.prol ]
  %18 = icmp ult i64 %16, 3
  br i1 %18, label %if.then.i11.i.i, label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i
  %indvars.iv.i.i.i = phi i64 [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ], [ %indvars.iv.i.i.i.unr, %for.body.i.i.i.prol.loopexit ]
  %arrayidx.i.i.i = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %arrayidx3.i.i.i = getelementptr inbounds float, ptr %7, i64 %indvars.iv.i.i.i
  %19 = load float, ptr %arrayidx3.i.i.i, align 4, !tbaa !137
  store float %19, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %indvars.iv.next.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %arrayidx3.i.i.i.1 = getelementptr inbounds float, ptr %7, i64 %indvars.iv.next.i.i.i
  %20 = load float, ptr %arrayidx3.i.i.i.1, align 4, !tbaa !137
  store float %20, ptr %arrayidx.i.i.i.1, align 4, !tbaa !137
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %arrayidx3.i.i.i.2 = getelementptr inbounds float, ptr %7, i64 %indvars.iv.next.i.i.i.1
  %21 = load float, ptr %arrayidx3.i.i.i.2, align 4, !tbaa !137
  store float %21, ptr %arrayidx.i.i.i.2, align 4, !tbaa !137
  %indvars.iv.next.i.i.i.2 = add nuw nsw i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds float, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %arrayidx3.i.i.i.3 = getelementptr inbounds float, ptr %7, i64 %indvars.iv.next.i.i.i.2
  %22 = load float, ptr %arrayidx3.i.i.i.3, align 4, !tbaa !137
  store float %22, ptr %arrayidx.i.i.i.3, align 4, !tbaa !137
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %exitcond.not.i.i.i.3 = icmp eq i64 %indvars.iv.next.i.i.i.3, %wide.trip.count.i.i.i
  br i1 %exitcond.not.i.i.i.3, label %if.then.i11.i.i, label %for.body.i.i.i, !llvm.loop !376

_ZNK20btAlignedObjectArrayIfE4copyEiiPf.exit.i.i: ; preds = %_ZN20btAlignedObjectArrayIfE8allocateEi.exit.i.i
  %tobool.not.i10.i.i = icmp eq ptr %7, null
  br i1 %tobool.not.i10.i.i, label %if.end.thread36.i, label %if.then.i11.i.i

if.end.thread36.i:                                ; preds = %_ZNK20btAlignedObjectArrayIfE4copyEiiPf.exit.i.i
  %m_ownsMemory.i37.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 1, i32 6
  store i8 1, ptr %m_ownsMemory.i37.i, align 8, !tbaa !36
  store ptr %retval.0.i.i.i, ptr %m_data.i.i.i, align 8, !tbaa !39
  store i32 %3, ptr %m_capacity.i.i.i, align 8, !tbaa !41
  br label %for.body10.lr.ph.i

if.then.i11.i.i:                                  ; preds = %for.body.i.i.i.prol.loopexit, %for.body.i.i.i, %middle.block, %_ZNK20btAlignedObjectArrayIfE4copyEiiPf.exit.i.i
  %m_ownsMemory.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 1, i32 6
  %23 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !36, !range !159, !noundef !192
  %tobool2.not.i.i.i = icmp eq i8 %23, 0
  br i1 %tobool2.not.i.i.i, label %if.end.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %if.then.i11.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %7)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i.i.i, %if.then.i11.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !36
  store ptr %retval.0.i.i.i, ptr %m_data.i.i.i, align 8, !tbaa !39
  store i32 %3, ptr %m_capacity.i.i.i, align 8, !tbaa !41
  br label %for.body10.lr.ph.i

for.body10.lr.ph.i:                               ; preds = %if.then5.i.for.body10.lr.ph.i_crit_edge, %if.end.i, %if.end.thread36.i
  %24 = phi ptr [ %.pre, %if.then5.i.for.body10.lr.ph.i_crit_edge ], [ %retval.0.i.i.i, %if.end.i ], [ %retval.0.i.i.i, %if.end.thread36.i ]
  %25 = sext i32 %4 to i64
  %wide.trip.count.i = sext i32 %3 to i64
  %26 = shl nsw i64 %25, 2
  %scevgep = getelementptr i8, ptr %24, i64 %26
  %27 = sub nsw i64 %wide.trip.count.i, %25
  %28 = shl nsw i64 %27, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %scevgep, i8 0, i64 %28, i1 false), !tbaa !137
  %.pre394 = load i32, ptr %m_size.i224, align 4, !tbaa !319
  br label %_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit

_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit:    ; preds = %for.body10.lr.ph.i, %for.body
  %29 = phi i32 [ %.pre394, %for.body10.lr.ph.i ], [ %3, %for.body ]
  store i32 %3, ptr %m_size.i.i, align 4, !tbaa !40
  %cmp8374 = icmp sgt i32 %29, 0
  br i1 %cmp8374, label %for.body9.lr.ph, label %for.cond.cleanup.thread

for.cond.cleanup.thread:                          ; preds = %_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit
  %.pre396 = load float, ptr %m_imass, align 4, !tbaa !373
  %div24402 = fdiv float 1.000000e+00, %.pre396
  store float %div24402, ptr %m_imass, align 4, !tbaa !373
  br label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit

for.body9.lr.ph:                                  ; preds = %_ZN20btAlignedObjectArrayIfE6resizeEiRKf.exit
  %m_data.i240 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %2, i64 0, i32 5
  %30 = load ptr, ptr %m_data.i240, align 8, !tbaa !320
  %m_data.i249 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 1, i32 5
  %m_containsAnchor = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 22
  %31 = load ptr, ptr %m_data.i249, align 8, !tbaa !39
  %wide.trip.count = zext i32 %29 to i64
  br label %for.body9

for.cond.cleanup:                                 ; preds = %if.end
  %div24 = fdiv float 1.000000e+00, %add
  store float %div24, ptr %m_imass, align 4, !tbaa !373
  br i1 %cmp8374, label %for.body.lr.ph.i, label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit

for.body.lr.ph.i:                                 ; preds = %for.cond.cleanup
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %2, i64 0, i32 5
  %32 = load ptr, ptr %m_data.i.i, align 8, !tbaa !320
  %m_data.i20.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 1, i32 5
  %33 = load ptr, ptr %m_data.i20.i, align 8, !tbaa !39
  %xtraiter422 = and i64 %wide.trip.count, 1
  %34 = icmp eq i32 %29, 1
  br i1 %34, label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %wide.trip.count, 4294967294
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i228 = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i229.1, %for.body.i ]
  %com.sroa.10.041.i = phi float [ 0.000000e+00, %for.body.lr.ph.i.new ], [ %add13.i.i.1, %for.body.i ]
  %35 = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i.new ], [ %51, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.1, %for.body.i ]
  %arrayidx.i.i = getelementptr inbounds ptr, ptr %32, i64 %indvars.iv.i228
  %36 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !219
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %36, i64 0, i32 1
  %arrayidx.i22.i = getelementptr inbounds float, ptr %33, i64 %indvars.iv.i228
  %37 = load float, ptr %arrayidx.i22.i, align 4, !tbaa !137
  %38 = load <2 x float>, ptr %m_x.i, align 4, !tbaa !137
  %39 = insertelement <2 x float> poison, float %37, i64 0
  %40 = shufflevector <2 x float> %39, <2 x float> poison, <2 x i32> zeroinitializer
  %41 = fmul <2 x float> %38, %40
  %arrayidx7.i26.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %36, i64 0, i32 1, i32 0, i64 2
  %42 = load float, ptr %arrayidx7.i26.i, align 4, !tbaa !137
  %mul8.i27.i = fmul float %37, %42
  %43 = fadd <2 x float> %35, %41
  %add13.i.i = fadd float %com.sroa.10.041.i, %mul8.i27.i
  %indvars.iv.next.i229 = or i64 %indvars.iv.i228, 1
  %arrayidx.i.i.1 = getelementptr inbounds ptr, ptr %32, i64 %indvars.iv.next.i229
  %44 = load ptr, ptr %arrayidx.i.i.1, align 8, !tbaa !219
  %m_x.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %44, i64 0, i32 1
  %arrayidx.i22.i.1 = getelementptr inbounds float, ptr %33, i64 %indvars.iv.next.i229
  %45 = load float, ptr %arrayidx.i22.i.1, align 4, !tbaa !137
  %46 = load <2 x float>, ptr %m_x.i.1, align 4, !tbaa !137
  %47 = insertelement <2 x float> poison, float %45, i64 0
  %48 = shufflevector <2 x float> %47, <2 x float> poison, <2 x i32> zeroinitializer
  %49 = fmul <2 x float> %46, %48
  %arrayidx7.i26.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %44, i64 0, i32 1, i32 0, i64 2
  %50 = load float, ptr %arrayidx7.i26.i.1, align 4, !tbaa !137
  %mul8.i27.i.1 = fmul float %45, %50
  %51 = fadd <2 x float> %43, %49
  %add13.i.i.1 = fadd float %add13.i.i, %mul8.i27.i.1
  %indvars.iv.next.i229.1 = add nuw nsw i64 %indvars.iv.i228, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa, label %for.body.i

_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa: ; preds = %for.body.i, %for.body.lr.ph.i
  %.lcssa.ph = phi <2 x float> [ undef, %for.body.lr.ph.i ], [ %51, %for.body.i ]
  %add13.i.i.lcssa.ph = phi float [ undef, %for.body.lr.ph.i ], [ %add13.i.i.1, %for.body.i ]
  %indvars.iv.i228.unr = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i229.1, %for.body.i ]
  %com.sroa.10.041.i.unr = phi float [ 0.000000e+00, %for.body.lr.ph.i ], [ %add13.i.i.1, %for.body.i ]
  %.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i ], [ %51, %for.body.i ]
  %lcmp.mod423.not = icmp eq i64 %xtraiter422, 0
  br i1 %lcmp.mod423.not, label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit, label %for.body.i.epil

for.body.i.epil:                                  ; preds = %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa
  %arrayidx.i.i.epil = getelementptr inbounds ptr, ptr %32, i64 %indvars.iv.i228.unr
  %52 = load ptr, ptr %arrayidx.i.i.epil, align 8, !tbaa !219
  %m_x.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %52, i64 0, i32 1
  %arrayidx.i22.i.epil = getelementptr inbounds float, ptr %33, i64 %indvars.iv.i228.unr
  %53 = load float, ptr %arrayidx.i22.i.epil, align 4, !tbaa !137
  %54 = load <2 x float>, ptr %m_x.i.epil, align 4, !tbaa !137
  %55 = insertelement <2 x float> poison, float %53, i64 0
  %56 = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> zeroinitializer
  %57 = fmul <2 x float> %54, %56
  %arrayidx7.i26.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %52, i64 0, i32 1, i32 0, i64 2
  %58 = load float, ptr %arrayidx7.i26.i.epil, align 4, !tbaa !137
  %mul8.i27.i.epil = fmul float %53, %58
  %59 = fadd <2 x float> %.unr, %57
  %add13.i.i.epil = fadd float %com.sroa.10.041.i.unr, %mul8.i27.i.epil
  br label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit

_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit:  ; preds = %for.body.i.epil, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa, %for.cond.cleanup.thread, %for.cond.cleanup
  %div24403 = phi float [ %div24, %for.cond.cleanup ], [ %div24402, %for.cond.cleanup.thread ], [ %div24, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa ], [ %div24, %for.body.i.epil ]
  %com.sroa.10.0.lcssa.i = phi float [ 0.000000e+00, %for.cond.cleanup ], [ 0.000000e+00, %for.cond.cleanup.thread ], [ %add13.i.i.lcssa.ph, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa ], [ %add13.i.i.epil, %for.body.i.epil ]
  %60 = phi <2 x float> [ zeroinitializer, %for.cond.cleanup ], [ zeroinitializer, %for.cond.cleanup.thread ], [ %.lcssa.ph, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.loopexit.unr-lcssa ], [ %59, %for.body.i.epil ]
  %61 = insertelement <2 x float> poison, float %div24403, i64 0
  %62 = shufflevector <2 x float> %61, <2 x float> poison, <2 x i32> zeroinitializer
  %63 = fmul <2 x float> %62, %60
  %mul8.i.i = fmul float %div24403, %com.sroa.10.0.lcssa.i
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i, i64 0
  %m_com = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 8
  store <2 x float> %63, ptr %m_com, align 8, !tbaa.struct !163
  %ref.tmp26.sroa.4.0.m_com.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 8, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i, ptr %ref.tmp26.sroa.4.0.m_com.sroa_idx, align 8, !tbaa.struct !165
  %m_lv = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 13
  %m_locii = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6
  %arrayidx.i237 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 2
  %ref.tmp36.sroa.5.0.arrayidx.i237.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 2, i32 0, i64 2
  %ref.tmp36.sroa.6.0.arrayidx.i237.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 2, i32 0, i64 3
  %arrayidx.i238 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %m_lv, i8 0, i64 40, i1 false)
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) %m_locii, i8 0, i64 48, i1 false)
  br i1 %cmp8374, label %for.body48.lr.ph, label %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.for.end111_crit_edge

_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.for.end111_crit_edge: ; preds = %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit
  %arrayidx114.phi.trans.insert = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 0, i32 0, i64 1
  %arrayidx120.phi.trans.insert = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 0, i32 0, i64 2
  %.pre398 = load float, ptr %arrayidx120.phi.trans.insert, align 4, !tbaa !137
  %arrayidx126.phi.trans.insert = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 1, i32 0, i64 2
  %.pre397 = load float, ptr %arrayidx114.phi.trans.insert, align 4, !tbaa !137
  %.pre399 = load float, ptr %arrayidx126.phi.trans.insert, align 4, !tbaa !137
  %arrayidx3.i.i.phi.trans.insert = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 1, i32 0, i64 1
  %.pre400 = load float, ptr %arrayidx3.i.i.phi.trans.insert, align 4, !tbaa !137, !noalias !377
  %64 = insertelement <2 x float> poison, float %.pre397, i64 0
  %65 = insertelement <2 x float> %64, float %.pre399, i64 1
  %66 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %.pre400, i64 0
  br label %for.end111

for.body48.lr.ph:                                 ; preds = %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit
  %m_data.i255 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %2, i64 0, i32 5
  %67 = load ptr, ptr %m_data.i255, align 8, !tbaa !320
  %m_data.i270 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 1, i32 5
  %68 = load ptr, ptr %m_data.i270, align 8, !tbaa !39
  %arrayidx72 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 1, i32 0, i64 1
  %arrayidx88 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 0, i32 0, i64 1
  %arrayidx97 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 0, i32 0, i64 2
  %arrayidx107 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 1, i32 0, i64 2
  %arrayidx72.promoted = load float, ptr %arrayidx72, align 4, !tbaa !137
  %arrayidx97.promoted = load float, ptr %arrayidx97, align 4, !tbaa !137
  %arrayidx88.promoted = load float, ptr %arrayidx88, align 4, !tbaa !137
  %arrayidx107.promoted = load float, ptr %arrayidx107, align 4, !tbaa !137
  %wide.trip.count386 = zext i32 %29 to i64
  %69 = insertelement <2 x float> poison, float %arrayidx88.promoted, i64 0
  %70 = insertelement <2 x float> %69, float %arrayidx107.promoted, i64 1
  %71 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %arrayidx72.promoted, i64 0
  br label %for.body48

for.body9:                                        ; preds = %for.body9.lr.ph, %if.end
  %indvars.iv = phi i64 [ 0, %for.body9.lr.ph ], [ %indvars.iv.next, %if.end ]
  %arrayidx.i242 = getelementptr inbounds ptr, ptr %30, i64 %indvars.iv
  %72 = load ptr, ptr %arrayidx.i242, align 8, !tbaa !219
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %72, i64 0, i32 6
  %73 = load float, ptr %m_im, align 8, !tbaa !175
  %cmp12 = fcmp oeq float %73, 0.000000e+00
  %arrayidx.i245 = getelementptr inbounds float, ptr %31, i64 %indvars.iv
  br i1 %cmp12, label %if.then, label %if.else

if.then:                                          ; preds = %for.body9
  store i8 1, ptr %m_containsAnchor, align 8, !tbaa !345
  br label %if.end

if.else:                                          ; preds = %for.body9
  %div = fdiv float 1.000000e+00, %73
  br label %if.end

if.end:                                           ; preds = %if.else, %if.then
  %div.sink = phi float [ %div, %if.else ], [ 0x43ABC16D60000000, %if.then ]
  store float %div.sink, ptr %arrayidx.i245, align 4, !tbaa !137
  %74 = load float, ptr %m_imass, align 4, !tbaa !373
  %add = fadd float %div.sink, %74
  store float %add, ptr %m_imass, align 4, !tbaa !373
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body9

for.body48:                                       ; preds = %for.body48.lr.ph, %for.body48
  %indvars.iv383 = phi i64 [ 0, %for.body48.lr.ph ], [ %indvars.iv.next384, %for.body48 ]
  %75 = phi float [ %arrayidx97.promoted, %for.body48.lr.ph ], [ %104, %for.body48 ]
  %76 = phi float [ 0.000000e+00, %for.body48.lr.ph ], [ %89, %for.body48 ]
  %77 = phi <2 x float> [ %70, %for.body48.lr.ph ], [ %101, %for.body48 ]
  %78 = phi <2 x float> [ %71, %for.body48.lr.ph ], [ %94, %for.body48 ]
  %arrayidx.i257 = getelementptr inbounds ptr, ptr %67, i64 %indvars.iv383
  %79 = load ptr, ptr %arrayidx.i257, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %79, i64 0, i32 1
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %79, i64 0, i32 1, i32 0, i64 2
  %80 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %sub14.i = fsub float %80, %mul8.i.i
  %arrayidx.i272 = getelementptr inbounds float, ptr %68, i64 %indvars.iv383
  %81 = load float, ptr %arrayidx.i272, align 4, !tbaa !137
  %82 = fneg float %81
  %83 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %84 = fsub <2 x float> %83, %63
  %85 = fmul <2 x float> %84, %84
  %86 = insertelement <2 x float> %84, float %sub14.i, i64 0
  %87 = fmul <2 x float> %86, %86
  %shift = shufflevector <2 x float> %87, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %88 = fadd <2 x float> %shift, %87
  %add61 = extractelement <2 x float> %88, i64 0
  %89 = tail call float @llvm.fmuladd.f32(float %81, float %add61, float %76)
  store float %89, ptr %m_locii, align 4, !tbaa !137
  %90 = shufflevector <2 x float> %85, <2 x float> poison, <2 x i32> zeroinitializer
  %91 = fadd <2 x float> %90, %87
  %92 = insertelement <2 x float> poison, float %81, i64 0
  %93 = shufflevector <2 x float> %92, <2 x float> poison, <2 x i32> zeroinitializer
  %94 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %93, <2 x float> %91, <2 x float> %78)
  %95 = extractelement <2 x float> %94, i64 0
  store float %95, ptr %arrayidx72, align 4, !tbaa !137
  %96 = extractelement <2 x float> %94, i64 1
  store float %96, ptr %ref.tmp36.sroa.5.0.arrayidx.i237.sroa_idx, align 4, !tbaa !137
  %97 = insertelement <2 x float> poison, float %82, i64 0
  %98 = shufflevector <2 x float> %97, <2 x float> poison, <2 x i32> zeroinitializer
  %99 = fmul <2 x float> %84, %98
  %100 = shufflevector <2 x float> %86, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %101 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %99, <2 x float> %100, <2 x float> %77)
  %102 = extractelement <2 x float> %101, i64 0
  store float %102, ptr %arrayidx88, align 4, !tbaa !137
  %103 = extractelement <2 x float> %99, i64 0
  %104 = tail call float @llvm.fmuladd.f32(float %103, float %sub14.i, float %75)
  store float %104, ptr %arrayidx97, align 4, !tbaa !137
  %105 = extractelement <2 x float> %101, i64 1
  store float %105, ptr %arrayidx107, align 4, !tbaa !137
  %indvars.iv.next384 = add nuw nsw i64 %indvars.iv383, 1
  %exitcond387.not = icmp eq i64 %indvars.iv.next384, %wide.trip.count386
  br i1 %exitcond387.not, label %for.end111, label %for.body48

for.end111:                                       ; preds = %for.body48, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.for.end111_crit_edge
  %106 = phi float [ 0.000000e+00, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.for.end111_crit_edge ], [ %89, %for.body48 ]
  %107 = phi float [ %.pre398, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.for.end111_crit_edge ], [ %104, %for.body48 ]
  %108 = phi <2 x float> [ %65, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.for.end111_crit_edge ], [ %101, %for.body48 ]
  %109 = phi <2 x float> [ %66, %_ZN10btSoftBody10clusterComEPKNS_7ClusterE.exit.for.end111_crit_edge ], [ %94, %for.body48 ]
  %arrayidx114 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 0, i32 0, i64 1
  %arrayidx126 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 1, i32 0, i64 2
  %arrayidx3.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 1, i32 0, i64 1
  %110 = shufflevector <2 x float> %108, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %111 = extractelement <2 x float> %108, i64 1
  %112 = fneg float %111
  %neg.i.i = fmul float %111, %112
  %113 = extractelement <2 x float> %109, i64 0
  %114 = extractelement <2 x float> %109, i64 1
  %115 = tail call float @llvm.fmuladd.f32(float %113, float %114, float %neg.i.i)
  %116 = insertelement <2 x float> %110, float %107, i64 0
  %117 = fneg <2 x float> %116
  %118 = extractelement <2 x float> %117, i64 0
  %neg.i71.i = fmul float %107, %118
  %119 = tail call float @llvm.fmuladd.f32(float %106, float %114, float %neg.i71.i)
  %shift416 = shufflevector <2 x float> %117, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %120 = fmul <2 x float> %108, %shift416
  %neg.i84.i = extractelement <2 x float> %120, i64 0
  %121 = tail call float @llvm.fmuladd.f32(float %106, float %113, float %neg.i84.i)
  %122 = fmul <2 x float> %109, %117
  %123 = shufflevector <2 x float> %108, <2 x float> %116, <2 x i32> <i32 1, i32 2>
  %124 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %108, <2 x float> %123, <2 x float> %122)
  %shift417 = shufflevector <2 x float> %124, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %125 = fmul <2 x float> %108, %shift417
  %mul8.i.i280 = extractelement <2 x float> %125, i64 0
  %126 = tail call float @llvm.fmuladd.f32(float %106, float %115, float %mul8.i.i280)
  %ref.tmp130.sroa.6.0.m_locii.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 0, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp130.sroa.6.0.m_locii.sroa_idx, align 4, !tbaa.struct !318
  %ref.tmp130.sroa.11.16.arrayidx7.i284.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 6, i32 0, i64 1, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp130.sroa.11.16.arrayidx7.i284.sroa_idx, align 4, !tbaa.struct !318
  %127 = insertelement <2 x float> %109, float %106, i64 1
  %128 = fneg <2 x float> %127
  %129 = insertelement <2 x float> %108, float %107, i64 0
  %130 = fmul <2 x float> %129, %128
  %131 = insertelement <2 x float> %108, float %107, i64 1
  %132 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %131, <2 x float> %110, <2 x float> %130)
  %133 = extractelement <2 x float> %132, i64 0
  %134 = tail call float @llvm.fmuladd.f32(float %107, float %133, float %126)
  %div.i = fdiv float 1.000000e+00, %134
  %mul.i281 = fmul float %115, %div.i
  %135 = insertelement <2 x float> poison, float %div.i, i64 0
  %136 = shufflevector <2 x float> %135, <2 x float> poison, <2 x i32> zeroinitializer
  %137 = fmul <2 x float> %124, %136
  %mul21.i = fmul float %119, %div.i
  %138 = fmul <2 x float> %132, %136
  %mul33.i = fmul float %121, %div.i
  store float %mul.i281, ptr %m_locii, align 4, !tbaa.struct !163
  %139 = shufflevector <2 x float> %137, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  store <2 x float> %139, ptr %arrayidx114, align 4
  %140 = extractelement <2 x float> %137, i64 1
  store float %140, ptr %arrayidx.i238, align 4, !tbaa.struct !163
  store float %mul21.i, ptr %arrayidx3.i.i, align 4, !tbaa.struct !293
  %141 = extractelement <2 x float> %138, i64 1
  store float %141, ptr %arrayidx126, align 4, !tbaa.struct !165
  store <2 x float> %138, ptr %arrayidx.i237, align 4
  store float %mul33.i, ptr %ref.tmp36.sroa.5.0.arrayidx.i237.sroa_idx, align 4, !tbaa.struct !165
  store float 0.000000e+00, ptr %ref.tmp36.sroa.6.0.arrayidx.i237.sroa_idx, align 4, !tbaa.struct !318
  %m_framexform = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 3
  store float 1.000000e+00, ptr %m_framexform, align 4, !tbaa !137
  %arrayidx3.i.i.i.i286 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 3, i32 0, i32 0, i64 0, i32 0, i64 1
  %arrayidx3.i6.i.i.i287 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 3, i32 0, i32 0, i64 1, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i.i286, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i.i287, align 4, !tbaa !137
  %arrayidx5.i7.i.i.i288 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 3, i32 0, i32 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i.i289 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 3, i32 0, i32 0, i64 2, i32 0, i64 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i7.i.i.i288, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i.i289, align 4, !tbaa !137
  %arrayidx7.i11.i.i.i290 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 3, i32 0, i32 0, i64 2, i32 0, i64 3
  store i32 0, ptr %arrayidx7.i11.i.i.i290, align 4
  %m_origin.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 3, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %m_origin.i, ptr noundef nonnull align 4 dereferenceable(16) %m_com, i64 16, i1 false), !tbaa.struct !163
  %m_size.i.i292 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 2, i32 2
  %142 = load i32, ptr %m_size.i.i292, align 4, !tbaa !34
  %cmp4.i294 = icmp slt i32 %142, %29
  br i1 %cmp4.i294, label %if.then5.i298, label %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit

if.then5.i298:                                    ; preds = %for.end111
  %m_capacity.i.i.i296 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 2, i32 3
  %143 = load i32, ptr %m_capacity.i.i.i296, align 8, !tbaa !35
  %cmp.i.i297 = icmp slt i32 %143, %29
  br i1 %cmp.i.i297, label %if.then.i.i300, label %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit

if.then.i.i300:                                   ; preds = %if.then5.i298
  %tobool.not.i.i.i299 = icmp eq i32 %29, 0
  br i1 %tobool.not.i.i.i299, label %_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i, label %if.then.i.i.i305

if.then.i.i.i305:                                 ; preds = %if.then.i.i300
  %conv.i.i.i.i301 = sext i32 %29 to i64
  %mul.i.i.i.i302 = shl nsw i64 %conv.i.i.i.i301, 4
  %call.i.i.i.i303 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i302, i32 noundef 16)
  %.pre.i304 = load i32, ptr %m_size.i.i292, align 4, !tbaa !34
  br label %_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i: ; preds = %if.then.i.i.i305, %if.then.i.i300
  %144 = phi i32 [ %.pre.i304, %if.then.i.i.i305 ], [ %142, %if.then.i.i300 ]
  %retval.0.i.i.i306 = phi ptr [ %call.i.i.i.i303, %if.then.i.i.i305 ], [ null, %if.then.i.i300 ]
  %cmp7.i.i.i307 = icmp sgt i32 %144, 0
  br i1 %cmp7.i.i.i307, label %for.body.lr.ph.i.i.i310, label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i

for.body.lr.ph.i.i.i310:                          ; preds = %_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i
  %m_data.i.i.i308 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 2, i32 5
  %wide.trip.count.i.i.i309 = zext i32 %144 to i64
  %xtraiter426 = and i64 %wide.trip.count.i.i.i309, 1
  %145 = icmp eq i32 %144, 1
  br i1 %145, label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i310.new

for.body.lr.ph.i.i.i310.new:                      ; preds = %for.body.lr.ph.i.i.i310
  %unroll_iter428 = and i64 %wide.trip.count.i.i.i309, 4294967294
  br label %for.body.i.i.i316

for.body.i.i.i316:                                ; preds = %for.body.i.i.i316, %for.body.lr.ph.i.i.i310.new
  %indvars.iv.i.i.i311 = phi i64 [ 0, %for.body.lr.ph.i.i.i310.new ], [ %indvars.iv.next.i.i.i314.1, %for.body.i.i.i316 ]
  %niter429 = phi i64 [ 0, %for.body.lr.ph.i.i.i310.new ], [ %niter429.next.1, %for.body.i.i.i316 ]
  %arrayidx.i.i.i312 = getelementptr inbounds %class.btVector3, ptr %retval.0.i.i.i306, i64 %indvars.iv.i.i.i311
  %146 = load ptr, ptr %m_data.i.i.i308, align 8, !tbaa !33
  %arrayidx3.i.i.i313 = getelementptr inbounds %class.btVector3, ptr %146, i64 %indvars.iv.i.i.i311
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx.i.i.i312, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i313, i64 16, i1 false), !tbaa.struct !163
  %indvars.iv.next.i.i.i314 = or i64 %indvars.iv.i.i.i311, 1
  %arrayidx.i.i.i312.1 = getelementptr inbounds %class.btVector3, ptr %retval.0.i.i.i306, i64 %indvars.iv.next.i.i.i314
  %147 = load ptr, ptr %m_data.i.i.i308, align 8, !tbaa !33
  %arrayidx3.i.i.i313.1 = getelementptr inbounds %class.btVector3, ptr %147, i64 %indvars.iv.next.i.i.i314
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx.i.i.i312.1, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i313.1, i64 16, i1 false), !tbaa.struct !163
  %indvars.iv.next.i.i.i314.1 = add nuw nsw i64 %indvars.iv.i.i.i311, 2
  %niter429.next.1 = add i64 %niter429, 2
  %niter429.ncmp.1 = icmp eq i64 %niter429.next.1, %unroll_iter428
  br i1 %niter429.ncmp.1, label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i316

_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i316, %for.body.lr.ph.i.i.i310
  %indvars.iv.i.i.i311.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i310 ], [ %indvars.iv.next.i.i.i314.1, %for.body.i.i.i316 ]
  %lcmp.mod427.not = icmp eq i64 %xtraiter426, 0
  br i1 %lcmp.mod427.not, label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i, label %for.body.i.i.i316.epil

for.body.i.i.i316.epil:                           ; preds = %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i312.epil = getelementptr inbounds %class.btVector3, ptr %retval.0.i.i.i306, i64 %indvars.iv.i.i.i311.unr
  %148 = load ptr, ptr %m_data.i.i.i308, align 8, !tbaa !33
  %arrayidx3.i.i.i313.epil = getelementptr inbounds %class.btVector3, ptr %148, i64 %indvars.iv.i.i.i311.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx.i.i.i312.epil, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i313.epil, i64 16, i1 false), !tbaa.struct !163
  br label %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i

_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i: ; preds = %for.body.i.i.i316.epil, %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayI9btVector3E8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 2, i32 5
  %149 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !33
  %tobool.not.i10.i.i317 = icmp eq ptr %149, null
  %m_ownsMemory.i.i.i318 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 2, i32 6
  %150 = load i8, ptr %m_ownsMemory.i.i.i318, align 8, !range !159
  %tobool2.not.i.i.i319 = icmp eq i8 %150, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i317, i1 true, i1 %tobool2.not.i.i.i319
  br i1 %or.cond.i.i, label %if.end.i321, label %if.then3.i.i.i320

if.then3.i.i.i320:                                ; preds = %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %149)
  br label %if.end.i321

if.end.i321:                                      ; preds = %if.then3.i.i.i320, %_ZNK20btAlignedObjectArrayI9btVector3E4copyEiiPS0_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i318, align 8, !tbaa !30
  store ptr %retval.0.i.i.i306, ptr %m_data.i9.i.i, align 8, !tbaa !33
  store i32 %29, ptr %m_capacity.i.i.i296, align 8, !tbaa !35
  br label %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit

_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit: ; preds = %if.end.i321, %if.then5.i298, %for.end111
  store i32 %29, ptr %m_size.i.i292, align 4, !tbaa !34
  br i1 %cmp8374, label %for.body142.lr.ph, label %for.end154

for.body142.lr.ph:                                ; preds = %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit
  %m_data.i331 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %2, i64 0, i32 5
  %m_data.i346 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 2, i32 5
  br label %for.body142

for.body142:                                      ; preds = %for.body142.lr.ph, %for.body142
  %indvars.iv388 = phi i64 [ 0, %for.body142.lr.ph ], [ %indvars.iv.next389, %for.body142 ]
  %151 = load ptr, ptr %m_data.i331, align 8, !tbaa !320
  %arrayidx.i333 = getelementptr inbounds ptr, ptr %151, i64 %indvars.iv388
  %152 = load ptr, ptr %arrayidx.i333, align 8, !tbaa !219
  %m_x146 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %152, i64 0, i32 1
  %153 = load <2 x float>, ptr %m_x146, align 4, !tbaa !137
  %154 = load <2 x float>, ptr %m_com, align 4, !tbaa !137
  %155 = fsub <2 x float> %153, %154
  %arrayidx11.i338 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %152, i64 0, i32 1, i32 0, i64 2
  %156 = load float, ptr %arrayidx11.i338, align 4, !tbaa !137
  %157 = load float, ptr %ref.tmp26.sroa.4.0.m_com.sroa_idx, align 4, !tbaa !137
  %sub14.i340 = fsub float %156, %157
  %retval.sroa.3.12.vec.insert.i343 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i340, i64 0
  %158 = load ptr, ptr %m_data.i346, align 8, !tbaa !33
  %arrayidx.i348 = getelementptr inbounds %class.btVector3, ptr %158, i64 %indvars.iv388
  store <2 x float> %155, ptr %arrayidx.i348, align 4, !tbaa.struct !163
  %ref.tmp143.sroa.4.0.call151.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i348, i64 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i343, ptr %ref.tmp143.sroa.4.0.call151.sroa_idx, align 4, !tbaa.struct !165
  %indvars.iv.next389 = add nuw nsw i64 %indvars.iv388, 1
  %159 = load i32, ptr %m_size.i.i292, align 4, !tbaa !34
  %160 = sext i32 %159 to i64
  %cmp141 = icmp slt i64 %indvars.iv.next389, %160
  br i1 %cmp141, label %for.body142, label %for.end154

for.end154:                                       ; preds = %for.body142, %_ZN20btAlignedObjectArrayI9btVector3E6resizeEiRKS0_.exit
  %indvars.iv.next392 = add nuw nsw i64 %indvars.iv391, 1
  %161 = load i32, ptr %m_size.i, align 4, !tbaa !124
  %162 = sext i32 %161 to i64
  %cmp = icmp slt i64 %indvars.iv.next392, %162
  br i1 %cmp, label %for.body, label %for.end157

for.end157:                                       ; preds = %for.end154, %entry
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody14updateClustersEv(ptr noundef nonnull align 8 dereferenceable(1496) %this) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %m = alloca %class.btMatrix3x3, align 4
  %r = alloca %class.btMatrix3x3, align 4
  %s = alloca %class.btMatrix3x3, align 4
  %bounds = alloca %struct.btDbvtAabbMm, align 16
  %ref.tmp316 = alloca %class.btVector3, align 8
  tail call void @_ZN15CProfileManager13Start_ProfileEPKc(ptr noundef nonnull @.str)
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !124
  %cmp776 = icmp sgt i32 %0, 0
  br i1 %cmp776, label %for.body.lr.ph, label %for.end352

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %arrayidx.i429 = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 2
  %ref.tmp.sroa.5.0.arrayidx.i429.sroa_idx = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 2, i32 0, i64 2
  %arrayidx.i430 = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 1
  %arrayidx7.i451 = getelementptr inbounds [4 x float], ptr %m, i64 0, i64 1
  %arrayidx12.i468 = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 1, i32 0, i64 2
  %arrayidx5.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %r, i64 0, i64 1
  %arrayidx9.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %r, i64 0, i64 2
  %mx2.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %bounds, i64 0, i32 1
  %m_cdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3
  %1 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp316, i64 0, i32 1
  %radmrg = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3, i32 3
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end347
  %2 = phi i32 [ %0, %for.body.lr.ph ], [ %332, %if.end347 ]
  %indvars.iv792 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next793, %if.end347 ]
  %3 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %arrayidx.i = getelementptr inbounds ptr, ptr %3, i64 %indvars.iv792
  %4 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %m_size.i428 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %4, i64 0, i32 2
  %5 = load i32, ptr %m_size.i428, align 4, !tbaa !319
  %tobool.not = icmp eq i32 %5, 0
  br i1 %tobool.not, label %if.end347, label %if.then

if.then:                                          ; preds = %for.body
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %m) #38
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %r) #38
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %s) #38
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) %m, i8 0, i64 48, i1 false)
  %cmp38.i = icmp sgt i32 %5, 0
  br i1 %cmp38.i, label %for.body.lr.ph.i, label %invoke.cont42

for.body.lr.ph.i:                                 ; preds = %if.then
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %4, i64 0, i32 5
  %6 = load ptr, ptr %m_data.i.i, align 8, !tbaa !320
  %m_data.i20.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 1, i32 5
  %7 = load ptr, ptr %m_data.i20.i, align 8, !tbaa !39
  %wide.trip.count.i = zext i32 %5 to i64
  %xtraiter = and i64 %wide.trip.count.i, 1
  %8 = icmp eq i32 %5, 1
  br i1 %8, label %invoke.cont42.loopexit.unr-lcssa, label %for.body.lr.ph.i.new

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %wide.trip.count.i, 4294967294
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.1, %for.body.i ]
  %com.sroa.6.040.i = phi float [ 0.000000e+00, %for.body.lr.ph.i.new ], [ %add8.i.i.1, %for.body.i ]
  %9 = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i.new ], [ %31, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.1, %for.body.i ]
  %arrayidx.i.i = getelementptr inbounds ptr, ptr %6, i64 %indvars.iv.i
  %10 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !219
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %10, i64 0, i32 1
  %arrayidx.i22.i = getelementptr inbounds float, ptr %7, i64 %indvars.iv.i
  %11 = load float, ptr %arrayidx.i22.i, align 4, !tbaa !137
  %arrayidx3.i24.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %10, i64 0, i32 1, i32 0, i64 1
  %12 = load float, ptr %arrayidx3.i24.i, align 4, !tbaa !137
  %mul4.i25.i = fmul float %11, %12
  %arrayidx7.i26.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %10, i64 0, i32 1, i32 0, i64 2
  %13 = load float, ptr %m_x.i, align 4, !tbaa !137
  %14 = load float, ptr %arrayidx7.i26.i, align 4, !tbaa !137
  %15 = insertelement <2 x float> poison, float %14, i64 0
  %16 = insertelement <2 x float> %15, float %13, i64 1
  %17 = insertelement <2 x float> poison, float %11, i64 0
  %18 = shufflevector <2 x float> %17, <2 x float> poison, <2 x i32> zeroinitializer
  %19 = fmul <2 x float> %16, %18
  %add8.i.i = fadd float %com.sroa.6.040.i, %mul4.i25.i
  %20 = fadd <2 x float> %9, %19
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %arrayidx.i.i.1 = getelementptr inbounds ptr, ptr %6, i64 %indvars.iv.next.i
  %21 = load ptr, ptr %arrayidx.i.i.1, align 8, !tbaa !219
  %m_x.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 0, i32 1
  %arrayidx.i22.i.1 = getelementptr inbounds float, ptr %7, i64 %indvars.iv.next.i
  %22 = load float, ptr %arrayidx.i22.i.1, align 4, !tbaa !137
  %arrayidx3.i24.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 0, i32 1, i32 0, i64 1
  %23 = load float, ptr %arrayidx3.i24.i.1, align 4, !tbaa !137
  %mul4.i25.i.1 = fmul float %22, %23
  %arrayidx7.i26.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 0, i32 1, i32 0, i64 2
  %24 = load float, ptr %m_x.i.1, align 4, !tbaa !137
  %25 = load float, ptr %arrayidx7.i26.i.1, align 4, !tbaa !137
  %26 = insertelement <2 x float> poison, float %25, i64 0
  %27 = insertelement <2 x float> %26, float %24, i64 1
  %28 = insertelement <2 x float> poison, float %22, i64 0
  %29 = shufflevector <2 x float> %28, <2 x float> poison, <2 x i32> zeroinitializer
  %30 = fmul <2 x float> %27, %29
  %add8.i.i.1 = fadd float %add8.i.i, %mul4.i25.i.1
  %31 = fadd <2 x float> %20, %30
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %invoke.cont42.loopexit.unr-lcssa, label %for.body.i

invoke.cont42.loopexit.unr-lcssa:                 ; preds = %for.body.i, %for.body.lr.ph.i
  %add8.i.i.lcssa.ph = phi float [ undef, %for.body.lr.ph.i ], [ %add8.i.i.1, %for.body.i ]
  %.lcssa.ph = phi <2 x float> [ undef, %for.body.lr.ph.i ], [ %31, %for.body.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i.1, %for.body.i ]
  %com.sroa.6.040.i.unr = phi float [ 0.000000e+00, %for.body.lr.ph.i ], [ %add8.i.i.1, %for.body.i ]
  %.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i ], [ %31, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %invoke.cont42, label %for.body.i.epil

for.body.i.epil:                                  ; preds = %invoke.cont42.loopexit.unr-lcssa
  %arrayidx.i.i.epil = getelementptr inbounds ptr, ptr %6, i64 %indvars.iv.i.unr
  %32 = load ptr, ptr %arrayidx.i.i.epil, align 8, !tbaa !219
  %m_x.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %32, i64 0, i32 1
  %arrayidx.i22.i.epil = getelementptr inbounds float, ptr %7, i64 %indvars.iv.i.unr
  %33 = load float, ptr %arrayidx.i22.i.epil, align 4, !tbaa !137
  %arrayidx3.i24.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %32, i64 0, i32 1, i32 0, i64 1
  %34 = load float, ptr %arrayidx3.i24.i.epil, align 4, !tbaa !137
  %mul4.i25.i.epil = fmul float %33, %34
  %arrayidx7.i26.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %32, i64 0, i32 1, i32 0, i64 2
  %35 = load float, ptr %m_x.i.epil, align 4, !tbaa !137
  %36 = load float, ptr %arrayidx7.i26.i.epil, align 4, !tbaa !137
  %37 = insertelement <2 x float> poison, float %36, i64 0
  %38 = insertelement <2 x float> %37, float %35, i64 1
  %39 = insertelement <2 x float> poison, float %33, i64 0
  %40 = shufflevector <2 x float> %39, <2 x float> poison, <2 x i32> zeroinitializer
  %41 = fmul <2 x float> %38, %40
  %add8.i.i.epil = fadd float %com.sroa.6.040.i.unr, %mul4.i25.i.epil
  %42 = fadd <2 x float> %.unr, %41
  br label %invoke.cont42

invoke.cont42:                                    ; preds = %for.body.i.epil, %invoke.cont42.loopexit.unr-lcssa, %if.then
  %com.sroa.6.0.lcssa.i = phi float [ 0.000000e+00, %if.then ], [ %add8.i.i.lcssa.ph, %invoke.cont42.loopexit.unr-lcssa ], [ %add8.i.i.epil, %for.body.i.epil ]
  %43 = phi <2 x float> [ zeroinitializer, %if.then ], [ %.lcssa.ph, %invoke.cont42.loopexit.unr-lcssa ], [ %42, %for.body.i.epil ]
  %m_imass.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 5
  %44 = load float, ptr %m_imass.i, align 4, !tbaa !137
  %mul4.i.i = fmul float %com.sroa.6.0.lcssa.i, %44
  %45 = insertelement <2 x float> poison, float %44, i64 0
  %46 = shufflevector <2 x float> %45, <2 x float> poison, <2 x i32> zeroinitializer
  %47 = fmul <2 x float> %43, %46
  %48 = shufflevector <2 x float> %47, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %retval.sroa.0.4.vec.insert.i.i = insertelement <2 x float> %48, float %mul4.i.i, i64 1
  %49 = insertelement <2 x float> %47, float 0.000000e+00, i64 1
  %m_com = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 8
  store <2 x float> %retval.sroa.0.4.vec.insert.i.i, ptr %m_com, align 8, !tbaa.struct !163
  %ref.tmp40.sroa.5.0.m_com.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 8, i32 0, i64 2
  store <2 x float> %49, ptr %ref.tmp40.sroa.5.0.m_com.sroa_idx, align 8, !tbaa.struct !165
  %arrayidx.i430.promoted = load float, ptr %arrayidx.i430, align 4, !tbaa !137
  %50 = insertelement <2 x float> <float poison, float 0x3F2A36E2E0000000>, float %arrayidx.i430.promoted, i64 0
  br i1 %cmp38.i, label %invoke.cont57.lr.ph, label %for.cond.cleanup

invoke.cont57.lr.ph:                              ; preds = %invoke.cont42
  %m_data.i434 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %4, i64 0, i32 5
  %51 = load ptr, ptr %m_data.i434, align 8, !tbaa !320
  %m_data.i439 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 2, i32 5
  %52 = load ptr, ptr %m_data.i439, align 8, !tbaa !33
  %53 = load <2 x float>, ptr %arrayidx7.i451, align 4, !tbaa !137
  %arrayidx12.i468.promoted = load float, ptr %arrayidx12.i468, align 4, !tbaa !137
  %wide.trip.count = zext i32 %5 to i64
  br label %invoke.cont57

for.cond45.for.cond.cleanup_crit_edge:            ; preds = %invoke.cont57
  store <2 x float> %182, ptr %arrayidx7.i451, align 4, !tbaa !137
  store float %add13.i469, ptr %arrayidx12.i468, align 4, !tbaa !137
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %for.cond45.for.cond.cleanup_crit_edge, %invoke.cont42
  %54 = phi <2 x float> [ %170, %for.cond45.for.cond.cleanup_crit_edge ], [ %50, %invoke.cont42 ]
  %55 = phi <2 x float> [ %185, %for.cond45.for.cond.cleanup_crit_edge ], [ zeroinitializer, %invoke.cont42 ]
  %56 = phi <2 x float> [ %186, %for.cond45.for.cond.cleanup_crit_edge ], [ <float 0x3F33A92A20000000, float 0x3F1A36E2E0000000>, %invoke.cont42 ]
  %57 = extractelement <2 x float> %56, i64 1
  store float %57, ptr %m, align 4, !tbaa !137
  store <2 x float> %54, ptr %arrayidx.i430, align 4, !tbaa !137
  store <2 x float> %55, ptr %arrayidx.i429, align 4, !tbaa !137
  %58 = extractelement <2 x float> %56, i64 0
  store float %58, ptr %ref.tmp.sroa.5.0.arrayidx.i429.sroa_idx, align 4, !tbaa !137
  call fastcc void @_ZL14PolarDecomposeRK11btMatrix3x3RS_S2_(ptr noundef nonnull align 4 dereferenceable(48) %m, ptr noundef nonnull align 4 dereferenceable(48) %r, ptr noundef nonnull align 4 dereferenceable(48) %s)
  %m_framexform = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3
  %m_origin.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %m_origin.i, ptr noundef nonnull align 4 dereferenceable(16) %m_com, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %m_framexform, ptr noundef nonnull align 4 dereferenceable(16) %r, i64 16, i1 false), !tbaa.struct !163
  %arrayidx7.i.i488 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx7.i.i488, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx11.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx11.i.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx9.i.i, i64 16, i1 false), !tbaa.struct !163
  %m_locii = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 6
  %59 = load float, ptr %m_locii, align 4, !tbaa !137, !noalias !380
  %arrayidx4.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 6, i32 0, i64 1
  %60 = load float, ptr %arrayidx4.i.i, align 4, !tbaa !137, !noalias !380
  %arrayidx.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 0, i32 0, i64 1
  %arrayidx9.i.i489 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 6, i32 0, i64 2
  %61 = load float, ptr %arrayidx9.i.i489, align 4, !tbaa !137, !noalias !380
  %arrayidx.i14.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i42.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 6, i32 0, i64 0, i32 0, i64 1
  %62 = load float, ptr %arrayidx.i.i42.i, align 4, !tbaa !137, !noalias !380
  %arrayidx.i14.i43.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 6, i32 0, i64 1, i32 0, i64 1
  %63 = load float, ptr %arrayidx.i14.i43.i, align 4, !tbaa !137, !noalias !380
  %arrayidx.i16.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 6, i32 0, i64 2, i32 0, i64 1
  %64 = load float, ptr %arrayidx.i16.i.i, align 4, !tbaa !137, !noalias !380
  %arrayidx.i.i45.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 6, i32 0, i64 0, i32 0, i64 2
  %65 = load float, ptr %arrayidx.i.i45.i, align 4, !tbaa !137, !noalias !380
  %arrayidx.i14.i46.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 6, i32 0, i64 1, i32 0, i64 2
  %66 = load float, ptr %arrayidx.i14.i46.i, align 4, !tbaa !137, !noalias !380
  %arrayidx.i16.i49.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 6, i32 0, i64 2, i32 0, i64 2
  %67 = load float, ptr %arrayidx.i16.i49.i, align 4, !tbaa !137, !noalias !380
  %arrayidx.i.i52.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1, i32 0, i64 1
  %arrayidx.i14.i55.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 1, i32 0, i64 2
  %68 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137, !noalias !192
  %arrayidx.i.i72.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 2, i32 0, i64 1
  %69 = load float, ptr %arrayidx.i.i72.i, align 4, !tbaa !137, !noalias !192
  %mul7.i73.i = fmul float %60, %69
  %70 = call float @llvm.fmuladd.f32(float %59, float %68, float %mul7.i73.i)
  %arrayidx.i14.i75.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 0, i32 0, i64 2, i32 0, i64 2
  %71 = load float, ptr %arrayidx.i14.i75.i, align 4, !tbaa !137, !noalias !192
  %72 = call float @llvm.fmuladd.f32(float %61, float %71, float %70)
  %mul7.i80.i = fmul float %63, %69
  %73 = call float @llvm.fmuladd.f32(float %62, float %68, float %mul7.i80.i)
  %74 = call float @llvm.fmuladd.f32(float %64, float %71, float %73)
  %mul7.i87.i = fmul float %66, %69
  %75 = call float @llvm.fmuladd.f32(float %65, float %68, float %mul7.i87.i)
  %76 = call float @llvm.fmuladd.f32(float %67, float %71, float %75)
  %mul7.i87.i528 = fmul float %69, %74
  %77 = call float @llvm.fmuladd.f32(float %68, float %72, float %mul7.i87.i528)
  %78 = call float @llvm.fmuladd.f32(float %71, float %76, float %77)
  %79 = insertelement <2 x float> poison, float %60, i64 0
  %80 = shufflevector <2 x float> %79, <2 x float> poison, <2 x i32> zeroinitializer
  %81 = insertelement <2 x float> poison, float %59, i64 0
  %82 = shufflevector <2 x float> %81, <2 x float> poison, <2 x i32> zeroinitializer
  %83 = insertelement <2 x float> poison, float %61, i64 0
  %84 = shufflevector <2 x float> %83, <2 x float> poison, <2 x i32> zeroinitializer
  %85 = insertelement <2 x float> poison, float %63, i64 0
  %86 = insertelement <2 x float> poison, float %62, i64 0
  %87 = shufflevector <2 x float> %86, <2 x float> poison, <2 x i32> zeroinitializer
  %88 = insertelement <2 x float> poison, float %64, i64 0
  %89 = shufflevector <2 x float> %88, <2 x float> poison, <2 x i32> zeroinitializer
  %90 = insertelement <2 x float> poison, float %66, i64 0
  %91 = insertelement <2 x float> poison, float %65, i64 0
  %92 = shufflevector <2 x float> %91, <2 x float> poison, <2 x i32> zeroinitializer
  %93 = insertelement <2 x float> poison, float %67, i64 0
  %94 = shufflevector <2 x float> %93, <2 x float> poison, <2 x i32> zeroinitializer
  %95 = insertelement <2 x float> poison, float %69, i64 0
  %96 = shufflevector <2 x float> %95, <2 x float> poison, <2 x i32> zeroinitializer
  %97 = insertelement <2 x float> poison, float %68, i64 0
  %98 = shufflevector <2 x float> %97, <2 x float> poison, <2 x i32> zeroinitializer
  %99 = insertelement <2 x float> poison, float %71, i64 0
  %100 = shufflevector <2 x float> %99, <2 x float> poison, <2 x i32> zeroinitializer
  %m_invwi = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7
  %ref.tmp107.sroa.5.0.m_invwi.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %ref.tmp107.sroa.6.0.m_invwi.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %ref.tmp107.sroa.7.0.m_invwi.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7, i32 0, i64 0, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp107.sroa.7.0.m_invwi.sroa_idx, align 4, !tbaa.struct !318
  %arrayidx7.i541 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7, i32 0, i64 1
  %ref.tmp107.sroa.11.16.arrayidx7.i541.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %ref.tmp107.sroa.12.16.arrayidx7.i541.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7, i32 0, i64 1, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp107.sroa.12.16.arrayidx7.i541.sroa_idx, align 4, !tbaa.struct !318
  %arrayidx11.i542 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7, i32 0, i64 2
  %101 = load float, ptr %m_framexform, align 4, !tbaa !137, !noalias !192
  %102 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137, !noalias !192
  %103 = load float, ptr %arrayidx.i14.i.i, align 4, !tbaa !137, !noalias !192
  %104 = load float, ptr %arrayidx7.i.i488, align 4, !tbaa !137, !noalias !192
  %105 = load float, ptr %arrayidx.i.i52.i, align 4, !tbaa !137, !noalias !192
  %106 = load float, ptr %arrayidx.i14.i55.i, align 4, !tbaa !137, !noalias !192
  %107 = insertelement <2 x float> poison, float %102, i64 0
  %108 = insertelement <2 x float> %107, float %105, i64 1
  %109 = insertelement <2 x float> poison, float %74, i64 0
  %110 = shufflevector <2 x float> %109, <2 x float> poison, <2 x i32> zeroinitializer
  %111 = fmul <2 x float> %108, %110
  %112 = insertelement <2 x float> poison, float %101, i64 0
  %113 = insertelement <2 x float> %112, float %104, i64 1
  %114 = insertelement <2 x float> poison, float %72, i64 0
  %115 = shufflevector <2 x float> %114, <2 x float> poison, <2 x i32> zeroinitializer
  %116 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %113, <2 x float> %115, <2 x float> %111)
  %117 = insertelement <2 x float> poison, float %103, i64 0
  %118 = insertelement <2 x float> %117, float %106, i64 1
  %119 = insertelement <2 x float> poison, float %76, i64 0
  %120 = shufflevector <2 x float> %119, <2 x float> poison, <2 x i32> zeroinitializer
  %121 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %118, <2 x float> %120, <2 x float> %116)
  %122 = fmul <2 x float> %80, %108
  %123 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %82, <2 x float> %113, <2 x float> %122)
  %124 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %84, <2 x float> %118, <2 x float> %123)
  %125 = insertelement <2 x float> %107, float %63, i64 1
  %126 = insertelement <2 x float> %85, float %105, i64 1
  %127 = fmul <2 x float> %125, %126
  %128 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %87, <2 x float> %113, <2 x float> %127)
  %129 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %89, <2 x float> %118, <2 x float> %128)
  %130 = insertelement <2 x float> %107, float %66, i64 1
  %131 = insertelement <2 x float> %90, float %105, i64 1
  %132 = fmul <2 x float> %130, %131
  %133 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %92, <2 x float> %113, <2 x float> %132)
  %134 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %94, <2 x float> %118, <2 x float> %133)
  %135 = fmul <2 x float> %129, %96
  %136 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %98, <2 x float> %124, <2 x float> %135)
  %137 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %100, <2 x float> %134, <2 x float> %136)
  %138 = shufflevector <2 x float> %131, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %139 = fmul <2 x float> %129, %138
  %140 = shufflevector <2 x float> %113, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %141 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %140, <2 x float> %124, <2 x float> %139)
  %142 = shufflevector <2 x float> %118, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %143 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %142, <2 x float> %134, <2 x float> %141)
  %144 = shufflevector <2 x float> %107, <2 x float> poison, <2 x i32> zeroinitializer
  %145 = fmul <2 x float> %144, %129
  %146 = shufflevector <2 x float> %112, <2 x float> poison, <2 x i32> zeroinitializer
  %147 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %146, <2 x float> %124, <2 x float> %145)
  %148 = shufflevector <2 x float> %117, <2 x float> poison, <2 x i32> zeroinitializer
  %149 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %148, <2 x float> %134, <2 x float> %147)
  %150 = extractelement <2 x float> %149, i64 0
  store float %150, ptr %m_invwi, align 4, !tbaa.struct !163
  %151 = extractelement <2 x float> %143, i64 0
  store float %151, ptr %ref.tmp107.sroa.5.0.m_invwi.sroa_idx, align 4, !tbaa.struct !293
  %152 = extractelement <2 x float> %137, i64 0
  store float %152, ptr %ref.tmp107.sroa.6.0.m_invwi.sroa_idx, align 4, !tbaa.struct !165
  %153 = shufflevector <2 x float> %149, <2 x float> %143, <2 x i32> <i32 1, i32 3>
  store <2 x float> %153, ptr %arrayidx7.i541, align 4
  %154 = extractelement <2 x float> %137, i64 1
  store float %154, ptr %ref.tmp107.sroa.11.16.arrayidx7.i541.sroa_idx, align 4, !tbaa.struct !165
  store <2 x float> %121, ptr %arrayidx11.i542, align 4
  %ref.tmp107.sroa.16.32.arrayidx11.i542.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  store float %78, ptr %ref.tmp107.sroa.16.32.arrayidx11.i542.sroa_idx, align 4, !tbaa.struct !165
  %ref.tmp107.sroa.17.32.arrayidx11.i542.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 7, i32 0, i64 2, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp107.sroa.17.32.arrayidx11.i542.sroa_idx, align 4, !tbaa.struct !318
  %m_lv = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 13
  %ref.tmp126.sroa.5.0.m_lv.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 13, i32 0, i64 2
  %m_av = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 14
  %ref.tmp136.sroa.5.0.m_av.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 14, i32 0, i64 2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %m_lv, i8 0, i64 32, i1 false)
  br i1 %cmp38.i, label %invoke.cont156.lr.ph, label %invoke.cont195

invoke.cont156.lr.ph:                             ; preds = %for.cond.cleanup
  %m_data.i549 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %4, i64 0, i32 5
  %155 = load ptr, ptr %m_data.i549, align 8, !tbaa !320
  %m_data.i552 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 1, i32 5
  %156 = load ptr, ptr %m_data.i552, align 8, !tbaa !39
  %arrayidx7.i574 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 8, i32 0, i64 1
  %wide.trip.count782 = zext i32 %5 to i64
  %157 = load <2 x float>, ptr %arrayidx7.i574, align 4, !tbaa !137
  %.pre796 = load float, ptr %m_com, align 4, !tbaa !137
  br label %invoke.cont156

invoke.cont57:                                    ; preds = %invoke.cont57.lr.ph, %invoke.cont57
  %indvars.iv = phi i64 [ 0, %invoke.cont57.lr.ph ], [ %indvars.iv.next, %invoke.cont57 ]
  %158 = phi float [ %arrayidx12.i468.promoted, %invoke.cont57.lr.ph ], [ %add13.i469, %invoke.cont57 ]
  %159 = phi <2 x float> [ %50, %invoke.cont57.lr.ph ], [ %170, %invoke.cont57 ]
  %160 = phi <2 x float> [ zeroinitializer, %invoke.cont57.lr.ph ], [ %185, %invoke.cont57 ]
  %161 = phi <2 x float> [ <float 0x3F33A92A20000000, float 0x3F1A36E2E0000000>, %invoke.cont57.lr.ph ], [ %186, %invoke.cont57 ]
  %162 = phi <2 x float> [ %53, %invoke.cont57.lr.ph ], [ %182, %invoke.cont57 ]
  %arrayidx.i436 = getelementptr inbounds ptr, ptr %51, i64 %indvars.iv
  %163 = load ptr, ptr %arrayidx.i436, align 8, !tbaa !219
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %163, i64 0, i32 1, i32 0, i64 2
  %arrayidx.i441 = getelementptr inbounds %class.btVector3, ptr %52, i64 %indvars.iv
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %163, i64 0, i32 1
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %arrayidx.i441, i64 0, i64 2
  %164 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %arrayidx5.i437 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %163, i64 0, i32 1, i32 0, i64 1
  %165 = load float, ptr %arrayidx5.i437, align 4, !tbaa !137
  %sub8.i = fsub float %165, %mul4.i.i
  %166 = load <2 x float>, ptr %arrayidx.i441, align 4, !tbaa !137
  %167 = insertelement <2 x float> poison, float %sub8.i, i64 0
  %168 = shufflevector <2 x float> %167, <2 x float> poison, <2 x i32> zeroinitializer
  %169 = fmul <2 x float> %166, %168
  %mul8.i.i456 = fmul float %164, %sub8.i
  %170 = fadd <2 x float> %169, %159
  %add13.i469 = fadd float %mul8.i.i456, %158
  %171 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %172 = load float, ptr %m_x, align 4, !tbaa !137
  %173 = insertelement <2 x float> poison, float %171, i64 0
  %174 = insertelement <2 x float> %173, float %172, i64 1
  %175 = fsub <2 x float> %174, %47
  %176 = shufflevector <2 x float> %175, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %177 = shufflevector <2 x float> %166, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %178 = insertelement <2 x float> %177, float %164, i64 1
  %179 = fmul <2 x float> %176, %178
  %180 = insertelement <2 x float> %177, float %164, i64 0
  %181 = fmul <2 x float> %175, %180
  %182 = fadd <2 x float> %179, %162
  %183 = shufflevector <2 x float> %175, <2 x float> poison, <2 x i32> zeroinitializer
  %184 = fmul <2 x float> %183, %166
  %185 = fadd <2 x float> %184, %160
  %186 = fadd <2 x float> %181, %161
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond45.for.cond.cleanup_crit_edge, label %invoke.cont57

invoke.cont156:                                   ; preds = %invoke.cont156.lr.ph, %invoke.cont156
  %indvars.iv779 = phi i64 [ 0, %invoke.cont156.lr.ph ], [ %indvars.iv.next780, %invoke.cont156 ]
  %add13.i599755 = phi float [ 0.000000e+00, %invoke.cont156.lr.ph ], [ %add13.i599, %invoke.cont156 ]
  %add13.i568752 = phi float [ 0.000000e+00, %invoke.cont156.lr.ph ], [ %add13.i568, %invoke.cont156 ]
  %187 = phi <2 x float> [ zeroinitializer, %invoke.cont156.lr.ph ], [ %196, %invoke.cont156 ]
  %188 = phi <2 x float> [ zeroinitializer, %invoke.cont156.lr.ph ], [ %213, %invoke.cont156 ]
  %arrayidx.i551 = getelementptr inbounds ptr, ptr %155, i64 %indvars.iv779
  %189 = load ptr, ptr %arrayidx.i551, align 8, !tbaa !219
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %189, i64 0, i32 3
  %arrayidx.i554 = getelementptr inbounds float, ptr %156, i64 %indvars.iv779
  %190 = load float, ptr %arrayidx.i554, align 4, !tbaa !137
  %arrayidx7.i556 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %189, i64 0, i32 3, i32 0, i64 2
  %191 = load float, ptr %arrayidx7.i556, align 4, !tbaa !137
  %mul8.i = fmul float %190, %191
  %192 = load <2 x float>, ptr %m_v, align 4, !tbaa !137
  %193 = insertelement <2 x float> poison, float %190, i64 0
  %194 = shufflevector <2 x float> %193, <2 x float> poison, <2 x i32> zeroinitializer
  %195 = fmul <2 x float> %194, %192
  %196 = fadd <2 x float> %195, %187
  store <2 x float> %196, ptr %m_lv, align 4, !tbaa !137
  %add13.i568 = fadd float %mul8.i, %add13.i568752
  store float %add13.i568, ptr %ref.tmp126.sroa.5.0.m_lv.sroa_idx, align 4, !tbaa !137
  %arrayidx5.i573 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %189, i64 0, i32 1, i32 0, i64 1
  %197 = extractelement <2 x float> %195, i64 1
  %m_x168 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %189, i64 0, i32 1
  %198 = load float, ptr %m_x168, align 4, !tbaa !137
  %sub.i572 = fsub float %198, %.pre796
  %199 = extractelement <2 x float> %195, i64 0
  %200 = load <2 x float>, ptr %arrayidx5.i573, align 4, !tbaa !137
  %201 = fsub <2 x float> %200, %157
  %202 = shufflevector <2 x float> %201, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %203 = insertelement <2 x float> %202, float %sub.i572, i64 1
  %204 = fneg <2 x float> %203
  %205 = shufflevector <2 x float> %195, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %206 = insertelement <2 x float> %205, float %mul8.i, i64 1
  %207 = fmul <2 x float> %206, %204
  %208 = insertelement <2 x float> %205, float %mul8.i, i64 0
  %209 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %201, <2 x float> %208, <2 x float> %207)
  %210 = extractelement <2 x float> %201, i64 0
  %211 = fneg float %210
  %neg30.i.i = fmul float %199, %211
  %212 = call float @llvm.fmuladd.f32(float %sub.i572, float %197, float %neg30.i.i)
  %213 = fadd <2 x float> %209, %188
  store <2 x float> %213, ptr %m_av, align 4, !tbaa !137
  %add13.i599 = fadd float %212, %add13.i599755
  store float %add13.i599, ptr %ref.tmp136.sroa.5.0.m_av.sroa_idx, align 4, !tbaa !137
  %indvars.iv.next780 = add nuw nsw i64 %indvars.iv779, 1
  %exitcond783.not = icmp eq i64 %indvars.iv.next780, %wide.trip.count782
  br i1 %exitcond783.not, label %invoke.cont195.loopexit, label %invoke.cont156

invoke.cont195.loopexit:                          ; preds = %invoke.cont156
  %214 = extractelement <2 x float> %213, i64 1
  %215 = extractelement <2 x float> %213, i64 0
  br label %invoke.cont195

invoke.cont195:                                   ; preds = %invoke.cont195.loopexit, %for.cond.cleanup
  %216 = phi float [ 0.000000e+00, %for.cond.cleanup ], [ %214, %invoke.cont195.loopexit ]
  %217 = phi float [ 0.000000e+00, %for.cond.cleanup ], [ %215, %invoke.cont195.loopexit ]
  %218 = phi float [ 0.000000e+00, %for.cond.cleanup ], [ %add13.i599, %invoke.cont195.loopexit ]
  %219 = phi float [ 0.000000e+00, %for.cond.cleanup ], [ %add13.i568, %invoke.cont195.loopexit ]
  %220 = phi <2 x float> [ zeroinitializer, %for.cond.cleanup ], [ %196, %invoke.cont195.loopexit ]
  %221 = load float, ptr %m_imass.i, align 4, !tbaa !137
  %m_ldamping = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 17
  %222 = load float, ptr %m_ldamping, align 4, !tbaa !383
  %sub = fsub float 1.000000e+00, %222
  %223 = insertelement <2 x float> poison, float %221, i64 0
  %224 = shufflevector <2 x float> %223, <2 x float> poison, <2 x i32> zeroinitializer
  %225 = fmul <2 x float> %220, %224
  %226 = insertelement <2 x float> poison, float %sub, i64 0
  %227 = shufflevector <2 x float> %226, <2 x float> poison, <2 x i32> zeroinitializer
  %228 = fmul <2 x float> %225, %227
  %mul8.i.i604 = fmul float %221, %219
  %mul8.i614 = fmul float %sub, %mul8.i.i604
  %retval.sroa.3.12.vec.insert.i617 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i614, i64 0
  store <2 x float> %228, ptr %m_lv, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i617, ptr %ref.tmp126.sroa.5.0.m_lv.sroa_idx, align 8, !tbaa.struct !165
  %229 = insertelement <2 x float> poison, float %216, i64 0
  %230 = shufflevector <2 x float> %229, <2 x float> poison, <2 x i32> zeroinitializer
  %231 = fmul <2 x float> %143, %230
  %m_adamping = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 18
  %232 = load float, ptr %m_adamping, align 8, !tbaa !384
  %sub211 = fsub float 1.000000e+00, %232
  %233 = insertelement <2 x float> poison, float %217, i64 0
  %234 = shufflevector <2 x float> %233, <2 x float> poison, <2 x i32> zeroinitializer
  %235 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %149, <2 x float> %234, <2 x float> %231)
  %236 = insertelement <2 x float> poison, float %218, i64 0
  %237 = shufflevector <2 x float> %236, <2 x float> poison, <2 x i32> zeroinitializer
  %238 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %137, <2 x float> %237, <2 x float> %235)
  %239 = insertelement <2 x float> poison, float %sub211, i64 0
  %240 = shufflevector <2 x float> %239, <2 x float> poison, <2 x i32> zeroinitializer
  %241 = fmul <2 x float> %240, %238
  %242 = extractelement <2 x float> %121, i64 1
  %mul8.i20.i = fmul float %216, %242
  %243 = extractelement <2 x float> %121, i64 0
  %244 = call float @llvm.fmuladd.f32(float %243, float %217, float %mul8.i20.i)
  %245 = call float @llvm.fmuladd.f32(float %78, float %218, float %244)
  %mul8.i633 = fmul float %sub211, %245
  %retval.sroa.3.12.vec.insert.i636 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i633, i64 0
  store <2 x float> %241, ptr %m_av, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i636, ptr %ref.tmp136.sroa.5.0.m_av.sroa_idx, align 8, !tbaa.struct !165
  %m_vimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 9
  %m_matching = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 19
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %m_vimpulses, i8 0, i64 72, i1 false)
  %246 = load float, ptr %m_matching, align 4, !tbaa !385
  %cmp246 = fcmp ogt float %246, 0.000000e+00
  br i1 %cmp246, label %for.cond248.preheader, label %if.end

for.cond248.preheader:                            ; preds = %invoke.cont195
  %247 = load i32, ptr %m_size.i428, align 4, !tbaa !319
  %cmp253756 = icmp sgt i32 %247, 0
  br i1 %cmp253756, label %invoke.cont273.lr.ph, label %if.end

invoke.cont273.lr.ph:                             ; preds = %for.cond248.preheader
  %m_data.i646 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %4, i64 0, i32 5
  %m_data.i649 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 2, i32 5
  %arrayidx.i32.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 3, i32 1, i32 0, i64 2
  br label %invoke.cont273

invoke.cont273:                                   ; preds = %invoke.cont273.lr.ph, %invoke.cont273
  %indvars.iv784 = phi i64 [ 0, %invoke.cont273.lr.ph ], [ %indvars.iv.next785, %invoke.cont273 ]
  %248 = load ptr, ptr %m_data.i646, align 8, !tbaa !320
  %arrayidx.i648 = getelementptr inbounds ptr, ptr %248, i64 %indvars.iv784
  %249 = load ptr, ptr %arrayidx.i648, align 8, !tbaa !219
  %m_x270 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %249, i64 0, i32 1
  %250 = load ptr, ptr %m_data.i649, align 8, !tbaa !33
  %arrayidx.i651 = getelementptr inbounds %class.btVector3, ptr %250, i64 %indvars.iv784
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %arrayidx.i651, i64 0, i64 2
  %251 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %252 = load float, ptr %arrayidx.i651, align 4, !tbaa !137
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %arrayidx.i651, i64 0, i64 1
  %253 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %254 = load float, ptr %m_matching, align 4, !tbaa !385
  %255 = load float, ptr %arrayidx.i14.i.i, align 4, !tbaa !137
  %256 = load float, ptr %m_framexform, align 4, !tbaa !137
  %257 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %258 = load <2 x float>, ptr %m_x270, align 4, !tbaa !137
  %259 = load <2 x float>, ptr %m_origin.i, align 4, !tbaa !137
  %260 = load float, ptr %arrayidx.i14.i55.i, align 4, !tbaa !137
  %261 = load float, ptr %arrayidx7.i.i488, align 4, !tbaa !137
  %262 = load float, ptr %arrayidx.i.i52.i, align 4, !tbaa !137
  %263 = insertelement <2 x float> poison, float %253, i64 0
  %264 = shufflevector <2 x float> %263, <2 x float> poison, <2 x i32> zeroinitializer
  %265 = insertelement <2 x float> poison, float %257, i64 0
  %266 = insertelement <2 x float> %265, float %262, i64 1
  %267 = fmul <2 x float> %264, %266
  %268 = insertelement <2 x float> poison, float %256, i64 0
  %269 = insertelement <2 x float> %268, float %261, i64 1
  %270 = insertelement <2 x float> poison, float %252, i64 0
  %271 = shufflevector <2 x float> %270, <2 x float> poison, <2 x i32> zeroinitializer
  %272 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %269, <2 x float> %271, <2 x float> %267)
  %273 = insertelement <2 x float> poison, float %255, i64 0
  %274 = insertelement <2 x float> %273, float %260, i64 1
  %275 = insertelement <2 x float> poison, float %251, i64 0
  %276 = shufflevector <2 x float> %275, <2 x float> poison, <2 x i32> zeroinitializer
  %277 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %274, <2 x float> %276, <2 x float> %272)
  %278 = fadd <2 x float> %259, %277
  %279 = fsub <2 x float> %278, %258
  %280 = insertelement <2 x float> poison, float %254, i64 0
  %281 = shufflevector <2 x float> %280, <2 x float> poison, <2 x i32> zeroinitializer
  %282 = fmul <2 x float> %281, %279
  %283 = fadd <2 x float> %258, %282
  %arrayidx13.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %249, i64 0, i32 1, i32 0, i64 2
  %284 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %285 = load float, ptr %arrayidx.i32.i.i, align 4, !tbaa !137
  %286 = load float, ptr %arrayidx.i14.i75.i, align 4, !tbaa !137
  %287 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %288 = load float, ptr %arrayidx.i.i72.i, align 4, !tbaa !137
  %mul8.i29.i.i = fmul float %253, %288
  %289 = call float @llvm.fmuladd.f32(float %287, float %252, float %mul8.i29.i.i)
  %290 = call float @llvm.fmuladd.f32(float %286, float %251, float %289)
  %add17.i.i = fadd float %285, %290
  %sub14.i.i = fsub float %add17.i.i, %284
  %mul8.i.i665 = fmul float %254, %sub14.i.i
  %add14.i.i = fadd float %284, %mul8.i.i665
  %retval.sroa.3.12.vec.insert.i20.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i, i64 0
  store <2 x float> %283, ptr %m_x270, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i20.i, ptr %arrayidx13.i.i, align 8, !tbaa.struct !165
  %indvars.iv.next785 = add nuw nsw i64 %indvars.iv784, 1
  %291 = load i32, ptr %m_size.i428, align 4, !tbaa !319
  %292 = sext i32 %291 to i64
  %cmp253 = icmp slt i64 %indvars.iv.next785, %292
  br i1 %cmp253, label %invoke.cont273, label %if.end

if.end:                                           ; preds = %invoke.cont273, %for.cond248.preheader, %invoke.cont195
  %m_collide = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 23
  %293 = load i8, ptr %m_collide, align 1, !tbaa !346, !range !159, !noundef !192
  %tobool284.not = icmp eq i8 %293, 0
  br i1 %tobool284.not, label %if.end342, label %if.then285

if.then285:                                       ; preds = %if.end
  %m_data.i668 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %4, i64 0, i32 5
  %294 = load ptr, ptr %m_data.i668, align 8, !tbaa !320
  %295 = load ptr, ptr %294, align 8, !tbaa !219
  %m_x290 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %295, i64 0, i32 1
  %296 = load <4 x float>, ptr %m_x290, align 8
  %cmp293758 = icmp sgt i32 %5, 1
  br i1 %cmp293758, label %for.body295.preheader, label %for.cond.cleanup294

for.body295.preheader:                            ; preds = %if.then285
  %wide.trip.count790 = zext i32 %5 to i64
  %297 = add nsw i64 %wide.trip.count790, -1
  %xtraiter809 = and i64 %297, 1
  %298 = icmp eq i32 %5, 2
  br i1 %298, label %for.cond.cleanup294.loopexit.unr-lcssa, label %for.body295.preheader.new

for.body295.preheader.new:                        ; preds = %for.body295.preheader
  %unroll_iter815 = and i64 %297, -2
  br label %for.body295

for.cond.cleanup294.loopexit.unr-lcssa:           ; preds = %for.body295, %for.body295.preheader
  %.lcssa806.ph = phi <4 x float> [ undef, %for.body295.preheader ], [ %319, %for.body295 ]
  %.lcssa805.ph = phi <4 x float> [ undef, %for.body295.preheader ], [ %321, %for.body295 ]
  %indvars.iv787.unr = phi i64 [ 1, %for.body295.preheader ], [ %indvars.iv.next788.1, %for.body295 ]
  %.unr810 = phi <4 x float> [ %296, %for.body295.preheader ], [ %319, %for.body295 ]
  %.unr811 = phi <4 x float> [ %296, %for.body295.preheader ], [ %321, %for.body295 ]
  %lcmp.mod812.not = icmp eq i64 %xtraiter809, 0
  br i1 %lcmp.mod812.not, label %for.cond.cleanup294, label %for.body295.epil

for.body295.epil:                                 ; preds = %for.cond.cleanup294.loopexit.unr-lcssa
  %arrayidx.i671.epil = getelementptr inbounds ptr, ptr %294, i64 %indvars.iv787.unr
  %299 = load ptr, ptr %arrayidx.i671.epil, align 8, !tbaa !219
  %m_x300.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %299, i64 0, i32 1
  %300 = load <4 x float>, ptr %m_x300.epil, align 4, !tbaa !137
  %301 = fcmp olt <4 x float> %300, %.unr810
  %302 = select <4 x i1> %301, <4 x float> %300, <4 x float> %.unr810
  %303 = fcmp olt <4 x float> %.unr811, %300
  %304 = select <4 x i1> %303, <4 x float> %300, <4 x float> %.unr811
  br label %for.cond.cleanup294

for.cond.cleanup294:                              ; preds = %for.body295.epil, %for.cond.cleanup294.loopexit.unr-lcssa, %if.then285
  %305 = phi <4 x float> [ %296, %if.then285 ], [ %.lcssa806.ph, %for.cond.cleanup294.loopexit.unr-lcssa ], [ %302, %for.body295.epil ]
  %306 = phi <4 x float> [ %296, %if.then285 ], [ %.lcssa805.ph, %for.cond.cleanup294.loopexit.unr-lcssa ], [ %304, %for.body295.epil ]
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %bounds) #38
  store <4 x float> %305, ptr %bounds, align 16
  store <4 x float> %306, ptr %mx2.i, align 16
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %4, i64 0, i32 15
  %307 = load ptr, ptr %m_leaf, align 8, !tbaa !221
  %tobool313.not = icmp eq ptr %307, null
  br i1 %tobool313.not, label %if.else, label %if.then314

for.body295:                                      ; preds = %for.body295, %for.body295.preheader.new
  %indvars.iv787 = phi i64 [ 1, %for.body295.preheader.new ], [ %indvars.iv.next788.1, %for.body295 ]
  %308 = phi <4 x float> [ %296, %for.body295.preheader.new ], [ %319, %for.body295 ]
  %309 = phi <4 x float> [ %296, %for.body295.preheader.new ], [ %321, %for.body295 ]
  %niter816 = phi i64 [ 0, %for.body295.preheader.new ], [ %niter816.next.1, %for.body295 ]
  %arrayidx.i671 = getelementptr inbounds ptr, ptr %294, i64 %indvars.iv787
  %310 = load ptr, ptr %arrayidx.i671, align 8, !tbaa !219
  %m_x300 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %310, i64 0, i32 1
  %311 = load <4 x float>, ptr %m_x300, align 4, !tbaa !137
  %312 = fcmp olt <4 x float> %311, %308
  %313 = select <4 x i1> %312, <4 x float> %311, <4 x float> %308
  %314 = fcmp olt <4 x float> %309, %311
  %315 = select <4 x i1> %314, <4 x float> %311, <4 x float> %309
  %indvars.iv.next788 = add nuw nsw i64 %indvars.iv787, 1
  %arrayidx.i671.1 = getelementptr inbounds ptr, ptr %294, i64 %indvars.iv.next788
  %316 = load ptr, ptr %arrayidx.i671.1, align 8, !tbaa !219
  %m_x300.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %316, i64 0, i32 1
  %317 = load <4 x float>, ptr %m_x300.1, align 4, !tbaa !137
  %318 = fcmp olt <4 x float> %317, %313
  %319 = select <4 x i1> %318, <4 x float> %317, <4 x float> %313
  %320 = fcmp olt <4 x float> %315, %317
  %321 = select <4 x i1> %320, <4 x float> %317, <4 x float> %315
  %indvars.iv.next788.1 = add nuw nsw i64 %indvars.iv787, 2
  %niter816.next.1 = add i64 %niter816, 2
  %niter816.ncmp.1 = icmp eq i64 %niter816.next.1, %unroll_iter815
  br i1 %niter816.ncmp.1, label %for.cond.cleanup294.loopexit.unr-lcssa, label %for.body295

if.then314:                                       ; preds = %for.cond.cleanup294
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp316) #38
  %322 = load float, ptr %m_sst, align 8, !tbaa !137
  %323 = load <2 x float>, ptr %m_lv, align 4, !tbaa !137
  %324 = insertelement <2 x float> poison, float %322, i64 0
  %325 = shufflevector <2 x float> %324, <2 x float> poison, <2 x i32> zeroinitializer
  %326 = fmul <2 x float> %325, %323
  %327 = fmul <2 x float> %326, <float 3.000000e+00, float 3.000000e+00>
  %328 = load float, ptr %ref.tmp126.sroa.5.0.m_lv.sroa_idx, align 4, !tbaa !137
  %mul8.i699 = fmul float %322, %328
  %mul8.i709 = fmul float %mul8.i699, 3.000000e+00
  %retval.sroa.3.12.vec.insert.i712 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i709, i64 0
  store <2 x float> %327, ptr %ref.tmp316, align 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i712, ptr %1, align 8
  %329 = load float, ptr %radmrg, align 4, !tbaa !386
  %call330 = invoke noundef zeroext i1 @_ZN6btDbvt6updateEP10btDbvtNodeR12btDbvtAabbMmRK9btVector3f(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt, ptr noundef nonnull %307, ptr noundef nonnull align 4 dereferenceable(32) %bounds, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp316, float noundef %329)
          to label %invoke.cont329 unwind label %lpad324

invoke.cont329:                                   ; preds = %if.then314
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp316) #38
  br label %if.end338

lpad311:                                          ; preds = %if.else
  %330 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup339

lpad324:                                          ; preds = %if.then314
  %331 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp316) #38
  br label %ehcleanup339

if.else:                                          ; preds = %for.cond.cleanup294
  %call336 = invoke noundef ptr @_ZN6btDbvt6insertERK12btDbvtAabbMmPv(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt, ptr noundef nonnull align 4 dereferenceable(32) %bounds, ptr noundef nonnull %4)
          to label %invoke.cont335 unwind label %lpad311

invoke.cont335:                                   ; preds = %if.else
  store ptr %call336, ptr %m_leaf, align 8, !tbaa !221
  br label %if.end338

if.end338:                                        ; preds = %invoke.cont335, %invoke.cont329
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %bounds) #38
  br label %if.end342

ehcleanup339:                                     ; preds = %lpad324, %lpad311
  %.pn = phi { ptr, i32 } [ %331, %lpad324 ], [ %330, %lpad311 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %bounds) #38
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %s) #38
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %r) #38
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %m) #38
  invoke void @_ZN15CProfileManager12Stop_ProfileEv()
          to label %invoke.cont355 unwind label %terminate.lpad

if.end342:                                        ; preds = %if.end338, %if.end
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %s) #38
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %r) #38
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %m) #38
  %.pre797 = load i32, ptr %m_size.i, align 4, !tbaa !124
  br label %if.end347

if.end347:                                        ; preds = %if.end342, %for.body
  %332 = phi i32 [ %.pre797, %if.end342 ], [ %2, %for.body ]
  %indvars.iv.next793 = add nuw nsw i64 %indvars.iv792, 1
  %333 = sext i32 %332 to i64
  %cmp = icmp slt i64 %indvars.iv.next793, %333
  br i1 %cmp, label %for.body, label %for.end352

for.end352:                                       ; preds = %if.end347, %entry
  call void @_ZN15CProfileManager12Stop_ProfileEv()
  ret void

invoke.cont355:                                   ; preds = %ehcleanup339
  resume { ptr, i32 } %.pn

terminate.lpad:                                   ; preds = %ehcleanup339
  %334 = landingpad { ptr, i32 }
          catch ptr null
  %335 = extractvalue { ptr, i32 } %334, 0
  call void @__clang_call_terminate(ptr %335) #39
  unreachable
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6refineEPNS_10ImplicitFnEfb(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %ifn, float noundef %accurary, i1 noundef zeroext %cut) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %l.sroa.7.i = alloca <{ [2 x ptr], float, i8, [3 x i8], float, float, float, %class.btVector3, [4 x i8] }>, align 8
  %tmp.i1485 = alloca %"struct.btSoftBody::Link", align 8
  %f.sroa.7.i = alloca { [3 x ptr], %class.btVector3, float, ptr }, align 8
  %ref.tmp.i = alloca %class.btVector3, align 8
  %tmp.i = alloca %"struct.btSoftBody::Link", align 8
  %edges = alloca %struct.btSymMatrix, align 8
  %ref.tmp = alloca i32, align 4
  %x = alloca %class.btVector3, align 8
  %idx335 = alloca [3 x i32], align 4
  %x475 = alloca %class.btVector3, align 4
  %v490.sroa.0 = alloca [4 x float], align 4
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %1 = load i32, ptr %m_size.i, align 4, !tbaa !88
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %edges) #38
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %ref.tmp) #38
  store i32 -2, ptr %ref.tmp, align 4, !tbaa !140
  call void @_ZN11btSymMatrixIiEC2EiRKi(ptr noundef nonnull align 8 dereferenceable(36) %edges, i32 noundef %1, ptr noundef nonnull align 4 dereferenceable(4) %ref.tmp)
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %ref.tmp) #38
  %m_size.i1103 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %2 = load i32, ptr %m_size.i1103, align 4, !tbaa !92
  %cmp1683 = icmp sgt i32 %2, 0
  br i1 %cmp1683, label %for.body.lr.ph, label %for.cond65.preheader

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i1104 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  br label %for.body

for.cond39.preheader:                             ; preds = %if.end37
  %cmp431685 = icmp sgt i32 %17, 0
  br i1 %cmp431685, label %invoke.cont59.lr.ph, label %for.cond65.preheader

invoke.cont59.lr.ph:                              ; preds = %for.cond39.preheader
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %edges, i64 0, i32 5
  %3 = load ptr, ptr %m_data.i.i, align 8, !tbaa !131
  %m_data.i1114 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %4 = load ptr, ptr %m_data.i1114, align 8, !tbaa !91
  %sub.ptr.rhs.cast = ptrtoint ptr %0 to i64
  br label %invoke.cont59

for.body:                                         ; preds = %for.body.lr.ph, %if.end37
  %5 = phi i32 [ %2, %for.body.lr.ph ], [ %17, %if.end37 ]
  %i.01684 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %if.end37 ]
  %6 = load ptr, ptr %m_data.i1104, align 8, !tbaa !91
  %idxprom.i = sext i32 %i.01684 to i64
  %m_bbending = getelementptr inbounds %"struct.btSoftBody::Link", ptr %6, i64 %idxprom.i, i32 3
  %bf.load = load i8, ptr %m_bbending, align 4
  %7 = and i8 %bf.load, 1
  %tobool.not = icmp eq i8 %7, 0
  br i1 %tobool.not, label %if.end37, label %if.then

if.then:                                          ; preds = %for.body
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %6, i64 %idxprom.i, i32 1
  %8 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %8, i64 0, i32 1
  %vtable = load ptr, ptr %ifn, align 8, !tbaa !5
  %9 = load ptr, ptr %vtable, align 8
  %call12 = invoke noundef float %9(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %m_x)
          to label %invoke.cont11 unwind label %lpad10

invoke.cont11:                                    ; preds = %if.then
  %arrayidx15 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %6, i64 %idxprom.i, i32 1, i64 1
  %10 = load ptr, ptr %arrayidx15, align 8, !tbaa !219
  %m_x16 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %10, i64 0, i32 1
  %vtable17 = load ptr, ptr %ifn, align 8, !tbaa !5
  %11 = load ptr, ptr %vtable17, align 8
  %call21 = invoke noundef float %11(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %m_x16)
          to label %invoke.cont20 unwind label %lpad19

invoke.cont20:                                    ; preds = %invoke.cont11
  %mul.i = fmul float %call12, %call21
  %cmp.i = fcmp ule float %mul.i, 0.000000e+00
  br i1 %cmp.i, label %if.then24, label %invoke.cont20.if.end37_crit_edge

invoke.cont20.if.end37_crit_edge:                 ; preds = %invoke.cont20
  %.pre = load i32, ptr %m_size.i1103, align 4, !tbaa !92
  br label %if.end37

if.then24:                                        ; preds = %invoke.cont20
  %12 = load ptr, ptr %m_data.i1104, align 8, !tbaa !91
  %arrayidx.i1107 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %12, i64 %idxprom.i
  %13 = load i32, ptr %m_size.i1103, align 4, !tbaa !92
  %sub = add nsw i32 %13, -1
  %idxprom.i1110 = sext i32 %sub to i64
  %arrayidx.i1111 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %12, i64 %idxprom.i1110
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %tmp.i)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tmp.i, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i1107, i64 72, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(68) %arrayidx.i1107, ptr noundef nonnull align 8 dereferenceable(68) %arrayidx.i1111, i64 68, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(68) %arrayidx.i1111, ptr noundef nonnull align 8 dereferenceable(68) %tmp.i, i64 68, i1 false)
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %tmp.i)
  %14 = load i32, ptr %m_size.i1103, align 4, !tbaa !92
  %dec.i = add nsw i32 %14, -1
  store i32 %dec.i, ptr %m_size.i1103, align 4, !tbaa !92
  %dec = add nsw i32 %i.01684, -1
  br label %if.end37

lpad10:                                           ; preds = %if.then
  %15 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

lpad19:                                           ; preds = %invoke.cont11
  %16 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup

ehcleanup:                                        ; preds = %lpad19, %lpad10
  %.pn1651 = phi { ptr, i32 } [ %16, %lpad19 ], [ %15, %lpad10 ]
  %exn.slot.0 = extractvalue { ptr, i32 } %.pn1651, 0
  %ehselector.slot.0 = extractvalue { ptr, i32 } %.pn1651, 1
  br label %ehcleanup894

if.end37:                                         ; preds = %invoke.cont20.if.end37_crit_edge, %if.then24, %for.body
  %17 = phi i32 [ %dec.i, %if.then24 ], [ %.pre, %invoke.cont20.if.end37_crit_edge ], [ %5, %for.body ]
  %i.1 = phi i32 [ %dec, %if.then24 ], [ %i.01684, %invoke.cont20.if.end37_crit_edge ], [ %i.01684, %for.body ]
  %inc = add nsw i32 %i.1, 1
  %cmp = icmp slt i32 %inc, %17
  br i1 %cmp, label %for.body, label %for.cond39.preheader

for.cond65.preheader:                             ; preds = %invoke.cont59, %entry, %for.cond39.preheader
  %m_size.i1117 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %18 = load i32, ptr %m_size.i1117, align 4, !tbaa !96
  %cmp681687 = icmp sgt i32 %18, 0
  br i1 %cmp681687, label %for.body69.lr.ph, label %for.cond126.preheader

for.body69.lr.ph:                                 ; preds = %for.cond65.preheader
  %m_data.i1118 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %19 = load ptr, ptr %m_data.i1118, align 8, !tbaa !95
  %sub.ptr.rhs.cast77 = ptrtoint ptr %0 to i64
  %m_data.i.i1127 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %edges, i64 0, i32 5
  %20 = load ptr, ptr %m_data.i.i1127, align 8, !tbaa !131
  br label %for.body69

invoke.cont59:                                    ; preds = %invoke.cont59.lr.ph, %invoke.cont59
  %indvars.iv = phi i64 [ 0, %invoke.cont59.lr.ph ], [ %indvars.iv.next, %invoke.cont59 ]
  %m_n50 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %4, i64 %indvars.iv, i32 1
  %21 = load ptr, ptr %m_n50, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %21 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 120
  %conv = trunc i64 %sub.ptr.div to i32
  %arrayidx53 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %4, i64 %indvars.iv, i32 1, i64 1
  %22 = load ptr, ptr %arrayidx53, align 8, !tbaa !219
  %sub.ptr.lhs.cast54 = ptrtoint ptr %22 to i64
  %sub.ptr.sub56 = sub i64 %sub.ptr.lhs.cast54, %sub.ptr.rhs.cast
  %sub.ptr.div57 = sdiv exact i64 %sub.ptr.sub56, 120
  %conv58 = trunc i64 %sub.ptr.div57 to i32
  %spec.select6.i.i = call i32 @llvm.smax.i32(i32 %conv, i32 %conv58)
  %add.i.i = add nsw i32 %spec.select6.i.i, 1
  %mul.i.i = mul nsw i32 %add.i.i, %spec.select6.i.i
  %div.i.i = sdiv i32 %mul.i.i, 2
  %spec.select.i.i = call i32 @llvm.smin.i32(i32 %conv, i32 %conv58)
  %add2.i.i = add nsw i32 %div.i.i, %spec.select.i.i
  %idxprom.i.i = sext i32 %add2.i.i to i64
  %arrayidx.i.i = getelementptr inbounds i32, ptr %3, i64 %idxprom.i.i
  store i32 -1, ptr %arrayidx.i.i, align 4, !tbaa !140
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %23 = load i32, ptr %m_size.i1103, align 4, !tbaa !92
  %24 = sext i32 %23 to i64
  %cmp43 = icmp slt i64 %indvars.iv.next, %24
  br i1 %cmp43, label %invoke.cont59, label %for.cond65.preheader

for.cond126.preheader:                            ; preds = %for.body69, %for.cond65.preheader
  %cmp1271693 = icmp sgt i32 %1, 0
  br i1 %cmp1271693, label %for.body128.lr.ph, label %for.end234

for.body128.lr.ph:                                ; preds = %for.cond126.preheader
  %m_data.i.i1154 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %edges, i64 0, i32 5
  %fneg.i = fneg float %accurary
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp.i, i64 0, i32 1
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %x, i64 0, i32 1
  %27 = zext i32 %1 to i64
  %wide.trip.count1737 = zext i32 %1 to i64
  br label %for.body128

for.body69:                                       ; preds = %for.body69.lr.ph, %for.body69
  %indvars.iv1726 = phi i64 [ 0, %for.body69.lr.ph ], [ %indvars.iv.next1727, %for.body69 ]
  %m_n74 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %19, i64 %indvars.iv1726, i32 1
  %28 = load ptr, ptr %m_n74, align 8, !tbaa !219
  %sub.ptr.lhs.cast76 = ptrtoint ptr %28 to i64
  %sub.ptr.sub78 = sub i64 %sub.ptr.lhs.cast76, %sub.ptr.rhs.cast77
  %sub.ptr.div79 = sdiv exact i64 %sub.ptr.sub78, 120
  %conv80 = trunc i64 %sub.ptr.div79 to i32
  %arrayidx82 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %19, i64 %indvars.iv1726, i32 1, i64 1
  %29 = load ptr, ptr %arrayidx82, align 8, !tbaa !219
  %sub.ptr.lhs.cast83 = ptrtoint ptr %29 to i64
  %sub.ptr.sub85 = sub i64 %sub.ptr.lhs.cast83, %sub.ptr.rhs.cast77
  %sub.ptr.div86 = sdiv exact i64 %sub.ptr.sub85, 120
  %conv87 = trunc i64 %sub.ptr.div86 to i32
  %spec.select6.i.i1122 = call i32 @llvm.smax.i32(i32 %conv80, i32 %conv87)
  %add.i.i1123 = add nsw i32 %spec.select6.i.i1122, 1
  %mul.i.i1124 = mul nsw i32 %add.i.i1123, %spec.select6.i.i1122
  %div.i.i1125 = sdiv i32 %mul.i.i1124, 2
  %spec.select.i.i1121 = call i32 @llvm.smin.i32(i32 %conv80, i32 %conv87)
  %add2.i.i1126 = add nsw i32 %div.i.i1125, %spec.select.i.i1121
  %idxprom.i.i1128 = sext i32 %add2.i.i1126 to i64
  %arrayidx.i.i1129 = getelementptr inbounds i32, ptr %20, i64 %idxprom.i.i1128
  store i32 -1, ptr %arrayidx.i.i1129, align 4, !tbaa !140
  %arrayidx98 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %19, i64 %indvars.iv1726, i32 1, i64 2
  %30 = load ptr, ptr %arrayidx98, align 8, !tbaa !219
  %sub.ptr.lhs.cast99 = ptrtoint ptr %30 to i64
  %sub.ptr.sub101 = sub i64 %sub.ptr.lhs.cast99, %sub.ptr.rhs.cast77
  %sub.ptr.div102 = sdiv exact i64 %sub.ptr.sub101, 120
  %conv103 = trunc i64 %sub.ptr.div102 to i32
  %spec.select6.i.i1131 = call i32 @llvm.smax.i32(i32 %conv87, i32 %conv103)
  %add.i.i1132 = add nsw i32 %spec.select6.i.i1131, 1
  %mul.i.i1133 = mul nsw i32 %add.i.i1132, %spec.select6.i.i1131
  %div.i.i1134 = sdiv i32 %mul.i.i1133, 2
  %spec.select.i.i1130 = call i32 @llvm.smin.i32(i32 %conv87, i32 %conv103)
  %add2.i.i1135 = add nsw i32 %div.i.i1134, %spec.select.i.i1130
  %idxprom.i.i1137 = sext i32 %add2.i.i1135 to i64
  %arrayidx.i.i1138 = getelementptr inbounds i32, ptr %20, i64 %idxprom.i.i1137
  store i32 -1, ptr %arrayidx.i.i1138, align 4, !tbaa !140
  %spec.select6.i.i1140 = call i32 @llvm.smax.i32(i32 %conv103, i32 %conv80)
  %add.i.i1141 = add nsw i32 %spec.select6.i.i1140, 1
  %mul.i.i1142 = mul nsw i32 %add.i.i1141, %spec.select6.i.i1140
  %div.i.i1143 = sdiv i32 %mul.i.i1142, 2
  %spec.select.i.i1139 = call i32 @llvm.smin.i32(i32 %conv103, i32 %conv80)
  %add2.i.i1144 = add nsw i32 %div.i.i1143, %spec.select.i.i1139
  %idxprom.i.i1146 = sext i32 %add2.i.i1144 to i64
  %arrayidx.i.i1147 = getelementptr inbounds i32, ptr %20, i64 %idxprom.i.i1146
  store i32 -1, ptr %arrayidx.i.i1147, align 4, !tbaa !140
  %indvars.iv.next1727 = add nuw nsw i64 %indvars.iv1726, 1
  %31 = load i32, ptr %m_size.i1117, align 4, !tbaa !96
  %32 = sext i32 %31 to i64
  %cmp68 = icmp slt i64 %indvars.iv.next1727, %32
  br i1 %cmp68, label %for.body69, label %for.cond126.preheader

for.cond126.loopexit:                             ; preds = %for.inc229, %for.body128
  %indvars.iv.next1730 = add nuw nsw i64 %indvars.iv1729, 1
  %exitcond1738.not = icmp eq i64 %indvars.iv.next1735, %wide.trip.count1737
  br i1 %exitcond1738.not, label %for.end234, label %for.body128

for.body128:                                      ; preds = %for.body128.lr.ph, %for.cond126.loopexit
  %indvars.iv1734 = phi i64 [ 0, %for.body128.lr.ph ], [ %indvars.iv.next1735, %for.cond126.loopexit ]
  %indvars.iv1729 = phi i64 [ 1, %for.body128.lr.ph ], [ %indvars.iv.next1730, %for.cond126.loopexit ]
  %indvars.iv.next1735 = add nuw nsw i64 %indvars.iv1734, 1
  %cmp1301689 = icmp ult i64 %indvars.iv.next1735, %27
  br i1 %cmp1301689, label %invoke.cont132.lr.ph, label %for.cond126.loopexit

invoke.cont132.lr.ph:                             ; preds = %for.body128
  %33 = trunc i64 %indvars.iv1734 to i32
  br label %invoke.cont132

invoke.cont132:                                   ; preds = %invoke.cont132.lr.ph, %for.inc229
  %indvars.iv1731 = phi i64 [ %indvars.iv1729, %invoke.cont132.lr.ph ], [ %indvars.iv.next1732, %for.inc229 ]
  %34 = load ptr, ptr %m_data.i.i1154, align 8, !tbaa !131
  %35 = trunc i64 %indvars.iv1731 to i32
  %spec.select6.i.i1149 = call i32 @llvm.smax.i32(i32 %33, i32 %35)
  %add.i.i1150 = add nuw nsw i32 %spec.select6.i.i1149, 1
  %mul.i.i1151 = mul nsw i32 %add.i.i1150, %spec.select6.i.i1149
  %div.i.i11521646 = lshr i32 %mul.i.i1151, 1
  %spec.select.i.i1148 = call i32 @llvm.smin.i32(i32 %33, i32 %35)
  %add2.i.i1153 = add nuw nsw i32 %div.i.i11521646, %spec.select.i.i1148
  %idxprom.i.i1155 = zext i32 %add2.i.i1153 to i64
  %arrayidx.i.i1156 = getelementptr inbounds i32, ptr %34, i64 %idxprom.i.i1155
  %36 = load i32, ptr %arrayidx.i.i1156, align 4, !tbaa !140
  %cmp134 = icmp eq i32 %36, -1
  br i1 %cmp134, label %if.then135, label %for.inc229

if.then135:                                       ; preds = %invoke.cont132
  %37 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_x144 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv1734, i32 1
  %m_x145 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv1731, i32 1
  %vtable.i = load ptr, ptr %ifn, align 8, !tbaa !5
  %38 = load ptr, ptr %vtable.i, align 8
  %call.i1164 = invoke noundef float %38(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %m_x144)
          to label %call.i.noexc unwind label %lpad146.loopexit.split-lp

call.i.noexc:                                     ; preds = %if.then135
  %vtable1.i = load ptr, ptr %ifn, align 8, !tbaa !5
  %39 = load ptr, ptr %vtable1.i, align 8
  %call3.i1165 = invoke noundef float %39(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %m_x145)
          to label %call3.i.noexc unwind label %lpad146.loopexit.split-lp

call3.i.noexc:                                    ; preds = %call.i.noexc
  %cmp.i1163 = fcmp ogt float %call.i1164, %call3.i1165
  br i1 %cmp.i1163, label %if.then.i, label %if.end.i

if.then.i:                                        ; preds = %call3.i.noexc
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %call3.i.noexc
  %span.sroa.7.0.i = phi float [ 0.000000e+00, %if.then.i ], [ 1.000000e+00, %call3.i.noexc ]
  %span.sroa.0.0.i = phi float [ 1.000000e+00, %if.then.i ], [ 0.000000e+00, %call3.i.noexc ]
  %values.sroa.9.0.i = phi float [ %call.i1164, %if.then.i ], [ %call3.i1165, %call3.i.noexc ]
  %values.sroa.0.0.i = phi float [ %call3.i1165, %if.then.i ], [ %call.i1164, %call3.i.noexc ]
  %cmp10.i = fcmp ogt float %values.sroa.0.0.i, %fneg.i
  %cmp14.i = fcmp olt float %values.sroa.9.0.i, %accurary
  %or.cond71.i = or i1 %cmp14.i, %cmp10.i
  br i1 %or.cond71.i, label %for.inc229, label %for.cond.preheader.i

for.cond.preheader.i:                             ; preds = %if.end.i
  %arrayidx11.i.i.i = getelementptr inbounds [4 x float], ptr %m_x145, i64 0, i64 2
  %arrayidx13.i.i.i = getelementptr inbounds [4 x float], ptr %m_x144, i64 0, i64 2
  br label %for.body.i

for.body.i:                                       ; preds = %for.inc.i, %for.cond.preheader.i
  %i.090.i = phi i32 [ 0, %for.cond.preheader.i ], [ %inc.i, %for.inc.i ]
  %values.sroa.0.189.i = phi float [ %values.sroa.0.0.i, %for.cond.preheader.i ], [ %call27.values.sroa.0.1.i, %for.inc.i ]
  %values.sroa.9.188.i = phi float [ %values.sroa.9.0.i, %for.cond.preheader.i ], [ %values.sroa.9.1.call27.i, %for.inc.i ]
  %span.sroa.0.187.i = phi float [ %span.sroa.0.0.i, %for.cond.preheader.i ], [ %.span.sroa.0.1.i, %for.inc.i ]
  %span.sroa.7.186.i = phi float [ %span.sroa.7.0.i, %for.cond.preheader.i ], [ %span.sroa.7.1..i, %for.inc.i ]
  %sub.i = fsub float %values.sroa.0.189.i, %values.sroa.9.188.i
  %div.i = fdiv float %values.sroa.0.189.i, %sub.i
  %sub.i.i = fsub float %span.sroa.7.186.i, %span.sroa.0.187.i
  %40 = call float @llvm.fmuladd.f32(float %sub.i.i, float %div.i, float %span.sroa.0.187.i)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp.i) #38
  %41 = load float, ptr %arrayidx11.i.i.i, align 4, !tbaa !137
  %42 = load float, ptr %arrayidx13.i.i.i, align 4, !tbaa !137
  %sub14.i.i.i = fsub float %41, %42
  %mul8.i.i.i = fmul float %40, %sub14.i.i.i
  %43 = load <2 x float>, ptr %m_x145, align 4, !tbaa !137
  %44 = load <2 x float>, ptr %m_x144, align 4, !tbaa !137
  %45 = fsub <2 x float> %43, %44
  %46 = insertelement <2 x float> poison, float %40, i64 0
  %47 = shufflevector <2 x float> %46, <2 x float> poison, <2 x i32> zeroinitializer
  %48 = fmul <2 x float> %47, %45
  %49 = fadd <2 x float> %44, %48
  %add14.i.i.i = fadd float %42, %mul8.i.i.i
  %retval.sroa.3.12.vec.insert.i20.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i.i, i64 0
  store <2 x float> %49, ptr %ref.tmp.i, align 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i20.i.i, ptr %25, align 8
  %vtable25.i = load ptr, ptr %ifn, align 8, !tbaa !5
  %50 = load ptr, ptr %vtable25.i, align 8
  %call27.i1166 = invoke noundef float %50(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp.i)
          to label %call27.i.noexc unwind label %lpad146.loopexit

call27.i.noexc:                                   ; preds = %for.body.i
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp.i) #38
  %cmp28.i = fcmp ole float %40, 0.000000e+00
  %cmp29.i = fcmp oge float %40, 1.000000e+00
  %or.cond.i = or i1 %cmp28.i, %cmp29.i
  br i1 %or.cond.i, label %for.inc229, label %if.end31.i

if.end31.i:                                       ; preds = %call27.i.noexc
  %51 = call float @llvm.fabs.f32(float %call27.i1166)
  %cmp33.i = fcmp olt float %51, %accurary
  br i1 %cmp33.i, label %invoke.cont147, label %for.inc.i

for.inc.i:                                        ; preds = %if.end31.i
  %cmp36.i = fcmp olt float %call27.i1166, 0.000000e+00
  %span.sroa.7.1..i = select i1 %cmp36.i, float %span.sroa.7.186.i, float %40
  %.span.sroa.0.1.i = select i1 %cmp36.i, float %40, float %span.sroa.0.187.i
  %values.sroa.9.1.call27.i = select i1 %cmp36.i, float %values.sroa.9.188.i, float %call27.i1166
  %call27.values.sroa.0.1.i = select i1 %cmp36.i, float %call27.i1166, float %values.sroa.0.189.i
  %inc.i = add nuw nsw i32 %i.090.i, 1
  %exitcond.not.i = icmp eq i32 %inc.i, 256
  br i1 %exitcond.not.i, label %for.inc229, label %for.body.i

invoke.cont147:                                   ; preds = %if.end31.i
  %cmp149 = fcmp ogt float %40, 0.000000e+00
  br i1 %cmp149, label %if.then150, label %for.inc229

if.then150:                                       ; preds = %invoke.cont147
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %x) #38
  %52 = load <2 x float>, ptr %m_x144, align 4, !tbaa !137
  %53 = load <2 x float>, ptr %m_x145, align 4, !tbaa !137
  %54 = fsub <2 x float> %53, %52
  %55 = fmul <2 x float> %47, %54
  %56 = fadd <2 x float> %52, %55
  %57 = load float, ptr %arrayidx13.i.i.i, align 4, !tbaa !137
  %58 = load float, ptr %arrayidx11.i.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %58, %57
  %mul8.i.i = fmul float %40, %sub14.i.i
  %add14.i.i = fadd float %57, %mul8.i.i
  %retval.sroa.3.12.vec.insert.i20.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i, i64 0
  store <2 x float> %56, ptr %x, align 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i20.i, ptr %26, align 8
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv1734, i32 3
  %m_v156 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv1731, i32 3
  %59 = load <2 x float>, ptr %m_v, align 4, !tbaa !137
  %60 = load <2 x float>, ptr %m_v156, align 4, !tbaa !137
  %61 = fsub <2 x float> %60, %59
  %62 = fmul <2 x float> %47, %61
  %63 = fadd <2 x float> %59, %62
  %arrayidx13.i.i1175 = getelementptr inbounds [4 x float], ptr %m_v, i64 0, i64 2
  %64 = load float, ptr %arrayidx13.i.i1175, align 4, !tbaa !137
  %arrayidx11.i.i1174 = getelementptr inbounds [4 x float], ptr %m_v156, i64 0, i64 2
  %65 = load float, ptr %arrayidx11.i.i1174, align 4, !tbaa !137
  %sub14.i.i1176 = fsub float %65, %64
  %mul8.i.i1179 = fmul float %40, %sub14.i.i1176
  %add14.i.i1182 = fadd float %64, %mul8.i.i1179
  %retval.sroa.3.12.vec.insert.i20.i1185 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i1182, i64 0
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv1734, i32 6
  %m_im163 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv1731, i32 6
  %66 = load float, ptr %m_im, align 8, !tbaa !175
  %cmp161 = fcmp ogt float %66, 0.000000e+00
  %67 = load float, ptr %m_im163, align 8, !tbaa !175
  %cmp164 = fcmp ogt float %67, 0.000000e+00
  br i1 %cmp161, label %if.then162, label %if.else193

if.then162:                                       ; preds = %if.then150
  br i1 %cmp164, label %if.then165, label %if.else

if.then165:                                       ; preds = %if.then162
  %68 = insertelement <2 x float> poison, float %67, i64 0
  %69 = insertelement <2 x float> %68, float %66, i64 1
  %70 = fdiv <2 x float> <float 1.000000e+00, float 1.000000e+00>, %69
  %71 = extractelement <2 x float> %70, i64 0
  %72 = extractelement <2 x float> %70, i64 1
  %sub.i1188 = fsub float %71, %72
  %73 = call float @llvm.fmuladd.f32(float %sub.i1188, float %40, float %72)
  %add173 = fadd float %72, %71
  %add175 = fadd float %add173, %73
  %div176 = fdiv float %add173, %add175
  %mul = fmul float %72, %div176
  %div177 = fdiv float 1.000000e+00, %mul
  store float %div177, ptr %m_im, align 8, !tbaa !175
  %mul179 = fmul float %71, %div176
  %div180 = fdiv float 1.000000e+00, %mul179
  store float %div180, ptr %m_im163, align 8, !tbaa !175
  %mul182 = fmul float %73, %div176
  br label %if.end205

lpad146.loopexit:                                 ; preds = %for.body.i
  %lpad.loopexit = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup225

lpad146.loopexit.split-lp:                        ; preds = %if.then135, %call.i.noexc
  %lpad.loopexit.split-lp = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup225

if.else:                                          ; preds = %if.then162
  %conv189 = fmul float %66, 2.000000e+00
  store float %conv189, ptr %m_im, align 8, !tbaa !175
  %div191 = fdiv float 1.000000e+00, %conv189
  br label %if.end205

if.else193:                                       ; preds = %if.then150
  br i1 %cmp164, label %if.then196, label %if.end205

if.then196:                                       ; preds = %if.else193
  %conv200 = fmul float %67, 2.000000e+00
  store float %conv200, ptr %m_im163, align 8, !tbaa !175
  %div202 = fdiv float 1.000000e+00, %conv200
  br label %if.end205

if.end205:                                        ; preds = %if.else193, %if.then196, %if.then165, %if.else
  %m.0 = phi float [ %mul182, %if.then165 ], [ %div191, %if.else ], [ %div202, %if.then196 ], [ 0.000000e+00, %if.else193 ]
  invoke void @_ZN10btSoftBody10appendNodeERK9btVector3f(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(16) %x, float noundef %m.0)
          to label %invoke.cont212 unwind label %lpad206

invoke.cont212:                                   ; preds = %if.end205
  %74 = load ptr, ptr %m_data.i.i1154, align 8, !tbaa !131
  %arrayidx.i.i1198 = getelementptr inbounds i32, ptr %74, i64 %idxprom.i.i1155
  %75 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %sub211 = add nsw i32 %75, -1
  store i32 %sub211, ptr %arrayidx.i.i1198, align 4, !tbaa !140
  %76 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1209 = sext i32 %sub211 to i64
  %m_v219 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %76, i64 %idxprom.i1209, i32 3
  store <2 x float> %63, ptr %m_v219, align 8, !tbaa.struct !163
  %v.sroa.5.0.m_v219.sroa_idx = getelementptr inbounds i8, ptr %m_v219, i64 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i20.i1185, ptr %v.sroa.5.0.m_v219.sroa_idx, align 8, !tbaa.struct !165
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %x) #38
  br label %for.inc229

lpad206:                                          ; preds = %if.end205
  %77 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %x) #38
  br label %ehcleanup225

ehcleanup225:                                     ; preds = %lpad146.loopexit, %lpad146.loopexit.split-lp, %lpad206
  %.pn1647 = phi { ptr, i32 } [ %77, %lpad206 ], [ %lpad.loopexit, %lpad146.loopexit ], [ %lpad.loopexit.split-lp, %lpad146.loopexit.split-lp ]
  %exn.slot.3 = extractvalue { ptr, i32 } %.pn1647, 0
  %ehselector.slot.3 = extractvalue { ptr, i32 } %.pn1647, 1
  br label %ehcleanup894

for.inc229:                                       ; preds = %for.inc.i, %call27.i.noexc, %if.end.i, %invoke.cont147, %invoke.cont212, %invoke.cont132
  %indvars.iv.next1732 = add nuw nsw i64 %indvars.iv1731, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next1732, %wide.trip.count1737
  br i1 %exitcond.not, label %for.cond126.loopexit, label %invoke.cont132

for.end234:                                       ; preds = %for.cond126.loopexit, %for.cond126.preheader
  %78 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %79 = load i32, ptr %m_size.i1103, align 4, !tbaa !92
  %cmp2421696 = icmp sgt i32 %79, 0
  br i1 %cmp2421696, label %for.body243.lr.ph, label %for.cond324.preheader

for.body243.lr.ph:                                ; preds = %for.end234
  %m_data.i1213 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %sub.ptr.rhs.cast251 = ptrtoint ptr %78 to i64
  %m_data.i.i1222 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %edges, i64 0, i32 5
  %wide.trip.count1742 = zext i32 %79 to i64
  br label %for.body243

for.cond324.preheader:                            ; preds = %if.end318, %for.end234
  %80 = load i32, ptr %m_size.i1117, align 4, !tbaa !96
  %cmp3281700 = icmp sgt i32 %80, 0
  br i1 %cmp3281700, label %for.body329.lr.ph, label %for.end458

for.body329.lr.ph:                                ; preds = %for.cond324.preheader
  %m_data.i1245 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %sub.ptr.rhs.cast340 = ptrtoint ptr %78 to i64
  %arrayinit.element344 = getelementptr inbounds i32, ptr %idx335, i64 1
  %arrayinit.element352 = getelementptr inbounds i32, ptr %idx335, i64 2
  %m_data.i.i1254 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %edges, i64 0, i32 5
  %m_data.i6.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %m_capacity.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 3
  %m_ownsMemory.i.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 6
  %m_capacity.i.i.i1561 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 3
  %m_data.i.i.i.i1577 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %m_ownsMemory.i.i.i.i1588 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 6
  %m_bUpdateRtCst.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  br label %for.body329

for.body243:                                      ; preds = %for.body243.lr.ph, %if.end318
  %indvars.iv1739 = phi i64 [ 0, %for.body243.lr.ph ], [ %indvars.iv.next1740, %if.end318 ]
  %81 = load ptr, ptr %m_data.i1213, align 8, !tbaa !91
  %m_n248 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %81, i64 %indvars.iv1739, i32 1
  %82 = load ptr, ptr %m_n248, align 8, !tbaa !219
  %sub.ptr.lhs.cast250 = ptrtoint ptr %82 to i64
  %sub.ptr.sub252 = sub i64 %sub.ptr.lhs.cast250, %sub.ptr.rhs.cast251
  %sub.ptr.div253 = sdiv exact i64 %sub.ptr.sub252, 120
  %conv254 = trunc i64 %sub.ptr.div253 to i32
  %arrayidx256 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %81, i64 %indvars.iv1739, i32 1, i64 1
  %83 = load ptr, ptr %arrayidx256, align 8, !tbaa !219
  %sub.ptr.lhs.cast257 = ptrtoint ptr %83 to i64
  %sub.ptr.sub259 = sub i64 %sub.ptr.lhs.cast257, %sub.ptr.rhs.cast251
  %sub.ptr.div260 = sdiv exact i64 %sub.ptr.sub259, 120
  %conv261 = trunc i64 %sub.ptr.div260 to i32
  %cmp263 = icmp sgt i32 %1, %conv254
  %cmp265 = icmp sgt i32 %1, %conv261
  %or.cond = select i1 %cmp263, i1 %cmp265, i1 false
  br i1 %or.cond, label %invoke.cont271, label %if.end318

invoke.cont271:                                   ; preds = %for.body243
  %84 = load ptr, ptr %m_data.i.i1222, align 8, !tbaa !131
  %spec.select6.i.i1217 = call i32 @llvm.smax.i32(i32 %conv254, i32 %conv261)
  %add.i.i1218 = add nsw i32 %spec.select6.i.i1217, 1
  %mul.i.i1219 = mul nsw i32 %add.i.i1218, %spec.select6.i.i1217
  %div.i.i1220 = sdiv i32 %mul.i.i1219, 2
  %spec.select.i.i1216 = call i32 @llvm.smin.i32(i32 %conv254, i32 %conv261)
  %add2.i.i1221 = add nsw i32 %div.i.i1220, %spec.select.i.i1216
  %idxprom.i.i1223 = sext i32 %add2.i.i1221 to i64
  %arrayidx.i.i1224 = getelementptr inbounds i32, ptr %84, i64 %idxprom.i.i1223
  %85 = load i32, ptr %arrayidx.i.i1224, align 4, !tbaa !140
  %cmp273 = icmp sgt i32 %85, 0
  br i1 %cmp273, label %if.then274, label %if.end318

if.then274:                                       ; preds = %invoke.cont271
  %86 = trunc i64 %indvars.iv1739 to i32
  invoke void @_ZN10btSoftBody10appendLinkEiPNS_8MaterialE(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %86, ptr noundef null)
          to label %invoke.cont275 unwind label %lpad270

invoke.cont275:                                   ; preds = %if.then274
  %87 = load ptr, ptr %m_data.i1213, align 8, !tbaa !91
  %88 = load i32, ptr %m_size.i1103, align 4, !tbaa !92
  %sub286 = add nsw i32 %88, -1
  %idxprom.i1230 = sext i32 %sub286 to i64
  %89 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %sext1644 = shl i64 %sub.ptr.div253, 32
  %idxprom.i1233 = ashr exact i64 %sext1644, 32
  %arrayidx.i1234 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %89, i64 %idxprom.i1233
  %m_n294 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %87, i64 %indvars.iv1739, i32 1
  store ptr %arrayidx.i1234, ptr %m_n294, align 8, !tbaa !219
  %90 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1236 = zext i32 %85 to i64
  %arrayidx.i1237 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %90, i64 %idxprom.i1236
  %arrayidx301 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %87, i64 %indvars.iv1739, i32 1, i64 1
  store ptr %arrayidx.i1237, ptr %arrayidx301, align 8, !tbaa !219
  %91 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %arrayidx.i1240 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %91, i64 %idxprom.i1236
  %m_n306 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %87, i64 %idxprom.i1230, i32 1
  store ptr %arrayidx.i1240, ptr %m_n306, align 8, !tbaa !219
  %92 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %sext1645 = shl i64 %sub.ptr.div260, 32
  %idxprom.i1242 = ashr exact i64 %sext1645, 32
  %arrayidx.i1243 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %92, i64 %idxprom.i1242
  %arrayidx314 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %87, i64 %idxprom.i1230, i32 1, i64 1
  store ptr %arrayidx.i1243, ptr %arrayidx314, align 8, !tbaa !219
  br label %if.end318

lpad270:                                          ; preds = %if.then274
  %93 = landingpad { ptr, i32 }
          cleanup
  %94 = extractvalue { ptr, i32 } %93, 0
  %95 = extractvalue { ptr, i32 } %93, 1
  br label %ehcleanup894

if.end318:                                        ; preds = %invoke.cont271, %invoke.cont275, %for.body243
  %indvars.iv.next1740 = add nuw nsw i64 %indvars.iv1739, 1
  %exitcond1743.not = icmp eq i64 %indvars.iv.next1740, %wide.trip.count1742
  br i1 %exitcond1743.not, label %for.cond324.preheader, label %for.body243

for.body329:                                      ; preds = %for.body329.lr.ph, %for.end453
  %96 = phi i32 [ %80, %for.body329.lr.ph ], [ %167, %for.end453 ]
  %i.61701 = phi i32 [ 0, %for.body329.lr.ph ], [ %inc457, %for.end453 ]
  %97 = load ptr, ptr %m_data.i1245, align 8, !tbaa !95
  %idxprom.i1246 = sext i32 %i.61701 to i64
  call void @llvm.lifetime.start.p0(i64 12, ptr nonnull %idx335) #38
  %m_n337 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %97, i64 %idxprom.i1246, i32 1
  %98 = load ptr, ptr %m_n337, align 8, !tbaa !219
  %sub.ptr.lhs.cast339 = ptrtoint ptr %98 to i64
  %sub.ptr.sub341 = sub i64 %sub.ptr.lhs.cast339, %sub.ptr.rhs.cast340
  %sub.ptr.div342 = sdiv exact i64 %sub.ptr.sub341, 120
  %conv343 = trunc i64 %sub.ptr.div342 to i32
  store i32 %conv343, ptr %idx335, align 4, !tbaa !140
  %arrayidx346 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %97, i64 %idxprom.i1246, i32 1, i64 1
  %99 = load ptr, ptr %arrayidx346, align 8, !tbaa !219
  %sub.ptr.lhs.cast347 = ptrtoint ptr %99 to i64
  %sub.ptr.sub349 = sub i64 %sub.ptr.lhs.cast347, %sub.ptr.rhs.cast340
  %sub.ptr.div350 = sdiv exact i64 %sub.ptr.sub349, 120
  %conv351 = trunc i64 %sub.ptr.div350 to i32
  store i32 %conv351, ptr %arrayinit.element344, align 4, !tbaa !140
  %arrayidx354 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %97, i64 %idxprom.i1246, i32 1, i64 2
  %100 = load ptr, ptr %arrayidx354, align 8, !tbaa !219
  %sub.ptr.lhs.cast355 = ptrtoint ptr %100 to i64
  %sub.ptr.sub357 = sub i64 %sub.ptr.lhs.cast355, %sub.ptr.rhs.cast340
  %sub.ptr.div358 = sdiv exact i64 %sub.ptr.sub357, 120
  %conv359 = trunc i64 %sub.ptr.div358 to i32
  store i32 %conv359, ptr %arrayinit.element352, align 4, !tbaa !140
  %101 = load ptr, ptr %m_data.i.i1254, align 8
  %cmp364 = icmp sgt i32 %1, %conv359
  %cmp368 = icmp sgt i32 %1, %conv343
  %or.cond1804 = select i1 %cmp364, i1 %cmp368, i1 false
  br i1 %or.cond1804, label %invoke.cont376, label %for.inc451

invoke.cont376:                                   ; preds = %for.body329
  %spec.select6.i.i1249 = call i32 @llvm.smax.i32(i32 %conv359, i32 %conv343)
  %add.i.i1250 = add nsw i32 %spec.select6.i.i1249, 1
  %mul.i.i1251 = mul nsw i32 %add.i.i1250, %spec.select6.i.i1249
  %div.i.i1252 = sdiv i32 %mul.i.i1251, 2
  %spec.select.i.i1248 = call i32 @llvm.smin.i32(i32 %conv359, i32 %conv343)
  %add2.i.i1253 = add nsw i32 %div.i.i1252, %spec.select.i.i1248
  %idxprom.i.i1255 = sext i32 %add2.i.i1253 to i64
  %arrayidx.i.i1256 = getelementptr inbounds i32, ptr %101, i64 %idxprom.i.i1255
  %102 = load i32, ptr %arrayidx.i.i1256, align 4, !tbaa !140
  %cmp378 = icmp sgt i32 %102, 0
  br i1 %cmp378, label %if.then379, label %for.inc451

if.then379:                                       ; preds = %invoke.cont376.2, %invoke.cont376.1, %invoke.cont376
  %k.01698.lcssa.wide = phi i64 [ 0, %invoke.cont376 ], [ 1, %invoke.cont376.1 ], [ 2, %invoke.cont376.2 ]
  %idxprom.lcssa = phi i64 [ 2, %invoke.cont376 ], [ 0, %invoke.cont376.1 ], [ 1, %invoke.cont376.2 ]
  %.lcssa = phi i32 [ %102, %invoke.cont376 ], [ %165, %invoke.cont376.1 ], [ %166, %invoke.cont376.2 ]
  %103 = trunc i64 %k.01698.lcssa.wide to i32
  %arrayidx363.le = getelementptr inbounds [3 x i32], ptr %idx335, i64 0, i64 %idxprom.lcssa
  %arrayidx367.le = getelementptr inbounds [3 x i32], ptr %idx335, i64 0, i64 %k.01698.lcssa.wide
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %f.sroa.7.i)
  %cmp.i1257 = icmp sgt i32 %i.61701, -1
  br i1 %cmp.i1257, label %if.then.i1261, label %if.else.i

if.then.i1261:                                    ; preds = %if.then379
  %idxprom.i.i1259 = zext i32 %i.61701 to i64
  %arrayidx.i.i1260 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %97, i64 %idxprom.i.i1259
  %104 = load <2 x ptr>, ptr %arrayidx.i.i1260, align 8
  %f.sroa.7.0.arrayidx.i.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i.i1260, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.i, ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.0.arrayidx.i.sroa_idx.i, i64 56, i1 false)
  br label %if.end.i1262

if.else.i:                                        ; preds = %if.then379
  %105 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i.i = icmp eq i8 %105, 0
  br i1 %guard.uninitialized.i.i, label %init.check.i.i, label %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit.i, !prof !173

init.check.i.i:                                   ; preds = %if.else.i
  %106 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy) #38
  %tobool.not.i.i = icmp eq i32 %106, 0
  br i1 %tobool.not.i.i, label %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit.i, label %init.i.i

init.i.i:                                         ; preds = %init.check.i.i
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy, align 8, !tbaa !174
  %107 = call ptr @llvm.invariant.start.p0(i64 72, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy)
  call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit.i

_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit.i: ; preds = %init.i.i, %init.check.i.i, %if.else.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.i, ptr noundef nonnull align 8 dereferenceable(56) getelementptr inbounds (%"struct.btSoftBody::Face", ptr @_ZZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy, i64 0, i32 1, i64 0), i64 56, i1 false)
  %108 = load ptr, ptr %m_data.i6.i, align 8, !tbaa !119
  %f.sroa.0.0.copyload10.i = load ptr, ptr @_ZZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_E9zerodummy, align 8
  %109 = load ptr, ptr %108, align 8, !tbaa !219
  %.pre1787 = load i32, ptr %m_size.i1117, align 4, !tbaa !96
  %110 = insertelement <2 x ptr> poison, ptr %f.sroa.0.0.copyload10.i, i64 0
  %111 = insertelement <2 x ptr> %110, ptr %109, i64 1
  br label %if.end.i1262

if.end.i1262:                                     ; preds = %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit.i, %if.then.i1261
  %112 = phi i32 [ %96, %if.then.i1261 ], [ %.pre1787, %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit.i ]
  %113 = phi <2 x ptr> [ %104, %if.then.i1261 ], [ %111, %_ZL14ZeroInitializeIN10btSoftBody4FaceEEvRT_.exit.i ]
  %114 = load i32, ptr %m_capacity.i.i.i, align 8, !tbaa !97
  %cmp.i.i = icmp eq i32 %112, %114
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN10btSoftBody10appendFaceEiPNS_8MaterialE.exit

if.then.i.i:                                      ; preds = %if.end.i1262
  %tobool.not.i.i.i = icmp eq i32 %112, 0
  %mul.i.i.i1263 = shl nsw i32 %112, 1
  %cond.i.i.i = select i1 %tobool.not.i.i.i, i32 1, i32 %mul.i.i.i1263
  %cmp.i.i.i = icmp slt i32 %112, %cond.i.i.i
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN10btSoftBody10appendFaceEiPNS_8MaterialE.exit

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %tobool.not.i.i.i.i = icmp eq i32 %cond.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.then.i.i.i
  %conv.i.i.i.i.i = sext i32 %cond.i.i.i to i64
  %mul.i.i.i.i.i = mul nsw i64 %conv.i.i.i.i.i, 72
  %call.i.i.i.i.i1264 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i.i, i32 noundef 16)
          to label %call.i.i.i.i.i.noexc unwind label %lpad375

call.i.i.i.i.i.noexc:                             ; preds = %if.then.i.i.i.i
  %.pre.i.i = load i32, ptr %m_size.i1117, align 4, !tbaa !96
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i: ; preds = %call.i.i.i.i.i.noexc, %if.then.i.i.i
  %115 = phi i32 [ %.pre.i.i, %call.i.i.i.i.i.noexc ], [ %112, %if.then.i.i.i ]
  %retval.0.i.i.i.i = phi ptr [ %call.i.i.i.i.i1264, %call.i.i.i.i.i.noexc ], [ null, %if.then.i.i.i ]
  %cmp7.i.i.i.i = icmp sgt i32 %115, 0
  br i1 %cmp7.i.i.i.i, label %for.body.lr.ph.i.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i

for.body.lr.ph.i.i.i.i:                           ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i
  %wide.trip.count.i.i.i.i = zext i32 %115 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i.i, 1
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.i.new

for.body.lr.ph.i.i.i.i.new:                       ; preds = %for.body.lr.ph.i.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i.i, 4294967294
  br label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i, %for.body.lr.ph.i.i.i.i.new
  %indvars.iv.i.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.i.new ], [ %indvars.iv.next.i.i.i.i.1, %for.body.i.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.i.new ], [ %niter.next.1, %for.body.i.i.i.i ]
  %arrayidx.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %retval.0.i.i.i.i, i64 %indvars.iv.i.i.i.i
  %117 = load ptr, ptr %m_data.i1245, align 8, !tbaa !95
  %arrayidx3.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %117, i64 %indvars.iv.i.i.i.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i = or i64 %indvars.iv.i.i.i.i, 1
  %arrayidx.i.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %retval.0.i.i.i.i, i64 %indvars.iv.next.i.i.i.i
  %118 = load ptr, ptr %m_data.i1245, align 8, !tbaa !95
  %arrayidx3.i.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %118, i64 %indvars.iv.next.i.i.i.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i.1, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.i.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i.i, %for.body.lr.ph.i.i.i.i
  %indvars.iv.i.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i.i ], [ %indvars.iv.next.i.i.i.i.1, %for.body.i.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i, label %for.body.i.i.i.i.epil

for.body.i.i.i.i.epil:                            ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Face", ptr %retval.0.i.i.i.i, i64 %indvars.iv.i.i.i.i.unr
  %119 = load ptr, ptr %m_data.i1245, align 8, !tbaa !95
  %arrayidx3.i.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Face", ptr %119, i64 %indvars.iv.i.i.i.i.unr
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i.epil, i64 72, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i: ; preds = %for.body.i.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i
  %120 = load ptr, ptr %m_data.i1245, align 8, !tbaa !95
  %tobool.not.i10.i.i.i = icmp eq ptr %120, null
  %121 = load i8, ptr %m_ownsMemory.i.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i = icmp eq i8 %121, 0
  %or.cond.i.i.i = select i1 %tobool.not.i10.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i
  br i1 %or.cond.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i, label %if.then3.i.i.i.i

if.then3.i.i.i.i:                                 ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %120)
          to label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i unwind label %lpad375

_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i: ; preds = %if.then3.i.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i.i, align 8, !tbaa !94
  store ptr %retval.0.i.i.i.i, ptr %m_data.i1245, align 8, !tbaa !95
  store i32 %cond.i.i.i, ptr %m_capacity.i.i.i, align 8, !tbaa !97
  %.pre7.i.i = load i32, ptr %m_size.i1117, align 4, !tbaa !96
  br label %_ZN10btSoftBody10appendFaceEiPNS_8MaterialE.exit

_ZN10btSoftBody10appendFaceEiPNS_8MaterialE.exit: ; preds = %if.end.i1262, %if.then.i.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i
  %122 = phi i32 [ %.pre7.i.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i ], [ %112, %if.then.i.i ], [ %112, %if.end.i1262 ]
  %123 = load ptr, ptr %m_data.i1245, align 8, !tbaa !95
  %idxprom.i8.i = sext i32 %122 to i64
  %arrayidx.i9.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %123, i64 %idxprom.i8.i
  store <2 x ptr> %113, ptr %arrayidx.i9.i, align 8
  %f.sroa.7.0.arrayidx.i9.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i9.i, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.0.arrayidx.i9.sroa_idx.i, ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.i, i64 56, i1 false)
  %124 = load i32, ptr %m_size.i1117, align 4, !tbaa !96
  %inc.i.i = add nsw i32 %124, 1
  store i32 %inc.i.i, ptr %m_size.i1117, align 4, !tbaa !96
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %f.sroa.7.i)
  %add382 = add nuw nsw i32 %103, 1
  %rem = urem i32 %add382, 3
  %125 = load ptr, ptr %m_data.i1245, align 8, !tbaa !95
  %idxprom.i1270 = sext i32 %124 to i64
  %idxprom398 = zext i32 %rem to i64
  %arrayidx399 = getelementptr inbounds [3 x i32], ptr %idx335, i64 0, i64 %idxprom398
  %126 = load i32, ptr %arrayidx399, align 4, !tbaa !140
  %127 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1273 = sext i32 %126 to i64
  %arrayidx.i1274 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %127, i64 %idxprom.i1273
  %m_n403 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %125, i64 %idxprom.i1246, i32 1
  store ptr %arrayidx.i1274, ptr %m_n403, align 8, !tbaa !219
  %128 = load i32, ptr %arrayidx363.le, align 4, !tbaa !140
  %129 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1276 = sext i32 %128 to i64
  %arrayidx.i1277 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %129, i64 %idxprom.i1276
  %arrayidx412 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %125, i64 %idxprom.i1246, i32 1, i64 1
  store ptr %arrayidx.i1277, ptr %arrayidx412, align 8, !tbaa !219
  %130 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1279 = sext i32 %.lcssa to i64
  %arrayidx.i1280 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %130, i64 %idxprom.i1279
  %arrayidx418 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %125, i64 %idxprom.i1246, i32 1, i64 2
  store ptr %arrayidx.i1280, ptr %arrayidx418, align 8, !tbaa !219
  %131 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %arrayidx.i1283 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %131, i64 %idxprom.i1279
  %m_n423 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %125, i64 %idxprom.i1270, i32 1
  store ptr %arrayidx.i1283, ptr %m_n423, align 8, !tbaa !219
  %132 = load i32, ptr %arrayidx367.le, align 4, !tbaa !140
  %133 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1285 = sext i32 %132 to i64
  %arrayidx.i1286 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %133, i64 %idxprom.i1285
  %arrayidx432 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %125, i64 %idxprom.i1270, i32 1, i64 1
  store ptr %arrayidx.i1286, ptr %arrayidx432, align 8, !tbaa !219
  %134 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %arrayidx.i1289 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %134, i64 %idxprom.i1273
  %arrayidx440 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %125, i64 %idxprom.i1270, i32 1, i64 2
  store ptr %arrayidx.i1289, ptr %arrayidx440, align 8, !tbaa !219
  %m_material = getelementptr inbounds %"struct.btSoftBody::Face", ptr %125, i64 %idxprom.i1246, i32 0, i32 1
  %135 = load ptr, ptr %m_material, align 8, !tbaa !184
  %136 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %arrayidx.i.i1292 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %136, i64 %idxprom.i1279
  %arrayidx.i6.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %136, i64 %idxprom.i1273
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %l.sroa.7.i)
  %137 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i.i1554 = icmp eq i8 %137, 0
  br i1 %guard.uninitialized.i.i1554, label %init.check.i.i1557, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i, !prof !173

init.check.i.i1557:                               ; preds = %_ZN10btSoftBody10appendFaceEiPNS_8MaterialE.exit
  %138 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  %tobool.not.i.i1556 = icmp eq i32 %138, 0
  br i1 %tobool.not.i.i1556, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i, label %init.i.i1558

init.i.i1558:                                     ; preds = %init.check.i.i1557
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8, !tbaa !174
  %139 = call ptr @llvm.invariant.start.p0(i64 72, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy)
  call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i

_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i: ; preds = %init.i.i1558, %init.check.i.i1557, %_ZN10btSoftBody10appendFaceEiPNS_8MaterialE.exit
  %l.sroa.0.0.copyload11.i = load ptr, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(52) %l.sroa.7.i, ptr noundef nonnull align 8 dereferenceable(52) getelementptr inbounds (%"struct.btSoftBody::Link", ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, i64 0, i32 1, i64 0), i64 52, i1 false)
  %tobool.not.i = icmp eq ptr %135, null
  br i1 %tobool.not.i, label %cond.false.i, label %if.end.i1563

cond.false.i:                                     ; preds = %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i
  %140 = load ptr, ptr %m_data.i6.i, align 8, !tbaa !119
  %141 = load ptr, ptr %140, align 8, !tbaa !219
  br label %if.end.i1563

if.end.i1563:                                     ; preds = %cond.false.i, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i
  %l.sroa.6.0.i = phi ptr [ %141, %cond.false.i ], [ %135, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i ]
  %142 = load i32, ptr %m_size.i1103, align 4, !tbaa !92
  %143 = load i32, ptr %m_capacity.i.i.i1561, align 8, !tbaa !93
  %cmp.i.i1562 = icmp eq i32 %142, %143
  br i1 %cmp.i.i1562, label %if.then.i.i1568, label %cleanup

if.then.i.i1568:                                  ; preds = %if.end.i1563
  %tobool.not.i.i.i1564 = icmp eq i32 %142, 0
  %mul.i.i.i1565 = shl nsw i32 %142, 1
  %cond.i.i.i1566 = select i1 %tobool.not.i.i.i1564, i32 1, i32 %mul.i.i.i1565
  %cmp.i.i.i1567 = icmp slt i32 %142, %cond.i.i.i1566
  br i1 %cmp.i.i.i1567, label %if.then.i.i.i1570, label %cleanup

if.then.i.i.i1570:                                ; preds = %if.then.i.i1568
  %tobool.not.i.i.i.i1569 = icmp eq i32 %cond.i.i.i1566, 0
  br i1 %tobool.not.i.i.i.i1569, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i, label %if.then.i.i.i.i1574

if.then.i.i.i.i1574:                              ; preds = %if.then.i.i.i1570
  %conv.i.i.i.i.i1571 = sext i32 %cond.i.i.i1566 to i64
  %mul.i.i.i.i.i1572 = mul nsw i64 %conv.i.i.i.i.i1571, 72
  %call.i.i.i.i.i1598 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i.i1572, i32 noundef 16)
          to label %call.i.i.i.i.i.noexc1597 unwind label %lpad386

call.i.i.i.i.i.noexc1597:                         ; preds = %if.then.i.i.i.i1574
  %.pre.i.i1573 = load i32, ptr %m_size.i1103, align 4, !tbaa !92
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i: ; preds = %call.i.i.i.i.i.noexc1597, %if.then.i.i.i1570
  %144 = phi i32 [ %.pre.i.i1573, %call.i.i.i.i.i.noexc1597 ], [ %142, %if.then.i.i.i1570 ]
  %retval.0.i.i.i.i1575 = phi ptr [ %call.i.i.i.i.i1598, %call.i.i.i.i.i.noexc1597 ], [ null, %if.then.i.i.i1570 ]
  %cmp7.i.i.i.i1576 = icmp sgt i32 %144, 0
  br i1 %cmp7.i.i.i.i1576, label %for.body.lr.ph.i.i.i.i1579, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i

for.body.lr.ph.i.i.i.i1579:                       ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i
  %wide.trip.count.i.i.i.i1578 = zext i32 %144 to i64
  %xtraiter1817 = and i64 %wide.trip.count.i.i.i.i1578, 1
  %145 = icmp eq i32 %144, 1
  br i1 %145, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.i1579.new

for.body.lr.ph.i.i.i.i1579.new:                   ; preds = %for.body.lr.ph.i.i.i.i1579
  %unroll_iter1819 = and i64 %wide.trip.count.i.i.i.i1578, 4294967294
  br label %for.body.i.i.i.i1585

for.body.i.i.i.i1585:                             ; preds = %for.body.i.i.i.i1585, %for.body.lr.ph.i.i.i.i1579.new
  %indvars.iv.i.i.i.i1580 = phi i64 [ 0, %for.body.lr.ph.i.i.i.i1579.new ], [ %indvars.iv.next.i.i.i.i1583.1, %for.body.i.i.i.i1585 ]
  %niter1820 = phi i64 [ 0, %for.body.lr.ph.i.i.i.i1579.new ], [ %niter1820.next.1, %for.body.i.i.i.i1585 ]
  %arrayidx.i.i.i.i1581 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i1575, i64 %indvars.iv.i.i.i.i1580
  %146 = load ptr, ptr %m_data.i.i.i.i1577, align 8, !tbaa !91
  %arrayidx3.i.i.i.i1582 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %146, i64 %indvars.iv.i.i.i.i1580
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i1581, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i1582, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i1583 = or i64 %indvars.iv.i.i.i.i1580, 1
  %arrayidx.i.i.i.i1581.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i1575, i64 %indvars.iv.next.i.i.i.i1583
  %147 = load ptr, ptr %m_data.i.i.i.i1577, align 8, !tbaa !91
  %arrayidx3.i.i.i.i1582.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %147, i64 %indvars.iv.next.i.i.i.i1583
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i1581.1, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i1582.1, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i1583.1 = add nuw nsw i64 %indvars.iv.i.i.i.i1580, 2
  %niter1820.next.1 = add i64 %niter1820, 2
  %niter1820.ncmp.1 = icmp eq i64 %niter1820.next.1, %unroll_iter1819
  br i1 %niter1820.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.i.i.i.i1585

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i.i1585, %for.body.lr.ph.i.i.i.i1579
  %indvars.iv.i.i.i.i1580.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i.i1579 ], [ %indvars.iv.next.i.i.i.i1583.1, %for.body.i.i.i.i1585 ]
  %lcmp.mod1818.not = icmp eq i64 %xtraiter1817, 0
  br i1 %lcmp.mod1818.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i, label %for.body.i.i.i.i1585.epil

for.body.i.i.i.i1585.epil:                        ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.i1581.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i1575, i64 %indvars.iv.i.i.i.i1580.unr
  %148 = load ptr, ptr %m_data.i.i.i.i1577, align 8, !tbaa !91
  %arrayidx3.i.i.i.i1582.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %148, i64 %indvars.iv.i.i.i.i1580.unr
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i1581.epil, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i1582.epil, i64 72, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i: ; preds = %for.body.i.i.i.i1585.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i
  %149 = load ptr, ptr %m_data.i.i.i.i1577, align 8, !tbaa !91
  %tobool.not.i10.i.i.i1587 = icmp eq ptr %149, null
  %150 = load i8, ptr %m_ownsMemory.i.i.i.i1588, align 8, !range !159
  %tobool2.not.i.i.i.i1589 = icmp eq i8 %150, 0
  %or.cond.i.i.i1590 = select i1 %tobool.not.i10.i.i.i1587, i1 true, i1 %tobool2.not.i.i.i.i1589
  br i1 %or.cond.i.i.i1590, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i, label %if.then3.i.i.i.i1591

if.then3.i.i.i.i1591:                             ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %149)
          to label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i unwind label %lpad386

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i: ; preds = %if.then3.i.i.i.i1591, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i.i1588, align 8, !tbaa !90
  store ptr %retval.0.i.i.i.i1575, ptr %m_data.i.i.i.i1577, align 8, !tbaa !91
  store i32 %cond.i.i.i1566, ptr %m_capacity.i.i.i1561, align 8, !tbaa !93
  %.pre7.i.i1592 = load i32, ptr %m_size.i1103, align 4, !tbaa !92
  br label %cleanup

lpad375:                                          ; preds = %if.then3.i.i.i.i, %if.then.i.i.i.i
  %151 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup449

lpad386:                                          ; preds = %if.then3.i.i.i.i1591, %if.then.i.i.i.i1574
  %152 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup449

cleanup:                                          ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i, %if.then.i.i1568, %if.end.i1563
  %153 = phi i32 [ %.pre7.i.i1592, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i ], [ %142, %if.then.i.i1568 ], [ %142, %if.end.i1563 ]
  %154 = load ptr, ptr %m_data.i.i.i.i1577, align 8, !tbaa !91
  %idxprom.i8.i1594 = sext i32 %153 to i64
  %arrayidx.i9.i1595 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %154, i64 %idxprom.i8.i1594
  store ptr %l.sroa.0.0.copyload11.i, ptr %arrayidx.i9.i1595, align 8
  %l.sroa.6.0.arrayidx.i9.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i9.i1595, i64 8
  store ptr %l.sroa.6.0.i, ptr %l.sroa.6.0.arrayidx.i9.sroa_idx.i, align 8
  %l.sroa.7.0.arrayidx.i9.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i9.i1595, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7.0.arrayidx.i9.sroa_idx.i, ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7.i, i64 56, i1 false)
  %155 = load i32, ptr %m_size.i1103, align 4, !tbaa !92
  %inc.i.i1596 = add nsw i32 %155, 1
  store i32 %inc.i.i1596, ptr %m_size.i1103, align 4, !tbaa !92
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %l.sroa.7.i)
  %156 = load ptr, ptr %m_data.i.i.i.i1577, align 8, !tbaa !91
  %idxprom.i.i.i = sext i32 %155 to i64
  %m_n.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %156, i64 %idxprom.i.i.i, i32 1
  store ptr %arrayidx.i.i1292, ptr %m_n.i.i, align 8, !tbaa !219
  %arrayidx6.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %156, i64 %idxprom.i.i.i, i32 1, i64 1
  store ptr %arrayidx.i6.i, ptr %arrayidx6.i.i, align 8, !tbaa !219
  %m_x.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %136, i64 %idxprom.i1279, i32 1
  %m_x11.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %136, i64 %idxprom.i1273, i32 1
  %157 = load float, ptr %m_x.i.i, align 4, !tbaa !137
  %158 = load float, ptr %m_x11.i.i, align 4, !tbaa !137
  %sub.i.i.i1295 = fsub float %157, %158
  %arrayidx5.i.i.i1296 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %136, i64 %idxprom.i1279, i32 1, i32 0, i64 1
  %159 = load float, ptr %arrayidx5.i.i.i1296, align 4, !tbaa !137
  %arrayidx7.i20.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %136, i64 %idxprom.i1273, i32 1, i32 0, i64 1
  %160 = load float, ptr %arrayidx7.i20.i.i, align 4, !tbaa !137
  %sub8.i.i.i1297 = fsub float %159, %160
  %arrayidx11.i.i.i1298 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %136, i64 %idxprom.i1279, i32 1, i32 0, i64 2
  %161 = load float, ptr %arrayidx11.i.i.i1298, align 4, !tbaa !137
  %arrayidx13.i.i.i1299 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %136, i64 %idxprom.i1273, i32 1, i32 0, i64 2
  %162 = load float, ptr %arrayidx13.i.i.i1299, align 4, !tbaa !137
  %sub14.i.i.i1300 = fsub float %161, %162
  %mul8.i.i.i.i.i = fmul float %sub8.i.i.i1297, %sub8.i.i.i1297
  %163 = call float @llvm.fmuladd.f32(float %sub.i.i.i1295, float %sub.i.i.i1295, float %mul8.i.i.i.i.i)
  %164 = call float @llvm.fmuladd.f32(float %sub14.i.i.i1300, float %sub14.i.i.i1300, float %163)
  %sqrt.i.i.i = call float @llvm.sqrt.f32(float %164)
  %m_rl.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %156, i64 %idxprom.i.i.i, i32 2
  store float %sqrt.i.i.i, ptr %m_rl.i.i, align 8, !tbaa !239
  store i8 1, ptr %m_bUpdateRtCst.i.i, align 4, !tbaa !147
  %dec445 = add nsw i32 %i.61701, -1
  %.pre1788 = load i32, ptr %m_size.i1117, align 4, !tbaa !96
  br label %for.end453

ehcleanup449:                                     ; preds = %lpad386, %lpad375
  %.pn1642 = phi { ptr, i32 } [ %152, %lpad386 ], [ %151, %lpad375 ]
  %exn.slot.4 = extractvalue { ptr, i32 } %.pn1642, 0
  %ehselector.slot.4 = extractvalue { ptr, i32 } %.pn1642, 1
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %idx335) #38
  br label %ehcleanup894

for.inc451:                                       ; preds = %invoke.cont376, %for.body329
  %cmp364.1 = icmp sgt i32 %1, %conv343
  %cmp368.1 = icmp sgt i32 %1, %conv351
  %or.cond1805 = select i1 %cmp364.1, i1 %cmp368.1, i1 false
  br i1 %or.cond1805, label %invoke.cont376.1, label %for.inc451.1

invoke.cont376.1:                                 ; preds = %for.inc451
  %spec.select6.i.i1249.1 = call i32 @llvm.smax.i32(i32 %conv343, i32 %conv351)
  %add.i.i1250.1 = add nsw i32 %spec.select6.i.i1249.1, 1
  %mul.i.i1251.1 = mul nsw i32 %add.i.i1250.1, %spec.select6.i.i1249.1
  %div.i.i1252.1 = sdiv i32 %mul.i.i1251.1, 2
  %spec.select.i.i1248.1 = call i32 @llvm.smin.i32(i32 %conv343, i32 %conv351)
  %add2.i.i1253.1 = add nsw i32 %div.i.i1252.1, %spec.select.i.i1248.1
  %idxprom.i.i1255.1 = sext i32 %add2.i.i1253.1 to i64
  %arrayidx.i.i1256.1 = getelementptr inbounds i32, ptr %101, i64 %idxprom.i.i1255.1
  %165 = load i32, ptr %arrayidx.i.i1256.1, align 4, !tbaa !140
  %cmp378.1 = icmp sgt i32 %165, 0
  br i1 %cmp378.1, label %if.then379, label %for.inc451.1

for.inc451.1:                                     ; preds = %invoke.cont376.1, %for.inc451
  %cmp364.2 = icmp sgt i32 %1, %conv351
  %brmerge.not = and i1 %cmp364.2, %cmp364
  br i1 %brmerge.not, label %invoke.cont376.2, label %for.end453

invoke.cont376.2:                                 ; preds = %for.inc451.1
  %spec.select6.i.i1249.2 = call i32 @llvm.smax.i32(i32 %conv351, i32 %conv359)
  %add.i.i1250.2 = add nsw i32 %spec.select6.i.i1249.2, 1
  %mul.i.i1251.2 = mul nsw i32 %add.i.i1250.2, %spec.select6.i.i1249.2
  %div.i.i1252.2 = sdiv i32 %mul.i.i1251.2, 2
  %spec.select.i.i1248.2 = call i32 @llvm.smin.i32(i32 %conv351, i32 %conv359)
  %add2.i.i1253.2 = add nsw i32 %div.i.i1252.2, %spec.select.i.i1248.2
  %idxprom.i.i1255.2 = sext i32 %add2.i.i1253.2 to i64
  %arrayidx.i.i1256.2 = getelementptr inbounds i32, ptr %101, i64 %idxprom.i.i1255.2
  %166 = load i32, ptr %arrayidx.i.i1256.2, align 4, !tbaa !140
  %cmp378.2 = icmp sgt i32 %166, 0
  br i1 %cmp378.2, label %if.then379, label %for.end453

for.end453:                                       ; preds = %for.inc451.1, %invoke.cont376.2, %cleanup
  %167 = phi i32 [ %.pre1788, %cleanup ], [ %96, %invoke.cont376.2 ], [ %96, %for.inc451.1 ]
  %i.10 = phi i32 [ %dec445, %cleanup ], [ %i.61701, %invoke.cont376.2 ], [ %i.61701, %for.inc451.1 ]
  call void @llvm.lifetime.end.p0(i64 12, ptr nonnull %idx335) #38
  %inc457 = add nsw i32 %i.10, 1
  %cmp328 = icmp slt i32 %inc457, %167
  br i1 %cmp328, label %for.body329, label %for.end458

for.end458:                                       ; preds = %for.end453, %for.cond324.preheader
  br i1 %cut, label %invoke.cont462, label %if.end893

invoke.cont462:                                   ; preds = %for.end458
  %168 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %or.cond1653 = icmp slt i32 %168, 1
  br i1 %or.cond1653, label %for.end532, label %if.then.i.i.i1312

if.then.i.i.i1312:                                ; preds = %invoke.cont462
  %conv.i.i.i.i = zext i32 %168 to i64
  %mul.i.i.i.i = shl nuw nsw i64 %conv.i.i.i.i, 2
  %call.i.i.i.i1317 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
          to label %for.body474.preheader unwind label %ehcleanup887.thread

for.body474.preheader:                            ; preds = %if.then.i.i.i1312
  call void @llvm.memset.p0.i64(ptr align 4 %call.i.i.i.i1317, i8 0, i64 %mul.i.i.i.i, i1 false), !tbaa !140
  %169 = sext i32 %1 to i64
  %wide.trip.count1751 = zext i32 %168 to i64
  br label %for.body474

for.body474:                                      ; preds = %for.body474.preheader, %if.end528
  %indvars.iv1748 = phi i64 [ 0, %for.body474.preheader ], [ %indvars.iv.next1749, %if.end528 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %x475) #38
  %170 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_x480 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %170, i64 %indvars.iv1748, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %x475, ptr noundef nonnull align 8 dereferenceable(16) %m_x480, i64 16, i1 false), !tbaa.struct !163
  %cmp481.not = icmp slt i64 %indvars.iv1748, %169
  br i1 %cmp481.not, label %lor.lhs.false, label %if.then489

lor.lhs.false:                                    ; preds = %for.body474
  %vtable482 = load ptr, ptr %ifn, align 8, !tbaa !5
  %171 = load ptr, ptr %vtable482, align 8
  %call485 = invoke noundef float %171(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %x475)
          to label %invoke.cont484 unwind label %lpad477

invoke.cont484:                                   ; preds = %lor.lhs.false
  %172 = call float @llvm.fabs.f32(float %call485)
  %cmp488 = fcmp olt float %172, %accurary
  br i1 %cmp488, label %invoke.cont484.if.then489_crit_edge, label %if.end528

invoke.cont484.if.then489_crit_edge:              ; preds = %invoke.cont484
  %.pre1789 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  br label %if.then489

if.then489:                                       ; preds = %invoke.cont484.if.then489_crit_edge, %for.body474
  %173 = phi ptr [ %.pre1789, %invoke.cont484.if.then489_crit_edge ], [ %170, %for.body474 ]
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %v490.sroa.0)
  %m_v495 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %173, i64 %indvars.iv1748, i32 3
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %v490.sroa.0, ptr noundef nonnull align 8 dereferenceable(16) %m_v495, i64 16, i1 false), !tbaa.struct !163
  %m_im.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %173, i64 %indvars.iv1748, i32 6
  %174 = load float, ptr %m_im.i, align 8, !tbaa !175
  %cmp.i1327 = fcmp ogt float %174, 0.000000e+00
  %div.i1328 = fdiv float 1.000000e+00, %174
  %cond.i = select i1 %cmp.i1327, float %div.i1328, float 0.000000e+00
  %cmp500 = fcmp ogt float %cond.i, 0.000000e+00
  br i1 %cmp500, label %if.then501, label %if.end512

if.then501:                                       ; preds = %if.then489
  %conv504 = fmul float %cond.i, 5.000000e-01
  %conv511 = fmul float %174, 2.000000e+00
  store float %conv511, ptr %m_im.i, align 8, !tbaa !175
  br label %if.end512

lpad461:                                          ; preds = %if.then3.i.i.i1513
  %175 = landingpad { ptr, i32 }
          cleanup
  %176 = extractvalue { ptr, i32 } %175, 0
  %177 = extractvalue { ptr, i32 } %175, 1
  br label %ehcleanup894

ehcleanup887.thread:                              ; preds = %if.then.i.i.i1312
  %178 = landingpad { ptr, i32 }
          cleanup
  %179 = extractvalue { ptr, i32 } %178, 0
  %180 = extractvalue { ptr, i32 } %178, 1
  br label %ehcleanup894

lpad477:                                          ; preds = %lor.lhs.false
  %181 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup529

lpad497:                                          ; preds = %if.end512
  %182 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %v490.sroa.0)
  br label %ehcleanup529

if.end512:                                        ; preds = %if.then501, %if.then489
  %m496.0 = phi float [ %conv504, %if.then501 ], [ %cond.i, %if.then489 ]
  invoke void @_ZN10btSoftBody10appendNodeERK9btVector3f(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(16) %x475, float noundef %m496.0)
          to label %invoke.cont513 unwind label %lpad497

invoke.cont513:                                   ; preds = %if.end512
  %183 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %sub517 = add nsw i32 %183, -1
  %arrayidx.i1335 = getelementptr inbounds i32, ptr %call.i.i.i.i1317, i64 %indvars.iv1748
  store i32 %sub517, ptr %arrayidx.i1335, align 4, !tbaa !140
  %184 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1340 = sext i32 %sub517 to i64
  %m_v525 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %184, i64 %idxprom.i1340, i32 3
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_v525, ptr noundef nonnull align 4 dereferenceable(16) %v490.sroa.0, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %v490.sroa.0)
  br label %if.end528

if.end528:                                        ; preds = %invoke.cont513, %invoke.cont484
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %x475) #38
  %indvars.iv.next1749 = add nuw nsw i64 %indvars.iv1748, 1
  %exitcond1752.not = icmp eq i64 %indvars.iv.next1749, %wide.trip.count1751
  br i1 %exitcond1752.not, label %for.end532, label %for.body474

ehcleanup529:                                     ; preds = %lpad497, %lpad477
  %.pn = phi { ptr, i32 } [ %182, %lpad497 ], [ %181, %lpad477 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %x475) #38
  br label %ehcleanup887

for.end532:                                       ; preds = %if.end528, %invoke.cont462
  %cnodes.sroa.151617.11796 = phi ptr [ null, %invoke.cont462 ], [ %call.i.i.i.i1317, %if.end528 ]
  %185 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %186 = load i32, ptr %m_size.i1103, align 4, !tbaa !92
  %cmp5401705 = icmp sgt i32 %186, 0
  br i1 %cmp5401705, label %for.body541.lr.ph, label %for.end649

for.body541.lr.ph:                                ; preds = %for.end532
  %m_data.i1344 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %sub.ptr.rhs.cast550 = ptrtoint ptr %185 to i64
  %wide.trip.count1759 = zext i32 %186 to i64
  br label %for.body541

for.body541:                                      ; preds = %for.body541.lr.ph, %if.end644
  %indvars.iv1756 = phi i64 [ 0, %for.body541.lr.ph ], [ %indvars.iv.next1757, %if.end644 ]
  %187 = load ptr, ptr %m_data.i1344, align 8, !tbaa !91
  %m_n547 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %187, i64 %indvars.iv1756, i32 1
  %188 = load ptr, ptr %m_n547, align 8, !tbaa !219
  %sub.ptr.lhs.cast549 = ptrtoint ptr %188 to i64
  %sub.ptr.sub551 = sub i64 %sub.ptr.lhs.cast549, %sub.ptr.rhs.cast550
  %sub.ptr.div552 = sdiv exact i64 %sub.ptr.sub551, 120
  %arrayidx559 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %187, i64 %indvars.iv1756, i32 1, i64 1
  %189 = load ptr, ptr %arrayidx559, align 8, !tbaa !219
  %sub.ptr.lhs.cast560 = ptrtoint ptr %189 to i64
  %sub.ptr.sub562 = sub i64 %sub.ptr.lhs.cast560, %sub.ptr.rhs.cast550
  %sub.ptr.div563 = sdiv exact i64 %sub.ptr.sub562, 120
  %sext1636 = shl i64 %sub.ptr.div552, 32
  %idxprom.i1351 = ashr exact i64 %sext1636, 32
  %arrayidx.i1352 = getelementptr inbounds i32, ptr %cnodes.sroa.151617.11796, i64 %idxprom.i1351
  %190 = load i32, ptr %arrayidx.i1352, align 4, !tbaa !140
  %tobool569.not = icmp eq i32 %190, 0
  br i1 %tobool569.not, label %if.else581, label %land.lhs.true570

land.lhs.true570:                                 ; preds = %for.body541
  %sext1640 = shl i64 %sub.ptr.div563, 32
  %idxprom.i1354 = ashr exact i64 %sext1640, 32
  %arrayidx.i1355 = getelementptr inbounds i32, ptr %cnodes.sroa.151617.11796, i64 %idxprom.i1354
  %191 = load i32, ptr %arrayidx.i1355, align 4, !tbaa !140
  %tobool574.not = icmp eq i32 %191, 0
  br i1 %tobool574.not, label %if.else581, label %if.then575

if.then575:                                       ; preds = %land.lhs.true570
  %192 = trunc i64 %indvars.iv1756 to i32
  invoke void @_ZN10btSoftBody10appendLinkEiPNS_8MaterialE(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %192, ptr noundef null)
          to label %invoke.cont576 unwind label %ehcleanup887.thread1666

invoke.cont576:                                   ; preds = %if.then575
  %193 = load i32, ptr %m_size.i1103, align 4, !tbaa !92
  %sub580 = add nsw i32 %193, -1
  br label %if.end605

ehcleanup887.thread1666:                          ; preds = %if.then575, %if.else581, %land.lhs.true592
  %194 = landingpad { ptr, i32 }
          cleanup
  %195 = extractvalue { ptr, i32 } %194, 0
  %196 = extractvalue { ptr, i32 } %194, 1
  br label %if.then3.i.i.i1533

if.else581:                                       ; preds = %land.lhs.true570, %for.body541
  %197 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_x586 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %197, i64 %idxprom.i1351, i32 1
  %vtable587 = load ptr, ptr %ifn, align 8, !tbaa !5
  %198 = load ptr, ptr %vtable587, align 8
  %call590 = invoke noundef float %198(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %m_x586)
          to label %invoke.cont589 unwind label %ehcleanup887.thread1666

invoke.cont589:                                   ; preds = %if.else581
  %cmp591 = fcmp olt float %call590, %accurary
  br i1 %cmp591, label %land.lhs.true592, label %if.end644

land.lhs.true592:                                 ; preds = %invoke.cont589
  %199 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %sext1639 = shl i64 %sub.ptr.div563, 32
  %idxprom.i1361 = ashr exact i64 %sext1639, 32
  %m_x597 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %199, i64 %idxprom.i1361, i32 1
  %vtable598 = load ptr, ptr %ifn, align 8, !tbaa !5
  %200 = load ptr, ptr %vtable598, align 8
  %call601 = invoke noundef float %200(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %m_x597)
          to label %invoke.cont600 unwind label %ehcleanup887.thread1666

invoke.cont600:                                   ; preds = %land.lhs.true592
  %cmp602 = fcmp olt float %call601, %accurary
  %201 = trunc i64 %indvars.iv1756 to i32
  br i1 %cmp602, label %if.end605, label %if.end644

if.end605:                                        ; preds = %invoke.cont600, %invoke.cont576
  %todetach.0 = phi i32 [ %sub580, %invoke.cont576 ], [ %201, %invoke.cont600 ]
  %tobool606.not = icmp eq i32 %todetach.0, 0
  br i1 %tobool606.not, label %if.end644, label %if.then607

if.then607:                                       ; preds = %if.end605
  %202 = load ptr, ptr %m_data.i1344, align 8, !tbaa !91
  %idxprom.i1364 = sext i32 %todetach.0 to i64
  %arrayidx619 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %202, i64 %idxprom.i1364, i32 1, i64 0
  %203 = load ptr, ptr %arrayidx619, align 8, !tbaa !219
  %sub.ptr.lhs.cast620 = ptrtoint ptr %203 to i64
  %sub.ptr.sub622 = sub i64 %sub.ptr.lhs.cast620, %sub.ptr.rhs.cast550
  %sub.ptr.div623 = sdiv exact i64 %sub.ptr.sub622, 120
  %sext1638 = shl i64 %sub.ptr.div623, 32
  %idxprom.i1367 = ashr exact i64 %sext1638, 32
  %arrayidx.i1368 = getelementptr inbounds i32, ptr %cnodes.sroa.151617.11796, i64 %idxprom.i1367
  %204 = load i32, ptr %arrayidx.i1368, align 4, !tbaa !140
  %tobool628.not = icmp eq i32 %204, 0
  br i1 %tobool628.not, label %if.end636, label %if.then629

if.then629:                                       ; preds = %if.then607
  %205 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1370 = sext i32 %204 to i64
  %arrayidx.i1371 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %205, i64 %idxprom.i1370
  store ptr %arrayidx.i1371, ptr %arrayidx619, align 8, !tbaa !219
  br label %if.end636

if.end636:                                        ; preds = %if.then629, %if.then607
  %arrayidx619.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %202, i64 %idxprom.i1364, i32 1, i64 1
  %206 = load ptr, ptr %arrayidx619.1, align 8, !tbaa !219
  %sub.ptr.lhs.cast620.1 = ptrtoint ptr %206 to i64
  %sub.ptr.sub622.1 = sub i64 %sub.ptr.lhs.cast620.1, %sub.ptr.rhs.cast550
  %sub.ptr.div623.1 = sdiv exact i64 %sub.ptr.sub622.1, 120
  %sext1638.1 = shl i64 %sub.ptr.div623.1, 32
  %idxprom.i1367.1 = ashr exact i64 %sext1638.1, 32
  %arrayidx.i1368.1 = getelementptr inbounds i32, ptr %cnodes.sroa.151617.11796, i64 %idxprom.i1367.1
  %207 = load i32, ptr %arrayidx.i1368.1, align 4, !tbaa !140
  %tobool628.not.1 = icmp eq i32 %207, 0
  br i1 %tobool628.not.1, label %if.end644, label %if.then629.1

if.then629.1:                                     ; preds = %if.end636
  %208 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1370.1 = sext i32 %207 to i64
  %arrayidx.i1371.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %208, i64 %idxprom.i1370.1
  store ptr %arrayidx.i1371.1, ptr %arrayidx619.1, align 8, !tbaa !219
  br label %if.end644

if.end644:                                        ; preds = %if.end636, %if.then629.1, %invoke.cont589, %invoke.cont600, %if.end605
  %indvars.iv.next1757 = add nuw nsw i64 %indvars.iv1756, 1
  %exitcond1760.not = icmp eq i64 %indvars.iv.next1757, %wide.trip.count1759
  br i1 %exitcond1760.not, label %for.end649, label %for.body541

for.end649:                                       ; preds = %if.end644, %for.end532
  %209 = load i32, ptr %m_size.i1117, align 4, !tbaa !96
  %cmp6541709 = icmp sgt i32 %209, 0
  br i1 %cmp6541709, label %for.body655.lr.ph, label %for.end719

for.body655.lr.ph:                                ; preds = %for.end649
  %m_data.i1373 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %sub.ptr.rhs.cast694 = ptrtoint ptr %185 to i64
  %wide.trip.count1768 = zext i32 %209 to i64
  br label %for.body655

for.body655:                                      ; preds = %for.body655.lr.ph, %if.end715
  %indvars.iv1765 = phi i64 [ 0, %for.body655.lr.ph ], [ %indvars.iv.next1766, %if.end715 ]
  %210 = load ptr, ptr %m_data.i1373, align 8, !tbaa !95
  %m_n660 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %210, i64 %indvars.iv1765, i32 1
  %211 = load ptr, ptr %m_n660, align 8, !tbaa !219
  %m_x662 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %211, i64 0, i32 1
  %vtable663 = load ptr, ptr %ifn, align 8, !tbaa !5
  %212 = load ptr, ptr %vtable663, align 8
  %call666 = invoke noundef float %212(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %m_x662)
          to label %invoke.cont665 unwind label %lpad657

invoke.cont665:                                   ; preds = %for.body655
  %cmp667 = fcmp olt float %call666, %accurary
  br i1 %cmp667, label %land.lhs.true668, label %if.end715

land.lhs.true668:                                 ; preds = %invoke.cont665
  %arrayidx669 = getelementptr inbounds ptr, ptr %m_n660, i64 1
  %213 = load ptr, ptr %arrayidx669, align 8, !tbaa !219
  %m_x670 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %213, i64 0, i32 1
  %vtable671 = load ptr, ptr %ifn, align 8, !tbaa !5
  %214 = load ptr, ptr %vtable671, align 8
  %call674 = invoke noundef float %214(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %m_x670)
          to label %invoke.cont673 unwind label %lpad657

invoke.cont673:                                   ; preds = %land.lhs.true668
  %cmp675 = fcmp olt float %call674, %accurary
  br i1 %cmp675, label %land.lhs.true676, label %if.end715

land.lhs.true676:                                 ; preds = %invoke.cont673
  %arrayidx677 = getelementptr inbounds ptr, ptr %m_n660, i64 2
  %215 = load ptr, ptr %arrayidx677, align 8, !tbaa !219
  %m_x678 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %215, i64 0, i32 1
  %vtable679 = load ptr, ptr %ifn, align 8, !tbaa !5
  %216 = load ptr, ptr %vtable679, align 8
  %call682 = invoke noundef float %216(ptr noundef nonnull align 8 dereferenceable(8) %ifn, ptr noundef nonnull align 4 dereferenceable(16) %m_x678)
          to label %invoke.cont681 unwind label %lpad657

invoke.cont681:                                   ; preds = %land.lhs.true676
  %cmp683 = fcmp olt float %call682, %accurary
  br i1 %cmp683, label %for.body689.preheader, label %if.end715

for.body689.preheader:                            ; preds = %invoke.cont681
  %217 = load ptr, ptr %m_n660, align 8, !tbaa !219
  %sub.ptr.lhs.cast693 = ptrtoint ptr %217 to i64
  %sub.ptr.sub695 = sub i64 %sub.ptr.lhs.cast693, %sub.ptr.rhs.cast694
  %sub.ptr.div696 = sdiv exact i64 %sub.ptr.sub695, 120
  %sext1635 = shl i64 %sub.ptr.div696, 32
  %idxprom.i1377 = ashr exact i64 %sext1635, 32
  %arrayidx.i1378 = getelementptr inbounds i32, ptr %cnodes.sroa.151617.11796, i64 %idxprom.i1377
  %218 = load i32, ptr %arrayidx.i1378, align 4, !tbaa !140
  %tobool701.not = icmp eq i32 %218, 0
  br i1 %tobool701.not, label %if.end708, label %if.then702

lpad657:                                          ; preds = %land.lhs.true676, %land.lhs.true668, %for.body655
  %219 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup887

if.then702:                                       ; preds = %for.body689.preheader
  %220 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1380 = sext i32 %218 to i64
  %arrayidx.i1381 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %220, i64 %idxprom.i1380
  store ptr %arrayidx.i1381, ptr %m_n660, align 8, !tbaa !219
  br label %if.end708

if.end708:                                        ; preds = %if.then702, %for.body689.preheader
  %221 = load ptr, ptr %arrayidx669, align 8, !tbaa !219
  %sub.ptr.lhs.cast693.1 = ptrtoint ptr %221 to i64
  %sub.ptr.sub695.1 = sub i64 %sub.ptr.lhs.cast693.1, %sub.ptr.rhs.cast694
  %sub.ptr.div696.1 = sdiv exact i64 %sub.ptr.sub695.1, 120
  %sext1635.1 = shl i64 %sub.ptr.div696.1, 32
  %idxprom.i1377.1 = ashr exact i64 %sext1635.1, 32
  %arrayidx.i1378.1 = getelementptr inbounds i32, ptr %cnodes.sroa.151617.11796, i64 %idxprom.i1377.1
  %222 = load i32, ptr %arrayidx.i1378.1, align 4, !tbaa !140
  %tobool701.not.1 = icmp eq i32 %222, 0
  br i1 %tobool701.not.1, label %if.end708.1, label %if.then702.1

if.then702.1:                                     ; preds = %if.end708
  %223 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1380.1 = sext i32 %222 to i64
  %arrayidx.i1381.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %223, i64 %idxprom.i1380.1
  store ptr %arrayidx.i1381.1, ptr %arrayidx669, align 8, !tbaa !219
  br label %if.end708.1

if.end708.1:                                      ; preds = %if.then702.1, %if.end708
  %224 = load ptr, ptr %arrayidx677, align 8, !tbaa !219
  %sub.ptr.lhs.cast693.2 = ptrtoint ptr %224 to i64
  %sub.ptr.sub695.2 = sub i64 %sub.ptr.lhs.cast693.2, %sub.ptr.rhs.cast694
  %sub.ptr.div696.2 = sdiv exact i64 %sub.ptr.sub695.2, 120
  %sext1635.2 = shl i64 %sub.ptr.div696.2, 32
  %idxprom.i1377.2 = ashr exact i64 %sext1635.2, 32
  %arrayidx.i1378.2 = getelementptr inbounds i32, ptr %cnodes.sroa.151617.11796, i64 %idxprom.i1377.2
  %225 = load i32, ptr %arrayidx.i1378.2, align 4, !tbaa !140
  %tobool701.not.2 = icmp eq i32 %225, 0
  br i1 %tobool701.not.2, label %if.end715, label %if.then702.2

if.then702.2:                                     ; preds = %if.end708.1
  %226 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %idxprom.i1380.2 = sext i32 %225 to i64
  %arrayidx.i1381.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %226, i64 %idxprom.i1380.2
  store ptr %arrayidx.i1381.2, ptr %arrayidx677, align 8, !tbaa !219
  br label %if.end715

if.end715:                                        ; preds = %if.end708.1, %if.then702.2, %invoke.cont681, %invoke.cont673, %invoke.cont665
  %indvars.iv.next1766 = add nuw nsw i64 %indvars.iv1765, 1
  %exitcond1769.not = icmp eq i64 %indvars.iv.next1766, %wide.trip.count1768
  br i1 %exitcond1769.not, label %for.end719, label %for.body655

for.end719:                                       ; preds = %if.end715, %for.end649
  %227 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %or.cond1654 = icmp slt i32 %227, 1
  br i1 %or.cond1654, label %invoke.cont730, label %if.then.i.i.i1403

if.then.i.i.i1403:                                ; preds = %for.end719
  %conv.i.i.i.i1400 = zext i32 %227 to i64
  %mul.i.i.i.i1401 = shl nuw nsw i64 %conv.i.i.i.i1400, 2
  %call.i.i.i.i1435 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i1401, i32 noundef 16)
          to label %for.body10.lr.ph.i1428 unwind label %lpad729

for.body10.lr.ph.i1428:                           ; preds = %if.then.i.i.i1403
  call void @llvm.memset.p0.i64(ptr align 4 %call.i.i.i.i1435, i8 0, i64 %mul.i.i.i.i1401, i1 false), !tbaa !140
  br label %invoke.cont730

invoke.cont730:                                   ; preds = %for.body10.lr.ph.i1428, %for.end719
  %ranks.sroa.151604.1 = phi ptr [ null, %for.end719 ], [ %call.i.i.i.i1435, %for.body10.lr.ph.i1428 ]
  %228 = load i32, ptr %m_size.i1103, align 4, !tbaa !92
  %cmp7371712 = icmp sgt i32 %228, 0
  br i1 %cmp7371712, label %for.cond740.preheader.lr.ph, label %for.end766

for.cond740.preheader.lr.ph:                      ; preds = %invoke.cont730
  %m_data.i1446 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %229 = load ptr, ptr %m_data.i1446, align 8, !tbaa !91
  %sub.ptr.rhs.cast752 = ptrtoint ptr %185 to i64
  %wide.trip.count1776 = zext i32 %228 to i64
  br label %for.cond740.preheader

for.cond740.preheader:                            ; preds = %for.cond740.preheader.lr.ph, %for.cond740.preheader
  %indvars.iv1773 = phi i64 [ 0, %for.cond740.preheader.lr.ph ], [ %indvars.iv.next1774, %for.cond740.preheader ]
  %arrayidx750 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %229, i64 %indvars.iv1773, i32 1, i64 0
  %230 = load ptr, ptr %arrayidx750, align 8, !tbaa !219
  %sub.ptr.lhs.cast751 = ptrtoint ptr %230 to i64
  %sub.ptr.sub753 = sub i64 %sub.ptr.lhs.cast751, %sub.ptr.rhs.cast752
  %sub.ptr.div754 = sdiv exact i64 %sub.ptr.sub753, 120
  %sext1634 = shl i64 %sub.ptr.div754, 32
  %idxprom.i1450 = ashr exact i64 %sext1634, 32
  %arrayidx.i1451 = getelementptr inbounds i32, ptr %ranks.sroa.151604.1, i64 %idxprom.i1450
  %231 = load i32, ptr %arrayidx.i1451, align 4, !tbaa !140
  %inc758 = add nsw i32 %231, 1
  store i32 %inc758, ptr %arrayidx.i1451, align 4, !tbaa !140
  %arrayidx750.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %229, i64 %indvars.iv1773, i32 1, i64 1
  %232 = load ptr, ptr %arrayidx750.1, align 8, !tbaa !219
  %sub.ptr.lhs.cast751.1 = ptrtoint ptr %232 to i64
  %sub.ptr.sub753.1 = sub i64 %sub.ptr.lhs.cast751.1, %sub.ptr.rhs.cast752
  %sub.ptr.div754.1 = sdiv exact i64 %sub.ptr.sub753.1, 120
  %sext1634.1 = shl i64 %sub.ptr.div754.1, 32
  %idxprom.i1450.1 = ashr exact i64 %sext1634.1, 32
  %arrayidx.i1451.1 = getelementptr inbounds i32, ptr %ranks.sroa.151604.1, i64 %idxprom.i1450.1
  %233 = load i32, ptr %arrayidx.i1451.1, align 4, !tbaa !140
  %inc758.1 = add nsw i32 %233, 1
  store i32 %inc758.1, ptr %arrayidx.i1451.1, align 4, !tbaa !140
  %indvars.iv.next1774 = add nuw nsw i64 %indvars.iv1773, 1
  %exitcond1777.not = icmp eq i64 %indvars.iv.next1774, %wide.trip.count1776
  br i1 %exitcond1777.not, label %for.end766, label %for.cond740.preheader

lpad724:                                          ; preds = %if.then3.i.i.i1503
  %234 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup887

lpad729:                                          ; preds = %if.then.i.i.i1403
  %235 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup887

for.end766:                                       ; preds = %for.cond740.preheader, %invoke.cont730
  %236 = load i32, ptr %m_size.i1117, align 4, !tbaa !96
  %cmp7711715 = icmp sgt i32 %236, 0
  br i1 %cmp7711715, label %for.cond774.preheader.lr.ph, label %for.cond801.preheader

for.cond774.preheader.lr.ph:                      ; preds = %for.end766
  %m_data.i1453 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %237 = load ptr, ptr %m_data.i1453, align 8, !tbaa !95
  %sub.ptr.rhs.cast786 = ptrtoint ptr %185 to i64
  %wide.trip.count1785 = zext i32 %236 to i64
  br label %for.cond774.preheader

for.cond774.preheader:                            ; preds = %for.cond774.preheader.lr.ph, %for.cond774.preheader
  %indvars.iv1782 = phi i64 [ 0, %for.cond774.preheader.lr.ph ], [ %indvars.iv.next1783, %for.cond774.preheader ]
  %arrayidx784 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %237, i64 %indvars.iv1782, i32 1, i64 0
  %238 = load ptr, ptr %arrayidx784, align 8, !tbaa !219
  %sub.ptr.lhs.cast785 = ptrtoint ptr %238 to i64
  %sub.ptr.sub787 = sub i64 %sub.ptr.lhs.cast785, %sub.ptr.rhs.cast786
  %sub.ptr.div788 = sdiv exact i64 %sub.ptr.sub787, 120
  %sext1633 = shl i64 %sub.ptr.div788, 32
  %idxprom.i1457 = ashr exact i64 %sext1633, 32
  %arrayidx.i1458 = getelementptr inbounds i32, ptr %ranks.sroa.151604.1, i64 %idxprom.i1457
  %239 = load i32, ptr %arrayidx.i1458, align 4, !tbaa !140
  %inc792 = add nsw i32 %239, 1
  store i32 %inc792, ptr %arrayidx.i1458, align 4, !tbaa !140
  %arrayidx784.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %237, i64 %indvars.iv1782, i32 1, i64 1
  %240 = load ptr, ptr %arrayidx784.1, align 8, !tbaa !219
  %sub.ptr.lhs.cast785.1 = ptrtoint ptr %240 to i64
  %sub.ptr.sub787.1 = sub i64 %sub.ptr.lhs.cast785.1, %sub.ptr.rhs.cast786
  %sub.ptr.div788.1 = sdiv exact i64 %sub.ptr.sub787.1, 120
  %sext1633.1 = shl i64 %sub.ptr.div788.1, 32
  %idxprom.i1457.1 = ashr exact i64 %sext1633.1, 32
  %arrayidx.i1458.1 = getelementptr inbounds i32, ptr %ranks.sroa.151604.1, i64 %idxprom.i1457.1
  %241 = load i32, ptr %arrayidx.i1458.1, align 4, !tbaa !140
  %inc792.1 = add nsw i32 %241, 1
  store i32 %inc792.1, ptr %arrayidx.i1458.1, align 4, !tbaa !140
  %arrayidx784.2 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %237, i64 %indvars.iv1782, i32 1, i64 2
  %242 = load ptr, ptr %arrayidx784.2, align 8, !tbaa !219
  %sub.ptr.lhs.cast785.2 = ptrtoint ptr %242 to i64
  %sub.ptr.sub787.2 = sub i64 %sub.ptr.lhs.cast785.2, %sub.ptr.rhs.cast786
  %sub.ptr.div788.2 = sdiv exact i64 %sub.ptr.sub787.2, 120
  %sext1633.2 = shl i64 %sub.ptr.div788.2, 32
  %idxprom.i1457.2 = ashr exact i64 %sext1633.2, 32
  %arrayidx.i1458.2 = getelementptr inbounds i32, ptr %ranks.sroa.151604.1, i64 %idxprom.i1457.2
  %243 = load i32, ptr %arrayidx.i1458.2, align 4, !tbaa !140
  %inc792.2 = add nsw i32 %243, 1
  store i32 %inc792.2, ptr %arrayidx.i1458.2, align 4, !tbaa !140
  %indvars.iv.next1783 = add nuw nsw i64 %indvars.iv1782, 1
  %exitcond1786.not = icmp eq i64 %indvars.iv.next1783, %wide.trip.count1785
  br i1 %exitcond1786.not, label %for.cond801.preheader, label %for.cond774.preheader

for.cond801.preheader:                            ; preds = %for.cond774.preheader, %for.end766
  %244 = load i32, ptr %m_size.i1103, align 4, !tbaa !92
  %cmp8051717 = icmp sgt i32 %244, 0
  br i1 %cmp8051717, label %for.body806.lr.ph, label %invoke.cont878

for.body806.lr.ph:                                ; preds = %for.cond801.preheader
  %m_data.i1460 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %sub.ptr.rhs.cast816 = ptrtoint ptr %185 to i64
  br label %for.body806

for.body806:                                      ; preds = %for.body806.lr.ph, %if.end872
  %245 = phi i32 [ %244, %for.body806.lr.ph ], [ %254, %if.end872 ]
  %i463.51718 = phi i32 [ 0, %for.body806.lr.ph ], [ %inc876, %if.end872 ]
  %246 = load ptr, ptr %m_data.i1460, align 8, !tbaa !91
  %idxprom.i1461 = sext i32 %i463.51718 to i64
  %m_n813 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %246, i64 %idxprom.i1461, i32 1
  %247 = load ptr, ptr %m_n813, align 8, !tbaa !219
  %sub.ptr.lhs.cast815 = ptrtoint ptr %247 to i64
  %sub.ptr.sub817 = sub i64 %sub.ptr.lhs.cast815, %sub.ptr.rhs.cast816
  %sub.ptr.div818 = sdiv exact i64 %sub.ptr.sub817, 120
  %arrayidx825 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %246, i64 %idxprom.i1461, i32 1, i64 1
  %248 = load ptr, ptr %arrayidx825, align 8, !tbaa !219
  %sub.ptr.lhs.cast826 = ptrtoint ptr %248 to i64
  %sub.ptr.sub828 = sub i64 %sub.ptr.lhs.cast826, %sub.ptr.rhs.cast816
  %sub.ptr.div829 = sdiv exact i64 %sub.ptr.sub828, 120
  %sext = shl i64 %sub.ptr.div818, 32
  %idxprom.i1467 = ashr exact i64 %sext, 32
  %arrayidx.i1468 = getelementptr inbounds i32, ptr %ranks.sroa.151604.1, i64 %idxprom.i1467
  %249 = load i32, ptr %arrayidx.i1468, align 4, !tbaa !140
  %cmp836 = icmp eq i32 %249, 1
  %.pre1790 = shl i64 %sub.ptr.div829, 32
  %.pre1791 = ashr exact i64 %.pre1790, 32
  br i1 %cmp836, label %if.then849, label %lor.lhs.false846

lor.lhs.false846:                                 ; preds = %for.body806
  %arrayidx.i1471 = getelementptr inbounds i32, ptr %ranks.sroa.151604.1, i64 %.pre1791
  %250 = load i32, ptr %arrayidx.i1471, align 4, !tbaa !140
  %cmp842 = icmp eq i32 %250, 1
  br i1 %cmp842, label %if.then849, label %if.end872

if.then849:                                       ; preds = %for.body806, %lor.lhs.false846
  %dec853 = add nsw i32 %249, -1
  store i32 %dec853, ptr %arrayidx.i1468, align 4, !tbaa !140
  %arrayidx.i1477 = getelementptr inbounds i32, ptr %ranks.sroa.151604.1, i64 %.pre1791
  %251 = load i32, ptr %arrayidx.i1477, align 4, !tbaa !140
  %dec857 = add nsw i32 %251, -1
  store i32 %dec857, ptr %arrayidx.i1477, align 4, !tbaa !140
  %arrayidx.i1480 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %246, i64 %idxprom.i1461
  %252 = load i32, ptr %m_size.i1103, align 4, !tbaa !92
  %sub865 = add nsw i32 %252, -1
  %idxprom.i1483 = sext i32 %sub865 to i64
  %arrayidx.i1484 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %246, i64 %idxprom.i1483
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %tmp.i1485)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %tmp.i1485, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i1480, i64 72, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(68) %arrayidx.i1480, ptr noundef nonnull align 8 dereferenceable(68) %arrayidx.i1484, i64 68, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(68) %arrayidx.i1484, ptr noundef nonnull align 8 dereferenceable(68) %tmp.i1485, i64 68, i1 false)
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %tmp.i1485)
  %253 = load i32, ptr %m_size.i1103, align 4, !tbaa !92
  %dec.i1487 = add nsw i32 %253, -1
  store i32 %dec.i1487, ptr %m_size.i1103, align 4, !tbaa !92
  %dec871 = add nsw i32 %i463.51718, -1
  br label %if.end872

if.end872:                                        ; preds = %if.then849, %lor.lhs.false846
  %254 = phi i32 [ %dec.i1487, %if.then849 ], [ %245, %lor.lhs.false846 ]
  %i463.6 = phi i32 [ %dec871, %if.then849 ], [ %i463.51718, %lor.lhs.false846 ]
  %inc876 = add nsw i32 %i463.6, 1
  %cmp805 = icmp slt i32 %inc876, %254
  br i1 %cmp805, label %for.body806, label %if.then3.i.i.i1503

invoke.cont878:                                   ; preds = %for.cond801.preheader
  %tobool.not.i.i.i1499 = icmp eq ptr %ranks.sroa.151604.1, null
  br i1 %tobool.not.i.i.i1499, label %invoke.cont882, label %if.then3.i.i.i1503

if.then3.i.i.i1503:                               ; preds = %if.end872, %invoke.cont878
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %ranks.sroa.151604.1)
          to label %invoke.cont882 unwind label %lpad724

invoke.cont882:                                   ; preds = %invoke.cont878, %if.then3.i.i.i1503
  %tobool.not.i.i.i1509 = icmp eq ptr %cnodes.sroa.151617.11796, null
  br i1 %tobool.not.i.i.i1509, label %if.end893, label %if.then3.i.i.i1513

if.then3.i.i.i1513:                               ; preds = %invoke.cont882
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %cnodes.sroa.151617.11796)
          to label %if.end893 unwind label %lpad461

ehcleanup887:                                     ; preds = %lpad729, %lpad724, %lpad657, %ehcleanup529
  %cnodes.sroa.151617.11797 = phi ptr [ %call.i.i.i.i1317, %ehcleanup529 ], [ %cnodes.sroa.151617.11796, %lpad657 ], [ %cnodes.sroa.151617.11796, %lpad724 ], [ %cnodes.sroa.151617.11796, %lpad729 ]
  %.pn.pn = phi { ptr, i32 } [ %.pn, %ehcleanup529 ], [ %219, %lpad657 ], [ %234, %lpad724 ], [ %235, %lpad729 ]
  %exn.slot.8 = extractvalue { ptr, i32 } %.pn.pn, 0
  %ehselector.slot.8 = extractvalue { ptr, i32 } %.pn.pn, 1
  %tobool.not.i.i.i1529 = icmp eq ptr %cnodes.sroa.151617.11797, null
  br i1 %tobool.not.i.i.i1529, label %ehcleanup894, label %if.then3.i.i.i1533

if.then3.i.i.i1533:                               ; preds = %ehcleanup887.thread1666, %ehcleanup887
  %cnodes.sroa.151617.11798 = phi ptr [ %cnodes.sroa.151617.11796, %ehcleanup887.thread1666 ], [ %cnodes.sroa.151617.11797, %ehcleanup887 ]
  %exn.slot.81673 = phi ptr [ %195, %ehcleanup887.thread1666 ], [ %exn.slot.8, %ehcleanup887 ]
  %ehselector.slot.81672 = phi i32 [ %196, %ehcleanup887.thread1666 ], [ %ehselector.slot.8, %ehcleanup887 ]
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %cnodes.sroa.151617.11798)
          to label %ehcleanup894 unwind label %terminate.lpad

if.end893:                                        ; preds = %if.then3.i.i.i1513, %invoke.cont882, %for.end458
  %m_bUpdateRtCst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  store i8 1, ptr %m_bUpdateRtCst, align 4, !tbaa !147
  %m_data.i.i.i.i1538 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %edges, i64 0, i32 5
  %255 = load ptr, ptr %m_data.i.i.i.i1538, align 8, !tbaa !131
  %tobool.not.i.i.i.i1539 = icmp eq ptr %255, null
  %m_ownsMemory.i.i.i.i1540 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %edges, i64 0, i32 6
  %256 = load i8, ptr %m_ownsMemory.i.i.i.i1540, align 8, !range !159
  %tobool2.not.i.i.i.i1541 = icmp eq i8 %256, 0
  %or.cond.i.i.i1542 = select i1 %tobool.not.i.i.i.i1539, i1 true, i1 %tobool2.not.i.i.i.i1541
  br i1 %or.cond.i.i.i1542, label %_ZN11btSymMatrixIiED2Ev.exit, label %if.then3.i.i.i.i1543

if.then3.i.i.i.i1543:                             ; preds = %if.end893
  call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %255)
  br label %_ZN11btSymMatrixIiED2Ev.exit

_ZN11btSymMatrixIiED2Ev.exit:                     ; preds = %if.end893, %if.then3.i.i.i.i1543
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %edges) #38
  ret void

ehcleanup894:                                     ; preds = %ehcleanup887.thread, %lpad461, %if.then3.i.i.i1533, %ehcleanup887, %ehcleanup449, %lpad270, %ehcleanup225, %ehcleanup
  %ehselector.slot.10 = phi i32 [ %ehselector.slot.0, %ehcleanup ], [ %ehselector.slot.3, %ehcleanup225 ], [ %95, %lpad270 ], [ %ehselector.slot.4, %ehcleanup449 ], [ %177, %lpad461 ], [ %ehselector.slot.81672, %if.then3.i.i.i1533 ], [ %ehselector.slot.8, %ehcleanup887 ], [ %180, %ehcleanup887.thread ]
  %exn.slot.10 = phi ptr [ %exn.slot.0, %ehcleanup ], [ %exn.slot.3, %ehcleanup225 ], [ %94, %lpad270 ], [ %exn.slot.4, %ehcleanup449 ], [ %176, %lpad461 ], [ %exn.slot.81673, %if.then3.i.i.i1533 ], [ %exn.slot.8, %ehcleanup887 ], [ %179, %ehcleanup887.thread ]
  %m_data.i.i.i.i1544 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %edges, i64 0, i32 5
  %257 = load ptr, ptr %m_data.i.i.i.i1544, align 8, !tbaa !131
  %tobool.not.i.i.i.i1545 = icmp eq ptr %257, null
  %m_ownsMemory.i.i.i.i1546 = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %edges, i64 0, i32 6
  %258 = load i8, ptr %m_ownsMemory.i.i.i.i1546, align 8, !range !159
  %tobool2.not.i.i.i.i1547 = icmp eq i8 %258, 0
  %or.cond.i.i.i1548 = select i1 %tobool.not.i.i.i.i1545, i1 true, i1 %tobool2.not.i.i.i.i1547
  br i1 %or.cond.i.i.i1548, label %_ZN11btSymMatrixIiED2Ev.exit1553, label %if.then3.i.i.i.i1549

if.then3.i.i.i.i1549:                             ; preds = %ehcleanup894
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %257)
          to label %_ZN11btSymMatrixIiED2Ev.exit1553 unwind label %terminate.lpad

_ZN11btSymMatrixIiED2Ev.exit1553:                 ; preds = %if.then3.i.i.i.i1549, %ehcleanup894
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %edges) #38
  %lpad.val = insertvalue { ptr, i32 } poison, ptr %exn.slot.10, 0
  %lpad.val904 = insertvalue { ptr, i32 } %lpad.val, i32 %ehselector.slot.10, 1
  resume { ptr, i32 } %lpad.val904

terminate.lpad:                                   ; preds = %if.then3.i.i.i.i1549, %if.then3.i.i.i1533
  %259 = landingpad { ptr, i32 }
          catch ptr null
  %260 = extractvalue { ptr, i32 } %259, 0
  call void @__clang_call_terminate(ptr %260) #39
  unreachable
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN11btSymMatrixIiEC2EiRKi(ptr noundef nonnull align 8 dereferenceable(36) %this, i32 noundef %n, ptr noundef nonnull align 4 dereferenceable(4) %init) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %this, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !130
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %this, i64 0, i32 5
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !131
  %m_size.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i.i, align 4, !tbaa !132
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !133
  %dim.i = getelementptr inbounds %struct.btSymMatrix, ptr %this, i64 0, i32 1
  store i32 %n, ptr %dim.i, align 8, !tbaa !387
  %add.i = add nsw i32 %n, 1
  %mul.i = mul nsw i32 %add.i, %n
  %div.i = sdiv i32 %mul.i, 2
  %cmp4.i.i = icmp sgt i32 %mul.i, 1
  br i1 %cmp4.i.i, label %if.then.i.i.i.i, label %_ZN11btSymMatrixIiE6resizeEiRKi.exit

if.then.i.i.i.i:                                  ; preds = %entry
  %conv.i.i.i.i.i = zext i32 %div.i to i64
  %mul.i.i.i.i.i = shl nuw nsw i64 %conv.i.i.i.i.i, 2
  %call.i.i.i.i.i4 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i.i, i32 noundef 16)
          to label %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i.i unwind label %lpad

_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i.i: ; preds = %if.then.i.i.i.i
  %.pre.i.i = load i32, ptr %m_size.i.i, align 4, !tbaa !132
  %cmp7.i.i.i.i = icmp sgt i32 %.pre.i.i, 0
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !131
  br i1 %cmp7.i.i.i.i, label %for.body.lr.ph.i.i.i.i, label %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i

for.body.lr.ph.i.i.i.i:                           ; preds = %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i.i
  %1 = ptrtoint ptr %0 to i64
  %call.i.i.i.i.i410 = ptrtoint ptr %call.i.i.i.i.i4 to i64
  %wide.trip.count.i.i.i.i = zext i32 %.pre.i.i to i64
  %min.iters.check = icmp ult i32 %.pre.i.i, 8
  %2 = sub i64 %call.i.i.i.i.i410, %1
  %diff.check = icmp ult i64 %2, 32
  %or.cond28 = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond28, label %for.body.i.i.i.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i.i.i
  %n.vec = and i64 %wide.trip.count.i.i.i.i, 4294967288
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %3 = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %index
  %4 = getelementptr inbounds i32, ptr %0, i64 %index
  %wide.load = load <4 x i32>, ptr %4, align 4, !tbaa !140
  %5 = getelementptr inbounds i32, ptr %4, i64 4
  %wide.load11 = load <4 x i32>, ptr %5, align 4, !tbaa !140
  store <4 x i32> %wide.load, ptr %3, align 4, !tbaa !140
  %6 = getelementptr inbounds i32, ptr %3, i64 4
  store <4 x i32> %wide.load11, ptr %6, align 4, !tbaa !140
  %index.next = add nuw i64 %index, 8
  %7 = icmp eq i64 %index.next, %n.vec
  br i1 %7, label %middle.block, label %vector.body, !llvm.loop !389

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i.i.i
  br i1 %cmp.n, label %if.then.i11.i.i.i, label %for.body.i.i.i.i.preheader

for.body.i.i.i.i.preheader:                       ; preds = %for.body.lr.ph.i.i.i.i, %middle.block
  %indvars.iv.i.i.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i.i ], [ %n.vec, %middle.block ]
  %8 = xor i64 %indvars.iv.i.i.i.i.ph, -1
  %9 = add nsw i64 %8, %wide.trip.count.i.i.i.i
  %xtraiter = and i64 %wide.trip.count.i.i.i.i, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.prol

for.body.i.i.i.i.prol:                            ; preds = %for.body.i.i.i.i.preheader, %for.body.i.i.i.i.prol
  %indvars.iv.i.i.i.i.prol = phi i64 [ %indvars.iv.next.i.i.i.i.prol, %for.body.i.i.i.i.prol ], [ %indvars.iv.i.i.i.i.ph, %for.body.i.i.i.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.i.i.i.prol ], [ 0, %for.body.i.i.i.i.preheader ]
  %arrayidx.i.i.i.i.prol = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.i.i.i.i.prol
  %arrayidx3.i.i.i.i.prol = getelementptr inbounds i32, ptr %0, i64 %indvars.iv.i.i.i.i.prol
  %10 = load i32, ptr %arrayidx3.i.i.i.i.prol, align 4, !tbaa !140
  store i32 %10, ptr %arrayidx.i.i.i.i.prol, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.prol = add nuw nsw i64 %indvars.iv.i.i.i.i.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.prol, !llvm.loop !390

for.body.i.i.i.i.prol.loopexit:                   ; preds = %for.body.i.i.i.i.prol, %for.body.i.i.i.i.preheader
  %indvars.iv.i.i.i.i.unr = phi i64 [ %indvars.iv.i.i.i.i.ph, %for.body.i.i.i.i.preheader ], [ %indvars.iv.next.i.i.i.i.prol, %for.body.i.i.i.i.prol ]
  %11 = icmp ult i64 %9, 3
  br i1 %11, label %if.then.i11.i.i.i, label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i.prol.loopexit, %for.body.i.i.i.i
  %indvars.iv.i.i.i.i = phi i64 [ %indvars.iv.next.i.i.i.i.3, %for.body.i.i.i.i ], [ %indvars.iv.i.i.i.i.unr, %for.body.i.i.i.i.prol.loopexit ]
  %arrayidx.i.i.i.i = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.i.i.i.i
  %arrayidx3.i.i.i.i = getelementptr inbounds i32, ptr %0, i64 %indvars.iv.i.i.i.i
  %12 = load i32, ptr %arrayidx3.i.i.i.i, align 4, !tbaa !140
  store i32 %12, ptr %arrayidx.i.i.i.i, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i.i, 1
  %arrayidx.i.i.i.i.1 = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.next.i.i.i.i
  %arrayidx3.i.i.i.i.1 = getelementptr inbounds i32, ptr %0, i64 %indvars.iv.next.i.i.i.i
  %13 = load i32, ptr %arrayidx3.i.i.i.i.1, align 4, !tbaa !140
  store i32 %13, ptr %arrayidx.i.i.i.i.1, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i.i, 2
  %arrayidx.i.i.i.i.2 = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.next.i.i.i.i.1
  %arrayidx3.i.i.i.i.2 = getelementptr inbounds i32, ptr %0, i64 %indvars.iv.next.i.i.i.i.1
  %14 = load i32, ptr %arrayidx3.i.i.i.i.2, align 4, !tbaa !140
  store i32 %14, ptr %arrayidx.i.i.i.i.2, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.2 = add nuw nsw i64 %indvars.iv.i.i.i.i, 3
  %arrayidx.i.i.i.i.3 = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.next.i.i.i.i.2
  %arrayidx3.i.i.i.i.3 = getelementptr inbounds i32, ptr %0, i64 %indvars.iv.next.i.i.i.i.2
  %15 = load i32, ptr %arrayidx3.i.i.i.i.3, align 4, !tbaa !140
  store i32 %15, ptr %arrayidx.i.i.i.i.3, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i.i, 4
  %exitcond.not.i.i.i.i.3 = icmp eq i64 %indvars.iv.next.i.i.i.i.3, %wide.trip.count.i.i.i.i
  br i1 %exitcond.not.i.i.i.i.3, label %if.then.i11.i.i.i, label %for.body.i.i.i.i, !llvm.loop !391

_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i: ; preds = %_ZN20btAlignedObjectArrayIiE8allocateEi.exit.i.i.i
  %tobool.not.i10.i.i.i = icmp eq ptr %0, null
  %16 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i = icmp eq i8 %16, 0
  %or.cond = select i1 %tobool.not.i10.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i
  br i1 %or.cond, label %for.body10.lr.ph.i.i, label %if.then3.i.i.i.i

if.then.i11.i.i.i:                                ; preds = %for.body.i.i.i.i.prol.loopexit, %for.body.i.i.i.i, %middle.block
  %.old = load i8, ptr %m_ownsMemory.i.i, align 8, !tbaa !130, !range !159, !noundef !192
  %tobool2.not.i.i.i.i.old = icmp eq i8 %.old, 0
  br i1 %tobool2.not.i.i.i.i.old, label %for.body10.lr.ph.i.i, label %if.then3.i.i.i.i

if.then3.i.i.i.i:                                 ; preds = %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i, %if.then.i11.i.i.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
          to label %for.body10.lr.ph.i.i unwind label %lpad

for.body10.lr.ph.i.i:                             ; preds = %if.then.i11.i.i.i, %if.then3.i.i.i.i, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !130
  store ptr %call.i.i.i.i.i4, ptr %m_data.i.i, align 8, !tbaa !131
  store i32 %div.i, ptr %m_capacity.i.i, align 8, !tbaa !133
  %wide.trip.count.i.i = sext i32 %div.i to i64
  %min.iters.check16 = icmp ult i32 %div.i, 12
  br i1 %min.iters.check16, label %for.body10.i.i.preheader, label %vector.memcheck12

vector.memcheck12:                                ; preds = %for.body10.lr.ph.i.i
  %17 = shl nsw i64 %wide.trip.count.i.i, 2
  %scevgep = getelementptr i8, ptr %call.i.i.i.i.i4, i64 %17
  %scevgep13 = getelementptr i8, ptr %init, i64 4
  %bound0 = icmp ult ptr %call.i.i.i.i.i4, %scevgep13
  %bound1 = icmp ugt ptr %scevgep, %init
  %found.conflict = and i1 %bound0, %bound1
  br i1 %found.conflict, label %for.body10.i.i.preheader, label %vector.ph17

vector.ph17:                                      ; preds = %vector.memcheck12
  %n.vec19 = and i64 %wide.trip.count.i.i, -8
  %18 = load i32, ptr %init, align 4, !tbaa !140, !alias.scope !392
  %broadcast.splatinsert24 = insertelement <4 x i32> poison, i32 %18, i64 0
  %broadcast.splat25 = shufflevector <4 x i32> %broadcast.splatinsert24, <4 x i32> poison, <4 x i32> zeroinitializer
  br label %vector.body22

vector.body22:                                    ; preds = %vector.body22, %vector.ph17
  %index23 = phi i64 [ 0, %vector.ph17 ], [ %index.next26, %vector.body22 ]
  %19 = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %index23
  store <4 x i32> %broadcast.splat25, ptr %19, align 4, !tbaa !140, !alias.scope !395, !noalias !392
  %20 = getelementptr inbounds i32, ptr %19, i64 4
  store <4 x i32> %broadcast.splat25, ptr %20, align 4, !tbaa !140, !alias.scope !395, !noalias !392
  %index.next26 = add nuw i64 %index23, 8
  %21 = icmp eq i64 %index.next26, %n.vec19
  br i1 %21, label %middle.block14, label %vector.body22, !llvm.loop !397

middle.block14:                                   ; preds = %vector.body22
  %cmp.n21 = icmp eq i64 %n.vec19, %wide.trip.count.i.i
  br i1 %cmp.n21, label %_ZN11btSymMatrixIiE6resizeEiRKi.exit, label %for.body10.i.i.preheader

for.body10.i.i.preheader:                         ; preds = %vector.memcheck12, %for.body10.lr.ph.i.i, %middle.block14
  %indvars.iv.i.i.ph = phi i64 [ 0, %vector.memcheck12 ], [ 0, %for.body10.lr.ph.i.i ], [ %n.vec19, %middle.block14 ]
  %22 = xor i64 %indvars.iv.i.i.ph, -1
  %23 = add nsw i64 %22, %wide.trip.count.i.i
  %xtraiter29 = and i64 %wide.trip.count.i.i, 3
  %lcmp.mod30.not = icmp eq i64 %xtraiter29, 0
  br i1 %lcmp.mod30.not, label %for.body10.i.i.prol.loopexit, label %for.body10.i.i.prol

for.body10.i.i.prol:                              ; preds = %for.body10.i.i.preheader, %for.body10.i.i.prol
  %indvars.iv.i.i.prol = phi i64 [ %indvars.iv.next.i.i.prol, %for.body10.i.i.prol ], [ %indvars.iv.i.i.ph, %for.body10.i.i.preheader ]
  %prol.iter31 = phi i64 [ %prol.iter31.next, %for.body10.i.i.prol ], [ 0, %for.body10.i.i.preheader ]
  %arrayidx13.i.i.prol = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.i.i.prol
  %24 = load i32, ptr %init, align 4, !tbaa !140
  store i32 %24, ptr %arrayidx13.i.i.prol, align 4, !tbaa !140
  %indvars.iv.next.i.i.prol = add nuw nsw i64 %indvars.iv.i.i.prol, 1
  %prol.iter31.next = add i64 %prol.iter31, 1
  %prol.iter31.cmp.not = icmp eq i64 %prol.iter31.next, %xtraiter29
  br i1 %prol.iter31.cmp.not, label %for.body10.i.i.prol.loopexit, label %for.body10.i.i.prol, !llvm.loop !398

for.body10.i.i.prol.loopexit:                     ; preds = %for.body10.i.i.prol, %for.body10.i.i.preheader
  %indvars.iv.i.i.unr = phi i64 [ %indvars.iv.i.i.ph, %for.body10.i.i.preheader ], [ %indvars.iv.next.i.i.prol, %for.body10.i.i.prol ]
  %25 = icmp ult i64 %23, 3
  br i1 %25, label %_ZN11btSymMatrixIiE6resizeEiRKi.exit, label %for.body10.i.i

for.body10.i.i:                                   ; preds = %for.body10.i.i.prol.loopexit, %for.body10.i.i
  %indvars.iv.i.i = phi i64 [ %indvars.iv.next.i.i.3, %for.body10.i.i ], [ %indvars.iv.i.i.unr, %for.body10.i.i.prol.loopexit ]
  %arrayidx13.i.i = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.i.i
  %26 = load i32, ptr %init, align 4, !tbaa !140
  store i32 %26, ptr %arrayidx13.i.i, align 4, !tbaa !140
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %arrayidx13.i.i.1 = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.next.i.i
  %27 = load i32, ptr %init, align 4, !tbaa !140
  store i32 %27, ptr %arrayidx13.i.i.1, align 4, !tbaa !140
  %indvars.iv.next.i.i.1 = add nuw nsw i64 %indvars.iv.i.i, 2
  %arrayidx13.i.i.2 = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.next.i.i.1
  %28 = load i32, ptr %init, align 4, !tbaa !140
  store i32 %28, ptr %arrayidx13.i.i.2, align 4, !tbaa !140
  %indvars.iv.next.i.i.2 = add nuw nsw i64 %indvars.iv.i.i, 3
  %arrayidx13.i.i.3 = getelementptr inbounds i32, ptr %call.i.i.i.i.i4, i64 %indvars.iv.next.i.i.2
  %29 = load i32, ptr %init, align 4, !tbaa !140
  store i32 %29, ptr %arrayidx13.i.i.3, align 4, !tbaa !140
  %indvars.iv.next.i.i.3 = add nuw nsw i64 %indvars.iv.i.i, 4
  %exitcond.not.i.i.3 = icmp eq i64 %indvars.iv.next.i.i.3, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i.3, label %_ZN11btSymMatrixIiE6resizeEiRKi.exit, label %for.body10.i.i, !llvm.loop !399

_ZN11btSymMatrixIiE6resizeEiRKi.exit:             ; preds = %for.body10.i.i.prol.loopexit, %for.body10.i.i, %middle.block14, %entry
  store i32 %div.i, ptr %m_size.i.i, align 4, !tbaa !132
  ret void

lpad:                                             ; preds = %if.then3.i.i.i.i, %if.then.i.i.i.i
  %30 = landingpad { ptr, i32 }
          cleanup
  invoke void @_ZN20btAlignedObjectArrayIiED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this)
          to label %eh.resume unwind label %terminate.lpad

eh.resume:                                        ; preds = %lpad
  resume { ptr, i32 } %30

terminate.lpad:                                   ; preds = %lpad
  %31 = landingpad { ptr, i32 }
          catch ptr null
  %32 = extractvalue { ptr, i32 } %31, 0
  tail call void @__clang_call_terminate(ptr %32) #39
  unreachable
}

; Function Attrs: uwtable
define dso_local noundef zeroext i1 @_ZN10btSoftBody7cutLinkEPKNS_4NodeES2_f(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %node0, ptr noundef %node1, float noundef %position) local_unnamed_addr #4 align 2 {
entry:
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %sub.ptr.lhs.cast = ptrtoint ptr %node0 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %0 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 120
  %conv = trunc i64 %sub.ptr.div to i32
  %sub.ptr.lhs.cast4 = ptrtoint ptr %node1 to i64
  %sub.ptr.sub6 = sub i64 %sub.ptr.lhs.cast4, %sub.ptr.rhs.cast
  %sub.ptr.div7 = sdiv exact i64 %sub.ptr.sub6, 120
  %conv8 = trunc i64 %sub.ptr.div7 to i32
  %call9 = tail call noundef zeroext i1 @_ZN10btSoftBody7cutLinkEiif(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %conv, i32 noundef %conv8, float noundef %position)
  ret i1 %call9
}

; Function Attrs: uwtable
define dso_local noundef zeroext i1 @_ZN10btSoftBody7cutLinkEiif(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %node0, i32 noundef %node1, float noundef %position) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %l.sroa.7.i367 = alloca <{ [2 x ptr], float, i8, [3 x i8], float, float, float, %class.btVector3, [4 x i8] }>, align 8
  %l.sroa.7.i = alloca <{ [2 x ptr], float, i8, [3 x i8], float, float, float, %class.btVector3, [4 x i8] }>, align 8
  %f.sroa.7.i = alloca { [3 x ptr], %class.btVector3, float, ptr }, align 8
  %x = alloca %class.btVector3, align 8
  %pn = alloca [2 x ptr], align 16
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %x) #38
  %m_data.i182 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %0 = load ptr, ptr %m_data.i182, align 8, !tbaa !87
  %idxprom.i183 = sext i32 %node0 to i64
  %m_x8 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i183, i32 1
  %idxprom.i186 = sext i32 %node1 to i64
  %m_x11 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i186, i32 1
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %m_x11, i64 0, i64 2
  %1 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %arrayidx13.i.i = getelementptr inbounds [4 x float], ptr %m_x8, i64 0, i64 2
  %2 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %1, %2
  %mul8.i.i = fmul float %sub14.i.i, %position
  %3 = load <2 x float>, ptr %m_x11, align 4, !tbaa !137
  %4 = load <2 x float>, ptr %m_x8, align 4, !tbaa !137
  %5 = fsub <2 x float> %3, %4
  %6 = insertelement <2 x float> poison, float %position, i64 0
  %7 = shufflevector <2 x float> %6, <2 x float> poison, <2 x i32> zeroinitializer
  %8 = fmul <2 x float> %5, %7
  %9 = fadd <2 x float> %4, %8
  %add14.i.i = fadd float %2, %mul8.i.i
  %retval.sroa.3.12.vec.insert.i20.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i, i64 0
  store <2 x float> %9, ptr %x, align 8
  %10 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %x, i64 0, i32 1
  store <2 x float> %retval.sroa.3.12.vec.insert.i20.i, ptr %10, align 8
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i183, i32 3
  %m_v18 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %0, i64 %idxprom.i186, i32 3
  %arrayidx11.i.i198 = getelementptr inbounds [4 x float], ptr %m_v18, i64 0, i64 2
  %11 = load float, ptr %arrayidx11.i.i198, align 4, !tbaa !137
  %arrayidx13.i.i199 = getelementptr inbounds [4 x float], ptr %m_v, i64 0, i64 2
  %12 = load float, ptr %arrayidx13.i.i199, align 4, !tbaa !137
  %sub14.i.i200 = fsub float %11, %12
  %mul8.i.i203 = fmul float %sub14.i.i200, %position
  %13 = load <2 x float>, ptr %m_v18, align 4, !tbaa !137
  %14 = load <2 x float>, ptr %m_v, align 4, !tbaa !137
  %15 = fsub <2 x float> %13, %14
  %16 = fmul <2 x float> %15, %7
  %17 = fadd <2 x float> %14, %16
  %add14.i.i206 = fadd float %12, %mul8.i.i203
  %retval.sroa.3.12.vec.insert.i20.i209 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i206, i64 0
  call void @_ZN10btSoftBody10appendNodeERK9btVector3f(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(16) %x, float noundef 1.000000e+00)
  call void @_ZN10btSoftBody10appendNodeERK9btVector3f(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(16) %x, float noundef 1.000000e+00)
  %18 = load ptr, ptr %m_data.i182, align 8, !tbaa !87
  %arrayidx.i214 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %idxprom.i183
  %arrayidx.i217 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %idxprom.i186
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %pn) #38
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %19 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %sub = add nsw i32 %19, -2
  %idxprom.i219 = sext i32 %sub to i64
  %arrayidx.i220 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %idxprom.i219
  store ptr %arrayidx.i220, ptr %pn, align 16, !tbaa !219
  %arrayinit.element = getelementptr inbounds ptr, ptr %pn, i64 1
  %sub32 = add nsw i32 %19, -1
  %idxprom.i223 = sext i32 %sub32 to i64
  %arrayidx.i224 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %idxprom.i223
  store ptr %arrayidx.i224, ptr %arrayinit.element, align 8, !tbaa !219
  %m_v34 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %idxprom.i219, i32 3
  store <2 x float> %17, ptr %m_v34, align 8, !tbaa.struct !163
  %v.sroa.5.0.m_v34.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %idxprom.i219, i32 3, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i20.i209, ptr %v.sroa.5.0.m_v34.sroa_idx, align 8, !tbaa.struct !165
  %m_v36 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %idxprom.i223, i32 3
  store <2 x float> %17, ptr %m_v36, align 8, !tbaa.struct !163
  %v.sroa.5.0.m_v36.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 %idxprom.i223, i32 3, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i20.i209, ptr %v.sroa.5.0.m_v36.sroa_idx, align 8, !tbaa.struct !165
  %m_size.i225 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %20 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  %cmp423 = icmp sgt i32 %20, 0
  br i1 %cmp423, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i226 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %wide.trip.count = zext i32 %20 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end ]
  %done.0425 = phi i8 [ 0, %for.body.lr.ph ], [ %done.1, %if.end ]
  %21 = load ptr, ptr %m_data.i226, align 8, !tbaa !91
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %21, i64 %indvars.iv, i32 1
  %22 = load ptr, ptr %m_n, align 8, !tbaa !219
  %arrayidx44 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %21, i64 %indvars.iv, i32 1, i64 1
  %23 = load ptr, ptr %arrayidx44, align 8, !tbaa !219
  %cmp.i = icmp eq ptr %22, %arrayidx.i214
  %cmp1.i = icmp eq ptr %23, %arrayidx.i217
  %or.cond.i = and i1 %cmp.i, %cmp1.i
  %cmp2.i = icmp eq ptr %22, %arrayidx.i217
  %cmp4.i = icmp eq ptr %23, %arrayidx.i214
  %or.cond11.i = and i1 %cmp2.i, %cmp4.i
  %spec.select.i = select i1 %or.cond11.i, i32 1, i32 -1
  %retval.0.i = select i1 %or.cond.i, i32 0, i32 %spec.select.i
  %cmp46.not = icmp eq i32 %retval.0.i, -1
  br i1 %cmp46.not, label %if.end, label %if.then

if.then:                                          ; preds = %for.body
  %24 = trunc i64 %indvars.iv to i32
  tail call void @_ZN10btSoftBody10appendLinkEiPNS_8MaterialE(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %24, ptr noundef null)
  %25 = load ptr, ptr %m_data.i226, align 8, !tbaa !91
  %26 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  %sub54 = add nsw i32 %26, -1
  %idxprom.i237 = sext i32 %sub54 to i64
  %idxprom = zext i32 %retval.0.i to i64
  %arrayidx56 = getelementptr inbounds [2 x ptr], ptr %pn, i64 0, i64 %idxprom
  %27 = load ptr, ptr %arrayidx56, align 8, !tbaa !219
  %arrayidx59 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %25, i64 %indvars.iv, i32 1, i64 1
  store ptr %27, ptr %arrayidx59, align 8, !tbaa !219
  %sub60 = sub nuw nsw i32 1, %retval.0.i
  %idxprom61 = zext i32 %sub60 to i64
  %arrayidx62 = getelementptr inbounds [2 x ptr], ptr %pn, i64 0, i64 %idxprom61
  %28 = load ptr, ptr %arrayidx62, align 8, !tbaa !219
  %m_n64 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %25, i64 %idxprom.i237, i32 1
  store ptr %28, ptr %m_n64, align 8, !tbaa !219
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %done.1 = phi i8 [ 1, %if.then ], [ %done.0425, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %if.end, %entry
  %done.0.lcssa = phi i8 [ 0, %entry ], [ %done.1, %if.end ]
  %m_size.i239 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %29 = load i32, ptr %m_size.i239, align 4, !tbaa !96
  %cmp68428 = icmp sgt i32 %29, 0
  br i1 %cmp68428, label %for.cond70.preheader.lr.ph, label %for.end131

for.cond70.preheader.lr.ph:                       ; preds = %for.end
  %m_data.i240 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %m_capacity.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 3
  %m_ownsMemory.i.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 6
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %m_data.i6.i328 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 17, i32 5
  %m_capacity.i.i.i330 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 3
  %m_ownsMemory.i.i.i.i358 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 6
  %m_bUpdateRtCst.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  %wide.trip.count438 = zext i32 %29 to i64
  br label %for.cond70.preheader

for.cond70.preheader:                             ; preds = %for.cond70.preheader.lr.ph, %for.cond.cleanup
  %indvars.iv435 = phi i64 [ 0, %for.cond70.preheader.lr.ph ], [ %indvars.iv.next436, %for.cond.cleanup ]
  br label %for.body72

for.cond.cleanup:                                 ; preds = %if.end125
  %indvars.iv.next436 = add nuw nsw i64 %indvars.iv435, 1
  %exitcond439.not = icmp eq i64 %indvars.iv.next436, %wide.trip.count438
  br i1 %exitcond439.not, label %for.end131, label %for.cond70.preheader

for.body72:                                       ; preds = %for.cond70.preheader, %if.end125
  %indvars.iv430 = phi i64 [ 0, %for.cond70.preheader ], [ %indvars.iv.next431.pre-phi, %if.end125 ]
  %k.0426 = phi i64 [ 2, %for.cond70.preheader ], [ %indvars.iv430, %if.end125 ]
  %30 = load ptr, ptr %m_data.i240, align 8, !tbaa !95
  %idxprom77 = and i64 %k.0426, 4294967295
  %arrayidx78 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %30, i64 %indvars.iv435, i32 1, i64 %idxprom77
  %31 = load ptr, ptr %arrayidx78, align 8, !tbaa !219
  %arrayidx83 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %30, i64 %indvars.iv435, i32 1, i64 %indvars.iv430
  %32 = load ptr, ptr %arrayidx83, align 8, !tbaa !219
  %cmp.i246 = icmp eq ptr %31, %arrayidx.i214
  %cmp1.i247 = icmp eq ptr %32, %arrayidx.i217
  %or.cond.i248 = and i1 %cmp.i246, %cmp1.i247
  %cmp2.i249 = icmp eq ptr %31, %arrayidx.i217
  %cmp4.i250 = icmp eq ptr %32, %arrayidx.i214
  %or.cond11.i251 = and i1 %cmp2.i249, %cmp4.i250
  %spec.select.i252 = select i1 %or.cond11.i251, i32 1, i32 -1
  %retval.0.i253 = select i1 %or.cond.i248, i32 0, i32 %spec.select.i252
  %cmp85.not = icmp eq i32 %retval.0.i253, -1
  br i1 %cmp85.not, label %for.body72.if.end125_crit_edge, label %if.then86

for.body72.if.end125_crit_edge:                   ; preds = %for.body72
  %.pre441 = add nuw nsw i64 %indvars.iv430, 1
  br label %if.end125

if.then86:                                        ; preds = %for.body72
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %f.sroa.7.i)
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %30, i64 %indvars.iv435
  %33 = load <2 x ptr>, ptr %arrayidx.i.i, align 8
  %f.sroa.7.0.arrayidx.i.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i.i, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.i, ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.0.arrayidx.i.sroa_idx.i, i64 56, i1 false)
  %34 = load i32, ptr %m_size.i239, align 4, !tbaa !96
  %35 = load i32, ptr %m_capacity.i.i.i, align 8, !tbaa !97
  %cmp.i.i = icmp eq i32 %34, %35
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN10btSoftBody10appendFaceEiPNS_8MaterialE.exit

if.then.i.i:                                      ; preds = %if.then86
  %tobool.not.i.i.i = icmp eq i32 %34, 0
  %mul.i.i.i = shl nsw i32 %34, 1
  %cond.i.i.i = select i1 %tobool.not.i.i.i, i32 1, i32 %mul.i.i.i
  %cmp.i.i.i = icmp slt i32 %34, %cond.i.i.i
  br i1 %cmp.i.i.i, label %if.then.i.i.i, label %_ZN10btSoftBody10appendFaceEiPNS_8MaterialE.exit

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %tobool.not.i.i.i.i = icmp eq i32 %cond.i.i.i, 0
  br i1 %tobool.not.i.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i, label %if.then.i.i.i.i

if.then.i.i.i.i:                                  ; preds = %if.then.i.i.i
  %conv.i.i.i.i.i = sext i32 %cond.i.i.i to i64
  %mul.i.i.i.i.i = mul nsw i64 %conv.i.i.i.i.i, 72
  %call.i.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i.i, i32 noundef 16)
  %.pre.i.i = load i32, ptr %m_size.i239, align 4, !tbaa !96
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i: ; preds = %if.then.i.i.i.i, %if.then.i.i.i
  %36 = phi i32 [ %.pre.i.i, %if.then.i.i.i.i ], [ %34, %if.then.i.i.i ]
  %retval.0.i.i.i.i = phi ptr [ %call.i.i.i.i.i, %if.then.i.i.i.i ], [ null, %if.then.i.i.i ]
  %cmp7.i.i.i.i = icmp sgt i32 %36, 0
  br i1 %cmp7.i.i.i.i, label %for.body.lr.ph.i.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i

for.body.lr.ph.i.i.i.i:                           ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i
  %wide.trip.count.i.i.i.i = zext i32 %36 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i.i, 1
  %37 = icmp eq i32 %36, 1
  br i1 %37, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.i.new

for.body.lr.ph.i.i.i.i.new:                       ; preds = %for.body.lr.ph.i.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i.i, 4294967294
  br label %for.body.i.i.i.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i, %for.body.lr.ph.i.i.i.i.new
  %indvars.iv.i.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.i.new ], [ %indvars.iv.next.i.i.i.i.1, %for.body.i.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.i.new ], [ %niter.next.1, %for.body.i.i.i.i ]
  %arrayidx.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %retval.0.i.i.i.i, i64 %indvars.iv.i.i.i.i
  %38 = load ptr, ptr %m_data.i240, align 8, !tbaa !95
  %arrayidx3.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %38, i64 %indvars.iv.i.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i = or i64 %indvars.iv.i.i.i.i, 1
  %arrayidx.i.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %retval.0.i.i.i.i, i64 %indvars.iv.next.i.i.i.i
  %39 = load ptr, ptr %m_data.i240, align 8, !tbaa !95
  %arrayidx3.i.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %39, i64 %indvars.iv.next.i.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i.1, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.i.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i.i, %for.body.lr.ph.i.i.i.i
  %indvars.iv.i.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i.i ], [ %indvars.iv.next.i.i.i.i.1, %for.body.i.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i, label %for.body.i.i.i.i.epil

for.body.i.i.i.i.epil:                            ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Face", ptr %retval.0.i.i.i.i, i64 %indvars.iv.i.i.i.i.unr
  %40 = load ptr, ptr %m_data.i240, align 8, !tbaa !95
  %arrayidx3.i.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::Face", ptr %40, i64 %indvars.iv.i.i.i.i.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i.epil, i64 72, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i: ; preds = %for.body.i.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE8allocateEi.exit.i.i.i
  %41 = load ptr, ptr %m_data.i240, align 8, !tbaa !95
  %tobool.not.i10.i.i.i = icmp eq ptr %41, null
  %42 = load i8, ptr %m_ownsMemory.i.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i = icmp eq i8 %42, 0
  %or.cond.i.i.i = select i1 %tobool.not.i10.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i
  br i1 %or.cond.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i, label %if.then3.i.i.i.i

if.then3.i.i.i.i:                                 ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %41)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i: ; preds = %if.then3.i.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody4FaceEE4copyEiiPS1_.exit.i.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i.i, align 8, !tbaa !94
  store ptr %retval.0.i.i.i.i, ptr %m_data.i240, align 8, !tbaa !95
  store i32 %cond.i.i.i, ptr %m_capacity.i.i.i, align 8, !tbaa !97
  %.pre7.i.i = load i32, ptr %m_size.i239, align 4, !tbaa !96
  br label %_ZN10btSoftBody10appendFaceEiPNS_8MaterialE.exit

_ZN10btSoftBody10appendFaceEiPNS_8MaterialE.exit: ; preds = %if.then86, %if.then.i.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i
  %43 = phi ptr [ %retval.0.i.i.i.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i ], [ %30, %if.then.i.i ], [ %30, %if.then86 ]
  %44 = phi i32 [ %.pre7.i.i, %_ZN20btAlignedObjectArrayIN10btSoftBody4FaceEE10deallocateEv.exit.i.i.i ], [ %34, %if.then.i.i ], [ %34, %if.then86 ]
  %idxprom.i8.i = sext i32 %44 to i64
  %arrayidx.i9.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %43, i64 %idxprom.i8.i
  store <2 x ptr> %33, ptr %arrayidx.i9.i, align 8
  %f.sroa.7.0.arrayidx.i9.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i9.i, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.0.arrayidx.i9.sroa_idx.i, ptr noundef nonnull align 8 dereferenceable(56) %f.sroa.7.i, i64 56, i1 false)
  %45 = load i32, ptr %m_size.i239, align 4, !tbaa !96
  %inc.i.i = add nsw i32 %45, 1
  store i32 %inc.i.i, ptr %m_size.i239, align 4, !tbaa !96
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %f.sroa.7.i)
  %46 = load ptr, ptr %m_data.i240, align 8, !tbaa !95
  %idxprom.i260 = sext i32 %45 to i64
  %idxprom97 = sext i32 %retval.0.i253 to i64
  %arrayidx98 = getelementptr inbounds [2 x ptr], ptr %pn, i64 0, i64 %idxprom97
  %47 = load ptr, ptr %arrayidx98, align 8, !tbaa !219
  %arrayidx102 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %46, i64 %indvars.iv435, i32 1, i64 %indvars.iv430
  store ptr %47, ptr %arrayidx102, align 8, !tbaa !219
  %sub103 = sub nsw i32 1, %retval.0.i253
  %idxprom104 = zext i32 %sub103 to i64
  %arrayidx105 = getelementptr inbounds [2 x ptr], ptr %pn, i64 0, i64 %idxprom104
  %48 = load ptr, ptr %arrayidx105, align 8, !tbaa !219
  %arrayidx109 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %46, i64 %idxprom.i260, i32 1, i64 %idxprom77
  store ptr %48, ptr %arrayidx109, align 8, !tbaa !219
  %49 = load ptr, ptr %pn, align 16, !tbaa !219
  %50 = add nuw nsw i64 %indvars.iv430, 1
  %51 = icmp eq i64 %50, 3
  %52 = and i64 %50, 4294967295
  %idxprom113 = select i1 %51, i64 0, i64 %52
  %arrayidx114 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %46, i64 %indvars.iv435, i32 1, i64 %idxprom113
  %53 = load ptr, ptr %arrayidx114, align 8, !tbaa !219
  %m_material = getelementptr inbounds %"struct.btSoftBody::Face", ptr %46, i64 %indvars.iv435, i32 0, i32 1
  %54 = load ptr, ptr %m_material, align 8, !tbaa !184
  %55 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  %cmp.not32.i.i = icmp sgt i32 %55, 0
  br i1 %cmp.not32.i.i, label %for.body.lr.ph.i.i, label %if.then.i273

for.body.lr.ph.i.i:                               ; preds = %_ZN10btSoftBody10appendFaceEiPNS_8MaterialE.exit
  %56 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %57 = zext i32 %55 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %if.end.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %if.end.i.i ]
  %cmp.not34.i.i = phi i1 [ true, %for.body.lr.ph.i.i ], [ %cmp.not.i.i, %if.end.i.i ]
  %m_n.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %56, i64 %indvars.iv.i.i, i32 1
  %58 = load ptr, ptr %m_n.i.i, align 8, !tbaa !219
  %cmp5.i.i = icmp eq ptr %58, %49
  br i1 %cmp5.i.i, label %land.lhs.true.i.i, label %lor.lhs.false.i.i

land.lhs.true.i.i:                                ; preds = %for.body.i.i
  %arrayidx7.i.i263 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %56, i64 %indvars.iv.i.i, i32 1, i64 1
  %59 = load ptr, ptr %arrayidx7.i.i263, align 8, !tbaa !219
  %cmp9.i.i = icmp eq ptr %59, %53
  br i1 %cmp9.i.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i, label %lor.lhs.false.i.i

lor.lhs.false.i.i:                                ; preds = %land.lhs.true.i.i, %for.body.i.i
  %cmp13.i.i = icmp eq ptr %58, %53
  br i1 %cmp13.i.i, label %land.lhs.true14.i.i, label %if.end.i.i

land.lhs.true14.i.i:                              ; preds = %lor.lhs.false.i.i
  %arrayidx16.i.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %56, i64 %indvars.iv.i.i, i32 1, i64 1
  %60 = load ptr, ptr %arrayidx16.i.i, align 8, !tbaa !219
  %cmp18.i.i = icmp eq ptr %60, %49
  br i1 %cmp18.i.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i, label %if.end.i.i

if.end.i.i:                                       ; preds = %land.lhs.true14.i.i, %lor.lhs.false.i.i
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %cmp.not.i.i = icmp ult i64 %indvars.iv.next.i.i, %57
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %57
  br i1 %exitcond.not.i.i, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i, label %for.body.i.i

_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i: ; preds = %if.end.i.i, %land.lhs.true14.i.i, %land.lhs.true.i.i
  %cmp.not.lcssa.i.i = phi i1 [ %cmp.not.i.i, %if.end.i.i ], [ %cmp.not34.i.i, %land.lhs.true.i.i ], [ %cmp.not34.i.i, %land.lhs.true14.i.i ]
  br i1 %cmp.not.lcssa.i.i, label %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit, label %if.then.i273

if.then.i273:                                     ; preds = %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i, %_ZN10btSoftBody10appendFaceEiPNS_8MaterialE.exit
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %l.sroa.7.i)
  %61 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i.i323 = icmp eq i8 %61, 0
  br i1 %guard.uninitialized.i.i323, label %init.check.i.i326, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i, !prof !173

init.check.i.i326:                                ; preds = %if.then.i273
  %62 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  %tobool.not.i.i325 = icmp eq i32 %62, 0
  br i1 %tobool.not.i.i325, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i, label %init.i.i327

init.i.i327:                                      ; preds = %init.check.i.i326
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8, !tbaa !174
  %63 = tail call ptr @llvm.invariant.start.p0(i64 72, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i

_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i: ; preds = %init.i.i327, %init.check.i.i326, %if.then.i273
  %l.sroa.0.0.copyload11.i = load ptr, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(52) %l.sroa.7.i, ptr noundef nonnull align 8 dereferenceable(52) getelementptr inbounds (%"struct.btSoftBody::Link", ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, i64 0, i32 1, i64 0), i64 52, i1 false)
  %tobool.not.i = icmp eq ptr %54, null
  br i1 %tobool.not.i, label %cond.false.i, label %if.end.i332

cond.false.i:                                     ; preds = %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i
  %64 = load ptr, ptr %m_data.i6.i328, align 8, !tbaa !119
  %65 = load ptr, ptr %64, align 8, !tbaa !219
  br label %if.end.i332

if.end.i332:                                      ; preds = %cond.false.i, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i
  %l.sroa.6.0.i = phi ptr [ %65, %cond.false.i ], [ %54, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i ]
  %66 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  %67 = load i32, ptr %m_capacity.i.i.i330, align 8, !tbaa !93
  %cmp.i.i331 = icmp eq i32 %66, %67
  br i1 %cmp.i.i331, label %if.then.i.i337, label %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit

if.then.i.i337:                                   ; preds = %if.end.i332
  %tobool.not.i.i.i333 = icmp eq i32 %66, 0
  %mul.i.i.i334 = shl nsw i32 %66, 1
  %cond.i.i.i335 = select i1 %tobool.not.i.i.i333, i32 1, i32 %mul.i.i.i334
  %cmp.i.i.i336 = icmp slt i32 %66, %cond.i.i.i335
  br i1 %cmp.i.i.i336, label %if.then.i.i.i339, label %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit

if.then.i.i.i339:                                 ; preds = %if.then.i.i337
  %tobool.not.i.i.i.i338 = icmp eq i32 %cond.i.i.i335, 0
  br i1 %tobool.not.i.i.i.i338, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i, label %if.then.i.i.i.i344

if.then.i.i.i.i344:                               ; preds = %if.then.i.i.i339
  %conv.i.i.i.i.i340 = sext i32 %cond.i.i.i335 to i64
  %mul.i.i.i.i.i341 = mul nsw i64 %conv.i.i.i.i.i340, 72
  %call.i.i.i.i.i342 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i.i341, i32 noundef 16)
  %.pre.i.i343 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i: ; preds = %if.then.i.i.i.i344, %if.then.i.i.i339
  %68 = phi i32 [ %.pre.i.i343, %if.then.i.i.i.i344 ], [ %66, %if.then.i.i.i339 ]
  %retval.0.i.i.i.i345 = phi ptr [ %call.i.i.i.i.i342, %if.then.i.i.i.i344 ], [ null, %if.then.i.i.i339 ]
  %cmp7.i.i.i.i346 = icmp sgt i32 %68, 0
  br i1 %cmp7.i.i.i.i346, label %for.body.lr.ph.i.i.i.i349, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i

for.body.lr.ph.i.i.i.i349:                        ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i
  %wide.trip.count.i.i.i.i348 = zext i32 %68 to i64
  %xtraiter442 = and i64 %wide.trip.count.i.i.i.i348, 1
  %69 = icmp eq i32 %68, 1
  br i1 %69, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.i349.new

for.body.lr.ph.i.i.i.i349.new:                    ; preds = %for.body.lr.ph.i.i.i.i349
  %unroll_iter444 = and i64 %wide.trip.count.i.i.i.i348, 4294967294
  br label %for.body.i.i.i.i355

for.body.i.i.i.i355:                              ; preds = %for.body.i.i.i.i355, %for.body.lr.ph.i.i.i.i349.new
  %indvars.iv.i.i.i.i350 = phi i64 [ 0, %for.body.lr.ph.i.i.i.i349.new ], [ %indvars.iv.next.i.i.i.i353.1, %for.body.i.i.i.i355 ]
  %niter445 = phi i64 [ 0, %for.body.lr.ph.i.i.i.i349.new ], [ %niter445.next.1, %for.body.i.i.i.i355 ]
  %arrayidx.i.i.i.i351 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i345, i64 %indvars.iv.i.i.i.i350
  %70 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %arrayidx3.i.i.i.i352 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %70, i64 %indvars.iv.i.i.i.i350
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i351, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i352, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i353 = or i64 %indvars.iv.i.i.i.i350, 1
  %arrayidx.i.i.i.i351.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i345, i64 %indvars.iv.next.i.i.i.i353
  %71 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %arrayidx3.i.i.i.i352.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %71, i64 %indvars.iv.next.i.i.i.i353
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i351.1, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i352.1, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i353.1 = add nuw nsw i64 %indvars.iv.i.i.i.i350, 2
  %niter445.next.1 = add i64 %niter445, 2
  %niter445.ncmp.1 = icmp eq i64 %niter445.next.1, %unroll_iter444
  br i1 %niter445.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, label %for.body.i.i.i.i355

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i.i355, %for.body.lr.ph.i.i.i.i349
  %indvars.iv.i.i.i.i350.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i.i349 ], [ %indvars.iv.next.i.i.i.i353.1, %for.body.i.i.i.i355 ]
  %lcmp.mod443.not = icmp eq i64 %xtraiter442, 0
  br i1 %lcmp.mod443.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i, label %for.body.i.i.i.i355.epil

for.body.i.i.i.i355.epil:                         ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.i351.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i345, i64 %indvars.iv.i.i.i.i350.unr
  %72 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %arrayidx3.i.i.i.i352.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %72, i64 %indvars.iv.i.i.i.i350.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i351.epil, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i352.epil, i64 72, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i: ; preds = %for.body.i.i.i.i355.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i
  %73 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %tobool.not.i10.i.i.i357 = icmp eq ptr %73, null
  %74 = load i8, ptr %m_ownsMemory.i.i.i.i358, align 8, !range !159
  %tobool2.not.i.i.i.i359 = icmp eq i8 %74, 0
  %or.cond.i.i.i360 = select i1 %tobool.not.i10.i.i.i357, i1 true, i1 %tobool2.not.i.i.i.i359
  br i1 %or.cond.i.i.i360, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i, label %if.then3.i.i.i.i361

if.then3.i.i.i.i361:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %73)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i: ; preds = %if.then3.i.i.i.i361, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i.i358, align 8, !tbaa !90
  store ptr %retval.0.i.i.i.i345, ptr %m_data.i.i.i, align 8, !tbaa !91
  store i32 %cond.i.i.i335, ptr %m_capacity.i.i.i330, align 8, !tbaa !93
  %.pre7.i.i362 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  br label %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit

_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit: ; preds = %if.end.i332, %if.then.i.i337, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i
  %75 = phi i32 [ %.pre7.i.i362, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i ], [ %66, %if.then.i.i337 ], [ %66, %if.end.i332 ]
  %76 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %idxprom.i8.i364 = sext i32 %75 to i64
  %arrayidx.i9.i365 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %76, i64 %idxprom.i8.i364
  store ptr %l.sroa.0.0.copyload11.i, ptr %arrayidx.i9.i365, align 8
  %l.sroa.6.0.arrayidx.i9.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i9.i365, i64 8
  store ptr %l.sroa.6.0.i, ptr %l.sroa.6.0.arrayidx.i9.sroa_idx.i, align 8
  %l.sroa.7.0.arrayidx.i9.sroa_idx.i = getelementptr inbounds i8, ptr %arrayidx.i9.i365, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7.0.arrayidx.i9.sroa_idx.i, ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7.i, i64 56, i1 false)
  %77 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  %inc.i.i366 = add nsw i32 %77, 1
  store i32 %inc.i.i366, ptr %m_size.i225, align 4, !tbaa !92
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %l.sroa.7.i)
  %78 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %idxprom.i.i266 = sext i32 %77 to i64
  %m_n.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %78, i64 %idxprom.i.i266, i32 1
  store ptr %49, ptr %m_n.i, align 8, !tbaa !219
  %arrayidx6.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %78, i64 %idxprom.i.i266, i32 1, i64 1
  store ptr %53, ptr %arrayidx6.i, align 8, !tbaa !219
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %49, i64 0, i32 1
  %m_x11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %53, i64 0, i32 1
  %79 = load float, ptr %m_x.i, align 4, !tbaa !137
  %80 = load float, ptr %m_x11.i, align 4, !tbaa !137
  %sub.i.i267 = fsub float %79, %80
  %arrayidx5.i.i268 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %49, i64 0, i32 1, i32 0, i64 1
  %81 = load float, ptr %arrayidx5.i.i268, align 4, !tbaa !137
  %arrayidx7.i20.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %53, i64 0, i32 1, i32 0, i64 1
  %82 = load float, ptr %arrayidx7.i20.i, align 4, !tbaa !137
  %sub8.i.i269 = fsub float %81, %82
  %arrayidx11.i.i270 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %49, i64 0, i32 1, i32 0, i64 2
  %83 = load float, ptr %arrayidx11.i.i270, align 4, !tbaa !137
  %arrayidx13.i.i271 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %53, i64 0, i32 1, i32 0, i64 2
  %84 = load float, ptr %arrayidx13.i.i271, align 4, !tbaa !137
  %sub14.i.i272 = fsub float %83, %84
  %mul8.i.i.i.i = fmul float %sub8.i.i269, %sub8.i.i269
  %85 = tail call float @llvm.fmuladd.f32(float %sub.i.i267, float %sub.i.i267, float %mul8.i.i.i.i)
  %86 = tail call float @llvm.fmuladd.f32(float %sub14.i.i272, float %sub14.i.i272, float %85)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %86)
  %m_rl.i = getelementptr inbounds %"struct.btSoftBody::Link", ptr %78, i64 %idxprom.i.i266, i32 2
  store float %sqrt.i.i, ptr %m_rl.i, align 8, !tbaa !239
  store i8 1, ptr %m_bUpdateRtCst.i, align 4, !tbaa !147
  %.pre = load ptr, ptr %arrayidx114, align 8, !tbaa !219
  %.pre440 = load ptr, ptr %m_material, align 8, !tbaa !184
  br label %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit

_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit: ; preds = %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i, %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit
  %87 = phi i32 [ %55, %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i ], [ %inc.i.i366, %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit ]
  %88 = phi ptr [ %54, %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i ], [ %.pre440, %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit ]
  %89 = phi ptr [ %53, %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i ], [ %.pre, %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit ]
  %90 = load ptr, ptr %arrayinit.element, align 8, !tbaa !219
  %cmp.not32.i.i276 = icmp sgt i32 %87, 0
  br i1 %cmp.not32.i.i276, label %for.body.lr.ph.i.i278, label %if.then.i317

for.body.lr.ph.i.i278:                            ; preds = %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit
  %91 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %92 = zext i32 %87 to i64
  br label %for.body.i.i283

for.body.i.i283:                                  ; preds = %if.end.i.i295, %for.body.lr.ph.i.i278
  %indvars.iv.i.i279 = phi i64 [ 0, %for.body.lr.ph.i.i278 ], [ %indvars.iv.next.i.i292, %if.end.i.i295 ]
  %cmp.not34.i.i280 = phi i1 [ true, %for.body.lr.ph.i.i278 ], [ %cmp.not.i.i293, %if.end.i.i295 ]
  %m_n.i.i281 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %91, i64 %indvars.iv.i.i279, i32 1
  %93 = load ptr, ptr %m_n.i.i281, align 8, !tbaa !219
  %cmp5.i.i282 = icmp eq ptr %93, %90
  br i1 %cmp5.i.i282, label %land.lhs.true.i.i286, label %lor.lhs.false.i.i288

land.lhs.true.i.i286:                             ; preds = %for.body.i.i283
  %arrayidx7.i.i284 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %91, i64 %indvars.iv.i.i279, i32 1, i64 1
  %94 = load ptr, ptr %arrayidx7.i.i284, align 8, !tbaa !219
  %cmp9.i.i285 = icmp eq ptr %94, %89
  br i1 %cmp9.i.i285, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i297, label %lor.lhs.false.i.i288

lor.lhs.false.i.i288:                             ; preds = %land.lhs.true.i.i286, %for.body.i.i283
  %cmp13.i.i287 = icmp eq ptr %93, %89
  br i1 %cmp13.i.i287, label %land.lhs.true14.i.i291, label %if.end.i.i295

land.lhs.true14.i.i291:                           ; preds = %lor.lhs.false.i.i288
  %arrayidx16.i.i289 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %91, i64 %indvars.iv.i.i279, i32 1, i64 1
  %95 = load ptr, ptr %arrayidx16.i.i289, align 8, !tbaa !219
  %cmp18.i.i290 = icmp eq ptr %95, %90
  br i1 %cmp18.i.i290, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i297, label %if.end.i.i295

if.end.i.i295:                                    ; preds = %land.lhs.true14.i.i291, %lor.lhs.false.i.i288
  %indvars.iv.next.i.i292 = add nuw nsw i64 %indvars.iv.i.i279, 1
  %cmp.not.i.i293 = icmp ult i64 %indvars.iv.next.i.i292, %92
  %exitcond.not.i.i294 = icmp eq i64 %indvars.iv.next.i.i292, %92
  br i1 %exitcond.not.i.i294, label %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i297, label %for.body.i.i283

_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i297: ; preds = %if.end.i.i295, %land.lhs.true14.i.i291, %land.lhs.true.i.i286
  %cmp.not.lcssa.i.i296 = phi i1 [ %cmp.not.i.i293, %if.end.i.i295 ], [ %cmp.not34.i.i280, %land.lhs.true.i.i286 ], [ %cmp.not34.i.i280, %land.lhs.true14.i.i291 ]
  br i1 %cmp.not.lcssa.i.i296, label %if.end125, label %if.then.i317

if.then.i317:                                     ; preds = %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i297, %_ZN10btSoftBody10appendLinkEPNS_4NodeES1_PNS_8MaterialEb.exit
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %l.sroa.7.i367)
  %96 = load atomic i8, ptr @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy acquire, align 8
  %guard.uninitialized.i.i368 = icmp eq i8 %96, 0
  br i1 %guard.uninitialized.i.i368, label %init.check.i.i371, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i375, !prof !173

init.check.i.i371:                                ; preds = %if.then.i317
  %97 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  %tobool.not.i.i370 = icmp eq i32 %97, 0
  br i1 %tobool.not.i.i370, label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i375, label %init.i.i372

init.i.i372:                                      ; preds = %init.check.i.i371
  store ptr null, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8, !tbaa !174
  %98 = tail call ptr @llvm.invariant.start.p0(i64 72, ptr nonnull @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy) #38
  br label %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i375

_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i375: ; preds = %init.i.i372, %init.check.i.i371, %if.then.i317
  %l.sroa.0.0.copyload11.i373 = load ptr, ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, align 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(52) %l.sroa.7.i367, ptr noundef nonnull align 8 dereferenceable(52) getelementptr inbounds (%"struct.btSoftBody::Link", ptr @_ZZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_E9zerodummy, i64 0, i32 1, i64 0), i64 52, i1 false)
  %tobool.not.i374 = icmp eq ptr %88, null
  br i1 %tobool.not.i374, label %cond.false.i377, label %if.end.i382

cond.false.i377:                                  ; preds = %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i375
  %99 = load ptr, ptr %m_data.i6.i328, align 8, !tbaa !119
  %100 = load ptr, ptr %99, align 8, !tbaa !219
  br label %if.end.i382

if.end.i382:                                      ; preds = %cond.false.i377, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i375
  %l.sroa.6.0.i378 = phi ptr [ %100, %cond.false.i377 ], [ %88, %_ZL14ZeroInitializeIN10btSoftBody4LinkEEvRT_.exit.i375 ]
  %101 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  %102 = load i32, ptr %m_capacity.i.i.i330, align 8, !tbaa !93
  %cmp.i.i381 = icmp eq i32 %101, %102
  br i1 %cmp.i.i381, label %if.then.i.i387, label %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit422

if.then.i.i387:                                   ; preds = %if.end.i382
  %tobool.not.i.i.i383 = icmp eq i32 %101, 0
  %mul.i.i.i384 = shl nsw i32 %101, 1
  %cond.i.i.i385 = select i1 %tobool.not.i.i.i383, i32 1, i32 %mul.i.i.i384
  %cmp.i.i.i386 = icmp slt i32 %101, %cond.i.i.i385
  br i1 %cmp.i.i.i386, label %if.then.i.i.i389, label %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit422

if.then.i.i.i389:                                 ; preds = %if.then.i.i387
  %tobool.not.i.i.i.i388 = icmp eq i32 %cond.i.i.i385, 0
  br i1 %tobool.not.i.i.i.i388, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i397, label %if.then.i.i.i.i394

if.then.i.i.i.i394:                               ; preds = %if.then.i.i.i389
  %conv.i.i.i.i.i390 = sext i32 %cond.i.i.i385 to i64
  %mul.i.i.i.i.i391 = mul nsw i64 %conv.i.i.i.i.i390, 72
  %call.i.i.i.i.i392 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i.i391, i32 noundef 16)
  %.pre.i.i393 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i397

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i397: ; preds = %if.then.i.i.i.i394, %if.then.i.i.i389
  %103 = phi i32 [ %.pre.i.i393, %if.then.i.i.i.i394 ], [ %101, %if.then.i.i.i389 ]
  %retval.0.i.i.i.i395 = phi ptr [ %call.i.i.i.i.i392, %if.then.i.i.i.i394 ], [ null, %if.then.i.i.i389 ]
  %cmp7.i.i.i.i396 = icmp sgt i32 %103, 0
  br i1 %cmp7.i.i.i.i396, label %for.body.lr.ph.i.i.i.i400, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i412

for.body.lr.ph.i.i.i.i400:                        ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i397
  %wide.trip.count.i.i.i.i399 = zext i32 %103 to i64
  %xtraiter446 = and i64 %wide.trip.count.i.i.i.i399, 1
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i412.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.i400.new

for.body.lr.ph.i.i.i.i400.new:                    ; preds = %for.body.lr.ph.i.i.i.i400
  %unroll_iter448 = and i64 %wide.trip.count.i.i.i.i399, 4294967294
  br label %for.body.i.i.i.i406

for.body.i.i.i.i406:                              ; preds = %for.body.i.i.i.i406, %for.body.lr.ph.i.i.i.i400.new
  %indvars.iv.i.i.i.i401 = phi i64 [ 0, %for.body.lr.ph.i.i.i.i400.new ], [ %indvars.iv.next.i.i.i.i404.1, %for.body.i.i.i.i406 ]
  %niter449 = phi i64 [ 0, %for.body.lr.ph.i.i.i.i400.new ], [ %niter449.next.1, %for.body.i.i.i.i406 ]
  %arrayidx.i.i.i.i402 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i395, i64 %indvars.iv.i.i.i.i401
  %105 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %arrayidx3.i.i.i.i403 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %105, i64 %indvars.iv.i.i.i.i401
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i402, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i403, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i404 = or i64 %indvars.iv.i.i.i.i401, 1
  %arrayidx.i.i.i.i402.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i395, i64 %indvars.iv.next.i.i.i.i404
  %106 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %arrayidx3.i.i.i.i403.1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %106, i64 %indvars.iv.next.i.i.i.i404
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i402.1, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i403.1, i64 72, i1 false)
  %indvars.iv.next.i.i.i.i404.1 = add nuw nsw i64 %indvars.iv.i.i.i.i401, 2
  %niter449.next.1 = add i64 %niter449, 2
  %niter449.ncmp.1 = icmp eq i64 %niter449.next.1, %unroll_iter448
  br i1 %niter449.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i412.loopexit.unr-lcssa, label %for.body.i.i.i.i406

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i412.loopexit.unr-lcssa: ; preds = %for.body.i.i.i.i406, %for.body.lr.ph.i.i.i.i400
  %indvars.iv.i.i.i.i401.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i.i400 ], [ %indvars.iv.next.i.i.i.i404.1, %for.body.i.i.i.i406 ]
  %lcmp.mod447.not = icmp eq i64 %xtraiter446, 0
  br i1 %lcmp.mod447.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i412, label %for.body.i.i.i.i406.epil

for.body.i.i.i.i406.epil:                         ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i412.loopexit.unr-lcssa
  %arrayidx.i.i.i.i402.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %retval.0.i.i.i.i395, i64 %indvars.iv.i.i.i.i401.unr
  %107 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %arrayidx3.i.i.i.i403.epil = getelementptr inbounds %"struct.btSoftBody::Link", ptr %107, i64 %indvars.iv.i.i.i.i401.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(72) %arrayidx.i.i.i.i402.epil, ptr noundef nonnull align 8 dereferenceable(72) %arrayidx3.i.i.i.i403.epil, i64 72, i1 false)
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i412

_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i412: ; preds = %for.body.i.i.i.i406.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i412.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE8allocateEi.exit.i.i.i397
  %108 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %tobool.not.i10.i.i.i408 = icmp eq ptr %108, null
  %109 = load i8, ptr %m_ownsMemory.i.i.i.i358, align 8, !range !159
  %tobool2.not.i.i.i.i410 = icmp eq i8 %109, 0
  %or.cond.i.i.i411 = select i1 %tobool.not.i10.i.i.i408, i1 true, i1 %tobool2.not.i.i.i.i410
  br i1 %or.cond.i.i.i411, label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i415, label %if.then3.i.i.i.i413

if.then3.i.i.i.i413:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i412
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %108)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i415

_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i415: ; preds = %if.then3.i.i.i.i413, %_ZNK20btAlignedObjectArrayIN10btSoftBody4LinkEE4copyEiiPS1_.exit.i.i.i412
  store i8 1, ptr %m_ownsMemory.i.i.i.i358, align 8, !tbaa !90
  store ptr %retval.0.i.i.i.i395, ptr %m_data.i.i.i, align 8, !tbaa !91
  store i32 %cond.i.i.i385, ptr %m_capacity.i.i.i330, align 8, !tbaa !93
  %.pre7.i.i414 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  br label %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit422

_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit422: ; preds = %if.end.i382, %if.then.i.i387, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i415
  %110 = phi i32 [ %.pre7.i.i414, %_ZN20btAlignedObjectArrayIN10btSoftBody4LinkEE10deallocateEv.exit.i.i.i415 ], [ %101, %if.then.i.i387 ], [ %101, %if.end.i382 ]
  %111 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %idxprom.i8.i417 = sext i32 %110 to i64
  %arrayidx.i9.i418 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %111, i64 %idxprom.i8.i417
  store ptr %l.sroa.0.0.copyload11.i373, ptr %arrayidx.i9.i418, align 8
  %l.sroa.6.0.arrayidx.i9.sroa_idx.i419 = getelementptr inbounds i8, ptr %arrayidx.i9.i418, i64 8
  store ptr %l.sroa.6.0.i378, ptr %l.sroa.6.0.arrayidx.i9.sroa_idx.i419, align 8
  %l.sroa.7.0.arrayidx.i9.sroa_idx.i420 = getelementptr inbounds i8, ptr %arrayidx.i9.i418, i64 16
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7.0.arrayidx.i9.sroa_idx.i420, ptr noundef nonnull align 8 dereferenceable(56) %l.sroa.7.i367, i64 56, i1 false)
  %112 = load i32, ptr %m_size.i225, align 4, !tbaa !92
  %inc.i.i421 = add nsw i32 %112, 1
  store i32 %inc.i.i421, ptr %m_size.i225, align 4, !tbaa !92
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %l.sroa.7.i367)
  %113 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !91
  %idxprom.i.i301 = sext i32 %112 to i64
  %m_n.i302 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %113, i64 %idxprom.i.i301, i32 1
  store ptr %90, ptr %m_n.i302, align 8, !tbaa !219
  %arrayidx6.i303 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %113, i64 %idxprom.i.i301, i32 1, i64 1
  store ptr %89, ptr %arrayidx6.i303, align 8, !tbaa !219
  %m_x.i304 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %90, i64 0, i32 1
  %m_x11.i305 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %89, i64 0, i32 1
  %114 = load float, ptr %m_x.i304, align 4, !tbaa !137
  %115 = load float, ptr %m_x11.i305, align 4, !tbaa !137
  %sub.i.i306 = fsub float %114, %115
  %arrayidx5.i.i307 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %90, i64 0, i32 1, i32 0, i64 1
  %116 = load float, ptr %arrayidx5.i.i307, align 4, !tbaa !137
  %arrayidx7.i20.i308 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %89, i64 0, i32 1, i32 0, i64 1
  %117 = load float, ptr %arrayidx7.i20.i308, align 4, !tbaa !137
  %sub8.i.i309 = fsub float %116, %117
  %arrayidx11.i.i310 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %90, i64 0, i32 1, i32 0, i64 2
  %118 = load float, ptr %arrayidx11.i.i310, align 4, !tbaa !137
  %arrayidx13.i.i311 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %89, i64 0, i32 1, i32 0, i64 2
  %119 = load float, ptr %arrayidx13.i.i311, align 4, !tbaa !137
  %sub14.i.i312 = fsub float %118, %119
  %mul8.i.i.i.i313 = fmul float %sub8.i.i309, %sub8.i.i309
  %120 = tail call float @llvm.fmuladd.f32(float %sub.i.i306, float %sub.i.i306, float %mul8.i.i.i.i313)
  %121 = tail call float @llvm.fmuladd.f32(float %sub14.i.i312, float %sub14.i.i312, float %120)
  %sqrt.i.i314 = tail call float @llvm.sqrt.f32(float %121)
  %m_rl.i315 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %113, i64 %idxprom.i.i301, i32 2
  store float %sqrt.i.i314, ptr %m_rl.i315, align 8, !tbaa !239
  store i8 1, ptr %m_bUpdateRtCst.i, align 4, !tbaa !147
  br label %if.end125

if.end125:                                        ; preds = %for.body72.if.end125_crit_edge, %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit422, %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i297
  %indvars.iv.next431.pre-phi = phi i64 [ %.pre441, %for.body72.if.end125_crit_edge ], [ %50, %_ZN10btSoftBody10appendLinkEiPNS_8MaterialE.exit422 ], [ %50, %_ZNK10btSoftBody9checkLinkEPKNS_4NodeES2_.exit.i297 ]
  %exitcond434.not = icmp eq i64 %indvars.iv.next431.pre-phi, 3
  br i1 %exitcond434.not, label %for.cond.cleanup, label %for.body72

for.end131:                                       ; preds = %for.cond.cleanup, %for.end
  %122 = and i8 %done.0.lcssa, 1
  %tobool = icmp ne i8 %122, 0
  br i1 %tobool, label %if.end139, label %if.then132

if.then132:                                       ; preds = %for.end131
  %m_ndbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  %123 = load ptr, ptr %pn, align 16, !tbaa !219
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Node", ptr %123, i64 0, i32 8
  %124 = load ptr, ptr %m_leaf, align 8, !tbaa !183
  tail call void @_ZN6btDbvt6removeEP10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt, ptr noundef %124)
  %125 = load ptr, ptr %arrayinit.element, align 8, !tbaa !219
  %m_leaf136 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %125, i64 0, i32 8
  %126 = load ptr, ptr %m_leaf136, align 8, !tbaa !183
  tail call void @_ZN6btDbvt6removeEP10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt, ptr noundef %126)
  %127 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %dec.i322 = add nsw i32 %127, -2
  store i32 %dec.i322, ptr %m_size.i, align 4, !tbaa !88
  br label %if.end139

if.end139:                                        ; preds = %if.then132, %for.end131
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %pn) #38
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %x) #38
  ret i1 %tobool
}

; Function Attrs: uwtable
define dso_local noundef zeroext i1 @_ZN10btSoftBody7rayTestERK9btVector3S2_RNS_8sRayCastE(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, ptr nocapture noundef nonnull align 8 dereferenceable(24) %results) local_unnamed_addr #4 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !96
  %tobool.not = icmp ne i32 %0, 0
  %m_fdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 22
  %1 = load ptr, ptr %m_fdbvt, align 8
  %cmp.i = icmp eq ptr %1, null
  %or.cond = select i1 %tobool.not, i1 %cmp.i, i1 false
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  tail call void @_ZN10btSoftBody18initializeFaceTreeEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  store ptr %this, ptr %results, align 8, !tbaa !400
  %fraction = getelementptr inbounds %"struct.btSoftBody::sRayCast", ptr %results, i64 0, i32 3
  store float 1.000000e+00, ptr %fraction, align 8, !tbaa !403
  %feature = getelementptr inbounds %"struct.btSoftBody::sRayCast", ptr %results, i64 0, i32 1
  store i32 0, ptr %feature, align 8, !tbaa !404
  %index = getelementptr inbounds %"struct.btSoftBody::sRayCast", ptr %results, i64 0, i32 2
  store i32 -1, ptr %index, align 4, !tbaa !405
  %call6 = tail call noundef i32 @_ZNK10btSoftBody7rayTestERK9btVector3S2_RfRNS_8eFeature1_ERib(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, ptr noundef nonnull align 4 dereferenceable(4) %fraction, ptr noundef nonnull align 4 dereferenceable(4) %feature, ptr noundef nonnull align 4 dereferenceable(4) %index, i1 noundef zeroext false)
  %cmp = icmp ne i32 %call6, 0
  ret i1 %cmp
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody18initializeFaceTreeEv(ptr noundef nonnull align 8 dereferenceable(1496) %this) local_unnamed_addr #4 align 2 {
entry:
  %ref.tmp = alloca %struct.btDbvtAabbMm, align 8
  %m_fdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 22
  tail call void @_ZN6btDbvt5clearEv(ptr noundef nonnull align 8 dereferenceable(64) %m_fdbvt)
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !96
  %cmp10 = icmp sgt i32 %0, 0
  br i1 %cmp10, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %mx.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp, i64 0, i32 1
  %arrayidx5.i.i.i = getelementptr inbounds [4 x float], ptr %ref.tmp, i64 0, i64 1
  %arrayidx9.i.i.i = getelementptr inbounds [4 x float], ptr %ref.tmp, i64 0, i64 2
  %arrayidx13.i.i.i = getelementptr inbounds [4 x float], ptr %ref.tmp, i64 0, i64 3
  %arrayidx5.i13.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp, i64 0, i32 1, i32 0, i64 1
  %arrayidx9.i17.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp, i64 0, i32 1, i32 0, i64 2
  %arrayidx13.i21.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp, i64 0, i32 1, i32 0, i64 3
  br label %for.body

for.cond.cleanup:                                 ; preds = %_ZL8VolumeOfRKN10btSoftBody4FaceEf.exit, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %_ZL8VolumeOfRKN10btSoftBody4FaceEf.exit
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %_ZL8VolumeOfRKN10btSoftBody4FaceEf.exit ]
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !95
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 %indvars.iv
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %ref.tmp) #38
  call void @llvm.experimental.noalias.scope.decl(metadata !406)
  %m_n.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 %indvars.iv, i32 1
  %2 = load ptr, ptr %m_n.i, align 8, !tbaa !219, !noalias !406
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 1
  %arrayidx2.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 %indvars.iv, i32 1, i64 1
  %3 = load ptr, ptr %arrayidx2.i, align 8, !tbaa !219, !noalias !406
  %m_x3.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1
  %arrayidx6.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 %indvars.iv, i32 1, i64 2
  %4 = load ptr, ptr %arrayidx6.i, align 8, !tbaa !219, !noalias !406
  %m_x7.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1
  call void @llvm.experimental.noalias.scope.decl(metadata !409)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %mx.i.i, ptr noundef nonnull align 4 dereferenceable(16) %m_x.i, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %ref.tmp, ptr noundef nonnull align 4 dereferenceable(16) %m_x.i, i64 16, i1 false)
  %mx.promoted.i.i = load float, ptr %mx.i.i, align 8, !tbaa !137, !alias.scope !406
  %agg.result.promoted.i.i = load float, ptr %ref.tmp, align 8, !tbaa !137, !alias.scope !406
  %arrayidx5.i.promoted.i.i = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137, !alias.scope !406
  %arrayidx9.i.promoted.i.i = load float, ptr %arrayidx9.i.i.i, align 8, !tbaa !137, !alias.scope !406
  %arrayidx13.i.promoted.i.i = load float, ptr %arrayidx13.i.i.i, align 4, !tbaa !137, !alias.scope !412
  %arrayidx5.i13.promoted.i.i = load float, ptr %arrayidx5.i13.i.i, align 4, !tbaa !137, !alias.scope !406
  %arrayidx9.i17.promoted.i.i = load float, ptr %arrayidx9.i17.i.i, align 8, !tbaa !137, !alias.scope !406
  %arrayidx13.i21.promoted.i.i = load float, ptr %arrayidx13.i21.i.i, align 4, !tbaa !137, !alias.scope !412
  %5 = load float, ptr %m_x3.i, align 4, !tbaa !137, !noalias !412
  %cmp.i.i.i.i = fcmp olt float %5, %agg.result.promoted.i.i
  br i1 %cmp.i.i.i.i, label %if.then.i.i.i.i, label %_Z8btSetMinIfEvRT_RKS0_.exit.i.i.i

if.then.i.i.i.i:                                  ; preds = %for.body
  store float %5, ptr %ref.tmp, align 8, !tbaa !137, !alias.scope !412
  br label %_Z8btSetMinIfEvRT_RKS0_.exit.i.i.i

_Z8btSetMinIfEvRT_RKS0_.exit.i.i.i:               ; preds = %if.then.i.i.i.i, %for.body
  %6 = phi float [ %5, %if.then.i.i.i.i ], [ %agg.result.promoted.i.i, %for.body ]
  %arrayidx7.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1, i32 0, i64 1
  %7 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137, !noalias !412
  %cmp.i17.i.i.i = fcmp olt float %7, %arrayidx5.i.promoted.i.i
  br i1 %cmp.i17.i.i.i, label %if.then.i18.i.i.i, label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.i.i

if.then.i18.i.i.i:                                ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit.i.i.i
  store float %7, ptr %arrayidx5.i.i.i, align 4, !tbaa !137, !alias.scope !412
  br label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.i.i

_Z8btSetMinIfEvRT_RKS0_.exit19.i.i.i:             ; preds = %if.then.i18.i.i.i, %_Z8btSetMinIfEvRT_RKS0_.exit.i.i.i
  %8 = phi float [ %7, %if.then.i18.i.i.i ], [ %arrayidx5.i.promoted.i.i, %_Z8btSetMinIfEvRT_RKS0_.exit.i.i.i ]
  %arrayidx11.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1, i32 0, i64 2
  %9 = load float, ptr %arrayidx11.i.i.i, align 4, !tbaa !137, !noalias !412
  %cmp.i20.i.i.i = fcmp olt float %9, %arrayidx9.i.promoted.i.i
  br i1 %cmp.i20.i.i.i, label %if.then.i21.i.i.i, label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.i.i

if.then.i21.i.i.i:                                ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit19.i.i.i
  store float %9, ptr %arrayidx9.i.i.i, align 8, !tbaa !137, !alias.scope !412
  br label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.i.i

_Z8btSetMinIfEvRT_RKS0_.exit22.i.i.i:             ; preds = %if.then.i21.i.i.i, %_Z8btSetMinIfEvRT_RKS0_.exit19.i.i.i
  %10 = phi float [ %9, %if.then.i21.i.i.i ], [ %arrayidx9.i.promoted.i.i, %_Z8btSetMinIfEvRT_RKS0_.exit19.i.i.i ]
  %arrayidx.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1, i32 0, i64 3
  %11 = load float, ptr %arrayidx.i.i.i.i, align 4, !tbaa !137, !noalias !412
  %cmp.i23.i.i.i = fcmp olt float %11, %arrayidx13.i.promoted.i.i
  br i1 %cmp.i23.i.i.i, label %if.then.i24.i.i.i, label %_ZN9btVector36setMinERKS_.exit.i.i

if.then.i24.i.i.i:                                ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit22.i.i.i
  store float %11, ptr %arrayidx13.i.i.i, align 4, !tbaa !137, !alias.scope !412
  br label %_ZN9btVector36setMinERKS_.exit.i.i

_ZN9btVector36setMinERKS_.exit.i.i:               ; preds = %if.then.i24.i.i.i, %_Z8btSetMinIfEvRT_RKS0_.exit22.i.i.i
  %12 = phi float [ %arrayidx13.i.promoted.i.i, %_Z8btSetMinIfEvRT_RKS0_.exit22.i.i.i ], [ %11, %if.then.i24.i.i.i ]
  %cmp.i.i11.i.i = fcmp olt float %mx.promoted.i.i, %5
  br i1 %cmp.i.i11.i.i, label %if.then.i.i12.i.i, label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.i.i

if.then.i.i12.i.i:                                ; preds = %_ZN9btVector36setMinERKS_.exit.i.i
  store float %5, ptr %mx.i.i, align 8, !tbaa !137, !alias.scope !412
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.i.i

_Z8btSetMaxIfEvRT_RKS0_.exit.i.i.i:               ; preds = %if.then.i.i12.i.i, %_ZN9btVector36setMinERKS_.exit.i.i
  %13 = phi float [ %5, %if.then.i.i12.i.i ], [ %mx.promoted.i.i, %_ZN9btVector36setMinERKS_.exit.i.i ]
  %cmp.i17.i15.i.i = fcmp olt float %arrayidx5.i13.promoted.i.i, %7
  %14 = select i1 %cmp.i17.i15.i.i, float %7, float %arrayidx5.i13.promoted.i.i
  %cmp.i20.i19.i.i = fcmp olt float %arrayidx9.i17.promoted.i.i, %9
  %15 = select i1 %cmp.i20.i19.i.i, float %9, float %arrayidx9.i17.promoted.i.i
  %cmp.i23.i23.i.i = fcmp olt float %arrayidx13.i21.promoted.i.i, %11
  br i1 %cmp.i23.i23.i.i, label %if.then.i24.i24.i.i, label %_ZN9btVector36setMaxERKS_.exit.i.i

if.then.i24.i24.i.i:                              ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit.i.i.i
  store float %11, ptr %arrayidx13.i21.i.i, align 4, !tbaa !137, !alias.scope !412
  br label %_ZN9btVector36setMaxERKS_.exit.i.i

_ZN9btVector36setMaxERKS_.exit.i.i:               ; preds = %if.then.i24.i24.i.i, %_Z8btSetMaxIfEvRT_RKS0_.exit.i.i.i
  %16 = phi float [ %arrayidx13.i21.promoted.i.i, %_Z8btSetMaxIfEvRT_RKS0_.exit.i.i.i ], [ %11, %if.then.i24.i24.i.i ]
  %17 = load <2 x float>, ptr %m_x7.i, align 4, !tbaa !137, !noalias !412
  %18 = insertelement <2 x float> poison, float %6, i64 0
  %19 = insertelement <2 x float> %18, float %8, i64 1
  %20 = fcmp olt <2 x float> %17, %19
  %21 = select <2 x i1> %20, <2 x float> %17, <2 x float> %19
  %arrayidx11.i.i.1.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 2
  %22 = load float, ptr %arrayidx11.i.i.1.i, align 4, !tbaa !137, !noalias !412
  %arrayidx.i.i.i.1.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 3
  %23 = load float, ptr %arrayidx.i.i.i.1.i, align 4, !tbaa !137, !noalias !412
  %cmp.i23.i.i.1.i = fcmp olt float %23, %12
  br i1 %cmp.i23.i.i.1.i, label %if.then.i24.i.i.1.i, label %_ZN9btVector36setMinERKS_.exit.i.1.i

if.then.i24.i.i.1.i:                              ; preds = %_ZN9btVector36setMaxERKS_.exit.i.i
  store float %23, ptr %arrayidx13.i.i.i, align 4, !tbaa !137, !alias.scope !412
  br label %_ZN9btVector36setMinERKS_.exit.i.1.i

_ZN9btVector36setMinERKS_.exit.i.1.i:             ; preds = %if.then.i24.i.i.1.i, %_ZN9btVector36setMaxERKS_.exit.i.i
  %cmp.i23.i23.i.1.i = fcmp olt float %16, %23
  br i1 %cmp.i23.i23.i.1.i, label %if.then.i24.i24.i.1.i, label %_ZL8VolumeOfRKN10btSoftBody4FaceEf.exit

if.then.i24.i24.i.1.i:                            ; preds = %_ZN9btVector36setMinERKS_.exit.i.1.i
  store float %23, ptr %arrayidx13.i21.i.i, align 4, !tbaa !137, !alias.scope !412
  br label %_ZL8VolumeOfRKN10btSoftBody4FaceEf.exit

_ZL8VolumeOfRKN10btSoftBody4FaceEf.exit:          ; preds = %_ZN9btVector36setMinERKS_.exit.i.1.i, %if.then.i24.i24.i.1.i
  %cmp.i20.i19.i.1.i = fcmp olt float %15, %22
  %24 = select i1 %cmp.i20.i19.i.1.i, float %22, float %15
  %cmp.i20.i.i.1.i = fcmp olt float %22, %10
  %25 = select i1 %cmp.i20.i.i.1.i, float %22, float %10
  store <2 x float> %21, ptr %ref.tmp, align 8, !tbaa !137, !alias.scope !406
  store float %25, ptr %arrayidx9.i.i.i, align 8, !tbaa !137, !alias.scope !406
  %26 = insertelement <2 x float> poison, float %13, i64 0
  %27 = insertelement <2 x float> %26, float %14, i64 1
  %28 = fcmp olt <2 x float> %27, %17
  %29 = select <2 x i1> %28, <2 x float> %17, <2 x float> %27
  %30 = fadd <2 x float> %29, zeroinitializer
  store <2 x float> %30, ptr %mx.i.i, align 8, !tbaa !137, !alias.scope !406
  %add13.i.i.i = fadd float %24, 0.000000e+00
  store float %add13.i.i.i, ptr %arrayidx9.i17.i.i, align 8, !tbaa !137, !alias.scope !406
  %call5 = call noundef ptr @_ZN6btDbvt6insertERK12btDbvtAabbMmPv(ptr noundef nonnull align 8 dereferenceable(64) %m_fdbvt, ptr noundef nonnull align 4 dereferenceable(32) %ref.tmp, ptr noundef nonnull %arrayidx.i)
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 %indvars.iv, i32 4
  store ptr %call5, ptr %m_leaf, align 8, !tbaa !232
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %ref.tmp) #38
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %31 = load i32, ptr %m_size.i, align 4, !tbaa !96
  %32 = sext i32 %31 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %32
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: uwtable
define dso_local noundef i32 @_ZNK10btSoftBody7rayTestERK9btVector3S2_RfRNS_8eFeature1_ERib(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, ptr nocapture noundef nonnull align 4 dereferenceable(4) %mint, ptr nocapture noundef nonnull writeonly align 4 dereferenceable(4) %feature, ptr nocapture noundef nonnull writeonly align 4 dereferenceable(4) %index, i1 noundef zeroext %bcountonly) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %dir = alloca %class.btVector3, align 8
  %collider = alloca %"struct.btSoftBody::RayFromToCaster", align 8
  br i1 %bcountonly, label %if.then, label %lor.lhs.false

lor.lhs.false:                                    ; preds = %entry
  %m_fdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 22
  %0 = load ptr, ptr %m_fdbvt, align 8, !tbaa !413
  %cmp.i = icmp eq ptr %0, null
  br i1 %cmp.i, label %if.then, label %if.else

if.then:                                          ; preds = %lor.lhs.false, %entry
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %dir) #38
  %arrayidx11.i = getelementptr inbounds [4 x float], ptr %rayTo, i64 0, i64 2
  %1 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds [4 x float], ptr %rayFrom, i64 0, i64 2
  %2 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %1, %2
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i, i64 0
  %3 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %dir, i64 0, i32 1
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %3, align 8
  %4 = load <2 x float>, ptr %rayTo, align 4, !tbaa !137
  %5 = load <2 x float>, ptr %rayFrom, align 4, !tbaa !137
  %6 = fsub <2 x float> %4, %5
  %7 = fmul <2 x float> %6, %6
  %mul8.i.i.i.i = extractelement <2 x float> %7, i64 1
  %8 = extractelement <2 x float> %6, i64 0
  %9 = tail call float @llvm.fmuladd.f32(float %8, float %8, float %mul8.i.i.i.i)
  %10 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub14.i, float %9)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %10)
  %div.i.i = fdiv float 1.000000e+00, %sqrt.i.i
  %11 = insertelement <2 x float> poison, float %div.i.i, i64 0
  %12 = shufflevector <2 x float> %11, <2 x float> poison, <2 x i32> zeroinitializer
  %13 = fmul <2 x float> %12, %6
  store <2 x float> %13, ptr %dir, align 8, !tbaa !137
  %mul7.i.i.i = fmul float %sub14.i, %div.i.i
  store float %mul7.i.i.i, ptr %3, align 8, !tbaa !137
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %14 = load i32, ptr %m_size.i, align 4, !tbaa !96
  %cmp51 = icmp sgt i32 %14, 0
  br i1 %cmp51, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %if.then
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %wide.trip.count59 = zext i32 %14 to i64
  br i1 %bcountonly, label %for.body.us, label %for.body

for.body.us:                                      ; preds = %for.body.lr.ph, %for.body.us
  %indvars.iv56 = phi i64 [ %indvars.iv.next57, %for.body.us ], [ 0, %for.body.lr.ph ]
  %cnt.053.us = phi i32 [ %cnt.1.us, %for.body.us ], [ 0, %for.body.lr.ph ]
  %15 = load ptr, ptr %m_data.i, align 8, !tbaa !95
  %m_n.us = getelementptr inbounds %"struct.btSoftBody::Face", ptr %15, i64 %indvars.iv56, i32 1
  %16 = load ptr, ptr %m_n.us, align 8, !tbaa !219
  %m_x.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %16, i64 0, i32 1
  %arrayidx8.us = getelementptr inbounds %"struct.btSoftBody::Face", ptr %15, i64 %indvars.iv56, i32 1, i64 1
  %17 = load ptr, ptr %arrayidx8.us, align 8, !tbaa !219
  %m_x9.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %17, i64 0, i32 1
  %arrayidx11.us = getelementptr inbounds %"struct.btSoftBody::Face", ptr %15, i64 %indvars.iv56, i32 1, i64 2
  %18 = load ptr, ptr %arrayidx11.us, align 8, !tbaa !219
  %m_x12.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %18, i64 0, i32 1
  %19 = load float, ptr %mint, align 4, !tbaa !137
  %call13.us = call noundef float @_ZN10btSoftBody15RayFromToCaster17rayFromToTriangleERK9btVector3S3_S3_S3_S3_S3_f(ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, ptr noundef nonnull align 4 dereferenceable(16) %dir, ptr noundef nonnull align 4 dereferenceable(16) %m_x.us, ptr noundef nonnull align 4 dereferenceable(16) %m_x9.us, ptr noundef nonnull align 4 dereferenceable(16) %m_x12.us, float noundef %19)
  %cmp14.us = fcmp ogt float %call13.us, 0.000000e+00
  %inc.us = zext i1 %cmp14.us to i32
  %cnt.1.us = add nuw nsw i32 %cnt.053.us, %inc.us
  %indvars.iv.next57 = add nuw nsw i64 %indvars.iv56, 1
  %exitcond60.not = icmp eq i64 %indvars.iv.next57, %wide.trip.count59
  br i1 %exitcond60.not, label %for.cond.cleanup, label %for.body.us

for.cond.cleanup:                                 ; preds = %if.end18, %for.body.us, %if.then
  %cnt.0.lcssa = phi i32 [ 0, %if.then ], [ %cnt.1.us, %for.body.us ], [ %cnt.1, %if.end18 ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %dir) #38
  br label %if.end29

for.body:                                         ; preds = %for.body.lr.ph, %if.end18
  %indvars.iv = phi i64 [ %indvars.iv.next, %if.end18 ], [ 0, %for.body.lr.ph ]
  %cnt.053 = phi i32 [ %cnt.1, %if.end18 ], [ 0, %for.body.lr.ph ]
  %20 = load ptr, ptr %m_data.i, align 8, !tbaa !95
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %20, i64 %indvars.iv, i32 1
  %21 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %21, i64 0, i32 1
  %arrayidx8 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %20, i64 %indvars.iv, i32 1, i64 1
  %22 = load ptr, ptr %arrayidx8, align 8, !tbaa !219
  %m_x9 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %22, i64 0, i32 1
  %arrayidx11 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %20, i64 %indvars.iv, i32 1, i64 2
  %23 = load ptr, ptr %arrayidx11, align 8, !tbaa !219
  %m_x12 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %23, i64 0, i32 1
  %24 = load float, ptr %mint, align 4, !tbaa !137
  %call13 = call noundef float @_ZN10btSoftBody15RayFromToCaster17rayFromToTriangleERK9btVector3S3_S3_S3_S3_S3_f(ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, ptr noundef nonnull align 4 dereferenceable(16) %dir, ptr noundef nonnull align 4 dereferenceable(16) %m_x, ptr noundef nonnull align 4 dereferenceable(16) %m_x9, ptr noundef nonnull align 4 dereferenceable(16) %m_x12, float noundef %24)
  %cmp14 = fcmp ogt float %call13, 0.000000e+00
  br i1 %cmp14, label %if.then15, label %if.end18

if.then15:                                        ; preds = %for.body
  %inc = add nsw i32 %cnt.053, 1
  store i32 3, ptr %feature, align 4, !tbaa !414
  %25 = trunc i64 %indvars.iv to i32
  store i32 %25, ptr %index, align 4, !tbaa !140
  store float %call13, ptr %mint, align 4, !tbaa !137
  br label %if.end18

if.end18:                                         ; preds = %if.then15, %for.body
  %cnt.1 = phi i32 [ %inc, %if.then15 ], [ %cnt.053, %for.body ]
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count59
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body

if.else:                                          ; preds = %lor.lhs.false
  call void @llvm.lifetime.start.p0(i64 80, ptr nonnull %collider) #38
  %26 = load float, ptr %mint, align 4, !tbaa !137
  store ptr getelementptr inbounds ({ [9 x ptr] }, ptr @_ZTVN10btSoftBody15RayFromToCasterE, i64 0, inrange i32 0, i64 2), ptr %collider, align 8, !tbaa !5
  %m_rayFrom.i = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %collider, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rayFrom.i, ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, i64 16, i1 false), !tbaa.struct !163
  %27 = load <2 x float>, ptr %rayTo, align 4, !tbaa !137
  %28 = load <2 x float>, ptr %rayFrom, align 4, !tbaa !137
  %29 = fsub <2 x float> %27, %28
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %rayTo, i64 0, i64 2
  %30 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %arrayidx13.i.i = getelementptr inbounds [4 x float], ptr %rayFrom, i64 0, i64 2
  %31 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %30, %31
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i, i64 0
  %m_rayNormalizedDirection.i = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %collider, i64 0, i32 3
  %m_rayTo.i = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %collider, i64 0, i32 2
  store <2 x float> %29, ptr %m_rayNormalizedDirection.i, align 8, !tbaa.struct !163
  %ref.tmp.sroa.5.0.m_rayNormalizedDirection7.sroa_idx.i = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %collider, i64 0, i32 3, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i, ptr %ref.tmp.sroa.5.0.m_rayNormalizedDirection7.sroa_idx.i, align 8, !tbaa.struct !165
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rayTo.i, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, i64 16, i1 false), !tbaa.struct !163
  %m_mint.i = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %collider, i64 0, i32 4
  store float %26, ptr %m_mint.i, align 8, !tbaa !415
  %m_face.i = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %collider, i64 0, i32 6
  store ptr null, ptr %m_face.i, align 8, !tbaa !418
  %m_tests.i = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %collider, i64 0, i32 7
  store i32 0, ptr %m_tests.i, align 8, !tbaa !419
  call void @_ZN6btDbvt7rayTestEPK10btDbvtNodeRK9btVector3S5_RNS_8ICollideE(ptr noundef nonnull %0, ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, ptr noundef nonnull align 8 dereferenceable(8) %collider)
  %32 = load ptr, ptr %m_face.i, align 8, !tbaa !418
  %tobool21.not = icmp eq ptr %32, null
  br i1 %tobool21.not, label %if.end27, label %if.then22

if.then22:                                        ; preds = %if.else
  %33 = load float, ptr %m_mint.i, align 8, !tbaa !415
  store float %33, ptr %mint, align 4, !tbaa !137
  store i32 3, ptr %feature, align 4, !tbaa !414
  %m_data.i50 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %34 = load ptr, ptr %m_data.i50, align 8, !tbaa !95
  %sub.ptr.lhs.cast = ptrtoint ptr %32 to i64
  %sub.ptr.rhs.cast = ptrtoint ptr %34 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 72
  %conv = trunc i64 %sub.ptr.div to i32
  store i32 %conv, ptr %index, align 4, !tbaa !140
  br label %if.end27

if.end27:                                         ; preds = %if.then22, %if.else
  %cnt.2 = phi i32 [ 1, %if.then22 ], [ 0, %if.else ]
  call void @llvm.lifetime.end.p0(i64 80, ptr nonnull %collider) #38
  br label %if.end29

if.end29:                                         ; preds = %if.end27, %for.cond.cleanup
  %cnt.3 = phi i32 [ %cnt.0.lcssa, %for.cond.cleanup ], [ %cnt.2, %if.end27 ]
  ret i32 %cnt.3
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody13predictMotionEf(ptr noundef nonnull align 8 dereferenceable(1496) %this, float noundef %dt) local_unnamed_addr #0 align 2 {
entry:
  %vol = alloca %struct.btDbvtAabbMm, align 8
  %ref.tmp60 = alloca %class.btVector3, align 8
  %ref.tmp103 = alloca %class.btVector3, align 8
  %ref.tmp154 = alloca %"struct.btSoftBody::RContact", align 8
  %m_bUpdateRtCst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 20
  %0 = load i8, ptr %m_bUpdateRtCst, align 4, !tbaa !147, !range !159, !noundef !192
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.end5, label %if.then

if.then:                                          ; preds = %entry
  store i8 0, ptr %m_bUpdateRtCst, align 4, !tbaa !147
  tail call void @_ZN10btSoftBody15updateConstantsEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  %m_fdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 22
  tail call void @_ZN6btDbvt5clearEv(ptr noundef nonnull align 8 dereferenceable(64) %m_fdbvt)
  %collisions = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 25
  %1 = load i32, ptr %collisions, align 4, !tbaa !141
  %and = and i32 %1, 16
  %tobool3.not = icmp eq i32 %and, 0
  br i1 %tobool3.not, label %if.end5, label %if.then4

if.then4:                                         ; preds = %if.then
  tail call void @_ZN10btSoftBody18initializeFaceTreeEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  br label %if.end5

if.end5:                                          ; preds = %if.then, %if.then4, %entry
  %timescale = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 20
  %2 = load float, ptr %timescale, align 8, !tbaa !139
  %mul = fmul float %2, %dt
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3
  store float %mul, ptr %m_sst, align 8, !tbaa !420
  %div = fdiv float 1.000000e+00, %mul
  %isdt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3, i32 1
  store float %div, ptr %isdt, align 4, !tbaa !421
  %mul12 = fmul float %mul, 3.000000e+00
  %velmrg = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3, i32 2
  store float %mul12, ptr %velmrg, align 8, !tbaa !422
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %3 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable = load ptr, ptr %3, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 11
  %4 = load ptr, ptr %vfn, align 8
  %call14 = tail call noundef float %4(ptr noundef nonnull align 8 dereferenceable(24) %3)
  %radmrg = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3, i32 3
  store float %call14, ptr %radmrg, align 4, !tbaa !386
  %mul18 = fmul float %call14, 2.500000e-01
  %updmrg = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3, i32 4
  store float %mul18, ptr %updmrg, align 8, !tbaa !423
  %m_worldInfo = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 7
  %5 = load ptr, ptr %m_worldInfo, align 8, !tbaa !42
  %m_gravity = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %5, i64 0, i32 6
  %6 = load float, ptr %m_sst, align 8, !tbaa !137
  %7 = load <2 x float>, ptr %m_gravity, align 4, !tbaa !137
  %8 = insertelement <2 x float> poison, float %6, i64 0
  %9 = shufflevector <2 x float> %8, <2 x float> poison, <2 x i32> zeroinitializer
  %10 = fmul <2 x float> %9, %7
  %arrayidx7.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %5, i64 0, i32 6, i32 0, i64 2
  %11 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %mul8.i = fmul float %6, %11
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %12 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  %cmp4.i = icmp sgt i32 %12, 0
  br i1 %cmp4.i, label %for.body.lr.ph.i, label %_ZN10btSoftBody11addVelocityERK9btVector3.exit

for.body.lr.ph.i:                                 ; preds = %if.end5
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %13 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !87
  %wide.trip.count.i = zext i32 %12 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %_ZN10btSoftBody11addVelocityERK9btVector3i.exit.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %_ZN10btSoftBody11addVelocityERK9btVector3i.exit.i ]
  %m_im.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 %indvars.iv.i, i32 6
  %14 = load float, ptr %m_im.i.i, align 8, !tbaa !175
  %cmp.i.i = fcmp ogt float %14, 0.000000e+00
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN10btSoftBody11addVelocityERK9btVector3i.exit.i

if.then.i.i:                                      ; preds = %for.body.i
  %m_v.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 %indvars.iv.i, i32 3
  %15 = load <2 x float>, ptr %m_v.i.i, align 4, !tbaa !137
  %16 = fadd <2 x float> %10, %15
  store <2 x float> %16, ptr %m_v.i.i, align 4, !tbaa !137
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %m_v.i.i, i64 0, i64 2
  %17 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %add13.i.i.i = fadd float %mul8.i, %17
  store float %add13.i.i.i, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  br label %_ZN10btSoftBody11addVelocityERK9btVector3i.exit.i

_ZN10btSoftBody11addVelocityERK9btVector3i.exit.i: ; preds = %if.then.i.i, %for.body.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %_ZN10btSoftBody11addVelocityERK9btVector3.exit, label %for.body.i

_ZN10btSoftBody11addVelocityERK9btVector3.exit:   ; preds = %_ZN10btSoftBody11addVelocityERK9btVector3i.exit.i, %if.end5
  tail call void @_ZN10btSoftBody11applyForcesEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  %18 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  %cmp380 = icmp sgt i32 %18, 0
  br i1 %cmp380, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %_ZN10btSoftBody11addVelocityERK9btVector3.exit
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %wide.trip.count = zext i32 %18 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %19 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 %indvars.iv, i32 1
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 %indvars.iv, i32 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_q, ptr noundef nonnull align 8 dereferenceable(16) %m_x, i64 16, i1 false), !tbaa.struct !163
  %m_f = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 %indvars.iv, i32 4
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 %indvars.iv, i32 6
  %arrayidx3.i185 = getelementptr inbounds [4 x float], ptr %m_f, i64 0, i64 1
  %arrayidx7.i187 = getelementptr inbounds [4 x float], ptr %m_f, i64 0, i64 2
  %20 = load float, ptr %arrayidx7.i187, align 4, !tbaa !137
  %21 = load float, ptr %m_sst, align 8, !tbaa !137
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 %indvars.iv, i32 3
  %arrayidx12.i = getelementptr inbounds [4 x float], ptr %m_v, i64 0, i64 2
  %22 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %23 = load float, ptr %m_f, align 4, !tbaa !137
  %24 = load float, ptr %m_im, align 4, !tbaa !137
  %25 = load float, ptr %arrayidx3.i185, align 4, !tbaa !137
  %26 = insertelement <2 x float> poison, float %23, i64 0
  %27 = insertelement <2 x float> %26, float %24, i64 1
  %28 = insertelement <2 x float> poison, float %24, i64 0
  %29 = insertelement <2 x float> %28, float %25, i64 1
  %30 = fmul <2 x float> %27, %29
  %mul8.i188 = fmul float %24, %20
  %31 = insertelement <2 x float> poison, float %21, i64 0
  %32 = shufflevector <2 x float> %31, <2 x float> poison, <2 x i32> zeroinitializer
  %33 = fmul <2 x float> %30, %32
  %mul8.i198 = fmul float %21, %mul8.i188
  %34 = load <2 x float>, ptr %m_v, align 4, !tbaa !137
  %35 = fadd <2 x float> %33, %34
  store <2 x float> %35, ptr %m_v, align 4, !tbaa !137
  %add13.i = fadd float %mul8.i198, %22
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %36 = load float, ptr %m_sst, align 8, !tbaa !137
  %37 = insertelement <2 x float> poison, float %36, i64 0
  %38 = shufflevector <2 x float> %37, <2 x float> poison, <2 x i32> zeroinitializer
  %39 = fmul <2 x float> %35, %38
  %mul8.i209 = fmul float %add13.i, %36
  %40 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %41 = fadd <2 x float> %39, %40
  store <2 x float> %41, ptr %m_x, align 4, !tbaa !137
  %arrayidx12.i220 = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %42 = load float, ptr %arrayidx12.i220, align 4, !tbaa !137
  %add13.i221 = fadd float %mul8.i209, %42
  store float %add13.i221, ptr %arrayidx12.i220, align 4, !tbaa !137
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_f, i8 0, i64 16, i1 false)
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %_ZN10btSoftBody11addVelocityERK9btVector3.exit
  tail call void @_ZN10btSoftBody14updateClustersEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  %m_ndbvt.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  %43 = load ptr, ptr %m_ndbvt.i, align 8, !tbaa !162
  %tobool.not.i = icmp eq ptr %43, null
  br i1 %tobool.not.i, label %if.else.i, label %if.then.i

if.then.i:                                        ; preds = %for.end
  %mx.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %43, i64 0, i32 1
  %44 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable.i = load ptr, ptr %44, align 8, !tbaa !5
  %vfn.i = getelementptr inbounds ptr, ptr %vtable.i, i64 11
  %45 = load ptr, ptr %vfn.i, align 8
  %call9.i = tail call noundef float %45(ptr noundef nonnull align 8 dereferenceable(24) %44)
  %46 = load <2 x float>, ptr %43, align 4, !tbaa !137
  %47 = insertelement <2 x float> poison, float %call9.i, i64 0
  %48 = shufflevector <2 x float> %47, <2 x float> poison, <2 x i32> zeroinitializer
  %49 = fsub <2 x float> %46, %48
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %43, i64 0, i64 2
  %50 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %50, %call9.i
  %retval.sroa.3.12.vec.insert.i45.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i, i64 0
  %m_bounds.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  store <2 x float> %49, ptr %m_bounds.i, align 4, !tbaa.struct !163
  %ref.tmp12.sroa.4.0.arrayidx.sroa_idx.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 0, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i45.i, ptr %ref.tmp12.sroa.4.0.arrayidx.sroa_idx.i, align 4, !tbaa.struct !165
  %51 = load <2 x float>, ptr %mx.i.i, align 4, !tbaa !137
  %52 = fadd <2 x float> %48, %51
  %arrayidx11.i50.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %43, i64 0, i32 1, i32 0, i64 2
  %53 = load float, ptr %arrayidx11.i50.i, align 4, !tbaa !137
  %add14.i.i = fadd float %call9.i, %53
  %retval.sroa.3.12.vec.insert.i54.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i, i64 0
  %arrayidx19.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1
  store <2 x float> %52, ptr %arrayidx19.i, align 4, !tbaa.struct !163
  %ref.tmp15.sroa.4.0.arrayidx19.sroa_idx.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i54.i, ptr %ref.tmp15.sroa.4.0.arrayidx19.sroa_idx.i, align 4, !tbaa.struct !165
  %m_broadphaseHandle.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 8
  %54 = load ptr, ptr %m_broadphaseHandle.i.i, align 8, !tbaa !166
  %cmp.not.i = icmp eq ptr %54, null
  br i1 %cmp.not.i, label %_ZN10btSoftBody12updateBoundsEv.exit, label %if.then21.i

if.then21.i:                                      ; preds = %if.then.i
  %55 = load ptr, ptr %m_worldInfo, align 8, !tbaa !42
  %m_broadphase.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %55, i64 0, i32 4
  %56 = load ptr, ptr %m_broadphase.i, align 8, !tbaa !167
  %m_dispatcher.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %55, i64 0, i32 5
  %57 = load ptr, ptr %m_dispatcher.i, align 8, !tbaa !172
  %vtable28.i = load ptr, ptr %56, align 8, !tbaa !5
  %vfn29.i = getelementptr inbounds ptr, ptr %vtable28.i, i64 4
  %58 = load ptr, ptr %vfn29.i, align 8
  tail call void %58(ptr noundef nonnull align 8 dereferenceable(8) %56, ptr noundef nonnull %54, ptr noundef nonnull align 4 dereferenceable(16) %m_bounds.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx19.i, ptr noundef %57)
  br label %_ZN10btSoftBody12updateBoundsEv.exit

if.else.i:                                        ; preds = %for.end
  %m_bounds34.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %m_bounds34.i, i8 0, i64 32, i1 false)
  br label %_ZN10btSoftBody12updateBoundsEv.exit

_ZN10btSoftBody12updateBoundsEv.exit:             ; preds = %if.then.i, %if.then21.i, %if.else.i
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %vol) #38
  %59 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  %cmp51382 = icmp sgt i32 %59, 0
  br i1 %cmp51382, label %for.body52.lr.ph, label %for.end71

for.body52.lr.ph:                                 ; preds = %_ZN10btSoftBody12updateBoundsEv.exit
  %m_data.i226 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %ref.tmp56.sroa.4.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 8
  %ref.tmp56.sroa.5.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 16
  %ref.tmp56.sroa.6.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 24
  %60 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp60, i64 0, i32 1
  %wide.trip.count392 = zext i32 %59 to i64
  br label %for.body52

for.body52:                                       ; preds = %for.body52.lr.ph, %for.body52
  %indvars.iv389 = phi i64 [ 0, %for.body52.lr.ph ], [ %indvars.iv.next390, %for.body52 ]
  %61 = load ptr, ptr %m_data.i226, align 8, !tbaa !87
  %m_x57 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %61, i64 %indvars.iv389, i32 1
  %62 = load float, ptr %radmrg, align 4, !tbaa !386
  %arrayidx11.i.i.i = getelementptr inbounds [4 x float], ptr %m_x57, i64 0, i64 2
  %63 = load float, ptr %arrayidx11.i.i.i, align 4, !tbaa !137, !noalias !424
  %sub14.i.i.i = fsub float %63, %62
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i.i.i, i64 0
  %64 = load <2 x float>, ptr %m_x57, align 4, !tbaa !137, !noalias !424
  %65 = insertelement <2 x float> poison, float %62, i64 0
  %66 = shufflevector <2 x float> %65, <2 x float> poison, <2 x i32> zeroinitializer
  %67 = fsub <2 x float> %64, %66
  %68 = fadd <2 x float> %66, %64
  %add14.i.i.i = fadd float %62, %63
  %retval.sroa.3.12.vec.insert.i12.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i.i, i64 0
  store <2 x float> %67, ptr %vol, align 8, !tbaa.struct !297
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i, ptr %ref.tmp56.sroa.4.0.vol.sroa_idx, align 8, !tbaa.struct !298
  store <2 x float> %68, ptr %ref.tmp56.sroa.5.0.vol.sroa_idx, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i12.i.i, ptr %ref.tmp56.sroa.6.0.vol.sroa_idx, align 8, !tbaa.struct !165
  %m_leaf = getelementptr inbounds %"struct.btSoftBody::Node", ptr %61, i64 %indvars.iv389, i32 8
  %69 = load ptr, ptr %m_leaf, align 8, !tbaa !183
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp60) #38
  %m_v61 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %61, i64 %indvars.iv389, i32 3
  %70 = load float, ptr %velmrg, align 8, !tbaa !137
  %71 = load <2 x float>, ptr %m_v61, align 4, !tbaa !137
  %72 = insertelement <2 x float> poison, float %70, i64 0
  %73 = shufflevector <2 x float> %72, <2 x float> poison, <2 x i32> zeroinitializer
  %74 = fmul <2 x float> %73, %71
  %arrayidx7.i236 = getelementptr inbounds [4 x float], ptr %m_v61, i64 0, i64 2
  %75 = load float, ptr %arrayidx7.i236, align 4, !tbaa !137
  %mul8.i237 = fmul float %70, %75
  %retval.sroa.3.12.vec.insert.i240 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i237, i64 0
  store <2 x float> %74, ptr %ref.tmp60, align 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i240, ptr %60, align 8
  %76 = load float, ptr %updmrg, align 8, !tbaa !423
  %call68 = call noundef zeroext i1 @_ZN6btDbvt6updateEP10btDbvtNodeR12btDbvtAabbMmRK9btVector3f(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt.i, ptr noundef %69, ptr noundef nonnull align 4 dereferenceable(32) %vol, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp60, float noundef %76)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp60) #38
  %indvars.iv.next390 = add nuw nsw i64 %indvars.iv389, 1
  %exitcond393.not = icmp eq i64 %indvars.iv.next390, %wide.trip.count392
  br i1 %exitcond393.not, label %for.end71, label %for.body52

for.end71:                                        ; preds = %for.body52, %_ZN10btSoftBody12updateBoundsEv.exit
  %m_fdbvt72 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 22
  %77 = load ptr, ptr %m_fdbvt72, align 8, !tbaa !413
  %cmp.i = icmp eq ptr %77, null
  br i1 %cmp.i, label %if.end114, label %for.cond76.preheader

for.cond76.preheader:                             ; preds = %for.end71
  %m_size.i243 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %78 = load i32, ptr %m_size.i243, align 4, !tbaa !96
  %cmp78384 = icmp sgt i32 %78, 0
  br i1 %cmp78384, label %for.body79.lr.ph, label %if.end114

for.body79.lr.ph:                                 ; preds = %for.cond76.preheader
  %m_data.i244 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %ref.tmp98.sroa.12.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 8
  %ref.tmp98.sroa.15.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 12
  %ref.tmp98.sroa.18.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 16
  %ref.tmp98.sroa.25.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 24
  %ref.tmp98.sroa.28.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 28
  %79 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp103, i64 0, i32 1
  br label %for.body79

for.body79:                                       ; preds = %for.body79.lr.ph, %for.body79
  %indvars.iv394 = phi i64 [ 0, %for.body79.lr.ph ], [ %indvars.iv.next395, %for.body79 ]
  %80 = load ptr, ptr %m_data.i244, align 8, !tbaa !95
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %80, i64 %indvars.iv394, i32 1
  %81 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_v84 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %81, i64 0, i32 3
  %arrayidx86 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %80, i64 %indvars.iv394, i32 1, i64 1
  %82 = load ptr, ptr %arrayidx86, align 8, !tbaa !219
  %m_v87 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %82, i64 0, i32 3
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %81, i64 0, i32 3, i32 0, i64 2
  %83 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %82, i64 0, i32 3, i32 0, i64 2
  %84 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %add14.i = fadd float %83, %84
  %arrayidx91 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %80, i64 %indvars.iv394, i32 1, i64 2
  %85 = load ptr, ptr %arrayidx91, align 8, !tbaa !219
  %m_v92 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %85, i64 0, i32 3
  %arrayidx13.i261 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %85, i64 0, i32 3, i32 0, i64 2
  %86 = load float, ptr %arrayidx13.i261, align 4, !tbaa !137
  %add14.i262 = fadd float %add14.i, %86
  %mul8.i.i = fmul float %add14.i262, 0x3FD5555560000000
  %87 = load float, ptr %radmrg, align 4, !tbaa !386
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %81, i64 0, i32 1
  %m_x3.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %82, i64 0, i32 1
  %m_x7.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %85, i64 0, i32 1
  %ref.tmp98.sroa.25.16.m_x.i.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %81, i64 0, i32 1, i32 0, i64 2
  %ref.tmp98.sroa.25.16.copyload = load float, ptr %ref.tmp98.sroa.25.16.m_x.i.sroa_idx, align 4
  %ref.tmp98.sroa.28.16.m_x.i.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %81, i64 0, i32 1, i32 0, i64 3
  %ref.tmp98.sroa.28.16.copyload = load float, ptr %ref.tmp98.sroa.28.16.m_x.i.sroa_idx, align 4
  %arrayidx11.i.i.i271 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %82, i64 0, i32 1, i32 0, i64 2
  %88 = load float, ptr %arrayidx11.i.i.i271, align 4, !tbaa !137, !noalias !429
  %cmp.i20.i.i.i = fcmp olt float %88, %ref.tmp98.sroa.25.16.copyload
  %89 = select i1 %cmp.i20.i.i.i, float %88, float %ref.tmp98.sroa.25.16.copyload
  %arrayidx.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %82, i64 0, i32 1, i32 0, i64 3
  %90 = load float, ptr %arrayidx.i.i.i.i, align 4, !tbaa !137, !noalias !429
  %cmp.i23.i.i.i = fcmp olt float %90, %ref.tmp98.sroa.28.16.copyload
  %ref.tmp98.sroa.15.0 = select i1 %cmp.i23.i.i.i, float %90, float %ref.tmp98.sroa.28.16.copyload
  %cmp.i20.i19.i.i = fcmp olt float %ref.tmp98.sroa.25.16.copyload, %88
  %91 = select i1 %cmp.i20.i19.i.i, float %88, float %ref.tmp98.sroa.25.16.copyload
  %cmp.i23.i23.i.i = fcmp olt float %ref.tmp98.sroa.28.16.copyload, %90
  %ref.tmp98.sroa.28.0 = select i1 %cmp.i23.i23.i.i, float %90, float %ref.tmp98.sroa.28.16.copyload
  %arrayidx11.i.i.1.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %85, i64 0, i32 1, i32 0, i64 2
  %92 = load float, ptr %arrayidx11.i.i.1.i, align 4, !tbaa !137, !noalias !429
  %arrayidx.i.i.i.1.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %85, i64 0, i32 1, i32 0, i64 3
  %93 = load float, ptr %arrayidx.i.i.i.1.i, align 4, !tbaa !137, !noalias !429
  %cmp.i23.i.i.1.i = fcmp olt float %93, %ref.tmp98.sroa.15.0
  %ref.tmp98.sroa.15.1 = select i1 %cmp.i23.i.i.1.i, float %93, float %ref.tmp98.sroa.15.0
  %cmp.i23.i23.i.1.i = fcmp olt float %ref.tmp98.sroa.28.0, %93
  %ref.tmp98.sroa.28.1 = select i1 %cmp.i23.i23.i.1.i, float %93, float %ref.tmp98.sroa.28.0
  %cmp.i20.i19.i.1.i = fcmp olt float %91, %92
  %94 = select i1 %cmp.i20.i19.i.1.i, float %92, float %91
  %cmp.i20.i.i.1.i = fcmp olt float %92, %89
  %95 = select i1 %cmp.i20.i.i.1.i, float %92, float %89
  %sub13.i.i.i = fsub float %95, %87
  %add13.i.i.i276 = fadd float %87, %94
  %96 = load <2 x float>, ptr %m_x.i, align 4
  %97 = load <2 x float>, ptr %m_x3.i, align 4, !tbaa !137, !noalias !429
  %98 = fcmp olt <2 x float> %97, %96
  %99 = select <2 x i1> %98, <2 x float> %97, <2 x float> %96
  %100 = load <2 x float>, ptr %m_x7.i, align 4, !tbaa !137, !noalias !429
  %101 = fcmp olt <2 x float> %100, %99
  %102 = select <2 x i1> %101, <2 x float> %100, <2 x float> %99
  %103 = insertelement <2 x float> poison, float %87, i64 0
  %104 = shufflevector <2 x float> %103, <2 x float> poison, <2 x i32> zeroinitializer
  %105 = fsub <2 x float> %102, %104
  store <2 x float> %105, ptr %vol, align 8
  store float %sub13.i.i.i, ptr %ref.tmp98.sroa.12.0.vol.sroa_idx, align 8, !tbaa.struct !298
  store float %ref.tmp98.sroa.15.1, ptr %ref.tmp98.sroa.15.0.vol.sroa_idx, align 4, !tbaa.struct !434
  %106 = fcmp olt <2 x float> %96, %97
  %107 = select <2 x i1> %106, <2 x float> %97, <2 x float> %96
  %108 = fcmp olt <2 x float> %107, %100
  %109 = select <2 x i1> %108, <2 x float> %100, <2 x float> %107
  %110 = fadd <2 x float> %104, %109
  store <2 x float> %110, ptr %ref.tmp98.sroa.18.0.vol.sroa_idx, align 8
  store float %add13.i.i.i276, ptr %ref.tmp98.sroa.25.0.vol.sroa_idx, align 8, !tbaa.struct !165
  store float %ref.tmp98.sroa.28.1, ptr %ref.tmp98.sroa.28.0.vol.sroa_idx, align 4, !tbaa.struct !318
  %m_leaf102 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %80, i64 %indvars.iv394, i32 4
  %111 = load ptr, ptr %m_leaf102, align 8, !tbaa !232
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp103) #38
  %112 = load float, ptr %velmrg, align 8, !tbaa !137
  %113 = load <2 x float>, ptr %m_v84, align 4, !tbaa !137
  %114 = load <2 x float>, ptr %m_v87, align 4, !tbaa !137
  %115 = fadd <2 x float> %113, %114
  %116 = load <2 x float>, ptr %m_v92, align 4, !tbaa !137
  %117 = fadd <2 x float> %115, %116
  %118 = fmul <2 x float> %117, <float 0x3FD5555560000000, float 0x3FD5555560000000>
  %119 = insertelement <2 x float> poison, float %112, i64 0
  %120 = shufflevector <2 x float> %119, <2 x float> poison, <2 x i32> zeroinitializer
  %121 = fmul <2 x float> %118, %120
  %mul8.i281 = fmul float %mul8.i.i, %112
  %retval.sroa.3.12.vec.insert.i284 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i281, i64 0
  store <2 x float> %121, ptr %ref.tmp103, align 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i284, ptr %79, align 8
  %122 = load float, ptr %updmrg, align 8, !tbaa !423
  %call110 = call noundef zeroext i1 @_ZN6btDbvt6updateEP10btDbvtNodeR12btDbvtAabbMmRK9btVector3f(ptr noundef nonnull align 8 dereferenceable(64) %m_fdbvt72, ptr noundef %111, ptr noundef nonnull align 4 dereferenceable(32) %vol, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp103, float noundef %122)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp103) #38
  %indvars.iv.next395 = add nuw nsw i64 %indvars.iv394, 1
  %123 = load i32, ptr %m_size.i243, align 4, !tbaa !96
  %124 = sext i32 %123 to i64
  %cmp78 = icmp slt i64 %indvars.iv.next395, %124
  br i1 %cmp78, label %for.body79, label %if.end114

if.end114:                                        ; preds = %for.body79, %for.cond76.preheader, %for.end71
  call void @_ZN10btSoftBody10updatePoseEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  %m_bframe = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 1
  %125 = load i8, ptr %m_bframe, align 1, !tbaa !143, !range !159, !noundef !192
  %tobool115.not = icmp eq i8 %125, 0
  br i1 %tobool115.not, label %if.end153, label %land.lhs.true

land.lhs.true:                                    ; preds = %if.end114
  %kMT = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 8
  %126 = load float, ptr %kMT, align 8, !tbaa !435
  %cmp117 = fcmp ogt float %126, 0.000000e+00
  br i1 %cmp117, label %if.then118, label %if.end153

if.then118:                                       ; preds = %land.lhs.true
  %arrayidx10.i288 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 2
  %posetrs.sroa.10374.32.copyload = load float, ptr %arrayidx10.i288, align 8, !tbaa.struct !163
  %posetrs.sroa.12.32.arrayidx10.i288.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 2, i32 0, i64 1
  %posetrs.sroa.12.32.copyload = load float, ptr %posetrs.sroa.12.32.arrayidx10.i288.sroa_idx, align 4, !tbaa.struct !293
  %posetrs.sroa.13.32.arrayidx10.i288.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 2, i32 0, i64 2
  %posetrs.sroa.13.32.copyload = load float, ptr %posetrs.sroa.13.32.arrayidx10.i288.sroa_idx, align 8, !tbaa.struct !165
  %127 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  %cmp125386 = icmp sgt i32 %127, 0
  br i1 %cmp125386, label %for.body127.lr.ph, label %if.end153

for.body127.lr.ph:                                ; preds = %if.then118
  %posetrs.sroa.9.16.arrayidx6.i287.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 1, i32 0, i64 2
  %posetrs.sroa.9.16.copyload = load float, ptr %posetrs.sroa.9.16.arrayidx6.i287.sroa_idx, align 8, !tbaa.struct !165
  %posetrs.sroa.8.16.arrayidx6.i287.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 1, i32 0, i64 1
  %posetrs.sroa.8.16.copyload = load float, ptr %posetrs.sroa.8.16.arrayidx6.i287.sroa_idx, align 4, !tbaa.struct !293
  %arrayidx6.i287 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 1
  %posetrs.sroa.6373.16.copyload = load float, ptr %arrayidx6.i287, align 8, !tbaa.struct !163
  %posetrs.sroa.5.0.m_rot.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 0, i32 0, i64 2
  %128 = load <4 x float>, ptr %posetrs.sroa.5.0.m_rot.sroa_idx, align 8
  %129 = shufflevector <4 x float> %128, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %posetrs.sroa.4.0.m_rot.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 0, i32 0, i64 1
  %130 = load <4 x float>, ptr %posetrs.sroa.4.0.m_rot.sroa_idx, align 4
  %131 = shufflevector <4 x float> %130, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %m_rot = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6
  %132 = load <4 x float>, ptr %m_rot, align 8
  %133 = shufflevector <4 x float> %132, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %m_data.i291 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %m_data.i294 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 5
  %m_com = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 5
  %arrayidx13.i309 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 5, i32 0, i64 2
  %wide.trip.count400 = zext i32 %127 to i64
  %134 = insertelement <2 x float> %129, float %posetrs.sroa.9.16.copyload, i64 1
  %135 = insertelement <2 x float> %133, float %posetrs.sroa.6373.16.copyload, i64 1
  %136 = insertelement <2 x float> %131, float %posetrs.sroa.8.16.copyload, i64 1
  br label %for.body127

for.body127:                                      ; preds = %for.body127.lr.ph, %if.end149
  %indvars.iv397 = phi i64 [ 0, %for.body127.lr.ph ], [ %indvars.iv.next398, %if.end149 ]
  %137 = load ptr, ptr %m_data.i291, align 8, !tbaa !87
  %m_im131 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %137, i64 %indvars.iv397, i32 6
  %138 = load float, ptr %m_im131, align 8, !tbaa !175
  %cmp132 = fcmp ogt float %138, 0.000000e+00
  br i1 %cmp132, label %if.then133, label %if.end149

if.then133:                                       ; preds = %for.body127
  %139 = load ptr, ptr %m_data.i294, align 8, !tbaa !33
  %arrayidx.i296 = getelementptr inbounds %class.btVector3, ptr %139, i64 %indvars.iv397
  %140 = load float, ptr %arrayidx.i296, align 4, !tbaa !137
  %arrayidx7.i.i297 = getelementptr inbounds [4 x float], ptr %arrayidx.i296, i64 0, i64 1
  %141 = load float, ptr %arrayidx7.i.i297, align 4, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds [4 x float], ptr %arrayidx.i296, i64 0, i64 2
  %142 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %mul8.i20.i = fmul float %posetrs.sroa.12.32.copyload, %141
  %143 = call float @llvm.fmuladd.f32(float %posetrs.sroa.10374.32.copyload, float %140, float %mul8.i20.i)
  %144 = call float @llvm.fmuladd.f32(float %posetrs.sroa.13.32.copyload, float %142, float %143)
  %145 = load float, ptr %arrayidx13.i309, align 8, !tbaa !137
  %add14.i310 = fadd float %144, %145
  %m_x143 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %137, i64 %indvars.iv397, i32 1
  %146 = load float, ptr %kMT, align 8, !tbaa !435
  %arrayidx13.i.i = getelementptr inbounds [4 x float], ptr %m_x143, i64 0, i64 2
  %147 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %sub14.i.i321 = fsub float %add14.i310, %147
  %mul8.i.i324 = fmul float %146, %sub14.i.i321
  %148 = insertelement <2 x float> poison, float %141, i64 0
  %149 = shufflevector <2 x float> %148, <2 x float> poison, <2 x i32> zeroinitializer
  %150 = fmul <2 x float> %136, %149
  %151 = insertelement <2 x float> poison, float %140, i64 0
  %152 = shufflevector <2 x float> %151, <2 x float> poison, <2 x i32> zeroinitializer
  %153 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %135, <2 x float> %152, <2 x float> %150)
  %154 = insertelement <2 x float> poison, float %142, i64 0
  %155 = shufflevector <2 x float> %154, <2 x float> poison, <2 x i32> zeroinitializer
  %156 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %134, <2 x float> %155, <2 x float> %153)
  %157 = load <2 x float>, ptr %m_com, align 8, !tbaa !137
  %158 = fadd <2 x float> %157, %156
  %159 = load <2 x float>, ptr %m_x143, align 4, !tbaa !137
  %160 = fsub <2 x float> %158, %159
  %161 = insertelement <2 x float> poison, float %146, i64 0
  %162 = shufflevector <2 x float> %161, <2 x float> poison, <2 x i32> zeroinitializer
  %163 = fmul <2 x float> %162, %160
  %164 = fadd <2 x float> %159, %163
  %add14.i.i327 = fadd float %147, %mul8.i.i324
  %retval.sroa.3.12.vec.insert.i20.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i327, i64 0
  store <2 x float> %164, ptr %m_x143, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i20.i, ptr %arrayidx13.i.i, align 8, !tbaa.struct !165
  br label %if.end149

if.end149:                                        ; preds = %if.then133, %for.body127
  %indvars.iv.next398 = add nuw nsw i64 %indvars.iv397, 1
  %exitcond401.not = icmp eq i64 %indvars.iv.next398, %wide.trip.count400
  br i1 %exitcond401.not, label %if.end153, label %for.body127

if.end153:                                        ; preds = %if.end149, %if.then118, %land.lhs.true, %if.end114
  call void @llvm.lifetime.start.p0(i64 120, ptr nonnull %ref.tmp154)
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(120) %ref.tmp154, i8 0, i64 120, i1 false)
  %m_size.i.i328 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 2
  %165 = load i32, ptr %m_size.i.i328, align 4, !tbaa !108
  %cmp4.i330 = icmp slt i32 %165, 0
  br i1 %cmp4.i330, label %if.then5.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE6resizeEiRKS1_.exit

if.then5.i:                                       ; preds = %if.end153
  %m_capacity.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 3
  %166 = load i32, ptr %m_capacity.i.i.i, align 8, !tbaa !109
  %cmp.i.i332 = icmp slt i32 %166, 0
  br i1 %cmp.i.i332, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8RContactEE4copyEiiPS1_.exit.i.i, label %for.body10.lr.ph.i

_ZNK20btAlignedObjectArrayIN10btSoftBody8RContactEE4copyEiiPS1_.exit.i.i: ; preds = %if.then5.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 5
  %167 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !107
  %tobool.not.i10.i.i = icmp eq ptr %167, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 6
  %168 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %168, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %if.end.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody8RContactEE4copyEiiPS1_.exit.i.i
  call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %167)
  br label %if.end.i

if.end.i:                                         ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody8RContactEE4copyEiiPS1_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !106
  store ptr null, ptr %m_data.i9.i.i, align 8, !tbaa !107
  store i32 0, ptr %m_capacity.i.i.i, align 8, !tbaa !109
  br label %for.body10.lr.ph.i

for.body10.lr.ph.i:                               ; preds = %if.end.i, %if.then5.i
  %m_data11.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 14, i32 5
  %m_c03.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %ref.tmp154, i64 0, i32 2
  %arrayidx6.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %ref.tmp154, i64 0, i32 2, i32 0, i64 1
  %arrayidx10.i.i.i335 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %ref.tmp154, i64 0, i32 2, i32 0, i64 2
  %m_c14.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %ref.tmp154, i64 0, i32 3
  %169 = sext i32 %165 to i64
  br label %for.body10.i

for.body10.i:                                     ; preds = %for.body10.i, %for.body10.lr.ph.i
  %indvars.iv.i336 = phi i64 [ %169, %for.body10.lr.ph.i ], [ %indvars.iv.next.i339, %for.body10.i ]
  %170 = load ptr, ptr %m_data11.i, align 8, !tbaa !107
  %arrayidx13.i337 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %170, i64 %indvars.iv.i336
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %arrayidx13.i337, i8 0, i64 40, i1 false)
  %m_c0.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %170, i64 %indvars.iv.i336, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_c0.i.i, ptr noundef nonnull align 8 dereferenceable(16) %m_c03.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx8.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %170, i64 %indvars.iv.i336, i32 2, i32 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx8.i.i.i, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx6.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx12.i.i.i338 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %170, i64 %indvars.iv.i336, i32 2, i32 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx12.i.i.i338, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx10.i.i.i335, i64 16, i1 false), !tbaa.struct !163
  %m_c1.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %170, i64 %indvars.iv.i336, i32 3
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %m_c1.i.i, ptr noundef nonnull align 8 dereferenceable(28) %m_c14.i.i, i64 28, i1 false)
  %indvars.iv.next.i339 = add nsw i64 %indvars.iv.i336, 1
  %exitcond.not.i340 = icmp eq i64 %indvars.iv.next.i339, 0
  br i1 %exitcond.not.i340, label %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE6resizeEiRKS1_.exit, label %for.body10.i

_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE6resizeEiRKS1_.exit: ; preds = %for.body10.i, %if.end153
  store i32 0, ptr %m_size.i.i328, align 4, !tbaa !108
  call void @llvm.lifetime.end.p0(i64 120, ptr nonnull %ref.tmp154)
  %m_size.i.i341 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 2
  %171 = load i32, ptr %m_size.i.i341, align 4, !tbaa !112
  %cmp4.i343 = icmp slt i32 %171, 0
  br i1 %cmp4.i343, label %if.then5.i347, label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE6resizeEiRKS1_.exit

if.then5.i347:                                    ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE6resizeEiRKS1_.exit
  %m_capacity.i.i.i345 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 3
  %172 = load i32, ptr %m_capacity.i.i.i345, align 8, !tbaa !113
  %cmp.i.i346 = icmp slt i32 %172, 0
  br i1 %cmp.i.i346, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i, label %for.body10.lr.ph.i367

_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i: ; preds = %if.then5.i347
  %m_data.i9.i.i359 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 5
  %173 = load ptr, ptr %m_data.i9.i.i359, align 8, !tbaa !111
  %tobool.not.i10.i.i360 = icmp eq ptr %173, null
  %m_ownsMemory.i.i.i361 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 6
  %174 = load i8, ptr %m_ownsMemory.i.i.i361, align 8, !range !159
  %tobool2.not.i.i.i362 = icmp eq i8 %174, 0
  %or.cond.i.i363 = select i1 %tobool.not.i10.i.i360, i1 true, i1 %tobool2.not.i.i.i362
  br i1 %or.cond.i.i363, label %if.end.i365, label %if.then3.i.i.i364

if.then3.i.i.i364:                                ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i
  call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %173)
  br label %if.end.i365

if.end.i365:                                      ; preds = %if.then3.i.i.i364, %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i361, align 8, !tbaa !110
  store ptr null, ptr %m_data.i9.i.i359, align 8, !tbaa !111
  store i32 0, ptr %m_capacity.i.i.i345, align 8, !tbaa !113
  br label %for.body10.lr.ph.i367

for.body10.lr.ph.i367:                            ; preds = %if.end.i365, %if.then5.i347
  %m_data11.i366 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 15, i32 5
  %175 = sext i32 %171 to i64
  %176 = sub nsw i64 0, %175
  %xtraiter = and i64 %176, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body10.i372.prol.loopexit, label %for.body10.i372.prol

for.body10.i372.prol:                             ; preds = %for.body10.lr.ph.i367, %for.body10.i372.prol
  %indvars.iv.i368.prol = phi i64 [ %indvars.iv.next.i370.prol, %for.body10.i372.prol ], [ %175, %for.body10.lr.ph.i367 ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body10.i372.prol ], [ 0, %for.body10.lr.ph.i367 ]
  %177 = load ptr, ptr %m_data11.i366, align 8, !tbaa !111
  %arrayidx13.i369.prol = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %177, i64 %indvars.iv.i368.prol
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %arrayidx13.i369.prol, i8 0, i64 64, i1 false)
  %indvars.iv.next.i370.prol = add nsw i64 %indvars.iv.i368.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body10.i372.prol.loopexit, label %for.body10.i372.prol, !llvm.loop !436

for.body10.i372.prol.loopexit:                    ; preds = %for.body10.i372.prol, %for.body10.lr.ph.i367
  %indvars.iv.i368.unr = phi i64 [ %175, %for.body10.lr.ph.i367 ], [ %indvars.iv.next.i370.prol, %for.body10.i372.prol ]
  %178 = icmp ugt i32 %171, -4
  br i1 %178, label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE6resizeEiRKS1_.exit, label %for.body10.i372

for.body10.i372:                                  ; preds = %for.body10.i372.prol.loopexit, %for.body10.i372
  %indvars.iv.i368 = phi i64 [ %indvars.iv.next.i370.3, %for.body10.i372 ], [ %indvars.iv.i368.unr, %for.body10.i372.prol.loopexit ]
  %179 = load ptr, ptr %m_data11.i366, align 8, !tbaa !111
  %arrayidx13.i369 = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %179, i64 %indvars.iv.i368
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %arrayidx13.i369, i8 0, i64 64, i1 false)
  %indvars.iv.next.i370 = add nsw i64 %indvars.iv.i368, 1
  %180 = load ptr, ptr %m_data11.i366, align 8, !tbaa !111
  %arrayidx13.i369.1 = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %180, i64 %indvars.iv.next.i370
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %arrayidx13.i369.1, i8 0, i64 64, i1 false)
  %indvars.iv.next.i370.1 = add nsw i64 %indvars.iv.i368, 2
  %181 = load ptr, ptr %m_data11.i366, align 8, !tbaa !111
  %arrayidx13.i369.2 = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %181, i64 %indvars.iv.next.i370.1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %arrayidx13.i369.2, i8 0, i64 64, i1 false)
  %indvars.iv.next.i370.2 = add nsw i64 %indvars.iv.i368, 3
  %182 = load ptr, ptr %m_data11.i366, align 8, !tbaa !111
  %arrayidx13.i369.3 = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %182, i64 %indvars.iv.next.i370.2
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %arrayidx13.i369.3, i8 0, i64 64, i1 false)
  %indvars.iv.next.i370.3 = add nsw i64 %indvars.iv.i368, 4
  %exitcond.not.i371.3 = icmp eq i64 %indvars.iv.next.i370.3, 0
  br i1 %exitcond.not.i371.3, label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE6resizeEiRKS1_.exit, label %for.body10.i372

_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE6resizeEiRKS1_.exit: ; preds = %for.body10.i372.prol.loopexit, %for.body10.i372, %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE6resizeEiRKS1_.exit
  store i32 0, ptr %m_size.i.i341, align 4, !tbaa !112
  call void @_ZN6btDbvt19optimizeIncrementalEi(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt.i, i32 noundef 1)
  call void @_ZN6btDbvt19optimizeIncrementalEi(ptr noundef nonnull align 8 dereferenceable(64) %m_fdbvt72, i32 noundef 1)
  %m_cdbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  call void @_ZN6btDbvt19optimizeIncrementalEi(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt, i32 noundef 1)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %vol) #38
  ret void
}

declare void @_ZN6btDbvt5clearEv(ptr noundef nonnull align 8 dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody11applyForcesEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZN15CProfileManager13Start_ProfileEPKc(ptr noundef nonnull @.str.2)
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3
  %0 = load float, ptr %m_sst, align 8, !tbaa !420
  %m_cfg = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2
  %kDG4 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 3
  %1 = load <2 x float>, ptr %kDG4, align 4, !tbaa !137
  %kPR6 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 5
  %2 = load float, ptr %kPR6, align 4, !tbaa !437
  %kVC8 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 6
  %3 = load float, ptr %kVC8, align 8, !tbaa !438
  %4 = extractelement <2 x float> %1, i64 1
  %cmp = fcmp ogt float %4, 0.000000e+00
  %5 = extractelement <2 x float> %1, i64 0
  %cmp9 = fcmp ogt float %5, 0.000000e+00
  %cmp11 = fcmp une float %2, 0.000000e+00
  %cmp13 = fcmp ogt float %3, 0.000000e+00
  %6 = select i1 %cmp, i1 true, i1 %cmp9
  br i1 %6, label %land.rhs22, label %invoke.cont

land.rhs22:                                       ; preds = %entry
  %7 = load i32, ptr %m_cfg, align 8, !tbaa !135
  %cmp19 = icmp slt i32 %7, 3
  %cmp25 = icmp sgt i32 %7, 2
  br label %invoke.cont

invoke.cont:                                      ; preds = %entry, %land.rhs22
  %8 = phi i1 [ %cmp19, %land.rhs22 ], [ false, %entry ]
  %9 = phi i1 [ %cmp25, %land.rhs22 ], [ false, %entry ]
  %10 = select i1 %cmp11, i1 true, i1 %cmp13
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %11 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  br i1 %10, label %if.then, label %if.end

if.then:                                          ; preds = %invoke.cont
  %cmp.i = icmp sgt i32 %11, 0
  br i1 %cmp.i, label %if.then.i, label %invoke.cont36

if.then.i:                                        ; preds = %if.then
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %12 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1
  %org.sroa.0.0.copyload.i = load float, ptr %m_x.i, align 8, !tbaa.struct !163
  %org.sroa.6.0.m_x.sroa_idx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1, i32 0, i64 1
  %org.sroa.6.0.copyload.i = load float, ptr %org.sroa.6.0.m_x.sroa_idx.i, align 4, !tbaa.struct !293
  %org.sroa.9.0.m_x.sroa_idx.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1, i32 0, i64 2
  %org.sroa.9.0.copyload.i = load float, ptr %org.sroa.9.0.m_x.sroa_idx.i, align 8, !tbaa.struct !165
  %m_size.i32.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %13 = load i32, ptr %m_size.i32.i, align 4, !tbaa !96
  %cmp566.i = icmp sgt i32 %13, 0
  br i1 %cmp566.i, label %for.body.lr.ph.i, label %for.end.i

for.body.lr.ph.i:                                 ; preds = %if.then.i
  %m_data.i33.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %14 = load ptr, ptr %m_data.i33.i, align 8, !tbaa !95
  %wide.trip.count.i = zext i32 %13 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %vol.068.i = phi float [ 0.000000e+00, %for.body.lr.ph.i ], [ %add.i, %for.body.i ]
  %m_n.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %14, i64 %indvars.iv.i, i32 1
  %15 = load ptr, ptr %m_n.i, align 8, !tbaa !219
  %m_x8.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %15, i64 0, i32 1
  %16 = load float, ptr %m_x8.i, align 4, !tbaa !137
  %sub.i.i = fsub float %16, %org.sroa.0.0.copyload.i
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %15, i64 0, i32 1, i32 0, i64 1
  %17 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %sub8.i.i = fsub float %17, %org.sroa.6.0.copyload.i
  %arrayidx11.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %15, i64 0, i32 1, i32 0, i64 2
  %18 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %18, %org.sroa.9.0.copyload.i
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %14, i64 %indvars.iv.i, i32 1, i64 1
  %19 = load ptr, ptr %arrayidx13.i, align 8, !tbaa !219
  %m_x14.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 0, i32 1
  %20 = load float, ptr %m_x14.i, align 4, !tbaa !137
  %sub.i34.i = fsub float %20, %org.sroa.0.0.copyload.i
  %arrayidx5.i35.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 0, i32 1, i32 0, i64 1
  %21 = load float, ptr %arrayidx5.i35.i, align 4, !tbaa !137
  %sub8.i37.i = fsub float %21, %org.sroa.6.0.copyload.i
  %arrayidx11.i38.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 0, i32 1, i32 0, i64 2
  %22 = load float, ptr %arrayidx11.i38.i, align 4, !tbaa !137
  %sub14.i40.i = fsub float %22, %org.sroa.9.0.copyload.i
  %arrayidx19.i = getelementptr inbounds %"struct.btSoftBody::Face", ptr %14, i64 %indvars.iv.i, i32 1, i64 2
  %23 = load ptr, ptr %arrayidx19.i, align 8, !tbaa !219
  %m_x20.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %23, i64 0, i32 1
  %24 = load float, ptr %m_x20.i, align 4, !tbaa !137
  %sub.i46.i = fsub float %24, %org.sroa.0.0.copyload.i
  %arrayidx5.i47.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %23, i64 0, i32 1, i32 0, i64 1
  %25 = load float, ptr %arrayidx5.i47.i, align 4, !tbaa !137
  %sub8.i49.i = fsub float %25, %org.sroa.6.0.copyload.i
  %arrayidx11.i50.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %23, i64 0, i32 1, i32 0, i64 2
  %26 = load float, ptr %arrayidx11.i50.i, align 4, !tbaa !137
  %sub14.i52.i = fsub float %26, %org.sroa.9.0.copyload.i
  %27 = fneg float %sub14.i40.i
  %neg.i.i.i = fmul float %sub8.i49.i, %27
  %28 = tail call float @llvm.fmuladd.f32(float %sub8.i37.i, float %sub14.i52.i, float %neg.i.i.i)
  %29 = fneg float %sub.i34.i
  %neg19.i.i.i = fmul float %sub14.i52.i, %29
  %30 = tail call float @llvm.fmuladd.f32(float %sub14.i40.i, float %sub.i46.i, float %neg19.i.i.i)
  %31 = fneg float %sub8.i37.i
  %neg30.i.i.i = fmul float %sub.i46.i, %31
  %32 = tail call float @llvm.fmuladd.f32(float %sub.i34.i, float %sub8.i49.i, float %neg30.i.i.i)
  %mul8.i.i.i = fmul float %sub8.i.i, %30
  %33 = tail call float @llvm.fmuladd.f32(float %sub.i.i, float %28, float %mul8.i.i.i)
  %34 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %32, float %33)
  %add.i = fadd float %vol.068.i, %34
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %exitcond.not.i = icmp eq i64 %indvars.iv.next.i, %wide.trip.count.i
  br i1 %exitcond.not.i, label %for.end.i, label %for.body.i

for.end.i:                                        ; preds = %for.body.i, %if.then.i
  %vol.0.lcssa.i = phi float [ 0.000000e+00, %if.then.i ], [ %add.i, %for.body.i ]
  %div.i = fdiv float %vol.0.lcssa.i, 6.000000e+00
  br label %invoke.cont36

invoke.cont36:                                    ; preds = %for.end.i, %if.then
  %vol.1.i = phi float [ %div.i, %for.end.i ], [ 0.000000e+00, %if.then ]
  %35 = tail call float @llvm.fabs.f32(float %vol.1.i)
  %div = fdiv float 1.000000e+00, %35
  %mul = fmul float %2, %div
  %m_volume = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 2
  %36 = load float, ptr %m_volume, align 4, !tbaa !144
  %sub = fsub float %36, %vol.1.i
  %mul39 = fmul float %3, %sub
  br label %if.end

if.end:                                           ; preds = %invoke.cont, %invoke.cont36
  %dvolumetv.0 = phi float [ %mul39, %invoke.cont36 ], [ 0.000000e+00, %invoke.cont ]
  %ivolumetp.0 = phi float [ %mul, %invoke.cont36 ], [ 0.000000e+00, %invoke.cont ]
  %cmp43845 = icmp sgt i32 %11, 0
  br i1 %cmp43845, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %if.end
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %37 = load ptr, ptr %m_data.i, align 8, !tbaa !87
  %m_worldInfo = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 7
  %38 = load ptr, ptr %m_worldInfo, align 8
  %water_density.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %38, i64 0, i32 1
  %water_normal.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %38, i64 0, i32 3
  %arrayidx7.i.i.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %38, i64 0, i32 3, i32 0, i64 1
  %arrayidx12.i.i.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %38, i64 0, i32 3, i32 0, i64 2
  %water_offset.i = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %38, i64 0, i32 2
  %39 = load i32, ptr %m_cfg, align 8
  %wide.trip.count = zext i32 %11 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end162
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end162 ]
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 6
  %40 = load float, ptr %m_im, align 8, !tbaa !175
  %cmp48 = fcmp ogt float %40, 0.000000e+00
  br i1 %cmp48, label %if.then49, label %if.end162

if.then49:                                        ; preds = %for.body
  br i1 %6, label %if.then51, label %if.end128

if.then51:                                        ; preds = %if.then49
  %41 = load float, ptr %38, align 8, !tbaa !439
  %42 = load float, ptr %water_density.i, align 4, !tbaa !440
  %cmp.i409 = fcmp ogt float %42, 0.000000e+00
  br i1 %cmp.i409, label %if.then.i412, label %invoke.cont52

if.then.i412:                                     ; preds = %if.then51
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 1
  %43 = load float, ptr %m_x, align 4, !tbaa !137
  %44 = load float, ptr %water_normal.i, align 4, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 1
  %45 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %46 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %mul8.i.i.i410 = fmul float %45, %46
  %47 = tail call float @llvm.fmuladd.f32(float %43, float %44, float %mul8.i.i.i410)
  %arrayidx10.i.i.i = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %48 = load float, ptr %arrayidx10.i.i.i, align 4, !tbaa !137
  %49 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %50 = tail call float @llvm.fmuladd.f32(float %48, float %49, float %47)
  %51 = load float, ptr %water_offset.i, align 8, !tbaa !441
  %add.i411 = fadd float %50, %51
  %cmp4.i = fcmp olt float %add.i411, 0.000000e+00
  br i1 %cmp4.i, label %if.then5.i, label %invoke.cont52

if.then5.i:                                       ; preds = %if.then.i412
  br label %invoke.cont52

invoke.cont52:                                    ; preds = %if.then5.i, %if.then.i412, %if.then51
  %medium.sroa.13.0 = phi float [ %42, %if.then5.i ], [ %41, %if.then.i412 ], [ %41, %if.then51 ]
  br i1 %8, label %invoke.cont56, label %if.end128

invoke.cont56:                                    ; preds = %invoke.cont52
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 3
  %52 = load <2 x float>, ptr %m_v, align 4, !tbaa !137
  %arrayidx11.i = getelementptr inbounds [4 x float], ptr %m_v, i64 0, i64 2
  %53 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %54 = extractelement <2 x float> %52, i64 1
  %mul8.i.i = fmul float %54, %54
  %55 = extractelement <2 x float> %52, i64 0
  %56 = tail call float @llvm.fmuladd.f32(float %55, float %55, float %mul8.i.i)
  %57 = tail call float @llvm.fmuladd.f32(float %53, float %53, float %56)
  %cmp61 = fcmp ogt float %57, 0x3E80000000000000
  br i1 %cmp61, label %if.then62, label %if.end128

if.then62:                                        ; preds = %invoke.cont56
  %m_n = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 5
  %nrm.sroa.0.0.copyload = load <2 x float>, ptr %m_n, align 8, !tbaa.struct !163
  %nrm.sroa.15.0.m_n.sroa_idx = getelementptr inbounds i8, ptr %m_n, i64 8
  %nrm.sroa.15.0.copyload = load <2 x float>, ptr %nrm.sroa.15.0.m_n.sroa_idx, align 8, !tbaa.struct !165
  switch i32 %39, label %sw.epilog [
    i32 0, label %sw.bb
    i32 1, label %sw.bb69
  ]

sw.bb:                                            ; preds = %if.then62
  %sqrt.i.i418 = tail call float @llvm.sqrt.f32(float %57)
  %cmp.i419 = fcmp ogt float %sqrt.i.i418, 0x3E80000000000000
  br i1 %cmp.i419, label %if.then.i421, label %sw.epilog

if.then.i421:                                     ; preds = %sw.bb
  %div.i.i = fdiv float 1.000000e+00, %sqrt.i.i418
  %58 = insertelement <2 x float> poison, float %div.i.i, i64 0
  %59 = shufflevector <2 x float> %58, <2 x float> poison, <2 x i32> zeroinitializer
  %60 = fmul <2 x float> %52, %59
  %mul8.i.i.i420 = fmul float %53, %div.i.i
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i.i420, i64 0
  br label %sw.epilog

sw.bb69:                                          ; preds = %if.then62
  %61 = fmul <2 x float> %52, %nrm.sroa.0.0.copyload
  %mul8.i.i425 = extractelement <2 x float> %61, i64 1
  %62 = extractelement <2 x float> %nrm.sroa.0.0.copyload, i64 0
  %63 = tail call float @llvm.fmuladd.f32(float %62, float %55, float %mul8.i.i425)
  %nrm.sroa.15.8.vec.extract = extractelement <2 x float> %nrm.sroa.15.0.copyload, i64 0
  %64 = tail call float @llvm.fmuladd.f32(float %nrm.sroa.15.8.vec.extract, float %53, float %63)
  %cmp74 = fcmp olt float %64, 0.000000e+00
  %conv = select i1 %cmp74, float -1.000000e+00, float 1.000000e+00
  %65 = insertelement <2 x float> poison, float %conv, i64 0
  %66 = shufflevector <2 x float> %65, <2 x float> poison, <2 x i32> zeroinitializer
  %67 = fmul <2 x float> %nrm.sroa.0.0.copyload, %66
  %mul7.i = fmul float %nrm.sroa.15.8.vec.extract, %conv
  %nrm.sroa.15.8.vec.insert = insertelement <2 x float> %nrm.sroa.15.0.copyload, float %mul7.i, i64 0
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb, %if.then.i421, %if.then62, %sw.bb69
  %nrm.sroa.0.0 = phi <2 x float> [ %nrm.sroa.0.0.copyload, %if.then62 ], [ %67, %sw.bb69 ], [ %60, %if.then.i421 ], [ zeroinitializer, %sw.bb ]
  %nrm.sroa.15.0 = phi <2 x float> [ %nrm.sroa.15.0.copyload, %if.then62 ], [ %nrm.sroa.15.8.vec.insert, %sw.bb69 ], [ %retval.sroa.3.12.vec.insert.i.i.i, %if.then.i421 ], [ zeroinitializer, %sw.bb ]
  %68 = fmul <2 x float> %52, %nrm.sroa.0.0
  %mul8.i.i430 = extractelement <2 x float> %68, i64 1
  %69 = extractelement <2 x float> %nrm.sroa.0.0, i64 0
  %70 = tail call float @llvm.fmuladd.f32(float %55, float %69, float %mul8.i.i430)
  %nrm.sroa.15.8.vec.extract809 = extractelement <2 x float> %nrm.sroa.15.0, i64 0
  %71 = tail call float @llvm.fmuladd.f32(float %53, float %nrm.sroa.15.8.vec.extract809, float %70)
  %cmp80 = fcmp ogt float %71, 0.000000e+00
  br i1 %cmp80, label %if.then81, label %if.end128

if.then81:                                        ; preds = %sw.epilog
  %m_area = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 7
  %72 = load float, ptr %m_area, align 4, !tbaa !303
  %mul87 = fmul float %71, %72
  %mul88 = fmul float %57, %mul87
  %73 = fmul float %mul88, -5.000000e-01
  %fneg = fmul float %medium.sroa.13.0, %73
  %sqrt.i.i451 = tail call float @llvm.sqrt.f32(float %57)
  %div.i.i452 = fdiv float 1.000000e+00, %sqrt.i.i451
  %mul8.i.i.i455 = fmul float %53, %div.i.i452
  %74 = insertelement <2 x float> poison, float %fneg, i64 0
  %75 = shufflevector <2 x float> %74, <2 x float> poison, <2 x i32> zeroinitializer
  %76 = fmul <2 x float> %1, %75
  %77 = shufflevector <2 x float> %nrm.sroa.15.0, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %78 = insertelement <2 x float> %77, float %mul8.i.i.i455, i64 0
  %79 = fmul <2 x float> %78, %76
  %80 = extractelement <2 x float> %79, i64 1
  %add13.i = fadd float %80, 0.000000e+00
  %81 = shufflevector <2 x float> %76, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %82 = fmul <2 x float> %nrm.sroa.0.0, %81
  %83 = fadd <2 x float> %82, zeroinitializer
  %84 = insertelement <2 x float> poison, float %div.i.i452, i64 0
  %85 = shufflevector <2 x float> %84, <2 x float> poison, <2 x i32> zeroinitializer
  %86 = fmul <2 x float> %52, %85
  %87 = shufflevector <2 x float> %76, <2 x float> poison, <2 x i32> zeroinitializer
  %88 = fmul <2 x float> %86, %87
  %89 = fadd <2 x float> %88, %83
  %90 = extractelement <2 x float> %79, i64 0
  %add13.i475 = fadd float %90, %add13.i
  %mul.i476 = fmul float %0, %40
  %91 = extractelement <2 x float> %89, i64 0
  %mul.i.i = fmul float %mul.i476, %91
  %92 = extractelement <2 x float> %89, i64 1
  %mul4.i.i = fmul float %mul.i476, %92
  %mul8.i.i478 = fmul float %mul.i476, %add13.i475
  %mul8.i.i.i479 = fmul float %mul4.i.i, %mul4.i.i
  %93 = tail call float @llvm.fmuladd.f32(float %mul.i.i, float %mul.i.i, float %mul8.i.i.i479)
  %94 = tail call float @llvm.fmuladd.f32(float %mul8.i.i478, float %mul8.i.i478, float %93)
  %cmp.i480 = fcmp ogt float %94, %57
  br i1 %cmp.i480, label %if.then.i488, label %if.else.i

if.then.i488:                                     ; preds = %if.then81
  %mul8.i.i.i.i.i = fmul float %92, %92
  %95 = tail call float @llvm.fmuladd.f32(float %91, float %91, float %mul8.i.i.i.i.i)
  %96 = tail call float @llvm.fmuladd.f32(float %add13.i475, float %add13.i475, float %95)
  %sqrt.i.i.i = tail call float @llvm.sqrt.f32(float %96)
  %div.i.i.i = fdiv float 1.000000e+00, %sqrt.i.i.i
  %mul8.i.i.i.i481 = fmul float %add13.i475, %div.i.i.i
  %div.i.i484 = fdiv float 1.000000e+00, %mul.i476
  %m_f.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 4
  %97 = insertelement <2 x float> poison, float %div.i.i.i, i64 0
  %98 = shufflevector <2 x float> %97, <2 x float> poison, <2 x i32> zeroinitializer
  %99 = fmul <2 x float> %89, %98
  %100 = fmul <2 x float> %52, %99
  %mul8.i.i.i25.i = extractelement <2 x float> %100, i64 1
  %101 = extractelement <2 x float> %99, i64 0
  %102 = tail call float @llvm.fmuladd.f32(float %55, float %101, float %mul8.i.i.i25.i)
  %103 = tail call float @llvm.fmuladd.f32(float %53, float %mul8.i.i.i.i481, float %102)
  %104 = insertelement <2 x float> poison, float %103, i64 0
  %105 = shufflevector <2 x float> %104, <2 x float> poison, <2 x i32> zeroinitializer
  %106 = fmul <2 x float> %99, %105
  %mul8.i.i26.i = fmul float %mul8.i.i.i.i481, %103
  %107 = insertelement <2 x float> poison, float %div.i.i484, i64 0
  %108 = shufflevector <2 x float> %107, <2 x float> poison, <2 x i32> zeroinitializer
  %109 = fmul <2 x float> %108, %106
  %mul8.i.i29.i = fmul float %div.i.i484, %mul8.i.i26.i
  %110 = load <2 x float>, ptr %m_f.i, align 8, !tbaa !137
  %111 = fsub <2 x float> %110, %109
  store <2 x float> %111, ptr %m_f.i, align 8, !tbaa !137
  %arrayidx12.i.i487 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 4, i32 0, i64 2
  %112 = load float, ptr %arrayidx12.i.i487, align 8, !tbaa !137
  %sub13.i.i = fsub float %112, %mul8.i.i29.i
  store float %sub13.i.i, ptr %arrayidx12.i.i487, align 8, !tbaa !137
  br label %if.end128

if.else.i:                                        ; preds = %if.then81
  %m_f14.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 4
  %113 = load <2 x float>, ptr %m_f14.i, align 8, !tbaa !137
  %114 = fadd <2 x float> %89, %113
  store <2 x float> %114, ptr %m_f14.i, align 8, !tbaa !137
  %arrayidx12.i39.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 4, i32 0, i64 2
  %115 = load float, ptr %arrayidx12.i39.i, align 8, !tbaa !137
  %add13.i.i = fadd float %add13.i475, %115
  store float %add13.i.i, ptr %arrayidx12.i39.i, align 8, !tbaa !137
  br label %if.end128

if.end128:                                        ; preds = %invoke.cont56, %if.then.i488, %if.else.i, %sw.epilog, %invoke.cont52, %if.then49
  br i1 %cmp11, label %invoke.cont137, label %if.end144

invoke.cont137:                                   ; preds = %if.end128
  %m_n132 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 5
  %m_area134 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 7
  %116 = load float, ptr %m_area134, align 4, !tbaa !303
  %mul135 = fmul float %ivolumetp.0, %116
  %arrayidx7.i492 = getelementptr inbounds [4 x float], ptr %m_n132, i64 0, i64 2
  %117 = load float, ptr %arrayidx7.i492, align 4, !tbaa !137
  %mul8.i493 = fmul float %mul135, %117
  %m_f = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 4
  %118 = load <2 x float>, ptr %m_n132, align 4, !tbaa !137
  %119 = insertelement <2 x float> poison, float %mul135, i64 0
  %120 = shufflevector <2 x float> %119, <2 x float> poison, <2 x i32> zeroinitializer
  %121 = fmul <2 x float> %118, %120
  %122 = load <2 x float>, ptr %m_f, align 4, !tbaa !137
  %123 = fadd <2 x float> %121, %122
  store <2 x float> %123, ptr %m_f, align 4, !tbaa !137
  %arrayidx12.i504 = getelementptr inbounds [4 x float], ptr %m_f, i64 0, i64 2
  %124 = load float, ptr %arrayidx12.i504, align 4, !tbaa !137
  %add13.i505 = fadd float %mul8.i493, %124
  store float %add13.i505, ptr %arrayidx12.i504, align 4, !tbaa !137
  br label %if.end144

if.end144:                                        ; preds = %invoke.cont137, %if.end128
  br i1 %cmp13, label %invoke.cont153, label %if.end162

invoke.cont153:                                   ; preds = %if.end144
  %m_n148 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 5
  %m_area150 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 7
  %125 = load float, ptr %m_area150, align 4, !tbaa !303
  %mul151 = fmul float %dvolumetv.0, %125
  %arrayidx7.i509 = getelementptr inbounds [4 x float], ptr %m_n148, i64 0, i64 2
  %126 = load float, ptr %arrayidx7.i509, align 4, !tbaa !137
  %mul8.i510 = fmul float %mul151, %126
  %m_f156 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %37, i64 %indvars.iv, i32 4
  %127 = load <2 x float>, ptr %m_n148, align 4, !tbaa !137
  %128 = insertelement <2 x float> poison, float %mul151, i64 0
  %129 = shufflevector <2 x float> %128, <2 x float> poison, <2 x i32> zeroinitializer
  %130 = fmul <2 x float> %127, %129
  %131 = load <2 x float>, ptr %m_f156, align 4, !tbaa !137
  %132 = fadd <2 x float> %130, %131
  store <2 x float> %132, ptr %m_f156, align 4, !tbaa !137
  %arrayidx12.i521 = getelementptr inbounds [4 x float], ptr %m_f156, i64 0, i64 2
  %133 = load float, ptr %arrayidx12.i521, align 4, !tbaa !137
  %add13.i522 = fadd float %mul8.i510, %133
  store float %add13.i522, ptr %arrayidx12.i521, align 4, !tbaa !137
  br label %if.end162

if.end162:                                        ; preds = %if.end144, %invoke.cont153, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %if.end162, %if.end
  %m_size.i523 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 2
  %134 = load i32, ptr %m_size.i523, align 4, !tbaa !96
  %cmp167852 = icmp sgt i32 %134, 0
  br i1 %cmp167852, label %for.body168.lr.ph, label %for.end338

for.body168.lr.ph:                                ; preds = %for.end
  %m_data.i524 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 11, i32 5
  %135 = load ptr, ptr %m_data.i524, align 8, !tbaa !95
  %m_worldInfo226 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 7
  %136 = load ptr, ptr %m_worldInfo226, align 8
  %water_density.i593 = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %136, i64 0, i32 1
  %water_normal.i595 = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %136, i64 0, i32 3
  %arrayidx7.i.i.i597 = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %136, i64 0, i32 3, i32 0, i64 1
  %arrayidx12.i.i.i600 = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %136, i64 0, i32 3, i32 0, i64 2
  %water_offset.i601 = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %136, i64 0, i32 2
  %137 = load i32, ptr %m_cfg, align 8
  %cond363 = icmp eq i32 %137, 3
  br i1 %9, label %for.body168.us.preheader, label %for.end338

for.body168.us.preheader:                         ; preds = %for.body168.lr.ph
  %wide.trip.count863 = zext i32 %134 to i64
  br label %for.body168.us

for.body168.us:                                   ; preds = %for.body168.us.preheader, %if.end334.us
  %indvars.iv860 = phi i64 [ 0, %for.body168.us.preheader ], [ %indvars.iv.next861, %if.end334.us ]
  %m_n177.us = getelementptr inbounds %"struct.btSoftBody::Face", ptr %135, i64 %indvars.iv860, i32 1
  %arrayidx180.us = getelementptr inbounds %"struct.btSoftBody::Face", ptr %135, i64 %indvars.iv860, i32 1, i64 1
  %arrayidx187.us = getelementptr inbounds %"struct.btSoftBody::Face", ptr %135, i64 %indvars.iv860, i32 1, i64 2
  %138 = load ptr, ptr %m_n177.us, align 8, !tbaa !219
  %m_v178.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 3
  %139 = load float, ptr %m_v178.us, align 4, !tbaa !137
  %140 = load ptr, ptr %arrayidx180.us, align 8, !tbaa !219
  %m_v181.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %140, i64 0, i32 3
  %141 = load ptr, ptr %arrayidx187.us, align 8, !tbaa !219
  %m_v188.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %141, i64 0, i32 3
  %arrayidx5.i528.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 3, i32 0, i64 1
  %142 = load float, ptr %arrayidx5.i528.us, align 4, !tbaa !137
  %arrayidx7.i529.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %140, i64 0, i32 3, i32 0, i64 1
  %143 = load <2 x float>, ptr %m_v181.us, align 4, !tbaa !137
  %arrayidx7.i540.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %141, i64 0, i32 3, i32 0, i64 1
  %144 = insertelement <2 x float> poison, float %139, i64 0
  %145 = insertelement <2 x float> %144, float %142, i64 1
  %146 = fadd <2 x float> %145, %143
  %147 = load <2 x float>, ptr %m_v188.us, align 4, !tbaa !137
  %148 = fadd <2 x float> %146, %147
  %149 = fmul <2 x float> %148, <float 0x3FD5555560000000, float 0x3FD5555560000000>
  %arrayidx11.i531.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 3, i32 0, i64 2
  %150 = load float, ptr %arrayidx11.i531.us, align 4, !tbaa !137
  %arrayidx13.i532.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %140, i64 0, i32 3, i32 0, i64 2
  %151 = load float, ptr %arrayidx13.i532.us, align 4, !tbaa !137
  %add14.i.us = fadd float %150, %151
  %arrayidx13.i543.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %141, i64 0, i32 3, i32 0, i64 2
  %152 = load float, ptr %arrayidx13.i543.us, align 4, !tbaa !137
  %add14.i544.us = fadd float %add14.i.us, %152
  %mul8.i.i555.us = fmul float %add14.i544.us, 0x3FD5555560000000
  %153 = load float, ptr %136, align 8, !tbaa !439
  %154 = load float, ptr %water_density.i593, align 4, !tbaa !440
  %cmp.i594.us = fcmp ogt float %154, 0.000000e+00
  br i1 %cmp.i594.us, label %if.then.i604.us, label %invoke.cont232.us

if.then.i604.us:                                  ; preds = %for.body168.us
  %arrayidx11.i560.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 1, i32 0, i64 2
  %155 = load float, ptr %arrayidx11.i560.us, align 4, !tbaa !137
  %arrayidx13.i561.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %140, i64 0, i32 1, i32 0, i64 2
  %156 = load float, ptr %arrayidx13.i561.us, align 4, !tbaa !137
  %add14.i562.us = fadd float %155, %156
  %arrayidx13.i573.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %141, i64 0, i32 1, i32 0, i64 2
  %157 = load float, ptr %arrayidx13.i573.us, align 4, !tbaa !137
  %add14.i574.us = fadd float %add14.i562.us, %157
  %mul8.i.i585.us = fmul float %add14.i574.us, 0x3FD5555560000000
  %m_x204.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 1
  %158 = load float, ptr %m_x204.us, align 4, !tbaa !137
  %m_x207.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %140, i64 0, i32 1
  %159 = load float, ptr %m_x207.us, align 4, !tbaa !137
  %add.i556.us = fadd float %158, %159
  %m_x214.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %141, i64 0, i32 1
  %160 = load float, ptr %m_x214.us, align 4, !tbaa !137
  %add.i568.us = fadd float %add.i556.us, %160
  %mul.i.i581.us = fmul float %add.i568.us, 0x3FD5555560000000
  %arrayidx5.i557.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 1, i32 0, i64 1
  %161 = load float, ptr %arrayidx5.i557.us, align 4, !tbaa !137
  %arrayidx7.i558.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %140, i64 0, i32 1, i32 0, i64 1
  %162 = load float, ptr %arrayidx7.i558.us, align 4, !tbaa !137
  %add8.i559.us = fadd float %161, %162
  %arrayidx7.i570.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %141, i64 0, i32 1, i32 0, i64 1
  %163 = load float, ptr %arrayidx7.i570.us, align 4, !tbaa !137
  %add8.i571.us = fadd float %add8.i559.us, %163
  %mul4.i.i583.us = fmul float %add8.i571.us, 0x3FD5555560000000
  %164 = load float, ptr %water_normal.i595, align 4, !tbaa !137
  %165 = load float, ptr %arrayidx7.i.i.i597, align 4, !tbaa !137
  %mul8.i.i.i598.us = fmul float %mul4.i.i583.us, %165
  %166 = tail call float @llvm.fmuladd.f32(float %mul.i.i581.us, float %164, float %mul8.i.i.i598.us)
  %167 = load float, ptr %arrayidx12.i.i.i600, align 4, !tbaa !137
  %168 = tail call float @llvm.fmuladd.f32(float %mul8.i.i585.us, float %167, float %166)
  %169 = load float, ptr %water_offset.i601, align 8, !tbaa !441
  %add.i602.us = fadd float %169, %168
  %cmp4.i603.us = fcmp olt float %add.i602.us, 0.000000e+00
  br i1 %cmp4.i603.us, label %if.then5.i613.us, label %invoke.cont232.us

if.then5.i613.us:                                 ; preds = %if.then.i604.us
  br label %invoke.cont232.us

invoke.cont232.us:                                ; preds = %if.then5.i613.us, %if.then.i604.us, %for.body168.us
  %medium.sroa.13.1.us = phi float [ %154, %if.then5.i613.us ], [ %153, %if.then.i604.us ], [ %153, %for.body168.us ]
  %170 = extractelement <2 x float> %149, i64 1
  %mul8.i.i628.us = fmul float %170, %170
  %171 = extractelement <2 x float> %149, i64 0
  %172 = tail call float @llvm.fmuladd.f32(float %171, float %171, float %mul8.i.i628.us)
  %173 = tail call float @llvm.fmuladd.f32(float %mul8.i.i555.us, float %mul8.i.i555.us, float %172)
  %cmp239.us = fcmp ogt float %173, 0x3E80000000000000
  br i1 %cmp239.us, label %if.then240.us, label %if.end334.us

if.then240.us:                                    ; preds = %invoke.cont232.us
  %m_normal.us = getelementptr inbounds %"struct.btSoftBody::Face", ptr %135, i64 %indvars.iv860, i32 2
  %174 = load <2 x float>, ptr %m_normal.us, align 8
  %nrm241.sroa.14.0.m_normal.sroa_idx.us = getelementptr inbounds i8, ptr %m_normal.us, i64 8
  %nrm241.sroa.14.0.copyload.us = load float, ptr %nrm241.sroa.14.0.m_normal.sroa_idx.us, align 8, !tbaa.struct !165
  br i1 %cond363, label %sw.bb244.us, label %sw.epilog255.us

sw.bb244.us:                                      ; preds = %if.then240.us
  %175 = fmul <2 x float> %149, %174
  %mul8.i.i632.us = extractelement <2 x float> %175, i64 1
  %176 = extractelement <2 x float> %174, i64 0
  %177 = tail call float @llvm.fmuladd.f32(float %176, float %171, float %mul8.i.i632.us)
  %178 = tail call float @llvm.fmuladd.f32(float %nrm241.sroa.14.0.copyload.us, float %mul8.i.i555.us, float %177)
  %cmp249.us = fcmp olt float %178, 0.000000e+00
  %conv251.us = select i1 %cmp249.us, float -1.000000e+00, float 1.000000e+00
  %179 = insertelement <2 x float> poison, float %conv251.us, i64 0
  %180 = shufflevector <2 x float> %179, <2 x float> poison, <2 x i32> zeroinitializer
  %181 = fmul <2 x float> %174, %180
  %mul7.i639.us = fmul float %nrm241.sroa.14.0.copyload.us, %conv251.us
  br label %sw.epilog255.us

sw.epilog255.us:                                  ; preds = %sw.bb244.us, %if.then240.us
  %nrm241.sroa.14.0.us = phi float [ %mul7.i639.us, %sw.bb244.us ], [ %nrm241.sroa.14.0.copyload.us, %if.then240.us ]
  %182 = phi <2 x float> [ %181, %sw.bb244.us ], [ %174, %if.then240.us ]
  %183 = fmul <2 x float> %149, %182
  %mul8.i.i642.us = extractelement <2 x float> %183, i64 1
  %184 = extractelement <2 x float> %182, i64 0
  %185 = tail call float @llvm.fmuladd.f32(float %171, float %184, float %mul8.i.i642.us)
  %186 = tail call float @llvm.fmuladd.f32(float %mul8.i.i555.us, float %nrm241.sroa.14.0.us, float %185)
  %cmp260.us = fcmp ogt float %186, 0.000000e+00
  br i1 %cmp260.us, label %if.then261.us, label %if.end334.us

if.then261.us:                                    ; preds = %sw.epilog255.us
  %m_ra.us = getelementptr inbounds %"struct.btSoftBody::Face", ptr %135, i64 %indvars.iv860, i32 3
  %187 = load float, ptr %m_ra.us, align 8, !tbaa !241
  %188 = fneg float %187
  %189 = fmul float %186, %188
  %190 = fmul float %173, %189
  %fneg279.us = fmul float %medium.sroa.13.1.us, %190
  %sqrt.i.i668.us = tail call float @llvm.sqrt.f32(float %173)
  %div.i.i669.us = fdiv float 1.000000e+00, %sqrt.i.i668.us
  %mul8.i.i.i672.us = fmul float %mul8.i.i555.us, %div.i.i669.us
  %191 = insertelement <2 x float> poison, float %fneg279.us, i64 0
  %192 = shufflevector <2 x float> %191, <2 x float> poison, <2 x i32> zeroinitializer
  %193 = fmul <2 x float> %1, %192
  %194 = insertelement <2 x float> poison, float %mul8.i.i.i672.us, i64 0
  %195 = insertelement <2 x float> %194, float %nrm241.sroa.14.0.us, i64 1
  %196 = fmul <2 x float> %195, %193
  %197 = extractelement <2 x float> %196, i64 1
  %add13.i664.us = fadd float %197, 0.000000e+00
  %198 = extractelement <2 x float> %196, i64 0
  %add13.i694.us = fadd float %198, %add13.i664.us
  %199 = shufflevector <2 x float> %193, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %200 = fmul <2 x float> %182, %199
  %201 = fadd <2 x float> %200, zeroinitializer
  %202 = insertelement <2 x float> poison, float %div.i.i669.us, i64 0
  %203 = shufflevector <2 x float> %202, <2 x float> poison, <2 x i32> zeroinitializer
  %204 = fmul <2 x float> %149, %203
  %205 = shufflevector <2 x float> %193, <2 x float> poison, <2 x i32> zeroinitializer
  %206 = fmul <2 x float> %204, %205
  %207 = fadd <2 x float> %206, %201
  %208 = fmul <2 x float> %207, <float 0x3FD5555560000000, float 0x3FD5555560000000>
  %mul7.i.i.us = fmul float %add13.i694.us, 0x3FD5555560000000
  %209 = extractelement <2 x float> %208, i64 1
  %mul8.i.i.i.i.i712.us = fmul float %209, %209
  %210 = extractelement <2 x float> %208, i64 0
  %211 = tail call float @llvm.fmuladd.f32(float %210, float %210, float %mul8.i.i.i.i.i712.us)
  %212 = tail call float @llvm.fmuladd.f32(float %mul7.i.i.us, float %mul7.i.i.us, float %211)
  %sqrt.i.i.i713.us = tail call float @llvm.sqrt.f32(float %212)
  %div.i.i.i714.us = fdiv float 1.000000e+00, %sqrt.i.i.i713.us
  %213 = insertelement <2 x float> poison, float %div.i.i.i714.us, i64 0
  %214 = shufflevector <2 x float> %213, <2 x float> poison, <2 x i32> zeroinitializer
  %215 = fmul <2 x float> %208, %214
  %mul8.i.i.i.i717.us = fmul float %mul7.i.i.us, %div.i.i.i714.us
  %m_im.i699.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 6
  %216 = load float, ptr %m_im.i699.us, align 8, !tbaa !175
  %mul.i700.us = fmul float %0, %216
  %mul.i.i701.us = fmul float %210, %mul.i700.us
  %mul4.i.i703.us = fmul float %209, %mul.i700.us
  %mul8.i.i705.us = fmul float %mul7.i.i.us, %mul.i700.us
  %217 = insertelement <2 x float> poison, float %mul4.i.i703.us, i64 0
  %218 = insertelement <2 x float> %217, float %142, i64 1
  %219 = fmul <2 x float> %218, %218
  %220 = insertelement <2 x float> poison, float %mul.i.i701.us, i64 0
  %221 = insertelement <2 x float> %220, float %139, i64 1
  %222 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %221, <2 x float> %221, <2 x float> %219)
  %223 = insertelement <2 x float> poison, float %mul8.i.i705.us, i64 0
  %224 = insertelement <2 x float> %223, float %150, i64 1
  %225 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %224, <2 x float> %224, <2 x float> %222)
  %226 = extractelement <2 x float> %225, i64 0
  %227 = extractelement <2 x float> %225, i64 1
  %cmp.i711.us = fcmp ogt float %226, %227
  br i1 %cmp.i711.us, label %if.then.i732.us, label %if.else.i739.us

if.end334.us:                                     ; preds = %if.else.i739.us.2, %if.then.i732.us.2, %sw.epilog255.us, %invoke.cont232.us
  %indvars.iv.next861 = add nuw nsw i64 %indvars.iv860, 1
  %exitcond864.not = icmp eq i64 %indvars.iv.next861, %wide.trip.count863
  br i1 %exitcond864.not, label %for.end338, label %for.body168.us

if.else.i739.us:                                  ; preds = %if.then261.us
  %m_f14.i733.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 4
  %228 = load <2 x float>, ptr %m_f14.i733.us, align 8, !tbaa !137
  %229 = fadd <2 x float> %208, %228
  store <2 x float> %229, ptr %m_f14.i733.us, align 8, !tbaa !137
  %arrayidx12.i39.i737.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 4, i32 0, i64 2
  %230 = load float, ptr %arrayidx12.i39.i737.us, align 8, !tbaa !137
  %add13.i.i738.us = fadd float %mul7.i.i.us, %230
  store float %add13.i.i738.us, ptr %arrayidx12.i39.i737.us, align 8, !tbaa !137
  br label %for.inc319.us

if.then.i732.us:                                  ; preds = %if.then261.us
  %231 = extractelement <2 x float> %215, i64 1
  %mul8.i.i.i25.i718.us = fmul float %231, %142
  %232 = extractelement <2 x float> %215, i64 0
  %233 = tail call float @llvm.fmuladd.f32(float %139, float %232, float %mul8.i.i.i25.i718.us)
  %234 = tail call float @llvm.fmuladd.f32(float %150, float %mul8.i.i.i.i717.us, float %233)
  %mul8.i.i26.i721.us = fmul float %mul8.i.i.i.i717.us, %234
  %div.i.i722.us = fdiv float 1.000000e+00, %mul.i700.us
  %mul8.i.i29.i725.us = fmul float %div.i.i722.us, %mul8.i.i26.i721.us
  %m_f.i726.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 4
  %235 = insertelement <2 x float> poison, float %234, i64 0
  %236 = shufflevector <2 x float> %235, <2 x float> poison, <2 x i32> zeroinitializer
  %237 = fmul <2 x float> %215, %236
  %238 = insertelement <2 x float> poison, float %div.i.i722.us, i64 0
  %239 = shufflevector <2 x float> %238, <2 x float> poison, <2 x i32> zeroinitializer
  %240 = fmul <2 x float> %239, %237
  %241 = load <2 x float>, ptr %m_f.i726.us, align 8, !tbaa !137
  %242 = fsub <2 x float> %241, %240
  store <2 x float> %242, ptr %m_f.i726.us, align 8, !tbaa !137
  %arrayidx12.i.i730.us = getelementptr inbounds %"struct.btSoftBody::Node", ptr %138, i64 0, i32 4, i32 0, i64 2
  %243 = load float, ptr %arrayidx12.i.i730.us, align 8, !tbaa !137
  %sub13.i.i731.us = fsub float %243, %mul8.i.i29.i725.us
  store float %sub13.i.i731.us, ptr %arrayidx12.i.i730.us, align 8, !tbaa !137
  br label %for.inc319.us

for.inc319.us:                                    ; preds = %if.then.i732.us, %if.else.i739.us
  %m_im.i699.us.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %140, i64 0, i32 6
  %244 = load float, ptr %m_im.i699.us.1, align 8, !tbaa !175
  %mul.i700.us.1 = fmul float %0, %244
  %mul.i.i701.us.1 = fmul float %210, %mul.i700.us.1
  %mul4.i.i703.us.1 = fmul float %209, %mul.i700.us.1
  %mul8.i.i705.us.1 = fmul float %mul7.i.i.us, %mul.i700.us.1
  %245 = load float, ptr %m_v181.us, align 8, !tbaa !137
  %246 = load float, ptr %arrayidx7.i529.us, align 4, !tbaa !137
  %247 = load float, ptr %arrayidx13.i532.us, align 8, !tbaa !137
  %248 = insertelement <2 x float> poison, float %mul4.i.i703.us.1, i64 0
  %249 = insertelement <2 x float> %248, float %246, i64 1
  %250 = fmul <2 x float> %249, %249
  %251 = insertelement <2 x float> poison, float %mul.i.i701.us.1, i64 0
  %252 = insertelement <2 x float> %251, float %245, i64 1
  %253 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %252, <2 x float> %252, <2 x float> %250)
  %254 = insertelement <2 x float> poison, float %mul8.i.i705.us.1, i64 0
  %255 = insertelement <2 x float> %254, float %247, i64 1
  %256 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %255, <2 x float> %255, <2 x float> %253)
  %257 = extractelement <2 x float> %256, i64 0
  %258 = extractelement <2 x float> %256, i64 1
  %cmp.i711.us.1 = fcmp ogt float %257, %258
  br i1 %cmp.i711.us.1, label %if.then.i732.us.1, label %if.else.i739.us.1

if.else.i739.us.1:                                ; preds = %for.inc319.us
  %m_f14.i733.us.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %140, i64 0, i32 4
  %259 = load <2 x float>, ptr %m_f14.i733.us.1, align 8, !tbaa !137
  %260 = fadd <2 x float> %208, %259
  store <2 x float> %260, ptr %m_f14.i733.us.1, align 8, !tbaa !137
  %arrayidx12.i39.i737.us.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %140, i64 0, i32 4, i32 0, i64 2
  %261 = load float, ptr %arrayidx12.i39.i737.us.1, align 8, !tbaa !137
  %add13.i.i738.us.1 = fadd float %mul7.i.i.us, %261
  store float %add13.i.i738.us.1, ptr %arrayidx12.i39.i737.us.1, align 8, !tbaa !137
  br label %for.inc319.us.1

if.then.i732.us.1:                                ; preds = %for.inc319.us
  %262 = extractelement <2 x float> %215, i64 1
  %mul8.i.i.i25.i718.us.1 = fmul float %262, %246
  %263 = extractelement <2 x float> %215, i64 0
  %264 = tail call float @llvm.fmuladd.f32(float %245, float %263, float %mul8.i.i.i25.i718.us.1)
  %265 = tail call float @llvm.fmuladd.f32(float %247, float %mul8.i.i.i.i717.us, float %264)
  %mul8.i.i26.i721.us.1 = fmul float %mul8.i.i.i.i717.us, %265
  %div.i.i722.us.1 = fdiv float 1.000000e+00, %mul.i700.us.1
  %mul8.i.i29.i725.us.1 = fmul float %div.i.i722.us.1, %mul8.i.i26.i721.us.1
  %m_f.i726.us.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %140, i64 0, i32 4
  %266 = insertelement <2 x float> poison, float %265, i64 0
  %267 = shufflevector <2 x float> %266, <2 x float> poison, <2 x i32> zeroinitializer
  %268 = fmul <2 x float> %215, %267
  %269 = insertelement <2 x float> poison, float %div.i.i722.us.1, i64 0
  %270 = shufflevector <2 x float> %269, <2 x float> poison, <2 x i32> zeroinitializer
  %271 = fmul <2 x float> %270, %268
  %272 = load <2 x float>, ptr %m_f.i726.us.1, align 8, !tbaa !137
  %273 = fsub <2 x float> %272, %271
  store <2 x float> %273, ptr %m_f.i726.us.1, align 8, !tbaa !137
  %arrayidx12.i.i730.us.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %140, i64 0, i32 4, i32 0, i64 2
  %274 = load float, ptr %arrayidx12.i.i730.us.1, align 8, !tbaa !137
  %sub13.i.i731.us.1 = fsub float %274, %mul8.i.i29.i725.us.1
  store float %sub13.i.i731.us.1, ptr %arrayidx12.i.i730.us.1, align 8, !tbaa !137
  br label %for.inc319.us.1

for.inc319.us.1:                                  ; preds = %if.then.i732.us.1, %if.else.i739.us.1
  %m_im.i699.us.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %141, i64 0, i32 6
  %275 = load float, ptr %m_im.i699.us.2, align 8, !tbaa !175
  %mul.i700.us.2 = fmul float %0, %275
  %mul.i.i701.us.2 = fmul float %210, %mul.i700.us.2
  %mul4.i.i703.us.2 = fmul float %209, %mul.i700.us.2
  %mul8.i.i705.us.2 = fmul float %mul7.i.i.us, %mul.i700.us.2
  %276 = load float, ptr %m_v188.us, align 8, !tbaa !137
  %277 = load float, ptr %arrayidx7.i540.us, align 4, !tbaa !137
  %278 = load float, ptr %arrayidx13.i543.us, align 8, !tbaa !137
  %279 = insertelement <2 x float> poison, float %mul4.i.i703.us.2, i64 0
  %280 = insertelement <2 x float> %279, float %277, i64 1
  %281 = fmul <2 x float> %280, %280
  %282 = insertelement <2 x float> poison, float %mul.i.i701.us.2, i64 0
  %283 = insertelement <2 x float> %282, float %276, i64 1
  %284 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %283, <2 x float> %283, <2 x float> %281)
  %285 = insertelement <2 x float> poison, float %mul8.i.i705.us.2, i64 0
  %286 = insertelement <2 x float> %285, float %278, i64 1
  %287 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %286, <2 x float> %286, <2 x float> %284)
  %288 = extractelement <2 x float> %287, i64 0
  %289 = extractelement <2 x float> %287, i64 1
  %cmp.i711.us.2 = fcmp ogt float %288, %289
  br i1 %cmp.i711.us.2, label %if.then.i732.us.2, label %if.else.i739.us.2

if.else.i739.us.2:                                ; preds = %for.inc319.us.1
  %m_f14.i733.us.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %141, i64 0, i32 4
  %290 = load <2 x float>, ptr %m_f14.i733.us.2, align 8, !tbaa !137
  %291 = fadd <2 x float> %208, %290
  store <2 x float> %291, ptr %m_f14.i733.us.2, align 8, !tbaa !137
  %arrayidx12.i39.i737.us.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %141, i64 0, i32 4, i32 0, i64 2
  %292 = load float, ptr %arrayidx12.i39.i737.us.2, align 8, !tbaa !137
  %add13.i.i738.us.2 = fadd float %mul7.i.i.us, %292
  store float %add13.i.i738.us.2, ptr %arrayidx12.i39.i737.us.2, align 8, !tbaa !137
  br label %if.end334.us

if.then.i732.us.2:                                ; preds = %for.inc319.us.1
  %293 = extractelement <2 x float> %215, i64 1
  %mul8.i.i.i25.i718.us.2 = fmul float %293, %277
  %294 = extractelement <2 x float> %215, i64 0
  %295 = tail call float @llvm.fmuladd.f32(float %276, float %294, float %mul8.i.i.i25.i718.us.2)
  %296 = tail call float @llvm.fmuladd.f32(float %278, float %mul8.i.i.i.i717.us, float %295)
  %mul8.i.i26.i721.us.2 = fmul float %mul8.i.i.i.i717.us, %296
  %div.i.i722.us.2 = fdiv float 1.000000e+00, %mul.i700.us.2
  %mul8.i.i29.i725.us.2 = fmul float %div.i.i722.us.2, %mul8.i.i26.i721.us.2
  %m_f.i726.us.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %141, i64 0, i32 4
  %297 = insertelement <2 x float> poison, float %296, i64 0
  %298 = shufflevector <2 x float> %297, <2 x float> poison, <2 x i32> zeroinitializer
  %299 = fmul <2 x float> %215, %298
  %300 = insertelement <2 x float> poison, float %div.i.i722.us.2, i64 0
  %301 = shufflevector <2 x float> %300, <2 x float> poison, <2 x i32> zeroinitializer
  %302 = fmul <2 x float> %301, %299
  %303 = load <2 x float>, ptr %m_f.i726.us.2, align 8, !tbaa !137
  %304 = fsub <2 x float> %303, %302
  store <2 x float> %304, ptr %m_f.i726.us.2, align 8, !tbaa !137
  %arrayidx12.i.i730.us.2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %141, i64 0, i32 4, i32 0, i64 2
  %305 = load float, ptr %arrayidx12.i.i730.us.2, align 8, !tbaa !137
  %sub13.i.i731.us.2 = fsub float %305, %mul8.i.i29.i725.us.2
  store float %sub13.i.i731.us.2, ptr %arrayidx12.i.i730.us.2, align 8, !tbaa !137
  br label %if.end334.us

for.end338:                                       ; preds = %if.end334.us, %for.body168.lr.ph, %for.end
  tail call void @_ZN15CProfileManager12Stop_ProfileEv()
  ret void
}

declare noundef zeroext i1 @_ZN6btDbvt6updateEP10btDbvtNodeR12btDbvtAabbMmRK9btVector3f(ptr noundef nonnull align 8 dereferenceable(64), ptr noundef, ptr noundef nonnull align 4 dereferenceable(32), ptr noundef nonnull align 4 dereferenceable(16), float noundef) local_unnamed_addr #1

; Function Attrs: nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody10updatePoseEv(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this) local_unnamed_addr #23 align 2 {
entry:
  %Apq = alloca %class.btMatrix3x3, align 4
  %r = alloca %class.btMatrix3x3, align 4
  %s = alloca %class.btMatrix3x3, align 4
  %m_bframe = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 1
  %0 = load i8, ptr %m_bframe, align 1, !tbaa !143, !range !159, !noundef !192
  %tobool.not = icmp eq i8 %0, 0
  br i1 %tobool.not, label %if.end59, label %if.then.i

if.then.i:                                        ; preds = %entry
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %1 = load i32, ptr %m_size.i.i, align 4, !tbaa !88
  %cmp33.i = icmp sgt i32 %1, 0
  br i1 %cmp33.i, label %for.body.lr.ph.i, label %_ZNK10btSoftBody11evaluateComEv.exit

for.body.lr.ph.i:                                 ; preds = %if.then.i
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %2 = load ptr, ptr %m_data.i.i, align 8, !tbaa !87
  %m_data.i15.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  %3 = load ptr, ptr %m_data.i15.i, align 8, !tbaa !39
  %wide.trip.count.i = zext i32 %1 to i64
  %xtraiter = and i64 %wide.trip.count.i, 1
  %4 = icmp eq i32 %1, 1
  br i1 %4, label %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa, label %for.body.lr.ph.i.new

for.body.lr.ph.i.new:                             ; preds = %for.body.lr.ph.i
  %unroll_iter = and i64 %wide.trip.count.i, 4294967294
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i.new
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %indvars.iv.next.i.1, %for.body.i ]
  %retval.sroa.7.035.i = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i.new ], [ %retval.sroa.7.8.vec.insert32.i.1, %for.body.i ]
  %retval.sroa.0.034.i = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i.new ], [ %18, %for.body.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.new ], [ %niter.next.1, %for.body.i ]
  %m_x.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv.i, i32 1
  %arrayidx.i17.i = getelementptr inbounds float, ptr %3, i64 %indvars.iv.i
  %5 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx7.i19.i = getelementptr inbounds [4 x float], ptr %m_x.i, i64 0, i64 2
  %6 = load float, ptr %arrayidx7.i19.i, align 4, !tbaa !137
  %mul8.i.i = fmul float %5, %6
  %7 = load <2 x float>, ptr %m_x.i, align 4, !tbaa !137
  %8 = insertelement <2 x float> poison, float %5, i64 0
  %9 = shufflevector <2 x float> %8, <2 x float> poison, <2 x i32> zeroinitializer
  %10 = fmul <2 x float> %9, %7
  %11 = fadd <2 x float> %retval.sroa.0.034.i, %10
  %retval.sroa.7.8.vec.extract.i = extractelement <2 x float> %retval.sroa.7.035.i, i64 0
  %add13.i.i = fadd float %retval.sroa.7.8.vec.extract.i, %mul8.i.i
  %indvars.iv.next.i = or i64 %indvars.iv.i, 1
  %m_x.i.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv.next.i, i32 1
  %arrayidx.i17.i.1 = getelementptr inbounds float, ptr %3, i64 %indvars.iv.next.i
  %12 = load float, ptr %arrayidx.i17.i.1, align 4, !tbaa !137
  %arrayidx7.i19.i.1 = getelementptr inbounds [4 x float], ptr %m_x.i.1, i64 0, i64 2
  %13 = load float, ptr %arrayidx7.i19.i.1, align 4, !tbaa !137
  %mul8.i.i.1 = fmul float %12, %13
  %14 = load <2 x float>, ptr %m_x.i.1, align 4, !tbaa !137
  %15 = insertelement <2 x float> poison, float %12, i64 0
  %16 = shufflevector <2 x float> %15, <2 x float> poison, <2 x i32> zeroinitializer
  %17 = fmul <2 x float> %16, %14
  %18 = fadd <2 x float> %11, %17
  %add13.i.i.1 = fadd float %add13.i.i, %mul8.i.i.1
  %retval.sroa.7.8.vec.insert32.i.1 = insertelement <2 x float> %retval.sroa.7.035.i, float %add13.i.i.1, i64 0
  %indvars.iv.next.i.1 = add nuw nsw i64 %indvars.iv.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa, label %for.body.i

_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa: ; preds = %for.body.i, %for.body.lr.ph.i
  %.lcssa238.ph = phi <2 x float> [ undef, %for.body.lr.ph.i ], [ %18, %for.body.i ]
  %retval.sroa.7.8.vec.insert32.i.lcssa.ph = phi <2 x float> [ undef, %for.body.lr.ph.i ], [ %retval.sroa.7.8.vec.insert32.i.1, %for.body.i ]
  %indvars.iv.i.unr = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i.1, %for.body.i ]
  %retval.sroa.7.035.i.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i ], [ %retval.sroa.7.8.vec.insert32.i.1, %for.body.i ]
  %retval.sroa.0.034.i.unr = phi <2 x float> [ zeroinitializer, %for.body.lr.ph.i ], [ %18, %for.body.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK10btSoftBody11evaluateComEv.exit, label %for.body.i.epil

for.body.i.epil:                                  ; preds = %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa
  %m_x.i.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 %indvars.iv.i.unr, i32 1
  %arrayidx.i17.i.epil = getelementptr inbounds float, ptr %3, i64 %indvars.iv.i.unr
  %19 = load float, ptr %arrayidx.i17.i.epil, align 4, !tbaa !137
  %arrayidx7.i19.i.epil = getelementptr inbounds [4 x float], ptr %m_x.i.epil, i64 0, i64 2
  %20 = load float, ptr %arrayidx7.i19.i.epil, align 4, !tbaa !137
  %mul8.i.i.epil = fmul float %19, %20
  %21 = load <2 x float>, ptr %m_x.i.epil, align 4, !tbaa !137
  %22 = insertelement <2 x float> poison, float %19, i64 0
  %23 = shufflevector <2 x float> %22, <2 x float> poison, <2 x i32> zeroinitializer
  %24 = fmul <2 x float> %23, %21
  %25 = fadd <2 x float> %retval.sroa.0.034.i.unr, %24
  %retval.sroa.7.8.vec.extract.i.epil = extractelement <2 x float> %retval.sroa.7.035.i.unr, i64 0
  %add13.i.i.epil = fadd float %retval.sroa.7.8.vec.extract.i.epil, %mul8.i.i.epil
  %retval.sroa.7.8.vec.insert32.i.epil = insertelement <2 x float> %retval.sroa.7.035.i.unr, float %add13.i.i.epil, i64 0
  br label %_ZNK10btSoftBody11evaluateComEv.exit

_ZNK10btSoftBody11evaluateComEv.exit:             ; preds = %for.body.i.epil, %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa, %if.then.i
  %retval.sroa.0.1.i = phi <2 x float> [ zeroinitializer, %if.then.i ], [ %.lcssa238.ph, %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa ], [ %25, %for.body.i.epil ]
  %retval.sroa.7.1.i = phi <2 x float> [ zeroinitializer, %if.then.i ], [ %retval.sroa.7.8.vec.insert32.i.lcssa.ph, %_ZNK10btSoftBody11evaluateComEv.exit.loopexit.unr-lcssa ], [ %retval.sroa.7.8.vec.insert32.i.epil, %for.body.i.epil ]
  %m_com = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 5
  store <2 x float> %retval.sroa.0.1.i, ptr %m_com, align 8, !tbaa.struct !163
  %com.sroa.6.0.m_com.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 5, i32 0, i64 2
  store <2 x float> %retval.sroa.7.1.i, ptr %com.sroa.6.0.m_com.sroa_idx, align 8, !tbaa.struct !165
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %Apq) #38
  %arrayidx.i = getelementptr inbounds [3 x %class.btVector3], ptr %Apq, i64 0, i64 2
  %ref.tmp.sroa.5.0.arrayidx.i.sroa_idx = getelementptr inbounds [3 x %class.btVector3], ptr %Apq, i64 0, i64 2, i32 0, i64 2
  %arrayidx.i74 = getelementptr inbounds [3 x %class.btVector3], ptr %Apq, i64 0, i64 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) %Apq, i8 0, i64 48, i1 false)
  %arrayidx.i74.promoted = load float, ptr %arrayidx.i74, align 4, !tbaa !137
  br i1 %cmp33.i, label %for.body.lr.ph, label %_ZNK10btSoftBody11evaluateComEv.exit.for.cond.cleanup_crit_edge

_ZNK10btSoftBody11evaluateComEv.exit.for.cond.cleanup_crit_edge: ; preds = %_ZNK10btSoftBody11evaluateComEv.exit
  %arrayidx.i.i42.i99.phi.trans.insert = getelementptr inbounds [4 x float], ptr %Apq, i64 0, i64 1
  %.pre = load float, ptr %arrayidx.i.i42.i99.phi.trans.insert, align 4, !tbaa !137, !noalias !442
  %arrayidx.i.i45.i103.phi.trans.insert = getelementptr inbounds [4 x float], ptr %Apq, i64 0, i64 2
  %arrayidx.i14.i46.i104.phi.trans.insert = getelementptr inbounds [3 x %class.btVector3], ptr %Apq, i64 0, i64 1, i32 0, i64 2
  %26 = load <4 x float>, ptr %arrayidx.i.i45.i103.phi.trans.insert, align 4
  %27 = shufflevector <4 x float> %26, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %.pre234 = load float, ptr %arrayidx.i14.i46.i104.phi.trans.insert, align 4, !tbaa !137, !noalias !442
  %28 = insertelement <2 x float> <float 0x3E80000000000000, float poison>, float %.pre, i64 1
  %29 = insertelement <2 x float> <float poison, float 0x3E90000000000000>, float %arrayidx.i74.promoted, i64 0
  %30 = insertelement <2 x float> %27, float %.pre234, i64 1
  br label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %_ZNK10btSoftBody11evaluateComEv.exit
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 4, i32 5
  %31 = load ptr, ptr %m_data.i, align 8, !tbaa !39
  %m_data.i135 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %32 = load ptr, ptr %m_data.i135, align 8, !tbaa !87
  %com.sroa.6.8.vec.extract = extractelement <2 x float> %retval.sroa.7.1.i, i64 0
  %m_data.i146 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 3, i32 5
  %33 = load ptr, ptr %m_data.i146, align 8, !tbaa !33
  %arrayidx7.i160 = getelementptr inbounds [4 x float], ptr %Apq, i64 0, i64 1
  %arrayidx12.i = getelementptr inbounds [4 x float], ptr %Apq, i64 0, i64 2
  %arrayidx12.i178 = getelementptr inbounds [3 x %class.btVector3], ptr %Apq, i64 0, i64 1, i32 0, i64 2
  %arrayidx7.i160.promoted = load float, ptr %arrayidx7.i160, align 4, !tbaa !137
  %34 = load <4 x float>, ptr %arrayidx12.i, align 4
  %35 = shufflevector <4 x float> %34, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %arrayidx12.i178.promoted = load float, ptr %arrayidx12.i178, align 4, !tbaa !137
  %wide.trip.count = zext i32 %1 to i64
  %36 = insertelement <2 x float> <float 0x3E80000000000000, float poison>, float %arrayidx7.i160.promoted, i64 1
  %37 = insertelement <2 x float> <float poison, float 0x3E90000000000000>, float %arrayidx.i74.promoted, i64 0
  %38 = insertelement <2 x float> %35, float %arrayidx12.i178.promoted, i64 1
  br label %for.body

for.cond.for.cond.cleanup_crit_edge:              ; preds = %for.body
  %39 = extractelement <2 x float> %138, i64 1
  store float %39, ptr %arrayidx7.i160, align 4, !tbaa !137
  %40 = extractelement <2 x float> %134, i64 0
  store float %40, ptr %arrayidx12.i, align 4, !tbaa !137
  %41 = extractelement <2 x float> %134, i64 1
  store float %41, ptr %arrayidx12.i178, align 4, !tbaa !137
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %_ZNK10btSoftBody11evaluateComEv.exit.for.cond.cleanup_crit_edge, %for.cond.for.cond.cleanup_crit_edge
  %add13.i198218.lcssa = phi float [ %add13.i198, %for.cond.for.cond.cleanup_crit_edge ], [ 0x3E98000000000000, %_ZNK10btSoftBody11evaluateComEv.exit.for.cond.cleanup_crit_edge ]
  %42 = phi <2 x float> [ %145, %for.cond.for.cond.cleanup_crit_edge ], [ zeroinitializer, %_ZNK10btSoftBody11evaluateComEv.exit.for.cond.cleanup_crit_edge ]
  %43 = phi <2 x float> [ %138, %for.cond.for.cond.cleanup_crit_edge ], [ %28, %_ZNK10btSoftBody11evaluateComEv.exit.for.cond.cleanup_crit_edge ]
  %44 = phi <2 x float> [ %141, %for.cond.for.cond.cleanup_crit_edge ], [ %29, %_ZNK10btSoftBody11evaluateComEv.exit.for.cond.cleanup_crit_edge ]
  %45 = phi <2 x float> [ %134, %for.cond.for.cond.cleanup_crit_edge ], [ %30, %_ZNK10btSoftBody11evaluateComEv.exit.for.cond.cleanup_crit_edge ]
  %46 = extractelement <2 x float> %43, i64 0
  store float %46, ptr %Apq, align 4, !tbaa !137
  store <2 x float> %44, ptr %arrayidx.i74, align 4, !tbaa !137
  store <2 x float> %42, ptr %arrayidx.i, align 4, !tbaa !137
  store float %add13.i198218.lcssa, ptr %ref.tmp.sroa.5.0.arrayidx.i.sroa_idx, align 4, !tbaa !137
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %r) #38
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %s) #38
  call fastcc void @_ZL14PolarDecomposeRK11btMatrix3x3RS_S2_(ptr noundef nonnull align 4 dereferenceable(48) %Apq, ptr noundef nonnull align 4 dereferenceable(48) %r, ptr noundef nonnull align 4 dereferenceable(48) %s)
  %m_rot = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rot, ptr noundef nonnull align 4 dereferenceable(16) %r, i64 16, i1 false), !tbaa.struct !163
  %arrayidx5.i79 = getelementptr inbounds [3 x %class.btVector3], ptr %r, i64 0, i64 1
  %arrayidx7.i80 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx7.i80, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i79, i64 16, i1 false), !tbaa.struct !163
  %arrayidx9.i = getelementptr inbounds [3 x %class.btVector3], ptr %r, i64 0, i64 2
  %arrayidx11.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 6, i32 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx11.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx9.i, i64 16, i1 false), !tbaa.struct !163
  %m_aqq = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8
  %arrayidx.i.i = getelementptr inbounds [4 x float], ptr %r, i64 0, i64 1
  %arrayidx.i26.i = getelementptr inbounds [3 x %class.btVector3], ptr %r, i64 0, i64 1, i32 0, i64 1
  %arrayidx.i27.i = getelementptr inbounds [3 x %class.btVector3], ptr %r, i64 0, i64 2, i32 0, i64 1
  %arrayidx.i28.i = getelementptr inbounds [4 x float], ptr %r, i64 0, i64 2
  %arrayidx.i29.i = getelementptr inbounds [3 x %class.btVector3], ptr %r, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i30.i = getelementptr inbounds [3 x %class.btVector3], ptr %r, i64 0, i64 2, i32 0, i64 2
  %47 = load float, ptr %r, align 4, !tbaa !137, !noalias !445
  %48 = load float, ptr %arrayidx5.i79, align 4, !tbaa !137, !noalias !445
  %49 = load float, ptr %arrayidx9.i, align 4, !tbaa !137, !noalias !445
  %50 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137, !noalias !445
  %51 = load float, ptr %arrayidx.i26.i, align 4, !tbaa !137, !noalias !445
  %52 = load float, ptr %arrayidx.i27.i, align 4, !tbaa !137, !noalias !445
  %53 = load float, ptr %arrayidx.i28.i, align 4, !tbaa !137, !noalias !445
  %54 = load float, ptr %arrayidx.i29.i, align 4, !tbaa !137, !noalias !445
  %55 = load float, ptr %arrayidx.i30.i, align 4, !tbaa !137, !noalias !445
  %56 = load float, ptr %m_aqq, align 8, !tbaa !137, !noalias !448
  %arrayidx.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 0, i32 0, i64 1
  %57 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137, !noalias !448
  %mul7.i.i = fmul float %50, %57
  %58 = tail call float @llvm.fmuladd.f32(float %47, float %56, float %mul7.i.i)
  %arrayidx.i14.i.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 0, i32 0, i64 2
  %59 = load float, ptr %arrayidx.i14.i.i, align 8, !tbaa !137, !noalias !448
  %60 = tail call float @llvm.fmuladd.f32(float %53, float %59, float %58)
  %mul7.i44.i = fmul float %51, %57
  %61 = tail call float @llvm.fmuladd.f32(float %48, float %56, float %mul7.i44.i)
  %62 = tail call float @llvm.fmuladd.f32(float %54, float %59, float %61)
  %mul7.i48.i = fmul float %52, %57
  %63 = tail call float @llvm.fmuladd.f32(float %49, float %56, float %mul7.i48.i)
  %64 = tail call float @llvm.fmuladd.f32(float %55, float %59, float %63)
  %arrayidx.i.i82 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 1
  %65 = load float, ptr %arrayidx.i.i82, align 8, !tbaa !137, !noalias !448
  %arrayidx.i.i52.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 1, i32 0, i64 1
  %66 = load float, ptr %arrayidx.i.i52.i, align 4, !tbaa !137, !noalias !448
  %mul7.i53.i = fmul float %50, %66
  %67 = tail call float @llvm.fmuladd.f32(float %47, float %65, float %mul7.i53.i)
  %arrayidx.i14.i55.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 1, i32 0, i64 2
  %68 = load float, ptr %arrayidx.i14.i55.i, align 8, !tbaa !137, !noalias !448
  %69 = tail call float @llvm.fmuladd.f32(float %53, float %68, float %67)
  %mul7.i60.i = fmul float %51, %66
  %70 = tail call float @llvm.fmuladd.f32(float %48, float %65, float %mul7.i60.i)
  %71 = tail call float @llvm.fmuladd.f32(float %54, float %68, float %70)
  %mul7.i67.i = fmul float %52, %66
  %72 = tail call float @llvm.fmuladd.f32(float %49, float %65, float %mul7.i67.i)
  %73 = tail call float @llvm.fmuladd.f32(float %55, float %68, float %72)
  %arrayidx.i70.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 2
  %74 = load float, ptr %arrayidx.i70.i, align 8, !tbaa !137, !noalias !448
  %arrayidx.i.i72.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 2, i32 0, i64 1
  %75 = load float, ptr %arrayidx.i.i72.i, align 4, !tbaa !137, !noalias !448
  %mul7.i73.i = fmul float %50, %75
  %76 = tail call float @llvm.fmuladd.f32(float %47, float %74, float %mul7.i73.i)
  %arrayidx.i14.i75.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 8, i32 0, i64 2, i32 0, i64 2
  %77 = load float, ptr %arrayidx.i14.i75.i, align 8, !tbaa !137, !noalias !448
  %78 = tail call float @llvm.fmuladd.f32(float %53, float %77, float %76)
  %mul7.i80.i = fmul float %51, %75
  %79 = tail call float @llvm.fmuladd.f32(float %48, float %74, float %mul7.i80.i)
  %80 = tail call float @llvm.fmuladd.f32(float %54, float %77, float %79)
  %mul7.i87.i = fmul float %52, %75
  %81 = tail call float @llvm.fmuladd.f32(float %49, float %74, float %mul7.i87.i)
  %82 = tail call float @llvm.fmuladd.f32(float %55, float %77, float %81)
  %83 = insertelement <2 x float> poison, float %62, i64 0
  %84 = shufflevector <2 x float> %83, <2 x float> poison, <2 x i32> zeroinitializer
  %85 = fmul <2 x float> %84, %44
  %86 = insertelement <2 x float> poison, float %60, i64 0
  %87 = shufflevector <2 x float> %86, <2 x float> poison, <2 x i32> zeroinitializer
  %88 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %43, <2 x float> %87, <2 x float> %85)
  %89 = insertelement <2 x float> poison, float %64, i64 0
  %90 = shufflevector <2 x float> %89, <2 x float> poison, <2 x i32> zeroinitializer
  %91 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %42, <2 x float> %90, <2 x float> %88)
  %92 = extractelement <2 x float> %45, i64 1
  %mul7.i48.i105 = fmul float %62, %92
  %93 = extractelement <2 x float> %45, i64 0
  %94 = tail call float @llvm.fmuladd.f32(float %93, float %60, float %mul7.i48.i105)
  %95 = tail call float @llvm.fmuladd.f32(float %add13.i198218.lcssa, float %64, float %94)
  %96 = insertelement <2 x float> poison, float %71, i64 0
  %97 = shufflevector <2 x float> %96, <2 x float> poison, <2 x i32> zeroinitializer
  %98 = fmul <2 x float> %97, %44
  %99 = insertelement <2 x float> poison, float %69, i64 0
  %100 = shufflevector <2 x float> %99, <2 x float> poison, <2 x i32> zeroinitializer
  %101 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %43, <2 x float> %100, <2 x float> %98)
  %102 = insertelement <2 x float> poison, float %73, i64 0
  %103 = shufflevector <2 x float> %102, <2 x float> poison, <2 x i32> zeroinitializer
  %104 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %42, <2 x float> %103, <2 x float> %101)
  %mul7.i67.i112 = fmul float %71, %92
  %105 = tail call float @llvm.fmuladd.f32(float %93, float %69, float %mul7.i67.i112)
  %106 = tail call float @llvm.fmuladd.f32(float %add13.i198218.lcssa, float %73, float %105)
  %107 = insertelement <2 x float> poison, float %80, i64 0
  %108 = shufflevector <2 x float> %107, <2 x float> poison, <2 x i32> zeroinitializer
  %109 = fmul <2 x float> %44, %108
  %110 = insertelement <2 x float> poison, float %78, i64 0
  %111 = shufflevector <2 x float> %110, <2 x float> poison, <2 x i32> zeroinitializer
  %112 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %43, <2 x float> %111, <2 x float> %109)
  %113 = insertelement <2 x float> poison, float %82, i64 0
  %114 = shufflevector <2 x float> %113, <2 x float> poison, <2 x i32> zeroinitializer
  %115 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %42, <2 x float> %114, <2 x float> %112)
  %mul7.i87.i118 = fmul float %80, %92
  %116 = tail call float @llvm.fmuladd.f32(float %93, float %78, float %mul7.i87.i118)
  %117 = tail call float @llvm.fmuladd.f32(float %add13.i198218.lcssa, float %82, float %116)
  %m_scl = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7
  store <2 x float> %91, ptr %m_scl, align 8
  %ref.tmp42.sroa.5.0.m_scl.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 0, i32 0, i64 2
  store float %95, ptr %ref.tmp42.sroa.5.0.m_scl.sroa_idx, align 8, !tbaa.struct !165
  %ref.tmp42.sroa.6.0.m_scl.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 0, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp42.sroa.6.0.m_scl.sroa_idx, align 4, !tbaa.struct !318
  %arrayidx7.i131 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 1
  store <2 x float> %104, ptr %arrayidx7.i131, align 8
  %ref.tmp42.sroa.10.16.arrayidx7.i131.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 1, i32 0, i64 2
  store float %106, ptr %ref.tmp42.sroa.10.16.arrayidx7.i131.sroa_idx, align 8, !tbaa.struct !165
  %ref.tmp42.sroa.11.16.arrayidx7.i131.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 1, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp42.sroa.11.16.arrayidx7.i131.sroa_idx, align 4, !tbaa.struct !318
  %arrayidx11.i133 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 2
  store <2 x float> %115, ptr %arrayidx11.i133, align 8
  %ref.tmp42.sroa.15.32.arrayidx11.i133.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 2, i32 0, i64 2
  store float %117, ptr %ref.tmp42.sroa.15.32.arrayidx11.i133.sroa_idx, align 8, !tbaa.struct !165
  %ref.tmp42.sroa.16.32.arrayidx11.i133.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 5, i32 7, i32 0, i64 2, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp42.sroa.16.32.arrayidx11.i133.sroa_idx, align 4, !tbaa.struct !318
  %maxvolume = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 19
  %118 = load float, ptr %maxvolume, align 4
  %cmp46 = fcmp ogt float %118, 1.000000e+00
  br i1 %cmp46, label %if.then47, label %if.end

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %add13.i198218220 = phi float [ 0x3E98000000000000, %for.body.lr.ph ], [ %add13.i198, %for.body ]
  %119 = phi <2 x float> [ zeroinitializer, %for.body.lr.ph ], [ %145, %for.body ]
  %120 = phi <2 x float> [ %36, %for.body.lr.ph ], [ %138, %for.body ]
  %121 = phi <2 x float> [ %37, %for.body.lr.ph ], [ %141, %for.body ]
  %122 = phi <2 x float> [ %38, %for.body.lr.ph ], [ %134, %for.body ]
  %arrayidx.i134 = getelementptr inbounds float, ptr %31, i64 %indvars.iv
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %32, i64 %indvars.iv, i32 1
  %arrayidx11.i140 = getelementptr inbounds [4 x float], ptr %m_x, i64 0, i64 2
  %123 = load float, ptr %arrayidx11.i140, align 4, !tbaa !137
  %sub14.i = fsub float %123, %com.sroa.6.8.vec.extract
  %124 = load float, ptr %arrayidx.i134, align 4, !tbaa !137
  %mul8.i.i145 = fmul float %124, %sub14.i
  %arrayidx.i148 = getelementptr inbounds %class.btVector3, ptr %33, i64 %indvars.iv
  %arrayidx7.i.i152 = getelementptr inbounds [4 x float], ptr %arrayidx.i148, i64 0, i64 2
  %125 = load float, ptr %arrayidx7.i.i152, align 4, !tbaa !137
  %126 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %127 = fsub <2 x float> %126, %retval.sroa.0.1.i
  %128 = insertelement <2 x float> poison, float %124, i64 0
  %129 = shufflevector <2 x float> %128, <2 x float> poison, <2 x i32> zeroinitializer
  %130 = fmul <2 x float> %127, %129
  %131 = insertelement <2 x float> poison, float %125, i64 0
  %132 = shufflevector <2 x float> %131, <2 x float> poison, <2 x i32> zeroinitializer
  %133 = fmul <2 x float> %130, %132
  %134 = fadd <2 x float> %133, %122
  %135 = load <2 x float>, ptr %arrayidx.i148, align 4, !tbaa !137
  %136 = shufflevector <2 x float> %130, <2 x float> poison, <2 x i32> zeroinitializer
  %137 = fmul <2 x float> %136, %135
  %138 = fadd <2 x float> %137, %120
  %139 = shufflevector <2 x float> %130, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %140 = fmul <2 x float> %139, %135
  %141 = fadd <2 x float> %140, %121
  %142 = insertelement <2 x float> poison, float %mul8.i.i145, i64 0
  %143 = shufflevector <2 x float> %142, <2 x float> poison, <2 x i32> zeroinitializer
  %144 = fmul <2 x float> %143, %135
  %mul8.i.i185 = fmul float %mul8.i.i145, %125
  %145 = fadd <2 x float> %144, %119
  %add13.i198 = fadd float %mul8.i.i185, %add13.i198218220
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.for.cond.cleanup_crit_edge, label %for.body

if.then47:                                        ; preds = %for.cond.cleanup
  %146 = fneg float %106
  %147 = extractelement <2 x float> %115, i64 1
  %neg.i.i.i = fmul float %147, %146
  %148 = extractelement <2 x float> %104, i64 1
  %149 = tail call float @llvm.fmuladd.f32(float %148, float %117, float %neg.i.i.i)
  %150 = extractelement <2 x float> %104, i64 0
  %151 = fneg float %150
  %neg23.i.i.i = fmul float %117, %151
  %152 = extractelement <2 x float> %115, i64 0
  %153 = tail call float @llvm.fmuladd.f32(float %106, float %152, float %neg23.i.i.i)
  %154 = extractelement <2 x float> %91, i64 1
  %mul24.i.i.i = fmul float %154, %153
  %155 = extractelement <2 x float> %91, i64 0
  %156 = tail call float @llvm.fmuladd.f32(float %155, float %149, float %mul24.i.i.i)
  %157 = fneg float %148
  %neg36.i.i.i = fmul float %152, %157
  %158 = tail call float @llvm.fmuladd.f32(float %150, float %147, float %neg36.i.i.i)
  %159 = tail call float @llvm.fmuladd.f32(float %95, float %158, float %156)
  %div = fdiv float 1.000000e+00, %159
  %cmp.i = fcmp olt float %div, 1.000000e+00
  %cmp1.i = fcmp ogt float %div, %118
  %h.0.val.x.0.val.i = select i1 %cmp1.i, float %118, float %div
  %cond5.i = select i1 %cmp.i, float 1.000000e+00, float %h.0.val.x.0.val.i
  %160 = insertelement <2 x float> poison, float %cond5.i, i64 0
  %161 = shufflevector <2 x float> %160, <2 x float> poison, <2 x i32> zeroinitializer
  %162 = fmul <2 x float> %91, %161
  %mul8.i.i206 = fmul float %95, %cond5.i
  %retval.sroa.3.12.vec.insert.i.i209 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i206, i64 0
  %163 = fmul <2 x float> %104, %161
  %mul8.i.1.i = fmul float %106, %cond5.i
  %retval.sroa.3.12.vec.insert.i.1.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.1.i, i64 0
  %164 = fmul <2 x float> %115, %161
  %mul8.i.2.i = fmul float %117, %cond5.i
  %retval.sroa.3.12.vec.insert.i.2.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.2.i, i64 0
  store <2 x float> %162, ptr %m_scl, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i209, ptr %ref.tmp42.sroa.5.0.m_scl.sroa_idx, align 8, !tbaa.struct !165
  store <2 x float> %163, ptr %arrayidx7.i131, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.1.i, ptr %ref.tmp42.sroa.10.16.arrayidx7.i131.sroa_idx, align 8, !tbaa.struct !165
  store <2 x float> %164, ptr %arrayidx11.i133, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.2.i, ptr %ref.tmp42.sroa.15.32.arrayidx11.i133.sroa_idx, align 8, !tbaa.struct !165
  br label %if.end

if.end:                                           ; preds = %if.then47, %for.cond.cleanup
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %s) #38
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %r) #38
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %Apq) #38
  br label %if.end59

if.end59:                                         ; preds = %if.end, %entry
  ret void
}

declare void @_ZN6btDbvt19optimizeIncrementalEi(ptr noundef nonnull align 8 dereferenceable(64), i32 noundef) local_unnamed_addr #1

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody16solveConstraintsEv(ptr noundef nonnull align 8 dereferenceable(1496) %this) local_unnamed_addr #0 align 2 {
entry:
  %ra = alloca %class.btVector3, align 8
  %ref.tmp20 = alloca %class.btMatrix3x3, align 4
  tail call void @_ZN10btSoftBody13applyClustersEb(ptr noundef nonnull align 8 dereferenceable(1496) %this, i1 noundef zeroext false)
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !92
  %cmp371 = icmp sgt i32 %0, 0
  br i1 %cmp371, label %for.body.lr.ph, label %for.end

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 10, i32 5
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !91
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 1
  %arrayidx = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 1, i64 1
  %2 = load ptr, ptr %arrayidx, align 8, !tbaa !219
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 2
  %3 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_q6 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 2
  %4 = load <2 x float>, ptr %m_q, align 4, !tbaa !137
  %5 = load <2 x float>, ptr %m_q6, align 4, !tbaa !137
  %6 = fsub <2 x float> %4, %5
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 2, i32 0, i64 2
  %7 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 2, i32 0, i64 2
  %8 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %7, %8
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i, i64 0
  %m_c3 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 8
  store <2 x float> %6, ptr %m_c3, align 4, !tbaa.struct !163
  %ref.tmp.sroa.4.0.m_c3.sroa_idx = getelementptr inbounds i8, ptr %m_c3, i64 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %ref.tmp.sroa.4.0.m_c3.sroa_idx, align 4, !tbaa.struct !165
  %9 = fmul <2 x float> %6, %6
  %mul8.i.i = extractelement <2 x float> %9, i64 1
  %10 = extractelement <2 x float> %6, i64 0
  %11 = tail call float @llvm.fmuladd.f32(float %10, float %10, float %mul8.i.i)
  %12 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub14.i, float %11)
  %m_c0 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 5
  %13 = load float, ptr %m_c0, align 8, !tbaa !301
  %mul = fmul float %13, %12
  %div = fdiv float 1.000000e+00, %mul
  %m_c2 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 7
  store float %div, ptr %m_c2, align 8, !tbaa !451
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.end, label %for.body

for.end:                                          ; preds = %for.body, %entry
  %m_size.i256 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 2
  %14 = load i32, ptr %m_size.i256, align 4, !tbaa !104
  %cmp12373 = icmp sgt i32 %14, 0
  br i1 %cmp12373, label %for.body13.lr.ph, label %for.end36

for.body13.lr.ph:                                 ; preds = %for.end
  %m_data.i257 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 13, i32 5
  %15 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ra, i64 0, i32 1
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3
  %arrayidx5.i268 = getelementptr inbounds [3 x %class.btVector3], ptr %ref.tmp20, i64 0, i64 1
  %arrayidx9.i = getelementptr inbounds [3 x %class.btVector3], ptr %ref.tmp20, i64 0, i64 2
  %wide.trip.count401 = zext i32 %14 to i64
  br label %for.body13

for.body13:                                       ; preds = %for.body13.lr.ph, %for.body13
  %indvars.iv398 = phi i64 [ 0, %for.body13.lr.ph ], [ %indvars.iv.next399, %for.body13 ]
  %16 = load ptr, ptr %m_data.i257, align 8, !tbaa !103
  %arrayidx.i259 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %16, i64 %indvars.iv398
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ra) #38
  %m_body = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %16, i64 %indvars.iv398, i32 2
  %17 = load ptr, ptr %m_body, align 8, !tbaa !245
  %m_worldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %17, i64 0, i32 1
  %m_local = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %16, i64 %indvars.iv398, i32 1
  %18 = load float, ptr %m_local, align 4, !tbaa !137
  %arrayidx5.i.i260 = getelementptr inbounds %class.btCollisionObject, ptr %17, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, i64 1
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %m_local, i64 0, i64 1
  %19 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %arrayidx10.i.i262 = getelementptr inbounds %class.btCollisionObject, ptr %17, i64 0, i32 1, i32 0, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i = getelementptr inbounds [4 x float], ptr %m_local, i64 0, i64 2
  %20 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %arrayidx.i.i = getelementptr inbounds %class.btCollisionObject, ptr %17, i64 0, i32 1, i32 0, i32 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds %class.btCollisionObject, ptr %17, i64 0, i32 1, i32 0, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %class.btCollisionObject, ptr %17, i64 0, i32 1, i32 0, i32 0, i64 1, i32 0, i64 2
  %21 = load float, ptr %m_worldTransform.i, align 4, !tbaa !137
  %22 = load float, ptr %arrayidx5.i.i260, align 4, !tbaa !137
  %23 = load float, ptr %arrayidx10.i.i262, align 4, !tbaa !137
  %24 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %25 = load float, ptr %arrayidx5.i12.i, align 4, !tbaa !137
  %26 = insertelement <2 x float> poison, float %19, i64 0
  %27 = shufflevector <2 x float> %26, <2 x float> poison, <2 x i32> zeroinitializer
  %28 = insertelement <2 x float> poison, float %22, i64 0
  %29 = insertelement <2 x float> %28, float %25, i64 1
  %30 = fmul <2 x float> %27, %29
  %31 = insertelement <2 x float> poison, float %21, i64 0
  %32 = insertelement <2 x float> %31, float %24, i64 1
  %33 = insertelement <2 x float> poison, float %18, i64 0
  %34 = shufflevector <2 x float> %33, <2 x float> poison, <2 x i32> zeroinitializer
  %35 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %32, <2 x float> %34, <2 x float> %30)
  %36 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %37 = insertelement <2 x float> poison, float %23, i64 0
  %38 = insertelement <2 x float> %37, float %36, i64 1
  %39 = insertelement <2 x float> poison, float %20, i64 0
  %40 = shufflevector <2 x float> %39, <2 x float> poison, <2 x i32> zeroinitializer
  %41 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %38, <2 x float> %40, <2 x float> %35)
  %arrayidx.i17.i = getelementptr inbounds %class.btCollisionObject, ptr %17, i64 0, i32 1, i32 0, i32 0, i64 2
  %42 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %class.btCollisionObject, ptr %17, i64 0, i32 1, i32 0, i32 0, i64 2, i32 0, i64 1
  %43 = load float, ptr %arrayidx5.i18.i, align 4, !tbaa !137
  %mul8.i20.i = fmul float %19, %43
  %44 = tail call float @llvm.fmuladd.f32(float %42, float %18, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds %class.btCollisionObject, ptr %17, i64 0, i32 1, i32 0, i32 0, i64 2, i32 0, i64 2
  %45 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %46 = tail call float @llvm.fmuladd.f32(float %45, float %20, float %44)
  %retval.sroa.3.12.vec.insert.i265 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %46, i64 0
  store <2 x float> %41, ptr %ra, align 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i265, ptr %15, align 8
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %ref.tmp20) #38
  %47 = load float, ptr %m_sst, align 8, !tbaa !420
  %48 = load ptr, ptr %arrayidx.i259, align 8, !tbaa !234
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %48, i64 0, i32 6
  %49 = load float, ptr %m_im, align 8, !tbaa !175
  %m_inverseMass.i = getelementptr inbounds %class.btRigidBody, ptr %17, i64 0, i32 4
  %50 = load float, ptr %m_inverseMass.i, align 8, !tbaa !452
  %m_invInertiaTensorWorld.i = getelementptr inbounds %class.btRigidBody, ptr %17, i64 0, i32 1
  call fastcc void @_ZL13ImpulseMatrixfffRK11btMatrix3x3RK9btVector3(ptr noalias nonnull align 4 %ref.tmp20, float noundef %47, float noundef %49, float noundef %50, ptr noundef nonnull align 4 dereferenceable(48) %m_invInertiaTensorWorld.i, ptr noundef nonnull align 4 dereferenceable(16) %ra)
  %m_c025 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %16, i64 %indvars.iv398, i32 3
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %m_c025, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp20, i64 16, i1 false), !tbaa.struct !163
  %arrayidx7.i269 = getelementptr inbounds [3 x %class.btVector3], ptr %m_c025, i64 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx7.i269, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i268, i64 16, i1 false), !tbaa.struct !163
  %arrayidx11.i270 = getelementptr inbounds [3 x %class.btVector3], ptr %m_c025, i64 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx11.i270, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx9.i, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %ref.tmp20) #38
  %m_c1 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %16, i64 %indvars.iv398, i32 4
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_c1, ptr noundef nonnull align 8 dereferenceable(16) %ra, i64 16, i1 false), !tbaa.struct !163
  %51 = load float, ptr %m_sst, align 8, !tbaa !420
  %52 = load float, ptr %m_im, align 8, !tbaa !175
  %mul31 = fmul float %51, %52
  %m_c232 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %16, i64 %indvars.iv398, i32 5
  store float %mul31, ptr %m_c232, align 8, !tbaa !456
  tail call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %17, i1 noundef zeroext false)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ra) #38
  %indvars.iv.next399 = add nuw nsw i64 %indvars.iv398, 1
  %exitcond402.not = icmp eq i64 %indvars.iv.next399, %wide.trip.count401
  br i1 %exitcond402.not, label %for.end36, label %for.body13

for.end36:                                        ; preds = %for.body13, %for.end
  %viterations = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 21
  %53 = load i32, ptr %viterations, align 4, !tbaa !457
  %cmp37 = icmp sgt i32 %53, 0
  br i1 %cmp37, label %for.cond43.preheader.lr.ph, label %if.end

for.cond43.preheader.lr.ph:                       ; preds = %for.end36
  %m_size.i272 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 2
  %m_data.i273 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 26, i32 5
  %54 = load i32, ptr %m_size.i272, align 4, !tbaa !22
  %55 = icmp sgt i32 %54, 0
  br i1 %55, label %for.cond43.preheader, label %for.cond.cleanup

for.cond43.preheader:                             ; preds = %for.cond43.preheader.lr.ph, %for.cond.cleanup47
  %56 = phi i32 [ %59, %for.cond.cleanup47 ], [ %53, %for.cond43.preheader.lr.ph ]
  %57 = phi i32 [ %60, %for.cond.cleanup47 ], [ %54, %for.cond43.preheader.lr.ph ]
  %isolve.0378 = phi i32 [ %inc57, %for.cond.cleanup47 ], [ 0, %for.cond43.preheader.lr.ph ]
  %cmp46375 = icmp sgt i32 %57, 0
  br i1 %cmp46375, label %for.body48, label %for.cond.cleanup47

for.cond.cleanup:                                 ; preds = %for.cond.cleanup47, %for.cond43.preheader.lr.ph
  %m_size.i271 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %58 = load i32, ptr %m_size.i271, align 4, !tbaa !88
  %cmp61379 = icmp sgt i32 %58, 0
  br i1 %cmp61379, label %for.body62.lr.ph, label %if.end

for.body62.lr.ph:                                 ; preds = %for.cond.cleanup
  %m_data.i276 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %m_sst68 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3
  %wide.trip.count409 = zext i32 %58 to i64
  br label %for.body62

for.cond.cleanup47.loopexit:                      ; preds = %for.body48
  %.pre = load i32, ptr %viterations, align 4, !tbaa !457
  br label %for.cond.cleanup47

for.cond.cleanup47:                               ; preds = %for.cond.cleanup47.loopexit, %for.cond43.preheader
  %59 = phi i32 [ %.pre, %for.cond.cleanup47.loopexit ], [ %56, %for.cond43.preheader ]
  %60 = phi i32 [ %63, %for.cond.cleanup47.loopexit ], [ %57, %for.cond43.preheader ]
  %inc57 = add nuw nsw i32 %isolve.0378, 1
  %cmp41 = icmp slt i32 %inc57, %59
  br i1 %cmp41, label %for.cond43.preheader, label %for.cond.cleanup, !llvm.loop !458

for.body48:                                       ; preds = %for.cond43.preheader, %for.body48
  %indvars.iv403 = phi i64 [ %indvars.iv.next404, %for.body48 ], [ 0, %for.cond43.preheader ]
  %61 = load ptr, ptr %m_data.i273, align 8, !tbaa !21
  %arrayidx.i275 = getelementptr inbounds i32, ptr %61, i64 %indvars.iv403
  %62 = load i32, ptr %arrayidx.i275, align 4, !tbaa !202
  %cond.i = icmp eq i32 %62, 0
  %_ZN10btSoftBody12VSolve_LinksEPS_f..i = select i1 %cond.i, ptr @_ZN10btSoftBody12VSolve_LinksEPS_f, ptr null
  tail call void %_ZN10btSoftBody12VSolve_LinksEPS_f..i(ptr noundef nonnull %this, float noundef 1.000000e+00), !callees !460
  %indvars.iv.next404 = add nuw nsw i64 %indvars.iv403, 1
  %63 = load i32, ptr %m_size.i272, align 4, !tbaa !22
  %64 = sext i32 %63 to i64
  %cmp46 = icmp slt i64 %indvars.iv.next404, %64
  br i1 %cmp46, label %for.body48, label %for.cond.cleanup47.loopexit

for.body62:                                       ; preds = %for.body62.lr.ph, %for.body62
  %indvars.iv406 = phi i64 [ 0, %for.body62.lr.ph ], [ %indvars.iv.next407, %for.body62 ]
  %65 = load ptr, ptr %m_data.i276, align 8, !tbaa !87
  %m_q66 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %65, i64 %indvars.iv406, i32 2
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %65, i64 %indvars.iv406, i32 3
  %66 = load float, ptr %m_sst68, align 8, !tbaa !137
  %arrayidx7.i279 = getelementptr inbounds [4 x float], ptr %m_v, i64 0, i64 2
  %67 = load float, ptr %arrayidx7.i279, align 4, !tbaa !137
  %mul8.i = fmul float %66, %67
  %68 = load <2 x float>, ptr %m_v, align 4, !tbaa !137
  %69 = insertelement <2 x float> poison, float %66, i64 0
  %70 = shufflevector <2 x float> %69, <2 x float> poison, <2 x i32> zeroinitializer
  %71 = fmul <2 x float> %70, %68
  %72 = load <2 x float>, ptr %m_q66, align 4, !tbaa !137
  %73 = fadd <2 x float> %71, %72
  %arrayidx11.i287 = getelementptr inbounds [4 x float], ptr %m_q66, i64 0, i64 2
  %74 = load float, ptr %arrayidx11.i287, align 4, !tbaa !137
  %add14.i = fadd float %mul8.i, %74
  %retval.sroa.3.12.vec.insert.i291 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i, i64 0
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %65, i64 %indvars.iv406, i32 1
  store <2 x float> %73, ptr %m_x, align 8, !tbaa.struct !163
  %ref.tmp65.sroa.4.0.m_x.sroa_idx = getelementptr inbounds i8, ptr %m_x, i64 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i291, ptr %ref.tmp65.sroa.4.0.m_x.sroa_idx, align 8, !tbaa.struct !165
  %indvars.iv.next407 = add nuw nsw i64 %indvars.iv406, 1
  %exitcond410.not = icmp eq i64 %indvars.iv.next407, %wide.trip.count409
  br i1 %exitcond410.not, label %if.end, label %for.body62

if.end:                                           ; preds = %for.body62, %for.cond.cleanup, %for.end36
  %piterations = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 22
  %75 = load i32, ptr %piterations, align 8, !tbaa !461
  %cmp78 = icmp sgt i32 %75, 0
  br i1 %cmp78, label %for.body86.lr.ph, label %if.end135

for.body86.lr.ph:                                 ; preds = %if.end
  %m_size.i295 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 2
  %m_data.i296 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 5
  %.pre432 = load i32, ptr %m_size.i295, align 4, !tbaa !28
  br label %for.body86

for.cond.cleanup85:                               ; preds = %for.cond.cleanup96
  %isdt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3, i32 1
  %76 = load float, ptr %isdt, align 4, !tbaa !421
  %kDP = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 2
  %77 = load float, ptr %kDP, align 8, !tbaa !462
  %sub = fsub float 1.000000e+00, %77
  %mul110 = fmul float %76, %sub
  %m_size.i294 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %78 = load i32, ptr %m_size.i294, align 4, !tbaa !88
  %cmp114385 = icmp sgt i32 %78, 0
  br i1 %cmp114385, label %for.body115.lr.ph, label %if.end135

for.body115.lr.ph:                                ; preds = %for.cond.cleanup85
  %m_data.i299 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %wide.trip.count417 = zext i32 %78 to i64
  %79 = insertelement <2 x float> poison, float %mul110, i64 0
  %80 = shufflevector <2 x float> %79, <2 x float> poison, <2 x i32> zeroinitializer
  br label %for.body115

for.body86:                                       ; preds = %for.body86.lr.ph, %for.cond.cleanup96
  %81 = phi i32 [ %75, %for.body86.lr.ph ], [ %83, %for.cond.cleanup96 ]
  %82 = phi i32 [ %.pre432, %for.body86.lr.ph ], [ %84, %for.cond.cleanup96 ]
  %isolve80.0384 = phi i32 [ 0, %for.body86.lr.ph ], [ %inc106, %for.cond.cleanup96 ]
  %conv = sitofp i32 %isolve80.0384 to float
  %conv89 = sitofp i32 %81 to float
  %div90 = fdiv float %conv, %conv89
  %cmp95381 = icmp sgt i32 %82, 0
  br i1 %cmp95381, label %for.body97, label %for.cond.cleanup96

for.cond.cleanup96.loopexit:                      ; preds = %for.body97
  %.pre433 = load i32, ptr %piterations, align 8, !tbaa !461
  br label %for.cond.cleanup96

for.cond.cleanup96:                               ; preds = %for.cond.cleanup96.loopexit, %for.body86
  %83 = phi i32 [ %.pre433, %for.cond.cleanup96.loopexit ], [ %81, %for.body86 ]
  %84 = phi i32 [ %88, %for.cond.cleanup96.loopexit ], [ %82, %for.body86 ]
  %inc106 = add nuw nsw i32 %isolve80.0384, 1
  %cmp84 = icmp slt i32 %inc106, %83
  br i1 %cmp84, label %for.body86, label %for.cond.cleanup85

for.body97:                                       ; preds = %for.body86, %for.body97
  %indvars.iv411 = phi i64 [ %indvars.iv.next412, %for.body97 ], [ 0, %for.body86 ]
  %85 = load ptr, ptr %m_data.i296, align 8, !tbaa !27
  %arrayidx.i298 = getelementptr inbounds i32, ptr %85, i64 %indvars.iv411
  %86 = load i32, ptr %arrayidx.i298, align 4, !tbaa !185
  %87 = sext i32 %86 to i64
  %switch.gep = getelementptr inbounds [4 x ptr], ptr @switch.table._ZN10btSoftBody11staticSolveEi, i64 0, i64 %87
  %switch.load = load ptr, ptr %switch.gep, align 8
  tail call void %switch.load(ptr noundef nonnull %this, float noundef 1.000000e+00, float noundef %div90), !callees !463
  %indvars.iv.next412 = add nuw nsw i64 %indvars.iv411, 1
  %88 = load i32, ptr %m_size.i295, align 4, !tbaa !28
  %89 = sext i32 %88 to i64
  %cmp95 = icmp slt i64 %indvars.iv.next412, %89
  br i1 %cmp95, label %for.body97, label %for.cond.cleanup96.loopexit

for.body115:                                      ; preds = %for.body115.lr.ph, %for.body115
  %indvars.iv414 = phi i64 [ 0, %for.body115.lr.ph ], [ %indvars.iv.next415, %for.body115 ]
  %90 = load ptr, ptr %m_data.i299, align 8, !tbaa !87
  %m_x121 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %90, i64 %indvars.iv414, i32 1
  %m_q122 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %90, i64 %indvars.iv414, i32 2
  %arrayidx11.i306 = getelementptr inbounds [4 x float], ptr %m_x121, i64 0, i64 2
  %91 = load float, ptr %arrayidx11.i306, align 4, !tbaa !137
  %arrayidx13.i307 = getelementptr inbounds [4 x float], ptr %m_q122, i64 0, i64 2
  %92 = load float, ptr %arrayidx13.i307, align 4, !tbaa !137
  %sub14.i308 = fsub float %91, %92
  %93 = load <2 x float>, ptr %m_x121, align 4, !tbaa !137
  %94 = load <2 x float>, ptr %m_q122, align 4, !tbaa !137
  %95 = fsub <2 x float> %93, %94
  %96 = fmul <2 x float> %80, %95
  %mul8.i318 = fmul float %mul110, %sub14.i308
  %retval.sroa.3.12.vec.insert.i321 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i318, i64 0
  %m_v127 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %90, i64 %indvars.iv414, i32 3
  store <2 x float> %96, ptr %m_v127, align 8, !tbaa.struct !163
  %ref.tmp119.sroa.4.0.m_v127.sroa_idx = getelementptr inbounds i8, ptr %m_v127, i64 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i321, ptr %ref.tmp119.sroa.4.0.m_v127.sroa_idx, align 8, !tbaa.struct !165
  %m_f = getelementptr inbounds %"struct.btSoftBody::Node", ptr %90, i64 %indvars.iv414, i32 4
  %indvars.iv.next415 = add nuw nsw i64 %indvars.iv414, 1
  %exitcond418.not = icmp eq i64 %indvars.iv.next415, %wide.trip.count417
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_f, i8 0, i64 16, i1 false)
  br i1 %exitcond418.not, label %if.end135, label %for.body115

if.end135:                                        ; preds = %for.body115, %for.cond.cleanup85, %if.end
  %diterations = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 23
  %97 = load i32, ptr %diterations, align 4, !tbaa !464
  %cmp137 = icmp sgt i32 %97, 0
  br i1 %cmp137, label %if.then138, label %if.end203

if.then138:                                       ; preds = %if.end135
  %kVCF = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 1
  %98 = load float, ptr %kVCF, align 4, !tbaa !136
  %isdt141 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3, i32 1
  %99 = load float, ptr %isdt141, align 4, !tbaa !421
  %mul142 = fmul float %98, %99
  %m_size.i327 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %100 = load i32, ptr %m_size.i327, align 4, !tbaa !88
  %cmp146387 = icmp sgt i32 %100, 0
  br i1 %cmp146387, label %for.body147.lr.ph, label %for.cond163.preheader.lr.ph

for.body147.lr.ph:                                ; preds = %if.then138
  %m_data.i328 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %wide.trip.count422 = zext i32 %100 to i64
  %xtraiter = and i64 %wide.trip.count422, 1
  %101 = icmp eq i32 %100, 1
  br i1 %101, label %for.cond156.preheader.unr-lcssa, label %for.body147.lr.ph.new

for.body147.lr.ph.new:                            ; preds = %for.body147.lr.ph
  %unroll_iter = and i64 %wide.trip.count422, 4294967294
  br label %for.body147

for.cond156.preheader.unr-lcssa:                  ; preds = %for.body147, %for.body147.lr.ph
  %indvars.iv419.unr = phi i64 [ 0, %for.body147.lr.ph ], [ %indvars.iv.next420.1, %for.body147 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond156.preheader, label %for.body147.epil

for.body147.epil:                                 ; preds = %for.cond156.preheader.unr-lcssa
  %102 = load ptr, ptr %m_data.i328, align 8, !tbaa !87
  %m_x151.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %102, i64 %indvars.iv419.unr, i32 1
  %m_q152.epil = getelementptr inbounds %"struct.btSoftBody::Node", ptr %102, i64 %indvars.iv419.unr, i32 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_q152.epil, ptr noundef nonnull align 8 dereferenceable(16) %m_x151.epil, i64 16, i1 false), !tbaa.struct !163
  br label %for.cond156.preheader

for.cond156.preheader:                            ; preds = %for.cond156.preheader.unr-lcssa, %for.body147.epil
  %.pre434 = load i32, ptr %diterations, align 4, !tbaa !464
  %cmp159391 = icmp sgt i32 %.pre434, 0
  br i1 %cmp159391, label %for.cond163.preheader.lr.ph, label %for.cond.cleanup160

for.cond163.preheader.lr.ph:                      ; preds = %if.then138, %for.cond156.preheader
  %103 = phi i32 [ %.pre434, %for.cond156.preheader ], [ %97, %if.then138 ]
  %m_size.i332 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 2
  %m_data.i333 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 28, i32 5
  %104 = load i32, ptr %m_size.i332, align 4, !tbaa !28
  %105 = icmp sgt i32 %104, 0
  br i1 %105, label %for.cond163.preheader, label %for.cond.cleanup160

for.body147:                                      ; preds = %for.body147, %for.body147.lr.ph.new
  %indvars.iv419 = phi i64 [ 0, %for.body147.lr.ph.new ], [ %indvars.iv.next420.1, %for.body147 ]
  %niter = phi i64 [ 0, %for.body147.lr.ph.new ], [ %niter.next.1, %for.body147 ]
  %106 = load ptr, ptr %m_data.i328, align 8, !tbaa !87
  %m_x151 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %106, i64 %indvars.iv419, i32 1
  %m_q152 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %106, i64 %indvars.iv419, i32 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_q152, ptr noundef nonnull align 8 dereferenceable(16) %m_x151, i64 16, i1 false), !tbaa.struct !163
  %indvars.iv.next420 = or i64 %indvars.iv419, 1
  %107 = load ptr, ptr %m_data.i328, align 8, !tbaa !87
  %m_x151.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %107, i64 %indvars.iv.next420, i32 1
  %m_q152.1 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %107, i64 %indvars.iv.next420, i32 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_q152.1, ptr noundef nonnull align 8 dereferenceable(16) %m_x151.1, i64 16, i1 false), !tbaa.struct !163
  %indvars.iv.next420.1 = add nuw nsw i64 %indvars.iv419, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %for.cond156.preheader.unr-lcssa, label %for.body147

for.cond163.preheader:                            ; preds = %for.cond163.preheader.lr.ph, %for.cond.cleanup167
  %108 = phi i32 [ %114, %for.cond.cleanup167 ], [ %103, %for.cond163.preheader.lr.ph ]
  %109 = phi i32 [ %115, %for.cond.cleanup167 ], [ %104, %for.cond163.preheader.lr.ph ]
  %idrift.0392 = phi i32 [ %inc177, %for.cond.cleanup167 ], [ 0, %for.cond163.preheader.lr.ph ]
  %cmp166389 = icmp sgt i32 %109, 0
  br i1 %cmp166389, label %for.body168, label %for.cond.cleanup167

for.cond.cleanup160:                              ; preds = %for.cond.cleanup167, %for.cond163.preheader.lr.ph, %for.cond156.preheader
  %110 = load i32, ptr %m_size.i327, align 4, !tbaa !88
  %cmp184393 = icmp sgt i32 %110, 0
  br i1 %cmp184393, label %for.body186.lr.ph, label %if.end203

for.body186.lr.ph:                                ; preds = %for.cond.cleanup160
  %m_data.i342 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %111 = load ptr, ptr %m_data.i342, align 8, !tbaa !87
  %wide.trip.count430 = zext i32 %110 to i64
  %112 = insertelement <2 x float> poison, float %mul142, i64 0
  %113 = shufflevector <2 x float> %112, <2 x float> poison, <2 x i32> zeroinitializer
  br label %for.body186

for.cond.cleanup167.loopexit:                     ; preds = %for.body168
  %.pre435 = load i32, ptr %diterations, align 4, !tbaa !464
  br label %for.cond.cleanup167

for.cond.cleanup167:                              ; preds = %for.cond.cleanup167.loopexit, %for.cond163.preheader
  %114 = phi i32 [ %.pre435, %for.cond.cleanup167.loopexit ], [ %108, %for.cond163.preheader ]
  %115 = phi i32 [ %119, %for.cond.cleanup167.loopexit ], [ %109, %for.cond163.preheader ]
  %inc177 = add nuw nsw i32 %idrift.0392, 1
  %cmp159 = icmp slt i32 %inc177, %114
  br i1 %cmp159, label %for.cond163.preheader, label %for.cond.cleanup160, !llvm.loop !465

for.body168:                                      ; preds = %for.cond163.preheader, %for.body168
  %indvars.iv424 = phi i64 [ %indvars.iv.next425, %for.body168 ], [ 0, %for.cond163.preheader ]
  %116 = load ptr, ptr %m_data.i333, align 8, !tbaa !27
  %arrayidx.i335 = getelementptr inbounds i32, ptr %116, i64 %indvars.iv424
  %117 = load i32, ptr %arrayidx.i335, align 4, !tbaa !185
  %118 = sext i32 %117 to i64
  %switch.gep441 = getelementptr inbounds [4 x ptr], ptr @switch.table._ZN10btSoftBody11staticSolveEi, i64 0, i64 %118
  %switch.load442 = load ptr, ptr %switch.gep441, align 8
  tail call void %switch.load442(ptr noundef nonnull %this, float noundef 1.000000e+00, float noundef 0.000000e+00), !callees !463
  %indvars.iv.next425 = add nuw nsw i64 %indvars.iv424, 1
  %119 = load i32, ptr %m_size.i332, align 4, !tbaa !28
  %120 = sext i32 %119 to i64
  %cmp166 = icmp slt i64 %indvars.iv.next425, %120
  br i1 %cmp166, label %for.body168, label %for.cond.cleanup167.loopexit

for.body186:                                      ; preds = %for.body186.lr.ph, %for.body186
  %indvars.iv427 = phi i64 [ 0, %for.body186.lr.ph ], [ %indvars.iv.next428, %for.body186 ]
  %m_x192 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %111, i64 %indvars.iv427, i32 1
  %m_q193 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %111, i64 %indvars.iv427, i32 2
  %arrayidx11.i349 = getelementptr inbounds [4 x float], ptr %m_x192, i64 0, i64 2
  %121 = load float, ptr %arrayidx11.i349, align 4, !tbaa !137
  %arrayidx13.i350 = getelementptr inbounds [4 x float], ptr %m_q193, i64 0, i64 2
  %122 = load float, ptr %arrayidx13.i350, align 4, !tbaa !137
  %sub14.i351 = fsub float %121, %122
  %mul8.i361 = fmul float %mul142, %sub14.i351
  %m_v198 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %111, i64 %indvars.iv427, i32 3
  %123 = load <2 x float>, ptr %m_x192, align 4, !tbaa !137
  %124 = load <2 x float>, ptr %m_q193, align 4, !tbaa !137
  %125 = fsub <2 x float> %123, %124
  %126 = fmul <2 x float> %113, %125
  %127 = load <2 x float>, ptr %m_v198, align 4, !tbaa !137
  %128 = fadd <2 x float> %126, %127
  store <2 x float> %128, ptr %m_v198, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds [4 x float], ptr %m_v198, i64 0, i64 2
  %129 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %mul8.i361, %129
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %indvars.iv.next428 = add nuw nsw i64 %indvars.iv427, 1
  %exitcond431.not = icmp eq i64 %indvars.iv.next428, %wide.trip.count430
  br i1 %exitcond431.not, label %if.end203, label %for.body186

if.end203:                                        ; preds = %for.body186, %for.cond.cleanup160, %if.end135
  tail call void @_ZN10btSoftBody12dampClustersEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  tail call void @_ZN10btSoftBody13applyClustersEb(ptr noundef nonnull align 8 dereferenceable(1496) %this, i1 noundef zeroext true)
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody13applyClustersEb(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, i1 noundef zeroext %drift) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZN15CProfileManager13Start_ProfileEPKc(ptr noundef nonnull @.str.1)
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !88
  %or.cond437 = icmp slt i32 %0, 1
  br i1 %or.cond437, label %invoke.cont17, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %entry
  %conv.i.i.i.i = zext i32 %0 to i64
  %mul.i.i.i.i = shl nuw nsw i64 %conv.i.i.i.i, 4
  %call.i.i.i.i227 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
          to label %invoke.cont11 unwind label %ehcleanup179.thread

invoke.cont11:                                    ; preds = %if.then.i.i.i
  tail call void @llvm.memset.p0.i64(ptr align 4 %call.i.i.i.i227, i8 0, i64 %mul.i.i.i.i, i1 false)
  %.pre = load i32, ptr %m_size.i, align 4, !tbaa !88
  %or.cond = icmp slt i32 %.pre, 1
  br i1 %or.cond, label %invoke.cont17, label %if.then.i.i.i241

if.then.i.i.i241:                                 ; preds = %invoke.cont11
  %conv.i.i.i.i238 = zext i32 %.pre to i64
  %mul.i.i.i.i239 = shl nuw nsw i64 %conv.i.i.i.i238, 2
  %call.i.i.i.i268 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i239, i32 noundef 16)
          to label %for.body10.lr.ph.i261 unwind label %lpad16

for.body10.lr.ph.i261:                            ; preds = %if.then.i.i.i241
  tail call void @llvm.memset.p0.i64(ptr align 4 %call.i.i.i.i268, i8 0, i64 %mul.i.i.i.i239, i1 false), !tbaa !137
  br label %invoke.cont17

invoke.cont17:                                    ; preds = %entry, %for.body10.lr.ph.i261, %invoke.cont11
  %deltas.sroa.15423.1468 = phi ptr [ %call.i.i.i.i227, %invoke.cont11 ], [ %call.i.i.i.i227, %for.body10.lr.ph.i261 ], [ null, %entry ]
  %weights.sroa.15412.1 = phi ptr [ null, %invoke.cont11 ], [ %call.i.i.i.i268, %for.body10.lr.ph.i261 ], [ null, %entry ]
  %m_size.i270 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  %1 = load i32, ptr %m_size.i270, align 4, !tbaa !124
  br i1 %drift, label %for.cond.preheader, label %if.end40

for.cond.preheader:                               ; preds = %invoke.cont17
  %cmp438 = icmp sgt i32 %1, 0
  br i1 %cmp438, label %for.body.lr.ph, label %for.cond146.preheader

for.body.lr.ph:                                   ; preds = %for.cond.preheader
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %2 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %wide.trip.count = zext i32 %1 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end ]
  %arrayidx.i = getelementptr inbounds ptr, ptr %2, i64 %indvars.iv
  %3 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %m_ndimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 12
  %4 = load i32, ptr %m_ndimpulses, align 4, !tbaa !322
  %tobool25.not = icmp eq i32 %4, 0
  br i1 %tobool25.not, label %if.end, label %if.then26

if.then26:                                        ; preds = %for.body
  %conv = sitofp i32 %4 to float
  %m_dimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 10
  %div.i = fdiv float 1.000000e+00, %conv
  %5 = load <2 x float>, ptr %m_dimpulses, align 4, !tbaa !137
  %6 = insertelement <2 x float> poison, float %div.i, i64 0
  %7 = shufflevector <2 x float> %6, <2 x float> poison, <2 x i32> zeroinitializer
  %8 = fmul <2 x float> %7, %5
  store <2 x float> %8, ptr %m_dimpulses, align 4, !tbaa !137
  %arrayidx6.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 10, i64 0, i32 0, i64 2
  %9 = load float, ptr %arrayidx6.i.i, align 4, !tbaa !137
  %mul7.i.i = fmul float %div.i, %9
  store float %mul7.i.i, ptr %arrayidx6.i.i, align 4, !tbaa !137
  %arrayidx36 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 10, i64 1
  %10 = load <2 x float>, ptr %arrayidx36, align 4, !tbaa !137
  %11 = fmul <2 x float> %7, %10
  store <2 x float> %11, ptr %arrayidx36, align 4, !tbaa !137
  %arrayidx6.i.i275 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 10, i64 1, i32 0, i64 2
  %12 = load float, ptr %arrayidx6.i.i275, align 4, !tbaa !137
  %mul7.i.i276 = fmul float %div.i, %12
  store float %mul7.i.i276, ptr %arrayidx6.i.i275, align 4, !tbaa !137
  br label %if.end

lpad:                                             ; preds = %if.then3.i.i.i385
  %13 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup183

lpad2:                                            ; preds = %if.then3.i.i.i377
  %14 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup179

ehcleanup179.thread:                              ; preds = %if.then.i.i.i
  %15 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup183

lpad16:                                           ; preds = %if.then.i.i.i241
  %16 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup179

if.end:                                           ; preds = %if.then26, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.end40, label %for.body

if.end40:                                         ; preds = %if.end, %invoke.cont17
  %cmp45442 = icmp sgt i32 %1, 0
  br i1 %cmp45442, label %for.body46.lr.ph, label %for.cond146.preheader

for.body46.lr.ph:                                 ; preds = %if.end40
  %m_data.i278 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %17 = load ptr, ptr %m_data.i278, align 8, !tbaa !123
  %m_data.i297 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %18 = load ptr, ptr %m_data.i297, align 8
  %sub.ptr.rhs.cast = ptrtoint ptr %18 to i64
  %wide.trip.count458 = zext i32 %1 to i64
  br label %for.body46

for.cond146.preheader:                            ; preds = %if.end141, %for.cond.preheader, %if.end40
  %cmp149444 = icmp sgt i32 %0, 0
  br i1 %cmp149444, label %for.body150.lr.ph, label %for.end174

for.body150.lr.ph:                                ; preds = %for.cond146.preheader
  %m_data.i362 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 9, i32 5
  %19 = load ptr, ptr %m_data.i362, align 8
  %wide.trip.count463 = zext i32 %0 to i64
  br label %for.body150

for.body46:                                       ; preds = %for.body46.lr.ph, %if.end141
  %indvars.iv455 = phi i64 [ 0, %for.body46.lr.ph ], [ %indvars.iv.next456, %if.end141 ]
  %arrayidx.i280 = getelementptr inbounds ptr, ptr %17, i64 %indvars.iv455
  %20 = load ptr, ptr %arrayidx.i280, align 8, !tbaa !219
  %m_ndimpulses53 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %20, i64 0, i32 12
  %m_nvimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %20, i64 0, i32 11
  %cond.in = select i1 %drift, ptr %m_ndimpulses53, ptr %m_nvimpulses
  %cond = load i32, ptr %cond.in, align 4, !tbaa !140
  %cmp54 = icmp sgt i32 %cond, 0
  br i1 %cmp54, label %invoke.cont66, label %if.end141

invoke.cont66:                                    ; preds = %for.body46
  %m_dimpulses58 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %20, i64 0, i32 10
  %m_vimpulses = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %20, i64 0, i32 9
  %cond-lvalue = select i1 %drift, ptr %m_dimpulses58, ptr %m_vimpulses
  %21 = load float, ptr %m_sst, align 8, !tbaa !137
  %arrayidx7.i282 = getelementptr inbounds [4 x float], ptr %cond-lvalue, i64 0, i64 2
  %22 = load float, ptr %arrayidx7.i282, align 4, !tbaa !137
  %mul8.i = fmul float %21, %22
  %arrayidx71 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %20, i64 0, i32 10, i64 1
  %arrayidx74 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %20, i64 0, i32 9, i64 1
  %cond-lvalue76 = select i1 %drift, ptr %arrayidx71, ptr %arrayidx74
  %23 = load float, ptr %cond-lvalue76, align 4, !tbaa !137
  %mul.i283 = fmul float %21, %23
  %arrayidx3.i284 = getelementptr inbounds [4 x float], ptr %cond-lvalue76, i64 0, i64 1
  %24 = load <2 x float>, ptr %cond-lvalue, align 4, !tbaa !137
  %25 = insertelement <2 x float> poison, float %21, i64 0
  %26 = shufflevector <2 x float> %25, <2 x float> poison, <2 x i32> zeroinitializer
  %27 = fmul <2 x float> %26, %24
  %28 = load <2 x float>, ptr %arrayidx3.i284, align 4, !tbaa !137
  %29 = fmul <2 x float> %26, %28
  %m_size.i293 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %20, i64 0, i32 2
  %30 = load i32, ptr %m_size.i293, align 4, !tbaa !319
  %cmp88440 = icmp sgt i32 %30, 0
  br i1 %cmp88440, label %for.body89.lr.ph, label %if.end141

for.body89.lr.ph:                                 ; preds = %invoke.cont66
  %m_data.i294 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %20, i64 0, i32 5
  %31 = load ptr, ptr %m_data.i294, align 8, !tbaa !320
  %m_data.i301 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %20, i64 0, i32 1, i32 5
  %32 = load ptr, ptr %m_data.i301, align 8, !tbaa !39
  %arrayidx13.i306 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %20, i64 0, i32 8, i32 0, i64 2
  %arrayidx7.i305 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %20, i64 0, i32 8, i32 0, i64 1
  %m_com = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %20, i64 0, i32 8
  %33 = shufflevector <2 x float> %29, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %34 = insertelement <2 x float> %33, float %mul.i283, i64 1
  %35 = fneg <2 x float> %34
  %36 = extractelement <2 x float> %29, i64 0
  %37 = fneg float %36
  %wide.trip.count453 = zext i32 %30 to i64
  br label %for.body89

for.body89:                                       ; preds = %for.body89.lr.ph, %for.body89
  %indvars.iv450 = phi i64 [ 0, %for.body89.lr.ph ], [ %indvars.iv.next451, %for.body89 ]
  %arrayidx.i296 = getelementptr inbounds ptr, ptr %31, i64 %indvars.iv450
  %38 = load ptr, ptr %arrayidx.i296, align 8, !tbaa !219
  %sub.ptr.lhs.cast = ptrtoint ptr %38 to i64
  %sub.ptr.sub = sub i64 %sub.ptr.lhs.cast, %sub.ptr.rhs.cast
  %sub.ptr.div = sdiv exact i64 %sub.ptr.sub, 120
  %arrayidx.i303 = getelementptr inbounds float, ptr %32, i64 %indvars.iv450
  %39 = load float, ptr %arrayidx.i303, align 4, !tbaa !137
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %38, i64 0, i32 1, i32 0, i64 2
  %arrayidx5.i304 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %38, i64 0, i32 1, i32 0, i64 1
  %40 = load float, ptr %arrayidx5.i304, align 4, !tbaa !137
  %41 = load float, ptr %arrayidx7.i305, align 4, !tbaa !137
  %sub8.i = fsub float %40, %41
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %38, i64 0, i32 1
  %sext = shl i64 %sub.ptr.div, 32
  %idxprom.i333 = ashr exact i64 %sext, 32
  %arrayidx.i334 = getelementptr inbounds %class.btVector3, ptr %deltas.sroa.15423.1468, i64 %idxprom.i333
  %42 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %43 = load float, ptr %arrayidx13.i306, align 4, !tbaa !137
  %44 = load float, ptr %m_x, align 4, !tbaa !137
  %45 = load float, ptr %m_com, align 4, !tbaa !137
  %46 = insertelement <2 x float> poison, float %42, i64 0
  %47 = insertelement <2 x float> %46, float %44, i64 1
  %48 = insertelement <2 x float> poison, float %43, i64 0
  %49 = insertelement <2 x float> %48, float %45, i64 1
  %50 = fsub <2 x float> %47, %49
  %51 = shufflevector <2 x float> %50, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %52 = insertelement <2 x float> %51, float %sub8.i, i64 0
  %53 = fmul <2 x float> %52, %35
  %54 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %29, <2 x float> %50, <2 x float> %53)
  %55 = fadd <2 x float> %27, %54
  %56 = insertelement <2 x float> poison, float %39, i64 0
  %57 = shufflevector <2 x float> %56, <2 x float> poison, <2 x i32> zeroinitializer
  %58 = fmul <2 x float> %57, %55
  %59 = extractelement <2 x float> %50, i64 1
  %neg30.i.i = fmul float %59, %37
  %60 = tail call float @llvm.fmuladd.f32(float %mul.i283, float %sub8.i, float %neg30.i.i)
  %add14.i = fadd float %mul8.i, %60
  %mul8.i326 = fmul float %39, %add14.i
  %61 = load <2 x float>, ptr %arrayidx.i334, align 4, !tbaa !137
  %62 = fadd <2 x float> %61, %58
  store <2 x float> %62, ptr %arrayidx.i334, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds [4 x float], ptr %arrayidx.i334, i64 0, i64 2
  %63 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %add13.i = fadd float %mul8.i326, %63
  store float %add13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  %arrayidx.i341 = getelementptr inbounds float, ptr %weights.sroa.15412.1, i64 %idxprom.i333
  %64 = load float, ptr %arrayidx.i341, align 4, !tbaa !137
  %add = fadd float %39, %64
  store float %add, ptr %arrayidx.i341, align 4, !tbaa !137
  %indvars.iv.next451 = add nuw nsw i64 %indvars.iv450, 1
  %exitcond454.not = icmp eq i64 %indvars.iv.next451, %wide.trip.count453
  br i1 %exitcond454.not, label %if.end141, label %for.body89

if.end141:                                        ; preds = %for.body89, %invoke.cont66, %for.body46
  %indvars.iv.next456 = add nuw nsw i64 %indvars.iv455, 1
  %exitcond459.not = icmp eq i64 %indvars.iv.next456, %wide.trip.count458
  br i1 %exitcond459.not, label %for.cond146.preheader, label %for.body46

for.body150:                                      ; preds = %for.body150.lr.ph, %for.inc172
  %indvars.iv460 = phi i64 [ 0, %for.body150.lr.ph ], [ %indvars.iv.next461, %for.inc172 ]
  %arrayidx.i345 = getelementptr inbounds float, ptr %weights.sroa.15412.1, i64 %indvars.iv460
  %65 = load float, ptr %arrayidx.i345, align 4, !tbaa !137
  %cmp153 = fcmp ogt float %65, 0.000000e+00
  br i1 %cmp153, label %invoke.cont161, label %for.inc172

invoke.cont161:                                   ; preds = %for.body150
  %arrayidx.i348 = getelementptr inbounds %class.btVector3, ptr %deltas.sroa.15423.1468, i64 %indvars.iv460
  %div.i352 = fdiv float 1.000000e+00, %65
  %arrayidx7.i.i356 = getelementptr inbounds [4 x float], ptr %arrayidx.i348, i64 0, i64 2
  %66 = load float, ptr %arrayidx7.i.i356, align 4, !tbaa !137
  %mul8.i.i = fmul float %div.i352, %66
  %m_x167 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %19, i64 %indvars.iv460, i32 1
  %67 = load <2 x float>, ptr %arrayidx.i348, align 4, !tbaa !137
  %68 = insertelement <2 x float> poison, float %div.i352, i64 0
  %69 = shufflevector <2 x float> %68, <2 x float> poison, <2 x i32> zeroinitializer
  %70 = fmul <2 x float> %69, %67
  %71 = load <2 x float>, ptr %m_x167, align 4, !tbaa !137
  %72 = fadd <2 x float> %70, %71
  store <2 x float> %72, ptr %m_x167, align 4, !tbaa !137
  %arrayidx12.i370 = getelementptr inbounds [4 x float], ptr %m_x167, i64 0, i64 2
  %73 = load float, ptr %arrayidx12.i370, align 4, !tbaa !137
  %add13.i371 = fadd float %mul8.i.i, %73
  store float %add13.i371, ptr %arrayidx12.i370, align 4, !tbaa !137
  br label %for.inc172

for.inc172:                                       ; preds = %for.body150, %invoke.cont161
  %indvars.iv.next461 = add nuw nsw i64 %indvars.iv460, 1
  %exitcond464.not = icmp eq i64 %indvars.iv.next461, %wide.trip.count463
  br i1 %exitcond464.not, label %if.then3.i.i.i377, label %for.body150

for.end174:                                       ; preds = %for.cond146.preheader
  %tobool.not.i.i.i373 = icmp eq ptr %weights.sroa.15412.1, null
  br i1 %tobool.not.i.i.i373, label %invoke.cont176, label %if.then3.i.i.i377

if.then3.i.i.i377:                                ; preds = %for.inc172, %for.end174
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %weights.sroa.15412.1)
          to label %invoke.cont176 unwind label %lpad2

invoke.cont176:                                   ; preds = %for.end174, %if.then3.i.i.i377
  %tobool.not.i.i.i381 = icmp eq ptr %deltas.sroa.15423.1468, null
  br i1 %tobool.not.i.i.i381, label %invoke.cont180, label %if.then3.i.i.i385

if.then3.i.i.i385:                                ; preds = %invoke.cont176
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %deltas.sroa.15423.1468)
          to label %invoke.cont180 unwind label %lpad

invoke.cont180:                                   ; preds = %invoke.cont176, %if.then3.i.i.i385
  tail call void @_ZN15CProfileManager12Stop_ProfileEv()
  ret void

ehcleanup179:                                     ; preds = %lpad16, %lpad2
  %deltas.sroa.15423.1469 = phi ptr [ %deltas.sroa.15423.1468, %lpad2 ], [ %call.i.i.i.i227, %lpad16 ]
  %.pn = phi { ptr, i32 } [ %14, %lpad2 ], [ %16, %lpad16 ]
  %tobool.not.i.i.i400 = icmp eq ptr %deltas.sroa.15423.1469, null
  br i1 %tobool.not.i.i.i400, label %ehcleanup183, label %if.then3.i.i.i404

if.then3.i.i.i404:                                ; preds = %ehcleanup179
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %deltas.sroa.15423.1469)
          to label %ehcleanup183 unwind label %terminate.lpad

ehcleanup183:                                     ; preds = %ehcleanup179.thread, %ehcleanup179, %if.then3.i.i.i404, %lpad
  %.pn446 = phi { ptr, i32 } [ %13, %lpad ], [ %.pn, %if.then3.i.i.i404 ], [ %.pn, %ehcleanup179 ], [ %15, %ehcleanup179.thread ]
  invoke void @_ZN15CProfileManager12Stop_ProfileEv()
          to label %invoke.cont186 unwind label %terminate.lpad

invoke.cont186:                                   ; preds = %ehcleanup183
  resume { ptr, i32 } %.pn446

terminate.lpad:                                   ; preds = %ehcleanup183, %if.then3.i.i.i404
  %74 = landingpad { ptr, i32 }
          catch ptr null
  %75 = extractvalue { ptr, i32 } %74, 0
  tail call void @__clang_call_terminate(ptr %75) #39
  unreachable
}

; Function Attrs: inlinehint mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal fastcc void @_ZL13ImpulseMatrixfffRK11btMatrix3x3RK9btVector3(ptr noalias nocapture writeonly align 4 %agg.result, float noundef %dt, float noundef %ima, float noundef %imb, ptr nocapture noundef nonnull readonly align 4 dereferenceable(48) %iwi, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %r) unnamed_addr #24 {
entry:
  %div = fdiv float 1.000000e+00, %dt
  %arrayidx.i.i.i = getelementptr inbounds [4 x float], ptr %r, i64 0, i64 2
  %0 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137, !noalias !466
  %fneg.i.i = fneg float %0
  %arrayidx.i27.i.i = getelementptr inbounds [4 x float], ptr %r, i64 0, i64 1
  %1 = load float, ptr %arrayidx.i27.i.i, align 4, !tbaa !137, !noalias !466
  %2 = load float, ptr %r, align 4, !tbaa !137, !noalias !466
  %fneg12.i.i = fneg float %2
  %fneg17.i.i = fneg float %1
  %3 = load float, ptr %iwi, align 4, !tbaa !137, !noalias !471
  %arrayidx4.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iwi, i64 0, i64 1
  %4 = load float, ptr %arrayidx4.i.i.i, align 4, !tbaa !137, !noalias !471
  %mul7.i.i.i = fmul float %4, %fneg.i.i
  %5 = tail call float @llvm.fmuladd.f32(float %3, float 0.000000e+00, float %mul7.i.i.i)
  %arrayidx9.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iwi, i64 0, i64 2
  %6 = load float, ptr %arrayidx9.i.i.i, align 4, !tbaa !137, !noalias !471
  %7 = tail call float @llvm.fmuladd.f32(float %6, float %1, float %5)
  %arrayidx.i.i42.i.i = getelementptr inbounds [4 x float], ptr %iwi, i64 0, i64 1
  %8 = load float, ptr %arrayidx.i.i42.i.i, align 4, !tbaa !137, !noalias !471
  %arrayidx.i14.i43.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iwi, i64 0, i64 1, i32 0, i64 1
  %9 = load float, ptr %arrayidx.i14.i43.i.i, align 4, !tbaa !137, !noalias !471
  %arrayidx.i16.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iwi, i64 0, i64 2, i32 0, i64 1
  %10 = load float, ptr %arrayidx.i16.i.i.i, align 4, !tbaa !137, !noalias !471
  %arrayidx.i.i45.i.i = getelementptr inbounds [4 x float], ptr %iwi, i64 0, i64 2
  %11 = load float, ptr %arrayidx.i.i45.i.i, align 4, !tbaa !137, !noalias !471
  %arrayidx.i14.i46.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iwi, i64 0, i64 1, i32 0, i64 2
  %12 = load float, ptr %arrayidx.i14.i46.i.i, align 4, !tbaa !137, !noalias !471
  %arrayidx.i16.i49.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iwi, i64 0, i64 2, i32 0, i64 2
  %13 = load float, ptr %arrayidx.i16.i49.i.i, align 4, !tbaa !137, !noalias !471
  %mul7.i53.i.i = fmul float %4, 0.000000e+00
  %14 = tail call float @llvm.fmuladd.f32(float %3, float %0, float %mul7.i53.i.i)
  %15 = tail call float @llvm.fmuladd.f32(float %6, float %fneg12.i.i, float %14)
  %mul7.i73.i.i = fmul float %2, %4
  %16 = tail call float @llvm.fmuladd.f32(float %3, float %fneg17.i.i, float %mul7.i73.i.i)
  %17 = tail call float @llvm.fmuladd.f32(float %6, float 0.000000e+00, float %16)
  %mul7.i80.i.i = fmul float %2, %9
  %18 = tail call float @llvm.fmuladd.f32(float %8, float %fneg17.i.i, float %mul7.i80.i.i)
  %19 = tail call float @llvm.fmuladd.f32(float %10, float 0.000000e+00, float %18)
  %mul7.i87.i.i = fmul float %2, %12
  %20 = tail call float @llvm.fmuladd.f32(float %11, float %fneg17.i.i, float %mul7.i87.i.i)
  %21 = tail call float @llvm.fmuladd.f32(float %13, float 0.000000e+00, float %20)
  %mul7.i87.i29.i = fmul float %19, %fneg12.i.i
  %22 = tail call float @llvm.fmuladd.f32(float %1, float %17, float %mul7.i87.i29.i)
  %23 = tail call float @llvm.fmuladd.f32(float %21, float 0.000000e+00, float %22)
  %sub14.i.2.i.i = fsub float %imb, %23
  %add14.i.2.i = fadd float %sub14.i.2.i.i, %ima
  %24 = insertelement <2 x float> poison, float %9, i64 0
  %25 = shufflevector <2 x float> %24, <2 x float> poison, <2 x i32> zeroinitializer
  %26 = insertelement <2 x float> <float 0.000000e+00, float poison>, float %fneg.i.i, i64 1
  %27 = fmul <2 x float> %25, %26
  %28 = insertelement <2 x float> poison, float %8, i64 0
  %29 = shufflevector <2 x float> %28, <2 x float> poison, <2 x i32> zeroinitializer
  %30 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %0, i64 0
  %31 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %29, <2 x float> %30, <2 x float> %27)
  %32 = insertelement <2 x float> poison, float %10, i64 0
  %33 = shufflevector <2 x float> %32, <2 x float> poison, <2 x i32> zeroinitializer
  %34 = insertelement <2 x float> poison, float %fneg12.i.i, i64 0
  %35 = insertelement <2 x float> %34, float %1, i64 1
  %36 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %33, <2 x float> %35, <2 x float> %31)
  %37 = insertelement <2 x float> poison, float %12, i64 0
  %38 = shufflevector <2 x float> %37, <2 x float> poison, <2 x i32> zeroinitializer
  %39 = fmul <2 x float> %38, %26
  %40 = insertelement <2 x float> poison, float %11, i64 0
  %41 = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> zeroinitializer
  %42 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %41, <2 x float> %30, <2 x float> %39)
  %43 = insertelement <2 x float> poison, float %13, i64 0
  %44 = shufflevector <2 x float> %43, <2 x float> poison, <2 x i32> zeroinitializer
  %45 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %44, <2 x float> %35, <2 x float> %42)
  %46 = extractelement <2 x float> %36, i64 1
  %mul7.i48.i16.i = fmul float %46, %fneg12.i.i
  %47 = tail call float @llvm.fmuladd.f32(float %1, float %7, float %mul7.i48.i16.i)
  %48 = extractelement <2 x float> %45, i64 1
  %49 = tail call float @llvm.fmuladd.f32(float %48, float 0.000000e+00, float %47)
  %50 = fmul <2 x float> %30, %36
  %51 = insertelement <2 x float> %26, float %15, i64 0
  %52 = insertelement <2 x float> <float 0.000000e+00, float poison>, float %7, i64 1
  %53 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %51, <2 x float> %52, <2 x float> %50)
  %54 = insertelement <2 x float> poison, float %fneg17.i.i, i64 0
  %55 = insertelement <2 x float> %54, float %2, i64 1
  %56 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %55, <2 x float> %45, <2 x float> %53)
  %57 = insertelement <2 x float> <float 0.000000e+00, float poison>, float %0, i64 1
  %58 = fmul <2 x float> %57, %36
  %59 = insertelement <2 x float> %52, float %fneg.i.i, i64 0
  %60 = insertelement <2 x float> %51, float 0.000000e+00, i64 1
  %61 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %59, <2 x float> %60, <2 x float> %58)
  %62 = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %63 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %62, <2 x float> %45, <2 x float> %61)
  %64 = extractelement <2 x float> %36, i64 0
  %mul7.i67.i23.i = fmul float %64, %fneg12.i.i
  %65 = tail call float @llvm.fmuladd.f32(float %1, float %15, float %mul7.i67.i23.i)
  %66 = extractelement <2 x float> %45, i64 0
  %67 = tail call float @llvm.fmuladd.f32(float %66, float 0.000000e+00, float %65)
  %68 = insertelement <2 x float> poison, float %19, i64 0
  %69 = shufflevector <2 x float> %68, <2 x float> poison, <2 x i32> zeroinitializer
  %70 = fmul <2 x float> %57, %69
  %71 = insertelement <2 x float> poison, float %fneg.i.i, i64 0
  %72 = insertelement <2 x float> %71, float %17, i64 1
  %73 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %17, i64 0
  %74 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %72, <2 x float> %73, <2 x float> %70)
  %75 = insertelement <2 x float> poison, float %21, i64 0
  %76 = shufflevector <2 x float> %75, <2 x float> poison, <2 x i32> zeroinitializer
  %77 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %62, <2 x float> %76, <2 x float> %74)
  %sub14.i.i.i = fsub float 0.000000e+00, %49
  %78 = fsub <2 x float> zeroinitializer, %56
  %79 = insertelement <2 x float> poison, float %imb, i64 0
  %80 = shufflevector <2 x float> %79, <2 x float> poison, <2 x i32> zeroinitializer
  %81 = fsub <2 x float> %80, %63
  %sub14.i.1.i.i = fsub float 0.000000e+00, %67
  %82 = fsub <2 x float> zeroinitializer, %77
  %add14.i.i = fadd float %sub14.i.i.i, 0.000000e+00
  %83 = fadd <2 x float> %78, zeroinitializer
  %84 = insertelement <2 x float> poison, float %ima, i64 0
  %85 = shufflevector <2 x float> %84, <2 x float> poison, <2 x i32> zeroinitializer
  %86 = fadd <2 x float> %81, %85
  %add14.i.1.i = fadd float %sub14.i.1.i.i, 0.000000e+00
  %87 = fadd <2 x float> %82, zeroinitializer
  %88 = insertelement <2 x float> %83, float %add14.i.i, i64 1
  %89 = fneg <2 x float> %88
  %90 = insertelement <2 x float> %87, float %add14.i.2.i, i64 0
  %91 = fmul <2 x float> %90, %89
  %92 = insertelement <2 x float> %86, float %add14.i.1.i, i64 0
  %93 = shufflevector <2 x float> %90, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %94 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %92, <2 x float> %93, <2 x float> %91)
  %95 = extractelement <2 x float> %83, i64 1
  %96 = extractelement <2 x float> %94, i64 0
  %mul8.i.i = fmul float %95, %96
  %97 = insertelement <2 x float> %83, float %add14.i.1.i, i64 0
  %98 = fneg <2 x float> %97
  %99 = shufflevector <2 x float> %87, <2 x float> %93, <2 x i32> <i32 0, i32 3>
  %100 = fmul <2 x float> %99, %98
  %101 = insertelement <2 x float> %86, float %add14.i.i, i64 1
  %102 = shufflevector <2 x float> %99, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %103 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %101, <2 x float> %102, <2 x float> %100)
  %104 = extractelement <2 x float> %86, i64 1
  %105 = extractelement <2 x float> %103, i64 0
  %106 = tail call float @llvm.fmuladd.f32(float %104, float %105, float %mul8.i.i)
  %107 = fneg <2 x float> %86
  %108 = shufflevector <2 x float> %87, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %109 = fmul <2 x float> %108, %107
  %110 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %83, <2 x float> %87, <2 x float> %109)
  %111 = extractelement <2 x float> %110, i64 0
  %112 = tail call float @llvm.fmuladd.f32(float %add14.i.i, float %111, float %106)
  %div.i = fdiv float 1.000000e+00, %112
  %113 = insertelement <2 x float> poison, float %div.i, i64 0
  %114 = shufflevector <2 x float> %113, <2 x float> poison, <2 x i32> zeroinitializer
  %115 = fmul <2 x float> %103, %114
  %116 = extractelement <2 x float> %86, i64 0
  %shift = shufflevector <2 x float> %89, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %117 = fmul <2 x float> %86, %shift
  %neg.i66.i = extractelement <2 x float> %117, i64 0
  %118 = tail call float @llvm.fmuladd.f32(float %95, float %add14.i.1.i, float %neg.i66.i)
  %mul15.i = fmul float %118, %div.i
  %119 = fmul <2 x float> %94, %114
  %120 = extractelement <2 x float> %107, i64 1
  %neg.i75.i = fmul float %add14.i.1.i, %120
  %121 = extractelement <2 x float> %83, i64 0
  %122 = tail call float @llvm.fmuladd.f32(float %add14.i.i, float %121, float %neg.i75.i)
  %mul24.i = fmul float %122, %div.i
  %123 = fmul <2 x float> %110, %114
  %shift27 = shufflevector <2 x float> %98, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %124 = fmul <2 x float> %83, %shift27
  %neg.i84.i = extractelement <2 x float> %124, i64 0
  %125 = tail call float @llvm.fmuladd.f32(float %104, float %116, float %neg.i84.i)
  %mul33.i = fmul float %125, %div.i
  %126 = fmul <2 x float> %119, zeroinitializer
  %127 = insertelement <2 x float> poison, float %div, i64 0
  %128 = shufflevector <2 x float> %127, <2 x float> poison, <2 x i32> zeroinitializer
  %129 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %115, <2 x float> %128, <2 x float> %126)
  %130 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %123, <2 x float> zeroinitializer, <2 x float> %129)
  %mul7.i48.i = fmul float %mul24.i, 0.000000e+00
  %131 = tail call float @llvm.fmuladd.f32(float %mul15.i, float %div, float %mul7.i48.i)
  %132 = tail call float @llvm.fmuladd.f32(float %mul33.i, float 0.000000e+00, float %131)
  %mul7.i67.i = fmul float %div, %mul24.i
  %133 = tail call float @llvm.fmuladd.f32(float %mul15.i, float 0.000000e+00, float %mul7.i67.i)
  %134 = tail call float @llvm.fmuladd.f32(float %mul33.i, float 0.000000e+00, float %133)
  %135 = tail call float @llvm.fmuladd.f32(float %mul15.i, float 0.000000e+00, float %mul7.i48.i)
  %136 = tail call float @llvm.fmuladd.f32(float %mul33.i, float %div, float %135)
  store <2 x float> %130, ptr %agg.result, align 4, !tbaa !137, !alias.scope !474
  %arrayidx5.i.i.i.i13 = getelementptr inbounds [4 x float], ptr %agg.result, i64 0, i64 2
  store float %132, ptr %arrayidx5.i.i.i.i13, align 4, !tbaa !137, !alias.scope !474
  %arrayidx7.i.i.i.i14 = getelementptr inbounds [4 x float], ptr %agg.result, i64 0, i64 3
  store float 0.000000e+00, ptr %arrayidx7.i.i.i.i14, align 4, !tbaa !137, !alias.scope !474
  %arrayidx3.i.i.i15 = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 1
  %137 = fmul <2 x float> %128, %119
  %138 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %115, <2 x float> zeroinitializer, <2 x float> %137)
  %139 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %123, <2 x float> zeroinitializer, <2 x float> %138)
  store <2 x float> %139, ptr %arrayidx3.i.i.i15, align 4, !tbaa !137, !alias.scope !474
  %arrayidx5.i7.i.i.i17 = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 1, i32 0, i64 2
  store float %134, ptr %arrayidx5.i7.i.i.i17, align 4, !tbaa !137, !alias.scope !474
  %arrayidx7.i8.i.i.i18 = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 1, i32 0, i64 3
  store float 0.000000e+00, ptr %arrayidx7.i8.i.i.i18, align 4, !tbaa !137, !alias.scope !474
  %arrayidx5.i.i.i19 = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 2
  %140 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %115, <2 x float> zeroinitializer, <2 x float> %126)
  %141 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %123, <2 x float> %128, <2 x float> %140)
  store <2 x float> %141, ptr %arrayidx5.i.i.i19, align 4, !tbaa !137, !alias.scope !474
  %arrayidx5.i10.i.i.i21 = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 2, i32 0, i64 2
  store float %136, ptr %arrayidx5.i10.i.i.i21, align 4, !tbaa !137, !alias.scope !474
  %arrayidx7.i11.i.i.i22 = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 2, i32 0, i64 3
  store float 0.000000e+00, ptr %arrayidx7.i11.i.i.i22, align 4, !tbaa !137, !alias.scope !474
  ret void
}

declare void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280), i1 noundef zeroext) local_unnamed_addr #1

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef ptr @_ZN10btSoftBody9getSolverENS_8eVSolver1_E(i32 noundef %solver) local_unnamed_addr #25 align 2 {
entry:
  %cond = icmp eq i32 %solver, 0
  %_ZN10btSoftBody12VSolve_LinksEPS_f. = select i1 %cond, ptr @_ZN10btSoftBody12VSolve_LinksEPS_f, ptr null
  ret ptr %_ZN10btSoftBody12VSolve_LinksEPS_f.
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef ptr @_ZN10btSoftBody9getSolverENS_8ePSolver1_E(i32 noundef %solver) local_unnamed_addr #25 align 2 {
entry:
  %0 = icmp ult i32 %solver, 4
  br i1 %0, label %switch.lookup, label %return

switch.lookup:                                    ; preds = %entry
  %1 = sext i32 %solver to i64
  %switch.gep = getelementptr inbounds [4 x ptr], ptr @switch.table._ZN10btSoftBody11staticSolveEi, i64 0, i64 %1
  %switch.load = load ptr, ptr %switch.gep, align 8
  br label %return

return:                                           ; preds = %entry, %switch.lookup
  %retval.0 = phi ptr [ %switch.load, %switch.lookup ], [ null, %entry ]
  ret ptr %retval.0
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody12dampClustersEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #16 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !124
  %cmp107 = icmp sgt i32 %0, 0
  br i1 %cmp107, label %for.body.lr.ph, label %for.end39

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 24, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !123
  %wide.trip.count113 = zext i32 %0 to i64
  br label %for.body

for.body:                                         ; preds = %for.body.lr.ph, %if.end36
  %indvars.iv110 = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next111, %if.end36 ]
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv110
  %2 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %m_ndamping = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 16
  %3 = load float, ptr %m_ndamping, align 8, !tbaa !477
  %cmp4 = fcmp ogt float %3, 0.000000e+00
  br i1 %cmp4, label %for.cond5.preheader, label %if.end36

for.cond5.preheader:                              ; preds = %for.body
  %m_size.i55 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %2, i64 0, i32 2
  %4 = load i32, ptr %m_size.i55, align 4, !tbaa !319
  %cmp7105 = icmp sgt i32 %4, 0
  br i1 %cmp7105, label %for.body8.lr.ph, label %if.end36

for.body8.lr.ph:                                  ; preds = %for.cond5.preheader
  %m_data.i56 = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %2, i64 0, i32 5
  %5 = load ptr, ptr %m_data.i56, align 8, !tbaa !320
  %m_lv = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 13
  %m_av = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 14
  %m_com = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 8
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 8, i32 0, i64 1
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 8, i32 0, i64 2
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 14, i32 0, i64 1
  %arrayidx11.i64 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %2, i64 0, i32 13, i32 0, i64 2
  %wide.trip.count = zext i32 %4 to i64
  br label %for.body8

for.body8:                                        ; preds = %for.body8.lr.ph, %if.end35
  %indvars.iv = phi i64 [ 0, %for.body8.lr.ph ], [ %indvars.iv.next, %if.end35 ]
  %arrayidx.i58 = getelementptr inbounds ptr, ptr %5, i64 %indvars.iv
  %6 = load ptr, ptr %arrayidx.i58, align 8, !tbaa !219
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 6
  %7 = load float, ptr %m_im, align 8, !tbaa !175
  %cmp11 = fcmp ogt float %7, 0.000000e+00
  br i1 %cmp11, label %if.then12, label %if.end35

if.then12:                                        ; preds = %for.body8
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 2
  %arrayidx5.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 2, i32 0, i64 1
  %8 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %9 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %sub8.i = fsub float %8, %9
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 2, i32 0, i64 2
  %10 = load float, ptr %m_av, align 4, !tbaa !137
  %11 = load float, ptr %arrayidx11.i64, align 4, !tbaa !137
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 3
  %12 = load float, ptr %m_q, align 4, !tbaa !137
  %13 = load float, ptr %m_com, align 4, !tbaa !137
  %14 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %15 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %16 = insertelement <2 x float> poison, float %14, i64 0
  %17 = insertelement <2 x float> %16, float %12, i64 1
  %18 = insertelement <2 x float> poison, float %15, i64 0
  %19 = insertelement <2 x float> %18, float %13, i64 1
  %20 = fsub <2 x float> %17, %19
  %21 = load <2 x float>, ptr %arrayidx.i.i, align 4, !tbaa !137
  %22 = insertelement <2 x float> %21, float %10, i64 0
  %23 = fneg <2 x float> %22
  %24 = insertelement <2 x float> %20, float %sub8.i, i64 1
  %25 = fmul <2 x float> %24, %23
  %26 = shufflevector <2 x float> %25, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %27 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %21, <2 x float> %20, <2 x float> %26)
  %28 = extractelement <2 x float> %21, i64 0
  %29 = fneg float %28
  %30 = extractelement <2 x float> %20, i64 1
  %neg30.i.i = fmul float %30, %29
  %31 = tail call float @llvm.fmuladd.f32(float %10, float %sub8.i, float %neg30.i.i)
  %32 = load <2 x float>, ptr %m_lv, align 4, !tbaa !137
  %33 = fadd <2 x float> %32, %27
  %add14.i = fadd float %31, %11
  %34 = load <2 x float>, ptr %m_v, align 4, !tbaa !137
  %arrayidx10.i.i74 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 3, i32 0, i64 2
  %35 = load float, ptr %arrayidx10.i.i74, align 4, !tbaa !137
  %36 = shufflevector <2 x float> %33, <2 x float> %34, <2 x i32> <i32 1, i32 3>
  %37 = fmul <2 x float> %36, %36
  %38 = shufflevector <2 x float> %33, <2 x float> %34, <2 x i32> <i32 0, i32 2>
  %39 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %38, <2 x float> %38, <2 x float> %37)
  %40 = insertelement <2 x float> poison, float %add14.i, i64 0
  %41 = insertelement <2 x float> %40, float %35, i64 1
  %42 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %41, <2 x float> %41, <2 x float> %39)
  %43 = extractelement <2 x float> %42, i64 0
  %44 = extractelement <2 x float> %42, i64 1
  %cmp23 = fcmp ugt float %43, %44
  br i1 %cmp23, label %if.end35, label %if.then24

if.then24:                                        ; preds = %if.then12
  %45 = fsub <2 x float> %33, %34
  %sub14.i81 = fsub float %add14.i, %35
  %46 = load float, ptr %m_ndamping, align 4, !tbaa !137
  %mul8.i.i89 = fmul float %sub14.i81, %46
  %47 = insertelement <2 x float> poison, float %46, i64 0
  %48 = shufflevector <2 x float> %47, <2 x float> poison, <2 x i32> zeroinitializer
  %49 = fmul <2 x float> %45, %48
  %50 = fadd <2 x float> %34, %49
  store <2 x float> %50, ptr %m_v, align 4, !tbaa !137
  %add13.i = fadd float %35, %mul8.i.i89
  store float %add13.i, ptr %arrayidx10.i.i74, align 4, !tbaa !137
  br label %if.end35

if.end35:                                         ; preds = %if.then12, %if.then24, %for.body8
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %if.end36, label %for.body8

if.end36:                                         ; preds = %if.end35, %for.cond5.preheader, %for.body
  %indvars.iv.next111 = add nuw nsw i64 %indvars.iv110, 1
  %exitcond114.not = icmp eq i64 %indvars.iv.next111, %wide.trip.count113
  br i1 %exitcond114.not, label %for.end39, label %for.body

for.end39:                                        ; preds = %if.end36, %entry
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody11staticSolveEi(ptr noundef nonnull align 8 dereferenceable(1496) %this, i32 noundef %iterations) local_unnamed_addr #4 align 2 {
entry:
  %cmp18 = icmp sgt i32 %iterations, 0
  br i1 %cmp18, label %for.cond2.preheader.lr.ph, label %for.cond.cleanup

for.cond2.preheader.lr.ph:                        ; preds = %entry
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 2
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 27, i32 5
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !28
  %1 = icmp sgt i32 %0, 0
  br i1 %1, label %for.cond2.preheader, label %for.cond.cleanup

for.cond2.preheader:                              ; preds = %for.cond2.preheader.lr.ph, %for.cond.cleanup4
  %2 = phi i32 [ %3, %for.cond.cleanup4 ], [ %0, %for.cond2.preheader.lr.ph ]
  %isolve.019 = phi i32 [ %inc11, %for.cond.cleanup4 ], [ 0, %for.cond2.preheader.lr.ph ]
  %cmp316 = icmp sgt i32 %2, 0
  br i1 %cmp316, label %for.body5, label %for.cond.cleanup4

for.cond.cleanup:                                 ; preds = %for.cond.cleanup4, %for.cond2.preheader.lr.ph, %entry
  ret void

for.cond.cleanup4:                                ; preds = %for.body5, %for.cond2.preheader
  %3 = phi i32 [ %2, %for.cond2.preheader ], [ %7, %for.body5 ]
  %inc11 = add nuw nsw i32 %isolve.019, 1
  %exitcond.not = icmp eq i32 %inc11, %iterations
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.cond2.preheader, !llvm.loop !478

for.body5:                                        ; preds = %for.cond2.preheader, %for.body5
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body5 ], [ 0, %for.cond2.preheader ]
  %4 = load ptr, ptr %m_data.i, align 8, !tbaa !27
  %arrayidx.i = getelementptr inbounds i32, ptr %4, i64 %indvars.iv
  %5 = load i32, ptr %arrayidx.i, align 4, !tbaa !185
  %6 = sext i32 %5 to i64
  %switch.gep = getelementptr inbounds [4 x ptr], ptr @switch.table._ZN10btSoftBody11staticSolveEi, i64 0, i64 %6
  %switch.load = load ptr, ptr %switch.gep, align 8
  tail call void %switch.load(ptr noundef nonnull %this, float noundef 1.000000e+00, float noundef 0.000000e+00), !callees !463
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %7 = load i32, ptr %m_size.i, align 4, !tbaa !28
  %8 = sext i32 %7 to i64
  %cmp3 = icmp slt i64 %indvars.iv.next, %8
  br i1 %cmp3, label %for.body5, label %for.cond.cleanup4
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local void @_ZN10btSoftBody22solveCommonConstraintsEPPS_ii(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #25 align 2 {
entry:
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody13solveClustersERK20btAlignedObjectArrayIPS_E(ptr nocapture noundef nonnull readonly align 8 dereferenceable(25) %bodies) local_unnamed_addr #4 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btAlignedObjectArray.88, ptr %bodies, i64 0, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !479
  %cmp85 = icmp sgt i32 %0, 0
  br i1 %cmp85, label %for.body.lr.ph, label %for.end29

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btAlignedObjectArray.88, ptr %bodies, i64 0, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !482
  %wide.trip.count = zext i32 %0 to i64
  %xtraiter = and i64 %wide.trip.count, 3
  %2 = icmp ult i32 %0, 4
  br i1 %2, label %for.cond3.preheader.unr-lcssa, label %for.body.lr.ph.new

for.body.lr.ph.new:                               ; preds = %for.body.lr.ph
  %unroll_iter = and i64 %wide.trip.count, 4294967292
  br label %for.body

for.cond3.preheader.unr-lcssa:                    ; preds = %for.body, %for.body.lr.ph
  %.sroa.speculated.lcssa.ph = phi i32 [ undef, %for.body.lr.ph ], [ %.sroa.speculated.3, %for.body ]
  %indvars.iv.unr = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next.3, %for.body ]
  %iterations.086.unr = phi i32 [ 0, %for.body.lr.ph ], [ %.sroa.speculated.3, %for.body ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.cond3.preheader, label %for.body.epil

for.body.epil:                                    ; preds = %for.cond3.preheader.unr-lcssa, %for.body.epil
  %indvars.iv.epil = phi i64 [ %indvars.iv.next.epil, %for.body.epil ], [ %indvars.iv.unr, %for.cond3.preheader.unr-lcssa ]
  %iterations.086.epil = phi i32 [ %.sroa.speculated.epil, %for.body.epil ], [ %iterations.086.unr, %for.cond3.preheader.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.epil ], [ 0, %for.cond3.preheader.unr-lcssa ]
  %arrayidx.i.epil = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv.epil
  %3 = load ptr, ptr %arrayidx.i.epil, align 8, !tbaa !219
  %citerations.epil = getelementptr inbounds %class.btSoftBody, ptr %3, i64 0, i32 2, i32 24
  %4 = load i32, ptr %citerations.epil, align 4, !tbaa !140
  %.sroa.speculated.epil = tail call i32 @llvm.smax.i32(i32 %iterations.086.epil, i32 %4)
  %indvars.iv.next.epil = add nuw nsw i64 %indvars.iv.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %for.cond3.preheader, label %for.body.epil, !llvm.loop !483

for.cond3.preheader:                              ; preds = %for.body.epil, %for.cond3.preheader.unr-lcssa
  %.sroa.speculated.lcssa = phi i32 [ %.sroa.speculated.lcssa.ph, %for.cond3.preheader.unr-lcssa ], [ %.sroa.speculated.epil, %for.body.epil ]
  br i1 %cmp85, label %for.body5.lr.ph, label %for.end29

for.body5.lr.ph:                                  ; preds = %for.cond3.preheader
  %m_data.i49 = getelementptr inbounds %class.btAlignedObjectArray.88, ptr %bodies, i64 0, i32 5
  %wide.trip.count102 = zext i32 %0 to i64
  br label %for.body5

for.body:                                         ; preds = %for.body, %for.body.lr.ph.new
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph.new ], [ %indvars.iv.next.3, %for.body ]
  %iterations.086 = phi i32 [ 0, %for.body.lr.ph.new ], [ %.sroa.speculated.3, %for.body ]
  %niter = phi i64 [ 0, %for.body.lr.ph.new ], [ %niter.next.3, %for.body ]
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv
  %5 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %citerations = getelementptr inbounds %class.btSoftBody, ptr %5, i64 0, i32 2, i32 24
  %6 = load i32, ptr %citerations, align 4, !tbaa !140
  %.sroa.speculated = tail call i32 @llvm.smax.i32(i32 %iterations.086, i32 %6)
  %indvars.iv.next = or i64 %indvars.iv, 1
  %arrayidx.i.1 = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv.next
  %7 = load ptr, ptr %arrayidx.i.1, align 8, !tbaa !219
  %citerations.1 = getelementptr inbounds %class.btSoftBody, ptr %7, i64 0, i32 2, i32 24
  %8 = load i32, ptr %citerations.1, align 4, !tbaa !140
  %.sroa.speculated.1 = tail call i32 @llvm.smax.i32(i32 %.sroa.speculated, i32 %8)
  %indvars.iv.next.1 = or i64 %indvars.iv, 2
  %arrayidx.i.2 = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv.next.1
  %9 = load ptr, ptr %arrayidx.i.2, align 8, !tbaa !219
  %citerations.2 = getelementptr inbounds %class.btSoftBody, ptr %9, i64 0, i32 2, i32 24
  %10 = load i32, ptr %citerations.2, align 4, !tbaa !140
  %.sroa.speculated.2 = tail call i32 @llvm.smax.i32(i32 %.sroa.speculated.1, i32 %10)
  %indvars.iv.next.2 = or i64 %indvars.iv, 3
  %arrayidx.i.3 = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv.next.2
  %11 = load ptr, ptr %arrayidx.i.3, align 8, !tbaa !219
  %citerations.3 = getelementptr inbounds %class.btSoftBody, ptr %11, i64 0, i32 2, i32 24
  %12 = load i32, ptr %citerations.3, align 4, !tbaa !140
  %.sroa.speculated.3 = tail call i32 @llvm.smax.i32(i32 %.sroa.speculated.2, i32 %12)
  %indvars.iv.next.3 = add nuw nsw i64 %indvars.iv, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %for.cond3.preheader.unr-lcssa, label %for.body

for.cond10.preheader:                             ; preds = %_ZN10btSoftBody15prepareClustersEi.exit
  %cmp1192 = icmp sgt i32 %.sroa.speculated.lcssa, 0
  br i1 %cmp1192, label %for.cond13.preheader.lr.ph, label %for.cond23.preheader

for.cond13.preheader.lr.ph:                       ; preds = %for.cond10.preheader
  %m_data.i53 = getelementptr inbounds %class.btAlignedObjectArray.88, ptr %bodies, i64 0, i32 5
  br i1 %cmp85, label %for.cond13.preheader.us.preheader, label %for.end29

for.cond13.preheader.us.preheader:                ; preds = %for.cond13.preheader.lr.ph
  %wide.trip.count107 = zext i32 %0 to i64
  br label %for.cond13.preheader.us

for.cond13.preheader.us:                          ; preds = %for.cond13.preheader.us.preheader, %for.cond13.for.cond.cleanup_crit_edge.us
  %i.293.us = phi i32 [ %inc21.us, %for.cond13.for.cond.cleanup_crit_edge.us ], [ 0, %for.cond13.preheader.us.preheader ]
  br label %for.body15.us

for.body15.us:                                    ; preds = %for.cond13.preheader.us, %_ZN10btSoftBody13solveClustersEf.exit.us
  %indvars.iv104 = phi i64 [ 0, %for.cond13.preheader.us ], [ %indvars.iv.next105, %_ZN10btSoftBody13solveClustersEf.exit.us ]
  %13 = load ptr, ptr %m_data.i53, align 8, !tbaa !482
  %arrayidx.i55.us = getelementptr inbounds ptr, ptr %13, i64 %indvars.iv104
  %14 = load ptr, ptr %arrayidx.i55.us, align 8, !tbaa !219
  %m_size.i.i56.us = getelementptr inbounds %class.btSoftBody, ptr %14, i64 0, i32 16, i32 2
  %15 = load i32, ptr %m_size.i.i56.us, align 4, !tbaa !116
  %cmp6.i57.us = icmp sgt i32 %15, 0
  br i1 %cmp6.i57.us, label %for.body.lr.ph.i60.us, label %_ZN10btSoftBody13solveClustersEf.exit.us

for.body.lr.ph.i60.us:                            ; preds = %for.body15.us
  %m_data.i.i58.us = getelementptr inbounds %class.btSoftBody, ptr %14, i64 0, i32 16, i32 5
  %m_sst.i59.us = getelementptr inbounds %class.btSoftBody, ptr %14, i64 0, i32 3
  %wide.trip.count.i.us = zext i32 %15 to i64
  br label %for.body.i66.us

for.body.i66.us:                                  ; preds = %for.body.i66.us, %for.body.lr.ph.i60.us
  %indvars.iv.i61.us = phi i64 [ 0, %for.body.lr.ph.i60.us ], [ %indvars.iv.next.i65.us, %for.body.i66.us ]
  %16 = load ptr, ptr %m_data.i.i58.us, align 8, !tbaa !115
  %arrayidx.i.i62.us = getelementptr inbounds ptr, ptr %16, i64 %indvars.iv.i61.us
  %17 = load ptr, ptr %arrayidx.i.i62.us, align 8, !tbaa !219
  %18 = load float, ptr %m_sst.i59.us, align 8, !tbaa !420
  %vtable.i63.us = load ptr, ptr %17, align 8, !tbaa !5
  %vfn.i64.us = getelementptr inbounds ptr, ptr %vtable.i63.us, i64 3
  %19 = load ptr, ptr %vfn.i64.us, align 8
  tail call void %19(ptr noundef nonnull align 8 dereferenceable(181) %17, float noundef %18, float noundef 1.000000e+00)
  %indvars.iv.next.i65.us = add nuw nsw i64 %indvars.iv.i61.us, 1
  %exitcond.not.i.us = icmp eq i64 %indvars.iv.next.i65.us, %wide.trip.count.i.us
  br i1 %exitcond.not.i.us, label %_ZN10btSoftBody13solveClustersEf.exit.us, label %for.body.i66.us

_ZN10btSoftBody13solveClustersEf.exit.us:         ; preds = %for.body.i66.us, %for.body15.us
  %indvars.iv.next105 = add nuw nsw i64 %indvars.iv104, 1
  %exitcond108.not = icmp eq i64 %indvars.iv.next105, %wide.trip.count107
  br i1 %exitcond108.not, label %for.cond13.for.cond.cleanup_crit_edge.us, label %for.body15.us

for.cond13.for.cond.cleanup_crit_edge.us:         ; preds = %_ZN10btSoftBody13solveClustersEf.exit.us
  %inc21.us = add nuw nsw i32 %i.293.us, 1
  %exitcond109.not = icmp eq i32 %inc21.us, %.sroa.speculated.lcssa
  br i1 %exitcond109.not, label %for.cond23.preheader, label %for.cond13.preheader.us

for.body5:                                        ; preds = %for.body5.lr.ph, %_ZN10btSoftBody15prepareClustersEi.exit
  %indvars.iv99 = phi i64 [ 0, %for.body5.lr.ph ], [ %indvars.iv.next100, %_ZN10btSoftBody15prepareClustersEi.exit ]
  %20 = load ptr, ptr %m_data.i49, align 8, !tbaa !482
  %arrayidx.i51 = getelementptr inbounds ptr, ptr %20, i64 %indvars.iv99
  %21 = load ptr, ptr %arrayidx.i51, align 8, !tbaa !219
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %21, i64 0, i32 16, i32 2
  %22 = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  %cmp6.i = icmp sgt i32 %22, 0
  br i1 %cmp6.i, label %for.body.lr.ph.i, label %_ZN10btSoftBody15prepareClustersEi.exit

for.body.lr.ph.i:                                 ; preds = %for.body5
  %m_data.i.i = getelementptr inbounds %class.btSoftBody, ptr %21, i64 0, i32 16, i32 5
  %m_sst.i = getelementptr inbounds %class.btSoftBody, ptr %21, i64 0, i32 3
  br label %for.body.i

for.body.i:                                       ; preds = %for.body.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %for.body.i ]
  %23 = load ptr, ptr %m_data.i.i, align 8, !tbaa !115
  %arrayidx.i.i = getelementptr inbounds ptr, ptr %23, i64 %indvars.iv.i
  %24 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !219
  %25 = load float, ptr %m_sst.i, align 8, !tbaa !420
  %vtable.i = load ptr, ptr %24, align 8, !tbaa !5
  %vfn.i = getelementptr inbounds ptr, ptr %vtable.i, i64 2
  %26 = load ptr, ptr %vfn.i, align 8
  tail call void %26(ptr noundef nonnull align 8 dereferenceable(181) %24, float noundef %25, i32 noundef %.sroa.speculated.lcssa)
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %27 = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  %28 = sext i32 %27 to i64
  %cmp.i52 = icmp slt i64 %indvars.iv.next.i, %28
  br i1 %cmp.i52, label %for.body.i, label %_ZN10btSoftBody15prepareClustersEi.exit

_ZN10btSoftBody15prepareClustersEi.exit:          ; preds = %for.body.i, %for.body5
  %indvars.iv.next100 = add nuw nsw i64 %indvars.iv99, 1
  %exitcond103.not = icmp eq i64 %indvars.iv.next100, %wide.trip.count102
  br i1 %exitcond103.not, label %for.cond10.preheader, label %for.body5

for.cond23.preheader:                             ; preds = %for.cond13.for.cond.cleanup_crit_edge.us, %for.cond10.preheader
  br i1 %cmp85, label %for.body25.lr.ph, label %for.end29

for.body25.lr.ph:                                 ; preds = %for.cond23.preheader
  %m_data.i67 = getelementptr inbounds %class.btAlignedObjectArray.88, ptr %bodies, i64 0, i32 5
  %wide.trip.count113 = zext i32 %0 to i64
  br label %for.body25

for.body25:                                       ; preds = %for.body25.lr.ph, %_ZN10btSoftBody15cleanupClustersEv.exit
  %indvars.iv110 = phi i64 [ 0, %for.body25.lr.ph ], [ %indvars.iv.next111, %_ZN10btSoftBody15cleanupClustersEv.exit ]
  %29 = load ptr, ptr %m_data.i67, align 8, !tbaa !482
  %arrayidx.i69 = getelementptr inbounds ptr, ptr %29, i64 %indvars.iv110
  %30 = load ptr, ptr %arrayidx.i69, align 8, !tbaa !219
  %m_size.i.i70 = getelementptr inbounds %class.btSoftBody, ptr %30, i64 0, i32 16, i32 2
  %31 = load i32, ptr %m_size.i.i70, align 4, !tbaa !116
  %cmp26.i = icmp sgt i32 %31, 0
  br i1 %cmp26.i, label %for.body.lr.ph.i73, label %_ZN10btSoftBody15cleanupClustersEv.exit

for.body.lr.ph.i73:                               ; preds = %for.body25
  %m_data.i.i71 = getelementptr inbounds %class.btSoftBody, ptr %30, i64 0, i32 16, i32 5
  %m_sst.i72 = getelementptr inbounds %class.btSoftBody, ptr %30, i64 0, i32 3
  br label %for.body.i77

for.body.i77:                                     ; preds = %for.inc.i, %for.body.lr.ph.i73
  %i.027.i = phi i32 [ 0, %for.body.lr.ph.i73 ], [ %inc.i, %for.inc.i ]
  %32 = load ptr, ptr %m_data.i.i71, align 8, !tbaa !115
  %idxprom.i.i = sext i32 %i.027.i to i64
  %arrayidx.i.i74 = getelementptr inbounds ptr, ptr %32, i64 %idxprom.i.i
  %33 = load ptr, ptr %arrayidx.i.i74, align 8, !tbaa !219
  %34 = load float, ptr %m_sst.i72, align 8, !tbaa !420
  %vtable.i75 = load ptr, ptr %33, align 8, !tbaa !5
  %vfn.i76 = getelementptr inbounds ptr, ptr %vtable.i75, i64 4
  %35 = load ptr, ptr %vfn.i76, align 8
  tail call void %35(ptr noundef nonnull align 8 dereferenceable(181) %33, float noundef %34)
  %36 = load ptr, ptr %m_data.i.i71, align 8, !tbaa !115
  %arrayidx.i18.i = getelementptr inbounds ptr, ptr %36, i64 %idxprom.i.i
  %37 = load ptr, ptr %arrayidx.i18.i, align 8, !tbaa !219
  %m_delete.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %37, i64 0, i32 9
  %38 = load i8, ptr %m_delete.i, align 4, !tbaa !484, !range !159, !noundef !192
  %tobool.not.i = icmp eq i8 %38, 0
  br i1 %tobool.not.i, label %for.body.for.inc_crit_edge.i, label %if.then.i

for.body.for.inc_crit_edge.i:                     ; preds = %for.body.i77
  %.pre.i = load i32, ptr %m_size.i.i70, align 4, !tbaa !116
  br label %for.inc.i

if.then.i:                                        ; preds = %for.body.i77
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %37)
  %dec.i = add nsw i32 %i.027.i, -1
  %39 = load i32, ptr %m_size.i.i70, align 4, !tbaa !116
  %cmp8.i.i.i = icmp sgt i32 %39, 0
  br i1 %cmp8.i.i.i, label %for.body.lr.ph.i.i.i, label %for.inc.i

for.body.lr.ph.i.i.i:                             ; preds = %if.then.i
  %40 = load ptr, ptr %m_data.i.i71, align 8, !tbaa !115
  %arrayidx.i24.i = getelementptr inbounds ptr, ptr %40, i64 %idxprom.i.i
  %41 = load ptr, ptr %arrayidx.i24.i, align 8, !tbaa !219
  %wide.trip.count.i.i.i = zext i32 %39 to i64
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.inc.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i, %for.inc.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds ptr, ptr %40, i64 %indvars.iv.i.i.i
  %42 = load ptr, ptr %arrayidx.i.i.i, align 8, !tbaa !219
  %cmp3.i.i.i = icmp eq ptr %42, %41
  br i1 %cmp3.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i.i, label %for.inc.i.i.i

for.inc.i.i.i:                                    ; preds = %for.body.i.i.i
  %indvars.iv.next.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i, 1
  %exitcond.not.i.i.i = icmp eq i64 %indvars.iv.next.i.i.i, %wide.trip.count.i.i.i
  br i1 %exitcond.not.i.i.i, label %for.inc.i, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i.i: ; preds = %for.body.i.i.i
  %43 = trunc i64 %indvars.iv.i.i.i to i32
  %cmp.i.i = icmp sgt i32 %39, %43
  br i1 %cmp.i.i, label %if.then.i.i, label %for.inc.i

if.then.i.i:                                      ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i.i
  %sub.i.i = add nsw i32 %39, -1
  %sext.i.i = shl i64 %indvars.iv.i.i.i, 32
  %idxprom.i.i.i = ashr exact i64 %sext.i.i, 32
  %arrayidx.i7.i.i = getelementptr inbounds ptr, ptr %40, i64 %idxprom.i.i.i
  %44 = load ptr, ptr %arrayidx.i7.i.i, align 8, !tbaa !219
  %idxprom3.i.i.i = sext i32 %sub.i.i to i64
  %arrayidx4.i.i.i = getelementptr inbounds ptr, ptr %40, i64 %idxprom3.i.i.i
  %45 = load ptr, ptr %arrayidx4.i.i.i, align 8, !tbaa !219
  store ptr %45, ptr %arrayidx.i7.i.i, align 8, !tbaa !219
  %46 = load ptr, ptr %m_data.i.i71, align 8, !tbaa !115
  %arrayidx10.i.i.i = getelementptr inbounds ptr, ptr %46, i64 %idxprom3.i.i.i
  store ptr %44, ptr %arrayidx10.i.i.i, align 8, !tbaa !219
  store i32 %sub.i.i, ptr %m_size.i.i70, align 4, !tbaa !116
  br label %for.inc.i

for.inc.i:                                        ; preds = %for.inc.i.i.i, %if.then.i.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i.i, %if.then.i, %for.body.for.inc_crit_edge.i
  %47 = phi i32 [ %.pre.i, %for.body.for.inc_crit_edge.i ], [ %39, %if.then.i ], [ %39, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i.i ], [ %sub.i.i, %if.then.i.i ], [ %39, %for.inc.i.i.i ]
  %i.1.i = phi i32 [ %i.027.i, %for.body.for.inc_crit_edge.i ], [ %dec.i, %if.then.i ], [ %dec.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i.i ], [ %dec.i, %if.then.i.i ], [ %dec.i, %for.inc.i.i.i ]
  %inc.i = add nsw i32 %i.1.i, 1
  %cmp.i78 = icmp slt i32 %inc.i, %47
  br i1 %cmp.i78, label %for.body.i77, label %_ZN10btSoftBody15cleanupClustersEv.exit

_ZN10btSoftBody15cleanupClustersEv.exit:          ; preds = %for.inc.i, %for.body25
  %indvars.iv.next111 = add nuw nsw i64 %indvars.iv110, 1
  %exitcond114.not = icmp eq i64 %indvars.iv.next111, %wide.trip.count113
  br i1 %exitcond114.not, label %for.end29, label %for.body25

for.end29:                                        ; preds = %_ZN10btSoftBody15cleanupClustersEv.exit, %for.cond3.preheader, %entry, %for.cond13.preheader.lr.ph, %for.cond23.preheader
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody15prepareClustersEi(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, i32 noundef %iterations) local_unnamed_addr #4 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !116
  %cmp6 = icmp sgt i32 %0, 0
  br i1 %cmp6, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !115
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv
  %2 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %3 = load float, ptr %m_sst, align 8, !tbaa !420
  %vtable = load ptr, ptr %2, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 2
  %4 = load ptr, ptr %vfn, align 8
  tail call void %4(ptr noundef nonnull align 8 dereferenceable(181) %2, float noundef %3, i32 noundef %iterations)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %5 = load i32, ptr %m_size.i, align 4, !tbaa !116
  %6 = sext i32 %5 to i64
  %cmp = icmp slt i64 %indvars.iv.next, %6
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody13solveClustersEf(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, float noundef %sor) local_unnamed_addr #4 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !116
  %cmp6 = icmp sgt i32 %0, 0
  br i1 %cmp6, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !115
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv
  %2 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %3 = load float, ptr %m_sst, align 8, !tbaa !420
  %vtable = load ptr, ptr %2, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 3
  %4 = load ptr, ptr %vfn, align 8
  tail call void %4(ptr noundef nonnull align 8 dereferenceable(181) %2, float noundef %3, float noundef %sor)
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody15cleanupClustersEv(ptr nocapture noundef nonnull align 8 dereferenceable(1496) %this) local_unnamed_addr #4 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !116
  %cmp26 = icmp sgt i32 %0, 0
  br i1 %cmp26, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 16, i32 5
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.inc, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.inc
  %i.027 = phi i32 [ 0, %for.body.lr.ph ], [ %inc, %for.inc ]
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !115
  %idxprom.i = sext i32 %i.027 to i64
  %arrayidx.i = getelementptr inbounds ptr, ptr %1, i64 %idxprom.i
  %2 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  %3 = load float, ptr %m_sst, align 8, !tbaa !420
  %vtable = load ptr, ptr %2, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 4
  %4 = load ptr, ptr %vfn, align 8
  tail call void %4(ptr noundef nonnull align 8 dereferenceable(181) %2, float noundef %3)
  %5 = load ptr, ptr %m_data.i, align 8, !tbaa !115
  %arrayidx.i18 = getelementptr inbounds ptr, ptr %5, i64 %idxprom.i
  %6 = load ptr, ptr %arrayidx.i18, align 8, !tbaa !219
  %m_delete = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %6, i64 0, i32 9
  %7 = load i8, ptr %m_delete, align 4, !tbaa !484, !range !159, !noundef !192
  %tobool.not = icmp eq i8 %7, 0
  br i1 %tobool.not, label %for.body.for.inc_crit_edge, label %if.then

for.body.for.inc_crit_edge:                       ; preds = %for.body
  %.pre = load i32, ptr %m_size.i, align 4, !tbaa !116
  br label %for.inc

if.then:                                          ; preds = %for.body
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %6)
  %dec = add nsw i32 %i.027, -1
  %8 = load i32, ptr %m_size.i, align 4, !tbaa !116
  %cmp8.i.i = icmp sgt i32 %8, 0
  br i1 %cmp8.i.i, label %for.body.lr.ph.i.i, label %for.inc

for.body.lr.ph.i.i:                               ; preds = %if.then
  %9 = load ptr, ptr %m_data.i, align 8, !tbaa !115
  %arrayidx.i24 = getelementptr inbounds ptr, ptr %9, i64 %idxprom.i
  %10 = load ptr, ptr %arrayidx.i24, align 8, !tbaa !219
  %wide.trip.count.i.i = zext i32 %8 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.inc.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %for.inc.i.i ]
  %arrayidx.i.i = getelementptr inbounds ptr, ptr %9, i64 %indvars.iv.i.i
  %11 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !219
  %cmp3.i.i = icmp eq ptr %11, %10
  br i1 %cmp3.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i, label %for.inc.i.i

for.inc.i.i:                                      ; preds = %for.body.i.i
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %for.inc, label %for.body.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i: ; preds = %for.body.i.i
  %12 = trunc i64 %indvars.iv.i.i to i32
  %cmp.i = icmp sgt i32 %8, %12
  br i1 %cmp.i, label %if.then.i, label %for.inc

if.then.i:                                        ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i
  %sub.i = add nsw i32 %8, -1
  %sext.i = shl i64 %indvars.iv.i.i, 32
  %idxprom.i.i = ashr exact i64 %sext.i, 32
  %arrayidx.i7.i = getelementptr inbounds ptr, ptr %9, i64 %idxprom.i.i
  %13 = load ptr, ptr %arrayidx.i7.i, align 8, !tbaa !219
  %idxprom3.i.i = sext i32 %sub.i to i64
  %arrayidx4.i.i = getelementptr inbounds ptr, ptr %9, i64 %idxprom3.i.i
  %14 = load ptr, ptr %arrayidx4.i.i, align 8, !tbaa !219
  store ptr %14, ptr %arrayidx.i7.i, align 8, !tbaa !219
  %15 = load ptr, ptr %m_data.i, align 8, !tbaa !115
  %arrayidx10.i.i = getelementptr inbounds ptr, ptr %15, i64 %idxprom3.i.i
  store ptr %13, ptr %arrayidx10.i.i, align 8, !tbaa !219
  store i32 %sub.i, ptr %m_size.i, align 4, !tbaa !116
  br label %for.inc

for.inc:                                          ; preds = %for.inc.i.i, %for.body.for.inc_crit_edge, %if.then.i, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i, %if.then
  %16 = phi i32 [ %.pre, %for.body.for.inc_crit_edge ], [ %8, %if.then ], [ %8, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i ], [ %sub.i, %if.then.i ], [ %8, %for.inc.i.i ]
  %i.1 = phi i32 [ %i.027, %for.body.for.inc_crit_edge ], [ %dec, %if.then ], [ %dec, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE16findLinearSearchERKS2_.exit.i ], [ %dec, %if.then.i ], [ %dec, %for.inc.i.i ]
  %inc = add nsw i32 %i.1, 1
  %cmp = icmp slt i32 %inc, %16
  br i1 %cmp, label %for.body, label %for.cond.cleanup
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody15integrateMotionEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this) local_unnamed_addr #10 align 2 {
entry:
  tail call void @_ZN10btSoftBody13updateNormalsEv(ptr noundef nonnull align 8 dereferenceable(1496) %this)
  ret void
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_ZN10btSoftBody15RayFromToCasterC2ERK9btVector3S3_f(ptr nocapture noundef nonnull writeonly align 8 dereferenceable(76) %this, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %rayFrom, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %rayTo, float noundef %mxt) unnamed_addr #21 align 2 personality ptr @__gxx_personality_v0 {
entry:
  store ptr getelementptr inbounds ({ [9 x ptr] }, ptr @_ZTVN10btSoftBody15RayFromToCasterE, i64 0, inrange i32 0, i64 2), ptr %this, align 8, !tbaa !5
  %m_rayFrom = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, i64 16, i1 false), !tbaa.struct !163
  %0 = load <2 x float>, ptr %rayTo, align 4, !tbaa !137
  %1 = load <2 x float>, ptr %rayFrom, align 4, !tbaa !137
  %2 = fsub <2 x float> %0, %1
  %arrayidx11.i = getelementptr inbounds [4 x float], ptr %rayTo, i64 0, i64 2
  %3 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds [4 x float], ptr %rayFrom, i64 0, i64 2
  %4 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %3, %4
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i, i64 0
  %m_rayNormalizedDirection = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 3
  %m_rayTo = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 2
  store <2 x float> %2, ptr %m_rayNormalizedDirection, align 8, !tbaa.struct !163
  %ref.tmp.sroa.5.0.m_rayNormalizedDirection7.sroa_idx = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 3, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %ref.tmp.sroa.5.0.m_rayNormalizedDirection7.sroa_idx, align 8, !tbaa.struct !165
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rayTo, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, i64 16, i1 false), !tbaa.struct !163
  %m_mint = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 4
  store float %mxt, ptr %m_mint, align 8, !tbaa !415
  %m_face = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 6
  store ptr null, ptr %m_face, align 8, !tbaa !418
  %m_tests = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 7
  store i32 0, ptr %m_tests, align 8, !tbaa !419
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody15RayFromToCaster7ProcessEPK10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(76) %this, ptr nocapture noundef readonly %leaf) unnamed_addr #4 align 2 {
entry:
  %0 = getelementptr inbounds %struct.btDbvtNode, ptr %leaf, i64 0, i32 2
  %1 = load ptr, ptr %0, align 8, !tbaa !164
  %m_rayFrom = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 1
  %m_rayTo = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 2
  %m_rayNormalizedDirection = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 3
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 0, i32 1
  %2 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 1
  %arrayidx3 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 0, i32 1, i64 1
  %3 = load ptr, ptr %arrayidx3, align 8, !tbaa !219
  %m_x4 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1
  %arrayidx6 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %1, i64 0, i32 1, i64 2
  %4 = load ptr, ptr %arrayidx6, align 8, !tbaa !219
  %m_x7 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1
  %m_mint = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 4
  %5 = load float, ptr %m_mint, align 8, !tbaa !415
  %call = tail call noundef float @_ZN10btSoftBody15RayFromToCaster17rayFromToTriangleERK9btVector3S3_S3_S3_S3_S3_f(ptr noundef nonnull align 4 dereferenceable(16) %m_rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %m_rayTo, ptr noundef nonnull align 4 dereferenceable(16) %m_rayNormalizedDirection, ptr noundef nonnull align 4 dereferenceable(16) %m_x, ptr noundef nonnull align 4 dereferenceable(16) %m_x4, ptr noundef nonnull align 4 dereferenceable(16) %m_x7, float noundef %5)
  %cmp = fcmp ogt float %call, 0.000000e+00
  %6 = load float, ptr %m_mint, align 8
  %cmp9 = fcmp olt float %call, %6
  %or.cond = select i1 %cmp, i1 %cmp9, i1 false
  br i1 %or.cond, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  store float %call, ptr %m_mint, align 8, !tbaa !415
  %m_face = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 6
  store ptr %1, ptr %m_face, align 8, !tbaa !418
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %m_tests = getelementptr inbounds %"struct.btSoftBody::RayFromToCaster", ptr %this, i64 0, i32 7
  %7 = load i32, ptr %m_tests, align 8, !tbaa !419
  %inc = add nsw i32 %7, 1
  store i32 %inc, ptr %m_tests, align 8, !tbaa !419
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local noundef float @_ZN10btSoftBody15RayFromToCaster17rayFromToTriangleERK9btVector3S3_S3_S3_S3_S3_f(ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, ptr noundef nonnull align 4 dereferenceable(16) %rayNormalizedDirection, ptr noundef nonnull align 4 dereferenceable(16) %a, ptr noundef nonnull align 4 dereferenceable(16) %b, ptr noundef nonnull align 4 dereferenceable(16) %c, float noundef %maxt) local_unnamed_addr #26 comdat align 2 {
entry:
  %0 = load float, ptr %b, align 4, !tbaa !137
  %1 = load float, ptr %a, align 4, !tbaa !137
  %sub.i = fsub float %0, %1
  %arrayidx5.i = getelementptr inbounds [4 x float], ptr %b, i64 0, i64 1
  %2 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds [4 x float], ptr %a, i64 0, i64 1
  %3 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %sub8.i = fsub float %2, %3
  %arrayidx11.i = getelementptr inbounds [4 x float], ptr %b, i64 0, i64 2
  %4 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds [4 x float], ptr %a, i64 0, i64 2
  %5 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %4, %5
  %6 = load float, ptr %c, align 4, !tbaa !137
  %sub.i74 = fsub float %6, %1
  %arrayidx5.i75 = getelementptr inbounds [4 x float], ptr %c, i64 0, i64 1
  %7 = load float, ptr %arrayidx5.i75, align 4, !tbaa !137
  %sub8.i77 = fsub float %7, %3
  %arrayidx11.i78 = getelementptr inbounds [4 x float], ptr %c, i64 0, i64 2
  %8 = load float, ptr %arrayidx11.i78, align 4, !tbaa !137
  %sub14.i80 = fsub float %8, %5
  %9 = fneg float %sub14.i
  %neg.i.i = fmul float %sub8.i77, %9
  %10 = tail call float @llvm.fmuladd.f32(float %sub8.i, float %sub14.i80, float %neg.i.i)
  %11 = fneg float %sub.i
  %neg19.i.i = fmul float %sub14.i80, %11
  %12 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub.i74, float %neg19.i.i)
  %13 = fneg float %sub8.i
  %neg30.i.i = fmul float %sub.i74, %13
  %14 = tail call float @llvm.fmuladd.f32(float %sub.i, float %sub8.i77, float %neg30.i.i)
  %15 = load float, ptr %rayNormalizedDirection, align 4, !tbaa !137
  %arrayidx5.i.i88 = getelementptr inbounds [4 x float], ptr %rayNormalizedDirection, i64 0, i64 1
  %16 = load float, ptr %arrayidx5.i.i88, align 4, !tbaa !137
  %mul8.i.i90 = fmul float %16, %12
  %17 = tail call float @llvm.fmuladd.f32(float %15, float %10, float %mul8.i.i90)
  %arrayidx10.i.i91 = getelementptr inbounds [4 x float], ptr %rayNormalizedDirection, i64 0, i64 2
  %18 = load float, ptr %arrayidx10.i.i91, align 4, !tbaa !137
  %19 = tail call float @llvm.fmuladd.f32(float %18, float %14, float %17)
  %20 = tail call float @llvm.fabs.f32(float %19)
  %cmp.i = fcmp olt float %20, 0x3E80000000000000
  br i1 %cmp.i, label %cleanup58, label %if.then

if.then:                                          ; preds = %entry
  %21 = load float, ptr %rayFrom, align 4, !tbaa !137
  %arrayidx5.i.i93 = getelementptr inbounds [4 x float], ptr %rayFrom, i64 0, i64 1
  %22 = load float, ptr %arrayidx5.i.i93, align 4, !tbaa !137
  %arrayidx10.i.i96 = getelementptr inbounds [4 x float], ptr %rayFrom, i64 0, i64 2
  %23 = load float, ptr %arrayidx10.i.i96, align 4, !tbaa !137
  %24 = insertelement <2 x float> poison, float %12, i64 0
  %25 = shufflevector <2 x float> %24, <2 x float> poison, <2 x i32> zeroinitializer
  %26 = insertelement <2 x float> poison, float %22, i64 0
  %27 = insertelement <2 x float> %26, float %3, i64 1
  %28 = fmul <2 x float> %25, %27
  %29 = insertelement <2 x float> poison, float %21, i64 0
  %30 = insertelement <2 x float> %29, float %1, i64 1
  %31 = insertelement <2 x float> poison, float %10, i64 0
  %32 = shufflevector <2 x float> %31, <2 x float> poison, <2 x i32> zeroinitializer
  %33 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %30, <2 x float> %32, <2 x float> %28)
  %34 = insertelement <2 x float> poison, float %23, i64 0
  %35 = insertelement <2 x float> %34, float %5, i64 1
  %36 = insertelement <2 x float> poison, float %14, i64 0
  %37 = shufflevector <2 x float> %36, <2 x float> poison, <2 x i32> zeroinitializer
  %38 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %35, <2 x float> %37, <2 x float> %33)
  %shift = shufflevector <2 x float> %38, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %39 = fsub <2 x float> %38, %shift
  %sub = extractelement <2 x float> %39, i64 0
  %fneg = fneg float %sub
  %div = fdiv float %fneg, %19
  %cmp = fcmp ogt float %div, 0x3EB4000000000000
  %cmp10 = fcmp olt float %div, %maxt
  %or.cond = and i1 %cmp, %cmp10
  br i1 %or.cond, label %if.then11, label %cleanup58

if.then11:                                        ; preds = %if.then
  %mul.i = fmul float %15, %div
  %mul4.i = fmul float %16, %div
  %mul8.i = fmul float %18, %div
  %add.i = fadd float %21, %mul.i
  %add8.i = fadd float %22, %mul4.i
  %add14.i = fadd float %23, %mul8.i
  %sub.i113 = fsub float %1, %add.i
  %sub8.i116 = fsub float %3, %add8.i
  %sub14.i119 = fsub float %5, %add14.i
  %sub.i125 = fsub float %0, %add.i
  %sub8.i128 = fsub float %2, %add8.i
  %sub14.i131 = fsub float %4, %add14.i
  %40 = fneg float %sub14.i119
  %neg.i.i141 = fmul float %sub8.i128, %40
  %41 = tail call float @llvm.fmuladd.f32(float %sub8.i116, float %sub14.i131, float %neg.i.i141)
  %42 = fneg float %sub.i113
  %neg19.i.i142 = fmul float %sub14.i131, %42
  %43 = tail call float @llvm.fmuladd.f32(float %sub14.i119, float %sub.i125, float %neg19.i.i142)
  %44 = fneg float %sub8.i116
  %neg30.i.i143 = fmul float %sub.i125, %44
  %45 = tail call float @llvm.fmuladd.f32(float %sub.i113, float %sub8.i128, float %neg30.i.i143)
  %mul8.i.i151 = fmul float %12, %43
  %46 = tail call float @llvm.fmuladd.f32(float %10, float %41, float %mul8.i.i151)
  %47 = tail call float @llvm.fmuladd.f32(float %14, float %45, float %46)
  %cmp27 = fcmp ogt float %47, 0xBEB4000000000000
  br i1 %cmp27, label %land.lhs.true28, label %if.end

land.lhs.true28:                                  ; preds = %if.then11
  %sub.i166 = fsub float %6, %add.i
  %sub8.i169 = fsub float %7, %add8.i
  %sub14.i172 = fsub float %8, %add14.i
  %48 = fneg float %sub14.i131
  %neg.i.i182 = fmul float %sub8.i169, %48
  %49 = tail call float @llvm.fmuladd.f32(float %sub8.i128, float %sub14.i172, float %neg.i.i182)
  %50 = fneg float %sub.i125
  %neg19.i.i183 = fmul float %sub14.i172, %50
  %51 = tail call float @llvm.fmuladd.f32(float %sub14.i131, float %sub.i166, float %neg19.i.i183)
  %52 = fneg float %sub8.i128
  %neg30.i.i184 = fmul float %sub.i166, %52
  %53 = tail call float @llvm.fmuladd.f32(float %sub.i125, float %sub8.i169, float %neg30.i.i184)
  %mul8.i.i192 = fmul float %12, %51
  %54 = tail call float @llvm.fmuladd.f32(float %10, float %49, float %mul8.i.i192)
  %55 = tail call float @llvm.fmuladd.f32(float %14, float %53, float %54)
  %cmp39 = fcmp ogt float %55, 0xBEB4000000000000
  br i1 %cmp39, label %land.rhs, label %if.end

land.rhs:                                         ; preds = %land.lhs.true28
  %56 = fneg float %sub14.i172
  %neg.i.i223 = fmul float %sub8.i116, %56
  %57 = tail call float @llvm.fmuladd.f32(float %sub8.i169, float %sub14.i119, float %neg.i.i223)
  %58 = fneg float %sub.i166
  %neg19.i.i224 = fmul float %sub14.i119, %58
  %59 = tail call float @llvm.fmuladd.f32(float %sub14.i172, float %sub.i113, float %neg19.i.i224)
  %60 = fneg float %sub8.i169
  %neg30.i.i225 = fmul float %sub.i113, %60
  %61 = tail call float @llvm.fmuladd.f32(float %sub.i166, float %sub8.i116, float %neg30.i.i225)
  %mul8.i.i233 = fmul float %12, %59
  %62 = tail call float @llvm.fmuladd.f32(float %10, float %57, float %mul8.i.i233)
  %63 = tail call float @llvm.fmuladd.f32(float %14, float %61, float %62)
  %cmp50 = fcmp ogt float %63, 0xBEB4000000000000
  br i1 %cmp50, label %cleanup58, label %if.end

if.end:                                           ; preds = %land.lhs.true28, %if.then11, %land.rhs
  br label %cleanup58

cleanup58:                                        ; preds = %land.rhs, %entry, %if.then, %if.end
  %retval.3 = phi float [ -1.000000e+00, %if.end ], [ -1.000000e+00, %if.then ], [ -1.000000e+00, %entry ], [ %div, %land.rhs ]
  ret float %retval.3
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN6btDbvt7rayTestEPK10btDbvtNodeRK9btVector3S5_RNS_8ICollideE(ptr noundef %root, ptr noundef nonnull align 4 dereferenceable(16) %rayFrom, ptr noundef nonnull align 4 dereferenceable(16) %rayTo, ptr noundef nonnull align 8 dereferenceable(8) %policy) local_unnamed_addr #26 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %bounds = alloca [2 x %class.btVector3], align 16
  %tobool.not = icmp eq ptr %root, null
  br i1 %tobool.not, label %if.end109, label %if.then

if.then:                                          ; preds = %entry
  %arrayidx11.i = getelementptr inbounds [4 x float], ptr %rayTo, i64 0, i64 2
  %0 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds [4 x float], ptr %rayFrom, i64 0, i64 2
  %1 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %0, %1
  %2 = load <2 x float>, ptr %rayTo, align 4, !tbaa !137
  %3 = load <2 x float>, ptr %rayFrom, align 4, !tbaa !137
  %4 = fsub <2 x float> %2, %3
  %5 = extractelement <2 x float> %4, i64 1
  %mul8.i.i.i.i = fmul float %5, %5
  %6 = extractelement <2 x float> %4, i64 0
  %7 = tail call float @llvm.fmuladd.f32(float %6, float %6, float %mul8.i.i.i.i)
  %8 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub14.i, float %7)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %8)
  %div.i.i = fdiv float 1.000000e+00, %sqrt.i.i
  %9 = insertelement <2 x float> poison, float %div.i.i, i64 0
  %10 = shufflevector <2 x float> %9, <2 x float> poison, <2 x i32> zeroinitializer
  %11 = fmul <2 x float> %4, %10
  %mul7.i.i.i = fmul float %sub14.i, %div.i.i
  %12 = fdiv <2 x float> <float 1.000000e+00, float 1.000000e+00>, %11
  %cmp21 = fcmp oeq float %mul7.i.i.i, 0.000000e+00
  %div26 = fdiv float 1.000000e+00, %mul7.i.i.i
  %cond28 = select i1 %cmp21, float 0x43ABC16D60000000, float %div26
  %13 = fcmp oeq <2 x float> %11, zeroinitializer
  %14 = select <2 x i1> %13, <2 x float> <float 0x43ABC16D60000000, float 0x43ABC16D60000000>, <2 x float> %12
  %15 = extractelement <2 x float> %14, i64 1
  %cmp38 = fcmp olt float %15, 0.000000e+00
  %16 = fmul <2 x float> %4, %11
  %mul8.i = extractelement <2 x float> %16, i64 1
  %17 = extractelement <2 x float> %11, i64 0
  %18 = tail call float @llvm.fmuladd.f32(float %17, float %6, float %mul8.i)
  %call.i.i.i.i140 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 1024, i32 noundef 16)
  %19 = getelementptr inbounds i8, ptr %call.i.i.i.i140, i64 8
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(1024) %19, i8 0, i64 1016, i1 false), !tbaa !219
  %cmp44 = fcmp olt float %cond28, 0.000000e+00
  store ptr %root, ptr %call.i.i.i.i140, align 8, !tbaa !219
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %bounds) #38
  %20 = extractelement <2 x float> %14, i64 0
  %cmp33 = fcmp olt float %20, 0.000000e+00
  %21 = tail call float @llvm.fmuladd.f32(float %mul7.i.i.i, float %sub14.i, float %18)
  %arrayidx64 = getelementptr inbounds [2 x %class.btVector3], ptr %bounds, i64 0, i64 1
  %idxprom.i142 = zext i1 %cmp33 to i64
  %arrayidx1.i = getelementptr inbounds %class.btVector3, ptr %bounds, i64 %idxprom.i142
  %not.cmp33 = xor i1 %cmp33, true
  %idxprom6.i = zext i1 %not.cmp33 to i64
  %arrayidx7.i144 = getelementptr inbounds %class.btVector3, ptr %bounds, i64 %idxprom6.i
  %idxprom14.i = zext i1 %cmp38 to i64
  %arrayidx.i.i = getelementptr inbounds %class.btVector3, ptr %bounds, i64 %idxprom14.i, i32 0, i64 1
  %not.cmp38 = xor i1 %cmp38, true
  %idxprom23.i = zext i1 %not.cmp38 to i64
  %arrayidx.i113.i = getelementptr inbounds %class.btVector3, ptr %bounds, i64 %idxprom23.i, i32 0, i64 1
  %idxprom38.i = zext i1 %cmp44 to i64
  %arrayidx.i116.i = getelementptr inbounds %class.btVector3, ptr %bounds, i64 %idxprom38.i, i32 0, i64 2
  %not.cmp44 = xor i1 %cmp44, true
  %idxprom47.i = zext i1 %not.cmp44 to i64
  %arrayidx.i119.i = getelementptr inbounds %class.btVector3, ptr %bounds, i64 %idxprom47.i, i32 0, i64 2
  br label %do.body

do.body:                                          ; preds = %if.then, %if.end93
  %stack.sroa.21218.2 = phi ptr [ %stack.sroa.21218.6, %if.end93 ], [ %call.i.i.i.i140, %if.then ]
  %stack.sroa.14.2 = phi i32 [ %stack.sroa.14.6, %if.end93 ], [ 128, %if.then ]
  %stack.sroa.3.0 = phi i32 [ %stack.sroa.3.2, %if.end93 ], [ 128, %if.then ]
  %treshold.0 = phi i32 [ %treshold.2, %if.end93 ], [ 126, %if.then ]
  %depth.0 = phi i32 [ %depth.1, %if.end93 ], [ 1, %if.then ]
  %stack.sroa.21218.2280 = ptrtoint ptr %stack.sroa.21218.2 to i64
  %dec = add nsw i32 %depth.0, -1
  %idxprom.i = sext i32 %dec to i64
  %arrayidx.i = getelementptr inbounds ptr, ptr %stack.sroa.21218.2, i64 %idxprom.i
  %22 = load ptr, ptr %arrayidx.i, align 8, !tbaa !219
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %bounds, ptr noundef nonnull align 4 dereferenceable(16) %22, i64 16, i1 false), !tbaa.struct !163
  %mx.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %22, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 16 dereferenceable(16) %arrayidx64, ptr noundef nonnull align 4 dereferenceable(16) %mx.i, i64 16, i1 false), !tbaa.struct !163
  %23 = load float, ptr %arrayidx1.i, align 16, !tbaa !137
  %24 = load float, ptr %arrayidx7.i144, align 16, !tbaa !137
  %25 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %26 = load <2 x float>, ptr %rayFrom, align 4, !tbaa !137
  %27 = insertelement <2 x float> poison, float %24, i64 0
  %28 = insertelement <2 x float> %27, float %25, i64 1
  %29 = fsub <2 x float> %28, %26
  %30 = fmul <2 x float> %14, %29
  %31 = load float, ptr %arrayidx.i113.i, align 4, !tbaa !137
  %32 = insertelement <2 x float> poison, float %23, i64 0
  %33 = insertelement <2 x float> %32, float %31, i64 1
  %34 = fsub <2 x float> %33, %26
  %35 = fmul <2 x float> %14, %34
  %36 = extractelement <2 x float> %35, i64 0
  %37 = extractelement <2 x float> %35, i64 1
  %cmp.i146 = fcmp ogt float %36, %37
  %38 = extractelement <2 x float> %30, i64 0
  %39 = extractelement <2 x float> %30, i64 1
  %cmp30.i = fcmp ogt float %39, %38
  %or.cond.i = select i1 %cmp.i146, i1 true, i1 %cmp30.i
  br i1 %or.cond.i, label %if.end93, label %if.end.i147

if.end.i147:                                      ; preds = %do.body
  %40 = shufflevector <2 x float> %30, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %41 = fcmp olt <2 x float> %35, %40
  %42 = extractelement <2 x i1> %41, i64 0
  %43 = select i1 %42, float %39, float %36
  %44 = extractelement <2 x i1> %41, i64 1
  %tmax.0.i = select i1 %44, float %37, float %38
  %45 = load float, ptr %arrayidx.i116.i, align 8, !tbaa !137
  %46 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub42.i = fsub float %45, %46
  %mul44.i = fmul float %cond28, %sub42.i
  %47 = load float, ptr %arrayidx.i119.i, align 8, !tbaa !137
  %sub51.i = fsub float %47, %46
  %mul53.i = fmul float %cond28, %sub51.i
  %cmp54.i = fcmp ogt float %43, %mul53.i
  %cmp56.i = fcmp ogt float %mul44.i, %tmax.0.i
  %or.cond122.i = select i1 %cmp54.i, i1 true, i1 %cmp56.i
  br i1 %or.cond122.i, label %if.end93, label %if.end58.i

if.end58.i:                                       ; preds = %if.end.i147
  %cmp59.i = fcmp ogt float %mul44.i, %43
  %48 = select i1 %cmp59.i, float %mul44.i, float %43
  %cmp62.i = fcmp olt float %mul53.i, %tmax.0.i
  %tmax.1.i = select i1 %cmp62.i, float %mul53.i, float %tmax.0.i
  %cmp65.i = fcmp olt float %48, %21
  %cmp66.i = fcmp ogt float %tmax.1.i, 0.000000e+00
  %49 = select i1 %cmp65.i, i1 %cmp66.i, i1 false
  br i1 %49, label %invoke.cont72, label %if.end93

invoke.cont72:                                    ; preds = %if.end58.i
  %arrayidx.i.i148 = getelementptr inbounds %struct.btDbvtNode, ptr %22, i64 0, i32 2, i32 0, i64 1
  %50 = load ptr, ptr %arrayidx.i.i148, align 8, !tbaa !164
  %cmp.i.i149.not = icmp eq ptr %50, null
  br i1 %cmp.i.i149.not, label %if.else, label %if.then74

if.then74:                                        ; preds = %invoke.cont72
  %cmp75 = icmp sgt i32 %dec, %treshold.0
  br i1 %cmp75, label %if.then76, label %if.end

if.then76:                                        ; preds = %if.then74
  %mul = shl nsw i32 %stack.sroa.3.0, 1
  %cmp4.i152 = icmp slt i32 %stack.sroa.3.0, %mul
  br i1 %cmp4.i152, label %if.then5.i156, label %invoke.cont81

if.then5.i156:                                    ; preds = %if.then76
  %cmp.i.i155 = icmp slt i32 %stack.sroa.14.2, %mul
  br i1 %cmp.i.i155, label %if.then.i.i157, label %for.body10.lr.ph.i178

if.then.i.i157:                                   ; preds = %if.then5.i156
  %tobool.not.i.i.i = icmp eq i32 %stack.sroa.3.0, 0
  br i1 %tobool.not.i.i.i, label %if.then3.i.i.i175, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i157
  %conv.i.i.i.i = sext i32 %mul to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 3
  %call.i.i.i.i185 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
          to label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i unwind label %lpad80

_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i
  %cmp7.i.i.i159 = icmp sgt i32 %stack.sroa.3.0, 0
  br i1 %cmp7.i.i.i159, label %for.body.lr.ph.i.i.i162, label %if.then3.i.i.i175

for.body.lr.ph.i.i.i162:                          ; preds = %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i
  %call.i.i.i.i185279 = ptrtoint ptr %call.i.i.i.i185 to i64
  %wide.trip.count.i.i.i161 = zext i32 %stack.sroa.3.0 to i64
  %min.iters.check = icmp ult i32 %stack.sroa.3.0, 6
  %51 = sub i64 %call.i.i.i.i185279, %stack.sroa.21218.2280
  %diff.check = icmp ult i64 %51, 32
  %or.cond = or i1 %min.iters.check, %diff.check
  br i1 %or.cond, label %for.body.i.i.i168.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i.i162
  %n.vec = and i64 %wide.trip.count.i.i.i161, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %52 = getelementptr inbounds ptr, ptr %call.i.i.i.i185, i64 %index
  %53 = getelementptr inbounds ptr, ptr %stack.sroa.21218.2, i64 %index
  %wide.load = load <2 x ptr>, ptr %53, align 8, !tbaa !219
  %54 = getelementptr inbounds ptr, ptr %53, i64 2
  %wide.load281 = load <2 x ptr>, ptr %54, align 8, !tbaa !219
  store <2 x ptr> %wide.load, ptr %52, align 8, !tbaa !219
  %55 = getelementptr inbounds ptr, ptr %52, i64 2
  store <2 x ptr> %wide.load281, ptr %55, align 8, !tbaa !219
  %index.next = add nuw i64 %index, 4
  %56 = icmp eq i64 %index.next, %n.vec
  br i1 %56, label %middle.block, label %vector.body, !llvm.loop !485

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i.i161
  br i1 %cmp.n, label %if.then3.i.i.i175, label %for.body.i.i.i168.preheader

for.body.i.i.i168.preheader:                      ; preds = %for.body.lr.ph.i.i.i162, %middle.block
  %indvars.iv.i.i.i163.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i162 ], [ %n.vec, %middle.block ]
  %57 = xor i64 %indvars.iv.i.i.i163.ph, -1
  %58 = add nsw i64 %57, %wide.trip.count.i.i.i161
  %xtraiter = and i64 %wide.trip.count.i.i.i161, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.i.i.i168.prol.loopexit, label %for.body.i.i.i168.prol

for.body.i.i.i168.prol:                           ; preds = %for.body.i.i.i168.preheader, %for.body.i.i.i168.prol
  %indvars.iv.i.i.i163.prol = phi i64 [ %indvars.iv.next.i.i.i166.prol, %for.body.i.i.i168.prol ], [ %indvars.iv.i.i.i163.ph, %for.body.i.i.i168.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.i.i168.prol ], [ 0, %for.body.i.i.i168.preheader ]
  %arrayidx.i.i.i164.prol = getelementptr inbounds ptr, ptr %call.i.i.i.i185, i64 %indvars.iv.i.i.i163.prol
  %arrayidx3.i.i.i165.prol = getelementptr inbounds ptr, ptr %stack.sroa.21218.2, i64 %indvars.iv.i.i.i163.prol
  %59 = load ptr, ptr %arrayidx3.i.i.i165.prol, align 8, !tbaa !219
  store ptr %59, ptr %arrayidx.i.i.i164.prol, align 8, !tbaa !219
  %indvars.iv.next.i.i.i166.prol = add nuw nsw i64 %indvars.iv.i.i.i163.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.i.i.i168.prol.loopexit, label %for.body.i.i.i168.prol, !llvm.loop !486

for.body.i.i.i168.prol.loopexit:                  ; preds = %for.body.i.i.i168.prol, %for.body.i.i.i168.preheader
  %indvars.iv.i.i.i163.unr = phi i64 [ %indvars.iv.i.i.i163.ph, %for.body.i.i.i168.preheader ], [ %indvars.iv.next.i.i.i166.prol, %for.body.i.i.i168.prol ]
  %60 = icmp ult i64 %58, 3
  br i1 %60, label %if.then3.i.i.i175, label %for.body.i.i.i168

for.body.i.i.i168:                                ; preds = %for.body.i.i.i168.prol.loopexit, %for.body.i.i.i168
  %indvars.iv.i.i.i163 = phi i64 [ %indvars.iv.next.i.i.i166.3, %for.body.i.i.i168 ], [ %indvars.iv.i.i.i163.unr, %for.body.i.i.i168.prol.loopexit ]
  %arrayidx.i.i.i164 = getelementptr inbounds ptr, ptr %call.i.i.i.i185, i64 %indvars.iv.i.i.i163
  %arrayidx3.i.i.i165 = getelementptr inbounds ptr, ptr %stack.sroa.21218.2, i64 %indvars.iv.i.i.i163
  %61 = load ptr, ptr %arrayidx3.i.i.i165, align 8, !tbaa !219
  store ptr %61, ptr %arrayidx.i.i.i164, align 8, !tbaa !219
  %indvars.iv.next.i.i.i166 = add nuw nsw i64 %indvars.iv.i.i.i163, 1
  %arrayidx.i.i.i164.1 = getelementptr inbounds ptr, ptr %call.i.i.i.i185, i64 %indvars.iv.next.i.i.i166
  %arrayidx3.i.i.i165.1 = getelementptr inbounds ptr, ptr %stack.sroa.21218.2, i64 %indvars.iv.next.i.i.i166
  %62 = load ptr, ptr %arrayidx3.i.i.i165.1, align 8, !tbaa !219
  store ptr %62, ptr %arrayidx.i.i.i164.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i166.1 = add nuw nsw i64 %indvars.iv.i.i.i163, 2
  %arrayidx.i.i.i164.2 = getelementptr inbounds ptr, ptr %call.i.i.i.i185, i64 %indvars.iv.next.i.i.i166.1
  %arrayidx3.i.i.i165.2 = getelementptr inbounds ptr, ptr %stack.sroa.21218.2, i64 %indvars.iv.next.i.i.i166.1
  %63 = load ptr, ptr %arrayidx3.i.i.i165.2, align 8, !tbaa !219
  store ptr %63, ptr %arrayidx.i.i.i164.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i166.2 = add nuw nsw i64 %indvars.iv.i.i.i163, 3
  %arrayidx.i.i.i164.3 = getelementptr inbounds ptr, ptr %call.i.i.i.i185, i64 %indvars.iv.next.i.i.i166.2
  %arrayidx3.i.i.i165.3 = getelementptr inbounds ptr, ptr %stack.sroa.21218.2, i64 %indvars.iv.next.i.i.i166.2
  %64 = load ptr, ptr %arrayidx3.i.i.i165.3, align 8, !tbaa !219
  store ptr %64, ptr %arrayidx.i.i.i164.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i166.3 = add nuw nsw i64 %indvars.iv.i.i.i163, 4
  %exitcond.not.i.i.i167.3 = icmp eq i64 %indvars.iv.next.i.i.i166.3, %wide.trip.count.i.i.i161
  br i1 %exitcond.not.i.i.i167.3, label %if.then3.i.i.i175, label %for.body.i.i.i168, !llvm.loop !487

if.then3.i.i.i175:                                ; preds = %for.body.i.i.i168.prol.loopexit, %for.body.i.i.i168, %middle.block, %if.then.i.i157, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i
  %retval.0.i.i.i262 = phi ptr [ %call.i.i.i.i185, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i ], [ null, %if.then.i.i157 ], [ %call.i.i.i.i185, %middle.block ], [ %call.i.i.i.i185, %for.body.i.i.i168 ], [ %call.i.i.i.i185, %for.body.i.i.i168.prol.loopexit ]
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stack.sroa.21218.2)
          to label %for.body10.lr.ph.i178 unwind label %lpad80

for.body10.lr.ph.i178:                            ; preds = %if.then3.i.i.i175, %if.then5.i156
  %stack.sroa.21218.3 = phi ptr [ %stack.sroa.21218.2, %if.then5.i156 ], [ %retval.0.i.i.i262, %if.then3.i.i.i175 ]
  %stack.sroa.14.3 = phi i32 [ %stack.sroa.14.2, %if.then5.i156 ], [ %mul, %if.then3.i.i.i175 ]
  %65 = sext i32 %stack.sroa.3.0 to i64
  %wide.trip.count.i = sext i32 %mul to i64
  %66 = shl nsw i64 %65, 3
  %scevgep = getelementptr i8, ptr %stack.sroa.21218.3, i64 %66
  %67 = sub nsw i64 %wide.trip.count.i, %65
  %68 = shl nsw i64 %67, 3
  tail call void @llvm.memset.p0.i64(ptr align 8 %scevgep, i8 0, i64 %68, i1 false), !tbaa !219
  br label %invoke.cont81

invoke.cont81:                                    ; preds = %for.body10.lr.ph.i178, %if.then76
  %stack.sroa.21218.4 = phi ptr [ %stack.sroa.21218.2, %if.then76 ], [ %stack.sroa.21218.3, %for.body10.lr.ph.i178 ]
  %stack.sroa.14.4 = phi i32 [ %stack.sroa.14.2, %if.then76 ], [ %stack.sroa.14.3, %for.body10.lr.ph.i178 ]
  %sub = add nsw i32 %mul, -2
  br label %if.end

lpad66:                                           ; preds = %if.else
  %69 = landingpad { ptr, i32 }
          cleanup
  br label %if.then3.i.i.i207

lpad80:                                           ; preds = %if.then3.i.i.i175, %if.then.i.i.i
  %70 = landingpad { ptr, i32 }
          cleanup
  br label %if.then3.i.i.i207

if.end:                                           ; preds = %invoke.cont81, %if.then74
  %stack.sroa.21218.5 = phi ptr [ %stack.sroa.21218.4, %invoke.cont81 ], [ %stack.sroa.21218.2, %if.then74 ]
  %stack.sroa.14.5 = phi i32 [ %stack.sroa.14.4, %invoke.cont81 ], [ %stack.sroa.14.2, %if.then74 ]
  %stack.sroa.3.1 = phi i32 [ %mul, %invoke.cont81 ], [ %stack.sroa.3.0, %if.then74 ]
  %treshold.1 = phi i32 [ %sub, %invoke.cont81 ], [ %treshold.0, %if.then74 ]
  %71 = getelementptr inbounds %struct.btDbvtNode, ptr %22, i64 0, i32 2
  %72 = load ptr, ptr %71, align 8, !tbaa !164
  %arrayidx.i191 = getelementptr inbounds ptr, ptr %stack.sroa.21218.5, i64 %idxprom.i
  store ptr %72, ptr %arrayidx.i191, align 8, !tbaa !219
  %73 = load ptr, ptr %arrayidx.i.i148, align 8, !tbaa !164
  %inc88 = add nsw i32 %depth.0, 1
  %idxprom.i193 = sext i32 %depth.0 to i64
  %arrayidx.i194 = getelementptr inbounds ptr, ptr %stack.sroa.21218.5, i64 %idxprom.i193
  store ptr %73, ptr %arrayidx.i194, align 8, !tbaa !219
  br label %if.end93

if.else:                                          ; preds = %invoke.cont72
  %vtable = load ptr, ptr %policy, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 3
  %74 = load ptr, ptr %vfn, align 8
  invoke void %74(ptr noundef nonnull align 8 dereferenceable(8) %policy, ptr noundef nonnull %22)
          to label %if.end93 unwind label %lpad66

if.end93:                                         ; preds = %do.body, %if.end.i147, %if.end, %if.else, %if.end58.i
  %stack.sroa.21218.6 = phi ptr [ %stack.sroa.21218.5, %if.end ], [ %stack.sroa.21218.2, %if.else ], [ %stack.sroa.21218.2, %if.end58.i ], [ %stack.sroa.21218.2, %if.end.i147 ], [ %stack.sroa.21218.2, %do.body ]
  %stack.sroa.14.6 = phi i32 [ %stack.sroa.14.5, %if.end ], [ %stack.sroa.14.2, %if.else ], [ %stack.sroa.14.2, %if.end58.i ], [ %stack.sroa.14.2, %if.end.i147 ], [ %stack.sroa.14.2, %do.body ]
  %stack.sroa.3.2 = phi i32 [ %stack.sroa.3.1, %if.end ], [ %stack.sroa.3.0, %if.else ], [ %stack.sroa.3.0, %if.end58.i ], [ %stack.sroa.3.0, %if.end.i147 ], [ %stack.sroa.3.0, %do.body ]
  %treshold.2 = phi i32 [ %treshold.1, %if.end ], [ %treshold.0, %if.else ], [ %treshold.0, %if.end58.i ], [ %treshold.0, %if.end.i147 ], [ %treshold.0, %do.body ]
  %depth.1 = phi i32 [ %inc88, %if.end ], [ %dec, %if.else ], [ %dec, %if.end58.i ], [ %dec, %if.end.i147 ], [ %dec, %do.body ]
  %tobool97.not = icmp eq i32 %depth.1, 0
  br i1 %tobool97.not, label %if.then3.i.i.i200, label %do.body

if.then3.i.i.i200:                                ; preds = %if.end93
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %bounds) #38
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stack.sroa.21218.6)
  br label %if.end109

if.then3.i.i.i207:                                ; preds = %lpad80, %lpad66
  %.pn = phi { ptr, i32 } [ %70, %lpad80 ], [ %69, %lpad66 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %bounds) #38
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stack.sroa.21218.2)
          to label %invoke.cont102 unwind label %terminate.lpad

invoke.cont102:                                   ; preds = %if.then3.i.i.i207
  resume { ptr, i32 } %.pn

if.end109:                                        ; preds = %if.then3.i.i.i200, %entry
  ret void

terminate.lpad:                                   ; preds = %if.then3.i.i.i207
  %75 = landingpad { ptr, i32 }
          catch ptr null
  %76 = extractvalue { ptr, i32 } %75, 0
  tail call void @__clang_call_terminate(ptr %76) #39
  unreachable
}

; Function Attrs: uwtable
define dso_local noundef zeroext i1 @_ZNK10btSoftBody12checkContactEP17btCollisionObjectRK9btVector3fRNS_4sCtiE(ptr nocapture noundef nonnull readonly align 8 dereferenceable(1496) %this, ptr noundef %colObj, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %x, float noundef %margin, ptr nocapture noundef nonnull writeonly align 8 dereferenceable(28) %cti) local_unnamed_addr #0 align 2 {
entry:
  %nrm = alloca %class.btVector3, align 4
  %ref.tmp = alloca %class.btVector3, align 8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %nrm) #38
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %colObj, i64 0, i32 9
  %0 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %m_internalType.i.i = getelementptr inbounds %class.btCollisionObject, ptr %colObj, i64 0, i32 19
  %1 = load i32, ptr %m_internalType.i.i, align 8, !tbaa !134
  %cmp.i = icmp ne i32 %1, 2
  %tobool.not52 = icmp eq ptr %colObj, null
  %tobool.not = or i1 %tobool.not52, %cmp.i
  %m_interpolationWorldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %colObj, i64 0, i32 2
  %m_worldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %colObj, i64 0, i32 1
  %cond-lvalue = select i1 %tobool.not, ptr %m_worldTransform.i, ptr %m_interpolationWorldTransform.i
  %m_worldInfo = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 7
  %2 = load ptr, ptr %m_worldInfo, align 8, !tbaa !42
  %m_sparsesdf = getelementptr inbounds %struct.btSoftBodyWorldInfo, ptr %2, i64 0, i32 7
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #38
  %m_origin.i = getelementptr inbounds %class.btTransform, ptr %cond-lvalue, i64 0, i32 1
  %3 = load float, ptr %x, align 4, !tbaa !137
  %4 = load float, ptr %m_origin.i, align 4, !tbaa !137
  %sub.i.i = fsub float %3, %4
  %arrayidx5.i.i = getelementptr inbounds [4 x float], ptr %x, i64 0, i64 1
  %5 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds %class.btTransform, ptr %cond-lvalue, i64 0, i32 1, i32 0, i64 1
  %6 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %sub8.i.i = fsub float %5, %6
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %x, i64 0, i64 2
  %7 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %arrayidx13.i.i = getelementptr inbounds %class.btTransform, ptr %cond-lvalue, i64 0, i32 1, i32 0, i64 2
  %8 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %sub14.i.i = fsub float %7, %8
  %arrayidx3.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %cond-lvalue, i64 0, i64 1
  %arrayidx6.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %cond-lvalue, i64 0, i64 2
  %arrayidx.i28.i.i = getelementptr inbounds [4 x float], ptr %cond-lvalue, i64 0, i64 2
  %arrayidx.i29.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %cond-lvalue, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i30.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %cond-lvalue, i64 0, i64 2, i32 0, i64 2
  %9 = load float, ptr %arrayidx.i28.i.i, align 4, !tbaa !137, !noalias !488
  %10 = load float, ptr %arrayidx.i29.i.i, align 4, !tbaa !137, !noalias !488
  %11 = load float, ptr %arrayidx.i30.i.i, align 4, !tbaa !137, !noalias !488
  %12 = load <2 x float>, ptr %cond-lvalue, align 4, !tbaa !137, !noalias !488
  %13 = load <2 x float>, ptr %arrayidx3.i.i, align 4, !tbaa !137, !noalias !488
  %14 = load <2 x float>, ptr %arrayidx6.i.i, align 4, !tbaa !137, !noalias !488
  %15 = insertelement <2 x float> poison, float %sub8.i.i, i64 0
  %16 = shufflevector <2 x float> %15, <2 x float> poison, <2 x i32> zeroinitializer
  %17 = fmul <2 x float> %16, %13
  %18 = insertelement <2 x float> poison, float %sub.i.i, i64 0
  %19 = shufflevector <2 x float> %18, <2 x float> poison, <2 x i32> zeroinitializer
  %20 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %12, <2 x float> %19, <2 x float> %17)
  %21 = insertelement <2 x float> poison, float %sub14.i.i, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> zeroinitializer
  %23 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %14, <2 x float> %22, <2 x float> %20)
  %mul8.i20.i.i = fmul float %sub8.i.i, %10
  %24 = tail call float @llvm.fmuladd.f32(float %9, float %sub.i.i, float %mul8.i20.i.i)
  %25 = tail call float @llvm.fmuladd.f32(float %11, float %sub14.i.i, float %24)
  %retval.sroa.3.12.vec.insert.i8.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %25, i64 0
  store <2 x float> %23, ptr %ref.tmp, align 8
  %26 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp, i64 0, i32 1
  store <2 x float> %retval.sroa.3.12.vec.insert.i8.i, ptr %26, align 8
  %call6 = call noundef float @_ZN11btSparseSdfILi3EE8EvaluateERK9btVector3P16btCollisionShapeRS1_f(ptr noundef nonnull align 8 dereferenceable(52) %m_sparsesdf, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp, ptr noundef %0, ptr noundef nonnull align 4 dereferenceable(16) %nrm, float noundef %margin)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  %cmp = fcmp olt float %call6, 0.000000e+00
  br i1 %cmp, label %if.then, label %cleanup

if.then:                                          ; preds = %entry
  %arrayidx.i27.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %cond-lvalue, i64 0, i64 2, i32 0, i64 1
  %arrayidx.i26.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %cond-lvalue, i64 0, i64 1, i32 0, i64 1
  %arrayidx.i.i.i = getelementptr inbounds [4 x float], ptr %cond-lvalue, i64 0, i64 1
  store ptr %colObj, ptr %cti, align 8, !tbaa !491
  %27 = load float, ptr %nrm, align 4, !tbaa !137
  %arrayidx7.i.i35 = getelementptr inbounds [4 x float], ptr %nrm, i64 0, i64 1
  %28 = load float, ptr %arrayidx7.i.i35, align 4, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds [4 x float], ptr %nrm, i64 0, i64 2
  %29 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %30 = load float, ptr %cond-lvalue, align 4, !tbaa !137
  %31 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %32 = load float, ptr %arrayidx.i28.i.i, align 4, !tbaa !137
  %33 = load float, ptr %arrayidx3.i.i, align 4, !tbaa !137
  %34 = load float, ptr %arrayidx.i26.i.i, align 4, !tbaa !137
  %35 = insertelement <2 x float> poison, float %28, i64 0
  %36 = shufflevector <2 x float> %35, <2 x float> poison, <2 x i32> zeroinitializer
  %37 = insertelement <2 x float> poison, float %31, i64 0
  %38 = insertelement <2 x float> %37, float %34, i64 1
  %39 = fmul <2 x float> %36, %38
  %40 = insertelement <2 x float> poison, float %30, i64 0
  %41 = insertelement <2 x float> %40, float %33, i64 1
  %42 = insertelement <2 x float> poison, float %27, i64 0
  %43 = shufflevector <2 x float> %42, <2 x float> poison, <2 x i32> zeroinitializer
  %44 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %41, <2 x float> %43, <2 x float> %39)
  %45 = load float, ptr %arrayidx.i29.i.i, align 4, !tbaa !137
  %46 = insertelement <2 x float> poison, float %32, i64 0
  %47 = insertelement <2 x float> %46, float %45, i64 1
  %48 = insertelement <2 x float> poison, float %29, i64 0
  %49 = shufflevector <2 x float> %48, <2 x float> poison, <2 x i32> zeroinitializer
  %50 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %47, <2 x float> %49, <2 x float> %44)
  %51 = load float, ptr %arrayidx6.i.i, align 4, !tbaa !137
  %52 = load float, ptr %arrayidx.i27.i.i, align 4, !tbaa !137
  %mul8.i20.i = fmul float %28, %52
  %53 = call float @llvm.fmuladd.f32(float %51, float %27, float %mul8.i20.i)
  %54 = load float, ptr %arrayidx.i30.i.i, align 4, !tbaa !137
  %55 = call float @llvm.fmuladd.f32(float %54, float %29, float %53)
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %55, i64 0
  %m_normal = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %cti, i64 0, i32 1
  store <2 x float> %50, ptr %m_normal, align 8, !tbaa.struct !163
  %ref.tmp7.sroa.4.0.m_normal.sroa_idx = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %cti, i64 0, i32 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %ref.tmp7.sroa.4.0.m_normal.sroa_idx, align 8, !tbaa.struct !165
  %56 = extractelement <2 x float> %50, i64 0
  %mul.i = fmul float %call6, %56
  %57 = extractelement <2 x float> %50, i64 1
  %mul4.i = fmul float %call6, %57
  %mul8.i = fmul float %call6, %55
  %58 = load float, ptr %x, align 4, !tbaa !137
  %sub.i = fsub float %58, %mul.i
  %59 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %sub8.i = fsub float %59, %mul4.i
  %60 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %sub14.i = fsub float %60, %mul8.i
  %mul8.i.i49 = fmul float %57, %sub8.i
  %61 = call float @llvm.fmuladd.f32(float %56, float %sub.i, float %mul8.i.i49)
  %62 = call float @llvm.fmuladd.f32(float %55, float %sub14.i, float %61)
  %fneg = fneg float %62
  %m_offset = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %cti, i64 0, i32 2
  store float %fneg, ptr %m_offset, align 8, !tbaa !493
  br label %cleanup

cleanup:                                          ; preds = %entry, %if.then
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %nrm) #38
  ret i1 %cmp
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef float @_ZN11btSparseSdfILi3EE8EvaluateERK9btVector3P16btCollisionShapeRS1_f(ptr noundef nonnull align 8 dereferenceable(52) %this, ptr noundef nonnull align 4 dereferenceable(16) %x, ptr noundef %shape, ptr noundef nonnull align 4 dereferenceable(16) %normal, float noundef %margin) local_unnamed_addr #0 comdat align 2 {
entry:
  %voxelsz = getelementptr inbounds %struct.btSparseSdf, ptr %this, i64 0, i32 1
  %0 = load float, ptr %voxelsz, align 8, !tbaa !137
  %div.i = fdiv float 1.000000e+00, %0
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %x, i64 0, i64 2
  %1 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %mul8.i.i = fmul float %div.i, %1
  %2 = load <2 x float>, ptr %x, align 4, !tbaa !137
  %3 = insertelement <2 x float> poison, float %div.i, i64 0
  %4 = shufflevector <2 x float> %3, <2 x float> poison, <2 x i32> zeroinitializer
  %5 = fmul <2 x float> %4, %2
  %6 = fdiv <2 x float> %5, <float 3.000000e+00, float 3.000000e+00>
  %7 = shufflevector <2 x float> %6, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %8 = fcmp olt <2 x float> %7, zeroinitializer
  %9 = fsub <2 x float> <float 1.000000e+00, float 1.000000e+00>, %7
  %10 = fptosi <2 x float> %9 to <2 x i32>
  %11 = select <2 x i1> %8, <2 x i32> %10, <2 x i32> zeroinitializer
  %12 = sitofp <2 x i32> %11 to <2 x float>
  %13 = fadd <2 x float> %7, %12
  %14 = fptosi <2 x float> %13 to <2 x i32>
  %15 = sub nsw <2 x i32> %14, %11
  %div.i393 = fdiv float %mul8.i.i, 3.000000e+00
  %cmp.i394 = fcmp olt float %div.i393, 0.000000e+00
  %add.i395 = fsub float 1.000000e+00, %div.i393
  %conv.i396 = fptosi float %add.i395 to i32
  %cond.i397 = select i1 %cmp.i394, i32 %conv.i396, i32 0
  %conv1.i398 = sitofp i32 %cond.i397 to float
  %add2.i399 = fadd float %div.i393, %conv1.i398
  %conv3.i400 = fptosi float %add2.i399 to i32
  %sub11.i407 = sub nsw i32 %conv3.i400, %cond.i397
  %16 = extractelement <2 x i32> %15, i64 1
  %conv.i.i = and i32 %16, 65535
  %add.i.i = add nuw nsw i32 %conv.i.i, 24
  %17 = lshr i32 %16, 5
  %shl.i.i = and i32 %17, 134215680
  %shl3.i.i = shl i32 %add.i.i, 16
  %18 = xor i32 %shl.i.i, %shl3.i.i
  %xor4.i.i = xor i32 %18, %add.i.i
  %shr.i.i = lshr i32 %xor4.i.i, 11
  %19 = extractelement <2 x i32> %15, i64 0
  %conv.1.i.i = and i32 %19, 65535
  %add5.i.i = add i32 %xor4.i.i, %conv.1.i.i
  %add.1.i.i = add i32 %add5.i.i, %shr.i.i
  %20 = lshr i32 %19, 5
  %shl.1.i.i = and i32 %20, 134215680
  %shl3.1.i.i = shl i32 %add.1.i.i, 16
  %21 = xor i32 %shl.1.i.i, %shl3.1.i.i
  %xor4.1.i.i = xor i32 %21, %add.1.i.i
  %shr.1.i.i = lshr i32 %xor4.1.i.i, 11
  %conv.2.i.i = and i32 %sub11.i407, 65535
  %add5.1.i.i = add i32 %xor4.1.i.i, %conv.2.i.i
  %add.2.i.i = add i32 %add5.1.i.i, %shr.1.i.i
  %22 = lshr i32 %sub11.i407, 5
  %shl.2.i.i = and i32 %22, 134215680
  %shl3.2.i.i = shl i32 %add.2.i.i, 16
  %23 = xor i32 %shl.2.i.i, %shl3.2.i.i
  %xor4.2.i.i = xor i32 %23, %add.2.i.i
  %shr.2.i.i = lshr i32 %xor4.2.i.i, 11
  %add5.2.i.i = add i32 %shr.2.i.i, %xor4.2.i.i
  %shl3.3.i.i = shl i32 %add5.2.i.i, 16
  %xor4.3.i.i = xor i32 %shl3.3.i.i, %add5.2.i.i
  %shr.3.i.i = lshr i32 %xor4.3.i.i, 11
  %24 = ptrtoint ptr %shape to i64
  %myset.sroa.13.16.extract.trunc.i = trunc i64 %24 to i32
  %conv.4.i.i = and i32 %myset.sroa.13.16.extract.trunc.i, 65535
  %add5.3.i.i = add i32 %xor4.3.i.i, %conv.4.i.i
  %add.4.i.i = add i32 %add5.3.i.i, %shr.3.i.i
  %25 = lshr i32 %myset.sroa.13.16.extract.trunc.i, 5
  %shl.4.i.i = and i32 %25, 134215680
  %shl3.4.i.i = shl i32 %add.4.i.i, 16
  %26 = xor i32 %shl.4.i.i, %shl3.4.i.i
  %xor4.4.i.i = xor i32 %26, %add.4.i.i
  %shr.4.i.i = lshr i32 %xor4.4.i.i, 11
  %myset.sroa.13.20.extract.shift.i = lshr i64 %24, 32
  %myset.sroa.13.20.extract.trunc.i = trunc i64 %myset.sroa.13.20.extract.shift.i to i32
  %conv.5.i.i = and i32 %myset.sroa.13.20.extract.trunc.i, 65535
  %add5.4.i.i = add i32 %xor4.4.i.i, %conv.5.i.i
  %add.5.i.i = add i32 %add5.4.i.i, %shr.4.i.i
  %sh.diff.i = lshr i64 %24, 37
  %tr.sh.diff.i = trunc i64 %sh.diff.i to i32
  %shl.5.i.i = and i32 %tr.sh.diff.i, 134215680
  %shl3.5.i.i = shl i32 %add.5.i.i, 16
  %27 = xor i32 %shl.5.i.i, %shl3.5.i.i
  %xor4.5.i.i = xor i32 %27, %add.5.i.i
  %shr.5.i.i = lshr i32 %xor4.5.i.i, 11
  %add5.5.i.i = add i32 %shr.5.i.i, %xor4.5.i.i
  %shl6.i.i = shl i32 %add5.5.i.i, 3
  %xor7.i.i = xor i32 %shl6.i.i, %add5.5.i.i
  %shr8.i.i = lshr i32 %xor7.i.i, 5
  %add9.i.i = add i32 %shr8.i.i, %xor7.i.i
  %shl10.i.i = shl i32 %add9.i.i, 4
  %xor11.i.i = xor i32 %shl10.i.i, %add9.i.i
  %shr12.i.i = lshr i32 %xor11.i.i, 17
  %add13.i.i = add i32 %shr12.i.i, %xor11.i.i
  %shl14.i.i = shl i32 %add13.i.i, 25
  %xor15.i.i = xor i32 %shl14.i.i, %add13.i.i
  %shr16.i.i = lshr i32 %xor15.i.i, 6
  %add17.i.i = add i32 %shr16.i.i, %xor15.i.i
  %m_size.i = getelementptr inbounds %class.btAlignedObjectArray.16, ptr %this, i64 0, i32 2
  %28 = load i32, ptr %m_size.i, align 4, !tbaa !494
  %rem = urem i32 %add17.i.i, %28
  %m_data.i = getelementptr inbounds %class.btAlignedObjectArray.16, ptr %this, i64 0, i32 5
  %29 = load ptr, ptr %m_data.i, align 8, !tbaa !495
  %idxprom.i = sext i32 %rem to i64
  %arrayidx.i414 = getelementptr inbounds ptr, ptr %29, i64 %idxprom.i
  %30 = load ptr, ptr %arrayidx.i414, align 8, !tbaa !219
  %nqueries = getelementptr inbounds %struct.btSparseSdf, ptr %this, i64 0, i32 5
  %31 = load i32, ptr %nqueries, align 8, !tbaa !496
  %inc = add nsw i32 %31, 1
  store i32 %inc, ptr %nqueries, align 8, !tbaa !496
  %tobool.not434 = icmp eq ptr %30, null
  %nprobes34.phi.trans.insert = getelementptr inbounds %struct.btSparseSdf, ptr %this, i64 0, i32 4
  %.pre = load i32, ptr %nprobes34.phi.trans.insert, align 4, !tbaa !497
  br i1 %tobool.not434, label %if.then33, label %while.body

while.body:                                       ; preds = %entry, %if.else
  %inc16436 = phi i32 [ %inc16, %if.else ], [ %.pre, %entry ]
  %c.0435 = phi ptr [ %37, %if.else ], [ %30, %entry ]
  %inc16 = add nsw i32 %inc16436, 1
  store i32 %inc16, ptr %nprobes34.phi.trans.insert, align 4, !tbaa !497
  %hash = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c.0435, i64 0, i32 3
  %32 = load i32, ptr %hash, align 8, !tbaa !498
  %cmp = icmp eq i32 %32, %add17.i.i
  br i1 %cmp, label %land.lhs.true, label %if.else

land.lhs.true:                                    ; preds = %while.body
  %c17 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c.0435, i64 0, i32 1
  %33 = load i32, ptr %c17, align 8, !tbaa !140
  %cmp19 = icmp eq i32 %33, %16
  br i1 %cmp19, label %land.lhs.true20, label %if.else

land.lhs.true20:                                  ; preds = %land.lhs.true
  %arrayidx22 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c.0435, i64 0, i32 1, i64 1
  %34 = load i32, ptr %arrayidx22, align 4, !tbaa !140
  %cmp24 = icmp eq i32 %34, %19
  br i1 %cmp24, label %land.lhs.true25, label %if.else

land.lhs.true25:                                  ; preds = %land.lhs.true20
  %arrayidx27 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c.0435, i64 0, i32 1, i64 2
  %35 = load i32, ptr %arrayidx27, align 8, !tbaa !140
  %cmp29 = icmp eq i32 %35, %sub11.i407
  br i1 %cmp29, label %land.lhs.true30, label %if.else

land.lhs.true30:                                  ; preds = %land.lhs.true25
  %pclient = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c.0435, i64 0, i32 4
  %36 = load ptr, ptr %pclient, align 8, !tbaa !500
  %cmp31 = icmp eq ptr %36, %shape
  br i1 %cmp31, label %if.end50, label %if.else

if.else:                                          ; preds = %land.lhs.true30, %land.lhs.true25, %land.lhs.true20, %land.lhs.true, %while.body
  %next = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c.0435, i64 0, i32 5
  %37 = load ptr, ptr %next, align 8, !tbaa !501
  %tobool.not = icmp eq ptr %37, null
  br i1 %tobool.not, label %if.then33, label %while.body

if.then33:                                        ; preds = %if.else, %entry
  %38 = phi i32 [ %.pre, %entry ], [ %inc16, %if.else ]
  %nprobes34 = getelementptr inbounds %struct.btSparseSdf, ptr %this, i64 0, i32 4
  %inc35 = add nsw i32 %38, 1
  store i32 %inc35, ptr %nprobes34, align 4, !tbaa !497
  %ncells = getelementptr inbounds %struct.btSparseSdf, ptr %this, i64 0, i32 3
  %39 = load i32, ptr %ncells, align 8, !tbaa !502
  %inc36 = add nsw i32 %39, 1
  store i32 %inc36, ptr %ncells, align 8, !tbaa !502
  %call37 = tail call noalias noundef nonnull dereferenceable(296) ptr @_Znwm(i64 noundef 296) #36
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 16 dereferenceable(296) %call37, i8 0, i64 288, i1 false)
  %40 = load ptr, ptr %arrayidx.i414, align 8, !tbaa !219
  %next38 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %call37, i64 0, i32 5
  store ptr %40, ptr %next38, align 8, !tbaa !501
  store ptr %call37, ptr %arrayidx.i414, align 8, !tbaa !219
  %pclient39 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %call37, i64 0, i32 4
  store ptr %shape, ptr %pclient39, align 8, !tbaa !500
  %hash40 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %call37, i64 0, i32 3
  store i32 %add17.i.i, ptr %hash40, align 8, !tbaa !498
  %c42 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %call37, i64 0, i32 1
  %41 = shufflevector <2 x i32> %15, <2 x i32> poison, <2 x i32> <i32 1, i32 0>
  store <2 x i32> %41, ptr %c42, align 8, !tbaa !140
  %arrayidx49 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %call37, i64 0, i32 1, i64 2
  store i32 %sub11.i407, ptr %arrayidx49, align 8, !tbaa !140
  tail call void @_ZN11btSparseSdfILi3EE9BuildCellERNS0_4CellE(ptr noundef nonnull align 8 dereferenceable(52) %this, ptr noundef nonnull align 8 dereferenceable(296) %call37)
  br label %if.end50

if.end50:                                         ; preds = %land.lhs.true30, %if.then33
  %c.1 = phi ptr [ %call37, %if.then33 ], [ %c.0435, %land.lhs.true30 ]
  %conv5.i401 = sitofp i32 %conv3.i400 to float
  %sub.i402 = fsub float %add2.i399, %conv5.i401
  %mul.i403 = fmul float %sub.i402, 3.000000e+00
  %conv6.i404 = fptosi float %mul.i403 to i32
  %42 = sitofp <2 x i32> %14 to <2 x float>
  %conv8.i405 = sitofp i32 %conv6.i404 to float
  %sub9.i406 = fsub float %mul.i403, %conv8.i405
  %puid = getelementptr inbounds %struct.btSparseSdf, ptr %this, i64 0, i32 2
  %43 = load i32, ptr %puid, align 4, !tbaa !503
  %puid51 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c.1, i64 0, i32 2
  store i32 %43, ptr %puid51, align 4, !tbaa !504
  %idxprom65 = sext i32 %conv6.i404 to i64
  %add120 = add nsw i32 %conv6.i404, 1
  %idxprom121 = sext i32 %add120 to i64
  %arrayidx.i425 = getelementptr inbounds [4 x float], ptr %normal, i64 0, i64 2
  %44 = fsub <2 x float> %13, %42
  %45 = fmul <2 x float> %44, <float 3.000000e+00, float 3.000000e+00>
  %46 = fptosi <2 x float> %45 to <2 x i32>
  %47 = sitofp <2 x i32> %46 to <2 x float>
  %48 = fsub <2 x float> %45, %47
  %49 = extractelement <2 x i32> %46, i64 1
  %idxprom = sext i32 %49 to i64
  %50 = extractelement <2 x i32> %46, i64 0
  %idxprom61 = sext i32 %50 to i64
  %arrayidx66 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c.1, i64 0, i64 %idxprom, i64 %idxprom61, i64 %idxprom65
  %add70 = add nsw i32 %49, 1
  %idxprom71 = sext i32 %add70 to i64
  %arrayidx80 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c.1, i64 0, i64 %idxprom71, i64 %idxprom61, i64 %idxprom65
  %add88 = add nsw i32 %50, 1
  %idxprom89 = sext i32 %add88 to i64
  %arrayidx94 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c.1, i64 0, i64 %idxprom71, i64 %idxprom89, i64 %idxprom65
  %arrayidx108 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c.1, i64 0, i64 %idxprom, i64 %idxprom89, i64 %idxprom65
  %arrayidx122 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c.1, i64 0, i64 %idxprom, i64 %idxprom61, i64 %idxprom121
  %arrayidx136 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c.1, i64 0, i64 %idxprom71, i64 %idxprom61, i64 %idxprom121
  %arrayidx150 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c.1, i64 0, i64 %idxprom71, i64 %idxprom89, i64 %idxprom121
  %arrayidx164 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c.1, i64 0, i64 %idxprom, i64 %idxprom89, i64 %idxprom121
  %51 = insertelement <2 x float> poison, float %sub9.i406, i64 0
  %52 = shufflevector <2 x float> %51, <2 x float> poison, <2 x i32> zeroinitializer
  %53 = load float, ptr %arrayidx80, align 4, !tbaa !137
  %54 = load float, ptr %arrayidx94, align 4, !tbaa !137
  %55 = load float, ptr %arrayidx136, align 4, !tbaa !137
  %56 = load float, ptr %arrayidx150, align 4, !tbaa !137
  %57 = insertelement <2 x float> poison, float %53, i64 0
  %58 = insertelement <2 x float> poison, float %54, i64 0
  %59 = shufflevector <2 x float> %58, <2 x float> poison, <2 x i32> zeroinitializer
  %60 = insertelement <2 x float> poison, float %55, i64 0
  %61 = insertelement <2 x float> poison, float %56, i64 0
  %62 = shufflevector <2 x float> %61, <2 x float> poison, <2 x i32> zeroinitializer
  %63 = insertelement <2 x float> %61, float %55, i64 1
  %64 = insertelement <2 x float> %58, float %53, i64 1
  %65 = fsub <2 x float> %63, %64
  %66 = shufflevector <2 x float> %48, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %67 = extractelement <2 x float> %48, i64 0
  %68 = load float, ptr %arrayidx66, align 4, !tbaa !137
  %69 = load float, ptr %arrayidx108, align 4, !tbaa !137
  %70 = load float, ptr %arrayidx122, align 4, !tbaa !137
  %71 = load float, ptr %arrayidx164, align 4, !tbaa !137
  %72 = insertelement <2 x float> %57, float %69, i64 1
  %73 = insertelement <2 x float> poison, float %68, i64 0
  %74 = shufflevector <2 x float> %73, <2 x float> poison, <2 x i32> zeroinitializer
  %75 = fsub <2 x float> %72, %74
  %76 = insertelement <2 x float> poison, float %69, i64 0
  %77 = insertelement <2 x float> %76, float %53, i64 1
  %78 = fsub <2 x float> %59, %77
  %79 = insertelement <2 x float> %60, float %71, i64 1
  %80 = insertelement <2 x float> poison, float %70, i64 0
  %81 = shufflevector <2 x float> %80, <2 x float> poison, <2 x i32> zeroinitializer
  %82 = fsub <2 x float> %79, %81
  %83 = insertelement <2 x float> poison, float %71, i64 0
  %84 = insertelement <2 x float> %83, float %55, i64 1
  %85 = fsub <2 x float> %62, %84
  %86 = insertelement <2 x float> %83, float %70, i64 1
  %87 = insertelement <2 x float> %76, float %68, i64 1
  %88 = fsub <2 x float> %86, %87
  %89 = fsub <2 x float> %78, %75
  %90 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %89, <2 x float> %48, <2 x float> %75)
  %91 = fsub <2 x float> %85, %82
  %92 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %91, <2 x float> %48, <2 x float> %82)
  %93 = fsub <2 x float> %92, %90
  %94 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %93, <2 x float> %52, <2 x float> %90)
  %95 = fsub <2 x float> %65, %88
  %96 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %95, <2 x float> %66, <2 x float> %88)
  %97 = extractelement <2 x float> %96, i64 0
  %98 = extractelement <2 x float> %96, i64 1
  %sub.i424 = fsub float %97, %98
  %99 = tail call float @llvm.fmuladd.f32(float %sub.i424, float %67, float %98)
  %100 = fmul <2 x float> %94, %94
  %mul8.i.i.i.i = extractelement <2 x float> %100, i64 1
  %101 = extractelement <2 x float> %94, i64 0
  %102 = tail call float @llvm.fmuladd.f32(float %101, float %101, float %mul8.i.i.i.i)
  %103 = tail call float @llvm.fmuladd.f32(float %99, float %99, float %102)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %103)
  %div.i.i = fdiv float 1.000000e+00, %sqrt.i.i
  %104 = insertelement <2 x float> poison, float %div.i.i, i64 0
  %105 = shufflevector <2 x float> %104, <2 x float> poison, <2 x i32> zeroinitializer
  %106 = fmul <2 x float> %94, %105
  %mul8.i.i.i = fmul float %99, %div.i.i
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i.i, i64 0
  store <2 x float> %106, ptr %normal, align 4, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i, ptr %arrayidx.i425, align 4, !tbaa.struct !165
  %107 = shufflevector <2 x float> %82, <2 x float> %75, <2 x i32> <i32 0, i32 2>
  %108 = insertelement <2 x float> %80, float %68, i64 1
  %109 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %107, <2 x float> %66, <2 x float> %108)
  %110 = shufflevector <2 x float> %85, <2 x float> %78, <2 x i32> <i32 0, i32 2>
  %111 = insertelement <2 x float> %83, float %69, i64 1
  %112 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %110, <2 x float> %66, <2 x float> %111)
  %113 = fsub <2 x float> %112, %109
  %114 = shufflevector <2 x float> %48, <2 x float> poison, <2 x i32> zeroinitializer
  %115 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %113, <2 x float> %114, <2 x float> %109)
  %116 = extractelement <2 x float> %115, i64 0
  %117 = extractelement <2 x float> %115, i64 1
  %sub.i432 = fsub float %116, %117
  %118 = tail call float @llvm.fmuladd.f32(float %sub.i432, float %sub9.i406, float %117)
  %sub265 = fsub float %118, %margin
  ret float %sub265
}

; Function Attrs: inlinehint nofree nosync nounwind memory(argmem: readwrite) uwtable
define internal fastcc void @_ZL14PolarDecomposeRK11btMatrix3x3RS_S2_(ptr nocapture noundef nonnull readonly align 4 dereferenceable(48) %m, ptr nocapture noundef nonnull writeonly align 4 dereferenceable(48) %q, ptr nocapture noundef nonnull writeonly align 4 dereferenceable(48) %s) unnamed_addr #27 {
entry:
  %arrayidx5 = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 1, i32 0, i64 1
  %arrayidx8 = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 2, i32 0, i64 2
  %0 = load float, ptr %m, align 4, !tbaa !137
  %arrayidx3.i.i = getelementptr inbounds [4 x float], ptr %m, i64 0, i64 1
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %m, i64 0, i64 2
  %arrayidx.i.1.i = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 1
  %1 = load float, ptr %arrayidx.i.1.i, align 4, !tbaa !137, !noalias !505
  %arrayidx7.i.1.i = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 1, i32 0, i64 2
  %2 = load <4 x float>, ptr %arrayidx7.i.1.i, align 4
  %3 = shufflevector <4 x float> %2, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %arrayidx.i.2.i = getelementptr inbounds [3 x %class.btVector3], ptr %m, i64 0, i64 2
  %4 = load <2 x float>, ptr %arrayidx3.i.i, align 4, !tbaa !137, !noalias !505
  %5 = insertelement <2 x float> %3, float %1, i64 1
  %6 = load <2 x float>, ptr %arrayidx.i.2.i, align 4, !tbaa !137, !noalias !505
  %7 = load float, ptr %arrayidx5, align 4, !tbaa !137
  %8 = load float, ptr %arrayidx8, align 4, !tbaa !137
  %mul8.i.i.i = fmul float %7, %7
  %9 = tail call float @llvm.fmuladd.f32(float %0, float %0, float %mul8.i.i.i)
  %10 = tail call float @llvm.fmuladd.f32(float %8, float %8, float %9)
  %sqrt.i = tail call float @llvm.sqrt.f32(float %10)
  %div = fdiv float 1.000000e+00, %sqrt.i
  %mul.i.i = fmul float %0, %div
  %11 = insertelement <2 x float> poison, float %div, i64 0
  %12 = shufflevector <2 x float> %11, <2 x float> poison, <2 x i32> zeroinitializer
  %13 = fmul <2 x float> %4, %12
  %14 = fmul <2 x float> %5, %12
  %15 = fmul <2 x float> %12, %6
  %16 = insertelement <2 x float> poison, float %8, i64 0
  %17 = insertelement <2 x float> %16, float %7, i64 1
  %18 = fmul <2 x float> %17, %12
  %ref.tmp.sroa.4.0.q.sroa_idx = getelementptr inbounds i8, ptr %q, i64 8
  %arrayidx7.i52 = getelementptr inbounds [3 x %class.btVector3], ptr %q, i64 0, i64 1
  %ref.tmp.sroa.7.16.arrayidx7.i52.sroa_idx = getelementptr inbounds [3 x %class.btVector3], ptr %q, i64 0, i64 1, i32 0, i64 2
  %arrayidx11.i = getelementptr inbounds [3 x %class.btVector3], ptr %q, i64 0, i64 2
  %ref.tmp.sroa.10.32.arrayidx11.i.sroa_idx = getelementptr inbounds [3 x %class.btVector3], ptr %q, i64 0, i64 2, i32 0, i64 2
  %19 = extractelement <2 x float> %14, i64 0
  %20 = fneg float %19
  %21 = extractelement <2 x float> %15, i64 1
  %neg.i.i.i = fmul float %21, %20
  %22 = extractelement <2 x float> %18, i64 0
  %23 = extractelement <2 x float> %18, i64 1
  %24 = tail call float @llvm.fmuladd.f32(float %23, float %22, float %neg.i.i.i)
  %25 = extractelement <2 x float> %14, i64 1
  %26 = fneg float %25
  %neg23.i.i.i = fmul float %22, %26
  %27 = extractelement <2 x float> %15, i64 0
  %28 = tail call float @llvm.fmuladd.f32(float %19, float %27, float %neg23.i.i.i)
  %29 = extractelement <2 x float> %13, i64 0
  %mul24.i.i.i = fmul float %29, %28
  %30 = tail call float @llvm.fmuladd.f32(float %mul.i.i, float %24, float %mul24.i.i.i)
  %31 = fneg float %23
  %neg36.i.i.i = fmul float %27, %31
  %32 = tail call float @llvm.fmuladd.f32(float %25, float %21, float %neg36.i.i.i)
  %33 = extractelement <2 x float> %13, i64 1
  %34 = tail call float @llvm.fmuladd.f32(float %33, float %32, float %30)
  %35 = tail call float @llvm.fabs.f32(float %34)
  %cmp.i = fcmp olt float %35, 0x3E80000000000000
  br i1 %cmp.i, label %if.else28, label %for.body

for.body:                                         ; preds = %entry, %for.body
  %36 = phi float [ %mul.i.i116, %for.body ], [ %mul.i.i, %entry ]
  %i.0212 = phi i32 [ %inc, %for.body ], [ 0, %entry ]
  %det.0211 = phi float [ %99, %for.body ], [ %34, %entry ]
  %37 = phi <2 x float> [ %60, %for.body ], [ %13, %entry ]
  %38 = phi <2 x float> [ %81, %for.body ], [ %14, %entry ]
  %39 = phi <2 x float> [ %82, %for.body ], [ %15, %entry ]
  %40 = phi <2 x float> [ %83, %for.body ], [ %18, %entry ]
  %41 = extractelement <2 x float> %38, i64 0
  %42 = fneg float %41
  %43 = extractelement <2 x float> %39, i64 1
  %neg.i.i = fmul float %43, %42
  %44 = extractelement <2 x float> %40, i64 0
  %45 = extractelement <2 x float> %40, i64 1
  %46 = tail call float @llvm.fmuladd.f32(float %45, float %44, float %neg.i.i)
  %47 = shufflevector <2 x float> %38, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %48 = shufflevector <2 x float> %47, <2 x float> %40, <2 x i32> <i32 0, i32 3>
  %49 = fneg <2 x float> %48
  %50 = fneg float %36
  %neg.i42.i = fmul float %41, %50
  %neg.i51.i = fmul float %43, %50
  %div18 = fdiv float 1.000000e+00, %det.0211
  %mul.i.i57 = fmul float %div18, %46
  %add.i.i = fadd float %mul.i.i57, %36
  %mul.i.i116 = fmul float %add.i.i, 5.000000e-01
  %51 = shufflevector <2 x float> %39, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %52 = shufflevector <2 x float> %40, <2 x float> %51, <2 x i32> <i32 0, i32 3>
  %53 = fmul <2 x float> %52, %49
  %54 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %38, <2 x float> %39, <2 x float> %53)
  %55 = insertelement <2 x float> poison, float %neg.i51.i, i64 0
  %56 = insertelement <2 x float> poison, float %div18, i64 0
  %57 = shufflevector <2 x float> %56, <2 x float> poison, <2 x i32> zeroinitializer
  %58 = fmul <2 x float> %57, %54
  %59 = fadd <2 x float> %37, %58
  %60 = fmul <2 x float> %59, <float 5.000000e-01, float 5.000000e-01>
  %61 = fneg <2 x float> %37
  %62 = fmul <2 x float> %40, %61
  %63 = fmul <2 x float> %40, %61
  %neg.i29.i = extractelement <2 x float> %63, i64 1
  %64 = shufflevector <2 x float> %38, <2 x float> %39, <2 x i32> <i32 1, i32 2>
  %65 = fmul <2 x float> %64, %61
  %66 = insertelement <2 x float> poison, float %36, i64 0
  %67 = shufflevector <2 x float> %66, <2 x float> poison, <2 x i32> zeroinitializer
  %68 = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %69 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %67, <2 x float> %68, <2 x float> %65)
  %70 = fmul <2 x float> %57, %69
  %71 = fadd <2 x float> %40, %70
  %72 = insertelement <2 x float> poison, float %neg.i29.i, i64 0
  %73 = insertelement <2 x float> %72, float %neg.i42.i, i64 1
  %74 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %37, <2 x float> %38, <2 x float> %73)
  %75 = shufflevector <2 x float> %55, <2 x float> %62, <2 x i32> <i32 0, i32 2>
  %76 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %37, <2 x float> %39, <2 x float> %75)
  %77 = fmul <2 x float> %57, %74
  %78 = fmul <2 x float> %57, %76
  %79 = fadd <2 x float> %38, %78
  %80 = fadd <2 x float> %39, %77
  %81 = fmul <2 x float> %79, <float 5.000000e-01, float 5.000000e-01>
  %82 = fmul <2 x float> %80, <float 5.000000e-01, float 5.000000e-01>
  %83 = fmul <2 x float> %71, <float 5.000000e-01, float 5.000000e-01>
  %84 = extractelement <2 x float> %81, i64 0
  %85 = fneg float %84
  %86 = extractelement <2 x float> %82, i64 1
  %neg.i.i.i157 = fmul float %86, %85
  %87 = extractelement <2 x float> %83, i64 0
  %88 = extractelement <2 x float> %83, i64 1
  %89 = tail call float @llvm.fmuladd.f32(float %88, float %87, float %neg.i.i.i157)
  %90 = extractelement <2 x float> %81, i64 1
  %91 = fneg float %90
  %neg23.i.i.i159 = fmul float %87, %91
  %92 = extractelement <2 x float> %82, i64 0
  %93 = tail call float @llvm.fmuladd.f32(float %84, float %92, float %neg23.i.i.i159)
  %94 = extractelement <2 x float> %60, i64 0
  %mul24.i.i.i160 = fmul float %94, %93
  %95 = tail call float @llvm.fmuladd.f32(float %mul.i.i116, float %89, float %mul24.i.i.i160)
  %96 = fneg float %88
  %neg36.i.i.i162 = fmul float %92, %96
  %97 = tail call float @llvm.fmuladd.f32(float %90, float %86, float %neg36.i.i.i162)
  %98 = extractelement <2 x float> %60, i64 1
  %99 = tail call float @llvm.fmuladd.f32(float %98, float %97, float %95)
  %sub = fsub float %99, %det.0211
  %mul.i = fmul float %sub, %sub
  %cmp23 = fcmp ule float %mul.i, 0x3F1A36E2E0000000
  %inc = add nuw nsw i32 %i.0212, 1
  %exitcond.not = icmp eq i32 %inc, 16
  %or.cond = select i1 %cmp23, i1 true, i1 %exitcond.not
  br i1 %or.cond, label %for.end, label %for.body

for.end:                                          ; preds = %for.body
  %100 = shufflevector <2 x float> %60, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %101 = insertelement <2 x float> %100, float %mul.i.i116, i64 1
  %102 = fneg <2 x float> %101
  %103 = fneg float %94
  %neg30.i.i.i = fmul float %90, %103
  %104 = tail call float @llvm.fmuladd.f32(float %mul.i.i116, float %88, float %neg30.i.i.i)
  %105 = shufflevector <2 x float> %81, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %106 = shufflevector <2 x float> %105, <2 x float> %83, <2 x i32> <i32 3, i32 1>
  %107 = fmul <2 x float> %106, %102
  %108 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %60, <2 x float> %81, <2 x float> %107)
  %109 = fmul <2 x float> %108, %108
  %mul8.i.i.i.i.i = extractelement <2 x float> %109, i64 1
  %110 = extractelement <2 x float> %108, i64 0
  %111 = tail call float @llvm.fmuladd.f32(float %110, float %110, float %mul8.i.i.i.i.i)
  %112 = tail call float @llvm.fmuladd.f32(float %104, float %104, float %111)
  %sqrt.i.i.i = tail call float @llvm.sqrt.f32(float %112)
  %div.i.i.i = fdiv float 1.000000e+00, %sqrt.i.i.i
  %113 = insertelement <2 x float> poison, float %div.i.i.i, i64 0
  %114 = shufflevector <2 x float> %113, <2 x float> poison, <2 x i32> zeroinitializer
  %115 = fmul <2 x float> %108, %114
  %mul8.i.i.i.i = fmul float %104, %div.i.i.i
  %retval.sroa.3.12.vec.insert.i.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i.i.i, i64 0
  store <2 x float> %115, ptr %arrayidx11.i, align 4, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i.i, ptr %ref.tmp.sroa.10.32.arrayidx11.i.sroa_idx, align 4, !tbaa.struct !165
  %116 = extractelement <2 x float> %115, i64 1
  %117 = extractelement <2 x float> %115, i64 0
  %118 = fneg float %116
  %neg30.i.i41.i = fmul float %mul.i.i116, %118
  %119 = tail call float @llvm.fmuladd.f32(float %117, float %94, float %neg30.i.i41.i)
  %120 = shufflevector <2 x float> %115, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %121 = insertelement <2 x float> %120, float %mul8.i.i.i.i, i64 0
  %122 = fneg <2 x float> %121
  %123 = fmul <2 x float> %60, %122
  %124 = insertelement <2 x float> %120, float %mul8.i.i.i.i, i64 1
  %125 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %124, <2 x float> %101, <2 x float> %123)
  %126 = fmul <2 x float> %125, %125
  %mul8.i.i.i.i48.i = extractelement <2 x float> %126, i64 1
  %127 = extractelement <2 x float> %125, i64 0
  %128 = tail call float @llvm.fmuladd.f32(float %127, float %127, float %mul8.i.i.i.i48.i)
  %129 = tail call float @llvm.fmuladd.f32(float %119, float %119, float %128)
  %sqrt.i.i50.i = tail call float @llvm.sqrt.f32(float %129)
  %div.i.i51.i = fdiv float 1.000000e+00, %sqrt.i.i50.i
  %130 = insertelement <2 x float> poison, float %div.i.i51.i, i64 0
  %131 = shufflevector <2 x float> %130, <2 x float> poison, <2 x i32> zeroinitializer
  %132 = fmul <2 x float> %125, %131
  %mul8.i.i.i54.i = fmul float %119, %div.i.i51.i
  %retval.sroa.3.12.vec.insert.i.i.i57.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i.i54.i, i64 0
  store <2 x float> %132, ptr %arrayidx7.i52, align 4, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i57.i, ptr %ref.tmp.sroa.7.16.arrayidx7.i52.sroa_idx, align 4, !tbaa.struct !165
  %133 = fneg float %mul8.i.i.i54.i
  %neg.i.i67.i = fmul float %116, %133
  %134 = extractelement <2 x float> %132, i64 1
  %135 = tail call float @llvm.fmuladd.f32(float %134, float %mul8.i.i.i.i, float %neg.i.i67.i)
  %136 = extractelement <2 x float> %132, i64 0
  %137 = fneg float %136
  %neg19.i.i68.i = fmul float %mul8.i.i.i.i, %137
  %138 = tail call float @llvm.fmuladd.f32(float %mul8.i.i.i54.i, float %117, float %neg19.i.i68.i)
  %139 = fneg float %134
  %neg30.i.i69.i = fmul float %117, %139
  %140 = tail call float @llvm.fmuladd.f32(float %136, float %116, float %neg30.i.i69.i)
  %mul8.i.i.i.i76.i = fmul float %138, %138
  %141 = tail call float @llvm.fmuladd.f32(float %135, float %135, float %mul8.i.i.i.i76.i)
  %142 = tail call float @llvm.fmuladd.f32(float %140, float %140, float %141)
  %sqrt.i.i78.i = tail call float @llvm.sqrt.f32(float %142)
  %div.i.i79.i = fdiv float 1.000000e+00, %sqrt.i.i78.i
  %mul.i.i.i80.i = fmul float %135, %div.i.i79.i
  %mul4.i.i.i81.i = fmul float %138, %div.i.i79.i
  %mul8.i.i.i82.i = fmul float %140, %div.i.i79.i
  %retval.sroa.0.0.vec.insert.i.i.i83.i = insertelement <2 x float> undef, float %mul.i.i.i80.i, i64 0
  %retval.sroa.0.4.vec.insert.i.i.i84.i = insertelement <2 x float> %retval.sroa.0.0.vec.insert.i.i.i83.i, float %mul4.i.i.i81.i, i64 1
  %retval.sroa.3.12.vec.insert.i.i.i85.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i.i82.i, i64 0
  store <2 x float> %retval.sroa.0.4.vec.insert.i.i.i84.i, ptr %q, align 4, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i.i85.i, ptr %ref.tmp.sroa.4.0.q.sroa_idx, align 4, !tbaa.struct !165
  %143 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137, !noalias !508
  %144 = load float, ptr %arrayidx7.i.1.i, align 4, !tbaa !137, !noalias !508
  %mul7.i48.i = fmul float %144, %136
  %145 = tail call float @llvm.fmuladd.f32(float %143, float %mul.i.i.i80.i, float %mul7.i48.i)
  %146 = load float, ptr %arrayidx8, align 4, !tbaa !137, !noalias !508
  %147 = tail call float @llvm.fmuladd.f32(float %146, float %117, float %145)
  %mul7.i67.i = fmul float %134, %144
  %148 = tail call float @llvm.fmuladd.f32(float %143, float %mul4.i.i.i81.i, float %mul7.i67.i)
  %149 = tail call float @llvm.fmuladd.f32(float %146, float %116, float %148)
  %mul7.i87.i = fmul float %mul8.i.i.i54.i, %144
  %150 = tail call float @llvm.fmuladd.f32(float %143, float %mul8.i.i.i82.i, float %mul7.i87.i)
  %151 = tail call float @llvm.fmuladd.f32(float %146, float %mul8.i.i.i.i, float %150)
  %152 = load <2 x float>, ptr %m, align 4, !tbaa !137, !noalias !508
  %153 = load <2 x float>, ptr %arrayidx.i.1.i, align 4, !tbaa !137, !noalias !508
  %154 = shufflevector <2 x float> %132, <2 x float> poison, <2 x i32> zeroinitializer
  %155 = fmul <2 x float> %153, %154
  %156 = insertelement <2 x float> poison, float %mul.i.i.i80.i, i64 0
  %157 = shufflevector <2 x float> %156, <2 x float> poison, <2 x i32> zeroinitializer
  %158 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %152, <2 x float> %157, <2 x float> %155)
  %159 = load <2 x float>, ptr %arrayidx.i.2.i, align 4, !tbaa !137, !noalias !508
  %160 = shufflevector <2 x float> %115, <2 x float> poison, <2 x i32> zeroinitializer
  %161 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %159, <2 x float> %160, <2 x float> %158)
  store <2 x float> %161, ptr %s, align 4
  %ref.tmp25.sroa.5.0.s.sroa_idx = getelementptr inbounds i8, ptr %s, i64 8
  store float %147, ptr %ref.tmp25.sroa.5.0.s.sroa_idx, align 4, !tbaa.struct !165
  %ref.tmp25.sroa.6.0.s.sroa_idx = getelementptr inbounds i8, ptr %s, i64 12
  store float 0.000000e+00, ptr %ref.tmp25.sroa.6.0.s.sroa_idx, align 4, !tbaa.struct !318
  %arrayidx7.i202 = getelementptr inbounds [3 x %class.btVector3], ptr %s, i64 0, i64 1
  %162 = shufflevector <2 x float> %132, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %163 = fmul <2 x float> %162, %153
  %164 = insertelement <2 x float> poison, float %mul4.i.i.i81.i, i64 0
  %165 = shufflevector <2 x float> %164, <2 x float> poison, <2 x i32> zeroinitializer
  %166 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %152, <2 x float> %165, <2 x float> %163)
  %167 = shufflevector <2 x float> %115, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %168 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %159, <2 x float> %167, <2 x float> %166)
  store <2 x float> %168, ptr %arrayidx7.i202, align 4
  %ref.tmp25.sroa.10.16.arrayidx7.i202.sroa_idx = getelementptr inbounds [3 x %class.btVector3], ptr %s, i64 0, i64 1, i32 0, i64 2
  store float %149, ptr %ref.tmp25.sroa.10.16.arrayidx7.i202.sroa_idx, align 4, !tbaa.struct !165
  %ref.tmp25.sroa.11.16.arrayidx7.i202.sroa_idx = getelementptr inbounds [3 x %class.btVector3], ptr %s, i64 0, i64 1, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp25.sroa.11.16.arrayidx7.i202.sroa_idx, align 4, !tbaa.struct !318
  %arrayidx11.i204 = getelementptr inbounds [3 x %class.btVector3], ptr %s, i64 0, i64 2
  %169 = insertelement <2 x float> poison, float %mul8.i.i.i54.i, i64 0
  %170 = shufflevector <2 x float> %169, <2 x float> poison, <2 x i32> zeroinitializer
  %171 = fmul <2 x float> %170, %153
  %172 = insertelement <2 x float> poison, float %mul8.i.i.i82.i, i64 0
  %173 = shufflevector <2 x float> %172, <2 x float> poison, <2 x i32> zeroinitializer
  %174 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %152, <2 x float> %173, <2 x float> %171)
  %175 = insertelement <2 x float> poison, float %mul8.i.i.i.i, i64 0
  %176 = shufflevector <2 x float> %175, <2 x float> poison, <2 x i32> zeroinitializer
  %177 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %159, <2 x float> %176, <2 x float> %174)
  store <2 x float> %177, ptr %arrayidx11.i204, align 4
  %ref.tmp25.sroa.15.32.arrayidx11.i204.sroa_idx = getelementptr inbounds [3 x %class.btVector3], ptr %s, i64 0, i64 2, i32 0, i64 2
  store float %151, ptr %ref.tmp25.sroa.15.32.arrayidx11.i204.sroa_idx, align 4, !tbaa.struct !165
  br label %if.end29

if.else28:                                        ; preds = %entry
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %q, i64 0, i64 1
  %arrayidx3.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %q, i64 0, i64 1, i32 0, i64 1
  store float 1.000000e+00, ptr %q, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx12.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i.i.i, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp.sroa.7.16.arrayidx7.i52.sroa_idx, i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr %ref.tmp.sroa.10.32.arrayidx11.i.sroa_idx, align 4, !tbaa !137
  store float 1.000000e+00, ptr %s, align 4, !tbaa !137
  %arrayidx3.i.i.i206 = getelementptr inbounds [4 x float], ptr %s, i64 0, i64 1
  %arrayidx3.i6.i.i207 = getelementptr inbounds [3 x %class.btVector3], ptr %s, i64 0, i64 1, i32 0, i64 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i206, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i207, align 4, !tbaa !137
  %arrayidx5.i7.i.i208 = getelementptr inbounds [3 x %class.btVector3], ptr %s, i64 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i209 = getelementptr inbounds [3 x %class.btVector3], ptr %s, i64 0, i64 2, i32 0, i64 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i7.i.i208, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i209, align 4, !tbaa !137
  br label %if.end29

if.end29:                                         ; preds = %if.else28, %for.end
  %arrayidx7.i11.i.i210 = getelementptr inbounds [3 x %class.btVector3], ptr %s, i64 0, i64 2, i32 0, i64 3
  store float 0.000000e+00, ptr %arrayidx7.i11.i.i210, align 4
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fmuladd.f32(float, float, float) #28

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody5Joint7PrepareEfi(ptr nocapture noundef nonnull readonly align 8 dereferenceable(181) %this, float %dt, i32 %0) unnamed_addr #4 align 2 {
entry:
  %m_rigid.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 0, i32 1
  %1 = load ptr, ptr %m_rigid.i, align 8, !tbaa !511
  %tobool.not.i = icmp eq ptr %1, null
  br i1 %tobool.not.i, label %_ZNK10btSoftBody4Body8activateEv.exit, label %if.then.i

if.then.i:                                        ; preds = %entry
  tail call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %1, i1 noundef zeroext false)
  br label %_ZNK10btSoftBody4Body8activateEv.exit

_ZNK10btSoftBody4Body8activateEv.exit:            ; preds = %entry, %if.then.i
  %m_rigid.i4 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1, i32 1
  %2 = load ptr, ptr %m_rigid.i4, align 8, !tbaa !511
  %tobool.not.i5 = icmp eq ptr %2, null
  br i1 %tobool.not.i5, label %_ZNK10btSoftBody4Body8activateEv.exit7, label %if.then.i6

if.then.i6:                                       ; preds = %_ZNK10btSoftBody4Body8activateEv.exit
  tail call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %2, i1 noundef zeroext false)
  br label %_ZNK10btSoftBody4Body8activateEv.exit7

_ZNK10btSoftBody4Body8activateEv.exit7:           ; preds = %_ZNK10btSoftBody4Body8activateEv.exit, %if.then.i6
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6LJoint7PrepareEfi(ptr noundef nonnull align 8 dereferenceable(216) %this, float noundef %dt, i32 noundef %iterations) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %ref.tmp45 = alloca %class.btMatrix3x3, align 4
  %m_rigid.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 0, i32 1
  %0 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool.not.i.i = icmp eq ptr %0, null
  br i1 %tobool.not.i.i, label %_ZNK10btSoftBody4Body8activateEv.exit.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %0, i1 noundef zeroext false)
  br label %_ZNK10btSoftBody4Body8activateEv.exit.i

_ZNK10btSoftBody4Body8activateEv.exit.i:          ; preds = %if.then.i.i, %entry
  %m_rigid.i4.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1, i32 1
  %1 = load ptr, ptr %m_rigid.i4.i, align 8, !tbaa !511
  %tobool.not.i5.i = icmp eq ptr %1, null
  br i1 %tobool.not.i5.i, label %_ZN10btSoftBody5Joint7PrepareEfi.exit, label %if.then.i6.i

if.then.i6.i:                                     ; preds = %_ZNK10btSoftBody4Body8activateEv.exit.i
  tail call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %1, i1 noundef zeroext false)
  br label %_ZN10btSoftBody5Joint7PrepareEfi.exit

_ZN10btSoftBody5Joint7PrepareEfi.exit:            ; preds = %_ZNK10btSoftBody4Body8activateEv.exit.i, %if.then.i6.i
  %m_bodies = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1
  %2 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %2, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZNK10btSoftBody4Body5xformEv.exit, !prof !173

init.check.i:                                     ; preds = %_ZN10btSoftBody5Joint7PrepareEfi.exit
  %3 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i = icmp eq i32 %3, 0
  br i1 %tobool.not.i, label %_ZNK10btSoftBody4Body5xformEv.exit, label %init.i

init.i:                                           ; preds = %init.check.i
  %4 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i250 = icmp eq i8 %4, 0
  br i1 %guard.uninitialized.i250, label %init.check.i252, label %invoke.cont.i, !prof !173

init.check.i252:                                  ; preds = %init.i
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i251 = icmp eq i32 %5, 0
  br i1 %tobool.not.i251, label %invoke.cont.i, label %init.i254

init.i254:                                        ; preds = %init.check.i252
  %6 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i291 = icmp eq i8 %6, 0
  br i1 %guard.uninitialized.i291, label %init.check.i293, label %invoke.cont.i257, !prof !173

init.check.i293:                                  ; preds = %init.i254
  %7 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i292 = icmp eq i32 %7, 0
  br i1 %tobool.not.i292, label %invoke.cont.i257, label %init.i294

init.i294:                                        ; preds = %init.check.i293
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %8 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont.i257

invoke.cont.i257:                                 ; preds = %init.i294, %init.check.i293, %init.i254
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %9 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont.i

invoke.cont.i:                                    ; preds = %invoke.cont.i257, %init.check.i252, %init.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %10 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit

_ZNK10btSoftBody4Body5xformEv.exit:               ; preds = %_ZN10btSoftBody5Joint7PrepareEfi.exit, %init.check.i, %invoke.cont.i
  %m_collisionObject.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 0, i32 2
  %11 = load ptr, ptr %m_collisionObject.i, align 8, !tbaa !253
  %tobool3.not.i = icmp eq ptr %11, null
  %m_interpolationWorldTransform.i.i = getelementptr inbounds %class.btCollisionObject, ptr %11, i64 0, i32 2
  %12 = load ptr, ptr %m_bodies, align 8
  %tobool6.not.i = icmp eq ptr %12, null
  %m_framexform.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %12, i64 0, i32 3
  %spec.select.i = select i1 %tobool6.not.i, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i
  %retval.0.i = select i1 %tobool3.not.i, ptr %spec.select.i, ptr %m_interpolationWorldTransform.i.i
  %m_refs = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2
  %13 = load float, ptr %m_refs, align 8, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds [4 x float], ptr %retval.0.i, i64 0, i64 1
  %arrayidx7.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 0, i32 0, i64 1
  %14 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %arrayidx10.i.i.i80 = getelementptr inbounds [4 x float], ptr %retval.0.i, i64 0, i64 2
  %arrayidx12.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 0, i32 0, i64 2
  %15 = load float, ptr %arrayidx12.i.i.i, align 8, !tbaa !137
  %m_origin.i.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i, i64 0, i32 1
  %arrayidx.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1
  %arrayidx5.i20.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1, i32 0, i64 1
  %arrayidx10.i23.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1, i32 0, i64 2
  %16 = load float, ptr %retval.0.i, align 4, !tbaa !137
  %17 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %18 = load float, ptr %arrayidx10.i.i.i80, align 4, !tbaa !137
  %19 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %20 = load float, ptr %arrayidx5.i20.i.i, align 4, !tbaa !137
  %21 = insertelement <2 x float> poison, float %14, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> zeroinitializer
  %23 = insertelement <2 x float> poison, float %17, i64 0
  %24 = insertelement <2 x float> %23, float %20, i64 1
  %25 = fmul <2 x float> %22, %24
  %26 = insertelement <2 x float> poison, float %16, i64 0
  %27 = insertelement <2 x float> %26, float %19, i64 1
  %28 = insertelement <2 x float> poison, float %13, i64 0
  %29 = shufflevector <2 x float> %28, <2 x float> poison, <2 x i32> zeroinitializer
  %30 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %27, <2 x float> %29, <2 x float> %25)
  %31 = load float, ptr %arrayidx10.i23.i.i, align 4, !tbaa !137
  %32 = insertelement <2 x float> poison, float %18, i64 0
  %33 = insertelement <2 x float> %32, float %31, i64 1
  %34 = insertelement <2 x float> poison, float %15, i64 0
  %35 = shufflevector <2 x float> %34, <2 x float> poison, <2 x i32> zeroinitializer
  %36 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %33, <2 x float> %35, <2 x float> %30)
  %37 = load <2 x float>, ptr %m_origin.i.i, align 4, !tbaa !137
  %38 = fadd <2 x float> %36, %37
  %arrayidx.i26.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2
  %39 = load float, ptr %arrayidx.i26.i.i, align 4, !tbaa !137
  %arrayidx5.i27.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2, i32 0, i64 1
  %40 = load float, ptr %arrayidx5.i27.i.i, align 4, !tbaa !137
  %mul8.i29.i.i = fmul float %14, %40
  %41 = tail call float @llvm.fmuladd.f32(float %39, float %13, float %mul8.i29.i.i)
  %arrayidx10.i30.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2, i32 0, i64 2
  %42 = load float, ptr %arrayidx10.i30.i.i, align 4, !tbaa !137
  %43 = tail call float @llvm.fmuladd.f32(float %42, float %15, float %41)
  %arrayidx.i32.i.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i, i64 0, i32 1, i32 0, i64 2
  %44 = load float, ptr %arrayidx.i32.i.i, align 4, !tbaa !137
  %add17.i.i = fadd float %44, %43
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add17.i.i, i64 0
  %m_rpos = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1
  store <2 x float> %38, ptr %m_rpos, align 8, !tbaa.struct !163
  %ref.tmp.sroa.4.0.arrayidx4.sroa_idx = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 0, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i, ptr %ref.tmp.sroa.4.0.arrayidx4.sroa_idx, align 8, !tbaa.struct !165
  %arrayidx7 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1
  %45 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i81 = icmp eq i8 %45, 0
  br i1 %guard.uninitialized.i81, label %init.check.i83, label %_ZNK10btSoftBody4Body5xformEv.exit98, !prof !173

init.check.i83:                                   ; preds = %_ZNK10btSoftBody4Body5xformEv.exit
  %46 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i82 = icmp eq i32 %46, 0
  br i1 %tobool.not.i82, label %_ZNK10btSoftBody4Body5xformEv.exit98, label %init.i85

init.i85:                                         ; preds = %init.check.i83
  %47 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i259 = icmp eq i8 %47, 0
  br i1 %guard.uninitialized.i259, label %init.check.i261, label %invoke.cont.i89, !prof !173

init.check.i261:                                  ; preds = %init.i85
  %48 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i260 = icmp eq i32 %48, 0
  br i1 %tobool.not.i260, label %invoke.cont.i89, label %init.i262

init.i262:                                        ; preds = %init.check.i261
  %49 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i295 = icmp eq i8 %49, 0
  br i1 %guard.uninitialized.i295, label %init.check.i297, label %invoke.cont.i265, !prof !173

init.check.i297:                                  ; preds = %init.i262
  %50 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i296 = icmp eq i32 %50, 0
  br i1 %tobool.not.i296, label %invoke.cont.i265, label %init.i298

init.i298:                                        ; preds = %init.check.i297
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %51 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont.i265

invoke.cont.i265:                                 ; preds = %init.i298, %init.check.i297, %init.i262
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %52 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont.i89

invoke.cont.i89:                                  ; preds = %invoke.cont.i265, %init.check.i261, %init.i85
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %53 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit98

_ZNK10btSoftBody4Body5xformEv.exit98:             ; preds = %_ZNK10btSoftBody4Body5xformEv.exit, %init.check.i83, %invoke.cont.i89
  %m_collisionObject.i90 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1, i32 2
  %54 = load ptr, ptr %m_collisionObject.i90, align 8, !tbaa !253
  %tobool3.not.i91 = icmp eq ptr %54, null
  %m_interpolationWorldTransform.i.i92 = getelementptr inbounds %class.btCollisionObject, ptr %54, i64 0, i32 2
  %55 = load ptr, ptr %arrayidx7, align 8
  %tobool6.not.i93 = icmp eq ptr %55, null
  %m_framexform.i94 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %55, i64 0, i32 3
  %spec.select.i95 = select i1 %tobool6.not.i93, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i94
  %retval.0.i96 = select i1 %tobool3.not.i91, ptr %spec.select.i95, ptr %m_interpolationWorldTransform.i.i92
  %arrayidx10 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 1
  %56 = load float, ptr %arrayidx10, align 8, !tbaa !137
  %arrayidx5.i.i.i99 = getelementptr inbounds [4 x float], ptr %retval.0.i96, i64 0, i64 1
  %arrayidx7.i.i.i100 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 1, i32 0, i64 1
  %57 = load float, ptr %arrayidx7.i.i.i100, align 4, !tbaa !137
  %arrayidx10.i.i.i102 = getelementptr inbounds [4 x float], ptr %retval.0.i96, i64 0, i64 2
  %arrayidx12.i.i.i103 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 1, i32 0, i64 2
  %58 = load float, ptr %arrayidx12.i.i.i103, align 8, !tbaa !137
  %m_origin.i.i104 = getelementptr inbounds %class.btTransform, ptr %retval.0.i96, i64 0, i32 1
  %arrayidx.i.i.i106 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i96, i64 0, i64 1
  %arrayidx5.i20.i.i107 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i96, i64 0, i64 1, i32 0, i64 1
  %arrayidx10.i23.i.i109 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i96, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i26.i.i112 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i96, i64 0, i64 2
  %59 = load float, ptr %arrayidx.i26.i.i112, align 4, !tbaa !137
  %arrayidx5.i27.i.i113 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i96, i64 0, i64 2, i32 0, i64 1
  %60 = load float, ptr %arrayidx5.i27.i.i113, align 4, !tbaa !137
  %mul8.i29.i.i114 = fmul float %57, %60
  %61 = tail call float @llvm.fmuladd.f32(float %59, float %56, float %mul8.i29.i.i114)
  %arrayidx10.i30.i.i115 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i96, i64 0, i64 2, i32 0, i64 2
  %62 = load float, ptr %arrayidx10.i30.i.i115, align 4, !tbaa !137
  %63 = tail call float @llvm.fmuladd.f32(float %62, float %58, float %61)
  %arrayidx.i32.i.i116 = getelementptr inbounds %class.btTransform, ptr %retval.0.i96, i64 0, i32 1, i32 0, i64 2
  %64 = load float, ptr %arrayidx.i32.i.i116, align 4, !tbaa !137
  %add17.i.i117 = fadd float %64, %63
  %retval.sroa.3.12.vec.insert.i.i120 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add17.i.i117, i64 0
  %arrayidx14 = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 1
  %ref.tmp5.sroa.4.0.arrayidx14.sroa_idx = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 1, i32 0, i64 2
  %arrayidx5.i = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 0, i32 0, i64 1
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 1, i32 0, i64 1
  %65 = load float, ptr %retval.0.i96, align 4, !tbaa !137
  %66 = load float, ptr %arrayidx5.i.i.i99, align 4, !tbaa !137
  %67 = load float, ptr %arrayidx10.i.i.i102, align 4, !tbaa !137
  %68 = load float, ptr %arrayidx.i.i.i106, align 4, !tbaa !137
  %69 = load float, ptr %arrayidx5.i20.i.i107, align 4, !tbaa !137
  %70 = insertelement <2 x float> poison, float %57, i64 0
  %71 = shufflevector <2 x float> %70, <2 x float> poison, <2 x i32> zeroinitializer
  %72 = insertelement <2 x float> poison, float %66, i64 0
  %73 = insertelement <2 x float> %72, float %69, i64 1
  %74 = fmul <2 x float> %71, %73
  %75 = insertelement <2 x float> poison, float %65, i64 0
  %76 = insertelement <2 x float> %75, float %68, i64 1
  %77 = insertelement <2 x float> poison, float %56, i64 0
  %78 = shufflevector <2 x float> %77, <2 x float> poison, <2 x i32> zeroinitializer
  %79 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %76, <2 x float> %78, <2 x float> %74)
  %80 = load float, ptr %arrayidx10.i23.i.i109, align 4, !tbaa !137
  %81 = insertelement <2 x float> poison, float %67, i64 0
  %82 = insertelement <2 x float> %81, float %80, i64 1
  %83 = insertelement <2 x float> poison, float %58, i64 0
  %84 = shufflevector <2 x float> %83, <2 x float> poison, <2 x i32> zeroinitializer
  %85 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %82, <2 x float> %84, <2 x float> %79)
  %86 = load <2 x float>, ptr %m_origin.i.i104, align 4, !tbaa !137
  %87 = fadd <2 x float> %85, %86
  store <2 x float> %87, ptr %arrayidx14, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i120, ptr %ref.tmp5.sroa.4.0.arrayidx14.sroa_idx, align 8, !tbaa.struct !165
  %88 = load <2 x float>, ptr %m_rpos, align 8, !tbaa !137
  %89 = fsub <2 x float> %88, %87
  %90 = load float, ptr %ref.tmp.sroa.4.0.arrayidx4.sroa_idx, align 8, !tbaa !137
  %sub14.i = fsub float %90, %add17.i.i117
  %91 = fmul <2 x float> %89, %89
  %mul8.i.i.i124 = extractelement <2 x float> %91, i64 1
  %92 = extractelement <2 x float> %89, i64 0
  %93 = tail call float @llvm.fmuladd.f32(float %92, float %92, float %mul8.i.i.i124)
  %94 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub14.i, float %93)
  %cmp.i = fcmp ogt float %94, 1.600000e+01
  br i1 %cmp.i, label %if.then.i, label %if.else.i

if.then.i:                                        ; preds = %_ZNK10btSoftBody4Body5xformEv.exit98
  %95 = fmul <2 x float> %89, <float 4.000000e+00, float 4.000000e+00>
  %mul8.i.i = fmul float %sub14.i, 4.000000e+00
  %sqrt.i = tail call float @llvm.sqrt.f32(float %94)
  %div.i.i = fdiv float 1.000000e+00, %sqrt.i
  %96 = insertelement <2 x float> poison, float %div.i.i, i64 0
  %97 = shufflevector <2 x float> %96, <2 x float> poison, <2 x i32> zeroinitializer
  %98 = fmul <2 x float> %95, %97
  %mul8.i.i10.i = fmul float %mul8.i.i, %div.i.i
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i10.i, i64 0
  br label %_ZL5ClampRK9btVector3f.exit

if.else.i:                                        ; preds = %_ZNK10btSoftBody4Body5xformEv.exit98
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i, i64 0
  br label %_ZL5ClampRK9btVector3f.exit

_ZL5ClampRK9btVector3f.exit:                      ; preds = %if.then.i, %if.else.i
  %retval.sroa.0.0.i = phi <2 x float> [ %98, %if.then.i ], [ %89, %if.else.i ]
  %retval.sroa.3.0.i = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i.i.i, %if.then.i ], [ %retval.sroa.3.12.vec.insert.i, %if.else.i ]
  %m_erp = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 4
  %99 = load float, ptr %m_erp, align 4, !tbaa !137
  %ref.tmp17.sroa.5.8.vec.extract = extractelement <2 x float> %retval.sroa.3.0.i, i64 0
  %mul8.i = fmul float %99, %ref.tmp17.sroa.5.8.vec.extract
  %div.i = fdiv float 1.000000e+00, %dt
  %100 = insertelement <2 x float> poison, float %99, i64 0
  %101 = shufflevector <2 x float> %100, <2 x float> poison, <2 x i32> zeroinitializer
  %102 = fmul <2 x float> %retval.sroa.0.0.i, %101
  %103 = insertelement <2 x float> poison, float %div.i, i64 0
  %104 = shufflevector <2 x float> %103, <2 x float> poison, <2 x i32> zeroinitializer
  %105 = fmul <2 x float> %104, %102
  %mul8.i.i136 = fmul float %div.i, %mul8.i
  %retval.sroa.3.12.vec.insert.i.i139 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i136, i64 0
  %m_drift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6
  store <2 x float> %105, ptr %m_drift, align 4, !tbaa.struct !163
  %ref.tmp15.sroa.4.0.m_drift.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i139, ptr %ref.tmp15.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa.struct !165
  %106 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i142 = icmp eq i8 %106, 0
  br i1 %guard.uninitialized.i142, label %init.check.i144, label %_ZNK10btSoftBody4Body5xformEv.exit159, !prof !173

init.check.i144:                                  ; preds = %_ZL5ClampRK9btVector3f.exit
  %107 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i143 = icmp eq i32 %107, 0
  br i1 %tobool.not.i143, label %_ZNK10btSoftBody4Body5xformEv.exit159, label %init.i146

init.i146:                                        ; preds = %init.check.i144
  %108 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i269 = icmp eq i8 %108, 0
  br i1 %guard.uninitialized.i269, label %init.check.i271, label %invoke.cont.i150, !prof !173

init.check.i271:                                  ; preds = %init.i146
  %109 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i270 = icmp eq i32 %109, 0
  br i1 %tobool.not.i270, label %invoke.cont.i150, label %init.i273

init.i273:                                        ; preds = %init.check.i271
  %110 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i300 = icmp eq i8 %110, 0
  br i1 %guard.uninitialized.i300, label %init.check.i302, label %invoke.cont.i276, !prof !173

init.check.i302:                                  ; preds = %init.i273
  %111 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i301 = icmp eq i32 %111, 0
  br i1 %tobool.not.i301, label %invoke.cont.i276, label %init.i303

init.i303:                                        ; preds = %init.check.i302
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %112 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont.i276

invoke.cont.i276:                                 ; preds = %init.i303, %init.check.i302, %init.i273
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %113 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont.i150

invoke.cont.i150:                                 ; preds = %invoke.cont.i276, %init.check.i271, %init.i146
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %114 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit159

_ZNK10btSoftBody4Body5xformEv.exit159:            ; preds = %_ZL5ClampRK9btVector3f.exit, %init.check.i144, %invoke.cont.i150
  %115 = load ptr, ptr %m_collisionObject.i, align 8, !tbaa !253
  %tobool3.not.i152 = icmp eq ptr %115, null
  %m_interpolationWorldTransform.i.i153 = getelementptr inbounds %class.btCollisionObject, ptr %115, i64 0, i32 2
  %116 = load ptr, ptr %m_bodies, align 8
  %tobool6.not.i154 = icmp eq ptr %116, null
  %m_framexform.i155 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %116, i64 0, i32 3
  %spec.select.i156 = select i1 %tobool6.not.i154, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i155
  %retval.0.i157 = select i1 %tobool3.not.i152, ptr %spec.select.i156, ptr %m_interpolationWorldTransform.i.i153
  %m_origin.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i157, i64 0, i32 1
  %117 = load float, ptr %m_origin.i, align 4, !tbaa !137
  %118 = load float, ptr %m_rpos, align 8, !tbaa !137
  %sub.i160 = fsub float %118, %117
  store float %sub.i160, ptr %m_rpos, align 8, !tbaa !137
  %arrayidx5.i161 = getelementptr inbounds %class.btTransform, ptr %retval.0.i157, i64 0, i32 1, i32 0, i64 1
  %119 = load float, ptr %arrayidx5.i161, align 4, !tbaa !137
  %120 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %sub8.i163 = fsub float %120, %119
  store float %sub8.i163, ptr %arrayidx5.i, align 4, !tbaa !137
  %arrayidx10.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i157, i64 0, i32 1, i32 0, i64 2
  %121 = load float, ptr %arrayidx10.i, align 4, !tbaa !137
  %122 = load float, ptr %ref.tmp.sroa.4.0.arrayidx4.sroa_idx, align 8, !tbaa !137
  %sub13.i = fsub float %122, %121
  store float %sub13.i, ptr %ref.tmp.sroa.4.0.arrayidx4.sroa_idx, align 8, !tbaa !137
  %123 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i164 = icmp eq i8 %123, 0
  br i1 %guard.uninitialized.i164, label %init.check.i166, label %_ZNK10btSoftBody4Body5xformEv.exit181, !prof !173

init.check.i166:                                  ; preds = %_ZNK10btSoftBody4Body5xformEv.exit159
  %124 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i165 = icmp eq i32 %124, 0
  br i1 %tobool.not.i165, label %_ZNK10btSoftBody4Body5xformEv.exit181, label %init.i168

init.i168:                                        ; preds = %init.check.i166
  %125 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i280 = icmp eq i8 %125, 0
  br i1 %guard.uninitialized.i280, label %init.check.i282, label %invoke.cont.i172, !prof !173

init.check.i282:                                  ; preds = %init.i168
  %126 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i281 = icmp eq i32 %126, 0
  br i1 %tobool.not.i281, label %invoke.cont.i172, label %init.i284

init.i284:                                        ; preds = %init.check.i282
  %127 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i305 = icmp eq i8 %127, 0
  br i1 %guard.uninitialized.i305, label %init.check.i307, label %invoke.cont.i287, !prof !173

init.check.i307:                                  ; preds = %init.i284
  %128 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i306 = icmp eq i32 %128, 0
  br i1 %tobool.not.i306, label %invoke.cont.i287, label %init.i308

init.i308:                                        ; preds = %init.check.i307
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %129 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont.i287

invoke.cont.i287:                                 ; preds = %init.i308, %init.check.i307, %init.i284
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %130 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont.i172

invoke.cont.i172:                                 ; preds = %invoke.cont.i287, %init.check.i282, %init.i168
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %131 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit181

_ZNK10btSoftBody4Body5xformEv.exit181:            ; preds = %_ZNK10btSoftBody4Body5xformEv.exit159, %init.check.i166, %invoke.cont.i172
  %132 = load ptr, ptr %m_collisionObject.i90, align 8, !tbaa !253
  %tobool3.not.i174 = icmp eq ptr %132, null
  %m_interpolationWorldTransform.i.i175 = getelementptr inbounds %class.btCollisionObject, ptr %132, i64 0, i32 2
  %133 = load ptr, ptr %arrayidx7, align 8
  %tobool6.not.i176 = icmp eq ptr %133, null
  %m_framexform.i177 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %133, i64 0, i32 3
  %spec.select.i178 = select i1 %tobool6.not.i176, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i177
  %retval.0.i179 = select i1 %tobool3.not.i174, ptr %spec.select.i178, ptr %m_interpolationWorldTransform.i.i175
  %m_origin.i182 = getelementptr inbounds %class.btTransform, ptr %retval.0.i179, i64 0, i32 1
  %134 = load float, ptr %m_origin.i182, align 4, !tbaa !137
  %135 = load float, ptr %arrayidx14, align 8, !tbaa !137
  %sub.i183 = fsub float %135, %134
  store float %sub.i183, ptr %arrayidx14, align 8, !tbaa !137
  %arrayidx5.i184 = getelementptr inbounds %class.btTransform, ptr %retval.0.i179, i64 0, i32 1, i32 0, i64 1
  %136 = load float, ptr %arrayidx5.i184, align 4, !tbaa !137
  %137 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %sub8.i186 = fsub float %137, %136
  store float %sub8.i186, ptr %arrayidx7.i, align 4, !tbaa !137
  %arrayidx10.i187 = getelementptr inbounds %class.btTransform, ptr %retval.0.i179, i64 0, i32 1, i32 0, i64 2
  %138 = load float, ptr %arrayidx10.i187, align 4, !tbaa !137
  %139 = load float, ptr %ref.tmp5.sroa.4.0.arrayidx14.sroa_idx, align 8, !tbaa !137
  %sub13.i189 = fsub float %139, %138
  store float %sub13.i189, ptr %ref.tmp5.sroa.4.0.arrayidx14.sroa_idx, align 8, !tbaa !137
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %ref.tmp45) #38
  %140 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool.not.i190 = icmp eq ptr %140, null
  br i1 %tobool.not.i190, label %if.end.i, label %if.then.i191

if.then.i191:                                     ; preds = %_ZNK10btSoftBody4Body5xformEv.exit181
  %m_inverseMass.i.i = getelementptr inbounds %class.btRigidBody, ptr %140, i64 0, i32 4
  %141 = load float, ptr %m_inverseMass.i.i, align 8, !tbaa !452
  br label %_ZNK10btSoftBody4Body7invMassEv.exit

if.end.i:                                         ; preds = %_ZNK10btSoftBody4Body5xformEv.exit181
  %142 = load ptr, ptr %m_bodies, align 8, !tbaa !272
  %tobool3.not.i192 = icmp eq ptr %142, null
  br i1 %tobool3.not.i192, label %_ZNK10btSoftBody4Body7invMassEv.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  %m_imass.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %142, i64 0, i32 5
  %143 = load float, ptr %m_imass.i, align 4, !tbaa !373
  br label %_ZNK10btSoftBody4Body7invMassEv.exit

_ZNK10btSoftBody4Body7invMassEv.exit:             ; preds = %if.then.i191, %if.end.i, %if.then4.i
  %retval.0.i193 = phi float [ %141, %if.then.i191 ], [ %143, %if.then4.i ], [ 0.000000e+00, %if.end.i ]
  %144 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi acquire, align 8
  %guard.uninitialized.i194 = icmp eq i8 %144, 0
  br i1 %guard.uninitialized.i194, label %init.check.i196, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit, !prof !173

init.check.i196:                                  ; preds = %_ZNK10btSoftBody4Body7invMassEv.exit
  %145 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  %tobool.not.i195 = icmp eq i32 %145, 0
  br i1 %tobool.not.i195, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit, label %init.i197

init.i197:                                        ; preds = %init.check.i196
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, i8 0, i64 48, i1 false)
  %146 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  br label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit

_ZNK10btSoftBody4Body15invWorldInertiaEv.exit:    ; preds = %_ZNK10btSoftBody4Body7invMassEv.exit, %init.check.i196, %init.i197
  %147 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool10.not.i = icmp eq ptr %147, null
  %m_invInertiaTensorWorld.i.i = getelementptr inbounds %class.btRigidBody, ptr %147, i64 0, i32 1
  %148 = load ptr, ptr %m_bodies, align 8
  %tobool12.not.i = icmp eq ptr %148, null
  %m_invwi.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %148, i64 0, i32 7
  %spec.select.i199 = select i1 %tobool12.not.i, ptr @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, ptr %m_invwi.i
  %retval.0.i200 = select i1 %tobool10.not.i, ptr %spec.select.i199, ptr %m_invInertiaTensorWorld.i.i
  %149 = load ptr, ptr %m_rigid.i4.i, align 8, !tbaa !511
  %tobool.not.i202 = icmp eq ptr %149, null
  br i1 %tobool.not.i202, label %if.end.i206, label %if.then.i204

if.then.i204:                                     ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit
  %m_inverseMass.i.i203 = getelementptr inbounds %class.btRigidBody, ptr %149, i64 0, i32 4
  %150 = load float, ptr %m_inverseMass.i.i203, align 8, !tbaa !452
  br label %_ZNK10btSoftBody4Body7invMassEv.exit210

if.end.i206:                                      ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit
  %151 = load ptr, ptr %arrayidx7, align 8, !tbaa !272
  %tobool3.not.i205 = icmp eq ptr %151, null
  br i1 %tobool3.not.i205, label %_ZNK10btSoftBody4Body7invMassEv.exit210, label %if.then4.i208

if.then4.i208:                                    ; preds = %if.end.i206
  %m_imass.i207 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %151, i64 0, i32 5
  %152 = load float, ptr %m_imass.i207, align 4, !tbaa !373
  br label %_ZNK10btSoftBody4Body7invMassEv.exit210

_ZNK10btSoftBody4Body7invMassEv.exit210:          ; preds = %if.then.i204, %if.end.i206, %if.then4.i208
  %retval.0.i209 = phi float [ %150, %if.then.i204 ], [ %152, %if.then4.i208 ], [ 0.000000e+00, %if.end.i206 ]
  %153 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi acquire, align 8
  %guard.uninitialized.i211 = icmp eq i8 %153, 0
  br i1 %guard.uninitialized.i211, label %init.check.i213, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit222, !prof !173

init.check.i213:                                  ; preds = %_ZNK10btSoftBody4Body7invMassEv.exit210
  %154 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  %tobool.not.i212 = icmp eq i32 %154, 0
  br i1 %tobool.not.i212, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit222, label %init.i214

init.i214:                                        ; preds = %init.check.i213
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, i8 0, i64 48, i1 false)
  %155 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  br label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit222

_ZNK10btSoftBody4Body15invWorldInertiaEv.exit222: ; preds = %_ZNK10btSoftBody4Body7invMassEv.exit210, %init.check.i213, %init.i214
  %156 = load ptr, ptr %m_rigid.i4.i, align 8, !tbaa !511
  %tobool10.not.i216 = icmp eq ptr %156, null
  %m_invInertiaTensorWorld.i.i217 = getelementptr inbounds %class.btRigidBody, ptr %156, i64 0, i32 1
  %157 = load ptr, ptr %arrayidx7, align 8
  %tobool12.not.i218 = icmp eq ptr %157, null
  %m_invwi.i219 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %157, i64 0, i32 7
  %spec.select.i220 = select i1 %tobool12.not.i218, ptr @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, ptr %m_invwi.i219
  %retval.0.i221 = select i1 %tobool10.not.i216, ptr %spec.select.i220, ptr %m_invInertiaTensorWorld.i.i217
  call fastcc void @_ZL13ImpulseMatrixfRK11btMatrix3x3RK9btVector3fS1_S4_(ptr noalias nonnull align 4 %ref.tmp45, float noundef %retval.0.i193, ptr noundef nonnull align 4 dereferenceable(48) %retval.0.i200, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos, float noundef %retval.0.i209, ptr noundef nonnull align 4 dereferenceable(48) %retval.0.i221, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx14)
  %m_massmatrix = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %m_massmatrix, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp45, i64 16, i1 false), !tbaa.struct !163
  %arrayidx5.i223 = getelementptr inbounds [3 x %class.btVector3], ptr %ref.tmp45, i64 0, i64 1
  %arrayidx7.i224 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx7.i224, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i223, i64 16, i1 false), !tbaa.struct !163
  %arrayidx9.i = getelementptr inbounds [3 x %class.btVector3], ptr %ref.tmp45, i64 0, i64 2
  %arrayidx11.i225 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx11.i225, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx9.i, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %ref.tmp45) #38
  %m_split = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 5
  %158 = load float, ptr %m_split, align 8, !tbaa !137
  %cmp = fcmp ogt float %158, 0.000000e+00
  %159 = load float, ptr %m_drift, align 4, !tbaa !137
  br i1 %cmp, label %if.then, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit222.if.end_crit_edge

_ZNK10btSoftBody4Body15invWorldInertiaEv.exit222.if.end_crit_edge: ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit222
  %arrayidx3.i.i248.phi.trans.insert = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 1
  %.pre314 = load float, ptr %arrayidx3.i.i248.phi.trans.insert, align 8, !tbaa !137
  %.pre315 = load float, ptr %ref.tmp15.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa !137
  %160 = insertelement <2 x float> poison, float %159, i64 0
  %161 = insertelement <2 x float> %160, float %.pre314, i64 1
  br label %if.end

if.then:                                          ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit222
  %mul.i226 = fmul float %158, %159
  %arrayidx3.i227 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 1
  %162 = load float, ptr %arrayidx3.i227, align 8, !tbaa !137
  %mul4.i228 = fmul float %158, %162
  %163 = load float, ptr %ref.tmp15.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa !137
  %mul8.i230 = fmul float %158, %163
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 2
  %arrayidx5.i12.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 2
  %164 = load <4 x float>, ptr %m_massmatrix, align 4
  %165 = shufflevector <4 x float> %164, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %166 = load <4 x float>, ptr %arrayidx5.i.i, align 8
  %167 = shufflevector <4 x float> %166, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %168 = load <4 x float>, ptr %arrayidx10.i.i, align 4
  %169 = shufflevector <4 x float> %168, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %170 = load float, ptr %arrayidx7.i224, align 4, !tbaa !137
  %171 = load float, ptr %arrayidx5.i12.i, align 8, !tbaa !137
  %172 = insertelement <2 x float> poison, float %mul4.i228, i64 0
  %173 = shufflevector <2 x float> %172, <2 x float> poison, <2 x i32> zeroinitializer
  %174 = insertelement <2 x float> %167, float %171, i64 1
  %175 = fmul <2 x float> %173, %174
  %176 = insertelement <2 x float> %165, float %170, i64 1
  %177 = insertelement <2 x float> poison, float %mul.i226, i64 0
  %178 = shufflevector <2 x float> %177, <2 x float> poison, <2 x i32> zeroinitializer
  %179 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %176, <2 x float> %178, <2 x float> %175)
  %180 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %181 = insertelement <2 x float> %169, float %180, i64 1
  %182 = insertelement <2 x float> poison, float %mul8.i230, i64 0
  %183 = shufflevector <2 x float> %182, <2 x float> poison, <2 x i32> zeroinitializer
  %184 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %181, <2 x float> %183, <2 x float> %179)
  %185 = load float, ptr %arrayidx11.i225, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 1
  %186 = load float, ptr %arrayidx5.i18.i, align 8, !tbaa !137
  %mul8.i20.i = fmul float %mul4.i228, %186
  %187 = tail call float @llvm.fmuladd.f32(float %185, float %mul.i226, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 2
  %188 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %189 = tail call float @llvm.fmuladd.f32(float %188, float %mul8.i230, float %187)
  %retval.sroa.3.12.vec.insert.i240 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %189, i64 0
  %m_sdrift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7
  store <2 x float> %184, ptr %m_sdrift, align 4, !tbaa.struct !163
  %ref.tmp63.sroa.4.0.m_sdrift.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i240, ptr %ref.tmp63.sroa.4.0.m_sdrift.sroa_idx, align 4, !tbaa.struct !165
  %sub = fsub float 1.000000e+00, %158
  %190 = insertelement <2 x float> poison, float %sub, i64 0
  %191 = shufflevector <2 x float> %190, <2 x float> poison, <2 x i32> zeroinitializer
  %192 = insertelement <2 x float> poison, float %159, i64 0
  %193 = insertelement <2 x float> %192, float %162, i64 1
  %194 = fmul <2 x float> %191, %193
  %mul7.i = fmul float %sub, %163
  br label %if.end

if.end:                                           ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit222.if.end_crit_edge, %if.then
  %195 = phi float [ %.pre315, %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit222.if.end_crit_edge ], [ %mul7.i, %if.then ]
  %196 = phi <2 x float> [ %161, %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit222.if.end_crit_edge ], [ %194, %if.then ]
  %conv = sitofp i32 %iterations to float
  %div.i246 = fdiv float 1.000000e+00, %conv
  %197 = insertelement <2 x float> poison, float %div.i246, i64 0
  %198 = shufflevector <2 x float> %197, <2 x float> poison, <2 x i32> zeroinitializer
  %199 = fmul <2 x float> %198, %196
  store <2 x float> %199, ptr %m_drift, align 4, !tbaa !137
  %mul7.i.i = fmul float %div.i246, %195
  store float %mul7.i.i, ptr %ref.tmp15.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa !137
  ret void
}

; Function Attrs: inlinehint mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define internal fastcc void @_ZL13ImpulseMatrixfRK11btMatrix3x3RK9btVector3fS1_S4_(ptr noalias nocapture writeonly align 4 %agg.result, float noundef %ima, ptr nocapture noundef nonnull readonly align 4 dereferenceable(48) %iia, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %ra, float noundef %imb, ptr nocapture noundef nonnull readonly align 4 dereferenceable(48) %iib, ptr nocapture noundef nonnull readonly align 4 dereferenceable(16) %rb) unnamed_addr #24 {
entry:
  %arrayidx.i.i.i = getelementptr inbounds [4 x float], ptr %ra, i64 0, i64 2
  %arrayidx.i27.i.i = getelementptr inbounds [4 x float], ptr %ra, i64 0, i64 1
  %arrayidx4.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iia, i64 0, i64 1
  %arrayidx9.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iia, i64 0, i64 2
  %arrayidx.i.i42.i.i = getelementptr inbounds [4 x float], ptr %iia, i64 0, i64 1
  %arrayidx.i14.i43.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iia, i64 0, i64 1, i32 0, i64 1
  %arrayidx.i16.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iia, i64 0, i64 2, i32 0, i64 1
  %arrayidx.i.i45.i.i = getelementptr inbounds [4 x float], ptr %iia, i64 0, i64 2
  %arrayidx.i14.i46.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iia, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i16.i49.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %iia, i64 0, i64 2, i32 0, i64 2
  %arrayidx.i.i.i3 = getelementptr inbounds [4 x float], ptr %rb, i64 0, i64 2
  %arrayidx.i27.i.i5 = getelementptr inbounds [4 x float], ptr %rb, i64 0, i64 1
  %arrayidx4.i.i.i8 = getelementptr inbounds [3 x %class.btVector3], ptr %iib, i64 0, i64 1
  %arrayidx9.i.i.i10 = getelementptr inbounds [3 x %class.btVector3], ptr %iib, i64 0, i64 2
  %arrayidx.i.i42.i.i11 = getelementptr inbounds [4 x float], ptr %iib, i64 0, i64 1
  %arrayidx.i14.i43.i.i12 = getelementptr inbounds [3 x %class.btVector3], ptr %iib, i64 0, i64 1, i32 0, i64 1
  %arrayidx.i16.i.i.i14 = getelementptr inbounds [3 x %class.btVector3], ptr %iib, i64 0, i64 2, i32 0, i64 1
  %arrayidx.i.i45.i.i15 = getelementptr inbounds [4 x float], ptr %iib, i64 0, i64 2
  %arrayidx.i14.i46.i.i16 = getelementptr inbounds [3 x %class.btVector3], ptr %iib, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i16.i49.i.i18 = getelementptr inbounds [3 x %class.btVector3], ptr %iib, i64 0, i64 2, i32 0, i64 2
  %0 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %ima, i64 0
  %1 = load float, ptr %arrayidx.i27.i.i, align 4, !tbaa !137, !noalias !512
  %2 = load float, ptr %arrayidx.i27.i.i5, align 4, !tbaa !137, !noalias !517
  %3 = insertelement <2 x float> poison, float %1, i64 0
  %4 = insertelement <2 x float> %3, float %2, i64 1
  %5 = fneg <2 x float> %4
  %6 = load <4 x float>, ptr %iia, align 4
  %7 = shufflevector <4 x float> %6, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %8 = load <4 x float>, ptr %arrayidx4.i.i.i, align 4
  %9 = shufflevector <4 x float> %8, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %10 = load <4 x float>, ptr %arrayidx9.i.i.i, align 4
  %11 = shufflevector <4 x float> %10, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %12 = load <4 x float>, ptr %arrayidx.i.i42.i.i, align 4
  %13 = shufflevector <4 x float> %12, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %14 = load <4 x float>, ptr %arrayidx.i14.i43.i.i, align 4
  %15 = shufflevector <4 x float> %14, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %16 = load float, ptr %arrayidx.i16.i.i.i, align 4, !tbaa !137, !noalias !522
  %17 = load float, ptr %iib, align 4, !tbaa !137, !noalias !525
  %18 = load float, ptr %arrayidx4.i.i.i8, align 4, !tbaa !137, !noalias !525
  %19 = load float, ptr %arrayidx9.i.i.i10, align 4, !tbaa !137, !noalias !525
  %20 = load float, ptr %arrayidx.i.i42.i.i11, align 4, !tbaa !137, !noalias !525
  %21 = load float, ptr %arrayidx.i14.i43.i.i12, align 4, !tbaa !137, !noalias !525
  %22 = load float, ptr %arrayidx.i16.i.i.i14, align 4, !tbaa !137, !noalias !525
  %23 = insertelement <2 x float> %9, float %18, i64 1
  %24 = insertelement <2 x float> %15, float %21, i64 1
  %25 = shufflevector <4 x float> %8, <4 x float> poison, <2 x i32> zeroinitializer
  %26 = shufflevector <4 x float> %6, <4 x float> poison, <2 x i32> zeroinitializer
  %27 = shufflevector <4 x float> %10, <4 x float> poison, <2 x i32> zeroinitializer
  %28 = shufflevector <4 x float> %14, <4 x float> poison, <2 x i32> zeroinitializer
  %29 = shufflevector <4 x float> %12, <4 x float> poison, <2 x i32> zeroinitializer
  %30 = insertelement <2 x float> poison, float %16, i64 0
  %31 = shufflevector <2 x float> %30, <2 x float> poison, <2 x i32> zeroinitializer
  %32 = insertelement <2 x float> poison, float %18, i64 0
  %33 = shufflevector <2 x float> %32, <2 x float> poison, <2 x i32> zeroinitializer
  %34 = insertelement <2 x float> poison, float %17, i64 0
  %35 = shufflevector <2 x float> %34, <2 x float> poison, <2 x i32> zeroinitializer
  %36 = insertelement <2 x float> poison, float %19, i64 0
  %37 = shufflevector <2 x float> %36, <2 x float> poison, <2 x i32> zeroinitializer
  %38 = insertelement <2 x float> poison, float %21, i64 0
  %39 = shufflevector <2 x float> %38, <2 x float> poison, <2 x i32> zeroinitializer
  %40 = insertelement <2 x float> poison, float %20, i64 0
  %41 = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> zeroinitializer
  %42 = insertelement <2 x float> poison, float %22, i64 0
  %43 = shufflevector <2 x float> %42, <2 x float> poison, <2 x i32> zeroinitializer
  %44 = insertelement <2 x float> %7, float %17, i64 1
  %45 = insertelement <2 x float> %11, float %19, i64 1
  %46 = insertelement <2 x float> %13, float %20, i64 1
  %47 = insertelement <2 x float> %30, float %22, i64 1
  %48 = insertelement <2 x float> poison, float %ima, i64 0
  %49 = insertelement <2 x float> %48, float %imb, i64 1
  %50 = load <4 x float>, ptr %ra, align 4
  %51 = shufflevector <4 x float> %50, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %52 = load float, ptr %rb, align 4, !tbaa !137, !noalias !517
  %53 = insertelement <2 x float> %51, float %52, i64 1
  %54 = fneg <2 x float> %53
  %55 = fmul <2 x float> %53, %23
  %56 = fmul <2 x float> %53, %24
  %57 = shufflevector <2 x float> %54, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %58 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137, !noalias !512
  %59 = load <4 x float>, ptr %arrayidx.i.i45.i.i, align 4
  %60 = shufflevector <4 x float> %59, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %61 = load <4 x float>, ptr %arrayidx.i14.i46.i.i, align 4
  %62 = shufflevector <4 x float> %61, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %63 = load float, ptr %arrayidx.i16.i49.i.i, align 4, !tbaa !137, !noalias !522
  %64 = load float, ptr %arrayidx.i.i.i3, align 4, !tbaa !137, !noalias !517
  %65 = insertelement <2 x float> poison, float %58, i64 0
  %66 = insertelement <2 x float> %65, float %64, i64 1
  %67 = fneg <2 x float> %66
  %68 = load float, ptr %arrayidx.i.i45.i.i15, align 4, !tbaa !137, !noalias !525
  %69 = load float, ptr %arrayidx.i14.i46.i.i16, align 4, !tbaa !137, !noalias !525
  %70 = insertelement <2 x float> %62, float %69, i64 1
  %71 = fmul <2 x float> %70, %67
  %72 = insertelement <2 x float> %60, float %68, i64 1
  %73 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %72, <2 x float> zeroinitializer, <2 x float> %71)
  %74 = load float, ptr %arrayidx.i16.i49.i.i18, align 4, !tbaa !137, !noalias !525
  %75 = insertelement <2 x float> poison, float %63, i64 0
  %76 = insertelement <2 x float> %75, float %74, i64 1
  %77 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %76, <2 x float> %4, <2 x float> %73)
  %78 = fmul <2 x float> %70, zeroinitializer
  %79 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %72, <2 x float> %66, <2 x float> %78)
  %80 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %76, <2 x float> %54, <2 x float> %79)
  %81 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %44, <2 x float> %5, <2 x float> %55)
  %82 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %45, <2 x float> zeroinitializer, <2 x float> %81)
  %83 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %46, <2 x float> %5, <2 x float> %56)
  %84 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %47, <2 x float> zeroinitializer, <2 x float> %83)
  %85 = fmul <2 x float> %53, %70
  %86 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %72, <2 x float> %5, <2 x float> %85)
  %87 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %76, <2 x float> zeroinitializer, <2 x float> %86)
  %88 = fmul <2 x float> %66, %84
  %89 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %82, <2 x float> zeroinitializer, <2 x float> %88)
  %90 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %5, <2 x float> %87, <2 x float> %89)
  %91 = fsub <2 x float> zeroinitializer, %90
  %shift = shufflevector <2 x float> %91, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %92 = fadd <2 x float> %91, %shift
  %add.i.2.i = extractelement <2 x float> %92, i64 0
  %93 = shufflevector <2 x float> <float 0.000000e+00, float poison>, <2 x float> %67, <2 x i32> <i32 0, i32 2>
  %94 = fmul <2 x float> %25, %93
  %95 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %58, i64 0
  %96 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %26, <2 x float> %95, <2 x float> %94)
  %97 = insertelement <2 x float> %54, float %1, i64 1
  %98 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %27, <2 x float> %97, <2 x float> %96)
  %99 = fmul <2 x float> %28, %93
  %100 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %29, <2 x float> %95, <2 x float> %99)
  %101 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %31, <2 x float> %97, <2 x float> %100)
  %102 = shufflevector <2 x float> %54, <2 x float> <float 0.000000e+00, float poison>, <2 x i32> <i32 2, i32 0>
  %103 = fmul <2 x float> %101, %102
  %104 = shufflevector <2 x float> %93, <2 x float> %97, <2 x i32> <i32 1, i32 3>
  %105 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %104, <2 x float> %98, <2 x float> %103)
  %106 = shufflevector <2 x float> %51, <2 x float> %77, <2 x i32> <i32 0, i32 2>
  %107 = insertelement <2 x float> %80, float 0.000000e+00, i64 1
  %108 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %106, <2 x float> %107, <2 x float> %105)
  %109 = insertelement <2 x float> %97, float 0.000000e+00, i64 1
  %110 = fmul <2 x float> %101, %109
  %111 = shufflevector <2 x float> %104, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %112 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %111, <2 x float> %98, <2 x float> %110)
  %113 = shufflevector <2 x float> %80, <2 x float> %106, <2 x i32> <i32 0, i32 2>
  %114 = insertelement <2 x float> %106, float 0.000000e+00, i64 0
  %115 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %113, <2 x float> %114, <2 x float> %112)
  %116 = shufflevector <2 x float> %84, <2 x float> poison, <2 x i32> zeroinitializer
  %117 = fmul <2 x float> %116, %109
  %118 = shufflevector <2 x float> %82, <2 x float> poison, <2 x i32> zeroinitializer
  %119 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %111, <2 x float> %118, <2 x float> %117)
  %120 = shufflevector <4 x float> %50, <4 x float> poison, <2 x i32> <i32 poison, i32 0>
  %121 = shufflevector <2 x float> %87, <2 x float> %120, <2 x i32> <i32 0, i32 3>
  %122 = shufflevector <2 x float> %121, <2 x float> <float 0.000000e+00, float poison>, <2 x i32> <i32 2, i32 0>
  %123 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %121, <2 x float> %122, <2 x float> %119)
  %124 = fsub <2 x float> %0, %108
  %125 = fsub <2 x float> zeroinitializer, %115
  %126 = fsub <2 x float> %0, %123
  %127 = insertelement <2 x float> %67, float 0.000000e+00, i64 0
  %128 = fmul <2 x float> %33, %127
  %129 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %64, i64 0
  %130 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %35, <2 x float> %129, <2 x float> %128)
  %131 = insertelement <2 x float> %57, float %2, i64 1
  %132 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %37, <2 x float> %131, <2 x float> %130)
  %133 = fmul <2 x float> %39, %127
  %134 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %41, <2 x float> %129, <2 x float> %133)
  %135 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %43, <2 x float> %131, <2 x float> %134)
  %136 = shufflevector <2 x float> %101, <2 x float> %135, <2 x i32> <i32 1, i32 3>
  %137 = fmul <2 x float> %66, %136
  %138 = shufflevector <2 x float> %98, <2 x float> %132, <2 x i32> <i32 1, i32 3>
  %139 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %138, <2 x float> zeroinitializer, <2 x float> %137)
  %140 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %5, <2 x float> %77, <2 x float> %139)
  %141 = shufflevector <2 x float> %101, <2 x float> %135, <2 x i32> <i32 0, i32 2>
  %142 = fmul <2 x float> %66, %141
  %143 = shufflevector <2 x float> %98, <2 x float> %132, <2 x i32> <i32 0, i32 2>
  %144 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %143, <2 x float> zeroinitializer, <2 x float> %142)
  %145 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %5, <2 x float> %80, <2 x float> %144)
  %146 = shufflevector <2 x float> %57, <2 x float> <float 0.000000e+00, float poison>, <2 x i32> <i32 2, i32 0>
  %147 = fmul <2 x float> %135, %146
  %148 = shufflevector <2 x float> %67, <2 x float> %131, <2 x i32> <i32 1, i32 3>
  %149 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %148, <2 x float> %132, <2 x float> %147)
  %150 = insertelement <2 x float> %77, float %52, i64 0
  %151 = shufflevector <2 x float> <float poison, float 0.000000e+00>, <2 x float> %80, <2 x i32> <i32 3, i32 1>
  %152 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %150, <2 x float> %151, <2 x float> %149)
  %153 = insertelement <2 x float> %131, float 0.000000e+00, i64 1
  %154 = fmul <2 x float> %135, %153
  %155 = shufflevector <2 x float> %148, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %156 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %155, <2 x float> %132, <2 x float> %154)
  %157 = insertelement <2 x float> %151, float %52, i64 1
  %158 = insertelement <2 x float> %150, float 0.000000e+00, i64 0
  %159 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %157, <2 x float> %158, <2 x float> %156)
  %160 = shufflevector <2 x float> %84, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %161 = fmul <2 x float> %160, %153
  %162 = shufflevector <2 x float> %82, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %163 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %155, <2 x float> %162, <2 x float> %161)
  %164 = insertelement <2 x float> poison, float %52, i64 1
  %165 = shufflevector <2 x float> %164, <2 x float> %87, <2 x i32> <i32 3, i32 1>
  %166 = shufflevector <2 x float> %165, <2 x float> <float 0.000000e+00, float poison>, <2 x i32> <i32 2, i32 0>
  %167 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %165, <2 x float> %166, <2 x float> %163)
  %168 = fsub <2 x float> %49, %140
  %169 = fsub <2 x float> zeroinitializer, %145
  %170 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %imb, i64 0
  %171 = fsub <2 x float> %170, %152
  %172 = fsub <2 x float> zeroinitializer, %159
  %173 = fsub <2 x float> %170, %167
  %shift57 = shufflevector <2 x float> %168, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %174 = fadd <2 x float> %168, %shift57
  %add.i.i = extractelement <2 x float> %174, i64 0
  %shift58 = shufflevector <2 x float> %169, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %175 = fadd <2 x float> %169, %shift58
  %add.i.1.i = extractelement <2 x float> %175, i64 0
  %176 = fadd <2 x float> %124, %171
  %177 = fadd <2 x float> %125, %172
  %178 = fadd <2 x float> %126, %173
  %179 = fneg float %add.i.1.i
  %180 = extractelement <2 x float> %178, i64 0
  %neg.i46.i = fmul float %180, %179
  %181 = extractelement <2 x float> %177, i64 0
  %182 = tail call float @llvm.fmuladd.f32(float %181, float %add.i.2.i, float %neg.i46.i)
  %183 = extractelement <2 x float> %176, i64 0
  %184 = extractelement <2 x float> %177, i64 1
  %mul8.i.i = fmul float %184, %182
  %185 = fneg <2 x float> %177
  %186 = shufflevector <2 x float> %178, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %187 = fmul <2 x float> %186, %185
  %188 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %176, <2 x float> %178, <2 x float> %187)
  %189 = extractelement <2 x float> %188, i64 0
  %190 = tail call float @llvm.fmuladd.f32(float %add.i.i, float %189, float %mul8.i.i)
  %191 = extractelement <2 x float> %176, i64 1
  %192 = fneg float %191
  %neg.i66.i = fmul float %183, %192
  %193 = tail call float @llvm.fmuladd.f32(float %184, float %181, float %neg.i66.i)
  %neg.i71.i = fmul float %add.i.2.i, %192
  %194 = tail call float @llvm.fmuladd.f32(float %add.i.i, float %180, float %neg.i71.i)
  %shift59 = shufflevector <2 x float> %185, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %195 = fmul <2 x float> %175, %shift59
  %neg.i84.i = extractelement <2 x float> %195, i64 0
  %196 = tail call float @llvm.fmuladd.f32(float %add.i.i, float %183, float %neg.i84.i)
  %arrayidx5.i.i.i.i = getelementptr inbounds [4 x float], ptr %agg.result, i64 0, i64 2
  %arrayidx7.i.i.i.i = getelementptr inbounds [4 x float], ptr %agg.result, i64 0, i64 3
  store float 0.000000e+00, ptr %arrayidx7.i.i.i.i, align 4, !tbaa !137, !alias.scope !528
  %arrayidx3.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 1
  %arrayidx3.i6.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 1, i32 0, i64 1
  %arrayidx5.i7.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 1, i32 0, i64 2
  %arrayidx7.i8.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 1, i32 0, i64 3
  store float 0.000000e+00, ptr %arrayidx7.i8.i.i.i, align 4, !tbaa !137, !alias.scope !528
  %arrayidx5.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 2
  %197 = shufflevector <2 x float> %176, <2 x float> %174, <2 x i32> <i32 0, i32 2>
  %198 = fneg <2 x float> %197
  %199 = shufflevector <2 x float> %92, <2 x float> %178, <2 x i32> <i32 0, i32 3>
  %200 = fmul <2 x float> %199, %198
  %201 = shufflevector <2 x float> %175, <2 x float> %177, <2 x i32> <i32 0, i32 3>
  %202 = shufflevector <2 x float> %186, <2 x float> %92, <2 x i32> <i32 0, i32 2>
  %203 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %201, <2 x float> %202, <2 x float> %200)
  %204 = extractelement <2 x float> %203, i64 0
  %205 = tail call float @llvm.fmuladd.f32(float %191, float %204, float %190)
  %div.i = fdiv float 1.000000e+00, %205
  %206 = insertelement <2 x float> poison, float %div.i, i64 0
  %207 = shufflevector <2 x float> %206, <2 x float> poison, <2 x i32> zeroinitializer
  %208 = fmul <2 x float> %188, %207
  %mul15.i = fmul float %193, %div.i
  %mul18.i = fmul float %182, %div.i
  %mul21.i = fmul float %194, %div.i
  %shift60 = shufflevector <2 x float> %198, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %209 = fmul <2 x float> %177, %shift60
  %neg.i75.i = extractelement <2 x float> %209, i64 0
  %210 = tail call float @llvm.fmuladd.f32(float %191, float %add.i.1.i, float %neg.i75.i)
  %mul24.i = fmul float %210, %div.i
  %211 = fmul <2 x float> %203, %207
  %mul33.i = fmul float %196, %div.i
  store <2 x float> %208, ptr %agg.result, align 4, !tbaa !137, !alias.scope !528
  store float %mul15.i, ptr %arrayidx5.i.i.i.i, align 4, !tbaa !137, !alias.scope !528
  store float %mul18.i, ptr %arrayidx3.i.i.i, align 4, !tbaa !137, !alias.scope !528
  store float %mul21.i, ptr %arrayidx3.i6.i.i.i, align 4, !tbaa !137, !alias.scope !528
  store float %mul24.i, ptr %arrayidx5.i7.i.i.i, align 4, !tbaa !137, !alias.scope !528
  store <2 x float> %211, ptr %arrayidx5.i.i.i, align 4, !tbaa !137, !alias.scope !528
  %arrayidx5.i10.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 2, i32 0, i64 2
  store float %mul33.i, ptr %arrayidx5.i10.i.i.i, align 4, !tbaa !137, !alias.scope !528
  %arrayidx7.i11.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %agg.result, i64 0, i64 2, i32 0, i64 3
  store float 0.000000e+00, ptr %arrayidx7.i11.i.i.i, align 4, !tbaa !137, !alias.scope !528
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6LJoint5SolveEff(ptr noundef nonnull align 8 dereferenceable(216) %this, float %dt, float noundef %sor) unnamed_addr #0 align 2 {
entry:
  %impulse = alloca %"struct.btSoftBody::Impulse", align 8
  %ref.tmp24 = alloca %"struct.btSoftBody::Impulse", align 8
  %m_bodies = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1
  %m_rpos = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1
  %m_rigid.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 0, i32 1
  %0 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool.not.i.i = icmp eq ptr %0, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i10.i

if.end.i.i:                                       ; preds = %entry
  %1 = load ptr, ptr %m_bodies, align 8, !tbaa !272
  %tobool3.not.i.i = icmp eq ptr %1, null
  br i1 %tobool3.not.i.i, label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit, label %if.then5.i.i

if.then.i10.i:                                    ; preds = %entry
  %m_linearVelocity.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 2
  %retval.sroa.0.0.copyload.i.i = load <2 x float>, ptr %m_linearVelocity.i.i.i, align 4, !tbaa.struct !163
  %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 2, i32 0, i64 2
  %retval.sroa.5.0.copyload.i.i = load <2 x float>, ptr %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i, align 4, !tbaa.struct !165
  %m_angularVelocity.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3
  %arrayidx.i.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3, i32 0, i64 1
  %arrayidx7.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 0, i32 0, i64 1
  %2 = load float, ptr %m_angularVelocity.i.i.i, align 4, !tbaa !137
  %3 = load <2 x float>, ptr %arrayidx.i.i.i.i, align 4, !tbaa !137
  %4 = load <2 x float>, ptr %arrayidx7.i.i.i.i, align 4, !tbaa !137
  %5 = load float, ptr %m_rpos, align 8, !tbaa !137
  %6 = insertelement <2 x float> %3, float %2, i64 0
  %7 = shufflevector <2 x float> %6, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %8 = fneg <2 x float> %7
  %9 = fmul <2 x float> %4, %8
  %10 = shufflevector <2 x float> %4, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %11 = insertelement <2 x float> %10, float %5, i64 1
  %12 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %3, <2 x float> %11, <2 x float> %9)
  %13 = extractelement <2 x float> %3, i64 0
  %14 = fneg float %13
  %neg30.i.i.i.i = fmul float %5, %14
  %15 = extractelement <2 x float> %4, i64 0
  %16 = tail call float @llvm.fmuladd.f32(float %2, float %15, float %neg30.i.i.i.i)
  %retval.sroa.3.12.vec.insert.i.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %16, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit

if.then5.i.i:                                     ; preds = %if.end.i.i
  %retval.sroa.5.0.m_lv.sroa_idx.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 13, i32 0, i64 2
  %retval.sroa.5.0.copyload12.i.i = load <2 x float>, ptr %retval.sroa.5.0.m_lv.sroa_idx.i.i, align 8, !tbaa.struct !165
  %m_lv.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 13
  %retval.sroa.0.0.copyload11.i.i = load <2 x float>, ptr %m_lv.i.i, align 8, !tbaa.struct !163
  %m_av.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 14
  %arrayidx.i.i15.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 14, i32 0, i64 1
  %arrayidx7.i.i18.i.i = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 0, i32 0, i64 1
  %17 = load float, ptr %m_av.i.i, align 4, !tbaa !137
  %18 = load <2 x float>, ptr %arrayidx.i.i15.i.i, align 4, !tbaa !137
  %19 = load <2 x float>, ptr %arrayidx7.i.i18.i.i, align 4, !tbaa !137
  %20 = load float, ptr %m_rpos, align 8, !tbaa !137
  %21 = insertelement <2 x float> %18, float %17, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %23 = fneg <2 x float> %22
  %24 = fmul <2 x float> %19, %23
  %25 = shufflevector <2 x float> %19, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %26 = insertelement <2 x float> %25, float %20, i64 1
  %27 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %18, <2 x float> %26, <2 x float> %24)
  %28 = extractelement <2 x float> %18, i64 0
  %29 = fneg float %28
  %neg30.i.i21.i.i = fmul float %20, %29
  %30 = extractelement <2 x float> %19, i64 0
  %31 = tail call float @llvm.fmuladd.f32(float %17, float %30, float %neg30.i.i21.i.i)
  %retval.sroa.3.12.vec.insert.i.i24.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %31, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit

_ZNK10btSoftBody4Body8velocityERK9btVector3.exit: ; preds = %if.end.i.i, %if.then.i10.i, %if.then5.i.i
  %retval.sroa.5.0.i22.i = phi <2 x float> [ %retval.sroa.5.0.copyload.i.i, %if.then.i10.i ], [ %retval.sroa.5.0.copyload12.i.i, %if.then5.i.i ], [ zeroinitializer, %if.end.i.i ]
  %retval.sroa.0.0.i20.i = phi <2 x float> [ %retval.sroa.0.0.copyload.i.i, %if.then.i10.i ], [ %retval.sroa.0.0.copyload11.i.i, %if.then5.i.i ], [ zeroinitializer, %if.end.i.i ]
  %retval.sroa.0.0.i12.i = phi <2 x float> [ %12, %if.then.i10.i ], [ %27, %if.then5.i.i ], [ zeroinitializer, %if.end.i.i ]
  %retval.sroa.5.0.i13.i = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i.i.i.i, %if.then.i10.i ], [ %retval.sroa.3.12.vec.insert.i.i24.i.i, %if.then5.i.i ], [ zeroinitializer, %if.end.i.i ]
  %32 = fadd <2 x float> %retval.sroa.0.0.i20.i, %retval.sroa.0.0.i12.i
  %33 = fadd <2 x float> %retval.sroa.0.0.i20.i, %retval.sroa.0.0.i12.i
  %34 = fadd <2 x float> %retval.sroa.5.0.i22.i, %retval.sroa.5.0.i13.i
  %arrayidx4 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1
  %arrayidx6 = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 1
  %m_rigid.i.i31 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1, i32 1
  %35 = load ptr, ptr %m_rigid.i.i31, align 8, !tbaa !511
  %tobool.not.i.i32 = icmp eq ptr %35, null
  br i1 %tobool.not.i.i32, label %if.end.i.i34, label %if.then.i10.i50

if.end.i.i34:                                     ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit
  %36 = load ptr, ptr %arrayidx4, align 8, !tbaa !272
  %tobool3.not.i.i33 = icmp eq ptr %36, null
  br i1 %tobool3.not.i.i33, label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit85, label %if.then5.i.i66

if.then.i10.i50:                                  ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit
  %m_linearVelocity.i.i.i35 = getelementptr inbounds %class.btRigidBody, ptr %35, i64 0, i32 2
  %retval.sroa.0.0.copyload.i.i36 = load <2 x float>, ptr %m_linearVelocity.i.i.i35, align 4, !tbaa.struct !163
  %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i37 = getelementptr inbounds %class.btRigidBody, ptr %35, i64 0, i32 2, i32 0, i64 2
  %retval.sroa.5.0.copyload.i.i38 = load <2 x float>, ptr %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i37, align 4, !tbaa.struct !165
  %m_angularVelocity.i.i.i39 = getelementptr inbounds %class.btRigidBody, ptr %35, i64 0, i32 3
  %arrayidx.i.i.i.i40 = getelementptr inbounds %class.btRigidBody, ptr %35, i64 0, i32 3, i32 0, i64 1
  %arrayidx7.i.i.i.i43 = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 1, i32 0, i64 1
  %37 = load float, ptr %m_angularVelocity.i.i.i39, align 4, !tbaa !137
  %38 = load <2 x float>, ptr %arrayidx.i.i.i.i40, align 4, !tbaa !137
  %39 = load <2 x float>, ptr %arrayidx7.i.i.i.i43, align 4, !tbaa !137
  %40 = load float, ptr %arrayidx6, align 8, !tbaa !137
  %41 = insertelement <2 x float> %38, float %37, i64 0
  %42 = shufflevector <2 x float> %41, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %43 = fneg <2 x float> %42
  %44 = fmul <2 x float> %39, %43
  %45 = shufflevector <2 x float> %39, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %46 = insertelement <2 x float> %45, float %40, i64 1
  %47 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %38, <2 x float> %46, <2 x float> %44)
  %48 = extractelement <2 x float> %38, i64 0
  %49 = fneg float %48
  %neg30.i.i.i.i46 = fmul float %40, %49
  %50 = extractelement <2 x float> %39, i64 0
  %51 = tail call float @llvm.fmuladd.f32(float %37, float %50, float %neg30.i.i.i.i46)
  %retval.sroa.3.12.vec.insert.i.i.i.i49 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %51, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit85

if.then5.i.i66:                                   ; preds = %if.end.i.i34
  %retval.sroa.5.0.m_lv.sroa_idx.i.i51 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 13, i32 0, i64 2
  %retval.sroa.5.0.copyload12.i.i52 = load <2 x float>, ptr %retval.sroa.5.0.m_lv.sroa_idx.i.i51, align 8, !tbaa.struct !165
  %m_lv.i.i53 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 13
  %retval.sroa.0.0.copyload11.i.i54 = load <2 x float>, ptr %m_lv.i.i53, align 8, !tbaa.struct !163
  %m_av.i.i55 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 14
  %arrayidx.i.i15.i.i56 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 14, i32 0, i64 1
  %arrayidx7.i.i18.i.i59 = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 1, i32 0, i64 1
  %52 = load float, ptr %m_av.i.i55, align 4, !tbaa !137
  %53 = load <2 x float>, ptr %arrayidx.i.i15.i.i56, align 4, !tbaa !137
  %54 = load <2 x float>, ptr %arrayidx7.i.i18.i.i59, align 4, !tbaa !137
  %55 = load float, ptr %arrayidx6, align 8, !tbaa !137
  %56 = insertelement <2 x float> %53, float %52, i64 0
  %57 = shufflevector <2 x float> %56, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %58 = fneg <2 x float> %57
  %59 = fmul <2 x float> %54, %58
  %60 = shufflevector <2 x float> %54, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %61 = insertelement <2 x float> %60, float %55, i64 1
  %62 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %53, <2 x float> %61, <2 x float> %59)
  %63 = extractelement <2 x float> %53, i64 0
  %64 = fneg float %63
  %neg30.i.i21.i.i62 = fmul float %55, %64
  %65 = extractelement <2 x float> %54, i64 0
  %66 = tail call float @llvm.fmuladd.f32(float %52, float %65, float %neg30.i.i21.i.i62)
  %retval.sroa.3.12.vec.insert.i.i24.i.i65 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %66, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit85

_ZNK10btSoftBody4Body8velocityERK9btVector3.exit85: ; preds = %if.end.i.i34, %if.then.i10.i50, %if.then5.i.i66
  %retval.sroa.5.0.i22.i67 = phi <2 x float> [ %retval.sroa.5.0.copyload.i.i38, %if.then.i10.i50 ], [ %retval.sroa.5.0.copyload12.i.i52, %if.then5.i.i66 ], [ zeroinitializer, %if.end.i.i34 ]
  %retval.sroa.0.0.i20.i68 = phi <2 x float> [ %retval.sroa.0.0.copyload.i.i36, %if.then.i10.i50 ], [ %retval.sroa.0.0.copyload11.i.i54, %if.then5.i.i66 ], [ zeroinitializer, %if.end.i.i34 ]
  %retval.sroa.0.0.i12.i69 = phi <2 x float> [ %47, %if.then.i10.i50 ], [ %62, %if.then5.i.i66 ], [ zeroinitializer, %if.end.i.i34 ]
  %retval.sroa.5.0.i13.i70 = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i.i.i.i49, %if.then.i10.i50 ], [ %retval.sroa.3.12.vec.insert.i.i24.i.i65, %if.then5.i.i66 ], [ zeroinitializer, %if.end.i.i34 ]
  %67 = fadd <2 x float> %retval.sroa.0.0.i20.i68, %retval.sroa.0.0.i12.i69
  %68 = fadd <2 x float> %retval.sroa.0.0.i20.i68, %retval.sroa.0.0.i12.i69
  %69 = fadd <2 x float> %retval.sroa.5.0.i22.i67, %retval.sroa.5.0.i13.i70
  %70 = fsub <2 x float> %32, %67
  %sub.i = extractelement <2 x float> %70, i64 0
  %71 = fsub <2 x float> %33, %68
  %sub8.i = extractelement <2 x float> %71, i64 1
  %72 = fsub <2 x float> %34, %69
  %sub14.i = extractelement <2 x float> %72, i64 0
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %impulse) #38
  %m_asVelocity.i = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 2
  %73 = getelementptr inbounds i8, ptr %impulse, i64 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %73, i8 0, i64 16, i1 false)
  store i8 1, ptr %m_asVelocity.i, align 8
  %m_massmatrix = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8
  %m_drift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6
  %m_cfm = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 3
  %74 = load float, ptr %m_cfm, align 8, !tbaa !137
  %mul.i = fmul float %sub.i, %74
  %mul4.i = fmul float %sub8.i, %74
  %mul8.i = fmul float %sub14.i, %74
  %75 = load float, ptr %m_drift, align 4, !tbaa !137
  %add.i = fadd float %75, %mul.i
  %arrayidx5.i92 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 1
  %76 = load float, ptr %arrayidx5.i92, align 8, !tbaa !137
  %add8.i = fadd float %mul4.i, %76
  %arrayidx11.i94 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 2
  %77 = load float, ptr %arrayidx11.i94, align 4, !tbaa !137
  %add14.i = fadd float %mul8.i, %77
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2
  %78 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 1
  %79 = load float, ptr %arrayidx5.i18.i, align 8, !tbaa !137
  %mul8.i20.i = fmul float %add8.i, %79
  %80 = tail call float @llvm.fmuladd.f32(float %78, float %add.i, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 2
  %81 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %82 = tail call float @llvm.fmuladd.f32(float %81, float %add14.i, float %80)
  %83 = load <4 x float>, ptr %m_massmatrix, align 4
  %84 = shufflevector <4 x float> %83, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %85 = load <4 x float>, ptr %arrayidx5.i.i, align 8
  %86 = shufflevector <4 x float> %85, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %87 = load <4 x float>, ptr %arrayidx10.i.i, align 4
  %88 = shufflevector <4 x float> %87, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %89 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %90 = load float, ptr %arrayidx5.i12.i, align 8, !tbaa !137
  %91 = insertelement <2 x float> poison, float %add8.i, i64 0
  %92 = shufflevector <2 x float> %91, <2 x float> poison, <2 x i32> zeroinitializer
  %93 = insertelement <2 x float> %86, float %90, i64 1
  %94 = fmul <2 x float> %92, %93
  %95 = insertelement <2 x float> %84, float %89, i64 1
  %96 = insertelement <2 x float> poison, float %add.i, i64 0
  %97 = shufflevector <2 x float> %96, <2 x float> poison, <2 x i32> zeroinitializer
  %98 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %95, <2 x float> %97, <2 x float> %94)
  %99 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %100 = insertelement <2 x float> %88, float %99, i64 1
  %101 = insertelement <2 x float> poison, float %add14.i, i64 0
  %102 = shufflevector <2 x float> %101, <2 x float> poison, <2 x i32> zeroinitializer
  %103 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %100, <2 x float> %102, <2 x float> %98)
  %104 = insertelement <2 x float> poison, float %sor, i64 0
  %105 = shufflevector <2 x float> %104, <2 x float> poison, <2 x i32> zeroinitializer
  %106 = fmul <2 x float> %103, %105
  %mul8.i110 = fmul float %82, %sor
  %retval.sroa.3.12.vec.insert.i113 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i110, i64 0
  store <2 x float> %106, ptr %impulse, align 8, !tbaa.struct !163
  %ref.tmp.sroa.4.0.m_velocity.sroa_idx = getelementptr inbounds i8, ptr %impulse, i64 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i113, ptr %ref.tmp.sroa.4.0.m_velocity.sroa_idx, align 8, !tbaa.struct !165
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %ref.tmp24) #38
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %ref.tmp24, ptr noundef nonnull align 8 dereferenceable(36) %impulse, i64 36, i1 false), !tbaa.struct !531
  %107 = load <2 x float>, ptr %ref.tmp24, align 8, !tbaa !137, !alias.scope !532
  %108 = fneg <2 x float> %107
  %arrayidx7.i.i116 = getelementptr inbounds [4 x float], ptr %ref.tmp24, i64 0, i64 2
  %109 = load float, ptr %arrayidx7.i.i116, align 8, !tbaa !137, !alias.scope !532
  %fneg8.i.i = fneg float %109
  %retval.sroa.3.12.vec.insert.i.i119 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i.i, i64 0
  store <2 x float> %108, ptr %ref.tmp24, align 8, !tbaa.struct !163, !alias.scope !532
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i119, ptr %arrayidx7.i.i116, align 8, !tbaa.struct !165, !alias.scope !532
  %m_drift.i = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp24, i64 0, i32 1
  %110 = load <2 x float>, ptr %m_drift.i, align 8, !tbaa !137, !alias.scope !532
  %111 = fneg <2 x float> %110
  %arrayidx7.i10.i = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp24, i64 0, i32 1, i32 0, i64 2
  %112 = load float, ptr %arrayidx7.i10.i, align 8, !tbaa !137, !alias.scope !532
  %fneg8.i11.i = fneg float %112
  %retval.sroa.3.12.vec.insert.i14.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i11.i, i64 0
  store <2 x float> %111, ptr %m_drift.i, align 8, !tbaa.struct !163, !alias.scope !532
  store <2 x float> %retval.sroa.3.12.vec.insert.i14.i, ptr %arrayidx7.i10.i, align 8, !tbaa.struct !165, !alias.scope !532
  %m_asVelocity.i120 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp24, i64 0, i32 2
  %bf.load.i121 = load i8, ptr %m_asVelocity.i120, align 8
  %113 = and i8 %bf.load.i121, 1
  %tobool.not.i = icmp eq i8 %113, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit85
  call void @_ZNK10btSoftBody4Body13applyVImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp24, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos)
  %bf.load2.pre.i = load i8, ptr %m_asVelocity.i120, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit85
  %bf.load2.i = phi i8 [ %bf.load2.pre.i, %if.then.i ], [ %bf.load.i121, %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit85 ]
  %bf.shl3.mask.i = and i8 %bf.load2.i, 2
  %tobool6.not.i = icmp eq i8 %bf.shl3.mask.i, 0
  br i1 %tobool6.not.i, label %if.end.i131, label %if.then7.i

if.then7.i:                                       ; preds = %if.end.i
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %m_drift.i, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos)
  br label %if.end.i131

if.end.i131:                                      ; preds = %if.end.i, %if.then7.i
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %ref.tmp24) #38
  call void @_ZNK10btSoftBody4Body13applyVImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx4, ptr noundef nonnull align 4 dereferenceable(16) %impulse, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx6)
  %bf.load2.pre.i126 = load i8, ptr %m_asVelocity.i, align 8
  %bf.shl3.mask.i129 = and i8 %bf.load2.pre.i126, 2
  %tobool6.not.i130 = icmp eq i8 %bf.shl3.mask.i129, 0
  br i1 %tobool6.not.i130, label %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit134, label %if.then7.i133

if.then7.i133:                                    ; preds = %if.end.i131
  %m_drift.i132 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 1
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx4, ptr noundef nonnull align 4 dereferenceable(16) %m_drift.i132, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx6)
  br label %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit134

_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit134: ; preds = %if.end.i131, %if.then7.i133
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %impulse) #38
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6LJoint9TerminateEf(ptr noundef nonnull align 8 dereferenceable(216) %this, float %dt) unnamed_addr #0 align 2 {
entry:
  %ref.tmp = alloca %class.btVector3, align 8
  %m_split = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 5
  %0 = load float, ptr %m_split, align 8, !tbaa !269
  %cmp = fcmp ogt float %0, 0.000000e+00
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %m_bodies = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #38
  %m_sdrift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7
  %1 = load <2 x float>, ptr %m_sdrift, align 4, !tbaa !137
  %2 = fneg <2 x float> %1
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7, i32 0, i64 2
  %3 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %fneg8.i = fneg float %3
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i, i64 0
  store <2 x float> %2, ptr %ref.tmp, align 8
  %4 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp, i64 0, i32 1
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %4, align 8
  %m_rpos = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  %arrayidx4 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1
  %arrayidx7 = getelementptr inbounds %"struct.btSoftBody::LJoint", ptr %this, i64 0, i32 1, i64 1
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx4, ptr noundef nonnull align 4 dereferenceable(16) %m_sdrift, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx7)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef nonnull align 4 dereferenceable(16) %impulse, ptr noundef nonnull align 4 dereferenceable(16) %rpos) local_unnamed_addr #0 comdat align 2 {
entry:
  %m_rigid = getelementptr inbounds %"struct.btSoftBody::Body", ptr %this, i64 0, i32 1
  %0 = load ptr, ptr %m_rigid, align 8, !tbaa !511
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_ZN11btRigidBody12applyImpulseERK9btVector3S2_(ptr noundef nonnull align 8 dereferenceable(564) %0, ptr noundef nonnull align 4 dereferenceable(16) %impulse, ptr noundef nonnull align 4 dereferenceable(16) %rpos)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load ptr, ptr %this, align 8, !tbaa !272
  %tobool3.not = icmp eq ptr %1, null
  br i1 %tobool3.not, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  %m_imass.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 5
  %2 = load float, ptr %m_imass.i, align 4, !tbaa !137
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %3 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %mul8.i.i.i = fmul float %2, %3
  %m_invwi.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7
  %arrayidx.i.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 1
  %4 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 2
  %5 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %6 = fneg float %5
  %7 = load float, ptr %rpos, align 4, !tbaa !137
  %8 = fneg float %7
  %neg19.i.i.i = fmul float %3, %8
  %9 = fneg float %4
  %arrayidx5.i.i21.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i24.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 2
  %10 = load float, ptr %arrayidx.i17.i.i, align 4, !tbaa !137
  %arrayidx5.i18.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %11 = load float, ptr %arrayidx5.i18.i.i, align 4, !tbaa !137
  %arrayidx10.i21.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %12 = load float, ptr %arrayidx10.i21.i.i, align 4, !tbaa !137
  %m_dimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 10
  %13 = load <2 x float>, ptr %impulse, align 4, !tbaa !137
  %14 = insertelement <2 x float> poison, float %2, i64 0
  %15 = shufflevector <2 x float> %14, <2 x float> poison, <2 x i32> zeroinitializer
  %16 = fmul <2 x float> %15, %13
  %17 = extractelement <2 x float> %13, i64 1
  %neg.i.i.i = fmul float %17, %6
  %18 = tail call float @llvm.fmuladd.f32(float %4, float %3, float %neg.i.i.i)
  %19 = extractelement <2 x float> %13, i64 0
  %20 = tail call float @llvm.fmuladd.f32(float %5, float %19, float %neg19.i.i.i)
  %neg30.i.i.i = fmul float %19, %9
  %21 = tail call float @llvm.fmuladd.f32(float %7, float %17, float %neg30.i.i.i)
  %mul8.i20.i.i = fmul float %20, %11
  %22 = tail call float @llvm.fmuladd.f32(float %10, float %18, float %mul8.i20.i.i)
  %23 = tail call float @llvm.fmuladd.f32(float %12, float %21, float %22)
  %24 = load <2 x float>, ptr %m_dimpulses.i, align 4, !tbaa !137
  %25 = fadd <2 x float> %16, %24
  store <2 x float> %25, ptr %m_dimpulses.i, align 4, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 10, i64 0, i32 0, i64 2
  %26 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %add13.i.i = fadd float %mul8.i.i.i, %26
  store float %add13.i.i, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 10, i64 1
  %27 = load float, ptr %m_invwi.i, align 4, !tbaa !137
  %28 = load float, ptr %arrayidx5.i.i21.i, align 4, !tbaa !137
  %29 = load float, ptr %arrayidx10.i.i.i, align 4, !tbaa !137
  %30 = load float, ptr %arrayidx.i.i24.i, align 4, !tbaa !137
  %31 = load float, ptr %arrayidx5.i12.i.i, align 4, !tbaa !137
  %32 = load float, ptr %arrayidx10.i15.i.i, align 4, !tbaa !137
  %33 = insertelement <2 x float> poison, float %28, i64 0
  %34 = insertelement <2 x float> %33, float %31, i64 1
  %35 = insertelement <2 x float> poison, float %20, i64 0
  %36 = shufflevector <2 x float> %35, <2 x float> poison, <2 x i32> zeroinitializer
  %37 = fmul <2 x float> %34, %36
  %38 = insertelement <2 x float> poison, float %27, i64 0
  %39 = insertelement <2 x float> %38, float %30, i64 1
  %40 = insertelement <2 x float> poison, float %18, i64 0
  %41 = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> zeroinitializer
  %42 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %39, <2 x float> %41, <2 x float> %37)
  %43 = insertelement <2 x float> poison, float %29, i64 0
  %44 = insertelement <2 x float> %43, float %32, i64 1
  %45 = insertelement <2 x float> poison, float %21, i64 0
  %46 = shufflevector <2 x float> %45, <2 x float> poison, <2 x i32> zeroinitializer
  %47 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %44, <2 x float> %46, <2 x float> %42)
  %48 = load <2 x float>, ptr %arrayidx7.i, align 4, !tbaa !137
  %49 = fadd <2 x float> %47, %48
  store <2 x float> %49, ptr %arrayidx7.i, align 4, !tbaa !137
  %arrayidx12.i30.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 10, i64 1, i32 0, i64 2
  %50 = load float, ptr %arrayidx12.i30.i, align 4, !tbaa !137
  %add13.i31.i = fadd float %23, %50
  store float %add13.i31.i, ptr %arrayidx12.i30.i, align 4, !tbaa !137
  %m_ndimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 12
  %51 = load i32, ptr %m_ndimpulses.i, align 4, !tbaa !322
  %inc.i = add nsw i32 %51, 1
  store i32 %inc.i, ptr %m_ndimpulses.i, align 4, !tbaa !322
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6AJoint7PrepareEfi(ptr noundef nonnull align 8 dereferenceable(224) %this, float noundef %dt, i32 noundef %iterations) unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %m_icontrol = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 2
  %0 = load ptr, ptr %m_icontrol, align 8, !tbaa !285
  %vtable = load ptr, ptr %0, align 8, !tbaa !5
  %1 = load ptr, ptr %vtable, align 8
  tail call void %1(ptr noundef nonnull align 8 dereferenceable(8) %0, ptr noundef nonnull %this)
  %m_rigid.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 0, i32 1
  %2 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool.not.i.i = icmp eq ptr %2, null
  br i1 %tobool.not.i.i, label %_ZNK10btSoftBody4Body8activateEv.exit.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %2, i1 noundef zeroext false)
  br label %_ZNK10btSoftBody4Body8activateEv.exit.i

_ZNK10btSoftBody4Body8activateEv.exit.i:          ; preds = %if.then.i.i, %entry
  %m_rigid.i4.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1, i32 1
  %3 = load ptr, ptr %m_rigid.i4.i, align 8, !tbaa !511
  %tobool.not.i5.i = icmp eq ptr %3, null
  br i1 %tobool.not.i5.i, label %_ZN10btSoftBody5Joint7PrepareEfi.exit, label %if.then.i6.i

if.then.i6.i:                                     ; preds = %_ZNK10btSoftBody4Body8activateEv.exit.i
  tail call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %3, i1 noundef zeroext false)
  br label %_ZN10btSoftBody5Joint7PrepareEfi.exit

_ZN10btSoftBody5Joint7PrepareEfi.exit:            ; preds = %_ZNK10btSoftBody4Body8activateEv.exit.i, %if.then.i6.i
  %m_bodies = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1
  %4 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %4, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZNK10btSoftBody4Body5xformEv.exit, !prof !173

init.check.i:                                     ; preds = %_ZN10btSoftBody5Joint7PrepareEfi.exit
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i = icmp eq i32 %5, 0
  br i1 %tobool.not.i, label %_ZNK10btSoftBody4Body5xformEv.exit, label %init.i

init.i:                                           ; preds = %init.check.i
  %6 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i179 = icmp eq i8 %6, 0
  br i1 %guard.uninitialized.i179, label %init.check.i181, label %invoke.cont.i, !prof !173

init.check.i181:                                  ; preds = %init.i
  %7 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i180 = icmp eq i32 %7, 0
  br i1 %tobool.not.i180, label %invoke.cont.i, label %init.i183

init.i183:                                        ; preds = %init.check.i181
  %8 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i198 = icmp eq i8 %8, 0
  br i1 %guard.uninitialized.i198, label %init.check.i200, label %invoke.cont.i186, !prof !173

init.check.i200:                                  ; preds = %init.i183
  %9 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i199 = icmp eq i32 %9, 0
  br i1 %tobool.not.i199, label %invoke.cont.i186, label %init.i201

init.i201:                                        ; preds = %init.check.i200
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %10 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont.i186

invoke.cont.i186:                                 ; preds = %init.i201, %init.check.i200, %init.i183
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %11 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont.i

invoke.cont.i:                                    ; preds = %invoke.cont.i186, %init.check.i181, %init.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %12 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit

_ZNK10btSoftBody4Body5xformEv.exit:               ; preds = %_ZN10btSoftBody5Joint7PrepareEfi.exit, %init.check.i, %invoke.cont.i
  %m_collisionObject.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 0, i32 2
  %13 = load ptr, ptr %m_collisionObject.i, align 8, !tbaa !253
  %tobool3.not.i = icmp eq ptr %13, null
  %m_interpolationWorldTransform.i.i = getelementptr inbounds %class.btCollisionObject, ptr %13, i64 0, i32 2
  %14 = load ptr, ptr %m_bodies, align 8
  %tobool6.not.i = icmp eq ptr %14, null
  %m_framexform.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %14, i64 0, i32 3
  %spec.select.i = select i1 %tobool6.not.i, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i
  %retval.0.i = select i1 %tobool3.not.i, ptr %spec.select.i, ptr %m_interpolationWorldTransform.i.i
  %m_refs = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2
  %15 = load float, ptr %m_refs, align 8, !tbaa !137
  %arrayidx5.i.i = getelementptr inbounds [4 x float], ptr %retval.0.i, i64 0, i64 1
  %arrayidx7.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 0, i32 0, i64 1
  %16 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %arrayidx10.i.i = getelementptr inbounds [4 x float], ptr %retval.0.i, i64 0, i64 2
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 0, i32 0, i64 2
  %17 = load float, ptr %arrayidx12.i.i, align 8, !tbaa !137
  %arrayidx.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 1, i32 0, i64 2
  %18 = load float, ptr %retval.0.i, align 4, !tbaa !137
  %19 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %20 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %21 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %22 = load float, ptr %arrayidx5.i12.i, align 4, !tbaa !137
  %23 = insertelement <2 x float> poison, float %16, i64 0
  %24 = shufflevector <2 x float> %23, <2 x float> poison, <2 x i32> zeroinitializer
  %25 = insertelement <2 x float> poison, float %19, i64 0
  %26 = insertelement <2 x float> %25, float %22, i64 1
  %27 = fmul <2 x float> %24, %26
  %28 = insertelement <2 x float> poison, float %18, i64 0
  %29 = insertelement <2 x float> %28, float %21, i64 1
  %30 = insertelement <2 x float> poison, float %15, i64 0
  %31 = shufflevector <2 x float> %30, <2 x float> poison, <2 x i32> zeroinitializer
  %32 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %29, <2 x float> %31, <2 x float> %27)
  %33 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %34 = insertelement <2 x float> poison, float %20, i64 0
  %35 = insertelement <2 x float> %34, float %33, i64 1
  %36 = insertelement <2 x float> poison, float %17, i64 0
  %37 = shufflevector <2 x float> %36, <2 x float> poison, <2 x i32> zeroinitializer
  %38 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %35, <2 x float> %37, <2 x float> %32)
  %arrayidx.i17.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2
  %39 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2, i32 0, i64 1
  %40 = load float, ptr %arrayidx5.i18.i, align 4, !tbaa !137
  %mul8.i20.i = fmul float %16, %40
  %41 = tail call float @llvm.fmuladd.f32(float %39, float %15, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i, i64 0, i64 2, i32 0, i64 2
  %42 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %43 = tail call float @llvm.fmuladd.f32(float %42, float %17, float %41)
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %43, i64 0
  %m_axis = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 1
  store <2 x float> %38, ptr %m_axis, align 8, !tbaa.struct !163
  %ref.tmp.sroa.4.0.arrayidx5.sroa_idx = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 1, i64 0, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %ref.tmp.sroa.4.0.arrayidx5.sroa_idx, align 8, !tbaa.struct !165
  %arrayidx8 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1
  %44 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i70 = icmp eq i8 %44, 0
  br i1 %guard.uninitialized.i70, label %init.check.i72, label %_ZNK10btSoftBody4Body5xformEv.exit87, !prof !173

init.check.i72:                                   ; preds = %_ZNK10btSoftBody4Body5xformEv.exit
  %45 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i71 = icmp eq i32 %45, 0
  br i1 %tobool.not.i71, label %_ZNK10btSoftBody4Body5xformEv.exit87, label %init.i74

init.i74:                                         ; preds = %init.check.i72
  %46 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i188 = icmp eq i8 %46, 0
  br i1 %guard.uninitialized.i188, label %init.check.i190, label %invoke.cont.i78, !prof !173

init.check.i190:                                  ; preds = %init.i74
  %47 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i189 = icmp eq i32 %47, 0
  br i1 %tobool.not.i189, label %invoke.cont.i78, label %init.i191

init.i191:                                        ; preds = %init.check.i190
  %48 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i202 = icmp eq i8 %48, 0
  br i1 %guard.uninitialized.i202, label %init.check.i204, label %invoke.cont.i194, !prof !173

init.check.i204:                                  ; preds = %init.i191
  %49 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i203 = icmp eq i32 %49, 0
  br i1 %tobool.not.i203, label %invoke.cont.i194, label %init.i205

init.i205:                                        ; preds = %init.check.i204
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %50 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont.i194

invoke.cont.i194:                                 ; preds = %init.i205, %init.check.i204, %init.i191
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %51 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont.i78

invoke.cont.i78:                                  ; preds = %invoke.cont.i194, %init.check.i190, %init.i74
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %52 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit87

_ZNK10btSoftBody4Body5xformEv.exit87:             ; preds = %_ZNK10btSoftBody4Body5xformEv.exit, %init.check.i72, %invoke.cont.i78
  %m_collisionObject.i79 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1, i32 2
  %53 = load ptr, ptr %m_collisionObject.i79, align 8, !tbaa !253
  %tobool3.not.i80 = icmp eq ptr %53, null
  %m_interpolationWorldTransform.i.i81 = getelementptr inbounds %class.btCollisionObject, ptr %53, i64 0, i32 2
  %54 = load ptr, ptr %arrayidx8, align 8
  %tobool6.not.i82 = icmp eq ptr %54, null
  %m_framexform.i83 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %54, i64 0, i32 3
  %spec.select.i84 = select i1 %tobool6.not.i82, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i83
  %retval.0.i85 = select i1 %tobool3.not.i80, ptr %spec.select.i84, ptr %m_interpolationWorldTransform.i.i81
  %arrayidx12 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 1
  %55 = load float, ptr %retval.0.i85, align 4, !tbaa !137
  %56 = load float, ptr %arrayidx12, align 8, !tbaa !137
  %arrayidx5.i.i88 = getelementptr inbounds [4 x float], ptr %retval.0.i85, i64 0, i64 1
  %57 = load float, ptr %arrayidx5.i.i88, align 4, !tbaa !137
  %arrayidx7.i.i89 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 1, i32 0, i64 1
  %58 = load float, ptr %arrayidx7.i.i89, align 4, !tbaa !137
  %mul8.i.i90 = fmul float %57, %58
  %59 = tail call float @llvm.fmuladd.f32(float %55, float %56, float %mul8.i.i90)
  %arrayidx10.i.i91 = getelementptr inbounds [4 x float], ptr %retval.0.i85, i64 0, i64 2
  %60 = load float, ptr %arrayidx10.i.i91, align 4, !tbaa !137
  %arrayidx12.i.i92 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 2, i64 1, i32 0, i64 2
  %61 = load float, ptr %arrayidx12.i.i92, align 8, !tbaa !137
  %62 = tail call float @llvm.fmuladd.f32(float %60, float %61, float %59)
  %arrayidx.i.i93 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i85, i64 0, i64 1
  %arrayidx5.i12.i94 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i85, i64 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i96 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i85, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i97 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i85, i64 0, i64 2
  %arrayidx5.i18.i98 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i85, i64 0, i64 2, i32 0, i64 1
  %arrayidx10.i21.i100 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i85, i64 0, i64 2, i32 0, i64 2
  %retval.sroa.0.0.vec.insert.i101 = insertelement <2 x float> undef, float %62, i64 0
  %arrayidx16 = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 1, i64 1
  %ref.tmp6.sroa.4.0.arrayidx16.sroa_idx = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 1, i64 1, i32 0, i64 2
  %arrayidx7.i.i108 = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 1, i64 0, i32 0, i64 1
  %63 = load float, ptr %arrayidx.i.i93, align 4, !tbaa !137
  %64 = load float, ptr %arrayidx5.i12.i94, align 4, !tbaa !137
  %65 = load float, ptr %arrayidx10.i15.i96, align 4, !tbaa !137
  %66 = load float, ptr %arrayidx.i17.i97, align 4, !tbaa !137
  %67 = load float, ptr %arrayidx5.i18.i98, align 4, !tbaa !137
  %68 = insertelement <2 x float> poison, float %58, i64 0
  %69 = shufflevector <2 x float> %68, <2 x float> poison, <2 x i32> zeroinitializer
  %70 = insertelement <2 x float> poison, float %64, i64 0
  %71 = insertelement <2 x float> %70, float %67, i64 1
  %72 = fmul <2 x float> %69, %71
  %73 = insertelement <2 x float> poison, float %63, i64 0
  %74 = insertelement <2 x float> %73, float %66, i64 1
  %75 = insertelement <2 x float> poison, float %56, i64 0
  %76 = shufflevector <2 x float> %75, <2 x float> poison, <2 x i32> zeroinitializer
  %77 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %74, <2 x float> %76, <2 x float> %72)
  %78 = load float, ptr %arrayidx10.i21.i100, align 4, !tbaa !137
  %79 = insertelement <2 x float> poison, float %65, i64 0
  %80 = insertelement <2 x float> %79, float %78, i64 1
  %81 = insertelement <2 x float> poison, float %61, i64 0
  %82 = shufflevector <2 x float> %81, <2 x float> poison, <2 x i32> zeroinitializer
  %83 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %80, <2 x float> %82, <2 x float> %77)
  %84 = shufflevector <2 x float> %retval.sroa.0.0.vec.insert.i101, <2 x float> %83, <2 x i32> <i32 0, i32 2>
  %85 = shufflevector <2 x float> <float poison, float 0.000000e+00>, <2 x float> %83, <2 x i32> <i32 3, i32 1>
  store <2 x float> %84, ptr %arrayidx16, align 8, !tbaa.struct !163
  store <2 x float> %85, ptr %ref.tmp6.sroa.4.0.arrayidx16.sroa_idx, align 8, !tbaa.struct !165
  %86 = load <2 x float>, ptr %arrayidx7.i.i108, align 4, !tbaa !137
  %87 = load float, ptr %m_axis, align 8, !tbaa !137
  %88 = shufflevector <2 x float> %83, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %89 = insertelement <2 x float> %88, float %62, i64 1
  %90 = fneg <2 x float> %89
  %91 = fmul <2 x float> %86, %90
  %92 = shufflevector <2 x float> %86, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %93 = insertelement <2 x float> %92, float %87, i64 1
  %94 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %83, <2 x float> %93, <2 x float> %91)
  %95 = extractelement <2 x float> %83, i64 0
  %96 = fneg float %95
  %neg30.i.i = fmul float %87, %96
  %97 = extractelement <2 x float> %86, i64 0
  %98 = tail call float @llvm.fmuladd.f32(float %62, float %97, float %neg30.i.i)
  %99 = fmul <2 x float> %94, %94
  %mul8.i.i.i.i = extractelement <2 x float> %99, i64 1
  %100 = extractelement <2 x float> %94, i64 0
  %101 = tail call float @llvm.fmuladd.f32(float %100, float %100, float %mul8.i.i.i.i)
  %102 = tail call float @llvm.fmuladd.f32(float %98, float %98, float %101)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %102)
  %cmp.i = fcmp ogt float %sqrt.i.i, 0x3E80000000000000
  br i1 %cmp.i, label %if.then.i, label %_ZL12NormalizeAnyRK9btVector3.exit

if.then.i:                                        ; preds = %_ZNK10btSoftBody4Body5xformEv.exit87
  %div.i.i = fdiv float 1.000000e+00, %sqrt.i.i
  %103 = insertelement <2 x float> poison, float %div.i.i, i64 0
  %104 = shufflevector <2 x float> %103, <2 x float> poison, <2 x i32> zeroinitializer
  %105 = fmul <2 x float> %94, %104
  %mul8.i.i.i = fmul float %98, %div.i.i
  %retval.sroa.3.12.vec.insert.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i.i, i64 0
  br label %_ZL12NormalizeAnyRK9btVector3.exit

_ZL12NormalizeAnyRK9btVector3.exit:               ; preds = %_ZNK10btSoftBody4Body5xformEv.exit87, %if.then.i
  %retval.sroa.0.0.i = phi <2 x float> [ %105, %if.then.i ], [ zeroinitializer, %_ZNK10btSoftBody4Body5xformEv.exit87 ]
  %retval.sroa.4.0.i = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i.i.i, %if.then.i ], [ zeroinitializer, %_ZNK10btSoftBody4Body5xformEv.exit87 ]
  %m_drift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6
  store <2 x float> %retval.sroa.0.0.i, ptr %m_drift, align 4, !tbaa.struct !163
  %ref.tmp17.sroa.4.0.m_drift.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 2
  store <2 x float> %retval.sroa.4.0.i, ptr %ref.tmp17.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa.struct !165
  %106 = fmul <2 x float> %83, %86
  %mul8.i.i113 = extractelement <2 x float> %106, i64 0
  %107 = tail call float @llvm.fmuladd.f32(float %87, float %62, float %mul8.i.i113)
  %108 = extractelement <2 x float> %83, i64 1
  %109 = extractelement <2 x float> %86, i64 1
  %110 = tail call float @llvm.fmuladd.f32(float %109, float %108, float %107)
  %cmp.i116 = fcmp olt float %110, -1.000000e+00
  %cmp1.i = fcmp ogt float %110, 1.000000e+00
  %h.0.val.x.0.val.i = select i1 %cmp1.i, float 1.000000e+00, float %110
  %cond5.i = select i1 %cmp.i116, float -1.000000e+00, float %h.0.val.x.0.val.i
  %call.i117 = tail call float @acosf(float noundef %cond5.i) #38
  %cmp.i118 = fcmp ogt float %call.i117, 0x3FC921FB60000000
  %.sroa.speculated216 = select i1 %cmp.i118, float 0x3FC921FB60000000, float %call.i117
  %arrayidx3.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 1
  %111 = load float, ptr %ref.tmp17.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa !137
  %mul7.i = fmul float %.sroa.speculated216, %111
  %m_erp = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 4
  %112 = load float, ptr %m_erp, align 4, !tbaa !535
  %div = fdiv float %112, %dt
  %113 = load <2 x float>, ptr %m_drift, align 4, !tbaa !137
  %114 = insertelement <2 x float> poison, float %.sroa.speculated216, i64 0
  %115 = shufflevector <2 x float> %114, <2 x float> poison, <2 x i32> zeroinitializer
  %116 = fmul <2 x float> %113, %115
  %117 = insertelement <2 x float> poison, float %div, i64 0
  %118 = shufflevector <2 x float> %117, <2 x float> poison, <2 x i32> zeroinitializer
  %119 = fmul <2 x float> %116, %118
  store <2 x float> %119, ptr %m_drift, align 4, !tbaa !137
  %mul7.i123 = fmul float %mul7.i, %div
  store float %mul7.i123, ptr %ref.tmp17.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa !137
  %120 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi acquire, align 8
  %guard.uninitialized.i124 = icmp eq i8 %120, 0
  br i1 %guard.uninitialized.i124, label %init.check.i126, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit, !prof !173

init.check.i126:                                  ; preds = %_ZL12NormalizeAnyRK9btVector3.exit
  %121 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  %tobool.not.i125 = icmp eq i32 %121, 0
  br i1 %tobool.not.i125, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit, label %init.i127

init.i127:                                        ; preds = %init.check.i126
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, i8 0, i64 48, i1 false)
  %122 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  br label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit

_ZNK10btSoftBody4Body15invWorldInertiaEv.exit:    ; preds = %_ZL12NormalizeAnyRK9btVector3.exit, %init.check.i126, %init.i127
  %123 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool10.not.i = icmp eq ptr %123, null
  %m_invInertiaTensorWorld.i.i = getelementptr inbounds %class.btRigidBody, ptr %123, i64 0, i32 1
  %124 = load ptr, ptr %m_bodies, align 8
  %tobool12.not.i = icmp eq ptr %124, null
  %m_invwi.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %124, i64 0, i32 7
  %spec.select.i128 = select i1 %tobool12.not.i, ptr @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, ptr %m_invwi.i
  %retval.0.i129 = select i1 %tobool10.not.i, ptr %spec.select.i128, ptr %m_invInertiaTensorWorld.i.i
  %125 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi acquire, align 8
  %guard.uninitialized.i130 = icmp eq i8 %125, 0
  br i1 %guard.uninitialized.i130, label %init.check.i132, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit141, !prof !173

init.check.i132:                                  ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit
  %126 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  %tobool.not.i131 = icmp eq i32 %126, 0
  br i1 %tobool.not.i131, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit141, label %init.i133

init.i133:                                        ; preds = %init.check.i132
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, i8 0, i64 48, i1 false)
  %127 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  br label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit141

_ZNK10btSoftBody4Body15invWorldInertiaEv.exit141: ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit, %init.check.i132, %init.i133
  %128 = load ptr, ptr %m_rigid.i4.i, align 8, !tbaa !511
  %tobool10.not.i135 = icmp eq ptr %128, null
  %m_invInertiaTensorWorld.i.i136 = getelementptr inbounds %class.btRigidBody, ptr %128, i64 0, i32 1
  %129 = load ptr, ptr %arrayidx8, align 8
  %tobool12.not.i137 = icmp eq ptr %129, null
  %m_invwi.i138 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %129, i64 0, i32 7
  %spec.select.i139 = select i1 %tobool12.not.i137, ptr @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, ptr %m_invwi.i138
  %retval.0.i140 = select i1 %tobool10.not.i135, ptr %spec.select.i139, ptr %m_invInertiaTensorWorld.i.i136
  %130 = load float, ptr %retval.0.i129, align 4, !tbaa !137, !noalias !536
  %131 = load float, ptr %retval.0.i140, align 4, !tbaa !137, !noalias !536
  %add.i.i.i = fadd float %130, %131
  %arrayidx5.i.i.i = getelementptr inbounds [4 x float], ptr %retval.0.i129, i64 0, i64 1
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %retval.0.i140, i64 0, i64 1
  %arrayidx.i.1.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i129, i64 0, i64 1
  %arrayidx.i9.1.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i140, i64 0, i64 1
  %arrayidx5.i.1.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i129, i64 0, i64 1, i32 0, i64 1
  %132 = load float, ptr %arrayidx5.i.1.i.i, align 4, !tbaa !137, !noalias !536
  %arrayidx7.i.1.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i140, i64 0, i64 1, i32 0, i64 1
  %133 = load float, ptr %arrayidx7.i.1.i.i, align 4, !tbaa !137, !noalias !536
  %add8.i.1.i.i = fadd float %132, %133
  %arrayidx11.i.1.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i129, i64 0, i64 1, i32 0, i64 2
  %arrayidx13.i.1.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i140, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i.2.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i129, i64 0, i64 2
  %arrayidx.i9.2.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i140, i64 0, i64 2
  %arrayidx5.i.2.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i129, i64 0, i64 2, i32 0, i64 1
  %134 = load float, ptr %arrayidx5.i.2.i.i, align 4, !tbaa !137, !noalias !536
  %arrayidx7.i.2.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i140, i64 0, i64 2, i32 0, i64 1
  %135 = load float, ptr %arrayidx7.i.2.i.i, align 4, !tbaa !137, !noalias !536
  %add8.i.2.i.i = fadd float %134, %135
  %arrayidx11.i.2.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i129, i64 0, i64 2, i32 0, i64 2
  %arrayidx13.i.2.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i140, i64 0, i64 2, i32 0, i64 2
  %136 = fneg float %add8.i.1.i.i
  %137 = load <2 x float>, ptr %arrayidx5.i.i.i, align 4, !tbaa !137, !noalias !536
  %138 = load <2 x float>, ptr %arrayidx7.i.i.i, align 4, !tbaa !137, !noalias !536
  %139 = fadd <2 x float> %137, %138
  %140 = load float, ptr %arrayidx.i.1.i.i, align 4, !tbaa !137, !noalias !536
  %141 = load float, ptr %arrayidx.i9.1.i.i, align 4, !tbaa !137, !noalias !536
  %142 = load float, ptr %arrayidx11.i.1.i.i, align 4, !tbaa !137, !noalias !536
  %143 = load float, ptr %arrayidx13.i.1.i.i, align 4, !tbaa !137, !noalias !536
  %144 = insertelement <2 x float> poison, float %142, i64 0
  %145 = insertelement <2 x float> %144, float %140, i64 1
  %146 = insertelement <2 x float> poison, float %143, i64 0
  %147 = insertelement <2 x float> %146, float %141, i64 1
  %148 = fadd <2 x float> %145, %147
  %149 = load float, ptr %arrayidx.i.2.i.i, align 4, !tbaa !137, !noalias !536
  %150 = load float, ptr %arrayidx.i9.2.i.i, align 4, !tbaa !137, !noalias !536
  %151 = load float, ptr %arrayidx11.i.2.i.i, align 4, !tbaa !137, !noalias !536
  %152 = load float, ptr %arrayidx13.i.2.i.i, align 4, !tbaa !137, !noalias !536
  %153 = insertelement <2 x float> poison, float %151, i64 0
  %154 = insertelement <2 x float> %153, float %149, i64 1
  %155 = insertelement <2 x float> poison, float %152, i64 0
  %156 = insertelement <2 x float> %155, float %150, i64 1
  %157 = fadd <2 x float> %154, %156
  %158 = fneg <2 x float> %148
  %159 = shufflevector <2 x float> %157, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %160 = insertelement <2 x float> %159, float %add8.i.2.i.i, i64 0
  %161 = fmul <2 x float> %160, %158
  %162 = shufflevector <2 x float> %148, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %163 = insertelement <2 x float> %162, float %add8.i.1.i.i, i64 0
  %164 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %163, <2 x float> %157, <2 x float> %161)
  %165 = extractelement <2 x float> %148, i64 1
  %166 = extractelement <2 x float> %139, i64 0
  %shift = shufflevector <2 x float> %164, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %167 = fmul <2 x float> %139, %shift
  %mul8.i.i.i142 = extractelement <2 x float> %167, i64 0
  %168 = extractelement <2 x float> %164, i64 0
  %169 = tail call float @llvm.fmuladd.f32(float %add.i.i.i, float %168, float %mul8.i.i.i142)
  %170 = extractelement <2 x float> %139, i64 1
  %171 = fneg float %166
  %172 = shufflevector <2 x float> %139, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %173 = insertelement <2 x float> %172, float %add.i.i.i, i64 1
  %174 = fneg <2 x float> %173
  %175 = shufflevector <2 x float> %174, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %176 = insertelement <2 x float> %175, float %171, i64 0
  %177 = fmul <2 x float> %157, %176
  %178 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %173, <2 x float> %160, <2 x float> %177)
  %179 = fmul <2 x float> %163, %174
  %180 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %139, <2 x float> %148, <2 x float> %179)
  %neg.i84.i.i = fmul float %165, %171
  %181 = tail call float @llvm.fmuladd.f32(float %add.i.i.i, float %add8.i.1.i.i, float %neg.i84.i.i)
  %m_massmatrix = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8
  %ref.tmp44.sroa.4.0.m_massmatrix.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 1
  %ref.tmp44.sroa.5.0.m_massmatrix.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 2
  %ref.tmp44.sroa.6.0.m_massmatrix.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp44.sroa.6.0.m_massmatrix.sroa_idx, align 8, !tbaa.struct !318
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1
  %ref.tmp44.sroa.10.16.arrayidx7.i.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 2
  %ref.tmp44.sroa.11.16.arrayidx7.i.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp44.sroa.11.16.arrayidx7.i.sroa_idx, align 8, !tbaa.struct !318
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2
  %182 = shufflevector <2 x float> %157, <2 x float> %174, <2 x i32> <i32 1, i32 3>
  %183 = insertelement <2 x float> poison, float %136, i64 0
  %184 = insertelement <2 x float> %183, float %add8.i.2.i.i, i64 1
  %185 = fmul <2 x float> %182, %184
  %186 = shufflevector <2 x float> %148, <2 x float> %139, <2 x i32> <i32 1, i32 2>
  %187 = insertelement <2 x float> %157, float %add8.i.2.i.i, i64 0
  %188 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %186, <2 x float> %187, <2 x float> %185)
  %189 = extractelement <2 x float> %188, i64 0
  %190 = tail call float @llvm.fmuladd.f32(float %170, float %189, float %169)
  %div.i.i143 = fdiv float 1.000000e+00, %190
  %191 = insertelement <2 x float> poison, float %div.i.i143, i64 0
  %192 = shufflevector <2 x float> %191, <2 x float> poison, <2 x i32> zeroinitializer
  %193 = fmul <2 x float> %164, %192
  %194 = fmul <2 x float> %178, %192
  %195 = fmul <2 x float> %180, %192
  %196 = fmul <2 x float> %188, %192
  %mul33.i.i = fmul float %181, %div.i.i143
  %197 = extractelement <2 x float> %193, i64 0
  store float %197, ptr %m_massmatrix, align 4, !tbaa.struct !163
  %198 = extractelement <2 x float> %194, i64 0
  store float %198, ptr %ref.tmp44.sroa.4.0.m_massmatrix.sroa_idx, align 8, !tbaa.struct !293
  %199 = extractelement <2 x float> %195, i64 0
  store float %199, ptr %ref.tmp44.sroa.5.0.m_massmatrix.sroa_idx, align 4, !tbaa.struct !165
  %200 = shufflevector <2 x float> %193, <2 x float> %194, <2 x i32> <i32 1, i32 3>
  store <2 x float> %200, ptr %arrayidx7.i, align 4
  %201 = extractelement <2 x float> %195, i64 1
  store float %201, ptr %ref.tmp44.sroa.10.16.arrayidx7.i.sroa_idx, align 4, !tbaa.struct !165
  store <2 x float> %196, ptr %arrayidx11.i, align 4
  %ref.tmp44.sroa.15.32.arrayidx11.i.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 2
  store float %mul33.i.i, ptr %ref.tmp44.sroa.15.32.arrayidx11.i.sroa_idx, align 4, !tbaa.struct !165
  %ref.tmp44.sroa.16.32.arrayidx11.i.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 3
  store float 0.000000e+00, ptr %ref.tmp44.sroa.16.32.arrayidx11.i.sroa_idx, align 8, !tbaa.struct !318
  %m_split = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 5
  %202 = load float, ptr %m_split, align 8, !tbaa !137
  %cmp = fcmp ogt float %202, 0.000000e+00
  %203 = load float, ptr %m_drift, align 4, !tbaa !137
  br i1 %cmp, label %if.then, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit141.if.end_crit_edge

_ZNK10btSoftBody4Body15invWorldInertiaEv.exit141.if.end_crit_edge: ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit141
  %.pre217 = load float, ptr %arrayidx3.i, align 8, !tbaa !137
  %.pre218 = load float, ptr %ref.tmp17.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa !137
  %204 = insertelement <2 x float> poison, float %203, i64 0
  %205 = insertelement <2 x float> %204, float %.pre217, i64 1
  br label %if.end

if.then:                                          ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit141
  %mul.i145 = fmul float %202, %203
  %206 = load float, ptr %arrayidx3.i, align 8, !tbaa !137
  %mul4.i147 = fmul float %202, %206
  %207 = load float, ptr %ref.tmp17.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa !137
  %mul8.i = fmul float %202, %207
  %208 = insertelement <2 x float> poison, float %mul4.i147, i64 0
  %209 = shufflevector <2 x float> %208, <2 x float> poison, <2 x i32> zeroinitializer
  %210 = fmul <2 x float> %194, %209
  %211 = insertelement <2 x float> poison, float %mul.i145, i64 0
  %212 = shufflevector <2 x float> %211, <2 x float> poison, <2 x i32> zeroinitializer
  %213 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %193, <2 x float> %212, <2 x float> %210)
  %214 = insertelement <2 x float> poison, float %mul8.i, i64 0
  %215 = shufflevector <2 x float> %214, <2 x float> poison, <2 x i32> zeroinitializer
  %216 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %195, <2 x float> %215, <2 x float> %213)
  %217 = extractelement <2 x float> %196, i64 1
  %mul8.i20.i165 = fmul float %217, %mul4.i147
  %218 = extractelement <2 x float> %196, i64 0
  %219 = tail call float @llvm.fmuladd.f32(float %218, float %mul.i145, float %mul8.i20.i165)
  %220 = tail call float @llvm.fmuladd.f32(float %mul33.i.i, float %mul8.i, float %219)
  %retval.sroa.3.12.vec.insert.i169 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %220, i64 0
  %m_sdrift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7
  store <2 x float> %216, ptr %m_sdrift, align 4, !tbaa.struct !163
  %ref.tmp52.sroa.4.0.m_sdrift.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i169, ptr %ref.tmp52.sroa.4.0.m_sdrift.sroa_idx, align 4, !tbaa.struct !165
  %sub = fsub float 1.000000e+00, %202
  %221 = insertelement <2 x float> poison, float %sub, i64 0
  %222 = shufflevector <2 x float> %221, <2 x float> poison, <2 x i32> zeroinitializer
  %223 = insertelement <2 x float> poison, float %203, i64 0
  %224 = insertelement <2 x float> %223, float %206, i64 1
  %225 = fmul <2 x float> %222, %224
  %mul7.i176 = fmul float %sub, %207
  br label %if.end

if.end:                                           ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit141.if.end_crit_edge, %if.then
  %226 = phi float [ %.pre218, %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit141.if.end_crit_edge ], [ %mul7.i176, %if.then ]
  %227 = phi <2 x float> [ %205, %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit141.if.end_crit_edge ], [ %225, %if.then ]
  %conv = sitofp i32 %iterations to float
  %div.i = fdiv float 1.000000e+00, %conv
  %228 = insertelement <2 x float> poison, float %div.i, i64 0
  %229 = shufflevector <2 x float> %228, <2 x float> poison, <2 x i32> zeroinitializer
  %230 = fmul <2 x float> %229, %227
  store <2 x float> %230, ptr %m_drift, align 4, !tbaa !137
  %mul7.i.i = fmul float %div.i, %226
  store float %mul7.i.i, ptr %ref.tmp17.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa !137
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6AJoint5SolveEff(ptr noundef nonnull align 8 dereferenceable(224) %this, float %dt, float noundef %sor) unnamed_addr #0 align 2 {
entry:
  %impulse = alloca %"struct.btSoftBody::Impulse", align 8
  %ref.tmp32 = alloca %"struct.btSoftBody::Impulse", align 8
  %m_bodies = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1
  %m_rigid.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 0, i32 1
  %0 = load ptr, ptr %m_rigid.i, align 8, !tbaa !511
  %tobool.not.i = icmp eq ptr %0, null
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %entry
  %m_angularVelocity.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3
  %retval.sroa.0.0.copyload.i = load <2 x float>, ptr %m_angularVelocity.i.i, align 4, !tbaa.struct !163
  %retval.sroa.5.0.m_angularVelocity.i.sroa_idx.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3, i32 0, i64 2
  %retval.sroa.5.0.copyload.i = load <2 x float>, ptr %retval.sroa.5.0.m_angularVelocity.i.sroa_idx.i, align 4, !tbaa.struct !165
  br label %_ZNK10btSoftBody4Body15angularVelocityEv.exit

if.end.i:                                         ; preds = %entry
  %1 = load ptr, ptr %m_bodies, align 8, !tbaa !272
  %tobool3.not.i = icmp eq ptr %1, null
  br i1 %tobool3.not.i, label %_ZNK10btSoftBody4Body15angularVelocityEv.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  %m_av.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 14
  %retval.sroa.0.0.copyload11.i = load <2 x float>, ptr %m_av.i, align 8, !tbaa.struct !163
  %retval.sroa.5.0.m_av.sroa_idx.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 14, i32 0, i64 2
  %retval.sroa.5.0.copyload12.i = load <2 x float>, ptr %retval.sroa.5.0.m_av.sroa_idx.i, align 8, !tbaa.struct !165
  br label %_ZNK10btSoftBody4Body15angularVelocityEv.exit

_ZNK10btSoftBody4Body15angularVelocityEv.exit:    ; preds = %if.then.i, %if.end.i, %if.then4.i
  %retval.sroa.0.0.i = phi <2 x float> [ %retval.sroa.0.0.copyload.i, %if.then.i ], [ %retval.sroa.0.0.copyload11.i, %if.then4.i ], [ zeroinitializer, %if.end.i ]
  %retval.sroa.5.0.i = phi <2 x float> [ %retval.sroa.5.0.copyload.i, %if.then.i ], [ %retval.sroa.5.0.copyload12.i, %if.then4.i ], [ zeroinitializer, %if.end.i ]
  %arrayidx3 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1
  %m_rigid.i35 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1, i32 1
  %2 = load ptr, ptr %m_rigid.i35, align 8, !tbaa !511
  %tobool.not.i36 = icmp eq ptr %2, null
  br i1 %tobool.not.i36, label %if.end.i43, label %if.then.i41

if.then.i41:                                      ; preds = %_ZNK10btSoftBody4Body15angularVelocityEv.exit
  %m_angularVelocity.i.i37 = getelementptr inbounds %class.btRigidBody, ptr %2, i64 0, i32 3
  %retval.sroa.0.0.copyload.i38 = load <2 x float>, ptr %m_angularVelocity.i.i37, align 4, !tbaa.struct !163
  %retval.sroa.5.0.m_angularVelocity.i.sroa_idx.i39 = getelementptr inbounds %class.btRigidBody, ptr %2, i64 0, i32 3, i32 0, i64 2
  %retval.sroa.5.0.copyload.i40 = load <2 x float>, ptr %retval.sroa.5.0.m_angularVelocity.i.sroa_idx.i39, align 4, !tbaa.struct !165
  br label %_ZNK10btSoftBody4Body15angularVelocityEv.exit53

if.end.i43:                                       ; preds = %_ZNK10btSoftBody4Body15angularVelocityEv.exit
  %3 = load ptr, ptr %arrayidx3, align 8, !tbaa !272
  %tobool3.not.i42 = icmp eq ptr %3, null
  br i1 %tobool3.not.i42, label %_ZNK10btSoftBody4Body15angularVelocityEv.exit53, label %if.then4.i48

if.then4.i48:                                     ; preds = %if.end.i43
  %m_av.i44 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 14
  %retval.sroa.0.0.copyload11.i45 = load <2 x float>, ptr %m_av.i44, align 8, !tbaa.struct !163
  %retval.sroa.5.0.m_av.sroa_idx.i46 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 14, i32 0, i64 2
  %retval.sroa.5.0.copyload12.i47 = load <2 x float>, ptr %retval.sroa.5.0.m_av.sroa_idx.i46, align 8, !tbaa.struct !165
  br label %_ZNK10btSoftBody4Body15angularVelocityEv.exit53

_ZNK10btSoftBody4Body15angularVelocityEv.exit53:  ; preds = %if.then.i41, %if.end.i43, %if.then4.i48
  %retval.sroa.0.0.i49 = phi <2 x float> [ %retval.sroa.0.0.copyload.i38, %if.then.i41 ], [ %retval.sroa.0.0.copyload11.i45, %if.then4.i48 ], [ zeroinitializer, %if.end.i43 ]
  %retval.sroa.5.0.i50 = phi <2 x float> [ %retval.sroa.5.0.copyload.i40, %if.then.i41 ], [ %retval.sroa.5.0.copyload12.i47, %if.then4.i48 ], [ zeroinitializer, %if.end.i43 ]
  %4 = fsub <2 x float> %retval.sroa.0.0.i, %retval.sroa.0.0.i49
  %sub.i = extractelement <2 x float> %4, i64 0
  %5 = fsub <2 x float> %retval.sroa.0.0.i, %retval.sroa.0.0.i49
  %sub8.i = extractelement <2 x float> %5, i64 1
  %6 = fsub <2 x float> %retval.sroa.5.0.i, %retval.sroa.5.0.i50
  %sub14.i = extractelement <2 x float> %6, i64 0
  %m_axis = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 1
  %7 = load float, ptr %m_axis, align 8, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 1, i64 0, i32 0, i64 1
  %8 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %mul8.i.i = fmul float %sub8.i, %8
  %9 = tail call float @llvm.fmuladd.f32(float %sub.i, float %7, float %mul8.i.i)
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 1, i64 0, i32 0, i64 2
  %10 = load float, ptr %arrayidx12.i.i, align 8, !tbaa !137
  %11 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %10, float %9)
  %m_icontrol = getelementptr inbounds %"struct.btSoftBody::AJoint", ptr %this, i64 0, i32 2
  %12 = load ptr, ptr %m_icontrol, align 8, !tbaa !285
  %vtable = load ptr, ptr %12, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 1
  %13 = load ptr, ptr %vfn, align 8
  %call13 = tail call noundef float %13(ptr noundef nonnull align 8 dereferenceable(8) %12, ptr noundef nonnull %this, float noundef %11)
  %14 = load float, ptr %m_axis, align 8, !tbaa !137
  %mul.i = fmul float %call13, %14
  %15 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %mul4.i = fmul float %call13, %15
  %16 = load float, ptr %arrayidx12.i.i, align 8, !tbaa !137
  %mul8.i = fmul float %call13, %16
  %sub.i62 = fsub float %sub.i, %mul.i
  %sub8.i65 = fsub float %sub8.i, %mul4.i
  %sub14.i68 = fsub float %sub14.i, %mul8.i
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %impulse) #38
  %m_asVelocity.i = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 2
  %17 = getelementptr inbounds i8, ptr %impulse, i64 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %17, i8 0, i64 16, i1 false)
  store i8 1, ptr %m_asVelocity.i, align 8
  %m_massmatrix = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8
  %m_drift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6
  %m_cfm = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 3
  %18 = load float, ptr %m_cfm, align 8, !tbaa !137
  %mul.i74 = fmul float %sub.i62, %18
  %mul4.i76 = fmul float %sub8.i65, %18
  %mul8.i78 = fmul float %sub14.i68, %18
  %19 = load float, ptr %m_drift, align 4, !tbaa !137
  %add.i = fadd float %19, %mul.i74
  %arrayidx5.i84 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 1
  %20 = load float, ptr %arrayidx5.i84, align 8, !tbaa !137
  %add8.i = fadd float %mul4.i76, %20
  %arrayidx11.i86 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 2
  %21 = load float, ptr %arrayidx11.i86, align 4, !tbaa !137
  %add14.i = fadd float %mul8.i78, %21
  %arrayidx5.i.i93 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i96 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2
  %22 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 1
  %23 = load float, ptr %arrayidx5.i18.i, align 8, !tbaa !137
  %mul8.i20.i = fmul float %add8.i, %23
  %24 = tail call float @llvm.fmuladd.f32(float %22, float %add.i, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 2
  %25 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %26 = tail call float @llvm.fmuladd.f32(float %25, float %add14.i, float %24)
  %27 = load <4 x float>, ptr %m_massmatrix, align 4
  %28 = shufflevector <4 x float> %27, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %29 = load <4 x float>, ptr %arrayidx5.i.i93, align 8
  %30 = shufflevector <4 x float> %29, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %31 = load <4 x float>, ptr %arrayidx10.i.i96, align 4
  %32 = shufflevector <4 x float> %31, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %33 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %34 = load float, ptr %arrayidx5.i12.i, align 8, !tbaa !137
  %35 = insertelement <2 x float> poison, float %add8.i, i64 0
  %36 = shufflevector <2 x float> %35, <2 x float> poison, <2 x i32> zeroinitializer
  %37 = insertelement <2 x float> %30, float %34, i64 1
  %38 = fmul <2 x float> %36, %37
  %39 = insertelement <2 x float> %28, float %33, i64 1
  %40 = insertelement <2 x float> poison, float %add.i, i64 0
  %41 = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> zeroinitializer
  %42 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %39, <2 x float> %41, <2 x float> %38)
  %43 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %44 = insertelement <2 x float> %32, float %43, i64 1
  %45 = insertelement <2 x float> poison, float %add14.i, i64 0
  %46 = shufflevector <2 x float> %45, <2 x float> poison, <2 x i32> zeroinitializer
  %47 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %44, <2 x float> %46, <2 x float> %42)
  %48 = insertelement <2 x float> poison, float %sor, i64 0
  %49 = shufflevector <2 x float> %48, <2 x float> poison, <2 x i32> zeroinitializer
  %50 = fmul <2 x float> %47, %49
  %mul8.i107 = fmul float %26, %sor
  %retval.sroa.3.12.vec.insert.i110 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i107, i64 0
  store <2 x float> %50, ptr %impulse, align 8, !tbaa.struct !163
  %ref.tmp18.sroa.4.0.m_velocity.sroa_idx = getelementptr inbounds i8, ptr %impulse, i64 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i110, ptr %ref.tmp18.sroa.4.0.m_velocity.sroa_idx, align 8, !tbaa.struct !165
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %ref.tmp32) #38
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %ref.tmp32, ptr noundef nonnull align 8 dereferenceable(36) %impulse, i64 36, i1 false), !tbaa.struct !531
  %51 = load <2 x float>, ptr %ref.tmp32, align 8, !tbaa !137, !alias.scope !541
  %52 = fneg <2 x float> %51
  %arrayidx7.i.i113 = getelementptr inbounds [4 x float], ptr %ref.tmp32, i64 0, i64 2
  %53 = load float, ptr %arrayidx7.i.i113, align 8, !tbaa !137, !alias.scope !541
  %fneg8.i.i = fneg float %53
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i.i, i64 0
  store <2 x float> %52, ptr %ref.tmp32, align 8, !tbaa.struct !163, !alias.scope !541
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i, ptr %arrayidx7.i.i113, align 8, !tbaa.struct !165, !alias.scope !541
  %m_drift.i = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp32, i64 0, i32 1
  %54 = load <2 x float>, ptr %m_drift.i, align 8, !tbaa !137, !alias.scope !541
  %55 = fneg <2 x float> %54
  %arrayidx7.i10.i = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp32, i64 0, i32 1, i32 0, i64 2
  %56 = load float, ptr %arrayidx7.i10.i, align 8, !tbaa !137, !alias.scope !541
  %fneg8.i11.i = fneg float %56
  %retval.sroa.3.12.vec.insert.i14.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i11.i, i64 0
  store <2 x float> %55, ptr %m_drift.i, align 8, !tbaa.struct !163, !alias.scope !541
  store <2 x float> %retval.sroa.3.12.vec.insert.i14.i, ptr %arrayidx7.i10.i, align 8, !tbaa.struct !165, !alias.scope !541
  %m_asVelocity.i114 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp32, i64 0, i32 2
  %bf.load.i115 = load i8, ptr %m_asVelocity.i114, align 8
  %57 = and i8 %bf.load.i115, 1
  %tobool.not.i116 = icmp eq i8 %57, 0
  br i1 %tobool.not.i116, label %if.end.i118, label %if.then.i117

if.then.i117:                                     ; preds = %_ZNK10btSoftBody4Body15angularVelocityEv.exit53
  call void @_ZNK10btSoftBody4Body14applyVAImpulseERK9btVector3(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp32)
  %bf.load2.pre.i = load i8, ptr %m_asVelocity.i114, align 8
  br label %if.end.i118

if.end.i118:                                      ; preds = %if.then.i117, %_ZNK10btSoftBody4Body15angularVelocityEv.exit53
  %bf.load2.i = phi i8 [ %bf.load2.pre.i, %if.then.i117 ], [ %bf.load.i115, %_ZNK10btSoftBody4Body15angularVelocityEv.exit53 ]
  %bf.shl3.mask.i = and i8 %bf.load2.i, 2
  %tobool6.not.i = icmp eq i8 %bf.shl3.mask.i, 0
  br i1 %tobool6.not.i, label %if.end.i128, label %if.then7.i

if.then7.i:                                       ; preds = %if.end.i118
  call void @_ZNK10btSoftBody4Body14applyDAImpulseERK9btVector3(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %m_drift.i)
  br label %if.end.i128

if.end.i128:                                      ; preds = %if.end.i118, %if.then7.i
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %ref.tmp32) #38
  call void @_ZNK10btSoftBody4Body14applyVAImpulseERK9btVector3(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx3, ptr noundef nonnull align 4 dereferenceable(16) %impulse)
  %bf.load2.pre.i123 = load i8, ptr %m_asVelocity.i, align 8
  %bf.shl3.mask.i126 = and i8 %bf.load2.pre.i123, 2
  %tobool6.not.i127 = icmp eq i8 %bf.shl3.mask.i126, 0
  br i1 %tobool6.not.i127, label %_ZNK10btSoftBody4Body13applyAImpulseERKNS_7ImpulseE.exit131, label %if.then7.i130

if.then7.i130:                                    ; preds = %if.end.i128
  %m_drift.i129 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 1
  call void @_ZNK10btSoftBody4Body14applyDAImpulseERK9btVector3(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx3, ptr noundef nonnull align 4 dereferenceable(16) %m_drift.i129)
  br label %_ZNK10btSoftBody4Body13applyAImpulseERKNS_7ImpulseE.exit131

_ZNK10btSoftBody4Body13applyAImpulseERKNS_7ImpulseE.exit131: ; preds = %if.end.i128, %if.then7.i130
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %impulse) #38
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6AJoint9TerminateEf(ptr noundef nonnull align 8 dereferenceable(224) %this, float %dt) unnamed_addr #0 align 2 {
entry:
  %ref.tmp = alloca %class.btVector3, align 8
  %m_split = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 5
  %0 = load float, ptr %m_split, align 8, !tbaa !269
  %cmp = fcmp ogt float %0, 0.000000e+00
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %m_bodies = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #38
  %m_sdrift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7
  %1 = load <2 x float>, ptr %m_sdrift, align 4, !tbaa !137
  %2 = fneg <2 x float> %1
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7, i32 0, i64 2
  %3 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %fneg8.i = fneg float %3
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i, i64 0
  store <2 x float> %2, ptr %ref.tmp, align 8
  %4 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp, i64 0, i32 1
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %4, align 8
  call void @_ZNK10btSoftBody4Body14applyDAImpulseERK9btVector3(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  %arrayidx3 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1
  call void @_ZNK10btSoftBody4Body14applyDAImpulseERK9btVector3(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx3, ptr noundef nonnull align 4 dereferenceable(16) %m_sdrift)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNK10btSoftBody4Body14applyDAImpulseERK9btVector3(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef nonnull align 4 dereferenceable(16) %impulse) local_unnamed_addr #0 comdat align 2 {
entry:
  %m_rigid = getelementptr inbounds %"struct.btSoftBody::Body", ptr %this, i64 0, i32 1
  %0 = load ptr, ptr %m_rigid, align 8, !tbaa !511
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %m_invInertiaTensorWorld.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1
  %1 = load float, ptr %impulse, align 4, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 0, i32 0, i64 1
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 1
  %2 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %arrayidx10.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %3 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %arrayidx.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 1
  %arrayidx5.i12.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 2
  %4 = load float, ptr %arrayidx.i17.i.i, align 8, !tbaa !137
  %arrayidx5.i18.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 2, i32 0, i64 1
  %5 = load float, ptr %arrayidx5.i18.i.i, align 4, !tbaa !137
  %mul8.i20.i.i = fmul float %2, %5
  %6 = tail call float @llvm.fmuladd.f32(float %4, float %1, float %mul8.i20.i.i)
  %arrayidx10.i21.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 2, i32 0, i64 2
  %7 = load float, ptr %arrayidx10.i21.i.i, align 8, !tbaa !137
  %8 = tail call float @llvm.fmuladd.f32(float %7, float %3, float %6)
  %m_angularFactor.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 5
  %arrayidx13.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 5, i32 0, i64 2
  %9 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %mul14.i.i = fmul float %8, %9
  %m_angularVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3
  %10 = load float, ptr %m_invInertiaTensorWorld.i, align 8, !tbaa !137
  %11 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %12 = load float, ptr %arrayidx10.i.i.i, align 8, !tbaa !137
  %13 = load float, ptr %arrayidx.i.i.i, align 8, !tbaa !137
  %14 = load float, ptr %arrayidx5.i12.i.i, align 4, !tbaa !137
  %15 = insertelement <2 x float> poison, float %2, i64 0
  %16 = shufflevector <2 x float> %15, <2 x float> poison, <2 x i32> zeroinitializer
  %17 = insertelement <2 x float> poison, float %11, i64 0
  %18 = insertelement <2 x float> %17, float %14, i64 1
  %19 = fmul <2 x float> %16, %18
  %20 = insertelement <2 x float> poison, float %10, i64 0
  %21 = insertelement <2 x float> %20, float %13, i64 1
  %22 = insertelement <2 x float> poison, float %1, i64 0
  %23 = shufflevector <2 x float> %22, <2 x float> poison, <2 x i32> zeroinitializer
  %24 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %21, <2 x float> %23, <2 x float> %19)
  %25 = load float, ptr %arrayidx10.i15.i.i, align 8, !tbaa !137
  %26 = insertelement <2 x float> poison, float %12, i64 0
  %27 = insertelement <2 x float> %26, float %25, i64 1
  %28 = insertelement <2 x float> poison, float %3, i64 0
  %29 = shufflevector <2 x float> %28, <2 x float> poison, <2 x i32> zeroinitializer
  %30 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %27, <2 x float> %29, <2 x float> %24)
  %31 = load <2 x float>, ptr %m_angularFactor.i, align 4, !tbaa !137
  %32 = fmul <2 x float> %30, %31
  %33 = load <2 x float>, ptr %m_angularVelocity.i, align 8, !tbaa !137
  %34 = fadd <2 x float> %32, %33
  store <2 x float> %34, ptr %m_angularVelocity.i, align 8, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3, i32 0, i64 2
  %35 = load float, ptr %arrayidx12.i.i, align 8, !tbaa !137
  %add13.i.i = fadd float %mul14.i.i, %35
  store float %add13.i.i, ptr %arrayidx12.i.i, align 8, !tbaa !137
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %36 = load ptr, ptr %this, align 8, !tbaa !272
  %tobool3.not = icmp eq ptr %36, null
  br i1 %tobool3.not, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  %m_invwi.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7
  %37 = load float, ptr %impulse, align 4, !tbaa !137
  %arrayidx5.i.i.i9 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx7.i.i.i10 = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 1
  %38 = load float, ptr %arrayidx7.i.i.i10, align 4, !tbaa !137
  %arrayidx10.i.i.i12 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i.i13 = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %39 = load float, ptr %arrayidx12.i.i.i13, align 4, !tbaa !137
  %arrayidx.i.i.i14 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i.i15 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i17 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i18 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 2
  %40 = load float, ptr %arrayidx.i17.i.i18, align 4, !tbaa !137
  %arrayidx5.i18.i.i19 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %41 = load float, ptr %arrayidx5.i18.i.i19, align 4, !tbaa !137
  %mul8.i20.i.i20 = fmul float %38, %41
  %42 = tail call float @llvm.fmuladd.f32(float %40, float %37, float %mul8.i20.i.i20)
  %arrayidx10.i21.i.i21 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %43 = load float, ptr %arrayidx10.i21.i.i21, align 4, !tbaa !137
  %44 = tail call float @llvm.fmuladd.f32(float %43, float %39, float %42)
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 10, i64 1
  %45 = load float, ptr %m_invwi.i, align 4, !tbaa !137
  %46 = load float, ptr %arrayidx5.i.i.i9, align 4, !tbaa !137
  %47 = load float, ptr %arrayidx10.i.i.i12, align 4, !tbaa !137
  %48 = load float, ptr %arrayidx.i.i.i14, align 4, !tbaa !137
  %49 = load float, ptr %arrayidx5.i12.i.i15, align 4, !tbaa !137
  %50 = insertelement <2 x float> poison, float %38, i64 0
  %51 = shufflevector <2 x float> %50, <2 x float> poison, <2 x i32> zeroinitializer
  %52 = insertelement <2 x float> poison, float %46, i64 0
  %53 = insertelement <2 x float> %52, float %49, i64 1
  %54 = fmul <2 x float> %51, %53
  %55 = insertelement <2 x float> poison, float %45, i64 0
  %56 = insertelement <2 x float> %55, float %48, i64 1
  %57 = insertelement <2 x float> poison, float %37, i64 0
  %58 = shufflevector <2 x float> %57, <2 x float> poison, <2 x i32> zeroinitializer
  %59 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %56, <2 x float> %58, <2 x float> %54)
  %60 = load float, ptr %arrayidx10.i15.i.i17, align 4, !tbaa !137
  %61 = insertelement <2 x float> poison, float %47, i64 0
  %62 = insertelement <2 x float> %61, float %60, i64 1
  %63 = insertelement <2 x float> poison, float %39, i64 0
  %64 = shufflevector <2 x float> %63, <2 x float> poison, <2 x i32> zeroinitializer
  %65 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %62, <2 x float> %64, <2 x float> %59)
  %66 = load <2 x float>, ptr %arrayidx.i, align 4, !tbaa !137
  %67 = fadd <2 x float> %65, %66
  store <2 x float> %67, ptr %arrayidx.i, align 4, !tbaa !137
  %arrayidx12.i.i25 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 10, i64 1, i32 0, i64 2
  %68 = load float, ptr %arrayidx12.i.i25, align 4, !tbaa !137
  %add13.i.i26 = fadd float %44, %68
  store float %add13.i.i26, ptr %arrayidx12.i.i25, align 4, !tbaa !137
  %m_ndimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 12
  %69 = load i32, ptr %m_ndimpulses.i, align 4, !tbaa !322
  %inc.i = add nsw i32 %69, 1
  store i32 %inc.i, ptr %m_ndimpulses.i, align 4, !tbaa !322
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6CJoint7PrepareEfi(ptr nocapture noundef nonnull align 8 dereferenceable(244) %this, float noundef %dt, i32 noundef %iterations) unnamed_addr #0 align 2 {
entry:
  %m_rigid.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 0, i32 1
  %0 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool.not.i.i = icmp eq ptr %0, null
  br i1 %tobool.not.i.i, label %_ZNK10btSoftBody4Body8activateEv.exit.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %entry
  tail call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %0, i1 noundef zeroext false)
  br label %_ZNK10btSoftBody4Body8activateEv.exit.i

_ZNK10btSoftBody4Body8activateEv.exit.i:          ; preds = %if.then.i.i, %entry
  %m_rigid.i4.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1, i32 1
  %1 = load ptr, ptr %m_rigid.i4.i, align 8, !tbaa !511
  %tobool.not.i5.i = icmp eq ptr %1, null
  br i1 %tobool.not.i5.i, label %_ZN10btSoftBody5Joint7PrepareEfi.exit, label %if.then.i6.i

if.then.i6.i:                                     ; preds = %_ZNK10btSoftBody4Body8activateEv.exit.i
  tail call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %1, i1 noundef zeroext false)
  br label %_ZN10btSoftBody5Joint7PrepareEfi.exit

_ZN10btSoftBody5Joint7PrepareEfi.exit:            ; preds = %_ZNK10btSoftBody4Body8activateEv.exit.i, %if.then.i6.i
  %m_life = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 1
  %2 = load i32, ptr %m_life, align 8, !tbaa !544
  %cmp = icmp eq i32 %2, 0
  %inc = add nsw i32 %2, 1
  store i32 %inc, ptr %m_life, align 8, !tbaa !544
  %m_maxlife = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 2
  %3 = load i32, ptr %m_maxlife, align 4, !tbaa !546
  %cmp3 = icmp sge i32 %2, %3
  %m_delete = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 9
  %frombool4 = zext i1 %cmp3 to i8
  store i8 %frombool4, ptr %m_delete, align 4, !tbaa !484
  %m_drift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6
  br i1 %cmp, label %if.then, label %if.else

if.then:                                          ; preds = %_ZN10btSoftBody5Joint7PrepareEfi.exit
  %m_erp = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 4
  %arrayidx3.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 1
  %4 = load <4 x float>, ptr %m_drift, align 4
  %5 = shufflevector <4 x float> %4, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %6 = load float, ptr %m_erp, align 4, !tbaa !137
  %7 = load float, ptr %arrayidx3.i, align 8, !tbaa !137
  %8 = insertelement <2 x float> %5, float %6, i64 1
  %9 = insertelement <2 x float> poison, float %6, i64 0
  %10 = insertelement <2 x float> %9, float %7, i64 1
  %11 = fmul <2 x float> %8, %10
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6, i32 0, i64 2
  %12 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %mul8.i = fmul float %6, %12
  %div.i = fdiv float 1.000000e+00, %dt
  %13 = insertelement <2 x float> poison, float %div.i, i64 0
  %14 = shufflevector <2 x float> %13, <2 x float> poison, <2 x i32> zeroinitializer
  %15 = fmul <2 x float> %14, %11
  %mul8.i.i = fmul float %div.i, %mul8.i
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i, i64 0
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i, ptr %arrayidx7.i, align 4, !tbaa.struct !165
  %m_split = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 5
  %16 = load float, ptr %m_split, align 8, !tbaa !137
  %cmp9 = fcmp ogt float %16, 0.000000e+00
  br i1 %cmp9, label %if.then10, label %if.end

if.then10:                                        ; preds = %if.then
  %m_massmatrix = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8
  %17 = extractelement <2 x float> %15, i64 0
  %mul.i34 = fmul float %16, %17
  %18 = extractelement <2 x float> %15, i64 1
  %mul4.i36 = fmul float %16, %18
  %mul8.i38 = fmul float %16, %mul8.i.i
  %arrayidx5.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 2
  %19 = load <4 x float>, ptr %m_massmatrix, align 4
  %20 = shufflevector <4 x float> %19, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %21 = load <4 x float>, ptr %arrayidx5.i.i, align 8
  %22 = shufflevector <4 x float> %21, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %23 = load <4 x float>, ptr %arrayidx10.i.i, align 4
  %24 = shufflevector <4 x float> %23, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %25 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %26 = load float, ptr %arrayidx5.i12.i, align 8, !tbaa !137
  %27 = insertelement <2 x float> poison, float %mul4.i36, i64 0
  %28 = shufflevector <2 x float> %27, <2 x float> poison, <2 x i32> zeroinitializer
  %29 = insertelement <2 x float> %22, float %26, i64 1
  %30 = fmul <2 x float> %28, %29
  %31 = insertelement <2 x float> %20, float %25, i64 1
  %32 = insertelement <2 x float> poison, float %mul.i34, i64 0
  %33 = shufflevector <2 x float> %32, <2 x float> poison, <2 x i32> zeroinitializer
  %34 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %31, <2 x float> %33, <2 x float> %30)
  %35 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %36 = insertelement <2 x float> %24, float %35, i64 1
  %37 = insertelement <2 x float> poison, float %mul8.i38, i64 0
  %38 = shufflevector <2 x float> %37, <2 x float> poison, <2 x i32> zeroinitializer
  %39 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %36, <2 x float> %38, <2 x float> %34)
  %arrayidx.i17.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2
  %40 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 1
  %41 = load float, ptr %arrayidx5.i18.i, align 8, !tbaa !137
  %mul8.i20.i = fmul float %mul4.i36, %41
  %42 = tail call float @llvm.fmuladd.f32(float %40, float %mul.i34, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 2
  %43 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %44 = tail call float @llvm.fmuladd.f32(float %43, float %mul8.i38, float %42)
  %retval.sroa.3.12.vec.insert.i48 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %44, i64 0
  %m_sdrift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7
  store <2 x float> %39, ptr %m_sdrift, align 4, !tbaa.struct !163
  %ref.tmp11.sroa.4.0.m_sdrift.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i48, ptr %ref.tmp11.sroa.4.0.m_sdrift.sroa_idx, align 4, !tbaa.struct !165
  %sub = fsub float 1.000000e+00, %16
  %45 = insertelement <2 x float> poison, float %sub, i64 0
  %46 = shufflevector <2 x float> %45, <2 x float> poison, <2 x i32> zeroinitializer
  %47 = fmul <2 x float> %46, %15
  %mul7.i = fmul float %sub, %mul8.i.i
  br label %if.end

if.end:                                           ; preds = %if.then10, %if.then
  %48 = phi float [ %mul7.i, %if.then10 ], [ %mul8.i.i, %if.then ]
  %49 = phi <2 x float> [ %47, %if.then10 ], [ %15, %if.then ]
  %conv = sitofp i32 %iterations to float
  %div.i54 = fdiv float 1.000000e+00, %conv
  %50 = insertelement <2 x float> poison, float %div.i54, i64 0
  %51 = shufflevector <2 x float> %50, <2 x float> poison, <2 x i32> zeroinitializer
  %52 = fmul <2 x float> %51, %49
  store <2 x float> %52, ptr %m_drift, align 4, !tbaa !137
  %mul7.i.i = fmul float %div.i54, %48
  store float %mul7.i.i, ptr %arrayidx7.i, align 4, !tbaa !137
  br label %if.end32

if.else:                                          ; preds = %_ZN10btSoftBody5Joint7PrepareEfi.exit
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(32) %m_drift, i8 0, i64 32, i1 false)
  br label %if.end32

if.end32:                                         ; preds = %if.else, %if.end
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6CJoint5SolveEff(ptr noundef nonnull align 8 dereferenceable(244) %this, float %dt, float noundef %sor) unnamed_addr #0 align 2 {
entry:
  %impulse = alloca %"struct.btSoftBody::Impulse", align 8
  %ref.tmp68 = alloca %"struct.btSoftBody::Impulse", align 8
  %ref.tmp77 = alloca %"struct.btSoftBody::Impulse", align 8
  %ref.tmp90 = alloca %"struct.btSoftBody::Impulse", align 8
  %m_bodies = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1
  %m_rpos = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 3
  %m_rigid.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 0, i32 1
  %0 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool.not.i.i = icmp eq ptr %0, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i10.i

if.end.i.i:                                       ; preds = %entry
  %1 = load ptr, ptr %m_bodies, align 8, !tbaa !272
  %tobool3.not.i.i = icmp eq ptr %1, null
  br i1 %tobool3.not.i.i, label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit, label %if.then5.i.i

if.then.i10.i:                                    ; preds = %entry
  %m_linearVelocity.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 2
  %retval.sroa.0.0.copyload.i.i = load <2 x float>, ptr %m_linearVelocity.i.i.i, align 4, !tbaa.struct !163
  %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 2, i32 0, i64 2
  %retval.sroa.5.0.copyload.i.i = load <2 x float>, ptr %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i, align 4, !tbaa.struct !165
  %m_angularVelocity.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3
  %arrayidx.i.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3, i32 0, i64 1
  %arrayidx7.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 3, i64 0, i32 0, i64 1
  %2 = load float, ptr %m_angularVelocity.i.i.i, align 4, !tbaa !137
  %3 = load <2 x float>, ptr %arrayidx.i.i.i.i, align 4, !tbaa !137
  %4 = load <2 x float>, ptr %arrayidx7.i.i.i.i, align 4, !tbaa !137
  %5 = load float, ptr %m_rpos, align 8, !tbaa !137
  %6 = insertelement <2 x float> %3, float %2, i64 0
  %7 = shufflevector <2 x float> %6, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %8 = fneg <2 x float> %7
  %9 = fmul <2 x float> %4, %8
  %10 = shufflevector <2 x float> %4, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %11 = insertelement <2 x float> %10, float %5, i64 1
  %12 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %3, <2 x float> %11, <2 x float> %9)
  %13 = extractelement <2 x float> %3, i64 0
  %14 = fneg float %13
  %neg30.i.i.i.i = fmul float %5, %14
  %15 = extractelement <2 x float> %4, i64 0
  %16 = tail call float @llvm.fmuladd.f32(float %2, float %15, float %neg30.i.i.i.i)
  %retval.sroa.3.12.vec.insert.i.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %16, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit

if.then5.i.i:                                     ; preds = %if.end.i.i
  %retval.sroa.5.0.m_lv.sroa_idx.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 13, i32 0, i64 2
  %retval.sroa.5.0.copyload12.i.i = load <2 x float>, ptr %retval.sroa.5.0.m_lv.sroa_idx.i.i, align 8, !tbaa.struct !165
  %m_lv.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 13
  %retval.sroa.0.0.copyload11.i.i = load <2 x float>, ptr %m_lv.i.i, align 8, !tbaa.struct !163
  %m_av.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 14
  %arrayidx.i.i15.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 14, i32 0, i64 1
  %arrayidx7.i.i18.i.i = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 3, i64 0, i32 0, i64 1
  %17 = load float, ptr %m_av.i.i, align 4, !tbaa !137
  %18 = load <2 x float>, ptr %arrayidx.i.i15.i.i, align 4, !tbaa !137
  %19 = load <2 x float>, ptr %arrayidx7.i.i18.i.i, align 4, !tbaa !137
  %20 = load float, ptr %m_rpos, align 8, !tbaa !137
  %21 = insertelement <2 x float> %18, float %17, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %23 = fneg <2 x float> %22
  %24 = fmul <2 x float> %19, %23
  %25 = shufflevector <2 x float> %19, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %26 = insertelement <2 x float> %25, float %20, i64 1
  %27 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %18, <2 x float> %26, <2 x float> %24)
  %28 = extractelement <2 x float> %18, i64 0
  %29 = fneg float %28
  %neg30.i.i21.i.i = fmul float %20, %29
  %30 = extractelement <2 x float> %19, i64 0
  %31 = tail call float @llvm.fmuladd.f32(float %17, float %30, float %neg30.i.i21.i.i)
  %retval.sroa.3.12.vec.insert.i.i24.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %31, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit

_ZNK10btSoftBody4Body8velocityERK9btVector3.exit: ; preds = %if.end.i.i, %if.then.i10.i, %if.then5.i.i
  %retval.sroa.5.0.i22.i = phi <2 x float> [ %retval.sroa.5.0.copyload.i.i, %if.then.i10.i ], [ %retval.sroa.5.0.copyload12.i.i, %if.then5.i.i ], [ zeroinitializer, %if.end.i.i ]
  %retval.sroa.0.0.i20.i = phi <2 x float> [ %retval.sroa.0.0.copyload.i.i, %if.then.i10.i ], [ %retval.sroa.0.0.copyload11.i.i, %if.then5.i.i ], [ zeroinitializer, %if.end.i.i ]
  %retval.sroa.0.0.i12.i = phi <2 x float> [ %12, %if.then.i10.i ], [ %27, %if.then5.i.i ], [ zeroinitializer, %if.end.i.i ]
  %retval.sroa.5.0.i13.i = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i.i.i.i, %if.then.i10.i ], [ %retval.sroa.3.12.vec.insert.i.i24.i.i, %if.then5.i.i ], [ zeroinitializer, %if.end.i.i ]
  %32 = fadd <2 x float> %retval.sroa.0.0.i20.i, %retval.sroa.0.0.i12.i
  %33 = fadd <2 x float> %retval.sroa.5.0.i22.i, %retval.sroa.5.0.i13.i
  %arrayidx4 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1
  %arrayidx6 = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 3, i64 1
  %m_rigid.i.i98 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1, i32 1
  %34 = load ptr, ptr %m_rigid.i.i98, align 8, !tbaa !511
  %tobool.not.i.i99 = icmp eq ptr %34, null
  br i1 %tobool.not.i.i99, label %if.end.i.i101, label %if.then.i10.i117

if.end.i.i101:                                    ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit
  %35 = load ptr, ptr %arrayidx4, align 8, !tbaa !272
  %tobool3.not.i.i100 = icmp eq ptr %35, null
  br i1 %tobool3.not.i.i100, label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152, label %if.then5.i.i133

if.then.i10.i117:                                 ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit
  %m_linearVelocity.i.i.i102 = getelementptr inbounds %class.btRigidBody, ptr %34, i64 0, i32 2
  %retval.sroa.0.0.copyload.i.i103 = load <2 x float>, ptr %m_linearVelocity.i.i.i102, align 4, !tbaa.struct !163
  %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i104 = getelementptr inbounds %class.btRigidBody, ptr %34, i64 0, i32 2, i32 0, i64 2
  %retval.sroa.5.0.copyload.i.i105 = load <2 x float>, ptr %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i104, align 4, !tbaa.struct !165
  %m_angularVelocity.i.i.i106 = getelementptr inbounds %class.btRigidBody, ptr %34, i64 0, i32 3
  %arrayidx.i.i.i.i107 = getelementptr inbounds %class.btRigidBody, ptr %34, i64 0, i32 3, i32 0, i64 1
  %arrayidx7.i.i.i.i110 = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 3, i64 1, i32 0, i64 1
  %36 = load float, ptr %m_angularVelocity.i.i.i106, align 4, !tbaa !137
  %37 = load <2 x float>, ptr %arrayidx.i.i.i.i107, align 4, !tbaa !137
  %38 = load <2 x float>, ptr %arrayidx7.i.i.i.i110, align 4, !tbaa !137
  %39 = load float, ptr %arrayidx6, align 8, !tbaa !137
  %40 = insertelement <2 x float> %37, float %36, i64 0
  %41 = shufflevector <2 x float> %40, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %42 = fneg <2 x float> %41
  %43 = fmul <2 x float> %38, %42
  %44 = shufflevector <2 x float> %38, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %45 = insertelement <2 x float> %44, float %39, i64 1
  %46 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %37, <2 x float> %45, <2 x float> %43)
  %47 = extractelement <2 x float> %37, i64 0
  %48 = fneg float %47
  %neg30.i.i.i.i113 = fmul float %39, %48
  %49 = extractelement <2 x float> %38, i64 0
  %50 = tail call float @llvm.fmuladd.f32(float %36, float %49, float %neg30.i.i.i.i113)
  %retval.sroa.3.12.vec.insert.i.i.i.i116 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %50, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152

if.then5.i.i133:                                  ; preds = %if.end.i.i101
  %retval.sroa.5.0.m_lv.sroa_idx.i.i118 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %35, i64 0, i32 13, i32 0, i64 2
  %retval.sroa.5.0.copyload12.i.i119 = load <2 x float>, ptr %retval.sroa.5.0.m_lv.sroa_idx.i.i118, align 8, !tbaa.struct !165
  %m_lv.i.i120 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %35, i64 0, i32 13
  %retval.sroa.0.0.copyload11.i.i121 = load <2 x float>, ptr %m_lv.i.i120, align 8, !tbaa.struct !163
  %m_av.i.i122 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %35, i64 0, i32 14
  %arrayidx.i.i15.i.i123 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %35, i64 0, i32 14, i32 0, i64 1
  %arrayidx7.i.i18.i.i126 = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 3, i64 1, i32 0, i64 1
  %51 = load float, ptr %m_av.i.i122, align 4, !tbaa !137
  %52 = load <2 x float>, ptr %arrayidx.i.i15.i.i123, align 4, !tbaa !137
  %53 = load <2 x float>, ptr %arrayidx7.i.i18.i.i126, align 4, !tbaa !137
  %54 = load float, ptr %arrayidx6, align 8, !tbaa !137
  %55 = insertelement <2 x float> %52, float %51, i64 0
  %56 = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %57 = fneg <2 x float> %56
  %58 = fmul <2 x float> %53, %57
  %59 = shufflevector <2 x float> %53, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %60 = insertelement <2 x float> %59, float %54, i64 1
  %61 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %52, <2 x float> %60, <2 x float> %58)
  %62 = extractelement <2 x float> %52, i64 0
  %63 = fneg float %62
  %neg30.i.i21.i.i129 = fmul float %54, %63
  %64 = extractelement <2 x float> %53, i64 0
  %65 = tail call float @llvm.fmuladd.f32(float %51, float %64, float %neg30.i.i21.i.i129)
  %retval.sroa.3.12.vec.insert.i.i24.i.i132 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %65, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152

_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152: ; preds = %if.end.i.i101, %if.then.i10.i117, %if.then5.i.i133
  %retval.sroa.5.0.i22.i134 = phi <2 x float> [ %retval.sroa.5.0.copyload.i.i105, %if.then.i10.i117 ], [ %retval.sroa.5.0.copyload12.i.i119, %if.then5.i.i133 ], [ zeroinitializer, %if.end.i.i101 ]
  %retval.sroa.0.0.i20.i135 = phi <2 x float> [ %retval.sroa.0.0.copyload.i.i103, %if.then.i10.i117 ], [ %retval.sroa.0.0.copyload11.i.i121, %if.then5.i.i133 ], [ zeroinitializer, %if.end.i.i101 ]
  %retval.sroa.0.0.i12.i136 = phi <2 x float> [ %46, %if.then.i10.i117 ], [ %61, %if.then5.i.i133 ], [ zeroinitializer, %if.end.i.i101 ]
  %retval.sroa.5.0.i13.i137 = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i.i.i.i116, %if.then.i10.i117 ], [ %retval.sroa.3.12.vec.insert.i.i24.i.i132, %if.then5.i.i133 ], [ zeroinitializer, %if.end.i.i101 ]
  %66 = fadd <2 x float> %retval.sroa.5.0.i22.i134, %retval.sroa.5.0.i13.i137
  %67 = fsub <2 x float> %33, %66
  %sub14.i = extractelement <2 x float> %67, i64 0
  %m_normal = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 4
  %68 = fadd <2 x float> %retval.sroa.0.0.i20.i135, %retval.sroa.0.0.i12.i136
  %69 = fsub <2 x float> %32, %68
  %70 = load <2 x float>, ptr %m_normal, align 8, !tbaa !137
  %71 = fmul <2 x float> %69, %70
  %mul8.i.i = extractelement <2 x float> %71, i64 1
  %72 = extractelement <2 x float> %70, i64 0
  %73 = extractelement <2 x float> %69, i64 0
  %74 = tail call float @llvm.fmuladd.f32(float %73, float %72, float %mul8.i.i)
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 4, i32 0, i64 2
  %75 = load float, ptr %arrayidx12.i.i, align 8, !tbaa !137
  %76 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %75, float %74)
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %impulse) #38
  %m_asVelocity.i = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 2
  store i8 1, ptr %m_asVelocity.i, align 8
  %m_drift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 6
  %77 = getelementptr inbounds i8, ptr %impulse, i64 16
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %77, i8 0, i64 16, i1 false)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %impulse, ptr noundef nonnull align 4 dereferenceable(16) %m_drift, i64 16, i1 false), !tbaa.struct !163
  %cmp = fcmp olt float %76, 0.000000e+00
  br i1 %cmp, label %if.then, label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152.if.end_crit_edge

_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152.if.end_crit_edge: ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152
  %78 = load <2 x float>, ptr %impulse, align 8, !tbaa !137
  %arrayidx12.i.i198.phi.trans.insert = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %.pre309 = load float, ptr %arrayidx12.i.i198.phi.trans.insert, align 8, !tbaa !137
  br label %if.end

if.then:                                          ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152
  %79 = insertelement <2 x float> poison, float %76, i64 0
  %80 = shufflevector <2 x float> %79, <2 x float> poison, <2 x i32> zeroinitializer
  %81 = fmul <2 x float> %70, %80
  %mul8.i = fmul float %75, %76
  %sub14.i165 = fsub float %sub14.i, %mul8.i
  %m_friction = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 5
  %82 = load float, ptr %m_friction, align 8, !tbaa !137
  %mul8.i175 = fmul float %sub14.i165, %82
  %add14.i = fadd float %mul8.i, %mul8.i175
  %83 = fsub <2 x float> %69, %81
  %84 = insertelement <2 x float> poison, float %82, i64 0
  %85 = shufflevector <2 x float> %84, <2 x float> poison, <2 x i32> zeroinitializer
  %86 = fmul <2 x float> %83, %85
  %87 = fadd <2 x float> %81, %86
  %88 = load <2 x float>, ptr %impulse, align 8, !tbaa !137
  %89 = fadd <2 x float> %87, %88
  %arrayidx12.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %90 = load float, ptr %arrayidx12.i, align 8, !tbaa !137
  %add13.i = fadd float %add14.i, %90
  br label %if.end

if.end:                                           ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152.if.end_crit_edge, %if.then
  %91 = phi float [ %.pre309, %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152.if.end_crit_edge ], [ %add13.i, %if.then ]
  %92 = phi <2 x float> [ %78, %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit152.if.end_crit_edge ], [ %89, %if.then ]
  %m_massmatrix = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8
  %arrayidx5.i.i194 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i197 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i198 = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2
  %93 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 1
  %94 = load float, ptr %arrayidx5.i18.i, align 8, !tbaa !137
  %95 = extractelement <2 x float> %92, i64 1
  %mul8.i20.i = fmul float %95, %94
  %96 = extractelement <2 x float> %92, i64 0
  %97 = tail call float @llvm.fmuladd.f32(float %93, float %96, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 8, i32 0, i64 2, i32 0, i64 2
  %98 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %99 = tail call float @llvm.fmuladd.f32(float %98, float %91, float %97)
  %100 = load <4 x float>, ptr %m_massmatrix, align 4
  %101 = shufflevector <4 x float> %100, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %102 = load <4 x float>, ptr %arrayidx5.i.i194, align 8
  %103 = shufflevector <4 x float> %102, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %104 = load <4 x float>, ptr %arrayidx10.i.i197, align 4
  %105 = shufflevector <4 x float> %104, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %106 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %107 = load float, ptr %arrayidx5.i12.i, align 8, !tbaa !137
  %108 = insertelement <2 x float> %103, float %107, i64 1
  %109 = shufflevector <2 x float> %92, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %110 = fmul <2 x float> %108, %109
  %111 = insertelement <2 x float> %101, float %106, i64 1
  %112 = shufflevector <2 x float> %92, <2 x float> poison, <2 x i32> zeroinitializer
  %113 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %111, <2 x float> %112, <2 x float> %110)
  %114 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %115 = insertelement <2 x float> %105, float %114, i64 1
  %116 = insertelement <2 x float> poison, float %91, i64 0
  %117 = shufflevector <2 x float> %116, <2 x float> poison, <2 x i32> zeroinitializer
  %118 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %115, <2 x float> %117, <2 x float> %113)
  %119 = insertelement <2 x float> poison, float %sor, i64 0
  %120 = shufflevector <2 x float> %119, <2 x float> poison, <2 x i32> zeroinitializer
  %121 = fmul <2 x float> %118, %120
  %mul8.i208 = fmul float %99, %sor
  %retval.sroa.3.12.vec.insert.i211 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i208, i64 0
  store <2 x float> %121, ptr %impulse, align 8, !tbaa.struct !163
  store <2 x float> %retval.sroa.3.12.vec.insert.i211, ptr %arrayidx12.i.i198, align 8, !tbaa.struct !165
  %122 = load ptr, ptr %m_bodies, align 8, !tbaa !272
  %123 = load ptr, ptr %arrayidx4, align 8, !tbaa !272
  %cmp37 = icmp eq ptr %122, %123
  br i1 %cmp37, label %if.then38, label %if.else87

if.then38:                                        ; preds = %if.end
  %124 = extractelement <2 x float> %121, i64 0
  %cmp43 = fcmp ord float %124, 0.000000e+00
  %125 = extractelement <2 x float> %121, i64 1
  %cmp48 = fcmp ord float %125, 0.000000e+00
  %or.cond = select i1 %cmp43, i1 %cmp48, i1 false
  %cmp54 = fcmp ord float %mul8.i208, 0.000000e+00
  %or.cond307 = select i1 %or.cond, i1 %cmp54, i1 false
  br i1 %or.cond307, label %if.then58, label %if.end97

if.then58:                                        ; preds = %if.then38
  %mul8.i.i.i = fmul float %125, %125
  %126 = tail call float @llvm.fmuladd.f32(float %124, float %124, float %mul8.i.i.i)
  %127 = tail call float @llvm.fmuladd.f32(float %mul8.i208, float %mul8.i208, float %126)
  %sqrt.i = tail call float @llvm.sqrt.f32(float %127)
  %m_maxSelfCollisionImpulse = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %122, i64 0, i32 20
  %128 = load float, ptr %m_maxSelfCollisionImpulse, align 8, !tbaa !547
  %cmp64 = fcmp olt float %sqrt.i, %128
  br i1 %cmp64, label %if.end97, label %if.else

if.else:                                          ; preds = %if.then58
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %ref.tmp68) #38
  %129 = load i32, ptr %m_asVelocity.i, align 8
  %130 = fneg <2 x float> %121
  %fneg8.i.i = fneg float %mul8.i208
  %retval.sroa.3.12.vec.insert.i.i220 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i.i, i64 0
  %m_selfCollisionImpulseFactor = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %122, i64 0, i32 21
  %131 = load float, ptr %m_selfCollisionImpulseFactor, align 4, !tbaa !548
  %ref.tmp69.sroa.7.0.ref.tmp68.sroa_idx = getelementptr inbounds i8, ptr %ref.tmp68, i64 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i220, ptr %ref.tmp69.sroa.7.0.ref.tmp68.sroa_idx, align 8, !tbaa.struct !549
  %ref.tmp69.sroa.9.0.ref.tmp68.sroa_idx = getelementptr inbounds i8, ptr %ref.tmp68, i64 16
  %ref.tmp69.sroa.12.0.ref.tmp68.sroa_idx = getelementptr inbounds i8, ptr %ref.tmp68, i64 24
  store <2 x float> <float -0.000000e+00, float 0.000000e+00>, ptr %ref.tmp69.sroa.12.0.ref.tmp68.sroa_idx, align 8, !tbaa.struct !550
  %ref.tmp69.sroa.14.0.ref.tmp68.sroa_idx = getelementptr inbounds i8, ptr %ref.tmp68, i64 32
  store i32 %129, ptr %ref.tmp69.sroa.14.0.ref.tmp68.sroa_idx, align 8
  %132 = insertelement <2 x float> poison, float %131, i64 0
  %133 = shufflevector <2 x float> %132, <2 x float> poison, <2 x i32> zeroinitializer
  %134 = fmul <2 x float> %133, %130
  store <2 x float> %134, ptr %ref.tmp68, align 8, !tbaa !137, !alias.scope !551
  %mul7.i.i = fmul float %131, %fneg8.i.i
  store float %mul7.i.i, ptr %ref.tmp69.sroa.7.0.ref.tmp68.sroa_idx, align 8, !tbaa !137, !alias.scope !551
  %mul.i3.i = fmul float %131, -0.000000e+00
  store float %mul.i3.i, ptr %ref.tmp69.sroa.9.0.ref.tmp68.sroa_idx, align 8, !tbaa !137, !alias.scope !551
  %arrayidx3.i4.i = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp68, i64 0, i32 1, i32 0, i64 1
  store float %mul.i3.i, ptr %arrayidx3.i4.i, align 4, !tbaa !137, !alias.scope !551
  store float %mul.i3.i, ptr %ref.tmp69.sroa.12.0.ref.tmp68.sroa_idx, align 8, !tbaa !137, !alias.scope !551
  %135 = trunc i32 %129 to i8
  %136 = and i8 %135, 1
  %tobool.not.i = icmp eq i8 %136, 0
  br i1 %tobool.not.i, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %if.else
  call void @_ZNK10btSoftBody4Body13applyVImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp68, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos)
  %bf.load2.pre.i = load i8, ptr %ref.tmp69.sroa.14.0.ref.tmp68.sroa_idx, align 8
  br label %if.end.i

if.end.i:                                         ; preds = %if.then.i, %if.else
  %bf.load2.i = phi i8 [ %bf.load2.pre.i, %if.then.i ], [ %135, %if.else ]
  %bf.shl3.mask.i = and i8 %bf.load2.i, 2
  %tobool6.not.i = icmp eq i8 %bf.shl3.mask.i, 0
  br i1 %tobool6.not.i, label %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit, label %if.then7.i

if.then7.i:                                       ; preds = %if.end.i
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp69.sroa.9.0.ref.tmp68.sroa_idx, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos)
  br label %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit

_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit: ; preds = %if.end.i, %if.then7.i
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %ref.tmp68) #38
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %ref.tmp77) #38
  %137 = load ptr, ptr %m_bodies, align 8, !tbaa !272
  %m_selfCollisionImpulseFactor81 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %137, i64 0, i32 21
  %138 = load float, ptr %m_selfCollisionImpulseFactor81, align 4, !tbaa !548
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %ref.tmp77, ptr noundef nonnull align 8 dereferenceable(36) %impulse, i64 36, i1 false), !tbaa.struct !531
  %139 = load <2 x float>, ptr %ref.tmp77, align 8, !tbaa !137, !alias.scope !554
  %140 = insertelement <2 x float> poison, float %138, i64 0
  %141 = shufflevector <2 x float> %140, <2 x float> poison, <2 x i32> zeroinitializer
  %142 = fmul <2 x float> %141, %139
  store <2 x float> %142, ptr %ref.tmp77, align 8, !tbaa !137, !alias.scope !554
  %arrayidx6.i.i229 = getelementptr inbounds [4 x float], ptr %ref.tmp77, i64 0, i64 2
  %143 = load float, ptr %arrayidx6.i.i229, align 8, !tbaa !137, !alias.scope !554
  %mul7.i.i230 = fmul float %138, %143
  store float %mul7.i.i230, ptr %arrayidx6.i.i229, align 8, !tbaa !137, !alias.scope !554
  %m_drift.i231 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp77, i64 0, i32 1
  %144 = load <2 x float>, ptr %m_drift.i231, align 8, !tbaa !137, !alias.scope !554
  %145 = fmul <2 x float> %141, %144
  store <2 x float> %145, ptr %m_drift.i231, align 8, !tbaa !137, !alias.scope !554
  %arrayidx6.i6.i235 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp77, i64 0, i32 1, i32 0, i64 2
  %146 = load float, ptr %arrayidx6.i6.i235, align 8, !tbaa !137, !alias.scope !554
  %mul7.i7.i236 = fmul float %138, %146
  store float %mul7.i7.i236, ptr %arrayidx6.i6.i235, align 8, !tbaa !137, !alias.scope !554
  %m_asVelocity.i237 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp77, i64 0, i32 2
  %bf.load.i238 = load i8, ptr %m_asVelocity.i237, align 8
  %147 = and i8 %bf.load.i238, 1
  %tobool.not.i239 = icmp eq i8 %147, 0
  br i1 %tobool.not.i239, label %if.end.i245, label %if.then.i241

if.then.i241:                                     ; preds = %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit
  call void @_ZNK10btSoftBody4Body13applyVImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx4, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp77, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx6)
  %bf.load2.pre.i240 = load i8, ptr %m_asVelocity.i237, align 8
  br label %if.end.i245

if.end.i245:                                      ; preds = %if.then.i241, %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit
  %bf.load2.i242 = phi i8 [ %bf.load2.pre.i240, %if.then.i241 ], [ %bf.load.i238, %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit ]
  %bf.shl3.mask.i243 = and i8 %bf.load2.i242, 2
  %tobool6.not.i244 = icmp eq i8 %bf.shl3.mask.i243, 0
  br i1 %tobool6.not.i244, label %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit248, label %if.then7.i247

if.then7.i247:                                    ; preds = %if.end.i245
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx4, ptr noundef nonnull align 4 dereferenceable(16) %m_drift.i231, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx6)
  br label %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit248

_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit248: ; preds = %if.end.i245, %if.then7.i247
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %ref.tmp77) #38
  br label %if.end97

if.else87:                                        ; preds = %if.end
  call void @llvm.lifetime.start.p0(i64 36, ptr nonnull %ref.tmp90) #38
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(36) %ref.tmp90, ptr noundef nonnull align 8 dereferenceable(36) %impulse, i64 36, i1 false), !tbaa.struct !531
  %148 = load <2 x float>, ptr %ref.tmp90, align 8, !tbaa !137, !alias.scope !557
  %149 = fneg <2 x float> %148
  %arrayidx7.i.i252 = getelementptr inbounds [4 x float], ptr %ref.tmp90, i64 0, i64 2
  %150 = load float, ptr %arrayidx7.i.i252, align 8, !tbaa !137, !alias.scope !557
  %fneg8.i.i253 = fneg float %150
  %retval.sroa.3.12.vec.insert.i.i256 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i.i253, i64 0
  store <2 x float> %149, ptr %ref.tmp90, align 8, !tbaa.struct !163, !alias.scope !557
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i256, ptr %arrayidx7.i.i252, align 8, !tbaa.struct !165, !alias.scope !557
  %m_drift.i257 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp90, i64 0, i32 1
  %151 = load <2 x float>, ptr %m_drift.i257, align 8, !tbaa !137, !alias.scope !557
  %152 = fneg <2 x float> %151
  %arrayidx7.i10.i261 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp90, i64 0, i32 1, i32 0, i64 2
  %153 = load float, ptr %arrayidx7.i10.i261, align 8, !tbaa !137, !alias.scope !557
  %fneg8.i11.i262 = fneg float %153
  %retval.sroa.3.12.vec.insert.i14.i265 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i11.i262, i64 0
  store <2 x float> %152, ptr %m_drift.i257, align 8, !tbaa.struct !163, !alias.scope !557
  store <2 x float> %retval.sroa.3.12.vec.insert.i14.i265, ptr %arrayidx7.i10.i261, align 8, !tbaa.struct !165, !alias.scope !557
  %m_asVelocity.i266 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %ref.tmp90, i64 0, i32 2
  %bf.load.i267 = load i8, ptr %m_asVelocity.i266, align 8
  %154 = and i8 %bf.load.i267, 1
  %tobool.not.i268 = icmp eq i8 %154, 0
  br i1 %tobool.not.i268, label %if.end.i274, label %if.then.i270

if.then.i270:                                     ; preds = %if.else87
  call void @_ZNK10btSoftBody4Body13applyVImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp90, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos)
  %bf.load2.pre.i269 = load i8, ptr %m_asVelocity.i266, align 8
  br label %if.end.i274

if.end.i274:                                      ; preds = %if.then.i270, %if.else87
  %bf.load2.i271 = phi i8 [ %bf.load2.pre.i269, %if.then.i270 ], [ %bf.load.i267, %if.else87 ]
  %bf.shl3.mask.i272 = and i8 %bf.load2.i271, 2
  %tobool6.not.i273 = icmp eq i8 %bf.shl3.mask.i272, 0
  br i1 %tobool6.not.i273, label %if.end.i286, label %if.then7.i276

if.then7.i276:                                    ; preds = %if.end.i274
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %m_drift.i257, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos)
  br label %if.end.i286

if.end.i286:                                      ; preds = %if.end.i274, %if.then7.i276
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %ref.tmp90) #38
  call void @_ZNK10btSoftBody4Body13applyVImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx4, ptr noundef nonnull align 4 dereferenceable(16) %impulse, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx6)
  %bf.load2.pre.i281 = load i8, ptr %m_asVelocity.i, align 8
  %bf.shl3.mask.i284 = and i8 %bf.load2.pre.i281, 2
  %tobool6.not.i285 = icmp eq i8 %bf.shl3.mask.i284, 0
  br i1 %tobool6.not.i285, label %if.end97, label %if.then7.i288

if.then7.i288:                                    ; preds = %if.end.i286
  %m_drift.i287 = getelementptr inbounds %"struct.btSoftBody::Impulse", ptr %impulse, i64 0, i32 1
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx4, ptr noundef nonnull align 4 dereferenceable(16) %m_drift.i287, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx6)
  br label %if.end97

if.end97:                                         ; preds = %if.then7.i288, %if.end.i286, %if.then38, %_ZNK10btSoftBody4Body12applyImpulseERKNS_7ImpulseERK9btVector3.exit248, %if.then58
  call void @llvm.lifetime.end.p0(i64 36, ptr nonnull %impulse) #38
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody6CJoint9TerminateEf(ptr noundef nonnull align 8 dereferenceable(244) %this, float %dt) unnamed_addr #0 align 2 {
entry:
  %ref.tmp = alloca %class.btVector3, align 8
  %m_split = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 5
  %0 = load float, ptr %m_split, align 8, !tbaa !269
  %cmp = fcmp ogt float %0, 0.000000e+00
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %m_bodies = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #38
  %m_sdrift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7
  %1 = load <2 x float>, ptr %m_sdrift, align 4, !tbaa !137
  %2 = fneg <2 x float> %1
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 7, i32 0, i64 2
  %3 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %fneg8.i = fneg float %3
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i, i64 0
  store <2 x float> %2, ptr %ref.tmp, align 8
  %4 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp, i64 0, i32 1
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %4, align 8
  %m_rpos = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 3
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  %arrayidx4 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %this, i64 0, i32 1, i64 1
  %arrayidx7 = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %this, i64 0, i32 3, i64 1
  call void @_ZNK10btSoftBody4Body13applyDImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx4, ptr noundef nonnull align 4 dereferenceable(16) %m_sdrift, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx7)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody14PSolve_AnchorsEPS_ff(ptr nocapture noundef readonly %psb, float noundef %kst, float %ti) #0 align 2 {
entry:
  %ref.tmp33 = alloca %class.btVector3, align 8
  %kAHR1 = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 2, i32 12
  %0 = load float, ptr %kAHR1, align 8, !tbaa !560
  %mul = fmul float %0, %kst
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 3
  %1 = load float, ptr %m_sst, align 8, !tbaa !420
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 13, i32 2
  %2 = load i32, ptr %m_size.i, align 4, !tbaa !104
  %cmp138 = icmp sgt i32 %2, 0
  br i1 %cmp138, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 13, i32 5
  %3 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp33, i64 0, i32 1
  %wide.trip.count = zext i32 %2 to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %4 = load ptr, ptr %m_data.i, align 8, !tbaa !103
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %4, i64 %indvars.iv
  %m_body = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %4, i64 %indvars.iv, i32 2
  %5 = load ptr, ptr %m_body, align 8, !tbaa !245
  %m_interpolationWorldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2
  %6 = load ptr, ptr %arrayidx.i, align 8, !tbaa !234
  %m_local = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %4, i64 %indvars.iv, i32 1
  %7 = load float, ptr %m_interpolationWorldTransform.i, align 4, !tbaa !137
  %8 = load float, ptr %m_local, align 4, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 0, i32 0, i64 0, i32 0, i64 1
  %9 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %m_local, i64 0, i64 1
  %10 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %mul8.i.i.i = fmul float %9, %10
  %11 = call float @llvm.fmuladd.f32(float %7, float %8, float %mul8.i.i.i)
  %arrayidx10.i.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 0, i32 0, i64 0, i32 0, i64 2
  %12 = load float, ptr %arrayidx10.i.i.i, align 4, !tbaa !137
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %m_local, i64 0, i64 2
  %13 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %14 = call float @llvm.fmuladd.f32(float %12, float %13, float %11)
  %m_origin.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 1
  %15 = load float, ptr %m_origin.i.i, align 4, !tbaa !137
  %add.i.i = fadd float %14, %15
  %arrayidx.i.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 0, i32 0, i64 1
  %16 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %arrayidx5.i20.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 0, i32 0, i64 1, i32 0, i64 1
  %17 = load float, ptr %arrayidx5.i20.i.i, align 4, !tbaa !137
  %mul8.i22.i.i = fmul float %10, %17
  %18 = call float @llvm.fmuladd.f32(float %16, float %8, float %mul8.i22.i.i)
  %arrayidx10.i23.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 0, i32 0, i64 1, i32 0, i64 2
  %19 = load float, ptr %arrayidx10.i23.i.i, align 4, !tbaa !137
  %20 = call float @llvm.fmuladd.f32(float %19, float %13, float %18)
  %arrayidx.i25.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 1, i32 0, i64 1
  %21 = load float, ptr %arrayidx.i25.i.i, align 4, !tbaa !137
  %add10.i.i = fadd float %21, %20
  %arrayidx.i26.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 0, i32 0, i64 2
  %22 = load float, ptr %arrayidx.i26.i.i, align 4, !tbaa !137
  %arrayidx5.i27.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 0, i32 0, i64 2, i32 0, i64 1
  %23 = load float, ptr %arrayidx5.i27.i.i, align 4, !tbaa !137
  %mul8.i29.i.i = fmul float %10, %23
  %24 = call float @llvm.fmuladd.f32(float %22, float %8, float %mul8.i29.i.i)
  %arrayidx10.i30.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 0, i32 0, i64 2, i32 0, i64 2
  %25 = load float, ptr %arrayidx10.i30.i.i, align 4, !tbaa !137
  %26 = call float @llvm.fmuladd.f32(float %25, float %13, float %24)
  %arrayidx.i32.i.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2, i32 1, i32 0, i64 2
  %27 = load float, ptr %arrayidx.i32.i.i, align 4, !tbaa !137
  %add17.i.i = fadd float %27, %26
  %m_c1 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %4, i64 %indvars.iv, i32 4
  %m_linearVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %5, i64 0, i32 2
  %m_angularVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %5, i64 0, i32 3
  %arrayidx.i.i = getelementptr inbounds %class.btRigidBody, ptr %5, i64 0, i32 3, i32 0, i64 1
  %28 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %arrayidx3.i.i = getelementptr inbounds [4 x float], ptr %m_c1, i64 0, i64 2
  %29 = load float, ptr %arrayidx3.i.i, align 4, !tbaa !137
  %arrayidx5.i.i = getelementptr inbounds %class.btRigidBody, ptr %5, i64 0, i32 3, i32 0, i64 2
  %30 = load float, ptr %arrayidx5.i.i, align 8, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %m_c1, i64 0, i64 1
  %31 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %32 = fneg float %30
  %neg.i.i = fmul float %31, %32
  %33 = call float @llvm.fmuladd.f32(float %28, float %29, float %neg.i.i)
  %34 = load float, ptr %m_c1, align 4, !tbaa !137
  %35 = load float, ptr %m_angularVelocity.i, align 8, !tbaa !137
  %36 = fneg float %35
  %neg19.i.i = fmul float %29, %36
  %37 = call float @llvm.fmuladd.f32(float %30, float %34, float %neg19.i.i)
  %38 = fneg float %28
  %neg30.i.i = fmul float %34, %38
  %39 = call float @llvm.fmuladd.f32(float %35, float %31, float %neg30.i.i)
  %40 = load float, ptr %m_linearVelocity.i, align 8, !tbaa !137
  %add.i.i53 = fadd float %33, %40
  %arrayidx5.i5.i = getelementptr inbounds %class.btRigidBody, ptr %5, i64 0, i32 2, i32 0, i64 1
  %41 = load float, ptr %arrayidx5.i5.i, align 4, !tbaa !137
  %add8.i.i = fadd float %41, %37
  %arrayidx11.i.i = getelementptr inbounds %class.btRigidBody, ptr %5, i64 0, i32 2, i32 0, i64 2
  %42 = load float, ptr %arrayidx11.i.i, align 8, !tbaa !137
  %add14.i.i = fadd float %39, %42
  %mul.i = fmul float %1, %add.i.i53
  %mul4.i = fmul float %1, %add8.i.i
  %mul8.i = fmul float %1, %add14.i.i
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 1
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 2
  %43 = load float, ptr %m_q, align 4, !tbaa !137
  %arrayidx7.i54 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 2, i32 0, i64 1
  %44 = load float, ptr %arrayidx7.i54, align 4, !tbaa !137
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 1, i32 0, i64 2
  %45 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 2, i32 0, i64 2
  %46 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %45, %46
  %sub14.i66 = fsub float %mul8.i, %sub14.i
  %sub14.i78 = fsub float %add17.i.i, %45
  %mul8.i88 = fmul float %mul, %sub14.i78
  %add14.i = fadd float %mul8.i88, %sub14.i66
  %m_c0 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %4, i64 %indvars.iv, i32 3
  %arrayidx5.i.i103 = getelementptr inbounds [4 x float], ptr %m_c0, i64 0, i64 1
  %arrayidx10.i.i = getelementptr inbounds [4 x float], ptr %m_c0, i64 0, i64 2
  %arrayidx.i.i105 = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 2
  %47 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 2, i32 0, i64 1
  %48 = load float, ptr %arrayidx5.i18.i, align 4, !tbaa !137
  %arrayidx10.i21.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 2, i32 0, i64 2
  %49 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %m_c2 = getelementptr inbounds %"struct.btSoftBody::Anchor", ptr %4, i64 %indvars.iv, i32 5
  %50 = load float, ptr %m_c2, align 4, !tbaa !137
  %51 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %52 = extractelement <2 x float> %51, i64 0
  %sub.i = fsub float %52, %43
  %53 = extractelement <2 x float> %51, i64 1
  %sub8.i = fsub float %53, %44
  %sub.i60 = fsub float %mul.i, %sub.i
  %sub8.i63 = fsub float %mul4.i, %sub8.i
  %sub.i72 = fsub float %add.i.i, %52
  %sub8.i75 = fsub float %add10.i.i, %53
  %mul.i84 = fmul float %mul, %sub.i72
  %mul4.i86 = fmul float %mul, %sub8.i75
  %add.i = fadd float %mul.i84, %sub.i60
  %add8.i = fadd float %mul4.i86, %sub8.i63
  %54 = load float, ptr %m_c0, align 4, !tbaa !137
  %55 = load float, ptr %arrayidx5.i.i103, align 4, !tbaa !137
  %56 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %57 = load float, ptr %arrayidx.i.i105, align 4, !tbaa !137
  %58 = load float, ptr %arrayidx5.i12.i, align 4, !tbaa !137
  %59 = insertelement <2 x float> poison, float %add8.i, i64 0
  %60 = shufflevector <2 x float> %59, <2 x float> poison, <2 x i32> zeroinitializer
  %61 = insertelement <2 x float> poison, float %55, i64 0
  %62 = insertelement <2 x float> %61, float %58, i64 1
  %63 = fmul <2 x float> %60, %62
  %64 = insertelement <2 x float> poison, float %54, i64 0
  %65 = insertelement <2 x float> %64, float %57, i64 1
  %66 = insertelement <2 x float> poison, float %add.i, i64 0
  %67 = shufflevector <2 x float> %66, <2 x float> poison, <2 x i32> zeroinitializer
  %68 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %65, <2 x float> %67, <2 x float> %63)
  %69 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %70 = insertelement <2 x float> poison, float %56, i64 0
  %71 = insertelement <2 x float> %70, float %69, i64 1
  %72 = insertelement <2 x float> poison, float %add14.i, i64 0
  %73 = shufflevector <2 x float> %72, <2 x float> poison, <2 x i32> zeroinitializer
  %74 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %71, <2 x float> %73, <2 x float> %68)
  %mul8.i20.i = fmul float %add8.i, %48
  %75 = call float @llvm.fmuladd.f32(float %47, float %add.i, float %mul8.i20.i)
  %76 = call float @llvm.fmuladd.f32(float %49, float %add14.i, float %75)
  %77 = insertelement <2 x float> poison, float %50, i64 0
  %78 = shufflevector <2 x float> %77, <2 x float> poison, <2 x i32> zeroinitializer
  %79 = fmul <2 x float> %74, %78
  %mul8.i115 = fmul float %50, %76
  %80 = fadd <2 x float> %51, %79
  store <2 x float> %80, ptr %m_x, align 4, !tbaa !137
  %add13.i = fadd float %45, %mul8.i115
  store float %add13.i, ptr %arrayidx11.i, align 4, !tbaa !137
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp33) #38
  %81 = fneg <2 x float> %74
  %fneg8.i = fneg float %76
  %retval.sroa.3.12.vec.insert.i129 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %fneg8.i, i64 0
  store <2 x float> %81, ptr %ref.tmp33, align 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i129, ptr %3, align 8
  call void @_ZN11btRigidBody12applyImpulseERK9btVector3S2_(ptr noundef nonnull align 8 dereferenceable(564) %5, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp33, ptr noundef nonnull align 4 dereferenceable(16) %m_c1)
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp33) #38
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN11btRigidBody12applyImpulseERK9btVector3S2_(ptr noundef nonnull align 8 dereferenceable(564) %this, ptr noundef nonnull align 4 dereferenceable(16) %impulse, ptr noundef nonnull align 4 dereferenceable(16) %rel_pos) local_unnamed_addr #0 comdat align 2 {
entry:
  %m_inverseMass = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 4
  %0 = load float, ptr %m_inverseMass, align 8, !tbaa !137
  %cmp = fcmp une float %0, 0.000000e+00
  br i1 %cmp, label %if.then, label %if.end7

if.then:                                          ; preds = %entry
  %m_linearFactor.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 6
  %arrayidx5.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 1
  %arrayidx11.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %1 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %arrayidx13.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 6, i32 0, i64 2
  %2 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %mul14.i.i = fmul float %1, %2
  %mul8.i8.i = fmul float %0, %mul14.i.i
  %m_linearVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 2
  %3 = load <2 x float>, ptr %impulse, align 4, !tbaa !137
  %4 = load <2 x float>, ptr %m_linearFactor.i, align 4, !tbaa !137
  %5 = fmul <2 x float> %3, %4
  %6 = insertelement <2 x float> poison, float %0, i64 0
  %7 = shufflevector <2 x float> %6, <2 x float> poison, <2 x i32> zeroinitializer
  %8 = fmul <2 x float> %7, %5
  %9 = load <2 x float>, ptr %m_linearVelocity.i, align 8, !tbaa !137
  %10 = fadd <2 x float> %8, %9
  store <2 x float> %10, ptr %m_linearVelocity.i, align 8, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 2, i32 0, i64 2
  %11 = load float, ptr %arrayidx12.i.i, align 8, !tbaa !137
  %add13.i.i = fadd float %mul8.i8.i, %11
  store float %add13.i.i, ptr %arrayidx12.i.i, align 8, !tbaa !137
  %12 = load float, ptr %impulse, align 4, !tbaa !137
  %13 = extractelement <2 x float> %4, i64 0
  %mul.i = fmul float %13, %12
  %14 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %15 = extractelement <2 x float> %4, i64 1
  %mul8.i = fmul float %15, %14
  %16 = load float, ptr %arrayidx11.i.i, align 4, !tbaa !137
  %mul14.i = fmul float %2, %16
  %arrayidx.i = getelementptr inbounds [4 x float], ptr %rel_pos, i64 0, i64 1
  %17 = load float, ptr %arrayidx.i, align 4, !tbaa !137
  %arrayidx5.i9 = getelementptr inbounds [4 x float], ptr %rel_pos, i64 0, i64 2
  %18 = load float, ptr %arrayidx5.i9, align 4, !tbaa !137
  %19 = fneg float %18
  %neg.i = fmul float %mul8.i, %19
  %20 = tail call float @llvm.fmuladd.f32(float %17, float %mul14.i, float %neg.i)
  %21 = load float, ptr %rel_pos, align 4, !tbaa !137
  %22 = fneg float %21
  %neg19.i = fmul float %mul14.i, %22
  %23 = tail call float @llvm.fmuladd.f32(float %18, float %mul.i, float %neg19.i)
  %24 = fneg float %17
  %neg30.i = fmul float %mul.i, %24
  %25 = tail call float @llvm.fmuladd.f32(float %21, float %mul8.i, float %neg30.i)
  %m_invInertiaTensorWorld.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 1
  %arrayidx5.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 1, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 1, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 1, i32 0, i64 1
  %arrayidx5.i12.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 1, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 1, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 1, i32 0, i64 2
  %26 = load float, ptr %arrayidx.i17.i.i, align 8, !tbaa !137
  %arrayidx5.i18.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 1, i32 0, i64 2, i32 0, i64 1
  %27 = load float, ptr %arrayidx5.i18.i.i, align 4, !tbaa !137
  %mul8.i20.i.i = fmul float %23, %27
  %28 = tail call float @llvm.fmuladd.f32(float %26, float %20, float %mul8.i20.i.i)
  %arrayidx10.i21.i.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 1, i32 0, i64 2, i32 0, i64 2
  %29 = load float, ptr %arrayidx10.i21.i.i, align 8, !tbaa !137
  %30 = tail call float @llvm.fmuladd.f32(float %29, float %25, float %28)
  %m_angularFactor.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 5
  %arrayidx13.i.i19 = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 5, i32 0, i64 2
  %31 = load float, ptr %arrayidx13.i.i19, align 4, !tbaa !137
  %mul14.i.i20 = fmul float %30, %31
  %m_angularVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 3
  %32 = load <4 x float>, ptr %m_invInertiaTensorWorld.i, align 8
  %33 = shufflevector <4 x float> %32, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %34 = load <4 x float>, ptr %arrayidx5.i.i.i, align 4
  %35 = shufflevector <4 x float> %34, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %36 = load <4 x float>, ptr %arrayidx10.i.i.i, align 8
  %37 = shufflevector <4 x float> %36, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %38 = load float, ptr %arrayidx.i.i.i, align 8, !tbaa !137
  %39 = load float, ptr %arrayidx5.i12.i.i, align 4, !tbaa !137
  %40 = insertelement <2 x float> %35, float %39, i64 1
  %41 = insertelement <2 x float> poison, float %23, i64 0
  %42 = shufflevector <2 x float> %41, <2 x float> poison, <2 x i32> zeroinitializer
  %43 = fmul <2 x float> %40, %42
  %44 = insertelement <2 x float> %33, float %38, i64 1
  %45 = insertelement <2 x float> poison, float %20, i64 0
  %46 = shufflevector <2 x float> %45, <2 x float> poison, <2 x i32> zeroinitializer
  %47 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %44, <2 x float> %46, <2 x float> %43)
  %48 = load float, ptr %arrayidx10.i15.i.i, align 8, !tbaa !137
  %49 = insertelement <2 x float> %37, float %48, i64 1
  %50 = insertelement <2 x float> poison, float %25, i64 0
  %51 = shufflevector <2 x float> %50, <2 x float> poison, <2 x i32> zeroinitializer
  %52 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %49, <2 x float> %51, <2 x float> %47)
  %53 = load <2 x float>, ptr %m_angularFactor.i, align 4, !tbaa !137
  %54 = fmul <2 x float> %52, %53
  %55 = load <2 x float>, ptr %m_angularVelocity.i, align 8, !tbaa !137
  %56 = fadd <2 x float> %54, %55
  store <2 x float> %56, ptr %m_angularVelocity.i, align 8, !tbaa !137
  %arrayidx12.i.i23 = getelementptr inbounds %class.btRigidBody, ptr %this, i64 0, i32 3, i32 0, i64 2
  %57 = load float, ptr %arrayidx12.i.i23, align 8, !tbaa !137
  %add13.i.i24 = fadd float %mul14.i.i20, %57
  store float %add13.i.i24, ptr %arrayidx12.i.i23, align 8, !tbaa !137
  br label %if.end7

if.end7:                                          ; preds = %if.then, %entry
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody16PSolve_RContactsEPS_ff(ptr nocapture noundef readonly %psb, float noundef %kst, float %ti) #0 align 2 {
entry:
  %impulse = alloca %class.btVector3, align 8
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 3
  %0 = load float, ptr %m_sst, align 8, !tbaa !420
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %psb, i64 0, i32 9
  %1 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable = load ptr, ptr %1, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 11
  %2 = load ptr, ptr %vfn, align 8
  %call1 = tail call noundef float %2(ptr noundef nonnull align 8 dereferenceable(24) %1)
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 14, i32 2
  %3 = load i32, ptr %m_size.i, align 4, !tbaa !108
  %cmp225 = icmp sgt i32 %3, 0
  br i1 %cmp225, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 14, i32 5
  %4 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %impulse, i64 0, i32 1
  %wide.trip.count = zext i32 %3 to i64
  %5 = insertelement <2 x float> poison, float %0, i64 0
  %6 = shufflevector <2 x float> %5, <2 x float> poison, <2 x i32> zeroinitializer
  br label %for.body

for.cond.cleanup:                                 ; preds = %if.end59, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %if.end59
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end59 ]
  %7 = load ptr, ptr %m_data.i, align 8, !tbaa !107
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %indvars.iv
  %8 = load ptr, ptr %arrayidx.i, align 8, !tbaa !491
  %m_internalType.i.i = getelementptr inbounds %class.btCollisionObject, ptr %8, i64 0, i32 19
  %9 = load i32, ptr %m_internalType.i.i, align 8, !tbaa !134
  %cmp.i = icmp eq i32 %9, 2
  %colObj..i = select i1 %cmp.i, ptr %8, ptr null
  %tobool.not = icmp eq ptr %colObj..i, null
  br i1 %tobool.not, label %cond.end, label %cond.true

cond.true:                                        ; preds = %for.body
  %m_c1 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %indvars.iv, i32 3
  %m_linearVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %colObj..i, i64 0, i32 2
  %m_angularVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %colObj..i, i64 0, i32 3
  %arrayidx.i.i = getelementptr inbounds %class.btRigidBody, ptr %colObj..i, i64 0, i32 3, i32 0, i64 1
  %arrayidx7.i.i = getelementptr inbounds [4 x float], ptr %m_c1, i64 0, i64 1
  %10 = load float, ptr %m_angularVelocity.i, align 8, !tbaa !137
  %arrayidx11.i.i = getelementptr inbounds %class.btRigidBody, ptr %colObj..i, i64 0, i32 2, i32 0, i64 2
  %11 = load float, ptr %arrayidx11.i.i, align 8, !tbaa !137
  %12 = load <2 x float>, ptr %arrayidx.i.i, align 4, !tbaa !137
  %13 = load <2 x float>, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %14 = load float, ptr %m_c1, align 4, !tbaa !137
  %15 = insertelement <2 x float> %12, float %10, i64 0
  %16 = shufflevector <2 x float> %15, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %17 = fneg <2 x float> %16
  %18 = fmul <2 x float> %13, %17
  %19 = shufflevector <2 x float> %13, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %20 = insertelement <2 x float> %19, float %14, i64 1
  %21 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %12, <2 x float> %20, <2 x float> %18)
  %22 = extractelement <2 x float> %12, i64 0
  %23 = fneg float %22
  %neg30.i.i = fmul float %14, %23
  %24 = extractelement <2 x float> %13, i64 0
  %25 = call float @llvm.fmuladd.f32(float %10, float %24, float %neg30.i.i)
  %26 = load <2 x float>, ptr %m_linearVelocity.i, align 8, !tbaa !137
  %27 = fadd <2 x float> %21, %26
  %add14.i.i = fadd float %25, %11
  %28 = fmul <2 x float> %6, %27
  %mul8.i = fmul float %0, %add14.i.i
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i, i64 0
  br label %cond.end

cond.end:                                         ; preds = %for.body, %cond.true
  %va.sroa.0.1 = phi <2 x float> [ %28, %cond.true ], [ zeroinitializer, %for.body ]
  %va.sroa.7.1 = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i, %cond.true ], [ zeroinitializer, %for.body ]
  %m_node = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %indvars.iv, i32 1
  %29 = load ptr, ptr %m_node, align 8, !tbaa !561
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 1
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 2
  %30 = load float, ptr %m_x, align 4, !tbaa !137
  %31 = load float, ptr %m_q, align 4, !tbaa !137
  %sub.i = fsub float %30, %31
  %arrayidx5.i85 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 1, i32 0, i64 1
  %32 = load float, ptr %arrayidx5.i85, align 4, !tbaa !137
  %arrayidx7.i86 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 2, i32 0, i64 1
  %33 = load float, ptr %arrayidx7.i86, align 4, !tbaa !137
  %sub8.i = fsub float %32, %33
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 1, i32 0, i64 2
  %34 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %29, i64 0, i32 2, i32 0, i64 2
  %35 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %34, %35
  %va.sroa.0.0.vec.extract = extractelement <2 x float> %va.sroa.0.1, i64 0
  %sub.i92 = fsub float %sub.i, %va.sroa.0.0.vec.extract
  %va.sroa.0.4.vec.extract = extractelement <2 x float> %va.sroa.0.1, i64 1
  %sub8.i95 = fsub float %sub8.i, %va.sroa.0.4.vec.extract
  %va.sroa.7.8.vec.extract = extractelement <2 x float> %va.sroa.7.1, i64 0
  %sub14.i98 = fsub float %sub14.i, %va.sroa.7.8.vec.extract
  %m_normal = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %arrayidx.i, i64 0, i32 1
  %36 = load float, ptr %m_normal, align 4, !tbaa !137
  %arrayidx7.i.i105 = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %arrayidx.i, i64 0, i32 1, i32 0, i64 1
  %37 = load float, ptr %arrayidx7.i.i105, align 4, !tbaa !137
  %mul8.i.i = fmul float %sub8.i95, %37
  %38 = call float @llvm.fmuladd.f32(float %sub.i92, float %36, float %mul8.i.i)
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %arrayidx.i, i64 0, i32 1, i32 0, i64 2
  %39 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %40 = call float @llvm.fmuladd.f32(float %sub14.i98, float %39, float %38)
  %cmp18 = fcmp ugt float %40, 0x3E80000000000000
  br i1 %cmp18, label %if.end59, label %if.then

if.then:                                          ; preds = %cond.end
  %mul8.i.i108 = fmul float %32, %37
  %41 = call float @llvm.fmuladd.f32(float %30, float %36, float %mul8.i.i108)
  %42 = call float @llvm.fmuladd.f32(float %34, float %39, float %41)
  %m_offset = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %arrayidx.i, i64 0, i32 2
  %43 = load float, ptr %m_offset, align 8, !tbaa !493
  %add = fadd float %42, %43
  %cmp.i111 = fcmp olt float %add, %call1
  %.sroa.speculated = select i1 %cmp.i111, float %add, float %call1
  %mul.i112 = fmul float %36, %40
  %mul4.i114 = fmul float %37, %40
  %mul8.i116 = fmul float %39, %40
  %sub.i122 = fsub float %sub.i92, %mul.i112
  %sub8.i125 = fsub float %sub8.i95, %mul4.i114
  %sub14.i128 = fsub float %sub14.i98, %mul8.i116
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %impulse) #38
  %m_c0 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %indvars.iv, i32 2
  %m_c3 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %indvars.iv, i32 5
  %44 = load float, ptr %m_c3, align 4, !tbaa !137
  %mul.i134 = fmul float %sub.i122, %44
  %mul4.i136 = fmul float %sub8.i125, %44
  %mul8.i138 = fmul float %sub14.i128, %44
  %sub.i144 = fsub float %sub.i92, %mul.i134
  %sub8.i147 = fsub float %sub8.i95, %mul4.i136
  %sub14.i150 = fsub float %sub14.i98, %mul8.i138
  %m_c4 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %indvars.iv, i32 6
  %45 = load float, ptr %m_c4, align 8, !tbaa !563
  %mul = fmul float %.sroa.speculated, %45
  %mul.i156 = fmul float %36, %mul
  %mul4.i158 = fmul float %mul, %37
  %mul8.i160 = fmul float %mul, %39
  %add.i = fadd float %sub.i144, %mul.i156
  %add8.i = fadd float %sub8.i147, %mul4.i158
  %add14.i = fadd float %sub14.i150, %mul8.i160
  %mul.i175 = fmul float %add.i, %kst
  %mul4.i177 = fmul float %add8.i, %kst
  %mul8.i179 = fmul float %add14.i, %kst
  %arrayidx5.i.i185 = getelementptr inbounds [4 x float], ptr %m_c0, i64 0, i64 1
  %arrayidx10.i.i188 = getelementptr inbounds [4 x float], ptr %m_c0, i64 0, i64 2
  %arrayidx.i.i190 = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 1
  %arrayidx5.i12.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 2
  %46 = load float, ptr %arrayidx.i17.i, align 4, !tbaa !137
  %arrayidx5.i18.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 2, i32 0, i64 1
  %47 = load float, ptr %arrayidx5.i18.i, align 4, !tbaa !137
  %mul8.i20.i = fmul float %mul4.i177, %47
  %48 = call float @llvm.fmuladd.f32(float %46, float %mul.i175, float %mul8.i20.i)
  %arrayidx10.i21.i = getelementptr inbounds [3 x %class.btVector3], ptr %m_c0, i64 0, i64 2, i32 0, i64 2
  %49 = load float, ptr %arrayidx10.i21.i, align 4, !tbaa !137
  %50 = call float @llvm.fmuladd.f32(float %49, float %mul8.i179, float %48)
  %retval.sroa.3.12.vec.insert.i193 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %50, i64 0
  %m_c2 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %indvars.iv, i32 4
  %51 = load float, ptr %m_c0, align 4, !tbaa !137
  %52 = load float, ptr %arrayidx5.i.i185, align 4, !tbaa !137
  %53 = load float, ptr %arrayidx10.i.i188, align 4, !tbaa !137
  %54 = load float, ptr %arrayidx.i.i190, align 4, !tbaa !137
  %55 = load float, ptr %arrayidx5.i12.i, align 4, !tbaa !137
  %56 = insertelement <2 x float> poison, float %52, i64 0
  %57 = insertelement <2 x float> %56, float %55, i64 1
  %58 = insertelement <2 x float> poison, float %mul4.i177, i64 0
  %59 = shufflevector <2 x float> %58, <2 x float> poison, <2 x i32> zeroinitializer
  %60 = fmul <2 x float> %57, %59
  %61 = insertelement <2 x float> poison, float %51, i64 0
  %62 = insertelement <2 x float> %61, float %54, i64 1
  %63 = insertelement <2 x float> poison, float %mul.i175, i64 0
  %64 = shufflevector <2 x float> %63, <2 x float> poison, <2 x i32> zeroinitializer
  %65 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %62, <2 x float> %64, <2 x float> %60)
  %66 = load float, ptr %arrayidx10.i15.i, align 4, !tbaa !137
  %67 = insertelement <2 x float> poison, float %53, i64 0
  %68 = insertelement <2 x float> %67, float %66, i64 1
  %69 = insertelement <2 x float> poison, float %mul8.i179, i64 0
  %70 = shufflevector <2 x float> %69, <2 x float> poison, <2 x i32> zeroinitializer
  %71 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %68, <2 x float> %70, <2 x float> %65)
  store <2 x float> %71, ptr %impulse, align 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i193, ptr %4, align 8
  %72 = load float, ptr %m_c2, align 4, !tbaa !137
  %73 = insertelement <2 x float> poison, float %72, i64 0
  %74 = shufflevector <2 x float> %73, <2 x float> poison, <2 x i32> zeroinitializer
  %75 = fmul <2 x float> %74, %71
  %mul8.i200 = fmul float %72, %50
  %76 = load ptr, ptr %m_node, align 8, !tbaa !561
  %m_x54 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %76, i64 0, i32 1
  %77 = load <2 x float>, ptr %m_x54, align 4, !tbaa !137
  %78 = fsub <2 x float> %77, %75
  store <2 x float> %78, ptr %m_x54, align 4, !tbaa !137
  %arrayidx12.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %76, i64 0, i32 1, i32 0, i64 2
  %79 = load float, ptr %arrayidx12.i, align 4, !tbaa !137
  %sub13.i = fsub float %79, %mul8.i200
  store float %sub13.i, ptr %arrayidx12.i, align 4, !tbaa !137
  br i1 %tobool.not, label %if.end, label %if.then57

if.then57:                                        ; preds = %if.then
  %m_c158 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %indvars.iv, i32 3
  call void @_ZN11btRigidBody12applyImpulseERK9btVector3S2_(ptr noundef nonnull align 8 dereferenceable(564) %colObj..i, ptr noundef nonnull align 4 dereferenceable(16) %impulse, ptr noundef nonnull align 4 dereferenceable(16) %m_c158)
  br label %if.end

if.end:                                           ; preds = %if.then57, %if.then
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %impulse) #38
  br label %if.end59

if.end59:                                         ; preds = %if.end, %cond.end
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody16PSolve_SContactsEPS_ff(ptr nocapture noundef readonly %psb, float %0, float %ti) #16 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 15, i32 2
  %1 = load i32, ptr %m_size.i, align 4, !tbaa !112
  %cmp314 = icmp sgt i32 %1, 0
  br i1 %cmp314, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 15, i32 5
  %2 = load ptr, ptr %m_data.i, align 8, !tbaa !111
  %wide.trip.count = zext i32 %1 to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %if.end, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %if.end
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end ]
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %2, i64 %indvars.iv
  %m_normal = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %2, i64 %indvars.iv, i32 3
  %3 = load ptr, ptr %arrayidx.i, align 8, !tbaa !564
  %m_face = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %2, i64 %indvars.iv, i32 1
  %4 = load ptr, ptr %m_face, align 8, !tbaa !566
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %4, i64 0, i32 1
  %5 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 0, i32 1
  %arrayidx4 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %4, i64 0, i32 1, i64 1
  %6 = load ptr, ptr %arrayidx4, align 8, !tbaa !219
  %m_x5 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 1
  %arrayidx7 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %4, i64 0, i32 1, i64 2
  %7 = load ptr, ptr %arrayidx7, align 8, !tbaa !219
  %m_x8 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 0, i32 1
  %m_weights = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %2, i64 %indvars.iv, i32 2
  %arrayidx7.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 0, i32 1, i32 0, i64 2
  %arrayidx.i.i = getelementptr inbounds [4 x float], ptr %m_weights, i64 0, i64 1
  %arrayidx7.i21.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 1, i32 0, i64 2
  %arrayidx.i34.i = getelementptr inbounds [4 x float], ptr %m_weights, i64 0, i64 2
  %8 = load float, ptr %arrayidx.i34.i, align 4, !tbaa !137
  %arrayidx7.i38.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 0, i32 1, i32 0, i64 2
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 0, i32 2
  %m_q14 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 2
  %m_q17 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 0, i32 2
  %arrayidx7.i.i129 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 0, i32 2, i32 0, i64 2
  %arrayidx7.i21.i135 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %6, i64 0, i32 2, i32 0, i64 2
  %arrayidx7.i38.i144 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 0, i32 2, i32 0, i64 2
  %9 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %10 = load <2 x float>, ptr %m_weights, align 4, !tbaa !137
  %11 = load float, ptr %arrayidx7.i21.i, align 4, !tbaa !137
  %12 = load float, ptr %arrayidx7.i38.i, align 4, !tbaa !137
  %13 = load float, ptr %arrayidx7.i.i129, align 4, !tbaa !137
  %14 = insertelement <2 x float> poison, float %13, i64 0
  %15 = insertelement <2 x float> %14, float %11, i64 1
  %16 = fmul <2 x float> %10, %15
  %17 = shufflevector <2 x float> %16, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %18 = load float, ptr %arrayidx7.i21.i135, align 4, !tbaa !137
  %19 = insertelement <2 x float> poison, float %9, i64 0
  %20 = insertelement <2 x float> %19, float %18, i64 1
  %21 = fmul <2 x float> %10, %20
  %22 = fadd <2 x float> %17, %21
  %23 = load float, ptr %arrayidx7.i38.i144, align 4, !tbaa !137
  %24 = insertelement <2 x float> poison, float %8, i64 0
  %25 = shufflevector <2 x float> %24, <2 x float> poison, <2 x i32> zeroinitializer
  %26 = insertelement <2 x float> poison, float %12, i64 0
  %27 = insertelement <2 x float> %26, float %23, i64 1
  %28 = fmul <2 x float> %25, %27
  %29 = fadd <2 x float> %22, %28
  %m_x21 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1
  %m_q22 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 2
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1, i32 0, i64 2
  %30 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 2, i32 0, i64 2
  %31 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %30, %31
  %shift = shufflevector <2 x float> %29, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %32 = fsub <2 x float> %29, %shift
  %sub14.i160 = extractelement <2 x float> %32, i64 0
  %sub14.i172 = fsub float %sub14.i, %sub14.i160
  %33 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %34 = shufflevector <2 x float> %10, <2 x float> poison, <2 x i32> zeroinitializer
  %35 = fmul <2 x float> %34, %33
  %36 = load <2 x float>, ptr %m_x5, align 4, !tbaa !137
  %37 = shufflevector <2 x float> %10, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %38 = fmul <2 x float> %37, %36
  %39 = fadd <2 x float> %35, %38
  %40 = load <2 x float>, ptr %m_x8, align 4, !tbaa !137
  %41 = fmul <2 x float> %25, %40
  %42 = fadd <2 x float> %39, %41
  %43 = load <2 x float>, ptr %m_q, align 4, !tbaa !137
  %44 = fmul <2 x float> %34, %43
  %45 = load <2 x float>, ptr %m_q14, align 4, !tbaa !137
  %46 = fmul <2 x float> %37, %45
  %47 = fadd <2 x float> %44, %46
  %48 = load <2 x float>, ptr %m_q17, align 4, !tbaa !137
  %49 = fmul <2 x float> %25, %48
  %50 = fadd <2 x float> %47, %49
  %51 = load <2 x float>, ptr %m_x21, align 4, !tbaa !137
  %52 = load <2 x float>, ptr %m_q22, align 4, !tbaa !137
  %53 = fsub <2 x float> %51, %52
  %54 = fsub <2 x float> %42, %50
  %55 = fsub <2 x float> %53, %54
  %56 = load <2 x float>, ptr %m_normal, align 4, !tbaa !137
  %57 = fmul <2 x float> %55, %56
  %mul8.i.i181 = extractelement <2 x float> %57, i64 1
  %58 = extractelement <2 x float> %56, i64 0
  %59 = extractelement <2 x float> %55, i64 0
  %60 = tail call float @llvm.fmuladd.f32(float %59, float %58, float %mul8.i.i181)
  %arrayidx12.i.i = getelementptr inbounds [4 x float], ptr %m_normal, i64 0, i64 2
  %61 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %62 = tail call float @llvm.fmuladd.f32(float %sub14.i172, float %61, float %60)
  %cmp34 = fcmp olt float %62, 0.000000e+00
  br i1 %cmp34, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %m_margin = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %2, i64 %indvars.iv, i32 4
  %63 = load float, ptr %m_margin, align 8, !tbaa !567
  %64 = shufflevector <2 x float> %51, <2 x float> %42, <2 x i32> <i32 1, i32 3>
  %65 = shufflevector <2 x float> %56, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %66 = fmul <2 x float> %64, %65
  %67 = shufflevector <2 x float> %56, <2 x float> poison, <2 x i32> zeroinitializer
  %68 = shufflevector <2 x float> %51, <2 x float> %42, <2 x i32> <i32 0, i32 2>
  %69 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %67, <2 x float> %68, <2 x float> %66)
  %70 = insertelement <2 x float> poison, float %61, i64 0
  %71 = shufflevector <2 x float> %70, <2 x float> poison, <2 x i32> zeroinitializer
  %72 = insertelement <2 x float> poison, float %30, i64 0
  %73 = shufflevector <2 x float> %72, <2 x float> %29, <2 x i32> <i32 0, i32 2>
  %74 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %71, <2 x float> %73, <2 x float> %69)
  %shift317 = shufflevector <2 x float> %74, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %75 = fsub <2 x float> %74, %shift317
  %sub = extractelement <2 x float> %75, i64 0
  %sub38 = fsub float %63, %sub
  %76 = insertelement <2 x float> poison, float %sub38, i64 0
  %77 = shufflevector <2 x float> %76, <2 x float> poison, <2 x i32> zeroinitializer
  %78 = fmul <2 x float> %56, %77
  %mul8.i = fmul float %61, %sub38
  %79 = fadd <2 x float> %78, zeroinitializer
  %add13.i = fadd float %mul8.i, 0.000000e+00
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %corr.sroa.20.0 = phi float [ %add13.i, %if.then ], [ 0.000000e+00, %for.body ]
  %80 = phi <2 x float> [ %79, %if.then ], [ zeroinitializer, %for.body ]
  %81 = insertelement <2 x float> poison, float %62, i64 0
  %82 = shufflevector <2 x float> %81, <2 x float> poison, <2 x i32> zeroinitializer
  %83 = fmul <2 x float> %56, %82
  %mul8.i.i.i = fmul float %61, %62
  %sub14.i.i = fsub float %sub14.i172, %mul8.i.i.i
  %m_friction = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %2, i64 %indvars.iv, i32 5
  %84 = load float, ptr %m_friction, align 4, !tbaa !137
  %mul8.i205 = fmul float %sub14.i.i, %84
  %sub13.i = fsub float %corr.sroa.20.0, %mul8.i205
  %m_cfm = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %2, i64 %indvars.iv, i32 6
  %85 = load float, ptr %m_cfm, align 4, !tbaa !137
  %mul8.i221 = fmul float %85, %sub13.i
  %86 = fsub <2 x float> %55, %83
  %87 = insertelement <2 x float> poison, float %84, i64 0
  %88 = shufflevector <2 x float> %87, <2 x float> poison, <2 x i32> zeroinitializer
  %89 = fmul <2 x float> %86, %88
  %90 = fsub <2 x float> %80, %89
  %91 = insertelement <2 x float> poison, float %85, i64 0
  %92 = shufflevector <2 x float> %91, <2 x float> poison, <2 x i32> zeroinitializer
  %93 = fmul <2 x float> %92, %90
  %94 = fadd <2 x float> %51, %93
  store <2 x float> %94, ptr %m_x21, align 4, !tbaa !137
  %add13.i233 = fadd float %30, %mul8.i221
  store float %add13.i233, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx60 = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %2, i64 %indvars.iv, i32 6, i64 1
  %95 = load float, ptr %arrayidx60, align 4, !tbaa !137
  %96 = load float, ptr %m_weights, align 4, !tbaa !137
  %mul = fmul float %95, %96
  %mul8.i238 = fmul float %sub13.i, %mul
  %97 = insertelement <2 x float> poison, float %mul, i64 0
  %98 = shufflevector <2 x float> %97, <2 x float> poison, <2 x i32> zeroinitializer
  %99 = fmul <2 x float> %90, %98
  %100 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %101 = fsub <2 x float> %100, %99
  store <2 x float> %101, ptr %m_x, align 4, !tbaa !137
  %102 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %sub13.i250 = fsub float %102, %mul8.i238
  store float %sub13.i250, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %103 = load float, ptr %arrayidx60, align 4, !tbaa !137
  %104 = load float, ptr %arrayidx.i.i, align 4, !tbaa !137
  %mul75 = fmul float %103, %104
  %mul8.i256 = fmul float %sub13.i, %mul75
  %105 = insertelement <2 x float> poison, float %mul75, i64 0
  %106 = shufflevector <2 x float> %105, <2 x float> poison, <2 x i32> zeroinitializer
  %107 = fmul <2 x float> %90, %106
  %108 = load <2 x float>, ptr %m_x5, align 4, !tbaa !137
  %109 = fsub <2 x float> %108, %107
  store <2 x float> %109, ptr %m_x5, align 4, !tbaa !137
  %110 = load float, ptr %arrayidx7.i21.i, align 4, !tbaa !137
  %sub13.i268 = fsub float %110, %mul8.i256
  store float %sub13.i268, ptr %arrayidx7.i21.i, align 4, !tbaa !137
  %111 = load float, ptr %arrayidx60, align 4, !tbaa !137
  %112 = load float, ptr %arrayidx.i34.i, align 4, !tbaa !137
  %mul88 = fmul float %111, %112
  %mul8.i274 = fmul float %sub13.i, %mul88
  %113 = insertelement <2 x float> poison, float %mul88, i64 0
  %114 = shufflevector <2 x float> %113, <2 x float> poison, <2 x i32> zeroinitializer
  %115 = fmul <2 x float> %90, %114
  %116 = load <2 x float>, ptr %m_x8, align 4, !tbaa !137
  %117 = fsub <2 x float> %116, %115
  store <2 x float> %117, ptr %m_x8, align 4, !tbaa !137
  %118 = load float, ptr %arrayidx7.i38.i, align 4, !tbaa !137
  %sub13.i286 = fsub float %118, %mul8.i274
  store float %sub13.i286, ptr %arrayidx7.i38.i, align 4, !tbaa !137
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody12PSolve_LinksEPS_ff(ptr nocapture noundef readonly %psb, float noundef %kst, float %ti) #16 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 10, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !92
  %cmp76 = icmp sgt i32 %0, 0
  br i1 %cmp76, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 10, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !91
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %if.end, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %if.end
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %if.end ]
  %m_c0 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 5
  %2 = load float, ptr %m_c0, align 8, !tbaa !301
  %cmp3 = fcmp ogt float %2, 0.000000e+00
  br i1 %cmp3, label %if.then, label %if.end

if.then:                                          ; preds = %for.body
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 1
  %3 = load ptr, ptr %m_n, align 8, !tbaa !219
  %arrayidx5 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 1, i64 1
  %4 = load ptr, ptr %arrayidx5, align 8, !tbaa !219
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1
  %m_x6 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 2
  %5 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 1, i32 0, i64 2
  %6 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %5, %6
  %m_c1 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 6
  %7 = load float, ptr %m_c1, align 4, !tbaa !302
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 6
  %8 = load float, ptr %m_im, align 8, !tbaa !175
  %9 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %10 = load <2 x float>, ptr %m_x6, align 4, !tbaa !137
  %11 = fsub <2 x float> %9, %10
  %12 = fmul <2 x float> %11, %11
  %mul8.i.i = extractelement <2 x float> %12, i64 1
  %13 = extractelement <2 x float> %11, i64 0
  %14 = tail call float @llvm.fmuladd.f32(float %13, float %13, float %mul8.i.i)
  %15 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub14.i, float %14)
  %sub = fsub float %7, %15
  %add = fadd float %7, %15
  %mul = fmul float %2, %add
  %div = fdiv float %sub, %mul
  %mul11 = fmul float %div, %kst
  %mul13 = fmul float %8, %mul11
  %16 = insertelement <2 x float> poison, float %mul13, i64 0
  %17 = shufflevector <2 x float> %16, <2 x float> poison, <2 x i32> zeroinitializer
  %18 = fmul <2 x float> %11, %17
  %mul8.i = fmul float %sub14.i, %mul13
  %19 = fsub <2 x float> %10, %18
  store <2 x float> %19, ptr %m_x6, align 4, !tbaa !137
  %sub13.i = fsub float %6, %mul8.i
  store float %sub13.i, ptr %arrayidx13.i, align 4, !tbaa !137
  %m_im20 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 6
  %20 = load float, ptr %m_im20, align 8, !tbaa !175
  %mul21 = fmul float %mul11, %20
  %mul8.i54 = fmul float %sub14.i, %mul21
  %21 = insertelement <2 x float> poison, float %mul21, i64 0
  %22 = shufflevector <2 x float> %21, <2 x float> poison, <2 x i32> zeroinitializer
  %23 = fmul <2 x float> %11, %22
  %24 = load <2 x float>, ptr %m_x, align 4, !tbaa !137
  %25 = fadd <2 x float> %24, %23
  store <2 x float> %25, ptr %m_x, align 4, !tbaa !137
  %26 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %add13.i = fadd float %mul8.i54, %26
  store float %add13.i, ptr %arrayidx11.i, align 4, !tbaa !137
  br label %if.end

if.end:                                           ; preds = %if.then, %for.body
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable
define dso_local void @_ZN10btSoftBody12VSolve_LinksEPS_f(ptr nocapture noundef readonly %psb, float noundef %kst) #16 align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 10, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !92
  %cmp66 = icmp sgt i32 %0, 0
  br i1 %cmp66, label %for.body.lr.ph, label %for.cond.cleanup

for.body.lr.ph:                                   ; preds = %entry
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 10, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !91
  %wide.trip.count = zext i32 %0 to i64
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.body, %entry
  ret void

for.body:                                         ; preds = %for.body.lr.ph, %for.body
  %indvars.iv = phi i64 [ 0, %for.body.lr.ph ], [ %indvars.iv.next, %for.body ]
  %m_n = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 1
  %m_c3 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 8
  %2 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_v = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 3
  %arrayidx3 = getelementptr inbounds ptr, ptr %m_n, i64 1
  %3 = load ptr, ptr %arrayidx3, align 8, !tbaa !219
  %m_v4 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 3
  %4 = load float, ptr %m_v4, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 3, i32 0, i64 1
  %5 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 3, i32 0, i64 2
  %6 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 3, i32 0, i64 2
  %7 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %6, %7
  %arrayidx10.i.i = getelementptr inbounds [4 x float], ptr %m_c3, i64 0, i64 2
  %8 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %m_c2 = getelementptr inbounds %"struct.btSoftBody::Link", ptr %1, i64 %indvars.iv, i32 7
  %9 = load float, ptr %m_c2, align 8, !tbaa !451
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 6
  %10 = load float, ptr %m_im, align 8, !tbaa !175
  %11 = load <2 x float>, ptr %m_v, align 4, !tbaa !137
  %12 = extractelement <2 x float> %11, i64 0
  %sub.i = fsub float %12, %4
  %13 = extractelement <2 x float> %11, i64 1
  %sub8.i = fsub float %13, %5
  %14 = load <2 x float>, ptr %m_c3, align 4, !tbaa !137
  %15 = extractelement <2 x float> %14, i64 1
  %mul8.i.i = fmul float %sub8.i, %15
  %16 = extractelement <2 x float> %14, i64 0
  %17 = tail call float @llvm.fmuladd.f32(float %16, float %sub.i, float %mul8.i.i)
  %18 = tail call float @llvm.fmuladd.f32(float %8, float %sub14.i, float %17)
  %fneg = fneg float %18
  %mul = fmul float %9, %fneg
  %mul7 = fmul float %mul, %kst
  %mul12 = fmul float %10, %mul7
  %19 = insertelement <2 x float> poison, float %mul12, i64 0
  %20 = shufflevector <2 x float> %19, <2 x float> poison, <2 x i32> zeroinitializer
  %21 = fmul <2 x float> %14, %20
  %mul8.i = fmul float %8, %mul12
  %22 = fadd <2 x float> %11, %21
  store <2 x float> %22, ptr %m_v, align 4, !tbaa !137
  %add13.i = fadd float %6, %mul8.i
  store float %add13.i, ptr %arrayidx11.i, align 4, !tbaa !137
  %m_im22 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %3, i64 0, i32 6
  %23 = load float, ptr %m_im22, align 8, !tbaa !175
  %mul23 = fmul float %mul7, %23
  %24 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %mul8.i54 = fmul float %mul23, %24
  %25 = load <2 x float>, ptr %m_c3, align 4, !tbaa !137
  %26 = insertelement <2 x float> poison, float %mul23, i64 0
  %27 = shufflevector <2 x float> %26, <2 x float> poison, <2 x i32> zeroinitializer
  %28 = fmul <2 x float> %25, %27
  %29 = load <2 x float>, ptr %m_v4, align 4, !tbaa !137
  %30 = fsub <2 x float> %29, %28
  store <2 x float> %30, ptr %m_v4, align 4, !tbaa !137
  %31 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub13.i = fsub float %31, %mul8.i54
  store float %sub13.i, ptr %arrayidx13.i, align 4, !tbaa !137
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup, label %for.body
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody23defaultCollisionHandlerEP17btCollisionObject(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %pco) local_unnamed_addr #0 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %mins.i = alloca %class.btVector3, align 4
  %maxs.i = alloca %class.btVector3, align 4
  %volume.i = alloca %struct.btDbvtAabbMm, align 8
  %ref.tmp17.i = alloca %struct.btDbvtAabbMm, align 4
  %docollide = alloca %"struct.btSoftColliders::CollideSDF_RS", align 8
  %mins = alloca %class.btVector3, align 4
  %maxs = alloca %class.btVector3, align 4
  %volume = alloca %struct.btDbvtAabbMm, align 8
  %ref.tmp39 = alloca %struct.btDbvtAabbMm, align 4
  %collider = alloca %"struct.btSoftColliders::CollideCL_RS", align 8
  %collisions = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 25
  %0 = load i32, ptr %collisions, align 4, !tbaa !141
  %and = and i32 %0, 15
  switch i32 %and, label %sw.epilog [
    i32 1, label %sw.bb
    i32 2, label %sw.bb58
  ]

sw.bb:                                            ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %docollide) #38
  store ptr getelementptr inbounds ({ [9 x ptr] }, ptr @_ZTVN15btSoftColliders13CollideSDF_RSE, i64 0, inrange i32 0, i64 2), ptr %docollide, align 8, !tbaa !5
  %m_internalType.i.i = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 19
  %1 = load i32, ptr %m_internalType.i.i, align 8, !tbaa !134
  %cmp.i = icmp eq i32 %1, 2
  %colObj..i = select i1 %cmp.i, ptr %pco, ptr null
  %tobool.not = icmp eq ptr %colObj..i, null
  %m_interpolationWorldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %colObj..i, i64 0, i32 2
  %m_worldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 1
  %cond-lvalue = select i1 %tobool.not, ptr %m_worldTransform.i, ptr %m_interpolationWorldTransform.i
  %m_origin3.i = getelementptr inbounds %class.btTransform, ptr %cond-lvalue, i64 0, i32 1
  %wtr.sroa.6.48.copyload = load float, ptr %m_origin3.i, align 4, !tbaa.struct !163
  %wtr.sroa.8.48.m_origin3.i.sroa_idx = getelementptr inbounds %class.btTransform, ptr %cond-lvalue, i64 0, i32 1, i32 0, i64 1
  %wtr.sroa.8.48.copyload = load float, ptr %wtr.sroa.8.48.m_origin3.i.sroa_idx, align 4, !tbaa.struct !293
  %wtr.sroa.9.48.m_origin3.i.sroa_idx = getelementptr inbounds %class.btTransform, ptr %cond-lvalue, i64 0, i32 1, i32 0, i64 2
  %wtr.sroa.9.48.copyload = load float, ptr %wtr.sroa.9.48.m_origin3.i.sroa_idx, align 4, !tbaa.struct !165
  %m_origin3.i79 = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 1, i32 1
  %ctr.sroa.6.48.copyload = load float, ptr %m_origin3.i79, align 4, !tbaa.struct !163
  %sub.i = fsub float %wtr.sroa.6.48.copyload, %ctr.sroa.6.48.copyload
  %ctr.sroa.8.48.m_origin3.i79.sroa_idx = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 1, i32 1, i32 0, i64 1
  %ctr.sroa.8.48.copyload = load float, ptr %ctr.sroa.8.48.m_origin3.i79.sroa_idx, align 4, !tbaa.struct !293
  %sub8.i = fsub float %wtr.sroa.8.48.copyload, %ctr.sroa.8.48.copyload
  %ctr.sroa.9.48.m_origin3.i79.sroa_idx = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 1, i32 1, i32 0, i64 2
  %ctr.sroa.9.48.copyload = load float, ptr %ctr.sroa.9.48.m_origin3.i79.sroa_idx, align 4, !tbaa.struct !165
  %sub14.i = fsub float %wtr.sroa.9.48.copyload, %ctr.sroa.9.48.copyload
  %mul8.i.i.i = fmul float %sub8.i, %sub8.i
  %2 = tail call float @llvm.fmuladd.f32(float %sub.i, float %sub.i, float %mul8.i.i.i)
  %3 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub14.i, float %2)
  %sqrt.i = tail call float @llvm.sqrt.f32(float %3)
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %4 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable = load ptr, ptr %4, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 11
  %5 = load ptr, ptr %vfn, align 8
  %call25 = tail call noundef float %5(ptr noundef nonnull align 8 dereferenceable(24) %4)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %mins) #38
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %maxs) #38
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %volume) #38
  %m_collisionShape.i82 = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 9
  %6 = load ptr, ptr %m_collisionShape.i82, align 8, !tbaa !157
  %m_interpolationWorldTransform.i83 = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 2
  %vtable36 = load ptr, ptr %6, align 8, !tbaa !5
  %vfn37 = getelementptr inbounds ptr, ptr %vtable36, i64 2
  %7 = load ptr, ptr %vfn37, align 8
  call void %7(ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef nonnull align 4 dereferenceable(64) %m_interpolationWorldTransform.i83, ptr noundef nonnull align 4 dereferenceable(16) %mins, ptr noundef nonnull align 4 dereferenceable(16) %maxs)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %ref.tmp39)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp39, ptr noundef nonnull align 4 dereferenceable(16) %mins, i64 16, i1 false), !tbaa.struct !163
  %mx2.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp39, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %mx2.i, ptr noundef nonnull align 4 dereferenceable(16) %maxs, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %volume, ptr noundef nonnull align 4 dereferenceable(32) %ref.tmp39, i64 32, i1 false), !tbaa.struct !297
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %ref.tmp39)
  %8 = load <2 x float>, ptr %volume, align 8, !tbaa !137
  %9 = insertelement <2 x float> poison, float %call25, i64 0
  %10 = shufflevector <2 x float> %9, <2 x float> poison, <2 x i32> zeroinitializer
  %11 = fsub <2 x float> %8, %10
  store <2 x float> %11, ptr %volume, align 8, !tbaa !137
  %arrayidx12.i.i87 = getelementptr inbounds [4 x float], ptr %volume, i64 0, i64 2
  %12 = load float, ptr %arrayidx12.i.i87, align 8, !tbaa !137
  %sub13.i.i = fsub float %12, %call25
  store float %sub13.i.i, ptr %arrayidx12.i.i87, align 8, !tbaa !137
  %mx.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %volume, i64 0, i32 1
  %13 = load <2 x float>, ptr %mx.i, align 8, !tbaa !137
  %14 = fadd <2 x float> %10, %13
  store <2 x float> %14, ptr %mx.i, align 8, !tbaa !137
  %arrayidx12.i7.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %volume, i64 0, i32 1, i32 0, i64 2
  %15 = load float, ptr %arrayidx12.i7.i, align 8, !tbaa !137
  %add13.i.i = fadd float %call25, %15
  store float %add13.i.i, ptr %arrayidx12.i7.i, align 8, !tbaa !137
  %psb = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %docollide, i64 0, i32 1
  store ptr %this, ptr %psb, align 8, !tbaa !568
  %m_colObj1 = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %docollide, i64 0, i32 2
  store ptr %pco, ptr %m_colObj1, align 8, !tbaa !570
  %m_rigidBody = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %docollide, i64 0, i32 3
  store ptr %colObj..i, ptr %m_rigidBody, align 8, !tbaa !571
  %add = fadd float %call25, %sqrt.i
  %dynmargin = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %docollide, i64 0, i32 4
  store float %add, ptr %dynmargin, align 8, !tbaa !572
  %stamargin = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %docollide, i64 0, i32 5
  store float %call25, ptr %stamargin, align 4, !tbaa !573
  %m_ndbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  %16 = load ptr, ptr %m_ndbvt, align 8, !tbaa !162
  call void @_ZN6btDbvt9collideTVEPK10btDbvtNodeRK12btDbvtAabbMmRNS_8ICollideE(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt, ptr noundef %16, ptr noundef nonnull align 4 dereferenceable(32) %volume, ptr noundef nonnull align 8 dereferenceable(8) %docollide)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %volume) #38
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %maxs) #38
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %mins) #38
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %docollide) #38
  br label %sw.epilog

sw.bb58:                                          ; preds = %entry
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %collider) #38
  %erp.i.i = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %collider, i64 0, i32 1
  store float 1.000000e+00, ptr %erp.i.i, align 8, !tbaa !574
  %idt.i.i = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %collider, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %collider, i64 0, i32 5
  store i32 0, ptr %17, align 8
  store ptr getelementptr inbounds ({ [9 x ptr] }, ptr @_ZTVN15btSoftColliders12CollideCL_RSE, i64 0, inrange i32 0, i64 2), ptr %collider, align 8, !tbaa !5
  %psb.i = getelementptr inbounds %"struct.btSoftColliders::CollideCL_RS", ptr %collider, i64 0, i32 1
  store ptr %this, ptr %psb.i, align 8, !tbaa !576
  %m_colObj.i = getelementptr inbounds %"struct.btSoftColliders::CollideCL_RS", ptr %collider, i64 0, i32 2
  store ptr %pco, ptr %m_colObj.i, align 8, !tbaa !578
  %isdt.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3, i32 1
  %18 = load float, ptr %isdt.i, align 4, !tbaa !421
  store float %18, ptr %idt.i.i, align 4, !tbaa !579
  %m_collisionShape.i.i = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 9
  %19 = load ptr, ptr %m_collisionShape.i.i, align 8, !tbaa !157
  %vtable.i = load ptr, ptr %19, align 8, !tbaa !5
  %vfn.i = getelementptr inbounds ptr, ptr %vtable.i, i64 11
  %20 = load ptr, ptr %vfn.i, align 8
  %call3.i88 = tail call noundef float %20(ptr noundef nonnull align 8 dereferenceable(24) %19)
  %m_collisionShape.i31.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %21 = load ptr, ptr %m_collisionShape.i31.i, align 8, !tbaa !157
  %vtable6.i = load ptr, ptr %21, align 8, !tbaa !5
  %vfn7.i = getelementptr inbounds ptr, ptr %vtable6.i, i64 11
  %22 = load ptr, ptr %vfn7.i, align 8
  %call8.i89 = tail call noundef float %22(ptr noundef nonnull align 8 dereferenceable(24) %21)
  %add.i = fadd float %call3.i88, %call8.i89
  %m_margin.i = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %collider, i64 0, i32 3
  store float %add.i, ptr %m_margin.i, align 8, !tbaa !580
  %kDF.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 7
  %m_friction.i.i = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 16
  %23 = load float, ptr %m_friction.i.i, align 4, !tbaa !581
  %24 = load float, ptr %kDF.i, align 4, !tbaa !137
  %cmp.i.i = fcmp olt float %24, %23
  %.sroa.speculated.i = select i1 %cmp.i.i, float %24, float %23
  %friction.i = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %collider, i64 0, i32 4
  store float %.sroa.speculated.i, ptr %friction.i, align 4, !tbaa !582
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %mins.i) #38
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %maxs.i) #38
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %volume.i) #38
  %25 = load ptr, ptr %m_collisionShape.i.i, align 8, !tbaa !157
  %m_interpolationWorldTransform.i.i = getelementptr inbounds %class.btCollisionObject, ptr %pco, i64 0, i32 2
  %vtable15.i = load ptr, ptr %25, align 8, !tbaa !5
  %vfn16.i = getelementptr inbounds ptr, ptr %vtable15.i, i64 2
  %26 = load ptr, ptr %vfn16.i, align 8
  call void %26(ptr noundef nonnull align 8 dereferenceable(24) %25, ptr noundef nonnull align 4 dereferenceable(64) %m_interpolationWorldTransform.i.i, ptr noundef nonnull align 4 dereferenceable(16) %mins.i, ptr noundef nonnull align 4 dereferenceable(16) %maxs.i)
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %ref.tmp17.i)
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp17.i, ptr noundef nonnull align 4 dereferenceable(16) %mins.i, i64 16, i1 false), !tbaa.struct !163
  %mx2.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %ref.tmp17.i, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %mx2.i.i, ptr noundef nonnull align 4 dereferenceable(16) %maxs.i, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(32) %volume.i, ptr noundef nonnull align 4 dereferenceable(32) %ref.tmp17.i, i64 32, i1 false), !tbaa.struct !297
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %ref.tmp17.i)
  %27 = load <2 x float>, ptr %volume.i, align 8, !tbaa !137
  %28 = insertelement <2 x float> poison, float %add.i, i64 0
  %29 = shufflevector <2 x float> %28, <2 x float> poison, <2 x i32> zeroinitializer
  %30 = fsub <2 x float> %27, %29
  store <2 x float> %30, ptr %volume.i, align 8, !tbaa !137
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %volume.i, i64 0, i64 2
  %31 = load float, ptr %arrayidx12.i.i.i, align 8, !tbaa !137
  %sub13.i.i.i = fsub float %31, %add.i
  store float %sub13.i.i.i, ptr %arrayidx12.i.i.i, align 8, !tbaa !137
  %mx.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %volume.i, i64 0, i32 1
  %32 = load <2 x float>, ptr %mx.i.i, align 8, !tbaa !137
  %33 = fadd <2 x float> %29, %32
  store <2 x float> %33, ptr %mx.i.i, align 8, !tbaa !137
  %arrayidx12.i7.i.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %volume.i, i64 0, i32 1, i32 0, i64 2
  %34 = load float, ptr %arrayidx12.i7.i.i, align 8, !tbaa !137
  %add13.i.i.i = fadd float %add.i, %34
  store float %add13.i.i.i, ptr %arrayidx12.i7.i.i, align 8, !tbaa !137
  %m_cdbvt.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  %35 = load ptr, ptr %m_cdbvt.i, align 8, !tbaa !583
  call void @_ZN6btDbvt9collideTVEPK10btDbvtNodeRK12btDbvtAabbMmRNS_8ICollideE(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt.i, ptr noundef %35, ptr noundef nonnull align 4 dereferenceable(32) %volume.i, ptr noundef nonnull align 8 dereferenceable(8) %collider)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %volume.i) #38
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %maxs.i) #38
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %mins.i) #38
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %collider) #38
  br label %sw.epilog

sw.epilog:                                        ; preds = %entry, %sw.bb58, %sw.bb
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN6btDbvt9collideTVEPK10btDbvtNodeRK12btDbvtAabbMmRNS_8ICollideE(ptr noundef nonnull align 8 dereferenceable(64) %this, ptr noundef %root, ptr noundef nonnull align 4 dereferenceable(32) %vol, ptr noundef nonnull align 8 dereferenceable(8) %policy) local_unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %tobool.not = icmp eq ptr %root, null
  br i1 %tobool.not, label %if.end24, label %if.then

if.then:                                          ; preds = %entry
  %volume.sroa.0.0.copyload = load float, ptr %vol, align 4, !tbaa.struct !297
  %volume.sroa.5.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 4
  %volume.sroa.5.0.copyload = load float, ptr %volume.sroa.5.0.vol.sroa_idx, align 4, !tbaa.struct !584
  %volume.sroa.6.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 8
  %volume.sroa.6.0.copyload = load float, ptr %volume.sroa.6.0.vol.sroa_idx, align 4, !tbaa.struct !298
  %volume.sroa.7222.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 16
  %volume.sroa.7222.0.copyload = load float, ptr %volume.sroa.7222.0.vol.sroa_idx, align 4, !tbaa.struct !163
  %volume.sroa.8.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 20
  %volume.sroa.8.0.copyload = load float, ptr %volume.sroa.8.0.vol.sroa_idx, align 4, !tbaa.struct !293
  %volume.sroa.9.0.vol.sroa_idx = getelementptr inbounds i8, ptr %vol, i64 24
  %volume.sroa.9.0.copyload = load float, ptr %volume.sroa.9.0.vol.sroa_idx, align 4, !tbaa.struct !165
  %call.i.i.i38 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 512, i32 noundef 16)
  store ptr %root, ptr %call.i.i.i38, align 8, !tbaa !219
  br label %do.body

do.body:                                          ; preds = %if.then, %if.end19
  %stack.sroa.25.4 = phi i32 [ 64, %if.then ], [ %stack.sroa.25.7, %if.end19 ]
  %stack.sroa.3.0 = phi i32 [ 1, %if.then ], [ %stack.sroa.3.1, %if.end19 ]
  %stack.sroa.38199.4 = phi ptr [ %call.i.i.i38, %if.then ], [ %stack.sroa.38199.9, %if.end19 ]
  %stack.sroa.38199.4249 = ptrtoint ptr %stack.sroa.38199.4 to i64
  %sub = add nsw i32 %stack.sroa.3.0, -1
  %idxprom.i67 = zext i32 %sub to i64
  %arrayidx.i68 = getelementptr inbounds ptr, ptr %stack.sroa.38199.4, i64 %idxprom.i67
  %0 = load ptr, ptr %arrayidx.i68, align 8, !tbaa !219
  %1 = load float, ptr %0, align 4, !tbaa !137
  %cmp.i70 = fcmp ugt float %1, %volume.sroa.7222.0.copyload
  br i1 %cmp.i70, label %if.end19, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %do.body
  %mx2.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %0, i64 0, i32 1
  %2 = load float, ptr %mx2.i, align 4, !tbaa !137
  %cmp6.i = fcmp ult float %2, %volume.sroa.0.0.copyload
  br i1 %cmp6.i, label %if.end19, label %land.lhs.true7.i

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i
  %arrayidx.i.i71 = getelementptr inbounds [4 x float], ptr %0, i64 0, i64 1
  %3 = load float, ptr %arrayidx.i.i71, align 4, !tbaa !137
  %cmp12.i = fcmp ugt float %3, %volume.sroa.8.0.copyload
  br i1 %cmp12.i, label %if.end19, label %land.lhs.true13.i

land.lhs.true13.i:                                ; preds = %land.lhs.true7.i
  %arrayidx.i41.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %0, i64 0, i32 1, i32 0, i64 1
  %4 = load float, ptr %arrayidx.i41.i, align 4, !tbaa !137
  %cmp18.i = fcmp ult float %4, %volume.sroa.5.0.copyload
  br i1 %cmp18.i, label %if.end19, label %land.lhs.true19.i

land.lhs.true19.i:                                ; preds = %land.lhs.true13.i
  %arrayidx.i43.i = getelementptr inbounds [4 x float], ptr %0, i64 0, i64 2
  %5 = load float, ptr %arrayidx.i43.i, align 4, !tbaa !137
  %cmp24.i = fcmp ugt float %5, %volume.sroa.9.0.copyload
  br i1 %cmp24.i, label %if.end19, label %land.rhs.i

land.rhs.i:                                       ; preds = %land.lhs.true19.i
  %arrayidx.i45.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %0, i64 0, i32 1, i32 0, i64 2
  %6 = load float, ptr %arrayidx.i45.i, align 4, !tbaa !137
  %cmp29.i = fcmp ult float %6, %volume.sroa.6.0.copyload
  br i1 %cmp29.i, label %if.end19, label %invoke.cont12

invoke.cont12:                                    ; preds = %land.rhs.i
  %arrayidx.i.i72 = getelementptr inbounds %struct.btDbvtNode, ptr %0, i64 0, i32 2, i32 0, i64 1
  %7 = load ptr, ptr %arrayidx.i.i72, align 8, !tbaa !164
  %cmp.i.i73.not = icmp eq ptr %7, null
  br i1 %cmp.i.i73.not, label %if.else, label %if.then14

if.then14:                                        ; preds = %invoke.cont12
  %8 = getelementptr inbounds %struct.btDbvtNode, ptr %0, i64 0, i32 2
  %cmp.i76 = icmp eq i32 %sub, %stack.sroa.25.4
  br i1 %cmp.i76, label %if.then.i81, label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit118

if.then.i81:                                      ; preds = %if.then14
  %tobool.not.i.i77 = icmp eq i32 %stack.sroa.25.4, 0
  %mul.i.i78 = shl nuw nsw i32 %stack.sroa.25.4, 1
  %cond.i.i79 = select i1 %tobool.not.i.i77, i32 1, i32 %mul.i.i78
  %cmp.i.i80.not = icmp sgt i32 %stack.sroa.3.0, %cond.i.i79
  br i1 %cmp.i.i80.not, label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit118, label %if.then.i.i83

if.then.i.i83:                                    ; preds = %if.then.i81
  %tobool.not.i.i.i82 = icmp eq i32 %cond.i.i79, 0
  br i1 %tobool.not.i.i.i82, label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i90, label %if.then.i.i.i87

if.then.i.i.i87:                                  ; preds = %if.then.i.i83
  %conv.i.i.i.i84 = sext i32 %cond.i.i79 to i64
  %mul.i.i.i.i85 = shl nsw i64 %conv.i.i.i.i84, 3
  %call.i.i.i.i116 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i85, i32 noundef 16)
          to label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i90 unwind label %ehcleanup.thread229

_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i90: ; preds = %if.then.i.i.i87, %if.then.i.i83
  %retval.0.i.i.i88 = phi ptr [ null, %if.then.i.i83 ], [ %call.i.i.i.i116, %if.then.i.i.i87 ]
  %cmp7.i.i.i89 = icmp ugt i32 %stack.sroa.3.0, 1
  br i1 %cmp7.i.i.i89, label %for.body.lr.ph.i.i.i93, label %if.then3.i.i.i107

for.body.lr.ph.i.i.i93:                           ; preds = %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i90
  %retval.0.i.i.i88248 = ptrtoint ptr %retval.0.i.i.i88 to i64
  %wide.trip.count.i.i.i92 = zext i32 %stack.sroa.25.4 to i64
  %min.iters.check253 = icmp ult i32 %stack.sroa.25.4, 6
  %9 = sub i64 %retval.0.i.i.i88248, %stack.sroa.38199.4249
  %diff.check250 = icmp ult i64 %9, 32
  %or.cond = or i1 %min.iters.check253, %diff.check250
  br i1 %or.cond, label %for.body.i.i.i99.preheader, label %vector.ph254

vector.ph254:                                     ; preds = %for.body.lr.ph.i.i.i93
  %n.vec256 = and i64 %wide.trip.count.i.i.i92, 4294967292
  br label %vector.body259

vector.body259:                                   ; preds = %vector.body259, %vector.ph254
  %index260 = phi i64 [ 0, %vector.ph254 ], [ %index.next263, %vector.body259 ]
  %10 = getelementptr inbounds ptr, ptr %retval.0.i.i.i88, i64 %index260
  %11 = getelementptr inbounds ptr, ptr %stack.sroa.38199.4, i64 %index260
  %wide.load261 = load <2 x ptr>, ptr %11, align 8, !tbaa !219
  %12 = getelementptr inbounds ptr, ptr %11, i64 2
  %wide.load262 = load <2 x ptr>, ptr %12, align 8, !tbaa !219
  store <2 x ptr> %wide.load261, ptr %10, align 8, !tbaa !219
  %13 = getelementptr inbounds ptr, ptr %10, i64 2
  store <2 x ptr> %wide.load262, ptr %13, align 8, !tbaa !219
  %index.next263 = add nuw i64 %index260, 4
  %14 = icmp eq i64 %index.next263, %n.vec256
  br i1 %14, label %middle.block251, label %vector.body259, !llvm.loop !585

middle.block251:                                  ; preds = %vector.body259
  %cmp.n258 = icmp eq i64 %n.vec256, %wide.trip.count.i.i.i92
  br i1 %cmp.n258, label %if.then3.i.i.i107, label %for.body.i.i.i99.preheader

for.body.i.i.i99.preheader:                       ; preds = %for.body.lr.ph.i.i.i93, %middle.block251
  %indvars.iv.i.i.i94.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i93 ], [ %n.vec256, %middle.block251 ]
  %15 = xor i64 %indvars.iv.i.i.i94.ph, -1
  %16 = add nsw i64 %15, %wide.trip.count.i.i.i92
  %xtraiter = and i64 %wide.trip.count.i.i.i92, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.i.i.i99.prol.loopexit, label %for.body.i.i.i99.prol

for.body.i.i.i99.prol:                            ; preds = %for.body.i.i.i99.preheader, %for.body.i.i.i99.prol
  %indvars.iv.i.i.i94.prol = phi i64 [ %indvars.iv.next.i.i.i97.prol, %for.body.i.i.i99.prol ], [ %indvars.iv.i.i.i94.ph, %for.body.i.i.i99.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.i.i99.prol ], [ 0, %for.body.i.i.i99.preheader ]
  %arrayidx.i.i.i95.prol = getelementptr inbounds ptr, ptr %retval.0.i.i.i88, i64 %indvars.iv.i.i.i94.prol
  %arrayidx3.i.i.i96.prol = getelementptr inbounds ptr, ptr %stack.sroa.38199.4, i64 %indvars.iv.i.i.i94.prol
  %17 = load ptr, ptr %arrayidx3.i.i.i96.prol, align 8, !tbaa !219
  store ptr %17, ptr %arrayidx.i.i.i95.prol, align 8, !tbaa !219
  %indvars.iv.next.i.i.i97.prol = add nuw nsw i64 %indvars.iv.i.i.i94.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.i.i.i99.prol.loopexit, label %for.body.i.i.i99.prol, !llvm.loop !586

for.body.i.i.i99.prol.loopexit:                   ; preds = %for.body.i.i.i99.prol, %for.body.i.i.i99.preheader
  %indvars.iv.i.i.i94.unr = phi i64 [ %indvars.iv.i.i.i94.ph, %for.body.i.i.i99.preheader ], [ %indvars.iv.next.i.i.i97.prol, %for.body.i.i.i99.prol ]
  %18 = icmp ult i64 %16, 3
  br i1 %18, label %if.then3.i.i.i107, label %for.body.i.i.i99

for.body.i.i.i99:                                 ; preds = %for.body.i.i.i99.prol.loopexit, %for.body.i.i.i99
  %indvars.iv.i.i.i94 = phi i64 [ %indvars.iv.next.i.i.i97.3, %for.body.i.i.i99 ], [ %indvars.iv.i.i.i94.unr, %for.body.i.i.i99.prol.loopexit ]
  %arrayidx.i.i.i95 = getelementptr inbounds ptr, ptr %retval.0.i.i.i88, i64 %indvars.iv.i.i.i94
  %arrayidx3.i.i.i96 = getelementptr inbounds ptr, ptr %stack.sroa.38199.4, i64 %indvars.iv.i.i.i94
  %19 = load ptr, ptr %arrayidx3.i.i.i96, align 8, !tbaa !219
  store ptr %19, ptr %arrayidx.i.i.i95, align 8, !tbaa !219
  %indvars.iv.next.i.i.i97 = add nuw nsw i64 %indvars.iv.i.i.i94, 1
  %arrayidx.i.i.i95.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i88, i64 %indvars.iv.next.i.i.i97
  %arrayidx3.i.i.i96.1 = getelementptr inbounds ptr, ptr %stack.sroa.38199.4, i64 %indvars.iv.next.i.i.i97
  %20 = load ptr, ptr %arrayidx3.i.i.i96.1, align 8, !tbaa !219
  store ptr %20, ptr %arrayidx.i.i.i95.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i97.1 = add nuw nsw i64 %indvars.iv.i.i.i94, 2
  %arrayidx.i.i.i95.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i88, i64 %indvars.iv.next.i.i.i97.1
  %arrayidx3.i.i.i96.2 = getelementptr inbounds ptr, ptr %stack.sroa.38199.4, i64 %indvars.iv.next.i.i.i97.1
  %21 = load ptr, ptr %arrayidx3.i.i.i96.2, align 8, !tbaa !219
  store ptr %21, ptr %arrayidx.i.i.i95.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i97.2 = add nuw nsw i64 %indvars.iv.i.i.i94, 3
  %arrayidx.i.i.i95.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i88, i64 %indvars.iv.next.i.i.i97.2
  %arrayidx3.i.i.i96.3 = getelementptr inbounds ptr, ptr %stack.sroa.38199.4, i64 %indvars.iv.next.i.i.i97.2
  %22 = load ptr, ptr %arrayidx3.i.i.i96.3, align 8, !tbaa !219
  store ptr %22, ptr %arrayidx.i.i.i95.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i97.3 = add nuw nsw i64 %indvars.iv.i.i.i94, 4
  %exitcond.not.i.i.i98.3 = icmp eq i64 %indvars.iv.next.i.i.i97.3, %wide.trip.count.i.i.i92
  br i1 %exitcond.not.i.i.i98.3, label %if.then3.i.i.i107, label %for.body.i.i.i99, !llvm.loop !587

if.then3.i.i.i107:                                ; preds = %for.body.i.i.i99.prol.loopexit, %for.body.i.i.i99, %middle.block251, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i90
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stack.sroa.38199.4)
          to label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit118 unwind label %ehcleanup.thread229

_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit118: ; preds = %if.then3.i.i.i107, %if.then14, %if.then.i81
  %stack.sroa.25.5 = phi i32 [ %stack.sroa.25.4, %if.then.i81 ], [ %stack.sroa.25.4, %if.then14 ], [ %cond.i.i79, %if.then3.i.i.i107 ]
  %stack.sroa.38199.5 = phi ptr [ %stack.sroa.38199.4, %if.then.i81 ], [ %stack.sroa.38199.4, %if.then14 ], [ %retval.0.i.i.i88, %if.then3.i.i.i107 ]
  %stack.sroa.38199.5245 = ptrtoint ptr %stack.sroa.38199.5 to i64
  %arrayidx.i112 = getelementptr inbounds ptr, ptr %stack.sroa.38199.5, i64 %idxprom.i67
  %23 = load ptr, ptr %8, align 8, !tbaa !219
  store ptr %23, ptr %arrayidx.i112, align 8, !tbaa !219
  %cmp.i121 = icmp eq i32 %stack.sroa.3.0, %stack.sroa.25.5
  br i1 %cmp.i121, label %if.then.i126, label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit163

if.then.i126:                                     ; preds = %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit118
  %tobool.not.i.i122 = icmp eq i32 %stack.sroa.3.0, 0
  %mul.i.i123 = shl nsw i32 %stack.sroa.3.0, 1
  %cond.i.i124 = select i1 %tobool.not.i.i122, i32 1, i32 %mul.i.i123
  %cmp.i.i125 = icmp slt i32 %stack.sroa.3.0, %cond.i.i124
  br i1 %cmp.i.i125, label %if.then.i.i128, label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit163

if.then.i.i128:                                   ; preds = %if.then.i126
  %tobool.not.i.i.i127 = icmp eq i32 %cond.i.i124, 0
  br i1 %tobool.not.i.i.i127, label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i135, label %if.then.i.i.i132

if.then.i.i.i132:                                 ; preds = %if.then.i.i128
  %conv.i.i.i.i129 = sext i32 %cond.i.i124 to i64
  %mul.i.i.i.i130 = shl nsw i64 %conv.i.i.i.i129, 3
  %call.i.i.i.i161 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i130, i32 noundef 16)
          to label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i135 unwind label %ehcleanup.thread229

_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i135: ; preds = %if.then.i.i.i132, %if.then.i.i128
  %retval.0.i.i.i133 = phi ptr [ null, %if.then.i.i128 ], [ %call.i.i.i.i161, %if.then.i.i.i132 ]
  %cmp7.i.i.i134 = icmp sgt i32 %stack.sroa.3.0, 0
  br i1 %cmp7.i.i.i134, label %for.body.lr.ph.i.i.i138, label %if.then3.i.i.i152

for.body.lr.ph.i.i.i138:                          ; preds = %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i135
  %retval.0.i.i.i133244 = ptrtoint ptr %retval.0.i.i.i133 to i64
  %wide.trip.count.i.i.i137 = zext i32 %stack.sroa.3.0 to i64
  %min.iters.check = icmp ult i32 %stack.sroa.3.0, 6
  %24 = sub i64 %retval.0.i.i.i133244, %stack.sroa.38199.5245
  %diff.check = icmp ult i64 %24, 32
  %or.cond264 = or i1 %min.iters.check, %diff.check
  br i1 %or.cond264, label %for.body.i.i.i144.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body.lr.ph.i.i.i138
  %n.vec = and i64 %wide.trip.count.i.i.i137, 4294967292
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %25 = getelementptr inbounds ptr, ptr %retval.0.i.i.i133, i64 %index
  %26 = getelementptr inbounds ptr, ptr %stack.sroa.38199.5, i64 %index
  %wide.load = load <2 x ptr>, ptr %26, align 8, !tbaa !219
  %27 = getelementptr inbounds ptr, ptr %26, i64 2
  %wide.load246 = load <2 x ptr>, ptr %27, align 8, !tbaa !219
  store <2 x ptr> %wide.load, ptr %25, align 8, !tbaa !219
  %28 = getelementptr inbounds ptr, ptr %25, i64 2
  store <2 x ptr> %wide.load246, ptr %28, align 8, !tbaa !219
  %index.next = add nuw i64 %index, 4
  %29 = icmp eq i64 %index.next, %n.vec
  br i1 %29, label %middle.block, label %vector.body, !llvm.loop !588

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %wide.trip.count.i.i.i137
  br i1 %cmp.n, label %if.then3.i.i.i152, label %for.body.i.i.i144.preheader

for.body.i.i.i144.preheader:                      ; preds = %for.body.lr.ph.i.i.i138, %middle.block
  %indvars.iv.i.i.i139.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i138 ], [ %n.vec, %middle.block ]
  %30 = xor i64 %indvars.iv.i.i.i139.ph, -1
  %31 = add nsw i64 %30, %wide.trip.count.i.i.i137
  %xtraiter267 = and i64 %wide.trip.count.i.i.i137, 3
  %lcmp.mod268.not = icmp eq i64 %xtraiter267, 0
  br i1 %lcmp.mod268.not, label %for.body.i.i.i144.prol.loopexit, label %for.body.i.i.i144.prol

for.body.i.i.i144.prol:                           ; preds = %for.body.i.i.i144.preheader, %for.body.i.i.i144.prol
  %indvars.iv.i.i.i139.prol = phi i64 [ %indvars.iv.next.i.i.i142.prol, %for.body.i.i.i144.prol ], [ %indvars.iv.i.i.i139.ph, %for.body.i.i.i144.preheader ]
  %prol.iter269 = phi i64 [ %prol.iter269.next, %for.body.i.i.i144.prol ], [ 0, %for.body.i.i.i144.preheader ]
  %arrayidx.i.i.i140.prol = getelementptr inbounds ptr, ptr %retval.0.i.i.i133, i64 %indvars.iv.i.i.i139.prol
  %arrayidx3.i.i.i141.prol = getelementptr inbounds ptr, ptr %stack.sroa.38199.5, i64 %indvars.iv.i.i.i139.prol
  %32 = load ptr, ptr %arrayidx3.i.i.i141.prol, align 8, !tbaa !219
  store ptr %32, ptr %arrayidx.i.i.i140.prol, align 8, !tbaa !219
  %indvars.iv.next.i.i.i142.prol = add nuw nsw i64 %indvars.iv.i.i.i139.prol, 1
  %prol.iter269.next = add i64 %prol.iter269, 1
  %prol.iter269.cmp.not = icmp eq i64 %prol.iter269.next, %xtraiter267
  br i1 %prol.iter269.cmp.not, label %for.body.i.i.i144.prol.loopexit, label %for.body.i.i.i144.prol, !llvm.loop !589

for.body.i.i.i144.prol.loopexit:                  ; preds = %for.body.i.i.i144.prol, %for.body.i.i.i144.preheader
  %indvars.iv.i.i.i139.unr = phi i64 [ %indvars.iv.i.i.i139.ph, %for.body.i.i.i144.preheader ], [ %indvars.iv.next.i.i.i142.prol, %for.body.i.i.i144.prol ]
  %33 = icmp ult i64 %31, 3
  br i1 %33, label %if.then3.i.i.i152, label %for.body.i.i.i144

for.body.i.i.i144:                                ; preds = %for.body.i.i.i144.prol.loopexit, %for.body.i.i.i144
  %indvars.iv.i.i.i139 = phi i64 [ %indvars.iv.next.i.i.i142.3, %for.body.i.i.i144 ], [ %indvars.iv.i.i.i139.unr, %for.body.i.i.i144.prol.loopexit ]
  %arrayidx.i.i.i140 = getelementptr inbounds ptr, ptr %retval.0.i.i.i133, i64 %indvars.iv.i.i.i139
  %arrayidx3.i.i.i141 = getelementptr inbounds ptr, ptr %stack.sroa.38199.5, i64 %indvars.iv.i.i.i139
  %34 = load ptr, ptr %arrayidx3.i.i.i141, align 8, !tbaa !219
  store ptr %34, ptr %arrayidx.i.i.i140, align 8, !tbaa !219
  %indvars.iv.next.i.i.i142 = add nuw nsw i64 %indvars.iv.i.i.i139, 1
  %arrayidx.i.i.i140.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i133, i64 %indvars.iv.next.i.i.i142
  %arrayidx3.i.i.i141.1 = getelementptr inbounds ptr, ptr %stack.sroa.38199.5, i64 %indvars.iv.next.i.i.i142
  %35 = load ptr, ptr %arrayidx3.i.i.i141.1, align 8, !tbaa !219
  store ptr %35, ptr %arrayidx.i.i.i140.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i142.1 = add nuw nsw i64 %indvars.iv.i.i.i139, 2
  %arrayidx.i.i.i140.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i133, i64 %indvars.iv.next.i.i.i142.1
  %arrayidx3.i.i.i141.2 = getelementptr inbounds ptr, ptr %stack.sroa.38199.5, i64 %indvars.iv.next.i.i.i142.1
  %36 = load ptr, ptr %arrayidx3.i.i.i141.2, align 8, !tbaa !219
  store ptr %36, ptr %arrayidx.i.i.i140.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i142.2 = add nuw nsw i64 %indvars.iv.i.i.i139, 3
  %arrayidx.i.i.i140.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i133, i64 %indvars.iv.next.i.i.i142.2
  %arrayidx3.i.i.i141.3 = getelementptr inbounds ptr, ptr %stack.sroa.38199.5, i64 %indvars.iv.next.i.i.i142.2
  %37 = load ptr, ptr %arrayidx3.i.i.i141.3, align 8, !tbaa !219
  store ptr %37, ptr %arrayidx.i.i.i140.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i142.3 = add nuw nsw i64 %indvars.iv.i.i.i139, 4
  %exitcond.not.i.i.i143.3 = icmp eq i64 %indvars.iv.next.i.i.i142.3, %wide.trip.count.i.i.i137
  br i1 %exitcond.not.i.i.i143.3, label %if.then3.i.i.i152, label %for.body.i.i.i144, !llvm.loop !590

if.then3.i.i.i152:                                ; preds = %for.body.i.i.i144.prol.loopexit, %for.body.i.i.i144, %middle.block, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE8allocateEi.exit.i.i135
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stack.sroa.38199.5)
          to label %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit163 unwind label %ehcleanup.thread229

_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit163: ; preds = %if.then3.i.i.i152, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit118, %if.then.i126
  %stack.sroa.25.6 = phi i32 [ %stack.sroa.3.0, %if.then.i126 ], [ %stack.sroa.25.5, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit118 ], [ %cond.i.i124, %if.then3.i.i.i152 ]
  %stack.sroa.38199.6 = phi ptr [ %stack.sroa.38199.5, %if.then.i126 ], [ %stack.sroa.38199.5, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit118 ], [ %retval.0.i.i.i133, %if.then3.i.i.i152 ]
  %idxprom.i156 = sext i32 %stack.sroa.3.0 to i64
  %arrayidx.i157 = getelementptr inbounds ptr, ptr %stack.sroa.38199.6, i64 %idxprom.i156
  %38 = load ptr, ptr %arrayidx.i.i72, align 8, !tbaa !219
  store ptr %38, ptr %arrayidx.i157, align 8, !tbaa !219
  %inc.i158 = add nsw i32 %stack.sroa.3.0, 1
  br label %if.end19

if.else:                                          ; preds = %invoke.cont12
  %vtable = load ptr, ptr %policy, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 3
  %39 = load ptr, ptr %vfn, align 8
  invoke void %39(ptr noundef nonnull align 8 dereferenceable(8) %policy, ptr noundef nonnull %0)
          to label %if.end19 unwind label %ehcleanup

if.end19:                                         ; preds = %land.lhs.true19.i, %land.lhs.true13.i, %land.lhs.true7.i, %land.lhs.true.i, %do.body, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit163, %if.else, %land.rhs.i
  %stack.sroa.25.7 = phi i32 [ %stack.sroa.25.6, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit163 ], [ %stack.sroa.25.4, %if.else ], [ %stack.sroa.25.4, %land.rhs.i ], [ %stack.sroa.25.4, %do.body ], [ %stack.sroa.25.4, %land.lhs.true.i ], [ %stack.sroa.25.4, %land.lhs.true7.i ], [ %stack.sroa.25.4, %land.lhs.true13.i ], [ %stack.sroa.25.4, %land.lhs.true19.i ]
  %stack.sroa.3.1 = phi i32 [ %inc.i158, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit163 ], [ %sub, %if.else ], [ %sub, %land.rhs.i ], [ %sub, %do.body ], [ %sub, %land.lhs.true.i ], [ %sub, %land.lhs.true7.i ], [ %sub, %land.lhs.true13.i ], [ %sub, %land.lhs.true19.i ]
  %stack.sroa.38199.9 = phi ptr [ %stack.sroa.38199.6, %_ZN20btAlignedObjectArrayIPK10btDbvtNodeE9push_backERKS2_.exit163 ], [ %stack.sroa.38199.4, %if.else ], [ %stack.sroa.38199.4, %land.rhs.i ], [ %stack.sroa.38199.4, %do.body ], [ %stack.sroa.38199.4, %land.lhs.true.i ], [ %stack.sroa.38199.4, %land.lhs.true7.i ], [ %stack.sroa.38199.4, %land.lhs.true13.i ], [ %stack.sroa.38199.4, %land.lhs.true19.i ]
  %cmp = icmp sgt i32 %stack.sroa.3.1, 0
  br i1 %cmp, label %do.body, label %if.then3.i.i.i170

if.then3.i.i.i170:                                ; preds = %if.end19
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stack.sroa.38199.9)
  br label %if.end24

ehcleanup.thread229:                              ; preds = %if.then3.i.i.i152, %if.then.i.i.i132, %if.then3.i.i.i107, %if.then.i.i.i87
  %stack.sroa.38199.8.ph = phi ptr [ %stack.sroa.38199.4, %if.then.i.i.i87 ], [ %stack.sroa.38199.4, %if.then3.i.i.i107 ], [ %stack.sroa.38199.5, %if.then.i.i.i132 ], [ %stack.sroa.38199.5, %if.then3.i.i.i152 ]
  %lpad.thr_comm = landingpad { ptr, i32 }
          cleanup
  br label %if.then3.i.i.i177

ehcleanup:                                        ; preds = %if.else
  %lpad.thr_comm.split-lp = landingpad { ptr, i32 }
          cleanup
  br label %if.then3.i.i.i177

if.then3.i.i.i177:                                ; preds = %ehcleanup, %ehcleanup.thread229
  %lpad.thr_comm.split-lp.sink240 = phi { ptr, i32 } [ %lpad.thr_comm.split-lp, %ehcleanup ], [ %lpad.thr_comm, %ehcleanup.thread229 ]
  %stack.sroa.38199.8233 = phi ptr [ %stack.sroa.38199.4, %ehcleanup ], [ %stack.sroa.38199.8.ph, %ehcleanup.thread229 ]
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stack.sroa.38199.8233)
          to label %invoke.cont21 unwind label %terminate.lpad

invoke.cont21:                                    ; preds = %if.then3.i.i.i177
  resume { ptr, i32 } %lpad.thr_comm.split-lp.sink240

if.end24:                                         ; preds = %if.then3.i.i.i170, %entry
  ret void

terminate.lpad:                                   ; preds = %if.then3.i.i.i177
  %40 = landingpad { ptr, i32 }
          catch ptr null
  %41 = extractvalue { ptr, i32 } %40, 0
  tail call void @__clang_call_terminate(ptr %41) #39
  unreachable
}

; Function Attrs: uwtable
define dso_local void @_ZN10btSoftBody23defaultCollisionHandlerEPS_(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %psb) local_unnamed_addr #4 align 2 personality ptr @__gxx_personality_v0 {
entry:
  %docollide = alloca %"struct.btSoftColliders::CollideCL_SS", align 8
  %docollide12 = alloca %"struct.btSoftColliders::CollideVF_SS", align 8
  %collisions = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 25
  %0 = load i32, ptr %collisions, align 4, !tbaa !141
  %collisions3 = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 2, i32 25
  %1 = load i32, ptr %collisions3, align 4, !tbaa !141
  %and = and i32 %0, 48
  %and4 = and i32 %and, %1
  switch i32 %and4, label %sw.epilog [
    i32 32, label %sw.bb
    i32 16, label %sw.bb9
  ]

sw.bb:                                            ; preds = %entry
  %cmp.not = icmp eq ptr %this, %psb
  %and7 = and i32 %1, 64
  %tobool.not = icmp eq i32 %and7, 0
  %or.cond = and i1 %cmp.not, %tobool.not
  br i1 %or.cond, label %sw.epilog, label %if.then

if.then:                                          ; preds = %sw.bb
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %docollide) #38
  %erp.i.i = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %docollide, i64 0, i32 1
  store float 1.000000e+00, ptr %erp.i.i, align 8, !tbaa !574
  %idt.i.i = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %docollide, i64 0, i32 2
  %2 = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %docollide, i64 0, i32 5
  store i32 0, ptr %2, align 8
  store ptr getelementptr inbounds ({ [9 x ptr] }, ptr @_ZTVN15btSoftColliders12CollideCL_SSE, i64 0, inrange i32 0, i64 2), ptr %docollide, align 8, !tbaa !5
  %isdt.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 3, i32 1
  %3 = load float, ptr %isdt.i, align 4, !tbaa !421
  store float %3, ptr %idt.i.i, align 4, !tbaa !579
  %m_collisionShape.i.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %4 = load ptr, ptr %m_collisionShape.i.i, align 8, !tbaa !157
  %vtable.i = load ptr, ptr %4, align 8, !tbaa !5
  %vfn.i = getelementptr inbounds ptr, ptr %vtable.i, i64 11
  %5 = load ptr, ptr %vfn.i, align 8
  %call2.i61 = tail call noundef float %5(ptr noundef nonnull align 8 dereferenceable(24) %4)
  %m_collisionShape.i23.i = getelementptr inbounds %class.btCollisionObject, ptr %psb, i64 0, i32 9
  %6 = load ptr, ptr %m_collisionShape.i23.i, align 8, !tbaa !157
  %vtable4.i = load ptr, ptr %6, align 8, !tbaa !5
  %vfn5.i = getelementptr inbounds ptr, ptr %vtable4.i, i64 11
  %7 = load ptr, ptr %vfn5.i, align 8
  %call6.i62 = tail call noundef float %7(ptr noundef nonnull align 8 dereferenceable(24) %6)
  %add.i = fadd float %call2.i61, %call6.i62
  %m_margin.i = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %docollide, i64 0, i32 3
  store float %add.i, ptr %m_margin.i, align 8, !tbaa !580
  %kDF.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 2, i32 7
  %kDF8.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 2, i32 7
  %8 = load float, ptr %kDF.i, align 4
  %9 = load float, ptr %kDF8.i, align 4
  %cmp.i.i = fcmp olt float %8, %9
  %10 = select i1 %cmp.i.i, float %8, float %9
  %friction.i = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %docollide, i64 0, i32 4
  store float %10, ptr %friction.i, align 4, !tbaa !582
  %bodies.i = getelementptr inbounds %"struct.btSoftColliders::CollideCL_SS", ptr %docollide, i64 0, i32 1
  store ptr %this, ptr %bodies.i, align 8, !tbaa !219
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftColliders::CollideCL_SS", ptr %docollide, i64 0, i32 1, i64 1
  store ptr %psb, ptr %arrayidx11.i, align 8, !tbaa !219
  %m_cdbvt.i = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 23
  %11 = load ptr, ptr %m_cdbvt.i, align 8, !tbaa !583
  %m_cdbvt13.i = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 23
  %12 = load ptr, ptr %m_cdbvt13.i, align 8, !tbaa !583
  call void @_ZN6btDbvt9collideTTEPK10btDbvtNodeS2_RNS_8ICollideE(ptr noundef nonnull align 8 dereferenceable(64) %m_cdbvt.i, ptr noundef %11, ptr noundef %12, ptr noundef nonnull align 8 dereferenceable(8) %docollide)
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %docollide) #38
  br label %sw.epilog

sw.bb9:                                           ; preds = %entry
  %cmp10.not = icmp eq ptr %this, %psb
  br i1 %cmp10.not, label %sw.epilog, label %if.then11

if.then11:                                        ; preds = %sw.bb9
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %docollide12) #38
  store ptr getelementptr inbounds ({ [9 x ptr] }, ptr @_ZTVN15btSoftColliders12CollideVF_SSE, i64 0, inrange i32 0, i64 2), ptr %docollide12, align 8, !tbaa !5
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %this, i64 0, i32 9
  %13 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %vtable = load ptr, ptr %13, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 11
  %14 = load ptr, ptr %vfn, align 8
  %call16 = tail call noundef float %14(ptr noundef nonnull align 8 dereferenceable(24) %13)
  %m_collisionShape.i63 = getelementptr inbounds %class.btCollisionObject, ptr %psb, i64 0, i32 9
  %15 = load ptr, ptr %m_collisionShape.i63, align 8, !tbaa !157
  %vtable19 = load ptr, ptr %15, align 8, !tbaa !5
  %vfn20 = getelementptr inbounds ptr, ptr %vtable19, i64 11
  %16 = load ptr, ptr %vfn20, align 8
  %call22 = tail call noundef float %16(ptr noundef nonnull align 8 dereferenceable(24) %15)
  %add = fadd float %call16, %call22
  %mrg = getelementptr inbounds %"struct.btSoftColliders::CollideVF_SS", ptr %docollide12, i64 0, i32 2
  store float %add, ptr %mrg, align 8, !tbaa !591
  %psb23 = getelementptr inbounds %"struct.btSoftColliders::CollideVF_SS", ptr %docollide12, i64 0, i32 1
  store ptr %this, ptr %psb23, align 8, !tbaa !219
  %arrayidx25 = getelementptr inbounds %"struct.btSoftColliders::CollideVF_SS", ptr %docollide12, i64 0, i32 1, i64 1
  store ptr %psb, ptr %arrayidx25, align 8, !tbaa !219
  %m_ndbvt = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 21
  %17 = load ptr, ptr %m_ndbvt, align 8, !tbaa !162
  %m_fdbvt = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 22
  %18 = load ptr, ptr %m_fdbvt, align 8, !tbaa !593
  call void @_ZN6btDbvt9collideTTEPK10btDbvtNodeS2_RNS_8ICollideE(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt, ptr noundef %17, ptr noundef %18, ptr noundef nonnull align 8 dereferenceable(8) %docollide12)
  store ptr %psb, ptr %psb23, align 8, !tbaa !219
  store ptr %this, ptr %arrayidx25, align 8, !tbaa !219
  %m_ndbvt41 = getelementptr inbounds %class.btSoftBody, ptr %psb, i64 0, i32 21
  %19 = load ptr, ptr %m_ndbvt41, align 8, !tbaa !162
  %m_fdbvt48 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 22
  %20 = load ptr, ptr %m_fdbvt48, align 8, !tbaa !593
  call void @_ZN6btDbvt9collideTTEPK10btDbvtNodeS2_RNS_8ICollideE(ptr noundef nonnull align 8 dereferenceable(64) %m_ndbvt41, ptr noundef %19, ptr noundef %20, ptr noundef nonnull align 8 dereferenceable(8) %docollide12)
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %docollide12) #38
  br label %sw.epilog

sw.epilog:                                        ; preds = %sw.bb, %entry, %sw.bb9, %if.then11, %if.then
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN6btDbvt9collideTTEPK10btDbvtNodeS2_RNS_8ICollideE(ptr noundef nonnull align 8 dereferenceable(64) %this, ptr noundef %root0, ptr noundef %root1, ptr noundef nonnull align 8 dereferenceable(8) %policy) local_unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %ref.tmp14 = alloca %"struct.btDbvt::sStkNN", align 8
  %tobool = icmp ne ptr %root0, null
  %tobool2 = icmp ne ptr %root1, null
  %or.cond = and i1 %tobool, %tobool2
  br i1 %or.cond, label %if.then, label %if.end165

if.then:                                          ; preds = %entry
  %call.i.i.i.i213 = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 2048, i32 noundef 16)
  store ptr %root0, ptr %call.i.i.i.i213, align 8, !tbaa.struct !594
  %ref.tmp4.sroa.4.0..sroa_idx = getelementptr inbounds i8, ptr %call.i.i.i.i213, i64 8
  store ptr %root1, ptr %ref.tmp4.sroa.4.0..sroa_idx, align 8, !tbaa.struct !595
  br label %do.body

do.body:                                          ; preds = %if.end158, %if.then
  %stkStack.sroa.3.0 = phi i32 [ 128, %if.then ], [ %stkStack.sroa.3.1, %if.end158 ]
  %stkStack.sroa.14.2 = phi i32 [ 128, %if.then ], [ %stkStack.sroa.14.5, %if.end158 ]
  %stkStack.sroa.21330.2 = phi ptr [ %call.i.i.i.i213, %if.then ], [ %stkStack.sroa.21330.5, %if.end158 ]
  %treshold.0 = phi i32 [ 124, %if.then ], [ %treshold.1, %if.end158 ]
  %depth.0 = phi i32 [ 1, %if.then ], [ %depth.1, %if.end158 ]
  %dec = add nsw i32 %depth.0, -1
  %idxprom.i = sext i32 %dec to i64
  %arrayidx.i = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.2, i64 %idxprom.i
  %p.sroa.0.0.copyload = load ptr, ptr %arrayidx.i, align 8, !tbaa.struct !594
  %p.sroa.23.0.call10.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 8
  %p.sroa.23.0.copyload = load ptr, ptr %p.sroa.23.0.call10.sroa_idx, align 8, !tbaa.struct !595
  %cmp = icmp sgt i32 %dec, %treshold.0
  br i1 %cmp, label %if.then11, label %if.end

if.then11:                                        ; preds = %do.body
  %mul = shl nsw i32 %stkStack.sroa.3.0, 1
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp14)
  %cmp4.i217 = icmp slt i32 %stkStack.sroa.3.0, %mul
  br i1 %cmp4.i217, label %if.then5.i221, label %invoke.cont17

if.then5.i221:                                    ; preds = %if.then11
  %cmp.i.i220 = icmp slt i32 %stkStack.sroa.14.2, %mul
  br i1 %cmp.i.i220, label %if.then.i.i222, label %for.body10.lr.ph.i243

if.then.i.i222:                                   ; preds = %if.then5.i221
  %tobool.not.i.i.i = icmp eq i32 %stkStack.sroa.3.0, 0
  br i1 %tobool.not.i.i.i, label %if.then3.i.i.i240, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i222
  %conv.i.i.i.i = sext i32 %mul to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 4
  %call.i.i.i.i250 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
          to label %_ZN20btAlignedObjectArrayIN6btDbvt6sStkNNEE8allocateEi.exit.i.i unwind label %ehcleanup160.thread363

_ZN20btAlignedObjectArrayIN6btDbvt6sStkNNEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i
  %cmp7.i.i.i224 = icmp sgt i32 %stkStack.sroa.3.0, 0
  br i1 %cmp7.i.i.i224, label %for.body.lr.ph.i.i.i227, label %if.then3.i.i.i240

for.body.lr.ph.i.i.i227:                          ; preds = %_ZN20btAlignedObjectArrayIN6btDbvt6sStkNNEE8allocateEi.exit.i.i
  %wide.trip.count.i.i.i226 = zext i32 %stkStack.sroa.3.0 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i226, 1
  %0 = icmp eq i32 %stkStack.sroa.3.0, 1
  br i1 %0, label %if.then3.i.i.i240.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i227.new

for.body.lr.ph.i.i.i227.new:                      ; preds = %for.body.lr.ph.i.i.i227
  %unroll_iter = and i64 %wide.trip.count.i.i.i226, 4294967294
  br label %for.body.i.i.i233

for.body.i.i.i233:                                ; preds = %for.body.i.i.i233, %for.body.lr.ph.i.i.i227.new
  %indvars.iv.i.i.i228 = phi i64 [ 0, %for.body.lr.ph.i.i.i227.new ], [ %indvars.iv.next.i.i.i231.1, %for.body.i.i.i233 ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i227.new ], [ %niter.next.1, %for.body.i.i.i233 ]
  %arrayidx.i.i.i229 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %call.i.i.i.i250, i64 %indvars.iv.i.i.i228
  %arrayidx3.i.i.i230 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.2, i64 %indvars.iv.i.i.i228
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx.i.i.i229, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx3.i.i.i230, i64 16, i1 false), !tbaa.struct !594
  %indvars.iv.next.i.i.i231 = or i64 %indvars.iv.i.i.i228, 1
  %arrayidx.i.i.i229.1 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %call.i.i.i.i250, i64 %indvars.iv.next.i.i.i231
  %arrayidx3.i.i.i230.1 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.2, i64 %indvars.iv.next.i.i.i231
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx.i.i.i229.1, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx3.i.i.i230.1, i64 16, i1 false), !tbaa.struct !594
  %indvars.iv.next.i.i.i231.1 = add nuw nsw i64 %indvars.iv.i.i.i228, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %if.then3.i.i.i240.loopexit.unr-lcssa, label %for.body.i.i.i233

if.then3.i.i.i240.loopexit.unr-lcssa:             ; preds = %for.body.i.i.i233, %for.body.lr.ph.i.i.i227
  %indvars.iv.i.i.i228.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i227 ], [ %indvars.iv.next.i.i.i231.1, %for.body.i.i.i233 ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %if.then3.i.i.i240, label %for.body.i.i.i233.epil

for.body.i.i.i233.epil:                           ; preds = %if.then3.i.i.i240.loopexit.unr-lcssa
  %arrayidx.i.i.i229.epil = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %call.i.i.i.i250, i64 %indvars.iv.i.i.i228.unr
  %arrayidx3.i.i.i230.epil = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.2, i64 %indvars.iv.i.i.i228.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx.i.i.i229.epil, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx3.i.i.i230.epil, i64 16, i1 false), !tbaa.struct !594
  br label %if.then3.i.i.i240

if.then3.i.i.i240:                                ; preds = %for.body.i.i.i233.epil, %if.then3.i.i.i240.loopexit.unr-lcssa, %if.then.i.i222, %_ZN20btAlignedObjectArrayIN6btDbvt6sStkNNEE8allocateEi.exit.i.i
  %retval.0.i.i.i358 = phi ptr [ %call.i.i.i.i250, %_ZN20btAlignedObjectArrayIN6btDbvt6sStkNNEE8allocateEi.exit.i.i ], [ null, %if.then.i.i222 ], [ %call.i.i.i.i250, %if.then3.i.i.i240.loopexit.unr-lcssa ], [ %call.i.i.i.i250, %for.body.i.i.i233.epil ]
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stkStack.sroa.21330.2)
          to label %for.body10.lr.ph.i243 unwind label %ehcleanup160.thread363

for.body10.lr.ph.i243:                            ; preds = %if.then3.i.i.i240, %if.then5.i221
  %stkStack.sroa.14.3 = phi i32 [ %stkStack.sroa.14.2, %if.then5.i221 ], [ %mul, %if.then3.i.i.i240 ]
  %stkStack.sroa.21330.3 = phi ptr [ %stkStack.sroa.21330.2, %if.then5.i221 ], [ %retval.0.i.i.i358, %if.then3.i.i.i240 ]
  %1 = sext i32 %stkStack.sroa.3.0 to i64
  %wide.trip.count.i = sext i32 %mul to i64
  %2 = sub nsw i64 %wide.trip.count.i, %1
  %3 = xor i64 %1, -1
  %4 = add nsw i64 %3, %wide.trip.count.i
  %xtraiter385 = and i64 %2, 3
  %lcmp.mod386.not = icmp eq i64 %xtraiter385, 0
  br i1 %lcmp.mod386.not, label %for.body10.i248.prol.loopexit, label %for.body10.i248.prol

for.body10.i248.prol:                             ; preds = %for.body10.lr.ph.i243, %for.body10.i248.prol
  %indvars.iv.i244.prol = phi i64 [ %indvars.iv.next.i246.prol, %for.body10.i248.prol ], [ %1, %for.body10.lr.ph.i243 ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body10.i248.prol ], [ 0, %for.body10.lr.ph.i243 ]
  %arrayidx13.i245.prol = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.3, i64 %indvars.iv.i244.prol
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx13.i245.prol, ptr noundef nonnull align 8 dereferenceable(16) %ref.tmp14, i64 16, i1 false), !tbaa.struct !594
  %indvars.iv.next.i246.prol = add nsw i64 %indvars.iv.i244.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter385
  br i1 %prol.iter.cmp.not, label %for.body10.i248.prol.loopexit, label %for.body10.i248.prol, !llvm.loop !596

for.body10.i248.prol.loopexit:                    ; preds = %for.body10.i248.prol, %for.body10.lr.ph.i243
  %indvars.iv.i244.unr = phi i64 [ %1, %for.body10.lr.ph.i243 ], [ %indvars.iv.next.i246.prol, %for.body10.i248.prol ]
  %5 = icmp ult i64 %4, 3
  br i1 %5, label %invoke.cont17, label %for.body10.i248

for.body10.i248:                                  ; preds = %for.body10.i248.prol.loopexit, %for.body10.i248
  %indvars.iv.i244 = phi i64 [ %indvars.iv.next.i246.3, %for.body10.i248 ], [ %indvars.iv.i244.unr, %for.body10.i248.prol.loopexit ]
  %arrayidx13.i245 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.3, i64 %indvars.iv.i244
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx13.i245, ptr noundef nonnull align 8 dereferenceable(16) %ref.tmp14, i64 16, i1 false), !tbaa.struct !594
  %indvars.iv.next.i246 = add nsw i64 %indvars.iv.i244, 1
  %arrayidx13.i245.1 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.3, i64 %indvars.iv.next.i246
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx13.i245.1, ptr noundef nonnull align 8 dereferenceable(16) %ref.tmp14, i64 16, i1 false), !tbaa.struct !594
  %indvars.iv.next.i246.1 = add nsw i64 %indvars.iv.i244, 2
  %arrayidx13.i245.2 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.3, i64 %indvars.iv.next.i246.1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx13.i245.2, ptr noundef nonnull align 8 dereferenceable(16) %ref.tmp14, i64 16, i1 false), !tbaa.struct !594
  %indvars.iv.next.i246.2 = add nsw i64 %indvars.iv.i244, 3
  %arrayidx13.i245.3 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.3, i64 %indvars.iv.next.i246.2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx13.i245.3, ptr noundef nonnull align 8 dereferenceable(16) %ref.tmp14, i64 16, i1 false), !tbaa.struct !594
  %indvars.iv.next.i246.3 = add nsw i64 %indvars.iv.i244, 4
  %exitcond.not.i247.3 = icmp eq i64 %indvars.iv.next.i246.3, %wide.trip.count.i
  br i1 %exitcond.not.i247.3, label %invoke.cont17, label %for.body10.i248

invoke.cont17:                                    ; preds = %for.body10.i248.prol.loopexit, %for.body10.i248, %if.then11
  %stkStack.sroa.14.4 = phi i32 [ %stkStack.sroa.14.2, %if.then11 ], [ %stkStack.sroa.14.3, %for.body10.i248 ], [ %stkStack.sroa.14.3, %for.body10.i248.prol.loopexit ]
  %stkStack.sroa.21330.4 = phi ptr [ %stkStack.sroa.21330.2, %if.then11 ], [ %stkStack.sroa.21330.3, %for.body10.i248 ], [ %stkStack.sroa.21330.3, %for.body10.i248.prol.loopexit ]
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp14)
  %sub = add nsw i32 %mul, -4
  br label %if.end

ehcleanup160.thread363:                           ; preds = %if.then.i.i.i, %if.then3.i.i.i240
  %6 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp14)
  br label %if.then3.i.i.i319

if.end:                                           ; preds = %invoke.cont17, %do.body
  %stkStack.sroa.3.1 = phi i32 [ %mul, %invoke.cont17 ], [ %stkStack.sroa.3.0, %do.body ]
  %stkStack.sroa.14.5 = phi i32 [ %stkStack.sroa.14.4, %invoke.cont17 ], [ %stkStack.sroa.14.2, %do.body ]
  %stkStack.sroa.21330.5 = phi ptr [ %stkStack.sroa.21330.4, %invoke.cont17 ], [ %stkStack.sroa.21330.2, %do.body ]
  %treshold.1 = phi i32 [ %sub, %invoke.cont17 ], [ %treshold.0, %do.body ]
  %cmp20 = icmp eq ptr %p.sroa.0.0.copyload, %p.sroa.23.0.copyload
  br i1 %cmp20, label %invoke.cont23, label %if.else

invoke.cont23:                                    ; preds = %if.end
  %arrayidx.i.i = getelementptr inbounds %struct.btDbvtNode, ptr %p.sroa.0.0.copyload, i64 0, i32 2, i32 0, i64 1
  %7 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !164
  %cmp.i.i254.not = icmp eq ptr %7, null
  br i1 %cmp.i.i254.not, label %if.end158, label %if.then25

if.then25:                                        ; preds = %invoke.cont23
  %8 = getelementptr inbounds %struct.btDbvtNode, ptr %p.sroa.0.0.copyload, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !164
  %arrayidx.i258 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.5, i64 %idxprom.i
  store ptr %9, ptr %arrayidx.i258, align 8, !tbaa.struct !594
  %ref.tmp26.sroa.4.0.arrayidx.i258.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i258, i64 8
  store ptr %9, ptr %ref.tmp26.sroa.4.0.arrayidx.i258.sroa_idx, align 8, !tbaa.struct !595
  %10 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !164
  %inc41 = add nsw i32 %depth.0, 1
  %idxprom.i261 = sext i32 %depth.0 to i64
  %arrayidx.i262 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.5, i64 %idxprom.i261
  store ptr %10, ptr %arrayidx.i262, align 8, !tbaa.struct !594
  %ref.tmp34.sroa.4.0.arrayidx.i262.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i262, i64 8
  store ptr %10, ptr %ref.tmp34.sroa.4.0.arrayidx.i262.sroa_idx, align 8, !tbaa.struct !595
  %11 = load ptr, ptr %8, align 8, !tbaa !164
  %12 = load ptr, ptr %arrayidx.i.i, align 8, !tbaa !164
  %inc51 = add nsw i32 %depth.0, 2
  %idxprom.i265 = sext i32 %inc41 to i64
  %arrayidx.i266 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.5, i64 %idxprom.i265
  store ptr %11, ptr %arrayidx.i266, align 8, !tbaa.struct !594
  br label %if.end158.sink.split

if.else:                                          ; preds = %if.end
  %13 = load float, ptr %p.sroa.0.0.copyload, align 4, !tbaa !137
  %mx.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %p.sroa.23.0.copyload, i64 0, i32 1
  %14 = load float, ptr %mx.i, align 4, !tbaa !137
  %cmp.i267 = fcmp ugt float %13, %14
  br i1 %cmp.i267, label %if.end158, label %land.lhs.true.i

land.lhs.true.i:                                  ; preds = %if.else
  %mx2.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %p.sroa.0.0.copyload, i64 0, i32 1
  %15 = load float, ptr %mx2.i, align 4, !tbaa !137
  %16 = load float, ptr %p.sroa.23.0.copyload, align 4, !tbaa !137
  %cmp6.i = fcmp ult float %15, %16
  br i1 %cmp6.i, label %if.end158, label %land.lhs.true7.i

land.lhs.true7.i:                                 ; preds = %land.lhs.true.i
  %arrayidx.i.i268 = getelementptr inbounds [4 x float], ptr %p.sroa.0.0.copyload, i64 0, i64 1
  %17 = load float, ptr %arrayidx.i.i268, align 4, !tbaa !137
  %arrayidx.i40.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %p.sroa.23.0.copyload, i64 0, i32 1, i32 0, i64 1
  %18 = load float, ptr %arrayidx.i40.i, align 4, !tbaa !137
  %cmp12.i = fcmp ugt float %17, %18
  br i1 %cmp12.i, label %if.end158, label %land.lhs.true13.i

land.lhs.true13.i:                                ; preds = %land.lhs.true7.i
  %arrayidx.i41.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %p.sroa.0.0.copyload, i64 0, i32 1, i32 0, i64 1
  %19 = load float, ptr %arrayidx.i41.i, align 4, !tbaa !137
  %arrayidx.i42.i = getelementptr inbounds [4 x float], ptr %p.sroa.23.0.copyload, i64 0, i64 1
  %20 = load float, ptr %arrayidx.i42.i, align 4, !tbaa !137
  %cmp18.i = fcmp ult float %19, %20
  br i1 %cmp18.i, label %if.end158, label %land.lhs.true19.i

land.lhs.true19.i:                                ; preds = %land.lhs.true13.i
  %arrayidx.i43.i = getelementptr inbounds [4 x float], ptr %p.sroa.0.0.copyload, i64 0, i64 2
  %21 = load float, ptr %arrayidx.i43.i, align 4, !tbaa !137
  %arrayidx.i44.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %p.sroa.23.0.copyload, i64 0, i32 1, i32 0, i64 2
  %22 = load float, ptr %arrayidx.i44.i, align 4, !tbaa !137
  %cmp24.i = fcmp ugt float %21, %22
  br i1 %cmp24.i, label %if.end158, label %land.rhs.i

land.rhs.i:                                       ; preds = %land.lhs.true19.i
  %arrayidx.i45.i = getelementptr inbounds %struct.btDbvtAabbMm, ptr %p.sroa.0.0.copyload, i64 0, i32 1, i32 0, i64 2
  %23 = load float, ptr %arrayidx.i45.i, align 4, !tbaa !137
  %arrayidx.i46.i = getelementptr inbounds [4 x float], ptr %p.sroa.23.0.copyload, i64 0, i64 2
  %24 = load float, ptr %arrayidx.i46.i, align 4, !tbaa !137
  %cmp29.i = fcmp ult float %23, %24
  br i1 %cmp29.i, label %if.end158, label %invoke.cont61

invoke.cont61:                                    ; preds = %land.rhs.i
  %arrayidx.i.i269 = getelementptr inbounds %struct.btDbvtNode, ptr %p.sroa.0.0.copyload, i64 0, i32 2, i32 0, i64 1
  %25 = load ptr, ptr %arrayidx.i.i269, align 8, !tbaa !164
  %cmp.i.i270.not = icmp eq ptr %25, null
  %arrayidx.i.i297 = getelementptr inbounds %struct.btDbvtNode, ptr %p.sroa.23.0.copyload, i64 0, i32 2, i32 0, i64 1
  %26 = load ptr, ptr %arrayidx.i.i297, align 8, !tbaa !164
  %cmp.i.i298.not = icmp eq ptr %26, null
  br i1 %cmp.i.i270.not, label %invoke.cont130, label %invoke.cont65

invoke.cont65:                                    ; preds = %invoke.cont61
  %27 = getelementptr inbounds %struct.btDbvtNode, ptr %p.sroa.0.0.copyload, i64 0, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !164
  br i1 %cmp.i.i298.not, label %if.else108, label %if.then67

if.then67:                                        ; preds = %invoke.cont65
  %29 = getelementptr inbounds %struct.btDbvtNode, ptr %p.sroa.23.0.copyload, i64 0, i32 2
  %30 = load ptr, ptr %29, align 8, !tbaa !164
  %arrayidx.i276 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.5, i64 %idxprom.i
  store ptr %28, ptr %arrayidx.i276, align 8, !tbaa.struct !594
  %ref.tmp68.sroa.4.0.arrayidx.i276.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i276, i64 8
  store ptr %30, ptr %ref.tmp68.sroa.4.0.arrayidx.i276.sroa_idx, align 8, !tbaa.struct !595
  %31 = load ptr, ptr %arrayidx.i.i269, align 8, !tbaa !164
  %32 = load ptr, ptr %29, align 8, !tbaa !164
  %inc85 = add nsw i32 %depth.0, 1
  %idxprom.i279 = sext i32 %depth.0 to i64
  %arrayidx.i280 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.5, i64 %idxprom.i279
  store ptr %31, ptr %arrayidx.i280, align 8, !tbaa.struct !594
  %ref.tmp78.sroa.4.0.arrayidx.i280.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i280, i64 8
  store ptr %32, ptr %ref.tmp78.sroa.4.0.arrayidx.i280.sroa_idx, align 8, !tbaa.struct !595
  %33 = load ptr, ptr %27, align 8, !tbaa !164
  %34 = load ptr, ptr %arrayidx.i.i297, align 8, !tbaa !164
  %inc95 = add nsw i32 %depth.0, 2
  %idxprom.i283 = sext i32 %inc85 to i64
  %arrayidx.i284 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.5, i64 %idxprom.i283
  store ptr %33, ptr %arrayidx.i284, align 8, !tbaa.struct !594
  %ref.tmp88.sroa.4.0.arrayidx.i284.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i284, i64 8
  store ptr %34, ptr %ref.tmp88.sroa.4.0.arrayidx.i284.sroa_idx, align 8, !tbaa.struct !595
  %35 = load ptr, ptr %arrayidx.i.i269, align 8, !tbaa !164
  %36 = load ptr, ptr %arrayidx.i.i297, align 8, !tbaa !164
  %inc105 = add nsw i32 %depth.0, 3
  %idxprom.i287 = sext i32 %inc95 to i64
  %arrayidx.i288 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.5, i64 %idxprom.i287
  store ptr %35, ptr %arrayidx.i288, align 8, !tbaa.struct !594
  br label %if.end158.sink.split

if.else108:                                       ; preds = %invoke.cont65
  %arrayidx.i292 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.5, i64 %idxprom.i
  store ptr %28, ptr %arrayidx.i292, align 8, !tbaa.struct !594
  %ref.tmp109.sroa.4.0.arrayidx.i292.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i292, i64 8
  store ptr %p.sroa.23.0.copyload, ptr %ref.tmp109.sroa.4.0.arrayidx.i292.sroa_idx, align 8, !tbaa.struct !595
  %37 = load ptr, ptr %arrayidx.i.i269, align 8, !tbaa !164
  %inc124 = add nsw i32 %depth.0, 1
  %idxprom.i295 = sext i32 %depth.0 to i64
  %arrayidx.i296 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.5, i64 %idxprom.i295
  store ptr %37, ptr %arrayidx.i296, align 8, !tbaa.struct !594
  br label %if.end158.sink.split

invoke.cont130:                                   ; preds = %invoke.cont61
  br i1 %cmp.i.i298.not, label %if.else151, label %if.then132

if.then132:                                       ; preds = %invoke.cont130
  %38 = getelementptr inbounds %struct.btDbvtNode, ptr %p.sroa.23.0.copyload, i64 0, i32 2
  %39 = load ptr, ptr %38, align 8, !tbaa !164
  %arrayidx.i302 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.5, i64 %idxprom.i
  store ptr %p.sroa.0.0.copyload, ptr %arrayidx.i302, align 8, !tbaa.struct !594
  %ref.tmp133.sroa.4.0.arrayidx.i302.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i302, i64 8
  store ptr %39, ptr %ref.tmp133.sroa.4.0.arrayidx.i302.sroa_idx, align 8, !tbaa.struct !595
  %40 = load ptr, ptr %arrayidx.i.i297, align 8, !tbaa !164
  %inc148 = add nsw i32 %depth.0, 1
  %idxprom.i305 = sext i32 %depth.0 to i64
  %arrayidx.i306 = getelementptr inbounds %"struct.btDbvt::sStkNN", ptr %stkStack.sroa.21330.5, i64 %idxprom.i305
  store ptr %p.sroa.0.0.copyload, ptr %arrayidx.i306, align 8, !tbaa.struct !594
  br label %if.end158.sink.split

if.else151:                                       ; preds = %invoke.cont130
  %vtable = load ptr, ptr %policy, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 2
  %41 = load ptr, ptr %vfn, align 8
  invoke void %41(ptr noundef nonnull align 8 dereferenceable(8) %policy, ptr noundef nonnull %p.sroa.0.0.copyload, ptr noundef nonnull %p.sroa.23.0.copyload)
          to label %if.end158 unwind label %ehcleanup160

if.end158.sink.split:                             ; preds = %if.then25, %if.else108, %if.then67, %if.then132
  %arrayidx.i306.sink = phi ptr [ %arrayidx.i306, %if.then132 ], [ %arrayidx.i288, %if.then67 ], [ %arrayidx.i296, %if.else108 ], [ %arrayidx.i266, %if.then25 ]
  %.sink = phi ptr [ %40, %if.then132 ], [ %36, %if.then67 ], [ %p.sroa.23.0.copyload, %if.else108 ], [ %12, %if.then25 ]
  %depth.1.ph = phi i32 [ %inc148, %if.then132 ], [ %inc105, %if.then67 ], [ %inc124, %if.else108 ], [ %inc51, %if.then25 ]
  %ref.tmp142.sroa.4.0.arrayidx.i306.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i306.sink, i64 8
  store ptr %.sink, ptr %ref.tmp142.sroa.4.0.arrayidx.i306.sroa_idx, align 8
  br label %if.end158

if.end158:                                        ; preds = %if.end158.sink.split, %land.lhs.true19.i, %land.lhs.true13.i, %land.lhs.true7.i, %land.lhs.true.i, %if.else, %land.rhs.i, %if.else151, %invoke.cont23
  %depth.1 = phi i32 [ %dec, %invoke.cont23 ], [ %dec, %if.else151 ], [ %dec, %land.rhs.i ], [ %dec, %if.else ], [ %dec, %land.lhs.true.i ], [ %dec, %land.lhs.true7.i ], [ %dec, %land.lhs.true13.i ], [ %dec, %land.lhs.true19.i ], [ %depth.1.ph, %if.end158.sink.split ]
  %tobool159.not = icmp eq i32 %depth.1, 0
  br i1 %tobool159.not, label %if.then3.i.i.i312, label %do.body

if.then3.i.i.i312:                                ; preds = %if.end158
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stkStack.sroa.21330.5)
  br label %if.end165

ehcleanup160:                                     ; preds = %if.else151
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %if.then3.i.i.i319

if.then3.i.i.i319:                                ; preds = %ehcleanup160, %ehcleanup160.thread363
  %.pn.pn368 = phi { ptr, i32 } [ %6, %ehcleanup160.thread363 ], [ %42, %ehcleanup160 ]
  %stkStack.sroa.21330.7367 = phi ptr [ %stkStack.sroa.21330.2, %ehcleanup160.thread363 ], [ %stkStack.sroa.21330.5, %ehcleanup160 ]
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %stkStack.sroa.21330.7367)
          to label %invoke.cont161 unwind label %terminate.lpad

invoke.cont161:                                   ; preds = %if.then3.i.i.i319
  resume { ptr, i32 } %.pn.pn368

if.end165:                                        ; preds = %if.then3.i.i.i312, %entry
  ret void

terminate.lpad:                                   ; preds = %if.then3.i.i.i319
  %43 = landingpad { ptr, i32 }
          catch ptr null
  %44 = extractvalue { ptr, i32 } %43, 0
  tail call void @__clang_call_terminate(ptr %44) #39
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody5JointD0Ev(ptr noundef nonnull align 8 dereferenceable(181) %this) unnamed_addr #29 comdat align 2 {
entry:
  tail call void @llvm.trap() #39
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody5JointD2Ev(ptr noundef nonnull align 8 dereferenceable(181) %this) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody6CJointD0Ev(ptr noundef nonnull align 8 dereferenceable(244) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef i32 @_ZNK10btSoftBody6CJoint4TypeEv(ptr noundef nonnull align 8 dereferenceable(244) %this) unnamed_addr #29 comdat align 2 {
entry:
  ret i32 2
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN17btCollisionObject24checkCollideWithOverrideEPS_(ptr noundef nonnull align 8 dereferenceable(280) %this, ptr noundef %0) unnamed_addr #29 comdat align 2 {
entry:
  ret i1 true
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody17setCollisionShapeEP16btCollisionShape(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef %collisionShape) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNK10btSoftBody7getAabbER9btVector3S1_(ptr noundef nonnull align 8 dereferenceable(1496) %this, ptr noundef nonnull align 4 dereferenceable(16) %aabbMin, ptr noundef nonnull align 4 dereferenceable(16) %aabbMax) unnamed_addr #29 comdat align 2 {
entry:
  %m_bounds = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %aabbMin, ptr noundef nonnull align 4 dereferenceable(16) %m_bounds, i64 16, i1 false), !tbaa.struct !163
  %arrayidx3 = getelementptr inbounds %class.btSoftBody, ptr %this, i64 0, i32 19, i64 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %aabbMax, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3, i64 16, i1 false), !tbaa.struct !163
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody6LJointD0Ev(ptr noundef nonnull align 8 dereferenceable(216) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef i32 @_ZNK10btSoftBody6LJoint4TypeEv(ptr noundef nonnull align 8 dereferenceable(216) %this) unnamed_addr #29 comdat align 2 {
entry:
  ret i32 0
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody6AJointD0Ev(ptr noundef nonnull align 8 dereferenceable(224) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef i32 @_ZNK10btSoftBody6AJoint4TypeEv(ptr noundef nonnull align 8 dereferenceable(224) %this) unnamed_addr #29 comdat align 2 {
entry:
  ret i32 1
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN10btSoftBody15RayFromToCasterD0Ev(ptr noundef nonnull align 8 dereferenceable(76) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodeS3_(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %0, ptr noundef %1) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNodef(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %n, float noundef %0) unnamed_addr #4 comdat align 2 {
entry:
  %vtable = load ptr, ptr %this, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 3
  %1 = load ptr, ptr %vfn, align 8
  tail call void %1(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %n)
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN6btDbvt8ICollide7DescentEPK10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %0) unnamed_addr #29 comdat align 2 {
entry:
  ret i1 true
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN6btDbvt8ICollide9AllLeavesEPK10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %0) unnamed_addr #29 comdat align 2 {
entry:
  ret i1 true
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.4, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !27
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.4, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !24
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !27
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray.4, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !28
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.4, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !29
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.0, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !21
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.0, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE5clearEv.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !18
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !21
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray.0, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !22
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.0, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !23
  ret void
}

declare void @_ZN14btConcaveShapeC2Ev(ptr noundef nonnull align 8 dereferenceable(28)) unnamed_addr #1

declare void @_ZN14btConcaveShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(28)) unnamed_addr #1

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN24btSoftBodyCollisionShapeD0Ev(ptr noundef nonnull align 8 dereferenceable(40) %this) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  invoke void @_ZN14btConcaveShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(40) %this)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  ret void

lpad:                                             ; preds = %entry
  %0 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  resume { ptr, i32 } %0
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNK24btSoftBodyCollisionShape7getAabbERK11btTransformR9btVector3S4_(ptr noundef nonnull align 8 dereferenceable(40) %this, ptr noundef nonnull align 4 dereferenceable(64) %t, ptr noundef nonnull align 4 dereferenceable(16) %aabbMin, ptr noundef nonnull align 4 dereferenceable(16) %aabbMax) unnamed_addr #0 comdat align 2 {
entry:
  %m_body = getelementptr inbounds %class.btSoftBodyCollisionShape, ptr %this, i64 0, i32 1
  %0 = load ptr, ptr %m_body, align 8, !tbaa !154
  %m_bounds = getelementptr inbounds %class.btSoftBody, ptr %0, i64 0, i32 19
  %mins.sroa.0.0.copyload = load float, ptr %m_bounds, align 4, !tbaa.struct !163
  %mins.sroa.7.0.m_bounds.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %0, i64 0, i32 19, i64 0, i32 0, i64 1
  %mins.sroa.7.0.copyload = load float, ptr %mins.sroa.7.0.m_bounds.sroa_idx, align 4, !tbaa.struct !293
  %mins.sroa.11.0.m_bounds.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %0, i64 0, i32 19, i64 0, i32 0, i64 2
  %mins.sroa.11.0.copyload = load float, ptr %mins.sroa.11.0.m_bounds.sroa_idx, align 4, !tbaa.struct !165
  %arrayidx4 = getelementptr inbounds %class.btSoftBody, ptr %0, i64 0, i32 19, i64 1
  %maxs.sroa.0.0.copyload = load float, ptr %arrayidx4, align 4, !tbaa.struct !163
  %maxs.sroa.7.0.arrayidx4.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %0, i64 0, i32 19, i64 1, i32 0, i64 1
  %maxs.sroa.7.0.copyload = load float, ptr %maxs.sroa.7.0.arrayidx4.sroa_idx, align 4, !tbaa.struct !293
  %maxs.sroa.11.0.arrayidx4.sroa_idx = getelementptr inbounds %class.btSoftBody, ptr %0, i64 0, i32 19, i64 1, i32 0, i64 2
  %maxs.sroa.11.0.copyload = load float, ptr %maxs.sroa.11.0.arrayidx4.sroa_idx, align 4, !tbaa.struct !165
  %arrayidx5.i.i.i = getelementptr inbounds [4 x float], ptr %t, i64 0, i64 1
  %arrayidx10.i.i.i = getelementptr inbounds [4 x float], ptr %t, i64 0, i64 2
  %m_origin.i.i = getelementptr inbounds %class.btTransform, ptr %t, i64 0, i32 1
  %arrayidx.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 1
  %arrayidx5.i20.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 1, i32 0, i64 1
  %arrayidx10.i23.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 1, i32 0, i64 2
  %1 = load float, ptr %t, align 4, !tbaa !137
  %2 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %3 = load float, ptr %arrayidx10.i.i.i, align 4, !tbaa !137
  %4 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %5 = load float, ptr %arrayidx5.i20.i.i, align 4, !tbaa !137
  %6 = insertelement <2 x float> poison, float %mins.sroa.7.0.copyload, i64 0
  %7 = shufflevector <2 x float> %6, <2 x float> poison, <2 x i32> zeroinitializer
  %8 = insertelement <2 x float> poison, float %2, i64 0
  %9 = insertelement <2 x float> %8, float %5, i64 1
  %10 = fmul <2 x float> %7, %9
  %11 = insertelement <2 x float> poison, float %1, i64 0
  %12 = insertelement <2 x float> %11, float %4, i64 1
  %13 = insertelement <2 x float> poison, float %mins.sroa.0.0.copyload, i64 0
  %14 = shufflevector <2 x float> %13, <2 x float> poison, <2 x i32> zeroinitializer
  %15 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %12, <2 x float> %14, <2 x float> %10)
  %16 = load float, ptr %arrayidx10.i23.i.i, align 4, !tbaa !137
  %17 = insertelement <2 x float> poison, float %3, i64 0
  %18 = insertelement <2 x float> %17, float %16, i64 1
  %19 = insertelement <2 x float> poison, float %mins.sroa.11.0.copyload, i64 0
  %20 = shufflevector <2 x float> %19, <2 x float> poison, <2 x i32> zeroinitializer
  %21 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %18, <2 x float> %20, <2 x float> %15)
  %22 = load <2 x float>, ptr %m_origin.i.i, align 4, !tbaa !137
  %23 = fadd <2 x float> %22, %21
  %arrayidx.i26.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 2
  %24 = load float, ptr %arrayidx.i26.i.i, align 4, !tbaa !137
  %arrayidx5.i27.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 2, i32 0, i64 1
  %25 = load float, ptr %arrayidx5.i27.i.i, align 4, !tbaa !137
  %mul8.i29.i.i = fmul float %mins.sroa.7.0.copyload, %25
  %26 = tail call float @llvm.fmuladd.f32(float %24, float %mins.sroa.0.0.copyload, float %mul8.i29.i.i)
  %arrayidx10.i30.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %t, i64 0, i64 2, i32 0, i64 2
  %27 = load float, ptr %arrayidx10.i30.i.i, align 4, !tbaa !137
  %28 = tail call float @llvm.fmuladd.f32(float %27, float %mins.sroa.11.0.copyload, float %26)
  %arrayidx.i32.i.i = getelementptr inbounds %class.btTransform, ptr %t, i64 0, i32 1, i32 0, i64 2
  %29 = load float, ptr %arrayidx.i32.i.i, align 4, !tbaa !137
  %add17.i.i = fadd float %29, %28
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add17.i.i, i64 0
  %30 = extractelement <2 x float> %10, i64 0
  %31 = tail call float @llvm.fmuladd.f32(float %1, float %maxs.sroa.0.0.copyload, float %30)
  %32 = tail call float @llvm.fmuladd.f32(float %3, float %mins.sroa.11.0.copyload, float %31)
  %33 = extractelement <2 x float> %22, i64 0
  %add.i.i84 = fadd float %33, %32
  %34 = extractelement <2 x float> %10, i64 1
  %35 = tail call float @llvm.fmuladd.f32(float %4, float %maxs.sroa.0.0.copyload, float %34)
  %36 = tail call float @llvm.fmuladd.f32(float %16, float %mins.sroa.11.0.copyload, float %35)
  %37 = extractelement <2 x float> %22, i64 1
  %add10.i.i90 = fadd float %37, %36
  %38 = tail call float @llvm.fmuladd.f32(float %24, float %maxs.sroa.0.0.copyload, float %mul8.i29.i.i)
  %39 = tail call float @llvm.fmuladd.f32(float %27, float %mins.sroa.11.0.copyload, float %38)
  %add17.i.i96 = fadd float %29, %39
  %mul8.i.i.i109 = fmul float %maxs.sroa.7.0.copyload, %2
  %40 = tail call float @llvm.fmuladd.f32(float %1, float %maxs.sroa.0.0.copyload, float %mul8.i.i.i109)
  %41 = tail call float @llvm.fmuladd.f32(float %3, float %mins.sroa.11.0.copyload, float %40)
  %add.i.i113 = fadd float %33, %41
  %mul8.i22.i.i116 = fmul float %maxs.sroa.7.0.copyload, %5
  %42 = tail call float @llvm.fmuladd.f32(float %4, float %maxs.sroa.0.0.copyload, float %mul8.i22.i.i116)
  %43 = tail call float @llvm.fmuladd.f32(float %16, float %mins.sroa.11.0.copyload, float %42)
  %add10.i.i119 = fadd float %37, %43
  %mul8.i29.i.i122 = fmul float %maxs.sroa.7.0.copyload, %25
  %44 = tail call float @llvm.fmuladd.f32(float %24, float %maxs.sroa.0.0.copyload, float %mul8.i29.i.i122)
  %45 = tail call float @llvm.fmuladd.f32(float %27, float %mins.sroa.11.0.copyload, float %44)
  %add17.i.i125 = fadd float %29, %45
  %46 = tail call float @llvm.fmuladd.f32(float %1, float %mins.sroa.0.0.copyload, float %mul8.i.i.i109)
  %47 = tail call float @llvm.fmuladd.f32(float %3, float %mins.sroa.11.0.copyload, float %46)
  %add.i.i142 = fadd float %33, %47
  %48 = tail call float @llvm.fmuladd.f32(float %4, float %mins.sroa.0.0.copyload, float %mul8.i22.i.i116)
  %49 = tail call float @llvm.fmuladd.f32(float %16, float %mins.sroa.11.0.copyload, float %48)
  %add10.i.i148 = fadd float %37, %49
  %50 = tail call float @llvm.fmuladd.f32(float %24, float %mins.sroa.0.0.copyload, float %mul8.i29.i.i122)
  %51 = tail call float @llvm.fmuladd.f32(float %27, float %mins.sroa.11.0.copyload, float %50)
  %add17.i.i154 = fadd float %29, %51
  %52 = extractelement <2 x float> %15, i64 0
  %53 = tail call float @llvm.fmuladd.f32(float %3, float %maxs.sroa.11.0.copyload, float %52)
  %add.i.i171 = fadd float %33, %53
  %54 = extractelement <2 x float> %15, i64 1
  %55 = tail call float @llvm.fmuladd.f32(float %16, float %maxs.sroa.11.0.copyload, float %54)
  %add10.i.i177 = fadd float %37, %55
  %56 = tail call float @llvm.fmuladd.f32(float %27, float %maxs.sroa.11.0.copyload, float %26)
  %add17.i.i183 = fadd float %29, %56
  %57 = tail call float @llvm.fmuladd.f32(float %3, float %maxs.sroa.11.0.copyload, float %31)
  %add.i.i200 = fadd float %33, %57
  %58 = tail call float @llvm.fmuladd.f32(float %16, float %maxs.sroa.11.0.copyload, float %35)
  %add10.i.i206 = fadd float %37, %58
  %59 = tail call float @llvm.fmuladd.f32(float %27, float %maxs.sroa.11.0.copyload, float %38)
  %add17.i.i212 = fadd float %29, %59
  %60 = tail call float @llvm.fmuladd.f32(float %3, float %maxs.sroa.11.0.copyload, float %40)
  %add.i.i229 = fadd float %33, %60
  %61 = tail call float @llvm.fmuladd.f32(float %16, float %maxs.sroa.11.0.copyload, float %42)
  %add10.i.i235 = fadd float %37, %61
  %62 = tail call float @llvm.fmuladd.f32(float %27, float %maxs.sroa.11.0.copyload, float %44)
  %add17.i.i241 = fadd float %29, %62
  %63 = tail call float @llvm.fmuladd.f32(float %3, float %maxs.sroa.11.0.copyload, float %46)
  %add.i.i258 = fadd float %33, %63
  %64 = tail call float @llvm.fmuladd.f32(float %16, float %maxs.sroa.11.0.copyload, float %48)
  %add10.i.i264 = fadd float %37, %64
  %65 = tail call float @llvm.fmuladd.f32(float %27, float %maxs.sroa.11.0.copyload, float %50)
  %add17.i.i270 = fadd float %29, %65
  store <2 x float> %23, ptr %aabbMax, align 4, !tbaa.struct !163
  %crns.sroa.4.0.aabbMax.sroa_idx = getelementptr inbounds i8, ptr %aabbMax, i64 8
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa.struct !165
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %aabbMin, ptr noundef nonnull align 4 dereferenceable(16) %aabbMax, i64 16, i1 false), !tbaa.struct !163
  %arrayidx5.i276 = getelementptr inbounds [4 x float], ptr %aabbMin, i64 0, i64 1
  %arrayidx9.i = getelementptr inbounds [4 x float], ptr %aabbMin, i64 0, i64 2
  %arrayidx13.i = getelementptr inbounds [4 x float], ptr %aabbMin, i64 0, i64 3
  %arrayidx5.i280 = getelementptr inbounds [4 x float], ptr %aabbMax, i64 0, i64 1
  %arrayidx13.i288 = getelementptr inbounds [4 x float], ptr %aabbMax, i64 0, i64 3
  %66 = load float, ptr %aabbMin, align 4, !tbaa !137
  %cmp.i.i = fcmp olt float %add.i.i84, %66
  br i1 %cmp.i.i, label %if.then.i.i, label %_Z8btSetMinIfEvRT_RKS0_.exit.i

if.then.i.i:                                      ; preds = %entry
  store float %add.i.i84, ptr %aabbMin, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit.i

_Z8btSetMinIfEvRT_RKS0_.exit.i:                   ; preds = %if.then.i.i, %entry
  %67 = load float, ptr %arrayidx5.i276, align 4, !tbaa !137
  %cmp.i17.i = fcmp olt float %add10.i.i90, %67
  br i1 %cmp.i17.i, label %if.then.i18.i, label %_Z8btSetMinIfEvRT_RKS0_.exit19.i

if.then.i18.i:                                    ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit.i
  store float %add10.i.i90, ptr %arrayidx5.i276, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit19.i

_Z8btSetMinIfEvRT_RKS0_.exit19.i:                 ; preds = %if.then.i18.i, %_Z8btSetMinIfEvRT_RKS0_.exit.i
  %68 = load float, ptr %arrayidx9.i, align 4, !tbaa !137
  %cmp.i20.i = fcmp olt float %add17.i.i96, %68
  br i1 %cmp.i20.i, label %if.then.i21.i, label %_Z8btSetMinIfEvRT_RKS0_.exit22.i

if.then.i21.i:                                    ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit19.i
  store float %add17.i.i96, ptr %arrayidx9.i, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit22.i

_Z8btSetMinIfEvRT_RKS0_.exit22.i:                 ; preds = %if.then.i21.i, %_Z8btSetMinIfEvRT_RKS0_.exit19.i
  %69 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %cmp.i23.i = fcmp ogt float %69, 0.000000e+00
  br i1 %cmp.i23.i, label %if.then.i24.i, label %_ZN9btVector36setMinERKS_.exit

if.then.i24.i:                                    ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit22.i
  store float 0.000000e+00, ptr %arrayidx13.i, align 4, !tbaa !137
  br label %_ZN9btVector36setMinERKS_.exit

_ZN9btVector36setMinERKS_.exit:                   ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit22.i, %if.then.i24.i
  %70 = load float, ptr %aabbMax, align 4, !tbaa !137
  %cmp.i.i278 = fcmp olt float %70, %add.i.i84
  br i1 %cmp.i.i278, label %if.then.i.i279, label %_Z8btSetMaxIfEvRT_RKS0_.exit.i

if.then.i.i279:                                   ; preds = %_ZN9btVector36setMinERKS_.exit
  store float %add.i.i84, ptr %aabbMax, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit.i

_Z8btSetMaxIfEvRT_RKS0_.exit.i:                   ; preds = %if.then.i.i279, %_ZN9btVector36setMinERKS_.exit
  %71 = load float, ptr %arrayidx5.i280, align 4, !tbaa !137
  %cmp.i17.i282 = fcmp olt float %71, %add10.i.i90
  br i1 %cmp.i17.i282, label %if.then.i18.i283, label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i

if.then.i18.i283:                                 ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit.i
  store float %add10.i.i90, ptr %arrayidx5.i280, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i

_Z8btSetMaxIfEvRT_RKS0_.exit19.i:                 ; preds = %if.then.i18.i283, %_Z8btSetMaxIfEvRT_RKS0_.exit.i
  %72 = load float, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  %cmp.i20.i286 = fcmp olt float %72, %add17.i.i96
  br i1 %cmp.i20.i286, label %if.then.i21.i287, label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i

if.then.i21.i287:                                 ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit19.i
  store float %add17.i.i96, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i

_Z8btSetMaxIfEvRT_RKS0_.exit22.i:                 ; preds = %if.then.i21.i287, %_Z8btSetMaxIfEvRT_RKS0_.exit19.i
  %73 = load float, ptr %arrayidx13.i288, align 4, !tbaa !137
  %cmp.i23.i290 = fcmp olt float %73, 0.000000e+00
  br i1 %cmp.i23.i290, label %if.then.i24.i291, label %_ZN9btVector36setMaxERKS_.exit

if.then.i24.i291:                                 ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit22.i
  store float 0.000000e+00, ptr %arrayidx13.i288, align 4, !tbaa !137
  br label %_ZN9btVector36setMaxERKS_.exit

_ZN9btVector36setMaxERKS_.exit:                   ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit22.i, %if.then.i24.i291
  %74 = load float, ptr %aabbMin, align 4, !tbaa !137
  %cmp.i.i.1 = fcmp olt float %add.i.i113, %74
  br i1 %cmp.i.i.1, label %if.then.i.i.1, label %_Z8btSetMinIfEvRT_RKS0_.exit.i.1

if.then.i.i.1:                                    ; preds = %_ZN9btVector36setMaxERKS_.exit
  store float %add.i.i113, ptr %aabbMin, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit.i.1

_Z8btSetMinIfEvRT_RKS0_.exit.i.1:                 ; preds = %if.then.i.i.1, %_ZN9btVector36setMaxERKS_.exit
  %75 = load float, ptr %arrayidx5.i276, align 4, !tbaa !137
  %cmp.i17.i.1 = fcmp olt float %add10.i.i119, %75
  br i1 %cmp.i17.i.1, label %if.then.i18.i.1, label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.1

if.then.i18.i.1:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit.i.1
  store float %add10.i.i119, ptr %arrayidx5.i276, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.1

_Z8btSetMinIfEvRT_RKS0_.exit19.i.1:               ; preds = %if.then.i18.i.1, %_Z8btSetMinIfEvRT_RKS0_.exit.i.1
  %76 = load float, ptr %arrayidx9.i, align 4, !tbaa !137
  %cmp.i20.i.1 = fcmp olt float %add17.i.i125, %76
  br i1 %cmp.i20.i.1, label %if.then.i21.i.1, label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.1

if.then.i21.i.1:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit19.i.1
  store float %add17.i.i125, ptr %arrayidx9.i, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.1

_Z8btSetMinIfEvRT_RKS0_.exit22.i.1:               ; preds = %if.then.i21.i.1, %_Z8btSetMinIfEvRT_RKS0_.exit19.i.1
  %77 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %cmp.i23.i.1 = fcmp ogt float %77, 0.000000e+00
  br i1 %cmp.i23.i.1, label %if.then.i24.i.1, label %_ZN9btVector36setMinERKS_.exit.1

if.then.i24.i.1:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit22.i.1
  store float 0.000000e+00, ptr %arrayidx13.i, align 4, !tbaa !137
  br label %_ZN9btVector36setMinERKS_.exit.1

_ZN9btVector36setMinERKS_.exit.1:                 ; preds = %if.then.i24.i.1, %_Z8btSetMinIfEvRT_RKS0_.exit22.i.1
  %78 = load float, ptr %aabbMax, align 4, !tbaa !137
  %cmp.i.i278.1 = fcmp olt float %78, %add.i.i113
  br i1 %cmp.i.i278.1, label %if.then.i.i279.1, label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.1

if.then.i.i279.1:                                 ; preds = %_ZN9btVector36setMinERKS_.exit.1
  store float %add.i.i113, ptr %aabbMax, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.1

_Z8btSetMaxIfEvRT_RKS0_.exit.i.1:                 ; preds = %if.then.i.i279.1, %_ZN9btVector36setMinERKS_.exit.1
  %79 = load float, ptr %arrayidx5.i280, align 4, !tbaa !137
  %cmp.i17.i282.1 = fcmp olt float %79, %add10.i.i119
  br i1 %cmp.i17.i282.1, label %if.then.i18.i283.1, label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.1

if.then.i18.i283.1:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit.i.1
  store float %add10.i.i119, ptr %arrayidx5.i280, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.1

_Z8btSetMaxIfEvRT_RKS0_.exit19.i.1:               ; preds = %if.then.i18.i283.1, %_Z8btSetMaxIfEvRT_RKS0_.exit.i.1
  %80 = load float, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  %cmp.i20.i286.1 = fcmp olt float %80, %add17.i.i125
  br i1 %cmp.i20.i286.1, label %if.then.i21.i287.1, label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.1

if.then.i21.i287.1:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.1
  store float %add17.i.i125, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.1

_Z8btSetMaxIfEvRT_RKS0_.exit22.i.1:               ; preds = %if.then.i21.i287.1, %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.1
  %81 = load float, ptr %arrayidx13.i288, align 4, !tbaa !137
  %cmp.i23.i290.1 = fcmp olt float %81, 0.000000e+00
  br i1 %cmp.i23.i290.1, label %if.then.i24.i291.1, label %_ZN9btVector36setMaxERKS_.exit.1

if.then.i24.i291.1:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.1
  store float 0.000000e+00, ptr %arrayidx13.i288, align 4, !tbaa !137
  br label %_ZN9btVector36setMaxERKS_.exit.1

_ZN9btVector36setMaxERKS_.exit.1:                 ; preds = %if.then.i24.i291.1, %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.1
  %82 = load float, ptr %aabbMin, align 4, !tbaa !137
  %cmp.i.i.2 = fcmp olt float %add.i.i142, %82
  br i1 %cmp.i.i.2, label %if.then.i.i.2, label %_Z8btSetMinIfEvRT_RKS0_.exit.i.2

if.then.i.i.2:                                    ; preds = %_ZN9btVector36setMaxERKS_.exit.1
  store float %add.i.i142, ptr %aabbMin, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit.i.2

_Z8btSetMinIfEvRT_RKS0_.exit.i.2:                 ; preds = %if.then.i.i.2, %_ZN9btVector36setMaxERKS_.exit.1
  %83 = load float, ptr %arrayidx5.i276, align 4, !tbaa !137
  %cmp.i17.i.2 = fcmp olt float %add10.i.i148, %83
  br i1 %cmp.i17.i.2, label %if.then.i18.i.2, label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.2

if.then.i18.i.2:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit.i.2
  store float %add10.i.i148, ptr %arrayidx5.i276, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.2

_Z8btSetMinIfEvRT_RKS0_.exit19.i.2:               ; preds = %if.then.i18.i.2, %_Z8btSetMinIfEvRT_RKS0_.exit.i.2
  %84 = load float, ptr %arrayidx9.i, align 4, !tbaa !137
  %cmp.i20.i.2 = fcmp olt float %add17.i.i154, %84
  br i1 %cmp.i20.i.2, label %if.then.i21.i.2, label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.2

if.then.i21.i.2:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit19.i.2
  store float %add17.i.i154, ptr %arrayidx9.i, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.2

_Z8btSetMinIfEvRT_RKS0_.exit22.i.2:               ; preds = %if.then.i21.i.2, %_Z8btSetMinIfEvRT_RKS0_.exit19.i.2
  %85 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %cmp.i23.i.2 = fcmp ogt float %85, 0.000000e+00
  br i1 %cmp.i23.i.2, label %if.then.i24.i.2, label %_ZN9btVector36setMinERKS_.exit.2

if.then.i24.i.2:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit22.i.2
  store float 0.000000e+00, ptr %arrayidx13.i, align 4, !tbaa !137
  br label %_ZN9btVector36setMinERKS_.exit.2

_ZN9btVector36setMinERKS_.exit.2:                 ; preds = %if.then.i24.i.2, %_Z8btSetMinIfEvRT_RKS0_.exit22.i.2
  %86 = load float, ptr %aabbMax, align 4, !tbaa !137
  %cmp.i.i278.2 = fcmp olt float %86, %add.i.i142
  br i1 %cmp.i.i278.2, label %if.then.i.i279.2, label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.2

if.then.i.i279.2:                                 ; preds = %_ZN9btVector36setMinERKS_.exit.2
  store float %add.i.i142, ptr %aabbMax, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.2

_Z8btSetMaxIfEvRT_RKS0_.exit.i.2:                 ; preds = %if.then.i.i279.2, %_ZN9btVector36setMinERKS_.exit.2
  %87 = load float, ptr %arrayidx5.i280, align 4, !tbaa !137
  %cmp.i17.i282.2 = fcmp olt float %87, %add10.i.i148
  br i1 %cmp.i17.i282.2, label %if.then.i18.i283.2, label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.2

if.then.i18.i283.2:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit.i.2
  store float %add10.i.i148, ptr %arrayidx5.i280, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.2

_Z8btSetMaxIfEvRT_RKS0_.exit19.i.2:               ; preds = %if.then.i18.i283.2, %_Z8btSetMaxIfEvRT_RKS0_.exit.i.2
  %88 = load float, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  %cmp.i20.i286.2 = fcmp olt float %88, %add17.i.i154
  br i1 %cmp.i20.i286.2, label %if.then.i21.i287.2, label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.2

if.then.i21.i287.2:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.2
  store float %add17.i.i154, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.2

_Z8btSetMaxIfEvRT_RKS0_.exit22.i.2:               ; preds = %if.then.i21.i287.2, %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.2
  %89 = load float, ptr %arrayidx13.i288, align 4, !tbaa !137
  %cmp.i23.i290.2 = fcmp olt float %89, 0.000000e+00
  br i1 %cmp.i23.i290.2, label %if.then.i24.i291.2, label %_ZN9btVector36setMaxERKS_.exit.2

if.then.i24.i291.2:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.2
  store float 0.000000e+00, ptr %arrayidx13.i288, align 4, !tbaa !137
  br label %_ZN9btVector36setMaxERKS_.exit.2

_ZN9btVector36setMaxERKS_.exit.2:                 ; preds = %if.then.i24.i291.2, %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.2
  %90 = load float, ptr %aabbMin, align 4, !tbaa !137
  %cmp.i.i.3 = fcmp olt float %add.i.i171, %90
  br i1 %cmp.i.i.3, label %if.then.i.i.3, label %_Z8btSetMinIfEvRT_RKS0_.exit.i.3

if.then.i.i.3:                                    ; preds = %_ZN9btVector36setMaxERKS_.exit.2
  store float %add.i.i171, ptr %aabbMin, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit.i.3

_Z8btSetMinIfEvRT_RKS0_.exit.i.3:                 ; preds = %if.then.i.i.3, %_ZN9btVector36setMaxERKS_.exit.2
  %91 = load float, ptr %arrayidx5.i276, align 4, !tbaa !137
  %cmp.i17.i.3 = fcmp olt float %add10.i.i177, %91
  br i1 %cmp.i17.i.3, label %if.then.i18.i.3, label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.3

if.then.i18.i.3:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit.i.3
  store float %add10.i.i177, ptr %arrayidx5.i276, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.3

_Z8btSetMinIfEvRT_RKS0_.exit19.i.3:               ; preds = %if.then.i18.i.3, %_Z8btSetMinIfEvRT_RKS0_.exit.i.3
  %92 = load float, ptr %arrayidx9.i, align 4, !tbaa !137
  %cmp.i20.i.3 = fcmp olt float %add17.i.i183, %92
  br i1 %cmp.i20.i.3, label %if.then.i21.i.3, label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.3

if.then.i21.i.3:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit19.i.3
  store float %add17.i.i183, ptr %arrayidx9.i, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.3

_Z8btSetMinIfEvRT_RKS0_.exit22.i.3:               ; preds = %if.then.i21.i.3, %_Z8btSetMinIfEvRT_RKS0_.exit19.i.3
  %93 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %cmp.i23.i.3 = fcmp ogt float %93, 0.000000e+00
  br i1 %cmp.i23.i.3, label %if.then.i24.i.3, label %_ZN9btVector36setMinERKS_.exit.3

if.then.i24.i.3:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit22.i.3
  store float 0.000000e+00, ptr %arrayidx13.i, align 4, !tbaa !137
  br label %_ZN9btVector36setMinERKS_.exit.3

_ZN9btVector36setMinERKS_.exit.3:                 ; preds = %if.then.i24.i.3, %_Z8btSetMinIfEvRT_RKS0_.exit22.i.3
  %94 = load float, ptr %aabbMax, align 4, !tbaa !137
  %cmp.i.i278.3 = fcmp olt float %94, %add.i.i171
  br i1 %cmp.i.i278.3, label %if.then.i.i279.3, label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.3

if.then.i.i279.3:                                 ; preds = %_ZN9btVector36setMinERKS_.exit.3
  store float %add.i.i171, ptr %aabbMax, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.3

_Z8btSetMaxIfEvRT_RKS0_.exit.i.3:                 ; preds = %if.then.i.i279.3, %_ZN9btVector36setMinERKS_.exit.3
  %95 = load float, ptr %arrayidx5.i280, align 4, !tbaa !137
  %cmp.i17.i282.3 = fcmp olt float %95, %add10.i.i177
  br i1 %cmp.i17.i282.3, label %if.then.i18.i283.3, label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.3

if.then.i18.i283.3:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit.i.3
  store float %add10.i.i177, ptr %arrayidx5.i280, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.3

_Z8btSetMaxIfEvRT_RKS0_.exit19.i.3:               ; preds = %if.then.i18.i283.3, %_Z8btSetMaxIfEvRT_RKS0_.exit.i.3
  %96 = load float, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  %cmp.i20.i286.3 = fcmp olt float %96, %add17.i.i183
  br i1 %cmp.i20.i286.3, label %if.then.i21.i287.3, label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.3

if.then.i21.i287.3:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.3
  store float %add17.i.i183, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.3

_Z8btSetMaxIfEvRT_RKS0_.exit22.i.3:               ; preds = %if.then.i21.i287.3, %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.3
  %97 = load float, ptr %arrayidx13.i288, align 4, !tbaa !137
  %cmp.i23.i290.3 = fcmp olt float %97, 0.000000e+00
  br i1 %cmp.i23.i290.3, label %if.then.i24.i291.3, label %_ZN9btVector36setMaxERKS_.exit.3

if.then.i24.i291.3:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.3
  store float 0.000000e+00, ptr %arrayidx13.i288, align 4, !tbaa !137
  br label %_ZN9btVector36setMaxERKS_.exit.3

_ZN9btVector36setMaxERKS_.exit.3:                 ; preds = %if.then.i24.i291.3, %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.3
  %98 = load float, ptr %aabbMin, align 4, !tbaa !137
  %cmp.i.i.4 = fcmp olt float %add.i.i200, %98
  br i1 %cmp.i.i.4, label %if.then.i.i.4, label %_Z8btSetMinIfEvRT_RKS0_.exit.i.4

if.then.i.i.4:                                    ; preds = %_ZN9btVector36setMaxERKS_.exit.3
  store float %add.i.i200, ptr %aabbMin, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit.i.4

_Z8btSetMinIfEvRT_RKS0_.exit.i.4:                 ; preds = %if.then.i.i.4, %_ZN9btVector36setMaxERKS_.exit.3
  %99 = load float, ptr %arrayidx5.i276, align 4, !tbaa !137
  %cmp.i17.i.4 = fcmp olt float %add10.i.i206, %99
  br i1 %cmp.i17.i.4, label %if.then.i18.i.4, label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.4

if.then.i18.i.4:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit.i.4
  store float %add10.i.i206, ptr %arrayidx5.i276, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.4

_Z8btSetMinIfEvRT_RKS0_.exit19.i.4:               ; preds = %if.then.i18.i.4, %_Z8btSetMinIfEvRT_RKS0_.exit.i.4
  %100 = load float, ptr %arrayidx9.i, align 4, !tbaa !137
  %cmp.i20.i.4 = fcmp olt float %add17.i.i212, %100
  br i1 %cmp.i20.i.4, label %if.then.i21.i.4, label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.4

if.then.i21.i.4:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit19.i.4
  store float %add17.i.i212, ptr %arrayidx9.i, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.4

_Z8btSetMinIfEvRT_RKS0_.exit22.i.4:               ; preds = %if.then.i21.i.4, %_Z8btSetMinIfEvRT_RKS0_.exit19.i.4
  %101 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %cmp.i23.i.4 = fcmp ogt float %101, 0.000000e+00
  br i1 %cmp.i23.i.4, label %if.then.i24.i.4, label %_ZN9btVector36setMinERKS_.exit.4

if.then.i24.i.4:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit22.i.4
  store float 0.000000e+00, ptr %arrayidx13.i, align 4, !tbaa !137
  br label %_ZN9btVector36setMinERKS_.exit.4

_ZN9btVector36setMinERKS_.exit.4:                 ; preds = %if.then.i24.i.4, %_Z8btSetMinIfEvRT_RKS0_.exit22.i.4
  %102 = load float, ptr %aabbMax, align 4, !tbaa !137
  %cmp.i.i278.4 = fcmp olt float %102, %add.i.i200
  br i1 %cmp.i.i278.4, label %if.then.i.i279.4, label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.4

if.then.i.i279.4:                                 ; preds = %_ZN9btVector36setMinERKS_.exit.4
  store float %add.i.i200, ptr %aabbMax, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.4

_Z8btSetMaxIfEvRT_RKS0_.exit.i.4:                 ; preds = %if.then.i.i279.4, %_ZN9btVector36setMinERKS_.exit.4
  %103 = load float, ptr %arrayidx5.i280, align 4, !tbaa !137
  %cmp.i17.i282.4 = fcmp olt float %103, %add10.i.i206
  br i1 %cmp.i17.i282.4, label %if.then.i18.i283.4, label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.4

if.then.i18.i283.4:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit.i.4
  store float %add10.i.i206, ptr %arrayidx5.i280, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.4

_Z8btSetMaxIfEvRT_RKS0_.exit19.i.4:               ; preds = %if.then.i18.i283.4, %_Z8btSetMaxIfEvRT_RKS0_.exit.i.4
  %104 = load float, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  %cmp.i20.i286.4 = fcmp olt float %104, %add17.i.i212
  br i1 %cmp.i20.i286.4, label %if.then.i21.i287.4, label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.4

if.then.i21.i287.4:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.4
  store float %add17.i.i212, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.4

_Z8btSetMaxIfEvRT_RKS0_.exit22.i.4:               ; preds = %if.then.i21.i287.4, %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.4
  %105 = load float, ptr %arrayidx13.i288, align 4, !tbaa !137
  %cmp.i23.i290.4 = fcmp olt float %105, 0.000000e+00
  br i1 %cmp.i23.i290.4, label %if.then.i24.i291.4, label %_ZN9btVector36setMaxERKS_.exit.4

if.then.i24.i291.4:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.4
  store float 0.000000e+00, ptr %arrayidx13.i288, align 4, !tbaa !137
  br label %_ZN9btVector36setMaxERKS_.exit.4

_ZN9btVector36setMaxERKS_.exit.4:                 ; preds = %if.then.i24.i291.4, %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.4
  %106 = load float, ptr %aabbMin, align 4, !tbaa !137
  %cmp.i.i.5 = fcmp olt float %add.i.i229, %106
  br i1 %cmp.i.i.5, label %if.then.i.i.5, label %_Z8btSetMinIfEvRT_RKS0_.exit.i.5

if.then.i.i.5:                                    ; preds = %_ZN9btVector36setMaxERKS_.exit.4
  store float %add.i.i229, ptr %aabbMin, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit.i.5

_Z8btSetMinIfEvRT_RKS0_.exit.i.5:                 ; preds = %if.then.i.i.5, %_ZN9btVector36setMaxERKS_.exit.4
  %107 = load float, ptr %arrayidx5.i276, align 4, !tbaa !137
  %cmp.i17.i.5 = fcmp olt float %add10.i.i235, %107
  br i1 %cmp.i17.i.5, label %if.then.i18.i.5, label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.5

if.then.i18.i.5:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit.i.5
  store float %add10.i.i235, ptr %arrayidx5.i276, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.5

_Z8btSetMinIfEvRT_RKS0_.exit19.i.5:               ; preds = %if.then.i18.i.5, %_Z8btSetMinIfEvRT_RKS0_.exit.i.5
  %108 = load float, ptr %arrayidx9.i, align 4, !tbaa !137
  %cmp.i20.i.5 = fcmp olt float %add17.i.i241, %108
  br i1 %cmp.i20.i.5, label %if.then.i21.i.5, label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.5

if.then.i21.i.5:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit19.i.5
  store float %add17.i.i241, ptr %arrayidx9.i, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.5

_Z8btSetMinIfEvRT_RKS0_.exit22.i.5:               ; preds = %if.then.i21.i.5, %_Z8btSetMinIfEvRT_RKS0_.exit19.i.5
  %109 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %cmp.i23.i.5 = fcmp ogt float %109, 0.000000e+00
  br i1 %cmp.i23.i.5, label %if.then.i24.i.5, label %_ZN9btVector36setMinERKS_.exit.5

if.then.i24.i.5:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit22.i.5
  store float 0.000000e+00, ptr %arrayidx13.i, align 4, !tbaa !137
  br label %_ZN9btVector36setMinERKS_.exit.5

_ZN9btVector36setMinERKS_.exit.5:                 ; preds = %if.then.i24.i.5, %_Z8btSetMinIfEvRT_RKS0_.exit22.i.5
  %110 = load float, ptr %aabbMax, align 4, !tbaa !137
  %cmp.i.i278.5 = fcmp olt float %110, %add.i.i229
  br i1 %cmp.i.i278.5, label %if.then.i.i279.5, label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.5

if.then.i.i279.5:                                 ; preds = %_ZN9btVector36setMinERKS_.exit.5
  store float %add.i.i229, ptr %aabbMax, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.5

_Z8btSetMaxIfEvRT_RKS0_.exit.i.5:                 ; preds = %if.then.i.i279.5, %_ZN9btVector36setMinERKS_.exit.5
  %111 = load float, ptr %arrayidx5.i280, align 4, !tbaa !137
  %cmp.i17.i282.5 = fcmp olt float %111, %add10.i.i235
  br i1 %cmp.i17.i282.5, label %if.then.i18.i283.5, label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.5

if.then.i18.i283.5:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit.i.5
  store float %add10.i.i235, ptr %arrayidx5.i280, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.5

_Z8btSetMaxIfEvRT_RKS0_.exit19.i.5:               ; preds = %if.then.i18.i283.5, %_Z8btSetMaxIfEvRT_RKS0_.exit.i.5
  %112 = load float, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  %cmp.i20.i286.5 = fcmp olt float %112, %add17.i.i241
  br i1 %cmp.i20.i286.5, label %if.then.i21.i287.5, label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.5

if.then.i21.i287.5:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.5
  store float %add17.i.i241, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.5

_Z8btSetMaxIfEvRT_RKS0_.exit22.i.5:               ; preds = %if.then.i21.i287.5, %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.5
  %113 = load float, ptr %arrayidx13.i288, align 4, !tbaa !137
  %cmp.i23.i290.5 = fcmp olt float %113, 0.000000e+00
  br i1 %cmp.i23.i290.5, label %if.then.i24.i291.5, label %_ZN9btVector36setMaxERKS_.exit.5

if.then.i24.i291.5:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.5
  store float 0.000000e+00, ptr %arrayidx13.i288, align 4, !tbaa !137
  br label %_ZN9btVector36setMaxERKS_.exit.5

_ZN9btVector36setMaxERKS_.exit.5:                 ; preds = %if.then.i24.i291.5, %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.5
  %114 = load float, ptr %aabbMin, align 4, !tbaa !137
  %cmp.i.i.6 = fcmp olt float %add.i.i258, %114
  br i1 %cmp.i.i.6, label %if.then.i.i.6, label %_Z8btSetMinIfEvRT_RKS0_.exit.i.6

if.then.i.i.6:                                    ; preds = %_ZN9btVector36setMaxERKS_.exit.5
  store float %add.i.i258, ptr %aabbMin, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit.i.6

_Z8btSetMinIfEvRT_RKS0_.exit.i.6:                 ; preds = %if.then.i.i.6, %_ZN9btVector36setMaxERKS_.exit.5
  %115 = load float, ptr %arrayidx5.i276, align 4, !tbaa !137
  %cmp.i17.i.6 = fcmp olt float %add10.i.i264, %115
  br i1 %cmp.i17.i.6, label %if.then.i18.i.6, label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.6

if.then.i18.i.6:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit.i.6
  store float %add10.i.i264, ptr %arrayidx5.i276, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit19.i.6

_Z8btSetMinIfEvRT_RKS0_.exit19.i.6:               ; preds = %if.then.i18.i.6, %_Z8btSetMinIfEvRT_RKS0_.exit.i.6
  %116 = load float, ptr %arrayidx9.i, align 4, !tbaa !137
  %cmp.i20.i.6 = fcmp olt float %add17.i.i270, %116
  br i1 %cmp.i20.i.6, label %if.then.i21.i.6, label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.6

if.then.i21.i.6:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit19.i.6
  store float %add17.i.i270, ptr %arrayidx9.i, align 4, !tbaa !137
  br label %_Z8btSetMinIfEvRT_RKS0_.exit22.i.6

_Z8btSetMinIfEvRT_RKS0_.exit22.i.6:               ; preds = %if.then.i21.i.6, %_Z8btSetMinIfEvRT_RKS0_.exit19.i.6
  %117 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %cmp.i23.i.6 = fcmp ogt float %117, 0.000000e+00
  br i1 %cmp.i23.i.6, label %if.then.i24.i.6, label %_ZN9btVector36setMinERKS_.exit.6

if.then.i24.i.6:                                  ; preds = %_Z8btSetMinIfEvRT_RKS0_.exit22.i.6
  store float 0.000000e+00, ptr %arrayidx13.i, align 4, !tbaa !137
  br label %_ZN9btVector36setMinERKS_.exit.6

_ZN9btVector36setMinERKS_.exit.6:                 ; preds = %if.then.i24.i.6, %_Z8btSetMinIfEvRT_RKS0_.exit22.i.6
  %118 = load float, ptr %aabbMax, align 4, !tbaa !137
  %cmp.i.i278.6 = fcmp olt float %118, %add.i.i258
  br i1 %cmp.i.i278.6, label %if.then.i.i279.6, label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.6

if.then.i.i279.6:                                 ; preds = %_ZN9btVector36setMinERKS_.exit.6
  store float %add.i.i258, ptr %aabbMax, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit.i.6

_Z8btSetMaxIfEvRT_RKS0_.exit.i.6:                 ; preds = %if.then.i.i279.6, %_ZN9btVector36setMinERKS_.exit.6
  %119 = load float, ptr %arrayidx5.i280, align 4, !tbaa !137
  %cmp.i17.i282.6 = fcmp olt float %119, %add10.i.i264
  br i1 %cmp.i17.i282.6, label %if.then.i18.i283.6, label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.6

if.then.i18.i283.6:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit.i.6
  store float %add10.i.i264, ptr %arrayidx5.i280, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.6

_Z8btSetMaxIfEvRT_RKS0_.exit19.i.6:               ; preds = %if.then.i18.i283.6, %_Z8btSetMaxIfEvRT_RKS0_.exit.i.6
  %120 = load float, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  %cmp.i20.i286.6 = fcmp olt float %120, %add17.i.i270
  br i1 %cmp.i20.i286.6, label %if.then.i21.i287.6, label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.6

if.then.i21.i287.6:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.6
  store float %add17.i.i270, ptr %crns.sroa.4.0.aabbMax.sroa_idx, align 4, !tbaa !137
  br label %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.6

_Z8btSetMaxIfEvRT_RKS0_.exit22.i.6:               ; preds = %if.then.i21.i287.6, %_Z8btSetMaxIfEvRT_RKS0_.exit19.i.6
  %121 = load float, ptr %arrayidx13.i288, align 4, !tbaa !137
  %cmp.i23.i290.6 = fcmp olt float %121, 0.000000e+00
  br i1 %cmp.i23.i290.6, label %if.then.i24.i291.6, label %_ZN9btVector36setMaxERKS_.exit.6

if.then.i24.i291.6:                               ; preds = %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.6
  store float 0.000000e+00, ptr %arrayidx13.i288, align 4, !tbaa !137
  br label %_ZN9btVector36setMaxERKS_.exit.6

_ZN9btVector36setMaxERKS_.exit.6:                 ; preds = %if.then.i24.i291.6, %_Z8btSetMaxIfEvRT_RKS0_.exit22.i.6
  ret void
}

declare void @_ZNK16btCollisionShape17getBoundingSphereER9btVector3Rf(ptr noundef nonnull align 8 dereferenceable(24), ptr noundef nonnull align 4 dereferenceable(16), ptr noundef nonnull align 4 dereferenceable(4)) unnamed_addr #1

declare noundef float @_ZNK16btCollisionShape20getAngularMotionDiscEv(ptr noundef nonnull align 8 dereferenceable(24)) unnamed_addr #1

declare noundef float @_ZNK16btCollisionShape27getContactBreakingThresholdEv(ptr noundef nonnull align 8 dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN24btSoftBodyCollisionShape15setLocalScalingERK9btVector3(ptr noundef nonnull align 8 dereferenceable(40) %this, ptr noundef nonnull align 4 dereferenceable(16) %0) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef nonnull align 4 dereferenceable(16) ptr @_ZNK24btSoftBodyCollisionShape15getLocalScalingEv(ptr noundef nonnull align 8 dereferenceable(40) %this) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !173

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy) #38
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %init

init:                                             ; preds = %init.check
  store <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00>, ptr @_ZZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy, align 4, !tbaa !137
  %2 = tail call ptr @llvm.invariant.start.p0(i64 16, ptr nonnull @_ZZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy) #38
  br label %init.end

init.end:                                         ; preds = %init, %init.check, %entry
  ret ptr @_ZZNK24btSoftBodyCollisionShape15getLocalScalingEvE5dummy
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNK24btSoftBodyCollisionShape21calculateLocalInertiaEfR9btVector3(ptr noundef nonnull align 8 dereferenceable(40) %this, float noundef %0, ptr noundef nonnull align 4 dereferenceable(16) %1) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef ptr @_ZNK24btSoftBodyCollisionShape7getNameEv(ptr noundef nonnull align 8 dereferenceable(40) %this) unnamed_addr #29 comdat align 2 {
entry:
  ret ptr @.str.3
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN14btConcaveShape9setMarginEf(ptr noundef nonnull align 8 dereferenceable(28) %this, float noundef %collisionMargin) unnamed_addr #29 comdat align 2 {
entry:
  %m_collisionMargin = getelementptr inbounds %class.btConcaveShape, ptr %this, i64 0, i32 1
  store float %collisionMargin, ptr %m_collisionMargin, align 8, !tbaa !158
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef float @_ZNK14btConcaveShape9getMarginEv(ptr noundef nonnull align 8 dereferenceable(28) %this) unnamed_addr #29 comdat align 2 {
entry:
  %m_collisionMargin = getelementptr inbounds %class.btConcaveShape, ptr %this, i64 0, i32 1
  %0 = load float, ptr %m_collisionMargin, align 8, !tbaa !158
  ret float %0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNK24btSoftBodyCollisionShape19processAllTrianglesEP18btTriangleCallbackRK9btVector3S4_(ptr noundef nonnull align 8 dereferenceable(40) %this, ptr noundef %0, ptr noundef nonnull align 4 dereferenceable(16) %1, ptr noundef nonnull align 4 dereferenceable(16) %2) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(ptr) local_unnamed_addr #30

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare ptr @llvm.invariant.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_abort(ptr) local_unnamed_addr #30

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(ptr) local_unnamed_addr #30

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare float @sqrtf(float noundef) local_unnamed_addr #31

; Function Attrs: uwtable
define linkonce_odr dso_local noundef nonnull align 4 dereferenceable(48) ptr @_ZN11btMatrix3x311getIdentityEv() local_unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %0 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized = icmp eq i8 %0, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !173

init.check:                                       ; preds = %entry
  %1 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not = icmp eq i32 %1, 0
  br i1 %tobool.not, label %init.end, label %init

init:                                             ; preds = %init.check
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %2 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %init.end

init.end:                                         ; preds = %init, %init.check, %entry
  ret ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.fabs.f32(float) #28

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEED2Ev(ptr noundef nonnull align 8 dereferenceable(25) %this) unnamed_addr #4 comdat align 2 {
entry:
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %this, i64 0, i32 5
  %0 = load ptr, ptr %m_data.i.i, align 8, !tbaa !320
  %tobool.not.i.i = icmp eq ptr %0, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %this, i64 0, i32 6
  %1 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %1, 0
  %or.cond.i = select i1 %tobool.not.i.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE5clearEv.exit, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %0)
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE5clearEv.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody4NodeEE5clearEv.exit: ; preds = %entry, %if.then3.i.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !341
  store ptr null, ptr %m_data.i.i, align 8, !tbaa !320
  %m_size.i4.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %this, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i, align 4, !tbaa !319
  %m_capacity.i.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %this, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i, align 8, !tbaa !342
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN6btDbvt8ICollideD2Ev(ptr noundef nonnull align 8 dereferenceable(8) %this) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN6btDbvt8ICollide7ProcessEPK10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(8) %this, ptr noundef %0) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

declare void @_ZN15CProfileManager13Start_ProfileEPKc(ptr noundef) local_unnamed_addr #1

declare void @_ZN15CProfileManager12Stop_ProfileEv() local_unnamed_addr #1

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNK10btSoftBody4Body13applyVImpulseERK9btVector3S3_(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef nonnull align 4 dereferenceable(16) %impulse, ptr noundef nonnull align 4 dereferenceable(16) %rpos) local_unnamed_addr #0 comdat align 2 {
entry:
  %m_rigid = getelementptr inbounds %"struct.btSoftBody::Body", ptr %this, i64 0, i32 1
  %0 = load ptr, ptr %m_rigid, align 8, !tbaa !511
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  tail call void @_ZN11btRigidBody12applyImpulseERK9btVector3S2_(ptr noundef nonnull align 8 dereferenceable(564) %0, ptr noundef nonnull align 4 dereferenceable(16) %impulse, ptr noundef nonnull align 4 dereferenceable(16) %rpos)
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %1 = load ptr, ptr %this, align 8, !tbaa !272
  %tobool3.not = icmp eq ptr %1, null
  br i1 %tobool3.not, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  %m_imass.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 5
  %2 = load float, ptr %m_imass.i, align 4, !tbaa !137
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %3 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %mul8.i.i.i = fmul float %2, %3
  %m_invwi.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7
  %arrayidx.i.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 1
  %4 = load float, ptr %arrayidx.i.i.i, align 4, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds [4 x float], ptr %rpos, i64 0, i64 2
  %5 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %6 = fneg float %5
  %7 = load float, ptr %rpos, align 4, !tbaa !137
  %8 = fneg float %7
  %neg19.i.i.i = fmul float %3, %8
  %9 = fneg float %4
  %arrayidx5.i.i25.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx10.i.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx.i.i28.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 2
  %10 = load float, ptr %arrayidx.i17.i.i, align 4, !tbaa !137
  %arrayidx5.i18.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %11 = load float, ptr %arrayidx5.i18.i.i, align 4, !tbaa !137
  %arrayidx10.i21.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %12 = load float, ptr %arrayidx10.i21.i.i, align 4, !tbaa !137
  %m_vimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 9
  %13 = load <2 x float>, ptr %impulse, align 4, !tbaa !137
  %14 = insertelement <2 x float> poison, float %2, i64 0
  %15 = shufflevector <2 x float> %14, <2 x float> poison, <2 x i32> zeroinitializer
  %16 = fmul <2 x float> %15, %13
  %17 = extractelement <2 x float> %13, i64 1
  %neg.i.i.i = fmul float %17, %6
  %18 = tail call float @llvm.fmuladd.f32(float %4, float %3, float %neg.i.i.i)
  %19 = extractelement <2 x float> %13, i64 0
  %20 = tail call float @llvm.fmuladd.f32(float %5, float %19, float %neg19.i.i.i)
  %neg30.i.i.i = fmul float %19, %9
  %21 = tail call float @llvm.fmuladd.f32(float %7, float %17, float %neg30.i.i.i)
  %mul8.i20.i.i = fmul float %20, %11
  %22 = tail call float @llvm.fmuladd.f32(float %10, float %18, float %mul8.i20.i.i)
  %23 = tail call float @llvm.fmuladd.f32(float %12, float %21, float %22)
  %24 = load <2 x float>, ptr %m_vimpulses.i, align 4, !tbaa !137
  %25 = fadd <2 x float> %16, %24
  store <2 x float> %25, ptr %m_vimpulses.i, align 4, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 9, i64 0, i32 0, i64 2
  %26 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %add13.i.i = fadd float %mul8.i.i.i, %26
  store float %add13.i.i, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %m_lv.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 13
  %27 = load <2 x float>, ptr %m_lv.i, align 4, !tbaa !137
  %28 = fadd <2 x float> %16, %27
  store <2 x float> %28, ptr %m_lv.i, align 4, !tbaa !137
  %arrayidx12.i34.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 13, i32 0, i64 2
  %29 = load float, ptr %arrayidx12.i34.i, align 4, !tbaa !137
  %add13.i35.i = fadd float %mul8.i.i.i, %29
  store float %add13.i35.i, ptr %arrayidx12.i34.i, align 4, !tbaa !137
  %arrayidx8.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 9, i64 1
  %30 = load float, ptr %m_invwi.i, align 4, !tbaa !137
  %31 = load float, ptr %arrayidx5.i.i25.i, align 4, !tbaa !137
  %32 = load float, ptr %arrayidx10.i.i.i, align 4, !tbaa !137
  %33 = load float, ptr %arrayidx.i.i28.i, align 4, !tbaa !137
  %34 = load float, ptr %arrayidx5.i12.i.i, align 4, !tbaa !137
  %35 = load float, ptr %arrayidx10.i15.i.i, align 4, !tbaa !137
  %36 = insertelement <2 x float> poison, float %31, i64 0
  %37 = insertelement <2 x float> %36, float %34, i64 1
  %38 = insertelement <2 x float> poison, float %20, i64 0
  %39 = shufflevector <2 x float> %38, <2 x float> poison, <2 x i32> zeroinitializer
  %40 = fmul <2 x float> %37, %39
  %41 = insertelement <2 x float> poison, float %30, i64 0
  %42 = insertelement <2 x float> %41, float %33, i64 1
  %43 = insertelement <2 x float> poison, float %18, i64 0
  %44 = shufflevector <2 x float> %43, <2 x float> poison, <2 x i32> zeroinitializer
  %45 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %42, <2 x float> %44, <2 x float> %40)
  %46 = insertelement <2 x float> poison, float %32, i64 0
  %47 = insertelement <2 x float> %46, float %35, i64 1
  %48 = insertelement <2 x float> poison, float %21, i64 0
  %49 = shufflevector <2 x float> %48, <2 x float> poison, <2 x i32> zeroinitializer
  %50 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %47, <2 x float> %49, <2 x float> %45)
  %51 = load <2 x float>, ptr %arrayidx8.i, align 4, !tbaa !137
  %52 = fadd <2 x float> %50, %51
  store <2 x float> %52, ptr %arrayidx8.i, align 4, !tbaa !137
  %arrayidx12.i41.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 9, i64 1, i32 0, i64 2
  %53 = load float, ptr %arrayidx12.i41.i, align 4, !tbaa !137
  %add13.i42.i = fadd float %23, %53
  store float %add13.i42.i, ptr %arrayidx12.i41.i, align 4, !tbaa !137
  %m_av.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 14
  %54 = load <2 x float>, ptr %m_av.i, align 4, !tbaa !137
  %55 = fadd <2 x float> %50, %54
  store <2 x float> %55, ptr %m_av.i, align 4, !tbaa !137
  %arrayidx12.i48.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 14, i32 0, i64 2
  %56 = load float, ptr %arrayidx12.i48.i, align 4, !tbaa !137
  %add13.i49.i = fadd float %23, %56
  store float %add13.i49.i, ptr %arrayidx12.i48.i, align 4, !tbaa !137
  %m_nvimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 11
  %57 = load i32, ptr %m_nvimpulses.i, align 8, !tbaa !321
  %inc.i = add nsw i32 %57, 1
  store i32 %inc.i, ptr %m_nvimpulses.i, align 8, !tbaa !321
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare float @acosf(float noundef) local_unnamed_addr #31

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNK10btSoftBody4Body14applyVAImpulseERK9btVector3(ptr noundef nonnull align 8 dereferenceable(24) %this, ptr noundef nonnull align 4 dereferenceable(16) %impulse) local_unnamed_addr #0 comdat align 2 {
entry:
  %m_rigid = getelementptr inbounds %"struct.btSoftBody::Body", ptr %this, i64 0, i32 1
  %0 = load ptr, ptr %m_rigid, align 8, !tbaa !511
  %tobool.not = icmp eq ptr %0, null
  br i1 %tobool.not, label %if.end, label %if.then

if.then:                                          ; preds = %entry
  %m_invInertiaTensorWorld.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1
  %1 = load float, ptr %impulse, align 4, !tbaa !137
  %arrayidx5.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 0, i32 0, i64 1
  %arrayidx7.i.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 1
  %2 = load float, ptr %arrayidx7.i.i.i, align 4, !tbaa !137
  %arrayidx10.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i.i = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %3 = load float, ptr %arrayidx12.i.i.i, align 4, !tbaa !137
  %arrayidx.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 1
  %arrayidx5.i12.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 2
  %4 = load float, ptr %arrayidx.i17.i.i, align 8, !tbaa !137
  %arrayidx5.i18.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 2, i32 0, i64 1
  %5 = load float, ptr %arrayidx5.i18.i.i, align 4, !tbaa !137
  %mul8.i20.i.i = fmul float %2, %5
  %6 = tail call float @llvm.fmuladd.f32(float %4, float %1, float %mul8.i20.i.i)
  %arrayidx10.i21.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 1, i32 0, i64 2, i32 0, i64 2
  %7 = load float, ptr %arrayidx10.i21.i.i, align 8, !tbaa !137
  %8 = tail call float @llvm.fmuladd.f32(float %7, float %3, float %6)
  %m_angularFactor.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 5
  %arrayidx13.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 5, i32 0, i64 2
  %9 = load float, ptr %arrayidx13.i.i, align 4, !tbaa !137
  %mul14.i.i = fmul float %8, %9
  %m_angularVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3
  %10 = load float, ptr %m_invInertiaTensorWorld.i, align 8, !tbaa !137
  %11 = load float, ptr %arrayidx5.i.i.i, align 4, !tbaa !137
  %12 = load float, ptr %arrayidx10.i.i.i, align 8, !tbaa !137
  %13 = load float, ptr %arrayidx.i.i.i, align 8, !tbaa !137
  %14 = load float, ptr %arrayidx5.i12.i.i, align 4, !tbaa !137
  %15 = insertelement <2 x float> poison, float %2, i64 0
  %16 = shufflevector <2 x float> %15, <2 x float> poison, <2 x i32> zeroinitializer
  %17 = insertelement <2 x float> poison, float %11, i64 0
  %18 = insertelement <2 x float> %17, float %14, i64 1
  %19 = fmul <2 x float> %16, %18
  %20 = insertelement <2 x float> poison, float %10, i64 0
  %21 = insertelement <2 x float> %20, float %13, i64 1
  %22 = insertelement <2 x float> poison, float %1, i64 0
  %23 = shufflevector <2 x float> %22, <2 x float> poison, <2 x i32> zeroinitializer
  %24 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %21, <2 x float> %23, <2 x float> %19)
  %25 = load float, ptr %arrayidx10.i15.i.i, align 8, !tbaa !137
  %26 = insertelement <2 x float> poison, float %12, i64 0
  %27 = insertelement <2 x float> %26, float %25, i64 1
  %28 = insertelement <2 x float> poison, float %3, i64 0
  %29 = shufflevector <2 x float> %28, <2 x float> poison, <2 x i32> zeroinitializer
  %30 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %27, <2 x float> %29, <2 x float> %24)
  %31 = load <2 x float>, ptr %m_angularFactor.i, align 4, !tbaa !137
  %32 = fmul <2 x float> %30, %31
  %33 = load <2 x float>, ptr %m_angularVelocity.i, align 8, !tbaa !137
  %34 = fadd <2 x float> %32, %33
  store <2 x float> %34, ptr %m_angularVelocity.i, align 8, !tbaa !137
  %arrayidx12.i.i = getelementptr inbounds %class.btRigidBody, ptr %0, i64 0, i32 3, i32 0, i64 2
  %35 = load float, ptr %arrayidx12.i.i, align 8, !tbaa !137
  %add13.i.i = fadd float %mul14.i.i, %35
  store float %add13.i.i, ptr %arrayidx12.i.i, align 8, !tbaa !137
  br label %if.end

if.end:                                           ; preds = %if.then, %entry
  %36 = load ptr, ptr %this, align 8, !tbaa !272
  %tobool3.not = icmp eq ptr %36, null
  br i1 %tobool3.not, label %if.end6, label %if.then4

if.then4:                                         ; preds = %if.end
  %m_invwi.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7
  %37 = load float, ptr %impulse, align 4, !tbaa !137
  %arrayidx5.i.i.i9 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 0, i32 0, i64 1
  %arrayidx7.i.i.i10 = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 1
  %38 = load float, ptr %arrayidx7.i.i.i10, align 4, !tbaa !137
  %arrayidx10.i.i.i12 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 0, i32 0, i64 2
  %arrayidx12.i.i.i13 = getelementptr inbounds [4 x float], ptr %impulse, i64 0, i64 2
  %39 = load float, ptr %arrayidx12.i.i.i13, align 4, !tbaa !137
  %arrayidx.i.i.i14 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 1
  %arrayidx5.i12.i.i15 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 1, i32 0, i64 1
  %arrayidx10.i15.i.i17 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 1, i32 0, i64 2
  %arrayidx.i17.i.i18 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 2
  %40 = load float, ptr %arrayidx.i17.i.i18, align 4, !tbaa !137
  %arrayidx5.i18.i.i19 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 2, i32 0, i64 1
  %41 = load float, ptr %arrayidx5.i18.i.i19, align 4, !tbaa !137
  %mul8.i20.i.i20 = fmul float %38, %41
  %42 = tail call float @llvm.fmuladd.f32(float %40, float %37, float %mul8.i20.i.i20)
  %arrayidx10.i21.i.i21 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 7, i32 0, i64 2, i32 0, i64 2
  %43 = load float, ptr %arrayidx10.i21.i.i21, align 4, !tbaa !137
  %44 = tail call float @llvm.fmuladd.f32(float %43, float %39, float %42)
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 9, i64 1
  %45 = load float, ptr %m_invwi.i, align 4, !tbaa !137
  %46 = load float, ptr %arrayidx5.i.i.i9, align 4, !tbaa !137
  %47 = load float, ptr %arrayidx10.i.i.i12, align 4, !tbaa !137
  %48 = load float, ptr %arrayidx.i.i.i14, align 4, !tbaa !137
  %49 = load float, ptr %arrayidx5.i12.i.i15, align 4, !tbaa !137
  %50 = insertelement <2 x float> poison, float %38, i64 0
  %51 = shufflevector <2 x float> %50, <2 x float> poison, <2 x i32> zeroinitializer
  %52 = insertelement <2 x float> poison, float %46, i64 0
  %53 = insertelement <2 x float> %52, float %49, i64 1
  %54 = fmul <2 x float> %51, %53
  %55 = insertelement <2 x float> poison, float %45, i64 0
  %56 = insertelement <2 x float> %55, float %48, i64 1
  %57 = insertelement <2 x float> poison, float %37, i64 0
  %58 = shufflevector <2 x float> %57, <2 x float> poison, <2 x i32> zeroinitializer
  %59 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %56, <2 x float> %58, <2 x float> %54)
  %60 = load float, ptr %arrayidx10.i15.i.i17, align 4, !tbaa !137
  %61 = insertelement <2 x float> poison, float %47, i64 0
  %62 = insertelement <2 x float> %61, float %60, i64 1
  %63 = insertelement <2 x float> poison, float %39, i64 0
  %64 = shufflevector <2 x float> %63, <2 x float> poison, <2 x i32> zeroinitializer
  %65 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %62, <2 x float> %64, <2 x float> %59)
  %66 = load <2 x float>, ptr %arrayidx.i, align 4, !tbaa !137
  %67 = fadd <2 x float> %65, %66
  store <2 x float> %67, ptr %arrayidx.i, align 4, !tbaa !137
  %arrayidx12.i.i25 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 9, i64 1, i32 0, i64 2
  %68 = load float, ptr %arrayidx12.i.i25, align 4, !tbaa !137
  %add13.i.i26 = fadd float %44, %68
  store float %add13.i.i26, ptr %arrayidx12.i.i25, align 4, !tbaa !137
  %m_av.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 14
  %69 = load <2 x float>, ptr %m_av.i, align 4, !tbaa !137
  %70 = fadd <2 x float> %65, %69
  store <2 x float> %70, ptr %m_av.i, align 4, !tbaa !137
  %arrayidx12.i11.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 14, i32 0, i64 2
  %71 = load float, ptr %arrayidx12.i11.i, align 4, !tbaa !137
  %add13.i12.i = fadd float %44, %71
  store float %add13.i12.i, ptr %arrayidx12.i11.i, align 4, !tbaa !137
  %m_nvimpulses.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %36, i64 0, i32 11
  %72 = load i32, ptr %m_nvimpulses.i, align 8, !tbaa !321
  %inc.i = add nsw i32 %72, 1
  store i32 %inc.i, ptr %m_nvimpulses.i, align 8, !tbaa !321
  br label %if.end6

if.end6:                                          ; preds = %if.then4, %if.end
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN15btSoftColliders13CollideSDF_RSD0Ev(ptr noundef nonnull align 8 dereferenceable(40) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN15btSoftColliders13CollideSDF_RS7ProcessEPK10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(40) %this, ptr noundef %leaf) unnamed_addr #4 comdat align 2 {
entry:
  %0 = getelementptr inbounds %struct.btDbvtNode, ptr %leaf, i64 0, i32 2
  %1 = load ptr, ptr %0, align 8, !tbaa !164
  tail call void @_ZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeE(ptr noundef nonnull align 8 dereferenceable(40) %this, ptr noundef nonnull align 8 dereferenceable(113) %1)
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeE(ptr noundef nonnull align 8 dereferenceable(40) %this, ptr noundef nonnull align 8 dereferenceable(113) %n) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %c = alloca %"struct.btSoftBody::RContact", align 8
  %ra = alloca %class.btVector3, align 8
  %ref.tmp73 = alloca %class.btMatrix3x3, align 4
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %n, i64 0, i32 6
  %0 = load float, ptr %m_im, align 8, !tbaa !175
  %dynmargin = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %this, i64 0, i32 4
  %stamargin = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %this, i64 0, i32 5
  %dynmargin.val = load float, ptr %dynmargin, align 8
  %stamargin.val = load float, ptr %stamargin, align 4
  call void @llvm.lifetime.start.p0(i64 120, ptr nonnull %c) #38
  %m_battach = getelementptr inbounds %"struct.btSoftBody::Node", ptr %n, i64 0, i32 9
  %bf.load = load i8, ptr %m_battach, align 8
  %1 = and i8 %bf.load, 1
  %tobool.not = icmp eq i8 %1, 0
  br i1 %tobool.not, label %land.lhs.true, label %if.end106

land.lhs.true:                                    ; preds = %entry
  %cmp = fcmp ogt float %0, 0.000000e+00
  %cond = select i1 %cmp, float %dynmargin.val, float %stamargin.val
  %psb = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %this, i64 0, i32 1
  %2 = load ptr, ptr %psb, align 8, !tbaa !568
  %m_colObj1 = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %this, i64 0, i32 2
  %3 = load ptr, ptr %m_colObj1, align 8, !tbaa !570
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %n, i64 0, i32 1
  %call = call noundef zeroext i1 @_ZNK10btSoftBody12checkContactEP17btCollisionObjectRK9btVector3fRNS_4sCtiE(ptr noundef nonnull align 8 dereferenceable(1496) %2, ptr noundef %3, ptr noundef nonnull align 4 dereferenceable(16) %m_x, float noundef %cond, ptr noundef nonnull align 8 dereferenceable(28) %c)
  br i1 %call, label %if.then, label %if.end106

if.then:                                          ; preds = %land.lhs.true
  %4 = load float, ptr %m_im, align 8, !tbaa !175
  %m_rigidBody = getelementptr inbounds %"struct.btSoftColliders::CollideSDF_RS", ptr %this, i64 0, i32 3
  %5 = load ptr, ptr %m_rigidBody, align 8, !tbaa !571
  %tobool3.not = icmp eq ptr %5, null
  br i1 %tobool3.not, label %cond.end8, label %cond.true4

cond.true4:                                       ; preds = %if.then
  %m_inverseMass.i = getelementptr inbounds %class.btRigidBody, ptr %5, i64 0, i32 4
  %6 = load float, ptr %m_inverseMass.i, align 8, !tbaa !452
  br label %cond.end8

cond.end8:                                        ; preds = %if.then, %cond.true4
  %cond9 = phi float [ %6, %cond.true4 ], [ 0.000000e+00, %if.then ]
  %add = fadd float %4, %cond9
  %cmp10 = fcmp ogt float %add, 0.000000e+00
  br i1 %cmp10, label %if.then11, label %if.end106

if.then11:                                        ; preds = %cond.end8
  %m_interpolationWorldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %5, i64 0, i32 2
  %7 = load ptr, ptr %m_colObj1, align 8
  %m_worldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %7, i64 0, i32 1
  %cond-lvalue = select i1 %tobool3.not, ptr %m_worldTransform.i, ptr %m_interpolationWorldTransform.i
  %8 = load atomic i8, ptr @_ZGVZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic acquire, align 8
  %guard.uninitialized = icmp eq i8 %8, 0
  br i1 %guard.uninitialized, label %init.check, label %init.end, !prof !173

init.check:                                       ; preds = %if.then11
  %9 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic) #38
  %tobool21.not = icmp eq i32 %9, 0
  br i1 %tobool21.not, label %init.end, label %init

init:                                             ; preds = %init.check
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) @_ZZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic, i8 0, i64 48, i1 false)
  %10 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic) #38
  br label %init.end

init.end:                                         ; preds = %init, %init.check, %if.then11
  %11 = load ptr, ptr %m_rigidBody, align 8, !tbaa !571
  %tobool31.not = icmp eq ptr %11, null
  %m_invInertiaTensorWorld.i = getelementptr inbounds %class.btRigidBody, ptr %11, i64 0, i32 1
  %spec.select = select i1 %tobool31.not, ptr @_ZZNK15btSoftColliders13CollideSDF_RS6DoNodeERN10btSoftBody4NodeEE9iwiStatic, ptr %m_invInertiaTensorWorld.i
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ra) #38
  %m_origin.i = getelementptr inbounds %class.btTransform, ptr %cond-lvalue, i64 0, i32 1
  %arrayidx5.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %n, i64 0, i32 1, i32 0, i64 1
  %12 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds %class.btTransform, ptr %cond-lvalue, i64 0, i32 1, i32 0, i64 1
  %13 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %sub8.i = fsub float %12, %13
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %n, i64 0, i32 1, i32 0, i64 2
  %arrayidx13.i = getelementptr inbounds %class.btTransform, ptr %cond-lvalue, i64 0, i32 1, i32 0, i64 2
  %14 = load float, ptr %m_x, align 8, !tbaa !137
  %15 = load float, ptr %m_origin.i, align 4, !tbaa !137
  %16 = load float, ptr %arrayidx11.i, align 8, !tbaa !137
  %17 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %18 = insertelement <2 x float> poison, float %16, i64 0
  %19 = insertelement <2 x float> %18, float %14, i64 1
  %20 = insertelement <2 x float> poison, float %17, i64 0
  %21 = insertelement <2 x float> %20, float %15, i64 1
  %22 = fsub <2 x float> %19, %21
  %23 = shufflevector <2 x float> %22, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %retval.sroa.0.4.vec.insert.i = insertelement <2 x float> %23, float %sub8.i, i64 1
  %24 = insertelement <2 x float> %22, float 0.000000e+00, i64 1
  store <2 x float> %retval.sroa.0.4.vec.insert.i, ptr %ra, align 8
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ra, i64 0, i32 1
  store <2 x float> %24, ptr %25, align 8
  br i1 %tobool31.not, label %init.end.cond.end55_crit_edge, label %cond.true43

init.end.cond.end55_crit_edge:                    ; preds = %init.end
  %.pre = load ptr, ptr %psb, align 8
  %m_sst75.phi.trans.insert = getelementptr inbounds %class.btSoftBody, ptr %.pre, i64 0, i32 3
  %.pre195 = load float, ptr %m_sst75.phi.trans.insert, align 8, !tbaa !420
  br label %cond.end55

cond.true43:                                      ; preds = %init.end
  %m_linearVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %11, i64 0, i32 2
  %m_angularVelocity.i = getelementptr inbounds %class.btRigidBody, ptr %11, i64 0, i32 3
  %arrayidx.i.i = getelementptr inbounds %class.btRigidBody, ptr %11, i64 0, i32 3, i32 0, i64 1
  %26 = load float, ptr %m_angularVelocity.i, align 8, !tbaa !137
  %arrayidx11.i.i = getelementptr inbounds %class.btRigidBody, ptr %11, i64 0, i32 2, i32 0, i64 2
  %27 = load float, ptr %arrayidx11.i.i, align 8, !tbaa !137
  %28 = load ptr, ptr %psb, align 8
  %m_sst = getelementptr inbounds %class.btSoftBody, ptr %28, i64 0, i32 3
  %29 = load float, ptr %m_sst, align 4, !tbaa !137
  %30 = load <2 x float>, ptr %arrayidx.i.i, align 4, !tbaa !137
  %31 = insertelement <2 x float> %30, float %26, i64 0
  %32 = fneg <2 x float> %31
  %33 = insertelement <2 x float> %22, float %sub8.i, i64 1
  %34 = fmul <2 x float> %33, %32
  %35 = shufflevector <2 x float> %34, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %36 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %30, <2 x float> %22, <2 x float> %35)
  %37 = extractelement <2 x float> %30, i64 0
  %38 = fneg float %37
  %39 = extractelement <2 x float> %22, i64 1
  %neg30.i.i = fmul float %39, %38
  %40 = tail call float @llvm.fmuladd.f32(float %26, float %sub8.i, float %neg30.i.i)
  %41 = load <2 x float>, ptr %m_linearVelocity.i, align 8, !tbaa !137
  %42 = fadd <2 x float> %36, %41
  %add14.i.i = fadd float %40, %27
  %43 = insertelement <2 x float> poison, float %29, i64 0
  %44 = shufflevector <2 x float> %43, <2 x float> poison, <2 x i32> zeroinitializer
  %45 = fmul <2 x float> %42, %44
  %mul8.i = fmul float %add14.i.i, %29
  %retval.sroa.3.12.vec.insert.i125 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i, i64 0
  br label %cond.end55

cond.end55:                                       ; preds = %init.end.cond.end55_crit_edge, %cond.true43
  %46 = phi float [ %29, %cond.true43 ], [ %.pre195, %init.end.cond.end55_crit_edge ]
  %47 = phi ptr [ %28, %cond.true43 ], [ %.pre, %init.end.cond.end55_crit_edge ]
  %va.sroa.0.0 = phi <2 x float> [ %45, %cond.true43 ], [ zeroinitializer, %init.end.cond.end55_crit_edge ]
  %va.sroa.7.0 = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i125, %cond.true43 ], [ zeroinitializer, %init.end.cond.end55_crit_edge ]
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %n, i64 0, i32 2
  %48 = load float, ptr %m_q, align 8, !tbaa !137
  %sub.i131 = fsub float %14, %48
  %arrayidx7.i133 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %n, i64 0, i32 2, i32 0, i64 1
  %49 = load float, ptr %arrayidx7.i133, align 4, !tbaa !137
  %sub8.i134 = fsub float %12, %49
  %arrayidx13.i136 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %n, i64 0, i32 2, i32 0, i64 2
  %50 = load float, ptr %arrayidx13.i136, align 8, !tbaa !137
  %sub14.i137 = fsub float %16, %50
  %va.sroa.0.0.vec.extract = extractelement <2 x float> %va.sroa.0.0, i64 0
  %sub.i143 = fsub float %sub.i131, %va.sroa.0.0.vec.extract
  %va.sroa.0.4.vec.extract = extractelement <2 x float> %va.sroa.0.0, i64 1
  %sub8.i146 = fsub float %sub8.i134, %va.sroa.0.4.vec.extract
  %va.sroa.7.8.vec.extract = extractelement <2 x float> %va.sroa.7.0, i64 0
  %sub14.i149 = fsub float %sub14.i137, %va.sroa.7.8.vec.extract
  %m_normal = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %c, i64 0, i32 1
  %51 = load float, ptr %m_normal, align 8, !tbaa !137
  %arrayidx7.i.i156 = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %c, i64 0, i32 1, i32 0, i64 1
  %52 = load float, ptr %arrayidx7.i.i156, align 4, !tbaa !137
  %mul8.i.i = fmul float %sub8.i146, %52
  %53 = tail call float @llvm.fmuladd.f32(float %sub.i143, float %51, float %mul8.i.i)
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::sCti", ptr %c, i64 0, i32 1, i32 0, i64 2
  %54 = load float, ptr %arrayidx12.i.i, align 8, !tbaa !137
  %55 = tail call float @llvm.fmuladd.f32(float %sub14.i149, float %54, float %53)
  %mul.i157 = fmul float %51, %55
  %mul4.i159 = fmul float %52, %55
  %mul8.i161 = fmul float %54, %55
  %sub.i167 = fsub float %sub.i143, %mul.i157
  %sub8.i170 = fsub float %sub8.i146, %mul4.i159
  %sub14.i173 = fsub float %sub14.i149, %mul8.i161
  %kDF = getelementptr inbounds %class.btSoftBody, ptr %47, i64 0, i32 2, i32 7
  %56 = load float, ptr %kDF, align 4, !tbaa !597
  %57 = load ptr, ptr %m_colObj1, align 8, !tbaa !570
  %m_friction.i = getelementptr inbounds %class.btCollisionObject, ptr %57, i64 0, i32 16
  %58 = load float, ptr %m_friction.i, align 4, !tbaa !581
  %mul = fmul float %56, %58
  %m_node = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %c, i64 0, i32 1
  store ptr %n, ptr %m_node, align 8, !tbaa !561
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %ref.tmp73) #38
  call fastcc void @_ZL13ImpulseMatrixfffRK11btMatrix3x3RK9btVector3(ptr noalias nonnull align 4 %ref.tmp73, float noundef %46, float noundef %4, float noundef %cond9, ptr noundef nonnull align 4 dereferenceable(48) %spec.select, ptr noundef nonnull align 4 dereferenceable(16) %ra)
  %m_c0 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %c, i64 0, i32 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_c0, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp73, i64 16, i1 false), !tbaa.struct !163
  %arrayidx5.i179 = getelementptr inbounds [3 x %class.btVector3], ptr %ref.tmp73, i64 0, i64 1
  %arrayidx7.i180 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %c, i64 0, i32 2, i32 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx7.i180, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i179, i64 16, i1 false), !tbaa.struct !163
  %arrayidx9.i = getelementptr inbounds [3 x %class.btVector3], ptr %ref.tmp73, i64 0, i64 2
  %arrayidx11.i181 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %c, i64 0, i32 2, i32 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx11.i181, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx9.i, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %ref.tmp73) #38
  %m_c1 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %c, i64 0, i32 3
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_c1, ptr noundef nonnull align 8 dereferenceable(16) %ra, i64 16, i1 false), !tbaa.struct !163
  %mul81 = fmul float %4, %46
  %m_c2 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %c, i64 0, i32 4
  store float %mul81, ptr %m_c2, align 8, !tbaa !598
  %mul8.i.i183 = fmul float %sub8.i170, %sub8.i170
  %59 = tail call float @llvm.fmuladd.f32(float %sub.i167, float %sub.i167, float %mul8.i.i183)
  %60 = tail call float @llvm.fmuladd.f32(float %sub14.i173, float %sub14.i173, float %59)
  %61 = tail call float @llvm.fabs.f32(float %55)
  %mul84 = fmul float %61, %mul
  %cmp85 = fcmp olt float %60, %mul84
  %sub = fsub float 1.000000e+00, %mul
  %cond89 = select i1 %cmp85, float 0.000000e+00, float %sub
  %m_c3 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %c, i64 0, i32 5
  store float %cond89, ptr %m_c3, align 4, !tbaa !599
  %m_collisionFlags.i = getelementptr inbounds %class.btCollisionObject, ptr %57, i64 0, i32 11
  %62 = load i32, ptr %m_collisionFlags.i, align 8, !tbaa !600
  %and.i = and i32 %62, 3
  %cmp.i.not = icmp eq i32 %and.i, 0
  %kKHR = getelementptr inbounds %class.btSoftBody, ptr %47, i64 0, i32 2, i32 10
  %kCHR = getelementptr inbounds %class.btSoftBody, ptr %47, i64 0, i32 2, i32 9
  %cond99.in = select i1 %cmp.i.not, ptr %kCHR, ptr %kKHR
  %cond99 = load float, ptr %cond99.in, align 4, !tbaa !137
  %m_c4 = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %c, i64 0, i32 6
  store float %cond99, ptr %m_c4, align 8, !tbaa !563
  %m_rcontacts = getelementptr inbounds %class.btSoftBody, ptr %47, i64 0, i32 14
  call void @_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE9push_backERKS1_(ptr noundef nonnull align 8 dereferenceable(25) %m_rcontacts, ptr noundef nonnull align 8 dereferenceable(116) %c)
  %63 = load ptr, ptr %m_rigidBody, align 8, !tbaa !571
  %tobool102.not = icmp eq ptr %63, null
  br i1 %tobool102.not, label %if.end, label %if.then103

if.then103:                                       ; preds = %cond.end55
  call void @_ZN17btCollisionObject8activateEb(ptr noundef nonnull align 8 dereferenceable(280) %63, i1 noundef zeroext false)
  br label %if.end

if.end:                                           ; preds = %if.then103, %cond.end55
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ra) #38
  br label %if.end106

if.end106:                                        ; preds = %cond.end8, %if.end, %land.lhs.true, %entry
  call void @llvm.lifetime.end.p0(i64 120, ptr nonnull %c) #38
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE9push_backERKS1_(ptr noundef nonnull align 8 dereferenceable(25) %this, ptr noundef nonnull align 8 dereferenceable(116) %_Val) local_unnamed_addr #8 comdat align 2 {
entry:
  %m_size.i = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 2
  %0 = load i32, ptr %m_size.i, align 4, !tbaa !108
  %m_capacity.i = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 3
  %1 = load i32, ptr %m_capacity.i, align 8, !tbaa !109
  %cmp = icmp eq i32 %0, %1
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tobool.not.i = icmp eq i32 %0, 0
  %mul.i = shl nsw i32 %0, 1
  %cond.i = select i1 %tobool.not.i, i32 1, i32 %mul.i
  %cmp.i = icmp slt i32 %0, %cond.i
  br i1 %cmp.i, label %if.then.i, label %if.end

if.then.i:                                        ; preds = %if.then
  %tobool.not.i.i = icmp eq i32 %cond.i, 0
  br i1 %tobool.not.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE8allocateEi.exit.i, label %if.then.i.i

if.then.i.i:                                      ; preds = %if.then.i
  %conv.i.i.i = sext i32 %cond.i to i64
  %mul.i.i.i = mul nsw i64 %conv.i.i.i, 120
  %call.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i, i32 noundef 16)
  %.pre = load i32, ptr %m_size.i, align 4, !tbaa !108
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE8allocateEi.exit.i

_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE8allocateEi.exit.i: ; preds = %if.then.i.i, %if.then.i
  %2 = phi i32 [ %.pre, %if.then.i.i ], [ %0, %if.then.i ]
  %retval.0.i.i = phi ptr [ %call.i.i.i, %if.then.i.i ], [ null, %if.then.i ]
  %cmp7.i.i = icmp sgt i32 %2, 0
  br i1 %cmp7.i.i, label %for.body.lr.ph.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8RContactEE4copyEiiPS1_.exit.i

for.body.lr.ph.i.i:                               ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE8allocateEi.exit.i
  %m_data.i.i = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 5
  %wide.trip.count.i.i = zext i32 %2 to i64
  br label %for.body.i.i

for.body.i.i:                                     ; preds = %for.body.i.i, %for.body.lr.ph.i.i
  %indvars.iv.i.i = phi i64 [ 0, %for.body.lr.ph.i.i ], [ %indvars.iv.next.i.i, %for.body.i.i ]
  %arrayidx.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %retval.0.i.i, i64 %indvars.iv.i.i
  %3 = load ptr, ptr %m_data.i.i, align 8, !tbaa !107
  %arrayidx3.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %3, i64 %indvars.iv.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %arrayidx.i.i, ptr noundef nonnull align 8 dereferenceable(40) %arrayidx3.i.i, i64 40, i1 false)
  %m_c0.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %retval.0.i.i, i64 %indvars.iv.i.i, i32 2
  %m_c03.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %3, i64 %indvars.iv.i.i, i32 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_c0.i.i.i, ptr noundef nonnull align 8 dereferenceable(16) %m_c03.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx6.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %3, i64 %indvars.iv.i.i, i32 2, i32 0, i64 1
  %arrayidx8.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %retval.0.i.i, i64 %indvars.iv.i.i, i32 2, i32 0, i64 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx8.i.i.i.i, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx6.i.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx10.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %3, i64 %indvars.iv.i.i, i32 2, i32 0, i64 2
  %arrayidx12.i.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %retval.0.i.i, i64 %indvars.iv.i.i, i32 2, i32 0, i64 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx12.i.i.i.i, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx10.i.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %m_c1.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %retval.0.i.i, i64 %indvars.iv.i.i, i32 3
  %m_c14.i.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %3, i64 %indvars.iv.i.i, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %m_c1.i.i.i, ptr noundef nonnull align 8 dereferenceable(28) %m_c14.i.i.i, i64 28, i1 false)
  %indvars.iv.next.i.i = add nuw nsw i64 %indvars.iv.i.i, 1
  %exitcond.not.i.i = icmp eq i64 %indvars.iv.next.i.i, %wide.trip.count.i.i
  br i1 %exitcond.not.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8RContactEE4copyEiiPS1_.exit.i, label %for.body.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody8RContactEE4copyEiiPS1_.exit.i: ; preds = %for.body.i.i, %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE8allocateEi.exit.i
  %m_data.i9.i = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 5
  %4 = load ptr, ptr %m_data.i9.i, align 8, !tbaa !107
  %tobool.not.i10.i = icmp eq ptr %4, null
  %m_ownsMemory.i.i = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 6
  %5 = load i8, ptr %m_ownsMemory.i.i, align 8, !range !159
  %tobool2.not.i.i = icmp eq i8 %5, 0
  %or.cond.i = select i1 %tobool.not.i10.i, i1 true, i1 %tobool2.not.i.i
  br i1 %or.cond.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE10deallocateEv.exit.i, label %if.then3.i.i

if.then3.i.i:                                     ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody8RContactEE4copyEiiPS1_.exit.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %4)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE10deallocateEv.exit.i

_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE10deallocateEv.exit.i: ; preds = %if.then3.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody8RContactEE4copyEiiPS1_.exit.i
  store i8 1, ptr %m_ownsMemory.i.i, align 8, !tbaa !106
  store ptr %retval.0.i.i, ptr %m_data.i9.i, align 8, !tbaa !107
  store i32 %cond.i, ptr %m_capacity.i, align 8, !tbaa !109
  %.pre7 = load i32, ptr %m_size.i, align 4, !tbaa !108
  br label %if.end

if.end:                                           ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE10deallocateEv.exit.i, %if.then, %entry
  %6 = phi i32 [ %.pre7, %_ZN20btAlignedObjectArrayIN10btSoftBody8RContactEE10deallocateEv.exit.i ], [ %0, %if.then ], [ %0, %entry ]
  %m_data = getelementptr inbounds %class.btAlignedObjectArray.48, ptr %this, i64 0, i32 5
  %7 = load ptr, ptr %m_data, align 8, !tbaa !107
  %idxprom = sext i32 %6 to i64
  %arrayidx = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %idxprom
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(40) %arrayidx, ptr noundef nonnull align 8 dereferenceable(40) %_Val, i64 40, i1 false)
  %m_c0.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %idxprom, i32 2
  %m_c03.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %_Val, i64 0, i32 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_c0.i, ptr noundef nonnull align 8 dereferenceable(16) %m_c03.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx6.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %_Val, i64 0, i32 2, i32 0, i64 1
  %arrayidx8.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %idxprom, i32 2, i32 0, i64 1
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx8.i.i, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx6.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx10.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %_Val, i64 0, i32 2, i32 0, i64 2
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %idxprom, i32 2, i32 0, i64 2
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %arrayidx12.i.i, ptr noundef nonnull align 8 dereferenceable(16) %arrayidx10.i.i, i64 16, i1 false), !tbaa.struct !163
  %m_c1.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %7, i64 %idxprom, i32 3
  %m_c14.i = getelementptr inbounds %"struct.btSoftBody::RContact", ptr %_Val, i64 0, i32 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %m_c1.i, ptr noundef nonnull align 8 dereferenceable(28) %m_c14.i, i64 28, i1 false)
  %8 = load i32, ptr %m_size.i, align 4, !tbaa !108
  %inc = add nsw i32 %8, 1
  store i32 %inc, ptr %m_size.i, align 4, !tbaa !108
  ret void
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN15btSoftColliders12CollideCL_RSD0Ev(ptr noundef nonnull align 8 dereferenceable(48) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN15btSoftColliders12CollideCL_RS7ProcessEPK10btDbvtNode(ptr noundef nonnull align 8 dereferenceable(48) %this, ptr noundef %leaf) unnamed_addr #4 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %cshape = alloca %class.btSoftClusterCollisionShape, align 8
  %res = alloca %"struct.btGjkEpaSolver2::sResults", align 4
  %ref.tmp = alloca %class.btVector3, align 16
  %joint = alloca %"struct.btSoftBody::CJoint", align 8
  %agg.tmp = alloca %"struct.btSoftBody::Body", align 8
  %agg.tmp20 = alloca %"struct.btSoftBody::Body", align 8
  %0 = getelementptr inbounds %struct.btDbvtNode, ptr %leaf, i64 0, i32 2
  %1 = load ptr, ptr %0, align 8, !tbaa !164
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %cshape) #38
  call void @_ZN21btConvexInternalShapeC2Ev(ptr noundef nonnull align 8 dereferenceable(64) %cshape)
  store ptr getelementptr inbounds ({ [21 x ptr] }, ptr @_ZTV27btSoftClusterCollisionShape, i64 0, inrange i32 0, i64 2), ptr %cshape, align 8, !tbaa !5
  %m_cluster.i = getelementptr inbounds %class.btSoftClusterCollisionShape, ptr %cshape, i64 0, i32 1
  store ptr %1, ptr %m_cluster.i, align 8, !tbaa !601
  %m_collisionMargin.i.i.i = getelementptr inbounds %class.btConvexInternalShape, ptr %cshape, i64 0, i32 3
  store float 0.000000e+00, ptr %m_collisionMargin.i.i.i, align 8, !tbaa !605
  %m_colObj = getelementptr inbounds %"struct.btSoftColliders::CollideCL_RS", ptr %this, i64 0, i32 2
  %2 = load ptr, ptr %m_colObj, align 8, !tbaa !578
  %m_collisionShape.i = getelementptr inbounds %class.btCollisionObject, ptr %2, i64 0, i32 9
  %3 = load ptr, ptr %m_collisionShape.i, align 8, !tbaa !157
  %m_collisionFlags.i = getelementptr inbounds %class.btCollisionObject, ptr %2, i64 0, i32 11
  %4 = load i32, ptr %m_collisionFlags.i, align 8, !tbaa !600
  %and.i = and i32 %4, 3
  %cmp.i.not = icmp eq i32 %and.i, 0
  br i1 %cmp.i.not, label %if.end, label %land.lhs.true

land.lhs.true:                                    ; preds = %entry
  %m_containsAnchor = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 22
  %5 = load i8, ptr %m_containsAnchor, align 8, !tbaa !345, !range !159, !noundef !192
  %tobool.not = icmp eq i8 %5, 0
  br i1 %tobool.not, label %if.end, label %cleanup

if.end:                                           ; preds = %land.lhs.true, %entry
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %res) #38
  %6 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %6, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %invoke.cont4, !prof !173

init.check.i:                                     ; preds = %if.end
  %7 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i = icmp eq i32 %7, 0
  br i1 %tobool.not.i, label %invoke.cont4, label %init.i

init.i:                                           ; preds = %init.check.i
  %call.i = invoke noundef nonnull align 4 dereferenceable(48) ptr @_ZN11btMatrix3x311getIdentityEv()
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %init.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) %call.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx6.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %call.i, i64 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) %arrayidx6.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx10.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %call.i, i64 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) %arrayidx10.i.i.i, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %8 = call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont4

lpad.i:                                           ; preds = %init.i
  %9 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_guard_abort(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %ehcleanup57

invoke.cont4:                                     ; preds = %invoke.cont.i, %init.check.i, %if.end
  %10 = load ptr, ptr %m_colObj, align 8, !tbaa !578
  %m_interpolationWorldTransform.i = getelementptr inbounds %class.btCollisionObject, ptr %10, i64 0, i32 2
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #38
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, ptr %ref.tmp, align 16, !tbaa !137
  %call14 = invoke noundef zeroext i1 @_ZN15btGjkEpaSolver214SignedDistanceEPK13btConvexShapeRK11btTransformS2_S5_RK9btVector3RNS_8sResultsE(ptr noundef nonnull %cshape, ptr noundef nonnull align 4 dereferenceable(64) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef %3, ptr noundef nonnull align 4 dereferenceable(64) %m_interpolationWorldTransform.i, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp, ptr noundef nonnull align 4 dereferenceable(56) %res)
          to label %invoke.cont13 unwind label %lpad11

invoke.cont13:                                    ; preds = %invoke.cont4
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  br i1 %call14, label %if.then15, label %if.end56

if.then15:                                        ; preds = %invoke.cont13
  call void @llvm.lifetime.start.p0(i64 248, ptr nonnull %joint) #38
  %m_bodies.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %m_bodies.i.i, i8 0, i64 48, i1 false)
  %m_delete.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 9
  store i8 0, ptr %m_delete.i.i, align 4, !tbaa !484
  store ptr getelementptr inbounds ({ [8 x ptr] }, ptr @_ZTVN10btSoftBody6CJointE, i64 0, inrange i32 0, i64 2), ptr %joint, align 8, !tbaa !5
  store ptr %1, ptr %agg.tmp, align 8, !tbaa !272
  %m_rigid.i = getelementptr inbounds %"struct.btSoftBody::Body", ptr %agg.tmp, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rigid.i, i8 0, i64 16, i1 false)
  %11 = load ptr, ptr %m_colObj, align 8, !tbaa !578
  store ptr null, ptr %agg.tmp20, align 8, !tbaa !272
  %m_collisionObject.i = getelementptr inbounds %"struct.btSoftBody::Body", ptr %agg.tmp20, i64 0, i32 2
  store ptr %11, ptr %m_collisionObject.i, align 8, !tbaa !253
  %m_internalType.i.i.i = getelementptr inbounds %class.btCollisionObject, ptr %11, i64 0, i32 19
  %12 = load i32, ptr %m_internalType.i.i.i, align 8, !tbaa !134
  %cmp.i.i = icmp eq i32 %12, 2
  %colObj..i.i = select i1 %cmp.i.i, ptr %11, ptr null
  %m_rigid.i74 = getelementptr inbounds %"struct.btSoftBody::Body", ptr %agg.tmp20, i64 0, i32 1
  store ptr %colObj..i.i, ptr %m_rigid.i74, align 8, !tbaa !511
  %call24 = invoke noundef zeroext i1 @_ZN15btSoftColliders11ClusterBase12SolveContactERKN15btGjkEpaSolver28sResultsEN10btSoftBody4BodyES6_RNS5_6CJointE(ptr noundef nonnull align 8 dereferenceable(28) %this, ptr noundef nonnull align 4 dereferenceable(56) %res, ptr noundef nonnull byval(%"struct.btSoftBody::Body") align 8 %agg.tmp, ptr noundef nonnull byval(%"struct.btSoftBody::Body") align 8 %agg.tmp20, ptr noundef nonnull align 8 dereferenceable(244) %joint)
          to label %invoke.cont23 unwind label %lpad18

invoke.cont23:                                    ; preds = %if.then15
  br i1 %call24, label %if.then25, label %if.end51

if.then25:                                        ; preds = %invoke.cont23
  %call28 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 248, i32 noundef 16)
          to label %invoke.cont27 unwind label %lpad26

invoke.cont27:                                    ; preds = %if.then25
  %m_bodies.i.i75 = getelementptr %"struct.btSoftBody::Joint", ptr %call28, i64 0, i32 1
  %m_delete.i.i76 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call28, i64 0, i32 9
  %13 = getelementptr inbounds i8, ptr %call28, i64 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(240) %13, i8 0, i64 240, i1 false)
  store ptr getelementptr inbounds ({ [8 x ptr] }, ptr @_ZTVN10btSoftBody6CJointE, i64 0, inrange i32 0, i64 2), ptr %call28, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(124) %m_bodies.i.i75, ptr noundef nonnull align 8 dereferenceable(124) %m_bodies.i.i, i64 124, i1 false)
  %m_massmatrix.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call28, i64 0, i32 8
  %m_massmatrix3.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %m_massmatrix.i.i, ptr noundef nonnull align 4 dereferenceable(16) %m_massmatrix3.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx5.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 8, i32 0, i64 1
  %arrayidx7.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call28, i64 0, i32 8, i32 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx7.i.i.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx9.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 8, i32 0, i64 2
  %arrayidx11.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call28, i64 0, i32 8, i32 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx11.i.i.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx9.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %14 = load i8, ptr %m_delete.i.i, align 4, !tbaa !484, !range !159, !noundef !192
  store i8 %14, ptr %m_delete.i.i76, align 4, !tbaa !484
  %m_life.i = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %call28, i64 0, i32 1
  %m_life2.i = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(60) %m_life.i, ptr noundef nonnull align 8 dereferenceable(60) %m_life2.i, i64 60, i1 false)
  %psb = getelementptr inbounds %"struct.btSoftColliders::CollideCL_RS", ptr %this, i64 0, i32 1
  %15 = load ptr, ptr %psb, align 8, !tbaa !576
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %15, i64 0, i32 16, i32 2
  %16 = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %15, i64 0, i32 16, i32 3
  %17 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !117
  %cmp.i79 = icmp eq i32 %16, %17
  br i1 %cmp.i79, label %if.then.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit

if.then.i:                                        ; preds = %invoke.cont27
  %tobool.not.i.i = icmp eq i32 %16, 0
  %mul.i.i = shl nsw i32 %16, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i80 = icmp slt i32 %16, %cond.i.i
  br i1 %cmp.i.i80, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 3
  %call.i.i.i.i81 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
          to label %call.i.i.i.i.noexc unwind label %lpad33

call.i.i.i.i.noexc:                               ; preds = %if.then.i.i.i
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i: ; preds = %call.i.i.i.i.noexc, %if.then.i.i
  %18 = phi i32 [ %.pre.i, %call.i.i.i.i.noexc ], [ %16, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i81, %call.i.i.i.i.noexc ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %18, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %15, i64 0, i32 16, i32 5
  %wide.trip.count.i.i.i = zext i32 %18 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 3
  %19 = icmp ult i32 %18, 4
  br i1 %19, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967292
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.3, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %20 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i = getelementptr inbounds ptr, ptr %20, i64 %indvars.iv.i.i.i
  %21 = load ptr, ptr %arrayidx3.i.i.i, align 8, !tbaa !219
  store ptr %21, ptr %arrayidx.i.i.i, align 8, !tbaa !219
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %22 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.1 = getelementptr inbounds ptr, ptr %22, i64 %indvars.iv.next.i.i.i
  %23 = load ptr, ptr %arrayidx3.i.i.i.1, align 8, !tbaa !219
  store ptr %23, ptr %arrayidx.i.i.i.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.1 = or i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %24 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.2 = getelementptr inbounds ptr, ptr %24, i64 %indvars.iv.next.i.i.i.1
  %25 = load ptr, ptr %arrayidx3.i.i.i.2, align 8, !tbaa !219
  store ptr %25, ptr %arrayidx.i.i.i.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.2 = or i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %26 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.3 = getelementptr inbounds ptr, ptr %26, i64 %indvars.iv.next.i.i.i.2
  %27 = load ptr, ptr %arrayidx3.i.i.i.3, align 8, !tbaa !219
  store ptr %27, ptr %arrayidx.i.i.i.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil
  %indvars.iv.i.i.i.epil = phi i64 [ %indvars.iv.next.i.i.i.epil, %for.body.i.i.i.epil ], [ %indvars.iv.i.i.i.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.i.i.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %arrayidx.i.i.i.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.epil
  %28 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.epil = getelementptr inbounds ptr, ptr %28, i64 %indvars.iv.i.i.i.epil
  %29 = load ptr, ptr %arrayidx3.i.i.i.epil, align 8, !tbaa !219
  store ptr %29, ptr %arrayidx.i.i.i.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.epil = add nuw nsw i64 %indvars.iv.i.i.i.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil, !llvm.loop !606

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %15, i64 0, i32 16, i32 5
  %30 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !115
  %tobool.not.i10.i.i = icmp eq ptr %30, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %15, i64 0, i32 16, i32 6
  %31 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %31, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %30)
          to label %.noexc unwind label %lpad33

.noexc:                                           ; preds = %if.then3.i.i.i
  %.pre7.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i: ; preds = %.noexc, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i
  %.pre7.i = phi i32 [ %.pre7.pre.i, %.noexc ], [ %18, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i ]
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !114
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !115
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !117
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit: ; preds = %invoke.cont27, %if.then.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i
  %32 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i ], [ %16, %if.then.i ], [ %16, %invoke.cont27 ]
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %15, i64 0, i32 16, i32 5
  %33 = load ptr, ptr %m_data.i, align 8, !tbaa !115
  %idxprom.i = sext i32 %32 to i64
  %arrayidx.i = getelementptr inbounds ptr, ptr %33, i64 %idxprom.i
  store ptr %call28, ptr %arrayidx.i, align 8, !tbaa !219
  %inc.i = add nsw i32 %32, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !116
  %34 = load ptr, ptr %m_colObj, align 8, !tbaa !578
  %m_collisionFlags.i82 = getelementptr inbounds %class.btCollisionObject, ptr %34, i64 0, i32 11
  %35 = load i32, ptr %m_collisionFlags.i82, align 8, !tbaa !600
  %and.i83 = and i32 %35, 3
  %cmp.i84.not = icmp eq i32 %and.i83, 0
  %36 = load ptr, ptr %psb, align 8, !tbaa !576
  %m_erp44 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call28, i64 0, i32 4
  %37 = load float, ptr %m_erp44, align 4, !tbaa !535
  %m_split48 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call28, i64 0, i32 5
  br i1 %cmp.i84.not, label %if.else, label %if.then37

if.then37:                                        ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit
  %kSKHR_CL = getelementptr inbounds %class.btSoftBody, ptr %36, i64 0, i32 2, i32 14
  %38 = load float, ptr %kSKHR_CL, align 8, !tbaa !607
  %mul = fmul float %38, %37
  store float %mul, ptr %m_erp44, align 4, !tbaa !535
  %kSK_SPLT_CL = getelementptr inbounds %class.btSoftBody, ptr %36, i64 0, i32 2, i32 17
  br label %if.end51.sink.split

lpad11:                                           ; preds = %invoke.cont4
  %39 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  br label %ehcleanup57

lpad18:                                           ; preds = %if.then15
  %40 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup55

lpad26:                                           ; preds = %if.then25
  %41 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup55

lpad33:                                           ; preds = %if.then3.i.i.i, %if.then.i.i.i
  %42 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup55

if.else:                                          ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit
  %kSRHR_CL = getelementptr inbounds %class.btSoftBody, ptr %36, i64 0, i32 2, i32 13
  %43 = load float, ptr %kSRHR_CL, align 4, !tbaa !608
  %mul45 = fmul float %43, %37
  store float %mul45, ptr %m_erp44, align 4, !tbaa !535
  %kSR_SPLT_CL = getelementptr inbounds %class.btSoftBody, ptr %36, i64 0, i32 2, i32 16
  br label %if.end51.sink.split

if.end51.sink.split:                              ; preds = %if.else, %if.then37
  %.sink.in = phi ptr [ %kSK_SPLT_CL, %if.then37 ], [ %kSR_SPLT_CL, %if.else ]
  %.sink = load float, ptr %.sink.in, align 4, !tbaa !137
  %44 = load float, ptr %m_split48, align 8, !tbaa !269
  %mul41 = fmul float %.sink, %44
  store float %mul41, ptr %m_split48, align 8, !tbaa !269
  br label %if.end51

if.end51:                                         ; preds = %if.end51.sink.split, %invoke.cont23
  call void @llvm.lifetime.end.p0(i64 248, ptr nonnull %joint) #38
  br label %if.end56

ehcleanup55:                                      ; preds = %lpad18, %lpad33, %lpad26
  %.pn.pn = phi { ptr, i32 } [ %40, %lpad18 ], [ %42, %lpad33 ], [ %41, %lpad26 ]
  call void @llvm.lifetime.end.p0(i64 248, ptr nonnull %joint) #38
  br label %ehcleanup57

if.end56:                                         ; preds = %if.end51, %invoke.cont13
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %res) #38
  br label %cleanup

cleanup:                                          ; preds = %land.lhs.true, %if.end56
  call void @_ZN13btConvexShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %cshape)
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %cshape) #38
  ret void

ehcleanup57:                                      ; preds = %ehcleanup55, %lpad11, %lpad.i
  %.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn, %ehcleanup55 ], [ %39, %lpad11 ], [ %9, %lpad.i ]
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %res) #38
  invoke void @_ZN13btConvexShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %cshape)
          to label %invoke.cont61 unwind label %terminate.lpad

invoke.cont61:                                    ; preds = %ehcleanup57
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %cshape) #38
  resume { ptr, i32 } %.pn.pn.pn

terminate.lpad:                                   ; preds = %ehcleanup57
  %45 = landingpad { ptr, i32 }
          catch ptr null
  %46 = extractvalue { ptr, i32 } %45, 0
  call void @__clang_call_terminate(ptr %46) #39
  unreachable
}

declare noundef zeroext i1 @_ZN15btGjkEpaSolver214SignedDistanceEPK13btConvexShapeRK11btTransformS2_S5_RK9btVector3RNS_8sResultsE(ptr noundef, ptr noundef nonnull align 4 dereferenceable(64), ptr noundef, ptr noundef nonnull align 4 dereferenceable(64), ptr noundef nonnull align 4 dereferenceable(16), ptr noundef nonnull align 4 dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: uwtable
define linkonce_odr dso_local noundef zeroext i1 @_ZN15btSoftColliders11ClusterBase12SolveContactERKN15btGjkEpaSolver28sResultsEN10btSoftBody4BodyES6_RNS5_6CJointE(ptr noundef nonnull align 8 dereferenceable(28) %this, ptr noundef nonnull align 4 dereferenceable(56) %res, ptr noundef byval(%"struct.btSoftBody::Body") align 8 %ba, ptr noundef byval(%"struct.btSoftBody::Body") align 8 %bb, ptr noundef nonnull align 8 dereferenceable(244) %joint) local_unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %ref.tmp48 = alloca %class.btMatrix3x3, align 4
  %distance = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 3
  %0 = load float, ptr %distance, align 4, !tbaa !609
  %m_margin = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %this, i64 0, i32 3
  %1 = load float, ptr %m_margin, align 8, !tbaa !580
  %cmp = fcmp olt float %0, %1
  br i1 %cmp, label %if.then, label %return

if.then:                                          ; preds = %entry
  %normal = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 2
  %2 = load <2 x float>, ptr %normal, align 4
  %norm.sroa.14.0.normal.sroa_idx = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 2, i32 0, i64 2
  %norm.sroa.14.0.copyload = load float, ptr %norm.sroa.14.0.normal.sroa_idx, align 4, !tbaa.struct !165
  %norm.sroa.19.0.normal.sroa_idx = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 2, i32 0, i64 3
  %norm.sroa.19.0.copyload = load float, ptr %norm.sroa.19.0.normal.sroa_idx, align 4, !tbaa.struct !318
  %3 = fmul <2 x float> %2, %2
  %mul8.i.i.i.i = extractelement <2 x float> %3, i64 1
  %4 = extractelement <2 x float> %2, i64 0
  %5 = tail call float @llvm.fmuladd.f32(float %4, float %4, float %mul8.i.i.i.i)
  %6 = tail call float @llvm.fmuladd.f32(float %norm.sroa.14.0.copyload, float %norm.sroa.14.0.copyload, float %5)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %6)
  %div.i.i = fdiv float 1.000000e+00, %sqrt.i.i
  %7 = insertelement <2 x float> poison, float %div.i.i, i64 0
  %8 = shufflevector <2 x float> %7, <2 x float> poison, <2 x i32> zeroinitializer
  %9 = fmul <2 x float> %2, %8
  %mul7.i.i.i = fmul float %norm.sroa.14.0.copyload, %div.i.i
  %witnesses = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 1
  %10 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %10, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %_ZNK10btSoftBody4Body5xformEv.exit, !prof !173

init.check.i:                                     ; preds = %if.then
  %11 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i = icmp eq i32 %11, 0
  br i1 %tobool.not.i, label %_ZNK10btSoftBody4Body5xformEv.exit, label %init.i

init.i:                                           ; preds = %init.check.i
  %12 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i298 = icmp eq i8 %12, 0
  br i1 %guard.uninitialized.i298, label %init.check.i300, label %invoke.cont.i, !prof !173

init.check.i300:                                  ; preds = %init.i
  %13 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i299 = icmp eq i32 %13, 0
  br i1 %tobool.not.i299, label %invoke.cont.i, label %init.i302

init.i302:                                        ; preds = %init.check.i300
  %14 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i339 = icmp eq i8 %14, 0
  br i1 %guard.uninitialized.i339, label %init.check.i341, label %invoke.cont.i305, !prof !173

init.check.i341:                                  ; preds = %init.i302
  %15 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i340 = icmp eq i32 %15, 0
  br i1 %tobool.not.i340, label %invoke.cont.i305, label %init.i342

init.i342:                                        ; preds = %init.check.i341
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %16 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont.i305

invoke.cont.i305:                                 ; preds = %init.i342, %init.check.i341, %init.i302
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %17 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont.i

invoke.cont.i:                                    ; preds = %invoke.cont.i305, %init.check.i300, %init.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %18 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit

_ZNK10btSoftBody4Body5xformEv.exit:               ; preds = %if.then, %init.check.i, %invoke.cont.i
  %m_collisionObject.i = getelementptr inbounds %"struct.btSoftBody::Body", ptr %ba, i64 0, i32 2
  %19 = load ptr, ptr %m_collisionObject.i, align 8, !tbaa !253
  %tobool3.not.i = icmp eq ptr %19, null
  %m_interpolationWorldTransform.i.i = getelementptr inbounds %class.btCollisionObject, ptr %19, i64 0, i32 2
  %20 = load ptr, ptr %ba, align 8
  %tobool6.not.i = icmp eq ptr %20, null
  %m_framexform.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %20, i64 0, i32 3
  %spec.select.i = select i1 %tobool6.not.i, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i
  %retval.0.i = select i1 %tobool3.not.i, ptr %spec.select.i, ptr %m_interpolationWorldTransform.i.i
  %m_origin.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i, i64 0, i32 1
  %arrayidx5.i = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 1, i64 0, i32 0, i64 1
  %21 = load float, ptr %arrayidx5.i, align 4, !tbaa !137
  %arrayidx7.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i, i64 0, i32 1, i32 0, i64 1
  %22 = load float, ptr %arrayidx7.i, align 4, !tbaa !137
  %sub8.i = fsub float %21, %22
  %arrayidx11.i = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 1, i64 0, i32 0, i64 2
  %arrayidx13.i = getelementptr inbounds %class.btTransform, ptr %retval.0.i, i64 0, i32 1, i32 0, i64 2
  %23 = load float, ptr %witnesses, align 4, !tbaa !137
  %24 = load float, ptr %m_origin.i, align 4, !tbaa !137
  %25 = load <4 x float>, ptr %arrayidx11.i, align 4
  %26 = shufflevector <4 x float> %25, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %27 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %28 = insertelement <2 x float> %26, float %23, i64 1
  %29 = insertelement <2 x float> poison, float %27, i64 0
  %30 = insertelement <2 x float> %29, float %24, i64 1
  %31 = fsub <2 x float> %28, %30
  %32 = shufflevector <2 x float> %31, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %retval.sroa.0.4.vec.insert.i = insertelement <2 x float> %32, float %sub8.i, i64 1
  %33 = insertelement <2 x float> %31, float 0.000000e+00, i64 1
  %arrayidx6 = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 1, i64 1
  %34 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i79 = icmp eq i8 %34, 0
  br i1 %guard.uninitialized.i79, label %init.check.i81, label %_ZNK10btSoftBody4Body5xformEv.exit96, !prof !173

init.check.i81:                                   ; preds = %_ZNK10btSoftBody4Body5xformEv.exit
  %35 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i80 = icmp eq i32 %35, 0
  br i1 %tobool.not.i80, label %_ZNK10btSoftBody4Body5xformEv.exit96, label %init.i83

init.i83:                                         ; preds = %init.check.i81
  %36 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i307 = icmp eq i8 %36, 0
  br i1 %guard.uninitialized.i307, label %init.check.i309, label %invoke.cont.i87, !prof !173

init.check.i309:                                  ; preds = %init.i83
  %37 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i308 = icmp eq i32 %37, 0
  br i1 %tobool.not.i308, label %invoke.cont.i87, label %init.i310

init.i310:                                        ; preds = %init.check.i309
  %38 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i343 = icmp eq i8 %38, 0
  br i1 %guard.uninitialized.i343, label %init.check.i345, label %invoke.cont.i313, !prof !173

init.check.i345:                                  ; preds = %init.i310
  %39 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i344 = icmp eq i32 %39, 0
  br i1 %tobool.not.i344, label %invoke.cont.i313, label %init.i346

init.i346:                                        ; preds = %init.check.i345
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %40 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont.i313

invoke.cont.i313:                                 ; preds = %init.i346, %init.check.i345, %init.i310
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %41 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont.i87

invoke.cont.i87:                                  ; preds = %invoke.cont.i313, %init.check.i309, %init.i83
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %42 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit96

_ZNK10btSoftBody4Body5xformEv.exit96:             ; preds = %_ZNK10btSoftBody4Body5xformEv.exit, %init.check.i81, %invoke.cont.i87
  %m_collisionObject.i88 = getelementptr inbounds %"struct.btSoftBody::Body", ptr %bb, i64 0, i32 2
  %43 = load ptr, ptr %m_collisionObject.i88, align 8, !tbaa !253
  %tobool3.not.i89 = icmp eq ptr %43, null
  %m_interpolationWorldTransform.i.i90 = getelementptr inbounds %class.btCollisionObject, ptr %43, i64 0, i32 2
  %44 = load ptr, ptr %bb, align 8
  %tobool6.not.i91 = icmp eq ptr %44, null
  %m_framexform.i92 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %44, i64 0, i32 3
  %spec.select.i93 = select i1 %tobool6.not.i91, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i92
  %retval.0.i94 = select i1 %tobool3.not.i89, ptr %spec.select.i93, ptr %m_interpolationWorldTransform.i.i90
  %m_origin.i97 = getelementptr inbounds %class.btTransform, ptr %retval.0.i94, i64 0, i32 1
  %arrayidx5.i99 = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 1, i64 1, i32 0, i64 1
  %45 = load float, ptr %arrayidx5.i99, align 4, !tbaa !137
  %arrayidx7.i100 = getelementptr inbounds %class.btTransform, ptr %retval.0.i94, i64 0, i32 1, i32 0, i64 1
  %46 = load float, ptr %arrayidx7.i100, align 4, !tbaa !137
  %sub8.i101 = fsub float %45, %46
  %arrayidx11.i102 = getelementptr inbounds %"struct.btGjkEpaSolver2::sResults", ptr %res, i64 0, i32 1, i64 1, i32 0, i64 2
  %arrayidx13.i103 = getelementptr inbounds %class.btTransform, ptr %retval.0.i94, i64 0, i32 1, i32 0, i64 2
  %47 = load float, ptr %arrayidx6, align 4, !tbaa !137
  %48 = load float, ptr %m_origin.i97, align 4, !tbaa !137
  %49 = load <4 x float>, ptr %arrayidx11.i102, align 4
  %50 = shufflevector <4 x float> %49, <4 x float> poison, <2 x i32> <i32 0, i32 poison>
  %51 = load float, ptr %arrayidx13.i103, align 4, !tbaa !137
  %52 = insertelement <2 x float> %50, float %47, i64 1
  %53 = insertelement <2 x float> poison, float %51, i64 0
  %54 = insertelement <2 x float> %53, float %48, i64 1
  %55 = fsub <2 x float> %52, %54
  %56 = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %retval.sroa.0.4.vec.insert.i106 = insertelement <2 x float> %56, float %sub8.i101, i64 1
  %57 = insertelement <2 x float> %55, float 0.000000e+00, i64 1
  %m_rigid.i.i = getelementptr inbounds %"struct.btSoftBody::Body", ptr %ba, i64 0, i32 1
  %58 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool.not.i.i = icmp eq ptr %58, null
  br i1 %tobool.not.i.i, label %if.end.i.i, label %if.then.i10.i

if.end.i.i:                                       ; preds = %_ZNK10btSoftBody4Body5xformEv.exit96
  %59 = load ptr, ptr %ba, align 8, !tbaa !272
  %tobool3.not.i.i = icmp eq ptr %59, null
  br i1 %tobool3.not.i.i, label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit, label %if.then5.i.i

if.then.i10.i:                                    ; preds = %_ZNK10btSoftBody4Body5xformEv.exit96
  %m_linearVelocity.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %58, i64 0, i32 2
  %retval.sroa.0.0.copyload.i.i = load <2 x float>, ptr %m_linearVelocity.i.i.i, align 4, !tbaa.struct !163
  %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i = getelementptr inbounds %class.btRigidBody, ptr %58, i64 0, i32 2, i32 0, i64 2
  %retval.sroa.5.0.copyload.i.i = load <2 x float>, ptr %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i, align 4, !tbaa.struct !165
  %m_angularVelocity.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %58, i64 0, i32 3
  %arrayidx.i.i.i.i = getelementptr inbounds %class.btRigidBody, ptr %58, i64 0, i32 3, i32 0, i64 1
  %60 = load float, ptr %m_angularVelocity.i.i.i, align 4, !tbaa !137
  %61 = load <2 x float>, ptr %arrayidx.i.i.i.i, align 4, !tbaa !137
  %62 = insertelement <2 x float> %61, float %60, i64 0
  %63 = fneg <2 x float> %62
  %64 = insertelement <2 x float> %31, float %sub8.i, i64 1
  %65 = fmul <2 x float> %64, %63
  %66 = shufflevector <2 x float> %65, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %67 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %61, <2 x float> %31, <2 x float> %66)
  %68 = extractelement <2 x float> %61, i64 0
  %69 = fneg float %68
  %70 = extractelement <2 x float> %31, i64 1
  %neg30.i.i.i.i = fmul float %70, %69
  %71 = tail call float @llvm.fmuladd.f32(float %60, float %sub8.i, float %neg30.i.i.i.i)
  %retval.sroa.3.12.vec.insert.i.i.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %71, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit

if.then5.i.i:                                     ; preds = %if.end.i.i
  %retval.sroa.5.0.m_lv.sroa_idx.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %59, i64 0, i32 13, i32 0, i64 2
  %retval.sroa.5.0.copyload12.i.i = load <2 x float>, ptr %retval.sroa.5.0.m_lv.sroa_idx.i.i, align 8, !tbaa.struct !165
  %m_lv.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %59, i64 0, i32 13
  %retval.sroa.0.0.copyload11.i.i = load <2 x float>, ptr %m_lv.i.i, align 8, !tbaa.struct !163
  %m_av.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %59, i64 0, i32 14
  %arrayidx.i.i15.i.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %59, i64 0, i32 14, i32 0, i64 1
  %72 = load float, ptr %m_av.i.i, align 4, !tbaa !137
  %73 = load <2 x float>, ptr %arrayidx.i.i15.i.i, align 4, !tbaa !137
  %74 = insertelement <2 x float> %73, float %72, i64 0
  %75 = fneg <2 x float> %74
  %76 = insertelement <2 x float> %31, float %sub8.i, i64 1
  %77 = fmul <2 x float> %76, %75
  %78 = shufflevector <2 x float> %77, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %79 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %73, <2 x float> %31, <2 x float> %78)
  %80 = extractelement <2 x float> %73, i64 0
  %81 = fneg float %80
  %82 = extractelement <2 x float> %31, i64 1
  %neg30.i.i21.i.i = fmul float %82, %81
  %83 = tail call float @llvm.fmuladd.f32(float %72, float %sub8.i, float %neg30.i.i21.i.i)
  %retval.sroa.3.12.vec.insert.i.i24.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %83, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit

_ZNK10btSoftBody4Body8velocityERK9btVector3.exit: ; preds = %if.end.i.i, %if.then.i10.i, %if.then5.i.i
  %retval.sroa.5.0.i22.i = phi <2 x float> [ %retval.sroa.5.0.copyload.i.i, %if.then.i10.i ], [ %retval.sroa.5.0.copyload12.i.i, %if.then5.i.i ], [ zeroinitializer, %if.end.i.i ]
  %retval.sroa.0.0.i20.i = phi <2 x float> [ %retval.sroa.0.0.copyload.i.i, %if.then.i10.i ], [ %retval.sroa.0.0.copyload11.i.i, %if.then5.i.i ], [ zeroinitializer, %if.end.i.i ]
  %retval.sroa.0.0.i12.i = phi <2 x float> [ %67, %if.then.i10.i ], [ %79, %if.then5.i.i ], [ zeroinitializer, %if.end.i.i ]
  %retval.sroa.5.0.i13.i = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i.i.i.i, %if.then.i10.i ], [ %retval.sroa.3.12.vec.insert.i.i24.i.i, %if.then5.i.i ], [ zeroinitializer, %if.end.i.i ]
  %84 = fadd <2 x float> %retval.sroa.0.0.i20.i, %retval.sroa.0.0.i12.i
  %85 = fadd <2 x float> %retval.sroa.0.0.i20.i, %retval.sroa.0.0.i12.i
  %86 = fadd <2 x float> %retval.sroa.5.0.i22.i, %retval.sroa.5.0.i13.i
  %m_rigid.i.i111 = getelementptr inbounds %"struct.btSoftBody::Body", ptr %bb, i64 0, i32 1
  %87 = load ptr, ptr %m_rigid.i.i111, align 8, !tbaa !511
  %tobool.not.i.i112 = icmp eq ptr %87, null
  br i1 %tobool.not.i.i112, label %if.end.i.i114, label %if.then.i10.i130

if.end.i.i114:                                    ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit
  br i1 %tobool6.not.i91, label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit165, label %if.then5.i.i146

if.then.i10.i130:                                 ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit
  %m_linearVelocity.i.i.i115 = getelementptr inbounds %class.btRigidBody, ptr %87, i64 0, i32 2
  %retval.sroa.0.0.copyload.i.i116 = load <2 x float>, ptr %m_linearVelocity.i.i.i115, align 4, !tbaa.struct !163
  %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i117 = getelementptr inbounds %class.btRigidBody, ptr %87, i64 0, i32 2, i32 0, i64 2
  %retval.sroa.5.0.copyload.i.i118 = load <2 x float>, ptr %retval.sroa.5.0.m_linearVelocity.i.sroa_idx.i.i117, align 4, !tbaa.struct !165
  %m_angularVelocity.i.i.i119 = getelementptr inbounds %class.btRigidBody, ptr %87, i64 0, i32 3
  %arrayidx.i.i.i.i120 = getelementptr inbounds %class.btRigidBody, ptr %87, i64 0, i32 3, i32 0, i64 1
  %88 = load float, ptr %m_angularVelocity.i.i.i119, align 4, !tbaa !137
  %89 = load <2 x float>, ptr %arrayidx.i.i.i.i120, align 4, !tbaa !137
  %90 = insertelement <2 x float> %89, float %88, i64 0
  %91 = fneg <2 x float> %90
  %92 = insertelement <2 x float> %55, float %sub8.i101, i64 1
  %93 = fmul <2 x float> %92, %91
  %94 = shufflevector <2 x float> %93, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %95 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %89, <2 x float> %55, <2 x float> %94)
  %96 = extractelement <2 x float> %89, i64 0
  %97 = fneg float %96
  %98 = extractelement <2 x float> %55, i64 1
  %neg30.i.i.i.i126 = fmul float %98, %97
  %99 = tail call float @llvm.fmuladd.f32(float %88, float %sub8.i101, float %neg30.i.i.i.i126)
  %retval.sroa.3.12.vec.insert.i.i.i.i129 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %99, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit165

if.then5.i.i146:                                  ; preds = %if.end.i.i114
  %retval.sroa.5.0.m_lv.sroa_idx.i.i131 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %44, i64 0, i32 13, i32 0, i64 2
  %retval.sroa.5.0.copyload12.i.i132 = load <2 x float>, ptr %retval.sroa.5.0.m_lv.sroa_idx.i.i131, align 8, !tbaa.struct !165
  %m_lv.i.i133 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %44, i64 0, i32 13
  %retval.sroa.0.0.copyload11.i.i134 = load <2 x float>, ptr %m_lv.i.i133, align 8, !tbaa.struct !163
  %m_av.i.i135 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %44, i64 0, i32 14
  %arrayidx.i.i15.i.i136 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %44, i64 0, i32 14, i32 0, i64 1
  %100 = load float, ptr %m_av.i.i135, align 4, !tbaa !137
  %101 = load <2 x float>, ptr %arrayidx.i.i15.i.i136, align 4, !tbaa !137
  %102 = insertelement <2 x float> %101, float %100, i64 0
  %103 = fneg <2 x float> %102
  %104 = insertelement <2 x float> %55, float %sub8.i101, i64 1
  %105 = fmul <2 x float> %104, %103
  %106 = shufflevector <2 x float> %105, <2 x float> poison, <2 x i32> <i32 1, i32 0>
  %107 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %101, <2 x float> %55, <2 x float> %106)
  %108 = extractelement <2 x float> %101, i64 0
  %109 = fneg float %108
  %110 = extractelement <2 x float> %55, i64 1
  %neg30.i.i21.i.i142 = fmul float %110, %109
  %111 = tail call float @llvm.fmuladd.f32(float %100, float %sub8.i101, float %neg30.i.i21.i.i142)
  %retval.sroa.3.12.vec.insert.i.i24.i.i145 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %111, i64 0
  br label %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit165

_ZNK10btSoftBody4Body8velocityERK9btVector3.exit165: ; preds = %if.end.i.i114, %if.then.i10.i130, %if.then5.i.i146
  %retval.sroa.5.0.i22.i147 = phi <2 x float> [ %retval.sroa.5.0.copyload.i.i118, %if.then.i10.i130 ], [ %retval.sroa.5.0.copyload12.i.i132, %if.then5.i.i146 ], [ zeroinitializer, %if.end.i.i114 ]
  %retval.sroa.0.0.i20.i148 = phi <2 x float> [ %retval.sroa.0.0.copyload.i.i116, %if.then.i10.i130 ], [ %retval.sroa.0.0.copyload11.i.i134, %if.then5.i.i146 ], [ zeroinitializer, %if.end.i.i114 ]
  %retval.sroa.0.0.i12.i149 = phi <2 x float> [ %95, %if.then.i10.i130 ], [ %107, %if.then5.i.i146 ], [ zeroinitializer, %if.end.i.i114 ]
  %retval.sroa.5.0.i13.i150 = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i.i.i.i129, %if.then.i10.i130 ], [ %retval.sroa.3.12.vec.insert.i.i24.i.i145, %if.then5.i.i146 ], [ zeroinitializer, %if.end.i.i114 ]
  %112 = fadd <2 x float> %retval.sroa.0.0.i20.i148, %retval.sroa.0.0.i12.i149
  %113 = fadd <2 x float> %retval.sroa.0.0.i20.i148, %retval.sroa.0.0.i12.i149
  %114 = fadd <2 x float> %retval.sroa.5.0.i22.i147, %retval.sroa.5.0.i13.i150
  %115 = fsub <2 x float> %84, %112
  %sub.i166 = extractelement <2 x float> %115, i64 0
  %116 = fsub <2 x float> %85, %113
  %sub8.i169 = extractelement <2 x float> %116, i64 1
  %117 = fsub <2 x float> %86, %114
  %sub14.i172 = extractelement <2 x float> %117, i64 0
  %118 = extractelement <2 x float> %9, i64 1
  %mul8.i.i = fmul float %118, %sub8.i169
  %119 = extractelement <2 x float> %9, i64 0
  %120 = tail call float @llvm.fmuladd.f32(float %sub.i166, float %119, float %mul8.i.i)
  %121 = tail call float @llvm.fmuladd.f32(float %sub14.i172, float %mul7.i.i.i, float %120)
  %122 = load float, ptr %distance, align 4, !tbaa !609
  %123 = load float, ptr %m_margin, align 8, !tbaa !580
  %sub = fsub float %122, %123
  %mul.i = fmul float %119, %121
  %mul4.i = fmul float %118, %121
  %mul8.i = fmul float %mul7.i.i.i, %121
  %sub.i184 = fsub float %sub.i166, %mul.i
  %sub8.i187 = fsub float %sub8.i169, %mul4.i
  %sub14.i190 = fsub float %sub14.i172, %mul8.i
  %m_bodies = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %m_bodies, ptr noundef nonnull align 8 dereferenceable(24) %ba, i64 24, i1 false), !tbaa.struct !252
  %arrayidx26 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 1, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %arrayidx26, ptr noundef nonnull align 8 dereferenceable(24) %bb, i64 24, i1 false), !tbaa.struct !252
  %124 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i196 = icmp eq i8 %124, 0
  br i1 %guard.uninitialized.i196, label %init.check.i198, label %_ZNK10btSoftBody4Body5xformEv.exit213, !prof !173

init.check.i198:                                  ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit165
  %125 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i197 = icmp eq i32 %125, 0
  br i1 %tobool.not.i197, label %_ZNK10btSoftBody4Body5xformEv.exit213, label %init.i200

init.i200:                                        ; preds = %init.check.i198
  %126 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i317 = icmp eq i8 %126, 0
  br i1 %guard.uninitialized.i317, label %init.check.i319, label %invoke.cont.i204, !prof !173

init.check.i319:                                  ; preds = %init.i200
  %127 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i318 = icmp eq i32 %127, 0
  br i1 %tobool.not.i318, label %invoke.cont.i204, label %init.i321

init.i321:                                        ; preds = %init.check.i319
  %128 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i348 = icmp eq i8 %128, 0
  br i1 %guard.uninitialized.i348, label %init.check.i350, label %invoke.cont.i324, !prof !173

init.check.i350:                                  ; preds = %init.i321
  %129 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i349 = icmp eq i32 %129, 0
  br i1 %tobool.not.i349, label %invoke.cont.i324, label %init.i351

init.i351:                                        ; preds = %init.check.i350
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %130 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont.i324

invoke.cont.i324:                                 ; preds = %init.i351, %init.check.i350, %init.i321
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %131 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont.i204

invoke.cont.i204:                                 ; preds = %invoke.cont.i324, %init.check.i319, %init.i200
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %132 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit213

_ZNK10btSoftBody4Body5xformEv.exit213:            ; preds = %_ZNK10btSoftBody4Body8velocityERK9btVector3.exit165, %init.check.i198, %invoke.cont.i204
  %133 = load ptr, ptr %m_collisionObject.i, align 8, !tbaa !253
  %tobool3.not.i206 = icmp eq ptr %133, null
  %m_interpolationWorldTransform.i.i207 = getelementptr inbounds %class.btCollisionObject, ptr %133, i64 0, i32 2
  %134 = load ptr, ptr %ba, align 8
  %tobool6.not.i208 = icmp eq ptr %134, null
  %m_framexform.i209 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %134, i64 0, i32 3
  %spec.select.i210 = select i1 %tobool6.not.i208, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i209
  %retval.0.i211 = select i1 %tobool3.not.i206, ptr %spec.select.i210, ptr %m_interpolationWorldTransform.i.i207
  %arrayidx4.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i211, i64 0, i64 1
  %arrayidx9.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i211, i64 0, i64 2
  %135 = load <2 x float>, ptr %retval.0.i211, align 4, !tbaa !137
  %136 = load <2 x float>, ptr %arrayidx4.i.i, align 4, !tbaa !137
  %137 = insertelement <2 x float> poison, float %sub8.i, i64 0
  %138 = shufflevector <2 x float> %137, <2 x float> poison, <2 x i32> zeroinitializer
  %139 = fmul <2 x float> %138, %136
  %140 = shufflevector <2 x float> %31, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %141 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %135, <2 x float> %140, <2 x float> %139)
  %142 = load <2 x float>, ptr %arrayidx9.i.i, align 4, !tbaa !137
  %143 = shufflevector <2 x float> %31, <2 x float> poison, <2 x i32> zeroinitializer
  %144 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %142, <2 x float> %143, <2 x float> %141)
  %arrayidx.i.i12.i = getelementptr inbounds [4 x float], ptr %retval.0.i211, i64 0, i64 2
  %145 = load float, ptr %arrayidx.i.i12.i, align 4, !tbaa !137
  %arrayidx.i14.i13.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i211, i64 0, i64 1, i32 0, i64 2
  %146 = load float, ptr %arrayidx.i14.i13.i, align 4, !tbaa !137
  %mul7.i15.i = fmul float %sub8.i, %146
  %147 = extractelement <2 x float> %31, i64 1
  %148 = tail call float @llvm.fmuladd.f32(float %145, float %147, float %mul7.i15.i)
  %arrayidx.i16.i16.i = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i211, i64 0, i64 2, i32 0, i64 2
  %149 = load float, ptr %arrayidx.i16.i16.i, align 4, !tbaa !137
  %150 = extractelement <2 x float> %31, i64 0
  %151 = tail call float @llvm.fmuladd.f32(float %149, float %150, float %148)
  %retval.sroa.3.12.vec.insert.i216 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %151, i64 0
  %m_refs = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 2
  store <2 x float> %144, ptr %m_refs, align 8, !tbaa.struct !163
  %ref.tmp.sroa.4.0.arrayidx31.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 2, i64 0, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i216, ptr %ref.tmp.sroa.4.0.arrayidx31.sroa_idx, align 8, !tbaa.struct !165
  %152 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body5xformEvE8identity acquire, align 8
  %guard.uninitialized.i219 = icmp eq i8 %152, 0
  br i1 %guard.uninitialized.i219, label %init.check.i221, label %_ZNK10btSoftBody4Body5xformEv.exit236, !prof !173

init.check.i221:                                  ; preds = %_ZNK10btSoftBody4Body5xformEv.exit213
  %153 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  %tobool.not.i220 = icmp eq i32 %153, 0
  br i1 %tobool.not.i220, label %_ZNK10btSoftBody4Body5xformEv.exit236, label %init.i223

init.i223:                                        ; preds = %init.check.i221
  %154 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i328 = icmp eq i8 %154, 0
  br i1 %guard.uninitialized.i328, label %init.check.i330, label %invoke.cont.i227, !prof !173

init.check.i330:                                  ; preds = %init.i223
  %155 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i329 = icmp eq i32 %155, 0
  br i1 %tobool.not.i329, label %invoke.cont.i227, label %init.i332

init.i332:                                        ; preds = %init.check.i330
  %156 = load atomic i8, ptr @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix acquire, align 8
  %guard.uninitialized.i353 = icmp eq i8 %156, 0
  br i1 %guard.uninitialized.i353, label %init.check.i355, label %invoke.cont.i335, !prof !173

init.check.i355:                                  ; preds = %init.i332
  %157 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  %tobool.not.i354 = icmp eq i32 %157, 0
  br i1 %tobool.not.i354, label %invoke.cont.i335, label %init.i356

init.i356:                                        ; preds = %init.check.i355
  store float 1.000000e+00, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 0, i32 0, i64 1), i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 1), align 4, !tbaa !137
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1, i32 0, i64 2), i8 0, i64 16, i1 false)
  store <2 x float> <float 1.000000e+00, float 0.000000e+00>, ptr getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2, i32 0, i64 2), align 4, !tbaa !137
  %158 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btMatrix3x311getIdentityEvE14identityMatrix) #38
  br label %invoke.cont.i335

invoke.cont.i335:                                 ; preds = %init.i356, %init.check.i355, %init.i332
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btMatrix3x3, ptr @_ZZN11btMatrix3x311getIdentityEvE14identityMatrix, i64 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %159 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont.i227

invoke.cont.i227:                                 ; preds = %invoke.cont.i335, %init.check.i330, %init.i223
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), i64 16, i1 false), !tbaa.struct !163
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, i64 0, i32 1), ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i64 16, i1 false), !tbaa.struct !163
  %160 = tail call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZNK10btSoftBody4Body5xformEvE8identity)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body5xformEvE8identity) #38
  br label %_ZNK10btSoftBody4Body5xformEv.exit236

_ZNK10btSoftBody4Body5xformEv.exit236:            ; preds = %_ZNK10btSoftBody4Body5xformEv.exit213, %init.check.i221, %invoke.cont.i227
  %161 = load ptr, ptr %m_collisionObject.i88, align 8, !tbaa !253
  %tobool3.not.i229 = icmp eq ptr %161, null
  %m_interpolationWorldTransform.i.i230 = getelementptr inbounds %class.btCollisionObject, ptr %161, i64 0, i32 2
  %162 = load ptr, ptr %bb, align 8
  %tobool6.not.i231 = icmp eq ptr %162, null
  %m_framexform.i232 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %162, i64 0, i32 3
  %spec.select.i233 = select i1 %tobool6.not.i231, ptr @_ZZNK10btSoftBody4Body5xformEvE8identity, ptr %m_framexform.i232
  %retval.0.i234 = select i1 %tobool3.not.i229, ptr %spec.select.i233, ptr %m_interpolationWorldTransform.i.i230
  %arrayidx4.i.i237 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i234, i64 0, i64 1
  %arrayidx9.i.i240 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i234, i64 0, i64 2
  %163 = load <2 x float>, ptr %retval.0.i234, align 4, !tbaa !137
  %164 = load <2 x float>, ptr %arrayidx4.i.i237, align 4, !tbaa !137
  %165 = insertelement <2 x float> poison, float %sub8.i101, i64 0
  %166 = shufflevector <2 x float> %165, <2 x float> poison, <2 x i32> zeroinitializer
  %167 = fmul <2 x float> %166, %164
  %168 = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> <i32 1, i32 1>
  %169 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %163, <2 x float> %168, <2 x float> %167)
  %170 = load <2 x float>, ptr %arrayidx9.i.i240, align 4, !tbaa !137
  %171 = shufflevector <2 x float> %55, <2 x float> poison, <2 x i32> zeroinitializer
  %172 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %170, <2 x float> %171, <2 x float> %169)
  %arrayidx.i.i12.i246 = getelementptr inbounds [4 x float], ptr %retval.0.i234, i64 0, i64 2
  %173 = load float, ptr %arrayidx.i.i12.i246, align 4, !tbaa !137
  %arrayidx.i14.i13.i247 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i234, i64 0, i64 1, i32 0, i64 2
  %174 = load float, ptr %arrayidx.i14.i13.i247, align 4, !tbaa !137
  %mul7.i15.i248 = fmul float %sub8.i101, %174
  %175 = extractelement <2 x float> %55, i64 1
  %176 = tail call float @llvm.fmuladd.f32(float %173, float %175, float %mul7.i15.i248)
  %arrayidx.i16.i16.i249 = getelementptr inbounds [3 x %class.btVector3], ptr %retval.0.i234, i64 0, i64 2, i32 0, i64 2
  %177 = load float, ptr %arrayidx.i16.i16.i249, align 4, !tbaa !137
  %178 = extractelement <2 x float> %55, i64 0
  %179 = tail call float @llvm.fmuladd.f32(float %177, float %178, float %176)
  %retval.sroa.3.12.vec.insert.i252 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %179, i64 0
  %arrayidx38 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 2, i64 1
  store <2 x float> %172, ptr %arrayidx38, align 8, !tbaa.struct !163
  %ref.tmp32.sroa.4.0.arrayidx38.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 2, i64 1, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i252, ptr %ref.tmp32.sroa.4.0.arrayidx38.sroa_idx, align 8, !tbaa.struct !165
  %m_rpos = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 3
  store <2 x float> %retval.sroa.0.4.vec.insert.i, ptr %m_rpos, align 8, !tbaa.struct !163
  %ra.sroa.10.0.m_rpos.sroa_idx = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 3, i64 0, i32 0, i64 2
  store <2 x float> %33, ptr %ra.sroa.10.0.m_rpos.sroa_idx, align 8, !tbaa.struct !165
  %arrayidx41 = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 3, i64 1
  store <2 x float> %retval.sroa.0.4.vec.insert.i106, ptr %arrayidx41, align 8, !tbaa.struct !163
  %rb.sroa.10.0.arrayidx41.sroa_idx = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 3, i64 1, i32 0, i64 2
  store <2 x float> %57, ptr %rb.sroa.10.0.arrayidx41.sroa_idx, align 8, !tbaa.struct !165
  %m_cfm = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 3
  store <2 x float> <float 1.000000e+00, float 1.000000e+00>, ptr %m_cfm, align 8, !tbaa !137
  %m_life = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 1
  store i32 0, ptr %m_life, align 8, !tbaa !544
  %m_maxlife = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 2
  store i32 0, ptr %m_maxlife, align 4, !tbaa !546
  %m_split = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 5
  store float 1.000000e+00, ptr %m_split, align 8, !tbaa !269
  %180 = insertelement <2 x float> poison, float %sub, i64 0
  %181 = shufflevector <2 x float> %180, <2 x float> poison, <2 x i32> zeroinitializer
  %182 = fmul <2 x float> %9, %181
  %mul8.i.i256 = fmul float %mul7.i.i.i, %sub
  %retval.sroa.3.12.vec.insert.i.i259 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i256, i64 0
  %m_drift = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 6
  store <2 x float> %182, ptr %m_drift, align 4, !tbaa.struct !163
  %ref.tmp42.sroa.4.0.m_drift.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 6, i32 0, i64 2
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i259, ptr %ref.tmp42.sroa.4.0.m_drift.sroa_idx, align 4, !tbaa.struct !165
  %m_normal = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 4
  store <2 x float> %9, ptr %m_normal, align 8
  %norm.sroa.14.0.m_normal.sroa_idx = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 4, i32 0, i64 2
  store float %mul7.i.i.i, ptr %norm.sroa.14.0.m_normal.sroa_idx, align 8, !tbaa.struct !165
  %norm.sroa.19.0.m_normal.sroa_idx = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 4, i32 0, i64 3
  store float %norm.sroa.19.0.copyload, ptr %norm.sroa.19.0.m_normal.sroa_idx, align 4, !tbaa.struct !318
  %m_delete = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 9
  store i8 0, ptr %m_delete, align 4, !tbaa !484
  %mul8.i.i261 = fmul float %sub8.i187, %sub8.i187
  %183 = tail call float @llvm.fmuladd.f32(float %sub.i184, float %sub.i184, float %mul8.i.i261)
  %184 = tail call float @llvm.fmuladd.f32(float %sub14.i190, float %sub14.i190, float %183)
  %fneg = fneg float %121
  %friction = getelementptr inbounds %"struct.btSoftColliders::ClusterBase", ptr %this, i64 0, i32 4
  %185 = load float, ptr %friction, align 4, !tbaa !582
  %mul = fmul float %185, %fneg
  %cmp46 = fcmp olt float %184, %mul
  %cond = select i1 %cmp46, float 1.000000e+00, float %185
  %m_friction = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 5
  store float %cond, ptr %m_friction, align 8, !tbaa !612
  call void @llvm.lifetime.start.p0(i64 48, ptr nonnull %ref.tmp48) #38
  %186 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool.not.i263 = icmp eq ptr %186, null
  br i1 %tobool.not.i263, label %if.end.i, label %if.then.i

if.then.i:                                        ; preds = %_ZNK10btSoftBody4Body5xformEv.exit236
  %m_inverseMass.i.i = getelementptr inbounds %class.btRigidBody, ptr %186, i64 0, i32 4
  %187 = load float, ptr %m_inverseMass.i.i, align 8, !tbaa !452
  br label %_ZNK10btSoftBody4Body7invMassEv.exit

if.end.i:                                         ; preds = %_ZNK10btSoftBody4Body5xformEv.exit236
  %188 = load ptr, ptr %ba, align 8, !tbaa !272
  %tobool3.not.i264 = icmp eq ptr %188, null
  br i1 %tobool3.not.i264, label %_ZNK10btSoftBody4Body7invMassEv.exit, label %if.then4.i

if.then4.i:                                       ; preds = %if.end.i
  %m_imass.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %188, i64 0, i32 5
  %189 = load float, ptr %m_imass.i, align 4, !tbaa !373
  br label %_ZNK10btSoftBody4Body7invMassEv.exit

_ZNK10btSoftBody4Body7invMassEv.exit:             ; preds = %if.then.i, %if.end.i, %if.then4.i
  %retval.0.i265 = phi float [ %187, %if.then.i ], [ %189, %if.then4.i ], [ 0.000000e+00, %if.end.i ]
  %190 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi acquire, align 8
  %guard.uninitialized.i266 = icmp eq i8 %190, 0
  br i1 %guard.uninitialized.i266, label %init.check.i268, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit, !prof !173

init.check.i268:                                  ; preds = %_ZNK10btSoftBody4Body7invMassEv.exit
  %191 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  %tobool.not.i267 = icmp eq i32 %191, 0
  br i1 %tobool.not.i267, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit, label %init.i269

init.i269:                                        ; preds = %init.check.i268
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, i8 0, i64 48, i1 false)
  %192 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  br label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit

_ZNK10btSoftBody4Body15invWorldInertiaEv.exit:    ; preds = %_ZNK10btSoftBody4Body7invMassEv.exit, %init.check.i268, %init.i269
  %193 = load ptr, ptr %m_rigid.i.i, align 8, !tbaa !511
  %tobool10.not.i = icmp eq ptr %193, null
  %m_invInertiaTensorWorld.i.i = getelementptr inbounds %class.btRigidBody, ptr %193, i64 0, i32 1
  %194 = load ptr, ptr %ba, align 8
  %tobool12.not.i = icmp eq ptr %194, null
  %m_invwi.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %194, i64 0, i32 7
  %spec.select.i271 = select i1 %tobool12.not.i, ptr @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, ptr %m_invwi.i
  %retval.0.i272 = select i1 %tobool10.not.i, ptr %spec.select.i271, ptr %m_invInertiaTensorWorld.i.i
  %195 = load ptr, ptr %m_rigid.i.i111, align 8, !tbaa !511
  %tobool.not.i274 = icmp eq ptr %195, null
  br i1 %tobool.not.i274, label %if.end.i278, label %if.then.i276

if.then.i276:                                     ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit
  %m_inverseMass.i.i275 = getelementptr inbounds %class.btRigidBody, ptr %195, i64 0, i32 4
  %196 = load float, ptr %m_inverseMass.i.i275, align 8, !tbaa !452
  br label %_ZNK10btSoftBody4Body7invMassEv.exit282

if.end.i278:                                      ; preds = %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit
  %197 = load ptr, ptr %bb, align 8, !tbaa !272
  %tobool3.not.i277 = icmp eq ptr %197, null
  br i1 %tobool3.not.i277, label %_ZNK10btSoftBody4Body7invMassEv.exit282, label %if.then4.i280

if.then4.i280:                                    ; preds = %if.end.i278
  %m_imass.i279 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %197, i64 0, i32 5
  %198 = load float, ptr %m_imass.i279, align 4, !tbaa !373
  br label %_ZNK10btSoftBody4Body7invMassEv.exit282

_ZNK10btSoftBody4Body7invMassEv.exit282:          ; preds = %if.then.i276, %if.end.i278, %if.then4.i280
  %retval.0.i281 = phi float [ %196, %if.then.i276 ], [ %198, %if.then4.i280 ], [ 0.000000e+00, %if.end.i278 ]
  %199 = load atomic i8, ptr @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi acquire, align 8
  %guard.uninitialized.i283 = icmp eq i8 %199, 0
  br i1 %guard.uninitialized.i283, label %init.check.i285, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit294, !prof !173

init.check.i285:                                  ; preds = %_ZNK10btSoftBody4Body7invMassEv.exit282
  %200 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  %tobool.not.i284 = icmp eq i32 %200, 0
  br i1 %tobool.not.i284, label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit294, label %init.i286

init.i286:                                        ; preds = %init.check.i285
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(48) @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, i8 0, i64 48, i1 false)
  %201 = tail call ptr @llvm.invariant.start.p0(i64 48, ptr nonnull @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi)
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZNK10btSoftBody4Body15invWorldInertiaEvE3iwi) #38
  br label %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit294

_ZNK10btSoftBody4Body15invWorldInertiaEv.exit294: ; preds = %_ZNK10btSoftBody4Body7invMassEv.exit282, %init.check.i285, %init.i286
  %202 = load ptr, ptr %m_rigid.i.i111, align 8, !tbaa !511
  %tobool10.not.i288 = icmp eq ptr %202, null
  %m_invInertiaTensorWorld.i.i289 = getelementptr inbounds %class.btRigidBody, ptr %202, i64 0, i32 1
  %203 = load ptr, ptr %bb, align 8
  %tobool12.not.i290 = icmp eq ptr %203, null
  %m_invwi.i291 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %203, i64 0, i32 7
  %spec.select.i292 = select i1 %tobool12.not.i290, ptr @_ZZNK10btSoftBody4Body15invWorldInertiaEvE3iwi, ptr %m_invwi.i291
  %retval.0.i293 = select i1 %tobool10.not.i288, ptr %spec.select.i292, ptr %m_invInertiaTensorWorld.i.i289
  call fastcc void @_ZL13ImpulseMatrixfRK11btMatrix3x3RK9btVector3fS1_S4_(ptr noalias nonnull align 4 %ref.tmp48, float noundef %retval.0.i265, ptr noundef nonnull align 4 dereferenceable(48) %retval.0.i272, ptr noundef nonnull align 4 dereferenceable(16) %m_rpos, float noundef %retval.0.i281, ptr noundef nonnull align 4 dereferenceable(48) %retval.0.i293, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx41)
  %m_massmatrix = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %m_massmatrix, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp48, i64 16, i1 false), !tbaa.struct !163
  %arrayidx5.i295 = getelementptr inbounds [3 x %class.btVector3], ptr %ref.tmp48, i64 0, i64 1
  %arrayidx7.i296 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 8, i32 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx7.i296, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i295, i64 16, i1 false), !tbaa.struct !163
  %arrayidx9.i = getelementptr inbounds [3 x %class.btVector3], ptr %ref.tmp48, i64 0, i64 2
  %arrayidx11.i297 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 8, i32 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx11.i297, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx9.i, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.lifetime.end.p0(i64 48, ptr nonnull %ref.tmp48) #38
  br label %return

return:                                           ; preds = %entry, %_ZNK10btSoftBody4Body15invWorldInertiaEv.exit294
  ret i1 %cmp
}

declare void @_ZN13btConvexShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(24)) unnamed_addr #1

declare void @_ZN21btConvexInternalShapeC2Ev(ptr noundef nonnull align 8 dereferenceable(64)) unnamed_addr #1

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN27btSoftClusterCollisionShapeD0Ev(ptr noundef nonnull align 8 dereferenceable(72) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  invoke void @_ZN13btConvexShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %this)
          to label %invoke.cont unwind label %lpad

invoke.cont:                                      ; preds = %entry
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %this)
  ret void

lpad:                                             ; preds = %entry
  %0 = landingpad { ptr, i32 }
          cleanup
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %this)
          to label %eh.resume unwind label %terminate.lpad

eh.resume:                                        ; preds = %lpad
  resume { ptr, i32 } %0

terminate.lpad:                                   ; preds = %lpad
  %1 = landingpad { ptr, i32 }
          catch ptr null
  %2 = extractvalue { ptr, i32 } %1, 0
  tail call void @__clang_call_terminate(ptr %2) #39
  unreachable
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNK27btSoftClusterCollisionShape7getAabbERK11btTransformR9btVector3S4_(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef nonnull align 4 dereferenceable(64) %t, ptr noundef nonnull align 4 dereferenceable(16) %aabbMin, ptr noundef nonnull align 4 dereferenceable(16) %aabbMax) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

declare void @_ZN21btConvexInternalShape15setLocalScalingERK9btVector3(ptr noundef nonnull align 8 dereferenceable(64), ptr noundef nonnull align 4 dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef nonnull align 4 dereferenceable(16) ptr @_ZNK21btConvexInternalShape15getLocalScalingEv(ptr noundef nonnull align 8 dereferenceable(64) %this) unnamed_addr #29 comdat align 2 {
entry:
  %m_localScaling = getelementptr inbounds %class.btConvexInternalShape, ptr %this, i64 0, i32 1
  ret ptr %m_localScaling
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNK27btSoftClusterCollisionShape21calculateLocalInertiaEfR9btVector3(ptr noundef nonnull align 8 dereferenceable(72) %this, float noundef %mass, ptr noundef nonnull align 4 dereferenceable(16) %inertia) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef ptr @_ZNK27btSoftClusterCollisionShape7getNameEv(ptr noundef nonnull align 8 dereferenceable(72) %this) unnamed_addr #29 comdat align 2 {
entry:
  ret ptr @.str.4
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN27btSoftClusterCollisionShape9setMarginEf(ptr noundef nonnull align 8 dereferenceable(72) %this, float noundef %margin) unnamed_addr #4 comdat align 2 {
entry:
  %m_collisionMargin.i = getelementptr inbounds %class.btConvexInternalShape, ptr %this, i64 0, i32 3
  store float %margin, ptr %m_collisionMargin.i, align 8, !tbaa !605
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local noundef float @_ZNK27btSoftClusterCollisionShape9getMarginEv(ptr noundef nonnull align 8 dereferenceable(72) %this) unnamed_addr #4 comdat align 2 {
entry:
  %vtable = load ptr, ptr %this, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 11
  %0 = load ptr, ptr %vfn, align 8
  %call = tail call noundef float %0(ptr noundef nonnull align 8 dereferenceable(72) %this)
  ret float %call
}

; Function Attrs: uwtable
define linkonce_odr dso_local { <2 x float>, <2 x float> } @_ZNK27btSoftClusterCollisionShape24localGetSupportingVertexERK9btVector3(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef nonnull align 4 dereferenceable(16) %vec) unnamed_addr #4 comdat align 2 {
entry:
  %m_cluster = getelementptr inbounds %class.btSoftClusterCollisionShape, ptr %this, i64 0, i32 1
  %0 = load ptr, ptr %m_cluster, align 8, !tbaa !601
  %m_data.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %0, i64 0, i32 5
  %1 = load ptr, ptr %m_data.i, align 8, !tbaa !320
  %2 = load ptr, ptr %1, align 8, !tbaa !219
  %3 = load float, ptr %vec, align 4, !tbaa !137
  %arrayidx5.i.i = getelementptr inbounds [4 x float], ptr %vec, i64 0, i64 1
  %4 = load float, ptr %arrayidx5.i.i, align 4, !tbaa !137
  %arrayidx10.i.i = getelementptr inbounds [4 x float], ptr %vec, i64 0, i64 2
  %5 = load float, ptr %arrayidx10.i.i, align 4, !tbaa !137
  %m_size.i = getelementptr inbounds %class.btAlignedObjectArray.59, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %m_size.i, align 4, !tbaa !319
  %cmp25 = icmp sgt i32 %6, 1
  br i1 %cmp25, label %for.body.preheader, label %for.cond.cleanup

for.body.preheader:                               ; preds = %entry
  %arrayidx12.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 1, i32 0, i64 2
  %7 = load float, ptr %arrayidx12.i.i, align 4, !tbaa !137
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 1
  %8 = load float, ptr %m_x, align 4, !tbaa !137
  %arrayidx7.i.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %2, i64 0, i32 1, i32 0, i64 1
  %9 = load float, ptr %arrayidx7.i.i, align 4, !tbaa !137
  %mul8.i.i = fmul float %4, %9
  %10 = tail call float @llvm.fmuladd.f32(float %3, float %8, float %mul8.i.i)
  %11 = tail call float @llvm.fmuladd.f32(float %5, float %7, float %10)
  %wide.trip.count = zext i32 %6 to i64
  br label %for.body

for.cond.cleanup.loopexit:                        ; preds = %for.body
  %idxprom10.phi.trans.insert = sext i32 %j.1 to i64
  %arrayidx11.phi.trans.insert = getelementptr inbounds ptr, ptr %1, i64 %idxprom10.phi.trans.insert
  %.pre = load ptr, ptr %arrayidx11.phi.trans.insert, align 8, !tbaa !219
  br label %for.cond.cleanup

for.cond.cleanup:                                 ; preds = %entry, %for.cond.cleanup.loopexit
  %12 = phi ptr [ %.pre, %for.cond.cleanup.loopexit ], [ %2, %entry ]
  %m_x12 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1
  %retval.sroa.0.0.copyload = load <2 x float>, ptr %m_x12, align 8, !tbaa.struct !163
  %retval.sroa.2.0.m_x12.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %12, i64 0, i32 1, i32 0, i64 2
  %retval.sroa.2.0.copyload = load <2 x float>, ptr %retval.sroa.2.0.m_x12.sroa_idx, align 8, !tbaa.struct !165
  %.fca.0.insert = insertvalue { <2 x float>, <2 x float> } poison, <2 x float> %retval.sroa.0.0.copyload, 0
  %.fca.1.insert = insertvalue { <2 x float>, <2 x float> } %.fca.0.insert, <2 x float> %retval.sroa.2.0.copyload, 1
  ret { <2 x float>, <2 x float> } %.fca.1.insert

for.body:                                         ; preds = %for.body.preheader, %for.body
  %indvars.iv = phi i64 [ 1, %for.body.preheader ], [ %indvars.iv.next, %for.body ]
  %d.028 = phi float [ %11, %for.body.preheader ], [ %d.1, %for.body ]
  %j.027 = phi i32 [ 0, %for.body.preheader ], [ %j.1, %for.body ]
  %arrayidx6 = getelementptr inbounds ptr, ptr %1, i64 %indvars.iv
  %13 = load ptr, ptr %arrayidx6, align 8, !tbaa !219
  %m_x7 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 0, i32 1
  %14 = load float, ptr %m_x7, align 4, !tbaa !137
  %arrayidx7.i.i21 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 0, i32 1, i32 0, i64 1
  %15 = load float, ptr %arrayidx7.i.i21, align 4, !tbaa !137
  %mul8.i.i22 = fmul float %4, %15
  %16 = tail call float @llvm.fmuladd.f32(float %3, float %14, float %mul8.i.i22)
  %arrayidx12.i.i24 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %13, i64 0, i32 1, i32 0, i64 2
  %17 = load float, ptr %arrayidx12.i.i24, align 4, !tbaa !137
  %18 = tail call float @llvm.fmuladd.f32(float %5, float %17, float %16)
  %cmp9 = fcmp ogt float %18, %d.028
  %19 = trunc i64 %indvars.iv to i32
  %j.1 = select i1 %cmp9, i32 %19, i32 %j.027
  %d.1 = select i1 %cmp9, float %18, float %d.028
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, %wide.trip.count
  br i1 %exitcond.not, label %for.cond.cleanup.loopexit, label %for.body
}

; Function Attrs: uwtable
define linkonce_odr dso_local { <2 x float>, <2 x float> } @_ZNK27btSoftClusterCollisionShape37localGetSupportingVertexWithoutMarginERK9btVector3(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef nonnull align 4 dereferenceable(16) %vec) unnamed_addr #0 comdat align 2 {
entry:
  %vtable = load ptr, ptr %this, align 8, !tbaa !5
  %vfn = getelementptr inbounds ptr, ptr %vtable, i64 12
  %0 = load ptr, ptr %vfn, align 8
  %call = tail call { <2 x float>, <2 x float> } %0(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef nonnull align 4 dereferenceable(16) %vec)
  ret { <2 x float>, <2 x float> } %call
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNK27btSoftClusterCollisionShape49batchedUnitVectorGetSupportingVertexWithoutMarginEPK9btVector3PS0_i(ptr noundef nonnull align 8 dereferenceable(72) %this, ptr noundef %vectors, ptr noundef %supportVerticesOut, i32 noundef %numVectors) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

declare void @_ZNK21btConvexInternalShape11getAabbSlowERK11btTransformR9btVector3S4_(ptr noundef nonnull align 8 dereferenceable(64), ptr noundef nonnull align 4 dereferenceable(64), ptr noundef nonnull align 4 dereferenceable(16), ptr noundef nonnull align 4 dereferenceable(16)) unnamed_addr #1

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef i32 @_ZNK21btConvexInternalShape36getNumPreferredPenetrationDirectionsEv(ptr noundef nonnull align 8 dereferenceable(64) %this) unnamed_addr #29 comdat align 2 {
entry:
  ret i32 0
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZNK21btConvexInternalShape32getPreferredPenetrationDirectionEiR9btVector3(ptr noundef nonnull align 8 dereferenceable(64) %this, i32 noundef %index, ptr noundef nonnull align 4 dereferenceable(16) %penetrationVector) unnamed_addr #29 comdat align 2 {
entry:
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local noundef i32 @_ZNK27btSoftClusterCollisionShape12getShapeTypeEv(ptr noundef nonnull align 8 dereferenceable(72) %this) unnamed_addr #29 comdat align 2 {
entry:
  ret i32 32
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN15btSoftColliders12CollideCL_SSD0Ev(ptr noundef nonnull align 8 dereferenceable(48) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN15btSoftColliders12CollideCL_SS7ProcessEPK10btDbvtNodeS3_(ptr noundef nonnull align 8 dereferenceable(48) %this, ptr noundef %la, ptr noundef %lb) unnamed_addr #0 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  %csa = alloca %class.btSoftClusterCollisionShape, align 8
  %csb = alloca %class.btSoftClusterCollisionShape, align 8
  %res = alloca %"struct.btGjkEpaSolver2::sResults", align 4
  %ref.tmp = alloca %class.btVector3, align 8
  %joint = alloca %"struct.btSoftBody::CJoint", align 8
  %agg.tmp = alloca %"struct.btSoftBody::Body", align 8
  %agg.tmp34 = alloca %"struct.btSoftBody::Body", align 8
  %0 = getelementptr inbounds %struct.btDbvtNode, ptr %la, i64 0, i32 2
  %1 = load ptr, ptr %0, align 8, !tbaa !164
  %2 = getelementptr inbounds %struct.btDbvtNode, ptr %lb, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !164
  %bodies = getelementptr inbounds %"struct.btSoftColliders::CollideCL_SS", ptr %this, i64 0, i32 1
  %4 = load ptr, ptr %bodies, align 8, !tbaa !219
  %arrayidx3 = getelementptr inbounds %"struct.btSoftColliders::CollideCL_SS", ptr %this, i64 0, i32 1, i64 1
  %5 = load ptr, ptr %arrayidx3, align 8, !tbaa !219
  %cmp = icmp eq ptr %4, %5
  br i1 %cmp, label %land.lhs.true, label %if.then16

land.lhs.true:                                    ; preds = %entry
  %m_size.i = getelementptr inbounds %class.btSoftBody, ptr %4, i64 0, i32 25, i32 2
  %6 = load i32, ptr %m_size.i, align 4, !tbaa !128
  %tobool.not = icmp eq i32 %6, 0
  br i1 %tobool.not, label %if.then16, label %if.then

if.then:                                          ; preds = %land.lhs.true
  %m_clusterIndex = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 24
  %7 = load i32, ptr %m_clusterIndex, align 4, !tbaa !372
  %m_size.i96 = getelementptr inbounds %class.btSoftBody, ptr %4, i64 0, i32 24, i32 2
  %8 = load i32, ptr %m_size.i96, align 4, !tbaa !124
  %m_clusterIndex12 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 24
  %9 = load i32, ptr %m_clusterIndex12, align 4, !tbaa !372
  %mul = mul nsw i32 %9, %8
  %add = add nsw i32 %mul, %7
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %4, i64 0, i32 25, i32 5
  %10 = load ptr, ptr %m_data.i, align 8, !tbaa !127
  %idxprom.i = sext i32 %add to i64
  %arrayidx.i = getelementptr inbounds i8, ptr %10, i64 %idxprom.i
  %11 = load i8, ptr %arrayidx.i, align 1, !tbaa !367, !range !159, !noundef !192
  %tobool14.not = icmp eq i8 %11, 0
  br i1 %tobool14.not, label %if.then16, label %if.else

if.then16:                                        ; preds = %land.lhs.true, %entry, %if.then
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %csa) #38
  call void @_ZN21btConvexInternalShapeC2Ev(ptr noundef nonnull align 8 dereferenceable(64) %csa)
  store ptr getelementptr inbounds ({ [21 x ptr] }, ptr @_ZTV27btSoftClusterCollisionShape, i64 0, inrange i32 0, i64 2), ptr %csa, align 8, !tbaa !5
  %m_cluster.i = getelementptr inbounds %class.btSoftClusterCollisionShape, ptr %csa, i64 0, i32 1
  store ptr %1, ptr %m_cluster.i, align 8, !tbaa !601
  %m_collisionMargin.i.i.i = getelementptr inbounds %class.btConvexInternalShape, ptr %csa, i64 0, i32 3
  store float 0.000000e+00, ptr %m_collisionMargin.i.i.i, align 8, !tbaa !605
  call void @llvm.lifetime.start.p0(i64 72, ptr nonnull %csb) #38
  invoke void @_ZN21btConvexInternalShapeC2Ev(ptr noundef nonnull align 8 dereferenceable(64) %csb)
          to label %_ZN27btSoftClusterCollisionShapeC2EPKN10btSoftBody7ClusterE.exit unwind label %lpad

_ZN27btSoftClusterCollisionShapeC2EPKN10btSoftBody7ClusterE.exit: ; preds = %if.then16
  store ptr getelementptr inbounds ({ [21 x ptr] }, ptr @_ZTV27btSoftClusterCollisionShape, i64 0, inrange i32 0, i64 2), ptr %csb, align 8, !tbaa !5
  %m_cluster.i97 = getelementptr inbounds %class.btSoftClusterCollisionShape, ptr %csb, i64 0, i32 1
  store ptr %3, ptr %m_cluster.i97, align 8, !tbaa !601
  %m_collisionMargin.i.i.i98 = getelementptr inbounds %class.btConvexInternalShape, ptr %csb, i64 0, i32 3
  store float 0.000000e+00, ptr %m_collisionMargin.i.i.i98, align 8, !tbaa !605
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %res) #38
  %12 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i = icmp eq i8 %12, 0
  br i1 %guard.uninitialized.i, label %init.check.i, label %invoke.cont19, !prof !173

init.check.i:                                     ; preds = %_ZN27btSoftClusterCollisionShapeC2EPKN10btSoftBody7ClusterE.exit
  %13 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i = icmp eq i32 %13, 0
  br i1 %tobool.not.i, label %invoke.cont19, label %init.i

init.i:                                           ; preds = %init.check.i
  %call.i = invoke noundef nonnull align 4 dereferenceable(48) ptr @_ZN11btMatrix3x311getIdentityEv()
          to label %invoke.cont.i unwind label %lpad.i

invoke.cont.i:                                    ; preds = %init.i
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) %call.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx6.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %call.i, i64 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) %arrayidx6.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx10.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %call.i, i64 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) %arrayidx10.i.i.i, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %14 = call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont19

lpad.i:                                           ; preds = %init.i
  %15 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_guard_abort(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %ehcleanup74

invoke.cont19:                                    ; preds = %invoke.cont.i, %init.check.i, %_ZN27btSoftClusterCollisionShapeC2EPKN10btSoftBody7ClusterE.exit
  %16 = load atomic i8, ptr @_ZGVZN11btTransform11getIdentityEvE17identityTransform acquire, align 8
  %guard.uninitialized.i99 = icmp eq i8 %16, 0
  br i1 %guard.uninitialized.i99, label %init.check.i101, label %invoke.cont21, !prof !173

init.check.i101:                                  ; preds = %invoke.cont19
  %17 = call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  %tobool.not.i100 = icmp eq i32 %17, 0
  br i1 %tobool.not.i100, label %invoke.cont21, label %init.i103

init.i103:                                        ; preds = %init.check.i101
  %call.i102 = invoke noundef nonnull align 4 dereferenceable(48) ptr @_ZN11btMatrix3x311getIdentityEv()
          to label %invoke.cont.i106 unwind label %lpad.i107

invoke.cont.i106:                                 ; preds = %init.i103
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) %call.i102, i64 16, i1 false), !tbaa.struct !163
  %arrayidx6.i.i.i104 = getelementptr inbounds [3 x %class.btVector3], ptr %call.i102, i64 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 1), ptr noundef nonnull align 4 dereferenceable(16) %arrayidx6.i.i.i104, i64 16, i1 false), !tbaa.struct !163
  %arrayidx10.i.i.i105 = getelementptr inbounds [3 x %class.btVector3], ptr %call.i102, i64 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 0, i32 0, i64 2), ptr noundef nonnull align 4 dereferenceable(16) %arrayidx10.i.i.i105, i64 16, i1 false), !tbaa.struct !163
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) getelementptr inbounds (%class.btTransform, ptr @_ZZN11btTransform11getIdentityEvE17identityTransform, i64 0, i32 1), i8 0, i64 16, i1 false)
  %18 = call ptr @llvm.invariant.start.p0(i64 64, ptr nonnull @_ZZN11btTransform11getIdentityEvE17identityTransform)
  call void @__cxa_guard_release(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %invoke.cont21

lpad.i107:                                        ; preds = %init.i103
  %19 = landingpad { ptr, i32 }
          cleanup
  call void @__cxa_guard_abort(ptr nonnull @_ZGVZN11btTransform11getIdentityEvE17identityTransform) #38
  br label %ehcleanup74

invoke.cont21:                                    ; preds = %invoke.cont.i106, %init.check.i101, %invoke.cont19
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp) #38
  %m_com = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 8
  %m_com23 = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 8
  %20 = load <2 x float>, ptr %m_com, align 4, !tbaa !137
  %21 = load <2 x float>, ptr %m_com23, align 4, !tbaa !137
  %22 = fsub <2 x float> %20, %21
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %1, i64 0, i32 8, i32 0, i64 2
  %23 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %arrayidx13.i = getelementptr inbounds %"struct.btSoftBody::Cluster", ptr %3, i64 0, i32 8, i32 0, i64 2
  %24 = load float, ptr %arrayidx13.i, align 4, !tbaa !137
  %sub14.i = fsub float %23, %24
  %retval.sroa.3.12.vec.insert.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %sub14.i, i64 0
  store <2 x float> %22, ptr %ref.tmp, align 8
  %25 = getelementptr inbounds { <2 x float>, <2 x float> }, ptr %ref.tmp, i64 0, i32 1
  store <2 x float> %retval.sroa.3.12.vec.insert.i, ptr %25, align 8
  %call28 = invoke noundef zeroext i1 @_ZN15btGjkEpaSolver214SignedDistanceEPK13btConvexShapeRK11btTransformS2_S5_RK9btVector3RNS_8sResultsE(ptr noundef nonnull %csa, ptr noundef nonnull align 4 dereferenceable(64) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull %csb, ptr noundef nonnull align 4 dereferenceable(64) @_ZZN11btTransform11getIdentityEvE17identityTransform, ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp, ptr noundef nonnull align 4 dereferenceable(56) %res)
          to label %invoke.cont27 unwind label %lpad24

invoke.cont27:                                    ; preds = %invoke.cont21
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  br i1 %call28, label %if.then29, label %if.end73

if.then29:                                        ; preds = %invoke.cont27
  call void @llvm.lifetime.start.p0(i64 248, ptr nonnull %joint) #38
  %m_bodies.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(48) %m_bodies.i.i, i8 0, i64 48, i1 false)
  %m_delete.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 9
  store i8 0, ptr %m_delete.i.i, align 4, !tbaa !484
  store ptr getelementptr inbounds ({ [8 x ptr] }, ptr @_ZTVN10btSoftBody6CJointE, i64 0, inrange i32 0, i64 2), ptr %joint, align 8, !tbaa !5
  store ptr %1, ptr %agg.tmp, align 8, !tbaa !272
  %m_rigid.i = getelementptr inbounds %"struct.btSoftBody::Body", ptr %agg.tmp, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rigid.i, i8 0, i64 16, i1 false)
  store ptr %3, ptr %agg.tmp34, align 8, !tbaa !272
  %m_rigid.i111 = getelementptr inbounds %"struct.btSoftBody::Body", ptr %agg.tmp34, i64 0, i32 1
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %m_rigid.i111, i8 0, i64 16, i1 false)
  %call37 = invoke noundef zeroext i1 @_ZN15btSoftColliders11ClusterBase12SolveContactERKN15btGjkEpaSolver28sResultsEN10btSoftBody4BodyES6_RNS5_6CJointE(ptr noundef nonnull align 8 dereferenceable(28) %this, ptr noundef nonnull align 4 dereferenceable(56) %res, ptr noundef nonnull byval(%"struct.btSoftBody::Body") align 8 %agg.tmp, ptr noundef nonnull byval(%"struct.btSoftBody::Body") align 8 %agg.tmp34, ptr noundef nonnull align 8 dereferenceable(244) %joint)
          to label %invoke.cont36 unwind label %lpad32

invoke.cont36:                                    ; preds = %if.then29
  br i1 %call37, label %if.then38, label %if.end68

if.then38:                                        ; preds = %invoke.cont36
  %call41 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef 248, i32 noundef 16)
          to label %invoke.cont40 unwind label %lpad39

invoke.cont40:                                    ; preds = %if.then38
  %m_bodies.i.i112 = getelementptr %"struct.btSoftBody::Joint", ptr %call41, i64 0, i32 1
  %m_delete.i.i113 = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call41, i64 0, i32 9
  %26 = getelementptr inbounds i8, ptr %call41, i64 8
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(240) %26, i8 0, i64 240, i1 false)
  store ptr getelementptr inbounds ({ [8 x ptr] }, ptr @_ZTVN10btSoftBody6CJointE, i64 0, inrange i32 0, i64 2), ptr %call41, align 8, !tbaa !5
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(124) %m_bodies.i.i112, ptr noundef nonnull align 8 dereferenceable(124) %m_bodies.i.i, i64 124, i1 false)
  %m_massmatrix.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call41, i64 0, i32 8
  %m_massmatrix3.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 8
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %m_massmatrix.i.i, ptr noundef nonnull align 4 dereferenceable(16) %m_massmatrix3.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx5.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 8, i32 0, i64 1
  %arrayidx7.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call41, i64 0, i32 8, i32 0, i64 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx7.i.i.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %arrayidx9.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %joint, i64 0, i32 8, i32 0, i64 2
  %arrayidx11.i.i.i = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call41, i64 0, i32 8, i32 0, i64 2
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx11.i.i.i, ptr noundef nonnull align 4 dereferenceable(16) %arrayidx9.i.i.i, i64 16, i1 false), !tbaa.struct !163
  %27 = load i8, ptr %m_delete.i.i, align 4, !tbaa !484, !range !159, !noundef !192
  store i8 %27, ptr %m_delete.i.i113, align 4, !tbaa !484
  %m_life.i = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %call41, i64 0, i32 1
  %m_life2.i = getelementptr inbounds %"struct.btSoftBody::CJoint", ptr %joint, i64 0, i32 1
  call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(60) %m_life.i, ptr noundef nonnull align 8 dereferenceable(60) %m_life2.i, i64 60, i1 false)
  %28 = load ptr, ptr %bodies, align 8, !tbaa !219
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %28, i64 0, i32 16, i32 2
  %29 = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %28, i64 0, i32 16, i32 3
  %30 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !117
  %cmp.i = icmp eq i32 %29, %30
  br i1 %cmp.i, label %if.then.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit

if.then.i:                                        ; preds = %invoke.cont40
  %tobool.not.i.i = icmp eq i32 %29, 0
  %mul.i.i = shl nsw i32 %29, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i
  %cmp.i.i = icmp slt i32 %29, %cond.i.i
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit

if.then.i.i:                                      ; preds = %if.then.i
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 3
  %call.i.i.i.i119 = invoke noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
          to label %call.i.i.i.i.noexc unwind label %lpad48

call.i.i.i.i.noexc:                               ; preds = %if.then.i.i.i
  %.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i: ; preds = %call.i.i.i.i.noexc, %if.then.i.i
  %31 = phi i32 [ %.pre.i, %call.i.i.i.i.noexc ], [ %29, %if.then.i.i ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i119, %call.i.i.i.i.noexc ], [ null, %if.then.i.i ]
  %cmp7.i.i.i = icmp sgt i32 %31, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %28, i64 0, i32 16, i32 5
  %wide.trip.count.i.i.i = zext i32 %31 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 3
  %32 = icmp ult i32 %31, 4
  br i1 %32, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967292
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.3, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %33 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i = getelementptr inbounds ptr, ptr %33, i64 %indvars.iv.i.i.i
  %34 = load ptr, ptr %arrayidx3.i.i.i, align 8, !tbaa !219
  store ptr %34, ptr %arrayidx.i.i.i, align 8, !tbaa !219
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %35 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.1 = getelementptr inbounds ptr, ptr %35, i64 %indvars.iv.next.i.i.i
  %36 = load ptr, ptr %arrayidx3.i.i.i.1, align 8, !tbaa !219
  store ptr %36, ptr %arrayidx.i.i.i.1, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.1 = or i64 %indvars.iv.i.i.i, 2
  %arrayidx.i.i.i.2 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.1
  %37 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.2 = getelementptr inbounds ptr, ptr %37, i64 %indvars.iv.next.i.i.i.1
  %38 = load ptr, ptr %arrayidx3.i.i.i.2, align 8, !tbaa !219
  store ptr %38, ptr %arrayidx.i.i.i.2, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.2 = or i64 %indvars.iv.i.i.i, 3
  %arrayidx.i.i.i.3 = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i.2
  %39 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.3 = getelementptr inbounds ptr, ptr %39, i64 %indvars.iv.next.i.i.i.2
  %40 = load ptr, ptr %arrayidx3.i.i.i.3, align 8, !tbaa !219
  store ptr %40, ptr %arrayidx.i.i.i.3, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i, 4
  %niter.next.3 = add i64 %niter, 4
  %niter.ncmp.3 = icmp eq i64 %niter.next.3, %unroll_iter
  br i1 %niter.ncmp.3, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.3, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil
  %indvars.iv.i.i.i.epil = phi i64 [ %indvars.iv.next.i.i.i.epil, %for.body.i.i.i.epil ], [ %indvars.iv.i.i.i.unr, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %epil.iter = phi i64 [ %epil.iter.next, %for.body.i.i.i.epil ], [ 0, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa ]
  %arrayidx.i.i.i.epil = getelementptr inbounds ptr, ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.epil
  %41 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !115
  %arrayidx3.i.i.i.epil = getelementptr inbounds ptr, ptr %41, i64 %indvars.iv.i.i.i.epil
  %42 = load ptr, ptr %arrayidx3.i.i.i.epil, align 8, !tbaa !219
  store ptr %42, ptr %arrayidx.i.i.i.epil, align 8, !tbaa !219
  %indvars.iv.next.i.i.i.epil = add nuw nsw i64 %indvars.iv.i.i.i.epil, 1
  %epil.iter.next = add i64 %epil.iter, 1
  %epil.iter.cmp.not = icmp eq i64 %epil.iter.next, %xtraiter
  br i1 %epil.iter.cmp.not, label %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i, label %for.body.i.i.i.epil, !llvm.loop !613

_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i: ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i.loopexit.unr-lcssa, %for.body.i.i.i.epil, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %28, i64 0, i32 16, i32 5
  %43 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !115
  %tobool.not.i10.i.i = icmp eq ptr %43, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %28, i64 0, i32 16, i32 6
  %44 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %44, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i
  invoke void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %43)
          to label %.noexc unwind label %lpad48

.noexc:                                           ; preds = %if.then3.i.i.i
  %.pre7.pre.i = load i32, ptr %m_size.i.i, align 4, !tbaa !116
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i: ; preds = %.noexc, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i
  %.pre7.i = phi i32 [ %.pre7.pre.i, %.noexc ], [ %31, %_ZNK20btAlignedObjectArrayIPN10btSoftBody5JointEE4copyEiiPS2_.exit.i.i ]
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !114
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !115
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !117
  br label %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit

_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit: ; preds = %invoke.cont40, %if.then.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i
  %45 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE10deallocateEv.exit.i.i ], [ %29, %if.then.i ], [ %29, %invoke.cont40 ]
  %m_data.i116 = getelementptr inbounds %class.btSoftBody, ptr %28, i64 0, i32 16, i32 5
  %46 = load ptr, ptr %m_data.i116, align 8, !tbaa !115
  %idxprom.i117 = sext i32 %45 to i64
  %arrayidx.i118 = getelementptr inbounds ptr, ptr %46, i64 %idxprom.i117
  store ptr %call41, ptr %arrayidx.i118, align 8, !tbaa !219
  %inc.i = add nsw i32 %45, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !116
  %47 = load ptr, ptr %bodies, align 8, !tbaa !219
  %kSSHR_CL = getelementptr inbounds %class.btSoftBody, ptr %47, i64 0, i32 2, i32 15
  %48 = load ptr, ptr %arrayidx3, align 8, !tbaa !219
  %kSSHR_CL55 = getelementptr inbounds %class.btSoftBody, ptr %48, i64 0, i32 2, i32 15
  %49 = load float, ptr %kSSHR_CL, align 4
  %50 = load float, ptr %kSSHR_CL55, align 4
  %cmp.i120 = fcmp ogt float %49, %50
  %51 = select i1 %cmp.i120, float %49, float %50
  %m_erp = getelementptr inbounds %"struct.btSoftBody::Joint", ptr %call41, i64 0, i32 4
  %kSS_SPLT_CL = getelementptr inbounds %class.btSoftBody, ptr %47, i64 0, i32 2, i32 18
  %52 = load float, ptr %kSS_SPLT_CL, align 8, !tbaa !614
  %kSS_SPLT_CL65 = getelementptr inbounds %class.btSoftBody, ptr %48, i64 0, i32 2, i32 18
  %53 = load float, ptr %kSS_SPLT_CL65, align 8, !tbaa !614
  %add66 = fadd float %52, %53
  %div = fmul float %add66, 5.000000e-01
  %54 = load <2 x float>, ptr %m_erp, align 4, !tbaa !137
  %55 = insertelement <2 x float> poison, float %51, i64 0
  %56 = insertelement <2 x float> %55, float %div, i64 1
  %57 = fmul <2 x float> %54, %56
  store <2 x float> %57, ptr %m_erp, align 4, !tbaa !137
  br label %if.end68

lpad:                                             ; preds = %if.then16, %if.end73
  %58 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup78

lpad24:                                           ; preds = %invoke.cont21
  %59 = landingpad { ptr, i32 }
          cleanup
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp) #38
  br label %ehcleanup74

lpad32:                                           ; preds = %if.then29
  %60 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup72

lpad39:                                           ; preds = %if.then38
  %61 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup72

lpad48:                                           ; preds = %if.then3.i.i.i, %if.then.i.i.i
  %62 = landingpad { ptr, i32 }
          cleanup
  br label %ehcleanup72

if.end68:                                         ; preds = %_ZN20btAlignedObjectArrayIPN10btSoftBody5JointEE9push_backERKS2_.exit, %invoke.cont36
  call void @llvm.lifetime.end.p0(i64 248, ptr nonnull %joint) #38
  br label %if.end73

ehcleanup72:                                      ; preds = %lpad32, %lpad48, %lpad39
  %.pn.pn = phi { ptr, i32 } [ %60, %lpad32 ], [ %62, %lpad48 ], [ %61, %lpad39 ]
  call void @llvm.lifetime.end.p0(i64 248, ptr nonnull %joint) #38
  br label %ehcleanup74

if.end73:                                         ; preds = %if.end68, %invoke.cont27
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %res) #38
  invoke void @_ZN13btConvexShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %csb)
          to label %invoke.cont75 unwind label %lpad

invoke.cont75:                                    ; preds = %if.end73
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %csb) #38
  call void @_ZN13btConvexShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %csa)
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %csa) #38
  br label %if.end82

ehcleanup74:                                      ; preds = %lpad.i107, %lpad.i, %ehcleanup72, %lpad24
  %.pn.pn.pn = phi { ptr, i32 } [ %.pn.pn, %ehcleanup72 ], [ %59, %lpad24 ], [ %19, %lpad.i107 ], [ %15, %lpad.i ]
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %res) #38
  invoke void @_ZN13btConvexShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %csb)
          to label %ehcleanup78 unwind label %terminate.lpad

ehcleanup78:                                      ; preds = %ehcleanup74, %lpad
  %.pn121 = phi { ptr, i32 } [ %58, %lpad ], [ %.pn.pn.pn, %ehcleanup74 ]
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %csb) #38
  invoke void @_ZN13btConvexShapeD2Ev(ptr noundef nonnull align 8 dereferenceable(72) %csa)
          to label %invoke.cont80 unwind label %terminate.lpad

invoke.cont80:                                    ; preds = %ehcleanup78
  call void @llvm.lifetime.end.p0(i64 72, ptr nonnull %csa) #38
  resume { ptr, i32 } %.pn121

if.else:                                          ; preds = %if.then
  %63 = load i32, ptr @_ZZN15btSoftColliders12CollideCL_SS7ProcessEPK10btDbvtNodeS3_E5count, align 4, !tbaa !140
  %inc = add nsw i32 %63, 1
  store i32 %inc, ptr @_ZZN15btSoftColliders12CollideCL_SS7ProcessEPK10btDbvtNodeS3_E5count, align 4, !tbaa !140
  br label %if.end82

if.end82:                                         ; preds = %if.else, %invoke.cont75
  ret void

terminate.lpad:                                   ; preds = %ehcleanup78, %ehcleanup74
  %64 = landingpad { ptr, i32 }
          catch ptr null
  %65 = extractvalue { ptr, i32 } %64, 0
  call void @__clang_call_terminate(ptr %65) #39
  unreachable
}

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN15btSoftColliders12CollideVF_SSD0Ev(ptr noundef nonnull align 8 dereferenceable(28) %this) unnamed_addr #8 comdat align 2 personality ptr @__gxx_personality_v0 {
entry:
  tail call void @_ZdlPv(ptr noundef nonnull %this) #37
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN15btSoftColliders12CollideVF_SS7ProcessEPK10btDbvtNodeS3_(ptr noundef nonnull align 8 dereferenceable(28) %this, ptr noundef %lnode, ptr noundef %lface) unnamed_addr #0 comdat align 2 {
entry:
  %0 = getelementptr inbounds %struct.btDbvtNode, ptr %lnode, i64 0, i32 2
  %1 = load ptr, ptr %0, align 8, !tbaa !164
  %2 = getelementptr inbounds %struct.btDbvtNode, ptr %lface, i64 0, i32 2
  %3 = load ptr, ptr %2, align 8, !tbaa !164
  %m_x = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 1
  %o.sroa.13.0.m_x.sroa_idx = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 1, i32 0, i64 2
  %o.sroa.13.0.copyload = load float, ptr %o.sroa.13.0.m_x.sroa_idx, align 8, !tbaa.struct !165
  %m_n = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 0, i32 1
  %4 = load ptr, ptr %m_n, align 8, !tbaa !219
  %m_x2 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1
  %arrayidx11.i = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 1, i32 0, i64 2
  %arrayidx5 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 0, i32 1, i64 1
  %5 = load ptr, ptr %arrayidx5, align 8, !tbaa !219
  %m_x6 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 0, i32 1
  %arrayidx11.i110 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 0, i32 1, i32 0, i64 2
  %6 = load float, ptr %arrayidx11.i110, align 4, !tbaa !137
  %sub14.i112 = fsub float %6, %o.sroa.13.0.copyload
  %arrayidx11 = getelementptr inbounds %"struct.btSoftBody::Face", ptr %3, i64 0, i32 1, i64 2
  %7 = load ptr, ptr %arrayidx11, align 8, !tbaa !219
  %m_x12 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 0, i32 1
  %8 = load <2 x float>, ptr %m_x, align 8
  %9 = load <2 x float>, ptr %m_x2, align 4, !tbaa !137
  %10 = fsub <2 x float> %9, %8
  %11 = load <2 x float>, ptr %m_x6, align 4, !tbaa !137
  %12 = fsub <2 x float> %11, %8
  %13 = load <2 x float>, ptr %m_x12, align 4, !tbaa !137
  %14 = fsub <2 x float> %13, %8
  %arrayidx11.i122 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 0, i32 1, i32 0, i64 2
  %15 = load float, ptr %arrayidx11.i, align 4, !tbaa !137
  %sub14.i = fsub float %15, %o.sroa.13.0.copyload
  %16 = load float, ptr %arrayidx11.i122, align 4, !tbaa !137
  %sub14.i124 = fsub float %16, %o.sroa.13.0.copyload
  %17 = fsub <2 x float> %12, %10
  %sub14.i.i = fsub float %sub14.i112, %sub14.i
  %18 = extractelement <2 x float> %14, i64 0
  %19 = extractelement <2 x float> %10, i64 0
  %20 = fsub <2 x float> %14, %10
  %sub.i80.i = extractelement <2 x float> %20, i64 0
  %21 = extractelement <2 x float> %14, i64 1
  %22 = extractelement <2 x float> %10, i64 1
  %sub8.i83.i = fsub float %21, %22
  %sub14.i86.i = fsub float %sub14.i124, %sub14.i
  %23 = fneg float %sub14.i.i
  %neg.i.i.i = fmul float %sub8.i83.i, %23
  %24 = extractelement <2 x float> %17, i64 1
  %25 = tail call float @llvm.fmuladd.f32(float %24, float %sub14.i86.i, float %neg.i.i.i)
  %26 = extractelement <2 x float> %17, i64 0
  %27 = fneg float %26
  %neg19.i.i.i = fmul float %sub14.i86.i, %27
  %28 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %sub.i80.i, float %neg19.i.i.i)
  %29 = fneg float %24
  %neg30.i.i.i = fmul float %sub.i80.i, %29
  %30 = tail call float @llvm.fmuladd.f32(float %26, float %sub8.i83.i, float %neg30.i.i.i)
  %mul8.i.i.i = fmul float %28, %28
  %31 = tail call float @llvm.fmuladd.f32(float %25, float %25, float %mul8.i.i.i)
  %32 = tail call float @llvm.fmuladd.f32(float %30, float %30, float %31)
  %cmp.i = fcmp ogt float %32, 0x3E80000000000000
  br i1 %cmp.i, label %if.then.i, label %_ZL13ProjectOriginRK9btVector3S1_S1_RS_Rf.exit

if.then.i:                                        ; preds = %entry
  %sqrt.i = tail call float @llvm.sqrt.f32(float %32)
  %div.i.i = fdiv float 1.000000e+00, %sqrt.i
  %mul.i.i.i = fmul float %25, %div.i.i
  %mul4.i.i.i = fmul float %28, %div.i.i
  %mul8.i.i95.i = fmul float %30, %div.i.i
  %mul8.i.i103.i = fmul float %22, %mul4.i.i.i
  %33 = tail call float @llvm.fmuladd.f32(float %19, float %mul.i.i.i, float %mul8.i.i103.i)
  %34 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %mul8.i.i95.i, float %33)
  %mul.i = fmul float %34, %34
  %cmp13.i = fcmp olt float %mul.i, 0x47EFFFFFE0000000
  br i1 %cmp13.i, label %if.then14.i, label %_ZL13ProjectOriginRK9btVector3S1_S1_RS_Rf.exit

if.then14.i:                                      ; preds = %if.then.i
  %mul.i.i = fmul float %mul.i.i.i, %34
  %mul4.i.i = fmul float %mul4.i.i.i, %34
  %mul8.i.i = fmul float %mul8.i.i95.i, %34
  %retval.sroa.0.0.vec.insert.i106.i = insertelement <2 x float> undef, float %mul.i.i, i64 0
  %retval.sroa.0.4.vec.insert.i107.i = insertelement <2 x float> %retval.sroa.0.0.vec.insert.i106.i, float %mul4.i.i, i64 1
  %retval.sroa.3.12.vec.insert.i108.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i, i64 0
  %sub.i111.i = fsub float %19, %mul.i.i
  %sub8.i114.i = fsub float %22, %mul4.i.i
  %sub14.i117.i = fsub float %sub14.i, %mul8.i.i
  %35 = extractelement <2 x float> %12, i64 0
  %sub.i123.i = fsub float %35, %mul.i.i
  %36 = extractelement <2 x float> %12, i64 1
  %sub8.i126.i = fsub float %36, %mul4.i.i
  %sub14.i129.i = fsub float %sub14.i112, %mul8.i.i
  %37 = fneg float %sub14.i117.i
  %neg.i.i139.i = fmul float %sub8.i126.i, %37
  %38 = tail call float @llvm.fmuladd.f32(float %sub8.i114.i, float %sub14.i129.i, float %neg.i.i139.i)
  %39 = fneg float %sub.i111.i
  %neg19.i.i140.i = fmul float %sub14.i129.i, %39
  %40 = tail call float @llvm.fmuladd.f32(float %sub14.i117.i, float %sub.i123.i, float %neg19.i.i140.i)
  %41 = fneg float %sub8.i114.i
  %neg30.i.i141.i = fmul float %sub.i123.i, %41
  %42 = tail call float @llvm.fmuladd.f32(float %sub.i111.i, float %sub8.i126.i, float %neg30.i.i141.i)
  %mul8.i.i149.i = fmul float %28, %40
  %43 = tail call float @llvm.fmuladd.f32(float %38, float %25, float %mul8.i.i149.i)
  %44 = tail call float @llvm.fmuladd.f32(float %42, float %30, float %43)
  %cmp27.i = fcmp ogt float %44, 0.000000e+00
  br i1 %cmp27.i, label %land.lhs.true.i, label %if.else.i

land.lhs.true.i:                                  ; preds = %if.then14.i
  %sub.i164.i = fsub float %18, %mul.i.i
  %sub8.i167.i = fsub float %21, %mul4.i.i
  %sub14.i170.i = fsub float %sub14.i124, %mul8.i.i
  %45 = fneg float %sub14.i129.i
  %neg.i.i180.i = fmul float %sub8.i167.i, %45
  %46 = tail call float @llvm.fmuladd.f32(float %sub8.i126.i, float %sub14.i170.i, float %neg.i.i180.i)
  %47 = fneg float %sub.i123.i
  %neg19.i.i181.i = fmul float %sub14.i170.i, %47
  %48 = tail call float @llvm.fmuladd.f32(float %sub14.i129.i, float %sub.i164.i, float %neg19.i.i181.i)
  %49 = fneg float %sub8.i126.i
  %neg30.i.i182.i = fmul float %sub.i164.i, %49
  %50 = tail call float @llvm.fmuladd.f32(float %sub.i123.i, float %sub8.i167.i, float %neg30.i.i182.i)
  %mul8.i.i190.i = fmul float %28, %48
  %51 = tail call float @llvm.fmuladd.f32(float %46, float %25, float %mul8.i.i190.i)
  %52 = tail call float @llvm.fmuladd.f32(float %50, float %30, float %51)
  %cmp38.i = fcmp ogt float %52, 0.000000e+00
  br i1 %cmp38.i, label %land.rhs.i, label %if.else.i

land.rhs.i:                                       ; preds = %land.lhs.true.i
  %53 = fneg float %sub14.i170.i
  %neg.i.i221.i = fmul float %sub8.i114.i, %53
  %54 = tail call float @llvm.fmuladd.f32(float %sub8.i167.i, float %sub14.i117.i, float %neg.i.i221.i)
  %55 = fneg float %sub.i164.i
  %neg19.i.i222.i = fmul float %sub14.i117.i, %55
  %56 = tail call float @llvm.fmuladd.f32(float %sub14.i170.i, float %sub.i111.i, float %neg19.i.i222.i)
  %57 = fneg float %sub8.i167.i
  %neg30.i.i223.i = fmul float %sub.i111.i, %57
  %58 = tail call float @llvm.fmuladd.f32(float %sub.i164.i, float %sub8.i114.i, float %neg30.i.i223.i)
  %mul8.i.i231.i = fmul float %28, %56
  %59 = tail call float @llvm.fmuladd.f32(float %54, float %25, float %mul8.i.i231.i)
  %60 = tail call float @llvm.fmuladd.f32(float %58, float %30, float %59)
  %cmp49.i = fcmp ogt float %60, 0.000000e+00
  br i1 %cmp49.i, label %_ZL13ProjectOriginRK9btVector3S1_S1_RS_Rf.exit, label %if.else.i

if.else.i:                                        ; preds = %land.rhs.i, %land.lhs.true.i, %if.then14.i
  %mul8.i.i.i.i = fmul float %24, %24
  %61 = tail call float @llvm.fmuladd.f32(float %26, float %26, float %mul8.i.i.i.i)
  %62 = tail call float @llvm.fmuladd.f32(float %sub14.i.i, float %sub14.i.i, float %61)
  %cmp.i.i = fcmp ogt float %62, 0x3E80000000000000
  br i1 %cmp.i.i, label %if.then.i.i, label %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit.i

if.then.i.i:                                      ; preds = %if.else.i
  %mul8.i.i21.i.i = fmul float %22, %24
  %63 = tail call float @llvm.fmuladd.f32(float %19, float %26, float %mul8.i.i21.i.i)
  %64 = tail call float @llvm.fmuladd.f32(float %sub14.i, float %sub14.i.i, float %63)
  %fneg.i.i = fneg float %64
  %div.i236.i = fdiv float %fneg.i.i, %62
  %cmp.i.i.i = fcmp olt float %div.i236.i, 0.000000e+00
  %cmp1.i.i.i = fcmp ogt float %div.i236.i, 1.000000e+00
  %h.0.val.x.0.val.i.i.i = select i1 %cmp1.i.i.i, float 1.000000e+00, float %div.i236.i
  %cond5.i.i.i = select i1 %cmp.i.i.i, float 0.000000e+00, float %h.0.val.x.0.val.i.i.i
  %mul8.i.i239.i = fmul float %sub14.i.i, %cond5.i.i.i
  %65 = insertelement <2 x float> poison, float %cond5.i.i.i, i64 0
  %66 = shufflevector <2 x float> %65, <2 x float> poison, <2 x i32> zeroinitializer
  %67 = fmul <2 x float> %17, %66
  %68 = fadd <2 x float> %10, %67
  %add14.i.i.i = fadd float %sub14.i, %mul8.i.i239.i
  %69 = fmul <2 x float> %68, %68
  %mul8.i.i39.i.i = extractelement <2 x float> %69, i64 1
  %70 = extractelement <2 x float> %68, i64 0
  %71 = tail call float @llvm.fmuladd.f32(float %70, float %70, float %mul8.i.i39.i.i)
  %72 = tail call float @llvm.fmuladd.f32(float %add14.i.i.i, float %add14.i.i.i, float %71)
  %cmp12.i.i = fcmp olt float %72, 0x47EFFFFFE0000000
  br i1 %cmp12.i.i, label %if.then13.i.i, label %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit.i

if.then13.i.i:                                    ; preds = %if.then.i.i
  %retval.sroa.3.12.vec.insert.i35.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i.i, i64 0
  br label %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit.i

_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit.i:    ; preds = %if.then13.i.i, %if.then.i.i, %if.else.i
  %d.0 = phi float [ %72, %if.then13.i.i ], [ 0x47EFFFFFE0000000, %if.then.i.i ], [ 0x47EFFFFFE0000000, %if.else.i ]
  %p.sroa.0.0 = phi <2 x float> [ %68, %if.then13.i.i ], [ undef, %if.then.i.i ], [ undef, %if.else.i ]
  %p.sroa.9.0 = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i35.i.i, %if.then13.i.i ], [ undef, %if.then.i.i ], [ undef, %if.else.i ]
  %73 = fsub <2 x float> %14, %12
  %sub14.i.i246.i = fsub float %sub14.i124, %sub14.i112
  %74 = extractelement <2 x float> %73, i64 1
  %mul8.i.i.i247.i = fmul float %74, %74
  %75 = extractelement <2 x float> %73, i64 0
  %76 = tail call float @llvm.fmuladd.f32(float %75, float %75, float %mul8.i.i.i247.i)
  %77 = tail call float @llvm.fmuladd.f32(float %sub14.i.i246.i, float %sub14.i.i246.i, float %76)
  %cmp.i248.i = fcmp ogt float %77, 0x3E80000000000000
  br i1 %cmp.i248.i, label %if.then.i264.i, label %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit270.i

if.then.i264.i:                                   ; preds = %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit.i
  %mul8.i.i21.i249.i = fmul float %36, %74
  %78 = tail call float @llvm.fmuladd.f32(float %35, float %75, float %mul8.i.i21.i249.i)
  %79 = tail call float @llvm.fmuladd.f32(float %sub14.i112, float %sub14.i.i246.i, float %78)
  %fneg.i250.i = fneg float %79
  %div.i251.i = fdiv float %fneg.i250.i, %77
  %cmp.i.i252.i = fcmp olt float %div.i251.i, 0.000000e+00
  %cmp1.i.i253.i = fcmp ogt float %div.i251.i, 1.000000e+00
  %h.0.val.x.0.val.i.i254.i = select i1 %cmp1.i.i253.i, float 1.000000e+00, float %div.i251.i
  %cond5.i.i255.i = select i1 %cmp.i.i252.i, float 0.000000e+00, float %h.0.val.x.0.val.i.i254.i
  %mul8.i.i258.i = fmul float %sub14.i.i246.i, %cond5.i.i255.i
  %80 = insertelement <2 x float> poison, float %cond5.i.i255.i, i64 0
  %81 = shufflevector <2 x float> %80, <2 x float> poison, <2 x i32> zeroinitializer
  %82 = fmul <2 x float> %73, %81
  %83 = fadd <2 x float> %12, %82
  %add14.i.i261.i = fadd float %sub14.i112, %mul8.i.i258.i
  %84 = fmul <2 x float> %83, %83
  %mul8.i.i39.i262.i = extractelement <2 x float> %84, i64 1
  %85 = extractelement <2 x float> %83, i64 0
  %86 = tail call float @llvm.fmuladd.f32(float %85, float %85, float %mul8.i.i39.i262.i)
  %87 = tail call float @llvm.fmuladd.f32(float %add14.i.i261.i, float %add14.i.i261.i, float %86)
  %cmp12.i263.i = fcmp olt float %87, %d.0
  br i1 %cmp12.i263.i, label %if.then13.i269.i, label %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit270.i

if.then13.i269.i:                                 ; preds = %if.then.i264.i
  %retval.sroa.3.12.vec.insert.i35.i265.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i261.i, i64 0
  br label %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit270.i

_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit270.i: ; preds = %if.then13.i269.i, %if.then.i264.i, %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit.i
  %d.1 = phi float [ %87, %if.then13.i269.i ], [ %d.0, %if.then.i264.i ], [ %d.0, %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit.i ]
  %p.sroa.0.1 = phi <2 x float> [ %83, %if.then13.i269.i ], [ %p.sroa.0.0, %if.then.i264.i ], [ %p.sroa.0.0, %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit.i ]
  %p.sroa.9.1 = phi <2 x float> [ %retval.sroa.3.12.vec.insert.i35.i265.i, %if.then13.i269.i ], [ %p.sroa.9.0, %if.then.i264.i ], [ %p.sroa.9.0, %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit.i ]
  %88 = fsub <2 x float> %10, %14
  %sub14.i.i277.i = fsub float %sub14.i, %sub14.i124
  %89 = extractelement <2 x float> %88, i64 1
  %mul8.i.i.i278.i = fmul float %89, %89
  %90 = extractelement <2 x float> %88, i64 0
  %91 = tail call float @llvm.fmuladd.f32(float %90, float %90, float %mul8.i.i.i278.i)
  %92 = tail call float @llvm.fmuladd.f32(float %sub14.i.i277.i, float %sub14.i.i277.i, float %91)
  %cmp.i279.i = fcmp ogt float %92, 0x3E80000000000000
  br i1 %cmp.i279.i, label %if.then.i295.i, label %_ZL13ProjectOriginRK9btVector3S1_S1_RS_Rf.exit

if.then.i295.i:                                   ; preds = %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit270.i
  %mul8.i.i21.i280.i = fmul float %21, %89
  %93 = tail call float @llvm.fmuladd.f32(float %18, float %90, float %mul8.i.i21.i280.i)
  %94 = tail call float @llvm.fmuladd.f32(float %sub14.i124, float %sub14.i.i277.i, float %93)
  %fneg.i281.i = fneg float %94
  %div.i282.i = fdiv float %fneg.i281.i, %92
  %cmp.i.i283.i = fcmp olt float %div.i282.i, 0.000000e+00
  %cmp1.i.i284.i = fcmp ogt float %div.i282.i, 1.000000e+00
  %h.0.val.x.0.val.i.i285.i = select i1 %cmp1.i.i284.i, float 1.000000e+00, float %div.i282.i
  %cond5.i.i286.i = select i1 %cmp.i.i283.i, float 0.000000e+00, float %h.0.val.x.0.val.i.i285.i
  %mul8.i.i289.i = fmul float %sub14.i.i277.i, %cond5.i.i286.i
  %95 = insertelement <2 x float> poison, float %cond5.i.i286.i, i64 0
  %96 = shufflevector <2 x float> %95, <2 x float> poison, <2 x i32> zeroinitializer
  %97 = fmul <2 x float> %88, %96
  %98 = fadd <2 x float> %14, %97
  %add14.i.i292.i = fadd float %sub14.i124, %mul8.i.i289.i
  %99 = fmul <2 x float> %98, %98
  %mul8.i.i39.i293.i = extractelement <2 x float> %99, i64 1
  %100 = extractelement <2 x float> %98, i64 0
  %101 = tail call float @llvm.fmuladd.f32(float %100, float %100, float %mul8.i.i39.i293.i)
  %102 = tail call float @llvm.fmuladd.f32(float %add14.i.i292.i, float %add14.i.i292.i, float %101)
  %cmp12.i294.i = fcmp olt float %102, %d.1
  br i1 %cmp12.i294.i, label %if.then13.i300.i, label %_ZL13ProjectOriginRK9btVector3S1_S1_RS_Rf.exit

if.then13.i300.i:                                 ; preds = %if.then.i295.i
  %retval.sroa.3.12.vec.insert.i35.i296.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %add14.i.i292.i, i64 0
  br label %_ZL13ProjectOriginRK9btVector3S1_S1_RS_Rf.exit

_ZL13ProjectOriginRK9btVector3S1_S1_RS_Rf.exit:   ; preds = %land.rhs.i, %if.then13.i300.i, %entry, %if.then.i, %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit270.i, %if.then.i295.i
  %d.2 = phi float [ %d.1, %if.then.i295.i ], [ %d.1, %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit270.i ], [ 0x47EFFFFFE0000000, %if.then.i ], [ 0x47EFFFFFE0000000, %entry ], [ %102, %if.then13.i300.i ], [ %mul.i, %land.rhs.i ]
  %p.sroa.0.2 = phi <2 x float> [ %p.sroa.0.1, %if.then.i295.i ], [ %p.sroa.0.1, %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit270.i ], [ undef, %if.then.i ], [ undef, %entry ], [ %98, %if.then13.i300.i ], [ %retval.sroa.0.4.vec.insert.i107.i, %land.rhs.i ]
  %p.sroa.9.2 = phi <2 x float> [ %p.sroa.9.1, %if.then.i295.i ], [ %p.sroa.9.1, %_ZL13ProjectOriginRK9btVector3S1_RS_Rf.exit270.i ], [ undef, %if.then.i ], [ undef, %entry ], [ %retval.sroa.3.12.vec.insert.i35.i296.i, %if.then13.i300.i ], [ %retval.sroa.3.12.vec.insert.i108.i, %land.rhs.i ]
  %mrg = getelementptr inbounds %"struct.btSoftColliders::CollideVF_SS", ptr %this, i64 0, i32 2
  %103 = load float, ptr %mrg, align 8, !tbaa !591
  %m_q = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 2
  %104 = load float, ptr %m_q, align 4, !tbaa !137
  %105 = extractelement <2 x float> %8, i64 0
  %sub.i130 = fsub float %105, %104
  %arrayidx7.i132 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 2, i32 0, i64 1
  %106 = load float, ptr %arrayidx7.i132, align 4, !tbaa !137
  %107 = extractelement <2 x float> %8, i64 1
  %sub8.i133 = fsub float %107, %106
  %arrayidx13.i135 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 2, i32 0, i64 2
  %108 = load float, ptr %arrayidx13.i135, align 4, !tbaa !137
  %sub14.i136 = fsub float %o.sroa.13.0.copyload, %108
  %mul8.i.i.i142 = fmul float %sub8.i133, %sub8.i133
  %109 = tail call float @llvm.fmuladd.f32(float %sub.i130, float %sub.i130, float %mul8.i.i.i142)
  %110 = tail call float @llvm.fmuladd.f32(float %sub14.i136, float %sub14.i136, float %109)
  %sqrt.i143 = tail call float @llvm.sqrt.f32(float %110)
  %111 = tail call float @llvm.fmuladd.f32(float %sqrt.i143, float 2.000000e+00, float %103)
  %mul = fmul float %111, %111
  %cmp = fcmp olt float %d.2, %mul
  br i1 %cmp, label %if.then, label %if.end84

if.then:                                          ; preds = %_ZL13ProjectOriginRK9btVector3S1_S1_RS_Rf.exit
  %112 = fadd <2 x float> %8, %p.sroa.0.2
  %113 = fadd <2 x float> %8, %p.sroa.0.2
  %p.sroa.9.8.vec.extract = extractelement <2 x float> %p.sroa.9.2, i64 0
  %add14.i = fadd float %o.sroa.13.0.copyload, %p.sroa.9.8.vec.extract
  %114 = fsub <2 x float> %9, %112
  %sub.i.i153 = extractelement <2 x float> %114, i64 0
  %115 = fsub <2 x float> %11, %113
  %sub8.i57.i = extractelement <2 x float> %115, i64 1
  %sub14.i60.i = fsub float %6, %add14.i
  %116 = fneg float %sub.i.i153
  %neg19.i.i.i161 = fmul float %sub14.i60.i, %116
  %117 = insertelement <2 x float> poison, float %16, i64 0
  %118 = insertelement <2 x float> %117, float %15, i64 1
  %119 = insertelement <2 x float> poison, float %add14.i, i64 0
  %120 = shufflevector <2 x float> %119, <2 x float> poison, <2 x i32> zeroinitializer
  %121 = fsub <2 x float> %118, %120
  %122 = extractelement <2 x float> %121, i64 1
  %123 = fneg float %122
  %neg.i.i.i160 = fmul float %sub8.i57.i, %123
  %124 = shufflevector <2 x float> %13, <2 x float> %9, <2 x i32> <i32 1, i32 3>
  %125 = shufflevector <2 x float> %113, <2 x float> undef, <2 x i32> <i32 1, i32 1>
  %126 = fsub <2 x float> %124, %125
  %127 = extractelement <2 x float> %126, i64 1
  %128 = tail call float @llvm.fmuladd.f32(float %127, float %sub14.i60.i, float %neg.i.i.i160)
  %129 = shufflevector <2 x float> %11, <2 x float> %13, <2 x i32> <i32 0, i32 2>
  %130 = shufflevector <2 x float> %112, <2 x float> poison, <2 x i32> zeroinitializer
  %131 = fsub <2 x float> %129, %130
  %132 = extractelement <2 x float> %131, i64 0
  %133 = tail call float @llvm.fmuladd.f32(float %122, float %132, float %neg19.i.i.i161)
  %134 = fneg float %127
  %neg30.i.i.i162 = fmul float %132, %134
  %135 = tail call float @llvm.fmuladd.f32(float %sub.i.i153, float %sub8.i57.i, float %neg30.i.i.i162)
  %mul8.i.i.i.i163 = fmul float %133, %133
  %136 = tail call float @llvm.fmuladd.f32(float %128, float %128, float %mul8.i.i.i.i163)
  %137 = tail call float @llvm.fmuladd.f32(float %135, float %135, float %136)
  %sqrt.i.i = tail call float @llvm.sqrt.f32(float %137)
  %138 = shufflevector <2 x float> %121, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %139 = insertelement <2 x float> %138, float %sub14.i60.i, i64 0
  %140 = fneg <2 x float> %139
  %141 = fmul <2 x float> %126, %140
  %142 = shufflevector <2 x float> %126, <2 x float> poison, <2 x i32> <i32 poison, i32 0>
  %143 = shufflevector <2 x float> %142, <2 x float> %115, <2 x i32> <i32 3, i32 1>
  %144 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %143, <2 x float> %121, <2 x float> %141)
  %145 = fneg <2 x float> %131
  %146 = fmul <2 x float> %121, %145
  %147 = shufflevector <2 x float> %131, <2 x float> poison, <2 x i32> <i32 1, i32 poison>
  %148 = shufflevector <2 x float> %147, <2 x float> %114, <2 x i32> <i32 0, i32 2>
  %149 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %139, <2 x float> %148, <2 x float> %146)
  %150 = fneg <2 x float> %143
  %151 = fmul <2 x float> %148, %150
  %152 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %131, <2 x float> %126, <2 x float> %151)
  %153 = fmul <2 x float> %149, %149
  %154 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %144, <2 x float> %144, <2 x float> %153)
  %155 = tail call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %152, <2 x float> %152, <2 x float> %154)
  %156 = tail call <2 x float> @llvm.sqrt.v2f32(<2 x float> %155)
  %157 = extractelement <2 x float> %156, i64 0
  %add.i164 = fadd float %sqrt.i.i, %157
  %158 = extractelement <2 x float> %156, i64 1
  %add31.i = fadd float %158, %add.i164
  %div.i = fdiv float 1.000000e+00, %add31.i
  %159 = insertelement <2 x float> poison, float %div.i, i64 0
  %160 = shufflevector <2 x float> %159, <2 x float> poison, <2 x i32> zeroinitializer
  %161 = fmul <2 x float> %156, %160
  %mul39.i = fmul float %sqrt.i.i, %div.i
  %retval.sroa.3.12.vec.insert.i168 = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul39.i, i64 0
  %m_im = getelementptr inbounds %"struct.btSoftBody::Node", ptr %1, i64 0, i32 6
  %162 = load float, ptr %m_im, align 8, !tbaa !175
  %m_im38 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %4, i64 0, i32 6
  %m_im40 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %5, i64 0, i32 6
  %m_im42 = getelementptr inbounds %"struct.btSoftBody::Node", ptr %7, i64 0, i32 6
  %m_im38.val = load float, ptr %m_im38, align 4, !tbaa !137
  %m_im40.val = load float, ptr %m_im40, align 4, !tbaa !137
  %m_im42.val = load float, ptr %m_im42, align 4, !tbaa !137
  %163 = extractelement <2 x float> %161, i64 1
  %mul2.i = fmul float %163, %m_im40.val
  %164 = extractelement <2 x float> %161, i64 0
  %165 = tail call float @llvm.fmuladd.f32(float %m_im38.val, float %164, float %mul2.i)
  %166 = tail call float @llvm.fmuladd.f32(float %m_im42.val, float %mul39.i, float %165)
  %cmp46 = fcmp ugt float %m_im38.val, 0.000000e+00
  %cmp49 = fcmp ugt float %m_im40.val, 0.000000e+00
  %or.cond = select i1 %cmp46, i1 %cmp49, i1 false
  %cmp53 = fcmp ugt float %m_im42.val, 0.000000e+00
  %or.cond227 = select i1 %or.cond, i1 %cmp53, i1 false
  %mb.0 = select i1 %or.cond227, float %166, float 0.000000e+00
  %add = fadd float %162, %mb.0
  %cmp55 = fcmp ogt float %add, 0.000000e+00
  br i1 %cmp55, label %if.then56, label %if.end84

if.then56:                                        ; preds = %if.then
  %call.i = tail call float @sqrtf(float noundef %d.2) #38
  %div.i171 = fdiv float -1.000000e+00, %call.i
  %167 = insertelement <2 x float> poison, float %div.i171, i64 0
  %168 = shufflevector <2 x float> %167, <2 x float> poison, <2 x i32> zeroinitializer
  %169 = fmul <2 x float> %p.sroa.0.2, %168
  %mul8.i.i175 = fmul float %p.sroa.9.8.vec.extract, %div.i171
  %retval.sroa.3.12.vec.insert.i.i = insertelement <2 x float> <float poison, float 0.000000e+00>, float %mul8.i.i175, i64 0
  %psb = getelementptr inbounds %"struct.btSoftColliders::CollideVF_SS", ptr %this, i64 0, i32 1
  %170 = load ptr, ptr %psb, align 8, !tbaa !219
  %kDF = getelementptr inbounds %class.btSoftBody, ptr %170, i64 0, i32 2, i32 7
  %arrayidx64 = getelementptr inbounds %"struct.btSoftColliders::CollideVF_SS", ptr %this, i64 0, i32 1, i64 1
  %171 = load ptr, ptr %arrayidx64, align 8, !tbaa !219
  %kDF66 = getelementptr inbounds %class.btSoftBody, ptr %171, i64 0, i32 2, i32 7
  %172 = load float, ptr %kDF, align 4
  %173 = load float, ptr %kDF66, align 4
  %cmp.i176 = fcmp ogt float %172, %173
  %174 = select i1 %cmp.i176, float %172, float %173
  %175 = insertelement <2 x float> poison, float %162, i64 0
  %176 = insertelement <2 x float> %175, float %mb.0, i64 1
  %177 = insertelement <2 x float> poison, float %add, i64 0
  %178 = shufflevector <2 x float> %177, <2 x float> poison, <2 x i32> zeroinitializer
  %179 = fdiv <2 x float> %176, %178
  %kSHR = getelementptr inbounds %class.btSoftBody, ptr %170, i64 0, i32 2, i32 11
  %kSHR77 = getelementptr inbounds %class.btSoftBody, ptr %171, i64 0, i32 2, i32 11
  %180 = load float, ptr %kSHR, align 4, !tbaa !615
  %181 = load float, ptr %kSHR77, align 4, !tbaa !615
  %182 = insertelement <2 x float> poison, float %180, i64 0
  %183 = insertelement <2 x float> %182, float %181, i64 1
  %184 = fmul <2 x float> %179, %183
  %m_size.i.i = getelementptr inbounds %class.btSoftBody, ptr %170, i64 0, i32 15, i32 2
  %185 = load i32, ptr %m_size.i.i, align 4, !tbaa !112
  %m_capacity.i.i = getelementptr inbounds %class.btSoftBody, ptr %170, i64 0, i32 15, i32 3
  %186 = load i32, ptr %m_capacity.i.i, align 8, !tbaa !113
  %cmp.i177 = icmp eq i32 %185, %186
  br i1 %cmp.i177, label %if.then.i180, label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE9push_backERKS1_.exit

if.then.i180:                                     ; preds = %if.then56
  %tobool.not.i.i = icmp eq i32 %185, 0
  %mul.i.i178 = shl nsw i32 %185, 1
  %cond.i.i = select i1 %tobool.not.i.i, i32 1, i32 %mul.i.i178
  %cmp.i.i179 = icmp slt i32 %185, %cond.i.i
  br i1 %cmp.i.i179, label %if.then.i.i181, label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE9push_backERKS1_.exit

if.then.i.i181:                                   ; preds = %if.then.i180
  %tobool.not.i.i.i = icmp eq i32 %cond.i.i, 0
  br i1 %tobool.not.i.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE8allocateEi.exit.i.i, label %if.then.i.i.i

if.then.i.i.i:                                    ; preds = %if.then.i.i181
  %conv.i.i.i.i = sext i32 %cond.i.i to i64
  %mul.i.i.i.i = shl nsw i64 %conv.i.i.i.i, 6
  %call.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i, i32 noundef 16)
  %.pre.i182 = load i32, ptr %m_size.i.i, align 4, !tbaa !112
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE8allocateEi.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE8allocateEi.exit.i.i: ; preds = %if.then.i.i.i, %if.then.i.i181
  %187 = phi i32 [ %.pre.i182, %if.then.i.i.i ], [ %185, %if.then.i.i181 ]
  %retval.0.i.i.i = phi ptr [ %call.i.i.i.i, %if.then.i.i.i ], [ null, %if.then.i.i181 ]
  %cmp7.i.i.i = icmp sgt i32 %187, 0
  br i1 %cmp7.i.i.i, label %for.body.lr.ph.i.i.i, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i

for.body.lr.ph.i.i.i:                             ; preds = %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE8allocateEi.exit.i.i
  %m_data.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %170, i64 0, i32 15, i32 5
  %wide.trip.count.i.i.i = zext i32 %187 to i64
  %xtraiter = and i64 %wide.trip.count.i.i.i, 1
  %188 = icmp eq i32 %187, 1
  br i1 %188, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.lr.ph.i.i.i.new

for.body.lr.ph.i.i.i.new:                         ; preds = %for.body.lr.ph.i.i.i
  %unroll_iter = and i64 %wide.trip.count.i.i.i, 4294967294
  br label %for.body.i.i.i

for.body.i.i.i:                                   ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i.new
  %indvars.iv.i.i.i = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %niter = phi i64 [ 0, %for.body.lr.ph.i.i.i.new ], [ %niter.next.1, %for.body.i.i.i ]
  %arrayidx.i.i.i = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i
  %189 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !111
  %arrayidx3.i.i.i = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %189, i64 %indvars.iv.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %arrayidx.i.i.i, ptr noundef nonnull align 8 dereferenceable(64) %arrayidx3.i.i.i, i64 64, i1 false), !tbaa.struct !616
  %indvars.iv.next.i.i.i = or i64 %indvars.iv.i.i.i, 1
  %arrayidx.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %retval.0.i.i.i, i64 %indvars.iv.next.i.i.i
  %190 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !111
  %arrayidx3.i.i.i.1 = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %190, i64 %indvars.iv.next.i.i.i
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %arrayidx.i.i.i.1, ptr noundef nonnull align 8 dereferenceable(64) %arrayidx3.i.i.i.1, i64 64, i1 false), !tbaa.struct !616
  %indvars.iv.next.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i, 2
  %niter.next.1 = add i64 %niter, 2
  %niter.ncmp.1 = icmp eq i64 %niter.next.1, %unroll_iter
  br i1 %niter.ncmp.1, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, label %for.body.i.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa: ; preds = %for.body.i.i.i, %for.body.lr.ph.i.i.i
  %indvars.iv.i.i.i.unr = phi i64 [ 0, %for.body.lr.ph.i.i.i ], [ %indvars.iv.next.i.i.i.1, %for.body.i.i.i ]
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i, label %for.body.i.i.i.epil

for.body.i.i.i.epil:                              ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa
  %arrayidx.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %retval.0.i.i.i, i64 %indvars.iv.i.i.i.unr
  %191 = load ptr, ptr %m_data.i.i.i, align 8, !tbaa !111
  %arrayidx3.i.i.i.epil = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %191, i64 %indvars.iv.i.i.i.unr
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 8 dereferenceable(64) %arrayidx.i.i.i.epil, ptr noundef nonnull align 8 dereferenceable(64) %arrayidx3.i.i.i.epil, i64 64, i1 false), !tbaa.struct !616
  br label %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i

_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i: ; preds = %for.body.i.i.i.epil, %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i.loopexit.unr-lcssa, %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE8allocateEi.exit.i.i
  %m_data.i9.i.i = getelementptr inbounds %class.btSoftBody, ptr %170, i64 0, i32 15, i32 5
  %192 = load ptr, ptr %m_data.i9.i.i, align 8, !tbaa !111
  %tobool.not.i10.i.i = icmp eq ptr %192, null
  %m_ownsMemory.i.i.i = getelementptr inbounds %class.btSoftBody, ptr %170, i64 0, i32 15, i32 6
  %193 = load i8, ptr %m_ownsMemory.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i = icmp eq i8 %193, 0
  %or.cond.i.i = select i1 %tobool.not.i10.i.i, i1 true, i1 %tobool2.not.i.i.i
  br i1 %or.cond.i.i, label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE10deallocateEv.exit.i.i, label %if.then3.i.i.i

if.then3.i.i.i:                                   ; preds = %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %192)
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE10deallocateEv.exit.i.i

_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE10deallocateEv.exit.i.i: ; preds = %if.then3.i.i.i, %_ZNK20btAlignedObjectArrayIN10btSoftBody8SContactEE4copyEiiPS1_.exit.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i, align 8, !tbaa !110
  store ptr %retval.0.i.i.i, ptr %m_data.i9.i.i, align 8, !tbaa !111
  store i32 %cond.i.i, ptr %m_capacity.i.i, align 8, !tbaa !113
  %.pre7.i = load i32, ptr %m_size.i.i, align 4, !tbaa !112
  br label %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE9push_backERKS1_.exit

_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE9push_backERKS1_.exit: ; preds = %if.then56, %if.then.i180, %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE10deallocateEv.exit.i.i
  %194 = phi i32 [ %.pre7.i, %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE10deallocateEv.exit.i.i ], [ %185, %if.then.i180 ], [ %185, %if.then56 ]
  %m_data.i = getelementptr inbounds %class.btSoftBody, ptr %170, i64 0, i32 15, i32 5
  %195 = load ptr, ptr %m_data.i, align 8, !tbaa !111
  %idxprom.i = sext i32 %194 to i64
  %arrayidx.i = getelementptr inbounds %"struct.btSoftBody::SContact", ptr %195, i64 %idxprom.i
  store ptr %1, ptr %arrayidx.i, align 8, !tbaa.struct !616
  %c.sroa.4.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 8
  store ptr %3, ptr %c.sroa.4.0.arrayidx.i.sroa_idx, align 8, !tbaa.struct !617
  %c.sroa.5.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 16
  store <2 x float> %161, ptr %c.sroa.5.0.arrayidx.i.sroa_idx, align 8, !tbaa.struct !618
  %c.sroa.5.sroa.4.0.c.sroa.5.0.arrayidx.i.sroa_idx.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 24
  store <2 x float> %retval.sroa.3.12.vec.insert.i168, ptr %c.sroa.5.sroa.4.0.c.sroa.5.0.arrayidx.i.sroa_idx.sroa_idx, align 8, !tbaa.struct !619
  %c.sroa.6.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 32
  store <2 x float> %169, ptr %c.sroa.6.0.arrayidx.i.sroa_idx, align 8, !tbaa.struct !620
  %c.sroa.7.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 40
  store <2 x float> %retval.sroa.3.12.vec.insert.i.i, ptr %c.sroa.7.0.arrayidx.i.sroa_idx, align 8, !tbaa.struct !621
  %c.sroa.8.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 48
  store float %111, ptr %c.sroa.8.0.arrayidx.i.sroa_idx, align 8, !tbaa.struct !622
  %c.sroa.9.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 52
  store float %174, ptr %c.sroa.9.0.arrayidx.i.sroa_idx, align 4, !tbaa.struct !623
  %c.sroa.10.0.arrayidx.i.sroa_idx = getelementptr inbounds i8, ptr %arrayidx.i, i64 56
  store <2 x float> %184, ptr %c.sroa.10.0.arrayidx.i.sroa_idx, align 8
  %196 = load i32, ptr %m_size.i.i, align 4, !tbaa !112
  %inc.i = add nsw i32 %196, 1
  store i32 %inc.i, ptr %m_size.i.i, align 4, !tbaa !112
  br label %if.end84

if.end84:                                         ; preds = %if.then, %_ZN20btAlignedObjectArrayIN10btSoftBody8SContactEE9push_backERKS1_.exit, %_ZL13ProjectOriginRK9btVector3S1_S1_RS_Rf.exit
  ret void
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #32

; Function Attrs: inlinehint uwtable
define linkonce_odr dso_local void @_ZN20btAlignedObjectArrayI9NodeLinksE7reserveEi(ptr noundef nonnull align 8 dereferenceable(25) %this, i32 noundef %_Count) local_unnamed_addr #8 comdat align 2 {
entry:
  %m_capacity.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 3
  %0 = load i32, ptr %m_capacity.i, align 8, !tbaa !328
  %cmp = icmp slt i32 %0, %_Count
  br i1 %cmp, label %if.then, label %if.end

if.then:                                          ; preds = %entry
  %tobool.not.i = icmp eq i32 %_Count, 0
  br i1 %tobool.not.i, label %_ZN20btAlignedObjectArrayI9NodeLinksE8allocateEi.exit, label %if.then.i

if.then.i:                                        ; preds = %if.then
  %conv.i.i = sext i32 %_Count to i64
  %mul.i.i = shl nsw i64 %conv.i.i, 5
  %call.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i, i32 noundef 16)
  br label %_ZN20btAlignedObjectArrayI9NodeLinksE8allocateEi.exit

_ZN20btAlignedObjectArrayI9NodeLinksE8allocateEi.exit: ; preds = %if.then, %if.then.i
  %retval.0.i = phi ptr [ %call.i.i, %if.then.i ], [ null, %if.then ]
  %m_size.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 2
  %1 = load i32, ptr %m_size.i, align 4, !tbaa !327
  %cmp7.i = icmp sgt i32 %1, 0
  br i1 %cmp7.i, label %for.body.lr.ph.i, label %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit

for.body.lr.ph.i:                                 ; preds = %_ZN20btAlignedObjectArrayI9NodeLinksE8allocateEi.exit
  %m_data.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 5
  %zext = zext i32 %1 to i64
  br label %for.body.i

for.body.i:                                       ; preds = %_ZN9NodeLinksC2ERKS_.exit.i, %for.body.lr.ph.i
  %indvars.iv.i = phi i64 [ 0, %for.body.lr.ph.i ], [ %indvars.iv.next.i, %_ZN9NodeLinksC2ERKS_.exit.i ]
  %arrayidx.i = getelementptr inbounds %struct.NodeLinks, ptr %retval.0.i, i64 %indvars.iv.i
  %2 = load ptr, ptr %m_data.i, align 8, !tbaa !326
  %arrayidx3.i = getelementptr inbounds %struct.NodeLinks, ptr %2, i64 %indvars.iv.i
  %m_ownsMemory.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory.i.i.i.i, align 8, !tbaa !130
  %m_data.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i, i64 0, i32 5
  store ptr null, ptr %m_data.i.i.i.i, align 8, !tbaa !131
  %m_size.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i, i64 0, i32 2
  store i32 0, ptr %m_size.i.i.i.i, align 4, !tbaa !132
  %m_capacity.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i.i, align 8, !tbaa !133
  %m_size.i4.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx3.i, i64 0, i32 2
  %3 = load i32, ptr %m_size.i4.i.i.i, align 4, !tbaa !132
  %or.cond.i.i.i = icmp slt i32 %3, 1
  br i1 %or.cond.i.i.i, label %_ZN20btAlignedObjectArrayIiE6resizeEiRKi.exit.thread.i.i.i, label %if.then.i.i.i.i.i.i

if.then.i.i.i.i.i.i:                              ; preds = %for.body.i
  %conv.i.i.i.i.i.i.i = zext i32 %3 to i64
  %mul.i.i.i.i.i.i.i = shl nuw nsw i64 %conv.i.i.i.i.i.i.i, 2
  %call.i.i.i.i.i.i.i = tail call noundef ptr @_Z22btAlignedAllocInternalmi(i64 noundef %mul.i.i.i.i.i.i.i, i32 noundef 16)
  %call.i.i.i.i.i.i.i22 = ptrtoint ptr %call.i.i.i.i.i.i.i to i64
  %.pre.i.i.i.i = load i32, ptr %m_size.i.i.i.i, align 4, !tbaa !132
  %cmp7.i.i.i.i.i.i = icmp sgt i32 %.pre.i.i.i.i, 0
  %4 = load ptr, ptr %m_data.i.i.i.i, align 8, !tbaa !131
  br i1 %cmp7.i.i.i.i.i.i, label %for.body.lr.ph.i.i.i.i.i.i, label %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i.i.i

for.body.lr.ph.i.i.i.i.i.i:                       ; preds = %if.then.i.i.i.i.i.i
  %5 = ptrtoint ptr %4 to i64
  %wide.trip.count.i.i.i.i.i.i = zext i32 %.pre.i.i.i.i to i64
  %min.iters.check28 = icmp ult i32 %.pre.i.i.i.i, 8
  %6 = sub i64 %call.i.i.i.i.i.i.i22, %5
  %diff.check25 = icmp ult i64 %6, 32
  %or.cond39 = select i1 %min.iters.check28, i1 true, i1 %diff.check25
  br i1 %or.cond39, label %for.body.i.i.i.i.i.i.preheader, label %vector.ph29

vector.ph29:                                      ; preds = %for.body.lr.ph.i.i.i.i.i.i
  %n.vec31 = and i64 %wide.trip.count.i.i.i.i.i.i, 4294967288
  br label %vector.body34

vector.body34:                                    ; preds = %vector.body34, %vector.ph29
  %index35 = phi i64 [ 0, %vector.ph29 ], [ %index.next38, %vector.body34 ]
  %7 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %index35
  %8 = getelementptr inbounds i32, ptr %4, i64 %index35
  %wide.load36 = load <4 x i32>, ptr %8, align 4, !tbaa !140
  %9 = getelementptr inbounds i32, ptr %8, i64 4
  %wide.load37 = load <4 x i32>, ptr %9, align 4, !tbaa !140
  store <4 x i32> %wide.load36, ptr %7, align 4, !tbaa !140
  %10 = getelementptr inbounds i32, ptr %7, i64 4
  store <4 x i32> %wide.load37, ptr %10, align 4, !tbaa !140
  %index.next38 = add nuw i64 %index35, 8
  %11 = icmp eq i64 %index.next38, %n.vec31
  br i1 %11, label %middle.block26, label %vector.body34, !llvm.loop !624

middle.block26:                                   ; preds = %vector.body34
  %cmp.n33 = icmp eq i64 %n.vec31, %wide.trip.count.i.i.i.i.i.i
  br i1 %cmp.n33, label %if.then.i11.i.i.i.i.i, label %for.body.i.i.i.i.i.i.preheader

for.body.i.i.i.i.i.i.preheader:                   ; preds = %for.body.lr.ph.i.i.i.i.i.i, %middle.block26
  %indvars.iv.i.i.i.i.i.i.ph = phi i64 [ 0, %for.body.lr.ph.i.i.i.i.i.i ], [ %n.vec31, %middle.block26 ]
  %12 = xor i64 %indvars.iv.i.i.i.i.i.i.ph, -1
  %13 = add nsw i64 %12, %wide.trip.count.i.i.i.i.i.i
  %xtraiter = and i64 %wide.trip.count.i.i.i.i.i.i, 3
  %lcmp.mod.not = icmp eq i64 %xtraiter, 0
  br i1 %lcmp.mod.not, label %for.body.i.i.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.i.i.prol

for.body.i.i.i.i.i.i.prol:                        ; preds = %for.body.i.i.i.i.i.i.preheader, %for.body.i.i.i.i.i.i.prol
  %indvars.iv.i.i.i.i.i.i.prol = phi i64 [ %indvars.iv.next.i.i.i.i.i.i.prol, %for.body.i.i.i.i.i.i.prol ], [ %indvars.iv.i.i.i.i.i.i.ph, %for.body.i.i.i.i.i.i.preheader ]
  %prol.iter = phi i64 [ %prol.iter.next, %for.body.i.i.i.i.i.i.prol ], [ 0, %for.body.i.i.i.i.i.i.preheader ]
  %arrayidx.i.i.i.i.i.i.prol = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.i.i.i.i.i.i.prol
  %arrayidx3.i.i.i.i.i.i.prol = getelementptr inbounds i32, ptr %4, i64 %indvars.iv.i.i.i.i.i.i.prol
  %14 = load i32, ptr %arrayidx3.i.i.i.i.i.i.prol, align 4, !tbaa !140
  store i32 %14, ptr %arrayidx.i.i.i.i.i.i.prol, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i.i.prol = add nuw nsw i64 %indvars.iv.i.i.i.i.i.i.prol, 1
  %prol.iter.next = add i64 %prol.iter, 1
  %prol.iter.cmp.not = icmp eq i64 %prol.iter.next, %xtraiter
  br i1 %prol.iter.cmp.not, label %for.body.i.i.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.i.i.prol, !llvm.loop !625

for.body.i.i.i.i.i.i.prol.loopexit:               ; preds = %for.body.i.i.i.i.i.i.prol, %for.body.i.i.i.i.i.i.preheader
  %indvars.iv.i.i.i.i.i.i.unr = phi i64 [ %indvars.iv.i.i.i.i.i.i.ph, %for.body.i.i.i.i.i.i.preheader ], [ %indvars.iv.next.i.i.i.i.i.i.prol, %for.body.i.i.i.i.i.i.prol ]
  %15 = icmp ult i64 %13, 3
  br i1 %15, label %if.then.i11.i.i.i.i.i, label %for.body.i.i.i.i.i.i

for.body.i.i.i.i.i.i:                             ; preds = %for.body.i.i.i.i.i.i.prol.loopexit, %for.body.i.i.i.i.i.i
  %indvars.iv.i.i.i.i.i.i = phi i64 [ %indvars.iv.next.i.i.i.i.i.i.3, %for.body.i.i.i.i.i.i ], [ %indvars.iv.i.i.i.i.i.i.unr, %for.body.i.i.i.i.i.i.prol.loopexit ]
  %arrayidx.i.i.i.i.i.i = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.i.i.i.i.i.i
  %arrayidx3.i.i.i.i.i.i = getelementptr inbounds i32, ptr %4, i64 %indvars.iv.i.i.i.i.i.i
  %16 = load i32, ptr %arrayidx3.i.i.i.i.i.i, align 4, !tbaa !140
  store i32 %16, ptr %arrayidx.i.i.i.i.i.i, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i.i = add nuw nsw i64 %indvars.iv.i.i.i.i.i.i, 1
  %arrayidx.i.i.i.i.i.i.1 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.next.i.i.i.i.i.i
  %arrayidx3.i.i.i.i.i.i.1 = getelementptr inbounds i32, ptr %4, i64 %indvars.iv.next.i.i.i.i.i.i
  %17 = load i32, ptr %arrayidx3.i.i.i.i.i.i.1, align 4, !tbaa !140
  store i32 %17, ptr %arrayidx.i.i.i.i.i.i.1, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i.i.1 = add nuw nsw i64 %indvars.iv.i.i.i.i.i.i, 2
  %arrayidx.i.i.i.i.i.i.2 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.next.i.i.i.i.i.i.1
  %arrayidx3.i.i.i.i.i.i.2 = getelementptr inbounds i32, ptr %4, i64 %indvars.iv.next.i.i.i.i.i.i.1
  %18 = load i32, ptr %arrayidx3.i.i.i.i.i.i.2, align 4, !tbaa !140
  store i32 %18, ptr %arrayidx.i.i.i.i.i.i.2, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i.i.2 = add nuw nsw i64 %indvars.iv.i.i.i.i.i.i, 3
  %arrayidx.i.i.i.i.i.i.3 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.next.i.i.i.i.i.i.2
  %arrayidx3.i.i.i.i.i.i.3 = getelementptr inbounds i32, ptr %4, i64 %indvars.iv.next.i.i.i.i.i.i.2
  %19 = load i32, ptr %arrayidx3.i.i.i.i.i.i.3, align 4, !tbaa !140
  store i32 %19, ptr %arrayidx.i.i.i.i.i.i.3, align 4, !tbaa !140
  %indvars.iv.next.i.i.i.i.i.i.3 = add nuw nsw i64 %indvars.iv.i.i.i.i.i.i, 4
  %exitcond.not.i.i.i.i.i.i.3 = icmp eq i64 %indvars.iv.next.i.i.i.i.i.i.3, %wide.trip.count.i.i.i.i.i.i
  br i1 %exitcond.not.i.i.i.i.i.i.3, label %if.then.i11.i.i.i.i.i, label %for.body.i.i.i.i.i.i, !llvm.loop !626

_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i.i.i: ; preds = %if.then.i.i.i.i.i.i
  %tobool.not.i10.i.i.i.i.i = icmp eq ptr %4, null
  %20 = load i8, ptr %m_ownsMemory.i.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i.i.i = icmp eq i8 %20, 0
  %or.cond11.i.i.i = select i1 %tobool.not.i10.i.i.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i.i.i
  br i1 %or.cond11.i.i.i, label %for.body10.lr.ph.i.i.i.i, label %if.then3.i.i.i.i.i.i

if.then.i11.i.i.i.i.i:                            ; preds = %for.body.i.i.i.i.i.i.prol.loopexit, %for.body.i.i.i.i.i.i, %middle.block26
  %.old.i.i.i = load i8, ptr %m_ownsMemory.i.i.i.i, align 8, !tbaa !130, !range !159, !noundef !192
  %tobool2.not.i.i.i.old.i.i.i = icmp eq i8 %.old.i.i.i, 0
  br i1 %tobool2.not.i.i.i.old.i.i.i, label %for.body10.lr.ph.i.i.i.i, label %if.then3.i.i.i.i.i.i

if.then3.i.i.i.i.i.i:                             ; preds = %if.then.i11.i.i.i.i.i, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i.i.i
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %4)
  br label %for.body10.lr.ph.i.i.i.i

for.body10.lr.ph.i.i.i.i:                         ; preds = %if.then3.i.i.i.i.i.i, %if.then.i11.i.i.i.i.i, %_ZNK20btAlignedObjectArrayIiE4copyEiiPi.exit.i.i.i.i.i
  store i8 1, ptr %m_ownsMemory.i.i.i.i, align 8, !tbaa !130
  store ptr %call.i.i.i.i.i.i.i, ptr %m_data.i.i.i.i, align 8, !tbaa !131
  store i32 %3, ptr %m_capacity.i.i.i.i, align 8, !tbaa !133
  %wide.trip.count.i.i.i.i = sext i32 %3 to i64
  %21 = shl nuw nsw i64 %wide.trip.count.i.i.i.i, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %call.i.i.i.i.i.i.i, i8 0, i64 %21, i1 false), !tbaa !140
  store i32 %3, ptr %m_size.i.i.i.i, align 4, !tbaa !132
  %m_data.i5.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx3.i, i64 0, i32 5
  %22 = load ptr, ptr %m_data.i5.i.i.i, align 8, !tbaa !131
  %min.iters.check = icmp ult i32 %3, 8
  %23 = ptrtoint ptr %22 to i64
  %24 = sub i64 %call.i.i.i.i.i.i.i22, %23
  %diff.check = icmp ult i64 %24, 32
  %or.cond41 = select i1 %min.iters.check, i1 true, i1 %diff.check
  br i1 %or.cond41, label %for.body.i.i.i.i.preheader, label %vector.ph

vector.ph:                                        ; preds = %for.body10.lr.ph.i.i.i.i
  %n.vec = and i64 %conv.i.i.i.i.i.i.i, 4294967288
  br label %vector.body

vector.body:                                      ; preds = %vector.body, %vector.ph
  %index = phi i64 [ 0, %vector.ph ], [ %index.next, %vector.body ]
  %25 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %index
  %26 = getelementptr inbounds i32, ptr %22, i64 %index
  %wide.load = load <4 x i32>, ptr %26, align 4, !tbaa !140
  %27 = getelementptr inbounds i32, ptr %26, i64 4
  %wide.load23 = load <4 x i32>, ptr %27, align 4, !tbaa !140
  store <4 x i32> %wide.load, ptr %25, align 4, !tbaa !140
  %28 = getelementptr inbounds i32, ptr %25, i64 4
  store <4 x i32> %wide.load23, ptr %28, align 4, !tbaa !140
  %index.next = add nuw i64 %index, 8
  %29 = icmp eq i64 %index.next, %n.vec
  br i1 %29, label %middle.block, label %vector.body, !llvm.loop !627

middle.block:                                     ; preds = %vector.body
  %cmp.n = icmp eq i64 %n.vec, %conv.i.i.i.i.i.i.i
  br i1 %cmp.n, label %_ZN9NodeLinksC2ERKS_.exit.i, label %for.body.i.i.i.i.preheader

for.body.i.i.i.i.preheader:                       ; preds = %for.body10.lr.ph.i.i.i.i, %middle.block
  %indvars.iv.i7.i.i.i.ph = phi i64 [ 0, %for.body10.lr.ph.i.i.i.i ], [ %n.vec, %middle.block ]
  %30 = xor i64 %indvars.iv.i7.i.i.i.ph, -1
  %31 = add nsw i64 %30, %conv.i.i.i.i.i.i.i
  %xtraiter42 = and i64 %conv.i.i.i.i.i.i.i, 3
  %lcmp.mod43.not = icmp eq i64 %xtraiter42, 0
  br i1 %lcmp.mod43.not, label %for.body.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.prol

for.body.i.i.i.i.prol:                            ; preds = %for.body.i.i.i.i.preheader, %for.body.i.i.i.i.prol
  %indvars.iv.i7.i.i.i.prol = phi i64 [ %indvars.iv.next.i8.i.i.i.prol, %for.body.i.i.i.i.prol ], [ %indvars.iv.i7.i.i.i.ph, %for.body.i.i.i.i.preheader ]
  %prol.iter44 = phi i64 [ %prol.iter44.next, %for.body.i.i.i.i.prol ], [ 0, %for.body.i.i.i.i.preheader ]
  %arrayidx.i.i.i.i.prol = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.i7.i.i.i.prol
  %arrayidx3.i.i.i.i.prol = getelementptr inbounds i32, ptr %22, i64 %indvars.iv.i7.i.i.i.prol
  %32 = load i32, ptr %arrayidx3.i.i.i.i.prol, align 4, !tbaa !140
  store i32 %32, ptr %arrayidx.i.i.i.i.prol, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i.i.prol = add nuw nsw i64 %indvars.iv.i7.i.i.i.prol, 1
  %prol.iter44.next = add i64 %prol.iter44, 1
  %prol.iter44.cmp.not = icmp eq i64 %prol.iter44.next, %xtraiter42
  br i1 %prol.iter44.cmp.not, label %for.body.i.i.i.i.prol.loopexit, label %for.body.i.i.i.i.prol, !llvm.loop !628

for.body.i.i.i.i.prol.loopexit:                   ; preds = %for.body.i.i.i.i.prol, %for.body.i.i.i.i.preheader
  %indvars.iv.i7.i.i.i.unr = phi i64 [ %indvars.iv.i7.i.i.i.ph, %for.body.i.i.i.i.preheader ], [ %indvars.iv.next.i8.i.i.i.prol, %for.body.i.i.i.i.prol ]
  %33 = icmp ult i64 %31, 3
  br i1 %33, label %_ZN9NodeLinksC2ERKS_.exit.i, label %for.body.i.i.i.i

_ZN20btAlignedObjectArrayIiE6resizeEiRKi.exit.thread.i.i.i: ; preds = %for.body.i
  store i32 %3, ptr %m_size.i.i.i.i, align 4, !tbaa !132
  br label %_ZN9NodeLinksC2ERKS_.exit.i

for.body.i.i.i.i:                                 ; preds = %for.body.i.i.i.i.prol.loopexit, %for.body.i.i.i.i
  %indvars.iv.i7.i.i.i = phi i64 [ %indvars.iv.next.i8.i.i.i.3, %for.body.i.i.i.i ], [ %indvars.iv.i7.i.i.i.unr, %for.body.i.i.i.i.prol.loopexit ]
  %arrayidx.i.i.i.i = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.i7.i.i.i
  %arrayidx3.i.i.i.i = getelementptr inbounds i32, ptr %22, i64 %indvars.iv.i7.i.i.i
  %34 = load i32, ptr %arrayidx3.i.i.i.i, align 4, !tbaa !140
  store i32 %34, ptr %arrayidx.i.i.i.i, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i.i = add nuw nsw i64 %indvars.iv.i7.i.i.i, 1
  %arrayidx.i.i.i.i.1 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.next.i8.i.i.i
  %arrayidx3.i.i.i.i.1 = getelementptr inbounds i32, ptr %22, i64 %indvars.iv.next.i8.i.i.i
  %35 = load i32, ptr %arrayidx3.i.i.i.i.1, align 4, !tbaa !140
  store i32 %35, ptr %arrayidx.i.i.i.i.1, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i.i.1 = add nuw nsw i64 %indvars.iv.i7.i.i.i, 2
  %arrayidx.i.i.i.i.2 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.next.i8.i.i.i.1
  %arrayidx3.i.i.i.i.2 = getelementptr inbounds i32, ptr %22, i64 %indvars.iv.next.i8.i.i.i.1
  %36 = load i32, ptr %arrayidx3.i.i.i.i.2, align 4, !tbaa !140
  store i32 %36, ptr %arrayidx.i.i.i.i.2, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i.i.2 = add nuw nsw i64 %indvars.iv.i7.i.i.i, 3
  %arrayidx.i.i.i.i.3 = getelementptr inbounds i32, ptr %call.i.i.i.i.i.i.i, i64 %indvars.iv.next.i8.i.i.i.2
  %arrayidx3.i.i.i.i.3 = getelementptr inbounds i32, ptr %22, i64 %indvars.iv.next.i8.i.i.i.2
  %37 = load i32, ptr %arrayidx3.i.i.i.i.3, align 4, !tbaa !140
  store i32 %37, ptr %arrayidx.i.i.i.i.3, align 4, !tbaa !140
  %indvars.iv.next.i8.i.i.i.3 = add nuw nsw i64 %indvars.iv.i7.i.i.i, 4
  %exitcond.not.i9.i.i.i.3 = icmp eq i64 %indvars.iv.next.i8.i.i.i.3, %conv.i.i.i.i.i.i.i
  br i1 %exitcond.not.i9.i.i.i.3, label %_ZN9NodeLinksC2ERKS_.exit.i, label %for.body.i.i.i.i, !llvm.loop !629

_ZN9NodeLinksC2ERKS_.exit.i:                      ; preds = %for.body.i.i.i.i.prol.loopexit, %for.body.i.i.i.i, %middle.block, %_ZN20btAlignedObjectArrayIiE6resizeEiRKi.exit.thread.i.i.i
  %indvars.iv.next.i = add nuw nsw i64 %indvars.iv.i, 1
  %38 = icmp eq i64 %indvars.iv.next.i, %zext
  br i1 %38, label %_ZNK20btAlignedObjectArrayI9NodeLinksE4copyEiiPS0_.exit, label %for.body.i

_ZNK20btAlignedObjectArrayI9NodeLinksE4copyEiiPS0_.exit: ; preds = %_ZN9NodeLinksC2ERKS_.exit.i
  %.pr = load i32, ptr %m_size.i, align 4, !tbaa !327
  %cmp4.i = icmp sgt i32 %.pr, 0
  br i1 %cmp4.i, label %for.body.lr.ph.i10, label %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit

for.body.lr.ph.i10:                               ; preds = %_ZNK20btAlignedObjectArrayI9NodeLinksE4copyEiiPS0_.exit
  %zext21 = zext i32 %.pr to i64
  br label %for.body.i13

for.body.i13:                                     ; preds = %_ZN9NodeLinksD2Ev.exit.i, %for.body.lr.ph.i10
  %indvars.iv.i11 = phi i64 [ 0, %for.body.lr.ph.i10 ], [ %indvars.iv.next.i14, %_ZN9NodeLinksD2Ev.exit.i ]
  %39 = load ptr, ptr %m_data.i, align 8, !tbaa !326
  %arrayidx.i12 = getelementptr inbounds %struct.NodeLinks, ptr %39, i64 %indvars.iv.i11
  %m_data.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i12, i64 0, i32 5
  %40 = load ptr, ptr %m_data.i.i.i.i.i, align 8, !tbaa !131
  %tobool.not.i.i.i.i.i = icmp eq ptr %40, null
  %m_ownsMemory.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i12, i64 0, i32 6
  %41 = load i8, ptr %m_ownsMemory.i.i.i.i.i, align 8, !range !159
  %tobool2.not.i.i.i.i.i = icmp eq i8 %41, 0
  %or.cond.i.i.i.i = select i1 %tobool.not.i.i.i.i.i, i1 true, i1 %tobool2.not.i.i.i.i.i
  br i1 %or.cond.i.i.i.i, label %_ZN9NodeLinksD2Ev.exit.i, label %if.then3.i.i.i.i.i

if.then3.i.i.i.i.i:                               ; preds = %for.body.i13
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %40)
  br label %_ZN9NodeLinksD2Ev.exit.i

_ZN9NodeLinksD2Ev.exit.i:                         ; preds = %if.then3.i.i.i.i.i, %for.body.i13
  store i8 1, ptr %m_ownsMemory.i.i.i.i.i, align 8, !tbaa !130
  store ptr null, ptr %m_data.i.i.i.i.i, align 8, !tbaa !131
  %m_size.i4.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i12, i64 0, i32 2
  store i32 0, ptr %m_size.i4.i.i.i.i, align 4, !tbaa !132
  %m_capacity.i.i.i.i.i = getelementptr inbounds %class.btAlignedObjectArray.80, ptr %arrayidx.i12, i64 0, i32 3
  store i32 0, ptr %m_capacity.i.i.i.i.i, align 8, !tbaa !133
  %indvars.iv.next.i14 = add nuw nsw i64 %indvars.iv.i11, 1
  %42 = icmp eq i64 %indvars.iv.next.i14, %zext21
  br i1 %42, label %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit, label %for.body.i13

_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit: ; preds = %_ZN9NodeLinksD2Ev.exit.i, %_ZN20btAlignedObjectArrayI9NodeLinksE8allocateEi.exit, %_ZNK20btAlignedObjectArrayI9NodeLinksE4copyEiiPS0_.exit
  %m_data.i17 = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 5
  %43 = load ptr, ptr %m_data.i17, align 8, !tbaa !326
  %tobool.not.i18 = icmp eq ptr %43, null
  %m_ownsMemory.i = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 6
  %44 = load i8, ptr %m_ownsMemory.i, align 8, !range !159
  %tobool2.not.i = icmp eq i8 %44, 0
  %or.cond = select i1 %tobool.not.i18, i1 true, i1 %tobool2.not.i
  br i1 %or.cond, label %_ZN20btAlignedObjectArrayI9NodeLinksE10deallocateEv.exit, label %if.then3.i

if.then3.i:                                       ; preds = %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit
  tail call void @_Z21btAlignedFreeInternalPv(ptr noundef nonnull %43)
  br label %_ZN20btAlignedObjectArrayI9NodeLinksE10deallocateEv.exit

_ZN20btAlignedObjectArrayI9NodeLinksE10deallocateEv.exit: ; preds = %if.then3.i, %_ZN20btAlignedObjectArrayI9NodeLinksE7destroyEii.exit
  %m_ownsMemory = getelementptr inbounds %class.btAlignedObjectArray.84, ptr %this, i64 0, i32 6
  store i8 1, ptr %m_ownsMemory, align 8, !tbaa !323
  store ptr %retval.0.i, ptr %m_data.i17, align 8, !tbaa !326
  store i32 %_Count, ptr %m_capacity.i, align 8, !tbaa !328
  br label %if.end

if.end:                                           ; preds = %_ZN20btAlignedObjectArrayI9NodeLinksE10deallocateEv.exit, %entry
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN11btSparseSdfILi3EE9BuildCellERNS0_4CellE(ptr noundef nonnull align 8 dereferenceable(52) %this, ptr noundef nonnull align 8 dereferenceable(296) %c) local_unnamed_addr #0 comdat align 2 {
entry:
  %unit.i = alloca %class.btTransform, align 4
  %res.i = alloca %"struct.btGjkEpaSolver2::sResults", align 4
  %ref.tmp33 = alloca %class.btVector3, align 8
  %c4 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c, i64 0, i32 1
  %arrayidx11 = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c, i64 0, i32 1, i64 2
  %0 = load i32, ptr %arrayidx11, align 8, !tbaa !140
  %conv12 = sitofp i32 %0 to float
  %1 = load <2 x i32>, ptr %c4, align 8, !tbaa !140
  %2 = sitofp <2 x i32> %1 to <2 x float>
  %3 = fmul <2 x float> %2, <float 3.000000e+00, float 3.000000e+00>
  %mul8.i = fmul float %conv12, 3.000000e+00
  %voxelsz = getelementptr inbounds %struct.btSparseSdf, ptr %this, i64 0, i32 1
  %4 = load float, ptr %voxelsz, align 8, !tbaa !137
  %5 = insertelement <2 x float> poison, float %4, i64 0
  %6 = shufflevector <2 x float> %5, <2 x float> poison, <2 x i32> zeroinitializer
  %7 = fmul <2 x float> %3, %6
  %mul8.i65 = fmul float %4, %mul8.i
  %arrayidx3.i72 = getelementptr inbounds [4 x float], ptr %ref.tmp33, i64 0, i64 1
  %arrayidx5.i73 = getelementptr inbounds [4 x float], ptr %ref.tmp33, i64 0, i64 2
  %arrayidx7.i74 = getelementptr inbounds [4 x float], ptr %ref.tmp33, i64 0, i64 3
  %pclient = getelementptr inbounds %"struct.btSparseSdf<3>::Cell", ptr %c, i64 0, i32 4
  %arrayidx3.i.i.i.i.i = getelementptr inbounds [4 x float], ptr %unit.i, i64 0, i64 1
  %arrayidx3.i6.i.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %unit.i, i64 0, i64 1, i32 0, i64 1
  %arrayidx5.i7.i.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %unit.i, i64 0, i64 1, i32 0, i64 2
  %arrayidx5.i10.i.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %unit.i, i64 0, i64 2, i32 0, i64 2
  %arrayidx7.i11.i.i.i.i = getelementptr inbounds [3 x %class.btVector3], ptr %unit.i, i64 0, i64 2, i32 0, i64 3
  %8 = extractelement <2 x float> %7, i64 0
  br label %for.body

for.cond.cleanup:                                 ; preds = %for.cond.cleanup21
  ret void

for.body:                                         ; preds = %entry, %for.cond.cleanup21
  %indvars.iv80 = phi i64 [ 0, %entry ], [ %indvars.iv.next81, %for.cond.cleanup21 ]
  %9 = load float, ptr %voxelsz, align 8, !tbaa !630
  %10 = trunc i64 %indvars.iv80 to i32
  %conv17 = sitofp i32 %10 to float
  %11 = call float @llvm.fmuladd.f32(float %9, float %conv17, float %mul8.i65)
  br label %for.body22

for.cond.cleanup21:                               ; preds = %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.3
  %indvars.iv.next81 = add nuw nsw i64 %indvars.iv80, 1
  %exitcond83.not = icmp eq i64 %indvars.iv.next81, 4
  br i1 %exitcond83.not, label %for.cond.cleanup, label %for.body

for.body22:                                       ; preds = %for.body, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.3
  %indvars.iv = phi i64 [ 0, %for.body ], [ %indvars.iv.next, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.3 ]
  %12 = load <4 x float>, ptr %voxelsz, align 8
  %13 = trunc i64 %indvars.iv to i32
  %conv24 = sitofp i32 %13 to float
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp33) #38
  %14 = shufflevector <4 x float> %12, <4 x float> poison, <2 x i32> zeroinitializer
  %15 = insertelement <2 x float> <float 0.000000e+00, float poison>, float %conv24, i64 1
  %16 = call <2 x float> @llvm.fmuladd.v2f32(<2 x float> %14, <2 x float> %15, <2 x float> %7)
  store <2 x float> %16, ptr %ref.tmp33, align 8, !tbaa !137
  store float %11, ptr %arrayidx5.i73, align 8, !tbaa !137
  store float 0.000000e+00, ptr %arrayidx7.i74, align 4, !tbaa !137
  %17 = load ptr, ptr %pclient, align 8, !tbaa !500
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %unit.i) #38
  store float 1.000000e+00, ptr %unit.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i.i.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i7.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i.i.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %arrayidx7.i11.i.i.i.i, i8 0, i64 20, i1 false)
  %m_shapeType.i.i.i = getelementptr inbounds %class.btCollisionShape, ptr %17, i64 0, i32 1
  %18 = load i32, ptr %m_shapeType.i.i.i, align 8, !tbaa !152
  %cmp.i.i.i = icmp slt i32 %18, 20
  br i1 %cmp.i.i.i, label %if.then.i, label %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit

if.then.i:                                        ; preds = %for.body22
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %res.i) #38
  %call1.i = call noundef float @_ZN15btGjkEpaSolver214SignedDistanceERK9btVector3fPK13btConvexShapeRK11btTransformRNS_8sResultsE(ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp33, float noundef 0.000000e+00, ptr noundef nonnull %17, ptr noundef nonnull align 4 dereferenceable(64) %unit.i, ptr noundef nonnull align 4 dereferenceable(56) %res.i)
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %res.i) #38
  %.pre = load ptr, ptr %pclient, align 8, !tbaa !500
  br label %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit

_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit: ; preds = %for.body22, %if.then.i
  %19 = phi ptr [ %.pre, %if.then.i ], [ %17, %for.body22 ]
  %retval.0.i = phi float [ %call1.i, %if.then.i ], [ 0.000000e+00, %for.body22 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %unit.i) #38
  %arrayidx39 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c, i64 0, i64 0, i64 %indvars.iv, i64 %indvars.iv80
  store float %retval.0.i, ptr %arrayidx39, align 4, !tbaa !137
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp33) #38
  %20 = load float, ptr %voxelsz, align 8, !tbaa !630
  %21 = fadd float %20, %8
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp33) #38
  store float %21, ptr %ref.tmp33, align 8, !tbaa !137
  %22 = extractelement <2 x float> %16, i64 1
  store float %22, ptr %arrayidx3.i72, align 4, !tbaa !137
  store float %11, ptr %arrayidx5.i73, align 8, !tbaa !137
  store float 0.000000e+00, ptr %arrayidx7.i74, align 4, !tbaa !137
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %unit.i) #38
  store float 1.000000e+00, ptr %unit.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i.i.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i7.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i.i.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %arrayidx7.i11.i.i.i.i, i8 0, i64 20, i1 false)
  %m_shapeType.i.i.i.1 = getelementptr inbounds %class.btCollisionShape, ptr %19, i64 0, i32 1
  %23 = load i32, ptr %m_shapeType.i.i.i.1, align 8, !tbaa !152
  %cmp.i.i.i.1 = icmp slt i32 %23, 20
  br i1 %cmp.i.i.i.1, label %if.then.i.1, label %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.1

if.then.i.1:                                      ; preds = %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %res.i) #38
  %call1.i.1 = call noundef float @_ZN15btGjkEpaSolver214SignedDistanceERK9btVector3fPK13btConvexShapeRK11btTransformRNS_8sResultsE(ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp33, float noundef 0.000000e+00, ptr noundef nonnull %19, ptr noundef nonnull align 4 dereferenceable(64) %unit.i, ptr noundef nonnull align 4 dereferenceable(56) %res.i)
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %res.i) #38
  %.pre84 = load ptr, ptr %pclient, align 8, !tbaa !500
  br label %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.1

_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.1: ; preds = %if.then.i.1, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit
  %24 = phi ptr [ %.pre84, %if.then.i.1 ], [ %19, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit ]
  %retval.0.i.1 = phi float [ %call1.i.1, %if.then.i.1 ], [ 0.000000e+00, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %unit.i) #38
  %arrayidx39.1 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c, i64 0, i64 1, i64 %indvars.iv, i64 %indvars.iv80
  store float %retval.0.i.1, ptr %arrayidx39.1, align 4, !tbaa !137
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp33) #38
  %25 = load float, ptr %voxelsz, align 8, !tbaa !630
  %26 = call float @llvm.fmuladd.f32(float %25, float 2.000000e+00, float %8)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp33) #38
  store float %26, ptr %ref.tmp33, align 8, !tbaa !137
  store float %22, ptr %arrayidx3.i72, align 4, !tbaa !137
  store float %11, ptr %arrayidx5.i73, align 8, !tbaa !137
  store float 0.000000e+00, ptr %arrayidx7.i74, align 4, !tbaa !137
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %unit.i) #38
  store float 1.000000e+00, ptr %unit.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i.i.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i7.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i.i.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %arrayidx7.i11.i.i.i.i, i8 0, i64 20, i1 false)
  %m_shapeType.i.i.i.2 = getelementptr inbounds %class.btCollisionShape, ptr %24, i64 0, i32 1
  %27 = load i32, ptr %m_shapeType.i.i.i.2, align 8, !tbaa !152
  %cmp.i.i.i.2 = icmp slt i32 %27, 20
  br i1 %cmp.i.i.i.2, label %if.then.i.2, label %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.2

if.then.i.2:                                      ; preds = %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.1
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %res.i) #38
  %call1.i.2 = call noundef float @_ZN15btGjkEpaSolver214SignedDistanceERK9btVector3fPK13btConvexShapeRK11btTransformRNS_8sResultsE(ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp33, float noundef 0.000000e+00, ptr noundef nonnull %24, ptr noundef nonnull align 4 dereferenceable(64) %unit.i, ptr noundef nonnull align 4 dereferenceable(56) %res.i)
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %res.i) #38
  %.pre85 = load ptr, ptr %pclient, align 8, !tbaa !500
  br label %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.2

_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.2: ; preds = %if.then.i.2, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.1
  %28 = phi ptr [ %.pre85, %if.then.i.2 ], [ %24, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.1 ]
  %retval.0.i.2 = phi float [ %call1.i.2, %if.then.i.2 ], [ 0.000000e+00, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.1 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %unit.i) #38
  %arrayidx39.2 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c, i64 0, i64 2, i64 %indvars.iv, i64 %indvars.iv80
  store float %retval.0.i.2, ptr %arrayidx39.2, align 4, !tbaa !137
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp33) #38
  %29 = load float, ptr %voxelsz, align 8, !tbaa !630
  %30 = call float @llvm.fmuladd.f32(float %29, float 3.000000e+00, float %8)
  call void @llvm.lifetime.start.p0(i64 16, ptr nonnull %ref.tmp33) #38
  store float %30, ptr %ref.tmp33, align 8, !tbaa !137
  store float %22, ptr %arrayidx3.i72, align 4, !tbaa !137
  store float %11, ptr %arrayidx5.i73, align 8, !tbaa !137
  store float 0.000000e+00, ptr %arrayidx7.i74, align 4, !tbaa !137
  call void @llvm.lifetime.start.p0(i64 64, ptr nonnull %unit.i) #38
  store float 1.000000e+00, ptr %unit.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx3.i.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx3.i6.i.i.i.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(16) %arrayidx5.i7.i.i.i.i, i8 0, i64 16, i1 false)
  store float 1.000000e+00, ptr %arrayidx5.i10.i.i.i.i, align 4, !tbaa !137
  call void @llvm.memset.p0.i64(ptr noundef nonnull align 4 dereferenceable(20) %arrayidx7.i11.i.i.i.i, i8 0, i64 20, i1 false)
  %m_shapeType.i.i.i.3 = getelementptr inbounds %class.btCollisionShape, ptr %28, i64 0, i32 1
  %31 = load i32, ptr %m_shapeType.i.i.i.3, align 8, !tbaa !152
  %cmp.i.i.i.3 = icmp slt i32 %31, 20
  br i1 %cmp.i.i.i.3, label %if.then.i.3, label %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.3

if.then.i.3:                                      ; preds = %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.2
  call void @llvm.lifetime.start.p0(i64 56, ptr nonnull %res.i) #38
  %call1.i.3 = call noundef float @_ZN15btGjkEpaSolver214SignedDistanceERK9btVector3fPK13btConvexShapeRK11btTransformRNS_8sResultsE(ptr noundef nonnull align 4 dereferenceable(16) %ref.tmp33, float noundef 0.000000e+00, ptr noundef nonnull %28, ptr noundef nonnull align 4 dereferenceable(64) %unit.i, ptr noundef nonnull align 4 dereferenceable(56) %res.i)
  call void @llvm.lifetime.end.p0(i64 56, ptr nonnull %res.i) #38
  br label %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.3

_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.3: ; preds = %if.then.i.3, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.2
  %retval.0.i.3 = phi float [ %call1.i.3, %if.then.i.3 ], [ 0.000000e+00, %_ZN11btSparseSdfILi3EE15DistanceToShapeERK9btVector3P16btCollisionShape.exit.2 ]
  call void @llvm.lifetime.end.p0(i64 64, ptr nonnull %unit.i) #38
  %arrayidx39.3 = getelementptr inbounds [4 x [4 x [4 x float]]], ptr %c, i64 0, i64 3, i64 %indvars.iv, i64 %indvars.iv80
  store float %retval.0.i.3, ptr %arrayidx39.3, align 4, !tbaa !137
  call void @llvm.lifetime.end.p0(i64 16, ptr nonnull %ref.tmp33) #38
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 4
  br i1 %exitcond.not, label %for.cond.cleanup21, label %for.body22
}

declare noundef float @_ZN15btGjkEpaSolver214SignedDistanceERK9btVector3fPK13btConvexShapeRK11btTransformRNS_8sResultsE(ptr noundef nonnull align 4 dereferenceable(16), float noundef, ptr noundef, ptr noundef nonnull align 4 dereferenceable(64), ptr noundef nonnull align 4 dereferenceable(56)) local_unnamed_addr #1

; Function Attrs: nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite)
declare void @llvm.experimental.noalias.scope.decl(metadata) #33

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #34

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare float @llvm.sqrt.f32(float) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.fmuladd.v2f32(<2 x float>, <2 x float>, <2 x float>) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #35

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x float> @llvm.sqrt.v2f32(<2 x float>) #35

attributes #0 = { uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #4 = { uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #5 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { noinline noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { inlinehint uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nofree norecurse nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #13 = { mustprogress nofree norecurse nosync nounwind willreturn memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { mustprogress nofree norecurse nosync nounwind willreturn memory(write, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { nofree nosync nounwind memory(readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { nofree nosync nounwind memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { nofree norecurse nosync nounwind memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { mustprogress nofree nosync nounwind willreturn memory(argmem: read) uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #22 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #23 = { nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { inlinehint mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #26 = { inlinehint uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #27 = { inlinehint nofree nosync nounwind memory(argmem: readwrite) uwtable "min-legal-vector-width"="64" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #28 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #29 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #30 = { nofree nounwind }
attributes #31 = { mustprogress nofree nounwind willreturn memory(write) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #32 = { cold noreturn nounwind }
attributes #33 = { nocallback nofree nosync nounwind willreturn memory(inaccessiblemem: readwrite) }
attributes #34 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #35 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #36 = { builtin allocsize(0) }
attributes #37 = { builtin nounwind }
attributes #38 = { nounwind }
attributes #39 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"vtable pointer", !7, i64 0}
!7 = !{!"Simple C++ TBAA"}
!8 = !{!9, !14, i64 24}
!9 = !{!"_ZTS20btAlignedObjectArrayIP17btCollisionObjectE", !10, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!10 = !{!"_ZTS18btAlignedAllocatorIP17btCollisionObjectLj16EE"}
!11 = !{!"int", !12, i64 0}
!12 = !{!"omnipotent char", !7, i64 0}
!13 = !{!"any pointer", !12, i64 0}
!14 = !{!"bool", !12, i64 0}
!15 = !{!9, !13, i64 16}
!16 = !{!9, !11, i64 4}
!17 = !{!9, !11, i64 8}
!18 = !{!19, !14, i64 24}
!19 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody8eVSolver1_EE", !20, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!20 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody8eVSolver1_ELj16EE"}
!21 = !{!19, !13, i64 16}
!22 = !{!19, !11, i64 4}
!23 = !{!19, !11, i64 8}
!24 = !{!25, !14, i64 24}
!25 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody8ePSolver1_EE", !26, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!26 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody8ePSolver1_ELj16EE"}
!27 = !{!25, !13, i64 16}
!28 = !{!25, !11, i64 4}
!29 = !{!25, !11, i64 8}
!30 = !{!31, !14, i64 24}
!31 = !{!"_ZTS20btAlignedObjectArrayI9btVector3E", !32, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!32 = !{!"_ZTS18btAlignedAllocatorI9btVector3Lj16EE"}
!33 = !{!31, !13, i64 16}
!34 = !{!31, !11, i64 4}
!35 = !{!31, !11, i64 8}
!36 = !{!37, !14, i64 24}
!37 = !{!"_ZTS20btAlignedObjectArrayIfE", !38, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!38 = !{!"_ZTS18btAlignedAllocatorIfLj16EE"}
!39 = !{!37, !13, i64 16}
!40 = !{!37, !11, i64 4}
!41 = !{!37, !11, i64 8}
!42 = !{!43, !13, i64 776}
!43 = !{!"_ZTS10btSoftBody", !44, i64 0, !9, i64 280, !49, i64 312, !51, i64 512, !52, i64 536, !13, i64 768, !13, i64 776, !53, i64 784, !55, i64 816, !57, i64 848, !59, i64 880, !61, i64 912, !63, i64 944, !65, i64 976, !67, i64 1008, !69, i64 1040, !71, i64 1072, !48, i64 1104, !12, i64 1108, !14, i64 1140, !73, i64 1144, !73, i64 1208, !73, i64 1272, !76, i64 1336, !78, i64 1368, !45, i64 1400, !80, i64 1464}
!44 = !{!"_ZTS17btCollisionObject", !45, i64 8, !45, i64 72, !47, i64 136, !47, i64 152, !47, i64 168, !14, i64 184, !48, i64 188, !13, i64 192, !13, i64 200, !13, i64 208, !11, i64 216, !11, i64 220, !11, i64 224, !11, i64 228, !48, i64 232, !48, i64 236, !48, i64 240, !13, i64 248, !11, i64 256, !48, i64 260, !48, i64 264, !48, i64 268, !14, i64 272, !12, i64 273}
!45 = !{!"_ZTS11btTransform", !46, i64 0, !47, i64 48}
!46 = !{!"_ZTS11btMatrix3x3", !12, i64 0}
!47 = !{!"_ZTS9btVector3", !12, i64 0}
!48 = !{!"float", !12, i64 0}
!49 = !{!"_ZTSN10btSoftBody6ConfigE", !50, i64 0, !48, i64 4, !48, i64 8, !48, i64 12, !48, i64 16, !48, i64 20, !48, i64 24, !48, i64 28, !48, i64 32, !48, i64 36, !48, i64 40, !48, i64 44, !48, i64 48, !48, i64 52, !48, i64 56, !48, i64 60, !48, i64 64, !48, i64 68, !48, i64 72, !48, i64 76, !48, i64 80, !11, i64 84, !11, i64 88, !11, i64 92, !11, i64 96, !11, i64 100, !19, i64 104, !25, i64 136, !25, i64 168}
!50 = !{!"_ZTSN10btSoftBody10eAeroModel1_E", !12, i64 0}
!51 = !{!"_ZTSN10btSoftBody11SolverStateE", !48, i64 0, !48, i64 4, !48, i64 8, !48, i64 12, !48, i64 16}
!52 = !{!"_ZTSN10btSoftBody4PoseE", !14, i64 0, !14, i64 1, !48, i64 4, !31, i64 8, !37, i64 40, !47, i64 72, !46, i64 88, !46, i64 136, !46, i64 184}
!53 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody4NoteEE", !54, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!54 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody4NoteELj16EE"}
!55 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody4NodeEE", !56, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!56 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody4NodeELj16EE"}
!57 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody4LinkEE", !58, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!58 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody4LinkELj16EE"}
!59 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody4FaceEE", !60, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!60 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody4FaceELj16EE"}
!61 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody5TetraEE", !62, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!62 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody5TetraELj16EE"}
!63 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody6AnchorEE", !64, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!64 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody6AnchorELj16EE"}
!65 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody8RContactEE", !66, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!66 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody8RContactELj16EE"}
!67 = !{!"_ZTS20btAlignedObjectArrayIN10btSoftBody8SContactEE", !68, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!68 = !{!"_ZTS18btAlignedAllocatorIN10btSoftBody8SContactELj16EE"}
!69 = !{!"_ZTS20btAlignedObjectArrayIPN10btSoftBody5JointEE", !70, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!70 = !{!"_ZTS18btAlignedAllocatorIPN10btSoftBody5JointELj16EE"}
!71 = !{!"_ZTS20btAlignedObjectArrayIPN10btSoftBody8MaterialEE", !72, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!72 = !{!"_ZTS18btAlignedAllocatorIPN10btSoftBody8MaterialELj16EE"}
!73 = !{!"_ZTS6btDbvt", !13, i64 0, !13, i64 8, !11, i64 16, !11, i64 20, !11, i64 24, !74, i64 32}
!74 = !{!"_ZTS20btAlignedObjectArrayIN6btDbvt6sStkNNEE", !75, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!75 = !{!"_ZTS18btAlignedAllocatorIN6btDbvt6sStkNNELj16EE"}
!76 = !{!"_ZTS20btAlignedObjectArrayIPN10btSoftBody7ClusterEE", !77, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!77 = !{!"_ZTS18btAlignedAllocatorIPN10btSoftBody7ClusterELj16EE"}
!78 = !{!"_ZTS20btAlignedObjectArrayIbE", !79, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!79 = !{!"_ZTS18btAlignedAllocatorIbLj16EE"}
!80 = !{!"_ZTS20btAlignedObjectArrayIiE", !81, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!81 = !{!"_ZTS18btAlignedAllocatorIiLj16EE"}
!82 = !{!53, !14, i64 24}
!83 = !{!53, !13, i64 16}
!84 = !{!53, !11, i64 4}
!85 = !{!53, !11, i64 8}
!86 = !{!55, !14, i64 24}
!87 = !{!55, !13, i64 16}
!88 = !{!55, !11, i64 4}
!89 = !{!55, !11, i64 8}
!90 = !{!57, !14, i64 24}
!91 = !{!57, !13, i64 16}
!92 = !{!57, !11, i64 4}
!93 = !{!57, !11, i64 8}
!94 = !{!59, !14, i64 24}
!95 = !{!59, !13, i64 16}
!96 = !{!59, !11, i64 4}
!97 = !{!59, !11, i64 8}
!98 = !{!61, !14, i64 24}
!99 = !{!61, !13, i64 16}
!100 = !{!61, !11, i64 4}
!101 = !{!61, !11, i64 8}
!102 = !{!63, !14, i64 24}
!103 = !{!63, !13, i64 16}
!104 = !{!63, !11, i64 4}
!105 = !{!63, !11, i64 8}
!106 = !{!65, !14, i64 24}
!107 = !{!65, !13, i64 16}
!108 = !{!65, !11, i64 4}
!109 = !{!65, !11, i64 8}
!110 = !{!67, !14, i64 24}
!111 = !{!67, !13, i64 16}
!112 = !{!67, !11, i64 4}
!113 = !{!67, !11, i64 8}
!114 = !{!69, !14, i64 24}
!115 = !{!69, !13, i64 16}
!116 = !{!69, !11, i64 4}
!117 = !{!69, !11, i64 8}
!118 = !{!71, !14, i64 24}
!119 = !{!71, !13, i64 16}
!120 = !{!71, !11, i64 4}
!121 = !{!71, !11, i64 8}
!122 = !{!76, !14, i64 24}
!123 = !{!76, !13, i64 16}
!124 = !{!76, !11, i64 4}
!125 = !{!76, !11, i64 8}
!126 = !{!78, !14, i64 24}
!127 = !{!78, !13, i64 16}
!128 = !{!78, !11, i64 4}
!129 = !{!78, !11, i64 8}
!130 = !{!80, !14, i64 24}
!131 = !{!80, !13, i64 16}
!132 = !{!80, !11, i64 4}
!133 = !{!80, !11, i64 8}
!134 = !{!44, !11, i64 256}
!135 = !{!43, !50, i64 312}
!136 = !{!43, !48, i64 316}
!137 = !{!48, !48, i64 0}
!138 = !{!43, !48, i64 348}
!139 = !{!43, !48, i64 392}
!140 = !{!11, !11, i64 0}
!141 = !{!43, !11, i64 412}
!142 = !{!43, !14, i64 536}
!143 = !{!43, !14, i64 537}
!144 = !{!43, !48, i64 540}
!145 = !{!43, !13, i64 768}
!146 = !{!43, !48, i64 1104}
!147 = !{!43, !14, i64 1140}
!148 = !{!149, !48, i64 16}
!149 = !{!"_ZTSN10btSoftBody8MaterialE", !150, i64 0, !48, i64 8, !48, i64 12, !48, i64 16, !11, i64 20}
!150 = !{!"_ZTSN10btSoftBody7ElementE", !13, i64 0}
!151 = !{!149, !11, i64 20}
!152 = !{!153, !11, i64 8}
!153 = !{!"_ZTS16btCollisionShape", !11, i64 8, !13, i64 16}
!154 = !{!155, !13, i64 32}
!155 = !{!"_ZTS24btSoftBodyCollisionShape", !156, i64 0, !13, i64 32}
!156 = !{!"_ZTS14btConcaveShape", !153, i64 0, !48, i64 24}
!157 = !{!44, !13, i64 200}
!158 = !{!156, !48, i64 24}
!159 = !{i8 0, i8 2}
!160 = distinct !{!160, !161}
!161 = !{!"llvm.loop.unroll.disable"}
!162 = !{!43, !13, i64 1144}
!163 = !{i64 0, i64 16, !164}
!164 = !{!12, !12, i64 0}
!165 = !{i64 0, i64 8, !164}
!166 = !{!44, !13, i64 192}
!167 = !{!168, !13, i64 32}
!168 = !{!"_ZTS19btSoftBodyWorldInfo", !48, i64 0, !48, i64 4, !48, i64 8, !47, i64 12, !13, i64 32, !13, i64 40, !47, i64 48, !169, i64 64}
!169 = !{!"_ZTS11btSparseSdfILi3EE", !170, i64 0, !48, i64 32, !11, i64 36, !11, i64 40, !11, i64 44, !11, i64 48}
!170 = !{!"_ZTS20btAlignedObjectArrayIPN11btSparseSdfILi3EE4CellEE", !171, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!171 = !{!"_ZTS18btAlignedAllocatorIPN11btSparseSdfILi3EE4CellELj16EE"}
!172 = !{!168, !13, i64 40}
!173 = !{!"branch_weights", i32 1, i32 1048575}
!174 = !{!150, !13, i64 0}
!175 = !{!176, !48, i64 96}
!176 = !{!"_ZTSN10btSoftBody4NodeE", !177, i64 0, !47, i64 16, !47, i64 32, !47, i64 48, !47, i64 64, !47, i64 80, !48, i64 96, !48, i64 100, !13, i64 104, !11, i64 112}
!177 = !{!"_ZTSN10btSoftBody7FeatureE", !150, i64 0, !13, i64 8}
!178 = !{!179, !181}
!179 = distinct !{!179, !180, !"_ZN12btDbvtAabbMm6FromCEERK9btVector3S2_: %agg.result"}
!180 = distinct !{!180, !"_ZN12btDbvtAabbMm6FromCEERK9btVector3S2_"}
!181 = distinct !{!181, !182, !"_ZN12btDbvtAabbMm6FromCRERK9btVector3f: %agg.result"}
!182 = distinct !{!182, !"_ZN12btDbvtAabbMm6FromCRERK9btVector3f"}
!183 = !{!176, !13, i64 104}
!184 = !{!177, !13, i64 8}
!185 = !{!186, !186, i64 0}
!186 = !{!"_ZTSN10btSoftBody8ePSolver1_E", !12, i64 0}
!187 = distinct !{!187, !188, !189}
!188 = !{!"llvm.loop.isvectorized", i32 1}
!189 = !{!"llvm.loop.unroll.runtime.disable"}
!190 = distinct !{!190, !161}
!191 = distinct !{!191, !188}
!192 = !{}
!193 = distinct !{!193, !188, !189}
!194 = distinct !{!194, !161}
!195 = distinct !{!195, !188}
!196 = distinct !{!196, !188, !189}
!197 = distinct !{!197, !161}
!198 = distinct !{!198, !188}
!199 = distinct !{!199, !188, !189}
!200 = distinct !{!200, !161}
!201 = distinct !{!201, !188}
!202 = !{!203, !203, i64 0}
!203 = !{!"_ZTSN10btSoftBody8eVSolver1_E", !12, i64 0}
!204 = distinct !{!204, !188, !189}
!205 = distinct !{!205, !161}
!206 = distinct !{!206, !188}
!207 = distinct !{!207, !188, !189}
!208 = distinct !{!208, !161}
!209 = distinct !{!209, !188}
!210 = distinct !{!210, !188, !189}
!211 = distinct !{!211, !161}
!212 = distinct !{!212, !188}
!213 = distinct !{!213, !188, !189}
!214 = distinct !{!214, !161}
!215 = distinct !{!215, !188}
!216 = distinct !{!216, !188, !189}
!217 = distinct !{!217, !161}
!218 = distinct !{!218, !188}
!219 = !{!13, !13, i64 0}
!220 = distinct !{!220, !161}
!221 = !{!222, !13, i64 384}
!222 = !{!"_ZTSN10btSoftBody7ClusterE", !223, i64 0, !37, i64 32, !31, i64 64, !45, i64 96, !48, i64 160, !48, i64 164, !46, i64 168, !46, i64 216, !47, i64 264, !12, i64 280, !12, i64 312, !11, i64 344, !11, i64 348, !47, i64 352, !47, i64 368, !13, i64 384, !48, i64 392, !48, i64 396, !48, i64 400, !48, i64 404, !48, i64 408, !48, i64 412, !14, i64 416, !14, i64 417, !11, i64 420}
!223 = !{!"_ZTS20btAlignedObjectArrayIPN10btSoftBody4NodeEE", !224, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!224 = !{!"_ZTS18btAlignedAllocatorIPN10btSoftBody4NodeELj16EE"}
!225 = !{!226}
!226 = distinct !{!226, !227, !"_ZN12btDbvtAabbMm6FromCRERK9btVector3f: %agg.result"}
!227 = distinct !{!227, !"_ZN12btDbvtAabbMm6FromCRERK9btVector3f"}
!228 = !{!229}
!229 = distinct !{!229, !230, !"_ZN12btDbvtAabbMm6FromCEERK9btVector3S2_: %agg.result"}
!230 = distinct !{!230, !"_ZN12btDbvtAabbMm6FromCEERK9btVector3S2_"}
!231 = !{!229, !226}
!232 = !{!233, !13, i64 64}
!233 = !{!"_ZTSN10btSoftBody4FaceE", !177, i64 0, !12, i64 16, !47, i64 40, !48, i64 56, !13, i64 64}
!234 = !{!235, !13, i64 0}
!235 = !{!"_ZTSN10btSoftBody6AnchorE", !13, i64 0, !47, i64 8, !13, i64 24, !46, i64 32, !47, i64 80, !48, i64 96}
!236 = !{!237, !11, i64 32}
!237 = !{!"_ZTSN10btSoftBody4NoteE", !150, i64 0, !13, i64 8, !47, i64 16, !11, i64 32, !12, i64 40, !12, i64 72}
!238 = distinct !{!238, !161}
!239 = !{!240, !48, i64 32}
!240 = !{!"_ZTSN10btSoftBody4LinkE", !177, i64 0, !12, i64 16, !48, i64 32, !11, i64 36, !48, i64 40, !48, i64 44, !48, i64 48, !47, i64 52}
!241 = !{!233, !48, i64 56}
!242 = !{!243, !48, i64 48}
!243 = !{!"_ZTSN10btSoftBody5TetraE", !177, i64 0, !12, i64 16, !48, i64 48, !13, i64 56, !12, i64 64, !48, i64 128, !48, i64 132}
!244 = distinct !{!244, !161}
!245 = !{!235, !13, i64 24}
!246 = !{!247, !249}
!247 = distinct !{!247, !248, !"_ZNK11btMatrix3x39transposeEv: %agg.result"}
!248 = distinct !{!248, !"_ZNK11btMatrix3x39transposeEv"}
!249 = distinct !{!249, !250, !"_ZNK11btTransform7inverseEv: %agg.result"}
!250 = distinct !{!250, !"_ZNK11btTransform7inverseEv"}
!251 = !{!249}
!252 = !{i64 0, i64 8, !219, i64 8, i64 8, !219, i64 16, i64 8, !219}
!253 = !{!254, !13, i64 16}
!254 = !{!"_ZTSN10btSoftBody4BodyE", !13, i64 0, !13, i64 8, !13, i64 16}
!255 = !{!256, !258}
!256 = distinct !{!256, !257, !"_ZNK11btMatrix3x39transposeEv: %agg.result"}
!257 = distinct !{!257, !"_ZNK11btMatrix3x39transposeEv"}
!258 = distinct !{!258, !259, !"_ZNK11btTransform7inverseEv: %agg.result"}
!259 = distinct !{!259, !"_ZNK11btTransform7inverseEv"}
!260 = !{!258}
!261 = !{!262, !264}
!262 = distinct !{!262, !263, !"_ZNK11btMatrix3x39transposeEv: %agg.result"}
!263 = distinct !{!263, !"_ZNK11btMatrix3x39transposeEv"}
!264 = distinct !{!264, !265, !"_ZNK11btTransform7inverseEv: %agg.result"}
!265 = distinct !{!265, !"_ZNK11btTransform7inverseEv"}
!266 = !{!264}
!267 = !{!268, !48, i64 8}
!268 = !{!"_ZTSN10btSoftBody5Joint5SpecsE", !48, i64 0, !48, i64 4, !48, i64 8}
!269 = !{!270, !48, i64 96}
!270 = !{!"_ZTSN10btSoftBody5JointE", !12, i64 8, !12, i64 56, !48, i64 88, !48, i64 92, !48, i64 96, !47, i64 100, !47, i64 116, !46, i64 132, !14, i64 180}
!271 = distinct !{!271, !161}
!272 = !{!254, !13, i64 0}
!273 = !{!274, !276}
!274 = distinct !{!274, !275, !"_ZNK11btMatrix3x39transposeEv: %agg.result"}
!275 = distinct !{!275, !"_ZNK11btMatrix3x39transposeEv"}
!276 = distinct !{!276, !277, !"_ZNK11btTransform7inverseEv: %agg.result"}
!277 = distinct !{!277, !"_ZNK11btTransform7inverseEv"}
!278 = !{!279, !281}
!279 = distinct !{!279, !280, !"_ZNK11btMatrix3x39transposeEv: %agg.result"}
!280 = distinct !{!280, !"_ZNK11btMatrix3x39transposeEv"}
!281 = distinct !{!281, !282, !"_ZNK11btTransform7inverseEv: %agg.result"}
!282 = distinct !{!282, !"_ZNK11btTransform7inverseEv"}
!283 = !{!284, !13, i64 32}
!284 = !{!"_ZTSN10btSoftBody6AJoint5SpecsE", !268, i64 0, !47, i64 12, !13, i64 32}
!285 = !{!286, !13, i64 216}
!286 = !{!"_ZTSN10btSoftBody6AJointE", !270, i64 0, !12, i64 184, !13, i64 216}
!287 = distinct !{!287, !161}
!288 = distinct !{!288, !161}
!289 = distinct !{!289, !188, !189}
!290 = distinct !{!290, !189, !188}
!291 = distinct !{!291, !188, !189}
!292 = distinct !{!292, !189, !188}
!293 = !{i64 0, i64 12, !164}
!294 = distinct !{!294, !161}
!295 = distinct !{!295, !188, !189}
!296 = distinct !{!296, !189, !188}
!297 = !{i64 0, i64 16, !164, i64 16, i64 16, !164}
!298 = !{i64 0, i64 8, !164, i64 8, i64 16, !164}
!299 = distinct !{!299, !161}
!300 = !{!149, !48, i64 8}
!301 = !{!240, !48, i64 40}
!302 = !{!240, !48, i64 44}
!303 = !{!176, !48, i64 100}
!304 = distinct !{!304, !161}
!305 = distinct !{!305, !188, !189}
!306 = distinct !{!306, !161}
!307 = distinct !{!307, !188}
!308 = !{!309}
!309 = distinct !{!309, !310}
!310 = distinct !{!310, !"LVerDomain"}
!311 = !{!312}
!312 = distinct !{!312, !310}
!313 = distinct !{!313, !188, !189}
!314 = distinct !{!314, !188}
!315 = !{!316}
!316 = distinct !{!316, !317, !"_ZNK11btMatrix3x37inverseEv: %agg.result"}
!317 = distinct !{!317, !"_ZNK11btMatrix3x37inverseEv"}
!318 = !{i64 0, i64 4, !164}
!319 = !{!223, !11, i64 4}
!320 = !{!223, !13, i64 16}
!321 = !{!222, !11, i64 344}
!322 = !{!222, !11, i64 348}
!323 = !{!324, !14, i64 24}
!324 = !{!"_ZTS20btAlignedObjectArrayI9NodeLinksE", !325, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!325 = !{!"_ZTS18btAlignedAllocatorI9NodeLinksLj16EE"}
!326 = !{!324, !13, i64 16}
!327 = !{!324, !11, i64 4}
!328 = !{!324, !11, i64 8}
!329 = distinct !{!329, !188, !189}
!330 = distinct !{!330, !161}
!331 = distinct !{!331, !188}
!332 = distinct !{!332, !188, !189}
!333 = distinct !{!333, !161}
!334 = distinct !{!334, !188}
!335 = distinct !{!335, !188, !189}
!336 = distinct !{!336, !161}
!337 = distinct !{!337, !188}
!338 = distinct !{!338, !188, !189}
!339 = distinct !{!339, !161}
!340 = distinct !{!340, !188}
!341 = !{!223, !14, i64 24}
!342 = !{!223, !11, i64 8}
!343 = distinct !{!343, !161}
!344 = distinct !{!344, !161}
!345 = !{!222, !14, i64 416}
!346 = !{!222, !14, i64 417}
!347 = distinct !{!347, !161}
!348 = distinct !{!348, !161}
!349 = distinct !{!349, !161}
!350 = distinct !{!350, !161}
!351 = distinct !{!351, !161}
!352 = distinct !{!352, !161}
!353 = distinct !{!353, !161}
!354 = distinct !{!354, !161}
!355 = distinct !{!355, !161}
!356 = distinct !{!356, !161}
!357 = distinct !{!357, !161}
!358 = distinct !{!358, !161}
!359 = distinct !{!359, !161}
!360 = distinct !{!360, !161}
!361 = distinct !{!361, !161}
!362 = distinct !{!362, !161}
!363 = distinct !{!363, !161}
!364 = distinct !{!364, !161}
!365 = distinct !{!365, !161}
!366 = distinct !{!366, !161}
!367 = !{!14, !14, i64 0}
!368 = distinct !{!368, !188, !189}
!369 = distinct !{!369, !188, !189}
!370 = distinct !{!370, !161}
!371 = distinct !{!371, !188}
!372 = !{!222, !11, i64 420}
!373 = !{!222, !48, i64 164}
!374 = distinct !{!374, !188, !189}
!375 = distinct !{!375, !161}
!376 = distinct !{!376, !188}
!377 = !{!378}
!378 = distinct !{!378, !379, !"_ZNK11btMatrix3x37inverseEv: %agg.result"}
!379 = distinct !{!379, !"_ZNK11btMatrix3x37inverseEv"}
!380 = !{!381}
!381 = distinct !{!381, !382, !"_ZmlRK11btMatrix3x3S1_: %agg.result"}
!382 = distinct !{!382, !"_ZmlRK11btMatrix3x3S1_"}
!383 = !{!222, !48, i64 396}
!384 = !{!222, !48, i64 400}
!385 = !{!222, !48, i64 404}
!386 = !{!43, !48, i64 524}
!387 = !{!388, !11, i64 32}
!388 = !{!"_ZTS11btSymMatrixIiE", !80, i64 0, !11, i64 32}
!389 = distinct !{!389, !188, !189}
!390 = distinct !{!390, !161}
!391 = distinct !{!391, !188}
!392 = !{!393}
!393 = distinct !{!393, !394}
!394 = distinct !{!394, !"LVerDomain"}
!395 = !{!396}
!396 = distinct !{!396, !394}
!397 = distinct !{!397, !188, !189}
!398 = distinct !{!398, !161}
!399 = distinct !{!399, !188}
!400 = !{!401, !13, i64 0}
!401 = !{!"_ZTSN10btSoftBody8sRayCastE", !13, i64 0, !402, i64 8, !11, i64 12, !48, i64 16}
!402 = !{!"_ZTSN10btSoftBody8eFeature1_E", !12, i64 0}
!403 = !{!401, !48, i64 16}
!404 = !{!401, !402, i64 8}
!405 = !{!401, !11, i64 12}
!406 = !{!407}
!407 = distinct !{!407, !408, !"_ZL8VolumeOfRKN10btSoftBody4FaceEf: %agg.result"}
!408 = distinct !{!408, !"_ZL8VolumeOfRKN10btSoftBody4FaceEf"}
!409 = !{!410}
!410 = distinct !{!410, !411, !"_ZN12btDbvtAabbMm10FromPointsEPPK9btVector3i: %agg.result"}
!411 = distinct !{!411, !"_ZN12btDbvtAabbMm10FromPointsEPPK9btVector3i"}
!412 = !{!410, !407}
!413 = !{!73, !13, i64 0}
!414 = !{!402, !402, i64 0}
!415 = !{!416, !48, i64 56}
!416 = !{!"_ZTSN10btSoftBody15RayFromToCasterE", !417, i64 0, !47, i64 8, !47, i64 24, !47, i64 40, !48, i64 56, !13, i64 64, !11, i64 72}
!417 = !{!"_ZTSN6btDbvt8ICollideE"}
!418 = !{!416, !13, i64 64}
!419 = !{!416, !11, i64 72}
!420 = !{!43, !48, i64 512}
!421 = !{!43, !48, i64 516}
!422 = !{!43, !48, i64 520}
!423 = !{!43, !48, i64 528}
!424 = !{!425, !427}
!425 = distinct !{!425, !426, !"_ZN12btDbvtAabbMm6FromCEERK9btVector3S2_: %agg.result"}
!426 = distinct !{!426, !"_ZN12btDbvtAabbMm6FromCEERK9btVector3S2_"}
!427 = distinct !{!427, !428, !"_ZN12btDbvtAabbMm6FromCRERK9btVector3f: %agg.result"}
!428 = distinct !{!428, !"_ZN12btDbvtAabbMm6FromCRERK9btVector3f"}
!429 = !{!430, !432}
!430 = distinct !{!430, !431, !"_ZN12btDbvtAabbMm10FromPointsEPPK9btVector3i: %agg.result"}
!431 = distinct !{!431, !"_ZN12btDbvtAabbMm10FromPointsEPPK9btVector3i"}
!432 = distinct !{!432, !433, !"_ZL8VolumeOfRKN10btSoftBody4FaceEf: %agg.result"}
!433 = distinct !{!433, !"_ZL8VolumeOfRKN10btSoftBody4FaceEf"}
!434 = !{i64 0, i64 4, !164, i64 4, i64 16, !164}
!435 = !{!43, !48, i64 344}
!436 = distinct !{!436, !161}
!437 = !{!43, !48, i64 332}
!438 = !{!43, !48, i64 336}
!439 = !{!168, !48, i64 0}
!440 = !{!168, !48, i64 4}
!441 = !{!168, !48, i64 8}
!442 = !{!443}
!443 = distinct !{!443, !444, !"_ZmlRK11btMatrix3x3S1_: %agg.result"}
!444 = distinct !{!444, !"_ZmlRK11btMatrix3x3S1_"}
!445 = !{!446}
!446 = distinct !{!446, !447, !"_ZNK11btMatrix3x39transposeEv: %agg.result"}
!447 = distinct !{!447, !"_ZNK11btMatrix3x39transposeEv"}
!448 = !{!449}
!449 = distinct !{!449, !450, !"_ZmlRK11btMatrix3x3S1_: %agg.result"}
!450 = distinct !{!450, !"_ZmlRK11btMatrix3x3S1_"}
!451 = !{!240, !48, i64 48}
!452 = !{!453, !48, i64 360}
!453 = !{!"_ZTS11btRigidBody", !44, i64 0, !46, i64 280, !47, i64 328, !47, i64 344, !48, i64 360, !47, i64 364, !47, i64 380, !47, i64 396, !47, i64 412, !47, i64 428, !47, i64 444, !47, i64 460, !48, i64 476, !48, i64 480, !14, i64 484, !48, i64 488, !48, i64 492, !48, i64 496, !48, i64 500, !48, i64 504, !48, i64 508, !13, i64 512, !454, i64 520, !11, i64 552, !11, i64 556, !11, i64 560}
!454 = !{!"_ZTS20btAlignedObjectArrayIP17btTypedConstraintE", !455, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!455 = !{!"_ZTS18btAlignedAllocatorIP17btTypedConstraintLj16EE"}
!456 = !{!235, !48, i64 96}
!457 = !{!43, !11, i64 396}
!458 = distinct !{!458, !459}
!459 = !{!"llvm.loop.unswitch.partial.disable"}
!460 = !{ptr @_ZN10btSoftBody12VSolve_LinksEPS_f}
!461 = !{!43, !11, i64 400}
!462 = !{!43, !48, i64 320}
!463 = !{ptr @_ZN10btSoftBody12PSolve_LinksEPS_ff, ptr @_ZN10btSoftBody14PSolve_AnchorsEPS_ff, ptr @_ZN10btSoftBody16PSolve_RContactsEPS_ff, ptr @_ZN10btSoftBody16PSolve_SContactsEPS_ff}
!464 = !{!43, !11, i64 404}
!465 = distinct !{!465, !459}
!466 = !{!467, !469}
!467 = distinct !{!467, !468, !"_ZL5CrossRK9btVector3: %agg.result"}
!468 = distinct !{!468, !"_ZL5CrossRK9btVector3"}
!469 = distinct !{!469, !470, !"_ZL10MassMatrixfRK11btMatrix3x3RK9btVector3: %agg.result"}
!470 = distinct !{!470, !"_ZL10MassMatrixfRK11btMatrix3x3RK9btVector3"}
!471 = !{!472, !469}
!472 = distinct !{!472, !473, !"_ZmlRK11btMatrix3x3S1_: %agg.result"}
!473 = distinct !{!473, !"_ZmlRK11btMatrix3x3S1_"}
!474 = !{!475}
!475 = distinct !{!475, !476, !"_ZmlRK11btMatrix3x3S1_: %agg.result"}
!476 = distinct !{!476, !"_ZmlRK11btMatrix3x3S1_"}
!477 = !{!222, !48, i64 392}
!478 = distinct !{!478, !459}
!479 = !{!480, !11, i64 4}
!480 = !{!"_ZTS20btAlignedObjectArrayIP10btSoftBodyE", !481, i64 0, !11, i64 4, !11, i64 8, !13, i64 16, !14, i64 24}
!481 = !{!"_ZTS18btAlignedAllocatorIP10btSoftBodyLj16EE"}
!482 = !{!480, !13, i64 16}
!483 = distinct !{!483, !161}
!484 = !{!270, !14, i64 180}
!485 = distinct !{!485, !188, !189}
!486 = distinct !{!486, !161}
!487 = distinct !{!487, !188}
!488 = !{!489}
!489 = distinct !{!489, !490, !"_ZNK11btMatrix3x39transposeEv: %agg.result"}
!490 = distinct !{!490, !"_ZNK11btMatrix3x39transposeEv"}
!491 = !{!492, !13, i64 0}
!492 = !{!"_ZTSN10btSoftBody4sCtiE", !13, i64 0, !47, i64 8, !48, i64 24}
!493 = !{!492, !48, i64 24}
!494 = !{!170, !11, i64 4}
!495 = !{!170, !13, i64 16}
!496 = !{!169, !11, i64 48}
!497 = !{!169, !11, i64 44}
!498 = !{!499, !11, i64 272}
!499 = !{!"_ZTSN11btSparseSdfILi3EE4CellE", !12, i64 0, !12, i64 256, !11, i64 268, !11, i64 272, !13, i64 280, !13, i64 288}
!500 = !{!499, !13, i64 280}
!501 = !{!499, !13, i64 288}
!502 = !{!169, !11, i64 40}
!503 = !{!169, !11, i64 36}
!504 = !{!499, !11, i64 268}
!505 = !{!506}
!506 = distinct !{!506, !507, !"_ZL3MulRK11btMatrix3x3f: %agg.result"}
!507 = distinct !{!507, !"_ZL3MulRK11btMatrix3x3f"}
!508 = !{!509}
!509 = distinct !{!509, !510, !"_ZmlRK11btMatrix3x3S1_: %agg.result"}
!510 = distinct !{!510, !"_ZmlRK11btMatrix3x3S1_"}
!511 = !{!254, !13, i64 8}
!512 = !{!513, !515}
!513 = distinct !{!513, !514, !"_ZL5CrossRK9btVector3: %agg.result"}
!514 = distinct !{!514, !"_ZL5CrossRK9btVector3"}
!515 = distinct !{!515, !516, !"_ZL10MassMatrixfRK11btMatrix3x3RK9btVector3: %agg.result"}
!516 = distinct !{!516, !"_ZL10MassMatrixfRK11btMatrix3x3RK9btVector3"}
!517 = !{!518, !520}
!518 = distinct !{!518, !519, !"_ZL5CrossRK9btVector3: %agg.result"}
!519 = distinct !{!519, !"_ZL5CrossRK9btVector3"}
!520 = distinct !{!520, !521, !"_ZL10MassMatrixfRK11btMatrix3x3RK9btVector3: %agg.result"}
!521 = distinct !{!521, !"_ZL10MassMatrixfRK11btMatrix3x3RK9btVector3"}
!522 = !{!523, !515}
!523 = distinct !{!523, !524, !"_ZmlRK11btMatrix3x3S1_: %agg.result"}
!524 = distinct !{!524, !"_ZmlRK11btMatrix3x3S1_"}
!525 = !{!526, !520}
!526 = distinct !{!526, !527, !"_ZmlRK11btMatrix3x3S1_: %agg.result"}
!527 = distinct !{!527, !"_ZmlRK11btMatrix3x3S1_"}
!528 = !{!529}
!529 = distinct !{!529, !530, !"_ZNK11btMatrix3x37inverseEv: %agg.result"}
!530 = distinct !{!530, !"_ZNK11btMatrix3x37inverseEv"}
!531 = !{i64 0, i64 16, !164, i64 16, i64 16, !164, i64 32, i64 4, !140, i64 32, i64 4, !140}
!532 = !{!533}
!533 = distinct !{!533, !534, !"_ZNK10btSoftBody7ImpulsengEv: %agg.result"}
!534 = distinct !{!534, !"_ZNK10btSoftBody7ImpulsengEv"}
!535 = !{!270, !48, i64 92}
!536 = !{!537, !539}
!537 = distinct !{!537, !538, !"_ZL3AddRK11btMatrix3x3S1_: %agg.result"}
!538 = distinct !{!538, !"_ZL3AddRK11btMatrix3x3S1_"}
!539 = distinct !{!539, !540, !"_ZL20AngularImpulseMatrixRK11btMatrix3x3S1_: %agg.result"}
!540 = distinct !{!540, !"_ZL20AngularImpulseMatrixRK11btMatrix3x3S1_"}
!541 = !{!542}
!542 = distinct !{!542, !543, !"_ZNK10btSoftBody7ImpulsengEv: %agg.result"}
!543 = distinct !{!543, !"_ZNK10btSoftBody7ImpulsengEv"}
!544 = !{!545, !11, i64 184}
!545 = !{!"_ZTSN10btSoftBody6CJointE", !270, i64 0, !11, i64 184, !11, i64 188, !12, i64 192, !47, i64 224, !48, i64 240}
!546 = !{!545, !11, i64 188}
!547 = !{!222, !48, i64 408}
!548 = !{!222, !48, i64 412}
!549 = !{i64 0, i64 8, !164, i64 8, i64 16, !164, i64 24, i64 4, !140, i64 24, i64 4, !140}
!550 = !{i64 0, i64 8, !164, i64 8, i64 4, !140, i64 8, i64 4, !140}
!551 = !{!552}
!552 = distinct !{!552, !553, !"_ZNK10btSoftBody7ImpulsemlEf: %agg.result"}
!553 = distinct !{!553, !"_ZNK10btSoftBody7ImpulsemlEf"}
!554 = !{!555}
!555 = distinct !{!555, !556, !"_ZNK10btSoftBody7ImpulsemlEf: %agg.result"}
!556 = distinct !{!556, !"_ZNK10btSoftBody7ImpulsemlEf"}
!557 = !{!558}
!558 = distinct !{!558, !559, !"_ZNK10btSoftBody7ImpulsengEv: %agg.result"}
!559 = distinct !{!559, !"_ZNK10btSoftBody7ImpulsengEv"}
!560 = !{!43, !48, i64 360}
!561 = !{!562, !13, i64 32}
!562 = !{!"_ZTSN10btSoftBody8RContactE", !492, i64 0, !13, i64 32, !46, i64 40, !47, i64 88, !48, i64 104, !48, i64 108, !48, i64 112}
!563 = !{!562, !48, i64 112}
!564 = !{!565, !13, i64 0}
!565 = !{!"_ZTSN10btSoftBody8SContactE", !13, i64 0, !13, i64 8, !47, i64 16, !47, i64 32, !48, i64 48, !48, i64 52, !12, i64 56}
!566 = !{!565, !13, i64 8}
!567 = !{!565, !48, i64 48}
!568 = !{!569, !13, i64 8}
!569 = !{!"_ZTSN15btSoftColliders13CollideSDF_RSE", !417, i64 0, !13, i64 8, !13, i64 16, !13, i64 24, !48, i64 32, !48, i64 36}
!570 = !{!569, !13, i64 16}
!571 = !{!569, !13, i64 24}
!572 = !{!569, !48, i64 32}
!573 = !{!569, !48, i64 36}
!574 = !{!575, !48, i64 8}
!575 = !{!"_ZTSN15btSoftColliders11ClusterBaseE", !417, i64 0, !48, i64 8, !48, i64 12, !48, i64 16, !48, i64 20, !48, i64 24}
!576 = !{!577, !13, i64 32}
!577 = !{!"_ZTSN15btSoftColliders12CollideCL_RSE", !575, i64 0, !13, i64 32, !13, i64 40}
!578 = !{!577, !13, i64 40}
!579 = !{!575, !48, i64 12}
!580 = !{!575, !48, i64 16}
!581 = !{!44, !48, i64 236}
!582 = !{!575, !48, i64 20}
!583 = !{!43, !13, i64 1272}
!584 = !{i64 0, i64 12, !164, i64 12, i64 16, !164}
!585 = distinct !{!585, !188, !189}
!586 = distinct !{!586, !161}
!587 = distinct !{!587, !188}
!588 = distinct !{!588, !188, !189}
!589 = distinct !{!589, !161}
!590 = distinct !{!590, !188}
!591 = !{!592, !48, i64 24}
!592 = !{!"_ZTSN15btSoftColliders12CollideVF_SSE", !417, i64 0, !12, i64 8, !48, i64 24}
!593 = !{!43, !13, i64 1208}
!594 = !{i64 0, i64 8, !219, i64 8, i64 8, !219}
!595 = !{i64 0, i64 8, !219}
!596 = distinct !{!596, !161}
!597 = !{!43, !48, i64 340}
!598 = !{!562, !48, i64 104}
!599 = !{!562, !48, i64 108}
!600 = !{!44, !11, i64 216}
!601 = !{!602, !13, i64 64}
!602 = !{!"_ZTS27btSoftClusterCollisionShape", !603, i64 0, !13, i64 64}
!603 = !{!"_ZTS21btConvexInternalShape", !604, i64 0, !47, i64 24, !47, i64 40, !48, i64 56, !48, i64 60}
!604 = !{!"_ZTS13btConvexShape", !153, i64 0}
!605 = !{!603, !48, i64 56}
!606 = distinct !{!606, !161}
!607 = !{!43, !48, i64 368}
!608 = !{!43, !48, i64 364}
!609 = !{!610, !48, i64 52}
!610 = !{!"_ZTSN15btGjkEpaSolver28sResultsE", !611, i64 0, !12, i64 4, !47, i64 36, !48, i64 52}
!611 = !{!"_ZTSN15btGjkEpaSolver28sResults7eStatusE", !12, i64 0}
!612 = !{!545, !48, i64 240}
!613 = distinct !{!613, !161}
!614 = !{!43, !48, i64 384}
!615 = !{!43, !48, i64 356}
!616 = !{i64 0, i64 8, !219, i64 8, i64 8, !219, i64 16, i64 16, !164, i64 32, i64 16, !164, i64 48, i64 4, !137, i64 52, i64 4, !137, i64 56, i64 8, !164}
!617 = !{i64 0, i64 8, !219, i64 8, i64 16, !164, i64 24, i64 16, !164, i64 40, i64 4, !137, i64 44, i64 4, !137, i64 48, i64 8, !164}
!618 = !{i64 0, i64 16, !164, i64 16, i64 16, !164, i64 32, i64 4, !137, i64 36, i64 4, !137, i64 40, i64 8, !164}
!619 = !{i64 0, i64 8, !164, i64 8, i64 16, !164, i64 24, i64 4, !137, i64 28, i64 4, !137, i64 32, i64 8, !164}
!620 = !{i64 0, i64 16, !164, i64 16, i64 4, !137, i64 20, i64 4, !137, i64 24, i64 8, !164}
!621 = !{i64 0, i64 8, !164, i64 8, i64 4, !137, i64 12, i64 4, !137, i64 16, i64 8, !164}
!622 = !{i64 0, i64 4, !137, i64 4, i64 4, !137, i64 8, i64 8, !164}
!623 = !{i64 0, i64 4, !137, i64 4, i64 8, !164}
!624 = distinct !{!624, !188, !189}
!625 = distinct !{!625, !161}
!626 = distinct !{!626, !188}
!627 = distinct !{!627, !188, !189}
!628 = distinct !{!628, !161}
!629 = distinct !{!629, !188}
!630 = !{!169, !48, i64 32}
