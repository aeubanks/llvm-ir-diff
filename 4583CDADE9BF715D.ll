; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/ASC_Sequoia/IRSmk/rmatmult3.c'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/ASC_Sequoia/IRSmk/rmatmult3.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.Domain_s = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.RadiationData_t = type { ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr, ptr }

@kmin = common dso_local local_unnamed_addr global i32 0, align 4
@kmax = common dso_local local_unnamed_addr global i32 0, align 4
@jmin = common dso_local local_unnamed_addr global i32 0, align 4
@jmax = common dso_local local_unnamed_addr global i32 0, align 4
@imin = common dso_local local_unnamed_addr global i32 0, align 4
@imax = common dso_local local_unnamed_addr global i32 0, align 4
@kp = common dso_local local_unnamed_addr global i32 0, align 4
@jp = common dso_local local_unnamed_addr global i32 0, align 4
@i_lb = common dso_local local_unnamed_addr global i32 0, align 4
@i_ub = common dso_local local_unnamed_addr global i32 0, align 4
@x_size = common dso_local local_unnamed_addr global i32 0, align 4

; Function Attrs: nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @rmatmult3(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, ptr nocapture noundef readonly %2, ptr nocapture noundef writeonly %3) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.Domain_s, ptr %0, i64 0, i32 2
  %6 = load i32, ptr %5, align 4, !tbaa !5
  %7 = getelementptr inbounds %struct.Domain_s, ptr %0, i64 0, i32 5
  %8 = load i32, ptr %7, align 4, !tbaa !10
  %9 = getelementptr inbounds %struct.Domain_s, ptr %0, i64 0, i32 3
  %10 = load i32, ptr %9, align 4, !tbaa !11
  %11 = getelementptr inbounds %struct.Domain_s, ptr %0, i64 0, i32 6
  %12 = load i32, ptr %11, align 4, !tbaa !12
  %13 = getelementptr inbounds %struct.Domain_s, ptr %0, i64 0, i32 4
  %14 = load i32, ptr %13, align 4, !tbaa !13
  %15 = getelementptr inbounds %struct.Domain_s, ptr %0, i64 0, i32 7
  %16 = load i32, ptr %15, align 4, !tbaa !14
  %17 = getelementptr inbounds %struct.Domain_s, ptr %0, i64 0, i32 17
  %18 = load i32, ptr %17, align 4, !tbaa !15
  %19 = getelementptr inbounds %struct.Domain_s, ptr %0, i64 0, i32 18
  %20 = load i32, ptr %19, align 4, !tbaa !16
  %21 = load ptr, ptr %1, align 8, !tbaa !17
  %22 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 1
  %23 = load ptr, ptr %22, align 8, !tbaa !20
  %24 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 2
  %25 = load ptr, ptr %24, align 8, !tbaa !21
  %26 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 3
  %27 = load ptr, ptr %26, align 8, !tbaa !22
  %28 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 4
  %29 = load ptr, ptr %28, align 8, !tbaa !23
  %30 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 5
  %31 = load ptr, ptr %30, align 8, !tbaa !24
  %32 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 6
  %33 = load ptr, ptr %32, align 8, !tbaa !25
  %34 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 7
  %35 = load ptr, ptr %34, align 8, !tbaa !26
  %36 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 8
  %37 = load ptr, ptr %36, align 8, !tbaa !27
  %38 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 9
  %39 = load ptr, ptr %38, align 8, !tbaa !28
  %40 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 10
  %41 = load ptr, ptr %40, align 8, !tbaa !29
  %42 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 11
  %43 = load ptr, ptr %42, align 8, !tbaa !30
  %44 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 12
  %45 = load ptr, ptr %44, align 8, !tbaa !31
  %46 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 13
  %47 = load ptr, ptr %46, align 8, !tbaa !32
  %48 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 14
  %49 = load ptr, ptr %48, align 8, !tbaa !33
  %50 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 15
  %51 = load ptr, ptr %50, align 8, !tbaa !34
  %52 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 16
  %53 = load ptr, ptr %52, align 8, !tbaa !35
  %54 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 17
  %55 = load ptr, ptr %54, align 8, !tbaa !36
  %56 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 18
  %57 = load ptr, ptr %56, align 8, !tbaa !37
  %58 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 19
  %59 = load ptr, ptr %58, align 8, !tbaa !38
  %60 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 20
  %61 = load ptr, ptr %60, align 8, !tbaa !39
  %62 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 21
  %63 = load ptr, ptr %62, align 8, !tbaa !40
  %64 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 22
  %65 = load ptr, ptr %64, align 8, !tbaa !41
  %66 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 23
  %67 = load ptr, ptr %66, align 8, !tbaa !42
  %68 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 24
  %69 = load ptr, ptr %68, align 8, !tbaa !43
  %70 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 25
  %71 = load ptr, ptr %70, align 8, !tbaa !44
  %72 = getelementptr inbounds %struct.RadiationData_t, ptr %1, i64 0, i32 26
  %73 = load ptr, ptr %72, align 8, !tbaa !45
  %74 = sext i32 %20 to i64
  %75 = sub nsw i64 0, %74
  %76 = getelementptr inbounds double, ptr %2, i64 %75
  %77 = sext i32 %18 to i64
  %78 = sub nsw i64 0, %77
  %79 = getelementptr inbounds double, ptr %76, i64 %78
  %80 = getelementptr inbounds double, ptr %79, i64 -1
  %81 = getelementptr inbounds double, ptr %79, i64 1
  %82 = getelementptr inbounds double, ptr %76, i64 -1
  %83 = getelementptr inbounds double, ptr %76, i64 1
  %84 = getelementptr inbounds double, ptr %76, i64 %77
  %85 = getelementptr inbounds double, ptr %84, i64 -1
  %86 = getelementptr inbounds double, ptr %84, i64 1
  %87 = getelementptr inbounds double, ptr %2, i64 %78
  %88 = getelementptr inbounds double, ptr %87, i64 -1
  %89 = getelementptr inbounds double, ptr %87, i64 1
  %90 = getelementptr inbounds double, ptr %2, i64 -1
  %91 = getelementptr inbounds double, ptr %2, i64 1
  %92 = getelementptr inbounds double, ptr %2, i64 %77
  %93 = getelementptr inbounds double, ptr %92, i64 -1
  %94 = getelementptr inbounds double, ptr %92, i64 1
  %95 = getelementptr inbounds double, ptr %2, i64 %74
  %96 = getelementptr inbounds double, ptr %95, i64 %78
  %97 = getelementptr inbounds double, ptr %96, i64 -1
  %98 = getelementptr inbounds double, ptr %96, i64 1
  %99 = getelementptr inbounds double, ptr %95, i64 -1
  %100 = getelementptr inbounds double, ptr %95, i64 1
  %101 = getelementptr inbounds double, ptr %95, i64 %77
  %102 = getelementptr inbounds double, ptr %101, i64 -1
  %103 = getelementptr inbounds double, ptr %101, i64 1
  %104 = icmp slt i32 %14, %16
  %105 = icmp slt i32 %10, %12
  %106 = select i1 %104, i1 %105, i1 false
  %107 = icmp slt i32 %6, %8
  %108 = select i1 %106, i1 %107, i1 false
  br i1 %108, label %109, label %771

109:                                              ; preds = %4
  %110 = sext i32 %6 to i64
  %111 = sext i32 %8 to i64
  %112 = xor i64 %110, -1
  %113 = add nsw i64 %112, %111
  %114 = mul i32 %14, %20
  %115 = add i32 %6, %114
  %116 = mul i32 %10, %18
  %117 = add i32 %115, %116
  %118 = mul nsw i64 %110, -8
  %119 = getelementptr i8, ptr %3, i64 %118
  %120 = getelementptr i8, ptr %21, i64 %118
  %121 = shl nsw i64 %77, 3
  %122 = shl nsw i64 %74, 3
  %123 = add nsw i64 %121, %122
  %124 = add nsw i64 %123, -8
  %125 = getelementptr i8, ptr %2, i64 %124
  %126 = shl nsw i64 %110, 3
  %127 = sub nsw i64 8, %126
  %128 = getelementptr i8, ptr %2, i64 %127
  %129 = add nsw i64 %111, %74
  %130 = add nsw i64 %129, %77
  %131 = add nsw i64 %122, -8
  %132 = getelementptr i8, ptr %2, i64 %131
  %133 = getelementptr i8, ptr %2, i64 %127
  %134 = add nsw i64 %111, %74
  %135 = add nsw i64 %122, -8
  %136 = sub nsw i64 %135, %121
  %137 = getelementptr i8, ptr %2, i64 %136
  %138 = add nsw i64 %77, %110
  %139 = shl nsw i64 %138, 3
  %140 = sub nsw i64 8, %139
  %141 = getelementptr i8, ptr %2, i64 %140
  %142 = add nsw i64 %121, -8
  %143 = getelementptr i8, ptr %2, i64 %142
  %144 = getelementptr i8, ptr %2, i64 %127
  %145 = add nsw i64 %111, %77
  %146 = getelementptr i8, ptr %2, i64 -8
  %147 = getelementptr i8, ptr %2, i64 %127
  %148 = sub nuw nsw i64 -8, %121
  %149 = getelementptr i8, ptr %2, i64 %148
  %150 = getelementptr i8, ptr %2, i64 %140
  %151 = add nsw i64 %121, -8
  %152 = sub nsw i64 %151, %122
  %153 = getelementptr i8, ptr %2, i64 %152
  %154 = add nsw i64 %74, %110
  %155 = shl nsw i64 %154, 3
  %156 = sub nsw i64 8, %155
  %157 = getelementptr i8, ptr %2, i64 %156
  %158 = sub nuw nsw i64 -8, %122
  %159 = getelementptr i8, ptr %2, i64 %158
  %160 = getelementptr i8, ptr %2, i64 %156
  %161 = add nsw i64 %121, %122
  %162 = sub nsw i64 8, %161
  %163 = getelementptr i8, ptr %2, i64 %162
  %164 = add nsw i64 %74, %77
  %165 = add nsw i64 %164, %110
  %166 = shl nsw i64 %165, 3
  %167 = sub nsw i64 8, %166
  %168 = getelementptr i8, ptr %2, i64 %167
  %169 = mul nsw i64 %77, -8
  %170 = sub nsw i64 %169, %122
  %171 = getelementptr i8, ptr %2, i64 %170
  %172 = mul nsw i64 %165, -8
  %173 = getelementptr i8, ptr %2, i64 %172
  %174 = add nsw i64 %121, %122
  %175 = sub nuw nsw i64 -8, %174
  %176 = getelementptr i8, ptr %2, i64 %175
  %177 = sub nuw nsw i64 -8, %166
  %178 = getelementptr i8, ptr %2, i64 %177
  %179 = getelementptr i8, ptr %23, i64 %118
  %180 = getelementptr i8, ptr %25, i64 %118
  %181 = getelementptr i8, ptr %27, i64 %118
  %182 = getelementptr i8, ptr %29, i64 %118
  %183 = getelementptr i8, ptr %31, i64 %118
  %184 = getelementptr i8, ptr %33, i64 %118
  %185 = getelementptr i8, ptr %35, i64 %118
  %186 = getelementptr i8, ptr %37, i64 %118
  %187 = getelementptr i8, ptr %39, i64 %118
  %188 = getelementptr i8, ptr %41, i64 %118
  %189 = getelementptr i8, ptr %43, i64 %118
  %190 = getelementptr i8, ptr %45, i64 %118
  %191 = getelementptr i8, ptr %47, i64 %118
  %192 = getelementptr i8, ptr %49, i64 %118
  %193 = getelementptr i8, ptr %51, i64 %118
  %194 = getelementptr i8, ptr %53, i64 %118
  %195 = getelementptr i8, ptr %55, i64 %118
  %196 = getelementptr i8, ptr %57, i64 %118
  %197 = getelementptr i8, ptr %59, i64 %118
  %198 = getelementptr i8, ptr %61, i64 %118
  %199 = getelementptr i8, ptr %63, i64 %118
  %200 = getelementptr i8, ptr %65, i64 %118
  %201 = getelementptr i8, ptr %67, i64 %118
  %202 = getelementptr i8, ptr %69, i64 %118
  %203 = getelementptr i8, ptr %71, i64 %118
  %204 = getelementptr i8, ptr %73, i64 %118
  %205 = sub nsw i64 %111, %110
  %206 = icmp ult i64 %205, 10
  %207 = trunc i64 %113 to i32
  %208 = icmp ugt i64 %113, 4294967295
  %209 = and i64 %205, -2
  %210 = add nsw i64 %209, %110
  %211 = icmp eq i64 %205, %209
  br label %212

212:                                              ; preds = %109, %767
  %213 = phi i32 [ 0, %109 ], [ %770, %767 ]
  %214 = phi i32 [ %14, %109 ], [ %768, %767 ]
  %215 = mul i32 %20, %213
  %216 = add i32 %117, %215
  %217 = mul i32 %20, %213
  %218 = add i32 %117, %217
  %219 = mul nsw i32 %214, %20
  br label %220

220:                                              ; preds = %763, %212
  %221 = phi i32 [ %766, %763 ], [ 0, %212 ]
  %222 = phi i32 [ %764, %763 ], [ %10, %212 ]
  %223 = mul i32 %18, %221
  %224 = add i32 %216, %223
  %225 = sext i32 %224 to i64
  %226 = shl nsw i64 %225, 3
  %227 = getelementptr i8, ptr %3, i64 %226
  %228 = add nsw i64 %111, %225
  %229 = shl nsw i64 %228, 3
  %230 = getelementptr i8, ptr %119, i64 %229
  %231 = getelementptr i8, ptr %21, i64 %226
  %232 = getelementptr i8, ptr %120, i64 %229
  %233 = getelementptr i8, ptr %125, i64 %226
  %234 = add nsw i64 %130, %225
  %235 = shl nsw i64 %234, 3
  %236 = getelementptr i8, ptr %128, i64 %235
  %237 = getelementptr i8, ptr %132, i64 %226
  %238 = add nsw i64 %134, %225
  %239 = shl nsw i64 %238, 3
  %240 = getelementptr i8, ptr %133, i64 %239
  %241 = getelementptr i8, ptr %137, i64 %226
  %242 = getelementptr i8, ptr %141, i64 %239
  %243 = getelementptr i8, ptr %143, i64 %226
  %244 = add nsw i64 %145, %225
  %245 = shl nsw i64 %244, 3
  %246 = getelementptr i8, ptr %144, i64 %245
  %247 = getelementptr i8, ptr %146, i64 %226
  %248 = getelementptr i8, ptr %147, i64 %229
  %249 = getelementptr i8, ptr %149, i64 %226
  %250 = getelementptr i8, ptr %150, i64 %229
  %251 = getelementptr i8, ptr %153, i64 %226
  %252 = getelementptr i8, ptr %157, i64 %245
  %253 = getelementptr i8, ptr %159, i64 %226
  %254 = getelementptr i8, ptr %160, i64 %229
  %255 = getelementptr i8, ptr %163, i64 %226
  %256 = getelementptr i8, ptr %168, i64 %229
  %257 = getelementptr i8, ptr %171, i64 %226
  %258 = getelementptr i8, ptr %173, i64 %229
  %259 = getelementptr i8, ptr %176, i64 %226
  %260 = getelementptr i8, ptr %178, i64 %229
  %261 = getelementptr i8, ptr %23, i64 %226
  %262 = getelementptr i8, ptr %179, i64 %229
  %263 = getelementptr i8, ptr %25, i64 %226
  %264 = getelementptr i8, ptr %180, i64 %229
  %265 = getelementptr i8, ptr %27, i64 %226
  %266 = getelementptr i8, ptr %181, i64 %229
  %267 = getelementptr i8, ptr %29, i64 %226
  %268 = getelementptr i8, ptr %182, i64 %229
  %269 = getelementptr i8, ptr %31, i64 %226
  %270 = getelementptr i8, ptr %183, i64 %229
  %271 = getelementptr i8, ptr %33, i64 %226
  %272 = getelementptr i8, ptr %184, i64 %229
  %273 = getelementptr i8, ptr %35, i64 %226
  %274 = getelementptr i8, ptr %185, i64 %229
  %275 = getelementptr i8, ptr %37, i64 %226
  %276 = getelementptr i8, ptr %186, i64 %229
  %277 = getelementptr i8, ptr %39, i64 %226
  %278 = getelementptr i8, ptr %187, i64 %229
  %279 = getelementptr i8, ptr %41, i64 %226
  %280 = getelementptr i8, ptr %188, i64 %229
  %281 = getelementptr i8, ptr %43, i64 %226
  %282 = getelementptr i8, ptr %189, i64 %229
  %283 = getelementptr i8, ptr %45, i64 %226
  %284 = getelementptr i8, ptr %190, i64 %229
  %285 = getelementptr i8, ptr %47, i64 %226
  %286 = getelementptr i8, ptr %191, i64 %229
  %287 = getelementptr i8, ptr %49, i64 %226
  %288 = getelementptr i8, ptr %192, i64 %229
  %289 = getelementptr i8, ptr %51, i64 %226
  %290 = getelementptr i8, ptr %193, i64 %229
  %291 = getelementptr i8, ptr %53, i64 %226
  %292 = getelementptr i8, ptr %194, i64 %229
  %293 = getelementptr i8, ptr %55, i64 %226
  %294 = getelementptr i8, ptr %195, i64 %229
  %295 = getelementptr i8, ptr %57, i64 %226
  %296 = getelementptr i8, ptr %196, i64 %229
  %297 = getelementptr i8, ptr %59, i64 %226
  %298 = getelementptr i8, ptr %197, i64 %229
  %299 = getelementptr i8, ptr %61, i64 %226
  %300 = getelementptr i8, ptr %198, i64 %229
  %301 = getelementptr i8, ptr %63, i64 %226
  %302 = getelementptr i8, ptr %199, i64 %229
  %303 = getelementptr i8, ptr %65, i64 %226
  %304 = getelementptr i8, ptr %200, i64 %229
  %305 = getelementptr i8, ptr %67, i64 %226
  %306 = getelementptr i8, ptr %201, i64 %229
  %307 = getelementptr i8, ptr %69, i64 %226
  %308 = getelementptr i8, ptr %202, i64 %229
  %309 = getelementptr i8, ptr %71, i64 %226
  %310 = getelementptr i8, ptr %203, i64 %229
  %311 = getelementptr i8, ptr %73, i64 %226
  %312 = getelementptr i8, ptr %204, i64 %229
  %313 = mul nsw i32 %222, %18
  %314 = add i32 %313, %219
  br i1 %206, label %618, label %315

315:                                              ; preds = %220
  %316 = mul i32 %18, %221
  %317 = add i32 %218, %316
  %318 = add i32 %317, %207
  %319 = icmp slt i32 %318, %317
  %320 = or i1 %319, %208
  br i1 %320, label %618, label %321

321:                                              ; preds = %315
  %322 = icmp ult ptr %227, %232
  %323 = icmp ult ptr %231, %230
  %324 = and i1 %322, %323
  %325 = icmp ult ptr %227, %236
  %326 = icmp ult ptr %233, %230
  %327 = and i1 %325, %326
  %328 = or i1 %324, %327
  %329 = icmp ult ptr %227, %240
  %330 = icmp ult ptr %237, %230
  %331 = and i1 %329, %330
  %332 = or i1 %328, %331
  %333 = icmp ult ptr %227, %242
  %334 = icmp ult ptr %241, %230
  %335 = and i1 %333, %334
  %336 = or i1 %332, %335
  %337 = icmp ult ptr %227, %246
  %338 = icmp ult ptr %243, %230
  %339 = and i1 %337, %338
  %340 = or i1 %336, %339
  %341 = icmp ult ptr %227, %248
  %342 = icmp ult ptr %247, %230
  %343 = and i1 %341, %342
  %344 = or i1 %340, %343
  %345 = icmp ult ptr %227, %250
  %346 = icmp ult ptr %249, %230
  %347 = and i1 %345, %346
  %348 = or i1 %344, %347
  %349 = icmp ult ptr %227, %252
  %350 = icmp ult ptr %251, %230
  %351 = and i1 %349, %350
  %352 = or i1 %348, %351
  %353 = icmp ult ptr %227, %254
  %354 = icmp ult ptr %253, %230
  %355 = and i1 %353, %354
  %356 = or i1 %352, %355
  %357 = icmp ult ptr %227, %256
  %358 = icmp ult ptr %255, %230
  %359 = and i1 %357, %358
  %360 = or i1 %356, %359
  %361 = icmp ult ptr %227, %258
  %362 = icmp ult ptr %257, %230
  %363 = and i1 %361, %362
  %364 = or i1 %360, %363
  %365 = icmp ult ptr %227, %260
  %366 = icmp ult ptr %259, %230
  %367 = and i1 %365, %366
  %368 = or i1 %364, %367
  %369 = icmp ult ptr %227, %262
  %370 = icmp ult ptr %261, %230
  %371 = and i1 %369, %370
  %372 = or i1 %368, %371
  %373 = icmp ult ptr %227, %264
  %374 = icmp ult ptr %263, %230
  %375 = and i1 %373, %374
  %376 = or i1 %372, %375
  %377 = icmp ult ptr %227, %266
  %378 = icmp ult ptr %265, %230
  %379 = and i1 %377, %378
  %380 = or i1 %376, %379
  %381 = icmp ult ptr %227, %268
  %382 = icmp ult ptr %267, %230
  %383 = and i1 %381, %382
  %384 = or i1 %380, %383
  %385 = icmp ult ptr %227, %270
  %386 = icmp ult ptr %269, %230
  %387 = and i1 %385, %386
  %388 = or i1 %384, %387
  %389 = icmp ult ptr %227, %272
  %390 = icmp ult ptr %271, %230
  %391 = and i1 %389, %390
  %392 = or i1 %388, %391
  %393 = icmp ult ptr %227, %274
  %394 = icmp ult ptr %273, %230
  %395 = and i1 %393, %394
  %396 = or i1 %392, %395
  %397 = icmp ult ptr %227, %276
  %398 = icmp ult ptr %275, %230
  %399 = and i1 %397, %398
  %400 = or i1 %396, %399
  %401 = icmp ult ptr %227, %278
  %402 = icmp ult ptr %277, %230
  %403 = and i1 %401, %402
  %404 = or i1 %400, %403
  %405 = icmp ult ptr %227, %280
  %406 = icmp ult ptr %279, %230
  %407 = and i1 %405, %406
  %408 = or i1 %404, %407
  %409 = icmp ult ptr %227, %282
  %410 = icmp ult ptr %281, %230
  %411 = and i1 %409, %410
  %412 = or i1 %408, %411
  %413 = icmp ult ptr %227, %284
  %414 = icmp ult ptr %283, %230
  %415 = and i1 %413, %414
  %416 = or i1 %412, %415
  %417 = icmp ult ptr %227, %286
  %418 = icmp ult ptr %285, %230
  %419 = and i1 %417, %418
  %420 = or i1 %416, %419
  %421 = icmp ult ptr %227, %288
  %422 = icmp ult ptr %287, %230
  %423 = and i1 %421, %422
  %424 = or i1 %420, %423
  %425 = icmp ult ptr %227, %290
  %426 = icmp ult ptr %289, %230
  %427 = and i1 %425, %426
  %428 = or i1 %424, %427
  %429 = icmp ult ptr %227, %292
  %430 = icmp ult ptr %291, %230
  %431 = and i1 %429, %430
  %432 = or i1 %428, %431
  %433 = icmp ult ptr %227, %294
  %434 = icmp ult ptr %293, %230
  %435 = and i1 %433, %434
  %436 = or i1 %432, %435
  %437 = icmp ult ptr %227, %296
  %438 = icmp ult ptr %295, %230
  %439 = and i1 %437, %438
  %440 = or i1 %436, %439
  %441 = icmp ult ptr %227, %298
  %442 = icmp ult ptr %297, %230
  %443 = and i1 %441, %442
  %444 = or i1 %440, %443
  %445 = icmp ult ptr %227, %300
  %446 = icmp ult ptr %299, %230
  %447 = and i1 %445, %446
  %448 = or i1 %444, %447
  %449 = icmp ult ptr %227, %302
  %450 = icmp ult ptr %301, %230
  %451 = and i1 %449, %450
  %452 = or i1 %448, %451
  %453 = icmp ult ptr %227, %304
  %454 = icmp ult ptr %303, %230
  %455 = and i1 %453, %454
  %456 = or i1 %452, %455
  %457 = icmp ult ptr %227, %306
  %458 = icmp ult ptr %305, %230
  %459 = and i1 %457, %458
  %460 = or i1 %456, %459
  %461 = icmp ult ptr %227, %308
  %462 = icmp ult ptr %307, %230
  %463 = and i1 %461, %462
  %464 = or i1 %460, %463
  %465 = icmp ult ptr %227, %310
  %466 = icmp ult ptr %309, %230
  %467 = and i1 %465, %466
  %468 = or i1 %464, %467
  %469 = icmp ult ptr %227, %312
  %470 = icmp ult ptr %311, %230
  %471 = and i1 %469, %470
  %472 = or i1 %468, %471
  br i1 %472, label %618, label %473

473:                                              ; preds = %321, %473
  %474 = phi i64 [ %615, %473 ], [ 0, %321 ]
  %475 = trunc i64 %474 to i32
  %476 = add i32 %6, %475
  %477 = add i32 %314, %476
  %478 = sext i32 %477 to i64
  %479 = getelementptr inbounds double, ptr %21, i64 %478
  %480 = load <2 x double>, ptr %479, align 8, !tbaa !46, !alias.scope !48
  %481 = getelementptr inbounds double, ptr %80, i64 %478
  %482 = load <2 x double>, ptr %481, align 8, !tbaa !46, !alias.scope !51
  %483 = getelementptr inbounds double, ptr %23, i64 %478
  %484 = load <2 x double>, ptr %483, align 8, !tbaa !46, !alias.scope !53
  %485 = getelementptr inbounds double, ptr %79, i64 %478
  %486 = load <2 x double>, ptr %485, align 8, !tbaa !46, !alias.scope !55
  %487 = fmul <2 x double> %484, %486
  %488 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %480, <2 x double> %482, <2 x double> %487)
  %489 = getelementptr inbounds double, ptr %25, i64 %478
  %490 = load <2 x double>, ptr %489, align 8, !tbaa !46, !alias.scope !57
  %491 = getelementptr inbounds double, ptr %81, i64 %478
  %492 = load <2 x double>, ptr %491, align 8, !tbaa !46, !alias.scope !59
  %493 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %490, <2 x double> %492, <2 x double> %488)
  %494 = getelementptr inbounds double, ptr %27, i64 %478
  %495 = load <2 x double>, ptr %494, align 8, !tbaa !46, !alias.scope !61
  %496 = getelementptr inbounds double, ptr %82, i64 %478
  %497 = load <2 x double>, ptr %496, align 8, !tbaa !46, !alias.scope !63
  %498 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %495, <2 x double> %497, <2 x double> %493)
  %499 = getelementptr inbounds double, ptr %29, i64 %478
  %500 = load <2 x double>, ptr %499, align 8, !tbaa !46, !alias.scope !65
  %501 = getelementptr inbounds double, ptr %76, i64 %478
  %502 = load <2 x double>, ptr %501, align 8, !tbaa !46, !alias.scope !63
  %503 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %500, <2 x double> %502, <2 x double> %498)
  %504 = getelementptr inbounds double, ptr %31, i64 %478
  %505 = load <2 x double>, ptr %504, align 8, !tbaa !46, !alias.scope !67
  %506 = getelementptr inbounds double, ptr %83, i64 %478
  %507 = load <2 x double>, ptr %506, align 8, !tbaa !46, !alias.scope !63
  %508 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %505, <2 x double> %507, <2 x double> %503)
  %509 = getelementptr inbounds double, ptr %33, i64 %478
  %510 = load <2 x double>, ptr %509, align 8, !tbaa !46, !alias.scope !69
  %511 = getelementptr inbounds double, ptr %85, i64 %478
  %512 = load <2 x double>, ptr %511, align 8, !tbaa !46, !alias.scope !71
  %513 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %510, <2 x double> %512, <2 x double> %508)
  %514 = getelementptr inbounds double, ptr %35, i64 %478
  %515 = load <2 x double>, ptr %514, align 8, !tbaa !46, !alias.scope !73
  %516 = getelementptr inbounds double, ptr %84, i64 %478
  %517 = load <2 x double>, ptr %516, align 8, !tbaa !46, !alias.scope !71
  %518 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %515, <2 x double> %517, <2 x double> %513)
  %519 = getelementptr inbounds double, ptr %37, i64 %478
  %520 = load <2 x double>, ptr %519, align 8, !tbaa !46, !alias.scope !75
  %521 = getelementptr inbounds double, ptr %86, i64 %478
  %522 = load <2 x double>, ptr %521, align 8, !tbaa !46, !alias.scope !71
  %523 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %520, <2 x double> %522, <2 x double> %518)
  %524 = getelementptr inbounds double, ptr %39, i64 %478
  %525 = load <2 x double>, ptr %524, align 8, !tbaa !46, !alias.scope !77
  %526 = getelementptr inbounds double, ptr %88, i64 %478
  %527 = load <2 x double>, ptr %526, align 8, !tbaa !46, !alias.scope !79
  %528 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %525, <2 x double> %527, <2 x double> %523)
  %529 = getelementptr inbounds double, ptr %41, i64 %478
  %530 = load <2 x double>, ptr %529, align 8, !tbaa !46, !alias.scope !81
  %531 = getelementptr inbounds double, ptr %87, i64 %478
  %532 = load <2 x double>, ptr %531, align 8, !tbaa !46, !alias.scope !79
  %533 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %530, <2 x double> %532, <2 x double> %528)
  %534 = getelementptr inbounds double, ptr %43, i64 %478
  %535 = load <2 x double>, ptr %534, align 8, !tbaa !46, !alias.scope !83
  %536 = getelementptr inbounds double, ptr %89, i64 %478
  %537 = load <2 x double>, ptr %536, align 8, !tbaa !46, !alias.scope !79
  %538 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %535, <2 x double> %537, <2 x double> %533)
  %539 = getelementptr inbounds double, ptr %45, i64 %478
  %540 = load <2 x double>, ptr %539, align 8, !tbaa !46, !alias.scope !85
  %541 = getelementptr inbounds double, ptr %90, i64 %478
  %542 = load <2 x double>, ptr %541, align 8, !tbaa !46, !alias.scope !87
  %543 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %540, <2 x double> %542, <2 x double> %538)
  %544 = getelementptr inbounds double, ptr %47, i64 %478
  %545 = load <2 x double>, ptr %544, align 8, !tbaa !46, !alias.scope !89
  %546 = getelementptr inbounds double, ptr %2, i64 %478
  %547 = load <2 x double>, ptr %546, align 8, !tbaa !46, !alias.scope !87
  %548 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %545, <2 x double> %547, <2 x double> %543)
  %549 = getelementptr inbounds double, ptr %49, i64 %478
  %550 = load <2 x double>, ptr %549, align 8, !tbaa !46, !alias.scope !91
  %551 = getelementptr inbounds double, ptr %91, i64 %478
  %552 = load <2 x double>, ptr %551, align 8, !tbaa !46, !alias.scope !87
  %553 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %550, <2 x double> %552, <2 x double> %548)
  %554 = getelementptr inbounds double, ptr %51, i64 %478
  %555 = load <2 x double>, ptr %554, align 8, !tbaa !46, !alias.scope !93
  %556 = getelementptr inbounds double, ptr %93, i64 %478
  %557 = load <2 x double>, ptr %556, align 8, !tbaa !46, !alias.scope !95
  %558 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %555, <2 x double> %557, <2 x double> %553)
  %559 = getelementptr inbounds double, ptr %53, i64 %478
  %560 = load <2 x double>, ptr %559, align 8, !tbaa !46, !alias.scope !97
  %561 = getelementptr inbounds double, ptr %92, i64 %478
  %562 = load <2 x double>, ptr %561, align 8, !tbaa !46, !alias.scope !95
  %563 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %560, <2 x double> %562, <2 x double> %558)
  %564 = getelementptr inbounds double, ptr %55, i64 %478
  %565 = load <2 x double>, ptr %564, align 8, !tbaa !46, !alias.scope !99
  %566 = getelementptr inbounds double, ptr %94, i64 %478
  %567 = load <2 x double>, ptr %566, align 8, !tbaa !46, !alias.scope !95
  %568 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %565, <2 x double> %567, <2 x double> %563)
  %569 = getelementptr inbounds double, ptr %57, i64 %478
  %570 = load <2 x double>, ptr %569, align 8, !tbaa !46, !alias.scope !101
  %571 = getelementptr inbounds double, ptr %97, i64 %478
  %572 = load <2 x double>, ptr %571, align 8, !tbaa !46, !alias.scope !103
  %573 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %570, <2 x double> %572, <2 x double> %568)
  %574 = getelementptr inbounds double, ptr %59, i64 %478
  %575 = load <2 x double>, ptr %574, align 8, !tbaa !46, !alias.scope !105
  %576 = getelementptr inbounds double, ptr %96, i64 %478
  %577 = load <2 x double>, ptr %576, align 8, !tbaa !46, !alias.scope !103
  %578 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %575, <2 x double> %577, <2 x double> %573)
  %579 = getelementptr inbounds double, ptr %61, i64 %478
  %580 = load <2 x double>, ptr %579, align 8, !tbaa !46, !alias.scope !107
  %581 = getelementptr inbounds double, ptr %98, i64 %478
  %582 = load <2 x double>, ptr %581, align 8, !tbaa !46, !alias.scope !103
  %583 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %580, <2 x double> %582, <2 x double> %578)
  %584 = getelementptr inbounds double, ptr %63, i64 %478
  %585 = load <2 x double>, ptr %584, align 8, !tbaa !46, !alias.scope !109
  %586 = getelementptr inbounds double, ptr %99, i64 %478
  %587 = load <2 x double>, ptr %586, align 8, !tbaa !46, !alias.scope !111
  %588 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %585, <2 x double> %587, <2 x double> %583)
  %589 = getelementptr inbounds double, ptr %65, i64 %478
  %590 = load <2 x double>, ptr %589, align 8, !tbaa !46, !alias.scope !113
  %591 = getelementptr inbounds double, ptr %95, i64 %478
  %592 = load <2 x double>, ptr %591, align 8, !tbaa !46, !alias.scope !111
  %593 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %590, <2 x double> %592, <2 x double> %588)
  %594 = getelementptr inbounds double, ptr %67, i64 %478
  %595 = load <2 x double>, ptr %594, align 8, !tbaa !46, !alias.scope !115
  %596 = getelementptr inbounds double, ptr %100, i64 %478
  %597 = load <2 x double>, ptr %596, align 8, !tbaa !46, !alias.scope !111
  %598 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %595, <2 x double> %597, <2 x double> %593)
  %599 = getelementptr inbounds double, ptr %69, i64 %478
  %600 = load <2 x double>, ptr %599, align 8, !tbaa !46, !alias.scope !117
  %601 = getelementptr inbounds double, ptr %102, i64 %478
  %602 = load <2 x double>, ptr %601, align 8, !tbaa !46, !alias.scope !119
  %603 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %600, <2 x double> %602, <2 x double> %598)
  %604 = getelementptr inbounds double, ptr %71, i64 %478
  %605 = load <2 x double>, ptr %604, align 8, !tbaa !46, !alias.scope !121
  %606 = getelementptr inbounds double, ptr %101, i64 %478
  %607 = load <2 x double>, ptr %606, align 8, !tbaa !46, !alias.scope !119
  %608 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %605, <2 x double> %607, <2 x double> %603)
  %609 = getelementptr inbounds double, ptr %73, i64 %478
  %610 = load <2 x double>, ptr %609, align 8, !tbaa !46, !alias.scope !123
  %611 = getelementptr inbounds double, ptr %103, i64 %478
  %612 = load <2 x double>, ptr %611, align 8, !tbaa !46, !alias.scope !119
  %613 = tail call <2 x double> @llvm.fmuladd.v2f64(<2 x double> %610, <2 x double> %612, <2 x double> %608)
  %614 = getelementptr inbounds double, ptr %3, i64 %478
  store <2 x double> %613, ptr %614, align 8, !tbaa !46, !alias.scope !125, !noalias !127
  %615 = add nuw i64 %474, 2
  %616 = icmp eq i64 %615, %209
  br i1 %616, label %617, label %473, !llvm.loop !128

617:                                              ; preds = %473
  br i1 %211, label %763, label %618

618:                                              ; preds = %321, %315, %220, %617
  %619 = phi i64 [ %110, %321 ], [ %110, %315 ], [ %110, %220 ], [ %210, %617 ]
  br label %620

620:                                              ; preds = %618, %620
  %621 = phi i64 [ %761, %620 ], [ %619, %618 ]
  %622 = trunc i64 %621 to i32
  %623 = add i32 %314, %622
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds double, ptr %21, i64 %624
  %626 = load double, ptr %625, align 8, !tbaa !46
  %627 = getelementptr inbounds double, ptr %80, i64 %624
  %628 = load double, ptr %627, align 8, !tbaa !46
  %629 = getelementptr inbounds double, ptr %23, i64 %624
  %630 = load double, ptr %629, align 8, !tbaa !46
  %631 = getelementptr inbounds double, ptr %79, i64 %624
  %632 = load double, ptr %631, align 8, !tbaa !46
  %633 = fmul double %630, %632
  %634 = tail call double @llvm.fmuladd.f64(double %626, double %628, double %633)
  %635 = getelementptr inbounds double, ptr %25, i64 %624
  %636 = load double, ptr %635, align 8, !tbaa !46
  %637 = getelementptr inbounds double, ptr %81, i64 %624
  %638 = load double, ptr %637, align 8, !tbaa !46
  %639 = tail call double @llvm.fmuladd.f64(double %636, double %638, double %634)
  %640 = getelementptr inbounds double, ptr %27, i64 %624
  %641 = load double, ptr %640, align 8, !tbaa !46
  %642 = getelementptr inbounds double, ptr %82, i64 %624
  %643 = load double, ptr %642, align 8, !tbaa !46
  %644 = tail call double @llvm.fmuladd.f64(double %641, double %643, double %639)
  %645 = getelementptr inbounds double, ptr %29, i64 %624
  %646 = load double, ptr %645, align 8, !tbaa !46
  %647 = getelementptr inbounds double, ptr %76, i64 %624
  %648 = load double, ptr %647, align 8, !tbaa !46
  %649 = tail call double @llvm.fmuladd.f64(double %646, double %648, double %644)
  %650 = getelementptr inbounds double, ptr %31, i64 %624
  %651 = load double, ptr %650, align 8, !tbaa !46
  %652 = getelementptr inbounds double, ptr %83, i64 %624
  %653 = load double, ptr %652, align 8, !tbaa !46
  %654 = tail call double @llvm.fmuladd.f64(double %651, double %653, double %649)
  %655 = getelementptr inbounds double, ptr %33, i64 %624
  %656 = load double, ptr %655, align 8, !tbaa !46
  %657 = getelementptr inbounds double, ptr %85, i64 %624
  %658 = load double, ptr %657, align 8, !tbaa !46
  %659 = tail call double @llvm.fmuladd.f64(double %656, double %658, double %654)
  %660 = getelementptr inbounds double, ptr %35, i64 %624
  %661 = load double, ptr %660, align 8, !tbaa !46
  %662 = getelementptr inbounds double, ptr %84, i64 %624
  %663 = load double, ptr %662, align 8, !tbaa !46
  %664 = tail call double @llvm.fmuladd.f64(double %661, double %663, double %659)
  %665 = getelementptr inbounds double, ptr %37, i64 %624
  %666 = load double, ptr %665, align 8, !tbaa !46
  %667 = getelementptr inbounds double, ptr %86, i64 %624
  %668 = load double, ptr %667, align 8, !tbaa !46
  %669 = tail call double @llvm.fmuladd.f64(double %666, double %668, double %664)
  %670 = getelementptr inbounds double, ptr %39, i64 %624
  %671 = load double, ptr %670, align 8, !tbaa !46
  %672 = getelementptr inbounds double, ptr %88, i64 %624
  %673 = load double, ptr %672, align 8, !tbaa !46
  %674 = tail call double @llvm.fmuladd.f64(double %671, double %673, double %669)
  %675 = getelementptr inbounds double, ptr %41, i64 %624
  %676 = load double, ptr %675, align 8, !tbaa !46
  %677 = getelementptr inbounds double, ptr %87, i64 %624
  %678 = load double, ptr %677, align 8, !tbaa !46
  %679 = tail call double @llvm.fmuladd.f64(double %676, double %678, double %674)
  %680 = getelementptr inbounds double, ptr %43, i64 %624
  %681 = load double, ptr %680, align 8, !tbaa !46
  %682 = getelementptr inbounds double, ptr %89, i64 %624
  %683 = load double, ptr %682, align 8, !tbaa !46
  %684 = tail call double @llvm.fmuladd.f64(double %681, double %683, double %679)
  %685 = getelementptr inbounds double, ptr %45, i64 %624
  %686 = load double, ptr %685, align 8, !tbaa !46
  %687 = getelementptr inbounds double, ptr %90, i64 %624
  %688 = load double, ptr %687, align 8, !tbaa !46
  %689 = tail call double @llvm.fmuladd.f64(double %686, double %688, double %684)
  %690 = getelementptr inbounds double, ptr %47, i64 %624
  %691 = load double, ptr %690, align 8, !tbaa !46
  %692 = getelementptr inbounds double, ptr %2, i64 %624
  %693 = load double, ptr %692, align 8, !tbaa !46
  %694 = tail call double @llvm.fmuladd.f64(double %691, double %693, double %689)
  %695 = getelementptr inbounds double, ptr %49, i64 %624
  %696 = load double, ptr %695, align 8, !tbaa !46
  %697 = getelementptr inbounds double, ptr %91, i64 %624
  %698 = load double, ptr %697, align 8, !tbaa !46
  %699 = tail call double @llvm.fmuladd.f64(double %696, double %698, double %694)
  %700 = getelementptr inbounds double, ptr %51, i64 %624
  %701 = load double, ptr %700, align 8, !tbaa !46
  %702 = getelementptr inbounds double, ptr %93, i64 %624
  %703 = load double, ptr %702, align 8, !tbaa !46
  %704 = tail call double @llvm.fmuladd.f64(double %701, double %703, double %699)
  %705 = getelementptr inbounds double, ptr %53, i64 %624
  %706 = load double, ptr %705, align 8, !tbaa !46
  %707 = getelementptr inbounds double, ptr %92, i64 %624
  %708 = load double, ptr %707, align 8, !tbaa !46
  %709 = tail call double @llvm.fmuladd.f64(double %706, double %708, double %704)
  %710 = getelementptr inbounds double, ptr %55, i64 %624
  %711 = load double, ptr %710, align 8, !tbaa !46
  %712 = getelementptr inbounds double, ptr %94, i64 %624
  %713 = load double, ptr %712, align 8, !tbaa !46
  %714 = tail call double @llvm.fmuladd.f64(double %711, double %713, double %709)
  %715 = getelementptr inbounds double, ptr %57, i64 %624
  %716 = load double, ptr %715, align 8, !tbaa !46
  %717 = getelementptr inbounds double, ptr %97, i64 %624
  %718 = load double, ptr %717, align 8, !tbaa !46
  %719 = tail call double @llvm.fmuladd.f64(double %716, double %718, double %714)
  %720 = getelementptr inbounds double, ptr %59, i64 %624
  %721 = load double, ptr %720, align 8, !tbaa !46
  %722 = getelementptr inbounds double, ptr %96, i64 %624
  %723 = load double, ptr %722, align 8, !tbaa !46
  %724 = tail call double @llvm.fmuladd.f64(double %721, double %723, double %719)
  %725 = getelementptr inbounds double, ptr %61, i64 %624
  %726 = load double, ptr %725, align 8, !tbaa !46
  %727 = getelementptr inbounds double, ptr %98, i64 %624
  %728 = load double, ptr %727, align 8, !tbaa !46
  %729 = tail call double @llvm.fmuladd.f64(double %726, double %728, double %724)
  %730 = getelementptr inbounds double, ptr %63, i64 %624
  %731 = load double, ptr %730, align 8, !tbaa !46
  %732 = getelementptr inbounds double, ptr %99, i64 %624
  %733 = load double, ptr %732, align 8, !tbaa !46
  %734 = tail call double @llvm.fmuladd.f64(double %731, double %733, double %729)
  %735 = getelementptr inbounds double, ptr %65, i64 %624
  %736 = load double, ptr %735, align 8, !tbaa !46
  %737 = getelementptr inbounds double, ptr %95, i64 %624
  %738 = load double, ptr %737, align 8, !tbaa !46
  %739 = tail call double @llvm.fmuladd.f64(double %736, double %738, double %734)
  %740 = getelementptr inbounds double, ptr %67, i64 %624
  %741 = load double, ptr %740, align 8, !tbaa !46
  %742 = getelementptr inbounds double, ptr %100, i64 %624
  %743 = load double, ptr %742, align 8, !tbaa !46
  %744 = tail call double @llvm.fmuladd.f64(double %741, double %743, double %739)
  %745 = getelementptr inbounds double, ptr %69, i64 %624
  %746 = load double, ptr %745, align 8, !tbaa !46
  %747 = getelementptr inbounds double, ptr %102, i64 %624
  %748 = load double, ptr %747, align 8, !tbaa !46
  %749 = tail call double @llvm.fmuladd.f64(double %746, double %748, double %744)
  %750 = getelementptr inbounds double, ptr %71, i64 %624
  %751 = load double, ptr %750, align 8, !tbaa !46
  %752 = getelementptr inbounds double, ptr %101, i64 %624
  %753 = load double, ptr %752, align 8, !tbaa !46
  %754 = tail call double @llvm.fmuladd.f64(double %751, double %753, double %749)
  %755 = getelementptr inbounds double, ptr %73, i64 %624
  %756 = load double, ptr %755, align 8, !tbaa !46
  %757 = getelementptr inbounds double, ptr %103, i64 %624
  %758 = load double, ptr %757, align 8, !tbaa !46
  %759 = tail call double @llvm.fmuladd.f64(double %756, double %758, double %754)
  %760 = getelementptr inbounds double, ptr %3, i64 %624
  store double %759, ptr %760, align 8, !tbaa !46
  %761 = add nsw i64 %621, 1
  %762 = icmp eq i64 %761, %111
  br i1 %762, label %763, label %620, !llvm.loop !132

763:                                              ; preds = %620, %617
  %764 = add nsw i32 %222, 1
  %765 = icmp eq i32 %764, %12
  %766 = add i32 %221, 1
  br i1 %765, label %767, label %220, !llvm.loop !133

767:                                              ; preds = %763
  %768 = add nsw i32 %214, 1
  %769 = icmp eq i32 %768, %16
  %770 = add i32 %213, 1
  br i1 %769, label %771, label %212, !llvm.loop !134

771:                                              ; preds = %767, %4
  ret void
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #1

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <2 x double> @llvm.fmuladd.v2f64(<2 x double>, <2 x double>, <2 x double>) #2

attributes #0 = { nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #2 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !7, i64 8}
!6 = !{!"Domain_s", !7, i64 0, !7, i64 4, !7, i64 8, !7, i64 12, !7, i64 16, !7, i64 20, !7, i64 24, !7, i64 28, !7, i64 32, !7, i64 36, !7, i64 40, !7, i64 44, !7, i64 48, !7, i64 52, !7, i64 56, !7, i64 60, !7, i64 64, !7, i64 68, !7, i64 72}
!7 = !{!"int", !8, i64 0}
!8 = !{!"omnipotent char", !9, i64 0}
!9 = !{!"Simple C/C++ TBAA"}
!10 = !{!6, !7, i64 20}
!11 = !{!6, !7, i64 12}
!12 = !{!6, !7, i64 24}
!13 = !{!6, !7, i64 16}
!14 = !{!6, !7, i64 28}
!15 = !{!6, !7, i64 68}
!16 = !{!6, !7, i64 72}
!17 = !{!18, !19, i64 0}
!18 = !{!"", !19, i64 0, !19, i64 8, !19, i64 16, !19, i64 24, !19, i64 32, !19, i64 40, !19, i64 48, !19, i64 56, !19, i64 64, !19, i64 72, !19, i64 80, !19, i64 88, !19, i64 96, !19, i64 104, !19, i64 112, !19, i64 120, !19, i64 128, !19, i64 136, !19, i64 144, !19, i64 152, !19, i64 160, !19, i64 168, !19, i64 176, !19, i64 184, !19, i64 192, !19, i64 200, !19, i64 208}
!19 = !{!"any pointer", !8, i64 0}
!20 = !{!18, !19, i64 8}
!21 = !{!18, !19, i64 16}
!22 = !{!18, !19, i64 24}
!23 = !{!18, !19, i64 32}
!24 = !{!18, !19, i64 40}
!25 = !{!18, !19, i64 48}
!26 = !{!18, !19, i64 56}
!27 = !{!18, !19, i64 64}
!28 = !{!18, !19, i64 72}
!29 = !{!18, !19, i64 80}
!30 = !{!18, !19, i64 88}
!31 = !{!18, !19, i64 96}
!32 = !{!18, !19, i64 104}
!33 = !{!18, !19, i64 112}
!34 = !{!18, !19, i64 120}
!35 = !{!18, !19, i64 128}
!36 = !{!18, !19, i64 136}
!37 = !{!18, !19, i64 144}
!38 = !{!18, !19, i64 152}
!39 = !{!18, !19, i64 160}
!40 = !{!18, !19, i64 168}
!41 = !{!18, !19, i64 176}
!42 = !{!18, !19, i64 184}
!43 = !{!18, !19, i64 192}
!44 = !{!18, !19, i64 200}
!45 = !{!18, !19, i64 208}
!46 = !{!47, !47, i64 0}
!47 = !{!"double", !8, i64 0}
!48 = !{!49}
!49 = distinct !{!49, !50}
!50 = distinct !{!50, !"LVerDomain"}
!51 = !{!52}
!52 = distinct !{!52, !50}
!53 = !{!54}
!54 = distinct !{!54, !50}
!55 = !{!56}
!56 = distinct !{!56, !50}
!57 = !{!58}
!58 = distinct !{!58, !50}
!59 = !{!60}
!60 = distinct !{!60, !50}
!61 = !{!62}
!62 = distinct !{!62, !50}
!63 = !{!64}
!64 = distinct !{!64, !50}
!65 = !{!66}
!66 = distinct !{!66, !50}
!67 = !{!68}
!68 = distinct !{!68, !50}
!69 = !{!70}
!70 = distinct !{!70, !50}
!71 = !{!72}
!72 = distinct !{!72, !50}
!73 = !{!74}
!74 = distinct !{!74, !50}
!75 = !{!76}
!76 = distinct !{!76, !50}
!77 = !{!78}
!78 = distinct !{!78, !50}
!79 = !{!80}
!80 = distinct !{!80, !50}
!81 = !{!82}
!82 = distinct !{!82, !50}
!83 = !{!84}
!84 = distinct !{!84, !50}
!85 = !{!86}
!86 = distinct !{!86, !50}
!87 = !{!88}
!88 = distinct !{!88, !50}
!89 = !{!90}
!90 = distinct !{!90, !50}
!91 = !{!92}
!92 = distinct !{!92, !50}
!93 = !{!94}
!94 = distinct !{!94, !50}
!95 = !{!96}
!96 = distinct !{!96, !50}
!97 = !{!98}
!98 = distinct !{!98, !50}
!99 = !{!100}
!100 = distinct !{!100, !50}
!101 = !{!102}
!102 = distinct !{!102, !50}
!103 = !{!104}
!104 = distinct !{!104, !50}
!105 = !{!106}
!106 = distinct !{!106, !50}
!107 = !{!108}
!108 = distinct !{!108, !50}
!109 = !{!110}
!110 = distinct !{!110, !50}
!111 = !{!112}
!112 = distinct !{!112, !50}
!113 = !{!114}
!114 = distinct !{!114, !50}
!115 = !{!116}
!116 = distinct !{!116, !50}
!117 = !{!118}
!118 = distinct !{!118, !50}
!119 = !{!120}
!120 = distinct !{!120, !50}
!121 = !{!122}
!122 = distinct !{!122, !50}
!123 = !{!124}
!124 = distinct !{!124, !50}
!125 = !{!126}
!126 = distinct !{!126, !50}
!127 = !{!49, !120, !112, !104, !96, !88, !80, !72, !64, !60, !56, !52, !54, !58, !62, !66, !68, !70, !74, !76, !78, !82, !84, !86, !90, !92, !94, !98, !100, !102, !106, !108, !110, !114, !116, !118, !122, !124}
!128 = distinct !{!128, !129, !130, !131}
!129 = !{!"llvm.loop.mustprogress"}
!130 = !{!"llvm.loop.isvectorized", i32 1}
!131 = !{!"llvm.loop.unroll.runtime.disable"}
!132 = distinct !{!132, !129, !130}
!133 = distinct !{!133, !129}
!134 = distinct !{!134, !129}
