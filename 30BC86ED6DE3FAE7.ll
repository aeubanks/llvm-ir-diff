; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/MiBench/telecomm-gsm/long_term.c'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/MiBench/telecomm-gsm/long_term.c"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.gsm_state = type { [280 x i16], i16, i64, i32, [8 x i16], [2 x [8 x i16]], i16, i16, [9 x i16], i16, i8, i8 }

@gsm_QLB = external local_unnamed_addr global [4 x i16], align 2
@gsm_DLB = external local_unnamed_addr global [4 x i16], align 2

; Function Attrs: nounwind uwtable
define dso_local void @Gsm_Long_Term_Predictor(ptr nocapture noundef readnone %S, ptr nocapture noundef readonly %d, ptr noundef readonly %dp, ptr nocapture noundef writeonly %e, ptr nocapture noundef writeonly %dpp, ptr nocapture noundef %Nc, ptr nocapture noundef writeonly %bc) local_unnamed_addr #0 {
entry:
  %d116 = ptrtoint ptr %d to i64
  %dp113 = ptrtoint ptr %dp to i64
  %dpp111 = ptrtoint ptr %dpp to i64
  %e110 = ptrtoint ptr %e to i64
  %d92 = ptrtoint ptr %d to i64
  %dp89 = ptrtoint ptr %dp to i64
  %dpp87 = ptrtoint ptr %dpp to i64
  %e86 = ptrtoint ptr %e to i64
  %d68 = ptrtoint ptr %d to i64
  %dp65 = ptrtoint ptr %dp to i64
  %dpp63 = ptrtoint ptr %dpp to i64
  %e62 = ptrtoint ptr %e to i64
  %d44 = ptrtoint ptr %d to i64
  %dp42 = ptrtoint ptr %dp to i64
  %dpp41 = ptrtoint ptr %dpp to i64
  %e40 = ptrtoint ptr %e to i64
  %wide.load = load <8 x i16>, ptr %d, align 2, !tbaa !5
  %0 = icmp slt <8 x i16> %wide.load, zeroinitializer
  %1 = icmp eq <8 x i16> %wide.load, <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>
  %2 = sub <8 x i16> zeroinitializer, %wide.load
  %3 = select <8 x i1> %1, <8 x i16> <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, <8 x i16> %2
  %4 = select <8 x i1> %0, <8 x i16> %3, <8 x i16> %wide.load
  %5 = getelementptr inbounds i16, ptr %d, i64 8
  %wide.load.1 = load <8 x i16>, ptr %5, align 2, !tbaa !5
  %6 = icmp slt <8 x i16> %wide.load.1, zeroinitializer
  %7 = icmp eq <8 x i16> %wide.load.1, <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>
  %8 = sub <8 x i16> zeroinitializer, %wide.load.1
  %9 = select <8 x i1> %7, <8 x i16> <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, <8 x i16> %8
  %10 = select <8 x i1> %6, <8 x i16> %9, <8 x i16> %wide.load.1
  %11 = tail call <8 x i16> @llvm.smax.v8i16(<8 x i16> %4, <8 x i16> %10)
  %12 = getelementptr inbounds i16, ptr %d, i64 16
  %wide.load.2 = load <8 x i16>, ptr %12, align 2, !tbaa !5
  %13 = icmp slt <8 x i16> %wide.load.2, zeroinitializer
  %14 = icmp eq <8 x i16> %wide.load.2, <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>
  %15 = sub <8 x i16> zeroinitializer, %wide.load.2
  %16 = select <8 x i1> %14, <8 x i16> <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, <8 x i16> %15
  %17 = select <8 x i1> %13, <8 x i16> %16, <8 x i16> %wide.load.2
  %18 = tail call <8 x i16> @llvm.smax.v8i16(<8 x i16> %11, <8 x i16> %17)
  %19 = getelementptr inbounds i16, ptr %d, i64 24
  %wide.load.3 = load <8 x i16>, ptr %19, align 2, !tbaa !5
  %20 = icmp slt <8 x i16> %wide.load.3, zeroinitializer
  %21 = icmp eq <8 x i16> %wide.load.3, <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>
  %22 = sub <8 x i16> zeroinitializer, %wide.load.3
  %23 = select <8 x i1> %21, <8 x i16> <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, <8 x i16> %22
  %24 = select <8 x i1> %20, <8 x i16> %23, <8 x i16> %wide.load.3
  %25 = tail call <8 x i16> @llvm.smax.v8i16(<8 x i16> %18, <8 x i16> %24)
  %26 = getelementptr inbounds i16, ptr %d, i64 32
  %wide.load.4 = load <8 x i16>, ptr %26, align 2, !tbaa !5
  %27 = icmp slt <8 x i16> %wide.load.4, zeroinitializer
  %28 = icmp eq <8 x i16> %wide.load.4, <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>
  %29 = sub <8 x i16> zeroinitializer, %wide.load.4
  %30 = select <8 x i1> %28, <8 x i16> <i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767, i16 32767>, <8 x i16> %29
  %31 = select <8 x i1> %27, <8 x i16> %30, <8 x i16> %wide.load.4
  %32 = tail call <8 x i16> @llvm.smax.v8i16(<8 x i16> %25, <8 x i16> %31)
  %33 = tail call <8 x i16> @llvm.smax.v8i16(<8 x i16> %32, <8 x i16> zeroinitializer)
  %34 = tail call i16 @llvm.vector.reduce.smax.v8i16(<8 x i16> %33)
  %cmp18.i = icmp eq i16 %34, 0
  br i1 %cmp18.i, label %if.end22.thread.i, label %if.end22.i

if.end22.i:                                       ; preds = %entry
  %conv21.i = zext i16 %34 to i64
  %shl.i = shl nuw nsw i64 %conv21.i, 16
  %call.i = tail call signext i16 @gsm_norm(i64 noundef %shl.i) #5
  %call.fr.i = freeze i16 %call.i
  %35 = sext i16 %call.fr.i to i32
  %cmp24.i = icmp sgt i16 %call.fr.i, 6
  %36 = shl nsw i32 %35, 16
  %sext.i = sub i32 393216, %36
  %37 = ashr exact i32 %sext.i, 16
  %spec.select649.i = select i1 %cmp24.i, i32 0, i32 %37
  br label %if.end22.thread.i

if.end22.thread.i:                                ; preds = %if.end22.i, %entry
  %38 = phi i32 [ 6, %entry ], [ %spec.select649.i, %if.end22.i ]
  %39 = load i16, ptr %d, align 2, !tbaa !5
  %conv38.i = sext i16 %39 to i32
  %shr.i = ashr i32 %conv38.i, %38
  %conv40.i = zext i32 %shr.i to i64
  %arrayidx37.1.i = getelementptr inbounds i16, ptr %d, i64 1
  %40 = load i16, ptr %arrayidx37.1.i, align 2, !tbaa !5
  %conv38.1.i = sext i16 %40 to i32
  %shr.1.i = ashr i32 %conv38.1.i, %38
  %conv40.1.i = zext i32 %shr.1.i to i64
  %arrayidx37.2.i = getelementptr inbounds i16, ptr %d, i64 2
  %41 = load i16, ptr %arrayidx37.2.i, align 2, !tbaa !5
  %conv38.2.i = sext i16 %41 to i32
  %shr.2.i = ashr i32 %conv38.2.i, %38
  %conv40.2.i = zext i32 %shr.2.i to i64
  %arrayidx37.3.i = getelementptr inbounds i16, ptr %d, i64 3
  %42 = load i16, ptr %arrayidx37.3.i, align 2, !tbaa !5
  %conv38.3.i = sext i16 %42 to i32
  %shr.3.i = ashr i32 %conv38.3.i, %38
  %conv40.3.i = zext i32 %shr.3.i to i64
  %arrayidx37.4.i = getelementptr inbounds i16, ptr %d, i64 4
  %43 = load i16, ptr %arrayidx37.4.i, align 2, !tbaa !5
  %conv38.4.i = sext i16 %43 to i32
  %shr.4.i = ashr i32 %conv38.4.i, %38
  %conv40.4.i = zext i32 %shr.4.i to i64
  %arrayidx37.5.i = getelementptr inbounds i16, ptr %d, i64 5
  %44 = load i16, ptr %arrayidx37.5.i, align 2, !tbaa !5
  %conv38.5.i = sext i16 %44 to i32
  %shr.5.i = ashr i32 %conv38.5.i, %38
  %conv40.5.i = zext i32 %shr.5.i to i64
  %arrayidx37.6.i = getelementptr inbounds i16, ptr %d, i64 6
  %45 = load i16, ptr %arrayidx37.6.i, align 2, !tbaa !5
  %conv38.6.i = sext i16 %45 to i32
  %shr.6.i = ashr i32 %conv38.6.i, %38
  %conv40.6.i = zext i32 %shr.6.i to i64
  %arrayidx37.7.i = getelementptr inbounds i16, ptr %d, i64 7
  %46 = load i16, ptr %arrayidx37.7.i, align 2, !tbaa !5
  %conv38.7.i = sext i16 %46 to i32
  %shr.7.i = ashr i32 %conv38.7.i, %38
  %conv40.7.i = zext i32 %shr.7.i to i64
  %arrayidx37.8.i = getelementptr inbounds i16, ptr %d, i64 8
  %47 = load i16, ptr %arrayidx37.8.i, align 2, !tbaa !5
  %conv38.8.i = sext i16 %47 to i32
  %shr.8.i = ashr i32 %conv38.8.i, %38
  %conv40.8.i = zext i32 %shr.8.i to i64
  %arrayidx37.9.i = getelementptr inbounds i16, ptr %d, i64 9
  %48 = load i16, ptr %arrayidx37.9.i, align 2, !tbaa !5
  %conv38.9.i = sext i16 %48 to i32
  %shr.9.i = ashr i32 %conv38.9.i, %38
  %conv40.9.i = zext i32 %shr.9.i to i64
  %arrayidx37.10.i = getelementptr inbounds i16, ptr %d, i64 10
  %49 = load i16, ptr %arrayidx37.10.i, align 2, !tbaa !5
  %conv38.10.i = sext i16 %49 to i32
  %shr.10.i = ashr i32 %conv38.10.i, %38
  %conv40.10.i = zext i32 %shr.10.i to i64
  %arrayidx37.11.i = getelementptr inbounds i16, ptr %d, i64 11
  %50 = load i16, ptr %arrayidx37.11.i, align 2, !tbaa !5
  %conv38.11.i = sext i16 %50 to i32
  %shr.11.i = ashr i32 %conv38.11.i, %38
  %conv40.11.i = zext i32 %shr.11.i to i64
  %arrayidx37.12.i = getelementptr inbounds i16, ptr %d, i64 12
  %51 = load i16, ptr %arrayidx37.12.i, align 2, !tbaa !5
  %conv38.12.i = sext i16 %51 to i32
  %shr.12.i = ashr i32 %conv38.12.i, %38
  %conv40.12.i = zext i32 %shr.12.i to i64
  %arrayidx37.13.i = getelementptr inbounds i16, ptr %d, i64 13
  %52 = load i16, ptr %arrayidx37.13.i, align 2, !tbaa !5
  %conv38.13.i = sext i16 %52 to i32
  %shr.13.i = ashr i32 %conv38.13.i, %38
  %conv40.13.i = zext i32 %shr.13.i to i64
  %arrayidx37.14.i = getelementptr inbounds i16, ptr %d, i64 14
  %53 = load i16, ptr %arrayidx37.14.i, align 2, !tbaa !5
  %conv38.14.i = sext i16 %53 to i32
  %shr.14.i = ashr i32 %conv38.14.i, %38
  %conv40.14.i = zext i32 %shr.14.i to i64
  %arrayidx37.15.i = getelementptr inbounds i16, ptr %d, i64 15
  %54 = load i16, ptr %arrayidx37.15.i, align 2, !tbaa !5
  %conv38.15.i = sext i16 %54 to i32
  %shr.15.i = ashr i32 %conv38.15.i, %38
  %conv40.15.i = zext i32 %shr.15.i to i64
  %arrayidx37.16.i = getelementptr inbounds i16, ptr %d, i64 16
  %55 = load i16, ptr %arrayidx37.16.i, align 2, !tbaa !5
  %conv38.16.i = sext i16 %55 to i32
  %shr.16.i = ashr i32 %conv38.16.i, %38
  %conv40.16.i = zext i32 %shr.16.i to i64
  %arrayidx37.17.i = getelementptr inbounds i16, ptr %d, i64 17
  %56 = load i16, ptr %arrayidx37.17.i, align 2, !tbaa !5
  %conv38.17.i = sext i16 %56 to i32
  %shr.17.i = ashr i32 %conv38.17.i, %38
  %conv40.17.i = zext i32 %shr.17.i to i64
  %arrayidx37.18.i = getelementptr inbounds i16, ptr %d, i64 18
  %57 = load i16, ptr %arrayidx37.18.i, align 2, !tbaa !5
  %conv38.18.i = sext i16 %57 to i32
  %shr.18.i = ashr i32 %conv38.18.i, %38
  %conv40.18.i = zext i32 %shr.18.i to i64
  %arrayidx37.19.i = getelementptr inbounds i16, ptr %d, i64 19
  %58 = load i16, ptr %arrayidx37.19.i, align 2, !tbaa !5
  %conv38.19.i = sext i16 %58 to i32
  %shr.19.i = ashr i32 %conv38.19.i, %38
  %conv40.19.i = zext i32 %shr.19.i to i64
  %arrayidx37.20.i = getelementptr inbounds i16, ptr %d, i64 20
  %59 = load i16, ptr %arrayidx37.20.i, align 2, !tbaa !5
  %conv38.20.i = sext i16 %59 to i32
  %shr.20.i = ashr i32 %conv38.20.i, %38
  %conv40.20.i = zext i32 %shr.20.i to i64
  %arrayidx37.21.i = getelementptr inbounds i16, ptr %d, i64 21
  %60 = load i16, ptr %arrayidx37.21.i, align 2, !tbaa !5
  %conv38.21.i = sext i16 %60 to i32
  %shr.21.i = ashr i32 %conv38.21.i, %38
  %conv40.21.i = zext i32 %shr.21.i to i64
  %arrayidx37.22.i = getelementptr inbounds i16, ptr %d, i64 22
  %61 = load i16, ptr %arrayidx37.22.i, align 2, !tbaa !5
  %conv38.22.i = sext i16 %61 to i32
  %shr.22.i = ashr i32 %conv38.22.i, %38
  %conv40.22.i = zext i32 %shr.22.i to i64
  %arrayidx37.23.i = getelementptr inbounds i16, ptr %d, i64 23
  %62 = load i16, ptr %arrayidx37.23.i, align 2, !tbaa !5
  %conv38.23.i = sext i16 %62 to i32
  %shr.23.i = ashr i32 %conv38.23.i, %38
  %conv40.23.i = zext i32 %shr.23.i to i64
  %arrayidx37.24.i = getelementptr inbounds i16, ptr %d, i64 24
  %63 = load i16, ptr %arrayidx37.24.i, align 2, !tbaa !5
  %conv38.24.i = sext i16 %63 to i32
  %shr.24.i = ashr i32 %conv38.24.i, %38
  %conv40.24.i = zext i32 %shr.24.i to i64
  %arrayidx37.25.i = getelementptr inbounds i16, ptr %d, i64 25
  %64 = load i16, ptr %arrayidx37.25.i, align 2, !tbaa !5
  %conv38.25.i = sext i16 %64 to i32
  %shr.25.i = ashr i32 %conv38.25.i, %38
  %conv40.25.i = zext i32 %shr.25.i to i64
  %arrayidx37.26.i = getelementptr inbounds i16, ptr %d, i64 26
  %65 = load i16, ptr %arrayidx37.26.i, align 2, !tbaa !5
  %conv38.26.i = sext i16 %65 to i32
  %shr.26.i = ashr i32 %conv38.26.i, %38
  %conv40.26.i = zext i32 %shr.26.i to i64
  %arrayidx37.27.i = getelementptr inbounds i16, ptr %d, i64 27
  %66 = load i16, ptr %arrayidx37.27.i, align 2, !tbaa !5
  %conv38.27.i = sext i16 %66 to i32
  %shr.27.i = ashr i32 %conv38.27.i, %38
  %conv40.27.i = zext i32 %shr.27.i to i64
  %arrayidx37.28.i = getelementptr inbounds i16, ptr %d, i64 28
  %67 = load i16, ptr %arrayidx37.28.i, align 2, !tbaa !5
  %conv38.28.i = sext i16 %67 to i32
  %shr.28.i = ashr i32 %conv38.28.i, %38
  %conv40.28.i = zext i32 %shr.28.i to i64
  %arrayidx37.29.i = getelementptr inbounds i16, ptr %d, i64 29
  %68 = load i16, ptr %arrayidx37.29.i, align 2, !tbaa !5
  %conv38.29.i = sext i16 %68 to i32
  %shr.29.i = ashr i32 %conv38.29.i, %38
  %conv40.29.i = zext i32 %shr.29.i to i64
  %arrayidx37.30.i = getelementptr inbounds i16, ptr %d, i64 30
  %69 = load i16, ptr %arrayidx37.30.i, align 2, !tbaa !5
  %conv38.30.i = sext i16 %69 to i32
  %shr.30.i = ashr i32 %conv38.30.i, %38
  %conv40.30.i = zext i32 %shr.30.i to i64
  %arrayidx37.31.i = getelementptr inbounds i16, ptr %d, i64 31
  %70 = load i16, ptr %arrayidx37.31.i, align 2, !tbaa !5
  %conv38.31.i = sext i16 %70 to i32
  %shr.31.i = ashr i32 %conv38.31.i, %38
  %conv40.31.i = zext i32 %shr.31.i to i64
  %arrayidx37.32.i = getelementptr inbounds i16, ptr %d, i64 32
  %71 = load i16, ptr %arrayidx37.32.i, align 2, !tbaa !5
  %conv38.32.i = sext i16 %71 to i32
  %shr.32.i = ashr i32 %conv38.32.i, %38
  %conv40.32.i = zext i32 %shr.32.i to i64
  %arrayidx37.33.i = getelementptr inbounds i16, ptr %d, i64 33
  %72 = load i16, ptr %arrayidx37.33.i, align 2, !tbaa !5
  %conv38.33.i = sext i16 %72 to i32
  %shr.33.i = ashr i32 %conv38.33.i, %38
  %conv40.33.i = zext i32 %shr.33.i to i64
  %arrayidx37.34.i = getelementptr inbounds i16, ptr %d, i64 34
  %73 = load i16, ptr %arrayidx37.34.i, align 2, !tbaa !5
  %conv38.34.i = sext i16 %73 to i32
  %shr.34.i = ashr i32 %conv38.34.i, %38
  %conv40.34.i = zext i32 %shr.34.i to i64
  %arrayidx37.35.i = getelementptr inbounds i16, ptr %d, i64 35
  %74 = load i16, ptr %arrayidx37.35.i, align 2, !tbaa !5
  %conv38.35.i = sext i16 %74 to i32
  %shr.35.i = ashr i32 %conv38.35.i, %38
  %conv40.35.i = zext i32 %shr.35.i to i64
  %arrayidx37.36.i = getelementptr inbounds i16, ptr %d, i64 36
  %75 = load i16, ptr %arrayidx37.36.i, align 2, !tbaa !5
  %conv38.36.i = sext i16 %75 to i32
  %shr.36.i = ashr i32 %conv38.36.i, %38
  %conv40.36.i = zext i32 %shr.36.i to i64
  %arrayidx37.37.i = getelementptr inbounds i16, ptr %d, i64 37
  %76 = load i16, ptr %arrayidx37.37.i, align 2, !tbaa !5
  %conv38.37.i = sext i16 %76 to i32
  %shr.37.i = ashr i32 %conv38.37.i, %38
  %conv40.37.i = zext i32 %shr.37.i to i64
  %arrayidx37.38.i = getelementptr inbounds i16, ptr %d, i64 38
  %77 = load i16, ptr %arrayidx37.38.i, align 2, !tbaa !5
  %conv38.38.i = sext i16 %77 to i32
  %shr.38.i = ashr i32 %conv38.38.i, %38
  %conv40.38.i = zext i32 %shr.38.i to i64
  %arrayidx37.39.i = getelementptr inbounds i16, ptr %d, i64 39
  %78 = load i16, ptr %arrayidx37.39.i, align 2, !tbaa !5
  %conv38.39.i = sext i16 %78 to i32
  %shr.39.i = ashr i32 %conv38.39.i, %38
  %conv40.39.i = zext i32 %shr.39.i to i64
  %sext715.i = shl i64 %conv40.i, 48
  %conv51.i = ashr exact i64 %sext715.i, 48
  %sext716.i = shl i64 %conv40.1.i, 48
  %conv58.i = ashr exact i64 %sext716.i, 48
  %sext717.i = shl i64 %conv40.2.i, 48
  %conv66.i = ashr exact i64 %sext717.i, 48
  %sext718.i = shl i64 %conv40.3.i, 48
  %conv75.i = ashr exact i64 %sext718.i, 48
  %sext719.i = shl i64 %conv40.4.i, 48
  %conv84.i = ashr exact i64 %sext719.i, 48
  %sext720.i = shl i64 %conv40.5.i, 48
  %conv93.i = ashr exact i64 %sext720.i, 48
  %sext721.i = shl i64 %conv40.6.i, 48
  %conv102.i = ashr exact i64 %sext721.i, 48
  %sext722.i = shl i64 %conv40.7.i, 48
  %conv111.i = ashr exact i64 %sext722.i, 48
  %sext723.i = shl i64 %conv40.8.i, 48
  %conv120.i = ashr exact i64 %sext723.i, 48
  %sext724.i = shl i64 %conv40.9.i, 48
  %conv129.i = ashr exact i64 %sext724.i, 48
  %sext725.i = shl i64 %conv40.10.i, 48
  %conv138.i = ashr exact i64 %sext725.i, 48
  %sext726.i = shl i64 %conv40.11.i, 48
  %conv147.i = ashr exact i64 %sext726.i, 48
  %sext727.i = shl i64 %conv40.12.i, 48
  %conv156.i = ashr exact i64 %sext727.i, 48
  %sext728.i = shl i64 %conv40.13.i, 48
  %conv165.i = ashr exact i64 %sext728.i, 48
  %sext729.i = shl i64 %conv40.14.i, 48
  %conv174.i = ashr exact i64 %sext729.i, 48
  %sext730.i = shl i64 %conv40.15.i, 48
  %conv183.i = ashr exact i64 %sext730.i, 48
  %sext731.i = shl i64 %conv40.16.i, 48
  %conv192.i = ashr exact i64 %sext731.i, 48
  %sext732.i = shl i64 %conv40.17.i, 48
  %conv201.i = ashr exact i64 %sext732.i, 48
  %sext733.i = shl i64 %conv40.18.i, 48
  %conv210.i = ashr exact i64 %sext733.i, 48
  %sext734.i = shl i64 %conv40.19.i, 48
  %conv219.i = ashr exact i64 %sext734.i, 48
  %sext735.i = shl i64 %conv40.20.i, 48
  %conv228.i = ashr exact i64 %sext735.i, 48
  %sext736.i = shl i64 %conv40.21.i, 48
  %conv237.i = ashr exact i64 %sext736.i, 48
  %sext737.i = shl i64 %conv40.22.i, 48
  %conv246.i = ashr exact i64 %sext737.i, 48
  %sext738.i = shl i64 %conv40.23.i, 48
  %conv255.i = ashr exact i64 %sext738.i, 48
  %sext739.i = shl i64 %conv40.24.i, 48
  %conv264.i = ashr exact i64 %sext739.i, 48
  %sext740.i = shl i64 %conv40.25.i, 48
  %conv273.i = ashr exact i64 %sext740.i, 48
  %sext741.i = shl i64 %conv40.26.i, 48
  %conv282.i = ashr exact i64 %sext741.i, 48
  %sext742.i = shl i64 %conv40.27.i, 48
  %conv291.i = ashr exact i64 %sext742.i, 48
  %sext743.i = shl i64 %conv40.28.i, 48
  %conv300.i = ashr exact i64 %sext743.i, 48
  %sext744.i = shl i64 %conv40.29.i, 48
  %conv309.i = ashr exact i64 %sext744.i, 48
  %sext745.i = shl i64 %conv40.30.i, 48
  %conv318.i = ashr exact i64 %sext745.i, 48
  %sext746.i = shl i64 %conv40.31.i, 48
  %conv327.i = ashr exact i64 %sext746.i, 48
  %sext747.i = shl i64 %conv40.32.i, 48
  %conv336.i = ashr exact i64 %sext747.i, 48
  %sext748.i = shl i64 %conv40.33.i, 48
  %conv345.i = ashr exact i64 %sext748.i, 48
  %sext749.i = shl i64 %conv40.34.i, 48
  %conv354.i = ashr exact i64 %sext749.i, 48
  %sext750.i = shl i64 %conv40.35.i, 48
  %conv363.i = ashr exact i64 %sext750.i, 48
  %sext751.i = shl i64 %conv40.36.i, 48
  %conv372.i = ashr exact i64 %sext751.i, 48
  %sext752.i = shl i64 %conv40.37.i, 48
  %conv381.i = ashr exact i64 %sext752.i, 48
  %sext753.i = shl i64 %conv40.38.i, 48
  %conv390.i = ashr exact i64 %sext753.i, 48
  %sext754.i = shl i64 %conv40.39.i, 48
  %conv399.i = ashr exact i64 %sext754.i, 48
  br label %for.body49.i

for.body49.i:                                     ; preds = %for.body49.i, %if.end22.thread.i
  %indvars.iv663.i = phi i64 [ 40, %if.end22.thread.i ], [ %indvars.iv.next664.i, %for.body49.i ]
  %Nc.0654.i = phi i16 [ 40, %if.end22.thread.i ], [ %spec.select644.i, %for.body49.i ]
  %L_max.0653.i = phi i64 [ 0, %if.end22.thread.i ], [ %spec.select.i, %for.body49.i ]
  %indvars33 = trunc i64 %indvars.iv663.i to i16
  %79 = sub nsw i64 0, %indvars.iv663.i
  %arrayidx54.i = getelementptr inbounds i16, ptr %dp, i64 %79
  %80 = load i16, ptr %arrayidx54.i, align 2, !tbaa !5
  %conv55.i = sext i16 %80 to i64
  %mul.i = mul nsw i64 %conv51.i, %conv55.i
  %81 = sub nsw i64 1, %indvars.iv663.i
  %arrayidx61.i = getelementptr inbounds i16, ptr %dp, i64 %81
  %82 = load i16, ptr %arrayidx61.i, align 2, !tbaa !5
  %conv62.i = sext i16 %82 to i64
  %mul63.i = mul nsw i64 %conv58.i, %conv62.i
  %add.i = add nsw i64 %mul63.i, %mul.i
  %83 = sub nsw i64 2, %indvars.iv663.i
  %arrayidx69.i = getelementptr inbounds i16, ptr %dp, i64 %83
  %84 = load i16, ptr %arrayidx69.i, align 2, !tbaa !5
  %conv70.i = sext i16 %84 to i64
  %mul71.i = mul nsw i64 %conv66.i, %conv70.i
  %add73.i = add nsw i64 %add.i, %mul71.i
  %85 = sub nsw i64 3, %indvars.iv663.i
  %arrayidx78.i = getelementptr inbounds i16, ptr %dp, i64 %85
  %86 = load i16, ptr %arrayidx78.i, align 2, !tbaa !5
  %conv79.i = sext i16 %86 to i64
  %mul80.i = mul nsw i64 %conv75.i, %conv79.i
  %add82.i = add nsw i64 %add73.i, %mul80.i
  %87 = sub nsw i64 4, %indvars.iv663.i
  %arrayidx87.i = getelementptr inbounds i16, ptr %dp, i64 %87
  %88 = load i16, ptr %arrayidx87.i, align 2, !tbaa !5
  %conv88.i = sext i16 %88 to i64
  %mul89.i = mul nsw i64 %conv84.i, %conv88.i
  %add91.i = add nsw i64 %add82.i, %mul89.i
  %89 = sub nsw i64 5, %indvars.iv663.i
  %arrayidx96.i = getelementptr inbounds i16, ptr %dp, i64 %89
  %90 = load i16, ptr %arrayidx96.i, align 2, !tbaa !5
  %conv97.i = sext i16 %90 to i64
  %mul98.i = mul nsw i64 %conv93.i, %conv97.i
  %add100.i = add nsw i64 %add91.i, %mul98.i
  %91 = sub nsw i64 6, %indvars.iv663.i
  %arrayidx105.i = getelementptr inbounds i16, ptr %dp, i64 %91
  %92 = load i16, ptr %arrayidx105.i, align 2, !tbaa !5
  %conv106.i = sext i16 %92 to i64
  %mul107.i = mul nsw i64 %conv102.i, %conv106.i
  %add109.i = add nsw i64 %add100.i, %mul107.i
  %93 = sub nsw i64 7, %indvars.iv663.i
  %arrayidx114.i = getelementptr inbounds i16, ptr %dp, i64 %93
  %94 = load i16, ptr %arrayidx114.i, align 2, !tbaa !5
  %conv115.i = sext i16 %94 to i64
  %mul116.i = mul nsw i64 %conv111.i, %conv115.i
  %add118.i = add nsw i64 %add109.i, %mul116.i
  %95 = sub nsw i64 8, %indvars.iv663.i
  %arrayidx123.i = getelementptr inbounds i16, ptr %dp, i64 %95
  %96 = load i16, ptr %arrayidx123.i, align 2, !tbaa !5
  %conv124.i = sext i16 %96 to i64
  %mul125.i = mul nsw i64 %conv120.i, %conv124.i
  %add127.i = add nsw i64 %add118.i, %mul125.i
  %97 = sub nsw i64 9, %indvars.iv663.i
  %arrayidx132.i = getelementptr inbounds i16, ptr %dp, i64 %97
  %98 = load i16, ptr %arrayidx132.i, align 2, !tbaa !5
  %conv133.i = sext i16 %98 to i64
  %mul134.i = mul nsw i64 %conv129.i, %conv133.i
  %add136.i = add nsw i64 %add127.i, %mul134.i
  %99 = sub nsw i64 10, %indvars.iv663.i
  %arrayidx141.i = getelementptr inbounds i16, ptr %dp, i64 %99
  %100 = load i16, ptr %arrayidx141.i, align 2, !tbaa !5
  %conv142.i = sext i16 %100 to i64
  %mul143.i = mul nsw i64 %conv138.i, %conv142.i
  %add145.i = add nsw i64 %add136.i, %mul143.i
  %101 = sub nsw i64 11, %indvars.iv663.i
  %arrayidx150.i = getelementptr inbounds i16, ptr %dp, i64 %101
  %102 = load i16, ptr %arrayidx150.i, align 2, !tbaa !5
  %conv151.i = sext i16 %102 to i64
  %mul152.i = mul nsw i64 %conv147.i, %conv151.i
  %add154.i = add nsw i64 %add145.i, %mul152.i
  %103 = sub nsw i64 12, %indvars.iv663.i
  %arrayidx159.i = getelementptr inbounds i16, ptr %dp, i64 %103
  %104 = load i16, ptr %arrayidx159.i, align 2, !tbaa !5
  %conv160.i = sext i16 %104 to i64
  %mul161.i = mul nsw i64 %conv156.i, %conv160.i
  %add163.i = add nsw i64 %add154.i, %mul161.i
  %105 = sub nsw i64 13, %indvars.iv663.i
  %arrayidx168.i = getelementptr inbounds i16, ptr %dp, i64 %105
  %106 = load i16, ptr %arrayidx168.i, align 2, !tbaa !5
  %conv169.i = sext i16 %106 to i64
  %mul170.i = mul nsw i64 %conv165.i, %conv169.i
  %add172.i = add nsw i64 %add163.i, %mul170.i
  %107 = sub nsw i64 14, %indvars.iv663.i
  %arrayidx177.i = getelementptr inbounds i16, ptr %dp, i64 %107
  %108 = load i16, ptr %arrayidx177.i, align 2, !tbaa !5
  %conv178.i = sext i16 %108 to i64
  %mul179.i = mul nsw i64 %conv174.i, %conv178.i
  %add181.i = add nsw i64 %add172.i, %mul179.i
  %109 = sub nsw i64 15, %indvars.iv663.i
  %arrayidx186.i = getelementptr inbounds i16, ptr %dp, i64 %109
  %110 = load i16, ptr %arrayidx186.i, align 2, !tbaa !5
  %conv187.i = sext i16 %110 to i64
  %mul188.i = mul nsw i64 %conv183.i, %conv187.i
  %add190.i = add nsw i64 %add181.i, %mul188.i
  %111 = sub nsw i64 16, %indvars.iv663.i
  %arrayidx195.i = getelementptr inbounds i16, ptr %dp, i64 %111
  %112 = load i16, ptr %arrayidx195.i, align 2, !tbaa !5
  %conv196.i = sext i16 %112 to i64
  %mul197.i = mul nsw i64 %conv192.i, %conv196.i
  %add199.i = add nsw i64 %add190.i, %mul197.i
  %113 = sub nsw i64 17, %indvars.iv663.i
  %arrayidx204.i = getelementptr inbounds i16, ptr %dp, i64 %113
  %114 = load i16, ptr %arrayidx204.i, align 2, !tbaa !5
  %conv205.i = sext i16 %114 to i64
  %mul206.i = mul nsw i64 %conv201.i, %conv205.i
  %add208.i = add nsw i64 %add199.i, %mul206.i
  %115 = sub nsw i64 18, %indvars.iv663.i
  %arrayidx213.i = getelementptr inbounds i16, ptr %dp, i64 %115
  %116 = load i16, ptr %arrayidx213.i, align 2, !tbaa !5
  %conv214.i = sext i16 %116 to i64
  %mul215.i = mul nsw i64 %conv210.i, %conv214.i
  %add217.i = add nsw i64 %add208.i, %mul215.i
  %117 = sub nsw i64 19, %indvars.iv663.i
  %arrayidx222.i = getelementptr inbounds i16, ptr %dp, i64 %117
  %118 = load i16, ptr %arrayidx222.i, align 2, !tbaa !5
  %conv223.i = sext i16 %118 to i64
  %mul224.i = mul nsw i64 %conv219.i, %conv223.i
  %add226.i = add nsw i64 %add217.i, %mul224.i
  %119 = sub nsw i64 20, %indvars.iv663.i
  %arrayidx231.i = getelementptr inbounds i16, ptr %dp, i64 %119
  %120 = load i16, ptr %arrayidx231.i, align 2, !tbaa !5
  %conv232.i = sext i16 %120 to i64
  %mul233.i = mul nsw i64 %conv228.i, %conv232.i
  %add235.i = add nsw i64 %add226.i, %mul233.i
  %121 = sub nsw i64 21, %indvars.iv663.i
  %arrayidx240.i = getelementptr inbounds i16, ptr %dp, i64 %121
  %122 = load i16, ptr %arrayidx240.i, align 2, !tbaa !5
  %conv241.i = sext i16 %122 to i64
  %mul242.i = mul nsw i64 %conv237.i, %conv241.i
  %add244.i = add nsw i64 %add235.i, %mul242.i
  %123 = sub nsw i64 22, %indvars.iv663.i
  %arrayidx249.i = getelementptr inbounds i16, ptr %dp, i64 %123
  %124 = load i16, ptr %arrayidx249.i, align 2, !tbaa !5
  %conv250.i = sext i16 %124 to i64
  %mul251.i = mul nsw i64 %conv246.i, %conv250.i
  %add253.i = add nsw i64 %add244.i, %mul251.i
  %125 = sub nsw i64 23, %indvars.iv663.i
  %arrayidx258.i = getelementptr inbounds i16, ptr %dp, i64 %125
  %126 = load i16, ptr %arrayidx258.i, align 2, !tbaa !5
  %conv259.i = sext i16 %126 to i64
  %mul260.i = mul nsw i64 %conv255.i, %conv259.i
  %add262.i = add nsw i64 %add253.i, %mul260.i
  %127 = sub nsw i64 24, %indvars.iv663.i
  %arrayidx267.i = getelementptr inbounds i16, ptr %dp, i64 %127
  %128 = load i16, ptr %arrayidx267.i, align 2, !tbaa !5
  %conv268.i = sext i16 %128 to i64
  %mul269.i = mul nsw i64 %conv264.i, %conv268.i
  %add271.i = add nsw i64 %add262.i, %mul269.i
  %129 = sub nsw i64 25, %indvars.iv663.i
  %arrayidx276.i = getelementptr inbounds i16, ptr %dp, i64 %129
  %130 = load i16, ptr %arrayidx276.i, align 2, !tbaa !5
  %conv277.i = sext i16 %130 to i64
  %mul278.i = mul nsw i64 %conv273.i, %conv277.i
  %add280.i = add nsw i64 %add271.i, %mul278.i
  %131 = sub nsw i64 26, %indvars.iv663.i
  %arrayidx285.i = getelementptr inbounds i16, ptr %dp, i64 %131
  %132 = load i16, ptr %arrayidx285.i, align 2, !tbaa !5
  %conv286.i = sext i16 %132 to i64
  %mul287.i = mul nsw i64 %conv282.i, %conv286.i
  %add289.i = add nsw i64 %add280.i, %mul287.i
  %133 = sub nsw i64 27, %indvars.iv663.i
  %arrayidx294.i = getelementptr inbounds i16, ptr %dp, i64 %133
  %134 = load i16, ptr %arrayidx294.i, align 2, !tbaa !5
  %conv295.i = sext i16 %134 to i64
  %mul296.i = mul nsw i64 %conv291.i, %conv295.i
  %add298.i = add nsw i64 %add289.i, %mul296.i
  %135 = sub nsw i64 28, %indvars.iv663.i
  %arrayidx303.i = getelementptr inbounds i16, ptr %dp, i64 %135
  %136 = load i16, ptr %arrayidx303.i, align 2, !tbaa !5
  %conv304.i = sext i16 %136 to i64
  %mul305.i = mul nsw i64 %conv300.i, %conv304.i
  %add307.i = add nsw i64 %add298.i, %mul305.i
  %137 = sub nsw i64 29, %indvars.iv663.i
  %arrayidx312.i = getelementptr inbounds i16, ptr %dp, i64 %137
  %138 = load i16, ptr %arrayidx312.i, align 2, !tbaa !5
  %conv313.i = sext i16 %138 to i64
  %mul314.i = mul nsw i64 %conv309.i, %conv313.i
  %add316.i = add nsw i64 %add307.i, %mul314.i
  %139 = sub nsw i64 30, %indvars.iv663.i
  %arrayidx321.i = getelementptr inbounds i16, ptr %dp, i64 %139
  %140 = load i16, ptr %arrayidx321.i, align 2, !tbaa !5
  %conv322.i = sext i16 %140 to i64
  %mul323.i = mul nsw i64 %conv318.i, %conv322.i
  %add325.i = add nsw i64 %add316.i, %mul323.i
  %141 = sub nsw i64 31, %indvars.iv663.i
  %arrayidx330.i = getelementptr inbounds i16, ptr %dp, i64 %141
  %142 = load i16, ptr %arrayidx330.i, align 2, !tbaa !5
  %conv331.i = sext i16 %142 to i64
  %mul332.i = mul nsw i64 %conv327.i, %conv331.i
  %add334.i = add nsw i64 %add325.i, %mul332.i
  %143 = sub nsw i64 32, %indvars.iv663.i
  %arrayidx339.i = getelementptr inbounds i16, ptr %dp, i64 %143
  %144 = load i16, ptr %arrayidx339.i, align 2, !tbaa !5
  %conv340.i = sext i16 %144 to i64
  %mul341.i = mul nsw i64 %conv336.i, %conv340.i
  %add343.i = add nsw i64 %add334.i, %mul341.i
  %145 = sub nsw i64 33, %indvars.iv663.i
  %arrayidx348.i = getelementptr inbounds i16, ptr %dp, i64 %145
  %146 = load i16, ptr %arrayidx348.i, align 2, !tbaa !5
  %conv349.i = sext i16 %146 to i64
  %mul350.i = mul nsw i64 %conv345.i, %conv349.i
  %add352.i = add nsw i64 %add343.i, %mul350.i
  %147 = sub nsw i64 34, %indvars.iv663.i
  %arrayidx357.i = getelementptr inbounds i16, ptr %dp, i64 %147
  %148 = load i16, ptr %arrayidx357.i, align 2, !tbaa !5
  %conv358.i = sext i16 %148 to i64
  %mul359.i = mul nsw i64 %conv354.i, %conv358.i
  %add361.i = add nsw i64 %add352.i, %mul359.i
  %149 = sub nsw i64 35, %indvars.iv663.i
  %arrayidx366.i = getelementptr inbounds i16, ptr %dp, i64 %149
  %150 = load i16, ptr %arrayidx366.i, align 2, !tbaa !5
  %conv367.i = sext i16 %150 to i64
  %mul368.i = mul nsw i64 %conv363.i, %conv367.i
  %add370.i = add nsw i64 %add361.i, %mul368.i
  %151 = sub nsw i64 36, %indvars.iv663.i
  %arrayidx375.i = getelementptr inbounds i16, ptr %dp, i64 %151
  %152 = load i16, ptr %arrayidx375.i, align 2, !tbaa !5
  %conv376.i = sext i16 %152 to i64
  %mul377.i = mul nsw i64 %conv372.i, %conv376.i
  %add379.i = add nsw i64 %add370.i, %mul377.i
  %153 = sub nsw i64 37, %indvars.iv663.i
  %arrayidx384.i = getelementptr inbounds i16, ptr %dp, i64 %153
  %154 = load i16, ptr %arrayidx384.i, align 2, !tbaa !5
  %conv385.i = sext i16 %154 to i64
  %mul386.i = mul nsw i64 %conv381.i, %conv385.i
  %add388.i = add nsw i64 %add379.i, %mul386.i
  %155 = sub nsw i64 38, %indvars.iv663.i
  %arrayidx393.i = getelementptr inbounds i16, ptr %dp, i64 %155
  %156 = load i16, ptr %arrayidx393.i, align 2, !tbaa !5
  %conv394.i = sext i16 %156 to i64
  %mul395.i = mul nsw i64 %conv390.i, %conv394.i
  %add397.i = add nsw i64 %add388.i, %mul395.i
  %157 = sub nsw i64 39, %indvars.iv663.i
  %arrayidx402.i = getelementptr inbounds i16, ptr %dp, i64 %157
  %158 = load i16, ptr %arrayidx402.i, align 2, !tbaa !5
  %conv403.i = sext i16 %158 to i64
  %mul404.i = mul nsw i64 %conv399.i, %conv403.i
  %add406.i = add nsw i64 %add397.i, %mul404.i
  %cmp407.i = icmp sgt i64 %add406.i, %L_max.0653.i
  %spec.select.i = tail call i64 @llvm.smax.i64(i64 %add406.i, i64 %L_max.0653.i)
  %spec.select644.i = select i1 %cmp407.i, i16 %indvars33, i16 %Nc.0654.i
  %indvars.iv.next664.i = add nuw nsw i64 %indvars.iv663.i, 1
  %exitcond705.not.i = icmp eq i64 %indvars.iv.next664.i, 121
  br i1 %exitcond705.not.i, label %for.end414.i, label %for.body49.i, !llvm.loop !9

for.end414.i:                                     ; preds = %for.body49.i
  store i16 %spec.select644.i, ptr %Nc, align 2, !tbaa !5
  %sub417.i = sub nsw i32 6, %38
  %sh_prom.i = zext i32 %sub417.i to i64
  %159 = sext i16 %spec.select644.i to i64
  %160 = sub nsw i64 0, %159
  %arrayidx426.i = getelementptr inbounds i16, ptr %dp, i64 %160
  %161 = load i16, ptr %arrayidx426.i, align 2, !tbaa !5
  %162 = ashr i16 %161, 3
  %conv429.i = sext i16 %162 to i64
  %mul430.i = mul nsw i64 %conv429.i, %conv429.i
  %163 = sub nsw i64 1, %159
  %arrayidx426.1.i = getelementptr inbounds i16, ptr %dp, i64 %163
  %164 = load i16, ptr %arrayidx426.1.i, align 2, !tbaa !5
  %165 = ashr i16 %164, 3
  %conv429.1.i = sext i16 %165 to i64
  %mul430.1.i = mul nsw i64 %conv429.1.i, %conv429.1.i
  %add431.1.i = add nuw nsw i64 %mul430.1.i, %mul430.i
  %166 = sub nsw i64 2, %159
  %arrayidx426.2.i = getelementptr inbounds i16, ptr %dp, i64 %166
  %167 = load i16, ptr %arrayidx426.2.i, align 2, !tbaa !5
  %168 = ashr i16 %167, 3
  %conv429.2.i = sext i16 %168 to i64
  %mul430.2.i = mul nsw i64 %conv429.2.i, %conv429.2.i
  %add431.2.i = add nuw nsw i64 %add431.1.i, %mul430.2.i
  %169 = sub nsw i64 3, %159
  %arrayidx426.3.i = getelementptr inbounds i16, ptr %dp, i64 %169
  %170 = load i16, ptr %arrayidx426.3.i, align 2, !tbaa !5
  %171 = ashr i16 %170, 3
  %conv429.3.i = sext i16 %171 to i64
  %mul430.3.i = mul nsw i64 %conv429.3.i, %conv429.3.i
  %add431.3.i = add nuw nsw i64 %add431.2.i, %mul430.3.i
  %172 = sub nsw i64 4, %159
  %arrayidx426.4.i = getelementptr inbounds i16, ptr %dp, i64 %172
  %173 = load i16, ptr %arrayidx426.4.i, align 2, !tbaa !5
  %174 = ashr i16 %173, 3
  %conv429.4.i = sext i16 %174 to i64
  %mul430.4.i = mul nsw i64 %conv429.4.i, %conv429.4.i
  %add431.4.i = add nuw nsw i64 %add431.3.i, %mul430.4.i
  %175 = sub nsw i64 5, %159
  %arrayidx426.5.i = getelementptr inbounds i16, ptr %dp, i64 %175
  %176 = load i16, ptr %arrayidx426.5.i, align 2, !tbaa !5
  %177 = ashr i16 %176, 3
  %conv429.5.i = sext i16 %177 to i64
  %mul430.5.i = mul nsw i64 %conv429.5.i, %conv429.5.i
  %add431.5.i = add nuw nsw i64 %add431.4.i, %mul430.5.i
  %178 = sub nsw i64 6, %159
  %arrayidx426.6.i = getelementptr inbounds i16, ptr %dp, i64 %178
  %179 = load i16, ptr %arrayidx426.6.i, align 2, !tbaa !5
  %180 = ashr i16 %179, 3
  %conv429.6.i = sext i16 %180 to i64
  %mul430.6.i = mul nsw i64 %conv429.6.i, %conv429.6.i
  %add431.6.i = add nuw nsw i64 %add431.5.i, %mul430.6.i
  %181 = sub nsw i64 7, %159
  %arrayidx426.7.i = getelementptr inbounds i16, ptr %dp, i64 %181
  %182 = load i16, ptr %arrayidx426.7.i, align 2, !tbaa !5
  %183 = ashr i16 %182, 3
  %conv429.7.i = sext i16 %183 to i64
  %mul430.7.i = mul nsw i64 %conv429.7.i, %conv429.7.i
  %add431.7.i = add nuw nsw i64 %add431.6.i, %mul430.7.i
  %184 = sub nsw i64 8, %159
  %arrayidx426.8.i = getelementptr inbounds i16, ptr %dp, i64 %184
  %185 = load i16, ptr %arrayidx426.8.i, align 2, !tbaa !5
  %186 = ashr i16 %185, 3
  %conv429.8.i = sext i16 %186 to i64
  %mul430.8.i = mul nsw i64 %conv429.8.i, %conv429.8.i
  %add431.8.i = add nuw nsw i64 %add431.7.i, %mul430.8.i
  %187 = sub nsw i64 9, %159
  %arrayidx426.9.i = getelementptr inbounds i16, ptr %dp, i64 %187
  %188 = load i16, ptr %arrayidx426.9.i, align 2, !tbaa !5
  %189 = ashr i16 %188, 3
  %conv429.9.i = sext i16 %189 to i64
  %mul430.9.i = mul nsw i64 %conv429.9.i, %conv429.9.i
  %add431.9.i = add nuw nsw i64 %add431.8.i, %mul430.9.i
  %190 = sub nsw i64 10, %159
  %arrayidx426.10.i = getelementptr inbounds i16, ptr %dp, i64 %190
  %191 = load i16, ptr %arrayidx426.10.i, align 2, !tbaa !5
  %192 = ashr i16 %191, 3
  %conv429.10.i = sext i16 %192 to i64
  %mul430.10.i = mul nsw i64 %conv429.10.i, %conv429.10.i
  %add431.10.i = add nuw nsw i64 %add431.9.i, %mul430.10.i
  %193 = sub nsw i64 11, %159
  %arrayidx426.11.i = getelementptr inbounds i16, ptr %dp, i64 %193
  %194 = load i16, ptr %arrayidx426.11.i, align 2, !tbaa !5
  %195 = ashr i16 %194, 3
  %conv429.11.i = sext i16 %195 to i64
  %mul430.11.i = mul nsw i64 %conv429.11.i, %conv429.11.i
  %add431.11.i = add nuw nsw i64 %add431.10.i, %mul430.11.i
  %196 = sub nsw i64 12, %159
  %arrayidx426.12.i = getelementptr inbounds i16, ptr %dp, i64 %196
  %197 = load i16, ptr %arrayidx426.12.i, align 2, !tbaa !5
  %198 = ashr i16 %197, 3
  %conv429.12.i = sext i16 %198 to i64
  %mul430.12.i = mul nsw i64 %conv429.12.i, %conv429.12.i
  %add431.12.i = add nuw nsw i64 %add431.11.i, %mul430.12.i
  %199 = sub nsw i64 13, %159
  %arrayidx426.13.i = getelementptr inbounds i16, ptr %dp, i64 %199
  %200 = load i16, ptr %arrayidx426.13.i, align 2, !tbaa !5
  %201 = ashr i16 %200, 3
  %conv429.13.i = sext i16 %201 to i64
  %mul430.13.i = mul nsw i64 %conv429.13.i, %conv429.13.i
  %add431.13.i = add nuw nsw i64 %add431.12.i, %mul430.13.i
  %202 = sub nsw i64 14, %159
  %arrayidx426.14.i = getelementptr inbounds i16, ptr %dp, i64 %202
  %203 = load i16, ptr %arrayidx426.14.i, align 2, !tbaa !5
  %204 = ashr i16 %203, 3
  %conv429.14.i = sext i16 %204 to i64
  %mul430.14.i = mul nsw i64 %conv429.14.i, %conv429.14.i
  %add431.14.i = add nuw nsw i64 %add431.13.i, %mul430.14.i
  %205 = sub nsw i64 15, %159
  %arrayidx426.15.i = getelementptr inbounds i16, ptr %dp, i64 %205
  %206 = load i16, ptr %arrayidx426.15.i, align 2, !tbaa !5
  %207 = ashr i16 %206, 3
  %conv429.15.i = sext i16 %207 to i64
  %mul430.15.i = mul nsw i64 %conv429.15.i, %conv429.15.i
  %add431.15.i = add nuw nsw i64 %add431.14.i, %mul430.15.i
  %208 = sub nsw i64 16, %159
  %arrayidx426.16.i = getelementptr inbounds i16, ptr %dp, i64 %208
  %209 = load i16, ptr %arrayidx426.16.i, align 2, !tbaa !5
  %210 = ashr i16 %209, 3
  %conv429.16.i = sext i16 %210 to i64
  %mul430.16.i = mul nsw i64 %conv429.16.i, %conv429.16.i
  %add431.16.i = add nuw nsw i64 %add431.15.i, %mul430.16.i
  %211 = sub nsw i64 17, %159
  %arrayidx426.17.i = getelementptr inbounds i16, ptr %dp, i64 %211
  %212 = load i16, ptr %arrayidx426.17.i, align 2, !tbaa !5
  %213 = ashr i16 %212, 3
  %conv429.17.i = sext i16 %213 to i64
  %mul430.17.i = mul nsw i64 %conv429.17.i, %conv429.17.i
  %add431.17.i = add nuw nsw i64 %add431.16.i, %mul430.17.i
  %214 = sub nsw i64 18, %159
  %arrayidx426.18.i = getelementptr inbounds i16, ptr %dp, i64 %214
  %215 = load i16, ptr %arrayidx426.18.i, align 2, !tbaa !5
  %216 = ashr i16 %215, 3
  %conv429.18.i = sext i16 %216 to i64
  %mul430.18.i = mul nsw i64 %conv429.18.i, %conv429.18.i
  %add431.18.i = add nuw nsw i64 %add431.17.i, %mul430.18.i
  %217 = sub nsw i64 19, %159
  %arrayidx426.19.i = getelementptr inbounds i16, ptr %dp, i64 %217
  %218 = load i16, ptr %arrayidx426.19.i, align 2, !tbaa !5
  %219 = ashr i16 %218, 3
  %conv429.19.i = sext i16 %219 to i64
  %mul430.19.i = mul nsw i64 %conv429.19.i, %conv429.19.i
  %add431.19.i = add nuw nsw i64 %add431.18.i, %mul430.19.i
  %220 = sub nsw i64 20, %159
  %arrayidx426.20.i = getelementptr inbounds i16, ptr %dp, i64 %220
  %221 = load i16, ptr %arrayidx426.20.i, align 2, !tbaa !5
  %222 = ashr i16 %221, 3
  %conv429.20.i = sext i16 %222 to i64
  %mul430.20.i = mul nsw i64 %conv429.20.i, %conv429.20.i
  %add431.20.i = add nuw nsw i64 %add431.19.i, %mul430.20.i
  %223 = sub nsw i64 21, %159
  %arrayidx426.21.i = getelementptr inbounds i16, ptr %dp, i64 %223
  %224 = load i16, ptr %arrayidx426.21.i, align 2, !tbaa !5
  %225 = ashr i16 %224, 3
  %conv429.21.i = sext i16 %225 to i64
  %mul430.21.i = mul nsw i64 %conv429.21.i, %conv429.21.i
  %add431.21.i = add nuw nsw i64 %add431.20.i, %mul430.21.i
  %226 = sub nsw i64 22, %159
  %arrayidx426.22.i = getelementptr inbounds i16, ptr %dp, i64 %226
  %227 = load i16, ptr %arrayidx426.22.i, align 2, !tbaa !5
  %228 = ashr i16 %227, 3
  %conv429.22.i = sext i16 %228 to i64
  %mul430.22.i = mul nsw i64 %conv429.22.i, %conv429.22.i
  %add431.22.i = add nuw nsw i64 %add431.21.i, %mul430.22.i
  %229 = sub nsw i64 23, %159
  %arrayidx426.23.i = getelementptr inbounds i16, ptr %dp, i64 %229
  %230 = load i16, ptr %arrayidx426.23.i, align 2, !tbaa !5
  %231 = ashr i16 %230, 3
  %conv429.23.i = sext i16 %231 to i64
  %mul430.23.i = mul nsw i64 %conv429.23.i, %conv429.23.i
  %add431.23.i = add nuw nsw i64 %add431.22.i, %mul430.23.i
  %232 = sub nsw i64 24, %159
  %arrayidx426.24.i = getelementptr inbounds i16, ptr %dp, i64 %232
  %233 = load i16, ptr %arrayidx426.24.i, align 2, !tbaa !5
  %234 = ashr i16 %233, 3
  %conv429.24.i = sext i16 %234 to i64
  %mul430.24.i = mul nsw i64 %conv429.24.i, %conv429.24.i
  %add431.24.i = add nuw nsw i64 %add431.23.i, %mul430.24.i
  %235 = sub nsw i64 25, %159
  %arrayidx426.25.i = getelementptr inbounds i16, ptr %dp, i64 %235
  %236 = load i16, ptr %arrayidx426.25.i, align 2, !tbaa !5
  %237 = ashr i16 %236, 3
  %conv429.25.i = sext i16 %237 to i64
  %mul430.25.i = mul nsw i64 %conv429.25.i, %conv429.25.i
  %add431.25.i = add nuw nsw i64 %add431.24.i, %mul430.25.i
  %238 = sub nsw i64 26, %159
  %arrayidx426.26.i = getelementptr inbounds i16, ptr %dp, i64 %238
  %239 = load i16, ptr %arrayidx426.26.i, align 2, !tbaa !5
  %240 = ashr i16 %239, 3
  %conv429.26.i = sext i16 %240 to i64
  %mul430.26.i = mul nsw i64 %conv429.26.i, %conv429.26.i
  %add431.26.i = add nuw nsw i64 %add431.25.i, %mul430.26.i
  %241 = sub nsw i64 27, %159
  %arrayidx426.27.i = getelementptr inbounds i16, ptr %dp, i64 %241
  %242 = load i16, ptr %arrayidx426.27.i, align 2, !tbaa !5
  %243 = ashr i16 %242, 3
  %conv429.27.i = sext i16 %243 to i64
  %mul430.27.i = mul nsw i64 %conv429.27.i, %conv429.27.i
  %add431.27.i = add nuw nsw i64 %add431.26.i, %mul430.27.i
  %244 = sub nsw i64 28, %159
  %arrayidx426.28.i = getelementptr inbounds i16, ptr %dp, i64 %244
  %245 = load i16, ptr %arrayidx426.28.i, align 2, !tbaa !5
  %246 = ashr i16 %245, 3
  %conv429.28.i = sext i16 %246 to i64
  %mul430.28.i = mul nsw i64 %conv429.28.i, %conv429.28.i
  %add431.28.i = add nuw nsw i64 %add431.27.i, %mul430.28.i
  %247 = sub nsw i64 29, %159
  %arrayidx426.29.i = getelementptr inbounds i16, ptr %dp, i64 %247
  %248 = load i16, ptr %arrayidx426.29.i, align 2, !tbaa !5
  %249 = ashr i16 %248, 3
  %conv429.29.i = sext i16 %249 to i64
  %mul430.29.i = mul nsw i64 %conv429.29.i, %conv429.29.i
  %add431.29.i = add nuw nsw i64 %add431.28.i, %mul430.29.i
  %250 = sub nsw i64 30, %159
  %arrayidx426.30.i = getelementptr inbounds i16, ptr %dp, i64 %250
  %251 = load i16, ptr %arrayidx426.30.i, align 2, !tbaa !5
  %252 = ashr i16 %251, 3
  %conv429.30.i = sext i16 %252 to i64
  %mul430.30.i = mul nsw i64 %conv429.30.i, %conv429.30.i
  %add431.30.i = add nuw nsw i64 %add431.29.i, %mul430.30.i
  %253 = sub nsw i64 31, %159
  %arrayidx426.31.i = getelementptr inbounds i16, ptr %dp, i64 %253
  %254 = load i16, ptr %arrayidx426.31.i, align 2, !tbaa !5
  %255 = ashr i16 %254, 3
  %conv429.31.i = sext i16 %255 to i64
  %mul430.31.i = mul nsw i64 %conv429.31.i, %conv429.31.i
  %add431.31.i = add nuw nsw i64 %add431.30.i, %mul430.31.i
  %256 = sub nsw i64 32, %159
  %arrayidx426.32.i = getelementptr inbounds i16, ptr %dp, i64 %256
  %257 = load i16, ptr %arrayidx426.32.i, align 2, !tbaa !5
  %258 = ashr i16 %257, 3
  %conv429.32.i = sext i16 %258 to i64
  %mul430.32.i = mul nsw i64 %conv429.32.i, %conv429.32.i
  %add431.32.i = add nuw nsw i64 %add431.31.i, %mul430.32.i
  %259 = sub nsw i64 33, %159
  %arrayidx426.33.i = getelementptr inbounds i16, ptr %dp, i64 %259
  %260 = load i16, ptr %arrayidx426.33.i, align 2, !tbaa !5
  %261 = ashr i16 %260, 3
  %conv429.33.i = sext i16 %261 to i64
  %mul430.33.i = mul nsw i64 %conv429.33.i, %conv429.33.i
  %add431.33.i = add nuw nsw i64 %add431.32.i, %mul430.33.i
  %262 = sub nsw i64 34, %159
  %arrayidx426.34.i = getelementptr inbounds i16, ptr %dp, i64 %262
  %263 = load i16, ptr %arrayidx426.34.i, align 2, !tbaa !5
  %264 = ashr i16 %263, 3
  %conv429.34.i = sext i16 %264 to i64
  %mul430.34.i = mul nsw i64 %conv429.34.i, %conv429.34.i
  %add431.34.i = add nuw nsw i64 %add431.33.i, %mul430.34.i
  %265 = sub nsw i64 35, %159
  %arrayidx426.35.i = getelementptr inbounds i16, ptr %dp, i64 %265
  %266 = load i16, ptr %arrayidx426.35.i, align 2, !tbaa !5
  %267 = ashr i16 %266, 3
  %conv429.35.i = sext i16 %267 to i64
  %mul430.35.i = mul nsw i64 %conv429.35.i, %conv429.35.i
  %add431.35.i = add nuw nsw i64 %add431.34.i, %mul430.35.i
  %268 = sub nsw i64 36, %159
  %arrayidx426.36.i = getelementptr inbounds i16, ptr %dp, i64 %268
  %269 = load i16, ptr %arrayidx426.36.i, align 2, !tbaa !5
  %270 = ashr i16 %269, 3
  %conv429.36.i = sext i16 %270 to i64
  %mul430.36.i = mul nsw i64 %conv429.36.i, %conv429.36.i
  %add431.36.i = add nuw nsw i64 %add431.35.i, %mul430.36.i
  %271 = sub nsw i64 37, %159
  %arrayidx426.37.i = getelementptr inbounds i16, ptr %dp, i64 %271
  %272 = load i16, ptr %arrayidx426.37.i, align 2, !tbaa !5
  %273 = ashr i16 %272, 3
  %conv429.37.i = sext i16 %273 to i64
  %mul430.37.i = mul nsw i64 %conv429.37.i, %conv429.37.i
  %add431.37.i = add nuw nsw i64 %add431.36.i, %mul430.37.i
  %274 = sub nsw i64 38, %159
  %arrayidx426.38.i = getelementptr inbounds i16, ptr %dp, i64 %274
  %275 = load i16, ptr %arrayidx426.38.i, align 2, !tbaa !5
  %276 = ashr i16 %275, 3
  %conv429.38.i = sext i16 %276 to i64
  %mul430.38.i = mul nsw i64 %conv429.38.i, %conv429.38.i
  %add431.38.i = add nuw nsw i64 %add431.37.i, %mul430.38.i
  %277 = sub nsw i64 39, %159
  %arrayidx426.39.i = getelementptr inbounds i16, ptr %dp, i64 %277
  %278 = load i16, ptr %arrayidx426.39.i, align 2, !tbaa !5
  %279 = ashr i16 %278, 3
  %conv429.39.i = sext i16 %279 to i64
  %mul430.39.i = mul nsw i64 %conv429.39.i, %conv429.39.i
  %add431.39.i = add nuw nsw i64 %add431.38.i, %mul430.39.i
  %shl415.i = shl nuw nsw i64 %spec.select.i, 1
  %shr418.i = lshr i64 %shl415.i, %sh_prom.i
  %shl435.i = shl nuw nsw i64 %add431.39.i, 1
  %cmp436.i = icmp slt i64 %shr418.i, 1
  br i1 %cmp436.i, label %Calculation_of_the_LTP_parameters.exit.thread, label %if.end439.i

if.end439.i:                                      ; preds = %for.end414.i
  %cmp440.not.i = icmp slt i64 %shr418.i, %shl435.i
  br i1 %cmp440.not.i, label %if.end443.i, label %Calculation_of_the_LTP_parameters.exit.thread23

Calculation_of_the_LTP_parameters.exit.thread23:  ; preds = %if.end439.i
  store i16 3, ptr %bc, align 2, !tbaa !5
  %280 = load i16, ptr %Nc, align 2, !tbaa !5
  br label %for.cond108.preheader.i

if.end443.i:                                      ; preds = %if.end439.i
  %call444.i = tail call signext i16 @gsm_norm(i64 noundef %shl435.i) #5
  %conv445.i = sext i16 %call444.i to i64
  %sh_prom446.i = and i64 %conv445.i, 4294967295
  %shl447.i = shl i64 %shr418.i, %sh_prom446.i
  %281 = trunc i64 %shl447.i to i32
  %shl452.i = shl i64 %shl435.i, %sh_prom446.i
  %282 = lshr i64 %shl452.i, 16
  %conv454.i = trunc i64 %282 to i16
  %conv460.i = ashr i32 %281, 16
  %283 = load i16, ptr @gsm_DLB, align 2, !tbaa !5
  %call463.i = tail call signext i16 @gsm_mult(i16 noundef signext %conv454.i, i16 noundef signext %283) #5
  %conv464.i = sext i16 %call463.i to i32
  %cmp465.not.i = icmp sgt i32 %conv460.i, %conv464.i
  br i1 %cmp465.not.i, label %for.inc469.i, label %Calculation_of_the_LTP_parameters.exit.thread

for.inc469.i:                                     ; preds = %if.end443.i
  %284 = load i16, ptr getelementptr inbounds ([4 x i16], ptr @gsm_DLB, i64 0, i64 1), align 2, !tbaa !5
  %call463.1.i = tail call signext i16 @gsm_mult(i16 noundef signext %conv454.i, i16 noundef signext %284) #5
  %conv464.1.i = sext i16 %call463.1.i to i32
  %cmp465.not.1.i = icmp sgt i32 %conv460.i, %conv464.1.i
  br i1 %cmp465.not.1.i, label %Calculation_of_the_LTP_parameters.exit, label %Calculation_of_the_LTP_parameters.exit.thread20

Calculation_of_the_LTP_parameters.exit.thread20:  ; preds = %for.inc469.i
  store i16 1, ptr %bc, align 2, !tbaa !5
  %285 = load i16, ptr %Nc, align 2, !tbaa !5
  %286 = sext i16 %285 to i64
  %287 = sub i64 %e40, %dpp41
  %diff.check = icmp ult i64 %287, 16
  %288 = shl nsw i64 %286, 1
  %289 = sub i64 %dp42, %288
  %290 = sub i64 %dpp41, %289
  %diff.check43 = icmp ult i64 %290, 16
  %conflict.rdx = or i1 %diff.check, %diff.check43
  %291 = sub i64 %d44, %dpp41
  %diff.check45 = icmp ult i64 %291, 16
  %conflict.rdx46 = or i1 %conflict.rdx, %diff.check45
  %292 = sub i64 %e40, %289
  %diff.check47 = icmp ult i64 %292, 16
  %conflict.rdx48 = or i1 %conflict.rdx46, %diff.check47
  %293 = sub i64 %e40, %d44
  %diff.check49 = icmp ult i64 %293, 16
  %conflict.rdx50 = or i1 %conflict.rdx48, %diff.check49
  br i1 %conflict.rdx50, label %for.body29.i, label %vector.body56

vector.body56:                                    ; preds = %Calculation_of_the_LTP_parameters.exit.thread20
  %294 = sub nsw i64 0, %286
  %295 = getelementptr inbounds i16, ptr %dp, i64 %294
  %wide.load58 = load <8 x i16>, ptr %295, align 2, !tbaa !5
  %296 = sext <8 x i16> %wide.load58 to <8 x i32>
  %297 = mul nsw <8 x i32> %296, <i32 11469, i32 11469, i32 11469, i32 11469, i32 11469, i32 11469, i32 11469, i32 11469>
  %298 = add nsw <8 x i32> %297, <i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384>
  %299 = lshr <8 x i32> %298, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %300 = trunc <8 x i32> %299 to <8 x i16>
  store <8 x i16> %300, ptr %dpp, align 2, !tbaa !5
  %wide.load59 = load <8 x i16>, ptr %d, align 2, !tbaa !5
  %301 = tail call <8 x i16> @llvm.ssub.sat.v8i16(<8 x i16> %wide.load59, <8 x i16> %300)
  store <8 x i16> %301, ptr %e, align 2, !tbaa !5
  %302 = sub nsw i64 8, %286
  %303 = getelementptr inbounds i16, ptr %dp, i64 %302
  %wide.load58.1 = load <8 x i16>, ptr %303, align 2, !tbaa !5
  %304 = sext <8 x i16> %wide.load58.1 to <8 x i32>
  %305 = mul nsw <8 x i32> %304, <i32 11469, i32 11469, i32 11469, i32 11469, i32 11469, i32 11469, i32 11469, i32 11469>
  %306 = add nsw <8 x i32> %305, <i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384>
  %307 = lshr <8 x i32> %306, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %308 = trunc <8 x i32> %307 to <8 x i16>
  %309 = getelementptr inbounds i16, ptr %dpp, i64 8
  store <8 x i16> %308, ptr %309, align 2, !tbaa !5
  %310 = getelementptr inbounds i16, ptr %d, i64 8
  %wide.load59.1 = load <8 x i16>, ptr %310, align 2, !tbaa !5
  %311 = tail call <8 x i16> @llvm.ssub.sat.v8i16(<8 x i16> %wide.load59.1, <8 x i16> %308)
  %312 = getelementptr inbounds i16, ptr %e, i64 8
  store <8 x i16> %311, ptr %312, align 2, !tbaa !5
  %313 = sub nsw i64 16, %286
  %314 = getelementptr inbounds i16, ptr %dp, i64 %313
  %wide.load58.2 = load <8 x i16>, ptr %314, align 2, !tbaa !5
  %315 = sext <8 x i16> %wide.load58.2 to <8 x i32>
  %316 = mul nsw <8 x i32> %315, <i32 11469, i32 11469, i32 11469, i32 11469, i32 11469, i32 11469, i32 11469, i32 11469>
  %317 = add nsw <8 x i32> %316, <i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384>
  %318 = lshr <8 x i32> %317, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %319 = trunc <8 x i32> %318 to <8 x i16>
  %320 = getelementptr inbounds i16, ptr %dpp, i64 16
  store <8 x i16> %319, ptr %320, align 2, !tbaa !5
  %321 = getelementptr inbounds i16, ptr %d, i64 16
  %wide.load59.2 = load <8 x i16>, ptr %321, align 2, !tbaa !5
  %322 = tail call <8 x i16> @llvm.ssub.sat.v8i16(<8 x i16> %wide.load59.2, <8 x i16> %319)
  %323 = getelementptr inbounds i16, ptr %e, i64 16
  store <8 x i16> %322, ptr %323, align 2, !tbaa !5
  %324 = sub nsw i64 24, %286
  %325 = getelementptr inbounds i16, ptr %dp, i64 %324
  %wide.load58.3 = load <8 x i16>, ptr %325, align 2, !tbaa !5
  %326 = sext <8 x i16> %wide.load58.3 to <8 x i32>
  %327 = mul nsw <8 x i32> %326, <i32 11469, i32 11469, i32 11469, i32 11469, i32 11469, i32 11469, i32 11469, i32 11469>
  %328 = add nsw <8 x i32> %327, <i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384>
  %329 = lshr <8 x i32> %328, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %330 = trunc <8 x i32> %329 to <8 x i16>
  %331 = getelementptr inbounds i16, ptr %dpp, i64 24
  store <8 x i16> %330, ptr %331, align 2, !tbaa !5
  %332 = getelementptr inbounds i16, ptr %d, i64 24
  %wide.load59.3 = load <8 x i16>, ptr %332, align 2, !tbaa !5
  %333 = tail call <8 x i16> @llvm.ssub.sat.v8i16(<8 x i16> %wide.load59.3, <8 x i16> %330)
  %334 = getelementptr inbounds i16, ptr %e, i64 24
  store <8 x i16> %333, ptr %334, align 2, !tbaa !5
  %335 = sub nsw i64 32, %286
  %336 = getelementptr inbounds i16, ptr %dp, i64 %335
  %wide.load58.4 = load <8 x i16>, ptr %336, align 2, !tbaa !5
  %337 = sext <8 x i16> %wide.load58.4 to <8 x i32>
  %338 = mul nsw <8 x i32> %337, <i32 11469, i32 11469, i32 11469, i32 11469, i32 11469, i32 11469, i32 11469, i32 11469>
  %339 = add nsw <8 x i32> %338, <i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384>
  %340 = lshr <8 x i32> %339, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %341 = trunc <8 x i32> %340 to <8 x i16>
  %342 = getelementptr inbounds i16, ptr %dpp, i64 32
  store <8 x i16> %341, ptr %342, align 2, !tbaa !5
  %343 = getelementptr inbounds i16, ptr %d, i64 32
  %wide.load59.4 = load <8 x i16>, ptr %343, align 2, !tbaa !5
  %344 = tail call <8 x i16> @llvm.ssub.sat.v8i16(<8 x i16> %wide.load59.4, <8 x i16> %341)
  %345 = getelementptr inbounds i16, ptr %e, i64 32
  store <8 x i16> %344, ptr %345, align 2, !tbaa !5
  br label %Long_term_analysis_filtering.exit

Calculation_of_the_LTP_parameters.exit.thread:    ; preds = %for.end414.i, %if.end443.i
  store i16 0, ptr %bc, align 2, !tbaa !5
  %346 = load i16, ptr %Nc, align 2, !tbaa !5
  %347 = sext i16 %346 to i64
  %348 = sub i64 %e110, %dpp111
  %diff.check112 = icmp ult i64 %348, 16
  %349 = shl nsw i64 %347, 1
  %350 = sub i64 %dp113, %349
  %351 = sub i64 %dpp111, %350
  %diff.check114 = icmp ult i64 %351, 16
  %conflict.rdx115 = or i1 %diff.check112, %diff.check114
  %352 = sub i64 %d116, %dpp111
  %diff.check117 = icmp ult i64 %352, 16
  %conflict.rdx118 = or i1 %conflict.rdx115, %diff.check117
  %353 = sub i64 %e110, %350
  %diff.check119 = icmp ult i64 %353, 16
  %conflict.rdx120 = or i1 %conflict.rdx118, %diff.check119
  %354 = sub i64 %e110, %d116
  %diff.check121 = icmp ult i64 %354, 16
  %conflict.rdx122 = or i1 %conflict.rdx120, %diff.check121
  br i1 %conflict.rdx122, label %for.body.i9, label %vector.body128

vector.body128:                                   ; preds = %Calculation_of_the_LTP_parameters.exit.thread
  %355 = sub nsw i64 0, %347
  %356 = getelementptr inbounds i16, ptr %dp, i64 %355
  %wide.load130 = load <8 x i16>, ptr %356, align 2, !tbaa !5
  %357 = sext <8 x i16> %wide.load130 to <8 x i32>
  %358 = mul nsw <8 x i32> %357, <i32 3277, i32 3277, i32 3277, i32 3277, i32 3277, i32 3277, i32 3277, i32 3277>
  %359 = add nsw <8 x i32> %358, <i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384>
  %360 = ashr <8 x i32> %359, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %361 = trunc <8 x i32> %360 to <8 x i16>
  store <8 x i16> %361, ptr %dpp, align 2, !tbaa !5
  %wide.load131 = load <8 x i16>, ptr %d, align 2, !tbaa !5
  %362 = tail call <8 x i16> @llvm.ssub.sat.v8i16(<8 x i16> %wide.load131, <8 x i16> %361)
  store <8 x i16> %362, ptr %e, align 2, !tbaa !5
  %363 = sub nsw i64 8, %347
  %364 = getelementptr inbounds i16, ptr %dp, i64 %363
  %wide.load130.1 = load <8 x i16>, ptr %364, align 2, !tbaa !5
  %365 = sext <8 x i16> %wide.load130.1 to <8 x i32>
  %366 = mul nsw <8 x i32> %365, <i32 3277, i32 3277, i32 3277, i32 3277, i32 3277, i32 3277, i32 3277, i32 3277>
  %367 = add nsw <8 x i32> %366, <i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384>
  %368 = ashr <8 x i32> %367, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %369 = trunc <8 x i32> %368 to <8 x i16>
  %370 = getelementptr inbounds i16, ptr %dpp, i64 8
  store <8 x i16> %369, ptr %370, align 2, !tbaa !5
  %371 = getelementptr inbounds i16, ptr %d, i64 8
  %wide.load131.1 = load <8 x i16>, ptr %371, align 2, !tbaa !5
  %372 = tail call <8 x i16> @llvm.ssub.sat.v8i16(<8 x i16> %wide.load131.1, <8 x i16> %369)
  %373 = getelementptr inbounds i16, ptr %e, i64 8
  store <8 x i16> %372, ptr %373, align 2, !tbaa !5
  %374 = sub nsw i64 16, %347
  %375 = getelementptr inbounds i16, ptr %dp, i64 %374
  %wide.load130.2 = load <8 x i16>, ptr %375, align 2, !tbaa !5
  %376 = sext <8 x i16> %wide.load130.2 to <8 x i32>
  %377 = mul nsw <8 x i32> %376, <i32 3277, i32 3277, i32 3277, i32 3277, i32 3277, i32 3277, i32 3277, i32 3277>
  %378 = add nsw <8 x i32> %377, <i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384>
  %379 = ashr <8 x i32> %378, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %380 = trunc <8 x i32> %379 to <8 x i16>
  %381 = getelementptr inbounds i16, ptr %dpp, i64 16
  store <8 x i16> %380, ptr %381, align 2, !tbaa !5
  %382 = getelementptr inbounds i16, ptr %d, i64 16
  %wide.load131.2 = load <8 x i16>, ptr %382, align 2, !tbaa !5
  %383 = tail call <8 x i16> @llvm.ssub.sat.v8i16(<8 x i16> %wide.load131.2, <8 x i16> %380)
  %384 = getelementptr inbounds i16, ptr %e, i64 16
  store <8 x i16> %383, ptr %384, align 2, !tbaa !5
  %385 = sub nsw i64 24, %347
  %386 = getelementptr inbounds i16, ptr %dp, i64 %385
  %wide.load130.3 = load <8 x i16>, ptr %386, align 2, !tbaa !5
  %387 = sext <8 x i16> %wide.load130.3 to <8 x i32>
  %388 = mul nsw <8 x i32> %387, <i32 3277, i32 3277, i32 3277, i32 3277, i32 3277, i32 3277, i32 3277, i32 3277>
  %389 = add nsw <8 x i32> %388, <i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384>
  %390 = ashr <8 x i32> %389, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %391 = trunc <8 x i32> %390 to <8 x i16>
  %392 = getelementptr inbounds i16, ptr %dpp, i64 24
  store <8 x i16> %391, ptr %392, align 2, !tbaa !5
  %393 = getelementptr inbounds i16, ptr %d, i64 24
  %wide.load131.3 = load <8 x i16>, ptr %393, align 2, !tbaa !5
  %394 = tail call <8 x i16> @llvm.ssub.sat.v8i16(<8 x i16> %wide.load131.3, <8 x i16> %391)
  %395 = getelementptr inbounds i16, ptr %e, i64 24
  store <8 x i16> %394, ptr %395, align 2, !tbaa !5
  %396 = sub nsw i64 32, %347
  %397 = getelementptr inbounds i16, ptr %dp, i64 %396
  %wide.load130.4 = load <8 x i16>, ptr %397, align 2, !tbaa !5
  %398 = sext <8 x i16> %wide.load130.4 to <8 x i32>
  %399 = mul nsw <8 x i32> %398, <i32 3277, i32 3277, i32 3277, i32 3277, i32 3277, i32 3277, i32 3277, i32 3277>
  %400 = add nsw <8 x i32> %399, <i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384, i32 16384>
  %401 = ashr <8 x i32> %400, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %402 = trunc <8 x i32> %401 to <8 x i16>
  %403 = getelementptr inbounds i16, ptr %dpp, i64 32
  store <8 x i16> %402, ptr %403, align 2, !tbaa !5
  %404 = getelementptr inbounds i16, ptr %d, i64 32
  %wide.load131.4 = load <8 x i16>, ptr %404, align 2, !tbaa !5
  %405 = tail call <8 x i16> @llvm.ssub.sat.v8i16(<8 x i16> %wide.load131.4, <8 x i16> %402)
  %406 = getelementptr inbounds i16, ptr %e, i64 32
  store <8 x i16> %405, ptr %406, align 2, !tbaa !5
  br label %Long_term_analysis_filtering.exit

Calculation_of_the_LTP_parameters.exit:           ; preds = %for.inc469.i
  %407 = load i16, ptr getelementptr inbounds ([4 x i16], ptr @gsm_DLB, i64 0, i64 2), align 2, !tbaa !5
  %call463.2.i = tail call signext i16 @gsm_mult(i16 noundef signext %conv454.i, i16 noundef signext %407) #5
  %conv464.2.i = sext i16 %call463.2.i to i32
  %cmp465.not.2.i = icmp sgt i32 %conv460.i, %conv464.2.i
  %spec.select755.i = select i1 %cmp465.not.2.i, i16 3, i16 2
  store i16 %spec.select755.i, ptr %bc, align 2, !tbaa !5
  %408 = load i16, ptr %Nc, align 2, !tbaa !5
  br i1 %cmp465.not.2.i, label %for.cond108.preheader.i, label %for.cond67.preheader.i

for.cond108.preheader.i:                          ; preds = %Calculation_of_the_LTP_parameters.exit, %Calculation_of_the_LTP_parameters.exit.thread23
  %409 = phi i16 [ %280, %Calculation_of_the_LTP_parameters.exit.thread23 ], [ %408, %Calculation_of_the_LTP_parameters.exit ]
  %410 = sext i16 %409 to i64
  %411 = sub i64 %e86, %dpp87
  %diff.check88 = icmp ult i64 %411, 16
  %412 = shl nsw i64 %410, 1
  %413 = sub i64 %dp89, %412
  %414 = sub i64 %dpp87, %413
  %diff.check90 = icmp ult i64 %414, 16
  %conflict.rdx91 = or i1 %diff.check88, %diff.check90
  %415 = sub i64 %d92, %dpp87
  %diff.check93 = icmp ult i64 %415, 16
  %conflict.rdx94 = or i1 %conflict.rdx91, %diff.check93
  %416 = sub i64 %e86, %413
  %diff.check95 = icmp ult i64 %416, 16
  %conflict.rdx96 = or i1 %conflict.rdx94, %diff.check95
  %417 = sub i64 %e86, %d92
  %diff.check97 = icmp ult i64 %417, 16
  %conflict.rdx98 = or i1 %conflict.rdx96, %diff.check97
  br i1 %conflict.rdx98, label %for.body111.i, label %vector.body104

vector.body104:                                   ; preds = %for.cond108.preheader.i, %vector.body104
  %index105 = phi i64 [ %index.next108, %vector.body104 ], [ 0, %for.cond108.preheader.i ]
  %418 = sub nsw i64 %index105, %410
  %419 = getelementptr inbounds i16, ptr %dp, i64 %418
  %wide.load106 = load <8 x i16>, ptr %419, align 2, !tbaa !5
  %420 = sext <8 x i16> %wide.load106 to <8 x i64>
  %421 = mul nsw <8 x i64> %420, <i64 32767, i64 32767, i64 32767, i64 32767, i64 32767, i64 32767, i64 32767, i64 32767>
  %422 = add nsw <8 x i64> %421, <i64 16384, i64 16384, i64 16384, i64 16384, i64 16384, i64 16384, i64 16384, i64 16384>
  %423 = lshr <8 x i64> %422, <i64 15, i64 15, i64 15, i64 15, i64 15, i64 15, i64 15, i64 15>
  %424 = trunc <8 x i64> %423 to <8 x i16>
  %425 = getelementptr inbounds i16, ptr %dpp, i64 %index105
  store <8 x i16> %424, ptr %425, align 2, !tbaa !5
  %426 = getelementptr inbounds i16, ptr %d, i64 %index105
  %wide.load107 = load <8 x i16>, ptr %426, align 2, !tbaa !5
  %427 = tail call <8 x i16> @llvm.ssub.sat.v8i16(<8 x i16> %wide.load107, <8 x i16> %424)
  %428 = getelementptr inbounds i16, ptr %e, i64 %index105
  store <8 x i16> %427, ptr %428, align 2, !tbaa !5
  %index.next108 = add nuw i64 %index105, 8
  %429 = icmp eq i64 %index.next108, 40
  br i1 %429, label %Long_term_analysis_filtering.exit, label %vector.body104, !llvm.loop !11

for.cond67.preheader.i:                           ; preds = %Calculation_of_the_LTP_parameters.exit
  %430 = sext i16 %408 to i64
  %431 = sub i64 %e62, %dpp63
  %diff.check64 = icmp ult i64 %431, 16
  %432 = shl nsw i64 %430, 1
  %433 = sub i64 %dp65, %432
  %434 = sub i64 %dpp63, %433
  %diff.check66 = icmp ult i64 %434, 16
  %conflict.rdx67 = or i1 %diff.check64, %diff.check66
  %435 = sub i64 %d68, %dpp63
  %diff.check69 = icmp ult i64 %435, 16
  %conflict.rdx70 = or i1 %conflict.rdx67, %diff.check69
  %436 = sub i64 %e62, %433
  %diff.check71 = icmp ult i64 %436, 16
  %conflict.rdx72 = or i1 %conflict.rdx70, %diff.check71
  %437 = sub i64 %e62, %d68
  %diff.check73 = icmp ult i64 %437, 16
  %conflict.rdx74 = or i1 %conflict.rdx72, %diff.check73
  br i1 %conflict.rdx74, label %for.body70.i, label %vector.body80

vector.body80:                                    ; preds = %for.cond67.preheader.i, %vector.body80
  %index81 = phi i64 [ %index.next84, %vector.body80 ], [ 0, %for.cond67.preheader.i ]
  %438 = sub nsw i64 %index81, %430
  %439 = getelementptr inbounds i16, ptr %dp, i64 %438
  %wide.load82 = load <8 x i16>, ptr %439, align 2, !tbaa !5
  %440 = sext <8 x i16> %wide.load82 to <8 x i64>
  %441 = mul nsw <8 x i64> %440, <i64 21299, i64 21299, i64 21299, i64 21299, i64 21299, i64 21299, i64 21299, i64 21299>
  %442 = add nsw <8 x i64> %441, <i64 16384, i64 16384, i64 16384, i64 16384, i64 16384, i64 16384, i64 16384, i64 16384>
  %443 = lshr <8 x i64> %442, <i64 15, i64 15, i64 15, i64 15, i64 15, i64 15, i64 15, i64 15>
  %444 = trunc <8 x i64> %443 to <8 x i16>
  %445 = getelementptr inbounds i16, ptr %dpp, i64 %index81
  store <8 x i16> %444, ptr %445, align 2, !tbaa !5
  %446 = getelementptr inbounds i16, ptr %d, i64 %index81
  %wide.load83 = load <8 x i16>, ptr %446, align 2, !tbaa !5
  %447 = tail call <8 x i16> @llvm.ssub.sat.v8i16(<8 x i16> %wide.load83, <8 x i16> %444)
  %448 = getelementptr inbounds i16, ptr %e, i64 %index81
  store <8 x i16> %447, ptr %448, align 2, !tbaa !5
  %index.next84 = add nuw i64 %index81, 8
  %449 = icmp eq i64 %index.next84, 40
  br i1 %449, label %Long_term_analysis_filtering.exit, label %vector.body80, !llvm.loop !14

for.body.i9:                                      ; preds = %Calculation_of_the_LTP_parameters.exit.thread, %for.body.i9
  %indvars.iv223.i = phi i64 [ %indvars.iv.next224.i, %for.body.i9 ], [ 0, %Calculation_of_the_LTP_parameters.exit.thread ]
  %450 = sub nsw i64 %indvars.iv223.i, %347
  %arrayidx.i5 = getelementptr inbounds i16, ptr %dp, i64 %450
  %451 = load i16, ptr %arrayidx.i5, align 2, !tbaa !5
  %conv3.i = sext i16 %451 to i32
  %mul.i6 = mul nsw i32 %conv3.i, 3277
  %add.i7 = add nsw i32 %mul.i6, 16384
  %shr.i8 = ashr i32 %add.i7, 15
  %conv4.i = trunc i32 %shr.i8 to i16
  %arrayidx6.i = getelementptr inbounds i16, ptr %dpp, i64 %indvars.iv223.i
  store i16 %conv4.i, ptr %arrayidx6.i, align 2, !tbaa !5
  %arrayidx8.i = getelementptr inbounds i16, ptr %d, i64 %indvars.iv223.i
  %452 = load i16, ptr %arrayidx8.i, align 2, !tbaa !5
  %453 = tail call i16 @llvm.ssub.sat.i16(i16 %452, i16 %conv4.i)
  %arrayidx24.i = getelementptr inbounds i16, ptr %e, i64 %indvars.iv223.i
  store i16 %453, ptr %arrayidx24.i, align 2, !tbaa !5
  %indvars.iv.next224.i = add nuw nsw i64 %indvars.iv223.i, 1
  %exitcond227.not.i = icmp eq i64 %indvars.iv.next224.i, 40
  br i1 %exitcond227.not.i, label %Long_term_analysis_filtering.exit, label %for.body.i9, !llvm.loop !15

for.body29.i:                                     ; preds = %Calculation_of_the_LTP_parameters.exit.thread20, %for.body29.i
  %indvars.iv218.i = phi i64 [ %indvars.iv.next219.i, %for.body29.i ], [ 0, %Calculation_of_the_LTP_parameters.exit.thread20 ]
  %454 = sub nsw i64 %indvars.iv218.i, %286
  %arrayidx33.i = getelementptr inbounds i16, ptr %dp, i64 %454
  %455 = load i16, ptr %arrayidx33.i, align 2, !tbaa !5
  %conv34.i = sext i16 %455 to i32
  %mul35.i = mul nsw i32 %conv34.i, 11469
  %add36.i = add nsw i32 %mul35.i, 16384
  %456 = lshr i32 %add36.i, 15
  %conv38.i10 = trunc i32 %456 to i16
  %arrayidx40.i = getelementptr inbounds i16, ptr %dpp, i64 %indvars.iv218.i
  store i16 %conv38.i10, ptr %arrayidx40.i, align 2, !tbaa !5
  %arrayidx42.i = getelementptr inbounds i16, ptr %d, i64 %indvars.iv218.i
  %457 = load i16, ptr %arrayidx42.i, align 2, !tbaa !5
  %458 = tail call i16 @llvm.ssub.sat.i16(i16 %457, i16 %conv38.i10)
  %arrayidx62.i = getelementptr inbounds i16, ptr %e, i64 %indvars.iv218.i
  store i16 %458, ptr %arrayidx62.i, align 2, !tbaa !5
  %indvars.iv.next219.i = add nuw nsw i64 %indvars.iv218.i, 1
  %exitcond222.not.i = icmp eq i64 %indvars.iv.next219.i, 40
  br i1 %exitcond222.not.i, label %Long_term_analysis_filtering.exit, label %for.body29.i, !llvm.loop !16

for.body70.i:                                     ; preds = %for.cond67.preheader.i, %for.body70.i
  %indvars.iv213.i = phi i64 [ %indvars.iv.next214.i, %for.body70.i ], [ 0, %for.cond67.preheader.i ]
  %459 = sub nsw i64 %indvars.iv213.i, %430
  %arrayidx74.i = getelementptr inbounds i16, ptr %dp, i64 %459
  %460 = load i16, ptr %arrayidx74.i, align 2, !tbaa !5
  %conv75.i11 = sext i16 %460 to i64
  %mul76.i = mul nsw i64 %conv75.i11, 21299
  %add77.i = add nsw i64 %mul76.i, 16384
  %461 = lshr i64 %add77.i, 15
  %conv79.i12 = trunc i64 %461 to i16
  %arrayidx81.i = getelementptr inbounds i16, ptr %dpp, i64 %indvars.iv213.i
  store i16 %conv79.i12, ptr %arrayidx81.i, align 2, !tbaa !5
  %arrayidx83.i = getelementptr inbounds i16, ptr %d, i64 %indvars.iv213.i
  %462 = load i16, ptr %arrayidx83.i, align 2, !tbaa !5
  %463 = tail call i16 @llvm.ssub.sat.i16(i16 %462, i16 %conv79.i12)
  %arrayidx103.i = getelementptr inbounds i16, ptr %e, i64 %indvars.iv213.i
  store i16 %463, ptr %arrayidx103.i, align 2, !tbaa !5
  %indvars.iv.next214.i = add nuw nsw i64 %indvars.iv213.i, 1
  %exitcond217.not.i = icmp eq i64 %indvars.iv.next214.i, 40
  br i1 %exitcond217.not.i, label %Long_term_analysis_filtering.exit, label %for.body70.i, !llvm.loop !17

for.body111.i:                                    ; preds = %for.cond108.preheader.i, %for.body111.i
  %indvars.iv.i13 = phi i64 [ %indvars.iv.next.i16, %for.body111.i ], [ 0, %for.cond108.preheader.i ]
  %464 = sub nsw i64 %indvars.iv.i13, %410
  %arrayidx115.i = getelementptr inbounds i16, ptr %dp, i64 %464
  %465 = load i16, ptr %arrayidx115.i, align 2, !tbaa !5
  %conv116.i = sext i16 %465 to i64
  %mul117.i = mul nsw i64 %conv116.i, 32767
  %add118.i14 = add nsw i64 %mul117.i, 16384
  %466 = lshr i64 %add118.i14, 15
  %conv120.i15 = trunc i64 %466 to i16
  %arrayidx122.i = getelementptr inbounds i16, ptr %dpp, i64 %indvars.iv.i13
  store i16 %conv120.i15, ptr %arrayidx122.i, align 2, !tbaa !5
  %arrayidx124.i = getelementptr inbounds i16, ptr %d, i64 %indvars.iv.i13
  %467 = load i16, ptr %arrayidx124.i, align 2, !tbaa !5
  %468 = tail call i16 @llvm.ssub.sat.i16(i16 %467, i16 %conv120.i15)
  %arrayidx144.i = getelementptr inbounds i16, ptr %e, i64 %indvars.iv.i13
  store i16 %468, ptr %arrayidx144.i, align 2, !tbaa !5
  %indvars.iv.next.i16 = add nuw nsw i64 %indvars.iv.i13, 1
  %exitcond.not.i17 = icmp eq i64 %indvars.iv.next.i16, 40
  br i1 %exitcond.not.i17, label %Long_term_analysis_filtering.exit, label %for.body111.i, !llvm.loop !18

Long_term_analysis_filtering.exit:                ; preds = %for.body29.i, %vector.body80, %for.body70.i, %vector.body104, %for.body111.i, %for.body.i9, %vector.body56, %vector.body128
  ret void
}

; Function Attrs: nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable
define dso_local void @Gsm_Long_Term_Synthesis_Filtering(ptr nocapture noundef %S, i16 noundef signext %Ncr, i16 noundef signext %bcr, ptr nocapture noundef readonly %erp, ptr nocapture noundef %drp) local_unnamed_addr #1 {
entry:
  %erp76 = ptrtoint ptr %erp to i64
  %drp75 = ptrtoint ptr %drp to i64
  %0 = add i16 %Ncr, -121
  %or.cond = icmp ult i16 %0, -81
  br i1 %or.cond, label %cond.true, label %cond.end

cond.true:                                        ; preds = %entry
  %nrp = getelementptr inbounds %struct.gsm_state, ptr %S, i64 0, i32 7
  %1 = load i16, ptr %nrp, align 2, !tbaa !19
  br label %cond.end

cond.end:                                         ; preds = %entry, %cond.true
  %cond.in = phi i16 [ %1, %cond.true ], [ %Ncr, %entry ]
  %nrp8 = getelementptr inbounds %struct.gsm_state, ptr %S, i64 0, i32 7
  store i16 %cond.in, ptr %nrp8, align 2, !tbaa !19
  %idxprom = sext i16 %bcr to i64
  %arrayidx = getelementptr inbounds [4 x i16], ptr @gsm_QLB, i64 0, i64 %idxprom
  %2 = load i16, ptr %arrayidx, align 2, !tbaa !5
  %conv11 = sext i16 %2 to i64
  %mul = shl nsw i64 %conv11, 33
  %3 = sext i16 %cond.in to i64
  %4 = sub i64 %drp75, %erp76
  %diff.check = icmp ult i64 %4, 16
  %5 = and i64 %3, 9223372036854775800
  %diff.check77 = icmp eq i64 %5, 0
  %conflict.rdx = or i1 %diff.check, %diff.check77
  %6 = sub i64 %drp75, %erp76
  %diff.check78 = icmp ult i64 %6, 16
  %conflict.rdx79 = or i1 %conflict.rdx, %diff.check78
  br i1 %conflict.rdx79, label %for.body, label %vector.body

vector.body:                                      ; preds = %cond.end
  %broadcast.splatinsert = insertelement <8 x i64> poison, i64 %mul, i64 0
  %broadcast.splat = shufflevector <8 x i64> %broadcast.splatinsert, <8 x i64> poison, <8 x i32> zeroinitializer
  %7 = sub nsw i64 0, %3
  %8 = getelementptr inbounds i16, ptr %drp, i64 %7
  %wide.load = load <8 x i16>, ptr %8, align 2, !tbaa !5
  %9 = sext <8 x i16> %wide.load to <8 x i64>
  %wide.load80 = load <8 x i16>, ptr %erp, align 2, !tbaa !5
  %10 = mul <8 x i64> %broadcast.splat, %9
  %11 = add <8 x i64> %10, <i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328>
  %12 = lshr <8 x i64> %11, <i64 48, i64 48, i64 48, i64 48, i64 48, i64 48, i64 48, i64 48>
  %13 = trunc <8 x i64> %12 to <8 x i16>
  %14 = tail call <8 x i16> @llvm.sadd.sat.v8i16(<8 x i16> %13, <8 x i16> %wide.load80)
  store <8 x i16> %14, ptr %drp, align 2, !tbaa !5
  %15 = sub nsw i64 8, %3
  %16 = getelementptr inbounds i16, ptr %drp, i64 %15
  %wide.load.1 = load <8 x i16>, ptr %16, align 2, !tbaa !5
  %17 = sext <8 x i16> %wide.load.1 to <8 x i64>
  %18 = getelementptr inbounds i16, ptr %erp, i64 8
  %wide.load80.1 = load <8 x i16>, ptr %18, align 2, !tbaa !5
  %19 = mul <8 x i64> %broadcast.splat, %17
  %20 = add <8 x i64> %19, <i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328>
  %21 = lshr <8 x i64> %20, <i64 48, i64 48, i64 48, i64 48, i64 48, i64 48, i64 48, i64 48>
  %22 = trunc <8 x i64> %21 to <8 x i16>
  %23 = tail call <8 x i16> @llvm.sadd.sat.v8i16(<8 x i16> %22, <8 x i16> %wide.load80.1)
  %24 = getelementptr inbounds i16, ptr %drp, i64 8
  store <8 x i16> %23, ptr %24, align 2, !tbaa !5
  %25 = sub nsw i64 16, %3
  %26 = getelementptr inbounds i16, ptr %drp, i64 %25
  %wide.load.2 = load <8 x i16>, ptr %26, align 2, !tbaa !5
  %27 = sext <8 x i16> %wide.load.2 to <8 x i64>
  %28 = getelementptr inbounds i16, ptr %erp, i64 16
  %wide.load80.2 = load <8 x i16>, ptr %28, align 2, !tbaa !5
  %29 = mul <8 x i64> %broadcast.splat, %27
  %30 = add <8 x i64> %29, <i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328>
  %31 = lshr <8 x i64> %30, <i64 48, i64 48, i64 48, i64 48, i64 48, i64 48, i64 48, i64 48>
  %32 = trunc <8 x i64> %31 to <8 x i16>
  %33 = tail call <8 x i16> @llvm.sadd.sat.v8i16(<8 x i16> %32, <8 x i16> %wide.load80.2)
  %34 = getelementptr inbounds i16, ptr %drp, i64 16
  store <8 x i16> %33, ptr %34, align 2, !tbaa !5
  %35 = sub nsw i64 24, %3
  %36 = getelementptr inbounds i16, ptr %drp, i64 %35
  %wide.load.3 = load <8 x i16>, ptr %36, align 2, !tbaa !5
  %37 = sext <8 x i16> %wide.load.3 to <8 x i64>
  %38 = getelementptr inbounds i16, ptr %erp, i64 24
  %wide.load80.3 = load <8 x i16>, ptr %38, align 2, !tbaa !5
  %39 = mul <8 x i64> %broadcast.splat, %37
  %40 = add <8 x i64> %39, <i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328>
  %41 = lshr <8 x i64> %40, <i64 48, i64 48, i64 48, i64 48, i64 48, i64 48, i64 48, i64 48>
  %42 = trunc <8 x i64> %41 to <8 x i16>
  %43 = tail call <8 x i16> @llvm.sadd.sat.v8i16(<8 x i16> %42, <8 x i16> %wide.load80.3)
  %44 = getelementptr inbounds i16, ptr %drp, i64 24
  store <8 x i16> %43, ptr %44, align 2, !tbaa !5
  %45 = sub nsw i64 32, %3
  %46 = getelementptr inbounds i16, ptr %drp, i64 %45
  %wide.load.4 = load <8 x i16>, ptr %46, align 2, !tbaa !5
  %47 = sext <8 x i16> %wide.load.4 to <8 x i64>
  %48 = getelementptr inbounds i16, ptr %erp, i64 32
  %wide.load80.4 = load <8 x i16>, ptr %48, align 2, !tbaa !5
  %49 = mul <8 x i64> %broadcast.splat, %47
  %50 = add <8 x i64> %49, <i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328, i64 140737488355328>
  %51 = lshr <8 x i64> %50, <i64 48, i64 48, i64 48, i64 48, i64 48, i64 48, i64 48, i64 48>
  %52 = trunc <8 x i64> %51 to <8 x i16>
  %53 = tail call <8 x i16> @llvm.sadd.sat.v8i16(<8 x i16> %52, <8 x i16> %wide.load80.4)
  %54 = getelementptr inbounds i16, ptr %drp, i64 32
  store <8 x i16> %53, ptr %54, align 2, !tbaa !5
  br label %for.body39.preheader

for.body:                                         ; preds = %cond.end, %for.body
  %indvars.iv = phi i64 [ %indvars.iv.next, %for.body ], [ 0, %cond.end ]
  %55 = sub nsw i64 %indvars.iv, %3
  %arrayidx14 = getelementptr inbounds i16, ptr %drp, i64 %55
  %56 = load i16, ptr %arrayidx14, align 2, !tbaa !5
  %conv15 = sext i16 %56 to i64
  %arrayidx18 = getelementptr inbounds i16, ptr %erp, i64 %indvars.iv
  %57 = load i16, ptr %arrayidx18, align 2, !tbaa !5
  %add = mul i64 %mul, %conv15
  %58 = add i64 %add, 140737488355328
  %59 = lshr i64 %58, 48
  %60 = trunc i64 %59 to i16
  %61 = tail call i16 @llvm.sadd.sat.i16(i16 %60, i16 %57)
  %arrayidx35 = getelementptr inbounds i16, ptr %drp, i64 %indvars.iv
  store i16 %61, ptr %arrayidx35, align 2, !tbaa !5
  %indvars.iv.next = add nuw nsw i64 %indvars.iv, 1
  %exitcond.not = icmp eq i64 %indvars.iv.next, 40
  br i1 %exitcond.not, label %for.body39.preheader, label %for.body, !llvm.loop !23

for.body39.preheader:                             ; preds = %for.body, %vector.body
  %scevgep = getelementptr i8, ptr %drp, i64 -240
  %scevgep69 = getelementptr i8, ptr %drp, i64 -160
  tail call void @llvm.memmove.p0.p0.i64(ptr noundef nonnull align 2 dereferenceable(240) %scevgep, ptr noundef nonnull align 2 dereferenceable(240) %scevgep69, i64 240, i1 false), !tbaa !5
  ret void
}

declare signext i16 @gsm_norm(i64 noundef) local_unnamed_addr #2

declare signext i16 @gsm_mult(i16 noundef signext, i16 noundef signext) local_unnamed_addr #2

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.ssub.sat.i16(i16, i16) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.sadd.sat.i16(i16, i16) #3

; Function Attrs: nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x i16> @llvm.smax.v8i16(<8 x i16>, <8 x i16>) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.vector.reduce.smax.v8i16(<8 x i16>) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x i16> @llvm.ssub.sat.v8i16(<8 x i16>, <8 x i16>) #3

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x i16> @llvm.sadd.sat.v8i16(<8 x i16>, <8 x i16>) #3

attributes #0 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { nofree nosync nounwind memory(read, argmem: readwrite, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #3 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #4 = { nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"short", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C/C++ TBAA"}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.mustprogress"}
!11 = distinct !{!11, !10, !12, !13}
!12 = !{!"llvm.loop.isvectorized", i32 1}
!13 = !{!"llvm.loop.unroll.runtime.disable"}
!14 = distinct !{!14, !10, !12, !13}
!15 = distinct !{!15, !10, !12}
!16 = distinct !{!16, !10, !12}
!17 = distinct !{!17, !10, !12}
!18 = distinct !{!18, !10, !12}
!19 = !{!20, !6, i64 630}
!20 = !{!"gsm_state", !7, i64 0, !6, i64 560, !21, i64 568, !22, i64 576, !7, i64 580, !7, i64 596, !6, i64 628, !6, i64 630, !7, i64 632, !6, i64 650, !7, i64 652, !7, i64 653}
!21 = !{!"long", !7, i64 0}
!22 = !{!"int", !7, i64 0}
!23 = distinct !{!23, !10, !12}
