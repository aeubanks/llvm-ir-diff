; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/PAQ8p/paq8p.cpp'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/PAQ8p/paq8p.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.ProgramChecker = type { i32, i32, i64 }
%class.Random = type <{ %class.Array, i32, [4 x i8] }>
%class.Array = type { i32, i32, ptr, ptr }
%class.Buf = type { %class.Array.0 }
%class.Array.0 = type { i32, i32, ptr, ptr }
%class.Ilog = type { %class.Array.0 }
%class.Stretch = type { %class.Array.1 }
%class.Array.1 = type { i32, i32, ptr, ptr }
%class.Array.3 = type { i32, i32, ptr, ptr }
%class.SmallStationaryContextMap = type { %class.Array.4, i32, ptr }
%class.Array.4 = type { i32, i32, ptr, ptr }
%class.StateMap = type { i32, i32, %class.Array }
%class.ContextMap = type <{ i32, [4 x i8], %class.Array.5, %class.Array.6, %class.Array.6, %class.Array, %class.Array.6, ptr, i32, [4 x i8] }>
%class.Array.5 = type { i32, i32, ptr, ptr }
%class.Array.6 = type { i32, i32, ptr, ptr }
%class.Array.7 = type { i32, i32, ptr, ptr }
%class.IntBuf = type { %class.Array.3 }
%class.BH = type <{ %class.Array.8, i32, [4 x i8] }>
%class.Array.8 = type { i32, i32, ptr, ptr }
%class.Mixer = type { i32, i32, i32, %class.Array.2, %class.Array.2, %class.Array.3, i32, i32, i32, %class.Array.3, ptr }
%class.Array.2 = type { i32, i32, ptr, ptr }
%class.APM = type { %class.StateMap }
%class.Array.9 = type { i32, i32, ptr, ptr }
%class.RunContextMap = type { %class.BH.10, ptr }
%class.BH.10 = type <{ %class.Array.8, i32, [4 x i8] }>
%class.APM1 = type { i32, i32, %class.Array.4 }
%class.String = type { %class.Array.12 }
%class.Array.12 = type { i32, i32, ptr, ptr }
%"class.ContextMap::E" = type { [7 x i16], i8, [7 x [7 x i8]] }
%struct.HUF = type { i32, i32, i32 }
%struct.DMCNode = type { [2 x i32], i8, [3 x i8] }
%class.Encoder = type { %class.Predictor, i32, ptr, i32, i32, i32, ptr }
%class.Predictor = type { i32 }
%class.Array.13 = type { i32, i32, ptr, ptr }
%class.Array.14 = type { i32, i32, ptr, ptr }

$_ZN6RandomD2Ev = comdat any

$_ZN3BufC2Ei = comdat any

$_ZN3BufD2Ev = comdat any

$_ZN4IlogD2Ev = comdat any

$_ZN5ArrayIhLi0EEC2Ei = comdat any

$_ZN5ArrayIhLi0EED2Ev = comdat any

$_ZN7StretchD2Ev = comdat any

$_ZN5ArrayIiLi0EED2Ev = comdat any

$_ZN5ArrayIsLi16EED2Ev = comdat any

$_ZN5ArrayIiLi0EEC2Ei = comdat any

$_ZN5ArrayIjLi0EEC2Ei = comdat any

$_ZN5ArrayIjLi0EED2Ev = comdat any

$_ZN5ArrayIPhLi0EEC2Ei = comdat any

$_ZN8StateMapD2Ev = comdat any

$_ZN5ArrayIPhLi0EED2Ev = comdat any

$_ZN5ArrayIN10ContextMap1EELi64EED2Ev = comdat any

$_ZN10ContextMap1E3getEt = comdat any

$_ZN25SmallStationaryContextMapC2Ei = comdat any

$_ZN25SmallStationaryContextMapD2Ev = comdat any

$_Z2i4i = comdat any

$_ZN5ArrayI3HUFLi0EEC2Ei = comdat any

$_ZN5ArrayI3HUFLi0EED2Ev = comdat any

$_ZN6IntBufC2Ei = comdat any

$_ZN6IntBufD2Ev = comdat any

$_ZN2BHILi9EEC2Ei = comdat any

$_ZN2BHILi9EED2Ev = comdat any

$_ZN5Mixer6updateEv = comdat any

$_ZN2BHILi9EEixEj = comdat any

$_ZN5Mixer1pEv = comdat any

$_ZN3APM1pEiii = comdat any

$_Z1Xii = comdat any

$_ZN5ArrayI7DMCNodeLi0EEC2Ei = comdat any

$_ZN5ArrayI7DMCNodeLi0EED2Ev = comdat any

$_ZN13RunContextMapC2Ei = comdat any

$_ZN13RunContextMapD2Ev = comdat any

$_ZN4APM1D2Ev = comdat any

$_ZN7Encoder10decompressEv = comdat any

$_ZN7Encoder8compressEi = comdat any

$_ZN6StringC2EPKc = comdat any

$_ZN5ArrayIcLi0EED2Ev = comdat any

$_ZN5ArrayIcLi0EE6resizeEi = comdat any

$_ZN5ArrayIPcLi0EE6resizeEi = comdat any

$_ZN5ArrayIlLi0EE6resizeEi = comdat any

$_ZN2BHILi4EEixEj = comdat any

$_ZN7Encoder4codeEi = comdat any

$_ZN5ArrayIhLi0EE6resizeEi = comdat any

$_ZZN2BHILi4EEixEjE3tmp = comdat any

$_ZZN2BHILi9EEixEjE3tmp = comdat any

@_ZTIPKc = external constant ptr
@programChecker = dso_local local_unnamed_addr global %class.ProgramChecker zeroinitializer, align 8
@rnd = dso_local global %class.Random zeroinitializer, align 8
@__dso_handle = external hidden global i8
@pos = dso_local local_unnamed_addr global i32 0, align 4
@level = dso_local local_unnamed_addr global i32 5, align 4
@y = dso_local local_unnamed_addr global i32 0, align 4
@c0 = dso_local local_unnamed_addr global i32 1, align 4
@c4 = dso_local local_unnamed_addr global i32 0, align 4
@bpos = dso_local local_unnamed_addr global i32 0, align 4
@buf = dso_local global %class.Buf zeroinitializer, align 8
@ilog = dso_local global %class.Ilog zeroinitializer, align 8
@_ZZ6squashiE1t = internal unnamed_addr constant [33 x i32] [i32 1, i32 2, i32 3, i32 6, i32 10, i32 16, i32 27, i32 45, i32 73, i32 120, i32 194, i32 310, i32 488, i32 747, i32 1101, i32 1546, i32 2047, i32 2549, i32 2994, i32 3348, i32 3607, i32 3785, i32 3901, i32 3975, i32 4022, i32 4050, i32 4068, i32 4079, i32 4085, i32 4089, i32 4092, i32 4093, i32 4094], align 16
@stretch = dso_local global %class.Stretch zeroinitializer, align 8
@_ZL11State_table = internal unnamed_addr constant [256 x [4 x i8]] [[4 x i8] c"\01\02\00\00", [4 x i8] c"\03\05\01\00", [4 x i8] c"\04\06\00\01", [4 x i8] c"\07\0A\02\00", [4 x i8] c"\08\0C\01\01", [4 x i8] c"\09\0D\01\01", [4 x i8] c"\0B\0E\00\02", [4 x i8] c"\0F\13\03\00", [4 x i8] c"\10\17\02\01", [4 x i8] c"\11\18\02\01", [4 x i8] c"\12\19\02\01", [4 x i8] c"\14\1B\01\02", [4 x i8] c"\15\1C\01\02", [4 x i8] c"\16\1D\01\02", [4 x i8] c"\1A\1E\00\03", [4 x i8] c"\1F!\04\00", [4 x i8] c" #\03\01", [4 x i8] c" #\03\01", [4 x i8] c" #\03\01", [4 x i8] c" #\03\01", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"$'\01\03", [4 x i8] c"$'\01\03", [4 x i8] c"$'\01\03", [4 x i8] c"$'\01\03", [4 x i8] c"&(\00\04", [4 x i8] c")+\05\00", [4 x i8] c"*-\04\01", [4 x i8] c"*-\04\01", [4 x i8] c",/\03\02", [4 x i8] c",/\03\02", [4 x i8] c".1\02\03", [4 x i8] c".1\02\03", [4 x i8] c"03\01\04", [4 x i8] c"03\01\04", [4 x i8] c"24\00\05", [4 x i8] c"5+\06\00", [4 x i8] c"69\05\01", [4 x i8] c"69\05\01", [4 x i8] c"8;\04\02", [4 x i8] c"8;\04\02", [4 x i8] c":=\03\03", [4 x i8] c":=\03\03", [4 x i8] c"<?\02\04", [4 x i8] c"<?\02\04", [4 x i8] c">A\01\05", [4 x i8] c">A\01\05", [4 x i8] c"2B\00\06", [4 x i8] c"C7\07\00", [4 x i8] c"D9\06\01", [4 x i8] c"D9\06\01", [4 x i8] c"FI\05\02", [4 x i8] c"FI\05\02", [4 x i8] c"HK\04\03", [4 x i8] c"HK\04\03", [4 x i8] c"JM\03\04", [4 x i8] c"JM\03\04", [4 x i8] c"LO\02\05", [4 x i8] c"LO\02\05", [4 x i8] c">Q\01\06", [4 x i8] c">Q\01\06", [4 x i8] c"@R\00\07", [4 x i8] c"SE\08\00", [4 x i8] c"TG\07\01", [4 x i8] c"TG\07\01", [4 x i8] c"VI\06\02", [4 x i8] c"VI\06\02", [4 x i8] c",;\05\03", [4 x i8] c",;\05\03", [4 x i8] c":=\04\04", [4 x i8] c":=\04\04", [4 x i8] c"<1\03\05", [4 x i8] c"<1\03\05", [4 x i8] c"LY\02\06", [4 x i8] c"LY\02\06", [4 x i8] c"N[\01\07", [4 x i8] c"N[\01\07", [4 x i8] c"P\\\00\08", [4 x i8] c"]E\09\00", [4 x i8] c"^W\08\01", [4 x i8] c"^W\08\01", [4 x i8] c"`-\07\02", [4 x i8] c"`-\07\02", [4 x i8] c"0c\02\07", [4 x i8] c"0c\02\07", [4 x i8] c"Xe\01\08", [4 x i8] c"Xe\01\08", [4 x i8] c"Pf\00\09", [4 x i8] c"gE\0A\00", [4 x i8] c"hW\09\01", [4 x i8] c"hW\09\01", [4 x i8] c"j9\08\02", [4 x i8] c"j9\08\02", [4 x i8] c">m\02\08", [4 x i8] c">m\02\08", [4 x i8] c"Xo\01\09", [4 x i8] c"Xo\01\09", [4 x i8] c"Pp\00\0A", [4 x i8] c"qU\0B\00", [4 x i8] c"rW\0A\01", [4 x i8] c"rW\0A\01", [4 x i8] c"t9\09\02", [4 x i8] c"t9\09\02", [4 x i8] c">w\02\09", [4 x i8] c">w\02\09", [4 x i8] c"Xy\01\0A", [4 x i8] c"Xy\01\0A", [4 x i8] c"Zz\00\0B", [4 x i8] c"{U\0C\00", [4 x i8] c"|a\0B\01", [4 x i8] c"|a\0B\01", [4 x i8] c"~9\0A\02", [4 x i8] c"~9\0A\02", [4 x i8] c">\81\02\0A", [4 x i8] c">\81\02\0A", [4 x i8] c"b\83\01\0B", [4 x i8] c"b\83\01\0B", [4 x i8] c"Z\84\00\0C", [4 x i8] c"\85U\0D\00", [4 x i8] c"\86a\0C\01", [4 x i8] c"\86a\0C\01", [4 x i8] c"\889\0B\02", [4 x i8] c"\889\0B\02", [4 x i8] c">\8B\02\0B", [4 x i8] c">\8B\02\0B", [4 x i8] c"b\8D\01\0C", [4 x i8] c"b\8D\01\0C", [4 x i8] c"Z\8E\00\0D", [4 x i8] c"\8F_\0E\00", [4 x i8] c"\90a\0D\01", [4 x i8] c"\90a\0D\01", [4 x i8] c"D9\0C\02", [4 x i8] c"D9\0C\02", [4 x i8] c">Q\02\0C", [4 x i8] c">Q\02\0C", [4 x i8] c"b\93\01\0D", [4 x i8] c"b\93\01\0D", [4 x i8] c"d\94\00\0E", [4 x i8] c"\95_\0F\00", [4 x i8] c"\96k\0E\01", [4 x i8] c"\96k\0E\01", [4 x i8] c"l\97\01\0E", [4 x i8] c"l\97\01\0E", [4 x i8] c"d\98\00\0F", [4 x i8] c"\99_\10\00", [4 x i8] c"\9Ak\0F\01", [4 x i8] c"l\9B\01\0F", [4 x i8] c"d\9C\00\10", [4 x i8] c"\9D_\11\00", [4 x i8] c"\9Ek\10\01", [4 x i8] c"l\9F\01\10", [4 x i8] c"d\A0\00\11", [4 x i8] c"\A1i\12\00", [4 x i8] c"\A2k\11\01", [4 x i8] c"l\A3\01\11", [4 x i8] c"n\A4\00\12", [4 x i8] c"\A5i\13\00", [4 x i8] c"\A6u\12\01", [4 x i8] c"v\A7\01\12", [4 x i8] c"n\A8\00\13", [4 x i8] c"\A9i\14\00", [4 x i8] c"\AAu\13\01", [4 x i8] c"v\AB\01\13", [4 x i8] c"n\AC\00\14", [4 x i8] c"\ADi\15\00", [4 x i8] c"\AEu\14\01", [4 x i8] c"v\AF\01\14", [4 x i8] c"n\B0\00\15", [4 x i8] c"\B1i\16\00", [4 x i8] c"\B2u\15\01", [4 x i8] c"v\B3\01\15", [4 x i8] c"n\B4\00\16", [4 x i8] c"\B5s\17\00", [4 x i8] c"\B6u\16\01", [4 x i8] c"v\B7\01\16", [4 x i8] c"x\B8\00\17", [4 x i8] c"\B9s\18\00", [4 x i8] c"\BA\7F\17\01", [4 x i8] c"\80\BB\01\17", [4 x i8] c"x\BC\00\18", [4 x i8] c"\BDs\19\00", [4 x i8] c"\BE\7F\18\01", [4 x i8] c"\80\BF\01\18", [4 x i8] c"x\C0\00\19", [4 x i8] c"\C1s\1A\00", [4 x i8] c"\C2\7F\19\01", [4 x i8] c"\80\C3\01\19", [4 x i8] c"x\C4\00\1A", [4 x i8] c"\C5s\1B\00", [4 x i8] c"\C6\7F\1A\01", [4 x i8] c"\80\C7\01\1A", [4 x i8] c"x\C8\00\1B", [4 x i8] c"\C9s\1C\00", [4 x i8] c"\CA\7F\1B\01", [4 x i8] c"\80\CB\01\1B", [4 x i8] c"x\CC\00\1C", [4 x i8] c"\CDs\1D\00", [4 x i8] c"\CE\7F\1C\01", [4 x i8] c"\80\CF\01\1C", [4 x i8] c"x\D0\00\1D", [4 x i8] c"\D1}\1E\00", [4 x i8] c"\D2\7F\1D\01", [4 x i8] c"\80\D3\01\1D", [4 x i8] c"\82\D4\00\1E", [4 x i8] c"\D5}\1F\00", [4 x i8] c"\D6\89\1E\01", [4 x i8] c"\8A\D7\01\1E", [4 x i8] c"\82\D8\00\1F", [4 x i8] c"\D9} \00", [4 x i8] c"\DA\89\1F\01", [4 x i8] c"\8A\DB\01\1F", [4 x i8] c"\82\DC\00 ", [4 x i8] c"\DD}!\00", [4 x i8] c"\DE\89 \01", [4 x i8] c"\8A\DF\01 ", [4 x i8] c"\82\E0\00!", [4 x i8] c"\E1}\22\00", [4 x i8] c"\E2\89!\01", [4 x i8] c"\8A\E3\01!", [4 x i8] c"\82\E4\00\22", [4 x i8] c"\E5}#\00", [4 x i8] c"\E6\89\22\01", [4 x i8] c"\8A\E7\01\22", [4 x i8] c"\82\E8\00#", [4 x i8] c"\E9}$\00", [4 x i8] c"\EA\89#\01", [4 x i8] c"\8A\EB\01#", [4 x i8] c"\82\EC\00$", [4 x i8] c"\ED}%\00", [4 x i8] c"\EE\89$\01", [4 x i8] c"\8A\EF\01$", [4 x i8] c"\82\F0\00%", [4 x i8] c"\F1}&\00", [4 x i8] c"\F2\89%\01", [4 x i8] c"\8A\F3\01%", [4 x i8] c"\82\F4\00&", [4 x i8] c"\F5\87'\00", [4 x i8] c"\F6\89&\01", [4 x i8] c"\8A\F7\01&", [4 x i8] c"\8C\F8\00'", [4 x i8] c"\F9\87(\00", [4 x i8] c"\FAE'\01", [4 x i8] c"P\FB\01'", [4 x i8] c"\8C\FC\00(", [4 x i8] c"\F9\87)\00", [4 x i8] c"\FAE(\01", [4 x i8] c"P\FB\01(", [4 x i8] c"\8C\FC\00)", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], align 16
@_ZZ10matchModelR5MixerE1t = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ10matchModelR5MixerE1t = internal global i64 0, align 8
@_ZZ10matchModelR5MixerE1h = internal unnamed_addr global i32 0, align 4
@_ZZ10matchModelR5MixerE3ptr = internal unnamed_addr global i32 0, align 4
@_ZZ10matchModelR5MixerE3len = internal unnamed_addr global i32 0, align 4
@_ZZ10matchModelR5MixerE6result = internal unnamed_addr global i32 0, align 4
@_ZZ10matchModelR5MixerE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ10matchModelR5MixerE4scm1 = internal global i64 0, align 8
@_ZZ8picModelR5MixerE2r0 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE2r1 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE2r2 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE2r3 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE1t = internal global %class.Array.0 zeroinitializer, align 8
@_ZGVZ8picModelR5MixerE1t = internal global i64 0, align 8
@_ZZ8picModelR5MixerE3cxt.0 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE3cxt.1 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE3cxt.2 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE2sm = internal global [3 x %class.StateMap] zeroinitializer, align 16
@_ZGVZ8picModelR5MixerE2sm = internal global i64 0, align 8
@_ZZ9wordModelR5MixerE5word0 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word1 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word2 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word3 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word4 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word5 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5text0 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ9wordModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ9wordModelR5MixerE3nl1 = internal unnamed_addr global i32 -3, align 4
@_ZZ9wordModelR5MixerE2nl = internal unnamed_addr global i32 -2, align 4
@_ZZ11recordModelR5MixerE5cpos1 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5cpos2 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5cpos3 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5cpos4 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5wpos1 = internal unnamed_addr global [65536 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE4rlen = internal unnamed_addr global i32 2, align 4
@_ZZ11recordModelR5MixerE5rlen1 = internal unnamed_addr global i32 3, align 4
@_ZZ11recordModelR5MixerE5rlen2 = internal unnamed_addr global i32 4, align 4
@_ZZ11recordModelR5MixerE7rcount1 = internal unnamed_addr global i32 0, align 4
@_ZZ11recordModelR5MixerE7rcount2 = internal unnamed_addr global i32 0, align 4
@_ZZ11recordModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ11recordModelR5MixerE2cn = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2cn = internal global i64 0, align 8
@_ZZ11recordModelR5MixerE2co = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2co = internal global i64 0, align 8
@_ZZ11recordModelR5MixerE2cp = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2cp = internal global i64 0, align 8
@_ZZ11sparseModelR5MixeriiE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11sparseModelR5MixeriiE2cm = internal global i64 0, align 8
@_ZZ11sparseModelR5MixeriiE4mask = internal unnamed_addr global i32 0, align 4
@_ZZ13distanceModelR5MixerE2cr = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ13distanceModelR5MixerE2cr = internal global i64 0, align 8
@_ZZ13distanceModelR5MixerE5pos00 = internal unnamed_addr global i32 0, align 4
@_ZZ13distanceModelR5MixerE5pos20 = internal unnamed_addr global i32 0, align 4
@_ZZ13distanceModelR5MixerE5posnl = internal unnamed_addr global i32 0, align 4
@_ZZ8bmpModelR5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ8bmpModelR5MixerE3eoi = internal unnamed_addr global i32 0, align 4
@_ZZ8bmpModelR5MixerE4tiff = internal unnamed_addr global i32 0, align 4
@_ZZ8bmpModelR5MixerE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm1 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm2 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm2 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm3 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm3 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm4 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm4 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm5 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm5 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm6 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm6 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm7 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm7 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm8 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm8 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm9 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm9 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE5scm10 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE5scm10 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE2cm = internal global i64 0, align 8
@.str = private unnamed_addr constant [11 x i8] c"BMP %dx%d \00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"TIFF %dx%dx%d \00", align 1
@_ZZ9model8bitR5MixeriE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm1 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm2 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm2 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm3 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm3 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm4 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm4 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm5 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm5 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm6 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm6 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm7 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm7 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE2cm = internal global i64 0, align 8
@_ZZ8pgmModelR5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ8pgmModelR5MixerE3eoi = internal unnamed_addr global i32 0, align 4
@_ZZ8pgmModelR5MixerE3pgm = internal unnamed_addr global i32 0, align 4
@_ZZ8pgmModelR5MixerE7pgm_hdr = internal unnamed_addr global [3 x i32] zeroinitializer, align 4
@_ZZ8pgmModelR5MixerE7pgm_ptr = internal unnamed_addr global i32 0, align 4
@.str.6 = private unnamed_addr constant [10 x i8] c"PGM %dx%d\00", align 1
@_ZZ8pgmModelR5MixerE3col = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE1h = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE3eoi = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE3col = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE4ibmp = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE2w1 = internal unnamed_addr global i32 0, align 4
@.str.7 = private unnamed_addr constant [17 x i8] c"BMP(8-bit) %dx%d\00", align 1
@_ZZ9rgbModel8R5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ9rgbModel8R5MixerE3eoi = internal unnamed_addr global i32 0, align 4
@_ZZ9rgbModel8R5MixerE3col = internal unnamed_addr global i32 0, align 4
@.str.8 = private unnamed_addr constant [17 x i8] c"RGB(8-bit) %dx%d\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"%s:\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c" %02X\00", align 1
@_ZZ9jpegModelR5MixerE4jpeg = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE9next_jpeg = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3app = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3sof = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3sos = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4data = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE2ht = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2ht = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE6htsize = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE8huffcode = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE8huffbits = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE8huffsize = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE2rs = internal unnamed_addr global i32 -1, align 4
@_ZZ9jpegModelR5MixerE6mcupos = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3huf = internal global %class.Array.7 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE3huf = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE7mcusize = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE6hufsel = internal unnamed_addr global [2 x [10 x i32]] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE4hbuf = internal global %class.Array.0 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4hbuf = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE5color = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE5color = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4pred = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4pred = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE5width = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3row = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE6column = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4cbuf = internal global %class.Buf zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4cbuf = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4cpos = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3rs1 = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4ssum = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE5ssum1 = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE5ssum2 = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE5ssum3 = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE5cbuf2 = internal global %class.IntBuf zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE5cbuf2 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE8adv_pred = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE8adv_pred = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4sumu = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4sumu = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4sumv = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4sumv = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2ls = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2ls = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE3lcp = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE3lcp = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4zpos = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4zpos = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE9dqt_state = internal unnamed_addr global i32 -1, align 4
@_ZZ9jpegModelR5MixerE7dqt_end = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4qnum = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4qtab = internal global %class.Array.0 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4qtab = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4qmap = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4qmap = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE3zzu = internal unnamed_addr constant [64 x i8] c"\00\01\00\00\01\02\03\02\01\00\00\01\02\03\04\05\04\03\02\01\00\00\01\02\03\04\05\06\07\06\05\04\03\02\01\00\01\02\03\04\05\06\07\07\06\05\04\03\02\03\04\05\06\07\07\06\05\04\05\06\07\07\06\07", align 16
@_ZZ9jpegModelR5MixerE3zzv = internal unnamed_addr constant [64 x i8] c"\00\00\01\02\01\00\00\01\02\03\04\03\02\01\00\00\01\02\03\04\05\06\05\04\03\02\01\00\00\01\02\03\04\05\06\07\07\06\05\04\03\02\01\02\03\04\05\06\07\07\06\05\04\03\04\05\06\07\07\06\05\06\07\07", align 16
@.str.12 = private unnamed_addr constant [12 x i8] c"JPEG %dx%d \00", align 1
@_ZZ9jpegModelR5MixerE2we = internal unnamed_addr constant [8 x i32] [i32 181, i32 282, i32 353, i32 456, i32 568, i32 671, i32 742, i32 767], align 16
@_ZZ9jpegModelR5MixerE5sumu2 = internal unnamed_addr global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE5sumv2 = internal unnamed_addr global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE5sumu3 = internal unnamed_addr global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE5sumv3 = internal unnamed_addr global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE2kx = internal global [32 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE1t = internal global %class.BH zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE1t = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE3cxt = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE3cxt = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2cp = internal global %class.Array.6 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2cp = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2sm = internal global [28 x %class.StateMap] zeroinitializer, align 16
@_ZGVZ9jpegModelR5MixerE2sm = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2m1 = internal global %class.Mixer zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2m1 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2a1 = internal global %class.APM zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2a1 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2a2 = internal global %class.APM zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2a2 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE7hbcount = internal unnamed_addr global i32 2, align 4
@_ZZ8wavModelR5MixerE8channels = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE4bits = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE5bytes = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE3eof = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE1s = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE1K = internal unnamed_addr global i32 0, align 4
@_ZGVZ8wavModelR5MixerE1K = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE2pr = internal unnamed_addr global [4 x [2 x i32]] zeroinitializer, align 16
@_ZZ8wavModelR5MixerE1n = internal unnamed_addr global [2 x i32] zeroinitializer, align 4
@_ZZ8wavModelR5MixerE7counter = internal unnamed_addr global [2 x i32] zeroinitializer, align 4
@_ZZ8wavModelR5MixerE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm1 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm2 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm2 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm3 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm3 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm4 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm4 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm5 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm5 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm6 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm6 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm7 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm7 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm8 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm8 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE2cm = internal global i64 0, align 8
@_ZL1S = internal unnamed_addr global i32 0, align 4
@_ZL1D = internal unnamed_addr global i1 false, align 4
@_ZL5wmode = internal unnamed_addr global i32 0, align 4
@.str.14 = private unnamed_addr constant [12 x i8] c"WAV %ibits/\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"mono \00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"stereo \00", align 1
@_ZZ8exeModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ8exeModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ13indirectModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ13indirectModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ13indirectModelR5MixerE2t1 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ13indirectModelR5MixerE2t2 = internal unnamed_addr global [65536 x i16] zeroinitializer, align 16
@_ZZ8dmcModelR5MixerE3top = internal unnamed_addr global i32 0, align 4
@_ZZ8dmcModelR5MixerE4curr = internal unnamed_addr global i32 0, align 4
@_ZZ8dmcModelR5MixerE1t = internal global %class.Array.9 zeroinitializer, align 8
@_ZGVZ8dmcModelR5MixerE1t = internal global i64 0, align 8
@_ZZ8dmcModelR5MixerE2sm = internal global %class.StateMap zeroinitializer, align 8
@_ZGVZ8dmcModelR5MixerE2sm = internal global i64 0, align 8
@_ZZ8dmcModelR5MixerE9threshold = internal unnamed_addr global i32 256, align 4
@_ZZ13contextModel2vE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE2cm = internal global i64 0, align 8
@_ZZ13contextModel2vE4rcm7 = internal global %class.RunContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE4rcm7 = internal global i64 0, align 8
@_ZZ13contextModel2vE4rcm9 = internal global %class.RunContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE4rcm9 = internal global i64 0, align 8
@_ZZ13contextModel2vE5rcm10 = internal global %class.RunContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE5rcm10 = internal global i64 0, align 8
@_ZZ13contextModel2vE1m = internal global %class.Mixer zeroinitializer, align 8
@_ZGVZ13contextModel2vE1m = internal global i64 0, align 8
@_ZZ13contextModel2vE3cxt.1 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.2 = internal unnamed_addr global i32 0, align 8
@_ZZ13contextModel2vE3cxt.3 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.4 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.5 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.6 = internal unnamed_addr global i32 0, align 8
@_ZZ13contextModel2vE3cxt.7 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.8 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.9 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.10 = internal unnamed_addr global i32 0, align 8
@_ZZ13contextModel2vE3cxt.11 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.12 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.13 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.14 = internal unnamed_addr global i32 0, align 8
@_ZZ13contextModel2vE8filetype = internal unnamed_addr global i32 0, align 4
@_ZZ13contextModel2vE4size = internal unnamed_addr global i32 0, align 4
@_ZZ13contextModel2vE3col = internal unnamed_addr global i32 0, align 4
@_ZZ13contextModel2vE3col_0 = internal unnamed_addr global i32 0, align 4
@_ZZN9Predictor6updateEvE1a = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE1a = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a1 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a1 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a2 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a2 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a3 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a3 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a4 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a4 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a5 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a5 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a6 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a6 = internal global i64 0, align 8
@_ZL2dt = internal unnamed_addr global [1024 x i32] zeroinitializer, align 16
@.str.17 = private unnamed_addr constant [9 x i8] c"%c%c%c%c\00", align 1
@.str.18 = private unnamed_addr constant [22 x i8] c"encode_exe read error\00", align 1
@_ZZ10decode_exeR7EncoderE6offset = internal unnamed_addr global i32 0, align 4
@_ZZ10decode_exeR7EncoderE1q = internal unnamed_addr global i32 0, align 4
@_ZZ10decode_exeR7EncoderE4size = internal unnamed_addr global i32 0, align 4
@_ZZ10decode_exeR7EncoderE5begin = internal unnamed_addr global i32 0, align 4
@_ZZ10decode_exeR7EncoderE1c = internal unnamed_addr global [5 x i8] zeroinitializer, align 4
@.str.19 = private unnamed_addr constant [11 x i8] c"%c%c%c%c%c\00", align 1
@_ZZ6decodeR7EncoderE4type = internal unnamed_addr global i32 0, align 4
@_ZZ6decodeR7EncoderE3len = internal unnamed_addr global i32 0, align 4
@.str.20 = private unnamed_addr constant [17 x i8] c"%12d\08\08\08\08\08\08\08\08\08\08\08\08\00", align 1
@stdout = external local_unnamed_addr global ptr, align 8
@.str.21 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"%s %ld -> \00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"tmpfile\00", align 1
@.str.24 = private unnamed_addr constant [58 x i8] c"Transform fails at %ld, input=%d decoded=%d, skipping...\0A\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"%-12ld\0A\00", align 1
@.str.26 = private unnamed_addr constant [21 x i8] c"Comparing %s %ld -> \00", align 1
@.str.27 = private unnamed_addr constant [34 x i8] c"differ at %d: file=%d archive=%d\0A\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.32 = private unnamed_addr constant [22 x i8] c"Extracting %s %ld -> \00", align 1
@.str.34 = private unnamed_addr constant [20 x i8] c"Skipping %s %ld -> \00", align 1
@_ZZ7getlineP8_IO_FILEE1s = internal global %class.String zeroinitializer, align 8
@_ZGVZ7getlineP8_IO_FILEE1s = internal global i64 0, align 8
@.str.36 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZZ7putsizeR6StringS0_PKciE3blk = internal global [24 x i8] zeroinitializer, align 16
@.str.37 = private unnamed_addr constant [5 x i8] c"%ld\09\00", align 1
@.str.39 = private unnamed_addr constant [39 x i8] c"Valid options are -0 through -9 or -d\0A\00", align 1
@.str.40 = private unnamed_addr constant [645 x i8] c"paq8p archiver (C) 2008, Matt Mahoney et al.\0AFree under GPL, http://www.gnu.org/licenses/gpl.txt\0A\0ATo compress:\0A  paq8p -level file               (compresses to file.paq8p)\0A  paq8p -level archive files...   (creates archive.paq8p)\0A  paq8p file                      (level -%d, pause when done)\0Alevel: -0 = store, -1 -2 -3 = faster (uses 35, 48, 59 MB)\0A-4 -5 -6 -7 -8 = smaller (uses 133, 233, 435, 837, 1643 MB)\0A\0ATo extract or compare:\0A  paq8p -d dir1/archive.paq8p      (extract to dir1)\0A  paq8p -d dir1/archive.paq8p dir2 (extract to dir2)\0A  paq8p archive.paq8p              (extract, pause when done)\0A\0ATo view contents: more < archive.paq8p\0A\0A\00", align 1
@.str.42 = private unnamed_addr constant [28 x i8] c"%s: not found, skipping...\0A\00", align 1
@.str.43 = private unnamed_addr constant [21 x i8] c"Nothing to compress\0A\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"wb+\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"paq8p -%d\0D\0A%s\1A\00", align 1
@.str.46 = private unnamed_addr constant [37 x i8] c"Creating archive with %d file(s)...\0A\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"rb+\00", align 1
@.str.48 = private unnamed_addr constant [8 x i8] c"paq8p -\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"%s: not a %s file\0A\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"paq8p\00", align 1
@.str.51 = private unnamed_addr constant [40 x i8] c"Extracting %d file(s) from archive -%d\0A\00", align 1
@.str.52 = private unnamed_addr constant [29 x i8] c"%s: header corrupted at %ld\0A\00", align 1
@.str.53 = private unnamed_addr constant [12 x i8] c"%ld -> %ld\0A\00", align 1
@.str.57 = private unnamed_addr constant [14 x i8] c"fork() failed\00", align 1
@.str.58 = private unnamed_addr constant [3 x i8] c"-d\00", align 1
@.str.59 = private unnamed_addr constant [14 x i8] c"Out of memory\00", align 1
@_ZZN2BHILi4EEixEjE3tmp = linkonce_odr dso_local local_unnamed_addr global [4 x i8] zeroinitializer, comdat, align 1
@stdin = external local_unnamed_addr global ptr, align 8
@_ZZN2BHILi9EEixEjE3tmp = linkonce_odr dso_local local_unnamed_addr global [9 x i8] zeroinitializer, comdat, align 1
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_paq8p.cpp, ptr null }]
@str = private unnamed_addr constant [14 x i8] c"not extracted\00", align 1
@str.60 = private unnamed_addr constant [13 x i8] c"done        \00", align 1
@str.61 = private unnamed_addr constant [13 x i8] c"identical   \00", align 1
@str.62 = private unnamed_addr constant [15 x i8] c"file is longer\00", align 1
@str.63 = private unnamed_addr constant [49 x i8] c"\0AClose this window or press ENTER to continue...\00", align 1

@_ZN4IlogC1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN4IlogC2Ev
@_ZN7StretchC1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN7StretchC2Ev
@_ZN5MixerD1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN5MixerD2Ev
@_ZN5MixerC1Eiiii = dso_local unnamed_addr alias void (ptr, i32, i32, i32, i32), ptr @_ZN5MixerC2Eiiii
@_ZN4APM1C1Ei = dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN4APM1C2Ei
@_ZN8StateMapC1Ei = dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN8StateMapC2Ei
@_ZN3APMC1Ei = dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN3APMC2Ei
@_ZN10ContextMapC1Eii = dso_local unnamed_addr alias void (ptr, i32, i32), ptr @_ZN10ContextMapC2Eii
@_ZN10ContextMapD1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN10ContextMapD2Ev
@_ZN9PredictorC1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN9PredictorC2Ev
@_ZN7EncoderC1E4ModeP8_IO_FILE = dso_local unnamed_addr alias void (ptr, i32, ptr), ptr @_ZN7EncoderC2E4ModeP8_IO_FILE

; Function Attrs: mustprogress noreturn uwtable
define dso_local void @_Z4quitPKc(ptr noundef %0) local_unnamed_addr #0 {
  %2 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr %0, ptr %2, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %2, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable
}

declare ptr @__cxa_allocate_exception(i64) local_unnamed_addr

declare void @__cxa_throw(ptr, ptr, ptr) local_unnamed_addr

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local noundef i32 @_Z6equalsPKcS0_(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #1 {
  br label %3

3:                                                ; preds = %11, %2
  %4 = phi ptr [ %0, %2 ], [ %23, %11 ]
  %5 = phi ptr [ %1, %2 ], [ %24, %11 ]
  %6 = load i8, ptr %4, align 1, !tbaa !9
  %7 = icmp eq i8 %6, 0
  %8 = load i8, ptr %5, align 1, !tbaa !9
  br i1 %7, label %25, label %9

9:                                                ; preds = %3
  %10 = icmp eq i8 %8, 0
  br i1 %10, label %25, label %11

11:                                               ; preds = %9
  %12 = sext i8 %6 to i32
  %13 = add i8 %6, -65
  %14 = icmp ult i8 %13, 26
  %15 = add nuw nsw i32 %12, 32
  %16 = select i1 %14, i32 %15, i32 %12
  %17 = sext i8 %8 to i32
  %18 = add i8 %8, -65
  %19 = icmp ult i8 %18, 26
  %20 = add nuw nsw i32 %17, 32
  %21 = select i1 %19, i32 %20, i32 %17
  %22 = icmp eq i32 %16, %21
  %23 = getelementptr inbounds i8, ptr %4, i64 1
  %24 = getelementptr inbounds i8, ptr %5, i64 1
  br i1 %22, label %3, label %29

25:                                               ; preds = %9, %3
  %26 = phi i8 [ %8, %3 ], [ 0, %9 ]
  %27 = icmp eq i8 %6, %26
  %28 = zext i1 %27 to i32
  br label %29

29:                                               ; preds = %11, %25
  %30 = phi i32 [ %28, %25 ], [ 0, %11 ]
  ret i32 %30
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN6RandomD2Ev(ptr noundef nonnull align 8 dereferenceable(28) %0) unnamed_addr #3 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !10
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = shl i32 %2, 2
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(ptr, ptr, ptr) local_unnamed_addr #4

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN3BufC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !18
  store i32 %1, ptr %0, align 8, !tbaa !20
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %22

7:                                                ; preds = %2
  %8 = zext i32 %1 to i64
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = add nsw i32 %9, %1
  store i32 %10, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %14

14:                                               ; preds = %13, %7
  %15 = tail call noalias ptr @calloc(i64 noundef %8, i64 noundef 1) #41
  %16 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 2
  store ptr %15, ptr %16, align 8, !tbaa !21
  %17 = icmp eq ptr %15, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %19, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %19, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 3
  store ptr %15, ptr %21, align 8, !tbaa !22
  br label %22

22:                                               ; preds = %5, %20
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN3BufD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !20
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = sub i32 %3, %2
  store i32 %4, ptr @programChecker, align 8, !tbaa !13
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %6 = icmp sgt i32 %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 %4, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %8

8:                                                ; preds = %1, %7
  %9 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !21
  tail call void @free(ptr noundef %10) #39
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN4IlogD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !20
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = sub i32 %3, %2
  store i32 %4, ptr @programChecker, align 8, !tbaa !13
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %6 = icmp sgt i32 %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 %4, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %8

8:                                                ; preds = %1, %7
  %9 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !21
  tail call void @free(ptr noundef %10) #39
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN4IlogC2Ev(ptr nocapture noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 1
  store i32 65536, ptr %2, align 4, !tbaa !18
  store i32 65536, ptr %0, align 8, !tbaa !20
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = add nsw i32 %3, 65536
  store i32 %4, ptr @programChecker, align 8, !tbaa !13
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %6 = icmp sgt i32 %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 %4, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %8

8:                                                ; preds = %7, %1
  %9 = tail call noalias dereferenceable_or_null(65536) ptr @calloc(i64 noundef 65536, i64 noundef 1) #41
  %10 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 2
  store ptr %9, ptr %10, align 8, !tbaa !21
  %11 = icmp eq ptr %9, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %13, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %13, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 3
  store ptr %9, ptr %15, align 8, !tbaa !22
  br label %17

16:                                               ; preds = %17
  ret void

17:                                               ; preds = %17, %14
  %18 = phi i64 [ 2, %14 ], [ %39, %17 ]
  %19 = phi i32 [ 14155776, %14 ], [ %34, %17 ]
  %20 = trunc i64 %18 to i32
  %21 = shl i32 %20, 1
  %22 = add nsw i32 %21, -1
  %23 = udiv i32 774541002, %22
  %24 = add i32 %23, %19
  %25 = lshr i32 %24, 24
  %26 = trunc i32 %25 to i8
  %27 = load ptr, ptr %15, align 8, !tbaa !22
  %28 = getelementptr inbounds i8, ptr %27, i64 %18
  store i8 %26, ptr %28, align 1, !tbaa !9
  %29 = or i64 %18, 1
  %30 = trunc i64 %29 to i32
  %31 = shl i32 %30, 1
  %32 = add nsw i32 %31, -1
  %33 = udiv i32 774541002, %32
  %34 = add i32 %33, %24
  %35 = lshr i32 %34, 24
  %36 = trunc i32 %35 to i8
  %37 = load ptr, ptr %15, align 8, !tbaa !22
  %38 = getelementptr inbounds i8, ptr %37, i64 %29
  store i8 %36, ptr %38, align 1, !tbaa !9
  %39 = add nuw nsw i64 %18, 2
  %40 = icmp eq i64 %39, 65536
  br i1 %40, label %16, label %17, !llvm.loop !23
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5ArrayIhLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !18
  store i32 %1, ptr %0, align 8, !tbaa !20
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %22

7:                                                ; preds = %2
  %8 = zext i32 %1 to i64
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = add nsw i32 %9, %1
  store i32 %10, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %14

14:                                               ; preds = %13, %7
  %15 = tail call noalias ptr @calloc(i64 noundef %8, i64 noundef 1) #41
  %16 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 2
  store ptr %15, ptr %16, align 8, !tbaa !21
  %17 = icmp eq ptr %15, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %19, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %19, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 3
  store ptr %15, ptr %21, align 8, !tbaa !22
  br label %22

22:                                               ; preds = %5, %20
  ret void
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !20
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = sub i32 %3, %2
  store i32 %4, ptr @programChecker, align 8, !tbaa !13
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %6 = icmp sgt i32 %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 %4, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %8

8:                                                ; preds = %1, %7
  %9 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !21
  tail call void @free(ptr noundef %10) #39
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef i32 @_Z6squashi(i32 noundef %0) local_unnamed_addr #7 {
  %2 = icmp sgt i32 %0, 2047
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = icmp slt i32 %0, -2047
  br i1 %4, label %22, label %5

5:                                                ; preds = %3
  %6 = and i32 %0, 127
  %7 = ashr i32 %0, 7
  %8 = add nsw i32 %7, 16
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %9
  %11 = load i32, ptr %10, align 4, !tbaa !25
  %12 = sub nuw nsw i32 128, %6
  %13 = mul nsw i32 %11, %12
  %14 = add nsw i32 %7, 17
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %15
  %17 = load i32, ptr %16, align 4, !tbaa !25
  %18 = mul nsw i32 %17, %6
  %19 = add i32 %13, 64
  %20 = add i32 %19, %18
  %21 = ashr i32 %20, 7
  br label %22

22:                                               ; preds = %3, %1, %5
  %23 = phi i32 [ %21, %5 ], [ 4095, %1 ], [ 0, %3 ]
  ret i32 %23
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN7StretchD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !26
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = shl i32 %2, 1
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array.1, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !28
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN7StretchC2Ev(ptr nocapture noundef nonnull writeonly align 8 dereferenceable(24) %0) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %class.Array.1, ptr %0, i64 0, i32 1
  store i32 4096, ptr %2, align 4, !tbaa !29
  store i32 4096, ptr %0, align 8, !tbaa !26
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = add nsw i32 %3, 8192
  store i32 %4, ptr @programChecker, align 8, !tbaa !13
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %6 = icmp sgt i32 %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 %4, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %8

8:                                                ; preds = %7, %1
  %9 = tail call noalias dereferenceable_or_null(8192) ptr @calloc(i64 noundef 8192, i64 noundef 1) #41
  %10 = getelementptr inbounds %class.Array.1, ptr %0, i64 0, i32 2
  store ptr %9, ptr %10, align 8, !tbaa !28
  %11 = icmp eq ptr %9, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %13, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %13, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.Array.1, ptr %0, i64 0, i32 3
  store ptr %9, ptr %15, align 8, !tbaa !30
  br label %18

16:                                               ; preds = %67
  %17 = getelementptr inbounds i16, ptr %9, i64 4095
  store i16 2047, ptr %17, align 2, !tbaa !31
  ret void

18:                                               ; preds = %14, %67
  %19 = phi i32 [ 0, %14 ], [ %68, %67 ]
  %20 = phi i32 [ -2047, %14 ], [ %69, %67 ]
  %21 = and i32 %20, 127
  %22 = ashr i32 %20, 7
  %23 = add nsw i32 %22, 16
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !25
  %27 = sub nuw nsw i32 128, %21
  %28 = mul nsw i32 %26, %27
  %29 = add nsw i32 %22, 17
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %30
  %32 = load i32, ptr %31, align 4, !tbaa !25
  %33 = mul nsw i32 %32, %21
  %34 = add i32 %28, 64
  %35 = add i32 %34, %33
  %36 = ashr i32 %35, 7
  %37 = icmp sgt i32 %19, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %18
  %39 = add nsw i32 %36, 1
  br label %67

40:                                               ; preds = %18
  %41 = trunc i32 %20 to i16
  %42 = sext i32 %19 to i64
  %43 = add nsw i32 %36, 1
  %44 = sext i32 %43 to i64
  %45 = add nsw i32 %36, 1
  %46 = sub nsw i32 %45, %19
  %47 = sext i32 %46 to i64
  %48 = icmp ult i32 %46, 16
  br i1 %48, label %65, label %49

49:                                               ; preds = %40
  %50 = and i64 %47, -16
  %51 = add nsw i64 %50, %42
  %52 = insertelement <8 x i16> poison, i16 %41, i64 0
  %53 = shufflevector <8 x i16> %52, <8 x i16> poison, <8 x i32> zeroinitializer
  %54 = insertelement <8 x i16> poison, i16 %41, i64 0
  %55 = shufflevector <8 x i16> %54, <8 x i16> poison, <8 x i32> zeroinitializer
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i64 [ 0, %49 ], [ %61, %56 ]
  %58 = add i64 %57, %42
  %59 = getelementptr inbounds i16, ptr %9, i64 %58
  store <8 x i16> %53, ptr %59, align 2, !tbaa !31
  %60 = getelementptr inbounds i16, ptr %59, i64 8
  store <8 x i16> %55, ptr %60, align 2, !tbaa !31
  %61 = add nuw i64 %57, 16
  %62 = icmp eq i64 %61, %50
  br i1 %62, label %63, label %56, !llvm.loop !33

63:                                               ; preds = %56
  %64 = icmp eq i64 %50, %47
  br i1 %64, label %67, label %65

65:                                               ; preds = %40, %63
  %66 = phi i64 [ %42, %40 ], [ %51, %63 ]
  br label %71

67:                                               ; preds = %71, %63, %38
  %68 = phi i32 [ %39, %38 ], [ %43, %63 ], [ %43, %71 ]
  %69 = add nsw i32 %20, 1
  %70 = icmp eq i32 %69, 2048
  br i1 %70, label %16, label %18, !llvm.loop !36

71:                                               ; preds = %65, %71
  %72 = phi i64 [ %74, %71 ], [ %66, %65 ]
  %73 = getelementptr inbounds i16, ptr %9, i64 %72
  store i16 %41, ptr %73, align 2, !tbaa !31
  %74 = add nsw i64 %72, 1
  %75 = icmp eq i64 %74, %44
  br i1 %75, label %67, label %71, !llvm.loop !37
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local noundef i32 @_Z11dot_productPsS_i(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 {
  %4 = add nsw i32 %2, 7
  %5 = and i32 %4, -8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %66

7:                                                ; preds = %3
  %8 = zext i32 %5 to i64
  %9 = tail call i64 @llvm.umax.i64(i64 %8, i64 2)
  %10 = add nsw i64 %9, -1
  %11 = lshr i64 %10, 1
  %12 = add nuw nsw i64 %11, 1
  %13 = icmp ult i64 %10, 14
  br i1 %13, label %63, label %14

14:                                               ; preds = %7
  %15 = and i64 %12, -8
  %16 = shl nuw i64 %15, 1
  br label %17

17:                                               ; preds = %17, %14
  %18 = phi i64 [ 0, %14 ], [ %57, %17 ]
  %19 = phi <4 x i32> [ zeroinitializer, %14 ], [ %55, %17 ]
  %20 = phi <4 x i32> [ zeroinitializer, %14 ], [ %56, %17 ]
  %21 = shl i64 %18, 1
  %22 = or i64 %21, 8
  %23 = getelementptr inbounds i16, ptr %0, i64 %21
  %24 = getelementptr inbounds i16, ptr %0, i64 %22
  %25 = load <8 x i16>, ptr %23, align 2, !tbaa !31
  %26 = load <8 x i16>, ptr %24, align 2, !tbaa !31
  %27 = shufflevector <8 x i16> %25, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %28 = shufflevector <8 x i16> %26, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %29 = shufflevector <8 x i16> %25, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %30 = shufflevector <8 x i16> %26, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %31 = sext <4 x i16> %27 to <4 x i32>
  %32 = sext <4 x i16> %28 to <4 x i32>
  %33 = getelementptr inbounds i16, ptr %1, i64 %21
  %34 = getelementptr inbounds i16, ptr %1, i64 %22
  %35 = load <8 x i16>, ptr %33, align 2, !tbaa !31
  %36 = load <8 x i16>, ptr %34, align 2, !tbaa !31
  %37 = shufflevector <8 x i16> %35, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %38 = shufflevector <8 x i16> %36, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %39 = shufflevector <8 x i16> %35, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %40 = shufflevector <8 x i16> %36, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %41 = sext <4 x i16> %37 to <4 x i32>
  %42 = sext <4 x i16> %38 to <4 x i32>
  %43 = mul nsw <4 x i32> %41, %31
  %44 = mul nsw <4 x i32> %42, %32
  %45 = sext <4 x i16> %29 to <4 x i32>
  %46 = sext <4 x i16> %30 to <4 x i32>
  %47 = sext <4 x i16> %39 to <4 x i32>
  %48 = sext <4 x i16> %40 to <4 x i32>
  %49 = mul nsw <4 x i32> %47, %45
  %50 = mul nsw <4 x i32> %48, %46
  %51 = add nsw <4 x i32> %49, %43
  %52 = add nsw <4 x i32> %50, %44
  %53 = ashr <4 x i32> %51, <i32 8, i32 8, i32 8, i32 8>
  %54 = ashr <4 x i32> %52, <i32 8, i32 8, i32 8, i32 8>
  %55 = add <4 x i32> %53, %19
  %56 = add <4 x i32> %54, %20
  %57 = add nuw i64 %18, 8
  %58 = icmp eq i64 %57, %15
  br i1 %58, label %59, label %17, !llvm.loop !38

59:                                               ; preds = %17
  %60 = add <4 x i32> %56, %55
  %61 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %60)
  %62 = icmp eq i64 %12, %15
  br i1 %62, label %66, label %63

63:                                               ; preds = %7, %59
  %64 = phi i64 [ 0, %7 ], [ %16, %59 ]
  %65 = phi i32 [ 0, %7 ], [ %61, %59 ]
  br label %68

66:                                               ; preds = %68, %59, %3
  %67 = phi i32 [ 0, %3 ], [ %61, %59 ], [ %88, %68 ]
  ret i32 %67

68:                                               ; preds = %63, %68
  %69 = phi i64 [ %89, %68 ], [ %64, %63 ]
  %70 = phi i32 [ %88, %68 ], [ %65, %63 ]
  %71 = getelementptr inbounds i16, ptr %0, i64 %69
  %72 = load i16, ptr %71, align 2, !tbaa !31
  %73 = sext i16 %72 to i32
  %74 = getelementptr inbounds i16, ptr %1, i64 %69
  %75 = load i16, ptr %74, align 2, !tbaa !31
  %76 = sext i16 %75 to i32
  %77 = mul nsw i32 %76, %73
  %78 = or i64 %69, 1
  %79 = getelementptr inbounds i16, ptr %0, i64 %78
  %80 = load i16, ptr %79, align 2, !tbaa !31
  %81 = sext i16 %80 to i32
  %82 = getelementptr inbounds i16, ptr %1, i64 %78
  %83 = load i16, ptr %82, align 2, !tbaa !31
  %84 = sext i16 %83 to i32
  %85 = mul nsw i32 %84, %81
  %86 = add nsw i32 %85, %77
  %87 = ashr i32 %86, 8
  %88 = add nsw i32 %87, %70
  %89 = add nuw nsw i64 %69, 2
  %90 = icmp ult i64 %89, %8
  br i1 %90, label %68, label %66, !llvm.loop !39
}

; Function Attrs: mustprogress nofree nosync nounwind memory(argmem: readwrite) uwtable
define dso_local void @_Z5trainPsS_ii(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 {
  %5 = add nsw i32 %2, 7
  %6 = and i32 %5, -8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %39

8:                                                ; preds = %4
  %9 = zext i32 %6 to i64
  %10 = lshr i32 %5, 3
  %11 = zext i32 %10 to i64
  %12 = shl nuw nsw i64 %11, 4
  %13 = getelementptr i8, ptr %1, i64 %12
  %14 = getelementptr i8, ptr %0, i64 %12
  %15 = icmp ugt ptr %14, %1
  %16 = icmp ugt ptr %13, %0
  %17 = and i1 %15, %16
  br i1 %17, label %40, label %18

18:                                               ; preds = %8
  %19 = insertelement <8 x i32> poison, i32 %3, i64 0
  %20 = shufflevector <8 x i32> %19, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %21

21:                                               ; preds = %21, %18
  %22 = phi i64 [ 0, %18 ], [ %37, %21 ]
  %23 = getelementptr inbounds i16, ptr %1, i64 %22
  %24 = load <8 x i16>, ptr %23, align 2, !tbaa !31, !alias.scope !40, !noalias !43
  %25 = sext <8 x i16> %24 to <8 x i32>
  %26 = getelementptr inbounds i16, ptr %0, i64 %22
  %27 = load <8 x i16>, ptr %26, align 2, !tbaa !31, !alias.scope !43
  %28 = sext <8 x i16> %27 to <8 x i32>
  %29 = mul nsw <8 x i32> %20, %28
  %30 = ashr <8 x i32> %29, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %31 = add nsw <8 x i32> %30, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %32 = ashr <8 x i32> %31, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %33 = add nsw <8 x i32> %32, %25
  %34 = tail call <8 x i32> @llvm.smax.v8i32(<8 x i32> %33, <8 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>)
  %35 = tail call <8 x i32> @llvm.smin.v8i32(<8 x i32> %34, <8 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>)
  %36 = trunc <8 x i32> %35 to <8 x i16>
  store <8 x i16> %36, ptr %23, align 2, !tbaa !31, !alias.scope !40, !noalias !43
  %37 = add nuw i64 %22, 8
  %38 = icmp eq i64 %37, %9
  br i1 %38, label %39, label %21, !llvm.loop !45

39:                                               ; preds = %21, %40, %4
  ret void

40:                                               ; preds = %8, %40
  %41 = phi i64 [ %56, %40 ], [ 0, %8 ]
  %42 = getelementptr inbounds i16, ptr %1, i64 %41
  %43 = load i16, ptr %42, align 2, !tbaa !31
  %44 = sext i16 %43 to i32
  %45 = getelementptr inbounds i16, ptr %0, i64 %41
  %46 = load i16, ptr %45, align 2, !tbaa !31
  %47 = sext i16 %46 to i32
  %48 = mul nsw i32 %47, %3
  %49 = ashr i32 %48, 15
  %50 = add nsw i32 %49, 1
  %51 = ashr i32 %50, 1
  %52 = add nsw i32 %51, %44
  %53 = tail call i32 @llvm.smax.i32(i32 %52, i32 -32768)
  %54 = tail call i32 @llvm.smin.i32(i32 %53, i32 32767)
  %55 = trunc i32 %54 to i16
  store i16 %55, ptr %42, align 2, !tbaa !31
  %56 = add nuw nsw i64 %41, 1
  %57 = icmp eq i64 %56, %9
  br i1 %57, label %39, label %40, !llvm.loop !46
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN5MixerD2Ev(ptr nocapture noundef nonnull readonly align 8 dereferenceable(136) %0) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 10
  %3 = load ptr, ptr %2, align 8, !tbaa !47
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5MixerD2Ev(ptr noundef nonnull align 8 dereferenceable(136) %3) #39
  tail call void @_ZdlPv(ptr noundef nonnull %3) #42
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9
  %8 = load i32, ptr %7, align 8, !tbaa !51
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = shl i32 %8, 2
  %11 = sub i32 %9, %10
  store i32 %11, ptr @programChecker, align 8, !tbaa !13
  %12 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %13 = icmp sgt i32 %11, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %6
  store i32 %11, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %15

15:                                               ; preds = %6, %14
  %16 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !52
  tail call void @free(ptr noundef %17) #39
  %18 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5
  %19 = load i32, ptr %18, align 8, !tbaa !51
  %20 = load i32, ptr @programChecker, align 8, !tbaa !13
  %21 = shl i32 %19, 2
  %22 = sub i32 %20, %21
  store i32 %22, ptr @programChecker, align 8, !tbaa !13
  %23 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %24 = icmp sgt i32 %22, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %15
  store i32 %22, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %26

26:                                               ; preds = %15, %25
  %27 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !52
  tail call void @free(ptr noundef %28) #39
  %29 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4
  %30 = load i32, ptr %29, align 8, !tbaa !53
  %31 = shl i32 %30, 1
  %32 = load i32, ptr @programChecker, align 8, !tbaa !13
  %33 = sub i32 %32, %31
  %34 = add i32 %33, -16
  store i32 %34, ptr @programChecker, align 8, !tbaa !13
  %35 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %36 = icmp sgt i32 %34, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %26
  store i32 %34, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %38

38:                                               ; preds = %26, %37
  %39 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4, i32 2
  %40 = load ptr, ptr %39, align 8, !tbaa !54
  tail call void @free(ptr noundef %40) #39
  %41 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3
  %42 = load i32, ptr %41, align 8, !tbaa !53
  %43 = shl i32 %42, 1
  %44 = load i32, ptr @programChecker, align 8, !tbaa !13
  %45 = sub i32 %44, %43
  %46 = add i32 %45, -16
  store i32 %46, ptr @programChecker, align 8, !tbaa !13
  %47 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %48 = icmp sgt i32 %46, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %38
  store i32 %46, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %50

50:                                               ; preds = %38, %49
  %51 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 2
  %52 = load ptr, ptr %51, align 8, !tbaa !54
  tail call void @free(ptr noundef %52) #39
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #10

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIiLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !51
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = shl i32 %2, 2
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !52
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIsLi16EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !53
  %3 = shl i32 %2, 1
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %5 = sub i32 %4, %3
  %6 = add i32 %5, -16
  store i32 %6, ptr @programChecker, align 8, !tbaa !13
  %7 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %8 = icmp sgt i32 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  store i32 %6, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %10

10:                                               ; preds = %1, %9
  %11 = getelementptr inbounds %class.Array.2, ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !54
  tail call void @free(ptr noundef %12) #39
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5MixerC2Eiiii(ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
  %6 = add nsw i32 %1, 7
  %7 = and i32 %6, -8
  store i32 %7, ptr %0, align 8, !tbaa !55
  %8 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 1
  store i32 %2, ptr %8, align 4, !tbaa !56
  %9 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 2
  store i32 %3, ptr %9, align 8, !tbaa !57
  %10 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3
  %11 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 1
  store i32 %7, ptr %11, align 4, !tbaa !58
  store i32 %7, ptr %10, align 8, !tbaa !53
  %12 = icmp slt i32 %7, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %5
  %14 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, i8 0, i64 16, i1 false)
  br label %37

15:                                               ; preds = %5
  %16 = shl nuw i32 %7, 1
  %17 = add i32 %16, 16
  %18 = load i32, ptr @programChecker, align 8, !tbaa !13
  %19 = add nsw i32 %18, %17
  store i32 %19, ptr @programChecker, align 8, !tbaa !13
  %20 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %21 = icmp sgt i32 %19, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %15
  store i32 %19, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %23

23:                                               ; preds = %22, %15
  %24 = sext i32 %17 to i64
  %25 = tail call noalias ptr @calloc(i64 noundef %24, i64 noundef 1) #41
  %26 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 2
  store ptr %25, ptr %26, align 8, !tbaa !54
  %27 = icmp eq ptr %25, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  %29 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %29, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %29, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

30:                                               ; preds = %23
  %31 = getelementptr inbounds i8, ptr %25, i64 16
  %32 = ptrtoint ptr %25 to i64
  %33 = and i64 %32, 15
  %34 = sub nsw i64 0, %33
  %35 = getelementptr inbounds i8, ptr %31, i64 %34
  %36 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  store ptr %35, ptr %36, align 8, !tbaa !59
  br label %37

37:                                               ; preds = %13, %30
  %38 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4
  %39 = mul nsw i32 %7, %2
  %40 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4, i32 1
  store i32 %39, ptr %40, align 4, !tbaa !58
  store i32 %39, ptr %38, align 8, !tbaa !53
  %41 = icmp slt i32 %39, 1
  br i1 %41, label %42, label %44

42:                                               ; preds = %37
  %43 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %43, i8 0, i64 16, i1 false)
  br label %67

44:                                               ; preds = %37
  %45 = shl nuw i32 %39, 1
  %46 = add i32 %45, 16
  %47 = load i32, ptr @programChecker, align 8, !tbaa !13
  %48 = add nsw i32 %47, %46
  store i32 %48, ptr @programChecker, align 8, !tbaa !13
  %49 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %50 = icmp sgt i32 %48, %49
  br i1 %50, label %51, label %52

51:                                               ; preds = %44
  store i32 %48, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %52

52:                                               ; preds = %51, %44
  %53 = sext i32 %46 to i64
  %54 = tail call noalias ptr @calloc(i64 noundef %53, i64 noundef 1) #41
  %55 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4, i32 2
  store ptr %54, ptr %55, align 8, !tbaa !54
  %56 = icmp eq ptr %54, null
  br i1 %56, label %57, label %60

57:                                               ; preds = %52
  %58 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %58, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %58, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %59 unwind label %158

59:                                               ; preds = %57
  unreachable

60:                                               ; preds = %52
  %61 = getelementptr inbounds i8, ptr %54, i64 16
  %62 = ptrtoint ptr %54 to i64
  %63 = and i64 %62, 15
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds i8, ptr %61, i64 %64
  %66 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4, i32 3
  store ptr %65, ptr %66, align 8, !tbaa !59
  br label %67

67:                                               ; preds = %60, %42
  %68 = phi ptr [ %65, %60 ], [ null, %42 ]
  %69 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5
  %70 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 1
  store i32 %3, ptr %70, align 4, !tbaa !60
  store i32 %3, ptr %69, align 8, !tbaa !51
  %71 = icmp slt i32 %3, 1
  br i1 %71, label %105, label %72

72:                                               ; preds = %67
  %73 = shl i32 %3, 2
  %74 = load i32, ptr @programChecker, align 8, !tbaa !13
  %75 = add nsw i32 %74, %73
  store i32 %75, ptr @programChecker, align 8, !tbaa !13
  %76 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %77 = icmp sgt i32 %75, %76
  br i1 %77, label %78, label %79

78:                                               ; preds = %72
  store i32 %75, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %79

79:                                               ; preds = %78, %72
  %80 = phi i32 [ %75, %78 ], [ %76, %72 ]
  %81 = sext i32 %73 to i64
  %82 = tail call noalias ptr @calloc(i64 noundef %81, i64 noundef 1) #41
  %83 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 2
  store ptr %82, ptr %83, align 8, !tbaa !52
  %84 = icmp eq ptr %82, null
  br i1 %84, label %85, label %88

85:                                               ; preds = %79
  %86 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %86, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %86, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %87 unwind label %160

87:                                               ; preds = %85
  unreachable

88:                                               ; preds = %79
  %89 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 3
  store ptr %82, ptr %89, align 8, !tbaa !61
  %90 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 6
  store i32 0, ptr %90, align 8, !tbaa !62
  %91 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 7
  store i32 0, ptr %91, align 4, !tbaa !63
  %92 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  store i32 0, ptr %92, align 8, !tbaa !64
  %93 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9
  %94 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9, i32 1
  store i32 %3, ptr %94, align 4, !tbaa !60
  store i32 %3, ptr %93, align 8, !tbaa !51
  %95 = add nsw i32 %75, %73
  store i32 %95, ptr @programChecker, align 8, !tbaa !13
  %96 = icmp sgt i32 %95, %80
  br i1 %96, label %97, label %98

97:                                               ; preds = %88
  store i32 %95, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %98

98:                                               ; preds = %97, %88
  %99 = tail call noalias ptr @calloc(i64 noundef %81, i64 noundef 1) #41
  %100 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9, i32 2
  store ptr %99, ptr %100, align 8, !tbaa !52
  %101 = icmp eq ptr %99, null
  br i1 %101, label %102, label %111

102:                                              ; preds = %98
  %103 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %103, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %103, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %104 unwind label %162

104:                                              ; preds = %102
  unreachable

105:                                              ; preds = %67
  %106 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 2
  %107 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9
  %108 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %106, i8 0, i64 28, i1 false)
  store i32 %3, ptr %108, align 4, !tbaa !60
  store i32 %3, ptr %107, align 8, !tbaa !51
  %109 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9, i32 2
  %110 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %109, i8 0, i64 24, i1 false)
  br label %129

111:                                              ; preds = %98
  %112 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9, i32 3
  store ptr %99, ptr %112, align 8, !tbaa !61
  %113 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 10
  store ptr null, ptr %113, align 8, !tbaa !47
  %114 = sext i32 %3 to i64
  %115 = tail call i64 @llvm.smax.i64(i64 %114, i64 1)
  %116 = icmp ult i64 %115, 8
  br i1 %116, label %127, label %117

117:                                              ; preds = %111
  %118 = and i64 %115, 9223372036854775800
  br label %119

119:                                              ; preds = %119, %117
  %120 = phi i64 [ 0, %117 ], [ %123, %119 ]
  %121 = getelementptr inbounds i32, ptr %99, i64 %120
  store <4 x i32> <i32 2048, i32 2048, i32 2048, i32 2048>, ptr %121, align 4, !tbaa !25
  %122 = getelementptr inbounds i32, ptr %121, i64 4
  store <4 x i32> <i32 2048, i32 2048, i32 2048, i32 2048>, ptr %122, align 4, !tbaa !25
  %123 = add nuw i64 %120, 8
  %124 = icmp eq i64 %123, %118
  br i1 %124, label %125, label %119, !llvm.loop !65

125:                                              ; preds = %119
  %126 = icmp eq i64 %115, %118
  br i1 %126, label %129, label %127

127:                                              ; preds = %111, %125
  %128 = phi i64 [ 0, %111 ], [ %118, %125 ]
  br label %153

129:                                              ; preds = %153, %125, %105
  %130 = phi ptr [ %110, %105 ], [ %113, %125 ], [ %113, %153 ]
  %131 = phi ptr [ %107, %105 ], [ %93, %125 ], [ %93, %153 ]
  %132 = icmp sgt i32 %39, 0
  br i1 %132, label %133, label %171

133:                                              ; preds = %129
  %134 = trunc i32 %4 to i16
  %135 = zext i32 %39 to i64
  %136 = icmp ult i32 %39, 16
  br i1 %136, label %151, label %137

137:                                              ; preds = %133
  %138 = and i64 %135, 4294967280
  %139 = insertelement <8 x i16> poison, i16 %134, i64 0
  %140 = shufflevector <8 x i16> %139, <8 x i16> poison, <8 x i32> zeroinitializer
  %141 = insertelement <8 x i16> poison, i16 %134, i64 0
  %142 = shufflevector <8 x i16> %141, <8 x i16> poison, <8 x i32> zeroinitializer
  br label %143

143:                                              ; preds = %143, %137
  %144 = phi i64 [ 0, %137 ], [ %147, %143 ]
  %145 = getelementptr inbounds i16, ptr %68, i64 %144
  store <8 x i16> %140, ptr %145, align 2, !tbaa !31
  %146 = getelementptr inbounds i16, ptr %145, i64 8
  store <8 x i16> %142, ptr %146, align 2, !tbaa !31
  %147 = add nuw i64 %144, 16
  %148 = icmp eq i64 %147, %138
  br i1 %148, label %149, label %143, !llvm.loop !66

149:                                              ; preds = %143
  %150 = icmp eq i64 %138, %135
  br i1 %150, label %171, label %151

151:                                              ; preds = %133, %149
  %152 = phi i64 [ 0, %133 ], [ %138, %149 ]
  br label %166

153:                                              ; preds = %127, %153
  %154 = phi i64 [ %156, %153 ], [ %128, %127 ]
  %155 = getelementptr inbounds i32, ptr %99, i64 %154
  store i32 2048, ptr %155, align 4, !tbaa !25
  %156 = add nuw nsw i64 %154, 1
  %157 = icmp slt i64 %156, %114
  br i1 %157, label %153, label %129, !llvm.loop !67

158:                                              ; preds = %57
  %159 = landingpad { ptr, i32 }
          cleanup
  br label %186

160:                                              ; preds = %85
  %161 = landingpad { ptr, i32 }
          cleanup
  br label %184

162:                                              ; preds = %102
  %163 = landingpad { ptr, i32 }
          cleanup
  br label %182

164:                                              ; preds = %173
  %165 = landingpad { ptr, i32 }
          cleanup
  br label %180

166:                                              ; preds = %151, %166
  %167 = phi i64 [ %169, %166 ], [ %152, %151 ]
  %168 = getelementptr inbounds i16, ptr %68, i64 %167
  store i16 %134, ptr %168, align 2, !tbaa !31
  %169 = add nuw nsw i64 %167, 1
  %170 = icmp eq i64 %169, %135
  br i1 %170, label %171, label %166, !llvm.loop !68

171:                                              ; preds = %166, %149, %129
  %172 = icmp sgt i32 %3, 1
  br i1 %172, label %173, label %179

173:                                              ; preds = %171
  %174 = invoke noalias noundef nonnull dereferenceable(136) ptr @_Znwm(i64 noundef 136) #43
          to label %175 unwind label %164

175:                                              ; preds = %173
  invoke void @_ZN5MixerC2Eiiii(ptr noundef nonnull align 8 dereferenceable(136) %174, i32 noundef %3, i32 noundef 1, i32 noundef 1, i32 noundef 32767)
          to label %176 unwind label %177

176:                                              ; preds = %175
  store ptr %174, ptr %130, align 8, !tbaa !47
  br label %179

177:                                              ; preds = %175
  %178 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %174) #42
  br label %180

179:                                              ; preds = %176, %171
  ret void

180:                                              ; preds = %177, %164
  %181 = phi { ptr, i32 } [ %178, %177 ], [ %165, %164 ]
  tail call void @_ZN5ArrayIiLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %131) #39
  br label %182

182:                                              ; preds = %180, %162
  %183 = phi { ptr, i32 } [ %181, %180 ], [ %163, %162 ]
  tail call void @_ZN5ArrayIiLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %69) #39
  br label %184

184:                                              ; preds = %182, %160
  %185 = phi { ptr, i32 } [ %183, %182 ], [ %161, %160 ]
  tail call void @_ZN5ArrayIsLi16EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %38) #39
  br label %186

186:                                              ; preds = %184, %158
  %187 = phi { ptr, i32 } [ %185, %184 ], [ %159, %158 ]
  tail call void @_ZN5ArrayIsLi16EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %10) #39
  resume { ptr, i32 } %187
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !60
  store i32 %1, ptr %0, align 8, !tbaa !51
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = shl i32 %1, 2
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #41
  %17 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !52
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %20, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !61
  br label %23

23:                                               ; preds = %5, %21
  ret void
}

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #11

; Function Attrs: uwtable
define dso_local void @_ZN4APM1C2Ei(ptr nocapture noundef nonnull writeonly align 8 dereferenceable(32) %0, i32 noundef %1) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
  store i32 0, ptr %0, align 8, !tbaa !69
  %3 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !72
  %4 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2
  %5 = mul nsw i32 %1, 33
  %6 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2, i32 1
  store i32 %5, ptr %6, align 4, !tbaa !73
  store i32 %5, ptr %4, align 8, !tbaa !74
  %7 = icmp slt i32 %1, 1
  br i1 %7, label %22, label %8

8:                                                ; preds = %2
  %9 = mul i32 %1, 66
  %10 = load i32, ptr @programChecker, align 8, !tbaa !13
  %11 = add nsw i32 %10, %9
  store i32 %11, ptr @programChecker, align 8, !tbaa !13
  %12 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %13 = icmp sgt i32 %11, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  store i32 %11, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %15

15:                                               ; preds = %14, %8
  %16 = sext i32 %9 to i64
  %17 = tail call noalias ptr @calloc(i64 noundef %16, i64 noundef 1) #41
  %18 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2, i32 2
  store ptr %17, ptr %18, align 8, !tbaa !75
  %19 = icmp eq ptr %17, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %21, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %21, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %23, i8 0, i64 16, i1 false)
  br label %185

24:                                               ; preds = %15
  %25 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2, i32 3
  store ptr %17, ptr %25, align 8, !tbaa !76
  %26 = zext i32 %1 to i64
  %27 = getelementptr inbounds i16, ptr %17, i64 1
  %28 = getelementptr inbounds i16, ptr %17, i64 2
  %29 = getelementptr inbounds i16, ptr %17, i64 3
  %30 = getelementptr inbounds i16, ptr %17, i64 4
  %31 = getelementptr inbounds i16, ptr %17, i64 5
  %32 = getelementptr inbounds i16, ptr %17, i64 6
  %33 = getelementptr inbounds i16, ptr %17, i64 7
  %34 = getelementptr inbounds i16, ptr %17, i64 8
  %35 = getelementptr inbounds i16, ptr %17, i64 9
  %36 = getelementptr inbounds i16, ptr %17, i64 10
  %37 = getelementptr inbounds i16, ptr %17, i64 11
  %38 = getelementptr inbounds i16, ptr %17, i64 12
  %39 = getelementptr inbounds i16, ptr %17, i64 13
  %40 = getelementptr inbounds i16, ptr %17, i64 14
  %41 = getelementptr inbounds i16, ptr %17, i64 15
  %42 = getelementptr inbounds i16, ptr %17, i64 16
  %43 = getelementptr inbounds i16, ptr %17, i64 17
  %44 = getelementptr inbounds i16, ptr %17, i64 18
  %45 = getelementptr inbounds i16, ptr %17, i64 19
  %46 = getelementptr inbounds i16, ptr %17, i64 20
  %47 = getelementptr inbounds i16, ptr %17, i64 21
  %48 = getelementptr inbounds i16, ptr %17, i64 22
  %49 = getelementptr inbounds i16, ptr %17, i64 23
  %50 = getelementptr inbounds i16, ptr %17, i64 24
  %51 = getelementptr inbounds i16, ptr %17, i64 25
  %52 = getelementptr inbounds i16, ptr %17, i64 26
  %53 = getelementptr inbounds i16, ptr %17, i64 27
  %54 = getelementptr inbounds i16, ptr %17, i64 28
  %55 = getelementptr inbounds i16, ptr %17, i64 29
  %56 = getelementptr inbounds i16, ptr %17, i64 30
  %57 = getelementptr inbounds i16, ptr %17, i64 31
  %58 = getelementptr inbounds i16, ptr %17, i64 32
  br label %59

59:                                               ; preds = %24, %186
  %60 = phi i64 [ 0, %24 ], [ %187, %186 ]
  %61 = icmp eq i64 %60, 0
  %62 = mul i64 %60, 33
  %63 = and i64 %62, 4294967295
  br i1 %61, label %163, label %64

64:                                               ; preds = %59
  %65 = load i16, ptr %17, align 2, !tbaa !31
  %66 = getelementptr inbounds i16, ptr %17, i64 %63
  store i16 %65, ptr %66, align 2, !tbaa !31
  %67 = load i16, ptr %27, align 2, !tbaa !31
  %68 = add nuw nsw i64 %63, 1
  %69 = getelementptr inbounds i16, ptr %17, i64 %68
  store i16 %67, ptr %69, align 2, !tbaa !31
  %70 = load i16, ptr %28, align 2, !tbaa !31
  %71 = add nuw nsw i64 %63, 2
  %72 = getelementptr inbounds i16, ptr %17, i64 %71
  store i16 %70, ptr %72, align 2, !tbaa !31
  %73 = load i16, ptr %29, align 2, !tbaa !31
  %74 = add nuw nsw i64 %63, 3
  %75 = getelementptr inbounds i16, ptr %17, i64 %74
  store i16 %73, ptr %75, align 2, !tbaa !31
  %76 = load i16, ptr %30, align 2, !tbaa !31
  %77 = add nuw nsw i64 %63, 4
  %78 = getelementptr inbounds i16, ptr %17, i64 %77
  store i16 %76, ptr %78, align 2, !tbaa !31
  %79 = load i16, ptr %31, align 2, !tbaa !31
  %80 = add nuw nsw i64 %63, 5
  %81 = getelementptr inbounds i16, ptr %17, i64 %80
  store i16 %79, ptr %81, align 2, !tbaa !31
  %82 = load i16, ptr %32, align 2, !tbaa !31
  %83 = add nuw nsw i64 %63, 6
  %84 = getelementptr inbounds i16, ptr %17, i64 %83
  store i16 %82, ptr %84, align 2, !tbaa !31
  %85 = load i16, ptr %33, align 2, !tbaa !31
  %86 = add nuw nsw i64 %63, 7
  %87 = getelementptr inbounds i16, ptr %17, i64 %86
  store i16 %85, ptr %87, align 2, !tbaa !31
  %88 = load i16, ptr %34, align 2, !tbaa !31
  %89 = add nuw nsw i64 %63, 8
  %90 = getelementptr inbounds i16, ptr %17, i64 %89
  store i16 %88, ptr %90, align 2, !tbaa !31
  %91 = load i16, ptr %35, align 2, !tbaa !31
  %92 = add nuw nsw i64 %63, 9
  %93 = getelementptr inbounds i16, ptr %17, i64 %92
  store i16 %91, ptr %93, align 2, !tbaa !31
  %94 = load i16, ptr %36, align 2, !tbaa !31
  %95 = add nuw nsw i64 %63, 10
  %96 = getelementptr inbounds i16, ptr %17, i64 %95
  store i16 %94, ptr %96, align 2, !tbaa !31
  %97 = load i16, ptr %37, align 2, !tbaa !31
  %98 = add nuw nsw i64 %63, 11
  %99 = getelementptr inbounds i16, ptr %17, i64 %98
  store i16 %97, ptr %99, align 2, !tbaa !31
  %100 = load i16, ptr %38, align 2, !tbaa !31
  %101 = add nuw nsw i64 %63, 12
  %102 = getelementptr inbounds i16, ptr %17, i64 %101
  store i16 %100, ptr %102, align 2, !tbaa !31
  %103 = load i16, ptr %39, align 2, !tbaa !31
  %104 = add nuw nsw i64 %63, 13
  %105 = getelementptr inbounds i16, ptr %17, i64 %104
  store i16 %103, ptr %105, align 2, !tbaa !31
  %106 = load i16, ptr %40, align 2, !tbaa !31
  %107 = add nuw nsw i64 %63, 14
  %108 = getelementptr inbounds i16, ptr %17, i64 %107
  store i16 %106, ptr %108, align 2, !tbaa !31
  %109 = load i16, ptr %41, align 2, !tbaa !31
  %110 = add nuw nsw i64 %63, 15
  %111 = getelementptr inbounds i16, ptr %17, i64 %110
  store i16 %109, ptr %111, align 2, !tbaa !31
  %112 = load i16, ptr %42, align 2, !tbaa !31
  %113 = add nuw nsw i64 %63, 16
  %114 = getelementptr inbounds i16, ptr %17, i64 %113
  store i16 %112, ptr %114, align 2, !tbaa !31
  %115 = load i16, ptr %43, align 2, !tbaa !31
  %116 = add nuw nsw i64 %63, 17
  %117 = getelementptr inbounds i16, ptr %17, i64 %116
  store i16 %115, ptr %117, align 2, !tbaa !31
  %118 = load i16, ptr %44, align 2, !tbaa !31
  %119 = add nuw nsw i64 %63, 18
  %120 = getelementptr inbounds i16, ptr %17, i64 %119
  store i16 %118, ptr %120, align 2, !tbaa !31
  %121 = load i16, ptr %45, align 2, !tbaa !31
  %122 = add nuw nsw i64 %63, 19
  %123 = getelementptr inbounds i16, ptr %17, i64 %122
  store i16 %121, ptr %123, align 2, !tbaa !31
  %124 = load i16, ptr %46, align 2, !tbaa !31
  %125 = add nuw nsw i64 %63, 20
  %126 = getelementptr inbounds i16, ptr %17, i64 %125
  store i16 %124, ptr %126, align 2, !tbaa !31
  %127 = load i16, ptr %47, align 2, !tbaa !31
  %128 = add nuw nsw i64 %63, 21
  %129 = getelementptr inbounds i16, ptr %17, i64 %128
  store i16 %127, ptr %129, align 2, !tbaa !31
  %130 = load i16, ptr %48, align 2, !tbaa !31
  %131 = add nuw nsw i64 %63, 22
  %132 = getelementptr inbounds i16, ptr %17, i64 %131
  store i16 %130, ptr %132, align 2, !tbaa !31
  %133 = load i16, ptr %49, align 2, !tbaa !31
  %134 = add nuw nsw i64 %63, 23
  %135 = getelementptr inbounds i16, ptr %17, i64 %134
  store i16 %133, ptr %135, align 2, !tbaa !31
  %136 = load i16, ptr %50, align 2, !tbaa !31
  %137 = add nuw nsw i64 %63, 24
  %138 = getelementptr inbounds i16, ptr %17, i64 %137
  store i16 %136, ptr %138, align 2, !tbaa !31
  %139 = load i16, ptr %51, align 2, !tbaa !31
  %140 = add nuw nsw i64 %63, 25
  %141 = getelementptr inbounds i16, ptr %17, i64 %140
  store i16 %139, ptr %141, align 2, !tbaa !31
  %142 = load i16, ptr %52, align 2, !tbaa !31
  %143 = add nuw nsw i64 %63, 26
  %144 = getelementptr inbounds i16, ptr %17, i64 %143
  store i16 %142, ptr %144, align 2, !tbaa !31
  %145 = load i16, ptr %53, align 2, !tbaa !31
  %146 = add nuw nsw i64 %63, 27
  %147 = getelementptr inbounds i16, ptr %17, i64 %146
  store i16 %145, ptr %147, align 2, !tbaa !31
  %148 = load i16, ptr %54, align 2, !tbaa !31
  %149 = add nuw nsw i64 %63, 28
  %150 = getelementptr inbounds i16, ptr %17, i64 %149
  store i16 %148, ptr %150, align 2, !tbaa !31
  %151 = load i16, ptr %55, align 2, !tbaa !31
  %152 = add nuw nsw i64 %63, 29
  %153 = getelementptr inbounds i16, ptr %17, i64 %152
  store i16 %151, ptr %153, align 2, !tbaa !31
  %154 = load i16, ptr %56, align 2, !tbaa !31
  %155 = add nuw nsw i64 %63, 30
  %156 = getelementptr inbounds i16, ptr %17, i64 %155
  store i16 %154, ptr %156, align 2, !tbaa !31
  %157 = load i16, ptr %57, align 2, !tbaa !31
  %158 = add nuw nsw i64 %63, 31
  %159 = getelementptr inbounds i16, ptr %17, i64 %158
  store i16 %157, ptr %159, align 2, !tbaa !31
  %160 = load i16, ptr %58, align 2, !tbaa !31
  %161 = add nuw nsw i64 %63, 32
  %162 = getelementptr inbounds i16, ptr %17, i64 %161
  store i16 %160, ptr %162, align 2, !tbaa !31
  br label %186

163:                                              ; preds = %59
  %164 = getelementptr inbounds i16, ptr %17, i64 %63
  store i16 0, ptr %164, align 2, !tbaa !31
  br label %165

165:                                              ; preds = %163, %177
  %166 = phi i64 [ 1, %163 ], [ %183, %177 ]
  %167 = icmp ugt i64 %166, 31
  br i1 %167, label %177, label %168

168:                                              ; preds = %165
  %169 = trunc i64 %166 to i32
  %170 = shl nuw nsw i32 %169, 7
  %171 = add nsw i32 %170, -2048
  %172 = ashr exact i32 %171, 7
  %173 = add nsw i32 %172, 16
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %174
  %176 = load i32, ptr %175, align 4, !tbaa !25
  br label %177

177:                                              ; preds = %168, %165
  %178 = phi i32 [ %176, %168 ], [ 4095, %165 ]
  %179 = trunc i32 %178 to i16
  %180 = shl i16 %179, 4
  %181 = add nuw nsw i64 %166, %63
  %182 = getelementptr inbounds i16, ptr %17, i64 %181
  store i16 %180, ptr %182, align 2, !tbaa !31
  %183 = add nuw nsw i64 %166, 1
  %184 = icmp eq i64 %183, 33
  br i1 %184, label %186, label %165, !llvm.loop !77

185:                                              ; preds = %186, %22
  ret void

186:                                              ; preds = %177, %64
  %187 = add nuw nsw i64 %60, 1
  %188 = icmp eq i64 %187, %26
  br i1 %188, label %185, label %59, !llvm.loop !79
}

; Function Attrs: uwtable
define dso_local void @_ZN8StateMapC2Ei(ptr nocapture noundef nonnull writeonly align 8 dereferenceable(32) %0, i32 noundef %1) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
  store i32 %1, ptr %0, align 8, !tbaa !80
  %3 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 1
  store i32 0, ptr %3, align 4, !tbaa !82
  %4 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2
  %5 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 1
  store i32 %1, ptr %5, align 4, !tbaa !83
  store i32 %1, ptr %4, align 8, !tbaa !10
  %6 = icmp slt i32 %1, 1
  br i1 %6, label %21, label %7

7:                                                ; preds = %2
  %8 = shl i32 %1, 2
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #41
  %17 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !17
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %20, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

21:                                               ; preds = %2
  %22 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, i8 0, i64 16, i1 false)
  br label %40

23:                                               ; preds = %14
  %24 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 3
  store ptr %16, ptr %24, align 8, !tbaa !84
  %25 = sext i32 %1 to i64
  %26 = tail call i64 @llvm.smax.i64(i64 %25, i64 1)
  %27 = icmp ult i64 %26, 8
  br i1 %27, label %38, label %28

28:                                               ; preds = %23
  %29 = and i64 %26, 9223372036854775800
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %34, %30 ]
  %32 = getelementptr inbounds i32, ptr %16, i64 %31
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %32, align 4, !tbaa !25
  %33 = getelementptr inbounds i32, ptr %32, i64 4
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %33, align 4, !tbaa !25
  %34 = add nuw i64 %31, 8
  %35 = icmp eq i64 %34, %29
  br i1 %35, label %36, label %30, !llvm.loop !85

36:                                               ; preds = %30
  %37 = icmp eq i64 %26, %29
  br i1 %37, label %40, label %38

38:                                               ; preds = %23, %36
  %39 = phi i64 [ 0, %23 ], [ %29, %36 ]
  br label %41

40:                                               ; preds = %41, %36, %21
  ret void

41:                                               ; preds = %38, %41
  %42 = phi i64 [ %44, %41 ], [ %39, %38 ]
  %43 = getelementptr inbounds i32, ptr %16, i64 %42
  store i32 -2147483648, ptr %43, align 4, !tbaa !25
  %44 = add nuw nsw i64 %42, 1
  %45 = icmp slt i64 %44, %25
  br i1 %45, label %41, label %40, !llvm.loop !86
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5ArrayIjLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !83
  store i32 %1, ptr %0, align 8, !tbaa !10
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = shl i32 %1, 2
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #41
  %17 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !17
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %20, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !84
  br label %23

23:                                               ; preds = %5, %21
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIjLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !10
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = shl i32 %2, 2
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN3APMC2Ei(ptr nocapture noundef nonnull writeonly align 8 dereferenceable(32) %0, i32 noundef %1) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
  %3 = mul nsw i32 %1, 24
  store i32 %3, ptr %0, align 8, !tbaa !80
  %4 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 1
  store i32 0, ptr %4, align 4, !tbaa !82
  %5 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 1
  store i32 %3, ptr %6, align 4, !tbaa !83
  store i32 %3, ptr %5, align 8, !tbaa !10
  %7 = icmp slt i32 %1, 1
  br i1 %7, label %22, label %8

8:                                                ; preds = %2
  %9 = mul i32 %1, 96
  %10 = load i32, ptr @programChecker, align 8, !tbaa !13
  %11 = add nsw i32 %10, %9
  store i32 %11, ptr @programChecker, align 8, !tbaa !13
  %12 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %13 = icmp sgt i32 %11, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  store i32 %11, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %15

15:                                               ; preds = %14, %8
  %16 = sext i32 %9 to i64
  %17 = tail call noalias ptr @calloc(i64 noundef %16, i64 noundef 1) #41
  %18 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 2
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = icmp eq ptr %17, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %21, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %21, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %23, i8 0, i64 16, i1 false)
  br label %50

24:                                               ; preds = %15
  %25 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 3
  store ptr %17, ptr %25, align 8, !tbaa !84
  %26 = tail call i32 @llvm.umax.i32(i32 %3, i32 1)
  %27 = zext i32 %26 to i64
  %28 = icmp ult i32 %26, 8
  br i1 %28, label %39, label %29

29:                                               ; preds = %24
  %30 = and i64 %27, 4294967288
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %35, %31 ]
  %33 = getelementptr inbounds i32, ptr %17, i64 %32
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %33, align 4, !tbaa !25
  %34 = getelementptr inbounds i32, ptr %33, i64 4
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %34, align 4, !tbaa !25
  %35 = add nuw i64 %32, 8
  %36 = icmp eq i64 %35, %30
  br i1 %36, label %37, label %31, !llvm.loop !87

37:                                               ; preds = %31
  %38 = icmp eq i64 %30, %27
  br i1 %38, label %46, label %39

39:                                               ; preds = %24, %37
  %40 = phi i64 [ 0, %24 ], [ %30, %37 ]
  br label %41

41:                                               ; preds = %39, %41
  %42 = phi i64 [ %44, %41 ], [ %40, %39 ]
  %43 = getelementptr inbounds i32, ptr %17, i64 %42
  store i32 -2147483648, ptr %43, align 4, !tbaa !25
  %44 = add nuw nsw i64 %42, 1
  %45 = icmp eq i64 %44, %27
  br i1 %45, label %46, label %41, !llvm.loop !88

46:                                               ; preds = %41, %37
  %47 = icmp sgt i32 %1, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  %49 = sext i32 %3 to i64
  br label %51

50:                                               ; preds = %77, %22, %46
  ret void

51:                                               ; preds = %48, %77
  %52 = phi i64 [ 0, %48 ], [ %82, %77 ]
  %53 = trunc i64 %52 to i32
  %54 = urem i32 %53, 24
  %55 = shl nuw nsw i32 %54, 13
  %56 = or i32 %55, 4096
  %57 = icmp ugt i32 %56, 196607
  br i1 %57, label %77, label %58

58:                                               ; preds = %51
  %59 = udiv i32 %56, 48
  %60 = add nsw i32 %59, -2048
  %61 = and i32 %59, 127
  %62 = ashr i32 %60, 7
  %63 = add nsw i32 %62, 16
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %64
  %66 = load i32, ptr %65, align 4, !tbaa !25
  %67 = sub nuw nsw i32 128, %61
  %68 = mul nsw i32 %66, %67
  %69 = add nsw i32 %62, 17
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !25
  %73 = mul nsw i32 %72, %61
  %74 = add i32 %68, 64
  %75 = add i32 %74, %73
  %76 = ashr i32 %75, 7
  br label %77

77:                                               ; preds = %51, %58
  %78 = phi i32 [ %76, %58 ], [ 4095, %51 ]
  %79 = shl i32 %78, 20
  %80 = or i32 %79, 6
  %81 = getelementptr inbounds i32, ptr %17, i64 %52
  store i32 %80, ptr %81, align 4, !tbaa !25
  %82 = add nuw nsw i64 %52, 1
  %83 = icmp slt i64 %82, %49
  br i1 %83, label %51, label %50, !llvm.loop !89
}

; Function Attrs: uwtable
define dso_local void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
  store i32 %2, ptr %0, align 8, !tbaa !90
  %4 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2
  %5 = ashr i32 %1, 6
  %6 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2, i32 1
  store i32 %5, ptr %6, align 4, !tbaa !94
  store i32 %5, ptr %4, align 8, !tbaa !95
  %7 = icmp slt i32 %1, 64
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, i8 0, i64 16, i1 false)
  br label %32

10:                                               ; preds = %3
  %11 = and i32 %1, -64
  %12 = add nuw i32 %11, 64
  %13 = load i32, ptr @programChecker, align 8, !tbaa !13
  %14 = add nsw i32 %13, %12
  store i32 %14, ptr @programChecker, align 8, !tbaa !13
  %15 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %16 = icmp sgt i32 %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %10
  store i32 %14, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %18

18:                                               ; preds = %17, %10
  %19 = sext i32 %12 to i64
  %20 = tail call noalias ptr @calloc(i64 noundef %19, i64 noundef 1) #41
  %21 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2, i32 2
  store ptr %20, ptr %21, align 8, !tbaa !96
  %22 = icmp eq ptr %20, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  %24 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %24, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %24, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

25:                                               ; preds = %18
  %26 = getelementptr inbounds i8, ptr %20, i64 64
  %27 = ptrtoint ptr %20 to i64
  %28 = and i64 %27, 63
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i8, ptr %26, i64 %29
  %31 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2, i32 3
  store ptr %30, ptr %31, align 8, !tbaa !97
  br label %32

32:                                               ; preds = %8, %25
  %33 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3
  %34 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3, i32 1
  store i32 %2, ptr %34, align 4, !tbaa !98
  store i32 %2, ptr %33, align 8, !tbaa !99
  %35 = icmp slt i32 %2, 1
  br i1 %35, label %84, label %36

36:                                               ; preds = %32
  %37 = shl i32 %2, 3
  %38 = load i32, ptr @programChecker, align 8, !tbaa !13
  %39 = add nsw i32 %38, %37
  store i32 %39, ptr @programChecker, align 8, !tbaa !13
  %40 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %41 = icmp sgt i32 %39, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %36
  store i32 %39, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %43

43:                                               ; preds = %42, %36
  %44 = phi i32 [ %39, %42 ], [ %40, %36 ]
  %45 = sext i32 %37 to i64
  %46 = tail call noalias ptr @calloc(i64 noundef %45, i64 noundef 1) #41
  %47 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3, i32 2
  store ptr %46, ptr %47, align 8, !tbaa !100
  %48 = icmp eq ptr %46, null
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %50, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %50, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %51 unwind label %243

51:                                               ; preds = %49
  unreachable

52:                                               ; preds = %43
  %53 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3, i32 3
  store ptr %46, ptr %53, align 8, !tbaa !101
  %54 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4
  %55 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4, i32 1
  store i32 %2, ptr %55, align 4, !tbaa !98
  store i32 %2, ptr %54, align 8, !tbaa !99
  %56 = add nsw i32 %39, %37
  store i32 %56, ptr @programChecker, align 8, !tbaa !13
  %57 = icmp sgt i32 %56, %44
  br i1 %57, label %58, label %59

58:                                               ; preds = %52
  store i32 %56, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %59

59:                                               ; preds = %58, %52
  %60 = phi i32 [ %56, %58 ], [ %44, %52 ]
  %61 = tail call noalias ptr @calloc(i64 noundef %45, i64 noundef 1) #41
  %62 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4, i32 2
  store ptr %61, ptr %62, align 8, !tbaa !100
  %63 = icmp eq ptr %61, null
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %65, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %65, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %66 unwind label %245

66:                                               ; preds = %64
  unreachable

67:                                               ; preds = %59
  %68 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4, i32 3
  store ptr %61, ptr %68, align 8, !tbaa !101
  %69 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5
  %70 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5, i32 1
  store i32 %2, ptr %70, align 4, !tbaa !83
  store i32 %2, ptr %69, align 8, !tbaa !10
  %71 = shl i32 %2, 2
  %72 = add nsw i32 %56, %71
  store i32 %72, ptr @programChecker, align 8, !tbaa !13
  %73 = icmp sgt i32 %72, %60
  br i1 %73, label %74, label %75

74:                                               ; preds = %67
  store i32 %72, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %75

75:                                               ; preds = %74, %67
  %76 = phi i32 [ %72, %74 ], [ %60, %67 ]
  %77 = sext i32 %71 to i64
  %78 = tail call noalias ptr @calloc(i64 noundef %77, i64 noundef 1) #41
  %79 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5, i32 2
  store ptr %78, ptr %79, align 8, !tbaa !17
  %80 = icmp eq ptr %78, null
  br i1 %80, label %81, label %95

81:                                               ; preds = %75
  %82 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %82, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %82, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %83 unwind label %247

83:                                               ; preds = %81
  unreachable

84:                                               ; preds = %32
  %85 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %85, i8 0, i64 16, i1 false)
  %86 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4
  %87 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4, i32 1
  store i32 %2, ptr %87, align 4, !tbaa !98
  store i32 %2, ptr %86, align 8, !tbaa !99
  %88 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %88, i8 0, i64 16, i1 false)
  %89 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5
  %90 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5, i32 1
  store i32 %2, ptr %90, align 4, !tbaa !83
  store i32 %2, ptr %89, align 8, !tbaa !10
  %91 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %91, i8 0, i64 16, i1 false)
  %92 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6
  %93 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6, i32 1
  store i32 %2, ptr %93, align 4, !tbaa !98
  store i32 %2, ptr %92, align 8, !tbaa !99
  %94 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %94, i8 0, i64 16, i1 false)
  br label %111

95:                                               ; preds = %75
  %96 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5, i32 3
  store ptr %78, ptr %96, align 8, !tbaa !84
  %97 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6
  %98 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6, i32 1
  store i32 %2, ptr %98, align 4, !tbaa !98
  store i32 %2, ptr %97, align 8, !tbaa !99
  %99 = add nsw i32 %72, %37
  store i32 %99, ptr @programChecker, align 8, !tbaa !13
  %100 = icmp sgt i32 %99, %76
  br i1 %100, label %101, label %102

101:                                              ; preds = %95
  store i32 %99, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %102

102:                                              ; preds = %101, %95
  %103 = tail call noalias ptr @calloc(i64 noundef %45, i64 noundef 1) #41
  %104 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6, i32 2
  store ptr %103, ptr %104, align 8, !tbaa !100
  %105 = icmp eq ptr %103, null
  br i1 %105, label %106, label %109

106:                                              ; preds = %102
  %107 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %107, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %107, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %108 unwind label %249

108:                                              ; preds = %106
  unreachable

109:                                              ; preds = %102
  %110 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6, i32 3
  store ptr %103, ptr %110, align 8, !tbaa !101
  br label %111

111:                                              ; preds = %109, %84
  %112 = phi ptr [ %92, %84 ], [ %97, %109 ]
  %113 = phi ptr [ %86, %84 ], [ %54, %109 ]
  %114 = phi ptr [ %89, %84 ], [ %69, %109 ]
  %115 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 8
  store i32 0, ptr %115, align 8, !tbaa !102
  %116 = sext i32 %2 to i64
  %117 = icmp slt i32 %2, 0
  %118 = shl nsw i64 %116, 5
  %119 = or i64 %118, 8
  %120 = select i1 %117, i64 -1, i64 %119
  %121 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %120) #43
          to label %122 unwind label %251

122:                                              ; preds = %111
  store i64 %116, ptr %121, align 16
  %123 = getelementptr inbounds i8, ptr %121, i64 8
  %124 = icmp eq i32 %2, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %122
  %126 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 7
  store ptr %123, ptr %126, align 8, !tbaa !103
  br label %242

127:                                              ; preds = %122
  %128 = getelementptr inbounds %class.StateMap, ptr %123, i64 %116
  %129 = load i32, ptr @programChecker, align 8, !tbaa !13
  %130 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %131

131:                                              ; preds = %146, %127
  %132 = phi i32 [ %130, %127 ], [ %139, %146 ]
  %133 = phi i32 [ %129, %127 ], [ %135, %146 ]
  %134 = phi ptr [ %123, %127 ], [ %211, %146 ]
  store <4 x i32> <i32 256, i32 0, i32 256, i32 256>, ptr %134, align 8, !tbaa !25
  %135 = add nsw i32 %133, 1024
  %136 = icmp sgt i32 %135, %132
  br i1 %136, label %137, label %138

137:                                              ; preds = %131
  store i32 %135, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %138

138:                                              ; preds = %137, %131
  %139 = phi i32 [ %135, %137 ], [ %132, %131 ]
  %140 = tail call noalias dereferenceable_or_null(1024) ptr @calloc(i64 noundef 1024, i64 noundef 1) #41
  %141 = getelementptr inbounds %class.StateMap, ptr %134, i64 0, i32 2, i32 2
  store ptr %140, ptr %141, align 8, !tbaa !17
  %142 = icmp eq ptr %140, null
  br i1 %142, label %143, label %146

143:                                              ; preds = %138
  store i32 %135, ptr @programChecker, align 8, !tbaa !13
  %144 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %144, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %144, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %145 unwind label %253

145:                                              ; preds = %143
  unreachable

146:                                              ; preds = %138
  %147 = getelementptr inbounds %class.StateMap, ptr %134, i64 0, i32 2, i32 3
  store ptr %140, ptr %147, align 8, !tbaa !84
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %140, align 4, !tbaa !25
  %148 = getelementptr inbounds i32, ptr %140, i64 4
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %148, align 4, !tbaa !25
  %149 = getelementptr inbounds i32, ptr %140, i64 8
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %149, align 4, !tbaa !25
  %150 = getelementptr inbounds i32, ptr %140, i64 12
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %150, align 4, !tbaa !25
  %151 = getelementptr inbounds i32, ptr %140, i64 16
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %151, align 4, !tbaa !25
  %152 = getelementptr inbounds i32, ptr %140, i64 20
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %152, align 4, !tbaa !25
  %153 = getelementptr inbounds i32, ptr %140, i64 24
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %153, align 4, !tbaa !25
  %154 = getelementptr inbounds i32, ptr %140, i64 28
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %154, align 4, !tbaa !25
  %155 = getelementptr inbounds i32, ptr %140, i64 32
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %155, align 4, !tbaa !25
  %156 = getelementptr inbounds i32, ptr %140, i64 36
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %156, align 4, !tbaa !25
  %157 = getelementptr inbounds i32, ptr %140, i64 40
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %157, align 4, !tbaa !25
  %158 = getelementptr inbounds i32, ptr %140, i64 44
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %158, align 4, !tbaa !25
  %159 = getelementptr inbounds i32, ptr %140, i64 48
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %159, align 4, !tbaa !25
  %160 = getelementptr inbounds i32, ptr %140, i64 52
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %160, align 4, !tbaa !25
  %161 = getelementptr inbounds i32, ptr %140, i64 56
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %161, align 4, !tbaa !25
  %162 = getelementptr inbounds i32, ptr %140, i64 60
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %162, align 4, !tbaa !25
  %163 = getelementptr inbounds i32, ptr %140, i64 64
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %163, align 4, !tbaa !25
  %164 = getelementptr inbounds i32, ptr %140, i64 68
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %164, align 4, !tbaa !25
  %165 = getelementptr inbounds i32, ptr %140, i64 72
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %165, align 4, !tbaa !25
  %166 = getelementptr inbounds i32, ptr %140, i64 76
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %166, align 4, !tbaa !25
  %167 = getelementptr inbounds i32, ptr %140, i64 80
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %167, align 4, !tbaa !25
  %168 = getelementptr inbounds i32, ptr %140, i64 84
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %168, align 4, !tbaa !25
  %169 = getelementptr inbounds i32, ptr %140, i64 88
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %169, align 4, !tbaa !25
  %170 = getelementptr inbounds i32, ptr %140, i64 92
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %170, align 4, !tbaa !25
  %171 = getelementptr inbounds i32, ptr %140, i64 96
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %171, align 4, !tbaa !25
  %172 = getelementptr inbounds i32, ptr %140, i64 100
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %172, align 4, !tbaa !25
  %173 = getelementptr inbounds i32, ptr %140, i64 104
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %173, align 4, !tbaa !25
  %174 = getelementptr inbounds i32, ptr %140, i64 108
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %174, align 4, !tbaa !25
  %175 = getelementptr inbounds i32, ptr %140, i64 112
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %175, align 4, !tbaa !25
  %176 = getelementptr inbounds i32, ptr %140, i64 116
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %176, align 4, !tbaa !25
  %177 = getelementptr inbounds i32, ptr %140, i64 120
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %177, align 4, !tbaa !25
  %178 = getelementptr inbounds i32, ptr %140, i64 124
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %178, align 4, !tbaa !25
  %179 = getelementptr inbounds i32, ptr %140, i64 128
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %179, align 4, !tbaa !25
  %180 = getelementptr inbounds i32, ptr %140, i64 132
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %180, align 4, !tbaa !25
  %181 = getelementptr inbounds i32, ptr %140, i64 136
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %181, align 4, !tbaa !25
  %182 = getelementptr inbounds i32, ptr %140, i64 140
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %182, align 4, !tbaa !25
  %183 = getelementptr inbounds i32, ptr %140, i64 144
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %183, align 4, !tbaa !25
  %184 = getelementptr inbounds i32, ptr %140, i64 148
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %184, align 4, !tbaa !25
  %185 = getelementptr inbounds i32, ptr %140, i64 152
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %185, align 4, !tbaa !25
  %186 = getelementptr inbounds i32, ptr %140, i64 156
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %186, align 4, !tbaa !25
  %187 = getelementptr inbounds i32, ptr %140, i64 160
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %187, align 4, !tbaa !25
  %188 = getelementptr inbounds i32, ptr %140, i64 164
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %188, align 4, !tbaa !25
  %189 = getelementptr inbounds i32, ptr %140, i64 168
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %189, align 4, !tbaa !25
  %190 = getelementptr inbounds i32, ptr %140, i64 172
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %190, align 4, !tbaa !25
  %191 = getelementptr inbounds i32, ptr %140, i64 176
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %191, align 4, !tbaa !25
  %192 = getelementptr inbounds i32, ptr %140, i64 180
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %192, align 4, !tbaa !25
  %193 = getelementptr inbounds i32, ptr %140, i64 184
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %193, align 4, !tbaa !25
  %194 = getelementptr inbounds i32, ptr %140, i64 188
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %194, align 4, !tbaa !25
  %195 = getelementptr inbounds i32, ptr %140, i64 192
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %195, align 4, !tbaa !25
  %196 = getelementptr inbounds i32, ptr %140, i64 196
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %196, align 4, !tbaa !25
  %197 = getelementptr inbounds i32, ptr %140, i64 200
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %197, align 4, !tbaa !25
  %198 = getelementptr inbounds i32, ptr %140, i64 204
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %198, align 4, !tbaa !25
  %199 = getelementptr inbounds i32, ptr %140, i64 208
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %199, align 4, !tbaa !25
  %200 = getelementptr inbounds i32, ptr %140, i64 212
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %200, align 4, !tbaa !25
  %201 = getelementptr inbounds i32, ptr %140, i64 216
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %201, align 4, !tbaa !25
  %202 = getelementptr inbounds i32, ptr %140, i64 220
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %202, align 4, !tbaa !25
  %203 = getelementptr inbounds i32, ptr %140, i64 224
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %203, align 4, !tbaa !25
  %204 = getelementptr inbounds i32, ptr %140, i64 228
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %204, align 4, !tbaa !25
  %205 = getelementptr inbounds i32, ptr %140, i64 232
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %205, align 4, !tbaa !25
  %206 = getelementptr inbounds i32, ptr %140, i64 236
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %206, align 4, !tbaa !25
  %207 = getelementptr inbounds i32, ptr %140, i64 240
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %207, align 4, !tbaa !25
  %208 = getelementptr inbounds i32, ptr %140, i64 244
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %208, align 4, !tbaa !25
  %209 = getelementptr inbounds i32, ptr %140, i64 248
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %209, align 4, !tbaa !25
  %210 = getelementptr inbounds i32, ptr %140, i64 252
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %210, align 4, !tbaa !25
  %211 = getelementptr inbounds %class.StateMap, ptr %134, i64 1
  %212 = icmp eq ptr %211, %128
  br i1 %212, label %213, label %131

213:                                              ; preds = %146
  store i32 %135, ptr @programChecker, align 8, !tbaa !13
  %214 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 7
  store ptr %123, ptr %214, align 8, !tbaa !103
  %215 = icmp sgt i32 %2, 0
  br i1 %215, label %216, label %242

216:                                              ; preds = %213
  %217 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2, i32 3
  %218 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3, i32 3
  %219 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4, i32 3
  %220 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6, i32 3
  %221 = zext i32 %2 to i64
  %222 = and i64 %221, 1
  %223 = icmp eq i32 %2, 1
  br i1 %223, label %226, label %224

224:                                              ; preds = %216
  %225 = and i64 %221, 4294967294
  br label %261

226:                                              ; preds = %261, %216
  %227 = phi i64 [ 0, %216 ], [ %289, %261 ]
  %228 = icmp eq i64 %222, 0
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = load ptr, ptr %217, align 8, !tbaa !97
  %231 = getelementptr inbounds %"class.ContextMap::E", ptr %230, i64 0, i32 2
  %232 = load ptr, ptr %218, align 8, !tbaa !101
  %233 = getelementptr inbounds ptr, ptr %232, i64 %227
  store ptr %231, ptr %233, align 8, !tbaa !5
  %234 = load ptr, ptr %219, align 8, !tbaa !101
  %235 = getelementptr inbounds ptr, ptr %234, i64 %227
  store ptr %231, ptr %235, align 8, !tbaa !5
  %236 = load ptr, ptr %218, align 8, !tbaa !101
  %237 = getelementptr inbounds ptr, ptr %236, i64 %227
  %238 = load ptr, ptr %237, align 8, !tbaa !5
  %239 = getelementptr inbounds i8, ptr %238, i64 3
  %240 = load ptr, ptr %220, align 8, !tbaa !101
  %241 = getelementptr inbounds ptr, ptr %240, i64 %227
  store ptr %239, ptr %241, align 8, !tbaa !5
  br label %242

242:                                              ; preds = %229, %226, %125, %213
  ret void

243:                                              ; preds = %49
  %244 = landingpad { ptr, i32 }
          cleanup
  br label %303

245:                                              ; preds = %64
  %246 = landingpad { ptr, i32 }
          cleanup
  br label %301

247:                                              ; preds = %81
  %248 = landingpad { ptr, i32 }
          cleanup
  br label %298

249:                                              ; preds = %106
  %250 = landingpad { ptr, i32 }
          cleanup
  br label %294

251:                                              ; preds = %111
  %252 = landingpad { ptr, i32 }
          cleanup
  br label %292

253:                                              ; preds = %143
  %254 = landingpad { ptr, i32 }
          cleanup
  %255 = icmp eq ptr %123, %134
  br i1 %255, label %260, label %256

256:                                              ; preds = %253, %256
  %257 = phi ptr [ %258, %256 ], [ %134, %253 ]
  %258 = getelementptr inbounds %class.StateMap, ptr %257, i64 -1
  tail call void @_ZN8StateMapD2Ev(ptr noundef nonnull align 8 dereferenceable(32) %258) #39
  %259 = icmp eq ptr %258, %123
  br i1 %259, label %260, label %256

260:                                              ; preds = %256, %253
  tail call void @_ZdaPv(ptr noundef nonnull %121) #42
  br label %292

261:                                              ; preds = %261, %224
  %262 = phi i64 [ 0, %224 ], [ %289, %261 ]
  %263 = phi i64 [ 0, %224 ], [ %290, %261 ]
  %264 = load ptr, ptr %217, align 8, !tbaa !97
  %265 = getelementptr inbounds %"class.ContextMap::E", ptr %264, i64 0, i32 2
  %266 = load ptr, ptr %218, align 8, !tbaa !101
  %267 = getelementptr inbounds ptr, ptr %266, i64 %262
  store ptr %265, ptr %267, align 8, !tbaa !5
  %268 = load ptr, ptr %219, align 8, !tbaa !101
  %269 = getelementptr inbounds ptr, ptr %268, i64 %262
  store ptr %265, ptr %269, align 8, !tbaa !5
  %270 = load ptr, ptr %218, align 8, !tbaa !101
  %271 = getelementptr inbounds ptr, ptr %270, i64 %262
  %272 = load ptr, ptr %271, align 8, !tbaa !5
  %273 = getelementptr inbounds i8, ptr %272, i64 3
  %274 = load ptr, ptr %220, align 8, !tbaa !101
  %275 = getelementptr inbounds ptr, ptr %274, i64 %262
  store ptr %273, ptr %275, align 8, !tbaa !5
  %276 = or i64 %262, 1
  %277 = load ptr, ptr %217, align 8, !tbaa !97
  %278 = getelementptr inbounds %"class.ContextMap::E", ptr %277, i64 0, i32 2
  %279 = load ptr, ptr %218, align 8, !tbaa !101
  %280 = getelementptr inbounds ptr, ptr %279, i64 %276
  store ptr %278, ptr %280, align 8, !tbaa !5
  %281 = load ptr, ptr %219, align 8, !tbaa !101
  %282 = getelementptr inbounds ptr, ptr %281, i64 %276
  store ptr %278, ptr %282, align 8, !tbaa !5
  %283 = load ptr, ptr %218, align 8, !tbaa !101
  %284 = getelementptr inbounds ptr, ptr %283, i64 %276
  %285 = load ptr, ptr %284, align 8, !tbaa !5
  %286 = getelementptr inbounds i8, ptr %285, i64 3
  %287 = load ptr, ptr %220, align 8, !tbaa !101
  %288 = getelementptr inbounds ptr, ptr %287, i64 %276
  store ptr %286, ptr %288, align 8, !tbaa !5
  %289 = add nuw nsw i64 %262, 2
  %290 = add i64 %263, 2
  %291 = icmp eq i64 %290, %225
  br i1 %291, label %226, label %261, !llvm.loop !104

292:                                              ; preds = %260, %251
  %293 = phi { ptr, i32 } [ %254, %260 ], [ %252, %251 ]
  tail call void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %112) #39
  br label %294

294:                                              ; preds = %292, %249
  %295 = phi ptr [ %113, %292 ], [ %54, %249 ]
  %296 = phi ptr [ %114, %292 ], [ %69, %249 ]
  %297 = phi { ptr, i32 } [ %293, %292 ], [ %250, %249 ]
  tail call void @_ZN5ArrayIjLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %296) #39
  br label %298

298:                                              ; preds = %294, %247
  %299 = phi ptr [ %295, %294 ], [ %54, %247 ]
  %300 = phi { ptr, i32 } [ %297, %294 ], [ %248, %247 ]
  tail call void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %299) #39
  br label %301

301:                                              ; preds = %298, %245
  %302 = phi { ptr, i32 } [ %300, %298 ], [ %246, %245 ]
  tail call void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %33) #39
  br label %303

303:                                              ; preds = %301, %243
  %304 = phi { ptr, i32 } [ %302, %301 ], [ %244, %243 ]
  tail call void @_ZN5ArrayIN10ContextMap1EELi64EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %4) #39
  resume { ptr, i32 } %304
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5ArrayIPhLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.6, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !98
  store i32 %1, ptr %0, align 8, !tbaa !99
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array.6, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = shl i32 %1, 3
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #41
  %17 = getelementptr inbounds %class.Array.6, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !100
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %20, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array.6, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !101
  br label %23

23:                                               ; preds = %5, %21
  ret void
}

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znam(i64 noundef) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN8StateMapD2Ev(ptr noundef nonnull align 8 dereferenceable(32) %0) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 8, !tbaa !10
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %5 = shl i32 %3, 2
  %6 = sub i32 %4, %5
  store i32 %6, ptr @programChecker, align 8, !tbaa !13
  %7 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %8 = icmp sgt i32 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  store i32 %6, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %10

10:                                               ; preds = %1, %9
  %11 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  tail call void @free(ptr noundef %12) #39
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(ptr noundef) local_unnamed_addr #10

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !99
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = shl i32 %2, 3
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array.6, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !100
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIN10ContextMap1EELi64EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !95
  %3 = shl i32 %2, 6
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %5 = sub i32 %4, %3
  %6 = add i32 %5, -64
  store i32 %6, ptr @programChecker, align 8, !tbaa !13
  %7 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %8 = icmp sgt i32 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  store i32 %6, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %10

10:                                               ; preds = %1, %9
  %11 = getelementptr inbounds %class.Array.5, ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !96
  tail call void @free(ptr noundef %12) #39
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN10ContextMapD2Ev(ptr nocapture noundef nonnull readonly align 8 dereferenceable(140) %0) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !103
  %4 = icmp eq ptr %3, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds i8, ptr %3, i64 -8
  %7 = load i64, ptr %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.StateMap, ptr %3, i64 %7
  br label %11

11:                                               ; preds = %9, %22
  %12 = phi ptr [ %13, %22 ], [ %10, %9 ]
  %13 = getelementptr inbounds %class.StateMap, ptr %12, i64 -1
  %14 = getelementptr %class.StateMap, ptr %12, i64 -1, i32 2
  %15 = load i32, ptr %14, align 8, !tbaa !10
  %16 = load i32, ptr @programChecker, align 8, !tbaa !13
  %17 = shl i32 %15, 2
  %18 = sub i32 %16, %17
  store i32 %18, ptr @programChecker, align 8, !tbaa !13
  %19 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %20 = icmp sgt i32 %18, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %11
  store i32 %18, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %22

22:                                               ; preds = %11, %21
  %23 = getelementptr %class.StateMap, ptr %12, i64 -1, i32 2, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  tail call void @free(ptr noundef %24) #39
  %25 = icmp eq ptr %13, %3
  br i1 %25, label %26, label %11

26:                                               ; preds = %22, %5
  tail call void @_ZdaPv(ptr noundef nonnull %6) #42
  br label %27

27:                                               ; preds = %26, %1
  %28 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6
  %29 = load i32, ptr %28, align 8, !tbaa !99
  %30 = load i32, ptr @programChecker, align 8, !tbaa !13
  %31 = shl i32 %29, 3
  %32 = sub i32 %30, %31
  store i32 %32, ptr @programChecker, align 8, !tbaa !13
  %33 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %34 = icmp sgt i32 %32, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %27
  store i32 %32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %36

36:                                               ; preds = %27, %35
  %37 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6, i32 2
  %38 = load ptr, ptr %37, align 8, !tbaa !100
  tail call void @free(ptr noundef %38) #39
  %39 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5
  %40 = load i32, ptr %39, align 8, !tbaa !10
  %41 = load i32, ptr @programChecker, align 8, !tbaa !13
  %42 = shl i32 %40, 2
  %43 = sub i32 %41, %42
  store i32 %43, ptr @programChecker, align 8, !tbaa !13
  %44 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %45 = icmp sgt i32 %43, %44
  br i1 %45, label %46, label %47

46:                                               ; preds = %36
  store i32 %43, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %47

47:                                               ; preds = %36, %46
  %48 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5, i32 2
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  tail call void @free(ptr noundef %49) #39
  %50 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4
  %51 = load i32, ptr %50, align 8, !tbaa !99
  %52 = load i32, ptr @programChecker, align 8, !tbaa !13
  %53 = shl i32 %51, 3
  %54 = sub i32 %52, %53
  store i32 %54, ptr @programChecker, align 8, !tbaa !13
  %55 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %56 = icmp sgt i32 %54, %55
  br i1 %56, label %57, label %58

57:                                               ; preds = %47
  store i32 %54, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %58

58:                                               ; preds = %47, %57
  %59 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4, i32 2
  %60 = load ptr, ptr %59, align 8, !tbaa !100
  tail call void @free(ptr noundef %60) #39
  %61 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3
  %62 = load i32, ptr %61, align 8, !tbaa !99
  %63 = load i32, ptr @programChecker, align 8, !tbaa !13
  %64 = shl i32 %62, 3
  %65 = sub i32 %63, %64
  store i32 %65, ptr @programChecker, align 8, !tbaa !13
  %66 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %67 = icmp sgt i32 %65, %66
  br i1 %67, label %68, label %69

68:                                               ; preds = %58
  store i32 %65, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %69

69:                                               ; preds = %58, %68
  %70 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3, i32 2
  %71 = load ptr, ptr %70, align 8, !tbaa !100
  tail call void @free(ptr noundef %71) #39
  %72 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2
  %73 = load i32, ptr %72, align 8, !tbaa !95
  %74 = shl i32 %73, 6
  %75 = load i32, ptr @programChecker, align 8, !tbaa !13
  %76 = sub i32 %75, %74
  %77 = add i32 %76, -64
  store i32 %77, ptr @programChecker, align 8, !tbaa !13
  %78 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %79 = icmp sgt i32 %77, %78
  br i1 %79, label %80, label %81

80:                                               ; preds = %69
  store i32 %77, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %81

81:                                               ; preds = %69, %80
  %82 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2, i32 2
  %83 = load ptr, ptr %82, align 8, !tbaa !96
  tail call void @free(ptr noundef %83) #39
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define dso_local noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr nocapture noundef nonnull align 8 dereferenceable(140) %0, ptr nocapture noundef nonnull align 8 dereferenceable(136) %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) local_unnamed_addr #12 align 2 {
  %7 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 8
  %8 = load i32, ptr %7, align 8, !tbaa !102
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %29

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3, i32 3
  %12 = sext i32 %5 to i64
  %13 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6, i32 3
  %14 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2
  %15 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5, i32 3
  %16 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2, i32 3
  %17 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4, i32 3
  %18 = and i32 %2, 3
  %19 = zext i32 %18 to i64
  %20 = and i32 %2, 1
  %21 = zext i32 %20 to i64
  %22 = trunc i32 %4 to i8
  %23 = sub nsw i32 8, %3
  %24 = getelementptr inbounds %class.Mixer, ptr %1, i64 0, i32 8
  %25 = getelementptr inbounds %class.Mixer, ptr %1, i64 0, i32 3, i32 3
  %26 = sub nsw i32 7, %3
  %27 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 7
  %28 = load ptr, ptr %11, align 8, !tbaa !101
  br label %32

29:                                               ; preds = %403, %6
  %30 = phi i32 [ 0, %6 ], [ %404, %403 ]
  %31 = icmp eq i32 %3, 7
  br i1 %31, label %409, label %410

32:                                               ; preds = %10, %403
  %33 = phi ptr [ %28, %10 ], [ %276, %403 ]
  %34 = phi i64 [ 0, %10 ], [ %405, %403 ]
  %35 = phi i32 [ 0, %10 ], [ %404, %403 ]
  %36 = getelementptr inbounds ptr, ptr %33, i64 %34
  %37 = load ptr, ptr %36, align 8, !tbaa !5
  %38 = icmp eq ptr %37, null
  br i1 %38, label %72, label %39

39:                                               ; preds = %32
  %40 = load i8, ptr %37, align 1, !tbaa !9
  %41 = zext i8 %40 to i64
  %42 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %41, i64 %12
  %43 = load i8, ptr %42, align 1, !tbaa !9
  %44 = icmp ugt i8 %43, -53
  br i1 %44, label %45, label %70

45:                                               ; preds = %39
  %46 = zext i8 %43 to i32
  %47 = load i32, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 1), align 8, !tbaa !105
  %48 = add nsw i32 %47, 1
  store i32 %48, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 1), align 8, !tbaa !105
  %49 = add i32 %47, 41
  %50 = and i32 %49, 63
  %51 = load ptr, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 0, i32 3), align 8, !tbaa !84
  %52 = zext i32 %50 to i64
  %53 = getelementptr inbounds i32, ptr %51, i64 %52
  %54 = load i32, ptr %53, align 4, !tbaa !25
  %55 = add i32 %47, 10
  %56 = and i32 %55, 63
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i32, ptr %51, i64 %57
  %59 = load i32, ptr %58, align 4, !tbaa !25
  %60 = xor i32 %59, %54
  %61 = and i32 %48, 63
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i32, ptr %51, i64 %62
  store i32 %60, ptr %63, align 4, !tbaa !25
  %64 = sub nuw nsw i32 452, %46
  %65 = lshr i32 %64, 3
  %66 = shl i32 %60, %65
  %67 = icmp eq i32 %66, 0
  %68 = add nsw i8 %43, -4
  %69 = select i1 %67, i8 %43, i8 %68
  br label %70

70:                                               ; preds = %45, %39
  %71 = phi i8 [ %43, %39 ], [ %69, %45 ]
  store i8 %71, ptr %37, align 1, !tbaa !9
  br label %72

72:                                               ; preds = %70, %32
  %73 = load i32, ptr @bpos, align 4, !tbaa !25
  %74 = icmp sgt i32 %73, 1
  br i1 %74, label %75, label %81

75:                                               ; preds = %72
  %76 = load ptr, ptr %13, align 8, !tbaa !101
  %77 = getelementptr inbounds ptr, ptr %76, i64 %34
  %78 = load ptr, ptr %77, align 8, !tbaa !5
  %79 = load i8, ptr %78, align 1, !tbaa !9
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %237, label %81

81:                                               ; preds = %75, %72
  switch i32 %73, label %110 [
    i32 1, label %82
    i32 3, label %82
    i32 6, label %82
    i32 4, label %88
    i32 7, label %88
    i32 2, label %94
    i32 5, label %94
  ]

82:                                               ; preds = %81, %81, %81
  %83 = load ptr, ptr %17, align 8, !tbaa !101
  %84 = getelementptr inbounds ptr, ptr %83, i64 %34
  %85 = load ptr, ptr %84, align 8, !tbaa !5
  %86 = getelementptr inbounds i8, ptr %85, i64 1
  %87 = getelementptr inbounds i8, ptr %86, i64 %21
  br label %237

88:                                               ; preds = %81, %81
  %89 = load ptr, ptr %17, align 8, !tbaa !101
  %90 = getelementptr inbounds ptr, ptr %89, i64 %34
  %91 = load ptr, ptr %90, align 8, !tbaa !5
  %92 = getelementptr inbounds i8, ptr %91, i64 3
  %93 = getelementptr inbounds i8, ptr %92, i64 %19
  br label %237

94:                                               ; preds = %81, %81
  %95 = load ptr, ptr %15, align 8, !tbaa !84
  %96 = getelementptr inbounds i32, ptr %95, i64 %34
  %97 = load i32, ptr %96, align 4, !tbaa !25
  %98 = add i32 %97, %2
  %99 = load i32, ptr %14, align 8, !tbaa !95
  %100 = add nsw i32 %99, -1
  %101 = and i32 %100, %98
  %102 = load ptr, ptr %16, align 8, !tbaa !97
  %103 = sext i32 %101 to i64
  %104 = getelementptr inbounds %"class.ContextMap::E", ptr %102, i64 %103
  %105 = lshr i32 %97, 16
  %106 = trunc i32 %105 to i16
  %107 = tail call noundef ptr @_ZN10ContextMap1E3getEt(ptr noundef nonnull align 2 dereferenceable(64) %104, i16 noundef zeroext %106)
  %108 = load ptr, ptr %11, align 8, !tbaa !101
  %109 = getelementptr inbounds ptr, ptr %108, i64 %34
  store ptr %107, ptr %109, align 8, !tbaa !5
  br label %237

110:                                              ; preds = %81
  %111 = load ptr, ptr %15, align 8, !tbaa !84
  %112 = getelementptr inbounds i32, ptr %111, i64 %34
  %113 = load i32, ptr %112, align 4, !tbaa !25
  %114 = add i32 %113, %2
  %115 = load i32, ptr %14, align 8, !tbaa !95
  %116 = add nsw i32 %115, -1
  %117 = and i32 %116, %114
  %118 = load ptr, ptr %16, align 8, !tbaa !97
  %119 = sext i32 %117 to i64
  %120 = getelementptr inbounds %"class.ContextMap::E", ptr %118, i64 %119
  %121 = lshr i32 %113, 16
  %122 = trunc i32 %121 to i16
  %123 = tail call noundef ptr @_ZN10ContextMap1E3getEt(ptr noundef nonnull align 2 dereferenceable(64) %120, i16 noundef zeroext %122)
  %124 = load ptr, ptr %11, align 8, !tbaa !101
  %125 = getelementptr inbounds ptr, ptr %124, i64 %34
  store ptr %123, ptr %125, align 8, !tbaa !5
  %126 = load ptr, ptr %17, align 8, !tbaa !101
  %127 = getelementptr inbounds ptr, ptr %126, i64 %34
  store ptr %123, ptr %127, align 8, !tbaa !5
  %128 = load ptr, ptr %17, align 8, !tbaa !101
  %129 = getelementptr inbounds ptr, ptr %128, i64 %34
  %130 = load ptr, ptr %129, align 8, !tbaa !5
  %131 = getelementptr inbounds i8, ptr %130, i64 3
  %132 = load i8, ptr %131, align 1, !tbaa !9
  %133 = icmp eq i8 %132, 2
  br i1 %133, label %134, label %204

134:                                              ; preds = %110
  %135 = getelementptr inbounds i8, ptr %130, i64 4
  %136 = load i8, ptr %135, align 1, !tbaa !9
  %137 = zext i8 %136 to i32
  %138 = or i32 %137, 256
  %139 = load ptr, ptr %15, align 8, !tbaa !84
  %140 = getelementptr inbounds i32, ptr %139, i64 %34
  %141 = load i32, ptr %140, align 4, !tbaa !25
  %142 = lshr i32 %138, 6
  %143 = add i32 %142, %141
  %144 = load i32, ptr %14, align 8, !tbaa !95
  %145 = add nsw i32 %144, -1
  %146 = and i32 %143, %145
  %147 = load ptr, ptr %16, align 8, !tbaa !97
  %148 = sext i32 %146 to i64
  %149 = getelementptr inbounds %"class.ContextMap::E", ptr %147, i64 %148
  %150 = lshr i32 %141, 16
  %151 = trunc i32 %150 to i16
  %152 = tail call noundef ptr @_ZN10ContextMap1E3getEt(ptr noundef nonnull align 2 dereferenceable(64) %149, i16 noundef zeroext %151)
  %153 = lshr i32 %137, 5
  %154 = and i32 %153, 1
  %155 = add nuw nsw i32 %154, 1
  %156 = trunc i32 %155 to i8
  store i8 %156, ptr %152, align 1, !tbaa !9
  %157 = lshr i32 %138, 4
  %158 = trunc i32 %157 to i8
  %159 = and i8 %158, 1
  %160 = add nuw nsw i8 %159, 1
  %161 = zext i32 %155 to i64
  %162 = getelementptr inbounds i8, ptr %152, i64 %161
  store i8 %160, ptr %162, align 1, !tbaa !9
  %163 = lshr i32 %138, 3
  %164 = trunc i32 %163 to i8
  %165 = and i8 %164, 1
  %166 = add nuw nsw i8 %165, 1
  %167 = and i32 %157, 3
  %168 = add nuw nsw i32 %167, 3
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds i8, ptr %152, i64 %169
  store i8 %166, ptr %170, align 1, !tbaa !9
  %171 = load ptr, ptr %15, align 8, !tbaa !84
  %172 = getelementptr inbounds i32, ptr %171, i64 %34
  %173 = load i32, ptr %172, align 4, !tbaa !25
  %174 = add i32 %173, %163
  %175 = load i32, ptr %14, align 8, !tbaa !95
  %176 = add nsw i32 %175, -1
  %177 = and i32 %176, %174
  %178 = load ptr, ptr %16, align 8, !tbaa !97
  %179 = sext i32 %177 to i64
  %180 = getelementptr inbounds %"class.ContextMap::E", ptr %178, i64 %179
  %181 = lshr i32 %173, 16
  %182 = trunc i32 %181 to i16
  %183 = tail call noundef ptr @_ZN10ContextMap1E3getEt(ptr noundef nonnull align 2 dereferenceable(64) %180, i16 noundef zeroext %182)
  %184 = lshr i32 %137, 2
  %185 = and i32 %184, 1
  %186 = add nuw nsw i32 %185, 1
  %187 = trunc i32 %186 to i8
  store i8 %187, ptr %183, align 1, !tbaa !9
  %188 = lshr i32 %138, 1
  %189 = trunc i32 %188 to i8
  %190 = and i8 %189, 1
  %191 = add nuw nsw i8 %190, 1
  %192 = zext i32 %186 to i64
  %193 = getelementptr inbounds i8, ptr %183, i64 %192
  store i8 %191, ptr %193, align 1, !tbaa !9
  %194 = and i8 %136, 1
  %195 = add nuw nsw i8 %194, 1
  %196 = and i32 %188, 3
  %197 = add nuw nsw i32 %196, 3
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds i8, ptr %183, i64 %198
  store i8 %195, ptr %199, align 1, !tbaa !9
  %200 = load ptr, ptr %17, align 8, !tbaa !101
  %201 = getelementptr inbounds ptr, ptr %200, i64 %34
  %202 = load ptr, ptr %201, align 8, !tbaa !5
  %203 = getelementptr inbounds i8, ptr %202, i64 6
  store i8 0, ptr %203, align 1, !tbaa !9
  br label %204

204:                                              ; preds = %134, %110
  %205 = load ptr, ptr %13, align 8, !tbaa !101
  %206 = getelementptr inbounds ptr, ptr %205, i64 %34
  %207 = load ptr, ptr %206, align 8, !tbaa !5
  %208 = load i8, ptr %207, align 1, !tbaa !9
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %210, label %215

210:                                              ; preds = %204
  store i8 2, ptr %207, align 1, !tbaa !9
  %211 = load ptr, ptr %13, align 8, !tbaa !101
  %212 = getelementptr inbounds ptr, ptr %211, i64 %34
  %213 = load ptr, ptr %212, align 8, !tbaa !5
  %214 = getelementptr inbounds i8, ptr %213, i64 1
  store i8 %22, ptr %214, align 1, !tbaa !9
  br label %232

215:                                              ; preds = %204
  %216 = getelementptr inbounds i8, ptr %207, i64 1
  %217 = load i8, ptr %216, align 1, !tbaa !9
  %218 = zext i8 %217 to i32
  %219 = icmp eq i32 %218, %4
  br i1 %219, label %225, label %220

220:                                              ; preds = %215
  store i8 1, ptr %207, align 1, !tbaa !9
  %221 = load ptr, ptr %13, align 8, !tbaa !101
  %222 = getelementptr inbounds ptr, ptr %221, i64 %34
  %223 = load ptr, ptr %222, align 8, !tbaa !5
  %224 = getelementptr inbounds i8, ptr %223, i64 1
  store i8 %22, ptr %224, align 1, !tbaa !9
  br label %232

225:                                              ; preds = %215
  %226 = icmp ult i8 %208, -2
  br i1 %226, label %227, label %229

227:                                              ; preds = %225
  %228 = add nuw i8 %208, 2
  store i8 %228, ptr %207, align 1, !tbaa !9
  br label %232

229:                                              ; preds = %225
  %230 = icmp eq i8 %208, -1
  br i1 %230, label %231, label %232

231:                                              ; preds = %229
  store i8 -128, ptr %207, align 1, !tbaa !9
  br label %232

232:                                              ; preds = %220, %229, %231, %227, %210
  %233 = load ptr, ptr %17, align 8, !tbaa !101
  %234 = getelementptr inbounds ptr, ptr %233, i64 %34
  %235 = load ptr, ptr %234, align 8, !tbaa !5
  %236 = getelementptr inbounds i8, ptr %235, i64 3
  br label %237

237:                                              ; preds = %75, %82, %88, %94, %232
  %238 = phi ptr [ %11, %82 ], [ %11, %88 ], [ %17, %94 ], [ %13, %232 ], [ %11, %75 ]
  %239 = phi ptr [ %87, %82 ], [ %93, %88 ], [ %107, %94 ], [ %236, %232 ], [ null, %75 ]
  %240 = load ptr, ptr %238, align 8, !tbaa !101
  %241 = getelementptr inbounds ptr, ptr %240, i64 %34
  store ptr %239, ptr %241, align 8, !tbaa !5
  %242 = load ptr, ptr %13, align 8, !tbaa !101
  %243 = getelementptr inbounds ptr, ptr %242, i64 %34
  %244 = load ptr, ptr %243, align 8, !tbaa !5
  %245 = getelementptr inbounds i8, ptr %244, i64 1
  %246 = load i8, ptr %245, align 1, !tbaa !9
  %247 = zext i8 %246 to i32
  %248 = or i32 %247, 256
  %249 = lshr i32 %248, %23
  %250 = icmp eq i32 %249, %2
  br i1 %250, label %251, label %269

251:                                              ; preds = %237
  %252 = load i8, ptr %244, align 1, !tbaa !9
  %253 = lshr i32 %247, %26
  %254 = shl nuw nsw i32 %253, 1
  %255 = and i32 %254, 2
  %256 = add nuw nsw i32 %255, 65535
  %257 = zext i8 %252 to i64
  %258 = add nuw nsw i64 %257, 1
  %259 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %260 = getelementptr inbounds i8, ptr %259, i64 %258
  %261 = load i8, ptr %260, align 1, !tbaa !9
  %262 = zext i8 %261 to i32
  %263 = and i8 %252, 1
  %264 = xor i8 %263, 3
  %265 = zext i8 %264 to i32
  %266 = shl nuw nsw i32 %262, %265
  %267 = mul nuw nsw i32 %266, %256
  %268 = trunc i32 %267 to i16
  br label %269

269:                                              ; preds = %237, %251
  %270 = phi i16 [ %268, %251 ], [ 0, %237 ]
  %271 = load i32, ptr %24, align 8, !tbaa !64
  %272 = add nsw i32 %271, 1
  store i32 %272, ptr %24, align 8, !tbaa !64
  %273 = load ptr, ptr %25, align 8, !tbaa !59
  %274 = sext i32 %271 to i64
  %275 = getelementptr inbounds i16, ptr %273, i64 %274
  store i16 %270, ptr %275, align 2, !tbaa !31
  %276 = load ptr, ptr %11, align 8, !tbaa !101
  %277 = getelementptr inbounds ptr, ptr %276, i64 %34
  %278 = load ptr, ptr %277, align 8, !tbaa !5
  %279 = icmp eq ptr %278, null
  br i1 %279, label %358, label %280

280:                                              ; preds = %269
  %281 = load i8, ptr %278, align 1, !tbaa !9
  %282 = zext i8 %281 to i32
  %283 = load ptr, ptr %27, align 8, !tbaa !103
  %284 = getelementptr inbounds %class.StateMap, ptr %283, i64 %34, i32 1
  %285 = load i32, ptr %284, align 4, !tbaa !82
  %286 = getelementptr inbounds %class.StateMap, ptr %283, i64 %34, i32 2, i32 3
  %287 = load ptr, ptr %286, align 8, !tbaa !84
  %288 = sext i32 %285 to i64
  %289 = getelementptr inbounds i32, ptr %287, i64 %288
  %290 = load i32, ptr %289, align 4, !tbaa !25
  %291 = and i32 %290, 1023
  %292 = icmp eq i32 %291, 1023
  %293 = add i32 %290, 1
  %294 = or i32 %290, 1023
  %295 = select i1 %292, i32 %294, i32 %293
  %296 = lshr i32 %290, 10
  %297 = load i32, ptr @y, align 4, !tbaa !25
  %298 = shl i32 %297, 22
  %299 = sub nsw i32 %298, %296
  %300 = ashr i32 %299, 3
  %301 = zext i32 %291 to i64
  %302 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %301
  %303 = load i32, ptr %302, align 4, !tbaa !25
  %304 = mul nsw i32 %300, %303
  %305 = and i32 %304, -1024
  %306 = add i32 %305, %295
  store i32 %306, ptr %289, align 4, !tbaa !25
  store i32 %282, ptr %284, align 4, !tbaa !82
  %307 = zext i8 %281 to i64
  %308 = getelementptr inbounds i32, ptr %287, i64 %307
  %309 = load i32, ptr %308, align 4, !tbaa !25
  %310 = lshr i32 %309, 20
  %311 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %307, i64 2
  %312 = load i8, ptr %311, align 2, !tbaa !9
  %313 = icmp eq i8 %312, 0
  %314 = sext i1 %313 to i32
  %315 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %307, i64 3
  %316 = load i8, ptr %315, align 1, !tbaa !9
  %317 = icmp eq i8 %316, 0
  %318 = sext i1 %317 to i32
  %319 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %320 = zext i32 %310 to i64
  %321 = getelementptr inbounds i16, ptr %319, i64 %320
  %322 = load i16, ptr %321, align 2, !tbaa !31
  %323 = ashr i16 %322, 2
  %324 = load i32, ptr %24, align 8, !tbaa !64
  %325 = add nsw i32 %324, 1
  %326 = sext i32 %324 to i64
  %327 = getelementptr inbounds i16, ptr %273, i64 %326
  store i16 %323, ptr %327, align 2, !tbaa !31
  %328 = lshr i32 %309, 24
  %329 = xor i32 %328, 255
  %330 = sub nsw i32 %328, %329
  %331 = trunc i32 %330 to i16
  %332 = add nsw i32 %324, 2
  %333 = sext i32 %325 to i64
  %334 = getelementptr inbounds i16, ptr %273, i64 %333
  store i16 %331, ptr %334, align 2, !tbaa !31
  %335 = sub nsw i32 %318, %314
  %336 = trunc i32 %335 to i16
  %337 = mul nsw i16 %323, %336
  %338 = add nsw i32 %324, 3
  %339 = sext i32 %332 to i64
  %340 = getelementptr inbounds i16, ptr %273, i64 %339
  store i16 %337, ptr %340, align 2, !tbaa !31
  %341 = and i32 %328, %314
  %342 = and i32 %329, %318
  %343 = sub nsw i32 %341, %342
  %344 = trunc i32 %343 to i16
  %345 = add nsw i32 %324, 4
  %346 = sext i32 %338 to i64
  %347 = getelementptr inbounds i16, ptr %273, i64 %346
  store i16 %344, ptr %347, align 2, !tbaa !31
  %348 = and i32 %328, %318
  %349 = and i32 %329, %314
  %350 = sub nsw i32 %348, %349
  %351 = trunc i32 %350 to i16
  %352 = add nsw i32 %324, 5
  store i32 %352, ptr %24, align 8, !tbaa !64
  %353 = sext i32 %345 to i64
  %354 = getelementptr inbounds i16, ptr %273, i64 %353
  store i16 %351, ptr %354, align 2, !tbaa !31
  %355 = icmp ne i8 %281, 0
  %356 = zext i1 %355 to i32
  %357 = add nsw i32 %35, %356
  br label %403

358:                                              ; preds = %269
  %359 = load ptr, ptr %27, align 8, !tbaa !103
  %360 = getelementptr inbounds %class.StateMap, ptr %359, i64 %34, i32 1
  %361 = load i32, ptr %360, align 4, !tbaa !82
  %362 = getelementptr inbounds %class.StateMap, ptr %359, i64 %34, i32 2, i32 3
  %363 = load ptr, ptr %362, align 8, !tbaa !84
  %364 = sext i32 %361 to i64
  %365 = getelementptr inbounds i32, ptr %363, i64 %364
  %366 = load i32, ptr %365, align 4, !tbaa !25
  %367 = and i32 %366, 1023
  %368 = icmp eq i32 %367, 1023
  %369 = add i32 %366, 1
  %370 = or i32 %366, 1023
  %371 = select i1 %368, i32 %370, i32 %369
  %372 = lshr i32 %366, 10
  %373 = load i32, ptr @y, align 4, !tbaa !25
  %374 = shl i32 %373, 22
  %375 = sub nsw i32 %374, %372
  %376 = ashr i32 %375, 3
  %377 = zext i32 %367 to i64
  %378 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %377
  %379 = load i32, ptr %378, align 4, !tbaa !25
  %380 = mul nsw i32 %376, %379
  %381 = and i32 %380, -1024
  %382 = add i32 %381, %371
  store i32 %382, ptr %365, align 4, !tbaa !25
  store i32 0, ptr %360, align 4, !tbaa !82
  %383 = load i32, ptr %363, align 4, !tbaa !25
  %384 = lshr i32 %383, 20
  %385 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %386 = zext i32 %384 to i64
  %387 = getelementptr inbounds i16, ptr %385, i64 %386
  %388 = load i16, ptr %387, align 2, !tbaa !31
  %389 = ashr i16 %388, 2
  %390 = load i32, ptr %24, align 8, !tbaa !64
  %391 = add nsw i32 %390, 1
  %392 = sext i32 %390 to i64
  %393 = getelementptr inbounds i16, ptr %273, i64 %392
  store i16 %389, ptr %393, align 2, !tbaa !31
  %394 = lshr i32 %383, 23
  %395 = trunc i32 %394 to i16
  %396 = and i16 %395, 510
  %397 = add nsw i16 %396, -255
  %398 = sext i32 %391 to i64
  %399 = getelementptr inbounds i16, ptr %273, i64 %398
  %400 = add nsw i32 %390, 5
  store i32 %400, ptr %24, align 8, !tbaa !64
  %401 = insertelement <4 x i16> <i16 poison, i16 0, i16 poison, i16 poison>, i16 %397, i64 0
  %402 = shufflevector <4 x i16> %401, <4 x i16> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  store <4 x i16> %402, ptr %399, align 2, !tbaa !31
  br label %403

403:                                              ; preds = %280, %358
  %404 = phi i32 [ %357, %280 ], [ %35, %358 ]
  %405 = add nuw nsw i64 %34, 1
  %406 = load i32, ptr %7, align 8, !tbaa !102
  %407 = sext i32 %406 to i64
  %408 = icmp slt i64 %405, %407
  br i1 %408, label %32, label %29, !llvm.loop !107

409:                                              ; preds = %29
  store i32 0, ptr %7, align 8, !tbaa !102
  br label %410

410:                                              ; preds = %409, %29
  ret i32 %30
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr dso_local noundef ptr @_ZN10ContextMap1E3getEt(ptr noundef nonnull align 2 dereferenceable(64) %0, i16 noundef zeroext %1) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 1
  %4 = load i8, ptr %3, align 2, !tbaa !108
  %5 = and i8 %4, 15
  %6 = zext i8 %5 to i64
  %7 = getelementptr inbounds [7 x i16], ptr %0, i64 0, i64 %6
  %8 = load i16, ptr %7, align 2, !tbaa !31
  %9 = icmp eq i16 %8, %1
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = zext i8 %4 to i32
  %12 = and i32 %11, 15
  %13 = lshr i32 %11, 4
  %14 = load i16, ptr %0, align 2, !tbaa !31
  %15 = icmp eq i16 %14, %1
  br i1 %15, label %129, label %18

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 %6
  br label %136

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 0
  %20 = load i8, ptr %19, align 1, !tbaa !9
  %21 = zext i8 %20 to i32
  %22 = icmp eq i32 %12, 0
  %23 = icmp ult i8 %4, 16
  %24 = or i1 %22, %23
  %25 = select i1 %24, i32 65535, i32 %21
  %26 = getelementptr inbounds [7 x i16], ptr %0, i64 0, i64 1
  %27 = load i16, ptr %26, align 2, !tbaa !31
  %28 = icmp eq i16 %27, %1
  br i1 %28, label %129, label %29

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 1
  %31 = load i8, ptr %30, align 2, !tbaa !9
  %32 = zext i8 %31 to i32
  %33 = icmp ugt i32 %25, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = icmp ne i32 %12, 1
  %36 = icmp ne i32 %13, 1
  %37 = and i1 %35, %36
  %38 = select i1 %37, i32 %32, i32 %25
  %39 = zext i1 %37 to i32
  br label %40

40:                                               ; preds = %34, %29
  %41 = phi i32 [ %25, %29 ], [ %38, %34 ]
  %42 = phi i32 [ 0, %29 ], [ %39, %34 ]
  %43 = getelementptr inbounds [7 x i16], ptr %0, i64 0, i64 2
  %44 = load i16, ptr %43, align 2, !tbaa !31
  %45 = icmp eq i16 %44, %1
  br i1 %45, label %129, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 2
  %48 = load i8, ptr %47, align 1, !tbaa !9
  %49 = zext i8 %48 to i32
  %50 = icmp ugt i32 %41, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %46
  %52 = icmp eq i32 %12, 2
  %53 = icmp eq i32 %13, 2
  %54 = or i1 %52, %53
  %55 = select i1 %54, i32 %41, i32 %49
  %56 = select i1 %54, i32 %42, i32 2
  br label %57

57:                                               ; preds = %51, %46
  %58 = phi i32 [ %41, %46 ], [ %55, %51 ]
  %59 = phi i32 [ %42, %46 ], [ %56, %51 ]
  %60 = getelementptr inbounds [7 x i16], ptr %0, i64 0, i64 3
  %61 = load i16, ptr %60, align 2, !tbaa !31
  %62 = icmp eq i16 %61, %1
  br i1 %62, label %129, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 3
  %65 = load i8, ptr %64, align 2, !tbaa !9
  %66 = zext i8 %65 to i32
  %67 = icmp ugt i32 %58, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %63
  %69 = icmp eq i32 %12, 3
  %70 = icmp eq i32 %13, 3
  %71 = or i1 %69, %70
  %72 = select i1 %71, i32 %58, i32 %66
  %73 = select i1 %71, i32 %59, i32 3
  br label %74

74:                                               ; preds = %68, %63
  %75 = phi i32 [ %58, %63 ], [ %72, %68 ]
  %76 = phi i32 [ %59, %63 ], [ %73, %68 ]
  %77 = getelementptr inbounds [7 x i16], ptr %0, i64 0, i64 4
  %78 = load i16, ptr %77, align 2, !tbaa !31
  %79 = icmp eq i16 %78, %1
  br i1 %79, label %129, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 4
  %82 = load i8, ptr %81, align 1, !tbaa !9
  %83 = zext i8 %82 to i32
  %84 = icmp ugt i32 %75, %83
  br i1 %84, label %85, label %91

85:                                               ; preds = %80
  %86 = icmp eq i32 %12, 4
  %87 = icmp eq i32 %13, 4
  %88 = or i1 %86, %87
  %89 = select i1 %88, i32 %75, i32 %83
  %90 = select i1 %88, i32 %76, i32 4
  br label %91

91:                                               ; preds = %85, %80
  %92 = phi i32 [ %75, %80 ], [ %89, %85 ]
  %93 = phi i32 [ %76, %80 ], [ %90, %85 ]
  %94 = getelementptr inbounds [7 x i16], ptr %0, i64 0, i64 5
  %95 = load i16, ptr %94, align 2, !tbaa !31
  %96 = icmp eq i16 %95, %1
  br i1 %96, label %129, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 5
  %99 = load i8, ptr %98, align 2, !tbaa !9
  %100 = zext i8 %99 to i32
  %101 = icmp ugt i32 %92, %100
  br i1 %101, label %102, label %108

102:                                              ; preds = %97
  %103 = icmp eq i32 %12, 5
  %104 = icmp eq i32 %13, 5
  %105 = or i1 %103, %104
  %106 = select i1 %105, i32 %92, i32 %100
  %107 = select i1 %105, i32 %93, i32 5
  br label %108

108:                                              ; preds = %102, %97
  %109 = phi i32 [ %92, %97 ], [ %106, %102 ]
  %110 = phi i32 [ %93, %97 ], [ %107, %102 ]
  %111 = getelementptr inbounds [7 x i16], ptr %0, i64 0, i64 6
  %112 = load i16, ptr %111, align 2, !tbaa !31
  %113 = icmp eq i16 %112, %1
  br i1 %113, label %129, label %114

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 6
  %116 = load i8, ptr %115, align 1, !tbaa !9
  %117 = zext i8 %116 to i32
  %118 = icmp ugt i32 %109, %117
  %119 = icmp eq i32 %12, 6
  %120 = icmp eq i32 %13, 6
  %121 = or i1 %119, %120
  %122 = select i1 %121, i32 %110, i32 6
  %123 = select i1 %118, i32 %122, i32 %110
  %124 = trunc i32 %123 to i8
  %125 = or i8 %124, -16
  store i8 %125, ptr %3, align 2, !tbaa !108
  %126 = zext i32 %123 to i64
  %127 = getelementptr inbounds [7 x i16], ptr %0, i64 0, i64 %126
  store i16 %1, ptr %127, align 2, !tbaa !31
  %128 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 %126
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(7) %128, i8 0, i64 7, i1 false)
  br label %136

129:                                              ; preds = %108, %91, %74, %57, %40, %18, %10
  %130 = phi i32 [ 0, %10 ], [ 1, %18 ], [ 2, %40 ], [ 3, %57 ], [ 4, %74 ], [ 5, %91 ], [ 6, %108 ]
  %131 = zext i32 %130 to i64
  %132 = shl nuw nsw i32 %11, 4
  %133 = or i32 %130, %132
  %134 = trunc i32 %133 to i8
  store i8 %134, ptr %3, align 2, !tbaa !108
  %135 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 %131
  br label %136

136:                                              ; preds = %129, %114, %16
  %137 = phi ptr [ %17, %16 ], [ %128, %114 ], [ %135, %129 ]
  ret ptr %137
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z10matchModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ10matchModelR5MixerE1t acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ10matchModelR5MixerE1t) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @level, align 4, !tbaa !25
  %9 = shl i32 65536, %8
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ10matchModelR5MixerE1t, i32 noundef %9)
          to label %10 unwind label %52

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ10matchModelR5MixerE1t, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ10matchModelR5MixerE1t) #39
  br label %12

12:                                               ; preds = %10, %4, %1
  %13 = load atomic i8, ptr @_ZGVZ10matchModelR5MixerE4scm1 acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %21, !prof !110

15:                                               ; preds = %12
  %16 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ10matchModelR5MixerE4scm1) #39
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ10matchModelR5MixerE4scm1, i32 noundef 131072)
          to label %19 unwind label %54

19:                                               ; preds = %18
  %20 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ10matchModelR5MixerE4scm1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ10matchModelR5MixerE4scm1) #39
  br label %21

21:                                               ; preds = %19, %15, %12
  %22 = load i32, ptr @bpos, align 4, !tbaa !25
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  %25 = load i32, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !25
  br label %105

26:                                               ; preds = %21
  %27 = load i32, ptr @_ZZ10matchModelR5MixerE1h, align 4, !tbaa !25
  %28 = mul i32 %27, 7976
  %29 = load i32, ptr @pos, align 4, !tbaa !25
  %30 = add nsw i32 %29, -1
  %31 = load i32, ptr @buf, align 8, !tbaa !20
  %32 = add nsw i32 %31, -1
  %33 = and i32 %32, %30
  %34 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %35 = sext i32 %33 to i64
  %36 = getelementptr inbounds i8, ptr %34, i64 %35
  %37 = load i8, ptr %36, align 1, !tbaa !9
  %38 = zext i8 %37 to i32
  %39 = or i32 %28, 1
  %40 = add i32 %39, %38
  %41 = load i32, ptr @_ZZ10matchModelR5MixerE1t, align 8, !tbaa !51
  %42 = add nsw i32 %41, -1
  %43 = and i32 %40, %42
  store i32 %43, ptr @_ZZ10matchModelR5MixerE1h, align 4, !tbaa !25
  %44 = load i32, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !25
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %26
  %47 = add nsw i32 %44, 1
  store i32 %47, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !25
  %48 = load i32, ptr @_ZZ10matchModelR5MixerE3ptr, align 4, !tbaa !25
  %49 = add nsw i32 %48, 1
  store i32 %49, ptr @_ZZ10matchModelR5MixerE3ptr, align 4, !tbaa !25
  %50 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ10matchModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !61
  %51 = sext i32 %43 to i64
  br label %95

52:                                               ; preds = %7
  %53 = landingpad { ptr, i32 }
          cleanup
  br label %218

54:                                               ; preds = %18
  %55 = landingpad { ptr, i32 }
          cleanup
  br label %218

56:                                               ; preds = %26
  %57 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ10matchModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !61
  %58 = sext i32 %43 to i64
  %59 = getelementptr inbounds i32, ptr %57, i64 %58
  %60 = load i32, ptr %59, align 4, !tbaa !25
  store i32 %60, ptr @_ZZ10matchModelR5MixerE3ptr, align 4, !tbaa !25
  %61 = icmp ne i32 %60, 0
  %62 = sub nsw i32 %29, %60
  %63 = icmp slt i32 %62, %31
  %64 = select i1 %61, i1 %63, i1 false
  br i1 %64, label %65, label %95

65:                                               ; preds = %56
  %66 = add nsw i32 %29, -1
  %67 = and i32 %66, %32
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8, ptr %34, i64 %68
  %70 = load i8, ptr %69, align 1, !tbaa !9
  %71 = add i32 %60, -1
  %72 = and i32 %71, %32
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, ptr %34, i64 %73
  %75 = load i8, ptr %74, align 1, !tbaa !9
  %76 = icmp eq i8 %70, %75
  br i1 %76, label %77, label %95

77:                                               ; preds = %65, %77
  %78 = phi i32 [ %79, %77 ], [ 1, %65 ]
  %79 = add nuw nsw i32 %78, 1
  %80 = sub nsw i32 %29, %79
  %81 = and i32 %80, %32
  %82 = sext i32 %81 to i64
  %83 = getelementptr inbounds i8, ptr %34, i64 %82
  %84 = load i8, ptr %83, align 1, !tbaa !9
  %85 = xor i32 %78, -1
  %86 = add i32 %60, %85
  %87 = and i32 %86, %32
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i8, ptr %34, i64 %88
  %90 = load i8, ptr %89, align 1, !tbaa !9
  %91 = icmp eq i8 %84, %90
  %92 = icmp ult i32 %78, 65534
  %93 = select i1 %91, i1 %92, i1 false
  br i1 %93, label %77, label %94, !llvm.loop !111

94:                                               ; preds = %77
  store i32 %78, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !25
  br label %95

95:                                               ; preds = %65, %94, %56, %46
  %96 = phi i64 [ %58, %65 ], [ %58, %94 ], [ %58, %56 ], [ %51, %46 ]
  %97 = phi i32 [ 0, %65 ], [ %78, %94 ], [ 0, %56 ], [ %47, %46 ]
  %98 = phi ptr [ %57, %65 ], [ %57, %94 ], [ %57, %56 ], [ %50, %46 ]
  %99 = getelementptr inbounds i32, ptr %98, i64 %96
  store i32 %29, ptr %99, align 4, !tbaa !25
  store i32 %97, ptr @_ZZ10matchModelR5MixerE6result, align 4, !tbaa !25
  %100 = load i32, ptr @pos, align 4, !tbaa !25
  %101 = shl i32 %100, 8
  %102 = load i32, ptr @_ZZ10matchModelR5MixerE4scm1, align 8, !tbaa !74
  %103 = add nsw i32 %102, -256
  %104 = and i32 %103, %101
  store i32 %104, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ10matchModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  br label %105

105:                                              ; preds = %24, %95
  %106 = phi i32 [ %25, %24 ], [ %97, %95 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %175, label %108

108:                                              ; preds = %105
  %109 = load i32, ptr @pos, align 4, !tbaa !25
  %110 = add nsw i32 %109, -1
  %111 = load i32, ptr @buf, align 8, !tbaa !20
  %112 = add nsw i32 %111, -1
  %113 = and i32 %112, %110
  %114 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %115 = sext i32 %113 to i64
  %116 = getelementptr inbounds i8, ptr %114, i64 %115
  %117 = load i8, ptr %116, align 1, !tbaa !9
  %118 = load i32, ptr @_ZZ10matchModelR5MixerE3ptr, align 4, !tbaa !25
  %119 = add nsw i32 %118, -1
  %120 = and i32 %119, %112
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8, ptr %114, i64 %121
  %123 = load i8, ptr %122, align 1, !tbaa !9
  %124 = icmp eq i8 %117, %123
  br i1 %124, label %125, label %167

125:                                              ; preds = %108
  %126 = load i32, ptr @c0, align 4, !tbaa !25
  %127 = and i32 %118, %112
  %128 = sext i32 %127 to i64
  %129 = getelementptr inbounds i8, ptr %114, i64 %128
  %130 = load i8, ptr %129, align 1, !tbaa !9
  %131 = zext i8 %130 to i32
  %132 = or i32 %131, 256
  %133 = load i32, ptr @bpos, align 4, !tbaa !25
  %134 = sub nsw i32 8, %133
  %135 = lshr i32 %132, %134
  %136 = icmp eq i32 %126, %135
  br i1 %136, label %137, label %167

137:                                              ; preds = %125
  %138 = icmp sgt i32 %106, 65534
  br i1 %138, label %139, label %140

139:                                              ; preds = %137
  store i32 65534, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !25
  br label %140

140:                                              ; preds = %139, %137
  %141 = phi i32 [ 65534, %139 ], [ %106, %137 ]
  %142 = sub nsw i32 7, %133
  %143 = shl nuw i32 1, %142
  %144 = and i32 %143, %131
  %145 = icmp eq i32 %144, 0
  %146 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %147 = and i32 %141, 65535
  %148 = zext i32 %147 to i64
  %149 = getelementptr inbounds i8, ptr %146, i64 %148
  %150 = load i8, ptr %149, align 1, !tbaa !9
  %151 = zext i8 %150 to i16
  %152 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %153 = load i32, ptr %152, align 8, !tbaa !64
  %154 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %155 = load ptr, ptr %154, align 8, !tbaa !59
  %156 = sext i32 %153 to i64
  %157 = getelementptr inbounds i16, ptr %155, i64 %156
  %158 = tail call i32 @llvm.smin.i32(i32 %141, i32 32)
  %159 = trunc i32 %158 to i16
  %160 = add nsw i32 %153, 2
  br i1 %145, label %164, label %161

161:                                              ; preds = %140
  %162 = shl nuw nsw i16 %151, 2
  store i16 %162, ptr %157, align 2, !tbaa !31
  %163 = shl i16 %159, 6
  store i32 %160, ptr %152, align 8, !tbaa !64
  br label %183

164:                                              ; preds = %140
  %165 = mul nsw i16 %151, -4
  store i16 %165, ptr %157, align 2, !tbaa !31
  %166 = mul i16 %159, -64
  store i32 %160, ptr %152, align 8, !tbaa !64
  br label %183

167:                                              ; preds = %125, %108
  store i32 0, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !25
  %168 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %169 = load i32, ptr %168, align 8, !tbaa !64
  %170 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %171 = load ptr, ptr %170, align 8, !tbaa !59
  %172 = sext i32 %169 to i64
  %173 = getelementptr inbounds i16, ptr %171, i64 %172
  store i16 0, ptr %173, align 2, !tbaa !31
  %174 = add nsw i32 %169, 2
  store i32 %174, ptr %168, align 8, !tbaa !64
  br label %183

175:                                              ; preds = %105
  %176 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %177 = load i32, ptr %176, align 8, !tbaa !64
  %178 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %179 = load ptr, ptr %178, align 8, !tbaa !59
  %180 = sext i32 %177 to i64
  %181 = getelementptr inbounds i16, ptr %179, i64 %180
  store i16 0, ptr %181, align 2, !tbaa !31
  %182 = add nsw i32 %177, 2
  store i32 %182, ptr %176, align 8, !tbaa !64
  br label %183

183:                                              ; preds = %167, %164, %161, %175
  %184 = phi i32 [ %169, %167 ], [ %153, %164 ], [ %153, %161 ], [ %177, %175 ]
  %185 = phi ptr [ %171, %167 ], [ %155, %164 ], [ %155, %161 ], [ %179, %175 ]
  %186 = phi i16 [ 0, %167 ], [ %166, %164 ], [ %163, %161 ], [ 0, %175 ]
  %187 = phi i32 [ %174, %167 ], [ %160, %164 ], [ %160, %161 ], [ %182, %175 ]
  %188 = add nsw i32 %184, 1
  %189 = sext i32 %188 to i64
  %190 = getelementptr inbounds i16, ptr %185, i64 %189
  store i16 %186, ptr %190, align 2, !tbaa !31
  %191 = load i32, ptr @y, align 4, !tbaa !25
  %192 = shl i32 %191, 16
  %193 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ10matchModelR5MixerE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %194 = load i16, ptr %193, align 2, !tbaa !31
  %195 = zext i16 %194 to i32
  %196 = or i32 %192, 64
  %197 = sub i32 %196, %195
  %198 = lshr i32 %197, 7
  %199 = trunc i32 %198 to i16
  %200 = add i16 %194, %199
  store i16 %200, ptr %193, align 2, !tbaa !31
  %201 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ10matchModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %202 = load i32, ptr @c0, align 4, !tbaa !25
  %203 = add nsw i32 %202, %201
  %204 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ10matchModelR5MixerE4scm1, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %205 = sext i32 %203 to i64
  %206 = getelementptr inbounds i16, ptr %204, i64 %205
  store ptr %206, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ10matchModelR5MixerE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %207 = load i16, ptr %206, align 2, !tbaa !31
  %208 = lshr i16 %207, 4
  %209 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %210 = zext i16 %208 to i64
  %211 = getelementptr inbounds i16, ptr %209, i64 %210
  %212 = load i16, ptr %211, align 2, !tbaa !31
  %213 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %214 = add nsw i32 %187, 1
  store i32 %214, ptr %213, align 8, !tbaa !64
  %215 = sext i32 %187 to i64
  %216 = getelementptr inbounds i16, ptr %185, i64 %215
  store i16 %212, ptr %216, align 2, !tbaa !31
  %217 = load i32, ptr @_ZZ10matchModelR5MixerE6result, align 4, !tbaa !25
  ret i32 %217

218:                                              ; preds = %54, %52
  %219 = phi ptr [ @_ZGVZ10matchModelR5MixerE4scm1, %54 ], [ @_ZGVZ10matchModelR5MixerE1t, %52 ]
  %220 = phi { ptr, i32 } [ %55, %54 ], [ %53, %52 ]
  tail call void @__cxa_guard_abort(ptr nonnull %219) #39
  resume { ptr, i32 } %220
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(ptr) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_abort(ptr) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(ptr) local_unnamed_addr #4

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = sdiv i32 %1, 2
  %4 = getelementptr inbounds %class.Array.4, ptr %0, i64 0, i32 1
  store i32 %3, ptr %4, align 4, !tbaa !73
  store i32 %3, ptr %0, align 8, !tbaa !74
  %5 = icmp slt i32 %1, 2
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = shl nuw nsw i32 %3, 1
  %8 = load i32, ptr @programChecker, align 8, !tbaa !13
  %9 = add nsw i32 %8, %7
  store i32 %9, ptr @programChecker, align 8, !tbaa !13
  %10 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %11 = icmp sgt i32 %9, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %6
  store i32 %9, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %13

13:                                               ; preds = %12, %6
  %14 = zext i32 %7 to i64
  %15 = tail call noalias ptr @calloc(i64 noundef %14, i64 noundef 1) #41
  %16 = getelementptr inbounds %class.Array.4, ptr %0, i64 0, i32 2
  store ptr %15, ptr %16, align 8, !tbaa !75
  %17 = icmp eq ptr %15, null
  br i1 %17, label %18, label %22

18:                                               ; preds = %13
  %19 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %19, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %19, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

20:                                               ; preds = %2
  %21 = getelementptr inbounds %class.Array.4, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %21, i8 0, i64 20, i1 false)
  br label %39

22:                                               ; preds = %13
  %23 = getelementptr inbounds %class.Array.4, ptr %0, i64 0, i32 3
  store ptr %15, ptr %23, align 8, !tbaa !76
  %24 = getelementptr inbounds %class.SmallStationaryContextMap, ptr %0, i64 0, i32 1
  store i32 0, ptr %24, align 8, !tbaa !112
  %25 = zext i32 %3 to i64
  %26 = icmp ult i32 %3, 16
  br i1 %26, label %37, label %27

27:                                               ; preds = %22
  %28 = and i64 %25, 4294967280
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %33, %29 ]
  %31 = getelementptr inbounds i16, ptr %15, i64 %30
  store <8 x i16> <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>, ptr %31, align 2, !tbaa !31
  %32 = getelementptr inbounds i16, ptr %31, i64 8
  store <8 x i16> <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>, ptr %32, align 2, !tbaa !31
  %33 = add nuw i64 %30, 16
  %34 = icmp eq i64 %33, %28
  br i1 %34, label %35, label %29, !llvm.loop !115

35:                                               ; preds = %29
  %36 = icmp eq i64 %28, %25
  br i1 %36, label %39, label %37

37:                                               ; preds = %22, %35
  %38 = phi i64 [ 0, %22 ], [ %28, %35 ]
  br label %42

39:                                               ; preds = %42, %35, %20
  %40 = phi ptr [ null, %20 ], [ %15, %35 ], [ %15, %42 ]
  %41 = getelementptr inbounds %class.SmallStationaryContextMap, ptr %0, i64 0, i32 2
  store ptr %40, ptr %41, align 8, !tbaa !114
  ret void

42:                                               ; preds = %37, %42
  %43 = phi i64 [ %45, %42 ], [ %38, %37 ]
  %44 = getelementptr inbounds i16, ptr %15, i64 %43
  store i16 -32768, ptr %44, align 2, !tbaa !31
  %45 = add nuw nsw i64 %43, 1
  %46 = icmp eq i64 %45, %25
  br i1 %46, label %39, label %42, !llvm.loop !116
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN25SmallStationaryContextMapD2Ev(ptr noundef nonnull align 8 dereferenceable(40) %0) unnamed_addr #3 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !74
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = shl i32 %2, 1
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array.4, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !75
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z8picModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ8picModelR5MixerE1t acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8picModelR5MixerE1t) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  invoke void @_ZN5ArrayIhLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ8picModelR5MixerE1t, i32 noundef 66048)
          to label %8 unwind label %233

8:                                                ; preds = %7
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIhLi0EED2Ev, ptr nonnull @_ZZ8picModelR5MixerE1t, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8picModelR5MixerE1t) #39
  br label %10

10:                                               ; preds = %8, %4, %1
  %11 = load atomic i8, ptr @_ZGVZ8picModelR5MixerE2sm acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %21, !prof !110

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8picModelR5MixerE2sm) #39
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %13
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ8picModelR5MixerE2sm, i32 noundef 256)
          to label %17 unwind label %235

17:                                               ; preds = %16
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1), i32 noundef 256)
          to label %18 unwind label %237

18:                                               ; preds = %17
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2), i32 noundef 256)
          to label %19 unwind label %237

19:                                               ; preds = %18
  %20 = tail call i32 @__cxa_atexit(ptr nonnull @__cxx_global_array_dtor, ptr null, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8picModelR5MixerE2sm) #39
  br label %21

21:                                               ; preds = %19, %13, %10
  %22 = load i32, ptr @_ZZ8picModelR5MixerE3cxt.0, align 4, !tbaa !25
  %23 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ8picModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !22
  %24 = sext i32 %22 to i64
  %25 = getelementptr inbounds i8, ptr %23, i64 %24
  %26 = load i8, ptr %25, align 1, !tbaa !9
  %27 = zext i8 %26 to i64
  %28 = load i32, ptr @y, align 4, !tbaa !25
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %27, i64 %29
  %31 = load i8, ptr %30, align 1, !tbaa !9
  store i8 %31, ptr %25, align 1, !tbaa !9
  %32 = load i32, ptr @_ZZ8picModelR5MixerE3cxt.1, align 4, !tbaa !25
  %33 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ8picModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !22
  %34 = sext i32 %32 to i64
  %35 = getelementptr inbounds i8, ptr %33, i64 %34
  %36 = load i8, ptr %35, align 1, !tbaa !9
  %37 = zext i8 %36 to i64
  %38 = load i32, ptr @y, align 4, !tbaa !25
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %37, i64 %39
  %41 = load i8, ptr %40, align 1, !tbaa !9
  store i8 %41, ptr %35, align 1, !tbaa !9
  %42 = load i32, ptr @_ZZ8picModelR5MixerE3cxt.2, align 4, !tbaa !25
  %43 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ8picModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !22
  %44 = sext i32 %42 to i64
  %45 = getelementptr inbounds i8, ptr %43, i64 %44
  %46 = load i8, ptr %45, align 1, !tbaa !9
  %47 = zext i8 %46 to i64
  %48 = load i32, ptr @y, align 4, !tbaa !25
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %47, i64 %49
  %51 = load i8, ptr %50, align 1, !tbaa !9
  store i8 %51, ptr %45, align 1, !tbaa !9
  %52 = load i32, ptr @_ZZ8picModelR5MixerE2r0, align 4, !tbaa !25
  %53 = load i32, ptr @y, align 4, !tbaa !25
  %54 = shl i32 %52, 1
  %55 = add i32 %53, %54
  store i32 %55, ptr @_ZZ8picModelR5MixerE2r0, align 4, !tbaa !25
  %56 = load i32, ptr @_ZZ8picModelR5MixerE2r1, align 4, !tbaa !25
  %57 = load i32, ptr @pos, align 4, !tbaa !25
  %58 = add nsw i32 %57, -215
  %59 = load i32, ptr @buf, align 8, !tbaa !20
  %60 = add nsw i32 %59, -1
  %61 = and i32 %60, %58
  %62 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %63 = sext i32 %61 to i64
  %64 = getelementptr inbounds i8, ptr %62, i64 %63
  %65 = load i8, ptr %64, align 1, !tbaa !9
  %66 = zext i8 %65 to i32
  %67 = load i32, ptr @bpos, align 4, !tbaa !25
  %68 = sub nsw i32 7, %67
  %69 = lshr i32 %66, %68
  %70 = and i32 %69, 1
  %71 = shl i32 %56, 1
  %72 = or i32 %70, %71
  store i32 %72, ptr @_ZZ8picModelR5MixerE2r1, align 4, !tbaa !25
  %73 = load i32, ptr @_ZZ8picModelR5MixerE2r2, align 4, !tbaa !25
  %74 = add nsw i32 %57, -431
  %75 = and i32 %60, %74
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8, ptr %62, i64 %76
  %78 = load i8, ptr %77, align 1, !tbaa !9
  %79 = zext i8 %78 to i32
  %80 = lshr i32 %79, %68
  %81 = and i32 %80, 1
  %82 = shl i32 %73, 1
  %83 = or i32 %81, %82
  store i32 %83, ptr @_ZZ8picModelR5MixerE2r2, align 4, !tbaa !25
  %84 = load i32, ptr @_ZZ8picModelR5MixerE2r3, align 4, !tbaa !25
  %85 = add nsw i32 %57, -647
  %86 = and i32 %60, %85
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, ptr %62, i64 %87
  %89 = load i8, ptr %88, align 1, !tbaa !9
  %90 = zext i8 %89 to i32
  %91 = lshr i32 %90, %68
  %92 = and i32 %91, 1
  %93 = shl i32 %84, 1
  %94 = or i32 %92, %93
  store i32 %94, ptr @_ZZ8picModelR5MixerE2r3, align 4, !tbaa !25
  %95 = and i32 %55, 7
  %96 = lshr i32 %71, 4
  %97 = and i32 %96, 56
  %98 = or i32 %97, %95
  %99 = lshr i32 %82, 3
  %100 = and i32 %99, 192
  %101 = or i32 %98, %100
  store i32 %101, ptr @_ZZ8picModelR5MixerE3cxt.0, align 4, !tbaa !25
  %102 = and i32 %53, 1
  %103 = and i32 %96, 62
  %104 = lshr i32 %82, 2
  %105 = and i32 %104, 64
  %106 = and i32 %84, 128
  %107 = or i32 %102, %103
  %108 = or i32 %107, %105
  %109 = or i32 %108, %106
  %110 = or i32 %109, 256
  store i32 %110, ptr @_ZZ8picModelR5MixerE3cxt.1, align 4, !tbaa !25
  %111 = and i32 %55, 63
  %112 = and i32 %71, 16382
  %113 = xor i32 %112, %111
  %114 = shl i32 %73, 3
  %115 = and i32 %114, 32512
  %116 = xor i32 %113, %115
  %117 = shl i32 %84, 6
  %118 = and i32 %117, 63488
  %119 = xor i32 %116, %118
  %120 = add nuw nsw i32 %119, 512
  store i32 %120, ptr @_ZZ8picModelR5MixerE3cxt.2, align 4, !tbaa !25
  %121 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ8picModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !22
  %122 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %123 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %124 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %125 = load ptr, ptr %124, align 8, !tbaa !59
  %126 = zext i32 %101 to i64
  %127 = getelementptr inbounds i8, ptr %121, i64 %126
  %128 = load i8, ptr %127, align 1, !tbaa !9
  %129 = zext i8 %128 to i32
  %130 = load i32, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 0, i32 1), align 4, !tbaa !82
  %131 = load ptr, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 0, i32 2, i32 3), align 8, !tbaa !84
  %132 = sext i32 %130 to i64
  %133 = getelementptr inbounds i32, ptr %131, i64 %132
  %134 = load i32, ptr %133, align 4, !tbaa !25
  %135 = and i32 %134, 1023
  %136 = icmp eq i32 %135, 1023
  %137 = add i32 %134, 1
  %138 = or i32 %134, 1023
  %139 = select i1 %136, i32 %138, i32 %137
  %140 = lshr i32 %134, 10
  %141 = shl i32 %53, 22
  %142 = sub nsw i32 %141, %140
  %143 = ashr i32 %142, 3
  %144 = zext i32 %135 to i64
  %145 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %144
  %146 = load i32, ptr %145, align 4, !tbaa !25
  %147 = mul nsw i32 %143, %146
  %148 = and i32 %147, -1024
  %149 = add i32 %148, %139
  store i32 %149, ptr %133, align 4, !tbaa !25
  store i32 %129, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 0, i32 1), align 4, !tbaa !82
  %150 = zext i8 %128 to i64
  %151 = getelementptr inbounds i32, ptr %131, i64 %150
  %152 = load i32, ptr %151, align 4, !tbaa !25
  %153 = lshr i32 %152, 20
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds i16, ptr %122, i64 %154
  %156 = load i16, ptr %155, align 2, !tbaa !31
  %157 = load i32, ptr %123, align 8, !tbaa !64
  %158 = add nsw i32 %157, 1
  store i32 %158, ptr %123, align 8, !tbaa !64
  %159 = sext i32 %157 to i64
  %160 = getelementptr inbounds i16, ptr %125, i64 %159
  store i16 %156, ptr %160, align 2, !tbaa !31
  %161 = zext i32 %110 to i64
  %162 = getelementptr inbounds i8, ptr %121, i64 %161
  %163 = load i8, ptr %162, align 1, !tbaa !9
  %164 = zext i8 %163 to i32
  %165 = load i32, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1, i32 1), align 4, !tbaa !82
  %166 = load ptr, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1, i32 2, i32 3), align 8, !tbaa !84
  %167 = sext i32 %165 to i64
  %168 = getelementptr inbounds i32, ptr %166, i64 %167
  %169 = load i32, ptr %168, align 4, !tbaa !25
  %170 = and i32 %169, 1023
  %171 = icmp eq i32 %170, 1023
  %172 = add i32 %169, 1
  %173 = or i32 %169, 1023
  %174 = select i1 %171, i32 %173, i32 %172
  %175 = lshr i32 %169, 10
  %176 = load i32, ptr @y, align 4, !tbaa !25
  %177 = shl i32 %176, 22
  %178 = sub nsw i32 %177, %175
  %179 = ashr i32 %178, 3
  %180 = zext i32 %170 to i64
  %181 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %180
  %182 = load i32, ptr %181, align 4, !tbaa !25
  %183 = mul nsw i32 %179, %182
  %184 = and i32 %183, -1024
  %185 = add i32 %184, %174
  store i32 %185, ptr %168, align 4, !tbaa !25
  store i32 %164, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1, i32 1), align 4, !tbaa !82
  %186 = zext i8 %163 to i64
  %187 = getelementptr inbounds i32, ptr %166, i64 %186
  %188 = load i32, ptr %187, align 4, !tbaa !25
  %189 = lshr i32 %188, 20
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds i16, ptr %122, i64 %190
  %192 = load i16, ptr %191, align 2, !tbaa !31
  %193 = load i32, ptr %123, align 8, !tbaa !64
  %194 = add nsw i32 %193, 1
  store i32 %194, ptr %123, align 8, !tbaa !64
  %195 = sext i32 %193 to i64
  %196 = getelementptr inbounds i16, ptr %125, i64 %195
  store i16 %192, ptr %196, align 2, !tbaa !31
  %197 = zext i32 %120 to i64
  %198 = getelementptr inbounds i8, ptr %121, i64 %197
  %199 = load i8, ptr %198, align 1, !tbaa !9
  %200 = zext i8 %199 to i32
  %201 = load i32, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2, i32 1), align 4, !tbaa !82
  %202 = load ptr, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2, i32 2, i32 3), align 8, !tbaa !84
  %203 = sext i32 %201 to i64
  %204 = getelementptr inbounds i32, ptr %202, i64 %203
  %205 = load i32, ptr %204, align 4, !tbaa !25
  %206 = and i32 %205, 1023
  %207 = icmp eq i32 %206, 1023
  %208 = add i32 %205, 1
  %209 = or i32 %205, 1023
  %210 = select i1 %207, i32 %209, i32 %208
  %211 = lshr i32 %205, 10
  %212 = load i32, ptr @y, align 4, !tbaa !25
  %213 = shl i32 %212, 22
  %214 = sub nsw i32 %213, %211
  %215 = ashr i32 %214, 3
  %216 = zext i32 %206 to i64
  %217 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %216
  %218 = load i32, ptr %217, align 4, !tbaa !25
  %219 = mul nsw i32 %215, %218
  %220 = and i32 %219, -1024
  %221 = add i32 %220, %210
  store i32 %221, ptr %204, align 4, !tbaa !25
  store i32 %200, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2, i32 1), align 4, !tbaa !82
  %222 = zext i8 %199 to i64
  %223 = getelementptr inbounds i32, ptr %202, i64 %222
  %224 = load i32, ptr %223, align 4, !tbaa !25
  %225 = lshr i32 %224, 20
  %226 = zext i32 %225 to i64
  %227 = getelementptr inbounds i16, ptr %122, i64 %226
  %228 = load i16, ptr %227, align 2, !tbaa !31
  %229 = load i32, ptr %123, align 8, !tbaa !64
  %230 = add nsw i32 %229, 1
  store i32 %230, ptr %123, align 8, !tbaa !64
  %231 = sext i32 %229 to i64
  %232 = getelementptr inbounds i16, ptr %125, i64 %231
  store i16 %228, ptr %232, align 2, !tbaa !31
  ret void

233:                                              ; preds = %7
  %234 = landingpad { ptr, i32 }
          cleanup
  br label %244

235:                                              ; preds = %16
  %236 = landingpad { ptr, i32 }
          cleanup
  br label %244

237:                                              ; preds = %18, %17
  %238 = phi ptr [ getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1), %17 ], [ getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2), %18 ]
  %239 = landingpad { ptr, i32 }
          cleanup
  br label %240

240:                                              ; preds = %237, %240
  %241 = phi ptr [ %242, %240 ], [ %238, %237 ]
  %242 = getelementptr inbounds %class.StateMap, ptr %241, i64 -1
  tail call void @_ZN8StateMapD2Ev(ptr noundef nonnull align 8 dereferenceable(32) %242) #39
  %243 = icmp eq ptr %242, @_ZZ8picModelR5MixerE2sm
  br i1 %243, label %244, label %240

244:                                              ; preds = %240, %235, %233
  %245 = phi ptr [ @_ZGVZ8picModelR5MixerE1t, %233 ], [ @_ZGVZ8picModelR5MixerE2sm, %235 ], [ @_ZGVZ8picModelR5MixerE2sm, %240 ]
  %246 = phi { ptr, i32 } [ %234, %233 ], [ %236, %235 ], [ %239, %240 ]
  tail call void @__cxa_guard_abort(ptr nonnull %245) #39
  resume { ptr, i32 } %246
}

; Function Attrs: mustprogress nounwind willreturn uwtable
define internal void @__cxx_global_array_dtor(ptr nocapture readnone %0) #15 section ".text.startup" {
  %2 = load i32, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2, i32 2), align 8, !tbaa !10
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = shl i32 %2, 2
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = load ptr, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2, i32 2, i32 2), align 16, !tbaa !17
  tail call void @free(ptr noundef %10) #39
  %11 = load i32, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1, i32 2), align 8, !tbaa !10
  %12 = load i32, ptr @programChecker, align 8, !tbaa !13
  %13 = shl i32 %11, 2
  %14 = sub i32 %12, %13
  store i32 %14, ptr @programChecker, align 8, !tbaa !13
  %15 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %16 = icmp sgt i32 %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %9
  store i32 %14, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %18

18:                                               ; preds = %17, %9
  %19 = load ptr, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1, i32 2, i32 2), align 16, !tbaa !17
  tail call void @free(ptr noundef %19) #39
  %20 = load i32, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 0, i32 2), align 8, !tbaa !10
  %21 = load i32, ptr @programChecker, align 8, !tbaa !13
  %22 = shl i32 %20, 2
  %23 = sub i32 %21, %22
  store i32 %23, ptr @programChecker, align 8, !tbaa !13
  %24 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %25 = icmp sgt i32 %23, %24
  br i1 %25, label %26, label %27

26:                                               ; preds = %18
  store i32 %23, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %27

27:                                               ; preds = %26, %18
  %28 = load ptr, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 0, i32 2, i32 2), align 16, !tbaa !17
  tail call void @free(ptr noundef %28) #39
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z9wordModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ9wordModelR5MixerE2cm acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9wordModelR5MixerE2cm) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @level, align 4, !tbaa !25
  %9 = shl i32 1048576, %8
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ9wordModelR5MixerE2cm, i32 noundef %9, i32 noundef 20)
          to label %10 unwind label %27

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ9wordModelR5MixerE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9wordModelR5MixerE2cm) #39
  br label %12

12:                                               ; preds = %10, %4, %1
  %13 = load i32, ptr @bpos, align 4, !tbaa !25
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %354

15:                                               ; preds = %12
  %16 = load i32, ptr @c4, align 4, !tbaa !25
  %17 = and i32 %16, 255
  %18 = add nsw i32 %17, -65
  %19 = icmp ult i32 %18, 26
  %20 = add nuw nsw i32 %17, 32
  %21 = select i1 %19, i32 %20, i32 %17
  %22 = add nsw i32 %21, -97
  %23 = icmp ult i32 %22, 26
  %24 = icmp ugt i32 %21, 127
  %25 = or i1 %24, %23
  %26 = load i32, ptr @_ZZ9wordModelR5MixerE5word0, align 4, !tbaa !25
  br i1 %25, label %29, label %35

27:                                               ; preds = %7
  %28 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ9wordModelR5MixerE2cm) #39
  resume { ptr, i32 } %28

29:                                               ; preds = %15
  %30 = mul i32 %26, 8416
  %31 = add i32 %30, %21
  store i32 %31, ptr @_ZZ9wordModelR5MixerE5word0, align 4, !tbaa !25
  %32 = load i32, ptr @_ZZ9wordModelR5MixerE5text0, align 4, !tbaa !25
  %33 = mul i32 %32, 15952
  %34 = add i32 %33, %21
  store i32 %34, ptr @_ZZ9wordModelR5MixerE5text0, align 4, !tbaa !25
  br label %53

35:                                               ; preds = %15
  %36 = icmp eq i32 %26, 0
  br i1 %36, label %47, label %37

37:                                               ; preds = %35
  %38 = load i32, ptr @_ZZ9wordModelR5MixerE5word4, align 4, !tbaa !25
  %39 = mul i32 %38, 23
  store i32 %39, ptr @_ZZ9wordModelR5MixerE5word5, align 4, !tbaa !25
  %40 = load i32, ptr @_ZZ9wordModelR5MixerE5word3, align 4, !tbaa !25
  %41 = mul i32 %40, 19
  store i32 %41, ptr @_ZZ9wordModelR5MixerE5word4, align 4, !tbaa !25
  %42 = load i32, ptr @_ZZ9wordModelR5MixerE5word2, align 4, !tbaa !25
  %43 = mul i32 %42, 17
  store i32 %43, ptr @_ZZ9wordModelR5MixerE5word3, align 4, !tbaa !25
  %44 = load i32, ptr @_ZZ9wordModelR5MixerE5word1, align 4, !tbaa !25
  %45 = mul i32 %44, 13
  store i32 %45, ptr @_ZZ9wordModelR5MixerE5word2, align 4, !tbaa !25
  %46 = mul i32 %26, 11
  store i32 %46, ptr @_ZZ9wordModelR5MixerE5word1, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9wordModelR5MixerE5word0, align 4, !tbaa !25
  br label %47

47:                                               ; preds = %35, %37
  %48 = icmp eq i32 %21, 10
  br i1 %48, label %49, label %53

49:                                               ; preds = %47
  %50 = load i32, ptr @_ZZ9wordModelR5MixerE2nl, align 4, !tbaa !25
  store i32 %50, ptr @_ZZ9wordModelR5MixerE3nl1, align 4, !tbaa !25
  %51 = load i32, ptr @pos, align 4, !tbaa !25
  %52 = add nsw i32 %51, -1
  store i32 %52, ptr @_ZZ9wordModelR5MixerE2nl, align 4, !tbaa !25
  br label %53

53:                                               ; preds = %29, %49, %47
  %54 = phi i32 [ %31, %29 ], [ 0, %49 ], [ 0, %47 ]
  %55 = load i32, ptr @pos, align 4, !tbaa !25
  %56 = load i32, ptr @_ZZ9wordModelR5MixerE2nl, align 4, !tbaa !25
  %57 = sub nsw i32 %55, %56
  %58 = tail call i32 @llvm.smin.i32(i32 %57, i32 255)
  %59 = load i32, ptr @_ZZ9wordModelR5MixerE3nl1, align 4, !tbaa !25
  %60 = add nsw i32 %58, %59
  %61 = load i32, ptr @buf, align 8, !tbaa !20
  %62 = add nsw i32 %61, -1
  %63 = and i32 %62, %60
  %64 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %65 = sext i32 %63 to i64
  %66 = getelementptr inbounds i8, ptr %64, i64 %65
  %67 = load i8, ptr %66, align 1, !tbaa !9
  %68 = zext i8 %67 to i32
  %69 = mul i32 %54, 271
  %70 = add nsw i32 %55, -1
  %71 = and i32 %62, %70
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, ptr %64, i64 %72
  %74 = load i8, ptr %73, align 1, !tbaa !9
  %75 = zext i8 %74 to i32
  %76 = add i32 %69, %75
  %77 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %78 = add nsw i32 %77, 1
  store i32 %78, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %79 = mul i32 %76, 987654323
  %80 = add i32 %79, %77
  %81 = tail call i32 @llvm.fshl.i32(i32 %80, i32 %80, i32 16)
  %82 = mul i32 %81, 123456791
  %83 = add i32 %82, %77
  %84 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %85 = sext i32 %77 to i64
  %86 = getelementptr inbounds i32, ptr %84, i64 %85
  store i32 %83, ptr %86, align 4, !tbaa !25
  %87 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %88 = add nsw i32 %87, 1
  store i32 %88, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %89 = mul i32 %54, 987654323
  %90 = add i32 %87, %89
  %91 = tail call i32 @llvm.fshl.i32(i32 %90, i32 %90, i32 16)
  %92 = mul i32 %91, 123456791
  %93 = add i32 %92, %87
  %94 = sext i32 %87 to i64
  %95 = getelementptr inbounds i32, ptr %84, i64 %94
  store i32 %93, ptr %95, align 4, !tbaa !25
  %96 = load i32, ptr @_ZZ9wordModelR5MixerE5word1, align 4, !tbaa !25
  %97 = add i32 %96, %76
  %98 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %99 = add nsw i32 %98, 1
  store i32 %99, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %100 = mul i32 %97, 987654323
  %101 = add i32 %100, %98
  %102 = tail call i32 @llvm.fshl.i32(i32 %101, i32 %101, i32 16)
  %103 = mul i32 %102, 123456791
  %104 = add i32 %103, %98
  %105 = sext i32 %98 to i64
  %106 = getelementptr inbounds i32, ptr %84, i64 %105
  store i32 %104, ptr %106, align 4, !tbaa !25
  %107 = mul i32 %96, 31
  %108 = add i32 %107, %54
  %109 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %110 = add nsw i32 %109, 1
  store i32 %110, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %111 = mul i32 %108, 987654323
  %112 = add i32 %109, %111
  %113 = tail call i32 @llvm.fshl.i32(i32 %112, i32 %112, i32 16)
  %114 = mul i32 %113, 123456791
  %115 = add i32 %114, %109
  %116 = sext i32 %109 to i64
  %117 = getelementptr inbounds i32, ptr %84, i64 %116
  store i32 %115, ptr %117, align 4, !tbaa !25
  %118 = load i32, ptr @_ZZ9wordModelR5MixerE5word2, align 4, !tbaa !25
  %119 = mul i32 %118, 29
  %120 = add i32 %119, %97
  %121 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %122 = add nsw i32 %121, 1
  store i32 %122, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %123 = mul i32 %120, 987654323
  %124 = add i32 %123, %121
  %125 = tail call i32 @llvm.fshl.i32(i32 %124, i32 %124, i32 16)
  %126 = mul i32 %125, 123456791
  %127 = add i32 %126, %121
  %128 = sext i32 %121 to i64
  %129 = getelementptr inbounds i32, ptr %84, i64 %128
  store i32 %127, ptr %129, align 4, !tbaa !25
  %130 = load i32, ptr @_ZZ9wordModelR5MixerE5text0, align 4, !tbaa !25
  %131 = and i32 %130, 16777215
  %132 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %133 = add nsw i32 %132, 1
  store i32 %133, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %134 = mul i32 %131, 987654323
  %135 = add i32 %134, %132
  %136 = tail call i32 @llvm.fshl.i32(i32 %135, i32 %135, i32 16)
  %137 = mul i32 %136, 123456791
  %138 = add i32 %137, %132
  %139 = sext i32 %132 to i64
  %140 = getelementptr inbounds i32, ptr %84, i64 %139
  store i32 %138, ptr %140, align 4, !tbaa !25
  %141 = and i32 %130, 1048575
  %142 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %143 = add nsw i32 %142, 1
  store i32 %143, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %144 = mul i32 %141, 987654323
  %145 = add i32 %142, %144
  %146 = tail call i32 @llvm.fshl.i32(i32 %145, i32 %145, i32 16)
  %147 = mul i32 %146, 123456791
  %148 = add i32 %147, %142
  %149 = sext i32 %142 to i64
  %150 = getelementptr inbounds i32, ptr %84, i64 %149
  store i32 %148, ptr %150, align 4, !tbaa !25
  %151 = add i32 %118, %76
  %152 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %153 = add nsw i32 %152, 1
  store i32 %153, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %154 = mul i32 %151, 987654323
  %155 = add i32 %152, %154
  %156 = tail call i32 @llvm.fshl.i32(i32 %155, i32 %155, i32 16)
  %157 = mul i32 %156, 123456791
  %158 = add i32 %157, %152
  %159 = sext i32 %152 to i64
  %160 = getelementptr inbounds i32, ptr %84, i64 %159
  store i32 %158, ptr %160, align 4, !tbaa !25
  %161 = load i32, ptr @_ZZ9wordModelR5MixerE5word3, align 4, !tbaa !25
  %162 = add i32 %161, %76
  %163 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %164 = add nsw i32 %163, 1
  store i32 %164, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %165 = mul i32 %162, 987654323
  %166 = add i32 %165, %163
  %167 = tail call i32 @llvm.fshl.i32(i32 %166, i32 %166, i32 16)
  %168 = mul i32 %167, 123456791
  %169 = add i32 %168, %163
  %170 = sext i32 %163 to i64
  %171 = getelementptr inbounds i32, ptr %84, i64 %170
  store i32 %169, ptr %171, align 4, !tbaa !25
  %172 = load i32, ptr @_ZZ9wordModelR5MixerE5word4, align 4, !tbaa !25
  %173 = add i32 %172, %76
  %174 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %175 = add nsw i32 %174, 1
  store i32 %175, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %176 = mul i32 %173, 987654323
  %177 = add i32 %176, %174
  %178 = tail call i32 @llvm.fshl.i32(i32 %177, i32 %177, i32 16)
  %179 = mul i32 %178, 123456791
  %180 = add i32 %179, %174
  %181 = sext i32 %174 to i64
  %182 = getelementptr inbounds i32, ptr %84, i64 %181
  store i32 %180, ptr %182, align 4, !tbaa !25
  %183 = load i32, ptr @_ZZ9wordModelR5MixerE5word5, align 4, !tbaa !25
  %184 = add i32 %183, %76
  %185 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %186 = add nsw i32 %185, 1
  store i32 %186, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %187 = mul i32 %184, 987654323
  %188 = add i32 %187, %185
  %189 = tail call i32 @llvm.fshl.i32(i32 %188, i32 %188, i32 16)
  %190 = mul i32 %189, 123456791
  %191 = add i32 %190, %185
  %192 = sext i32 %185 to i64
  %193 = getelementptr inbounds i32, ptr %84, i64 %192
  store i32 %191, ptr %193, align 4, !tbaa !25
  %194 = load i32, ptr @pos, align 4, !tbaa !25
  %195 = add nsw i32 %194, -1
  %196 = load i32, ptr @buf, align 8, !tbaa !20
  %197 = add nsw i32 %196, -1
  %198 = and i32 %197, %195
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i8, ptr %64, i64 %199
  %201 = load i8, ptr %200, align 1, !tbaa !9
  %202 = zext i8 %201 to i32
  %203 = add nsw i32 %194, -3
  %204 = and i32 %197, %203
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds i8, ptr %64, i64 %205
  %207 = load i8, ptr %206, align 1, !tbaa !9
  %208 = zext i8 %207 to i32
  %209 = shl nuw nsw i32 %208, 8
  %210 = or i32 %209, %202
  %211 = add nsw i32 %194, -5
  %212 = and i32 %197, %211
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds i8, ptr %64, i64 %213
  %215 = load i8, ptr %214, align 1, !tbaa !9
  %216 = zext i8 %215 to i32
  %217 = shl nuw nsw i32 %216, 16
  %218 = or i32 %210, %217
  %219 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %220 = add nsw i32 %219, 1
  store i32 %220, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %221 = mul i32 %218, 987654323
  %222 = add i32 %221, %219
  %223 = tail call i32 @llvm.fshl.i32(i32 %222, i32 %222, i32 16)
  %224 = mul i32 %223, 123456791
  %225 = add i32 %224, %219
  %226 = sext i32 %219 to i64
  %227 = getelementptr inbounds i32, ptr %84, i64 %226
  store i32 %225, ptr %227, align 4, !tbaa !25
  %228 = load i32, ptr @pos, align 4, !tbaa !25
  %229 = add nsw i32 %228, -2
  %230 = load i32, ptr @buf, align 8, !tbaa !20
  %231 = add nsw i32 %230, -1
  %232 = and i32 %231, %229
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds i8, ptr %64, i64 %233
  %235 = load i8, ptr %234, align 1, !tbaa !9
  %236 = zext i8 %235 to i32
  %237 = add nsw i32 %228, -4
  %238 = and i32 %231, %237
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds i8, ptr %64, i64 %239
  %241 = load i8, ptr %240, align 1, !tbaa !9
  %242 = zext i8 %241 to i32
  %243 = shl nuw nsw i32 %242, 8
  %244 = or i32 %243, %236
  %245 = add nsw i32 %228, -6
  %246 = and i32 %231, %245
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds i8, ptr %64, i64 %247
  %249 = load i8, ptr %248, align 1, !tbaa !9
  %250 = zext i8 %249 to i32
  %251 = shl nuw nsw i32 %250, 16
  %252 = or i32 %244, %251
  %253 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %254 = add nsw i32 %253, 1
  store i32 %254, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %255 = mul i32 %252, 987654323
  %256 = add i32 %255, %253
  %257 = tail call i32 @llvm.fshl.i32(i32 %256, i32 %256, i32 16)
  %258 = mul i32 %257, 123456791
  %259 = add i32 %258, %253
  %260 = sext i32 %253 to i64
  %261 = getelementptr inbounds i32, ptr %84, i64 %260
  store i32 %259, ptr %261, align 4, !tbaa !25
  %262 = add i32 %161, %97
  %263 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %264 = add nsw i32 %263, 1
  store i32 %264, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %265 = mul i32 %262, 987654323
  %266 = add i32 %263, %265
  %267 = tail call i32 @llvm.fshl.i32(i32 %266, i32 %266, i32 16)
  %268 = mul i32 %267, 123456791
  %269 = add i32 %268, %263
  %270 = sext i32 %263 to i64
  %271 = getelementptr inbounds i32, ptr %84, i64 %270
  store i32 %269, ptr %271, align 4, !tbaa !25
  %272 = add i32 %161, %151
  %273 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %274 = add nsw i32 %273, 1
  store i32 %274, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %275 = mul i32 %272, 987654323
  %276 = add i32 %273, %275
  %277 = tail call i32 @llvm.fshl.i32(i32 %276, i32 %276, i32 16)
  %278 = mul i32 %277, 123456791
  %279 = add i32 %278, %273
  %280 = sext i32 %273 to i64
  %281 = getelementptr inbounds i32, ptr %84, i64 %280
  store i32 %279, ptr %281, align 4, !tbaa !25
  %282 = shl i32 %58, 16
  %283 = load i32, ptr @pos, align 4, !tbaa !25
  %284 = add nsw i32 %283, -1
  %285 = load i32, ptr @buf, align 8, !tbaa !20
  %286 = add nsw i32 %285, -1
  %287 = and i32 %286, %284
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds i8, ptr %64, i64 %288
  %290 = load i8, ptr %289, align 1, !tbaa !9
  %291 = zext i8 %290 to i32
  %292 = shl nuw nsw i32 %291, 8
  %293 = or i32 %292, %282
  %294 = or i32 %293, %68
  %295 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %296 = add nsw i32 %295, 1
  store i32 %296, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %297 = mul i32 %294, 987654323
  %298 = add i32 %297, %295
  %299 = tail call i32 @llvm.fshl.i32(i32 %298, i32 %298, i32 16)
  %300 = mul i32 %299, 123456791
  %301 = add i32 %300, %295
  %302 = sext i32 %295 to i64
  %303 = getelementptr inbounds i32, ptr %84, i64 %302
  store i32 %301, ptr %303, align 4, !tbaa !25
  %304 = load i32, ptr @pos, align 4, !tbaa !25
  %305 = add nsw i32 %304, -1
  %306 = load i32, ptr @buf, align 8, !tbaa !20
  %307 = add nsw i32 %306, -1
  %308 = and i32 %307, %305
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds i8, ptr %64, i64 %309
  %311 = load i8, ptr %310, align 1, !tbaa !9
  %312 = zext i8 %311 to i32
  %313 = shl nuw nsw i32 %312, 8
  %314 = or i32 %313, %68
  %315 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %316 = add nsw i32 %315, 1
  store i32 %316, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %317 = mul i32 %314, 987654323
  %318 = add i32 %317, %315
  %319 = tail call i32 @llvm.fshl.i32(i32 %318, i32 %318, i32 16)
  %320 = mul i32 %319, 123456791
  %321 = add i32 %320, %315
  %322 = sext i32 %315 to i64
  %323 = getelementptr inbounds i32, ptr %84, i64 %322
  store i32 %321, ptr %323, align 4, !tbaa !25
  %324 = shl i32 %58, 8
  %325 = load i32, ptr @pos, align 4, !tbaa !25
  %326 = add nsw i32 %325, -1
  %327 = load i32, ptr @buf, align 8, !tbaa !20
  %328 = add nsw i32 %327, -1
  %329 = and i32 %328, %326
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds i8, ptr %64, i64 %330
  %332 = load i8, ptr %331, align 1, !tbaa !9
  %333 = zext i8 %332 to i32
  %334 = or i32 %324, %333
  %335 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %336 = add nsw i32 %335, 1
  store i32 %336, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %337 = mul i32 %334, 987654323
  %338 = add i32 %337, %335
  %339 = tail call i32 @llvm.fshl.i32(i32 %338, i32 %338, i32 16)
  %340 = mul i32 %339, 123456791
  %341 = add i32 %340, %335
  %342 = sext i32 %335 to i64
  %343 = getelementptr inbounds i32, ptr %84, i64 %342
  store i32 %341, ptr %343, align 4, !tbaa !25
  %344 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %345 = add nsw i32 %344, 1
  store i32 %345, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %346 = mul i32 %58, 987654323
  %347 = add i32 %344, %346
  %348 = tail call i32 @llvm.fshl.i32(i32 %347, i32 %347, i32 16)
  %349 = mul i32 %348, 123456791
  %350 = add i32 %349, %344
  %351 = sext i32 %344 to i64
  %352 = getelementptr inbounds i32, ptr %84, i64 %351
  store i32 %350, ptr %352, align 4, !tbaa !25
  %353 = load i32, ptr @bpos, align 4, !tbaa !25
  br label %354

354:                                              ; preds = %53, %12
  %355 = phi i32 [ %353, %53 ], [ %13, %12 ]
  %356 = load i32, ptr @c0, align 4, !tbaa !25
  %357 = load i32, ptr @pos, align 4, !tbaa !25
  %358 = add nsw i32 %357, -1
  %359 = load i32, ptr @buf, align 8, !tbaa !20
  %360 = add nsw i32 %359, -1
  %361 = and i32 %360, %358
  %362 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %363 = sext i32 %361 to i64
  %364 = getelementptr inbounds i8, ptr %362, i64 %363
  %365 = load i8, ptr %364, align 1, !tbaa !9
  %366 = zext i8 %365 to i32
  %367 = load i32, ptr @y, align 4, !tbaa !25
  %368 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ9wordModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %356, i32 noundef %355, i32 noundef %366, i32 noundef %367)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z11recordModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ11recordModelR5MixerE2cm acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11recordModelR5MixerE2cm) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cm, i32 noundef 32768, i32 noundef 3)
          to label %8 unwind label %100

8:                                                ; preds = %7
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11recordModelR5MixerE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11recordModelR5MixerE2cm) #39
  br label %10

10:                                               ; preds = %8, %4, %1
  %11 = load atomic i8, ptr @_ZGVZ11recordModelR5MixerE2cn acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19, !prof !110

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11recordModelR5MixerE2cn) #39
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cn, i32 noundef 16384, i32 noundef 3)
          to label %17 unwind label %102

17:                                               ; preds = %16
  %18 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11recordModelR5MixerE2cn, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11recordModelR5MixerE2cn) #39
  br label %19

19:                                               ; preds = %17, %13, %10
  %20 = load atomic i8, ptr @_ZGVZ11recordModelR5MixerE2co acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %28, !prof !110

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11recordModelR5MixerE2co) #39
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2co, i32 noundef 65536, i32 noundef 3)
          to label %26 unwind label %104

26:                                               ; preds = %25
  %27 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11recordModelR5MixerE2co, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11recordModelR5MixerE2co) #39
  br label %28

28:                                               ; preds = %26, %22, %19
  %29 = load atomic i8, ptr @_ZGVZ11recordModelR5MixerE2cp acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %39, !prof !110

31:                                               ; preds = %28
  %32 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11recordModelR5MixerE2cp) #39
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = load i32, ptr @level, align 4, !tbaa !25
  %36 = shl i32 65536, %35
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cp, i32 noundef %36, i32 noundef 3)
          to label %37 unwind label %106

37:                                               ; preds = %34
  %38 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11recordModelR5MixerE2cp, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11recordModelR5MixerE2cp) #39
  br label %39

39:                                               ; preds = %37, %31, %28
  %40 = load i32, ptr @bpos, align 4, !tbaa !25
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  %43 = load i32, ptr @pos, align 4, !tbaa !25
  br label %437

44:                                               ; preds = %39
  %45 = load i32, ptr @c4, align 4, !tbaa !25
  %46 = and i32 %45, 65535
  %47 = and i32 %45, 255
  %48 = lshr i32 %46, 8
  %49 = load i32, ptr @pos, align 4, !tbaa !25
  %50 = zext i32 %47 to i64
  %51 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos1, i64 0, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !25
  %53 = sub nsw i32 %49, %52
  %54 = icmp sgt i32 %53, 1
  br i1 %54, label %55, label %122

55:                                               ; preds = %44
  %56 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos2, i64 0, i64 %50
  %57 = load i32, ptr %56, align 4, !tbaa !25
  %58 = sub nsw i32 %52, %57
  %59 = icmp eq i32 %53, %58
  br i1 %59, label %60, label %122

60:                                               ; preds = %55
  %61 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos3, i64 0, i64 %50
  %62 = load i32, ptr %61, align 4, !tbaa !25
  %63 = sub nsw i32 %57, %62
  %64 = icmp eq i32 %53, %63
  br i1 %64, label %65, label %122

65:                                               ; preds = %60
  %66 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos4, i64 0, i64 %50
  %67 = load i32, ptr %66, align 4, !tbaa !25
  %68 = sub nsw i32 %62, %67
  %69 = icmp eq i32 %53, %68
  br i1 %69, label %70, label %122

70:                                               ; preds = %65
  %71 = icmp ugt i32 %53, 15
  br i1 %71, label %94, label %72

72:                                               ; preds = %70
  %73 = mul nuw nsw i32 %53, 5
  %74 = xor i32 %73, -1
  %75 = add i32 %49, %74
  %76 = load i32, ptr @buf, align 8, !tbaa !20
  %77 = add nsw i32 %76, -1
  %78 = and i32 %77, %75
  %79 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %80 = sext i32 %78 to i64
  %81 = getelementptr inbounds i8, ptr %79, i64 %80
  %82 = load i8, ptr %81, align 1, !tbaa !9
  %83 = trunc i32 %45 to i8
  %84 = icmp eq i8 %82, %83
  br i1 %84, label %85, label %122

85:                                               ; preds = %72
  %86 = mul nuw nsw i32 %53, 6
  %87 = xor i32 %86, -1
  %88 = add i32 %49, %87
  %89 = and i32 %77, %88
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i8, ptr %79, i64 %90
  %92 = load i8, ptr %91, align 1, !tbaa !9
  %93 = icmp eq i8 %92, %82
  br i1 %93, label %94, label %122

94:                                               ; preds = %85, %70
  %95 = load i32, ptr @_ZZ11recordModelR5MixerE5rlen1, align 4, !tbaa !25
  %96 = icmp eq i32 %53, %95
  br i1 %96, label %97, label %108

97:                                               ; preds = %94
  %98 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !25
  %99 = add nsw i32 %98, 1
  store i32 %99, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !25
  br label %124

100:                                              ; preds = %7
  %101 = landingpad { ptr, i32 }
          cleanup
  br label %494

102:                                              ; preds = %16
  %103 = landingpad { ptr, i32 }
          cleanup
  br label %494

104:                                              ; preds = %25
  %105 = landingpad { ptr, i32 }
          cleanup
  br label %494

106:                                              ; preds = %34
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %494

108:                                              ; preds = %94
  %109 = load i32, ptr @_ZZ11recordModelR5MixerE5rlen2, align 4, !tbaa !25
  %110 = icmp eq i32 %53, %109
  br i1 %110, label %111, label %114

111:                                              ; preds = %108
  %112 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !25
  %113 = add nsw i32 %112, 1
  br label %120

114:                                              ; preds = %108
  %115 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !25
  %116 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !25
  %117 = icmp sgt i32 %115, %116
  br i1 %117, label %118, label %119

118:                                              ; preds = %114
  store i32 %53, ptr @_ZZ11recordModelR5MixerE5rlen2, align 4, !tbaa !25
  br label %120

119:                                              ; preds = %114
  store i32 %53, ptr @_ZZ11recordModelR5MixerE5rlen1, align 4, !tbaa !25
  store i32 1, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !25
  br label %133

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %113, %111 ], [ 1, %118 ]
  store i32 %121, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !25
  br label %122

122:                                              ; preds = %120, %44, %55, %60, %65, %72, %85
  %123 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !25
  br label %124

124:                                              ; preds = %122, %97
  %125 = phi i32 [ %123, %122 ], [ %99, %97 ]
  %126 = icmp sgt i32 %125, 15
  br i1 %126, label %127, label %131

127:                                              ; preds = %124
  %128 = load i32, ptr @_ZZ11recordModelR5MixerE4rlen, align 4, !tbaa !25
  %129 = load i32, ptr @_ZZ11recordModelR5MixerE5rlen1, align 4, !tbaa !25
  %130 = icmp eq i32 %128, %129
  br i1 %130, label %131, label %140

131:                                              ; preds = %124, %127
  %132 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !25
  br label %133

133:                                              ; preds = %131, %119
  %134 = phi i32 [ %132, %131 ], [ %116, %119 ]
  %135 = icmp sgt i32 %134, 15
  br i1 %135, label %136, label %142

136:                                              ; preds = %133
  %137 = load i32, ptr @_ZZ11recordModelR5MixerE4rlen, align 4, !tbaa !25
  %138 = load i32, ptr @_ZZ11recordModelR5MixerE5rlen2, align 4, !tbaa !25
  %139 = icmp eq i32 %137, %138
  br i1 %139, label %142, label %140

140:                                              ; preds = %136, %127
  %141 = phi i32 [ %129, %127 ], [ %138, %136 ]
  store i32 %141, ptr @_ZZ11recordModelR5MixerE4rlen, align 4, !tbaa !25
  store i32 0, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !25
  store i32 0, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !25
  br label %142

142:                                              ; preds = %140, %136, %133
  %143 = shl nuw nsw i32 %47, 8
  %144 = tail call i32 @llvm.smin.i32(i32 %53, i32 255)
  %145 = sdiv i32 %144, 4
  %146 = or i32 %145, %143
  %147 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %148 = add nsw i32 %147, 1
  store i32 %148, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %149 = mul i32 %146, 987654323
  %150 = add i32 %147, %149
  %151 = tail call i32 @llvm.fshl.i32(i32 %150, i32 %150, i32 16)
  %152 = mul i32 %151, 123456791
  %153 = add i32 %152, %147
  %154 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %155 = sext i32 %147 to i64
  %156 = getelementptr inbounds i32, ptr %154, i64 %155
  store i32 %153, ptr %156, align 4, !tbaa !25
  %157 = shl nuw nsw i32 %46, 9
  %158 = load i32, ptr @pos, align 4, !tbaa !25
  %159 = zext i32 %46 to i64
  %160 = getelementptr inbounds [65536 x i32], ptr @_ZZ11recordModelR5MixerE5wpos1, i64 0, i64 %159
  %161 = load i32, ptr %160, align 4, !tbaa !25
  %162 = sub nsw i32 %158, %161
  %163 = icmp ugt i32 %162, 16777215
  br i1 %163, label %164, label %172

164:                                              ; preds = %142
  %165 = lshr i32 %162, 16
  %166 = zext i32 %165 to i64
  %167 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %168 = getelementptr inbounds i8, ptr %167, i64 %166
  %169 = load i8, ptr %168, align 1, !tbaa !9
  %170 = zext i8 %169 to i32
  %171 = or i32 %170, 256
  br label %188

172:                                              ; preds = %142
  %173 = icmp ugt i32 %162, 65535
  br i1 %173, label %174, label %182

174:                                              ; preds = %172
  %175 = lshr i32 %162, 8
  %176 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %177 = zext i32 %175 to i64
  %178 = getelementptr inbounds i8, ptr %176, i64 %177
  %179 = load i8, ptr %178, align 1, !tbaa !9
  %180 = zext i8 %179 to i32
  %181 = add nuw nsw i32 %180, 128
  br label %188

182:                                              ; preds = %172
  %183 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %184 = zext i32 %162 to i64
  %185 = getelementptr inbounds i8, ptr %183, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !9
  %187 = zext i8 %186 to i32
  br label %188

188:                                              ; preds = %164, %174, %182
  %189 = phi i32 [ %171, %164 ], [ %181, %174 ], [ %187, %182 ]
  %190 = lshr i32 %189, 2
  %191 = or i32 %190, %157
  %192 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %193 = add nsw i32 %192, 1
  store i32 %193, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %194 = mul i32 %191, 987654323
  %195 = add i32 %194, %192
  %196 = tail call i32 @llvm.fshl.i32(i32 %195, i32 %195, i32 16)
  %197 = mul i32 %196, 123456791
  %198 = add i32 %197, %192
  %199 = sext i32 %192 to i64
  %200 = getelementptr inbounds i32, ptr %154, i64 %199
  store i32 %198, ptr %200, align 4, !tbaa !25
  %201 = load i32, ptr @_ZZ11recordModelR5MixerE4rlen, align 4, !tbaa !25
  %202 = load i32, ptr @pos, align 4, !tbaa !25
  %203 = sub nsw i32 %202, %201
  %204 = load i32, ptr @buf, align 8, !tbaa !20
  %205 = add nsw i32 %204, -1
  %206 = and i32 %205, %203
  %207 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %208 = sext i32 %206 to i64
  %209 = getelementptr inbounds i8, ptr %207, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !9
  %211 = zext i8 %210 to i32
  %212 = shl nuw nsw i32 %211, 10
  %213 = shl nuw nsw i32 %201, 1
  %214 = sub nsw i32 %202, %213
  %215 = and i32 %205, %214
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds i8, ptr %207, i64 %216
  %218 = load i8, ptr %217, align 1, !tbaa !9
  %219 = zext i8 %218 to i32
  %220 = shl nuw nsw i32 %219, 18
  %221 = or i32 %212, %220
  %222 = or i32 %221, %201
  %223 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %224 = add nsw i32 %223, 1
  store i32 %224, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %225 = mul i32 %222, 987654323
  %226 = add i32 %225, %223
  %227 = tail call i32 @llvm.fshl.i32(i32 %226, i32 %226, i32 16)
  %228 = mul i32 %227, 123456791
  %229 = add i32 %228, %223
  %230 = sext i32 %223 to i64
  %231 = getelementptr inbounds i32, ptr %154, i64 %230
  store i32 %229, ptr %231, align 4, !tbaa !25
  %232 = shl i32 %201, 8
  %233 = or i32 %232, %46
  %234 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !102
  %235 = add nsw i32 %234, 1
  store i32 %235, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !102
  %236 = mul i32 %233, 987654323
  %237 = add i32 %234, %236
  %238 = tail call i32 @llvm.fshl.i32(i32 %237, i32 %237, i32 16)
  %239 = mul i32 %238, 123456791
  %240 = add i32 %239, %234
  %241 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %242 = sext i32 %234 to i64
  %243 = getelementptr inbounds i32, ptr %241, i64 %242
  store i32 %240, ptr %243, align 4, !tbaa !25
  %244 = shl i32 %201, 16
  %245 = or i32 %244, %48
  %246 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !102
  %247 = add nsw i32 %246, 1
  store i32 %247, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !102
  %248 = mul i32 %245, 987654323
  %249 = add i32 %246, %248
  %250 = tail call i32 @llvm.fshl.i32(i32 %249, i32 %249, i32 16)
  %251 = mul i32 %250, 123456791
  %252 = add i32 %251, %246
  %253 = sext i32 %246 to i64
  %254 = getelementptr inbounds i32, ptr %241, i64 %253
  store i32 %252, ptr %254, align 4, !tbaa !25
  %255 = or i32 %232, %47
  %256 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !102
  %257 = add nsw i32 %256, 1
  store i32 %257, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !102
  %258 = mul i32 %255, 987654323
  %259 = add i32 %256, %258
  %260 = tail call i32 @llvm.fshl.i32(i32 %259, i32 %259, i32 16)
  %261 = mul i32 %260, 123456791
  %262 = add i32 %261, %256
  %263 = sext i32 %256 to i64
  %264 = getelementptr inbounds i32, ptr %241, i64 %263
  store i32 %262, ptr %264, align 4, !tbaa !25
  %265 = load i32, ptr @pos, align 4, !tbaa !25
  %266 = add nsw i32 %265, -1
  %267 = load i32, ptr @buf, align 8, !tbaa !20
  %268 = add nsw i32 %267, -1
  %269 = and i32 %268, %266
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds i8, ptr %207, i64 %270
  %272 = load i8, ptr %271, align 1, !tbaa !9
  %273 = zext i8 %272 to i32
  %274 = shl nuw nsw i32 %273, 8
  %275 = zext i8 %272 to i64
  %276 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos1, i64 0, i64 %275
  %277 = load i32, ptr %276, align 4, !tbaa !25
  %278 = sub nsw i32 %265, %277
  %279 = tail call i32 @llvm.smin.i32(i32 %278, i32 255)
  %280 = or i32 %279, %274
  %281 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !102
  %282 = add nsw i32 %281, 1
  store i32 %282, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !102
  %283 = mul i32 %280, 987654323
  %284 = add i32 %283, %281
  %285 = tail call i32 @llvm.fshl.i32(i32 %284, i32 %284, i32 16)
  %286 = mul i32 %285, 123456791
  %287 = add i32 %286, %281
  %288 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %289 = sext i32 %281 to i64
  %290 = getelementptr inbounds i32, ptr %288, i64 %289
  store i32 %287, ptr %290, align 4, !tbaa !25
  %291 = load i32, ptr @pos, align 4, !tbaa !25
  %292 = add nsw i32 %291, -1
  %293 = load i32, ptr @buf, align 8, !tbaa !20
  %294 = add nsw i32 %293, -1
  %295 = and i32 %294, %292
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds i8, ptr %207, i64 %296
  %298 = load i8, ptr %297, align 1, !tbaa !9
  %299 = zext i8 %298 to i32
  %300 = shl nuw nsw i32 %299, 17
  %301 = add nsw i32 %291, -2
  %302 = and i32 %294, %301
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds i8, ptr %207, i64 %303
  %305 = load i8, ptr %304, align 1, !tbaa !9
  %306 = zext i8 %305 to i32
  %307 = shl nuw nsw i32 %306, 9
  %308 = or i32 %307, %300
  %309 = sub nsw i32 %291, %161
  %310 = icmp ugt i32 %309, 16777215
  br i1 %310, label %311, label %319

311:                                              ; preds = %188
  %312 = lshr i32 %309, 16
  %313 = zext i32 %312 to i64
  %314 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %315 = getelementptr inbounds i8, ptr %314, i64 %313
  %316 = load i8, ptr %315, align 1, !tbaa !9
  %317 = zext i8 %316 to i32
  %318 = or i32 %317, 256
  br label %335

319:                                              ; preds = %188
  %320 = icmp ugt i32 %309, 65535
  br i1 %320, label %321, label %329

321:                                              ; preds = %319
  %322 = lshr i32 %309, 8
  %323 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %324 = zext i32 %322 to i64
  %325 = getelementptr inbounds i8, ptr %323, i64 %324
  %326 = load i8, ptr %325, align 1, !tbaa !9
  %327 = zext i8 %326 to i32
  %328 = add nuw nsw i32 %327, 128
  br label %335

329:                                              ; preds = %319
  %330 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %331 = zext i32 %309 to i64
  %332 = getelementptr inbounds i8, ptr %330, i64 %331
  %333 = load i8, ptr %332, align 1, !tbaa !9
  %334 = zext i8 %333 to i32
  br label %335

335:                                              ; preds = %311, %321, %329
  %336 = phi i32 [ %318, %311 ], [ %328, %321 ], [ %334, %329 ]
  %337 = lshr i32 %336, 2
  %338 = or i32 %308, %337
  %339 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !102
  %340 = add nsw i32 %339, 1
  store i32 %340, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !102
  %341 = mul i32 %338, 987654323
  %342 = add i32 %341, %339
  %343 = tail call i32 @llvm.fshl.i32(i32 %342, i32 %342, i32 16)
  %344 = mul i32 %343, 123456791
  %345 = add i32 %344, %339
  %346 = sext i32 %339 to i64
  %347 = getelementptr inbounds i32, ptr %288, i64 %346
  store i32 %345, ptr %347, align 4, !tbaa !25
  %348 = load i32, ptr @pos, align 4, !tbaa !25
  %349 = srem i32 %348, %201
  %350 = add nsw i32 %348, -1
  %351 = load i32, ptr @buf, align 8, !tbaa !20
  %352 = add nsw i32 %351, -1
  %353 = and i32 %352, %350
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds i8, ptr %207, i64 %354
  %356 = load i8, ptr %355, align 1, !tbaa !9
  %357 = zext i8 %356 to i32
  %358 = shl nuw nsw i32 %357, 8
  %359 = sub nsw i32 %348, %201
  %360 = and i32 %352, %359
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds i8, ptr %207, i64 %361
  %363 = load i8, ptr %362, align 1, !tbaa !9
  %364 = zext i8 %363 to i32
  %365 = or i32 %358, %364
  %366 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !102
  %367 = add nsw i32 %366, 1
  store i32 %367, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !102
  %368 = mul i32 %365, 987654323
  %369 = add i32 %368, %366
  %370 = tail call i32 @llvm.fshl.i32(i32 %369, i32 %369, i32 16)
  %371 = mul i32 %370, 123456791
  %372 = add i32 %371, %366
  %373 = sext i32 %366 to i64
  %374 = getelementptr inbounds i32, ptr %288, i64 %373
  store i32 %372, ptr %374, align 4, !tbaa !25
  %375 = load i32, ptr @pos, align 4, !tbaa !25
  %376 = sub nsw i32 %375, %201
  %377 = load i32, ptr @buf, align 8, !tbaa !20
  %378 = add nsw i32 %377, -1
  %379 = and i32 %378, %376
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds i8, ptr %207, i64 %380
  %382 = load i8, ptr %381, align 1, !tbaa !9
  %383 = zext i8 %382 to i32
  %384 = shl nuw nsw i32 %383, 10
  %385 = shl i32 %349, 18
  %386 = or i32 %201, %384
  %387 = or i32 %386, %385
  %388 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !102
  %389 = add nsw i32 %388, 1
  store i32 %389, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !102
  %390 = mul i32 %387, 987654323
  %391 = add i32 %390, %388
  %392 = tail call i32 @llvm.fshl.i32(i32 %391, i32 %391, i32 16)
  %393 = mul i32 %392, 123456791
  %394 = add i32 %393, %388
  %395 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %396 = sext i32 %388 to i64
  %397 = getelementptr inbounds i32, ptr %395, i64 %396
  store i32 %394, ptr %397, align 4, !tbaa !25
  %398 = load i32, ptr @pos, align 4, !tbaa !25
  %399 = add nsw i32 %398, -1
  %400 = load i32, ptr @buf, align 8, !tbaa !20
  %401 = add nsw i32 %400, -1
  %402 = and i32 %401, %399
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds i8, ptr %207, i64 %403
  %405 = load i8, ptr %404, align 1, !tbaa !9
  %406 = zext i8 %405 to i32
  %407 = shl nuw nsw i32 %406, 10
  %408 = or i32 %201, %407
  %409 = or i32 %408, %385
  %410 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !102
  %411 = add nsw i32 %410, 1
  store i32 %411, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !102
  %412 = mul i32 %409, 987654323
  %413 = add i32 %412, %410
  %414 = tail call i32 @llvm.fshl.i32(i32 %413, i32 %413, i32 16)
  %415 = mul i32 %414, 123456791
  %416 = add i32 %415, %410
  %417 = sext i32 %410 to i64
  %418 = getelementptr inbounds i32, ptr %395, i64 %417
  store i32 %416, ptr %418, align 4, !tbaa !25
  %419 = shl i32 %201, 12
  %420 = or i32 %349, %419
  %421 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !102
  %422 = add nsw i32 %421, 1
  store i32 %422, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !102
  %423 = mul i32 %420, 987654323
  %424 = add i32 %421, %423
  %425 = tail call i32 @llvm.fshl.i32(i32 %424, i32 %424, i32 16)
  %426 = mul i32 %425, 123456791
  %427 = add i32 %426, %421
  %428 = sext i32 %421 to i64
  %429 = getelementptr inbounds i32, ptr %395, i64 %428
  store i32 %427, ptr %429, align 4, !tbaa !25
  %430 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos3, i64 0, i64 %50
  %431 = load i32, ptr %430, align 4, !tbaa !25
  %432 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos4, i64 0, i64 %50
  store i32 %431, ptr %432, align 4, !tbaa !25
  %433 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos2, i64 0, i64 %50
  %434 = load i32, ptr %433, align 4, !tbaa !25
  store i32 %434, ptr %430, align 4, !tbaa !25
  store i32 %52, ptr %433, align 4, !tbaa !25
  %435 = load i32, ptr @pos, align 4, !tbaa !25
  store i32 %435, ptr %51, align 4, !tbaa !25
  store i32 %435, ptr %160, align 4, !tbaa !25
  %436 = load i32, ptr @bpos, align 4, !tbaa !25
  br label %437

437:                                              ; preds = %42, %335
  %438 = phi i32 [ %435, %335 ], [ %43, %42 ]
  %439 = phi i32 [ %436, %335 ], [ %40, %42 ]
  %440 = load i32, ptr @c0, align 4, !tbaa !25
  %441 = add nsw i32 %438, -1
  %442 = load i32, ptr @buf, align 8, !tbaa !20
  %443 = add nsw i32 %442, -1
  %444 = and i32 %443, %441
  %445 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %446 = sext i32 %444 to i64
  %447 = getelementptr inbounds i8, ptr %445, i64 %446
  %448 = load i8, ptr %447, align 1, !tbaa !9
  %449 = zext i8 %448 to i32
  %450 = load i32, ptr @y, align 4, !tbaa !25
  %451 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %440, i32 noundef %439, i32 noundef %449, i32 noundef %450)
  %452 = load i32, ptr @c0, align 4, !tbaa !25
  %453 = load i32, ptr @bpos, align 4, !tbaa !25
  %454 = load i32, ptr @pos, align 4, !tbaa !25
  %455 = add nsw i32 %454, -1
  %456 = load i32, ptr @buf, align 8, !tbaa !20
  %457 = add nsw i32 %456, -1
  %458 = and i32 %457, %455
  %459 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %460 = sext i32 %458 to i64
  %461 = getelementptr inbounds i8, ptr %459, i64 %460
  %462 = load i8, ptr %461, align 1, !tbaa !9
  %463 = zext i8 %462 to i32
  %464 = load i32, ptr @y, align 4, !tbaa !25
  %465 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cn, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %452, i32 noundef %453, i32 noundef %463, i32 noundef %464)
  %466 = load i32, ptr @c0, align 4, !tbaa !25
  %467 = load i32, ptr @bpos, align 4, !tbaa !25
  %468 = load i32, ptr @pos, align 4, !tbaa !25
  %469 = add nsw i32 %468, -1
  %470 = load i32, ptr @buf, align 8, !tbaa !20
  %471 = add nsw i32 %470, -1
  %472 = and i32 %471, %469
  %473 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %474 = sext i32 %472 to i64
  %475 = getelementptr inbounds i8, ptr %473, i64 %474
  %476 = load i8, ptr %475, align 1, !tbaa !9
  %477 = zext i8 %476 to i32
  %478 = load i32, ptr @y, align 4, !tbaa !25
  %479 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2co, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %466, i32 noundef %467, i32 noundef %477, i32 noundef %478)
  %480 = load i32, ptr @c0, align 4, !tbaa !25
  %481 = load i32, ptr @bpos, align 4, !tbaa !25
  %482 = load i32, ptr @pos, align 4, !tbaa !25
  %483 = add nsw i32 %482, -1
  %484 = load i32, ptr @buf, align 8, !tbaa !20
  %485 = add nsw i32 %484, -1
  %486 = and i32 %485, %483
  %487 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %488 = sext i32 %486 to i64
  %489 = getelementptr inbounds i8, ptr %487, i64 %488
  %490 = load i8, ptr %489, align 1, !tbaa !9
  %491 = zext i8 %490 to i32
  %492 = load i32, ptr @y, align 4, !tbaa !25
  %493 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cp, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %480, i32 noundef %481, i32 noundef %491, i32 noundef %492)
  ret void

494:                                              ; preds = %106, %104, %102, %100
  %495 = phi ptr [ @_ZGVZ11recordModelR5MixerE2cp, %106 ], [ @_ZGVZ11recordModelR5MixerE2co, %104 ], [ @_ZGVZ11recordModelR5MixerE2cn, %102 ], [ @_ZGVZ11recordModelR5MixerE2cm, %100 ]
  %496 = phi { ptr, i32 } [ %107, %106 ], [ %105, %104 ], [ %103, %102 ], [ %101, %100 ]
  tail call void @__cxa_guard_abort(ptr nonnull %495) #39
  resume { ptr, i32 } %496
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z11sparseModelR5Mixerii(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %4 = load atomic i8, ptr @_ZGVZ11sparseModelR5MixeriiE2cm acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %14, !prof !110

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11sparseModelR5MixeriiE2cm) #39
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %6
  %10 = load i32, ptr @level, align 4, !tbaa !25
  %11 = shl i32 131072, %10
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11sparseModelR5MixeriiE2cm, i32 noundef %11, i32 noundef 48)
          to label %12 unwind label %251

12:                                               ; preds = %9
  %13 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11sparseModelR5MixeriiE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11sparseModelR5MixeriiE2cm) #39
  br label %14

14:                                               ; preds = %12, %6, %3
  %15 = load i32, ptr @bpos, align 4, !tbaa !25
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %421

17:                                               ; preds = %14
  %18 = load i32, ptr @c4, align 4, !tbaa !25
  %19 = and i32 %18, 15790320
  %20 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %21 = add nsw i32 %20, 1
  store i32 %21, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %22 = mul i32 %19, 987654323
  %23 = add i32 %22, %20
  %24 = tail call i32 @llvm.fshl.i32(i32 %23, i32 %23, i32 16)
  %25 = mul i32 %24, 123456791
  %26 = add i32 %25, %20
  %27 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %28 = sext i32 %20 to i64
  %29 = getelementptr inbounds i32, ptr %27, i64 %28
  store i32 %26, ptr %29, align 4, !tbaa !25
  %30 = load i32, ptr @c4, align 4, !tbaa !25
  %31 = and i32 %30, -252645136
  %32 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %33 = add nsw i32 %32, 1
  store i32 %33, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %34 = mul i32 %31, 987654323
  %35 = add i32 %32, 987654323
  %36 = add i32 %35, %34
  %37 = tail call i32 @llvm.fshl.i32(i32 %36, i32 %36, i32 16)
  %38 = mul i32 %37, 123456791
  %39 = add i32 %38, %32
  %40 = sext i32 %32 to i64
  %41 = getelementptr inbounds i32, ptr %27, i64 %40
  store i32 %39, ptr %41, align 4, !tbaa !25
  %42 = load i32, ptr @c4, align 4, !tbaa !25
  %43 = and i32 %42, 16316664
  %44 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %45 = add nsw i32 %44, 1
  store i32 %45, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %46 = mul i32 %43, 987654323
  %47 = add i32 %44, 1975308646
  %48 = add i32 %47, %46
  %49 = tail call i32 @llvm.fshl.i32(i32 %48, i32 %48, i32 16)
  %50 = mul i32 %49, 123456791
  %51 = add i32 %50, %44
  %52 = sext i32 %44 to i64
  %53 = getelementptr inbounds i32, ptr %27, i64 %52
  store i32 %51, ptr %53, align 4, !tbaa !25
  %54 = load i32, ptr @c4, align 4, !tbaa !25
  %55 = and i32 %54, -117901064
  %56 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %57 = add nsw i32 %56, 1
  store i32 %57, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %58 = mul i32 %55, 987654323
  %59 = add i32 %56, -1332004327
  %60 = add i32 %59, %58
  %61 = tail call i32 @llvm.fshl.i32(i32 %60, i32 %60, i32 16)
  %62 = mul i32 %61, 123456791
  %63 = add i32 %62, %56
  %64 = sext i32 %56 to i64
  %65 = getelementptr inbounds i32, ptr %27, i64 %64
  store i32 %63, ptr %65, align 4, !tbaa !25
  %66 = load i32, ptr @c4, align 4, !tbaa !25
  %67 = and i32 %66, 14737632
  %68 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %69 = add nsw i32 %68, 1
  store i32 %69, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %70 = mul i32 %67, 987654323
  %71 = add i32 %68, -344350004
  %72 = add i32 %71, %70
  %73 = tail call i32 @llvm.fshl.i32(i32 %72, i32 %72, i32 16)
  %74 = mul i32 %73, 123456791
  %75 = add i32 %74, %68
  %76 = sext i32 %68 to i64
  %77 = getelementptr inbounds i32, ptr %27, i64 %76
  store i32 %75, ptr %77, align 4, !tbaa !25
  %78 = load i32, ptr @c4, align 4, !tbaa !25
  %79 = and i32 %78, -522133280
  %80 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %81 = add nsw i32 %80, 1
  store i32 %81, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %82 = mul i32 %79, 987654323
  %83 = add i32 %80, 643304319
  %84 = add i32 %83, %82
  %85 = tail call i32 @llvm.fshl.i32(i32 %84, i32 %84, i32 16)
  %86 = mul i32 %85, 123456791
  %87 = add i32 %86, %80
  %88 = sext i32 %80 to i64
  %89 = getelementptr inbounds i32, ptr %27, i64 %88
  store i32 %87, ptr %89, align 4, !tbaa !25
  %90 = load i32, ptr @c4, align 4, !tbaa !25
  %91 = and i32 %90, 15790335
  %92 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %93 = add nsw i32 %92, 1
  store i32 %93, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %94 = mul i32 %91, 987654323
  %95 = add i32 %92, 1630958642
  %96 = add i32 %95, %94
  %97 = tail call i32 @llvm.fshl.i32(i32 %96, i32 %96, i32 16)
  %98 = mul i32 %97, 123456791
  %99 = add i32 %98, %92
  %100 = sext i32 %92 to i64
  %101 = getelementptr inbounds i32, ptr %27, i64 %100
  store i32 %99, ptr %101, align 4, !tbaa !25
  %102 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %103 = add nsw i32 %102, 1
  store i32 %103, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %104 = mul i32 %1, 987654323
  %105 = add i32 %102, %104
  %106 = tail call i32 @llvm.fshl.i32(i32 %105, i32 %105, i32 16)
  %107 = mul i32 %106, 123456791
  %108 = add i32 %107, %102
  %109 = sext i32 %102 to i64
  %110 = getelementptr inbounds i32, ptr %27, i64 %109
  store i32 %108, ptr %110, align 4, !tbaa !25
  %111 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %112 = add nsw i32 %111, 1
  store i32 %112, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %113 = mul i32 %2, 987654323
  %114 = add i32 %111, %113
  %115 = tail call i32 @llvm.fshl.i32(i32 %114, i32 %114, i32 16)
  %116 = mul i32 %115, 123456791
  %117 = add i32 %116, %111
  %118 = sext i32 %111 to i64
  %119 = getelementptr inbounds i32, ptr %27, i64 %118
  store i32 %117, ptr %119, align 4, !tbaa !25
  %120 = load i32, ptr @c4, align 4, !tbaa !25
  %121 = and i32 %120, 16711935
  %122 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %123 = add nsw i32 %122, 1
  store i32 %123, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %124 = mul i32 %121, 987654323
  %125 = add i32 %124, %122
  %126 = tail call i32 @llvm.fshl.i32(i32 %125, i32 %125, i32 16)
  %127 = mul i32 %126, 123456791
  %128 = add i32 %127, %122
  %129 = sext i32 %122 to i64
  %130 = getelementptr inbounds i32, ptr %27, i64 %129
  store i32 %128, ptr %130, align 4, !tbaa !25
  %131 = load i32, ptr @c4, align 4, !tbaa !25
  %132 = and i32 %131, -16776961
  %133 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %134 = add nsw i32 %133, 1
  store i32 %134, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %135 = mul i32 %132, 987654323
  %136 = add i32 %135, %133
  %137 = tail call i32 @llvm.fshl.i32(i32 %136, i32 %136, i32 16)
  %138 = mul i32 %137, 123456791
  %139 = add i32 %138, %133
  %140 = sext i32 %133 to i64
  %141 = getelementptr inbounds i32, ptr %27, i64 %140
  store i32 %139, ptr %141, align 4, !tbaa !25
  %142 = load i32, ptr @pos, align 4, !tbaa !25
  %143 = add nsw i32 %142, -1
  %144 = load i32, ptr @buf, align 8, !tbaa !20
  %145 = add nsw i32 %144, -1
  %146 = and i32 %145, %143
  %147 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %148 = sext i32 %146 to i64
  %149 = getelementptr inbounds i8, ptr %147, i64 %148
  %150 = load i8, ptr %149, align 1, !tbaa !9
  %151 = zext i8 %150 to i32
  %152 = add nsw i32 %142, -5
  %153 = and i32 %145, %152
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds i8, ptr %147, i64 %154
  %156 = load i8, ptr %155, align 1, !tbaa !9
  %157 = zext i8 %156 to i32
  %158 = shl nuw nsw i32 %157, 8
  %159 = or i32 %158, %151
  %160 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %161 = add nsw i32 %160, 1
  store i32 %161, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %162 = mul i32 %159, 987654323
  %163 = add i32 %162, %160
  %164 = tail call i32 @llvm.fshl.i32(i32 %163, i32 %163, i32 16)
  %165 = mul i32 %164, 123456791
  %166 = add i32 %165, %160
  %167 = sext i32 %160 to i64
  %168 = getelementptr inbounds i32, ptr %27, i64 %167
  store i32 %166, ptr %168, align 4, !tbaa !25
  %169 = load i32, ptr @pos, align 4, !tbaa !25
  %170 = add nsw i32 %169, -1
  %171 = load i32, ptr @buf, align 8, !tbaa !20
  %172 = add nsw i32 %171, -1
  %173 = and i32 %172, %170
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i8, ptr %147, i64 %174
  %176 = load i8, ptr %175, align 1, !tbaa !9
  %177 = zext i8 %176 to i32
  %178 = add nsw i32 %169, -6
  %179 = and i32 %172, %178
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i8, ptr %147, i64 %180
  %182 = load i8, ptr %181, align 1, !tbaa !9
  %183 = zext i8 %182 to i32
  %184 = shl nuw nsw i32 %183, 8
  %185 = or i32 %184, %177
  %186 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %187 = add nsw i32 %186, 1
  store i32 %187, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %188 = mul i32 %185, 987654323
  %189 = add i32 %188, %186
  %190 = tail call i32 @llvm.fshl.i32(i32 %189, i32 %189, i32 16)
  %191 = mul i32 %190, 123456791
  %192 = add i32 %191, %186
  %193 = sext i32 %186 to i64
  %194 = getelementptr inbounds i32, ptr %27, i64 %193
  store i32 %192, ptr %194, align 4, !tbaa !25
  %195 = load i32, ptr @pos, align 4, !tbaa !25
  %196 = add nsw i32 %195, -3
  %197 = load i32, ptr @buf, align 8, !tbaa !20
  %198 = add nsw i32 %197, -1
  %199 = and i32 %198, %196
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i8, ptr %147, i64 %200
  %202 = load i8, ptr %201, align 1, !tbaa !9
  %203 = zext i8 %202 to i32
  %204 = add nsw i32 %195, -6
  %205 = and i32 %198, %204
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds i8, ptr %147, i64 %206
  %208 = load i8, ptr %207, align 1, !tbaa !9
  %209 = zext i8 %208 to i32
  %210 = shl nuw nsw i32 %209, 8
  %211 = or i32 %210, %203
  %212 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %213 = add nsw i32 %212, 1
  store i32 %213, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %214 = mul i32 %211, 987654323
  %215 = add i32 %214, %212
  %216 = tail call i32 @llvm.fshl.i32(i32 %215, i32 %215, i32 16)
  %217 = mul i32 %216, 123456791
  %218 = add i32 %217, %212
  %219 = sext i32 %212 to i64
  %220 = getelementptr inbounds i32, ptr %27, i64 %219
  store i32 %218, ptr %220, align 4, !tbaa !25
  %221 = load i32, ptr @pos, align 4, !tbaa !25
  %222 = add nsw i32 %221, -4
  %223 = load i32, ptr @buf, align 8, !tbaa !20
  %224 = add nsw i32 %223, -1
  %225 = and i32 %224, %222
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds i8, ptr %147, i64 %226
  %228 = load i8, ptr %227, align 1, !tbaa !9
  %229 = zext i8 %228 to i32
  %230 = add nsw i32 %221, -8
  %231 = and i32 %224, %230
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds i8, ptr %147, i64 %232
  %234 = load i8, ptr %233, align 1, !tbaa !9
  %235 = zext i8 %234 to i32
  %236 = shl nuw nsw i32 %235, 8
  %237 = or i32 %236, %229
  %238 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %239 = add nsw i32 %238, 1
  store i32 %239, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %240 = mul i32 %237, 987654323
  %241 = add i32 %240, %238
  %242 = tail call i32 @llvm.fshl.i32(i32 %241, i32 %241, i32 16)
  %243 = mul i32 %242, 123456791
  %244 = add i32 %243, %238
  %245 = sext i32 %238 to i64
  %246 = getelementptr inbounds i32, ptr %27, i64 %245
  store i32 %244, ptr %246, align 4, !tbaa !25
  br label %253

247:                                              ; preds = %253
  %248 = load i32, ptr @c4, align 4, !tbaa !25
  %249 = and i32 %248, 1
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %344, label %333

251:                                              ; preds = %9
  %252 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ11sparseModelR5MixeriiE2cm) #39
  resume { ptr, i32 } %252

253:                                              ; preds = %17, %253
  %254 = phi i32 [ -1, %17 ], [ %331, %253 ]
  %255 = phi i32 [ 1, %17 ], [ %256, %253 ]
  %256 = add nuw nsw i32 %255, 1
  %257 = load i32, ptr @pos, align 4, !tbaa !25
  %258 = sub nsw i32 %257, %256
  %259 = load i32, ptr @buf, align 8, !tbaa !20
  %260 = add nsw i32 %259, -1
  %261 = and i32 %260, %258
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds i8, ptr %147, i64 %262
  %264 = load i8, ptr %263, align 1, !tbaa !9
  %265 = zext i8 %264 to i32
  %266 = shl nuw nsw i32 %265, 8
  %267 = add nsw i32 %254, -2
  %268 = add i32 %267, %257
  %269 = and i32 %260, %268
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds i8, ptr %147, i64 %270
  %272 = load i8, ptr %271, align 1, !tbaa !9
  %273 = zext i8 %272 to i32
  %274 = or i32 %266, %273
  %275 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %276 = add nsw i32 %275, 1
  store i32 %276, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %277 = mul i32 %274, 987654323
  %278 = add i32 %277, %275
  %279 = tail call i32 @llvm.fshl.i32(i32 %278, i32 %278, i32 16)
  %280 = mul i32 %279, 123456791
  %281 = add i32 %280, %275
  %282 = sext i32 %275 to i64
  %283 = getelementptr inbounds i32, ptr %27, i64 %282
  store i32 %281, ptr %283, align 4, !tbaa !25
  %284 = load i32, ptr @pos, align 4, !tbaa !25
  %285 = sub nsw i32 %284, %256
  %286 = load i32, ptr @buf, align 8, !tbaa !20
  %287 = add nsw i32 %286, -1
  %288 = and i32 %287, %285
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds i8, ptr %147, i64 %289
  %291 = load i8, ptr %290, align 1, !tbaa !9
  %292 = zext i8 %291 to i32
  %293 = shl nuw nsw i32 %292, 8
  %294 = add nsw i32 %254, -3
  %295 = add i32 %294, %284
  %296 = and i32 %287, %295
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds i8, ptr %147, i64 %297
  %299 = load i8, ptr %298, align 1, !tbaa !9
  %300 = zext i8 %299 to i32
  %301 = or i32 %293, %300
  %302 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %303 = add nsw i32 %302, 1
  store i32 %303, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %304 = mul i32 %301, 987654323
  %305 = add i32 %304, %302
  %306 = tail call i32 @llvm.fshl.i32(i32 %305, i32 %305, i32 16)
  %307 = mul i32 %306, 123456791
  %308 = add i32 %307, %302
  %309 = sext i32 %302 to i64
  %310 = getelementptr inbounds i32, ptr %27, i64 %309
  store i32 %308, ptr %310, align 4, !tbaa !25
  %311 = load i32, ptr @pos, align 4, !tbaa !25
  %312 = sub nsw i32 %311, %255
  %313 = load i32, ptr @buf, align 8, !tbaa !20
  %314 = add nsw i32 %313, -1
  %315 = and i32 %314, %312
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds i8, ptr %147, i64 %316
  %318 = load i8, ptr %317, align 1, !tbaa !9
  %319 = zext i8 %318 to i32
  %320 = shl nuw nsw i32 %319, 8
  %321 = or i32 %320, %1
  %322 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %323 = add nsw i32 %322, 1
  store i32 %323, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %324 = mul i32 %321, 987654323
  %325 = add i32 %324, %322
  %326 = tail call i32 @llvm.fshl.i32(i32 %325, i32 %325, i32 16)
  %327 = mul i32 %326, 123456791
  %328 = add i32 %327, %322
  %329 = sext i32 %322 to i64
  %330 = getelementptr inbounds i32, ptr %27, i64 %329
  store i32 %328, ptr %330, align 4, !tbaa !25
  %331 = xor i32 %255, -1
  %332 = icmp eq i32 %256, 8
  br i1 %332, label %247, label %253, !llvm.loop !117

333:                                              ; preds = %247
  %334 = and i32 %248, 255
  %335 = tail call i32 @isalpha(i32 noundef %334) #44
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %344

337:                                              ; preds = %333
  %338 = tail call i32 @ispunct(i32 noundef %334) #44
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %344

340:                                              ; preds = %337
  %341 = tail call i32 @isspace(i32 noundef %334) #44
  %342 = icmp eq i32 %341, 0
  %343 = select i1 %342, i32 4, i32 3
  br label %344

344:                                              ; preds = %340, %337, %333, %247
  %345 = phi i32 [ 0, %247 ], [ 1, %333 ], [ 2, %337 ], [ %343, %340 ]
  %346 = load i32, ptr @_ZZ11sparseModelR5MixeriiE4mask, align 4, !tbaa !25
  %347 = shl i32 %346, 3
  %348 = or i32 %347, %345
  store i32 %348, ptr @_ZZ11sparseModelR5MixeriiE4mask, align 4, !tbaa !25
  %349 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %350 = add nsw i32 %349, 1
  store i32 %350, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %351 = mul i32 %348, 987654323
  %352 = add i32 %351, %349
  %353 = tail call i32 @llvm.fshl.i32(i32 %352, i32 %352, i32 16)
  %354 = mul i32 %353, 123456791
  %355 = add i32 %354, %349
  %356 = sext i32 %349 to i64
  %357 = getelementptr inbounds i32, ptr %27, i64 %356
  store i32 %355, ptr %357, align 4, !tbaa !25
  %358 = shl i32 %348, 8
  %359 = load i32, ptr @pos, align 4, !tbaa !25
  %360 = add nsw i32 %359, -1
  %361 = load i32, ptr @buf, align 8, !tbaa !20
  %362 = add nsw i32 %361, -1
  %363 = and i32 %362, %360
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds i8, ptr %147, i64 %364
  %366 = load i8, ptr %365, align 1, !tbaa !9
  %367 = zext i8 %366 to i32
  %368 = or i32 %358, %367
  %369 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %370 = add nsw i32 %369, 1
  store i32 %370, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %371 = mul i32 %368, 987654323
  %372 = add i32 %371, %369
  %373 = tail call i32 @llvm.fshl.i32(i32 %372, i32 %372, i32 16)
  %374 = mul i32 %373, 123456791
  %375 = add i32 %374, %369
  %376 = sext i32 %369 to i64
  %377 = getelementptr inbounds i32, ptr %27, i64 %376
  store i32 %375, ptr %377, align 4, !tbaa !25
  %378 = shl i32 %348, 17
  %379 = load i32, ptr @pos, align 4, !tbaa !25
  %380 = add nsw i32 %379, -2
  %381 = load i32, ptr @buf, align 8, !tbaa !20
  %382 = add nsw i32 %381, -1
  %383 = and i32 %382, %380
  %384 = sext i32 %383 to i64
  %385 = getelementptr inbounds i8, ptr %147, i64 %384
  %386 = load i8, ptr %385, align 1, !tbaa !9
  %387 = zext i8 %386 to i32
  %388 = shl nuw nsw i32 %387, 8
  %389 = or i32 %388, %378
  %390 = add nsw i32 %379, -3
  %391 = and i32 %382, %390
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds i8, ptr %147, i64 %392
  %394 = load i8, ptr %393, align 1, !tbaa !9
  %395 = zext i8 %394 to i32
  %396 = or i32 %389, %395
  %397 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %398 = add nsw i32 %397, 1
  store i32 %398, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %399 = mul i32 %396, 987654323
  %400 = add i32 %399, %397
  %401 = tail call i32 @llvm.fshl.i32(i32 %400, i32 %400, i32 16)
  %402 = mul i32 %401, 123456791
  %403 = add i32 %402, %397
  %404 = sext i32 %397 to i64
  %405 = getelementptr inbounds i32, ptr %27, i64 %404
  store i32 %403, ptr %405, align 4, !tbaa !25
  %406 = and i32 %348, 511
  %407 = load i32, ptr @c4, align 4, !tbaa !25
  %408 = shl i32 %407, 9
  %409 = and i32 %408, -505290752
  %410 = or i32 %409, %406
  %411 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %412 = add nsw i32 %411, 1
  store i32 %412, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %413 = mul i32 %410, 987654323
  %414 = add i32 %413, %411
  %415 = tail call i32 @llvm.fshl.i32(i32 %414, i32 %414, i32 16)
  %416 = mul i32 %415, 123456791
  %417 = add i32 %416, %411
  %418 = sext i32 %411 to i64
  %419 = getelementptr inbounds i32, ptr %27, i64 %418
  store i32 %417, ptr %419, align 4, !tbaa !25
  %420 = load i32, ptr @bpos, align 4, !tbaa !25
  br label %421

421:                                              ; preds = %344, %14
  %422 = phi i32 [ %420, %344 ], [ %15, %14 ]
  %423 = load i32, ptr @c0, align 4, !tbaa !25
  %424 = load i32, ptr @pos, align 4, !tbaa !25
  %425 = add nsw i32 %424, -1
  %426 = load i32, ptr @buf, align 8, !tbaa !20
  %427 = add nsw i32 %426, -1
  %428 = and i32 %427, %425
  %429 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %430 = sext i32 %428 to i64
  %431 = getelementptr inbounds i8, ptr %429, i64 %430
  %432 = load i8, ptr %431, align 1, !tbaa !9
  %433 = zext i8 %432 to i32
  %434 = load i32, ptr @y, align 4, !tbaa !25
  %435 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11sparseModelR5MixeriiE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %423, i32 noundef %422, i32 noundef %433, i32 noundef %434)
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare i32 @isalpha(i32 noundef) local_unnamed_addr #16

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare i32 @ispunct(i32 noundef) local_unnamed_addr #16

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare i32 @isspace(i32 noundef) local_unnamed_addr #16

; Function Attrs: mustprogress uwtable
define dso_local void @_Z13distanceModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ13distanceModelR5MixerE2cr acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13distanceModelR5MixerE2cr) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @level, align 4, !tbaa !25
  %9 = shl i32 65536, %8
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13distanceModelR5MixerE2cr, i32 noundef %9, i32 noundef 3)
          to label %10 unwind label %22

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ13distanceModelR5MixerE2cr, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13distanceModelR5MixerE2cr) #39
  br label %12

12:                                               ; preds = %10, %4, %1
  %13 = load i32, ptr @bpos, align 4, !tbaa !25
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %76

15:                                               ; preds = %12
  %16 = load i32, ptr @c4, align 4, !tbaa !25
  %17 = trunc i32 %16 to i8
  switch i8 %17, label %18 [
    i8 0, label %20
    i8 32, label %24
    i8 -1, label %26
    i8 13, label %26
    i8 10, label %26
  ]

18:                                               ; preds = %15
  %19 = load i32, ptr @pos, align 4, !tbaa !25
  br label %28

20:                                               ; preds = %15
  %21 = load i32, ptr @pos, align 4, !tbaa !25
  store i32 %21, ptr @_ZZ13distanceModelR5MixerE5pos00, align 4, !tbaa !25
  br label %28

22:                                               ; preds = %7
  %23 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ13distanceModelR5MixerE2cr) #39
  resume { ptr, i32 } %23

24:                                               ; preds = %15
  %25 = load i32, ptr @pos, align 4, !tbaa !25
  store i32 %25, ptr @_ZZ13distanceModelR5MixerE5pos20, align 4, !tbaa !25
  br label %28

26:                                               ; preds = %15, %15, %15
  %27 = load i32, ptr @pos, align 4, !tbaa !25
  store i32 %27, ptr @_ZZ13distanceModelR5MixerE5posnl, align 4, !tbaa !25
  br label %28

28:                                               ; preds = %18, %24, %20, %26
  %29 = phi i32 [ %19, %18 ], [ %25, %24 ], [ %21, %20 ], [ %27, %26 ]
  %30 = load i32, ptr @_ZZ13distanceModelR5MixerE5pos00, align 4, !tbaa !25
  %31 = sub nsw i32 %29, %30
  %32 = tail call i32 @llvm.smin.i32(i32 %31, i32 255)
  %33 = shl i32 %16, 8
  %34 = and i32 %33, 65280
  %35 = or i32 %32, %34
  %36 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !102
  %37 = add nsw i32 %36, 1
  store i32 %37, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !102
  %38 = mul i32 %35, 987654323
  %39 = add i32 %38, %36
  %40 = tail call i32 @llvm.fshl.i32(i32 %39, i32 %39, i32 16)
  %41 = mul i32 %40, 123456791
  %42 = add i32 %41, %36
  %43 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %44 = sext i32 %36 to i64
  %45 = getelementptr inbounds i32, ptr %43, i64 %44
  store i32 %42, ptr %45, align 4, !tbaa !25
  %46 = load i32, ptr @pos, align 4, !tbaa !25
  %47 = load i32, ptr @_ZZ13distanceModelR5MixerE5pos20, align 4, !tbaa !25
  %48 = sub nsw i32 %46, %47
  %49 = tail call i32 @llvm.smin.i32(i32 %48, i32 255)
  %50 = or i32 %49, %34
  %51 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !102
  %52 = add nsw i32 %51, 1
  store i32 %52, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !102
  %53 = mul i32 %50, 987654323
  %54 = add i32 %53, %51
  %55 = tail call i32 @llvm.fshl.i32(i32 %54, i32 %54, i32 16)
  %56 = mul i32 %55, 123456791
  %57 = add i32 %56, %51
  %58 = sext i32 %51 to i64
  %59 = getelementptr inbounds i32, ptr %43, i64 %58
  store i32 %57, ptr %59, align 4, !tbaa !25
  %60 = load i32, ptr @pos, align 4, !tbaa !25
  %61 = load i32, ptr @_ZZ13distanceModelR5MixerE5posnl, align 4, !tbaa !25
  %62 = sub nsw i32 %60, %61
  %63 = tail call i32 @llvm.smin.i32(i32 %62, i32 255)
  %64 = add nuw nsw i32 %34, 234567
  %65 = or i32 %63, %64
  %66 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !102
  %67 = add nsw i32 %66, 1
  store i32 %67, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !102
  %68 = mul i32 %65, 987654323
  %69 = add i32 %68, %66
  %70 = tail call i32 @llvm.fshl.i32(i32 %69, i32 %69, i32 16)
  %71 = mul i32 %70, 123456791
  %72 = add i32 %71, %66
  %73 = sext i32 %66 to i64
  %74 = getelementptr inbounds i32, ptr %43, i64 %73
  store i32 %72, ptr %74, align 4, !tbaa !25
  %75 = load i32, ptr @bpos, align 4, !tbaa !25
  br label %76

76:                                               ; preds = %28, %12
  %77 = phi i32 [ %75, %28 ], [ %13, %12 ]
  %78 = load i32, ptr @c0, align 4, !tbaa !25
  %79 = load i32, ptr @pos, align 4, !tbaa !25
  %80 = add nsw i32 %79, -1
  %81 = load i32, ptr @buf, align 8, !tbaa !20
  %82 = add nsw i32 %81, -1
  %83 = and i32 %82, %80
  %84 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %85 = sext i32 %83 to i64
  %86 = getelementptr inbounds i8, ptr %84, i64 %85
  %87 = load i8, ptr %86, align 1, !tbaa !9
  %88 = zext i8 %87 to i32
  %89 = load i32, ptr @y, align 4, !tbaa !25
  %90 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13distanceModelR5MixerE2cr, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %78, i32 noundef %77, i32 noundef %88, i32 noundef %89)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z8bmpModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm1 acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm1) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm1, i32 noundef 131072)
          to label %8 unwind label %235

8:                                                ; preds = %7
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm1) #39
  br label %10

10:                                               ; preds = %8, %4, %1
  %11 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm2 acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19, !prof !110

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm2) #39
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm2, i32 noundef 131072)
          to label %17 unwind label %237

17:                                               ; preds = %16
  %18 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm2, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm2) #39
  br label %19

19:                                               ; preds = %17, %13, %10
  %20 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm3 acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %28, !prof !110

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm3) #39
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm3, i32 noundef 131072)
          to label %26 unwind label %239

26:                                               ; preds = %25
  %27 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm3, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm3) #39
  br label %28

28:                                               ; preds = %26, %22, %19
  %29 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm4 acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %37, !prof !110

31:                                               ; preds = %28
  %32 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm4) #39
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm4, i32 noundef 131072)
          to label %35 unwind label %241

35:                                               ; preds = %34
  %36 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm4, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm4) #39
  br label %37

37:                                               ; preds = %35, %31, %28
  %38 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm5 acquire, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %46, !prof !110

40:                                               ; preds = %37
  %41 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm5) #39
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm5, i32 noundef 131072)
          to label %44 unwind label %243

44:                                               ; preds = %43
  %45 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm5, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm5) #39
  br label %46

46:                                               ; preds = %44, %40, %37
  %47 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm6 acquire, align 8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %55, !prof !110

49:                                               ; preds = %46
  %50 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm6) #39
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm6, i32 noundef 131072)
          to label %53 unwind label %245

53:                                               ; preds = %52
  %54 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm6, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm6) #39
  br label %55

55:                                               ; preds = %53, %49, %46
  %56 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm7 acquire, align 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %64, !prof !110

58:                                               ; preds = %55
  %59 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm7) #39
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm7, i32 noundef 131072)
          to label %62 unwind label %247

62:                                               ; preds = %61
  %63 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm7, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm7) #39
  br label %64

64:                                               ; preds = %62, %58, %55
  %65 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm8 acquire, align 8
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %73, !prof !110

67:                                               ; preds = %64
  %68 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm8) #39
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm8, i32 noundef 131072)
          to label %71 unwind label %249

71:                                               ; preds = %70
  %72 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm8, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm8) #39
  br label %73

73:                                               ; preds = %71, %67, %64
  %74 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm9 acquire, align 8
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %82, !prof !110

76:                                               ; preds = %73
  %77 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm9) #39
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm9, i32 noundef 262144)
          to label %80 unwind label %251

80:                                               ; preds = %79
  %81 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm9, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm9) #39
  br label %82

82:                                               ; preds = %80, %76, %73
  %83 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE5scm10 acquire, align 8
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %91, !prof !110

85:                                               ; preds = %82
  %86 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE5scm10) #39
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %85
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE5scm10, i32 noundef 131072)
          to label %89 unwind label %253

89:                                               ; preds = %88
  %90 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE5scm10, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE5scm10) #39
  br label %91

91:                                               ; preds = %89, %85, %82
  %92 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE2cm acquire, align 8
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %102, !prof !110

94:                                               ; preds = %91
  %95 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE2cm) #39
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %102, label %97

97:                                               ; preds = %94
  %98 = load i32, ptr @level, align 4, !tbaa !25
  %99 = shl i32 262144, %98
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8bmpModelR5MixerE2cm, i32 noundef %99, i32 noundef 13)
          to label %100 unwind label %255

100:                                              ; preds = %97
  %101 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE2cm) #39
  br label %102

102:                                              ; preds = %100, %94, %91
  %103 = load i32, ptr @bpos, align 4, !tbaa !25
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %446

105:                                              ; preds = %102
  %106 = load i32, ptr @pos, align 4, !tbaa !25
  %107 = add nsw i32 %106, -54
  %108 = load i32, ptr @buf, align 8, !tbaa !20
  %109 = add nsw i32 %108, -1
  %110 = and i32 %109, %107
  %111 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %112 = sext i32 %110 to i64
  %113 = getelementptr inbounds i8, ptr %111, i64 %112
  %114 = load i8, ptr %113, align 1, !tbaa !9
  %115 = icmp eq i8 %114, 66
  br i1 %115, label %116, label %257

116:                                              ; preds = %105
  %117 = add nsw i32 %106, -53
  %118 = and i32 %109, %117
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i8, ptr %111, i64 %119
  %121 = load i8, ptr %120, align 1, !tbaa !9
  %122 = icmp eq i8 %121, 77
  br i1 %122, label %123, label %257

123:                                              ; preds = %116
  %124 = add i32 %106, -44
  %125 = and i32 %109, %124
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i8, ptr %111, i64 %126
  %128 = load i8, ptr %127, align 1, !tbaa !9
  %129 = zext i8 %128 to i32
  %130 = add i32 %106, -43
  %131 = and i32 %109, %130
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, ptr %111, i64 %132
  %134 = load i8, ptr %133, align 1, !tbaa !9
  %135 = zext i8 %134 to i32
  %136 = shl nuw nsw i32 %135, 8
  %137 = or i32 %136, %129
  %138 = add i32 %106, -42
  %139 = and i32 %109, %138
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i8, ptr %111, i64 %140
  %142 = load i8, ptr %141, align 1, !tbaa !9
  %143 = zext i8 %142 to i32
  %144 = shl nuw nsw i32 %143, 16
  %145 = or i32 %137, %144
  %146 = add i32 %106, -41
  %147 = and i32 %109, %146
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, ptr %111, i64 %148
  %150 = load i8, ptr %149, align 1, !tbaa !9
  %151 = zext i8 %150 to i32
  %152 = shl nuw nsw i32 %151, 24
  %153 = or i32 %145, %152
  %154 = icmp eq i32 %153, 54
  br i1 %154, label %155, label %257

155:                                              ; preds = %123
  %156 = add i32 %106, -40
  %157 = and i32 %109, %156
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i8, ptr %111, i64 %158
  %160 = load i8, ptr %159, align 1, !tbaa !9
  %161 = zext i8 %160 to i32
  %162 = add i32 %106, -39
  %163 = and i32 %109, %162
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i8, ptr %111, i64 %164
  %166 = load i8, ptr %165, align 1, !tbaa !9
  %167 = zext i8 %166 to i32
  %168 = shl nuw nsw i32 %167, 8
  %169 = or i32 %168, %161
  %170 = add i32 %106, -38
  %171 = and i32 %109, %170
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds i8, ptr %111, i64 %172
  %174 = load i8, ptr %173, align 1, !tbaa !9
  %175 = zext i8 %174 to i32
  %176 = shl nuw nsw i32 %175, 16
  %177 = or i32 %169, %176
  %178 = add i32 %106, -37
  %179 = and i32 %109, %178
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i8, ptr %111, i64 %180
  %182 = load i8, ptr %181, align 1, !tbaa !9
  %183 = zext i8 %182 to i32
  %184 = shl nuw nsw i32 %183, 24
  %185 = or i32 %177, %184
  %186 = icmp eq i32 %185, 40
  br i1 %186, label %187, label %257

187:                                              ; preds = %155
  %188 = add i32 %106, -24
  %189 = and i32 %109, %188
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds i8, ptr %111, i64 %190
  %192 = load i8, ptr %191, align 1, !tbaa !9
  %193 = zext i8 %192 to i32
  %194 = add i32 %106, -23
  %195 = and i32 %109, %194
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds i8, ptr %111, i64 %196
  %198 = load i8, ptr %197, align 1, !tbaa !9
  %199 = zext i8 %198 to i32
  %200 = shl nuw nsw i32 %199, 8
  %201 = or i32 %200, %193
  %202 = add i32 %106, -22
  %203 = and i32 %109, %202
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i8, ptr %111, i64 %204
  %206 = load i8, ptr %205, align 1, !tbaa !9
  %207 = zext i8 %206 to i32
  %208 = shl nuw nsw i32 %207, 16
  %209 = or i32 %201, %208
  %210 = add i32 %106, -21
  %211 = and i32 %109, %210
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds i8, ptr %111, i64 %212
  %214 = load i8, ptr %213, align 1, !tbaa !9
  %215 = zext i8 %214 to i32
  %216 = shl nuw nsw i32 %215, 24
  %217 = or i32 %209, %216
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %257

219:                                              ; preds = %187
  %220 = tail call noundef i32 @_Z2i4i(i32 noundef 36)
  %221 = add i32 %220, 3
  %222 = and i32 %221, -4
  %223 = mul i32 %222, 3
  store i32 %223, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  %224 = tail call noundef i32 @_Z2i4i(i32 noundef 32)
  %225 = load i32, ptr @pos, align 4, !tbaa !25
  store i32 %225, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !25
  %226 = load i32, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  %227 = icmp slt i32 %226, 196608
  %228 = icmp slt i32 %224, 65536
  %229 = and i1 %228, %227
  br i1 %229, label %230, label %257

230:                                              ; preds = %219
  %231 = mul nsw i32 %226, %224
  %232 = add nsw i32 %231, %225
  store i32 %232, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !25
  %233 = sdiv i32 %226, 3
  %234 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str, i32 noundef %233, i32 noundef %224)
  br label %257

235:                                              ; preds = %7
  %236 = landingpad { ptr, i32 }
          cleanup
  br label %1380

237:                                              ; preds = %16
  %238 = landingpad { ptr, i32 }
          cleanup
  br label %1380

239:                                              ; preds = %25
  %240 = landingpad { ptr, i32 }
          cleanup
  br label %1380

241:                                              ; preds = %34
  %242 = landingpad { ptr, i32 }
          cleanup
  br label %1380

243:                                              ; preds = %43
  %244 = landingpad { ptr, i32 }
          cleanup
  br label %1380

245:                                              ; preds = %52
  %246 = landingpad { ptr, i32 }
          cleanup
  br label %1380

247:                                              ; preds = %61
  %248 = landingpad { ptr, i32 }
          cleanup
  br label %1380

249:                                              ; preds = %70
  %250 = landingpad { ptr, i32 }
          cleanup
  br label %1380

251:                                              ; preds = %79
  %252 = landingpad { ptr, i32 }
          cleanup
  br label %1380

253:                                              ; preds = %88
  %254 = landingpad { ptr, i32 }
          cleanup
  br label %1380

255:                                              ; preds = %97
  %256 = landingpad { ptr, i32 }
          cleanup
  br label %1380

257:                                              ; preds = %219, %230, %187, %155, %123, %116, %105
  %258 = load i32, ptr @bpos, align 4, !tbaa !25
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %446

260:                                              ; preds = %257
  %261 = load i32, ptr @c4, align 4, !tbaa !25
  %262 = icmp eq i32 %261, 1229531648
  %263 = load i32, ptr @pos, align 4, !tbaa !25
  br i1 %262, label %266, label %264

264:                                              ; preds = %260
  %265 = load i32, ptr @_ZZ8bmpModelR5MixerE4tiff, align 4, !tbaa !25
  br label %267

266:                                              ; preds = %260
  store i32 %263, ptr @_ZZ8bmpModelR5MixerE4tiff, align 4, !tbaa !25
  br label %267

267:                                              ; preds = %264, %266
  %268 = phi i32 [ %265, %264 ], [ %263, %266 ]
  %269 = sub i32 %263, %268
  %270 = icmp eq i32 %269, 4
  %271 = icmp ne i32 %261, 134217728
  %272 = select i1 %270, i1 %271, i1 false
  br i1 %272, label %273, label %274

273:                                              ; preds = %267
  store i32 0, ptr @_ZZ8bmpModelR5MixerE4tiff, align 4, !tbaa !25
  br label %446

274:                                              ; preds = %267
  %275 = icmp ne i32 %268, 0
  %276 = icmp eq i32 %269, 200
  %277 = select i1 %275, i1 %276, i1 false
  br i1 %277, label %278, label %446

278:                                              ; preds = %274
  %279 = add i32 %263, -196
  %280 = load i32, ptr @buf, align 8, !tbaa !20
  %281 = add nsw i32 %280, -1
  %282 = and i32 %281, %279
  %283 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %284 = sext i32 %282 to i64
  %285 = getelementptr inbounds i8, ptr %283, i64 %284
  %286 = load i8, ptr %285, align 1, !tbaa !9
  %287 = add i32 %263, -195
  %288 = and i32 %281, %287
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds i8, ptr %283, i64 %289
  %291 = load i8, ptr %290, align 1, !tbaa !9
  store i32 0, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  %292 = add i32 %268, 6
  %293 = add nsw i32 %263, -12
  %294 = icmp slt i32 %292, %293
  br i1 %294, label %295, label %437

295:                                              ; preds = %278
  %296 = zext i8 %291 to i32
  %297 = shl nuw nsw i32 %296, 8
  %298 = zext i8 %286 to i32
  %299 = or i32 %297, %298
  br label %300

300:                                              ; preds = %295, %418
  %301 = phi i32 [ %299, %295 ], [ %307, %418 ]
  %302 = phi i32 [ 0, %295 ], [ %422, %418 ]
  %303 = phi i32 [ 0, %295 ], [ %421, %418 ]
  %304 = phi i32 [ 0, %295 ], [ %420, %418 ]
  %305 = phi i32 [ 0, %295 ], [ %419, %418 ]
  %306 = phi i32 [ %292, %295 ], [ %423, %418 ]
  %307 = add nsw i32 %301, -1
  %308 = icmp sgt i32 %301, 1
  br i1 %308, label %317, label %309

309:                                              ; preds = %300, %418
  %310 = phi i32 [ %305, %300 ], [ %419, %418 ]
  %311 = phi i32 [ %304, %300 ], [ %420, %418 ]
  %312 = phi i32 [ %303, %300 ], [ %421, %418 ]
  %313 = phi i32 [ %302, %300 ], [ %422, %418 ]
  %314 = icmp sgt i32 %311, 0
  %315 = icmp sgt i32 %310, 0
  %316 = select i1 %314, i1 %315, i1 false
  br i1 %316, label %425, label %437

317:                                              ; preds = %300
  %318 = add i32 %306, 2
  %319 = and i32 %318, %281
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds i8, ptr %283, i64 %320
  %322 = load i8, ptr %321, align 1, !tbaa !9
  %323 = zext i8 %322 to i32
  %324 = add i32 %306, 3
  %325 = and i32 %324, %281
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i8, ptr %283, i64 %326
  %328 = load i8, ptr %327, align 1, !tbaa !9
  %329 = zext i8 %328 to i32
  %330 = shl nuw nsw i32 %329, 8
  %331 = or i32 %330, %323
  %332 = add i32 %306, 4
  %333 = and i32 %332, %281
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds i8, ptr %283, i64 %334
  %336 = load i8, ptr %335, align 1, !tbaa !9
  %337 = zext i8 %336 to i32
  %338 = add i32 %306, 5
  %339 = and i32 %338, %281
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds i8, ptr %283, i64 %340
  %342 = load i8, ptr %341, align 1, !tbaa !9
  %343 = zext i8 %342 to i32
  %344 = shl nuw nsw i32 %343, 8
  %345 = or i32 %344, %337
  %346 = add i32 %306, 6
  %347 = and i32 %346, %281
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds i8, ptr %283, i64 %348
  %350 = load i8, ptr %349, align 1, !tbaa !9
  %351 = zext i8 %350 to i32
  %352 = shl nuw nsw i32 %351, 16
  %353 = or i32 %345, %352
  %354 = add i32 %306, 7
  %355 = and i32 %354, %281
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds i8, ptr %283, i64 %356
  %358 = load i8, ptr %357, align 1, !tbaa !9
  %359 = zext i8 %358 to i32
  %360 = shl nuw nsw i32 %359, 24
  %361 = or i32 %353, %360
  %362 = add nsw i32 %331, -3
  %363 = icmp ult i32 %362, 2
  %364 = icmp eq i32 %361, 1
  %365 = and i1 %363, %364
  br i1 %365, label %366, label %418

366:                                              ; preds = %317
  %367 = add i32 %306, 8
  %368 = add i32 %306, 9
  %369 = and i32 %368, %281
  %370 = sext i32 %369 to i64
  %371 = getelementptr inbounds i8, ptr %283, i64 %370
  %372 = load i8, ptr %371, align 1, !tbaa !9
  %373 = zext i8 %372 to i32
  %374 = shl nuw nsw i32 %373, 8
  %375 = and i32 %367, %281
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds i8, ptr %283, i64 %376
  %378 = load i8, ptr %377, align 1, !tbaa !9
  %379 = zext i8 %378 to i32
  %380 = or i32 %374, %379
  %381 = add i32 %306, 10
  %382 = and i32 %381, %281
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds i8, ptr %283, i64 %383
  %385 = load i8, ptr %384, align 1, !tbaa !9
  %386 = zext i8 %385 to i32
  %387 = shl nuw nsw i32 %386, 16
  %388 = or i32 %380, %387
  %389 = add i32 %306, 11
  %390 = and i32 %389, %281
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds i8, ptr %283, i64 %391
  %393 = load i8, ptr %392, align 1, !tbaa !9
  %394 = zext i8 %393 to i32
  %395 = shl nuw nsw i32 %394, 24
  %396 = or i32 %388, %395
  %397 = add nsw i32 %306, 1
  %398 = and i32 %397, %281
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds i8, ptr %283, i64 %399
  %401 = load i8, ptr %400, align 1, !tbaa !9
  %402 = zext i8 %401 to i32
  %403 = shl nuw nsw i32 %402, 8
  %404 = and i32 %306, %281
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds i8, ptr %283, i64 %405
  %407 = load i8, ptr %406, align 1, !tbaa !9
  %408 = zext i8 %407 to i32
  %409 = or i32 %403, %408
  %410 = icmp eq i32 %409, 256
  %411 = select i1 %410, i32 %396, i32 %304
  %412 = icmp eq i32 %409, 257
  %413 = select i1 %412, i32 %396, i32 %305
  %414 = icmp eq i32 %409, 259
  %415 = select i1 %414, i32 %396, i32 %303
  %416 = icmp eq i32 %409, 277
  %417 = select i1 %416, i32 %396, i32 %302
  br label %418

418:                                              ; preds = %366, %317
  %419 = phi i32 [ %305, %317 ], [ %413, %366 ]
  %420 = phi i32 [ %304, %317 ], [ %411, %366 ]
  %421 = phi i32 [ %303, %317 ], [ %415, %366 ]
  %422 = phi i32 [ %302, %317 ], [ %417, %366 ]
  %423 = add nsw i32 %306, 12
  %424 = icmp slt i32 %423, %293
  br i1 %424, label %300, label %309, !llvm.loop !118

425:                                              ; preds = %309
  %426 = mul nsw i32 %311, %310
  %427 = icmp sgt i32 %426, 50
  %428 = icmp eq i32 %312, 1
  %429 = select i1 %427, i1 %428, i1 false
  %430 = and i32 %313, -3
  %431 = icmp eq i32 %430, 1
  %432 = select i1 %429, i1 %431, i1 false
  br i1 %432, label %433, label %437

433:                                              ; preds = %425
  %434 = mul nsw i32 %313, %426
  %435 = add i32 %434, %268
  store i32 %435, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !25
  %436 = mul nsw i32 %313, %311
  store i32 %436, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  br label %437

437:                                              ; preds = %278, %433, %425, %309
  %438 = phi i32 [ %313, %433 ], [ %313, %425 ], [ %313, %309 ], [ 0, %278 ]
  %439 = phi i32 [ %311, %433 ], [ %311, %425 ], [ %311, %309 ], [ 0, %278 ]
  %440 = phi i32 [ %310, %433 ], [ %310, %425 ], [ %310, %309 ], [ 0, %278 ]
  %441 = load i32, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !25
  %442 = icmp sgt i32 %441, %263
  br i1 %442, label %443, label %445

443:                                              ; preds = %437
  %444 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.5, i32 noundef %439, i32 noundef %440, i32 noundef %438)
  br label %446

445:                                              ; preds = %437
  store i32 0, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  store i32 0, ptr @_ZZ8bmpModelR5MixerE4tiff, align 4, !tbaa !25
  br label %446

446:                                              ; preds = %102, %273, %443, %445, %274, %257
  %447 = load i32, ptr @pos, align 4, !tbaa !25
  %448 = load i32, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !25
  %449 = icmp sgt i32 %447, %448
  br i1 %449, label %450, label %451

450:                                              ; preds = %446
  store i32 0, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  br label %1378

451:                                              ; preds = %446
  %452 = load i32, ptr @bpos, align 4, !tbaa !25
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %457, label %454

454:                                              ; preds = %451
  %455 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm3, i64 0, i32 1), align 8, !tbaa !112
  %456 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm4, i64 0, i32 1), align 8, !tbaa !112
  br label %1155

457:                                              ; preds = %451
  %458 = srem i32 %447, 3
  %459 = add nsw i32 %447, -3
  %460 = load i32, ptr @buf, align 8, !tbaa !20
  %461 = add nsw i32 %460, -1
  %462 = and i32 %461, %459
  %463 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %464 = sext i32 %462 to i64
  %465 = getelementptr inbounds i8, ptr %463, i64 %464
  %466 = load i8, ptr %465, align 1, !tbaa !9
  %467 = zext i8 %466 to i32
  %468 = load i32, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  %469 = add nsw i32 %468, -3
  %470 = sub nsw i32 %447, %469
  %471 = and i32 %470, %461
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds i8, ptr %463, i64 %472
  %474 = load i8, ptr %473, align 1, !tbaa !9
  %475 = zext i8 %474 to i32
  %476 = add nuw nsw i32 %475, %467
  %477 = sub nsw i32 %447, %468
  %478 = and i32 %477, %461
  %479 = sext i32 %478 to i64
  %480 = getelementptr inbounds i8, ptr %463, i64 %479
  %481 = load i8, ptr %480, align 1, !tbaa !9
  %482 = zext i8 %481 to i32
  %483 = add nuw nsw i32 %476, %482
  %484 = add nsw i32 %468, 3
  %485 = sub nsw i32 %447, %484
  %486 = and i32 %485, %461
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds i8, ptr %463, i64 %487
  %489 = load i8, ptr %488, align 1, !tbaa !9
  %490 = zext i8 %489 to i32
  %491 = add nuw nsw i32 %483, %490
  %492 = mul nuw nsw i32 %467, %467
  %493 = mul nuw nsw i32 %475, %475
  %494 = add nuw nsw i32 %493, %492
  %495 = mul nuw nsw i32 %482, %482
  %496 = add nuw nsw i32 %494, %495
  %497 = mul nuw nsw i32 %490, %490
  %498 = add nuw nsw i32 %496, %497
  %499 = mul nuw nsw i32 %491, %491
  %500 = lshr i32 %499, 2
  %501 = sub nsw i32 %498, %500
  %502 = lshr i32 %501, 2
  %503 = lshr i32 %491, 2
  %504 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %505 = and i32 %502, 65535
  %506 = zext i32 %505 to i64
  %507 = getelementptr inbounds i8, ptr %504, i64 %506
  %508 = load i8, ptr %507, align 1, !tbaa !9
  %509 = zext i8 %508 to i32
  %510 = mul i32 %467, 30005491
  %511 = mul nsw i32 %458, 50004239
  %512 = add nsw i32 %511, 19995673
  %513 = add i32 %512, %510
  %514 = lshr i32 %513, 9
  %515 = lshr i32 %467, 3
  %516 = lshr i32 %458, 4
  %517 = xor i32 %515, %514
  %518 = xor i32 %517, %516
  %519 = xor i32 %518, %513
  %520 = xor i32 %519, 67108864
  %521 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %522 = add nsw i32 %521, 1
  store i32 %522, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %523 = mul i32 %520, 987654323
  %524 = add i32 %523, %521
  %525 = tail call i32 @llvm.fshl.i32(i32 %524, i32 %524, i32 16)
  %526 = mul i32 %525, 123456791
  %527 = add i32 %526, %521
  %528 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %529 = sext i32 %521 to i64
  %530 = getelementptr inbounds i32, ptr %528, i64 %529
  store i32 %527, ptr %530, align 4, !tbaa !25
  %531 = load i32, ptr @pos, align 4, !tbaa !25
  %532 = add nsw i32 %531, -3
  %533 = load i32, ptr @buf, align 8, !tbaa !20
  %534 = add nsw i32 %533, -1
  %535 = and i32 %534, %532
  %536 = sext i32 %535 to i64
  %537 = getelementptr inbounds i8, ptr %463, i64 %536
  %538 = load i8, ptr %537, align 1, !tbaa !9
  %539 = zext i8 %538 to i32
  %540 = add nsw i32 %531, -1
  %541 = and i32 %534, %540
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds i8, ptr %463, i64 %542
  %544 = load i8, ptr %543, align 1, !tbaa !9
  %545 = zext i8 %544 to i32
  %546 = mul i32 %539, 30005491
  %547 = mul i32 %545, 50004239
  %548 = mul nsw i32 %458, 70004807
  %549 = add nsw i32 %548, 290003459
  %550 = add i32 %549, %546
  %551 = add i32 %550, %547
  %552 = lshr i32 %551, 9
  %553 = lshr i32 %539, 3
  %554 = lshr i32 %545, 4
  %555 = lshr i32 %458, 5
  %556 = xor i32 %553, %554
  %557 = xor i32 %556, %552
  %558 = xor i32 %557, %555
  %559 = xor i32 %558, %551
  %560 = xor i32 %559, 67108863
  %561 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %562 = add nsw i32 %561, 1
  store i32 %562, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %563 = mul i32 %560, 987654323
  %564 = add i32 %563, %561
  %565 = tail call i32 @llvm.fshl.i32(i32 %564, i32 %564, i32 16)
  %566 = mul i32 %565, 123456791
  %567 = add i32 %566, %561
  %568 = sext i32 %561 to i64
  %569 = getelementptr inbounds i32, ptr %528, i64 %568
  store i32 %567, ptr %569, align 4, !tbaa !25
  %570 = load i32, ptr @pos, align 4, !tbaa !25
  %571 = add nsw i32 %570, -3
  %572 = load i32, ptr @buf, align 8, !tbaa !20
  %573 = add nsw i32 %572, -1
  %574 = and i32 %573, %571
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds i8, ptr %463, i64 %575
  %577 = load i8, ptr %576, align 1, !tbaa !9
  %578 = zext i8 %577 to i32
  %579 = add nsw i32 %570, -1
  %580 = and i32 %573, %579
  %581 = sext i32 %580 to i64
  %582 = getelementptr inbounds i8, ptr %463, i64 %581
  %583 = load i8, ptr %582, align 1, !tbaa !9
  %584 = lshr i8 %583, 2
  %585 = zext i8 %584 to i32
  %586 = add nsw i32 %570, -2
  %587 = and i32 %573, %586
  %588 = sext i32 %587 to i64
  %589 = getelementptr inbounds i8, ptr %463, i64 %588
  %590 = load i8, ptr %589, align 1, !tbaa !9
  %591 = lshr i8 %590, 6
  %592 = zext i8 %591 to i32
  %593 = mul i32 %578, 30005491
  %594 = mul nuw i32 %585, 50004239
  %595 = mul nuw nsw i32 %592, 70004807
  %596 = mul nsw i32 %458, 110002499
  %597 = add nsw i32 %596, 600008937
  %598 = add i32 %597, %593
  %599 = add i32 %598, %594
  %600 = add i32 %599, %595
  %601 = lshr i32 %600, 9
  %602 = lshr i32 %578, 3
  %603 = lshr i32 %585, 4
  %604 = lshr i32 %458, 6
  %605 = xor i32 %602, %603
  %606 = xor i32 %605, %601
  %607 = xor i32 %606, %604
  %608 = xor i32 %607, %600
  %609 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %610 = add nsw i32 %609, 1
  store i32 %610, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %611 = mul i32 %608, 987654323
  %612 = add i32 %611, %609
  %613 = tail call i32 @llvm.fshl.i32(i32 %612, i32 %612, i32 16)
  %614 = mul i32 %613, 123456791
  %615 = add i32 %614, %609
  %616 = sext i32 %609 to i64
  %617 = getelementptr inbounds i32, ptr %528, i64 %616
  store i32 %615, ptr %617, align 4, !tbaa !25
  %618 = load i32, ptr @pos, align 4, !tbaa !25
  %619 = sub nsw i32 %618, %468
  %620 = load i32, ptr @buf, align 8, !tbaa !20
  %621 = add nsw i32 %620, -1
  %622 = and i32 %621, %619
  %623 = sext i32 %622 to i64
  %624 = getelementptr inbounds i8, ptr %463, i64 %623
  %625 = load i8, ptr %624, align 1, !tbaa !9
  %626 = zext i8 %625 to i32
  %627 = mul i32 %626, 30005491
  %628 = add nsw i32 %511, 620004610
  %629 = add i32 %628, %627
  %630 = lshr i32 %629, 9
  %631 = lshr i32 %626, 3
  %632 = xor i32 %631, %630
  %633 = xor i32 %632, %516
  %634 = xor i32 %633, %629
  %635 = xor i32 %634, 67108865
  %636 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %637 = add nsw i32 %636, 1
  store i32 %637, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %638 = mul i32 %635, 987654323
  %639 = add i32 %638, %636
  %640 = tail call i32 @llvm.fshl.i32(i32 %639, i32 %639, i32 16)
  %641 = mul i32 %640, 123456791
  %642 = add i32 %641, %636
  %643 = sext i32 %636 to i64
  %644 = getelementptr inbounds i32, ptr %528, i64 %643
  store i32 %642, ptr %644, align 4, !tbaa !25
  %645 = load i32, ptr @pos, align 4, !tbaa !25
  %646 = sub nsw i32 %645, %468
  %647 = load i32, ptr @buf, align 8, !tbaa !20
  %648 = add nsw i32 %647, -1
  %649 = and i32 %648, %646
  %650 = sext i32 %649 to i64
  %651 = getelementptr inbounds i8, ptr %463, i64 %650
  %652 = load i8, ptr %651, align 1, !tbaa !9
  %653 = zext i8 %652 to i32
  %654 = add nsw i32 %645, -1
  %655 = and i32 %648, %654
  %656 = sext i32 %655 to i64
  %657 = getelementptr inbounds i8, ptr %463, i64 %656
  %658 = load i8, ptr %657, align 1, !tbaa !9
  %659 = zext i8 %658 to i32
  %660 = mul i32 %653, 30005491
  %661 = mul i32 %659, 50004239
  %662 = add nsw i32 %548, 890012396
  %663 = add i32 %662, %660
  %664 = add i32 %663, %661
  %665 = lshr i32 %664, 9
  %666 = lshr i32 %653, 3
  %667 = lshr i32 %659, 4
  %668 = xor i32 %666, %667
  %669 = xor i32 %668, %665
  %670 = xor i32 %669, %555
  %671 = xor i32 %670, %664
  %672 = xor i32 %671, 67108862
  %673 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %674 = add nsw i32 %673, 1
  store i32 %674, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %675 = mul i32 %672, 987654323
  %676 = add i32 %675, %673
  %677 = tail call i32 @llvm.fshl.i32(i32 %676, i32 %676, i32 16)
  %678 = mul i32 %677, 123456791
  %679 = add i32 %678, %673
  %680 = sext i32 %673 to i64
  %681 = getelementptr inbounds i32, ptr %528, i64 %680
  store i32 %679, ptr %681, align 4, !tbaa !25
  %682 = load i32, ptr @pos, align 4, !tbaa !25
  %683 = sub nsw i32 %682, %468
  %684 = load i32, ptr @buf, align 8, !tbaa !20
  %685 = add nsw i32 %684, -1
  %686 = and i32 %685, %683
  %687 = sext i32 %686 to i64
  %688 = getelementptr inbounds i8, ptr %463, i64 %687
  %689 = load i8, ptr %688, align 1, !tbaa !9
  %690 = zext i8 %689 to i32
  %691 = add nsw i32 %682, -1
  %692 = and i32 %685, %691
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds i8, ptr %463, i64 %693
  %695 = load i8, ptr %694, align 1, !tbaa !9
  %696 = lshr i8 %695, 2
  %697 = zext i8 %696 to i32
  %698 = add nsw i32 %682, -2
  %699 = and i32 %685, %698
  %700 = sext i32 %699 to i64
  %701 = getelementptr inbounds i8, ptr %463, i64 %700
  %702 = load i8, ptr %701, align 1, !tbaa !9
  %703 = lshr i8 %702, 6
  %704 = zext i8 %703 to i32
  %705 = mul i32 %690, 30005491
  %706 = mul nuw i32 %697, 50004239
  %707 = mul nuw nsw i32 %704, 70004807
  %708 = add nsw i32 %596, 1200017874
  %709 = add i32 %708, %705
  %710 = add i32 %709, %706
  %711 = add i32 %710, %707
  %712 = lshr i32 %711, 9
  %713 = lshr i32 %690, 3
  %714 = lshr i32 %697, 4
  %715 = xor i32 %713, %714
  %716 = xor i32 %715, %712
  %717 = xor i32 %716, %604
  %718 = xor i32 %717, %711
  %719 = xor i32 %718, 1
  %720 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %721 = add nsw i32 %720, 1
  store i32 %721, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %722 = mul i32 %719, 987654323
  %723 = add i32 %722, %720
  %724 = tail call i32 @llvm.fshl.i32(i32 %723, i32 %723, i32 16)
  %725 = mul i32 %724, 123456791
  %726 = add i32 %725, %720
  %727 = sext i32 %720 to i64
  %728 = getelementptr inbounds i32, ptr %528, i64 %727
  store i32 %726, ptr %728, align 4, !tbaa !25
  %729 = load i32, ptr @pos, align 4, !tbaa !25
  %730 = add nsw i32 %729, -3
  %731 = load i32, ptr @buf, align 8, !tbaa !20
  %732 = add nsw i32 %731, -1
  %733 = and i32 %732, %730
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds i8, ptr %463, i64 %734
  %736 = load i8, ptr %735, align 1, !tbaa !9
  %737 = zext i8 %736 to i32
  %738 = sub nsw i32 %729, %468
  %739 = and i32 %732, %738
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds i8, ptr %463, i64 %740
  %742 = load i8, ptr %741, align 1, !tbaa !9
  %743 = zext i8 %742 to i32
  %744 = add nuw nsw i32 %743, %737
  %745 = lshr i32 %744, 3
  %746 = add nsw i32 %729, -1
  %747 = and i32 %732, %746
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds i8, ptr %463, i64 %748
  %750 = load i8, ptr %749, align 1, !tbaa !9
  %751 = lshr i8 %750, 5
  %752 = zext i8 %751 to i32
  %753 = add nsw i32 %729, -2
  %754 = and i32 %732, %753
  %755 = sext i32 %754 to i64
  %756 = getelementptr inbounds i8, ptr %463, i64 %755
  %757 = load i8, ptr %756, align 1, !tbaa !9
  %758 = lshr i8 %757, 5
  %759 = zext i8 %758 to i32
  %760 = mul nuw nsw i32 %745, 30005491
  %761 = mul nuw nsw i32 %752, 50004239
  %762 = mul nuw nsw i32 %759, 70004807
  %763 = add nsw i32 %596, 1400020853
  %764 = add nuw i32 %763, %760
  %765 = add nuw i32 %764, %761
  %766 = add i32 %765, %762
  %767 = lshr i32 %766, 9
  %768 = xor i32 %744, %458
  %769 = lshr i32 %768, 6
  %770 = xor i32 %769, %767
  %771 = xor i32 %770, %766
  %772 = xor i32 %771, 1
  %773 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %774 = add nsw i32 %773, 1
  store i32 %774, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %775 = mul i32 %772, 987654323
  %776 = add i32 %775, %773
  %777 = tail call i32 @llvm.fshl.i32(i32 %776, i32 %776, i32 16)
  %778 = mul i32 %777, 123456791
  %779 = add i32 %778, %773
  %780 = sext i32 %773 to i64
  %781 = getelementptr inbounds i32, ptr %528, i64 %780
  store i32 %779, ptr %781, align 4, !tbaa !25
  %782 = load i32, ptr @pos, align 4, !tbaa !25
  %783 = add nsw i32 %782, -1
  %784 = load i32, ptr @buf, align 8, !tbaa !20
  %785 = add nsw i32 %784, -1
  %786 = and i32 %785, %783
  %787 = sext i32 %786 to i64
  %788 = getelementptr inbounds i8, ptr %463, i64 %787
  %789 = load i8, ptr %788, align 1, !tbaa !9
  %790 = zext i8 %789 to i32
  %791 = add nsw i32 %782, -2
  %792 = and i32 %785, %791
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds i8, ptr %463, i64 %793
  %795 = load i8, ptr %794, align 1, !tbaa !9
  %796 = zext i8 %795 to i32
  %797 = mul i32 %790, 30005491
  %798 = mul i32 %796, 50004239
  %799 = add nsw i32 %548, 1490021333
  %800 = add i32 %799, %797
  %801 = add i32 %800, %798
  %802 = lshr i32 %801, 9
  %803 = lshr i32 %790, 3
  %804 = lshr i32 %796, 4
  %805 = xor i32 %803, %804
  %806 = xor i32 %805, %802
  %807 = xor i32 %806, %555
  %808 = xor i32 %807, %801
  %809 = xor i32 %808, 67108861
  %810 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %811 = add nsw i32 %810, 1
  store i32 %811, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %812 = mul i32 %809, 987654323
  %813 = add i32 %812, %810
  %814 = tail call i32 @llvm.fshl.i32(i32 %813, i32 %813, i32 16)
  %815 = mul i32 %814, 123456791
  %816 = add i32 %815, %810
  %817 = sext i32 %810 to i64
  %818 = getelementptr inbounds i32, ptr %528, i64 %817
  store i32 %816, ptr %818, align 4, !tbaa !25
  %819 = load i32, ptr @pos, align 4, !tbaa !25
  %820 = add nsw i32 %819, -3
  %821 = load i32, ptr @buf, align 8, !tbaa !20
  %822 = add nsw i32 %821, -1
  %823 = and i32 %822, %820
  %824 = sext i32 %823 to i64
  %825 = getelementptr inbounds i8, ptr %463, i64 %824
  %826 = load i8, ptr %825, align 1, !tbaa !9
  %827 = zext i8 %826 to i32
  %828 = add nsw i32 %819, -1
  %829 = and i32 %822, %828
  %830 = sext i32 %829 to i64
  %831 = getelementptr inbounds i8, ptr %463, i64 %830
  %832 = load i8, ptr %831, align 1, !tbaa !9
  %833 = zext i8 %832 to i32
  %834 = add nsw i32 %819, -4
  %835 = and i32 %822, %834
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds i8, ptr %463, i64 %836
  %838 = load i8, ptr %837, align 1, !tbaa !9
  %839 = zext i8 %838 to i32
  %840 = sub nsw i32 %833, %839
  %841 = mul i32 %827, 30005491
  %842 = mul i32 %840, 50004239
  %843 = add nsw i32 %548, 1690024312
  %844 = add i32 %843, %841
  %845 = add i32 %844, %842
  %846 = lshr i32 %845, 9
  %847 = lshr i32 %827, 3
  %848 = lshr i32 %840, 4
  %849 = xor i32 %847, %848
  %850 = xor i32 %849, %846
  %851 = xor i32 %850, %555
  %852 = xor i32 %851, %845
  %853 = xor i32 %852, 67108861
  %854 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %855 = add nsw i32 %854, 1
  store i32 %855, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %856 = mul i32 %853, 987654323
  %857 = add i32 %856, %854
  %858 = tail call i32 @llvm.fshl.i32(i32 %857, i32 %857, i32 16)
  %859 = mul i32 %858, 123456791
  %860 = add i32 %859, %854
  %861 = sext i32 %854 to i64
  %862 = getelementptr inbounds i32, ptr %528, i64 %861
  store i32 %860, ptr %862, align 4, !tbaa !25
  %863 = load i32, ptr @pos, align 4, !tbaa !25
  %864 = add nsw i32 %863, -3
  %865 = load i32, ptr @buf, align 8, !tbaa !20
  %866 = add nsw i32 %865, -1
  %867 = and i32 %866, %864
  %868 = sext i32 %867 to i64
  %869 = getelementptr inbounds i8, ptr %463, i64 %868
  %870 = load i8, ptr %869, align 1, !tbaa !9
  %871 = zext i8 %870 to i32
  %872 = add nsw i32 %863, -1
  %873 = and i32 %866, %872
  %874 = sext i32 %873 to i64
  %875 = getelementptr inbounds i8, ptr %463, i64 %874
  %876 = load i8, ptr %875, align 1, !tbaa !9
  %877 = zext i8 %876 to i32
  %878 = add nuw nsw i32 %877, %871
  %879 = add nsw i32 %863, -4
  %880 = and i32 %866, %879
  %881 = sext i32 %880 to i64
  %882 = getelementptr inbounds i8, ptr %463, i64 %881
  %883 = load i8, ptr %882, align 1, !tbaa !9
  %884 = zext i8 %883 to i32
  %885 = sub nsw i32 %878, %884
  %886 = mul i32 %885, 30005491
  %887 = add nsw i32 %511, 1820022484
  %888 = add i32 %887, %886
  %889 = lshr i32 %888, 9
  %890 = lshr i32 %885, 3
  %891 = xor i32 %890, %889
  %892 = xor i32 %891, %516
  %893 = xor i32 %892, %888
  %894 = xor i32 %893, 67108866
  %895 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %896 = add nsw i32 %895, 1
  store i32 %896, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %897 = mul i32 %894, 987654323
  %898 = add i32 %897, %895
  %899 = tail call i32 @llvm.fshl.i32(i32 %898, i32 %898, i32 16)
  %900 = mul i32 %899, 123456791
  %901 = add i32 %900, %895
  %902 = sext i32 %895 to i64
  %903 = getelementptr inbounds i32, ptr %528, i64 %902
  store i32 %901, ptr %903, align 4, !tbaa !25
  %904 = load i32, ptr @pos, align 4, !tbaa !25
  %905 = sub nsw i32 %904, %468
  %906 = load i32, ptr @buf, align 8, !tbaa !20
  %907 = add nsw i32 %906, -1
  %908 = and i32 %907, %905
  %909 = sext i32 %908 to i64
  %910 = getelementptr inbounds i8, ptr %463, i64 %909
  %911 = load i8, ptr %910, align 1, !tbaa !9
  %912 = zext i8 %911 to i32
  %913 = add nsw i32 %904, -1
  %914 = and i32 %907, %913
  %915 = sext i32 %914 to i64
  %916 = getelementptr inbounds i8, ptr %463, i64 %915
  %917 = load i8, ptr %916, align 1, !tbaa !9
  %918 = zext i8 %917 to i32
  %919 = add nsw i32 %468, 1
  %920 = sub nsw i32 %904, %919
  %921 = and i32 %907, %920
  %922 = sext i32 %921 to i64
  %923 = getelementptr inbounds i8, ptr %463, i64 %922
  %924 = load i8, ptr %923, align 1, !tbaa !9
  %925 = zext i8 %924 to i32
  %926 = sub nsw i32 %918, %925
  %927 = mul i32 %912, 30005491
  %928 = mul i32 %926, 50004239
  %929 = add i32 %548, 2090030270
  %930 = add i32 %929, %927
  %931 = add i32 %930, %928
  %932 = lshr i32 %931, 9
  %933 = lshr i32 %912, 3
  %934 = lshr i32 %926, 4
  %935 = xor i32 %933, %934
  %936 = xor i32 %935, %932
  %937 = xor i32 %936, %555
  %938 = xor i32 %937, %931
  %939 = xor i32 %938, 67108861
  %940 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %941 = add nsw i32 %940, 1
  store i32 %941, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %942 = mul i32 %939, 987654323
  %943 = add i32 %942, %940
  %944 = tail call i32 @llvm.fshl.i32(i32 %943, i32 %943, i32 16)
  %945 = mul i32 %944, 123456791
  %946 = add i32 %945, %940
  %947 = sext i32 %940 to i64
  %948 = getelementptr inbounds i32, ptr %528, i64 %947
  store i32 %946, ptr %948, align 4, !tbaa !25
  %949 = load i32, ptr @pos, align 4, !tbaa !25
  %950 = sub nsw i32 %949, %468
  %951 = load i32, ptr @buf, align 8, !tbaa !20
  %952 = add nsw i32 %951, -1
  %953 = and i32 %952, %950
  %954 = sext i32 %953 to i64
  %955 = getelementptr inbounds i8, ptr %463, i64 %954
  %956 = load i8, ptr %955, align 1, !tbaa !9
  %957 = zext i8 %956 to i32
  %958 = add nsw i32 %949, -1
  %959 = and i32 %952, %958
  %960 = sext i32 %959 to i64
  %961 = getelementptr inbounds i8, ptr %463, i64 %960
  %962 = load i8, ptr %961, align 1, !tbaa !9
  %963 = zext i8 %962 to i32
  %964 = add nuw nsw i32 %963, %957
  %965 = sub nsw i32 %949, %919
  %966 = and i32 %952, %965
  %967 = sext i32 %966 to i64
  %968 = getelementptr inbounds i8, ptr %463, i64 %967
  %969 = load i8, ptr %968, align 1, !tbaa !9
  %970 = zext i8 %969 to i32
  %971 = sub nsw i32 %964, %970
  %972 = mul i32 %971, 30005491
  %973 = add i32 %511, -2074938854
  %974 = add i32 %973, %972
  %975 = lshr i32 %974, 9
  %976 = lshr i32 %971, 3
  %977 = xor i32 %976, %975
  %978 = xor i32 %977, %516
  %979 = xor i32 %978, %974
  %980 = xor i32 %979, 67108867
  %981 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %982 = add nsw i32 %981, 1
  store i32 %982, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %983 = mul i32 %980, 987654323
  %984 = add i32 %983, %981
  %985 = tail call i32 @llvm.fshl.i32(i32 %984, i32 %984, i32 16)
  %986 = mul i32 %985, 123456791
  %987 = add i32 %986, %981
  %988 = sext i32 %981 to i64
  %989 = getelementptr inbounds i32, ptr %528, i64 %988
  store i32 %987, ptr %989, align 4, !tbaa !25
  %990 = lshr i32 %509, 5
  %991 = mul i32 %503, 30005491
  %992 = mul nuw nsw i32 %990, 50004239
  %993 = add nsw i32 %548, -1804931068
  %994 = add i32 %993, %991
  %995 = add i32 %994, %992
  %996 = lshr i32 %995, 9
  %997 = xor i32 %491, %458
  %998 = lshr i32 %997, 5
  %999 = xor i32 %998, %996
  %1000 = xor i32 %999, %995
  %1001 = xor i32 %1000, 67108860
  %1002 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1003 = add nsw i32 %1002, 1
  store i32 %1003, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1004 = mul i32 %1001, 987654323
  %1005 = add i32 %1002, %1004
  %1006 = tail call i32 @llvm.fshl.i32(i32 %1005, i32 %1005, i32 16)
  %1007 = mul i32 %1006, 123456791
  %1008 = add i32 %1007, %1002
  %1009 = sext i32 %1002 to i64
  %1010 = getelementptr inbounds i32, ptr %528, i64 %1009
  store i32 %1008, ptr %1010, align 4, !tbaa !25
  %1011 = load i32, ptr @pos, align 4, !tbaa !25
  %1012 = add nsw i32 %1011, -3
  %1013 = load i32, ptr @buf, align 8, !tbaa !20
  %1014 = add nsw i32 %1013, -1
  %1015 = and i32 %1014, %1012
  %1016 = sext i32 %1015 to i64
  %1017 = getelementptr inbounds i8, ptr %463, i64 %1016
  %1018 = load i8, ptr %1017, align 1, !tbaa !9
  %1019 = zext i8 %1018 to i32
  %1020 = sub i32 %1011, %468
  %1021 = and i32 %1014, %1020
  %1022 = sext i32 %1021 to i64
  %1023 = getelementptr inbounds i8, ptr %463, i64 %1022
  %1024 = load i8, ptr %1023, align 1, !tbaa !9
  %1025 = zext i8 %1024 to i32
  %1026 = add nuw nsw i32 %1025, %1019
  %1027 = sub nsw i32 %1011, %484
  %1028 = and i32 %1014, %1027
  %1029 = sext i32 %1028 to i64
  %1030 = getelementptr inbounds i8, ptr %463, i64 %1029
  %1031 = load i8, ptr %1030, align 1, !tbaa !9
  %1032 = zext i8 %1031 to i32
  %1033 = sub nsw i32 %1026, %1032
  %1034 = shl nsw i32 %1033, 8
  %1035 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm1, align 8, !tbaa !74
  %1036 = add nsw i32 %1035, -256
  %1037 = and i32 %1034, %1036
  store i32 %1037, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %1038 = load i8, ptr %1017, align 1, !tbaa !9
  %1039 = zext i8 %1038 to i32
  %1040 = sub nsw i32 %1011, %469
  %1041 = and i32 %1014, %1040
  %1042 = sext i32 %1041 to i64
  %1043 = getelementptr inbounds i8, ptr %463, i64 %1042
  %1044 = load i8, ptr %1043, align 1, !tbaa !9
  %1045 = zext i8 %1044 to i32
  %1046 = add nuw nsw i32 %1045, %1039
  %1047 = load i8, ptr %1023, align 1, !tbaa !9
  %1048 = zext i8 %1047 to i32
  %1049 = sub nsw i32 %1046, %1048
  %1050 = shl nsw i32 %1049, 8
  %1051 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm2, align 8, !tbaa !74
  %1052 = add nsw i32 %1051, -256
  %1053 = and i32 %1050, %1052
  store i32 %1053, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %1054 = load i8, ptr %1017, align 1, !tbaa !9
  %1055 = zext i8 %1054 to i32
  %1056 = add nsw i32 %1011, -6
  %1057 = and i32 %1014, %1056
  %1058 = sext i32 %1057 to i64
  %1059 = getelementptr inbounds i8, ptr %463, i64 %1058
  %1060 = load i8, ptr %1059, align 1, !tbaa !9
  %1061 = zext i8 %1060 to i32
  %1062 = shl nuw nsw i32 %1055, 9
  %1063 = shl nuw nsw i32 %1061, 8
  %1064 = sub nsw i32 %1062, %1063
  %1065 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm3, align 8, !tbaa !74
  %1066 = add nsw i32 %1065, -256
  %1067 = and i32 %1064, %1066
  store i32 %1067, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm3, i64 0, i32 1), align 8, !tbaa !112
  %1068 = load i8, ptr %1023, align 1, !tbaa !9
  %1069 = zext i8 %1068 to i32
  %1070 = shl nsw i32 %468, 1
  %1071 = sub i32 %1011, %1070
  %1072 = and i32 %1014, %1071
  %1073 = sext i32 %1072 to i64
  %1074 = getelementptr inbounds i8, ptr %463, i64 %1073
  %1075 = load i8, ptr %1074, align 1, !tbaa !9
  %1076 = zext i8 %1075 to i32
  %1077 = shl nuw nsw i32 %1069, 9
  %1078 = shl nuw nsw i32 %1076, 8
  %1079 = sub nsw i32 %1077, %1078
  %1080 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm4, align 8, !tbaa !74
  %1081 = add nsw i32 %1080, -256
  %1082 = and i32 %1079, %1081
  store i32 %1082, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm4, i64 0, i32 1), align 8, !tbaa !112
  %1083 = load i8, ptr %1030, align 1, !tbaa !9
  %1084 = zext i8 %1083 to i32
  %1085 = add i32 %1071, -6
  %1086 = and i32 %1014, %1085
  %1087 = sext i32 %1086 to i64
  %1088 = getelementptr inbounds i8, ptr %463, i64 %1087
  %1089 = load i8, ptr %1088, align 1, !tbaa !9
  %1090 = zext i8 %1089 to i32
  %1091 = shl nuw nsw i32 %1084, 9
  %1092 = shl nuw nsw i32 %1090, 8
  %1093 = sub nsw i32 %1091, %1092
  %1094 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm5, align 8, !tbaa !74
  %1095 = add nsw i32 %1094, -256
  %1096 = and i32 %1093, %1095
  store i32 %1096, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm5, i64 0, i32 1), align 8, !tbaa !112
  %1097 = load i8, ptr %1043, align 1, !tbaa !9
  %1098 = zext i8 %1097 to i32
  %1099 = add i32 %1071, 6
  %1100 = and i32 %1014, %1099
  %1101 = sext i32 %1100 to i64
  %1102 = getelementptr inbounds i8, ptr %463, i64 %1101
  %1103 = load i8, ptr %1102, align 1, !tbaa !9
  %1104 = zext i8 %1103 to i32
  %1105 = shl nuw nsw i32 %1098, 9
  %1106 = shl nuw nsw i32 %1104, 8
  %1107 = sub nsw i32 %1105, %1106
  %1108 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm6, align 8, !tbaa !74
  %1109 = add nsw i32 %1108, -256
  %1110 = and i32 %1107, %1109
  store i32 %1110, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm6, i64 0, i32 1), align 8, !tbaa !112
  %1111 = load i8, ptr %1043, align 1, !tbaa !9
  %1112 = zext i8 %1111 to i32
  %1113 = add nsw i32 %1011, -1
  %1114 = and i32 %1014, %1113
  %1115 = sext i32 %1114 to i64
  %1116 = getelementptr inbounds i8, ptr %463, i64 %1115
  %1117 = load i8, ptr %1116, align 1, !tbaa !9
  %1118 = zext i8 %1117 to i32
  %1119 = add nuw nsw i32 %1118, %1112
  %1120 = add i32 %1020, 2
  %1121 = and i32 %1014, %1120
  %1122 = sext i32 %1121 to i64
  %1123 = getelementptr inbounds i8, ptr %463, i64 %1122
  %1124 = load i8, ptr %1123, align 1, !tbaa !9
  %1125 = zext i8 %1124 to i32
  %1126 = sub nsw i32 %1119, %1125
  %1127 = shl nsw i32 %1126, 8
  %1128 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm7, align 8, !tbaa !74
  %1129 = add nsw i32 %1128, -256
  %1130 = and i32 %1127, %1129
  store i32 %1130, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm7, i64 0, i32 1), align 8, !tbaa !112
  %1131 = load i8, ptr %1023, align 1, !tbaa !9
  %1132 = zext i8 %1131 to i32
  %1133 = load i8, ptr %1043, align 1, !tbaa !9
  %1134 = zext i8 %1133 to i32
  %1135 = add nuw nsw i32 %1134, %1132
  %1136 = add i32 %1071, 3
  %1137 = and i32 %1014, %1136
  %1138 = sext i32 %1137 to i64
  %1139 = getelementptr inbounds i8, ptr %463, i64 %1138
  %1140 = load i8, ptr %1139, align 1, !tbaa !9
  %1141 = zext i8 %1140 to i32
  %1142 = sub nsw i32 %1135, %1141
  %1143 = shl nsw i32 %1142, 8
  %1144 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm8, align 8, !tbaa !74
  %1145 = add nsw i32 %1144, -256
  %1146 = and i32 %1143, %1145
  store i32 %1146, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm8, i64 0, i32 1), align 8, !tbaa !112
  %1147 = lshr i32 %491, 3
  %1148 = shl nuw nsw i32 %509, 1
  %1149 = and i32 %1148, 384
  %1150 = or i32 %1149, %1147
  %1151 = shl nuw nsw i32 %1150, 8
  %1152 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm9, align 8, !tbaa !74
  %1153 = add i32 %1152, 2147483392
  %1154 = and i32 %1153, %1151
  store i32 %1154, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm9, i64 0, i32 1), align 8, !tbaa !112
  br label %1155

1155:                                             ; preds = %454, %457
  %1156 = phi i32 [ %456, %454 ], [ %1082, %457 ]
  %1157 = phi i32 [ %455, %454 ], [ %1067, %457 ]
  %1158 = load i32, ptr @y, align 4, !tbaa !25
  %1159 = shl i32 %1158, 16
  %1160 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %1161 = load i16, ptr %1160, align 2, !tbaa !31
  %1162 = zext i16 %1161 to i32
  %1163 = or i32 %1159, 64
  %1164 = sub i32 %1163, %1162
  %1165 = lshr i32 %1164, 7
  %1166 = trunc i32 %1165 to i16
  %1167 = add i16 %1161, %1166
  store i16 %1167, ptr %1160, align 2, !tbaa !31
  %1168 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %1169 = load i32, ptr @c0, align 4, !tbaa !25
  %1170 = add nsw i32 %1169, %1168
  %1171 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm1, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1172 = sext i32 %1170 to i64
  %1173 = getelementptr inbounds i16, ptr %1171, i64 %1172
  store ptr %1173, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %1174 = load i16, ptr %1173, align 2, !tbaa !31
  %1175 = lshr i16 %1174, 4
  %1176 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %1177 = zext i16 %1175 to i64
  %1178 = getelementptr inbounds i16, ptr %1176, i64 %1177
  %1179 = load i16, ptr %1178, align 2, !tbaa !31
  %1180 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %1181 = load i32, ptr %1180, align 8, !tbaa !64
  %1182 = add nsw i32 %1181, 1
  %1183 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %1184 = load ptr, ptr %1183, align 8, !tbaa !59
  %1185 = sext i32 %1181 to i64
  %1186 = getelementptr inbounds i16, ptr %1184, i64 %1185
  store i16 %1179, ptr %1186, align 2, !tbaa !31
  %1187 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm2, i64 0, i32 2), align 8, !tbaa !114
  %1188 = load i16, ptr %1187, align 2, !tbaa !31
  %1189 = zext i16 %1188 to i32
  %1190 = sub i32 %1163, %1189
  %1191 = lshr i32 %1190, 7
  %1192 = trunc i32 %1191 to i16
  %1193 = add i16 %1188, %1192
  store i16 %1193, ptr %1187, align 2, !tbaa !31
  %1194 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %1195 = add nsw i32 %1194, %1169
  %1196 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm2, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1197 = sext i32 %1195 to i64
  %1198 = getelementptr inbounds i16, ptr %1196, i64 %1197
  store ptr %1198, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm2, i64 0, i32 2), align 8, !tbaa !114
  %1199 = load i16, ptr %1198, align 2, !tbaa !31
  %1200 = lshr i16 %1199, 4
  %1201 = zext i16 %1200 to i64
  %1202 = getelementptr inbounds i16, ptr %1176, i64 %1201
  %1203 = load i16, ptr %1202, align 2, !tbaa !31
  %1204 = add nsw i32 %1181, 2
  %1205 = sext i32 %1182 to i64
  %1206 = getelementptr inbounds i16, ptr %1184, i64 %1205
  store i16 %1203, ptr %1206, align 2, !tbaa !31
  %1207 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm3, i64 0, i32 2), align 8, !tbaa !114
  %1208 = load i16, ptr %1207, align 2, !tbaa !31
  %1209 = zext i16 %1208 to i32
  %1210 = sub i32 %1163, %1209
  %1211 = lshr i32 %1210, 7
  %1212 = trunc i32 %1211 to i16
  %1213 = add i16 %1208, %1212
  store i16 %1213, ptr %1207, align 2, !tbaa !31
  %1214 = add nsw i32 %1157, %1169
  %1215 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm3, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1216 = sext i32 %1214 to i64
  %1217 = getelementptr inbounds i16, ptr %1215, i64 %1216
  store ptr %1217, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm3, i64 0, i32 2), align 8, !tbaa !114
  %1218 = load i16, ptr %1217, align 2, !tbaa !31
  %1219 = lshr i16 %1218, 4
  %1220 = zext i16 %1219 to i64
  %1221 = getelementptr inbounds i16, ptr %1176, i64 %1220
  %1222 = load i16, ptr %1221, align 2, !tbaa !31
  %1223 = add nsw i32 %1181, 3
  %1224 = sext i32 %1204 to i64
  %1225 = getelementptr inbounds i16, ptr %1184, i64 %1224
  store i16 %1222, ptr %1225, align 2, !tbaa !31
  %1226 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm4, i64 0, i32 2), align 8, !tbaa !114
  %1227 = load i16, ptr %1226, align 2, !tbaa !31
  %1228 = zext i16 %1227 to i32
  %1229 = sub i32 %1163, %1228
  %1230 = lshr i32 %1229, 7
  %1231 = trunc i32 %1230 to i16
  %1232 = add i16 %1227, %1231
  store i16 %1232, ptr %1226, align 2, !tbaa !31
  %1233 = add nsw i32 %1156, %1169
  %1234 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm4, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1235 = sext i32 %1233 to i64
  %1236 = getelementptr inbounds i16, ptr %1234, i64 %1235
  store ptr %1236, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm4, i64 0, i32 2), align 8, !tbaa !114
  %1237 = load i16, ptr %1236, align 2, !tbaa !31
  %1238 = lshr i16 %1237, 4
  %1239 = zext i16 %1238 to i64
  %1240 = getelementptr inbounds i16, ptr %1176, i64 %1239
  %1241 = load i16, ptr %1240, align 2, !tbaa !31
  %1242 = add nsw i32 %1181, 4
  %1243 = sext i32 %1223 to i64
  %1244 = getelementptr inbounds i16, ptr %1184, i64 %1243
  store i16 %1241, ptr %1244, align 2, !tbaa !31
  %1245 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm5, i64 0, i32 2), align 8, !tbaa !114
  %1246 = load i16, ptr %1245, align 2, !tbaa !31
  %1247 = zext i16 %1246 to i32
  %1248 = sub i32 %1163, %1247
  %1249 = lshr i32 %1248, 7
  %1250 = trunc i32 %1249 to i16
  %1251 = add i16 %1246, %1250
  store i16 %1251, ptr %1245, align 2, !tbaa !31
  %1252 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm5, i64 0, i32 1), align 8, !tbaa !112
  %1253 = add nsw i32 %1252, %1169
  %1254 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm5, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1255 = sext i32 %1253 to i64
  %1256 = getelementptr inbounds i16, ptr %1254, i64 %1255
  store ptr %1256, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm5, i64 0, i32 2), align 8, !tbaa !114
  %1257 = load i16, ptr %1256, align 2, !tbaa !31
  %1258 = lshr i16 %1257, 4
  %1259 = zext i16 %1258 to i64
  %1260 = getelementptr inbounds i16, ptr %1176, i64 %1259
  %1261 = load i16, ptr %1260, align 2, !tbaa !31
  %1262 = add nsw i32 %1181, 5
  %1263 = sext i32 %1242 to i64
  %1264 = getelementptr inbounds i16, ptr %1184, i64 %1263
  store i16 %1261, ptr %1264, align 2, !tbaa !31
  %1265 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm6, i64 0, i32 2), align 8, !tbaa !114
  %1266 = load i16, ptr %1265, align 2, !tbaa !31
  %1267 = zext i16 %1266 to i32
  %1268 = sub i32 %1163, %1267
  %1269 = lshr i32 %1268, 7
  %1270 = trunc i32 %1269 to i16
  %1271 = add i16 %1266, %1270
  store i16 %1271, ptr %1265, align 2, !tbaa !31
  %1272 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm6, i64 0, i32 1), align 8, !tbaa !112
  %1273 = add nsw i32 %1272, %1169
  %1274 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm6, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1275 = sext i32 %1273 to i64
  %1276 = getelementptr inbounds i16, ptr %1274, i64 %1275
  store ptr %1276, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm6, i64 0, i32 2), align 8, !tbaa !114
  %1277 = load i16, ptr %1276, align 2, !tbaa !31
  %1278 = lshr i16 %1277, 4
  %1279 = zext i16 %1278 to i64
  %1280 = getelementptr inbounds i16, ptr %1176, i64 %1279
  %1281 = load i16, ptr %1280, align 2, !tbaa !31
  %1282 = add nsw i32 %1181, 6
  %1283 = sext i32 %1262 to i64
  %1284 = getelementptr inbounds i16, ptr %1184, i64 %1283
  store i16 %1281, ptr %1284, align 2, !tbaa !31
  %1285 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm7, i64 0, i32 2), align 8, !tbaa !114
  %1286 = load i16, ptr %1285, align 2, !tbaa !31
  %1287 = zext i16 %1286 to i32
  %1288 = sub i32 %1163, %1287
  %1289 = lshr i32 %1288, 7
  %1290 = trunc i32 %1289 to i16
  %1291 = add i16 %1286, %1290
  store i16 %1291, ptr %1285, align 2, !tbaa !31
  %1292 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm7, i64 0, i32 1), align 8, !tbaa !112
  %1293 = add nsw i32 %1292, %1169
  %1294 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm7, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1295 = sext i32 %1293 to i64
  %1296 = getelementptr inbounds i16, ptr %1294, i64 %1295
  store ptr %1296, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm7, i64 0, i32 2), align 8, !tbaa !114
  %1297 = load i16, ptr %1296, align 2, !tbaa !31
  %1298 = lshr i16 %1297, 4
  %1299 = zext i16 %1298 to i64
  %1300 = getelementptr inbounds i16, ptr %1176, i64 %1299
  %1301 = load i16, ptr %1300, align 2, !tbaa !31
  %1302 = add nsw i32 %1181, 7
  %1303 = sext i32 %1282 to i64
  %1304 = getelementptr inbounds i16, ptr %1184, i64 %1303
  store i16 %1301, ptr %1304, align 2, !tbaa !31
  %1305 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm8, i64 0, i32 2), align 8, !tbaa !114
  %1306 = load i16, ptr %1305, align 2, !tbaa !31
  %1307 = zext i16 %1306 to i32
  %1308 = sub i32 %1163, %1307
  %1309 = lshr i32 %1308, 7
  %1310 = trunc i32 %1309 to i16
  %1311 = add i16 %1306, %1310
  store i16 %1311, ptr %1305, align 2, !tbaa !31
  %1312 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm8, i64 0, i32 1), align 8, !tbaa !112
  %1313 = add nsw i32 %1312, %1169
  %1314 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm8, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1315 = sext i32 %1313 to i64
  %1316 = getelementptr inbounds i16, ptr %1314, i64 %1315
  store ptr %1316, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm8, i64 0, i32 2), align 8, !tbaa !114
  %1317 = load i16, ptr %1316, align 2, !tbaa !31
  %1318 = lshr i16 %1317, 4
  %1319 = zext i16 %1318 to i64
  %1320 = getelementptr inbounds i16, ptr %1176, i64 %1319
  %1321 = load i16, ptr %1320, align 2, !tbaa !31
  %1322 = add nsw i32 %1181, 8
  %1323 = sext i32 %1302 to i64
  %1324 = getelementptr inbounds i16, ptr %1184, i64 %1323
  store i16 %1321, ptr %1324, align 2, !tbaa !31
  %1325 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm9, i64 0, i32 2), align 8, !tbaa !114
  %1326 = load i16, ptr %1325, align 2, !tbaa !31
  %1327 = zext i16 %1326 to i32
  %1328 = sub i32 %1163, %1327
  %1329 = lshr i32 %1328, 7
  %1330 = trunc i32 %1329 to i16
  %1331 = add i16 %1326, %1330
  store i16 %1331, ptr %1325, align 2, !tbaa !31
  %1332 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm9, i64 0, i32 1), align 8, !tbaa !112
  %1333 = add nsw i32 %1332, %1169
  %1334 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm9, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1335 = sext i32 %1333 to i64
  %1336 = getelementptr inbounds i16, ptr %1334, i64 %1335
  store ptr %1336, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm9, i64 0, i32 2), align 8, !tbaa !114
  %1337 = load i16, ptr %1336, align 2, !tbaa !31
  %1338 = lshr i16 %1337, 4
  %1339 = zext i16 %1338 to i64
  %1340 = getelementptr inbounds i16, ptr %1176, i64 %1339
  %1341 = load i16, ptr %1340, align 2, !tbaa !31
  %1342 = add nsw i32 %1181, 9
  %1343 = sext i32 %1322 to i64
  %1344 = getelementptr inbounds i16, ptr %1184, i64 %1343
  store i16 %1341, ptr %1344, align 2, !tbaa !31
  %1345 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE5scm10, i64 0, i32 2), align 8, !tbaa !114
  %1346 = load i16, ptr %1345, align 2, !tbaa !31
  %1347 = zext i16 %1346 to i32
  %1348 = sub i32 %1163, %1347
  %1349 = lshr i32 %1348, 7
  %1350 = trunc i32 %1349 to i16
  %1351 = add i16 %1346, %1350
  store i16 %1351, ptr %1345, align 2, !tbaa !31
  %1352 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE5scm10, i64 0, i32 1), align 8, !tbaa !112
  %1353 = add nsw i32 %1352, %1169
  %1354 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE5scm10, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1355 = sext i32 %1353 to i64
  %1356 = getelementptr inbounds i16, ptr %1354, i64 %1355
  store ptr %1356, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE5scm10, i64 0, i32 2), align 8, !tbaa !114
  %1357 = load i16, ptr %1356, align 2, !tbaa !31
  %1358 = lshr i16 %1357, 4
  %1359 = zext i16 %1358 to i64
  %1360 = getelementptr inbounds i16, ptr %1176, i64 %1359
  %1361 = load i16, ptr %1360, align 2, !tbaa !31
  %1362 = add nsw i32 %1181, 10
  store i32 %1362, ptr %1180, align 8, !tbaa !64
  %1363 = sext i32 %1342 to i64
  %1364 = getelementptr inbounds i16, ptr %1184, i64 %1363
  store i16 %1361, ptr %1364, align 2, !tbaa !31
  %1365 = load i32, ptr @bpos, align 4, !tbaa !25
  %1366 = load i32, ptr @pos, align 4, !tbaa !25
  %1367 = add nsw i32 %1366, -1
  %1368 = load i32, ptr @buf, align 8, !tbaa !20
  %1369 = add nsw i32 %1368, -1
  %1370 = and i32 %1369, %1367
  %1371 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %1372 = sext i32 %1370 to i64
  %1373 = getelementptr inbounds i8, ptr %1371, i64 %1372
  %1374 = load i8, ptr %1373, align 1, !tbaa !9
  %1375 = zext i8 %1374 to i32
  %1376 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8bmpModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %1169, i32 noundef %1365, i32 noundef %1375, i32 noundef %1158)
  %1377 = load i32, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  br label %1378

1378:                                             ; preds = %1155, %450
  %1379 = phi i32 [ 0, %450 ], [ %1377, %1155 ]
  ret i32 %1379

1380:                                             ; preds = %255, %253, %251, %249, %247, %245, %243, %241, %239, %237, %235
  %1381 = phi ptr [ @_ZGVZ8bmpModelR5MixerE2cm, %255 ], [ @_ZGVZ8bmpModelR5MixerE5scm10, %253 ], [ @_ZGVZ8bmpModelR5MixerE4scm9, %251 ], [ @_ZGVZ8bmpModelR5MixerE4scm8, %249 ], [ @_ZGVZ8bmpModelR5MixerE4scm7, %247 ], [ @_ZGVZ8bmpModelR5MixerE4scm6, %245 ], [ @_ZGVZ8bmpModelR5MixerE4scm5, %243 ], [ @_ZGVZ8bmpModelR5MixerE4scm4, %241 ], [ @_ZGVZ8bmpModelR5MixerE4scm3, %239 ], [ @_ZGVZ8bmpModelR5MixerE4scm2, %237 ], [ @_ZGVZ8bmpModelR5MixerE4scm1, %235 ]
  %1382 = phi { ptr, i32 } [ %256, %255 ], [ %254, %253 ], [ %252, %251 ], [ %250, %249 ], [ %248, %247 ], [ %246, %245 ], [ %244, %243 ], [ %242, %241 ], [ %240, %239 ], [ %238, %237 ], [ %236, %235 ]
  tail call void @__cxa_guard_abort(ptr nonnull %1381) #39
  resume { ptr, i32 } %1382
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_Z2i4i(i32 noundef %0) local_unnamed_addr #17 comdat {
  %2 = load i32, ptr @pos, align 4, !tbaa !25
  %3 = sub i32 %2, %0
  %4 = load i32, ptr @buf, align 8, !tbaa !20
  %5 = add nsw i32 %4, -1
  %6 = and i32 %5, %3
  %7 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %8 = sext i32 %6 to i64
  %9 = getelementptr inbounds i8, ptr %7, i64 %8
  %10 = load i8, ptr %9, align 1, !tbaa !9
  %11 = zext i8 %10 to i32
  %12 = add i32 %3, 1
  %13 = and i32 %5, %12
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, ptr %7, i64 %14
  %16 = load i8, ptr %15, align 1, !tbaa !9
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 8
  %19 = or i32 %18, %11
  %20 = add i32 %3, 2
  %21 = and i32 %5, %20
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, ptr %7, i64 %22
  %24 = load i8, ptr %23, align 1, !tbaa !9
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 16
  %27 = or i32 %19, %26
  %28 = add i32 %3, 3
  %29 = and i32 %5, %28
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, ptr %7, i64 %30
  %32 = load i8, ptr %31, align 1, !tbaa !9
  %33 = zext i8 %32 to i32
  %34 = shl nuw nsw i32 %33, 24
  %35 = or i32 %27, %34
  ret i32 %35
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(ptr nocapture noundef readonly, ...) local_unnamed_addr #18

; Function Attrs: mustprogress uwtable
define dso_local void @_Z9model8bitR5Mixeri(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %1) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %3 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm1 acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %11, !prof !110

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm1) #39
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %5
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm1, i32 noundef 131072)
          to label %9 unwind label %1563

9:                                                ; preds = %8
  %10 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm1) #39
  br label %11

11:                                               ; preds = %9, %5, %2
  %12 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm2 acquire, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %20, !prof !110

14:                                               ; preds = %11
  %15 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm2) #39
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm2, i32 noundef 131072)
          to label %18 unwind label %1565

18:                                               ; preds = %17
  %19 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm2, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm2) #39
  br label %20

20:                                               ; preds = %18, %14, %11
  %21 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm3 acquire, align 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %29, !prof !110

23:                                               ; preds = %20
  %24 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm3) #39
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm3, i32 noundef 131072)
          to label %27 unwind label %1567

27:                                               ; preds = %26
  %28 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm3, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm3) #39
  br label %29

29:                                               ; preds = %27, %23, %20
  %30 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm4 acquire, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %38, !prof !110

32:                                               ; preds = %29
  %33 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm4) #39
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm4, i32 noundef 131072)
          to label %36 unwind label %1569

36:                                               ; preds = %35
  %37 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm4, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm4) #39
  br label %38

38:                                               ; preds = %36, %32, %29
  %39 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm5 acquire, align 8
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %47, !prof !110

41:                                               ; preds = %38
  %42 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm5) #39
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm5, i32 noundef 131072)
          to label %45 unwind label %1571

45:                                               ; preds = %44
  %46 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm5, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm5) #39
  br label %47

47:                                               ; preds = %45, %41, %38
  %48 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm6 acquire, align 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %56, !prof !110

50:                                               ; preds = %47
  %51 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm6) #39
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm6, i32 noundef 262144)
          to label %54 unwind label %1573

54:                                               ; preds = %53
  %55 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm6, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm6) #39
  br label %56

56:                                               ; preds = %54, %50, %47
  %57 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm7 acquire, align 8
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %65, !prof !110

59:                                               ; preds = %56
  %60 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm7) #39
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %59
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm7, i32 noundef 131072)
          to label %63 unwind label %1575

63:                                               ; preds = %62
  %64 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm7, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm7) #39
  br label %65

65:                                               ; preds = %63, %59, %56
  %66 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE2cm acquire, align 8
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %76, !prof !110

68:                                               ; preds = %65
  %69 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE2cm) #39
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %68
  %72 = load i32, ptr @level, align 4, !tbaa !25
  %73 = shl i32 262144, %72
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ9model8bitR5MixeriE2cm, i32 noundef %73, i32 noundef 32)
          to label %74 unwind label %1577

74:                                               ; preds = %71
  %75 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE2cm) #39
  br label %76

76:                                               ; preds = %74, %68, %65
  %77 = load i32, ptr @bpos, align 4, !tbaa !25
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %76
  %80 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %81 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %82 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm3, i64 0, i32 1), align 8, !tbaa !112
  %83 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm4, i64 0, i32 1), align 8, !tbaa !112
  br label %1579

84:                                               ; preds = %76
  %85 = load i32, ptr @pos, align 4, !tbaa !25
  %86 = add nsw i32 %85, -1
  %87 = load i32, ptr @buf, align 8, !tbaa !20
  %88 = add nsw i32 %87, -1
  %89 = and i32 %88, %86
  %90 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %91 = sext i32 %89 to i64
  %92 = getelementptr inbounds i8, ptr %90, i64 %91
  %93 = load i8, ptr %92, align 1, !tbaa !9
  %94 = zext i8 %93 to i32
  %95 = add nsw i32 %1, -1
  %96 = sub nsw i32 %85, %95
  %97 = and i32 %88, %96
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i8, ptr %90, i64 %98
  %100 = load i8, ptr %99, align 1, !tbaa !9
  %101 = zext i8 %100 to i32
  %102 = add nuw nsw i32 %101, %94
  %103 = sub nsw i32 %85, %1
  %104 = and i32 %88, %103
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8, ptr %90, i64 %105
  %107 = load i8, ptr %106, align 1, !tbaa !9
  %108 = zext i8 %107 to i32
  %109 = add nuw nsw i32 %102, %108
  %110 = add nsw i32 %1, 1
  %111 = sub nsw i32 %85, %110
  %112 = and i32 %88, %111
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, ptr %90, i64 %113
  %115 = load i8, ptr %114, align 1, !tbaa !9
  %116 = zext i8 %115 to i32
  %117 = add nuw nsw i32 %109, %116
  %118 = mul nuw nsw i32 %94, %94
  %119 = mul nuw nsw i32 %101, %101
  %120 = add nuw nsw i32 %119, %118
  %121 = mul nuw nsw i32 %108, %108
  %122 = add nuw nsw i32 %120, %121
  %123 = mul nuw nsw i32 %116, %116
  %124 = add nuw nsw i32 %122, %123
  %125 = mul nuw nsw i32 %117, %117
  %126 = lshr i32 %125, 2
  %127 = sub nsw i32 %124, %126
  %128 = lshr i32 %127, 2
  %129 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %130 = and i32 %128, 65535
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds i8, ptr %129, i64 %131
  %133 = load i8, ptr %132, align 1, !tbaa !9
  %134 = zext i8 %133 to i32
  %135 = lshr i32 %94, 2
  %136 = lshr i32 %108, 2
  %137 = mul nuw nsw i32 %135, 30005491
  %138 = mul nuw i32 %136, 50004239
  %139 = add nuw nsw i32 %137, 19995673
  %140 = add i32 %139, %138
  %141 = lshr i32 %140, 9
  %142 = lshr i32 %94, 5
  %143 = lshr i32 %108, 6
  %144 = xor i32 %143, %142
  %145 = or i32 %144, 67108864
  %146 = xor i32 %145, %141
  %147 = xor i32 %146, %140
  %148 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %149 = add nsw i32 %148, 1
  store i32 %149, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %150 = mul i32 %147, 987654323
  %151 = add i32 %150, %148
  %152 = tail call i32 @llvm.fshl.i32(i32 %151, i32 %151, i32 16)
  %153 = mul i32 %152, 123456791
  %154 = add i32 %153, %148
  %155 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %156 = sext i32 %148 to i64
  %157 = getelementptr inbounds i32, ptr %155, i64 %156
  store i32 %154, ptr %157, align 4, !tbaa !25
  %158 = load i32, ptr @pos, align 4, !tbaa !25
  %159 = add nsw i32 %158, -1
  %160 = load i32, ptr @buf, align 8, !tbaa !20
  %161 = add nsw i32 %160, -1
  %162 = and i32 %161, %159
  %163 = sext i32 %162 to i64
  %164 = getelementptr inbounds i8, ptr %90, i64 %163
  %165 = load i8, ptr %164, align 1, !tbaa !9
  %166 = lshr i8 %165, 2
  %167 = zext i8 %166 to i32
  %168 = add nsw i32 %158, -2
  %169 = and i32 %161, %168
  %170 = sext i32 %169 to i64
  %171 = getelementptr inbounds i8, ptr %90, i64 %170
  %172 = load i8, ptr %171, align 1, !tbaa !9
  %173 = lshr i8 %172, 2
  %174 = zext i8 %173 to i32
  %175 = mul nuw nsw i32 %167, 30005491
  %176 = mul nuw i32 %174, 50004239
  %177 = add nuw nsw i32 %175, 219998652
  %178 = add i32 %177, %176
  %179 = lshr i32 %178, 9
  %180 = lshr i32 %167, 3
  %181 = lshr i32 %174, 4
  %182 = xor i32 %181, %180
  %183 = or i32 %182, 67108864
  %184 = xor i32 %179, %183
  %185 = xor i32 %184, %178
  %186 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %187 = add nsw i32 %186, 1
  store i32 %187, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %188 = mul i32 %185, 987654323
  %189 = add i32 %188, %186
  %190 = tail call i32 @llvm.fshl.i32(i32 %189, i32 %189, i32 16)
  %191 = mul i32 %190, 123456791
  %192 = add i32 %191, %186
  %193 = sext i32 %186 to i64
  %194 = getelementptr inbounds i32, ptr %155, i64 %193
  store i32 %192, ptr %194, align 4, !tbaa !25
  %195 = load i32, ptr @pos, align 4, !tbaa !25
  %196 = sub nsw i32 %195, %1
  %197 = load i32, ptr @buf, align 8, !tbaa !20
  %198 = add nsw i32 %197, -1
  %199 = and i32 %198, %196
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i8, ptr %90, i64 %200
  %202 = load i8, ptr %201, align 1, !tbaa !9
  %203 = lshr i8 %202, 2
  %204 = zext i8 %203 to i32
  %205 = shl nsw i32 %1, 1
  %206 = sub nsw i32 %195, %205
  %207 = and i32 %198, %206
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds i8, ptr %90, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !9
  %211 = lshr i8 %210, 2
  %212 = zext i8 %211 to i32
  %213 = mul nuw nsw i32 %204, 30005491
  %214 = mul nuw i32 %212, 50004239
  %215 = add nuw i32 %213, 420001631
  %216 = add i32 %215, %214
  %217 = lshr i32 %216, 9
  %218 = lshr i32 %204, 3
  %219 = lshr i32 %212, 4
  %220 = xor i32 %219, %218
  %221 = or i32 %220, 67108864
  %222 = xor i32 %217, %221
  %223 = xor i32 %222, %216
  %224 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %225 = add nsw i32 %224, 1
  store i32 %225, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %226 = mul i32 %223, 987654323
  %227 = add i32 %226, %224
  %228 = tail call i32 @llvm.fshl.i32(i32 %227, i32 %227, i32 16)
  %229 = mul i32 %228, 123456791
  %230 = add i32 %229, %224
  %231 = sext i32 %224 to i64
  %232 = getelementptr inbounds i32, ptr %155, i64 %231
  store i32 %230, ptr %232, align 4, !tbaa !25
  %233 = load i32, ptr @pos, align 4, !tbaa !25
  %234 = add nsw i32 %233, -1
  %235 = load i32, ptr @buf, align 8, !tbaa !20
  %236 = add nsw i32 %235, -1
  %237 = and i32 %236, %234
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds i8, ptr %90, i64 %238
  %240 = load i8, ptr %239, align 1, !tbaa !9
  %241 = lshr i8 %240, 2
  %242 = zext i8 %241 to i32
  %243 = sub nsw i32 %233, %95
  %244 = and i32 %236, %243
  %245 = sext i32 %244 to i64
  %246 = getelementptr inbounds i8, ptr %90, i64 %245
  %247 = load i8, ptr %246, align 1, !tbaa !9
  %248 = lshr i8 %247, 2
  %249 = zext i8 %248 to i32
  %250 = mul nuw nsw i32 %242, 30005491
  %251 = mul nuw i32 %249, 50004239
  %252 = add nuw i32 %250, 620004610
  %253 = add i32 %252, %251
  %254 = lshr i32 %253, 9
  %255 = lshr i32 %242, 3
  %256 = lshr i32 %249, 4
  %257 = xor i32 %255, %256
  %258 = xor i32 %257, %254
  %259 = xor i32 %258, %253
  %260 = xor i32 %259, 67108865
  %261 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %262 = add nsw i32 %261, 1
  store i32 %262, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %263 = mul i32 %260, 987654323
  %264 = add i32 %263, %261
  %265 = tail call i32 @llvm.fshl.i32(i32 %264, i32 %264, i32 16)
  %266 = mul i32 %265, 123456791
  %267 = add i32 %266, %261
  %268 = sext i32 %261 to i64
  %269 = getelementptr inbounds i32, ptr %155, i64 %268
  store i32 %267, ptr %269, align 4, !tbaa !25
  %270 = load i32, ptr @pos, align 4, !tbaa !25
  %271 = sub nsw i32 %270, %1
  %272 = load i32, ptr @buf, align 8, !tbaa !20
  %273 = add nsw i32 %272, -1
  %274 = and i32 %273, %271
  %275 = sext i32 %274 to i64
  %276 = getelementptr inbounds i8, ptr %90, i64 %275
  %277 = load i8, ptr %276, align 1, !tbaa !9
  %278 = lshr i8 %277, 2
  %279 = zext i8 %278 to i32
  %280 = sub nsw i32 %270, %110
  %281 = and i32 %273, %280
  %282 = sext i32 %281 to i64
  %283 = getelementptr inbounds i8, ptr %90, i64 %282
  %284 = load i8, ptr %283, align 1, !tbaa !9
  %285 = lshr i8 %284, 2
  %286 = zext i8 %285 to i32
  %287 = mul nuw nsw i32 %279, 30005491
  %288 = mul nuw i32 %286, 50004239
  %289 = add nuw i32 %287, 820007589
  %290 = add i32 %289, %288
  %291 = lshr i32 %290, 9
  %292 = lshr i32 %279, 3
  %293 = lshr i32 %286, 4
  %294 = xor i32 %292, %293
  %295 = xor i32 %294, %291
  %296 = xor i32 %295, %290
  %297 = xor i32 %296, 67108865
  %298 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %299 = add nsw i32 %298, 1
  store i32 %299, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %300 = mul i32 %297, 987654323
  %301 = add i32 %300, %298
  %302 = tail call i32 @llvm.fshl.i32(i32 %301, i32 %301, i32 16)
  %303 = mul i32 %302, 123456791
  %304 = add i32 %303, %298
  %305 = sext i32 %298 to i64
  %306 = getelementptr inbounds i32, ptr %155, i64 %305
  store i32 %304, ptr %306, align 4, !tbaa !25
  %307 = load i32, ptr @pos, align 4, !tbaa !25
  %308 = sub nsw i32 %307, %110
  %309 = load i32, ptr @buf, align 8, !tbaa !20
  %310 = add nsw i32 %309, -1
  %311 = and i32 %310, %308
  %312 = sext i32 %311 to i64
  %313 = getelementptr inbounds i8, ptr %90, i64 %312
  %314 = load i8, ptr %313, align 1, !tbaa !9
  %315 = lshr i8 %314, 2
  %316 = zext i8 %315 to i32
  %317 = add nsw i32 %1, 2
  %318 = sub nsw i32 %307, %317
  %319 = and i32 %310, %318
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds i8, ptr %90, i64 %320
  %322 = load i8, ptr %321, align 1, !tbaa !9
  %323 = lshr i8 %322, 2
  %324 = zext i8 %323 to i32
  %325 = mul nuw nsw i32 %316, 30005491
  %326 = mul nuw i32 %324, 50004239
  %327 = add nuw i32 %325, 1020010568
  %328 = add i32 %327, %326
  %329 = lshr i32 %328, 9
  %330 = lshr i32 %316, 3
  %331 = lshr i32 %324, 4
  %332 = xor i32 %330, %331
  %333 = xor i32 %332, %329
  %334 = xor i32 %333, %328
  %335 = xor i32 %334, 67108865
  %336 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %337 = add nsw i32 %336, 1
  store i32 %337, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %338 = mul i32 %335, 987654323
  %339 = add i32 %338, %336
  %340 = tail call i32 @llvm.fshl.i32(i32 %339, i32 %339, i32 16)
  %341 = mul i32 %340, 123456791
  %342 = add i32 %341, %336
  %343 = sext i32 %336 to i64
  %344 = getelementptr inbounds i32, ptr %155, i64 %343
  store i32 %342, ptr %344, align 4, !tbaa !25
  %345 = load i32, ptr @pos, align 4, !tbaa !25
  %346 = sub nsw i32 %345, %110
  %347 = load i32, ptr @buf, align 8, !tbaa !20
  %348 = add nsw i32 %347, -1
  %349 = and i32 %348, %346
  %350 = sext i32 %349 to i64
  %351 = getelementptr inbounds i8, ptr %90, i64 %350
  %352 = load i8, ptr %351, align 1, !tbaa !9
  %353 = lshr i8 %352, 2
  %354 = zext i8 %353 to i32
  %355 = add nsw i32 %205, 2
  %356 = sub nsw i32 %345, %355
  %357 = and i32 %348, %356
  %358 = sext i32 %357 to i64
  %359 = getelementptr inbounds i8, ptr %90, i64 %358
  %360 = load i8, ptr %359, align 1, !tbaa !9
  %361 = lshr i8 %360, 2
  %362 = zext i8 %361 to i32
  %363 = mul nuw nsw i32 %354, 30005491
  %364 = mul nuw i32 %362, 50004239
  %365 = add nuw i32 %363, 1220013547
  %366 = add i32 %365, %364
  %367 = lshr i32 %366, 9
  %368 = lshr i32 %354, 3
  %369 = lshr i32 %362, 4
  %370 = xor i32 %368, %369
  %371 = xor i32 %370, %367
  %372 = xor i32 %371, %366
  %373 = xor i32 %372, 67108865
  %374 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %375 = add nsw i32 %374, 1
  store i32 %375, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %376 = mul i32 %373, 987654323
  %377 = add i32 %376, %374
  %378 = tail call i32 @llvm.fshl.i32(i32 %377, i32 %377, i32 16)
  %379 = mul i32 %378, 123456791
  %380 = add i32 %379, %374
  %381 = sext i32 %374 to i64
  %382 = getelementptr inbounds i32, ptr %155, i64 %381
  store i32 %380, ptr %382, align 4, !tbaa !25
  %383 = load i32, ptr @pos, align 4, !tbaa !25
  %384 = sub nsw i32 %383, %95
  %385 = load i32, ptr @buf, align 8, !tbaa !20
  %386 = add nsw i32 %385, -1
  %387 = and i32 %386, %384
  %388 = sext i32 %387 to i64
  %389 = getelementptr inbounds i8, ptr %90, i64 %388
  %390 = load i8, ptr %389, align 1, !tbaa !9
  %391 = lshr i8 %390, 2
  %392 = zext i8 %391 to i32
  %393 = add nsw i32 %205, -2
  %394 = sub nsw i32 %383, %393
  %395 = and i32 %386, %394
  %396 = sext i32 %395 to i64
  %397 = getelementptr inbounds i8, ptr %90, i64 %396
  %398 = load i8, ptr %397, align 1, !tbaa !9
  %399 = lshr i8 %398, 2
  %400 = zext i8 %399 to i32
  %401 = mul nuw nsw i32 %392, 30005491
  %402 = mul nuw i32 %400, 50004239
  %403 = add nuw i32 %401, 1420016526
  %404 = add i32 %403, %402
  %405 = lshr i32 %404, 9
  %406 = lshr i32 %392, 3
  %407 = lshr i32 %400, 4
  %408 = xor i32 %406, %407
  %409 = xor i32 %408, %405
  %410 = xor i32 %409, %404
  %411 = xor i32 %410, 67108866
  %412 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %413 = add nsw i32 %412, 1
  store i32 %413, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %414 = mul i32 %411, 987654323
  %415 = add i32 %414, %412
  %416 = tail call i32 @llvm.fshl.i32(i32 %415, i32 %415, i32 16)
  %417 = mul i32 %416, 123456791
  %418 = add i32 %417, %412
  %419 = sext i32 %412 to i64
  %420 = getelementptr inbounds i32, ptr %155, i64 %419
  store i32 %418, ptr %420, align 4, !tbaa !25
  %421 = load i32, ptr @pos, align 4, !tbaa !25
  %422 = add nsw i32 %421, -1
  %423 = load i32, ptr @buf, align 8, !tbaa !20
  %424 = add nsw i32 %423, -1
  %425 = and i32 %424, %422
  %426 = sext i32 %425 to i64
  %427 = getelementptr inbounds i8, ptr %90, i64 %426
  %428 = load i8, ptr %427, align 1, !tbaa !9
  %429 = zext i8 %428 to i32
  %430 = sub nsw i32 %421, %1
  %431 = and i32 %424, %430
  %432 = sext i32 %431 to i64
  %433 = getelementptr inbounds i8, ptr %90, i64 %432
  %434 = load i8, ptr %433, align 1, !tbaa !9
  %435 = zext i8 %434 to i32
  %436 = add nuw nsw i32 %435, %429
  %437 = lshr i32 %436, 1
  %438 = mul i32 %437, 30005491
  %439 = add i32 %438, 1570015266
  %440 = lshr i32 %439, 9
  %441 = lshr i32 %436, 4
  %442 = xor i32 %441, %440
  %443 = xor i32 %442, %439
  %444 = xor i32 %443, 201326589
  %445 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %446 = add nsw i32 %445, 1
  store i32 %446, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %447 = mul i32 %444, 987654323
  %448 = add i32 %447, %445
  %449 = tail call i32 @llvm.fshl.i32(i32 %448, i32 %448, i32 16)
  %450 = mul i32 %449, 123456791
  %451 = add i32 %450, %445
  %452 = sext i32 %445 to i64
  %453 = getelementptr inbounds i32, ptr %155, i64 %452
  store i32 %451, ptr %453, align 4, !tbaa !25
  %454 = load i32, ptr @pos, align 4, !tbaa !25
  %455 = add nsw i32 %454, -1
  %456 = load i32, ptr @buf, align 8, !tbaa !20
  %457 = add nsw i32 %456, -1
  %458 = and i32 %457, %455
  %459 = sext i32 %458 to i64
  %460 = getelementptr inbounds i8, ptr %90, i64 %459
  %461 = load i8, ptr %460, align 1, !tbaa !9
  %462 = zext i8 %461 to i32
  %463 = add nsw i32 %454, -2
  %464 = and i32 %457, %463
  %465 = sext i32 %464 to i64
  %466 = getelementptr inbounds i8, ptr %90, i64 %465
  %467 = load i8, ptr %466, align 1, !tbaa !9
  %468 = zext i8 %467 to i32
  %469 = add nuw nsw i32 %468, %462
  %470 = lshr i32 %469, 1
  %471 = mul i32 %470, 30005491
  %472 = add i32 %471, 1770018245
  %473 = lshr i32 %472, 9
  %474 = lshr i32 %469, 4
  %475 = xor i32 %474, %473
  %476 = xor i32 %475, %472
  %477 = xor i32 %476, 201326589
  %478 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %479 = add nsw i32 %478, 1
  store i32 %479, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %480 = mul i32 %477, 987654323
  %481 = add i32 %480, %478
  %482 = tail call i32 @llvm.fshl.i32(i32 %481, i32 %481, i32 16)
  %483 = mul i32 %482, 123456791
  %484 = add i32 %483, %478
  %485 = sext i32 %478 to i64
  %486 = getelementptr inbounds i32, ptr %155, i64 %485
  store i32 %484, ptr %486, align 4, !tbaa !25
  %487 = load i32, ptr @pos, align 4, !tbaa !25
  %488 = sub nsw i32 %487, %1
  %489 = load i32, ptr @buf, align 8, !tbaa !20
  %490 = add nsw i32 %489, -1
  %491 = and i32 %490, %488
  %492 = sext i32 %491 to i64
  %493 = getelementptr inbounds i8, ptr %90, i64 %492
  %494 = load i8, ptr %493, align 1, !tbaa !9
  %495 = zext i8 %494 to i32
  %496 = sub nsw i32 %487, %205
  %497 = and i32 %490, %496
  %498 = sext i32 %497 to i64
  %499 = getelementptr inbounds i8, ptr %90, i64 %498
  %500 = load i8, ptr %499, align 1, !tbaa !9
  %501 = zext i8 %500 to i32
  %502 = add nuw nsw i32 %501, %495
  %503 = lshr i32 %502, 1
  %504 = mul i32 %503, 30005491
  %505 = add i32 %504, 1970021224
  %506 = lshr i32 %505, 9
  %507 = lshr i32 %502, 4
  %508 = xor i32 %507, %506
  %509 = xor i32 %508, %505
  %510 = xor i32 %509, 201326589
  %511 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %512 = add nsw i32 %511, 1
  store i32 %512, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %513 = mul i32 %510, 987654323
  %514 = add i32 %513, %511
  %515 = tail call i32 @llvm.fshl.i32(i32 %514, i32 %514, i32 16)
  %516 = mul i32 %515, 123456791
  %517 = add i32 %516, %511
  %518 = sext i32 %511 to i64
  %519 = getelementptr inbounds i32, ptr %155, i64 %518
  store i32 %517, ptr %519, align 4, !tbaa !25
  %520 = load i32, ptr @pos, align 4, !tbaa !25
  %521 = add nsw i32 %520, -1
  %522 = load i32, ptr @buf, align 8, !tbaa !20
  %523 = add nsw i32 %522, -1
  %524 = and i32 %523, %521
  %525 = sext i32 %524 to i64
  %526 = getelementptr inbounds i8, ptr %90, i64 %525
  %527 = load i8, ptr %526, align 1, !tbaa !9
  %528 = zext i8 %527 to i32
  %529 = sub nsw i32 %520, %95
  %530 = and i32 %523, %529
  %531 = sext i32 %530 to i64
  %532 = getelementptr inbounds i8, ptr %90, i64 %531
  %533 = load i8, ptr %532, align 1, !tbaa !9
  %534 = zext i8 %533 to i32
  %535 = add nuw nsw i32 %534, %528
  %536 = lshr i32 %535, 1
  %537 = mul i32 %536, 30005491
  %538 = add i32 %537, -2124943093
  %539 = lshr i32 %538, 9
  %540 = lshr i32 %535, 4
  %541 = xor i32 %540, %539
  %542 = xor i32 %541, %538
  %543 = xor i32 %542, 201326588
  %544 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %545 = add nsw i32 %544, 1
  store i32 %545, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %546 = mul i32 %543, 987654323
  %547 = add i32 %546, %544
  %548 = tail call i32 @llvm.fshl.i32(i32 %547, i32 %547, i32 16)
  %549 = mul i32 %548, 123456791
  %550 = add i32 %549, %544
  %551 = sext i32 %544 to i64
  %552 = getelementptr inbounds i32, ptr %155, i64 %551
  store i32 %550, ptr %552, align 4, !tbaa !25
  %553 = load i32, ptr @pos, align 4, !tbaa !25
  %554 = sub nsw i32 %553, %1
  %555 = load i32, ptr @buf, align 8, !tbaa !20
  %556 = add nsw i32 %555, -1
  %557 = and i32 %556, %554
  %558 = sext i32 %557 to i64
  %559 = getelementptr inbounds i8, ptr %90, i64 %558
  %560 = load i8, ptr %559, align 1, !tbaa !9
  %561 = zext i8 %560 to i32
  %562 = sub nsw i32 %553, %110
  %563 = and i32 %556, %562
  %564 = sext i32 %563 to i64
  %565 = getelementptr inbounds i8, ptr %90, i64 %564
  %566 = load i8, ptr %565, align 1, !tbaa !9
  %567 = zext i8 %566 to i32
  %568 = add nuw nsw i32 %567, %561
  %569 = lshr i32 %568, 1
  %570 = mul i32 %569, 30005491
  %571 = add i32 %570, -1924940114
  %572 = lshr i32 %571, 9
  %573 = lshr i32 %568, 4
  %574 = xor i32 %573, %572
  %575 = xor i32 %574, %571
  %576 = xor i32 %575, 201326588
  %577 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %578 = add nsw i32 %577, 1
  store i32 %578, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %579 = mul i32 %576, 987654323
  %580 = add i32 %579, %577
  %581 = tail call i32 @llvm.fshl.i32(i32 %580, i32 %580, i32 16)
  %582 = mul i32 %581, 123456791
  %583 = add i32 %582, %577
  %584 = sext i32 %577 to i64
  %585 = getelementptr inbounds i32, ptr %155, i64 %584
  store i32 %583, ptr %585, align 4, !tbaa !25
  %586 = load i32, ptr @pos, align 4, !tbaa !25
  %587 = sub nsw i32 %586, %110
  %588 = load i32, ptr @buf, align 8, !tbaa !20
  %589 = add nsw i32 %588, -1
  %590 = and i32 %589, %587
  %591 = sext i32 %590 to i64
  %592 = getelementptr inbounds i8, ptr %90, i64 %591
  %593 = load i8, ptr %592, align 1, !tbaa !9
  %594 = zext i8 %593 to i32
  %595 = sub nsw i32 %586, %317
  %596 = and i32 %589, %595
  %597 = sext i32 %596 to i64
  %598 = getelementptr inbounds i8, ptr %90, i64 %597
  %599 = load i8, ptr %598, align 1, !tbaa !9
  %600 = zext i8 %599 to i32
  %601 = add nuw nsw i32 %600, %594
  %602 = lshr i32 %601, 1
  %603 = mul i32 %602, 30005491
  %604 = add i32 %603, -1724937135
  %605 = lshr i32 %604, 9
  %606 = lshr i32 %601, 4
  %607 = xor i32 %606, %605
  %608 = xor i32 %607, %604
  %609 = xor i32 %608, 201326588
  %610 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %611 = add nsw i32 %610, 1
  store i32 %611, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %612 = mul i32 %609, 987654323
  %613 = add i32 %612, %610
  %614 = tail call i32 @llvm.fshl.i32(i32 %613, i32 %613, i32 16)
  %615 = mul i32 %614, 123456791
  %616 = add i32 %615, %610
  %617 = sext i32 %610 to i64
  %618 = getelementptr inbounds i32, ptr %155, i64 %617
  store i32 %616, ptr %618, align 4, !tbaa !25
  %619 = load i32, ptr @pos, align 4, !tbaa !25
  %620 = sub nsw i32 %619, %110
  %621 = load i32, ptr @buf, align 8, !tbaa !20
  %622 = add nsw i32 %621, -1
  %623 = and i32 %622, %620
  %624 = sext i32 %623 to i64
  %625 = getelementptr inbounds i8, ptr %90, i64 %624
  %626 = load i8, ptr %625, align 1, !tbaa !9
  %627 = zext i8 %626 to i32
  %628 = sub nsw i32 %619, %355
  %629 = and i32 %622, %628
  %630 = sext i32 %629 to i64
  %631 = getelementptr inbounds i8, ptr %90, i64 %630
  %632 = load i8, ptr %631, align 1, !tbaa !9
  %633 = zext i8 %632 to i32
  %634 = add nuw nsw i32 %633, %627
  %635 = lshr i32 %634, 1
  %636 = mul i32 %635, 30005491
  %637 = add i32 %636, -1524934156
  %638 = lshr i32 %637, 9
  %639 = lshr i32 %634, 4
  %640 = xor i32 %639, %638
  %641 = xor i32 %640, %637
  %642 = xor i32 %641, 201326588
  %643 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %644 = add nsw i32 %643, 1
  store i32 %644, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %645 = mul i32 %642, 987654323
  %646 = add i32 %645, %643
  %647 = tail call i32 @llvm.fshl.i32(i32 %646, i32 %646, i32 16)
  %648 = mul i32 %647, 123456791
  %649 = add i32 %648, %643
  %650 = sext i32 %643 to i64
  %651 = getelementptr inbounds i32, ptr %155, i64 %650
  store i32 %649, ptr %651, align 4, !tbaa !25
  %652 = load i32, ptr @pos, align 4, !tbaa !25
  %653 = sub nsw i32 %652, %95
  %654 = load i32, ptr @buf, align 8, !tbaa !20
  %655 = add nsw i32 %654, -1
  %656 = and i32 %655, %653
  %657 = sext i32 %656 to i64
  %658 = getelementptr inbounds i8, ptr %90, i64 %657
  %659 = load i8, ptr %658, align 1, !tbaa !9
  %660 = zext i8 %659 to i32
  %661 = sub nsw i32 %652, %393
  %662 = and i32 %655, %661
  %663 = sext i32 %662 to i64
  %664 = getelementptr inbounds i8, ptr %90, i64 %663
  %665 = load i8, ptr %664, align 1, !tbaa !9
  %666 = zext i8 %665 to i32
  %667 = add nuw nsw i32 %666, %660
  %668 = lshr i32 %667, 1
  %669 = mul i32 %668, 30005491
  %670 = add i32 %669, -1324931177
  %671 = lshr i32 %670, 9
  %672 = lshr i32 %667, 4
  %673 = xor i32 %672, %671
  %674 = xor i32 %673, %670
  %675 = xor i32 %674, 201326587
  %676 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %677 = add nsw i32 %676, 1
  store i32 %677, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %678 = mul i32 %675, 987654323
  %679 = add i32 %678, %676
  %680 = tail call i32 @llvm.fshl.i32(i32 %679, i32 %679, i32 16)
  %681 = mul i32 %680, 123456791
  %682 = add i32 %681, %676
  %683 = sext i32 %676 to i64
  %684 = getelementptr inbounds i32, ptr %155, i64 %683
  store i32 %682, ptr %684, align 4, !tbaa !25
  %685 = load i32, ptr @pos, align 4, !tbaa !25
  %686 = sub nsw i32 %685, %1
  %687 = load i32, ptr @buf, align 8, !tbaa !20
  %688 = add nsw i32 %687, -1
  %689 = and i32 %688, %686
  %690 = sext i32 %689 to i64
  %691 = getelementptr inbounds i8, ptr %90, i64 %690
  %692 = load i8, ptr %691, align 1, !tbaa !9
  %693 = lshr i8 %692, 2
  %694 = zext i8 %693 to i32
  %695 = add nsw i32 %685, -1
  %696 = and i32 %688, %695
  %697 = sext i32 %696 to i64
  %698 = getelementptr inbounds i8, ptr %90, i64 %697
  %699 = load i8, ptr %698, align 1, !tbaa !9
  %700 = lshr i8 %699, 2
  %701 = zext i8 %700 to i32
  %702 = sub nsw i32 %685, %95
  %703 = and i32 %688, %702
  %704 = sext i32 %703 to i64
  %705 = getelementptr inbounds i8, ptr %90, i64 %704
  %706 = load i8, ptr %705, align 1, !tbaa !9
  %707 = lshr i8 %706, 2
  %708 = zext i8 %707 to i32
  %709 = mul nuw nsw i32 %694, 30005491
  %710 = mul nuw i32 %701, 50004239
  %711 = mul i32 %708, 70004807
  %712 = add nsw i32 %709, -1004919152
  %713 = add i32 %712, %710
  %714 = add i32 %713, %711
  %715 = lshr i32 %714, 9
  %716 = lshr i32 %694, 3
  %717 = lshr i32 %701, 4
  %718 = lshr i32 %708, 5
  %719 = xor i32 %716, %717
  %720 = xor i32 %719, %718
  %721 = xor i32 %720, %715
  %722 = xor i32 %721, %714
  %723 = xor i32 %722, 67108859
  %724 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %725 = add nsw i32 %724, 1
  store i32 %725, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %726 = mul i32 %723, 987654323
  %727 = add i32 %726, %724
  %728 = tail call i32 @llvm.fshl.i32(i32 %727, i32 %727, i32 16)
  %729 = mul i32 %728, 123456791
  %730 = add i32 %729, %724
  %731 = sext i32 %724 to i64
  %732 = getelementptr inbounds i32, ptr %155, i64 %731
  store i32 %730, ptr %732, align 4, !tbaa !25
  %733 = load i32, ptr @pos, align 4, !tbaa !25
  %734 = sub nsw i32 %733, %95
  %735 = load i32, ptr @buf, align 8, !tbaa !20
  %736 = add nsw i32 %735, -1
  %737 = and i32 %736, %734
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds i8, ptr %90, i64 %738
  %740 = load i8, ptr %739, align 1, !tbaa !9
  %741 = lshr i8 %740, 2
  %742 = zext i8 %741 to i32
  %743 = sub nsw i32 %733, %1
  %744 = and i32 %736, %743
  %745 = sext i32 %744 to i64
  %746 = getelementptr inbounds i8, ptr %90, i64 %745
  %747 = load i8, ptr %746, align 1, !tbaa !9
  %748 = lshr i8 %747, 2
  %749 = zext i8 %748 to i32
  %750 = sub nsw i32 %733, %110
  %751 = and i32 %736, %750
  %752 = sext i32 %751 to i64
  %753 = getelementptr inbounds i8, ptr %90, i64 %752
  %754 = load i8, ptr %753, align 1, !tbaa !9
  %755 = lshr i8 %754, 2
  %756 = zext i8 %755 to i32
  %757 = mul nuw nsw i32 %742, 30005491
  %758 = mul nuw i32 %749, 50004239
  %759 = mul i32 %756, 70004807
  %760 = add nsw i32 %757, -804916173
  %761 = add i32 %760, %758
  %762 = add i32 %761, %759
  %763 = lshr i32 %762, 9
  %764 = lshr i32 %742, 3
  %765 = lshr i32 %749, 4
  %766 = lshr i32 %756, 5
  %767 = xor i32 %764, %765
  %768 = xor i32 %767, %766
  %769 = xor i32 %768, %763
  %770 = xor i32 %769, %762
  %771 = xor i32 %770, 67108859
  %772 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %773 = add nsw i32 %772, 1
  store i32 %773, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %774 = mul i32 %771, 987654323
  %775 = add i32 %774, %772
  %776 = tail call i32 @llvm.fshl.i32(i32 %775, i32 %775, i32 16)
  %777 = mul i32 %776, 123456791
  %778 = add i32 %777, %772
  %779 = sext i32 %772 to i64
  %780 = getelementptr inbounds i32, ptr %155, i64 %779
  store i32 %778, ptr %780, align 4, !tbaa !25
  %781 = load i32, ptr @pos, align 4, !tbaa !25
  %782 = add nsw i32 %781, -1
  %783 = load i32, ptr @buf, align 8, !tbaa !20
  %784 = add nsw i32 %783, -1
  %785 = and i32 %784, %782
  %786 = sext i32 %785 to i64
  %787 = getelementptr inbounds i8, ptr %90, i64 %786
  %788 = load i8, ptr %787, align 1, !tbaa !9
  %789 = lshr i8 %788, 2
  %790 = zext i8 %789 to i32
  %791 = sub nsw i32 %781, %95
  %792 = and i32 %784, %791
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds i8, ptr %90, i64 %793
  %795 = load i8, ptr %794, align 1, !tbaa !9
  %796 = lshr i8 %795, 2
  %797 = zext i8 %796 to i32
  %798 = sub i32 %781, %205
  %799 = add i32 %798, 1
  %800 = and i32 %784, %799
  %801 = sext i32 %800 to i64
  %802 = getelementptr inbounds i8, ptr %90, i64 %801
  %803 = load i8, ptr %802, align 1, !tbaa !9
  %804 = lshr i8 %803, 2
  %805 = zext i8 %804 to i32
  %806 = mul nuw nsw i32 %790, 30005491
  %807 = mul nuw i32 %797, 50004239
  %808 = mul i32 %805, 70004807
  %809 = add nsw i32 %806, -604913194
  %810 = add i32 %809, %807
  %811 = add i32 %810, %808
  %812 = lshr i32 %811, 9
  %813 = lshr i32 %790, 3
  %814 = lshr i32 %797, 4
  %815 = lshr i32 %805, 5
  %816 = xor i32 %813, %814
  %817 = xor i32 %816, %815
  %818 = xor i32 %817, %812
  %819 = xor i32 %818, %811
  %820 = xor i32 %819, 67108859
  %821 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %822 = add nsw i32 %821, 1
  store i32 %822, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %823 = mul i32 %820, 987654323
  %824 = add i32 %823, %821
  %825 = tail call i32 @llvm.fshl.i32(i32 %824, i32 %824, i32 16)
  %826 = mul i32 %825, 123456791
  %827 = add i32 %826, %821
  %828 = sext i32 %821 to i64
  %829 = getelementptr inbounds i32, ptr %155, i64 %828
  store i32 %827, ptr %829, align 4, !tbaa !25
  %830 = load i32, ptr @pos, align 4, !tbaa !25
  %831 = add nsw i32 %830, -3
  %832 = load i32, ptr @buf, align 8, !tbaa !20
  %833 = add nsw i32 %832, -1
  %834 = and i32 %833, %831
  %835 = sext i32 %834 to i64
  %836 = getelementptr inbounds i8, ptr %90, i64 %835
  %837 = load i8, ptr %836, align 1, !tbaa !9
  %838 = zext i8 %837 to i32
  %839 = sub nsw i32 %830, %1
  %840 = and i32 %833, %839
  %841 = sext i32 %840 to i64
  %842 = getelementptr inbounds i8, ptr %90, i64 %841
  %843 = load i8, ptr %842, align 1, !tbaa !9
  %844 = zext i8 %843 to i32
  %845 = add nuw nsw i32 %844, %838
  %846 = lshr i32 %845, 1
  %847 = add nsw i32 %830, -1
  %848 = and i32 %833, %847
  %849 = sext i32 %848 to i64
  %850 = getelementptr inbounds i8, ptr %90, i64 %849
  %851 = load i8, ptr %850, align 1, !tbaa !9
  %852 = lshr i8 %851, 2
  %853 = zext i8 %852 to i32
  %854 = add nsw i32 %830, -2
  %855 = and i32 %833, %854
  %856 = sext i32 %855 to i64
  %857 = getelementptr inbounds i8, ptr %90, i64 %856
  %858 = load i8, ptr %857, align 1, !tbaa !9
  %859 = lshr i8 %858, 2
  %860 = zext i8 %859 to i32
  %861 = mul i32 %846, 30005491
  %862 = mul nuw i32 %853, 50004239
  %863 = mul i32 %860, 70004807
  %864 = add i32 %861, -404910215
  %865 = add i32 %864, %862
  %866 = add i32 %865, %863
  %867 = lshr i32 %866, 9
  %868 = lshr i32 %860, 5
  %869 = xor i32 %845, %853
  %870 = lshr i32 %869, 4
  %871 = or i32 %868, 67108858
  %872 = xor i32 %871, %870
  %873 = xor i32 %872, %867
  %874 = xor i32 %873, %866
  %875 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %876 = add nsw i32 %875, 1
  store i32 %876, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %877 = mul i32 %874, 987654323
  %878 = add i32 %877, %875
  %879 = tail call i32 @llvm.fshl.i32(i32 %878, i32 %878, i32 16)
  %880 = mul i32 %879, 123456791
  %881 = add i32 %880, %875
  %882 = sext i32 %875 to i64
  %883 = getelementptr inbounds i32, ptr %155, i64 %882
  store i32 %881, ptr %883, align 4, !tbaa !25
  %884 = load i32, ptr @pos, align 4, !tbaa !25
  %885 = add nsw i32 %884, -2
  %886 = load i32, ptr @buf, align 8, !tbaa !20
  %887 = add nsw i32 %886, -1
  %888 = and i32 %887, %885
  %889 = sext i32 %888 to i64
  %890 = getelementptr inbounds i8, ptr %90, i64 %889
  %891 = load i8, ptr %890, align 1, !tbaa !9
  %892 = zext i8 %891 to i32
  %893 = add nsw i32 %884, -1
  %894 = and i32 %887, %893
  %895 = sext i32 %894 to i64
  %896 = getelementptr inbounds i8, ptr %90, i64 %895
  %897 = load i8, ptr %896, align 1, !tbaa !9
  %898 = zext i8 %897 to i32
  %899 = add nuw nsw i32 %898, %892
  %900 = lshr i32 %899, 1
  %901 = sub nsw i32 %884, %1
  %902 = and i32 %887, %901
  %903 = sext i32 %902 to i64
  %904 = getelementptr inbounds i8, ptr %90, i64 %903
  %905 = load i8, ptr %904, align 1, !tbaa !9
  %906 = zext i8 %905 to i32
  %907 = sub nsw i32 %884, %205
  %908 = and i32 %887, %907
  %909 = sext i32 %908 to i64
  %910 = getelementptr inbounds i8, ptr %90, i64 %909
  %911 = load i8, ptr %910, align 1, !tbaa !9
  %912 = zext i8 %911 to i32
  %913 = add nuw nsw i32 %912, %906
  %914 = lshr i32 %913, 1
  %915 = sub nsw i32 %884, %95
  %916 = and i32 %887, %915
  %917 = sext i32 %916 to i64
  %918 = getelementptr inbounds i8, ptr %90, i64 %917
  %919 = load i8, ptr %918, align 1, !tbaa !9
  %920 = lshr i8 %919, 2
  %921 = zext i8 %920 to i32
  %922 = mul i32 %900, 30005491
  %923 = mul i32 %914, 50004239
  %924 = mul i32 %921, 70004807
  %925 = add i32 %922, -204907236
  %926 = add i32 %925, %923
  %927 = add i32 %926, %924
  %928 = lshr i32 %927, 9
  %929 = lshr i32 %899, 4
  %930 = lshr i32 %913, 5
  %931 = lshr i32 %921, 5
  %932 = xor i32 %929, %930
  %933 = xor i32 %932, %931
  %934 = xor i32 %933, %928
  %935 = xor i32 %934, %927
  %936 = xor i32 %935, 67108858
  %937 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %938 = add nsw i32 %937, 1
  store i32 %938, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %939 = mul i32 %936, 987654323
  %940 = add i32 %939, %937
  %941 = tail call i32 @llvm.fshl.i32(i32 %940, i32 %940, i32 16)
  %942 = mul i32 %941, 123456791
  %943 = add i32 %942, %937
  %944 = sext i32 %937 to i64
  %945 = getelementptr inbounds i32, ptr %155, i64 %944
  store i32 %943, ptr %945, align 4, !tbaa !25
  %946 = load i32, ptr @pos, align 4, !tbaa !25
  %947 = add nsw i32 %946, -2
  %948 = load i32, ptr @buf, align 8, !tbaa !20
  %949 = add nsw i32 %948, -1
  %950 = and i32 %949, %947
  %951 = sext i32 %950 to i64
  %952 = getelementptr inbounds i8, ptr %90, i64 %951
  %953 = load i8, ptr %952, align 1, !tbaa !9
  %954 = zext i8 %953 to i32
  %955 = add nsw i32 %946, -1
  %956 = and i32 %949, %955
  %957 = sext i32 %956 to i64
  %958 = getelementptr inbounds i8, ptr %90, i64 %957
  %959 = load i8, ptr %958, align 1, !tbaa !9
  %960 = zext i8 %959 to i32
  %961 = add nuw nsw i32 %960, %954
  %962 = lshr i32 %961, 2
  %963 = sub nsw i32 %946, %95
  %964 = and i32 %949, %963
  %965 = sext i32 %964 to i64
  %966 = getelementptr inbounds i8, ptr %90, i64 %965
  %967 = load i8, ptr %966, align 1, !tbaa !9
  %968 = zext i8 %967 to i32
  %969 = sub nsw i32 %946, %1
  %970 = and i32 %949, %969
  %971 = sext i32 %970 to i64
  %972 = getelementptr inbounds i8, ptr %90, i64 %971
  %973 = load i8, ptr %972, align 1, !tbaa !9
  %974 = zext i8 %973 to i32
  %975 = add nuw nsw i32 %974, %968
  %976 = lshr i32 %975, 2
  %977 = mul nuw i32 %962, 30005491
  %978 = mul i32 %976, 50004239
  %979 = add i32 %977, -74909064
  %980 = add i32 %979, %978
  %981 = lshr i32 %980, 9
  %982 = lshr i32 %961, 5
  %983 = lshr i32 %975, 6
  %984 = xor i32 %982, %983
  %985 = xor i32 %984, %981
  %986 = xor i32 %985, %980
  %987 = xor i32 %986, 67108869
  %988 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %989 = add nsw i32 %988, 1
  store i32 %989, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %990 = mul i32 %987, 987654323
  %991 = add i32 %990, %988
  %992 = tail call i32 @llvm.fshl.i32(i32 %991, i32 %991, i32 16)
  %993 = mul i32 %992, 123456791
  %994 = add i32 %993, %988
  %995 = sext i32 %988 to i64
  %996 = getelementptr inbounds i32, ptr %155, i64 %995
  store i32 %994, ptr %996, align 4, !tbaa !25
  %997 = load i32, ptr @pos, align 4, !tbaa !25
  %998 = add nsw i32 %997, -2
  %999 = load i32, ptr @buf, align 8, !tbaa !20
  %1000 = add nsw i32 %999, -1
  %1001 = and i32 %1000, %998
  %1002 = sext i32 %1001 to i64
  %1003 = getelementptr inbounds i8, ptr %90, i64 %1002
  %1004 = load i8, ptr %1003, align 1, !tbaa !9
  %1005 = zext i8 %1004 to i32
  %1006 = add nsw i32 %997, -1
  %1007 = and i32 %1000, %1006
  %1008 = sext i32 %1007 to i64
  %1009 = getelementptr inbounds i8, ptr %90, i64 %1008
  %1010 = load i8, ptr %1009, align 1, !tbaa !9
  %1011 = zext i8 %1010 to i32
  %1012 = add nuw nsw i32 %1011, %1005
  %1013 = lshr i32 %1012, 1
  %1014 = sub nsw i32 %997, %1
  %1015 = and i32 %1000, %1014
  %1016 = sext i32 %1015 to i64
  %1017 = getelementptr inbounds i8, ptr %90, i64 %1016
  %1018 = load i8, ptr %1017, align 1, !tbaa !9
  %1019 = zext i8 %1018 to i32
  %1020 = sub nsw i32 %997, %205
  %1021 = and i32 %1000, %1020
  %1022 = sext i32 %1021 to i64
  %1023 = getelementptr inbounds i8, ptr %90, i64 %1022
  %1024 = load i8, ptr %1023, align 1, !tbaa !9
  %1025 = zext i8 %1024 to i32
  %1026 = add nuw nsw i32 %1025, %1019
  %1027 = lshr i32 %1026, 1
  %1028 = mul i32 %1013, 30005491
  %1029 = mul i32 %1027, 50004239
  %1030 = add i32 %1028, 125093915
  %1031 = add i32 %1030, %1029
  %1032 = lshr i32 %1031, 9
  %1033 = lshr i32 %1012, 4
  %1034 = lshr i32 %1026, 5
  %1035 = xor i32 %1033, %1034
  %1036 = xor i32 %1035, %1032
  %1037 = xor i32 %1036, %1031
  %1038 = xor i32 %1037, 67108869
  %1039 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1040 = add nsw i32 %1039, 1
  store i32 %1040, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1041 = mul i32 %1038, 987654323
  %1042 = add i32 %1041, %1039
  %1043 = tail call i32 @llvm.fshl.i32(i32 %1042, i32 %1042, i32 16)
  %1044 = mul i32 %1043, 123456791
  %1045 = add i32 %1044, %1039
  %1046 = sext i32 %1039 to i64
  %1047 = getelementptr inbounds i32, ptr %155, i64 %1046
  store i32 %1045, ptr %1047, align 4, !tbaa !25
  %1048 = load i32, ptr @pos, align 4, !tbaa !25
  %1049 = add nsw i32 %1048, -2
  %1050 = load i32, ptr @buf, align 8, !tbaa !20
  %1051 = add nsw i32 %1050, -1
  %1052 = and i32 %1051, %1049
  %1053 = sext i32 %1052 to i64
  %1054 = getelementptr inbounds i8, ptr %90, i64 %1053
  %1055 = load i8, ptr %1054, align 1, !tbaa !9
  %1056 = zext i8 %1055 to i32
  %1057 = add nsw i32 %1048, -1
  %1058 = and i32 %1051, %1057
  %1059 = sext i32 %1058 to i64
  %1060 = getelementptr inbounds i8, ptr %90, i64 %1059
  %1061 = load i8, ptr %1060, align 1, !tbaa !9
  %1062 = zext i8 %1061 to i32
  %1063 = add nuw nsw i32 %1062, %1056
  %1064 = lshr i32 %1063, 1
  %1065 = sub nsw i32 %1048, %95
  %1066 = and i32 %1051, %1065
  %1067 = sext i32 %1066 to i64
  %1068 = getelementptr inbounds i8, ptr %90, i64 %1067
  %1069 = load i8, ptr %1068, align 1, !tbaa !9
  %1070 = zext i8 %1069 to i32
  %1071 = sub nsw i32 %1048, %393
  %1072 = and i32 %1051, %1071
  %1073 = sext i32 %1072 to i64
  %1074 = getelementptr inbounds i8, ptr %90, i64 %1073
  %1075 = load i8, ptr %1074, align 1, !tbaa !9
  %1076 = zext i8 %1075 to i32
  %1077 = add nuw nsw i32 %1076, %1070
  %1078 = lshr i32 %1077, 1
  %1079 = mul i32 %1064, 30005491
  %1080 = mul i32 %1078, 50004239
  %1081 = add i32 %1079, 325096894
  %1082 = add i32 %1081, %1080
  %1083 = lshr i32 %1082, 9
  %1084 = lshr i32 %1063, 4
  %1085 = lshr i32 %1077, 5
  %1086 = xor i32 %1084, %1085
  %1087 = xor i32 %1086, %1083
  %1088 = xor i32 %1087, %1082
  %1089 = xor i32 %1088, 67108870
  %1090 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1091 = add nsw i32 %1090, 1
  store i32 %1091, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1092 = mul i32 %1089, 987654323
  %1093 = add i32 %1092, %1090
  %1094 = tail call i32 @llvm.fshl.i32(i32 %1093, i32 %1093, i32 16)
  %1095 = mul i32 %1094, 123456791
  %1096 = add i32 %1095, %1090
  %1097 = sext i32 %1090 to i64
  %1098 = getelementptr inbounds i32, ptr %155, i64 %1097
  store i32 %1096, ptr %1098, align 4, !tbaa !25
  %1099 = load i32, ptr @pos, align 4, !tbaa !25
  %1100 = add nsw i32 %1099, -2
  %1101 = load i32, ptr @buf, align 8, !tbaa !20
  %1102 = add nsw i32 %1101, -1
  %1103 = and i32 %1102, %1100
  %1104 = sext i32 %1103 to i64
  %1105 = getelementptr inbounds i8, ptr %90, i64 %1104
  %1106 = load i8, ptr %1105, align 1, !tbaa !9
  %1107 = zext i8 %1106 to i32
  %1108 = add nsw i32 %1099, -1
  %1109 = and i32 %1102, %1108
  %1110 = sext i32 %1109 to i64
  %1111 = getelementptr inbounds i8, ptr %90, i64 %1110
  %1112 = load i8, ptr %1111, align 1, !tbaa !9
  %1113 = zext i8 %1112 to i32
  %1114 = add nuw nsw i32 %1113, %1107
  %1115 = lshr i32 %1114, 1
  %1116 = sub nsw i32 %1099, %110
  %1117 = and i32 %1102, %1116
  %1118 = sext i32 %1117 to i64
  %1119 = getelementptr inbounds i8, ptr %90, i64 %1118
  %1120 = load i8, ptr %1119, align 1, !tbaa !9
  %1121 = zext i8 %1120 to i32
  %1122 = sub nsw i32 %1099, %355
  %1123 = and i32 %1102, %1122
  %1124 = sext i32 %1123 to i64
  %1125 = getelementptr inbounds i8, ptr %90, i64 %1124
  %1126 = load i8, ptr %1125, align 1, !tbaa !9
  %1127 = zext i8 %1126 to i32
  %1128 = add nuw nsw i32 %1127, %1121
  %1129 = lshr i32 %1128, 1
  %1130 = mul i32 %1115, 30005491
  %1131 = mul i32 %1129, 50004239
  %1132 = add i32 %1130, 525099873
  %1133 = add i32 %1132, %1131
  %1134 = lshr i32 %1133, 9
  %1135 = lshr i32 %1114, 4
  %1136 = lshr i32 %1128, 5
  %1137 = xor i32 %1135, %1136
  %1138 = xor i32 %1137, %1134
  %1139 = xor i32 %1138, %1133
  %1140 = xor i32 %1139, 67108870
  %1141 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1142 = add nsw i32 %1141, 1
  store i32 %1142, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1143 = mul i32 %1140, 987654323
  %1144 = add i32 %1143, %1141
  %1145 = tail call i32 @llvm.fshl.i32(i32 %1144, i32 %1144, i32 16)
  %1146 = mul i32 %1145, 123456791
  %1147 = add i32 %1146, %1141
  %1148 = sext i32 %1141 to i64
  %1149 = getelementptr inbounds i32, ptr %155, i64 %1148
  store i32 %1147, ptr %1149, align 4, !tbaa !25
  %1150 = load i32, ptr @pos, align 4, !tbaa !25
  %1151 = sub nsw i32 %1150, %1
  %1152 = load i32, ptr @buf, align 8, !tbaa !20
  %1153 = add nsw i32 %1152, -1
  %1154 = and i32 %1153, %1151
  %1155 = sext i32 %1154 to i64
  %1156 = getelementptr inbounds i8, ptr %90, i64 %1155
  %1157 = load i8, ptr %1156, align 1, !tbaa !9
  %1158 = zext i8 %1157 to i32
  %1159 = sub nsw i32 %1150, %205
  %1160 = and i32 %1153, %1159
  %1161 = sext i32 %1160 to i64
  %1162 = getelementptr inbounds i8, ptr %90, i64 %1161
  %1163 = load i8, ptr %1162, align 1, !tbaa !9
  %1164 = zext i8 %1163 to i32
  %1165 = add nuw nsw i32 %1164, %1158
  %1166 = lshr i32 %1165, 1
  %1167 = sub nsw i32 %1150, %95
  %1168 = and i32 %1153, %1167
  %1169 = sext i32 %1168 to i64
  %1170 = getelementptr inbounds i8, ptr %90, i64 %1169
  %1171 = load i8, ptr %1170, align 1, !tbaa !9
  %1172 = zext i8 %1171 to i32
  %1173 = sub nsw i32 %1150, %355
  %1174 = and i32 %1153, %1173
  %1175 = sext i32 %1174 to i64
  %1176 = getelementptr inbounds i8, ptr %90, i64 %1175
  %1177 = load i8, ptr %1176, align 1, !tbaa !9
  %1178 = zext i8 %1177 to i32
  %1179 = add nuw nsw i32 %1178, %1172
  %1180 = lshr i32 %1179, 1
  %1181 = mul i32 %1166, 30005491
  %1182 = mul i32 %1180, 50004239
  %1183 = add i32 %1181, 725102852
  %1184 = add i32 %1183, %1182
  %1185 = lshr i32 %1184, 9
  %1186 = lshr i32 %1165, 4
  %1187 = lshr i32 %1179, 5
  %1188 = xor i32 %1186, %1187
  %1189 = xor i32 %1188, %1185
  %1190 = xor i32 %1189, %1184
  %1191 = xor i32 %1190, 67108870
  %1192 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1193 = add nsw i32 %1192, 1
  store i32 %1193, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1194 = mul i32 %1191, 987654323
  %1195 = add i32 %1194, %1192
  %1196 = tail call i32 @llvm.fshl.i32(i32 %1195, i32 %1195, i32 16)
  %1197 = mul i32 %1196, 123456791
  %1198 = add i32 %1197, %1192
  %1199 = sext i32 %1192 to i64
  %1200 = getelementptr inbounds i32, ptr %155, i64 %1199
  store i32 %1198, ptr %1200, align 4, !tbaa !25
  %1201 = load i32, ptr @pos, align 4, !tbaa !25
  %1202 = sub nsw i32 %1201, %95
  %1203 = load i32, ptr @buf, align 8, !tbaa !20
  %1204 = add nsw i32 %1203, -1
  %1205 = and i32 %1204, %1202
  %1206 = sext i32 %1205 to i64
  %1207 = getelementptr inbounds i8, ptr %90, i64 %1206
  %1208 = load i8, ptr %1207, align 1, !tbaa !9
  %1209 = zext i8 %1208 to i32
  %1210 = sub nsw i32 %1201, %1
  %1211 = and i32 %1204, %1210
  %1212 = sext i32 %1211 to i64
  %1213 = getelementptr inbounds i8, ptr %90, i64 %1212
  %1214 = load i8, ptr %1213, align 1, !tbaa !9
  %1215 = zext i8 %1214 to i32
  %1216 = add nuw nsw i32 %1215, %1209
  %1217 = lshr i32 %1216, 1
  %1218 = sub nsw i32 %1201, %110
  %1219 = and i32 %1204, %1218
  %1220 = sext i32 %1219 to i64
  %1221 = getelementptr inbounds i8, ptr %90, i64 %1220
  %1222 = load i8, ptr %1221, align 1, !tbaa !9
  %1223 = zext i8 %1222 to i32
  %1224 = add nuw nsw i32 %1223, %1215
  %1225 = lshr i32 %1224, 1
  %1226 = mul i32 %1217, 30005491
  %1227 = mul i32 %1225, 50004239
  %1228 = add i32 %1226, 925105831
  %1229 = add i32 %1228, %1227
  %1230 = lshr i32 %1229, 9
  %1231 = lshr i32 %1216, 4
  %1232 = lshr i32 %1224, 5
  %1233 = xor i32 %1231, %1232
  %1234 = xor i32 %1233, %1230
  %1235 = xor i32 %1234, %1229
  %1236 = xor i32 %1235, 67108870
  %1237 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1238 = add nsw i32 %1237, 1
  store i32 %1238, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1239 = mul i32 %1236, 987654323
  %1240 = add i32 %1239, %1237
  %1241 = tail call i32 @llvm.fshl.i32(i32 %1240, i32 %1240, i32 16)
  %1242 = mul i32 %1241, 123456791
  %1243 = add i32 %1242, %1237
  %1244 = sext i32 %1237 to i64
  %1245 = getelementptr inbounds i32, ptr %155, i64 %1244
  store i32 %1243, ptr %1245, align 4, !tbaa !25
  %1246 = load i32, ptr @pos, align 4, !tbaa !25
  %1247 = add nsw i32 %1246, -1
  %1248 = load i32, ptr @buf, align 8, !tbaa !20
  %1249 = add nsw i32 %1248, -1
  %1250 = and i32 %1249, %1247
  %1251 = sext i32 %1250 to i64
  %1252 = getelementptr inbounds i8, ptr %90, i64 %1251
  %1253 = load i8, ptr %1252, align 1, !tbaa !9
  %1254 = zext i8 %1253 to i32
  %1255 = sub nsw i32 %1246, %95
  %1256 = and i32 %1249, %1255
  %1257 = sext i32 %1256 to i64
  %1258 = getelementptr inbounds i8, ptr %90, i64 %1257
  %1259 = load i8, ptr %1258, align 1, !tbaa !9
  %1260 = zext i8 %1259 to i32
  %1261 = add nuw nsw i32 %1260, %1254
  %1262 = lshr i32 %1261, 1
  %1263 = sub nsw i32 %1246, %1
  %1264 = and i32 %1249, %1263
  %1265 = sext i32 %1264 to i64
  %1266 = getelementptr inbounds i8, ptr %90, i64 %1265
  %1267 = load i8, ptr %1266, align 1, !tbaa !9
  %1268 = zext i8 %1267 to i32
  %1269 = sub nsw i32 %1246, %205
  %1270 = and i32 %1249, %1269
  %1271 = sext i32 %1270 to i64
  %1272 = getelementptr inbounds i8, ptr %90, i64 %1271
  %1273 = load i8, ptr %1272, align 1, !tbaa !9
  %1274 = zext i8 %1273 to i32
  %1275 = add nuw nsw i32 %1274, %1268
  %1276 = lshr i32 %1275, 1
  %1277 = mul i32 %1262, 30005491
  %1278 = mul i32 %1276, 50004239
  %1279 = add i32 %1277, 1125108810
  %1280 = add i32 %1279, %1278
  %1281 = lshr i32 %1280, 9
  %1282 = lshr i32 %1261, 4
  %1283 = lshr i32 %1275, 5
  %1284 = xor i32 %1282, %1283
  %1285 = xor i32 %1284, %1281
  %1286 = xor i32 %1285, %1280
  %1287 = xor i32 %1286, 67108871
  %1288 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1289 = add nsw i32 %1288, 1
  store i32 %1289, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1290 = mul i32 %1287, 987654323
  %1291 = add i32 %1290, %1288
  %1292 = tail call i32 @llvm.fshl.i32(i32 %1291, i32 %1291, i32 16)
  %1293 = mul i32 %1292, 123456791
  %1294 = add i32 %1293, %1288
  %1295 = sext i32 %1288 to i64
  %1296 = getelementptr inbounds i32, ptr %155, i64 %1295
  store i32 %1294, ptr %1296, align 4, !tbaa !25
  %1297 = load i32, ptr @pos, align 4, !tbaa !25
  %1298 = add nsw i32 %1297, -1
  %1299 = load i32, ptr @buf, align 8, !tbaa !20
  %1300 = add nsw i32 %1299, -1
  %1301 = and i32 %1300, %1298
  %1302 = sext i32 %1301 to i64
  %1303 = getelementptr inbounds i8, ptr %90, i64 %1302
  %1304 = load i8, ptr %1303, align 1, !tbaa !9
  %1305 = zext i8 %1304 to i32
  %1306 = sub nsw i32 %1297, %95
  %1307 = and i32 %1300, %1306
  %1308 = sext i32 %1307 to i64
  %1309 = getelementptr inbounds i8, ptr %90, i64 %1308
  %1310 = load i8, ptr %1309, align 1, !tbaa !9
  %1311 = zext i8 %1310 to i32
  %1312 = add nuw nsw i32 %1311, %1305
  %1313 = lshr i32 %1312, 2
  %1314 = sub nsw i32 %1297, %1
  %1315 = and i32 %1300, %1314
  %1316 = sext i32 %1315 to i64
  %1317 = getelementptr inbounds i8, ptr %90, i64 %1316
  %1318 = load i8, ptr %1317, align 1, !tbaa !9
  %1319 = zext i8 %1318 to i32
  %1320 = sub nsw i32 %1297, %110
  %1321 = and i32 %1300, %1320
  %1322 = sext i32 %1321 to i64
  %1323 = getelementptr inbounds i8, ptr %90, i64 %1322
  %1324 = load i8, ptr %1323, align 1, !tbaa !9
  %1325 = zext i8 %1324 to i32
  %1326 = add nuw nsw i32 %1325, %1319
  %1327 = lshr i32 %1326, 2
  %1328 = mul nuw i32 %1313, 30005491
  %1329 = mul i32 %1327, 50004239
  %1330 = add i32 %1328, 1325111789
  %1331 = add i32 %1330, %1329
  %1332 = lshr i32 %1331, 9
  %1333 = lshr i32 %1312, 5
  %1334 = lshr i32 %1326, 6
  %1335 = xor i32 %1333, %1334
  %1336 = xor i32 %1335, %1332
  %1337 = xor i32 %1336, %1331
  %1338 = xor i32 %1337, 67108871
  %1339 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1340 = add nsw i32 %1339, 1
  store i32 %1340, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1341 = mul i32 %1338, 987654323
  %1342 = add i32 %1341, %1339
  %1343 = tail call i32 @llvm.fshl.i32(i32 %1342, i32 %1342, i32 16)
  %1344 = mul i32 %1343, 123456791
  %1345 = add i32 %1344, %1339
  %1346 = sext i32 %1339 to i64
  %1347 = getelementptr inbounds i32, ptr %155, i64 %1346
  store i32 %1345, ptr %1347, align 4, !tbaa !25
  %1348 = load i32, ptr @pos, align 4, !tbaa !25
  %1349 = add nsw i32 %1348, -1
  %1350 = load i32, ptr @buf, align 8, !tbaa !20
  %1351 = add nsw i32 %1350, -1
  %1352 = and i32 %1351, %1349
  %1353 = sext i32 %1352 to i64
  %1354 = getelementptr inbounds i8, ptr %90, i64 %1353
  %1355 = load i8, ptr %1354, align 1, !tbaa !9
  %1356 = zext i8 %1355 to i32
  %1357 = sub nsw i32 %1348, %95
  %1358 = and i32 %1351, %1357
  %1359 = sext i32 %1358 to i64
  %1360 = getelementptr inbounds i8, ptr %90, i64 %1359
  %1361 = load i8, ptr %1360, align 1, !tbaa !9
  %1362 = zext i8 %1361 to i32
  %1363 = sub nsw i32 %1356, %1362
  %1364 = ashr i32 %1363, 1
  %1365 = sub nsw i32 %1348, %1
  %1366 = and i32 %1351, %1365
  %1367 = sext i32 %1366 to i64
  %1368 = getelementptr inbounds i8, ptr %90, i64 %1367
  %1369 = load i8, ptr %1368, align 1, !tbaa !9
  %1370 = zext i8 %1369 to i32
  %1371 = add nsw i32 %1364, %1370
  %1372 = ashr i32 %1371, 2
  %1373 = mul i32 %1372, 30005491
  %1374 = add i32 %1373, 1475110529
  %1375 = lshr i32 %1374, 9
  %1376 = lshr i32 %1372, 3
  %1377 = xor i32 %1376, %1375
  %1378 = xor i32 %1377, %1374
  %1379 = xor i32 %1378, 201326584
  %1380 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1381 = add nsw i32 %1380, 1
  store i32 %1381, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1382 = mul i32 %1379, 987654323
  %1383 = add i32 %1382, %1380
  %1384 = tail call i32 @llvm.fshl.i32(i32 %1383, i32 %1383, i32 16)
  %1385 = mul i32 %1384, 123456791
  %1386 = add i32 %1385, %1380
  %1387 = sext i32 %1380 to i64
  %1388 = getelementptr inbounds i32, ptr %155, i64 %1387
  store i32 %1386, ptr %1388, align 4, !tbaa !25
  %1389 = load i32, ptr @pos, align 4, !tbaa !25
  %1390 = sub nsw i32 %1389, %95
  %1391 = load i32, ptr @buf, align 8, !tbaa !20
  %1392 = add nsw i32 %1391, -1
  %1393 = and i32 %1392, %1390
  %1394 = sext i32 %1393 to i64
  %1395 = getelementptr inbounds i8, ptr %90, i64 %1394
  %1396 = load i8, ptr %1395, align 1, !tbaa !9
  %1397 = zext i8 %1396 to i32
  %1398 = sub nsw i32 %1389, %1
  %1399 = and i32 %1392, %1398
  %1400 = sext i32 %1399 to i64
  %1401 = getelementptr inbounds i8, ptr %90, i64 %1400
  %1402 = load i8, ptr %1401, align 1, !tbaa !9
  %1403 = zext i8 %1402 to i32
  %1404 = sub nsw i32 %1397, %1403
  %1405 = ashr i32 %1404, 1
  %1406 = add nsw i32 %1389, -1
  %1407 = and i32 %1392, %1406
  %1408 = sext i32 %1407 to i64
  %1409 = getelementptr inbounds i8, ptr %90, i64 %1408
  %1410 = load i8, ptr %1409, align 1, !tbaa !9
  %1411 = zext i8 %1410 to i32
  %1412 = add nsw i32 %1405, %1411
  %1413 = ashr i32 %1412, 2
  %1414 = mul i32 %1413, 30005491
  %1415 = add i32 %1414, 1675113508
  %1416 = lshr i32 %1415, 9
  %1417 = lshr i32 %1413, 3
  %1418 = xor i32 %1417, %1416
  %1419 = xor i32 %1418, %1415
  %1420 = xor i32 %1419, 201326584
  %1421 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1422 = add nsw i32 %1421, 1
  store i32 %1422, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1423 = mul i32 %1420, 987654323
  %1424 = add i32 %1423, %1421
  %1425 = tail call i32 @llvm.fshl.i32(i32 %1424, i32 %1424, i32 16)
  %1426 = mul i32 %1425, 123456791
  %1427 = add i32 %1426, %1421
  %1428 = sext i32 %1421 to i64
  %1429 = getelementptr inbounds i32, ptr %155, i64 %1428
  store i32 %1427, ptr %1429, align 4, !tbaa !25
  %1430 = load i32, ptr @pos, align 4, !tbaa !25
  %1431 = add nsw i32 %1430, -1
  %1432 = load i32, ptr @buf, align 8, !tbaa !20
  %1433 = add nsw i32 %1432, -1
  %1434 = and i32 %1433, %1431
  %1435 = sext i32 %1434 to i64
  %1436 = getelementptr inbounds i8, ptr %90, i64 %1435
  %1437 = load i8, ptr %1436, align 1, !tbaa !9
  %1438 = zext i8 %1437 to i32
  %1439 = sub nsw i32 %1430, %95
  %1440 = and i32 %1433, %1439
  %1441 = sext i32 %1440 to i64
  %1442 = getelementptr inbounds i8, ptr %90, i64 %1441
  %1443 = load i8, ptr %1442, align 1, !tbaa !9
  %1444 = zext i8 %1443 to i32
  %1445 = sub nsw i32 %1444, %1438
  %1446 = sub nsw i32 %1430, %1
  %1447 = and i32 %1433, %1446
  %1448 = sext i32 %1447 to i64
  %1449 = getelementptr inbounds i8, ptr %90, i64 %1448
  %1450 = load i8, ptr %1449, align 1, !tbaa !9
  %1451 = zext i8 %1450 to i32
  %1452 = add nsw i32 %1445, %1451
  %1453 = ashr i32 %1452, 2
  %1454 = mul i32 %1453, 30005491
  %1455 = add i32 %1454, 1875116487
  %1456 = lshr i32 %1455, 9
  %1457 = lshr i32 %1453, 3
  %1458 = xor i32 %1457, %1456
  %1459 = xor i32 %1458, %1455
  %1460 = xor i32 %1459, 201326583
  %1461 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1462 = add nsw i32 %1461, 1
  store i32 %1462, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1463 = mul i32 %1460, 987654323
  %1464 = add i32 %1463, %1461
  %1465 = tail call i32 @llvm.fshl.i32(i32 %1464, i32 %1464, i32 16)
  %1466 = mul i32 %1465, 123456791
  %1467 = add i32 %1466, %1461
  %1468 = sext i32 %1461 to i64
  %1469 = getelementptr inbounds i32, ptr %155, i64 %1468
  store i32 %1467, ptr %1469, align 4, !tbaa !25
  %1470 = load i32, ptr @pos, align 4, !tbaa !25
  %1471 = add nsw i32 %1470, -1
  %1472 = load i32, ptr @buf, align 8, !tbaa !20
  %1473 = add nsw i32 %1472, -1
  %1474 = and i32 %1473, %1471
  %1475 = sext i32 %1474 to i64
  %1476 = getelementptr inbounds i8, ptr %90, i64 %1475
  %1477 = load i8, ptr %1476, align 1, !tbaa !9
  %1478 = zext i8 %1477 to i32
  %1479 = sub nsw i32 %1470, %1
  %1480 = and i32 %1473, %1479
  %1481 = sext i32 %1480 to i64
  %1482 = getelementptr inbounds i8, ptr %90, i64 %1481
  %1483 = load i8, ptr %1482, align 1, !tbaa !9
  %1484 = zext i8 %1483 to i32
  %1485 = add nuw nsw i32 %1484, %1478
  %1486 = shl nuw nsw i32 %1485, 7
  %1487 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm1, align 8, !tbaa !74
  %1488 = add i32 %1487, 65280
  %1489 = and i32 %1488, 65280
  %1490 = and i32 %1489, %1486
  store i32 %1490, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %1491 = load i8, ptr %1476, align 1, !tbaa !9
  %1492 = zext i8 %1491 to i32
  %1493 = load i8, ptr %1482, align 1, !tbaa !9
  %1494 = zext i8 %1493 to i32
  %1495 = add nuw nsw i32 %1494, %1492
  %1496 = sub nsw i32 %1470, %110
  %1497 = and i32 %1473, %1496
  %1498 = sext i32 %1497 to i64
  %1499 = getelementptr inbounds i8, ptr %90, i64 %1498
  %1500 = load i8, ptr %1499, align 1, !tbaa !9
  %1501 = zext i8 %1500 to i32
  %1502 = sub nsw i32 %1495, %1501
  %1503 = shl nsw i32 %1502, 7
  %1504 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm2, align 8, !tbaa !74
  %1505 = and i32 %1504, -256
  %1506 = add i32 %1505, -256
  %1507 = and i32 %1506, %1503
  store i32 %1507, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %1508 = load i8, ptr %1476, align 1, !tbaa !9
  %1509 = zext i8 %1508 to i32
  %1510 = add nsw i32 %1470, -2
  %1511 = and i32 %1473, %1510
  %1512 = sext i32 %1511 to i64
  %1513 = getelementptr inbounds i8, ptr %90, i64 %1512
  %1514 = load i8, ptr %1513, align 1, !tbaa !9
  %1515 = zext i8 %1514 to i32
  %1516 = shl nuw nsw i32 %1509, 8
  %1517 = shl nuw nsw i32 %1515, 7
  %1518 = sub nsw i32 %1516, %1517
  %1519 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm3, align 8, !tbaa !74
  %1520 = and i32 %1519, -256
  %1521 = add i32 %1520, -256
  %1522 = and i32 %1521, %1518
  store i32 %1522, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm3, i64 0, i32 1), align 8, !tbaa !112
  %1523 = load i8, ptr %1482, align 1, !tbaa !9
  %1524 = zext i8 %1523 to i32
  %1525 = sub nsw i32 %1470, %205
  %1526 = and i32 %1473, %1525
  %1527 = sext i32 %1526 to i64
  %1528 = getelementptr inbounds i8, ptr %90, i64 %1527
  %1529 = load i8, ptr %1528, align 1, !tbaa !9
  %1530 = zext i8 %1529 to i32
  %1531 = shl nuw nsw i32 %1524, 8
  %1532 = shl nuw nsw i32 %1530, 7
  %1533 = sub nsw i32 %1531, %1532
  %1534 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm4, align 8, !tbaa !74
  %1535 = and i32 %1534, -256
  %1536 = add i32 %1535, -256
  %1537 = and i32 %1536, %1533
  store i32 %1537, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm4, i64 0, i32 1), align 8, !tbaa !112
  %1538 = load i8, ptr %1476, align 1, !tbaa !9
  %1539 = zext i8 %1538 to i32
  %1540 = load i8, ptr %1482, align 1, !tbaa !9
  %1541 = zext i8 %1540 to i32
  %1542 = add nuw nsw i32 %1541, %1539
  %1543 = sub nsw i32 %1470, %95
  %1544 = and i32 %1473, %1543
  %1545 = sext i32 %1544 to i64
  %1546 = getelementptr inbounds i8, ptr %90, i64 %1545
  %1547 = load i8, ptr %1546, align 1, !tbaa !9
  %1548 = zext i8 %1547 to i32
  %1549 = sub nsw i32 %1542, %1548
  %1550 = shl nsw i32 %1549, 7
  %1551 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm5, align 8, !tbaa !74
  %1552 = and i32 %1551, -256
  %1553 = add i32 %1552, -256
  %1554 = and i32 %1553, %1550
  store i32 %1554, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm5, i64 0, i32 1), align 8, !tbaa !112
  %1555 = lshr i32 %117, 3
  %1556 = shl nuw nsw i32 %134, 1
  %1557 = and i32 %1556, 384
  %1558 = or i32 %1557, %1555
  %1559 = shl nuw nsw i32 %1558, 8
  %1560 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm6, align 8, !tbaa !74
  %1561 = add i32 %1560, 2147483392
  %1562 = and i32 %1561, %1559
  store i32 %1562, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm6, i64 0, i32 1), align 8, !tbaa !112
  br label %1579

1563:                                             ; preds = %8
  %1564 = landingpad { ptr, i32 }
          cleanup
  br label %1741

1565:                                             ; preds = %17
  %1566 = landingpad { ptr, i32 }
          cleanup
  br label %1741

1567:                                             ; preds = %26
  %1568 = landingpad { ptr, i32 }
          cleanup
  br label %1741

1569:                                             ; preds = %35
  %1570 = landingpad { ptr, i32 }
          cleanup
  br label %1741

1571:                                             ; preds = %44
  %1572 = landingpad { ptr, i32 }
          cleanup
  br label %1741

1573:                                             ; preds = %53
  %1574 = landingpad { ptr, i32 }
          cleanup
  br label %1741

1575:                                             ; preds = %62
  %1576 = landingpad { ptr, i32 }
          cleanup
  br label %1741

1577:                                             ; preds = %71
  %1578 = landingpad { ptr, i32 }
          cleanup
  br label %1741

1579:                                             ; preds = %79, %84
  %1580 = phi i32 [ %83, %79 ], [ %1537, %84 ]
  %1581 = phi i32 [ %82, %79 ], [ %1522, %84 ]
  %1582 = phi i32 [ %81, %79 ], [ %1507, %84 ]
  %1583 = phi i32 [ %80, %79 ], [ %1490, %84 ]
  %1584 = load i32, ptr @y, align 4, !tbaa !25
  %1585 = shl i32 %1584, 16
  %1586 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %1587 = load i16, ptr %1586, align 2, !tbaa !31
  %1588 = zext i16 %1587 to i32
  %1589 = or i32 %1585, 64
  %1590 = sub i32 %1589, %1588
  %1591 = lshr i32 %1590, 7
  %1592 = trunc i32 %1591 to i16
  %1593 = add i16 %1587, %1592
  store i16 %1593, ptr %1586, align 2, !tbaa !31
  %1594 = load i32, ptr @c0, align 4, !tbaa !25
  %1595 = add nsw i32 %1594, %1583
  %1596 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm1, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1597 = sext i32 %1595 to i64
  %1598 = getelementptr inbounds i16, ptr %1596, i64 %1597
  store ptr %1598, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %1599 = load i16, ptr %1598, align 2, !tbaa !31
  %1600 = lshr i16 %1599, 4
  %1601 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %1602 = zext i16 %1600 to i64
  %1603 = getelementptr inbounds i16, ptr %1601, i64 %1602
  %1604 = load i16, ptr %1603, align 2, !tbaa !31
  %1605 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %1606 = load i32, ptr %1605, align 8, !tbaa !64
  %1607 = add nsw i32 %1606, 1
  %1608 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %1609 = load ptr, ptr %1608, align 8, !tbaa !59
  %1610 = sext i32 %1606 to i64
  %1611 = getelementptr inbounds i16, ptr %1609, i64 %1610
  store i16 %1604, ptr %1611, align 2, !tbaa !31
  %1612 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm2, i64 0, i32 2), align 8, !tbaa !114
  %1613 = load i16, ptr %1612, align 2, !tbaa !31
  %1614 = zext i16 %1613 to i32
  %1615 = sub i32 %1589, %1614
  %1616 = lshr i32 %1615, 7
  %1617 = trunc i32 %1616 to i16
  %1618 = add i16 %1613, %1617
  store i16 %1618, ptr %1612, align 2, !tbaa !31
  %1619 = add nsw i32 %1582, %1594
  %1620 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm2, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1621 = sext i32 %1619 to i64
  %1622 = getelementptr inbounds i16, ptr %1620, i64 %1621
  store ptr %1622, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm2, i64 0, i32 2), align 8, !tbaa !114
  %1623 = load i16, ptr %1622, align 2, !tbaa !31
  %1624 = lshr i16 %1623, 4
  %1625 = zext i16 %1624 to i64
  %1626 = getelementptr inbounds i16, ptr %1601, i64 %1625
  %1627 = load i16, ptr %1626, align 2, !tbaa !31
  %1628 = add nsw i32 %1606, 2
  %1629 = sext i32 %1607 to i64
  %1630 = getelementptr inbounds i16, ptr %1609, i64 %1629
  store i16 %1627, ptr %1630, align 2, !tbaa !31
  %1631 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm3, i64 0, i32 2), align 8, !tbaa !114
  %1632 = load i16, ptr %1631, align 2, !tbaa !31
  %1633 = zext i16 %1632 to i32
  %1634 = sub i32 %1589, %1633
  %1635 = lshr i32 %1634, 7
  %1636 = trunc i32 %1635 to i16
  %1637 = add i16 %1632, %1636
  store i16 %1637, ptr %1631, align 2, !tbaa !31
  %1638 = add nsw i32 %1581, %1594
  %1639 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm3, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1640 = sext i32 %1638 to i64
  %1641 = getelementptr inbounds i16, ptr %1639, i64 %1640
  store ptr %1641, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm3, i64 0, i32 2), align 8, !tbaa !114
  %1642 = load i16, ptr %1641, align 2, !tbaa !31
  %1643 = lshr i16 %1642, 4
  %1644 = zext i16 %1643 to i64
  %1645 = getelementptr inbounds i16, ptr %1601, i64 %1644
  %1646 = load i16, ptr %1645, align 2, !tbaa !31
  %1647 = add nsw i32 %1606, 3
  %1648 = sext i32 %1628 to i64
  %1649 = getelementptr inbounds i16, ptr %1609, i64 %1648
  store i16 %1646, ptr %1649, align 2, !tbaa !31
  %1650 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm4, i64 0, i32 2), align 8, !tbaa !114
  %1651 = load i16, ptr %1650, align 2, !tbaa !31
  %1652 = zext i16 %1651 to i32
  %1653 = sub i32 %1589, %1652
  %1654 = lshr i32 %1653, 7
  %1655 = trunc i32 %1654 to i16
  %1656 = add i16 %1651, %1655
  store i16 %1656, ptr %1650, align 2, !tbaa !31
  %1657 = add nsw i32 %1580, %1594
  %1658 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm4, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1659 = sext i32 %1657 to i64
  %1660 = getelementptr inbounds i16, ptr %1658, i64 %1659
  store ptr %1660, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm4, i64 0, i32 2), align 8, !tbaa !114
  %1661 = load i16, ptr %1660, align 2, !tbaa !31
  %1662 = lshr i16 %1661, 4
  %1663 = zext i16 %1662 to i64
  %1664 = getelementptr inbounds i16, ptr %1601, i64 %1663
  %1665 = load i16, ptr %1664, align 2, !tbaa !31
  %1666 = add nsw i32 %1606, 4
  %1667 = sext i32 %1647 to i64
  %1668 = getelementptr inbounds i16, ptr %1609, i64 %1667
  store i16 %1665, ptr %1668, align 2, !tbaa !31
  %1669 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm5, i64 0, i32 2), align 8, !tbaa !114
  %1670 = load i16, ptr %1669, align 2, !tbaa !31
  %1671 = zext i16 %1670 to i32
  %1672 = sub i32 %1589, %1671
  %1673 = lshr i32 %1672, 7
  %1674 = trunc i32 %1673 to i16
  %1675 = add i16 %1670, %1674
  store i16 %1675, ptr %1669, align 2, !tbaa !31
  %1676 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm5, i64 0, i32 1), align 8, !tbaa !112
  %1677 = add nsw i32 %1676, %1594
  %1678 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm5, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1679 = sext i32 %1677 to i64
  %1680 = getelementptr inbounds i16, ptr %1678, i64 %1679
  store ptr %1680, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm5, i64 0, i32 2), align 8, !tbaa !114
  %1681 = load i16, ptr %1680, align 2, !tbaa !31
  %1682 = lshr i16 %1681, 4
  %1683 = zext i16 %1682 to i64
  %1684 = getelementptr inbounds i16, ptr %1601, i64 %1683
  %1685 = load i16, ptr %1684, align 2, !tbaa !31
  %1686 = add nsw i32 %1606, 5
  %1687 = sext i32 %1666 to i64
  %1688 = getelementptr inbounds i16, ptr %1609, i64 %1687
  store i16 %1685, ptr %1688, align 2, !tbaa !31
  %1689 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm6, i64 0, i32 2), align 8, !tbaa !114
  %1690 = load i16, ptr %1689, align 2, !tbaa !31
  %1691 = zext i16 %1690 to i32
  %1692 = sub i32 %1589, %1691
  %1693 = lshr i32 %1692, 7
  %1694 = trunc i32 %1693 to i16
  %1695 = add i16 %1690, %1694
  store i16 %1695, ptr %1689, align 2, !tbaa !31
  %1696 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm6, i64 0, i32 1), align 8, !tbaa !112
  %1697 = add nsw i32 %1696, %1594
  %1698 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm6, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1699 = sext i32 %1697 to i64
  %1700 = getelementptr inbounds i16, ptr %1698, i64 %1699
  store ptr %1700, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm6, i64 0, i32 2), align 8, !tbaa !114
  %1701 = load i16, ptr %1700, align 2, !tbaa !31
  %1702 = lshr i16 %1701, 4
  %1703 = zext i16 %1702 to i64
  %1704 = getelementptr inbounds i16, ptr %1601, i64 %1703
  %1705 = load i16, ptr %1704, align 2, !tbaa !31
  %1706 = add nsw i32 %1606, 6
  %1707 = sext i32 %1686 to i64
  %1708 = getelementptr inbounds i16, ptr %1609, i64 %1707
  store i16 %1705, ptr %1708, align 2, !tbaa !31
  %1709 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm7, i64 0, i32 2), align 8, !tbaa !114
  %1710 = load i16, ptr %1709, align 2, !tbaa !31
  %1711 = zext i16 %1710 to i32
  %1712 = sub i32 %1589, %1711
  %1713 = lshr i32 %1712, 7
  %1714 = trunc i32 %1713 to i16
  %1715 = add i16 %1710, %1714
  store i16 %1715, ptr %1709, align 2, !tbaa !31
  %1716 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm7, i64 0, i32 1), align 8, !tbaa !112
  %1717 = add nsw i32 %1716, %1594
  %1718 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm7, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1719 = sext i32 %1717 to i64
  %1720 = getelementptr inbounds i16, ptr %1718, i64 %1719
  store ptr %1720, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm7, i64 0, i32 2), align 8, !tbaa !114
  %1721 = load i16, ptr %1720, align 2, !tbaa !31
  %1722 = lshr i16 %1721, 4
  %1723 = zext i16 %1722 to i64
  %1724 = getelementptr inbounds i16, ptr %1601, i64 %1723
  %1725 = load i16, ptr %1724, align 2, !tbaa !31
  %1726 = add nsw i32 %1606, 7
  store i32 %1726, ptr %1605, align 8, !tbaa !64
  %1727 = sext i32 %1706 to i64
  %1728 = getelementptr inbounds i16, ptr %1609, i64 %1727
  store i16 %1725, ptr %1728, align 2, !tbaa !31
  %1729 = load i32, ptr @bpos, align 4, !tbaa !25
  %1730 = load i32, ptr @pos, align 4, !tbaa !25
  %1731 = add nsw i32 %1730, -1
  %1732 = load i32, ptr @buf, align 8, !tbaa !20
  %1733 = add nsw i32 %1732, -1
  %1734 = and i32 %1733, %1731
  %1735 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %1736 = sext i32 %1734 to i64
  %1737 = getelementptr inbounds i8, ptr %1735, i64 %1736
  %1738 = load i8, ptr %1737, align 1, !tbaa !9
  %1739 = zext i8 %1738 to i32
  %1740 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ9model8bitR5MixeriE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %1594, i32 noundef %1729, i32 noundef %1739, i32 noundef %1584)
  ret void

1741:                                             ; preds = %1577, %1575, %1573, %1571, %1569, %1567, %1565, %1563
  %1742 = phi ptr [ @_ZGVZ9model8bitR5MixeriE2cm, %1577 ], [ @_ZGVZ9model8bitR5MixeriE4scm7, %1575 ], [ @_ZGVZ9model8bitR5MixeriE4scm6, %1573 ], [ @_ZGVZ9model8bitR5MixeriE4scm5, %1571 ], [ @_ZGVZ9model8bitR5MixeriE4scm4, %1569 ], [ @_ZGVZ9model8bitR5MixeriE4scm3, %1567 ], [ @_ZGVZ9model8bitR5MixeriE4scm2, %1565 ], [ @_ZGVZ9model8bitR5MixeriE4scm1, %1563 ]
  %1743 = phi { ptr, i32 } [ %1578, %1577 ], [ %1576, %1575 ], [ %1574, %1573 ], [ %1572, %1571 ], [ %1570, %1569 ], [ %1568, %1567 ], [ %1566, %1565 ], [ %1564, %1563 ]
  tail call void @__cxa_guard_abort(ptr nonnull %1742) #39
  resume { ptr, i32 } %1743
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z8pgmModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 {
  %2 = alloca [32 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #39
  %3 = load i32, ptr @bpos, align 4, !tbaa !25
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %125

5:                                                ; preds = %1
  %6 = load i32, ptr @pos, align 4, !tbaa !25
  %7 = add nsw i32 %6, -3
  %8 = load i32, ptr @buf, align 8, !tbaa !20
  %9 = add nsw i32 %8, -1
  %10 = and i32 %9, %7
  %11 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %12 = sext i32 %10 to i64
  %13 = getelementptr inbounds i8, ptr %11, i64 %12
  %14 = load i8, ptr %13, align 1, !tbaa !9
  %15 = icmp eq i8 %14, 80
  br i1 %15, label %16, label %30

16:                                               ; preds = %5
  %17 = add nsw i32 %6, -2
  %18 = and i32 %9, %17
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, ptr %11, i64 %19
  %21 = load i8, ptr %20, align 1, !tbaa !9
  %22 = icmp eq i8 %21, 53
  br i1 %22, label %23, label %30

23:                                               ; preds = %16
  %24 = add nsw i32 %6, -1
  %25 = and i32 %9, %24
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, ptr %11, i64 %26
  %28 = load i8, ptr %27, align 1, !tbaa !9
  switch i8 %28, label %30 [
    i8 32, label %29
    i8 9, label %29
    i8 10, label %29
    i8 13, label %29
  ]

29:                                               ; preds = %23, %23, %23, %23
  store i32 %6, ptr @_ZZ8pgmModelR5MixerE3pgm, align 4, !tbaa !25
  store i32 0, ptr @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4, !tbaa !25
  store i32 0, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !25
  br label %189

30:                                               ; preds = %23, %16, %5
  %31 = load i32, ptr @_ZZ8pgmModelR5MixerE3pgm, align 4, !tbaa !25
  %32 = icmp ne i32 %31, 0
  %33 = load i32, ptr @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4
  %34 = icmp ne i32 %33, 3
  %35 = select i1 %32, i1 %34, i1 false
  br i1 %35, label %36, label %125

36:                                               ; preds = %30
  %37 = add nsw i32 %6, -1
  %38 = icmp slt i32 %31, %37
  %39 = icmp slt i32 %33, 3
  %40 = select i1 %38, i1 %39, i1 false
  br i1 %40, label %41, label %125

41:                                               ; preds = %36, %97
  %42 = phi i32 [ %98, %97 ], [ %6, %36 ]
  %43 = phi i32 [ %99, %97 ], [ %33, %36 ]
  %44 = phi ptr [ %100, %97 ], [ %11, %36 ]
  %45 = phi i32 [ %101, %97 ], [ %8, %36 ]
  %46 = phi i32 [ %104, %97 ], [ %37, %36 ]
  %47 = phi i32 [ %103, %97 ], [ %31, %36 ]
  %48 = add nsw i32 %45, -1
  %49 = tail call i32 @llvm.smax.i32(i32 %47, i32 %46)
  br label %50

50:                                               ; preds = %41, %58
  %51 = phi i32 [ %59, %58 ], [ %47, %41 ]
  %52 = and i32 %48, %51
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, ptr %44, i64 %53
  %55 = load i8, ptr %54, align 1, !tbaa !9
  switch i8 %55, label %69 [
    i8 32, label %56
    i8 9, label %56
    i8 10, label %56
    i8 13, label %56
    i8 35, label %60
  ]

56:                                               ; preds = %50, %50, %50, %50
  %57 = icmp eq i32 %51, %49
  br i1 %57, label %108, label %58

58:                                               ; preds = %56
  %59 = add i32 %51, 1
  br label %50, !llvm.loop !119

60:                                               ; preds = %50, %67
  %61 = phi i32 [ %62, %67 ], [ %51, %50 ]
  %62 = add nsw i32 %61, 1
  %63 = and i32 %62, %48
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i8, ptr %44, i64 %64
  %66 = load i8, ptr %65, align 1, !tbaa !9
  switch i8 %66, label %67 [
    i8 10, label %97
    i8 13, label %97
  ]

67:                                               ; preds = %60
  %68 = icmp slt i32 %62, %46
  br i1 %68, label %60, label %97, !llvm.loop !120

69:                                               ; preds = %50, %82
  %70 = phi i64 [ %83, %82 ], [ 0, %50 ]
  %71 = phi i32 [ %77, %82 ], [ %51, %50 ]
  %72 = and i32 %71, %48
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, ptr %44, i64 %73
  %75 = load i8, ptr %74, align 1, !tbaa !9
  %76 = getelementptr inbounds [32 x i8], ptr %2, i64 0, i64 %70
  store i8 %75, ptr %76, align 1, !tbaa !9
  %77 = add nsw i32 %71, 1
  %78 = and i32 %77, %48
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, ptr %44, i64 %79
  %81 = load i8, ptr %80, align 1, !tbaa !9
  switch i8 %81, label %82 [
    i8 32, label %87
    i8 9, label %87
    i8 10, label %87
    i8 13, label %87
  ]

82:                                               ; preds = %69
  %83 = add nuw nsw i64 %70, 1
  %84 = icmp slt i32 %77, %46
  %85 = icmp ult i64 %70, 31
  %86 = select i1 %84, i1 %85, i1 false
  br i1 %86, label %69, label %97, !llvm.loop !121

87:                                               ; preds = %69, %69, %69, %69
  %88 = call i64 @strtol(ptr nocapture noundef nonnull %2, ptr noundef null, i32 noundef 10) #39
  %89 = trunc i64 %88 to i32
  %90 = load i32, ptr @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4, !tbaa !25
  %91 = add nsw i32 %90, 1
  store i32 %91, ptr @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4, !tbaa !25
  %92 = sext i32 %90 to i64
  %93 = getelementptr inbounds [3 x i32], ptr @_ZZ8pgmModelR5MixerE7pgm_hdr, i64 0, i64 %92
  store i32 %89, ptr %93, align 4, !tbaa !25
  store i32 %77, ptr @_ZZ8pgmModelR5MixerE3pgm, align 4, !tbaa !25
  %94 = load i32, ptr @buf, align 8, !tbaa !20
  %95 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %96 = load i32, ptr @pos, align 4, !tbaa !25
  br label %97

97:                                               ; preds = %60, %60, %67, %82, %87
  %98 = phi i32 [ %96, %87 ], [ %42, %82 ], [ %42, %67 ], [ %42, %60 ], [ %42, %60 ]
  %99 = phi i32 [ %91, %87 ], [ %43, %82 ], [ %43, %67 ], [ %43, %60 ], [ %43, %60 ]
  %100 = phi ptr [ %95, %87 ], [ %44, %82 ], [ %44, %67 ], [ %44, %60 ], [ %44, %60 ]
  %101 = phi i32 [ %94, %87 ], [ %45, %82 ], [ %45, %67 ], [ %45, %60 ], [ %45, %60 ]
  %102 = phi i32 [ %77, %87 ], [ %77, %82 ], [ %62, %67 ], [ %62, %60 ], [ %62, %60 ]
  %103 = add nsw i32 %102, 1
  %104 = add nsw i32 %98, -1
  %105 = icmp slt i32 %103, %104
  %106 = icmp slt i32 %99, 3
  %107 = select i1 %105, i1 %106, i1 false
  br i1 %107, label %41, label %108, !llvm.loop !122

108:                                              ; preds = %97, %56
  %109 = phi i32 [ %43, %56 ], [ %99, %97 ]
  %110 = phi i32 [ %42, %56 ], [ %98, %97 ]
  %111 = icmp eq i32 %109, 3
  br i1 %111, label %112, label %125

112:                                              ; preds = %108
  %113 = load i32, ptr getelementptr inbounds ([3 x i32], ptr @_ZZ8pgmModelR5MixerE7pgm_hdr, i64 0, i64 2), align 4, !tbaa !25
  %114 = icmp eq i32 %113, 255
  %115 = load i32, ptr @_ZZ8pgmModelR5MixerE7pgm_hdr, align 4
  %116 = icmp sgt i32 %115, 0
  %117 = select i1 %114, i1 %116, i1 false
  %118 = load i32, ptr getelementptr inbounds ([3 x i32], ptr @_ZZ8pgmModelR5MixerE7pgm_hdr, i64 0, i64 1), align 4
  %119 = icmp sgt i32 %118, 0
  %120 = select i1 %117, i1 %119, i1 false
  br i1 %120, label %121, label %125

121:                                              ; preds = %112
  store i32 %115, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !25
  %122 = mul nsw i32 %118, %115
  %123 = add nsw i32 %122, %110
  store i32 %123, ptr @_ZZ8pgmModelR5MixerE3eoi, align 4, !tbaa !25
  %124 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.6, i32 noundef %115, i32 noundef %118)
  br label %125

125:                                              ; preds = %36, %108, %121, %112, %30, %1
  %126 = load i32, ptr @pos, align 4, !tbaa !25
  %127 = load i32, ptr @_ZZ8pgmModelR5MixerE3eoi, align 4, !tbaa !25
  %128 = icmp sgt i32 %126, %127
  br i1 %128, label %129, label %130

129:                                              ; preds = %125
  store i32 0, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !25
  br label %189

130:                                              ; preds = %125
  %131 = load i32, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !25
  tail call void @_Z9model8bitR5Mixeri(ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %131)
  %132 = load i32, ptr @_ZZ8pgmModelR5MixerE3col, align 4, !tbaa !25
  %133 = add nsw i32 %132, 1
  %134 = icmp sgt i32 %132, 6
  %135 = select i1 %134, i32 0, i32 %133
  store i32 %135, ptr @_ZZ8pgmModelR5MixerE3col, align 4
  %136 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 7
  %137 = load i32, ptr %136, align 4, !tbaa !63
  %138 = add nsw i32 %137, 2
  %139 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 6
  %140 = load i32, ptr %139, align 8, !tbaa !62
  %141 = add nsw i32 %140, 1
  store i32 %141, ptr %139, align 8, !tbaa !62
  %142 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 3
  %143 = load ptr, ptr %142, align 8, !tbaa !61
  %144 = sext i32 %140 to i64
  %145 = getelementptr inbounds i32, ptr %143, i64 %144
  store i32 %138, ptr %145, align 4, !tbaa !25
  %146 = load i32, ptr %136, align 4, !tbaa !63
  %147 = add nsw i32 %146, 8
  store i32 %147, ptr %136, align 4, !tbaa !63
  %148 = add nsw i32 %147, %135
  %149 = load i32, ptr %139, align 8, !tbaa !62
  %150 = add nsw i32 %149, 1
  store i32 %150, ptr %139, align 8, !tbaa !62
  %151 = sext i32 %149 to i64
  %152 = getelementptr inbounds i32, ptr %143, i64 %151
  store i32 %148, ptr %152, align 4, !tbaa !25
  %153 = load i32, ptr %136, align 4, !tbaa !63
  %154 = add nsw i32 %153, 8
  store i32 %154, ptr %136, align 4, !tbaa !63
  %155 = load i32, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !25
  %156 = load i32, ptr @pos, align 4, !tbaa !25
  %157 = sub nsw i32 %156, %155
  %158 = load i32, ptr @buf, align 8, !tbaa !20
  %159 = add nsw i32 %158, -1
  %160 = and i32 %159, %157
  %161 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %162 = sext i32 %160 to i64
  %163 = getelementptr inbounds i8, ptr %161, i64 %162
  %164 = load i8, ptr %163, align 1, !tbaa !9
  %165 = zext i8 %164 to i32
  %166 = add nsw i32 %156, -1
  %167 = and i32 %159, %166
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i8, ptr %161, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !9
  %171 = zext i8 %170 to i32
  %172 = add nuw nsw i32 %171, %165
  %173 = lshr i32 %172, 4
  %174 = add nsw i32 %173, %154
  %175 = load i32, ptr %139, align 8, !tbaa !62
  %176 = add nsw i32 %175, 1
  store i32 %176, ptr %139, align 8, !tbaa !62
  %177 = sext i32 %175 to i64
  %178 = getelementptr inbounds i32, ptr %143, i64 %177
  store i32 %174, ptr %178, align 4, !tbaa !25
  %179 = load i32, ptr %136, align 4, !tbaa !63
  %180 = add nsw i32 %179, 32
  store i32 %180, ptr %136, align 4, !tbaa !63
  %181 = load i32, ptr @c0, align 4, !tbaa !25
  %182 = add nsw i32 %181, %180
  %183 = load i32, ptr %139, align 8, !tbaa !62
  %184 = add nsw i32 %183, 1
  store i32 %184, ptr %139, align 8, !tbaa !62
  %185 = sext i32 %183 to i64
  %186 = getelementptr inbounds i32, ptr %143, i64 %185
  store i32 %182, ptr %186, align 4, !tbaa !25
  %187 = load i32, ptr %136, align 4, !tbaa !63
  %188 = add nsw i32 %187, 256
  store i32 %188, ptr %136, align 4, !tbaa !63
  br label %189

189:                                              ; preds = %130, %129, %29
  %190 = phi i32 [ 0, %129 ], [ %155, %130 ], [ 0, %29 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #39
  ret i32 %190
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z9bmpModel8R5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 {
  %2 = load i32, ptr @bpos, align 4, !tbaa !25
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %129

4:                                                ; preds = %1
  %5 = load i32, ptr @pos, align 4, !tbaa !25
  %6 = add i32 %5, -44
  %7 = load i32, ptr @buf, align 8, !tbaa !20
  %8 = add nsw i32 %7, -1
  %9 = and i32 %8, %6
  %10 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %11 = sext i32 %9 to i64
  %12 = getelementptr inbounds i8, ptr %10, i64 %11
  %13 = load i8, ptr %12, align 1, !tbaa !9
  %14 = zext i8 %13 to i32
  %15 = add i32 %5, -43
  %16 = and i32 %8, %15
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, ptr %10, i64 %17
  %19 = load i8, ptr %18, align 1, !tbaa !9
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 8
  %22 = or i32 %21, %14
  %23 = add i32 %5, -42
  %24 = and i32 %8, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, ptr %10, i64 %25
  %27 = load i8, ptr %26, align 1, !tbaa !9
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 16
  %30 = or i32 %22, %29
  %31 = add i32 %5, -41
  %32 = and i32 %8, %31
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, ptr %10, i64 %33
  %35 = load i8, ptr %34, align 1, !tbaa !9
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 24
  %38 = or i32 %30, %37
  %39 = icmp ult i32 %38, 1079
  br i1 %39, label %40, label %119

40:                                               ; preds = %4
  %41 = add i32 %5, -40
  %42 = and i32 %8, %41
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, ptr %10, i64 %43
  %45 = load i8, ptr %44, align 1, !tbaa !9
  %46 = zext i8 %45 to i32
  %47 = add i32 %5, -39
  %48 = and i32 %8, %47
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, ptr %10, i64 %49
  %51 = load i8, ptr %50, align 1, !tbaa !9
  %52 = zext i8 %51 to i32
  %53 = shl nuw nsw i32 %52, 8
  %54 = or i32 %53, %46
  %55 = add i32 %5, -38
  %56 = and i32 %8, %55
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, ptr %10, i64 %57
  %59 = load i8, ptr %58, align 1, !tbaa !9
  %60 = zext i8 %59 to i32
  %61 = shl nuw nsw i32 %60, 16
  %62 = or i32 %54, %61
  %63 = add i32 %5, -37
  %64 = and i32 %8, %63
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, ptr %10, i64 %65
  %67 = load i8, ptr %66, align 1, !tbaa !9
  %68 = zext i8 %67 to i32
  %69 = shl nuw nsw i32 %68, 24
  %70 = or i32 %62, %69
  %71 = icmp eq i32 %70, 40
  br i1 %71, label %72, label %119

72:                                               ; preds = %40
  %73 = add i32 %5, -24
  %74 = and i32 %8, %73
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8, ptr %10, i64 %75
  %77 = load i8, ptr %76, align 1, !tbaa !9
  %78 = zext i8 %77 to i32
  %79 = add i32 %5, -23
  %80 = and i32 %8, %79
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i8, ptr %10, i64 %81
  %83 = load i8, ptr %82, align 1, !tbaa !9
  %84 = zext i8 %83 to i32
  %85 = shl nuw nsw i32 %84, 8
  %86 = or i32 %85, %78
  %87 = add i32 %5, -22
  %88 = and i32 %8, %87
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i8, ptr %10, i64 %89
  %91 = load i8, ptr %90, align 1, !tbaa !9
  %92 = zext i8 %91 to i32
  %93 = shl nuw nsw i32 %92, 16
  %94 = or i32 %86, %93
  %95 = add i32 %5, -21
  %96 = and i32 %8, %95
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, ptr %10, i64 %97
  %99 = load i8, ptr %98, align 1, !tbaa !9
  %100 = zext i8 %99 to i32
  %101 = shl nuw nsw i32 %100, 24
  %102 = or i32 %94, %101
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %119

104:                                              ; preds = %72
  %105 = add nsw i32 %5, -26
  %106 = and i32 %8, %105
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i8, ptr %10, i64 %107
  %109 = load i8, ptr %108, align 1, !tbaa !9
  %110 = icmp eq i8 %109, 8
  br i1 %110, label %111, label %119

111:                                              ; preds = %104
  %112 = tail call noundef i32 @_Z2i4i(i32 noundef 36)
  store i32 %112, ptr @_ZZ9bmpModel8R5MixerE2w1, align 4, !tbaa !25
  %113 = tail call noundef i32 @_Z2i4i(i32 noundef 32)
  store i32 %113, ptr @_ZZ9bmpModel8R5MixerE1h, align 4, !tbaa !25
  %114 = load i32, ptr @pos, align 4, !tbaa !25
  %115 = tail call noundef i32 @_Z2i4i(i32 noundef 44)
  %116 = add i32 %114, -54
  %117 = add i32 %116, %115
  store i32 %117, ptr @_ZZ9bmpModel8R5MixerE4ibmp, align 4, !tbaa !25
  %118 = load i32, ptr @pos, align 4, !tbaa !25
  br label %119

119:                                              ; preds = %111, %104, %72, %40, %4
  %120 = phi i32 [ %118, %111 ], [ %5, %104 ], [ %5, %72 ], [ %5, %40 ], [ %5, %4 ]
  %121 = load i32, ptr @_ZZ9bmpModel8R5MixerE4ibmp, align 4, !tbaa !25
  %122 = icmp eq i32 %121, %120
  br i1 %122, label %123, label %129

123:                                              ; preds = %119
  %124 = load i32, ptr @_ZZ9bmpModel8R5MixerE2w1, align 4, !tbaa !25
  store i32 %124, ptr @_ZZ9bmpModel8R5MixerE1w, align 4, !tbaa !25
  %125 = load i32, ptr @_ZZ9bmpModel8R5MixerE1h, align 4, !tbaa !25
  %126 = mul nsw i32 %125, %124
  %127 = add nsw i32 %126, %120
  store i32 %127, ptr @_ZZ9bmpModel8R5MixerE3eoi, align 4, !tbaa !25
  %128 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.7, i32 noundef %124, i32 noundef %125)
  store i32 0, ptr @_ZZ9bmpModel8R5MixerE4ibmp, align 4, !tbaa !25
  br label %129

129:                                              ; preds = %119, %123, %1
  %130 = load i32, ptr @pos, align 4, !tbaa !25
  %131 = load i32, ptr @_ZZ9bmpModel8R5MixerE3eoi, align 4, !tbaa !25
  %132 = icmp sgt i32 %130, %131
  br i1 %132, label %133, label %134

133:                                              ; preds = %129
  store i32 0, ptr @_ZZ9bmpModel8R5MixerE1w, align 4, !tbaa !25
  br label %193

134:                                              ; preds = %129
  %135 = load i32, ptr @_ZZ9bmpModel8R5MixerE1w, align 4, !tbaa !25
  tail call void @_Z9model8bitR5Mixeri(ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %135)
  %136 = load i32, ptr @_ZZ9bmpModel8R5MixerE3col, align 4, !tbaa !25
  %137 = add nsw i32 %136, 1
  %138 = icmp sgt i32 %136, 6
  %139 = select i1 %138, i32 0, i32 %137
  store i32 %139, ptr @_ZZ9bmpModel8R5MixerE3col, align 4
  %140 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 7
  %141 = load i32, ptr %140, align 4, !tbaa !63
  %142 = add nsw i32 %141, 2
  %143 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 6
  %144 = load i32, ptr %143, align 8, !tbaa !62
  %145 = add nsw i32 %144, 1
  store i32 %145, ptr %143, align 8, !tbaa !62
  %146 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 3
  %147 = load ptr, ptr %146, align 8, !tbaa !61
  %148 = sext i32 %144 to i64
  %149 = getelementptr inbounds i32, ptr %147, i64 %148
  store i32 %142, ptr %149, align 4, !tbaa !25
  %150 = load i32, ptr %140, align 4, !tbaa !63
  %151 = add nsw i32 %150, 8
  store i32 %151, ptr %140, align 4, !tbaa !63
  %152 = add nsw i32 %151, %139
  %153 = load i32, ptr %143, align 8, !tbaa !62
  %154 = add nsw i32 %153, 1
  store i32 %154, ptr %143, align 8, !tbaa !62
  %155 = sext i32 %153 to i64
  %156 = getelementptr inbounds i32, ptr %147, i64 %155
  store i32 %152, ptr %156, align 4, !tbaa !25
  %157 = load i32, ptr %140, align 4, !tbaa !63
  %158 = add nsw i32 %157, 8
  store i32 %158, ptr %140, align 4, !tbaa !63
  %159 = load i32, ptr @_ZZ9bmpModel8R5MixerE1w, align 4, !tbaa !25
  %160 = load i32, ptr @pos, align 4, !tbaa !25
  %161 = sub nsw i32 %160, %159
  %162 = load i32, ptr @buf, align 8, !tbaa !20
  %163 = add nsw i32 %162, -1
  %164 = and i32 %163, %161
  %165 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %166 = sext i32 %164 to i64
  %167 = getelementptr inbounds i8, ptr %165, i64 %166
  %168 = load i8, ptr %167, align 1, !tbaa !9
  %169 = zext i8 %168 to i32
  %170 = add nsw i32 %160, -1
  %171 = and i32 %163, %170
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds i8, ptr %165, i64 %172
  %174 = load i8, ptr %173, align 1, !tbaa !9
  %175 = zext i8 %174 to i32
  %176 = add nuw nsw i32 %175, %169
  %177 = lshr i32 %176, 4
  %178 = add nsw i32 %177, %158
  %179 = load i32, ptr %143, align 8, !tbaa !62
  %180 = add nsw i32 %179, 1
  store i32 %180, ptr %143, align 8, !tbaa !62
  %181 = sext i32 %179 to i64
  %182 = getelementptr inbounds i32, ptr %147, i64 %181
  store i32 %178, ptr %182, align 4, !tbaa !25
  %183 = load i32, ptr %140, align 4, !tbaa !63
  %184 = add nsw i32 %183, 32
  store i32 %184, ptr %140, align 4, !tbaa !63
  %185 = load i32, ptr @c0, align 4, !tbaa !25
  %186 = add nsw i32 %185, %184
  %187 = load i32, ptr %143, align 8, !tbaa !62
  %188 = add nsw i32 %187, 1
  store i32 %188, ptr %143, align 8, !tbaa !62
  %189 = sext i32 %187 to i64
  %190 = getelementptr inbounds i32, ptr %147, i64 %189
  store i32 %186, ptr %190, align 4, !tbaa !25
  %191 = load i32, ptr %140, align 4, !tbaa !63
  %192 = add nsw i32 %191, 256
  store i32 %192, ptr %140, align 4, !tbaa !63
  br label %193

193:                                              ; preds = %134, %133
  %194 = phi i32 [ 0, %133 ], [ %159, %134 ]
  ret i32 %194
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z9rgbModel8R5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 {
  %2 = load i32, ptr @bpos, align 4, !tbaa !25
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %77

4:                                                ; preds = %1
  %5 = load i32, ptr @pos, align 4, !tbaa !25
  %6 = add nsw i32 %5, -507
  %7 = load i32, ptr @buf, align 8, !tbaa !20
  %8 = add nsw i32 %7, -1
  %9 = and i32 %8, %6
  %10 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %11 = sext i32 %9 to i64
  %12 = getelementptr inbounds i8, ptr %10, i64 %11
  %13 = load i8, ptr %12, align 1, !tbaa !9
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %15, label %77

15:                                               ; preds = %4
  %16 = add nsw i32 %5, -506
  %17 = and i32 %8, %16
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, ptr %10, i64 %18
  %20 = load i8, ptr %19, align 1, !tbaa !9
  %21 = icmp eq i8 %20, -38
  br i1 %21, label %22, label %77

22:                                               ; preds = %15
  %23 = add nsw i32 %5, -505
  %24 = and i32 %8, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, ptr %10, i64 %25
  %27 = load i8, ptr %26, align 1, !tbaa !9
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %77

29:                                               ; preds = %22
  %30 = add i32 %5, -496
  %31 = and i32 %8, %30
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, ptr %10, i64 %32
  %34 = load i8, ptr %33, align 1, !tbaa !9
  %35 = zext i8 %34 to i32
  %36 = add i32 %5, -495
  %37 = and i32 %8, %36
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, ptr %10, i64 %38
  %40 = load i8, ptr %39, align 1, !tbaa !9
  %41 = zext i8 %40 to i32
  %42 = shl nuw nsw i32 %41, 8
  %43 = or i32 %42, %35
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %77

45:                                               ; preds = %29
  %46 = add nsw i32 %5, -501
  %47 = and i32 %8, %46
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, ptr %10, i64 %48
  %50 = load i8, ptr %49, align 1, !tbaa !9
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 8
  %53 = add nsw i32 %5, -500
  %54 = and i32 %8, %53
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, ptr %10, i64 %55
  %57 = load i8, ptr %56, align 1, !tbaa !9
  %58 = zext i8 %57 to i32
  %59 = or i32 %52, %58
  store i32 %59, ptr @_ZZ9rgbModel8R5MixerE1w, align 4, !tbaa !25
  %60 = add nsw i32 %5, -499
  %61 = and i32 %8, %60
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8, ptr %10, i64 %62
  %64 = load i8, ptr %63, align 1, !tbaa !9
  %65 = zext i8 %64 to i32
  %66 = shl nuw nsw i32 %65, 8
  %67 = add nsw i32 %5, -498
  %68 = and i32 %8, %67
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, ptr %10, i64 %69
  %71 = load i8, ptr %70, align 1, !tbaa !9
  %72 = zext i8 %71 to i32
  %73 = or i32 %66, %72
  %74 = mul nuw nsw i32 %73, %59
  %75 = add nsw i32 %74, %5
  store i32 %75, ptr @_ZZ9rgbModel8R5MixerE3eoi, align 4, !tbaa !25
  %76 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.8, i32 noundef %59, i32 noundef %73)
  br label %77

77:                                               ; preds = %4, %15, %22, %29, %45, %1
  %78 = load i32, ptr @pos, align 4, !tbaa !25
  %79 = load i32, ptr @_ZZ9rgbModel8R5MixerE3eoi, align 4, !tbaa !25
  %80 = icmp sgt i32 %78, %79
  br i1 %80, label %81, label %82

81:                                               ; preds = %77
  store i32 0, ptr @_ZZ9rgbModel8R5MixerE1w, align 4, !tbaa !25
  br label %141

82:                                               ; preds = %77
  %83 = load i32, ptr @_ZZ9rgbModel8R5MixerE1w, align 4, !tbaa !25
  tail call void @_Z9model8bitR5Mixeri(ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %83)
  %84 = load i32, ptr @_ZZ9rgbModel8R5MixerE3col, align 4, !tbaa !25
  %85 = add nsw i32 %84, 1
  %86 = icmp sgt i32 %84, 6
  %87 = select i1 %86, i32 0, i32 %85
  store i32 %87, ptr @_ZZ9rgbModel8R5MixerE3col, align 4
  %88 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 7
  %89 = load i32, ptr %88, align 4, !tbaa !63
  %90 = add nsw i32 %89, 2
  %91 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 6
  %92 = load i32, ptr %91, align 8, !tbaa !62
  %93 = add nsw i32 %92, 1
  store i32 %93, ptr %91, align 8, !tbaa !62
  %94 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 3
  %95 = load ptr, ptr %94, align 8, !tbaa !61
  %96 = sext i32 %92 to i64
  %97 = getelementptr inbounds i32, ptr %95, i64 %96
  store i32 %90, ptr %97, align 4, !tbaa !25
  %98 = load i32, ptr %88, align 4, !tbaa !63
  %99 = add nsw i32 %98, 8
  store i32 %99, ptr %88, align 4, !tbaa !63
  %100 = add nsw i32 %99, %87
  %101 = load i32, ptr %91, align 8, !tbaa !62
  %102 = add nsw i32 %101, 1
  store i32 %102, ptr %91, align 8, !tbaa !62
  %103 = sext i32 %101 to i64
  %104 = getelementptr inbounds i32, ptr %95, i64 %103
  store i32 %100, ptr %104, align 4, !tbaa !25
  %105 = load i32, ptr %88, align 4, !tbaa !63
  %106 = add nsw i32 %105, 8
  store i32 %106, ptr %88, align 4, !tbaa !63
  %107 = load i32, ptr @_ZZ9rgbModel8R5MixerE1w, align 4, !tbaa !25
  %108 = load i32, ptr @pos, align 4, !tbaa !25
  %109 = sub nsw i32 %108, %107
  %110 = load i32, ptr @buf, align 8, !tbaa !20
  %111 = add nsw i32 %110, -1
  %112 = and i32 %111, %109
  %113 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %114 = sext i32 %112 to i64
  %115 = getelementptr inbounds i8, ptr %113, i64 %114
  %116 = load i8, ptr %115, align 1, !tbaa !9
  %117 = zext i8 %116 to i32
  %118 = add nsw i32 %108, -1
  %119 = and i32 %111, %118
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8, ptr %113, i64 %120
  %122 = load i8, ptr %121, align 1, !tbaa !9
  %123 = zext i8 %122 to i32
  %124 = add nuw nsw i32 %123, %117
  %125 = lshr i32 %124, 4
  %126 = add nsw i32 %125, %106
  %127 = load i32, ptr %91, align 8, !tbaa !62
  %128 = add nsw i32 %127, 1
  store i32 %128, ptr %91, align 8, !tbaa !62
  %129 = sext i32 %127 to i64
  %130 = getelementptr inbounds i32, ptr %95, i64 %129
  store i32 %126, ptr %130, align 4, !tbaa !25
  %131 = load i32, ptr %88, align 4, !tbaa !63
  %132 = add nsw i32 %131, 32
  store i32 %132, ptr %88, align 4, !tbaa !63
  %133 = load i32, ptr @c0, align 4, !tbaa !25
  %134 = add nsw i32 %133, %132
  %135 = load i32, ptr %91, align 8, !tbaa !62
  %136 = add nsw i32 %135, 1
  store i32 %136, ptr %91, align 8, !tbaa !62
  %137 = sext i32 %135 to i64
  %138 = getelementptr inbounds i32, ptr %95, i64 %137
  store i32 %134, ptr %138, align 4, !tbaa !25
  %139 = load i32, ptr %88, align 4, !tbaa !63
  %140 = add nsw i32 %139, 256
  store i32 %140, ptr %88, align 4, !tbaa !63
  br label %141

141:                                              ; preds = %82, %81
  %142 = phi i32 [ 0, %81 ], [ %107, %82 ]
  ret i32 %142
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z4dumpPKci(ptr noundef %0, i32 noundef %1) local_unnamed_addr #19 {
  %3 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.9, ptr noundef %0)
  %4 = add nsw i32 %1, 2
  %5 = load i32, ptr @buf, align 8, !tbaa !20
  %6 = add nsw i32 %5, -1
  %7 = and i32 %6, %4
  %8 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %9 = sext i32 %7 to i64
  %10 = getelementptr inbounds i8, ptr %8, i64 %9
  %11 = load i8, ptr %10, align 1, !tbaa !9
  %12 = zext i8 %11 to i32
  %13 = shl nuw nsw i32 %12, 8
  %14 = add nsw i32 %1, 3
  %15 = and i32 %6, %14
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, ptr %8, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !9
  %19 = zext i8 %18 to i32
  %20 = or i32 %13, %19
  %21 = add nuw nsw i32 %20, 1
  br label %24

22:                                               ; preds = %24
  %23 = tail call i32 @putchar(i32 10)
  ret void

24:                                               ; preds = %2, %24
  %25 = phi i32 [ 0, %2 ], [ %36, %24 ]
  %26 = add nsw i32 %25, %1
  %27 = load i32, ptr @buf, align 8, !tbaa !20
  %28 = add nsw i32 %27, -1
  %29 = and i32 %28, %26
  %30 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %31 = sext i32 %29 to i64
  %32 = getelementptr inbounds i8, ptr %30, i64 %31
  %33 = load i8, ptr %32, align 1, !tbaa !9
  %34 = zext i8 %33 to i32
  %35 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.10, i32 noundef %34)
  %36 = add nuw nsw i32 %25, 1
  %37 = icmp eq i32 %25, %21
  br i1 %37, label %22, label %24, !llvm.loop !123
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_Z8update_kiiRiS_(i32 noundef %0, i32 noundef %1, ptr nocapture noundef nonnull align 4 dereferenceable(4) %2, ptr nocapture noundef nonnull align 4 dereferenceable(4) %3) local_unnamed_addr #20 {
  %5 = load i32, ptr %2, align 4, !tbaa !25
  %6 = add nsw i32 %5, -1
  %7 = mul nsw i32 %6, %0
  %8 = sub i32 9, %5
  %9 = mul nsw i32 %8, %1
  %10 = add nsw i32 %7, %9
  %11 = tail call i32 @llvm.abs.i32(i32 %10, i1 true)
  %12 = lshr i32 %11, 3
  %13 = mul nsw i32 %5, %0
  %14 = sub nsw i32 8, %5
  %15 = mul nsw i32 %14, %1
  %16 = add nsw i32 %15, %13
  %17 = tail call i32 @llvm.abs.i32(i32 %16, i1 true)
  %18 = lshr i32 %17, 3
  %19 = add nsw i32 %5, 1
  %20 = mul nsw i32 %19, %0
  %21 = sub i32 7, %5
  %22 = mul nsw i32 %21, %1
  %23 = add nsw i32 %20, %22
  %24 = tail call i32 @llvm.abs.i32(i32 %23, i1 true)
  %25 = lshr i32 %24, 3
  switch i32 %5, label %26 [
    i32 0, label %35
    i32 8, label %27
  ]

26:                                               ; preds = %4
  br label %27

27:                                               ; preds = %4, %26
  %28 = phi i32 [ %25, %26 ], [ %18, %4 ]
  %29 = icmp ult i32 %12, %18
  %30 = icmp ult i32 %12, %28
  %31 = select i1 %29, i1 %30, i1 false
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = load i32, ptr %3, align 4, !tbaa !25
  %34 = add nsw i32 %33, -1
  store i32 %34, ptr %3, align 4, !tbaa !25
  br label %35

35:                                               ; preds = %4, %32, %27
  %36 = phi i32 [ %28, %32 ], [ %28, %27 ], [ %25, %4 ]
  %37 = phi i32 [ %12, %32 ], [ %12, %27 ], [ %18, %4 ]
  %38 = icmp ult i32 %36, %37
  %39 = icmp ult i32 %36, %18
  %40 = select i1 %38, i1 %39, i1 false
  %41 = load i32, ptr %3, align 4, !tbaa !25
  br i1 %40, label %42, label %44

42:                                               ; preds = %35
  %43 = add nsw i32 %41, 1
  store i32 %43, ptr %3, align 4, !tbaa !25
  br label %44

44:                                               ; preds = %35, %42
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp slt i32 %45, -2
  br i1 %46, label %49, label %47

47:                                               ; preds = %44
  %48 = icmp sgt i32 %45, 2
  br i1 %48, label %49, label %53

49:                                               ; preds = %47, %44
  %50 = phi i32 [ -1, %44 ], [ 1, %47 ]
  %51 = load i32, ptr %2, align 4, !tbaa !25
  %52 = add nsw i32 %51, %50
  store i32 %52, ptr %2, align 4, !tbaa !25
  store i32 0, ptr %3, align 4, !tbaa !25
  br label %53

53:                                               ; preds = %49, %47
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z9jpegModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2ht acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2ht) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE2ht, i32 noundef 8)
          to label %8 unwind label %140

8:                                                ; preds = %7
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2ht, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2ht) #39
  br label %10

10:                                               ; preds = %8, %4, %1
  %11 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE3huf acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19, !prof !110

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE3huf) #39
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  invoke void @_ZN5ArrayI3HUFLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE3huf, i32 noundef 128)
          to label %17 unwind label %142

17:                                               ; preds = %16
  %18 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayI3HUFLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE3huf, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE3huf) #39
  br label %19

19:                                               ; preds = %17, %13, %10
  %20 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4hbuf acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %28, !prof !110

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4hbuf) #39
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  invoke void @_ZN5ArrayIhLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4hbuf, i32 noundef 2048)
          to label %26 unwind label %144

26:                                               ; preds = %25
  %27 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIhLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4hbuf, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4hbuf) #39
  br label %28

28:                                               ; preds = %26, %22, %19
  %29 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE5color acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %37, !prof !110

31:                                               ; preds = %28
  %32 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE5color) #39
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE5color, i32 noundef 10)
          to label %35 unwind label %146

35:                                               ; preds = %34
  %36 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE5color, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE5color) #39
  br label %37

37:                                               ; preds = %35, %31, %28
  %38 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4pred acquire, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %46, !prof !110

40:                                               ; preds = %37
  %41 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4pred) #39
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4pred, i32 noundef 4)
          to label %44 unwind label %148

44:                                               ; preds = %43
  %45 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4pred, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4pred) #39
  br label %46

46:                                               ; preds = %44, %40, %37
  %47 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4cbuf acquire, align 8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %55, !prof !110

49:                                               ; preds = %46
  %50 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4cbuf) #39
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  invoke void @_ZN3BufC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4cbuf, i32 noundef 131072)
          to label %53 unwind label %150

53:                                               ; preds = %52
  %54 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN3BufD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4cbuf, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4cbuf) #39
  br label %55

55:                                               ; preds = %53, %49, %46
  %56 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE5cbuf2 acquire, align 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %64, !prof !110

58:                                               ; preds = %55
  %59 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE5cbuf2) #39
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  invoke void @_ZN6IntBufC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE5cbuf2, i32 noundef 131072)
          to label %62 unwind label %152

62:                                               ; preds = %61
  %63 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN6IntBufD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE5cbuf2, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE5cbuf2) #39
  br label %64

64:                                               ; preds = %62, %58, %55
  %65 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE8adv_pred acquire, align 8
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %73, !prof !110

67:                                               ; preds = %64
  %68 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE8adv_pred) #39
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE8adv_pred, i32 noundef 7)
          to label %71 unwind label %154

71:                                               ; preds = %70
  %72 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE8adv_pred, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE8adv_pred) #39
  br label %73

73:                                               ; preds = %71, %67, %64
  %74 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4sumu acquire, align 8
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %82, !prof !110

76:                                               ; preds = %73
  %77 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4sumu) #39
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4sumu, i32 noundef 8)
          to label %80 unwind label %156

80:                                               ; preds = %79
  %81 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4sumu, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4sumu) #39
  br label %82

82:                                               ; preds = %80, %76, %73
  %83 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4sumv acquire, align 8
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %91, !prof !110

85:                                               ; preds = %82
  %86 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4sumv) #39
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %85
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4sumv, i32 noundef 8)
          to label %89 unwind label %158

89:                                               ; preds = %88
  %90 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4sumv, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4sumv) #39
  br label %91

91:                                               ; preds = %89, %85, %82
  %92 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2ls acquire, align 8
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %100, !prof !110

94:                                               ; preds = %91
  %95 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2ls) #39
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %94
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE2ls, i32 noundef 10)
          to label %98 unwind label %160

98:                                               ; preds = %97
  %99 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2ls, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2ls) #39
  br label %100

100:                                              ; preds = %98, %94, %91
  %101 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE3lcp acquire, align 8
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %109, !prof !110

103:                                              ; preds = %100
  %104 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE3lcp) #39
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %103
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE3lcp, i32 noundef 4)
          to label %107 unwind label %162

107:                                              ; preds = %106
  %108 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE3lcp, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE3lcp) #39
  br label %109

109:                                              ; preds = %107, %103, %100
  %110 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4zpos acquire, align 8
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %118, !prof !110

112:                                              ; preds = %109
  %113 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4zpos) #39
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %118, label %115

115:                                              ; preds = %112
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4zpos, i32 noundef 64)
          to label %116 unwind label %164

116:                                              ; preds = %115
  %117 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4zpos, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4zpos) #39
  br label %118

118:                                              ; preds = %116, %112, %109
  %119 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4qtab acquire, align 8
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %127, !prof !110

121:                                              ; preds = %118
  %122 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4qtab) #39
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %127, label %124

124:                                              ; preds = %121
  invoke void @_ZN5ArrayIhLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4qtab, i32 noundef 256)
          to label %125 unwind label %166

125:                                              ; preds = %124
  %126 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIhLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4qtab, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4qtab) #39
  br label %127

127:                                              ; preds = %125, %121, %118
  %128 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4qmap acquire, align 8
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %136, !prof !110

130:                                              ; preds = %127
  %131 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4qmap) #39
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %136, label %133

133:                                              ; preds = %130
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4qmap, i32 noundef 10)
          to label %134 unwind label %168

134:                                              ; preds = %133
  %135 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4qmap, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4qmap) #39
  br label %136

136:                                              ; preds = %134, %130, %127
  %137 = load i32, ptr @bpos, align 4, !tbaa !25
  %138 = icmp eq i32 %137, 0
  %139 = load i32, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4
  br i1 %138, label %174, label %170

140:                                              ; preds = %7
  %141 = landingpad { ptr, i32 }
          cleanup
  br label %3188

142:                                              ; preds = %16
  %143 = landingpad { ptr, i32 }
          cleanup
  br label %3188

144:                                              ; preds = %25
  %145 = landingpad { ptr, i32 }
          cleanup
  br label %3188

146:                                              ; preds = %34
  %147 = landingpad { ptr, i32 }
          cleanup
  br label %3188

148:                                              ; preds = %43
  %149 = landingpad { ptr, i32 }
          cleanup
  br label %3188

150:                                              ; preds = %52
  %151 = landingpad { ptr, i32 }
          cleanup
  br label %3188

152:                                              ; preds = %61
  %153 = landingpad { ptr, i32 }
          cleanup
  br label %3188

154:                                              ; preds = %70
  %155 = landingpad { ptr, i32 }
          cleanup
  br label %3188

156:                                              ; preds = %79
  %157 = landingpad { ptr, i32 }
          cleanup
  br label %3188

158:                                              ; preds = %88
  %159 = landingpad { ptr, i32 }
          cleanup
  br label %3188

160:                                              ; preds = %97
  %161 = landingpad { ptr, i32 }
          cleanup
  br label %3188

162:                                              ; preds = %106
  %163 = landingpad { ptr, i32 }
          cleanup
  br label %3188

164:                                              ; preds = %115
  %165 = landingpad { ptr, i32 }
          cleanup
  br label %3188

166:                                              ; preds = %124
  %167 = landingpad { ptr, i32 }
          cleanup
  br label %3188

168:                                              ; preds = %133
  %169 = landingpad { ptr, i32 }
          cleanup
  br label %3188

170:                                              ; preds = %136
  %171 = icmp eq i32 %139, 0
  br i1 %171, label %172, label %182

172:                                              ; preds = %170
  %173 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

174:                                              ; preds = %136
  %175 = icmp sgt i32 %139, 1
  %176 = zext i1 %175 to i32
  store i32 %176, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  %177 = load i32, ptr @_ZZ9jpegModelR5MixerE3app, align 4
  %178 = icmp sgt i32 %177, 0
  br i1 %178, label %179, label %187

179:                                              ; preds = %174
  %180 = add nsw i32 %177, -1
  store i32 %180, ptr @_ZZ9jpegModelR5MixerE3app, align 4, !tbaa !25
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %187, label %3186

182:                                              ; preds = %170
  %183 = load i32, ptr @_ZZ9jpegModelR5MixerE3app, align 4, !tbaa !25
  %184 = icmp sgt i32 %183, 0
  br i1 %184, label %185, label %473

185:                                              ; preds = %182
  %186 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

187:                                              ; preds = %174, %179
  %188 = phi i32 [ 0, %179 ], [ %177, %174 ]
  %189 = icmp eq i32 %139, 0
  br i1 %189, label %190, label %232

190:                                              ; preds = %187
  %191 = load i32, ptr @pos, align 4, !tbaa !25
  %192 = add nsw i32 %191, -4
  %193 = load i32, ptr @buf, align 8, !tbaa !20
  %194 = add nsw i32 %193, -1
  %195 = and i32 %194, %192
  %196 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %197 = sext i32 %195 to i64
  %198 = getelementptr inbounds i8, ptr %196, i64 %197
  %199 = load i8, ptr %198, align 1, !tbaa !9
  %200 = icmp eq i8 %199, -1
  br i1 %200, label %201, label %3186

201:                                              ; preds = %190
  %202 = add nsw i32 %191, -3
  %203 = and i32 %194, %202
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i8, ptr %196, i64 %204
  %206 = load i8, ptr %205, align 1, !tbaa !9
  %207 = icmp eq i8 %206, -40
  br i1 %207, label %208, label %3186

208:                                              ; preds = %201
  %209 = add nsw i32 %191, -2
  %210 = and i32 %194, %209
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i8, ptr %196, i64 %211
  %213 = load i8, ptr %212, align 1, !tbaa !9
  %214 = icmp eq i8 %213, -1
  br i1 %214, label %215, label %3186

215:                                              ; preds = %208
  %216 = add nsw i32 %191, -1
  %217 = and i32 %194, %216
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds i8, ptr %196, i64 %218
  %220 = load i8, ptr %219, align 1, !tbaa !9
  %221 = and i8 %220, -16
  %222 = icmp eq i8 %221, -32
  br i1 %222, label %223, label %3186

223:                                              ; preds = %215
  store i32 1, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4data, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6htsize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE3sof, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE3sos, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE3app, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  store i32 -1, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !25
  %224 = load ptr, ptr getelementptr inbounds (%class.Array.7, ptr @_ZZ9jpegModelR5MixerE3huf, i64 0, i32 3), align 8, !tbaa !124
  %225 = load i32, ptr @_ZZ9jpegModelR5MixerE3huf, align 8, !tbaa !126
  %226 = sext i32 %225 to i64
  %227 = mul nsw i64 %226, 12
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %224, i8 0, i64 %227, i1 false)
  %228 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4pred, i64 0, i32 3), align 8, !tbaa !61
  %229 = load i32, ptr @_ZZ9jpegModelR5MixerE4pred, align 8, !tbaa !51
  %230 = sext i32 %229 to i64
  %231 = shl nsw i64 %230, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %228, i8 0, i64 %231, i1 false)
  br label %232

232:                                              ; preds = %223, %187
  %233 = phi i32 [ 0, %223 ], [ %188, %187 ]
  %234 = load i32, ptr @_ZZ9jpegModelR5MixerE4data, align 4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %258, label %236

236:                                              ; preds = %232
  %237 = load i32, ptr @pos, align 4, !tbaa !25
  %238 = add nsw i32 %237, -2
  %239 = load i32, ptr @buf, align 8, !tbaa !20
  %240 = add nsw i32 %239, -1
  %241 = and i32 %240, %238
  %242 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %243 = sext i32 %241 to i64
  %244 = getelementptr inbounds i8, ptr %242, i64 %243
  %245 = load i8, ptr %244, align 1, !tbaa !9
  %246 = icmp eq i8 %245, -1
  br i1 %246, label %247, label %260

247:                                              ; preds = %236
  %248 = add nsw i32 %237, -1
  %249 = and i32 %240, %248
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds i8, ptr %242, i64 %250
  %252 = load i8, ptr %251, align 1, !tbaa !9
  %253 = icmp eq i8 %252, 0
  %254 = and i8 %252, -8
  %255 = icmp eq i8 %254, -48
  %256 = or i1 %253, %255
  br i1 %256, label %260, label %257

257:                                              ; preds = %247
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  br label %3186

258:                                              ; preds = %232
  %259 = icmp eq i32 %233, 0
  br i1 %259, label %265, label %260

260:                                              ; preds = %247, %236, %258
  %261 = load i32, ptr @pos, align 4, !tbaa !25
  %262 = load i32, ptr @buf, align 8, !tbaa !20
  %263 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %264 = add nsw i32 %262, -1
  br label %302

265:                                              ; preds = %258
  %266 = load i32, ptr @pos, align 4, !tbaa !25
  %267 = add nsw i32 %266, -4
  %268 = load i32, ptr @buf, align 8, !tbaa !20
  %269 = add nsw i32 %268, -1
  %270 = and i32 %269, %267
  %271 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %272 = sext i32 %270 to i64
  %273 = getelementptr inbounds i8, ptr %271, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !9
  %275 = icmp eq i8 %274, -1
  br i1 %275, label %276, label %302

276:                                              ; preds = %265
  %277 = add nsw i32 %266, -3
  %278 = and i32 %269, %277
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds i8, ptr %271, i64 %279
  %281 = load i8, ptr %280, align 1, !tbaa !9
  %282 = and i8 %281, -16
  %283 = icmp eq i8 %282, -32
  %284 = icmp eq i8 %281, -2
  %285 = or i1 %284, %283
  br i1 %285, label %286, label %302

286:                                              ; preds = %276
  %287 = add nsw i32 %266, -2
  %288 = and i32 %269, %287
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds i8, ptr %271, i64 %289
  %291 = load i8, ptr %290, align 1, !tbaa !9
  %292 = zext i8 %291 to i32
  %293 = shl nuw nsw i32 %292, 8
  %294 = add nsw i32 %266, -1
  %295 = and i32 %269, %294
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds i8, ptr %271, i64 %296
  %298 = load i8, ptr %297, align 1, !tbaa !9
  %299 = zext i8 %298 to i32
  %300 = or i32 %293, %299
  %301 = add nuw nsw i32 %300, 2
  store i32 %301, ptr @_ZZ9jpegModelR5MixerE3app, align 4, !tbaa !25
  br label %302

302:                                              ; preds = %260, %276, %286, %265
  %303 = phi i32 [ %264, %260 ], [ %269, %276 ], [ %269, %286 ], [ %269, %265 ]
  %304 = phi ptr [ %263, %260 ], [ %271, %276 ], [ %271, %286 ], [ %271, %265 ]
  %305 = phi i32 [ %261, %260 ], [ %266, %276 ], [ %266, %286 ], [ %266, %265 ]
  %306 = add nsw i32 %305, -5
  %307 = and i32 %303, %306
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds i8, ptr %304, i64 %308
  %310 = load i8, ptr %309, align 1, !tbaa !9
  %311 = icmp eq i8 %310, -1
  %312 = add nsw i32 %305, -4
  %313 = and i32 %303, %312
  %314 = sext i32 %313 to i64
  br i1 %311, label %315, label %349

315:                                              ; preds = %302
  %316 = getelementptr inbounds i8, ptr %304, i64 %314
  %317 = load i8, ptr %316, align 1, !tbaa !9
  %318 = icmp eq i8 %317, -38
  br i1 %318, label %319, label %349

319:                                              ; preds = %315
  %320 = add i32 %305, -3
  %321 = and i32 %303, %320
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds i8, ptr %304, i64 %322
  %324 = load i8, ptr %323, align 1, !tbaa !9
  %325 = zext i8 %324 to i32
  %326 = shl nuw nsw i32 %325, 8
  %327 = add nsw i32 %305, -2
  %328 = and i32 %303, %327
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds i8, ptr %304, i64 %329
  %331 = load i8, ptr %330, align 1, !tbaa !9
  %332 = zext i8 %331 to i32
  %333 = or i32 %326, %332
  %334 = add nsw i32 %305, -1
  %335 = and i32 %303, %334
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds i8, ptr %304, i64 %336
  %338 = load i8, ptr %337, align 1, !tbaa !9
  %339 = zext i8 %338 to i32
  %340 = shl nuw nsw i32 %339, 1
  %341 = add nuw nsw i32 %340, 6
  %342 = icmp eq i32 %333, %341
  %343 = icmp ne i8 %338, 0
  %344 = select i1 %342, i1 %343, i1 false
  %345 = icmp ult i8 %338, 5
  %346 = select i1 %344, i1 %345, i1 false
  br i1 %346, label %347, label %349

347:                                              ; preds = %319
  store i32 %306, ptr @_ZZ9jpegModelR5MixerE3sos, align 4, !tbaa !25
  %348 = add i32 %320, %333
  store i32 %348, ptr @_ZZ9jpegModelR5MixerE4data, align 4, !tbaa !25
  store i32 2, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  br label %349

349:                                              ; preds = %302, %319, %347, %315
  %350 = getelementptr inbounds i8, ptr %304, i64 %314
  %351 = load i8, ptr %350, align 1, !tbaa !9
  %352 = icmp eq i8 %351, -1
  br i1 %352, label %353, label %374

353:                                              ; preds = %349
  %354 = add nsw i32 %305, -3
  %355 = and i32 %303, %354
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds i8, ptr %304, i64 %356
  %358 = load i8, ptr %357, align 1, !tbaa !9
  %359 = icmp eq i8 %358, -60
  %360 = load i32, ptr @_ZZ9jpegModelR5MixerE6htsize, align 4
  %361 = icmp slt i32 %360, 8
  %362 = select i1 %359, i1 %361, i1 false
  br i1 %362, label %363, label %374

363:                                              ; preds = %353
  %364 = add nuw nsw i32 %360, 1
  store i32 %364, ptr @_ZZ9jpegModelR5MixerE6htsize, align 4, !tbaa !25
  %365 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ht, i64 0, i32 3), align 8, !tbaa !61
  %366 = sext i32 %360 to i64
  %367 = getelementptr inbounds i32, ptr %365, i64 %366
  store i32 %312, ptr %367, align 4, !tbaa !25
  %368 = load i32, ptr @pos, align 4, !tbaa !25
  %369 = load i32, ptr @buf, align 8, !tbaa !20
  %370 = add nsw i32 %368, -4
  %371 = add nsw i32 %369, -1
  %372 = and i32 %371, %370
  %373 = sext i32 %372 to i64
  br label %374

374:                                              ; preds = %363, %353, %349
  %375 = phi i64 [ %373, %363 ], [ %314, %353 ], [ %314, %349 ]
  %376 = phi i32 [ %371, %363 ], [ %303, %353 ], [ %303, %349 ]
  %377 = phi i32 [ %370, %363 ], [ %312, %353 ], [ %312, %349 ]
  %378 = phi i32 [ %368, %363 ], [ %305, %353 ], [ %305, %349 ]
  %379 = getelementptr inbounds i8, ptr %304, i64 %375
  %380 = load i8, ptr %379, align 1, !tbaa !9
  %381 = icmp eq i8 %380, -1
  br i1 %381, label %382, label %405

382:                                              ; preds = %374
  %383 = add nsw i32 %378, -3
  %384 = and i32 %376, %383
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds i8, ptr %304, i64 %385
  %387 = load i8, ptr %386, align 1, !tbaa !9
  switch i8 %387, label %405 [
    i8 -64, label %388
    i8 -37, label %389
  ]

388:                                              ; preds = %382
  store i32 %377, ptr @_ZZ9jpegModelR5MixerE3sof, align 4, !tbaa !25
  br label %405

389:                                              ; preds = %382
  %390 = add nsw i32 %378, -2
  %391 = and i32 %376, %390
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds i8, ptr %304, i64 %392
  %394 = load i8, ptr %393, align 1, !tbaa !9
  %395 = zext i8 %394 to i32
  %396 = shl nuw nsw i32 %395, 8
  %397 = add i32 %378, -1
  %398 = and i32 %376, %397
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds i8, ptr %304, i64 %399
  %401 = load i8, ptr %400, align 1, !tbaa !9
  %402 = zext i8 %401 to i32
  %403 = add i32 %397, %396
  %404 = add i32 %403, %402
  store i32 %404, ptr @_ZZ9jpegModelR5MixerE7dqt_end, align 4, !tbaa !25
  br label %445

405:                                              ; preds = %382, %388, %374
  %406 = load i32, ptr @_ZZ9jpegModelR5MixerE9dqt_state, align 4, !tbaa !25
  %407 = icmp sgt i32 %406, -1
  br i1 %407, label %408, label %450

408:                                              ; preds = %405
  %409 = load i32, ptr @_ZZ9jpegModelR5MixerE7dqt_end, align 4, !tbaa !25
  %410 = icmp slt i32 %378, %409
  br i1 %410, label %411, label %445

411:                                              ; preds = %408
  %412 = urem i32 %406, 65
  %413 = icmp eq i32 %412, 0
  %414 = add nsw i32 %378, -1
  %415 = and i32 %376, %414
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds i8, ptr %304, i64 %416
  %418 = load i8, ptr %417, align 1, !tbaa !9
  br i1 %413, label %419, label %421

419:                                              ; preds = %411
  %420 = zext i8 %418 to i32
  store i32 %420, ptr @_ZZ9jpegModelR5MixerE4qnum, align 4, !tbaa !25
  br label %440

421:                                              ; preds = %411
  %422 = icmp eq i8 %418, 0
  br i1 %422, label %423, label %424

423:                                              ; preds = %421
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  br label %3186

424:                                              ; preds = %421
  %425 = load i32, ptr @_ZZ9jpegModelR5MixerE4qnum, align 4, !tbaa !25
  %426 = icmp ult i32 %425, 4
  br i1 %426, label %428, label %427

427:                                              ; preds = %424
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  br label %3186

428:                                              ; preds = %424
  %429 = add i8 %418, -1
  %430 = shl nuw nsw i32 %425, 6
  %431 = add nsw i32 %412, -1
  %432 = add nuw nsw i32 %431, %430
  %433 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4qtab, i64 0, i32 3), align 8, !tbaa !22
  %434 = zext i32 %432 to i64
  %435 = getelementptr inbounds i8, ptr %433, i64 %434
  store i8 %429, ptr %435, align 1, !tbaa !9
  %436 = load i32, ptr @pos, align 4, !tbaa !25
  %437 = load i32, ptr @buf, align 8, !tbaa !20
  %438 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %439 = add nsw i32 %437, -1
  br label %440

440:                                              ; preds = %428, %419
  %441 = phi i32 [ %439, %428 ], [ %376, %419 ]
  %442 = phi ptr [ %438, %428 ], [ %304, %419 ]
  %443 = phi i32 [ %436, %428 ], [ %378, %419 ]
  %444 = add nuw nsw i32 %406, 1
  br label %445

445:                                              ; preds = %408, %389, %440
  %446 = phi i32 [ %444, %440 ], [ 0, %389 ], [ -1, %408 ]
  %447 = phi i32 [ %441, %440 ], [ %376, %389 ], [ %376, %408 ]
  %448 = phi ptr [ %442, %440 ], [ %304, %389 ], [ %304, %408 ]
  %449 = phi i32 [ %443, %440 ], [ %378, %389 ], [ %378, %408 ]
  store i32 %446, ptr @_ZZ9jpegModelR5MixerE9dqt_state, align 4, !tbaa !25
  br label %450

450:                                              ; preds = %445, %405
  %451 = phi i32 [ %376, %405 ], [ %447, %445 ]
  %452 = phi ptr [ %304, %405 ], [ %448, %445 ]
  %453 = phi i32 [ %378, %405 ], [ %449, %445 ]
  %454 = add nsw i32 %453, -2
  %455 = and i32 %451, %454
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds i8, ptr %452, i64 %456
  %458 = load i8, ptr %457, align 1, !tbaa !9
  %459 = icmp eq i8 %458, -1
  br i1 %459, label %460, label %473

460:                                              ; preds = %450
  %461 = add nsw i32 %453, -1
  %462 = and i32 %451, %461
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds i8, ptr %452, i64 %463
  %465 = load i8, ptr %464, align 1, !tbaa !9
  %466 = and i8 %465, -8
  %467 = icmp eq i8 %466, -48
  br i1 %467, label %468, label %473

468:                                              ; preds = %460
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  store i32 -1, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !25
  %469 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4pred, i64 0, i32 3), align 8, !tbaa !61
  %470 = load i32, ptr @_ZZ9jpegModelR5MixerE4pred, align 8, !tbaa !51
  %471 = sext i32 %470 to i64
  %472 = shl nsw i64 %471, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 %469, i8 0, i64 %472, i1 false)
  br label %473

473:                                              ; preds = %182, %450, %460, %468
  %474 = load i32, ptr @pos, align 4, !tbaa !25
  %475 = load i32, ptr @_ZZ9jpegModelR5MixerE4data, align 4, !tbaa !25
  %476 = icmp eq i32 %474, %475
  %477 = load i32, ptr @bpos, align 4
  %478 = icmp eq i32 %477, 1
  %479 = select i1 %476, i1 %478, i1 false
  br i1 %479, label %480, label %916

480:                                              ; preds = %473
  %481 = load i32, ptr @_ZZ9jpegModelR5MixerE6htsize, align 4, !tbaa !25
  %482 = icmp sgt i32 %481, 0
  br i1 %482, label %483, label %487

483:                                              ; preds = %480
  %484 = zext i32 %481 to i64
  %485 = load i32, ptr @buf, align 8, !tbaa !20
  %486 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  br label %492

487:                                              ; preds = %480
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %488 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

489:                                              ; preds = %627
  %490 = add nuw nsw i64 %497, 1
  %491 = icmp eq i64 %490, %484
  br i1 %491, label %636, label %492, !llvm.loop !127

492:                                              ; preds = %483, %489
  %493 = phi ptr [ %486, %483 ], [ %628, %489 ]
  %494 = phi i32 [ %485, %483 ], [ %629, %489 ]
  %495 = phi ptr [ %486, %483 ], [ %631, %489 ]
  %496 = phi i32 [ %485, %483 ], [ %632, %489 ]
  %497 = phi i64 [ 0, %483 ], [ %490, %489 ]
  %498 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ht, i64 0, i32 3), align 8, !tbaa !61
  %499 = getelementptr inbounds i32, ptr %498, i64 %497
  %500 = load i32, ptr %499, align 4, !tbaa !25
  %501 = add nsw i32 %500, 4
  %502 = add i32 %500, 2
  %503 = add nsw i32 %496, -1
  %504 = and i32 %503, %502
  %505 = sext i32 %504 to i64
  %506 = getelementptr inbounds i8, ptr %495, i64 %505
  %507 = load i8, ptr %506, align 1, !tbaa !9
  %508 = zext i8 %507 to i32
  %509 = shl nuw nsw i32 %508, 8
  %510 = add nsw i32 %500, 3
  %511 = and i32 %503, %510
  %512 = sext i32 %511 to i64
  %513 = getelementptr inbounds i8, ptr %495, i64 %512
  %514 = load i8, ptr %513, align 1, !tbaa !9
  %515 = zext i8 %514 to i32
  %516 = add i32 %502, %509
  %517 = add i32 %516, %515
  %518 = icmp slt i32 %501, %517
  %519 = load i32, ptr @pos, align 4
  %520 = icmp slt i32 %517, %519
  %521 = select i1 %518, i1 %520, i1 false
  %522 = add nsw i32 %500, 2104
  %523 = icmp slt i32 %517, %522
  %524 = select i1 %521, i1 %523, i1 false
  br i1 %524, label %533, label %627

525:                                              ; preds = %623
  %526 = icmp slt i32 %619, %517
  %527 = load i32, ptr @pos, align 4
  %528 = icmp slt i32 %517, %527
  %529 = select i1 %526, i1 %528, i1 false
  %530 = add nsw i32 %619, 2100
  %531 = icmp slt i32 %517, %530
  %532 = select i1 %529, i1 %531, i1 false
  br i1 %532, label %533, label %627

533:                                              ; preds = %492, %525
  %534 = phi i32 [ %619, %525 ], [ %501, %492 ]
  %535 = phi i32 [ %540, %525 ], [ 0, %492 ]
  %536 = phi i32 [ %568, %525 ], [ %496, %492 ]
  %537 = phi ptr [ %570, %525 ], [ %495, %492 ]
  %538 = phi i32 [ %568, %525 ], [ %494, %492 ]
  %539 = phi ptr [ %570, %525 ], [ %493, %492 ]
  %540 = add nuw nsw i32 %535, 1
  %541 = icmp eq i32 %535, 9
  br i1 %541, label %627, label %542

542:                                              ; preds = %533
  %543 = add nsw i32 %538, -1
  %544 = and i32 %543, %534
  %545 = sext i32 %544 to i64
  %546 = getelementptr inbounds i8, ptr %539, i64 %545
  %547 = load i8, ptr %546, align 1, !tbaa !9
  %548 = and i8 %547, 15
  %549 = icmp ugt i8 %547, 31
  %550 = icmp ugt i8 %548, 3
  %551 = or i1 %549, %550
  br i1 %551, label %627, label %552

552:                                              ; preds = %542
  %553 = zext i8 %548 to i32
  %554 = lshr i8 %547, 4
  %555 = zext i8 %554 to i32
  %556 = shl nuw nsw i32 %555, 6
  %557 = shl nuw nsw i32 %553, 4
  %558 = add nuw nsw i32 %556, %557
  %559 = load ptr, ptr getelementptr inbounds (%class.Array.7, ptr @_ZZ9jpegModelR5MixerE3huf, i64 0, i32 3), align 8, !tbaa !124
  %560 = zext i32 %558 to i64
  %561 = add nsw i32 %534, 17
  %562 = shl nuw nsw i32 %555, 10
  %563 = shl nuw nsw i32 %553, 8
  %564 = add nuw nsw i32 %562, %563
  %565 = zext i32 %564 to i64
  br label %571

566:                                              ; preds = %571
  %567 = getelementptr inbounds %struct.HUF, ptr %559, i64 %560
  %568 = load i32, ptr @buf, align 8, !tbaa !20
  %569 = add nsw i32 %568, -1
  %570 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  br label %600

571:                                              ; preds = %571, %552
  %572 = phi i64 [ 0, %552 ], [ %598, %571 ]
  %573 = trunc i64 %572 to i32
  %574 = add nsw i32 %561, %573
  %575 = load i32, ptr @buf, align 8, !tbaa !20
  %576 = add nsw i32 %575, -1
  %577 = and i32 %576, %574
  %578 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %579 = sext i32 %577 to i64
  %580 = getelementptr inbounds i8, ptr %578, i64 %579
  %581 = load i8, ptr %580, align 1, !tbaa !9
  %582 = add nuw nsw i64 %572, %565
  %583 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4hbuf, i64 0, i32 3), align 8, !tbaa !22
  %584 = getelementptr inbounds i8, ptr %583, i64 %582
  store i8 %581, ptr %584, align 1, !tbaa !9
  %585 = or i64 %572, 1
  %586 = trunc i64 %585 to i32
  %587 = add nsw i32 %561, %586
  %588 = load i32, ptr @buf, align 8, !tbaa !20
  %589 = add nsw i32 %588, -1
  %590 = and i32 %589, %587
  %591 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %592 = sext i32 %590 to i64
  %593 = getelementptr inbounds i8, ptr %591, i64 %592
  %594 = load i8, ptr %593, align 1, !tbaa !9
  %595 = add nuw nsw i64 %585, %565
  %596 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4hbuf, i64 0, i32 3), align 8, !tbaa !22
  %597 = getelementptr inbounds i8, ptr %596, i64 %595
  store i8 %594, ptr %597, align 1, !tbaa !9
  %598 = add nuw nsw i64 %572, 2
  %599 = icmp eq i64 %598, 256
  br i1 %599, label %566, label %571, !llvm.loop !128

600:                                              ; preds = %566, %600
  %601 = phi i64 [ 0, %566 ], [ %606, %600 ]
  %602 = phi i32 [ %561, %566 ], [ %619, %600 ]
  %603 = phi i32 [ %564, %566 ], [ %620, %600 ]
  %604 = phi i32 [ 0, %566 ], [ %621, %600 ]
  %605 = getelementptr inbounds %struct.HUF, ptr %567, i64 %601
  store i32 %604, ptr %605, align 4, !tbaa !129
  %606 = add nuw nsw i64 %601, 1
  %607 = trunc i64 %606 to i32
  %608 = add i32 %534, %607
  %609 = and i32 %569, %608
  %610 = sext i32 %609 to i64
  %611 = getelementptr inbounds i8, ptr %570, i64 %610
  %612 = load i8, ptr %611, align 1, !tbaa !9
  %613 = zext i8 %612 to i32
  %614 = add nsw i32 %604, %613
  %615 = getelementptr inbounds %struct.HUF, ptr %567, i64 %601, i32 1
  store i32 %614, ptr %615, align 4, !tbaa !131
  %616 = getelementptr inbounds %struct.HUF, ptr %567, i64 %601, i32 2
  store i32 %603, ptr %616, align 4, !tbaa !132
  %617 = load i8, ptr %611, align 1, !tbaa !9
  %618 = zext i8 %617 to i32
  %619 = add nsw i32 %602, %618
  %620 = add nuw nsw i32 %603, %618
  %621 = shl nsw i32 %614, 1
  %622 = icmp eq i64 %606, 16
  br i1 %622, label %623, label %600, !llvm.loop !133

623:                                              ; preds = %600
  %624 = icmp ult i32 %620, 2048
  br i1 %624, label %525, label %625

625:                                              ; preds = %623
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %626 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

627:                                              ; preds = %533, %525, %542, %492
  %628 = phi ptr [ %493, %492 ], [ %539, %533 ], [ %570, %525 ], [ %539, %542 ]
  %629 = phi i32 [ %494, %492 ], [ %538, %533 ], [ %568, %525 ], [ %538, %542 ]
  %630 = phi i32 [ %501, %492 ], [ %534, %533 ], [ %619, %525 ], [ %534, %542 ]
  %631 = phi ptr [ %495, %492 ], [ %537, %533 ], [ %570, %525 ], [ %539, %542 ]
  %632 = phi i32 [ %496, %492 ], [ %536, %533 ], [ %568, %525 ], [ %538, %542 ]
  %633 = icmp eq i32 %630, %517
  br i1 %633, label %489, label %634

634:                                              ; preds = %627
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %635 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

636:                                              ; preds = %489
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  store i32 -1, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !25
  %637 = load i32, ptr @_ZZ9jpegModelR5MixerE3sof, align 4, !tbaa !25
  %638 = icmp eq i32 %637, 0
  %639 = load i32, ptr @_ZZ9jpegModelR5MixerE3sos, align 4
  %640 = icmp ne i32 %639, 0
  %641 = select i1 %638, i1 %640, i1 false
  br i1 %641, label %642, label %644

642:                                              ; preds = %636
  %643 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

644:                                              ; preds = %636
  %645 = add nsw i32 %639, 4
  %646 = add nsw i32 %629, -1
  %647 = and i32 %646, %645
  %648 = sext i32 %647 to i64
  %649 = getelementptr inbounds i8, ptr %628, i64 %648
  %650 = load i8, ptr %649, align 1, !tbaa !9
  %651 = zext i8 %650 to i32
  %652 = add nsw i32 %637, 9
  %653 = and i32 %646, %652
  %654 = sext i32 %653 to i64
  %655 = getelementptr inbounds i8, ptr %628, i64 %654
  %656 = load i8, ptr %655, align 1, !tbaa !9
  %657 = zext i8 %656 to i32
  %658 = icmp ult i8 %650, 5
  %659 = icmp ult i8 %656, 5
  %660 = select i1 %658, i1 %659, i1 false
  br i1 %660, label %663, label %661

661:                                              ; preds = %644
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %662 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

663:                                              ; preds = %644
  store i32 0, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  %664 = icmp eq i8 %650, 0
  br i1 %664, label %791, label %665

665:                                              ; preds = %663
  %666 = icmp eq i8 %656, 0
  %667 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  br i1 %666, label %791, label %668

668:                                              ; preds = %665, %745
  %669 = phi i32 [ %748, %745 ], [ 0, %665 ]
  %670 = phi i32 [ %747, %745 ], [ 0, %665 ]
  %671 = phi i32 [ %746, %745 ], [ 0, %665 ]
  %672 = shl nuw nsw i32 %669, 1
  %673 = add nsw i32 %672, %639
  %674 = add nsw i32 %673, 5
  %675 = add nsw i32 %673, 6
  br label %676

676:                                              ; preds = %668, %759
  %677 = phi i32 [ %671, %668 ], [ %760, %759 ]
  %678 = phi i1 [ true, %668 ], [ %764, %759 ]
  %679 = phi i32 [ %670, %668 ], [ %762, %759 ]
  %680 = phi i32 [ 0, %668 ], [ %763, %759 ]
  %681 = phi i32 [ %671, %668 ], [ %761, %759 ]
  %682 = load i32, ptr @buf, align 8, !tbaa !20
  %683 = add nsw i32 %682, -1
  %684 = and i32 %683, %674
  %685 = sext i32 %684 to i64
  %686 = getelementptr inbounds i8, ptr %628, i64 %685
  %687 = load i8, ptr %686, align 1, !tbaa !9
  %688 = mul nuw nsw i32 %680, 3
  %689 = add nsw i32 %688, %637
  %690 = add nsw i32 %689, 10
  %691 = and i32 %683, %690
  %692 = sext i32 %691 to i64
  %693 = getelementptr inbounds i8, ptr %628, i64 %692
  %694 = load i8, ptr %693, align 1, !tbaa !9
  %695 = icmp eq i8 %687, %694
  br i1 %695, label %696, label %759

696:                                              ; preds = %676
  %697 = add nsw i32 %689, 11
  %698 = and i32 %683, %697
  %699 = sext i32 %698 to i64
  %700 = getelementptr inbounds i8, ptr %628, i64 %699
  %701 = load i8, ptr %700, align 1, !tbaa !9
  %702 = zext i8 %701 to i32
  %703 = lshr i32 %702, 4
  %704 = tail call i32 @llvm.smax.i32(i32 %703, i32 %679)
  %705 = and i32 %702, 15
  %706 = mul nuw nsw i32 %705, %703
  %707 = icmp ne i32 %706, 0
  %708 = add nsw i32 %681, %706
  %709 = icmp slt i32 %708, 11
  %710 = select i1 %707, i1 %709, i1 false
  br i1 %710, label %766, label %775

711:                                              ; preds = %750
  %712 = icmp eq i64 %754, %771
  br i1 %712, label %741, label %713, !llvm.loop !134

713:                                              ; preds = %773, %711
  %714 = phi i32 [ %706, %773 ], [ %753, %711 ]
  %715 = phi i32 [ %677, %773 ], [ %755, %711 ]
  %716 = phi i64 [ %774, %773 ], [ %754, %711 ]
  %717 = load i32, ptr @buf, align 8, !tbaa !20
  %718 = add nsw i32 %717, -1
  %719 = and i32 %718, %675
  %720 = sext i32 %719 to i64
  %721 = getelementptr inbounds i8, ptr %628, i64 %720
  %722 = load i8, ptr %721, align 1, !tbaa !9
  %723 = lshr i8 %722, 4
  %724 = zext i8 %723 to i32
  %725 = getelementptr inbounds [10 x i32], ptr @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 %716
  store i32 %724, ptr %725, align 4, !tbaa !25
  %726 = and i8 %722, 15
  %727 = zext i8 %726 to i32
  %728 = getelementptr inbounds [2 x [10 x i32]], ptr @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 1, i64 %716
  store i32 %727, ptr %728, align 4, !tbaa !25
  %729 = icmp ult i8 %722, 64
  %730 = icmp ult i8 %726, 4
  %731 = and i1 %729, %730
  br i1 %731, label %732, label %743

732:                                              ; preds = %713
  %733 = getelementptr inbounds i32, ptr %767, i64 %716
  store i32 %669, ptr %733, align 4, !tbaa !25
  %734 = load i32, ptr @buf, align 8, !tbaa !20
  %735 = add nsw i32 %734, -1
  %736 = and i32 %735, %768
  %737 = sext i32 %736 to i64
  %738 = getelementptr inbounds i8, ptr %628, i64 %737
  %739 = load i8, ptr %738, align 1, !tbaa !9
  %740 = icmp ult i8 %739, 4
  br i1 %740, label %750, label %743

741:                                              ; preds = %711
  %742 = trunc i64 %754 to i32
  br label %743

743:                                              ; preds = %766, %741, %732, %713
  %744 = phi i32 [ %742, %741 ], [ %715, %732 ], [ %715, %713 ], [ %677, %766 ]
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  br i1 %678, label %3186, label %745

745:                                              ; preds = %759, %743
  %746 = phi i32 [ %744, %743 ], [ %760, %759 ]
  %747 = phi i32 [ %704, %743 ], [ %762, %759 ]
  %748 = add nuw nsw i32 %669, 1
  %749 = icmp eq i32 %748, %651
  br i1 %749, label %776, label %668, !llvm.loop !135

750:                                              ; preds = %732
  %751 = zext i8 %739 to i32
  %752 = getelementptr inbounds i32, ptr %769, i64 %716
  store i32 %751, ptr %752, align 4, !tbaa !25
  %753 = add nsw i32 %714, -1
  %754 = add nsw i64 %716, 1
  %755 = trunc i64 %754 to i32
  store i32 %755, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  %756 = icmp eq i32 %753, 0
  br i1 %756, label %757, label %711, !llvm.loop !134

757:                                              ; preds = %750
  %758 = trunc i64 %754 to i32
  br label %759

759:                                              ; preds = %757, %676
  %760 = phi i32 [ %677, %676 ], [ %758, %757 ]
  %761 = phi i32 [ %681, %676 ], [ %758, %757 ]
  %762 = phi i32 [ %679, %676 ], [ %704, %757 ]
  %763 = add nuw nsw i32 %680, 1
  %764 = icmp ult i32 %763, %657
  %765 = icmp eq i32 %763, %657
  br i1 %765, label %745, label %676, !llvm.loop !136

766:                                              ; preds = %696
  %767 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8
  %768 = add nsw i32 %689, 12
  %769 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4qmap, i64 0, i32 3), align 8
  %770 = tail call i32 @llvm.smax.i32(i32 %681, i32 10)
  %771 = zext i32 %770 to i64
  %772 = icmp sgt i32 %681, 9
  br i1 %772, label %743, label %773

773:                                              ; preds = %766
  %774 = sext i32 %681 to i64
  br label %713

775:                                              ; preds = %696
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  br label %3186

776:                                              ; preds = %745
  %777 = add nsw i32 %747, -1
  %778 = icmp ult i32 %777, 10
  br i1 %778, label %779, label %791

779:                                              ; preds = %776
  %780 = icmp sgt i32 %746, 0
  br i1 %780, label %781, label %793

781:                                              ; preds = %779
  %782 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8, !tbaa !61
  %783 = icmp eq i32 %746, 1
  %784 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8
  %785 = zext i32 %746 to i64
  %786 = add i32 %746, -1
  %787 = and i32 %786, 1
  %788 = icmp eq i32 %746, 2
  %789 = and i32 %786, -2
  %790 = icmp eq i32 %787, 0
  br label %795

791:                                              ; preds = %665, %663, %776
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %792 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

793:                                              ; preds = %814, %779
  %794 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4zpos, i64 0, i32 3), align 8, !tbaa !61
  br label %848

795:                                              ; preds = %781, %814
  %796 = phi i64 [ 0, %781 ], [ %818, %814 ]
  %797 = getelementptr inbounds i32, ptr %782, i64 %796
  store i32 0, ptr %797, align 4, !tbaa !25
  br i1 %783, label %814, label %798

798:                                              ; preds = %795
  %799 = getelementptr inbounds i32, ptr %784, i64 %796
  %800 = trunc i64 %796 to i32
  br i1 %788, label %801, label %820

801:                                              ; preds = %843, %798
  %802 = phi i32 [ undef, %798 ], [ %844, %843 ]
  %803 = phi i32 [ 0, %798 ], [ %844, %843 ]
  %804 = phi i32 [ 1, %798 ], [ %845, %843 ]
  br i1 %790, label %814, label %805

805:                                              ; preds = %801
  %806 = add nuw nsw i32 %804, %800
  %807 = srem i32 %806, %746
  %808 = zext i32 %807 to i64
  %809 = getelementptr inbounds i32, ptr %784, i64 %808
  %810 = load i32, ptr %809, align 4, !tbaa !25
  %811 = load i32, ptr %799, align 4, !tbaa !25
  %812 = icmp eq i32 %810, %811
  br i1 %812, label %813, label %814

813:                                              ; preds = %805
  store i32 %804, ptr %797, align 4, !tbaa !25
  br label %814

814:                                              ; preds = %801, %813, %805, %795
  %815 = phi i32 [ 0, %795 ], [ %802, %801 ], [ %803, %805 ], [ %804, %813 ]
  %816 = sub nsw i32 %746, %815
  %817 = shl i32 %816, 6
  store i32 %817, ptr %797, align 4, !tbaa !25
  %818 = add nuw nsw i64 %796, 1
  %819 = icmp eq i64 %818, %785
  br i1 %819, label %793, label %795, !llvm.loop !137

820:                                              ; preds = %798, %843
  %821 = phi i32 [ %844, %843 ], [ 0, %798 ]
  %822 = phi i32 [ %845, %843 ], [ 1, %798 ]
  %823 = phi i32 [ %846, %843 ], [ 0, %798 ]
  %824 = add nuw nsw i32 %822, %800
  %825 = srem i32 %824, %746
  %826 = zext i32 %825 to i64
  %827 = getelementptr inbounds i32, ptr %784, i64 %826
  %828 = load i32, ptr %827, align 4, !tbaa !25
  %829 = load i32, ptr %799, align 4, !tbaa !25
  %830 = icmp eq i32 %828, %829
  br i1 %830, label %831, label %832

831:                                              ; preds = %820
  store i32 %822, ptr %797, align 4, !tbaa !25
  br label %832

832:                                              ; preds = %820, %831
  %833 = phi i32 [ %821, %820 ], [ %822, %831 ]
  %834 = add nuw nsw i32 %822, 1
  %835 = add nuw nsw i32 %834, %800
  %836 = srem i32 %835, %746
  %837 = zext i32 %836 to i64
  %838 = getelementptr inbounds i32, ptr %784, i64 %837
  %839 = load i32, ptr %838, align 4, !tbaa !25
  %840 = load i32, ptr %799, align 4, !tbaa !25
  %841 = icmp eq i32 %839, %840
  br i1 %841, label %842, label %843

842:                                              ; preds = %832
  store i32 %834, ptr %797, align 4, !tbaa !25
  br label %843

843:                                              ; preds = %842, %832
  %844 = phi i32 [ %833, %832 ], [ %834, %842 ]
  %845 = add nuw nsw i32 %822, 2
  %846 = add i32 %823, 2
  %847 = icmp eq i32 %846, %789
  br i1 %847, label %801, label %820, !llvm.loop !138

848:                                              ; preds = %848, %793
  %849 = phi i64 [ 0, %793 ], [ %871, %848 ]
  %850 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %849
  %851 = load i8, ptr %850, align 2, !tbaa !9
  %852 = zext i8 %851 to i64
  %853 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %849
  %854 = load i8, ptr %853, align 2, !tbaa !9
  %855 = zext i8 %854 to i64
  %856 = shl nuw nsw i64 %855, 3
  %857 = add nuw nsw i64 %856, %852
  %858 = getelementptr inbounds i32, ptr %794, i64 %857
  %859 = trunc i64 %849 to i32
  store i32 %859, ptr %858, align 4, !tbaa !25
  %860 = or i64 %849, 1
  %861 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %860
  %862 = load i8, ptr %861, align 1, !tbaa !9
  %863 = zext i8 %862 to i64
  %864 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %860
  %865 = load i8, ptr %864, align 1, !tbaa !9
  %866 = zext i8 %865 to i64
  %867 = shl nuw nsw i64 %866, 3
  %868 = add nuw nsw i64 %867, %863
  %869 = getelementptr inbounds i32, ptr %794, i64 %868
  %870 = trunc i64 %860 to i32
  store i32 %870, ptr %869, align 4, !tbaa !25
  %871 = add nuw nsw i64 %849, 2
  %872 = icmp eq i64 %871, 64
  br i1 %872, label %873, label %848, !llvm.loop !139

873:                                              ; preds = %848
  %874 = add nsw i32 %637, 7
  %875 = load i32, ptr @buf, align 8, !tbaa !20
  %876 = add nsw i32 %875, -1
  %877 = and i32 %876, %874
  %878 = sext i32 %877 to i64
  %879 = getelementptr inbounds i8, ptr %628, i64 %878
  %880 = load i8, ptr %879, align 1, !tbaa !9
  %881 = zext i8 %880 to i32
  %882 = shl nuw nsw i32 %881, 8
  %883 = add nsw i32 %637, 8
  %884 = and i32 %876, %883
  %885 = sext i32 %884 to i64
  %886 = getelementptr inbounds i8, ptr %628, i64 %885
  %887 = load i8, ptr %886, align 1, !tbaa !9
  %888 = zext i8 %887 to i32
  %889 = or i32 %882, %888
  store i32 %889, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !25
  %890 = add nsw i32 %637, 5
  %891 = and i32 %876, %890
  %892 = sext i32 %891 to i64
  %893 = getelementptr inbounds i8, ptr %628, i64 %892
  %894 = load i8, ptr %893, align 1, !tbaa !9
  %895 = zext i8 %894 to i32
  %896 = shl nuw nsw i32 %895, 8
  %897 = add nsw i32 %637, 6
  %898 = and i32 %876, %897
  %899 = sext i32 %898 to i64
  %900 = getelementptr inbounds i8, ptr %628, i64 %899
  %901 = load i8, ptr %900, align 1, !tbaa !9
  %902 = zext i8 %901 to i32
  %903 = or i32 %896, %902
  %904 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.12, i32 noundef %889, i32 noundef %903)
  %905 = load i32, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !25
  %906 = add nsw i32 %905, -1
  %907 = shl nuw nsw i32 %747, 3
  %908 = sdiv i32 %906, %907
  %909 = add nsw i32 %908, 1
  store i32 %909, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !25
  %910 = icmp sgt i32 %908, -1
  br i1 %910, label %913, label %911

911:                                              ; preds = %873
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %912 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

913:                                              ; preds = %873
  %914 = load i32, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  %915 = shl nsw i32 %914, 6
  store i32 %915, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE3row, align 4, !tbaa !25
  br label %918

916:                                              ; preds = %473
  %917 = load i32, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  br label %918

918:                                              ; preds = %916, %913
  %919 = phi i32 [ %917, %916 ], [ %915, %913 ]
  %920 = icmp eq i32 %919, 0
  br i1 %920, label %2032, label %921

921:                                              ; preds = %918
  %922 = load i32, ptr @bpos, align 4, !tbaa !25
  %923 = icmp eq i32 %922, 0
  %924 = select i1 %923, i32 -2, i32 -1
  %925 = load i32, ptr @pos, align 4, !tbaa !25
  %926 = add i32 %924, %925
  %927 = load i32, ptr @buf, align 8, !tbaa !20
  %928 = add nsw i32 %927, -1
  %929 = and i32 %928, %926
  %930 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %931 = sext i32 %929 to i64
  %932 = getelementptr inbounds i8, ptr %930, i64 %931
  %933 = load i8, ptr %932, align 1, !tbaa !9
  %934 = icmp eq i8 %933, -1
  br i1 %934, label %2032, label %935

935:                                              ; preds = %921
  %936 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  %937 = icmp slt i32 %936, 33
  br i1 %937, label %940, label %938

938:                                              ; preds = %935
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %939 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

940:                                              ; preds = %935
  %941 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  %942 = load i32, ptr @y, align 4, !tbaa !25
  %943 = shl i32 %941, 1
  %944 = add i32 %942, %943
  store i32 %944, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  %945 = add nsw i32 %936, 1
  store i32 %945, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  %946 = load i32, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !25
  %947 = icmp slt i32 %946, 0
  br i1 %947, label %948, label %1005

948:                                              ; preds = %940
  %949 = icmp ult i32 %936, 16
  br i1 %949, label %952, label %950

950:                                              ; preds = %948
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %951 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

952:                                              ; preds = %948
  %953 = load i32, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %954 = and i32 %953, 63
  %955 = icmp ne i32 %954, 0
  %956 = icmp ult i32 %953, 640
  br i1 %956, label %959, label %957

957:                                              ; preds = %952
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %958 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

959:                                              ; preds = %952
  %960 = lshr i32 %953, 6
  %961 = zext i1 %955 to i64
  %962 = zext i32 %960 to i64
  %963 = getelementptr inbounds [2 x [10 x i32]], ptr @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 %961, i64 %962
  %964 = load i32, ptr %963, align 4, !tbaa !25
  %965 = icmp ult i32 %964, 4
  br i1 %965, label %968, label %966

966:                                              ; preds = %959
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %967 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

968:                                              ; preds = %959
  %969 = select i1 %955, i32 64, i32 0
  %970 = shl nuw nsw i32 %964, 4
  %971 = add nuw nsw i32 %970, %969
  %972 = load ptr, ptr getelementptr inbounds (%class.Array.7, ptr @_ZZ9jpegModelR5MixerE3huf, i64 0, i32 3), align 8, !tbaa !124
  %973 = zext i32 %971 to i64
  %974 = getelementptr inbounds %struct.HUF, ptr %972, i64 %973
  %975 = zext i32 %936 to i64
  %976 = getelementptr inbounds %struct.HUF, ptr %974, i64 %975
  %977 = load i32, ptr %976, align 4, !tbaa !129
  %978 = getelementptr inbounds %struct.HUF, ptr %974, i64 %975, i32 1
  %979 = load i32, ptr %978, align 4, !tbaa !131
  %980 = icmp ugt i32 %977, %979
  br i1 %980, label %985, label %981

981:                                              ; preds = %968
  %982 = getelementptr inbounds %struct.HUF, ptr %974, i64 %975, i32 2
  %983 = load i32, ptr %982, align 4, !tbaa !132
  %984 = icmp slt i32 %983, 2048
  br i1 %984, label %987, label %985

985:                                              ; preds = %981, %968
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %986 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

987:                                              ; preds = %981
  %988 = icmp ult i32 %944, %979
  br i1 %988, label %989, label %2032

989:                                              ; preds = %987
  %990 = icmp ult i32 %944, %977
  br i1 %990, label %991, label %993

991:                                              ; preds = %989
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %992 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

993:                                              ; preds = %989
  %994 = sub i32 %944, %977
  %995 = add i32 %994, %983
  %996 = icmp ult i32 %995, 2048
  br i1 %996, label %997, label %1003

997:                                              ; preds = %993
  %998 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4hbuf, i64 0, i32 3), align 8, !tbaa !22
  %999 = zext i32 %995 to i64
  %1000 = getelementptr inbounds i8, ptr %998, i64 %999
  %1001 = load i8, ptr %1000, align 1, !tbaa !9
  %1002 = zext i8 %1001 to i32
  store i32 %1002, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !25
  store i32 %945, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !25
  br label %1005

1003:                                             ; preds = %993
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1004 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

1005:                                             ; preds = %940, %997
  %1006 = phi i32 [ %946, %940 ], [ %1002, %997 ]
  %1007 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !25
  %1008 = and i32 %1006, 15
  %1009 = add nsw i32 %1007, %1008
  %1010 = icmp eq i32 %1009, %945
  br i1 %1010, label %1011, label %2032

1011:                                             ; preds = %1005
  store i32 %1006, ptr @_ZZ9jpegModelR5MixerE3rs1, align 4, !tbaa !25
  %1012 = load i32, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %1013 = and i32 %1012, 63
  %1014 = icmp eq i32 %1013, 0
  br i1 %1014, label %1121, label %1015

1015:                                             ; preds = %1011
  %1016 = icmp eq i32 %1006, 0
  br i1 %1016, label %1017, label %1048

1017:                                             ; preds = %1015
  %1018 = add nsw i32 %1012, 63
  %1019 = and i32 %1018, -64
  store i32 %1019, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %1020 = icmp sgt i32 %1019, -1
  br i1 %1020, label %1021, label %1029

1021:                                             ; preds = %1017
  %1022 = icmp sle i32 %1019, %919
  %1023 = icmp ult i32 %1019, 641
  %1024 = and i1 %1022, %1023
  br i1 %1024, label %1025, label %1029

1025:                                             ; preds = %1021
  %1026 = load i32, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  %1027 = and i32 %1026, 63
  %1028 = icmp eq i32 %1027, 0
  br i1 %1028, label %1183, label %1031

1029:                                             ; preds = %1021, %1017
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1030 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

1031:                                             ; preds = %1025, %1031
  %1032 = phi i32 [ %1039, %1031 ], [ %1026, %1025 ]
  %1033 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1034 = add nsw i32 %1033, -1
  %1035 = and i32 %1034, %1032
  %1036 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %1037 = sext i32 %1035 to i64
  %1038 = getelementptr inbounds i32, ptr %1036, i64 %1037
  store i32 0, ptr %1038, align 4, !tbaa !25
  %1039 = add nsw i32 %1032, 1
  %1040 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !20
  %1041 = add nsw i32 %1040, -1
  %1042 = and i32 %1041, %1032
  %1043 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %1044 = sext i32 %1042 to i64
  %1045 = getelementptr inbounds i8, ptr %1043, i64 %1044
  store i8 0, ptr %1045, align 1, !tbaa !9
  %1046 = and i32 %1039, 63
  %1047 = icmp eq i32 %1046, 0
  br i1 %1047, label %1182, label %1031, !llvm.loop !140

1048:                                             ; preds = %1015
  %1049 = icmp ult i32 %1008, 11
  br i1 %1049, label %1052, label %1050

1050:                                             ; preds = %1048
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1051 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

1052:                                             ; preds = %1048
  %1053 = lshr i32 %1006, 4
  %1054 = add i32 %1012, %1053
  %1055 = xor i32 %1054, %1012
  %1056 = icmp ult i32 %1055, 64
  br i1 %1056, label %1059, label %1057

1057:                                             ; preds = %1052
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1058 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

1059:                                             ; preds = %1052
  %1060 = add i32 %1054, 1
  store i32 %1060, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %1061 = shl nsw i32 -1, %1008
  %1062 = xor i32 %1061, -1
  %1063 = and i32 %944, %1062
  %1064 = icmp eq i32 %1008, 0
  br i1 %1064, label %1071, label %1065

1065:                                             ; preds = %1059
  %1066 = add nsw i32 %1008, -1
  %1067 = lshr i32 %1063, %1066
  %1068 = icmp eq i32 %1067, 0
  %1069 = select i1 %1068, i32 %1062, i32 0
  %1070 = sub nsw i32 %1063, %1069
  br label %1071

1071:                                             ; preds = %1065, %1059
  %1072 = phi i32 [ %1063, %1059 ], [ %1070, %1065 ]
  %1073 = load i32, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  %1074 = icmp ult i32 %1006, 16
  br i1 %1074, label %1097, label %1075

1075:                                             ; preds = %1071, %1075
  %1076 = phi i32 [ %1094, %1075 ], [ %1053, %1071 ]
  %1077 = phi i32 [ %1087, %1075 ], [ %1073, %1071 ]
  %1078 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1079 = add nsw i32 %1078, -1
  %1080 = and i32 %1079, %1077
  %1081 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %1082 = sext i32 %1080 to i64
  %1083 = getelementptr inbounds i32, ptr %1081, i64 %1082
  store i32 0, ptr %1083, align 4, !tbaa !25
  %1084 = shl nuw nsw i32 %1076, 4
  %1085 = or i32 %1084, %1008
  %1086 = trunc i32 %1085 to i8
  %1087 = add nsw i32 %1077, 1
  %1088 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !20
  %1089 = add nsw i32 %1088, -1
  %1090 = and i32 %1089, %1077
  %1091 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %1092 = sext i32 %1090 to i64
  %1093 = getelementptr inbounds i8, ptr %1091, i64 %1092
  store i8 %1086, ptr %1093, align 1, !tbaa !9
  %1094 = add nsw i32 %1076, -1
  %1095 = icmp ugt i32 %1076, 1
  br i1 %1095, label %1075, label %1096, !llvm.loop !141

1096:                                             ; preds = %1075
  store i32 %1087, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  br label %1097

1097:                                             ; preds = %1096, %1071
  %1098 = phi i32 [ %1087, %1096 ], [ %1073, %1071 ]
  %1099 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1100 = add nsw i32 %1099, -1
  %1101 = and i32 %1100, %1098
  %1102 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %1103 = sext i32 %1101 to i64
  %1104 = getelementptr inbounds i32, ptr %1102, i64 %1103
  store i32 %1072, ptr %1104, align 4, !tbaa !25
  %1105 = shl nuw nsw i32 %1008, 4
  %1106 = shl i32 %944, 2
  %1107 = lshr i32 %1106, %1008
  %1108 = and i32 %1107, 3
  %1109 = or i32 %1108, %1105
  %1110 = trunc i32 %1109 to i8
  %1111 = or i8 %1110, 12
  %1112 = add nsw i32 %1098, 1
  store i32 %1112, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  %1113 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !20
  %1114 = add nsw i32 %1113, -1
  %1115 = and i32 %1114, %1098
  %1116 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %1117 = sext i32 %1115 to i64
  %1118 = getelementptr inbounds i8, ptr %1116, i64 %1117
  store i8 %1111, ptr %1118, align 1, !tbaa !9
  %1119 = load i32, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !25
  %1120 = add nsw i32 %1119, %1008
  store i32 %1120, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !25
  br label %1183

1121:                                             ; preds = %1011
  %1122 = icmp ult i32 %1006, 12
  br i1 %1122, label %1125, label %1123

1123:                                             ; preds = %1121
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1124 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

1125:                                             ; preds = %1121
  %1126 = add nuw nsw i32 %1012, 1
  store i32 %1126, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %1127 = shl nsw i32 -1, %1006
  %1128 = xor i32 %1127, -1
  %1129 = and i32 %944, %1128
  %1130 = icmp eq i32 %1006, 0
  br i1 %1130, label %1137, label %1131

1131:                                             ; preds = %1125
  %1132 = add nsw i32 %1006, -1
  %1133 = ashr i32 %1129, %1132
  %1134 = icmp eq i32 %1133, 0
  %1135 = select i1 %1134, i32 %1128, i32 0
  %1136 = sub nsw i32 %1129, %1135
  br label %1137

1137:                                             ; preds = %1131, %1125
  %1138 = phi i32 [ %1129, %1125 ], [ %1136, %1131 ]
  %1139 = icmp ult i32 %1012, 639
  br i1 %1139, label %1142, label %1140

1140:                                             ; preds = %1137
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1141 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

1142:                                             ; preds = %1137
  %1143 = lshr i32 %1126, 6
  %1144 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8, !tbaa !61
  %1145 = zext i32 %1143 to i64
  %1146 = getelementptr inbounds i32, ptr %1144, i64 %1145
  %1147 = load i32, ptr %1146, align 4, !tbaa !25
  %1148 = icmp ult i32 %1147, 4
  br i1 %1148, label %1151, label %1149

1149:                                             ; preds = %1142
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1150 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

1151:                                             ; preds = %1142
  %1152 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4pred, i64 0, i32 3), align 8, !tbaa !61
  %1153 = zext i32 %1147 to i64
  %1154 = getelementptr inbounds i32, ptr %1152, i64 %1153
  %1155 = load i32, ptr %1154, align 4, !tbaa !25
  %1156 = add nsw i32 %1155, %1138
  store i32 %1156, ptr %1154, align 4, !tbaa !25
  %1157 = load i32, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  %1158 = and i32 %1157, 63
  %1159 = icmp eq i32 %1158, 0
  br i1 %1159, label %1162, label %1160

1160:                                             ; preds = %1151
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1161 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

1162:                                             ; preds = %1151
  %1163 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1164 = add nsw i32 %1163, -1
  %1165 = and i32 %1164, %1157
  %1166 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %1167 = sext i32 %1165 to i64
  %1168 = getelementptr inbounds i32, ptr %1166, i64 %1167
  store i32 %1156, ptr %1168, align 4, !tbaa !25
  %1169 = add nsw i32 %1156, 1023
  %1170 = lshr i32 %1169, 3
  %1171 = trunc i32 %1170 to i8
  %1172 = add nuw nsw i32 %1157, 1
  store i32 %1172, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  %1173 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !20
  %1174 = add nsw i32 %1173, -1
  %1175 = and i32 %1174, %1157
  %1176 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %1177 = sext i32 %1175 to i64
  %1178 = getelementptr inbounds i8, ptr %1176, i64 %1177
  store i8 %1171, ptr %1178, align 1, !tbaa !9
  %1179 = load i32, ptr @_ZZ9jpegModelR5MixerE5ssum2, align 4, !tbaa !25
  store i32 %1179, ptr @_ZZ9jpegModelR5MixerE5ssum3, align 4, !tbaa !25
  %1180 = load i32, ptr @_ZZ9jpegModelR5MixerE5ssum1, align 4, !tbaa !25
  store i32 %1180, ptr @_ZZ9jpegModelR5MixerE5ssum2, align 4, !tbaa !25
  %1181 = load i32, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !25
  store i32 %1181, ptr @_ZZ9jpegModelR5MixerE5ssum1, align 4, !tbaa !25
  store i32 %1006, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !25
  br label %1183

1182:                                             ; preds = %1031
  store i32 %1039, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  br label %1183

1183:                                             ; preds = %1097, %1025, %1182, %1162
  %1184 = phi i32 [ %1026, %1025 ], [ %1039, %1182 ], [ %1172, %1162 ], [ %1112, %1097 ]
  %1185 = phi i32 [ %1019, %1025 ], [ %1019, %1182 ], [ %1126, %1162 ], [ %1060, %1097 ]
  %1186 = icmp slt i32 %1185, 0
  %1187 = icmp sgt i32 %1185, %919
  %1188 = select i1 %1186, i1 true, i1 %1187
  br i1 %1188, label %1189, label %1191

1189:                                             ; preds = %1183
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1190 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

1191:                                             ; preds = %1183
  %1192 = icmp slt i32 %1185, %919
  br i1 %1192, label %1201, label %1193

1193:                                             ; preds = %1191
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %1194 = load i32, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  %1195 = add nsw i32 %1194, 1
  store i32 %1195, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  %1196 = load i32, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !25
  %1197 = icmp eq i32 %1195, %1196
  br i1 %1197, label %1198, label %1201

1198:                                             ; preds = %1193
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  %1199 = load i32, ptr @_ZZ9jpegModelR5MixerE3row, align 4, !tbaa !25
  %1200 = add nsw i32 %1199, 1
  store i32 %1200, ptr @_ZZ9jpegModelR5MixerE3row, align 4, !tbaa !25
  br label %1201

1201:                                             ; preds = %1193, %1198, %1191
  %1202 = phi i32 [ 0, %1193 ], [ 0, %1198 ], [ %1185, %1191 ]
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  store i32 -1, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !25
  %1203 = lshr i32 %1202, 6
  %1204 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4qmap, i64 0, i32 3), align 8, !tbaa !61
  %1205 = zext i32 %1203 to i64
  %1206 = getelementptr inbounds i32, ptr %1204, i64 %1205
  %1207 = load i32, ptr %1206, align 4, !tbaa !25
  %1208 = shl nsw i32 %1207, 6
  %1209 = and i32 %1202, 63
  %1210 = sub nsw i32 %1184, %1209
  %1211 = icmp eq i32 %1209, 0
  br i1 %1211, label %1212, label %1326

1212:                                             ; preds = %1201
  %1213 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumv2, align 16, !tbaa !25
  %1214 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumv3, align 16, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1213, i32 noundef %1214, ptr noundef nonnull align 4 dereferenceable(4) @_ZZ9jpegModelR5MixerE2kx, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 16))
  %1215 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumu2, align 16, !tbaa !25
  %1216 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumu3, align 16, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1215, i32 noundef %1216, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 8), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 24))
  %1217 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 1), align 4, !tbaa !25
  %1218 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 1), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1217, i32 noundef %1218, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 1), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 17))
  %1219 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 1), align 4, !tbaa !25
  %1220 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 1), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1219, i32 noundef %1220, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 9), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 25))
  %1221 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 2), align 8, !tbaa !25
  %1222 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 2), align 8, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1221, i32 noundef %1222, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 2), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 18))
  %1223 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 2), align 8, !tbaa !25
  %1224 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 2), align 8, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1223, i32 noundef %1224, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 10), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 26))
  %1225 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 3), align 4, !tbaa !25
  %1226 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 3), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1225, i32 noundef %1226, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 3), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 19))
  %1227 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 3), align 4, !tbaa !25
  %1228 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 3), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1227, i32 noundef %1228, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 11), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 27))
  store <4 x i32> zeroinitializer, ptr @_ZZ9jpegModelR5MixerE5sumv3, align 16, !tbaa !25
  store <4 x i32> zeroinitializer, ptr @_ZZ9jpegModelR5MixerE5sumu3, align 16, !tbaa !25
  store <4 x i32> zeroinitializer, ptr @_ZZ9jpegModelR5MixerE5sumv2, align 16, !tbaa !25
  store <4 x i32> zeroinitializer, ptr @_ZZ9jpegModelR5MixerE5sumu2, align 16, !tbaa !25
  %1229 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 4), align 16, !tbaa !25
  %1230 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 4), align 16, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1229, i32 noundef %1230, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 4), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 20))
  %1231 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 4), align 16, !tbaa !25
  %1232 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 4), align 16, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1231, i32 noundef %1232, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 12), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 28))
  %1233 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 5), align 4, !tbaa !25
  %1234 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 5), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1233, i32 noundef %1234, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 5), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 21))
  %1235 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 5), align 4, !tbaa !25
  %1236 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 5), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1235, i32 noundef %1236, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 13), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 29))
  %1237 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 6), align 8, !tbaa !25
  %1238 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 6), align 8, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1237, i32 noundef %1238, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 6), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 22))
  %1239 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 6), align 8, !tbaa !25
  %1240 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 6), align 8, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1239, i32 noundef %1240, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 14), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 30))
  %1241 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 7), align 4, !tbaa !25
  %1242 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 7), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1241, i32 noundef %1242, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 7), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 23))
  %1243 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 7), align 4, !tbaa !25
  %1244 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 7), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1243, i32 noundef %1244, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 15), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 31))
  store <4 x i32> zeroinitializer, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 4), align 16, !tbaa !25
  store <4 x i32> zeroinitializer, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 4), align 16, !tbaa !25
  store <4 x i32> zeroinitializer, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 4), align 16, !tbaa !25
  store <4 x i32> zeroinitializer, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 4), align 16, !tbaa !25
  %1245 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8, !tbaa !61
  %1246 = getelementptr inbounds i32, ptr %1245, i64 %1205
  %1247 = load i32, ptr %1246, align 4, !tbaa !25
  %1248 = sub i32 %1210, %1247
  %1249 = load i32, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !25
  %1250 = mul nsw i32 %1249, %919
  %1251 = sub i32 %1210, %1250
  %1252 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4qtab, i64 0, i32 3), align 8, !tbaa !22
  %1253 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1254 = add nsw i32 %1253, -1
  %1255 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %1256 = sext i32 %1208 to i64
  br label %1257

1257:                                             ; preds = %1212, %1257
  %1258 = phi i64 [ 0, %1212 ], [ %1324, %1257 ]
  %1259 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1258
  %1260 = load i8, ptr %1259, align 1, !tbaa !9
  %1261 = zext i8 %1260 to i64
  %1262 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %1261
  %1263 = load i32, ptr %1262, align 4, !tbaa !25
  %1264 = lshr i64 2978192880766211435, %1258
  %1265 = and i64 %1264, 1
  %1266 = icmp eq i64 %1265, 0
  %1267 = sub nsw i32 0, %1263
  %1268 = select i1 %1266, i32 %1267, i32 %1263
  %1269 = add nuw nsw i64 %1258, %1256
  %1270 = getelementptr inbounds i8, ptr %1252, i64 %1269
  %1271 = load i8, ptr %1270, align 1, !tbaa !9
  %1272 = zext i8 %1271 to i32
  %1273 = add nuw nsw i32 %1272, 1
  %1274 = trunc i64 %1258 to i32
  %1275 = add i32 %1251, %1274
  %1276 = and i32 %1254, %1275
  %1277 = sext i32 %1276 to i64
  %1278 = getelementptr inbounds i32, ptr %1255, i64 %1277
  %1279 = load i32, ptr %1278, align 4, !tbaa !25
  %1280 = mul i32 %1279, %1273
  %1281 = mul i32 %1280, %1268
  %1282 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1258
  %1283 = load i8, ptr %1282, align 1, !tbaa !9
  %1284 = zext i8 %1283 to i64
  %1285 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 %1284
  %1286 = load i32, ptr %1285, align 4, !tbaa !25
  %1287 = add nsw i32 %1286, %1281
  store i32 %1287, ptr %1285, align 4, !tbaa !25
  %1288 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %1284
  %1289 = load i32, ptr %1288, align 4, !tbaa !25
  %1290 = lshr i64 5374292623298483885, %1258
  %1291 = and i64 %1290, 1
  %1292 = icmp eq i64 %1291, 0
  %1293 = sub nsw i32 0, %1289
  %1294 = select i1 %1292, i32 %1293, i32 %1289
  %1295 = trunc i64 %1258 to i32
  %1296 = add i32 %1248, %1295
  %1297 = and i32 %1254, %1296
  %1298 = sext i32 %1297 to i64
  %1299 = getelementptr inbounds i32, ptr %1255, i64 %1298
  %1300 = load i32, ptr %1299, align 4, !tbaa !25
  %1301 = mul i32 %1300, %1273
  %1302 = mul i32 %1301, %1294
  %1303 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 %1261
  %1304 = load i32, ptr %1303, align 4, !tbaa !25
  %1305 = add nsw i32 %1302, %1304
  store i32 %1305, ptr %1303, align 4, !tbaa !25
  %1306 = lshr i64 402702435, %1258
  %1307 = and i64 %1306, 1
  %1308 = icmp eq i64 %1307, 0
  %1309 = select i1 %1266, i32 -256, i32 256
  %1310 = select i1 %1308, i32 %1309, i32 181
  %1311 = mul i32 %1280, %1310
  %1312 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 %1284
  %1313 = load i32, ptr %1312, align 4, !tbaa !25
  %1314 = add nsw i32 %1313, %1311
  store i32 %1314, ptr %1312, align 4, !tbaa !25
  %1315 = lshr i64 34362885645, %1258
  %1316 = and i64 %1315, 1
  %1317 = icmp eq i64 %1316, 0
  %1318 = select i1 %1292, i32 -256, i32 256
  %1319 = select i1 %1317, i32 %1318, i32 181
  %1320 = mul i32 %1301, %1319
  %1321 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 %1261
  %1322 = load i32, ptr %1321, align 4, !tbaa !25
  %1323 = add nsw i32 %1322, %1320
  store i32 %1323, ptr %1321, align 4, !tbaa !25
  %1324 = add nuw nsw i64 %1258, 1
  %1325 = icmp eq i64 %1324, 64
  br i1 %1325, label %1379, label %1257, !llvm.loop !142

1326:                                             ; preds = %1201
  %1327 = add nsw i32 %1209, -1
  %1328 = zext i32 %1327 to i64
  %1329 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1328
  %1330 = load i8, ptr %1329, align 1, !tbaa !9
  %1331 = zext i8 %1330 to i64
  %1332 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %1331
  %1333 = load i32, ptr %1332, align 4, !tbaa !25
  %1334 = add nuw i32 %1327, %1208
  %1335 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4qtab, i64 0, i32 3), align 8, !tbaa !22
  %1336 = sext i32 %1334 to i64
  %1337 = getelementptr inbounds i8, ptr %1335, i64 %1336
  %1338 = load i8, ptr %1337, align 1, !tbaa !9
  %1339 = zext i8 %1338 to i32
  %1340 = xor i32 %1339, -1
  %1341 = add nsw i32 %1184, -1
  %1342 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1343 = add nsw i32 %1342, -1
  %1344 = and i32 %1343, %1341
  %1345 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %1346 = sext i32 %1344 to i64
  %1347 = getelementptr inbounds i32, ptr %1345, i64 %1346
  %1348 = load i32, ptr %1347, align 4, !tbaa !25
  %1349 = mul i32 %1348, %1340
  %1350 = mul i32 %1349, %1333
  %1351 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1328
  %1352 = load i8, ptr %1351, align 1, !tbaa !9
  %1353 = zext i8 %1352 to i64
  %1354 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 %1353
  %1355 = load i32, ptr %1354, align 4, !tbaa !25
  %1356 = add i32 %1355, %1350
  store i32 %1356, ptr %1354, align 4, !tbaa !25
  %1357 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %1353
  %1358 = load i32, ptr %1357, align 4, !tbaa !25
  %1359 = mul i32 %1349, %1358
  %1360 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 %1331
  %1361 = load i32, ptr %1360, align 4, !tbaa !25
  %1362 = add i32 %1359, %1361
  store i32 %1362, ptr %1360, align 4, !tbaa !25
  %1363 = lshr i64 402702435, %1328
  %1364 = and i64 %1363, 1
  %1365 = icmp eq i64 %1364, 0
  %1366 = select i1 %1365, i32 256, i32 181
  %1367 = mul i32 %1349, %1366
  %1368 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 %1353
  %1369 = load i32, ptr %1368, align 4, !tbaa !25
  %1370 = add i32 %1369, %1367
  store i32 %1370, ptr %1368, align 4, !tbaa !25
  %1371 = lshr i64 34362885645, %1328
  %1372 = and i64 %1371, 1
  %1373 = icmp eq i64 %1372, 0
  %1374 = select i1 %1373, i32 256, i32 181
  %1375 = mul i32 %1349, %1374
  %1376 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 %1331
  %1377 = load i32, ptr %1376, align 4, !tbaa !25
  %1378 = add i32 %1377, %1375
  store i32 %1378, ptr %1376, align 4, !tbaa !25
  br label %1379

1379:                                             ; preds = %1257, %1326
  %1380 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4sumv, i64 0, i32 3), align 8, !tbaa !61
  %1381 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4sumu, i64 0, i32 3), align 8, !tbaa !61
  %1382 = load i32, ptr @_ZZ9jpegModelR5MixerE2kx, align 16, !tbaa !25
  %1383 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumv2, align 16, !tbaa !25
  %1384 = mul nsw i32 %1383, %1382
  %1385 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumv3, align 16, !tbaa !25
  %1386 = sub nsw i32 8, %1382
  %1387 = mul nsw i32 %1385, %1386
  %1388 = add nsw i32 %1387, %1384
  %1389 = sdiv i32 %1388, 8
  store i32 %1389, ptr %1380, align 4, !tbaa !25
  %1390 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 8), align 16, !tbaa !25
  %1391 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumu2, align 16, !tbaa !25
  %1392 = mul nsw i32 %1391, %1390
  %1393 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumu3, align 16, !tbaa !25
  %1394 = sub nsw i32 8, %1390
  %1395 = mul nsw i32 %1393, %1394
  %1396 = add nsw i32 %1395, %1392
  %1397 = sdiv i32 %1396, 8
  store i32 %1397, ptr %1381, align 4, !tbaa !25
  %1398 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 1), align 4, !tbaa !25
  %1399 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 1), align 4, !tbaa !25
  %1400 = mul nsw i32 %1399, %1398
  %1401 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 1), align 4, !tbaa !25
  %1402 = sub nsw i32 8, %1398
  %1403 = mul nsw i32 %1401, %1402
  %1404 = add nsw i32 %1403, %1400
  %1405 = sdiv i32 %1404, 8
  %1406 = getelementptr inbounds i32, ptr %1380, i64 1
  store i32 %1405, ptr %1406, align 4, !tbaa !25
  %1407 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 9), align 4, !tbaa !25
  %1408 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 1), align 4, !tbaa !25
  %1409 = mul nsw i32 %1408, %1407
  %1410 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 1), align 4, !tbaa !25
  %1411 = sub nsw i32 8, %1407
  %1412 = mul nsw i32 %1410, %1411
  %1413 = add nsw i32 %1412, %1409
  %1414 = sdiv i32 %1413, 8
  %1415 = getelementptr inbounds i32, ptr %1381, i64 1
  store i32 %1414, ptr %1415, align 4, !tbaa !25
  %1416 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 2), align 8, !tbaa !25
  %1417 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 2), align 8, !tbaa !25
  %1418 = mul nsw i32 %1417, %1416
  %1419 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 2), align 8, !tbaa !25
  %1420 = sub nsw i32 8, %1416
  %1421 = mul nsw i32 %1419, %1420
  %1422 = add nsw i32 %1421, %1418
  %1423 = sdiv i32 %1422, 8
  %1424 = getelementptr inbounds i32, ptr %1380, i64 2
  store i32 %1423, ptr %1424, align 4, !tbaa !25
  %1425 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 10), align 8, !tbaa !25
  %1426 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 2), align 8, !tbaa !25
  %1427 = mul nsw i32 %1426, %1425
  %1428 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 2), align 8, !tbaa !25
  %1429 = sub nsw i32 8, %1425
  %1430 = mul nsw i32 %1428, %1429
  %1431 = add nsw i32 %1430, %1427
  %1432 = sdiv i32 %1431, 8
  %1433 = getelementptr inbounds i32, ptr %1381, i64 2
  store i32 %1432, ptr %1433, align 4, !tbaa !25
  %1434 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 3), align 4, !tbaa !25
  %1435 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 3), align 4, !tbaa !25
  %1436 = mul nsw i32 %1435, %1434
  %1437 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 3), align 4, !tbaa !25
  %1438 = sub nsw i32 8, %1434
  %1439 = mul nsw i32 %1437, %1438
  %1440 = add nsw i32 %1439, %1436
  %1441 = sdiv i32 %1440, 8
  %1442 = getelementptr inbounds i32, ptr %1380, i64 3
  store i32 %1441, ptr %1442, align 4, !tbaa !25
  %1443 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 11), align 4, !tbaa !25
  %1444 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 3), align 4, !tbaa !25
  %1445 = mul nsw i32 %1444, %1443
  %1446 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 3), align 4, !tbaa !25
  %1447 = sub nsw i32 8, %1443
  %1448 = mul nsw i32 %1446, %1447
  %1449 = add nsw i32 %1448, %1445
  %1450 = sdiv i32 %1449, 8
  %1451 = getelementptr inbounds i32, ptr %1381, i64 3
  store i32 %1450, ptr %1451, align 4, !tbaa !25
  %1452 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 4), align 16, !tbaa !25
  %1453 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 4), align 16, !tbaa !25
  %1454 = mul nsw i32 %1453, %1452
  %1455 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 4), align 16, !tbaa !25
  %1456 = sub nsw i32 8, %1452
  %1457 = mul nsw i32 %1455, %1456
  %1458 = add nsw i32 %1457, %1454
  %1459 = sdiv i32 %1458, 8
  %1460 = getelementptr inbounds i32, ptr %1380, i64 4
  store i32 %1459, ptr %1460, align 4, !tbaa !25
  %1461 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 12), align 16, !tbaa !25
  %1462 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 4), align 16, !tbaa !25
  %1463 = mul nsw i32 %1462, %1461
  %1464 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 4), align 16, !tbaa !25
  %1465 = sub nsw i32 8, %1461
  %1466 = mul nsw i32 %1464, %1465
  %1467 = add nsw i32 %1466, %1463
  %1468 = sdiv i32 %1467, 8
  %1469 = getelementptr inbounds i32, ptr %1381, i64 4
  store i32 %1468, ptr %1469, align 4, !tbaa !25
  %1470 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 5), align 4, !tbaa !25
  %1471 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 5), align 4, !tbaa !25
  %1472 = mul nsw i32 %1471, %1470
  %1473 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 5), align 4, !tbaa !25
  %1474 = sub nsw i32 8, %1470
  %1475 = mul nsw i32 %1473, %1474
  %1476 = add nsw i32 %1475, %1472
  %1477 = sdiv i32 %1476, 8
  %1478 = getelementptr inbounds i32, ptr %1380, i64 5
  store i32 %1477, ptr %1478, align 4, !tbaa !25
  %1479 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 13), align 4, !tbaa !25
  %1480 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 5), align 4, !tbaa !25
  %1481 = mul nsw i32 %1480, %1479
  %1482 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 5), align 4, !tbaa !25
  %1483 = sub nsw i32 8, %1479
  %1484 = mul nsw i32 %1482, %1483
  %1485 = add nsw i32 %1484, %1481
  %1486 = sdiv i32 %1485, 8
  %1487 = getelementptr inbounds i32, ptr %1381, i64 5
  store i32 %1486, ptr %1487, align 4, !tbaa !25
  %1488 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 6), align 8, !tbaa !25
  %1489 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 6), align 8, !tbaa !25
  %1490 = mul nsw i32 %1489, %1488
  %1491 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 6), align 8, !tbaa !25
  %1492 = sub nsw i32 8, %1488
  %1493 = mul nsw i32 %1491, %1492
  %1494 = add nsw i32 %1493, %1490
  %1495 = sdiv i32 %1494, 8
  %1496 = getelementptr inbounds i32, ptr %1380, i64 6
  store i32 %1495, ptr %1496, align 4, !tbaa !25
  %1497 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 14), align 8, !tbaa !25
  %1498 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 6), align 8, !tbaa !25
  %1499 = mul nsw i32 %1498, %1497
  %1500 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 6), align 8, !tbaa !25
  %1501 = sub nsw i32 8, %1497
  %1502 = mul nsw i32 %1500, %1501
  %1503 = add nsw i32 %1502, %1499
  %1504 = sdiv i32 %1503, 8
  %1505 = getelementptr inbounds i32, ptr %1381, i64 6
  store i32 %1504, ptr %1505, align 4, !tbaa !25
  %1506 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 7), align 4, !tbaa !25
  %1507 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 7), align 4, !tbaa !25
  %1508 = mul nsw i32 %1507, %1506
  %1509 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 7), align 4, !tbaa !25
  %1510 = sub nsw i32 8, %1506
  %1511 = mul nsw i32 %1509, %1510
  %1512 = add nsw i32 %1511, %1508
  %1513 = sdiv i32 %1512, 8
  %1514 = getelementptr inbounds i32, ptr %1380, i64 7
  store i32 %1513, ptr %1514, align 4, !tbaa !25
  %1515 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 15), align 4, !tbaa !25
  %1516 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 7), align 4, !tbaa !25
  %1517 = mul nsw i32 %1516, %1515
  %1518 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 7), align 4, !tbaa !25
  %1519 = sub nsw i32 8, %1515
  %1520 = mul nsw i32 %1518, %1519
  %1521 = add nsw i32 %1520, %1517
  %1522 = sdiv i32 %1521, 8
  %1523 = getelementptr inbounds i32, ptr %1381, i64 7
  store i32 %1522, ptr %1523, align 4, !tbaa !25
  %1524 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4sumu, i64 0, i32 3), align 8, !tbaa !61
  %1525 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4sumv, i64 0, i32 3), align 8, !tbaa !61
  %1526 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4qtab, i64 0, i32 3), align 8, !tbaa !22
  %1527 = zext i32 %1209 to i64
  %1528 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1527
  %1529 = load i8, ptr %1528, align 1, !tbaa !9
  %1530 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1527
  %1531 = load i8, ptr %1530, align 1, !tbaa !9
  %1532 = zext i8 %1529 to i64
  %1533 = getelementptr inbounds i32, ptr %1524, i64 %1532
  %1534 = zext i8 %1531 to i64
  %1535 = getelementptr inbounds i32, ptr %1525, i64 %1534
  %1536 = or i32 %1209, %1208
  %1537 = sext i32 %1536 to i64
  %1538 = getelementptr inbounds i8, ptr %1526, i64 %1537
  br label %1539

1539:                                             ; preds = %1379, %1670
  %1540 = phi i64 [ 0, %1379 ], [ %1671, %1670 ]
  %1541 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8
  %1542 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8
  %1543 = getelementptr inbounds i32, ptr %1542, i64 %1205
  %1544 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8
  %1545 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE8adv_pred, i64 0, i32 3), align 8
  %1546 = getelementptr inbounds i32, ptr %1545, i64 %1540
  %1547 = add nuw nsw i64 %1540, 4
  %1548 = getelementptr inbounds i32, ptr %1545, i64 %1547
  %1549 = load i32, ptr %1533, align 4, !tbaa !25
  %1550 = trunc i64 %1540 to i32
  %1551 = mul nsw i32 %1549, %1550
  %1552 = load i32, ptr %1535, align 4, !tbaa !25
  %1553 = trunc i64 %1540 to i32
  %1554 = sub i32 2, %1553
  %1555 = mul nsw i32 %1552, %1554
  %1556 = add nsw i32 %1555, %1551
  %1557 = sdiv i32 %1556, 2
  %1558 = load i8, ptr %1538, align 1, !tbaa !9
  %1559 = zext i8 %1558 to i32
  %1560 = mul nuw nsw i32 %1559, 181
  %1561 = add nuw nsw i32 %1560, 181
  %1562 = sdiv i32 %1557, %1561
  br i1 %1211, label %1563, label %1573

1563:                                             ; preds = %1539
  %1564 = load i32, ptr %1543, align 4, !tbaa !25
  %1565 = sub nsw i32 %1210, %1564
  %1566 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1567 = add nsw i32 %1566, -1
  %1568 = and i32 %1567, %1565
  %1569 = sext i32 %1568 to i64
  %1570 = getelementptr inbounds i32, ptr %1544, i64 %1569
  %1571 = load i32, ptr %1570, align 4, !tbaa !25
  %1572 = sub nsw i32 %1562, %1571
  br label %1573

1573:                                             ; preds = %1539, %1563
  %1574 = phi i32 [ %1572, %1563 ], [ %1562, %1539 ]
  %1575 = phi i32 [ 14, %1563 ], [ 10, %1539 ]
  %1576 = tail call i32 @llvm.abs.i32(i32 %1574, i1 true)
  %1577 = mul i32 %1576, %1575
  %1578 = and i32 %1577, 65534
  %1579 = or i32 %1578, 1
  %1580 = zext i32 %1579 to i64
  %1581 = getelementptr inbounds i8, ptr %1541, i64 %1580
  %1582 = load i8, ptr %1581, align 1, !tbaa !9
  %1583 = zext i8 %1582 to i32
  %1584 = sub nsw i32 0, %1583
  %1585 = icmp slt i32 %1574, 0
  %1586 = select i1 %1585, i32 %1584, i32 %1583
  %1587 = trunc i32 %1586 to i16
  %1588 = sdiv i16 %1587, 10
  %1589 = sext i16 %1588 to i32
  store i32 %1589, ptr %1546, align 4, !tbaa !25
  %1590 = sdiv i16 %1587, 40
  %1591 = sext i16 %1590 to i32
  store i32 %1591, ptr %1548, align 4, !tbaa !25
  %1592 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8
  %1593 = add nsw i32 %1592, -1
  %1594 = tail call i32 @llvm.abs.i32(i32 %1589, i1 true)
  %1595 = add nuw nsw i32 %1594, 1
  br label %1596

1596:                                             ; preds = %1573, %1667
  %1597 = phi i32 [ 1, %1573 ], [ %1668, %1667 ]
  %1598 = add nuw nsw i32 %1597, %1209
  %1599 = tail call i32 @llvm.smin.i32(i32 %1598, i32 63)
  %1600 = zext i32 %1599 to i64
  %1601 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1600
  %1602 = load i8, ptr %1601, align 1, !tbaa !9
  %1603 = zext i8 %1602 to i64
  %1604 = getelementptr inbounds i32, ptr %1524, i64 %1603
  %1605 = load i32, ptr %1604, align 4, !tbaa !25
  %1606 = mul nsw i32 %1605, %1550
  %1607 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1600
  %1608 = load i8, ptr %1607, align 1, !tbaa !9
  %1609 = zext i8 %1608 to i64
  %1610 = getelementptr inbounds i32, ptr %1525, i64 %1609
  %1611 = load i32, ptr %1610, align 4, !tbaa !25
  %1612 = mul nsw i32 %1611, %1554
  %1613 = add nsw i32 %1612, %1606
  %1614 = sdiv i32 %1613, 2
  %1615 = or i32 %1599, %1208
  %1616 = sext i32 %1615 to i64
  %1617 = getelementptr inbounds i8, ptr %1526, i64 %1616
  %1618 = load i8, ptr %1617, align 1, !tbaa !9
  %1619 = zext i8 %1618 to i32
  %1620 = mul nuw nsw i32 %1619, 181
  %1621 = add nuw nsw i32 %1620, 181
  %1622 = sdiv i32 %1614, %1621
  %1623 = icmp eq i32 %1599, 0
  br i1 %1623, label %1624, label %1632

1624:                                             ; preds = %1596
  %1625 = load i32, ptr %1543, align 4, !tbaa !25
  %1626 = sub nsw i32 %1210, %1625
  %1627 = and i32 %1593, %1626
  %1628 = sext i32 %1627 to i64
  %1629 = getelementptr inbounds i32, ptr %1544, i64 %1628
  %1630 = load i32, ptr %1629, align 4, !tbaa !25
  %1631 = sub nsw i32 %1622, %1630
  br label %1632

1632:                                             ; preds = %1596, %1624
  %1633 = phi i32 [ %1631, %1624 ], [ %1622, %1596 ]
  %1634 = phi i32 [ 14, %1624 ], [ 10, %1596 ]
  %1635 = tail call i32 @llvm.abs.i32(i32 %1633, i1 true)
  %1636 = mul i32 %1635, %1634
  %1637 = and i32 %1636, 65534
  %1638 = or i32 %1637, 1
  %1639 = zext i32 %1638 to i64
  %1640 = getelementptr inbounds i8, ptr %1541, i64 %1639
  %1641 = load i8, ptr %1640, align 1, !tbaa !9
  %1642 = zext i8 %1641 to i32
  %1643 = sub nsw i32 0, %1642
  %1644 = icmp slt i32 %1633, 0
  %1645 = select i1 %1644, i32 %1643, i32 %1642
  %1646 = trunc i32 %1645 to i16
  %1647 = sdiv i16 %1646, 10
  %1648 = tail call i16 @llvm.abs.i16(i16 %1647, i1 true)
  %1649 = zext i16 %1648 to i32
  %1650 = icmp ult i32 %1595, %1649
  br i1 %1650, label %1651, label %1667

1651:                                             ; preds = %1632
  %1652 = icmp sgt i32 %1645, 9
  %1653 = shl nuw nsw i32 %1597, 7
  %1654 = select i1 %1652, i32 64, i32 0
  %1655 = or i32 %1654, %1653
  %1656 = add nsw i32 %1655, %1589
  store i32 %1656, ptr %1546, align 4, !tbaa !25
  %1657 = trunc i32 %1645 to i16
  %1658 = sdiv i16 %1657, 40
  %1659 = tail call i16 @llvm.abs.i16(i16 %1658, i1 true)
  %1660 = zext i16 %1659 to i32
  %1661 = load i32, ptr %1548, align 4, !tbaa !25
  %1662 = tail call i32 @llvm.abs.i32(i32 %1661, i1 true)
  %1663 = add nuw nsw i32 %1662, 1
  %1664 = icmp ult i32 %1663, %1660
  br i1 %1664, label %1665, label %1670

1665:                                             ; preds = %1651
  %1666 = add nsw i32 %1661, %1655
  store i32 %1666, ptr %1548, align 4, !tbaa !25
  br label %1670

1667:                                             ; preds = %1632
  %1668 = add nuw nsw i32 %1597, 1
  %1669 = icmp eq i32 %1668, 8
  br i1 %1669, label %1670, label %1596, !llvm.loop !143

1670:                                             ; preds = %1667, %1665, %1651
  %1671 = add nuw nsw i64 %1540, 1
  %1672 = icmp eq i64 %1671, 3
  br i1 %1672, label %1673, label %1539, !llvm.loop !144

1673:                                             ; preds = %1670
  %1674 = zext i8 %1529 to i64
  %1675 = getelementptr inbounds i32, ptr %1524, i64 %1674
  %1676 = zext i8 %1531 to i64
  %1677 = getelementptr inbounds i32, ptr %1525, i64 %1676
  %1678 = getelementptr inbounds i8, ptr %1526, i64 %1537
  %1679 = zext i8 %1529 to i32
  %1680 = load i32, ptr %1675, align 4, !tbaa !25
  %1681 = zext i8 %1531 to i32
  %1682 = load i32, ptr %1677, align 4, !tbaa !25
  %1683 = add i32 %1682, %1680
  %1684 = shl i32 %1683, 1
  %1685 = lshr i64 34362885645, %1527
  %1686 = and i64 %1685, 1
  %1687 = icmp eq i64 %1686, 0
  br i1 %1687, label %1692, label %1688

1688:                                             ; preds = %1673
  %1689 = getelementptr inbounds i32, ptr %1524, i64 1
  %1690 = load i32, ptr %1689, align 4, !tbaa !25
  %1691 = sub nsw i32 %1684, %1690
  br label %1692

1692:                                             ; preds = %1688, %1673
  %1693 = phi i32 [ %1691, %1688 ], [ %1684, %1673 ]
  %1694 = lshr i64 402702435, %1527
  %1695 = and i64 %1694, 1
  %1696 = icmp eq i64 %1695, 0
  br i1 %1696, label %1701, label %1697

1697:                                             ; preds = %1692
  %1698 = getelementptr inbounds i32, ptr %1525, i64 1
  %1699 = load i32, ptr %1698, align 4, !tbaa !25
  %1700 = sub nsw i32 %1693, %1699
  br label %1701

1701:                                             ; preds = %1697, %1692
  %1702 = phi i32 [ %1700, %1697 ], [ %1693, %1692 ]
  %1703 = lshr i64 120266952479, %1527
  %1704 = and i64 %1703, 1
  %1705 = icmp eq i64 %1704, 0
  br i1 %1705, label %1710, label %1706

1706:                                             ; preds = %1701
  %1707 = getelementptr inbounds i32, ptr %1524, i64 2
  %1708 = load i32, ptr %1707, align 4, !tbaa !25
  %1709 = sub nsw i32 %1702, %1708
  br label %1710

1710:                                             ; preds = %1706, %1701
  %1711 = phi i32 [ %1709, %1706 ], [ %1702, %1701 ]
  %1712 = lshr i64 4399053267191, %1527
  %1713 = and i64 %1712, 1
  %1714 = icmp eq i64 %1713, 0
  br i1 %1714, label %1719, label %1715

1715:                                             ; preds = %1710
  %1716 = getelementptr inbounds i32, ptr %1525, i64 2
  %1717 = load i32, ptr %1716, align 4, !tbaa !25
  %1718 = sub nsw i32 %1711, %1717
  br label %1719

1719:                                             ; preds = %1715, %1710
  %1720 = phi i32 [ %1718, %1715 ], [ %1711, %1710 ]
  %1721 = lshr i64 281741281206207, %1527
  %1722 = and i64 %1721, 1
  %1723 = icmp eq i64 %1722, 0
  br i1 %1723, label %1728, label %1724

1724:                                             ; preds = %1719
  %1725 = getelementptr inbounds i32, ptr %1524, i64 3
  %1726 = load i32, ptr %1725, align 4, !tbaa !25
  %1727 = sub nsw i32 %1720, %1726
  br label %1728

1728:                                             ; preds = %1724, %1719
  %1729 = phi i32 [ %1727, %1724 ], [ %1720, %1719 ]
  %1730 = lshr i64 15395276976639, %1527
  %1731 = and i64 %1730, 1
  %1732 = icmp eq i64 %1731, 0
  br i1 %1732, label %1737, label %1733

1733:                                             ; preds = %1728
  %1734 = getelementptr inbounds i32, ptr %1525, i64 3
  %1735 = load i32, ptr %1734, align 4, !tbaa !25
  %1736 = sub nsw i32 %1729, %1735
  br label %1737

1737:                                             ; preds = %1733, %1728
  %1738 = phi i32 [ %1736, %1733 ], [ %1729, %1728 ]
  %1739 = lshr i64 985707912773631, %1527
  %1740 = and i64 %1739, 1
  %1741 = icmp eq i64 %1740, 0
  br i1 %1741, label %1746, label %1742

1742:                                             ; preds = %1737
  %1743 = getelementptr inbounds i32, ptr %1524, i64 4
  %1744 = load i32, ptr %1743, align 4, !tbaa !25
  %1745 = sub nsw i32 %1738, %1744
  br label %1746

1746:                                             ; preds = %1742, %1737
  %1747 = phi i32 [ %1745, %1742 ], [ %1738, %1737 ]
  %1748 = lshr i64 9041288393915391, %1527
  %1749 = and i64 %1748, 1
  %1750 = icmp eq i64 %1749, 0
  br i1 %1750, label %1755, label %1751

1751:                                             ; preds = %1746
  %1752 = getelementptr inbounds i32, ptr %1525, i64 4
  %1753 = load i32, ptr %1752, align 4, !tbaa !25
  %1754 = sub nsw i32 %1747, %1753
  br label %1755

1755:                                             ; preds = %1751, %1746
  %1756 = phi i32 [ %1754, %1751 ], [ %1747, %1746 ]
  %1757 = lshr i64 146297716576583679, %1527
  %1758 = and i64 %1757, 1
  %1759 = icmp eq i64 %1758, 0
  br i1 %1759, label %1764, label %1760

1760:                                             ; preds = %1755
  %1761 = getelementptr inbounds i32, ptr %1524, i64 5
  %1762 = load i32, ptr %1761, align 4, !tbaa !25
  %1763 = sub nsw i32 %1756, %1762
  br label %1764

1764:                                             ; preds = %1760, %1755
  %1765 = phi i32 [ %1763, %1760 ], [ %1756, %1755 ]
  %1766 = lshr i64 31595024962551807, %1527
  %1767 = and i64 %1766, 1
  %1768 = icmp eq i64 %1767, 0
  br i1 %1768, label %1773, label %1769

1769:                                             ; preds = %1764
  %1770 = getelementptr inbounds i32, ptr %1525, i64 5
  %1771 = load i32, ptr %1770, align 4, !tbaa !25
  %1772 = sub nsw i32 %1765, %1771
  br label %1773

1773:                                             ; preds = %1769, %1764
  %1774 = phi i32 [ %1772, %1769 ], [ %1765, %1764 ]
  %1775 = lshr i64 508873771604508671, %1527
  %1776 = and i64 %1775, 1
  %1777 = icmp eq i64 %1776, 0
  br i1 %1777, label %1782, label %1778

1778:                                             ; preds = %1773
  %1779 = getelementptr inbounds i32, ptr %1524, i64 6
  %1780 = load i32, ptr %1779, align 4, !tbaa !25
  %1781 = sub nsw i32 %1774, %1780
  br label %1782

1782:                                             ; preds = %1778, %1773
  %1783 = phi i32 [ %1781, %1778 ], [ %1774, %1773 ]
  %1784 = lshr i64 1222867778619310079, %1527
  %1785 = and i64 %1784, 1
  %1786 = icmp eq i64 %1785, 0
  br i1 %1786, label %1791, label %1787

1787:                                             ; preds = %1782
  %1788 = getelementptr inbounds i32, ptr %1525, i64 6
  %1789 = load i32, ptr %1788, align 4, !tbaa !25
  %1790 = sub nsw i32 %1783, %1789
  br label %1791

1791:                                             ; preds = %1787, %1782
  %1792 = phi i32 [ %1790, %1787 ], [ %1783, %1782 ]
  %1793 = lshr i64 5737572730862043135, %1527
  %1794 = and i64 %1793, 1
  %1795 = icmp eq i64 %1794, 0
  br i1 %1795, label %1800, label %1796

1796:                                             ; preds = %1791
  %1797 = getelementptr inbounds i32, ptr %1524, i64 7
  %1798 = load i32, ptr %1797, align 4, !tbaa !25
  %1799 = sub nsw i32 %1792, %1798
  br label %1800

1800:                                             ; preds = %1796, %1791
  %1801 = phi i32 [ %1799, %1796 ], [ %1792, %1791 ]
  %1802 = lshr i64 4178495926190473215, %1527
  %1803 = and i64 %1802, 1
  %1804 = icmp eq i64 %1803, 0
  br i1 %1804, label %1809, label %1805

1805:                                             ; preds = %1800
  %1806 = getelementptr inbounds i32, ptr %1525, i64 7
  %1807 = load i32, ptr %1806, align 4, !tbaa !25
  %1808 = sub nsw i32 %1801, %1807
  br label %1809

1809:                                             ; preds = %1805, %1800
  %1810 = phi i32 [ %1808, %1805 ], [ %1801, %1800 ]
  %1811 = load i8, ptr %1678, align 1, !tbaa !9
  %1812 = zext i8 %1811 to i32
  %1813 = mul nuw nsw i32 %1812, 181
  %1814 = add nuw nsw i32 %1813, 181
  %1815 = sdiv i32 %1810, %1814
  br i1 %1211, label %1816, label %1829

1816:                                             ; preds = %1809
  %1817 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8, !tbaa !61
  %1818 = getelementptr inbounds i32, ptr %1817, i64 %1205
  %1819 = load i32, ptr %1818, align 4, !tbaa !25
  %1820 = sub nsw i32 %1210, %1819
  %1821 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1822 = add nsw i32 %1821, -1
  %1823 = and i32 %1822, %1820
  %1824 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %1825 = sext i32 %1823 to i64
  %1826 = getelementptr inbounds i32, ptr %1824, i64 %1825
  %1827 = load i32, ptr %1826, align 4, !tbaa !25
  %1828 = sub nsw i32 %1815, %1827
  br label %1829

1829:                                             ; preds = %1816, %1809
  %1830 = phi i32 [ %1828, %1816 ], [ %1815, %1809 ]
  %1831 = tail call i32 @llvm.abs.i32(i32 %1830, i1 true)
  %1832 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %1833 = mul i32 %1831, 10
  %1834 = and i32 %1833, 65534
  %1835 = or i32 %1834, 1
  %1836 = zext i32 %1835 to i64
  %1837 = getelementptr inbounds i8, ptr %1832, i64 %1836
  %1838 = load i8, ptr %1837, align 1, !tbaa !9
  %1839 = zext i8 %1838 to i16
  %1840 = sub nsw i16 0, %1839
  %1841 = icmp slt i32 %1830, 0
  %1842 = select i1 %1841, i16 %1840, i16 %1839
  %1843 = sdiv i16 %1842, 10
  %1844 = sext i16 %1843 to i32
  %1845 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE8adv_pred, i64 0, i32 3), align 8, !tbaa !61
  %1846 = getelementptr inbounds i32, ptr %1845, i64 3
  store i32 %1844, ptr %1846, align 4, !tbaa !25
  %1847 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE3lcp, i64 0, i32 3), align 8, !tbaa !61
  %1848 = shl nuw nsw i32 %1681, 3
  %1849 = add nuw nsw i32 %1848, %1679
  %1850 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4zpos, i64 0, i32 3), align 8
  %1851 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8
  %1852 = lshr i64 34362885645, %1527
  %1853 = and i64 %1852, 1
  %1854 = icmp eq i64 %1853, 0
  br i1 %1854, label %1855, label %1891

1855:                                             ; preds = %1829
  %1856 = add nsw i32 %1849, -1
  %1857 = sext i32 %1856 to i64
  %1858 = getelementptr inbounds i32, ptr %1850, i64 %1857
  %1859 = load i32, ptr %1858, align 4, !tbaa !25
  %1860 = add nsw i32 %1859, %1208
  %1861 = sext i32 %1860 to i64
  %1862 = getelementptr inbounds i8, ptr %1526, i64 %1861
  %1863 = load i8, ptr %1862, align 1, !tbaa !9
  %1864 = zext i8 %1863 to i32
  %1865 = add nuw nsw i32 %1864, 1
  %1866 = add nsw i32 %1859, %1210
  %1867 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1868 = add nsw i32 %1867, -1
  %1869 = and i32 %1868, %1866
  %1870 = sext i32 %1869 to i64
  %1871 = getelementptr inbounds i32, ptr %1851, i64 %1870
  %1872 = load i32, ptr %1871, align 4, !tbaa !25
  %1873 = mul nsw i32 %1872, %1865
  %1874 = load i8, ptr %1678, align 1, !tbaa !9
  %1875 = zext i8 %1874 to i32
  %1876 = add nuw nsw i32 %1875, 1
  %1877 = sdiv i32 %1873, %1876
  %1878 = tail call i32 @llvm.abs.i32(i32 %1877, i1 true)
  %1879 = zext i32 %1878 to i64
  %1880 = shl nuw nsw i64 %1879, 3
  %1881 = and i64 %1880, 65528
  %1882 = or i64 %1881, 1
  %1883 = getelementptr inbounds i8, ptr %1832, i64 %1882
  %1884 = load i8, ptr %1883, align 1, !tbaa !9
  %1885 = zext i8 %1884 to i16
  %1886 = sub nsw i16 0, %1885
  %1887 = icmp slt i32 %1877, 0
  %1888 = select i1 %1887, i16 %1886, i16 %1885
  %1889 = sdiv i16 %1888, 8
  %1890 = sext i16 %1889 to i32
  br label %1891

1891:                                             ; preds = %1829, %1855
  %1892 = phi i32 [ %1890, %1855 ], [ 255, %1829 ]
  store i32 %1892, ptr %1847, align 4, !tbaa !25
  %1893 = lshr i64 402702435, %1527
  %1894 = and i64 %1893, 1
  %1895 = icmp eq i64 %1894, 0
  br i1 %1895, label %1896, label %1932

1896:                                             ; preds = %1891
  %1897 = add nsw i32 %1849, -8
  %1898 = sext i32 %1897 to i64
  %1899 = getelementptr inbounds i32, ptr %1850, i64 %1898
  %1900 = load i32, ptr %1899, align 4, !tbaa !25
  %1901 = add nsw i32 %1900, %1208
  %1902 = sext i32 %1901 to i64
  %1903 = getelementptr inbounds i8, ptr %1526, i64 %1902
  %1904 = load i8, ptr %1903, align 1, !tbaa !9
  %1905 = zext i8 %1904 to i32
  %1906 = add nuw nsw i32 %1905, 1
  %1907 = add nsw i32 %1900, %1210
  %1908 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1909 = add nsw i32 %1908, -1
  %1910 = and i32 %1909, %1907
  %1911 = sext i32 %1910 to i64
  %1912 = getelementptr inbounds i32, ptr %1851, i64 %1911
  %1913 = load i32, ptr %1912, align 4, !tbaa !25
  %1914 = mul nsw i32 %1913, %1906
  %1915 = load i8, ptr %1678, align 1, !tbaa !9
  %1916 = zext i8 %1915 to i32
  %1917 = add nuw nsw i32 %1916, 1
  %1918 = sdiv i32 %1914, %1917
  %1919 = tail call i32 @llvm.abs.i32(i32 %1918, i1 true)
  %1920 = zext i32 %1919 to i64
  %1921 = shl nuw nsw i64 %1920, 3
  %1922 = and i64 %1921, 65528
  %1923 = or i64 %1922, 1
  %1924 = getelementptr inbounds i8, ptr %1832, i64 %1923
  %1925 = load i8, ptr %1924, align 1, !tbaa !9
  %1926 = zext i8 %1925 to i16
  %1927 = sub nsw i16 0, %1926
  %1928 = icmp slt i32 %1918, 0
  %1929 = select i1 %1928, i16 %1927, i16 %1926
  %1930 = sdiv i16 %1929, 8
  %1931 = sext i16 %1930 to i32
  br label %1932

1932:                                             ; preds = %1896, %1891
  %1933 = phi i32 [ %1931, %1896 ], [ 255, %1891 ]
  %1934 = getelementptr inbounds i32, ptr %1847, i64 1
  store i32 %1933, ptr %1934, align 4, !tbaa !25
  %1935 = lshr i64 120266952479, %1527
  %1936 = and i64 %1935, 1
  %1937 = icmp eq i64 %1936, 0
  br i1 %1937, label %1938, label %1974

1938:                                             ; preds = %1932
  %1939 = add nsw i32 %1849, -2
  %1940 = sext i32 %1939 to i64
  %1941 = getelementptr inbounds i32, ptr %1850, i64 %1940
  %1942 = load i32, ptr %1941, align 4, !tbaa !25
  %1943 = add nsw i32 %1942, %1208
  %1944 = sext i32 %1943 to i64
  %1945 = getelementptr inbounds i8, ptr %1526, i64 %1944
  %1946 = load i8, ptr %1945, align 1, !tbaa !9
  %1947 = zext i8 %1946 to i32
  %1948 = add nuw nsw i32 %1947, 1
  %1949 = add nsw i32 %1942, %1210
  %1950 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1951 = add nsw i32 %1950, -1
  %1952 = and i32 %1951, %1949
  %1953 = sext i32 %1952 to i64
  %1954 = getelementptr inbounds i32, ptr %1851, i64 %1953
  %1955 = load i32, ptr %1954, align 4, !tbaa !25
  %1956 = mul nsw i32 %1955, %1948
  %1957 = load i8, ptr %1678, align 1, !tbaa !9
  %1958 = zext i8 %1957 to i32
  %1959 = add nuw nsw i32 %1958, 1
  %1960 = sdiv i32 %1956, %1959
  %1961 = tail call i32 @llvm.abs.i32(i32 %1960, i1 true)
  %1962 = zext i32 %1961 to i64
  %1963 = shl nuw nsw i64 %1962, 3
  %1964 = and i64 %1963, 65528
  %1965 = or i64 %1964, 1
  %1966 = getelementptr inbounds i8, ptr %1832, i64 %1965
  %1967 = load i8, ptr %1966, align 1, !tbaa !9
  %1968 = zext i8 %1967 to i16
  %1969 = sub nsw i16 0, %1968
  %1970 = icmp slt i32 %1960, 0
  %1971 = select i1 %1970, i16 %1969, i16 %1968
  %1972 = sdiv i16 %1971, 8
  %1973 = sext i16 %1972 to i32
  br label %1974

1974:                                             ; preds = %1938, %1932
  %1975 = phi i32 [ %1973, %1938 ], [ 255, %1932 ]
  %1976 = getelementptr inbounds i32, ptr %1847, i64 2
  store i32 %1975, ptr %1976, align 4, !tbaa !25
  %1977 = lshr i64 4399053267191, %1527
  %1978 = and i64 %1977, 1
  %1979 = icmp eq i64 %1978, 0
  br i1 %1979, label %1980, label %2016

1980:                                             ; preds = %1974
  %1981 = add nsw i32 %1849, -16
  %1982 = sext i32 %1981 to i64
  %1983 = getelementptr inbounds i32, ptr %1850, i64 %1982
  %1984 = load i32, ptr %1983, align 4, !tbaa !25
  %1985 = add nsw i32 %1984, %1208
  %1986 = sext i32 %1985 to i64
  %1987 = getelementptr inbounds i8, ptr %1526, i64 %1986
  %1988 = load i8, ptr %1987, align 1, !tbaa !9
  %1989 = zext i8 %1988 to i32
  %1990 = add nuw nsw i32 %1989, 1
  %1991 = add nsw i32 %1984, %1210
  %1992 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1993 = add nsw i32 %1992, -1
  %1994 = and i32 %1993, %1991
  %1995 = sext i32 %1994 to i64
  %1996 = getelementptr inbounds i32, ptr %1851, i64 %1995
  %1997 = load i32, ptr %1996, align 4, !tbaa !25
  %1998 = mul nsw i32 %1997, %1990
  %1999 = load i8, ptr %1678, align 1, !tbaa !9
  %2000 = zext i8 %1999 to i32
  %2001 = add nuw nsw i32 %2000, 1
  %2002 = sdiv i32 %1998, %2001
  %2003 = tail call i32 @llvm.abs.i32(i32 %2002, i1 true)
  %2004 = zext i32 %2003 to i64
  %2005 = shl nuw nsw i64 %2004, 3
  %2006 = and i64 %2005, 65528
  %2007 = or i64 %2006, 1
  %2008 = getelementptr inbounds i8, ptr %1832, i64 %2007
  %2009 = load i8, ptr %2008, align 1, !tbaa !9
  %2010 = zext i8 %2009 to i16
  %2011 = sub nsw i16 0, %2010
  %2012 = icmp slt i32 %2002, 0
  %2013 = select i1 %2012, i16 %2011, i16 %2010
  %2014 = sdiv i16 %2013, 8
  %2015 = sext i16 %2014 to i32
  br label %2016

2016:                                             ; preds = %1980, %1974
  %2017 = phi i32 [ %2015, %1980 ], [ 255, %1974 ]
  %2018 = getelementptr inbounds i32, ptr %1847, i64 3
  store i32 %2017, ptr %2018, align 4, !tbaa !25
  %2019 = load i32, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  %2020 = icmp eq i32 %2019, 0
  br i1 %2020, label %2021, label %2025

2021:                                             ; preds = %2016
  %2022 = getelementptr inbounds i32, ptr %1845, i64 2
  %2023 = load i32, ptr %2022, align 4, !tbaa !25
  %2024 = getelementptr inbounds i32, ptr %1845, i64 1
  store i32 %2023, ptr %2024, align 4, !tbaa !25
  store i32 1, ptr %1845, align 4, !tbaa !25
  br label %2025

2025:                                             ; preds = %2021, %2016
  %2026 = load i32, ptr @_ZZ9jpegModelR5MixerE3row, align 4, !tbaa !25
  %2027 = icmp eq i32 %2026, 0
  br i1 %2027, label %2028, label %2032

2028:                                             ; preds = %2025
  %2029 = load i32, ptr %1845, align 4, !tbaa !25
  %2030 = getelementptr inbounds i32, ptr %1845, i64 1
  store i32 %2029, ptr %2030, align 4, !tbaa !25
  %2031 = getelementptr inbounds i32, ptr %1845, i64 2
  store i32 1, ptr %2031, align 4, !tbaa !25
  br label %2032

2032:                                             ; preds = %987, %2028, %2025, %1005, %921, %918
  %2033 = load i32, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %2034 = icmp ne i32 %2033, 0
  %2035 = load i32, ptr @_ZZ9jpegModelR5MixerE4data, align 4
  %2036 = icmp ne i32 %2035, 0
  %2037 = select i1 %2034, i1 %2036, i1 false
  br i1 %2037, label %2040, label %2038

2038:                                             ; preds = %2032
  %2039 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

2040:                                             ; preds = %2032
  %2041 = load i32, ptr @bpos, align 4, !tbaa !25
  %2042 = icmp eq i32 %2041, 0
  %2043 = select i1 %2042, i32 -2, i32 -1
  %2044 = load i32, ptr @pos, align 4, !tbaa !25
  %2045 = add i32 %2043, %2044
  %2046 = load i32, ptr @buf, align 8, !tbaa !20
  %2047 = add nsw i32 %2046, -1
  %2048 = and i32 %2047, %2045
  %2049 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %2050 = sext i32 %2048 to i64
  %2051 = getelementptr inbounds i8, ptr %2049, i64 %2050
  %2052 = load i8, ptr %2051, align 1, !tbaa !9
  %2053 = icmp eq i8 %2052, -1
  br i1 %2053, label %2054, label %2062

2054:                                             ; preds = %2040
  %2055 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %2056 = load i32, ptr %2055, align 8, !tbaa !64
  %2057 = add nsw i32 %2056, 1
  store i32 %2057, ptr %2055, align 8, !tbaa !64
  %2058 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %2059 = load ptr, ptr %2058, align 8, !tbaa !59
  %2060 = sext i32 %2056 to i64
  %2061 = getelementptr inbounds i16, ptr %2059, i64 %2060
  store i16 128, ptr %2061, align 2, !tbaa !31
  br label %3186

2062:                                             ; preds = %2040
  %2063 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE1t acquire, align 8
  %2064 = icmp eq i8 %2063, 0
  br i1 %2064, label %2065, label %2073, !prof !110

2065:                                             ; preds = %2062
  %2066 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE1t) #39
  %2067 = icmp eq i32 %2066, 0
  br i1 %2067, label %2073, label %2068

2068:                                             ; preds = %2065
  %2069 = load i32, ptr @level, align 4, !tbaa !25
  %2070 = shl i32 65536, %2069
  invoke void @_ZN2BHILi9EEC2Ei(ptr noundef nonnull align 8 dereferenceable(28) @_ZZ9jpegModelR5MixerE1t, i32 noundef %2070)
          to label %2071 unwind label %2410

2071:                                             ; preds = %2068
  %2072 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN2BHILi9EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE1t, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE1t) #39
  br label %2073

2073:                                             ; preds = %2071, %2065, %2062
  %2074 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE3cxt acquire, align 8
  %2075 = icmp eq i8 %2074, 0
  br i1 %2075, label %2076, label %2082, !prof !110

2076:                                             ; preds = %2073
  %2077 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE3cxt) #39
  %2078 = icmp eq i32 %2077, 0
  br i1 %2078, label %2082, label %2079

2079:                                             ; preds = %2076
  invoke void @_ZN5ArrayIjLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE3cxt, i32 noundef 28)
          to label %2080 unwind label %2412

2080:                                             ; preds = %2079
  %2081 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIjLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE3cxt, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE3cxt) #39
  br label %2082

2082:                                             ; preds = %2080, %2076, %2073
  %2083 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2cp acquire, align 8
  %2084 = icmp eq i8 %2083, 0
  br i1 %2084, label %2085, label %2091, !prof !110

2085:                                             ; preds = %2082
  %2086 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2cp) #39
  %2087 = icmp eq i32 %2086, 0
  br i1 %2087, label %2091, label %2088

2088:                                             ; preds = %2085
  invoke void @_ZN5ArrayIPhLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE2cp, i32 noundef 28)
          to label %2089 unwind label %2414

2089:                                             ; preds = %2088
  %2090 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIPhLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2cp, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2cp) #39
  br label %2091

2091:                                             ; preds = %2089, %2085, %2082
  %2092 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2sm acquire, align 8
  %2093 = icmp eq i8 %2092, 0
  br i1 %2093, label %2094, label %2127, !prof !110

2094:                                             ; preds = %2091
  %2095 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2sm) #39
  %2096 = icmp eq i32 %2095, 0
  br i1 %2096, label %2127, label %2097

2097:                                             ; preds = %2094
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2sm, i32 noundef 256)
          to label %2098 unwind label %2416

2098:                                             ; preds = %2097
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 1), i32 noundef 256)
          to label %2099 unwind label %2418

2099:                                             ; preds = %2098
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 2), i32 noundef 256)
          to label %2100 unwind label %2418

2100:                                             ; preds = %2099
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 3), i32 noundef 256)
          to label %2101 unwind label %2418

2101:                                             ; preds = %2100
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 4), i32 noundef 256)
          to label %2102 unwind label %2418

2102:                                             ; preds = %2101
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 5), i32 noundef 256)
          to label %2103 unwind label %2418

2103:                                             ; preds = %2102
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 6), i32 noundef 256)
          to label %2104 unwind label %2418

2104:                                             ; preds = %2103
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 7), i32 noundef 256)
          to label %2105 unwind label %2418

2105:                                             ; preds = %2104
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 8), i32 noundef 256)
          to label %2106 unwind label %2418

2106:                                             ; preds = %2105
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 9), i32 noundef 256)
          to label %2107 unwind label %2418

2107:                                             ; preds = %2106
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 10), i32 noundef 256)
          to label %2108 unwind label %2418

2108:                                             ; preds = %2107
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 11), i32 noundef 256)
          to label %2109 unwind label %2418

2109:                                             ; preds = %2108
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 12), i32 noundef 256)
          to label %2110 unwind label %2418

2110:                                             ; preds = %2109
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 13), i32 noundef 256)
          to label %2111 unwind label %2418

2111:                                             ; preds = %2110
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 14), i32 noundef 256)
          to label %2112 unwind label %2418

2112:                                             ; preds = %2111
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 15), i32 noundef 256)
          to label %2113 unwind label %2418

2113:                                             ; preds = %2112
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 16), i32 noundef 256)
          to label %2114 unwind label %2418

2114:                                             ; preds = %2113
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 17), i32 noundef 256)
          to label %2115 unwind label %2418

2115:                                             ; preds = %2114
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 18), i32 noundef 256)
          to label %2116 unwind label %2418

2116:                                             ; preds = %2115
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 19), i32 noundef 256)
          to label %2117 unwind label %2418

2117:                                             ; preds = %2116
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 20), i32 noundef 256)
          to label %2118 unwind label %2418

2118:                                             ; preds = %2117
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 21), i32 noundef 256)
          to label %2119 unwind label %2418

2119:                                             ; preds = %2118
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 22), i32 noundef 256)
          to label %2120 unwind label %2418

2120:                                             ; preds = %2119
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 23), i32 noundef 256)
          to label %2121 unwind label %2418

2121:                                             ; preds = %2120
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 24), i32 noundef 256)
          to label %2122 unwind label %2418

2122:                                             ; preds = %2121
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 25), i32 noundef 256)
          to label %2123 unwind label %2418

2123:                                             ; preds = %2122
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 26), i32 noundef 256)
          to label %2124 unwind label %2418

2124:                                             ; preds = %2123
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 27), i32 noundef 256)
          to label %2125 unwind label %2418

2125:                                             ; preds = %2124
  %2126 = tail call i32 @__cxa_atexit(ptr nonnull @__cxx_global_array_dtor.13, ptr null, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2sm) #39
  br label %2127

2127:                                             ; preds = %2125, %2094, %2091
  %2128 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2m1 acquire, align 8
  %2129 = icmp eq i8 %2128, 0
  br i1 %2129, label %2130, label %2136, !prof !110

2130:                                             ; preds = %2127
  %2131 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2m1) #39
  %2132 = icmp eq i32 %2131, 0
  br i1 %2132, label %2136, label %2133

2133:                                             ; preds = %2130
  invoke void @_ZN5MixerC2Eiiii(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ9jpegModelR5MixerE2m1, i32 noundef 32, i32 noundef 770, i32 noundef 3, i32 noundef 0)
          to label %2134 unwind label %2425

2134:                                             ; preds = %2133
  %2135 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5MixerD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2m1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2m1) #39
  br label %2136

2136:                                             ; preds = %2134, %2130, %2127
  %2137 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2a1 acquire, align 8
  %2138 = icmp eq i8 %2137, 0
  br i1 %2138, label %2139, label %2145, !prof !110

2139:                                             ; preds = %2136
  %2140 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2a1) #39
  %2141 = icmp eq i32 %2140, 0
  br i1 %2141, label %2145, label %2142

2142:                                             ; preds = %2139
  invoke void @_ZN3APMC2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2a1, i32 noundef 32768)
          to label %2143 unwind label %2427

2143:                                             ; preds = %2142
  %2144 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN8StateMapD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2a1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2a1) #39
  br label %2145

2145:                                             ; preds = %2143, %2139, %2136
  %2146 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2a2 acquire, align 8
  %2147 = icmp eq i8 %2146, 0
  br i1 %2147, label %2148, label %2154, !prof !110

2148:                                             ; preds = %2145
  %2149 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2a2) #39
  %2150 = icmp eq i32 %2149, 0
  br i1 %2150, label %2154, label %2151

2151:                                             ; preds = %2148
  invoke void @_ZN3APMC2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2a2, i32 noundef 65536)
          to label %2152 unwind label %2429

2152:                                             ; preds = %2151
  %2153 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN8StateMapD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2a2, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2a2) #39
  br label %2154

2154:                                             ; preds = %2152, %2148, %2145
  %2155 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2156 = getelementptr inbounds ptr, ptr %2155, i64 27
  %2157 = load ptr, ptr %2156, align 8, !tbaa !5
  %2158 = icmp eq ptr %2157, null
  br i1 %2158, label %2431, label %2159

2159:                                             ; preds = %2154
  %2160 = load ptr, ptr %2155, align 8, !tbaa !5
  %2161 = load i8, ptr %2160, align 1, !tbaa !9
  %2162 = zext i8 %2161 to i64
  %2163 = load i32, ptr @y, align 4, !tbaa !25
  %2164 = sext i32 %2163 to i64
  %2165 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2162, i64 %2164
  %2166 = load i8, ptr %2165, align 1, !tbaa !9
  store i8 %2166, ptr %2160, align 1, !tbaa !9
  %2167 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2168 = getelementptr inbounds ptr, ptr %2167, i64 1
  %2169 = load ptr, ptr %2168, align 8, !tbaa !5
  %2170 = load i8, ptr %2169, align 1, !tbaa !9
  %2171 = zext i8 %2170 to i64
  %2172 = load i32, ptr @y, align 4, !tbaa !25
  %2173 = sext i32 %2172 to i64
  %2174 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2171, i64 %2173
  %2175 = load i8, ptr %2174, align 1, !tbaa !9
  store i8 %2175, ptr %2169, align 1, !tbaa !9
  %2176 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2177 = getelementptr inbounds ptr, ptr %2176, i64 2
  %2178 = load ptr, ptr %2177, align 8, !tbaa !5
  %2179 = load i8, ptr %2178, align 1, !tbaa !9
  %2180 = zext i8 %2179 to i64
  %2181 = load i32, ptr @y, align 4, !tbaa !25
  %2182 = sext i32 %2181 to i64
  %2183 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2180, i64 %2182
  %2184 = load i8, ptr %2183, align 1, !tbaa !9
  store i8 %2184, ptr %2178, align 1, !tbaa !9
  %2185 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2186 = getelementptr inbounds ptr, ptr %2185, i64 3
  %2187 = load ptr, ptr %2186, align 8, !tbaa !5
  %2188 = load i8, ptr %2187, align 1, !tbaa !9
  %2189 = zext i8 %2188 to i64
  %2190 = load i32, ptr @y, align 4, !tbaa !25
  %2191 = sext i32 %2190 to i64
  %2192 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2189, i64 %2191
  %2193 = load i8, ptr %2192, align 1, !tbaa !9
  store i8 %2193, ptr %2187, align 1, !tbaa !9
  %2194 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2195 = getelementptr inbounds ptr, ptr %2194, i64 4
  %2196 = load ptr, ptr %2195, align 8, !tbaa !5
  %2197 = load i8, ptr %2196, align 1, !tbaa !9
  %2198 = zext i8 %2197 to i64
  %2199 = load i32, ptr @y, align 4, !tbaa !25
  %2200 = sext i32 %2199 to i64
  %2201 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2198, i64 %2200
  %2202 = load i8, ptr %2201, align 1, !tbaa !9
  store i8 %2202, ptr %2196, align 1, !tbaa !9
  %2203 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2204 = getelementptr inbounds ptr, ptr %2203, i64 5
  %2205 = load ptr, ptr %2204, align 8, !tbaa !5
  %2206 = load i8, ptr %2205, align 1, !tbaa !9
  %2207 = zext i8 %2206 to i64
  %2208 = load i32, ptr @y, align 4, !tbaa !25
  %2209 = sext i32 %2208 to i64
  %2210 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2207, i64 %2209
  %2211 = load i8, ptr %2210, align 1, !tbaa !9
  store i8 %2211, ptr %2205, align 1, !tbaa !9
  %2212 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2213 = getelementptr inbounds ptr, ptr %2212, i64 6
  %2214 = load ptr, ptr %2213, align 8, !tbaa !5
  %2215 = load i8, ptr %2214, align 1, !tbaa !9
  %2216 = zext i8 %2215 to i64
  %2217 = load i32, ptr @y, align 4, !tbaa !25
  %2218 = sext i32 %2217 to i64
  %2219 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2216, i64 %2218
  %2220 = load i8, ptr %2219, align 1, !tbaa !9
  store i8 %2220, ptr %2214, align 1, !tbaa !9
  %2221 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2222 = getelementptr inbounds ptr, ptr %2221, i64 7
  %2223 = load ptr, ptr %2222, align 8, !tbaa !5
  %2224 = load i8, ptr %2223, align 1, !tbaa !9
  %2225 = zext i8 %2224 to i64
  %2226 = load i32, ptr @y, align 4, !tbaa !25
  %2227 = sext i32 %2226 to i64
  %2228 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2225, i64 %2227
  %2229 = load i8, ptr %2228, align 1, !tbaa !9
  store i8 %2229, ptr %2223, align 1, !tbaa !9
  %2230 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2231 = getelementptr inbounds ptr, ptr %2230, i64 8
  %2232 = load ptr, ptr %2231, align 8, !tbaa !5
  %2233 = load i8, ptr %2232, align 1, !tbaa !9
  %2234 = zext i8 %2233 to i64
  %2235 = load i32, ptr @y, align 4, !tbaa !25
  %2236 = sext i32 %2235 to i64
  %2237 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2234, i64 %2236
  %2238 = load i8, ptr %2237, align 1, !tbaa !9
  store i8 %2238, ptr %2232, align 1, !tbaa !9
  %2239 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2240 = getelementptr inbounds ptr, ptr %2239, i64 9
  %2241 = load ptr, ptr %2240, align 8, !tbaa !5
  %2242 = load i8, ptr %2241, align 1, !tbaa !9
  %2243 = zext i8 %2242 to i64
  %2244 = load i32, ptr @y, align 4, !tbaa !25
  %2245 = sext i32 %2244 to i64
  %2246 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2243, i64 %2245
  %2247 = load i8, ptr %2246, align 1, !tbaa !9
  store i8 %2247, ptr %2241, align 1, !tbaa !9
  %2248 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2249 = getelementptr inbounds ptr, ptr %2248, i64 10
  %2250 = load ptr, ptr %2249, align 8, !tbaa !5
  %2251 = load i8, ptr %2250, align 1, !tbaa !9
  %2252 = zext i8 %2251 to i64
  %2253 = load i32, ptr @y, align 4, !tbaa !25
  %2254 = sext i32 %2253 to i64
  %2255 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2252, i64 %2254
  %2256 = load i8, ptr %2255, align 1, !tbaa !9
  store i8 %2256, ptr %2250, align 1, !tbaa !9
  %2257 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2258 = getelementptr inbounds ptr, ptr %2257, i64 11
  %2259 = load ptr, ptr %2258, align 8, !tbaa !5
  %2260 = load i8, ptr %2259, align 1, !tbaa !9
  %2261 = zext i8 %2260 to i64
  %2262 = load i32, ptr @y, align 4, !tbaa !25
  %2263 = sext i32 %2262 to i64
  %2264 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2261, i64 %2263
  %2265 = load i8, ptr %2264, align 1, !tbaa !9
  store i8 %2265, ptr %2259, align 1, !tbaa !9
  %2266 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2267 = getelementptr inbounds ptr, ptr %2266, i64 12
  %2268 = load ptr, ptr %2267, align 8, !tbaa !5
  %2269 = load i8, ptr %2268, align 1, !tbaa !9
  %2270 = zext i8 %2269 to i64
  %2271 = load i32, ptr @y, align 4, !tbaa !25
  %2272 = sext i32 %2271 to i64
  %2273 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2270, i64 %2272
  %2274 = load i8, ptr %2273, align 1, !tbaa !9
  store i8 %2274, ptr %2268, align 1, !tbaa !9
  %2275 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2276 = getelementptr inbounds ptr, ptr %2275, i64 13
  %2277 = load ptr, ptr %2276, align 8, !tbaa !5
  %2278 = load i8, ptr %2277, align 1, !tbaa !9
  %2279 = zext i8 %2278 to i64
  %2280 = load i32, ptr @y, align 4, !tbaa !25
  %2281 = sext i32 %2280 to i64
  %2282 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2279, i64 %2281
  %2283 = load i8, ptr %2282, align 1, !tbaa !9
  store i8 %2283, ptr %2277, align 1, !tbaa !9
  %2284 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2285 = getelementptr inbounds ptr, ptr %2284, i64 14
  %2286 = load ptr, ptr %2285, align 8, !tbaa !5
  %2287 = load i8, ptr %2286, align 1, !tbaa !9
  %2288 = zext i8 %2287 to i64
  %2289 = load i32, ptr @y, align 4, !tbaa !25
  %2290 = sext i32 %2289 to i64
  %2291 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2288, i64 %2290
  %2292 = load i8, ptr %2291, align 1, !tbaa !9
  store i8 %2292, ptr %2286, align 1, !tbaa !9
  %2293 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2294 = getelementptr inbounds ptr, ptr %2293, i64 15
  %2295 = load ptr, ptr %2294, align 8, !tbaa !5
  %2296 = load i8, ptr %2295, align 1, !tbaa !9
  %2297 = zext i8 %2296 to i64
  %2298 = load i32, ptr @y, align 4, !tbaa !25
  %2299 = sext i32 %2298 to i64
  %2300 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2297, i64 %2299
  %2301 = load i8, ptr %2300, align 1, !tbaa !9
  store i8 %2301, ptr %2295, align 1, !tbaa !9
  %2302 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2303 = getelementptr inbounds ptr, ptr %2302, i64 16
  %2304 = load ptr, ptr %2303, align 8, !tbaa !5
  %2305 = load i8, ptr %2304, align 1, !tbaa !9
  %2306 = zext i8 %2305 to i64
  %2307 = load i32, ptr @y, align 4, !tbaa !25
  %2308 = sext i32 %2307 to i64
  %2309 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2306, i64 %2308
  %2310 = load i8, ptr %2309, align 1, !tbaa !9
  store i8 %2310, ptr %2304, align 1, !tbaa !9
  %2311 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2312 = getelementptr inbounds ptr, ptr %2311, i64 17
  %2313 = load ptr, ptr %2312, align 8, !tbaa !5
  %2314 = load i8, ptr %2313, align 1, !tbaa !9
  %2315 = zext i8 %2314 to i64
  %2316 = load i32, ptr @y, align 4, !tbaa !25
  %2317 = sext i32 %2316 to i64
  %2318 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2315, i64 %2317
  %2319 = load i8, ptr %2318, align 1, !tbaa !9
  store i8 %2319, ptr %2313, align 1, !tbaa !9
  %2320 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2321 = getelementptr inbounds ptr, ptr %2320, i64 18
  %2322 = load ptr, ptr %2321, align 8, !tbaa !5
  %2323 = load i8, ptr %2322, align 1, !tbaa !9
  %2324 = zext i8 %2323 to i64
  %2325 = load i32, ptr @y, align 4, !tbaa !25
  %2326 = sext i32 %2325 to i64
  %2327 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2324, i64 %2326
  %2328 = load i8, ptr %2327, align 1, !tbaa !9
  store i8 %2328, ptr %2322, align 1, !tbaa !9
  %2329 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2330 = getelementptr inbounds ptr, ptr %2329, i64 19
  %2331 = load ptr, ptr %2330, align 8, !tbaa !5
  %2332 = load i8, ptr %2331, align 1, !tbaa !9
  %2333 = zext i8 %2332 to i64
  %2334 = load i32, ptr @y, align 4, !tbaa !25
  %2335 = sext i32 %2334 to i64
  %2336 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2333, i64 %2335
  %2337 = load i8, ptr %2336, align 1, !tbaa !9
  store i8 %2337, ptr %2331, align 1, !tbaa !9
  %2338 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2339 = getelementptr inbounds ptr, ptr %2338, i64 20
  %2340 = load ptr, ptr %2339, align 8, !tbaa !5
  %2341 = load i8, ptr %2340, align 1, !tbaa !9
  %2342 = zext i8 %2341 to i64
  %2343 = load i32, ptr @y, align 4, !tbaa !25
  %2344 = sext i32 %2343 to i64
  %2345 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2342, i64 %2344
  %2346 = load i8, ptr %2345, align 1, !tbaa !9
  store i8 %2346, ptr %2340, align 1, !tbaa !9
  %2347 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2348 = getelementptr inbounds ptr, ptr %2347, i64 21
  %2349 = load ptr, ptr %2348, align 8, !tbaa !5
  %2350 = load i8, ptr %2349, align 1, !tbaa !9
  %2351 = zext i8 %2350 to i64
  %2352 = load i32, ptr @y, align 4, !tbaa !25
  %2353 = sext i32 %2352 to i64
  %2354 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2351, i64 %2353
  %2355 = load i8, ptr %2354, align 1, !tbaa !9
  store i8 %2355, ptr %2349, align 1, !tbaa !9
  %2356 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2357 = getelementptr inbounds ptr, ptr %2356, i64 22
  %2358 = load ptr, ptr %2357, align 8, !tbaa !5
  %2359 = load i8, ptr %2358, align 1, !tbaa !9
  %2360 = zext i8 %2359 to i64
  %2361 = load i32, ptr @y, align 4, !tbaa !25
  %2362 = sext i32 %2361 to i64
  %2363 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2360, i64 %2362
  %2364 = load i8, ptr %2363, align 1, !tbaa !9
  store i8 %2364, ptr %2358, align 1, !tbaa !9
  %2365 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2366 = getelementptr inbounds ptr, ptr %2365, i64 23
  %2367 = load ptr, ptr %2366, align 8, !tbaa !5
  %2368 = load i8, ptr %2367, align 1, !tbaa !9
  %2369 = zext i8 %2368 to i64
  %2370 = load i32, ptr @y, align 4, !tbaa !25
  %2371 = sext i32 %2370 to i64
  %2372 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2369, i64 %2371
  %2373 = load i8, ptr %2372, align 1, !tbaa !9
  store i8 %2373, ptr %2367, align 1, !tbaa !9
  %2374 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2375 = getelementptr inbounds ptr, ptr %2374, i64 24
  %2376 = load ptr, ptr %2375, align 8, !tbaa !5
  %2377 = load i8, ptr %2376, align 1, !tbaa !9
  %2378 = zext i8 %2377 to i64
  %2379 = load i32, ptr @y, align 4, !tbaa !25
  %2380 = sext i32 %2379 to i64
  %2381 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2378, i64 %2380
  %2382 = load i8, ptr %2381, align 1, !tbaa !9
  store i8 %2382, ptr %2376, align 1, !tbaa !9
  %2383 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2384 = getelementptr inbounds ptr, ptr %2383, i64 25
  %2385 = load ptr, ptr %2384, align 8, !tbaa !5
  %2386 = load i8, ptr %2385, align 1, !tbaa !9
  %2387 = zext i8 %2386 to i64
  %2388 = load i32, ptr @y, align 4, !tbaa !25
  %2389 = sext i32 %2388 to i64
  %2390 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2387, i64 %2389
  %2391 = load i8, ptr %2390, align 1, !tbaa !9
  store i8 %2391, ptr %2385, align 1, !tbaa !9
  %2392 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2393 = getelementptr inbounds ptr, ptr %2392, i64 26
  %2394 = load ptr, ptr %2393, align 8, !tbaa !5
  %2395 = load i8, ptr %2394, align 1, !tbaa !9
  %2396 = zext i8 %2395 to i64
  %2397 = load i32, ptr @y, align 4, !tbaa !25
  %2398 = sext i32 %2397 to i64
  %2399 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2396, i64 %2398
  %2400 = load i8, ptr %2399, align 1, !tbaa !9
  store i8 %2400, ptr %2394, align 1, !tbaa !9
  %2401 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2402 = getelementptr inbounds ptr, ptr %2401, i64 27
  %2403 = load ptr, ptr %2402, align 8, !tbaa !5
  %2404 = load i8, ptr %2403, align 1, !tbaa !9
  %2405 = zext i8 %2404 to i64
  %2406 = load i32, ptr @y, align 4, !tbaa !25
  %2407 = sext i32 %2406 to i64
  %2408 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2405, i64 %2407
  %2409 = load i8, ptr %2408, align 1, !tbaa !9
  store i8 %2409, ptr %2403, align 1, !tbaa !9
  br label %2431

2410:                                             ; preds = %2068
  %2411 = landingpad { ptr, i32 }
          cleanup
  br label %3188

2412:                                             ; preds = %2079
  %2413 = landingpad { ptr, i32 }
          cleanup
  br label %3188

2414:                                             ; preds = %2088
  %2415 = landingpad { ptr, i32 }
          cleanup
  br label %3188

2416:                                             ; preds = %2097
  %2417 = landingpad { ptr, i32 }
          cleanup
  br label %3188

2418:                                             ; preds = %2124, %2123, %2122, %2121, %2120, %2119, %2118, %2117, %2116, %2115, %2114, %2113, %2112, %2111, %2110, %2109, %2108, %2107, %2106, %2105, %2104, %2103, %2102, %2101, %2100, %2099, %2098
  %2419 = phi ptr [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 1), %2098 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 2), %2099 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 3), %2100 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 4), %2101 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 5), %2102 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 6), %2103 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 7), %2104 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 8), %2105 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 9), %2106 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 10), %2107 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 11), %2108 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 12), %2109 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 13), %2110 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 14), %2111 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 15), %2112 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 16), %2113 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 17), %2114 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 18), %2115 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 19), %2116 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 20), %2117 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 21), %2118 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 22), %2119 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 23), %2120 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 24), %2121 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 25), %2122 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 26), %2123 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 27), %2124 ]
  %2420 = landingpad { ptr, i32 }
          cleanup
  br label %2421

2421:                                             ; preds = %2418, %2421
  %2422 = phi ptr [ %2423, %2421 ], [ %2419, %2418 ]
  %2423 = getelementptr inbounds %class.StateMap, ptr %2422, i64 -1
  tail call void @_ZN8StateMapD2Ev(ptr noundef nonnull align 8 dereferenceable(32) %2423) #39
  %2424 = icmp eq ptr %2423, @_ZZ9jpegModelR5MixerE2sm
  br i1 %2424, label %3188, label %2421

2425:                                             ; preds = %2133
  %2426 = landingpad { ptr, i32 }
          cleanup
  br label %3188

2427:                                             ; preds = %2142
  %2428 = landingpad { ptr, i32 }
          cleanup
  br label %3188

2429:                                             ; preds = %2151
  %2430 = landingpad { ptr, i32 }
          cleanup
  br label %3188

2431:                                             ; preds = %2159, %2154
  tail call void @_ZN5Mixer6updateEv(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ9jpegModelR5MixerE2m1)
  %2432 = load i32, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %2433 = ashr i32 %2432, 6
  %2434 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8, !tbaa !61
  %2435 = sext i32 %2433 to i64
  %2436 = getelementptr inbounds i32, ptr %2434, i64 %2435
  %2437 = load i32, ptr %2436, align 4, !tbaa !25
  %2438 = and i32 %2432, 63
  %2439 = shl i32 %2437, 6
  %2440 = or i32 %2439, %2438
  %2441 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  %2442 = shl i32 %2441, 1
  %2443 = icmp eq i32 %2437, 0
  %2444 = zext i1 %2443 to i32
  %2445 = or i32 %2442, %2444
  %2446 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  %2447 = add nsw i32 %2446, 1
  %2448 = shl nuw i32 1, %2447
  %2449 = or i32 %2448, %2445
  %2450 = load i32, ptr @_ZZ9jpegModelR5MixerE7hbcount, align 4, !tbaa !25
  %2451 = add nsw i32 %2450, 1
  %2452 = icmp sgt i32 %2450, 1
  %2453 = icmp eq i32 %2446, 0
  %2454 = select i1 %2452, i1 true, i1 %2453
  %2455 = select i1 %2454, i32 0, i32 %2451
  store i32 %2455, ptr @_ZZ9jpegModelR5MixerE7hbcount, align 4
  %2456 = icmp ult i32 %2440, 256
  br i1 %2456, label %2459, label %2457

2457:                                             ; preds = %2431
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %2458 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3186

2459:                                             ; preds = %2431
  %2460 = icmp eq i32 %2455, 0
  br i1 %2460, label %2461, label %2960

2461:                                             ; preds = %2459
  %2462 = zext i32 %2438 to i64
  %2463 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %2462
  %2464 = load i8, ptr %2463, align 1, !tbaa !9
  %2465 = zext i8 %2464 to i32
  %2466 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %2462
  %2467 = load i8, ptr %2466, align 1, !tbaa !9
  %2468 = zext i8 %2467 to i32
  %2469 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE8adv_pred, i64 0, i32 3), align 8, !tbaa !61
  %2470 = getelementptr inbounds i32, ptr %2469, i64 2
  %2471 = load i32, ptr %2470, align 4, !tbaa !25
  %2472 = mul i32 %2449, 30005491
  %2473 = mul i32 %2440, 50004239
  %2474 = mul i32 %2471, 70004807
  %2475 = add i32 %2472, %2473
  %2476 = add i32 %2475, 90000480
  %2477 = add i32 %2476, %2474
  %2478 = lshr i32 %2477, 9
  %2479 = lshr i32 %2449, 3
  %2480 = lshr i32 %2440, 4
  %2481 = lshr i32 %2471, 5
  %2482 = xor i32 %2479, %2480
  %2483 = xor i32 %2481, %2478
  %2484 = xor i32 %2483, %2482
  %2485 = xor i32 %2484, %2477
  %2486 = xor i32 %2485, 67108863
  %2487 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE3cxt, i64 0, i32 3), align 8, !tbaa !84
  store i32 %2486, ptr %2487, align 4, !tbaa !25
  %2488 = load i32, ptr %2469, align 4, !tbaa !25
  %2489 = mul i32 %2488, 70004807
  %2490 = add i32 %2475, 290003459
  %2491 = add i32 %2490, %2489
  %2492 = lshr i32 %2491, 9
  %2493 = lshr i32 %2488, 5
  %2494 = xor i32 %2493, %2492
  %2495 = xor i32 %2494, %2482
  %2496 = xor i32 %2495, %2491
  %2497 = xor i32 %2496, 67108863
  %2498 = getelementptr inbounds i32, ptr %2487, i64 1
  store i32 %2497, ptr %2498, align 4, !tbaa !25
  %2499 = getelementptr inbounds i32, ptr %2469, i64 1
  %2500 = load i32, ptr %2499, align 4, !tbaa !25
  %2501 = mul i32 %2500, 70004807
  %2502 = add i32 %2475, 490006438
  %2503 = add i32 %2502, %2501
  %2504 = lshr i32 %2503, 9
  %2505 = lshr i32 %2500, 5
  %2506 = xor i32 %2505, %2504
  %2507 = xor i32 %2506, %2482
  %2508 = xor i32 %2507, %2503
  %2509 = xor i32 %2508, 67108863
  %2510 = getelementptr inbounds i32, ptr %2487, i64 2
  store i32 %2509, ptr %2510, align 4, !tbaa !25
  %2511 = load i32, ptr @_ZZ9jpegModelR5MixerE3rs1, align 4, !tbaa !25
  %2512 = load i32, ptr %2470, align 4, !tbaa !25
  %2513 = mul i32 %2511, 50004239
  %2514 = mul i32 %2512, 70004807
  %2515 = add i32 %2513, %2472
  %2516 = add i32 %2515, 690009417
  %2517 = add i32 %2516, %2514
  %2518 = lshr i32 %2517, 9
  %2519 = lshr i32 %2511, 4
  %2520 = lshr i32 %2512, 5
  %2521 = xor i32 %2479, %2519
  %2522 = xor i32 %2521, 1
  %2523 = xor i32 %2520, %2518
  %2524 = xor i32 %2523, %2522
  %2525 = xor i32 %2524, %2517
  %2526 = xor i32 %2525, 67108863
  %2527 = getelementptr inbounds i32, ptr %2487, i64 3
  store i32 %2526, ptr %2527, align 4, !tbaa !25
  %2528 = load i32, ptr %2469, align 4, !tbaa !25
  %2529 = mul i32 %2528, 70004807
  %2530 = add i32 %2515, 890012396
  %2531 = add i32 %2530, %2529
  %2532 = lshr i32 %2531, 9
  %2533 = lshr i32 %2528, 5
  %2534 = xor i32 %2533, %2532
  %2535 = xor i32 %2534, %2522
  %2536 = xor i32 %2535, %2531
  %2537 = xor i32 %2536, 67108863
  %2538 = getelementptr inbounds i32, ptr %2487, i64 4
  store i32 %2537, ptr %2538, align 4, !tbaa !25
  %2539 = load i32, ptr %2499, align 4, !tbaa !25
  %2540 = mul i32 %2539, 70004807
  %2541 = add i32 %2515, 1090015375
  %2542 = add i32 %2541, %2540
  %2543 = lshr i32 %2542, 9
  %2544 = lshr i32 %2539, 5
  %2545 = xor i32 %2544, %2543
  %2546 = xor i32 %2545, %2522
  %2547 = xor i32 %2546, %2542
  %2548 = xor i32 %2547, 67108863
  %2549 = getelementptr inbounds i32, ptr %2487, i64 5
  store i32 %2548, ptr %2549, align 4, !tbaa !25
  %2550 = load i32, ptr %2470, align 4, !tbaa !25
  %2551 = load i32, ptr %2469, align 4, !tbaa !25
  %2552 = mul i32 %2550, 50004239
  %2553 = mul i32 %2551, 70004807
  %2554 = add i32 %2472, 1290018354
  %2555 = add i32 %2554, %2552
  %2556 = add i32 %2555, %2553
  %2557 = lshr i32 %2556, 9
  %2558 = lshr i32 %2550, 4
  %2559 = lshr i32 %2551, 5
  %2560 = xor i32 %2558, %2559
  %2561 = xor i32 %2560, %2557
  %2562 = xor i32 %2561, %2479
  %2563 = xor i32 %2562, %2556
  %2564 = xor i32 %2563, 67108862
  %2565 = getelementptr inbounds i32, ptr %2487, i64 6
  store i32 %2564, ptr %2565, align 4, !tbaa !25
  %2566 = load i32, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  %2567 = load i32, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !25
  %2568 = load i32, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  %2569 = mul nsw i32 %2568, %2567
  %2570 = sub nsw i32 %2566, %2569
  %2571 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !20
  %2572 = add nsw i32 %2571, -1
  %2573 = and i32 %2572, %2570
  %2574 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %2575 = sext i32 %2573 to i64
  %2576 = getelementptr inbounds i8, ptr %2574, i64 %2575
  %2577 = load i8, ptr %2576, align 1, !tbaa !9
  %2578 = zext i8 %2577 to i32
  %2579 = getelementptr inbounds i32, ptr %2469, i64 3
  %2580 = load i32, ptr %2579, align 4, !tbaa !25
  %2581 = mul i32 %2578, 50004239
  %2582 = mul i32 %2580, 70004807
  %2583 = add i32 %2472, 1490021333
  %2584 = add i32 %2583, %2581
  %2585 = add i32 %2584, %2582
  %2586 = lshr i32 %2585, 9
  %2587 = lshr i32 %2578, 4
  %2588 = lshr i32 %2580, 5
  %2589 = xor i32 %2479, 2
  %2590 = xor i32 %2588, %2587
  %2591 = xor i32 %2590, %2586
  %2592 = xor i32 %2591, %2479
  %2593 = xor i32 %2592, %2585
  %2594 = xor i32 %2593, 67108861
  %2595 = getelementptr inbounds i32, ptr %2487, i64 7
  store i32 %2594, ptr %2595, align 4, !tbaa !25
  %2596 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8, !tbaa !61
  %2597 = getelementptr inbounds i32, ptr %2596, i64 %2435
  %2598 = load i32, ptr %2597, align 4, !tbaa !25
  %2599 = sub nsw i32 %2566, %2598
  %2600 = and i32 %2599, %2572
  %2601 = sext i32 %2600 to i64
  %2602 = getelementptr inbounds i8, ptr %2574, i64 %2601
  %2603 = load i8, ptr %2602, align 1, !tbaa !9
  %2604 = zext i8 %2603 to i32
  %2605 = load i32, ptr %2579, align 4, !tbaa !25
  %2606 = mul i32 %2604, 50004239
  %2607 = mul i32 %2605, 70004807
  %2608 = add i32 %2472, 1690024312
  %2609 = add i32 %2608, %2606
  %2610 = add i32 %2609, %2607
  %2611 = lshr i32 %2610, 9
  %2612 = lshr i32 %2604, 4
  %2613 = lshr i32 %2605, 5
  %2614 = xor i32 %2613, %2612
  %2615 = xor i32 %2614, %2611
  %2616 = xor i32 %2615, %2479
  %2617 = xor i32 %2616, %2610
  %2618 = xor i32 %2617, 67108861
  %2619 = getelementptr inbounds i32, ptr %2487, i64 8
  store i32 %2618, ptr %2619, align 4, !tbaa !25
  %2620 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE3lcp, i64 0, i32 3), align 8, !tbaa !61
  %2621 = load i32, ptr %2620, align 4, !tbaa !25
  %2622 = getelementptr inbounds i32, ptr %2620, i64 1
  %2623 = load i32, ptr %2622, align 4, !tbaa !25
  %2624 = load i32, ptr %2499, align 4, !tbaa !25
  %2625 = add i32 %2472, 2000029790
  %2626 = mul i32 %2621, 50004239
  %2627 = add i32 %2625, %2626
  %2628 = mul i32 %2623, 70004807
  %2629 = add i32 %2627, %2628
  %2630 = mul i32 %2624, 110002499
  %2631 = add i32 %2629, %2630
  %2632 = lshr i32 %2631, 9
  %2633 = lshr i32 %2621, 4
  %2634 = lshr i32 %2623, 5
  %2635 = lshr i32 %2624, 6
  %2636 = xor i32 %2633, %2634
  %2637 = xor i32 %2636, %2635
  %2638 = xor i32 %2637, %2632
  %2639 = xor i32 %2638, %2589
  %2640 = xor i32 %2639, %2631
  %2641 = getelementptr inbounds i32, ptr %2487, i64 9
  store i32 %2640, ptr %2641, align 4, !tbaa !25
  %2642 = load i32, ptr %2620, align 4, !tbaa !25
  %2643 = load i32, ptr %2622, align 4, !tbaa !25
  %2644 = mul i32 %2642, 50004239
  %2645 = mul i32 %2643, 70004807
  %2646 = mul i32 %2440, 110002499
  %2647 = add i32 %2646, -2094934527
  %2648 = add i32 %2647, %2472
  %2649 = add i32 %2648, %2644
  %2650 = add i32 %2649, %2645
  %2651 = lshr i32 %2650, 9
  %2652 = lshr i32 %2642, 4
  %2653 = lshr i32 %2643, 5
  %2654 = and i32 %2437, 67108863
  %2655 = xor i32 %2654, %2652
  %2656 = xor i32 %2655, %2653
  %2657 = xor i32 %2656, %2651
  %2658 = xor i32 %2657, %2589
  %2659 = xor i32 %2658, %2650
  %2660 = getelementptr inbounds i32, ptr %2487, i64 10
  store i32 %2659, ptr %2660, align 4, !tbaa !25
  %2661 = load i32, ptr %2620, align 4, !tbaa !25
  %2662 = getelementptr inbounds i32, ptr %2620, i64 2
  %2663 = load i32, ptr %2662, align 4, !tbaa !25
  %2664 = sdiv i32 %2663, 3
  %2665 = mul i32 %2468, 50004239
  %2666 = mul i32 %2661, 70004807
  %2667 = mul i32 %2664, 110002499
  %2668 = add i32 %2665, %2472
  %2669 = add i32 %2668, -1894931548
  %2670 = add i32 %2669, %2666
  %2671 = add i32 %2670, %2667
  %2672 = lshr i32 %2671, 9
  %2673 = lshr i32 %2468, 4
  %2674 = lshr i32 %2661, 5
  %2675 = lshr i32 %2664, 6
  %2676 = xor i32 %2479, 3
  %2677 = xor i32 %2674, %2675
  %2678 = xor i32 %2677, %2672
  %2679 = xor i32 %2678, %2676
  %2680 = xor i32 %2679, %2673
  %2681 = xor i32 %2680, %2671
  %2682 = getelementptr inbounds i32, ptr %2487, i64 11
  store i32 %2681, ptr %2682, align 4, !tbaa !25
  %2683 = load i32, ptr %2622, align 4, !tbaa !25
  %2684 = getelementptr inbounds i32, ptr %2620, i64 3
  %2685 = load i32, ptr %2684, align 4, !tbaa !25
  %2686 = sdiv i32 %2685, 3
  %2687 = mul i32 %2465, 50004239
  %2688 = mul i32 %2683, 70004807
  %2689 = mul i32 %2686, 110002499
  %2690 = add i32 %2687, %2472
  %2691 = add i32 %2690, -1694928569
  %2692 = add i32 %2691, %2688
  %2693 = add i32 %2692, %2689
  %2694 = lshr i32 %2693, 9
  %2695 = lshr i32 %2465, 4
  %2696 = lshr i32 %2683, 5
  %2697 = lshr i32 %2686, 6
  %2698 = xor i32 %2696, %2697
  %2699 = xor i32 %2698, %2694
  %2700 = xor i32 %2699, %2676
  %2701 = xor i32 %2700, %2695
  %2702 = xor i32 %2701, %2693
  %2703 = getelementptr inbounds i32, ptr %2487, i64 12
  store i32 %2702, ptr %2703, align 4, !tbaa !25
  %2704 = ashr i32 %2432, 2
  %2705 = tail call i32 @llvm.smin.i32(i32 %2438, i32 3)
  %2706 = mul i32 %2704, 50004239
  %2707 = mul nuw nsw i32 %2705, 70004807
  %2708 = add i32 %2706, -1604928089
  %2709 = add i32 %2708, %2707
  %2710 = add i32 %2709, %2472
  %2711 = lshr i32 %2710, 9
  %2712 = lshr i32 %2704, 4
  %2713 = xor i32 %2712, %2711
  %2714 = xor i32 %2713, %2479
  %2715 = xor i32 %2714, %2710
  %2716 = xor i32 %2715, 67108860
  %2717 = getelementptr inbounds i32, ptr %2487, i64 13
  store i32 %2716, ptr %2717, align 4, !tbaa !25
  %2718 = load i32, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  %2719 = ashr i32 %2718, 1
  %2720 = mul i32 %2719, 70004807
  %2721 = add i32 %2475, -1404925110
  %2722 = add i32 %2721, %2720
  %2723 = lshr i32 %2722, 9
  %2724 = lshr i32 %2719, 5
  %2725 = xor i32 %2724, %2723
  %2726 = xor i32 %2725, %2480
  %2727 = xor i32 %2726, %2479
  %2728 = xor i32 %2727, %2722
  %2729 = xor i32 %2728, 67108860
  %2730 = getelementptr inbounds i32, ptr %2487, i64 14
  store i32 %2729, ptr %2730, align 4, !tbaa !25
  %2731 = ashr i32 %2718, 2
  %2732 = load i32, ptr %2620, align 4, !tbaa !25
  %2733 = load i32, ptr %2662, align 4, !tbaa !25
  %2734 = sdiv i32 %2733, 3
  %2735 = shl nsw i32 %2734, 8
  %2736 = add nsw i32 %2735, %2732
  %2737 = load i32, ptr %2622, align 4, !tbaa !25
  %2738 = load i32, ptr %2684, align 4, !tbaa !25
  %2739 = sdiv i32 %2738, 3
  %2740 = shl nsw i32 %2739, 8
  %2741 = add nsw i32 %2740, %2737
  %2742 = add i32 %2472, -1094919632
  %2743 = mul i32 %2731, 50004239
  %2744 = add i32 %2742, %2743
  %2745 = mul i32 %2736, 70004807
  %2746 = add i32 %2744, %2745
  %2747 = mul i32 %2741, 110002499
  %2748 = add i32 %2746, %2747
  %2749 = lshr i32 %2748, 9
  %2750 = lshr i32 %2731, 4
  %2751 = lshr i32 %2736, 5
  %2752 = lshr i32 %2741, 6
  %2753 = xor i32 %2479, 4
  %2754 = xor i32 %2750, %2751
  %2755 = xor i32 %2754, %2752
  %2756 = xor i32 %2755, %2749
  %2757 = xor i32 %2756, %2753
  %2758 = xor i32 %2757, %2748
  %2759 = getelementptr inbounds i32, ptr %2487, i64 15
  store i32 %2758, ptr %2759, align 4, !tbaa !25
  %2760 = load i32, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !25
  %2761 = ashr i32 %2760, 4
  %2762 = mul i32 %2761, 50004239
  %2763 = mul i32 %2440, 70004807
  %2764 = add i32 %2472, %2763
  %2765 = add i32 %2764, -1004919152
  %2766 = add i32 %2765, %2762
  %2767 = lshr i32 %2766, 9
  %2768 = lshr i32 %2761, 4
  %2769 = lshr i32 %2440, 5
  %2770 = xor i32 %2768, %2767
  %2771 = xor i32 %2770, %2753
  %2772 = xor i32 %2771, %2769
  %2773 = xor i32 %2772, %2766
  %2774 = xor i32 %2773, 67108863
  %2775 = getelementptr inbounds i32, ptr %2487, i64 16
  store i32 %2774, ptr %2775, align 4, !tbaa !25
  %2776 = add i32 %2515, -804916173
  %2777 = add i32 %2776, %2763
  %2778 = lshr i32 %2777, 9
  %2779 = xor i32 %2753, %2778
  %2780 = xor i32 %2779, %2769
  %2781 = xor i32 %2780, %2519
  %2782 = xor i32 %2781, %2777
  %2783 = xor i32 %2782, 67108863
  %2784 = getelementptr inbounds i32, ptr %2487, i64 17
  store i32 %2783, ptr %2784, align 4, !tbaa !25
  %2785 = ashr i32 %2432, 3
  %2786 = load i32, ptr @_ZZ9jpegModelR5MixerE5ssum3, align 4, !tbaa !25
  %2787 = ashr i32 %2786, 3
  %2788 = load i32, ptr %2579, align 4, !tbaa !25
  %2789 = mul i32 %2785, 50004239
  %2790 = mul i32 %2787, 70004807
  %2791 = mul i32 %2788, 110002499
  %2792 = add i32 %2789, -494910695
  %2793 = add i32 %2792, %2472
  %2794 = add i32 %2793, %2790
  %2795 = add i32 %2794, %2791
  %2796 = lshr i32 %2795, 9
  %2797 = lshr i32 %2785, 4
  %2798 = lshr i32 %2787, 5
  %2799 = lshr i32 %2788, 6
  %2800 = xor i32 %2797, %2798
  %2801 = xor i32 %2800, %2799
  %2802 = xor i32 %2801, %2796
  %2803 = xor i32 %2802, %2753
  %2804 = xor i32 %2803, %2795
  %2805 = getelementptr inbounds i32, ptr %2487, i64 18
  store i32 %2804, ptr %2805, align 4, !tbaa !25
  %2806 = load i32, ptr %2620, align 4, !tbaa !25
  %2807 = sdiv i32 %2806, 3
  %2808 = load i32, ptr %2622, align 4, !tbaa !25
  %2809 = sdiv i32 %2808, 3
  %2810 = getelementptr inbounds i32, ptr %2469, i64 5
  %2811 = load i32, ptr %2810, align 4, !tbaa !25
  %2812 = add i32 %2472, -294907716
  %2813 = mul i32 %2807, 50004239
  %2814 = add i32 %2812, %2813
  %2815 = mul i32 %2809, 70004807
  %2816 = add i32 %2814, %2815
  %2817 = mul i32 %2811, 110002499
  %2818 = add i32 %2816, %2817
  %2819 = lshr i32 %2818, 9
  %2820 = lshr i32 %2807, 4
  %2821 = lshr i32 %2809, 5
  %2822 = lshr i32 %2811, 6
  %2823 = xor i32 %2820, %2821
  %2824 = xor i32 %2823, %2822
  %2825 = xor i32 %2824, %2819
  %2826 = xor i32 %2479, %2825
  %2827 = xor i32 %2826, %2818
  %2828 = xor i32 %2827, 5
  %2829 = getelementptr inbounds i32, ptr %2487, i64 19
  store i32 %2828, ptr %2829, align 4, !tbaa !25
  %2830 = load i8, ptr %2576, align 1, !tbaa !9
  %2831 = zext i8 %2830 to i32
  %2832 = getelementptr inbounds i32, ptr %2469, i64 6
  %2833 = load i32, ptr %2832, align 4, !tbaa !25
  %2834 = mul i32 %2831, 50004239
  %2835 = mul i32 %2833, 70004807
  %2836 = add i32 %2472, -204907236
  %2837 = add i32 %2836, %2834
  %2838 = add i32 %2837, %2835
  %2839 = lshr i32 %2838, 9
  %2840 = lshr i32 %2831, 4
  %2841 = lshr i32 %2833, 5
  %2842 = xor i32 %2841, %2840
  %2843 = xor i32 %2842, %2839
  %2844 = xor i32 %2843, %2479
  %2845 = xor i32 %2844, %2838
  %2846 = xor i32 %2845, 67108858
  %2847 = getelementptr inbounds i32, ptr %2487, i64 20
  store i32 %2846, ptr %2847, align 4, !tbaa !25
  %2848 = load i32, ptr %2597, align 4, !tbaa !25
  %2849 = sub nsw i32 %2566, %2848
  %2850 = and i32 %2849, %2572
  %2851 = sext i32 %2850 to i64
  %2852 = getelementptr inbounds i8, ptr %2574, i64 %2851
  %2853 = load i8, ptr %2852, align 1, !tbaa !9
  %2854 = zext i8 %2853 to i32
  %2855 = getelementptr inbounds i32, ptr %2469, i64 4
  %2856 = load i32, ptr %2855, align 4, !tbaa !25
  %2857 = mul i32 %2854, 50004239
  %2858 = mul i32 %2856, 70004807
  %2859 = add i32 %2472, -4904257
  %2860 = add i32 %2859, %2857
  %2861 = add i32 %2860, %2858
  %2862 = lshr i32 %2861, 9
  %2863 = lshr i32 %2854, 4
  %2864 = lshr i32 %2856, 5
  %2865 = xor i32 %2864, %2863
  %2866 = xor i32 %2865, %2862
  %2867 = xor i32 %2866, %2479
  %2868 = xor i32 %2867, %2861
  %2869 = xor i32 %2868, 67108858
  %2870 = getelementptr inbounds i32, ptr %2487, i64 21
  store i32 %2869, ptr %2870, align 4, !tbaa !25
  %2871 = load i32, ptr %2470, align 4, !tbaa !25
  %2872 = mul i32 %2871, 50004239
  %2873 = add i32 %2472, 125093915
  %2874 = add i32 %2873, %2872
  %2875 = lshr i32 %2874, 9
  %2876 = lshr i32 %2871, 4
  %2877 = xor i32 %2876, %2875
  %2878 = xor i32 %2877, %2479
  %2879 = xor i32 %2878, %2874
  %2880 = xor i32 %2879, 67108869
  %2881 = getelementptr inbounds i32, ptr %2487, i64 22
  store i32 %2880, ptr %2881, align 4, !tbaa !25
  %2882 = load i32, ptr %2469, align 4, !tbaa !25
  %2883 = mul i32 %2882, 50004239
  %2884 = add i32 %2873, %2883
  %2885 = lshr i32 %2884, 9
  %2886 = lshr i32 %2882, 4
  %2887 = xor i32 %2886, %2885
  %2888 = xor i32 %2887, %2479
  %2889 = xor i32 %2888, %2884
  %2890 = xor i32 %2889, 67108869
  %2891 = getelementptr inbounds i32, ptr %2487, i64 23
  store i32 %2890, ptr %2891, align 4, !tbaa !25
  %2892 = load i32, ptr %2499, align 4, !tbaa !25
  %2893 = mul i32 %2892, 50004239
  %2894 = add i32 %2873, %2893
  %2895 = lshr i32 %2894, 9
  %2896 = lshr i32 %2892, 4
  %2897 = xor i32 %2896, %2895
  %2898 = xor i32 %2897, %2479
  %2899 = xor i32 %2898, %2894
  %2900 = xor i32 %2899, 67108869
  %2901 = getelementptr inbounds i32, ptr %2487, i64 24
  store i32 %2900, ptr %2901, align 4, !tbaa !25
  %2902 = load i32, ptr %2622, align 4, !tbaa !25
  %2903 = load i32, ptr %2832, align 4, !tbaa !25
  %2904 = mul i32 %2902, 70004807
  %2905 = mul i32 %2903, 110002499
  %2906 = add i32 %2690, 505104200
  %2907 = add i32 %2906, %2904
  %2908 = add i32 %2907, %2905
  %2909 = lshr i32 %2908, 9
  %2910 = lshr i32 %2902, 5
  %2911 = lshr i32 %2903, 6
  %2912 = xor i32 %2479, 6
  %2913 = xor i32 %2910, %2911
  %2914 = xor i32 %2913, %2909
  %2915 = xor i32 %2914, %2912
  %2916 = xor i32 %2915, %2695
  %2917 = xor i32 %2916, %2908
  %2918 = getelementptr inbounds i32, ptr %2487, i64 25
  store i32 %2917, ptr %2918, align 4, !tbaa !25
  %2919 = load i32, ptr %2620, align 4, !tbaa !25
  %2920 = load i32, ptr %2855, align 4, !tbaa !25
  %2921 = mul i32 %2919, 70004807
  %2922 = mul i32 %2920, 110002499
  %2923 = add i32 %2668, 705107179
  %2924 = add i32 %2923, %2921
  %2925 = add i32 %2924, %2922
  %2926 = lshr i32 %2925, 9
  %2927 = lshr i32 %2919, 5
  %2928 = lshr i32 %2920, 6
  %2929 = xor i32 %2927, %2928
  %2930 = xor i32 %2929, %2926
  %2931 = xor i32 %2930, %2912
  %2932 = xor i32 %2931, %2673
  %2933 = xor i32 %2932, %2925
  %2934 = getelementptr inbounds i32, ptr %2487, i64 26
  store i32 %2933, ptr %2934, align 4, !tbaa !25
  %2935 = load i32, ptr %2620, align 4, !tbaa !25
  %2936 = load i32, ptr %2622, align 4, !tbaa !25
  %2937 = load i32, ptr %2579, align 4, !tbaa !25
  %2938 = add i32 %2472, 905110158
  %2939 = mul i32 %2935, 50004239
  %2940 = add i32 %2938, %2939
  %2941 = mul i32 %2936, 70004807
  %2942 = add i32 %2940, %2941
  %2943 = mul i32 %2937, 110002499
  %2944 = add i32 %2942, %2943
  %2945 = lshr i32 %2944, 9
  %2946 = lshr i32 %2935, 4
  %2947 = lshr i32 %2936, 5
  %2948 = lshr i32 %2937, 6
  %2949 = xor i32 %2946, %2947
  %2950 = xor i32 %2949, %2948
  %2951 = xor i32 %2950, %2945
  %2952 = xor i32 %2951, %2912
  %2953 = xor i32 %2952, %2944
  %2954 = getelementptr inbounds i32, ptr %2487, i64 27
  store i32 %2953, ptr %2954, align 4, !tbaa !25
  %2955 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %2956 = add nsw i32 %2955, 1
  store i32 %2956, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %2957 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %2958 = sext i32 %2955 to i64
  %2959 = getelementptr inbounds i16, ptr %2957, i64 %2958
  store i16 128, ptr %2959, align 2, !tbaa !31
  br label %2969

2960:                                             ; preds = %2459
  %2961 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %2962 = add nsw i32 %2961, 1
  store i32 %2962, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %2963 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %2964 = sext i32 %2961 to i64
  %2965 = getelementptr inbounds i16, ptr %2963, i64 %2964
  store i16 128, ptr %2965, align 2, !tbaa !31
  %2966 = icmp eq i32 %2455, 1
  %2967 = and i32 %2441, 1
  %2968 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  br i1 %2966, label %3021, label %3073

2969:                                             ; preds = %2461, %2969
  %2970 = phi i64 [ 0, %2461 ], [ %3019, %2969 ]
  %2971 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE3cxt, i64 0, i32 3), align 8, !tbaa !84
  %2972 = getelementptr inbounds i32, ptr %2971, i64 %2970
  %2973 = load i32, ptr %2972, align 4, !tbaa !25
  %2974 = tail call noundef ptr @_ZN2BHILi9EEixEj(ptr noundef nonnull align 8 dereferenceable(28) @_ZZ9jpegModelR5MixerE1t, i32 noundef %2973)
  %2975 = getelementptr inbounds i8, ptr %2974, i64 1
  %2976 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2977 = getelementptr inbounds ptr, ptr %2976, i64 %2970
  store ptr %2975, ptr %2977, align 8, !tbaa !5
  %2978 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2979 = getelementptr inbounds ptr, ptr %2978, i64 %2970
  %2980 = load ptr, ptr %2979, align 8, !tbaa !5
  %2981 = load i8, ptr %2980, align 1, !tbaa !9
  %2982 = zext i8 %2981 to i32
  %2983 = getelementptr inbounds [28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %2970, i32 1
  %2984 = load i32, ptr %2983, align 4, !tbaa !82
  %2985 = getelementptr inbounds [28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %2970, i32 2, i32 3
  %2986 = load ptr, ptr %2985, align 8, !tbaa !84
  %2987 = sext i32 %2984 to i64
  %2988 = getelementptr inbounds i32, ptr %2986, i64 %2987
  %2989 = load i32, ptr %2988, align 4, !tbaa !25
  %2990 = and i32 %2989, 1023
  %2991 = icmp eq i32 %2990, 1023
  %2992 = add i32 %2989, 1
  %2993 = or i32 %2989, 1023
  %2994 = select i1 %2991, i32 %2993, i32 %2992
  %2995 = lshr i32 %2989, 10
  %2996 = load i32, ptr @y, align 4, !tbaa !25
  %2997 = shl i32 %2996, 22
  %2998 = sub nsw i32 %2997, %2995
  %2999 = ashr i32 %2998, 3
  %3000 = zext i32 %2990 to i64
  %3001 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %3000
  %3002 = load i32, ptr %3001, align 4, !tbaa !25
  %3003 = mul nsw i32 %2999, %3002
  %3004 = and i32 %3003, -1024
  %3005 = add i32 %3004, %2994
  store i32 %3005, ptr %2988, align 4, !tbaa !25
  store i32 %2982, ptr %2983, align 4, !tbaa !82
  %3006 = zext i8 %2981 to i64
  %3007 = getelementptr inbounds i32, ptr %2986, i64 %3006
  %3008 = load i32, ptr %3007, align 4, !tbaa !25
  %3009 = lshr i32 %3008, 20
  %3010 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %3011 = zext i32 %3009 to i64
  %3012 = getelementptr inbounds i16, ptr %3010, i64 %3011
  %3013 = load i16, ptr %3012, align 2, !tbaa !31
  %3014 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %3015 = add nsw i32 %3014, 1
  store i32 %3015, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %3016 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %3017 = sext i32 %3014 to i64
  %3018 = getelementptr inbounds i16, ptr %3016, i64 %3017
  store i16 %3013, ptr %3018, align 2, !tbaa !31
  %3019 = add nuw nsw i64 %2970, 1
  %3020 = icmp eq i64 %3019, 28
  br i1 %3020, label %3125, label %2969, !llvm.loop !145

3021:                                             ; preds = %2960
  %3022 = icmp eq i32 %2967, 0
  %3023 = select i1 %3022, i64 1, i64 4
  br label %3024

3024:                                             ; preds = %3021, %3024
  %3025 = phi ptr [ %2968, %3021 ], [ %3030, %3024 ]
  %3026 = phi i64 [ 0, %3021 ], [ %3071, %3024 ]
  %3027 = getelementptr inbounds ptr, ptr %3025, i64 %3026
  %3028 = load ptr, ptr %3027, align 8, !tbaa !5
  %3029 = getelementptr inbounds i8, ptr %3028, i64 %3023
  store ptr %3029, ptr %3027, align 8, !tbaa !5
  %3030 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %3031 = getelementptr inbounds ptr, ptr %3030, i64 %3026
  %3032 = load ptr, ptr %3031, align 8, !tbaa !5
  %3033 = load i8, ptr %3032, align 1, !tbaa !9
  %3034 = zext i8 %3033 to i32
  %3035 = getelementptr inbounds [28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %3026, i32 1
  %3036 = load i32, ptr %3035, align 4, !tbaa !82
  %3037 = getelementptr inbounds [28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %3026, i32 2, i32 3
  %3038 = load ptr, ptr %3037, align 8, !tbaa !84
  %3039 = sext i32 %3036 to i64
  %3040 = getelementptr inbounds i32, ptr %3038, i64 %3039
  %3041 = load i32, ptr %3040, align 4, !tbaa !25
  %3042 = and i32 %3041, 1023
  %3043 = icmp eq i32 %3042, 1023
  %3044 = add i32 %3041, 1
  %3045 = or i32 %3041, 1023
  %3046 = select i1 %3043, i32 %3045, i32 %3044
  %3047 = lshr i32 %3041, 10
  %3048 = load i32, ptr @y, align 4, !tbaa !25
  %3049 = shl i32 %3048, 22
  %3050 = sub nsw i32 %3049, %3047
  %3051 = ashr i32 %3050, 3
  %3052 = zext i32 %3042 to i64
  %3053 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %3052
  %3054 = load i32, ptr %3053, align 4, !tbaa !25
  %3055 = mul nsw i32 %3051, %3054
  %3056 = and i32 %3055, -1024
  %3057 = add i32 %3056, %3046
  store i32 %3057, ptr %3040, align 4, !tbaa !25
  store i32 %3034, ptr %3035, align 4, !tbaa !82
  %3058 = zext i8 %3033 to i64
  %3059 = getelementptr inbounds i32, ptr %3038, i64 %3058
  %3060 = load i32, ptr %3059, align 4, !tbaa !25
  %3061 = lshr i32 %3060, 20
  %3062 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %3063 = zext i32 %3061 to i64
  %3064 = getelementptr inbounds i16, ptr %3062, i64 %3063
  %3065 = load i16, ptr %3064, align 2, !tbaa !31
  %3066 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %3067 = add nsw i32 %3066, 1
  store i32 %3067, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %3068 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %3069 = sext i32 %3066 to i64
  %3070 = getelementptr inbounds i16, ptr %3068, i64 %3069
  store i16 %3065, ptr %3070, align 2, !tbaa !31
  %3071 = add nuw nsw i64 %3026, 1
  %3072 = icmp eq i64 %3071, 28
  br i1 %3072, label %3125, label %3024, !llvm.loop !146

3073:                                             ; preds = %2960
  %3074 = add nuw nsw i32 %2967, 1
  %3075 = zext i32 %3074 to i64
  br label %3076

3076:                                             ; preds = %3073, %3076
  %3077 = phi ptr [ %2968, %3073 ], [ %3082, %3076 ]
  %3078 = phi i64 [ 0, %3073 ], [ %3123, %3076 ]
  %3079 = getelementptr inbounds ptr, ptr %3077, i64 %3078
  %3080 = load ptr, ptr %3079, align 8, !tbaa !5
  %3081 = getelementptr inbounds i8, ptr %3080, i64 %3075
  store ptr %3081, ptr %3079, align 8, !tbaa !5
  %3082 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %3083 = getelementptr inbounds ptr, ptr %3082, i64 %3078
  %3084 = load ptr, ptr %3083, align 8, !tbaa !5
  %3085 = load i8, ptr %3084, align 1, !tbaa !9
  %3086 = zext i8 %3085 to i32
  %3087 = getelementptr inbounds [28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %3078, i32 1
  %3088 = load i32, ptr %3087, align 4, !tbaa !82
  %3089 = getelementptr inbounds [28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %3078, i32 2, i32 3
  %3090 = load ptr, ptr %3089, align 8, !tbaa !84
  %3091 = sext i32 %3088 to i64
  %3092 = getelementptr inbounds i32, ptr %3090, i64 %3091
  %3093 = load i32, ptr %3092, align 4, !tbaa !25
  %3094 = and i32 %3093, 1023
  %3095 = icmp eq i32 %3094, 1023
  %3096 = add i32 %3093, 1
  %3097 = or i32 %3093, 1023
  %3098 = select i1 %3095, i32 %3097, i32 %3096
  %3099 = lshr i32 %3093, 10
  %3100 = load i32, ptr @y, align 4, !tbaa !25
  %3101 = shl i32 %3100, 22
  %3102 = sub nsw i32 %3101, %3099
  %3103 = ashr i32 %3102, 3
  %3104 = zext i32 %3094 to i64
  %3105 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %3104
  %3106 = load i32, ptr %3105, align 4, !tbaa !25
  %3107 = mul nsw i32 %3103, %3106
  %3108 = and i32 %3107, -1024
  %3109 = add i32 %3108, %3098
  store i32 %3109, ptr %3092, align 4, !tbaa !25
  store i32 %3086, ptr %3087, align 4, !tbaa !82
  %3110 = zext i8 %3085 to i64
  %3111 = getelementptr inbounds i32, ptr %3090, i64 %3110
  %3112 = load i32, ptr %3111, align 4, !tbaa !25
  %3113 = lshr i32 %3112, 20
  %3114 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %3115 = zext i32 %3113 to i64
  %3116 = getelementptr inbounds i16, ptr %3114, i64 %3115
  %3117 = load i16, ptr %3116, align 2, !tbaa !31
  %3118 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %3119 = add nsw i32 %3118, 1
  store i32 %3119, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %3120 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %3121 = sext i32 %3118 to i64
  %3122 = getelementptr inbounds i16, ptr %3120, i64 %3121
  store i16 %3117, ptr %3122, align 2, !tbaa !31
  %3123 = add nuw nsw i64 %3078, 1
  %3124 = icmp eq i64 %3123, 28
  br i1 %3124, label %3125, label %3076, !llvm.loop !147

3125:                                             ; preds = %3076, %3024, %2969
  %3126 = load i32, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  %3127 = icmp eq i32 %3126, 0
  %3128 = zext i1 %3127 to i32
  %3129 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %3130 = add nsw i32 %3129, %3128
  %3131 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %3132 = add nsw i32 %3131, 1
  store i32 %3132, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %3133 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 5, i32 3), align 8, !tbaa !61
  %3134 = sext i32 %3131 to i64
  %3135 = getelementptr inbounds i32, ptr %3133, i64 %3134
  store i32 %3130, ptr %3135, align 4, !tbaa !25
  %3136 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %3137 = add nsw i32 %3136, 2
  store i32 %3137, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %3138 = add nsw i32 %3137, %2440
  %3139 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %3140 = add nsw i32 %3139, 1
  store i32 %3140, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %3141 = sext i32 %3139 to i64
  %3142 = getelementptr inbounds i32, ptr %3133, i64 %3141
  store i32 %3138, ptr %3142, align 4, !tbaa !25
  %3143 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %3144 = add nsw i32 %3143, 256
  store i32 %3144, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %3145 = and i32 %2449, 511
  %3146 = add nsw i32 %3144, %3145
  %3147 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %3148 = add nsw i32 %3147, 1
  store i32 %3148, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %3149 = sext i32 %3147 to i64
  %3150 = getelementptr inbounds i32, ptr %3133, i64 %3149
  store i32 %3146, ptr %3150, align 4, !tbaa !25
  %3151 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %3152 = add nsw i32 %3151, 512
  store i32 %3152, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %3153 = tail call noundef i32 @_ZN5Mixer1pEv(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ9jpegModelR5MixerE2m1)
  %3154 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %3155 = sext i32 %3153 to i64
  %3156 = getelementptr inbounds i16, ptr %3154, i64 %3155
  %3157 = load i16, ptr %3156, align 2, !tbaa !31
  %3158 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %3159 = load i32, ptr %3158, align 8, !tbaa !64
  %3160 = add nsw i32 %3159, 1
  store i32 %3160, ptr %3158, align 8, !tbaa !64
  %3161 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %3162 = load ptr, ptr %3161, align 8, !tbaa !59
  %3163 = sext i32 %3159 to i64
  %3164 = getelementptr inbounds i16, ptr %3162, i64 %3163
  store i16 %3157, ptr %3164, align 2, !tbaa !31
  %3165 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE8adv_pred, i64 0, i32 3), align 8, !tbaa !61
  %3166 = getelementptr inbounds i32, ptr %3165, i64 1
  %3167 = load i32, ptr %3166, align 4, !tbaa !25
  %3168 = shl i32 %3167, 9
  %3169 = and i32 %3168, 32256
  %3170 = or i32 %3169, %3145
  %3171 = tail call noundef i32 @_ZN3APM1pEiii(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2a1, i32 noundef %3153, i32 noundef %3170, i32 noundef 1023)
  %3172 = and i32 %2449, 255
  %3173 = shl nuw nsw i32 %2440, 8
  %3174 = or i32 %3172, %3173
  %3175 = tail call noundef i32 @_ZN3APM1pEiii(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2a2, i32 noundef %3171, i32 noundef %3174, i32 noundef 255)
  %3176 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %3177 = sext i32 %3175 to i64
  %3178 = getelementptr inbounds i16, ptr %3176, i64 %3177
  %3179 = load i16, ptr %3178, align 2, !tbaa !31
  %3180 = load i32, ptr %3158, align 8, !tbaa !64
  %3181 = add nsw i32 %3180, 1
  store i32 %3181, ptr %3158, align 8, !tbaa !64
  %3182 = load ptr, ptr %3161, align 8, !tbaa !59
  %3183 = sext i32 %3180 to i64
  %3184 = getelementptr inbounds i16, ptr %3182, i64 %3183
  store i16 %3179, ptr %3184, align 2, !tbaa !31
  %3185 = add nuw nsw i32 %3172, 2
  br label %3186

3186:                                             ; preds = %743, %190, %201, %208, %215, %257, %179, %185, %1149, %1160, %1057, %1123, %1140, %1050, %1029, %1189, %985, %991, %1003, %966, %957, %625, %634, %775, %911, %791, %661, %642, %2457, %3125, %2054, %2038, %950, %938, %487, %427, %423, %172
  %3187 = phi i32 [ 1, %2054 ], [ %2039, %2038 ], [ %951, %950 ], [ %939, %938 ], [ %488, %487 ], [ %176, %427 ], [ %176, %423 ], [ %173, %172 ], [ %3185, %3125 ], [ %2458, %2457 ], [ %667, %775 ], [ %912, %911 ], [ %792, %791 ], [ %662, %661 ], [ %643, %642 ], [ %626, %625 ], [ %635, %634 ], [ %986, %985 ], [ %992, %991 ], [ %1004, %1003 ], [ %967, %966 ], [ %958, %957 ], [ %1058, %1057 ], [ %1124, %1123 ], [ %1141, %1140 ], [ %1051, %1050 ], [ %1030, %1029 ], [ %1190, %1189 ], [ %1150, %1149 ], [ %1161, %1160 ], [ %186, %185 ], [ %176, %179 ], [ %176, %257 ], [ %176, %215 ], [ %176, %208 ], [ %176, %201 ], [ %176, %190 ], [ %667, %743 ]
  ret i32 %3187

3188:                                             ; preds = %2421, %2416, %2410, %2412, %2414, %2425, %2427, %2429, %168, %166, %164, %162, %160, %158, %156, %154, %152, %150, %148, %146, %144, %142, %140
  %3189 = phi ptr [ @_ZGVZ9jpegModelR5MixerE1t, %2410 ], [ @_ZGVZ9jpegModelR5MixerE3cxt, %2412 ], [ @_ZGVZ9jpegModelR5MixerE2cp, %2414 ], [ @_ZGVZ9jpegModelR5MixerE2m1, %2425 ], [ @_ZGVZ9jpegModelR5MixerE2a1, %2427 ], [ @_ZGVZ9jpegModelR5MixerE2a2, %2429 ], [ @_ZGVZ9jpegModelR5MixerE4qmap, %168 ], [ @_ZGVZ9jpegModelR5MixerE4qtab, %166 ], [ @_ZGVZ9jpegModelR5MixerE4zpos, %164 ], [ @_ZGVZ9jpegModelR5MixerE3lcp, %162 ], [ @_ZGVZ9jpegModelR5MixerE2ls, %160 ], [ @_ZGVZ9jpegModelR5MixerE4sumv, %158 ], [ @_ZGVZ9jpegModelR5MixerE4sumu, %156 ], [ @_ZGVZ9jpegModelR5MixerE8adv_pred, %154 ], [ @_ZGVZ9jpegModelR5MixerE5cbuf2, %152 ], [ @_ZGVZ9jpegModelR5MixerE4cbuf, %150 ], [ @_ZGVZ9jpegModelR5MixerE4pred, %148 ], [ @_ZGVZ9jpegModelR5MixerE5color, %146 ], [ @_ZGVZ9jpegModelR5MixerE4hbuf, %144 ], [ @_ZGVZ9jpegModelR5MixerE3huf, %142 ], [ @_ZGVZ9jpegModelR5MixerE2ht, %140 ], [ @_ZGVZ9jpegModelR5MixerE2sm, %2416 ], [ @_ZGVZ9jpegModelR5MixerE2sm, %2421 ]
  %3190 = phi { ptr, i32 } [ %2411, %2410 ], [ %2413, %2412 ], [ %2415, %2414 ], [ %2426, %2425 ], [ %2428, %2427 ], [ %2430, %2429 ], [ %169, %168 ], [ %167, %166 ], [ %165, %164 ], [ %163, %162 ], [ %161, %160 ], [ %159, %158 ], [ %157, %156 ], [ %155, %154 ], [ %153, %152 ], [ %151, %150 ], [ %149, %148 ], [ %147, %146 ], [ %145, %144 ], [ %143, %142 ], [ %141, %140 ], [ %2417, %2416 ], [ %2420, %2421 ]
  tail call void @__cxa_guard_abort(ptr nonnull %3189) #39
  resume { ptr, i32 } %3190
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5ArrayI3HUFLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.7, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !148
  store i32 %1, ptr %0, align 8, !tbaa !126
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array.7, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = mul i32 %1, 12
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #41
  %17 = getelementptr inbounds %class.Array.7, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !149
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %20, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array.7, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !124
  br label %23

23:                                               ; preds = %5, %21
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayI3HUFLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !126
  %3 = mul i32 %2, -12
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %5 = add nsw i32 %4, %3
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array.7, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !149
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6IntBufC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !60
  store i32 %1, ptr %0, align 8, !tbaa !51
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = shl i32 %1, 2
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #41
  %17 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !52
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %20, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !61
  br label %23

23:                                               ; preds = %5, %21
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN6IntBufD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !51
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = shl i32 %2, 2
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !52
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #21

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN2BHILi9EEC2Ei(ptr noundef nonnull align 8 dereferenceable(28) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 {
  %3 = mul nsw i32 %1, 9
  %4 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 1
  store i32 %3, ptr %4, align 4, !tbaa !150
  store i32 %3, ptr %0, align 8, !tbaa !152
  %5 = icmp slt i32 %1, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %7, i8 0, i64 16, i1 false)
  br label %29

8:                                                ; preds = %2
  %9 = add nuw i32 %3, 64
  %10 = load i32, ptr @programChecker, align 8, !tbaa !13
  %11 = add nsw i32 %10, %9
  store i32 %11, ptr @programChecker, align 8, !tbaa !13
  %12 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %13 = icmp sgt i32 %11, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  store i32 %11, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %15

15:                                               ; preds = %14, %8
  %16 = sext i32 %9 to i64
  %17 = tail call noalias ptr @calloc(i64 noundef %16, i64 noundef 1) #41
  %18 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 2
  store ptr %17, ptr %18, align 8, !tbaa !153
  %19 = icmp eq ptr %17, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %21, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %21, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

22:                                               ; preds = %15
  %23 = getelementptr inbounds i8, ptr %17, i64 64
  %24 = ptrtoint ptr %17 to i64
  %25 = and i64 %24, 63
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds i8, ptr %23, i64 %26
  %28 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 3
  store ptr %27, ptr %28, align 8, !tbaa !154
  br label %29

29:                                               ; preds = %6, %22
  %30 = getelementptr inbounds %class.BH, ptr %0, i64 0, i32 1
  %31 = add nsw i32 %1, -1
  store i32 %31, ptr %30, align 8, !tbaa !155
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN2BHILi9EED2Ev(ptr noundef nonnull align 8 dereferenceable(28) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load i32, ptr %0, align 8, !tbaa !152
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = sub i32 %3, %2
  %5 = add i32 %4, -64
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !153
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @__cxx_global_array_dtor.13(ptr nocapture readnone %0) #6 section ".text.startup" {
  br label %2

2:                                                ; preds = %13, %1
  %3 = phi ptr [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 1, i64 0), %1 ], [ %4, %13 ]
  %4 = getelementptr inbounds %class.StateMap, ptr %3, i64 -1
  %5 = getelementptr %class.StateMap, ptr %3, i64 -1, i32 2
  %6 = load i32, ptr %5, align 8, !tbaa !10
  %7 = load i32, ptr @programChecker, align 8, !tbaa !13
  %8 = shl i32 %6, 2
  %9 = sub i32 %7, %8
  store i32 %9, ptr @programChecker, align 8, !tbaa !13
  %10 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %11 = icmp sgt i32 %9, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  store i32 %9, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %13

13:                                               ; preds = %2, %12
  %14 = getelementptr %class.StateMap, ptr %3, i64 -1, i32 2, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  tail call void @free(ptr noundef %15) #39
  %16 = icmp eq ptr %4, @_ZZ9jpegModelR5MixerE2sm
  br i1 %16, label %17, label %2

17:                                               ; preds = %13
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN5Mixer6updateEv(ptr noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 comdat align 2 {
  %2 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 6
  %3 = load i32, ptr %2, align 8, !tbaa !62
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %91

5:                                                ; preds = %1
  %6 = load i32, ptr @y, align 4, !tbaa !25
  %7 = shl i32 %6, 12
  %8 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9, i32 3
  %9 = load ptr, ptr %8, align 8, !tbaa !61
  %10 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %11 = load ptr, ptr %10, align 8
  %12 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 3
  %13 = load ptr, ptr %12, align 8
  %14 = load i32, ptr %0, align 8
  %15 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4, i32 3
  %16 = load ptr, ptr %15, align 8
  %17 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %18 = load i32, ptr %17, align 8
  %19 = freeze i32 %18
  %20 = add i32 %19, 7
  %21 = and i32 %20, -8
  %22 = icmp sgt i32 %21, 0
  %23 = zext i32 %21 to i64
  br i1 %22, label %24, label %91

24:                                               ; preds = %5
  %25 = zext i32 %3 to i64
  %26 = lshr i32 %20, 3
  %27 = zext i32 %26 to i64
  %28 = shl nuw nsw i64 %27, 4
  %29 = getelementptr i8, ptr %16, i64 %28
  %30 = getelementptr i8, ptr %11, i64 %28
  br label %31

31:                                               ; preds = %24, %88
  %32 = phi i64 [ 0, %24 ], [ %89, %88 ]
  %33 = getelementptr inbounds i32, ptr %9, i64 %32
  %34 = load i32, ptr %33, align 4, !tbaa !25
  %35 = icmp eq i32 %7, %34
  br i1 %35, label %88, label %36

36:                                               ; preds = %31
  %37 = sub nsw i32 %7, %34
  %38 = mul nsw i32 %37, 7
  %39 = getelementptr inbounds i32, ptr %13, i64 %32
  %40 = load i32, ptr %39, align 4, !tbaa !25
  %41 = mul nsw i32 %14, %40
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds i16, ptr %16, i64 %42
  %44 = shl nsw i64 %42, 1
  %45 = getelementptr i8, ptr %29, i64 %44
  %46 = icmp ult ptr %43, %30
  %47 = icmp ult ptr %11, %45
  %48 = and i1 %46, %47
  br i1 %48, label %70, label %49

49:                                               ; preds = %36
  %50 = insertelement <8 x i32> poison, i32 %38, i64 0
  %51 = shufflevector <8 x i32> %50, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %52

52:                                               ; preds = %52, %49
  %53 = phi i64 [ 0, %49 ], [ %68, %52 ]
  %54 = getelementptr inbounds i16, ptr %43, i64 %53
  %55 = load <8 x i16>, ptr %54, align 2, !tbaa !31, !alias.scope !157, !noalias !160
  %56 = sext <8 x i16> %55 to <8 x i32>
  %57 = getelementptr inbounds i16, ptr %11, i64 %53
  %58 = load <8 x i16>, ptr %57, align 2, !tbaa !31, !alias.scope !160
  %59 = sext <8 x i16> %58 to <8 x i32>
  %60 = mul nsw <8 x i32> %51, %59
  %61 = ashr <8 x i32> %60, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %62 = add nsw <8 x i32> %61, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %63 = ashr <8 x i32> %62, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %64 = add nsw <8 x i32> %63, %56
  %65 = tail call <8 x i32> @llvm.smax.v8i32(<8 x i32> %64, <8 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>)
  %66 = tail call <8 x i32> @llvm.smin.v8i32(<8 x i32> %65, <8 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>)
  %67 = trunc <8 x i32> %66 to <8 x i16>
  store <8 x i16> %67, ptr %54, align 2, !tbaa !31, !alias.scope !157, !noalias !160
  %68 = add nuw i64 %53, 8
  %69 = icmp eq i64 %68, %23
  br i1 %69, label %88, label %52, !llvm.loop !162

70:                                               ; preds = %36, %70
  %71 = phi i64 [ %86, %70 ], [ 0, %36 ]
  %72 = getelementptr inbounds i16, ptr %43, i64 %71
  %73 = load i16, ptr %72, align 2, !tbaa !31
  %74 = sext i16 %73 to i32
  %75 = getelementptr inbounds i16, ptr %11, i64 %71
  %76 = load i16, ptr %75, align 2, !tbaa !31
  %77 = sext i16 %76 to i32
  %78 = mul nsw i32 %38, %77
  %79 = ashr i32 %78, 15
  %80 = add nsw i32 %79, 1
  %81 = ashr i32 %80, 1
  %82 = add nsw i32 %81, %74
  %83 = tail call i32 @llvm.smax.i32(i32 %82, i32 -32768)
  %84 = tail call i32 @llvm.smin.i32(i32 %83, i32 32767)
  %85 = trunc i32 %84 to i16
  store i16 %85, ptr %72, align 2, !tbaa !31
  %86 = add nuw nsw i64 %71, 1
  %87 = icmp eq i64 %86, %23
  br i1 %87, label %88, label %70, !llvm.loop !163

88:                                               ; preds = %52, %70, %31
  %89 = add nuw nsw i64 %32, 1
  %90 = icmp eq i64 %89, %25
  br i1 %90, label %91, label %31, !llvm.loop !164

91:                                               ; preds = %88, %5, %1
  store i32 0, ptr %2, align 8, !tbaa !62
  %92 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 7
  store i32 0, ptr %92, align 4, !tbaa !63
  %93 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  store i32 0, ptr %93, align 8, !tbaa !64
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr dso_local noundef ptr @_ZN2BHILi9EEixEj(ptr noundef nonnull align 8 dereferenceable(28) %0, i32 noundef %1) local_unnamed_addr #13 comdat align 2 {
  %3 = lshr i32 %1, 16
  %4 = and i32 %1, 65535
  %5 = xor i32 %3, %4
  %6 = shl i32 %1, 3
  %7 = getelementptr inbounds %class.BH, ptr %0, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !155
  %9 = and i32 %8, %6
  %10 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !154
  %12 = mul i32 %9, 9
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, ptr %11, i64 %13
  %15 = getelementptr inbounds i8, ptr %14, i64 2
  %16 = load i8, ptr %15, align 1, !tbaa !9
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %110, label %18

18:                                               ; preds = %2
  %19 = load i16, ptr %14, align 2, !tbaa !31
  %20 = zext i16 %19 to i32
  %21 = icmp eq i32 %5, %20
  br i1 %21, label %112, label %22

22:                                               ; preds = %18
  %23 = mul i32 %9, 9
  %24 = add i32 %23, 9
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, ptr %11, i64 %25
  %27 = getelementptr inbounds i8, ptr %26, i64 2
  %28 = load i8, ptr %27, align 1, !tbaa !9
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %106, label %30

30:                                               ; preds = %22
  %31 = load i16, ptr %26, align 2, !tbaa !31
  %32 = zext i16 %31 to i32
  %33 = icmp eq i32 %5, %32
  br i1 %33, label %126, label %34

34:                                               ; preds = %30
  %35 = mul i32 %9, 9
  %36 = add i32 %35, 18
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, ptr %11, i64 %37
  %39 = getelementptr inbounds i8, ptr %38, i64 2
  %40 = load i8, ptr %39, align 1, !tbaa !9
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %106, label %42

42:                                               ; preds = %34
  %43 = load i16, ptr %38, align 2, !tbaa !31
  %44 = zext i16 %43 to i32
  %45 = icmp eq i32 %5, %44
  br i1 %45, label %126, label %46

46:                                               ; preds = %42
  %47 = mul i32 %9, 9
  %48 = add i32 %47, 27
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, ptr %11, i64 %49
  %51 = getelementptr inbounds i8, ptr %50, i64 2
  %52 = load i8, ptr %51, align 1, !tbaa !9
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %106, label %54

54:                                               ; preds = %46
  %55 = load i16, ptr %50, align 2, !tbaa !31
  %56 = zext i16 %55 to i32
  %57 = icmp eq i32 %5, %56
  br i1 %57, label %126, label %58

58:                                               ; preds = %54
  %59 = mul i32 %9, 9
  %60 = add i32 %59, 36
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i8, ptr %11, i64 %61
  %63 = getelementptr inbounds i8, ptr %62, i64 2
  %64 = load i8, ptr %63, align 1, !tbaa !9
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %106, label %66

66:                                               ; preds = %58
  %67 = load i16, ptr %62, align 2, !tbaa !31
  %68 = zext i16 %67 to i32
  %69 = icmp eq i32 %5, %68
  br i1 %69, label %126, label %70

70:                                               ; preds = %66
  %71 = mul i32 %9, 9
  %72 = add i32 %71, 45
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, ptr %11, i64 %73
  %75 = getelementptr inbounds i8, ptr %74, i64 2
  %76 = load i8, ptr %75, align 1, !tbaa !9
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %106, label %78

78:                                               ; preds = %70
  %79 = load i16, ptr %74, align 2, !tbaa !31
  %80 = zext i16 %79 to i32
  %81 = icmp eq i32 %5, %80
  br i1 %81, label %126, label %82

82:                                               ; preds = %78
  %83 = mul i32 %9, 9
  %84 = add i32 %83, 54
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, ptr %11, i64 %85
  %87 = getelementptr inbounds i8, ptr %86, i64 2
  %88 = load i8, ptr %87, align 1, !tbaa !9
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %106, label %90

90:                                               ; preds = %82
  %91 = load i16, ptr %86, align 2, !tbaa !31
  %92 = zext i16 %91 to i32
  %93 = icmp eq i32 %5, %92
  br i1 %93, label %126, label %94

94:                                               ; preds = %90
  %95 = mul i32 %9, 9
  %96 = add i32 %95, 63
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, ptr %11, i64 %97
  %99 = getelementptr inbounds i8, ptr %98, i64 2
  %100 = load i8, ptr %99, align 1, !tbaa !9
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %94
  %103 = load i16, ptr %98, align 2, !tbaa !31
  %104 = zext i16 %103 to i32
  %105 = icmp eq i32 %5, %104
  br i1 %105, label %126, label %114

106:                                              ; preds = %22, %34, %46, %58, %70, %82, %94
  %107 = phi i64 [ 7, %94 ], [ 6, %82 ], [ 5, %70 ], [ 4, %58 ], [ 3, %46 ], [ 2, %34 ], [ 1, %22 ]
  %108 = phi ptr [ %98, %94 ], [ %86, %82 ], [ %74, %70 ], [ %62, %58 ], [ %50, %46 ], [ %38, %34 ], [ %26, %22 ]
  %109 = trunc i32 %5 to i16
  store i16 %109, ptr %108, align 2, !tbaa !31
  br label %126

110:                                              ; preds = %2
  %111 = trunc i32 %5 to i16
  store i16 %111, ptr %14, align 2, !tbaa !31
  br label %112

112:                                              ; preds = %18, %110
  %113 = getelementptr inbounds i8, ptr %14, i64 1
  br label %142

114:                                              ; preds = %102
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(9) getelementptr inbounds ([9 x i8], ptr @_ZZN2BHILi9EEixEjE3tmp, i64 0, i64 2), i8 0, i64 7, i1 false)
  %115 = trunc i32 %5 to i16
  store i16 %115, ptr @_ZZN2BHILi9EEixEjE3tmp, align 1, !tbaa !31
  %116 = add i32 %12, 65
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, ptr %11, i64 %117
  %119 = load i8, ptr %118, align 1, !tbaa !9
  %120 = add i32 %12, 56
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8, ptr %11, i64 %121
  %123 = load i8, ptr %122, align 1, !tbaa !9
  %124 = icmp ugt i8 %119, %123
  %125 = select i1 %124, i64 6, i64 7
  br label %129

126:                                              ; preds = %102, %90, %78, %66, %54, %42, %30, %106
  %127 = phi i64 [ %107, %106 ], [ 7, %102 ], [ 6, %90 ], [ 5, %78 ], [ 4, %66 ], [ 3, %54 ], [ 2, %42 ], [ 1, %30 ]
  %128 = phi ptr [ %108, %106 ], [ %98, %102 ], [ %86, %90 ], [ %74, %78 ], [ %62, %66 ], [ %50, %54 ], [ %38, %42 ], [ %26, %30 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(9) @_ZZN2BHILi9EEixEjE3tmp, ptr noundef nonnull align 2 dereferenceable(9) %128, i64 9, i1 false)
  br label %129

129:                                              ; preds = %114, %126
  %130 = phi i64 [ %127, %126 ], [ %125, %114 ]
  %131 = add i32 %12, 9
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, ptr %11, i64 %132
  %134 = mul i64 %130, 9
  %135 = and i64 %134, 4294967295
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %133, ptr nonnull align 1 %14, i64 %135, i1 false)
  %136 = load ptr, ptr %10, align 8, !tbaa !154
  %137 = getelementptr inbounds i8, ptr %136, i64 %13
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(9) %137, ptr noundef nonnull align 1 dereferenceable(9) @_ZZN2BHILi9EEixEjE3tmp, i64 9, i1 false)
  %138 = or i32 %12, 1
  %139 = load ptr, ptr %10, align 8, !tbaa !154
  %140 = sext i32 %138 to i64
  %141 = getelementptr inbounds i8, ptr %139, i64 %140
  br label %142

142:                                              ; preds = %129, %112
  %143 = phi ptr [ %113, %112 ], [ %141, %129 ]
  ret ptr %143
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_ZN5Mixer1pEv(ptr noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 comdat align 2 {
  %2 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8
  br label %3

3:                                                ; preds = %167, %1
  %4 = phi ptr [ %0, %1 ], [ %55, %167 ]
  %5 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 8
  %6 = load i32, ptr %5, align 8, !tbaa !64
  %7 = and i32 %6, 7
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %52, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 3, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !59
  %12 = sext i32 %6 to i64
  %13 = shl nsw i64 %12, 1
  %14 = getelementptr i8, ptr %11, i64 %13
  %15 = shl i32 %6, 1
  %16 = and i32 %15, 14
  %17 = xor i32 %16, 14
  %18 = add nuw nsw i32 %17, 2
  %19 = zext i32 %18 to i64
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(1) %14, i8 0, i64 %19, i1 false), !tbaa !31
  %20 = add nsw i64 %12, 1
  %21 = and i64 %20, 7
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %49, label %23, !llvm.loop !165

23:                                               ; preds = %9
  %24 = add nsw i64 %12, 2
  %25 = and i64 %24, 7
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %49, label %27, !llvm.loop !165

27:                                               ; preds = %23
  %28 = add nsw i64 %12, 3
  %29 = and i64 %28, 7
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %49, label %31, !llvm.loop !165

31:                                               ; preds = %27
  %32 = add nsw i64 %12, 4
  %33 = and i64 %32, 7
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %49, label %35, !llvm.loop !165

35:                                               ; preds = %31
  %36 = add nsw i64 %12, 5
  %37 = and i64 %36, 7
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %49, label %39, !llvm.loop !165

39:                                               ; preds = %35
  %40 = add nsw i64 %12, 6
  %41 = and i64 %40, 7
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %49, label %43, !llvm.loop !165

43:                                               ; preds = %39
  %44 = add nsw i64 %12, 7
  %45 = and i64 %44, 7
  %46 = icmp eq i64 %45, 0
  %47 = add nsw i64 %12, 8
  %48 = select i1 %46, i64 %44, i64 %47
  br label %49, !llvm.loop !165

49:                                               ; preds = %43, %39, %35, %31, %27, %23, %9
  %50 = phi i64 [ %20, %9 ], [ %24, %23 ], [ %28, %27 ], [ %32, %31 ], [ %36, %35 ], [ %40, %39 ], [ %48, %43 ]
  %51 = trunc i64 %50 to i32
  store i32 %51, ptr %5, align 8, !tbaa !64
  br label %52

52:                                               ; preds = %49, %3
  %53 = phi i32 [ %51, %49 ], [ %6, %3 ]
  %54 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 10
  %55 = load ptr, ptr %54, align 8, !tbaa !47
  %56 = icmp eq ptr %55, null
  br i1 %56, label %309, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 6
  %59 = load i32, ptr %58, align 8, !tbaa !62
  %60 = icmp sgt i32 %59, 0
  br i1 %60, label %61, label %147

61:                                               ; preds = %57
  %62 = load i32, ptr @y, align 4, !tbaa !25
  %63 = shl i32 %62, 12
  %64 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 9, i32 3
  %65 = load ptr, ptr %64, align 8, !tbaa !61
  %66 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 3, i32 3
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 5, i32 3
  %69 = load ptr, ptr %68, align 8
  %70 = load i32, ptr %55, align 8
  %71 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 4, i32 3
  %72 = load ptr, ptr %71, align 8
  %73 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 8
  %74 = load i32, ptr %73, align 8
  %75 = freeze i32 %74
  %76 = add i32 %75, 7
  %77 = and i32 %76, -8
  %78 = icmp sgt i32 %77, 0
  %79 = zext i32 %77 to i64
  br i1 %78, label %80, label %147

80:                                               ; preds = %61
  %81 = zext i32 %59 to i64
  %82 = lshr i32 %76, 3
  %83 = zext i32 %82 to i64
  %84 = shl nuw nsw i64 %83, 4
  %85 = getelementptr i8, ptr %72, i64 %84
  %86 = getelementptr i8, ptr %67, i64 %84
  br label %87

87:                                               ; preds = %144, %80
  %88 = phi i64 [ 0, %80 ], [ %145, %144 ]
  %89 = getelementptr inbounds i32, ptr %65, i64 %88
  %90 = load i32, ptr %89, align 4, !tbaa !25
  %91 = icmp eq i32 %63, %90
  br i1 %91, label %144, label %92

92:                                               ; preds = %87
  %93 = sub nsw i32 %63, %90
  %94 = mul nsw i32 %93, 7
  %95 = getelementptr inbounds i32, ptr %69, i64 %88
  %96 = load i32, ptr %95, align 4, !tbaa !25
  %97 = mul nsw i32 %96, %70
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i16, ptr %72, i64 %98
  %100 = shl nsw i64 %98, 1
  %101 = getelementptr i8, ptr %85, i64 %100
  %102 = icmp ult ptr %99, %86
  %103 = icmp ult ptr %67, %101
  %104 = and i1 %102, %103
  br i1 %104, label %126, label %105

105:                                              ; preds = %92
  %106 = insertelement <8 x i32> poison, i32 %94, i64 0
  %107 = shufflevector <8 x i32> %106, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %108

108:                                              ; preds = %108, %105
  %109 = phi i64 [ 0, %105 ], [ %124, %108 ]
  %110 = getelementptr inbounds i16, ptr %99, i64 %109
  %111 = load <8 x i16>, ptr %110, align 2, !tbaa !31, !alias.scope !166, !noalias !169
  %112 = sext <8 x i16> %111 to <8 x i32>
  %113 = getelementptr inbounds i16, ptr %67, i64 %109
  %114 = load <8 x i16>, ptr %113, align 2, !tbaa !31, !alias.scope !169
  %115 = sext <8 x i16> %114 to <8 x i32>
  %116 = mul nsw <8 x i32> %107, %115
  %117 = ashr <8 x i32> %116, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %118 = add nsw <8 x i32> %117, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %119 = ashr <8 x i32> %118, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %120 = add nsw <8 x i32> %119, %112
  %121 = tail call <8 x i32> @llvm.smax.v8i32(<8 x i32> %120, <8 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>)
  %122 = tail call <8 x i32> @llvm.smin.v8i32(<8 x i32> %121, <8 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>)
  %123 = trunc <8 x i32> %122 to <8 x i16>
  store <8 x i16> %123, ptr %110, align 2, !tbaa !31, !alias.scope !166, !noalias !169
  %124 = add nuw i64 %109, 8
  %125 = icmp eq i64 %124, %79
  br i1 %125, label %144, label %108, !llvm.loop !171

126:                                              ; preds = %92, %126
  %127 = phi i64 [ %142, %126 ], [ 0, %92 ]
  %128 = getelementptr inbounds i16, ptr %99, i64 %127
  %129 = load i16, ptr %128, align 2, !tbaa !31
  %130 = sext i16 %129 to i32
  %131 = getelementptr inbounds i16, ptr %67, i64 %127
  %132 = load i16, ptr %131, align 2, !tbaa !31
  %133 = sext i16 %132 to i32
  %134 = mul nsw i32 %94, %133
  %135 = ashr i32 %134, 15
  %136 = add nsw i32 %135, 1
  %137 = ashr i32 %136, 1
  %138 = add nsw i32 %137, %130
  %139 = tail call i32 @llvm.smax.i32(i32 %138, i32 -32768)
  %140 = tail call i32 @llvm.smin.i32(i32 %139, i32 32767)
  %141 = trunc i32 %140 to i16
  store i16 %141, ptr %128, align 2, !tbaa !31
  %142 = add nuw nsw i64 %127, 1
  %143 = icmp eq i64 %142, %79
  br i1 %143, label %144, label %126, !llvm.loop !172

144:                                              ; preds = %108, %126, %87
  %145 = add nuw nsw i64 %88, 1
  %146 = icmp eq i64 %145, %81
  br i1 %146, label %147, label %87, !llvm.loop !164

147:                                              ; preds = %144, %57, %61
  store i32 0, ptr %58, align 8, !tbaa !62
  %148 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 7
  store i32 0, ptr %148, align 4, !tbaa !63
  %149 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 8
  store i32 0, ptr %149, align 8, !tbaa !64
  %150 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 6
  %151 = load i32, ptr %150, align 8, !tbaa !62
  %152 = icmp sgt i32 %151, 0
  br i1 %152, label %153, label %167

153:                                              ; preds = %147
  %154 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 3, i32 3
  %155 = load ptr, ptr %154, align 8, !tbaa !59
  %156 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 5, i32 3
  %157 = load ptr, ptr %156, align 8, !tbaa !61
  %158 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 4, i32 3
  %159 = load ptr, ptr %158, align 8, !tbaa !59
  %160 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 9, i32 3
  %161 = load ptr, ptr %160, align 8, !tbaa !61
  %162 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 3, i32 3
  %163 = load ptr, ptr %162, align 8, !tbaa !59
  br label %177

164:                                              ; preds = %295
  %165 = load i32, ptr %148, align 4, !tbaa !63
  %166 = load i32, ptr %58, align 8, !tbaa !62
  br label %167

167:                                              ; preds = %164, %147
  %168 = phi i32 [ %166, %164 ], [ 0, %147 ]
  %169 = phi i32 [ %165, %164 ], [ 0, %147 ]
  %170 = add nsw i32 %168, 1
  store i32 %170, ptr %58, align 8, !tbaa !62
  %171 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 5, i32 3
  %172 = load ptr, ptr %171, align 8, !tbaa !61
  %173 = sext i32 %168 to i64
  %174 = getelementptr inbounds i32, ptr %172, i64 %173
  store i32 %169, ptr %174, align 4, !tbaa !25
  %175 = load i32, ptr %148, align 4, !tbaa !63
  %176 = add nsw i32 %175, 1
  store i32 %176, ptr %148, align 4, !tbaa !63
  br label %3

177:                                              ; preds = %153, %295
  %178 = phi i64 [ 0, %153 ], [ %305, %295 ]
  %179 = getelementptr inbounds i32, ptr %157, i64 %178
  %180 = load i32, ptr %179, align 4, !tbaa !25
  %181 = load i32, ptr %4, align 8, !tbaa !55
  %182 = mul nsw i32 %181, %180
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i16, ptr %159, i64 %183
  %185 = load i32, ptr %5, align 8, !tbaa !64
  %186 = add nsw i32 %185, 7
  %187 = and i32 %186, -8
  %188 = icmp sgt i32 %187, 0
  br i1 %188, label %189, label %277

189:                                              ; preds = %177
  %190 = zext i32 %187 to i64
  %191 = tail call i64 @llvm.umax.i64(i64 %190, i64 2)
  %192 = add nsw i64 %191, -1
  %193 = lshr i64 %192, 1
  %194 = add nuw nsw i64 %193, 1
  %195 = icmp ult i64 %192, 14
  br i1 %195, label %245, label %196

196:                                              ; preds = %189
  %197 = and i64 %194, -8
  %198 = shl nuw i64 %197, 1
  br label %199

199:                                              ; preds = %199, %196
  %200 = phi i64 [ 0, %196 ], [ %239, %199 ]
  %201 = phi <4 x i32> [ zeroinitializer, %196 ], [ %237, %199 ]
  %202 = phi <4 x i32> [ zeroinitializer, %196 ], [ %238, %199 ]
  %203 = shl i64 %200, 1
  %204 = or i64 %203, 8
  %205 = getelementptr inbounds i16, ptr %155, i64 %203
  %206 = getelementptr inbounds i16, ptr %155, i64 %204
  %207 = load <8 x i16>, ptr %205, align 2, !tbaa !31
  %208 = load <8 x i16>, ptr %206, align 2, !tbaa !31
  %209 = shufflevector <8 x i16> %207, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %210 = shufflevector <8 x i16> %208, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %211 = shufflevector <8 x i16> %207, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %212 = shufflevector <8 x i16> %208, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %213 = sext <4 x i16> %209 to <4 x i32>
  %214 = sext <4 x i16> %210 to <4 x i32>
  %215 = getelementptr inbounds i16, ptr %184, i64 %203
  %216 = getelementptr inbounds i16, ptr %184, i64 %204
  %217 = load <8 x i16>, ptr %215, align 2, !tbaa !31
  %218 = load <8 x i16>, ptr %216, align 2, !tbaa !31
  %219 = shufflevector <8 x i16> %217, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %220 = shufflevector <8 x i16> %218, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %221 = shufflevector <8 x i16> %217, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %222 = shufflevector <8 x i16> %218, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %223 = sext <4 x i16> %219 to <4 x i32>
  %224 = sext <4 x i16> %220 to <4 x i32>
  %225 = mul nsw <4 x i32> %223, %213
  %226 = mul nsw <4 x i32> %224, %214
  %227 = sext <4 x i16> %211 to <4 x i32>
  %228 = sext <4 x i16> %212 to <4 x i32>
  %229 = sext <4 x i16> %221 to <4 x i32>
  %230 = sext <4 x i16> %222 to <4 x i32>
  %231 = mul nsw <4 x i32> %229, %227
  %232 = mul nsw <4 x i32> %230, %228
  %233 = add nsw <4 x i32> %231, %225
  %234 = add nsw <4 x i32> %232, %226
  %235 = ashr <4 x i32> %233, <i32 8, i32 8, i32 8, i32 8>
  %236 = ashr <4 x i32> %234, <i32 8, i32 8, i32 8, i32 8>
  %237 = add <4 x i32> %235, %201
  %238 = add <4 x i32> %236, %202
  %239 = add nuw i64 %200, 8
  %240 = icmp eq i64 %239, %197
  br i1 %240, label %241, label %199, !llvm.loop !173

241:                                              ; preds = %199
  %242 = add <4 x i32> %238, %237
  %243 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %242)
  %244 = icmp eq i64 %194, %197
  br i1 %244, label %271, label %245

245:                                              ; preds = %189, %241
  %246 = phi i64 [ 0, %189 ], [ %198, %241 ]
  %247 = phi i32 [ 0, %189 ], [ %243, %241 ]
  br label %248

248:                                              ; preds = %245, %248
  %249 = phi i64 [ %269, %248 ], [ %246, %245 ]
  %250 = phi i32 [ %268, %248 ], [ %247, %245 ]
  %251 = getelementptr inbounds i16, ptr %155, i64 %249
  %252 = load i16, ptr %251, align 2, !tbaa !31
  %253 = sext i16 %252 to i32
  %254 = getelementptr inbounds i16, ptr %184, i64 %249
  %255 = load i16, ptr %254, align 2, !tbaa !31
  %256 = sext i16 %255 to i32
  %257 = mul nsw i32 %256, %253
  %258 = or i64 %249, 1
  %259 = getelementptr inbounds i16, ptr %155, i64 %258
  %260 = load i16, ptr %259, align 2, !tbaa !31
  %261 = sext i16 %260 to i32
  %262 = getelementptr inbounds i16, ptr %184, i64 %258
  %263 = load i16, ptr %262, align 2, !tbaa !31
  %264 = sext i16 %263 to i32
  %265 = mul nsw i32 %264, %261
  %266 = add nsw i32 %265, %257
  %267 = ashr i32 %266, 8
  %268 = add nsw i32 %267, %250
  %269 = add nuw nsw i64 %249, 2
  %270 = icmp ult i64 %269, %190
  br i1 %270, label %248, label %271, !llvm.loop !174

271:                                              ; preds = %248, %241
  %272 = phi i32 [ %243, %241 ], [ %268, %248 ]
  %273 = icmp sgt i32 %272, 65535
  br i1 %273, label %295, label %274

274:                                              ; preds = %271
  %275 = ashr i32 %272, 5
  %276 = icmp slt i32 %272, -65504
  br i1 %276, label %295, label %277

277:                                              ; preds = %177, %274
  %278 = phi i32 [ %275, %274 ], [ 0, %177 ]
  %279 = and i32 %278, 127
  %280 = ashr i32 %278, 7
  %281 = add nsw i32 %280, 16
  %282 = zext i32 %281 to i64
  %283 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %282
  %284 = load i32, ptr %283, align 4, !tbaa !25
  %285 = sub nuw nsw i32 128, %279
  %286 = mul nsw i32 %285, %284
  %287 = add nsw i32 %280, 17
  %288 = zext i32 %287 to i64
  %289 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %288
  %290 = load i32, ptr %289, align 4, !tbaa !25
  %291 = mul nsw i32 %290, %279
  %292 = add i32 %286, 64
  %293 = add i32 %292, %291
  %294 = ashr i32 %293, 7
  br label %295

295:                                              ; preds = %271, %274, %277
  %296 = phi i32 [ %294, %277 ], [ 4095, %271 ], [ 0, %274 ]
  %297 = getelementptr inbounds i32, ptr %161, i64 %178
  store i32 %296, ptr %297, align 4, !tbaa !25
  %298 = sext i32 %296 to i64
  %299 = getelementptr inbounds i16, ptr %2, i64 %298
  %300 = load i16, ptr %299, align 2, !tbaa !31
  %301 = load i32, ptr %149, align 8, !tbaa !64
  %302 = add nsw i32 %301, 1
  store i32 %302, ptr %149, align 8, !tbaa !64
  %303 = sext i32 %301 to i64
  %304 = getelementptr inbounds i16, ptr %163, i64 %303
  store i16 %300, ptr %304, align 2, !tbaa !31
  %305 = add nuw nsw i64 %178, 1
  %306 = load i32, ptr %150, align 8, !tbaa !62
  %307 = sext i32 %306 to i64
  %308 = icmp slt i64 %305, %307
  br i1 %308, label %177, label %164, !llvm.loop !175

309:                                              ; preds = %52
  %310 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 3, i32 3
  %311 = load ptr, ptr %310, align 8, !tbaa !59
  %312 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 4, i32 3
  %313 = load ptr, ptr %312, align 8, !tbaa !59
  %314 = add nuw nsw i32 %53, 7
  %315 = and i32 %314, -8
  %316 = icmp sgt i32 %315, 0
  br i1 %316, label %317, label %405

317:                                              ; preds = %309
  %318 = zext i32 %315 to i64
  %319 = tail call i64 @llvm.umax.i64(i64 %318, i64 2)
  %320 = add nsw i64 %319, -1
  %321 = lshr i64 %320, 1
  %322 = add nuw nsw i64 %321, 1
  %323 = icmp ult i64 %320, 14
  br i1 %323, label %373, label %324

324:                                              ; preds = %317
  %325 = and i64 %322, -8
  %326 = shl nuw i64 %325, 1
  br label %327

327:                                              ; preds = %327, %324
  %328 = phi i64 [ 0, %324 ], [ %367, %327 ]
  %329 = phi <4 x i32> [ zeroinitializer, %324 ], [ %365, %327 ]
  %330 = phi <4 x i32> [ zeroinitializer, %324 ], [ %366, %327 ]
  %331 = shl i64 %328, 1
  %332 = or i64 %331, 8
  %333 = getelementptr inbounds i16, ptr %311, i64 %331
  %334 = getelementptr inbounds i16, ptr %311, i64 %332
  %335 = load <8 x i16>, ptr %333, align 2, !tbaa !31
  %336 = load <8 x i16>, ptr %334, align 2, !tbaa !31
  %337 = shufflevector <8 x i16> %335, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %338 = shufflevector <8 x i16> %336, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %339 = shufflevector <8 x i16> %335, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %340 = shufflevector <8 x i16> %336, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %341 = sext <4 x i16> %337 to <4 x i32>
  %342 = sext <4 x i16> %338 to <4 x i32>
  %343 = getelementptr inbounds i16, ptr %313, i64 %331
  %344 = getelementptr inbounds i16, ptr %313, i64 %332
  %345 = load <8 x i16>, ptr %343, align 2, !tbaa !31
  %346 = load <8 x i16>, ptr %344, align 2, !tbaa !31
  %347 = shufflevector <8 x i16> %345, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %348 = shufflevector <8 x i16> %346, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %349 = shufflevector <8 x i16> %345, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %350 = shufflevector <8 x i16> %346, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %351 = sext <4 x i16> %347 to <4 x i32>
  %352 = sext <4 x i16> %348 to <4 x i32>
  %353 = mul nsw <4 x i32> %351, %341
  %354 = mul nsw <4 x i32> %352, %342
  %355 = sext <4 x i16> %339 to <4 x i32>
  %356 = sext <4 x i16> %340 to <4 x i32>
  %357 = sext <4 x i16> %349 to <4 x i32>
  %358 = sext <4 x i16> %350 to <4 x i32>
  %359 = mul nsw <4 x i32> %357, %355
  %360 = mul nsw <4 x i32> %358, %356
  %361 = add nsw <4 x i32> %359, %353
  %362 = add nsw <4 x i32> %360, %354
  %363 = ashr <4 x i32> %361, <i32 8, i32 8, i32 8, i32 8>
  %364 = ashr <4 x i32> %362, <i32 8, i32 8, i32 8, i32 8>
  %365 = add <4 x i32> %363, %329
  %366 = add <4 x i32> %364, %330
  %367 = add nuw i64 %328, 8
  %368 = icmp eq i64 %367, %325
  br i1 %368, label %369, label %327, !llvm.loop !176

369:                                              ; preds = %327
  %370 = add <4 x i32> %366, %365
  %371 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %370)
  %372 = icmp eq i64 %322, %325
  br i1 %372, label %399, label %373

373:                                              ; preds = %317, %369
  %374 = phi i64 [ 0, %317 ], [ %326, %369 ]
  %375 = phi i32 [ 0, %317 ], [ %371, %369 ]
  br label %376

376:                                              ; preds = %373, %376
  %377 = phi i64 [ %397, %376 ], [ %374, %373 ]
  %378 = phi i32 [ %396, %376 ], [ %375, %373 ]
  %379 = getelementptr inbounds i16, ptr %311, i64 %377
  %380 = load i16, ptr %379, align 2, !tbaa !31
  %381 = sext i16 %380 to i32
  %382 = getelementptr inbounds i16, ptr %313, i64 %377
  %383 = load i16, ptr %382, align 2, !tbaa !31
  %384 = sext i16 %383 to i32
  %385 = mul nsw i32 %384, %381
  %386 = or i64 %377, 1
  %387 = getelementptr inbounds i16, ptr %311, i64 %386
  %388 = load i16, ptr %387, align 2, !tbaa !31
  %389 = sext i16 %388 to i32
  %390 = getelementptr inbounds i16, ptr %313, i64 %386
  %391 = load i16, ptr %390, align 2, !tbaa !31
  %392 = sext i16 %391 to i32
  %393 = mul nsw i32 %392, %389
  %394 = add nsw i32 %393, %385
  %395 = ashr i32 %394, 8
  %396 = add nsw i32 %395, %378
  %397 = add nuw nsw i64 %377, 2
  %398 = icmp ult i64 %397, %318
  br i1 %398, label %376, label %399, !llvm.loop !177

399:                                              ; preds = %376, %369
  %400 = phi i32 [ %371, %369 ], [ %396, %376 ]
  %401 = icmp sgt i32 %400, 524287
  br i1 %401, label %423, label %402

402:                                              ; preds = %399
  %403 = ashr i32 %400, 8
  %404 = icmp slt i32 %400, -524032
  br i1 %404, label %423, label %405

405:                                              ; preds = %309, %402
  %406 = phi i32 [ %403, %402 ], [ 0, %309 ]
  %407 = and i32 %406, 127
  %408 = ashr i32 %406, 7
  %409 = add nsw i32 %408, 16
  %410 = zext i32 %409 to i64
  %411 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %410
  %412 = load i32, ptr %411, align 4, !tbaa !25
  %413 = sub nuw nsw i32 128, %407
  %414 = mul nsw i32 %413, %412
  %415 = add nsw i32 %408, 17
  %416 = zext i32 %415 to i64
  %417 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %416
  %418 = load i32, ptr %417, align 4, !tbaa !25
  %419 = mul nsw i32 %418, %407
  %420 = add i32 %414, 64
  %421 = add i32 %420, %419
  %422 = ashr i32 %421, 7
  br label %423

423:                                              ; preds = %399, %402, %405
  %424 = phi i32 [ %422, %405 ], [ 4095, %399 ], [ 0, %402 ]
  %425 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 9, i32 3
  %426 = load ptr, ptr %425, align 8, !tbaa !61
  store i32 %424, ptr %426, align 4, !tbaa !25
  ret i32 %424
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_ZN3APM1pEiii(ptr noundef nonnull align 8 dereferenceable(32) %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #14 comdat align 2 {
  %5 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 4, !tbaa !82
  %7 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !84
  %9 = sext i32 %6 to i64
  %10 = getelementptr inbounds i32, ptr %8, i64 %9
  %11 = load i32, ptr %10, align 4, !tbaa !25
  %12 = and i32 %11, 1023
  %13 = icmp slt i32 %12, %3
  %14 = add i32 %11, 1
  %15 = and i32 %11, -1024
  %16 = or i32 %15, %3
  %17 = select i1 %13, i32 %14, i32 %16
  %18 = lshr i32 %11, 10
  %19 = load i32, ptr @y, align 4, !tbaa !25
  %20 = shl i32 %19, 22
  %21 = sub nsw i32 %20, %18
  %22 = ashr i32 %21, 3
  %23 = zext i32 %12 to i64
  %24 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %23
  %25 = load i32, ptr %24, align 4, !tbaa !25
  %26 = mul nsw i32 %22, %25
  %27 = and i32 %26, -1024
  %28 = add i32 %27, %17
  store i32 %28, ptr %10, align 4, !tbaa !25
  %29 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %30 = sext i32 %1 to i64
  %31 = getelementptr inbounds i16, ptr %29, i64 %30
  %32 = load i16, ptr %31, align 2, !tbaa !31
  %33 = sext i16 %32 to i32
  %34 = mul nsw i32 %33, 23
  %35 = add nsw i32 %34, 47104
  %36 = and i32 %35, 4095
  %37 = mul nsw i32 %2, 24
  %38 = ashr i32 %35, 12
  %39 = add nsw i32 %38, %37
  %40 = lshr i32 %36, 11
  %41 = add nsw i32 %39, %40
  store i32 %41, ptr %5, align 4, !tbaa !82
  %42 = sext i32 %39 to i64
  %43 = getelementptr inbounds i32, ptr %8, i64 %42
  %44 = load i32, ptr %43, align 4, !tbaa !25
  %45 = lshr i32 %44, 13
  %46 = sub nuw nsw i32 4096, %36
  %47 = mul nuw nsw i32 %46, %45
  %48 = add nsw i32 %39, 1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %8, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !25
  %52 = lshr i32 %51, 13
  %53 = mul nuw nsw i32 %52, %36
  %54 = add nuw i32 %47, %53
  %55 = lshr i32 %54, 19
  ret i32 %55
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z8wavModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = alloca [49 x [49 x [2 x double]]], align 16
  %3 = alloca [49 x [49 x double]], align 16
  %4 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE1K acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %13, !prof !110

6:                                                ; preds = %1
  %7 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE1K) #39
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %6
  %10 = load i32, ptr @level, align 4, !tbaa !25
  %11 = add nsw i32 %10, -1
  %12 = lshr i32 128, %11
  store i32 %12, ptr @_ZZ8wavModelR5MixerE1K, align 4, !tbaa !25
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE1K) #39
  br label %13

13:                                               ; preds = %9, %6, %1
  call void @llvm.lifetime.start.p0(i64 38416, ptr nonnull %2) #39
  call void @llvm.lifetime.start.p0(i64 19208, ptr nonnull %3) #39
  %14 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm1 acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %22, !prof !110

16:                                               ; preds = %13
  %17 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm1) #39
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm1, i32 noundef 131072)
          to label %20 unwind label %133

20:                                               ; preds = %19
  %21 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm1) #39
  br label %22

22:                                               ; preds = %20, %16, %13
  %23 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm2 acquire, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %31, !prof !110

25:                                               ; preds = %22
  %26 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm2) #39
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm2, i32 noundef 131072)
          to label %29 unwind label %135

29:                                               ; preds = %28
  %30 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm2, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm2) #39
  br label %31

31:                                               ; preds = %29, %25, %22
  %32 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm3 acquire, align 8
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %40, !prof !110

34:                                               ; preds = %31
  %35 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm3) #39
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm3, i32 noundef 131072)
          to label %38 unwind label %137

38:                                               ; preds = %37
  %39 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm3, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm3) #39
  br label %40

40:                                               ; preds = %38, %34, %31
  %41 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm4 acquire, align 8
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %49, !prof !110

43:                                               ; preds = %40
  %44 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm4) #39
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm4, i32 noundef 131072)
          to label %47 unwind label %139

47:                                               ; preds = %46
  %48 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm4, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm4) #39
  br label %49

49:                                               ; preds = %47, %43, %40
  %50 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm5 acquire, align 8
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %58, !prof !110

52:                                               ; preds = %49
  %53 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm5) #39
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %52
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm5, i32 noundef 131072)
          to label %56 unwind label %141

56:                                               ; preds = %55
  %57 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm5, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm5) #39
  br label %58

58:                                               ; preds = %56, %52, %49
  %59 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm6 acquire, align 8
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %67, !prof !110

61:                                               ; preds = %58
  %62 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm6) #39
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %61
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm6, i32 noundef 131072)
          to label %65 unwind label %143

65:                                               ; preds = %64
  %66 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm6, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm6) #39
  br label %67

67:                                               ; preds = %65, %61, %58
  %68 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm7 acquire, align 8
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %76, !prof !110

70:                                               ; preds = %67
  %71 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm7) #39
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %70
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm7, i32 noundef 131072)
          to label %74 unwind label %145

74:                                               ; preds = %73
  %75 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm7, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm7) #39
  br label %76

76:                                               ; preds = %74, %70, %67
  %77 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm8 acquire, align 8
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %85, !prof !110

79:                                               ; preds = %76
  %80 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm8) #39
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %79
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm8, i32 noundef 131072)
          to label %83 unwind label %147

83:                                               ; preds = %82
  %84 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm8, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm8) #39
  br label %85

85:                                               ; preds = %83, %79, %76
  %86 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE2cm acquire, align 8
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %96, !prof !110

88:                                               ; preds = %85
  %89 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE2cm) #39
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %96, label %91

91:                                               ; preds = %88
  %92 = load i32, ptr @level, align 4, !tbaa !25
  %93 = shl i32 262144, %92
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8wavModelR5MixerE2cm, i32 noundef %93, i32 noundef 10)
          to label %94 unwind label %149

94:                                               ; preds = %91
  %95 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE2cm) #39
  br label %96

96:                                               ; preds = %94, %88, %85
  %97 = load i32, ptr @bpos, align 4, !tbaa !25
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %351

99:                                               ; preds = %96
  %100 = load i32, ptr @pos, align 4, !tbaa !25
  %101 = add nsw i32 %100, -8
  %102 = load i32, ptr @buf, align 8, !tbaa !20
  %103 = add nsw i32 %102, -1
  %104 = and i32 %103, %101
  %105 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %106 = sext i32 %104 to i64
  %107 = getelementptr inbounds i8, ptr %105, i64 %106
  %108 = load i8, ptr %107, align 1, !tbaa !9
  %109 = icmp eq i8 %108, 100
  br i1 %109, label %110, label %351

110:                                              ; preds = %99
  %111 = add nsw i32 %100, -7
  %112 = and i32 %103, %111
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, ptr %105, i64 %113
  %115 = load i8, ptr %114, align 1, !tbaa !9
  %116 = icmp eq i8 %115, 97
  br i1 %116, label %117, label %351

117:                                              ; preds = %110
  %118 = add nsw i32 %100, -6
  %119 = and i32 %103, %118
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8, ptr %105, i64 %120
  %122 = load i8, ptr %121, align 1, !tbaa !9
  %123 = icmp eq i8 %122, 116
  br i1 %123, label %124, label %351

124:                                              ; preds = %117
  %125 = add nsw i32 %100, -5
  %126 = and i32 %103, %125
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i8, ptr %105, i64 %127
  %129 = load i8, ptr %128, align 1, !tbaa !9
  %130 = icmp eq i8 %129, 97
  br i1 %130, label %131, label %351

131:                                              ; preds = %124
  %132 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 1
  br label %151

133:                                              ; preds = %19
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %2630

135:                                              ; preds = %28
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %2630

137:                                              ; preds = %37
  %138 = landingpad { ptr, i32 }
          cleanup
  br label %2630

139:                                              ; preds = %46
  %140 = landingpad { ptr, i32 }
          cleanup
  br label %2630

141:                                              ; preds = %55
  %142 = landingpad { ptr, i32 }
          cleanup
  br label %2630

143:                                              ; preds = %64
  %144 = landingpad { ptr, i32 }
          cleanup
  br label %2630

145:                                              ; preds = %73
  %146 = landingpad { ptr, i32 }
          cleanup
  br label %2630

147:                                              ; preds = %82
  %148 = landingpad { ptr, i32 }
          cleanup
  br label %2630

149:                                              ; preds = %91
  %150 = landingpad { ptr, i32 }
          cleanup
  br label %2630

151:                                              ; preds = %131, %347
  %152 = phi i32 [ -32, %131 ], [ %349, %347 ]
  %153 = phi i32 [ 32, %131 ], [ %348, %347 ]
  %154 = load i32, ptr @pos, align 4, !tbaa !25
  %155 = sub nsw i32 %154, %153
  %156 = load i32, ptr @buf, align 8, !tbaa !20
  %157 = add nsw i32 %156, -1
  %158 = and i32 %157, %155
  %159 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %160 = sext i32 %158 to i64
  %161 = getelementptr inbounds i8, ptr %159, i64 %160
  %162 = load i8, ptr %161, align 1, !tbaa !9
  %163 = icmp eq i8 %162, 102
  br i1 %163, label %164, label %347

164:                                              ; preds = %151
  %165 = add nuw nsw i32 %152, 1
  %166 = add i32 %165, %154
  %167 = and i32 %157, %166
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i8, ptr %159, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !9
  %171 = icmp eq i8 %170, 109
  br i1 %171, label %172, label %347

172:                                              ; preds = %164
  %173 = add nuw nsw i32 %152, 2
  %174 = add i32 %173, %154
  %175 = and i32 %157, %174
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds i8, ptr %159, i64 %176
  %178 = load i8, ptr %177, align 1, !tbaa !9
  %179 = icmp eq i8 %178, 116
  br i1 %179, label %180, label %347

180:                                              ; preds = %172
  %181 = add nuw nsw i32 %152, 3
  %182 = add i32 %181, %154
  %183 = and i32 %157, %182
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i8, ptr %159, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !9
  %187 = icmp eq i8 %186, 32
  br i1 %187, label %188, label %347

188:                                              ; preds = %180
  %189 = add nuw nsw i32 %152, 8
  %190 = add i32 %189, %154
  %191 = and i32 %157, %190
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i8, ptr %159, i64 %192
  %194 = load i8, ptr %193, align 1, !tbaa !9
  %195 = zext i8 %194 to i16
  %196 = add i32 %190, 1
  %197 = and i32 %157, %196
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds i8, ptr %159, i64 %198
  %200 = load i8, ptr %199, align 1, !tbaa !9
  %201 = zext i8 %200 to i16
  %202 = shl nuw i16 %201, 8
  %203 = or i16 %202, %195
  switch i16 %203, label %347 [
    i16 1, label %204
    i16 -2, label %204
  ]

204:                                              ; preds = %188, %188
  %205 = add nuw nsw i32 %152, 22
  %206 = add i32 %205, %154
  %207 = and i32 %157, %206
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds i8, ptr %159, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !9
  %211 = zext i8 %210 to i32
  store i32 %211, ptr @_ZZ8wavModelR5MixerE4bits, align 4, !tbaa !25
  %212 = add nuw nsw i32 %211, 7
  %213 = lshr i32 %212, 3
  store i32 %213, ptr @_ZZ8wavModelR5MixerE5bytes, align 4, !tbaa !25
  %214 = add nuw nsw i32 %152, 10
  %215 = add i32 %214, %154
  %216 = and i32 %157, %215
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds i8, ptr %159, i64 %217
  %219 = load i8, ptr %218, align 1, !tbaa !9
  %220 = zext i8 %219 to i32
  store i32 %220, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !25
  %221 = mul nuw nsw i32 %213, %220
  store i32 %221, ptr @_ZZ8wavModelR5MixerE1w, align 4, !tbaa !25
  %222 = add i32 %154, -4
  %223 = and i32 %157, %222
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i8, ptr %159, i64 %224
  %226 = load i8, ptr %225, align 1, !tbaa !9
  %227 = zext i8 %226 to i32
  %228 = add i32 %154, -3
  %229 = and i32 %157, %228
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds i8, ptr %159, i64 %230
  %232 = load i8, ptr %231, align 1, !tbaa !9
  %233 = zext i8 %232 to i32
  %234 = shl nuw nsw i32 %233, 8
  %235 = or i32 %234, %227
  %236 = add i32 %154, -2
  %237 = and i32 %157, %236
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds i8, ptr %159, i64 %238
  %240 = load i8, ptr %239, align 1, !tbaa !9
  %241 = zext i8 %240 to i32
  %242 = shl nuw nsw i32 %241, 16
  %243 = or i32 %235, %242
  %244 = add i32 %154, -1
  %245 = and i32 %157, %244
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i8, ptr %159, i64 %246
  %248 = load i8, ptr %247, align 1, !tbaa !9
  %249 = zext i8 %248 to i32
  %250 = shl nuw nsw i32 %249, 24
  %251 = or i32 %243, %250
  store i32 %251, ptr @_ZZ8wavModelR5MixerE1s, align 4, !tbaa !25
  %252 = add nsw i32 %220, -1
  %253 = icmp ult i32 %252, 2
  br i1 %253, label %254, label %346

254:                                              ; preds = %204
  switch i8 %210, label %346 [
    i8 16, label %255
    i8 8, label %255
  ]

255:                                              ; preds = %254, %254
  %256 = add nsw i32 %251, %154
  store i32 %256, ptr @_ZZ8wavModelR5MixerE3eof, align 4, !tbaa !25
  %257 = icmp eq i8 %219, 0
  br i1 %257, label %295, label %258

258:                                              ; preds = %255
  %259 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %260 = load i1, ptr @_ZL1D, align 4
  %261 = select i1 %260, i32 12, i32 0
  %262 = add nuw nsw i32 %261, %259
  %263 = icmp slt i32 %262, 0
  br i1 %263, label %271, label %264

264:                                              ; preds = %258
  %265 = or i32 %261, 1
  %266 = add i32 %265, %259
  %267 = zext i8 %219 to i64
  %268 = shl nuw nsw i64 %267, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 @_ZZ8wavModelR5MixerE7counter, i8 0, i64 %268, i1 false), !tbaa !25
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 @_ZZ8wavModelR5MixerE1n, i8 0, i64 %268, i1 false), !tbaa !25
  %269 = zext i8 %219 to i64
  %270 = zext i32 %266 to i64
  br label %293

271:                                              ; preds = %258
  %272 = zext i8 %219 to i64
  %273 = shl nuw nsw i64 %272, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 @_ZZ8wavModelR5MixerE7counter, i8 0, i64 %273, i1 false), !tbaa !25
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 @_ZZ8wavModelR5MixerE1n, i8 0, i64 %273, i1 false), !tbaa !25
  %274 = zext i8 %219 to i64
  %275 = icmp ult i8 %219, 4
  br i1 %275, label %286, label %276

276:                                              ; preds = %271
  %277 = and i64 %274, 252
  br label %278

278:                                              ; preds = %278, %276
  %279 = phi i64 [ 0, %276 ], [ %282, %278 ]
  %280 = getelementptr inbounds [2 x double], ptr %132, i64 0, i64 %279
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, ptr %280, align 16, !tbaa !178
  %281 = getelementptr inbounds double, ptr %280, i64 2
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, ptr %281, align 16, !tbaa !178
  %282 = add nuw i64 %279, 4
  %283 = icmp eq i64 %282, %277
  br i1 %283, label %284, label %278, !llvm.loop !180

284:                                              ; preds = %278
  %285 = icmp eq i64 %277, %274
  br i1 %285, label %295, label %286

286:                                              ; preds = %271, %284
  %287 = phi i64 [ 0, %271 ], [ %277, %284 ]
  br label %288

288:                                              ; preds = %286, %288
  %289 = phi i64 [ %291, %288 ], [ %287, %286 ]
  %290 = getelementptr inbounds [2 x double], ptr %132, i64 0, i64 %289
  store double 1.000000e+00, ptr %290, align 8, !tbaa !178
  %291 = add nuw nsw i64 %289, 1
  %292 = icmp eq i64 %291, %274
  br i1 %292, label %295, label %288, !llvm.loop !181

293:                                              ; preds = %264, %338
  %294 = phi i64 [ 0, %264 ], [ %340, %338 ]
  br label %300

295:                                              ; preds = %338, %288, %284, %255
  %296 = add nuw nsw i32 %220, %211
  store i32 %296, ptr @_ZL5wmode, align 4, !tbaa !25
  %297 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.14, i32 noundef %211)
  %298 = load i32, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !25
  %299 = icmp eq i32 %298, 1
  br i1 %299, label %342, label %344

300:                                              ; preds = %293, %335
  %301 = phi i64 [ 0, %293 ], [ %336, %335 ]
  %302 = trunc i64 %301 to i32
  %303 = tail call i32 @llvm.smax.i32(i32 %302, i32 %262)
  %304 = zext i32 %303 to i64
  %305 = sub nsw i64 %304, %301
  %306 = add i64 %305, 1
  %307 = sub nsw i64 %304, %301
  %308 = trunc i64 %301 to i32
  %309 = tail call i32 @llvm.smax.i32(i32 %308, i32 %262)
  %310 = add nuw i32 %309, 1
  %311 = zext i32 %310 to i64
  %312 = and i64 %306, 3
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %321, label %314

314:                                              ; preds = %300, %314
  %315 = phi i64 [ %318, %314 ], [ %301, %300 ]
  %316 = phi i64 [ %319, %314 ], [ 0, %300 ]
  %317 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %301, i64 %315, i64 %294
  store double 0.000000e+00, ptr %317, align 8, !tbaa !178
  %318 = add nuw nsw i64 %315, 1
  %319 = add i64 %316, 1
  %320 = icmp eq i64 %319, %312
  br i1 %320, label %321, label %314, !llvm.loop !182

321:                                              ; preds = %314, %300
  %322 = phi i64 [ %301, %300 ], [ %318, %314 ]
  %323 = icmp ult i64 %307, 3
  br i1 %323, label %335, label %324

324:                                              ; preds = %321, %324
  %325 = phi i64 [ %333, %324 ], [ %322, %321 ]
  %326 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %301, i64 %325, i64 %294
  store double 0.000000e+00, ptr %326, align 8, !tbaa !178
  %327 = add nuw nsw i64 %325, 1
  %328 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %301, i64 %327, i64 %294
  store double 0.000000e+00, ptr %328, align 8, !tbaa !178
  %329 = add nuw nsw i64 %325, 2
  %330 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %301, i64 %329, i64 %294
  store double 0.000000e+00, ptr %330, align 8, !tbaa !178
  %331 = add nuw nsw i64 %325, 3
  %332 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %301, i64 %331, i64 %294
  store double 0.000000e+00, ptr %332, align 8, !tbaa !178
  %333 = add nuw nsw i64 %325, 4
  %334 = icmp eq i64 %333, %311
  br i1 %334, label %335, label %324, !llvm.loop !184

335:                                              ; preds = %324, %321
  %336 = add nuw nsw i64 %301, 1
  %337 = icmp eq i64 %336, %270
  br i1 %337, label %338, label %300, !llvm.loop !185

338:                                              ; preds = %335
  %339 = getelementptr inbounds [2 x double], ptr %132, i64 0, i64 %294
  store double 1.000000e+00, ptr %339, align 8, !tbaa !178
  %340 = add nuw nsw i64 %294, 1
  %341 = icmp eq i64 %340, %269
  br i1 %341, label %295, label %293, !llvm.loop !186

342:                                              ; preds = %295
  %343 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.15)
  store i32 48, ptr @_ZL1S, align 4, !tbaa !25
  store i1 false, ptr @_ZL1D, align 4
  br label %347

344:                                              ; preds = %295
  %345 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.16)
  store i32 36, ptr @_ZL1S, align 4, !tbaa !25
  store i1 true, ptr @_ZL1D, align 4
  br label %347

346:                                              ; preds = %254, %204
  store i32 %154, ptr @_ZZ8wavModelR5MixerE3eof, align 4, !tbaa !25
  br label %347

347:                                              ; preds = %188, %151, %164, %172, %180, %342, %344, %346
  %348 = add nuw nsw i32 %153, 1
  %349 = xor i32 %153, -1
  %350 = icmp eq i32 %348, 1001
  br i1 %350, label %351, label %151, !llvm.loop !187

351:                                              ; preds = %347, %124, %117, %110, %99, %96
  %352 = load i32, ptr @pos, align 4, !tbaa !25
  %353 = load i32, ptr @_ZZ8wavModelR5MixerE3eof, align 4, !tbaa !25
  %354 = icmp sgt i32 %352, %353
  br i1 %354, label %355, label %356

355:                                              ; preds = %351
  store i32 0, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !25
  store i32 0, ptr @_ZZ8wavModelR5MixerE4bits, align 4, !tbaa !25
  br label %2628

356:                                              ; preds = %351
  %357 = load i32, ptr @bpos, align 4, !tbaa !25
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %2442

359:                                              ; preds = %356
  %360 = load i32, ptr @_ZZ8wavModelR5MixerE1s, align 4, !tbaa !25
  %361 = sub i32 %352, %353
  %362 = add i32 %361, %360
  %363 = load i32, ptr @_ZZ8wavModelR5MixerE5bytes, align 4, !tbaa !25
  %364 = srem i32 %362, %363
  %365 = load i32, ptr @_ZZ8wavModelR5MixerE1w, align 4, !tbaa !25
  %366 = srem i32 %362, %365
  %367 = sdiv i32 %366, %363
  %368 = icmp eq i32 %364, 0
  br i1 %368, label %369, label %1297

369:                                              ; preds = %359
  %370 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %371 = load i1, ptr @_ZL1D, align 4
  %372 = select i1 %371, i32 12, i32 0
  %373 = add nuw nsw i32 %372, %370
  %374 = icmp slt i32 %373, 0
  br i1 %374, label %413, label %375

375:                                              ; preds = %369
  %376 = sext i32 %367 to i64
  %377 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %376
  br label %378

378:                                              ; preds = %375, %405
  %379 = phi i1 [ %371, %375 ], [ %406, %405 ]
  %380 = phi i32 [ %370, %375 ], [ %407, %405 ]
  %381 = phi i64 [ 0, %375 ], [ %408, %405 ]
  %382 = load i32, ptr %377, align 4, !tbaa !25
  %383 = sext i32 %382 to i64
  %384 = icmp slt i64 %381, %383
  br i1 %384, label %385, label %387

385:                                              ; preds = %378
  %386 = trunc i64 %381 to i32
  br label %394

387:                                              ; preds = %378
  %388 = xor i32 %380, -1
  %389 = trunc i64 %381 to i32
  %390 = add i32 %389, %388
  %391 = icmp sgt i32 %390, -1
  %392 = icmp slt i32 %390, %382
  %393 = select i1 %391, i1 %392, i1 false
  br i1 %393, label %394, label %405

394:                                              ; preds = %385, %387
  %395 = phi i32 [ %386, %385 ], [ %389, %387 ]
  %396 = getelementptr inbounds [49 x [2 x double]], ptr %2, i64 0, i64 %381, i64 %376
  %397 = load double, ptr %396, align 8, !tbaa !178
  %398 = tail call noundef i32 @_Z1Xii(i32 noundef 0, i32 noundef 1)
  %399 = tail call noundef i32 @_Z1Xii(i32 noundef %395, i32 noundef 1)
  %400 = mul nsw i32 %399, %398
  %401 = sitofp i32 %400 to double
  %402 = tail call double @llvm.fmuladd.f64(double %397, double 0x3FEFDF3B645A1CAC, double %401)
  store double %402, ptr %396, align 8, !tbaa !178
  %403 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %404 = load i1, ptr @_ZL1D, align 4
  br label %405

405:                                              ; preds = %387, %394
  %406 = phi i1 [ %379, %387 ], [ %404, %394 ]
  %407 = phi i32 [ %380, %387 ], [ %403, %394 ]
  %408 = add nuw nsw i64 %381, 1
  %409 = select i1 %406, i32 12, i32 0
  %410 = add nuw nsw i32 %409, %407
  %411 = sext i32 %410 to i64
  %412 = icmp slt i64 %381, %411
  br i1 %412, label %378, label %413, !llvm.loop !188

413:                                              ; preds = %405, %369
  %414 = phi i1 [ %371, %369 ], [ %406, %405 ]
  %415 = phi i32 [ %370, %369 ], [ %407, %405 ]
  %416 = load i32, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !25
  %417 = icmp eq i32 %416, 2
  br i1 %417, label %418, label %489

418:                                              ; preds = %413
  br i1 %414, label %419, label %423

419:                                              ; preds = %418
  %420 = sext i32 %367 to i64
  %421 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %420
  %422 = sext i32 %415 to i64
  br label %429

423:                                              ; preds = %454, %418
  %424 = phi i32 [ %415, %418 ], [ %456, %454 ]
  %425 = icmp slt i32 %424, 1
  br i1 %425, label %489, label %426

426:                                              ; preds = %423
  %427 = sext i32 %367 to i64
  %428 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %427
  br label %461

429:                                              ; preds = %419, %454
  %430 = phi i1 [ true, %419 ], [ %455, %454 ]
  %431 = phi i32 [ %415, %419 ], [ %456, %454 ]
  %432 = phi i64 [ %422, %419 ], [ %434, %454 ]
  %433 = trunc i64 %432 to i32
  %434 = add nsw i64 %432, 1
  %435 = sub i32 %433, %431
  %436 = load i32, ptr %421, align 4, !tbaa !25
  %437 = icmp slt i32 %435, %436
  br i1 %437, label %438, label %454

438:                                              ; preds = %429
  %439 = add nuw nsw i32 %431, 1
  %440 = zext i32 %439 to i64
  %441 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %440, i64 %434, i64 %420
  %442 = load double, ptr %441, align 8, !tbaa !178
  %443 = tail call noundef i32 @_Z1Xii(i32 noundef %439, i32 noundef 1)
  %444 = trunc i64 %434 to i32
  %445 = tail call noundef i32 @_Z1Xii(i32 noundef %444, i32 noundef 1)
  %446 = mul nsw i32 %445, %443
  %447 = sitofp i32 %446 to double
  %448 = tail call double @llvm.fmuladd.f64(double %442, double 0x3FEFDF3B645A1CAC, double %447)
  %449 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %450 = add nuw nsw i32 %449, 1
  %451 = zext i32 %450 to i64
  %452 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %451, i64 %434, i64 %420
  store double %448, ptr %452, align 8, !tbaa !178
  %453 = load i1, ptr @_ZL1D, align 4
  br label %454

454:                                              ; preds = %429, %438
  %455 = phi i1 [ %430, %429 ], [ %453, %438 ]
  %456 = phi i32 [ %431, %429 ], [ %449, %438 ]
  %457 = select i1 %455, i32 12, i32 0
  %458 = add nuw nsw i32 %457, %456
  %459 = sext i32 %458 to i64
  %460 = icmp slt i64 %434, %459
  br i1 %460, label %429, label %423, !llvm.loop !189

461:                                              ; preds = %426, %484
  %462 = phi i32 [ %424, %426 ], [ %485, %484 ]
  %463 = phi i64 [ 1, %426 ], [ %486, %484 ]
  %464 = load i32, ptr %428, align 4, !tbaa !25
  %465 = sext i32 %464 to i64
  %466 = icmp slt i64 %463, %465
  br i1 %466, label %467, label %484

467:                                              ; preds = %461
  %468 = add nuw nsw i32 %462, 1
  %469 = zext i32 %468 to i64
  %470 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %463, i64 %469, i64 %427
  %471 = load double, ptr %470, align 8, !tbaa !178
  %472 = trunc i64 %463 to i32
  %473 = tail call noundef i32 @_Z1Xii(i32 noundef %472, i32 noundef 1)
  %474 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %475 = add nuw nsw i32 %474, 1
  %476 = tail call noundef i32 @_Z1Xii(i32 noundef %475, i32 noundef 1)
  %477 = mul nsw i32 %476, %473
  %478 = sitofp i32 %477 to double
  %479 = tail call double @llvm.fmuladd.f64(double %471, double 0x3FEFDF3B645A1CAC, double %478)
  %480 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %481 = add nuw nsw i32 %480, 1
  %482 = zext i32 %481 to i64
  %483 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %463, i64 %482, i64 %427
  store double %479, ptr %483, align 8, !tbaa !178
  br label %484

484:                                              ; preds = %461, %467
  %485 = phi i32 [ %462, %461 ], [ %480, %467 ]
  %486 = add nuw nsw i64 %463, 1
  %487 = sext i32 %485 to i64
  %488 = icmp slt i64 %463, %487
  br i1 %488, label %461, label %489, !llvm.loop !190

489:                                              ; preds = %484, %423, %413
  %490 = phi i32 [ %424, %423 ], [ %415, %413 ], [ %485, %484 ]
  %491 = sext i32 %367 to i64
  %492 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE1n, i64 0, i64 %491
  %493 = load i32, ptr %492, align 4, !tbaa !25
  %494 = add nsw i32 %493, 1
  store i32 %494, ptr %492, align 4, !tbaa !25
  %495 = load i32, ptr @_ZZ8wavModelR5MixerE1K, align 4, !tbaa !25
  %496 = icmp eq i32 %494, %495
  br i1 %496, label %499, label %497

497:                                              ; preds = %489
  %498 = load i1, ptr @_ZL1D, align 4
  br label %874

499:                                              ; preds = %489
  %500 = load i32, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !25
  %501 = icmp eq i32 %500, 1
  %502 = load i1, ptr @_ZL1D, align 4
  %503 = select i1 %502, i32 12, i32 0
  %504 = add nuw nsw i32 %503, %490
  %505 = icmp slt i32 %504, 1
  br i1 %501, label %507, label %506

506:                                              ; preds = %499
  br i1 %505, label %740, label %546

507:                                              ; preds = %499
  br i1 %505, label %740, label %508

508:                                              ; preds = %507, %539
  %509 = phi i1 [ %542, %539 ], [ %502, %507 ]
  %510 = phi i32 [ %543, %539 ], [ %490, %507 ]
  %511 = phi i64 [ %544, %539 ], [ 1, %507 ]
  %512 = select i1 %509, i32 12, i32 0
  %513 = add nuw nsw i32 %512, %510
  %514 = sext i32 %513 to i64
  %515 = icmp sgt i64 %511, %514
  br i1 %515, label %539, label %516

516:                                              ; preds = %508
  %517 = add nsw i64 %511, -1
  %518 = trunc i64 %517 to i32
  br label %519

519:                                              ; preds = %516, %519
  %520 = phi i64 [ %511, %516 ], [ %532, %519 ]
  %521 = add nsw i64 %520, -1
  %522 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %517, i64 %521, i64 %491
  %523 = load double, ptr %522, align 8, !tbaa !178
  %524 = tail call noundef i32 @_Z1Xii(i32 noundef %518, i32 noundef 1)
  %525 = trunc i64 %521 to i32
  %526 = tail call noundef i32 @_Z1Xii(i32 noundef %525, i32 noundef 1)
  %527 = mul nsw i32 %526, %524
  %528 = sitofp i32 %527 to double
  %529 = fsub double %523, %528
  %530 = fdiv double %529, 0x3FEFDF3B645A1CAC
  %531 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %511, i64 %520, i64 %491
  store double %530, ptr %531, align 8, !tbaa !178
  %532 = add nuw nsw i64 %520, 1
  %533 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %534 = load i1, ptr @_ZL1D, align 4
  %535 = select i1 %534, i32 12, i32 0
  %536 = add nuw nsw i32 %535, %533
  %537 = sext i32 %536 to i64
  %538 = icmp slt i64 %520, %537
  br i1 %538, label %519, label %539, !llvm.loop !191

539:                                              ; preds = %519, %508
  %540 = phi i64 [ %514, %508 ], [ %537, %519 ]
  %541 = phi i32 [ %513, %508 ], [ %536, %519 ]
  %542 = phi i1 [ %509, %508 ], [ %534, %519 ]
  %543 = phi i32 [ %510, %508 ], [ %533, %519 ]
  %544 = add nuw nsw i64 %511, 1
  %545 = icmp slt i64 %511, %540
  br i1 %545, label %508, label %602, !llvm.loop !192

546:                                              ; preds = %506, %594
  %547 = phi i1 [ %595, %594 ], [ %502, %506 ]
  %548 = phi i32 [ %596, %594 ], [ %490, %506 ]
  %549 = phi i64 [ %597, %594 ], [ 1, %506 ]
  %550 = add nuw nsw i32 %548, 1
  %551 = zext i32 %550 to i64
  %552 = icmp eq i64 %549, %551
  br i1 %552, label %594, label %553

553:                                              ; preds = %546
  %554 = select i1 %547, i32 12, i32 0
  %555 = add nuw nsw i32 %554, %548
  %556 = sext i32 %555 to i64
  %557 = icmp sgt i64 %549, %556
  br i1 %557, label %594, label %558

558:                                              ; preds = %553
  %559 = add nsw i64 %549, -1
  %560 = trunc i64 %559 to i32
  br label %561

561:                                              ; preds = %558, %584
  %562 = phi i1 [ %547, %558 ], [ %585, %584 ]
  %563 = phi i32 [ %548, %558 ], [ %586, %584 ]
  %564 = phi i1 [ %547, %558 ], [ %587, %584 ]
  %565 = phi i32 [ %548, %558 ], [ %588, %584 ]
  %566 = phi i64 [ %549, %558 ], [ %589, %584 ]
  %567 = add nuw nsw i32 %565, 1
  %568 = zext i32 %567 to i64
  %569 = icmp eq i64 %566, %568
  br i1 %569, label %584, label %570

570:                                              ; preds = %561
  %571 = add nsw i64 %566, -1
  %572 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %559, i64 %571, i64 %491
  %573 = load double, ptr %572, align 8, !tbaa !178
  %574 = tail call noundef i32 @_Z1Xii(i32 noundef %560, i32 noundef 1)
  %575 = trunc i64 %571 to i32
  %576 = tail call noundef i32 @_Z1Xii(i32 noundef %575, i32 noundef 1)
  %577 = mul nsw i32 %576, %574
  %578 = sitofp i32 %577 to double
  %579 = fsub double %573, %578
  %580 = fdiv double %579, 0x3FEFDF3B645A1CAC
  %581 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %549, i64 %566, i64 %491
  store double %580, ptr %581, align 8, !tbaa !178
  %582 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %583 = load i1, ptr @_ZL1D, align 4
  br label %584

584:                                              ; preds = %561, %570
  %585 = phi i1 [ %562, %561 ], [ %583, %570 ]
  %586 = phi i32 [ %563, %561 ], [ %582, %570 ]
  %587 = phi i1 [ %564, %561 ], [ %583, %570 ]
  %588 = phi i32 [ %565, %561 ], [ %582, %570 ]
  %589 = add nuw nsw i64 %566, 1
  %590 = select i1 %587, i32 12, i32 0
  %591 = add nuw nsw i32 %590, %588
  %592 = sext i32 %591 to i64
  %593 = icmp slt i64 %566, %592
  br i1 %593, label %561, label %594, !llvm.loop !193

594:                                              ; preds = %584, %553, %546
  %595 = phi i1 [ %547, %553 ], [ %547, %546 ], [ %585, %584 ]
  %596 = phi i32 [ %548, %553 ], [ %548, %546 ], [ %586, %584 ]
  %597 = add nuw nsw i64 %549, 1
  %598 = select i1 %595, i32 12, i32 0
  %599 = add nuw nsw i32 %598, %596
  %600 = sext i32 %599 to i64
  %601 = icmp slt i64 %549, %600
  br i1 %601, label %546, label %602, !llvm.loop !194

602:                                              ; preds = %594, %539
  %603 = phi i32 [ %541, %539 ], [ %599, %594 ]
  %604 = phi i1 [ %542, %539 ], [ %595, %594 ]
  %605 = phi i32 [ %543, %539 ], [ %596, %594 ]
  %606 = icmp slt i32 %603, 1
  br i1 %606, label %740, label %611

607:                                              ; preds = %730, %722, %671
  %608 = icmp slt i64 %614, %679
  %609 = add nuw nsw i64 %615, 1
  %610 = add i64 %612, 1
  br i1 %608, label %611, label %740, !llvm.loop !195

611:                                              ; preds = %602, %607
  %612 = phi i64 [ %610, %607 ], [ 0, %602 ]
  %613 = phi i1 [ %676, %607 ], [ %604, %602 ]
  %614 = phi i64 [ %674, %607 ], [ 1, %602 ]
  %615 = phi i64 [ %609, %607 ], [ 2, %602 ]
  %616 = phi i32 [ %675, %607 ], [ %605, %602 ]
  %617 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %614, i64 %614, i64 %491
  %618 = load double, ptr %617, align 8, !tbaa !178
  %619 = icmp ugt i64 %614, 1
  br i1 %619, label %620, label %668

620:                                              ; preds = %611
  %621 = add i64 %612, -1
  %622 = and i64 %612, 3
  %623 = icmp ult i64 %621, 3
  br i1 %623, label %652, label %624

624:                                              ; preds = %620
  %625 = and i64 %612, -4
  br label %626

626:                                              ; preds = %626, %624
  %627 = phi i64 [ 1, %624 ], [ %649, %626 ]
  %628 = phi double [ %618, %624 ], [ %648, %626 ]
  %629 = phi i64 [ 0, %624 ], [ %650, %626 ]
  %630 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %614, i64 %627
  %631 = load double, ptr %630, align 8, !tbaa !178
  %632 = fneg double %631
  %633 = tail call double @llvm.fmuladd.f64(double %632, double %631, double %628)
  %634 = add nuw nsw i64 %627, 1
  %635 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %614, i64 %634
  %636 = load double, ptr %635, align 8, !tbaa !178
  %637 = fneg double %636
  %638 = tail call double @llvm.fmuladd.f64(double %637, double %636, double %633)
  %639 = add nuw nsw i64 %627, 2
  %640 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %614, i64 %639
  %641 = load double, ptr %640, align 8, !tbaa !178
  %642 = fneg double %641
  %643 = tail call double @llvm.fmuladd.f64(double %642, double %641, double %638)
  %644 = add nuw nsw i64 %627, 3
  %645 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %614, i64 %644
  %646 = load double, ptr %645, align 8, !tbaa !178
  %647 = fneg double %646
  %648 = tail call double @llvm.fmuladd.f64(double %647, double %646, double %643)
  %649 = add nuw nsw i64 %627, 4
  %650 = add i64 %629, 4
  %651 = icmp eq i64 %650, %625
  br i1 %651, label %652, label %626, !llvm.loop !196

652:                                              ; preds = %626, %620
  %653 = phi double [ undef, %620 ], [ %648, %626 ]
  %654 = phi i64 [ 1, %620 ], [ %649, %626 ]
  %655 = phi double [ %618, %620 ], [ %648, %626 ]
  %656 = icmp eq i64 %622, 0
  br i1 %656, label %668, label %657

657:                                              ; preds = %652, %657
  %658 = phi i64 [ %665, %657 ], [ %654, %652 ]
  %659 = phi double [ %664, %657 ], [ %655, %652 ]
  %660 = phi i64 [ %666, %657 ], [ 0, %652 ]
  %661 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %614, i64 %658
  %662 = load double, ptr %661, align 8, !tbaa !178
  %663 = fneg double %662
  %664 = tail call double @llvm.fmuladd.f64(double %663, double %662, double %659)
  %665 = add nuw nsw i64 %658, 1
  %666 = add i64 %660, 1
  %667 = icmp eq i64 %666, %622
  br i1 %667, label %668, label %657, !llvm.loop !197

668:                                              ; preds = %652, %657, %611
  %669 = phi double [ %618, %611 ], [ %653, %652 ], [ %664, %657 ]
  %670 = fcmp ogt double %669, 0.000000e+00
  br i1 %670, label %671, label %871

671:                                              ; preds = %668
  %672 = tail call double @sqrt(double noundef %669) #39
  %673 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %614, i64 %614
  store double %672, ptr %673, align 8, !tbaa !178
  %674 = add nuw nsw i64 %614, 1
  %675 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %676 = load i1, ptr @_ZL1D, align 4
  %677 = select i1 %676, i32 12, i32 0
  %678 = add nuw nsw i32 %677, %675
  %679 = sext i32 %678 to i64
  %680 = icmp slt i64 %614, %679
  br i1 %680, label %681, label %607

681:                                              ; preds = %671
  br i1 %619, label %682, label %730

682:                                              ; preds = %681
  %683 = and i64 %612, 1
  %684 = icmp eq i64 %612, 1
  %685 = and i64 %612, -2
  %686 = icmp eq i64 %683, 0
  br label %687

687:                                              ; preds = %682, %722
  %688 = phi i64 [ %727, %722 ], [ %615, %682 ]
  %689 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %614, i64 %688, i64 %491
  %690 = load double, ptr %689, align 8, !tbaa !178
  br i1 %684, label %711, label %691

691:                                              ; preds = %687, %691
  %692 = phi i64 [ %708, %691 ], [ 1, %687 ]
  %693 = phi double [ %707, %691 ], [ %690, %687 ]
  %694 = phi i64 [ %709, %691 ], [ 0, %687 ]
  %695 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %688, i64 %692
  %696 = load double, ptr %695, align 8, !tbaa !178
  %697 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %614, i64 %692
  %698 = load double, ptr %697, align 8, !tbaa !178
  %699 = fneg double %696
  %700 = tail call double @llvm.fmuladd.f64(double %699, double %698, double %693)
  %701 = add nuw nsw i64 %692, 1
  %702 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %688, i64 %701
  %703 = load double, ptr %702, align 8, !tbaa !178
  %704 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %614, i64 %701
  %705 = load double, ptr %704, align 8, !tbaa !178
  %706 = fneg double %703
  %707 = tail call double @llvm.fmuladd.f64(double %706, double %705, double %700)
  %708 = add nuw nsw i64 %692, 2
  %709 = add i64 %694, 2
  %710 = icmp eq i64 %709, %685
  br i1 %710, label %711, label %691, !llvm.loop !198

711:                                              ; preds = %691, %687
  %712 = phi double [ undef, %687 ], [ %707, %691 ]
  %713 = phi i64 [ 1, %687 ], [ %708, %691 ]
  %714 = phi double [ %690, %687 ], [ %707, %691 ]
  br i1 %686, label %722, label %715

715:                                              ; preds = %711
  %716 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %688, i64 %713
  %717 = load double, ptr %716, align 8, !tbaa !178
  %718 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %614, i64 %713
  %719 = load double, ptr %718, align 8, !tbaa !178
  %720 = fneg double %717
  %721 = tail call double @llvm.fmuladd.f64(double %720, double %719, double %714)
  br label %722

722:                                              ; preds = %711, %715
  %723 = phi double [ %712, %711 ], [ %721, %715 ]
  %724 = load double, ptr %673, align 8, !tbaa !178
  %725 = fdiv double %723, %724
  %726 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %688, i64 %614
  store double %725, ptr %726, align 8, !tbaa !178
  %727 = add nuw nsw i64 %688, 1
  %728 = trunc i64 %688 to i32
  %729 = icmp sgt i32 %678, %728
  br i1 %729, label %687, label %607, !llvm.loop !199

730:                                              ; preds = %681, %730
  %731 = phi i64 [ %737, %730 ], [ %615, %681 ]
  %732 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %614, i64 %731, i64 %491
  %733 = load double, ptr %732, align 8, !tbaa !178
  %734 = load double, ptr %673, align 8, !tbaa !178
  %735 = fdiv double %733, %734
  %736 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %731, i64 %614
  store double %735, ptr %736, align 8, !tbaa !178
  %737 = add nuw nsw i64 %731, 1
  %738 = trunc i64 %731 to i32
  %739 = icmp sgt i32 %678, %738
  br i1 %739, label %730, label %607, !llvm.loop !199

740:                                              ; preds = %607, %507, %506, %602
  %741 = phi i1 [ %604, %602 ], [ %502, %507 ], [ %502, %506 ], [ %676, %607 ]
  %742 = phi i32 [ %605, %602 ], [ %490, %507 ], [ %490, %506 ], [ %675, %607 ]
  %743 = phi i32 [ %603, %602 ], [ %504, %507 ], [ %504, %506 ], [ %678, %607 ]
  %744 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %491
  %745 = load i32, ptr %744, align 4, !tbaa !25
  %746 = add nuw nsw i32 %742, 1
  %747 = icmp sle i32 %745, %746
  %748 = icmp slt i32 %743, 1
  %749 = select i1 %747, i1 true, i1 %748
  br i1 %749, label %871, label %750

750:                                              ; preds = %740
  %751 = add nuw i32 %743, 1
  %752 = zext i32 %751 to i64
  br label %758

753:                                              ; preds = %806
  %754 = icmp sgt i32 %743, 0
  br i1 %754, label %755, label %871

755:                                              ; preds = %753
  %756 = zext i32 %743 to i64
  %757 = zext i32 %743 to i64
  br label %814

758:                                              ; preds = %750, %806
  %759 = phi i64 [ 0, %750 ], [ %813, %806 ]
  %760 = phi i64 [ 1, %750 ], [ %811, %806 ]
  %761 = getelementptr inbounds [49 x [2 x double]], ptr %2, i64 0, i64 %760, i64 %491
  %762 = load double, ptr %761, align 8, !tbaa !178
  %763 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %760
  %764 = getelementptr inbounds [2 x double], ptr %763, i64 0, i64 %491
  store double %762, ptr %764, align 8, !tbaa !178
  %765 = icmp ugt i64 %760, 1
  br i1 %765, label %766, label %806

766:                                              ; preds = %758
  %767 = and i64 %759, 1
  %768 = icmp eq i64 %759, 1
  br i1 %768, label %793, label %769

769:                                              ; preds = %766
  %770 = and i64 %759, -2
  br label %771

771:                                              ; preds = %771, %769
  %772 = phi i64 [ 1, %769 ], [ %790, %771 ]
  %773 = phi double [ %762, %769 ], [ %789, %771 ]
  %774 = phi i64 [ 0, %769 ], [ %791, %771 ]
  %775 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %760, i64 %772
  %776 = load double, ptr %775, align 8, !tbaa !178
  %777 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %772
  %778 = getelementptr inbounds [2 x double], ptr %777, i64 0, i64 %491
  %779 = load double, ptr %778, align 8, !tbaa !178
  %780 = fneg double %776
  %781 = tail call double @llvm.fmuladd.f64(double %780, double %779, double %773)
  store double %781, ptr %764, align 8, !tbaa !178
  %782 = add nuw nsw i64 %772, 1
  %783 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %760, i64 %782
  %784 = load double, ptr %783, align 8, !tbaa !178
  %785 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %782
  %786 = getelementptr inbounds [2 x double], ptr %785, i64 0, i64 %491
  %787 = load double, ptr %786, align 8, !tbaa !178
  %788 = fneg double %784
  %789 = tail call double @llvm.fmuladd.f64(double %788, double %787, double %781)
  store double %789, ptr %764, align 8, !tbaa !178
  %790 = add nuw nsw i64 %772, 2
  %791 = add i64 %774, 2
  %792 = icmp eq i64 %791, %770
  br i1 %792, label %793, label %771, !llvm.loop !200

793:                                              ; preds = %771, %766
  %794 = phi double [ undef, %766 ], [ %789, %771 ]
  %795 = phi i64 [ 1, %766 ], [ %790, %771 ]
  %796 = phi double [ %762, %766 ], [ %789, %771 ]
  %797 = icmp eq i64 %767, 0
  br i1 %797, label %806, label %798

798:                                              ; preds = %793
  %799 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %760, i64 %795
  %800 = load double, ptr %799, align 8, !tbaa !178
  %801 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %795
  %802 = getelementptr inbounds [2 x double], ptr %801, i64 0, i64 %491
  %803 = load double, ptr %802, align 8, !tbaa !178
  %804 = fneg double %800
  %805 = tail call double @llvm.fmuladd.f64(double %804, double %803, double %796)
  store double %805, ptr %764, align 8, !tbaa !178
  br label %806

806:                                              ; preds = %798, %793, %758
  %807 = phi double [ %762, %758 ], [ %794, %793 ], [ %805, %798 ]
  %808 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %760, i64 %760
  %809 = load double, ptr %808, align 8, !tbaa !178
  %810 = fdiv double %807, %809
  store double %810, ptr %764, align 8, !tbaa !178
  %811 = add nuw nsw i64 %760, 1
  %812 = icmp eq i64 %811, %752
  %813 = add i64 %759, 1
  br i1 %812, label %753, label %758, !llvm.loop !201

814:                                              ; preds = %755, %860
  %815 = phi i32 [ 0, %755 ], [ %870, %860 ]
  %816 = phi i64 [ %757, %755 ], [ %869, %860 ]
  %817 = phi i64 [ %756, %755 ], [ %867, %860 ]
  %818 = icmp slt i64 %816, %756
  %819 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %816
  %820 = getelementptr inbounds [2 x double], ptr %819, i64 0, i64 %491
  %821 = load double, ptr %820, align 8, !tbaa !178
  br i1 %818, label %822, label %860

822:                                              ; preds = %814
  %823 = and i32 %815, 1
  %824 = icmp eq i32 %823, 0
  br i1 %824, label %834, label %825

825:                                              ; preds = %822
  %826 = add nsw i64 %817, 1
  %827 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %826, i64 %816
  %828 = load double, ptr %827, align 8, !tbaa !178
  %829 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %826
  %830 = getelementptr inbounds [2 x double], ptr %829, i64 0, i64 %491
  %831 = load double, ptr %830, align 8, !tbaa !178
  %832 = fneg double %828
  %833 = tail call double @llvm.fmuladd.f64(double %832, double %831, double %821)
  store double %833, ptr %820, align 8, !tbaa !178
  br label %834

834:                                              ; preds = %825, %822
  %835 = phi double [ undef, %822 ], [ %833, %825 ]
  %836 = phi i64 [ %817, %822 ], [ %826, %825 ]
  %837 = phi double [ %821, %822 ], [ %833, %825 ]
  %838 = icmp eq i32 %815, 1
  br i1 %838, label %860, label %839

839:                                              ; preds = %834, %839
  %840 = phi i64 [ %850, %839 ], [ %836, %834 ]
  %841 = phi double [ %857, %839 ], [ %837, %834 ]
  %842 = add nsw i64 %840, 1
  %843 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %842, i64 %816
  %844 = load double, ptr %843, align 8, !tbaa !178
  %845 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %842
  %846 = getelementptr inbounds [2 x double], ptr %845, i64 0, i64 %491
  %847 = load double, ptr %846, align 8, !tbaa !178
  %848 = fneg double %844
  %849 = tail call double @llvm.fmuladd.f64(double %848, double %847, double %841)
  store double %849, ptr %820, align 8, !tbaa !178
  %850 = add nsw i64 %840, 2
  %851 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %850, i64 %816
  %852 = load double, ptr %851, align 8, !tbaa !178
  %853 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %850
  %854 = getelementptr inbounds [2 x double], ptr %853, i64 0, i64 %491
  %855 = load double, ptr %854, align 8, !tbaa !178
  %856 = fneg double %852
  %857 = tail call double @llvm.fmuladd.f64(double %856, double %855, double %849)
  store double %857, ptr %820, align 8, !tbaa !178
  %858 = trunc i64 %850 to i32
  %859 = icmp eq i32 %743, %858
  br i1 %859, label %860, label %839, !llvm.loop !202

860:                                              ; preds = %834, %839, %814
  %861 = phi double [ %821, %814 ], [ %835, %834 ], [ %857, %839 ]
  %862 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %816, i64 %816
  %863 = load double, ptr %862, align 8, !tbaa !178
  %864 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %816
  %865 = getelementptr inbounds [2 x double], ptr %864, i64 0, i64 %491
  %866 = fdiv double %861, %863
  store double %866, ptr %865, align 8, !tbaa !178
  %867 = add nsw i64 %817, -1
  %868 = icmp sgt i64 %816, 1
  %869 = add nsw i64 %816, -1
  %870 = add i32 %815, 1
  br i1 %868, label %814, label %871, !llvm.loop !203

871:                                              ; preds = %668, %860, %753, %740
  %872 = phi i1 [ %741, %753 ], [ %741, %740 ], [ %741, %860 ], [ %613, %668 ]
  %873 = phi i32 [ %742, %753 ], [ %742, %740 ], [ %742, %860 ], [ %616, %668 ]
  store i32 0, ptr %492, align 4, !tbaa !25
  br label %874

874:                                              ; preds = %497, %871
  %875 = phi i1 [ %872, %871 ], [ %498, %497 ]
  %876 = phi i32 [ %873, %871 ], [ %490, %497 ]
  %877 = select i1 %875, i32 12, i32 0
  %878 = add nuw nsw i32 %877, %876
  %879 = icmp slt i32 %878, 1
  br i1 %879, label %897, label %880

880:                                              ; preds = %874, %880
  %881 = phi i64 [ %890, %880 ], [ 1, %874 ]
  %882 = phi double [ %889, %880 ], [ 0.000000e+00, %874 ]
  %883 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %881
  %884 = getelementptr inbounds [2 x double], ptr %883, i64 0, i64 %491
  %885 = load double, ptr %884, align 8, !tbaa !178
  %886 = trunc i64 %881 to i32
  %887 = tail call noundef i32 @_Z1Xii(i32 noundef %886, i32 noundef 0)
  %888 = sitofp i32 %887 to double
  %889 = tail call double @llvm.fmuladd.f64(double %885, double %888, double %882)
  %890 = add nuw nsw i64 %881, 1
  %891 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %892 = load i1, ptr @_ZL1D, align 4
  %893 = select i1 %892, i32 12, i32 0
  %894 = add nuw nsw i32 %893, %891
  %895 = sext i32 %894 to i64
  %896 = icmp slt i64 %881, %895
  br i1 %896, label %880, label %897, !llvm.loop !204

897:                                              ; preds = %880, %874
  %898 = phi double [ 0.000000e+00, %874 ], [ %889, %880 ]
  %899 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 2, i64 %491
  %900 = load i32, ptr %899, align 4, !tbaa !25
  %901 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 3, i64 %491
  store i32 %900, ptr %901, align 4, !tbaa !25
  %902 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 1, i64 %491
  %903 = load i32, ptr %902, align 4, !tbaa !25
  store i32 %903, ptr %899, align 4, !tbaa !25
  %904 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 %491
  %905 = load i32, ptr %904, align 4, !tbaa !25
  store i32 %905, ptr %902, align 4, !tbaa !25
  %906 = tail call double @llvm.floor.f64(double %898)
  %907 = fptosi double %906 to i32
  store i32 %907, ptr %904, align 4, !tbaa !25
  %908 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %491
  %909 = load i32, ptr %908, align 4, !tbaa !25
  %910 = add nsw i32 %909, 1
  store i32 %910, ptr %908, align 4, !tbaa !25
  %911 = load i32, ptr @pos, align 4, !tbaa !25
  %912 = add nsw i32 %911, -1
  %913 = load i32, ptr @buf, align 8, !tbaa !20
  %914 = add nsw i32 %913, -1
  %915 = and i32 %914, %912
  %916 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %917 = sext i32 %915 to i64
  %918 = getelementptr inbounds i8, ptr %916, i64 %917
  %919 = load i8, ptr %918, align 1, !tbaa !9
  %920 = zext i8 %919 to i32
  %921 = mul i32 %920, 30005491
  %922 = mul i32 %366, 50004239
  %923 = add i32 %922, 19995673
  %924 = add i32 %923, %921
  %925 = lshr i32 %924, 9
  %926 = lshr i32 %920, 3
  %927 = lshr i32 %366, 4
  %928 = xor i32 %926, %925
  %929 = xor i32 %928, %927
  %930 = xor i32 %929, %924
  %931 = xor i32 %930, 67108864
  %932 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %933 = add nsw i32 %932, 1
  store i32 %933, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %934 = mul i32 %931, 987654323
  %935 = add i32 %934, %932
  %936 = tail call i32 @llvm.fshl.i32(i32 %935, i32 %935, i32 16)
  %937 = mul i32 %936, 123456791
  %938 = add i32 %937, %932
  %939 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %940 = sext i32 %932 to i64
  %941 = getelementptr inbounds i32, ptr %939, i64 %940
  store i32 %938, ptr %941, align 4, !tbaa !25
  %942 = load i32, ptr @pos, align 4, !tbaa !25
  %943 = add nsw i32 %942, -1
  %944 = load i32, ptr @buf, align 8, !tbaa !20
  %945 = add nsw i32 %944, -1
  %946 = and i32 %945, %943
  %947 = sext i32 %946 to i64
  %948 = getelementptr inbounds i8, ptr %916, i64 %947
  %949 = load i8, ptr %948, align 1, !tbaa !9
  %950 = zext i8 %949 to i32
  %951 = add nsw i32 %942, -2
  %952 = and i32 %945, %951
  %953 = sext i32 %952 to i64
  %954 = getelementptr inbounds i8, ptr %916, i64 %953
  %955 = load i8, ptr %954, align 1, !tbaa !9
  %956 = zext i8 %955 to i32
  %957 = mul i32 %950, 30005491
  %958 = mul i32 %956, 50004239
  %959 = mul i32 %366, 70004807
  %960 = add i32 %959, 290003459
  %961 = add i32 %960, %957
  %962 = add i32 %961, %958
  %963 = lshr i32 %962, 9
  %964 = lshr i32 %950, 3
  %965 = lshr i32 %956, 4
  %966 = lshr i32 %366, 5
  %967 = xor i32 %964, %965
  %968 = xor i32 %967, %963
  %969 = xor i32 %968, %966
  %970 = xor i32 %969, %962
  %971 = xor i32 %970, 67108863
  %972 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %973 = add nsw i32 %972, 1
  store i32 %973, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %974 = mul i32 %971, 987654323
  %975 = add i32 %974, %972
  %976 = tail call i32 @llvm.fshl.i32(i32 %975, i32 %975, i32 16)
  %977 = mul i32 %976, 123456791
  %978 = add i32 %977, %972
  %979 = sext i32 %972 to i64
  %980 = getelementptr inbounds i32, ptr %939, i64 %979
  store i32 %978, ptr %980, align 4, !tbaa !25
  %981 = load i32, ptr @pos, align 4, !tbaa !25
  %982 = add nsw i32 %981, -1
  %983 = load i32, ptr @buf, align 8, !tbaa !20
  %984 = add nsw i32 %983, -1
  %985 = and i32 %984, %982
  %986 = sext i32 %985 to i64
  %987 = getelementptr inbounds i8, ptr %916, i64 %986
  %988 = load i8, ptr %987, align 1, !tbaa !9
  %989 = zext i8 %988 to i32
  %990 = add nsw i32 %981, -2
  %991 = and i32 %984, %990
  %992 = sext i32 %991 to i64
  %993 = getelementptr inbounds i8, ptr %916, i64 %992
  %994 = load i8, ptr %993, align 1, !tbaa !9
  %995 = lshr i8 %994, 3
  %996 = zext i8 %995 to i32
  %997 = add nsw i32 %981, -3
  %998 = and i32 %984, %997
  %999 = sext i32 %998 to i64
  %1000 = getelementptr inbounds i8, ptr %916, i64 %999
  %1001 = load i8, ptr %1000, align 1, !tbaa !9
  %1002 = zext i8 %1001 to i32
  %1003 = mul i32 %989, 30005491
  %1004 = mul nuw nsw i32 %996, 50004239
  %1005 = mul i32 %1002, 70004807
  %1006 = mul i32 %366, 110002499
  %1007 = add i32 %1006, 600008937
  %1008 = add i32 %1007, %1003
  %1009 = add i32 %1008, %1004
  %1010 = add i32 %1009, %1005
  %1011 = lshr i32 %1010, 9
  %1012 = lshr i32 %989, 3
  %1013 = lshr i32 %996, 4
  %1014 = lshr i32 %1002, 5
  %1015 = lshr i32 %366, 6
  %1016 = xor i32 %1012, %1015
  %1017 = xor i32 %1016, %1013
  %1018 = xor i32 %1017, %1014
  %1019 = xor i32 %1018, %1011
  %1020 = xor i32 %1019, %1010
  %1021 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1022 = add nsw i32 %1021, 1
  store i32 %1022, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1023 = mul i32 %1020, 987654323
  %1024 = add i32 %1023, %1021
  %1025 = tail call i32 @llvm.fshl.i32(i32 %1024, i32 %1024, i32 16)
  %1026 = mul i32 %1025, 123456791
  %1027 = add i32 %1026, %1021
  %1028 = sext i32 %1021 to i64
  %1029 = getelementptr inbounds i32, ptr %939, i64 %1028
  store i32 %1027, ptr %1029, align 4, !tbaa !25
  %1030 = load i32, ptr @pos, align 4, !tbaa !25
  %1031 = add i32 %1030, -4
  %1032 = load i32, ptr @buf, align 8, !tbaa !20
  %1033 = add nsw i32 %1032, -1
  %1034 = and i32 %1033, %1031
  %1035 = sext i32 %1034 to i64
  %1036 = getelementptr inbounds i8, ptr %916, i64 %1035
  %1037 = load i8, ptr %1036, align 1, !tbaa !9
  %1038 = add i32 %1030, -2
  %1039 = and i32 %1033, %1038
  %1040 = sext i32 %1039 to i64
  %1041 = getelementptr inbounds i8, ptr %916, i64 %1040
  %1042 = load i8, ptr %1041, align 1, !tbaa !9
  %1043 = add i8 %1042, %1037
  %1044 = add i32 %1030, -6
  %1045 = and i32 %1033, %1044
  %1046 = sext i32 %1045 to i64
  %1047 = getelementptr inbounds i8, ptr %916, i64 %1046
  %1048 = load i8, ptr %1047, align 1, !tbaa !9
  %1049 = sub i8 %1043, %1048
  %1050 = zext i8 %1049 to i32
  %1051 = mul i32 %1050, 30005491
  %1052 = add i32 %922, 620004610
  %1053 = add i32 %1052, %1051
  %1054 = lshr i32 %1053, 9
  %1055 = lshr i32 %1050, 3
  %1056 = xor i32 %1055, %1054
  %1057 = xor i32 %1056, %927
  %1058 = xor i32 %1057, %1053
  %1059 = xor i32 %1058, 67108865
  %1060 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1061 = add nsw i32 %1060, 1
  store i32 %1061, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1062 = mul i32 %1059, 987654323
  %1063 = add i32 %1062, %1060
  %1064 = tail call i32 @llvm.fshl.i32(i32 %1063, i32 %1063, i32 16)
  %1065 = mul i32 %1064, 123456791
  %1066 = add i32 %1065, %1060
  %1067 = sext i32 %1060 to i64
  %1068 = getelementptr inbounds i32, ptr %939, i64 %1067
  store i32 %1066, ptr %1068, align 4, !tbaa !25
  %1069 = and i32 %907, 255
  %1070 = mul i32 %1069, 30005491
  %1071 = add i32 %922, 820007589
  %1072 = add i32 %1071, %1070
  %1073 = lshr i32 %1072, 9
  %1074 = lshr i32 %1069, 3
  %1075 = xor i32 %1074, 1
  %1076 = xor i32 %1075, %1073
  %1077 = xor i32 %1076, %927
  %1078 = xor i32 %1077, %1072
  %1079 = xor i32 %1078, 67108864
  %1080 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1081 = add nsw i32 %1080, 1
  store i32 %1081, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1082 = mul i32 %1079, 987654323
  %1083 = add i32 %1080, %1082
  %1084 = tail call i32 @llvm.fshl.i32(i32 %1083, i32 %1083, i32 16)
  %1085 = mul i32 %1084, 123456791
  %1086 = add i32 %1085, %1080
  %1087 = sext i32 %1080 to i64
  %1088 = getelementptr inbounds i32, ptr %939, i64 %1087
  store i32 %1086, ptr %1088, align 4, !tbaa !25
  %1089 = load i32, ptr @_ZZ8wavModelR5MixerE1w, align 4, !tbaa !25
  %1090 = load i32, ptr @pos, align 4, !tbaa !25
  %1091 = sub i32 %1090, %1089
  %1092 = load i32, ptr @buf, align 8, !tbaa !20
  %1093 = add nsw i32 %1092, -1
  %1094 = and i32 %1093, %1091
  %1095 = sext i32 %1094 to i64
  %1096 = getelementptr inbounds i8, ptr %916, i64 %1095
  %1097 = load i8, ptr %1096, align 1, !tbaa !9
  %1098 = sub i32 %907, %905
  %1099 = trunc i32 %1098 to i8
  %1100 = add i8 %1097, %1099
  %1101 = zext i8 %1100 to i32
  %1102 = mul i32 %1101, 30005491
  %1103 = add i32 %922, 1020010568
  %1104 = add i32 %1103, %1102
  %1105 = lshr i32 %1104, 9
  %1106 = lshr i32 %1101, 3
  %1107 = xor i32 %1106, %1105
  %1108 = xor i32 %1107, %927
  %1109 = xor i32 %1108, %1104
  %1110 = xor i32 %1109, 67108865
  %1111 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1112 = add nsw i32 %1111, 1
  store i32 %1112, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1113 = mul i32 %1110, 987654323
  %1114 = add i32 %1113, %1111
  %1115 = tail call i32 @llvm.fshl.i32(i32 %1114, i32 %1114, i32 16)
  %1116 = mul i32 %1115, 123456791
  %1117 = add i32 %1116, %1111
  %1118 = sext i32 %1111 to i64
  %1119 = getelementptr inbounds i32, ptr %939, i64 %1118
  store i32 %1117, ptr %1119, align 4, !tbaa !25
  %1120 = load i32, ptr @pos, align 4, !tbaa !25
  %1121 = sub i32 %1120, %1089
  %1122 = load i32, ptr @buf, align 8, !tbaa !20
  %1123 = add nsw i32 %1122, -1
  %1124 = and i32 %1123, %1121
  %1125 = sext i32 %1124 to i64
  %1126 = getelementptr inbounds i8, ptr %916, i64 %1125
  %1127 = load i8, ptr %1126, align 1, !tbaa !9
  %1128 = zext i8 %1127 to i32
  %1129 = add i32 %1121, 1
  %1130 = and i32 %1123, %1129
  %1131 = sext i32 %1130 to i64
  %1132 = getelementptr inbounds i8, ptr %916, i64 %1131
  %1133 = load i8, ptr %1132, align 1, !tbaa !9
  %1134 = zext i8 %1133 to i32
  %1135 = shl nuw nsw i32 %1134, 8
  %1136 = or i32 %1135, %1128
  %1137 = shl nsw i32 %1089, 1
  %1138 = sub i32 %1120, %1137
  %1139 = and i32 %1123, %1138
  %1140 = sext i32 %1139 to i64
  %1141 = getelementptr inbounds i8, ptr %916, i64 %1140
  %1142 = load i8, ptr %1141, align 1, !tbaa !9
  %1143 = zext i8 %1142 to i32
  %1144 = add i32 %1138, 1
  %1145 = and i32 %1123, %1144
  %1146 = sext i32 %1145 to i64
  %1147 = getelementptr inbounds i8, ptr %916, i64 %1146
  %1148 = load i8, ptr %1147, align 1, !tbaa !9
  %1149 = zext i8 %1148 to i32
  %1150 = shl nuw nsw i32 %1149, 8
  %1151 = or i32 %1150, %1143
  %1152 = add i32 %905, %903
  %1153 = sub i32 %1136, %1152
  %1154 = add i32 %1153, %1151
  %1155 = lshr i32 %1154, 1
  %1156 = and i32 %1155, 255
  %1157 = mul i32 %1156, 50004239
  %1158 = add i32 %959, 1290018354
  %1159 = add i32 %1158, %1070
  %1160 = add i32 %1159, %1157
  %1161 = lshr i32 %1160, 9
  %1162 = lshr i32 %1156, 4
  %1163 = xor i32 %1162, %1161
  %1164 = xor i32 %1163, %1075
  %1165 = xor i32 %1164, %966
  %1166 = xor i32 %1165, %1160
  %1167 = xor i32 %1166, 67108863
  %1168 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1169 = add nsw i32 %1168, 1
  store i32 %1169, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1170 = mul i32 %1167, 987654323
  %1171 = add i32 %1170, %1168
  %1172 = tail call i32 @llvm.fshl.i32(i32 %1171, i32 %1171, i32 16)
  %1173 = mul i32 %1172, 123456791
  %1174 = add i32 %1173, %1168
  %1175 = sext i32 %1168 to i64
  %1176 = getelementptr inbounds i32, ptr %939, i64 %1175
  store i32 %1174, ptr %1176, align 4, !tbaa !25
  %1177 = load i32, ptr @pos, align 4, !tbaa !25
  %1178 = sub i32 %1177, %1089
  %1179 = load i32, ptr @buf, align 8, !tbaa !20
  %1180 = add nsw i32 %1179, -1
  %1181 = and i32 %1180, %1178
  %1182 = sext i32 %1181 to i64
  %1183 = getelementptr inbounds i8, ptr %916, i64 %1182
  %1184 = load i8, ptr %1183, align 1, !tbaa !9
  %1185 = zext i8 %1184 to i32
  %1186 = sub i32 %1177, %1137
  %1187 = and i32 %1180, %1186
  %1188 = sext i32 %1187 to i64
  %1189 = getelementptr inbounds i8, ptr %916, i64 %1188
  %1190 = load i8, ptr %1189, align 1, !tbaa !9
  %1191 = zext i8 %1190 to i32
  %1192 = sub i32 %1185, %905
  %1193 = shl i32 %1192, 1
  %1194 = add i32 %903, %907
  %1195 = sub i32 %1194, %1191
  %1196 = add i32 %1195, %1193
  %1197 = and i32 %1196, 255
  %1198 = mul i32 %1197, 30005491
  %1199 = add i32 %922, 1420016526
  %1200 = add i32 %1199, %1198
  %1201 = lshr i32 %1200, 9
  %1202 = lshr i32 %1197, 3
  %1203 = xor i32 %1202, %1201
  %1204 = xor i32 %1203, %927
  %1205 = xor i32 %1204, %1200
  %1206 = xor i32 %1205, 67108866
  %1207 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1208 = add nsw i32 %1207, 1
  store i32 %1208, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1209 = mul i32 %1206, 987654323
  %1210 = add i32 %1209, %1207
  %1211 = tail call i32 @llvm.fshl.i32(i32 %1210, i32 %1210, i32 16)
  %1212 = mul i32 %1211, 123456791
  %1213 = add i32 %1212, %1207
  %1214 = sext i32 %1207 to i64
  %1215 = getelementptr inbounds i32, ptr %939, i64 %1214
  store i32 %1213, ptr %1215, align 4, !tbaa !25
  %1216 = load i32, ptr @pos, align 4, !tbaa !25
  %1217 = sub i32 %1216, %1089
  %1218 = load i32, ptr @buf, align 8, !tbaa !20
  %1219 = add nsw i32 %1218, -1
  %1220 = and i32 %1219, %1217
  %1221 = sext i32 %1220 to i64
  %1222 = getelementptr inbounds i8, ptr %916, i64 %1221
  %1223 = load i8, ptr %1222, align 1, !tbaa !9
  %1224 = zext i8 %1223 to i32
  %1225 = add i32 %1217, 1
  %1226 = and i32 %1219, %1225
  %1227 = sext i32 %1226 to i64
  %1228 = getelementptr inbounds i8, ptr %916, i64 %1227
  %1229 = load i8, ptr %1228, align 1, !tbaa !9
  %1230 = zext i8 %1229 to i32
  %1231 = shl nuw nsw i32 %1230, 8
  %1232 = and i32 %1231, 256
  %1233 = or i32 %1232, %1224
  %1234 = shl nuw nsw i32 %1233, 8
  %1235 = load i32, ptr @_ZZ8wavModelR5MixerE4scm1, align 8, !tbaa !74
  %1236 = add i32 %1235, 130816
  %1237 = and i32 %1234, %1236
  store i32 %1237, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %1238 = load i8, ptr %1222, align 1, !tbaa !9
  %1239 = zext i8 %1238 to i32
  %1240 = sub i32 %1216, %1137
  %1241 = and i32 %1219, %1240
  %1242 = sext i32 %1241 to i64
  %1243 = getelementptr inbounds i8, ptr %916, i64 %1242
  %1244 = load i8, ptr %1243, align 1, !tbaa !9
  %1245 = zext i8 %1244 to i32
  %1246 = add i32 %1240, 1
  %1247 = and i32 %1219, %1246
  %1248 = sext i32 %1247 to i64
  %1249 = getelementptr inbounds i8, ptr %916, i64 %1248
  %1250 = load i8, ptr %1249, align 1, !tbaa !9
  %1251 = zext i8 %1250 to i32
  %1252 = shl nuw nsw i32 %1239, 9
  %1253 = shl nuw nsw i32 %1251, 16
  %1254 = shl nuw nsw i32 %1245, 8
  %1255 = or i32 %1253, %1254
  %1256 = sub nsw i32 %1252, %1255
  %1257 = load i32, ptr @_ZZ8wavModelR5MixerE4scm2, align 8, !tbaa !74
  %1258 = add i32 %1257, 130816
  %1259 = and i32 %1258, 130816
  %1260 = and i32 %1259, %1256
  store i32 %1260, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %1261 = load i8, ptr %1222, align 1, !tbaa !9
  %1262 = zext i8 %1261 to i32
  %1263 = load i8, ptr %1228, align 1, !tbaa !9
  %1264 = zext i8 %1263 to i32
  %1265 = shl nuw nsw i32 %1264, 8
  %1266 = or i32 %1265, %1262
  %1267 = mul nuw nsw i32 %1266, 3
  %1268 = load i8, ptr %1243, align 1, !tbaa !9
  %1269 = zext i8 %1268 to i32
  %1270 = load i8, ptr %1249, align 1, !tbaa !9
  %1271 = zext i8 %1270 to i32
  %1272 = shl nuw nsw i32 %1271, 8
  %1273 = or i32 %1272, %1269
  %1274 = mul nuw nsw i32 %1273, 509
  %1275 = add nuw nsw i32 %1274, %1267
  %1276 = mul i32 %1089, -3
  %1277 = add i32 %1216, %1276
  %1278 = and i32 %1219, %1277
  %1279 = sext i32 %1278 to i64
  %1280 = getelementptr inbounds i8, ptr %916, i64 %1279
  %1281 = load i8, ptr %1280, align 1, !tbaa !9
  %1282 = zext i8 %1281 to i32
  %1283 = add i32 %1277, 1
  %1284 = and i32 %1219, %1283
  %1285 = sext i32 %1284 to i64
  %1286 = getelementptr inbounds i8, ptr %916, i64 %1285
  %1287 = load i8, ptr %1286, align 1, !tbaa !9
  %1288 = zext i8 %1287 to i32
  %1289 = shl nuw nsw i32 %1288, 8
  %1290 = or i32 %1289, %1282
  %1291 = add nuw nsw i32 %1275, %1290
  %1292 = shl i32 %1291, 8
  %1293 = load i32, ptr @_ZZ8wavModelR5MixerE4scm3, align 8, !tbaa !74
  %1294 = add i32 %1293, 130816
  %1295 = and i32 %1294, 130816
  %1296 = and i32 %1295, %1292
  store i32 %1296, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 1), align 8, !tbaa !112
  br label %2442

1297:                                             ; preds = %359
  %1298 = add nsw i32 %352, -1
  %1299 = load i32, ptr @buf, align 8, !tbaa !20
  %1300 = add nsw i32 %1299, -1
  %1301 = and i32 %1300, %1298
  %1302 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %1303 = sext i32 %1301 to i64
  %1304 = getelementptr inbounds i8, ptr %1302, i64 %1303
  %1305 = load i8, ptr %1304, align 1, !tbaa !9
  %1306 = zext i8 %1305 to i32
  %1307 = mul i32 %1306, 30005491
  %1308 = mul i32 %366, 50004239
  %1309 = add i32 %1308, 19995673
  %1310 = add i32 %1309, %1307
  %1311 = lshr i32 %1310, 9
  %1312 = lshr i32 %1306, 3
  %1313 = lshr i32 %366, 4
  %1314 = xor i32 %1312, %1311
  %1315 = xor i32 %1314, %1313
  %1316 = xor i32 %1315, %1310
  %1317 = xor i32 %1316, 67108864
  %1318 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1319 = add nsw i32 %1318, 1
  store i32 %1319, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1320 = mul i32 %1317, 987654323
  %1321 = add i32 %1320, %1318
  %1322 = tail call i32 @llvm.fshl.i32(i32 %1321, i32 %1321, i32 16)
  %1323 = mul i32 %1322, 123456791
  %1324 = add i32 %1323, %1318
  %1325 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %1326 = sext i32 %1318 to i64
  %1327 = getelementptr inbounds i32, ptr %1325, i64 %1326
  store i32 %1324, ptr %1327, align 4, !tbaa !25
  %1328 = load i32, ptr @pos, align 4, !tbaa !25
  %1329 = add nsw i32 %1328, -1
  %1330 = load i32, ptr @buf, align 8, !tbaa !20
  %1331 = add nsw i32 %1330, -1
  %1332 = and i32 %1331, %1329
  %1333 = sext i32 %1332 to i64
  %1334 = getelementptr inbounds i8, ptr %1302, i64 %1333
  %1335 = load i8, ptr %1334, align 1, !tbaa !9
  %1336 = lshr i8 %1335, 7
  %1337 = zext i8 %1336 to i32
  %1338 = add nsw i32 %1328, -2
  %1339 = and i32 %1331, %1338
  %1340 = sext i32 %1339 to i64
  %1341 = getelementptr inbounds i8, ptr %1302, i64 %1340
  %1342 = load i8, ptr %1341, align 1, !tbaa !9
  %1343 = zext i8 %1342 to i32
  %1344 = add nsw i32 %1328, -3
  %1345 = and i32 %1331, %1344
  %1346 = sext i32 %1345 to i64
  %1347 = getelementptr inbounds i8, ptr %1302, i64 %1346
  %1348 = load i8, ptr %1347, align 1, !tbaa !9
  %1349 = lshr i8 %1348, 7
  %1350 = zext i8 %1349 to i32
  %1351 = mul nuw nsw i32 %1337, 30005491
  %1352 = mul i32 %1343, 50004239
  %1353 = mul nuw nsw i32 %1350, 70004807
  %1354 = mul i32 %366, 110002499
  %1355 = add i32 %1354, 400005958
  %1356 = add i32 %1355, %1351
  %1357 = add i32 %1356, %1352
  %1358 = add i32 %1357, %1353
  %1359 = lshr i32 %1358, 9
  %1360 = lshr i32 %1343, 4
  %1361 = lshr i32 %366, 6
  %1362 = xor i32 %1360, %1359
  %1363 = xor i32 %1362, %1361
  %1364 = xor i32 %1363, %1358
  %1365 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1366 = add nsw i32 %1365, 1
  store i32 %1366, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1367 = mul i32 %1364, 987654323
  %1368 = add i32 %1367, %1365
  %1369 = tail call i32 @llvm.fshl.i32(i32 %1368, i32 %1368, i32 16)
  %1370 = mul i32 %1369, 123456791
  %1371 = add i32 %1370, %1365
  %1372 = sext i32 %1365 to i64
  %1373 = getelementptr inbounds i32, ptr %1325, i64 %1372
  store i32 %1371, ptr %1373, align 4, !tbaa !25
  %1374 = shl nsw i32 %365, 1
  %1375 = mul nsw i32 %365, 3
  %1376 = shl nsw i32 %365, 2
  %1377 = load i32, ptr @pos, align 4, !tbaa !25
  %1378 = sub nsw i32 %1377, %365
  %1379 = load i32, ptr @buf, align 8, !tbaa !20
  %1380 = add nsw i32 %1379, -1
  %1381 = and i32 %1380, %1378
  %1382 = sext i32 %1381 to i64
  %1383 = getelementptr inbounds i8, ptr %1302, i64 %1382
  %1384 = load i8, ptr %1383, align 1, !tbaa !9
  %1385 = lshr i8 %1384, 1
  %1386 = zext i8 %1385 to i32
  %1387 = icmp eq i32 %365, 0
  br i1 %1387, label %1416, label %1388

1388:                                             ; preds = %1297
  %1389 = sub nsw i32 %1377, %1374
  %1390 = and i32 %1380, %1389
  %1391 = sext i32 %1390 to i64
  %1392 = getelementptr inbounds i8, ptr %1302, i64 %1391
  %1393 = load i8, ptr %1392, align 1, !tbaa !9
  %1394 = lshr i8 %1393, 1
  %1395 = zext i8 %1394 to i32
  %1396 = shl nuw nsw i32 %1386, 14
  %1397 = shl nuw nsw i32 %1395, 7
  %1398 = or i32 %1396, %1397
  %1399 = sub nsw i32 %1377, %1375
  %1400 = and i32 %1380, %1399
  %1401 = sext i32 %1400 to i64
  %1402 = getelementptr inbounds i8, ptr %1302, i64 %1401
  %1403 = load i8, ptr %1402, align 1, !tbaa !9
  %1404 = lshr i8 %1403, 1
  %1405 = zext i8 %1404 to i32
  %1406 = or i32 %1398, %1405
  %1407 = shl nuw nsw i32 %1406, 7
  %1408 = sub nsw i32 %1377, %1376
  %1409 = and i32 %1380, %1408
  %1410 = sext i32 %1409 to i64
  %1411 = getelementptr inbounds i8, ptr %1302, i64 %1410
  %1412 = load i8, ptr %1411, align 1, !tbaa !9
  %1413 = lshr i8 %1412, 1
  %1414 = zext i8 %1413 to i32
  %1415 = or i32 %1407, %1414
  br label %1416

1416:                                             ; preds = %1297, %1388
  %1417 = phi i32 [ %1415, %1388 ], [ %1386, %1297 ]
  %1418 = mul i32 %1417, 30005491
  %1419 = add i32 %1308, 420001631
  %1420 = add i32 %1419, %1418
  %1421 = lshr i32 %1420, 9
  %1422 = lshr i32 %1417, 3
  %1423 = xor i32 %1422, %1421
  %1424 = xor i32 %1423, %1313
  %1425 = xor i32 %1424, %1420
  %1426 = xor i32 %1425, 67108864
  %1427 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1428 = add nsw i32 %1427, 1
  store i32 %1428, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1429 = mul i32 %1426, 987654323
  %1430 = add i32 %1429, %1427
  %1431 = tail call i32 @llvm.fshl.i32(i32 %1430, i32 %1430, i32 16)
  %1432 = mul i32 %1431, 123456791
  %1433 = add i32 %1432, %1427
  %1434 = sext i32 %1427 to i64
  %1435 = getelementptr inbounds i32, ptr %1325, i64 %1434
  store i32 %1433, ptr %1435, align 4, !tbaa !25
  %1436 = load i32, ptr @pos, align 4, !tbaa !25
  %1437 = sub nsw i32 %1436, %365
  %1438 = load i32, ptr @buf, align 8, !tbaa !20
  %1439 = add nsw i32 %1438, -1
  %1440 = and i32 %1439, %1437
  %1441 = sext i32 %1440 to i64
  %1442 = getelementptr inbounds i8, ptr %1302, i64 %1441
  %1443 = load i8, ptr %1442, align 1, !tbaa !9
  %1444 = lshr i8 %1443, 3
  %1445 = zext i8 %1444 to i32
  br i1 %1387, label %1474, label %1446

1446:                                             ; preds = %1416
  %1447 = sub nsw i32 %1436, %1374
  %1448 = and i32 %1439, %1447
  %1449 = sext i32 %1448 to i64
  %1450 = getelementptr inbounds i8, ptr %1302, i64 %1449
  %1451 = load i8, ptr %1450, align 1, !tbaa !9
  %1452 = lshr i8 %1451, 3
  %1453 = zext i8 %1452 to i32
  %1454 = shl nuw nsw i32 %1445, 10
  %1455 = shl nuw nsw i32 %1453, 5
  %1456 = or i32 %1454, %1455
  %1457 = sub nsw i32 %1436, %1375
  %1458 = and i32 %1439, %1457
  %1459 = sext i32 %1458 to i64
  %1460 = getelementptr inbounds i8, ptr %1302, i64 %1459
  %1461 = load i8, ptr %1460, align 1, !tbaa !9
  %1462 = lshr i8 %1461, 3
  %1463 = zext i8 %1462 to i32
  %1464 = or i32 %1456, %1463
  %1465 = shl nuw nsw i32 %1464, 5
  %1466 = sub nsw i32 %1436, %1376
  %1467 = and i32 %1439, %1466
  %1468 = sext i32 %1467 to i64
  %1469 = getelementptr inbounds i8, ptr %1302, i64 %1468
  %1470 = load i8, ptr %1469, align 1, !tbaa !9
  %1471 = lshr i8 %1470, 3
  %1472 = zext i8 %1471 to i32
  %1473 = or i32 %1465, %1472
  br label %1474

1474:                                             ; preds = %1416, %1446
  %1475 = phi i32 [ %1473, %1446 ], [ %1445, %1416 ]
  %1476 = mul nsw i32 %365, 5
  %1477 = mul nsw i32 %365, 6
  %1478 = sub nsw i32 %1436, %1476
  %1479 = and i32 %1439, %1478
  %1480 = sext i32 %1479 to i64
  %1481 = getelementptr inbounds i8, ptr %1302, i64 %1480
  %1482 = load i8, ptr %1481, align 1, !tbaa !9
  %1483 = lshr i8 %1482, 3
  %1484 = zext i8 %1483 to i32
  br i1 %1387, label %1495, label %1485

1485:                                             ; preds = %1474
  %1486 = shl nuw nsw i32 %1484, 5
  %1487 = sub nsw i32 %1436, %1477
  %1488 = and i32 %1439, %1487
  %1489 = sext i32 %1488 to i64
  %1490 = getelementptr inbounds i8, ptr %1302, i64 %1489
  %1491 = load i8, ptr %1490, align 1, !tbaa !9
  %1492 = lshr i8 %1491, 3
  %1493 = zext i8 %1492 to i32
  %1494 = or i32 %1486, %1493
  br label %1495

1495:                                             ; preds = %1474, %1485
  %1496 = phi i32 [ %1494, %1485 ], [ %1484, %1474 ]
  %1497 = mul i32 %1475, 30005491
  %1498 = mul i32 %1496, 50004239
  %1499 = mul i32 %366, 70004807
  %1500 = add i32 %1499, 690009417
  %1501 = add i32 %1500, %1497
  %1502 = add i32 %1501, %1498
  %1503 = lshr i32 %1502, 9
  %1504 = lshr i32 %1475, 3
  %1505 = lshr i32 %1496, 4
  %1506 = lshr i32 %366, 5
  %1507 = xor i32 %1504, %1505
  %1508 = xor i32 %1507, %1503
  %1509 = xor i32 %1508, %1506
  %1510 = xor i32 %1509, %1502
  %1511 = xor i32 %1510, 67108862
  %1512 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1513 = add nsw i32 %1512, 1
  store i32 %1513, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1514 = mul i32 %1511, 987654323
  %1515 = add i32 %1514, %1512
  %1516 = tail call i32 @llvm.fshl.i32(i32 %1515, i32 %1515, i32 16)
  %1517 = mul i32 %1516, 123456791
  %1518 = add i32 %1517, %1512
  %1519 = sext i32 %1512 to i64
  %1520 = getelementptr inbounds i32, ptr %1325, i64 %1519
  store i32 %1518, ptr %1520, align 4, !tbaa !25
  %1521 = load i32, ptr @pos, align 4, !tbaa !25
  %1522 = sub nsw i32 %1521, %365
  %1523 = load i32, ptr @buf, align 8, !tbaa !20
  %1524 = add nsw i32 %1523, -1
  %1525 = and i32 %1524, %1522
  %1526 = sext i32 %1525 to i64
  %1527 = getelementptr inbounds i8, ptr %1302, i64 %1526
  %1528 = load i8, ptr %1527, align 1, !tbaa !9
  %1529 = lshr i8 %1528, 4
  %1530 = zext i8 %1529 to i32
  br i1 %1387, label %1558, label %1531

1531:                                             ; preds = %1495
  %1532 = sub nsw i32 %1521, %1374
  %1533 = and i32 %1524, %1532
  %1534 = sext i32 %1533 to i64
  %1535 = getelementptr inbounds i8, ptr %1302, i64 %1534
  %1536 = load i8, ptr %1535, align 1, !tbaa !9
  %1537 = and i8 %1536, -16
  %1538 = shl nuw nsw i32 %1530, 8
  %1539 = zext i8 %1537 to i32
  %1540 = or i32 %1538, %1539
  %1541 = sub nsw i32 %1521, %1375
  %1542 = and i32 %1524, %1541
  %1543 = sext i32 %1542 to i64
  %1544 = getelementptr inbounds i8, ptr %1302, i64 %1543
  %1545 = load i8, ptr %1544, align 1, !tbaa !9
  %1546 = lshr i8 %1545, 4
  %1547 = zext i8 %1546 to i32
  %1548 = or i32 %1540, %1547
  %1549 = shl nuw nsw i32 %1548, 4
  %1550 = sub nsw i32 %1521, %1376
  %1551 = and i32 %1524, %1550
  %1552 = sext i32 %1551 to i64
  %1553 = getelementptr inbounds i8, ptr %1302, i64 %1552
  %1554 = load i8, ptr %1553, align 1, !tbaa !9
  %1555 = lshr i8 %1554, 4
  %1556 = zext i8 %1555 to i32
  %1557 = or i32 %1549, %1556
  br label %1558

1558:                                             ; preds = %1495, %1531
  %1559 = phi i32 [ %1557, %1531 ], [ %1530, %1495 ]
  %1560 = mul nsw i32 %365, 7
  %1561 = shl nsw i32 %365, 3
  %1562 = sub nsw i32 %1521, %1476
  %1563 = and i32 %1524, %1562
  %1564 = sext i32 %1563 to i64
  %1565 = getelementptr inbounds i8, ptr %1302, i64 %1564
  %1566 = load i8, ptr %1565, align 1, !tbaa !9
  %1567 = lshr i8 %1566, 5
  %1568 = zext i8 %1567 to i32
  br i1 %1387, label %1597, label %1569

1569:                                             ; preds = %1558
  %1570 = sub nsw i32 %1521, %1477
  %1571 = and i32 %1524, %1570
  %1572 = sext i32 %1571 to i64
  %1573 = getelementptr inbounds i8, ptr %1302, i64 %1572
  %1574 = load i8, ptr %1573, align 1, !tbaa !9
  %1575 = shl nuw nsw i32 %1568, 6
  %1576 = lshr i8 %1574, 2
  %1577 = and i8 %1576, 56
  %1578 = zext i8 %1577 to i32
  %1579 = or i32 %1575, %1578
  %1580 = sub nsw i32 %1521, %1560
  %1581 = and i32 %1524, %1580
  %1582 = sext i32 %1581 to i64
  %1583 = getelementptr inbounds i8, ptr %1302, i64 %1582
  %1584 = load i8, ptr %1583, align 1, !tbaa !9
  %1585 = lshr i8 %1584, 5
  %1586 = zext i8 %1585 to i32
  %1587 = or i32 %1579, %1586
  %1588 = shl nuw nsw i32 %1587, 3
  %1589 = sub nsw i32 %1521, %1561
  %1590 = and i32 %1524, %1589
  %1591 = sext i32 %1590 to i64
  %1592 = getelementptr inbounds i8, ptr %1302, i64 %1591
  %1593 = load i8, ptr %1592, align 1, !tbaa !9
  %1594 = lshr i8 %1593, 5
  %1595 = zext i8 %1594 to i32
  %1596 = or i32 %1588, %1595
  br label %1597

1597:                                             ; preds = %1558, %1569
  %1598 = phi i32 [ %1596, %1569 ], [ %1568, %1558 ]
  %1599 = mul nsw i32 %365, 9
  %1600 = mul nsw i32 %365, 10
  %1601 = mul nsw i32 %365, 11
  %1602 = mul nsw i32 %365, 12
  %1603 = sub nsw i32 %1521, %1599
  %1604 = and i32 %1524, %1603
  %1605 = sext i32 %1604 to i64
  %1606 = getelementptr inbounds i8, ptr %1302, i64 %1605
  %1607 = load i8, ptr %1606, align 1, !tbaa !9
  %1608 = lshr i8 %1607, 6
  %1609 = zext i8 %1608 to i32
  br i1 %1387, label %1638, label %1610

1610:                                             ; preds = %1597
  %1611 = sub nsw i32 %1521, %1600
  %1612 = and i32 %1524, %1611
  %1613 = sext i32 %1612 to i64
  %1614 = getelementptr inbounds i8, ptr %1302, i64 %1613
  %1615 = load i8, ptr %1614, align 1, !tbaa !9
  %1616 = shl nuw nsw i32 %1609, 4
  %1617 = lshr i8 %1615, 4
  %1618 = and i8 %1617, 12
  %1619 = zext i8 %1618 to i32
  %1620 = or i32 %1616, %1619
  %1621 = sub nsw i32 %1521, %1601
  %1622 = and i32 %1524, %1621
  %1623 = sext i32 %1622 to i64
  %1624 = getelementptr inbounds i8, ptr %1302, i64 %1623
  %1625 = load i8, ptr %1624, align 1, !tbaa !9
  %1626 = lshr i8 %1625, 6
  %1627 = zext i8 %1626 to i32
  %1628 = or i32 %1620, %1627
  %1629 = shl nuw nsw i32 %1628, 2
  %1630 = sub nsw i32 %1521, %1602
  %1631 = and i32 %1524, %1630
  %1632 = sext i32 %1631 to i64
  %1633 = getelementptr inbounds i8, ptr %1302, i64 %1632
  %1634 = load i8, ptr %1633, align 1, !tbaa !9
  %1635 = lshr i8 %1634, 6
  %1636 = zext i8 %1635 to i32
  %1637 = or i32 %1629, %1636
  br label %1638

1638:                                             ; preds = %1597, %1610
  %1639 = phi i32 [ %1637, %1610 ], [ %1609, %1597 ]
  %1640 = mul i32 %1559, 30005491
  %1641 = mul i32 %1598, 50004239
  %1642 = mul i32 %1639, 70004807
  %1643 = add i32 %1354, 1000014895
  %1644 = add i32 %1643, %1640
  %1645 = add i32 %1644, %1641
  %1646 = add i32 %1645, %1642
  %1647 = lshr i32 %1646, 9
  %1648 = lshr i32 %1559, 3
  %1649 = lshr i32 %1598, 4
  %1650 = lshr i32 %1639, 5
  %1651 = xor i32 %1648, %1649
  %1652 = xor i32 %1651, %1650
  %1653 = xor i32 %1652, %1647
  %1654 = xor i32 %1653, %1361
  %1655 = xor i32 %1654, %1646
  %1656 = xor i32 %1655, 1
  %1657 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1658 = add nsw i32 %1657, 1
  store i32 %1658, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1659 = mul i32 %1656, 987654323
  %1660 = add i32 %1659, %1657
  %1661 = tail call i32 @llvm.fshl.i32(i32 %1660, i32 %1660, i32 16)
  %1662 = mul i32 %1661, 123456791
  %1663 = add i32 %1662, %1657
  %1664 = sext i32 %1657 to i64
  %1665 = getelementptr inbounds i32, ptr %1325, i64 %1664
  store i32 %1663, ptr %1665, align 4, !tbaa !25
  %1666 = load i32, ptr @pos, align 4, !tbaa !25
  %1667 = sub nsw i32 %1666, %365
  %1668 = load i32, ptr @buf, align 8, !tbaa !20
  %1669 = add nsw i32 %1668, -1
  %1670 = and i32 %1669, %1667
  %1671 = sext i32 %1670 to i64
  %1672 = getelementptr inbounds i8, ptr %1302, i64 %1671
  %1673 = load i8, ptr %1672, align 1, !tbaa !9
  %1674 = lshr i8 %1673, 6
  %1675 = zext i8 %1674 to i32
  br i1 %1387, label %1704, label %1676

1676:                                             ; preds = %1638
  %1677 = sub nsw i32 %1666, %1374
  %1678 = and i32 %1669, %1677
  %1679 = sext i32 %1678 to i64
  %1680 = getelementptr inbounds i8, ptr %1302, i64 %1679
  %1681 = load i8, ptr %1680, align 1, !tbaa !9
  %1682 = shl nuw nsw i32 %1675, 4
  %1683 = lshr i8 %1681, 4
  %1684 = and i8 %1683, 12
  %1685 = zext i8 %1684 to i32
  %1686 = or i32 %1682, %1685
  %1687 = sub nsw i32 %1666, %1375
  %1688 = and i32 %1669, %1687
  %1689 = sext i32 %1688 to i64
  %1690 = getelementptr inbounds i8, ptr %1302, i64 %1689
  %1691 = load i8, ptr %1690, align 1, !tbaa !9
  %1692 = lshr i8 %1691, 6
  %1693 = zext i8 %1692 to i32
  %1694 = or i32 %1686, %1693
  %1695 = shl nuw nsw i32 %1694, 2
  %1696 = sub nsw i32 %1666, %1376
  %1697 = and i32 %1669, %1696
  %1698 = sext i32 %1697 to i64
  %1699 = getelementptr inbounds i8, ptr %1302, i64 %1698
  %1700 = load i8, ptr %1699, align 1, !tbaa !9
  %1701 = lshr i8 %1700, 6
  %1702 = zext i8 %1701 to i32
  %1703 = or i32 %1695, %1702
  br label %1704

1704:                                             ; preds = %1638, %1676
  %1705 = phi i32 [ %1703, %1676 ], [ %1675, %1638 ]
  %1706 = shl nuw nsw i32 %1705, 8
  %1707 = sub nsw i32 %1666, %1476
  %1708 = and i32 %1669, %1707
  %1709 = sext i32 %1708 to i64
  %1710 = getelementptr inbounds i8, ptr %1302, i64 %1709
  %1711 = load i8, ptr %1710, align 1, !tbaa !9
  %1712 = lshr i8 %1711, 6
  %1713 = zext i8 %1712 to i32
  br i1 %1387, label %1742, label %1714

1714:                                             ; preds = %1704
  %1715 = sub nsw i32 %1666, %1477
  %1716 = and i32 %1669, %1715
  %1717 = sext i32 %1716 to i64
  %1718 = getelementptr inbounds i8, ptr %1302, i64 %1717
  %1719 = load i8, ptr %1718, align 1, !tbaa !9
  %1720 = shl nuw nsw i32 %1713, 4
  %1721 = lshr i8 %1719, 4
  %1722 = and i8 %1721, 12
  %1723 = zext i8 %1722 to i32
  %1724 = or i32 %1720, %1723
  %1725 = sub nsw i32 %1666, %1560
  %1726 = and i32 %1669, %1725
  %1727 = sext i32 %1726 to i64
  %1728 = getelementptr inbounds i8, ptr %1302, i64 %1727
  %1729 = load i8, ptr %1728, align 1, !tbaa !9
  %1730 = lshr i8 %1729, 6
  %1731 = zext i8 %1730 to i32
  %1732 = or i32 %1724, %1731
  %1733 = shl nuw nsw i32 %1732, 2
  %1734 = sub nsw i32 %1666, %1561
  %1735 = and i32 %1669, %1734
  %1736 = sext i32 %1735 to i64
  %1737 = getelementptr inbounds i8, ptr %1302, i64 %1736
  %1738 = load i8, ptr %1737, align 1, !tbaa !9
  %1739 = lshr i8 %1738, 6
  %1740 = zext i8 %1739 to i32
  %1741 = or i32 %1733, %1740
  br label %1742

1742:                                             ; preds = %1704, %1714
  %1743 = phi i32 [ %1741, %1714 ], [ %1713, %1704 ]
  %1744 = or i32 %1743, %1706
  %1745 = sub nsw i32 %1666, %1599
  %1746 = and i32 %1669, %1745
  %1747 = sext i32 %1746 to i64
  %1748 = getelementptr inbounds i8, ptr %1302, i64 %1747
  %1749 = load i8, ptr %1748, align 1, !tbaa !9
  %1750 = lshr i8 %1749, 6
  %1751 = zext i8 %1750 to i32
  br i1 %1387, label %1780, label %1752

1752:                                             ; preds = %1742
  %1753 = sub nsw i32 %1666, %1600
  %1754 = and i32 %1669, %1753
  %1755 = sext i32 %1754 to i64
  %1756 = getelementptr inbounds i8, ptr %1302, i64 %1755
  %1757 = load i8, ptr %1756, align 1, !tbaa !9
  %1758 = shl nuw nsw i32 %1751, 4
  %1759 = lshr i8 %1757, 4
  %1760 = and i8 %1759, 12
  %1761 = zext i8 %1760 to i32
  %1762 = or i32 %1758, %1761
  %1763 = sub nsw i32 %1666, %1601
  %1764 = and i32 %1669, %1763
  %1765 = sext i32 %1764 to i64
  %1766 = getelementptr inbounds i8, ptr %1302, i64 %1765
  %1767 = load i8, ptr %1766, align 1, !tbaa !9
  %1768 = lshr i8 %1767, 6
  %1769 = zext i8 %1768 to i32
  %1770 = or i32 %1762, %1769
  %1771 = shl nuw nsw i32 %1770, 2
  %1772 = sub nsw i32 %1666, %1602
  %1773 = and i32 %1669, %1772
  %1774 = sext i32 %1773 to i64
  %1775 = getelementptr inbounds i8, ptr %1302, i64 %1774
  %1776 = load i8, ptr %1775, align 1, !tbaa !9
  %1777 = lshr i8 %1776, 6
  %1778 = zext i8 %1777 to i32
  %1779 = or i32 %1771, %1778
  br label %1780

1780:                                             ; preds = %1742, %1752
  %1781 = phi i32 [ %1779, %1752 ], [ %1751, %1742 ]
  %1782 = shl nuw nsw i32 %1781, 8
  %1783 = mul i32 %365, -13
  %1784 = add i32 %1666, %1783
  %1785 = and i32 %1669, %1784
  %1786 = sext i32 %1785 to i64
  %1787 = getelementptr inbounds i8, ptr %1302, i64 %1786
  %1788 = load i8, ptr %1787, align 1, !tbaa !9
  %1789 = lshr i8 %1788, 6
  %1790 = zext i8 %1789 to i32
  br i1 %1387, label %1822, label %1791

1791:                                             ; preds = %1780
  %1792 = shl nsw i32 %365, 4
  %1793 = mul i32 %365, -15
  %1794 = mul i32 %365, -14
  %1795 = add i32 %1666, %1794
  %1796 = and i32 %1669, %1795
  %1797 = sext i32 %1796 to i64
  %1798 = getelementptr inbounds i8, ptr %1302, i64 %1797
  %1799 = load i8, ptr %1798, align 1, !tbaa !9
  %1800 = shl nuw nsw i32 %1790, 4
  %1801 = lshr i8 %1799, 4
  %1802 = and i8 %1801, 12
  %1803 = zext i8 %1802 to i32
  %1804 = or i32 %1800, %1803
  %1805 = add i32 %1666, %1793
  %1806 = and i32 %1669, %1805
  %1807 = sext i32 %1806 to i64
  %1808 = getelementptr inbounds i8, ptr %1302, i64 %1807
  %1809 = load i8, ptr %1808, align 1, !tbaa !9
  %1810 = lshr i8 %1809, 6
  %1811 = zext i8 %1810 to i32
  %1812 = or i32 %1804, %1811
  %1813 = shl nuw nsw i32 %1812, 2
  %1814 = sub nsw i32 %1666, %1792
  %1815 = and i32 %1669, %1814
  %1816 = sext i32 %1815 to i64
  %1817 = getelementptr inbounds i8, ptr %1302, i64 %1816
  %1818 = load i8, ptr %1817, align 1, !tbaa !9
  %1819 = lshr i8 %1818, 6
  %1820 = zext i8 %1819 to i32
  %1821 = or i32 %1813, %1820
  br label %1822

1822:                                             ; preds = %1780, %1791
  %1823 = phi i32 [ %1821, %1791 ], [ %1790, %1780 ]
  %1824 = or i32 %1823, %1782
  %1825 = mul i32 %365, -17
  %1826 = add i32 %1666, %1825
  %1827 = and i32 %1669, %1826
  %1828 = sext i32 %1827 to i64
  %1829 = getelementptr inbounds i8, ptr %1302, i64 %1828
  %1830 = load i8, ptr %1829, align 1, !tbaa !9
  %1831 = lshr i8 %1830, 6
  %1832 = zext i8 %1831 to i32
  br i1 %1387, label %1864, label %1833

1833:                                             ; preds = %1822
  %1834 = mul i32 %365, -20
  %1835 = mul i32 %365, -19
  %1836 = mul i32 %365, -18
  %1837 = add i32 %1666, %1836
  %1838 = and i32 %1669, %1837
  %1839 = sext i32 %1838 to i64
  %1840 = getelementptr inbounds i8, ptr %1302, i64 %1839
  %1841 = load i8, ptr %1840, align 1, !tbaa !9
  %1842 = shl nuw nsw i32 %1832, 4
  %1843 = lshr i8 %1841, 4
  %1844 = and i8 %1843, 12
  %1845 = zext i8 %1844 to i32
  %1846 = or i32 %1842, %1845
  %1847 = add i32 %1666, %1835
  %1848 = and i32 %1669, %1847
  %1849 = sext i32 %1848 to i64
  %1850 = getelementptr inbounds i8, ptr %1302, i64 %1849
  %1851 = load i8, ptr %1850, align 1, !tbaa !9
  %1852 = lshr i8 %1851, 6
  %1853 = zext i8 %1852 to i32
  %1854 = or i32 %1846, %1853
  %1855 = shl nuw nsw i32 %1854, 2
  %1856 = add i32 %1666, %1834
  %1857 = and i32 %1669, %1856
  %1858 = sext i32 %1857 to i64
  %1859 = getelementptr inbounds i8, ptr %1302, i64 %1858
  %1860 = load i8, ptr %1859, align 1, !tbaa !9
  %1861 = lshr i8 %1860, 6
  %1862 = zext i8 %1861 to i32
  %1863 = or i32 %1855, %1862
  br label %1864

1864:                                             ; preds = %1822, %1833
  %1865 = phi i32 [ %1863, %1833 ], [ %1832, %1822 ]
  %1866 = shl nuw nsw i32 %1865, 8
  %1867 = mul i32 %365, -21
  %1868 = add i32 %1666, %1867
  %1869 = and i32 %1669, %1868
  %1870 = sext i32 %1869 to i64
  %1871 = getelementptr inbounds i8, ptr %1302, i64 %1870
  %1872 = load i8, ptr %1871, align 1, !tbaa !9
  %1873 = lshr i8 %1872, 6
  %1874 = zext i8 %1873 to i32
  br i1 %1387, label %1906, label %1875

1875:                                             ; preds = %1864
  %1876 = mul i32 %365, -24
  %1877 = mul i32 %365, -23
  %1878 = mul i32 %365, -22
  %1879 = add i32 %1666, %1878
  %1880 = and i32 %1669, %1879
  %1881 = sext i32 %1880 to i64
  %1882 = getelementptr inbounds i8, ptr %1302, i64 %1881
  %1883 = load i8, ptr %1882, align 1, !tbaa !9
  %1884 = shl nuw nsw i32 %1874, 4
  %1885 = lshr i8 %1883, 4
  %1886 = and i8 %1885, 12
  %1887 = zext i8 %1886 to i32
  %1888 = or i32 %1884, %1887
  %1889 = add i32 %1666, %1877
  %1890 = and i32 %1669, %1889
  %1891 = sext i32 %1890 to i64
  %1892 = getelementptr inbounds i8, ptr %1302, i64 %1891
  %1893 = load i8, ptr %1892, align 1, !tbaa !9
  %1894 = lshr i8 %1893, 6
  %1895 = zext i8 %1894 to i32
  %1896 = or i32 %1888, %1895
  %1897 = shl nuw nsw i32 %1896, 2
  %1898 = add i32 %1666, %1876
  %1899 = and i32 %1669, %1898
  %1900 = sext i32 %1899 to i64
  %1901 = getelementptr inbounds i8, ptr %1302, i64 %1900
  %1902 = load i8, ptr %1901, align 1, !tbaa !9
  %1903 = lshr i8 %1902, 6
  %1904 = zext i8 %1903 to i32
  %1905 = or i32 %1897, %1904
  br label %1906

1906:                                             ; preds = %1864, %1875
  %1907 = phi i32 [ %1905, %1875 ], [ %1874, %1864 ]
  %1908 = or i32 %1907, %1866
  %1909 = mul i32 %1744, 30005491
  %1910 = mul i32 %1824, 50004239
  %1911 = mul i32 %1908, 70004807
  %1912 = add i32 %1354, 1200017874
  %1913 = add i32 %1912, %1909
  %1914 = add i32 %1913, %1910
  %1915 = add i32 %1914, %1911
  %1916 = lshr i32 %1915, 9
  %1917 = lshr i32 %1744, 3
  %1918 = lshr i32 %1824, 4
  %1919 = lshr i32 %1908, 5
  %1920 = xor i32 %1917, %1918
  %1921 = xor i32 %1920, %1919
  %1922 = xor i32 %1921, %1916
  %1923 = xor i32 %1922, %1361
  %1924 = xor i32 %1923, %1915
  %1925 = xor i32 %1924, 1
  %1926 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1927 = add nsw i32 %1926, 1
  store i32 %1927, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1928 = mul i32 %1925, 987654323
  %1929 = add i32 %1928, %1926
  %1930 = tail call i32 @llvm.fshl.i32(i32 %1929, i32 %1929, i32 16)
  %1931 = mul i32 %1930, 123456791
  %1932 = add i32 %1931, %1926
  %1933 = sext i32 %1926 to i64
  %1934 = getelementptr inbounds i32, ptr %1325, i64 %1933
  store i32 %1932, ptr %1934, align 4, !tbaa !25
  %1935 = sext i32 %367 to i64
  %1936 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 %1935
  %1937 = load i32, ptr %1936, align 4, !tbaa !25
  %1938 = ashr i32 %1937, 8
  %1939 = mul i32 %1938, 30005491
  %1940 = add i32 %1308, 1220013547
  %1941 = add i32 %1940, %1939
  %1942 = lshr i32 %1941, 9
  %1943 = lshr i32 %1938, 3
  %1944 = xor i32 %1943, %1942
  %1945 = xor i32 %1944, %1313
  %1946 = xor i32 %1945, %1941
  %1947 = xor i32 %1946, 67108865
  %1948 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1949 = add nsw i32 %1948, 1
  store i32 %1949, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1950 = mul i32 %1947, 987654323
  %1951 = add i32 %1950, %1948
  %1952 = tail call i32 @llvm.fshl.i32(i32 %1951, i32 %1951, i32 16)
  %1953 = mul i32 %1952, 123456791
  %1954 = add i32 %1953, %1948
  %1955 = sext i32 %1948 to i64
  %1956 = getelementptr inbounds i32, ptr %1325, i64 %1955
  store i32 %1954, ptr %1956, align 4, !tbaa !25
  %1957 = add nsw i32 %365, 1
  %1958 = load i32, ptr @pos, align 4, !tbaa !25
  %1959 = sub i32 %1958, %1957
  %1960 = load i32, ptr @buf, align 8, !tbaa !20
  %1961 = add nsw i32 %1960, -1
  %1962 = and i32 %1961, %1959
  %1963 = sext i32 %1962 to i64
  %1964 = getelementptr inbounds i8, ptr %1302, i64 %1963
  %1965 = load i8, ptr %1964, align 1, !tbaa !9
  %1966 = zext i8 %1965 to i32
  %1967 = add i32 %1959, 1
  %1968 = and i32 %1961, %1967
  %1969 = sext i32 %1968 to i64
  %1970 = getelementptr inbounds i8, ptr %1302, i64 %1969
  %1971 = load i8, ptr %1970, align 1, !tbaa !9
  %1972 = zext i8 %1971 to i32
  %1973 = shl nuw i32 %1972, 24
  %1974 = shl nuw nsw i32 %1966, 16
  %1975 = or i32 %1973, %1974
  %1976 = ashr exact i32 %1975, 16
  %1977 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 1, i64 %1935
  %1978 = load i32, ptr %1977, align 4, !tbaa !25
  %1979 = sub i32 %1937, %1978
  %1980 = add i32 %1979, %1976
  %1981 = ashr i32 %1980, 8
  %1982 = mul i32 %1981, 30005491
  %1983 = add i32 %1308, 1420016526
  %1984 = add i32 %1983, %1982
  %1985 = lshr i32 %1984, 9
  %1986 = lshr i32 %1981, 3
  %1987 = xor i32 %1986, %1985
  %1988 = xor i32 %1987, %1313
  %1989 = xor i32 %1988, %1984
  %1990 = xor i32 %1989, 67108866
  %1991 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1992 = add nsw i32 %1991, 1
  store i32 %1992, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1993 = mul i32 %1990, 987654323
  %1994 = add i32 %1993, %1991
  %1995 = tail call i32 @llvm.fshl.i32(i32 %1994, i32 %1994, i32 16)
  %1996 = mul i32 %1995, 123456791
  %1997 = add i32 %1996, %1991
  %1998 = sext i32 %1991 to i64
  %1999 = getelementptr inbounds i32, ptr %1325, i64 %1998
  store i32 %1997, ptr %1999, align 4, !tbaa !25
  %2000 = load i32, ptr @pos, align 4, !tbaa !25
  %2001 = sub i32 %2000, %1957
  %2002 = load i32, ptr @buf, align 8, !tbaa !20
  %2003 = add nsw i32 %2002, -1
  %2004 = and i32 %2003, %2001
  %2005 = sext i32 %2004 to i64
  %2006 = getelementptr inbounds i8, ptr %1302, i64 %2005
  %2007 = load i8, ptr %2006, align 1, !tbaa !9
  %2008 = zext i8 %2007 to i32
  %2009 = add i32 %2001, 1
  %2010 = and i32 %2003, %2009
  %2011 = sext i32 %2010 to i64
  %2012 = getelementptr inbounds i8, ptr %1302, i64 %2011
  %2013 = load i8, ptr %2012, align 1, !tbaa !9
  %2014 = zext i8 %2013 to i32
  %2015 = shl nuw i32 %2014, 24
  %2016 = shl nuw nsw i32 %2008, 16
  %2017 = or i32 %2015, %2016
  %2018 = ashr exact i32 %2017, 16
  %2019 = or i32 %1374, 1
  %2020 = sub i32 %2000, %2019
  %2021 = and i32 %2003, %2020
  %2022 = sext i32 %2021 to i64
  %2023 = getelementptr inbounds i8, ptr %1302, i64 %2022
  %2024 = load i8, ptr %2023, align 1, !tbaa !9
  %2025 = zext i8 %2024 to i32
  %2026 = add i32 %2020, 1
  %2027 = and i32 %2003, %2026
  %2028 = sext i32 %2027 to i64
  %2029 = getelementptr inbounds i8, ptr %1302, i64 %2028
  %2030 = load i8, ptr %2029, align 1, !tbaa !9
  %2031 = zext i8 %2030 to i32
  %2032 = shl nuw i32 %2031, 24
  %2033 = shl nuw nsw i32 %2025, 16
  %2034 = or i32 %2032, %2033
  %2035 = ashr exact i32 %2034, 16
  %2036 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 2, i64 %1935
  %2037 = load i32, ptr %2036, align 4, !tbaa !25
  %2038 = add i32 %2037, %1978
  %2039 = sub i32 %2018, %2038
  %2040 = add i32 %2039, %2035
  %2041 = ashr i32 %2040, 9
  %2042 = mul i32 %2041, 50004239
  %2043 = add i32 %1499, 1690024312
  %2044 = add i32 %2043, %1939
  %2045 = add i32 %2044, %2042
  %2046 = lshr i32 %2045, 9
  %2047 = lshr i32 %2041, 4
  %2048 = xor i32 %2047, %2046
  %2049 = xor i32 %2048, %1943
  %2050 = xor i32 %2049, %1506
  %2051 = xor i32 %2050, %2045
  %2052 = xor i32 %2051, 67108861
  %2053 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %2054 = add nsw i32 %2053, 1
  store i32 %2054, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %2055 = mul i32 %2052, 987654323
  %2056 = add i32 %2055, %2053
  %2057 = tail call i32 @llvm.fshl.i32(i32 %2056, i32 %2056, i32 16)
  %2058 = mul i32 %2057, 123456791
  %2059 = add i32 %2058, %2053
  %2060 = sext i32 %2053 to i64
  %2061 = getelementptr inbounds i32, ptr %1325, i64 %2060
  store i32 %2059, ptr %2061, align 4, !tbaa !25
  %2062 = load i32, ptr @pos, align 4, !tbaa !25
  %2063 = sub i32 %2062, %1957
  %2064 = load i32, ptr @buf, align 8, !tbaa !20
  %2065 = add nsw i32 %2064, -1
  %2066 = and i32 %2065, %2063
  %2067 = sext i32 %2066 to i64
  %2068 = getelementptr inbounds i8, ptr %1302, i64 %2067
  %2069 = load i8, ptr %2068, align 1, !tbaa !9
  %2070 = zext i8 %2069 to i32
  %2071 = add i32 %2063, 1
  %2072 = and i32 %2065, %2071
  %2073 = sext i32 %2072 to i64
  %2074 = getelementptr inbounds i8, ptr %1302, i64 %2073
  %2075 = load i8, ptr %2074, align 1, !tbaa !9
  %2076 = zext i8 %2075 to i32
  %2077 = shl nuw i32 %2076, 24
  %2078 = shl nuw nsw i32 %2070, 16
  %2079 = or i32 %2077, %2078
  %2080 = ashr exact i32 %2079, 15
  %2081 = sub i32 %2062, %2019
  %2082 = and i32 %2065, %2081
  %2083 = sext i32 %2082 to i64
  %2084 = getelementptr inbounds i8, ptr %1302, i64 %2083
  %2085 = load i8, ptr %2084, align 1, !tbaa !9
  %2086 = zext i8 %2085 to i32
  %2087 = add i32 %2081, 1
  %2088 = and i32 %2065, %2087
  %2089 = sext i32 %2088 to i64
  %2090 = getelementptr inbounds i8, ptr %1302, i64 %2089
  %2091 = load i8, ptr %2090, align 1, !tbaa !9
  %2092 = zext i8 %2091 to i32
  %2093 = shl nuw i32 %2092, 24
  %2094 = shl nuw nsw i32 %2086, 16
  %2095 = or i32 %2093, %2094
  %2096 = ashr exact i32 %2095, 16
  %2097 = shl i32 %1978, 1
  %2098 = sub i32 %1937, %2097
  %2099 = add i32 %2098, %2037
  %2100 = add i32 %2099, %2080
  %2101 = sub i32 %2100, %2096
  %2102 = ashr i32 %2101, 8
  %2103 = mul i32 %2102, 30005491
  %2104 = add i32 %1308, 1820022484
  %2105 = add i32 %2104, %2103
  %2106 = lshr i32 %2105, 9
  %2107 = lshr i32 %2102, 3
  %2108 = xor i32 %2107, %2106
  %2109 = xor i32 %2108, %1313
  %2110 = xor i32 %2109, %2105
  %2111 = xor i32 %2110, 67108866
  %2112 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %2113 = add nsw i32 %2112, 1
  store i32 %2113, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %2114 = mul i32 %2111, 987654323
  %2115 = add i32 %2114, %2112
  %2116 = tail call i32 @llvm.fshl.i32(i32 %2115, i32 %2115, i32 16)
  %2117 = mul i32 %2116, 123456791
  %2118 = add i32 %2117, %2112
  %2119 = sext i32 %2112 to i64
  %2120 = getelementptr inbounds i32, ptr %1325, i64 %2119
  store i32 %2118, ptr %2120, align 4, !tbaa !25
  %2121 = load i32, ptr @pos, align 4, !tbaa !25
  %2122 = add i32 %2121, -5
  %2123 = load i32, ptr @buf, align 8, !tbaa !20
  %2124 = add nsw i32 %2123, -1
  %2125 = and i32 %2124, %2122
  %2126 = sext i32 %2125 to i64
  %2127 = getelementptr inbounds i8, ptr %1302, i64 %2126
  %2128 = load i8, ptr %2127, align 1, !tbaa !9
  %2129 = zext i8 %2128 to i32
  %2130 = add i32 %2121, -4
  %2131 = and i32 %2124, %2130
  %2132 = sext i32 %2131 to i64
  %2133 = getelementptr inbounds i8, ptr %1302, i64 %2132
  %2134 = load i8, ptr %2133, align 1, !tbaa !9
  %2135 = zext i8 %2134 to i32
  %2136 = shl nuw i32 %2135, 24
  %2137 = shl nuw nsw i32 %2129, 16
  %2138 = or i32 %2136, %2137
  %2139 = ashr exact i32 %2138, 16
  %2140 = add i32 %2121, -3
  %2141 = and i32 %2124, %2140
  %2142 = sext i32 %2141 to i64
  %2143 = getelementptr inbounds i8, ptr %1302, i64 %2142
  %2144 = load i8, ptr %2143, align 1, !tbaa !9
  %2145 = zext i8 %2144 to i32
  %2146 = add i32 %2121, -2
  %2147 = and i32 %2124, %2146
  %2148 = sext i32 %2147 to i64
  %2149 = getelementptr inbounds i8, ptr %1302, i64 %2148
  %2150 = load i8, ptr %2149, align 1, !tbaa !9
  %2151 = zext i8 %2150 to i32
  %2152 = shl nuw i32 %2151, 24
  %2153 = shl nuw nsw i32 %2145, 16
  %2154 = or i32 %2152, %2153
  %2155 = ashr exact i32 %2154, 16
  %2156 = add i32 %2121, -7
  %2157 = and i32 %2124, %2156
  %2158 = sext i32 %2157 to i64
  %2159 = getelementptr inbounds i8, ptr %1302, i64 %2158
  %2160 = load i8, ptr %2159, align 1, !tbaa !9
  %2161 = zext i8 %2160 to i32
  %2162 = add i32 %2121, -6
  %2163 = and i32 %2124, %2162
  %2164 = sext i32 %2163 to i64
  %2165 = getelementptr inbounds i8, ptr %1302, i64 %2164
  %2166 = load i8, ptr %2165, align 1, !tbaa !9
  %2167 = zext i8 %2166 to i32
  %2168 = shl nuw i32 %2167, 24
  %2169 = shl nuw nsw i32 %2161, 16
  %2170 = or i32 %2168, %2169
  %2171 = ashr exact i32 %2170, 16
  %2172 = add nsw i32 %2121, -1
  %2173 = and i32 %2124, %2172
  %2174 = sext i32 %2173 to i64
  %2175 = getelementptr inbounds i8, ptr %1302, i64 %2174
  %2176 = load i8, ptr %2175, align 1, !tbaa !9
  %2177 = zext i8 %2176 to i32
  %2178 = add i32 %2139, %1937
  %2179 = add i32 %2178, %2155
  %2180 = add nsw i32 %2171, %2177
  %2181 = sub i32 %2179, %2180
  %2182 = ashr i32 %2181, 1
  %2183 = load i32, ptr @_ZZ8wavModelR5MixerE4scm1, align 8, !tbaa !74
  %2184 = and i32 %2183, -256
  %2185 = add i32 %2184, -256
  %2186 = and i32 %2185, %2182
  store i32 %2186, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %2187 = sub i32 %2121, %1957
  %2188 = and i32 %2124, %2187
  %2189 = sext i32 %2188 to i64
  %2190 = getelementptr inbounds i8, ptr %1302, i64 %2189
  %2191 = load i8, ptr %2190, align 1, !tbaa !9
  %2192 = zext i8 %2191 to i32
  %2193 = add i32 %2187, 1
  %2194 = and i32 %2124, %2193
  %2195 = sext i32 %2194 to i64
  %2196 = getelementptr inbounds i8, ptr %1302, i64 %2195
  %2197 = load i8, ptr %2196, align 1, !tbaa !9
  %2198 = zext i8 %2197 to i32
  %2199 = shl nuw i32 %2198, 24
  %2200 = shl nuw nsw i32 %2192, 16
  %2201 = or i32 %2199, %2200
  %2202 = ashr exact i32 %2201, 16
  %2203 = load i8, ptr %2175, align 1, !tbaa !9
  %2204 = zext i8 %2203 to i32
  %2205 = sub i32 %1937, %2204
  %2206 = add i32 %2205, %2202
  %2207 = ashr i32 %2206, 1
  %2208 = load i32, ptr @_ZZ8wavModelR5MixerE4scm2, align 8, !tbaa !74
  %2209 = and i32 %2208, -256
  %2210 = add i32 %2209, -256
  %2211 = and i32 %2210, %2207
  store i32 %2211, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %2212 = load i8, ptr %2190, align 1, !tbaa !9
  %2213 = zext i8 %2212 to i32
  %2214 = load i8, ptr %2196, align 1, !tbaa !9
  %2215 = zext i8 %2214 to i32
  %2216 = shl nuw i32 %2215, 24
  %2217 = shl nuw nsw i32 %2213, 16
  %2218 = or i32 %2216, %2217
  %2219 = ashr exact i32 %2218, 15
  %2220 = sub i32 %2121, %2019
  %2221 = and i32 %2124, %2220
  %2222 = sext i32 %2221 to i64
  %2223 = getelementptr inbounds i8, ptr %1302, i64 %2222
  %2224 = load i8, ptr %2223, align 1, !tbaa !9
  %2225 = zext i8 %2224 to i32
  %2226 = add i32 %2220, 1
  %2227 = and i32 %2124, %2226
  %2228 = sext i32 %2227 to i64
  %2229 = getelementptr inbounds i8, ptr %1302, i64 %2228
  %2230 = load i8, ptr %2229, align 1, !tbaa !9
  %2231 = zext i8 %2230 to i32
  %2232 = shl nuw i32 %2231, 24
  %2233 = shl nuw nsw i32 %2225, 16
  %2234 = or i32 %2232, %2233
  %2235 = ashr exact i32 %2234, 16
  %2236 = load i8, ptr %2175, align 1, !tbaa !9
  %2237 = zext i8 %2236 to i32
  %2238 = add i32 %1937, %2219
  %2239 = add nsw i32 %2235, %2237
  %2240 = sub i32 %2238, %2239
  %2241 = load i32, ptr @_ZZ8wavModelR5MixerE4scm3, align 8, !tbaa !74
  %2242 = and i32 %2241, -256
  %2243 = add i32 %2242, -256
  %2244 = and i32 %2243, %2240
  store i32 %2244, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 1), align 8, !tbaa !112
  %2245 = load i8, ptr %2190, align 1, !tbaa !9
  %2246 = zext i8 %2245 to i32
  %2247 = load i8, ptr %2196, align 1, !tbaa !9
  %2248 = zext i8 %2247 to i32
  %2249 = shl nuw i32 %2248, 24
  %2250 = shl nuw nsw i32 %2246, 16
  %2251 = or i32 %2249, %2250
  %2252 = ashr exact i32 %2251, 16
  %2253 = load i8, ptr %2223, align 1, !tbaa !9
  %2254 = zext i8 %2253 to i32
  %2255 = load i8, ptr %2229, align 1, !tbaa !9
  %2256 = zext i8 %2255 to i32
  %2257 = shl nuw i32 %2256, 24
  %2258 = shl nuw nsw i32 %2254, 16
  %2259 = or i32 %2257, %2258
  %2260 = ashr exact i32 %2259, 16
  %2261 = xor i32 %1375, -1
  %2262 = add i32 %2121, %2261
  %2263 = and i32 %2124, %2262
  %2264 = sext i32 %2263 to i64
  %2265 = getelementptr inbounds i8, ptr %1302, i64 %2264
  %2266 = load i8, ptr %2265, align 1, !tbaa !9
  %2267 = zext i8 %2266 to i32
  %2268 = sub i32 %2121, %1375
  %2269 = and i32 %2124, %2268
  %2270 = sext i32 %2269 to i64
  %2271 = getelementptr inbounds i8, ptr %1302, i64 %2270
  %2272 = load i8, ptr %2271, align 1, !tbaa !9
  %2273 = zext i8 %2272 to i32
  %2274 = shl nuw i32 %2273, 24
  %2275 = shl nuw nsw i32 %2267, 16
  %2276 = or i32 %2274, %2275
  %2277 = ashr exact i32 %2276, 16
  %2278 = load i8, ptr %2175, align 1, !tbaa !9
  %2279 = zext i8 %2278 to i32
  %2280 = sub nsw i32 %2252, %2260
  %2281 = mul nsw i32 %2280, 3
  %2282 = sub nsw i32 %2277, %2279
  %2283 = add nsw i32 %2282, %2281
  %2284 = shl nsw i32 %2283, 1
  %2285 = load i32, ptr @_ZZ8wavModelR5MixerE4scm4, align 8, !tbaa !74
  %2286 = and i32 %2285, -256
  %2287 = add i32 %2286, -256
  %2288 = and i32 %2287, %2284
  store i32 %2288, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm4, i64 0, i32 1), align 8, !tbaa !112
  %2289 = sub i32 %2121, %365
  %2290 = add i32 %2289, 1
  %2291 = and i32 %2124, %2290
  %2292 = sext i32 %2291 to i64
  %2293 = getelementptr inbounds i8, ptr %1302, i64 %2292
  %2294 = load i8, ptr %2293, align 1, !tbaa !9
  %2295 = zext i8 %2294 to i32
  %2296 = add i32 %2289, 2
  %2297 = and i32 %2124, %2296
  %2298 = sext i32 %2297 to i64
  %2299 = getelementptr inbounds i8, ptr %1302, i64 %2298
  %2300 = load i8, ptr %2299, align 1, !tbaa !9
  %2301 = zext i8 %2300 to i32
  %2302 = shl nuw i32 %2301, 24
  %2303 = shl nuw nsw i32 %2295, 16
  %2304 = or i32 %2302, %2303
  %2305 = ashr exact i32 %2304, 16
  %2306 = load i8, ptr %2190, align 1, !tbaa !9
  %2307 = zext i8 %2306 to i32
  %2308 = load i8, ptr %2196, align 1, !tbaa !9
  %2309 = zext i8 %2308 to i32
  %2310 = shl nuw i32 %2309, 24
  %2311 = shl nuw nsw i32 %2307, 16
  %2312 = or i32 %2310, %2311
  %2313 = ashr exact i32 %2312, 16
  %2314 = load i8, ptr %2175, align 1, !tbaa !9
  %2315 = zext i8 %2314 to i32
  %2316 = shl nsw i32 %1937, 1
  %2317 = add i32 %2305, %2316
  %2318 = sub i32 %2317, %2315
  %2319 = add i32 %2318, %2313
  %2320 = ashr i32 %2319, 2
  %2321 = load i32, ptr @_ZZ8wavModelR5MixerE4scm5, align 8, !tbaa !74
  %2322 = and i32 %2321, -256
  %2323 = add i32 %2322, -256
  %2324 = and i32 %2323, %2320
  store i32 %2324, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm5, i64 0, i32 1), align 8, !tbaa !112
  %2325 = load i8, ptr %2190, align 1, !tbaa !9
  %2326 = zext i8 %2325 to i32
  %2327 = load i8, ptr %2196, align 1, !tbaa !9
  %2328 = zext i8 %2327 to i32
  %2329 = shl nuw i32 %2328, 24
  %2330 = shl nuw nsw i32 %2326, 16
  %2331 = or i32 %2329, %2330
  %2332 = ashr exact i32 %2331, 14
  %2333 = load i8, ptr %2223, align 1, !tbaa !9
  %2334 = zext i8 %2333 to i32
  %2335 = load i8, ptr %2229, align 1, !tbaa !9
  %2336 = zext i8 %2335 to i32
  %2337 = shl nuw i32 %2336, 24
  %2338 = shl nuw nsw i32 %2334, 16
  %2339 = or i32 %2337, %2338
  %2340 = ashr exact i32 %2339, 16
  %2341 = mul i32 %2340, 2147483642
  %2342 = load i8, ptr %2265, align 1, !tbaa !9
  %2343 = zext i8 %2342 to i32
  %2344 = load i8, ptr %2271, align 1, !tbaa !9
  %2345 = zext i8 %2344 to i32
  %2346 = shl nuw i32 %2345, 24
  %2347 = shl nuw nsw i32 %2343, 16
  %2348 = or i32 %2346, %2347
  %2349 = ashr exact i32 %2348, 14
  %2350 = xor i32 %1376, -1
  %2351 = add i32 %2121, %2350
  %2352 = and i32 %2124, %2351
  %2353 = sext i32 %2352 to i64
  %2354 = getelementptr inbounds i8, ptr %1302, i64 %2353
  %2355 = load i8, ptr %2354, align 1, !tbaa !9
  %2356 = zext i8 %2355 to i32
  %2357 = sub i32 %2121, %1376
  %2358 = and i32 %2124, %2357
  %2359 = sext i32 %2358 to i64
  %2360 = getelementptr inbounds i8, ptr %1302, i64 %2359
  %2361 = load i8, ptr %2360, align 1, !tbaa !9
  %2362 = zext i8 %2361 to i32
  %2363 = shl nuw i32 %2362, 24
  %2364 = shl nuw nsw i32 %2356, 16
  %2365 = or i32 %2363, %2364
  %2366 = ashr exact i32 %2365, 16
  %2367 = load i8, ptr %2175, align 1, !tbaa !9
  %2368 = zext i8 %2367 to i32
  %2369 = add i32 %2341, %2332
  %2370 = add i32 %2369, %2349
  %2371 = add nsw i32 %2366, %2368
  %2372 = sub i32 %2370, %2371
  %2373 = shl i32 %2372, 1
  %2374 = load i32, ptr @_ZZ8wavModelR5MixerE4scm7, align 8, !tbaa !74
  %2375 = and i32 %2374, -256
  %2376 = add i32 %2375, -256
  %2377 = and i32 %2376, %2373
  store i32 %2377, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm7, i64 0, i32 1), align 8, !tbaa !112
  %2378 = load i8, ptr %2190, align 1, !tbaa !9
  %2379 = zext i8 %2378 to i32
  %2380 = load i8, ptr %2196, align 1, !tbaa !9
  %2381 = zext i8 %2380 to i32
  %2382 = shl nuw i32 %2381, 24
  %2383 = shl nuw nsw i32 %2379, 16
  %2384 = or i32 %2382, %2383
  %2385 = ashr exact i32 %2384, 16
  %2386 = load i8, ptr %2223, align 1, !tbaa !9
  %2387 = zext i8 %2386 to i32
  %2388 = load i8, ptr %2229, align 1, !tbaa !9
  %2389 = zext i8 %2388 to i32
  %2390 = shl nuw i32 %2389, 24
  %2391 = shl nuw nsw i32 %2387, 16
  %2392 = or i32 %2390, %2391
  %2393 = ashr exact i32 %2392, 16
  %2394 = load i8, ptr %2265, align 1, !tbaa !9
  %2395 = zext i8 %2394 to i32
  %2396 = load i8, ptr %2271, align 1, !tbaa !9
  %2397 = zext i8 %2396 to i32
  %2398 = shl nuw i32 %2397, 24
  %2399 = shl nuw nsw i32 %2395, 16
  %2400 = or i32 %2398, %2399
  %2401 = ashr exact i32 %2400, 16
  %2402 = load i8, ptr %2354, align 1, !tbaa !9
  %2403 = zext i8 %2402 to i32
  %2404 = load i8, ptr %2360, align 1, !tbaa !9
  %2405 = zext i8 %2404 to i32
  %2406 = shl nuw i32 %2405, 24
  %2407 = shl nuw nsw i32 %2403, 16
  %2408 = or i32 %2406, %2407
  %2409 = ashr exact i32 %2408, 16
  %2410 = xor i32 %1476, -1
  %2411 = add i32 %2121, %2410
  %2412 = and i32 %2124, %2411
  %2413 = sext i32 %2412 to i64
  %2414 = getelementptr inbounds i8, ptr %1302, i64 %2413
  %2415 = load i8, ptr %2414, align 1, !tbaa !9
  %2416 = zext i8 %2415 to i32
  %2417 = sub i32 %2121, %1476
  %2418 = and i32 %2124, %2417
  %2419 = sext i32 %2418 to i64
  %2420 = getelementptr inbounds i8, ptr %1302, i64 %2419
  %2421 = load i8, ptr %2420, align 1, !tbaa !9
  %2422 = zext i8 %2421 to i32
  %2423 = shl nuw i32 %2422, 24
  %2424 = shl nuw nsw i32 %2416, 16
  %2425 = or i32 %2423, %2424
  %2426 = ashr exact i32 %2425, 16
  %2427 = load i8, ptr %2175, align 1, !tbaa !9
  %2428 = zext i8 %2427 to i32
  %2429 = sub nsw i32 %2401, %2393
  %2430 = mul nsw i32 %2429, 10
  %2431 = sub nsw i32 %2385, %2409
  %2432 = mul nsw i32 %2431, 5
  %2433 = sub i32 %1937, %2428
  %2434 = add i32 %2433, %2430
  %2435 = add i32 %2434, %2426
  %2436 = add i32 %2435, %2432
  %2437 = ashr i32 %2436, 1
  %2438 = load i32, ptr @_ZZ8wavModelR5MixerE4scm8, align 8, !tbaa !74
  %2439 = and i32 %2438, -256
  %2440 = add i32 %2439, -256
  %2441 = and i32 %2440, %2437
  store i32 %2441, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm8, i64 0, i32 1), align 8, !tbaa !112
  br label %2442

2442:                                             ; preds = %897, %1906, %356
  %2443 = load i32, ptr @y, align 4, !tbaa !25
  %2444 = shl i32 %2443, 16
  %2445 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %2446 = load i16, ptr %2445, align 2, !tbaa !31
  %2447 = zext i16 %2446 to i32
  %2448 = or i32 %2444, 64
  %2449 = sub i32 %2448, %2447
  %2450 = lshr i32 %2449, 7
  %2451 = trunc i32 %2450 to i16
  %2452 = add i16 %2446, %2451
  store i16 %2452, ptr %2445, align 2, !tbaa !31
  %2453 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %2454 = load i32, ptr @c0, align 4, !tbaa !25
  %2455 = add nsw i32 %2454, %2453
  %2456 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %2457 = sext i32 %2455 to i64
  %2458 = getelementptr inbounds i16, ptr %2456, i64 %2457
  store ptr %2458, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %2459 = load i16, ptr %2458, align 2, !tbaa !31
  %2460 = lshr i16 %2459, 4
  %2461 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %2462 = zext i16 %2460 to i64
  %2463 = getelementptr inbounds i16, ptr %2461, i64 %2462
  %2464 = load i16, ptr %2463, align 2, !tbaa !31
  %2465 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %2466 = load i32, ptr %2465, align 8, !tbaa !64
  %2467 = add nsw i32 %2466, 1
  %2468 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %2469 = load ptr, ptr %2468, align 8, !tbaa !59
  %2470 = sext i32 %2466 to i64
  %2471 = getelementptr inbounds i16, ptr %2469, i64 %2470
  store i16 %2464, ptr %2471, align 2, !tbaa !31
  %2472 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 2), align 8, !tbaa !114
  %2473 = load i16, ptr %2472, align 2, !tbaa !31
  %2474 = zext i16 %2473 to i32
  %2475 = sub i32 %2448, %2474
  %2476 = lshr i32 %2475, 7
  %2477 = trunc i32 %2476 to i16
  %2478 = add i16 %2473, %2477
  store i16 %2478, ptr %2472, align 2, !tbaa !31
  %2479 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %2480 = add nsw i32 %2479, %2454
  %2481 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %2482 = sext i32 %2480 to i64
  %2483 = getelementptr inbounds i16, ptr %2481, i64 %2482
  store ptr %2483, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 2), align 8, !tbaa !114
  %2484 = load i16, ptr %2483, align 2, !tbaa !31
  %2485 = lshr i16 %2484, 4
  %2486 = zext i16 %2485 to i64
  %2487 = getelementptr inbounds i16, ptr %2461, i64 %2486
  %2488 = load i16, ptr %2487, align 2, !tbaa !31
  %2489 = add nsw i32 %2466, 2
  %2490 = sext i32 %2467 to i64
  %2491 = getelementptr inbounds i16, ptr %2469, i64 %2490
  store i16 %2488, ptr %2491, align 2, !tbaa !31
  %2492 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 2), align 8, !tbaa !114
  %2493 = load i16, ptr %2492, align 2, !tbaa !31
  %2494 = zext i16 %2493 to i32
  %2495 = sub i32 %2448, %2494
  %2496 = lshr i32 %2495, 7
  %2497 = trunc i32 %2496 to i16
  %2498 = add i16 %2493, %2497
  store i16 %2498, ptr %2492, align 2, !tbaa !31
  %2499 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 1), align 8, !tbaa !112
  %2500 = add nsw i32 %2499, %2454
  %2501 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %2502 = sext i32 %2500 to i64
  %2503 = getelementptr inbounds i16, ptr %2501, i64 %2502
  store ptr %2503, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 2), align 8, !tbaa !114
  %2504 = load i16, ptr %2503, align 2, !tbaa !31
  %2505 = lshr i16 %2504, 4
  %2506 = zext i16 %2505 to i64
  %2507 = getelementptr inbounds i16, ptr %2461, i64 %2506
  %2508 = load i16, ptr %2507, align 2, !tbaa !31
  %2509 = add nsw i32 %2466, 3
  %2510 = sext i32 %2489 to i64
  %2511 = getelementptr inbounds i16, ptr %2469, i64 %2510
  store i16 %2508, ptr %2511, align 2, !tbaa !31
  %2512 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm4, i64 0, i32 2), align 8, !tbaa !114
  %2513 = load i16, ptr %2512, align 2, !tbaa !31
  %2514 = zext i16 %2513 to i32
  %2515 = sub i32 %2448, %2514
  %2516 = lshr i32 %2515, 7
  %2517 = trunc i32 %2516 to i16
  %2518 = add i16 %2513, %2517
  store i16 %2518, ptr %2512, align 2, !tbaa !31
  %2519 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm4, i64 0, i32 1), align 8, !tbaa !112
  %2520 = add nsw i32 %2519, %2454
  %2521 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm4, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %2522 = sext i32 %2520 to i64
  %2523 = getelementptr inbounds i16, ptr %2521, i64 %2522
  store ptr %2523, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm4, i64 0, i32 2), align 8, !tbaa !114
  %2524 = load i16, ptr %2523, align 2, !tbaa !31
  %2525 = lshr i16 %2524, 4
  %2526 = zext i16 %2525 to i64
  %2527 = getelementptr inbounds i16, ptr %2461, i64 %2526
  %2528 = load i16, ptr %2527, align 2, !tbaa !31
  %2529 = add nsw i32 %2466, 4
  %2530 = sext i32 %2509 to i64
  %2531 = getelementptr inbounds i16, ptr %2469, i64 %2530
  store i16 %2528, ptr %2531, align 2, !tbaa !31
  %2532 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm5, i64 0, i32 2), align 8, !tbaa !114
  %2533 = load i16, ptr %2532, align 2, !tbaa !31
  %2534 = zext i16 %2533 to i32
  %2535 = sub i32 %2448, %2534
  %2536 = lshr i32 %2535, 7
  %2537 = trunc i32 %2536 to i16
  %2538 = add i16 %2533, %2537
  store i16 %2538, ptr %2532, align 2, !tbaa !31
  %2539 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm5, i64 0, i32 1), align 8, !tbaa !112
  %2540 = add nsw i32 %2539, %2454
  %2541 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm5, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %2542 = sext i32 %2540 to i64
  %2543 = getelementptr inbounds i16, ptr %2541, i64 %2542
  store ptr %2543, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm5, i64 0, i32 2), align 8, !tbaa !114
  %2544 = load i16, ptr %2543, align 2, !tbaa !31
  %2545 = lshr i16 %2544, 4
  %2546 = zext i16 %2545 to i64
  %2547 = getelementptr inbounds i16, ptr %2461, i64 %2546
  %2548 = load i16, ptr %2547, align 2, !tbaa !31
  %2549 = add nsw i32 %2466, 5
  %2550 = sext i32 %2529 to i64
  %2551 = getelementptr inbounds i16, ptr %2469, i64 %2550
  store i16 %2548, ptr %2551, align 2, !tbaa !31
  %2552 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm6, i64 0, i32 2), align 8, !tbaa !114
  %2553 = load i16, ptr %2552, align 2, !tbaa !31
  %2554 = zext i16 %2553 to i32
  %2555 = sub i32 %2448, %2554
  %2556 = lshr i32 %2555, 7
  %2557 = trunc i32 %2556 to i16
  %2558 = add i16 %2553, %2557
  store i16 %2558, ptr %2552, align 2, !tbaa !31
  %2559 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm6, i64 0, i32 1), align 8, !tbaa !112
  %2560 = add nsw i32 %2559, %2454
  %2561 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm6, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %2562 = sext i32 %2560 to i64
  %2563 = getelementptr inbounds i16, ptr %2561, i64 %2562
  store ptr %2563, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm6, i64 0, i32 2), align 8, !tbaa !114
  %2564 = load i16, ptr %2563, align 2, !tbaa !31
  %2565 = lshr i16 %2564, 4
  %2566 = zext i16 %2565 to i64
  %2567 = getelementptr inbounds i16, ptr %2461, i64 %2566
  %2568 = load i16, ptr %2567, align 2, !tbaa !31
  %2569 = add nsw i32 %2466, 6
  %2570 = sext i32 %2549 to i64
  %2571 = getelementptr inbounds i16, ptr %2469, i64 %2570
  store i16 %2568, ptr %2571, align 2, !tbaa !31
  %2572 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm7, i64 0, i32 2), align 8, !tbaa !114
  %2573 = load i16, ptr %2572, align 2, !tbaa !31
  %2574 = zext i16 %2573 to i32
  %2575 = sub i32 %2448, %2574
  %2576 = lshr i32 %2575, 7
  %2577 = trunc i32 %2576 to i16
  %2578 = add i16 %2573, %2577
  store i16 %2578, ptr %2572, align 2, !tbaa !31
  %2579 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm7, i64 0, i32 1), align 8, !tbaa !112
  %2580 = add nsw i32 %2579, %2454
  %2581 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm7, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %2582 = sext i32 %2580 to i64
  %2583 = getelementptr inbounds i16, ptr %2581, i64 %2582
  store ptr %2583, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm7, i64 0, i32 2), align 8, !tbaa !114
  %2584 = load i16, ptr %2583, align 2, !tbaa !31
  %2585 = lshr i16 %2584, 4
  %2586 = zext i16 %2585 to i64
  %2587 = getelementptr inbounds i16, ptr %2461, i64 %2586
  %2588 = load i16, ptr %2587, align 2, !tbaa !31
  %2589 = add nsw i32 %2466, 7
  %2590 = sext i32 %2569 to i64
  %2591 = getelementptr inbounds i16, ptr %2469, i64 %2590
  store i16 %2588, ptr %2591, align 2, !tbaa !31
  %2592 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm8, i64 0, i32 2), align 8, !tbaa !114
  %2593 = load i16, ptr %2592, align 2, !tbaa !31
  %2594 = zext i16 %2593 to i32
  %2595 = sub i32 %2448, %2594
  %2596 = lshr i32 %2595, 7
  %2597 = trunc i32 %2596 to i16
  %2598 = add i16 %2593, %2597
  store i16 %2598, ptr %2592, align 2, !tbaa !31
  %2599 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm8, i64 0, i32 1), align 8, !tbaa !112
  %2600 = add nsw i32 %2599, %2454
  %2601 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm8, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %2602 = sext i32 %2600 to i64
  %2603 = getelementptr inbounds i16, ptr %2601, i64 %2602
  store ptr %2603, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm8, i64 0, i32 2), align 8, !tbaa !114
  %2604 = load i16, ptr %2603, align 2, !tbaa !31
  %2605 = lshr i16 %2604, 4
  %2606 = zext i16 %2605 to i64
  %2607 = getelementptr inbounds i16, ptr %2461, i64 %2606
  %2608 = load i16, ptr %2607, align 2, !tbaa !31
  %2609 = add nsw i32 %2466, 8
  store i32 %2609, ptr %2465, align 8, !tbaa !64
  %2610 = sext i32 %2589 to i64
  %2611 = getelementptr inbounds i16, ptr %2469, i64 %2610
  store i16 %2608, ptr %2611, align 2, !tbaa !31
  %2612 = load i32, ptr @bpos, align 4, !tbaa !25
  %2613 = load i32, ptr @pos, align 4, !tbaa !25
  %2614 = add nsw i32 %2613, -1
  %2615 = load i32, ptr @buf, align 8, !tbaa !20
  %2616 = add nsw i32 %2615, -1
  %2617 = and i32 %2616, %2614
  %2618 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %2619 = sext i32 %2617 to i64
  %2620 = getelementptr inbounds i8, ptr %2618, i64 %2619
  %2621 = load i8, ptr %2620, align 1, !tbaa !9
  %2622 = zext i8 %2621 to i32
  %2623 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8wavModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %2454, i32 noundef %2612, i32 noundef %2622, i32 noundef %2443)
  %2624 = load i32, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !25
  %2625 = shl i32 %2624, 8
  %2626 = load i32, ptr @_ZZ8wavModelR5MixerE4bits, align 4, !tbaa !25
  %2627 = or i32 %2625, %2626
  br label %2628

2628:                                             ; preds = %2442, %355
  %2629 = phi i32 [ 0, %355 ], [ %2627, %2442 ]
  call void @llvm.lifetime.end.p0(i64 19208, ptr nonnull %3) #39
  call void @llvm.lifetime.end.p0(i64 38416, ptr nonnull %2) #39
  ret i32 %2629

2630:                                             ; preds = %149, %147, %145, %143, %141, %139, %137, %135, %133
  %2631 = phi ptr [ @_ZGVZ8wavModelR5MixerE2cm, %149 ], [ @_ZGVZ8wavModelR5MixerE4scm8, %147 ], [ @_ZGVZ8wavModelR5MixerE4scm7, %145 ], [ @_ZGVZ8wavModelR5MixerE4scm6, %143 ], [ @_ZGVZ8wavModelR5MixerE4scm5, %141 ], [ @_ZGVZ8wavModelR5MixerE4scm4, %139 ], [ @_ZGVZ8wavModelR5MixerE4scm3, %137 ], [ @_ZGVZ8wavModelR5MixerE4scm2, %135 ], [ @_ZGVZ8wavModelR5MixerE4scm1, %133 ]
  %2632 = phi { ptr, i32 } [ %150, %149 ], [ %148, %147 ], [ %146, %145 ], [ %144, %143 ], [ %142, %141 ], [ %140, %139 ], [ %138, %137 ], [ %136, %135 ], [ %134, %133 ]
  tail call void @__cxa_guard_abort(ptr nonnull %2631) #39
  call void @llvm.lifetime.end.p0(i64 19208, ptr nonnull %3) #39
  call void @llvm.lifetime.end.p0(i64 38416, ptr nonnull %2) #39
  resume { ptr, i32 } %2632
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_Z1Xii(i32 noundef %0, i32 noundef %1) local_unnamed_addr #17 comdat {
  %3 = load i32, ptr @_ZL5wmode, align 4, !tbaa !25
  switch i32 %3, label %107 [
    i32 18, label %4
    i32 17, label %54
    i32 10, label %77
  ]

4:                                                ; preds = %2
  %5 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %6 = icmp slt i32 %5, %0
  %7 = add i32 %1, %0
  br i1 %6, label %30, label %8

8:                                                ; preds = %4
  %9 = shl i32 %7, 2
  %10 = load i32, ptr @pos, align 4, !tbaa !25
  %11 = sub i32 %10, %9
  %12 = load i32, ptr @buf, align 8, !tbaa !20
  %13 = add nsw i32 %12, -1
  %14 = and i32 %13, %11
  %15 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %16 = sext i32 %14 to i64
  %17 = getelementptr inbounds i8, ptr %15, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !9
  %19 = zext i8 %18 to i32
  %20 = add i32 %11, 1
  %21 = and i32 %13, %20
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, ptr %15, i64 %22
  %24 = load i8, ptr %23, align 1, !tbaa !9
  %25 = zext i8 %24 to i32
  %26 = shl nuw i32 %25, 24
  %27 = shl nuw nsw i32 %19, 16
  %28 = or i32 %26, %27
  %29 = ashr exact i32 %28, 16
  br label %119

30:                                               ; preds = %4
  %31 = sub i32 %5, %7
  %32 = shl i32 %31, 2
  %33 = or i32 %32, 2
  %34 = load i32, ptr @pos, align 4, !tbaa !25
  %35 = add i32 %33, %34
  %36 = load i32, ptr @buf, align 8, !tbaa !20
  %37 = add nsw i32 %36, -1
  %38 = and i32 %37, %35
  %39 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %40 = sext i32 %38 to i64
  %41 = getelementptr inbounds i8, ptr %39, i64 %40
  %42 = load i8, ptr %41, align 1, !tbaa !9
  %43 = zext i8 %42 to i32
  %44 = add i32 %35, 1
  %45 = and i32 %37, %44
  %46 = sext i32 %45 to i64
  %47 = getelementptr inbounds i8, ptr %39, i64 %46
  %48 = load i8, ptr %47, align 1, !tbaa !9
  %49 = zext i8 %48 to i32
  %50 = shl nuw i32 %49, 24
  %51 = shl nuw nsw i32 %43, 16
  %52 = or i32 %50, %51
  %53 = ashr exact i32 %52, 16
  br label %119

54:                                               ; preds = %2
  %55 = add nsw i32 %1, %0
  %56 = shl i32 %55, 1
  %57 = load i32, ptr @pos, align 4, !tbaa !25
  %58 = sub i32 %57, %56
  %59 = load i32, ptr @buf, align 8, !tbaa !20
  %60 = add nsw i32 %59, -1
  %61 = and i32 %60, %58
  %62 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %63 = sext i32 %61 to i64
  %64 = getelementptr inbounds i8, ptr %62, i64 %63
  %65 = load i8, ptr %64, align 1, !tbaa !9
  %66 = zext i8 %65 to i32
  %67 = add i32 %58, 1
  %68 = and i32 %60, %67
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, ptr %62, i64 %69
  %71 = load i8, ptr %70, align 1, !tbaa !9
  %72 = zext i8 %71 to i32
  %73 = shl nuw i32 %72, 24
  %74 = shl nuw nsw i32 %66, 16
  %75 = or i32 %73, %74
  %76 = ashr exact i32 %75, 16
  br label %119

77:                                               ; preds = %2
  %78 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %79 = icmp slt i32 %78, %0
  %80 = add i32 %1, %0
  br i1 %79, label %93, label %81

81:                                               ; preds = %77
  %82 = shl i32 %80, 1
  %83 = load i32, ptr @pos, align 4, !tbaa !25
  %84 = sub nsw i32 %83, %82
  %85 = load i32, ptr @buf, align 8, !tbaa !20
  %86 = add nsw i32 %85, -1
  %87 = and i32 %86, %84
  %88 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %89 = sext i32 %87 to i64
  %90 = getelementptr inbounds i8, ptr %88, i64 %89
  %91 = load i8, ptr %90, align 1, !tbaa !9
  %92 = zext i8 %91 to i32
  br label %119

93:                                               ; preds = %77
  %94 = sub i32 %78, %80
  %95 = shl i32 %94, 1
  %96 = or i32 %95, 1
  %97 = load i32, ptr @pos, align 4, !tbaa !25
  %98 = add i32 %96, %97
  %99 = load i32, ptr @buf, align 8, !tbaa !20
  %100 = add nsw i32 %99, -1
  %101 = and i32 %100, %98
  %102 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %103 = sext i32 %101 to i64
  %104 = getelementptr inbounds i8, ptr %102, i64 %103
  %105 = load i8, ptr %104, align 1, !tbaa !9
  %106 = zext i8 %105 to i32
  br label %119

107:                                              ; preds = %2
  %108 = load i32, ptr @pos, align 4, !tbaa !25
  %109 = add i32 %1, %0
  %110 = sub i32 %108, %109
  %111 = load i32, ptr @buf, align 8, !tbaa !20
  %112 = add nsw i32 %111, -1
  %113 = and i32 %112, %110
  %114 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %115 = sext i32 %113 to i64
  %116 = getelementptr inbounds i8, ptr %114, i64 %115
  %117 = load i8, ptr %116, align 1, !tbaa !9
  %118 = zext i8 %117 to i32
  br label %119

119:                                              ; preds = %107, %93, %81, %54, %30, %8
  %120 = phi i32 [ %29, %8 ], [ %53, %30 ], [ %76, %54 ], [ %92, %81 ], [ %106, %93 ], [ %118, %107 ]
  ret i32 %120
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #22

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare double @sqrt(double noundef) local_unnamed_addr #23

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.floor.f64(double) #22

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local noundef i32 @_Z6execxtii(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 {
  %3 = load i32, ptr @pos, align 4, !tbaa !25
  %4 = sub i32 %3, %0
  %5 = add i32 %4, -2
  %6 = load i32, ptr @buf, align 8, !tbaa !20
  %7 = add nsw i32 %6, -1
  %8 = and i32 %7, %5
  %9 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %10 = sext i32 %8 to i64
  %11 = getelementptr inbounds i8, ptr %9, i64 %10
  %12 = load i8, ptr %11, align 1, !tbaa !9
  %13 = add i32 %4, -3
  %14 = and i32 %7, %13
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, ptr %9, i64 %15
  %17 = load i8, ptr %16, align 1, !tbaa !9
  %18 = xor i32 %0, -1
  %19 = add i32 %3, %18
  %20 = and i32 %7, %19
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, ptr %9, i64 %21
  %23 = load i8, ptr %22, align 1, !tbaa !9
  %24 = icmp eq i32 %0, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %2
  %26 = and i32 %7, %4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, ptr %9, i64 %27
  %29 = load i8, ptr %28, align 1, !tbaa !9
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 12
  %32 = and i32 %31, 815104
  br label %33

33:                                               ; preds = %2, %25
  %34 = phi i32 [ %32, %25 ], [ 0, %2 ]
  %35 = zext i8 %23 to i32
  %36 = icmp eq i8 %12, 102
  %37 = select i1 %36, i32 2, i32 0
  %38 = icmp eq i8 %12, 15
  %39 = zext i1 %38 to i32
  %40 = or i32 %37, %39
  %41 = icmp eq i8 %12, 103
  %42 = select i1 %41, i32 3, i32 0
  %43 = add nuw nsw i32 %40, %42
  %44 = icmp eq i8 %17, 15
  %45 = select i1 %44, i32 4, i32 0
  %46 = add nuw nsw i32 %43, %45
  %47 = icmp eq i8 %17, 102
  %48 = select i1 %47, i32 8, i32 0
  %49 = add nuw nsw i32 %46, %48
  %50 = icmp eq i8 %17, 103
  %51 = select i1 %50, i32 12, i32 0
  %52 = add nuw nsw i32 %49, %51
  %53 = shl nuw nsw i32 %35, 4
  %54 = shl i32 %1, 20
  %55 = or i32 %53, %54
  %56 = or i32 %55, %52
  %57 = or i32 %56, %34
  ret i32 %57
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z8exeModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ8exeModelR5MixerE2cm acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8exeModelR5MixerE2cm) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @level, align 4, !tbaa !25
  %9 = shl i32 65536, %8
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8exeModelR5MixerE2cm, i32 noundef %9, i32 noundef 12)
          to label %10 unwind label %65

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ8exeModelR5MixerE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8exeModelR5MixerE2cm) #39
  br label %12

12:                                               ; preds = %10, %4, %1
  %13 = load i32, ptr @bpos, align 4, !tbaa !25
  %14 = icmp eq i32 %13, 0
  %15 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  br i1 %14, label %16, label %140

16:                                               ; preds = %12
  %17 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8exeModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %18 = load i32, ptr @buf, align 8, !tbaa !20
  %19 = add nsw i32 %18, -1
  %20 = load i32, ptr @pos, align 4, !tbaa !25
  %21 = add i32 %20, -3
  %22 = and i32 %19, %21
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, ptr %15, i64 %23
  %25 = load i8, ptr %24, align 1, !tbaa !9
  %26 = add i32 %20, -2
  %27 = and i32 %19, %26
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, ptr %15, i64 %28
  %30 = load i8, ptr %29, align 1, !tbaa !9
  %31 = add i32 %20, -1
  %32 = and i32 %19, %31
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, ptr %15, i64 %33
  %35 = load i8, ptr %34, align 1, !tbaa !9
  %36 = zext i8 %35 to i32
  %37 = icmp eq i8 %30, 102
  %38 = select i1 %37, i32 2, i32 0
  %39 = icmp eq i8 %30, 15
  %40 = zext i1 %39 to i32
  %41 = or i32 %38, %40
  %42 = icmp eq i8 %30, 103
  %43 = select i1 %42, i32 3, i32 0
  %44 = add nuw nsw i32 %41, %43
  %45 = icmp eq i8 %25, 15
  %46 = select i1 %45, i32 4, i32 0
  %47 = add nuw nsw i32 %44, %46
  %48 = icmp eq i8 %25, 102
  %49 = select i1 %48, i32 8, i32 0
  %50 = add nuw nsw i32 %47, %49
  %51 = icmp eq i8 %25, 103
  %52 = select i1 %51, i32 12, i32 0
  %53 = add nuw nsw i32 %50, %52
  %54 = shl nuw nsw i32 %36, 4
  %55 = or i32 %53, %54
  %56 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8exeModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %57 = add nsw i32 %56, 1
  store i32 %57, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8exeModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %58 = mul i32 %55, 987654323
  %59 = add i32 %58, %56
  %60 = tail call i32 @llvm.fshl.i32(i32 %59, i32 %59, i32 16)
  %61 = mul i32 %60, 123456791
  %62 = add i32 %61, %56
  %63 = sext i32 %56 to i64
  %64 = getelementptr inbounds i32, ptr %17, i64 %63
  store i32 %62, ptr %64, align 4, !tbaa !25
  br label %67

65:                                               ; preds = %7
  %66 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ8exeModelR5MixerE2cm) #39
  resume { ptr, i32 } %66

67:                                               ; preds = %16, %67
  %68 = phi i32 [ 1, %16 ], [ %136, %67 ]
  %69 = load i32, ptr @pos, align 4, !tbaa !25
  %70 = add nsw i32 %69, -1
  %71 = load i32, ptr @buf, align 8, !tbaa !20
  %72 = add nsw i32 %71, -1
  %73 = and i32 %72, %70
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, ptr %15, i64 %74
  %76 = load i8, ptr %75, align 1, !tbaa !9
  %77 = zext i8 %76 to i32
  %78 = icmp ugt i32 %68, 4
  %79 = shl nuw nsw i32 %77, 20
  %80 = sub i32 %69, %68
  %81 = add i32 %80, -2
  %82 = and i32 %72, %81
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i8, ptr %15, i64 %83
  %85 = load i8, ptr %84, align 1, !tbaa !9
  %86 = add i32 %80, -3
  %87 = and i32 %72, %86
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i8, ptr %15, i64 %88
  %90 = load i8, ptr %89, align 1, !tbaa !9
  %91 = xor i32 %68, -1
  %92 = add i32 %69, %91
  %93 = and i32 %72, %92
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i8, ptr %15, i64 %94
  %96 = load i8, ptr %95, align 1, !tbaa !9
  %97 = and i32 %72, %80
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i8, ptr %15, i64 %98
  %100 = load i8, ptr %99, align 1, !tbaa !9
  %101 = zext i8 %100 to i32
  %102 = shl nuw nsw i32 %101, 12
  %103 = and i32 %102, 815104
  %104 = zext i8 %96 to i32
  %105 = icmp eq i8 %85, 102
  %106 = select i1 %105, i32 2, i32 0
  %107 = icmp eq i8 %85, 15
  %108 = zext i1 %107 to i32
  %109 = or i32 %106, %108
  %110 = icmp eq i8 %85, 103
  %111 = select i1 %110, i32 3, i32 0
  %112 = add nuw nsw i32 %109, %111
  %113 = icmp eq i8 %90, 15
  %114 = select i1 %113, i32 4, i32 0
  %115 = add nuw nsw i32 %112, %114
  %116 = icmp eq i8 %90, 102
  %117 = select i1 %116, i32 8, i32 0
  %118 = add nuw nsw i32 %115, %117
  %119 = icmp eq i8 %90, 103
  %120 = select i1 %119, i32 12, i32 0
  %121 = add nuw nsw i32 %118, %120
  %122 = shl nuw nsw i32 %104, 4
  %123 = select i1 %78, i32 %79, i32 0
  %124 = or i32 %122, %123
  %125 = or i32 %121, %124
  %126 = or i32 %125, %103
  %127 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8exeModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %128 = add nsw i32 %127, 1
  store i32 %128, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8exeModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %129 = mul i32 %126, 987654323
  %130 = add i32 %129, %127
  %131 = tail call i32 @llvm.fshl.i32(i32 %130, i32 %130, i32 16)
  %132 = mul i32 %131, 123456791
  %133 = add i32 %132, %127
  %134 = sext i32 %127 to i64
  %135 = getelementptr inbounds i32, ptr %17, i64 %134
  store i32 %133, ptr %135, align 4, !tbaa !25
  %136 = add nuw nsw i32 %68, 1
  %137 = icmp eq i32 %136, 12
  br i1 %137, label %138, label %67, !llvm.loop !205

138:                                              ; preds = %67
  %139 = load i32, ptr @bpos, align 4, !tbaa !25
  br label %140

140:                                              ; preds = %12, %138
  %141 = phi i32 [ %139, %138 ], [ %13, %12 ]
  %142 = load i32, ptr @c0, align 4, !tbaa !25
  %143 = load i32, ptr @pos, align 4, !tbaa !25
  %144 = add nsw i32 %143, -1
  %145 = load i32, ptr @buf, align 8, !tbaa !20
  %146 = add nsw i32 %145, -1
  %147 = and i32 %146, %144
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, ptr %15, i64 %148
  %150 = load i8, ptr %149, align 1, !tbaa !9
  %151 = zext i8 %150 to i32
  %152 = load i32, ptr @y, align 4, !tbaa !25
  %153 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8exeModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %142, i32 noundef %141, i32 noundef %151, i32 noundef %152)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z13indirectModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ13indirectModelR5MixerE2cm acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13indirectModelR5MixerE2cm) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @level, align 4, !tbaa !25
  %9 = shl i32 65536, %8
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13indirectModelR5MixerE2cm, i32 noundef %9, i32 noundef 6)
          to label %10 unwind label %105

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ13indirectModelR5MixerE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13indirectModelR5MixerE2cm) #39
  br label %12

12:                                               ; preds = %10, %4, %1
  %13 = load i32, ptr @bpos, align 4, !tbaa !25
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %107

15:                                               ; preds = %12
  %16 = load i32, ptr @c4, align 4, !tbaa !25
  %17 = and i32 %16, 65535
  %18 = and i32 %16, 255
  %19 = lshr i32 %17, 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds [256 x i32], ptr @_ZZ13indirectModelR5MixerE2t1, i64 0, i64 %20
  %22 = load i32, ptr %21, align 4, !tbaa !25
  %23 = shl i32 %22, 8
  %24 = or i32 %23, %18
  store i32 %24, ptr %21, align 4, !tbaa !25
  %25 = lshr i32 %16, 8
  %26 = and i32 %25, 65535
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [65536 x i16], ptr @_ZZ13indirectModelR5MixerE2t2, i64 0, i64 %27
  %29 = load i16, ptr %28, align 2, !tbaa !31
  %30 = zext i16 %29 to i32
  %31 = shl nuw nsw i32 %30, 8
  %32 = or i32 %31, %18
  %33 = trunc i32 %32 to i16
  store i16 %33, ptr %28, align 2, !tbaa !31
  %34 = zext i32 %18 to i64
  %35 = getelementptr inbounds [256 x i32], ptr @_ZZ13indirectModelR5MixerE2t1, i64 0, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !25
  %37 = shl i32 %36, 8
  %38 = or i32 %37, %18
  %39 = and i32 %38, 65535
  %40 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %41 = add nsw i32 %40, 1
  store i32 %41, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %42 = mul i32 %39, 987654323
  %43 = add i32 %42, %40
  %44 = tail call i32 @llvm.fshl.i32(i32 %43, i32 %43, i32 16)
  %45 = mul i32 %44, 123456791
  %46 = add i32 %45, %40
  %47 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %48 = sext i32 %40 to i64
  %49 = getelementptr inbounds i32, ptr %47, i64 %48
  store i32 %46, ptr %49, align 4, !tbaa !25
  %50 = and i32 %38, 16777215
  %51 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %52 = add nsw i32 %51, 1
  store i32 %52, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %53 = mul i32 %50, 987654323
  %54 = add i32 %51, %53
  %55 = tail call i32 @llvm.fshl.i32(i32 %54, i32 %54, i32 16)
  %56 = mul i32 %55, 123456791
  %57 = add i32 %56, %51
  %58 = sext i32 %51 to i64
  %59 = getelementptr inbounds i32, ptr %47, i64 %58
  store i32 %57, ptr %59, align 4, !tbaa !25
  %60 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %61 = add nsw i32 %60, 1
  store i32 %61, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %62 = mul i32 %38, 987654323
  %63 = add i32 %60, %62
  %64 = tail call i32 @llvm.fshl.i32(i32 %63, i32 %63, i32 16)
  %65 = mul i32 %64, 123456791
  %66 = add i32 %65, %60
  %67 = sext i32 %60 to i64
  %68 = getelementptr inbounds i32, ptr %47, i64 %67
  store i32 %66, ptr %68, align 4, !tbaa !25
  %69 = and i32 %37, 65280
  %70 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %71 = add nsw i32 %70, 1
  store i32 %71, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %72 = mul i32 %69, 987654323
  %73 = add i32 %70, %72
  %74 = tail call i32 @llvm.fshl.i32(i32 %73, i32 %73, i32 16)
  %75 = mul i32 %74, 123456791
  %76 = add i32 %75, %70
  %77 = sext i32 %70 to i64
  %78 = getelementptr inbounds i32, ptr %47, i64 %77
  store i32 %76, ptr %78, align 4, !tbaa !25
  %79 = zext i32 %17 to i64
  %80 = getelementptr inbounds [65536 x i16], ptr @_ZZ13indirectModelR5MixerE2t2, i64 0, i64 %79
  %81 = load i16, ptr %80, align 2, !tbaa !31
  %82 = zext i16 %81 to i32
  %83 = shl nuw i32 %82, 16
  %84 = or i32 %83, %17
  %85 = and i32 %84, 16777215
  %86 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %87 = add nsw i32 %86, 1
  store i32 %87, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %88 = mul i32 %85, 987654323
  %89 = add i32 %88, %86
  %90 = tail call i32 @llvm.fshl.i32(i32 %89, i32 %89, i32 16)
  %91 = mul i32 %90, 123456791
  %92 = add i32 %91, %86
  %93 = sext i32 %86 to i64
  %94 = getelementptr inbounds i32, ptr %47, i64 %93
  store i32 %92, ptr %94, align 4, !tbaa !25
  %95 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %96 = add nsw i32 %95, 1
  store i32 %96, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %97 = mul i32 %84, 987654323
  %98 = add i32 %95, %97
  %99 = tail call i32 @llvm.fshl.i32(i32 %98, i32 %98, i32 16)
  %100 = mul i32 %99, 123456791
  %101 = add i32 %100, %95
  %102 = sext i32 %95 to i64
  %103 = getelementptr inbounds i32, ptr %47, i64 %102
  store i32 %101, ptr %103, align 4, !tbaa !25
  %104 = load i32, ptr @bpos, align 4, !tbaa !25
  br label %107

105:                                              ; preds = %7
  %106 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ13indirectModelR5MixerE2cm) #39
  resume { ptr, i32 } %106

107:                                              ; preds = %15, %12
  %108 = phi i32 [ %104, %15 ], [ %13, %12 ]
  %109 = load i32, ptr @c0, align 4, !tbaa !25
  %110 = load i32, ptr @pos, align 4, !tbaa !25
  %111 = add nsw i32 %110, -1
  %112 = load i32, ptr @buf, align 8, !tbaa !20
  %113 = add nsw i32 %112, -1
  %114 = and i32 %113, %111
  %115 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %116 = sext i32 %114 to i64
  %117 = getelementptr inbounds i8, ptr %115, i64 %116
  %118 = load i8, ptr %117, align 1, !tbaa !9
  %119 = zext i8 %118 to i32
  %120 = load i32, ptr @y, align 4, !tbaa !25
  %121 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13indirectModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %109, i32 noundef %108, i32 noundef %119, i32 noundef %120)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z8dmcModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ8dmcModelR5MixerE1t acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8dmcModelR5MixerE1t) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @level, align 4, !tbaa !25
  %9 = shl i32 131072, %8
  invoke void @_ZN5ArrayI7DMCNodeLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ8dmcModelR5MixerE1t, i32 noundef %9)
          to label %10 unwind label %121

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayI7DMCNodeLi0EED2Ev, ptr nonnull @_ZZ8dmcModelR5MixerE1t, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8dmcModelR5MixerE1t) #39
  br label %12

12:                                               ; preds = %10, %4, %1
  %13 = load atomic i8, ptr @_ZGVZ8dmcModelR5MixerE2sm acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %21, !prof !110

15:                                               ; preds = %12
  %16 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8dmcModelR5MixerE2sm) #39
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ8dmcModelR5MixerE2sm, i32 noundef 256)
          to label %19 unwind label %123

19:                                               ; preds = %18
  %20 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN8StateMapD2Ev, ptr nonnull @_ZZ8dmcModelR5MixerE2sm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8dmcModelR5MixerE2sm) #39
  br label %21

21:                                               ; preds = %19, %15, %12
  %22 = load i32, ptr @_ZZ8dmcModelR5MixerE3top, align 4, !tbaa !25
  %23 = icmp sgt i32 %22, 0
  %24 = load i32, ptr @_ZZ8dmcModelR5MixerE1t, align 8
  %25 = icmp slt i32 %22, %24
  %26 = select i1 %23, i1 %25, i1 false
  br i1 %26, label %27, label %127

27:                                               ; preds = %21
  %28 = load i32, ptr @_ZZ8dmcModelR5MixerE4curr, align 4, !tbaa !25
  %29 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %30 = sext i32 %28 to i64
  %31 = getelementptr inbounds %struct.DMCNode, ptr %29, i64 %30
  %32 = load i32, ptr @y, align 4, !tbaa !25
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [2 x i32], ptr %31, i64 0, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !25
  %36 = icmp eq i32 %32, 0
  %37 = getelementptr inbounds %struct.DMCNode, ptr %29, i64 %30, i32 2
  %38 = load i24, ptr %37, align 1
  %39 = and i24 %38, 4095
  %40 = lshr i24 %38, 12
  %41 = select i1 %36, i24 %39, i24 %40
  %42 = zext i24 %41 to i32
  %43 = sext i32 %35 to i64
  %44 = getelementptr inbounds %struct.DMCNode, ptr %29, i64 %43, i32 2
  %45 = load i24, ptr %44, align 1
  %46 = and i24 %45, 4095
  %47 = lshr i24 %45, 12
  %48 = add nuw nsw i24 %46, %47
  %49 = zext i24 %48 to i32
  %50 = load i32, ptr @_ZZ8dmcModelR5MixerE9threshold, align 4, !tbaa !25
  %51 = shl nuw nsw i32 %50, 1
  %52 = icmp sgt i32 %51, %42
  br i1 %52, label %127, label %53

53:                                               ; preds = %27
  %54 = sub nsw i32 %49, %42
  %55 = mul nuw nsw i32 %50, 3
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %127, label %57

57:                                               ; preds = %53
  %58 = shl nuw nsw i32 %42, 12
  %59 = udiv i32 %58, %49
  %60 = zext i24 %46 to i32
  %61 = mul nsw i32 %59, %60
  %62 = zext i32 %22 to i64
  %63 = getelementptr inbounds %struct.DMCNode, ptr %29, i64 %62, i32 2
  %64 = trunc i32 %61 to i24
  %65 = lshr i24 %64, 12
  %66 = load i24, ptr %63, align 1
  %67 = and i24 %66, -4096
  %68 = or i24 %65, %67
  store i24 %68, ptr %63, align 1
  %69 = zext i24 %65 to i32
  %70 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %71 = getelementptr inbounds %struct.DMCNode, ptr %70, i64 %43, i32 2
  %72 = load i24, ptr %71, align 1
  %73 = zext i24 %72 to i32
  %74 = sub nsw i32 %73, %69
  %75 = trunc i32 %74 to i24
  %76 = and i24 %75, 4095
  %77 = and i24 %72, -4096
  %78 = or i24 %76, %77
  store i24 %78, ptr %71, align 1
  %79 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %80 = getelementptr inbounds %struct.DMCNode, ptr %79, i64 %43, i32 2
  %81 = load i24, ptr %80, align 1
  %82 = lshr i24 %81, 12
  %83 = zext i24 %82 to i32
  %84 = mul nsw i32 %59, %83
  %85 = getelementptr inbounds %struct.DMCNode, ptr %79, i64 %62, i32 2
  %86 = trunc i32 %84 to i24
  %87 = lshr i32 %84, 12
  %88 = load i24, ptr %85, align 1
  %89 = and i24 %86, -4096
  %90 = and i24 %88, 4095
  %91 = or i24 %89, %90
  store i24 %91, ptr %85, align 1
  %92 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %93 = getelementptr inbounds %struct.DMCNode, ptr %92, i64 %43, i32 2
  %94 = load i24, ptr %93, align 1
  %95 = lshr i24 %94, 12
  %96 = zext i24 %95 to i32
  %97 = sub nsw i32 %96, %87
  %98 = trunc i32 %97 to i24
  %99 = shl i24 %98, 12
  %100 = and i24 %94, 4095
  %101 = or i24 %99, %100
  store i24 %101, ptr %93, align 1
  %102 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %103 = getelementptr inbounds %struct.DMCNode, ptr %102, i64 %43
  %104 = getelementptr inbounds %struct.DMCNode, ptr %102, i64 %62
  %105 = load <2 x i32>, ptr %103, align 4, !tbaa !25
  store <2 x i32> %105, ptr %104, align 4, !tbaa !25
  %106 = getelementptr inbounds %struct.DMCNode, ptr %102, i64 %43, i32 1
  %107 = load i8, ptr %106, align 4, !tbaa !208
  %108 = getelementptr inbounds %struct.DMCNode, ptr %102, i64 %62, i32 1
  store i8 %107, ptr %108, align 4, !tbaa !208
  %109 = getelementptr inbounds %struct.DMCNode, ptr %102, i64 %30
  %110 = load i32, ptr @y, align 4, !tbaa !25
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [2 x i32], ptr %109, i64 0, i64 %111
  store i32 %22, ptr %112, align 4, !tbaa !25
  %113 = add nuw nsw i32 %22, 1
  store i32 %113, ptr @_ZZ8dmcModelR5MixerE3top, align 4, !tbaa !25
  %114 = load i32, ptr @level, align 4, !tbaa !25
  %115 = shl i32 131072, %114
  %116 = icmp eq i32 %113, %115
  %117 = shl i32 65536, %114
  %118 = mul nsw i32 %117, 3
  %119 = icmp eq i32 %113, %118
  %120 = or i1 %116, %119
  br i1 %120, label %125, label %127

121:                                              ; preds = %7
  %122 = landingpad { ptr, i32 }
          cleanup
  br label %285

123:                                              ; preds = %18
  %124 = landingpad { ptr, i32 }
          cleanup
  br label %285

125:                                              ; preds = %57
  %126 = select i1 %119, i32 768, i32 512
  store i32 %126, ptr @_ZZ8dmcModelR5MixerE9threshold, align 4, !tbaa !25
  br label %127

127:                                              ; preds = %125, %57, %27, %53, %21
  %128 = phi i32 [ %113, %125 ], [ %113, %57 ], [ %22, %27 ], [ %22, %53 ], [ %22, %21 ]
  %129 = load i32, ptr @_ZZ8dmcModelR5MixerE1t, align 8, !tbaa !210
  %130 = icmp eq i32 %128, %129
  %131 = load i32, ptr @bpos, align 4
  %132 = icmp eq i32 %131, 1
  %133 = select i1 %130, i1 %132, i1 false
  br i1 %133, label %134, label %135

134:                                              ; preds = %127
  store i32 0, ptr @_ZZ8dmcModelR5MixerE3top, align 4, !tbaa !25
  br label %137

135:                                              ; preds = %127
  %136 = icmp eq i32 %128, 0
  br i1 %136, label %137, label %193

137:                                              ; preds = %135, %134
  br label %138

138:                                              ; preds = %137, %172
  %139 = phi i64 [ %173, %172 ], [ 0, %137 ]
  %140 = icmp ult i64 %139, 127
  %141 = shl nuw nsw i64 %139, 1
  br i1 %140, label %148, label %142

142:                                              ; preds = %138
  %143 = shl i64 %139, 8
  %144 = trunc i64 %143 to i32
  %145 = add i32 %144, -32512
  %146 = trunc i64 %143 to i32
  %147 = add i32 %146, 256
  br label %175

148:                                              ; preds = %138, %148
  %149 = phi i64 [ %169, %148 ], [ 0, %138 ]
  %150 = shl nuw nsw i64 %149, 8
  %151 = add nuw nsw i64 %150, %141
  %152 = add nuw nsw i64 %150, %139
  %153 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %154 = getelementptr inbounds %struct.DMCNode, ptr %153, i64 %152
  %155 = trunc i64 %151 to i32
  %156 = or i32 %155, 1
  store i32 %156, ptr %154, align 4, !tbaa !25
  %157 = getelementptr inbounds [2 x i32], ptr %154, i64 0, i64 1
  %158 = trunc i64 %151 to i32
  %159 = add i32 %158, 2
  store i32 %159, ptr %157, align 4, !tbaa !25
  %160 = getelementptr inbounds %struct.DMCNode, ptr %153, i64 %152, i32 2
  %161 = load i24, ptr %160, align 1
  %162 = and i24 %161, -4096
  %163 = or i24 %162, 128
  store i24 %163, ptr %160, align 1
  %164 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %165 = getelementptr inbounds %struct.DMCNode, ptr %164, i64 %152, i32 2
  %166 = load i24, ptr %165, align 1
  %167 = and i24 %166, 4095
  %168 = or i24 %167, 524288
  store i24 %168, ptr %165, align 1
  %169 = add nuw nsw i64 %149, 1
  %170 = icmp eq i64 %169, 256
  br i1 %170, label %172, label %148, !llvm.loop !211

171:                                              ; preds = %172
  store i32 65536, ptr @_ZZ8dmcModelR5MixerE3top, align 4, !tbaa !25
  store i32 0, ptr @_ZZ8dmcModelR5MixerE4curr, align 4, !tbaa !25
  store i32 256, ptr @_ZZ8dmcModelR5MixerE9threshold, align 4, !tbaa !25
  br label %193

172:                                              ; preds = %175, %148
  %173 = add nuw nsw i64 %139, 1
  %174 = icmp eq i64 %173, 256
  br i1 %174, label %171, label %138, !llvm.loop !212

175:                                              ; preds = %142, %175
  %176 = phi i64 [ 0, %142 ], [ %191, %175 ]
  %177 = shl nuw nsw i64 %176, 8
  %178 = add nuw nsw i64 %177, %139
  %179 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %180 = getelementptr inbounds %struct.DMCNode, ptr %179, i64 %178
  store i32 %145, ptr %180, align 4, !tbaa !25
  %181 = getelementptr inbounds [2 x i32], ptr %180, i64 0, i64 1
  store i32 %147, ptr %181, align 4, !tbaa !25
  %182 = getelementptr inbounds %struct.DMCNode, ptr %179, i64 %178, i32 2
  %183 = load i24, ptr %182, align 1
  %184 = and i24 %183, -4096
  %185 = or i24 %184, 128
  store i24 %185, ptr %182, align 1
  %186 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %187 = getelementptr inbounds %struct.DMCNode, ptr %186, i64 %178, i32 2
  %188 = load i24, ptr %187, align 1
  %189 = and i24 %188, 4095
  %190 = or i24 %189, 524288
  store i24 %190, ptr %187, align 1
  %191 = add nuw nsw i64 %176, 1
  %192 = icmp eq i64 %191, 256
  br i1 %192, label %172, label %175, !llvm.loop !211

193:                                              ; preds = %171, %135
  %194 = load i32, ptr @y, align 4, !tbaa !25
  %195 = icmp eq i32 %194, 0
  %196 = load i32, ptr @_ZZ8dmcModelR5MixerE4curr, align 4, !tbaa !25
  %197 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %198 = sext i32 %196 to i64
  %199 = getelementptr inbounds %struct.DMCNode, ptr %197, i64 %198, i32 2
  %200 = load i24, ptr %199, align 1
  br i1 %195, label %206, label %201

201:                                              ; preds = %193
  %202 = icmp ult i24 %200, -1212416
  br i1 %202, label %203, label %217

203:                                              ; preds = %201
  %204 = and i24 %200, -4096
  %205 = add nuw i24 %204, 1048576
  br label %212

206:                                              ; preds = %193
  %207 = and i24 %200, 4088
  %208 = icmp ult i24 %207, 3800
  br i1 %208, label %209, label %217

209:                                              ; preds = %206
  %210 = add i24 %200, 256
  %211 = and i24 %210, 4095
  br label %212

212:                                              ; preds = %203, %209
  %213 = phi i24 [ -4096, %209 ], [ 4095, %203 ]
  %214 = phi i24 [ %211, %209 ], [ %205, %203 ]
  %215 = and i24 %200, %213
  %216 = or i24 %214, %215
  store i24 %216, ptr %199, align 1
  br label %217

217:                                              ; preds = %212, %206, %201
  %218 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !206
  %219 = getelementptr inbounds %struct.DMCNode, ptr %218, i64 %198
  %220 = getelementptr inbounds %struct.DMCNode, ptr %218, i64 %198, i32 1
  %221 = load i8, ptr %220, align 4, !tbaa !208
  %222 = zext i8 %221 to i64
  %223 = load i32, ptr @y, align 4, !tbaa !25
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %222, i64 %224
  %226 = load i8, ptr %225, align 1, !tbaa !9
  store i8 %226, ptr %220, align 4, !tbaa !208
  %227 = getelementptr inbounds [2 x i32], ptr %219, i64 0, i64 %224
  %228 = load i32, ptr %227, align 4, !tbaa !25
  store i32 %228, ptr @_ZZ8dmcModelR5MixerE4curr, align 4, !tbaa !25
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds %struct.DMCNode, ptr %218, i64 %229, i32 1
  %231 = load i8, ptr %230, align 4, !tbaa !208
  %232 = zext i8 %231 to i32
  %233 = load i32, ptr getelementptr inbounds (%class.StateMap, ptr @_ZZ8dmcModelR5MixerE2sm, i64 0, i32 1), align 4, !tbaa !82
  %234 = load ptr, ptr getelementptr inbounds (%class.StateMap, ptr @_ZZ8dmcModelR5MixerE2sm, i64 0, i32 2, i32 3), align 8, !tbaa !84
  %235 = sext i32 %233 to i64
  %236 = getelementptr inbounds i32, ptr %234, i64 %235
  %237 = load i32, ptr %236, align 4, !tbaa !25
  %238 = and i32 %237, 1023
  %239 = icmp eq i32 %238, 1023
  %240 = add i32 %237, 1
  %241 = or i32 %237, 1023
  %242 = select i1 %239, i32 %241, i32 %240
  %243 = lshr i32 %237, 10
  %244 = shl i32 %223, 22
  %245 = sub nsw i32 %244, %243
  %246 = ashr i32 %245, 3
  %247 = zext i32 %238 to i64
  %248 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %247
  %249 = load i32, ptr %248, align 4, !tbaa !25
  %250 = mul nsw i32 %246, %249
  %251 = and i32 %250, -1024
  %252 = add i32 %251, %242
  store i32 %252, ptr %236, align 4, !tbaa !25
  store i32 %232, ptr getelementptr inbounds (%class.StateMap, ptr @_ZZ8dmcModelR5MixerE2sm, i64 0, i32 1), align 4, !tbaa !82
  %253 = zext i8 %231 to i64
  %254 = getelementptr inbounds i32, ptr %234, i64 %253
  %255 = load i32, ptr %254, align 4, !tbaa !25
  %256 = lshr i32 %255, 20
  %257 = getelementptr inbounds %struct.DMCNode, ptr %218, i64 %229, i32 2
  %258 = load i24, ptr %257, align 1
  %259 = lshr i24 %258, 12
  %260 = and i24 %258, 4095
  %261 = and i24 %258, -4096
  %262 = zext i24 %261 to i32
  %263 = add nuw nsw i32 %262, 20480
  %264 = add nuw nsw i24 %259, 10
  %265 = add nuw nsw i24 %264, %260
  %266 = zext i24 %265 to i32
  %267 = udiv i32 %263, %266
  %268 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %269 = zext i32 %256 to i64
  %270 = getelementptr inbounds i16, ptr %268, i64 %269
  %271 = load i16, ptr %270, align 2, !tbaa !31
  %272 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %273 = load i32, ptr %272, align 8, !tbaa !64
  %274 = add nsw i32 %273, 1
  %275 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %276 = load ptr, ptr %275, align 8, !tbaa !59
  %277 = sext i32 %273 to i64
  %278 = getelementptr inbounds i16, ptr %276, i64 %277
  store i16 %271, ptr %278, align 2, !tbaa !31
  %279 = zext i32 %267 to i64
  %280 = getelementptr inbounds i16, ptr %268, i64 %279
  %281 = load i16, ptr %280, align 2, !tbaa !31
  %282 = add nsw i32 %273, 2
  store i32 %282, ptr %272, align 8, !tbaa !64
  %283 = sext i32 %274 to i64
  %284 = getelementptr inbounds i16, ptr %276, i64 %283
  store i16 %281, ptr %284, align 2, !tbaa !31
  ret void

285:                                              ; preds = %123, %121
  %286 = phi ptr [ @_ZGVZ8dmcModelR5MixerE2sm, %123 ], [ @_ZGVZ8dmcModelR5MixerE1t, %121 ]
  %287 = phi { ptr, i32 } [ %124, %123 ], [ %122, %121 ]
  tail call void @__cxa_guard_abort(ptr nonnull %286) #39
  resume { ptr, i32 } %287
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5ArrayI7DMCNodeLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.9, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !213
  store i32 %1, ptr %0, align 8, !tbaa !210
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array.9, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = mul i32 %1, 12
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #41
  %17 = getelementptr inbounds %class.Array.9, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !214
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %20, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array.9, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !206
  br label %23

23:                                               ; preds = %5, %21
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayI7DMCNodeLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !210
  %3 = mul i32 %2, -12
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %5 = add nsw i32 %4, %3
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array.9, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !214
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z13contextModel2v() local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %1 = load atomic i8, ptr @_ZGVZ13contextModel2vE2cm acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %11, !prof !110

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE2cm) #39
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = load i32, ptr @level, align 4, !tbaa !25
  %8 = shl i32 2097152, %7
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13contextModel2vE2cm, i32 noundef %8, i32 noundef 9)
          to label %9 unwind label %71

9:                                                ; preds = %6
  %10 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ13contextModel2vE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE2cm) #39
  br label %11

11:                                               ; preds = %9, %3, %0
  %12 = load atomic i8, ptr @_ZGVZ13contextModel2vE4rcm7 acquire, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %22, !prof !110

14:                                               ; preds = %11
  %15 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE4rcm7) #39
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = load i32, ptr @level, align 4, !tbaa !25
  %19 = shl i32 65536, %18
  invoke void @_ZN13RunContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ13contextModel2vE4rcm7, i32 noundef %19)
          to label %20 unwind label %73

20:                                               ; preds = %17
  %21 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN13RunContextMapD2Ev, ptr nonnull @_ZZ13contextModel2vE4rcm7, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE4rcm7) #39
  br label %22

22:                                               ; preds = %20, %14, %11
  %23 = load atomic i8, ptr @_ZGVZ13contextModel2vE4rcm9 acquire, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %33, !prof !110

25:                                               ; preds = %22
  %26 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE4rcm9) #39
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  %29 = load i32, ptr @level, align 4, !tbaa !25
  %30 = shl i32 65536, %29
  invoke void @_ZN13RunContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ13contextModel2vE4rcm9, i32 noundef %30)
          to label %31 unwind label %75

31:                                               ; preds = %28
  %32 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN13RunContextMapD2Ev, ptr nonnull @_ZZ13contextModel2vE4rcm9, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE4rcm9) #39
  br label %33

33:                                               ; preds = %31, %25, %22
  %34 = load atomic i8, ptr @_ZGVZ13contextModel2vE5rcm10 acquire, align 8
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %44, !prof !110

36:                                               ; preds = %33
  %37 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE5rcm10) #39
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %36
  %40 = load i32, ptr @level, align 4, !tbaa !25
  %41 = shl i32 65536, %40
  invoke void @_ZN13RunContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ13contextModel2vE5rcm10, i32 noundef %41)
          to label %42 unwind label %77

42:                                               ; preds = %39
  %43 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN13RunContextMapD2Ev, ptr nonnull @_ZZ13contextModel2vE5rcm10, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE5rcm10) #39
  br label %44

44:                                               ; preds = %42, %36, %33
  %45 = load atomic i8, ptr @_ZGVZ13contextModel2vE1m acquire, align 8
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %53, !prof !110

47:                                               ; preds = %44
  %48 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE1m) #39
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %47
  invoke void @_ZN5MixerC2Eiiii(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m, i32 noundef 800, i32 noundef 3088, i32 noundef 7, i32 noundef 128)
          to label %51 unwind label %79

51:                                               ; preds = %50
  %52 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5MixerD2Ev, ptr nonnull @_ZZ13contextModel2vE1m, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE1m) #39
  br label %53

53:                                               ; preds = %51, %47, %44
  %54 = load i32, ptr @bpos, align 4, !tbaa !25
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %122

56:                                               ; preds = %53
  %57 = load i32, ptr @_ZZ13contextModel2vE4size, align 4, !tbaa !25
  %58 = add nsw i32 %57, -1
  store i32 %58, ptr @_ZZ13contextModel2vE4size, align 4, !tbaa !25
  %59 = icmp eq i32 %57, 0
  br i1 %59, label %60, label %81

60:                                               ; preds = %56
  %61 = load i32, ptr @pos, align 4, !tbaa !25
  %62 = add nsw i32 %61, -1
  %63 = load i32, ptr @buf, align 8, !tbaa !20
  %64 = add nsw i32 %63, -1
  %65 = and i32 %64, %62
  %66 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %67 = sext i32 %65 to i64
  %68 = getelementptr inbounds i8, ptr %66, i64 %67
  %69 = load i8, ptr %68, align 1, !tbaa !9
  %70 = zext i8 %69 to i32
  store i32 %70, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !215
  br label %122

71:                                               ; preds = %6
  %72 = landingpad { ptr, i32 }
          cleanup
  br label %850

73:                                               ; preds = %17
  %74 = landingpad { ptr, i32 }
          cleanup
  br label %850

75:                                               ; preds = %28
  %76 = landingpad { ptr, i32 }
          cleanup
  br label %850

77:                                               ; preds = %39
  %78 = landingpad { ptr, i32 }
          cleanup
  br label %850

79:                                               ; preds = %50
  %80 = landingpad { ptr, i32 }
          cleanup
  br label %850

81:                                               ; preds = %56
  %82 = icmp eq i32 %58, -5
  br i1 %82, label %83, label %122

83:                                               ; preds = %81
  %84 = load i32, ptr @pos, align 4, !tbaa !25
  %85 = add nsw i32 %84, -4
  %86 = load i32, ptr @buf, align 8, !tbaa !20
  %87 = add nsw i32 %86, -1
  %88 = and i32 %87, %85
  %89 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %90 = sext i32 %88 to i64
  %91 = getelementptr inbounds i8, ptr %89, i64 %90
  %92 = load i8, ptr %91, align 1, !tbaa !9
  %93 = zext i8 %92 to i32
  %94 = shl nuw i32 %93, 24
  %95 = add nsw i32 %84, -3
  %96 = and i32 %87, %95
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, ptr %89, i64 %97
  %99 = load i8, ptr %98, align 1, !tbaa !9
  %100 = zext i8 %99 to i32
  %101 = shl nuw nsw i32 %100, 16
  %102 = or i32 %101, %94
  %103 = add nsw i32 %84, -2
  %104 = and i32 %87, %103
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8, ptr %89, i64 %105
  %107 = load i8, ptr %106, align 1, !tbaa !9
  %108 = zext i8 %107 to i32
  %109 = shl nuw nsw i32 %108, 8
  %110 = or i32 %102, %109
  %111 = add nsw i32 %84, -1
  %112 = and i32 %87, %111
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, ptr %89, i64 %113
  %115 = load i8, ptr %114, align 1, !tbaa !9
  %116 = zext i8 %115 to i32
  %117 = or i32 %110, %116
  store i32 %117, ptr @_ZZ13contextModel2vE4size, align 4, !tbaa !25
  %118 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !215
  %119 = icmp eq i32 %118, 8
  br i1 %119, label %120, label %122

120:                                              ; preds = %83
  %121 = add nsw i32 %117, 8
  store i32 %121, ptr @_ZZ13contextModel2vE4size, align 4, !tbaa !25
  br label %122

122:                                              ; preds = %60, %81, %120, %83, %53
  %123 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %124 = icmp sgt i32 %123, 0
  br i1 %124, label %125, label %206

125:                                              ; preds = %122
  %126 = load i32, ptr @y, align 4, !tbaa !25
  %127 = shl i32 %126, 12
  %128 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 9, i32 3), align 8, !tbaa !61
  %129 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 3, i32 3), align 8
  %130 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8
  %131 = load i32, ptr @_ZZ13contextModel2vE1m, align 8
  %132 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 4, i32 3), align 8
  %133 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8
  %134 = freeze i32 %133
  %135 = add i32 %134, 7
  %136 = and i32 %135, -8
  %137 = icmp sgt i32 %136, 0
  %138 = zext i32 %136 to i64
  br i1 %137, label %139, label %206

139:                                              ; preds = %125
  %140 = zext i32 %123 to i64
  %141 = lshr i32 %135, 3
  %142 = zext i32 %141 to i64
  %143 = shl nuw nsw i64 %142, 4
  %144 = getelementptr i8, ptr %132, i64 %143
  %145 = getelementptr i8, ptr %129, i64 %143
  br label %146

146:                                              ; preds = %203, %139
  %147 = phi i64 [ 0, %139 ], [ %204, %203 ]
  %148 = getelementptr inbounds i32, ptr %128, i64 %147
  %149 = load i32, ptr %148, align 4, !tbaa !25
  %150 = icmp eq i32 %127, %149
  br i1 %150, label %203, label %151

151:                                              ; preds = %146
  %152 = sub nsw i32 %127, %149
  %153 = mul nsw i32 %152, 7
  %154 = getelementptr inbounds i32, ptr %130, i64 %147
  %155 = load i32, ptr %154, align 4, !tbaa !25
  %156 = mul nsw i32 %155, %131
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i16, ptr %132, i64 %157
  %159 = shl nsw i64 %157, 1
  %160 = getelementptr i8, ptr %144, i64 %159
  %161 = icmp ult ptr %158, %145
  %162 = icmp ult ptr %129, %160
  %163 = and i1 %161, %162
  br i1 %163, label %185, label %164

164:                                              ; preds = %151
  %165 = insertelement <8 x i32> poison, i32 %153, i64 0
  %166 = shufflevector <8 x i32> %165, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %167

167:                                              ; preds = %167, %164
  %168 = phi i64 [ 0, %164 ], [ %183, %167 ]
  %169 = getelementptr inbounds i16, ptr %158, i64 %168
  %170 = load <8 x i16>, ptr %169, align 2, !tbaa !31, !alias.scope !217, !noalias !220
  %171 = sext <8 x i16> %170 to <8 x i32>
  %172 = getelementptr inbounds i16, ptr %129, i64 %168
  %173 = load <8 x i16>, ptr %172, align 2, !tbaa !31, !alias.scope !220
  %174 = sext <8 x i16> %173 to <8 x i32>
  %175 = mul nsw <8 x i32> %166, %174
  %176 = ashr <8 x i32> %175, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %177 = add nsw <8 x i32> %176, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %178 = ashr <8 x i32> %177, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %179 = add nsw <8 x i32> %178, %171
  %180 = tail call <8 x i32> @llvm.smax.v8i32(<8 x i32> %179, <8 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>)
  %181 = tail call <8 x i32> @llvm.smin.v8i32(<8 x i32> %180, <8 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>)
  %182 = trunc <8 x i32> %181 to <8 x i16>
  store <8 x i16> %182, ptr %169, align 2, !tbaa !31, !alias.scope !217, !noalias !220
  %183 = add nuw i64 %168, 8
  %184 = icmp eq i64 %183, %138
  br i1 %184, label %203, label %167, !llvm.loop !222

185:                                              ; preds = %151, %185
  %186 = phi i64 [ %201, %185 ], [ 0, %151 ]
  %187 = getelementptr inbounds i16, ptr %158, i64 %186
  %188 = load i16, ptr %187, align 2, !tbaa !31
  %189 = sext i16 %188 to i32
  %190 = getelementptr inbounds i16, ptr %129, i64 %186
  %191 = load i16, ptr %190, align 2, !tbaa !31
  %192 = sext i16 %191 to i32
  %193 = mul nsw i32 %153, %192
  %194 = ashr i32 %193, 15
  %195 = add nsw i32 %194, 1
  %196 = ashr i32 %195, 1
  %197 = add nsw i32 %196, %189
  %198 = tail call i32 @llvm.smax.i32(i32 %197, i32 -32768)
  %199 = tail call i32 @llvm.smin.i32(i32 %198, i32 32767)
  %200 = trunc i32 %199 to i16
  store i16 %200, ptr %187, align 2, !tbaa !31
  %201 = add nuw nsw i64 %186, 1
  %202 = icmp eq i64 %201, %138
  br i1 %202, label %203, label %185, !llvm.loop !223

203:                                              ; preds = %167, %185, %146
  %204 = add nuw nsw i64 %147, 1
  %205 = icmp eq i64 %204, %140
  br i1 %205, label %206, label %146, !llvm.loop !164

206:                                              ; preds = %203, %122, %125
  store i32 0, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  store i32 0, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  store i32 1, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !64
  %207 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 3, i32 3), align 8, !tbaa !59
  store i16 256, ptr %207, align 2, !tbaa !31
  %208 = tail call noundef i32 @_Z10matchModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  %209 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %210 = and i32 %208, 65535
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds i8, ptr %209, i64 %211
  %213 = load i8, ptr %212, align 1, !tbaa !9
  %214 = zext i8 %213 to i32
  %215 = tail call noundef i32 @_Z8wavModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  %216 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !215
  %217 = icmp eq i32 %216, 1
  br i1 %217, label %218, label %252

218:                                              ; preds = %206
  %219 = tail call noundef i32 @_Z9jpegModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %218
  %222 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !215
  br label %252

223:                                              ; preds = %218
  %224 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %225 = add nsw i32 %224, 1
  %226 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %227 = add nsw i32 %226, 1
  store i32 %227, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %228 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !61
  %229 = sext i32 %226 to i64
  %230 = getelementptr inbounds i32, ptr %228, i64 %229
  store i32 %225, ptr %230, align 4, !tbaa !25
  %231 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %232 = add nsw i32 %231, 8
  store i32 %232, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %233 = add nsw i32 %219, -1
  %234 = add nsw i32 %233, %232
  %235 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %236 = add nsw i32 %235, 1
  store i32 %236, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %237 = sext i32 %235 to i64
  %238 = getelementptr inbounds i32, ptr %228, i64 %237
  store i32 %234, ptr %238, align 4, !tbaa !25
  %239 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %240 = add nsw i32 %239, 257
  store i32 %240, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %241 = load i32, ptr @pos, align 4, !tbaa !25
  %242 = add nsw i32 %241, -1
  %243 = load i32, ptr @buf, align 8, !tbaa !20
  %244 = add nsw i32 %243, -1
  %245 = and i32 %244, %242
  %246 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %247 = sext i32 %245 to i64
  %248 = getelementptr inbounds i8, ptr %246, i64 %247
  %249 = load i8, ptr %248, align 1, !tbaa !9
  %250 = zext i8 %249 to i32
  %251 = add nsw i32 %240, %250
  br label %838

252:                                              ; preds = %221, %206
  %253 = phi i32 [ %222, %221 ], [ %216, %206 ]
  %254 = and i32 %253, -2
  %255 = icmp eq i32 %254, 4
  br i1 %255, label %256, label %309

256:                                              ; preds = %252
  %257 = tail call noundef i32 @_Z8bmpModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  %258 = icmp slt i32 %257, 1
  br i1 %258, label %259, label %261

259:                                              ; preds = %256
  %260 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !215
  br label %309

261:                                              ; preds = %256
  %262 = load i32, ptr @_ZZ13contextModel2vE3col, align 4, !tbaa !25
  %263 = add nsw i32 %262, 1
  %264 = icmp sgt i32 %262, 22
  %265 = select i1 %264, i32 0, i32 %263
  store i32 %265, ptr @_ZZ13contextModel2vE3col, align 4
  %266 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %267 = add nsw i32 %266, 2
  %268 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %269 = add nsw i32 %268, 1
  store i32 %269, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %270 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !61
  %271 = sext i32 %268 to i64
  %272 = getelementptr inbounds i32, ptr %270, i64 %271
  store i32 %267, ptr %272, align 4, !tbaa !25
  %273 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %274 = add nsw i32 %273, 8
  store i32 %274, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %275 = add nsw i32 %274, %265
  %276 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %277 = add nsw i32 %276, 1
  store i32 %277, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %278 = sext i32 %276 to i64
  %279 = getelementptr inbounds i32, ptr %270, i64 %278
  store i32 %275, ptr %279, align 4, !tbaa !25
  %280 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %281 = add nsw i32 %280, 24
  store i32 %281, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %282 = load i32, ptr @pos, align 4, !tbaa !25
  %283 = sub nsw i32 %282, %257
  %284 = load i32, ptr @buf, align 8, !tbaa !20
  %285 = add nsw i32 %284, -1
  %286 = and i32 %285, %283
  %287 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %288 = sext i32 %286 to i64
  %289 = getelementptr inbounds i8, ptr %287, i64 %288
  %290 = load i8, ptr %289, align 1, !tbaa !9
  %291 = zext i8 %290 to i32
  %292 = add nsw i32 %282, -3
  %293 = and i32 %285, %292
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds i8, ptr %287, i64 %294
  %296 = load i8, ptr %295, align 1, !tbaa !9
  %297 = zext i8 %296 to i32
  %298 = add nuw nsw i32 %297, %291
  %299 = lshr i32 %298, 4
  %300 = add nsw i32 %299, %281
  %301 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %302 = add nsw i32 %301, 1
  store i32 %302, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %303 = sext i32 %301 to i64
  %304 = getelementptr inbounds i32, ptr %270, i64 %303
  store i32 %300, ptr %304, align 4, !tbaa !25
  %305 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %306 = add nsw i32 %305, 32
  store i32 %306, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %307 = load i32, ptr @c0, align 4, !tbaa !25
  %308 = add nsw i32 %307, %306
  br label %838

309:                                              ; preds = %259, %252
  %310 = phi i32 [ %260, %259 ], [ %253, %252 ]
  %311 = icmp eq i32 %310, 6
  br i1 %311, label %312, label %317

312:                                              ; preds = %309
  %313 = tail call noundef i32 @_Z8pgmModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m), !range !224
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %848

315:                                              ; preds = %312
  %316 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !215
  br label %317

317:                                              ; preds = %315, %309
  %318 = phi i32 [ %316, %315 ], [ %310, %309 ]
  %319 = icmp eq i32 %318, 3
  br i1 %319, label %320, label %325

320:                                              ; preds = %317
  %321 = tail call noundef i32 @_Z9bmpModel8R5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  %322 = icmp sgt i32 %321, 0
  br i1 %322, label %848, label %323

323:                                              ; preds = %320
  %324 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !215
  br label %325

325:                                              ; preds = %323, %317
  %326 = phi i32 [ %324, %323 ], [ %318, %317 ]
  %327 = icmp eq i32 %326, 7
  br i1 %327, label %328, label %331

328:                                              ; preds = %325
  %329 = tail call noundef i32 @_Z9rgbModel8R5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m), !range !225
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %848

331:                                              ; preds = %328, %325
  %332 = icmp sgt i32 %215, 0
  br i1 %332, label %333, label %364

333:                                              ; preds = %331
  %334 = and i32 %215, 255
  %335 = lshr i32 %215, 8
  %336 = mul nuw nsw i32 %335, %334
  %337 = load i32, ptr @_ZZ13contextModel2vE3col_0, align 4, !tbaa !25
  %338 = add nsw i32 %337, 1
  %339 = icmp slt i32 %338, %336
  %340 = select i1 %339, i32 %338, i32 0
  store i32 %340, ptr @_ZZ13contextModel2vE3col_0, align 4
  %341 = icmp eq i32 %336, %334
  %342 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  br i1 %341, label %352, label %343

343:                                              ; preds = %333
  %344 = add nsw i32 %342, %340
  %345 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %346 = add nsw i32 %345, 1
  store i32 %346, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %347 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !61
  %348 = sext i32 %345 to i64
  %349 = getelementptr inbounds i32, ptr %347, i64 %348
  store i32 %344, ptr %349, align 4, !tbaa !25
  %350 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %351 = add nsw i32 %350, %336
  store i32 %351, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  br label %352

352:                                              ; preds = %333, %343
  %353 = phi i32 [ %351, %343 ], [ %342, %333 ]
  %354 = add nsw i32 %353, %340
  %355 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %356 = add nsw i32 %355, 1
  store i32 %356, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %357 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !61
  %358 = sext i32 %355 to i64
  %359 = getelementptr inbounds i32, ptr %357, i64 %358
  store i32 %354, ptr %359, align 4, !tbaa !25
  %360 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %361 = add nsw i32 %360, %334
  store i32 %361, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %362 = load i32, ptr @c0, align 4, !tbaa !25
  %363 = add nsw i32 %362, %361
  br label %838

364:                                              ; preds = %331
  %365 = load i32, ptr @bpos, align 4, !tbaa !25
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %616

367:                                              ; preds = %364
  %368 = load i32, ptr @c4, align 4, !tbaa !25
  %369 = and i32 %368, 255
  %370 = load i32, ptr @_ZZ13contextModel2vE3cxt.13, align 16, !tbaa !25
  %371 = mul i32 %370, 257
  %372 = add i32 %371, 1
  %373 = add i32 %372, %369
  store i32 %373, ptr @_ZZ13contextModel2vE3cxt.14, align 8, !tbaa !25
  %374 = load i32, ptr @_ZZ13contextModel2vE3cxt.12, align 16, !tbaa !25
  %375 = mul i32 %374, 257
  %376 = add i32 %375, 1
  %377 = add i32 %376, %369
  store i32 %377, ptr @_ZZ13contextModel2vE3cxt.13, align 16, !tbaa !25
  %378 = load i32, ptr @_ZZ13contextModel2vE3cxt.11, align 16, !tbaa !25
  %379 = mul i32 %378, 257
  %380 = add i32 %379, 1
  %381 = add i32 %380, %369
  store i32 %381, ptr @_ZZ13contextModel2vE3cxt.12, align 16, !tbaa !25
  %382 = load i32, ptr @_ZZ13contextModel2vE3cxt.10, align 8, !tbaa !25
  %383 = mul i32 %382, 257
  %384 = add i32 %383, 1
  %385 = add i32 %384, %369
  store i32 %385, ptr @_ZZ13contextModel2vE3cxt.11, align 16, !tbaa !25
  %386 = load i32, ptr @_ZZ13contextModel2vE3cxt.9, align 16, !tbaa !25
  %387 = mul i32 %386, 257
  %388 = add i32 %387, 1
  %389 = add i32 %388, %369
  store i32 %389, ptr @_ZZ13contextModel2vE3cxt.10, align 8, !tbaa !25
  %390 = load i32, ptr @_ZZ13contextModel2vE3cxt.8, align 16, !tbaa !25
  %391 = mul i32 %390, 257
  %392 = add i32 %391, 1
  %393 = add i32 %392, %369
  store i32 %393, ptr @_ZZ13contextModel2vE3cxt.9, align 16, !tbaa !25
  %394 = load i32, ptr @_ZZ13contextModel2vE3cxt.7, align 16, !tbaa !25
  %395 = mul i32 %394, 257
  %396 = add i32 %395, 1
  %397 = add i32 %396, %369
  store i32 %397, ptr @_ZZ13contextModel2vE3cxt.8, align 16, !tbaa !25
  %398 = load i32, ptr @_ZZ13contextModel2vE3cxt.6, align 8, !tbaa !25
  %399 = mul i32 %398, 257
  %400 = add i32 %399, 1
  %401 = add i32 %400, %369
  store i32 %401, ptr @_ZZ13contextModel2vE3cxt.7, align 16, !tbaa !25
  %402 = load i32, ptr @_ZZ13contextModel2vE3cxt.5, align 16, !tbaa !25
  %403 = mul i32 %402, 257
  %404 = add i32 %403, 1
  %405 = add i32 %404, %369
  store i32 %405, ptr @_ZZ13contextModel2vE3cxt.6, align 8, !tbaa !25
  %406 = load i32, ptr @_ZZ13contextModel2vE3cxt.4, align 16, !tbaa !25
  %407 = mul i32 %406, 257
  %408 = add i32 %407, 1
  %409 = add i32 %408, %369
  store i32 %409, ptr @_ZZ13contextModel2vE3cxt.5, align 16, !tbaa !25
  %410 = load i32, ptr @_ZZ13contextModel2vE3cxt.3, align 16, !tbaa !25
  %411 = mul i32 %410, 257
  %412 = add i32 %411, 1
  %413 = add i32 %412, %369
  store i32 %413, ptr @_ZZ13contextModel2vE3cxt.4, align 16, !tbaa !25
  %414 = load i32, ptr @_ZZ13contextModel2vE3cxt.2, align 8, !tbaa !25
  %415 = mul i32 %414, 257
  %416 = add i32 %415, 1
  %417 = add i32 %416, %369
  store i32 %417, ptr @_ZZ13contextModel2vE3cxt.3, align 16, !tbaa !25
  %418 = load i32, ptr @_ZZ13contextModel2vE3cxt.1, align 16, !tbaa !25
  %419 = mul i32 %418, 257
  %420 = add i32 %419, 1
  %421 = add i32 %420, %369
  store i32 %421, ptr @_ZZ13contextModel2vE3cxt.2, align 8, !tbaa !25
  %422 = add nuw nsw i32 %369, 1
  store i32 %422, ptr @_ZZ13contextModel2vE3cxt.1, align 16, !tbaa !25
  %423 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %424 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %425 = add nsw i32 %424, 1
  store i32 %425, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %426 = tail call i32 @llvm.fshl.i32(i32 %424, i32 %424, i32 16)
  %427 = mul i32 %426, 123456791
  %428 = add i32 %427, %424
  %429 = sext i32 %424 to i64
  %430 = getelementptr inbounds i32, ptr %423, i64 %429
  store i32 %428, ptr %430, align 4, !tbaa !25
  %431 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %432 = add nsw i32 %431, 1
  store i32 %432, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %433 = mul i32 %422, 987654323
  %434 = add i32 %431, %433
  %435 = tail call i32 @llvm.fshl.i32(i32 %434, i32 %434, i32 16)
  %436 = mul i32 %435, 123456791
  %437 = add i32 %436, %431
  %438 = sext i32 %431 to i64
  %439 = getelementptr inbounds i32, ptr %423, i64 %438
  store i32 %437, ptr %439, align 4, !tbaa !25
  %440 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %441 = add nsw i32 %440, 1
  store i32 %441, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %442 = mul i32 %421, 987654323
  %443 = add i32 %440, %442
  %444 = tail call i32 @llvm.fshl.i32(i32 %443, i32 %443, i32 16)
  %445 = mul i32 %444, 123456791
  %446 = add i32 %445, %440
  %447 = sext i32 %440 to i64
  %448 = getelementptr inbounds i32, ptr %423, i64 %447
  store i32 %446, ptr %448, align 4, !tbaa !25
  %449 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %450 = add nsw i32 %449, 1
  store i32 %450, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %451 = mul i32 %417, 987654323
  %452 = add i32 %449, %451
  %453 = tail call i32 @llvm.fshl.i32(i32 %452, i32 %452, i32 16)
  %454 = mul i32 %453, 123456791
  %455 = add i32 %454, %449
  %456 = sext i32 %449 to i64
  %457 = getelementptr inbounds i32, ptr %423, i64 %456
  store i32 %455, ptr %457, align 4, !tbaa !25
  %458 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %459 = add nsw i32 %458, 1
  store i32 %459, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %460 = mul i32 %413, 987654323
  %461 = add i32 %458, %460
  %462 = tail call i32 @llvm.fshl.i32(i32 %461, i32 %461, i32 16)
  %463 = mul i32 %462, 123456791
  %464 = add i32 %463, %458
  %465 = sext i32 %458 to i64
  %466 = getelementptr inbounds i32, ptr %423, i64 %465
  store i32 %464, ptr %466, align 4, !tbaa !25
  %467 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %468 = add nsw i32 %467, 1
  store i32 %468, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %469 = mul i32 %409, 987654323
  %470 = add i32 %467, %469
  %471 = tail call i32 @llvm.fshl.i32(i32 %470, i32 %470, i32 16)
  %472 = mul i32 %471, 123456791
  %473 = add i32 %472, %467
  %474 = sext i32 %467 to i64
  %475 = getelementptr inbounds i32, ptr %423, i64 %474
  store i32 %473, ptr %475, align 4, !tbaa !25
  %476 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %477 = add nsw i32 %476, 1
  store i32 %477, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %478 = mul i32 %405, 987654323
  %479 = add i32 %476, %478
  %480 = tail call i32 @llvm.fshl.i32(i32 %479, i32 %479, i32 16)
  %481 = mul i32 %480, 123456791
  %482 = add i32 %481, %476
  %483 = sext i32 %476 to i64
  %484 = getelementptr inbounds i32, ptr %423, i64 %483
  store i32 %482, ptr %484, align 4, !tbaa !25
  %485 = load i32, ptr @_ZZ13contextModel2vE3cxt.7, align 16, !tbaa !25
  %486 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm7, i64 0, i32 1), align 8, !tbaa !226
  %487 = load i8, ptr %486, align 1, !tbaa !9
  %488 = icmp eq i8 %487, 0
  br i1 %488, label %502, label %489

489:                                              ; preds = %367
  %490 = getelementptr inbounds i8, ptr %486, i64 1
  %491 = load i8, ptr %490, align 1, !tbaa !9
  %492 = load i32, ptr @pos, align 4, !tbaa !25
  %493 = add nsw i32 %492, -1
  %494 = load i32, ptr @buf, align 8, !tbaa !20
  %495 = add nsw i32 %494, -1
  %496 = and i32 %495, %493
  %497 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %498 = sext i32 %496 to i64
  %499 = getelementptr inbounds i8, ptr %497, i64 %498
  %500 = load i8, ptr %499, align 1, !tbaa !9
  %501 = icmp eq i8 %500, %491
  br i1 %501, label %514, label %502

502:                                              ; preds = %489, %367
  store i8 1, ptr %486, align 1, !tbaa !9
  %503 = load i32, ptr @pos, align 4, !tbaa !25
  %504 = add nsw i32 %503, -1
  %505 = load i32, ptr @buf, align 8, !tbaa !20
  %506 = add nsw i32 %505, -1
  %507 = and i32 %506, %504
  %508 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %509 = sext i32 %507 to i64
  %510 = getelementptr inbounds i8, ptr %508, i64 %509
  %511 = load i8, ptr %510, align 1, !tbaa !9
  %512 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm7, i64 0, i32 1), align 8, !tbaa !226
  %513 = getelementptr inbounds i8, ptr %512, i64 1
  store i8 %511, ptr %513, align 1, !tbaa !9
  br label %518

514:                                              ; preds = %489
  %515 = icmp eq i8 %487, -1
  br i1 %515, label %518, label %516

516:                                              ; preds = %514
  %517 = add nuw i8 %487, 1
  store i8 %517, ptr %486, align 1, !tbaa !9
  br label %518

518:                                              ; preds = %502, %514, %516
  %519 = tail call noundef ptr @_ZN2BHILi4EEixEj(ptr noundef nonnull align 8 dereferenceable(28) @_ZZ13contextModel2vE4rcm7, i32 noundef %485)
  %520 = getelementptr inbounds i8, ptr %519, i64 1
  store ptr %520, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm7, i64 0, i32 1), align 8, !tbaa !226
  %521 = load i32, ptr @_ZZ13contextModel2vE3cxt.8, align 16, !tbaa !25
  %522 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %523 = add nsw i32 %522, 1
  store i32 %523, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %524 = mul i32 %521, 987654323
  %525 = add i32 %522, %524
  %526 = tail call i32 @llvm.fshl.i32(i32 %525, i32 %525, i32 16)
  %527 = mul i32 %526, 123456791
  %528 = add i32 %527, %522
  %529 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %530 = sext i32 %522 to i64
  %531 = getelementptr inbounds i32, ptr %529, i64 %530
  store i32 %528, ptr %531, align 4, !tbaa !25
  %532 = load i32, ptr @_ZZ13contextModel2vE3cxt.10, align 8, !tbaa !25
  %533 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm9, i64 0, i32 1), align 8, !tbaa !226
  %534 = load i8, ptr %533, align 1, !tbaa !9
  %535 = icmp eq i8 %534, 0
  br i1 %535, label %549, label %536

536:                                              ; preds = %518
  %537 = getelementptr inbounds i8, ptr %533, i64 1
  %538 = load i8, ptr %537, align 1, !tbaa !9
  %539 = load i32, ptr @pos, align 4, !tbaa !25
  %540 = add nsw i32 %539, -1
  %541 = load i32, ptr @buf, align 8, !tbaa !20
  %542 = add nsw i32 %541, -1
  %543 = and i32 %542, %540
  %544 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %545 = sext i32 %543 to i64
  %546 = getelementptr inbounds i8, ptr %544, i64 %545
  %547 = load i8, ptr %546, align 1, !tbaa !9
  %548 = icmp eq i8 %547, %538
  br i1 %548, label %561, label %549

549:                                              ; preds = %536, %518
  store i8 1, ptr %533, align 1, !tbaa !9
  %550 = load i32, ptr @pos, align 4, !tbaa !25
  %551 = add nsw i32 %550, -1
  %552 = load i32, ptr @buf, align 8, !tbaa !20
  %553 = add nsw i32 %552, -1
  %554 = and i32 %553, %551
  %555 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %556 = sext i32 %554 to i64
  %557 = getelementptr inbounds i8, ptr %555, i64 %556
  %558 = load i8, ptr %557, align 1, !tbaa !9
  %559 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm9, i64 0, i32 1), align 8, !tbaa !226
  %560 = getelementptr inbounds i8, ptr %559, i64 1
  store i8 %558, ptr %560, align 1, !tbaa !9
  br label %565

561:                                              ; preds = %536
  %562 = icmp eq i8 %534, -1
  br i1 %562, label %565, label %563

563:                                              ; preds = %561
  %564 = add nuw i8 %534, 1
  store i8 %564, ptr %533, align 1, !tbaa !9
  br label %565

565:                                              ; preds = %549, %561, %563
  %566 = tail call noundef ptr @_ZN2BHILi4EEixEj(ptr noundef nonnull align 8 dereferenceable(28) @_ZZ13contextModel2vE4rcm9, i32 noundef %532)
  %567 = getelementptr inbounds i8, ptr %566, i64 1
  store ptr %567, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm9, i64 0, i32 1), align 8, !tbaa !226
  %568 = load i32, ptr @_ZZ13contextModel2vE3cxt.12, align 16, !tbaa !25
  %569 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE5rcm10, i64 0, i32 1), align 8, !tbaa !226
  %570 = load i8, ptr %569, align 1, !tbaa !9
  %571 = icmp eq i8 %570, 0
  br i1 %571, label %585, label %572

572:                                              ; preds = %565
  %573 = getelementptr inbounds i8, ptr %569, i64 1
  %574 = load i8, ptr %573, align 1, !tbaa !9
  %575 = load i32, ptr @pos, align 4, !tbaa !25
  %576 = add nsw i32 %575, -1
  %577 = load i32, ptr @buf, align 8, !tbaa !20
  %578 = add nsw i32 %577, -1
  %579 = and i32 %578, %576
  %580 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %581 = sext i32 %579 to i64
  %582 = getelementptr inbounds i8, ptr %580, i64 %581
  %583 = load i8, ptr %582, align 1, !tbaa !9
  %584 = icmp eq i8 %583, %574
  br i1 %584, label %597, label %585

585:                                              ; preds = %572, %565
  store i8 1, ptr %569, align 1, !tbaa !9
  %586 = load i32, ptr @pos, align 4, !tbaa !25
  %587 = add nsw i32 %586, -1
  %588 = load i32, ptr @buf, align 8, !tbaa !20
  %589 = add nsw i32 %588, -1
  %590 = and i32 %589, %587
  %591 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %592 = sext i32 %590 to i64
  %593 = getelementptr inbounds i8, ptr %591, i64 %592
  %594 = load i8, ptr %593, align 1, !tbaa !9
  %595 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE5rcm10, i64 0, i32 1), align 8, !tbaa !226
  %596 = getelementptr inbounds i8, ptr %595, i64 1
  store i8 %594, ptr %596, align 1, !tbaa !9
  br label %601

597:                                              ; preds = %572
  %598 = icmp eq i8 %570, -1
  br i1 %598, label %601, label %599

599:                                              ; preds = %597
  %600 = add nuw i8 %570, 1
  store i8 %600, ptr %569, align 1, !tbaa !9
  br label %601

601:                                              ; preds = %585, %597, %599
  %602 = tail call noundef ptr @_ZN2BHILi4EEixEj(ptr noundef nonnull align 8 dereferenceable(28) @_ZZ13contextModel2vE5rcm10, i32 noundef %568)
  %603 = getelementptr inbounds i8, ptr %602, i64 1
  store ptr %603, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE5rcm10, i64 0, i32 1), align 8, !tbaa !226
  %604 = load i32, ptr @_ZZ13contextModel2vE3cxt.14, align 8, !tbaa !25
  %605 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %606 = add nsw i32 %605, 1
  store i32 %606, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %607 = mul i32 %604, 987654323
  %608 = add i32 %605, %607
  %609 = tail call i32 @llvm.fshl.i32(i32 %608, i32 %608, i32 16)
  %610 = mul i32 %609, 123456791
  %611 = add i32 %610, %605
  %612 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %613 = sext i32 %605 to i64
  %614 = getelementptr inbounds i32, ptr %612, i64 %613
  store i32 %611, ptr %614, align 4, !tbaa !25
  %615 = load i32, ptr @bpos, align 4, !tbaa !25
  br label %616

616:                                              ; preds = %601, %364
  %617 = phi i32 [ %615, %601 ], [ %365, %364 ]
  %618 = load i32, ptr @c0, align 4, !tbaa !25
  %619 = load i32, ptr @pos, align 4, !tbaa !25
  %620 = add nsw i32 %619, -1
  %621 = load i32, ptr @buf, align 8, !tbaa !20
  %622 = add nsw i32 %621, -1
  %623 = and i32 %622, %620
  %624 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %625 = sext i32 %623 to i64
  %626 = getelementptr inbounds i8, ptr %624, i64 %625
  %627 = load i8, ptr %626, align 1, !tbaa !9
  %628 = zext i8 %627 to i32
  %629 = load i32, ptr @y, align 4, !tbaa !25
  %630 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13contextModel2vE2cm, ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m, i32 noundef %618, i32 noundef %617, i32 noundef %628, i32 noundef %629)
  %631 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm7, i64 0, i32 1), align 8, !tbaa !226
  %632 = getelementptr inbounds i8, ptr %631, i64 1
  %633 = load i8, ptr %632, align 1, !tbaa !9
  %634 = zext i8 %633 to i32
  %635 = or i32 %634, 256
  %636 = load i32, ptr @bpos, align 4, !tbaa !25
  %637 = sub nsw i32 8, %636
  %638 = lshr i32 %635, %637
  %639 = load i32, ptr @c0, align 4, !tbaa !25
  %640 = icmp eq i32 %638, %639
  br i1 %640, label %641, label %656

641:                                              ; preds = %616
  %642 = sub nsw i32 7, %636
  %643 = lshr i32 %634, %642
  %644 = shl nuw nsw i32 %643, 4
  %645 = and i32 %644, 16
  %646 = load i8, ptr %631, align 1, !tbaa !9
  %647 = zext i8 %646 to i64
  %648 = add nuw nsw i64 %647, 1
  %649 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %650 = getelementptr inbounds i8, ptr %649, i64 %648
  %651 = load i8, ptr %650, align 1, !tbaa !9
  %652 = zext i8 %651 to i32
  %653 = add nuw nsw i32 %645, 65528
  %654 = mul nuw nsw i32 %653, %652
  %655 = trunc i32 %654 to i16
  br label %656

656:                                              ; preds = %616, %641
  %657 = phi i16 [ %655, %641 ], [ 0, %616 ]
  %658 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !64
  %659 = add nsw i32 %658, 1
  store i32 %659, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !64
  %660 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %661 = sext i32 %658 to i64
  %662 = getelementptr inbounds i16, ptr %660, i64 %661
  store i16 %657, ptr %662, align 2, !tbaa !31
  %663 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm9, i64 0, i32 1), align 8, !tbaa !226
  %664 = getelementptr inbounds i8, ptr %663, i64 1
  %665 = load i8, ptr %664, align 1, !tbaa !9
  %666 = zext i8 %665 to i32
  %667 = or i32 %666, 256
  %668 = lshr i32 %667, %637
  %669 = icmp eq i32 %668, %639
  br i1 %669, label %670, label %685

670:                                              ; preds = %656
  %671 = sub nsw i32 7, %636
  %672 = lshr i32 %666, %671
  %673 = shl nuw nsw i32 %672, 4
  %674 = and i32 %673, 16
  %675 = load i8, ptr %663, align 1, !tbaa !9
  %676 = zext i8 %675 to i64
  %677 = add nuw nsw i64 %676, 1
  %678 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %679 = getelementptr inbounds i8, ptr %678, i64 %677
  %680 = load i8, ptr %679, align 1, !tbaa !9
  %681 = zext i8 %680 to i32
  %682 = add nuw nsw i32 %674, 65528
  %683 = mul nuw nsw i32 %682, %681
  %684 = trunc i32 %683 to i16
  br label %685

685:                                              ; preds = %656, %670
  %686 = phi i16 [ %684, %670 ], [ 0, %656 ]
  %687 = add nsw i32 %658, 2
  store i32 %687, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !64
  %688 = sext i32 %659 to i64
  %689 = getelementptr inbounds i16, ptr %660, i64 %688
  store i16 %686, ptr %689, align 2, !tbaa !31
  %690 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE5rcm10, i64 0, i32 1), align 8, !tbaa !226
  %691 = getelementptr inbounds i8, ptr %690, i64 1
  %692 = load i8, ptr %691, align 1, !tbaa !9
  %693 = zext i8 %692 to i32
  %694 = or i32 %693, 256
  %695 = lshr i32 %694, %637
  %696 = icmp eq i32 %695, %639
  br i1 %696, label %697, label %712

697:                                              ; preds = %685
  %698 = sub nsw i32 7, %636
  %699 = lshr i32 %693, %698
  %700 = shl nuw nsw i32 %699, 4
  %701 = and i32 %700, 16
  %702 = load i8, ptr %690, align 1, !tbaa !9
  %703 = zext i8 %702 to i64
  %704 = add nuw nsw i64 %703, 1
  %705 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %706 = getelementptr inbounds i8, ptr %705, i64 %704
  %707 = load i8, ptr %706, align 1, !tbaa !9
  %708 = zext i8 %707 to i32
  %709 = add nuw nsw i32 %701, 65528
  %710 = mul nuw nsw i32 %709, %708
  %711 = trunc i32 %710 to i16
  br label %712

712:                                              ; preds = %685, %697
  %713 = phi i16 [ %711, %697 ], [ 0, %685 ]
  %714 = add nsw i32 %658, 3
  store i32 %714, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !64
  %715 = sext i32 %687 to i64
  %716 = getelementptr inbounds i16, ptr %660, i64 %715
  store i16 %713, ptr %716, align 2, !tbaa !31
  %717 = load i32, ptr @level, align 4, !tbaa !25
  %718 = icmp sgt i32 %717, 3
  br i1 %718, label %719, label %723

719:                                              ; preds = %712
  tail call void @_Z11sparseModelR5Mixerii(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m, i32 noundef %214, i32 noundef %630)
  tail call void @_Z13distanceModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  tail call void @_Z8picModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  tail call void @_Z11recordModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  tail call void @_Z9wordModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  tail call void @_Z13indirectModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  tail call void @_Z8dmcModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  %720 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !215
  %721 = icmp eq i32 %720, 8
  br i1 %721, label %722, label %723

722:                                              ; preds = %719
  tail call void @_Z8exeModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  br label %723

723:                                              ; preds = %719, %722, %712
  %724 = tail call i32 @llvm.smax.i32(i32 %630, i32 2)
  %725 = add nsw i32 %724, -2
  %726 = load i32, ptr @pos, align 4, !tbaa !25
  %727 = add nsw i32 %726, -1
  %728 = load i32, ptr @buf, align 8, !tbaa !20
  %729 = add nsw i32 %728, -1
  %730 = and i32 %729, %727
  %731 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %732 = sext i32 %730 to i64
  %733 = getelementptr inbounds i8, ptr %731, i64 %732
  %734 = load i8, ptr %733, align 1, !tbaa !9
  %735 = zext i8 %734 to i32
  %736 = add nsw i32 %726, -2
  %737 = and i32 %729, %736
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds i8, ptr %731, i64 %738
  %740 = load i8, ptr %739, align 1, !tbaa !9
  %741 = zext i8 %740 to i32
  %742 = add nsw i32 %726, -3
  %743 = and i32 %729, %742
  %744 = sext i32 %743 to i64
  %745 = getelementptr inbounds i8, ptr %731, i64 %744
  %746 = load i8, ptr %745, align 1, !tbaa !9
  %747 = zext i8 %746 to i32
  %748 = add nuw nsw i32 %735, 8
  %749 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %750 = add nsw i32 %748, %749
  %751 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %752 = add nsw i32 %751, 1
  store i32 %752, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %753 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !61
  %754 = sext i32 %751 to i64
  %755 = getelementptr inbounds i32, ptr %753, i64 %754
  store i32 %750, ptr %755, align 4, !tbaa !25
  %756 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %757 = add nsw i32 %756, 264
  store i32 %757, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %758 = load i32, ptr @c0, align 4, !tbaa !25
  %759 = add nsw i32 %758, %757
  %760 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %761 = add nsw i32 %760, 1
  store i32 %761, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %762 = sext i32 %760 to i64
  %763 = getelementptr inbounds i32, ptr %753, i64 %762
  store i32 %759, ptr %763, align 4, !tbaa !25
  %764 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %765 = add nsw i32 %764, 256
  store i32 %765, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %766 = load i32, ptr @c4, align 4, !tbaa !25
  %767 = lshr i32 %766, 2
  %768 = and i32 %767, 56
  %769 = icmp eq i8 %734, %740
  %770 = select i1 %769, i32 64, i32 0
  %771 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !215
  %772 = icmp eq i32 %771, 8
  %773 = select i1 %772, i32 128, i32 0
  %774 = add nuw i32 %725, %770
  %775 = add i32 %774, %765
  %776 = add i32 %775, %768
  %777 = add i32 %776, %773
  %778 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %779 = add nsw i32 %778, 1
  store i32 %779, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %780 = sext i32 %778 to i64
  %781 = getelementptr inbounds i32, ptr %753, i64 %780
  store i32 %777, ptr %781, align 4, !tbaa !25
  %782 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %783 = add nsw i32 %782, 256
  store i32 %783, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %784 = add nsw i32 %783, %741
  %785 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %786 = add nsw i32 %785, 1
  store i32 %786, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %787 = sext i32 %785 to i64
  %788 = getelementptr inbounds i32, ptr %753, i64 %787
  store i32 %784, ptr %788, align 4, !tbaa !25
  %789 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %790 = add nsw i32 %789, 256
  store i32 %790, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %791 = add nsw i32 %790, %747
  %792 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %793 = add nsw i32 %792, 1
  store i32 %793, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %794 = sext i32 %792 to i64
  %795 = getelementptr inbounds i32, ptr %753, i64 %794
  store i32 %791, ptr %795, align 4, !tbaa !25
  %796 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %797 = add nsw i32 %796, 256
  store i32 %797, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %798 = add nsw i32 %797, %214
  %799 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %800 = add nsw i32 %799, 1
  store i32 %800, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %801 = sext i32 %799 to i64
  %802 = getelementptr inbounds i32, ptr %753, i64 %801
  store i32 %798, ptr %802, align 4, !tbaa !25
  %803 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %804 = add nsw i32 %803, 256
  store i32 %804, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %805 = load i32, ptr @bpos, align 4, !tbaa !25
  %806 = icmp eq i32 %805, 0
  br i1 %806, label %824, label %807

807:                                              ; preds = %723
  %808 = load i32, ptr @c0, align 4, !tbaa !25
  %809 = sub nsw i32 8, %805
  %810 = shl i32 %808, %809
  %811 = icmp eq i32 %805, 1
  %812 = lshr i32 %747, 1
  %813 = select i1 %811, i32 %812, i32 0
  %814 = add i32 %810, %813
  %815 = tail call i32 @llvm.smin.i32(i32 %805, i32 5)
  %816 = shl nsw i32 %815, 8
  %817 = lshr i32 %735, 5
  %818 = or i32 %816, %817
  %819 = lshr i32 %741, 2
  %820 = and i32 %819, 56
  %821 = or i32 %818, %820
  %822 = and i32 %814, 192
  %823 = or i32 %822, %821
  br label %835

824:                                              ; preds = %723
  %825 = lshr i32 %747, 7
  %826 = load i32, ptr @c4, align 4, !tbaa !25
  %827 = lshr i32 %826, 30
  %828 = and i32 %827, 2
  %829 = lshr i32 %741, 4
  %830 = and i32 %829, 12
  %831 = and i32 %735, 240
  %832 = or i32 %825, %831
  %833 = or i32 %832, %830
  %834 = or i32 %833, %828
  br label %835

835:                                              ; preds = %824, %807
  %836 = phi i32 [ %823, %807 ], [ %834, %824 ]
  %837 = add nsw i32 %836, %804
  br label %838

838:                                              ; preds = %352, %835, %223, %261
  %839 = phi ptr [ %270, %261 ], [ %228, %223 ], [ %753, %835 ], [ %357, %352 ]
  %840 = phi i32 [ %308, %261 ], [ %251, %223 ], [ %837, %835 ], [ %363, %352 ]
  %841 = phi i32 [ 256, %261 ], [ 256, %223 ], [ 1536, %835 ], [ 256, %352 ]
  %842 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %843 = add nsw i32 %842, 1
  store i32 %843, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %844 = sext i32 %842 to i64
  %845 = getelementptr inbounds i32, ptr %839, i64 %844
  store i32 %840, ptr %845, align 4, !tbaa !25
  %846 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %847 = add nsw i32 %846, %841
  store i32 %847, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  br label %848

848:                                              ; preds = %838, %328, %320, %312
  %849 = tail call noundef i32 @_ZN5Mixer1pEv(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  ret i32 %849

850:                                              ; preds = %79, %77, %75, %73, %71
  %851 = phi ptr [ @_ZGVZ13contextModel2vE1m, %79 ], [ @_ZGVZ13contextModel2vE5rcm10, %77 ], [ @_ZGVZ13contextModel2vE4rcm9, %75 ], [ @_ZGVZ13contextModel2vE4rcm7, %73 ], [ @_ZGVZ13contextModel2vE2cm, %71 ]
  %852 = phi { ptr, i32 } [ %80, %79 ], [ %78, %77 ], [ %76, %75 ], [ %74, %73 ], [ %72, %71 ]
  tail call void @__cxa_guard_abort(ptr nonnull %851) #39
  resume { ptr, i32 } %852
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN13RunContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = sdiv i32 %1, 4
  %4 = shl nsw i32 %3, 2
  %5 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 1
  store i32 %4, ptr %5, align 4, !tbaa !150
  store i32 %4, ptr %0, align 8, !tbaa !152
  %6 = icmp slt i32 %1, 4
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %8, i8 0, i64 16, i1 false)
  br label %30

9:                                                ; preds = %2
  %10 = add nuw i32 %4, 64
  %11 = load i32, ptr @programChecker, align 8, !tbaa !13
  %12 = add nsw i32 %11, %10
  store i32 %12, ptr @programChecker, align 8, !tbaa !13
  %13 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %14 = icmp sgt i32 %12, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %9
  store i32 %12, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %16

16:                                               ; preds = %15, %9
  %17 = sext i32 %10 to i64
  %18 = tail call noalias ptr @calloc(i64 noundef %17, i64 noundef 1) #41
  %19 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 2
  store ptr %18, ptr %19, align 8, !tbaa !153
  %20 = icmp eq ptr %18, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %22, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %22, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

23:                                               ; preds = %16
  %24 = getelementptr inbounds i8, ptr %18, i64 64
  %25 = ptrtoint ptr %18 to i64
  %26 = and i64 %25, 63
  %27 = sub nsw i64 0, %26
  %28 = getelementptr inbounds i8, ptr %24, i64 %27
  %29 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 3
  store ptr %28, ptr %29, align 8, !tbaa !154
  br label %30

30:                                               ; preds = %7, %23
  %31 = phi ptr [ null, %7 ], [ %28, %23 ]
  %32 = getelementptr inbounds %class.BH.10, ptr %0, i64 0, i32 1
  %33 = add nsw i32 %3, -1
  store i32 %33, ptr %32, align 8, !tbaa !229
  %34 = getelementptr inbounds i8, ptr %31, i64 2
  %35 = load i8, ptr %34, align 1, !tbaa !9
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %99, label %37

37:                                               ; preds = %30
  %38 = load i16, ptr %31, align 2, !tbaa !31
  %39 = icmp eq i16 %38, 0
  br i1 %39, label %110, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds i8, ptr %31, i64 4
  %42 = getelementptr inbounds i8, ptr %31, i64 6
  %43 = load i8, ptr %42, align 1, !tbaa !9
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %96, label %45

45:                                               ; preds = %40
  %46 = load i16, ptr %41, align 2, !tbaa !31
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %103, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds i8, ptr %31, i64 8
  %50 = getelementptr inbounds i8, ptr %31, i64 10
  %51 = load i8, ptr %50, align 1, !tbaa !9
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %96, label %53

53:                                               ; preds = %48
  %54 = load i16, ptr %49, align 2, !tbaa !31
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %103, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds i8, ptr %31, i64 12
  %58 = getelementptr inbounds i8, ptr %31, i64 14
  %59 = load i8, ptr %58, align 1, !tbaa !9
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %96, label %61

61:                                               ; preds = %56
  %62 = load i16, ptr %57, align 2, !tbaa !31
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %103, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds i8, ptr %31, i64 16
  %66 = getelementptr inbounds i8, ptr %31, i64 18
  %67 = load i8, ptr %66, align 1, !tbaa !9
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %96, label %69

69:                                               ; preds = %64
  %70 = load i16, ptr %65, align 2, !tbaa !31
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %103, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds i8, ptr %31, i64 20
  %74 = getelementptr inbounds i8, ptr %31, i64 22
  %75 = load i8, ptr %74, align 1, !tbaa !9
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %96, label %77

77:                                               ; preds = %72
  %78 = load i16, ptr %73, align 2, !tbaa !31
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %103, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds i8, ptr %31, i64 24
  %82 = getelementptr inbounds i8, ptr %31, i64 26
  %83 = load i8, ptr %82, align 1, !tbaa !9
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %96, label %85

85:                                               ; preds = %80
  %86 = load i16, ptr %81, align 2, !tbaa !31
  %87 = icmp eq i16 %86, 0
  br i1 %87, label %103, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds i8, ptr %31, i64 28
  %90 = getelementptr inbounds i8, ptr %31, i64 30
  %91 = load i8, ptr %90, align 1, !tbaa !9
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %88
  %94 = load i16, ptr %89, align 2, !tbaa !31
  %95 = icmp eq i16 %94, 0
  br i1 %95, label %103, label %100

96:                                               ; preds = %88, %80, %72, %64, %56, %48, %40
  %97 = phi i64 [ 28, %88 ], [ 24, %80 ], [ 20, %72 ], [ 16, %64 ], [ 12, %56 ], [ 8, %48 ], [ 4, %40 ]
  %98 = phi ptr [ %89, %88 ], [ %81, %80 ], [ %73, %72 ], [ %65, %64 ], [ %57, %56 ], [ %49, %48 ], [ %41, %40 ]
  store i16 0, ptr %98, align 2, !tbaa !31
  br label %103

99:                                               ; preds = %30
  store i16 0, ptr %31, align 2, !tbaa !31
  br label %110

100:                                              ; preds = %93
  store i32 0, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  %101 = icmp ugt i8 %91, %83
  %102 = select i1 %101, i64 24, i64 28
  br label %107

103:                                              ; preds = %96, %93, %85, %77, %69, %61, %53, %45
  %104 = phi i64 [ %97, %96 ], [ 28, %93 ], [ 24, %85 ], [ 20, %77 ], [ 16, %69 ], [ 12, %61 ], [ 8, %53 ], [ 4, %45 ]
  %105 = phi ptr [ %98, %96 ], [ %89, %93 ], [ %81, %85 ], [ %73, %77 ], [ %65, %69 ], [ %57, %61 ], [ %49, %53 ], [ %41, %45 ]
  %106 = load i32, ptr %105, align 2
  store i32 %106, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  br label %107

107:                                              ; preds = %103, %100
  %108 = phi i32 [ %106, %103 ], [ 0, %100 ]
  %109 = phi i64 [ %104, %103 ], [ %102, %100 ]
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %41, ptr nonnull align 1 %31, i64 %109, i1 false)
  store i32 %108, ptr %31, align 1
  br label %110

110:                                              ; preds = %37, %99, %107
  %111 = getelementptr inbounds %class.RunContextMap, ptr %0, i64 0, i32 1
  store ptr %34, ptr %111, align 8, !tbaa !226
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN13RunContextMapD2Ev(ptr noundef nonnull align 8 dereferenceable(40) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load i32, ptr %0, align 8, !tbaa !152
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = sub i32 %3, %2
  %5 = add i32 %4, -64
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !153
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write) uwtable
define dso_local void @_ZN9PredictorC2Ev(ptr nocapture noundef nonnull writeonly align 4 dereferenceable(4) %0) unnamed_addr #24 align 2 {
  store i32 2048, ptr %0, align 4, !tbaa !230
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_ZN9Predictor6updateEv(ptr nocapture noundef nonnull writeonly align 4 dereferenceable(4) %0) local_unnamed_addr #14 align 2 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE1a acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE1a) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE1a, i32 noundef 256)
          to label %8 unwind label %85

8:                                                ; preds = %7
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE1a, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE1a) #39
  br label %10

10:                                               ; preds = %8, %4, %1
  %11 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a1 acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19, !prof !110

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a1) #39
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a1, i32 noundef 65536)
          to label %17 unwind label %87

17:                                               ; preds = %16
  %18 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a1) #39
  br label %19

19:                                               ; preds = %17, %13, %10
  %20 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a2 acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %28, !prof !110

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a2) #39
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a2, i32 noundef 65536)
          to label %26 unwind label %89

26:                                               ; preds = %25
  %27 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a2, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a2) #39
  br label %28

28:                                               ; preds = %26, %22, %19
  %29 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a3 acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %37, !prof !110

31:                                               ; preds = %28
  %32 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a3) #39
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a3, i32 noundef 65536)
          to label %35 unwind label %91

35:                                               ; preds = %34
  %36 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a3, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a3) #39
  br label %37

37:                                               ; preds = %35, %31, %28
  %38 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a4 acquire, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %46, !prof !110

40:                                               ; preds = %37
  %41 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a4) #39
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a4, i32 noundef 65536)
          to label %44 unwind label %93

44:                                               ; preds = %43
  %45 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a4, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a4) #39
  br label %46

46:                                               ; preds = %44, %40, %37
  %47 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a5 acquire, align 8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %55, !prof !110

49:                                               ; preds = %46
  %50 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a5) #39
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a5, i32 noundef 65536)
          to label %53 unwind label %95

53:                                               ; preds = %52
  %54 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a5, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a5) #39
  br label %55

55:                                               ; preds = %53, %49, %46
  %56 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a6 acquire, align 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %64, !prof !110

58:                                               ; preds = %55
  %59 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a6) #39
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a6, i32 noundef 65536)
          to label %62 unwind label %97

62:                                               ; preds = %61
  %63 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a6, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a6) #39
  br label %64

64:                                               ; preds = %62, %58, %55
  %65 = load i32, ptr @c0, align 4, !tbaa !25
  %66 = load i32, ptr @y, align 4, !tbaa !25
  %67 = shl i32 %65, 1
  %68 = add i32 %66, %67
  store i32 %68, ptr @c0, align 4, !tbaa !25
  %69 = icmp sgt i32 %68, 255
  br i1 %69, label %70, label %99

70:                                               ; preds = %64
  %71 = trunc i32 %68 to i8
  %72 = load i32, ptr @pos, align 4, !tbaa !25
  %73 = add nsw i32 %72, 1
  store i32 %73, ptr @pos, align 4, !tbaa !25
  %74 = load i32, ptr @buf, align 8, !tbaa !20
  %75 = add nsw i32 %74, -1
  %76 = and i32 %75, %72
  %77 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %78 = sext i32 %76 to i64
  %79 = getelementptr inbounds i8, ptr %77, i64 %78
  store i8 %71, ptr %79, align 1, !tbaa !9
  %80 = load i32, ptr @c4, align 4, !tbaa !25
  %81 = shl i32 %80, 8
  %82 = load i32, ptr @c0, align 4, !tbaa !25
  %83 = add i32 %82, -256
  %84 = add i32 %83, %81
  store i32 %84, ptr @c4, align 4, !tbaa !25
  store i32 1, ptr @c0, align 4, !tbaa !25
  br label %99

85:                                               ; preds = %7
  %86 = landingpad { ptr, i32 }
          cleanup
  br label %451

87:                                               ; preds = %16
  %88 = landingpad { ptr, i32 }
          cleanup
  br label %451

89:                                               ; preds = %25
  %90 = landingpad { ptr, i32 }
          cleanup
  br label %451

91:                                               ; preds = %34
  %92 = landingpad { ptr, i32 }
          cleanup
  br label %451

93:                                               ; preds = %43
  %94 = landingpad { ptr, i32 }
          cleanup
  br label %451

95:                                               ; preds = %52
  %96 = landingpad { ptr, i32 }
          cleanup
  br label %451

97:                                               ; preds = %61
  %98 = landingpad { ptr, i32 }
          cleanup
  br label %451

99:                                               ; preds = %70, %64
  %100 = load i32, ptr @bpos, align 4, !tbaa !25
  %101 = add nsw i32 %100, 1
  %102 = and i32 %101, 7
  store i32 %102, ptr @bpos, align 4, !tbaa !25
  %103 = tail call noundef i32 @_Z13contextModel2v()
  %104 = load i32, ptr @c0, align 4, !tbaa !25
  %105 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %106 = sext i32 %103 to i64
  %107 = getelementptr inbounds i16, ptr %105, i64 %106
  %108 = load i16, ptr %107, align 2, !tbaa !31
  %109 = sext i16 %108 to i32
  %110 = load i32, ptr @y, align 4, !tbaa !25
  %111 = mul i32 %110, 65662
  %112 = load i32, ptr @_ZZN9Predictor6updateEvE1a, align 8, !tbaa !69
  %113 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE1a, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %114 = sext i32 %112 to i64
  %115 = getelementptr inbounds i16, ptr %113, i64 %114
  %116 = load <2 x i16>, ptr %115, align 2, !tbaa !31
  %117 = zext <2 x i16> %116 to <2 x i32>
  %118 = insertelement <2 x i32> poison, i32 %111, i64 0
  %119 = shufflevector <2 x i32> %118, <2 x i32> poison, <2 x i32> zeroinitializer
  %120 = sub nsw <2 x i32> %119, %117
  %121 = lshr <2 x i32> %120, <i32 7, i32 7>
  %122 = trunc <2 x i32> %121 to <2 x i16>
  %123 = add <2 x i16> %116, %122
  store <2 x i16> %123, ptr %115, align 2, !tbaa !31
  %124 = and i32 %109, 127
  %125 = add nsw i32 %109, 2048
  %126 = ashr i32 %125, 7
  %127 = mul nsw i32 %104, 33
  %128 = add nsw i32 %126, %127
  store i32 %128, ptr @_ZZN9Predictor6updateEvE1a, align 8, !tbaa !69
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i16, ptr %113, i64 %129
  %131 = load i16, ptr %130, align 2, !tbaa !31
  %132 = zext i16 %131 to i32
  %133 = sub nuw nsw i32 128, %124
  %134 = mul nuw nsw i32 %133, %132
  %135 = add nsw i32 %128, 1
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i16, ptr %113, i64 %136
  %138 = load i16, ptr %137, align 2, !tbaa !31
  %139 = zext i16 %138 to i32
  %140 = mul nuw nsw i32 %124, %139
  %141 = add nuw nsw i32 %140, %134
  %142 = lshr i32 %141, 11
  store i32 %142, ptr %0, align 4, !tbaa !230
  %143 = load i32, ptr @c0, align 4, !tbaa !25
  %144 = load i32, ptr @pos, align 4, !tbaa !25
  %145 = add nsw i32 %144, -1
  %146 = load i32, ptr @buf, align 8, !tbaa !20
  %147 = add nsw i32 %146, -1
  %148 = and i32 %147, %145
  %149 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %150 = sext i32 %148 to i64
  %151 = getelementptr inbounds i8, ptr %149, i64 %150
  %152 = load i8, ptr %151, align 1, !tbaa !9
  %153 = zext i8 %152 to i32
  %154 = shl nuw nsw i32 %153, 8
  %155 = add nsw i32 %154, %143
  %156 = load i16, ptr %107, align 2, !tbaa !31
  %157 = sext i16 %156 to i32
  %158 = load i32, ptr @y, align 4, !tbaa !25
  %159 = mul i32 %158, 65662
  %160 = load i32, ptr @_ZZN9Predictor6updateEvE2a1, align 8, !tbaa !69
  %161 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE2a1, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %162 = sext i32 %160 to i64
  %163 = getelementptr inbounds i16, ptr %161, i64 %162
  %164 = load <2 x i16>, ptr %163, align 2, !tbaa !31
  %165 = zext <2 x i16> %164 to <2 x i32>
  %166 = insertelement <2 x i32> poison, i32 %159, i64 0
  %167 = shufflevector <2 x i32> %166, <2 x i32> poison, <2 x i32> zeroinitializer
  %168 = sub nsw <2 x i32> %167, %165
  %169 = lshr <2 x i32> %168, <i32 7, i32 7>
  %170 = trunc <2 x i32> %169 to <2 x i16>
  %171 = add <2 x i16> %164, %170
  store <2 x i16> %171, ptr %163, align 2, !tbaa !31
  %172 = and i32 %157, 127
  %173 = add nsw i32 %157, 2048
  %174 = ashr i32 %173, 7
  %175 = mul nsw i32 %155, 33
  %176 = add nsw i32 %174, %175
  store i32 %176, ptr @_ZZN9Predictor6updateEvE2a1, align 8, !tbaa !69
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i16, ptr %161, i64 %177
  %179 = load i16, ptr %178, align 2, !tbaa !31
  %180 = zext i16 %179 to i32
  %181 = sub nuw nsw i32 128, %172
  %182 = mul nuw nsw i32 %181, %180
  %183 = add nsw i32 %176, 1
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i16, ptr %161, i64 %184
  %186 = load i16, ptr %185, align 2, !tbaa !31
  %187 = zext i16 %186 to i32
  %188 = mul nuw nsw i32 %172, %187
  %189 = add nuw nsw i32 %188, %182
  %190 = lshr i32 %189, 11
  %191 = load i8, ptr %151, align 1, !tbaa !9
  %192 = zext i8 %191 to i32
  %193 = add nsw i32 %144, -2
  %194 = and i32 %147, %193
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8, ptr %149, i64 %195
  %197 = load i8, ptr %196, align 1, !tbaa !9
  %198 = zext i8 %197 to i32
  %199 = mul i32 %192, 200002979
  %200 = mul i32 %198, 30005491
  %201 = add i32 %199, -230011545
  %202 = add i32 %201, %200
  %203 = lshr i32 %202, 9
  %204 = lshr i32 %192, 2
  %205 = lshr i32 %198, 3
  %206 = xor i32 %205, %204
  %207 = xor i32 %206, %203
  %208 = xor i32 %207, %202
  %209 = and i32 %208, 65535
  %210 = xor i32 %143, %209
  %211 = xor i32 %210, 65535
  %212 = load i16, ptr %107, align 2, !tbaa !31
  %213 = sext i16 %212 to i32
  %214 = load i32, ptr @_ZZN9Predictor6updateEvE2a2, align 8, !tbaa !69
  %215 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE2a2, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %216 = sext i32 %214 to i64
  %217 = getelementptr inbounds i16, ptr %215, i64 %216
  %218 = load <2 x i16>, ptr %217, align 2, !tbaa !31
  %219 = zext <2 x i16> %218 to <2 x i32>
  %220 = sub nsw <2 x i32> %167, %219
  %221 = lshr <2 x i32> %220, <i32 7, i32 7>
  %222 = trunc <2 x i32> %221 to <2 x i16>
  %223 = add <2 x i16> %218, %222
  store <2 x i16> %223, ptr %217, align 2, !tbaa !31
  %224 = and i32 %213, 127
  %225 = add nsw i32 %213, 2048
  %226 = ashr i32 %225, 7
  %227 = mul nsw i32 %211, 33
  %228 = add nsw i32 %227, %226
  store i32 %228, ptr @_ZZN9Predictor6updateEvE2a2, align 8, !tbaa !69
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds i16, ptr %215, i64 %229
  %231 = load i16, ptr %230, align 2, !tbaa !31
  %232 = zext i16 %231 to i32
  %233 = sub nuw nsw i32 128, %224
  %234 = mul nuw nsw i32 %233, %232
  %235 = add nsw i32 %228, 1
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds i16, ptr %215, i64 %236
  %238 = load i16, ptr %237, align 2, !tbaa !31
  %239 = zext i16 %238 to i32
  %240 = mul nuw nsw i32 %224, %239
  %241 = add nuw nsw i32 %240, %234
  %242 = lshr i32 %241, 11
  %243 = load i8, ptr %151, align 1, !tbaa !9
  %244 = zext i8 %243 to i32
  %245 = load i8, ptr %196, align 1, !tbaa !9
  %246 = zext i8 %245 to i32
  %247 = add nsw i32 %144, -3
  %248 = and i32 %147, %247
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds i8, ptr %149, i64 %249
  %251 = load i8, ptr %250, align 1, !tbaa !9
  %252 = zext i8 %251 to i32
  %253 = mul i32 %244, 200002979
  %254 = mul i32 %246, 30005491
  %255 = mul i32 %252, 50004239
  %256 = add i32 %253, -180007306
  %257 = add i32 %256, %254
  %258 = add i32 %257, %255
  %259 = lshr i32 %258, 9
  %260 = lshr i32 %244, 2
  %261 = lshr i32 %246, 3
  %262 = lshr i32 %252, 4
  %263 = xor i32 %261, %260
  %264 = xor i32 %263, %262
  %265 = xor i32 %264, %259
  %266 = xor i32 %265, %258
  %267 = and i32 %266, 65535
  %268 = xor i32 %267, %143
  %269 = load i16, ptr %107, align 2, !tbaa !31
  %270 = sext i16 %269 to i32
  %271 = load i32, ptr @_ZZN9Predictor6updateEvE2a3, align 8, !tbaa !69
  %272 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE2a3, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %273 = sext i32 %271 to i64
  %274 = getelementptr inbounds i16, ptr %272, i64 %273
  %275 = load <2 x i16>, ptr %274, align 2, !tbaa !31
  %276 = zext <2 x i16> %275 to <2 x i32>
  %277 = sub nsw <2 x i32> %167, %276
  %278 = lshr <2 x i32> %277, <i32 7, i32 7>
  %279 = trunc <2 x i32> %278 to <2 x i16>
  %280 = add <2 x i16> %275, %279
  store <2 x i16> %280, ptr %274, align 2, !tbaa !31
  %281 = and i32 %270, 127
  %282 = add nsw i32 %270, 2048
  %283 = ashr i32 %282, 7
  %284 = mul nsw i32 %268, 33
  %285 = add nsw i32 %284, %283
  store i32 %285, ptr @_ZZN9Predictor6updateEvE2a3, align 8, !tbaa !69
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds i16, ptr %272, i64 %286
  %288 = load i16, ptr %287, align 2, !tbaa !31
  %289 = zext i16 %288 to i32
  %290 = sub nuw nsw i32 128, %281
  %291 = mul nuw nsw i32 %290, %289
  %292 = add nsw i32 %285, 1
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds i16, ptr %272, i64 %293
  %295 = load i16, ptr %294, align 2, !tbaa !31
  %296 = zext i16 %295 to i32
  %297 = mul nuw nsw i32 %281, %296
  %298 = add nuw nsw i32 %297, %291
  %299 = lshr i32 %298, 11
  %300 = add i32 %103, 2
  %301 = add i32 %300, %190
  %302 = add i32 %301, %242
  %303 = add i32 %302, %299
  %304 = ashr i32 %303, 2
  %305 = load i8, ptr %151, align 1, !tbaa !9
  %306 = zext i8 %305 to i32
  %307 = shl nuw nsw i32 %306, 8
  %308 = add nsw i32 %307, %143
  %309 = zext i32 %142 to i64
  %310 = getelementptr inbounds i16, ptr %105, i64 %309
  %311 = load i16, ptr %310, align 2, !tbaa !31
  %312 = sext i16 %311 to i32
  %313 = load i32, ptr @_ZZN9Predictor6updateEvE2a4, align 8, !tbaa !69
  %314 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE2a4, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %315 = sext i32 %313 to i64
  %316 = getelementptr inbounds i16, ptr %314, i64 %315
  %317 = load <2 x i16>, ptr %316, align 2, !tbaa !31
  %318 = zext <2 x i16> %317 to <2 x i32>
  %319 = sub nsw <2 x i32> %167, %318
  %320 = lshr <2 x i32> %319, <i32 7, i32 7>
  %321 = trunc <2 x i32> %320 to <2 x i16>
  %322 = add <2 x i16> %317, %321
  store <2 x i16> %322, ptr %316, align 2, !tbaa !31
  %323 = and i32 %312, 127
  %324 = add nsw i32 %312, 2048
  %325 = ashr i32 %324, 7
  %326 = mul nsw i32 %308, 33
  %327 = add nsw i32 %325, %326
  store i32 %327, ptr @_ZZN9Predictor6updateEvE2a4, align 8, !tbaa !69
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds i16, ptr %314, i64 %328
  %330 = load i16, ptr %329, align 2, !tbaa !31
  %331 = zext i16 %330 to i32
  %332 = sub nuw nsw i32 128, %323
  %333 = mul nuw nsw i32 %332, %331
  %334 = add nsw i32 %327, 1
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds i16, ptr %314, i64 %335
  %337 = load i16, ptr %336, align 2, !tbaa !31
  %338 = zext i16 %337 to i32
  %339 = mul nuw nsw i32 %323, %338
  %340 = add nuw nsw i32 %339, %333
  %341 = lshr i32 %340, 11
  %342 = load i8, ptr %151, align 1, !tbaa !9
  %343 = zext i8 %342 to i32
  %344 = load i8, ptr %196, align 1, !tbaa !9
  %345 = zext i8 %344 to i32
  %346 = mul i32 %343, 200002979
  %347 = mul i32 %345, 30005491
  %348 = add i32 %346, -230011545
  %349 = add i32 %348, %347
  %350 = lshr i32 %349, 9
  %351 = lshr i32 %343, 2
  %352 = lshr i32 %345, 3
  %353 = xor i32 %352, %351
  %354 = xor i32 %353, %350
  %355 = xor i32 %354, %349
  %356 = and i32 %355, 65535
  %357 = xor i32 %143, %356
  %358 = xor i32 %357, 65535
  %359 = load i16, ptr %310, align 2, !tbaa !31
  %360 = sext i16 %359 to i32
  %361 = load i32, ptr @_ZZN9Predictor6updateEvE2a5, align 8, !tbaa !69
  %362 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE2a5, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %363 = sext i32 %361 to i64
  %364 = getelementptr inbounds i16, ptr %362, i64 %363
  %365 = load <2 x i16>, ptr %364, align 2, !tbaa !31
  %366 = zext <2 x i16> %365 to <2 x i32>
  %367 = sub nsw <2 x i32> %167, %366
  %368 = lshr <2 x i32> %367, <i32 7, i32 7>
  %369 = trunc <2 x i32> %368 to <2 x i16>
  %370 = add <2 x i16> %365, %369
  store <2 x i16> %370, ptr %364, align 2, !tbaa !31
  %371 = and i32 %360, 127
  %372 = add nsw i32 %360, 2048
  %373 = ashr i32 %372, 7
  %374 = mul nsw i32 %358, 33
  %375 = add nsw i32 %374, %373
  store i32 %375, ptr @_ZZN9Predictor6updateEvE2a5, align 8, !tbaa !69
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds i16, ptr %362, i64 %376
  %378 = load i16, ptr %377, align 2, !tbaa !31
  %379 = zext i16 %378 to i32
  %380 = sub nuw nsw i32 128, %371
  %381 = mul nuw nsw i32 %380, %379
  %382 = add nsw i32 %375, 1
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds i16, ptr %362, i64 %383
  %385 = load i16, ptr %384, align 2, !tbaa !31
  %386 = zext i16 %385 to i32
  %387 = mul nuw nsw i32 %371, %386
  %388 = add nuw nsw i32 %387, %381
  %389 = lshr i32 %388, 11
  %390 = load i8, ptr %151, align 1, !tbaa !9
  %391 = zext i8 %390 to i32
  %392 = load i8, ptr %196, align 1, !tbaa !9
  %393 = zext i8 %392 to i32
  %394 = load i8, ptr %250, align 1, !tbaa !9
  %395 = zext i8 %394 to i32
  %396 = mul i32 %391, 200002979
  %397 = mul i32 %393, 30005491
  %398 = mul i32 %395, 50004239
  %399 = add i32 %396, -180007306
  %400 = add i32 %399, %397
  %401 = add i32 %400, %398
  %402 = lshr i32 %401, 9
  %403 = lshr i32 %391, 2
  %404 = lshr i32 %393, 3
  %405 = lshr i32 %395, 4
  %406 = xor i32 %404, %403
  %407 = xor i32 %406, %405
  %408 = xor i32 %407, %402
  %409 = xor i32 %408, %401
  %410 = and i32 %409, 65535
  %411 = xor i32 %410, %143
  %412 = load i16, ptr %310, align 2, !tbaa !31
  %413 = sext i16 %412 to i32
  %414 = load i32, ptr @_ZZN9Predictor6updateEvE2a6, align 8, !tbaa !69
  %415 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE2a6, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %416 = sext i32 %414 to i64
  %417 = getelementptr inbounds i16, ptr %415, i64 %416
  %418 = load <2 x i16>, ptr %417, align 2, !tbaa !31
  %419 = zext <2 x i16> %418 to <2 x i32>
  %420 = sub nsw <2 x i32> %167, %419
  %421 = lshr <2 x i32> %420, <i32 7, i32 7>
  %422 = trunc <2 x i32> %421 to <2 x i16>
  %423 = add <2 x i16> %418, %422
  store <2 x i16> %423, ptr %417, align 2, !tbaa !31
  %424 = and i32 %413, 127
  %425 = add nsw i32 %413, 2048
  %426 = ashr i32 %425, 7
  %427 = mul nsw i32 %411, 33
  %428 = add nsw i32 %427, %426
  store i32 %428, ptr @_ZZN9Predictor6updateEvE2a6, align 8, !tbaa !69
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds i16, ptr %415, i64 %429
  %431 = load i16, ptr %430, align 2, !tbaa !31
  %432 = zext i16 %431 to i32
  %433 = sub nuw nsw i32 128, %424
  %434 = mul nuw nsw i32 %433, %432
  %435 = add nsw i32 %428, 1
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds i16, ptr %415, i64 %436
  %438 = load i16, ptr %437, align 2, !tbaa !31
  %439 = zext i16 %438 to i32
  %440 = mul nuw nsw i32 %424, %439
  %441 = add nuw nsw i32 %440, %434
  %442 = lshr i32 %441, 11
  %443 = add nuw nsw i32 %142, 2
  %444 = add nuw nsw i32 %443, %341
  %445 = add nuw nsw i32 %444, %389
  %446 = add nuw nsw i32 %445, %442
  %447 = lshr i32 %446, 2
  %448 = add nsw i32 %304, 1
  %449 = add nsw i32 %448, %447
  %450 = ashr i32 %449, 1
  store i32 %450, ptr %0, align 4, !tbaa !230
  ret void

451:                                              ; preds = %97, %95, %93, %91, %89, %87, %85
  %452 = phi ptr [ @_ZGVZN9Predictor6updateEvE2a6, %97 ], [ @_ZGVZN9Predictor6updateEvE2a5, %95 ], [ @_ZGVZN9Predictor6updateEvE2a4, %93 ], [ @_ZGVZN9Predictor6updateEvE2a3, %91 ], [ @_ZGVZN9Predictor6updateEvE2a2, %89 ], [ @_ZGVZN9Predictor6updateEvE2a1, %87 ], [ @_ZGVZN9Predictor6updateEvE1a, %85 ]
  %453 = phi { ptr, i32 } [ %98, %97 ], [ %96, %95 ], [ %94, %93 ], [ %92, %91 ], [ %90, %89 ], [ %88, %87 ], [ %86, %85 ]
  tail call void @__cxa_guard_abort(ptr nonnull %452) #39
  resume { ptr, i32 } %453
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN4APM1D2Ev(ptr noundef nonnull align 8 dereferenceable(32) %0) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 8, !tbaa !74
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %5 = shl i32 %3, 1
  %6 = sub i32 %4, %5
  store i32 %6, ptr @programChecker, align 8, !tbaa !13
  %7 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %8 = icmp sgt i32 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  store i32 %6, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %10

10:                                               ; preds = %1, %9
  %11 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !75
  tail call void @free(ptr noundef %12) #39
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_ZN7EncoderC2E4ModeP8_IO_FILE(ptr nocapture noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %1, ptr noundef %2) unnamed_addr #25 align 2 {
  store i32 2048, ptr %0, align 8, !tbaa !230
  %4 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 1
  store i32 %1, ptr %4, align 4, !tbaa !232
  %5 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 2
  store ptr %2, ptr %5, align 8, !tbaa !235
  %6 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 3
  store i32 0, ptr %6, align 8, !tbaa !236
  %7 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 4
  store i32 -1, ptr %7, align 4, !tbaa !237
  %8 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 5
  store i32 0, ptr %8, align 8, !tbaa !238
  %9 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 6
  store ptr null, ptr %9, align 8, !tbaa !239
  %10 = load i32, ptr @level, align 4, !tbaa !25
  %11 = icmp sgt i32 %10, 0
  %12 = icmp eq i32 %1, 1
  %13 = and i1 %12, %11
  br i1 %13, label %15, label %14

14:                                               ; preds = %15, %3
  br label %34

15:                                               ; preds = %3
  %16 = tail call i32 @getc(ptr noundef %2)
  %17 = and i32 %16, 255
  store i32 %17, ptr %8, align 8, !tbaa !238
  %18 = shl nuw nsw i32 %17, 8
  %19 = load ptr, ptr %5, align 8, !tbaa !235
  %20 = tail call i32 @getc(ptr noundef %19)
  %21 = and i32 %20, 255
  %22 = or i32 %21, %18
  store i32 %22, ptr %8, align 8, !tbaa !238
  %23 = shl nuw nsw i32 %22, 8
  %24 = load ptr, ptr %5, align 8, !tbaa !235
  %25 = tail call i32 @getc(ptr noundef %24)
  %26 = and i32 %25, 255
  %27 = or i32 %26, %23
  store i32 %27, ptr %8, align 8, !tbaa !238
  %28 = shl nuw i32 %27, 8
  %29 = load ptr, ptr %5, align 8, !tbaa !235
  %30 = tail call i32 @getc(ptr noundef %29)
  %31 = and i32 %30, 255
  %32 = or i32 %31, %28
  store i32 %32, ptr %8, align 8, !tbaa !238
  br label %14

33:                                               ; preds = %34
  ret void

34:                                               ; preds = %34, %14
  %35 = phi i64 [ 0, %14 ], [ %49, %34 ]
  %36 = trunc i64 %35 to i16
  %37 = shl i16 %36, 1
  %38 = or i16 %37, 3
  %39 = udiv i16 16384, %38
  %40 = zext i16 %39 to i32
  %41 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %35
  store i32 %40, ptr %41, align 8, !tbaa !25
  %42 = or i64 %35, 1
  %43 = trunc i64 %42 to i16
  %44 = shl i16 %43, 1
  %45 = add nuw nsw i16 %44, 3
  %46 = udiv i16 16384, %45
  %47 = zext i16 %46 to i32
  %48 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %42
  store i32 %47, ptr %48, align 4, !tbaa !25
  %49 = add nuw nsw i64 %35, 2
  %50 = icmp eq i64 %49, 1024
  br i1 %50, label %33, label %34, !llvm.loop !240
}

; Function Attrs: nofree nounwind
declare noundef i32 @getc(ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_ZN7Encoder5flushEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(40) %0) local_unnamed_addr #19 align 2 {
  %2 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 4, !tbaa !232
  %4 = icmp eq i32 %3, 0
  %5 = load i32, ptr @level, align 4
  %6 = icmp sgt i32 %5, 0
  %7 = select i1 %4, i1 %6, i1 false
  br i1 %7, label %8, label %15

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 3
  %10 = load i32, ptr %9, align 8, !tbaa !236
  %11 = lshr i32 %10, 24
  %12 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !235
  %14 = tail call i32 @putc(i32 noundef %11, ptr noundef %13)
  br label %15

15:                                               ; preds = %8, %1
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @putc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: uwtable
define dso_local noundef i32 @_Z6detectP8_IO_FILEi8Filetype(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #5 personality ptr @__gxx_personality_v0 {
  %4 = alloca [32 x i8], align 16
  %5 = tail call i64 @ftell(ptr noundef %0)
  %6 = load i32, ptr @programChecker, align 8, !tbaa !13
  %7 = add nsw i32 %6, 1024
  store i32 %7, ptr @programChecker, align 8, !tbaa !13
  %8 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %9 = icmp sgt i32 %7, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %3
  store i32 %7, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %11

11:                                               ; preds = %10, %3
  %12 = phi i32 [ %7, %10 ], [ %8, %3 ]
  %13 = tail call noalias dereferenceable_or_null(1024) ptr @calloc(i64 noundef 1024, i64 noundef 1) #41
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %16, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %16, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

17:                                               ; preds = %11
  %18 = add nsw i32 %6, 2048
  store i32 %18, ptr @programChecker, align 8, !tbaa !13
  %19 = icmp sgt i32 %18, %12
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  store i32 %18, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %21

21:                                               ; preds = %20, %17
  %22 = tail call noalias dereferenceable_or_null(1024) ptr @calloc(i64 noundef 1024, i64 noundef 1) #41
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  %25 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %25, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %25, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %26 unwind label %38

26:                                               ; preds = %24
  unreachable

27:                                               ; preds = %21
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #39
  %28 = icmp sgt i32 %1, 0
  br i1 %28, label %29, label %550

29:                                               ; preds = %27
  %30 = icmp eq i32 %2, 1
  %31 = icmp ne i32 %2, 1
  %32 = add i32 %2, -2
  %33 = icmp ult i32 %32, 3
  %34 = icmp eq i32 %2, 6
  %35 = icmp eq i32 %2, 7
  %36 = icmp ne i32 %2, 8
  %37 = icmp eq i32 %2, 8
  br label %46

38:                                               ; preds = %24
  %39 = landingpad { ptr, i32 }
          cleanup
  %40 = load i32, ptr @programChecker, align 8, !tbaa !13
  %41 = add i32 %40, -1024
  store i32 %41, ptr @programChecker, align 8, !tbaa !13
  %42 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %43 = icmp sgt i32 %41, %42
  br i1 %43, label %44, label %45

44:                                               ; preds = %38
  store i32 %41, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %45

45:                                               ; preds = %38, %44
  tail call void @free(ptr noundef nonnull %13) #39
  resume { ptr, i32 } %39

46:                                               ; preds = %29, %543
  %47 = phi i32 [ 0, %29 ], [ %78, %543 ]
  %48 = phi i32 [ 0, %29 ], [ %536, %543 ]
  %49 = phi i32 [ 0, %29 ], [ %535, %543 ]
  %50 = phi i32 [ 0, %29 ], [ %544, %543 ]
  %51 = phi i32 [ 0, %29 ], [ %492, %543 ]
  %52 = phi i32 [ 0, %29 ], [ %491, %543 ]
  %53 = phi i32 [ 0, %29 ], [ %490, %543 ]
  %54 = phi i32 [ -1, %29 ], [ %489, %543 ]
  %55 = phi i32 [ 0, %29 ], [ %488, %543 ]
  %56 = phi i32 [ 0, %29 ], [ %131, %543 ]
  %57 = phi i32 [ 0, %29 ], [ %130, %543 ]
  %58 = phi i32 [ 0, %29 ], [ %129, %543 ]
  %59 = phi i32 [ 0, %29 ], [ %128, %543 ]
  %60 = phi i32 [ 0, %29 ], [ %389, %543 ]
  %61 = phi i32 [ 0, %29 ], [ %388, %543 ]
  %62 = phi i32 [ 0, %29 ], [ %387, %543 ]
  %63 = phi i32 [ 0, %29 ], [ %386, %543 ]
  %64 = phi i32 [ 0, %29 ], [ %385, %543 ]
  %65 = phi i32 [ 0, %29 ], [ %534, %543 ]
  %66 = phi i32 [ 0, %29 ], [ %384, %543 ]
  %67 = phi i32 [ -1, %29 ], [ %287, %543 ]
  %68 = phi i32 [ 0, %29 ], [ %286, %543 ]
  %69 = phi i32 [ 0, %29 ], [ %285, %543 ]
  %70 = phi i32 [ 0, %29 ], [ %284, %543 ]
  %71 = phi i32 [ 0, %29 ], [ %283, %543 ]
  %72 = phi i32 [ 0, %29 ], [ %282, %543 ]
  %73 = phi i32 [ 0, %29 ], [ %281, %543 ]
  %74 = tail call i32 @getc(ptr noundef %0)
  %75 = icmp eq i32 %74, -1
  br i1 %75, label %550, label %76

76:                                               ; preds = %46
  %77 = shl i32 %47, 8
  %78 = or i32 %74, %77
  %79 = icmp eq i32 %59, 0
  %80 = icmp ugt i32 %50, 2
  %81 = select i1 %79, i1 %80, i1 false
  br i1 %81, label %82, label %86

82:                                               ; preds = %76
  %83 = and i32 %78, -16
  %84 = icmp eq i32 %83, -2555936
  %85 = add nuw nsw i32 %50, 2
  br i1 %84, label %99, label %127

86:                                               ; preds = %76
  br i1 %79, label %127, label %87

87:                                               ; preds = %86
  %88 = icmp eq i32 %56, %50
  br i1 %88, label %89, label %99

89:                                               ; preds = %87
  %90 = and i32 %78, -1048576
  %91 = icmp eq i32 %90, -2097152
  %92 = and i32 %78, -65536
  %93 = icmp eq i32 %92, -131072
  %94 = or i1 %91, %93
  br i1 %94, label %95, label %99

95:                                               ; preds = %89
  %96 = and i32 %78, 65535
  %97 = add nuw i32 %50, 2
  %98 = add i32 %97, %96
  br label %99

99:                                               ; preds = %82, %89, %95, %87
  %100 = phi i32 [ %59, %95 ], [ %59, %87 ], [ %59, %89 ], [ %50, %82 ]
  %101 = phi i32 [ %98, %95 ], [ %56, %87 ], [ %50, %89 ], [ %85, %82 ]
  %102 = icmp slt i32 %101, %50
  %103 = sub nsw i32 %50, %100
  %104 = icmp slt i32 %103, 65536
  %105 = select i1 %102, i1 %104, i1 false
  %106 = icmp ugt i32 %47, -16777217
  %107 = select i1 %105, i1 %106, i1 false
  %108 = and i32 %78, -16776961
  %109 = icmp eq i32 %108, -1073741816
  %110 = select i1 %107, i1 %109, i1 false
  %111 = select i1 %110, i32 %50, i32 %58
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %127, label %113

113:                                              ; preds = %99
  %114 = icmp sgt i32 %111, %100
  %115 = select i1 %114, i1 %104, i1 false
  %116 = sub nsw i32 %50, %111
  %117 = icmp slt i32 %116, 4096
  %118 = select i1 %115, i1 %117, i1 false
  %119 = and i32 %78, 65535
  %120 = icmp eq i32 %119, 65498
  %121 = select i1 %118, i1 %120, i1 false
  br i1 %121, label %122, label %127

122:                                              ; preds = %113
  br i1 %30, label %127, label %123

123:                                              ; preds = %122
  %124 = zext i32 %100 to i64
  %125 = add i64 %5, -3
  %126 = add i64 %125, %124
  br label %546

127:                                              ; preds = %82, %99, %113, %122, %86
  %128 = phi i32 [ %100, %122 ], [ %100, %113 ], [ %100, %99 ], [ 0, %86 ], [ 0, %82 ]
  %129 = phi i32 [ %111, %122 ], [ %111, %113 ], [ 0, %99 ], [ %58, %86 ], [ %58, %82 ]
  %130 = phi i32 [ %50, %122 ], [ %57, %113 ], [ %57, %99 ], [ %57, %86 ], [ %57, %82 ]
  %131 = phi i32 [ %101, %122 ], [ %101, %113 ], [ %101, %99 ], [ %56, %86 ], [ %56, %82 ]
  %132 = icmp eq i32 %130, 0
  %133 = select i1 %31, i1 true, i1 %132
  %134 = icmp sle i32 %50, %130
  %135 = select i1 %133, i1 true, i1 %134
  %136 = and i32 %78, 65280
  %137 = icmp ne i32 %136, 65280
  %138 = select i1 %135, i1 true, i1 %137
  %139 = and i32 %74, 255
  %140 = icmp eq i32 %139, 0
  %141 = or i1 %140, %138
  %142 = and i32 %74, 248
  %143 = icmp eq i32 %142, 208
  %144 = or i1 %143, %141
  br i1 %144, label %145, label %550

145:                                              ; preds = %127
  %146 = and i32 %78, 65535
  %147 = icmp eq i32 %146, 16973
  %148 = select i1 %147, i32 %50, i32 %73
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %280, label %150

150:                                              ; preds = %145
  %151 = sub nsw i32 %50, %148
  switch i32 %151, label %172 [
    i32 4, label %152
    i32 12, label %162
  ]

152:                                              ; preds = %150
  %153 = lshr i32 %78, 24
  %154 = lshr i32 %78, 8
  %155 = and i32 %154, 65280
  %156 = shl i32 %78, 8
  %157 = and i32 %156, 16711680
  %158 = shl i32 %74, 24
  %159 = or i32 %153, %158
  %160 = or i32 %159, %155
  %161 = or i32 %160, %157
  br label %177

162:                                              ; preds = %150
  %163 = lshr i32 %78, 24
  %164 = lshr i32 %78, 8
  %165 = and i32 %164, 65280
  %166 = shl i32 %78, 8
  %167 = and i32 %166, 16711680
  %168 = shl i32 %74, 24
  %169 = or i32 %163, %168
  %170 = or i32 %169, %165
  %171 = or i32 %170, %167
  br label %177

172:                                              ; preds = %150
  %173 = icmp eq i32 %151, 16
  %174 = icmp ne i32 %78, 671088640
  %175 = select i1 %173, i1 %174, i1 false
  br i1 %175, label %176, label %177

176:                                              ; preds = %172
  br label %177

177:                                              ; preds = %162, %152, %176, %172
  %178 = phi i32 [ %68, %176 ], [ %68, %172 ], [ %68, %152 ], [ %171, %162 ]
  %179 = phi i32 [ 0, %176 ], [ %148, %172 ], [ %148, %152 ], [ %148, %162 ]
  %180 = phi i32 [ 0, %176 ], [ %72, %172 ], [ %161, %152 ], [ %72, %162 ]
  %181 = phi i32 [ 0, %176 ], [ %71, %172 ], [ %71, %152 ], [ %71, %162 ]
  %182 = phi i32 [ -1, %176 ], [ %67, %172 ], [ %67, %152 ], [ %67, %162 ]
  %183 = sub nsw i32 %50, %179
  %184 = icmp eq i32 %183, 20
  br i1 %184, label %185, label %197

185:                                              ; preds = %177
  %186 = lshr i32 %78, 24
  %187 = lshr i32 %78, 8
  %188 = and i32 %187, 65280
  %189 = or i32 %188, %186
  %190 = shl i32 %78, 8
  %191 = and i32 %190, 16711680
  %192 = or i32 %189, %191
  %193 = shl i32 %74, 24
  %194 = or i32 %192, %193
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %185
  br label %197

197:                                              ; preds = %185, %196, %177
  %198 = phi i32 [ 0, %196 ], [ %179, %185 ], [ %179, %177 ]
  %199 = phi i32 [ 0, %196 ], [ %180, %185 ], [ %180, %177 ]
  %200 = phi i32 [ 0, %196 ], [ %181, %185 ], [ %181, %177 ]
  %201 = phi i32 [ 0, %196 ], [ %194, %185 ], [ %70, %177 ]
  %202 = phi i32 [ -1, %196 ], [ %182, %185 ], [ %182, %177 ]
  %203 = sub nsw i32 %50, %198
  %204 = icmp eq i32 %203, 24
  br i1 %204, label %205, label %217

205:                                              ; preds = %197
  %206 = lshr i32 %78, 24
  %207 = lshr i32 %78, 8
  %208 = and i32 %207, 65280
  %209 = or i32 %208, %206
  %210 = shl i32 %78, 8
  %211 = and i32 %210, 16711680
  %212 = or i32 %209, %211
  %213 = shl i32 %74, 24
  %214 = or i32 %212, %213
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %205
  br label %217

217:                                              ; preds = %205, %216, %197
  %218 = phi i32 [ 0, %216 ], [ %198, %205 ], [ %198, %197 ]
  %219 = phi i32 [ 0, %216 ], [ %199, %205 ], [ %199, %197 ]
  %220 = phi i32 [ 0, %216 ], [ %200, %205 ], [ %200, %197 ]
  %221 = phi i32 [ 0, %216 ], [ %214, %205 ], [ %69, %197 ]
  %222 = phi i32 [ -1, %216 ], [ %202, %205 ], [ %202, %197 ]
  %223 = sub nsw i32 %50, %218
  %224 = icmp eq i32 %223, 27
  %225 = select i1 %224, i32 %74, i32 %220
  %226 = icmp eq i32 %223, 31
  br i1 %226, label %227, label %230

227:                                              ; preds = %217
  %228 = icmp eq i32 %78, 0
  br i1 %228, label %230, label %229

229:                                              ; preds = %227
  br label %230

230:                                              ; preds = %227, %229, %217
  %231 = phi i32 [ 0, %229 ], [ %218, %227 ], [ %218, %217 ]
  %232 = phi i32 [ 0, %229 ], [ %219, %227 ], [ %219, %217 ]
  %233 = phi i32 [ 0, %229 ], [ %225, %227 ], [ %225, %217 ]
  %234 = phi i32 [ -1, %229 ], [ 0, %227 ], [ %222, %217 ]
  br i1 %33, label %235, label %258

235:                                              ; preds = %230
  %236 = icmp eq i32 %233, 4
  %237 = icmp eq i32 %233, 8
  %238 = or i1 %236, %237
  %239 = icmp eq i32 %233, 24
  %240 = or i1 %239, %238
  %241 = icmp eq i32 %234, 0
  %242 = select i1 %240, i1 %241, i1 false
  br i1 %242, label %243, label %258

243:                                              ; preds = %235
  %244 = mul nsw i32 %221, %201
  br i1 %236, label %245, label %248

245:                                              ; preds = %243
  %246 = ashr i32 %244, 1
  %247 = add nsw i32 %246, %178
  br label %254

248:                                              ; preds = %243
  %249 = add nsw i32 %244, %178
  %250 = select i1 %237, i32 %249, i32 %232
  br i1 %239, label %251, label %254

251:                                              ; preds = %248
  %252 = mul nsw i32 %244, 3
  %253 = add nsw i32 %252, %178
  br label %254

254:                                              ; preds = %245, %251, %248
  %255 = phi i32 [ %250, %248 ], [ %253, %251 ], [ %247, %245 ]
  %256 = sext i32 %255 to i64
  %257 = add nsw i64 %5, %256
  br label %546

258:                                              ; preds = %230, %235
  %259 = icmp eq i32 %233, 4
  %260 = icmp eq i32 %234, 0
  %261 = select i1 %259, i1 %260, i1 false
  br i1 %261, label %262, label %266

262:                                              ; preds = %258
  %263 = sext i32 %231 to i64
  %264 = add i64 %5, -1
  %265 = add i64 %264, %263
  br label %546

266:                                              ; preds = %258
  %267 = icmp eq i32 %233, 8
  %268 = select i1 %267, i1 %260, i1 false
  br i1 %268, label %269, label %273

269:                                              ; preds = %266
  %270 = sext i32 %231 to i64
  %271 = add i64 %5, -1
  %272 = add i64 %271, %270
  br label %546

273:                                              ; preds = %266
  %274 = icmp eq i32 %233, 24
  %275 = select i1 %274, i1 %260, i1 false
  br i1 %275, label %276, label %280

276:                                              ; preds = %273
  %277 = sext i32 %231 to i64
  %278 = add i64 %5, -1
  %279 = add i64 %278, %277
  br label %546

280:                                              ; preds = %273, %145
  %281 = phi i32 [ %231, %273 ], [ 0, %145 ]
  %282 = phi i32 [ %232, %273 ], [ %72, %145 ]
  %283 = phi i32 [ %233, %273 ], [ %71, %145 ]
  %284 = phi i32 [ %201, %273 ], [ %70, %145 ]
  %285 = phi i32 [ %221, %273 ], [ %69, %145 ]
  %286 = phi i32 [ %178, %273 ], [ %68, %145 ]
  %287 = phi i32 [ %234, %273 ], [ %67, %145 ]
  %288 = and i32 %78, 16777215
  %289 = icmp eq i32 %288, 5256458
  %290 = select i1 %289, i32 %50, i32 %66
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %383, label %292

292:                                              ; preds = %280
  %293 = sub nsw i32 %50, %290
  %294 = icmp eq i32 %293, 1
  %295 = icmp eq i32 %74, 35
  %296 = and i1 %295, %294
  %297 = select i1 %296, i32 1, i32 %64
  %298 = icmp eq i32 %297, 0
  %299 = icmp eq i32 %74, 32
  %300 = and i1 %299, %298
  %301 = icmp eq i32 %63, 0
  %302 = select i1 %300, i1 %301, i1 false
  %303 = icmp ne i32 %61, 0
  %304 = select i1 %302, i1 %303, i1 false
  br i1 %304, label %305, label %312

305:                                              ; preds = %292
  %306 = sext i32 %61 to i64
  %307 = getelementptr inbounds [32 x i8], ptr %4, i64 0, i64 %306
  store i8 0, ptr %307, align 1, !tbaa !9
  %308 = call i64 @strtol(ptr nocapture noundef nonnull %4, ptr noundef null, i32 noundef 10) #39
  %309 = trunc i64 %308 to i32
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %312

311:                                              ; preds = %305
  br label %312

312:                                              ; preds = %305, %311, %292
  %313 = phi i32 [ %290, %292 ], [ 0, %311 ], [ %290, %305 ]
  %314 = phi i32 [ %63, %292 ], [ 0, %311 ], [ %309, %305 ]
  %315 = phi i32 [ %62, %292 ], [ 0, %311 ], [ %62, %305 ]
  %316 = phi i32 [ %61, %292 ], [ 0, %311 ], [ 0, %305 ]
  %317 = phi i32 [ %60, %292 ], [ 0, %311 ], [ %60, %305 ]
  %318 = icmp eq i32 %297, 0
  %319 = icmp eq i32 %74, 10
  %320 = and i1 %319, %318
  %321 = icmp eq i32 %315, 0
  %322 = select i1 %320, i1 %321, i1 false
  %323 = icmp ne i32 %316, 0
  %324 = select i1 %322, i1 %323, i1 false
  br i1 %324, label %325, label %332

325:                                              ; preds = %312
  %326 = sext i32 %316 to i64
  %327 = getelementptr inbounds [32 x i8], ptr %4, i64 0, i64 %326
  store i8 0, ptr %327, align 1, !tbaa !9
  %328 = call i64 @strtol(ptr nocapture noundef nonnull %4, ptr noundef null, i32 noundef 10) #39
  %329 = trunc i64 %328 to i32
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %342

331:                                              ; preds = %325
  br label %342

332:                                              ; preds = %312
  %333 = icmp eq i32 %317, 0
  %334 = select i1 %320, i1 %333, i1 false
  %335 = select i1 %334, i1 %323, i1 false
  br i1 %335, label %336, label %341

336:                                              ; preds = %332
  %337 = sext i32 %316 to i64
  %338 = getelementptr inbounds [32 x i8], ptr %4, i64 0, i64 %337
  store i8 0, ptr %338, align 1, !tbaa !9
  %339 = call i64 @strtol(ptr nocapture noundef nonnull %4, ptr noundef null, i32 noundef 10) #39
  %340 = trunc i64 %339 to i32
  br label %342

341:                                              ; preds = %332
  br i1 %318, label %342, label %352

342:                                              ; preds = %336, %331, %325, %341
  %343 = phi i32 [ %317, %341 ], [ %340, %336 ], [ %317, %325 ], [ 0, %331 ]
  %344 = phi i32 [ %316, %341 ], [ 0, %336 ], [ 0, %325 ], [ 0, %331 ]
  %345 = phi i32 [ %313, %341 ], [ %313, %336 ], [ %313, %325 ], [ 0, %331 ]
  %346 = phi i32 [ %314, %341 ], [ %314, %336 ], [ %314, %325 ], [ 0, %331 ]
  %347 = phi i32 [ %315, %341 ], [ %315, %336 ], [ %329, %325 ], [ 0, %331 ]
  %348 = trunc i32 %74 to i8
  %349 = add nsw i32 %344, 1
  %350 = sext i32 %344 to i64
  %351 = getelementptr inbounds [32 x i8], ptr %4, i64 0, i64 %350
  store i8 %348, ptr %351, align 1, !tbaa !9
  br label %352

352:                                              ; preds = %342, %341
  %353 = phi i32 [ %317, %341 ], [ %343, %342 ]
  %354 = phi i32 [ %313, %341 ], [ %345, %342 ]
  %355 = phi i32 [ %314, %341 ], [ %346, %342 ]
  %356 = phi i32 [ %315, %341 ], [ %347, %342 ]
  %357 = phi i32 [ %316, %341 ], [ %349, %342 ]
  %358 = icmp sgt i32 %357, 31
  br i1 %358, label %383, label %359

359:                                              ; preds = %352
  %360 = icmp ne i32 %355, 0
  %361 = select i1 %34, i1 %360, i1 false
  %362 = icmp ne i32 %356, 0
  %363 = select i1 %361, i1 %362, i1 false
  %364 = icmp ne i32 %353, 0
  %365 = select i1 %363, i1 %364, i1 false
  br i1 %365, label %366, label %373

366:                                              ; preds = %359
  %367 = mul nsw i32 %356, %355
  %368 = add nsw i32 %50, -1
  %369 = add i32 %368, %354
  %370 = add i32 %369, %367
  %371 = sext i32 %370 to i64
  %372 = add nsw i64 %5, %371
  br label %546

373:                                              ; preds = %359
  %374 = icmp ne i32 %297, 0
  %375 = and i1 %319, %374
  %376 = select i1 %375, i32 0, i32 %297
  %377 = select i1 %360, i1 %362, i1 false
  %378 = select i1 %377, i1 %364, i1 false
  br i1 %378, label %379, label %383

379:                                              ; preds = %373
  %380 = sext i32 %354 to i64
  %381 = add i64 %5, -2
  %382 = add i64 %381, %380
  br label %546

383:                                              ; preds = %352, %373, %280
  %384 = phi i32 [ %354, %373 ], [ 0, %280 ], [ 0, %352 ]
  %385 = phi i32 [ %376, %373 ], [ %64, %280 ], [ 0, %352 ]
  %386 = phi i32 [ %355, %373 ], [ %63, %280 ], [ 0, %352 ]
  %387 = phi i32 [ %356, %373 ], [ %62, %280 ], [ 0, %352 ]
  %388 = phi i32 [ %357, %373 ], [ %61, %280 ], [ 0, %352 ]
  %389 = phi i32 [ %353, %373 ], [ %60, %280 ], [ 0, %352 ]
  %390 = icmp eq i32 %146, 474
  %391 = select i1 %390, i32 %50, i32 %55
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %487, label %393

393:                                              ; preds = %383
  %394 = sub nsw i32 %50, %391
  %395 = icmp eq i32 %394, 1
  br i1 %395, label %396, label %402

396:                                              ; preds = %393
  %397 = icmp ult i32 %74, 2
  %398 = select i1 %397, i32 %391, i32 0
  %399 = select i1 %397, i32 %74, i32 -1
  %400 = select i1 %397, i32 %53, i32 0
  %401 = select i1 %397, i32 %52, i32 0
  br label %402

402:                                              ; preds = %396, %393
  %403 = phi i32 [ %391, %393 ], [ %398, %396 ]
  %404 = phi i32 [ %54, %393 ], [ %399, %396 ]
  %405 = phi i32 [ %53, %393 ], [ %400, %396 ]
  %406 = phi i32 [ %52, %393 ], [ %401, %396 ]
  %407 = sub nsw i32 %50, %403
  %408 = icmp eq i32 %407, 2
  br i1 %408, label %409, label %416

409:                                              ; preds = %402
  %410 = add i32 %74, -1
  %411 = icmp ult i32 %410, 2
  %412 = select i1 %411, i32 %403, i32 0
  %413 = select i1 %411, i32 %404, i32 -1
  %414 = select i1 %411, i32 %405, i32 0
  %415 = select i1 %411, i32 %406, i32 0
  br label %416

416:                                              ; preds = %409, %402
  %417 = phi i32 [ %403, %402 ], [ %412, %409 ]
  %418 = phi i32 [ %404, %402 ], [ %413, %409 ]
  %419 = phi i32 [ %405, %402 ], [ %414, %409 ]
  %420 = phi i32 [ %406, %402 ], [ %415, %409 ]
  %421 = sub nsw i32 %50, %417
  %422 = icmp ne i32 %421, 4
  %423 = add nsw i32 %146, -1
  %424 = icmp ult i32 %423, 3
  %425 = select i1 %422, i1 true, i1 %424
  br i1 %425, label %427, label %426

426:                                              ; preds = %416
  br label %427

427:                                              ; preds = %426, %416
  %428 = phi i32 [ 0, %426 ], [ %417, %416 ]
  %429 = phi i32 [ -1, %426 ], [ %418, %416 ]
  %430 = phi i32 [ 0, %426 ], [ %419, %416 ]
  %431 = phi i32 [ 0, %426 ], [ %420, %416 ]
  %432 = sub nsw i32 %50, %428
  %433 = icmp eq i32 %432, 6
  br i1 %433, label %434, label %439

434:                                              ; preds = %427
  %435 = icmp eq i32 %146, 0
  %436 = select i1 %435, i32 0, i32 %428
  %437 = select i1 %435, i32 -1, i32 %429
  %438 = select i1 %435, i32 0, i32 %430
  br label %439

439:                                              ; preds = %434, %427
  %440 = phi i32 [ %428, %427 ], [ %436, %434 ]
  %441 = phi i32 [ %429, %427 ], [ %437, %434 ]
  %442 = phi i32 [ %430, %427 ], [ %438, %434 ]
  %443 = phi i32 [ %431, %427 ], [ %146, %434 ]
  %444 = sub nsw i32 %50, %440
  %445 = icmp eq i32 %444, 8
  br i1 %445, label %446, label %451

446:                                              ; preds = %439
  %447 = icmp eq i32 %146, 0
  br i1 %447, label %451, label %448

448:                                              ; preds = %446
  %449 = mul nuw nsw i32 %443, %146
  %450 = add nuw nsw i32 %449, 512
  br label %451

451:                                              ; preds = %446, %448, %439
  %452 = phi i32 [ %440, %448 ], [ %440, %439 ], [ 0, %446 ]
  %453 = phi i32 [ %441, %448 ], [ %441, %439 ], [ -1, %446 ]
  %454 = phi i32 [ %442, %448 ], [ %442, %439 ], [ 0, %446 ]
  %455 = phi i32 [ %443, %448 ], [ %443, %439 ], [ 0, %446 ]
  %456 = phi i32 [ %450, %448 ], [ %51, %439 ], [ %51, %446 ]
  %457 = sub nsw i32 %50, %452
  %458 = icmp eq i32 %457, 10
  br i1 %458, label %459, label %462

459:                                              ; preds = %451
  %460 = trunc i32 %78 to i16
  switch i16 %460, label %461 [
    i16 1, label %462
    i16 3, label %462
    i16 4, label %462
  ]

461:                                              ; preds = %459
  br label %462

462:                                              ; preds = %459, %459, %459, %461, %451
  %463 = phi i32 [ 0, %461 ], [ %452, %451 ], [ %452, %459 ], [ %452, %459 ], [ %452, %459 ]
  %464 = phi i32 [ -1, %461 ], [ %453, %451 ], [ %453, %459 ], [ %453, %459 ], [ %453, %459 ]
  %465 = phi i32 [ 0, %461 ], [ %454, %451 ], [ %146, %459 ], [ %146, %459 ], [ %146, %459 ]
  %466 = phi i32 [ 0, %461 ], [ %455, %451 ], [ %455, %459 ], [ %455, %459 ], [ %455, %459 ]
  %467 = icmp eq i32 %456, 0
  br i1 %467, label %487, label %468

468:                                              ; preds = %462
  %469 = sub nsw i32 %50, %463
  %470 = icmp sgt i32 %469, 0
  %471 = icmp sgt i32 %469, %456
  %472 = select i1 %470, i1 %471, i1 false
  br i1 %472, label %473, label %487

473:                                              ; preds = %468
  %474 = icmp eq i32 %465, 1
  %475 = select i1 %35, i1 %474, i1 false
  %476 = icmp eq i32 %464, 0
  %477 = select i1 %475, i1 %476, i1 false
  br i1 %477, label %478, label %481

478:                                              ; preds = %473
  %479 = sext i32 %456 to i64
  %480 = add nsw i64 %5, %479
  br label %546

481:                                              ; preds = %473
  %482 = select i1 %474, i1 %476, i1 false
  br i1 %482, label %483, label %487

483:                                              ; preds = %481
  %484 = sext i32 %463 to i64
  %485 = add i64 %5, -1
  %486 = add i64 %485, %484
  br label %546

487:                                              ; preds = %462, %468, %481, %383
  %488 = phi i32 [ %463, %481 ], [ %463, %468 ], [ %463, %462 ], [ 0, %383 ]
  %489 = phi i32 [ %464, %481 ], [ %464, %468 ], [ %464, %462 ], [ %54, %383 ]
  %490 = phi i32 [ %465, %481 ], [ %465, %468 ], [ %465, %462 ], [ %53, %383 ]
  %491 = phi i32 [ %466, %481 ], [ %466, %468 ], [ %466, %462 ], [ %52, %383 ]
  %492 = phi i32 [ %456, %481 ], [ %456, %468 ], [ 0, %462 ], [ %51, %383 ]
  %493 = and i32 %47, -33554432
  %494 = icmp eq i32 %493, -402653184
  br i1 %494, label %495, label %533

495:                                              ; preds = %487
  %496 = add nuw i32 %74, 1
  %497 = and i32 %496, 254
  %498 = icmp eq i32 %497, 0
  br i1 %498, label %499, label %533

499:                                              ; preds = %495
  %500 = lshr i32 %78, 24
  %501 = add nuw i32 %500, %50
  %502 = and i32 %501, 255
  %503 = zext i32 %500 to i64
  %504 = getelementptr inbounds i32, ptr %22, i64 %503
  %505 = load i32, ptr %504, align 4, !tbaa !25
  %506 = zext i32 %502 to i64
  %507 = getelementptr inbounds i32, ptr %13, i64 %506
  %508 = load i32, ptr %507, align 4, !tbaa !25
  %509 = sub nsw i32 %50, %508
  %510 = icmp slt i32 %505, %508
  %511 = icmp slt i32 %509, 4096
  %512 = select i1 %510, i1 %511, i1 false
  %513 = icmp sgt i32 %508, 5
  %514 = and i1 %513, %512
  br i1 %514, label %515, label %529

515:                                              ; preds = %499
  %516 = add nsw i32 %48, 1
  %517 = icmp eq i32 %49, 0
  %518 = icmp sgt i32 %49, %508
  %519 = select i1 %517, i1 true, i1 %518
  %520 = select i1 %519, i32 %508, i32 %49
  %521 = icmp sgt i32 %48, 2
  %522 = select i1 %36, i1 %521, i1 false
  %523 = icmp sgt i32 %520, 5
  %524 = select i1 %522, i1 %523, i1 false
  br i1 %524, label %525, label %529

525:                                              ; preds = %515
  %526 = zext i32 %520 to i64
  %527 = add i64 %5, -5
  %528 = add i64 %527, %526
  br label %546

529:                                              ; preds = %499, %515
  %530 = phi i32 [ %516, %515 ], [ 0, %499 ]
  %531 = phi i32 [ %520, %515 ], [ %49, %499 ]
  %532 = phi i32 [ %50, %515 ], [ %65, %499 ]
  store i32 %50, ptr %507, align 4, !tbaa !25
  store i32 %50, ptr %504, align 4, !tbaa !25
  br label %533

533:                                              ; preds = %529, %495, %487
  %534 = phi i32 [ %532, %529 ], [ %65, %495 ], [ %65, %487 ]
  %535 = phi i32 [ %531, %529 ], [ %49, %495 ], [ %49, %487 ]
  %536 = phi i32 [ %530, %529 ], [ %48, %495 ], [ %48, %487 ]
  %537 = sub nsw i32 %50, %534
  %538 = icmp sgt i32 %537, 4096
  %539 = select i1 %37, i1 %538, i1 false
  br i1 %539, label %540, label %543

540:                                              ; preds = %533
  %541 = sext i32 %534 to i64
  %542 = add nsw i64 %5, %541
  br label %546

543:                                              ; preds = %533
  %544 = add nuw nsw i32 %50, 1
  %545 = icmp eq i32 %544, %1
  br i1 %545, label %550, label %46, !llvm.loop !241

546:                                              ; preds = %123, %254, %262, %269, %276, %366, %379, %478, %483, %540, %525
  %547 = phi i64 [ %528, %525 ], [ %542, %540 ], [ %486, %483 ], [ %480, %478 ], [ %382, %379 ], [ %372, %366 ], [ %279, %276 ], [ %272, %269 ], [ %265, %262 ], [ %257, %254 ], [ %126, %123 ]
  %548 = phi i32 [ 8, %525 ], [ 0, %540 ], [ 7, %483 ], [ 0, %478 ], [ 6, %379 ], [ 0, %366 ], [ 4, %276 ], [ 3, %269 ], [ 2, %262 ], [ 0, %254 ], [ 1, %123 ]
  %549 = tail call i32 @fseek(ptr noundef %0, i64 noundef %547, i32 noundef 0)
  br label %550

550:                                              ; preds = %543, %46, %127, %546, %27
  %551 = phi i32 [ %2, %27 ], [ %548, %546 ], [ %2, %543 ], [ -1, %46 ], [ 0, %127 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #39
  %552 = load i32, ptr @programChecker, align 8, !tbaa !13
  %553 = add i32 %552, -1024
  store i32 %553, ptr @programChecker, align 8, !tbaa !13
  %554 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %555 = icmp sgt i32 %553, %554
  br i1 %555, label %556, label %557

556:                                              ; preds = %550
  store i32 %553, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %557

557:                                              ; preds = %550, %556
  %558 = phi i32 [ %554, %550 ], [ %553, %556 ]
  tail call void @free(ptr noundef %22) #39
  %559 = add i32 %552, -2048
  store i32 %559, ptr @programChecker, align 8, !tbaa !13
  %560 = icmp sgt i32 %559, %558
  br i1 %560, label %561, label %562

561:                                              ; preds = %557
  store i32 %559, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %562

562:                                              ; preds = %557, %561
  tail call void @free(ptr noundef %13) #39
  ret i32 %551
}

; Function Attrs: nofree nounwind
declare noundef i64 @ftell(ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare noundef i32 @fseek(ptr nocapture noundef, i64 noundef, i32 noundef) local_unnamed_addr #18

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z14encode_defaultP8_IO_FILES0_i(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) local_unnamed_addr #19 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %7, %5 ], [ %2, %3 ]
  %7 = add nsw i32 %6, -1
  %8 = tail call i32 @getc(ptr noundef %0)
  %9 = tail call i32 @putc(i32 noundef %8, ptr noundef %1)
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %5, !llvm.loop !242

11:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z14decode_defaultR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0) local_unnamed_addr #14 {
  %2 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  ret i32 %2
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) local_unnamed_addr #14 comdat align 2 {
  %2 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 4, !tbaa !232
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 6
  %7 = load ptr, ptr %6, align 8, !tbaa !239
  %8 = tail call i32 @getc(ptr noundef %7)
  br label %39

9:                                                ; preds = %1
  %10 = load i32, ptr @level, align 4, !tbaa !25
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %35, label %12

12:                                               ; preds = %9
  %13 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef 0)
  %14 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef 0)
  %15 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef 0)
  %16 = shl i32 %13, 2
  %17 = shl i32 %14, 1
  %18 = add i32 %16, %17
  %19 = add i32 %15, %18
  %20 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef 0)
  %21 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef 0)
  %22 = shl i32 %19, 2
  %23 = shl i32 %20, 1
  %24 = add i32 %22, %23
  %25 = add i32 %21, %24
  %26 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef 0)
  %27 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef 0)
  %28 = shl i32 %25, 2
  %29 = shl i32 %26, 1
  %30 = add i32 %28, %29
  %31 = add i32 %27, %30
  %32 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef 0)
  %33 = shl i32 %31, 1
  %34 = add i32 %32, %33
  br label %39

35:                                               ; preds = %9
  %36 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 2
  %37 = load ptr, ptr %36, align 8, !tbaa !235
  %38 = tail call i32 @getc(ptr noundef %37)
  br label %39

39:                                               ; preds = %12, %35, %5
  %40 = phi i32 [ %8, %5 ], [ %38, %35 ], [ %34, %12 ]
  ret i32 %40
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z11encode_jpegP8_IO_FILES0_i(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) local_unnamed_addr #19 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %7, %5 ], [ %2, %3 ]
  %7 = add nsw i32 %6, -1
  %8 = tail call i32 @getc(ptr noundef %0)
  %9 = tail call i32 @putc(i32 noundef %8, ptr noundef %1)
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %5, !llvm.loop !243

11:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z11decode_jpegR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0) local_unnamed_addr #14 {
  %2 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  ret i32 %2
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z10encode_bmpP8_IO_FILES0_i(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) local_unnamed_addr #19 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %7, %5 ], [ %2, %3 ]
  %7 = add nsw i32 %6, -1
  %8 = tail call i32 @getc(ptr noundef %0)
  %9 = tail call i32 @putc(i32 noundef %8, ptr noundef %1)
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %5, !llvm.loop !244

11:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z10decode_bmpR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0) local_unnamed_addr #14 {
  %2 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  ret i32 %2
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z10encode_pgmP8_IO_FILES0_i(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) local_unnamed_addr #19 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %7, %5 ], [ %2, %3 ]
  %7 = add nsw i32 %6, -1
  %8 = tail call i32 @getc(ptr noundef %0)
  %9 = tail call i32 @putc(i32 noundef %8, ptr noundef %1)
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %5, !llvm.loop !245

11:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z10decode_pgmR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0) local_unnamed_addr #14 {
  %2 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  ret i32 %2
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z10encode_rgbP8_IO_FILES0_i(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) local_unnamed_addr #19 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %7, %5 ], [ %2, %3 ]
  %7 = add nsw i32 %6, -1
  %8 = tail call i32 @getc(ptr noundef %0)
  %9 = tail call i32 @putc(i32 noundef %8, ptr noundef %1)
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %5, !llvm.loop !246

11:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z10decode_rgbR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0) local_unnamed_addr #14 {
  %2 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  ret i32 %2
}

; Function Attrs: uwtable
define dso_local void @_Z10encode_exeP8_IO_FILES0_ii(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #5 personality ptr @__gxx_personality_v0 {
  %5 = load i32, ptr @programChecker, align 8, !tbaa !13
  %6 = add nsw i32 %5, 65536
  store i32 %6, ptr @programChecker, align 8, !tbaa !13
  %7 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %8 = icmp sgt i32 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  store i32 %6, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %10

10:                                               ; preds = %9, %4
  %11 = tail call noalias dereferenceable_or_null(65536) ptr @calloc(i64 noundef 65536, i64 noundef 1) #41
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %14, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %14, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

15:                                               ; preds = %10
  %16 = ashr i32 %2, 24
  %17 = ashr i32 %2, 16
  %18 = ashr i32 %2, 8
  %19 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.17, i32 noundef %16, i32 noundef %17, i32 noundef %18, i32 noundef %2)
  %20 = ashr i32 %3, 24
  %21 = ashr i32 %3, 16
  %22 = ashr i32 %3, 8
  %23 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.17, i32 noundef %20, i32 noundef %21, i32 noundef %22, i32 noundef %3)
  %24 = icmp sgt i32 %2, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %56, %15
  %26 = load i32, ptr @programChecker, align 8, !tbaa !13
  %27 = add i32 %26, -65536
  store i32 %27, ptr @programChecker, align 8, !tbaa !13
  %28 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %29 = icmp sgt i32 %27, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  store i32 %27, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %31

31:                                               ; preds = %25, %30
  tail call void @free(ptr noundef %11) #39
  ret void

32:                                               ; preds = %15, %56
  %33 = phi i32 [ %60, %56 ], [ 0, %15 ]
  %34 = sub nsw i32 %2, %33
  %35 = tail call i32 @llvm.smin.i32(i32 %34, i32 65536)
  %36 = sext i32 %35 to i64
  %37 = tail call i64 @fread(ptr noundef nonnull %11, i64 noundef 1, i64 noundef %36, ptr noundef %0)
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %35, %38
  br i1 %39, label %40, label %45

40:                                               ; preds = %32
  %41 = icmp sgt i32 %35, 4
  br i1 %41, label %42, label %56

42:                                               ; preds = %40
  %43 = add i32 %33, %3
  %44 = zext i32 %35 to i64
  br label %62

45:                                               ; preds = %32
  %46 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.18, ptr %46, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %46, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %47 unwind label %48

47:                                               ; preds = %45
  unreachable

48:                                               ; preds = %45
  %49 = landingpad { ptr, i32 }
          cleanup
  %50 = load i32, ptr @programChecker, align 8, !tbaa !13
  %51 = add i32 %50, -65536
  store i32 %51, ptr @programChecker, align 8, !tbaa !13
  %52 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %53 = icmp sgt i32 %51, %52
  br i1 %53, label %54, label %55

54:                                               ; preds = %48
  store i32 %51, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %55

55:                                               ; preds = %48, %54
  tail call void @free(ptr noundef %11) #39
  resume { ptr, i32 } %49

56:                                               ; preds = %109, %40
  %57 = shl i64 %37, 32
  %58 = ashr exact i64 %57, 32
  %59 = tail call i64 @fwrite(ptr noundef nonnull %11, i64 noundef 1, i64 noundef %58, ptr noundef %1)
  %60 = add nuw nsw i32 %33, 65536
  %61 = icmp slt i32 %60, %2
  br i1 %61, label %32, label %25, !llvm.loop !247

62:                                               ; preds = %42, %109
  %63 = phi i64 [ %44, %42 ], [ %65, %109 ]
  %64 = trunc i64 %63 to i32
  %65 = add nsw i64 %63, -1
  %66 = add nuw i64 %63, 4294967291
  %67 = and i64 %66, 4294967295
  %68 = getelementptr inbounds i8, ptr %11, i64 %67
  %69 = load i8, ptr %68, align 1, !tbaa !9
  %70 = and i8 %69, -2
  %71 = icmp eq i8 %70, -24
  br i1 %71, label %72, label %109

72:                                               ; preds = %62
  %73 = and i64 %65, 4294967295
  %74 = getelementptr inbounds i8, ptr %11, i64 %73
  %75 = load i8, ptr %74, align 1, !tbaa !9
  switch i8 %75, label %109 [
    i8 0, label %76
    i8 -1, label %76
  ]

76:                                               ; preds = %72, %72
  %77 = add nuw i64 %63, 4294967292
  %78 = and i64 %77, 4294967295
  %79 = getelementptr inbounds i8, ptr %11, i64 %78
  %80 = load i8, ptr %79, align 1, !tbaa !9
  %81 = zext i8 %80 to i32
  %82 = add nuw i64 %63, 4294967293
  %83 = and i64 %82, 4294967295
  %84 = getelementptr inbounds i8, ptr %11, i64 %83
  %85 = load i8, ptr %84, align 1, !tbaa !9
  %86 = zext i8 %85 to i32
  %87 = shl nuw nsw i32 %86, 8
  %88 = add nuw i64 %63, 4294967294
  %89 = and i64 %88, 4294967295
  %90 = getelementptr inbounds i8, ptr %11, i64 %89
  %91 = load i8, ptr %90, align 1, !tbaa !9
  %92 = zext i8 %91 to i32
  %93 = shl nuw nsw i32 %92, 16
  %94 = zext i8 %75 to i32
  %95 = shl nuw i32 %94, 24
  %96 = or i32 %95, %81
  %97 = or i32 %96, %87
  %98 = or i32 %97, %93
  %99 = add i32 %43, %64
  %100 = add i32 %99, %98
  %101 = shl i32 %100, 7
  %102 = ashr i32 %101, 31
  %103 = trunc i32 %102 to i8
  store i8 %103, ptr %74, align 1, !tbaa !9
  %104 = lshr i32 %101, 23
  %105 = trunc i32 %104 to i8
  store i8 %105, ptr %90, align 1, !tbaa !9
  %106 = lshr i32 %101, 15
  %107 = trunc i32 %106 to i8
  store i8 %107, ptr %84, align 1, !tbaa !9
  %108 = trunc i32 %100 to i8
  store i8 %108, ptr %79, align 1, !tbaa !9
  br label %109

109:                                              ; preds = %62, %72, %76
  %110 = icmp ugt i64 %63, 5
  br i1 %110, label %62, label %56, !llvm.loop !248
}

; Function Attrs: nofree nounwind
declare noundef i32 @fprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare noundef i64 @fread(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z10decode_exeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0) local_unnamed_addr #14 {
  %2 = load i32, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !25
  %3 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %4 = icmp eq i32 %2, %3
  %5 = load i32, ptr @_ZZ10decode_exeR7EncoderE1q, align 4
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %4, i1 %6, i1 false
  br i1 %7, label %15, label %8

8:                                                ; preds = %15, %1
  %9 = phi i32 [ %3, %1 ], [ %43, %15 ]
  %10 = phi i32 [ %2, %1 ], [ %42, %15 ]
  %11 = phi i32 [ %5, %1 ], [ %45, %15 ]
  %12 = icmp slt i32 %10, %9
  %13 = icmp slt i32 %11, 5
  %14 = select i1 %12, i1 %13, i1 false
  br i1 %14, label %48, label %60

15:                                               ; preds = %1, %15
  store i32 0, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !25
  %16 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %17 = shl i32 %16, 24
  store i32 %17, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %18 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %19 = shl i32 %18, 16
  %20 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %21 = or i32 %20, %19
  store i32 %21, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %22 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %23 = shl i32 %22, 8
  %24 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %25 = or i32 %24, %23
  store i32 %25, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %26 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %27 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %28 = or i32 %27, %26
  store i32 %28, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %29 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %30 = shl i32 %29, 24
  store i32 %30, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %31 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %32 = shl i32 %31, 16
  %33 = load i32, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %34 = or i32 %33, %32
  store i32 %34, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %35 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %36 = shl i32 %35, 8
  %37 = load i32, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %38 = or i32 %37, %36
  store i32 %38, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %39 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %40 = load i32, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %41 = or i32 %40, %39
  store i32 %41, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %42 = load i32, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !25
  %43 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %44 = icmp eq i32 %42, %43
  %45 = load i32, ptr @_ZZ10decode_exeR7EncoderE1q, align 4
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %44, i1 %46, i1 false
  br i1 %47, label %15, label %8, !llvm.loop !249

48:                                               ; preds = %8, %48
  %49 = load i32, ptr @_ZZ10decode_exeR7EncoderE1c, align 4
  store i32 %49, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 1), align 1
  %50 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %51 = trunc i32 %50 to i8
  store i8 %51, ptr @_ZZ10decode_exeR7EncoderE1c, align 4, !tbaa !9
  %52 = load i32, ptr @_ZZ10decode_exeR7EncoderE1q, align 4, !tbaa !25
  %53 = add nsw i32 %52, 1
  store i32 %53, ptr @_ZZ10decode_exeR7EncoderE1q, align 4, !tbaa !25
  %54 = load i32, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !25
  %55 = add nsw i32 %54, 1
  store i32 %55, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !25
  %56 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %57 = icmp slt i32 %55, %56
  %58 = icmp slt i32 %52, 4
  %59 = select i1 %57, i1 %58, i1 false
  br i1 %59, label %48, label %60, !llvm.loop !250

60:                                               ; preds = %48, %8
  %61 = phi i32 [ %11, %8 ], [ %53, %48 ]
  %62 = phi i32 [ %10, %8 ], [ %55, %48 ]
  %63 = icmp eq i32 %61, 5
  br i1 %63, label %64, label %102

64:                                               ; preds = %60
  %65 = load i8, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 4), align 4, !tbaa !9
  %66 = and i8 %65, -2
  %67 = icmp eq i8 %66, -24
  br i1 %67, label %68, label %102

68:                                               ; preds = %64
  %69 = load i8, ptr @_ZZ10decode_exeR7EncoderE1c, align 4, !tbaa !9
  %70 = zext i8 %69 to i32
  %71 = add i8 %69, 1
  %72 = icmp ult i8 %71, 2
  br i1 %72, label %73, label %102

73:                                               ; preds = %68
  %74 = add nsw i32 %62, -1
  %75 = add nsw i32 %62, -5
  %76 = xor i32 %74, %75
  %77 = icmp ult i32 %76, 65536
  br i1 %77, label %78, label %102

78:                                               ; preds = %73
  %79 = load i8, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 3), align 1, !tbaa !9
  %80 = zext i8 %79 to i32
  %81 = load i8, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 2), align 2, !tbaa !9
  %82 = zext i8 %81 to i32
  %83 = shl nuw nsw i32 %82, 8
  %84 = load i8, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 1), align 1, !tbaa !9
  %85 = zext i8 %84 to i32
  %86 = shl nuw nsw i32 %85, 16
  %87 = shl nuw i32 %70, 24
  %88 = or i32 %87, %80
  %89 = or i32 %88, %83
  %90 = or i32 %89, %86
  %91 = load i32, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %92 = add i32 %91, %62
  %93 = sub i32 %90, %92
  %94 = shl i32 %93, 7
  %95 = trunc i32 %93 to i8
  store i8 %95, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 3), align 1, !tbaa !9
  %96 = lshr i32 %94, 15
  %97 = trunc i32 %96 to i8
  store i8 %97, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 2), align 2, !tbaa !9
  %98 = lshr i32 %94, 23
  %99 = trunc i32 %98 to i8
  store i8 %99, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 1), align 1, !tbaa !9
  %100 = ashr i32 %94, 31
  %101 = trunc i32 %100 to i8
  store i8 %101, ptr @_ZZ10decode_exeR7EncoderE1c, align 4, !tbaa !9
  br label %102

102:                                              ; preds = %68, %64, %78, %73, %60
  %103 = add nsw i32 %61, -1
  store i32 %103, ptr @_ZZ10decode_exeR7EncoderE1q, align 4, !tbaa !25
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 %104
  %106 = load i8, ptr %105, align 1, !tbaa !9
  %107 = zext i8 %106 to i32
  ret i32 %107
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #26

; Function Attrs: mustprogress uwtable
define dso_local void @_Z6encodeP8_IO_FILES0_i(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) local_unnamed_addr #14 {
  %4 = tail call i64 @ftell(ptr noundef %0)
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %57

6:                                                ; preds = %3, %54
  %7 = phi i32 [ %55, %54 ], [ %2, %3 ]
  %8 = phi i32 [ %10, %54 ], [ 0, %3 ]
  %9 = phi i64 [ %11, %54 ], [ %4, %3 ]
  %10 = tail call noundef i32 @_Z6detectP8_IO_FILEi8Filetype(ptr noundef %0, i32 noundef %7, i32 noundef %8)
  %11 = tail call i64 @ftell(ptr noundef %0)
  %12 = tail call i32 @fseek(ptr noundef %0, i64 noundef %9, i32 noundef 0)
  %13 = sub nsw i64 %11, %9
  %14 = trunc i64 %13 to i32
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %54

16:                                               ; preds = %6
  %17 = lshr i32 %14, 24
  %18 = lshr i32 %14, 16
  %19 = lshr i32 %14, 8
  %20 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.19, i32 noundef %8, i32 noundef %17, i32 noundef %18, i32 noundef %19, i32 noundef %14)
  switch i32 %8, label %48 [
    i32 1, label %22
    i32 2, label %21
    i32 3, label %21
    i32 4, label %21
    i32 6, label %34
    i32 7, label %40
    i32 8, label %46
  ]

21:                                               ; preds = %16, %16, %16
  br label %28

22:                                               ; preds = %16, %22
  %23 = phi i32 [ %24, %22 ], [ %14, %16 ]
  %24 = add nsw i32 %23, -1
  %25 = tail call i32 @getc(ptr noundef %0)
  %26 = tail call i32 @putc(i32 noundef %25, ptr noundef %1)
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %54, label %22, !llvm.loop !243

28:                                               ; preds = %21, %28
  %29 = phi i32 [ %30, %28 ], [ %14, %21 ]
  %30 = add nsw i32 %29, -1
  %31 = tail call i32 @getc(ptr noundef %0)
  %32 = tail call i32 @putc(i32 noundef %31, ptr noundef %1)
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %54, label %28, !llvm.loop !244

34:                                               ; preds = %16, %34
  %35 = phi i32 [ %36, %34 ], [ %14, %16 ]
  %36 = add nsw i32 %35, -1
  %37 = tail call i32 @getc(ptr noundef %0)
  %38 = tail call i32 @putc(i32 noundef %37, ptr noundef %1)
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %54, label %34, !llvm.loop !245

40:                                               ; preds = %16, %40
  %41 = phi i32 [ %42, %40 ], [ %14, %16 ]
  %42 = add nsw i32 %41, -1
  %43 = tail call i32 @getc(ptr noundef %0)
  %44 = tail call i32 @putc(i32 noundef %43, ptr noundef %1)
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %54, label %40, !llvm.loop !246

46:                                               ; preds = %16
  %47 = trunc i64 %9 to i32
  tail call void @_Z10encode_exeP8_IO_FILES0_ii(ptr noundef %0, ptr noundef %1, i32 noundef %14, i32 noundef %47)
  br label %54

48:                                               ; preds = %16, %48
  %49 = phi i32 [ %50, %48 ], [ %14, %16 ]
  %50 = add nsw i32 %49, -1
  %51 = tail call i32 @getc(ptr noundef %0)
  %52 = tail call i32 @putc(i32 noundef %51, ptr noundef %1)
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %54, label %48, !llvm.loop !242

54:                                               ; preds = %40, %34, %28, %22, %48, %46, %6
  %55 = sub nsw i32 %7, %14
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %6, label %57, !llvm.loop !251

57:                                               ; preds = %54, %3
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0) local_unnamed_addr #14 {
  %2 = load i32, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %22

4:                                                ; preds = %1, %4
  %5 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  store i32 %5, ptr @_ZZ6decodeR7EncoderE4type, align 4, !tbaa !215
  %6 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %7 = shl i32 %6, 24
  store i32 %7, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %8 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %9 = shl i32 %8, 16
  %10 = load i32, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %11 = or i32 %10, %9
  store i32 %11, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %12 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %13 = shl i32 %12, 8
  %14 = load i32, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %15 = or i32 %14, %13
  store i32 %15, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %16 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %17 = load i32, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %18 = or i32 %17, %16
  %19 = icmp slt i32 %18, 0
  %20 = select i1 %19, i32 1, i32 %18
  store i32 %20, ptr @_ZZ6decodeR7EncoderE3len, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %4, label %22, !llvm.loop !252

22:                                               ; preds = %4, %1
  %23 = phi i32 [ %2, %1 ], [ %20, %4 ]
  %24 = add nsw i32 %23, -1
  store i32 %24, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %25 = load i32, ptr @_ZZ6decodeR7EncoderE4type, align 4, !tbaa !215
  switch i32 %25, label %36 [
    i32 1, label %26
    i32 2, label %28
    i32 3, label %28
    i32 4, label %28
    i32 6, label %30
    i32 7, label %32
    i32 8, label %34
  ]

26:                                               ; preds = %22
  %27 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  br label %38

28:                                               ; preds = %22, %22, %22
  %29 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  br label %38

30:                                               ; preds = %22
  %31 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  br label %38

32:                                               ; preds = %22
  %33 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  br label %38

34:                                               ; preds = %22
  %35 = tail call noundef i32 @_Z10decode_exeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0), !range !253
  br label %38

36:                                               ; preds = %22
  %37 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  br label %38

38:                                               ; preds = %36, %34, %32, %30, %28, %26
  %39 = phi i32 [ %37, %36 ], [ %35, %34 ], [ %33, %32 ], [ %31, %30 ], [ %29, %28 ], [ %27, %26 ]
  ret i32 %39
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z11printStatusi(i32 noundef %0) local_unnamed_addr #19 {
  %2 = icmp sgt i32 %0, 0
  %3 = and i32 %0, 4095
  %4 = icmp eq i32 %3, 0
  %5 = and i1 %2, %4
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %0)
  %8 = load ptr, ptr @stdout, align 8, !tbaa !5
  %9 = tail call i32 @fflush(ptr noundef %8)
  br label %10

10:                                               ; preds = %6, %1
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @fflush(ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: mustprogress uwtable
define dso_local void @_Z8compressPKclR7Encoder(ptr noundef %0, i64 noundef %1, ptr noundef nonnull align 8 dereferenceable(40) %2) local_unnamed_addr #14 {
  %4 = tail call noalias ptr @fopen(ptr noundef %0, ptr noundef nonnull @.str.21)
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  tail call void @perror(ptr noundef %0) #45
  %7 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %7, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %7, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.Encoder, ptr %2, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !235
  %11 = tail call i64 @ftell(ptr noundef %10)
  %12 = tail call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %0, i32 noundef 47) #44
  %13 = icmp eq ptr %12, null
  %14 = getelementptr inbounds i8, ptr %12, i64 1
  %15 = select i1 %13, ptr %0, ptr %14
  %16 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.22, ptr noundef %15, i64 noundef %1)
  %17 = load i32, ptr @level, align 4, !tbaa !25
  %18 = shl i32 4194304, %17
  %19 = icmp sgt i64 %1, 0
  br i1 %19, label %20, label %1180

20:                                               ; preds = %8
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds %class.Encoder, ptr %2, i64 0, i32 6
  %23 = getelementptr inbounds %class.Encoder, ptr %2, i64 0, i32 3
  %24 = getelementptr inbounds %class.Encoder, ptr %2, i64 0, i32 4
  %25 = getelementptr inbounds %class.Encoder, ptr %2, i64 0, i32 1
  %26 = getelementptr inbounds %class.Encoder, ptr %2, i64 0, i32 5
  br label %27

27:                                               ; preds = %20, %1175
  %28 = phi i64 [ 0, %20 ], [ %1178, %1175 ]
  %29 = phi i64 [ %1, %20 ], [ %1176, %1175 ]
  %30 = icmp slt i64 %29, %21
  %31 = trunc i64 %29 to i32
  %32 = select i1 %30, i32 %31, i32 %18
  %33 = tail call noalias ptr @tmpfile()
  %34 = icmp eq ptr %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %27
  %36 = tail call i64 @ftell(ptr noundef nonnull %4)
  tail call void @_Z6encodeP8_IO_FILES0_i(ptr noundef nonnull %4, ptr noundef nonnull %33, i32 noundef %32)
  tail call void @rewind(ptr noundef nonnull %33)
  store ptr %33, ptr %22, align 8, !tbaa !239
  %37 = tail call i32 @fseek(ptr noundef nonnull %4, i64 noundef %36, i32 noundef 0)
  %38 = sext i32 %32 to i64
  %39 = icmp sgt i32 %32, 0
  br i1 %39, label %42, label %50

40:                                               ; preds = %27
  tail call void @perror(ptr noundef nonnull @.str.23) #45
  %41 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %41, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %41, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

42:                                               ; preds = %35, %47
  %43 = phi i64 [ %48, %47 ], [ 0, %35 ]
  %44 = tail call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %2)
  %45 = tail call i32 @getc(ptr noundef nonnull %4)
  %46 = icmp eq i32 %44, %45
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = add nuw nsw i64 %43, 1
  %49 = icmp eq i64 %48, %38
  br i1 %49, label %55, label %42, !llvm.loop !254

50:                                               ; preds = %42, %35
  %51 = phi i64 [ 0, %35 ], [ %43, %42 ]
  %52 = phi i32 [ 0, %35 ], [ %44, %42 ]
  %53 = phi i32 [ 0, %35 ], [ %45, %42 ]
  %54 = icmp eq i64 %51, %38
  br i1 %54, label %55, label %61

55:                                               ; preds = %47, %50
  %56 = phi i32 [ %53, %50 ], [ %44, %47 ]
  %57 = phi i32 [ %52, %50 ], [ %44, %47 ]
  %58 = phi i64 [ %51, %50 ], [ %38, %47 ]
  %59 = tail call i32 @getc(ptr noundef nonnull %33)
  %60 = icmp eq i32 %59, -1
  br i1 %60, label %621, label %61

61:                                               ; preds = %55, %50
  %62 = phi i32 [ %56, %55 ], [ %53, %50 ]
  %63 = phi i32 [ %57, %55 ], [ %52, %50 ]
  %64 = phi i64 [ %58, %55 ], [ %51, %50 ]
  %65 = add nsw i64 %64, %28
  %66 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.24, i64 noundef %65, i32 noundef %62, i32 noundef %63)
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %2, i32 noundef 0)
  %67 = ashr i32 %32, 24
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %2, i32 noundef %67)
  %68 = ashr i32 %32, 16
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %2, i32 noundef %68)
  %69 = ashr i32 %32, 8
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %2, i32 noundef %69)
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %2, i32 noundef %32)
  %70 = tail call i32 @fseek(ptr noundef nonnull %4, i64 noundef %36, i32 noundef 0)
  br i1 %39, label %71, label %1175

71:                                               ; preds = %61
  %72 = trunc i64 %28 to i32
  br label %73

73:                                               ; preds = %71, %618
  %74 = phi i32 [ %619, %618 ], [ 0, %71 ]
  %75 = add nsw i32 %74, %72
  %76 = icmp sgt i32 %75, 0
  %77 = and i32 %74, 4095
  %78 = icmp eq i32 %77, 0
  %79 = and i1 %76, %78
  br i1 %79, label %80, label %84

80:                                               ; preds = %73
  %81 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %75)
  %82 = load ptr, ptr @stdout, align 8, !tbaa !5
  %83 = tail call i32 @fflush(ptr noundef %82)
  br label %84

84:                                               ; preds = %73, %80
  %85 = tail call i32 @getc(ptr noundef nonnull %4)
  %86 = load i32, ptr @level, align 4, !tbaa !25
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %615, label %88

88:                                               ; preds = %84
  %89 = lshr i32 %85, 7
  %90 = and i32 %89, 1
  %91 = load i32, ptr %2, align 8, !tbaa !230
  %92 = icmp slt i32 %91, 2048
  %93 = zext i1 %92 to i32
  %94 = add nsw i32 %91, %93
  %95 = load i32, ptr %23, align 8, !tbaa !236
  %96 = load i32, ptr %24, align 4, !tbaa !237
  %97 = sub i32 %96, %95
  %98 = lshr i32 %97, 12
  %99 = mul i32 %98, %94
  %100 = add i32 %99, %95
  %101 = and i32 %97, 4095
  %102 = mul i32 %101, %94
  %103 = lshr i32 %102, 12
  %104 = add i32 %100, %103
  %105 = load i32, ptr %25, align 4, !tbaa !232
  %106 = icmp eq i32 %105, 1
  %107 = load i32, ptr %26, align 8
  %108 = icmp ule i32 %107, %104
  %109 = zext i1 %108 to i32
  %110 = select i1 %106, i32 %109, i32 %90
  store i32 %110, ptr @y, align 4, !tbaa !25
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %113, label %112

112:                                              ; preds = %88
  store i32 %104, ptr %24, align 4, !tbaa !237
  br label %115

113:                                              ; preds = %88
  %114 = add i32 %104, 1
  store i32 %114, ptr %23, align 8, !tbaa !236
  br label %115

115:                                              ; preds = %113, %112
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %116 = load i32, ptr %23, align 8, !tbaa !236
  %117 = load i32, ptr %24, align 4, !tbaa !237
  %118 = xor i32 %117, %116
  %119 = icmp ult i32 %118, 16777216
  br i1 %119, label %120, label %154

120:                                              ; preds = %115, %149
  %121 = phi i32 [ %151, %149 ], [ %116, %115 ]
  %122 = phi i32 [ %150, %149 ], [ %117, %115 ]
  %123 = load i32, ptr %25, align 4, !tbaa !232
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %132

125:                                              ; preds = %120
  %126 = lshr i32 %122, 24
  %127 = load ptr, ptr %9, align 8, !tbaa !235
  %128 = tail call i32 @putc(i32 noundef %126, ptr noundef %127)
  %129 = load i32, ptr %23, align 8, !tbaa !236
  %130 = load i32, ptr %24, align 4, !tbaa !237
  %131 = load i32, ptr %25, align 4, !tbaa !232
  br label %132

132:                                              ; preds = %125, %120
  %133 = phi i32 [ %131, %125 ], [ %123, %120 ]
  %134 = phi i32 [ %130, %125 ], [ %122, %120 ]
  %135 = phi i32 [ %129, %125 ], [ %121, %120 ]
  %136 = shl i32 %135, 8
  store i32 %136, ptr %23, align 8, !tbaa !236
  %137 = shl i32 %134, 8
  %138 = or i32 %137, 255
  store i32 %138, ptr %24, align 4, !tbaa !237
  %139 = icmp eq i32 %133, 1
  br i1 %139, label %140, label %149

140:                                              ; preds = %132
  %141 = load i32, ptr %26, align 8, !tbaa !238
  %142 = shl i32 %141, 8
  %143 = load ptr, ptr %9, align 8, !tbaa !235
  %144 = tail call i32 @getc(ptr noundef %143)
  %145 = and i32 %144, 255
  %146 = or i32 %145, %142
  store i32 %146, ptr %26, align 8, !tbaa !238
  %147 = load i32, ptr %23, align 8, !tbaa !236
  %148 = load i32, ptr %24, align 4, !tbaa !237
  br label %149

149:                                              ; preds = %140, %132
  %150 = phi i32 [ %148, %140 ], [ %138, %132 ]
  %151 = phi i32 [ %147, %140 ], [ %136, %132 ]
  %152 = xor i32 %151, %150
  %153 = icmp ult i32 %152, 16777216
  br i1 %153, label %120, label %154, !llvm.loop !255

154:                                              ; preds = %149, %115
  %155 = phi i32 [ %117, %115 ], [ %150, %149 ]
  %156 = phi i32 [ %116, %115 ], [ %151, %149 ]
  %157 = lshr i32 %85, 6
  %158 = and i32 %157, 1
  %159 = load i32, ptr %2, align 8, !tbaa !230
  %160 = icmp slt i32 %159, 2048
  %161 = zext i1 %160 to i32
  %162 = add nsw i32 %159, %161
  %163 = sub i32 %155, %156
  %164 = lshr i32 %163, 12
  %165 = mul i32 %164, %162
  %166 = add i32 %165, %156
  %167 = and i32 %163, 4095
  %168 = mul i32 %167, %162
  %169 = lshr i32 %168, 12
  %170 = add i32 %166, %169
  %171 = load i32, ptr %25, align 4, !tbaa !232
  %172 = icmp eq i32 %171, 1
  %173 = load i32, ptr %26, align 8
  %174 = icmp ule i32 %173, %170
  %175 = zext i1 %174 to i32
  %176 = select i1 %172, i32 %175, i32 %158
  store i32 %176, ptr @y, align 4, !tbaa !25
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %179, label %178

178:                                              ; preds = %154
  store i32 %170, ptr %24, align 4, !tbaa !237
  br label %181

179:                                              ; preds = %154
  %180 = add i32 %170, 1
  store i32 %180, ptr %23, align 8, !tbaa !236
  br label %181

181:                                              ; preds = %179, %178
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %182 = load i32, ptr %23, align 8, !tbaa !236
  %183 = load i32, ptr %24, align 4, !tbaa !237
  %184 = xor i32 %183, %182
  %185 = icmp ult i32 %184, 16777216
  br i1 %185, label %186, label %220

186:                                              ; preds = %181, %215
  %187 = phi i32 [ %217, %215 ], [ %182, %181 ]
  %188 = phi i32 [ %216, %215 ], [ %183, %181 ]
  %189 = load i32, ptr %25, align 4, !tbaa !232
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %186
  %192 = lshr i32 %188, 24
  %193 = load ptr, ptr %9, align 8, !tbaa !235
  %194 = tail call i32 @putc(i32 noundef %192, ptr noundef %193)
  %195 = load i32, ptr %23, align 8, !tbaa !236
  %196 = load i32, ptr %24, align 4, !tbaa !237
  %197 = load i32, ptr %25, align 4, !tbaa !232
  br label %198

198:                                              ; preds = %191, %186
  %199 = phi i32 [ %197, %191 ], [ %189, %186 ]
  %200 = phi i32 [ %196, %191 ], [ %188, %186 ]
  %201 = phi i32 [ %195, %191 ], [ %187, %186 ]
  %202 = shl i32 %201, 8
  store i32 %202, ptr %23, align 8, !tbaa !236
  %203 = shl i32 %200, 8
  %204 = or i32 %203, 255
  store i32 %204, ptr %24, align 4, !tbaa !237
  %205 = icmp eq i32 %199, 1
  br i1 %205, label %206, label %215

206:                                              ; preds = %198
  %207 = load i32, ptr %26, align 8, !tbaa !238
  %208 = shl i32 %207, 8
  %209 = load ptr, ptr %9, align 8, !tbaa !235
  %210 = tail call i32 @getc(ptr noundef %209)
  %211 = and i32 %210, 255
  %212 = or i32 %211, %208
  store i32 %212, ptr %26, align 8, !tbaa !238
  %213 = load i32, ptr %23, align 8, !tbaa !236
  %214 = load i32, ptr %24, align 4, !tbaa !237
  br label %215

215:                                              ; preds = %206, %198
  %216 = phi i32 [ %214, %206 ], [ %204, %198 ]
  %217 = phi i32 [ %213, %206 ], [ %202, %198 ]
  %218 = xor i32 %217, %216
  %219 = icmp ult i32 %218, 16777216
  br i1 %219, label %186, label %220, !llvm.loop !255

220:                                              ; preds = %215, %181
  %221 = phi i32 [ %183, %181 ], [ %216, %215 ]
  %222 = phi i32 [ %182, %181 ], [ %217, %215 ]
  %223 = lshr i32 %85, 5
  %224 = and i32 %223, 1
  %225 = load i32, ptr %2, align 8, !tbaa !230
  %226 = icmp slt i32 %225, 2048
  %227 = zext i1 %226 to i32
  %228 = add nsw i32 %225, %227
  %229 = sub i32 %221, %222
  %230 = lshr i32 %229, 12
  %231 = mul i32 %230, %228
  %232 = add i32 %231, %222
  %233 = and i32 %229, 4095
  %234 = mul i32 %233, %228
  %235 = lshr i32 %234, 12
  %236 = add i32 %232, %235
  %237 = load i32, ptr %25, align 4, !tbaa !232
  %238 = icmp eq i32 %237, 1
  %239 = load i32, ptr %26, align 8
  %240 = icmp ule i32 %239, %236
  %241 = zext i1 %240 to i32
  %242 = select i1 %238, i32 %241, i32 %224
  store i32 %242, ptr @y, align 4, !tbaa !25
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %245, label %244

244:                                              ; preds = %220
  store i32 %236, ptr %24, align 4, !tbaa !237
  br label %247

245:                                              ; preds = %220
  %246 = add i32 %236, 1
  store i32 %246, ptr %23, align 8, !tbaa !236
  br label %247

247:                                              ; preds = %245, %244
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %248 = load i32, ptr %23, align 8, !tbaa !236
  %249 = load i32, ptr %24, align 4, !tbaa !237
  %250 = xor i32 %249, %248
  %251 = icmp ult i32 %250, 16777216
  br i1 %251, label %252, label %286

252:                                              ; preds = %247, %281
  %253 = phi i32 [ %283, %281 ], [ %248, %247 ]
  %254 = phi i32 [ %282, %281 ], [ %249, %247 ]
  %255 = load i32, ptr %25, align 4, !tbaa !232
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %264

257:                                              ; preds = %252
  %258 = lshr i32 %254, 24
  %259 = load ptr, ptr %9, align 8, !tbaa !235
  %260 = tail call i32 @putc(i32 noundef %258, ptr noundef %259)
  %261 = load i32, ptr %23, align 8, !tbaa !236
  %262 = load i32, ptr %24, align 4, !tbaa !237
  %263 = load i32, ptr %25, align 4, !tbaa !232
  br label %264

264:                                              ; preds = %257, %252
  %265 = phi i32 [ %263, %257 ], [ %255, %252 ]
  %266 = phi i32 [ %262, %257 ], [ %254, %252 ]
  %267 = phi i32 [ %261, %257 ], [ %253, %252 ]
  %268 = shl i32 %267, 8
  store i32 %268, ptr %23, align 8, !tbaa !236
  %269 = shl i32 %266, 8
  %270 = or i32 %269, 255
  store i32 %270, ptr %24, align 4, !tbaa !237
  %271 = icmp eq i32 %265, 1
  br i1 %271, label %272, label %281

272:                                              ; preds = %264
  %273 = load i32, ptr %26, align 8, !tbaa !238
  %274 = shl i32 %273, 8
  %275 = load ptr, ptr %9, align 8, !tbaa !235
  %276 = tail call i32 @getc(ptr noundef %275)
  %277 = and i32 %276, 255
  %278 = or i32 %277, %274
  store i32 %278, ptr %26, align 8, !tbaa !238
  %279 = load i32, ptr %23, align 8, !tbaa !236
  %280 = load i32, ptr %24, align 4, !tbaa !237
  br label %281

281:                                              ; preds = %272, %264
  %282 = phi i32 [ %280, %272 ], [ %270, %264 ]
  %283 = phi i32 [ %279, %272 ], [ %268, %264 ]
  %284 = xor i32 %283, %282
  %285 = icmp ult i32 %284, 16777216
  br i1 %285, label %252, label %286, !llvm.loop !255

286:                                              ; preds = %281, %247
  %287 = phi i32 [ %249, %247 ], [ %282, %281 ]
  %288 = phi i32 [ %248, %247 ], [ %283, %281 ]
  %289 = lshr i32 %85, 4
  %290 = and i32 %289, 1
  %291 = load i32, ptr %2, align 8, !tbaa !230
  %292 = icmp slt i32 %291, 2048
  %293 = zext i1 %292 to i32
  %294 = add nsw i32 %291, %293
  %295 = sub i32 %287, %288
  %296 = lshr i32 %295, 12
  %297 = mul i32 %296, %294
  %298 = add i32 %297, %288
  %299 = and i32 %295, 4095
  %300 = mul i32 %299, %294
  %301 = lshr i32 %300, 12
  %302 = add i32 %298, %301
  %303 = load i32, ptr %25, align 4, !tbaa !232
  %304 = icmp eq i32 %303, 1
  %305 = load i32, ptr %26, align 8
  %306 = icmp ule i32 %305, %302
  %307 = zext i1 %306 to i32
  %308 = select i1 %304, i32 %307, i32 %290
  store i32 %308, ptr @y, align 4, !tbaa !25
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %311, label %310

310:                                              ; preds = %286
  store i32 %302, ptr %24, align 4, !tbaa !237
  br label %313

311:                                              ; preds = %286
  %312 = add i32 %302, 1
  store i32 %312, ptr %23, align 8, !tbaa !236
  br label %313

313:                                              ; preds = %311, %310
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %314 = load i32, ptr %23, align 8, !tbaa !236
  %315 = load i32, ptr %24, align 4, !tbaa !237
  %316 = xor i32 %315, %314
  %317 = icmp ult i32 %316, 16777216
  br i1 %317, label %318, label %352

318:                                              ; preds = %313, %347
  %319 = phi i32 [ %349, %347 ], [ %314, %313 ]
  %320 = phi i32 [ %348, %347 ], [ %315, %313 ]
  %321 = load i32, ptr %25, align 4, !tbaa !232
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %330

323:                                              ; preds = %318
  %324 = lshr i32 %320, 24
  %325 = load ptr, ptr %9, align 8, !tbaa !235
  %326 = tail call i32 @putc(i32 noundef %324, ptr noundef %325)
  %327 = load i32, ptr %23, align 8, !tbaa !236
  %328 = load i32, ptr %24, align 4, !tbaa !237
  %329 = load i32, ptr %25, align 4, !tbaa !232
  br label %330

330:                                              ; preds = %323, %318
  %331 = phi i32 [ %329, %323 ], [ %321, %318 ]
  %332 = phi i32 [ %328, %323 ], [ %320, %318 ]
  %333 = phi i32 [ %327, %323 ], [ %319, %318 ]
  %334 = shl i32 %333, 8
  store i32 %334, ptr %23, align 8, !tbaa !236
  %335 = shl i32 %332, 8
  %336 = or i32 %335, 255
  store i32 %336, ptr %24, align 4, !tbaa !237
  %337 = icmp eq i32 %331, 1
  br i1 %337, label %338, label %347

338:                                              ; preds = %330
  %339 = load i32, ptr %26, align 8, !tbaa !238
  %340 = shl i32 %339, 8
  %341 = load ptr, ptr %9, align 8, !tbaa !235
  %342 = tail call i32 @getc(ptr noundef %341)
  %343 = and i32 %342, 255
  %344 = or i32 %343, %340
  store i32 %344, ptr %26, align 8, !tbaa !238
  %345 = load i32, ptr %23, align 8, !tbaa !236
  %346 = load i32, ptr %24, align 4, !tbaa !237
  br label %347

347:                                              ; preds = %338, %330
  %348 = phi i32 [ %346, %338 ], [ %336, %330 ]
  %349 = phi i32 [ %345, %338 ], [ %334, %330 ]
  %350 = xor i32 %349, %348
  %351 = icmp ult i32 %350, 16777216
  br i1 %351, label %318, label %352, !llvm.loop !255

352:                                              ; preds = %347, %313
  %353 = phi i32 [ %315, %313 ], [ %348, %347 ]
  %354 = phi i32 [ %314, %313 ], [ %349, %347 ]
  %355 = lshr i32 %85, 3
  %356 = and i32 %355, 1
  %357 = load i32, ptr %2, align 8, !tbaa !230
  %358 = icmp slt i32 %357, 2048
  %359 = zext i1 %358 to i32
  %360 = add nsw i32 %357, %359
  %361 = sub i32 %353, %354
  %362 = lshr i32 %361, 12
  %363 = mul i32 %362, %360
  %364 = add i32 %363, %354
  %365 = and i32 %361, 4095
  %366 = mul i32 %365, %360
  %367 = lshr i32 %366, 12
  %368 = add i32 %364, %367
  %369 = load i32, ptr %25, align 4, !tbaa !232
  %370 = icmp eq i32 %369, 1
  %371 = load i32, ptr %26, align 8
  %372 = icmp ule i32 %371, %368
  %373 = zext i1 %372 to i32
  %374 = select i1 %370, i32 %373, i32 %356
  store i32 %374, ptr @y, align 4, !tbaa !25
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %377, label %376

376:                                              ; preds = %352
  store i32 %368, ptr %24, align 4, !tbaa !237
  br label %379

377:                                              ; preds = %352
  %378 = add i32 %368, 1
  store i32 %378, ptr %23, align 8, !tbaa !236
  br label %379

379:                                              ; preds = %377, %376
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %380 = load i32, ptr %23, align 8, !tbaa !236
  %381 = load i32, ptr %24, align 4, !tbaa !237
  %382 = xor i32 %381, %380
  %383 = icmp ult i32 %382, 16777216
  br i1 %383, label %384, label %418

384:                                              ; preds = %379, %413
  %385 = phi i32 [ %415, %413 ], [ %380, %379 ]
  %386 = phi i32 [ %414, %413 ], [ %381, %379 ]
  %387 = load i32, ptr %25, align 4, !tbaa !232
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %396

389:                                              ; preds = %384
  %390 = lshr i32 %386, 24
  %391 = load ptr, ptr %9, align 8, !tbaa !235
  %392 = tail call i32 @putc(i32 noundef %390, ptr noundef %391)
  %393 = load i32, ptr %23, align 8, !tbaa !236
  %394 = load i32, ptr %24, align 4, !tbaa !237
  %395 = load i32, ptr %25, align 4, !tbaa !232
  br label %396

396:                                              ; preds = %389, %384
  %397 = phi i32 [ %395, %389 ], [ %387, %384 ]
  %398 = phi i32 [ %394, %389 ], [ %386, %384 ]
  %399 = phi i32 [ %393, %389 ], [ %385, %384 ]
  %400 = shl i32 %399, 8
  store i32 %400, ptr %23, align 8, !tbaa !236
  %401 = shl i32 %398, 8
  %402 = or i32 %401, 255
  store i32 %402, ptr %24, align 4, !tbaa !237
  %403 = icmp eq i32 %397, 1
  br i1 %403, label %404, label %413

404:                                              ; preds = %396
  %405 = load i32, ptr %26, align 8, !tbaa !238
  %406 = shl i32 %405, 8
  %407 = load ptr, ptr %9, align 8, !tbaa !235
  %408 = tail call i32 @getc(ptr noundef %407)
  %409 = and i32 %408, 255
  %410 = or i32 %409, %406
  store i32 %410, ptr %26, align 8, !tbaa !238
  %411 = load i32, ptr %23, align 8, !tbaa !236
  %412 = load i32, ptr %24, align 4, !tbaa !237
  br label %413

413:                                              ; preds = %404, %396
  %414 = phi i32 [ %412, %404 ], [ %402, %396 ]
  %415 = phi i32 [ %411, %404 ], [ %400, %396 ]
  %416 = xor i32 %415, %414
  %417 = icmp ult i32 %416, 16777216
  br i1 %417, label %384, label %418, !llvm.loop !255

418:                                              ; preds = %413, %379
  %419 = phi i32 [ %381, %379 ], [ %414, %413 ]
  %420 = phi i32 [ %380, %379 ], [ %415, %413 ]
  %421 = lshr i32 %85, 2
  %422 = and i32 %421, 1
  %423 = load i32, ptr %2, align 8, !tbaa !230
  %424 = icmp slt i32 %423, 2048
  %425 = zext i1 %424 to i32
  %426 = add nsw i32 %423, %425
  %427 = sub i32 %419, %420
  %428 = lshr i32 %427, 12
  %429 = mul i32 %428, %426
  %430 = add i32 %429, %420
  %431 = and i32 %427, 4095
  %432 = mul i32 %431, %426
  %433 = lshr i32 %432, 12
  %434 = add i32 %430, %433
  %435 = load i32, ptr %25, align 4, !tbaa !232
  %436 = icmp eq i32 %435, 1
  %437 = load i32, ptr %26, align 8
  %438 = icmp ule i32 %437, %434
  %439 = zext i1 %438 to i32
  %440 = select i1 %436, i32 %439, i32 %422
  store i32 %440, ptr @y, align 4, !tbaa !25
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %443, label %442

442:                                              ; preds = %418
  store i32 %434, ptr %24, align 4, !tbaa !237
  br label %445

443:                                              ; preds = %418
  %444 = add i32 %434, 1
  store i32 %444, ptr %23, align 8, !tbaa !236
  br label %445

445:                                              ; preds = %443, %442
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %446 = load i32, ptr %23, align 8, !tbaa !236
  %447 = load i32, ptr %24, align 4, !tbaa !237
  %448 = xor i32 %447, %446
  %449 = icmp ult i32 %448, 16777216
  br i1 %449, label %450, label %484

450:                                              ; preds = %445, %479
  %451 = phi i32 [ %481, %479 ], [ %446, %445 ]
  %452 = phi i32 [ %480, %479 ], [ %447, %445 ]
  %453 = load i32, ptr %25, align 4, !tbaa !232
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %455, label %462

455:                                              ; preds = %450
  %456 = lshr i32 %452, 24
  %457 = load ptr, ptr %9, align 8, !tbaa !235
  %458 = tail call i32 @putc(i32 noundef %456, ptr noundef %457)
  %459 = load i32, ptr %23, align 8, !tbaa !236
  %460 = load i32, ptr %24, align 4, !tbaa !237
  %461 = load i32, ptr %25, align 4, !tbaa !232
  br label %462

462:                                              ; preds = %455, %450
  %463 = phi i32 [ %461, %455 ], [ %453, %450 ]
  %464 = phi i32 [ %460, %455 ], [ %452, %450 ]
  %465 = phi i32 [ %459, %455 ], [ %451, %450 ]
  %466 = shl i32 %465, 8
  store i32 %466, ptr %23, align 8, !tbaa !236
  %467 = shl i32 %464, 8
  %468 = or i32 %467, 255
  store i32 %468, ptr %24, align 4, !tbaa !237
  %469 = icmp eq i32 %463, 1
  br i1 %469, label %470, label %479

470:                                              ; preds = %462
  %471 = load i32, ptr %26, align 8, !tbaa !238
  %472 = shl i32 %471, 8
  %473 = load ptr, ptr %9, align 8, !tbaa !235
  %474 = tail call i32 @getc(ptr noundef %473)
  %475 = and i32 %474, 255
  %476 = or i32 %475, %472
  store i32 %476, ptr %26, align 8, !tbaa !238
  %477 = load i32, ptr %23, align 8, !tbaa !236
  %478 = load i32, ptr %24, align 4, !tbaa !237
  br label %479

479:                                              ; preds = %470, %462
  %480 = phi i32 [ %478, %470 ], [ %468, %462 ]
  %481 = phi i32 [ %477, %470 ], [ %466, %462 ]
  %482 = xor i32 %481, %480
  %483 = icmp ult i32 %482, 16777216
  br i1 %483, label %450, label %484, !llvm.loop !255

484:                                              ; preds = %479, %445
  %485 = phi i32 [ %447, %445 ], [ %480, %479 ]
  %486 = phi i32 [ %446, %445 ], [ %481, %479 ]
  %487 = lshr i32 %85, 1
  %488 = and i32 %487, 1
  %489 = load i32, ptr %2, align 8, !tbaa !230
  %490 = icmp slt i32 %489, 2048
  %491 = zext i1 %490 to i32
  %492 = add nsw i32 %489, %491
  %493 = sub i32 %485, %486
  %494 = lshr i32 %493, 12
  %495 = mul i32 %494, %492
  %496 = add i32 %495, %486
  %497 = and i32 %493, 4095
  %498 = mul i32 %497, %492
  %499 = lshr i32 %498, 12
  %500 = add i32 %496, %499
  %501 = load i32, ptr %25, align 4, !tbaa !232
  %502 = icmp eq i32 %501, 1
  %503 = load i32, ptr %26, align 8
  %504 = icmp ule i32 %503, %500
  %505 = zext i1 %504 to i32
  %506 = select i1 %502, i32 %505, i32 %488
  store i32 %506, ptr @y, align 4, !tbaa !25
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %509, label %508

508:                                              ; preds = %484
  store i32 %500, ptr %24, align 4, !tbaa !237
  br label %511

509:                                              ; preds = %484
  %510 = add i32 %500, 1
  store i32 %510, ptr %23, align 8, !tbaa !236
  br label %511

511:                                              ; preds = %509, %508
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %512 = load i32, ptr %23, align 8, !tbaa !236
  %513 = load i32, ptr %24, align 4, !tbaa !237
  %514 = xor i32 %513, %512
  %515 = icmp ult i32 %514, 16777216
  br i1 %515, label %516, label %550

516:                                              ; preds = %511, %545
  %517 = phi i32 [ %547, %545 ], [ %512, %511 ]
  %518 = phi i32 [ %546, %545 ], [ %513, %511 ]
  %519 = load i32, ptr %25, align 4, !tbaa !232
  %520 = icmp eq i32 %519, 0
  br i1 %520, label %521, label %528

521:                                              ; preds = %516
  %522 = lshr i32 %518, 24
  %523 = load ptr, ptr %9, align 8, !tbaa !235
  %524 = tail call i32 @putc(i32 noundef %522, ptr noundef %523)
  %525 = load i32, ptr %23, align 8, !tbaa !236
  %526 = load i32, ptr %24, align 4, !tbaa !237
  %527 = load i32, ptr %25, align 4, !tbaa !232
  br label %528

528:                                              ; preds = %521, %516
  %529 = phi i32 [ %527, %521 ], [ %519, %516 ]
  %530 = phi i32 [ %526, %521 ], [ %518, %516 ]
  %531 = phi i32 [ %525, %521 ], [ %517, %516 ]
  %532 = shl i32 %531, 8
  store i32 %532, ptr %23, align 8, !tbaa !236
  %533 = shl i32 %530, 8
  %534 = or i32 %533, 255
  store i32 %534, ptr %24, align 4, !tbaa !237
  %535 = icmp eq i32 %529, 1
  br i1 %535, label %536, label %545

536:                                              ; preds = %528
  %537 = load i32, ptr %26, align 8, !tbaa !238
  %538 = shl i32 %537, 8
  %539 = load ptr, ptr %9, align 8, !tbaa !235
  %540 = tail call i32 @getc(ptr noundef %539)
  %541 = and i32 %540, 255
  %542 = or i32 %541, %538
  store i32 %542, ptr %26, align 8, !tbaa !238
  %543 = load i32, ptr %23, align 8, !tbaa !236
  %544 = load i32, ptr %24, align 4, !tbaa !237
  br label %545

545:                                              ; preds = %536, %528
  %546 = phi i32 [ %544, %536 ], [ %534, %528 ]
  %547 = phi i32 [ %543, %536 ], [ %532, %528 ]
  %548 = xor i32 %547, %546
  %549 = icmp ult i32 %548, 16777216
  br i1 %549, label %516, label %550, !llvm.loop !255

550:                                              ; preds = %545, %511
  %551 = phi i32 [ %513, %511 ], [ %546, %545 ]
  %552 = phi i32 [ %512, %511 ], [ %547, %545 ]
  %553 = and i32 %85, 1
  %554 = load i32, ptr %2, align 8, !tbaa !230
  %555 = icmp slt i32 %554, 2048
  %556 = zext i1 %555 to i32
  %557 = add nsw i32 %554, %556
  %558 = sub i32 %551, %552
  %559 = lshr i32 %558, 12
  %560 = mul i32 %559, %557
  %561 = add i32 %560, %552
  %562 = and i32 %558, 4095
  %563 = mul i32 %562, %557
  %564 = lshr i32 %563, 12
  %565 = add i32 %561, %564
  %566 = load i32, ptr %25, align 4, !tbaa !232
  %567 = icmp eq i32 %566, 1
  %568 = load i32, ptr %26, align 8
  %569 = icmp ule i32 %568, %565
  %570 = zext i1 %569 to i32
  %571 = select i1 %567, i32 %570, i32 %553
  store i32 %571, ptr @y, align 4, !tbaa !25
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %574, label %573

573:                                              ; preds = %550
  store i32 %565, ptr %24, align 4, !tbaa !237
  br label %576

574:                                              ; preds = %550
  %575 = add i32 %565, 1
  store i32 %575, ptr %23, align 8, !tbaa !236
  br label %576

576:                                              ; preds = %574, %573
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %577 = load i32, ptr %23, align 8, !tbaa !236
  %578 = load i32, ptr %24, align 4, !tbaa !237
  %579 = xor i32 %578, %577
  %580 = icmp ult i32 %579, 16777216
  br i1 %580, label %581, label %618

581:                                              ; preds = %576, %610
  %582 = phi i32 [ %612, %610 ], [ %577, %576 ]
  %583 = phi i32 [ %611, %610 ], [ %578, %576 ]
  %584 = load i32, ptr %25, align 4, !tbaa !232
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %586, label %593

586:                                              ; preds = %581
  %587 = lshr i32 %583, 24
  %588 = load ptr, ptr %9, align 8, !tbaa !235
  %589 = tail call i32 @putc(i32 noundef %587, ptr noundef %588)
  %590 = load i32, ptr %23, align 8, !tbaa !236
  %591 = load i32, ptr %24, align 4, !tbaa !237
  %592 = load i32, ptr %25, align 4, !tbaa !232
  br label %593

593:                                              ; preds = %586, %581
  %594 = phi i32 [ %592, %586 ], [ %584, %581 ]
  %595 = phi i32 [ %591, %586 ], [ %583, %581 ]
  %596 = phi i32 [ %590, %586 ], [ %582, %581 ]
  %597 = shl i32 %596, 8
  store i32 %597, ptr %23, align 8, !tbaa !236
  %598 = shl i32 %595, 8
  %599 = or i32 %598, 255
  store i32 %599, ptr %24, align 4, !tbaa !237
  %600 = icmp eq i32 %594, 1
  br i1 %600, label %601, label %610

601:                                              ; preds = %593
  %602 = load i32, ptr %26, align 8, !tbaa !238
  %603 = shl i32 %602, 8
  %604 = load ptr, ptr %9, align 8, !tbaa !235
  %605 = tail call i32 @getc(ptr noundef %604)
  %606 = and i32 %605, 255
  %607 = or i32 %606, %603
  store i32 %607, ptr %26, align 8, !tbaa !238
  %608 = load i32, ptr %23, align 8, !tbaa !236
  %609 = load i32, ptr %24, align 4, !tbaa !237
  br label %610

610:                                              ; preds = %601, %593
  %611 = phi i32 [ %609, %601 ], [ %599, %593 ]
  %612 = phi i32 [ %608, %601 ], [ %597, %593 ]
  %613 = xor i32 %612, %611
  %614 = icmp ult i32 %613, 16777216
  br i1 %614, label %581, label %618, !llvm.loop !255

615:                                              ; preds = %84
  %616 = load ptr, ptr %9, align 8, !tbaa !235
  %617 = tail call i32 @putc(i32 noundef %85, ptr noundef %616)
  br label %618

618:                                              ; preds = %610, %576, %615
  %619 = add nuw nsw i32 %74, 1
  %620 = icmp eq i32 %619, %32
  br i1 %620, label %1175, label %73, !llvm.loop !256

621:                                              ; preds = %55
  tail call void @rewind(ptr noundef nonnull %33)
  %622 = tail call i32 @getc(ptr noundef nonnull %33)
  %623 = icmp eq i32 %622, -1
  br i1 %623, label %1175, label %624

624:                                              ; preds = %621
  %625 = trunc i64 %28 to i32
  br label %626

626:                                              ; preds = %624, %1172
  %627 = phi i32 [ %1173, %1172 ], [ %622, %624 ]
  %628 = phi i32 [ %629, %1172 ], [ 0, %624 ]
  %629 = add i32 %628, 1
  %630 = add i32 %628, %625
  %631 = icmp sgt i32 %630, 0
  %632 = and i32 %628, 4095
  %633 = icmp eq i32 %632, 0
  %634 = and i1 %631, %633
  br i1 %634, label %635, label %639

635:                                              ; preds = %626
  %636 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %630)
  %637 = load ptr, ptr @stdout, align 8, !tbaa !5
  %638 = tail call i32 @fflush(ptr noundef %637)
  br label %639

639:                                              ; preds = %626, %635
  %640 = load i32, ptr @level, align 4, !tbaa !25
  %641 = icmp eq i32 %640, 0
  br i1 %641, label %1169, label %642

642:                                              ; preds = %639
  %643 = lshr i32 %627, 7
  %644 = and i32 %643, 1
  %645 = load i32, ptr %2, align 8, !tbaa !230
  %646 = icmp slt i32 %645, 2048
  %647 = zext i1 %646 to i32
  %648 = add nsw i32 %645, %647
  %649 = load i32, ptr %23, align 8, !tbaa !236
  %650 = load i32, ptr %24, align 4, !tbaa !237
  %651 = sub i32 %650, %649
  %652 = lshr i32 %651, 12
  %653 = mul i32 %652, %648
  %654 = add i32 %653, %649
  %655 = and i32 %651, 4095
  %656 = mul i32 %655, %648
  %657 = lshr i32 %656, 12
  %658 = add i32 %654, %657
  %659 = load i32, ptr %25, align 4, !tbaa !232
  %660 = icmp eq i32 %659, 1
  %661 = load i32, ptr %26, align 8
  %662 = icmp ule i32 %661, %658
  %663 = zext i1 %662 to i32
  %664 = select i1 %660, i32 %663, i32 %644
  store i32 %664, ptr @y, align 4, !tbaa !25
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %667, label %666

666:                                              ; preds = %642
  store i32 %658, ptr %24, align 4, !tbaa !237
  br label %669

667:                                              ; preds = %642
  %668 = add i32 %658, 1
  store i32 %668, ptr %23, align 8, !tbaa !236
  br label %669

669:                                              ; preds = %667, %666
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %670 = load i32, ptr %23, align 8, !tbaa !236
  %671 = load i32, ptr %24, align 4, !tbaa !237
  %672 = xor i32 %671, %670
  %673 = icmp ult i32 %672, 16777216
  br i1 %673, label %674, label %708

674:                                              ; preds = %669, %703
  %675 = phi i32 [ %705, %703 ], [ %670, %669 ]
  %676 = phi i32 [ %704, %703 ], [ %671, %669 ]
  %677 = load i32, ptr %25, align 4, !tbaa !232
  %678 = icmp eq i32 %677, 0
  br i1 %678, label %679, label %686

679:                                              ; preds = %674
  %680 = lshr i32 %676, 24
  %681 = load ptr, ptr %9, align 8, !tbaa !235
  %682 = tail call i32 @putc(i32 noundef %680, ptr noundef %681)
  %683 = load i32, ptr %23, align 8, !tbaa !236
  %684 = load i32, ptr %24, align 4, !tbaa !237
  %685 = load i32, ptr %25, align 4, !tbaa !232
  br label %686

686:                                              ; preds = %679, %674
  %687 = phi i32 [ %685, %679 ], [ %677, %674 ]
  %688 = phi i32 [ %684, %679 ], [ %676, %674 ]
  %689 = phi i32 [ %683, %679 ], [ %675, %674 ]
  %690 = shl i32 %689, 8
  store i32 %690, ptr %23, align 8, !tbaa !236
  %691 = shl i32 %688, 8
  %692 = or i32 %691, 255
  store i32 %692, ptr %24, align 4, !tbaa !237
  %693 = icmp eq i32 %687, 1
  br i1 %693, label %694, label %703

694:                                              ; preds = %686
  %695 = load i32, ptr %26, align 8, !tbaa !238
  %696 = shl i32 %695, 8
  %697 = load ptr, ptr %9, align 8, !tbaa !235
  %698 = tail call i32 @getc(ptr noundef %697)
  %699 = and i32 %698, 255
  %700 = or i32 %699, %696
  store i32 %700, ptr %26, align 8, !tbaa !238
  %701 = load i32, ptr %23, align 8, !tbaa !236
  %702 = load i32, ptr %24, align 4, !tbaa !237
  br label %703

703:                                              ; preds = %694, %686
  %704 = phi i32 [ %702, %694 ], [ %692, %686 ]
  %705 = phi i32 [ %701, %694 ], [ %690, %686 ]
  %706 = xor i32 %705, %704
  %707 = icmp ult i32 %706, 16777216
  br i1 %707, label %674, label %708, !llvm.loop !255

708:                                              ; preds = %703, %669
  %709 = phi i32 [ %671, %669 ], [ %704, %703 ]
  %710 = phi i32 [ %670, %669 ], [ %705, %703 ]
  %711 = lshr i32 %627, 6
  %712 = and i32 %711, 1
  %713 = load i32, ptr %2, align 8, !tbaa !230
  %714 = icmp slt i32 %713, 2048
  %715 = zext i1 %714 to i32
  %716 = add nsw i32 %713, %715
  %717 = sub i32 %709, %710
  %718 = lshr i32 %717, 12
  %719 = mul i32 %718, %716
  %720 = add i32 %719, %710
  %721 = and i32 %717, 4095
  %722 = mul i32 %721, %716
  %723 = lshr i32 %722, 12
  %724 = add i32 %720, %723
  %725 = load i32, ptr %25, align 4, !tbaa !232
  %726 = icmp eq i32 %725, 1
  %727 = load i32, ptr %26, align 8
  %728 = icmp ule i32 %727, %724
  %729 = zext i1 %728 to i32
  %730 = select i1 %726, i32 %729, i32 %712
  store i32 %730, ptr @y, align 4, !tbaa !25
  %731 = icmp eq i32 %730, 0
  br i1 %731, label %733, label %732

732:                                              ; preds = %708
  store i32 %724, ptr %24, align 4, !tbaa !237
  br label %735

733:                                              ; preds = %708
  %734 = add i32 %724, 1
  store i32 %734, ptr %23, align 8, !tbaa !236
  br label %735

735:                                              ; preds = %733, %732
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %736 = load i32, ptr %23, align 8, !tbaa !236
  %737 = load i32, ptr %24, align 4, !tbaa !237
  %738 = xor i32 %737, %736
  %739 = icmp ult i32 %738, 16777216
  br i1 %739, label %740, label %774

740:                                              ; preds = %735, %769
  %741 = phi i32 [ %771, %769 ], [ %736, %735 ]
  %742 = phi i32 [ %770, %769 ], [ %737, %735 ]
  %743 = load i32, ptr %25, align 4, !tbaa !232
  %744 = icmp eq i32 %743, 0
  br i1 %744, label %745, label %752

745:                                              ; preds = %740
  %746 = lshr i32 %742, 24
  %747 = load ptr, ptr %9, align 8, !tbaa !235
  %748 = tail call i32 @putc(i32 noundef %746, ptr noundef %747)
  %749 = load i32, ptr %23, align 8, !tbaa !236
  %750 = load i32, ptr %24, align 4, !tbaa !237
  %751 = load i32, ptr %25, align 4, !tbaa !232
  br label %752

752:                                              ; preds = %745, %740
  %753 = phi i32 [ %751, %745 ], [ %743, %740 ]
  %754 = phi i32 [ %750, %745 ], [ %742, %740 ]
  %755 = phi i32 [ %749, %745 ], [ %741, %740 ]
  %756 = shl i32 %755, 8
  store i32 %756, ptr %23, align 8, !tbaa !236
  %757 = shl i32 %754, 8
  %758 = or i32 %757, 255
  store i32 %758, ptr %24, align 4, !tbaa !237
  %759 = icmp eq i32 %753, 1
  br i1 %759, label %760, label %769

760:                                              ; preds = %752
  %761 = load i32, ptr %26, align 8, !tbaa !238
  %762 = shl i32 %761, 8
  %763 = load ptr, ptr %9, align 8, !tbaa !235
  %764 = tail call i32 @getc(ptr noundef %763)
  %765 = and i32 %764, 255
  %766 = or i32 %765, %762
  store i32 %766, ptr %26, align 8, !tbaa !238
  %767 = load i32, ptr %23, align 8, !tbaa !236
  %768 = load i32, ptr %24, align 4, !tbaa !237
  br label %769

769:                                              ; preds = %760, %752
  %770 = phi i32 [ %768, %760 ], [ %758, %752 ]
  %771 = phi i32 [ %767, %760 ], [ %756, %752 ]
  %772 = xor i32 %771, %770
  %773 = icmp ult i32 %772, 16777216
  br i1 %773, label %740, label %774, !llvm.loop !255

774:                                              ; preds = %769, %735
  %775 = phi i32 [ %737, %735 ], [ %770, %769 ]
  %776 = phi i32 [ %736, %735 ], [ %771, %769 ]
  %777 = lshr i32 %627, 5
  %778 = and i32 %777, 1
  %779 = load i32, ptr %2, align 8, !tbaa !230
  %780 = icmp slt i32 %779, 2048
  %781 = zext i1 %780 to i32
  %782 = add nsw i32 %779, %781
  %783 = sub i32 %775, %776
  %784 = lshr i32 %783, 12
  %785 = mul i32 %784, %782
  %786 = add i32 %785, %776
  %787 = and i32 %783, 4095
  %788 = mul i32 %787, %782
  %789 = lshr i32 %788, 12
  %790 = add i32 %786, %789
  %791 = load i32, ptr %25, align 4, !tbaa !232
  %792 = icmp eq i32 %791, 1
  %793 = load i32, ptr %26, align 8
  %794 = icmp ule i32 %793, %790
  %795 = zext i1 %794 to i32
  %796 = select i1 %792, i32 %795, i32 %778
  store i32 %796, ptr @y, align 4, !tbaa !25
  %797 = icmp eq i32 %796, 0
  br i1 %797, label %799, label %798

798:                                              ; preds = %774
  store i32 %790, ptr %24, align 4, !tbaa !237
  br label %801

799:                                              ; preds = %774
  %800 = add i32 %790, 1
  store i32 %800, ptr %23, align 8, !tbaa !236
  br label %801

801:                                              ; preds = %799, %798
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %802 = load i32, ptr %23, align 8, !tbaa !236
  %803 = load i32, ptr %24, align 4, !tbaa !237
  %804 = xor i32 %803, %802
  %805 = icmp ult i32 %804, 16777216
  br i1 %805, label %806, label %840

806:                                              ; preds = %801, %835
  %807 = phi i32 [ %837, %835 ], [ %802, %801 ]
  %808 = phi i32 [ %836, %835 ], [ %803, %801 ]
  %809 = load i32, ptr %25, align 4, !tbaa !232
  %810 = icmp eq i32 %809, 0
  br i1 %810, label %811, label %818

811:                                              ; preds = %806
  %812 = lshr i32 %808, 24
  %813 = load ptr, ptr %9, align 8, !tbaa !235
  %814 = tail call i32 @putc(i32 noundef %812, ptr noundef %813)
  %815 = load i32, ptr %23, align 8, !tbaa !236
  %816 = load i32, ptr %24, align 4, !tbaa !237
  %817 = load i32, ptr %25, align 4, !tbaa !232
  br label %818

818:                                              ; preds = %811, %806
  %819 = phi i32 [ %817, %811 ], [ %809, %806 ]
  %820 = phi i32 [ %816, %811 ], [ %808, %806 ]
  %821 = phi i32 [ %815, %811 ], [ %807, %806 ]
  %822 = shl i32 %821, 8
  store i32 %822, ptr %23, align 8, !tbaa !236
  %823 = shl i32 %820, 8
  %824 = or i32 %823, 255
  store i32 %824, ptr %24, align 4, !tbaa !237
  %825 = icmp eq i32 %819, 1
  br i1 %825, label %826, label %835

826:                                              ; preds = %818
  %827 = load i32, ptr %26, align 8, !tbaa !238
  %828 = shl i32 %827, 8
  %829 = load ptr, ptr %9, align 8, !tbaa !235
  %830 = tail call i32 @getc(ptr noundef %829)
  %831 = and i32 %830, 255
  %832 = or i32 %831, %828
  store i32 %832, ptr %26, align 8, !tbaa !238
  %833 = load i32, ptr %23, align 8, !tbaa !236
  %834 = load i32, ptr %24, align 4, !tbaa !237
  br label %835

835:                                              ; preds = %826, %818
  %836 = phi i32 [ %834, %826 ], [ %824, %818 ]
  %837 = phi i32 [ %833, %826 ], [ %822, %818 ]
  %838 = xor i32 %837, %836
  %839 = icmp ult i32 %838, 16777216
  br i1 %839, label %806, label %840, !llvm.loop !255

840:                                              ; preds = %835, %801
  %841 = phi i32 [ %803, %801 ], [ %836, %835 ]
  %842 = phi i32 [ %802, %801 ], [ %837, %835 ]
  %843 = lshr i32 %627, 4
  %844 = and i32 %843, 1
  %845 = load i32, ptr %2, align 8, !tbaa !230
  %846 = icmp slt i32 %845, 2048
  %847 = zext i1 %846 to i32
  %848 = add nsw i32 %845, %847
  %849 = sub i32 %841, %842
  %850 = lshr i32 %849, 12
  %851 = mul i32 %850, %848
  %852 = add i32 %851, %842
  %853 = and i32 %849, 4095
  %854 = mul i32 %853, %848
  %855 = lshr i32 %854, 12
  %856 = add i32 %852, %855
  %857 = load i32, ptr %25, align 4, !tbaa !232
  %858 = icmp eq i32 %857, 1
  %859 = load i32, ptr %26, align 8
  %860 = icmp ule i32 %859, %856
  %861 = zext i1 %860 to i32
  %862 = select i1 %858, i32 %861, i32 %844
  store i32 %862, ptr @y, align 4, !tbaa !25
  %863 = icmp eq i32 %862, 0
  br i1 %863, label %865, label %864

864:                                              ; preds = %840
  store i32 %856, ptr %24, align 4, !tbaa !237
  br label %867

865:                                              ; preds = %840
  %866 = add i32 %856, 1
  store i32 %866, ptr %23, align 8, !tbaa !236
  br label %867

867:                                              ; preds = %865, %864
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %868 = load i32, ptr %23, align 8, !tbaa !236
  %869 = load i32, ptr %24, align 4, !tbaa !237
  %870 = xor i32 %869, %868
  %871 = icmp ult i32 %870, 16777216
  br i1 %871, label %872, label %906

872:                                              ; preds = %867, %901
  %873 = phi i32 [ %903, %901 ], [ %868, %867 ]
  %874 = phi i32 [ %902, %901 ], [ %869, %867 ]
  %875 = load i32, ptr %25, align 4, !tbaa !232
  %876 = icmp eq i32 %875, 0
  br i1 %876, label %877, label %884

877:                                              ; preds = %872
  %878 = lshr i32 %874, 24
  %879 = load ptr, ptr %9, align 8, !tbaa !235
  %880 = tail call i32 @putc(i32 noundef %878, ptr noundef %879)
  %881 = load i32, ptr %23, align 8, !tbaa !236
  %882 = load i32, ptr %24, align 4, !tbaa !237
  %883 = load i32, ptr %25, align 4, !tbaa !232
  br label %884

884:                                              ; preds = %877, %872
  %885 = phi i32 [ %883, %877 ], [ %875, %872 ]
  %886 = phi i32 [ %882, %877 ], [ %874, %872 ]
  %887 = phi i32 [ %881, %877 ], [ %873, %872 ]
  %888 = shl i32 %887, 8
  store i32 %888, ptr %23, align 8, !tbaa !236
  %889 = shl i32 %886, 8
  %890 = or i32 %889, 255
  store i32 %890, ptr %24, align 4, !tbaa !237
  %891 = icmp eq i32 %885, 1
  br i1 %891, label %892, label %901

892:                                              ; preds = %884
  %893 = load i32, ptr %26, align 8, !tbaa !238
  %894 = shl i32 %893, 8
  %895 = load ptr, ptr %9, align 8, !tbaa !235
  %896 = tail call i32 @getc(ptr noundef %895)
  %897 = and i32 %896, 255
  %898 = or i32 %897, %894
  store i32 %898, ptr %26, align 8, !tbaa !238
  %899 = load i32, ptr %23, align 8, !tbaa !236
  %900 = load i32, ptr %24, align 4, !tbaa !237
  br label %901

901:                                              ; preds = %892, %884
  %902 = phi i32 [ %900, %892 ], [ %890, %884 ]
  %903 = phi i32 [ %899, %892 ], [ %888, %884 ]
  %904 = xor i32 %903, %902
  %905 = icmp ult i32 %904, 16777216
  br i1 %905, label %872, label %906, !llvm.loop !255

906:                                              ; preds = %901, %867
  %907 = phi i32 [ %869, %867 ], [ %902, %901 ]
  %908 = phi i32 [ %868, %867 ], [ %903, %901 ]
  %909 = lshr i32 %627, 3
  %910 = and i32 %909, 1
  %911 = load i32, ptr %2, align 8, !tbaa !230
  %912 = icmp slt i32 %911, 2048
  %913 = zext i1 %912 to i32
  %914 = add nsw i32 %911, %913
  %915 = sub i32 %907, %908
  %916 = lshr i32 %915, 12
  %917 = mul i32 %916, %914
  %918 = add i32 %917, %908
  %919 = and i32 %915, 4095
  %920 = mul i32 %919, %914
  %921 = lshr i32 %920, 12
  %922 = add i32 %918, %921
  %923 = load i32, ptr %25, align 4, !tbaa !232
  %924 = icmp eq i32 %923, 1
  %925 = load i32, ptr %26, align 8
  %926 = icmp ule i32 %925, %922
  %927 = zext i1 %926 to i32
  %928 = select i1 %924, i32 %927, i32 %910
  store i32 %928, ptr @y, align 4, !tbaa !25
  %929 = icmp eq i32 %928, 0
  br i1 %929, label %931, label %930

930:                                              ; preds = %906
  store i32 %922, ptr %24, align 4, !tbaa !237
  br label %933

931:                                              ; preds = %906
  %932 = add i32 %922, 1
  store i32 %932, ptr %23, align 8, !tbaa !236
  br label %933

933:                                              ; preds = %931, %930
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %934 = load i32, ptr %23, align 8, !tbaa !236
  %935 = load i32, ptr %24, align 4, !tbaa !237
  %936 = xor i32 %935, %934
  %937 = icmp ult i32 %936, 16777216
  br i1 %937, label %938, label %972

938:                                              ; preds = %933, %967
  %939 = phi i32 [ %969, %967 ], [ %934, %933 ]
  %940 = phi i32 [ %968, %967 ], [ %935, %933 ]
  %941 = load i32, ptr %25, align 4, !tbaa !232
  %942 = icmp eq i32 %941, 0
  br i1 %942, label %943, label %950

943:                                              ; preds = %938
  %944 = lshr i32 %940, 24
  %945 = load ptr, ptr %9, align 8, !tbaa !235
  %946 = tail call i32 @putc(i32 noundef %944, ptr noundef %945)
  %947 = load i32, ptr %23, align 8, !tbaa !236
  %948 = load i32, ptr %24, align 4, !tbaa !237
  %949 = load i32, ptr %25, align 4, !tbaa !232
  br label %950

950:                                              ; preds = %943, %938
  %951 = phi i32 [ %949, %943 ], [ %941, %938 ]
  %952 = phi i32 [ %948, %943 ], [ %940, %938 ]
  %953 = phi i32 [ %947, %943 ], [ %939, %938 ]
  %954 = shl i32 %953, 8
  store i32 %954, ptr %23, align 8, !tbaa !236
  %955 = shl i32 %952, 8
  %956 = or i32 %955, 255
  store i32 %956, ptr %24, align 4, !tbaa !237
  %957 = icmp eq i32 %951, 1
  br i1 %957, label %958, label %967

958:                                              ; preds = %950
  %959 = load i32, ptr %26, align 8, !tbaa !238
  %960 = shl i32 %959, 8
  %961 = load ptr, ptr %9, align 8, !tbaa !235
  %962 = tail call i32 @getc(ptr noundef %961)
  %963 = and i32 %962, 255
  %964 = or i32 %963, %960
  store i32 %964, ptr %26, align 8, !tbaa !238
  %965 = load i32, ptr %23, align 8, !tbaa !236
  %966 = load i32, ptr %24, align 4, !tbaa !237
  br label %967

967:                                              ; preds = %958, %950
  %968 = phi i32 [ %966, %958 ], [ %956, %950 ]
  %969 = phi i32 [ %965, %958 ], [ %954, %950 ]
  %970 = xor i32 %969, %968
  %971 = icmp ult i32 %970, 16777216
  br i1 %971, label %938, label %972, !llvm.loop !255

972:                                              ; preds = %967, %933
  %973 = phi i32 [ %935, %933 ], [ %968, %967 ]
  %974 = phi i32 [ %934, %933 ], [ %969, %967 ]
  %975 = lshr i32 %627, 2
  %976 = and i32 %975, 1
  %977 = load i32, ptr %2, align 8, !tbaa !230
  %978 = icmp slt i32 %977, 2048
  %979 = zext i1 %978 to i32
  %980 = add nsw i32 %977, %979
  %981 = sub i32 %973, %974
  %982 = lshr i32 %981, 12
  %983 = mul i32 %982, %980
  %984 = add i32 %983, %974
  %985 = and i32 %981, 4095
  %986 = mul i32 %985, %980
  %987 = lshr i32 %986, 12
  %988 = add i32 %984, %987
  %989 = load i32, ptr %25, align 4, !tbaa !232
  %990 = icmp eq i32 %989, 1
  %991 = load i32, ptr %26, align 8
  %992 = icmp ule i32 %991, %988
  %993 = zext i1 %992 to i32
  %994 = select i1 %990, i32 %993, i32 %976
  store i32 %994, ptr @y, align 4, !tbaa !25
  %995 = icmp eq i32 %994, 0
  br i1 %995, label %997, label %996

996:                                              ; preds = %972
  store i32 %988, ptr %24, align 4, !tbaa !237
  br label %999

997:                                              ; preds = %972
  %998 = add i32 %988, 1
  store i32 %998, ptr %23, align 8, !tbaa !236
  br label %999

999:                                              ; preds = %997, %996
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %1000 = load i32, ptr %23, align 8, !tbaa !236
  %1001 = load i32, ptr %24, align 4, !tbaa !237
  %1002 = xor i32 %1001, %1000
  %1003 = icmp ult i32 %1002, 16777216
  br i1 %1003, label %1004, label %1038

1004:                                             ; preds = %999, %1033
  %1005 = phi i32 [ %1035, %1033 ], [ %1000, %999 ]
  %1006 = phi i32 [ %1034, %1033 ], [ %1001, %999 ]
  %1007 = load i32, ptr %25, align 4, !tbaa !232
  %1008 = icmp eq i32 %1007, 0
  br i1 %1008, label %1009, label %1016

1009:                                             ; preds = %1004
  %1010 = lshr i32 %1006, 24
  %1011 = load ptr, ptr %9, align 8, !tbaa !235
  %1012 = tail call i32 @putc(i32 noundef %1010, ptr noundef %1011)
  %1013 = load i32, ptr %23, align 8, !tbaa !236
  %1014 = load i32, ptr %24, align 4, !tbaa !237
  %1015 = load i32, ptr %25, align 4, !tbaa !232
  br label %1016

1016:                                             ; preds = %1009, %1004
  %1017 = phi i32 [ %1015, %1009 ], [ %1007, %1004 ]
  %1018 = phi i32 [ %1014, %1009 ], [ %1006, %1004 ]
  %1019 = phi i32 [ %1013, %1009 ], [ %1005, %1004 ]
  %1020 = shl i32 %1019, 8
  store i32 %1020, ptr %23, align 8, !tbaa !236
  %1021 = shl i32 %1018, 8
  %1022 = or i32 %1021, 255
  store i32 %1022, ptr %24, align 4, !tbaa !237
  %1023 = icmp eq i32 %1017, 1
  br i1 %1023, label %1024, label %1033

1024:                                             ; preds = %1016
  %1025 = load i32, ptr %26, align 8, !tbaa !238
  %1026 = shl i32 %1025, 8
  %1027 = load ptr, ptr %9, align 8, !tbaa !235
  %1028 = tail call i32 @getc(ptr noundef %1027)
  %1029 = and i32 %1028, 255
  %1030 = or i32 %1029, %1026
  store i32 %1030, ptr %26, align 8, !tbaa !238
  %1031 = load i32, ptr %23, align 8, !tbaa !236
  %1032 = load i32, ptr %24, align 4, !tbaa !237
  br label %1033

1033:                                             ; preds = %1024, %1016
  %1034 = phi i32 [ %1032, %1024 ], [ %1022, %1016 ]
  %1035 = phi i32 [ %1031, %1024 ], [ %1020, %1016 ]
  %1036 = xor i32 %1035, %1034
  %1037 = icmp ult i32 %1036, 16777216
  br i1 %1037, label %1004, label %1038, !llvm.loop !255

1038:                                             ; preds = %1033, %999
  %1039 = phi i32 [ %1001, %999 ], [ %1034, %1033 ]
  %1040 = phi i32 [ %1000, %999 ], [ %1035, %1033 ]
  %1041 = lshr i32 %627, 1
  %1042 = and i32 %1041, 1
  %1043 = load i32, ptr %2, align 8, !tbaa !230
  %1044 = icmp slt i32 %1043, 2048
  %1045 = zext i1 %1044 to i32
  %1046 = add nsw i32 %1043, %1045
  %1047 = sub i32 %1039, %1040
  %1048 = lshr i32 %1047, 12
  %1049 = mul i32 %1048, %1046
  %1050 = add i32 %1049, %1040
  %1051 = and i32 %1047, 4095
  %1052 = mul i32 %1051, %1046
  %1053 = lshr i32 %1052, 12
  %1054 = add i32 %1050, %1053
  %1055 = load i32, ptr %25, align 4, !tbaa !232
  %1056 = icmp eq i32 %1055, 1
  %1057 = load i32, ptr %26, align 8
  %1058 = icmp ule i32 %1057, %1054
  %1059 = zext i1 %1058 to i32
  %1060 = select i1 %1056, i32 %1059, i32 %1042
  store i32 %1060, ptr @y, align 4, !tbaa !25
  %1061 = icmp eq i32 %1060, 0
  br i1 %1061, label %1063, label %1062

1062:                                             ; preds = %1038
  store i32 %1054, ptr %24, align 4, !tbaa !237
  br label %1065

1063:                                             ; preds = %1038
  %1064 = add i32 %1054, 1
  store i32 %1064, ptr %23, align 8, !tbaa !236
  br label %1065

1065:                                             ; preds = %1063, %1062
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %1066 = load i32, ptr %23, align 8, !tbaa !236
  %1067 = load i32, ptr %24, align 4, !tbaa !237
  %1068 = xor i32 %1067, %1066
  %1069 = icmp ult i32 %1068, 16777216
  br i1 %1069, label %1070, label %1104

1070:                                             ; preds = %1065, %1099
  %1071 = phi i32 [ %1101, %1099 ], [ %1066, %1065 ]
  %1072 = phi i32 [ %1100, %1099 ], [ %1067, %1065 ]
  %1073 = load i32, ptr %25, align 4, !tbaa !232
  %1074 = icmp eq i32 %1073, 0
  br i1 %1074, label %1075, label %1082

1075:                                             ; preds = %1070
  %1076 = lshr i32 %1072, 24
  %1077 = load ptr, ptr %9, align 8, !tbaa !235
  %1078 = tail call i32 @putc(i32 noundef %1076, ptr noundef %1077)
  %1079 = load i32, ptr %23, align 8, !tbaa !236
  %1080 = load i32, ptr %24, align 4, !tbaa !237
  %1081 = load i32, ptr %25, align 4, !tbaa !232
  br label %1082

1082:                                             ; preds = %1075, %1070
  %1083 = phi i32 [ %1081, %1075 ], [ %1073, %1070 ]
  %1084 = phi i32 [ %1080, %1075 ], [ %1072, %1070 ]
  %1085 = phi i32 [ %1079, %1075 ], [ %1071, %1070 ]
  %1086 = shl i32 %1085, 8
  store i32 %1086, ptr %23, align 8, !tbaa !236
  %1087 = shl i32 %1084, 8
  %1088 = or i32 %1087, 255
  store i32 %1088, ptr %24, align 4, !tbaa !237
  %1089 = icmp eq i32 %1083, 1
  br i1 %1089, label %1090, label %1099

1090:                                             ; preds = %1082
  %1091 = load i32, ptr %26, align 8, !tbaa !238
  %1092 = shl i32 %1091, 8
  %1093 = load ptr, ptr %9, align 8, !tbaa !235
  %1094 = tail call i32 @getc(ptr noundef %1093)
  %1095 = and i32 %1094, 255
  %1096 = or i32 %1095, %1092
  store i32 %1096, ptr %26, align 8, !tbaa !238
  %1097 = load i32, ptr %23, align 8, !tbaa !236
  %1098 = load i32, ptr %24, align 4, !tbaa !237
  br label %1099

1099:                                             ; preds = %1090, %1082
  %1100 = phi i32 [ %1098, %1090 ], [ %1088, %1082 ]
  %1101 = phi i32 [ %1097, %1090 ], [ %1086, %1082 ]
  %1102 = xor i32 %1101, %1100
  %1103 = icmp ult i32 %1102, 16777216
  br i1 %1103, label %1070, label %1104, !llvm.loop !255

1104:                                             ; preds = %1099, %1065
  %1105 = phi i32 [ %1067, %1065 ], [ %1100, %1099 ]
  %1106 = phi i32 [ %1066, %1065 ], [ %1101, %1099 ]
  %1107 = and i32 %627, 1
  %1108 = load i32, ptr %2, align 8, !tbaa !230
  %1109 = icmp slt i32 %1108, 2048
  %1110 = zext i1 %1109 to i32
  %1111 = add nsw i32 %1108, %1110
  %1112 = sub i32 %1105, %1106
  %1113 = lshr i32 %1112, 12
  %1114 = mul i32 %1113, %1111
  %1115 = add i32 %1114, %1106
  %1116 = and i32 %1112, 4095
  %1117 = mul i32 %1116, %1111
  %1118 = lshr i32 %1117, 12
  %1119 = add i32 %1115, %1118
  %1120 = load i32, ptr %25, align 4, !tbaa !232
  %1121 = icmp eq i32 %1120, 1
  %1122 = load i32, ptr %26, align 8
  %1123 = icmp ule i32 %1122, %1119
  %1124 = zext i1 %1123 to i32
  %1125 = select i1 %1121, i32 %1124, i32 %1107
  store i32 %1125, ptr @y, align 4, !tbaa !25
  %1126 = icmp eq i32 %1125, 0
  br i1 %1126, label %1128, label %1127

1127:                                             ; preds = %1104
  store i32 %1119, ptr %24, align 4, !tbaa !237
  br label %1130

1128:                                             ; preds = %1104
  %1129 = add i32 %1119, 1
  store i32 %1129, ptr %23, align 8, !tbaa !236
  br label %1130

1130:                                             ; preds = %1128, %1127
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %1131 = load i32, ptr %23, align 8, !tbaa !236
  %1132 = load i32, ptr %24, align 4, !tbaa !237
  %1133 = xor i32 %1132, %1131
  %1134 = icmp ult i32 %1133, 16777216
  br i1 %1134, label %1135, label %1172

1135:                                             ; preds = %1130, %1164
  %1136 = phi i32 [ %1166, %1164 ], [ %1131, %1130 ]
  %1137 = phi i32 [ %1165, %1164 ], [ %1132, %1130 ]
  %1138 = load i32, ptr %25, align 4, !tbaa !232
  %1139 = icmp eq i32 %1138, 0
  br i1 %1139, label %1140, label %1147

1140:                                             ; preds = %1135
  %1141 = lshr i32 %1137, 24
  %1142 = load ptr, ptr %9, align 8, !tbaa !235
  %1143 = tail call i32 @putc(i32 noundef %1141, ptr noundef %1142)
  %1144 = load i32, ptr %23, align 8, !tbaa !236
  %1145 = load i32, ptr %24, align 4, !tbaa !237
  %1146 = load i32, ptr %25, align 4, !tbaa !232
  br label %1147

1147:                                             ; preds = %1140, %1135
  %1148 = phi i32 [ %1146, %1140 ], [ %1138, %1135 ]
  %1149 = phi i32 [ %1145, %1140 ], [ %1137, %1135 ]
  %1150 = phi i32 [ %1144, %1140 ], [ %1136, %1135 ]
  %1151 = shl i32 %1150, 8
  store i32 %1151, ptr %23, align 8, !tbaa !236
  %1152 = shl i32 %1149, 8
  %1153 = or i32 %1152, 255
  store i32 %1153, ptr %24, align 4, !tbaa !237
  %1154 = icmp eq i32 %1148, 1
  br i1 %1154, label %1155, label %1164

1155:                                             ; preds = %1147
  %1156 = load i32, ptr %26, align 8, !tbaa !238
  %1157 = shl i32 %1156, 8
  %1158 = load ptr, ptr %9, align 8, !tbaa !235
  %1159 = tail call i32 @getc(ptr noundef %1158)
  %1160 = and i32 %1159, 255
  %1161 = or i32 %1160, %1157
  store i32 %1161, ptr %26, align 8, !tbaa !238
  %1162 = load i32, ptr %23, align 8, !tbaa !236
  %1163 = load i32, ptr %24, align 4, !tbaa !237
  br label %1164

1164:                                             ; preds = %1155, %1147
  %1165 = phi i32 [ %1163, %1155 ], [ %1153, %1147 ]
  %1166 = phi i32 [ %1162, %1155 ], [ %1151, %1147 ]
  %1167 = xor i32 %1166, %1165
  %1168 = icmp ult i32 %1167, 16777216
  br i1 %1168, label %1135, label %1172, !llvm.loop !255

1169:                                             ; preds = %639
  %1170 = load ptr, ptr %9, align 8, !tbaa !235
  %1171 = tail call i32 @putc(i32 noundef %627, ptr noundef %1170)
  br label %1172

1172:                                             ; preds = %1164, %1130, %1169
  %1173 = tail call i32 @getc(ptr noundef nonnull %33)
  %1174 = icmp eq i32 %1173, -1
  br i1 %1174, label %1175, label %626, !llvm.loop !257

1175:                                             ; preds = %618, %1172, %61, %621
  %1176 = sub nsw i64 %29, %38
  %1177 = tail call i32 @fclose(ptr noundef nonnull %33)
  %1178 = add i64 %28, %21
  %1179 = icmp sgt i64 %1176, 0
  br i1 %1179, label %27, label %1180, !llvm.loop !258

1180:                                             ; preds = %1175, %8
  %1181 = tail call i32 @fclose(ptr noundef nonnull %4)
  %1182 = load ptr, ptr %9, align 8, !tbaa !235
  %1183 = tail call i64 @ftell(ptr noundef %1182)
  %1184 = sub nsw i64 %1183, %11
  %1185 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.25, i64 noundef %1184)
  ret void
}

; Function Attrs: nofree nounwind
declare noalias noundef ptr @fopen(ptr nocapture noundef readonly, ptr nocapture noundef readonly) local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare void @perror(ptr nocapture noundef readonly) local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare noalias noundef ptr @tmpfile() local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare void @rewind(ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %1) local_unnamed_addr #14 comdat align 2 {
  %3 = load i32, ptr @level, align 4, !tbaa !25
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %2
  %6 = lshr i32 %1, 7
  %7 = and i32 %6, 1
  %8 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %7)
  %9 = lshr i32 %1, 6
  %10 = and i32 %9, 1
  %11 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %10)
  %12 = lshr i32 %1, 5
  %13 = and i32 %12, 1
  %14 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %13)
  %15 = lshr i32 %1, 4
  %16 = and i32 %15, 1
  %17 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %16)
  %18 = lshr i32 %1, 3
  %19 = and i32 %18, 1
  %20 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %19)
  %21 = lshr i32 %1, 2
  %22 = and i32 %21, 1
  %23 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %22)
  %24 = lshr i32 %1, 1
  %25 = and i32 %24, 1
  %26 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %25)
  %27 = and i32 %1, 1
  %28 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %27)
  br label %33

29:                                               ; preds = %2
  %30 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !235
  %32 = tail call i32 @putc(i32 noundef %1, ptr noundef %31)
  br label %33

33:                                               ; preds = %5, %29
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @fclose(ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef zeroext i1 @_Z7makedirPKc(ptr nocapture noundef readnone %0) local_unnamed_addr #7 {
  ret i1 false
}

; Function Attrs: uwtable
define dso_local void @_Z10decompressPKclR7Encoder(ptr noundef %0, i64 noundef %1, ptr noundef nonnull align 8 dereferenceable(40) %2) local_unnamed_addr #5 personality ptr @__gxx_personality_v0 {
  %4 = alloca %class.String, align 8
  %5 = tail call noalias ptr @fopen(ptr noundef %0, ptr noundef nonnull @.str.21)
  %6 = icmp eq ptr %5, null
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = tail call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %0, i32 noundef 47) #44
  %9 = icmp eq ptr %8, null
  %10 = getelementptr inbounds i8, ptr %8, i64 1
  %11 = select i1 %9, ptr %0, ptr %10
  %12 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.26, ptr noundef %11, i64 noundef %1)
  %13 = icmp sgt i64 %1, 0
  br i1 %13, label %17, label %45

14:                                               ; preds = %41
  %15 = and i8 %42, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %45, label %50

17:                                               ; preds = %7, %41
  %18 = phi i64 [ %43, %41 ], [ 0, %7 ]
  %19 = phi i8 [ %42, %41 ], [ 0, %7 ]
  %20 = icmp ne i64 %18, 0
  %21 = trunc i64 %18 to i32
  %22 = and i32 %21, 4095
  %23 = icmp eq i32 %22, 0
  %24 = and i1 %20, %23
  br i1 %24, label %25, label %29

25:                                               ; preds = %17
  %26 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %21)
  %27 = load ptr, ptr @stdout, align 8, !tbaa !5
  %28 = tail call i32 @fflush(ptr noundef %27)
  br label %29

29:                                               ; preds = %17, %25
  %30 = and i8 %19, 1
  %31 = icmp ne i8 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %2)
  br label %41

34:                                               ; preds = %29
  %35 = tail call i32 @getc(ptr noundef nonnull %5)
  %36 = tail call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %2)
  %37 = icmp eq i32 %35, %36
  %38 = or i1 %31, %37
  br i1 %38, label %41, label %39

39:                                               ; preds = %34
  %40 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.27, i32 noundef %21, i32 noundef %35, i32 noundef %36)
  br label %41

41:                                               ; preds = %32, %34, %39
  %42 = phi i8 [ 1, %39 ], [ %19, %34 ], [ %19, %32 ]
  %43 = add nuw nsw i64 %18, 1
  %44 = icmp eq i64 %43, %1
  br i1 %44, label %14, label %17, !llvm.loop !259

45:                                               ; preds = %7, %14
  %46 = tail call i32 @getc(ptr noundef nonnull %5)
  %47 = icmp eq i32 %46, -1
  %48 = select i1 %47, ptr @str.61, ptr @str.62
  %49 = tail call i32 @puts(ptr nonnull dereferenceable(1) %48)
  br label %50

50:                                               ; preds = %45, %14
  %51 = tail call i32 @fclose(ptr noundef nonnull %5)
  br label %122

52:                                               ; preds = %3
  %53 = tail call noalias ptr @fopen(ptr noundef %0, ptr noundef nonnull @.str.30)
  %54 = icmp eq ptr %53, null
  br i1 %54, label %55, label %79

55:                                               ; preds = %52
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #39
  call void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %0)
  %56 = getelementptr inbounds %class.Array.12, ptr %4, i64 0, i32 3
  br label %57

57:                                               ; preds = %73, %55
  %58 = phi i64 [ %74, %73 ], [ 0, %55 ]
  %59 = load ptr, ptr %56, align 8, !tbaa !260
  %60 = getelementptr inbounds i8, ptr %59, i64 %58
  %61 = load i8, ptr %60, align 1, !tbaa !9
  switch i8 %61, label %73 [
    i8 0, label %62
    i8 47, label %70
    i8 92, label %70
  ]

62:                                               ; preds = %57
  %63 = call noalias ptr @fopen(ptr noundef %0, ptr noundef nonnull @.str.30)
  %64 = load i32, ptr %4, align 8, !tbaa !262
  %65 = load i32, ptr @programChecker, align 8, !tbaa !13
  %66 = sub i32 %65, %64
  store i32 %66, ptr @programChecker, align 8, !tbaa !13
  %67 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %68 = icmp sgt i32 %66, %67
  br i1 %68, label %69, label %75

69:                                               ; preds = %62
  store i32 %66, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %75

70:                                               ; preds = %57, %57
  store i8 0, ptr %60, align 1, !tbaa !9
  %71 = load ptr, ptr %56, align 8, !tbaa !260
  %72 = getelementptr inbounds i8, ptr %71, i64 %58
  store i8 %61, ptr %72, align 1, !tbaa !9
  br label %73

73:                                               ; preds = %57, %70
  %74 = add nuw i64 %58, 1
  br label %57, !llvm.loop !263

75:                                               ; preds = %69, %62
  %76 = getelementptr inbounds %class.Array.12, ptr %4, i64 0, i32 2
  %77 = load ptr, ptr %76, align 8, !tbaa !264
  call void @free(ptr noundef %77) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #39
  %78 = icmp eq ptr %63, null
  br i1 %78, label %102, label %79

79:                                               ; preds = %52, %75
  %80 = phi ptr [ %63, %75 ], [ %53, %52 ]
  %81 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.32, ptr noundef %0, i64 noundef %1)
  %82 = icmp sgt i64 %1, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %97, %79
  %84 = call i32 @fclose(ptr noundef nonnull %80)
  %85 = call i32 @puts(ptr nonnull dereferenceable(1) @str.60)
  br label %122

86:                                               ; preds = %79, %97
  %87 = phi i64 [ %100, %97 ], [ 0, %79 ]
  %88 = icmp ne i64 %87, 0
  %89 = trunc i64 %87 to i32
  %90 = and i32 %89, 4095
  %91 = icmp eq i32 %90, 0
  %92 = and i1 %88, %91
  br i1 %92, label %93, label %97

93:                                               ; preds = %86
  %94 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %89)
  %95 = load ptr, ptr @stdout, align 8, !tbaa !5
  %96 = call i32 @fflush(ptr noundef %95)
  br label %97

97:                                               ; preds = %86, %93
  %98 = call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %2)
  %99 = call i32 @putc(i32 noundef %98, ptr noundef nonnull %80)
  %100 = add nuw nsw i64 %87, 1
  %101 = icmp eq i64 %100, %1
  br i1 %101, label %83, label %86, !llvm.loop !265

102:                                              ; preds = %75
  call void @perror(ptr noundef %0) #45
  %103 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.34, ptr noundef %0, i64 noundef %1)
  %104 = icmp sgt i64 %1, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %118, %102
  %106 = call i32 @puts(ptr nonnull dereferenceable(1) @str)
  br label %122

107:                                              ; preds = %102, %118
  %108 = phi i64 [ %120, %118 ], [ 0, %102 ]
  %109 = icmp ne i64 %108, 0
  %110 = trunc i64 %108 to i32
  %111 = and i32 %110, 4095
  %112 = icmp eq i32 %111, 0
  %113 = and i1 %109, %112
  br i1 %113, label %114, label %118

114:                                              ; preds = %107
  %115 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %110)
  %116 = load ptr, ptr @stdout, align 8, !tbaa !5
  %117 = call i32 @fflush(ptr noundef %116)
  br label %118

118:                                              ; preds = %107, %114
  %119 = call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %2)
  %120 = add nuw nsw i64 %108, 1
  %121 = icmp eq i64 %120, %1
  br i1 %121, label %105, label %107, !llvm.loop !266

122:                                              ; preds = %83, %105, %50
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef %1) unnamed_addr #5 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 1
  store i32 1, ptr %3, align 4, !tbaa !267
  store i32 1, ptr %0, align 8, !tbaa !262
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %5 = add nsw i32 %4, 1
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %8, %2
  %10 = tail call noalias dereferenceable_or_null(1) ptr @calloc(i64 noundef 1, i64 noundef 1) #41
  %11 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 2
  store ptr %10, ptr %11, align 8, !tbaa !264
  %12 = icmp eq ptr %10, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %14, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %14, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

15:                                               ; preds = %9
  %16 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 3
  store ptr %10, ptr %16, align 8, !tbaa !260
  store i32 0, ptr %0, align 8, !tbaa !262
  %17 = load i8, ptr %1, align 1, !tbaa !9
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %46, label %19

19:                                               ; preds = %15, %31
  %20 = phi i8 [ %37, %31 ], [ %17, %15 ]
  %21 = phi ptr [ %22, %31 ], [ %1, %15 ]
  %22 = getelementptr inbounds i8, ptr %21, i64 1
  %23 = load i32, ptr %0, align 8, !tbaa !262
  %24 = load i32, ptr %3, align 4, !tbaa !267
  %25 = icmp eq i32 %23, %24
  br i1 %25, label %26, label %31

26:                                               ; preds = %19
  %27 = shl nsw i32 %23, 1
  %28 = tail call i32 @llvm.smax.i32(i32 %27, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %28)
          to label %29 unwind label %52

29:                                               ; preds = %26
  store i32 %23, ptr %0, align 8, !tbaa !262
  %30 = load i8, ptr %21, align 1, !tbaa !9
  br label %31

31:                                               ; preds = %29, %19
  %32 = phi i8 [ %20, %19 ], [ %30, %29 ]
  %33 = load ptr, ptr %16, align 8, !tbaa !260
  %34 = add nsw i32 %23, 1
  store i32 %34, ptr %0, align 8, !tbaa !262
  %35 = sext i32 %23 to i64
  %36 = getelementptr inbounds i8, ptr %33, i64 %35
  store i8 %32, ptr %36, align 1, !tbaa !9
  %37 = load i8, ptr %22, align 1, !tbaa !9
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %19, !llvm.loop !268

39:                                               ; preds = %31
  %40 = load i32, ptr %0, align 8, !tbaa !262
  %41 = load i32, ptr %3, align 4, !tbaa !267
  %42 = icmp eq i32 %40, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %39
  %44 = shl nsw i32 %41, 1
  %45 = tail call i32 @llvm.smax.i32(i32 %44, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %45)
          to label %46 unwind label %54

46:                                               ; preds = %15, %39, %43
  %47 = phi i32 [ %40, %39 ], [ %40, %43 ], [ 0, %15 ]
  %48 = load ptr, ptr %16, align 8, !tbaa !260
  %49 = add nsw i32 %47, 1
  store i32 %49, ptr %0, align 8, !tbaa !262
  %50 = sext i32 %47 to i64
  %51 = getelementptr inbounds i8, ptr %48, i64 %50
  store i8 0, ptr %51, align 1, !tbaa !9
  ret void

52:                                               ; preds = %26
  %53 = landingpad { ptr, i32 }
          cleanup
  br label %56

54:                                               ; preds = %43
  %55 = landingpad { ptr, i32 }
          cleanup
  br label %56

56:                                               ; preds = %54, %52
  %57 = phi { ptr, i32 } [ %53, %52 ], [ %55, %54 ]
  tail call void @_ZN5ArrayIcLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) #39
  resume { ptr, i32 } %57
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIcLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !262
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = sub i32 %3, %2
  store i32 %4, ptr @programChecker, align 8, !tbaa !13
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %6 = icmp sgt i32 %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 %4, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %8

8:                                                ; preds = %1, %7
  %9 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !264
  tail call void @free(ptr noundef %10) #39
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef ptr @_Z7getlineP8_IO_FILE(ptr nocapture noundef %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ7getlineP8_IO_FILEE1s acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ7getlineP8_IO_FILEE1s) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ7getlineP8_IO_FILEE1s, ptr noundef nonnull @.str.36)
          to label %8 unwind label %21

8:                                                ; preds = %7
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIcLi0EED2Ev, ptr nonnull @_ZZ7getlineP8_IO_FILEE1s, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ7getlineP8_IO_FILEE1s) #39
  br label %10

10:                                               ; preds = %8, %4, %1
  br label %11

11:                                               ; preds = %10, %25
  %12 = phi i32 [ 0, %10 ], [ %27, %25 ]
  %13 = shl nuw nsw i32 %12, 1
  %14 = or i32 %13, 1
  br label %15

15:                                               ; preds = %11, %23
  %16 = tail call i32 @getc(ptr noundef %0)
  switch i32 %16, label %17 [
    i32 -1, label %31
    i32 26, label %31
    i32 10, label %31
  ]

17:                                               ; preds = %15
  %18 = load i32, ptr @_ZZ7getlineP8_IO_FILEE1s, align 8, !tbaa !262
  %19 = icmp slt i32 %12, %18
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ7getlineP8_IO_FILEE1s, i32 noundef %14)
  br label %23

21:                                               ; preds = %7
  %22 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ7getlineP8_IO_FILEE1s) #39
  resume { ptr, i32 } %22

23:                                               ; preds = %20, %17
  %24 = icmp eq i32 %16, 13
  br i1 %24, label %15, label %25, !llvm.loop !269

25:                                               ; preds = %23
  %26 = trunc i32 %16 to i8
  %27 = add nuw nsw i32 %12, 1
  %28 = load ptr, ptr getelementptr inbounds (%class.String, ptr @_ZZ7getlineP8_IO_FILEE1s, i64 0, i32 0, i32 3), align 8, !tbaa !260
  %29 = zext i32 %12 to i64
  %30 = getelementptr inbounds i8, ptr %28, i64 %29
  store i8 %26, ptr %30, align 1, !tbaa !9
  br label %11, !llvm.loop !269

31:                                               ; preds = %15, %15, %15
  %32 = load i32, ptr @_ZZ7getlineP8_IO_FILEE1s, align 8, !tbaa !262
  %33 = icmp slt i32 %12, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %12, 1
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ7getlineP8_IO_FILEE1s, i32 noundef %35)
  br label %36

36:                                               ; preds = %34, %31
  %37 = load ptr, ptr getelementptr inbounds (%class.String, ptr @_ZZ7getlineP8_IO_FILEE1s, i64 0, i32 0, i32 3), align 8, !tbaa !260
  %38 = zext i32 %12 to i64
  %39 = getelementptr inbounds i8, ptr %37, i64 %38
  store i8 0, ptr %39, align 1, !tbaa !9
  switch i32 %16, label %40 [
    i32 -1, label %42
    i32 26, label %42
  ]

40:                                               ; preds = %36
  %41 = load ptr, ptr getelementptr inbounds (%class.String, ptr @_ZZ7getlineP8_IO_FILEE1s, i64 0, i32 0, i32 3), align 8, !tbaa !260
  br label %42

42:                                               ; preds = %36, %36, %40
  %43 = phi ptr [ %41, %40 ], [ null, %36 ], [ null, %36 ]
  ret ptr %43
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 4, !tbaa !267
  %5 = icmp slt i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, ptr %0, align 8, !tbaa !262
  br label %42

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !264
  %10 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !260
  %12 = load i32, ptr %0, align 8, !tbaa !262
  store i32 %1, ptr %3, align 4, !tbaa !267
  store i32 %1, ptr %0, align 8, !tbaa !262
  %13 = icmp slt i32 %1, 1
  br i1 %13, label %14, label %15

14:                                               ; preds = %7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %8, i8 0, i64 16, i1 false)
  br label %28

15:                                               ; preds = %7
  %16 = zext i32 %1 to i64
  %17 = load i32, ptr @programChecker, align 8, !tbaa !13
  %18 = add nsw i32 %17, %1
  store i32 %18, ptr @programChecker, align 8, !tbaa !13
  %19 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %20 = icmp sgt i32 %18, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  store i32 %18, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %22

22:                                               ; preds = %21, %15
  %23 = tail call noalias ptr @calloc(i64 noundef %16, i64 noundef 1) #41
  store ptr %23, ptr %8, align 8, !tbaa !264
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %26, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %26, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

27:                                               ; preds = %22
  store ptr %23, ptr %10, align 8, !tbaa !260
  br label %28

28:                                               ; preds = %14, %27
  %29 = phi ptr [ null, %14 ], [ %23, %27 ]
  %30 = icmp eq ptr %9, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %28
  %32 = icmp eq ptr %11, null
  br i1 %32, label %41, label %33

33:                                               ; preds = %31
  %34 = tail call i32 @llvm.smin.i32(i32 %1, i32 %12)
  %35 = sext i32 %34 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %29, ptr nonnull align 1 %11, i64 %35, i1 false)
  %36 = load i32, ptr @programChecker, align 8, !tbaa !13
  %37 = sub i32 %36, %1
  store i32 %37, ptr @programChecker, align 8, !tbaa !13
  %38 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %39 = icmp sgt i32 %37, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %33
  store i32 %37, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %41

41:                                               ; preds = %40, %33, %31
  tail call void @free(ptr noundef nonnull %9) #39
  br label %42

42:                                               ; preds = %28, %41, %6
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z7putsizeR6StringS0_PKci(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr nocapture noundef readonly %2, i32 noundef %3) local_unnamed_addr #14 {
  %5 = tail call noalias ptr @fopen(ptr noundef %2, ptr noundef nonnull @.str.21)
  %6 = icmp eq ptr %5, null
  br i1 %6, label %216, label %7

7:                                                ; preds = %4
  %8 = tail call i32 @fseek(ptr noundef nonnull %5, i64 noundef 0, i32 noundef 2)
  %9 = tail call i64 @ftell(ptr noundef nonnull %5)
  %10 = icmp sgt i64 %9, -1
  br i1 %10, label %11, label %213

11:                                               ; preds = %7
  %12 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @_ZZ7putsizeR6StringS0_PKciE3blk, ptr noundef nonnull dereferenceable(1) @.str.37, i64 noundef %9) #39
  %13 = load i32, ptr %0, align 8, !tbaa !262
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = add nsw i32 %13, -1
  store i32 %16, ptr %0, align 8, !tbaa !262
  br label %17

17:                                               ; preds = %15, %11
  %18 = phi i32 [ %13, %11 ], [ %16, %15 ]
  %19 = load i8, ptr @_ZZ7putsizeR6StringS0_PKciE3blk, align 16, !tbaa !9
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %45, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 1
  %23 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 3
  br label %24

24:                                               ; preds = %35, %21
  %25 = phi i8 [ %19, %21 ], [ %41, %35 ]
  %26 = phi ptr [ @_ZZ7putsizeR6StringS0_PKciE3blk, %21 ], [ %27, %35 ]
  %27 = getelementptr inbounds i8, ptr %26, i64 1
  %28 = load i32, ptr %0, align 8, !tbaa !262
  %29 = load i32, ptr %22, align 4, !tbaa !267
  %30 = icmp eq i32 %28, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %24
  %32 = shl nsw i32 %28, 1
  %33 = tail call i32 @llvm.smax.i32(i32 %32, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %33)
  store i32 %28, ptr %0, align 8, !tbaa !262
  %34 = load i8, ptr %26, align 1, !tbaa !9
  br label %35

35:                                               ; preds = %31, %24
  %36 = phi i8 [ %25, %24 ], [ %34, %31 ]
  %37 = load ptr, ptr %23, align 8, !tbaa !260
  %38 = add nsw i32 %28, 1
  store i32 %38, ptr %0, align 8, !tbaa !262
  %39 = sext i32 %28 to i64
  %40 = getelementptr inbounds i8, ptr %37, i64 %39
  store i8 %36, ptr %40, align 1, !tbaa !9
  %41 = load i8, ptr %27, align 1, !tbaa !9
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %24, !llvm.loop !268

43:                                               ; preds = %35
  %44 = load i32, ptr %0, align 8, !tbaa !262
  br label %45

45:                                               ; preds = %43, %17
  %46 = phi i32 [ %44, %43 ], [ %18, %17 ]
  %47 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 1
  %48 = load i32, ptr %47, align 4, !tbaa !267
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = shl nsw i32 %46, 1
  %52 = tail call i32 @llvm.smax.i32(i32 %51, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %52)
  br label %53

53:                                               ; preds = %45, %50
  %54 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 3
  %55 = load ptr, ptr %54, align 8, !tbaa !260
  %56 = add nsw i32 %46, 1
  store i32 %56, ptr %0, align 8, !tbaa !262
  %57 = sext i32 %46 to i64
  %58 = getelementptr inbounds i8, ptr %55, i64 %57
  store i8 0, ptr %58, align 1, !tbaa !9
  %59 = sext i32 %3 to i64
  %60 = getelementptr inbounds i8, ptr %2, i64 %59
  %61 = load i32, ptr %0, align 8, !tbaa !262
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %53
  %64 = add nsw i32 %61, -1
  store i32 %64, ptr %0, align 8, !tbaa !262
  br label %65

65:                                               ; preds = %63, %53
  %66 = phi i32 [ %61, %53 ], [ %64, %63 ]
  %67 = load i8, ptr %60, align 1, !tbaa !9
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %90, label %69

69:                                               ; preds = %65, %80
  %70 = phi i8 [ %86, %80 ], [ %67, %65 ]
  %71 = phi ptr [ %72, %80 ], [ %60, %65 ]
  %72 = getelementptr inbounds i8, ptr %71, i64 1
  %73 = load i32, ptr %0, align 8, !tbaa !262
  %74 = load i32, ptr %47, align 4, !tbaa !267
  %75 = icmp eq i32 %73, %74
  br i1 %75, label %76, label %80

76:                                               ; preds = %69
  %77 = shl nsw i32 %73, 1
  %78 = tail call i32 @llvm.smax.i32(i32 %77, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %78)
  store i32 %73, ptr %0, align 8, !tbaa !262
  %79 = load i8, ptr %71, align 1, !tbaa !9
  br label %80

80:                                               ; preds = %76, %69
  %81 = phi i8 [ %70, %69 ], [ %79, %76 ]
  %82 = load ptr, ptr %54, align 8, !tbaa !260
  %83 = add nsw i32 %73, 1
  store i32 %83, ptr %0, align 8, !tbaa !262
  %84 = sext i32 %73 to i64
  %85 = getelementptr inbounds i8, ptr %82, i64 %84
  store i8 %81, ptr %85, align 1, !tbaa !9
  %86 = load i8, ptr %72, align 1, !tbaa !9
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %69, !llvm.loop !268

88:                                               ; preds = %80
  %89 = load i32, ptr %0, align 8, !tbaa !262
  br label %90

90:                                               ; preds = %88, %65
  %91 = phi i32 [ %89, %88 ], [ %66, %65 ]
  %92 = load i32, ptr %47, align 4, !tbaa !267
  %93 = icmp eq i32 %91, %92
  br i1 %93, label %94, label %97

94:                                               ; preds = %90
  %95 = shl nsw i32 %91, 1
  %96 = tail call i32 @llvm.smax.i32(i32 %95, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %96)
  br label %97

97:                                               ; preds = %90, %94
  %98 = load ptr, ptr %54, align 8, !tbaa !260
  %99 = add nsw i32 %91, 1
  store i32 %99, ptr %0, align 8, !tbaa !262
  %100 = sext i32 %91 to i64
  %101 = getelementptr inbounds i8, ptr %98, i64 %100
  store i8 0, ptr %101, align 1, !tbaa !9
  %102 = load i32, ptr %0, align 8, !tbaa !262
  %103 = icmp sgt i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %97
  %105 = add nsw i32 %102, -1
  store i32 %105, ptr %0, align 8, !tbaa !262
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %102, %97 ]
  %108 = load i32, ptr %47, align 4, !tbaa !267
  %109 = icmp eq i32 %107, %108
  br i1 %109, label %110, label %113

110:                                              ; preds = %106
  %111 = shl nsw i32 %107, 1
  %112 = tail call i32 @llvm.smax.i32(i32 %111, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %112)
  br label %113

113:                                              ; preds = %110, %106
  %114 = load ptr, ptr %54, align 8, !tbaa !260
  %115 = add nsw i32 %107, 1
  store i32 %115, ptr %0, align 8, !tbaa !262
  %116 = sext i32 %107 to i64
  %117 = getelementptr inbounds i8, ptr %114, i64 %116
  store i8 13, ptr %117, align 1, !tbaa !9
  %118 = load i32, ptr %0, align 8, !tbaa !262
  %119 = load i32, ptr %47, align 4, !tbaa !267
  %120 = icmp eq i32 %118, %119
  br i1 %120, label %121, label %124

121:                                              ; preds = %113
  %122 = shl nsw i32 %118, 1
  %123 = tail call i32 @llvm.smax.i32(i32 %122, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %123)
  br label %124

124:                                              ; preds = %121, %113
  %125 = load ptr, ptr %54, align 8, !tbaa !260
  %126 = add nsw i32 %118, 1
  store i32 %126, ptr %0, align 8, !tbaa !262
  %127 = sext i32 %118 to i64
  %128 = getelementptr inbounds i8, ptr %125, i64 %127
  store i8 10, ptr %128, align 1, !tbaa !9
  %129 = load i32, ptr %0, align 8, !tbaa !262
  %130 = load i32, ptr %47, align 4, !tbaa !267
  %131 = icmp eq i32 %129, %130
  br i1 %131, label %132, label %135

132:                                              ; preds = %124
  %133 = shl nsw i32 %129, 1
  %134 = tail call i32 @llvm.smax.i32(i32 %133, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %134)
  br label %135

135:                                              ; preds = %124, %132
  %136 = load ptr, ptr %54, align 8, !tbaa !260
  %137 = add nsw i32 %129, 1
  store i32 %137, ptr %0, align 8, !tbaa !262
  %138 = sext i32 %129 to i64
  %139 = getelementptr inbounds i8, ptr %136, i64 %138
  store i8 0, ptr %139, align 1, !tbaa !9
  %140 = load i32, ptr %1, align 8, !tbaa !262
  %141 = icmp sgt i32 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %135
  %143 = add nsw i32 %140, -1
  store i32 %143, ptr %1, align 8, !tbaa !262
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %140, %135 ], [ %143, %142 ]
  %146 = load i8, ptr %2, align 1, !tbaa !9
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %172, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %class.Array.12, ptr %1, i64 0, i32 1
  %150 = getelementptr inbounds %class.Array.12, ptr %1, i64 0, i32 3
  br label %151

151:                                              ; preds = %162, %148
  %152 = phi i8 [ %146, %148 ], [ %168, %162 ]
  %153 = phi ptr [ %2, %148 ], [ %154, %162 ]
  %154 = getelementptr inbounds i8, ptr %153, i64 1
  %155 = load i32, ptr %1, align 8, !tbaa !262
  %156 = load i32, ptr %149, align 4, !tbaa !267
  %157 = icmp eq i32 %155, %156
  br i1 %157, label %158, label %162

158:                                              ; preds = %151
  %159 = shl nsw i32 %155, 1
  %160 = tail call i32 @llvm.smax.i32(i32 %159, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %160)
  store i32 %155, ptr %1, align 8, !tbaa !262
  %161 = load i8, ptr %153, align 1, !tbaa !9
  br label %162

162:                                              ; preds = %158, %151
  %163 = phi i8 [ %152, %151 ], [ %161, %158 ]
  %164 = load ptr, ptr %150, align 8, !tbaa !260
  %165 = add nsw i32 %155, 1
  store i32 %165, ptr %1, align 8, !tbaa !262
  %166 = sext i32 %155 to i64
  %167 = getelementptr inbounds i8, ptr %164, i64 %166
  store i8 %163, ptr %167, align 1, !tbaa !9
  %168 = load i8, ptr %154, align 1, !tbaa !9
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %170, label %151, !llvm.loop !268

170:                                              ; preds = %162
  %171 = load i32, ptr %1, align 8, !tbaa !262
  br label %172

172:                                              ; preds = %170, %144
  %173 = phi i32 [ %171, %170 ], [ %145, %144 ]
  %174 = getelementptr inbounds %class.Array.12, ptr %1, i64 0, i32 1
  %175 = load i32, ptr %174, align 4, !tbaa !267
  %176 = icmp eq i32 %173, %175
  br i1 %176, label %177, label %180

177:                                              ; preds = %172
  %178 = shl nsw i32 %173, 1
  %179 = tail call i32 @llvm.smax.i32(i32 %178, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %179)
  br label %180

180:                                              ; preds = %172, %177
  %181 = getelementptr inbounds %class.Array.12, ptr %1, i64 0, i32 3
  %182 = load ptr, ptr %181, align 8, !tbaa !260
  %183 = add nsw i32 %173, 1
  store i32 %183, ptr %1, align 8, !tbaa !262
  %184 = sext i32 %173 to i64
  %185 = getelementptr inbounds i8, ptr %182, i64 %184
  store i8 0, ptr %185, align 1, !tbaa !9
  %186 = load i32, ptr %1, align 8, !tbaa !262
  %187 = icmp sgt i32 %186, 0
  br i1 %187, label %188, label %190

188:                                              ; preds = %180
  %189 = add nsw i32 %186, -1
  store i32 %189, ptr %1, align 8, !tbaa !262
  br label %190

190:                                              ; preds = %188, %180
  %191 = phi i32 [ %189, %188 ], [ %186, %180 ]
  %192 = load i32, ptr %174, align 4, !tbaa !267
  %193 = icmp eq i32 %191, %192
  br i1 %193, label %194, label %197

194:                                              ; preds = %190
  %195 = shl nsw i32 %191, 1
  %196 = tail call i32 @llvm.smax.i32(i32 %195, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %196)
  br label %197

197:                                              ; preds = %194, %190
  %198 = load ptr, ptr %181, align 8, !tbaa !260
  %199 = add nsw i32 %191, 1
  store i32 %199, ptr %1, align 8, !tbaa !262
  %200 = sext i32 %191 to i64
  %201 = getelementptr inbounds i8, ptr %198, i64 %200
  store i8 10, ptr %201, align 1, !tbaa !9
  %202 = load i32, ptr %1, align 8, !tbaa !262
  %203 = load i32, ptr %174, align 4, !tbaa !267
  %204 = icmp eq i32 %202, %203
  br i1 %204, label %205, label %208

205:                                              ; preds = %197
  %206 = shl nsw i32 %202, 1
  %207 = tail call i32 @llvm.smax.i32(i32 %206, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %207)
  br label %208

208:                                              ; preds = %197, %205
  %209 = load ptr, ptr %181, align 8, !tbaa !260
  %210 = add nsw i32 %202, 1
  store i32 %210, ptr %1, align 8, !tbaa !262
  %211 = sext i32 %202 to i64
  %212 = getelementptr inbounds i8, ptr %209, i64 %211
  store i8 0, ptr %212, align 1, !tbaa !9
  br label %213

213:                                              ; preds = %208, %7
  %214 = phi i32 [ 1, %208 ], [ 0, %7 ]
  %215 = tail call i32 @fclose(ptr noundef nonnull %5)
  br label %216

216:                                              ; preds = %213, %4
  %217 = phi i32 [ %214, %213 ], [ 0, %4 ]
  ret i32 %217
}

; Function Attrs: nofree nounwind
declare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #18

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z6expandR6StringS0_PKci(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr nocapture noundef readonly %2, i32 noundef %3) local_unnamed_addr #14 {
  %5 = tail call noundef i32 @_Z7putsizeR6StringS0_PKci(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef %2, i32 noundef %3), !range !270
  ret i32 %5
}

; Function Attrs: uwtable
define dso_local noundef i32 @_Z7paqmainiPPc(i32 noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #5 personality ptr @__gxx_personality_v0 {
  %3 = alloca %class.Array.13, align 8
  %4 = alloca %class.Array.14, align 8
  %5 = alloca %class.String, align 8
  %6 = alloca %class.String, align 8
  %7 = alloca %class.String, align 8
  %8 = alloca %class.String, align 8
  %9 = alloca %class.Encoder, align 8
  %10 = alloca %class.String, align 8
  %11 = alloca %class.String, align 8
  %12 = load ptr, ptr %1, align 8, !tbaa !5
  %13 = tail call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %12, i32 noundef 47) #44
  %14 = icmp eq ptr %13, null
  %15 = getelementptr inbounds i8, ptr %13, i64 1
  %16 = select i1 %14, ptr %12, ptr %15
  %17 = icmp slt i32 %0, 3
  %18 = zext i1 %17 to i8
  %19 = icmp sgt i32 %0, 1
  br i1 %19, label %20, label %49

20:                                               ; preds = %2
  %21 = getelementptr inbounds ptr, ptr %1, i64 1
  %22 = load ptr, ptr %21, align 8, !tbaa !5
  %23 = load i8, ptr %22, align 1, !tbaa !9
  %24 = icmp eq i8 %23, 45
  br i1 %24, label %25, label %54

25:                                               ; preds = %20
  %26 = getelementptr inbounds i8, ptr %22, i64 1
  %27 = load i8, ptr %26, align 1, !tbaa !9
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %54, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds i8, ptr %22, i64 2
  %31 = load i8, ptr %30, align 1, !tbaa !9
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %54

33:                                               ; preds = %29
  %34 = add i8 %27, -58
  %35 = icmp ult i8 %34, -10
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = zext i8 %27 to i32
  %38 = add nsw i32 %37, -48
  store i32 %38, ptr @level, align 4, !tbaa !25
  br label %46

39:                                               ; preds = %33
  %40 = icmp eq i8 %27, 100
  br i1 %40, label %46, label %41

41:                                               ; preds = %39
  invoke void @_Z4quitPKc(ptr noundef nonnull @.str.39)
          to label %45 unwind label %42

42:                                               ; preds = %49, %41
  %43 = phi i8 [ %18, %41 ], [ %50, %49 ]
  %44 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %989

45:                                               ; preds = %41
  unreachable

46:                                               ; preds = %36, %39
  %47 = add nsw i32 %0, -1
  %48 = icmp ult i32 %0, 3
  br i1 %48, label %49, label %54

49:                                               ; preds = %2, %46
  %50 = phi i8 [ 0, %46 ], [ %18, %2 ]
  %51 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.40, i32 noundef 5)
  %52 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %52, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %52, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %53 unwind label %42

53:                                               ; preds = %49
  unreachable

54:                                               ; preds = %20, %25, %29, %46
  %55 = phi i32 [ %47, %46 ], [ %0, %29 ], [ %0, %25 ], [ %0, %20 ]
  %56 = phi ptr [ %21, %46 ], [ %1, %29 ], [ %1, %25 ], [ %1, %20 ]
  %57 = phi i8 [ 0, %46 ], [ %18, %29 ], [ %18, %25 ], [ %18, %20 ]
  %58 = phi i1 [ %35, %46 ], [ false, %29 ], [ false, %25 ], [ false, %20 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #39
  %59 = getelementptr inbounds %class.Array.13, ptr %3, i64 0, i32 1
  store i32 1, ptr %59, align 4, !tbaa !271
  store i32 1, ptr %3, align 8, !tbaa !273
  %60 = load i32, ptr @programChecker, align 8, !tbaa !13
  %61 = add nsw i32 %60, 8
  store i32 %61, ptr @programChecker, align 8, !tbaa !13
  %62 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %63 = icmp sgt i32 %61, %62
  br i1 %63, label %64, label %65

64:                                               ; preds = %54
  store i32 %61, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %65

65:                                               ; preds = %64, %54
  %66 = phi i32 [ %61, %64 ], [ %62, %54 ]
  %67 = tail call noalias dereferenceable_or_null(8) ptr @calloc(i64 noundef 8, i64 noundef 1) #41
  %68 = getelementptr inbounds %class.Array.13, ptr %3, i64 0, i32 2
  store ptr %67, ptr %68, align 8, !tbaa !274
  %69 = icmp eq ptr %67, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %65
  %71 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %71, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %71, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %72 unwind label %146

72:                                               ; preds = %70
  unreachable

73:                                               ; preds = %65
  %74 = getelementptr inbounds %class.Array.13, ptr %3, i64 0, i32 3
  store ptr %67, ptr %74, align 8, !tbaa !275
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #39
  %75 = getelementptr inbounds %class.Array.14, ptr %4, i64 0, i32 1
  store i32 1, ptr %75, align 4, !tbaa !276
  store i32 1, ptr %4, align 8, !tbaa !278
  %76 = add nsw i32 %60, 16
  store i32 %76, ptr @programChecker, align 8, !tbaa !13
  %77 = icmp sgt i32 %76, %66
  br i1 %77, label %78, label %79

78:                                               ; preds = %73
  store i32 %76, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %79

79:                                               ; preds = %78, %73
  %80 = tail call noalias dereferenceable_or_null(8) ptr @calloc(i64 noundef 8, i64 noundef 1) #41
  %81 = getelementptr inbounds %class.Array.14, ptr %4, i64 0, i32 2
  store ptr %80, ptr %81, align 8, !tbaa !279
  %82 = icmp eq ptr %80, null
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %84, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %84, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %85 unwind label %148

85:                                               ; preds = %83
  unreachable

86:                                               ; preds = %79
  %87 = getelementptr inbounds %class.Array.14, ptr %4, i64 0, i32 3
  store ptr %80, ptr %87, align 8, !tbaa !280
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #39
  %88 = getelementptr inbounds ptr, ptr %56, i64 1
  %89 = load ptr, ptr %88, align 8, !tbaa !5
  %90 = tail call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %89, i32 noundef 47) #44
  %91 = icmp eq ptr %90, null
  %92 = getelementptr inbounds i8, ptr %90, i64 1
  %93 = select i1 %91, ptr %89, ptr %92
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %93)
          to label %94 unwind label %150

94:                                               ; preds = %86
  %95 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %16) #44
  %96 = trunc i64 %95 to i32
  %97 = load ptr, ptr %88, align 8, !tbaa !5
  %98 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %97) #44
  %99 = trunc i64 %98 to i32
  %100 = add nsw i32 %96, 1
  %101 = icmp slt i32 %100, %99
  br i1 %101, label %102, label %152

102:                                              ; preds = %94
  %103 = xor i64 %95, -1
  %104 = add i64 %98, %103
  %105 = shl i64 %104, 32
  %106 = ashr exact i64 %105, 32
  %107 = getelementptr inbounds i8, ptr %97, i64 %106
  %108 = load i8, ptr %107, align 1, !tbaa !9
  %109 = icmp eq i8 %108, 46
  br i1 %109, label %110, label %152

110:                                              ; preds = %102
  %111 = shl i64 %98, 32
  %112 = ashr exact i64 %111, 32
  %113 = getelementptr inbounds i8, ptr %97, i64 %112
  %114 = shl i64 %95, 32
  %115 = ashr exact i64 %114, 32
  %116 = sub nsw i64 0, %115
  %117 = getelementptr inbounds i8, ptr %113, i64 %116
  br label %118

118:                                              ; preds = %126, %110
  %119 = phi ptr [ %16, %110 ], [ %138, %126 ]
  %120 = phi ptr [ %117, %110 ], [ %139, %126 ]
  %121 = load i8, ptr %119, align 1, !tbaa !9
  %122 = icmp eq i8 %121, 0
  %123 = load i8, ptr %120, align 1, !tbaa !9
  br i1 %122, label %140, label %124

124:                                              ; preds = %118
  %125 = icmp eq i8 %123, 0
  br i1 %125, label %140, label %126

126:                                              ; preds = %124
  %127 = sext i8 %121 to i32
  %128 = add i8 %121, -65
  %129 = icmp ult i8 %128, 26
  %130 = add nuw nsw i32 %127, 32
  %131 = select i1 %129, i32 %130, i32 %127
  %132 = sext i8 %123 to i32
  %133 = add i8 %123, -65
  %134 = icmp ult i8 %133, 26
  %135 = add nuw nsw i32 %132, 32
  %136 = select i1 %134, i32 %135, i32 %132
  %137 = icmp eq i32 %131, %136
  %138 = getelementptr inbounds i8, ptr %119, i64 1
  %139 = getelementptr inbounds i8, ptr %120, i64 1
  br i1 %137, label %118, label %143

140:                                              ; preds = %124, %118
  %141 = phi i8 [ %123, %118 ], [ 0, %124 ]
  %142 = icmp eq i8 %121, %141
  br label %143

143:                                              ; preds = %126, %140
  %144 = phi i1 [ %142, %140 ], [ false, %126 ]
  %145 = or i1 %58, %144
  br i1 %145, label %231, label %153

146:                                              ; preds = %70
  %147 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %987

148:                                              ; preds = %83
  %149 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %976

150:                                              ; preds = %86
  %151 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %965

152:                                              ; preds = %102, %94
  br i1 %58, label %231, label %153

153:                                              ; preds = %143, %152
  %154 = load i32, ptr %5, align 8, !tbaa !262
  %155 = icmp sgt i32 %154, 0
  br i1 %155, label %156, label %158

156:                                              ; preds = %153
  %157 = add nsw i32 %154, -1
  store i32 %157, ptr %5, align 8, !tbaa !262
  br label %158

158:                                              ; preds = %156, %153
  %159 = phi i32 [ %157, %156 ], [ %154, %153 ]
  %160 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 1
  %161 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 3
  %162 = load i32, ptr %160, align 4, !tbaa !267
  %163 = icmp eq i32 %159, %162
  br i1 %163, label %164, label %167

164:                                              ; preds = %158
  %165 = shl nsw i32 %159, 1
  %166 = call i32 @llvm.smax.i32(i32 %165, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %166)
          to label %167 unwind label %227

167:                                              ; preds = %164, %158
  %168 = load ptr, ptr %161, align 8, !tbaa !260
  %169 = add nsw i32 %159, 1
  store i32 %169, ptr %5, align 8, !tbaa !262
  %170 = sext i32 %159 to i64
  %171 = getelementptr inbounds i8, ptr %168, i64 %170
  store i8 46, ptr %171, align 1, !tbaa !9
  %172 = load i32, ptr %5, align 8, !tbaa !262
  %173 = load i32, ptr %160, align 4, !tbaa !267
  %174 = icmp eq i32 %172, %173
  br i1 %174, label %175, label %178

175:                                              ; preds = %167
  %176 = shl nsw i32 %172, 1
  %177 = call i32 @llvm.smax.i32(i32 %176, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %177)
          to label %178 unwind label %229

178:                                              ; preds = %167, %175
  %179 = load ptr, ptr %161, align 8, !tbaa !260
  %180 = add nsw i32 %172, 1
  store i32 %180, ptr %5, align 8, !tbaa !262
  %181 = sext i32 %172 to i64
  %182 = getelementptr inbounds i8, ptr %179, i64 %181
  store i8 0, ptr %182, align 1, !tbaa !9
  %183 = load i32, ptr %5, align 8, !tbaa !262
  %184 = icmp sgt i32 %183, 0
  br i1 %184, label %185, label %187

185:                                              ; preds = %178
  %186 = add nsw i32 %183, -1
  store i32 %186, ptr %5, align 8, !tbaa !262
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %183, %178 ], [ %186, %185 ]
  %189 = load i8, ptr %16, align 1, !tbaa !9
  %190 = icmp eq i8 %189, 0
  br i1 %190, label %213, label %191

191:                                              ; preds = %187, %203
  %192 = phi i8 [ %209, %203 ], [ %189, %187 ]
  %193 = phi ptr [ %194, %203 ], [ %16, %187 ]
  %194 = getelementptr inbounds i8, ptr %193, i64 1
  %195 = load i32, ptr %5, align 8, !tbaa !262
  %196 = load i32, ptr %160, align 4, !tbaa !267
  %197 = icmp eq i32 %195, %196
  br i1 %197, label %198, label %203

198:                                              ; preds = %191
  %199 = shl nsw i32 %195, 1
  %200 = call i32 @llvm.smax.i32(i32 %199, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %200)
          to label %201 unwind label %225

201:                                              ; preds = %198
  %202 = load i8, ptr %193, align 1, !tbaa !9
  br label %203

203:                                              ; preds = %201, %191
  %204 = phi i8 [ %192, %191 ], [ %202, %201 ]
  %205 = load ptr, ptr %161, align 8, !tbaa !260
  %206 = add nsw i32 %195, 1
  store i32 %206, ptr %5, align 8, !tbaa !262
  %207 = sext i32 %195 to i64
  %208 = getelementptr inbounds i8, ptr %205, i64 %207
  store i8 %204, ptr %208, align 1, !tbaa !9
  %209 = load i8, ptr %194, align 1, !tbaa !9
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %211, label %191, !llvm.loop !268

211:                                              ; preds = %203
  %212 = load i32, ptr %5, align 8, !tbaa !262
  br label %213

213:                                              ; preds = %211, %187
  %214 = phi i32 [ %212, %211 ], [ %188, %187 ]
  %215 = load i32, ptr %160, align 4, !tbaa !267
  %216 = icmp eq i32 %214, %215
  br i1 %216, label %217, label %220

217:                                              ; preds = %213
  %218 = shl nsw i32 %214, 1
  %219 = call i32 @llvm.smax.i32(i32 %218, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %219)
          to label %220 unwind label %229

220:                                              ; preds = %217, %213
  %221 = load ptr, ptr %161, align 8, !tbaa !260
  %222 = add nsw i32 %214, 1
  store i32 %222, ptr %5, align 8, !tbaa !262
  %223 = sext i32 %214 to i64
  %224 = getelementptr inbounds i8, ptr %221, i64 %223
  store i8 0, ptr %224, align 1, !tbaa !9
  br label %231

225:                                              ; preds = %198
  %226 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %954

227:                                              ; preds = %164
  %228 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %954

229:                                              ; preds = %217, %175
  %230 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %954

231:                                              ; preds = %220, %143, %152
  %232 = phi i1 [ true, %220 ], [ false, %143 ], [ false, %152 ]
  %233 = phi i1 [ false, %220 ], [ true, %143 ], [ true, %152 ]
  %234 = phi i32 [ 0, %220 ], [ 1, %143 ], [ 1, %152 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #39
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef nonnull @.str.36)
          to label %235 unwind label %272

235:                                              ; preds = %231
  br i1 %232, label %236, label %445

236:                                              ; preds = %235
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #39
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull @.str.36)
          to label %237 unwind label %274

237:                                              ; preds = %236
  %238 = icmp sgt i32 %55, 1
  br i1 %238, label %239, label %371

239:                                              ; preds = %237
  %240 = getelementptr inbounds %class.Array.12, ptr %8, i64 0, i32 3
  %241 = icmp eq i32 %55, 2
  %242 = getelementptr inbounds %class.Array.12, ptr %8, i64 0, i32 2
  %243 = zext i32 %55 to i64
  br label %244

244:                                              ; preds = %239, %363
  %245 = phi i64 [ 1, %239 ], [ %365, %363 ]
  %246 = phi i32 [ 0, %239 ], [ %356, %363 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #39
  %247 = getelementptr inbounds ptr, ptr %56, i64 %245
  %248 = load ptr, ptr %247, align 8, !tbaa !5
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef %248)
          to label %249 unwind label %276

249:                                              ; preds = %244
  %250 = load i32, ptr %8, align 8, !tbaa !262
  %251 = add i32 %250, -1
  %252 = icmp sgt i32 %250, 0
  br i1 %252, label %253, label %309

253:                                              ; preds = %249
  %254 = zext i32 %250 to i64
  %255 = and i64 %254, 1
  %256 = icmp eq i32 %250, 1
  br i1 %256, label %259, label %257

257:                                              ; preds = %253
  %258 = and i64 %254, 4294967294
  br label %278

259:                                              ; preds = %293, %253
  %260 = phi i64 [ 0, %253 ], [ %294, %293 ]
  %261 = icmp eq i64 %255, 0
  br i1 %261, label %268, label %262

262:                                              ; preds = %259
  %263 = load ptr, ptr %240, align 8, !tbaa !260
  %264 = getelementptr inbounds i8, ptr %263, i64 %260
  %265 = load i8, ptr %264, align 1, !tbaa !9
  %266 = icmp eq i8 %265, 92
  br i1 %266, label %267, label %268

267:                                              ; preds = %262
  store i8 47, ptr %264, align 1, !tbaa !9
  br label %268

268:                                              ; preds = %262, %267, %259
  %269 = icmp sgt i32 %250, 1
  br i1 %269, label %270, label %309

270:                                              ; preds = %268
  %271 = zext i32 %251 to i64
  br label %297

272:                                              ; preds = %231
  %273 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %952

274:                                              ; preds = %236
  %275 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %443

276:                                              ; preds = %244
  %277 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %367

278:                                              ; preds = %293, %257
  %279 = phi i64 [ 0, %257 ], [ %294, %293 ]
  %280 = phi i64 [ 0, %257 ], [ %295, %293 ]
  %281 = load ptr, ptr %240, align 8, !tbaa !260
  %282 = getelementptr inbounds i8, ptr %281, i64 %279
  %283 = load i8, ptr %282, align 1, !tbaa !9
  %284 = icmp eq i8 %283, 92
  br i1 %284, label %285, label %286

285:                                              ; preds = %278
  store i8 47, ptr %282, align 1, !tbaa !9
  br label %286

286:                                              ; preds = %278, %285
  %287 = or i64 %279, 1
  %288 = load ptr, ptr %240, align 8, !tbaa !260
  %289 = getelementptr inbounds i8, ptr %288, i64 %287
  %290 = load i8, ptr %289, align 1, !tbaa !9
  %291 = icmp eq i8 %290, 92
  br i1 %291, label %292, label %293

292:                                              ; preds = %286
  store i8 47, ptr %289, align 1, !tbaa !9
  br label %293

293:                                              ; preds = %292, %286
  %294 = add nuw nsw i64 %279, 2
  %295 = add i64 %280, 2
  %296 = icmp eq i64 %295, %258
  br i1 %296, label %259, label %278, !llvm.loop !281

297:                                              ; preds = %270, %305
  %298 = phi i64 [ %271, %270 ], [ %299, %305 ]
  %299 = add nsw i64 %298, -1
  %300 = load ptr, ptr %240, align 8, !tbaa !260
  %301 = and i64 %299, 4294967295
  %302 = getelementptr inbounds i8, ptr %300, i64 %301
  %303 = load i8, ptr %302, align 1, !tbaa !9
  %304 = icmp eq i8 %303, 47
  br i1 %304, label %305, label %307

305:                                              ; preds = %297
  store i8 0, ptr %302, align 1, !tbaa !9
  %306 = icmp ugt i64 %298, 1
  br i1 %306, label %297, label %309, !llvm.loop !282

307:                                              ; preds = %297
  %308 = trunc i64 %298 to i32
  br label %309

309:                                              ; preds = %305, %307, %249, %268
  %310 = phi i32 [ %251, %268 ], [ %251, %249 ], [ %308, %307 ], [ 0, %305 ]
  %311 = load ptr, ptr %240, align 8
  %312 = zext i32 %310 to i64
  br label %313

313:                                              ; preds = %317, %309
  %314 = phi i64 [ %318, %317 ], [ %312, %309 ]
  %315 = trunc i64 %314 to i32
  %316 = icmp sgt i32 %315, 0
  br i1 %316, label %317, label %322

317:                                              ; preds = %313
  %318 = add nsw i64 %314, -1
  %319 = getelementptr inbounds i8, ptr %311, i64 %318
  %320 = load i8, ptr %319, align 1, !tbaa !9
  %321 = icmp eq i8 %320, 47
  br i1 %321, label %332, label %313, !llvm.loop !283

322:                                              ; preds = %313
  %323 = trunc i64 %314 to i32
  %324 = icmp eq i32 %323, 0
  %325 = icmp sgt i32 %310, 1
  %326 = select i1 %324, i1 %325, i1 false
  br i1 %326, label %327, label %334

327:                                              ; preds = %322
  %328 = getelementptr inbounds i8, ptr %311, i64 1
  %329 = load i8, ptr %328, align 1, !tbaa !9
  %330 = icmp eq i8 %329, 58
  %331 = select i1 %330, i32 2, i32 0
  br label %334

332:                                              ; preds = %317
  %333 = trunc i64 %314 to i32
  br label %334

334:                                              ; preds = %332, %322, %327
  %335 = phi i32 [ %323, %322 ], [ %331, %327 ], [ %333, %332 ]
  %336 = invoke noundef i32 @_Z7putsizeR6StringS0_PKci(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef %311, i32 noundef %335)
          to label %337 unwind label %345

337:                                              ; preds = %334
  %338 = icmp eq i32 %336, 0
  %339 = icmp ugt i64 %245, 1
  %340 = select i1 %339, i1 true, i1 %241
  %341 = select i1 %338, i1 %340, i1 false
  br i1 %341, label %342, label %355

342:                                              ; preds = %337
  %343 = load ptr, ptr %240, align 8, !tbaa !260
  %344 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.42, ptr noundef %343)
  br label %355

345:                                              ; preds = %334
  %346 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  %347 = load i32, ptr %8, align 8, !tbaa !262
  %348 = load i32, ptr @programChecker, align 8, !tbaa !13
  %349 = sub i32 %348, %347
  store i32 %349, ptr @programChecker, align 8, !tbaa !13
  %350 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %351 = icmp sgt i32 %349, %350
  br i1 %351, label %352, label %353

352:                                              ; preds = %345
  store i32 %349, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %353

353:                                              ; preds = %345, %352
  %354 = load ptr, ptr %242, align 8, !tbaa !264
  call void @free(ptr noundef %354) #39
  br label %367

355:                                              ; preds = %342, %337
  %356 = add nuw nsw i32 %336, %246
  %357 = load i32, ptr %8, align 8, !tbaa !262
  %358 = load i32, ptr @programChecker, align 8, !tbaa !13
  %359 = sub i32 %358, %357
  store i32 %359, ptr @programChecker, align 8, !tbaa !13
  %360 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %361 = icmp sgt i32 %359, %360
  br i1 %361, label %362, label %363

362:                                              ; preds = %355
  store i32 %359, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %363

363:                                              ; preds = %355, %362
  %364 = load ptr, ptr %242, align 8, !tbaa !264
  call void @free(ptr noundef %364) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #39
  %365 = add nuw nsw i64 %245, 1
  %366 = icmp eq i64 %365, %243
  br i1 %366, label %369, label %244, !llvm.loop !284

367:                                              ; preds = %353, %276
  %368 = phi { ptr, i32 } [ %346, %353 ], [ %277, %276 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #39
  br label %432

369:                                              ; preds = %363
  %370 = icmp eq i32 %356, 0
  br i1 %370, label %371, label %375

371:                                              ; preds = %237, %369
  %372 = call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.43, ptr %372, align 16, !tbaa !5
  br label %383

373:                                              ; preds = %383, %392, %386
  %374 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %432

375:                                              ; preds = %369
  %376 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 3
  %377 = load ptr, ptr %376, align 8, !tbaa !260
  %378 = call noalias ptr @fopen(ptr noundef %377, ptr noundef nonnull @.str.44)
  %379 = icmp eq ptr %378, null
  br i1 %379, label %380, label %386

380:                                              ; preds = %375
  %381 = load ptr, ptr %376, align 8, !tbaa !260
  call void @perror(ptr noundef %381) #45
  %382 = call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %382, align 16, !tbaa !5
  br label %383

383:                                              ; preds = %371, %380
  %384 = phi ptr [ %382, %380 ], [ %372, %371 ]
  invoke void @__cxa_throw(ptr nonnull %384, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %385 unwind label %373

385:                                              ; preds = %383
  unreachable

386:                                              ; preds = %375
  %387 = load i32, ptr @level, align 4, !tbaa !25
  %388 = getelementptr inbounds %class.Array.12, ptr %7, i64 0, i32 3
  %389 = load ptr, ptr %388, align 8, !tbaa !260
  %390 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %378, ptr noundef nonnull @.str.45, i32 noundef %387, ptr noundef %389)
  %391 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.46, i32 noundef %356)
  invoke void @_ZN5ArrayIPcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %3, i32 noundef %356)
          to label %392 unwind label %373

392:                                              ; preds = %386
  invoke void @_ZN5ArrayIlLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %4, i32 noundef %356)
          to label %393 unwind label %373

393:                                              ; preds = %392
  %394 = getelementptr inbounds %class.Array.12, ptr %6, i64 0, i32 3
  %395 = load ptr, ptr %394, align 8, !tbaa !260
  call void @rewind(ptr noundef nonnull %378)
  %396 = invoke noundef ptr @_Z7getlineP8_IO_FILE(ptr noundef nonnull %378)
          to label %397 unwind label %414

397:                                              ; preds = %393
  %398 = zext i32 %356 to i64
  br label %399

399:                                              ; preds = %397, %418
  %400 = phi i64 [ 0, %397 ], [ %419, %418 ]
  %401 = phi ptr [ %395, %397 ], [ %413, %418 ]
  %402 = invoke noundef ptr @_Z7getlineP8_IO_FILE(ptr noundef nonnull %378)
          to label %403 unwind label %416

403:                                              ; preds = %399
  %404 = call i64 @strtol(ptr nocapture noundef nonnull %402, ptr noundef null, i32 noundef 10) #39
  %405 = load ptr, ptr %87, align 8, !tbaa !280
  %406 = getelementptr inbounds i64, ptr %405, i64 %400
  store i64 %404, ptr %406, align 8, !tbaa !285
  %407 = load ptr, ptr %74, align 8, !tbaa !275
  %408 = getelementptr inbounds ptr, ptr %407, i64 %400
  store ptr %401, ptr %408, align 8, !tbaa !5
  br label %409

409:                                              ; preds = %409, %403
  %410 = phi ptr [ %401, %403 ], [ %413, %409 ]
  %411 = load i8, ptr %410, align 1, !tbaa !9
  %412 = icmp eq i8 %411, 10
  %413 = getelementptr inbounds i8, ptr %410, i64 1
  br i1 %412, label %418, label %409, !llvm.loop !286

414:                                              ; preds = %393
  %415 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %432

416:                                              ; preds = %399
  %417 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %432

418:                                              ; preds = %409
  store i8 0, ptr %410, align 1, !tbaa !9
  %419 = add nuw nsw i64 %400, 1
  %420 = icmp eq i64 %419, %398
  br i1 %420, label %421, label %399, !llvm.loop !287

421:                                              ; preds = %418
  %422 = call i32 @fseek(ptr noundef nonnull %378, i64 noundef 0, i32 noundef 2)
  %423 = load i32, ptr %7, align 8, !tbaa !262
  %424 = load i32, ptr @programChecker, align 8, !tbaa !13
  %425 = sub i32 %424, %423
  store i32 %425, ptr @programChecker, align 8, !tbaa !13
  %426 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %427 = icmp sgt i32 %425, %426
  br i1 %427, label %428, label %429

428:                                              ; preds = %421
  store i32 %425, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %429

429:                                              ; preds = %421, %428
  %430 = getelementptr inbounds %class.Array.12, ptr %7, i64 0, i32 2
  %431 = load ptr, ptr %430, align 8, !tbaa !264
  call void @free(ptr noundef %431) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #39
  br label %445

432:                                              ; preds = %414, %416, %373, %367
  %433 = phi { ptr, i32 } [ %368, %367 ], [ %374, %373 ], [ %417, %416 ], [ %415, %414 ]
  %434 = load i32, ptr %7, align 8, !tbaa !262
  %435 = load i32, ptr @programChecker, align 8, !tbaa !13
  %436 = sub i32 %435, %434
  store i32 %436, ptr @programChecker, align 8, !tbaa !13
  %437 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %438 = icmp sgt i32 %436, %437
  br i1 %438, label %439, label %440

439:                                              ; preds = %432
  store i32 %436, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %440

440:                                              ; preds = %432, %439
  %441 = getelementptr inbounds %class.Array.12, ptr %7, i64 0, i32 2
  %442 = load ptr, ptr %441, align 8, !tbaa !264
  call void @free(ptr noundef %442) #39
  br label %443

443:                                              ; preds = %440, %274
  %444 = phi { ptr, i32 } [ %433, %440 ], [ %275, %274 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #39
  br label %941

445:                                              ; preds = %429, %235
  %446 = phi i32 [ %356, %429 ], [ 0, %235 ]
  %447 = phi ptr [ %378, %429 ], [ null, %235 ]
  br i1 %233, label %448, label %546

448:                                              ; preds = %445
  %449 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 3
  %450 = load ptr, ptr %449, align 8, !tbaa !260
  %451 = call noalias ptr @fopen(ptr noundef %450, ptr noundef nonnull @.str.47)
  %452 = icmp eq ptr %451, null
  br i1 %452, label %453, label %459

453:                                              ; preds = %448
  %454 = load ptr, ptr %449, align 8, !tbaa !260
  call void @perror(ptr noundef %454) #45
  %455 = call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %455, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %455, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %456 unwind label %457

456:                                              ; preds = %453
  unreachable

457:                                              ; preds = %551, %453
  %458 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %941

459:                                              ; preds = %448
  %460 = invoke noundef ptr @_Z7getlineP8_IO_FILE(ptr noundef nonnull %451)
          to label %461 unwind label %471

461:                                              ; preds = %459
  %462 = call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %460, ptr noundef nonnull dereferenceable(8) @.str.48, i64 noundef 7) #44
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %473, label %464

464:                                              ; preds = %461
  %465 = load ptr, ptr %449, align 8, !tbaa !260
  %466 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.49, ptr noundef %465, ptr noundef nonnull @.str.50)
  %467 = call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %467, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %467, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %468 unwind label %471

468:                                              ; preds = %464
  unreachable

469:                                              ; preds = %481
  %470 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %941

471:                                              ; preds = %459, %464
  %472 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %941

473:                                              ; preds = %461
  %474 = getelementptr inbounds i8, ptr %460, i64 7
  %475 = load i8, ptr %474, align 1, !tbaa !9
  %476 = zext i8 %475 to i32
  %477 = add nsw i32 %476, -48
  %478 = add i8 %475, -58
  %479 = icmp ult i8 %478, -10
  %480 = select i1 %479, i32 5, i32 %477
  store i32 %480, ptr @level, align 4
  br label %481

481:                                              ; preds = %486, %473
  %482 = phi i32 [ %446, %473 ], [ %487, %486 ]
  %483 = invoke noundef ptr @_Z7getlineP8_IO_FILE(ptr noundef nonnull %451)
          to label %484 unwind label %469

484:                                              ; preds = %481
  %485 = icmp eq ptr %483, null
  br i1 %485, label %488, label %486

486:                                              ; preds = %484
  %487 = add nsw i32 %482, 1
  br label %481, !llvm.loop !288

488:                                              ; preds = %484
  %489 = load i32, ptr @level, align 4, !tbaa !25
  %490 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.51, i32 noundef %482, i32 noundef %489)
  %491 = call i64 @ftell(ptr noundef nonnull %451)
  %492 = trunc i64 %491 to i32
  %493 = add i32 %492, 4
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %6, i32 noundef %493)
          to label %494 unwind label %506

494:                                              ; preds = %488
  call void @rewind(ptr noundef nonnull %451)
  %495 = getelementptr inbounds %class.Array.12, ptr %6, i64 0, i32 3
  %496 = load ptr, ptr %495, align 8, !tbaa !260
  %497 = call i64 @fread(ptr noundef nonnull %496, i64 noundef 1, i64 noundef %491, ptr noundef nonnull %451)
  invoke void @_ZN5ArrayIPcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %3, i32 noundef %482)
          to label %498 unwind label %506

498:                                              ; preds = %494
  invoke void @_ZN5ArrayIlLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %4, i32 noundef %482)
          to label %499 unwind label %506

499:                                              ; preds = %498
  %500 = load ptr, ptr %495, align 8, !tbaa !260
  br label %501

501:                                              ; preds = %504, %499
  %502 = phi ptr [ %500, %499 ], [ %505, %504 ]
  %503 = load i8, ptr %502, align 1, !tbaa !9
  switch i8 %503, label %504 [
    i8 0, label %508
    i8 13, label %508
  ]

504:                                              ; preds = %501
  %505 = getelementptr inbounds i8, ptr %502, i64 1
  br label %501, !llvm.loop !289

506:                                              ; preds = %498, %494, %488
  %507 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %941

508:                                              ; preds = %501, %501
  %509 = icmp sgt i32 %482, 0
  br i1 %509, label %510, label %546

510:                                              ; preds = %508
  %511 = zext i32 %482 to i64
  br label %512

512:                                              ; preds = %510, %543
  %513 = phi i64 [ 0, %510 ], [ %544, %543 ]
  %514 = phi ptr [ %502, %510 ], [ %530, %543 ]
  %515 = getelementptr inbounds i8, ptr %514, i64 2
  %516 = call i64 @strtol(ptr nocapture noundef nonnull %515, ptr noundef null, i32 noundef 10) #39
  %517 = load ptr, ptr %87, align 8, !tbaa !280
  %518 = getelementptr inbounds i64, ptr %517, i64 %513
  store i64 %516, ptr %518, align 8, !tbaa !285
  br label %519

519:                                              ; preds = %519, %512
  %520 = phi ptr [ %514, %512 ], [ %521, %519 ]
  %521 = getelementptr inbounds i8, ptr %520, i64 1
  %522 = load i8, ptr %521, align 1, !tbaa !9
  switch i8 %522, label %519 [
    i8 0, label %525
    i8 9, label %525
  ], !llvm.loop !290

523:                                              ; preds = %534
  %524 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %941

525:                                              ; preds = %519, %519
  %526 = getelementptr inbounds i8, ptr %520, i64 2
  %527 = load ptr, ptr %74, align 8, !tbaa !275
  %528 = getelementptr inbounds ptr, ptr %527, i64 %513
  store ptr %526, ptr %528, align 8, !tbaa !5
  br label %529

529:                                              ; preds = %532, %525
  %530 = phi ptr [ %521, %525 ], [ %533, %532 ]
  %531 = load i8, ptr %530, align 1, !tbaa !9
  switch i8 %531, label %532 [
    i8 0, label %534
    i8 13, label %543
  ]

532:                                              ; preds = %529
  %533 = getelementptr inbounds i8, ptr %530, i64 1
  br label %529, !llvm.loop !291

534:                                              ; preds = %529
  %535 = load ptr, ptr %449, align 8, !tbaa !260
  %536 = load ptr, ptr %495, align 8, !tbaa !260
  %537 = ptrtoint ptr %530 to i64
  %538 = ptrtoint ptr %536 to i64
  %539 = sub i64 %537, %538
  %540 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.52, ptr noundef %535, i64 noundef %539)
  %541 = call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %541, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %541, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %542 unwind label %523

542:                                              ; preds = %534
  unreachable

543:                                              ; preds = %529
  store i8 0, ptr %530, align 1, !tbaa !9
  %544 = add nuw nsw i64 %513, 1
  %545 = icmp eq i64 %544, %511
  br i1 %545, label %546, label %512, !llvm.loop !292

546:                                              ; preds = %543, %508, %445
  %547 = phi i32 [ %446, %445 ], [ %482, %508 ], [ %482, %543 ]
  %548 = phi ptr [ %447, %445 ], [ %451, %508 ], [ %451, %543 ]
  %549 = load i32, ptr @level, align 4, !tbaa !25
  %550 = icmp ugt i32 %549, 12
  br i1 %550, label %553, label %551

551:                                              ; preds = %546
  %552 = shl nuw i32 524288, %549
  invoke void @_ZN5ArrayIhLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) @buf, i32 noundef %552)
          to label %553 unwind label %457

553:                                              ; preds = %551, %546
  %554 = icmp sgt i32 %547, 0
  br i1 %554, label %555, label %580

555:                                              ; preds = %553
  %556 = load ptr, ptr %87, align 8, !tbaa !280
  %557 = zext i32 %547 to i64
  %558 = icmp ult i32 %547, 4
  br i1 %558, label %577, label %559

559:                                              ; preds = %555
  %560 = and i64 %557, 4294967292
  br label %561

561:                                              ; preds = %561, %559
  %562 = phi i64 [ 0, %559 ], [ %571, %561 ]
  %563 = phi <2 x i64> [ zeroinitializer, %559 ], [ %569, %561 ]
  %564 = phi <2 x i64> [ zeroinitializer, %559 ], [ %570, %561 ]
  %565 = getelementptr inbounds i64, ptr %556, i64 %562
  %566 = load <2 x i64>, ptr %565, align 8, !tbaa !285
  %567 = getelementptr inbounds i64, ptr %565, i64 2
  %568 = load <2 x i64>, ptr %567, align 8, !tbaa !285
  %569 = add <2 x i64> %566, %563
  %570 = add <2 x i64> %568, %564
  %571 = add nuw i64 %562, 4
  %572 = icmp eq i64 %571, %560
  br i1 %572, label %573, label %561, !llvm.loop !293

573:                                              ; preds = %561
  %574 = add <2 x i64> %570, %569
  %575 = call i64 @llvm.vector.reduce.add.v2i64(<2 x i64> %574)
  %576 = icmp eq i64 %560, %557
  br i1 %576, label %580, label %577

577:                                              ; preds = %555, %573
  %578 = phi i64 [ 0, %555 ], [ %560, %573 ]
  %579 = phi i64 [ 0, %555 ], [ %575, %573 ]
  br label %627

580:                                              ; preds = %627, %573, %553
  %581 = phi i64 [ 0, %553 ], [ %575, %573 ], [ %632, %627 ]
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %9) #39
  store i32 2048, ptr %9, align 8, !tbaa !230
  %582 = getelementptr inbounds %class.Encoder, ptr %9, i64 0, i32 1
  store i32 %234, ptr %582, align 4, !tbaa !232
  %583 = getelementptr inbounds %class.Encoder, ptr %9, i64 0, i32 2
  store ptr %548, ptr %583, align 8, !tbaa !235
  %584 = getelementptr inbounds %class.Encoder, ptr %9, i64 0, i32 3
  store i32 0, ptr %584, align 8, !tbaa !236
  %585 = getelementptr inbounds %class.Encoder, ptr %9, i64 0, i32 4
  store i32 -1, ptr %585, align 4, !tbaa !237
  %586 = getelementptr inbounds %class.Encoder, ptr %9, i64 0, i32 5
  store i32 0, ptr %586, align 8, !tbaa !238
  %587 = getelementptr inbounds %class.Encoder, ptr %9, i64 0, i32 6
  store ptr null, ptr %587, align 8, !tbaa !239
  %588 = load i32, ptr @level, align 4, !tbaa !25
  %589 = icmp sgt i32 %588, 0
  %590 = and i1 %233, %589
  br i1 %590, label %591, label %609

591:                                              ; preds = %580
  %592 = call i32 @getc(ptr noundef %548)
  %593 = and i32 %592, 255
  store i32 %593, ptr %586, align 8, !tbaa !238
  %594 = shl nuw nsw i32 %593, 8
  %595 = load ptr, ptr %583, align 8, !tbaa !235
  %596 = call i32 @getc(ptr noundef %595)
  %597 = and i32 %596, 255
  %598 = or i32 %597, %594
  store i32 %598, ptr %586, align 8, !tbaa !238
  %599 = shl nuw nsw i32 %598, 8
  %600 = load ptr, ptr %583, align 8, !tbaa !235
  %601 = call i32 @getc(ptr noundef %600)
  %602 = and i32 %601, 255
  %603 = or i32 %602, %599
  store i32 %603, ptr %586, align 8, !tbaa !238
  %604 = shl nuw i32 %603, 8
  %605 = load ptr, ptr %583, align 8, !tbaa !235
  %606 = call i32 @getc(ptr noundef %605)
  %607 = and i32 %606, 255
  %608 = or i32 %607, %604
  store i32 %608, ptr %586, align 8, !tbaa !238
  br label %609

609:                                              ; preds = %591, %580
  br label %610

610:                                              ; preds = %610, %609
  %611 = phi i64 [ 0, %609 ], [ %625, %610 ]
  %612 = trunc i64 %611 to i16
  %613 = shl i16 %612, 1
  %614 = or i16 %613, 3
  %615 = udiv i16 16384, %614
  %616 = zext i16 %615 to i32
  %617 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %611
  store i32 %616, ptr %617, align 8, !tbaa !25
  %618 = or i64 %611, 1
  %619 = trunc i64 %618 to i16
  %620 = shl i16 %619, 1
  %621 = add nuw nsw i16 %620, 3
  %622 = udiv i16 16384, %621
  %623 = zext i16 %622 to i32
  %624 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %618
  store i32 %623, ptr %624, align 4, !tbaa !25
  %625 = add nuw nsw i64 %611, 2
  %626 = icmp eq i64 %625, 1024
  br i1 %626, label %635, label %610, !llvm.loop !240

627:                                              ; preds = %577, %627
  %628 = phi i64 [ %633, %627 ], [ %578, %577 ]
  %629 = phi i64 [ %632, %627 ], [ %579, %577 ]
  %630 = getelementptr inbounds i64, ptr %556, i64 %628
  %631 = load i64, ptr %630, align 8, !tbaa !285
  %632 = add nsw i64 %631, %629
  %633 = add nuw nsw i64 %628, 1
  %634 = icmp eq i64 %633, %557
  br i1 %634, label %580, label %627, !llvm.loop !294

635:                                              ; preds = %610
  br i1 %232, label %636, label %667

636:                                              ; preds = %635
  br i1 %554, label %637, label %639

637:                                              ; preds = %636
  %638 = zext i32 %547 to i64
  br label %650

639:                                              ; preds = %658, %636
  %640 = load i32, ptr %582, align 4, !tbaa !232
  %641 = icmp eq i32 %640, 0
  %642 = load i32, ptr @level, align 4
  %643 = icmp sgt i32 %642, 0
  %644 = select i1 %641, i1 %643, i1 false
  br i1 %644, label %645, label %663

645:                                              ; preds = %639
  %646 = load i32, ptr %584, align 8, !tbaa !236
  %647 = lshr i32 %646, 24
  %648 = load ptr, ptr %583, align 8, !tbaa !235
  %649 = call i32 @putc(i32 noundef %647, ptr noundef %648)
  br label %663

650:                                              ; preds = %637, %658
  %651 = phi i64 [ 0, %637 ], [ %659, %658 ]
  %652 = load ptr, ptr %74, align 8, !tbaa !275
  %653 = getelementptr inbounds ptr, ptr %652, i64 %651
  %654 = load ptr, ptr %653, align 8, !tbaa !5
  %655 = load ptr, ptr %87, align 8, !tbaa !280
  %656 = getelementptr inbounds i64, ptr %655, i64 %651
  %657 = load i64, ptr %656, align 8, !tbaa !285
  invoke void @_Z8compressPKclR7Encoder(ptr noundef %654, i64 noundef %657, ptr noundef nonnull align 8 dereferenceable(40) %9)
          to label %658 unwind label %661

658:                                              ; preds = %650
  %659 = add nuw nsw i64 %651, 1
  %660 = icmp eq i64 %659, %638
  br i1 %660, label %639, label %650, !llvm.loop !295

661:                                              ; preds = %650
  %662 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %939

663:                                              ; preds = %639, %645
  %664 = load ptr, ptr %583, align 8, !tbaa !235
  %665 = call i64 @ftell(ptr noundef %664)
  %666 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.53, i64 noundef %581, i64 noundef %665)
  br label %901

667:                                              ; preds = %635
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #39
  %668 = icmp sgt i32 %55, 2
  %669 = getelementptr inbounds ptr, ptr %56, i64 2
  %670 = select i1 %668, ptr %669, ptr %88
  %671 = load ptr, ptr %670, align 8, !tbaa !5
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %10, ptr noundef %671)
          to label %672 unwind label %690

672:                                              ; preds = %667
  %673 = icmp eq i32 %55, 2
  br i1 %673, label %674, label %710

674:                                              ; preds = %672
  %675 = load i32, ptr %10, align 8, !tbaa !262
  %676 = add i32 %675, -2
  %677 = icmp sgt i32 %675, 1
  br i1 %677, label %678, label %704

678:                                              ; preds = %674
  %679 = getelementptr inbounds %class.Array.12, ptr %10, i64 0, i32 3
  %680 = load ptr, ptr %679, align 8, !tbaa !260
  %681 = getelementptr inbounds i8, ptr %680, i64 1
  %682 = zext i32 %676 to i64
  br label %683

683:                                              ; preds = %678, %701
  %684 = phi i64 [ %682, %678 ], [ %702, %701 ]
  %685 = getelementptr inbounds i8, ptr %680, i64 %684
  %686 = load i8, ptr %685, align 1, !tbaa !9
  switch i8 %686, label %694 [
    i8 47, label %687
    i8 92, label %687
  ]

687:                                              ; preds = %683, %683
  %688 = and i64 %684, 4294967295
  %689 = getelementptr inbounds i8, ptr %680, i64 %688
  store i8 0, ptr %689, align 1, !tbaa !9
  br label %710

690:                                              ; preds = %667
  %691 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %899

692:                                              ; preds = %706
  %693 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %888

694:                                              ; preds = %683
  %695 = icmp eq i64 %684, 1
  br i1 %695, label %696, label %701

696:                                              ; preds = %694
  %697 = load i8, ptr %681, align 1, !tbaa !9
  %698 = icmp eq i8 %697, 58
  br i1 %698, label %699, label %701

699:                                              ; preds = %696
  %700 = getelementptr inbounds i8, ptr %680, i64 2
  store i8 0, ptr %700, align 1, !tbaa !9
  br label %710

701:                                              ; preds = %694, %696
  %702 = add nsw i64 %684, -1
  %703 = icmp sgt i64 %684, 0
  br i1 %703, label %683, label %706, !llvm.loop !296

704:                                              ; preds = %674
  %705 = icmp eq i32 %676, -1
  br i1 %705, label %706, label %710

706:                                              ; preds = %701, %704
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 2)
          to label %707 unwind label %692

707:                                              ; preds = %706
  %708 = getelementptr inbounds %class.Array.12, ptr %10, i64 0, i32 3
  %709 = load ptr, ptr %708, align 8, !tbaa !260
  store i16 46, ptr %709, align 1
  br label %710

710:                                              ; preds = %687, %699, %672, %704, %707
  %711 = getelementptr inbounds %class.Array.12, ptr %10, i64 0, i32 3
  %712 = load ptr, ptr %711, align 8, !tbaa !260
  %713 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %712) #44
  %714 = trunc i64 %713 to i32
  %715 = add i32 %714, 1
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef %715)
          to label %716 unwind label %761

716:                                              ; preds = %710
  %717 = load ptr, ptr %711, align 8, !tbaa !260
  %718 = call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %717, ptr noundef nonnull dereferenceable(1) %712) #39
  %719 = load ptr, ptr %711, align 8, !tbaa !260
  %720 = load i8, ptr %719, align 1, !tbaa !9
  %721 = icmp eq i8 %720, 0
  br i1 %721, label %763, label %722

722:                                              ; preds = %716
  %723 = load i32, ptr %10, align 8, !tbaa !262
  %724 = icmp eq i32 %723, 3
  br i1 %724, label %725, label %729

725:                                              ; preds = %722
  %726 = getelementptr inbounds i8, ptr %719, i64 1
  %727 = load i8, ptr %726, align 1, !tbaa !9
  %728 = icmp eq i8 %727, 58
  br i1 %728, label %763, label %731

729:                                              ; preds = %722
  %730 = icmp sgt i32 %723, 0
  br i1 %730, label %731, label %733

731:                                              ; preds = %725, %729
  %732 = add nsw i32 %723, -1
  store i32 %732, ptr %10, align 8, !tbaa !262
  br label %733

733:                                              ; preds = %731, %729
  %734 = phi i32 [ %732, %731 ], [ %723, %729 ]
  %735 = getelementptr inbounds %class.Array.12, ptr %10, i64 0, i32 1
  %736 = load i32, ptr %735, align 4, !tbaa !267
  %737 = icmp eq i32 %734, %736
  br i1 %737, label %738, label %743

738:                                              ; preds = %733
  %739 = shl nsw i32 %734, 1
  %740 = call i32 @llvm.smax.i32(i32 %739, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef %740)
          to label %741 unwind label %759

741:                                              ; preds = %738
  %742 = load ptr, ptr %711, align 8, !tbaa !260
  br label %743

743:                                              ; preds = %741, %733
  %744 = phi ptr [ %742, %741 ], [ %719, %733 ]
  %745 = add nsw i32 %734, 1
  store i32 %745, ptr %10, align 8, !tbaa !262
  %746 = sext i32 %734 to i64
  %747 = getelementptr inbounds i8, ptr %744, i64 %746
  store i8 47, ptr %747, align 1, !tbaa !9
  %748 = load i32, ptr %10, align 8, !tbaa !262
  %749 = load i32, ptr %735, align 4, !tbaa !267
  %750 = icmp eq i32 %748, %749
  br i1 %750, label %751, label %754

751:                                              ; preds = %743
  %752 = shl nsw i32 %748, 1
  %753 = call i32 @llvm.smax.i32(i32 %752, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef %753)
          to label %754 unwind label %761

754:                                              ; preds = %751, %743
  %755 = load ptr, ptr %711, align 8, !tbaa !260
  %756 = add nsw i32 %748, 1
  store i32 %756, ptr %10, align 8, !tbaa !262
  %757 = sext i32 %748 to i64
  %758 = getelementptr inbounds i8, ptr %755, i64 %757
  store i8 0, ptr %758, align 1, !tbaa !9
  br label %763

759:                                              ; preds = %738
  %760 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %888

761:                                              ; preds = %710, %751
  %762 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %888

763:                                              ; preds = %754, %725, %716
  br i1 %554, label %764, label %769

764:                                              ; preds = %763
  %765 = getelementptr inbounds %class.Array.12, ptr %11, i64 0, i32 1
  %766 = getelementptr inbounds %class.Array.12, ptr %11, i64 0, i32 3
  %767 = getelementptr inbounds %class.Array.12, ptr %11, i64 0, i32 2
  %768 = zext i32 %547 to i64
  br label %779

769:                                              ; preds = %866, %763
  %770 = load i32, ptr %10, align 8, !tbaa !262
  %771 = load i32, ptr @programChecker, align 8, !tbaa !13
  %772 = sub i32 %771, %770
  store i32 %772, ptr @programChecker, align 8, !tbaa !13
  %773 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %774 = icmp sgt i32 %772, %773
  br i1 %774, label %775, label %776

775:                                              ; preds = %769
  store i32 %772, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %776

776:                                              ; preds = %769, %775
  %777 = getelementptr inbounds %class.Array.12, ptr %10, i64 0, i32 2
  %778 = load ptr, ptr %777, align 8, !tbaa !264
  call void @free(ptr noundef %778) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #39
  br label %901

779:                                              ; preds = %764, %866
  %780 = phi i64 [ 0, %764 ], [ %868, %866 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #39
  %781 = load ptr, ptr %711, align 8, !tbaa !260
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %11, ptr noundef %781)
          to label %782 unwind label %870

782:                                              ; preds = %779
  %783 = load ptr, ptr %74, align 8, !tbaa !275
  %784 = getelementptr inbounds ptr, ptr %783, i64 %780
  %785 = load ptr, ptr %784, align 8, !tbaa !5
  %786 = load i32, ptr %11, align 8, !tbaa !262
  %787 = icmp sgt i32 %786, 0
  br i1 %787, label %788, label %790

788:                                              ; preds = %782
  %789 = add nsw i32 %786, -1
  store i32 %789, ptr %11, align 8, !tbaa !262
  br label %790

790:                                              ; preds = %788, %782
  %791 = phi i32 [ %786, %782 ], [ %789, %788 ]
  %792 = load i8, ptr %785, align 1, !tbaa !9
  %793 = icmp eq i8 %792, 0
  br i1 %793, label %843, label %794

794:                                              ; preds = %790, %833
  %795 = phi i8 [ %839, %833 ], [ %792, %790 ]
  %796 = phi ptr [ %797, %833 ], [ %785, %790 ]
  %797 = getelementptr inbounds i8, ptr %796, i64 1
  %798 = load i32, ptr %11, align 8, !tbaa !262
  %799 = load i32, ptr %765, align 4, !tbaa !267
  %800 = icmp eq i32 %798, %799
  br i1 %800, label %801, label %833

801:                                              ; preds = %794
  %802 = shl nsw i32 %798, 1
  %803 = call i32 @llvm.smax.i32(i32 %802, i32 1)
  %804 = icmp slt i32 %798, %803
  br i1 %804, label %805, label %831

805:                                              ; preds = %801
  %806 = load ptr, ptr %767, align 8, !tbaa !264
  %807 = load ptr, ptr %766, align 8, !tbaa !260
  store i32 %803, ptr %765, align 4, !tbaa !267
  store i32 %803, ptr %11, align 8, !tbaa !262
  %808 = zext i32 %803 to i64
  %809 = load i32, ptr @programChecker, align 8, !tbaa !13
  %810 = add nsw i32 %809, %803
  store i32 %810, ptr @programChecker, align 8, !tbaa !13
  %811 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %812 = icmp sgt i32 %810, %811
  br i1 %812, label %813, label %814

813:                                              ; preds = %805
  store i32 %810, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %814

814:                                              ; preds = %813, %805
  %815 = phi i32 [ %810, %813 ], [ %811, %805 ]
  %816 = call noalias ptr @calloc(i64 noundef %808, i64 noundef 1) #41
  store ptr %816, ptr %767, align 8, !tbaa !264
  %817 = icmp eq ptr %816, null
  br i1 %817, label %818, label %821

818:                                              ; preds = %814
  %819 = call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %819, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %819, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %820 unwind label %874

820:                                              ; preds = %818
  unreachable

821:                                              ; preds = %814
  store ptr %816, ptr %766, align 8, !tbaa !260
  %822 = icmp eq ptr %806, null
  br i1 %822, label %831, label %823

823:                                              ; preds = %821
  %824 = icmp eq ptr %807, null
  br i1 %824, label %830, label %825

825:                                              ; preds = %823
  %826 = call i32 @llvm.smin.i32(i32 %803, i32 %798)
  %827 = sext i32 %826 to i64
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %816, ptr nonnull align 1 %807, i64 %827, i1 false)
  store i32 %809, ptr @programChecker, align 8, !tbaa !13
  %828 = icmp sgt i32 %809, %815
  br i1 %828, label %829, label %830

829:                                              ; preds = %825
  store i32 %809, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %830

830:                                              ; preds = %829, %825, %823
  call void @free(ptr noundef nonnull %806) #39
  br label %831

831:                                              ; preds = %801, %830, %821
  store i32 %798, ptr %11, align 8, !tbaa !262
  %832 = load i8, ptr %796, align 1, !tbaa !9
  br label %833

833:                                              ; preds = %831, %794
  %834 = phi i8 [ %795, %794 ], [ %832, %831 ]
  %835 = load ptr, ptr %766, align 8, !tbaa !260
  %836 = add nsw i32 %798, 1
  store i32 %836, ptr %11, align 8, !tbaa !262
  %837 = sext i32 %798 to i64
  %838 = getelementptr inbounds i8, ptr %835, i64 %837
  store i8 %834, ptr %838, align 1, !tbaa !9
  %839 = load i8, ptr %797, align 1, !tbaa !9
  %840 = icmp eq i8 %839, 0
  br i1 %840, label %841, label %794, !llvm.loop !268

841:                                              ; preds = %833
  %842 = load i32, ptr %11, align 8, !tbaa !262
  br label %843

843:                                              ; preds = %841, %790
  %844 = phi i32 [ %842, %841 ], [ %791, %790 ]
  %845 = load i32, ptr %765, align 4, !tbaa !267
  %846 = icmp eq i32 %844, %845
  br i1 %846, label %847, label %850

847:                                              ; preds = %843
  %848 = shl nsw i32 %844, 1
  %849 = call i32 @llvm.smax.i32(i32 %848, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %11, i32 noundef %849)
          to label %850 unwind label %872

850:                                              ; preds = %847, %843
  %851 = load ptr, ptr %766, align 8, !tbaa !260
  %852 = add nsw i32 %844, 1
  store i32 %852, ptr %11, align 8, !tbaa !262
  %853 = sext i32 %844 to i64
  %854 = getelementptr inbounds i8, ptr %851, i64 %853
  store i8 0, ptr %854, align 1, !tbaa !9
  %855 = load ptr, ptr %766, align 8, !tbaa !260
  %856 = load ptr, ptr %87, align 8, !tbaa !280
  %857 = getelementptr inbounds i64, ptr %856, i64 %780
  %858 = load i64, ptr %857, align 8, !tbaa !285
  invoke void @_Z10decompressPKclR7Encoder(ptr noundef %855, i64 noundef %858, ptr noundef nonnull align 8 dereferenceable(40) %9)
          to label %859 unwind label %872

859:                                              ; preds = %850
  %860 = load i32, ptr %11, align 8, !tbaa !262
  %861 = load i32, ptr @programChecker, align 8, !tbaa !13
  %862 = sub i32 %861, %860
  store i32 %862, ptr @programChecker, align 8, !tbaa !13
  %863 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %864 = icmp sgt i32 %862, %863
  br i1 %864, label %865, label %866

865:                                              ; preds = %859
  store i32 %862, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %866

866:                                              ; preds = %859, %865
  %867 = load ptr, ptr %767, align 8, !tbaa !264
  call void @free(ptr noundef %867) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #39
  %868 = add nuw nsw i64 %780, 1
  %869 = icmp eq i64 %868, %768
  br i1 %869, label %769, label %779, !llvm.loop !297

870:                                              ; preds = %779
  %871 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %886

872:                                              ; preds = %850, %847
  %873 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %876

874:                                              ; preds = %818
  %875 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %876

876:                                              ; preds = %874, %872
  %877 = phi { ptr, i32 } [ %873, %872 ], [ %875, %874 ]
  %878 = load i32, ptr %11, align 8, !tbaa !262
  %879 = load i32, ptr @programChecker, align 8, !tbaa !13
  %880 = sub i32 %879, %878
  store i32 %880, ptr @programChecker, align 8, !tbaa !13
  %881 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %882 = icmp sgt i32 %880, %881
  br i1 %882, label %883, label %884

883:                                              ; preds = %876
  store i32 %880, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %884

884:                                              ; preds = %876, %883
  %885 = load ptr, ptr %767, align 8, !tbaa !264
  call void @free(ptr noundef %885) #39
  br label %886

886:                                              ; preds = %884, %870
  %887 = phi { ptr, i32 } [ %877, %884 ], [ %871, %870 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #39
  br label %888

888:                                              ; preds = %759, %761, %886, %692
  %889 = phi { ptr, i32 } [ %887, %886 ], [ %693, %692 ], [ %760, %759 ], [ %762, %761 ]
  %890 = load i32, ptr %10, align 8, !tbaa !262
  %891 = load i32, ptr @programChecker, align 8, !tbaa !13
  %892 = sub i32 %891, %890
  store i32 %892, ptr @programChecker, align 8, !tbaa !13
  %893 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %894 = icmp sgt i32 %892, %893
  br i1 %894, label %895, label %896

895:                                              ; preds = %888
  store i32 %892, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %896

896:                                              ; preds = %888, %895
  %897 = getelementptr inbounds %class.Array.12, ptr %10, i64 0, i32 2
  %898 = load ptr, ptr %897, align 8, !tbaa !264
  call void @free(ptr noundef %898) #39
  br label %899

899:                                              ; preds = %896, %690
  %900 = phi { ptr, i32 } [ %889, %896 ], [ %691, %690 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #39
  br label %939

901:                                              ; preds = %776, %663
  %902 = call i32 @fclose(ptr noundef %548)
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %9) #39
  %903 = load i32, ptr %6, align 8, !tbaa !262
  %904 = load i32, ptr @programChecker, align 8, !tbaa !13
  %905 = sub i32 %904, %903
  store i32 %905, ptr @programChecker, align 8, !tbaa !13
  %906 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %907 = icmp sgt i32 %905, %906
  br i1 %907, label %908, label %909

908:                                              ; preds = %901
  store i32 %905, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %909

909:                                              ; preds = %901, %908
  %910 = getelementptr inbounds %class.Array.12, ptr %6, i64 0, i32 2
  %911 = load ptr, ptr %910, align 8, !tbaa !264
  call void @free(ptr noundef %911) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #39
  %912 = load i32, ptr %5, align 8, !tbaa !262
  %913 = load i32, ptr @programChecker, align 8, !tbaa !13
  %914 = sub i32 %913, %912
  store i32 %914, ptr @programChecker, align 8, !tbaa !13
  %915 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %916 = icmp sgt i32 %914, %915
  br i1 %916, label %917, label %918

917:                                              ; preds = %909
  store i32 %914, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %918

918:                                              ; preds = %909, %917
  %919 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 2
  %920 = load ptr, ptr %919, align 8, !tbaa !264
  call void @free(ptr noundef %920) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #39
  %921 = load i32, ptr %4, align 8, !tbaa !278
  %922 = load i32, ptr @programChecker, align 8, !tbaa !13
  %923 = shl i32 %921, 3
  %924 = sub i32 %922, %923
  store i32 %924, ptr @programChecker, align 8, !tbaa !13
  %925 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %926 = icmp sgt i32 %924, %925
  br i1 %926, label %927, label %928

927:                                              ; preds = %918
  store i32 %924, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %928

928:                                              ; preds = %918, %927
  %929 = load ptr, ptr %81, align 8, !tbaa !279
  call void @free(ptr noundef %929) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #39
  %930 = load i32, ptr %3, align 8, !tbaa !273
  %931 = load i32, ptr @programChecker, align 8, !tbaa !13
  %932 = shl i32 %930, 3
  %933 = sub i32 %931, %932
  store i32 %933, ptr @programChecker, align 8, !tbaa !13
  %934 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %935 = icmp sgt i32 %933, %934
  br i1 %935, label %936, label %937

936:                                              ; preds = %928
  store i32 %933, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %937

937:                                              ; preds = %928, %936
  %938 = load ptr, ptr %68, align 8, !tbaa !274
  call void @free(ptr noundef %938) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #39
  br label %1002

939:                                              ; preds = %899, %661
  %940 = phi { ptr, i32 } [ %662, %661 ], [ %900, %899 ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %9) #39
  br label %941

941:                                              ; preds = %469, %471, %523, %506, %939, %457, %443
  %942 = phi { ptr, i32 } [ %444, %443 ], [ %940, %939 ], [ %458, %457 ], [ %524, %523 ], [ %507, %506 ], [ %470, %469 ], [ %472, %471 ]
  %943 = load i32, ptr %6, align 8, !tbaa !262
  %944 = load i32, ptr @programChecker, align 8, !tbaa !13
  %945 = sub i32 %944, %943
  store i32 %945, ptr @programChecker, align 8, !tbaa !13
  %946 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %947 = icmp sgt i32 %945, %946
  br i1 %947, label %948, label %949

948:                                              ; preds = %941
  store i32 %945, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %949

949:                                              ; preds = %941, %948
  %950 = getelementptr inbounds %class.Array.12, ptr %6, i64 0, i32 2
  %951 = load ptr, ptr %950, align 8, !tbaa !264
  call void @free(ptr noundef %951) #39
  br label %952

952:                                              ; preds = %949, %272
  %953 = phi { ptr, i32 } [ %942, %949 ], [ %273, %272 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #39
  br label %954

954:                                              ; preds = %225, %229, %227, %952
  %955 = phi { ptr, i32 } [ %953, %952 ], [ %226, %225 ], [ %228, %227 ], [ %230, %229 ]
  %956 = load i32, ptr %5, align 8, !tbaa !262
  %957 = load i32, ptr @programChecker, align 8, !tbaa !13
  %958 = sub i32 %957, %956
  store i32 %958, ptr @programChecker, align 8, !tbaa !13
  %959 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %960 = icmp sgt i32 %958, %959
  br i1 %960, label %961, label %962

961:                                              ; preds = %954
  store i32 %958, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %962

962:                                              ; preds = %954, %961
  %963 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 2
  %964 = load ptr, ptr %963, align 8, !tbaa !264
  call void @free(ptr noundef %964) #39
  br label %965

965:                                              ; preds = %962, %150
  %966 = phi { ptr, i32 } [ %955, %962 ], [ %151, %150 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #39
  %967 = load i32, ptr %4, align 8, !tbaa !278
  %968 = load i32, ptr @programChecker, align 8, !tbaa !13
  %969 = shl i32 %967, 3
  %970 = sub i32 %968, %969
  store i32 %970, ptr @programChecker, align 8, !tbaa !13
  %971 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %972 = icmp sgt i32 %970, %971
  br i1 %972, label %973, label %974

973:                                              ; preds = %965
  store i32 %970, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %974

974:                                              ; preds = %965, %973
  %975 = load ptr, ptr %81, align 8, !tbaa !279
  call void @free(ptr noundef %975) #39
  br label %976

976:                                              ; preds = %974, %148
  %977 = phi { ptr, i32 } [ %966, %974 ], [ %149, %148 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #39
  %978 = load i32, ptr %3, align 8, !tbaa !273
  %979 = load i32, ptr @programChecker, align 8, !tbaa !13
  %980 = shl i32 %978, 3
  %981 = sub i32 %979, %980
  store i32 %981, ptr @programChecker, align 8, !tbaa !13
  %982 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %983 = icmp sgt i32 %981, %982
  br i1 %983, label %984, label %985

984:                                              ; preds = %976
  store i32 %981, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %985

985:                                              ; preds = %976, %984
  %986 = load ptr, ptr %68, align 8, !tbaa !274
  call void @free(ptr noundef %986) #39
  br label %987

987:                                              ; preds = %985, %146
  %988 = phi { ptr, i32 } [ %977, %985 ], [ %147, %146 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #39
  br label %989

989:                                              ; preds = %987, %42
  %990 = phi { ptr, i32 } [ %988, %987 ], [ %44, %42 ]
  %991 = phi i8 [ %57, %987 ], [ %43, %42 ]
  %992 = extractvalue { ptr, i32 } %990, 1
  %993 = call i32 @llvm.eh.typeid.for(ptr nonnull @_ZTIPKc) #39
  %994 = icmp eq i32 %992, %993
  br i1 %994, label %995, label %1011

995:                                              ; preds = %989
  %996 = extractvalue { ptr, i32 } %990, 0
  %997 = call ptr @__cxa_begin_catch(ptr %996) #39
  %998 = icmp eq ptr %997, null
  br i1 %998, label %1001, label %999

999:                                              ; preds = %995
  %1000 = call i32 @puts(ptr nonnull dereferenceable(1) %997)
  br label %1001

1001:                                             ; preds = %999, %995
  call void @__cxa_end_catch() #39
  br label %1002

1002:                                             ; preds = %1001, %937
  %1003 = phi i8 [ %991, %1001 ], [ %57, %937 ]
  %1004 = and i8 %1003, 1
  %1005 = icmp eq i8 %1004, 0
  br i1 %1005, label %1010, label %1006

1006:                                             ; preds = %1002
  %1007 = call i32 @puts(ptr nonnull dereferenceable(1) @str.63)
  %1008 = load ptr, ptr @stdin, align 8, !tbaa !5
  %1009 = call i32 @getc(ptr noundef %1008)
  br label %1010

1010:                                             ; preds = %1006, %1002
  ret i32 0

1011:                                             ; preds = %989
  resume { ptr, i32 } %990
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #27

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN5ArrayIPcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.13, ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 4, !tbaa !271
  %5 = icmp slt i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, ptr %0, align 8, !tbaa !273
  br label %45

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.Array.13, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !274
  %10 = getelementptr inbounds %class.Array.13, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !275
  %12 = load i32, ptr %0, align 8, !tbaa !273
  store i32 %1, ptr %3, align 4, !tbaa !271
  store i32 %1, ptr %0, align 8, !tbaa !273
  %13 = icmp slt i32 %1, 1
  br i1 %13, label %14, label %15

14:                                               ; preds = %7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %8, i8 0, i64 16, i1 false)
  br label %29

15:                                               ; preds = %7
  %16 = shl i32 %1, 3
  %17 = load i32, ptr @programChecker, align 8, !tbaa !13
  %18 = add nsw i32 %17, %16
  store i32 %18, ptr @programChecker, align 8, !tbaa !13
  %19 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %20 = icmp sgt i32 %18, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  store i32 %18, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %22

22:                                               ; preds = %21, %15
  %23 = sext i32 %16 to i64
  %24 = tail call noalias ptr @calloc(i64 noundef %23, i64 noundef 1) #41
  store ptr %24, ptr %8, align 8, !tbaa !274
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %27, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %27, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

28:                                               ; preds = %22
  store ptr %24, ptr %10, align 8, !tbaa !275
  br label %29

29:                                               ; preds = %14, %28
  %30 = phi ptr [ null, %14 ], [ %24, %28 ]
  %31 = icmp eq ptr %9, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %29
  %33 = icmp eq ptr %11, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %32
  %35 = tail call i32 @llvm.smin.i32(i32 %1, i32 %12)
  %36 = sext i32 %35 to i64
  %37 = shl nsw i64 %36, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %30, ptr nonnull align 8 %11, i64 %37, i1 false)
  %38 = load i32, ptr @programChecker, align 8, !tbaa !13
  %39 = shl i32 %1, 3
  %40 = sub i32 %38, %39
  store i32 %40, ptr @programChecker, align 8, !tbaa !13
  %41 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %42 = icmp sgt i32 %40, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %34
  store i32 %40, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %44

44:                                               ; preds = %43, %34, %32
  tail call void @free(ptr noundef nonnull %9) #39
  br label %45

45:                                               ; preds = %29, %44, %6
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN5ArrayIlLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.14, ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 4, !tbaa !276
  %5 = icmp slt i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, ptr %0, align 8, !tbaa !278
  br label %45

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.Array.14, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !279
  %10 = getelementptr inbounds %class.Array.14, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !280
  %12 = load i32, ptr %0, align 8, !tbaa !278
  store i32 %1, ptr %3, align 4, !tbaa !276
  store i32 %1, ptr %0, align 8, !tbaa !278
  %13 = icmp slt i32 %1, 1
  br i1 %13, label %14, label %15

14:                                               ; preds = %7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %8, i8 0, i64 16, i1 false)
  br label %29

15:                                               ; preds = %7
  %16 = shl i32 %1, 3
  %17 = load i32, ptr @programChecker, align 8, !tbaa !13
  %18 = add nsw i32 %17, %16
  store i32 %18, ptr @programChecker, align 8, !tbaa !13
  %19 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %20 = icmp sgt i32 %18, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  store i32 %18, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %22

22:                                               ; preds = %21, %15
  %23 = sext i32 %16 to i64
  %24 = tail call noalias ptr @calloc(i64 noundef %23, i64 noundef 1) #41
  store ptr %24, ptr %8, align 8, !tbaa !279
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %27, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %27, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

28:                                               ; preds = %22
  store ptr %24, ptr %10, align 8, !tbaa !280
  br label %29

29:                                               ; preds = %14, %28
  %30 = phi ptr [ null, %14 ], [ %24, %28 ]
  %31 = icmp eq ptr %9, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %29
  %33 = icmp eq ptr %11, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %32
  %35 = tail call i32 @llvm.smin.i32(i32 %1, i32 %12)
  %36 = sext i32 %35 to i64
  %37 = shl nsw i64 %36, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %30, ptr nonnull align 8 %11, i64 %37, i1 false)
  %38 = load i32, ptr @programChecker, align 8, !tbaa !13
  %39 = shl i32 %1, 3
  %40 = sub i32 %38, %39
  store i32 %40, ptr @programChecker, align 8, !tbaa !13
  %41 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %42 = icmp sgt i32 %40, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %34
  store i32 %40, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %44

44:                                               ; preds = %43, %34, %32
  tail call void @free(ptr noundef nonnull %9) #39
  br label %45

45:                                               ; preds = %29, %44, %6
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #27

; Function Attrs: nofree nosync nounwind memory(none)
declare i32 @llvm.eh.typeid.for(ptr) #28

declare ptr @__cxa_begin_catch(ptr) local_unnamed_addr

declare void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: norecurse uwtable
define dso_local noundef i32 @main(i32 noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #29 personality ptr @__gxx_personality_v0 {
  %3 = alloca i32, align 4
  %4 = alloca [3 x ptr], align 16
  %5 = alloca %class.String, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #39
  store i32 1, ptr %3, align 4, !tbaa !25
  %6 = tail call i32 @fork() #39
  switch i32 %6, label %10 [
    i32 0, label %7
    i32 -1, label %9
  ]

7:                                                ; preds = %2
  %8 = tail call noundef i32 @_Z7paqmainiPPc(i32 noundef %0, ptr noundef %1)
  tail call void @exit(i32 noundef 0) #46
  unreachable

9:                                                ; preds = %2
  tail call void @perror(ptr noundef nonnull @.str.57) #45
  tail call void @exit(i32 noundef 1) #46
  unreachable

10:                                               ; preds = %2
  %11 = call i32 @wait(ptr noundef nonnull %3)
  %12 = load i32, ptr %3, align 4, !tbaa !25
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %136

14:                                               ; preds = %10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #39
  %15 = load ptr, ptr %1, align 8, !tbaa !5
  store ptr %15, ptr %4, align 16, !tbaa !5
  %16 = call noalias dereferenceable_or_null(3) ptr @strdup(ptr noundef nonnull @.str.58) #39
  %17 = getelementptr inbounds [3 x ptr], ptr %4, i64 0, i64 1
  store ptr %16, ptr %17, align 8, !tbaa !5
  br label %18

18:                                               ; preds = %25, %14
  %19 = phi ptr [ %1, %14 ], [ %21, %25 ]
  %20 = phi i32 [ %0, %14 ], [ %22, %25 ]
  %21 = getelementptr inbounds ptr, ptr %19, i64 1
  %22 = add nsw i32 %20, -1
  %23 = icmp eq i32 %22, 0
  %24 = load ptr, ptr %21, align 8, !tbaa !5
  br i1 %23, label %28, label %25

25:                                               ; preds = %18
  %26 = load i8, ptr %24, align 1, !tbaa !9
  %27 = icmp eq i8 %26, 45
  br i1 %27, label %18, label %28, !llvm.loop !298

28:                                               ; preds = %25, %18
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #39
  call void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %24)
  %29 = load i32, ptr %5, align 8, !tbaa !262
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = add nsw i32 %29, -1
  store i32 %32, ptr %5, align 8, !tbaa !262
  br label %33

33:                                               ; preds = %31, %28
  %34 = phi i32 [ %32, %31 ], [ %29, %28 ]
  %35 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 1
  %36 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 3
  %37 = load i32, ptr %35, align 4, !tbaa !267
  %38 = icmp eq i32 %34, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = shl nsw i32 %34, 1
  %41 = call i32 @llvm.smax.i32(i32 %40, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %41)
          to label %42 unwind label %110

42:                                               ; preds = %39, %33
  %43 = load ptr, ptr %36, align 8, !tbaa !260
  %44 = add nsw i32 %34, 1
  store i32 %44, ptr %5, align 8, !tbaa !262
  %45 = sext i32 %34 to i64
  %46 = getelementptr inbounds i8, ptr %43, i64 %45
  store i8 46, ptr %46, align 1, !tbaa !9
  %47 = load i32, ptr %5, align 8, !tbaa !262
  %48 = load i32, ptr %35, align 4, !tbaa !267
  %49 = icmp eq i32 %47, %48
  br i1 %49, label %50, label %53

50:                                               ; preds = %42
  %51 = shl nsw i32 %47, 1
  %52 = call i32 @llvm.smax.i32(i32 %51, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %52)
          to label %53 unwind label %112

53:                                               ; preds = %42, %50
  %54 = load ptr, ptr %36, align 8, !tbaa !260
  %55 = add nsw i32 %47, 1
  store i32 %55, ptr %5, align 8, !tbaa !262
  %56 = sext i32 %47 to i64
  %57 = getelementptr inbounds i8, ptr %54, i64 %56
  store i8 0, ptr %57, align 1, !tbaa !9
  %58 = call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %15, i32 noundef 47) #44
  %59 = icmp eq ptr %58, null
  %60 = getelementptr inbounds i8, ptr %58, i64 1
  %61 = select i1 %59, ptr %15, ptr %60
  %62 = load i32, ptr %5, align 8, !tbaa !262
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %53
  %65 = add nsw i32 %62, -1
  store i32 %65, ptr %5, align 8, !tbaa !262
  br label %66

66:                                               ; preds = %64, %53
  %67 = phi i32 [ %62, %53 ], [ %65, %64 ]
  %68 = load i8, ptr %61, align 1, !tbaa !9
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %92, label %70

70:                                               ; preds = %66, %82
  %71 = phi i8 [ %88, %82 ], [ %68, %66 ]
  %72 = phi ptr [ %73, %82 ], [ %61, %66 ]
  %73 = getelementptr inbounds i8, ptr %72, i64 1
  %74 = load i32, ptr %5, align 8, !tbaa !262
  %75 = load i32, ptr %35, align 4, !tbaa !267
  %76 = icmp eq i32 %74, %75
  br i1 %76, label %77, label %82

77:                                               ; preds = %70
  %78 = shl nsw i32 %74, 1
  %79 = call i32 @llvm.smax.i32(i32 %78, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %79)
          to label %80 unwind label %108

80:                                               ; preds = %77
  store i32 %74, ptr %5, align 8, !tbaa !262
  %81 = load i8, ptr %72, align 1, !tbaa !9
  br label %82

82:                                               ; preds = %80, %70
  %83 = phi i8 [ %71, %70 ], [ %81, %80 ]
  %84 = load ptr, ptr %36, align 8, !tbaa !260
  %85 = add nsw i32 %74, 1
  store i32 %85, ptr %5, align 8, !tbaa !262
  %86 = sext i32 %74 to i64
  %87 = getelementptr inbounds i8, ptr %84, i64 %86
  store i8 %83, ptr %87, align 1, !tbaa !9
  %88 = load i8, ptr %73, align 1, !tbaa !9
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %70, !llvm.loop !268

90:                                               ; preds = %82
  %91 = load i32, ptr %5, align 8, !tbaa !262
  br label %92

92:                                               ; preds = %90, %66
  %93 = phi i32 [ %91, %90 ], [ %67, %66 ]
  %94 = load i32, ptr %35, align 4, !tbaa !267
  %95 = icmp eq i32 %93, %94
  br i1 %95, label %96, label %99

96:                                               ; preds = %92
  %97 = shl nsw i32 %93, 1
  %98 = call i32 @llvm.smax.i32(i32 %97, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %98)
          to label %99 unwind label %112

99:                                               ; preds = %96, %92
  %100 = load ptr, ptr %36, align 8, !tbaa !260
  %101 = add nsw i32 %93, 1
  store i32 %101, ptr %5, align 8, !tbaa !262
  %102 = sext i32 %93 to i64
  %103 = getelementptr inbounds i8, ptr %100, i64 %102
  store i8 0, ptr %103, align 1, !tbaa !9
  %104 = load ptr, ptr %36, align 8, !tbaa !260
  %105 = call noalias ptr @strdup(ptr noundef %104) #39
  %106 = getelementptr inbounds [3 x ptr], ptr %4, i64 0, i64 2
  store ptr %105, ptr %106, align 16, !tbaa !5
  %107 = invoke noundef i32 @_Z7paqmainiPPc(i32 noundef 3, ptr noundef nonnull %4)
          to label %125 unwind label %112

108:                                              ; preds = %77
  %109 = landingpad { ptr, i32 }
          cleanup
  br label %114

110:                                              ; preds = %39
  %111 = landingpad { ptr, i32 }
          cleanup
  br label %114

112:                                              ; preds = %96, %50, %99
  %113 = landingpad { ptr, i32 }
          cleanup
  br label %114

114:                                              ; preds = %110, %112, %108
  %115 = phi { ptr, i32 } [ %109, %108 ], [ %111, %110 ], [ %113, %112 ]
  %116 = load i32, ptr %5, align 8, !tbaa !262
  %117 = load i32, ptr @programChecker, align 8, !tbaa !13
  %118 = sub i32 %117, %116
  store i32 %118, ptr @programChecker, align 8, !tbaa !13
  %119 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %120 = icmp sgt i32 %118, %119
  br i1 %120, label %121, label %122

121:                                              ; preds = %114
  store i32 %118, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %122

122:                                              ; preds = %114, %121
  %123 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 2
  %124 = load ptr, ptr %123, align 8, !tbaa !264
  call void @free(ptr noundef %124) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #39
  resume { ptr, i32 } %115

125:                                              ; preds = %99
  call void @free(ptr noundef %16) #39
  %126 = call i32 @unlink(ptr noundef %105) #39
  call void @free(ptr noundef %105) #39
  %127 = load i32, ptr %5, align 8, !tbaa !262
  %128 = load i32, ptr @programChecker, align 8, !tbaa !13
  %129 = sub i32 %128, %127
  store i32 %129, ptr @programChecker, align 8, !tbaa !13
  %130 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %131 = icmp sgt i32 %129, %130
  br i1 %131, label %132, label %133

132:                                              ; preds = %125
  store i32 %129, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %133

133:                                              ; preds = %125, %132
  %134 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 2
  %135 = load ptr, ptr %134, align 8, !tbaa !264
  call void @free(ptr noundef %135) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #39
  br label %136

136:                                              ; preds = %10, %133
  %137 = phi i32 [ 0, %133 ], [ %12, %10 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #39
  ret i32 %137
}

; Function Attrs: nofree nounwind
declare i32 @fork() local_unnamed_addr #18

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) local_unnamed_addr #30

declare i32 @wait(ptr noundef) local_unnamed_addr #31

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite)
declare noalias ptr @strdup(ptr nocapture noundef readonly) local_unnamed_addr #32

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #33

; Function Attrs: nofree nounwind
declare noundef i32 @unlink(ptr nocapture noundef readonly) local_unnamed_addr #18

; Function Attrs: nounwind
declare i64 @clock() local_unnamed_addr #34

; Function Attrs: mustprogress nofree nounwind willreturn
declare i64 @strtol(ptr noundef readonly, ptr nocapture noundef, i32 noundef) local_unnamed_addr #35

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef ptr @_ZN2BHILi4EEixEj(ptr noundef nonnull align 8 dereferenceable(28) %0, i32 noundef %1) local_unnamed_addr #17 comdat align 2 {
  %3 = lshr i32 %1, 16
  %4 = and i32 %1, 65535
  %5 = xor i32 %3, %4
  %6 = shl i32 %1, 3
  %7 = getelementptr inbounds %class.BH.10, ptr %0, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !229
  %9 = and i32 %8, %6
  %10 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !154
  %12 = shl i32 %9, 2
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, ptr %11, i64 %13
  %15 = getelementptr inbounds i8, ptr %14, i64 2
  %16 = load i8, ptr %15, align 1, !tbaa !9
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %110, label %18

18:                                               ; preds = %2
  %19 = load i16, ptr %14, align 2, !tbaa !31
  %20 = zext i16 %19 to i32
  %21 = icmp eq i32 %5, %20
  br i1 %21, label %112, label %22

22:                                               ; preds = %18
  %23 = shl i32 %9, 2
  %24 = or i32 %23, 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, ptr %11, i64 %25
  %27 = getelementptr inbounds i8, ptr %26, i64 2
  %28 = load i8, ptr %27, align 1, !tbaa !9
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %106, label %30

30:                                               ; preds = %22
  %31 = load i16, ptr %26, align 2, !tbaa !31
  %32 = zext i16 %31 to i32
  %33 = icmp eq i32 %5, %32
  br i1 %33, label %126, label %34

34:                                               ; preds = %30
  %35 = shl i32 %9, 2
  %36 = or i32 %35, 8
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, ptr %11, i64 %37
  %39 = getelementptr inbounds i8, ptr %38, i64 2
  %40 = load i8, ptr %39, align 1, !tbaa !9
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %106, label %42

42:                                               ; preds = %34
  %43 = load i16, ptr %38, align 2, !tbaa !31
  %44 = zext i16 %43 to i32
  %45 = icmp eq i32 %5, %44
  br i1 %45, label %126, label %46

46:                                               ; preds = %42
  %47 = shl i32 %9, 2
  %48 = or i32 %47, 12
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, ptr %11, i64 %49
  %51 = getelementptr inbounds i8, ptr %50, i64 2
  %52 = load i8, ptr %51, align 1, !tbaa !9
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %106, label %54

54:                                               ; preds = %46
  %55 = load i16, ptr %50, align 2, !tbaa !31
  %56 = zext i16 %55 to i32
  %57 = icmp eq i32 %5, %56
  br i1 %57, label %126, label %58

58:                                               ; preds = %54
  %59 = shl i32 %9, 2
  %60 = or i32 %59, 16
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i8, ptr %11, i64 %61
  %63 = getelementptr inbounds i8, ptr %62, i64 2
  %64 = load i8, ptr %63, align 1, !tbaa !9
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %106, label %66

66:                                               ; preds = %58
  %67 = load i16, ptr %62, align 2, !tbaa !31
  %68 = zext i16 %67 to i32
  %69 = icmp eq i32 %5, %68
  br i1 %69, label %126, label %70

70:                                               ; preds = %66
  %71 = shl i32 %9, 2
  %72 = or i32 %71, 20
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, ptr %11, i64 %73
  %75 = getelementptr inbounds i8, ptr %74, i64 2
  %76 = load i8, ptr %75, align 1, !tbaa !9
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %106, label %78

78:                                               ; preds = %70
  %79 = load i16, ptr %74, align 2, !tbaa !31
  %80 = zext i16 %79 to i32
  %81 = icmp eq i32 %5, %80
  br i1 %81, label %126, label %82

82:                                               ; preds = %78
  %83 = shl i32 %9, 2
  %84 = or i32 %83, 24
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, ptr %11, i64 %85
  %87 = getelementptr inbounds i8, ptr %86, i64 2
  %88 = load i8, ptr %87, align 1, !tbaa !9
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %106, label %90

90:                                               ; preds = %82
  %91 = load i16, ptr %86, align 2, !tbaa !31
  %92 = zext i16 %91 to i32
  %93 = icmp eq i32 %5, %92
  br i1 %93, label %126, label %94

94:                                               ; preds = %90
  %95 = shl i32 %9, 2
  %96 = or i32 %95, 28
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, ptr %11, i64 %97
  %99 = getelementptr inbounds i8, ptr %98, i64 2
  %100 = load i8, ptr %99, align 1, !tbaa !9
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %94
  %103 = load i16, ptr %98, align 2, !tbaa !31
  %104 = zext i16 %103 to i32
  %105 = icmp eq i32 %5, %104
  br i1 %105, label %126, label %114

106:                                              ; preds = %22, %34, %46, %58, %70, %82, %94
  %107 = phi i64 [ 28, %94 ], [ 24, %82 ], [ 20, %70 ], [ 16, %58 ], [ 12, %46 ], [ 8, %34 ], [ 4, %22 ]
  %108 = phi ptr [ %98, %94 ], [ %86, %82 ], [ %74, %70 ], [ %62, %58 ], [ %50, %46 ], [ %38, %34 ], [ %26, %22 ]
  %109 = trunc i32 %5 to i16
  store i16 %109, ptr %108, align 2, !tbaa !31
  br label %126

110:                                              ; preds = %2
  %111 = trunc i32 %5 to i16
  store i16 %111, ptr %14, align 2, !tbaa !31
  br label %112

112:                                              ; preds = %18, %110
  %113 = getelementptr inbounds i8, ptr %14, i64 1
  br label %143

114:                                              ; preds = %102
  store i32 0, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  %115 = trunc i32 %5 to i16
  store i16 %115, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1, !tbaa !31
  %116 = or i32 %12, 30
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, ptr %11, i64 %117
  %119 = load i8, ptr %118, align 1, !tbaa !9
  %120 = or i32 %12, 26
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8, ptr %11, i64 %121
  %123 = load i8, ptr %122, align 1, !tbaa !9
  %124 = icmp ugt i8 %119, %123
  %125 = select i1 %124, i64 24, i64 28
  br label %130

126:                                              ; preds = %102, %90, %78, %66, %54, %42, %30, %106
  %127 = phi i64 [ %107, %106 ], [ 28, %102 ], [ 24, %90 ], [ 20, %78 ], [ 16, %66 ], [ 12, %54 ], [ 8, %42 ], [ 4, %30 ]
  %128 = phi ptr [ %108, %106 ], [ %98, %102 ], [ %86, %90 ], [ %74, %78 ], [ %62, %66 ], [ %50, %54 ], [ %38, %42 ], [ %26, %30 ]
  %129 = load i32, ptr %128, align 2
  store i32 %129, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  br label %130

130:                                              ; preds = %114, %126
  %131 = phi i64 [ %127, %126 ], [ %125, %114 ]
  %132 = or i32 %12, 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i8, ptr %11, i64 %133
  %135 = and i64 %131, 4294967295
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %134, ptr nonnull align 1 %14, i64 %135, i1 false)
  %136 = load ptr, ptr %10, align 8, !tbaa !154
  %137 = getelementptr inbounds i8, ptr %136, i64 %13
  %138 = load i32, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  store i32 %138, ptr %137, align 1
  %139 = or i32 %12, 1
  %140 = load ptr, ptr %10, align 8, !tbaa !154
  %141 = sext i32 %139 to i64
  %142 = getelementptr inbounds i8, ptr %140, i64 %141
  br label %143

143:                                              ; preds = %130, %112
  %144 = phi ptr [ %113, %112 ], [ %142, %130 ]
  ret ptr %144
}

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @calloc(i64 noundef, i64 noundef) local_unnamed_addr #36

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #26

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %1) local_unnamed_addr #14 comdat align 2 {
  %3 = load i32, ptr %0, align 8, !tbaa !230
  %4 = icmp slt i32 %3, 2048
  %5 = zext i1 %4 to i32
  %6 = add nsw i32 %3, %5
  %7 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 3
  %8 = load i32, ptr %7, align 8, !tbaa !236
  %9 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 4
  %10 = load i32, ptr %9, align 4, !tbaa !237
  %11 = sub i32 %10, %8
  %12 = lshr i32 %11, 12
  %13 = mul i32 %12, %6
  %14 = add i32 %13, %8
  %15 = and i32 %11, 4095
  %16 = mul i32 %15, %6
  %17 = lshr i32 %16, 12
  %18 = add i32 %14, %17
  %19 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 1
  %20 = load i32, ptr %19, align 4, !tbaa !232
  %21 = icmp eq i32 %20, 1
  %22 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 5
  %23 = load i32, ptr %22, align 8
  %24 = icmp ule i32 %23, %18
  %25 = zext i1 %24 to i32
  %26 = select i1 %21, i32 %25, i32 %1
  store i32 %26, ptr @y, align 4, !tbaa !25
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %2
  store i32 %18, ptr %9, align 4, !tbaa !237
  br label %31

29:                                               ; preds = %2
  %30 = add i32 %18, 1
  store i32 %30, ptr %7, align 8, !tbaa !236
  br label %31

31:                                               ; preds = %29, %28
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %0)
  %32 = load i32, ptr %7, align 8, !tbaa !236
  %33 = load i32, ptr %9, align 4, !tbaa !237
  %34 = xor i32 %33, %32
  %35 = icmp ult i32 %34, 16777216
  br i1 %35, label %36, label %72

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 2
  br label %38

38:                                               ; preds = %36, %67
  %39 = phi i32 [ %32, %36 ], [ %69, %67 ]
  %40 = phi i32 [ %33, %36 ], [ %68, %67 ]
  %41 = load i32, ptr %19, align 4, !tbaa !232
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %38
  %44 = lshr i32 %40, 24
  %45 = load ptr, ptr %37, align 8, !tbaa !235
  %46 = tail call i32 @putc(i32 noundef %44, ptr noundef %45)
  %47 = load i32, ptr %7, align 8, !tbaa !236
  %48 = load i32, ptr %9, align 4, !tbaa !237
  %49 = load i32, ptr %19, align 4, !tbaa !232
  br label %50

50:                                               ; preds = %43, %38
  %51 = phi i32 [ %49, %43 ], [ %41, %38 ]
  %52 = phi i32 [ %48, %43 ], [ %40, %38 ]
  %53 = phi i32 [ %47, %43 ], [ %39, %38 ]
  %54 = shl i32 %53, 8
  store i32 %54, ptr %7, align 8, !tbaa !236
  %55 = shl i32 %52, 8
  %56 = or i32 %55, 255
  store i32 %56, ptr %9, align 4, !tbaa !237
  %57 = icmp eq i32 %51, 1
  br i1 %57, label %58, label %67

58:                                               ; preds = %50
  %59 = load i32, ptr %22, align 8, !tbaa !238
  %60 = shl i32 %59, 8
  %61 = load ptr, ptr %37, align 8, !tbaa !235
  %62 = tail call i32 @getc(ptr noundef %61)
  %63 = and i32 %62, 255
  %64 = or i32 %63, %60
  store i32 %64, ptr %22, align 8, !tbaa !238
  %65 = load i32, ptr %7, align 8, !tbaa !236
  %66 = load i32, ptr %9, align 4, !tbaa !237
  br label %67

67:                                               ; preds = %58, %50
  %68 = phi i32 [ %66, %58 ], [ %56, %50 ]
  %69 = phi i32 [ %65, %58 ], [ %54, %50 ]
  %70 = xor i32 %68, %69
  %71 = icmp ult i32 %70, 16777216
  br i1 %71, label %38, label %72, !llvm.loop !255

72:                                               ; preds = %67, %31
  %73 = load i32, ptr @y, align 4, !tbaa !25
  ret i32 %73
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare noundef ptr @strrchr(ptr noundef, i32 noundef) local_unnamed_addr #27

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN5ArrayIhLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 4, !tbaa !18
  %5 = icmp slt i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, ptr %0, align 8, !tbaa !20
  br label %42

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !21
  %10 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !22
  %12 = load i32, ptr %0, align 8, !tbaa !20
  store i32 %1, ptr %3, align 4, !tbaa !18
  store i32 %1, ptr %0, align 8, !tbaa !20
  %13 = icmp slt i32 %1, 1
  br i1 %13, label %14, label %15

14:                                               ; preds = %7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %8, i8 0, i64 16, i1 false)
  br label %28

15:                                               ; preds = %7
  %16 = zext i32 %1 to i64
  %17 = load i32, ptr @programChecker, align 8, !tbaa !13
  %18 = add nsw i32 %17, %1
  store i32 %18, ptr @programChecker, align 8, !tbaa !13
  %19 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %20 = icmp sgt i32 %18, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  store i32 %18, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %22

22:                                               ; preds = %21, %15
  %23 = tail call noalias ptr @calloc(i64 noundef %16, i64 noundef 1) #41
  store ptr %23, ptr %8, align 8, !tbaa !21
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %26, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %26, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

27:                                               ; preds = %22
  store ptr %23, ptr %10, align 8, !tbaa !22
  br label %28

28:                                               ; preds = %14, %27
  %29 = phi ptr [ null, %14 ], [ %23, %27 ]
  %30 = icmp eq ptr %9, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %28
  %32 = icmp eq ptr %11, null
  br i1 %32, label %41, label %33

33:                                               ; preds = %31
  %34 = tail call i32 @llvm.smin.i32(i32 %1, i32 %12)
  %35 = sext i32 %34 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %29, ptr nonnull align 1 %11, i64 %35, i1 false)
  %36 = load i32, ptr @programChecker, align 8, !tbaa !13
  %37 = sub i32 %36, %1
  store i32 %37, ptr @programChecker, align 8, !tbaa !13
  %38 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %39 = icmp sgt i32 %37, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %33
  store i32 %37, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %41

41:                                               ; preds = %40, %33, %31
  tail call void @free(ptr noundef nonnull %9) #39
  br label %42

42:                                               ; preds = %28, %41, %6
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite)
declare ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #37

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_paq8p.cpp() #5 section ".text.startup" personality ptr @__gxx_personality_v0 {
  store i32 0, ptr @programChecker, align 8, !tbaa !13
  store i32 0, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %1 = tail call i64 @clock() #39
  store i64 %1, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 2), align 8, !tbaa !299
  store i32 64, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 0, i32 1), align 4, !tbaa !83
  store i32 64, ptr @rnd, align 8, !tbaa !10
  %2 = load i32, ptr @programChecker, align 8, !tbaa !13
  %3 = add nsw i32 %2, 256
  store i32 %3, ptr @programChecker, align 8, !tbaa !13
  %4 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %5 = icmp sgt i32 %3, %4
  br i1 %5, label %6, label %7

6:                                                ; preds = %0
  store i32 %3, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %7

7:                                                ; preds = %6, %0
  %8 = tail call noalias dereferenceable_or_null(256) ptr @calloc(i64 noundef 256, i64 noundef 1) #41
  store ptr %8, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 0, i32 2), align 8, !tbaa !17
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %11, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %11, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

12:                                               ; preds = %7
  store ptr %8, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 0, i32 3), align 8, !tbaa !84
  store i32 123456789, ptr %8, align 4, !tbaa !25
  %13 = getelementptr inbounds i32, ptr %8, i64 1
  store i32 987654321, ptr %13, align 4, !tbaa !25
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i32 [ 987654321, %12 ], [ %32, %14 ]
  %16 = phi i64 [ 0, %12 ], [ %26, %14 ]
  %17 = or i64 %16, 1
  %18 = mul i32 %15, 11
  %19 = getelementptr inbounds i32, ptr %8, i64 %16
  %20 = load i32, ptr %19, align 4, !tbaa !25
  %21 = mul i32 %20, 23
  %22 = lshr i32 %21, 4
  %23 = add i32 %22, %18
  %24 = add nuw nsw i64 %16, 2
  %25 = getelementptr inbounds i32, ptr %8, i64 %24
  store i32 %23, ptr %25, align 4, !tbaa !25
  %26 = add nuw nsw i64 %16, 2
  %27 = mul i32 %23, 11
  %28 = getelementptr inbounds i32, ptr %8, i64 %17
  %29 = load i32, ptr %28, align 4, !tbaa !25
  %30 = mul i32 %29, 23
  %31 = lshr i32 %30, 4
  %32 = add i32 %31, %27
  %33 = add nuw i64 %16, 3
  %34 = getelementptr inbounds i32, ptr %8, i64 %33
  store i32 %32, ptr %34, align 4, !tbaa !25
  %35 = icmp eq i64 %26, 62
  br i1 %35, label %36, label %14, !llvm.loop !300

36:                                               ; preds = %14
  store i32 0, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 1), align 8, !tbaa !105
  %37 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN6RandomD2Ev, ptr nonnull @rnd, ptr nonnull @__dso_handle) #39
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @buf, i8 0, i64 24, i1 false)
  %38 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN3BufD2Ev, ptr nonnull @buf, ptr nonnull @__dso_handle) #39
  store i32 65536, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 1), align 4, !tbaa !18
  store i32 65536, ptr @ilog, align 8, !tbaa !20
  %39 = load i32, ptr @programChecker, align 8, !tbaa !13
  %40 = add nsw i32 %39, 65536
  store i32 %40, ptr @programChecker, align 8, !tbaa !13
  %41 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %42 = icmp sgt i32 %40, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %36
  store i32 %40, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %44

44:                                               ; preds = %43, %36
  %45 = tail call noalias dereferenceable_or_null(65536) ptr @calloc(i64 noundef 65536, i64 noundef 1) #41
  store ptr %45, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 2), align 8, !tbaa !21
  %46 = icmp eq ptr %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %44
  %48 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %48, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %48, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

49:                                               ; preds = %44
  store ptr %45, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  br label %50

50:                                               ; preds = %50, %49
  %51 = phi i64 [ 2, %49 ], [ %72, %50 ]
  %52 = phi i32 [ 14155776, %49 ], [ %67, %50 ]
  %53 = trunc i64 %51 to i32
  %54 = shl i32 %53, 1
  %55 = add nsw i32 %54, -1
  %56 = udiv i32 774541002, %55
  %57 = add i32 %56, %52
  %58 = lshr i32 %57, 24
  %59 = trunc i32 %58 to i8
  %60 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %61 = getelementptr inbounds i8, ptr %60, i64 %51
  store i8 %59, ptr %61, align 1, !tbaa !9
  %62 = or i64 %51, 1
  %63 = trunc i64 %62 to i32
  %64 = shl i32 %63, 1
  %65 = add nsw i32 %64, -1
  %66 = udiv i32 774541002, %65
  %67 = add i32 %66, %57
  %68 = lshr i32 %67, 24
  %69 = trunc i32 %68 to i8
  %70 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %71 = getelementptr inbounds i8, ptr %70, i64 %62
  store i8 %69, ptr %71, align 1, !tbaa !9
  %72 = add nuw nsw i64 %51, 2
  %73 = icmp eq i64 %72, 65536
  br i1 %73, label %74, label %50, !llvm.loop !23

74:                                               ; preds = %50
  %75 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4IlogD2Ev, ptr nonnull @ilog, ptr nonnull @__dso_handle) #39
  tail call void @_ZN7StretchC2Ev(ptr noundef nonnull align 8 dereferenceable(24) @stretch)
  %76 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN7StretchD2Ev, ptr nonnull @stretch, ptr nonnull @__dso_handle) #39
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #38

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #38

; Function Attrs: nofree nounwind
declare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.umax.i32(i32, i32) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.abs.i16(i16, i1 immarg) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x i32> @llvm.smax.v8i32(<8 x i32>, <8 x i32>) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x i32> @llvm.smin.v8i32(<8 x i32>, <8 x i32>) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.vector.reduce.add.v2i64(<2 x i64>) #38

attributes #0 = { mustprogress noreturn uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { inlinehint nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nofree nounwind }
attributes #5 = { uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress nofree nosync nounwind memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { mustprogress nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { inlinehint mustprogress nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress nounwind willreturn uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { mustprogress nofree nounwind willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { inlinehint mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { nofree nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { mustprogress nofree nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #22 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #23 = { mustprogress nofree nounwind willreturn memory(write) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { nofree nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #26 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #27 = { mustprogress nofree nounwind willreturn memory(argmem: read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #28 = { nofree nosync nounwind memory(none) }
attributes #29 = { norecurse uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #30 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #31 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #32 = { mustprogress nofree nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #33 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #34 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #35 = { mustprogress nofree nounwind willreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #36 = { mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #37 = { mustprogress nofree nounwind willreturn memory(argmem: readwrite) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #38 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #39 = { nounwind }
attributes #40 = { noreturn }
attributes #41 = { nounwind allocsize(0,1) }
attributes #42 = { builtin nounwind }
attributes #43 = { builtin allocsize(0) }
attributes #44 = { nounwind willreturn memory(read) }
attributes #45 = { cold }
attributes #46 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!7, !7, i64 0}
!10 = !{!11, !12, i64 0}
!11 = !{!"_ZTS5ArrayIjLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!12 = !{!"int", !7, i64 0}
!13 = !{!14, !12, i64 0}
!14 = !{!"_ZTS14ProgramChecker", !12, i64 0, !12, i64 4, !15, i64 8}
!15 = !{!"long", !7, i64 0}
!16 = !{!14, !12, i64 4}
!17 = !{!11, !6, i64 8}
!18 = !{!19, !12, i64 4}
!19 = !{!"_ZTS5ArrayIhLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!20 = !{!19, !12, i64 0}
!21 = !{!19, !6, i64 8}
!22 = !{!19, !6, i64 16}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.mustprogress"}
!25 = !{!12, !12, i64 0}
!26 = !{!27, !12, i64 0}
!27 = !{!"_ZTS5ArrayIsLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!28 = !{!27, !6, i64 8}
!29 = !{!27, !12, i64 4}
!30 = !{!27, !6, i64 16}
!31 = !{!32, !32, i64 0}
!32 = !{!"short", !7, i64 0}
!33 = distinct !{!33, !24, !34, !35}
!34 = !{!"llvm.loop.isvectorized", i32 1}
!35 = !{!"llvm.loop.unroll.runtime.disable"}
!36 = distinct !{!36, !24}
!37 = distinct !{!37, !24, !35, !34}
!38 = distinct !{!38, !24, !34, !35}
!39 = distinct !{!39, !24, !35, !34}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !24, !34, !35}
!46 = distinct !{!46, !24, !34}
!47 = !{!48, !6, i64 128}
!48 = !{!"_ZTS5Mixer", !12, i64 0, !12, i64 4, !12, i64 8, !49, i64 16, !49, i64 40, !50, i64 64, !12, i64 88, !12, i64 92, !12, i64 96, !50, i64 104, !6, i64 128}
!49 = !{!"_ZTS5ArrayIsLi16EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!50 = !{!"_ZTS5ArrayIiLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!51 = !{!50, !12, i64 0}
!52 = !{!50, !6, i64 8}
!53 = !{!49, !12, i64 0}
!54 = !{!49, !6, i64 8}
!55 = !{!48, !12, i64 0}
!56 = !{!48, !12, i64 4}
!57 = !{!48, !12, i64 8}
!58 = !{!49, !12, i64 4}
!59 = !{!49, !6, i64 16}
!60 = !{!50, !12, i64 4}
!61 = !{!50, !6, i64 16}
!62 = !{!48, !12, i64 88}
!63 = !{!48, !12, i64 92}
!64 = !{!48, !12, i64 96}
!65 = distinct !{!65, !24, !34, !35}
!66 = distinct !{!66, !24, !34, !35}
!67 = distinct !{!67, !24, !35, !34}
!68 = distinct !{!68, !24, !35, !34}
!69 = !{!70, !12, i64 0}
!70 = !{!"_ZTS4APM1", !12, i64 0, !12, i64 4, !71, i64 8}
!71 = !{!"_ZTS5ArrayItLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!72 = !{!70, !12, i64 4}
!73 = !{!71, !12, i64 4}
!74 = !{!71, !12, i64 0}
!75 = !{!71, !6, i64 8}
!76 = !{!71, !6, i64 16}
!77 = distinct !{!77, !24, !78}
!78 = !{!"llvm.loop.peeled.count", i32 1}
!79 = distinct !{!79, !24}
!80 = !{!81, !12, i64 0}
!81 = !{!"_ZTS8StateMap", !12, i64 0, !12, i64 4, !11, i64 8}
!82 = !{!81, !12, i64 4}
!83 = !{!11, !12, i64 4}
!84 = !{!11, !6, i64 16}
!85 = distinct !{!85, !24, !34, !35}
!86 = distinct !{!86, !24, !35, !34}
!87 = distinct !{!87, !24, !34, !35}
!88 = distinct !{!88, !24, !35, !34}
!89 = distinct !{!89, !24}
!90 = !{!91, !12, i64 0}
!91 = !{!"_ZTS10ContextMap", !12, i64 0, !92, i64 8, !93, i64 32, !93, i64 56, !11, i64 80, !93, i64 104, !6, i64 128, !12, i64 136}
!92 = !{!"_ZTS5ArrayIN10ContextMap1EELi64EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!93 = !{!"_ZTS5ArrayIPhLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!94 = !{!92, !12, i64 4}
!95 = !{!92, !12, i64 0}
!96 = !{!92, !6, i64 8}
!97 = !{!92, !6, i64 16}
!98 = !{!93, !12, i64 4}
!99 = !{!93, !12, i64 0}
!100 = !{!93, !6, i64 8}
!101 = !{!93, !6, i64 16}
!102 = !{!91, !12, i64 136}
!103 = !{!91, !6, i64 128}
!104 = distinct !{!104, !24}
!105 = !{!106, !12, i64 24}
!106 = !{!"_ZTS6Random", !11, i64 0, !12, i64 24}
!107 = distinct !{!107, !24}
!108 = !{!109, !7, i64 14}
!109 = !{!"_ZTSN10ContextMap1EE", !7, i64 0, !7, i64 14, !7, i64 15}
!110 = !{!"branch_weights", i32 1, i32 1048575}
!111 = distinct !{!111, !24}
!112 = !{!113, !12, i64 24}
!113 = !{!"_ZTS25SmallStationaryContextMap", !71, i64 0, !12, i64 24, !6, i64 32}
!114 = !{!113, !6, i64 32}
!115 = distinct !{!115, !24, !34, !35}
!116 = distinct !{!116, !24, !35, !34}
!117 = distinct !{!117, !24}
!118 = distinct !{!118, !24}
!119 = distinct !{!119, !24}
!120 = distinct !{!120, !24}
!121 = distinct !{!121, !24}
!122 = distinct !{!122, !24}
!123 = distinct !{!123, !24}
!124 = !{!125, !6, i64 16}
!125 = !{!"_ZTS5ArrayI3HUFLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!126 = !{!125, !12, i64 0}
!127 = distinct !{!127, !24}
!128 = distinct !{!128, !24}
!129 = !{!130, !12, i64 0}
!130 = !{!"_ZTS3HUF", !12, i64 0, !12, i64 4, !12, i64 8}
!131 = !{!130, !12, i64 4}
!132 = !{!130, !12, i64 8}
!133 = distinct !{!133, !24}
!134 = distinct !{!134, !24}
!135 = distinct !{!135, !24}
!136 = distinct !{!136, !24}
!137 = distinct !{!137, !24}
!138 = distinct !{!138, !24}
!139 = distinct !{!139, !24}
!140 = distinct !{!140, !24}
!141 = distinct !{!141, !24}
!142 = distinct !{!142, !24}
!143 = distinct !{!143, !24, !78}
!144 = distinct !{!144, !24}
!145 = distinct !{!145, !24}
!146 = distinct !{!146, !24}
!147 = distinct !{!147, !24}
!148 = !{!125, !12, i64 4}
!149 = !{!125, !6, i64 8}
!150 = !{!151, !12, i64 4}
!151 = !{!"_ZTS5ArrayIhLi64EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!152 = !{!151, !12, i64 0}
!153 = !{!151, !6, i64 8}
!154 = !{!151, !6, i64 16}
!155 = !{!156, !12, i64 24}
!156 = !{!"_ZTS2BHILi9EE", !151, i64 0, !12, i64 24}
!157 = !{!158}
!158 = distinct !{!158, !159}
!159 = distinct !{!159, !"LVerDomain"}
!160 = !{!161}
!161 = distinct !{!161, !159}
!162 = distinct !{!162, !24, !34, !35}
!163 = distinct !{!163, !24, !34}
!164 = distinct !{!164, !24}
!165 = distinct !{!165, !24}
!166 = !{!167}
!167 = distinct !{!167, !168}
!168 = distinct !{!168, !"LVerDomain"}
!169 = !{!170}
!170 = distinct !{!170, !168}
!171 = distinct !{!171, !24, !34, !35}
!172 = distinct !{!172, !24, !34}
!173 = distinct !{!173, !24, !34, !35}
!174 = distinct !{!174, !24, !35, !34}
!175 = distinct !{!175, !24}
!176 = distinct !{!176, !24, !34, !35}
!177 = distinct !{!177, !24, !35, !34}
!178 = !{!179, !179, i64 0}
!179 = !{!"double", !7, i64 0}
!180 = distinct !{!180, !24, !34, !35}
!181 = distinct !{!181, !24, !35, !34}
!182 = distinct !{!182, !183}
!183 = !{!"llvm.loop.unroll.disable"}
!184 = distinct !{!184, !24}
!185 = distinct !{!185, !24}
!186 = distinct !{!186, !24}
!187 = distinct !{!187, !24}
!188 = distinct !{!188, !24}
!189 = distinct !{!189, !24}
!190 = distinct !{!190, !24}
!191 = distinct !{!191, !24}
!192 = distinct !{!192, !24}
!193 = distinct !{!193, !24}
!194 = distinct !{!194, !24}
!195 = distinct !{!195, !24}
!196 = distinct !{!196, !24}
!197 = distinct !{!197, !183}
!198 = distinct !{!198, !24}
!199 = distinct !{!199, !24}
!200 = distinct !{!200, !24}
!201 = distinct !{!201, !24}
!202 = distinct !{!202, !24}
!203 = distinct !{!203, !24}
!204 = distinct !{!204, !24}
!205 = distinct !{!205, !24, !78}
!206 = !{!207, !6, i64 16}
!207 = !{!"_ZTS5ArrayI7DMCNodeLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!208 = !{!209, !7, i64 8}
!209 = !{!"_ZTS7DMCNode", !7, i64 0, !7, i64 8, !12, i64 9, !12, i64 10}
!210 = !{!207, !12, i64 0}
!211 = distinct !{!211, !24}
!212 = distinct !{!212, !24}
!213 = !{!207, !12, i64 4}
!214 = !{!207, !6, i64 8}
!215 = !{!216, !216, i64 0}
!216 = !{!"_ZTS8Filetype", !7, i64 0}
!217 = !{!218}
!218 = distinct !{!218, !219}
!219 = distinct !{!219, !"LVerDomain"}
!220 = !{!221}
!221 = distinct !{!221, !219}
!222 = distinct !{!222, !24, !34, !35}
!223 = distinct !{!223, !24, !34}
!224 = !{i32 0, i32 -2147483648}
!225 = !{i32 0, i32 65536}
!226 = !{!227, !6, i64 32}
!227 = !{!"_ZTS13RunContextMap", !228, i64 0, !6, i64 32}
!228 = !{!"_ZTS2BHILi4EE", !151, i64 0, !12, i64 24}
!229 = !{!228, !12, i64 24}
!230 = !{!231, !12, i64 0}
!231 = !{!"_ZTS9Predictor", !12, i64 0}
!232 = !{!233, !234, i64 4}
!233 = !{!"_ZTS7Encoder", !231, i64 0, !234, i64 4, !6, i64 8, !12, i64 16, !12, i64 20, !12, i64 24, !6, i64 32}
!234 = !{!"_ZTS4Mode", !7, i64 0}
!235 = !{!233, !6, i64 8}
!236 = !{!233, !12, i64 16}
!237 = !{!233, !12, i64 20}
!238 = !{!233, !12, i64 24}
!239 = !{!233, !6, i64 32}
!240 = distinct !{!240, !24}
!241 = distinct !{!241, !24}
!242 = distinct !{!242, !24}
!243 = distinct !{!243, !24}
!244 = distinct !{!244, !24}
!245 = distinct !{!245, !24}
!246 = distinct !{!246, !24}
!247 = distinct !{!247, !24}
!248 = distinct !{!248, !24}
!249 = distinct !{!249, !24}
!250 = distinct !{!250, !24}
!251 = distinct !{!251, !24}
!252 = distinct !{!252, !24}
!253 = !{i32 0, i32 256}
!254 = distinct !{!254, !24}
!255 = distinct !{!255, !24}
!256 = distinct !{!256, !24}
!257 = distinct !{!257, !24}
!258 = distinct !{!258, !24}
!259 = distinct !{!259, !24}
!260 = !{!261, !6, i64 16}
!261 = !{!"_ZTS5ArrayIcLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!262 = !{!261, !12, i64 0}
!263 = distinct !{!263, !24}
!264 = !{!261, !6, i64 8}
!265 = distinct !{!265, !24}
!266 = distinct !{!266, !24}
!267 = !{!261, !12, i64 4}
!268 = distinct !{!268, !24}
!269 = distinct !{!269, !24}
!270 = !{i32 0, i32 2}
!271 = !{!272, !12, i64 4}
!272 = !{!"_ZTS5ArrayIPcLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!273 = !{!272, !12, i64 0}
!274 = !{!272, !6, i64 8}
!275 = !{!272, !6, i64 16}
!276 = !{!277, !12, i64 4}
!277 = !{!"_ZTS5ArrayIlLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!278 = !{!277, !12, i64 0}
!279 = !{!277, !6, i64 8}
!280 = !{!277, !6, i64 16}
!281 = distinct !{!281, !24}
!282 = distinct !{!282, !24}
!283 = distinct !{!283, !24}
!284 = distinct !{!284, !24}
!285 = !{!15, !15, i64 0}
!286 = distinct !{!286, !24}
!287 = distinct !{!287, !24}
!288 = distinct !{!288, !24}
!289 = distinct !{!289, !24}
!290 = distinct !{!290, !24}
!291 = distinct !{!291, !24}
!292 = distinct !{!292, !24}
!293 = distinct !{!293, !24, !34, !35}
!294 = distinct !{!294, !24, !35, !34}
!295 = distinct !{!295, !24}
!296 = distinct !{!296, !24}
!297 = distinct !{!297, !24}
!298 = distinct !{!298, !24}
!299 = !{!14, !15, i64 8}
!300 = distinct !{!300, !24}
