; ModuleID = '/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/PAQ8p/paq8p.cpp'
source_filename = "/usr/local/google/home/aeubanks/repos/test-suite/MultiSource/Benchmarks/PAQ8p/paq8p.cpp"
target datalayout = "e-m:e-p270:32:32-p271:32:32-p272:64:64-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%class.ProgramChecker = type { i32, i32, i64 }
%class.Random = type <{ %class.Array, i32, [4 x i8] }>
%class.Array = type { i32, i32, ptr, ptr }
%class.Buf = type { %class.Array.0 }
%class.Array.0 = type { i32, i32, ptr, ptr }
%class.Ilog = type { %class.Array.0 }
%class.Stretch = type { %class.Array.1 }
%class.Array.1 = type { i32, i32, ptr, ptr }
%class.Array.3 = type { i32, i32, ptr, ptr }
%class.SmallStationaryContextMap = type { %class.Array.4, i32, ptr }
%class.Array.4 = type { i32, i32, ptr, ptr }
%class.StateMap = type { i32, i32, %class.Array }
%class.ContextMap = type <{ i32, [4 x i8], %class.Array.5, %class.Array.6, %class.Array.6, %class.Array, %class.Array.6, ptr, i32, [4 x i8] }>
%class.Array.5 = type { i32, i32, ptr, ptr }
%class.Array.6 = type { i32, i32, ptr, ptr }
%class.Array.7 = type { i32, i32, ptr, ptr }
%class.IntBuf = type { %class.Array.3 }
%class.BH = type <{ %class.Array.8, i32, [4 x i8] }>
%class.Array.8 = type { i32, i32, ptr, ptr }
%class.Mixer = type { i32, i32, i32, %class.Array.2, %class.Array.2, %class.Array.3, i32, i32, i32, %class.Array.3, ptr }
%class.Array.2 = type { i32, i32, ptr, ptr }
%class.APM = type { %class.StateMap }
%class.Array.9 = type { i32, i32, ptr, ptr }
%class.RunContextMap = type { %class.BH.10, ptr }
%class.BH.10 = type <{ %class.Array.8, i32, [4 x i8] }>
%class.APM1 = type { i32, i32, %class.Array.4 }
%class.String = type { %class.Array.12 }
%class.Array.12 = type { i32, i32, ptr, ptr }
%"class.ContextMap::E" = type { [7 x i16], i8, [7 x [7 x i8]] }
%struct.HUF = type { i32, i32, i32 }
%struct.DMCNode = type { [2 x i32], i8, [3 x i8] }
%class.Encoder = type { %class.Predictor, i32, ptr, i32, i32, i32, ptr }
%class.Predictor = type { i32 }
%class.Array.13 = type { i32, i32, ptr, ptr }
%class.Array.14 = type { i32, i32, ptr, ptr }

$_ZN6RandomD2Ev = comdat any

$_ZN3BufC2Ei = comdat any

$_ZN3BufD2Ev = comdat any

$_ZN4IlogD2Ev = comdat any

$_ZN5ArrayIhLi0EEC2Ei = comdat any

$_ZN5ArrayIhLi0EED2Ev = comdat any

$_ZN7StretchD2Ev = comdat any

$_ZN5ArrayIiLi0EED2Ev = comdat any

$_ZN5ArrayIsLi16EED2Ev = comdat any

$_ZN5ArrayIiLi0EEC2Ei = comdat any

$_ZN5ArrayIjLi0EEC2Ei = comdat any

$_ZN5ArrayIjLi0EED2Ev = comdat any

$_ZN5ArrayIPhLi0EEC2Ei = comdat any

$_ZN8StateMapD2Ev = comdat any

$_ZN5ArrayIPhLi0EED2Ev = comdat any

$_ZN5ArrayIN10ContextMap1EELi64EED2Ev = comdat any

$_ZN10ContextMap1E3getEt = comdat any

$_ZN25SmallStationaryContextMapC2Ei = comdat any

$_ZN25SmallStationaryContextMapD2Ev = comdat any

$_Z2i4i = comdat any

$_ZN5ArrayI3HUFLi0EEC2Ei = comdat any

$_ZN5ArrayI3HUFLi0EED2Ev = comdat any

$_ZN6IntBufC2Ei = comdat any

$_ZN6IntBufD2Ev = comdat any

$_ZN2BHILi9EEC2Ei = comdat any

$_ZN2BHILi9EED2Ev = comdat any

$_ZN2BHILi9EEixEj = comdat any

$_ZN5Mixer1pEv = comdat any

$_ZN3APM1pEiii = comdat any

$_Z1Xii = comdat any

$_ZN5ArrayI7DMCNodeLi0EEC2Ei = comdat any

$_ZN5ArrayI7DMCNodeLi0EED2Ev = comdat any

$_ZN13RunContextMapC2Ei = comdat any

$_ZN13RunContextMapD2Ev = comdat any

$_ZN4APM1D2Ev = comdat any

$_ZN7Encoder10decompressEv = comdat any

$_ZN7Encoder8compressEi = comdat any

$_ZN6StringC2EPKc = comdat any

$_ZN5ArrayIcLi0EED2Ev = comdat any

$_ZN5ArrayIcLi0EE6resizeEi = comdat any

$_ZN5ArrayIPcLi0EE6resizeEi = comdat any

$_ZN5ArrayIlLi0EE6resizeEi = comdat any

$_ZN2BHILi4EEixEj = comdat any

$_ZN7Encoder4codeEi = comdat any

$_ZN5ArrayIhLi0EE6resizeEi = comdat any

$_ZZN2BHILi4EEixEjE3tmp = comdat any

$_ZZN2BHILi9EEixEjE3tmp = comdat any

@_ZTIPKc = external constant ptr
@programChecker = dso_local local_unnamed_addr global %class.ProgramChecker zeroinitializer, align 8
@rnd = dso_local global %class.Random zeroinitializer, align 8
@__dso_handle = external hidden global i8
@pos = dso_local local_unnamed_addr global i32 0, align 4
@level = dso_local local_unnamed_addr global i32 5, align 4
@y = dso_local local_unnamed_addr global i32 0, align 4
@c0 = dso_local local_unnamed_addr global i32 1, align 4
@c4 = dso_local local_unnamed_addr global i32 0, align 4
@bpos = dso_local local_unnamed_addr global i32 0, align 4
@buf = dso_local global %class.Buf zeroinitializer, align 8
@ilog = dso_local global %class.Ilog zeroinitializer, align 8
@_ZZ6squashiE1t = internal unnamed_addr constant [33 x i32] [i32 1, i32 2, i32 3, i32 6, i32 10, i32 16, i32 27, i32 45, i32 73, i32 120, i32 194, i32 310, i32 488, i32 747, i32 1101, i32 1546, i32 2047, i32 2549, i32 2994, i32 3348, i32 3607, i32 3785, i32 3901, i32 3975, i32 4022, i32 4050, i32 4068, i32 4079, i32 4085, i32 4089, i32 4092, i32 4093, i32 4094], align 16
@stretch = dso_local global %class.Stretch zeroinitializer, align 8
@_ZL11State_table = internal unnamed_addr constant [256 x [4 x i8]] [[4 x i8] c"\01\02\00\00", [4 x i8] c"\03\05\01\00", [4 x i8] c"\04\06\00\01", [4 x i8] c"\07\0A\02\00", [4 x i8] c"\08\0C\01\01", [4 x i8] c"\09\0D\01\01", [4 x i8] c"\0B\0E\00\02", [4 x i8] c"\0F\13\03\00", [4 x i8] c"\10\17\02\01", [4 x i8] c"\11\18\02\01", [4 x i8] c"\12\19\02\01", [4 x i8] c"\14\1B\01\02", [4 x i8] c"\15\1C\01\02", [4 x i8] c"\16\1D\01\02", [4 x i8] c"\1A\1E\00\03", [4 x i8] c"\1F!\04\00", [4 x i8] c" #\03\01", [4 x i8] c" #\03\01", [4 x i8] c" #\03\01", [4 x i8] c" #\03\01", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"\22%\02\02", [4 x i8] c"$'\01\03", [4 x i8] c"$'\01\03", [4 x i8] c"$'\01\03", [4 x i8] c"$'\01\03", [4 x i8] c"&(\00\04", [4 x i8] c")+\05\00", [4 x i8] c"*-\04\01", [4 x i8] c"*-\04\01", [4 x i8] c",/\03\02", [4 x i8] c",/\03\02", [4 x i8] c".1\02\03", [4 x i8] c".1\02\03", [4 x i8] c"03\01\04", [4 x i8] c"03\01\04", [4 x i8] c"24\00\05", [4 x i8] c"5+\06\00", [4 x i8] c"69\05\01", [4 x i8] c"69\05\01", [4 x i8] c"8;\04\02", [4 x i8] c"8;\04\02", [4 x i8] c":=\03\03", [4 x i8] c":=\03\03", [4 x i8] c"<?\02\04", [4 x i8] c"<?\02\04", [4 x i8] c">A\01\05", [4 x i8] c">A\01\05", [4 x i8] c"2B\00\06", [4 x i8] c"C7\07\00", [4 x i8] c"D9\06\01", [4 x i8] c"D9\06\01", [4 x i8] c"FI\05\02", [4 x i8] c"FI\05\02", [4 x i8] c"HK\04\03", [4 x i8] c"HK\04\03", [4 x i8] c"JM\03\04", [4 x i8] c"JM\03\04", [4 x i8] c"LO\02\05", [4 x i8] c"LO\02\05", [4 x i8] c">Q\01\06", [4 x i8] c">Q\01\06", [4 x i8] c"@R\00\07", [4 x i8] c"SE\08\00", [4 x i8] c"TG\07\01", [4 x i8] c"TG\07\01", [4 x i8] c"VI\06\02", [4 x i8] c"VI\06\02", [4 x i8] c",;\05\03", [4 x i8] c",;\05\03", [4 x i8] c":=\04\04", [4 x i8] c":=\04\04", [4 x i8] c"<1\03\05", [4 x i8] c"<1\03\05", [4 x i8] c"LY\02\06", [4 x i8] c"LY\02\06", [4 x i8] c"N[\01\07", [4 x i8] c"N[\01\07", [4 x i8] c"P\\\00\08", [4 x i8] c"]E\09\00", [4 x i8] c"^W\08\01", [4 x i8] c"^W\08\01", [4 x i8] c"`-\07\02", [4 x i8] c"`-\07\02", [4 x i8] c"0c\02\07", [4 x i8] c"0c\02\07", [4 x i8] c"Xe\01\08", [4 x i8] c"Xe\01\08", [4 x i8] c"Pf\00\09", [4 x i8] c"gE\0A\00", [4 x i8] c"hW\09\01", [4 x i8] c"hW\09\01", [4 x i8] c"j9\08\02", [4 x i8] c"j9\08\02", [4 x i8] c">m\02\08", [4 x i8] c">m\02\08", [4 x i8] c"Xo\01\09", [4 x i8] c"Xo\01\09", [4 x i8] c"Pp\00\0A", [4 x i8] c"qU\0B\00", [4 x i8] c"rW\0A\01", [4 x i8] c"rW\0A\01", [4 x i8] c"t9\09\02", [4 x i8] c"t9\09\02", [4 x i8] c">w\02\09", [4 x i8] c">w\02\09", [4 x i8] c"Xy\01\0A", [4 x i8] c"Xy\01\0A", [4 x i8] c"Zz\00\0B", [4 x i8] c"{U\0C\00", [4 x i8] c"|a\0B\01", [4 x i8] c"|a\0B\01", [4 x i8] c"~9\0A\02", [4 x i8] c"~9\0A\02", [4 x i8] c">\81\02\0A", [4 x i8] c">\81\02\0A", [4 x i8] c"b\83\01\0B", [4 x i8] c"b\83\01\0B", [4 x i8] c"Z\84\00\0C", [4 x i8] c"\85U\0D\00", [4 x i8] c"\86a\0C\01", [4 x i8] c"\86a\0C\01", [4 x i8] c"\889\0B\02", [4 x i8] c"\889\0B\02", [4 x i8] c">\8B\02\0B", [4 x i8] c">\8B\02\0B", [4 x i8] c"b\8D\01\0C", [4 x i8] c"b\8D\01\0C", [4 x i8] c"Z\8E\00\0D", [4 x i8] c"\8F_\0E\00", [4 x i8] c"\90a\0D\01", [4 x i8] c"\90a\0D\01", [4 x i8] c"D9\0C\02", [4 x i8] c"D9\0C\02", [4 x i8] c">Q\02\0C", [4 x i8] c">Q\02\0C", [4 x i8] c"b\93\01\0D", [4 x i8] c"b\93\01\0D", [4 x i8] c"d\94\00\0E", [4 x i8] c"\95_\0F\00", [4 x i8] c"\96k\0E\01", [4 x i8] c"\96k\0E\01", [4 x i8] c"l\97\01\0E", [4 x i8] c"l\97\01\0E", [4 x i8] c"d\98\00\0F", [4 x i8] c"\99_\10\00", [4 x i8] c"\9Ak\0F\01", [4 x i8] c"l\9B\01\0F", [4 x i8] c"d\9C\00\10", [4 x i8] c"\9D_\11\00", [4 x i8] c"\9Ek\10\01", [4 x i8] c"l\9F\01\10", [4 x i8] c"d\A0\00\11", [4 x i8] c"\A1i\12\00", [4 x i8] c"\A2k\11\01", [4 x i8] c"l\A3\01\11", [4 x i8] c"n\A4\00\12", [4 x i8] c"\A5i\13\00", [4 x i8] c"\A6u\12\01", [4 x i8] c"v\A7\01\12", [4 x i8] c"n\A8\00\13", [4 x i8] c"\A9i\14\00", [4 x i8] c"\AAu\13\01", [4 x i8] c"v\AB\01\13", [4 x i8] c"n\AC\00\14", [4 x i8] c"\ADi\15\00", [4 x i8] c"\AEu\14\01", [4 x i8] c"v\AF\01\14", [4 x i8] c"n\B0\00\15", [4 x i8] c"\B1i\16\00", [4 x i8] c"\B2u\15\01", [4 x i8] c"v\B3\01\15", [4 x i8] c"n\B4\00\16", [4 x i8] c"\B5s\17\00", [4 x i8] c"\B6u\16\01", [4 x i8] c"v\B7\01\16", [4 x i8] c"x\B8\00\17", [4 x i8] c"\B9s\18\00", [4 x i8] c"\BA\7F\17\01", [4 x i8] c"\80\BB\01\17", [4 x i8] c"x\BC\00\18", [4 x i8] c"\BDs\19\00", [4 x i8] c"\BE\7F\18\01", [4 x i8] c"\80\BF\01\18", [4 x i8] c"x\C0\00\19", [4 x i8] c"\C1s\1A\00", [4 x i8] c"\C2\7F\19\01", [4 x i8] c"\80\C3\01\19", [4 x i8] c"x\C4\00\1A", [4 x i8] c"\C5s\1B\00", [4 x i8] c"\C6\7F\1A\01", [4 x i8] c"\80\C7\01\1A", [4 x i8] c"x\C8\00\1B", [4 x i8] c"\C9s\1C\00", [4 x i8] c"\CA\7F\1B\01", [4 x i8] c"\80\CB\01\1B", [4 x i8] c"x\CC\00\1C", [4 x i8] c"\CDs\1D\00", [4 x i8] c"\CE\7F\1C\01", [4 x i8] c"\80\CF\01\1C", [4 x i8] c"x\D0\00\1D", [4 x i8] c"\D1}\1E\00", [4 x i8] c"\D2\7F\1D\01", [4 x i8] c"\80\D3\01\1D", [4 x i8] c"\82\D4\00\1E", [4 x i8] c"\D5}\1F\00", [4 x i8] c"\D6\89\1E\01", [4 x i8] c"\8A\D7\01\1E", [4 x i8] c"\82\D8\00\1F", [4 x i8] c"\D9} \00", [4 x i8] c"\DA\89\1F\01", [4 x i8] c"\8A\DB\01\1F", [4 x i8] c"\82\DC\00 ", [4 x i8] c"\DD}!\00", [4 x i8] c"\DE\89 \01", [4 x i8] c"\8A\DF\01 ", [4 x i8] c"\82\E0\00!", [4 x i8] c"\E1}\22\00", [4 x i8] c"\E2\89!\01", [4 x i8] c"\8A\E3\01!", [4 x i8] c"\82\E4\00\22", [4 x i8] c"\E5}#\00", [4 x i8] c"\E6\89\22\01", [4 x i8] c"\8A\E7\01\22", [4 x i8] c"\82\E8\00#", [4 x i8] c"\E9}$\00", [4 x i8] c"\EA\89#\01", [4 x i8] c"\8A\EB\01#", [4 x i8] c"\82\EC\00$", [4 x i8] c"\ED}%\00", [4 x i8] c"\EE\89$\01", [4 x i8] c"\8A\EF\01$", [4 x i8] c"\82\F0\00%", [4 x i8] c"\F1}&\00", [4 x i8] c"\F2\89%\01", [4 x i8] c"\8A\F3\01%", [4 x i8] c"\82\F4\00&", [4 x i8] c"\F5\87'\00", [4 x i8] c"\F6\89&\01", [4 x i8] c"\8A\F7\01&", [4 x i8] c"\8C\F8\00'", [4 x i8] c"\F9\87(\00", [4 x i8] c"\FAE'\01", [4 x i8] c"P\FB\01'", [4 x i8] c"\8C\FC\00(", [4 x i8] c"\F9\87)\00", [4 x i8] c"\FAE(\01", [4 x i8] c"P\FB\01(", [4 x i8] c"\8C\FC\00)", [4 x i8] zeroinitializer, [4 x i8] zeroinitializer, [4 x i8] zeroinitializer], align 16
@_ZZ10matchModelR5MixerE1t = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ10matchModelR5MixerE1t = internal global i64 0, align 8
@_ZZ10matchModelR5MixerE1h = internal unnamed_addr global i32 0, align 4
@_ZZ10matchModelR5MixerE3ptr = internal unnamed_addr global i32 0, align 4
@_ZZ10matchModelR5MixerE3len = internal unnamed_addr global i32 0, align 4
@_ZZ10matchModelR5MixerE6result = internal unnamed_addr global i32 0, align 4
@_ZZ10matchModelR5MixerE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ10matchModelR5MixerE4scm1 = internal global i64 0, align 8
@_ZZ8picModelR5MixerE2r0 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE2r1 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE2r2 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE2r3 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE1t = internal global %class.Array.0 zeroinitializer, align 8
@_ZGVZ8picModelR5MixerE1t = internal global i64 0, align 8
@_ZZ8picModelR5MixerE3cxt.0 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE3cxt.1 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE3cxt.2 = internal unnamed_addr global i32 0, align 4
@_ZZ8picModelR5MixerE2sm = internal global [3 x %class.StateMap] zeroinitializer, align 16
@_ZGVZ8picModelR5MixerE2sm = internal global i64 0, align 8
@_ZZ9wordModelR5MixerE5word0 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word1 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word2 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word3 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word4 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5word5 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE5text0 = internal unnamed_addr global i32 0, align 4
@_ZZ9wordModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ9wordModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ9wordModelR5MixerE3nl1 = internal unnamed_addr global i32 -3, align 4
@_ZZ9wordModelR5MixerE2nl = internal unnamed_addr global i32 -2, align 4
@_ZZ11recordModelR5MixerE5cpos1 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5cpos2 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5cpos3 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5cpos4 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE5wpos1 = internal unnamed_addr global [65536 x i32] zeroinitializer, align 16
@_ZZ11recordModelR5MixerE4rlen = internal unnamed_addr global i32 2, align 4
@_ZZ11recordModelR5MixerE5rlen1 = internal unnamed_addr global i32 3, align 4
@_ZZ11recordModelR5MixerE5rlen2 = internal unnamed_addr global i32 4, align 4
@_ZZ11recordModelR5MixerE7rcount1 = internal unnamed_addr global i32 0, align 4
@_ZZ11recordModelR5MixerE7rcount2 = internal unnamed_addr global i32 0, align 4
@_ZZ11recordModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ11recordModelR5MixerE2cn = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2cn = internal global i64 0, align 8
@_ZZ11recordModelR5MixerE2co = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2co = internal global i64 0, align 8
@_ZZ11recordModelR5MixerE2cp = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11recordModelR5MixerE2cp = internal global i64 0, align 8
@_ZZ11sparseModelR5MixeriiE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ11sparseModelR5MixeriiE2cm = internal global i64 0, align 8
@_ZZ11sparseModelR5MixeriiE4mask = internal unnamed_addr global i32 0, align 4
@_ZZ13distanceModelR5MixerE2cr = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ13distanceModelR5MixerE2cr = internal global i64 0, align 8
@_ZZ13distanceModelR5MixerE5pos00 = internal unnamed_addr global i32 0, align 4
@_ZZ13distanceModelR5MixerE5pos20 = internal unnamed_addr global i32 0, align 4
@_ZZ13distanceModelR5MixerE5posnl = internal unnamed_addr global i32 0, align 4
@_ZZ8bmpModelR5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ8bmpModelR5MixerE3eoi = internal unnamed_addr global i32 0, align 4
@_ZZ8bmpModelR5MixerE4tiff = internal unnamed_addr global i32 0, align 4
@_ZZ8bmpModelR5MixerE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm1 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm2 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm2 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm3 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm3 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm4 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm4 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm5 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm5 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm6 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm6 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm7 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm7 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm8 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm8 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE4scm9 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE4scm9 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE5scm10 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE5scm10 = internal global i64 0, align 8
@_ZZ8bmpModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ8bmpModelR5MixerE2cm = internal global i64 0, align 8
@.str = private unnamed_addr constant [11 x i8] c"BMP %dx%d \00", align 1
@.str.5 = private unnamed_addr constant [15 x i8] c"TIFF %dx%dx%d \00", align 1
@_ZZ9model8bitR5MixeriE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm1 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm2 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm2 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm3 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm3 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm4 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm4 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm5 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm5 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm6 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm6 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE4scm7 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE4scm7 = internal global i64 0, align 8
@_ZZ9model8bitR5MixeriE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ9model8bitR5MixeriE2cm = internal global i64 0, align 8
@_ZZ8pgmModelR5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ8pgmModelR5MixerE3eoi = internal unnamed_addr global i32 0, align 4
@_ZZ8pgmModelR5MixerE3pgm = internal unnamed_addr global i32 0, align 4
@_ZZ8pgmModelR5MixerE7pgm_hdr = internal unnamed_addr global [3 x i32] zeroinitializer, align 4
@_ZZ8pgmModelR5MixerE7pgm_ptr = internal unnamed_addr global i32 0, align 4
@.str.6 = private unnamed_addr constant [10 x i8] c"PGM %dx%d\00", align 1
@_ZZ8pgmModelR5MixerE3col = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE1h = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE3eoi = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE3col = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE4ibmp = internal unnamed_addr global i32 0, align 4
@_ZZ9bmpModel8R5MixerE2w1 = internal unnamed_addr global i32 0, align 4
@.str.7 = private unnamed_addr constant [17 x i8] c"BMP(8-bit) %dx%d\00", align 1
@_ZZ9rgbModel8R5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ9rgbModel8R5MixerE3eoi = internal unnamed_addr global i32 0, align 4
@_ZZ9rgbModel8R5MixerE3col = internal unnamed_addr global i32 0, align 4
@.str.8 = private unnamed_addr constant [17 x i8] c"RGB(8-bit) %dx%d\00", align 1
@.str.9 = private unnamed_addr constant [4 x i8] c"%s:\00", align 1
@.str.10 = private unnamed_addr constant [6 x i8] c" %02X\00", align 1
@_ZZ9jpegModelR5MixerE4jpeg = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE9next_jpeg = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3app = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3sof = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3sos = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4data = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE2ht = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2ht = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE6htsize = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE8huffcode = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE8huffbits = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE8huffsize = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE2rs = internal unnamed_addr global i32 -1, align 4
@_ZZ9jpegModelR5MixerE6mcupos = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3huf = internal global %class.Array.7 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE3huf = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE7mcusize = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE6hufsel = internal unnamed_addr global [2 x [10 x i32]] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE4hbuf = internal global %class.Array.0 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4hbuf = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE5color = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE5color = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4pred = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4pred = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE5width = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3row = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE6column = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4cbuf = internal global %class.Buf zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4cbuf = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4cpos = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE3rs1 = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4ssum = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE5ssum1 = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE5ssum2 = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE5ssum3 = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE5cbuf2 = internal global %class.IntBuf zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE5cbuf2 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE8adv_pred = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE8adv_pred = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4sumu = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4sumu = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4sumv = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4sumv = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2ls = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2ls = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE3lcp = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE3lcp = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4zpos = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4zpos = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE9dqt_state = internal unnamed_addr global i32 -1, align 4
@_ZZ9jpegModelR5MixerE7dqt_end = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4qnum = internal unnamed_addr global i32 0, align 4
@_ZZ9jpegModelR5MixerE4qtab = internal global %class.Array.0 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4qtab = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE4qmap = internal global %class.Array.3 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE4qmap = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE3zzu = internal unnamed_addr constant [64 x i8] c"\00\01\00\00\01\02\03\02\01\00\00\01\02\03\04\05\04\03\02\01\00\00\01\02\03\04\05\06\07\06\05\04\03\02\01\00\01\02\03\04\05\06\07\07\06\05\04\03\02\03\04\05\06\07\07\06\05\04\05\06\07\07\06\07", align 16
@_ZZ9jpegModelR5MixerE3zzv = internal unnamed_addr constant [64 x i8] c"\00\00\01\02\01\00\00\01\02\03\04\03\02\01\00\00\01\02\03\04\05\06\05\04\03\02\01\00\00\01\02\03\04\05\06\07\07\06\05\04\03\02\01\02\03\04\05\06\07\07\06\05\04\03\04\05\06\07\07\06\05\06\07\07", align 16
@.str.12 = private unnamed_addr constant [12 x i8] c"JPEG %dx%d \00", align 1
@_ZZ9jpegModelR5MixerE2we = internal unnamed_addr constant [8 x i32] [i32 181, i32 282, i32 353, i32 456, i32 568, i32 671, i32 742, i32 767], align 16
@_ZZ9jpegModelR5MixerE5sumu2 = internal unnamed_addr global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE5sumv2 = internal unnamed_addr global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE5sumu3 = internal unnamed_addr global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE5sumv3 = internal unnamed_addr global [8 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE2kx = internal global [32 x i32] zeroinitializer, align 16
@_ZZ9jpegModelR5MixerE1t = internal global %class.BH zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE1t = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE3cxt = internal global %class.Array zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE3cxt = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2cp = internal global %class.Array.6 zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2cp = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2sm = internal global [28 x %class.StateMap] zeroinitializer, align 16
@_ZGVZ9jpegModelR5MixerE2sm = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2m1 = internal global %class.Mixer zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2m1 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2a1 = internal global %class.APM zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2a1 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE2a2 = internal global %class.APM zeroinitializer, align 8
@_ZGVZ9jpegModelR5MixerE2a2 = internal global i64 0, align 8
@_ZZ9jpegModelR5MixerE7hbcount = internal unnamed_addr global i32 2, align 4
@_ZZ8wavModelR5MixerE8channels = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE4bits = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE5bytes = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE3eof = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE1s = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE1w = internal unnamed_addr global i32 0, align 4
@_ZZ8wavModelR5MixerE1K = internal unnamed_addr global i32 0, align 4
@_ZGVZ8wavModelR5MixerE1K = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE2pr = internal unnamed_addr global [4 x [2 x i32]] zeroinitializer, align 16
@_ZZ8wavModelR5MixerE1n = internal unnamed_addr global [2 x i32] zeroinitializer, align 4
@_ZZ8wavModelR5MixerE7counter = internal unnamed_addr global [2 x i32] zeroinitializer, align 4
@_ZZ8wavModelR5MixerE4scm1 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm1 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm2 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm2 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm3 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm3 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm4 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm4 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm5 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm5 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm6 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm6 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm7 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm7 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE4scm8 = internal global %class.SmallStationaryContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE4scm8 = internal global i64 0, align 8
@_ZZ8wavModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ8wavModelR5MixerE2cm = internal global i64 0, align 8
@_ZL1S = internal unnamed_addr global i32 0, align 4
@_ZL1D = internal unnamed_addr global i1 false, align 4
@_ZL5wmode = internal unnamed_addr global i32 0, align 4
@.str.14 = private unnamed_addr constant [12 x i8] c"WAV %ibits/\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"mono \00", align 1
@.str.16 = private unnamed_addr constant [8 x i8] c"stereo \00", align 1
@_ZZ8exeModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ8exeModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ13indirectModelR5MixerE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ13indirectModelR5MixerE2cm = internal global i64 0, align 8
@_ZZ13indirectModelR5MixerE2t1 = internal unnamed_addr global [256 x i32] zeroinitializer, align 16
@_ZZ13indirectModelR5MixerE2t2 = internal unnamed_addr global [65536 x i16] zeroinitializer, align 16
@_ZZ8dmcModelR5MixerE3top = internal unnamed_addr global i32 0, align 4
@_ZZ8dmcModelR5MixerE4curr = internal unnamed_addr global i32 0, align 4
@_ZZ8dmcModelR5MixerE1t = internal global %class.Array.9 zeroinitializer, align 8
@_ZGVZ8dmcModelR5MixerE1t = internal global i64 0, align 8
@_ZZ8dmcModelR5MixerE2sm = internal global %class.StateMap zeroinitializer, align 8
@_ZGVZ8dmcModelR5MixerE2sm = internal global i64 0, align 8
@_ZZ8dmcModelR5MixerE9threshold = internal unnamed_addr global i32 256, align 4
@_ZZ13contextModel2vE2cm = internal global %class.ContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE2cm = internal global i64 0, align 8
@_ZZ13contextModel2vE4rcm7 = internal global %class.RunContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE4rcm7 = internal global i64 0, align 8
@_ZZ13contextModel2vE4rcm9 = internal global %class.RunContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE4rcm9 = internal global i64 0, align 8
@_ZZ13contextModel2vE5rcm10 = internal global %class.RunContextMap zeroinitializer, align 8
@_ZGVZ13contextModel2vE5rcm10 = internal global i64 0, align 8
@_ZZ13contextModel2vE1m = internal global %class.Mixer zeroinitializer, align 8
@_ZGVZ13contextModel2vE1m = internal global i64 0, align 8
@_ZZ13contextModel2vE3cxt.1 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.2 = internal unnamed_addr global i32 0, align 8
@_ZZ13contextModel2vE3cxt.3 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.4 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.5 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.6 = internal unnamed_addr global i32 0, align 8
@_ZZ13contextModel2vE3cxt.7 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.8 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.9 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.10 = internal unnamed_addr global i32 0, align 8
@_ZZ13contextModel2vE3cxt.11 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.12 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.13 = internal unnamed_addr global i32 0, align 16
@_ZZ13contextModel2vE3cxt.14 = internal unnamed_addr global i32 0, align 8
@_ZZ13contextModel2vE8filetype = internal unnamed_addr global i32 0, align 4
@_ZZ13contextModel2vE4size = internal unnamed_addr global i32 0, align 4
@_ZZ13contextModel2vE3col = internal unnamed_addr global i32 0, align 4
@_ZZ13contextModel2vE3col_0 = internal unnamed_addr global i32 0, align 4
@_ZZN9Predictor6updateEvE1a = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE1a = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a1 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a1 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a2 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a2 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a3 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a3 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a4 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a4 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a5 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a5 = internal global i64 0, align 8
@_ZZN9Predictor6updateEvE2a6 = internal global %class.APM1 zeroinitializer, align 8
@_ZGVZN9Predictor6updateEvE2a6 = internal global i64 0, align 8
@_ZL2dt = internal unnamed_addr global [1024 x i32] zeroinitializer, align 16
@.str.17 = private unnamed_addr constant [9 x i8] c"%c%c%c%c\00", align 1
@.str.18 = private unnamed_addr constant [22 x i8] c"encode_exe read error\00", align 1
@_ZZ10decode_exeR7EncoderE6offset = internal unnamed_addr global i32 0, align 4
@_ZZ10decode_exeR7EncoderE1q = internal unnamed_addr global i32 0, align 4
@_ZZ10decode_exeR7EncoderE4size = internal unnamed_addr global i32 0, align 4
@_ZZ10decode_exeR7EncoderE5begin = internal unnamed_addr global i32 0, align 4
@_ZZ10decode_exeR7EncoderE1c = internal unnamed_addr global [5 x i8] zeroinitializer, align 4
@.str.19 = private unnamed_addr constant [11 x i8] c"%c%c%c%c%c\00", align 1
@_ZZ6decodeR7EncoderE4type = internal unnamed_addr global i32 0, align 4
@_ZZ6decodeR7EncoderE3len = internal unnamed_addr global i32 0, align 4
@.str.20 = private unnamed_addr constant [17 x i8] c"%12d\08\08\08\08\08\08\08\08\08\08\08\08\00", align 1
@stdout = external local_unnamed_addr global ptr, align 8
@.str.21 = private unnamed_addr constant [3 x i8] c"rb\00", align 1
@.str.22 = private unnamed_addr constant [11 x i8] c"%s %ld -> \00", align 1
@.str.23 = private unnamed_addr constant [8 x i8] c"tmpfile\00", align 1
@.str.24 = private unnamed_addr constant [58 x i8] c"Transform fails at %ld, input=%d decoded=%d, skipping...\0A\00", align 1
@.str.25 = private unnamed_addr constant [8 x i8] c"%-12ld\0A\00", align 1
@.str.26 = private unnamed_addr constant [21 x i8] c"Comparing %s %ld -> \00", align 1
@.str.27 = private unnamed_addr constant [34 x i8] c"differ at %d: file=%d archive=%d\0A\00", align 1
@.str.30 = private unnamed_addr constant [3 x i8] c"wb\00", align 1
@.str.32 = private unnamed_addr constant [22 x i8] c"Extracting %s %ld -> \00", align 1
@.str.34 = private unnamed_addr constant [20 x i8] c"Skipping %s %ld -> \00", align 1
@_ZZ7getlineP8_IO_FILEE1s = internal global %class.String zeroinitializer, align 8
@_ZGVZ7getlineP8_IO_FILEE1s = internal global i64 0, align 8
@.str.36 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZZ7putsizeR6StringS0_PKciE3blk = internal global [24 x i8] zeroinitializer, align 16
@.str.37 = private unnamed_addr constant [5 x i8] c"%ld\09\00", align 1
@.str.39 = private unnamed_addr constant [39 x i8] c"Valid options are -0 through -9 or -d\0A\00", align 1
@.str.40 = private unnamed_addr constant [645 x i8] c"paq8p archiver (C) 2008, Matt Mahoney et al.\0AFree under GPL, http://www.gnu.org/licenses/gpl.txt\0A\0ATo compress:\0A  paq8p -level file               (compresses to file.paq8p)\0A  paq8p -level archive files...   (creates archive.paq8p)\0A  paq8p file                      (level -%d, pause when done)\0Alevel: -0 = store, -1 -2 -3 = faster (uses 35, 48, 59 MB)\0A-4 -5 -6 -7 -8 = smaller (uses 133, 233, 435, 837, 1643 MB)\0A\0ATo extract or compare:\0A  paq8p -d dir1/archive.paq8p      (extract to dir1)\0A  paq8p -d dir1/archive.paq8p dir2 (extract to dir2)\0A  paq8p archive.paq8p              (extract, pause when done)\0A\0ATo view contents: more < archive.paq8p\0A\0A\00", align 1
@.str.42 = private unnamed_addr constant [28 x i8] c"%s: not found, skipping...\0A\00", align 1
@.str.43 = private unnamed_addr constant [21 x i8] c"Nothing to compress\0A\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"wb+\00", align 1
@.str.45 = private unnamed_addr constant [15 x i8] c"paq8p -%d\0D\0A%s\1A\00", align 1
@.str.46 = private unnamed_addr constant [37 x i8] c"Creating archive with %d file(s)...\0A\00", align 1
@.str.47 = private unnamed_addr constant [4 x i8] c"rb+\00", align 1
@.str.48 = private unnamed_addr constant [8 x i8] c"paq8p -\00", align 1
@.str.49 = private unnamed_addr constant [19 x i8] c"%s: not a %s file\0A\00", align 1
@.str.50 = private unnamed_addr constant [6 x i8] c"paq8p\00", align 1
@.str.51 = private unnamed_addr constant [40 x i8] c"Extracting %d file(s) from archive -%d\0A\00", align 1
@.str.52 = private unnamed_addr constant [29 x i8] c"%s: header corrupted at %ld\0A\00", align 1
@.str.53 = private unnamed_addr constant [12 x i8] c"%ld -> %ld\0A\00", align 1
@.str.57 = private unnamed_addr constant [14 x i8] c"fork() failed\00", align 1
@.str.58 = private unnamed_addr constant [3 x i8] c"-d\00", align 1
@.str.59 = private unnamed_addr constant [14 x i8] c"Out of memory\00", align 1
@_ZZN2BHILi4EEixEjE3tmp = linkonce_odr dso_local local_unnamed_addr global [4 x i8] zeroinitializer, comdat, align 1
@stdin = external local_unnamed_addr global ptr, align 8
@_ZZN2BHILi9EEixEjE3tmp = linkonce_odr dso_local local_unnamed_addr global [9 x i8] zeroinitializer, comdat, align 1
@llvm.global_ctors = appending global [1 x { i32, ptr, ptr }] [{ i32, ptr, ptr } { i32 65535, ptr @_GLOBAL__sub_I_paq8p.cpp, ptr null }]
@str = private unnamed_addr constant [14 x i8] c"not extracted\00", align 1
@str.60 = private unnamed_addr constant [13 x i8] c"done        \00", align 1
@str.61 = private unnamed_addr constant [13 x i8] c"identical   \00", align 1
@str.62 = private unnamed_addr constant [15 x i8] c"file is longer\00", align 1
@str.63 = private unnamed_addr constant [49 x i8] c"\0AClose this window or press ENTER to continue...\00", align 1

@_ZN4IlogC1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN4IlogC2Ev
@_ZN7StretchC1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN7StretchC2Ev
@_ZN5MixerD1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN5MixerD2Ev
@_ZN5MixerC1Eiiii = dso_local unnamed_addr alias void (ptr, i32, i32, i32, i32), ptr @_ZN5MixerC2Eiiii
@_ZN4APM1C1Ei = dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN4APM1C2Ei
@_ZN8StateMapC1Ei = dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN8StateMapC2Ei
@_ZN3APMC1Ei = dso_local unnamed_addr alias void (ptr, i32), ptr @_ZN3APMC2Ei
@_ZN10ContextMapC1Eii = dso_local unnamed_addr alias void (ptr, i32, i32), ptr @_ZN10ContextMapC2Eii
@_ZN10ContextMapD1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN10ContextMapD2Ev
@_ZN9PredictorC1Ev = dso_local unnamed_addr alias void (ptr), ptr @_ZN9PredictorC2Ev
@_ZN7EncoderC1E4ModeP8_IO_FILE = dso_local unnamed_addr alias void (ptr, i32, ptr), ptr @_ZN7EncoderC2E4ModeP8_IO_FILE

; Function Attrs: mustprogress noreturn uwtable
define dso_local void @_Z4quitPKc(ptr noundef %0) local_unnamed_addr #0 {
  %2 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr %0, ptr %2, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %2, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable
}

declare ptr @__cxa_allocate_exception(i64) local_unnamed_addr

declare void @__cxa_throw(ptr, ptr, ptr) local_unnamed_addr

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local noundef i32 @_Z6equalsPKcS0_(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1) local_unnamed_addr #1 {
  br label %3

3:                                                ; preds = %11, %2
  %4 = phi ptr [ %0, %2 ], [ %23, %11 ]
  %5 = phi ptr [ %1, %2 ], [ %24, %11 ]
  %6 = load i8, ptr %4, align 1, !tbaa !9
  %7 = icmp eq i8 %6, 0
  %8 = load i8, ptr %5, align 1, !tbaa !9
  br i1 %7, label %25, label %9

9:                                                ; preds = %3
  %10 = icmp eq i8 %8, 0
  br i1 %10, label %25, label %11

11:                                               ; preds = %9
  %12 = sext i8 %6 to i32
  %13 = add i8 %6, -65
  %14 = icmp ult i8 %13, 26
  %15 = add nuw nsw i32 %12, 32
  %16 = select i1 %14, i32 %15, i32 %12
  %17 = sext i8 %8 to i32
  %18 = add i8 %8, -65
  %19 = icmp ult i8 %18, 26
  %20 = add nuw nsw i32 %17, 32
  %21 = select i1 %19, i32 %20, i32 %17
  %22 = icmp eq i32 %16, %21
  %23 = getelementptr inbounds i8, ptr %4, i64 1
  %24 = getelementptr inbounds i8, ptr %5, i64 1
  br i1 %22, label %3, label %29

25:                                               ; preds = %9, %3
  %26 = phi i8 [ %8, %3 ], [ 0, %9 ]
  %27 = icmp eq i8 %6, %26
  %28 = zext i1 %27 to i32
  br label %29

29:                                               ; preds = %11, %25
  %30 = phi i32 [ %28, %25 ], [ 0, %11 ]
  ret i32 %30
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.start.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite)
declare void @llvm.lifetime.end.p0(i64 immarg, ptr nocapture) #2

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN6RandomD2Ev(ptr noundef nonnull align 8 dereferenceable(28) %0) unnamed_addr #3 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !10
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = shl i32 %2, 2
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(ptr, ptr, ptr) local_unnamed_addr #4

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN3BufC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !18
  store i32 %1, ptr %0, align 8, !tbaa !20
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %22

7:                                                ; preds = %2
  %8 = zext i32 %1 to i64
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = add nsw i32 %9, %1
  store i32 %10, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %14

14:                                               ; preds = %13, %7
  %15 = tail call noalias ptr @calloc(i64 noundef %8, i64 noundef 1) #41
  %16 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 2
  store ptr %15, ptr %16, align 8, !tbaa !21
  %17 = icmp eq ptr %15, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %19, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %19, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 3
  store ptr %15, ptr %21, align 8, !tbaa !22
  br label %22

22:                                               ; preds = %5, %20
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN3BufD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !20
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = sub i32 %3, %2
  store i32 %4, ptr @programChecker, align 8, !tbaa !13
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %6 = icmp sgt i32 %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 %4, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %8

8:                                                ; preds = %1, %7
  %9 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !21
  tail call void @free(ptr noundef %10) #39
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN4IlogD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !20
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = sub i32 %3, %2
  store i32 %4, ptr @programChecker, align 8, !tbaa !13
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %6 = icmp sgt i32 %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 %4, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %8

8:                                                ; preds = %1, %7
  %9 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !21
  tail call void @free(ptr noundef %10) #39
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN4IlogC2Ev(ptr nocapture noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 1
  store i32 65536, ptr %2, align 4, !tbaa !18
  store i32 65536, ptr %0, align 8, !tbaa !20
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = add nsw i32 %3, 65536
  store i32 %4, ptr @programChecker, align 8, !tbaa !13
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %6 = icmp sgt i32 %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 %4, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %8

8:                                                ; preds = %7, %1
  %9 = tail call noalias dereferenceable_or_null(65536) ptr @calloc(i64 noundef 65536, i64 noundef 1) #41
  %10 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 2
  store ptr %9, ptr %10, align 8, !tbaa !21
  %11 = icmp eq ptr %9, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %13, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %13, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 3
  store ptr %9, ptr %15, align 8, !tbaa !22
  br label %17

16:                                               ; preds = %17
  ret void

17:                                               ; preds = %17, %14
  %18 = phi i64 [ 2, %14 ], [ %39, %17 ]
  %19 = phi i32 [ 14155776, %14 ], [ %34, %17 ]
  %20 = trunc i64 %18 to i32
  %21 = shl i32 %20, 1
  %22 = add nsw i32 %21, -1
  %23 = udiv i32 774541002, %22
  %24 = add i32 %23, %19
  %25 = lshr i32 %24, 24
  %26 = trunc i32 %25 to i8
  %27 = load ptr, ptr %15, align 8, !tbaa !22
  %28 = getelementptr inbounds i8, ptr %27, i64 %18
  store i8 %26, ptr %28, align 1, !tbaa !9
  %29 = or i64 %18, 1
  %30 = trunc i64 %29 to i32
  %31 = shl i32 %30, 1
  %32 = add nsw i32 %31, -1
  %33 = udiv i32 774541002, %32
  %34 = add i32 %33, %24
  %35 = lshr i32 %34, 24
  %36 = trunc i32 %35 to i8
  %37 = load ptr, ptr %15, align 8, !tbaa !22
  %38 = getelementptr inbounds i8, ptr %37, i64 %29
  store i8 %36, ptr %38, align 1, !tbaa !9
  %39 = add nuw nsw i64 %18, 2
  %40 = icmp eq i64 %39, 65536
  br i1 %40, label %16, label %17, !llvm.loop !23
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5ArrayIhLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !18
  store i32 %1, ptr %0, align 8, !tbaa !20
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %22

7:                                                ; preds = %2
  %8 = zext i32 %1 to i64
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = add nsw i32 %9, %1
  store i32 %10, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %14

14:                                               ; preds = %13, %7
  %15 = tail call noalias ptr @calloc(i64 noundef %8, i64 noundef 1) #41
  %16 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 2
  store ptr %15, ptr %16, align 8, !tbaa !21
  %17 = icmp eq ptr %15, null
  br i1 %17, label %18, label %20

18:                                               ; preds = %14
  %19 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %19, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %19, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

20:                                               ; preds = %14
  %21 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 3
  store ptr %15, ptr %21, align 8, !tbaa !22
  br label %22

22:                                               ; preds = %5, %20
  ret void
}

declare i32 @__gxx_personality_v0(...)

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !20
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = sub i32 %3, %2
  store i32 %4, ptr @programChecker, align 8, !tbaa !13
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %6 = icmp sgt i32 %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 %4, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %8

8:                                                ; preds = %1, %7
  %9 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !21
  tail call void @free(ptr noundef %10) #39
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef i32 @_Z6squashi(i32 noundef %0) local_unnamed_addr #7 {
  %2 = icmp sgt i32 %0, 2047
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = icmp slt i32 %0, -2047
  br i1 %4, label %22, label %5

5:                                                ; preds = %3
  %6 = and i32 %0, 127
  %7 = ashr i32 %0, 7
  %8 = add nsw i32 %7, 16
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %9
  %11 = load i32, ptr %10, align 4, !tbaa !25
  %12 = sub nuw nsw i32 128, %6
  %13 = mul nsw i32 %11, %12
  %14 = add nsw i32 %7, 17
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %15
  %17 = load i32, ptr %16, align 4, !tbaa !25
  %18 = mul nsw i32 %17, %6
  %19 = add i32 %13, 64
  %20 = add i32 %19, %18
  %21 = ashr i32 %20, 7
  br label %22

22:                                               ; preds = %3, %1, %5
  %23 = phi i32 [ %21, %5 ], [ 4095, %1 ], [ 0, %3 ]
  ret i32 %23
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN7StretchD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !26
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = shl i32 %2, 1
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array.1, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !28
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN7StretchC2Ev(ptr nocapture noundef nonnull writeonly align 8 dereferenceable(24) %0) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
  %2 = getelementptr inbounds %class.Array.1, ptr %0, i64 0, i32 1
  store i32 4096, ptr %2, align 4, !tbaa !29
  store i32 4096, ptr %0, align 8, !tbaa !26
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = add nsw i32 %3, 8192
  store i32 %4, ptr @programChecker, align 8, !tbaa !13
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %6 = icmp sgt i32 %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 %4, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %8

8:                                                ; preds = %7, %1
  %9 = tail call noalias dereferenceable_or_null(8192) ptr @calloc(i64 noundef 8192, i64 noundef 1) #41
  %10 = getelementptr inbounds %class.Array.1, ptr %0, i64 0, i32 2
  store ptr %9, ptr %10, align 8, !tbaa !28
  %11 = icmp eq ptr %9, null
  br i1 %11, label %12, label %14

12:                                               ; preds = %8
  %13 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %13, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %13, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

14:                                               ; preds = %8
  %15 = getelementptr inbounds %class.Array.1, ptr %0, i64 0, i32 3
  store ptr %9, ptr %15, align 8, !tbaa !30
  br label %18

16:                                               ; preds = %67
  %17 = getelementptr inbounds i16, ptr %9, i64 4095
  store i16 2047, ptr %17, align 2, !tbaa !31
  ret void

18:                                               ; preds = %14, %67
  %19 = phi i32 [ 0, %14 ], [ %68, %67 ]
  %20 = phi i32 [ -2047, %14 ], [ %69, %67 ]
  %21 = and i32 %20, 127
  %22 = ashr i32 %20, 7
  %23 = add nsw i32 %22, 16
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %24
  %26 = load i32, ptr %25, align 4, !tbaa !25
  %27 = sub nuw nsw i32 128, %21
  %28 = mul nsw i32 %26, %27
  %29 = add nsw i32 %22, 17
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %30
  %32 = load i32, ptr %31, align 4, !tbaa !25
  %33 = mul nsw i32 %32, %21
  %34 = add i32 %28, 64
  %35 = add i32 %34, %33
  %36 = ashr i32 %35, 7
  %37 = icmp sgt i32 %19, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %18
  %39 = add nsw i32 %36, 1
  br label %67

40:                                               ; preds = %18
  %41 = trunc i32 %20 to i16
  %42 = sext i32 %19 to i64
  %43 = add nsw i32 %36, 1
  %44 = sext i32 %43 to i64
  %45 = add nsw i32 %36, 1
  %46 = sub nsw i32 %45, %19
  %47 = sext i32 %46 to i64
  %48 = icmp ult i32 %46, 16
  br i1 %48, label %65, label %49

49:                                               ; preds = %40
  %50 = and i64 %47, -16
  %51 = add nsw i64 %50, %42
  %52 = insertelement <8 x i16> poison, i16 %41, i64 0
  %53 = shufflevector <8 x i16> %52, <8 x i16> poison, <8 x i32> zeroinitializer
  %54 = insertelement <8 x i16> poison, i16 %41, i64 0
  %55 = shufflevector <8 x i16> %54, <8 x i16> poison, <8 x i32> zeroinitializer
  br label %56

56:                                               ; preds = %56, %49
  %57 = phi i64 [ 0, %49 ], [ %61, %56 ]
  %58 = add i64 %57, %42
  %59 = getelementptr inbounds i16, ptr %9, i64 %58
  store <8 x i16> %53, ptr %59, align 2, !tbaa !31
  %60 = getelementptr inbounds i16, ptr %59, i64 8
  store <8 x i16> %55, ptr %60, align 2, !tbaa !31
  %61 = add nuw i64 %57, 16
  %62 = icmp eq i64 %61, %50
  br i1 %62, label %63, label %56, !llvm.loop !33

63:                                               ; preds = %56
  %64 = icmp eq i64 %50, %47
  br i1 %64, label %67, label %65

65:                                               ; preds = %40, %63
  %66 = phi i64 [ %42, %40 ], [ %51, %63 ]
  br label %71

67:                                               ; preds = %71, %63, %38
  %68 = phi i32 [ %39, %38 ], [ %43, %63 ], [ %43, %71 ]
  %69 = add nsw i32 %20, 1
  %70 = icmp eq i32 %69, 2048
  br i1 %70, label %16, label %18, !llvm.loop !36

71:                                               ; preds = %65, %71
  %72 = phi i64 [ %74, %71 ], [ %66, %65 ]
  %73 = getelementptr inbounds i16, ptr %9, i64 %72
  store i16 %41, ptr %73, align 2, !tbaa !31
  %74 = add nsw i64 %72, 1
  %75 = icmp eq i64 %74, %44
  br i1 %75, label %67, label %71, !llvm.loop !37
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable
define dso_local noundef i32 @_Z11dot_productPsS_i(ptr nocapture noundef readonly %0, ptr nocapture noundef readonly %1, i32 noundef %2) local_unnamed_addr #8 {
  %4 = add nsw i32 %2, 7
  %5 = and i32 %4, -8
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %66

7:                                                ; preds = %3
  %8 = zext i32 %5 to i64
  %9 = tail call i64 @llvm.umax.i64(i64 %8, i64 2)
  %10 = add nsw i64 %9, -1
  %11 = lshr i64 %10, 1
  %12 = add nuw nsw i64 %11, 1
  %13 = icmp ult i64 %10, 14
  br i1 %13, label %63, label %14

14:                                               ; preds = %7
  %15 = and i64 %12, -8
  %16 = shl nuw i64 %15, 1
  br label %17

17:                                               ; preds = %17, %14
  %18 = phi i64 [ 0, %14 ], [ %57, %17 ]
  %19 = phi <4 x i32> [ zeroinitializer, %14 ], [ %55, %17 ]
  %20 = phi <4 x i32> [ zeroinitializer, %14 ], [ %56, %17 ]
  %21 = shl i64 %18, 1
  %22 = or i64 %21, 8
  %23 = getelementptr inbounds i16, ptr %0, i64 %21
  %24 = getelementptr inbounds i16, ptr %0, i64 %22
  %25 = load <8 x i16>, ptr %23, align 2, !tbaa !31
  %26 = load <8 x i16>, ptr %24, align 2, !tbaa !31
  %27 = shufflevector <8 x i16> %25, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %28 = shufflevector <8 x i16> %26, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %29 = shufflevector <8 x i16> %25, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %30 = shufflevector <8 x i16> %26, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %31 = sext <4 x i16> %27 to <4 x i32>
  %32 = sext <4 x i16> %28 to <4 x i32>
  %33 = getelementptr inbounds i16, ptr %1, i64 %21
  %34 = getelementptr inbounds i16, ptr %1, i64 %22
  %35 = load <8 x i16>, ptr %33, align 2, !tbaa !31
  %36 = load <8 x i16>, ptr %34, align 2, !tbaa !31
  %37 = shufflevector <8 x i16> %35, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %38 = shufflevector <8 x i16> %36, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %39 = shufflevector <8 x i16> %35, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %40 = shufflevector <8 x i16> %36, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %41 = sext <4 x i16> %37 to <4 x i32>
  %42 = sext <4 x i16> %38 to <4 x i32>
  %43 = mul nsw <4 x i32> %41, %31
  %44 = mul nsw <4 x i32> %42, %32
  %45 = sext <4 x i16> %29 to <4 x i32>
  %46 = sext <4 x i16> %30 to <4 x i32>
  %47 = sext <4 x i16> %39 to <4 x i32>
  %48 = sext <4 x i16> %40 to <4 x i32>
  %49 = mul nsw <4 x i32> %47, %45
  %50 = mul nsw <4 x i32> %48, %46
  %51 = add nsw <4 x i32> %49, %43
  %52 = add nsw <4 x i32> %50, %44
  %53 = ashr <4 x i32> %51, <i32 8, i32 8, i32 8, i32 8>
  %54 = ashr <4 x i32> %52, <i32 8, i32 8, i32 8, i32 8>
  %55 = add <4 x i32> %53, %19
  %56 = add <4 x i32> %54, %20
  %57 = add nuw i64 %18, 8
  %58 = icmp eq i64 %57, %15
  br i1 %58, label %59, label %17, !llvm.loop !38

59:                                               ; preds = %17
  %60 = add <4 x i32> %56, %55
  %61 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %60)
  %62 = icmp eq i64 %12, %15
  br i1 %62, label %66, label %63

63:                                               ; preds = %7, %59
  %64 = phi i64 [ 0, %7 ], [ %16, %59 ]
  %65 = phi i32 [ 0, %7 ], [ %61, %59 ]
  br label %68

66:                                               ; preds = %68, %59, %3
  %67 = phi i32 [ 0, %3 ], [ %61, %59 ], [ %88, %68 ]
  ret i32 %67

68:                                               ; preds = %63, %68
  %69 = phi i64 [ %89, %68 ], [ %64, %63 ]
  %70 = phi i32 [ %88, %68 ], [ %65, %63 ]
  %71 = getelementptr inbounds i16, ptr %0, i64 %69
  %72 = load i16, ptr %71, align 2, !tbaa !31
  %73 = sext i16 %72 to i32
  %74 = getelementptr inbounds i16, ptr %1, i64 %69
  %75 = load i16, ptr %74, align 2, !tbaa !31
  %76 = sext i16 %75 to i32
  %77 = mul nsw i32 %76, %73
  %78 = or i64 %69, 1
  %79 = getelementptr inbounds i16, ptr %0, i64 %78
  %80 = load i16, ptr %79, align 2, !tbaa !31
  %81 = sext i16 %80 to i32
  %82 = getelementptr inbounds i16, ptr %1, i64 %78
  %83 = load i16, ptr %82, align 2, !tbaa !31
  %84 = sext i16 %83 to i32
  %85 = mul nsw i32 %84, %81
  %86 = add nsw i32 %85, %77
  %87 = ashr i32 %86, 8
  %88 = add nsw i32 %87, %70
  %89 = add nuw nsw i64 %69, 2
  %90 = icmp ult i64 %89, %8
  br i1 %90, label %68, label %66, !llvm.loop !39
}

; Function Attrs: mustprogress nofree nosync nounwind memory(argmem: readwrite) uwtable
define dso_local void @_Z5trainPsS_ii(ptr nocapture noundef readonly %0, ptr nocapture noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #9 {
  %5 = add nsw i32 %2, 7
  %6 = and i32 %5, -8
  %7 = icmp sgt i32 %6, 0
  br i1 %7, label %8, label %39

8:                                                ; preds = %4
  %9 = zext i32 %6 to i64
  %10 = lshr i32 %5, 3
  %11 = zext i32 %10 to i64
  %12 = shl nuw nsw i64 %11, 4
  %13 = getelementptr i8, ptr %1, i64 %12
  %14 = getelementptr i8, ptr %0, i64 %12
  %15 = icmp ugt ptr %14, %1
  %16 = icmp ugt ptr %13, %0
  %17 = and i1 %15, %16
  br i1 %17, label %40, label %18

18:                                               ; preds = %8
  %19 = insertelement <8 x i32> poison, i32 %3, i64 0
  %20 = shufflevector <8 x i32> %19, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %21

21:                                               ; preds = %21, %18
  %22 = phi i64 [ 0, %18 ], [ %37, %21 ]
  %23 = getelementptr inbounds i16, ptr %1, i64 %22
  %24 = load <8 x i16>, ptr %23, align 2, !tbaa !31, !alias.scope !40, !noalias !43
  %25 = sext <8 x i16> %24 to <8 x i32>
  %26 = getelementptr inbounds i16, ptr %0, i64 %22
  %27 = load <8 x i16>, ptr %26, align 2, !tbaa !31, !alias.scope !43
  %28 = sext <8 x i16> %27 to <8 x i32>
  %29 = mul nsw <8 x i32> %20, %28
  %30 = ashr <8 x i32> %29, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %31 = add nsw <8 x i32> %30, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %32 = ashr <8 x i32> %31, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %33 = add nsw <8 x i32> %32, %25
  %34 = tail call <8 x i32> @llvm.smax.v8i32(<8 x i32> %33, <8 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>)
  %35 = tail call <8 x i32> @llvm.smin.v8i32(<8 x i32> %34, <8 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>)
  %36 = trunc <8 x i32> %35 to <8 x i16>
  store <8 x i16> %36, ptr %23, align 2, !tbaa !31, !alias.scope !40, !noalias !43
  %37 = add nuw i64 %22, 8
  %38 = icmp eq i64 %37, %9
  br i1 %38, label %39, label %21, !llvm.loop !45

39:                                               ; preds = %21, %40, %4
  ret void

40:                                               ; preds = %8, %40
  %41 = phi i64 [ %56, %40 ], [ 0, %8 ]
  %42 = getelementptr inbounds i16, ptr %1, i64 %41
  %43 = load i16, ptr %42, align 2, !tbaa !31
  %44 = sext i16 %43 to i32
  %45 = getelementptr inbounds i16, ptr %0, i64 %41
  %46 = load i16, ptr %45, align 2, !tbaa !31
  %47 = sext i16 %46 to i32
  %48 = mul nsw i32 %47, %3
  %49 = ashr i32 %48, 15
  %50 = add nsw i32 %49, 1
  %51 = ashr i32 %50, 1
  %52 = add nsw i32 %51, %44
  %53 = tail call i32 @llvm.smax.i32(i32 %52, i32 -32768)
  %54 = tail call i32 @llvm.smin.i32(i32 %53, i32 32767)
  %55 = trunc i32 %54 to i16
  store i16 %55, ptr %42, align 2, !tbaa !31
  %56 = add nuw nsw i64 %41, 1
  %57 = icmp eq i64 %56, %9
  br i1 %57, label %39, label %40, !llvm.loop !46
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN5MixerD2Ev(ptr nocapture noundef nonnull readonly align 8 dereferenceable(136) %0) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 10
  %3 = load ptr, ptr %2, align 8, !tbaa !47
  %4 = icmp eq ptr %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5MixerD2Ev(ptr noundef nonnull align 8 dereferenceable(136) %3) #39
  tail call void @_ZdlPv(ptr noundef nonnull %3) #42
  br label %6

6:                                                ; preds = %5, %1
  %7 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9
  %8 = load i32, ptr %7, align 8, !tbaa !51
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = shl i32 %8, 2
  %11 = sub i32 %9, %10
  store i32 %11, ptr @programChecker, align 8, !tbaa !13
  %12 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %13 = icmp sgt i32 %11, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %6
  store i32 %11, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %15

15:                                               ; preds = %6, %14
  %16 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9, i32 2
  %17 = load ptr, ptr %16, align 8, !tbaa !52
  tail call void @free(ptr noundef %17) #39
  %18 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5
  %19 = load i32, ptr %18, align 8, !tbaa !51
  %20 = load i32, ptr @programChecker, align 8, !tbaa !13
  %21 = shl i32 %19, 2
  %22 = sub i32 %20, %21
  store i32 %22, ptr @programChecker, align 8, !tbaa !13
  %23 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %24 = icmp sgt i32 %22, %23
  br i1 %24, label %25, label %26

25:                                               ; preds = %15
  store i32 %22, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %26

26:                                               ; preds = %15, %25
  %27 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 2
  %28 = load ptr, ptr %27, align 8, !tbaa !52
  tail call void @free(ptr noundef %28) #39
  %29 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4
  %30 = load i32, ptr %29, align 8, !tbaa !53
  %31 = shl i32 %30, 1
  %32 = load i32, ptr @programChecker, align 8, !tbaa !13
  %33 = sub i32 %32, %31
  %34 = add i32 %33, -16
  store i32 %34, ptr @programChecker, align 8, !tbaa !13
  %35 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %36 = icmp sgt i32 %34, %35
  br i1 %36, label %37, label %38

37:                                               ; preds = %26
  store i32 %34, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %38

38:                                               ; preds = %26, %37
  %39 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4, i32 2
  %40 = load ptr, ptr %39, align 8, !tbaa !54
  tail call void @free(ptr noundef %40) #39
  %41 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3
  %42 = load i32, ptr %41, align 8, !tbaa !53
  %43 = shl i32 %42, 1
  %44 = load i32, ptr @programChecker, align 8, !tbaa !13
  %45 = sub i32 %44, %43
  %46 = add i32 %45, -16
  store i32 %46, ptr @programChecker, align 8, !tbaa !13
  %47 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %48 = icmp sgt i32 %46, %47
  br i1 %48, label %49, label %50

49:                                               ; preds = %38
  store i32 %46, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %50

50:                                               ; preds = %38, %49
  %51 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 2
  %52 = load ptr, ptr %51, align 8, !tbaa !54
  tail call void @free(ptr noundef %52) #39
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(ptr noundef) local_unnamed_addr #10

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIiLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !51
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = shl i32 %2, 2
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !52
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIsLi16EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !53
  %3 = shl i32 %2, 1
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %5 = sub i32 %4, %3
  %6 = add i32 %5, -16
  store i32 %6, ptr @programChecker, align 8, !tbaa !13
  %7 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %8 = icmp sgt i32 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  store i32 %6, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %10

10:                                               ; preds = %1, %9
  %11 = getelementptr inbounds %class.Array.2, ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !54
  tail call void @free(ptr noundef %12) #39
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN5MixerC2Eiiii(ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %1, i32 noundef %2, i32 noundef %3, i32 noundef %4) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
  %6 = add nsw i32 %1, 7
  %7 = and i32 %6, -8
  store i32 %7, ptr %0, align 8, !tbaa !55
  %8 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 1
  store i32 %2, ptr %8, align 4, !tbaa !56
  %9 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 2
  store i32 %3, ptr %9, align 8, !tbaa !57
  %10 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3
  %11 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 1
  store i32 %7, ptr %11, align 4, !tbaa !58
  store i32 %7, ptr %10, align 8, !tbaa !53
  %12 = icmp slt i32 %7, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %5
  %14 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %14, i8 0, i64 16, i1 false)
  br label %37

15:                                               ; preds = %5
  %16 = shl nuw i32 %7, 1
  %17 = add i32 %16, 16
  %18 = load i32, ptr @programChecker, align 8, !tbaa !13
  %19 = add nsw i32 %18, %17
  store i32 %19, ptr @programChecker, align 8, !tbaa !13
  %20 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %21 = icmp sgt i32 %19, %20
  br i1 %21, label %22, label %23

22:                                               ; preds = %15
  store i32 %19, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %23

23:                                               ; preds = %22, %15
  %24 = sext i32 %17 to i64
  %25 = tail call noalias ptr @calloc(i64 noundef %24, i64 noundef 1) #41
  %26 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 2
  store ptr %25, ptr %26, align 8, !tbaa !54
  %27 = icmp eq ptr %25, null
  br i1 %27, label %28, label %30

28:                                               ; preds = %23
  %29 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %29, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %29, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

30:                                               ; preds = %23
  %31 = getelementptr inbounds i8, ptr %25, i64 16
  %32 = ptrtoint ptr %25 to i64
  %33 = and i64 %32, 15
  %34 = sub nsw i64 0, %33
  %35 = getelementptr inbounds i8, ptr %31, i64 %34
  %36 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  store ptr %35, ptr %36, align 8, !tbaa !59
  br label %37

37:                                               ; preds = %13, %30
  %38 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4
  %39 = mul nsw i32 %7, %2
  %40 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4, i32 1
  store i32 %39, ptr %40, align 4, !tbaa !58
  store i32 %39, ptr %38, align 8, !tbaa !53
  %41 = icmp slt i32 %39, 1
  br i1 %41, label %42, label %44

42:                                               ; preds = %37
  %43 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %43, i8 0, i64 16, i1 false)
  br label %67

44:                                               ; preds = %37
  %45 = shl nuw i32 %39, 1
  %46 = add i32 %45, 16
  %47 = load i32, ptr @programChecker, align 8, !tbaa !13
  %48 = add nsw i32 %47, %46
  store i32 %48, ptr @programChecker, align 8, !tbaa !13
  %49 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %50 = icmp sgt i32 %48, %49
  br i1 %50, label %51, label %52

51:                                               ; preds = %44
  store i32 %48, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %52

52:                                               ; preds = %51, %44
  %53 = sext i32 %46 to i64
  %54 = tail call noalias ptr @calloc(i64 noundef %53, i64 noundef 1) #41
  %55 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4, i32 2
  store ptr %54, ptr %55, align 8, !tbaa !54
  %56 = icmp eq ptr %54, null
  br i1 %56, label %57, label %60

57:                                               ; preds = %52
  %58 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %58, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %58, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %59 unwind label %158

59:                                               ; preds = %57
  unreachable

60:                                               ; preds = %52
  %61 = getelementptr inbounds i8, ptr %54, i64 16
  %62 = ptrtoint ptr %54 to i64
  %63 = and i64 %62, 15
  %64 = sub nsw i64 0, %63
  %65 = getelementptr inbounds i8, ptr %61, i64 %64
  %66 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 4, i32 3
  store ptr %65, ptr %66, align 8, !tbaa !59
  br label %67

67:                                               ; preds = %60, %42
  %68 = phi ptr [ %65, %60 ], [ null, %42 ]
  %69 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5
  %70 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 1
  store i32 %3, ptr %70, align 4, !tbaa !60
  store i32 %3, ptr %69, align 8, !tbaa !51
  %71 = icmp slt i32 %3, 1
  br i1 %71, label %105, label %72

72:                                               ; preds = %67
  %73 = shl i32 %3, 2
  %74 = load i32, ptr @programChecker, align 8, !tbaa !13
  %75 = add nsw i32 %74, %73
  store i32 %75, ptr @programChecker, align 8, !tbaa !13
  %76 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %77 = icmp sgt i32 %75, %76
  br i1 %77, label %78, label %79

78:                                               ; preds = %72
  store i32 %75, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %79

79:                                               ; preds = %78, %72
  %80 = phi i32 [ %75, %78 ], [ %76, %72 ]
  %81 = sext i32 %73 to i64
  %82 = tail call noalias ptr @calloc(i64 noundef %81, i64 noundef 1) #41
  %83 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 2
  store ptr %82, ptr %83, align 8, !tbaa !52
  %84 = icmp eq ptr %82, null
  br i1 %84, label %85, label %88

85:                                               ; preds = %79
  %86 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %86, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %86, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %87 unwind label %160

87:                                               ; preds = %85
  unreachable

88:                                               ; preds = %79
  %89 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 3
  store ptr %82, ptr %89, align 8, !tbaa !61
  %90 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 6
  store i32 0, ptr %90, align 8, !tbaa !62
  %91 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 7
  store i32 0, ptr %91, align 4, !tbaa !63
  %92 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  store i32 0, ptr %92, align 8, !tbaa !64
  %93 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9
  %94 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9, i32 1
  store i32 %3, ptr %94, align 4, !tbaa !60
  store i32 %3, ptr %93, align 8, !tbaa !51
  %95 = add nsw i32 %75, %73
  store i32 %95, ptr @programChecker, align 8, !tbaa !13
  %96 = icmp sgt i32 %95, %80
  br i1 %96, label %97, label %98

97:                                               ; preds = %88
  store i32 %95, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %98

98:                                               ; preds = %97, %88
  %99 = tail call noalias ptr @calloc(i64 noundef %81, i64 noundef 1) #41
  %100 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9, i32 2
  store ptr %99, ptr %100, align 8, !tbaa !52
  %101 = icmp eq ptr %99, null
  br i1 %101, label %102, label %111

102:                                              ; preds = %98
  %103 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %103, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %103, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %104 unwind label %162

104:                                              ; preds = %102
  unreachable

105:                                              ; preds = %67
  %106 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 2
  %107 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9
  %108 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9, i32 1
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(28) %106, i8 0, i64 28, i1 false)
  store i32 %3, ptr %108, align 4, !tbaa !60
  store i32 %3, ptr %107, align 8, !tbaa !51
  %109 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9, i32 2
  %110 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 10
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) %109, i8 0, i64 24, i1 false)
  br label %129

111:                                              ; preds = %98
  %112 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 9, i32 3
  store ptr %99, ptr %112, align 8, !tbaa !61
  %113 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 10
  store ptr null, ptr %113, align 8, !tbaa !47
  %114 = sext i32 %3 to i64
  %115 = tail call i64 @llvm.smax.i64(i64 %114, i64 1)
  %116 = icmp ult i64 %115, 8
  br i1 %116, label %127, label %117

117:                                              ; preds = %111
  %118 = and i64 %115, 9223372036854775800
  br label %119

119:                                              ; preds = %119, %117
  %120 = phi i64 [ 0, %117 ], [ %123, %119 ]
  %121 = getelementptr inbounds i32, ptr %99, i64 %120
  store <4 x i32> <i32 2048, i32 2048, i32 2048, i32 2048>, ptr %121, align 4, !tbaa !25
  %122 = getelementptr inbounds i32, ptr %121, i64 4
  store <4 x i32> <i32 2048, i32 2048, i32 2048, i32 2048>, ptr %122, align 4, !tbaa !25
  %123 = add nuw i64 %120, 8
  %124 = icmp eq i64 %123, %118
  br i1 %124, label %125, label %119, !llvm.loop !65

125:                                              ; preds = %119
  %126 = icmp eq i64 %115, %118
  br i1 %126, label %129, label %127

127:                                              ; preds = %111, %125
  %128 = phi i64 [ 0, %111 ], [ %118, %125 ]
  br label %153

129:                                              ; preds = %153, %125, %105
  %130 = phi ptr [ %110, %105 ], [ %113, %125 ], [ %113, %153 ]
  %131 = phi ptr [ %107, %105 ], [ %93, %125 ], [ %93, %153 ]
  %132 = icmp sgt i32 %39, 0
  br i1 %132, label %133, label %171

133:                                              ; preds = %129
  %134 = trunc i32 %4 to i16
  %135 = zext i32 %39 to i64
  %136 = icmp ult i32 %39, 16
  br i1 %136, label %151, label %137

137:                                              ; preds = %133
  %138 = and i64 %135, 4294967280
  %139 = insertelement <8 x i16> poison, i16 %134, i64 0
  %140 = shufflevector <8 x i16> %139, <8 x i16> poison, <8 x i32> zeroinitializer
  %141 = insertelement <8 x i16> poison, i16 %134, i64 0
  %142 = shufflevector <8 x i16> %141, <8 x i16> poison, <8 x i32> zeroinitializer
  br label %143

143:                                              ; preds = %143, %137
  %144 = phi i64 [ 0, %137 ], [ %147, %143 ]
  %145 = getelementptr inbounds i16, ptr %68, i64 %144
  store <8 x i16> %140, ptr %145, align 2, !tbaa !31
  %146 = getelementptr inbounds i16, ptr %145, i64 8
  store <8 x i16> %142, ptr %146, align 2, !tbaa !31
  %147 = add nuw i64 %144, 16
  %148 = icmp eq i64 %147, %138
  br i1 %148, label %149, label %143, !llvm.loop !66

149:                                              ; preds = %143
  %150 = icmp eq i64 %138, %135
  br i1 %150, label %171, label %151

151:                                              ; preds = %133, %149
  %152 = phi i64 [ 0, %133 ], [ %138, %149 ]
  br label %166

153:                                              ; preds = %127, %153
  %154 = phi i64 [ %156, %153 ], [ %128, %127 ]
  %155 = getelementptr inbounds i32, ptr %99, i64 %154
  store i32 2048, ptr %155, align 4, !tbaa !25
  %156 = add nuw nsw i64 %154, 1
  %157 = icmp slt i64 %156, %114
  br i1 %157, label %153, label %129, !llvm.loop !67

158:                                              ; preds = %57
  %159 = landingpad { ptr, i32 }
          cleanup
  br label %186

160:                                              ; preds = %85
  %161 = landingpad { ptr, i32 }
          cleanup
  br label %184

162:                                              ; preds = %102
  %163 = landingpad { ptr, i32 }
          cleanup
  br label %182

164:                                              ; preds = %173
  %165 = landingpad { ptr, i32 }
          cleanup
  br label %180

166:                                              ; preds = %151, %166
  %167 = phi i64 [ %169, %166 ], [ %152, %151 ]
  %168 = getelementptr inbounds i16, ptr %68, i64 %167
  store i16 %134, ptr %168, align 2, !tbaa !31
  %169 = add nuw nsw i64 %167, 1
  %170 = icmp eq i64 %169, %135
  br i1 %170, label %171, label %166, !llvm.loop !68

171:                                              ; preds = %166, %149, %129
  %172 = icmp sgt i32 %3, 1
  br i1 %172, label %173, label %179

173:                                              ; preds = %171
  %174 = invoke noalias noundef nonnull dereferenceable(136) ptr @_Znwm(i64 noundef 136) #43
          to label %175 unwind label %164

175:                                              ; preds = %173
  invoke void @_ZN5MixerC2Eiiii(ptr noundef nonnull align 8 dereferenceable(136) %174, i32 noundef %3, i32 noundef 1, i32 noundef 1, i32 noundef 32767)
          to label %176 unwind label %177

176:                                              ; preds = %175
  store ptr %174, ptr %130, align 8, !tbaa !47
  br label %179

177:                                              ; preds = %175
  %178 = landingpad { ptr, i32 }
          cleanup
  tail call void @_ZdlPv(ptr noundef nonnull %174) #42
  br label %180

179:                                              ; preds = %176, %171
  ret void

180:                                              ; preds = %177, %164
  %181 = phi { ptr, i32 } [ %178, %177 ], [ %165, %164 ]
  tail call void @_ZN5ArrayIiLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %131) #39
  br label %182

182:                                              ; preds = %180, %162
  %183 = phi { ptr, i32 } [ %181, %180 ], [ %163, %162 ]
  tail call void @_ZN5ArrayIiLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %69) #39
  br label %184

184:                                              ; preds = %182, %160
  %185 = phi { ptr, i32 } [ %183, %182 ], [ %161, %160 ]
  tail call void @_ZN5ArrayIsLi16EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %38) #39
  br label %186

186:                                              ; preds = %184, %158
  %187 = phi { ptr, i32 } [ %185, %184 ], [ %159, %158 ]
  tail call void @_ZN5ArrayIsLi16EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %10) #39
  resume { ptr, i32 } %187
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !60
  store i32 %1, ptr %0, align 8, !tbaa !51
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = shl i32 %1, 2
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #41
  %17 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !52
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %20, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !61
  br label %23

23:                                               ; preds = %5, %21
  ret void
}

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znwm(i64 noundef) local_unnamed_addr #11

; Function Attrs: uwtable
define dso_local void @_ZN4APM1C2Ei(ptr nocapture noundef nonnull writeonly align 8 dereferenceable(32) %0, i32 noundef %1) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
  store i32 0, ptr %0, align 8, !tbaa !69
  %3 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !72
  %4 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2
  %5 = mul nsw i32 %1, 33
  %6 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2, i32 1
  store i32 %5, ptr %6, align 4, !tbaa !73
  store i32 %5, ptr %4, align 8, !tbaa !74
  %7 = icmp slt i32 %1, 1
  br i1 %7, label %22, label %8

8:                                                ; preds = %2
  %9 = mul i32 %1, 66
  %10 = load i32, ptr @programChecker, align 8, !tbaa !13
  %11 = add nsw i32 %10, %9
  store i32 %11, ptr @programChecker, align 8, !tbaa !13
  %12 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %13 = icmp sgt i32 %11, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  store i32 %11, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %15

15:                                               ; preds = %14, %8
  %16 = sext i32 %9 to i64
  %17 = tail call noalias ptr @calloc(i64 noundef %16, i64 noundef 1) #41
  %18 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2, i32 2
  store ptr %17, ptr %18, align 8, !tbaa !75
  %19 = icmp eq ptr %17, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %21, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %21, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %23, i8 0, i64 16, i1 false)
  br label %185

24:                                               ; preds = %15
  %25 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2, i32 3
  store ptr %17, ptr %25, align 8, !tbaa !76
  %26 = zext i32 %1 to i64
  %27 = getelementptr inbounds i16, ptr %17, i64 1
  %28 = getelementptr inbounds i16, ptr %17, i64 2
  %29 = getelementptr inbounds i16, ptr %17, i64 3
  %30 = getelementptr inbounds i16, ptr %17, i64 4
  %31 = getelementptr inbounds i16, ptr %17, i64 5
  %32 = getelementptr inbounds i16, ptr %17, i64 6
  %33 = getelementptr inbounds i16, ptr %17, i64 7
  %34 = getelementptr inbounds i16, ptr %17, i64 8
  %35 = getelementptr inbounds i16, ptr %17, i64 9
  %36 = getelementptr inbounds i16, ptr %17, i64 10
  %37 = getelementptr inbounds i16, ptr %17, i64 11
  %38 = getelementptr inbounds i16, ptr %17, i64 12
  %39 = getelementptr inbounds i16, ptr %17, i64 13
  %40 = getelementptr inbounds i16, ptr %17, i64 14
  %41 = getelementptr inbounds i16, ptr %17, i64 15
  %42 = getelementptr inbounds i16, ptr %17, i64 16
  %43 = getelementptr inbounds i16, ptr %17, i64 17
  %44 = getelementptr inbounds i16, ptr %17, i64 18
  %45 = getelementptr inbounds i16, ptr %17, i64 19
  %46 = getelementptr inbounds i16, ptr %17, i64 20
  %47 = getelementptr inbounds i16, ptr %17, i64 21
  %48 = getelementptr inbounds i16, ptr %17, i64 22
  %49 = getelementptr inbounds i16, ptr %17, i64 23
  %50 = getelementptr inbounds i16, ptr %17, i64 24
  %51 = getelementptr inbounds i16, ptr %17, i64 25
  %52 = getelementptr inbounds i16, ptr %17, i64 26
  %53 = getelementptr inbounds i16, ptr %17, i64 27
  %54 = getelementptr inbounds i16, ptr %17, i64 28
  %55 = getelementptr inbounds i16, ptr %17, i64 29
  %56 = getelementptr inbounds i16, ptr %17, i64 30
  %57 = getelementptr inbounds i16, ptr %17, i64 31
  %58 = getelementptr inbounds i16, ptr %17, i64 32
  br label %59

59:                                               ; preds = %24, %186
  %60 = phi i64 [ 0, %24 ], [ %187, %186 ]
  %61 = icmp eq i64 %60, 0
  %62 = mul i64 %60, 33
  %63 = and i64 %62, 4294967295
  br i1 %61, label %163, label %64

64:                                               ; preds = %59
  %65 = load i16, ptr %17, align 2, !tbaa !31
  %66 = getelementptr inbounds i16, ptr %17, i64 %63
  store i16 %65, ptr %66, align 2, !tbaa !31
  %67 = load i16, ptr %27, align 2, !tbaa !31
  %68 = add nuw nsw i64 %63, 1
  %69 = getelementptr inbounds i16, ptr %17, i64 %68
  store i16 %67, ptr %69, align 2, !tbaa !31
  %70 = load i16, ptr %28, align 2, !tbaa !31
  %71 = add nuw nsw i64 %63, 2
  %72 = getelementptr inbounds i16, ptr %17, i64 %71
  store i16 %70, ptr %72, align 2, !tbaa !31
  %73 = load i16, ptr %29, align 2, !tbaa !31
  %74 = add nuw nsw i64 %63, 3
  %75 = getelementptr inbounds i16, ptr %17, i64 %74
  store i16 %73, ptr %75, align 2, !tbaa !31
  %76 = load i16, ptr %30, align 2, !tbaa !31
  %77 = add nuw nsw i64 %63, 4
  %78 = getelementptr inbounds i16, ptr %17, i64 %77
  store i16 %76, ptr %78, align 2, !tbaa !31
  %79 = load i16, ptr %31, align 2, !tbaa !31
  %80 = add nuw nsw i64 %63, 5
  %81 = getelementptr inbounds i16, ptr %17, i64 %80
  store i16 %79, ptr %81, align 2, !tbaa !31
  %82 = load i16, ptr %32, align 2, !tbaa !31
  %83 = add nuw nsw i64 %63, 6
  %84 = getelementptr inbounds i16, ptr %17, i64 %83
  store i16 %82, ptr %84, align 2, !tbaa !31
  %85 = load i16, ptr %33, align 2, !tbaa !31
  %86 = add nuw nsw i64 %63, 7
  %87 = getelementptr inbounds i16, ptr %17, i64 %86
  store i16 %85, ptr %87, align 2, !tbaa !31
  %88 = load i16, ptr %34, align 2, !tbaa !31
  %89 = add nuw nsw i64 %63, 8
  %90 = getelementptr inbounds i16, ptr %17, i64 %89
  store i16 %88, ptr %90, align 2, !tbaa !31
  %91 = load i16, ptr %35, align 2, !tbaa !31
  %92 = add nuw nsw i64 %63, 9
  %93 = getelementptr inbounds i16, ptr %17, i64 %92
  store i16 %91, ptr %93, align 2, !tbaa !31
  %94 = load i16, ptr %36, align 2, !tbaa !31
  %95 = add nuw nsw i64 %63, 10
  %96 = getelementptr inbounds i16, ptr %17, i64 %95
  store i16 %94, ptr %96, align 2, !tbaa !31
  %97 = load i16, ptr %37, align 2, !tbaa !31
  %98 = add nuw nsw i64 %63, 11
  %99 = getelementptr inbounds i16, ptr %17, i64 %98
  store i16 %97, ptr %99, align 2, !tbaa !31
  %100 = load i16, ptr %38, align 2, !tbaa !31
  %101 = add nuw nsw i64 %63, 12
  %102 = getelementptr inbounds i16, ptr %17, i64 %101
  store i16 %100, ptr %102, align 2, !tbaa !31
  %103 = load i16, ptr %39, align 2, !tbaa !31
  %104 = add nuw nsw i64 %63, 13
  %105 = getelementptr inbounds i16, ptr %17, i64 %104
  store i16 %103, ptr %105, align 2, !tbaa !31
  %106 = load i16, ptr %40, align 2, !tbaa !31
  %107 = add nuw nsw i64 %63, 14
  %108 = getelementptr inbounds i16, ptr %17, i64 %107
  store i16 %106, ptr %108, align 2, !tbaa !31
  %109 = load i16, ptr %41, align 2, !tbaa !31
  %110 = add nuw nsw i64 %63, 15
  %111 = getelementptr inbounds i16, ptr %17, i64 %110
  store i16 %109, ptr %111, align 2, !tbaa !31
  %112 = load i16, ptr %42, align 2, !tbaa !31
  %113 = add nuw nsw i64 %63, 16
  %114 = getelementptr inbounds i16, ptr %17, i64 %113
  store i16 %112, ptr %114, align 2, !tbaa !31
  %115 = load i16, ptr %43, align 2, !tbaa !31
  %116 = add nuw nsw i64 %63, 17
  %117 = getelementptr inbounds i16, ptr %17, i64 %116
  store i16 %115, ptr %117, align 2, !tbaa !31
  %118 = load i16, ptr %44, align 2, !tbaa !31
  %119 = add nuw nsw i64 %63, 18
  %120 = getelementptr inbounds i16, ptr %17, i64 %119
  store i16 %118, ptr %120, align 2, !tbaa !31
  %121 = load i16, ptr %45, align 2, !tbaa !31
  %122 = add nuw nsw i64 %63, 19
  %123 = getelementptr inbounds i16, ptr %17, i64 %122
  store i16 %121, ptr %123, align 2, !tbaa !31
  %124 = load i16, ptr %46, align 2, !tbaa !31
  %125 = add nuw nsw i64 %63, 20
  %126 = getelementptr inbounds i16, ptr %17, i64 %125
  store i16 %124, ptr %126, align 2, !tbaa !31
  %127 = load i16, ptr %47, align 2, !tbaa !31
  %128 = add nuw nsw i64 %63, 21
  %129 = getelementptr inbounds i16, ptr %17, i64 %128
  store i16 %127, ptr %129, align 2, !tbaa !31
  %130 = load i16, ptr %48, align 2, !tbaa !31
  %131 = add nuw nsw i64 %63, 22
  %132 = getelementptr inbounds i16, ptr %17, i64 %131
  store i16 %130, ptr %132, align 2, !tbaa !31
  %133 = load i16, ptr %49, align 2, !tbaa !31
  %134 = add nuw nsw i64 %63, 23
  %135 = getelementptr inbounds i16, ptr %17, i64 %134
  store i16 %133, ptr %135, align 2, !tbaa !31
  %136 = load i16, ptr %50, align 2, !tbaa !31
  %137 = add nuw nsw i64 %63, 24
  %138 = getelementptr inbounds i16, ptr %17, i64 %137
  store i16 %136, ptr %138, align 2, !tbaa !31
  %139 = load i16, ptr %51, align 2, !tbaa !31
  %140 = add nuw nsw i64 %63, 25
  %141 = getelementptr inbounds i16, ptr %17, i64 %140
  store i16 %139, ptr %141, align 2, !tbaa !31
  %142 = load i16, ptr %52, align 2, !tbaa !31
  %143 = add nuw nsw i64 %63, 26
  %144 = getelementptr inbounds i16, ptr %17, i64 %143
  store i16 %142, ptr %144, align 2, !tbaa !31
  %145 = load i16, ptr %53, align 2, !tbaa !31
  %146 = add nuw nsw i64 %63, 27
  %147 = getelementptr inbounds i16, ptr %17, i64 %146
  store i16 %145, ptr %147, align 2, !tbaa !31
  %148 = load i16, ptr %54, align 2, !tbaa !31
  %149 = add nuw nsw i64 %63, 28
  %150 = getelementptr inbounds i16, ptr %17, i64 %149
  store i16 %148, ptr %150, align 2, !tbaa !31
  %151 = load i16, ptr %55, align 2, !tbaa !31
  %152 = add nuw nsw i64 %63, 29
  %153 = getelementptr inbounds i16, ptr %17, i64 %152
  store i16 %151, ptr %153, align 2, !tbaa !31
  %154 = load i16, ptr %56, align 2, !tbaa !31
  %155 = add nuw nsw i64 %63, 30
  %156 = getelementptr inbounds i16, ptr %17, i64 %155
  store i16 %154, ptr %156, align 2, !tbaa !31
  %157 = load i16, ptr %57, align 2, !tbaa !31
  %158 = add nuw nsw i64 %63, 31
  %159 = getelementptr inbounds i16, ptr %17, i64 %158
  store i16 %157, ptr %159, align 2, !tbaa !31
  %160 = load i16, ptr %58, align 2, !tbaa !31
  %161 = add nuw nsw i64 %63, 32
  %162 = getelementptr inbounds i16, ptr %17, i64 %161
  store i16 %160, ptr %162, align 2, !tbaa !31
  br label %186

163:                                              ; preds = %59
  %164 = getelementptr inbounds i16, ptr %17, i64 %63
  store i16 0, ptr %164, align 2, !tbaa !31
  br label %165

165:                                              ; preds = %163, %177
  %166 = phi i64 [ 1, %163 ], [ %183, %177 ]
  %167 = icmp ugt i64 %166, 31
  br i1 %167, label %177, label %168

168:                                              ; preds = %165
  %169 = trunc i64 %166 to i32
  %170 = shl nuw nsw i32 %169, 7
  %171 = add nsw i32 %170, -2048
  %172 = ashr exact i32 %171, 7
  %173 = add nsw i32 %172, 16
  %174 = zext i32 %173 to i64
  %175 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %174
  %176 = load i32, ptr %175, align 4, !tbaa !25
  br label %177

177:                                              ; preds = %168, %165
  %178 = phi i32 [ %176, %168 ], [ 4095, %165 ]
  %179 = trunc i32 %178 to i16
  %180 = shl i16 %179, 4
  %181 = add nuw nsw i64 %166, %63
  %182 = getelementptr inbounds i16, ptr %17, i64 %181
  store i16 %180, ptr %182, align 2, !tbaa !31
  %183 = add nuw nsw i64 %166, 1
  %184 = icmp eq i64 %183, 33
  br i1 %184, label %186, label %165, !llvm.loop !77

185:                                              ; preds = %186, %22
  ret void

186:                                              ; preds = %177, %64
  %187 = add nuw nsw i64 %60, 1
  %188 = icmp eq i64 %187, %26
  br i1 %188, label %185, label %59, !llvm.loop !79
}

; Function Attrs: uwtable
define dso_local void @_ZN8StateMapC2Ei(ptr nocapture noundef nonnull writeonly align 8 dereferenceable(32) %0, i32 noundef %1) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
  store i32 %1, ptr %0, align 8, !tbaa !80
  %3 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 1
  store i32 0, ptr %3, align 4, !tbaa !82
  %4 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2
  %5 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 1
  store i32 %1, ptr %5, align 4, !tbaa !83
  store i32 %1, ptr %4, align 8, !tbaa !10
  %6 = icmp slt i32 %1, 1
  br i1 %6, label %21, label %7

7:                                                ; preds = %2
  %8 = shl i32 %1, 2
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #41
  %17 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !17
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %20, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

21:                                               ; preds = %2
  %22 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %22, i8 0, i64 16, i1 false)
  br label %40

23:                                               ; preds = %14
  %24 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 3
  store ptr %16, ptr %24, align 8, !tbaa !84
  %25 = sext i32 %1 to i64
  %26 = tail call i64 @llvm.smax.i64(i64 %25, i64 1)
  %27 = icmp ult i64 %26, 8
  br i1 %27, label %38, label %28

28:                                               ; preds = %23
  %29 = and i64 %26, 9223372036854775800
  br label %30

30:                                               ; preds = %30, %28
  %31 = phi i64 [ 0, %28 ], [ %34, %30 ]
  %32 = getelementptr inbounds i32, ptr %16, i64 %31
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %32, align 4, !tbaa !25
  %33 = getelementptr inbounds i32, ptr %32, i64 4
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %33, align 4, !tbaa !25
  %34 = add nuw i64 %31, 8
  %35 = icmp eq i64 %34, %29
  br i1 %35, label %36, label %30, !llvm.loop !85

36:                                               ; preds = %30
  %37 = icmp eq i64 %26, %29
  br i1 %37, label %40, label %38

38:                                               ; preds = %23, %36
  %39 = phi i64 [ 0, %23 ], [ %29, %36 ]
  br label %41

40:                                               ; preds = %41, %36, %21
  ret void

41:                                               ; preds = %38, %41
  %42 = phi i64 [ %44, %41 ], [ %39, %38 ]
  %43 = getelementptr inbounds i32, ptr %16, i64 %42
  store i32 -2147483648, ptr %43, align 4, !tbaa !25
  %44 = add nuw nsw i64 %42, 1
  %45 = icmp slt i64 %44, %25
  br i1 %45, label %41, label %40, !llvm.loop !86
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5ArrayIjLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !83
  store i32 %1, ptr %0, align 8, !tbaa !10
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = shl i32 %1, 2
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #41
  %17 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !17
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %20, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !84
  br label %23

23:                                               ; preds = %5, %21
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIjLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !10
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = shl i32 %2, 2
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !17
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: uwtable
define dso_local void @_ZN3APMC2Ei(ptr nocapture noundef nonnull writeonly align 8 dereferenceable(32) %0, i32 noundef %1) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
  %3 = mul nsw i32 %1, 24
  store i32 %3, ptr %0, align 8, !tbaa !80
  %4 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 1
  store i32 0, ptr %4, align 4, !tbaa !82
  %5 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2
  %6 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 1
  store i32 %3, ptr %6, align 4, !tbaa !83
  store i32 %3, ptr %5, align 8, !tbaa !10
  %7 = icmp slt i32 %1, 1
  br i1 %7, label %22, label %8

8:                                                ; preds = %2
  %9 = mul i32 %1, 96
  %10 = load i32, ptr @programChecker, align 8, !tbaa !13
  %11 = add nsw i32 %10, %9
  store i32 %11, ptr @programChecker, align 8, !tbaa !13
  %12 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %13 = icmp sgt i32 %11, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  store i32 %11, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %15

15:                                               ; preds = %14, %8
  %16 = sext i32 %9 to i64
  %17 = tail call noalias ptr @calloc(i64 noundef %16, i64 noundef 1) #41
  %18 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 2
  store ptr %17, ptr %18, align 8, !tbaa !17
  %19 = icmp eq ptr %17, null
  br i1 %19, label %20, label %24

20:                                               ; preds = %15
  %21 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %21, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %21, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

22:                                               ; preds = %2
  %23 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %23, i8 0, i64 16, i1 false)
  br label %50

24:                                               ; preds = %15
  %25 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 3
  store ptr %17, ptr %25, align 8, !tbaa !84
  %26 = tail call i32 @llvm.smax.i32(i32 %3, i32 1)
  %27 = zext i32 %26 to i64
  %28 = icmp ult i32 %26, 8
  br i1 %28, label %39, label %29

29:                                               ; preds = %24
  %30 = and i64 %27, 2147483640
  br label %31

31:                                               ; preds = %31, %29
  %32 = phi i64 [ 0, %29 ], [ %35, %31 ]
  %33 = getelementptr inbounds i32, ptr %17, i64 %32
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %33, align 4, !tbaa !25
  %34 = getelementptr inbounds i32, ptr %33, i64 4
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %34, align 4, !tbaa !25
  %35 = add nuw i64 %32, 8
  %36 = icmp eq i64 %35, %30
  br i1 %36, label %37, label %31, !llvm.loop !87

37:                                               ; preds = %31
  %38 = icmp eq i64 %30, %27
  br i1 %38, label %46, label %39

39:                                               ; preds = %24, %37
  %40 = phi i64 [ 0, %24 ], [ %30, %37 ]
  br label %41

41:                                               ; preds = %39, %41
  %42 = phi i64 [ %44, %41 ], [ %40, %39 ]
  %43 = getelementptr inbounds i32, ptr %17, i64 %42
  store i32 -2147483648, ptr %43, align 4, !tbaa !25
  %44 = add nuw nsw i64 %42, 1
  %45 = icmp eq i64 %44, %27
  br i1 %45, label %46, label %41, !llvm.loop !88

46:                                               ; preds = %41, %37
  %47 = icmp sgt i32 %1, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  %49 = sext i32 %3 to i64
  br label %51

50:                                               ; preds = %77, %22, %46
  ret void

51:                                               ; preds = %48, %77
  %52 = phi i64 [ 0, %48 ], [ %82, %77 ]
  %53 = trunc i64 %52 to i32
  %54 = urem i32 %53, 24
  %55 = shl nuw nsw i32 %54, 13
  %56 = or i32 %55, 4096
  %57 = icmp ugt i32 %56, 196607
  br i1 %57, label %77, label %58

58:                                               ; preds = %51
  %59 = udiv i32 %56, 48
  %60 = add nsw i32 %59, -2048
  %61 = and i32 %59, 127
  %62 = ashr i32 %60, 7
  %63 = add nsw i32 %62, 16
  %64 = zext i32 %63 to i64
  %65 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %64
  %66 = load i32, ptr %65, align 4, !tbaa !25
  %67 = sub nuw nsw i32 128, %61
  %68 = mul nsw i32 %66, %67
  %69 = add nsw i32 %62, 17
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %70
  %72 = load i32, ptr %71, align 4, !tbaa !25
  %73 = mul nsw i32 %72, %61
  %74 = add i32 %68, 64
  %75 = add i32 %74, %73
  %76 = ashr i32 %75, 7
  br label %77

77:                                               ; preds = %51, %58
  %78 = phi i32 [ %76, %58 ], [ 4095, %51 ]
  %79 = shl i32 %78, 20
  %80 = or i32 %79, 6
  %81 = getelementptr inbounds i32, ptr %17, i64 %52
  store i32 %80, ptr %81, align 4, !tbaa !25
  %82 = add nuw nsw i64 %52, 1
  %83 = icmp slt i64 %82, %49
  br i1 %83, label %51, label %50, !llvm.loop !89
}

; Function Attrs: uwtable
define dso_local void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) %0, i32 noundef %1, i32 noundef %2) unnamed_addr #5 align 2 personality ptr @__gxx_personality_v0 {
  store i32 %2, ptr %0, align 8, !tbaa !90
  %4 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2
  %5 = ashr i32 %1, 6
  %6 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2, i32 1
  store i32 %5, ptr %6, align 4, !tbaa !94
  store i32 %5, ptr %4, align 8, !tbaa !95
  %7 = icmp slt i32 %1, 64
  br i1 %7, label %8, label %10

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %9, i8 0, i64 16, i1 false)
  br label %32

10:                                               ; preds = %3
  %11 = and i32 %1, -64
  %12 = add nuw i32 %11, 64
  %13 = load i32, ptr @programChecker, align 8, !tbaa !13
  %14 = add nsw i32 %13, %12
  store i32 %14, ptr @programChecker, align 8, !tbaa !13
  %15 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %16 = icmp sgt i32 %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %10
  store i32 %14, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %18

18:                                               ; preds = %17, %10
  %19 = sext i32 %12 to i64
  %20 = tail call noalias ptr @calloc(i64 noundef %19, i64 noundef 1) #41
  %21 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2, i32 2
  store ptr %20, ptr %21, align 8, !tbaa !96
  %22 = icmp eq ptr %20, null
  br i1 %22, label %23, label %25

23:                                               ; preds = %18
  %24 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %24, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %24, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

25:                                               ; preds = %18
  %26 = getelementptr inbounds i8, ptr %20, i64 64
  %27 = ptrtoint ptr %20 to i64
  %28 = and i64 %27, 63
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds i8, ptr %26, i64 %29
  %31 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2, i32 3
  store ptr %30, ptr %31, align 8, !tbaa !97
  br label %32

32:                                               ; preds = %8, %25
  %33 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3
  %34 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3, i32 1
  store i32 %2, ptr %34, align 4, !tbaa !98
  store i32 %2, ptr %33, align 8, !tbaa !99
  %35 = icmp slt i32 %2, 1
  br i1 %35, label %84, label %36

36:                                               ; preds = %32
  %37 = shl i32 %2, 3
  %38 = load i32, ptr @programChecker, align 8, !tbaa !13
  %39 = add nsw i32 %38, %37
  store i32 %39, ptr @programChecker, align 8, !tbaa !13
  %40 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %41 = icmp sgt i32 %39, %40
  br i1 %41, label %42, label %43

42:                                               ; preds = %36
  store i32 %39, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %43

43:                                               ; preds = %42, %36
  %44 = phi i32 [ %39, %42 ], [ %40, %36 ]
  %45 = sext i32 %37 to i64
  %46 = tail call noalias ptr @calloc(i64 noundef %45, i64 noundef 1) #41
  %47 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3, i32 2
  store ptr %46, ptr %47, align 8, !tbaa !100
  %48 = icmp eq ptr %46, null
  br i1 %48, label %49, label %52

49:                                               ; preds = %43
  %50 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %50, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %50, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %51 unwind label %243

51:                                               ; preds = %49
  unreachable

52:                                               ; preds = %43
  %53 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3, i32 3
  store ptr %46, ptr %53, align 8, !tbaa !101
  %54 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4
  %55 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4, i32 1
  store i32 %2, ptr %55, align 4, !tbaa !98
  store i32 %2, ptr %54, align 8, !tbaa !99
  %56 = add nsw i32 %39, %37
  store i32 %56, ptr @programChecker, align 8, !tbaa !13
  %57 = icmp sgt i32 %56, %44
  br i1 %57, label %58, label %59

58:                                               ; preds = %52
  store i32 %56, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %59

59:                                               ; preds = %58, %52
  %60 = phi i32 [ %56, %58 ], [ %44, %52 ]
  %61 = tail call noalias ptr @calloc(i64 noundef %45, i64 noundef 1) #41
  %62 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4, i32 2
  store ptr %61, ptr %62, align 8, !tbaa !100
  %63 = icmp eq ptr %61, null
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %65, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %65, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %66 unwind label %245

66:                                               ; preds = %64
  unreachable

67:                                               ; preds = %59
  %68 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4, i32 3
  store ptr %61, ptr %68, align 8, !tbaa !101
  %69 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5
  %70 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5, i32 1
  store i32 %2, ptr %70, align 4, !tbaa !83
  store i32 %2, ptr %69, align 8, !tbaa !10
  %71 = shl i32 %2, 2
  %72 = add nsw i32 %56, %71
  store i32 %72, ptr @programChecker, align 8, !tbaa !13
  %73 = icmp sgt i32 %72, %60
  br i1 %73, label %74, label %75

74:                                               ; preds = %67
  store i32 %72, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %75

75:                                               ; preds = %74, %67
  %76 = phi i32 [ %72, %74 ], [ %60, %67 ]
  %77 = sext i32 %71 to i64
  %78 = tail call noalias ptr @calloc(i64 noundef %77, i64 noundef 1) #41
  %79 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5, i32 2
  store ptr %78, ptr %79, align 8, !tbaa !17
  %80 = icmp eq ptr %78, null
  br i1 %80, label %81, label %95

81:                                               ; preds = %75
  %82 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %82, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %82, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %83 unwind label %247

83:                                               ; preds = %81
  unreachable

84:                                               ; preds = %32
  %85 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %85, i8 0, i64 16, i1 false)
  %86 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4
  %87 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4, i32 1
  store i32 %2, ptr %87, align 4, !tbaa !98
  store i32 %2, ptr %86, align 8, !tbaa !99
  %88 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %88, i8 0, i64 16, i1 false)
  %89 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5
  %90 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5, i32 1
  store i32 %2, ptr %90, align 4, !tbaa !83
  store i32 %2, ptr %89, align 8, !tbaa !10
  %91 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %91, i8 0, i64 16, i1 false)
  %92 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6
  %93 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6, i32 1
  store i32 %2, ptr %93, align 4, !tbaa !98
  store i32 %2, ptr %92, align 8, !tbaa !99
  %94 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %94, i8 0, i64 16, i1 false)
  br label %111

95:                                               ; preds = %75
  %96 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5, i32 3
  store ptr %78, ptr %96, align 8, !tbaa !84
  %97 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6
  %98 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6, i32 1
  store i32 %2, ptr %98, align 4, !tbaa !98
  store i32 %2, ptr %97, align 8, !tbaa !99
  %99 = add nsw i32 %72, %37
  store i32 %99, ptr @programChecker, align 8, !tbaa !13
  %100 = icmp sgt i32 %99, %76
  br i1 %100, label %101, label %102

101:                                              ; preds = %95
  store i32 %99, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %102

102:                                              ; preds = %101, %95
  %103 = tail call noalias ptr @calloc(i64 noundef %45, i64 noundef 1) #41
  %104 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6, i32 2
  store ptr %103, ptr %104, align 8, !tbaa !100
  %105 = icmp eq ptr %103, null
  br i1 %105, label %106, label %109

106:                                              ; preds = %102
  %107 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %107, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %107, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %108 unwind label %249

108:                                              ; preds = %106
  unreachable

109:                                              ; preds = %102
  %110 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6, i32 3
  store ptr %103, ptr %110, align 8, !tbaa !101
  br label %111

111:                                              ; preds = %109, %84
  %112 = phi ptr [ %97, %109 ], [ %92, %84 ]
  %113 = phi ptr [ %54, %109 ], [ %86, %84 ]
  %114 = phi ptr [ %69, %109 ], [ %89, %84 ]
  %115 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 8
  store i32 0, ptr %115, align 8, !tbaa !102
  %116 = sext i32 %2 to i64
  %117 = icmp slt i32 %2, 0
  %118 = shl nsw i64 %116, 5
  %119 = or i64 %118, 8
  %120 = select i1 %117, i64 -1, i64 %119
  %121 = invoke noalias noundef nonnull ptr @_Znam(i64 noundef %120) #43
          to label %122 unwind label %251

122:                                              ; preds = %111
  store i64 %116, ptr %121, align 16
  %123 = getelementptr inbounds i8, ptr %121, i64 8
  %124 = icmp eq i32 %2, 0
  br i1 %124, label %125, label %127

125:                                              ; preds = %122
  %126 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 7
  store ptr %123, ptr %126, align 8, !tbaa !103
  br label %242

127:                                              ; preds = %122
  %128 = getelementptr inbounds %class.StateMap, ptr %123, i64 %116
  %129 = load i32, ptr @programChecker, align 8, !tbaa !13
  %130 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %131

131:                                              ; preds = %146, %127
  %132 = phi i32 [ %130, %127 ], [ %139, %146 ]
  %133 = phi i32 [ %129, %127 ], [ %135, %146 ]
  %134 = phi ptr [ %123, %127 ], [ %211, %146 ]
  store <4 x i32> <i32 256, i32 0, i32 256, i32 256>, ptr %134, align 8, !tbaa !25
  %135 = add nsw i32 %133, 1024
  %136 = icmp sgt i32 %135, %132
  br i1 %136, label %137, label %138

137:                                              ; preds = %131
  store i32 %135, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %138

138:                                              ; preds = %137, %131
  %139 = phi i32 [ %135, %137 ], [ %132, %131 ]
  %140 = tail call noalias dereferenceable_or_null(1024) ptr @calloc(i64 noundef 1024, i64 noundef 1) #41
  %141 = getelementptr inbounds %class.StateMap, ptr %134, i64 0, i32 2, i32 2
  store ptr %140, ptr %141, align 8, !tbaa !17
  %142 = icmp eq ptr %140, null
  br i1 %142, label %143, label %146

143:                                              ; preds = %138
  store i32 %135, ptr @programChecker, align 8, !tbaa !13
  %144 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %144, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %144, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %145 unwind label %253

145:                                              ; preds = %143
  unreachable

146:                                              ; preds = %138
  %147 = getelementptr inbounds %class.StateMap, ptr %134, i64 0, i32 2, i32 3
  store ptr %140, ptr %147, align 8, !tbaa !84
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %140, align 4, !tbaa !25
  %148 = getelementptr inbounds i32, ptr %140, i64 4
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %148, align 4, !tbaa !25
  %149 = getelementptr inbounds i32, ptr %140, i64 8
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %149, align 4, !tbaa !25
  %150 = getelementptr inbounds i32, ptr %140, i64 12
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %150, align 4, !tbaa !25
  %151 = getelementptr inbounds i32, ptr %140, i64 16
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %151, align 4, !tbaa !25
  %152 = getelementptr inbounds i32, ptr %140, i64 20
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %152, align 4, !tbaa !25
  %153 = getelementptr inbounds i32, ptr %140, i64 24
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %153, align 4, !tbaa !25
  %154 = getelementptr inbounds i32, ptr %140, i64 28
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %154, align 4, !tbaa !25
  %155 = getelementptr inbounds i32, ptr %140, i64 32
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %155, align 4, !tbaa !25
  %156 = getelementptr inbounds i32, ptr %140, i64 36
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %156, align 4, !tbaa !25
  %157 = getelementptr inbounds i32, ptr %140, i64 40
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %157, align 4, !tbaa !25
  %158 = getelementptr inbounds i32, ptr %140, i64 44
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %158, align 4, !tbaa !25
  %159 = getelementptr inbounds i32, ptr %140, i64 48
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %159, align 4, !tbaa !25
  %160 = getelementptr inbounds i32, ptr %140, i64 52
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %160, align 4, !tbaa !25
  %161 = getelementptr inbounds i32, ptr %140, i64 56
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %161, align 4, !tbaa !25
  %162 = getelementptr inbounds i32, ptr %140, i64 60
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %162, align 4, !tbaa !25
  %163 = getelementptr inbounds i32, ptr %140, i64 64
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %163, align 4, !tbaa !25
  %164 = getelementptr inbounds i32, ptr %140, i64 68
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %164, align 4, !tbaa !25
  %165 = getelementptr inbounds i32, ptr %140, i64 72
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %165, align 4, !tbaa !25
  %166 = getelementptr inbounds i32, ptr %140, i64 76
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %166, align 4, !tbaa !25
  %167 = getelementptr inbounds i32, ptr %140, i64 80
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %167, align 4, !tbaa !25
  %168 = getelementptr inbounds i32, ptr %140, i64 84
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %168, align 4, !tbaa !25
  %169 = getelementptr inbounds i32, ptr %140, i64 88
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %169, align 4, !tbaa !25
  %170 = getelementptr inbounds i32, ptr %140, i64 92
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %170, align 4, !tbaa !25
  %171 = getelementptr inbounds i32, ptr %140, i64 96
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %171, align 4, !tbaa !25
  %172 = getelementptr inbounds i32, ptr %140, i64 100
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %172, align 4, !tbaa !25
  %173 = getelementptr inbounds i32, ptr %140, i64 104
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %173, align 4, !tbaa !25
  %174 = getelementptr inbounds i32, ptr %140, i64 108
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %174, align 4, !tbaa !25
  %175 = getelementptr inbounds i32, ptr %140, i64 112
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %175, align 4, !tbaa !25
  %176 = getelementptr inbounds i32, ptr %140, i64 116
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %176, align 4, !tbaa !25
  %177 = getelementptr inbounds i32, ptr %140, i64 120
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %177, align 4, !tbaa !25
  %178 = getelementptr inbounds i32, ptr %140, i64 124
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %178, align 4, !tbaa !25
  %179 = getelementptr inbounds i32, ptr %140, i64 128
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %179, align 4, !tbaa !25
  %180 = getelementptr inbounds i32, ptr %140, i64 132
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %180, align 4, !tbaa !25
  %181 = getelementptr inbounds i32, ptr %140, i64 136
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %181, align 4, !tbaa !25
  %182 = getelementptr inbounds i32, ptr %140, i64 140
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %182, align 4, !tbaa !25
  %183 = getelementptr inbounds i32, ptr %140, i64 144
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %183, align 4, !tbaa !25
  %184 = getelementptr inbounds i32, ptr %140, i64 148
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %184, align 4, !tbaa !25
  %185 = getelementptr inbounds i32, ptr %140, i64 152
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %185, align 4, !tbaa !25
  %186 = getelementptr inbounds i32, ptr %140, i64 156
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %186, align 4, !tbaa !25
  %187 = getelementptr inbounds i32, ptr %140, i64 160
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %187, align 4, !tbaa !25
  %188 = getelementptr inbounds i32, ptr %140, i64 164
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %188, align 4, !tbaa !25
  %189 = getelementptr inbounds i32, ptr %140, i64 168
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %189, align 4, !tbaa !25
  %190 = getelementptr inbounds i32, ptr %140, i64 172
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %190, align 4, !tbaa !25
  %191 = getelementptr inbounds i32, ptr %140, i64 176
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %191, align 4, !tbaa !25
  %192 = getelementptr inbounds i32, ptr %140, i64 180
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %192, align 4, !tbaa !25
  %193 = getelementptr inbounds i32, ptr %140, i64 184
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %193, align 4, !tbaa !25
  %194 = getelementptr inbounds i32, ptr %140, i64 188
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %194, align 4, !tbaa !25
  %195 = getelementptr inbounds i32, ptr %140, i64 192
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %195, align 4, !tbaa !25
  %196 = getelementptr inbounds i32, ptr %140, i64 196
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %196, align 4, !tbaa !25
  %197 = getelementptr inbounds i32, ptr %140, i64 200
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %197, align 4, !tbaa !25
  %198 = getelementptr inbounds i32, ptr %140, i64 204
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %198, align 4, !tbaa !25
  %199 = getelementptr inbounds i32, ptr %140, i64 208
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %199, align 4, !tbaa !25
  %200 = getelementptr inbounds i32, ptr %140, i64 212
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %200, align 4, !tbaa !25
  %201 = getelementptr inbounds i32, ptr %140, i64 216
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %201, align 4, !tbaa !25
  %202 = getelementptr inbounds i32, ptr %140, i64 220
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %202, align 4, !tbaa !25
  %203 = getelementptr inbounds i32, ptr %140, i64 224
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %203, align 4, !tbaa !25
  %204 = getelementptr inbounds i32, ptr %140, i64 228
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %204, align 4, !tbaa !25
  %205 = getelementptr inbounds i32, ptr %140, i64 232
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %205, align 4, !tbaa !25
  %206 = getelementptr inbounds i32, ptr %140, i64 236
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %206, align 4, !tbaa !25
  %207 = getelementptr inbounds i32, ptr %140, i64 240
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %207, align 4, !tbaa !25
  %208 = getelementptr inbounds i32, ptr %140, i64 244
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %208, align 4, !tbaa !25
  %209 = getelementptr inbounds i32, ptr %140, i64 248
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %209, align 4, !tbaa !25
  %210 = getelementptr inbounds i32, ptr %140, i64 252
  store <4 x i32> <i32 -2147483648, i32 -2147483648, i32 -2147483648, i32 -2147483648>, ptr %210, align 4, !tbaa !25
  %211 = getelementptr inbounds %class.StateMap, ptr %134, i64 1
  %212 = icmp eq ptr %211, %128
  br i1 %212, label %213, label %131

213:                                              ; preds = %146
  store i32 %135, ptr @programChecker, align 8, !tbaa !13
  %214 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 7
  store ptr %123, ptr %214, align 8, !tbaa !103
  %215 = icmp sgt i32 %2, 0
  br i1 %215, label %216, label %242

216:                                              ; preds = %213
  %217 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2, i32 3
  %218 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3, i32 3
  %219 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4, i32 3
  %220 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6, i32 3
  %221 = zext i32 %2 to i64
  %222 = and i64 %221, 1
  %223 = icmp eq i32 %2, 1
  br i1 %223, label %226, label %224

224:                                              ; preds = %216
  %225 = and i64 %221, 4294967294
  br label %261

226:                                              ; preds = %261, %216
  %227 = phi i64 [ 0, %216 ], [ %289, %261 ]
  %228 = icmp eq i64 %222, 0
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = load ptr, ptr %217, align 8, !tbaa !97
  %231 = getelementptr inbounds %"class.ContextMap::E", ptr %230, i64 0, i32 2
  %232 = load ptr, ptr %218, align 8, !tbaa !101
  %233 = getelementptr inbounds ptr, ptr %232, i64 %227
  store ptr %231, ptr %233, align 8, !tbaa !5
  %234 = load ptr, ptr %219, align 8, !tbaa !101
  %235 = getelementptr inbounds ptr, ptr %234, i64 %227
  store ptr %231, ptr %235, align 8, !tbaa !5
  %236 = load ptr, ptr %218, align 8, !tbaa !101
  %237 = getelementptr inbounds ptr, ptr %236, i64 %227
  %238 = load ptr, ptr %237, align 8, !tbaa !5
  %239 = getelementptr inbounds i8, ptr %238, i64 3
  %240 = load ptr, ptr %220, align 8, !tbaa !101
  %241 = getelementptr inbounds ptr, ptr %240, i64 %227
  store ptr %239, ptr %241, align 8, !tbaa !5
  br label %242

242:                                              ; preds = %229, %226, %125, %213
  ret void

243:                                              ; preds = %49
  %244 = landingpad { ptr, i32 }
          cleanup
  br label %303

245:                                              ; preds = %64
  %246 = landingpad { ptr, i32 }
          cleanup
  br label %301

247:                                              ; preds = %81
  %248 = landingpad { ptr, i32 }
          cleanup
  br label %298

249:                                              ; preds = %106
  %250 = landingpad { ptr, i32 }
          cleanup
  br label %294

251:                                              ; preds = %111
  %252 = landingpad { ptr, i32 }
          cleanup
  br label %292

253:                                              ; preds = %143
  %254 = landingpad { ptr, i32 }
          cleanup
  %255 = icmp eq ptr %123, %134
  br i1 %255, label %260, label %256

256:                                              ; preds = %253, %256
  %257 = phi ptr [ %258, %256 ], [ %134, %253 ]
  %258 = getelementptr inbounds %class.StateMap, ptr %257, i64 -1
  tail call void @_ZN8StateMapD2Ev(ptr noundef nonnull align 8 dereferenceable(32) %258) #39
  %259 = icmp eq ptr %258, %123
  br i1 %259, label %260, label %256

260:                                              ; preds = %256, %253
  tail call void @_ZdaPv(ptr noundef nonnull %121) #42
  br label %292

261:                                              ; preds = %261, %224
  %262 = phi i64 [ 0, %224 ], [ %289, %261 ]
  %263 = phi i64 [ 0, %224 ], [ %290, %261 ]
  %264 = load ptr, ptr %217, align 8, !tbaa !97
  %265 = getelementptr inbounds %"class.ContextMap::E", ptr %264, i64 0, i32 2
  %266 = load ptr, ptr %218, align 8, !tbaa !101
  %267 = getelementptr inbounds ptr, ptr %266, i64 %262
  store ptr %265, ptr %267, align 8, !tbaa !5
  %268 = load ptr, ptr %219, align 8, !tbaa !101
  %269 = getelementptr inbounds ptr, ptr %268, i64 %262
  store ptr %265, ptr %269, align 8, !tbaa !5
  %270 = load ptr, ptr %218, align 8, !tbaa !101
  %271 = getelementptr inbounds ptr, ptr %270, i64 %262
  %272 = load ptr, ptr %271, align 8, !tbaa !5
  %273 = getelementptr inbounds i8, ptr %272, i64 3
  %274 = load ptr, ptr %220, align 8, !tbaa !101
  %275 = getelementptr inbounds ptr, ptr %274, i64 %262
  store ptr %273, ptr %275, align 8, !tbaa !5
  %276 = or i64 %262, 1
  %277 = load ptr, ptr %217, align 8, !tbaa !97
  %278 = getelementptr inbounds %"class.ContextMap::E", ptr %277, i64 0, i32 2
  %279 = load ptr, ptr %218, align 8, !tbaa !101
  %280 = getelementptr inbounds ptr, ptr %279, i64 %276
  store ptr %278, ptr %280, align 8, !tbaa !5
  %281 = load ptr, ptr %219, align 8, !tbaa !101
  %282 = getelementptr inbounds ptr, ptr %281, i64 %276
  store ptr %278, ptr %282, align 8, !tbaa !5
  %283 = load ptr, ptr %218, align 8, !tbaa !101
  %284 = getelementptr inbounds ptr, ptr %283, i64 %276
  %285 = load ptr, ptr %284, align 8, !tbaa !5
  %286 = getelementptr inbounds i8, ptr %285, i64 3
  %287 = load ptr, ptr %220, align 8, !tbaa !101
  %288 = getelementptr inbounds ptr, ptr %287, i64 %276
  store ptr %286, ptr %288, align 8, !tbaa !5
  %289 = add nuw nsw i64 %262, 2
  %290 = add i64 %263, 2
  %291 = icmp eq i64 %290, %225
  br i1 %291, label %226, label %261, !llvm.loop !104

292:                                              ; preds = %260, %251
  %293 = phi { ptr, i32 } [ %254, %260 ], [ %252, %251 ]
  tail call void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %112) #39
  br label %294

294:                                              ; preds = %292, %249
  %295 = phi ptr [ %113, %292 ], [ %54, %249 ]
  %296 = phi ptr [ %114, %292 ], [ %69, %249 ]
  %297 = phi { ptr, i32 } [ %293, %292 ], [ %250, %249 ]
  tail call void @_ZN5ArrayIjLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %296) #39
  br label %298

298:                                              ; preds = %294, %247
  %299 = phi ptr [ %295, %294 ], [ %54, %247 ]
  %300 = phi { ptr, i32 } [ %297, %294 ], [ %248, %247 ]
  tail call void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %299) #39
  br label %301

301:                                              ; preds = %298, %245
  %302 = phi { ptr, i32 } [ %300, %298 ], [ %246, %245 ]
  tail call void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %33) #39
  br label %303

303:                                              ; preds = %301, %243
  %304 = phi { ptr, i32 } [ %302, %301 ], [ %244, %243 ]
  tail call void @_ZN5ArrayIN10ContextMap1EELi64EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %4) #39
  resume { ptr, i32 } %304
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5ArrayIPhLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.6, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !98
  store i32 %1, ptr %0, align 8, !tbaa !99
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array.6, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = shl i32 %1, 3
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #41
  %17 = getelementptr inbounds %class.Array.6, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !100
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %20, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array.6, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !101
  br label %23

23:                                               ; preds = %5, %21
  ret void
}

; Function Attrs: nobuiltin allocsize(0)
declare noundef nonnull ptr @_Znam(i64 noundef) local_unnamed_addr #11

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN8StateMapD2Ev(ptr noundef nonnull align 8 dereferenceable(32) %0) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 8, !tbaa !10
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %5 = shl i32 %3, 2
  %6 = sub i32 %4, %5
  store i32 %6, ptr @programChecker, align 8, !tbaa !13
  %7 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %8 = icmp sgt i32 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  store i32 %6, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %10

10:                                               ; preds = %1, %9
  %11 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !17
  tail call void @free(ptr noundef %12) #39
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(ptr noundef) local_unnamed_addr #10

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIPhLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !99
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = shl i32 %2, 3
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array.6, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !100
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIN10ContextMap1EELi64EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !95
  %3 = shl i32 %2, 6
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %5 = sub i32 %4, %3
  %6 = add i32 %5, -64
  store i32 %6, ptr @programChecker, align 8, !tbaa !13
  %7 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %8 = icmp sgt i32 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  store i32 %6, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %10

10:                                               ; preds = %1, %9
  %11 = getelementptr inbounds %class.Array.5, ptr %0, i64 0, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !96
  tail call void @free(ptr noundef %12) #39
  ret void
}

; Function Attrs: nounwind uwtable
define dso_local void @_ZN10ContextMapD2Ev(ptr nocapture noundef nonnull readonly align 8 dereferenceable(140) %0) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 7
  %3 = load ptr, ptr %2, align 8, !tbaa !103
  %4 = icmp eq ptr %3, null
  br i1 %4, label %27, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds i8, ptr %3, i64 -8
  %7 = load i64, ptr %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %26, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.StateMap, ptr %3, i64 %7
  br label %11

11:                                               ; preds = %9, %22
  %12 = phi ptr [ %13, %22 ], [ %10, %9 ]
  %13 = getelementptr inbounds %class.StateMap, ptr %12, i64 -1
  %14 = getelementptr %class.StateMap, ptr %12, i64 -1, i32 2
  %15 = load i32, ptr %14, align 8, !tbaa !10
  %16 = load i32, ptr @programChecker, align 8, !tbaa !13
  %17 = shl i32 %15, 2
  %18 = sub i32 %16, %17
  store i32 %18, ptr @programChecker, align 8, !tbaa !13
  %19 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %20 = icmp sgt i32 %18, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %11
  store i32 %18, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %22

22:                                               ; preds = %11, %21
  %23 = getelementptr %class.StateMap, ptr %12, i64 -1, i32 2, i32 2
  %24 = load ptr, ptr %23, align 8, !tbaa !17
  tail call void @free(ptr noundef %24) #39
  %25 = icmp eq ptr %13, %3
  br i1 %25, label %26, label %11

26:                                               ; preds = %22, %5
  tail call void @_ZdaPv(ptr noundef nonnull %6) #42
  br label %27

27:                                               ; preds = %26, %1
  %28 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6
  %29 = load i32, ptr %28, align 8, !tbaa !99
  %30 = load i32, ptr @programChecker, align 8, !tbaa !13
  %31 = shl i32 %29, 3
  %32 = sub i32 %30, %31
  store i32 %32, ptr @programChecker, align 8, !tbaa !13
  %33 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %34 = icmp sgt i32 %32, %33
  br i1 %34, label %35, label %36

35:                                               ; preds = %27
  store i32 %32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %36

36:                                               ; preds = %27, %35
  %37 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6, i32 2
  %38 = load ptr, ptr %37, align 8, !tbaa !100
  tail call void @free(ptr noundef %38) #39
  %39 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5
  %40 = load i32, ptr %39, align 8, !tbaa !10
  %41 = load i32, ptr @programChecker, align 8, !tbaa !13
  %42 = shl i32 %40, 2
  %43 = sub i32 %41, %42
  store i32 %43, ptr @programChecker, align 8, !tbaa !13
  %44 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %45 = icmp sgt i32 %43, %44
  br i1 %45, label %46, label %47

46:                                               ; preds = %36
  store i32 %43, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %47

47:                                               ; preds = %36, %46
  %48 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5, i32 2
  %49 = load ptr, ptr %48, align 8, !tbaa !17
  tail call void @free(ptr noundef %49) #39
  %50 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4
  %51 = load i32, ptr %50, align 8, !tbaa !99
  %52 = load i32, ptr @programChecker, align 8, !tbaa !13
  %53 = shl i32 %51, 3
  %54 = sub i32 %52, %53
  store i32 %54, ptr @programChecker, align 8, !tbaa !13
  %55 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %56 = icmp sgt i32 %54, %55
  br i1 %56, label %57, label %58

57:                                               ; preds = %47
  store i32 %54, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %58

58:                                               ; preds = %47, %57
  %59 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4, i32 2
  %60 = load ptr, ptr %59, align 8, !tbaa !100
  tail call void @free(ptr noundef %60) #39
  %61 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3
  %62 = load i32, ptr %61, align 8, !tbaa !99
  %63 = load i32, ptr @programChecker, align 8, !tbaa !13
  %64 = shl i32 %62, 3
  %65 = sub i32 %63, %64
  store i32 %65, ptr @programChecker, align 8, !tbaa !13
  %66 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %67 = icmp sgt i32 %65, %66
  br i1 %67, label %68, label %69

68:                                               ; preds = %58
  store i32 %65, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %69

69:                                               ; preds = %58, %68
  %70 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3, i32 2
  %71 = load ptr, ptr %70, align 8, !tbaa !100
  tail call void @free(ptr noundef %71) #39
  %72 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2
  %73 = load i32, ptr %72, align 8, !tbaa !95
  %74 = shl i32 %73, 6
  %75 = load i32, ptr @programChecker, align 8, !tbaa !13
  %76 = sub i32 %75, %74
  %77 = add i32 %76, -64
  store i32 %77, ptr @programChecker, align 8, !tbaa !13
  %78 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %79 = icmp sgt i32 %77, %78
  br i1 %79, label %80, label %81

80:                                               ; preds = %69
  store i32 %77, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %81

81:                                               ; preds = %69, %80
  %82 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2, i32 2
  %83 = load ptr, ptr %82, align 8, !tbaa !96
  tail call void @free(ptr noundef %83) #39
  ret void
}

; Function Attrs: mustprogress nounwind uwtable
define dso_local noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr nocapture noundef nonnull align 8 dereferenceable(140) %0, ptr nocapture noundef nonnull align 8 dereferenceable(136) %1, i32 noundef %2, i32 noundef %3, i32 noundef %4, i32 noundef %5) local_unnamed_addr #12 align 2 {
  %7 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 8
  %8 = load i32, ptr %7, align 8, !tbaa !102
  %9 = icmp sgt i32 %8, 0
  br i1 %9, label %10, label %29

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 3, i32 3
  %12 = sext i32 %5 to i64
  %13 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 6, i32 3
  %14 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2
  %15 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 5, i32 3
  %16 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 2, i32 3
  %17 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 4, i32 3
  %18 = and i32 %2, 3
  %19 = zext i32 %18 to i64
  %20 = and i32 %2, 1
  %21 = zext i32 %20 to i64
  %22 = trunc i32 %4 to i8
  %23 = sub nsw i32 8, %3
  %24 = getelementptr inbounds %class.Mixer, ptr %1, i64 0, i32 8
  %25 = getelementptr inbounds %class.Mixer, ptr %1, i64 0, i32 3, i32 3
  %26 = sub nsw i32 7, %3
  %27 = getelementptr inbounds %class.ContextMap, ptr %0, i64 0, i32 7
  %28 = load ptr, ptr %11, align 8, !tbaa !101
  br label %32

29:                                               ; preds = %403, %6
  %30 = phi i32 [ 0, %6 ], [ %404, %403 ]
  %31 = icmp eq i32 %3, 7
  br i1 %31, label %409, label %410

32:                                               ; preds = %10, %403
  %33 = phi ptr [ %28, %10 ], [ %276, %403 ]
  %34 = phi i64 [ 0, %10 ], [ %405, %403 ]
  %35 = phi i32 [ 0, %10 ], [ %404, %403 ]
  %36 = getelementptr inbounds ptr, ptr %33, i64 %34
  %37 = load ptr, ptr %36, align 8, !tbaa !5
  %38 = icmp eq ptr %37, null
  br i1 %38, label %72, label %39

39:                                               ; preds = %32
  %40 = load i8, ptr %37, align 1, !tbaa !9
  %41 = zext i8 %40 to i64
  %42 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %41, i64 %12
  %43 = load i8, ptr %42, align 1, !tbaa !9
  %44 = icmp ugt i8 %43, -53
  br i1 %44, label %45, label %70

45:                                               ; preds = %39
  %46 = zext i8 %43 to i32
  %47 = load i32, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 1), align 8, !tbaa !105
  %48 = add nsw i32 %47, 1
  store i32 %48, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 1), align 8, !tbaa !105
  %49 = add i32 %47, 41
  %50 = and i32 %49, 63
  %51 = load ptr, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 0, i32 3), align 8, !tbaa !84
  %52 = zext i32 %50 to i64
  %53 = getelementptr inbounds i32, ptr %51, i64 %52
  %54 = load i32, ptr %53, align 4, !tbaa !25
  %55 = add i32 %47, 10
  %56 = and i32 %55, 63
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i32, ptr %51, i64 %57
  %59 = load i32, ptr %58, align 4, !tbaa !25
  %60 = xor i32 %59, %54
  %61 = and i32 %48, 63
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds i32, ptr %51, i64 %62
  store i32 %60, ptr %63, align 4, !tbaa !25
  %64 = sub nuw nsw i32 452, %46
  %65 = lshr i32 %64, 3
  %66 = shl i32 %60, %65
  %67 = icmp eq i32 %66, 0
  %68 = add nsw i8 %43, -4
  %69 = select i1 %67, i8 %43, i8 %68
  br label %70

70:                                               ; preds = %45, %39
  %71 = phi i8 [ %43, %39 ], [ %69, %45 ]
  store i8 %71, ptr %37, align 1, !tbaa !9
  br label %72

72:                                               ; preds = %70, %32
  %73 = load i32, ptr @bpos, align 4, !tbaa !25
  %74 = icmp sgt i32 %73, 1
  br i1 %74, label %75, label %81

75:                                               ; preds = %72
  %76 = load ptr, ptr %13, align 8, !tbaa !101
  %77 = getelementptr inbounds ptr, ptr %76, i64 %34
  %78 = load ptr, ptr %77, align 8, !tbaa !5
  %79 = load i8, ptr %78, align 1, !tbaa !9
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %237, label %81

81:                                               ; preds = %75, %72
  switch i32 %73, label %110 [
    i32 1, label %82
    i32 3, label %82
    i32 6, label %82
    i32 4, label %88
    i32 7, label %88
    i32 2, label %94
    i32 5, label %94
  ]

82:                                               ; preds = %81, %81, %81
  %83 = load ptr, ptr %17, align 8, !tbaa !101
  %84 = getelementptr inbounds ptr, ptr %83, i64 %34
  %85 = load ptr, ptr %84, align 8, !tbaa !5
  %86 = getelementptr inbounds i8, ptr %85, i64 1
  %87 = getelementptr inbounds i8, ptr %86, i64 %21
  br label %237

88:                                               ; preds = %81, %81
  %89 = load ptr, ptr %17, align 8, !tbaa !101
  %90 = getelementptr inbounds ptr, ptr %89, i64 %34
  %91 = load ptr, ptr %90, align 8, !tbaa !5
  %92 = getelementptr inbounds i8, ptr %91, i64 3
  %93 = getelementptr inbounds i8, ptr %92, i64 %19
  br label %237

94:                                               ; preds = %81, %81
  %95 = load ptr, ptr %15, align 8, !tbaa !84
  %96 = getelementptr inbounds i32, ptr %95, i64 %34
  %97 = load i32, ptr %96, align 4, !tbaa !25
  %98 = add i32 %97, %2
  %99 = load i32, ptr %14, align 8, !tbaa !95
  %100 = add nsw i32 %99, -1
  %101 = and i32 %100, %98
  %102 = load ptr, ptr %16, align 8, !tbaa !97
  %103 = sext i32 %101 to i64
  %104 = getelementptr inbounds %"class.ContextMap::E", ptr %102, i64 %103
  %105 = lshr i32 %97, 16
  %106 = trunc i32 %105 to i16
  %107 = tail call noundef ptr @_ZN10ContextMap1E3getEt(ptr noundef nonnull align 2 dereferenceable(64) %104, i16 noundef zeroext %106)
  %108 = load ptr, ptr %11, align 8, !tbaa !101
  %109 = getelementptr inbounds ptr, ptr %108, i64 %34
  store ptr %107, ptr %109, align 8, !tbaa !5
  br label %237

110:                                              ; preds = %81
  %111 = load ptr, ptr %15, align 8, !tbaa !84
  %112 = getelementptr inbounds i32, ptr %111, i64 %34
  %113 = load i32, ptr %112, align 4, !tbaa !25
  %114 = add i32 %113, %2
  %115 = load i32, ptr %14, align 8, !tbaa !95
  %116 = add nsw i32 %115, -1
  %117 = and i32 %116, %114
  %118 = load ptr, ptr %16, align 8, !tbaa !97
  %119 = sext i32 %117 to i64
  %120 = getelementptr inbounds %"class.ContextMap::E", ptr %118, i64 %119
  %121 = lshr i32 %113, 16
  %122 = trunc i32 %121 to i16
  %123 = tail call noundef ptr @_ZN10ContextMap1E3getEt(ptr noundef nonnull align 2 dereferenceable(64) %120, i16 noundef zeroext %122)
  %124 = load ptr, ptr %11, align 8, !tbaa !101
  %125 = getelementptr inbounds ptr, ptr %124, i64 %34
  store ptr %123, ptr %125, align 8, !tbaa !5
  %126 = load ptr, ptr %17, align 8, !tbaa !101
  %127 = getelementptr inbounds ptr, ptr %126, i64 %34
  store ptr %123, ptr %127, align 8, !tbaa !5
  %128 = load ptr, ptr %17, align 8, !tbaa !101
  %129 = getelementptr inbounds ptr, ptr %128, i64 %34
  %130 = load ptr, ptr %129, align 8, !tbaa !5
  %131 = getelementptr inbounds i8, ptr %130, i64 3
  %132 = load i8, ptr %131, align 1, !tbaa !9
  %133 = icmp eq i8 %132, 2
  br i1 %133, label %134, label %204

134:                                              ; preds = %110
  %135 = getelementptr inbounds i8, ptr %130, i64 4
  %136 = load i8, ptr %135, align 1, !tbaa !9
  %137 = zext i8 %136 to i32
  %138 = or i32 %137, 256
  %139 = load ptr, ptr %15, align 8, !tbaa !84
  %140 = getelementptr inbounds i32, ptr %139, i64 %34
  %141 = load i32, ptr %140, align 4, !tbaa !25
  %142 = lshr i32 %138, 6
  %143 = add i32 %142, %141
  %144 = load i32, ptr %14, align 8, !tbaa !95
  %145 = add nsw i32 %144, -1
  %146 = and i32 %143, %145
  %147 = load ptr, ptr %16, align 8, !tbaa !97
  %148 = sext i32 %146 to i64
  %149 = getelementptr inbounds %"class.ContextMap::E", ptr %147, i64 %148
  %150 = lshr i32 %141, 16
  %151 = trunc i32 %150 to i16
  %152 = tail call noundef ptr @_ZN10ContextMap1E3getEt(ptr noundef nonnull align 2 dereferenceable(64) %149, i16 noundef zeroext %151)
  %153 = lshr i32 %137, 5
  %154 = and i32 %153, 1
  %155 = add nuw nsw i32 %154, 1
  %156 = trunc i32 %155 to i8
  store i8 %156, ptr %152, align 1, !tbaa !9
  %157 = lshr i32 %138, 4
  %158 = trunc i32 %157 to i8
  %159 = and i8 %158, 1
  %160 = add nuw nsw i8 %159, 1
  %161 = zext i32 %155 to i64
  %162 = getelementptr inbounds i8, ptr %152, i64 %161
  store i8 %160, ptr %162, align 1, !tbaa !9
  %163 = lshr i32 %138, 3
  %164 = trunc i32 %163 to i8
  %165 = and i8 %164, 1
  %166 = add nuw nsw i8 %165, 1
  %167 = and i32 %157, 3
  %168 = add nuw nsw i32 %167, 3
  %169 = zext i32 %168 to i64
  %170 = getelementptr inbounds i8, ptr %152, i64 %169
  store i8 %166, ptr %170, align 1, !tbaa !9
  %171 = load ptr, ptr %15, align 8, !tbaa !84
  %172 = getelementptr inbounds i32, ptr %171, i64 %34
  %173 = load i32, ptr %172, align 4, !tbaa !25
  %174 = add i32 %173, %163
  %175 = load i32, ptr %14, align 8, !tbaa !95
  %176 = add nsw i32 %175, -1
  %177 = and i32 %176, %174
  %178 = load ptr, ptr %16, align 8, !tbaa !97
  %179 = sext i32 %177 to i64
  %180 = getelementptr inbounds %"class.ContextMap::E", ptr %178, i64 %179
  %181 = lshr i32 %173, 16
  %182 = trunc i32 %181 to i16
  %183 = tail call noundef ptr @_ZN10ContextMap1E3getEt(ptr noundef nonnull align 2 dereferenceable(64) %180, i16 noundef zeroext %182)
  %184 = lshr i32 %137, 2
  %185 = and i32 %184, 1
  %186 = add nuw nsw i32 %185, 1
  %187 = trunc i32 %186 to i8
  store i8 %187, ptr %183, align 1, !tbaa !9
  %188 = lshr i32 %138, 1
  %189 = trunc i32 %188 to i8
  %190 = and i8 %189, 1
  %191 = add nuw nsw i8 %190, 1
  %192 = zext i32 %186 to i64
  %193 = getelementptr inbounds i8, ptr %183, i64 %192
  store i8 %191, ptr %193, align 1, !tbaa !9
  %194 = and i8 %136, 1
  %195 = add nuw nsw i8 %194, 1
  %196 = and i32 %188, 3
  %197 = add nuw nsw i32 %196, 3
  %198 = zext i32 %197 to i64
  %199 = getelementptr inbounds i8, ptr %183, i64 %198
  store i8 %195, ptr %199, align 1, !tbaa !9
  %200 = load ptr, ptr %17, align 8, !tbaa !101
  %201 = getelementptr inbounds ptr, ptr %200, i64 %34
  %202 = load ptr, ptr %201, align 8, !tbaa !5
  %203 = getelementptr inbounds i8, ptr %202, i64 6
  store i8 0, ptr %203, align 1, !tbaa !9
  br label %204

204:                                              ; preds = %134, %110
  %205 = load ptr, ptr %13, align 8, !tbaa !101
  %206 = getelementptr inbounds ptr, ptr %205, i64 %34
  %207 = load ptr, ptr %206, align 8, !tbaa !5
  %208 = load i8, ptr %207, align 1, !tbaa !9
  %209 = icmp eq i8 %208, 0
  br i1 %209, label %210, label %215

210:                                              ; preds = %204
  store i8 2, ptr %207, align 1, !tbaa !9
  %211 = load ptr, ptr %13, align 8, !tbaa !101
  %212 = getelementptr inbounds ptr, ptr %211, i64 %34
  %213 = load ptr, ptr %212, align 8, !tbaa !5
  %214 = getelementptr inbounds i8, ptr %213, i64 1
  store i8 %22, ptr %214, align 1, !tbaa !9
  br label %232

215:                                              ; preds = %204
  %216 = getelementptr inbounds i8, ptr %207, i64 1
  %217 = load i8, ptr %216, align 1, !tbaa !9
  %218 = zext i8 %217 to i32
  %219 = icmp eq i32 %218, %4
  br i1 %219, label %225, label %220

220:                                              ; preds = %215
  store i8 1, ptr %207, align 1, !tbaa !9
  %221 = load ptr, ptr %13, align 8, !tbaa !101
  %222 = getelementptr inbounds ptr, ptr %221, i64 %34
  %223 = load ptr, ptr %222, align 8, !tbaa !5
  %224 = getelementptr inbounds i8, ptr %223, i64 1
  store i8 %22, ptr %224, align 1, !tbaa !9
  br label %232

225:                                              ; preds = %215
  %226 = icmp ult i8 %208, -2
  br i1 %226, label %227, label %229

227:                                              ; preds = %225
  %228 = add nuw i8 %208, 2
  store i8 %228, ptr %207, align 1, !tbaa !9
  br label %232

229:                                              ; preds = %225
  %230 = icmp eq i8 %208, -1
  br i1 %230, label %231, label %232

231:                                              ; preds = %229
  store i8 -128, ptr %207, align 1, !tbaa !9
  br label %232

232:                                              ; preds = %220, %229, %231, %227, %210
  %233 = load ptr, ptr %17, align 8, !tbaa !101
  %234 = getelementptr inbounds ptr, ptr %233, i64 %34
  %235 = load ptr, ptr %234, align 8, !tbaa !5
  %236 = getelementptr inbounds i8, ptr %235, i64 3
  br label %237

237:                                              ; preds = %75, %82, %88, %94, %232
  %238 = phi ptr [ %11, %82 ], [ %11, %88 ], [ %17, %94 ], [ %13, %232 ], [ %11, %75 ]
  %239 = phi ptr [ %87, %82 ], [ %93, %88 ], [ %107, %94 ], [ %236, %232 ], [ null, %75 ]
  %240 = load ptr, ptr %238, align 8, !tbaa !101
  %241 = getelementptr inbounds ptr, ptr %240, i64 %34
  store ptr %239, ptr %241, align 8, !tbaa !5
  %242 = load ptr, ptr %13, align 8, !tbaa !101
  %243 = getelementptr inbounds ptr, ptr %242, i64 %34
  %244 = load ptr, ptr %243, align 8, !tbaa !5
  %245 = getelementptr inbounds i8, ptr %244, i64 1
  %246 = load i8, ptr %245, align 1, !tbaa !9
  %247 = zext i8 %246 to i32
  %248 = or i32 %247, 256
  %249 = lshr i32 %248, %23
  %250 = icmp eq i32 %249, %2
  br i1 %250, label %251, label %269

251:                                              ; preds = %237
  %252 = load i8, ptr %244, align 1, !tbaa !9
  %253 = lshr i32 %247, %26
  %254 = shl nuw nsw i32 %253, 1
  %255 = and i32 %254, 2
  %256 = add nuw nsw i32 %255, 65535
  %257 = zext i8 %252 to i64
  %258 = add nuw nsw i64 %257, 1
  %259 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %260 = getelementptr inbounds i8, ptr %259, i64 %258
  %261 = load i8, ptr %260, align 1, !tbaa !9
  %262 = zext i8 %261 to i32
  %263 = and i8 %252, 1
  %264 = xor i8 %263, 3
  %265 = zext i8 %264 to i32
  %266 = shl nuw nsw i32 %262, %265
  %267 = mul nuw nsw i32 %266, %256
  %268 = trunc i32 %267 to i16
  br label %269

269:                                              ; preds = %237, %251
  %270 = phi i16 [ %268, %251 ], [ 0, %237 ]
  %271 = load i32, ptr %24, align 8, !tbaa !64
  %272 = add nsw i32 %271, 1
  store i32 %272, ptr %24, align 8, !tbaa !64
  %273 = load ptr, ptr %25, align 8, !tbaa !59
  %274 = sext i32 %271 to i64
  %275 = getelementptr inbounds i16, ptr %273, i64 %274
  store i16 %270, ptr %275, align 2, !tbaa !31
  %276 = load ptr, ptr %11, align 8, !tbaa !101
  %277 = getelementptr inbounds ptr, ptr %276, i64 %34
  %278 = load ptr, ptr %277, align 8, !tbaa !5
  %279 = icmp eq ptr %278, null
  br i1 %279, label %358, label %280

280:                                              ; preds = %269
  %281 = load i8, ptr %278, align 1, !tbaa !9
  %282 = zext i8 %281 to i32
  %283 = load ptr, ptr %27, align 8, !tbaa !103
  %284 = getelementptr inbounds %class.StateMap, ptr %283, i64 %34, i32 1
  %285 = load i32, ptr %284, align 4, !tbaa !82
  %286 = getelementptr inbounds %class.StateMap, ptr %283, i64 %34, i32 2, i32 3
  %287 = load ptr, ptr %286, align 8, !tbaa !84
  %288 = sext i32 %285 to i64
  %289 = getelementptr inbounds i32, ptr %287, i64 %288
  %290 = load i32, ptr %289, align 4, !tbaa !25
  %291 = and i32 %290, 1023
  %292 = icmp eq i32 %291, 1023
  %293 = add i32 %290, 1
  %294 = or i32 %290, 1023
  %295 = select i1 %292, i32 %294, i32 %293
  %296 = lshr i32 %290, 10
  %297 = load i32, ptr @y, align 4, !tbaa !25
  %298 = shl i32 %297, 22
  %299 = sub nsw i32 %298, %296
  %300 = ashr i32 %299, 3
  %301 = zext i32 %291 to i64
  %302 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %301
  %303 = load i32, ptr %302, align 4, !tbaa !25
  %304 = mul nsw i32 %300, %303
  %305 = and i32 %304, -1024
  %306 = add i32 %305, %295
  store i32 %306, ptr %289, align 4, !tbaa !25
  store i32 %282, ptr %284, align 4, !tbaa !82
  %307 = zext i8 %281 to i64
  %308 = getelementptr inbounds i32, ptr %287, i64 %307
  %309 = load i32, ptr %308, align 4, !tbaa !25
  %310 = lshr i32 %309, 20
  %311 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %307, i64 2
  %312 = load i8, ptr %311, align 2, !tbaa !9
  %313 = icmp eq i8 %312, 0
  %314 = sext i1 %313 to i32
  %315 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %307, i64 3
  %316 = load i8, ptr %315, align 1, !tbaa !9
  %317 = icmp eq i8 %316, 0
  %318 = sext i1 %317 to i32
  %319 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %320 = zext i32 %310 to i64
  %321 = getelementptr inbounds i16, ptr %319, i64 %320
  %322 = load i16, ptr %321, align 2, !tbaa !31
  %323 = ashr i16 %322, 2
  %324 = load i32, ptr %24, align 8, !tbaa !64
  %325 = add nsw i32 %324, 1
  %326 = sext i32 %324 to i64
  %327 = getelementptr inbounds i16, ptr %273, i64 %326
  store i16 %323, ptr %327, align 2, !tbaa !31
  %328 = lshr i32 %309, 24
  %329 = xor i32 %328, 255
  %330 = sub nsw i32 %328, %329
  %331 = trunc i32 %330 to i16
  %332 = add nsw i32 %324, 2
  %333 = sext i32 %325 to i64
  %334 = getelementptr inbounds i16, ptr %273, i64 %333
  store i16 %331, ptr %334, align 2, !tbaa !31
  %335 = sub nsw i32 %318, %314
  %336 = trunc i32 %335 to i16
  %337 = mul nsw i16 %323, %336
  %338 = add nsw i32 %324, 3
  %339 = sext i32 %332 to i64
  %340 = getelementptr inbounds i16, ptr %273, i64 %339
  store i16 %337, ptr %340, align 2, !tbaa !31
  %341 = and i32 %328, %314
  %342 = and i32 %329, %318
  %343 = sub nsw i32 %341, %342
  %344 = trunc i32 %343 to i16
  %345 = add nsw i32 %324, 4
  %346 = sext i32 %338 to i64
  %347 = getelementptr inbounds i16, ptr %273, i64 %346
  store i16 %344, ptr %347, align 2, !tbaa !31
  %348 = and i32 %328, %318
  %349 = and i32 %329, %314
  %350 = sub nsw i32 %348, %349
  %351 = trunc i32 %350 to i16
  %352 = add nsw i32 %324, 5
  store i32 %352, ptr %24, align 8, !tbaa !64
  %353 = sext i32 %345 to i64
  %354 = getelementptr inbounds i16, ptr %273, i64 %353
  store i16 %351, ptr %354, align 2, !tbaa !31
  %355 = icmp ne i8 %281, 0
  %356 = zext i1 %355 to i32
  %357 = add nsw i32 %35, %356
  br label %403

358:                                              ; preds = %269
  %359 = load ptr, ptr %27, align 8, !tbaa !103
  %360 = getelementptr inbounds %class.StateMap, ptr %359, i64 %34, i32 1
  %361 = load i32, ptr %360, align 4, !tbaa !82
  %362 = getelementptr inbounds %class.StateMap, ptr %359, i64 %34, i32 2, i32 3
  %363 = load ptr, ptr %362, align 8, !tbaa !84
  %364 = sext i32 %361 to i64
  %365 = getelementptr inbounds i32, ptr %363, i64 %364
  %366 = load i32, ptr %365, align 4, !tbaa !25
  %367 = and i32 %366, 1023
  %368 = icmp eq i32 %367, 1023
  %369 = add i32 %366, 1
  %370 = or i32 %366, 1023
  %371 = select i1 %368, i32 %370, i32 %369
  %372 = lshr i32 %366, 10
  %373 = load i32, ptr @y, align 4, !tbaa !25
  %374 = shl i32 %373, 22
  %375 = sub nsw i32 %374, %372
  %376 = ashr i32 %375, 3
  %377 = zext i32 %367 to i64
  %378 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %377
  %379 = load i32, ptr %378, align 4, !tbaa !25
  %380 = mul nsw i32 %376, %379
  %381 = and i32 %380, -1024
  %382 = add i32 %381, %371
  store i32 %382, ptr %365, align 4, !tbaa !25
  store i32 0, ptr %360, align 4, !tbaa !82
  %383 = load i32, ptr %363, align 4, !tbaa !25
  %384 = lshr i32 %383, 20
  %385 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %386 = zext i32 %384 to i64
  %387 = getelementptr inbounds i16, ptr %385, i64 %386
  %388 = load i16, ptr %387, align 2, !tbaa !31
  %389 = ashr i16 %388, 2
  %390 = load i32, ptr %24, align 8, !tbaa !64
  %391 = add nsw i32 %390, 1
  %392 = sext i32 %390 to i64
  %393 = getelementptr inbounds i16, ptr %273, i64 %392
  store i16 %389, ptr %393, align 2, !tbaa !31
  %394 = lshr i32 %383, 23
  %395 = trunc i32 %394 to i16
  %396 = and i16 %395, 510
  %397 = add nsw i16 %396, -255
  %398 = sext i32 %391 to i64
  %399 = getelementptr inbounds i16, ptr %273, i64 %398
  %400 = add nsw i32 %390, 5
  store i32 %400, ptr %24, align 8, !tbaa !64
  %401 = insertelement <4 x i16> <i16 poison, i16 0, i16 poison, i16 poison>, i16 %397, i64 0
  %402 = shufflevector <4 x i16> %401, <4 x i16> poison, <4 x i32> <i32 0, i32 1, i32 0, i32 0>
  store <4 x i16> %402, ptr %399, align 2, !tbaa !31
  br label %403

403:                                              ; preds = %280, %358
  %404 = phi i32 [ %357, %280 ], [ %35, %358 ]
  %405 = add nuw nsw i64 %34, 1
  %406 = load i32, ptr %7, align 8, !tbaa !102
  %407 = sext i32 %406 to i64
  %408 = icmp slt i64 %405, %407
  br i1 %408, label %32, label %29, !llvm.loop !107

409:                                              ; preds = %29
  store i32 0, ptr %7, align 8, !tbaa !102
  br label %410

410:                                              ; preds = %409, %29
  ret i32 %30
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr dso_local noundef ptr @_ZN10ContextMap1E3getEt(ptr noundef nonnull align 2 dereferenceable(64) %0, i16 noundef zeroext %1) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 1
  %4 = load i8, ptr %3, align 2, !tbaa !108
  %5 = and i8 %4, 15
  %6 = zext i8 %5 to i64
  %7 = getelementptr inbounds [7 x i16], ptr %0, i64 0, i64 %6
  %8 = load i16, ptr %7, align 2, !tbaa !31
  %9 = icmp eq i16 %8, %1
  br i1 %9, label %16, label %10

10:                                               ; preds = %2
  %11 = zext i8 %4 to i32
  %12 = and i32 %11, 15
  %13 = lshr i32 %11, 4
  %14 = load i16, ptr %0, align 2, !tbaa !31
  %15 = icmp eq i16 %14, %1
  br i1 %15, label %129, label %18

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 %6
  br label %136

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 0
  %20 = load i8, ptr %19, align 1, !tbaa !9
  %21 = zext i8 %20 to i32
  %22 = icmp eq i32 %12, 0
  %23 = icmp ult i8 %4, 16
  %24 = or i1 %22, %23
  %25 = select i1 %24, i32 65535, i32 %21
  %26 = getelementptr inbounds [7 x i16], ptr %0, i64 0, i64 1
  %27 = load i16, ptr %26, align 2, !tbaa !31
  %28 = icmp eq i16 %27, %1
  br i1 %28, label %129, label %29

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 1
  %31 = load i8, ptr %30, align 2, !tbaa !9
  %32 = zext i8 %31 to i32
  %33 = icmp ugt i32 %25, %32
  br i1 %33, label %34, label %40

34:                                               ; preds = %29
  %35 = icmp ne i32 %12, 1
  %36 = icmp ne i32 %13, 1
  %37 = and i1 %35, %36
  %38 = select i1 %37, i32 %32, i32 %25
  %39 = zext i1 %37 to i32
  br label %40

40:                                               ; preds = %34, %29
  %41 = phi i32 [ %25, %29 ], [ %38, %34 ]
  %42 = phi i32 [ 0, %29 ], [ %39, %34 ]
  %43 = getelementptr inbounds [7 x i16], ptr %0, i64 0, i64 2
  %44 = load i16, ptr %43, align 2, !tbaa !31
  %45 = icmp eq i16 %44, %1
  br i1 %45, label %129, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 2
  %48 = load i8, ptr %47, align 1, !tbaa !9
  %49 = zext i8 %48 to i32
  %50 = icmp ugt i32 %41, %49
  br i1 %50, label %51, label %57

51:                                               ; preds = %46
  %52 = icmp eq i32 %12, 2
  %53 = icmp eq i32 %13, 2
  %54 = or i1 %52, %53
  %55 = select i1 %54, i32 %41, i32 %49
  %56 = select i1 %54, i32 %42, i32 2
  br label %57

57:                                               ; preds = %51, %46
  %58 = phi i32 [ %41, %46 ], [ %55, %51 ]
  %59 = phi i32 [ %42, %46 ], [ %56, %51 ]
  %60 = getelementptr inbounds [7 x i16], ptr %0, i64 0, i64 3
  %61 = load i16, ptr %60, align 2, !tbaa !31
  %62 = icmp eq i16 %61, %1
  br i1 %62, label %129, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 3
  %65 = load i8, ptr %64, align 2, !tbaa !9
  %66 = zext i8 %65 to i32
  %67 = icmp ugt i32 %58, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %63
  %69 = icmp eq i32 %12, 3
  %70 = icmp eq i32 %13, 3
  %71 = or i1 %69, %70
  %72 = select i1 %71, i32 %58, i32 %66
  %73 = select i1 %71, i32 %59, i32 3
  br label %74

74:                                               ; preds = %68, %63
  %75 = phi i32 [ %58, %63 ], [ %72, %68 ]
  %76 = phi i32 [ %59, %63 ], [ %73, %68 ]
  %77 = getelementptr inbounds [7 x i16], ptr %0, i64 0, i64 4
  %78 = load i16, ptr %77, align 2, !tbaa !31
  %79 = icmp eq i16 %78, %1
  br i1 %79, label %129, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 4
  %82 = load i8, ptr %81, align 1, !tbaa !9
  %83 = zext i8 %82 to i32
  %84 = icmp ugt i32 %75, %83
  br i1 %84, label %85, label %91

85:                                               ; preds = %80
  %86 = icmp eq i32 %12, 4
  %87 = icmp eq i32 %13, 4
  %88 = or i1 %86, %87
  %89 = select i1 %88, i32 %75, i32 %83
  %90 = select i1 %88, i32 %76, i32 4
  br label %91

91:                                               ; preds = %85, %80
  %92 = phi i32 [ %75, %80 ], [ %89, %85 ]
  %93 = phi i32 [ %76, %80 ], [ %90, %85 ]
  %94 = getelementptr inbounds [7 x i16], ptr %0, i64 0, i64 5
  %95 = load i16, ptr %94, align 2, !tbaa !31
  %96 = icmp eq i16 %95, %1
  br i1 %96, label %129, label %97

97:                                               ; preds = %91
  %98 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 5
  %99 = load i8, ptr %98, align 2, !tbaa !9
  %100 = zext i8 %99 to i32
  %101 = icmp ugt i32 %92, %100
  br i1 %101, label %102, label %108

102:                                              ; preds = %97
  %103 = icmp eq i32 %12, 5
  %104 = icmp eq i32 %13, 5
  %105 = or i1 %103, %104
  %106 = select i1 %105, i32 %92, i32 %100
  %107 = select i1 %105, i32 %93, i32 5
  br label %108

108:                                              ; preds = %102, %97
  %109 = phi i32 [ %92, %97 ], [ %106, %102 ]
  %110 = phi i32 [ %93, %97 ], [ %107, %102 ]
  %111 = getelementptr inbounds [7 x i16], ptr %0, i64 0, i64 6
  %112 = load i16, ptr %111, align 2, !tbaa !31
  %113 = icmp eq i16 %112, %1
  br i1 %113, label %129, label %114

114:                                              ; preds = %108
  %115 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 6
  %116 = load i8, ptr %115, align 1, !tbaa !9
  %117 = zext i8 %116 to i32
  %118 = icmp ugt i32 %109, %117
  %119 = icmp eq i32 %12, 6
  %120 = icmp eq i32 %13, 6
  %121 = or i1 %119, %120
  %122 = select i1 %121, i32 %110, i32 6
  %123 = select i1 %118, i32 %122, i32 %110
  %124 = trunc i32 %123 to i8
  %125 = or i8 %124, -16
  store i8 %125, ptr %3, align 2, !tbaa !108
  %126 = zext i32 %123 to i64
  %127 = getelementptr inbounds [7 x i16], ptr %0, i64 0, i64 %126
  store i16 %1, ptr %127, align 2, !tbaa !31
  %128 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 %126
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(7) %128, i8 0, i64 7, i1 false)
  br label %136

129:                                              ; preds = %108, %91, %74, %57, %40, %18, %10
  %130 = phi i32 [ 0, %10 ], [ 1, %18 ], [ 2, %40 ], [ 3, %57 ], [ 4, %74 ], [ 5, %91 ], [ 6, %108 ]
  %131 = zext i32 %130 to i64
  %132 = shl nuw nsw i32 %11, 4
  %133 = or i32 %130, %132
  %134 = trunc i32 %133 to i8
  store i8 %134, ptr %3, align 2, !tbaa !108
  %135 = getelementptr inbounds %"class.ContextMap::E", ptr %0, i64 0, i32 2, i64 %131
  br label %136

136:                                              ; preds = %129, %114, %16
  %137 = phi ptr [ %17, %16 ], [ %128, %114 ], [ %135, %129 ]
  ret ptr %137
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z10matchModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ10matchModelR5MixerE1t acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ10matchModelR5MixerE1t) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @level, align 4, !tbaa !25
  %9 = shl i32 65536, %8
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ10matchModelR5MixerE1t, i32 noundef %9)
          to label %10 unwind label %52

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ10matchModelR5MixerE1t, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ10matchModelR5MixerE1t) #39
  br label %12

12:                                               ; preds = %10, %4, %1
  %13 = load atomic i8, ptr @_ZGVZ10matchModelR5MixerE4scm1 acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %21, !prof !110

15:                                               ; preds = %12
  %16 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ10matchModelR5MixerE4scm1) #39
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ10matchModelR5MixerE4scm1, i32 noundef 131072)
          to label %19 unwind label %54

19:                                               ; preds = %18
  %20 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ10matchModelR5MixerE4scm1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ10matchModelR5MixerE4scm1) #39
  br label %21

21:                                               ; preds = %19, %15, %12
  %22 = load i32, ptr @bpos, align 4, !tbaa !25
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %21
  %25 = load i32, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !25
  br label %100

26:                                               ; preds = %21
  %27 = load i32, ptr @_ZZ10matchModelR5MixerE1h, align 4, !tbaa !25
  %28 = mul i32 %27, 7976
  %29 = load i32, ptr @pos, align 4, !tbaa !25
  %30 = add i32 %29, -1
  %31 = load i32, ptr @buf, align 8, !tbaa !20
  %32 = add nsw i32 %31, -1
  %33 = and i32 %32, %30
  %34 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %35 = sext i32 %33 to i64
  %36 = getelementptr inbounds i8, ptr %34, i64 %35
  %37 = load i8, ptr %36, align 1, !tbaa !9
  %38 = zext i8 %37 to i32
  %39 = or i32 %28, 1
  %40 = add i32 %39, %38
  %41 = load i32, ptr @_ZZ10matchModelR5MixerE1t, align 8, !tbaa !51
  %42 = add nsw i32 %41, -1
  %43 = and i32 %40, %42
  store i32 %43, ptr @_ZZ10matchModelR5MixerE1h, align 4, !tbaa !25
  %44 = load i32, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !25
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %26
  %47 = add nsw i32 %44, 1
  store i32 %47, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !25
  %48 = load i32, ptr @_ZZ10matchModelR5MixerE3ptr, align 4, !tbaa !25
  %49 = add nsw i32 %48, 1
  store i32 %49, ptr @_ZZ10matchModelR5MixerE3ptr, align 4, !tbaa !25
  %50 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ10matchModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !61
  %51 = sext i32 %43 to i64
  br label %90

52:                                               ; preds = %7
  %53 = landingpad { ptr, i32 }
          cleanup
  br label %213

54:                                               ; preds = %18
  %55 = landingpad { ptr, i32 }
          cleanup
  br label %213

56:                                               ; preds = %26
  %57 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ10matchModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !61
  %58 = sext i32 %43 to i64
  %59 = getelementptr inbounds i32, ptr %57, i64 %58
  %60 = load i32, ptr %59, align 4, !tbaa !25
  store i32 %60, ptr @_ZZ10matchModelR5MixerE3ptr, align 4, !tbaa !25
  %61 = icmp ne i32 %60, 0
  %62 = sub nsw i32 %29, %60
  %63 = icmp slt i32 %62, %31
  %64 = select i1 %61, i1 %63, i1 false
  br i1 %64, label %65, label %90

65:                                               ; preds = %56
  %66 = add i32 %60, -1
  %67 = and i32 %66, %32
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds i8, ptr %34, i64 %68
  %70 = load i8, ptr %69, align 1, !tbaa !9
  %71 = icmp eq i8 %37, %70
  br i1 %71, label %72, label %90

72:                                               ; preds = %65, %72
  %73 = phi i32 [ %74, %72 ], [ 0, %65 ]
  %74 = add nuw nsw i32 %73, 1
  %75 = sub nuw nsw i32 -2, %73
  %76 = add i32 %75, %29
  %77 = and i32 %76, %32
  %78 = sext i32 %77 to i64
  %79 = getelementptr inbounds i8, ptr %34, i64 %78
  %80 = load i8, ptr %79, align 1, !tbaa !9
  %81 = add i32 %75, %60
  %82 = and i32 %81, %32
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i8, ptr %34, i64 %83
  %85 = load i8, ptr %84, align 1, !tbaa !9
  %86 = icmp eq i8 %80, %85
  %87 = icmp ult i32 %73, 65533
  %88 = select i1 %86, i1 %87, i1 false
  br i1 %88, label %72, label %89, !llvm.loop !111

89:                                               ; preds = %72
  store i32 %74, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !25
  br label %90

90:                                               ; preds = %65, %89, %56, %46
  %91 = phi i64 [ %58, %65 ], [ %58, %89 ], [ %58, %56 ], [ %51, %46 ]
  %92 = phi i32 [ 0, %65 ], [ %74, %89 ], [ 0, %56 ], [ %47, %46 ]
  %93 = phi ptr [ %57, %65 ], [ %57, %89 ], [ %57, %56 ], [ %50, %46 ]
  %94 = getelementptr inbounds i32, ptr %93, i64 %91
  store i32 %29, ptr %94, align 4, !tbaa !25
  store i32 %92, ptr @_ZZ10matchModelR5MixerE6result, align 4, !tbaa !25
  %95 = load i32, ptr @pos, align 4, !tbaa !25
  %96 = shl i32 %95, 8
  %97 = load i32, ptr @_ZZ10matchModelR5MixerE4scm1, align 8, !tbaa !74
  %98 = add nsw i32 %97, -256
  %99 = and i32 %98, %96
  store i32 %99, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ10matchModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  br label %100

100:                                              ; preds = %24, %90
  %101 = phi i32 [ %25, %24 ], [ %92, %90 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %170, label %103

103:                                              ; preds = %100
  %104 = load i32, ptr @pos, align 4, !tbaa !25
  %105 = add nsw i32 %104, -1
  %106 = load i32, ptr @buf, align 8, !tbaa !20
  %107 = add nsw i32 %106, -1
  %108 = and i32 %107, %105
  %109 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %110 = sext i32 %108 to i64
  %111 = getelementptr inbounds i8, ptr %109, i64 %110
  %112 = load i8, ptr %111, align 1, !tbaa !9
  %113 = load i32, ptr @_ZZ10matchModelR5MixerE3ptr, align 4, !tbaa !25
  %114 = add nsw i32 %113, -1
  %115 = and i32 %114, %107
  %116 = sext i32 %115 to i64
  %117 = getelementptr inbounds i8, ptr %109, i64 %116
  %118 = load i8, ptr %117, align 1, !tbaa !9
  %119 = icmp eq i8 %112, %118
  br i1 %119, label %120, label %162

120:                                              ; preds = %103
  %121 = load i32, ptr @c0, align 4, !tbaa !25
  %122 = and i32 %113, %107
  %123 = sext i32 %122 to i64
  %124 = getelementptr inbounds i8, ptr %109, i64 %123
  %125 = load i8, ptr %124, align 1, !tbaa !9
  %126 = zext i8 %125 to i32
  %127 = or i32 %126, 256
  %128 = load i32, ptr @bpos, align 4, !tbaa !25
  %129 = sub nsw i32 8, %128
  %130 = lshr i32 %127, %129
  %131 = icmp eq i32 %121, %130
  br i1 %131, label %132, label %162

132:                                              ; preds = %120
  %133 = icmp sgt i32 %101, 65534
  br i1 %133, label %134, label %135

134:                                              ; preds = %132
  store i32 65534, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !25
  br label %135

135:                                              ; preds = %134, %132
  %136 = phi i32 [ 65534, %134 ], [ %101, %132 ]
  %137 = sub nsw i32 7, %128
  %138 = shl nuw i32 1, %137
  %139 = and i32 %138, %126
  %140 = icmp eq i32 %139, 0
  %141 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %142 = and i32 %136, 65535
  %143 = zext i32 %142 to i64
  %144 = getelementptr inbounds i8, ptr %141, i64 %143
  %145 = load i8, ptr %144, align 1, !tbaa !9
  %146 = zext i8 %145 to i16
  %147 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %148 = load i32, ptr %147, align 8, !tbaa !64
  %149 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %150 = load ptr, ptr %149, align 8, !tbaa !59
  %151 = sext i32 %148 to i64
  %152 = getelementptr inbounds i16, ptr %150, i64 %151
  %153 = tail call i32 @llvm.smin.i32(i32 %136, i32 32)
  %154 = trunc i32 %153 to i16
  %155 = add nsw i32 %148, 2
  br i1 %140, label %159, label %156

156:                                              ; preds = %135
  %157 = shl nuw nsw i16 %146, 2
  store i16 %157, ptr %152, align 2, !tbaa !31
  %158 = shl i16 %154, 6
  store i32 %155, ptr %147, align 8, !tbaa !64
  br label %178

159:                                              ; preds = %135
  %160 = mul nsw i16 %146, -4
  store i16 %160, ptr %152, align 2, !tbaa !31
  %161 = mul i16 %154, -64
  store i32 %155, ptr %147, align 8, !tbaa !64
  br label %178

162:                                              ; preds = %120, %103
  store i32 0, ptr @_ZZ10matchModelR5MixerE3len, align 4, !tbaa !25
  %163 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %164 = load i32, ptr %163, align 8, !tbaa !64
  %165 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %166 = load ptr, ptr %165, align 8, !tbaa !59
  %167 = sext i32 %164 to i64
  %168 = getelementptr inbounds i16, ptr %166, i64 %167
  store i16 0, ptr %168, align 2, !tbaa !31
  %169 = add nsw i32 %164, 2
  store i32 %169, ptr %163, align 8, !tbaa !64
  br label %178

170:                                              ; preds = %100
  %171 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %172 = load i32, ptr %171, align 8, !tbaa !64
  %173 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %174 = load ptr, ptr %173, align 8, !tbaa !59
  %175 = sext i32 %172 to i64
  %176 = getelementptr inbounds i16, ptr %174, i64 %175
  store i16 0, ptr %176, align 2, !tbaa !31
  %177 = add nsw i32 %172, 2
  store i32 %177, ptr %171, align 8, !tbaa !64
  br label %178

178:                                              ; preds = %162, %159, %156, %170
  %179 = phi i32 [ %164, %162 ], [ %148, %159 ], [ %148, %156 ], [ %172, %170 ]
  %180 = phi ptr [ %166, %162 ], [ %150, %159 ], [ %150, %156 ], [ %174, %170 ]
  %181 = phi i16 [ 0, %162 ], [ %161, %159 ], [ %158, %156 ], [ 0, %170 ]
  %182 = phi i32 [ %169, %162 ], [ %155, %159 ], [ %155, %156 ], [ %177, %170 ]
  %183 = add nsw i32 %179, 1
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i16, ptr %180, i64 %184
  store i16 %181, ptr %185, align 2, !tbaa !31
  %186 = load i32, ptr @y, align 4, !tbaa !25
  %187 = shl i32 %186, 16
  %188 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ10matchModelR5MixerE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %189 = load i16, ptr %188, align 2, !tbaa !31
  %190 = zext i16 %189 to i32
  %191 = or i32 %187, 64
  %192 = sub i32 %191, %190
  %193 = lshr i32 %192, 7
  %194 = trunc i32 %193 to i16
  %195 = add i16 %189, %194
  store i16 %195, ptr %188, align 2, !tbaa !31
  %196 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ10matchModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %197 = load i32, ptr @c0, align 4, !tbaa !25
  %198 = add nsw i32 %197, %196
  %199 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ10matchModelR5MixerE4scm1, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %200 = sext i32 %198 to i64
  %201 = getelementptr inbounds i16, ptr %199, i64 %200
  store ptr %201, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ10matchModelR5MixerE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %202 = load i16, ptr %201, align 2, !tbaa !31
  %203 = lshr i16 %202, 4
  %204 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %205 = zext i16 %203 to i64
  %206 = getelementptr inbounds i16, ptr %204, i64 %205
  %207 = load i16, ptr %206, align 2, !tbaa !31
  %208 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %209 = add nsw i32 %182, 1
  store i32 %209, ptr %208, align 8, !tbaa !64
  %210 = sext i32 %182 to i64
  %211 = getelementptr inbounds i16, ptr %180, i64 %210
  store i16 %207, ptr %211, align 2, !tbaa !31
  %212 = load i32, ptr @_ZZ10matchModelR5MixerE6result, align 4, !tbaa !25
  ret i32 %212

213:                                              ; preds = %54, %52
  %214 = phi ptr [ @_ZGVZ10matchModelR5MixerE4scm1, %54 ], [ @_ZGVZ10matchModelR5MixerE1t, %52 ]
  %215 = phi { ptr, i32 } [ %55, %54 ], [ %53, %52 ]
  tail call void @__cxa_guard_abort(ptr nonnull %214) #39
  resume { ptr, i32 } %215
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(ptr) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_abort(ptr) local_unnamed_addr #4

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(ptr) local_unnamed_addr #4

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = sdiv i32 %1, 2
  %4 = getelementptr inbounds %class.Array.4, ptr %0, i64 0, i32 1
  store i32 %3, ptr %4, align 4, !tbaa !73
  store i32 %3, ptr %0, align 8, !tbaa !74
  %5 = icmp slt i32 %1, 2
  br i1 %5, label %20, label %6

6:                                                ; preds = %2
  %7 = shl nuw nsw i32 %3, 1
  %8 = load i32, ptr @programChecker, align 8, !tbaa !13
  %9 = add nsw i32 %8, %7
  store i32 %9, ptr @programChecker, align 8, !tbaa !13
  %10 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %11 = icmp sgt i32 %9, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %6
  store i32 %9, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %13

13:                                               ; preds = %12, %6
  %14 = sext i32 %7 to i64
  %15 = tail call noalias ptr @calloc(i64 noundef %14, i64 noundef 1) #41
  %16 = getelementptr inbounds %class.Array.4, ptr %0, i64 0, i32 2
  store ptr %15, ptr %16, align 8, !tbaa !75
  %17 = icmp eq ptr %15, null
  br i1 %17, label %18, label %22

18:                                               ; preds = %13
  %19 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %19, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %19, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

20:                                               ; preds = %2
  %21 = getelementptr inbounds %class.Array.4, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(20) %21, i8 0, i64 20, i1 false)
  br label %39

22:                                               ; preds = %13
  %23 = getelementptr inbounds %class.Array.4, ptr %0, i64 0, i32 3
  store ptr %15, ptr %23, align 8, !tbaa !76
  %24 = getelementptr inbounds %class.SmallStationaryContextMap, ptr %0, i64 0, i32 1
  store i32 0, ptr %24, align 8, !tbaa !112
  %25 = zext i32 %3 to i64
  %26 = icmp ult i32 %3, 16
  br i1 %26, label %37, label %27

27:                                               ; preds = %22
  %28 = and i64 %25, 4294967280
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi i64 [ 0, %27 ], [ %33, %29 ]
  %31 = getelementptr inbounds i16, ptr %15, i64 %30
  store <8 x i16> <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>, ptr %31, align 2, !tbaa !31
  %32 = getelementptr inbounds i16, ptr %31, i64 8
  store <8 x i16> <i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768, i16 -32768>, ptr %32, align 2, !tbaa !31
  %33 = add nuw i64 %30, 16
  %34 = icmp eq i64 %33, %28
  br i1 %34, label %35, label %29, !llvm.loop !115

35:                                               ; preds = %29
  %36 = icmp eq i64 %28, %25
  br i1 %36, label %39, label %37

37:                                               ; preds = %22, %35
  %38 = phi i64 [ 0, %22 ], [ %28, %35 ]
  br label %42

39:                                               ; preds = %42, %35, %20
  %40 = phi ptr [ null, %20 ], [ %15, %35 ], [ %15, %42 ]
  %41 = getelementptr inbounds %class.SmallStationaryContextMap, ptr %0, i64 0, i32 2
  store ptr %40, ptr %41, align 8, !tbaa !114
  ret void

42:                                               ; preds = %37, %42
  %43 = phi i64 [ %45, %42 ], [ %38, %37 ]
  %44 = getelementptr inbounds i16, ptr %15, i64 %43
  store i16 -32768, ptr %44, align 2, !tbaa !31
  %45 = add nuw nsw i64 %43, 1
  %46 = icmp eq i64 %45, %25
  br i1 %46, label %39, label %42, !llvm.loop !116
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN25SmallStationaryContextMapD2Ev(ptr noundef nonnull align 8 dereferenceable(40) %0) unnamed_addr #3 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !74
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = shl i32 %2, 1
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array.4, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !75
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z8picModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ8picModelR5MixerE1t acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8picModelR5MixerE1t) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  invoke void @_ZN5ArrayIhLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ8picModelR5MixerE1t, i32 noundef 66048)
          to label %8 unwind label %233

8:                                                ; preds = %7
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIhLi0EED2Ev, ptr nonnull @_ZZ8picModelR5MixerE1t, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8picModelR5MixerE1t) #39
  br label %10

10:                                               ; preds = %8, %4, %1
  %11 = load atomic i8, ptr @_ZGVZ8picModelR5MixerE2sm acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %21, !prof !110

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8picModelR5MixerE2sm) #39
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %13
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ8picModelR5MixerE2sm, i32 noundef 256)
          to label %17 unwind label %235

17:                                               ; preds = %16
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1), i32 noundef 256)
          to label %18 unwind label %237

18:                                               ; preds = %17
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2), i32 noundef 256)
          to label %19 unwind label %237

19:                                               ; preds = %18
  %20 = tail call i32 @__cxa_atexit(ptr nonnull @__cxx_global_array_dtor, ptr null, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8picModelR5MixerE2sm) #39
  br label %21

21:                                               ; preds = %19, %13, %10
  %22 = load i32, ptr @_ZZ8picModelR5MixerE3cxt.0, align 4, !tbaa !25
  %23 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ8picModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !22
  %24 = sext i32 %22 to i64
  %25 = getelementptr inbounds i8, ptr %23, i64 %24
  %26 = load i8, ptr %25, align 1, !tbaa !9
  %27 = zext i8 %26 to i64
  %28 = load i32, ptr @y, align 4, !tbaa !25
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %27, i64 %29
  %31 = load i8, ptr %30, align 1, !tbaa !9
  store i8 %31, ptr %25, align 1, !tbaa !9
  %32 = load i32, ptr @_ZZ8picModelR5MixerE3cxt.1, align 4, !tbaa !25
  %33 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ8picModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !22
  %34 = sext i32 %32 to i64
  %35 = getelementptr inbounds i8, ptr %33, i64 %34
  %36 = load i8, ptr %35, align 1, !tbaa !9
  %37 = zext i8 %36 to i64
  %38 = load i32, ptr @y, align 4, !tbaa !25
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %37, i64 %39
  %41 = load i8, ptr %40, align 1, !tbaa !9
  store i8 %41, ptr %35, align 1, !tbaa !9
  %42 = load i32, ptr @_ZZ8picModelR5MixerE3cxt.2, align 4, !tbaa !25
  %43 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ8picModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !22
  %44 = sext i32 %42 to i64
  %45 = getelementptr inbounds i8, ptr %43, i64 %44
  %46 = load i8, ptr %45, align 1, !tbaa !9
  %47 = zext i8 %46 to i64
  %48 = load i32, ptr @y, align 4, !tbaa !25
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %47, i64 %49
  %51 = load i8, ptr %50, align 1, !tbaa !9
  store i8 %51, ptr %45, align 1, !tbaa !9
  %52 = load i32, ptr @_ZZ8picModelR5MixerE2r0, align 4, !tbaa !25
  %53 = load i32, ptr @y, align 4, !tbaa !25
  %54 = shl i32 %52, 1
  %55 = add i32 %53, %54
  store i32 %55, ptr @_ZZ8picModelR5MixerE2r0, align 4, !tbaa !25
  %56 = load i32, ptr @_ZZ8picModelR5MixerE2r1, align 4, !tbaa !25
  %57 = load i32, ptr @pos, align 4, !tbaa !25
  %58 = add nsw i32 %57, -215
  %59 = load i32, ptr @buf, align 8, !tbaa !20
  %60 = add nsw i32 %59, -1
  %61 = and i32 %60, %58
  %62 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %63 = sext i32 %61 to i64
  %64 = getelementptr inbounds i8, ptr %62, i64 %63
  %65 = load i8, ptr %64, align 1, !tbaa !9
  %66 = zext i8 %65 to i32
  %67 = load i32, ptr @bpos, align 4, !tbaa !25
  %68 = sub nsw i32 7, %67
  %69 = lshr i32 %66, %68
  %70 = and i32 %69, 1
  %71 = shl i32 %56, 1
  %72 = or i32 %70, %71
  store i32 %72, ptr @_ZZ8picModelR5MixerE2r1, align 4, !tbaa !25
  %73 = load i32, ptr @_ZZ8picModelR5MixerE2r2, align 4, !tbaa !25
  %74 = add nsw i32 %57, -431
  %75 = and i32 %60, %74
  %76 = sext i32 %75 to i64
  %77 = getelementptr inbounds i8, ptr %62, i64 %76
  %78 = load i8, ptr %77, align 1, !tbaa !9
  %79 = zext i8 %78 to i32
  %80 = lshr i32 %79, %68
  %81 = and i32 %80, 1
  %82 = shl i32 %73, 1
  %83 = or i32 %81, %82
  store i32 %83, ptr @_ZZ8picModelR5MixerE2r2, align 4, !tbaa !25
  %84 = load i32, ptr @_ZZ8picModelR5MixerE2r3, align 4, !tbaa !25
  %85 = add nsw i32 %57, -647
  %86 = and i32 %60, %85
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds i8, ptr %62, i64 %87
  %89 = load i8, ptr %88, align 1, !tbaa !9
  %90 = zext i8 %89 to i32
  %91 = lshr i32 %90, %68
  %92 = and i32 %91, 1
  %93 = shl i32 %84, 1
  %94 = or i32 %92, %93
  store i32 %94, ptr @_ZZ8picModelR5MixerE2r3, align 4, !tbaa !25
  %95 = and i32 %55, 7
  %96 = lshr i32 %71, 4
  %97 = and i32 %96, 56
  %98 = or i32 %97, %95
  %99 = lshr i32 %82, 3
  %100 = and i32 %99, 192
  %101 = or i32 %98, %100
  store i32 %101, ptr @_ZZ8picModelR5MixerE3cxt.0, align 4, !tbaa !25
  %102 = and i32 %53, 1
  %103 = and i32 %96, 62
  %104 = lshr i32 %82, 2
  %105 = and i32 %104, 64
  %106 = and i32 %84, 128
  %107 = or i32 %102, %103
  %108 = or i32 %107, %105
  %109 = or i32 %108, %106
  %110 = or i32 %109, 256
  store i32 %110, ptr @_ZZ8picModelR5MixerE3cxt.1, align 4, !tbaa !25
  %111 = and i32 %55, 63
  %112 = and i32 %71, 16382
  %113 = xor i32 %112, %111
  %114 = shl i32 %73, 3
  %115 = and i32 %114, 32512
  %116 = xor i32 %113, %115
  %117 = shl i32 %84, 6
  %118 = and i32 %117, 63488
  %119 = xor i32 %116, %118
  %120 = add nuw nsw i32 %119, 512
  store i32 %120, ptr @_ZZ8picModelR5MixerE3cxt.2, align 4, !tbaa !25
  %121 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ8picModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !22
  %122 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %123 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %124 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %125 = load ptr, ptr %124, align 8, !tbaa !59
  %126 = zext i32 %101 to i64
  %127 = getelementptr inbounds i8, ptr %121, i64 %126
  %128 = load i8, ptr %127, align 1, !tbaa !9
  %129 = zext i8 %128 to i32
  %130 = load i32, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 0, i32 1), align 4, !tbaa !82
  %131 = load ptr, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 0, i32 2, i32 3), align 8, !tbaa !84
  %132 = sext i32 %130 to i64
  %133 = getelementptr inbounds i32, ptr %131, i64 %132
  %134 = load i32, ptr %133, align 4, !tbaa !25
  %135 = and i32 %134, 1023
  %136 = icmp eq i32 %135, 1023
  %137 = add i32 %134, 1
  %138 = or i32 %134, 1023
  %139 = select i1 %136, i32 %138, i32 %137
  %140 = lshr i32 %134, 10
  %141 = shl i32 %53, 22
  %142 = sub nsw i32 %141, %140
  %143 = ashr i32 %142, 3
  %144 = zext i32 %135 to i64
  %145 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %144
  %146 = load i32, ptr %145, align 4, !tbaa !25
  %147 = mul nsw i32 %143, %146
  %148 = and i32 %147, -1024
  %149 = add i32 %148, %139
  store i32 %149, ptr %133, align 4, !tbaa !25
  store i32 %129, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 0, i32 1), align 4, !tbaa !82
  %150 = zext i8 %128 to i64
  %151 = getelementptr inbounds i32, ptr %131, i64 %150
  %152 = load i32, ptr %151, align 4, !tbaa !25
  %153 = lshr i32 %152, 20
  %154 = zext i32 %153 to i64
  %155 = getelementptr inbounds i16, ptr %122, i64 %154
  %156 = load i16, ptr %155, align 2, !tbaa !31
  %157 = load i32, ptr %123, align 8, !tbaa !64
  %158 = add nsw i32 %157, 1
  store i32 %158, ptr %123, align 8, !tbaa !64
  %159 = sext i32 %157 to i64
  %160 = getelementptr inbounds i16, ptr %125, i64 %159
  store i16 %156, ptr %160, align 2, !tbaa !31
  %161 = zext i32 %110 to i64
  %162 = getelementptr inbounds i8, ptr %121, i64 %161
  %163 = load i8, ptr %162, align 1, !tbaa !9
  %164 = zext i8 %163 to i32
  %165 = load i32, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1, i32 1), align 4, !tbaa !82
  %166 = load ptr, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1, i32 2, i32 3), align 8, !tbaa !84
  %167 = sext i32 %165 to i64
  %168 = getelementptr inbounds i32, ptr %166, i64 %167
  %169 = load i32, ptr %168, align 4, !tbaa !25
  %170 = and i32 %169, 1023
  %171 = icmp eq i32 %170, 1023
  %172 = add i32 %169, 1
  %173 = or i32 %169, 1023
  %174 = select i1 %171, i32 %173, i32 %172
  %175 = lshr i32 %169, 10
  %176 = load i32, ptr @y, align 4, !tbaa !25
  %177 = shl i32 %176, 22
  %178 = sub nsw i32 %177, %175
  %179 = ashr i32 %178, 3
  %180 = zext i32 %170 to i64
  %181 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %180
  %182 = load i32, ptr %181, align 4, !tbaa !25
  %183 = mul nsw i32 %179, %182
  %184 = and i32 %183, -1024
  %185 = add i32 %184, %174
  store i32 %185, ptr %168, align 4, !tbaa !25
  store i32 %164, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1, i32 1), align 4, !tbaa !82
  %186 = zext i8 %163 to i64
  %187 = getelementptr inbounds i32, ptr %166, i64 %186
  %188 = load i32, ptr %187, align 4, !tbaa !25
  %189 = lshr i32 %188, 20
  %190 = zext i32 %189 to i64
  %191 = getelementptr inbounds i16, ptr %122, i64 %190
  %192 = load i16, ptr %191, align 2, !tbaa !31
  %193 = load i32, ptr %123, align 8, !tbaa !64
  %194 = add nsw i32 %193, 1
  store i32 %194, ptr %123, align 8, !tbaa !64
  %195 = sext i32 %193 to i64
  %196 = getelementptr inbounds i16, ptr %125, i64 %195
  store i16 %192, ptr %196, align 2, !tbaa !31
  %197 = zext i32 %120 to i64
  %198 = getelementptr inbounds i8, ptr %121, i64 %197
  %199 = load i8, ptr %198, align 1, !tbaa !9
  %200 = zext i8 %199 to i32
  %201 = load i32, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2, i32 1), align 4, !tbaa !82
  %202 = load ptr, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2, i32 2, i32 3), align 8, !tbaa !84
  %203 = sext i32 %201 to i64
  %204 = getelementptr inbounds i32, ptr %202, i64 %203
  %205 = load i32, ptr %204, align 4, !tbaa !25
  %206 = and i32 %205, 1023
  %207 = icmp eq i32 %206, 1023
  %208 = add i32 %205, 1
  %209 = or i32 %205, 1023
  %210 = select i1 %207, i32 %209, i32 %208
  %211 = lshr i32 %205, 10
  %212 = load i32, ptr @y, align 4, !tbaa !25
  %213 = shl i32 %212, 22
  %214 = sub nsw i32 %213, %211
  %215 = ashr i32 %214, 3
  %216 = zext i32 %206 to i64
  %217 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %216
  %218 = load i32, ptr %217, align 4, !tbaa !25
  %219 = mul nsw i32 %215, %218
  %220 = and i32 %219, -1024
  %221 = add i32 %220, %210
  store i32 %221, ptr %204, align 4, !tbaa !25
  store i32 %200, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2, i32 1), align 4, !tbaa !82
  %222 = zext i8 %199 to i64
  %223 = getelementptr inbounds i32, ptr %202, i64 %222
  %224 = load i32, ptr %223, align 4, !tbaa !25
  %225 = lshr i32 %224, 20
  %226 = zext i32 %225 to i64
  %227 = getelementptr inbounds i16, ptr %122, i64 %226
  %228 = load i16, ptr %227, align 2, !tbaa !31
  %229 = load i32, ptr %123, align 8, !tbaa !64
  %230 = add nsw i32 %229, 1
  store i32 %230, ptr %123, align 8, !tbaa !64
  %231 = sext i32 %229 to i64
  %232 = getelementptr inbounds i16, ptr %125, i64 %231
  store i16 %228, ptr %232, align 2, !tbaa !31
  ret void

233:                                              ; preds = %7
  %234 = landingpad { ptr, i32 }
          cleanup
  br label %244

235:                                              ; preds = %16
  %236 = landingpad { ptr, i32 }
          cleanup
  br label %244

237:                                              ; preds = %18, %17
  %238 = phi ptr [ getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1), %17 ], [ getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2), %18 ]
  %239 = landingpad { ptr, i32 }
          cleanup
  br label %240

240:                                              ; preds = %237, %240
  %241 = phi ptr [ %242, %240 ], [ %238, %237 ]
  %242 = getelementptr inbounds %class.StateMap, ptr %241, i64 -1
  tail call void @_ZN8StateMapD2Ev(ptr noundef nonnull align 8 dereferenceable(32) %242) #39
  %243 = icmp eq ptr %242, @_ZZ8picModelR5MixerE2sm
  br i1 %243, label %244, label %240

244:                                              ; preds = %240, %235, %233
  %245 = phi ptr [ @_ZGVZ8picModelR5MixerE1t, %233 ], [ @_ZGVZ8picModelR5MixerE2sm, %235 ], [ @_ZGVZ8picModelR5MixerE2sm, %240 ]
  %246 = phi { ptr, i32 } [ %234, %233 ], [ %236, %235 ], [ %239, %240 ]
  tail call void @__cxa_guard_abort(ptr nonnull %245) #39
  resume { ptr, i32 } %246
}

; Function Attrs: mustprogress nounwind willreturn uwtable
define internal void @__cxx_global_array_dtor(ptr nocapture readnone %0) #15 section ".text.startup" {
  %2 = load i32, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2, i32 2), align 8, !tbaa !10
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = shl i32 %2, 2
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = load ptr, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 2, i32 2, i32 2), align 16, !tbaa !17
  tail call void @free(ptr noundef %10) #39
  %11 = load i32, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1, i32 2), align 8, !tbaa !10
  %12 = load i32, ptr @programChecker, align 8, !tbaa !13
  %13 = shl i32 %11, 2
  %14 = sub i32 %12, %13
  store i32 %14, ptr @programChecker, align 8, !tbaa !13
  %15 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %16 = icmp sgt i32 %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %9
  store i32 %14, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %18

18:                                               ; preds = %17, %9
  %19 = load ptr, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 1, i32 2, i32 2), align 16, !tbaa !17
  tail call void @free(ptr noundef %19) #39
  %20 = load i32, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 0, i32 2), align 8, !tbaa !10
  %21 = load i32, ptr @programChecker, align 8, !tbaa !13
  %22 = shl i32 %20, 2
  %23 = sub i32 %21, %22
  store i32 %23, ptr @programChecker, align 8, !tbaa !13
  %24 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %25 = icmp sgt i32 %23, %24
  br i1 %25, label %26, label %27

26:                                               ; preds = %18
  store i32 %23, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %27

27:                                               ; preds = %26, %18
  %28 = load ptr, ptr getelementptr inbounds ([3 x %class.StateMap], ptr @_ZZ8picModelR5MixerE2sm, i64 0, i64 0, i32 2, i32 2), align 16, !tbaa !17
  tail call void @free(ptr noundef %28) #39
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z9wordModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ9wordModelR5MixerE2cm acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9wordModelR5MixerE2cm) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @level, align 4, !tbaa !25
  %9 = shl i32 1048576, %8
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ9wordModelR5MixerE2cm, i32 noundef %9, i32 noundef 20)
          to label %10 unwind label %27

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ9wordModelR5MixerE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9wordModelR5MixerE2cm) #39
  br label %12

12:                                               ; preds = %10, %4, %1
  %13 = load i32, ptr @bpos, align 4, !tbaa !25
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %354

15:                                               ; preds = %12
  %16 = load i32, ptr @c4, align 4, !tbaa !25
  %17 = and i32 %16, 255
  %18 = add nsw i32 %17, -65
  %19 = icmp ult i32 %18, 26
  %20 = add nuw nsw i32 %17, 32
  %21 = select i1 %19, i32 %20, i32 %17
  %22 = add nsw i32 %21, -97
  %23 = icmp ult i32 %22, 26
  %24 = icmp ugt i32 %21, 127
  %25 = or i1 %24, %23
  %26 = load i32, ptr @_ZZ9wordModelR5MixerE5word0, align 4, !tbaa !25
  br i1 %25, label %29, label %35

27:                                               ; preds = %7
  %28 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ9wordModelR5MixerE2cm) #39
  resume { ptr, i32 } %28

29:                                               ; preds = %15
  %30 = mul i32 %26, 8416
  %31 = add i32 %30, %21
  store i32 %31, ptr @_ZZ9wordModelR5MixerE5word0, align 4, !tbaa !25
  %32 = load i32, ptr @_ZZ9wordModelR5MixerE5text0, align 4, !tbaa !25
  %33 = mul i32 %32, 15952
  %34 = add i32 %33, %21
  store i32 %34, ptr @_ZZ9wordModelR5MixerE5text0, align 4, !tbaa !25
  br label %53

35:                                               ; preds = %15
  %36 = icmp eq i32 %26, 0
  br i1 %36, label %47, label %37

37:                                               ; preds = %35
  %38 = load i32, ptr @_ZZ9wordModelR5MixerE5word4, align 4, !tbaa !25
  %39 = mul i32 %38, 23
  store i32 %39, ptr @_ZZ9wordModelR5MixerE5word5, align 4, !tbaa !25
  %40 = load i32, ptr @_ZZ9wordModelR5MixerE5word3, align 4, !tbaa !25
  %41 = mul i32 %40, 19
  store i32 %41, ptr @_ZZ9wordModelR5MixerE5word4, align 4, !tbaa !25
  %42 = load i32, ptr @_ZZ9wordModelR5MixerE5word2, align 4, !tbaa !25
  %43 = mul i32 %42, 17
  store i32 %43, ptr @_ZZ9wordModelR5MixerE5word3, align 4, !tbaa !25
  %44 = load i32, ptr @_ZZ9wordModelR5MixerE5word1, align 4, !tbaa !25
  %45 = mul i32 %44, 13
  store i32 %45, ptr @_ZZ9wordModelR5MixerE5word2, align 4, !tbaa !25
  %46 = mul i32 %26, 11
  store i32 %46, ptr @_ZZ9wordModelR5MixerE5word1, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9wordModelR5MixerE5word0, align 4, !tbaa !25
  br label %47

47:                                               ; preds = %35, %37
  %48 = icmp eq i32 %21, 10
  br i1 %48, label %49, label %53

49:                                               ; preds = %47
  %50 = load i32, ptr @_ZZ9wordModelR5MixerE2nl, align 4, !tbaa !25
  store i32 %50, ptr @_ZZ9wordModelR5MixerE3nl1, align 4, !tbaa !25
  %51 = load i32, ptr @pos, align 4, !tbaa !25
  %52 = add nsw i32 %51, -1
  store i32 %52, ptr @_ZZ9wordModelR5MixerE2nl, align 4, !tbaa !25
  br label %53

53:                                               ; preds = %29, %49, %47
  %54 = phi i32 [ %31, %29 ], [ 0, %49 ], [ 0, %47 ]
  %55 = load i32, ptr @pos, align 4, !tbaa !25
  %56 = load i32, ptr @_ZZ9wordModelR5MixerE2nl, align 4, !tbaa !25
  %57 = sub nsw i32 %55, %56
  %58 = tail call i32 @llvm.smin.i32(i32 %57, i32 255)
  %59 = load i32, ptr @_ZZ9wordModelR5MixerE3nl1, align 4, !tbaa !25
  %60 = add nsw i32 %58, %59
  %61 = load i32, ptr @buf, align 8, !tbaa !20
  %62 = add nsw i32 %61, -1
  %63 = and i32 %62, %60
  %64 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %65 = sext i32 %63 to i64
  %66 = getelementptr inbounds i8, ptr %64, i64 %65
  %67 = load i8, ptr %66, align 1, !tbaa !9
  %68 = zext i8 %67 to i32
  %69 = mul i32 %54, 271
  %70 = add nsw i32 %55, -1
  %71 = and i32 %62, %70
  %72 = sext i32 %71 to i64
  %73 = getelementptr inbounds i8, ptr %64, i64 %72
  %74 = load i8, ptr %73, align 1, !tbaa !9
  %75 = zext i8 %74 to i32
  %76 = add i32 %69, %75
  %77 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %78 = add nsw i32 %77, 1
  store i32 %78, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %79 = mul i32 %76, 987654323
  %80 = add i32 %79, %77
  %81 = tail call i32 @llvm.fshl.i32(i32 %80, i32 %80, i32 16)
  %82 = mul i32 %81, 123456791
  %83 = add i32 %82, %77
  %84 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %85 = sext i32 %77 to i64
  %86 = getelementptr inbounds i32, ptr %84, i64 %85
  store i32 %83, ptr %86, align 4, !tbaa !25
  %87 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %88 = add nsw i32 %87, 1
  store i32 %88, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %89 = mul i32 %54, 987654323
  %90 = add i32 %87, %89
  %91 = tail call i32 @llvm.fshl.i32(i32 %90, i32 %90, i32 16)
  %92 = mul i32 %91, 123456791
  %93 = add i32 %92, %87
  %94 = sext i32 %87 to i64
  %95 = getelementptr inbounds i32, ptr %84, i64 %94
  store i32 %93, ptr %95, align 4, !tbaa !25
  %96 = load i32, ptr @_ZZ9wordModelR5MixerE5word1, align 4, !tbaa !25
  %97 = add i32 %96, %76
  %98 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %99 = add nsw i32 %98, 1
  store i32 %99, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %100 = mul i32 %97, 987654323
  %101 = add i32 %100, %98
  %102 = tail call i32 @llvm.fshl.i32(i32 %101, i32 %101, i32 16)
  %103 = mul i32 %102, 123456791
  %104 = add i32 %103, %98
  %105 = sext i32 %98 to i64
  %106 = getelementptr inbounds i32, ptr %84, i64 %105
  store i32 %104, ptr %106, align 4, !tbaa !25
  %107 = mul i32 %96, 31
  %108 = add i32 %107, %54
  %109 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %110 = add nsw i32 %109, 1
  store i32 %110, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %111 = mul i32 %108, 987654323
  %112 = add i32 %109, %111
  %113 = tail call i32 @llvm.fshl.i32(i32 %112, i32 %112, i32 16)
  %114 = mul i32 %113, 123456791
  %115 = add i32 %114, %109
  %116 = sext i32 %109 to i64
  %117 = getelementptr inbounds i32, ptr %84, i64 %116
  store i32 %115, ptr %117, align 4, !tbaa !25
  %118 = load i32, ptr @_ZZ9wordModelR5MixerE5word2, align 4, !tbaa !25
  %119 = mul i32 %118, 29
  %120 = add i32 %119, %97
  %121 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %122 = add nsw i32 %121, 1
  store i32 %122, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %123 = mul i32 %120, 987654323
  %124 = add i32 %123, %121
  %125 = tail call i32 @llvm.fshl.i32(i32 %124, i32 %124, i32 16)
  %126 = mul i32 %125, 123456791
  %127 = add i32 %126, %121
  %128 = sext i32 %121 to i64
  %129 = getelementptr inbounds i32, ptr %84, i64 %128
  store i32 %127, ptr %129, align 4, !tbaa !25
  %130 = load i32, ptr @_ZZ9wordModelR5MixerE5text0, align 4, !tbaa !25
  %131 = and i32 %130, 16777215
  %132 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %133 = add nsw i32 %132, 1
  store i32 %133, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %134 = mul i32 %131, 987654323
  %135 = add i32 %134, %132
  %136 = tail call i32 @llvm.fshl.i32(i32 %135, i32 %135, i32 16)
  %137 = mul i32 %136, 123456791
  %138 = add i32 %137, %132
  %139 = sext i32 %132 to i64
  %140 = getelementptr inbounds i32, ptr %84, i64 %139
  store i32 %138, ptr %140, align 4, !tbaa !25
  %141 = and i32 %130, 1048575
  %142 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %143 = add nsw i32 %142, 1
  store i32 %143, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %144 = mul i32 %141, 987654323
  %145 = add i32 %142, %144
  %146 = tail call i32 @llvm.fshl.i32(i32 %145, i32 %145, i32 16)
  %147 = mul i32 %146, 123456791
  %148 = add i32 %147, %142
  %149 = sext i32 %142 to i64
  %150 = getelementptr inbounds i32, ptr %84, i64 %149
  store i32 %148, ptr %150, align 4, !tbaa !25
  %151 = add i32 %118, %76
  %152 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %153 = add nsw i32 %152, 1
  store i32 %153, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %154 = mul i32 %151, 987654323
  %155 = add i32 %152, %154
  %156 = tail call i32 @llvm.fshl.i32(i32 %155, i32 %155, i32 16)
  %157 = mul i32 %156, 123456791
  %158 = add i32 %157, %152
  %159 = sext i32 %152 to i64
  %160 = getelementptr inbounds i32, ptr %84, i64 %159
  store i32 %158, ptr %160, align 4, !tbaa !25
  %161 = load i32, ptr @_ZZ9wordModelR5MixerE5word3, align 4, !tbaa !25
  %162 = add i32 %161, %76
  %163 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %164 = add nsw i32 %163, 1
  store i32 %164, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %165 = mul i32 %162, 987654323
  %166 = add i32 %165, %163
  %167 = tail call i32 @llvm.fshl.i32(i32 %166, i32 %166, i32 16)
  %168 = mul i32 %167, 123456791
  %169 = add i32 %168, %163
  %170 = sext i32 %163 to i64
  %171 = getelementptr inbounds i32, ptr %84, i64 %170
  store i32 %169, ptr %171, align 4, !tbaa !25
  %172 = load i32, ptr @_ZZ9wordModelR5MixerE5word4, align 4, !tbaa !25
  %173 = add i32 %172, %76
  %174 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %175 = add nsw i32 %174, 1
  store i32 %175, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %176 = mul i32 %173, 987654323
  %177 = add i32 %176, %174
  %178 = tail call i32 @llvm.fshl.i32(i32 %177, i32 %177, i32 16)
  %179 = mul i32 %178, 123456791
  %180 = add i32 %179, %174
  %181 = sext i32 %174 to i64
  %182 = getelementptr inbounds i32, ptr %84, i64 %181
  store i32 %180, ptr %182, align 4, !tbaa !25
  %183 = load i32, ptr @_ZZ9wordModelR5MixerE5word5, align 4, !tbaa !25
  %184 = add i32 %183, %76
  %185 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %186 = add nsw i32 %185, 1
  store i32 %186, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %187 = mul i32 %184, 987654323
  %188 = add i32 %187, %185
  %189 = tail call i32 @llvm.fshl.i32(i32 %188, i32 %188, i32 16)
  %190 = mul i32 %189, 123456791
  %191 = add i32 %190, %185
  %192 = sext i32 %185 to i64
  %193 = getelementptr inbounds i32, ptr %84, i64 %192
  store i32 %191, ptr %193, align 4, !tbaa !25
  %194 = load i32, ptr @pos, align 4, !tbaa !25
  %195 = add nsw i32 %194, -1
  %196 = load i32, ptr @buf, align 8, !tbaa !20
  %197 = add nsw i32 %196, -1
  %198 = and i32 %197, %195
  %199 = sext i32 %198 to i64
  %200 = getelementptr inbounds i8, ptr %64, i64 %199
  %201 = load i8, ptr %200, align 1, !tbaa !9
  %202 = zext i8 %201 to i32
  %203 = add nsw i32 %194, -3
  %204 = and i32 %197, %203
  %205 = sext i32 %204 to i64
  %206 = getelementptr inbounds i8, ptr %64, i64 %205
  %207 = load i8, ptr %206, align 1, !tbaa !9
  %208 = zext i8 %207 to i32
  %209 = shl nuw nsw i32 %208, 8
  %210 = or i32 %209, %202
  %211 = add nsw i32 %194, -5
  %212 = and i32 %197, %211
  %213 = sext i32 %212 to i64
  %214 = getelementptr inbounds i8, ptr %64, i64 %213
  %215 = load i8, ptr %214, align 1, !tbaa !9
  %216 = zext i8 %215 to i32
  %217 = shl nuw nsw i32 %216, 16
  %218 = or i32 %210, %217
  %219 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %220 = add nsw i32 %219, 1
  store i32 %220, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %221 = mul i32 %218, 987654323
  %222 = add i32 %221, %219
  %223 = tail call i32 @llvm.fshl.i32(i32 %222, i32 %222, i32 16)
  %224 = mul i32 %223, 123456791
  %225 = add i32 %224, %219
  %226 = sext i32 %219 to i64
  %227 = getelementptr inbounds i32, ptr %84, i64 %226
  store i32 %225, ptr %227, align 4, !tbaa !25
  %228 = load i32, ptr @pos, align 4, !tbaa !25
  %229 = add nsw i32 %228, -2
  %230 = load i32, ptr @buf, align 8, !tbaa !20
  %231 = add nsw i32 %230, -1
  %232 = and i32 %231, %229
  %233 = sext i32 %232 to i64
  %234 = getelementptr inbounds i8, ptr %64, i64 %233
  %235 = load i8, ptr %234, align 1, !tbaa !9
  %236 = zext i8 %235 to i32
  %237 = add nsw i32 %228, -4
  %238 = and i32 %231, %237
  %239 = sext i32 %238 to i64
  %240 = getelementptr inbounds i8, ptr %64, i64 %239
  %241 = load i8, ptr %240, align 1, !tbaa !9
  %242 = zext i8 %241 to i32
  %243 = shl nuw nsw i32 %242, 8
  %244 = or i32 %243, %236
  %245 = add nsw i32 %228, -6
  %246 = and i32 %231, %245
  %247 = sext i32 %246 to i64
  %248 = getelementptr inbounds i8, ptr %64, i64 %247
  %249 = load i8, ptr %248, align 1, !tbaa !9
  %250 = zext i8 %249 to i32
  %251 = shl nuw nsw i32 %250, 16
  %252 = or i32 %244, %251
  %253 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %254 = add nsw i32 %253, 1
  store i32 %254, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %255 = mul i32 %252, 987654323
  %256 = add i32 %255, %253
  %257 = tail call i32 @llvm.fshl.i32(i32 %256, i32 %256, i32 16)
  %258 = mul i32 %257, 123456791
  %259 = add i32 %258, %253
  %260 = sext i32 %253 to i64
  %261 = getelementptr inbounds i32, ptr %84, i64 %260
  store i32 %259, ptr %261, align 4, !tbaa !25
  %262 = add i32 %161, %97
  %263 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %264 = add nsw i32 %263, 1
  store i32 %264, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %265 = mul i32 %262, 987654323
  %266 = add i32 %263, %265
  %267 = tail call i32 @llvm.fshl.i32(i32 %266, i32 %266, i32 16)
  %268 = mul i32 %267, 123456791
  %269 = add i32 %268, %263
  %270 = sext i32 %263 to i64
  %271 = getelementptr inbounds i32, ptr %84, i64 %270
  store i32 %269, ptr %271, align 4, !tbaa !25
  %272 = add i32 %161, %151
  %273 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %274 = add nsw i32 %273, 1
  store i32 %274, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %275 = mul i32 %272, 987654323
  %276 = add i32 %273, %275
  %277 = tail call i32 @llvm.fshl.i32(i32 %276, i32 %276, i32 16)
  %278 = mul i32 %277, 123456791
  %279 = add i32 %278, %273
  %280 = sext i32 %273 to i64
  %281 = getelementptr inbounds i32, ptr %84, i64 %280
  store i32 %279, ptr %281, align 4, !tbaa !25
  %282 = shl i32 %58, 16
  %283 = load i32, ptr @pos, align 4, !tbaa !25
  %284 = add nsw i32 %283, -1
  %285 = load i32, ptr @buf, align 8, !tbaa !20
  %286 = add nsw i32 %285, -1
  %287 = and i32 %286, %284
  %288 = sext i32 %287 to i64
  %289 = getelementptr inbounds i8, ptr %64, i64 %288
  %290 = load i8, ptr %289, align 1, !tbaa !9
  %291 = zext i8 %290 to i32
  %292 = shl nuw nsw i32 %291, 8
  %293 = or i32 %292, %282
  %294 = or i32 %293, %68
  %295 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %296 = add nsw i32 %295, 1
  store i32 %296, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %297 = mul i32 %294, 987654323
  %298 = add i32 %297, %295
  %299 = tail call i32 @llvm.fshl.i32(i32 %298, i32 %298, i32 16)
  %300 = mul i32 %299, 123456791
  %301 = add i32 %300, %295
  %302 = sext i32 %295 to i64
  %303 = getelementptr inbounds i32, ptr %84, i64 %302
  store i32 %301, ptr %303, align 4, !tbaa !25
  %304 = load i32, ptr @pos, align 4, !tbaa !25
  %305 = add nsw i32 %304, -1
  %306 = load i32, ptr @buf, align 8, !tbaa !20
  %307 = add nsw i32 %306, -1
  %308 = and i32 %307, %305
  %309 = sext i32 %308 to i64
  %310 = getelementptr inbounds i8, ptr %64, i64 %309
  %311 = load i8, ptr %310, align 1, !tbaa !9
  %312 = zext i8 %311 to i32
  %313 = shl nuw nsw i32 %312, 8
  %314 = or i32 %313, %68
  %315 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %316 = add nsw i32 %315, 1
  store i32 %316, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %317 = mul i32 %314, 987654323
  %318 = add i32 %317, %315
  %319 = tail call i32 @llvm.fshl.i32(i32 %318, i32 %318, i32 16)
  %320 = mul i32 %319, 123456791
  %321 = add i32 %320, %315
  %322 = sext i32 %315 to i64
  %323 = getelementptr inbounds i32, ptr %84, i64 %322
  store i32 %321, ptr %323, align 4, !tbaa !25
  %324 = shl i32 %58, 8
  %325 = load i32, ptr @pos, align 4, !tbaa !25
  %326 = add nsw i32 %325, -1
  %327 = load i32, ptr @buf, align 8, !tbaa !20
  %328 = add nsw i32 %327, -1
  %329 = and i32 %328, %326
  %330 = sext i32 %329 to i64
  %331 = getelementptr inbounds i8, ptr %64, i64 %330
  %332 = load i8, ptr %331, align 1, !tbaa !9
  %333 = zext i8 %332 to i32
  %334 = or i32 %324, %333
  %335 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %336 = add nsw i32 %335, 1
  store i32 %336, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %337 = mul i32 %334, 987654323
  %338 = add i32 %337, %335
  %339 = tail call i32 @llvm.fshl.i32(i32 %338, i32 %338, i32 16)
  %340 = mul i32 %339, 123456791
  %341 = add i32 %340, %335
  %342 = sext i32 %335 to i64
  %343 = getelementptr inbounds i32, ptr %84, i64 %342
  store i32 %341, ptr %343, align 4, !tbaa !25
  %344 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %345 = add nsw i32 %344, 1
  store i32 %345, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9wordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %346 = mul i32 %58, 987654323
  %347 = add i32 %344, %346
  %348 = tail call i32 @llvm.fshl.i32(i32 %347, i32 %347, i32 16)
  %349 = mul i32 %348, 123456791
  %350 = add i32 %349, %344
  %351 = sext i32 %344 to i64
  %352 = getelementptr inbounds i32, ptr %84, i64 %351
  store i32 %350, ptr %352, align 4, !tbaa !25
  %353 = load i32, ptr @bpos, align 4, !tbaa !25
  br label %354

354:                                              ; preds = %53, %12
  %355 = phi i32 [ %353, %53 ], [ %13, %12 ]
  %356 = load i32, ptr @c0, align 4, !tbaa !25
  %357 = load i32, ptr @pos, align 4, !tbaa !25
  %358 = add nsw i32 %357, -1
  %359 = load i32, ptr @buf, align 8, !tbaa !20
  %360 = add nsw i32 %359, -1
  %361 = and i32 %360, %358
  %362 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %363 = sext i32 %361 to i64
  %364 = getelementptr inbounds i8, ptr %362, i64 %363
  %365 = load i8, ptr %364, align 1, !tbaa !9
  %366 = zext i8 %365 to i32
  %367 = load i32, ptr @y, align 4, !tbaa !25
  %368 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ9wordModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %356, i32 noundef %355, i32 noundef %366, i32 noundef %367)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z11recordModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ11recordModelR5MixerE2cm acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11recordModelR5MixerE2cm) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cm, i32 noundef 32768, i32 noundef 3)
          to label %8 unwind label %100

8:                                                ; preds = %7
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11recordModelR5MixerE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11recordModelR5MixerE2cm) #39
  br label %10

10:                                               ; preds = %8, %4, %1
  %11 = load atomic i8, ptr @_ZGVZ11recordModelR5MixerE2cn acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19, !prof !110

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11recordModelR5MixerE2cn) #39
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cn, i32 noundef 16384, i32 noundef 3)
          to label %17 unwind label %102

17:                                               ; preds = %16
  %18 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11recordModelR5MixerE2cn, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11recordModelR5MixerE2cn) #39
  br label %19

19:                                               ; preds = %17, %13, %10
  %20 = load atomic i8, ptr @_ZGVZ11recordModelR5MixerE2co acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %28, !prof !110

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11recordModelR5MixerE2co) #39
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2co, i32 noundef 65536, i32 noundef 3)
          to label %26 unwind label %104

26:                                               ; preds = %25
  %27 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11recordModelR5MixerE2co, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11recordModelR5MixerE2co) #39
  br label %28

28:                                               ; preds = %26, %22, %19
  %29 = load atomic i8, ptr @_ZGVZ11recordModelR5MixerE2cp acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %39, !prof !110

31:                                               ; preds = %28
  %32 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11recordModelR5MixerE2cp) #39
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %31
  %35 = load i32, ptr @level, align 4, !tbaa !25
  %36 = shl i32 65536, %35
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cp, i32 noundef %36, i32 noundef 3)
          to label %37 unwind label %106

37:                                               ; preds = %34
  %38 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11recordModelR5MixerE2cp, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11recordModelR5MixerE2cp) #39
  br label %39

39:                                               ; preds = %37, %31, %28
  %40 = load i32, ptr @bpos, align 4, !tbaa !25
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %44, label %42

42:                                               ; preds = %39
  %43 = load i32, ptr @pos, align 4, !tbaa !25
  br label %437

44:                                               ; preds = %39
  %45 = load i32, ptr @c4, align 4, !tbaa !25
  %46 = and i32 %45, 65535
  %47 = and i32 %45, 255
  %48 = lshr i32 %46, 8
  %49 = load i32, ptr @pos, align 4, !tbaa !25
  %50 = zext i32 %47 to i64
  %51 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos1, i64 0, i64 %50
  %52 = load i32, ptr %51, align 4, !tbaa !25
  %53 = sub nsw i32 %49, %52
  %54 = icmp sgt i32 %53, 1
  br i1 %54, label %55, label %122

55:                                               ; preds = %44
  %56 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos2, i64 0, i64 %50
  %57 = load i32, ptr %56, align 4, !tbaa !25
  %58 = sub nsw i32 %52, %57
  %59 = icmp eq i32 %53, %58
  br i1 %59, label %60, label %122

60:                                               ; preds = %55
  %61 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos3, i64 0, i64 %50
  %62 = load i32, ptr %61, align 4, !tbaa !25
  %63 = sub nsw i32 %57, %62
  %64 = icmp eq i32 %53, %63
  br i1 %64, label %65, label %122

65:                                               ; preds = %60
  %66 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos4, i64 0, i64 %50
  %67 = load i32, ptr %66, align 4, !tbaa !25
  %68 = sub nsw i32 %62, %67
  %69 = icmp eq i32 %53, %68
  br i1 %69, label %70, label %122

70:                                               ; preds = %65
  %71 = icmp ugt i32 %53, 15
  br i1 %71, label %94, label %72

72:                                               ; preds = %70
  %73 = mul nuw nsw i32 %53, 5
  %74 = xor i32 %73, -1
  %75 = add i32 %49, %74
  %76 = load i32, ptr @buf, align 8, !tbaa !20
  %77 = add nsw i32 %76, -1
  %78 = and i32 %77, %75
  %79 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %80 = sext i32 %78 to i64
  %81 = getelementptr inbounds i8, ptr %79, i64 %80
  %82 = load i8, ptr %81, align 1, !tbaa !9
  %83 = trunc i32 %45 to i8
  %84 = icmp eq i8 %82, %83
  br i1 %84, label %85, label %122

85:                                               ; preds = %72
  %86 = mul nuw nsw i32 %53, 6
  %87 = xor i32 %86, -1
  %88 = add i32 %49, %87
  %89 = and i32 %77, %88
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds i8, ptr %79, i64 %90
  %92 = load i8, ptr %91, align 1, !tbaa !9
  %93 = icmp eq i8 %92, %82
  br i1 %93, label %94, label %122

94:                                               ; preds = %85, %70
  %95 = load i32, ptr @_ZZ11recordModelR5MixerE5rlen1, align 4, !tbaa !25
  %96 = icmp eq i32 %53, %95
  br i1 %96, label %97, label %108

97:                                               ; preds = %94
  %98 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !25
  %99 = add nsw i32 %98, 1
  store i32 %99, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !25
  br label %124

100:                                              ; preds = %7
  %101 = landingpad { ptr, i32 }
          cleanup
  br label %494

102:                                              ; preds = %16
  %103 = landingpad { ptr, i32 }
          cleanup
  br label %494

104:                                              ; preds = %25
  %105 = landingpad { ptr, i32 }
          cleanup
  br label %494

106:                                              ; preds = %34
  %107 = landingpad { ptr, i32 }
          cleanup
  br label %494

108:                                              ; preds = %94
  %109 = load i32, ptr @_ZZ11recordModelR5MixerE5rlen2, align 4, !tbaa !25
  %110 = icmp eq i32 %53, %109
  br i1 %110, label %111, label %114

111:                                              ; preds = %108
  %112 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !25
  %113 = add nsw i32 %112, 1
  br label %120

114:                                              ; preds = %108
  %115 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !25
  %116 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !25
  %117 = icmp sgt i32 %115, %116
  br i1 %117, label %118, label %119

118:                                              ; preds = %114
  store i32 %53, ptr @_ZZ11recordModelR5MixerE5rlen2, align 4, !tbaa !25
  br label %120

119:                                              ; preds = %114
  store i32 %53, ptr @_ZZ11recordModelR5MixerE5rlen1, align 4, !tbaa !25
  store i32 1, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !25
  br label %133

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %113, %111 ], [ 1, %118 ]
  store i32 %121, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !25
  br label %122

122:                                              ; preds = %120, %44, %55, %60, %65, %72, %85
  %123 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !25
  br label %124

124:                                              ; preds = %122, %97
  %125 = phi i32 [ %123, %122 ], [ %99, %97 ]
  %126 = icmp sgt i32 %125, 15
  br i1 %126, label %127, label %131

127:                                              ; preds = %124
  %128 = load i32, ptr @_ZZ11recordModelR5MixerE4rlen, align 4, !tbaa !25
  %129 = load i32, ptr @_ZZ11recordModelR5MixerE5rlen1, align 4, !tbaa !25
  %130 = icmp eq i32 %128, %129
  br i1 %130, label %131, label %140

131:                                              ; preds = %124, %127
  %132 = load i32, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !25
  br label %133

133:                                              ; preds = %131, %119
  %134 = phi i32 [ %132, %131 ], [ %116, %119 ]
  %135 = icmp sgt i32 %134, 15
  br i1 %135, label %136, label %142

136:                                              ; preds = %133
  %137 = load i32, ptr @_ZZ11recordModelR5MixerE4rlen, align 4, !tbaa !25
  %138 = load i32, ptr @_ZZ11recordModelR5MixerE5rlen2, align 4, !tbaa !25
  %139 = icmp eq i32 %137, %138
  br i1 %139, label %142, label %140

140:                                              ; preds = %136, %127
  %141 = phi i32 [ %129, %127 ], [ %138, %136 ]
  store i32 %141, ptr @_ZZ11recordModelR5MixerE4rlen, align 4, !tbaa !25
  store i32 0, ptr @_ZZ11recordModelR5MixerE7rcount2, align 4, !tbaa !25
  store i32 0, ptr @_ZZ11recordModelR5MixerE7rcount1, align 4, !tbaa !25
  br label %142

142:                                              ; preds = %140, %136, %133
  %143 = shl nuw nsw i32 %47, 8
  %144 = tail call i32 @llvm.smin.i32(i32 %53, i32 255)
  %145 = sdiv i32 %144, 4
  %146 = or i32 %145, %143
  %147 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %148 = add nsw i32 %147, 1
  store i32 %148, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %149 = mul i32 %146, 987654323
  %150 = add i32 %147, %149
  %151 = tail call i32 @llvm.fshl.i32(i32 %150, i32 %150, i32 16)
  %152 = mul i32 %151, 123456791
  %153 = add i32 %152, %147
  %154 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %155 = sext i32 %147 to i64
  %156 = getelementptr inbounds i32, ptr %154, i64 %155
  store i32 %153, ptr %156, align 4, !tbaa !25
  %157 = shl nuw nsw i32 %46, 9
  %158 = load i32, ptr @pos, align 4, !tbaa !25
  %159 = zext i32 %46 to i64
  %160 = getelementptr inbounds [65536 x i32], ptr @_ZZ11recordModelR5MixerE5wpos1, i64 0, i64 %159
  %161 = load i32, ptr %160, align 4, !tbaa !25
  %162 = sub nsw i32 %158, %161
  %163 = icmp ugt i32 %162, 16777215
  br i1 %163, label %164, label %172

164:                                              ; preds = %142
  %165 = lshr i32 %162, 16
  %166 = zext i32 %165 to i64
  %167 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %168 = getelementptr inbounds i8, ptr %167, i64 %166
  %169 = load i8, ptr %168, align 1, !tbaa !9
  %170 = zext i8 %169 to i32
  %171 = or i32 %170, 256
  br label %188

172:                                              ; preds = %142
  %173 = icmp ugt i32 %162, 65535
  br i1 %173, label %174, label %182

174:                                              ; preds = %172
  %175 = lshr i32 %162, 8
  %176 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %177 = zext i32 %175 to i64
  %178 = getelementptr inbounds i8, ptr %176, i64 %177
  %179 = load i8, ptr %178, align 1, !tbaa !9
  %180 = zext i8 %179 to i32
  %181 = add nuw nsw i32 %180, 128
  br label %188

182:                                              ; preds = %172
  %183 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %184 = zext i32 %162 to i64
  %185 = getelementptr inbounds i8, ptr %183, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !9
  %187 = zext i8 %186 to i32
  br label %188

188:                                              ; preds = %164, %174, %182
  %189 = phi i32 [ %171, %164 ], [ %181, %174 ], [ %187, %182 ]
  %190 = lshr i32 %189, 2
  %191 = or i32 %190, %157
  %192 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %193 = add nsw i32 %192, 1
  store i32 %193, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %194 = mul i32 %191, 987654323
  %195 = add i32 %194, %192
  %196 = tail call i32 @llvm.fshl.i32(i32 %195, i32 %195, i32 16)
  %197 = mul i32 %196, 123456791
  %198 = add i32 %197, %192
  %199 = sext i32 %192 to i64
  %200 = getelementptr inbounds i32, ptr %154, i64 %199
  store i32 %198, ptr %200, align 4, !tbaa !25
  %201 = load i32, ptr @_ZZ11recordModelR5MixerE4rlen, align 4, !tbaa !25
  %202 = load i32, ptr @pos, align 4, !tbaa !25
  %203 = sub nsw i32 %202, %201
  %204 = load i32, ptr @buf, align 8, !tbaa !20
  %205 = add nsw i32 %204, -1
  %206 = and i32 %205, %203
  %207 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %208 = sext i32 %206 to i64
  %209 = getelementptr inbounds i8, ptr %207, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !9
  %211 = zext i8 %210 to i32
  %212 = shl nuw nsw i32 %211, 10
  %213 = shl nuw nsw i32 %201, 1
  %214 = sub nsw i32 %202, %213
  %215 = and i32 %205, %214
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds i8, ptr %207, i64 %216
  %218 = load i8, ptr %217, align 1, !tbaa !9
  %219 = zext i8 %218 to i32
  %220 = shl nuw nsw i32 %219, 18
  %221 = or i32 %212, %220
  %222 = or i32 %221, %201
  %223 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %224 = add nsw i32 %223, 1
  store i32 %224, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %225 = mul i32 %222, 987654323
  %226 = add i32 %225, %223
  %227 = tail call i32 @llvm.fshl.i32(i32 %226, i32 %226, i32 16)
  %228 = mul i32 %227, 123456791
  %229 = add i32 %228, %223
  %230 = sext i32 %223 to i64
  %231 = getelementptr inbounds i32, ptr %154, i64 %230
  store i32 %229, ptr %231, align 4, !tbaa !25
  %232 = shl i32 %201, 8
  %233 = or i32 %232, %46
  %234 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !102
  %235 = add nsw i32 %234, 1
  store i32 %235, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !102
  %236 = mul i32 %233, 987654323
  %237 = add i32 %234, %236
  %238 = tail call i32 @llvm.fshl.i32(i32 %237, i32 %237, i32 16)
  %239 = mul i32 %238, 123456791
  %240 = add i32 %239, %234
  %241 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %242 = sext i32 %234 to i64
  %243 = getelementptr inbounds i32, ptr %241, i64 %242
  store i32 %240, ptr %243, align 4, !tbaa !25
  %244 = shl i32 %201, 16
  %245 = or i32 %244, %48
  %246 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !102
  %247 = add nsw i32 %246, 1
  store i32 %247, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !102
  %248 = mul i32 %245, 987654323
  %249 = add i32 %246, %248
  %250 = tail call i32 @llvm.fshl.i32(i32 %249, i32 %249, i32 16)
  %251 = mul i32 %250, 123456791
  %252 = add i32 %251, %246
  %253 = sext i32 %246 to i64
  %254 = getelementptr inbounds i32, ptr %241, i64 %253
  store i32 %252, ptr %254, align 4, !tbaa !25
  %255 = or i32 %232, %47
  %256 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !102
  %257 = add nsw i32 %256, 1
  store i32 %257, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cn, i64 0, i32 8), align 8, !tbaa !102
  %258 = mul i32 %255, 987654323
  %259 = add i32 %256, %258
  %260 = tail call i32 @llvm.fshl.i32(i32 %259, i32 %259, i32 16)
  %261 = mul i32 %260, 123456791
  %262 = add i32 %261, %256
  %263 = sext i32 %256 to i64
  %264 = getelementptr inbounds i32, ptr %241, i64 %263
  store i32 %262, ptr %264, align 4, !tbaa !25
  %265 = load i32, ptr @pos, align 4, !tbaa !25
  %266 = add nsw i32 %265, -1
  %267 = load i32, ptr @buf, align 8, !tbaa !20
  %268 = add nsw i32 %267, -1
  %269 = and i32 %268, %266
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds i8, ptr %207, i64 %270
  %272 = load i8, ptr %271, align 1, !tbaa !9
  %273 = zext i8 %272 to i32
  %274 = shl nuw nsw i32 %273, 8
  %275 = zext i8 %272 to i64
  %276 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos1, i64 0, i64 %275
  %277 = load i32, ptr %276, align 4, !tbaa !25
  %278 = sub nsw i32 %265, %277
  %279 = tail call i32 @llvm.smin.i32(i32 %278, i32 255)
  %280 = or i32 %279, %274
  %281 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !102
  %282 = add nsw i32 %281, 1
  store i32 %282, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !102
  %283 = mul i32 %280, 987654323
  %284 = add i32 %283, %281
  %285 = tail call i32 @llvm.fshl.i32(i32 %284, i32 %284, i32 16)
  %286 = mul i32 %285, 123456791
  %287 = add i32 %286, %281
  %288 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %289 = sext i32 %281 to i64
  %290 = getelementptr inbounds i32, ptr %288, i64 %289
  store i32 %287, ptr %290, align 4, !tbaa !25
  %291 = load i32, ptr @pos, align 4, !tbaa !25
  %292 = add nsw i32 %291, -1
  %293 = load i32, ptr @buf, align 8, !tbaa !20
  %294 = add nsw i32 %293, -1
  %295 = and i32 %294, %292
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds i8, ptr %207, i64 %296
  %298 = load i8, ptr %297, align 1, !tbaa !9
  %299 = zext i8 %298 to i32
  %300 = shl nuw nsw i32 %299, 17
  %301 = add nsw i32 %291, -2
  %302 = and i32 %294, %301
  %303 = sext i32 %302 to i64
  %304 = getelementptr inbounds i8, ptr %207, i64 %303
  %305 = load i8, ptr %304, align 1, !tbaa !9
  %306 = zext i8 %305 to i32
  %307 = shl nuw nsw i32 %306, 9
  %308 = or i32 %307, %300
  %309 = sub nsw i32 %291, %161
  %310 = icmp ugt i32 %309, 16777215
  br i1 %310, label %311, label %319

311:                                              ; preds = %188
  %312 = lshr i32 %309, 16
  %313 = zext i32 %312 to i64
  %314 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %315 = getelementptr inbounds i8, ptr %314, i64 %313
  %316 = load i8, ptr %315, align 1, !tbaa !9
  %317 = zext i8 %316 to i32
  %318 = or i32 %317, 256
  br label %335

319:                                              ; preds = %188
  %320 = icmp ugt i32 %309, 65535
  br i1 %320, label %321, label %329

321:                                              ; preds = %319
  %322 = lshr i32 %309, 8
  %323 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %324 = zext i32 %322 to i64
  %325 = getelementptr inbounds i8, ptr %323, i64 %324
  %326 = load i8, ptr %325, align 1, !tbaa !9
  %327 = zext i8 %326 to i32
  %328 = add nuw nsw i32 %327, 128
  br label %335

329:                                              ; preds = %319
  %330 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %331 = zext i32 %309 to i64
  %332 = getelementptr inbounds i8, ptr %330, i64 %331
  %333 = load i8, ptr %332, align 1, !tbaa !9
  %334 = zext i8 %333 to i32
  br label %335

335:                                              ; preds = %311, %321, %329
  %336 = phi i32 [ %318, %311 ], [ %328, %321 ], [ %334, %329 ]
  %337 = lshr i32 %336, 2
  %338 = or i32 %308, %337
  %339 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !102
  %340 = add nsw i32 %339, 1
  store i32 %340, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !102
  %341 = mul i32 %338, 987654323
  %342 = add i32 %341, %339
  %343 = tail call i32 @llvm.fshl.i32(i32 %342, i32 %342, i32 16)
  %344 = mul i32 %343, 123456791
  %345 = add i32 %344, %339
  %346 = sext i32 %339 to i64
  %347 = getelementptr inbounds i32, ptr %288, i64 %346
  store i32 %345, ptr %347, align 4, !tbaa !25
  %348 = load i32, ptr @pos, align 4, !tbaa !25
  %349 = srem i32 %348, %201
  %350 = add nsw i32 %348, -1
  %351 = load i32, ptr @buf, align 8, !tbaa !20
  %352 = add nsw i32 %351, -1
  %353 = and i32 %352, %350
  %354 = sext i32 %353 to i64
  %355 = getelementptr inbounds i8, ptr %207, i64 %354
  %356 = load i8, ptr %355, align 1, !tbaa !9
  %357 = zext i8 %356 to i32
  %358 = shl nuw nsw i32 %357, 8
  %359 = sub nsw i32 %348, %201
  %360 = and i32 %352, %359
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds i8, ptr %207, i64 %361
  %363 = load i8, ptr %362, align 1, !tbaa !9
  %364 = zext i8 %363 to i32
  %365 = or i32 %358, %364
  %366 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !102
  %367 = add nsw i32 %366, 1
  store i32 %367, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2co, i64 0, i32 8), align 8, !tbaa !102
  %368 = mul i32 %365, 987654323
  %369 = add i32 %368, %366
  %370 = tail call i32 @llvm.fshl.i32(i32 %369, i32 %369, i32 16)
  %371 = mul i32 %370, 123456791
  %372 = add i32 %371, %366
  %373 = sext i32 %366 to i64
  %374 = getelementptr inbounds i32, ptr %288, i64 %373
  store i32 %372, ptr %374, align 4, !tbaa !25
  %375 = load i32, ptr @pos, align 4, !tbaa !25
  %376 = sub nsw i32 %375, %201
  %377 = load i32, ptr @buf, align 8, !tbaa !20
  %378 = add nsw i32 %377, -1
  %379 = and i32 %378, %376
  %380 = sext i32 %379 to i64
  %381 = getelementptr inbounds i8, ptr %207, i64 %380
  %382 = load i8, ptr %381, align 1, !tbaa !9
  %383 = zext i8 %382 to i32
  %384 = shl nuw nsw i32 %383, 10
  %385 = shl i32 %349, 18
  %386 = or i32 %201, %384
  %387 = or i32 %386, %385
  %388 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !102
  %389 = add nsw i32 %388, 1
  store i32 %389, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !102
  %390 = mul i32 %387, 987654323
  %391 = add i32 %390, %388
  %392 = tail call i32 @llvm.fshl.i32(i32 %391, i32 %391, i32 16)
  %393 = mul i32 %392, 123456791
  %394 = add i32 %393, %388
  %395 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %396 = sext i32 %388 to i64
  %397 = getelementptr inbounds i32, ptr %395, i64 %396
  store i32 %394, ptr %397, align 4, !tbaa !25
  %398 = load i32, ptr @pos, align 4, !tbaa !25
  %399 = add nsw i32 %398, -1
  %400 = load i32, ptr @buf, align 8, !tbaa !20
  %401 = add nsw i32 %400, -1
  %402 = and i32 %401, %399
  %403 = sext i32 %402 to i64
  %404 = getelementptr inbounds i8, ptr %207, i64 %403
  %405 = load i8, ptr %404, align 1, !tbaa !9
  %406 = zext i8 %405 to i32
  %407 = shl nuw nsw i32 %406, 10
  %408 = or i32 %201, %407
  %409 = or i32 %408, %385
  %410 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !102
  %411 = add nsw i32 %410, 1
  store i32 %411, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !102
  %412 = mul i32 %409, 987654323
  %413 = add i32 %412, %410
  %414 = tail call i32 @llvm.fshl.i32(i32 %413, i32 %413, i32 16)
  %415 = mul i32 %414, 123456791
  %416 = add i32 %415, %410
  %417 = sext i32 %410 to i64
  %418 = getelementptr inbounds i32, ptr %395, i64 %417
  store i32 %416, ptr %418, align 4, !tbaa !25
  %419 = shl i32 %201, 12
  %420 = or i32 %349, %419
  %421 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !102
  %422 = add nsw i32 %421, 1
  store i32 %422, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11recordModelR5MixerE2cp, i64 0, i32 8), align 8, !tbaa !102
  %423 = mul i32 %420, 987654323
  %424 = add i32 %421, %423
  %425 = tail call i32 @llvm.fshl.i32(i32 %424, i32 %424, i32 16)
  %426 = mul i32 %425, 123456791
  %427 = add i32 %426, %421
  %428 = sext i32 %421 to i64
  %429 = getelementptr inbounds i32, ptr %395, i64 %428
  store i32 %427, ptr %429, align 4, !tbaa !25
  %430 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos3, i64 0, i64 %50
  %431 = load i32, ptr %430, align 4, !tbaa !25
  %432 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos4, i64 0, i64 %50
  store i32 %431, ptr %432, align 4, !tbaa !25
  %433 = getelementptr inbounds [256 x i32], ptr @_ZZ11recordModelR5MixerE5cpos2, i64 0, i64 %50
  %434 = load i32, ptr %433, align 4, !tbaa !25
  store i32 %434, ptr %430, align 4, !tbaa !25
  store i32 %52, ptr %433, align 4, !tbaa !25
  %435 = load i32, ptr @pos, align 4, !tbaa !25
  store i32 %435, ptr %51, align 4, !tbaa !25
  store i32 %435, ptr %160, align 4, !tbaa !25
  %436 = load i32, ptr @bpos, align 4, !tbaa !25
  br label %437

437:                                              ; preds = %42, %335
  %438 = phi i32 [ %435, %335 ], [ %43, %42 ]
  %439 = phi i32 [ %436, %335 ], [ %40, %42 ]
  %440 = load i32, ptr @c0, align 4, !tbaa !25
  %441 = add nsw i32 %438, -1
  %442 = load i32, ptr @buf, align 8, !tbaa !20
  %443 = add nsw i32 %442, -1
  %444 = and i32 %443, %441
  %445 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %446 = sext i32 %444 to i64
  %447 = getelementptr inbounds i8, ptr %445, i64 %446
  %448 = load i8, ptr %447, align 1, !tbaa !9
  %449 = zext i8 %448 to i32
  %450 = load i32, ptr @y, align 4, !tbaa !25
  %451 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %440, i32 noundef %439, i32 noundef %449, i32 noundef %450)
  %452 = load i32, ptr @c0, align 4, !tbaa !25
  %453 = load i32, ptr @bpos, align 4, !tbaa !25
  %454 = load i32, ptr @pos, align 4, !tbaa !25
  %455 = add nsw i32 %454, -1
  %456 = load i32, ptr @buf, align 8, !tbaa !20
  %457 = add nsw i32 %456, -1
  %458 = and i32 %457, %455
  %459 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %460 = sext i32 %458 to i64
  %461 = getelementptr inbounds i8, ptr %459, i64 %460
  %462 = load i8, ptr %461, align 1, !tbaa !9
  %463 = zext i8 %462 to i32
  %464 = load i32, ptr @y, align 4, !tbaa !25
  %465 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cn, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %452, i32 noundef %453, i32 noundef %463, i32 noundef %464)
  %466 = load i32, ptr @c0, align 4, !tbaa !25
  %467 = load i32, ptr @bpos, align 4, !tbaa !25
  %468 = load i32, ptr @pos, align 4, !tbaa !25
  %469 = add nsw i32 %468, -1
  %470 = load i32, ptr @buf, align 8, !tbaa !20
  %471 = add nsw i32 %470, -1
  %472 = and i32 %471, %469
  %473 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %474 = sext i32 %472 to i64
  %475 = getelementptr inbounds i8, ptr %473, i64 %474
  %476 = load i8, ptr %475, align 1, !tbaa !9
  %477 = zext i8 %476 to i32
  %478 = load i32, ptr @y, align 4, !tbaa !25
  %479 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2co, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %466, i32 noundef %467, i32 noundef %477, i32 noundef %478)
  %480 = load i32, ptr @c0, align 4, !tbaa !25
  %481 = load i32, ptr @bpos, align 4, !tbaa !25
  %482 = load i32, ptr @pos, align 4, !tbaa !25
  %483 = add nsw i32 %482, -1
  %484 = load i32, ptr @buf, align 8, !tbaa !20
  %485 = add nsw i32 %484, -1
  %486 = and i32 %485, %483
  %487 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %488 = sext i32 %486 to i64
  %489 = getelementptr inbounds i8, ptr %487, i64 %488
  %490 = load i8, ptr %489, align 1, !tbaa !9
  %491 = zext i8 %490 to i32
  %492 = load i32, ptr @y, align 4, !tbaa !25
  %493 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11recordModelR5MixerE2cp, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %480, i32 noundef %481, i32 noundef %491, i32 noundef %492)
  ret void

494:                                              ; preds = %106, %104, %102, %100
  %495 = phi ptr [ @_ZGVZ11recordModelR5MixerE2cp, %106 ], [ @_ZGVZ11recordModelR5MixerE2co, %104 ], [ @_ZGVZ11recordModelR5MixerE2cn, %102 ], [ @_ZGVZ11recordModelR5MixerE2cm, %100 ]
  %496 = phi { ptr, i32 } [ %107, %106 ], [ %105, %104 ], [ %103, %102 ], [ %101, %100 ]
  tail call void @__cxa_guard_abort(ptr nonnull %495) #39
  resume { ptr, i32 } %496
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z11sparseModelR5Mixerii(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %4 = load atomic i8, ptr @_ZGVZ11sparseModelR5MixeriiE2cm acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %14, !prof !110

6:                                                ; preds = %3
  %7 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ11sparseModelR5MixeriiE2cm) #39
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %6
  %10 = load i32, ptr @level, align 4, !tbaa !25
  %11 = shl i32 131072, %10
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11sparseModelR5MixeriiE2cm, i32 noundef %11, i32 noundef 48)
          to label %12 unwind label %251

12:                                               ; preds = %9
  %13 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ11sparseModelR5MixeriiE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ11sparseModelR5MixeriiE2cm) #39
  br label %14

14:                                               ; preds = %12, %6, %3
  %15 = load i32, ptr @bpos, align 4, !tbaa !25
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %421

17:                                               ; preds = %14
  %18 = load i32, ptr @c4, align 4, !tbaa !25
  %19 = and i32 %18, 15790320
  %20 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %21 = add nsw i32 %20, 1
  store i32 %21, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %22 = mul i32 %19, 987654323
  %23 = add i32 %22, %20
  %24 = tail call i32 @llvm.fshl.i32(i32 %23, i32 %23, i32 16)
  %25 = mul i32 %24, 123456791
  %26 = add i32 %25, %20
  %27 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %28 = sext i32 %20 to i64
  %29 = getelementptr inbounds i32, ptr %27, i64 %28
  store i32 %26, ptr %29, align 4, !tbaa !25
  %30 = load i32, ptr @c4, align 4, !tbaa !25
  %31 = and i32 %30, -252645136
  %32 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %33 = add nsw i32 %32, 1
  store i32 %33, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %34 = mul i32 %31, 987654323
  %35 = add i32 %32, 987654323
  %36 = add i32 %35, %34
  %37 = tail call i32 @llvm.fshl.i32(i32 %36, i32 %36, i32 16)
  %38 = mul i32 %37, 123456791
  %39 = add i32 %38, %32
  %40 = sext i32 %32 to i64
  %41 = getelementptr inbounds i32, ptr %27, i64 %40
  store i32 %39, ptr %41, align 4, !tbaa !25
  %42 = load i32, ptr @c4, align 4, !tbaa !25
  %43 = and i32 %42, 16316664
  %44 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %45 = add nsw i32 %44, 1
  store i32 %45, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %46 = mul i32 %43, 987654323
  %47 = add i32 %44, 1975308646
  %48 = add i32 %47, %46
  %49 = tail call i32 @llvm.fshl.i32(i32 %48, i32 %48, i32 16)
  %50 = mul i32 %49, 123456791
  %51 = add i32 %50, %44
  %52 = sext i32 %44 to i64
  %53 = getelementptr inbounds i32, ptr %27, i64 %52
  store i32 %51, ptr %53, align 4, !tbaa !25
  %54 = load i32, ptr @c4, align 4, !tbaa !25
  %55 = and i32 %54, -117901064
  %56 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %57 = add nsw i32 %56, 1
  store i32 %57, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %58 = mul i32 %55, 987654323
  %59 = add i32 %56, -1332004327
  %60 = add i32 %59, %58
  %61 = tail call i32 @llvm.fshl.i32(i32 %60, i32 %60, i32 16)
  %62 = mul i32 %61, 123456791
  %63 = add i32 %62, %56
  %64 = sext i32 %56 to i64
  %65 = getelementptr inbounds i32, ptr %27, i64 %64
  store i32 %63, ptr %65, align 4, !tbaa !25
  %66 = load i32, ptr @c4, align 4, !tbaa !25
  %67 = and i32 %66, 14737632
  %68 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %69 = add nsw i32 %68, 1
  store i32 %69, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %70 = mul i32 %67, 987654323
  %71 = add i32 %68, -344350004
  %72 = add i32 %71, %70
  %73 = tail call i32 @llvm.fshl.i32(i32 %72, i32 %72, i32 16)
  %74 = mul i32 %73, 123456791
  %75 = add i32 %74, %68
  %76 = sext i32 %68 to i64
  %77 = getelementptr inbounds i32, ptr %27, i64 %76
  store i32 %75, ptr %77, align 4, !tbaa !25
  %78 = load i32, ptr @c4, align 4, !tbaa !25
  %79 = and i32 %78, -522133280
  %80 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %81 = add nsw i32 %80, 1
  store i32 %81, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %82 = mul i32 %79, 987654323
  %83 = add i32 %80, 643304319
  %84 = add i32 %83, %82
  %85 = tail call i32 @llvm.fshl.i32(i32 %84, i32 %84, i32 16)
  %86 = mul i32 %85, 123456791
  %87 = add i32 %86, %80
  %88 = sext i32 %80 to i64
  %89 = getelementptr inbounds i32, ptr %27, i64 %88
  store i32 %87, ptr %89, align 4, !tbaa !25
  %90 = load i32, ptr @c4, align 4, !tbaa !25
  %91 = and i32 %90, 15790335
  %92 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %93 = add nsw i32 %92, 1
  store i32 %93, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %94 = mul i32 %91, 987654323
  %95 = add i32 %92, 1630958642
  %96 = add i32 %95, %94
  %97 = tail call i32 @llvm.fshl.i32(i32 %96, i32 %96, i32 16)
  %98 = mul i32 %97, 123456791
  %99 = add i32 %98, %92
  %100 = sext i32 %92 to i64
  %101 = getelementptr inbounds i32, ptr %27, i64 %100
  store i32 %99, ptr %101, align 4, !tbaa !25
  %102 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %103 = add nsw i32 %102, 1
  store i32 %103, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %104 = mul i32 %1, 987654323
  %105 = add i32 %102, %104
  %106 = tail call i32 @llvm.fshl.i32(i32 %105, i32 %105, i32 16)
  %107 = mul i32 %106, 123456791
  %108 = add i32 %107, %102
  %109 = sext i32 %102 to i64
  %110 = getelementptr inbounds i32, ptr %27, i64 %109
  store i32 %108, ptr %110, align 4, !tbaa !25
  %111 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %112 = add nsw i32 %111, 1
  store i32 %112, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %113 = mul i32 %2, 987654323
  %114 = add i32 %111, %113
  %115 = tail call i32 @llvm.fshl.i32(i32 %114, i32 %114, i32 16)
  %116 = mul i32 %115, 123456791
  %117 = add i32 %116, %111
  %118 = sext i32 %111 to i64
  %119 = getelementptr inbounds i32, ptr %27, i64 %118
  store i32 %117, ptr %119, align 4, !tbaa !25
  %120 = load i32, ptr @c4, align 4, !tbaa !25
  %121 = and i32 %120, 16711935
  %122 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %123 = add nsw i32 %122, 1
  store i32 %123, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %124 = mul i32 %121, 987654323
  %125 = add i32 %124, %122
  %126 = tail call i32 @llvm.fshl.i32(i32 %125, i32 %125, i32 16)
  %127 = mul i32 %126, 123456791
  %128 = add i32 %127, %122
  %129 = sext i32 %122 to i64
  %130 = getelementptr inbounds i32, ptr %27, i64 %129
  store i32 %128, ptr %130, align 4, !tbaa !25
  %131 = load i32, ptr @c4, align 4, !tbaa !25
  %132 = and i32 %131, -16776961
  %133 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %134 = add nsw i32 %133, 1
  store i32 %134, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %135 = mul i32 %132, 987654323
  %136 = add i32 %135, %133
  %137 = tail call i32 @llvm.fshl.i32(i32 %136, i32 %136, i32 16)
  %138 = mul i32 %137, 123456791
  %139 = add i32 %138, %133
  %140 = sext i32 %133 to i64
  %141 = getelementptr inbounds i32, ptr %27, i64 %140
  store i32 %139, ptr %141, align 4, !tbaa !25
  %142 = load i32, ptr @pos, align 4, !tbaa !25
  %143 = add nsw i32 %142, -1
  %144 = load i32, ptr @buf, align 8, !tbaa !20
  %145 = add nsw i32 %144, -1
  %146 = and i32 %145, %143
  %147 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %148 = sext i32 %146 to i64
  %149 = getelementptr inbounds i8, ptr %147, i64 %148
  %150 = load i8, ptr %149, align 1, !tbaa !9
  %151 = zext i8 %150 to i32
  %152 = add nsw i32 %142, -5
  %153 = and i32 %145, %152
  %154 = sext i32 %153 to i64
  %155 = getelementptr inbounds i8, ptr %147, i64 %154
  %156 = load i8, ptr %155, align 1, !tbaa !9
  %157 = zext i8 %156 to i32
  %158 = shl nuw nsw i32 %157, 8
  %159 = or i32 %158, %151
  %160 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %161 = add nsw i32 %160, 1
  store i32 %161, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %162 = mul i32 %159, 987654323
  %163 = add i32 %162, %160
  %164 = tail call i32 @llvm.fshl.i32(i32 %163, i32 %163, i32 16)
  %165 = mul i32 %164, 123456791
  %166 = add i32 %165, %160
  %167 = sext i32 %160 to i64
  %168 = getelementptr inbounds i32, ptr %27, i64 %167
  store i32 %166, ptr %168, align 4, !tbaa !25
  %169 = load i32, ptr @pos, align 4, !tbaa !25
  %170 = add nsw i32 %169, -1
  %171 = load i32, ptr @buf, align 8, !tbaa !20
  %172 = add nsw i32 %171, -1
  %173 = and i32 %172, %170
  %174 = sext i32 %173 to i64
  %175 = getelementptr inbounds i8, ptr %147, i64 %174
  %176 = load i8, ptr %175, align 1, !tbaa !9
  %177 = zext i8 %176 to i32
  %178 = add nsw i32 %169, -6
  %179 = and i32 %172, %178
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i8, ptr %147, i64 %180
  %182 = load i8, ptr %181, align 1, !tbaa !9
  %183 = zext i8 %182 to i32
  %184 = shl nuw nsw i32 %183, 8
  %185 = or i32 %184, %177
  %186 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %187 = add nsw i32 %186, 1
  store i32 %187, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %188 = mul i32 %185, 987654323
  %189 = add i32 %188, %186
  %190 = tail call i32 @llvm.fshl.i32(i32 %189, i32 %189, i32 16)
  %191 = mul i32 %190, 123456791
  %192 = add i32 %191, %186
  %193 = sext i32 %186 to i64
  %194 = getelementptr inbounds i32, ptr %27, i64 %193
  store i32 %192, ptr %194, align 4, !tbaa !25
  %195 = load i32, ptr @pos, align 4, !tbaa !25
  %196 = add nsw i32 %195, -3
  %197 = load i32, ptr @buf, align 8, !tbaa !20
  %198 = add nsw i32 %197, -1
  %199 = and i32 %198, %196
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds i8, ptr %147, i64 %200
  %202 = load i8, ptr %201, align 1, !tbaa !9
  %203 = zext i8 %202 to i32
  %204 = add nsw i32 %195, -6
  %205 = and i32 %198, %204
  %206 = sext i32 %205 to i64
  %207 = getelementptr inbounds i8, ptr %147, i64 %206
  %208 = load i8, ptr %207, align 1, !tbaa !9
  %209 = zext i8 %208 to i32
  %210 = shl nuw nsw i32 %209, 8
  %211 = or i32 %210, %203
  %212 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %213 = add nsw i32 %212, 1
  store i32 %213, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %214 = mul i32 %211, 987654323
  %215 = add i32 %214, %212
  %216 = tail call i32 @llvm.fshl.i32(i32 %215, i32 %215, i32 16)
  %217 = mul i32 %216, 123456791
  %218 = add i32 %217, %212
  %219 = sext i32 %212 to i64
  %220 = getelementptr inbounds i32, ptr %27, i64 %219
  store i32 %218, ptr %220, align 4, !tbaa !25
  %221 = load i32, ptr @pos, align 4, !tbaa !25
  %222 = add nsw i32 %221, -4
  %223 = load i32, ptr @buf, align 8, !tbaa !20
  %224 = add nsw i32 %223, -1
  %225 = and i32 %224, %222
  %226 = sext i32 %225 to i64
  %227 = getelementptr inbounds i8, ptr %147, i64 %226
  %228 = load i8, ptr %227, align 1, !tbaa !9
  %229 = zext i8 %228 to i32
  %230 = add nsw i32 %221, -8
  %231 = and i32 %224, %230
  %232 = sext i32 %231 to i64
  %233 = getelementptr inbounds i8, ptr %147, i64 %232
  %234 = load i8, ptr %233, align 1, !tbaa !9
  %235 = zext i8 %234 to i32
  %236 = shl nuw nsw i32 %235, 8
  %237 = or i32 %236, %229
  %238 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %239 = add nsw i32 %238, 1
  store i32 %239, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %240 = mul i32 %237, 987654323
  %241 = add i32 %240, %238
  %242 = tail call i32 @llvm.fshl.i32(i32 %241, i32 %241, i32 16)
  %243 = mul i32 %242, 123456791
  %244 = add i32 %243, %238
  %245 = sext i32 %238 to i64
  %246 = getelementptr inbounds i32, ptr %27, i64 %245
  store i32 %244, ptr %246, align 4, !tbaa !25
  br label %253

247:                                              ; preds = %253
  %248 = load i32, ptr @c4, align 4, !tbaa !25
  %249 = and i32 %248, 1
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %344, label %333

251:                                              ; preds = %9
  %252 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ11sparseModelR5MixeriiE2cm) #39
  resume { ptr, i32 } %252

253:                                              ; preds = %17, %253
  %254 = phi i32 [ -1, %17 ], [ %331, %253 ]
  %255 = phi i32 [ 1, %17 ], [ %256, %253 ]
  %256 = add nuw nsw i32 %255, 1
  %257 = load i32, ptr @pos, align 4, !tbaa !25
  %258 = sub nsw i32 %257, %256
  %259 = load i32, ptr @buf, align 8, !tbaa !20
  %260 = add nsw i32 %259, -1
  %261 = and i32 %260, %258
  %262 = sext i32 %261 to i64
  %263 = getelementptr inbounds i8, ptr %147, i64 %262
  %264 = load i8, ptr %263, align 1, !tbaa !9
  %265 = zext i8 %264 to i32
  %266 = shl nuw nsw i32 %265, 8
  %267 = add nsw i32 %254, -2
  %268 = add i32 %267, %257
  %269 = and i32 %260, %268
  %270 = sext i32 %269 to i64
  %271 = getelementptr inbounds i8, ptr %147, i64 %270
  %272 = load i8, ptr %271, align 1, !tbaa !9
  %273 = zext i8 %272 to i32
  %274 = or i32 %266, %273
  %275 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %276 = add nsw i32 %275, 1
  store i32 %276, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %277 = mul i32 %274, 987654323
  %278 = add i32 %277, %275
  %279 = tail call i32 @llvm.fshl.i32(i32 %278, i32 %278, i32 16)
  %280 = mul i32 %279, 123456791
  %281 = add i32 %280, %275
  %282 = sext i32 %275 to i64
  %283 = getelementptr inbounds i32, ptr %27, i64 %282
  store i32 %281, ptr %283, align 4, !tbaa !25
  %284 = load i32, ptr @pos, align 4, !tbaa !25
  %285 = sub nsw i32 %284, %256
  %286 = load i32, ptr @buf, align 8, !tbaa !20
  %287 = add nsw i32 %286, -1
  %288 = and i32 %287, %285
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds i8, ptr %147, i64 %289
  %291 = load i8, ptr %290, align 1, !tbaa !9
  %292 = zext i8 %291 to i32
  %293 = shl nuw nsw i32 %292, 8
  %294 = add nsw i32 %254, -3
  %295 = add i32 %294, %284
  %296 = and i32 %287, %295
  %297 = sext i32 %296 to i64
  %298 = getelementptr inbounds i8, ptr %147, i64 %297
  %299 = load i8, ptr %298, align 1, !tbaa !9
  %300 = zext i8 %299 to i32
  %301 = or i32 %293, %300
  %302 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %303 = add nsw i32 %302, 1
  store i32 %303, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %304 = mul i32 %301, 987654323
  %305 = add i32 %304, %302
  %306 = tail call i32 @llvm.fshl.i32(i32 %305, i32 %305, i32 16)
  %307 = mul i32 %306, 123456791
  %308 = add i32 %307, %302
  %309 = sext i32 %302 to i64
  %310 = getelementptr inbounds i32, ptr %27, i64 %309
  store i32 %308, ptr %310, align 4, !tbaa !25
  %311 = load i32, ptr @pos, align 4, !tbaa !25
  %312 = sub nsw i32 %311, %255
  %313 = load i32, ptr @buf, align 8, !tbaa !20
  %314 = add nsw i32 %313, -1
  %315 = and i32 %314, %312
  %316 = sext i32 %315 to i64
  %317 = getelementptr inbounds i8, ptr %147, i64 %316
  %318 = load i8, ptr %317, align 1, !tbaa !9
  %319 = zext i8 %318 to i32
  %320 = shl nuw nsw i32 %319, 8
  %321 = or i32 %320, %1
  %322 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %323 = add nsw i32 %322, 1
  store i32 %323, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %324 = mul i32 %321, 987654323
  %325 = add i32 %324, %322
  %326 = tail call i32 @llvm.fshl.i32(i32 %325, i32 %325, i32 16)
  %327 = mul i32 %326, 123456791
  %328 = add i32 %327, %322
  %329 = sext i32 %322 to i64
  %330 = getelementptr inbounds i32, ptr %27, i64 %329
  store i32 %328, ptr %330, align 4, !tbaa !25
  %331 = xor i32 %255, -1
  %332 = icmp eq i32 %256, 8
  br i1 %332, label %247, label %253, !llvm.loop !117

333:                                              ; preds = %247
  %334 = and i32 %248, 255
  %335 = tail call i32 @isalpha(i32 noundef %334) #44
  %336 = icmp eq i32 %335, 0
  br i1 %336, label %337, label %344

337:                                              ; preds = %333
  %338 = tail call i32 @ispunct(i32 noundef %334) #44
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %344

340:                                              ; preds = %337
  %341 = tail call i32 @isspace(i32 noundef %334) #44
  %342 = icmp eq i32 %341, 0
  %343 = select i1 %342, i32 4, i32 3
  br label %344

344:                                              ; preds = %340, %337, %333, %247
  %345 = phi i32 [ 0, %247 ], [ 1, %333 ], [ 2, %337 ], [ %343, %340 ]
  %346 = load i32, ptr @_ZZ11sparseModelR5MixeriiE4mask, align 4, !tbaa !25
  %347 = shl i32 %346, 3
  %348 = or i32 %347, %345
  store i32 %348, ptr @_ZZ11sparseModelR5MixeriiE4mask, align 4, !tbaa !25
  %349 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %350 = add nsw i32 %349, 1
  store i32 %350, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %351 = mul i32 %348, 987654323
  %352 = add i32 %351, %349
  %353 = tail call i32 @llvm.fshl.i32(i32 %352, i32 %352, i32 16)
  %354 = mul i32 %353, 123456791
  %355 = add i32 %354, %349
  %356 = sext i32 %349 to i64
  %357 = getelementptr inbounds i32, ptr %27, i64 %356
  store i32 %355, ptr %357, align 4, !tbaa !25
  %358 = shl i32 %348, 8
  %359 = load i32, ptr @pos, align 4, !tbaa !25
  %360 = add nsw i32 %359, -1
  %361 = load i32, ptr @buf, align 8, !tbaa !20
  %362 = add nsw i32 %361, -1
  %363 = and i32 %362, %360
  %364 = sext i32 %363 to i64
  %365 = getelementptr inbounds i8, ptr %147, i64 %364
  %366 = load i8, ptr %365, align 1, !tbaa !9
  %367 = zext i8 %366 to i32
  %368 = or i32 %358, %367
  %369 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %370 = add nsw i32 %369, 1
  store i32 %370, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %371 = mul i32 %368, 987654323
  %372 = add i32 %371, %369
  %373 = tail call i32 @llvm.fshl.i32(i32 %372, i32 %372, i32 16)
  %374 = mul i32 %373, 123456791
  %375 = add i32 %374, %369
  %376 = sext i32 %369 to i64
  %377 = getelementptr inbounds i32, ptr %27, i64 %376
  store i32 %375, ptr %377, align 4, !tbaa !25
  %378 = shl i32 %348, 17
  %379 = load i32, ptr @pos, align 4, !tbaa !25
  %380 = add nsw i32 %379, -2
  %381 = load i32, ptr @buf, align 8, !tbaa !20
  %382 = add nsw i32 %381, -1
  %383 = and i32 %382, %380
  %384 = sext i32 %383 to i64
  %385 = getelementptr inbounds i8, ptr %147, i64 %384
  %386 = load i8, ptr %385, align 1, !tbaa !9
  %387 = zext i8 %386 to i32
  %388 = shl nuw nsw i32 %387, 8
  %389 = or i32 %388, %378
  %390 = add nsw i32 %379, -3
  %391 = and i32 %382, %390
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds i8, ptr %147, i64 %392
  %394 = load i8, ptr %393, align 1, !tbaa !9
  %395 = zext i8 %394 to i32
  %396 = or i32 %389, %395
  %397 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %398 = add nsw i32 %397, 1
  store i32 %398, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %399 = mul i32 %396, 987654323
  %400 = add i32 %399, %397
  %401 = tail call i32 @llvm.fshl.i32(i32 %400, i32 %400, i32 16)
  %402 = mul i32 %401, 123456791
  %403 = add i32 %402, %397
  %404 = sext i32 %397 to i64
  %405 = getelementptr inbounds i32, ptr %27, i64 %404
  store i32 %403, ptr %405, align 4, !tbaa !25
  %406 = and i32 %348, 511
  %407 = load i32, ptr @c4, align 4, !tbaa !25
  %408 = shl i32 %407, 9
  %409 = and i32 %408, -505290752
  %410 = or i32 %409, %406
  %411 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %412 = add nsw i32 %411, 1
  store i32 %412, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ11sparseModelR5MixeriiE2cm, i64 0, i32 8), align 8, !tbaa !102
  %413 = mul i32 %410, 987654323
  %414 = add i32 %413, %411
  %415 = tail call i32 @llvm.fshl.i32(i32 %414, i32 %414, i32 16)
  %416 = mul i32 %415, 123456791
  %417 = add i32 %416, %411
  %418 = sext i32 %411 to i64
  %419 = getelementptr inbounds i32, ptr %27, i64 %418
  store i32 %417, ptr %419, align 4, !tbaa !25
  %420 = load i32, ptr @bpos, align 4, !tbaa !25
  br label %421

421:                                              ; preds = %344, %14
  %422 = phi i32 [ %420, %344 ], [ %15, %14 ]
  %423 = load i32, ptr @c0, align 4, !tbaa !25
  %424 = load i32, ptr @pos, align 4, !tbaa !25
  %425 = add nsw i32 %424, -1
  %426 = load i32, ptr @buf, align 8, !tbaa !20
  %427 = add nsw i32 %426, -1
  %428 = and i32 %427, %425
  %429 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %430 = sext i32 %428 to i64
  %431 = getelementptr inbounds i8, ptr %429, i64 %430
  %432 = load i8, ptr %431, align 1, !tbaa !9
  %433 = zext i8 %432 to i32
  %434 = load i32, ptr @y, align 4, !tbaa !25
  %435 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ11sparseModelR5MixeriiE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %423, i32 noundef %422, i32 noundef %433, i32 noundef %434)
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare i32 @isalpha(i32 noundef) local_unnamed_addr #16

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare i32 @ispunct(i32 noundef) local_unnamed_addr #16

; Function Attrs: mustprogress nofree nounwind willreturn memory(read)
declare i32 @isspace(i32 noundef) local_unnamed_addr #16

; Function Attrs: mustprogress uwtable
define dso_local void @_Z13distanceModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ13distanceModelR5MixerE2cr acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13distanceModelR5MixerE2cr) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @level, align 4, !tbaa !25
  %9 = shl i32 65536, %8
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13distanceModelR5MixerE2cr, i32 noundef %9, i32 noundef 3)
          to label %10 unwind label %22

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ13distanceModelR5MixerE2cr, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13distanceModelR5MixerE2cr) #39
  br label %12

12:                                               ; preds = %10, %4, %1
  %13 = load i32, ptr @bpos, align 4, !tbaa !25
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %76

15:                                               ; preds = %12
  %16 = load i32, ptr @c4, align 4, !tbaa !25
  %17 = trunc i32 %16 to i8
  switch i8 %17, label %18 [
    i8 0, label %20
    i8 32, label %24
    i8 -1, label %26
    i8 13, label %26
    i8 10, label %26
  ]

18:                                               ; preds = %15
  %19 = load i32, ptr @pos, align 4, !tbaa !25
  br label %28

20:                                               ; preds = %15
  %21 = load i32, ptr @pos, align 4, !tbaa !25
  store i32 %21, ptr @_ZZ13distanceModelR5MixerE5pos00, align 4, !tbaa !25
  br label %28

22:                                               ; preds = %7
  %23 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ13distanceModelR5MixerE2cr) #39
  resume { ptr, i32 } %23

24:                                               ; preds = %15
  %25 = load i32, ptr @pos, align 4, !tbaa !25
  store i32 %25, ptr @_ZZ13distanceModelR5MixerE5pos20, align 4, !tbaa !25
  br label %28

26:                                               ; preds = %15, %15, %15
  %27 = load i32, ptr @pos, align 4, !tbaa !25
  store i32 %27, ptr @_ZZ13distanceModelR5MixerE5posnl, align 4, !tbaa !25
  br label %28

28:                                               ; preds = %18, %24, %20, %26
  %29 = phi i32 [ %19, %18 ], [ %25, %24 ], [ %21, %20 ], [ %27, %26 ]
  %30 = load i32, ptr @_ZZ13distanceModelR5MixerE5pos00, align 4, !tbaa !25
  %31 = sub nsw i32 %29, %30
  %32 = tail call i32 @llvm.smin.i32(i32 %31, i32 255)
  %33 = shl i32 %16, 8
  %34 = and i32 %33, 65280
  %35 = or i32 %32, %34
  %36 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !102
  %37 = add nsw i32 %36, 1
  store i32 %37, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !102
  %38 = mul i32 %35, 987654323
  %39 = add i32 %38, %36
  %40 = tail call i32 @llvm.fshl.i32(i32 %39, i32 %39, i32 16)
  %41 = mul i32 %40, 123456791
  %42 = add i32 %41, %36
  %43 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %44 = sext i32 %36 to i64
  %45 = getelementptr inbounds i32, ptr %43, i64 %44
  store i32 %42, ptr %45, align 4, !tbaa !25
  %46 = load i32, ptr @pos, align 4, !tbaa !25
  %47 = load i32, ptr @_ZZ13distanceModelR5MixerE5pos20, align 4, !tbaa !25
  %48 = sub nsw i32 %46, %47
  %49 = tail call i32 @llvm.smin.i32(i32 %48, i32 255)
  %50 = or i32 %49, %34
  %51 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !102
  %52 = add nsw i32 %51, 1
  store i32 %52, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !102
  %53 = mul i32 %50, 987654323
  %54 = add i32 %53, %51
  %55 = tail call i32 @llvm.fshl.i32(i32 %54, i32 %54, i32 16)
  %56 = mul i32 %55, 123456791
  %57 = add i32 %56, %51
  %58 = sext i32 %51 to i64
  %59 = getelementptr inbounds i32, ptr %43, i64 %58
  store i32 %57, ptr %59, align 4, !tbaa !25
  %60 = load i32, ptr @pos, align 4, !tbaa !25
  %61 = load i32, ptr @_ZZ13distanceModelR5MixerE5posnl, align 4, !tbaa !25
  %62 = sub nsw i32 %60, %61
  %63 = tail call i32 @llvm.smin.i32(i32 %62, i32 255)
  %64 = add nuw nsw i32 %34, 234567
  %65 = or i32 %63, %64
  %66 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !102
  %67 = add nsw i32 %66, 1
  store i32 %67, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13distanceModelR5MixerE2cr, i64 0, i32 8), align 8, !tbaa !102
  %68 = mul i32 %65, 987654323
  %69 = add i32 %68, %66
  %70 = tail call i32 @llvm.fshl.i32(i32 %69, i32 %69, i32 16)
  %71 = mul i32 %70, 123456791
  %72 = add i32 %71, %66
  %73 = sext i32 %66 to i64
  %74 = getelementptr inbounds i32, ptr %43, i64 %73
  store i32 %72, ptr %74, align 4, !tbaa !25
  %75 = load i32, ptr @bpos, align 4, !tbaa !25
  br label %76

76:                                               ; preds = %28, %12
  %77 = phi i32 [ %75, %28 ], [ %13, %12 ]
  %78 = load i32, ptr @c0, align 4, !tbaa !25
  %79 = load i32, ptr @pos, align 4, !tbaa !25
  %80 = add nsw i32 %79, -1
  %81 = load i32, ptr @buf, align 8, !tbaa !20
  %82 = add nsw i32 %81, -1
  %83 = and i32 %82, %80
  %84 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %85 = sext i32 %83 to i64
  %86 = getelementptr inbounds i8, ptr %84, i64 %85
  %87 = load i8, ptr %86, align 1, !tbaa !9
  %88 = zext i8 %87 to i32
  %89 = load i32, ptr @y, align 4, !tbaa !25
  %90 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13distanceModelR5MixerE2cr, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %78, i32 noundef %77, i32 noundef %88, i32 noundef %89)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z8bmpModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm1 acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm1) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm1, i32 noundef 131072)
          to label %8 unwind label %235

8:                                                ; preds = %7
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm1) #39
  br label %10

10:                                               ; preds = %8, %4, %1
  %11 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm2 acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19, !prof !110

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm2) #39
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm2, i32 noundef 131072)
          to label %17 unwind label %237

17:                                               ; preds = %16
  %18 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm2, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm2) #39
  br label %19

19:                                               ; preds = %17, %13, %10
  %20 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm3 acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %28, !prof !110

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm3) #39
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm3, i32 noundef 131072)
          to label %26 unwind label %239

26:                                               ; preds = %25
  %27 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm3, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm3) #39
  br label %28

28:                                               ; preds = %26, %22, %19
  %29 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm4 acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %37, !prof !110

31:                                               ; preds = %28
  %32 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm4) #39
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm4, i32 noundef 131072)
          to label %35 unwind label %241

35:                                               ; preds = %34
  %36 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm4, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm4) #39
  br label %37

37:                                               ; preds = %35, %31, %28
  %38 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm5 acquire, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %46, !prof !110

40:                                               ; preds = %37
  %41 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm5) #39
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm5, i32 noundef 131072)
          to label %44 unwind label %243

44:                                               ; preds = %43
  %45 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm5, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm5) #39
  br label %46

46:                                               ; preds = %44, %40, %37
  %47 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm6 acquire, align 8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %55, !prof !110

49:                                               ; preds = %46
  %50 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm6) #39
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm6, i32 noundef 131072)
          to label %53 unwind label %245

53:                                               ; preds = %52
  %54 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm6, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm6) #39
  br label %55

55:                                               ; preds = %53, %49, %46
  %56 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm7 acquire, align 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %64, !prof !110

58:                                               ; preds = %55
  %59 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm7) #39
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm7, i32 noundef 131072)
          to label %62 unwind label %247

62:                                               ; preds = %61
  %63 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm7, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm7) #39
  br label %64

64:                                               ; preds = %62, %58, %55
  %65 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm8 acquire, align 8
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %73, !prof !110

67:                                               ; preds = %64
  %68 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm8) #39
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm8, i32 noundef 131072)
          to label %71 unwind label %249

71:                                               ; preds = %70
  %72 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm8, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm8) #39
  br label %73

73:                                               ; preds = %71, %67, %64
  %74 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE4scm9 acquire, align 8
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %82, !prof !110

76:                                               ; preds = %73
  %77 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm9) #39
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE4scm9, i32 noundef 262144)
          to label %80 unwind label %251

80:                                               ; preds = %79
  %81 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE4scm9, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE4scm9) #39
  br label %82

82:                                               ; preds = %80, %76, %73
  %83 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE5scm10 acquire, align 8
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %91, !prof !110

85:                                               ; preds = %82
  %86 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE5scm10) #39
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %85
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8bmpModelR5MixerE5scm10, i32 noundef 131072)
          to label %89 unwind label %253

89:                                               ; preds = %88
  %90 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE5scm10, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE5scm10) #39
  br label %91

91:                                               ; preds = %89, %85, %82
  %92 = load atomic i8, ptr @_ZGVZ8bmpModelR5MixerE2cm acquire, align 8
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %102, !prof !110

94:                                               ; preds = %91
  %95 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8bmpModelR5MixerE2cm) #39
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %102, label %97

97:                                               ; preds = %94
  %98 = load i32, ptr @level, align 4, !tbaa !25
  %99 = shl i32 262144, %98
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8bmpModelR5MixerE2cm, i32 noundef %99, i32 noundef 13)
          to label %100 unwind label %255

100:                                              ; preds = %97
  %101 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ8bmpModelR5MixerE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8bmpModelR5MixerE2cm) #39
  br label %102

102:                                              ; preds = %100, %94, %91
  %103 = load i32, ptr @bpos, align 4, !tbaa !25
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %446

105:                                              ; preds = %102
  %106 = load i32, ptr @pos, align 4, !tbaa !25
  %107 = add nsw i32 %106, -54
  %108 = load i32, ptr @buf, align 8, !tbaa !20
  %109 = add nsw i32 %108, -1
  %110 = and i32 %109, %107
  %111 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %112 = sext i32 %110 to i64
  %113 = getelementptr inbounds i8, ptr %111, i64 %112
  %114 = load i8, ptr %113, align 1, !tbaa !9
  %115 = icmp eq i8 %114, 66
  br i1 %115, label %116, label %257

116:                                              ; preds = %105
  %117 = add nsw i32 %106, -53
  %118 = and i32 %109, %117
  %119 = sext i32 %118 to i64
  %120 = getelementptr inbounds i8, ptr %111, i64 %119
  %121 = load i8, ptr %120, align 1, !tbaa !9
  %122 = icmp eq i8 %121, 77
  br i1 %122, label %123, label %257

123:                                              ; preds = %116
  %124 = add i32 %106, -44
  %125 = and i32 %109, %124
  %126 = sext i32 %125 to i64
  %127 = getelementptr inbounds i8, ptr %111, i64 %126
  %128 = load i8, ptr %127, align 1, !tbaa !9
  %129 = zext i8 %128 to i32
  %130 = add i32 %106, -43
  %131 = and i32 %109, %130
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, ptr %111, i64 %132
  %134 = load i8, ptr %133, align 1, !tbaa !9
  %135 = zext i8 %134 to i32
  %136 = shl nuw nsw i32 %135, 8
  %137 = or i32 %136, %129
  %138 = add i32 %106, -42
  %139 = and i32 %109, %138
  %140 = sext i32 %139 to i64
  %141 = getelementptr inbounds i8, ptr %111, i64 %140
  %142 = load i8, ptr %141, align 1, !tbaa !9
  %143 = zext i8 %142 to i32
  %144 = shl nuw nsw i32 %143, 16
  %145 = or i32 %137, %144
  %146 = add i32 %106, -41
  %147 = and i32 %109, %146
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, ptr %111, i64 %148
  %150 = load i8, ptr %149, align 1, !tbaa !9
  %151 = zext i8 %150 to i32
  %152 = shl nuw nsw i32 %151, 24
  %153 = or i32 %145, %152
  %154 = icmp eq i32 %153, 54
  br i1 %154, label %155, label %257

155:                                              ; preds = %123
  %156 = add i32 %106, -40
  %157 = and i32 %109, %156
  %158 = sext i32 %157 to i64
  %159 = getelementptr inbounds i8, ptr %111, i64 %158
  %160 = load i8, ptr %159, align 1, !tbaa !9
  %161 = zext i8 %160 to i32
  %162 = add i32 %106, -39
  %163 = and i32 %109, %162
  %164 = sext i32 %163 to i64
  %165 = getelementptr inbounds i8, ptr %111, i64 %164
  %166 = load i8, ptr %165, align 1, !tbaa !9
  %167 = zext i8 %166 to i32
  %168 = shl nuw nsw i32 %167, 8
  %169 = or i32 %168, %161
  %170 = add i32 %106, -38
  %171 = and i32 %109, %170
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds i8, ptr %111, i64 %172
  %174 = load i8, ptr %173, align 1, !tbaa !9
  %175 = zext i8 %174 to i32
  %176 = shl nuw nsw i32 %175, 16
  %177 = or i32 %169, %176
  %178 = add i32 %106, -37
  %179 = and i32 %109, %178
  %180 = sext i32 %179 to i64
  %181 = getelementptr inbounds i8, ptr %111, i64 %180
  %182 = load i8, ptr %181, align 1, !tbaa !9
  %183 = zext i8 %182 to i32
  %184 = shl nuw nsw i32 %183, 24
  %185 = or i32 %177, %184
  %186 = icmp eq i32 %185, 40
  br i1 %186, label %187, label %257

187:                                              ; preds = %155
  %188 = add i32 %106, -24
  %189 = and i32 %109, %188
  %190 = sext i32 %189 to i64
  %191 = getelementptr inbounds i8, ptr %111, i64 %190
  %192 = load i8, ptr %191, align 1, !tbaa !9
  %193 = zext i8 %192 to i32
  %194 = add i32 %106, -23
  %195 = and i32 %109, %194
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds i8, ptr %111, i64 %196
  %198 = load i8, ptr %197, align 1, !tbaa !9
  %199 = zext i8 %198 to i32
  %200 = shl nuw nsw i32 %199, 8
  %201 = or i32 %200, %193
  %202 = add i32 %106, -22
  %203 = and i32 %109, %202
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i8, ptr %111, i64 %204
  %206 = load i8, ptr %205, align 1, !tbaa !9
  %207 = zext i8 %206 to i32
  %208 = shl nuw nsw i32 %207, 16
  %209 = or i32 %201, %208
  %210 = add i32 %106, -21
  %211 = and i32 %109, %210
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds i8, ptr %111, i64 %212
  %214 = load i8, ptr %213, align 1, !tbaa !9
  %215 = zext i8 %214 to i32
  %216 = shl nuw nsw i32 %215, 24
  %217 = or i32 %209, %216
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %257

219:                                              ; preds = %187
  %220 = tail call noundef i32 @_Z2i4i(i32 noundef 36)
  %221 = add i32 %220, 3
  %222 = and i32 %221, -4
  %223 = mul i32 %222, 3
  store i32 %223, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  %224 = tail call noundef i32 @_Z2i4i(i32 noundef 32)
  %225 = load i32, ptr @pos, align 4, !tbaa !25
  store i32 %225, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !25
  %226 = load i32, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  %227 = icmp slt i32 %226, 196608
  %228 = icmp slt i32 %224, 65536
  %229 = and i1 %228, %227
  br i1 %229, label %230, label %257

230:                                              ; preds = %219
  %231 = mul nsw i32 %226, %224
  %232 = add nsw i32 %231, %225
  store i32 %232, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !25
  %233 = sdiv i32 %226, 3
  %234 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str, i32 noundef %233, i32 noundef %224)
  br label %257

235:                                              ; preds = %7
  %236 = landingpad { ptr, i32 }
          cleanup
  br label %1380

237:                                              ; preds = %16
  %238 = landingpad { ptr, i32 }
          cleanup
  br label %1380

239:                                              ; preds = %25
  %240 = landingpad { ptr, i32 }
          cleanup
  br label %1380

241:                                              ; preds = %34
  %242 = landingpad { ptr, i32 }
          cleanup
  br label %1380

243:                                              ; preds = %43
  %244 = landingpad { ptr, i32 }
          cleanup
  br label %1380

245:                                              ; preds = %52
  %246 = landingpad { ptr, i32 }
          cleanup
  br label %1380

247:                                              ; preds = %61
  %248 = landingpad { ptr, i32 }
          cleanup
  br label %1380

249:                                              ; preds = %70
  %250 = landingpad { ptr, i32 }
          cleanup
  br label %1380

251:                                              ; preds = %79
  %252 = landingpad { ptr, i32 }
          cleanup
  br label %1380

253:                                              ; preds = %88
  %254 = landingpad { ptr, i32 }
          cleanup
  br label %1380

255:                                              ; preds = %97
  %256 = landingpad { ptr, i32 }
          cleanup
  br label %1380

257:                                              ; preds = %219, %230, %187, %155, %123, %116, %105
  %258 = load i32, ptr @bpos, align 4, !tbaa !25
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %446

260:                                              ; preds = %257
  %261 = load i32, ptr @c4, align 4, !tbaa !25
  %262 = icmp eq i32 %261, 1229531648
  %263 = load i32, ptr @pos, align 4, !tbaa !25
  br i1 %262, label %266, label %264

264:                                              ; preds = %260
  %265 = load i32, ptr @_ZZ8bmpModelR5MixerE4tiff, align 4, !tbaa !25
  br label %267

266:                                              ; preds = %260
  store i32 %263, ptr @_ZZ8bmpModelR5MixerE4tiff, align 4, !tbaa !25
  br label %267

267:                                              ; preds = %264, %266
  %268 = phi i32 [ %265, %264 ], [ %263, %266 ]
  %269 = sub i32 %263, %268
  %270 = icmp eq i32 %269, 4
  %271 = icmp ne i32 %261, 134217728
  %272 = select i1 %270, i1 %271, i1 false
  br i1 %272, label %273, label %274

273:                                              ; preds = %267
  store i32 0, ptr @_ZZ8bmpModelR5MixerE4tiff, align 4, !tbaa !25
  br label %446

274:                                              ; preds = %267
  %275 = icmp ne i32 %268, 0
  %276 = icmp eq i32 %269, 200
  %277 = select i1 %275, i1 %276, i1 false
  br i1 %277, label %278, label %446

278:                                              ; preds = %274
  %279 = add i32 %263, -196
  %280 = load i32, ptr @buf, align 8, !tbaa !20
  %281 = add nsw i32 %280, -1
  %282 = and i32 %281, %279
  %283 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %284 = sext i32 %282 to i64
  %285 = getelementptr inbounds i8, ptr %283, i64 %284
  %286 = load i8, ptr %285, align 1, !tbaa !9
  %287 = add i32 %263, -195
  %288 = and i32 %281, %287
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds i8, ptr %283, i64 %289
  %291 = load i8, ptr %290, align 1, !tbaa !9
  store i32 0, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  %292 = add i32 %268, 6
  %293 = add nsw i32 %263, -12
  %294 = icmp slt i32 %292, %293
  br i1 %294, label %295, label %437

295:                                              ; preds = %278
  %296 = zext i8 %291 to i32
  %297 = shl nuw nsw i32 %296, 8
  %298 = zext i8 %286 to i32
  %299 = or i32 %297, %298
  br label %300

300:                                              ; preds = %295, %418
  %301 = phi i32 [ %307, %418 ], [ %299, %295 ]
  %302 = phi i32 [ %422, %418 ], [ 0, %295 ]
  %303 = phi i32 [ %421, %418 ], [ 0, %295 ]
  %304 = phi i32 [ %420, %418 ], [ 0, %295 ]
  %305 = phi i32 [ %419, %418 ], [ 0, %295 ]
  %306 = phi i32 [ %423, %418 ], [ %292, %295 ]
  %307 = add nsw i32 %301, -1
  %308 = icmp sgt i32 %301, 1
  br i1 %308, label %317, label %309

309:                                              ; preds = %300, %418
  %310 = phi i32 [ %305, %300 ], [ %419, %418 ]
  %311 = phi i32 [ %304, %300 ], [ %420, %418 ]
  %312 = phi i32 [ %303, %300 ], [ %421, %418 ]
  %313 = phi i32 [ %302, %300 ], [ %422, %418 ]
  %314 = icmp sgt i32 %311, 0
  %315 = icmp sgt i32 %310, 0
  %316 = select i1 %314, i1 %315, i1 false
  br i1 %316, label %425, label %437

317:                                              ; preds = %300
  %318 = add i32 %306, 2
  %319 = and i32 %318, %281
  %320 = sext i32 %319 to i64
  %321 = getelementptr inbounds i8, ptr %283, i64 %320
  %322 = load i8, ptr %321, align 1, !tbaa !9
  %323 = zext i8 %322 to i32
  %324 = add i32 %306, 3
  %325 = and i32 %324, %281
  %326 = sext i32 %325 to i64
  %327 = getelementptr inbounds i8, ptr %283, i64 %326
  %328 = load i8, ptr %327, align 1, !tbaa !9
  %329 = zext i8 %328 to i32
  %330 = shl nuw nsw i32 %329, 8
  %331 = or i32 %330, %323
  %332 = add i32 %306, 4
  %333 = and i32 %332, %281
  %334 = sext i32 %333 to i64
  %335 = getelementptr inbounds i8, ptr %283, i64 %334
  %336 = load i8, ptr %335, align 1, !tbaa !9
  %337 = zext i8 %336 to i32
  %338 = add i32 %306, 5
  %339 = and i32 %338, %281
  %340 = sext i32 %339 to i64
  %341 = getelementptr inbounds i8, ptr %283, i64 %340
  %342 = load i8, ptr %341, align 1, !tbaa !9
  %343 = zext i8 %342 to i32
  %344 = shl nuw nsw i32 %343, 8
  %345 = or i32 %344, %337
  %346 = add i32 %306, 6
  %347 = and i32 %346, %281
  %348 = sext i32 %347 to i64
  %349 = getelementptr inbounds i8, ptr %283, i64 %348
  %350 = load i8, ptr %349, align 1, !tbaa !9
  %351 = zext i8 %350 to i32
  %352 = shl nuw nsw i32 %351, 16
  %353 = or i32 %345, %352
  %354 = add i32 %306, 7
  %355 = and i32 %354, %281
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds i8, ptr %283, i64 %356
  %358 = load i8, ptr %357, align 1, !tbaa !9
  %359 = zext i8 %358 to i32
  %360 = shl nuw nsw i32 %359, 24
  %361 = or i32 %353, %360
  %362 = add nsw i32 %331, -3
  %363 = icmp ult i32 %362, 2
  %364 = icmp eq i32 %361, 1
  %365 = select i1 %363, i1 %364, i1 false
  br i1 %365, label %366, label %418

366:                                              ; preds = %317
  %367 = add i32 %306, 9
  %368 = and i32 %367, %281
  %369 = sext i32 %368 to i64
  %370 = getelementptr inbounds i8, ptr %283, i64 %369
  %371 = load i8, ptr %370, align 1, !tbaa !9
  %372 = zext i8 %371 to i32
  %373 = shl nuw nsw i32 %372, 8
  %374 = add i32 %306, 8
  %375 = and i32 %374, %281
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds i8, ptr %283, i64 %376
  %378 = load i8, ptr %377, align 1, !tbaa !9
  %379 = zext i8 %378 to i32
  %380 = or i32 %373, %379
  %381 = add i32 %306, 10
  %382 = and i32 %381, %281
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds i8, ptr %283, i64 %383
  %385 = load i8, ptr %384, align 1, !tbaa !9
  %386 = zext i8 %385 to i32
  %387 = shl nuw nsw i32 %386, 16
  %388 = or i32 %380, %387
  %389 = add i32 %306, 11
  %390 = and i32 %389, %281
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds i8, ptr %283, i64 %391
  %393 = load i8, ptr %392, align 1, !tbaa !9
  %394 = zext i8 %393 to i32
  %395 = shl nuw nsw i32 %394, 24
  %396 = or i32 %388, %395
  %397 = add nsw i32 %306, 1
  %398 = and i32 %397, %281
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds i8, ptr %283, i64 %399
  %401 = load i8, ptr %400, align 1, !tbaa !9
  %402 = zext i8 %401 to i32
  %403 = shl nuw nsw i32 %402, 8
  %404 = and i32 %306, %281
  %405 = sext i32 %404 to i64
  %406 = getelementptr inbounds i8, ptr %283, i64 %405
  %407 = load i8, ptr %406, align 1, !tbaa !9
  %408 = zext i8 %407 to i32
  %409 = or i32 %403, %408
  %410 = icmp eq i32 %409, 256
  %411 = select i1 %410, i32 %396, i32 %304
  %412 = icmp eq i32 %409, 257
  %413 = select i1 %412, i32 %396, i32 %305
  %414 = icmp eq i32 %409, 259
  %415 = select i1 %414, i32 %396, i32 %303
  %416 = icmp eq i32 %409, 277
  %417 = select i1 %416, i32 %396, i32 %302
  br label %418

418:                                              ; preds = %366, %317
  %419 = phi i32 [ %305, %317 ], [ %413, %366 ]
  %420 = phi i32 [ %304, %317 ], [ %411, %366 ]
  %421 = phi i32 [ %303, %317 ], [ %415, %366 ]
  %422 = phi i32 [ %302, %317 ], [ %417, %366 ]
  %423 = add nsw i32 %306, 12
  %424 = icmp slt i32 %423, %293
  br i1 %424, label %300, label %309, !llvm.loop !118

425:                                              ; preds = %309
  %426 = mul nsw i32 %311, %310
  %427 = icmp sgt i32 %426, 50
  %428 = icmp eq i32 %312, 1
  %429 = select i1 %427, i1 %428, i1 false
  %430 = and i32 %313, -3
  %431 = icmp eq i32 %430, 1
  %432 = select i1 %429, i1 %431, i1 false
  br i1 %432, label %433, label %437

433:                                              ; preds = %425
  %434 = mul nsw i32 %313, %426
  %435 = add i32 %434, %268
  store i32 %435, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !25
  %436 = mul nsw i32 %313, %311
  store i32 %436, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  br label %437

437:                                              ; preds = %278, %433, %425, %309
  %438 = phi i32 [ %313, %433 ], [ %313, %425 ], [ %313, %309 ], [ 0, %278 ]
  %439 = phi i32 [ %311, %433 ], [ %311, %425 ], [ %311, %309 ], [ 0, %278 ]
  %440 = phi i32 [ %310, %433 ], [ %310, %425 ], [ %310, %309 ], [ 0, %278 ]
  %441 = load i32, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !25
  %442 = icmp sgt i32 %441, %263
  br i1 %442, label %443, label %445

443:                                              ; preds = %437
  %444 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.5, i32 noundef %439, i32 noundef %440, i32 noundef %438)
  br label %446

445:                                              ; preds = %437
  store i32 0, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  store i32 0, ptr @_ZZ8bmpModelR5MixerE4tiff, align 4, !tbaa !25
  br label %446

446:                                              ; preds = %102, %273, %443, %445, %274, %257
  %447 = load i32, ptr @pos, align 4, !tbaa !25
  %448 = load i32, ptr @_ZZ8bmpModelR5MixerE3eoi, align 4, !tbaa !25
  %449 = icmp sgt i32 %447, %448
  br i1 %449, label %450, label %451

450:                                              ; preds = %446
  store i32 0, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  br label %1378

451:                                              ; preds = %446
  %452 = load i32, ptr @bpos, align 4, !tbaa !25
  %453 = icmp eq i32 %452, 0
  br i1 %453, label %457, label %454

454:                                              ; preds = %451
  %455 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm3, i64 0, i32 1), align 8, !tbaa !112
  %456 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm4, i64 0, i32 1), align 8, !tbaa !112
  br label %1155

457:                                              ; preds = %451
  %458 = srem i32 %447, 3
  %459 = add nsw i32 %447, -3
  %460 = load i32, ptr @buf, align 8, !tbaa !20
  %461 = add nsw i32 %460, -1
  %462 = and i32 %461, %459
  %463 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %464 = sext i32 %462 to i64
  %465 = getelementptr inbounds i8, ptr %463, i64 %464
  %466 = load i8, ptr %465, align 1, !tbaa !9
  %467 = zext i8 %466 to i32
  %468 = load i32, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  %469 = add nsw i32 %468, -3
  %470 = sub nsw i32 %447, %469
  %471 = and i32 %470, %461
  %472 = sext i32 %471 to i64
  %473 = getelementptr inbounds i8, ptr %463, i64 %472
  %474 = load i8, ptr %473, align 1, !tbaa !9
  %475 = zext i8 %474 to i32
  %476 = add nuw nsw i32 %475, %467
  %477 = sub nsw i32 %447, %468
  %478 = and i32 %477, %461
  %479 = sext i32 %478 to i64
  %480 = getelementptr inbounds i8, ptr %463, i64 %479
  %481 = load i8, ptr %480, align 1, !tbaa !9
  %482 = zext i8 %481 to i32
  %483 = add nuw nsw i32 %476, %482
  %484 = add nsw i32 %468, 3
  %485 = sub nsw i32 %447, %484
  %486 = and i32 %485, %461
  %487 = sext i32 %486 to i64
  %488 = getelementptr inbounds i8, ptr %463, i64 %487
  %489 = load i8, ptr %488, align 1, !tbaa !9
  %490 = zext i8 %489 to i32
  %491 = add nuw nsw i32 %483, %490
  %492 = mul nuw nsw i32 %467, %467
  %493 = mul nuw nsw i32 %475, %475
  %494 = add nuw nsw i32 %493, %492
  %495 = mul nuw nsw i32 %482, %482
  %496 = add nuw nsw i32 %494, %495
  %497 = mul nuw nsw i32 %490, %490
  %498 = add nuw nsw i32 %496, %497
  %499 = mul nuw nsw i32 %491, %491
  %500 = lshr i32 %499, 2
  %501 = sub nsw i32 %498, %500
  %502 = lshr i32 %501, 2
  %503 = lshr i32 %491, 2
  %504 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %505 = and i32 %502, 65535
  %506 = zext i32 %505 to i64
  %507 = getelementptr inbounds i8, ptr %504, i64 %506
  %508 = load i8, ptr %507, align 1, !tbaa !9
  %509 = zext i8 %508 to i32
  %510 = mul i32 %467, 30005491
  %511 = mul nsw i32 %458, 50004239
  %512 = add nsw i32 %511, 19995673
  %513 = add i32 %512, %510
  %514 = lshr i32 %513, 9
  %515 = lshr i32 %467, 3
  %516 = lshr i32 %458, 4
  %517 = xor i32 %515, %514
  %518 = xor i32 %517, %516
  %519 = xor i32 %518, %513
  %520 = xor i32 %519, 67108864
  %521 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %522 = add nsw i32 %521, 1
  store i32 %522, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %523 = mul i32 %520, 987654323
  %524 = add i32 %523, %521
  %525 = tail call i32 @llvm.fshl.i32(i32 %524, i32 %524, i32 16)
  %526 = mul i32 %525, 123456791
  %527 = add i32 %526, %521
  %528 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %529 = sext i32 %521 to i64
  %530 = getelementptr inbounds i32, ptr %528, i64 %529
  store i32 %527, ptr %530, align 4, !tbaa !25
  %531 = load i32, ptr @pos, align 4, !tbaa !25
  %532 = add nsw i32 %531, -3
  %533 = load i32, ptr @buf, align 8, !tbaa !20
  %534 = add nsw i32 %533, -1
  %535 = and i32 %534, %532
  %536 = sext i32 %535 to i64
  %537 = getelementptr inbounds i8, ptr %463, i64 %536
  %538 = load i8, ptr %537, align 1, !tbaa !9
  %539 = zext i8 %538 to i32
  %540 = add nsw i32 %531, -1
  %541 = and i32 %534, %540
  %542 = sext i32 %541 to i64
  %543 = getelementptr inbounds i8, ptr %463, i64 %542
  %544 = load i8, ptr %543, align 1, !tbaa !9
  %545 = zext i8 %544 to i32
  %546 = mul i32 %539, 30005491
  %547 = mul i32 %545, 50004239
  %548 = mul nsw i32 %458, 70004807
  %549 = add nsw i32 %548, 290003459
  %550 = add i32 %549, %546
  %551 = add i32 %550, %547
  %552 = lshr i32 %551, 9
  %553 = lshr i32 %539, 3
  %554 = lshr i32 %545, 4
  %555 = lshr i32 %458, 5
  %556 = xor i32 %553, %554
  %557 = xor i32 %556, %552
  %558 = xor i32 %557, %555
  %559 = xor i32 %558, %551
  %560 = xor i32 %559, 67108863
  %561 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %562 = add nsw i32 %561, 1
  store i32 %562, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %563 = mul i32 %560, 987654323
  %564 = add i32 %563, %561
  %565 = tail call i32 @llvm.fshl.i32(i32 %564, i32 %564, i32 16)
  %566 = mul i32 %565, 123456791
  %567 = add i32 %566, %561
  %568 = sext i32 %561 to i64
  %569 = getelementptr inbounds i32, ptr %528, i64 %568
  store i32 %567, ptr %569, align 4, !tbaa !25
  %570 = load i32, ptr @pos, align 4, !tbaa !25
  %571 = add nsw i32 %570, -3
  %572 = load i32, ptr @buf, align 8, !tbaa !20
  %573 = add nsw i32 %572, -1
  %574 = and i32 %573, %571
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds i8, ptr %463, i64 %575
  %577 = load i8, ptr %576, align 1, !tbaa !9
  %578 = zext i8 %577 to i32
  %579 = add nsw i32 %570, -1
  %580 = and i32 %573, %579
  %581 = sext i32 %580 to i64
  %582 = getelementptr inbounds i8, ptr %463, i64 %581
  %583 = load i8, ptr %582, align 1, !tbaa !9
  %584 = lshr i8 %583, 2
  %585 = zext i8 %584 to i32
  %586 = add nsw i32 %570, -2
  %587 = and i32 %573, %586
  %588 = sext i32 %587 to i64
  %589 = getelementptr inbounds i8, ptr %463, i64 %588
  %590 = load i8, ptr %589, align 1, !tbaa !9
  %591 = lshr i8 %590, 6
  %592 = zext i8 %591 to i32
  %593 = mul i32 %578, 30005491
  %594 = mul nuw i32 %585, 50004239
  %595 = mul nuw nsw i32 %592, 70004807
  %596 = mul nsw i32 %458, 110002499
  %597 = add nsw i32 %596, 600008937
  %598 = add i32 %597, %593
  %599 = add i32 %598, %594
  %600 = add i32 %599, %595
  %601 = lshr i32 %600, 9
  %602 = lshr i32 %578, 3
  %603 = lshr i32 %585, 4
  %604 = lshr i32 %458, 6
  %605 = xor i32 %602, %603
  %606 = xor i32 %605, %601
  %607 = xor i32 %606, %604
  %608 = xor i32 %607, %600
  %609 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %610 = add nsw i32 %609, 1
  store i32 %610, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %611 = mul i32 %608, 987654323
  %612 = add i32 %611, %609
  %613 = tail call i32 @llvm.fshl.i32(i32 %612, i32 %612, i32 16)
  %614 = mul i32 %613, 123456791
  %615 = add i32 %614, %609
  %616 = sext i32 %609 to i64
  %617 = getelementptr inbounds i32, ptr %528, i64 %616
  store i32 %615, ptr %617, align 4, !tbaa !25
  %618 = load i32, ptr @pos, align 4, !tbaa !25
  %619 = sub nsw i32 %618, %468
  %620 = load i32, ptr @buf, align 8, !tbaa !20
  %621 = add nsw i32 %620, -1
  %622 = and i32 %621, %619
  %623 = sext i32 %622 to i64
  %624 = getelementptr inbounds i8, ptr %463, i64 %623
  %625 = load i8, ptr %624, align 1, !tbaa !9
  %626 = zext i8 %625 to i32
  %627 = mul i32 %626, 30005491
  %628 = add nsw i32 %511, 620004610
  %629 = add i32 %628, %627
  %630 = lshr i32 %629, 9
  %631 = lshr i32 %626, 3
  %632 = xor i32 %631, %630
  %633 = xor i32 %632, %516
  %634 = xor i32 %633, %629
  %635 = xor i32 %634, 67108865
  %636 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %637 = add nsw i32 %636, 1
  store i32 %637, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %638 = mul i32 %635, 987654323
  %639 = add i32 %638, %636
  %640 = tail call i32 @llvm.fshl.i32(i32 %639, i32 %639, i32 16)
  %641 = mul i32 %640, 123456791
  %642 = add i32 %641, %636
  %643 = sext i32 %636 to i64
  %644 = getelementptr inbounds i32, ptr %528, i64 %643
  store i32 %642, ptr %644, align 4, !tbaa !25
  %645 = load i32, ptr @pos, align 4, !tbaa !25
  %646 = sub nsw i32 %645, %468
  %647 = load i32, ptr @buf, align 8, !tbaa !20
  %648 = add nsw i32 %647, -1
  %649 = and i32 %648, %646
  %650 = sext i32 %649 to i64
  %651 = getelementptr inbounds i8, ptr %463, i64 %650
  %652 = load i8, ptr %651, align 1, !tbaa !9
  %653 = zext i8 %652 to i32
  %654 = add nsw i32 %645, -1
  %655 = and i32 %648, %654
  %656 = sext i32 %655 to i64
  %657 = getelementptr inbounds i8, ptr %463, i64 %656
  %658 = load i8, ptr %657, align 1, !tbaa !9
  %659 = zext i8 %658 to i32
  %660 = mul i32 %653, 30005491
  %661 = mul i32 %659, 50004239
  %662 = add nsw i32 %548, 890012396
  %663 = add i32 %662, %660
  %664 = add i32 %663, %661
  %665 = lshr i32 %664, 9
  %666 = lshr i32 %653, 3
  %667 = lshr i32 %659, 4
  %668 = xor i32 %666, %667
  %669 = xor i32 %668, %665
  %670 = xor i32 %669, %555
  %671 = xor i32 %670, %664
  %672 = xor i32 %671, 67108862
  %673 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %674 = add nsw i32 %673, 1
  store i32 %674, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %675 = mul i32 %672, 987654323
  %676 = add i32 %675, %673
  %677 = tail call i32 @llvm.fshl.i32(i32 %676, i32 %676, i32 16)
  %678 = mul i32 %677, 123456791
  %679 = add i32 %678, %673
  %680 = sext i32 %673 to i64
  %681 = getelementptr inbounds i32, ptr %528, i64 %680
  store i32 %679, ptr %681, align 4, !tbaa !25
  %682 = load i32, ptr @pos, align 4, !tbaa !25
  %683 = sub nsw i32 %682, %468
  %684 = load i32, ptr @buf, align 8, !tbaa !20
  %685 = add nsw i32 %684, -1
  %686 = and i32 %685, %683
  %687 = sext i32 %686 to i64
  %688 = getelementptr inbounds i8, ptr %463, i64 %687
  %689 = load i8, ptr %688, align 1, !tbaa !9
  %690 = zext i8 %689 to i32
  %691 = add nsw i32 %682, -1
  %692 = and i32 %685, %691
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds i8, ptr %463, i64 %693
  %695 = load i8, ptr %694, align 1, !tbaa !9
  %696 = lshr i8 %695, 2
  %697 = zext i8 %696 to i32
  %698 = add nsw i32 %682, -2
  %699 = and i32 %685, %698
  %700 = sext i32 %699 to i64
  %701 = getelementptr inbounds i8, ptr %463, i64 %700
  %702 = load i8, ptr %701, align 1, !tbaa !9
  %703 = lshr i8 %702, 6
  %704 = zext i8 %703 to i32
  %705 = mul i32 %690, 30005491
  %706 = mul nuw i32 %697, 50004239
  %707 = mul nuw nsw i32 %704, 70004807
  %708 = add nsw i32 %596, 1200017874
  %709 = add i32 %708, %705
  %710 = add i32 %709, %706
  %711 = add i32 %710, %707
  %712 = lshr i32 %711, 9
  %713 = lshr i32 %690, 3
  %714 = lshr i32 %697, 4
  %715 = xor i32 %713, %714
  %716 = xor i32 %715, %712
  %717 = xor i32 %716, %604
  %718 = xor i32 %717, %711
  %719 = xor i32 %718, 1
  %720 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %721 = add nsw i32 %720, 1
  store i32 %721, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %722 = mul i32 %719, 987654323
  %723 = add i32 %722, %720
  %724 = tail call i32 @llvm.fshl.i32(i32 %723, i32 %723, i32 16)
  %725 = mul i32 %724, 123456791
  %726 = add i32 %725, %720
  %727 = sext i32 %720 to i64
  %728 = getelementptr inbounds i32, ptr %528, i64 %727
  store i32 %726, ptr %728, align 4, !tbaa !25
  %729 = load i32, ptr @pos, align 4, !tbaa !25
  %730 = add nsw i32 %729, -3
  %731 = load i32, ptr @buf, align 8, !tbaa !20
  %732 = add nsw i32 %731, -1
  %733 = and i32 %732, %730
  %734 = sext i32 %733 to i64
  %735 = getelementptr inbounds i8, ptr %463, i64 %734
  %736 = load i8, ptr %735, align 1, !tbaa !9
  %737 = zext i8 %736 to i32
  %738 = sub nsw i32 %729, %468
  %739 = and i32 %732, %738
  %740 = sext i32 %739 to i64
  %741 = getelementptr inbounds i8, ptr %463, i64 %740
  %742 = load i8, ptr %741, align 1, !tbaa !9
  %743 = zext i8 %742 to i32
  %744 = add nuw nsw i32 %743, %737
  %745 = lshr i32 %744, 3
  %746 = add nsw i32 %729, -1
  %747 = and i32 %732, %746
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds i8, ptr %463, i64 %748
  %750 = load i8, ptr %749, align 1, !tbaa !9
  %751 = lshr i8 %750, 5
  %752 = zext i8 %751 to i32
  %753 = add nsw i32 %729, -2
  %754 = and i32 %732, %753
  %755 = sext i32 %754 to i64
  %756 = getelementptr inbounds i8, ptr %463, i64 %755
  %757 = load i8, ptr %756, align 1, !tbaa !9
  %758 = lshr i8 %757, 5
  %759 = zext i8 %758 to i32
  %760 = mul nuw nsw i32 %745, 30005491
  %761 = mul nuw nsw i32 %752, 50004239
  %762 = mul nuw nsw i32 %759, 70004807
  %763 = add nsw i32 %596, 1400020853
  %764 = add nuw i32 %763, %760
  %765 = add nuw i32 %764, %761
  %766 = add i32 %765, %762
  %767 = lshr i32 %766, 9
  %768 = xor i32 %744, %458
  %769 = lshr i32 %768, 6
  %770 = xor i32 %769, %767
  %771 = xor i32 %770, %766
  %772 = xor i32 %771, 1
  %773 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %774 = add nsw i32 %773, 1
  store i32 %774, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %775 = mul i32 %772, 987654323
  %776 = add i32 %775, %773
  %777 = tail call i32 @llvm.fshl.i32(i32 %776, i32 %776, i32 16)
  %778 = mul i32 %777, 123456791
  %779 = add i32 %778, %773
  %780 = sext i32 %773 to i64
  %781 = getelementptr inbounds i32, ptr %528, i64 %780
  store i32 %779, ptr %781, align 4, !tbaa !25
  %782 = load i32, ptr @pos, align 4, !tbaa !25
  %783 = add nsw i32 %782, -1
  %784 = load i32, ptr @buf, align 8, !tbaa !20
  %785 = add nsw i32 %784, -1
  %786 = and i32 %785, %783
  %787 = sext i32 %786 to i64
  %788 = getelementptr inbounds i8, ptr %463, i64 %787
  %789 = load i8, ptr %788, align 1, !tbaa !9
  %790 = zext i8 %789 to i32
  %791 = add nsw i32 %782, -2
  %792 = and i32 %785, %791
  %793 = sext i32 %792 to i64
  %794 = getelementptr inbounds i8, ptr %463, i64 %793
  %795 = load i8, ptr %794, align 1, !tbaa !9
  %796 = zext i8 %795 to i32
  %797 = mul i32 %790, 30005491
  %798 = mul i32 %796, 50004239
  %799 = add nsw i32 %548, 1490021333
  %800 = add i32 %799, %797
  %801 = add i32 %800, %798
  %802 = lshr i32 %801, 9
  %803 = lshr i32 %790, 3
  %804 = lshr i32 %796, 4
  %805 = xor i32 %803, %804
  %806 = xor i32 %805, %802
  %807 = xor i32 %806, %555
  %808 = xor i32 %807, %801
  %809 = xor i32 %808, 67108861
  %810 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %811 = add nsw i32 %810, 1
  store i32 %811, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %812 = mul i32 %809, 987654323
  %813 = add i32 %812, %810
  %814 = tail call i32 @llvm.fshl.i32(i32 %813, i32 %813, i32 16)
  %815 = mul i32 %814, 123456791
  %816 = add i32 %815, %810
  %817 = sext i32 %810 to i64
  %818 = getelementptr inbounds i32, ptr %528, i64 %817
  store i32 %816, ptr %818, align 4, !tbaa !25
  %819 = load i32, ptr @pos, align 4, !tbaa !25
  %820 = add nsw i32 %819, -3
  %821 = load i32, ptr @buf, align 8, !tbaa !20
  %822 = add nsw i32 %821, -1
  %823 = and i32 %822, %820
  %824 = sext i32 %823 to i64
  %825 = getelementptr inbounds i8, ptr %463, i64 %824
  %826 = load i8, ptr %825, align 1, !tbaa !9
  %827 = zext i8 %826 to i32
  %828 = add nsw i32 %819, -1
  %829 = and i32 %822, %828
  %830 = sext i32 %829 to i64
  %831 = getelementptr inbounds i8, ptr %463, i64 %830
  %832 = load i8, ptr %831, align 1, !tbaa !9
  %833 = zext i8 %832 to i32
  %834 = add nsw i32 %819, -4
  %835 = and i32 %822, %834
  %836 = sext i32 %835 to i64
  %837 = getelementptr inbounds i8, ptr %463, i64 %836
  %838 = load i8, ptr %837, align 1, !tbaa !9
  %839 = zext i8 %838 to i32
  %840 = sub nsw i32 %833, %839
  %841 = mul i32 %827, 30005491
  %842 = mul i32 %840, 50004239
  %843 = add nsw i32 %548, 1690024312
  %844 = add i32 %843, %841
  %845 = add i32 %844, %842
  %846 = lshr i32 %845, 9
  %847 = lshr i32 %827, 3
  %848 = lshr i32 %840, 4
  %849 = xor i32 %847, %848
  %850 = xor i32 %849, %846
  %851 = xor i32 %850, %555
  %852 = xor i32 %851, %845
  %853 = xor i32 %852, 67108861
  %854 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %855 = add nsw i32 %854, 1
  store i32 %855, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %856 = mul i32 %853, 987654323
  %857 = add i32 %856, %854
  %858 = tail call i32 @llvm.fshl.i32(i32 %857, i32 %857, i32 16)
  %859 = mul i32 %858, 123456791
  %860 = add i32 %859, %854
  %861 = sext i32 %854 to i64
  %862 = getelementptr inbounds i32, ptr %528, i64 %861
  store i32 %860, ptr %862, align 4, !tbaa !25
  %863 = load i32, ptr @pos, align 4, !tbaa !25
  %864 = add nsw i32 %863, -3
  %865 = load i32, ptr @buf, align 8, !tbaa !20
  %866 = add nsw i32 %865, -1
  %867 = and i32 %866, %864
  %868 = sext i32 %867 to i64
  %869 = getelementptr inbounds i8, ptr %463, i64 %868
  %870 = load i8, ptr %869, align 1, !tbaa !9
  %871 = zext i8 %870 to i32
  %872 = add nsw i32 %863, -1
  %873 = and i32 %866, %872
  %874 = sext i32 %873 to i64
  %875 = getelementptr inbounds i8, ptr %463, i64 %874
  %876 = load i8, ptr %875, align 1, !tbaa !9
  %877 = zext i8 %876 to i32
  %878 = add nuw nsw i32 %877, %871
  %879 = add nsw i32 %863, -4
  %880 = and i32 %866, %879
  %881 = sext i32 %880 to i64
  %882 = getelementptr inbounds i8, ptr %463, i64 %881
  %883 = load i8, ptr %882, align 1, !tbaa !9
  %884 = zext i8 %883 to i32
  %885 = sub nsw i32 %878, %884
  %886 = mul i32 %885, 30005491
  %887 = add nsw i32 %511, 1820022484
  %888 = add i32 %887, %886
  %889 = lshr i32 %888, 9
  %890 = lshr i32 %885, 3
  %891 = xor i32 %890, %889
  %892 = xor i32 %891, %516
  %893 = xor i32 %892, %888
  %894 = xor i32 %893, 67108866
  %895 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %896 = add nsw i32 %895, 1
  store i32 %896, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %897 = mul i32 %894, 987654323
  %898 = add i32 %897, %895
  %899 = tail call i32 @llvm.fshl.i32(i32 %898, i32 %898, i32 16)
  %900 = mul i32 %899, 123456791
  %901 = add i32 %900, %895
  %902 = sext i32 %895 to i64
  %903 = getelementptr inbounds i32, ptr %528, i64 %902
  store i32 %901, ptr %903, align 4, !tbaa !25
  %904 = load i32, ptr @pos, align 4, !tbaa !25
  %905 = sub nsw i32 %904, %468
  %906 = load i32, ptr @buf, align 8, !tbaa !20
  %907 = add nsw i32 %906, -1
  %908 = and i32 %907, %905
  %909 = sext i32 %908 to i64
  %910 = getelementptr inbounds i8, ptr %463, i64 %909
  %911 = load i8, ptr %910, align 1, !tbaa !9
  %912 = zext i8 %911 to i32
  %913 = add nsw i32 %904, -1
  %914 = and i32 %907, %913
  %915 = sext i32 %914 to i64
  %916 = getelementptr inbounds i8, ptr %463, i64 %915
  %917 = load i8, ptr %916, align 1, !tbaa !9
  %918 = zext i8 %917 to i32
  %919 = xor i32 %468, -1
  %920 = add i32 %904, %919
  %921 = and i32 %907, %920
  %922 = sext i32 %921 to i64
  %923 = getelementptr inbounds i8, ptr %463, i64 %922
  %924 = load i8, ptr %923, align 1, !tbaa !9
  %925 = zext i8 %924 to i32
  %926 = sub nsw i32 %918, %925
  %927 = mul i32 %912, 30005491
  %928 = mul i32 %926, 50004239
  %929 = add i32 %548, 2090030270
  %930 = add i32 %929, %927
  %931 = add i32 %930, %928
  %932 = lshr i32 %931, 9
  %933 = lshr i32 %912, 3
  %934 = lshr i32 %926, 4
  %935 = xor i32 %933, %934
  %936 = xor i32 %935, %932
  %937 = xor i32 %936, %555
  %938 = xor i32 %937, %931
  %939 = xor i32 %938, 67108861
  %940 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %941 = add nsw i32 %940, 1
  store i32 %941, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %942 = mul i32 %939, 987654323
  %943 = add i32 %942, %940
  %944 = tail call i32 @llvm.fshl.i32(i32 %943, i32 %943, i32 16)
  %945 = mul i32 %944, 123456791
  %946 = add i32 %945, %940
  %947 = sext i32 %940 to i64
  %948 = getelementptr inbounds i32, ptr %528, i64 %947
  store i32 %946, ptr %948, align 4, !tbaa !25
  %949 = load i32, ptr @pos, align 4, !tbaa !25
  %950 = sub nsw i32 %949, %468
  %951 = load i32, ptr @buf, align 8, !tbaa !20
  %952 = add nsw i32 %951, -1
  %953 = and i32 %952, %950
  %954 = sext i32 %953 to i64
  %955 = getelementptr inbounds i8, ptr %463, i64 %954
  %956 = load i8, ptr %955, align 1, !tbaa !9
  %957 = zext i8 %956 to i32
  %958 = add nsw i32 %949, -1
  %959 = and i32 %952, %958
  %960 = sext i32 %959 to i64
  %961 = getelementptr inbounds i8, ptr %463, i64 %960
  %962 = load i8, ptr %961, align 1, !tbaa !9
  %963 = zext i8 %962 to i32
  %964 = add nuw nsw i32 %963, %957
  %965 = add i32 %949, %919
  %966 = and i32 %952, %965
  %967 = sext i32 %966 to i64
  %968 = getelementptr inbounds i8, ptr %463, i64 %967
  %969 = load i8, ptr %968, align 1, !tbaa !9
  %970 = zext i8 %969 to i32
  %971 = sub nsw i32 %964, %970
  %972 = mul i32 %971, 30005491
  %973 = add i32 %511, -2074938854
  %974 = add i32 %973, %972
  %975 = lshr i32 %974, 9
  %976 = lshr i32 %971, 3
  %977 = xor i32 %976, %975
  %978 = xor i32 %977, %516
  %979 = xor i32 %978, %974
  %980 = xor i32 %979, 67108867
  %981 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %982 = add nsw i32 %981, 1
  store i32 %982, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %983 = mul i32 %980, 987654323
  %984 = add i32 %983, %981
  %985 = tail call i32 @llvm.fshl.i32(i32 %984, i32 %984, i32 16)
  %986 = mul i32 %985, 123456791
  %987 = add i32 %986, %981
  %988 = sext i32 %981 to i64
  %989 = getelementptr inbounds i32, ptr %528, i64 %988
  store i32 %987, ptr %989, align 4, !tbaa !25
  %990 = lshr i32 %509, 5
  %991 = mul i32 %503, 30005491
  %992 = mul nuw nsw i32 %990, 50004239
  %993 = add nsw i32 %548, -1804931068
  %994 = add i32 %993, %991
  %995 = add i32 %994, %992
  %996 = lshr i32 %995, 9
  %997 = xor i32 %491, %458
  %998 = lshr i32 %997, 5
  %999 = xor i32 %998, %996
  %1000 = xor i32 %999, %995
  %1001 = xor i32 %1000, 67108860
  %1002 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1003 = add nsw i32 %1002, 1
  store i32 %1003, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8bmpModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1004 = mul i32 %1001, 987654323
  %1005 = add i32 %1002, %1004
  %1006 = tail call i32 @llvm.fshl.i32(i32 %1005, i32 %1005, i32 16)
  %1007 = mul i32 %1006, 123456791
  %1008 = add i32 %1007, %1002
  %1009 = sext i32 %1002 to i64
  %1010 = getelementptr inbounds i32, ptr %528, i64 %1009
  store i32 %1008, ptr %1010, align 4, !tbaa !25
  %1011 = load i32, ptr @pos, align 4, !tbaa !25
  %1012 = add nsw i32 %1011, -3
  %1013 = load i32, ptr @buf, align 8, !tbaa !20
  %1014 = add nsw i32 %1013, -1
  %1015 = and i32 %1014, %1012
  %1016 = sext i32 %1015 to i64
  %1017 = getelementptr inbounds i8, ptr %463, i64 %1016
  %1018 = load i8, ptr %1017, align 1, !tbaa !9
  %1019 = zext i8 %1018 to i32
  %1020 = sub i32 %1011, %468
  %1021 = and i32 %1014, %1020
  %1022 = sext i32 %1021 to i64
  %1023 = getelementptr inbounds i8, ptr %463, i64 %1022
  %1024 = load i8, ptr %1023, align 1, !tbaa !9
  %1025 = zext i8 %1024 to i32
  %1026 = add nuw nsw i32 %1025, %1019
  %1027 = sub nsw i32 %1011, %484
  %1028 = and i32 %1014, %1027
  %1029 = sext i32 %1028 to i64
  %1030 = getelementptr inbounds i8, ptr %463, i64 %1029
  %1031 = load i8, ptr %1030, align 1, !tbaa !9
  %1032 = zext i8 %1031 to i32
  %1033 = sub nsw i32 %1026, %1032
  %1034 = shl nsw i32 %1033, 8
  %1035 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm1, align 8, !tbaa !74
  %1036 = add nsw i32 %1035, -256
  %1037 = and i32 %1034, %1036
  store i32 %1037, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %1038 = load i8, ptr %1017, align 1, !tbaa !9
  %1039 = zext i8 %1038 to i32
  %1040 = sub nsw i32 %1011, %469
  %1041 = and i32 %1014, %1040
  %1042 = sext i32 %1041 to i64
  %1043 = getelementptr inbounds i8, ptr %463, i64 %1042
  %1044 = load i8, ptr %1043, align 1, !tbaa !9
  %1045 = zext i8 %1044 to i32
  %1046 = add nuw nsw i32 %1045, %1039
  %1047 = load i8, ptr %1023, align 1, !tbaa !9
  %1048 = zext i8 %1047 to i32
  %1049 = sub nsw i32 %1046, %1048
  %1050 = shl nsw i32 %1049, 8
  %1051 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm2, align 8, !tbaa !74
  %1052 = add nsw i32 %1051, -256
  %1053 = and i32 %1050, %1052
  store i32 %1053, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %1054 = load i8, ptr %1017, align 1, !tbaa !9
  %1055 = zext i8 %1054 to i32
  %1056 = add nsw i32 %1011, -6
  %1057 = and i32 %1014, %1056
  %1058 = sext i32 %1057 to i64
  %1059 = getelementptr inbounds i8, ptr %463, i64 %1058
  %1060 = load i8, ptr %1059, align 1, !tbaa !9
  %1061 = zext i8 %1060 to i32
  %1062 = shl nuw nsw i32 %1055, 9
  %1063 = shl nuw nsw i32 %1061, 8
  %1064 = sub nsw i32 %1062, %1063
  %1065 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm3, align 8, !tbaa !74
  %1066 = add nsw i32 %1065, -256
  %1067 = and i32 %1064, %1066
  store i32 %1067, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm3, i64 0, i32 1), align 8, !tbaa !112
  %1068 = load i8, ptr %1023, align 1, !tbaa !9
  %1069 = zext i8 %1068 to i32
  %1070 = shl nsw i32 %468, 1
  %1071 = sub i32 %1011, %1070
  %1072 = and i32 %1014, %1071
  %1073 = sext i32 %1072 to i64
  %1074 = getelementptr inbounds i8, ptr %463, i64 %1073
  %1075 = load i8, ptr %1074, align 1, !tbaa !9
  %1076 = zext i8 %1075 to i32
  %1077 = shl nuw nsw i32 %1069, 9
  %1078 = shl nuw nsw i32 %1076, 8
  %1079 = sub nsw i32 %1077, %1078
  %1080 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm4, align 8, !tbaa !74
  %1081 = add nsw i32 %1080, -256
  %1082 = and i32 %1079, %1081
  store i32 %1082, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm4, i64 0, i32 1), align 8, !tbaa !112
  %1083 = load i8, ptr %1030, align 1, !tbaa !9
  %1084 = zext i8 %1083 to i32
  %1085 = add i32 %1071, -6
  %1086 = and i32 %1014, %1085
  %1087 = sext i32 %1086 to i64
  %1088 = getelementptr inbounds i8, ptr %463, i64 %1087
  %1089 = load i8, ptr %1088, align 1, !tbaa !9
  %1090 = zext i8 %1089 to i32
  %1091 = shl nuw nsw i32 %1084, 9
  %1092 = shl nuw nsw i32 %1090, 8
  %1093 = sub nsw i32 %1091, %1092
  %1094 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm5, align 8, !tbaa !74
  %1095 = add nsw i32 %1094, -256
  %1096 = and i32 %1093, %1095
  store i32 %1096, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm5, i64 0, i32 1), align 8, !tbaa !112
  %1097 = load i8, ptr %1043, align 1, !tbaa !9
  %1098 = zext i8 %1097 to i32
  %1099 = add i32 %1071, 6
  %1100 = and i32 %1014, %1099
  %1101 = sext i32 %1100 to i64
  %1102 = getelementptr inbounds i8, ptr %463, i64 %1101
  %1103 = load i8, ptr %1102, align 1, !tbaa !9
  %1104 = zext i8 %1103 to i32
  %1105 = shl nuw nsw i32 %1098, 9
  %1106 = shl nuw nsw i32 %1104, 8
  %1107 = sub nsw i32 %1105, %1106
  %1108 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm6, align 8, !tbaa !74
  %1109 = add nsw i32 %1108, -256
  %1110 = and i32 %1107, %1109
  store i32 %1110, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm6, i64 0, i32 1), align 8, !tbaa !112
  %1111 = load i8, ptr %1043, align 1, !tbaa !9
  %1112 = zext i8 %1111 to i32
  %1113 = add nsw i32 %1011, -1
  %1114 = and i32 %1014, %1113
  %1115 = sext i32 %1114 to i64
  %1116 = getelementptr inbounds i8, ptr %463, i64 %1115
  %1117 = load i8, ptr %1116, align 1, !tbaa !9
  %1118 = zext i8 %1117 to i32
  %1119 = add nuw nsw i32 %1118, %1112
  %1120 = add i32 %1020, 2
  %1121 = and i32 %1014, %1120
  %1122 = sext i32 %1121 to i64
  %1123 = getelementptr inbounds i8, ptr %463, i64 %1122
  %1124 = load i8, ptr %1123, align 1, !tbaa !9
  %1125 = zext i8 %1124 to i32
  %1126 = sub nsw i32 %1119, %1125
  %1127 = shl nsw i32 %1126, 8
  %1128 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm7, align 8, !tbaa !74
  %1129 = add nsw i32 %1128, -256
  %1130 = and i32 %1127, %1129
  store i32 %1130, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm7, i64 0, i32 1), align 8, !tbaa !112
  %1131 = load i8, ptr %1023, align 1, !tbaa !9
  %1132 = zext i8 %1131 to i32
  %1133 = load i8, ptr %1043, align 1, !tbaa !9
  %1134 = zext i8 %1133 to i32
  %1135 = add nuw nsw i32 %1134, %1132
  %1136 = add i32 %1071, 3
  %1137 = and i32 %1014, %1136
  %1138 = sext i32 %1137 to i64
  %1139 = getelementptr inbounds i8, ptr %463, i64 %1138
  %1140 = load i8, ptr %1139, align 1, !tbaa !9
  %1141 = zext i8 %1140 to i32
  %1142 = sub nsw i32 %1135, %1141
  %1143 = shl nsw i32 %1142, 8
  %1144 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm8, align 8, !tbaa !74
  %1145 = add nsw i32 %1144, -256
  %1146 = and i32 %1143, %1145
  store i32 %1146, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm8, i64 0, i32 1), align 8, !tbaa !112
  %1147 = lshr i32 %491, 3
  %1148 = shl nuw nsw i32 %509, 1
  %1149 = and i32 %1148, 384
  %1150 = or i32 %1149, %1147
  %1151 = shl nuw nsw i32 %1150, 8
  %1152 = load i32, ptr @_ZZ8bmpModelR5MixerE4scm9, align 8, !tbaa !74
  %1153 = add i32 %1152, 2147483392
  %1154 = and i32 %1153, %1151
  store i32 %1154, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm9, i64 0, i32 1), align 8, !tbaa !112
  br label %1155

1155:                                             ; preds = %454, %457
  %1156 = phi i32 [ %456, %454 ], [ %1082, %457 ]
  %1157 = phi i32 [ %455, %454 ], [ %1067, %457 ]
  %1158 = load i32, ptr @y, align 4, !tbaa !25
  %1159 = shl i32 %1158, 16
  %1160 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %1161 = load i16, ptr %1160, align 2, !tbaa !31
  %1162 = zext i16 %1161 to i32
  %1163 = or i32 %1159, 64
  %1164 = sub i32 %1163, %1162
  %1165 = lshr i32 %1164, 7
  %1166 = trunc i32 %1165 to i16
  %1167 = add i16 %1161, %1166
  store i16 %1167, ptr %1160, align 2, !tbaa !31
  %1168 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %1169 = load i32, ptr @c0, align 4, !tbaa !25
  %1170 = add nsw i32 %1169, %1168
  %1171 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm1, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1172 = sext i32 %1170 to i64
  %1173 = getelementptr inbounds i16, ptr %1171, i64 %1172
  store ptr %1173, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %1174 = load i16, ptr %1173, align 2, !tbaa !31
  %1175 = lshr i16 %1174, 4
  %1176 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %1177 = zext i16 %1175 to i64
  %1178 = getelementptr inbounds i16, ptr %1176, i64 %1177
  %1179 = load i16, ptr %1178, align 2, !tbaa !31
  %1180 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %1181 = load i32, ptr %1180, align 8, !tbaa !64
  %1182 = add nsw i32 %1181, 1
  %1183 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %1184 = load ptr, ptr %1183, align 8, !tbaa !59
  %1185 = sext i32 %1181 to i64
  %1186 = getelementptr inbounds i16, ptr %1184, i64 %1185
  store i16 %1179, ptr %1186, align 2, !tbaa !31
  %1187 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm2, i64 0, i32 2), align 8, !tbaa !114
  %1188 = load i16, ptr %1187, align 2, !tbaa !31
  %1189 = zext i16 %1188 to i32
  %1190 = sub i32 %1163, %1189
  %1191 = lshr i32 %1190, 7
  %1192 = trunc i32 %1191 to i16
  %1193 = add i16 %1188, %1192
  store i16 %1193, ptr %1187, align 2, !tbaa !31
  %1194 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %1195 = add nsw i32 %1194, %1169
  %1196 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm2, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1197 = sext i32 %1195 to i64
  %1198 = getelementptr inbounds i16, ptr %1196, i64 %1197
  store ptr %1198, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm2, i64 0, i32 2), align 8, !tbaa !114
  %1199 = load i16, ptr %1198, align 2, !tbaa !31
  %1200 = lshr i16 %1199, 4
  %1201 = zext i16 %1200 to i64
  %1202 = getelementptr inbounds i16, ptr %1176, i64 %1201
  %1203 = load i16, ptr %1202, align 2, !tbaa !31
  %1204 = add nsw i32 %1181, 2
  %1205 = sext i32 %1182 to i64
  %1206 = getelementptr inbounds i16, ptr %1184, i64 %1205
  store i16 %1203, ptr %1206, align 2, !tbaa !31
  %1207 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm3, i64 0, i32 2), align 8, !tbaa !114
  %1208 = load i16, ptr %1207, align 2, !tbaa !31
  %1209 = zext i16 %1208 to i32
  %1210 = sub i32 %1163, %1209
  %1211 = lshr i32 %1210, 7
  %1212 = trunc i32 %1211 to i16
  %1213 = add i16 %1208, %1212
  store i16 %1213, ptr %1207, align 2, !tbaa !31
  %1214 = add nsw i32 %1157, %1169
  %1215 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm3, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1216 = sext i32 %1214 to i64
  %1217 = getelementptr inbounds i16, ptr %1215, i64 %1216
  store ptr %1217, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm3, i64 0, i32 2), align 8, !tbaa !114
  %1218 = load i16, ptr %1217, align 2, !tbaa !31
  %1219 = lshr i16 %1218, 4
  %1220 = zext i16 %1219 to i64
  %1221 = getelementptr inbounds i16, ptr %1176, i64 %1220
  %1222 = load i16, ptr %1221, align 2, !tbaa !31
  %1223 = add nsw i32 %1181, 3
  %1224 = sext i32 %1204 to i64
  %1225 = getelementptr inbounds i16, ptr %1184, i64 %1224
  store i16 %1222, ptr %1225, align 2, !tbaa !31
  %1226 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm4, i64 0, i32 2), align 8, !tbaa !114
  %1227 = load i16, ptr %1226, align 2, !tbaa !31
  %1228 = zext i16 %1227 to i32
  %1229 = sub i32 %1163, %1228
  %1230 = lshr i32 %1229, 7
  %1231 = trunc i32 %1230 to i16
  %1232 = add i16 %1227, %1231
  store i16 %1232, ptr %1226, align 2, !tbaa !31
  %1233 = add nsw i32 %1156, %1169
  %1234 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm4, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1235 = sext i32 %1233 to i64
  %1236 = getelementptr inbounds i16, ptr %1234, i64 %1235
  store ptr %1236, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm4, i64 0, i32 2), align 8, !tbaa !114
  %1237 = load i16, ptr %1236, align 2, !tbaa !31
  %1238 = lshr i16 %1237, 4
  %1239 = zext i16 %1238 to i64
  %1240 = getelementptr inbounds i16, ptr %1176, i64 %1239
  %1241 = load i16, ptr %1240, align 2, !tbaa !31
  %1242 = add nsw i32 %1181, 4
  %1243 = sext i32 %1223 to i64
  %1244 = getelementptr inbounds i16, ptr %1184, i64 %1243
  store i16 %1241, ptr %1244, align 2, !tbaa !31
  %1245 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm5, i64 0, i32 2), align 8, !tbaa !114
  %1246 = load i16, ptr %1245, align 2, !tbaa !31
  %1247 = zext i16 %1246 to i32
  %1248 = sub i32 %1163, %1247
  %1249 = lshr i32 %1248, 7
  %1250 = trunc i32 %1249 to i16
  %1251 = add i16 %1246, %1250
  store i16 %1251, ptr %1245, align 2, !tbaa !31
  %1252 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm5, i64 0, i32 1), align 8, !tbaa !112
  %1253 = add nsw i32 %1252, %1169
  %1254 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm5, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1255 = sext i32 %1253 to i64
  %1256 = getelementptr inbounds i16, ptr %1254, i64 %1255
  store ptr %1256, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm5, i64 0, i32 2), align 8, !tbaa !114
  %1257 = load i16, ptr %1256, align 2, !tbaa !31
  %1258 = lshr i16 %1257, 4
  %1259 = zext i16 %1258 to i64
  %1260 = getelementptr inbounds i16, ptr %1176, i64 %1259
  %1261 = load i16, ptr %1260, align 2, !tbaa !31
  %1262 = add nsw i32 %1181, 5
  %1263 = sext i32 %1242 to i64
  %1264 = getelementptr inbounds i16, ptr %1184, i64 %1263
  store i16 %1261, ptr %1264, align 2, !tbaa !31
  %1265 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm6, i64 0, i32 2), align 8, !tbaa !114
  %1266 = load i16, ptr %1265, align 2, !tbaa !31
  %1267 = zext i16 %1266 to i32
  %1268 = sub i32 %1163, %1267
  %1269 = lshr i32 %1268, 7
  %1270 = trunc i32 %1269 to i16
  %1271 = add i16 %1266, %1270
  store i16 %1271, ptr %1265, align 2, !tbaa !31
  %1272 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm6, i64 0, i32 1), align 8, !tbaa !112
  %1273 = add nsw i32 %1272, %1169
  %1274 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm6, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1275 = sext i32 %1273 to i64
  %1276 = getelementptr inbounds i16, ptr %1274, i64 %1275
  store ptr %1276, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm6, i64 0, i32 2), align 8, !tbaa !114
  %1277 = load i16, ptr %1276, align 2, !tbaa !31
  %1278 = lshr i16 %1277, 4
  %1279 = zext i16 %1278 to i64
  %1280 = getelementptr inbounds i16, ptr %1176, i64 %1279
  %1281 = load i16, ptr %1280, align 2, !tbaa !31
  %1282 = add nsw i32 %1181, 6
  %1283 = sext i32 %1262 to i64
  %1284 = getelementptr inbounds i16, ptr %1184, i64 %1283
  store i16 %1281, ptr %1284, align 2, !tbaa !31
  %1285 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm7, i64 0, i32 2), align 8, !tbaa !114
  %1286 = load i16, ptr %1285, align 2, !tbaa !31
  %1287 = zext i16 %1286 to i32
  %1288 = sub i32 %1163, %1287
  %1289 = lshr i32 %1288, 7
  %1290 = trunc i32 %1289 to i16
  %1291 = add i16 %1286, %1290
  store i16 %1291, ptr %1285, align 2, !tbaa !31
  %1292 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm7, i64 0, i32 1), align 8, !tbaa !112
  %1293 = add nsw i32 %1292, %1169
  %1294 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm7, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1295 = sext i32 %1293 to i64
  %1296 = getelementptr inbounds i16, ptr %1294, i64 %1295
  store ptr %1296, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm7, i64 0, i32 2), align 8, !tbaa !114
  %1297 = load i16, ptr %1296, align 2, !tbaa !31
  %1298 = lshr i16 %1297, 4
  %1299 = zext i16 %1298 to i64
  %1300 = getelementptr inbounds i16, ptr %1176, i64 %1299
  %1301 = load i16, ptr %1300, align 2, !tbaa !31
  %1302 = add nsw i32 %1181, 7
  %1303 = sext i32 %1282 to i64
  %1304 = getelementptr inbounds i16, ptr %1184, i64 %1303
  store i16 %1301, ptr %1304, align 2, !tbaa !31
  %1305 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm8, i64 0, i32 2), align 8, !tbaa !114
  %1306 = load i16, ptr %1305, align 2, !tbaa !31
  %1307 = zext i16 %1306 to i32
  %1308 = sub i32 %1163, %1307
  %1309 = lshr i32 %1308, 7
  %1310 = trunc i32 %1309 to i16
  %1311 = add i16 %1306, %1310
  store i16 %1311, ptr %1305, align 2, !tbaa !31
  %1312 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm8, i64 0, i32 1), align 8, !tbaa !112
  %1313 = add nsw i32 %1312, %1169
  %1314 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm8, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1315 = sext i32 %1313 to i64
  %1316 = getelementptr inbounds i16, ptr %1314, i64 %1315
  store ptr %1316, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm8, i64 0, i32 2), align 8, !tbaa !114
  %1317 = load i16, ptr %1316, align 2, !tbaa !31
  %1318 = lshr i16 %1317, 4
  %1319 = zext i16 %1318 to i64
  %1320 = getelementptr inbounds i16, ptr %1176, i64 %1319
  %1321 = load i16, ptr %1320, align 2, !tbaa !31
  %1322 = add nsw i32 %1181, 8
  %1323 = sext i32 %1302 to i64
  %1324 = getelementptr inbounds i16, ptr %1184, i64 %1323
  store i16 %1321, ptr %1324, align 2, !tbaa !31
  %1325 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm9, i64 0, i32 2), align 8, !tbaa !114
  %1326 = load i16, ptr %1325, align 2, !tbaa !31
  %1327 = zext i16 %1326 to i32
  %1328 = sub i32 %1163, %1327
  %1329 = lshr i32 %1328, 7
  %1330 = trunc i32 %1329 to i16
  %1331 = add i16 %1326, %1330
  store i16 %1331, ptr %1325, align 2, !tbaa !31
  %1332 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm9, i64 0, i32 1), align 8, !tbaa !112
  %1333 = add nsw i32 %1332, %1169
  %1334 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm9, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1335 = sext i32 %1333 to i64
  %1336 = getelementptr inbounds i16, ptr %1334, i64 %1335
  store ptr %1336, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE4scm9, i64 0, i32 2), align 8, !tbaa !114
  %1337 = load i16, ptr %1336, align 2, !tbaa !31
  %1338 = lshr i16 %1337, 4
  %1339 = zext i16 %1338 to i64
  %1340 = getelementptr inbounds i16, ptr %1176, i64 %1339
  %1341 = load i16, ptr %1340, align 2, !tbaa !31
  %1342 = add nsw i32 %1181, 9
  %1343 = sext i32 %1322 to i64
  %1344 = getelementptr inbounds i16, ptr %1184, i64 %1343
  store i16 %1341, ptr %1344, align 2, !tbaa !31
  %1345 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE5scm10, i64 0, i32 2), align 8, !tbaa !114
  %1346 = load i16, ptr %1345, align 2, !tbaa !31
  %1347 = zext i16 %1346 to i32
  %1348 = sub i32 %1163, %1347
  %1349 = lshr i32 %1348, 7
  %1350 = trunc i32 %1349 to i16
  %1351 = add i16 %1346, %1350
  store i16 %1351, ptr %1345, align 2, !tbaa !31
  %1352 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE5scm10, i64 0, i32 1), align 8, !tbaa !112
  %1353 = add nsw i32 %1352, %1169
  %1354 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE5scm10, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1355 = sext i32 %1353 to i64
  %1356 = getelementptr inbounds i16, ptr %1354, i64 %1355
  store ptr %1356, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8bmpModelR5MixerE5scm10, i64 0, i32 2), align 8, !tbaa !114
  %1357 = load i16, ptr %1356, align 2, !tbaa !31
  %1358 = lshr i16 %1357, 4
  %1359 = zext i16 %1358 to i64
  %1360 = getelementptr inbounds i16, ptr %1176, i64 %1359
  %1361 = load i16, ptr %1360, align 2, !tbaa !31
  %1362 = add nsw i32 %1181, 10
  store i32 %1362, ptr %1180, align 8, !tbaa !64
  %1363 = sext i32 %1342 to i64
  %1364 = getelementptr inbounds i16, ptr %1184, i64 %1363
  store i16 %1361, ptr %1364, align 2, !tbaa !31
  %1365 = load i32, ptr @bpos, align 4, !tbaa !25
  %1366 = load i32, ptr @pos, align 4, !tbaa !25
  %1367 = add nsw i32 %1366, -1
  %1368 = load i32, ptr @buf, align 8, !tbaa !20
  %1369 = add nsw i32 %1368, -1
  %1370 = and i32 %1369, %1367
  %1371 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %1372 = sext i32 %1370 to i64
  %1373 = getelementptr inbounds i8, ptr %1371, i64 %1372
  %1374 = load i8, ptr %1373, align 1, !tbaa !9
  %1375 = zext i8 %1374 to i32
  %1376 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8bmpModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %1169, i32 noundef %1365, i32 noundef %1375, i32 noundef %1158)
  %1377 = load i32, ptr @_ZZ8bmpModelR5MixerE1w, align 4, !tbaa !25
  br label %1378

1378:                                             ; preds = %1155, %450
  %1379 = phi i32 [ 0, %450 ], [ %1377, %1155 ]
  ret i32 %1379

1380:                                             ; preds = %255, %253, %251, %249, %247, %245, %243, %241, %239, %237, %235
  %1381 = phi ptr [ @_ZGVZ8bmpModelR5MixerE2cm, %255 ], [ @_ZGVZ8bmpModelR5MixerE5scm10, %253 ], [ @_ZGVZ8bmpModelR5MixerE4scm9, %251 ], [ @_ZGVZ8bmpModelR5MixerE4scm8, %249 ], [ @_ZGVZ8bmpModelR5MixerE4scm7, %247 ], [ @_ZGVZ8bmpModelR5MixerE4scm6, %245 ], [ @_ZGVZ8bmpModelR5MixerE4scm5, %243 ], [ @_ZGVZ8bmpModelR5MixerE4scm4, %241 ], [ @_ZGVZ8bmpModelR5MixerE4scm3, %239 ], [ @_ZGVZ8bmpModelR5MixerE4scm2, %237 ], [ @_ZGVZ8bmpModelR5MixerE4scm1, %235 ]
  %1382 = phi { ptr, i32 } [ %256, %255 ], [ %254, %253 ], [ %252, %251 ], [ %250, %249 ], [ %248, %247 ], [ %246, %245 ], [ %244, %243 ], [ %242, %241 ], [ %240, %239 ], [ %238, %237 ], [ %236, %235 ]
  tail call void @__cxa_guard_abort(ptr nonnull %1381) #39
  resume { ptr, i32 } %1382
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_Z2i4i(i32 noundef %0) local_unnamed_addr #17 comdat {
  %2 = load i32, ptr @pos, align 4, !tbaa !25
  %3 = sub i32 %2, %0
  %4 = load i32, ptr @buf, align 8, !tbaa !20
  %5 = add nsw i32 %4, -1
  %6 = and i32 %5, %3
  %7 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %8 = sext i32 %6 to i64
  %9 = getelementptr inbounds i8, ptr %7, i64 %8
  %10 = load i8, ptr %9, align 1, !tbaa !9
  %11 = zext i8 %10 to i32
  %12 = add i32 %3, 1
  %13 = and i32 %5, %12
  %14 = sext i32 %13 to i64
  %15 = getelementptr inbounds i8, ptr %7, i64 %14
  %16 = load i8, ptr %15, align 1, !tbaa !9
  %17 = zext i8 %16 to i32
  %18 = shl nuw nsw i32 %17, 8
  %19 = or i32 %18, %11
  %20 = add i32 %3, 2
  %21 = and i32 %5, %20
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, ptr %7, i64 %22
  %24 = load i8, ptr %23, align 1, !tbaa !9
  %25 = zext i8 %24 to i32
  %26 = shl nuw nsw i32 %25, 16
  %27 = or i32 %19, %26
  %28 = add i32 %3, 3
  %29 = and i32 %5, %28
  %30 = sext i32 %29 to i64
  %31 = getelementptr inbounds i8, ptr %7, i64 %30
  %32 = load i8, ptr %31, align 1, !tbaa !9
  %33 = zext i8 %32 to i32
  %34 = shl nuw nsw i32 %33, 24
  %35 = or i32 %27, %34
  ret i32 %35
}

; Function Attrs: nofree nounwind
declare noundef i32 @printf(ptr nocapture noundef readonly, ...) local_unnamed_addr #18

; Function Attrs: mustprogress uwtable
define dso_local void @_Z9model8bitR5Mixeri(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %1) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %3 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm1 acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %11, !prof !110

5:                                                ; preds = %2
  %6 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm1) #39
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %5
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm1, i32 noundef 131072)
          to label %9 unwind label %1565

9:                                                ; preds = %8
  %10 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm1) #39
  br label %11

11:                                               ; preds = %9, %5, %2
  %12 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm2 acquire, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %20, !prof !110

14:                                               ; preds = %11
  %15 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm2) #39
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %14
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm2, i32 noundef 131072)
          to label %18 unwind label %1567

18:                                               ; preds = %17
  %19 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm2, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm2) #39
  br label %20

20:                                               ; preds = %18, %14, %11
  %21 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm3 acquire, align 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %29, !prof !110

23:                                               ; preds = %20
  %24 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm3) #39
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %23
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm3, i32 noundef 131072)
          to label %27 unwind label %1569

27:                                               ; preds = %26
  %28 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm3, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm3) #39
  br label %29

29:                                               ; preds = %27, %23, %20
  %30 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm4 acquire, align 8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %38, !prof !110

32:                                               ; preds = %29
  %33 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm4) #39
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %32
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm4, i32 noundef 131072)
          to label %36 unwind label %1571

36:                                               ; preds = %35
  %37 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm4, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm4) #39
  br label %38

38:                                               ; preds = %36, %32, %29
  %39 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm5 acquire, align 8
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %47, !prof !110

41:                                               ; preds = %38
  %42 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm5) #39
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm5, i32 noundef 131072)
          to label %45 unwind label %1573

45:                                               ; preds = %44
  %46 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm5, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm5) #39
  br label %47

47:                                               ; preds = %45, %41, %38
  %48 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm6 acquire, align 8
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %50, label %56, !prof !110

50:                                               ; preds = %47
  %51 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm6) #39
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm6, i32 noundef 262144)
          to label %54 unwind label %1575

54:                                               ; preds = %53
  %55 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm6, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm6) #39
  br label %56

56:                                               ; preds = %54, %50, %47
  %57 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE4scm7 acquire, align 8
  %58 = icmp eq i8 %57, 0
  br i1 %58, label %59, label %65, !prof !110

59:                                               ; preds = %56
  %60 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm7) #39
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %65, label %62

62:                                               ; preds = %59
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ9model8bitR5MixeriE4scm7, i32 noundef 131072)
          to label %63 unwind label %1577

63:                                               ; preds = %62
  %64 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE4scm7, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE4scm7) #39
  br label %65

65:                                               ; preds = %63, %59, %56
  %66 = load atomic i8, ptr @_ZGVZ9model8bitR5MixeriE2cm acquire, align 8
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %68, label %76, !prof !110

68:                                               ; preds = %65
  %69 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9model8bitR5MixeriE2cm) #39
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %76, label %71

71:                                               ; preds = %68
  %72 = load i32, ptr @level, align 4, !tbaa !25
  %73 = shl i32 262144, %72
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ9model8bitR5MixeriE2cm, i32 noundef %73, i32 noundef 32)
          to label %74 unwind label %1579

74:                                               ; preds = %71
  %75 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ9model8bitR5MixeriE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9model8bitR5MixeriE2cm) #39
  br label %76

76:                                               ; preds = %74, %68, %65
  %77 = load i32, ptr @bpos, align 4, !tbaa !25
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %84, label %79

79:                                               ; preds = %76
  %80 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %81 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %82 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm3, i64 0, i32 1), align 8, !tbaa !112
  %83 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm4, i64 0, i32 1), align 8, !tbaa !112
  br label %1581

84:                                               ; preds = %76
  %85 = load i32, ptr @pos, align 4, !tbaa !25
  %86 = add nsw i32 %85, -1
  %87 = load i32, ptr @buf, align 8, !tbaa !20
  %88 = add nsw i32 %87, -1
  %89 = and i32 %88, %86
  %90 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %91 = sext i32 %89 to i64
  %92 = getelementptr inbounds i8, ptr %90, i64 %91
  %93 = load i8, ptr %92, align 1, !tbaa !9
  %94 = zext i8 %93 to i32
  %95 = add nsw i32 %1, -1
  %96 = sub nsw i32 %85, %95
  %97 = and i32 %88, %96
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i8, ptr %90, i64 %98
  %100 = load i8, ptr %99, align 1, !tbaa !9
  %101 = zext i8 %100 to i32
  %102 = add nuw nsw i32 %101, %94
  %103 = sub nsw i32 %85, %1
  %104 = and i32 %88, %103
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8, ptr %90, i64 %105
  %107 = load i8, ptr %106, align 1, !tbaa !9
  %108 = zext i8 %107 to i32
  %109 = add nuw nsw i32 %102, %108
  %110 = add nsw i32 %1, 1
  %111 = sub nsw i32 %85, %110
  %112 = and i32 %88, %111
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, ptr %90, i64 %113
  %115 = load i8, ptr %114, align 1, !tbaa !9
  %116 = zext i8 %115 to i32
  %117 = add nuw nsw i32 %109, %116
  %118 = mul nuw nsw i32 %94, %94
  %119 = mul nuw nsw i32 %101, %101
  %120 = add nuw nsw i32 %119, %118
  %121 = mul nuw nsw i32 %108, %108
  %122 = add nuw nsw i32 %120, %121
  %123 = mul nuw nsw i32 %116, %116
  %124 = add nuw nsw i32 %122, %123
  %125 = mul nuw nsw i32 %117, %117
  %126 = lshr i32 %125, 2
  %127 = sub nsw i32 %124, %126
  %128 = lshr i32 %127, 2
  %129 = lshr i32 %117, 3
  %130 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %131 = and i32 %128, 65535
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds i8, ptr %130, i64 %132
  %134 = load i8, ptr %133, align 1, !tbaa !9
  %135 = zext i8 %134 to i32
  %136 = lshr i8 %93, 2
  %137 = zext i8 %136 to i32
  %138 = lshr i8 %107, 2
  %139 = zext i8 %138 to i32
  %140 = mul nuw nsw i32 %137, 30005491
  %141 = mul nuw i32 %139, 50004239
  %142 = add nuw nsw i32 %140, 19995673
  %143 = add i32 %142, %141
  %144 = lshr i32 %143, 9
  %145 = lshr i32 %137, 3
  %146 = lshr i32 %139, 4
  %147 = xor i32 %146, %145
  %148 = or i32 %147, 67108864
  %149 = xor i32 %144, %148
  %150 = xor i32 %149, %143
  %151 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %152 = add nsw i32 %151, 1
  store i32 %152, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %153 = mul i32 %150, 987654323
  %154 = add i32 %153, %151
  %155 = tail call i32 @llvm.fshl.i32(i32 %154, i32 %154, i32 16)
  %156 = mul i32 %155, 123456791
  %157 = add i32 %156, %151
  %158 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %159 = sext i32 %151 to i64
  %160 = getelementptr inbounds i32, ptr %158, i64 %159
  store i32 %157, ptr %160, align 4, !tbaa !25
  %161 = load i32, ptr @pos, align 4, !tbaa !25
  %162 = add nsw i32 %161, -1
  %163 = load i32, ptr @buf, align 8, !tbaa !20
  %164 = add nsw i32 %163, -1
  %165 = and i32 %164, %162
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i8, ptr %90, i64 %166
  %168 = load i8, ptr %167, align 1, !tbaa !9
  %169 = lshr i8 %168, 2
  %170 = zext i8 %169 to i32
  %171 = add nsw i32 %161, -2
  %172 = and i32 %164, %171
  %173 = sext i32 %172 to i64
  %174 = getelementptr inbounds i8, ptr %90, i64 %173
  %175 = load i8, ptr %174, align 1, !tbaa !9
  %176 = lshr i8 %175, 2
  %177 = zext i8 %176 to i32
  %178 = mul nuw nsw i32 %170, 30005491
  %179 = mul nuw i32 %177, 50004239
  %180 = add nuw nsw i32 %178, 219998652
  %181 = add i32 %180, %179
  %182 = lshr i32 %181, 9
  %183 = lshr i32 %170, 3
  %184 = lshr i32 %177, 4
  %185 = xor i32 %184, %183
  %186 = or i32 %185, 67108864
  %187 = xor i32 %182, %186
  %188 = xor i32 %187, %181
  %189 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %190 = add nsw i32 %189, 1
  store i32 %190, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %191 = mul i32 %188, 987654323
  %192 = add i32 %191, %189
  %193 = tail call i32 @llvm.fshl.i32(i32 %192, i32 %192, i32 16)
  %194 = mul i32 %193, 123456791
  %195 = add i32 %194, %189
  %196 = sext i32 %189 to i64
  %197 = getelementptr inbounds i32, ptr %158, i64 %196
  store i32 %195, ptr %197, align 4, !tbaa !25
  %198 = load i32, ptr @pos, align 4, !tbaa !25
  %199 = sub nsw i32 %198, %1
  %200 = load i32, ptr @buf, align 8, !tbaa !20
  %201 = add nsw i32 %200, -1
  %202 = and i32 %201, %199
  %203 = sext i32 %202 to i64
  %204 = getelementptr inbounds i8, ptr %90, i64 %203
  %205 = load i8, ptr %204, align 1, !tbaa !9
  %206 = lshr i8 %205, 2
  %207 = zext i8 %206 to i32
  %208 = shl nsw i32 %1, 1
  %209 = sub nsw i32 %198, %208
  %210 = and i32 %201, %209
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i8, ptr %90, i64 %211
  %213 = load i8, ptr %212, align 1, !tbaa !9
  %214 = lshr i8 %213, 2
  %215 = zext i8 %214 to i32
  %216 = mul nuw nsw i32 %207, 30005491
  %217 = mul nuw i32 %215, 50004239
  %218 = add nuw i32 %216, 420001631
  %219 = add i32 %218, %217
  %220 = lshr i32 %219, 9
  %221 = lshr i32 %207, 3
  %222 = lshr i32 %215, 4
  %223 = xor i32 %222, %221
  %224 = or i32 %223, 67108864
  %225 = xor i32 %220, %224
  %226 = xor i32 %225, %219
  %227 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %228 = add nsw i32 %227, 1
  store i32 %228, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %229 = mul i32 %226, 987654323
  %230 = add i32 %229, %227
  %231 = tail call i32 @llvm.fshl.i32(i32 %230, i32 %230, i32 16)
  %232 = mul i32 %231, 123456791
  %233 = add i32 %232, %227
  %234 = sext i32 %227 to i64
  %235 = getelementptr inbounds i32, ptr %158, i64 %234
  store i32 %233, ptr %235, align 4, !tbaa !25
  %236 = load i32, ptr @pos, align 4, !tbaa !25
  %237 = add nsw i32 %236, -1
  %238 = load i32, ptr @buf, align 8, !tbaa !20
  %239 = add nsw i32 %238, -1
  %240 = and i32 %239, %237
  %241 = sext i32 %240 to i64
  %242 = getelementptr inbounds i8, ptr %90, i64 %241
  %243 = load i8, ptr %242, align 1, !tbaa !9
  %244 = lshr i8 %243, 2
  %245 = zext i8 %244 to i32
  %246 = sub nsw i32 %236, %95
  %247 = and i32 %239, %246
  %248 = sext i32 %247 to i64
  %249 = getelementptr inbounds i8, ptr %90, i64 %248
  %250 = load i8, ptr %249, align 1, !tbaa !9
  %251 = lshr i8 %250, 2
  %252 = zext i8 %251 to i32
  %253 = mul nuw nsw i32 %245, 30005491
  %254 = mul nuw i32 %252, 50004239
  %255 = add nuw i32 %253, 620004610
  %256 = add i32 %255, %254
  %257 = lshr i32 %256, 9
  %258 = lshr i32 %245, 3
  %259 = lshr i32 %252, 4
  %260 = xor i32 %258, %259
  %261 = xor i32 %260, %257
  %262 = xor i32 %261, %256
  %263 = xor i32 %262, 67108865
  %264 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %265 = add nsw i32 %264, 1
  store i32 %265, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %266 = mul i32 %263, 987654323
  %267 = add i32 %266, %264
  %268 = tail call i32 @llvm.fshl.i32(i32 %267, i32 %267, i32 16)
  %269 = mul i32 %268, 123456791
  %270 = add i32 %269, %264
  %271 = sext i32 %264 to i64
  %272 = getelementptr inbounds i32, ptr %158, i64 %271
  store i32 %270, ptr %272, align 4, !tbaa !25
  %273 = load i32, ptr @pos, align 4, !tbaa !25
  %274 = sub nsw i32 %273, %1
  %275 = load i32, ptr @buf, align 8, !tbaa !20
  %276 = add nsw i32 %275, -1
  %277 = and i32 %276, %274
  %278 = sext i32 %277 to i64
  %279 = getelementptr inbounds i8, ptr %90, i64 %278
  %280 = load i8, ptr %279, align 1, !tbaa !9
  %281 = lshr i8 %280, 2
  %282 = zext i8 %281 to i32
  %283 = sub nsw i32 %273, %110
  %284 = and i32 %276, %283
  %285 = sext i32 %284 to i64
  %286 = getelementptr inbounds i8, ptr %90, i64 %285
  %287 = load i8, ptr %286, align 1, !tbaa !9
  %288 = lshr i8 %287, 2
  %289 = zext i8 %288 to i32
  %290 = mul nuw nsw i32 %282, 30005491
  %291 = mul nuw i32 %289, 50004239
  %292 = add nuw i32 %290, 820007589
  %293 = add i32 %292, %291
  %294 = lshr i32 %293, 9
  %295 = lshr i32 %282, 3
  %296 = lshr i32 %289, 4
  %297 = xor i32 %295, %296
  %298 = xor i32 %297, %294
  %299 = xor i32 %298, %293
  %300 = xor i32 %299, 67108865
  %301 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %302 = add nsw i32 %301, 1
  store i32 %302, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %303 = mul i32 %300, 987654323
  %304 = add i32 %303, %301
  %305 = tail call i32 @llvm.fshl.i32(i32 %304, i32 %304, i32 16)
  %306 = mul i32 %305, 123456791
  %307 = add i32 %306, %301
  %308 = sext i32 %301 to i64
  %309 = getelementptr inbounds i32, ptr %158, i64 %308
  store i32 %307, ptr %309, align 4, !tbaa !25
  %310 = load i32, ptr @pos, align 4, !tbaa !25
  %311 = sub nsw i32 %310, %110
  %312 = load i32, ptr @buf, align 8, !tbaa !20
  %313 = add nsw i32 %312, -1
  %314 = and i32 %313, %311
  %315 = sext i32 %314 to i64
  %316 = getelementptr inbounds i8, ptr %90, i64 %315
  %317 = load i8, ptr %316, align 1, !tbaa !9
  %318 = lshr i8 %317, 2
  %319 = zext i8 %318 to i32
  %320 = add nsw i32 %1, 2
  %321 = sub nsw i32 %310, %320
  %322 = and i32 %313, %321
  %323 = sext i32 %322 to i64
  %324 = getelementptr inbounds i8, ptr %90, i64 %323
  %325 = load i8, ptr %324, align 1, !tbaa !9
  %326 = lshr i8 %325, 2
  %327 = zext i8 %326 to i32
  %328 = mul nuw nsw i32 %319, 30005491
  %329 = mul nuw i32 %327, 50004239
  %330 = add nuw i32 %328, 1020010568
  %331 = add i32 %330, %329
  %332 = lshr i32 %331, 9
  %333 = lshr i32 %319, 3
  %334 = lshr i32 %327, 4
  %335 = xor i32 %333, %334
  %336 = xor i32 %335, %332
  %337 = xor i32 %336, %331
  %338 = xor i32 %337, 67108865
  %339 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %340 = add nsw i32 %339, 1
  store i32 %340, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %341 = mul i32 %338, 987654323
  %342 = add i32 %341, %339
  %343 = tail call i32 @llvm.fshl.i32(i32 %342, i32 %342, i32 16)
  %344 = mul i32 %343, 123456791
  %345 = add i32 %344, %339
  %346 = sext i32 %339 to i64
  %347 = getelementptr inbounds i32, ptr %158, i64 %346
  store i32 %345, ptr %347, align 4, !tbaa !25
  %348 = load i32, ptr @pos, align 4, !tbaa !25
  %349 = sub nsw i32 %348, %110
  %350 = load i32, ptr @buf, align 8, !tbaa !20
  %351 = add nsw i32 %350, -1
  %352 = and i32 %351, %349
  %353 = sext i32 %352 to i64
  %354 = getelementptr inbounds i8, ptr %90, i64 %353
  %355 = load i8, ptr %354, align 1, !tbaa !9
  %356 = lshr i8 %355, 2
  %357 = zext i8 %356 to i32
  %358 = add nsw i32 %208, 2
  %359 = sub nsw i32 %348, %358
  %360 = and i32 %351, %359
  %361 = sext i32 %360 to i64
  %362 = getelementptr inbounds i8, ptr %90, i64 %361
  %363 = load i8, ptr %362, align 1, !tbaa !9
  %364 = lshr i8 %363, 2
  %365 = zext i8 %364 to i32
  %366 = mul nuw nsw i32 %357, 30005491
  %367 = mul nuw i32 %365, 50004239
  %368 = add nuw i32 %366, 1220013547
  %369 = add i32 %368, %367
  %370 = lshr i32 %369, 9
  %371 = lshr i32 %357, 3
  %372 = lshr i32 %365, 4
  %373 = xor i32 %371, %372
  %374 = xor i32 %373, %370
  %375 = xor i32 %374, %369
  %376 = xor i32 %375, 67108865
  %377 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %378 = add nsw i32 %377, 1
  store i32 %378, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %379 = mul i32 %376, 987654323
  %380 = add i32 %379, %377
  %381 = tail call i32 @llvm.fshl.i32(i32 %380, i32 %380, i32 16)
  %382 = mul i32 %381, 123456791
  %383 = add i32 %382, %377
  %384 = sext i32 %377 to i64
  %385 = getelementptr inbounds i32, ptr %158, i64 %384
  store i32 %383, ptr %385, align 4, !tbaa !25
  %386 = load i32, ptr @pos, align 4, !tbaa !25
  %387 = sub nsw i32 %386, %95
  %388 = load i32, ptr @buf, align 8, !tbaa !20
  %389 = add nsw i32 %388, -1
  %390 = and i32 %389, %387
  %391 = sext i32 %390 to i64
  %392 = getelementptr inbounds i8, ptr %90, i64 %391
  %393 = load i8, ptr %392, align 1, !tbaa !9
  %394 = lshr i8 %393, 2
  %395 = zext i8 %394 to i32
  %396 = add nsw i32 %208, -2
  %397 = sub nsw i32 %386, %396
  %398 = and i32 %389, %397
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds i8, ptr %90, i64 %399
  %401 = load i8, ptr %400, align 1, !tbaa !9
  %402 = lshr i8 %401, 2
  %403 = zext i8 %402 to i32
  %404 = mul nuw nsw i32 %395, 30005491
  %405 = mul nuw i32 %403, 50004239
  %406 = add nuw i32 %404, 1420016526
  %407 = add i32 %406, %405
  %408 = lshr i32 %407, 9
  %409 = lshr i32 %395, 3
  %410 = lshr i32 %403, 4
  %411 = xor i32 %409, %410
  %412 = xor i32 %411, %408
  %413 = xor i32 %412, %407
  %414 = xor i32 %413, 67108866
  %415 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %416 = add nsw i32 %415, 1
  store i32 %416, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %417 = mul i32 %414, 987654323
  %418 = add i32 %417, %415
  %419 = tail call i32 @llvm.fshl.i32(i32 %418, i32 %418, i32 16)
  %420 = mul i32 %419, 123456791
  %421 = add i32 %420, %415
  %422 = sext i32 %415 to i64
  %423 = getelementptr inbounds i32, ptr %158, i64 %422
  store i32 %421, ptr %423, align 4, !tbaa !25
  %424 = load i32, ptr @pos, align 4, !tbaa !25
  %425 = add nsw i32 %424, -1
  %426 = load i32, ptr @buf, align 8, !tbaa !20
  %427 = add nsw i32 %426, -1
  %428 = and i32 %427, %425
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds i8, ptr %90, i64 %429
  %431 = load i8, ptr %430, align 1, !tbaa !9
  %432 = zext i8 %431 to i32
  %433 = sub nsw i32 %424, %1
  %434 = and i32 %427, %433
  %435 = sext i32 %434 to i64
  %436 = getelementptr inbounds i8, ptr %90, i64 %435
  %437 = load i8, ptr %436, align 1, !tbaa !9
  %438 = zext i8 %437 to i32
  %439 = add nuw nsw i32 %438, %432
  %440 = lshr i32 %439, 1
  %441 = mul i32 %440, 30005491
  %442 = add i32 %441, 1570015266
  %443 = lshr i32 %442, 9
  %444 = lshr i32 %439, 4
  %445 = xor i32 %444, %443
  %446 = xor i32 %445, %442
  %447 = xor i32 %446, 201326589
  %448 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %449 = add nsw i32 %448, 1
  store i32 %449, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %450 = mul i32 %447, 987654323
  %451 = add i32 %450, %448
  %452 = tail call i32 @llvm.fshl.i32(i32 %451, i32 %451, i32 16)
  %453 = mul i32 %452, 123456791
  %454 = add i32 %453, %448
  %455 = sext i32 %448 to i64
  %456 = getelementptr inbounds i32, ptr %158, i64 %455
  store i32 %454, ptr %456, align 4, !tbaa !25
  %457 = load i32, ptr @pos, align 4, !tbaa !25
  %458 = add nsw i32 %457, -1
  %459 = load i32, ptr @buf, align 8, !tbaa !20
  %460 = add nsw i32 %459, -1
  %461 = and i32 %460, %458
  %462 = sext i32 %461 to i64
  %463 = getelementptr inbounds i8, ptr %90, i64 %462
  %464 = load i8, ptr %463, align 1, !tbaa !9
  %465 = zext i8 %464 to i32
  %466 = add nsw i32 %457, -2
  %467 = and i32 %460, %466
  %468 = sext i32 %467 to i64
  %469 = getelementptr inbounds i8, ptr %90, i64 %468
  %470 = load i8, ptr %469, align 1, !tbaa !9
  %471 = zext i8 %470 to i32
  %472 = add nuw nsw i32 %471, %465
  %473 = lshr i32 %472, 1
  %474 = mul i32 %473, 30005491
  %475 = add i32 %474, 1770018245
  %476 = lshr i32 %475, 9
  %477 = lshr i32 %472, 4
  %478 = xor i32 %477, %476
  %479 = xor i32 %478, %475
  %480 = xor i32 %479, 201326589
  %481 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %482 = add nsw i32 %481, 1
  store i32 %482, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %483 = mul i32 %480, 987654323
  %484 = add i32 %483, %481
  %485 = tail call i32 @llvm.fshl.i32(i32 %484, i32 %484, i32 16)
  %486 = mul i32 %485, 123456791
  %487 = add i32 %486, %481
  %488 = sext i32 %481 to i64
  %489 = getelementptr inbounds i32, ptr %158, i64 %488
  store i32 %487, ptr %489, align 4, !tbaa !25
  %490 = load i32, ptr @pos, align 4, !tbaa !25
  %491 = sub nsw i32 %490, %1
  %492 = load i32, ptr @buf, align 8, !tbaa !20
  %493 = add nsw i32 %492, -1
  %494 = and i32 %493, %491
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds i8, ptr %90, i64 %495
  %497 = load i8, ptr %496, align 1, !tbaa !9
  %498 = zext i8 %497 to i32
  %499 = sub nsw i32 %490, %208
  %500 = and i32 %493, %499
  %501 = sext i32 %500 to i64
  %502 = getelementptr inbounds i8, ptr %90, i64 %501
  %503 = load i8, ptr %502, align 1, !tbaa !9
  %504 = zext i8 %503 to i32
  %505 = add nuw nsw i32 %504, %498
  %506 = lshr i32 %505, 1
  %507 = mul i32 %506, 30005491
  %508 = add i32 %507, 1970021224
  %509 = lshr i32 %508, 9
  %510 = lshr i32 %505, 4
  %511 = xor i32 %510, %509
  %512 = xor i32 %511, %508
  %513 = xor i32 %512, 201326589
  %514 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %515 = add nsw i32 %514, 1
  store i32 %515, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %516 = mul i32 %513, 987654323
  %517 = add i32 %516, %514
  %518 = tail call i32 @llvm.fshl.i32(i32 %517, i32 %517, i32 16)
  %519 = mul i32 %518, 123456791
  %520 = add i32 %519, %514
  %521 = sext i32 %514 to i64
  %522 = getelementptr inbounds i32, ptr %158, i64 %521
  store i32 %520, ptr %522, align 4, !tbaa !25
  %523 = load i32, ptr @pos, align 4, !tbaa !25
  %524 = add nsw i32 %523, -1
  %525 = load i32, ptr @buf, align 8, !tbaa !20
  %526 = add nsw i32 %525, -1
  %527 = and i32 %526, %524
  %528 = sext i32 %527 to i64
  %529 = getelementptr inbounds i8, ptr %90, i64 %528
  %530 = load i8, ptr %529, align 1, !tbaa !9
  %531 = zext i8 %530 to i32
  %532 = sub nsw i32 %523, %95
  %533 = and i32 %526, %532
  %534 = sext i32 %533 to i64
  %535 = getelementptr inbounds i8, ptr %90, i64 %534
  %536 = load i8, ptr %535, align 1, !tbaa !9
  %537 = zext i8 %536 to i32
  %538 = add nuw nsw i32 %537, %531
  %539 = lshr i32 %538, 1
  %540 = mul i32 %539, 30005491
  %541 = add i32 %540, -2124943093
  %542 = lshr i32 %541, 9
  %543 = lshr i32 %538, 4
  %544 = xor i32 %543, %542
  %545 = xor i32 %544, %541
  %546 = xor i32 %545, 201326588
  %547 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %548 = add nsw i32 %547, 1
  store i32 %548, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %549 = mul i32 %546, 987654323
  %550 = add i32 %549, %547
  %551 = tail call i32 @llvm.fshl.i32(i32 %550, i32 %550, i32 16)
  %552 = mul i32 %551, 123456791
  %553 = add i32 %552, %547
  %554 = sext i32 %547 to i64
  %555 = getelementptr inbounds i32, ptr %158, i64 %554
  store i32 %553, ptr %555, align 4, !tbaa !25
  %556 = load i32, ptr @pos, align 4, !tbaa !25
  %557 = sub nsw i32 %556, %1
  %558 = load i32, ptr @buf, align 8, !tbaa !20
  %559 = add nsw i32 %558, -1
  %560 = and i32 %559, %557
  %561 = sext i32 %560 to i64
  %562 = getelementptr inbounds i8, ptr %90, i64 %561
  %563 = load i8, ptr %562, align 1, !tbaa !9
  %564 = zext i8 %563 to i32
  %565 = sub nsw i32 %556, %110
  %566 = and i32 %559, %565
  %567 = sext i32 %566 to i64
  %568 = getelementptr inbounds i8, ptr %90, i64 %567
  %569 = load i8, ptr %568, align 1, !tbaa !9
  %570 = zext i8 %569 to i32
  %571 = add nuw nsw i32 %570, %564
  %572 = lshr i32 %571, 1
  %573 = mul i32 %572, 30005491
  %574 = add i32 %573, -1924940114
  %575 = lshr i32 %574, 9
  %576 = lshr i32 %571, 4
  %577 = xor i32 %576, %575
  %578 = xor i32 %577, %574
  %579 = xor i32 %578, 201326588
  %580 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %581 = add nsw i32 %580, 1
  store i32 %581, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %582 = mul i32 %579, 987654323
  %583 = add i32 %582, %580
  %584 = tail call i32 @llvm.fshl.i32(i32 %583, i32 %583, i32 16)
  %585 = mul i32 %584, 123456791
  %586 = add i32 %585, %580
  %587 = sext i32 %580 to i64
  %588 = getelementptr inbounds i32, ptr %158, i64 %587
  store i32 %586, ptr %588, align 4, !tbaa !25
  %589 = load i32, ptr @pos, align 4, !tbaa !25
  %590 = sub nsw i32 %589, %110
  %591 = load i32, ptr @buf, align 8, !tbaa !20
  %592 = add nsw i32 %591, -1
  %593 = and i32 %592, %590
  %594 = sext i32 %593 to i64
  %595 = getelementptr inbounds i8, ptr %90, i64 %594
  %596 = load i8, ptr %595, align 1, !tbaa !9
  %597 = zext i8 %596 to i32
  %598 = sub nsw i32 %589, %320
  %599 = and i32 %592, %598
  %600 = sext i32 %599 to i64
  %601 = getelementptr inbounds i8, ptr %90, i64 %600
  %602 = load i8, ptr %601, align 1, !tbaa !9
  %603 = zext i8 %602 to i32
  %604 = add nuw nsw i32 %603, %597
  %605 = lshr i32 %604, 1
  %606 = mul i32 %605, 30005491
  %607 = add i32 %606, -1724937135
  %608 = lshr i32 %607, 9
  %609 = lshr i32 %604, 4
  %610 = xor i32 %609, %608
  %611 = xor i32 %610, %607
  %612 = xor i32 %611, 201326588
  %613 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %614 = add nsw i32 %613, 1
  store i32 %614, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %615 = mul i32 %612, 987654323
  %616 = add i32 %615, %613
  %617 = tail call i32 @llvm.fshl.i32(i32 %616, i32 %616, i32 16)
  %618 = mul i32 %617, 123456791
  %619 = add i32 %618, %613
  %620 = sext i32 %613 to i64
  %621 = getelementptr inbounds i32, ptr %158, i64 %620
  store i32 %619, ptr %621, align 4, !tbaa !25
  %622 = load i32, ptr @pos, align 4, !tbaa !25
  %623 = sub nsw i32 %622, %110
  %624 = load i32, ptr @buf, align 8, !tbaa !20
  %625 = add nsw i32 %624, -1
  %626 = and i32 %625, %623
  %627 = sext i32 %626 to i64
  %628 = getelementptr inbounds i8, ptr %90, i64 %627
  %629 = load i8, ptr %628, align 1, !tbaa !9
  %630 = zext i8 %629 to i32
  %631 = sub nsw i32 %622, %358
  %632 = and i32 %625, %631
  %633 = sext i32 %632 to i64
  %634 = getelementptr inbounds i8, ptr %90, i64 %633
  %635 = load i8, ptr %634, align 1, !tbaa !9
  %636 = zext i8 %635 to i32
  %637 = add nuw nsw i32 %636, %630
  %638 = lshr i32 %637, 1
  %639 = mul i32 %638, 30005491
  %640 = add i32 %639, -1524934156
  %641 = lshr i32 %640, 9
  %642 = lshr i32 %637, 4
  %643 = xor i32 %642, %641
  %644 = xor i32 %643, %640
  %645 = xor i32 %644, 201326588
  %646 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %647 = add nsw i32 %646, 1
  store i32 %647, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %648 = mul i32 %645, 987654323
  %649 = add i32 %648, %646
  %650 = tail call i32 @llvm.fshl.i32(i32 %649, i32 %649, i32 16)
  %651 = mul i32 %650, 123456791
  %652 = add i32 %651, %646
  %653 = sext i32 %646 to i64
  %654 = getelementptr inbounds i32, ptr %158, i64 %653
  store i32 %652, ptr %654, align 4, !tbaa !25
  %655 = load i32, ptr @pos, align 4, !tbaa !25
  %656 = sub nsw i32 %655, %95
  %657 = load i32, ptr @buf, align 8, !tbaa !20
  %658 = add nsw i32 %657, -1
  %659 = and i32 %658, %656
  %660 = sext i32 %659 to i64
  %661 = getelementptr inbounds i8, ptr %90, i64 %660
  %662 = load i8, ptr %661, align 1, !tbaa !9
  %663 = zext i8 %662 to i32
  %664 = sub nsw i32 %655, %396
  %665 = and i32 %658, %664
  %666 = sext i32 %665 to i64
  %667 = getelementptr inbounds i8, ptr %90, i64 %666
  %668 = load i8, ptr %667, align 1, !tbaa !9
  %669 = zext i8 %668 to i32
  %670 = add nuw nsw i32 %669, %663
  %671 = lshr i32 %670, 1
  %672 = mul i32 %671, 30005491
  %673 = add i32 %672, -1324931177
  %674 = lshr i32 %673, 9
  %675 = lshr i32 %670, 4
  %676 = xor i32 %675, %674
  %677 = xor i32 %676, %673
  %678 = xor i32 %677, 201326587
  %679 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %680 = add nsw i32 %679, 1
  store i32 %680, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %681 = mul i32 %678, 987654323
  %682 = add i32 %681, %679
  %683 = tail call i32 @llvm.fshl.i32(i32 %682, i32 %682, i32 16)
  %684 = mul i32 %683, 123456791
  %685 = add i32 %684, %679
  %686 = sext i32 %679 to i64
  %687 = getelementptr inbounds i32, ptr %158, i64 %686
  store i32 %685, ptr %687, align 4, !tbaa !25
  %688 = load i32, ptr @pos, align 4, !tbaa !25
  %689 = sub nsw i32 %688, %1
  %690 = load i32, ptr @buf, align 8, !tbaa !20
  %691 = add nsw i32 %690, -1
  %692 = and i32 %691, %689
  %693 = sext i32 %692 to i64
  %694 = getelementptr inbounds i8, ptr %90, i64 %693
  %695 = load i8, ptr %694, align 1, !tbaa !9
  %696 = lshr i8 %695, 2
  %697 = zext i8 %696 to i32
  %698 = add nsw i32 %688, -1
  %699 = and i32 %691, %698
  %700 = sext i32 %699 to i64
  %701 = getelementptr inbounds i8, ptr %90, i64 %700
  %702 = load i8, ptr %701, align 1, !tbaa !9
  %703 = lshr i8 %702, 2
  %704 = zext i8 %703 to i32
  %705 = sub nsw i32 %688, %95
  %706 = and i32 %691, %705
  %707 = sext i32 %706 to i64
  %708 = getelementptr inbounds i8, ptr %90, i64 %707
  %709 = load i8, ptr %708, align 1, !tbaa !9
  %710 = lshr i8 %709, 2
  %711 = zext i8 %710 to i32
  %712 = mul nuw nsw i32 %697, 30005491
  %713 = mul nuw i32 %704, 50004239
  %714 = mul i32 %711, 70004807
  %715 = add nsw i32 %712, -1004919152
  %716 = add i32 %715, %713
  %717 = add i32 %716, %714
  %718 = lshr i32 %717, 9
  %719 = lshr i32 %697, 3
  %720 = lshr i32 %704, 4
  %721 = lshr i32 %711, 5
  %722 = xor i32 %719, %720
  %723 = xor i32 %722, %721
  %724 = xor i32 %723, %718
  %725 = xor i32 %724, %717
  %726 = xor i32 %725, 67108859
  %727 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %728 = add nsw i32 %727, 1
  store i32 %728, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %729 = mul i32 %726, 987654323
  %730 = add i32 %729, %727
  %731 = tail call i32 @llvm.fshl.i32(i32 %730, i32 %730, i32 16)
  %732 = mul i32 %731, 123456791
  %733 = add i32 %732, %727
  %734 = sext i32 %727 to i64
  %735 = getelementptr inbounds i32, ptr %158, i64 %734
  store i32 %733, ptr %735, align 4, !tbaa !25
  %736 = load i32, ptr @pos, align 4, !tbaa !25
  %737 = sub nsw i32 %736, %95
  %738 = load i32, ptr @buf, align 8, !tbaa !20
  %739 = add nsw i32 %738, -1
  %740 = and i32 %739, %737
  %741 = sext i32 %740 to i64
  %742 = getelementptr inbounds i8, ptr %90, i64 %741
  %743 = load i8, ptr %742, align 1, !tbaa !9
  %744 = lshr i8 %743, 2
  %745 = zext i8 %744 to i32
  %746 = sub nsw i32 %736, %1
  %747 = and i32 %739, %746
  %748 = sext i32 %747 to i64
  %749 = getelementptr inbounds i8, ptr %90, i64 %748
  %750 = load i8, ptr %749, align 1, !tbaa !9
  %751 = lshr i8 %750, 2
  %752 = zext i8 %751 to i32
  %753 = sub nsw i32 %736, %110
  %754 = and i32 %739, %753
  %755 = sext i32 %754 to i64
  %756 = getelementptr inbounds i8, ptr %90, i64 %755
  %757 = load i8, ptr %756, align 1, !tbaa !9
  %758 = lshr i8 %757, 2
  %759 = zext i8 %758 to i32
  %760 = mul nuw nsw i32 %745, 30005491
  %761 = mul nuw i32 %752, 50004239
  %762 = mul i32 %759, 70004807
  %763 = add nsw i32 %760, -804916173
  %764 = add i32 %763, %761
  %765 = add i32 %764, %762
  %766 = lshr i32 %765, 9
  %767 = lshr i32 %745, 3
  %768 = lshr i32 %752, 4
  %769 = lshr i32 %759, 5
  %770 = xor i32 %767, %768
  %771 = xor i32 %770, %769
  %772 = xor i32 %771, %766
  %773 = xor i32 %772, %765
  %774 = xor i32 %773, 67108859
  %775 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %776 = add nsw i32 %775, 1
  store i32 %776, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %777 = mul i32 %774, 987654323
  %778 = add i32 %777, %775
  %779 = tail call i32 @llvm.fshl.i32(i32 %778, i32 %778, i32 16)
  %780 = mul i32 %779, 123456791
  %781 = add i32 %780, %775
  %782 = sext i32 %775 to i64
  %783 = getelementptr inbounds i32, ptr %158, i64 %782
  store i32 %781, ptr %783, align 4, !tbaa !25
  %784 = load i32, ptr @pos, align 4, !tbaa !25
  %785 = add nsw i32 %784, -1
  %786 = load i32, ptr @buf, align 8, !tbaa !20
  %787 = add nsw i32 %786, -1
  %788 = and i32 %787, %785
  %789 = sext i32 %788 to i64
  %790 = getelementptr inbounds i8, ptr %90, i64 %789
  %791 = load i8, ptr %790, align 1, !tbaa !9
  %792 = lshr i8 %791, 2
  %793 = zext i8 %792 to i32
  %794 = sub nsw i32 %784, %95
  %795 = and i32 %787, %794
  %796 = sext i32 %795 to i64
  %797 = getelementptr inbounds i8, ptr %90, i64 %796
  %798 = load i8, ptr %797, align 1, !tbaa !9
  %799 = lshr i8 %798, 2
  %800 = zext i8 %799 to i32
  %801 = sub i32 %784, %208
  %802 = add i32 %801, 1
  %803 = and i32 %787, %802
  %804 = sext i32 %803 to i64
  %805 = getelementptr inbounds i8, ptr %90, i64 %804
  %806 = load i8, ptr %805, align 1, !tbaa !9
  %807 = lshr i8 %806, 2
  %808 = zext i8 %807 to i32
  %809 = mul nuw nsw i32 %793, 30005491
  %810 = mul nuw i32 %800, 50004239
  %811 = mul i32 %808, 70004807
  %812 = add nsw i32 %809, -604913194
  %813 = add i32 %812, %810
  %814 = add i32 %813, %811
  %815 = lshr i32 %814, 9
  %816 = lshr i32 %793, 3
  %817 = lshr i32 %800, 4
  %818 = lshr i32 %808, 5
  %819 = xor i32 %816, %817
  %820 = xor i32 %819, %818
  %821 = xor i32 %820, %815
  %822 = xor i32 %821, %814
  %823 = xor i32 %822, 67108859
  %824 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %825 = add nsw i32 %824, 1
  store i32 %825, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %826 = mul i32 %823, 987654323
  %827 = add i32 %826, %824
  %828 = tail call i32 @llvm.fshl.i32(i32 %827, i32 %827, i32 16)
  %829 = mul i32 %828, 123456791
  %830 = add i32 %829, %824
  %831 = sext i32 %824 to i64
  %832 = getelementptr inbounds i32, ptr %158, i64 %831
  store i32 %830, ptr %832, align 4, !tbaa !25
  %833 = load i32, ptr @pos, align 4, !tbaa !25
  %834 = add nsw i32 %833, -3
  %835 = load i32, ptr @buf, align 8, !tbaa !20
  %836 = add nsw i32 %835, -1
  %837 = and i32 %836, %834
  %838 = sext i32 %837 to i64
  %839 = getelementptr inbounds i8, ptr %90, i64 %838
  %840 = load i8, ptr %839, align 1, !tbaa !9
  %841 = zext i8 %840 to i32
  %842 = sub nsw i32 %833, %1
  %843 = and i32 %836, %842
  %844 = sext i32 %843 to i64
  %845 = getelementptr inbounds i8, ptr %90, i64 %844
  %846 = load i8, ptr %845, align 1, !tbaa !9
  %847 = zext i8 %846 to i32
  %848 = add nuw nsw i32 %847, %841
  %849 = lshr i32 %848, 1
  %850 = add nsw i32 %833, -1
  %851 = and i32 %836, %850
  %852 = sext i32 %851 to i64
  %853 = getelementptr inbounds i8, ptr %90, i64 %852
  %854 = load i8, ptr %853, align 1, !tbaa !9
  %855 = lshr i8 %854, 2
  %856 = zext i8 %855 to i32
  %857 = add nsw i32 %833, -2
  %858 = and i32 %836, %857
  %859 = sext i32 %858 to i64
  %860 = getelementptr inbounds i8, ptr %90, i64 %859
  %861 = load i8, ptr %860, align 1, !tbaa !9
  %862 = lshr i8 %861, 2
  %863 = zext i8 %862 to i32
  %864 = mul i32 %849, 30005491
  %865 = mul nuw i32 %856, 50004239
  %866 = mul i32 %863, 70004807
  %867 = add i32 %864, -404910215
  %868 = add i32 %867, %865
  %869 = add i32 %868, %866
  %870 = lshr i32 %869, 9
  %871 = lshr i32 %863, 5
  %872 = xor i32 %848, %856
  %873 = lshr i32 %872, 4
  %874 = or i32 %871, 67108858
  %875 = xor i32 %874, %873
  %876 = xor i32 %875, %870
  %877 = xor i32 %876, %869
  %878 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %879 = add nsw i32 %878, 1
  store i32 %879, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %880 = mul i32 %877, 987654323
  %881 = add i32 %880, %878
  %882 = tail call i32 @llvm.fshl.i32(i32 %881, i32 %881, i32 16)
  %883 = mul i32 %882, 123456791
  %884 = add i32 %883, %878
  %885 = sext i32 %878 to i64
  %886 = getelementptr inbounds i32, ptr %158, i64 %885
  store i32 %884, ptr %886, align 4, !tbaa !25
  %887 = load i32, ptr @pos, align 4, !tbaa !25
  %888 = add nsw i32 %887, -2
  %889 = load i32, ptr @buf, align 8, !tbaa !20
  %890 = add nsw i32 %889, -1
  %891 = and i32 %890, %888
  %892 = sext i32 %891 to i64
  %893 = getelementptr inbounds i8, ptr %90, i64 %892
  %894 = load i8, ptr %893, align 1, !tbaa !9
  %895 = zext i8 %894 to i32
  %896 = add nsw i32 %887, -1
  %897 = and i32 %890, %896
  %898 = sext i32 %897 to i64
  %899 = getelementptr inbounds i8, ptr %90, i64 %898
  %900 = load i8, ptr %899, align 1, !tbaa !9
  %901 = zext i8 %900 to i32
  %902 = add nuw nsw i32 %901, %895
  %903 = lshr i32 %902, 1
  %904 = sub nsw i32 %887, %1
  %905 = and i32 %890, %904
  %906 = sext i32 %905 to i64
  %907 = getelementptr inbounds i8, ptr %90, i64 %906
  %908 = load i8, ptr %907, align 1, !tbaa !9
  %909 = zext i8 %908 to i32
  %910 = sub nsw i32 %887, %208
  %911 = and i32 %890, %910
  %912 = sext i32 %911 to i64
  %913 = getelementptr inbounds i8, ptr %90, i64 %912
  %914 = load i8, ptr %913, align 1, !tbaa !9
  %915 = zext i8 %914 to i32
  %916 = add nuw nsw i32 %915, %909
  %917 = lshr i32 %916, 1
  %918 = sub nsw i32 %887, %95
  %919 = and i32 %890, %918
  %920 = sext i32 %919 to i64
  %921 = getelementptr inbounds i8, ptr %90, i64 %920
  %922 = load i8, ptr %921, align 1, !tbaa !9
  %923 = lshr i8 %922, 2
  %924 = zext i8 %923 to i32
  %925 = mul i32 %903, 30005491
  %926 = mul i32 %917, 50004239
  %927 = mul i32 %924, 70004807
  %928 = add i32 %925, -204907236
  %929 = add i32 %928, %926
  %930 = add i32 %929, %927
  %931 = lshr i32 %930, 9
  %932 = lshr i32 %902, 4
  %933 = lshr i32 %916, 5
  %934 = lshr i32 %924, 5
  %935 = xor i32 %932, %933
  %936 = xor i32 %935, %934
  %937 = xor i32 %936, %931
  %938 = xor i32 %937, %930
  %939 = xor i32 %938, 67108858
  %940 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %941 = add nsw i32 %940, 1
  store i32 %941, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %942 = mul i32 %939, 987654323
  %943 = add i32 %942, %940
  %944 = tail call i32 @llvm.fshl.i32(i32 %943, i32 %943, i32 16)
  %945 = mul i32 %944, 123456791
  %946 = add i32 %945, %940
  %947 = sext i32 %940 to i64
  %948 = getelementptr inbounds i32, ptr %158, i64 %947
  store i32 %946, ptr %948, align 4, !tbaa !25
  %949 = load i32, ptr @pos, align 4, !tbaa !25
  %950 = add nsw i32 %949, -2
  %951 = load i32, ptr @buf, align 8, !tbaa !20
  %952 = add nsw i32 %951, -1
  %953 = and i32 %952, %950
  %954 = sext i32 %953 to i64
  %955 = getelementptr inbounds i8, ptr %90, i64 %954
  %956 = load i8, ptr %955, align 1, !tbaa !9
  %957 = zext i8 %956 to i32
  %958 = add nsw i32 %949, -1
  %959 = and i32 %952, %958
  %960 = sext i32 %959 to i64
  %961 = getelementptr inbounds i8, ptr %90, i64 %960
  %962 = load i8, ptr %961, align 1, !tbaa !9
  %963 = zext i8 %962 to i32
  %964 = add nuw nsw i32 %963, %957
  %965 = lshr i32 %964, 2
  %966 = sub nsw i32 %949, %95
  %967 = and i32 %952, %966
  %968 = sext i32 %967 to i64
  %969 = getelementptr inbounds i8, ptr %90, i64 %968
  %970 = load i8, ptr %969, align 1, !tbaa !9
  %971 = zext i8 %970 to i32
  %972 = sub nsw i32 %949, %1
  %973 = and i32 %952, %972
  %974 = sext i32 %973 to i64
  %975 = getelementptr inbounds i8, ptr %90, i64 %974
  %976 = load i8, ptr %975, align 1, !tbaa !9
  %977 = zext i8 %976 to i32
  %978 = add nuw nsw i32 %977, %971
  %979 = lshr i32 %978, 2
  %980 = mul nuw i32 %965, 30005491
  %981 = mul i32 %979, 50004239
  %982 = add i32 %980, -74909064
  %983 = add i32 %982, %981
  %984 = lshr i32 %983, 9
  %985 = lshr i32 %964, 5
  %986 = lshr i32 %978, 6
  %987 = xor i32 %985, %986
  %988 = xor i32 %987, %984
  %989 = xor i32 %988, %983
  %990 = xor i32 %989, 67108869
  %991 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %992 = add nsw i32 %991, 1
  store i32 %992, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %993 = mul i32 %990, 987654323
  %994 = add i32 %993, %991
  %995 = tail call i32 @llvm.fshl.i32(i32 %994, i32 %994, i32 16)
  %996 = mul i32 %995, 123456791
  %997 = add i32 %996, %991
  %998 = sext i32 %991 to i64
  %999 = getelementptr inbounds i32, ptr %158, i64 %998
  store i32 %997, ptr %999, align 4, !tbaa !25
  %1000 = load i32, ptr @pos, align 4, !tbaa !25
  %1001 = add nsw i32 %1000, -2
  %1002 = load i32, ptr @buf, align 8, !tbaa !20
  %1003 = add nsw i32 %1002, -1
  %1004 = and i32 %1003, %1001
  %1005 = sext i32 %1004 to i64
  %1006 = getelementptr inbounds i8, ptr %90, i64 %1005
  %1007 = load i8, ptr %1006, align 1, !tbaa !9
  %1008 = zext i8 %1007 to i32
  %1009 = add nsw i32 %1000, -1
  %1010 = and i32 %1003, %1009
  %1011 = sext i32 %1010 to i64
  %1012 = getelementptr inbounds i8, ptr %90, i64 %1011
  %1013 = load i8, ptr %1012, align 1, !tbaa !9
  %1014 = zext i8 %1013 to i32
  %1015 = add nuw nsw i32 %1014, %1008
  %1016 = lshr i32 %1015, 1
  %1017 = sub nsw i32 %1000, %1
  %1018 = and i32 %1003, %1017
  %1019 = sext i32 %1018 to i64
  %1020 = getelementptr inbounds i8, ptr %90, i64 %1019
  %1021 = load i8, ptr %1020, align 1, !tbaa !9
  %1022 = zext i8 %1021 to i32
  %1023 = sub nsw i32 %1000, %208
  %1024 = and i32 %1003, %1023
  %1025 = sext i32 %1024 to i64
  %1026 = getelementptr inbounds i8, ptr %90, i64 %1025
  %1027 = load i8, ptr %1026, align 1, !tbaa !9
  %1028 = zext i8 %1027 to i32
  %1029 = add nuw nsw i32 %1028, %1022
  %1030 = lshr i32 %1029, 1
  %1031 = mul i32 %1016, 30005491
  %1032 = mul i32 %1030, 50004239
  %1033 = add i32 %1031, 125093915
  %1034 = add i32 %1033, %1032
  %1035 = lshr i32 %1034, 9
  %1036 = lshr i32 %1015, 4
  %1037 = lshr i32 %1029, 5
  %1038 = xor i32 %1036, %1037
  %1039 = xor i32 %1038, %1035
  %1040 = xor i32 %1039, %1034
  %1041 = xor i32 %1040, 67108869
  %1042 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1043 = add nsw i32 %1042, 1
  store i32 %1043, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1044 = mul i32 %1041, 987654323
  %1045 = add i32 %1044, %1042
  %1046 = tail call i32 @llvm.fshl.i32(i32 %1045, i32 %1045, i32 16)
  %1047 = mul i32 %1046, 123456791
  %1048 = add i32 %1047, %1042
  %1049 = sext i32 %1042 to i64
  %1050 = getelementptr inbounds i32, ptr %158, i64 %1049
  store i32 %1048, ptr %1050, align 4, !tbaa !25
  %1051 = load i32, ptr @pos, align 4, !tbaa !25
  %1052 = add nsw i32 %1051, -2
  %1053 = load i32, ptr @buf, align 8, !tbaa !20
  %1054 = add nsw i32 %1053, -1
  %1055 = and i32 %1054, %1052
  %1056 = sext i32 %1055 to i64
  %1057 = getelementptr inbounds i8, ptr %90, i64 %1056
  %1058 = load i8, ptr %1057, align 1, !tbaa !9
  %1059 = zext i8 %1058 to i32
  %1060 = add nsw i32 %1051, -1
  %1061 = and i32 %1054, %1060
  %1062 = sext i32 %1061 to i64
  %1063 = getelementptr inbounds i8, ptr %90, i64 %1062
  %1064 = load i8, ptr %1063, align 1, !tbaa !9
  %1065 = zext i8 %1064 to i32
  %1066 = add nuw nsw i32 %1065, %1059
  %1067 = lshr i32 %1066, 1
  %1068 = sub nsw i32 %1051, %95
  %1069 = and i32 %1054, %1068
  %1070 = sext i32 %1069 to i64
  %1071 = getelementptr inbounds i8, ptr %90, i64 %1070
  %1072 = load i8, ptr %1071, align 1, !tbaa !9
  %1073 = zext i8 %1072 to i32
  %1074 = sub nsw i32 %1051, %396
  %1075 = and i32 %1054, %1074
  %1076 = sext i32 %1075 to i64
  %1077 = getelementptr inbounds i8, ptr %90, i64 %1076
  %1078 = load i8, ptr %1077, align 1, !tbaa !9
  %1079 = zext i8 %1078 to i32
  %1080 = add nuw nsw i32 %1079, %1073
  %1081 = lshr i32 %1080, 1
  %1082 = mul i32 %1067, 30005491
  %1083 = mul i32 %1081, 50004239
  %1084 = add i32 %1082, 325096894
  %1085 = add i32 %1084, %1083
  %1086 = lshr i32 %1085, 9
  %1087 = lshr i32 %1066, 4
  %1088 = lshr i32 %1080, 5
  %1089 = xor i32 %1087, %1088
  %1090 = xor i32 %1089, %1086
  %1091 = xor i32 %1090, %1085
  %1092 = xor i32 %1091, 67108870
  %1093 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1094 = add nsw i32 %1093, 1
  store i32 %1094, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1095 = mul i32 %1092, 987654323
  %1096 = add i32 %1095, %1093
  %1097 = tail call i32 @llvm.fshl.i32(i32 %1096, i32 %1096, i32 16)
  %1098 = mul i32 %1097, 123456791
  %1099 = add i32 %1098, %1093
  %1100 = sext i32 %1093 to i64
  %1101 = getelementptr inbounds i32, ptr %158, i64 %1100
  store i32 %1099, ptr %1101, align 4, !tbaa !25
  %1102 = load i32, ptr @pos, align 4, !tbaa !25
  %1103 = add nsw i32 %1102, -2
  %1104 = load i32, ptr @buf, align 8, !tbaa !20
  %1105 = add nsw i32 %1104, -1
  %1106 = and i32 %1105, %1103
  %1107 = sext i32 %1106 to i64
  %1108 = getelementptr inbounds i8, ptr %90, i64 %1107
  %1109 = load i8, ptr %1108, align 1, !tbaa !9
  %1110 = zext i8 %1109 to i32
  %1111 = add nsw i32 %1102, -1
  %1112 = and i32 %1105, %1111
  %1113 = sext i32 %1112 to i64
  %1114 = getelementptr inbounds i8, ptr %90, i64 %1113
  %1115 = load i8, ptr %1114, align 1, !tbaa !9
  %1116 = zext i8 %1115 to i32
  %1117 = add nuw nsw i32 %1116, %1110
  %1118 = lshr i32 %1117, 1
  %1119 = sub nsw i32 %1102, %110
  %1120 = and i32 %1105, %1119
  %1121 = sext i32 %1120 to i64
  %1122 = getelementptr inbounds i8, ptr %90, i64 %1121
  %1123 = load i8, ptr %1122, align 1, !tbaa !9
  %1124 = zext i8 %1123 to i32
  %1125 = sub nsw i32 %1102, %358
  %1126 = and i32 %1105, %1125
  %1127 = sext i32 %1126 to i64
  %1128 = getelementptr inbounds i8, ptr %90, i64 %1127
  %1129 = load i8, ptr %1128, align 1, !tbaa !9
  %1130 = zext i8 %1129 to i32
  %1131 = add nuw nsw i32 %1130, %1124
  %1132 = lshr i32 %1131, 1
  %1133 = mul i32 %1118, 30005491
  %1134 = mul i32 %1132, 50004239
  %1135 = add i32 %1133, 525099873
  %1136 = add i32 %1135, %1134
  %1137 = lshr i32 %1136, 9
  %1138 = lshr i32 %1117, 4
  %1139 = lshr i32 %1131, 5
  %1140 = xor i32 %1138, %1139
  %1141 = xor i32 %1140, %1137
  %1142 = xor i32 %1141, %1136
  %1143 = xor i32 %1142, 67108870
  %1144 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1145 = add nsw i32 %1144, 1
  store i32 %1145, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1146 = mul i32 %1143, 987654323
  %1147 = add i32 %1146, %1144
  %1148 = tail call i32 @llvm.fshl.i32(i32 %1147, i32 %1147, i32 16)
  %1149 = mul i32 %1148, 123456791
  %1150 = add i32 %1149, %1144
  %1151 = sext i32 %1144 to i64
  %1152 = getelementptr inbounds i32, ptr %158, i64 %1151
  store i32 %1150, ptr %1152, align 4, !tbaa !25
  %1153 = load i32, ptr @pos, align 4, !tbaa !25
  %1154 = sub nsw i32 %1153, %1
  %1155 = load i32, ptr @buf, align 8, !tbaa !20
  %1156 = add nsw i32 %1155, -1
  %1157 = and i32 %1156, %1154
  %1158 = sext i32 %1157 to i64
  %1159 = getelementptr inbounds i8, ptr %90, i64 %1158
  %1160 = load i8, ptr %1159, align 1, !tbaa !9
  %1161 = zext i8 %1160 to i32
  %1162 = sub nsw i32 %1153, %208
  %1163 = and i32 %1156, %1162
  %1164 = sext i32 %1163 to i64
  %1165 = getelementptr inbounds i8, ptr %90, i64 %1164
  %1166 = load i8, ptr %1165, align 1, !tbaa !9
  %1167 = zext i8 %1166 to i32
  %1168 = add nuw nsw i32 %1167, %1161
  %1169 = lshr i32 %1168, 1
  %1170 = sub nsw i32 %1153, %95
  %1171 = and i32 %1156, %1170
  %1172 = sext i32 %1171 to i64
  %1173 = getelementptr inbounds i8, ptr %90, i64 %1172
  %1174 = load i8, ptr %1173, align 1, !tbaa !9
  %1175 = zext i8 %1174 to i32
  %1176 = sub nsw i32 %1153, %358
  %1177 = and i32 %1156, %1176
  %1178 = sext i32 %1177 to i64
  %1179 = getelementptr inbounds i8, ptr %90, i64 %1178
  %1180 = load i8, ptr %1179, align 1, !tbaa !9
  %1181 = zext i8 %1180 to i32
  %1182 = add nuw nsw i32 %1181, %1175
  %1183 = lshr i32 %1182, 1
  %1184 = mul i32 %1169, 30005491
  %1185 = mul i32 %1183, 50004239
  %1186 = add i32 %1184, 725102852
  %1187 = add i32 %1186, %1185
  %1188 = lshr i32 %1187, 9
  %1189 = lshr i32 %1168, 4
  %1190 = lshr i32 %1182, 5
  %1191 = xor i32 %1189, %1190
  %1192 = xor i32 %1191, %1188
  %1193 = xor i32 %1192, %1187
  %1194 = xor i32 %1193, 67108870
  %1195 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1196 = add nsw i32 %1195, 1
  store i32 %1196, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1197 = mul i32 %1194, 987654323
  %1198 = add i32 %1197, %1195
  %1199 = tail call i32 @llvm.fshl.i32(i32 %1198, i32 %1198, i32 16)
  %1200 = mul i32 %1199, 123456791
  %1201 = add i32 %1200, %1195
  %1202 = sext i32 %1195 to i64
  %1203 = getelementptr inbounds i32, ptr %158, i64 %1202
  store i32 %1201, ptr %1203, align 4, !tbaa !25
  %1204 = load i32, ptr @pos, align 4, !tbaa !25
  %1205 = sub nsw i32 %1204, %95
  %1206 = load i32, ptr @buf, align 8, !tbaa !20
  %1207 = add nsw i32 %1206, -1
  %1208 = and i32 %1207, %1205
  %1209 = sext i32 %1208 to i64
  %1210 = getelementptr inbounds i8, ptr %90, i64 %1209
  %1211 = load i8, ptr %1210, align 1, !tbaa !9
  %1212 = zext i8 %1211 to i32
  %1213 = sub nsw i32 %1204, %1
  %1214 = and i32 %1207, %1213
  %1215 = sext i32 %1214 to i64
  %1216 = getelementptr inbounds i8, ptr %90, i64 %1215
  %1217 = load i8, ptr %1216, align 1, !tbaa !9
  %1218 = zext i8 %1217 to i32
  %1219 = add nuw nsw i32 %1218, %1212
  %1220 = lshr i32 %1219, 1
  %1221 = sub nsw i32 %1204, %110
  %1222 = and i32 %1207, %1221
  %1223 = sext i32 %1222 to i64
  %1224 = getelementptr inbounds i8, ptr %90, i64 %1223
  %1225 = load i8, ptr %1224, align 1, !tbaa !9
  %1226 = zext i8 %1225 to i32
  %1227 = add nuw nsw i32 %1226, %1218
  %1228 = lshr i32 %1227, 1
  %1229 = mul i32 %1220, 30005491
  %1230 = mul i32 %1228, 50004239
  %1231 = add i32 %1229, 925105831
  %1232 = add i32 %1231, %1230
  %1233 = lshr i32 %1232, 9
  %1234 = lshr i32 %1219, 4
  %1235 = lshr i32 %1227, 5
  %1236 = xor i32 %1234, %1235
  %1237 = xor i32 %1236, %1233
  %1238 = xor i32 %1237, %1232
  %1239 = xor i32 %1238, 67108870
  %1240 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1241 = add nsw i32 %1240, 1
  store i32 %1241, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1242 = mul i32 %1239, 987654323
  %1243 = add i32 %1242, %1240
  %1244 = tail call i32 @llvm.fshl.i32(i32 %1243, i32 %1243, i32 16)
  %1245 = mul i32 %1244, 123456791
  %1246 = add i32 %1245, %1240
  %1247 = sext i32 %1240 to i64
  %1248 = getelementptr inbounds i32, ptr %158, i64 %1247
  store i32 %1246, ptr %1248, align 4, !tbaa !25
  %1249 = load i32, ptr @pos, align 4, !tbaa !25
  %1250 = add nsw i32 %1249, -1
  %1251 = load i32, ptr @buf, align 8, !tbaa !20
  %1252 = add nsw i32 %1251, -1
  %1253 = and i32 %1252, %1250
  %1254 = sext i32 %1253 to i64
  %1255 = getelementptr inbounds i8, ptr %90, i64 %1254
  %1256 = load i8, ptr %1255, align 1, !tbaa !9
  %1257 = zext i8 %1256 to i32
  %1258 = sub nsw i32 %1249, %95
  %1259 = and i32 %1252, %1258
  %1260 = sext i32 %1259 to i64
  %1261 = getelementptr inbounds i8, ptr %90, i64 %1260
  %1262 = load i8, ptr %1261, align 1, !tbaa !9
  %1263 = zext i8 %1262 to i32
  %1264 = add nuw nsw i32 %1263, %1257
  %1265 = lshr i32 %1264, 1
  %1266 = sub nsw i32 %1249, %1
  %1267 = and i32 %1252, %1266
  %1268 = sext i32 %1267 to i64
  %1269 = getelementptr inbounds i8, ptr %90, i64 %1268
  %1270 = load i8, ptr %1269, align 1, !tbaa !9
  %1271 = zext i8 %1270 to i32
  %1272 = sub nsw i32 %1249, %208
  %1273 = and i32 %1252, %1272
  %1274 = sext i32 %1273 to i64
  %1275 = getelementptr inbounds i8, ptr %90, i64 %1274
  %1276 = load i8, ptr %1275, align 1, !tbaa !9
  %1277 = zext i8 %1276 to i32
  %1278 = add nuw nsw i32 %1277, %1271
  %1279 = lshr i32 %1278, 1
  %1280 = mul i32 %1265, 30005491
  %1281 = mul i32 %1279, 50004239
  %1282 = add i32 %1280, 1125108810
  %1283 = add i32 %1282, %1281
  %1284 = lshr i32 %1283, 9
  %1285 = lshr i32 %1264, 4
  %1286 = lshr i32 %1278, 5
  %1287 = xor i32 %1285, %1286
  %1288 = xor i32 %1287, %1284
  %1289 = xor i32 %1288, %1283
  %1290 = xor i32 %1289, 67108871
  %1291 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1292 = add nsw i32 %1291, 1
  store i32 %1292, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1293 = mul i32 %1290, 987654323
  %1294 = add i32 %1293, %1291
  %1295 = tail call i32 @llvm.fshl.i32(i32 %1294, i32 %1294, i32 16)
  %1296 = mul i32 %1295, 123456791
  %1297 = add i32 %1296, %1291
  %1298 = sext i32 %1291 to i64
  %1299 = getelementptr inbounds i32, ptr %158, i64 %1298
  store i32 %1297, ptr %1299, align 4, !tbaa !25
  %1300 = load i32, ptr @pos, align 4, !tbaa !25
  %1301 = add nsw i32 %1300, -1
  %1302 = load i32, ptr @buf, align 8, !tbaa !20
  %1303 = add nsw i32 %1302, -1
  %1304 = and i32 %1303, %1301
  %1305 = sext i32 %1304 to i64
  %1306 = getelementptr inbounds i8, ptr %90, i64 %1305
  %1307 = load i8, ptr %1306, align 1, !tbaa !9
  %1308 = zext i8 %1307 to i32
  %1309 = sub nsw i32 %1300, %95
  %1310 = and i32 %1303, %1309
  %1311 = sext i32 %1310 to i64
  %1312 = getelementptr inbounds i8, ptr %90, i64 %1311
  %1313 = load i8, ptr %1312, align 1, !tbaa !9
  %1314 = zext i8 %1313 to i32
  %1315 = add nuw nsw i32 %1314, %1308
  %1316 = lshr i32 %1315, 2
  %1317 = sub nsw i32 %1300, %1
  %1318 = and i32 %1303, %1317
  %1319 = sext i32 %1318 to i64
  %1320 = getelementptr inbounds i8, ptr %90, i64 %1319
  %1321 = load i8, ptr %1320, align 1, !tbaa !9
  %1322 = zext i8 %1321 to i32
  %1323 = sub nsw i32 %1300, %110
  %1324 = and i32 %1303, %1323
  %1325 = sext i32 %1324 to i64
  %1326 = getelementptr inbounds i8, ptr %90, i64 %1325
  %1327 = load i8, ptr %1326, align 1, !tbaa !9
  %1328 = zext i8 %1327 to i32
  %1329 = add nuw nsw i32 %1328, %1322
  %1330 = lshr i32 %1329, 2
  %1331 = mul nuw i32 %1316, 30005491
  %1332 = mul i32 %1330, 50004239
  %1333 = add i32 %1331, 1325111789
  %1334 = add i32 %1333, %1332
  %1335 = lshr i32 %1334, 9
  %1336 = lshr i32 %1315, 5
  %1337 = lshr i32 %1329, 6
  %1338 = xor i32 %1336, %1337
  %1339 = xor i32 %1338, %1335
  %1340 = xor i32 %1339, %1334
  %1341 = xor i32 %1340, 67108871
  %1342 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1343 = add nsw i32 %1342, 1
  store i32 %1343, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1344 = mul i32 %1341, 987654323
  %1345 = add i32 %1344, %1342
  %1346 = tail call i32 @llvm.fshl.i32(i32 %1345, i32 %1345, i32 16)
  %1347 = mul i32 %1346, 123456791
  %1348 = add i32 %1347, %1342
  %1349 = sext i32 %1342 to i64
  %1350 = getelementptr inbounds i32, ptr %158, i64 %1349
  store i32 %1348, ptr %1350, align 4, !tbaa !25
  %1351 = load i32, ptr @pos, align 4, !tbaa !25
  %1352 = add nsw i32 %1351, -1
  %1353 = load i32, ptr @buf, align 8, !tbaa !20
  %1354 = add nsw i32 %1353, -1
  %1355 = and i32 %1354, %1352
  %1356 = sext i32 %1355 to i64
  %1357 = getelementptr inbounds i8, ptr %90, i64 %1356
  %1358 = load i8, ptr %1357, align 1, !tbaa !9
  %1359 = zext i8 %1358 to i32
  %1360 = sub nsw i32 %1351, %95
  %1361 = and i32 %1354, %1360
  %1362 = sext i32 %1361 to i64
  %1363 = getelementptr inbounds i8, ptr %90, i64 %1362
  %1364 = load i8, ptr %1363, align 1, !tbaa !9
  %1365 = zext i8 %1364 to i32
  %1366 = sub nsw i32 %1359, %1365
  %1367 = ashr i32 %1366, 1
  %1368 = sub nsw i32 %1351, %1
  %1369 = and i32 %1354, %1368
  %1370 = sext i32 %1369 to i64
  %1371 = getelementptr inbounds i8, ptr %90, i64 %1370
  %1372 = load i8, ptr %1371, align 1, !tbaa !9
  %1373 = zext i8 %1372 to i32
  %1374 = add nsw i32 %1367, %1373
  %1375 = ashr i32 %1374, 2
  %1376 = mul i32 %1375, 30005491
  %1377 = add i32 %1376, 1475110529
  %1378 = lshr i32 %1377, 9
  %1379 = lshr i32 %1375, 3
  %1380 = xor i32 %1379, %1378
  %1381 = xor i32 %1380, %1377
  %1382 = xor i32 %1381, 201326584
  %1383 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1384 = add nsw i32 %1383, 1
  store i32 %1384, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1385 = mul i32 %1382, 987654323
  %1386 = add i32 %1385, %1383
  %1387 = tail call i32 @llvm.fshl.i32(i32 %1386, i32 %1386, i32 16)
  %1388 = mul i32 %1387, 123456791
  %1389 = add i32 %1388, %1383
  %1390 = sext i32 %1383 to i64
  %1391 = getelementptr inbounds i32, ptr %158, i64 %1390
  store i32 %1389, ptr %1391, align 4, !tbaa !25
  %1392 = load i32, ptr @pos, align 4, !tbaa !25
  %1393 = sub nsw i32 %1392, %95
  %1394 = load i32, ptr @buf, align 8, !tbaa !20
  %1395 = add nsw i32 %1394, -1
  %1396 = and i32 %1395, %1393
  %1397 = sext i32 %1396 to i64
  %1398 = getelementptr inbounds i8, ptr %90, i64 %1397
  %1399 = load i8, ptr %1398, align 1, !tbaa !9
  %1400 = zext i8 %1399 to i32
  %1401 = sub nsw i32 %1392, %1
  %1402 = and i32 %1395, %1401
  %1403 = sext i32 %1402 to i64
  %1404 = getelementptr inbounds i8, ptr %90, i64 %1403
  %1405 = load i8, ptr %1404, align 1, !tbaa !9
  %1406 = zext i8 %1405 to i32
  %1407 = sub nsw i32 %1400, %1406
  %1408 = ashr i32 %1407, 1
  %1409 = add nsw i32 %1392, -1
  %1410 = and i32 %1395, %1409
  %1411 = sext i32 %1410 to i64
  %1412 = getelementptr inbounds i8, ptr %90, i64 %1411
  %1413 = load i8, ptr %1412, align 1, !tbaa !9
  %1414 = zext i8 %1413 to i32
  %1415 = add nsw i32 %1408, %1414
  %1416 = ashr i32 %1415, 2
  %1417 = mul i32 %1416, 30005491
  %1418 = add i32 %1417, 1675113508
  %1419 = lshr i32 %1418, 9
  %1420 = lshr i32 %1416, 3
  %1421 = xor i32 %1420, %1419
  %1422 = xor i32 %1421, %1418
  %1423 = xor i32 %1422, 201326584
  %1424 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1425 = add nsw i32 %1424, 1
  store i32 %1425, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1426 = mul i32 %1423, 987654323
  %1427 = add i32 %1426, %1424
  %1428 = tail call i32 @llvm.fshl.i32(i32 %1427, i32 %1427, i32 16)
  %1429 = mul i32 %1428, 123456791
  %1430 = add i32 %1429, %1424
  %1431 = sext i32 %1424 to i64
  %1432 = getelementptr inbounds i32, ptr %158, i64 %1431
  store i32 %1430, ptr %1432, align 4, !tbaa !25
  %1433 = load i32, ptr @pos, align 4, !tbaa !25
  %1434 = add nsw i32 %1433, -1
  %1435 = load i32, ptr @buf, align 8, !tbaa !20
  %1436 = add nsw i32 %1435, -1
  %1437 = and i32 %1436, %1434
  %1438 = sext i32 %1437 to i64
  %1439 = getelementptr inbounds i8, ptr %90, i64 %1438
  %1440 = load i8, ptr %1439, align 1, !tbaa !9
  %1441 = zext i8 %1440 to i32
  %1442 = sub nsw i32 %1433, %95
  %1443 = and i32 %1436, %1442
  %1444 = sext i32 %1443 to i64
  %1445 = getelementptr inbounds i8, ptr %90, i64 %1444
  %1446 = load i8, ptr %1445, align 1, !tbaa !9
  %1447 = zext i8 %1446 to i32
  %1448 = sub nsw i32 %1447, %1441
  %1449 = sub nsw i32 %1433, %1
  %1450 = and i32 %1436, %1449
  %1451 = sext i32 %1450 to i64
  %1452 = getelementptr inbounds i8, ptr %90, i64 %1451
  %1453 = load i8, ptr %1452, align 1, !tbaa !9
  %1454 = zext i8 %1453 to i32
  %1455 = add nsw i32 %1448, %1454
  %1456 = ashr i32 %1455, 2
  %1457 = mul i32 %1456, 30005491
  %1458 = add i32 %1457, 1875116487
  %1459 = lshr i32 %1458, 9
  %1460 = lshr i32 %1456, 3
  %1461 = xor i32 %1460, %1459
  %1462 = xor i32 %1461, %1458
  %1463 = xor i32 %1462, 201326583
  %1464 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1465 = add nsw i32 %1464, 1
  store i32 %1465, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ9model8bitR5MixeriE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1466 = mul i32 %1463, 987654323
  %1467 = add i32 %1466, %1464
  %1468 = tail call i32 @llvm.fshl.i32(i32 %1467, i32 %1467, i32 16)
  %1469 = mul i32 %1468, 123456791
  %1470 = add i32 %1469, %1464
  %1471 = sext i32 %1464 to i64
  %1472 = getelementptr inbounds i32, ptr %158, i64 %1471
  store i32 %1470, ptr %1472, align 4, !tbaa !25
  %1473 = load i32, ptr @pos, align 4, !tbaa !25
  %1474 = add nsw i32 %1473, -1
  %1475 = load i32, ptr @buf, align 8, !tbaa !20
  %1476 = add nsw i32 %1475, -1
  %1477 = and i32 %1476, %1474
  %1478 = sext i32 %1477 to i64
  %1479 = getelementptr inbounds i8, ptr %90, i64 %1478
  %1480 = load i8, ptr %1479, align 1, !tbaa !9
  %1481 = zext i8 %1480 to i32
  %1482 = sub nsw i32 %1473, %1
  %1483 = and i32 %1476, %1482
  %1484 = sext i32 %1483 to i64
  %1485 = getelementptr inbounds i8, ptr %90, i64 %1484
  %1486 = load i8, ptr %1485, align 1, !tbaa !9
  %1487 = zext i8 %1486 to i32
  %1488 = add nuw nsw i32 %1487, %1481
  %1489 = shl nuw nsw i32 %1488, 7
  %1490 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm1, align 8, !tbaa !74
  %1491 = add i32 %1490, 65280
  %1492 = and i32 %1491, 65280
  %1493 = and i32 %1492, %1489
  store i32 %1493, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %1494 = load i8, ptr %1479, align 1, !tbaa !9
  %1495 = zext i8 %1494 to i32
  %1496 = load i8, ptr %1485, align 1, !tbaa !9
  %1497 = zext i8 %1496 to i32
  %1498 = add nuw nsw i32 %1497, %1495
  %1499 = sub nsw i32 %1473, %110
  %1500 = and i32 %1476, %1499
  %1501 = sext i32 %1500 to i64
  %1502 = getelementptr inbounds i8, ptr %90, i64 %1501
  %1503 = load i8, ptr %1502, align 1, !tbaa !9
  %1504 = zext i8 %1503 to i32
  %1505 = sub nsw i32 %1498, %1504
  %1506 = shl nsw i32 %1505, 7
  %1507 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm2, align 8, !tbaa !74
  %1508 = and i32 %1507, -256
  %1509 = add i32 %1508, -256
  %1510 = and i32 %1509, %1506
  store i32 %1510, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %1511 = load i8, ptr %1479, align 1, !tbaa !9
  %1512 = zext i8 %1511 to i32
  %1513 = add nsw i32 %1473, -2
  %1514 = and i32 %1476, %1513
  %1515 = sext i32 %1514 to i64
  %1516 = getelementptr inbounds i8, ptr %90, i64 %1515
  %1517 = load i8, ptr %1516, align 1, !tbaa !9
  %1518 = zext i8 %1517 to i32
  %1519 = shl nuw nsw i32 %1512, 8
  %1520 = shl nuw nsw i32 %1518, 7
  %1521 = sub nsw i32 %1519, %1520
  %1522 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm3, align 8, !tbaa !74
  %1523 = and i32 %1522, -256
  %1524 = add i32 %1523, -256
  %1525 = and i32 %1524, %1521
  store i32 %1525, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm3, i64 0, i32 1), align 8, !tbaa !112
  %1526 = load i8, ptr %1485, align 1, !tbaa !9
  %1527 = zext i8 %1526 to i32
  %1528 = sub nsw i32 %1473, %208
  %1529 = and i32 %1476, %1528
  %1530 = sext i32 %1529 to i64
  %1531 = getelementptr inbounds i8, ptr %90, i64 %1530
  %1532 = load i8, ptr %1531, align 1, !tbaa !9
  %1533 = zext i8 %1532 to i32
  %1534 = shl nuw nsw i32 %1527, 8
  %1535 = shl nuw nsw i32 %1533, 7
  %1536 = sub nsw i32 %1534, %1535
  %1537 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm4, align 8, !tbaa !74
  %1538 = and i32 %1537, -256
  %1539 = add i32 %1538, -256
  %1540 = and i32 %1539, %1536
  store i32 %1540, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm4, i64 0, i32 1), align 8, !tbaa !112
  %1541 = load i8, ptr %1479, align 1, !tbaa !9
  %1542 = zext i8 %1541 to i32
  %1543 = load i8, ptr %1485, align 1, !tbaa !9
  %1544 = zext i8 %1543 to i32
  %1545 = add nuw nsw i32 %1544, %1542
  %1546 = sub nsw i32 %1473, %95
  %1547 = and i32 %1476, %1546
  %1548 = sext i32 %1547 to i64
  %1549 = getelementptr inbounds i8, ptr %90, i64 %1548
  %1550 = load i8, ptr %1549, align 1, !tbaa !9
  %1551 = zext i8 %1550 to i32
  %1552 = sub nsw i32 %1545, %1551
  %1553 = shl nsw i32 %1552, 7
  %1554 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm5, align 8, !tbaa !74
  %1555 = and i32 %1554, -256
  %1556 = add i32 %1555, -256
  %1557 = and i32 %1556, %1553
  store i32 %1557, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm5, i64 0, i32 1), align 8, !tbaa !112
  %1558 = shl nuw nsw i32 %135, 1
  %1559 = and i32 %1558, 384
  %1560 = or i32 %1559, %129
  %1561 = shl nuw nsw i32 %1560, 8
  %1562 = load i32, ptr @_ZZ9model8bitR5MixeriE4scm6, align 8, !tbaa !74
  %1563 = add i32 %1562, 2147483392
  %1564 = and i32 %1563, %1561
  store i32 %1564, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm6, i64 0, i32 1), align 8, !tbaa !112
  br label %1581

1565:                                             ; preds = %8
  %1566 = landingpad { ptr, i32 }
          cleanup
  br label %1743

1567:                                             ; preds = %17
  %1568 = landingpad { ptr, i32 }
          cleanup
  br label %1743

1569:                                             ; preds = %26
  %1570 = landingpad { ptr, i32 }
          cleanup
  br label %1743

1571:                                             ; preds = %35
  %1572 = landingpad { ptr, i32 }
          cleanup
  br label %1743

1573:                                             ; preds = %44
  %1574 = landingpad { ptr, i32 }
          cleanup
  br label %1743

1575:                                             ; preds = %53
  %1576 = landingpad { ptr, i32 }
          cleanup
  br label %1743

1577:                                             ; preds = %62
  %1578 = landingpad { ptr, i32 }
          cleanup
  br label %1743

1579:                                             ; preds = %71
  %1580 = landingpad { ptr, i32 }
          cleanup
  br label %1743

1581:                                             ; preds = %79, %84
  %1582 = phi i32 [ %83, %79 ], [ %1540, %84 ]
  %1583 = phi i32 [ %82, %79 ], [ %1525, %84 ]
  %1584 = phi i32 [ %81, %79 ], [ %1510, %84 ]
  %1585 = phi i32 [ %80, %79 ], [ %1493, %84 ]
  %1586 = load i32, ptr @y, align 4, !tbaa !25
  %1587 = shl i32 %1586, 16
  %1588 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %1589 = load i16, ptr %1588, align 2, !tbaa !31
  %1590 = zext i16 %1589 to i32
  %1591 = or i32 %1587, 64
  %1592 = sub i32 %1591, %1590
  %1593 = lshr i32 %1592, 7
  %1594 = trunc i32 %1593 to i16
  %1595 = add i16 %1589, %1594
  store i16 %1595, ptr %1588, align 2, !tbaa !31
  %1596 = load i32, ptr @c0, align 4, !tbaa !25
  %1597 = add nsw i32 %1596, %1585
  %1598 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm1, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1599 = sext i32 %1597 to i64
  %1600 = getelementptr inbounds i16, ptr %1598, i64 %1599
  store ptr %1600, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %1601 = load i16, ptr %1600, align 2, !tbaa !31
  %1602 = lshr i16 %1601, 4
  %1603 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %1604 = zext i16 %1602 to i64
  %1605 = getelementptr inbounds i16, ptr %1603, i64 %1604
  %1606 = load i16, ptr %1605, align 2, !tbaa !31
  %1607 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %1608 = load i32, ptr %1607, align 8, !tbaa !64
  %1609 = add nsw i32 %1608, 1
  %1610 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %1611 = load ptr, ptr %1610, align 8, !tbaa !59
  %1612 = sext i32 %1608 to i64
  %1613 = getelementptr inbounds i16, ptr %1611, i64 %1612
  store i16 %1606, ptr %1613, align 2, !tbaa !31
  %1614 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm2, i64 0, i32 2), align 8, !tbaa !114
  %1615 = load i16, ptr %1614, align 2, !tbaa !31
  %1616 = zext i16 %1615 to i32
  %1617 = sub i32 %1591, %1616
  %1618 = lshr i32 %1617, 7
  %1619 = trunc i32 %1618 to i16
  %1620 = add i16 %1615, %1619
  store i16 %1620, ptr %1614, align 2, !tbaa !31
  %1621 = add nsw i32 %1584, %1596
  %1622 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm2, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1623 = sext i32 %1621 to i64
  %1624 = getelementptr inbounds i16, ptr %1622, i64 %1623
  store ptr %1624, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm2, i64 0, i32 2), align 8, !tbaa !114
  %1625 = load i16, ptr %1624, align 2, !tbaa !31
  %1626 = lshr i16 %1625, 4
  %1627 = zext i16 %1626 to i64
  %1628 = getelementptr inbounds i16, ptr %1603, i64 %1627
  %1629 = load i16, ptr %1628, align 2, !tbaa !31
  %1630 = add nsw i32 %1608, 2
  %1631 = sext i32 %1609 to i64
  %1632 = getelementptr inbounds i16, ptr %1611, i64 %1631
  store i16 %1629, ptr %1632, align 2, !tbaa !31
  %1633 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm3, i64 0, i32 2), align 8, !tbaa !114
  %1634 = load i16, ptr %1633, align 2, !tbaa !31
  %1635 = zext i16 %1634 to i32
  %1636 = sub i32 %1591, %1635
  %1637 = lshr i32 %1636, 7
  %1638 = trunc i32 %1637 to i16
  %1639 = add i16 %1634, %1638
  store i16 %1639, ptr %1633, align 2, !tbaa !31
  %1640 = add nsw i32 %1583, %1596
  %1641 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm3, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1642 = sext i32 %1640 to i64
  %1643 = getelementptr inbounds i16, ptr %1641, i64 %1642
  store ptr %1643, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm3, i64 0, i32 2), align 8, !tbaa !114
  %1644 = load i16, ptr %1643, align 2, !tbaa !31
  %1645 = lshr i16 %1644, 4
  %1646 = zext i16 %1645 to i64
  %1647 = getelementptr inbounds i16, ptr %1603, i64 %1646
  %1648 = load i16, ptr %1647, align 2, !tbaa !31
  %1649 = add nsw i32 %1608, 3
  %1650 = sext i32 %1630 to i64
  %1651 = getelementptr inbounds i16, ptr %1611, i64 %1650
  store i16 %1648, ptr %1651, align 2, !tbaa !31
  %1652 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm4, i64 0, i32 2), align 8, !tbaa !114
  %1653 = load i16, ptr %1652, align 2, !tbaa !31
  %1654 = zext i16 %1653 to i32
  %1655 = sub i32 %1591, %1654
  %1656 = lshr i32 %1655, 7
  %1657 = trunc i32 %1656 to i16
  %1658 = add i16 %1653, %1657
  store i16 %1658, ptr %1652, align 2, !tbaa !31
  %1659 = add nsw i32 %1582, %1596
  %1660 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm4, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1661 = sext i32 %1659 to i64
  %1662 = getelementptr inbounds i16, ptr %1660, i64 %1661
  store ptr %1662, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm4, i64 0, i32 2), align 8, !tbaa !114
  %1663 = load i16, ptr %1662, align 2, !tbaa !31
  %1664 = lshr i16 %1663, 4
  %1665 = zext i16 %1664 to i64
  %1666 = getelementptr inbounds i16, ptr %1603, i64 %1665
  %1667 = load i16, ptr %1666, align 2, !tbaa !31
  %1668 = add nsw i32 %1608, 4
  %1669 = sext i32 %1649 to i64
  %1670 = getelementptr inbounds i16, ptr %1611, i64 %1669
  store i16 %1667, ptr %1670, align 2, !tbaa !31
  %1671 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm5, i64 0, i32 2), align 8, !tbaa !114
  %1672 = load i16, ptr %1671, align 2, !tbaa !31
  %1673 = zext i16 %1672 to i32
  %1674 = sub i32 %1591, %1673
  %1675 = lshr i32 %1674, 7
  %1676 = trunc i32 %1675 to i16
  %1677 = add i16 %1672, %1676
  store i16 %1677, ptr %1671, align 2, !tbaa !31
  %1678 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm5, i64 0, i32 1), align 8, !tbaa !112
  %1679 = add nsw i32 %1678, %1596
  %1680 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm5, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1681 = sext i32 %1679 to i64
  %1682 = getelementptr inbounds i16, ptr %1680, i64 %1681
  store ptr %1682, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm5, i64 0, i32 2), align 8, !tbaa !114
  %1683 = load i16, ptr %1682, align 2, !tbaa !31
  %1684 = lshr i16 %1683, 4
  %1685 = zext i16 %1684 to i64
  %1686 = getelementptr inbounds i16, ptr %1603, i64 %1685
  %1687 = load i16, ptr %1686, align 2, !tbaa !31
  %1688 = add nsw i32 %1608, 5
  %1689 = sext i32 %1668 to i64
  %1690 = getelementptr inbounds i16, ptr %1611, i64 %1689
  store i16 %1687, ptr %1690, align 2, !tbaa !31
  %1691 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm6, i64 0, i32 2), align 8, !tbaa !114
  %1692 = load i16, ptr %1691, align 2, !tbaa !31
  %1693 = zext i16 %1692 to i32
  %1694 = sub i32 %1591, %1693
  %1695 = lshr i32 %1694, 7
  %1696 = trunc i32 %1695 to i16
  %1697 = add i16 %1692, %1696
  store i16 %1697, ptr %1691, align 2, !tbaa !31
  %1698 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm6, i64 0, i32 1), align 8, !tbaa !112
  %1699 = add nsw i32 %1698, %1596
  %1700 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm6, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1701 = sext i32 %1699 to i64
  %1702 = getelementptr inbounds i16, ptr %1700, i64 %1701
  store ptr %1702, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm6, i64 0, i32 2), align 8, !tbaa !114
  %1703 = load i16, ptr %1702, align 2, !tbaa !31
  %1704 = lshr i16 %1703, 4
  %1705 = zext i16 %1704 to i64
  %1706 = getelementptr inbounds i16, ptr %1603, i64 %1705
  %1707 = load i16, ptr %1706, align 2, !tbaa !31
  %1708 = add nsw i32 %1608, 6
  %1709 = sext i32 %1688 to i64
  %1710 = getelementptr inbounds i16, ptr %1611, i64 %1709
  store i16 %1707, ptr %1710, align 2, !tbaa !31
  %1711 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm7, i64 0, i32 2), align 8, !tbaa !114
  %1712 = load i16, ptr %1711, align 2, !tbaa !31
  %1713 = zext i16 %1712 to i32
  %1714 = sub i32 %1591, %1713
  %1715 = lshr i32 %1714, 7
  %1716 = trunc i32 %1715 to i16
  %1717 = add i16 %1712, %1716
  store i16 %1717, ptr %1711, align 2, !tbaa !31
  %1718 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm7, i64 0, i32 1), align 8, !tbaa !112
  %1719 = add nsw i32 %1718, %1596
  %1720 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm7, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %1721 = sext i32 %1719 to i64
  %1722 = getelementptr inbounds i16, ptr %1720, i64 %1721
  store ptr %1722, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ9model8bitR5MixeriE4scm7, i64 0, i32 2), align 8, !tbaa !114
  %1723 = load i16, ptr %1722, align 2, !tbaa !31
  %1724 = lshr i16 %1723, 4
  %1725 = zext i16 %1724 to i64
  %1726 = getelementptr inbounds i16, ptr %1603, i64 %1725
  %1727 = load i16, ptr %1726, align 2, !tbaa !31
  %1728 = add nsw i32 %1608, 7
  store i32 %1728, ptr %1607, align 8, !tbaa !64
  %1729 = sext i32 %1708 to i64
  %1730 = getelementptr inbounds i16, ptr %1611, i64 %1729
  store i16 %1727, ptr %1730, align 2, !tbaa !31
  %1731 = load i32, ptr @bpos, align 4, !tbaa !25
  %1732 = load i32, ptr @pos, align 4, !tbaa !25
  %1733 = add nsw i32 %1732, -1
  %1734 = load i32, ptr @buf, align 8, !tbaa !20
  %1735 = add nsw i32 %1734, -1
  %1736 = and i32 %1735, %1733
  %1737 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %1738 = sext i32 %1736 to i64
  %1739 = getelementptr inbounds i8, ptr %1737, i64 %1738
  %1740 = load i8, ptr %1739, align 1, !tbaa !9
  %1741 = zext i8 %1740 to i32
  %1742 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ9model8bitR5MixeriE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %1596, i32 noundef %1731, i32 noundef %1741, i32 noundef %1586)
  ret void

1743:                                             ; preds = %1579, %1577, %1575, %1573, %1571, %1569, %1567, %1565
  %1744 = phi ptr [ @_ZGVZ9model8bitR5MixeriE2cm, %1579 ], [ @_ZGVZ9model8bitR5MixeriE4scm7, %1577 ], [ @_ZGVZ9model8bitR5MixeriE4scm6, %1575 ], [ @_ZGVZ9model8bitR5MixeriE4scm5, %1573 ], [ @_ZGVZ9model8bitR5MixeriE4scm4, %1571 ], [ @_ZGVZ9model8bitR5MixeriE4scm3, %1569 ], [ @_ZGVZ9model8bitR5MixeriE4scm2, %1567 ], [ @_ZGVZ9model8bitR5MixeriE4scm1, %1565 ]
  %1745 = phi { ptr, i32 } [ %1580, %1579 ], [ %1578, %1577 ], [ %1576, %1575 ], [ %1574, %1573 ], [ %1572, %1571 ], [ %1570, %1569 ], [ %1568, %1567 ], [ %1566, %1565 ]
  tail call void @__cxa_guard_abort(ptr nonnull %1744) #39
  resume { ptr, i32 } %1745
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z8pgmModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 {
  %2 = alloca [32 x i8], align 16
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %2) #39
  %3 = load i32, ptr @bpos, align 4, !tbaa !25
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %125

5:                                                ; preds = %1
  %6 = load i32, ptr @pos, align 4, !tbaa !25
  %7 = add nsw i32 %6, -3
  %8 = load i32, ptr @buf, align 8, !tbaa !20
  %9 = add nsw i32 %8, -1
  %10 = and i32 %9, %7
  %11 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %12 = sext i32 %10 to i64
  %13 = getelementptr inbounds i8, ptr %11, i64 %12
  %14 = load i8, ptr %13, align 1, !tbaa !9
  %15 = icmp eq i8 %14, 80
  br i1 %15, label %16, label %30

16:                                               ; preds = %5
  %17 = add nsw i32 %6, -2
  %18 = and i32 %9, %17
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i8, ptr %11, i64 %19
  %21 = load i8, ptr %20, align 1, !tbaa !9
  %22 = icmp eq i8 %21, 53
  br i1 %22, label %23, label %30

23:                                               ; preds = %16
  %24 = add nsw i32 %6, -1
  %25 = and i32 %9, %24
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds i8, ptr %11, i64 %26
  %28 = load i8, ptr %27, align 1, !tbaa !9
  switch i8 %28, label %30 [
    i8 32, label %29
    i8 9, label %29
    i8 10, label %29
    i8 13, label %29
  ]

29:                                               ; preds = %23, %23, %23, %23
  store i32 %6, ptr @_ZZ8pgmModelR5MixerE3pgm, align 4, !tbaa !25
  store i32 0, ptr @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4, !tbaa !25
  store i32 0, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !25
  br label %189

30:                                               ; preds = %23, %16, %5
  %31 = load i32, ptr @_ZZ8pgmModelR5MixerE3pgm, align 4, !tbaa !25
  %32 = icmp ne i32 %31, 0
  %33 = load i32, ptr @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4
  %34 = icmp ne i32 %33, 3
  %35 = select i1 %32, i1 %34, i1 false
  br i1 %35, label %36, label %125

36:                                               ; preds = %30
  %37 = add nsw i32 %6, -1
  %38 = icmp slt i32 %31, %37
  %39 = icmp slt i32 %33, 3
  %40 = select i1 %38, i1 %39, i1 false
  br i1 %40, label %41, label %125

41:                                               ; preds = %36, %97
  %42 = phi i32 [ %98, %97 ], [ %6, %36 ]
  %43 = phi i32 [ %99, %97 ], [ %33, %36 ]
  %44 = phi ptr [ %100, %97 ], [ %11, %36 ]
  %45 = phi i32 [ %101, %97 ], [ %8, %36 ]
  %46 = phi i32 [ %104, %97 ], [ %37, %36 ]
  %47 = phi i32 [ %103, %97 ], [ %31, %36 ]
  %48 = add nsw i32 %45, -1
  %49 = tail call i32 @llvm.smax.i32(i32 %47, i32 %46)
  br label %50

50:                                               ; preds = %41, %58
  %51 = phi i32 [ %59, %58 ], [ %47, %41 ]
  %52 = and i32 %48, %51
  %53 = sext i32 %52 to i64
  %54 = getelementptr inbounds i8, ptr %44, i64 %53
  %55 = load i8, ptr %54, align 1, !tbaa !9
  switch i8 %55, label %69 [
    i8 32, label %56
    i8 9, label %56
    i8 10, label %56
    i8 13, label %56
    i8 35, label %60
  ]

56:                                               ; preds = %50, %50, %50, %50
  %57 = icmp eq i32 %51, %49
  br i1 %57, label %108, label %58

58:                                               ; preds = %56
  %59 = add i32 %51, 1
  br label %50, !llvm.loop !119

60:                                               ; preds = %50, %67
  %61 = phi i32 [ %62, %67 ], [ %51, %50 ]
  %62 = add nsw i32 %61, 1
  %63 = and i32 %62, %48
  %64 = sext i32 %63 to i64
  %65 = getelementptr inbounds i8, ptr %44, i64 %64
  %66 = load i8, ptr %65, align 1, !tbaa !9
  switch i8 %66, label %67 [
    i8 10, label %97
    i8 13, label %97
  ]

67:                                               ; preds = %60
  %68 = icmp slt i32 %62, %46
  br i1 %68, label %60, label %97, !llvm.loop !120

69:                                               ; preds = %50, %82
  %70 = phi i64 [ %83, %82 ], [ 0, %50 ]
  %71 = phi i32 [ %77, %82 ], [ %51, %50 ]
  %72 = and i32 %71, %48
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, ptr %44, i64 %73
  %75 = load i8, ptr %74, align 1, !tbaa !9
  %76 = getelementptr inbounds [32 x i8], ptr %2, i64 0, i64 %70
  store i8 %75, ptr %76, align 1, !tbaa !9
  %77 = add nsw i32 %71, 1
  %78 = and i32 %77, %48
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i8, ptr %44, i64 %79
  %81 = load i8, ptr %80, align 1, !tbaa !9
  switch i8 %81, label %82 [
    i8 32, label %87
    i8 9, label %87
    i8 10, label %87
    i8 13, label %87
  ]

82:                                               ; preds = %69
  %83 = add nuw nsw i64 %70, 1
  %84 = icmp slt i32 %77, %46
  %85 = icmp ult i64 %70, 31
  %86 = select i1 %84, i1 %85, i1 false
  br i1 %86, label %69, label %97, !llvm.loop !121

87:                                               ; preds = %69, %69, %69, %69
  %88 = call i64 @strtol(ptr nocapture noundef nonnull %2, ptr noundef null, i32 noundef 10) #39
  %89 = trunc i64 %88 to i32
  %90 = load i32, ptr @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4, !tbaa !25
  %91 = add nsw i32 %90, 1
  store i32 %91, ptr @_ZZ8pgmModelR5MixerE7pgm_ptr, align 4, !tbaa !25
  %92 = sext i32 %90 to i64
  %93 = getelementptr inbounds [3 x i32], ptr @_ZZ8pgmModelR5MixerE7pgm_hdr, i64 0, i64 %92
  store i32 %89, ptr %93, align 4, !tbaa !25
  store i32 %77, ptr @_ZZ8pgmModelR5MixerE3pgm, align 4, !tbaa !25
  %94 = load i32, ptr @buf, align 8, !tbaa !20
  %95 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %96 = load i32, ptr @pos, align 4, !tbaa !25
  br label %97

97:                                               ; preds = %60, %60, %67, %82, %87
  %98 = phi i32 [ %96, %87 ], [ %42, %82 ], [ %42, %67 ], [ %42, %60 ], [ %42, %60 ]
  %99 = phi i32 [ %91, %87 ], [ %43, %82 ], [ %43, %67 ], [ %43, %60 ], [ %43, %60 ]
  %100 = phi ptr [ %95, %87 ], [ %44, %82 ], [ %44, %67 ], [ %44, %60 ], [ %44, %60 ]
  %101 = phi i32 [ %94, %87 ], [ %45, %82 ], [ %45, %67 ], [ %45, %60 ], [ %45, %60 ]
  %102 = phi i32 [ %77, %87 ], [ %77, %82 ], [ %62, %67 ], [ %62, %60 ], [ %62, %60 ]
  %103 = add nsw i32 %102, 1
  %104 = add nsw i32 %98, -1
  %105 = icmp slt i32 %103, %104
  %106 = icmp slt i32 %99, 3
  %107 = select i1 %105, i1 %106, i1 false
  br i1 %107, label %41, label %108, !llvm.loop !122

108:                                              ; preds = %97, %56
  %109 = phi i32 [ %43, %56 ], [ %99, %97 ]
  %110 = phi i32 [ %42, %56 ], [ %98, %97 ]
  %111 = icmp eq i32 %109, 3
  br i1 %111, label %112, label %125

112:                                              ; preds = %108
  %113 = load i32, ptr getelementptr inbounds ([3 x i32], ptr @_ZZ8pgmModelR5MixerE7pgm_hdr, i64 0, i64 2), align 4, !tbaa !25
  %114 = icmp eq i32 %113, 255
  %115 = load i32, ptr @_ZZ8pgmModelR5MixerE7pgm_hdr, align 4
  %116 = icmp sgt i32 %115, 0
  %117 = select i1 %114, i1 %116, i1 false
  %118 = load i32, ptr getelementptr inbounds ([3 x i32], ptr @_ZZ8pgmModelR5MixerE7pgm_hdr, i64 0, i64 1), align 4
  %119 = icmp sgt i32 %118, 0
  %120 = select i1 %117, i1 %119, i1 false
  br i1 %120, label %121, label %125

121:                                              ; preds = %112
  store i32 %115, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !25
  %122 = mul nsw i32 %118, %115
  %123 = add nsw i32 %122, %110
  store i32 %123, ptr @_ZZ8pgmModelR5MixerE3eoi, align 4, !tbaa !25
  %124 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.6, i32 noundef %115, i32 noundef %118)
  br label %125

125:                                              ; preds = %36, %108, %121, %112, %30, %1
  %126 = load i32, ptr @pos, align 4, !tbaa !25
  %127 = load i32, ptr @_ZZ8pgmModelR5MixerE3eoi, align 4, !tbaa !25
  %128 = icmp sgt i32 %126, %127
  br i1 %128, label %129, label %130

129:                                              ; preds = %125
  store i32 0, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !25
  br label %189

130:                                              ; preds = %125
  %131 = load i32, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !25
  tail call void @_Z9model8bitR5Mixeri(ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %131)
  %132 = load i32, ptr @_ZZ8pgmModelR5MixerE3col, align 4, !tbaa !25
  %133 = add nsw i32 %132, 1
  %134 = icmp sgt i32 %132, 6
  %135 = select i1 %134, i32 0, i32 %133
  store i32 %135, ptr @_ZZ8pgmModelR5MixerE3col, align 4
  %136 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 7
  %137 = load i32, ptr %136, align 4, !tbaa !63
  %138 = add nsw i32 %137, 2
  %139 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 6
  %140 = load i32, ptr %139, align 8, !tbaa !62
  %141 = add nsw i32 %140, 1
  store i32 %141, ptr %139, align 8, !tbaa !62
  %142 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 3
  %143 = load ptr, ptr %142, align 8, !tbaa !61
  %144 = sext i32 %140 to i64
  %145 = getelementptr inbounds i32, ptr %143, i64 %144
  store i32 %138, ptr %145, align 4, !tbaa !25
  %146 = load i32, ptr %136, align 4, !tbaa !63
  %147 = add nsw i32 %146, 8
  store i32 %147, ptr %136, align 4, !tbaa !63
  %148 = add nsw i32 %147, %135
  %149 = load i32, ptr %139, align 8, !tbaa !62
  %150 = add nsw i32 %149, 1
  store i32 %150, ptr %139, align 8, !tbaa !62
  %151 = sext i32 %149 to i64
  %152 = getelementptr inbounds i32, ptr %143, i64 %151
  store i32 %148, ptr %152, align 4, !tbaa !25
  %153 = load i32, ptr %136, align 4, !tbaa !63
  %154 = add nsw i32 %153, 8
  store i32 %154, ptr %136, align 4, !tbaa !63
  %155 = load i32, ptr @_ZZ8pgmModelR5MixerE1w, align 4, !tbaa !25
  %156 = load i32, ptr @pos, align 4, !tbaa !25
  %157 = sub nsw i32 %156, %155
  %158 = load i32, ptr @buf, align 8, !tbaa !20
  %159 = add nsw i32 %158, -1
  %160 = and i32 %159, %157
  %161 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %162 = sext i32 %160 to i64
  %163 = getelementptr inbounds i8, ptr %161, i64 %162
  %164 = load i8, ptr %163, align 1, !tbaa !9
  %165 = zext i8 %164 to i32
  %166 = add nsw i32 %156, -1
  %167 = and i32 %159, %166
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i8, ptr %161, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !9
  %171 = zext i8 %170 to i32
  %172 = add nuw nsw i32 %171, %165
  %173 = lshr i32 %172, 4
  %174 = add nsw i32 %173, %154
  %175 = load i32, ptr %139, align 8, !tbaa !62
  %176 = add nsw i32 %175, 1
  store i32 %176, ptr %139, align 8, !tbaa !62
  %177 = sext i32 %175 to i64
  %178 = getelementptr inbounds i32, ptr %143, i64 %177
  store i32 %174, ptr %178, align 4, !tbaa !25
  %179 = load i32, ptr %136, align 4, !tbaa !63
  %180 = add nsw i32 %179, 32
  store i32 %180, ptr %136, align 4, !tbaa !63
  %181 = load i32, ptr @c0, align 4, !tbaa !25
  %182 = add nsw i32 %181, %180
  %183 = load i32, ptr %139, align 8, !tbaa !62
  %184 = add nsw i32 %183, 1
  store i32 %184, ptr %139, align 8, !tbaa !62
  %185 = sext i32 %183 to i64
  %186 = getelementptr inbounds i32, ptr %143, i64 %185
  store i32 %182, ptr %186, align 4, !tbaa !25
  %187 = load i32, ptr %136, align 4, !tbaa !63
  %188 = add nsw i32 %187, 256
  store i32 %188, ptr %136, align 4, !tbaa !63
  br label %189

189:                                              ; preds = %130, %129, %29
  %190 = phi i32 [ 0, %129 ], [ %155, %130 ], [ 0, %29 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %2) #39
  ret i32 %190
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z9bmpModel8R5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 {
  %2 = load i32, ptr @bpos, align 4, !tbaa !25
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %129

4:                                                ; preds = %1
  %5 = load i32, ptr @pos, align 4, !tbaa !25
  %6 = add i32 %5, -44
  %7 = load i32, ptr @buf, align 8, !tbaa !20
  %8 = add nsw i32 %7, -1
  %9 = and i32 %8, %6
  %10 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %11 = sext i32 %9 to i64
  %12 = getelementptr inbounds i8, ptr %10, i64 %11
  %13 = load i8, ptr %12, align 1, !tbaa !9
  %14 = zext i8 %13 to i32
  %15 = add i32 %5, -43
  %16 = and i32 %8, %15
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, ptr %10, i64 %17
  %19 = load i8, ptr %18, align 1, !tbaa !9
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 8
  %22 = or i32 %21, %14
  %23 = add i32 %5, -42
  %24 = and i32 %8, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, ptr %10, i64 %25
  %27 = load i8, ptr %26, align 1, !tbaa !9
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 16
  %30 = or i32 %22, %29
  %31 = add i32 %5, -41
  %32 = and i32 %8, %31
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, ptr %10, i64 %33
  %35 = load i8, ptr %34, align 1, !tbaa !9
  %36 = zext i8 %35 to i32
  %37 = shl nuw nsw i32 %36, 24
  %38 = or i32 %30, %37
  %39 = icmp ult i32 %38, 1079
  br i1 %39, label %40, label %119

40:                                               ; preds = %4
  %41 = add i32 %5, -40
  %42 = and i32 %8, %41
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, ptr %10, i64 %43
  %45 = load i8, ptr %44, align 1, !tbaa !9
  %46 = zext i8 %45 to i32
  %47 = add i32 %5, -39
  %48 = and i32 %8, %47
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, ptr %10, i64 %49
  %51 = load i8, ptr %50, align 1, !tbaa !9
  %52 = zext i8 %51 to i32
  %53 = shl nuw nsw i32 %52, 8
  %54 = or i32 %53, %46
  %55 = add i32 %5, -38
  %56 = and i32 %8, %55
  %57 = sext i32 %56 to i64
  %58 = getelementptr inbounds i8, ptr %10, i64 %57
  %59 = load i8, ptr %58, align 1, !tbaa !9
  %60 = zext i8 %59 to i32
  %61 = shl nuw nsw i32 %60, 16
  %62 = or i32 %54, %61
  %63 = add i32 %5, -37
  %64 = and i32 %8, %63
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds i8, ptr %10, i64 %65
  %67 = load i8, ptr %66, align 1, !tbaa !9
  %68 = zext i8 %67 to i32
  %69 = shl nuw nsw i32 %68, 24
  %70 = or i32 %62, %69
  %71 = icmp eq i32 %70, 40
  br i1 %71, label %72, label %119

72:                                               ; preds = %40
  %73 = add i32 %5, -24
  %74 = and i32 %8, %73
  %75 = sext i32 %74 to i64
  %76 = getelementptr inbounds i8, ptr %10, i64 %75
  %77 = load i8, ptr %76, align 1, !tbaa !9
  %78 = zext i8 %77 to i32
  %79 = add i32 %5, -23
  %80 = and i32 %8, %79
  %81 = sext i32 %80 to i64
  %82 = getelementptr inbounds i8, ptr %10, i64 %81
  %83 = load i8, ptr %82, align 1, !tbaa !9
  %84 = zext i8 %83 to i32
  %85 = shl nuw nsw i32 %84, 8
  %86 = or i32 %85, %78
  %87 = add i32 %5, -22
  %88 = and i32 %8, %87
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds i8, ptr %10, i64 %89
  %91 = load i8, ptr %90, align 1, !tbaa !9
  %92 = zext i8 %91 to i32
  %93 = shl nuw nsw i32 %92, 16
  %94 = or i32 %86, %93
  %95 = add i32 %5, -21
  %96 = and i32 %8, %95
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, ptr %10, i64 %97
  %99 = load i8, ptr %98, align 1, !tbaa !9
  %100 = zext i8 %99 to i32
  %101 = shl nuw nsw i32 %100, 24
  %102 = or i32 %94, %101
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %119

104:                                              ; preds = %72
  %105 = add nsw i32 %5, -26
  %106 = and i32 %8, %105
  %107 = sext i32 %106 to i64
  %108 = getelementptr inbounds i8, ptr %10, i64 %107
  %109 = load i8, ptr %108, align 1, !tbaa !9
  %110 = icmp eq i8 %109, 8
  br i1 %110, label %111, label %119

111:                                              ; preds = %104
  %112 = tail call noundef i32 @_Z2i4i(i32 noundef 36)
  store i32 %112, ptr @_ZZ9bmpModel8R5MixerE2w1, align 4, !tbaa !25
  %113 = tail call noundef i32 @_Z2i4i(i32 noundef 32)
  store i32 %113, ptr @_ZZ9bmpModel8R5MixerE1h, align 4, !tbaa !25
  %114 = load i32, ptr @pos, align 4, !tbaa !25
  %115 = tail call noundef i32 @_Z2i4i(i32 noundef 44)
  %116 = add i32 %114, -54
  %117 = add i32 %116, %115
  store i32 %117, ptr @_ZZ9bmpModel8R5MixerE4ibmp, align 4, !tbaa !25
  %118 = load i32, ptr @pos, align 4, !tbaa !25
  br label %119

119:                                              ; preds = %111, %104, %72, %40, %4
  %120 = phi i32 [ %118, %111 ], [ %5, %104 ], [ %5, %72 ], [ %5, %40 ], [ %5, %4 ]
  %121 = load i32, ptr @_ZZ9bmpModel8R5MixerE4ibmp, align 4, !tbaa !25
  %122 = icmp eq i32 %121, %120
  br i1 %122, label %123, label %129

123:                                              ; preds = %119
  %124 = load i32, ptr @_ZZ9bmpModel8R5MixerE2w1, align 4, !tbaa !25
  store i32 %124, ptr @_ZZ9bmpModel8R5MixerE1w, align 4, !tbaa !25
  %125 = load i32, ptr @_ZZ9bmpModel8R5MixerE1h, align 4, !tbaa !25
  %126 = mul nsw i32 %125, %124
  %127 = add nsw i32 %126, %120
  store i32 %127, ptr @_ZZ9bmpModel8R5MixerE3eoi, align 4, !tbaa !25
  %128 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.7, i32 noundef %124, i32 noundef %125)
  store i32 0, ptr @_ZZ9bmpModel8R5MixerE4ibmp, align 4, !tbaa !25
  br label %129

129:                                              ; preds = %119, %123, %1
  %130 = load i32, ptr @pos, align 4, !tbaa !25
  %131 = load i32, ptr @_ZZ9bmpModel8R5MixerE3eoi, align 4, !tbaa !25
  %132 = icmp sgt i32 %130, %131
  br i1 %132, label %133, label %134

133:                                              ; preds = %129
  store i32 0, ptr @_ZZ9bmpModel8R5MixerE1w, align 4, !tbaa !25
  br label %193

134:                                              ; preds = %129
  %135 = load i32, ptr @_ZZ9bmpModel8R5MixerE1w, align 4, !tbaa !25
  tail call void @_Z9model8bitR5Mixeri(ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %135)
  %136 = load i32, ptr @_ZZ9bmpModel8R5MixerE3col, align 4, !tbaa !25
  %137 = add nsw i32 %136, 1
  %138 = icmp sgt i32 %136, 6
  %139 = select i1 %138, i32 0, i32 %137
  store i32 %139, ptr @_ZZ9bmpModel8R5MixerE3col, align 4
  %140 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 7
  %141 = load i32, ptr %140, align 4, !tbaa !63
  %142 = add nsw i32 %141, 2
  %143 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 6
  %144 = load i32, ptr %143, align 8, !tbaa !62
  %145 = add nsw i32 %144, 1
  store i32 %145, ptr %143, align 8, !tbaa !62
  %146 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 3
  %147 = load ptr, ptr %146, align 8, !tbaa !61
  %148 = sext i32 %144 to i64
  %149 = getelementptr inbounds i32, ptr %147, i64 %148
  store i32 %142, ptr %149, align 4, !tbaa !25
  %150 = load i32, ptr %140, align 4, !tbaa !63
  %151 = add nsw i32 %150, 8
  store i32 %151, ptr %140, align 4, !tbaa !63
  %152 = add nsw i32 %151, %139
  %153 = load i32, ptr %143, align 8, !tbaa !62
  %154 = add nsw i32 %153, 1
  store i32 %154, ptr %143, align 8, !tbaa !62
  %155 = sext i32 %153 to i64
  %156 = getelementptr inbounds i32, ptr %147, i64 %155
  store i32 %152, ptr %156, align 4, !tbaa !25
  %157 = load i32, ptr %140, align 4, !tbaa !63
  %158 = add nsw i32 %157, 8
  store i32 %158, ptr %140, align 4, !tbaa !63
  %159 = load i32, ptr @_ZZ9bmpModel8R5MixerE1w, align 4, !tbaa !25
  %160 = load i32, ptr @pos, align 4, !tbaa !25
  %161 = sub nsw i32 %160, %159
  %162 = load i32, ptr @buf, align 8, !tbaa !20
  %163 = add nsw i32 %162, -1
  %164 = and i32 %163, %161
  %165 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %166 = sext i32 %164 to i64
  %167 = getelementptr inbounds i8, ptr %165, i64 %166
  %168 = load i8, ptr %167, align 1, !tbaa !9
  %169 = zext i8 %168 to i32
  %170 = add nsw i32 %160, -1
  %171 = and i32 %163, %170
  %172 = sext i32 %171 to i64
  %173 = getelementptr inbounds i8, ptr %165, i64 %172
  %174 = load i8, ptr %173, align 1, !tbaa !9
  %175 = zext i8 %174 to i32
  %176 = add nuw nsw i32 %175, %169
  %177 = lshr i32 %176, 4
  %178 = add nsw i32 %177, %158
  %179 = load i32, ptr %143, align 8, !tbaa !62
  %180 = add nsw i32 %179, 1
  store i32 %180, ptr %143, align 8, !tbaa !62
  %181 = sext i32 %179 to i64
  %182 = getelementptr inbounds i32, ptr %147, i64 %181
  store i32 %178, ptr %182, align 4, !tbaa !25
  %183 = load i32, ptr %140, align 4, !tbaa !63
  %184 = add nsw i32 %183, 32
  store i32 %184, ptr %140, align 4, !tbaa !63
  %185 = load i32, ptr @c0, align 4, !tbaa !25
  %186 = add nsw i32 %185, %184
  %187 = load i32, ptr %143, align 8, !tbaa !62
  %188 = add nsw i32 %187, 1
  store i32 %188, ptr %143, align 8, !tbaa !62
  %189 = sext i32 %187 to i64
  %190 = getelementptr inbounds i32, ptr %147, i64 %189
  store i32 %186, ptr %190, align 4, !tbaa !25
  %191 = load i32, ptr %140, align 4, !tbaa !63
  %192 = add nsw i32 %191, 256
  store i32 %192, ptr %140, align 4, !tbaa !63
  br label %193

193:                                              ; preds = %134, %133
  %194 = phi i32 [ 0, %133 ], [ %159, %134 ]
  ret i32 %194
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z9rgbModel8R5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 {
  %2 = load i32, ptr @bpos, align 4, !tbaa !25
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %77

4:                                                ; preds = %1
  %5 = load i32, ptr @pos, align 4, !tbaa !25
  %6 = add nsw i32 %5, -507
  %7 = load i32, ptr @buf, align 8, !tbaa !20
  %8 = add nsw i32 %7, -1
  %9 = and i32 %8, %6
  %10 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %11 = sext i32 %9 to i64
  %12 = getelementptr inbounds i8, ptr %10, i64 %11
  %13 = load i8, ptr %12, align 1, !tbaa !9
  %14 = icmp eq i8 %13, 1
  br i1 %14, label %15, label %77

15:                                               ; preds = %4
  %16 = add nsw i32 %5, -506
  %17 = and i32 %8, %16
  %18 = sext i32 %17 to i64
  %19 = getelementptr inbounds i8, ptr %10, i64 %18
  %20 = load i8, ptr %19, align 1, !tbaa !9
  %21 = icmp eq i8 %20, -38
  br i1 %21, label %22, label %77

22:                                               ; preds = %15
  %23 = add nsw i32 %5, -505
  %24 = and i32 %8, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, ptr %10, i64 %25
  %27 = load i8, ptr %26, align 1, !tbaa !9
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %77

29:                                               ; preds = %22
  %30 = add i32 %5, -496
  %31 = and i32 %8, %30
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds i8, ptr %10, i64 %32
  %34 = load i8, ptr %33, align 1, !tbaa !9
  %35 = zext i8 %34 to i32
  %36 = add i32 %5, -495
  %37 = and i32 %8, %36
  %38 = sext i32 %37 to i64
  %39 = getelementptr inbounds i8, ptr %10, i64 %38
  %40 = load i8, ptr %39, align 1, !tbaa !9
  %41 = zext i8 %40 to i32
  %42 = shl nuw nsw i32 %41, 8
  %43 = or i32 %42, %35
  %44 = icmp eq i32 %43, 1
  br i1 %44, label %45, label %77

45:                                               ; preds = %29
  %46 = add nsw i32 %5, -501
  %47 = and i32 %8, %46
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds i8, ptr %10, i64 %48
  %50 = load i8, ptr %49, align 1, !tbaa !9
  %51 = zext i8 %50 to i32
  %52 = shl nuw nsw i32 %51, 8
  %53 = add nsw i32 %5, -500
  %54 = and i32 %8, %53
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds i8, ptr %10, i64 %55
  %57 = load i8, ptr %56, align 1, !tbaa !9
  %58 = zext i8 %57 to i32
  %59 = or i32 %52, %58
  store i32 %59, ptr @_ZZ9rgbModel8R5MixerE1w, align 4, !tbaa !25
  %60 = add nsw i32 %5, -499
  %61 = and i32 %8, %60
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i8, ptr %10, i64 %62
  %64 = load i8, ptr %63, align 1, !tbaa !9
  %65 = zext i8 %64 to i32
  %66 = shl nuw nsw i32 %65, 8
  %67 = add nsw i32 %5, -498
  %68 = and i32 %8, %67
  %69 = sext i32 %68 to i64
  %70 = getelementptr inbounds i8, ptr %10, i64 %69
  %71 = load i8, ptr %70, align 1, !tbaa !9
  %72 = zext i8 %71 to i32
  %73 = or i32 %66, %72
  %74 = mul nuw nsw i32 %73, %59
  %75 = add nsw i32 %74, %5
  store i32 %75, ptr @_ZZ9rgbModel8R5MixerE3eoi, align 4, !tbaa !25
  %76 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.8, i32 noundef %59, i32 noundef %73)
  br label %77

77:                                               ; preds = %4, %15, %22, %29, %45, %1
  %78 = load i32, ptr @pos, align 4, !tbaa !25
  %79 = load i32, ptr @_ZZ9rgbModel8R5MixerE3eoi, align 4, !tbaa !25
  %80 = icmp sgt i32 %78, %79
  br i1 %80, label %81, label %82

81:                                               ; preds = %77
  store i32 0, ptr @_ZZ9rgbModel8R5MixerE1w, align 4, !tbaa !25
  br label %141

82:                                               ; preds = %77
  %83 = load i32, ptr @_ZZ9rgbModel8R5MixerE1w, align 4, !tbaa !25
  tail call void @_Z9model8bitR5Mixeri(ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %83)
  %84 = load i32, ptr @_ZZ9rgbModel8R5MixerE3col, align 4, !tbaa !25
  %85 = add nsw i32 %84, 1
  %86 = icmp sgt i32 %84, 6
  %87 = select i1 %86, i32 0, i32 %85
  store i32 %87, ptr @_ZZ9rgbModel8R5MixerE3col, align 4
  %88 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 7
  %89 = load i32, ptr %88, align 4, !tbaa !63
  %90 = add nsw i32 %89, 2
  %91 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 6
  %92 = load i32, ptr %91, align 8, !tbaa !62
  %93 = add nsw i32 %92, 1
  store i32 %93, ptr %91, align 8, !tbaa !62
  %94 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 5, i32 3
  %95 = load ptr, ptr %94, align 8, !tbaa !61
  %96 = sext i32 %92 to i64
  %97 = getelementptr inbounds i32, ptr %95, i64 %96
  store i32 %90, ptr %97, align 4, !tbaa !25
  %98 = load i32, ptr %88, align 4, !tbaa !63
  %99 = add nsw i32 %98, 8
  store i32 %99, ptr %88, align 4, !tbaa !63
  %100 = add nsw i32 %99, %87
  %101 = load i32, ptr %91, align 8, !tbaa !62
  %102 = add nsw i32 %101, 1
  store i32 %102, ptr %91, align 8, !tbaa !62
  %103 = sext i32 %101 to i64
  %104 = getelementptr inbounds i32, ptr %95, i64 %103
  store i32 %100, ptr %104, align 4, !tbaa !25
  %105 = load i32, ptr %88, align 4, !tbaa !63
  %106 = add nsw i32 %105, 8
  store i32 %106, ptr %88, align 4, !tbaa !63
  %107 = load i32, ptr @_ZZ9rgbModel8R5MixerE1w, align 4, !tbaa !25
  %108 = load i32, ptr @pos, align 4, !tbaa !25
  %109 = sub nsw i32 %108, %107
  %110 = load i32, ptr @buf, align 8, !tbaa !20
  %111 = add nsw i32 %110, -1
  %112 = and i32 %111, %109
  %113 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %114 = sext i32 %112 to i64
  %115 = getelementptr inbounds i8, ptr %113, i64 %114
  %116 = load i8, ptr %115, align 1, !tbaa !9
  %117 = zext i8 %116 to i32
  %118 = add nsw i32 %108, -1
  %119 = and i32 %111, %118
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8, ptr %113, i64 %120
  %122 = load i8, ptr %121, align 1, !tbaa !9
  %123 = zext i8 %122 to i32
  %124 = add nuw nsw i32 %123, %117
  %125 = lshr i32 %124, 4
  %126 = add nsw i32 %125, %106
  %127 = load i32, ptr %91, align 8, !tbaa !62
  %128 = add nsw i32 %127, 1
  store i32 %128, ptr %91, align 8, !tbaa !62
  %129 = sext i32 %127 to i64
  %130 = getelementptr inbounds i32, ptr %95, i64 %129
  store i32 %126, ptr %130, align 4, !tbaa !25
  %131 = load i32, ptr %88, align 4, !tbaa !63
  %132 = add nsw i32 %131, 32
  store i32 %132, ptr %88, align 4, !tbaa !63
  %133 = load i32, ptr @c0, align 4, !tbaa !25
  %134 = add nsw i32 %133, %132
  %135 = load i32, ptr %91, align 8, !tbaa !62
  %136 = add nsw i32 %135, 1
  store i32 %136, ptr %91, align 8, !tbaa !62
  %137 = sext i32 %135 to i64
  %138 = getelementptr inbounds i32, ptr %95, i64 %137
  store i32 %134, ptr %138, align 4, !tbaa !25
  %139 = load i32, ptr %88, align 4, !tbaa !63
  %140 = add nsw i32 %139, 256
  store i32 %140, ptr %88, align 4, !tbaa !63
  br label %141

141:                                              ; preds = %82, %81
  %142 = phi i32 [ 0, %81 ], [ %107, %82 ]
  ret i32 %142
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z4dumpPKci(ptr noundef %0, i32 noundef %1) local_unnamed_addr #19 {
  %3 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.9, ptr noundef %0)
  %4 = add nsw i32 %1, 2
  %5 = load i32, ptr @buf, align 8, !tbaa !20
  %6 = add nsw i32 %5, -1
  %7 = and i32 %6, %4
  %8 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %9 = sext i32 %7 to i64
  %10 = getelementptr inbounds i8, ptr %8, i64 %9
  %11 = load i8, ptr %10, align 1, !tbaa !9
  %12 = zext i8 %11 to i32
  %13 = shl nuw nsw i32 %12, 8
  %14 = add nsw i32 %1, 3
  %15 = and i32 %6, %14
  %16 = sext i32 %15 to i64
  %17 = getelementptr inbounds i8, ptr %8, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !9
  %19 = zext i8 %18 to i32
  %20 = or i32 %13, %19
  %21 = add nuw nsw i32 %20, 1
  br label %24

22:                                               ; preds = %24
  %23 = tail call i32 @putchar(i32 10)
  ret void

24:                                               ; preds = %2, %24
  %25 = phi i32 [ 0, %2 ], [ %36, %24 ]
  %26 = add nsw i32 %25, %1
  %27 = load i32, ptr @buf, align 8, !tbaa !20
  %28 = add nsw i32 %27, -1
  %29 = and i32 %28, %26
  %30 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %31 = sext i32 %29 to i64
  %32 = getelementptr inbounds i8, ptr %30, i64 %31
  %33 = load i8, ptr %32, align 1, !tbaa !9
  %34 = zext i8 %33 to i32
  %35 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.10, i32 noundef %34)
  %36 = add nuw nsw i32 %25, 1
  %37 = icmp eq i32 %25, %21
  br i1 %37, label %22, label %24, !llvm.loop !123
}

; Function Attrs: mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable
define dso_local void @_Z8update_kiiRiS_(i32 noundef %0, i32 noundef %1, ptr nocapture noundef nonnull align 4 dereferenceable(4) %2, ptr nocapture noundef nonnull align 4 dereferenceable(4) %3) local_unnamed_addr #20 {
  %5 = load i32, ptr %2, align 4, !tbaa !25
  %6 = add nsw i32 %5, -1
  %7 = mul nsw i32 %6, %0
  %8 = sub i32 9, %5
  %9 = mul nsw i32 %8, %1
  %10 = add nsw i32 %7, %9
  %11 = tail call i32 @llvm.abs.i32(i32 %10, i1 true)
  %12 = lshr i32 %11, 3
  %13 = mul nsw i32 %5, %0
  %14 = sub nsw i32 8, %5
  %15 = mul nsw i32 %14, %1
  %16 = add nsw i32 %15, %13
  %17 = tail call i32 @llvm.abs.i32(i32 %16, i1 true)
  %18 = lshr i32 %17, 3
  %19 = add nsw i32 %5, 1
  %20 = mul nsw i32 %19, %0
  %21 = sub i32 7, %5
  %22 = mul nsw i32 %21, %1
  %23 = add nsw i32 %20, %22
  %24 = tail call i32 @llvm.abs.i32(i32 %23, i1 true)
  %25 = lshr i32 %24, 3
  switch i32 %5, label %26 [
    i32 0, label %35
    i32 8, label %27
  ]

26:                                               ; preds = %4
  br label %27

27:                                               ; preds = %4, %26
  %28 = phi i32 [ %25, %26 ], [ %18, %4 ]
  %29 = icmp ult i32 %12, %18
  %30 = icmp ult i32 %12, %28
  %31 = select i1 %29, i1 %30, i1 false
  br i1 %31, label %32, label %35

32:                                               ; preds = %27
  %33 = load i32, ptr %3, align 4, !tbaa !25
  %34 = add nsw i32 %33, -1
  store i32 %34, ptr %3, align 4, !tbaa !25
  br label %35

35:                                               ; preds = %4, %32, %27
  %36 = phi i32 [ %28, %32 ], [ %28, %27 ], [ %25, %4 ]
  %37 = phi i32 [ %12, %32 ], [ %12, %27 ], [ %18, %4 ]
  %38 = icmp ult i32 %36, %37
  %39 = icmp ult i32 %36, %18
  %40 = select i1 %38, i1 %39, i1 false
  %41 = load i32, ptr %3, align 4, !tbaa !25
  br i1 %40, label %42, label %44

42:                                               ; preds = %35
  %43 = add nsw i32 %41, 1
  store i32 %43, ptr %3, align 4, !tbaa !25
  br label %44

44:                                               ; preds = %35, %42
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp slt i32 %45, -2
  br i1 %46, label %49, label %47

47:                                               ; preds = %44
  %48 = icmp sgt i32 %45, 2
  br i1 %48, label %49, label %53

49:                                               ; preds = %47, %44
  %50 = phi i32 [ -1, %44 ], [ 1, %47 ]
  %51 = load i32, ptr %2, align 4, !tbaa !25
  %52 = add nsw i32 %51, %50
  store i32 %52, ptr %2, align 4, !tbaa !25
  store i32 0, ptr %3, align 4, !tbaa !25
  br label %53

53:                                               ; preds = %49, %47
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z9jpegModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2ht acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2ht) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE2ht, i32 noundef 8)
          to label %8 unwind label %140

8:                                                ; preds = %7
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2ht, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2ht) #39
  br label %10

10:                                               ; preds = %8, %4, %1
  %11 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE3huf acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19, !prof !110

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE3huf) #39
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  invoke void @_ZN5ArrayI3HUFLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE3huf, i32 noundef 128)
          to label %17 unwind label %142

17:                                               ; preds = %16
  %18 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayI3HUFLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE3huf, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE3huf) #39
  br label %19

19:                                               ; preds = %17, %13, %10
  %20 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4hbuf acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %28, !prof !110

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4hbuf) #39
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  invoke void @_ZN5ArrayIhLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4hbuf, i32 noundef 2048)
          to label %26 unwind label %144

26:                                               ; preds = %25
  %27 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIhLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4hbuf, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4hbuf) #39
  br label %28

28:                                               ; preds = %26, %22, %19
  %29 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE5color acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %37, !prof !110

31:                                               ; preds = %28
  %32 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE5color) #39
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE5color, i32 noundef 10)
          to label %35 unwind label %146

35:                                               ; preds = %34
  %36 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE5color, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE5color) #39
  br label %37

37:                                               ; preds = %35, %31, %28
  %38 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4pred acquire, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %46, !prof !110

40:                                               ; preds = %37
  %41 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4pred) #39
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4pred, i32 noundef 4)
          to label %44 unwind label %148

44:                                               ; preds = %43
  %45 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4pred, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4pred) #39
  br label %46

46:                                               ; preds = %44, %40, %37
  %47 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4cbuf acquire, align 8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %55, !prof !110

49:                                               ; preds = %46
  %50 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4cbuf) #39
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  invoke void @_ZN3BufC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4cbuf, i32 noundef 131072)
          to label %53 unwind label %150

53:                                               ; preds = %52
  %54 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN3BufD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4cbuf, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4cbuf) #39
  br label %55

55:                                               ; preds = %53, %49, %46
  %56 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE5cbuf2 acquire, align 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %64, !prof !110

58:                                               ; preds = %55
  %59 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE5cbuf2) #39
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  invoke void @_ZN6IntBufC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE5cbuf2, i32 noundef 131072)
          to label %62 unwind label %152

62:                                               ; preds = %61
  %63 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN6IntBufD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE5cbuf2, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE5cbuf2) #39
  br label %64

64:                                               ; preds = %62, %58, %55
  %65 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE8adv_pred acquire, align 8
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %73, !prof !110

67:                                               ; preds = %64
  %68 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE8adv_pred) #39
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE8adv_pred, i32 noundef 7)
          to label %71 unwind label %154

71:                                               ; preds = %70
  %72 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE8adv_pred, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE8adv_pred) #39
  br label %73

73:                                               ; preds = %71, %67, %64
  %74 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4sumu acquire, align 8
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %76, label %82, !prof !110

76:                                               ; preds = %73
  %77 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4sumu) #39
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %82, label %79

79:                                               ; preds = %76
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4sumu, i32 noundef 8)
          to label %80 unwind label %156

80:                                               ; preds = %79
  %81 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4sumu, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4sumu) #39
  br label %82

82:                                               ; preds = %80, %76, %73
  %83 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4sumv acquire, align 8
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %91, !prof !110

85:                                               ; preds = %82
  %86 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4sumv) #39
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %91, label %88

88:                                               ; preds = %85
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4sumv, i32 noundef 8)
          to label %89 unwind label %158

89:                                               ; preds = %88
  %90 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4sumv, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4sumv) #39
  br label %91

91:                                               ; preds = %89, %85, %82
  %92 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2ls acquire, align 8
  %93 = icmp eq i8 %92, 0
  br i1 %93, label %94, label %100, !prof !110

94:                                               ; preds = %91
  %95 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2ls) #39
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %100, label %97

97:                                               ; preds = %94
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE2ls, i32 noundef 10)
          to label %98 unwind label %160

98:                                               ; preds = %97
  %99 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2ls, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2ls) #39
  br label %100

100:                                              ; preds = %98, %94, %91
  %101 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE3lcp acquire, align 8
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %103, label %109, !prof !110

103:                                              ; preds = %100
  %104 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE3lcp) #39
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %103
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE3lcp, i32 noundef 4)
          to label %107 unwind label %162

107:                                              ; preds = %106
  %108 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE3lcp, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE3lcp) #39
  br label %109

109:                                              ; preds = %107, %103, %100
  %110 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4zpos acquire, align 8
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %118, !prof !110

112:                                              ; preds = %109
  %113 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4zpos) #39
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %118, label %115

115:                                              ; preds = %112
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4zpos, i32 noundef 64)
          to label %116 unwind label %164

116:                                              ; preds = %115
  %117 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4zpos, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4zpos) #39
  br label %118

118:                                              ; preds = %116, %112, %109
  %119 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4qtab acquire, align 8
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %127, !prof !110

121:                                              ; preds = %118
  %122 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4qtab) #39
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %127, label %124

124:                                              ; preds = %121
  invoke void @_ZN5ArrayIhLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4qtab, i32 noundef 256)
          to label %125 unwind label %166

125:                                              ; preds = %124
  %126 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIhLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4qtab, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4qtab) #39
  br label %127

127:                                              ; preds = %125, %121, %118
  %128 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE4qmap acquire, align 8
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %130, label %136, !prof !110

130:                                              ; preds = %127
  %131 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE4qmap) #39
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %136, label %133

133:                                              ; preds = %130
  invoke void @_ZN5ArrayIiLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE4qmap, i32 noundef 10)
          to label %134 unwind label %168

134:                                              ; preds = %133
  %135 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIiLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE4qmap, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE4qmap) #39
  br label %136

136:                                              ; preds = %134, %130, %127
  %137 = load i32, ptr @bpos, align 4, !tbaa !25
  %138 = icmp eq i32 %137, 0
  %139 = load i32, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4
  br i1 %138, label %174, label %170

140:                                              ; preds = %7
  %141 = landingpad { ptr, i32 }
          cleanup
  br label %3465

142:                                              ; preds = %16
  %143 = landingpad { ptr, i32 }
          cleanup
  br label %3465

144:                                              ; preds = %25
  %145 = landingpad { ptr, i32 }
          cleanup
  br label %3465

146:                                              ; preds = %34
  %147 = landingpad { ptr, i32 }
          cleanup
  br label %3465

148:                                              ; preds = %43
  %149 = landingpad { ptr, i32 }
          cleanup
  br label %3465

150:                                              ; preds = %52
  %151 = landingpad { ptr, i32 }
          cleanup
  br label %3465

152:                                              ; preds = %61
  %153 = landingpad { ptr, i32 }
          cleanup
  br label %3465

154:                                              ; preds = %70
  %155 = landingpad { ptr, i32 }
          cleanup
  br label %3465

156:                                              ; preds = %79
  %157 = landingpad { ptr, i32 }
          cleanup
  br label %3465

158:                                              ; preds = %88
  %159 = landingpad { ptr, i32 }
          cleanup
  br label %3465

160:                                              ; preds = %97
  %161 = landingpad { ptr, i32 }
          cleanup
  br label %3465

162:                                              ; preds = %106
  %163 = landingpad { ptr, i32 }
          cleanup
  br label %3465

164:                                              ; preds = %115
  %165 = landingpad { ptr, i32 }
          cleanup
  br label %3465

166:                                              ; preds = %124
  %167 = landingpad { ptr, i32 }
          cleanup
  br label %3465

168:                                              ; preds = %133
  %169 = landingpad { ptr, i32 }
          cleanup
  br label %3465

170:                                              ; preds = %136
  %171 = icmp eq i32 %139, 0
  br i1 %171, label %172, label %182

172:                                              ; preds = %170
  %173 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

174:                                              ; preds = %136
  %175 = icmp sgt i32 %139, 1
  %176 = zext i1 %175 to i32
  store i32 %176, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  %177 = load i32, ptr @_ZZ9jpegModelR5MixerE3app, align 4
  %178 = icmp sgt i32 %177, 0
  br i1 %178, label %179, label %187

179:                                              ; preds = %174
  %180 = add nsw i32 %177, -1
  store i32 %180, ptr @_ZZ9jpegModelR5MixerE3app, align 4, !tbaa !25
  %181 = icmp eq i32 %180, 0
  br i1 %181, label %187, label %3463

182:                                              ; preds = %170
  %183 = load i32, ptr @_ZZ9jpegModelR5MixerE3app, align 4, !tbaa !25
  %184 = icmp sgt i32 %183, 0
  br i1 %184, label %185, label %473

185:                                              ; preds = %182
  %186 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

187:                                              ; preds = %174, %179
  %188 = phi i32 [ 0, %179 ], [ %177, %174 ]
  %189 = icmp eq i32 %139, 0
  br i1 %189, label %190, label %232

190:                                              ; preds = %187
  %191 = load i32, ptr @pos, align 4, !tbaa !25
  %192 = add nsw i32 %191, -4
  %193 = load i32, ptr @buf, align 8, !tbaa !20
  %194 = add nsw i32 %193, -1
  %195 = and i32 %194, %192
  %196 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %197 = sext i32 %195 to i64
  %198 = getelementptr inbounds i8, ptr %196, i64 %197
  %199 = load i8, ptr %198, align 1, !tbaa !9
  %200 = icmp eq i8 %199, -1
  br i1 %200, label %201, label %3463

201:                                              ; preds = %190
  %202 = add nsw i32 %191, -3
  %203 = and i32 %194, %202
  %204 = sext i32 %203 to i64
  %205 = getelementptr inbounds i8, ptr %196, i64 %204
  %206 = load i8, ptr %205, align 1, !tbaa !9
  %207 = icmp eq i8 %206, -40
  br i1 %207, label %208, label %3463

208:                                              ; preds = %201
  %209 = add nsw i32 %191, -2
  %210 = and i32 %194, %209
  %211 = sext i32 %210 to i64
  %212 = getelementptr inbounds i8, ptr %196, i64 %211
  %213 = load i8, ptr %212, align 1, !tbaa !9
  %214 = icmp eq i8 %213, -1
  br i1 %214, label %215, label %3463

215:                                              ; preds = %208
  %216 = add nsw i32 %191, -1
  %217 = and i32 %194, %216
  %218 = sext i32 %217 to i64
  %219 = getelementptr inbounds i8, ptr %196, i64 %218
  %220 = load i8, ptr %219, align 1, !tbaa !9
  %221 = and i8 %220, -16
  %222 = icmp eq i8 %221, -32
  br i1 %222, label %223, label %3463

223:                                              ; preds = %215
  store i32 1, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4data, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6htsize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE3sof, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE3sos, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE3app, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  store i32 -1, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !25
  %224 = load ptr, ptr getelementptr inbounds (%class.Array.7, ptr @_ZZ9jpegModelR5MixerE3huf, i64 0, i32 3), align 8, !tbaa !124
  %225 = load i32, ptr @_ZZ9jpegModelR5MixerE3huf, align 8, !tbaa !126
  %226 = sext i32 %225 to i64
  %227 = mul nsw i64 %226, 12
  tail call void @llvm.memset.p0.i64(ptr align 4 %224, i8 0, i64 %227, i1 false)
  %228 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4pred, i64 0, i32 3), align 8, !tbaa !61
  %229 = load i32, ptr @_ZZ9jpegModelR5MixerE4pred, align 8, !tbaa !51
  %230 = sext i32 %229 to i64
  %231 = shl nsw i64 %230, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %228, i8 0, i64 %231, i1 false)
  br label %232

232:                                              ; preds = %223, %187
  %233 = phi i32 [ 0, %223 ], [ %188, %187 ]
  %234 = load i32, ptr @_ZZ9jpegModelR5MixerE4data, align 4
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %258, label %236

236:                                              ; preds = %232
  %237 = load i32, ptr @pos, align 4, !tbaa !25
  %238 = add nsw i32 %237, -2
  %239 = load i32, ptr @buf, align 8, !tbaa !20
  %240 = add nsw i32 %239, -1
  %241 = and i32 %240, %238
  %242 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %243 = sext i32 %241 to i64
  %244 = getelementptr inbounds i8, ptr %242, i64 %243
  %245 = load i8, ptr %244, align 1, !tbaa !9
  %246 = icmp eq i8 %245, -1
  br i1 %246, label %247, label %260

247:                                              ; preds = %236
  %248 = add nsw i32 %237, -1
  %249 = and i32 %240, %248
  %250 = sext i32 %249 to i64
  %251 = getelementptr inbounds i8, ptr %242, i64 %250
  %252 = load i8, ptr %251, align 1, !tbaa !9
  %253 = icmp eq i8 %252, 0
  %254 = and i8 %252, -8
  %255 = icmp eq i8 %254, -48
  %256 = or i1 %253, %255
  br i1 %256, label %260, label %257

257:                                              ; preds = %247
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  br label %3463

258:                                              ; preds = %232
  %259 = icmp eq i32 %233, 0
  br i1 %259, label %265, label %260

260:                                              ; preds = %247, %236, %258
  %261 = load i32, ptr @pos, align 4, !tbaa !25
  %262 = load i32, ptr @buf, align 8, !tbaa !20
  %263 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %264 = add nsw i32 %262, -1
  br label %302

265:                                              ; preds = %258
  %266 = load i32, ptr @pos, align 4, !tbaa !25
  %267 = add nsw i32 %266, -4
  %268 = load i32, ptr @buf, align 8, !tbaa !20
  %269 = add nsw i32 %268, -1
  %270 = and i32 %269, %267
  %271 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %272 = sext i32 %270 to i64
  %273 = getelementptr inbounds i8, ptr %271, i64 %272
  %274 = load i8, ptr %273, align 1, !tbaa !9
  %275 = icmp eq i8 %274, -1
  br i1 %275, label %276, label %302

276:                                              ; preds = %265
  %277 = add nsw i32 %266, -3
  %278 = and i32 %269, %277
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds i8, ptr %271, i64 %279
  %281 = load i8, ptr %280, align 1, !tbaa !9
  %282 = and i8 %281, -16
  %283 = icmp eq i8 %282, -32
  %284 = icmp eq i8 %281, -2
  %285 = or i1 %284, %283
  br i1 %285, label %286, label %302

286:                                              ; preds = %276
  %287 = add nsw i32 %266, -2
  %288 = and i32 %269, %287
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds i8, ptr %271, i64 %289
  %291 = load i8, ptr %290, align 1, !tbaa !9
  %292 = zext i8 %291 to i32
  %293 = shl nuw nsw i32 %292, 8
  %294 = add nsw i32 %266, -1
  %295 = and i32 %269, %294
  %296 = sext i32 %295 to i64
  %297 = getelementptr inbounds i8, ptr %271, i64 %296
  %298 = load i8, ptr %297, align 1, !tbaa !9
  %299 = zext i8 %298 to i32
  %300 = or i32 %293, %299
  %301 = add nuw nsw i32 %300, 2
  store i32 %301, ptr @_ZZ9jpegModelR5MixerE3app, align 4, !tbaa !25
  br label %302

302:                                              ; preds = %260, %276, %286, %265
  %303 = phi i32 [ %264, %260 ], [ %269, %276 ], [ %269, %286 ], [ %269, %265 ]
  %304 = phi ptr [ %263, %260 ], [ %271, %276 ], [ %271, %286 ], [ %271, %265 ]
  %305 = phi i32 [ %261, %260 ], [ %266, %276 ], [ %266, %286 ], [ %266, %265 ]
  %306 = add nsw i32 %305, -5
  %307 = and i32 %303, %306
  %308 = sext i32 %307 to i64
  %309 = getelementptr inbounds i8, ptr %304, i64 %308
  %310 = load i8, ptr %309, align 1, !tbaa !9
  %311 = icmp eq i8 %310, -1
  %312 = add nsw i32 %305, -4
  %313 = and i32 %303, %312
  %314 = sext i32 %313 to i64
  br i1 %311, label %315, label %349

315:                                              ; preds = %302
  %316 = getelementptr inbounds i8, ptr %304, i64 %314
  %317 = load i8, ptr %316, align 1, !tbaa !9
  %318 = icmp eq i8 %317, -38
  br i1 %318, label %319, label %349

319:                                              ; preds = %315
  %320 = add i32 %305, -3
  %321 = and i32 %303, %320
  %322 = sext i32 %321 to i64
  %323 = getelementptr inbounds i8, ptr %304, i64 %322
  %324 = load i8, ptr %323, align 1, !tbaa !9
  %325 = zext i8 %324 to i32
  %326 = shl nuw nsw i32 %325, 8
  %327 = add nsw i32 %305, -2
  %328 = and i32 %303, %327
  %329 = sext i32 %328 to i64
  %330 = getelementptr inbounds i8, ptr %304, i64 %329
  %331 = load i8, ptr %330, align 1, !tbaa !9
  %332 = zext i8 %331 to i32
  %333 = or i32 %326, %332
  %334 = add nsw i32 %305, -1
  %335 = and i32 %303, %334
  %336 = sext i32 %335 to i64
  %337 = getelementptr inbounds i8, ptr %304, i64 %336
  %338 = load i8, ptr %337, align 1, !tbaa !9
  %339 = zext i8 %338 to i32
  %340 = shl nuw nsw i32 %339, 1
  %341 = add nuw nsw i32 %340, 6
  %342 = icmp eq i32 %333, %341
  %343 = icmp ne i8 %338, 0
  %344 = select i1 %342, i1 %343, i1 false
  %345 = icmp ult i8 %338, 5
  %346 = select i1 %344, i1 %345, i1 false
  br i1 %346, label %347, label %349

347:                                              ; preds = %319
  store i32 %306, ptr @_ZZ9jpegModelR5MixerE3sos, align 4, !tbaa !25
  %348 = add i32 %320, %333
  store i32 %348, ptr @_ZZ9jpegModelR5MixerE4data, align 4, !tbaa !25
  store i32 2, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  br label %349

349:                                              ; preds = %302, %319, %347, %315
  %350 = getelementptr inbounds i8, ptr %304, i64 %314
  %351 = load i8, ptr %350, align 1, !tbaa !9
  %352 = icmp eq i8 %351, -1
  br i1 %352, label %353, label %374

353:                                              ; preds = %349
  %354 = add nsw i32 %305, -3
  %355 = and i32 %303, %354
  %356 = sext i32 %355 to i64
  %357 = getelementptr inbounds i8, ptr %304, i64 %356
  %358 = load i8, ptr %357, align 1, !tbaa !9
  %359 = icmp eq i8 %358, -60
  %360 = load i32, ptr @_ZZ9jpegModelR5MixerE6htsize, align 4
  %361 = icmp slt i32 %360, 8
  %362 = select i1 %359, i1 %361, i1 false
  br i1 %362, label %363, label %374

363:                                              ; preds = %353
  %364 = add nuw nsw i32 %360, 1
  store i32 %364, ptr @_ZZ9jpegModelR5MixerE6htsize, align 4, !tbaa !25
  %365 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ht, i64 0, i32 3), align 8, !tbaa !61
  %366 = sext i32 %360 to i64
  %367 = getelementptr inbounds i32, ptr %365, i64 %366
  store i32 %312, ptr %367, align 4, !tbaa !25
  %368 = load i32, ptr @pos, align 4, !tbaa !25
  %369 = load i32, ptr @buf, align 8, !tbaa !20
  %370 = add nsw i32 %368, -4
  %371 = add nsw i32 %369, -1
  %372 = and i32 %371, %370
  %373 = sext i32 %372 to i64
  br label %374

374:                                              ; preds = %363, %353, %349
  %375 = phi i64 [ %373, %363 ], [ %314, %353 ], [ %314, %349 ]
  %376 = phi i32 [ %371, %363 ], [ %303, %353 ], [ %303, %349 ]
  %377 = phi i32 [ %370, %363 ], [ %312, %353 ], [ %312, %349 ]
  %378 = phi i32 [ %368, %363 ], [ %305, %353 ], [ %305, %349 ]
  %379 = getelementptr inbounds i8, ptr %304, i64 %375
  %380 = load i8, ptr %379, align 1, !tbaa !9
  %381 = icmp eq i8 %380, -1
  br i1 %381, label %382, label %405

382:                                              ; preds = %374
  %383 = add nsw i32 %378, -3
  %384 = and i32 %376, %383
  %385 = sext i32 %384 to i64
  %386 = getelementptr inbounds i8, ptr %304, i64 %385
  %387 = load i8, ptr %386, align 1, !tbaa !9
  switch i8 %387, label %405 [
    i8 -64, label %388
    i8 -37, label %389
  ]

388:                                              ; preds = %382
  store i32 %377, ptr @_ZZ9jpegModelR5MixerE3sof, align 4, !tbaa !25
  br label %405

389:                                              ; preds = %382
  %390 = add nsw i32 %378, -2
  %391 = and i32 %376, %390
  %392 = sext i32 %391 to i64
  %393 = getelementptr inbounds i8, ptr %304, i64 %392
  %394 = load i8, ptr %393, align 1, !tbaa !9
  %395 = zext i8 %394 to i32
  %396 = shl nuw nsw i32 %395, 8
  %397 = add i32 %378, -1
  %398 = and i32 %376, %397
  %399 = sext i32 %398 to i64
  %400 = getelementptr inbounds i8, ptr %304, i64 %399
  %401 = load i8, ptr %400, align 1, !tbaa !9
  %402 = zext i8 %401 to i32
  %403 = add i32 %397, %396
  %404 = add i32 %403, %402
  store i32 %404, ptr @_ZZ9jpegModelR5MixerE7dqt_end, align 4, !tbaa !25
  br label %445

405:                                              ; preds = %382, %388, %374
  %406 = load i32, ptr @_ZZ9jpegModelR5MixerE9dqt_state, align 4, !tbaa !25
  %407 = icmp sgt i32 %406, -1
  br i1 %407, label %408, label %450

408:                                              ; preds = %405
  %409 = load i32, ptr @_ZZ9jpegModelR5MixerE7dqt_end, align 4, !tbaa !25
  %410 = icmp slt i32 %378, %409
  br i1 %410, label %411, label %445

411:                                              ; preds = %408
  %412 = urem i32 %406, 65
  %413 = icmp eq i32 %412, 0
  %414 = add nsw i32 %378, -1
  %415 = and i32 %376, %414
  %416 = sext i32 %415 to i64
  %417 = getelementptr inbounds i8, ptr %304, i64 %416
  %418 = load i8, ptr %417, align 1, !tbaa !9
  br i1 %413, label %419, label %421

419:                                              ; preds = %411
  %420 = zext i8 %418 to i32
  store i32 %420, ptr @_ZZ9jpegModelR5MixerE4qnum, align 4, !tbaa !25
  br label %440

421:                                              ; preds = %411
  %422 = icmp eq i8 %418, 0
  br i1 %422, label %423, label %424

423:                                              ; preds = %421
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  br label %3463

424:                                              ; preds = %421
  %425 = load i32, ptr @_ZZ9jpegModelR5MixerE4qnum, align 4, !tbaa !25
  %426 = icmp ult i32 %425, 4
  br i1 %426, label %428, label %427

427:                                              ; preds = %424
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  br label %3463

428:                                              ; preds = %424
  %429 = add i8 %418, -1
  %430 = shl nuw nsw i32 %425, 6
  %431 = add nsw i32 %412, -1
  %432 = add nuw nsw i32 %431, %430
  %433 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4qtab, i64 0, i32 3), align 8, !tbaa !22
  %434 = zext i32 %432 to i64
  %435 = getelementptr inbounds i8, ptr %433, i64 %434
  store i8 %429, ptr %435, align 1, !tbaa !9
  %436 = load i32, ptr @pos, align 4, !tbaa !25
  %437 = load i32, ptr @buf, align 8, !tbaa !20
  %438 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %439 = add nsw i32 %437, -1
  br label %440

440:                                              ; preds = %428, %419
  %441 = phi i32 [ %439, %428 ], [ %376, %419 ]
  %442 = phi ptr [ %438, %428 ], [ %304, %419 ]
  %443 = phi i32 [ %436, %428 ], [ %378, %419 ]
  %444 = add nuw nsw i32 %406, 1
  br label %445

445:                                              ; preds = %408, %389, %440
  %446 = phi i32 [ %444, %440 ], [ 0, %389 ], [ -1, %408 ]
  %447 = phi i32 [ %441, %440 ], [ %376, %389 ], [ %376, %408 ]
  %448 = phi ptr [ %442, %440 ], [ %304, %389 ], [ %304, %408 ]
  %449 = phi i32 [ %443, %440 ], [ %378, %389 ], [ %378, %408 ]
  store i32 %446, ptr @_ZZ9jpegModelR5MixerE9dqt_state, align 4, !tbaa !25
  br label %450

450:                                              ; preds = %445, %405
  %451 = phi i32 [ %376, %405 ], [ %447, %445 ]
  %452 = phi ptr [ %304, %405 ], [ %448, %445 ]
  %453 = phi i32 [ %378, %405 ], [ %449, %445 ]
  %454 = add nsw i32 %453, -2
  %455 = and i32 %451, %454
  %456 = sext i32 %455 to i64
  %457 = getelementptr inbounds i8, ptr %452, i64 %456
  %458 = load i8, ptr %457, align 1, !tbaa !9
  %459 = icmp eq i8 %458, -1
  br i1 %459, label %460, label %473

460:                                              ; preds = %450
  %461 = add nsw i32 %453, -1
  %462 = and i32 %451, %461
  %463 = sext i32 %462 to i64
  %464 = getelementptr inbounds i8, ptr %452, i64 %463
  %465 = load i8, ptr %464, align 1, !tbaa !9
  %466 = and i8 %465, -8
  %467 = icmp eq i8 %466, -48
  br i1 %467, label %468, label %473

468:                                              ; preds = %460
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  store i32 -1, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !25
  %469 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4pred, i64 0, i32 3), align 8, !tbaa !61
  %470 = load i32, ptr @_ZZ9jpegModelR5MixerE4pred, align 8, !tbaa !51
  %471 = sext i32 %470 to i64
  %472 = shl nsw i64 %471, 2
  tail call void @llvm.memset.p0.i64(ptr align 4 %469, i8 0, i64 %472, i1 false)
  br label %473

473:                                              ; preds = %182, %450, %460, %468
  %474 = load i32, ptr @pos, align 4, !tbaa !25
  %475 = load i32, ptr @_ZZ9jpegModelR5MixerE4data, align 4, !tbaa !25
  %476 = icmp eq i32 %474, %475
  %477 = load i32, ptr @bpos, align 4
  %478 = icmp eq i32 %477, 1
  %479 = select i1 %476, i1 %478, i1 false
  br i1 %479, label %480, label %1113

480:                                              ; preds = %473
  %481 = load i32, ptr @_ZZ9jpegModelR5MixerE6htsize, align 4, !tbaa !25
  %482 = icmp sgt i32 %481, 0
  br i1 %482, label %483, label %485

483:                                              ; preds = %480
  %484 = zext i32 %481 to i64
  br label %490

485:                                              ; preds = %480
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %486 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

487:                                              ; preds = %827
  %488 = add nuw nsw i64 %491, 1
  %489 = icmp eq i64 %488, %484
  br i1 %489, label %831, label %490, !llvm.loop !127

490:                                              ; preds = %483, %487
  %491 = phi i64 [ 0, %483 ], [ %488, %487 ]
  %492 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ht, i64 0, i32 3), align 8, !tbaa !61
  %493 = getelementptr inbounds i32, ptr %492, i64 %491
  %494 = load i32, ptr %493, align 4, !tbaa !25
  %495 = add nsw i32 %494, 4
  %496 = add i32 %494, 2
  %497 = load i32, ptr @buf, align 8, !tbaa !20
  %498 = add nsw i32 %497, -1
  %499 = and i32 %498, %496
  %500 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %501 = sext i32 %499 to i64
  %502 = getelementptr inbounds i8, ptr %500, i64 %501
  %503 = load i8, ptr %502, align 1, !tbaa !9
  %504 = zext i8 %503 to i32
  %505 = shl nuw nsw i32 %504, 8
  %506 = add nsw i32 %494, 3
  %507 = and i32 %498, %506
  %508 = sext i32 %507 to i64
  %509 = getelementptr inbounds i8, ptr %500, i64 %508
  %510 = load i8, ptr %509, align 1, !tbaa !9
  %511 = zext i8 %510 to i32
  %512 = add i32 %496, %505
  %513 = add i32 %512, %511
  br label %514

514:                                              ; preds = %553, %490
  %515 = phi i32 [ 0, %490 ], [ %525, %553 ]
  %516 = phi i32 [ %495, %490 ], [ %793, %553 ]
  %517 = icmp slt i32 %516, %513
  %518 = load i32, ptr @pos, align 4
  %519 = icmp slt i32 %513, %518
  %520 = select i1 %517, i1 %519, i1 false
  %521 = add nsw i32 %516, 2100
  %522 = icmp slt i32 %513, %521
  %523 = select i1 %520, i1 %522, i1 false
  br i1 %523, label %524, label %827

524:                                              ; preds = %514
  %525 = add nuw nsw i32 %515, 1
  %526 = icmp eq i32 %515, 9
  br i1 %526, label %827, label %527

527:                                              ; preds = %524
  %528 = load i32, ptr @buf, align 8, !tbaa !20
  %529 = add nsw i32 %528, -1
  %530 = and i32 %529, %516
  %531 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %532 = sext i32 %530 to i64
  %533 = getelementptr inbounds i8, ptr %531, i64 %532
  %534 = load i8, ptr %533, align 1, !tbaa !9
  %535 = and i8 %534, 15
  %536 = icmp ugt i8 %534, 31
  %537 = icmp ugt i8 %535, 3
  %538 = or i1 %536, %537
  br i1 %538, label %827, label %539

539:                                              ; preds = %527
  %540 = zext i8 %535 to i32
  %541 = lshr i8 %534, 4
  %542 = zext i8 %541 to i32
  %543 = shl nuw nsw i32 %542, 6
  %544 = shl nuw nsw i32 %540, 4
  %545 = add nuw nsw i32 %543, %544
  %546 = load ptr, ptr getelementptr inbounds (%class.Array.7, ptr @_ZZ9jpegModelR5MixerE3huf, i64 0, i32 3), align 8, !tbaa !124
  %547 = zext i32 %545 to i64
  %548 = add nsw i32 %516, 17
  %549 = shl nuw nsw i32 %542, 10
  %550 = shl nuw nsw i32 %540, 8
  %551 = add nuw nsw i32 %549, %550
  %552 = zext i32 %551 to i64
  br label %796

553:                                              ; preds = %796
  %554 = getelementptr inbounds %struct.HUF, ptr %546, i64 %547
  %555 = load i32, ptr @buf, align 8, !tbaa !20
  %556 = add nsw i32 %555, -1
  %557 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  store i32 0, ptr %554, align 4, !tbaa !128
  %558 = add i32 %516, 1
  %559 = and i32 %556, %558
  %560 = sext i32 %559 to i64
  %561 = getelementptr inbounds i8, ptr %557, i64 %560
  %562 = load i8, ptr %561, align 1, !tbaa !9
  %563 = zext i8 %562 to i32
  %564 = getelementptr inbounds %struct.HUF, ptr %546, i64 %547, i32 1
  store i32 %563, ptr %564, align 4, !tbaa !130
  %565 = getelementptr inbounds %struct.HUF, ptr %546, i64 %547, i32 2
  store i32 %551, ptr %565, align 4, !tbaa !131
  %566 = load i8, ptr %561, align 1, !tbaa !9
  %567 = zext i8 %566 to i32
  %568 = add nsw i32 %548, %567
  %569 = or i32 %551, %567
  %570 = shl nuw nsw i32 %563, 1
  %571 = getelementptr inbounds %struct.HUF, ptr %554, i64 1
  store i32 %570, ptr %571, align 4, !tbaa !128
  %572 = add i32 %516, 2
  %573 = and i32 %556, %572
  %574 = sext i32 %573 to i64
  %575 = getelementptr inbounds i8, ptr %557, i64 %574
  %576 = load i8, ptr %575, align 1, !tbaa !9
  %577 = zext i8 %576 to i32
  %578 = add nuw nsw i32 %570, %577
  %579 = getelementptr inbounds %struct.HUF, ptr %571, i64 0, i32 1
  store i32 %578, ptr %579, align 4, !tbaa !130
  %580 = getelementptr inbounds %struct.HUF, ptr %571, i64 0, i32 2
  store i32 %569, ptr %580, align 4, !tbaa !131
  %581 = load i8, ptr %575, align 1, !tbaa !9
  %582 = zext i8 %581 to i32
  %583 = add nsw i32 %568, %582
  %584 = add nuw nsw i32 %569, %582
  %585 = shl nuw nsw i32 %578, 1
  %586 = getelementptr inbounds %struct.HUF, ptr %554, i64 2
  store i32 %585, ptr %586, align 4, !tbaa !128
  %587 = add i32 %516, 3
  %588 = and i32 %556, %587
  %589 = sext i32 %588 to i64
  %590 = getelementptr inbounds i8, ptr %557, i64 %589
  %591 = load i8, ptr %590, align 1, !tbaa !9
  %592 = zext i8 %591 to i32
  %593 = add nuw nsw i32 %585, %592
  %594 = getelementptr inbounds %struct.HUF, ptr %586, i64 0, i32 1
  store i32 %593, ptr %594, align 4, !tbaa !130
  %595 = getelementptr inbounds %struct.HUF, ptr %586, i64 0, i32 2
  store i32 %584, ptr %595, align 4, !tbaa !131
  %596 = load i8, ptr %590, align 1, !tbaa !9
  %597 = zext i8 %596 to i32
  %598 = add nsw i32 %583, %597
  %599 = add nuw nsw i32 %584, %597
  %600 = shl nuw nsw i32 %593, 1
  %601 = getelementptr inbounds %struct.HUF, ptr %554, i64 3
  store i32 %600, ptr %601, align 4, !tbaa !128
  %602 = add i32 %516, 4
  %603 = and i32 %556, %602
  %604 = sext i32 %603 to i64
  %605 = getelementptr inbounds i8, ptr %557, i64 %604
  %606 = load i8, ptr %605, align 1, !tbaa !9
  %607 = zext i8 %606 to i32
  %608 = add nuw nsw i32 %600, %607
  %609 = getelementptr inbounds %struct.HUF, ptr %601, i64 0, i32 1
  store i32 %608, ptr %609, align 4, !tbaa !130
  %610 = getelementptr inbounds %struct.HUF, ptr %601, i64 0, i32 2
  store i32 %599, ptr %610, align 4, !tbaa !131
  %611 = load i8, ptr %605, align 1, !tbaa !9
  %612 = zext i8 %611 to i32
  %613 = add nsw i32 %598, %612
  %614 = add nuw nsw i32 %599, %612
  %615 = shl nuw nsw i32 %608, 1
  %616 = getelementptr inbounds %struct.HUF, ptr %554, i64 4
  store i32 %615, ptr %616, align 4, !tbaa !128
  %617 = add i32 %516, 5
  %618 = and i32 %556, %617
  %619 = sext i32 %618 to i64
  %620 = getelementptr inbounds i8, ptr %557, i64 %619
  %621 = load i8, ptr %620, align 1, !tbaa !9
  %622 = zext i8 %621 to i32
  %623 = add nuw nsw i32 %615, %622
  %624 = getelementptr inbounds %struct.HUF, ptr %616, i64 0, i32 1
  store i32 %623, ptr %624, align 4, !tbaa !130
  %625 = getelementptr inbounds %struct.HUF, ptr %616, i64 0, i32 2
  store i32 %614, ptr %625, align 4, !tbaa !131
  %626 = load i8, ptr %620, align 1, !tbaa !9
  %627 = zext i8 %626 to i32
  %628 = add nsw i32 %613, %627
  %629 = add nuw nsw i32 %614, %627
  %630 = shl nuw nsw i32 %623, 1
  %631 = getelementptr inbounds %struct.HUF, ptr %554, i64 5
  store i32 %630, ptr %631, align 4, !tbaa !128
  %632 = add i32 %516, 6
  %633 = and i32 %556, %632
  %634 = sext i32 %633 to i64
  %635 = getelementptr inbounds i8, ptr %557, i64 %634
  %636 = load i8, ptr %635, align 1, !tbaa !9
  %637 = zext i8 %636 to i32
  %638 = add nuw nsw i32 %630, %637
  %639 = getelementptr inbounds %struct.HUF, ptr %631, i64 0, i32 1
  store i32 %638, ptr %639, align 4, !tbaa !130
  %640 = getelementptr inbounds %struct.HUF, ptr %631, i64 0, i32 2
  store i32 %629, ptr %640, align 4, !tbaa !131
  %641 = load i8, ptr %635, align 1, !tbaa !9
  %642 = zext i8 %641 to i32
  %643 = add nsw i32 %628, %642
  %644 = add nuw nsw i32 %629, %642
  %645 = shl nuw nsw i32 %638, 1
  %646 = getelementptr inbounds %struct.HUF, ptr %554, i64 6
  store i32 %645, ptr %646, align 4, !tbaa !128
  %647 = add i32 %516, 7
  %648 = and i32 %556, %647
  %649 = sext i32 %648 to i64
  %650 = getelementptr inbounds i8, ptr %557, i64 %649
  %651 = load i8, ptr %650, align 1, !tbaa !9
  %652 = zext i8 %651 to i32
  %653 = add nuw nsw i32 %645, %652
  %654 = getelementptr inbounds %struct.HUF, ptr %646, i64 0, i32 1
  store i32 %653, ptr %654, align 4, !tbaa !130
  %655 = getelementptr inbounds %struct.HUF, ptr %646, i64 0, i32 2
  store i32 %644, ptr %655, align 4, !tbaa !131
  %656 = load i8, ptr %650, align 1, !tbaa !9
  %657 = zext i8 %656 to i32
  %658 = add nsw i32 %643, %657
  %659 = add nuw nsw i32 %644, %657
  %660 = shl nuw nsw i32 %653, 1
  %661 = getelementptr inbounds %struct.HUF, ptr %554, i64 7
  store i32 %660, ptr %661, align 4, !tbaa !128
  %662 = add i32 %516, 8
  %663 = and i32 %556, %662
  %664 = sext i32 %663 to i64
  %665 = getelementptr inbounds i8, ptr %557, i64 %664
  %666 = load i8, ptr %665, align 1, !tbaa !9
  %667 = zext i8 %666 to i32
  %668 = add nuw nsw i32 %660, %667
  %669 = getelementptr inbounds %struct.HUF, ptr %661, i64 0, i32 1
  store i32 %668, ptr %669, align 4, !tbaa !130
  %670 = getelementptr inbounds %struct.HUF, ptr %661, i64 0, i32 2
  store i32 %659, ptr %670, align 4, !tbaa !131
  %671 = load i8, ptr %665, align 1, !tbaa !9
  %672 = zext i8 %671 to i32
  %673 = add nsw i32 %658, %672
  %674 = add nuw nsw i32 %659, %672
  %675 = shl nuw nsw i32 %668, 1
  %676 = getelementptr inbounds %struct.HUF, ptr %554, i64 8
  store i32 %675, ptr %676, align 4, !tbaa !128
  %677 = add i32 %516, 9
  %678 = and i32 %556, %677
  %679 = sext i32 %678 to i64
  %680 = getelementptr inbounds i8, ptr %557, i64 %679
  %681 = load i8, ptr %680, align 1, !tbaa !9
  %682 = zext i8 %681 to i32
  %683 = add nuw nsw i32 %675, %682
  %684 = getelementptr inbounds %struct.HUF, ptr %676, i64 0, i32 1
  store i32 %683, ptr %684, align 4, !tbaa !130
  %685 = getelementptr inbounds %struct.HUF, ptr %676, i64 0, i32 2
  store i32 %674, ptr %685, align 4, !tbaa !131
  %686 = load i8, ptr %680, align 1, !tbaa !9
  %687 = zext i8 %686 to i32
  %688 = add nsw i32 %673, %687
  %689 = add nuw nsw i32 %674, %687
  %690 = shl nuw nsw i32 %683, 1
  %691 = getelementptr inbounds %struct.HUF, ptr %554, i64 9
  store i32 %690, ptr %691, align 4, !tbaa !128
  %692 = add i32 %516, 10
  %693 = and i32 %556, %692
  %694 = sext i32 %693 to i64
  %695 = getelementptr inbounds i8, ptr %557, i64 %694
  %696 = load i8, ptr %695, align 1, !tbaa !9
  %697 = zext i8 %696 to i32
  %698 = add nuw nsw i32 %690, %697
  %699 = getelementptr inbounds %struct.HUF, ptr %691, i64 0, i32 1
  store i32 %698, ptr %699, align 4, !tbaa !130
  %700 = getelementptr inbounds %struct.HUF, ptr %691, i64 0, i32 2
  store i32 %689, ptr %700, align 4, !tbaa !131
  %701 = load i8, ptr %695, align 1, !tbaa !9
  %702 = zext i8 %701 to i32
  %703 = add nsw i32 %688, %702
  %704 = add nuw nsw i32 %689, %702
  %705 = shl nuw nsw i32 %698, 1
  %706 = getelementptr inbounds %struct.HUF, ptr %554, i64 10
  store i32 %705, ptr %706, align 4, !tbaa !128
  %707 = add i32 %516, 11
  %708 = and i32 %556, %707
  %709 = sext i32 %708 to i64
  %710 = getelementptr inbounds i8, ptr %557, i64 %709
  %711 = load i8, ptr %710, align 1, !tbaa !9
  %712 = zext i8 %711 to i32
  %713 = add nuw nsw i32 %705, %712
  %714 = getelementptr inbounds %struct.HUF, ptr %706, i64 0, i32 1
  store i32 %713, ptr %714, align 4, !tbaa !130
  %715 = getelementptr inbounds %struct.HUF, ptr %706, i64 0, i32 2
  store i32 %704, ptr %715, align 4, !tbaa !131
  %716 = load i8, ptr %710, align 1, !tbaa !9
  %717 = zext i8 %716 to i32
  %718 = add nsw i32 %703, %717
  %719 = add nuw nsw i32 %704, %717
  %720 = shl nuw nsw i32 %713, 1
  %721 = getelementptr inbounds %struct.HUF, ptr %554, i64 11
  store i32 %720, ptr %721, align 4, !tbaa !128
  %722 = add i32 %516, 12
  %723 = and i32 %556, %722
  %724 = sext i32 %723 to i64
  %725 = getelementptr inbounds i8, ptr %557, i64 %724
  %726 = load i8, ptr %725, align 1, !tbaa !9
  %727 = zext i8 %726 to i32
  %728 = add nuw nsw i32 %720, %727
  %729 = getelementptr inbounds %struct.HUF, ptr %721, i64 0, i32 1
  store i32 %728, ptr %729, align 4, !tbaa !130
  %730 = getelementptr inbounds %struct.HUF, ptr %721, i64 0, i32 2
  store i32 %719, ptr %730, align 4, !tbaa !131
  %731 = load i8, ptr %725, align 1, !tbaa !9
  %732 = zext i8 %731 to i32
  %733 = add nsw i32 %718, %732
  %734 = add nuw nsw i32 %719, %732
  %735 = shl nuw nsw i32 %728, 1
  %736 = getelementptr inbounds %struct.HUF, ptr %554, i64 12
  store i32 %735, ptr %736, align 4, !tbaa !128
  %737 = add i32 %516, 13
  %738 = and i32 %556, %737
  %739 = sext i32 %738 to i64
  %740 = getelementptr inbounds i8, ptr %557, i64 %739
  %741 = load i8, ptr %740, align 1, !tbaa !9
  %742 = zext i8 %741 to i32
  %743 = add nuw nsw i32 %735, %742
  %744 = getelementptr inbounds %struct.HUF, ptr %736, i64 0, i32 1
  store i32 %743, ptr %744, align 4, !tbaa !130
  %745 = getelementptr inbounds %struct.HUF, ptr %736, i64 0, i32 2
  store i32 %734, ptr %745, align 4, !tbaa !131
  %746 = load i8, ptr %740, align 1, !tbaa !9
  %747 = zext i8 %746 to i32
  %748 = add nsw i32 %733, %747
  %749 = add nuw nsw i32 %734, %747
  %750 = shl nuw nsw i32 %743, 1
  %751 = getelementptr inbounds %struct.HUF, ptr %554, i64 13
  store i32 %750, ptr %751, align 4, !tbaa !128
  %752 = add i32 %516, 14
  %753 = and i32 %556, %752
  %754 = sext i32 %753 to i64
  %755 = getelementptr inbounds i8, ptr %557, i64 %754
  %756 = load i8, ptr %755, align 1, !tbaa !9
  %757 = zext i8 %756 to i32
  %758 = add nuw nsw i32 %750, %757
  %759 = getelementptr inbounds %struct.HUF, ptr %751, i64 0, i32 1
  store i32 %758, ptr %759, align 4, !tbaa !130
  %760 = getelementptr inbounds %struct.HUF, ptr %751, i64 0, i32 2
  store i32 %749, ptr %760, align 4, !tbaa !131
  %761 = load i8, ptr %755, align 1, !tbaa !9
  %762 = zext i8 %761 to i32
  %763 = add nsw i32 %748, %762
  %764 = add nuw nsw i32 %749, %762
  %765 = shl nuw nsw i32 %758, 1
  %766 = getelementptr inbounds %struct.HUF, ptr %554, i64 14
  store i32 %765, ptr %766, align 4, !tbaa !128
  %767 = add i32 %516, 15
  %768 = and i32 %556, %767
  %769 = sext i32 %768 to i64
  %770 = getelementptr inbounds i8, ptr %557, i64 %769
  %771 = load i8, ptr %770, align 1, !tbaa !9
  %772 = zext i8 %771 to i32
  %773 = add nuw nsw i32 %765, %772
  %774 = getelementptr inbounds %struct.HUF, ptr %766, i64 0, i32 1
  store i32 %773, ptr %774, align 4, !tbaa !130
  %775 = getelementptr inbounds %struct.HUF, ptr %766, i64 0, i32 2
  store i32 %764, ptr %775, align 4, !tbaa !131
  %776 = load i8, ptr %770, align 1, !tbaa !9
  %777 = zext i8 %776 to i32
  %778 = add nsw i32 %763, %777
  %779 = add nuw nsw i32 %764, %777
  %780 = shl nuw nsw i32 %773, 1
  %781 = getelementptr inbounds %struct.HUF, ptr %554, i64 15
  store i32 %780, ptr %781, align 4, !tbaa !128
  %782 = add i32 %516, 16
  %783 = and i32 %556, %782
  %784 = sext i32 %783 to i64
  %785 = getelementptr inbounds i8, ptr %557, i64 %784
  %786 = load i8, ptr %785, align 1, !tbaa !9
  %787 = zext i8 %786 to i32
  %788 = add nuw nsw i32 %780, %787
  %789 = getelementptr inbounds %struct.HUF, ptr %781, i64 0, i32 1
  store i32 %788, ptr %789, align 4, !tbaa !130
  %790 = getelementptr inbounds %struct.HUF, ptr %781, i64 0, i32 2
  store i32 %779, ptr %790, align 4, !tbaa !131
  %791 = load i8, ptr %785, align 1, !tbaa !9
  %792 = zext i8 %791 to i32
  %793 = add nsw i32 %778, %792
  %794 = add nuw nsw i32 %779, %792
  %795 = icmp ult i32 %794, 2048
  br i1 %795, label %514, label %825

796:                                              ; preds = %796, %539
  %797 = phi i64 [ 0, %539 ], [ %823, %796 ]
  %798 = trunc i64 %797 to i32
  %799 = add nsw i32 %548, %798
  %800 = load i32, ptr @buf, align 8, !tbaa !20
  %801 = add nsw i32 %800, -1
  %802 = and i32 %801, %799
  %803 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %804 = sext i32 %802 to i64
  %805 = getelementptr inbounds i8, ptr %803, i64 %804
  %806 = load i8, ptr %805, align 1, !tbaa !9
  %807 = add nuw nsw i64 %797, %552
  %808 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4hbuf, i64 0, i32 3), align 8, !tbaa !22
  %809 = getelementptr inbounds i8, ptr %808, i64 %807
  store i8 %806, ptr %809, align 1, !tbaa !9
  %810 = or i64 %797, 1
  %811 = trunc i64 %810 to i32
  %812 = add nsw i32 %548, %811
  %813 = load i32, ptr @buf, align 8, !tbaa !20
  %814 = add nsw i32 %813, -1
  %815 = and i32 %814, %812
  %816 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %817 = sext i32 %815 to i64
  %818 = getelementptr inbounds i8, ptr %816, i64 %817
  %819 = load i8, ptr %818, align 1, !tbaa !9
  %820 = add nuw nsw i64 %810, %552
  %821 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4hbuf, i64 0, i32 3), align 8, !tbaa !22
  %822 = getelementptr inbounds i8, ptr %821, i64 %820
  store i8 %819, ptr %822, align 1, !tbaa !9
  %823 = add nuw nsw i64 %797, 2
  %824 = icmp eq i64 %823, 256
  br i1 %824, label %553, label %796, !llvm.loop !132

825:                                              ; preds = %553
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %826 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

827:                                              ; preds = %527, %514, %524
  %828 = icmp eq i32 %516, %513
  br i1 %828, label %487, label %829

829:                                              ; preds = %827
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %830 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

831:                                              ; preds = %487
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  store i32 -1, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !25
  %832 = load i32, ptr @_ZZ9jpegModelR5MixerE3sof, align 4, !tbaa !25
  %833 = icmp eq i32 %832, 0
  %834 = load i32, ptr @_ZZ9jpegModelR5MixerE3sos, align 4
  %835 = icmp ne i32 %834, 0
  %836 = select i1 %833, i1 %835, i1 false
  br i1 %836, label %837, label %839

837:                                              ; preds = %831
  %838 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

839:                                              ; preds = %831
  %840 = add nsw i32 %834, 4
  %841 = load i32, ptr @buf, align 8, !tbaa !20
  %842 = add nsw i32 %841, -1
  %843 = and i32 %842, %840
  %844 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %845 = sext i32 %843 to i64
  %846 = getelementptr inbounds i8, ptr %844, i64 %845
  %847 = load i8, ptr %846, align 1, !tbaa !9
  %848 = zext i8 %847 to i32
  %849 = add nsw i32 %832, 9
  %850 = and i32 %842, %849
  %851 = sext i32 %850 to i64
  %852 = getelementptr inbounds i8, ptr %844, i64 %851
  %853 = load i8, ptr %852, align 1, !tbaa !9
  %854 = zext i8 %853 to i32
  %855 = icmp ult i8 %847, 5
  %856 = icmp ult i8 %853, 5
  %857 = select i1 %855, i1 %856, i1 false
  br i1 %857, label %860, label %858

858:                                              ; preds = %839
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %859 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

860:                                              ; preds = %839
  store i32 0, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  %861 = icmp eq i8 %847, 0
  br i1 %861, label %988, label %862

862:                                              ; preds = %860
  %863 = icmp eq i8 %853, 0
  %864 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4
  br i1 %863, label %988, label %865

865:                                              ; preds = %862, %942
  %866 = phi i32 [ %945, %942 ], [ 0, %862 ]
  %867 = phi i32 [ %944, %942 ], [ 0, %862 ]
  %868 = phi i32 [ %943, %942 ], [ 0, %862 ]
  %869 = shl nuw nsw i32 %866, 1
  %870 = add nsw i32 %869, %834
  %871 = add nsw i32 %870, 5
  %872 = add nsw i32 %870, 6
  br label %873

873:                                              ; preds = %865, %956
  %874 = phi i32 [ %868, %865 ], [ %957, %956 ]
  %875 = phi i1 [ true, %865 ], [ %961, %956 ]
  %876 = phi i32 [ %867, %865 ], [ %959, %956 ]
  %877 = phi i32 [ 0, %865 ], [ %960, %956 ]
  %878 = phi i32 [ %868, %865 ], [ %958, %956 ]
  %879 = load i32, ptr @buf, align 8, !tbaa !20
  %880 = add nsw i32 %879, -1
  %881 = and i32 %880, %871
  %882 = sext i32 %881 to i64
  %883 = getelementptr inbounds i8, ptr %844, i64 %882
  %884 = load i8, ptr %883, align 1, !tbaa !9
  %885 = mul nuw nsw i32 %877, 3
  %886 = add nsw i32 %885, %832
  %887 = add nsw i32 %886, 10
  %888 = and i32 %880, %887
  %889 = sext i32 %888 to i64
  %890 = getelementptr inbounds i8, ptr %844, i64 %889
  %891 = load i8, ptr %890, align 1, !tbaa !9
  %892 = icmp eq i8 %884, %891
  br i1 %892, label %893, label %956

893:                                              ; preds = %873
  %894 = add nsw i32 %886, 11
  %895 = and i32 %880, %894
  %896 = sext i32 %895 to i64
  %897 = getelementptr inbounds i8, ptr %844, i64 %896
  %898 = load i8, ptr %897, align 1, !tbaa !9
  %899 = zext i8 %898 to i32
  %900 = lshr i32 %899, 4
  %901 = tail call i32 @llvm.smax.i32(i32 %900, i32 %876)
  %902 = and i32 %899, 15
  %903 = mul nuw nsw i32 %902, %900
  %904 = icmp ne i32 %903, 0
  %905 = add nsw i32 %878, %903
  %906 = icmp slt i32 %905, 11
  %907 = select i1 %904, i1 %906, i1 false
  br i1 %907, label %963, label %972

908:                                              ; preds = %947
  %909 = icmp eq i64 %951, %968
  br i1 %909, label %938, label %910, !llvm.loop !133

910:                                              ; preds = %970, %908
  %911 = phi i32 [ %903, %970 ], [ %950, %908 ]
  %912 = phi i32 [ %874, %970 ], [ %952, %908 ]
  %913 = phi i64 [ %971, %970 ], [ %951, %908 ]
  %914 = load i32, ptr @buf, align 8, !tbaa !20
  %915 = add nsw i32 %914, -1
  %916 = and i32 %915, %872
  %917 = sext i32 %916 to i64
  %918 = getelementptr inbounds i8, ptr %844, i64 %917
  %919 = load i8, ptr %918, align 1, !tbaa !9
  %920 = lshr i8 %919, 4
  %921 = zext i8 %920 to i32
  %922 = getelementptr inbounds [10 x i32], ptr @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 %913
  store i32 %921, ptr %922, align 4, !tbaa !25
  %923 = and i8 %919, 15
  %924 = zext i8 %923 to i32
  %925 = getelementptr inbounds [2 x [10 x i32]], ptr @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 1, i64 %913
  store i32 %924, ptr %925, align 4, !tbaa !25
  %926 = icmp ult i8 %919, 64
  %927 = icmp ult i8 %923, 4
  %928 = and i1 %926, %927
  br i1 %928, label %929, label %940

929:                                              ; preds = %910
  %930 = getelementptr inbounds i32, ptr %964, i64 %913
  store i32 %866, ptr %930, align 4, !tbaa !25
  %931 = load i32, ptr @buf, align 8, !tbaa !20
  %932 = add nsw i32 %931, -1
  %933 = and i32 %932, %965
  %934 = sext i32 %933 to i64
  %935 = getelementptr inbounds i8, ptr %844, i64 %934
  %936 = load i8, ptr %935, align 1, !tbaa !9
  %937 = icmp ult i8 %936, 4
  br i1 %937, label %947, label %940

938:                                              ; preds = %908
  %939 = trunc i64 %951 to i32
  br label %940

940:                                              ; preds = %963, %938, %929, %910
  %941 = phi i32 [ %939, %938 ], [ %912, %929 ], [ %912, %910 ], [ %874, %963 ]
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  br i1 %875, label %3463, label %942

942:                                              ; preds = %956, %940
  %943 = phi i32 [ %941, %940 ], [ %957, %956 ]
  %944 = phi i32 [ %901, %940 ], [ %959, %956 ]
  %945 = add nuw nsw i32 %866, 1
  %946 = icmp eq i32 %945, %848
  br i1 %946, label %973, label %865, !llvm.loop !134

947:                                              ; preds = %929
  %948 = zext i8 %936 to i32
  %949 = getelementptr inbounds i32, ptr %966, i64 %913
  store i32 %948, ptr %949, align 4, !tbaa !25
  %950 = add nsw i32 %911, -1
  %951 = add nsw i64 %913, 1
  %952 = trunc i64 %951 to i32
  store i32 %952, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  %953 = icmp eq i32 %950, 0
  br i1 %953, label %954, label %908, !llvm.loop !133

954:                                              ; preds = %947
  %955 = trunc i64 %951 to i32
  br label %956

956:                                              ; preds = %954, %873
  %957 = phi i32 [ %874, %873 ], [ %955, %954 ]
  %958 = phi i32 [ %878, %873 ], [ %955, %954 ]
  %959 = phi i32 [ %876, %873 ], [ %901, %954 ]
  %960 = add nuw nsw i32 %877, 1
  %961 = icmp ult i32 %960, %854
  %962 = icmp eq i32 %960, %854
  br i1 %962, label %942, label %873, !llvm.loop !135

963:                                              ; preds = %893
  %964 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8
  %965 = add nsw i32 %886, 12
  %966 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4qmap, i64 0, i32 3), align 8
  %967 = tail call i32 @llvm.smax.i32(i32 %878, i32 10)
  %968 = zext i32 %967 to i64
  %969 = icmp sgt i32 %878, 9
  br i1 %969, label %940, label %970

970:                                              ; preds = %963
  %971 = sext i32 %878 to i64
  br label %910

972:                                              ; preds = %893
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  br label %3463

973:                                              ; preds = %942
  %974 = add nsw i32 %944, -1
  %975 = icmp ult i32 %974, 10
  br i1 %975, label %976, label %988

976:                                              ; preds = %973
  %977 = icmp sgt i32 %943, 0
  br i1 %977, label %978, label %990

978:                                              ; preds = %976
  %979 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8, !tbaa !61
  %980 = icmp eq i32 %943, 1
  %981 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8
  %982 = zext i32 %943 to i64
  %983 = add i32 %943, -1
  %984 = and i32 %983, 1
  %985 = icmp eq i32 %943, 2
  %986 = and i32 %983, -2
  %987 = icmp eq i32 %984, 0
  br label %992

988:                                              ; preds = %862, %860, %973
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %989 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

990:                                              ; preds = %1011, %976
  %991 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4zpos, i64 0, i32 3), align 8, !tbaa !61
  br label %1045

992:                                              ; preds = %978, %1011
  %993 = phi i64 [ 0, %978 ], [ %1015, %1011 ]
  %994 = getelementptr inbounds i32, ptr %979, i64 %993
  store i32 0, ptr %994, align 4, !tbaa !25
  br i1 %980, label %1011, label %995

995:                                              ; preds = %992
  %996 = getelementptr inbounds i32, ptr %981, i64 %993
  %997 = trunc i64 %993 to i32
  br i1 %985, label %998, label %1017

998:                                              ; preds = %1040, %995
  %999 = phi i32 [ undef, %995 ], [ %1041, %1040 ]
  %1000 = phi i32 [ 0, %995 ], [ %1041, %1040 ]
  %1001 = phi i32 [ 1, %995 ], [ %1042, %1040 ]
  br i1 %987, label %1011, label %1002

1002:                                             ; preds = %998
  %1003 = add nuw nsw i32 %1001, %997
  %1004 = srem i32 %1003, %943
  %1005 = zext i32 %1004 to i64
  %1006 = getelementptr inbounds i32, ptr %981, i64 %1005
  %1007 = load i32, ptr %1006, align 4, !tbaa !25
  %1008 = load i32, ptr %996, align 4, !tbaa !25
  %1009 = icmp eq i32 %1007, %1008
  br i1 %1009, label %1010, label %1011

1010:                                             ; preds = %1002
  store i32 %1001, ptr %994, align 4, !tbaa !25
  br label %1011

1011:                                             ; preds = %998, %1010, %1002, %992
  %1012 = phi i32 [ 0, %992 ], [ %999, %998 ], [ %1000, %1002 ], [ %1001, %1010 ]
  %1013 = sub nsw i32 %943, %1012
  %1014 = shl i32 %1013, 6
  store i32 %1014, ptr %994, align 4, !tbaa !25
  %1015 = add nuw nsw i64 %993, 1
  %1016 = icmp eq i64 %1015, %982
  br i1 %1016, label %990, label %992, !llvm.loop !136

1017:                                             ; preds = %995, %1040
  %1018 = phi i32 [ %1041, %1040 ], [ 0, %995 ]
  %1019 = phi i32 [ %1042, %1040 ], [ 1, %995 ]
  %1020 = phi i32 [ %1043, %1040 ], [ 0, %995 ]
  %1021 = add nuw nsw i32 %1019, %997
  %1022 = srem i32 %1021, %943
  %1023 = zext i32 %1022 to i64
  %1024 = getelementptr inbounds i32, ptr %981, i64 %1023
  %1025 = load i32, ptr %1024, align 4, !tbaa !25
  %1026 = load i32, ptr %996, align 4, !tbaa !25
  %1027 = icmp eq i32 %1025, %1026
  br i1 %1027, label %1028, label %1029

1028:                                             ; preds = %1017
  store i32 %1019, ptr %994, align 4, !tbaa !25
  br label %1029

1029:                                             ; preds = %1017, %1028
  %1030 = phi i32 [ %1018, %1017 ], [ %1019, %1028 ]
  %1031 = add nuw nsw i32 %1019, 1
  %1032 = add nuw nsw i32 %1031, %997
  %1033 = srem i32 %1032, %943
  %1034 = zext i32 %1033 to i64
  %1035 = getelementptr inbounds i32, ptr %981, i64 %1034
  %1036 = load i32, ptr %1035, align 4, !tbaa !25
  %1037 = load i32, ptr %996, align 4, !tbaa !25
  %1038 = icmp eq i32 %1036, %1037
  br i1 %1038, label %1039, label %1040

1039:                                             ; preds = %1029
  store i32 %1031, ptr %994, align 4, !tbaa !25
  br label %1040

1040:                                             ; preds = %1039, %1029
  %1041 = phi i32 [ %1030, %1029 ], [ %1031, %1039 ]
  %1042 = add nuw nsw i32 %1019, 2
  %1043 = add i32 %1020, 2
  %1044 = icmp eq i32 %1043, %986
  br i1 %1044, label %998, label %1017, !llvm.loop !137

1045:                                             ; preds = %1045, %990
  %1046 = phi i64 [ 0, %990 ], [ %1068, %1045 ]
  %1047 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1046
  %1048 = load i8, ptr %1047, align 2, !tbaa !9
  %1049 = zext i8 %1048 to i64
  %1050 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1046
  %1051 = load i8, ptr %1050, align 2, !tbaa !9
  %1052 = zext i8 %1051 to i64
  %1053 = shl nuw nsw i64 %1052, 3
  %1054 = add nuw nsw i64 %1053, %1049
  %1055 = getelementptr inbounds i32, ptr %991, i64 %1054
  %1056 = trunc i64 %1046 to i32
  store i32 %1056, ptr %1055, align 4, !tbaa !25
  %1057 = or i64 %1046, 1
  %1058 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1057
  %1059 = load i8, ptr %1058, align 1, !tbaa !9
  %1060 = zext i8 %1059 to i64
  %1061 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1057
  %1062 = load i8, ptr %1061, align 1, !tbaa !9
  %1063 = zext i8 %1062 to i64
  %1064 = shl nuw nsw i64 %1063, 3
  %1065 = add nuw nsw i64 %1064, %1060
  %1066 = getelementptr inbounds i32, ptr %991, i64 %1065
  %1067 = trunc i64 %1057 to i32
  store i32 %1067, ptr %1066, align 4, !tbaa !25
  %1068 = add nuw nsw i64 %1046, 2
  %1069 = icmp eq i64 %1068, 64
  br i1 %1069, label %1070, label %1045, !llvm.loop !138

1070:                                             ; preds = %1045
  %1071 = add nsw i32 %832, 7
  %1072 = load i32, ptr @buf, align 8, !tbaa !20
  %1073 = add nsw i32 %1072, -1
  %1074 = and i32 %1073, %1071
  %1075 = sext i32 %1074 to i64
  %1076 = getelementptr inbounds i8, ptr %844, i64 %1075
  %1077 = load i8, ptr %1076, align 1, !tbaa !9
  %1078 = zext i8 %1077 to i32
  %1079 = shl nuw nsw i32 %1078, 8
  %1080 = add nsw i32 %832, 8
  %1081 = and i32 %1073, %1080
  %1082 = sext i32 %1081 to i64
  %1083 = getelementptr inbounds i8, ptr %844, i64 %1082
  %1084 = load i8, ptr %1083, align 1, !tbaa !9
  %1085 = zext i8 %1084 to i32
  %1086 = or i32 %1079, %1085
  store i32 %1086, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !25
  %1087 = add nsw i32 %832, 5
  %1088 = and i32 %1073, %1087
  %1089 = sext i32 %1088 to i64
  %1090 = getelementptr inbounds i8, ptr %844, i64 %1089
  %1091 = load i8, ptr %1090, align 1, !tbaa !9
  %1092 = zext i8 %1091 to i32
  %1093 = shl nuw nsw i32 %1092, 8
  %1094 = add nsw i32 %832, 6
  %1095 = and i32 %1073, %1094
  %1096 = sext i32 %1095 to i64
  %1097 = getelementptr inbounds i8, ptr %844, i64 %1096
  %1098 = load i8, ptr %1097, align 1, !tbaa !9
  %1099 = zext i8 %1098 to i32
  %1100 = or i32 %1093, %1099
  %1101 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.12, i32 noundef %1086, i32 noundef %1100)
  %1102 = load i32, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !25
  %1103 = add nsw i32 %1102, -1
  %1104 = shl nuw nsw i32 %944, 3
  %1105 = sdiv i32 %1103, %1104
  %1106 = add nsw i32 %1105, 1
  store i32 %1106, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !25
  %1107 = icmp sgt i32 %1105, -1
  br i1 %1107, label %1110, label %1108

1108:                                             ; preds = %1070
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1109 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

1110:                                             ; preds = %1070
  %1111 = load i32, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  %1112 = shl nsw i32 %1111, 6
  store i32 %1112, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE3row, align 4, !tbaa !25
  br label %1115

1113:                                             ; preds = %473
  %1114 = load i32, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  br label %1115

1115:                                             ; preds = %1113, %1110
  %1116 = phi i32 [ %1114, %1113 ], [ %1112, %1110 ]
  %1117 = icmp eq i32 %1116, 0
  br i1 %1117, label %2229, label %1118

1118:                                             ; preds = %1115
  %1119 = load i32, ptr @bpos, align 4, !tbaa !25
  %1120 = icmp eq i32 %1119, 0
  %1121 = select i1 %1120, i32 -2, i32 -1
  %1122 = load i32, ptr @pos, align 4, !tbaa !25
  %1123 = add i32 %1121, %1122
  %1124 = load i32, ptr @buf, align 8, !tbaa !20
  %1125 = add nsw i32 %1124, -1
  %1126 = and i32 %1125, %1123
  %1127 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %1128 = sext i32 %1126 to i64
  %1129 = getelementptr inbounds i8, ptr %1127, i64 %1128
  %1130 = load i8, ptr %1129, align 1, !tbaa !9
  %1131 = icmp eq i8 %1130, -1
  br i1 %1131, label %2229, label %1132

1132:                                             ; preds = %1118
  %1133 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  %1134 = icmp slt i32 %1133, 33
  br i1 %1134, label %1137, label %1135

1135:                                             ; preds = %1132
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1136 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

1137:                                             ; preds = %1132
  %1138 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  %1139 = load i32, ptr @y, align 4, !tbaa !25
  %1140 = shl i32 %1138, 1
  %1141 = add i32 %1139, %1140
  store i32 %1141, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  %1142 = add nsw i32 %1133, 1
  store i32 %1142, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  %1143 = load i32, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !25
  %1144 = icmp slt i32 %1143, 0
  br i1 %1144, label %1145, label %1202

1145:                                             ; preds = %1137
  %1146 = icmp ult i32 %1133, 16
  br i1 %1146, label %1149, label %1147

1147:                                             ; preds = %1145
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1148 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

1149:                                             ; preds = %1145
  %1150 = load i32, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %1151 = and i32 %1150, 63
  %1152 = icmp ne i32 %1151, 0
  %1153 = icmp ult i32 %1150, 640
  br i1 %1153, label %1156, label %1154

1154:                                             ; preds = %1149
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1155 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

1156:                                             ; preds = %1149
  %1157 = lshr i32 %1150, 6
  %1158 = zext i1 %1152 to i64
  %1159 = zext i32 %1157 to i64
  %1160 = getelementptr inbounds [2 x [10 x i32]], ptr @_ZZ9jpegModelR5MixerE6hufsel, i64 0, i64 %1158, i64 %1159
  %1161 = load i32, ptr %1160, align 4, !tbaa !25
  %1162 = icmp ult i32 %1161, 4
  br i1 %1162, label %1165, label %1163

1163:                                             ; preds = %1156
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1164 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

1165:                                             ; preds = %1156
  %1166 = select i1 %1152, i32 64, i32 0
  %1167 = shl nuw nsw i32 %1161, 4
  %1168 = add nuw nsw i32 %1167, %1166
  %1169 = load ptr, ptr getelementptr inbounds (%class.Array.7, ptr @_ZZ9jpegModelR5MixerE3huf, i64 0, i32 3), align 8, !tbaa !124
  %1170 = zext i32 %1168 to i64
  %1171 = getelementptr inbounds %struct.HUF, ptr %1169, i64 %1170
  %1172 = zext i32 %1133 to i64
  %1173 = getelementptr inbounds %struct.HUF, ptr %1171, i64 %1172
  %1174 = load i32, ptr %1173, align 4, !tbaa !128
  %1175 = getelementptr inbounds %struct.HUF, ptr %1173, i64 0, i32 1
  %1176 = load i32, ptr %1175, align 4, !tbaa !130
  %1177 = icmp ugt i32 %1174, %1176
  br i1 %1177, label %1182, label %1178

1178:                                             ; preds = %1165
  %1179 = getelementptr inbounds %struct.HUF, ptr %1173, i64 0, i32 2
  %1180 = load i32, ptr %1179, align 4, !tbaa !131
  %1181 = icmp slt i32 %1180, 2048
  br i1 %1181, label %1184, label %1182

1182:                                             ; preds = %1178, %1165
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1183 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

1184:                                             ; preds = %1178
  %1185 = icmp ult i32 %1141, %1176
  br i1 %1185, label %1186, label %2229

1186:                                             ; preds = %1184
  %1187 = icmp ult i32 %1141, %1174
  br i1 %1187, label %1188, label %1190

1188:                                             ; preds = %1186
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1189 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

1190:                                             ; preds = %1186
  %1191 = sub i32 %1141, %1174
  %1192 = add i32 %1191, %1180
  %1193 = icmp ult i32 %1192, 2048
  br i1 %1193, label %1194, label %1200

1194:                                             ; preds = %1190
  %1195 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4hbuf, i64 0, i32 3), align 8, !tbaa !22
  %1196 = zext i32 %1192 to i64
  %1197 = getelementptr inbounds i8, ptr %1195, i64 %1196
  %1198 = load i8, ptr %1197, align 1, !tbaa !9
  %1199 = zext i8 %1198 to i32
  store i32 %1199, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !25
  store i32 %1142, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !25
  br label %1202

1200:                                             ; preds = %1190
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1201 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

1202:                                             ; preds = %1137, %1194
  %1203 = phi i32 [ %1143, %1137 ], [ %1199, %1194 ]
  %1204 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !25
  %1205 = and i32 %1203, 15
  %1206 = add nsw i32 %1204, %1205
  %1207 = icmp eq i32 %1206, %1142
  br i1 %1207, label %1208, label %2229

1208:                                             ; preds = %1202
  store i32 %1203, ptr @_ZZ9jpegModelR5MixerE3rs1, align 4, !tbaa !25
  %1209 = load i32, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %1210 = and i32 %1209, 63
  %1211 = icmp eq i32 %1210, 0
  br i1 %1211, label %1318, label %1212

1212:                                             ; preds = %1208
  %1213 = icmp eq i32 %1203, 0
  br i1 %1213, label %1214, label %1245

1214:                                             ; preds = %1212
  %1215 = add nsw i32 %1209, 63
  %1216 = and i32 %1215, -64
  store i32 %1216, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %1217 = icmp sgt i32 %1216, -1
  br i1 %1217, label %1218, label %1226

1218:                                             ; preds = %1214
  %1219 = icmp sle i32 %1216, %1116
  %1220 = icmp ult i32 %1216, 641
  %1221 = and i1 %1219, %1220
  br i1 %1221, label %1222, label %1226

1222:                                             ; preds = %1218
  %1223 = load i32, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  %1224 = and i32 %1223, 63
  %1225 = icmp eq i32 %1224, 0
  br i1 %1225, label %1380, label %1228

1226:                                             ; preds = %1218, %1214
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1227 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

1228:                                             ; preds = %1222, %1228
  %1229 = phi i32 [ %1236, %1228 ], [ %1223, %1222 ]
  %1230 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1231 = add nsw i32 %1230, -1
  %1232 = and i32 %1231, %1229
  %1233 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %1234 = sext i32 %1232 to i64
  %1235 = getelementptr inbounds i32, ptr %1233, i64 %1234
  store i32 0, ptr %1235, align 4, !tbaa !25
  %1236 = add nsw i32 %1229, 1
  %1237 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !20
  %1238 = add nsw i32 %1237, -1
  %1239 = and i32 %1238, %1229
  %1240 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %1241 = sext i32 %1239 to i64
  %1242 = getelementptr inbounds i8, ptr %1240, i64 %1241
  store i8 0, ptr %1242, align 1, !tbaa !9
  %1243 = and i32 %1236, 63
  %1244 = icmp eq i32 %1243, 0
  br i1 %1244, label %1379, label %1228, !llvm.loop !139

1245:                                             ; preds = %1212
  %1246 = icmp ult i32 %1205, 11
  br i1 %1246, label %1249, label %1247

1247:                                             ; preds = %1245
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1248 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

1249:                                             ; preds = %1245
  %1250 = lshr i32 %1203, 4
  %1251 = add i32 %1209, %1250
  %1252 = xor i32 %1251, %1209
  %1253 = icmp ult i32 %1252, 64
  br i1 %1253, label %1256, label %1254

1254:                                             ; preds = %1249
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1255 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

1256:                                             ; preds = %1249
  %1257 = add i32 %1251, 1
  store i32 %1257, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %1258 = shl nsw i32 -1, %1205
  %1259 = xor i32 %1258, -1
  %1260 = and i32 %1141, %1259
  %1261 = icmp eq i32 %1205, 0
  br i1 %1261, label %1268, label %1262

1262:                                             ; preds = %1256
  %1263 = add nsw i32 %1205, -1
  %1264 = lshr i32 %1260, %1263
  %1265 = icmp eq i32 %1264, 0
  %1266 = select i1 %1265, i32 %1259, i32 0
  %1267 = sub nsw i32 %1260, %1266
  br label %1268

1268:                                             ; preds = %1262, %1256
  %1269 = phi i32 [ %1260, %1256 ], [ %1267, %1262 ]
  %1270 = load i32, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  %1271 = icmp ult i32 %1203, 16
  br i1 %1271, label %1294, label %1272

1272:                                             ; preds = %1268, %1272
  %1273 = phi i32 [ %1291, %1272 ], [ %1250, %1268 ]
  %1274 = phi i32 [ %1284, %1272 ], [ %1270, %1268 ]
  %1275 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1276 = add nsw i32 %1275, -1
  %1277 = and i32 %1276, %1274
  %1278 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %1279 = sext i32 %1277 to i64
  %1280 = getelementptr inbounds i32, ptr %1278, i64 %1279
  store i32 0, ptr %1280, align 4, !tbaa !25
  %1281 = shl nuw nsw i32 %1273, 4
  %1282 = or i32 %1281, %1205
  %1283 = trunc i32 %1282 to i8
  %1284 = add nsw i32 %1274, 1
  %1285 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !20
  %1286 = add nsw i32 %1285, -1
  %1287 = and i32 %1286, %1274
  %1288 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %1289 = sext i32 %1287 to i64
  %1290 = getelementptr inbounds i8, ptr %1288, i64 %1289
  store i8 %1283, ptr %1290, align 1, !tbaa !9
  %1291 = add nsw i32 %1273, -1
  %1292 = icmp ugt i32 %1273, 1
  br i1 %1292, label %1272, label %1293, !llvm.loop !140

1293:                                             ; preds = %1272
  store i32 %1284, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  br label %1294

1294:                                             ; preds = %1293, %1268
  %1295 = phi i32 [ %1284, %1293 ], [ %1270, %1268 ]
  %1296 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1297 = add nsw i32 %1296, -1
  %1298 = and i32 %1297, %1295
  %1299 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %1300 = sext i32 %1298 to i64
  %1301 = getelementptr inbounds i32, ptr %1299, i64 %1300
  store i32 %1269, ptr %1301, align 4, !tbaa !25
  %1302 = shl nuw nsw i32 %1205, 4
  %1303 = shl i32 %1141, 2
  %1304 = lshr i32 %1303, %1205
  %1305 = and i32 %1304, 3
  %1306 = or i32 %1305, %1302
  %1307 = trunc i32 %1306 to i8
  %1308 = or i8 %1307, 12
  %1309 = add nsw i32 %1295, 1
  store i32 %1309, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  %1310 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !20
  %1311 = add nsw i32 %1310, -1
  %1312 = and i32 %1311, %1295
  %1313 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %1314 = sext i32 %1312 to i64
  %1315 = getelementptr inbounds i8, ptr %1313, i64 %1314
  store i8 %1308, ptr %1315, align 1, !tbaa !9
  %1316 = load i32, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !25
  %1317 = add nsw i32 %1316, %1205
  store i32 %1317, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !25
  br label %1380

1318:                                             ; preds = %1208
  %1319 = icmp ult i32 %1203, 12
  br i1 %1319, label %1322, label %1320

1320:                                             ; preds = %1318
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1321 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

1322:                                             ; preds = %1318
  %1323 = add nuw nsw i32 %1209, 1
  store i32 %1323, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %1324 = shl nsw i32 -1, %1203
  %1325 = xor i32 %1324, -1
  %1326 = and i32 %1141, %1325
  %1327 = icmp eq i32 %1203, 0
  br i1 %1327, label %1334, label %1328

1328:                                             ; preds = %1322
  %1329 = add nsw i32 %1203, -1
  %1330 = ashr i32 %1326, %1329
  %1331 = icmp eq i32 %1330, 0
  %1332 = select i1 %1331, i32 %1325, i32 0
  %1333 = sub nsw i32 %1326, %1332
  br label %1334

1334:                                             ; preds = %1328, %1322
  %1335 = phi i32 [ %1326, %1322 ], [ %1333, %1328 ]
  %1336 = icmp ult i32 %1209, 639
  br i1 %1336, label %1339, label %1337

1337:                                             ; preds = %1334
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1338 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

1339:                                             ; preds = %1334
  %1340 = lshr i32 %1323, 6
  %1341 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8, !tbaa !61
  %1342 = zext i32 %1340 to i64
  %1343 = getelementptr inbounds i32, ptr %1341, i64 %1342
  %1344 = load i32, ptr %1343, align 4, !tbaa !25
  %1345 = icmp ult i32 %1344, 4
  br i1 %1345, label %1348, label %1346

1346:                                             ; preds = %1339
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1347 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

1348:                                             ; preds = %1339
  %1349 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4pred, i64 0, i32 3), align 8, !tbaa !61
  %1350 = zext i32 %1344 to i64
  %1351 = getelementptr inbounds i32, ptr %1349, i64 %1350
  %1352 = load i32, ptr %1351, align 4, !tbaa !25
  %1353 = add nsw i32 %1352, %1335
  store i32 %1353, ptr %1351, align 4, !tbaa !25
  %1354 = load i32, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  %1355 = and i32 %1354, 63
  %1356 = icmp eq i32 %1355, 0
  br i1 %1356, label %1359, label %1357

1357:                                             ; preds = %1348
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1358 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

1359:                                             ; preds = %1348
  %1360 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1361 = add nsw i32 %1360, -1
  %1362 = and i32 %1361, %1354
  %1363 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %1364 = sext i32 %1362 to i64
  %1365 = getelementptr inbounds i32, ptr %1363, i64 %1364
  store i32 %1353, ptr %1365, align 4, !tbaa !25
  %1366 = add nsw i32 %1353, 1023
  %1367 = lshr i32 %1366, 3
  %1368 = trunc i32 %1367 to i8
  %1369 = add nuw nsw i32 %1354, 1
  store i32 %1369, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  %1370 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !20
  %1371 = add nsw i32 %1370, -1
  %1372 = and i32 %1371, %1354
  %1373 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %1374 = sext i32 %1372 to i64
  %1375 = getelementptr inbounds i8, ptr %1373, i64 %1374
  store i8 %1368, ptr %1375, align 1, !tbaa !9
  %1376 = load i32, ptr @_ZZ9jpegModelR5MixerE5ssum2, align 4, !tbaa !25
  store i32 %1376, ptr @_ZZ9jpegModelR5MixerE5ssum3, align 4, !tbaa !25
  %1377 = load i32, ptr @_ZZ9jpegModelR5MixerE5ssum1, align 4, !tbaa !25
  store i32 %1377, ptr @_ZZ9jpegModelR5MixerE5ssum2, align 4, !tbaa !25
  %1378 = load i32, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !25
  store i32 %1378, ptr @_ZZ9jpegModelR5MixerE5ssum1, align 4, !tbaa !25
  store i32 %1203, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !25
  br label %1380

1379:                                             ; preds = %1228
  store i32 %1236, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  br label %1380

1380:                                             ; preds = %1294, %1222, %1379, %1359
  %1381 = phi i32 [ %1223, %1222 ], [ %1236, %1379 ], [ %1369, %1359 ], [ %1309, %1294 ]
  %1382 = phi i32 [ %1216, %1222 ], [ %1216, %1379 ], [ %1323, %1359 ], [ %1257, %1294 ]
  %1383 = icmp slt i32 %1382, 0
  %1384 = icmp sgt i32 %1382, %1116
  %1385 = select i1 %1383, i1 true, i1 %1384
  br i1 %1385, label %1386, label %1388

1386:                                             ; preds = %1380
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %1387 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

1388:                                             ; preds = %1380
  %1389 = icmp slt i32 %1382, %1116
  br i1 %1389, label %1398, label %1390

1390:                                             ; preds = %1388
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %1391 = load i32, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  %1392 = add nsw i32 %1391, 1
  store i32 %1392, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  %1393 = load i32, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !25
  %1394 = icmp eq i32 %1392, %1393
  br i1 %1394, label %1395, label %1398

1395:                                             ; preds = %1390
  store i32 0, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  %1396 = load i32, ptr @_ZZ9jpegModelR5MixerE3row, align 4, !tbaa !25
  %1397 = add nsw i32 %1396, 1
  store i32 %1397, ptr @_ZZ9jpegModelR5MixerE3row, align 4, !tbaa !25
  br label %1398

1398:                                             ; preds = %1390, %1395, %1388
  %1399 = phi i32 [ 0, %1390 ], [ 0, %1395 ], [ %1382, %1388 ]
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffsize, align 4, !tbaa !25
  store i32 0, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  store i32 -1, ptr @_ZZ9jpegModelR5MixerE2rs, align 4, !tbaa !25
  %1400 = lshr i32 %1399, 6
  %1401 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4qmap, i64 0, i32 3), align 8, !tbaa !61
  %1402 = zext i32 %1400 to i64
  %1403 = getelementptr inbounds i32, ptr %1401, i64 %1402
  %1404 = load i32, ptr %1403, align 4, !tbaa !25
  %1405 = shl nsw i32 %1404, 6
  %1406 = and i32 %1399, 63
  %1407 = sub nsw i32 %1381, %1406
  %1408 = icmp eq i32 %1406, 0
  br i1 %1408, label %1409, label %1523

1409:                                             ; preds = %1398
  %1410 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumv2, align 16, !tbaa !25
  %1411 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumv3, align 16, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1410, i32 noundef %1411, ptr noundef nonnull align 4 dereferenceable(4) @_ZZ9jpegModelR5MixerE2kx, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 16))
  %1412 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumu2, align 16, !tbaa !25
  %1413 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumu3, align 16, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1412, i32 noundef %1413, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 8), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 24))
  %1414 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 1), align 4, !tbaa !25
  %1415 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 1), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1414, i32 noundef %1415, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 1), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 17))
  %1416 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 1), align 4, !tbaa !25
  %1417 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 1), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1416, i32 noundef %1417, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 9), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 25))
  %1418 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 2), align 8, !tbaa !25
  %1419 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 2), align 8, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1418, i32 noundef %1419, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 2), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 18))
  %1420 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 2), align 8, !tbaa !25
  %1421 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 2), align 8, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1420, i32 noundef %1421, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 10), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 26))
  %1422 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 3), align 4, !tbaa !25
  %1423 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 3), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1422, i32 noundef %1423, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 3), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 19))
  %1424 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 3), align 4, !tbaa !25
  %1425 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 3), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1424, i32 noundef %1425, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 11), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 27))
  store <4 x i32> zeroinitializer, ptr @_ZZ9jpegModelR5MixerE5sumv3, align 16, !tbaa !25
  store <4 x i32> zeroinitializer, ptr @_ZZ9jpegModelR5MixerE5sumu3, align 16, !tbaa !25
  store <4 x i32> zeroinitializer, ptr @_ZZ9jpegModelR5MixerE5sumv2, align 16, !tbaa !25
  store <4 x i32> zeroinitializer, ptr @_ZZ9jpegModelR5MixerE5sumu2, align 16, !tbaa !25
  %1426 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 4), align 16, !tbaa !25
  %1427 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 4), align 16, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1426, i32 noundef %1427, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 4), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 20))
  %1428 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 4), align 16, !tbaa !25
  %1429 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 4), align 16, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1428, i32 noundef %1429, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 12), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 28))
  %1430 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 5), align 4, !tbaa !25
  %1431 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 5), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1430, i32 noundef %1431, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 5), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 21))
  %1432 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 5), align 4, !tbaa !25
  %1433 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 5), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1432, i32 noundef %1433, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 13), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 29))
  %1434 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 6), align 8, !tbaa !25
  %1435 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 6), align 8, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1434, i32 noundef %1435, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 6), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 22))
  %1436 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 6), align 8, !tbaa !25
  %1437 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 6), align 8, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1436, i32 noundef %1437, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 14), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 30))
  %1438 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 7), align 4, !tbaa !25
  %1439 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 7), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1438, i32 noundef %1439, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 7), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 23))
  %1440 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 7), align 4, !tbaa !25
  %1441 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 7), align 4, !tbaa !25
  tail call void @_Z8update_kiiRiS_(i32 noundef %1440, i32 noundef %1441, ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 15), ptr noundef nonnull align 4 dereferenceable(4) getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 31))
  store <4 x i32> zeroinitializer, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 4), align 16, !tbaa !25
  store <4 x i32> zeroinitializer, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 4), align 16, !tbaa !25
  store <4 x i32> zeroinitializer, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 4), align 16, !tbaa !25
  store <4 x i32> zeroinitializer, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 4), align 16, !tbaa !25
  %1442 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8, !tbaa !61
  %1443 = getelementptr inbounds i32, ptr %1442, i64 %1402
  %1444 = load i32, ptr %1443, align 4, !tbaa !25
  %1445 = sub i32 %1407, %1444
  %1446 = load i32, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !25
  %1447 = mul nsw i32 %1446, %1116
  %1448 = sub i32 %1407, %1447
  %1449 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4qtab, i64 0, i32 3), align 8, !tbaa !22
  %1450 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1451 = add nsw i32 %1450, -1
  %1452 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %1453 = sext i32 %1405 to i64
  br label %1454

1454:                                             ; preds = %1409, %1454
  %1455 = phi i64 [ 0, %1409 ], [ %1521, %1454 ]
  %1456 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1455
  %1457 = load i8, ptr %1456, align 1, !tbaa !9
  %1458 = zext i8 %1457 to i64
  %1459 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %1458
  %1460 = load i32, ptr %1459, align 4, !tbaa !25
  %1461 = lshr i64 2978192880766211435, %1455
  %1462 = and i64 %1461, 1
  %1463 = icmp eq i64 %1462, 0
  %1464 = sub nsw i32 0, %1460
  %1465 = select i1 %1463, i32 %1464, i32 %1460
  %1466 = add nuw nsw i64 %1455, %1453
  %1467 = getelementptr inbounds i8, ptr %1449, i64 %1466
  %1468 = load i8, ptr %1467, align 1, !tbaa !9
  %1469 = zext i8 %1468 to i32
  %1470 = add nuw nsw i32 %1469, 1
  %1471 = trunc i64 %1455 to i32
  %1472 = add i32 %1448, %1471
  %1473 = and i32 %1451, %1472
  %1474 = sext i32 %1473 to i64
  %1475 = getelementptr inbounds i32, ptr %1452, i64 %1474
  %1476 = load i32, ptr %1475, align 4, !tbaa !25
  %1477 = mul i32 %1476, %1470
  %1478 = mul i32 %1477, %1465
  %1479 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1455
  %1480 = load i8, ptr %1479, align 1, !tbaa !9
  %1481 = zext i8 %1480 to i64
  %1482 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 %1481
  %1483 = load i32, ptr %1482, align 4, !tbaa !25
  %1484 = add nsw i32 %1483, %1478
  store i32 %1484, ptr %1482, align 4, !tbaa !25
  %1485 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %1481
  %1486 = load i32, ptr %1485, align 4, !tbaa !25
  %1487 = lshr i64 5374292623298483885, %1455
  %1488 = and i64 %1487, 1
  %1489 = icmp eq i64 %1488, 0
  %1490 = sub nsw i32 0, %1486
  %1491 = select i1 %1489, i32 %1490, i32 %1486
  %1492 = trunc i64 %1455 to i32
  %1493 = add i32 %1445, %1492
  %1494 = and i32 %1451, %1493
  %1495 = sext i32 %1494 to i64
  %1496 = getelementptr inbounds i32, ptr %1452, i64 %1495
  %1497 = load i32, ptr %1496, align 4, !tbaa !25
  %1498 = mul i32 %1497, %1470
  %1499 = mul i32 %1498, %1491
  %1500 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 %1458
  %1501 = load i32, ptr %1500, align 4, !tbaa !25
  %1502 = add nsw i32 %1499, %1501
  store i32 %1502, ptr %1500, align 4, !tbaa !25
  %1503 = lshr i64 402702435, %1455
  %1504 = and i64 %1503, 1
  %1505 = icmp eq i64 %1504, 0
  %1506 = select i1 %1463, i32 -256, i32 256
  %1507 = select i1 %1505, i32 %1506, i32 181
  %1508 = mul i32 %1477, %1507
  %1509 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 %1481
  %1510 = load i32, ptr %1509, align 4, !tbaa !25
  %1511 = add nsw i32 %1510, %1508
  store i32 %1511, ptr %1509, align 4, !tbaa !25
  %1512 = lshr i64 34362885645, %1455
  %1513 = and i64 %1512, 1
  %1514 = icmp eq i64 %1513, 0
  %1515 = select i1 %1489, i32 -256, i32 256
  %1516 = select i1 %1514, i32 %1515, i32 181
  %1517 = mul i32 %1498, %1516
  %1518 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 %1458
  %1519 = load i32, ptr %1518, align 4, !tbaa !25
  %1520 = add nsw i32 %1519, %1517
  store i32 %1520, ptr %1518, align 4, !tbaa !25
  %1521 = add nuw nsw i64 %1455, 1
  %1522 = icmp eq i64 %1521, 64
  br i1 %1522, label %1576, label %1454, !llvm.loop !141

1523:                                             ; preds = %1398
  %1524 = add nsw i32 %1406, -1
  %1525 = zext i32 %1524 to i64
  %1526 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1525
  %1527 = load i8, ptr %1526, align 1, !tbaa !9
  %1528 = zext i8 %1527 to i64
  %1529 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %1528
  %1530 = load i32, ptr %1529, align 4, !tbaa !25
  %1531 = add nuw i32 %1524, %1405
  %1532 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4qtab, i64 0, i32 3), align 8, !tbaa !22
  %1533 = sext i32 %1531 to i64
  %1534 = getelementptr inbounds i8, ptr %1532, i64 %1533
  %1535 = load i8, ptr %1534, align 1, !tbaa !9
  %1536 = zext i8 %1535 to i32
  %1537 = xor i32 %1536, -1
  %1538 = add nsw i32 %1381, -1
  %1539 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1540 = add nsw i32 %1539, -1
  %1541 = and i32 %1540, %1538
  %1542 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %1543 = sext i32 %1541 to i64
  %1544 = getelementptr inbounds i32, ptr %1542, i64 %1543
  %1545 = load i32, ptr %1544, align 4, !tbaa !25
  %1546 = mul i32 %1545, %1537
  %1547 = mul i32 %1546, %1530
  %1548 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1525
  %1549 = load i8, ptr %1548, align 1, !tbaa !9
  %1550 = zext i8 %1549 to i64
  %1551 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 %1550
  %1552 = load i32, ptr %1551, align 4, !tbaa !25
  %1553 = add i32 %1552, %1547
  store i32 %1553, ptr %1551, align 4, !tbaa !25
  %1554 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE2we, i64 0, i64 %1550
  %1555 = load i32, ptr %1554, align 4, !tbaa !25
  %1556 = mul i32 %1546, %1555
  %1557 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 %1528
  %1558 = load i32, ptr %1557, align 4, !tbaa !25
  %1559 = add i32 %1556, %1558
  store i32 %1559, ptr %1557, align 4, !tbaa !25
  %1560 = lshr i64 402702435, %1525
  %1561 = and i64 %1560, 1
  %1562 = icmp eq i64 %1561, 0
  %1563 = select i1 %1562, i32 256, i32 181
  %1564 = mul i32 %1546, %1563
  %1565 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 %1550
  %1566 = load i32, ptr %1565, align 4, !tbaa !25
  %1567 = add i32 %1566, %1564
  store i32 %1567, ptr %1565, align 4, !tbaa !25
  %1568 = lshr i64 34362885645, %1525
  %1569 = and i64 %1568, 1
  %1570 = icmp eq i64 %1569, 0
  %1571 = select i1 %1570, i32 256, i32 181
  %1572 = mul i32 %1546, %1571
  %1573 = getelementptr inbounds [8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 %1528
  %1574 = load i32, ptr %1573, align 4, !tbaa !25
  %1575 = add i32 %1574, %1572
  store i32 %1575, ptr %1573, align 4, !tbaa !25
  br label %1576

1576:                                             ; preds = %1454, %1523
  %1577 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4sumv, i64 0, i32 3), align 8, !tbaa !61
  %1578 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4sumu, i64 0, i32 3), align 8, !tbaa !61
  %1579 = load i32, ptr @_ZZ9jpegModelR5MixerE2kx, align 16, !tbaa !25
  %1580 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumv2, align 16, !tbaa !25
  %1581 = mul nsw i32 %1580, %1579
  %1582 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumv3, align 16, !tbaa !25
  %1583 = sub nsw i32 8, %1579
  %1584 = mul nsw i32 %1582, %1583
  %1585 = add nsw i32 %1584, %1581
  %1586 = sdiv i32 %1585, 8
  store i32 %1586, ptr %1577, align 4, !tbaa !25
  %1587 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 8), align 16, !tbaa !25
  %1588 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumu2, align 16, !tbaa !25
  %1589 = mul nsw i32 %1588, %1587
  %1590 = load i32, ptr @_ZZ9jpegModelR5MixerE5sumu3, align 16, !tbaa !25
  %1591 = sub nsw i32 8, %1587
  %1592 = mul nsw i32 %1590, %1591
  %1593 = add nsw i32 %1592, %1589
  %1594 = sdiv i32 %1593, 8
  store i32 %1594, ptr %1578, align 4, !tbaa !25
  %1595 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 1), align 4, !tbaa !25
  %1596 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 1), align 4, !tbaa !25
  %1597 = mul nsw i32 %1596, %1595
  %1598 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 1), align 4, !tbaa !25
  %1599 = sub nsw i32 8, %1595
  %1600 = mul nsw i32 %1598, %1599
  %1601 = add nsw i32 %1600, %1597
  %1602 = sdiv i32 %1601, 8
  %1603 = getelementptr inbounds i32, ptr %1577, i64 1
  store i32 %1602, ptr %1603, align 4, !tbaa !25
  %1604 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 9), align 4, !tbaa !25
  %1605 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 1), align 4, !tbaa !25
  %1606 = mul nsw i32 %1605, %1604
  %1607 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 1), align 4, !tbaa !25
  %1608 = sub nsw i32 8, %1604
  %1609 = mul nsw i32 %1607, %1608
  %1610 = add nsw i32 %1609, %1606
  %1611 = sdiv i32 %1610, 8
  %1612 = getelementptr inbounds i32, ptr %1578, i64 1
  store i32 %1611, ptr %1612, align 4, !tbaa !25
  %1613 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 2), align 8, !tbaa !25
  %1614 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 2), align 8, !tbaa !25
  %1615 = mul nsw i32 %1614, %1613
  %1616 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 2), align 8, !tbaa !25
  %1617 = sub nsw i32 8, %1613
  %1618 = mul nsw i32 %1616, %1617
  %1619 = add nsw i32 %1618, %1615
  %1620 = sdiv i32 %1619, 8
  %1621 = getelementptr inbounds i32, ptr %1577, i64 2
  store i32 %1620, ptr %1621, align 4, !tbaa !25
  %1622 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 10), align 8, !tbaa !25
  %1623 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 2), align 8, !tbaa !25
  %1624 = mul nsw i32 %1623, %1622
  %1625 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 2), align 8, !tbaa !25
  %1626 = sub nsw i32 8, %1622
  %1627 = mul nsw i32 %1625, %1626
  %1628 = add nsw i32 %1627, %1624
  %1629 = sdiv i32 %1628, 8
  %1630 = getelementptr inbounds i32, ptr %1578, i64 2
  store i32 %1629, ptr %1630, align 4, !tbaa !25
  %1631 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 3), align 4, !tbaa !25
  %1632 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 3), align 4, !tbaa !25
  %1633 = mul nsw i32 %1632, %1631
  %1634 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 3), align 4, !tbaa !25
  %1635 = sub nsw i32 8, %1631
  %1636 = mul nsw i32 %1634, %1635
  %1637 = add nsw i32 %1636, %1633
  %1638 = sdiv i32 %1637, 8
  %1639 = getelementptr inbounds i32, ptr %1577, i64 3
  store i32 %1638, ptr %1639, align 4, !tbaa !25
  %1640 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 11), align 4, !tbaa !25
  %1641 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 3), align 4, !tbaa !25
  %1642 = mul nsw i32 %1641, %1640
  %1643 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 3), align 4, !tbaa !25
  %1644 = sub nsw i32 8, %1640
  %1645 = mul nsw i32 %1643, %1644
  %1646 = add nsw i32 %1645, %1642
  %1647 = sdiv i32 %1646, 8
  %1648 = getelementptr inbounds i32, ptr %1578, i64 3
  store i32 %1647, ptr %1648, align 4, !tbaa !25
  %1649 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 4), align 16, !tbaa !25
  %1650 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 4), align 16, !tbaa !25
  %1651 = mul nsw i32 %1650, %1649
  %1652 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 4), align 16, !tbaa !25
  %1653 = sub nsw i32 8, %1649
  %1654 = mul nsw i32 %1652, %1653
  %1655 = add nsw i32 %1654, %1651
  %1656 = sdiv i32 %1655, 8
  %1657 = getelementptr inbounds i32, ptr %1577, i64 4
  store i32 %1656, ptr %1657, align 4, !tbaa !25
  %1658 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 12), align 16, !tbaa !25
  %1659 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 4), align 16, !tbaa !25
  %1660 = mul nsw i32 %1659, %1658
  %1661 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 4), align 16, !tbaa !25
  %1662 = sub nsw i32 8, %1658
  %1663 = mul nsw i32 %1661, %1662
  %1664 = add nsw i32 %1663, %1660
  %1665 = sdiv i32 %1664, 8
  %1666 = getelementptr inbounds i32, ptr %1578, i64 4
  store i32 %1665, ptr %1666, align 4, !tbaa !25
  %1667 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 5), align 4, !tbaa !25
  %1668 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 5), align 4, !tbaa !25
  %1669 = mul nsw i32 %1668, %1667
  %1670 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 5), align 4, !tbaa !25
  %1671 = sub nsw i32 8, %1667
  %1672 = mul nsw i32 %1670, %1671
  %1673 = add nsw i32 %1672, %1669
  %1674 = sdiv i32 %1673, 8
  %1675 = getelementptr inbounds i32, ptr %1577, i64 5
  store i32 %1674, ptr %1675, align 4, !tbaa !25
  %1676 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 13), align 4, !tbaa !25
  %1677 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 5), align 4, !tbaa !25
  %1678 = mul nsw i32 %1677, %1676
  %1679 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 5), align 4, !tbaa !25
  %1680 = sub nsw i32 8, %1676
  %1681 = mul nsw i32 %1679, %1680
  %1682 = add nsw i32 %1681, %1678
  %1683 = sdiv i32 %1682, 8
  %1684 = getelementptr inbounds i32, ptr %1578, i64 5
  store i32 %1683, ptr %1684, align 4, !tbaa !25
  %1685 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 6), align 8, !tbaa !25
  %1686 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 6), align 8, !tbaa !25
  %1687 = mul nsw i32 %1686, %1685
  %1688 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 6), align 8, !tbaa !25
  %1689 = sub nsw i32 8, %1685
  %1690 = mul nsw i32 %1688, %1689
  %1691 = add nsw i32 %1690, %1687
  %1692 = sdiv i32 %1691, 8
  %1693 = getelementptr inbounds i32, ptr %1577, i64 6
  store i32 %1692, ptr %1693, align 4, !tbaa !25
  %1694 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 14), align 8, !tbaa !25
  %1695 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 6), align 8, !tbaa !25
  %1696 = mul nsw i32 %1695, %1694
  %1697 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 6), align 8, !tbaa !25
  %1698 = sub nsw i32 8, %1694
  %1699 = mul nsw i32 %1697, %1698
  %1700 = add nsw i32 %1699, %1696
  %1701 = sdiv i32 %1700, 8
  %1702 = getelementptr inbounds i32, ptr %1578, i64 6
  store i32 %1701, ptr %1702, align 4, !tbaa !25
  %1703 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 7), align 4, !tbaa !25
  %1704 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv2, i64 0, i64 7), align 4, !tbaa !25
  %1705 = mul nsw i32 %1704, %1703
  %1706 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumv3, i64 0, i64 7), align 4, !tbaa !25
  %1707 = sub nsw i32 8, %1703
  %1708 = mul nsw i32 %1706, %1707
  %1709 = add nsw i32 %1708, %1705
  %1710 = sdiv i32 %1709, 8
  %1711 = getelementptr inbounds i32, ptr %1577, i64 7
  store i32 %1710, ptr %1711, align 4, !tbaa !25
  %1712 = load i32, ptr getelementptr inbounds ([32 x i32], ptr @_ZZ9jpegModelR5MixerE2kx, i64 0, i64 15), align 4, !tbaa !25
  %1713 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu2, i64 0, i64 7), align 4, !tbaa !25
  %1714 = mul nsw i32 %1713, %1712
  %1715 = load i32, ptr getelementptr inbounds ([8 x i32], ptr @_ZZ9jpegModelR5MixerE5sumu3, i64 0, i64 7), align 4, !tbaa !25
  %1716 = sub nsw i32 8, %1712
  %1717 = mul nsw i32 %1715, %1716
  %1718 = add nsw i32 %1717, %1714
  %1719 = sdiv i32 %1718, 8
  %1720 = getelementptr inbounds i32, ptr %1578, i64 7
  store i32 %1719, ptr %1720, align 4, !tbaa !25
  %1721 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4sumu, i64 0, i32 3), align 8, !tbaa !61
  %1722 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4sumv, i64 0, i32 3), align 8, !tbaa !61
  %1723 = load ptr, ptr getelementptr inbounds (%class.Array.0, ptr @_ZZ9jpegModelR5MixerE4qtab, i64 0, i32 3), align 8, !tbaa !22
  %1724 = zext i32 %1406 to i64
  %1725 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1724
  %1726 = load i8, ptr %1725, align 1, !tbaa !9
  %1727 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1724
  %1728 = load i8, ptr %1727, align 1, !tbaa !9
  %1729 = zext i8 %1726 to i64
  %1730 = getelementptr inbounds i32, ptr %1721, i64 %1729
  %1731 = zext i8 %1728 to i64
  %1732 = getelementptr inbounds i32, ptr %1722, i64 %1731
  %1733 = or i32 %1406, %1405
  %1734 = sext i32 %1733 to i64
  %1735 = getelementptr inbounds i8, ptr %1723, i64 %1734
  br label %1736

1736:                                             ; preds = %1576, %1867
  %1737 = phi i64 [ 0, %1576 ], [ %1868, %1867 ]
  %1738 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8
  %1739 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8
  %1740 = getelementptr inbounds i32, ptr %1739, i64 %1402
  %1741 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8
  %1742 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE8adv_pred, i64 0, i32 3), align 8
  %1743 = getelementptr inbounds i32, ptr %1742, i64 %1737
  %1744 = add nuw nsw i64 %1737, 4
  %1745 = getelementptr inbounds i32, ptr %1742, i64 %1744
  %1746 = load i32, ptr %1730, align 4, !tbaa !25
  %1747 = trunc i64 %1737 to i32
  %1748 = mul nsw i32 %1746, %1747
  %1749 = load i32, ptr %1732, align 4, !tbaa !25
  %1750 = trunc i64 %1737 to i32
  %1751 = sub i32 2, %1750
  %1752 = mul nsw i32 %1749, %1751
  %1753 = add nsw i32 %1752, %1748
  %1754 = sdiv i32 %1753, 2
  %1755 = load i8, ptr %1735, align 1, !tbaa !9
  %1756 = zext i8 %1755 to i32
  %1757 = mul nuw nsw i32 %1756, 181
  %1758 = add nuw nsw i32 %1757, 181
  %1759 = sdiv i32 %1754, %1758
  br i1 %1408, label %1760, label %1770

1760:                                             ; preds = %1736
  %1761 = load i32, ptr %1740, align 4, !tbaa !25
  %1762 = sub nsw i32 %1407, %1761
  %1763 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %1764 = add nsw i32 %1763, -1
  %1765 = and i32 %1764, %1762
  %1766 = sext i32 %1765 to i64
  %1767 = getelementptr inbounds i32, ptr %1741, i64 %1766
  %1768 = load i32, ptr %1767, align 4, !tbaa !25
  %1769 = sub nsw i32 %1759, %1768
  br label %1770

1770:                                             ; preds = %1736, %1760
  %1771 = phi i32 [ %1769, %1760 ], [ %1759, %1736 ]
  %1772 = phi i32 [ 14, %1760 ], [ 10, %1736 ]
  %1773 = tail call i32 @llvm.abs.i32(i32 %1771, i1 true)
  %1774 = mul i32 %1773, %1772
  %1775 = and i32 %1774, 65534
  %1776 = or i32 %1775, 1
  %1777 = zext i32 %1776 to i64
  %1778 = getelementptr inbounds i8, ptr %1738, i64 %1777
  %1779 = load i8, ptr %1778, align 1, !tbaa !9
  %1780 = zext i8 %1779 to i32
  %1781 = sub nsw i32 0, %1780
  %1782 = icmp slt i32 %1771, 0
  %1783 = select i1 %1782, i32 %1781, i32 %1780
  %1784 = trunc i32 %1783 to i16
  %1785 = sdiv i16 %1784, 10
  %1786 = sext i16 %1785 to i32
  store i32 %1786, ptr %1743, align 4, !tbaa !25
  %1787 = sdiv i16 %1784, 40
  %1788 = sext i16 %1787 to i32
  store i32 %1788, ptr %1745, align 4, !tbaa !25
  %1789 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8
  %1790 = add nsw i32 %1789, -1
  %1791 = tail call i32 @llvm.abs.i32(i32 %1786, i1 true)
  %1792 = add nuw nsw i32 %1791, 1
  br label %1793

1793:                                             ; preds = %1770, %1864
  %1794 = phi i32 [ 1, %1770 ], [ %1865, %1864 ]
  %1795 = add nuw nsw i32 %1794, %1406
  %1796 = tail call i32 @llvm.smin.i32(i32 %1795, i32 63)
  %1797 = zext i32 %1796 to i64
  %1798 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %1797
  %1799 = load i8, ptr %1798, align 1, !tbaa !9
  %1800 = zext i8 %1799 to i64
  %1801 = getelementptr inbounds i32, ptr %1721, i64 %1800
  %1802 = load i32, ptr %1801, align 4, !tbaa !25
  %1803 = mul nsw i32 %1802, %1747
  %1804 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %1797
  %1805 = load i8, ptr %1804, align 1, !tbaa !9
  %1806 = zext i8 %1805 to i64
  %1807 = getelementptr inbounds i32, ptr %1722, i64 %1806
  %1808 = load i32, ptr %1807, align 4, !tbaa !25
  %1809 = mul nsw i32 %1808, %1751
  %1810 = add nsw i32 %1809, %1803
  %1811 = sdiv i32 %1810, 2
  %1812 = or i32 %1796, %1405
  %1813 = sext i32 %1812 to i64
  %1814 = getelementptr inbounds i8, ptr %1723, i64 %1813
  %1815 = load i8, ptr %1814, align 1, !tbaa !9
  %1816 = zext i8 %1815 to i32
  %1817 = mul nuw nsw i32 %1816, 181
  %1818 = add nuw nsw i32 %1817, 181
  %1819 = sdiv i32 %1811, %1818
  %1820 = icmp eq i32 %1796, 0
  br i1 %1820, label %1821, label %1829

1821:                                             ; preds = %1793
  %1822 = load i32, ptr %1740, align 4, !tbaa !25
  %1823 = sub nsw i32 %1407, %1822
  %1824 = and i32 %1790, %1823
  %1825 = sext i32 %1824 to i64
  %1826 = getelementptr inbounds i32, ptr %1741, i64 %1825
  %1827 = load i32, ptr %1826, align 4, !tbaa !25
  %1828 = sub nsw i32 %1819, %1827
  br label %1829

1829:                                             ; preds = %1793, %1821
  %1830 = phi i32 [ %1828, %1821 ], [ %1819, %1793 ]
  %1831 = phi i32 [ 14, %1821 ], [ 10, %1793 ]
  %1832 = tail call i32 @llvm.abs.i32(i32 %1830, i1 true)
  %1833 = mul i32 %1832, %1831
  %1834 = and i32 %1833, 65534
  %1835 = or i32 %1834, 1
  %1836 = zext i32 %1835 to i64
  %1837 = getelementptr inbounds i8, ptr %1738, i64 %1836
  %1838 = load i8, ptr %1837, align 1, !tbaa !9
  %1839 = zext i8 %1838 to i32
  %1840 = sub nsw i32 0, %1839
  %1841 = icmp slt i32 %1830, 0
  %1842 = select i1 %1841, i32 %1840, i32 %1839
  %1843 = trunc i32 %1842 to i16
  %1844 = sdiv i16 %1843, 10
  %1845 = tail call i16 @llvm.abs.i16(i16 %1844, i1 true)
  %1846 = zext i16 %1845 to i32
  %1847 = icmp ult i32 %1792, %1846
  br i1 %1847, label %1848, label %1864

1848:                                             ; preds = %1829
  %1849 = icmp sgt i32 %1842, 9
  %1850 = shl nuw nsw i32 %1794, 7
  %1851 = select i1 %1849, i32 64, i32 0
  %1852 = or i32 %1851, %1850
  %1853 = add nsw i32 %1852, %1786
  store i32 %1853, ptr %1743, align 4, !tbaa !25
  %1854 = trunc i32 %1842 to i16
  %1855 = sdiv i16 %1854, 40
  %1856 = tail call i16 @llvm.abs.i16(i16 %1855, i1 true)
  %1857 = zext i16 %1856 to i32
  %1858 = load i32, ptr %1745, align 4, !tbaa !25
  %1859 = tail call i32 @llvm.abs.i32(i32 %1858, i1 true)
  %1860 = add nuw nsw i32 %1859, 1
  %1861 = icmp ult i32 %1860, %1857
  br i1 %1861, label %1862, label %1867

1862:                                             ; preds = %1848
  %1863 = add nsw i32 %1858, %1852
  store i32 %1863, ptr %1745, align 4, !tbaa !25
  br label %1867

1864:                                             ; preds = %1829
  %1865 = add nuw nsw i32 %1794, 1
  %1866 = icmp eq i32 %1865, 8
  br i1 %1866, label %1867, label %1793, !llvm.loop !142

1867:                                             ; preds = %1864, %1862, %1848
  %1868 = add nuw nsw i64 %1737, 1
  %1869 = icmp eq i64 %1868, 3
  br i1 %1869, label %1870, label %1736, !llvm.loop !143

1870:                                             ; preds = %1867
  %1871 = zext i8 %1726 to i64
  %1872 = getelementptr inbounds i32, ptr %1721, i64 %1871
  %1873 = zext i8 %1728 to i64
  %1874 = getelementptr inbounds i32, ptr %1722, i64 %1873
  %1875 = getelementptr inbounds i8, ptr %1723, i64 %1734
  %1876 = load i32, ptr %1872, align 4, !tbaa !25
  %1877 = load i32, ptr %1874, align 4, !tbaa !25
  %1878 = add i32 %1877, %1876
  %1879 = shl i32 %1878, 1
  %1880 = zext i8 %1726 to i32
  %1881 = zext i8 %1728 to i32
  %1882 = lshr i64 34362885645, %1724
  %1883 = and i64 %1882, 1
  %1884 = icmp eq i64 %1883, 0
  br i1 %1884, label %1889, label %1885

1885:                                             ; preds = %1870
  %1886 = getelementptr inbounds i32, ptr %1721, i64 1
  %1887 = load i32, ptr %1886, align 4, !tbaa !25
  %1888 = sub nsw i32 %1879, %1887
  br label %1889

1889:                                             ; preds = %1885, %1870
  %1890 = phi i32 [ %1888, %1885 ], [ %1879, %1870 ]
  %1891 = lshr i64 402702435, %1724
  %1892 = and i64 %1891, 1
  %1893 = icmp eq i64 %1892, 0
  br i1 %1893, label %1898, label %1894

1894:                                             ; preds = %1889
  %1895 = getelementptr inbounds i32, ptr %1722, i64 1
  %1896 = load i32, ptr %1895, align 4, !tbaa !25
  %1897 = sub nsw i32 %1890, %1896
  br label %1898

1898:                                             ; preds = %1894, %1889
  %1899 = phi i32 [ %1897, %1894 ], [ %1890, %1889 ]
  %1900 = lshr i64 120266952479, %1724
  %1901 = and i64 %1900, 1
  %1902 = icmp eq i64 %1901, 0
  br i1 %1902, label %1907, label %1903

1903:                                             ; preds = %1898
  %1904 = getelementptr inbounds i32, ptr %1721, i64 2
  %1905 = load i32, ptr %1904, align 4, !tbaa !25
  %1906 = sub nsw i32 %1899, %1905
  br label %1907

1907:                                             ; preds = %1903, %1898
  %1908 = phi i32 [ %1906, %1903 ], [ %1899, %1898 ]
  %1909 = lshr i64 4399053267191, %1724
  %1910 = and i64 %1909, 1
  %1911 = icmp eq i64 %1910, 0
  br i1 %1911, label %1916, label %1912

1912:                                             ; preds = %1907
  %1913 = getelementptr inbounds i32, ptr %1722, i64 2
  %1914 = load i32, ptr %1913, align 4, !tbaa !25
  %1915 = sub nsw i32 %1908, %1914
  br label %1916

1916:                                             ; preds = %1912, %1907
  %1917 = phi i32 [ %1915, %1912 ], [ %1908, %1907 ]
  %1918 = lshr i64 281741281206207, %1724
  %1919 = and i64 %1918, 1
  %1920 = icmp eq i64 %1919, 0
  br i1 %1920, label %1925, label %1921

1921:                                             ; preds = %1916
  %1922 = getelementptr inbounds i32, ptr %1721, i64 3
  %1923 = load i32, ptr %1922, align 4, !tbaa !25
  %1924 = sub nsw i32 %1917, %1923
  br label %1925

1925:                                             ; preds = %1921, %1916
  %1926 = phi i32 [ %1924, %1921 ], [ %1917, %1916 ]
  %1927 = lshr i64 15395276976639, %1724
  %1928 = and i64 %1927, 1
  %1929 = icmp eq i64 %1928, 0
  br i1 %1929, label %1934, label %1930

1930:                                             ; preds = %1925
  %1931 = getelementptr inbounds i32, ptr %1722, i64 3
  %1932 = load i32, ptr %1931, align 4, !tbaa !25
  %1933 = sub nsw i32 %1926, %1932
  br label %1934

1934:                                             ; preds = %1930, %1925
  %1935 = phi i32 [ %1933, %1930 ], [ %1926, %1925 ]
  %1936 = lshr i64 985707912773631, %1724
  %1937 = and i64 %1936, 1
  %1938 = icmp eq i64 %1937, 0
  br i1 %1938, label %1943, label %1939

1939:                                             ; preds = %1934
  %1940 = getelementptr inbounds i32, ptr %1721, i64 4
  %1941 = load i32, ptr %1940, align 4, !tbaa !25
  %1942 = sub nsw i32 %1935, %1941
  br label %1943

1943:                                             ; preds = %1939, %1934
  %1944 = phi i32 [ %1942, %1939 ], [ %1935, %1934 ]
  %1945 = lshr i64 9041288393915391, %1724
  %1946 = and i64 %1945, 1
  %1947 = icmp eq i64 %1946, 0
  br i1 %1947, label %1952, label %1948

1948:                                             ; preds = %1943
  %1949 = getelementptr inbounds i32, ptr %1722, i64 4
  %1950 = load i32, ptr %1949, align 4, !tbaa !25
  %1951 = sub nsw i32 %1944, %1950
  br label %1952

1952:                                             ; preds = %1948, %1943
  %1953 = phi i32 [ %1951, %1948 ], [ %1944, %1943 ]
  %1954 = lshr i64 146297716576583679, %1724
  %1955 = and i64 %1954, 1
  %1956 = icmp eq i64 %1955, 0
  br i1 %1956, label %1961, label %1957

1957:                                             ; preds = %1952
  %1958 = getelementptr inbounds i32, ptr %1721, i64 5
  %1959 = load i32, ptr %1958, align 4, !tbaa !25
  %1960 = sub nsw i32 %1953, %1959
  br label %1961

1961:                                             ; preds = %1957, %1952
  %1962 = phi i32 [ %1960, %1957 ], [ %1953, %1952 ]
  %1963 = lshr i64 31595024962551807, %1724
  %1964 = and i64 %1963, 1
  %1965 = icmp eq i64 %1964, 0
  br i1 %1965, label %1970, label %1966

1966:                                             ; preds = %1961
  %1967 = getelementptr inbounds i32, ptr %1722, i64 5
  %1968 = load i32, ptr %1967, align 4, !tbaa !25
  %1969 = sub nsw i32 %1962, %1968
  br label %1970

1970:                                             ; preds = %1966, %1961
  %1971 = phi i32 [ %1969, %1966 ], [ %1962, %1961 ]
  %1972 = lshr i64 508873771604508671, %1724
  %1973 = and i64 %1972, 1
  %1974 = icmp eq i64 %1973, 0
  br i1 %1974, label %1979, label %1975

1975:                                             ; preds = %1970
  %1976 = getelementptr inbounds i32, ptr %1721, i64 6
  %1977 = load i32, ptr %1976, align 4, !tbaa !25
  %1978 = sub nsw i32 %1971, %1977
  br label %1979

1979:                                             ; preds = %1975, %1970
  %1980 = phi i32 [ %1978, %1975 ], [ %1971, %1970 ]
  %1981 = lshr i64 1222867778619310079, %1724
  %1982 = and i64 %1981, 1
  %1983 = icmp eq i64 %1982, 0
  br i1 %1983, label %1988, label %1984

1984:                                             ; preds = %1979
  %1985 = getelementptr inbounds i32, ptr %1722, i64 6
  %1986 = load i32, ptr %1985, align 4, !tbaa !25
  %1987 = sub nsw i32 %1980, %1986
  br label %1988

1988:                                             ; preds = %1984, %1979
  %1989 = phi i32 [ %1987, %1984 ], [ %1980, %1979 ]
  %1990 = lshr i64 5737572730862043135, %1724
  %1991 = and i64 %1990, 1
  %1992 = icmp eq i64 %1991, 0
  br i1 %1992, label %1997, label %1993

1993:                                             ; preds = %1988
  %1994 = getelementptr inbounds i32, ptr %1721, i64 7
  %1995 = load i32, ptr %1994, align 4, !tbaa !25
  %1996 = sub nsw i32 %1989, %1995
  br label %1997

1997:                                             ; preds = %1993, %1988
  %1998 = phi i32 [ %1996, %1993 ], [ %1989, %1988 ]
  %1999 = lshr i64 4178495926190473215, %1724
  %2000 = and i64 %1999, 1
  %2001 = icmp eq i64 %2000, 0
  br i1 %2001, label %2006, label %2002

2002:                                             ; preds = %1997
  %2003 = getelementptr inbounds i32, ptr %1722, i64 7
  %2004 = load i32, ptr %2003, align 4, !tbaa !25
  %2005 = sub nsw i32 %1998, %2004
  br label %2006

2006:                                             ; preds = %2002, %1997
  %2007 = phi i32 [ %2005, %2002 ], [ %1998, %1997 ]
  %2008 = load i8, ptr %1875, align 1, !tbaa !9
  %2009 = zext i8 %2008 to i32
  %2010 = mul nuw nsw i32 %2009, 181
  %2011 = add nuw nsw i32 %2010, 181
  %2012 = sdiv i32 %2007, %2011
  br i1 %1408, label %2013, label %2026

2013:                                             ; preds = %2006
  %2014 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8, !tbaa !61
  %2015 = getelementptr inbounds i32, ptr %2014, i64 %1402
  %2016 = load i32, ptr %2015, align 4, !tbaa !25
  %2017 = sub nsw i32 %1407, %2016
  %2018 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %2019 = add nsw i32 %2018, -1
  %2020 = and i32 %2019, %2017
  %2021 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8, !tbaa !61
  %2022 = sext i32 %2020 to i64
  %2023 = getelementptr inbounds i32, ptr %2021, i64 %2022
  %2024 = load i32, ptr %2023, align 4, !tbaa !25
  %2025 = sub nsw i32 %2012, %2024
  br label %2026

2026:                                             ; preds = %2013, %2006
  %2027 = phi i32 [ %2025, %2013 ], [ %2012, %2006 ]
  %2028 = tail call i32 @llvm.abs.i32(i32 %2027, i1 true)
  %2029 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %2030 = mul i32 %2028, 10
  %2031 = and i32 %2030, 65534
  %2032 = or i32 %2031, 1
  %2033 = zext i32 %2032 to i64
  %2034 = getelementptr inbounds i8, ptr %2029, i64 %2033
  %2035 = load i8, ptr %2034, align 1, !tbaa !9
  %2036 = zext i8 %2035 to i16
  %2037 = sub nsw i16 0, %2036
  %2038 = icmp slt i32 %2027, 0
  %2039 = select i1 %2038, i16 %2037, i16 %2036
  %2040 = sdiv i16 %2039, 10
  %2041 = sext i16 %2040 to i32
  %2042 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE8adv_pred, i64 0, i32 3), align 8, !tbaa !61
  %2043 = getelementptr inbounds i32, ptr %2042, i64 3
  store i32 %2041, ptr %2043, align 4, !tbaa !25
  %2044 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE3lcp, i64 0, i32 3), align 8, !tbaa !61
  %2045 = shl nuw nsw i32 %1881, 3
  %2046 = add nuw nsw i32 %2045, %1880
  %2047 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE4zpos, i64 0, i32 3), align 8
  %2048 = load ptr, ptr getelementptr inbounds (%class.IntBuf, ptr @_ZZ9jpegModelR5MixerE5cbuf2, i64 0, i32 0, i32 3), align 8
  %2049 = lshr i64 34362885645, %1724
  %2050 = and i64 %2049, 1
  %2051 = icmp eq i64 %2050, 0
  br i1 %2051, label %2052, label %2088

2052:                                             ; preds = %2026
  %2053 = add nsw i32 %2046, -1
  %2054 = sext i32 %2053 to i64
  %2055 = getelementptr inbounds i32, ptr %2047, i64 %2054
  %2056 = load i32, ptr %2055, align 4, !tbaa !25
  %2057 = add nsw i32 %2056, %1405
  %2058 = sext i32 %2057 to i64
  %2059 = getelementptr inbounds i8, ptr %1723, i64 %2058
  %2060 = load i8, ptr %2059, align 1, !tbaa !9
  %2061 = zext i8 %2060 to i32
  %2062 = add nuw nsw i32 %2061, 1
  %2063 = add nsw i32 %2056, %1407
  %2064 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %2065 = add nsw i32 %2064, -1
  %2066 = and i32 %2065, %2063
  %2067 = sext i32 %2066 to i64
  %2068 = getelementptr inbounds i32, ptr %2048, i64 %2067
  %2069 = load i32, ptr %2068, align 4, !tbaa !25
  %2070 = mul nsw i32 %2069, %2062
  %2071 = load i8, ptr %1875, align 1, !tbaa !9
  %2072 = zext i8 %2071 to i32
  %2073 = add nuw nsw i32 %2072, 1
  %2074 = sdiv i32 %2070, %2073
  %2075 = tail call i32 @llvm.abs.i32(i32 %2074, i1 true)
  %2076 = zext i32 %2075 to i64
  %2077 = shl nuw nsw i64 %2076, 3
  %2078 = and i64 %2077, 65528
  %2079 = or i64 %2078, 1
  %2080 = getelementptr inbounds i8, ptr %2029, i64 %2079
  %2081 = load i8, ptr %2080, align 1, !tbaa !9
  %2082 = zext i8 %2081 to i16
  %2083 = sub nsw i16 0, %2082
  %2084 = icmp slt i32 %2074, 0
  %2085 = select i1 %2084, i16 %2083, i16 %2082
  %2086 = sdiv i16 %2085, 8
  %2087 = sext i16 %2086 to i32
  br label %2088

2088:                                             ; preds = %2026, %2052
  %2089 = phi i32 [ %2087, %2052 ], [ 255, %2026 ]
  store i32 %2089, ptr %2044, align 4, !tbaa !25
  %2090 = lshr i64 402702435, %1724
  %2091 = and i64 %2090, 1
  %2092 = icmp eq i64 %2091, 0
  br i1 %2092, label %2093, label %2129

2093:                                             ; preds = %2088
  %2094 = add nsw i32 %2046, -8
  %2095 = sext i32 %2094 to i64
  %2096 = getelementptr inbounds i32, ptr %2047, i64 %2095
  %2097 = load i32, ptr %2096, align 4, !tbaa !25
  %2098 = add nsw i32 %2097, %1405
  %2099 = sext i32 %2098 to i64
  %2100 = getelementptr inbounds i8, ptr %1723, i64 %2099
  %2101 = load i8, ptr %2100, align 1, !tbaa !9
  %2102 = zext i8 %2101 to i32
  %2103 = add nuw nsw i32 %2102, 1
  %2104 = add nsw i32 %2097, %1407
  %2105 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %2106 = add nsw i32 %2105, -1
  %2107 = and i32 %2106, %2104
  %2108 = sext i32 %2107 to i64
  %2109 = getelementptr inbounds i32, ptr %2048, i64 %2108
  %2110 = load i32, ptr %2109, align 4, !tbaa !25
  %2111 = mul nsw i32 %2110, %2103
  %2112 = load i8, ptr %1875, align 1, !tbaa !9
  %2113 = zext i8 %2112 to i32
  %2114 = add nuw nsw i32 %2113, 1
  %2115 = sdiv i32 %2111, %2114
  %2116 = tail call i32 @llvm.abs.i32(i32 %2115, i1 true)
  %2117 = zext i32 %2116 to i64
  %2118 = shl nuw nsw i64 %2117, 3
  %2119 = and i64 %2118, 65528
  %2120 = or i64 %2119, 1
  %2121 = getelementptr inbounds i8, ptr %2029, i64 %2120
  %2122 = load i8, ptr %2121, align 1, !tbaa !9
  %2123 = zext i8 %2122 to i16
  %2124 = sub nsw i16 0, %2123
  %2125 = icmp slt i32 %2115, 0
  %2126 = select i1 %2125, i16 %2124, i16 %2123
  %2127 = sdiv i16 %2126, 8
  %2128 = sext i16 %2127 to i32
  br label %2129

2129:                                             ; preds = %2093, %2088
  %2130 = phi i32 [ %2128, %2093 ], [ 255, %2088 ]
  %2131 = getelementptr inbounds i32, ptr %2044, i64 1
  store i32 %2130, ptr %2131, align 4, !tbaa !25
  %2132 = lshr i64 120266952479, %1724
  %2133 = and i64 %2132, 1
  %2134 = icmp eq i64 %2133, 0
  br i1 %2134, label %2135, label %2171

2135:                                             ; preds = %2129
  %2136 = add nsw i32 %2046, -2
  %2137 = sext i32 %2136 to i64
  %2138 = getelementptr inbounds i32, ptr %2047, i64 %2137
  %2139 = load i32, ptr %2138, align 4, !tbaa !25
  %2140 = add nsw i32 %2139, %1405
  %2141 = sext i32 %2140 to i64
  %2142 = getelementptr inbounds i8, ptr %1723, i64 %2141
  %2143 = load i8, ptr %2142, align 1, !tbaa !9
  %2144 = zext i8 %2143 to i32
  %2145 = add nuw nsw i32 %2144, 1
  %2146 = add nsw i32 %2139, %1407
  %2147 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %2148 = add nsw i32 %2147, -1
  %2149 = and i32 %2148, %2146
  %2150 = sext i32 %2149 to i64
  %2151 = getelementptr inbounds i32, ptr %2048, i64 %2150
  %2152 = load i32, ptr %2151, align 4, !tbaa !25
  %2153 = mul nsw i32 %2152, %2145
  %2154 = load i8, ptr %1875, align 1, !tbaa !9
  %2155 = zext i8 %2154 to i32
  %2156 = add nuw nsw i32 %2155, 1
  %2157 = sdiv i32 %2153, %2156
  %2158 = tail call i32 @llvm.abs.i32(i32 %2157, i1 true)
  %2159 = zext i32 %2158 to i64
  %2160 = shl nuw nsw i64 %2159, 3
  %2161 = and i64 %2160, 65528
  %2162 = or i64 %2161, 1
  %2163 = getelementptr inbounds i8, ptr %2029, i64 %2162
  %2164 = load i8, ptr %2163, align 1, !tbaa !9
  %2165 = zext i8 %2164 to i16
  %2166 = sub nsw i16 0, %2165
  %2167 = icmp slt i32 %2157, 0
  %2168 = select i1 %2167, i16 %2166, i16 %2165
  %2169 = sdiv i16 %2168, 8
  %2170 = sext i16 %2169 to i32
  br label %2171

2171:                                             ; preds = %2135, %2129
  %2172 = phi i32 [ %2170, %2135 ], [ 255, %2129 ]
  %2173 = getelementptr inbounds i32, ptr %2044, i64 2
  store i32 %2172, ptr %2173, align 4, !tbaa !25
  %2174 = lshr i64 4399053267191, %1724
  %2175 = and i64 %2174, 1
  %2176 = icmp eq i64 %2175, 0
  br i1 %2176, label %2177, label %2213

2177:                                             ; preds = %2171
  %2178 = add nsw i32 %2046, -16
  %2179 = sext i32 %2178 to i64
  %2180 = getelementptr inbounds i32, ptr %2047, i64 %2179
  %2181 = load i32, ptr %2180, align 4, !tbaa !25
  %2182 = add nsw i32 %2181, %1405
  %2183 = sext i32 %2182 to i64
  %2184 = getelementptr inbounds i8, ptr %1723, i64 %2183
  %2185 = load i8, ptr %2184, align 1, !tbaa !9
  %2186 = zext i8 %2185 to i32
  %2187 = add nuw nsw i32 %2186, 1
  %2188 = add nsw i32 %2181, %1407
  %2189 = load i32, ptr @_ZZ9jpegModelR5MixerE5cbuf2, align 8, !tbaa !51
  %2190 = add nsw i32 %2189, -1
  %2191 = and i32 %2190, %2188
  %2192 = sext i32 %2191 to i64
  %2193 = getelementptr inbounds i32, ptr %2048, i64 %2192
  %2194 = load i32, ptr %2193, align 4, !tbaa !25
  %2195 = mul nsw i32 %2194, %2187
  %2196 = load i8, ptr %1875, align 1, !tbaa !9
  %2197 = zext i8 %2196 to i32
  %2198 = add nuw nsw i32 %2197, 1
  %2199 = sdiv i32 %2195, %2198
  %2200 = tail call i32 @llvm.abs.i32(i32 %2199, i1 true)
  %2201 = zext i32 %2200 to i64
  %2202 = shl nuw nsw i64 %2201, 3
  %2203 = and i64 %2202, 65528
  %2204 = or i64 %2203, 1
  %2205 = getelementptr inbounds i8, ptr %2029, i64 %2204
  %2206 = load i8, ptr %2205, align 1, !tbaa !9
  %2207 = zext i8 %2206 to i16
  %2208 = sub nsw i16 0, %2207
  %2209 = icmp slt i32 %2199, 0
  %2210 = select i1 %2209, i16 %2208, i16 %2207
  %2211 = sdiv i16 %2210, 8
  %2212 = sext i16 %2211 to i32
  br label %2213

2213:                                             ; preds = %2177, %2171
  %2214 = phi i32 [ %2212, %2177 ], [ 255, %2171 ]
  %2215 = getelementptr inbounds i32, ptr %2044, i64 3
  store i32 %2214, ptr %2215, align 4, !tbaa !25
  %2216 = load i32, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  %2217 = icmp eq i32 %2216, 0
  br i1 %2217, label %2218, label %2222

2218:                                             ; preds = %2213
  %2219 = getelementptr inbounds i32, ptr %2042, i64 2
  %2220 = load i32, ptr %2219, align 4, !tbaa !25
  %2221 = getelementptr inbounds i32, ptr %2042, i64 1
  store i32 %2220, ptr %2221, align 4, !tbaa !25
  store i32 1, ptr %2042, align 4, !tbaa !25
  br label %2222

2222:                                             ; preds = %2218, %2213
  %2223 = load i32, ptr @_ZZ9jpegModelR5MixerE3row, align 4, !tbaa !25
  %2224 = icmp eq i32 %2223, 0
  br i1 %2224, label %2225, label %2229

2225:                                             ; preds = %2222
  %2226 = load i32, ptr %2042, align 4, !tbaa !25
  %2227 = getelementptr inbounds i32, ptr %2042, i64 1
  store i32 %2226, ptr %2227, align 4, !tbaa !25
  %2228 = getelementptr inbounds i32, ptr %2042, i64 2
  store i32 1, ptr %2228, align 4, !tbaa !25
  br label %2229

2229:                                             ; preds = %1184, %2225, %2222, %1202, %1118, %1115
  %2230 = load i32, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %2231 = icmp ne i32 %2230, 0
  %2232 = load i32, ptr @_ZZ9jpegModelR5MixerE4data, align 4
  %2233 = icmp ne i32 %2232, 0
  %2234 = select i1 %2231, i1 %2233, i1 false
  br i1 %2234, label %2237, label %2235

2235:                                             ; preds = %2229
  %2236 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

2237:                                             ; preds = %2229
  %2238 = load i32, ptr @bpos, align 4, !tbaa !25
  %2239 = icmp eq i32 %2238, 0
  %2240 = select i1 %2239, i32 -2, i32 -1
  %2241 = load i32, ptr @pos, align 4, !tbaa !25
  %2242 = add i32 %2240, %2241
  %2243 = load i32, ptr @buf, align 8, !tbaa !20
  %2244 = add nsw i32 %2243, -1
  %2245 = and i32 %2244, %2242
  %2246 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %2247 = sext i32 %2245 to i64
  %2248 = getelementptr inbounds i8, ptr %2246, i64 %2247
  %2249 = load i8, ptr %2248, align 1, !tbaa !9
  %2250 = icmp eq i8 %2249, -1
  br i1 %2250, label %2251, label %2259

2251:                                             ; preds = %2237
  %2252 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %2253 = load i32, ptr %2252, align 8, !tbaa !64
  %2254 = add nsw i32 %2253, 1
  store i32 %2254, ptr %2252, align 8, !tbaa !64
  %2255 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %2256 = load ptr, ptr %2255, align 8, !tbaa !59
  %2257 = sext i32 %2253 to i64
  %2258 = getelementptr inbounds i16, ptr %2256, i64 %2257
  store i16 128, ptr %2258, align 2, !tbaa !31
  br label %3463

2259:                                             ; preds = %2237
  %2260 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE1t acquire, align 8
  %2261 = icmp eq i8 %2260, 0
  br i1 %2261, label %2262, label %2270, !prof !110

2262:                                             ; preds = %2259
  %2263 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE1t) #39
  %2264 = icmp eq i32 %2263, 0
  br i1 %2264, label %2270, label %2265

2265:                                             ; preds = %2262
  %2266 = load i32, ptr @level, align 4, !tbaa !25
  %2267 = shl i32 65536, %2266
  invoke void @_ZN2BHILi9EEC2Ei(ptr noundef nonnull align 8 dereferenceable(28) @_ZZ9jpegModelR5MixerE1t, i32 noundef %2267)
          to label %2268 unwind label %2607

2268:                                             ; preds = %2265
  %2269 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN2BHILi9EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE1t, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE1t) #39
  br label %2270

2270:                                             ; preds = %2268, %2262, %2259
  %2271 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE3cxt acquire, align 8
  %2272 = icmp eq i8 %2271, 0
  br i1 %2272, label %2273, label %2279, !prof !110

2273:                                             ; preds = %2270
  %2274 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE3cxt) #39
  %2275 = icmp eq i32 %2274, 0
  br i1 %2275, label %2279, label %2276

2276:                                             ; preds = %2273
  invoke void @_ZN5ArrayIjLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE3cxt, i32 noundef 28)
          to label %2277 unwind label %2609

2277:                                             ; preds = %2276
  %2278 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIjLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE3cxt, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE3cxt) #39
  br label %2279

2279:                                             ; preds = %2277, %2273, %2270
  %2280 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2cp acquire, align 8
  %2281 = icmp eq i8 %2280, 0
  br i1 %2281, label %2282, label %2288, !prof !110

2282:                                             ; preds = %2279
  %2283 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2cp) #39
  %2284 = icmp eq i32 %2283, 0
  br i1 %2284, label %2288, label %2285

2285:                                             ; preds = %2282
  invoke void @_ZN5ArrayIPhLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ9jpegModelR5MixerE2cp, i32 noundef 28)
          to label %2286 unwind label %2611

2286:                                             ; preds = %2285
  %2287 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIPhLi0EED2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2cp, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2cp) #39
  br label %2288

2288:                                             ; preds = %2286, %2282, %2279
  %2289 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2sm acquire, align 8
  %2290 = icmp eq i8 %2289, 0
  br i1 %2290, label %2291, label %2324, !prof !110

2291:                                             ; preds = %2288
  %2292 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2sm) #39
  %2293 = icmp eq i32 %2292, 0
  br i1 %2293, label %2324, label %2294

2294:                                             ; preds = %2291
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2sm, i32 noundef 256)
          to label %2295 unwind label %2613

2295:                                             ; preds = %2294
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 1), i32 noundef 256)
          to label %2296 unwind label %2615

2296:                                             ; preds = %2295
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 2), i32 noundef 256)
          to label %2297 unwind label %2615

2297:                                             ; preds = %2296
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 3), i32 noundef 256)
          to label %2298 unwind label %2615

2298:                                             ; preds = %2297
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 4), i32 noundef 256)
          to label %2299 unwind label %2615

2299:                                             ; preds = %2298
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 5), i32 noundef 256)
          to label %2300 unwind label %2615

2300:                                             ; preds = %2299
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 6), i32 noundef 256)
          to label %2301 unwind label %2615

2301:                                             ; preds = %2300
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 7), i32 noundef 256)
          to label %2302 unwind label %2615

2302:                                             ; preds = %2301
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 8), i32 noundef 256)
          to label %2303 unwind label %2615

2303:                                             ; preds = %2302
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 9), i32 noundef 256)
          to label %2304 unwind label %2615

2304:                                             ; preds = %2303
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 10), i32 noundef 256)
          to label %2305 unwind label %2615

2305:                                             ; preds = %2304
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 11), i32 noundef 256)
          to label %2306 unwind label %2615

2306:                                             ; preds = %2305
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 12), i32 noundef 256)
          to label %2307 unwind label %2615

2307:                                             ; preds = %2306
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 13), i32 noundef 256)
          to label %2308 unwind label %2615

2308:                                             ; preds = %2307
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 14), i32 noundef 256)
          to label %2309 unwind label %2615

2309:                                             ; preds = %2308
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 15), i32 noundef 256)
          to label %2310 unwind label %2615

2310:                                             ; preds = %2309
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 16), i32 noundef 256)
          to label %2311 unwind label %2615

2311:                                             ; preds = %2310
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 17), i32 noundef 256)
          to label %2312 unwind label %2615

2312:                                             ; preds = %2311
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 18), i32 noundef 256)
          to label %2313 unwind label %2615

2313:                                             ; preds = %2312
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 19), i32 noundef 256)
          to label %2314 unwind label %2615

2314:                                             ; preds = %2313
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 20), i32 noundef 256)
          to label %2315 unwind label %2615

2315:                                             ; preds = %2314
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 21), i32 noundef 256)
          to label %2316 unwind label %2615

2316:                                             ; preds = %2315
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 22), i32 noundef 256)
          to label %2317 unwind label %2615

2317:                                             ; preds = %2316
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 23), i32 noundef 256)
          to label %2318 unwind label %2615

2318:                                             ; preds = %2317
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 24), i32 noundef 256)
          to label %2319 unwind label %2615

2319:                                             ; preds = %2318
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 25), i32 noundef 256)
          to label %2320 unwind label %2615

2320:                                             ; preds = %2319
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 26), i32 noundef 256)
          to label %2321 unwind label %2615

2321:                                             ; preds = %2320
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 27), i32 noundef 256)
          to label %2322 unwind label %2615

2322:                                             ; preds = %2321
  %2323 = tail call i32 @__cxa_atexit(ptr nonnull @__cxx_global_array_dtor.13, ptr null, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2sm) #39
  br label %2324

2324:                                             ; preds = %2322, %2291, %2288
  %2325 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2m1 acquire, align 8
  %2326 = icmp eq i8 %2325, 0
  br i1 %2326, label %2327, label %2333, !prof !110

2327:                                             ; preds = %2324
  %2328 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2m1) #39
  %2329 = icmp eq i32 %2328, 0
  br i1 %2329, label %2333, label %2330

2330:                                             ; preds = %2327
  invoke void @_ZN5MixerC2Eiiii(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ9jpegModelR5MixerE2m1, i32 noundef 32, i32 noundef 770, i32 noundef 3, i32 noundef 0)
          to label %2331 unwind label %2622

2331:                                             ; preds = %2330
  %2332 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5MixerD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2m1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2m1) #39
  br label %2333

2333:                                             ; preds = %2331, %2327, %2324
  %2334 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2a1 acquire, align 8
  %2335 = icmp eq i8 %2334, 0
  br i1 %2335, label %2336, label %2342, !prof !110

2336:                                             ; preds = %2333
  %2337 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2a1) #39
  %2338 = icmp eq i32 %2337, 0
  br i1 %2338, label %2342, label %2339

2339:                                             ; preds = %2336
  invoke void @_ZN3APMC2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2a1, i32 noundef 32768)
          to label %2340 unwind label %2624

2340:                                             ; preds = %2339
  %2341 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN8StateMapD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2a1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2a1) #39
  br label %2342

2342:                                             ; preds = %2340, %2336, %2333
  %2343 = load atomic i8, ptr @_ZGVZ9jpegModelR5MixerE2a2 acquire, align 8
  %2344 = icmp eq i8 %2343, 0
  br i1 %2344, label %2345, label %2351, !prof !110

2345:                                             ; preds = %2342
  %2346 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ9jpegModelR5MixerE2a2) #39
  %2347 = icmp eq i32 %2346, 0
  br i1 %2347, label %2351, label %2348

2348:                                             ; preds = %2345
  invoke void @_ZN3APMC2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2a2, i32 noundef 65536)
          to label %2349 unwind label %2626

2349:                                             ; preds = %2348
  %2350 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN8StateMapD2Ev, ptr nonnull @_ZZ9jpegModelR5MixerE2a2, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ9jpegModelR5MixerE2a2) #39
  br label %2351

2351:                                             ; preds = %2349, %2345, %2342
  %2352 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2353 = getelementptr inbounds ptr, ptr %2352, i64 27
  %2354 = load ptr, ptr %2353, align 8, !tbaa !5
  %2355 = icmp eq ptr %2354, null
  br i1 %2355, label %2628, label %2356

2356:                                             ; preds = %2351
  %2357 = load ptr, ptr %2352, align 8, !tbaa !5
  %2358 = load i8, ptr %2357, align 1, !tbaa !9
  %2359 = zext i8 %2358 to i64
  %2360 = load i32, ptr @y, align 4, !tbaa !25
  %2361 = sext i32 %2360 to i64
  %2362 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2359, i64 %2361
  %2363 = load i8, ptr %2362, align 1, !tbaa !9
  store i8 %2363, ptr %2357, align 1, !tbaa !9
  %2364 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2365 = getelementptr inbounds ptr, ptr %2364, i64 1
  %2366 = load ptr, ptr %2365, align 8, !tbaa !5
  %2367 = load i8, ptr %2366, align 1, !tbaa !9
  %2368 = zext i8 %2367 to i64
  %2369 = load i32, ptr @y, align 4, !tbaa !25
  %2370 = sext i32 %2369 to i64
  %2371 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2368, i64 %2370
  %2372 = load i8, ptr %2371, align 1, !tbaa !9
  store i8 %2372, ptr %2366, align 1, !tbaa !9
  %2373 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2374 = getelementptr inbounds ptr, ptr %2373, i64 2
  %2375 = load ptr, ptr %2374, align 8, !tbaa !5
  %2376 = load i8, ptr %2375, align 1, !tbaa !9
  %2377 = zext i8 %2376 to i64
  %2378 = load i32, ptr @y, align 4, !tbaa !25
  %2379 = sext i32 %2378 to i64
  %2380 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2377, i64 %2379
  %2381 = load i8, ptr %2380, align 1, !tbaa !9
  store i8 %2381, ptr %2375, align 1, !tbaa !9
  %2382 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2383 = getelementptr inbounds ptr, ptr %2382, i64 3
  %2384 = load ptr, ptr %2383, align 8, !tbaa !5
  %2385 = load i8, ptr %2384, align 1, !tbaa !9
  %2386 = zext i8 %2385 to i64
  %2387 = load i32, ptr @y, align 4, !tbaa !25
  %2388 = sext i32 %2387 to i64
  %2389 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2386, i64 %2388
  %2390 = load i8, ptr %2389, align 1, !tbaa !9
  store i8 %2390, ptr %2384, align 1, !tbaa !9
  %2391 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2392 = getelementptr inbounds ptr, ptr %2391, i64 4
  %2393 = load ptr, ptr %2392, align 8, !tbaa !5
  %2394 = load i8, ptr %2393, align 1, !tbaa !9
  %2395 = zext i8 %2394 to i64
  %2396 = load i32, ptr @y, align 4, !tbaa !25
  %2397 = sext i32 %2396 to i64
  %2398 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2395, i64 %2397
  %2399 = load i8, ptr %2398, align 1, !tbaa !9
  store i8 %2399, ptr %2393, align 1, !tbaa !9
  %2400 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2401 = getelementptr inbounds ptr, ptr %2400, i64 5
  %2402 = load ptr, ptr %2401, align 8, !tbaa !5
  %2403 = load i8, ptr %2402, align 1, !tbaa !9
  %2404 = zext i8 %2403 to i64
  %2405 = load i32, ptr @y, align 4, !tbaa !25
  %2406 = sext i32 %2405 to i64
  %2407 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2404, i64 %2406
  %2408 = load i8, ptr %2407, align 1, !tbaa !9
  store i8 %2408, ptr %2402, align 1, !tbaa !9
  %2409 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2410 = getelementptr inbounds ptr, ptr %2409, i64 6
  %2411 = load ptr, ptr %2410, align 8, !tbaa !5
  %2412 = load i8, ptr %2411, align 1, !tbaa !9
  %2413 = zext i8 %2412 to i64
  %2414 = load i32, ptr @y, align 4, !tbaa !25
  %2415 = sext i32 %2414 to i64
  %2416 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2413, i64 %2415
  %2417 = load i8, ptr %2416, align 1, !tbaa !9
  store i8 %2417, ptr %2411, align 1, !tbaa !9
  %2418 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2419 = getelementptr inbounds ptr, ptr %2418, i64 7
  %2420 = load ptr, ptr %2419, align 8, !tbaa !5
  %2421 = load i8, ptr %2420, align 1, !tbaa !9
  %2422 = zext i8 %2421 to i64
  %2423 = load i32, ptr @y, align 4, !tbaa !25
  %2424 = sext i32 %2423 to i64
  %2425 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2422, i64 %2424
  %2426 = load i8, ptr %2425, align 1, !tbaa !9
  store i8 %2426, ptr %2420, align 1, !tbaa !9
  %2427 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2428 = getelementptr inbounds ptr, ptr %2427, i64 8
  %2429 = load ptr, ptr %2428, align 8, !tbaa !5
  %2430 = load i8, ptr %2429, align 1, !tbaa !9
  %2431 = zext i8 %2430 to i64
  %2432 = load i32, ptr @y, align 4, !tbaa !25
  %2433 = sext i32 %2432 to i64
  %2434 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2431, i64 %2433
  %2435 = load i8, ptr %2434, align 1, !tbaa !9
  store i8 %2435, ptr %2429, align 1, !tbaa !9
  %2436 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2437 = getelementptr inbounds ptr, ptr %2436, i64 9
  %2438 = load ptr, ptr %2437, align 8, !tbaa !5
  %2439 = load i8, ptr %2438, align 1, !tbaa !9
  %2440 = zext i8 %2439 to i64
  %2441 = load i32, ptr @y, align 4, !tbaa !25
  %2442 = sext i32 %2441 to i64
  %2443 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2440, i64 %2442
  %2444 = load i8, ptr %2443, align 1, !tbaa !9
  store i8 %2444, ptr %2438, align 1, !tbaa !9
  %2445 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2446 = getelementptr inbounds ptr, ptr %2445, i64 10
  %2447 = load ptr, ptr %2446, align 8, !tbaa !5
  %2448 = load i8, ptr %2447, align 1, !tbaa !9
  %2449 = zext i8 %2448 to i64
  %2450 = load i32, ptr @y, align 4, !tbaa !25
  %2451 = sext i32 %2450 to i64
  %2452 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2449, i64 %2451
  %2453 = load i8, ptr %2452, align 1, !tbaa !9
  store i8 %2453, ptr %2447, align 1, !tbaa !9
  %2454 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2455 = getelementptr inbounds ptr, ptr %2454, i64 11
  %2456 = load ptr, ptr %2455, align 8, !tbaa !5
  %2457 = load i8, ptr %2456, align 1, !tbaa !9
  %2458 = zext i8 %2457 to i64
  %2459 = load i32, ptr @y, align 4, !tbaa !25
  %2460 = sext i32 %2459 to i64
  %2461 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2458, i64 %2460
  %2462 = load i8, ptr %2461, align 1, !tbaa !9
  store i8 %2462, ptr %2456, align 1, !tbaa !9
  %2463 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2464 = getelementptr inbounds ptr, ptr %2463, i64 12
  %2465 = load ptr, ptr %2464, align 8, !tbaa !5
  %2466 = load i8, ptr %2465, align 1, !tbaa !9
  %2467 = zext i8 %2466 to i64
  %2468 = load i32, ptr @y, align 4, !tbaa !25
  %2469 = sext i32 %2468 to i64
  %2470 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2467, i64 %2469
  %2471 = load i8, ptr %2470, align 1, !tbaa !9
  store i8 %2471, ptr %2465, align 1, !tbaa !9
  %2472 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2473 = getelementptr inbounds ptr, ptr %2472, i64 13
  %2474 = load ptr, ptr %2473, align 8, !tbaa !5
  %2475 = load i8, ptr %2474, align 1, !tbaa !9
  %2476 = zext i8 %2475 to i64
  %2477 = load i32, ptr @y, align 4, !tbaa !25
  %2478 = sext i32 %2477 to i64
  %2479 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2476, i64 %2478
  %2480 = load i8, ptr %2479, align 1, !tbaa !9
  store i8 %2480, ptr %2474, align 1, !tbaa !9
  %2481 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2482 = getelementptr inbounds ptr, ptr %2481, i64 14
  %2483 = load ptr, ptr %2482, align 8, !tbaa !5
  %2484 = load i8, ptr %2483, align 1, !tbaa !9
  %2485 = zext i8 %2484 to i64
  %2486 = load i32, ptr @y, align 4, !tbaa !25
  %2487 = sext i32 %2486 to i64
  %2488 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2485, i64 %2487
  %2489 = load i8, ptr %2488, align 1, !tbaa !9
  store i8 %2489, ptr %2483, align 1, !tbaa !9
  %2490 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2491 = getelementptr inbounds ptr, ptr %2490, i64 15
  %2492 = load ptr, ptr %2491, align 8, !tbaa !5
  %2493 = load i8, ptr %2492, align 1, !tbaa !9
  %2494 = zext i8 %2493 to i64
  %2495 = load i32, ptr @y, align 4, !tbaa !25
  %2496 = sext i32 %2495 to i64
  %2497 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2494, i64 %2496
  %2498 = load i8, ptr %2497, align 1, !tbaa !9
  store i8 %2498, ptr %2492, align 1, !tbaa !9
  %2499 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2500 = getelementptr inbounds ptr, ptr %2499, i64 16
  %2501 = load ptr, ptr %2500, align 8, !tbaa !5
  %2502 = load i8, ptr %2501, align 1, !tbaa !9
  %2503 = zext i8 %2502 to i64
  %2504 = load i32, ptr @y, align 4, !tbaa !25
  %2505 = sext i32 %2504 to i64
  %2506 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2503, i64 %2505
  %2507 = load i8, ptr %2506, align 1, !tbaa !9
  store i8 %2507, ptr %2501, align 1, !tbaa !9
  %2508 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2509 = getelementptr inbounds ptr, ptr %2508, i64 17
  %2510 = load ptr, ptr %2509, align 8, !tbaa !5
  %2511 = load i8, ptr %2510, align 1, !tbaa !9
  %2512 = zext i8 %2511 to i64
  %2513 = load i32, ptr @y, align 4, !tbaa !25
  %2514 = sext i32 %2513 to i64
  %2515 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2512, i64 %2514
  %2516 = load i8, ptr %2515, align 1, !tbaa !9
  store i8 %2516, ptr %2510, align 1, !tbaa !9
  %2517 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2518 = getelementptr inbounds ptr, ptr %2517, i64 18
  %2519 = load ptr, ptr %2518, align 8, !tbaa !5
  %2520 = load i8, ptr %2519, align 1, !tbaa !9
  %2521 = zext i8 %2520 to i64
  %2522 = load i32, ptr @y, align 4, !tbaa !25
  %2523 = sext i32 %2522 to i64
  %2524 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2521, i64 %2523
  %2525 = load i8, ptr %2524, align 1, !tbaa !9
  store i8 %2525, ptr %2519, align 1, !tbaa !9
  %2526 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2527 = getelementptr inbounds ptr, ptr %2526, i64 19
  %2528 = load ptr, ptr %2527, align 8, !tbaa !5
  %2529 = load i8, ptr %2528, align 1, !tbaa !9
  %2530 = zext i8 %2529 to i64
  %2531 = load i32, ptr @y, align 4, !tbaa !25
  %2532 = sext i32 %2531 to i64
  %2533 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2530, i64 %2532
  %2534 = load i8, ptr %2533, align 1, !tbaa !9
  store i8 %2534, ptr %2528, align 1, !tbaa !9
  %2535 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2536 = getelementptr inbounds ptr, ptr %2535, i64 20
  %2537 = load ptr, ptr %2536, align 8, !tbaa !5
  %2538 = load i8, ptr %2537, align 1, !tbaa !9
  %2539 = zext i8 %2538 to i64
  %2540 = load i32, ptr @y, align 4, !tbaa !25
  %2541 = sext i32 %2540 to i64
  %2542 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2539, i64 %2541
  %2543 = load i8, ptr %2542, align 1, !tbaa !9
  store i8 %2543, ptr %2537, align 1, !tbaa !9
  %2544 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2545 = getelementptr inbounds ptr, ptr %2544, i64 21
  %2546 = load ptr, ptr %2545, align 8, !tbaa !5
  %2547 = load i8, ptr %2546, align 1, !tbaa !9
  %2548 = zext i8 %2547 to i64
  %2549 = load i32, ptr @y, align 4, !tbaa !25
  %2550 = sext i32 %2549 to i64
  %2551 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2548, i64 %2550
  %2552 = load i8, ptr %2551, align 1, !tbaa !9
  store i8 %2552, ptr %2546, align 1, !tbaa !9
  %2553 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2554 = getelementptr inbounds ptr, ptr %2553, i64 22
  %2555 = load ptr, ptr %2554, align 8, !tbaa !5
  %2556 = load i8, ptr %2555, align 1, !tbaa !9
  %2557 = zext i8 %2556 to i64
  %2558 = load i32, ptr @y, align 4, !tbaa !25
  %2559 = sext i32 %2558 to i64
  %2560 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2557, i64 %2559
  %2561 = load i8, ptr %2560, align 1, !tbaa !9
  store i8 %2561, ptr %2555, align 1, !tbaa !9
  %2562 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2563 = getelementptr inbounds ptr, ptr %2562, i64 23
  %2564 = load ptr, ptr %2563, align 8, !tbaa !5
  %2565 = load i8, ptr %2564, align 1, !tbaa !9
  %2566 = zext i8 %2565 to i64
  %2567 = load i32, ptr @y, align 4, !tbaa !25
  %2568 = sext i32 %2567 to i64
  %2569 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2566, i64 %2568
  %2570 = load i8, ptr %2569, align 1, !tbaa !9
  store i8 %2570, ptr %2564, align 1, !tbaa !9
  %2571 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2572 = getelementptr inbounds ptr, ptr %2571, i64 24
  %2573 = load ptr, ptr %2572, align 8, !tbaa !5
  %2574 = load i8, ptr %2573, align 1, !tbaa !9
  %2575 = zext i8 %2574 to i64
  %2576 = load i32, ptr @y, align 4, !tbaa !25
  %2577 = sext i32 %2576 to i64
  %2578 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2575, i64 %2577
  %2579 = load i8, ptr %2578, align 1, !tbaa !9
  store i8 %2579, ptr %2573, align 1, !tbaa !9
  %2580 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2581 = getelementptr inbounds ptr, ptr %2580, i64 25
  %2582 = load ptr, ptr %2581, align 8, !tbaa !5
  %2583 = load i8, ptr %2582, align 1, !tbaa !9
  %2584 = zext i8 %2583 to i64
  %2585 = load i32, ptr @y, align 4, !tbaa !25
  %2586 = sext i32 %2585 to i64
  %2587 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2584, i64 %2586
  %2588 = load i8, ptr %2587, align 1, !tbaa !9
  store i8 %2588, ptr %2582, align 1, !tbaa !9
  %2589 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2590 = getelementptr inbounds ptr, ptr %2589, i64 26
  %2591 = load ptr, ptr %2590, align 8, !tbaa !5
  %2592 = load i8, ptr %2591, align 1, !tbaa !9
  %2593 = zext i8 %2592 to i64
  %2594 = load i32, ptr @y, align 4, !tbaa !25
  %2595 = sext i32 %2594 to i64
  %2596 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2593, i64 %2595
  %2597 = load i8, ptr %2596, align 1, !tbaa !9
  store i8 %2597, ptr %2591, align 1, !tbaa !9
  %2598 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %2599 = getelementptr inbounds ptr, ptr %2598, i64 27
  %2600 = load ptr, ptr %2599, align 8, !tbaa !5
  %2601 = load i8, ptr %2600, align 1, !tbaa !9
  %2602 = zext i8 %2601 to i64
  %2603 = load i32, ptr @y, align 4, !tbaa !25
  %2604 = sext i32 %2603 to i64
  %2605 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %2602, i64 %2604
  %2606 = load i8, ptr %2605, align 1, !tbaa !9
  store i8 %2606, ptr %2600, align 1, !tbaa !9
  br label %2628

2607:                                             ; preds = %2265
  %2608 = landingpad { ptr, i32 }
          cleanup
  br label %3465

2609:                                             ; preds = %2276
  %2610 = landingpad { ptr, i32 }
          cleanup
  br label %3465

2611:                                             ; preds = %2285
  %2612 = landingpad { ptr, i32 }
          cleanup
  br label %3465

2613:                                             ; preds = %2294
  %2614 = landingpad { ptr, i32 }
          cleanup
  br label %3465

2615:                                             ; preds = %2321, %2320, %2319, %2318, %2317, %2316, %2315, %2314, %2313, %2312, %2311, %2310, %2309, %2308, %2307, %2306, %2305, %2304, %2303, %2302, %2301, %2300, %2299, %2298, %2297, %2296, %2295
  %2616 = phi ptr [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 1), %2295 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 2), %2296 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 3), %2297 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 4), %2298 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 5), %2299 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 6), %2300 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 7), %2301 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 8), %2302 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 9), %2303 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 10), %2304 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 11), %2305 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 12), %2306 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 13), %2307 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 14), %2308 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 15), %2309 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 16), %2310 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 17), %2311 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 18), %2312 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 19), %2313 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 20), %2314 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 21), %2315 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 22), %2316 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 23), %2317 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 24), %2318 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 25), %2319 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 26), %2320 ], [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 27), %2321 ]
  %2617 = landingpad { ptr, i32 }
          cleanup
  br label %2618

2618:                                             ; preds = %2615, %2618
  %2619 = phi ptr [ %2620, %2618 ], [ %2616, %2615 ]
  %2620 = getelementptr inbounds %class.StateMap, ptr %2619, i64 -1
  tail call void @_ZN8StateMapD2Ev(ptr noundef nonnull align 8 dereferenceable(32) %2620) #39
  %2621 = icmp eq ptr %2620, @_ZZ9jpegModelR5MixerE2sm
  br i1 %2621, label %3465, label %2618

2622:                                             ; preds = %2330
  %2623 = landingpad { ptr, i32 }
          cleanup
  br label %3465

2624:                                             ; preds = %2339
  %2625 = landingpad { ptr, i32 }
          cleanup
  br label %3465

2626:                                             ; preds = %2348
  %2627 = landingpad { ptr, i32 }
          cleanup
  br label %3465

2628:                                             ; preds = %2356, %2351
  %2629 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %2630 = icmp sgt i32 %2629, 0
  br i1 %2630, label %2631, label %2712

2631:                                             ; preds = %2628
  %2632 = load i32, ptr @y, align 4, !tbaa !25
  %2633 = shl i32 %2632, 12
  %2634 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 9, i32 3), align 8, !tbaa !61
  %2635 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8
  %2636 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 5, i32 3), align 8
  %2637 = load i32, ptr @_ZZ9jpegModelR5MixerE2m1, align 8
  %2638 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 4, i32 3), align 8
  %2639 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8
  %2640 = freeze i32 %2639
  %2641 = add i32 %2640, 7
  %2642 = and i32 %2641, -8
  %2643 = icmp sgt i32 %2642, 0
  %2644 = zext i32 %2642 to i64
  br i1 %2643, label %2645, label %2712

2645:                                             ; preds = %2631
  %2646 = zext i32 %2629 to i64
  %2647 = lshr i32 %2641, 3
  %2648 = zext i32 %2647 to i64
  %2649 = shl nuw nsw i64 %2648, 4
  %2650 = getelementptr i8, ptr %2638, i64 %2649
  %2651 = getelementptr i8, ptr %2635, i64 %2649
  br label %2652

2652:                                             ; preds = %2709, %2645
  %2653 = phi i64 [ 0, %2645 ], [ %2710, %2709 ]
  %2654 = getelementptr inbounds i32, ptr %2634, i64 %2653
  %2655 = load i32, ptr %2654, align 4, !tbaa !25
  %2656 = sub nsw i32 %2633, %2655
  %2657 = mul nsw i32 %2656, 7
  %2658 = icmp eq i32 %2633, %2655
  br i1 %2658, label %2709, label %2659

2659:                                             ; preds = %2652
  %2660 = getelementptr inbounds i32, ptr %2636, i64 %2653
  %2661 = load i32, ptr %2660, align 4, !tbaa !25
  %2662 = mul nsw i32 %2661, %2637
  %2663 = sext i32 %2662 to i64
  %2664 = getelementptr inbounds i16, ptr %2638, i64 %2663
  %2665 = shl nsw i64 %2663, 1
  %2666 = getelementptr i8, ptr %2650, i64 %2665
  %2667 = icmp ult ptr %2664, %2651
  %2668 = icmp ult ptr %2635, %2666
  %2669 = and i1 %2667, %2668
  br i1 %2669, label %2691, label %2670

2670:                                             ; preds = %2659
  %2671 = insertelement <8 x i32> poison, i32 %2657, i64 0
  %2672 = shufflevector <8 x i32> %2671, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %2673

2673:                                             ; preds = %2673, %2670
  %2674 = phi i64 [ 0, %2670 ], [ %2689, %2673 ]
  %2675 = getelementptr inbounds i16, ptr %2664, i64 %2674
  %2676 = load <8 x i16>, ptr %2675, align 2, !tbaa !31, !alias.scope !144, !noalias !147
  %2677 = sext <8 x i16> %2676 to <8 x i32>
  %2678 = getelementptr inbounds i16, ptr %2635, i64 %2674
  %2679 = load <8 x i16>, ptr %2678, align 2, !tbaa !31, !alias.scope !147
  %2680 = sext <8 x i16> %2679 to <8 x i32>
  %2681 = mul nsw <8 x i32> %2672, %2680
  %2682 = ashr <8 x i32> %2681, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %2683 = add nsw <8 x i32> %2682, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %2684 = ashr <8 x i32> %2683, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %2685 = add nsw <8 x i32> %2684, %2677
  %2686 = tail call <8 x i32> @llvm.smax.v8i32(<8 x i32> %2685, <8 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>)
  %2687 = tail call <8 x i32> @llvm.smin.v8i32(<8 x i32> %2686, <8 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>)
  %2688 = trunc <8 x i32> %2687 to <8 x i16>
  store <8 x i16> %2688, ptr %2675, align 2, !tbaa !31, !alias.scope !144, !noalias !147
  %2689 = add nuw i64 %2674, 8
  %2690 = icmp eq i64 %2689, %2644
  br i1 %2690, label %2709, label %2673, !llvm.loop !149

2691:                                             ; preds = %2659, %2691
  %2692 = phi i64 [ %2707, %2691 ], [ 0, %2659 ]
  %2693 = getelementptr inbounds i16, ptr %2664, i64 %2692
  %2694 = load i16, ptr %2693, align 2, !tbaa !31
  %2695 = sext i16 %2694 to i32
  %2696 = getelementptr inbounds i16, ptr %2635, i64 %2692
  %2697 = load i16, ptr %2696, align 2, !tbaa !31
  %2698 = sext i16 %2697 to i32
  %2699 = mul nsw i32 %2657, %2698
  %2700 = ashr i32 %2699, 15
  %2701 = add nsw i32 %2700, 1
  %2702 = ashr i32 %2701, 1
  %2703 = add nsw i32 %2702, %2695
  %2704 = tail call i32 @llvm.smax.i32(i32 %2703, i32 -32768)
  %2705 = tail call i32 @llvm.smin.i32(i32 %2704, i32 32767)
  %2706 = trunc i32 %2705 to i16
  store i16 %2706, ptr %2693, align 2, !tbaa !31
  %2707 = add nuw nsw i64 %2692, 1
  %2708 = icmp eq i64 %2707, %2644
  br i1 %2708, label %2709, label %2691, !llvm.loop !150

2709:                                             ; preds = %2673, %2691, %2652
  %2710 = add nuw nsw i64 %2653, 1
  %2711 = icmp eq i64 %2710, %2646
  br i1 %2711, label %2712, label %2652, !llvm.loop !151

2712:                                             ; preds = %2709, %2628, %2631
  store i32 0, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  store i32 0, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  store i32 0, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %2713 = load i32, ptr @_ZZ9jpegModelR5MixerE6mcupos, align 4, !tbaa !25
  %2714 = ashr i32 %2713, 6
  %2715 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE5color, i64 0, i32 3), align 8, !tbaa !61
  %2716 = sext i32 %2714 to i64
  %2717 = getelementptr inbounds i32, ptr %2715, i64 %2716
  %2718 = load i32, ptr %2717, align 4, !tbaa !25
  %2719 = and i32 %2713, 63
  %2720 = shl i32 %2718, 6
  %2721 = or i32 %2720, %2719
  %2722 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffcode, align 4, !tbaa !25
  %2723 = shl i32 %2722, 1
  %2724 = icmp eq i32 %2718, 0
  %2725 = zext i1 %2724 to i32
  %2726 = or i32 %2723, %2725
  %2727 = load i32, ptr @_ZZ9jpegModelR5MixerE8huffbits, align 4, !tbaa !25
  %2728 = add nsw i32 %2727, 1
  %2729 = shl nuw i32 1, %2728
  %2730 = or i32 %2729, %2726
  %2731 = load i32, ptr @_ZZ9jpegModelR5MixerE7hbcount, align 4, !tbaa !25
  %2732 = add nsw i32 %2731, 1
  %2733 = icmp sgt i32 %2731, 1
  %2734 = icmp eq i32 %2727, 0
  %2735 = select i1 %2733, i1 true, i1 %2734
  %2736 = select i1 %2735, i32 0, i32 %2732
  store i32 %2736, ptr @_ZZ9jpegModelR5MixerE7hbcount, align 4
  %2737 = icmp ult i32 %2721, 256
  br i1 %2737, label %2740, label %2738

2738:                                             ; preds = %2712
  store i32 0, ptr @_ZZ9jpegModelR5MixerE4jpeg, align 4, !tbaa !25
  %2739 = load i32, ptr @_ZZ9jpegModelR5MixerE9next_jpeg, align 4, !tbaa !25
  br label %3463

2740:                                             ; preds = %2712
  %2741 = icmp eq i32 %2736, 0
  br i1 %2741, label %2742, label %3241

2742:                                             ; preds = %2740
  %2743 = zext i32 %2719 to i64
  %2744 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzv, i64 0, i64 %2743
  %2745 = load i8, ptr %2744, align 1, !tbaa !9
  %2746 = zext i8 %2745 to i32
  %2747 = getelementptr inbounds [64 x i8], ptr @_ZZ9jpegModelR5MixerE3zzu, i64 0, i64 %2743
  %2748 = load i8, ptr %2747, align 1, !tbaa !9
  %2749 = zext i8 %2748 to i32
  %2750 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE8adv_pred, i64 0, i32 3), align 8, !tbaa !61
  %2751 = getelementptr inbounds i32, ptr %2750, i64 2
  %2752 = load i32, ptr %2751, align 4, !tbaa !25
  %2753 = mul i32 %2730, 30005491
  %2754 = mul i32 %2721, 50004239
  %2755 = mul i32 %2752, 70004807
  %2756 = add i32 %2753, %2754
  %2757 = add i32 %2756, 90000480
  %2758 = add i32 %2757, %2755
  %2759 = lshr i32 %2758, 9
  %2760 = lshr i32 %2730, 3
  %2761 = lshr i32 %2721, 4
  %2762 = lshr i32 %2752, 5
  %2763 = xor i32 %2760, %2761
  %2764 = xor i32 %2762, %2759
  %2765 = xor i32 %2764, %2763
  %2766 = xor i32 %2765, %2758
  %2767 = xor i32 %2766, 67108863
  %2768 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE3cxt, i64 0, i32 3), align 8, !tbaa !84
  store i32 %2767, ptr %2768, align 4, !tbaa !25
  %2769 = load i32, ptr %2750, align 4, !tbaa !25
  %2770 = mul i32 %2769, 70004807
  %2771 = add i32 %2756, 290003459
  %2772 = add i32 %2771, %2770
  %2773 = lshr i32 %2772, 9
  %2774 = lshr i32 %2769, 5
  %2775 = xor i32 %2774, %2773
  %2776 = xor i32 %2775, %2763
  %2777 = xor i32 %2776, %2772
  %2778 = xor i32 %2777, 67108863
  %2779 = getelementptr inbounds i32, ptr %2768, i64 1
  store i32 %2778, ptr %2779, align 4, !tbaa !25
  %2780 = getelementptr inbounds i32, ptr %2750, i64 1
  %2781 = load i32, ptr %2780, align 4, !tbaa !25
  %2782 = mul i32 %2781, 70004807
  %2783 = add i32 %2756, 490006438
  %2784 = add i32 %2783, %2782
  %2785 = lshr i32 %2784, 9
  %2786 = lshr i32 %2781, 5
  %2787 = xor i32 %2786, %2785
  %2788 = xor i32 %2787, %2763
  %2789 = xor i32 %2788, %2784
  %2790 = xor i32 %2789, 67108863
  %2791 = getelementptr inbounds i32, ptr %2768, i64 2
  store i32 %2790, ptr %2791, align 4, !tbaa !25
  %2792 = load i32, ptr @_ZZ9jpegModelR5MixerE3rs1, align 4, !tbaa !25
  %2793 = load i32, ptr %2751, align 4, !tbaa !25
  %2794 = mul i32 %2792, 50004239
  %2795 = mul i32 %2793, 70004807
  %2796 = add i32 %2794, %2753
  %2797 = add i32 %2796, 690009417
  %2798 = add i32 %2797, %2795
  %2799 = lshr i32 %2798, 9
  %2800 = lshr i32 %2792, 4
  %2801 = lshr i32 %2793, 5
  %2802 = xor i32 %2800, %2760
  %2803 = xor i32 %2801, %2799
  %2804 = xor i32 %2803, %2802
  %2805 = xor i32 %2804, %2798
  %2806 = xor i32 %2805, 67108862
  %2807 = getelementptr inbounds i32, ptr %2768, i64 3
  store i32 %2806, ptr %2807, align 4, !tbaa !25
  %2808 = load i32, ptr %2750, align 4, !tbaa !25
  %2809 = mul i32 %2808, 70004807
  %2810 = add i32 %2796, 890012396
  %2811 = add i32 %2810, %2809
  %2812 = lshr i32 %2811, 9
  %2813 = lshr i32 %2808, 5
  %2814 = xor i32 %2813, %2812
  %2815 = xor i32 %2814, %2802
  %2816 = xor i32 %2815, %2811
  %2817 = xor i32 %2816, 67108862
  %2818 = getelementptr inbounds i32, ptr %2768, i64 4
  store i32 %2817, ptr %2818, align 4, !tbaa !25
  %2819 = load i32, ptr %2780, align 4, !tbaa !25
  %2820 = mul i32 %2819, 70004807
  %2821 = add i32 %2796, 1090015375
  %2822 = add i32 %2821, %2820
  %2823 = lshr i32 %2822, 9
  %2824 = lshr i32 %2819, 5
  %2825 = xor i32 %2824, %2823
  %2826 = xor i32 %2825, %2802
  %2827 = xor i32 %2826, %2822
  %2828 = xor i32 %2827, 67108862
  %2829 = getelementptr inbounds i32, ptr %2768, i64 5
  store i32 %2828, ptr %2829, align 4, !tbaa !25
  %2830 = load i32, ptr %2751, align 4, !tbaa !25
  %2831 = load i32, ptr %2750, align 4, !tbaa !25
  %2832 = mul i32 %2830, 50004239
  %2833 = mul i32 %2831, 70004807
  %2834 = add i32 %2753, 1290018354
  %2835 = add i32 %2834, %2832
  %2836 = add i32 %2835, %2833
  %2837 = lshr i32 %2836, 9
  %2838 = lshr i32 %2830, 4
  %2839 = lshr i32 %2831, 5
  %2840 = xor i32 %2838, %2839
  %2841 = xor i32 %2840, %2837
  %2842 = xor i32 %2841, %2760
  %2843 = xor i32 %2842, %2836
  %2844 = xor i32 %2843, 67108862
  %2845 = getelementptr inbounds i32, ptr %2768, i64 6
  store i32 %2844, ptr %2845, align 4, !tbaa !25
  %2846 = load i32, ptr @_ZZ9jpegModelR5MixerE4cpos, align 4, !tbaa !25
  %2847 = load i32, ptr @_ZZ9jpegModelR5MixerE5width, align 4, !tbaa !25
  %2848 = load i32, ptr @_ZZ9jpegModelR5MixerE7mcusize, align 4, !tbaa !25
  %2849 = mul nsw i32 %2848, %2847
  %2850 = sub nsw i32 %2846, %2849
  %2851 = load i32, ptr @_ZZ9jpegModelR5MixerE4cbuf, align 8, !tbaa !20
  %2852 = add nsw i32 %2851, -1
  %2853 = and i32 %2852, %2850
  %2854 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @_ZZ9jpegModelR5MixerE4cbuf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %2855 = sext i32 %2853 to i64
  %2856 = getelementptr inbounds i8, ptr %2854, i64 %2855
  %2857 = load i8, ptr %2856, align 1, !tbaa !9
  %2858 = zext i8 %2857 to i32
  %2859 = getelementptr inbounds i32, ptr %2750, i64 3
  %2860 = load i32, ptr %2859, align 4, !tbaa !25
  %2861 = mul i32 %2858, 50004239
  %2862 = mul i32 %2860, 70004807
  %2863 = add i32 %2753, 1490021333
  %2864 = add i32 %2863, %2861
  %2865 = add i32 %2864, %2862
  %2866 = lshr i32 %2865, 9
  %2867 = lshr i32 %2858, 4
  %2868 = lshr i32 %2860, 5
  %2869 = xor i32 %2867, %2868
  %2870 = xor i32 %2869, %2866
  %2871 = xor i32 %2870, %2760
  %2872 = xor i32 %2871, %2865
  %2873 = xor i32 %2872, 67108861
  %2874 = getelementptr inbounds i32, ptr %2768, i64 7
  store i32 %2873, ptr %2874, align 4, !tbaa !25
  %2875 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE2ls, i64 0, i32 3), align 8, !tbaa !61
  %2876 = getelementptr inbounds i32, ptr %2875, i64 %2716
  %2877 = load i32, ptr %2876, align 4, !tbaa !25
  %2878 = sub nsw i32 %2846, %2877
  %2879 = and i32 %2878, %2852
  %2880 = sext i32 %2879 to i64
  %2881 = getelementptr inbounds i8, ptr %2854, i64 %2880
  %2882 = load i8, ptr %2881, align 1, !tbaa !9
  %2883 = zext i8 %2882 to i32
  %2884 = load i32, ptr %2859, align 4, !tbaa !25
  %2885 = mul i32 %2883, 50004239
  %2886 = mul i32 %2884, 70004807
  %2887 = add i32 %2753, 1690024312
  %2888 = add i32 %2887, %2885
  %2889 = add i32 %2888, %2886
  %2890 = lshr i32 %2889, 9
  %2891 = lshr i32 %2883, 4
  %2892 = lshr i32 %2884, 5
  %2893 = xor i32 %2891, %2892
  %2894 = xor i32 %2893, %2890
  %2895 = xor i32 %2894, %2760
  %2896 = xor i32 %2895, %2889
  %2897 = xor i32 %2896, 67108861
  %2898 = getelementptr inbounds i32, ptr %2768, i64 8
  store i32 %2897, ptr %2898, align 4, !tbaa !25
  %2899 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE3lcp, i64 0, i32 3), align 8, !tbaa !61
  %2900 = load i32, ptr %2899, align 4, !tbaa !25
  %2901 = getelementptr inbounds i32, ptr %2899, i64 1
  %2902 = load i32, ptr %2901, align 4, !tbaa !25
  %2903 = load i32, ptr %2780, align 4, !tbaa !25
  %2904 = add i32 %2753, 2000029790
  %2905 = mul i32 %2900, 50004239
  %2906 = add i32 %2904, %2905
  %2907 = mul i32 %2902, 70004807
  %2908 = add i32 %2906, %2907
  %2909 = mul i32 %2903, 110002499
  %2910 = add i32 %2908, %2909
  %2911 = lshr i32 %2910, 9
  %2912 = lshr i32 %2900, 4
  %2913 = lshr i32 %2902, 5
  %2914 = lshr i32 %2903, 6
  %2915 = xor i32 %2912, %2913
  %2916 = xor i32 %2915, %2914
  %2917 = xor i32 %2916, %2911
  %2918 = xor i32 %2917, %2760
  %2919 = xor i32 %2918, %2910
  %2920 = xor i32 %2919, 2
  %2921 = getelementptr inbounds i32, ptr %2768, i64 9
  store i32 %2920, ptr %2921, align 4, !tbaa !25
  %2922 = load i32, ptr %2899, align 4, !tbaa !25
  %2923 = load i32, ptr %2901, align 4, !tbaa !25
  %2924 = mul i32 %2922, 50004239
  %2925 = mul i32 %2923, 70004807
  %2926 = mul i32 %2721, 110002499
  %2927 = add i32 %2926, -2094934527
  %2928 = add i32 %2927, %2753
  %2929 = add i32 %2928, %2924
  %2930 = add i32 %2929, %2925
  %2931 = lshr i32 %2930, 9
  %2932 = lshr i32 %2922, 4
  %2933 = lshr i32 %2923, 5
  %2934 = and i32 %2718, 67108863
  %2935 = xor i32 %2934, %2932
  %2936 = xor i32 %2935, %2933
  %2937 = xor i32 %2936, %2931
  %2938 = xor i32 %2937, %2760
  %2939 = xor i32 %2938, %2930
  %2940 = xor i32 %2939, 2
  %2941 = getelementptr inbounds i32, ptr %2768, i64 10
  store i32 %2940, ptr %2941, align 4, !tbaa !25
  %2942 = load i32, ptr %2899, align 4, !tbaa !25
  %2943 = getelementptr inbounds i32, ptr %2899, i64 2
  %2944 = load i32, ptr %2943, align 4, !tbaa !25
  %2945 = sdiv i32 %2944, 3
  %2946 = mul i32 %2749, 50004239
  %2947 = mul i32 %2942, 70004807
  %2948 = mul i32 %2945, 110002499
  %2949 = add i32 %2946, %2753
  %2950 = add i32 %2949, -1894931548
  %2951 = add i32 %2950, %2947
  %2952 = add i32 %2951, %2948
  %2953 = lshr i32 %2952, 9
  %2954 = lshr i32 %2749, 4
  %2955 = lshr i32 %2942, 5
  %2956 = lshr i32 %2945, 6
  %2957 = xor i32 %2954, %2760
  %2958 = xor i32 %2955, %2956
  %2959 = xor i32 %2958, %2953
  %2960 = xor i32 %2959, %2957
  %2961 = xor i32 %2960, %2952
  %2962 = xor i32 %2961, 3
  %2963 = getelementptr inbounds i32, ptr %2768, i64 11
  store i32 %2962, ptr %2963, align 4, !tbaa !25
  %2964 = load i32, ptr %2901, align 4, !tbaa !25
  %2965 = getelementptr inbounds i32, ptr %2899, i64 3
  %2966 = load i32, ptr %2965, align 4, !tbaa !25
  %2967 = sdiv i32 %2966, 3
  %2968 = mul i32 %2746, 50004239
  %2969 = mul i32 %2964, 70004807
  %2970 = mul i32 %2967, 110002499
  %2971 = add i32 %2968, %2753
  %2972 = add i32 %2971, -1694928569
  %2973 = add i32 %2972, %2969
  %2974 = add i32 %2973, %2970
  %2975 = lshr i32 %2974, 9
  %2976 = lshr i32 %2746, 4
  %2977 = lshr i32 %2964, 5
  %2978 = lshr i32 %2967, 6
  %2979 = xor i32 %2976, %2760
  %2980 = xor i32 %2977, %2978
  %2981 = xor i32 %2980, %2975
  %2982 = xor i32 %2981, %2979
  %2983 = xor i32 %2982, %2974
  %2984 = xor i32 %2983, 3
  %2985 = getelementptr inbounds i32, ptr %2768, i64 12
  store i32 %2984, ptr %2985, align 4, !tbaa !25
  %2986 = ashr i32 %2713, 2
  %2987 = tail call i32 @llvm.smin.i32(i32 %2719, i32 3)
  %2988 = mul i32 %2986, 50004239
  %2989 = mul nuw nsw i32 %2987, 70004807
  %2990 = add i32 %2988, -1604928089
  %2991 = add i32 %2990, %2989
  %2992 = add i32 %2991, %2753
  %2993 = lshr i32 %2992, 9
  %2994 = lshr i32 %2986, 4
  %2995 = xor i32 %2994, %2993
  %2996 = xor i32 %2995, %2760
  %2997 = xor i32 %2996, %2992
  %2998 = xor i32 %2997, 67108860
  %2999 = getelementptr inbounds i32, ptr %2768, i64 13
  store i32 %2998, ptr %2999, align 4, !tbaa !25
  %3000 = load i32, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  %3001 = ashr i32 %3000, 1
  %3002 = mul i32 %3001, 70004807
  %3003 = add i32 %2756, -1404925110
  %3004 = add i32 %3003, %3002
  %3005 = lshr i32 %3004, 9
  %3006 = lshr i32 %3001, 5
  %3007 = xor i32 %3006, %3005
  %3008 = xor i32 %3007, %2763
  %3009 = xor i32 %3008, %3004
  %3010 = xor i32 %3009, 67108860
  %3011 = getelementptr inbounds i32, ptr %2768, i64 14
  store i32 %3010, ptr %3011, align 4, !tbaa !25
  %3012 = ashr i32 %3000, 2
  %3013 = load i32, ptr %2899, align 4, !tbaa !25
  %3014 = load i32, ptr %2943, align 4, !tbaa !25
  %3015 = sdiv i32 %3014, 3
  %3016 = shl nsw i32 %3015, 8
  %3017 = add nsw i32 %3016, %3013
  %3018 = load i32, ptr %2901, align 4, !tbaa !25
  %3019 = load i32, ptr %2965, align 4, !tbaa !25
  %3020 = sdiv i32 %3019, 3
  %3021 = shl nsw i32 %3020, 8
  %3022 = add nsw i32 %3021, %3018
  %3023 = add i32 %2753, -1094919632
  %3024 = mul i32 %3012, 50004239
  %3025 = add i32 %3023, %3024
  %3026 = mul i32 %3017, 70004807
  %3027 = add i32 %3025, %3026
  %3028 = mul i32 %3022, 110002499
  %3029 = add i32 %3027, %3028
  %3030 = lshr i32 %3029, 9
  %3031 = lshr i32 %3012, 4
  %3032 = lshr i32 %3017, 5
  %3033 = lshr i32 %3022, 6
  %3034 = xor i32 %3031, %3032
  %3035 = xor i32 %3034, %3033
  %3036 = xor i32 %3035, %3030
  %3037 = xor i32 %3036, %2760
  %3038 = xor i32 %3037, %3029
  %3039 = xor i32 %3038, 4
  %3040 = getelementptr inbounds i32, ptr %2768, i64 15
  store i32 %3039, ptr %3040, align 4, !tbaa !25
  %3041 = load i32, ptr @_ZZ9jpegModelR5MixerE4ssum, align 4, !tbaa !25
  %3042 = ashr i32 %3041, 4
  %3043 = mul i32 %3042, 50004239
  %3044 = mul i32 %2721, 70004807
  %3045 = add i32 %2753, %3044
  %3046 = add i32 %3045, -1004919152
  %3047 = add i32 %3046, %3043
  %3048 = lshr i32 %3047, 9
  %3049 = lshr i32 %3042, 4
  %3050 = lshr i32 %2721, 5
  %3051 = xor i32 %3049, %3048
  %3052 = xor i32 %3051, %2760
  %3053 = xor i32 %3052, %3050
  %3054 = xor i32 %3053, %3047
  %3055 = xor i32 %3054, 67108859
  %3056 = getelementptr inbounds i32, ptr %2768, i64 16
  store i32 %3055, ptr %3056, align 4, !tbaa !25
  %3057 = add i32 %2796, -804916173
  %3058 = add i32 %3057, %3044
  %3059 = lshr i32 %3058, 9
  %3060 = xor i32 %2802, %3059
  %3061 = xor i32 %3060, %3050
  %3062 = xor i32 %3061, %3058
  %3063 = xor i32 %3062, 67108859
  %3064 = getelementptr inbounds i32, ptr %2768, i64 17
  store i32 %3063, ptr %3064, align 4, !tbaa !25
  %3065 = ashr i32 %2713, 3
  %3066 = load i32, ptr @_ZZ9jpegModelR5MixerE5ssum3, align 4, !tbaa !25
  %3067 = ashr i32 %3066, 3
  %3068 = load i32, ptr %2859, align 4, !tbaa !25
  %3069 = mul i32 %3065, 50004239
  %3070 = mul i32 %3067, 70004807
  %3071 = mul i32 %3068, 110002499
  %3072 = add i32 %3069, -494910695
  %3073 = add i32 %3072, %2753
  %3074 = add i32 %3073, %3070
  %3075 = add i32 %3074, %3071
  %3076 = lshr i32 %3075, 9
  %3077 = lshr i32 %3065, 4
  %3078 = lshr i32 %3067, 5
  %3079 = lshr i32 %3068, 6
  %3080 = xor i32 %3077, %3078
  %3081 = xor i32 %3080, %3079
  %3082 = xor i32 %3081, %3076
  %3083 = xor i32 %3082, %2760
  %3084 = xor i32 %3083, %3075
  %3085 = xor i32 %3084, 4
  %3086 = getelementptr inbounds i32, ptr %2768, i64 18
  store i32 %3085, ptr %3086, align 4, !tbaa !25
  %3087 = load i32, ptr %2899, align 4, !tbaa !25
  %3088 = sdiv i32 %3087, 3
  %3089 = load i32, ptr %2901, align 4, !tbaa !25
  %3090 = sdiv i32 %3089, 3
  %3091 = getelementptr inbounds i32, ptr %2750, i64 5
  %3092 = load i32, ptr %3091, align 4, !tbaa !25
  %3093 = add i32 %2753, -294907716
  %3094 = mul i32 %3088, 50004239
  %3095 = add i32 %3093, %3094
  %3096 = mul i32 %3090, 70004807
  %3097 = add i32 %3095, %3096
  %3098 = mul i32 %3092, 110002499
  %3099 = add i32 %3097, %3098
  %3100 = lshr i32 %3099, 9
  %3101 = lshr i32 %3088, 4
  %3102 = lshr i32 %3090, 5
  %3103 = lshr i32 %3092, 6
  %3104 = xor i32 %3101, %3102
  %3105 = xor i32 %3104, %3103
  %3106 = xor i32 %3105, %3100
  %3107 = xor i32 %3106, %2760
  %3108 = xor i32 %3107, %3099
  %3109 = xor i32 %3108, 5
  %3110 = getelementptr inbounds i32, ptr %2768, i64 19
  store i32 %3109, ptr %3110, align 4, !tbaa !25
  %3111 = load i8, ptr %2856, align 1, !tbaa !9
  %3112 = zext i8 %3111 to i32
  %3113 = getelementptr inbounds i32, ptr %2750, i64 6
  %3114 = load i32, ptr %3113, align 4, !tbaa !25
  %3115 = mul i32 %3112, 50004239
  %3116 = mul i32 %3114, 70004807
  %3117 = add i32 %2753, -204907236
  %3118 = add i32 %3117, %3115
  %3119 = add i32 %3118, %3116
  %3120 = lshr i32 %3119, 9
  %3121 = lshr i32 %3112, 4
  %3122 = lshr i32 %3114, 5
  %3123 = xor i32 %3121, %3122
  %3124 = xor i32 %3123, %3120
  %3125 = xor i32 %3124, %2760
  %3126 = xor i32 %3125, %3119
  %3127 = xor i32 %3126, 67108858
  %3128 = getelementptr inbounds i32, ptr %2768, i64 20
  store i32 %3127, ptr %3128, align 4, !tbaa !25
  %3129 = load i32, ptr %2876, align 4, !tbaa !25
  %3130 = sub nsw i32 %2846, %3129
  %3131 = and i32 %3130, %2852
  %3132 = sext i32 %3131 to i64
  %3133 = getelementptr inbounds i8, ptr %2854, i64 %3132
  %3134 = load i8, ptr %3133, align 1, !tbaa !9
  %3135 = zext i8 %3134 to i32
  %3136 = getelementptr inbounds i32, ptr %2750, i64 4
  %3137 = load i32, ptr %3136, align 4, !tbaa !25
  %3138 = mul i32 %3135, 50004239
  %3139 = mul i32 %3137, 70004807
  %3140 = add i32 %2753, -4904257
  %3141 = add i32 %3140, %3138
  %3142 = add i32 %3141, %3139
  %3143 = lshr i32 %3142, 9
  %3144 = lshr i32 %3135, 4
  %3145 = lshr i32 %3137, 5
  %3146 = xor i32 %3144, %3145
  %3147 = xor i32 %3146, %3143
  %3148 = xor i32 %3147, %2760
  %3149 = xor i32 %3148, %3142
  %3150 = xor i32 %3149, 67108858
  %3151 = getelementptr inbounds i32, ptr %2768, i64 21
  store i32 %3150, ptr %3151, align 4, !tbaa !25
  %3152 = load i32, ptr %2751, align 4, !tbaa !25
  %3153 = mul i32 %3152, 50004239
  %3154 = add i32 %2753, 125093915
  %3155 = add i32 %3154, %3153
  %3156 = lshr i32 %3155, 9
  %3157 = lshr i32 %3152, 4
  %3158 = xor i32 %3157, %3156
  %3159 = xor i32 %3158, %2760
  %3160 = xor i32 %3159, %3155
  %3161 = xor i32 %3160, 67108869
  %3162 = getelementptr inbounds i32, ptr %2768, i64 22
  store i32 %3161, ptr %3162, align 4, !tbaa !25
  %3163 = load i32, ptr %2750, align 4, !tbaa !25
  %3164 = mul i32 %3163, 50004239
  %3165 = add i32 %3154, %3164
  %3166 = lshr i32 %3165, 9
  %3167 = lshr i32 %3163, 4
  %3168 = xor i32 %3167, %3166
  %3169 = xor i32 %3168, %2760
  %3170 = xor i32 %3169, %3165
  %3171 = xor i32 %3170, 67108869
  %3172 = getelementptr inbounds i32, ptr %2768, i64 23
  store i32 %3171, ptr %3172, align 4, !tbaa !25
  %3173 = load i32, ptr %2780, align 4, !tbaa !25
  %3174 = mul i32 %3173, 50004239
  %3175 = add i32 %3154, %3174
  %3176 = lshr i32 %3175, 9
  %3177 = lshr i32 %3173, 4
  %3178 = xor i32 %3177, %3176
  %3179 = xor i32 %3178, %2760
  %3180 = xor i32 %3179, %3175
  %3181 = xor i32 %3180, 67108869
  %3182 = getelementptr inbounds i32, ptr %2768, i64 24
  store i32 %3181, ptr %3182, align 4, !tbaa !25
  %3183 = load i32, ptr %2901, align 4, !tbaa !25
  %3184 = load i32, ptr %3113, align 4, !tbaa !25
  %3185 = mul i32 %3183, 70004807
  %3186 = mul i32 %3184, 110002499
  %3187 = add i32 %2971, 505104200
  %3188 = add i32 %3187, %3185
  %3189 = add i32 %3188, %3186
  %3190 = lshr i32 %3189, 9
  %3191 = lshr i32 %3183, 5
  %3192 = lshr i32 %3184, 6
  %3193 = xor i32 %3191, %3192
  %3194 = xor i32 %3193, %3190
  %3195 = xor i32 %3194, %2979
  %3196 = xor i32 %3195, %3189
  %3197 = xor i32 %3196, 6
  %3198 = getelementptr inbounds i32, ptr %2768, i64 25
  store i32 %3197, ptr %3198, align 4, !tbaa !25
  %3199 = load i32, ptr %2899, align 4, !tbaa !25
  %3200 = load i32, ptr %3136, align 4, !tbaa !25
  %3201 = mul i32 %3199, 70004807
  %3202 = mul i32 %3200, 110002499
  %3203 = add i32 %2949, 705107179
  %3204 = add i32 %3203, %3201
  %3205 = add i32 %3204, %3202
  %3206 = lshr i32 %3205, 9
  %3207 = lshr i32 %3199, 5
  %3208 = lshr i32 %3200, 6
  %3209 = xor i32 %3207, %3208
  %3210 = xor i32 %3209, %3206
  %3211 = xor i32 %3210, %2957
  %3212 = xor i32 %3211, %3205
  %3213 = xor i32 %3212, 6
  %3214 = getelementptr inbounds i32, ptr %2768, i64 26
  store i32 %3213, ptr %3214, align 4, !tbaa !25
  %3215 = load i32, ptr %2899, align 4, !tbaa !25
  %3216 = load i32, ptr %2901, align 4, !tbaa !25
  %3217 = load i32, ptr %2859, align 4, !tbaa !25
  %3218 = add i32 %2753, 905110158
  %3219 = mul i32 %3215, 50004239
  %3220 = add i32 %3218, %3219
  %3221 = mul i32 %3216, 70004807
  %3222 = add i32 %3220, %3221
  %3223 = mul i32 %3217, 110002499
  %3224 = add i32 %3222, %3223
  %3225 = lshr i32 %3224, 9
  %3226 = lshr i32 %3215, 4
  %3227 = lshr i32 %3216, 5
  %3228 = lshr i32 %3217, 6
  %3229 = xor i32 %3226, %3227
  %3230 = xor i32 %3229, %3228
  %3231 = xor i32 %3230, %3225
  %3232 = xor i32 %3231, %2760
  %3233 = xor i32 %3232, %3224
  %3234 = xor i32 %3233, 6
  %3235 = getelementptr inbounds i32, ptr %2768, i64 27
  store i32 %3234, ptr %3235, align 4, !tbaa !25
  %3236 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %3237 = add nsw i32 %3236, 1
  store i32 %3237, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %3238 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %3239 = sext i32 %3236 to i64
  %3240 = getelementptr inbounds i16, ptr %3238, i64 %3239
  store i16 128, ptr %3240, align 2, !tbaa !31
  br label %3246

3241:                                             ; preds = %2740
  store i32 1, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %3242 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  store i16 128, ptr %3242, align 2, !tbaa !31
  %3243 = icmp eq i32 %2736, 1
  %3244 = and i32 %2722, 1
  %3245 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  br i1 %3243, label %3298, label %3350

3246:                                             ; preds = %2742, %3246
  %3247 = phi i64 [ 0, %2742 ], [ %3296, %3246 ]
  %3248 = load ptr, ptr getelementptr inbounds (%class.Array, ptr @_ZZ9jpegModelR5MixerE3cxt, i64 0, i32 3), align 8, !tbaa !84
  %3249 = getelementptr inbounds i32, ptr %3248, i64 %3247
  %3250 = load i32, ptr %3249, align 4, !tbaa !25
  %3251 = tail call noundef ptr @_ZN2BHILi9EEixEj(ptr noundef nonnull align 8 dereferenceable(28) @_ZZ9jpegModelR5MixerE1t, i32 noundef %3250)
  %3252 = getelementptr inbounds i8, ptr %3251, i64 1
  %3253 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %3254 = getelementptr inbounds ptr, ptr %3253, i64 %3247
  store ptr %3252, ptr %3254, align 8, !tbaa !5
  %3255 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %3256 = getelementptr inbounds ptr, ptr %3255, i64 %3247
  %3257 = load ptr, ptr %3256, align 8, !tbaa !5
  %3258 = load i8, ptr %3257, align 1, !tbaa !9
  %3259 = zext i8 %3258 to i32
  %3260 = getelementptr inbounds [28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %3247, i32 1
  %3261 = load i32, ptr %3260, align 4, !tbaa !82
  %3262 = getelementptr inbounds [28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %3247, i32 2, i32 3
  %3263 = load ptr, ptr %3262, align 8, !tbaa !84
  %3264 = sext i32 %3261 to i64
  %3265 = getelementptr inbounds i32, ptr %3263, i64 %3264
  %3266 = load i32, ptr %3265, align 4, !tbaa !25
  %3267 = and i32 %3266, 1023
  %3268 = icmp eq i32 %3267, 1023
  %3269 = add i32 %3266, 1
  %3270 = or i32 %3266, 1023
  %3271 = select i1 %3268, i32 %3270, i32 %3269
  %3272 = lshr i32 %3266, 10
  %3273 = load i32, ptr @y, align 4, !tbaa !25
  %3274 = shl i32 %3273, 22
  %3275 = sub nsw i32 %3274, %3272
  %3276 = ashr i32 %3275, 3
  %3277 = zext i32 %3267 to i64
  %3278 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %3277
  %3279 = load i32, ptr %3278, align 4, !tbaa !25
  %3280 = mul nsw i32 %3276, %3279
  %3281 = and i32 %3280, -1024
  %3282 = add i32 %3281, %3271
  store i32 %3282, ptr %3265, align 4, !tbaa !25
  store i32 %3259, ptr %3260, align 4, !tbaa !82
  %3283 = zext i8 %3258 to i64
  %3284 = getelementptr inbounds i32, ptr %3263, i64 %3283
  %3285 = load i32, ptr %3284, align 4, !tbaa !25
  %3286 = lshr i32 %3285, 20
  %3287 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %3288 = zext i32 %3286 to i64
  %3289 = getelementptr inbounds i16, ptr %3287, i64 %3288
  %3290 = load i16, ptr %3289, align 2, !tbaa !31
  %3291 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %3292 = add nsw i32 %3291, 1
  store i32 %3292, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %3293 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %3294 = sext i32 %3291 to i64
  %3295 = getelementptr inbounds i16, ptr %3293, i64 %3294
  store i16 %3290, ptr %3295, align 2, !tbaa !31
  %3296 = add nuw nsw i64 %3247, 1
  %3297 = icmp eq i64 %3296, 28
  br i1 %3297, label %3402, label %3246, !llvm.loop !152

3298:                                             ; preds = %3241
  %3299 = icmp eq i32 %3244, 0
  %3300 = select i1 %3299, i64 1, i64 4
  br label %3301

3301:                                             ; preds = %3298, %3301
  %3302 = phi ptr [ %3245, %3298 ], [ %3307, %3301 ]
  %3303 = phi i64 [ 0, %3298 ], [ %3348, %3301 ]
  %3304 = getelementptr inbounds ptr, ptr %3302, i64 %3303
  %3305 = load ptr, ptr %3304, align 8, !tbaa !5
  %3306 = getelementptr inbounds i8, ptr %3305, i64 %3300
  store ptr %3306, ptr %3304, align 8, !tbaa !5
  %3307 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %3308 = getelementptr inbounds ptr, ptr %3307, i64 %3303
  %3309 = load ptr, ptr %3308, align 8, !tbaa !5
  %3310 = load i8, ptr %3309, align 1, !tbaa !9
  %3311 = zext i8 %3310 to i32
  %3312 = getelementptr inbounds [28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %3303, i32 1
  %3313 = load i32, ptr %3312, align 4, !tbaa !82
  %3314 = getelementptr inbounds [28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %3303, i32 2, i32 3
  %3315 = load ptr, ptr %3314, align 8, !tbaa !84
  %3316 = sext i32 %3313 to i64
  %3317 = getelementptr inbounds i32, ptr %3315, i64 %3316
  %3318 = load i32, ptr %3317, align 4, !tbaa !25
  %3319 = and i32 %3318, 1023
  %3320 = icmp eq i32 %3319, 1023
  %3321 = add i32 %3318, 1
  %3322 = or i32 %3318, 1023
  %3323 = select i1 %3320, i32 %3322, i32 %3321
  %3324 = lshr i32 %3318, 10
  %3325 = load i32, ptr @y, align 4, !tbaa !25
  %3326 = shl i32 %3325, 22
  %3327 = sub nsw i32 %3326, %3324
  %3328 = ashr i32 %3327, 3
  %3329 = zext i32 %3319 to i64
  %3330 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %3329
  %3331 = load i32, ptr %3330, align 4, !tbaa !25
  %3332 = mul nsw i32 %3328, %3331
  %3333 = and i32 %3332, -1024
  %3334 = add i32 %3333, %3323
  store i32 %3334, ptr %3317, align 4, !tbaa !25
  store i32 %3311, ptr %3312, align 4, !tbaa !82
  %3335 = zext i8 %3310 to i64
  %3336 = getelementptr inbounds i32, ptr %3315, i64 %3335
  %3337 = load i32, ptr %3336, align 4, !tbaa !25
  %3338 = lshr i32 %3337, 20
  %3339 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %3340 = zext i32 %3338 to i64
  %3341 = getelementptr inbounds i16, ptr %3339, i64 %3340
  %3342 = load i16, ptr %3341, align 2, !tbaa !31
  %3343 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %3344 = add nsw i32 %3343, 1
  store i32 %3344, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %3345 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %3346 = sext i32 %3343 to i64
  %3347 = getelementptr inbounds i16, ptr %3345, i64 %3346
  store i16 %3342, ptr %3347, align 2, !tbaa !31
  %3348 = add nuw nsw i64 %3303, 1
  %3349 = icmp eq i64 %3348, 28
  br i1 %3349, label %3402, label %3301, !llvm.loop !153

3350:                                             ; preds = %3241
  %3351 = add nuw nsw i32 %3244, 1
  %3352 = zext i32 %3351 to i64
  br label %3353

3353:                                             ; preds = %3350, %3353
  %3354 = phi ptr [ %3245, %3350 ], [ %3359, %3353 ]
  %3355 = phi i64 [ 0, %3350 ], [ %3400, %3353 ]
  %3356 = getelementptr inbounds ptr, ptr %3354, i64 %3355
  %3357 = load ptr, ptr %3356, align 8, !tbaa !5
  %3358 = getelementptr inbounds i8, ptr %3357, i64 %3352
  store ptr %3358, ptr %3356, align 8, !tbaa !5
  %3359 = load ptr, ptr getelementptr inbounds (%class.Array.6, ptr @_ZZ9jpegModelR5MixerE2cp, i64 0, i32 3), align 8, !tbaa !101
  %3360 = getelementptr inbounds ptr, ptr %3359, i64 %3355
  %3361 = load ptr, ptr %3360, align 8, !tbaa !5
  %3362 = load i8, ptr %3361, align 1, !tbaa !9
  %3363 = zext i8 %3362 to i32
  %3364 = getelementptr inbounds [28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %3355, i32 1
  %3365 = load i32, ptr %3364, align 4, !tbaa !82
  %3366 = getelementptr inbounds [28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 0, i64 %3355, i32 2, i32 3
  %3367 = load ptr, ptr %3366, align 8, !tbaa !84
  %3368 = sext i32 %3365 to i64
  %3369 = getelementptr inbounds i32, ptr %3367, i64 %3368
  %3370 = load i32, ptr %3369, align 4, !tbaa !25
  %3371 = and i32 %3370, 1023
  %3372 = icmp eq i32 %3371, 1023
  %3373 = add i32 %3370, 1
  %3374 = or i32 %3370, 1023
  %3375 = select i1 %3372, i32 %3374, i32 %3373
  %3376 = lshr i32 %3370, 10
  %3377 = load i32, ptr @y, align 4, !tbaa !25
  %3378 = shl i32 %3377, 22
  %3379 = sub nsw i32 %3378, %3376
  %3380 = ashr i32 %3379, 3
  %3381 = zext i32 %3371 to i64
  %3382 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %3381
  %3383 = load i32, ptr %3382, align 4, !tbaa !25
  %3384 = mul nsw i32 %3380, %3383
  %3385 = and i32 %3384, -1024
  %3386 = add i32 %3385, %3375
  store i32 %3386, ptr %3369, align 4, !tbaa !25
  store i32 %3363, ptr %3364, align 4, !tbaa !82
  %3387 = zext i8 %3362 to i64
  %3388 = getelementptr inbounds i32, ptr %3367, i64 %3387
  %3389 = load i32, ptr %3388, align 4, !tbaa !25
  %3390 = lshr i32 %3389, 20
  %3391 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %3392 = zext i32 %3390 to i64
  %3393 = getelementptr inbounds i16, ptr %3391, i64 %3392
  %3394 = load i16, ptr %3393, align 2, !tbaa !31
  %3395 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %3396 = add nsw i32 %3395, 1
  store i32 %3396, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 8), align 8, !tbaa !64
  %3397 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %3398 = sext i32 %3395 to i64
  %3399 = getelementptr inbounds i16, ptr %3397, i64 %3398
  store i16 %3394, ptr %3399, align 2, !tbaa !31
  %3400 = add nuw nsw i64 %3355, 1
  %3401 = icmp eq i64 %3400, 28
  br i1 %3401, label %3402, label %3353, !llvm.loop !154

3402:                                             ; preds = %3353, %3301, %3246
  %3403 = load i32, ptr @_ZZ9jpegModelR5MixerE6column, align 4, !tbaa !25
  %3404 = icmp eq i32 %3403, 0
  %3405 = zext i1 %3404 to i32
  %3406 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %3407 = add nsw i32 %3406, %3405
  %3408 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %3409 = add nsw i32 %3408, 1
  store i32 %3409, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %3410 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 5, i32 3), align 8, !tbaa !61
  %3411 = sext i32 %3408 to i64
  %3412 = getelementptr inbounds i32, ptr %3410, i64 %3411
  store i32 %3407, ptr %3412, align 4, !tbaa !25
  %3413 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %3414 = add nsw i32 %3413, 2
  store i32 %3414, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %3415 = add nsw i32 %3414, %2721
  %3416 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %3417 = add nsw i32 %3416, 1
  store i32 %3417, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %3418 = sext i32 %3416 to i64
  %3419 = getelementptr inbounds i32, ptr %3410, i64 %3418
  store i32 %3415, ptr %3419, align 4, !tbaa !25
  %3420 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %3421 = add nsw i32 %3420, 256
  store i32 %3421, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %3422 = and i32 %2730, 511
  %3423 = add nsw i32 %3421, %3422
  %3424 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %3425 = add nsw i32 %3424, 1
  store i32 %3425, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 6), align 8, !tbaa !62
  %3426 = sext i32 %3424 to i64
  %3427 = getelementptr inbounds i32, ptr %3410, i64 %3426
  store i32 %3423, ptr %3427, align 4, !tbaa !25
  %3428 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %3429 = add nsw i32 %3428, 512
  store i32 %3429, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ9jpegModelR5MixerE2m1, i64 0, i32 7), align 4, !tbaa !63
  %3430 = tail call noundef i32 @_ZN5Mixer1pEv(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ9jpegModelR5MixerE2m1)
  %3431 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %3432 = sext i32 %3430 to i64
  %3433 = getelementptr inbounds i16, ptr %3431, i64 %3432
  %3434 = load i16, ptr %3433, align 2, !tbaa !31
  %3435 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %3436 = load i32, ptr %3435, align 8, !tbaa !64
  %3437 = add nsw i32 %3436, 1
  store i32 %3437, ptr %3435, align 8, !tbaa !64
  %3438 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %3439 = load ptr, ptr %3438, align 8, !tbaa !59
  %3440 = sext i32 %3436 to i64
  %3441 = getelementptr inbounds i16, ptr %3439, i64 %3440
  store i16 %3434, ptr %3441, align 2, !tbaa !31
  %3442 = load ptr, ptr getelementptr inbounds (%class.Array.3, ptr @_ZZ9jpegModelR5MixerE8adv_pred, i64 0, i32 3), align 8, !tbaa !61
  %3443 = getelementptr inbounds i32, ptr %3442, i64 1
  %3444 = load i32, ptr %3443, align 4, !tbaa !25
  %3445 = shl i32 %3444, 9
  %3446 = and i32 %3445, 32256
  %3447 = or i32 %3446, %3422
  %3448 = tail call noundef i32 @_ZN3APM1pEiii(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2a1, i32 noundef %3430, i32 noundef %3447, i32 noundef 1023)
  %3449 = and i32 %2730, 255
  %3450 = shl nuw nsw i32 %2721, 8
  %3451 = or i32 %3449, %3450
  %3452 = tail call noundef i32 @_ZN3APM1pEiii(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ9jpegModelR5MixerE2a2, i32 noundef %3448, i32 noundef %3451, i32 noundef 255)
  %3453 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %3454 = sext i32 %3452 to i64
  %3455 = getelementptr inbounds i16, ptr %3453, i64 %3454
  %3456 = load i16, ptr %3455, align 2, !tbaa !31
  %3457 = load i32, ptr %3435, align 8, !tbaa !64
  %3458 = add nsw i32 %3457, 1
  store i32 %3458, ptr %3435, align 8, !tbaa !64
  %3459 = load ptr, ptr %3438, align 8, !tbaa !59
  %3460 = sext i32 %3457 to i64
  %3461 = getelementptr inbounds i16, ptr %3459, i64 %3460
  store i16 %3456, ptr %3461, align 2, !tbaa !31
  %3462 = add nuw nsw i32 %3449, 2
  br label %3463

3463:                                             ; preds = %940, %190, %201, %208, %215, %257, %179, %185, %1346, %1357, %1254, %1320, %1337, %1247, %1226, %1386, %1182, %1188, %1200, %1163, %1154, %825, %829, %972, %1108, %988, %858, %837, %2738, %3402, %2251, %2235, %1147, %1135, %485, %427, %423, %172
  %3464 = phi i32 [ 1, %2251 ], [ %2236, %2235 ], [ %1148, %1147 ], [ %1136, %1135 ], [ %486, %485 ], [ %176, %427 ], [ %176, %423 ], [ %173, %172 ], [ %3462, %3402 ], [ %2739, %2738 ], [ %864, %972 ], [ %1109, %1108 ], [ %989, %988 ], [ %859, %858 ], [ %838, %837 ], [ %826, %825 ], [ %830, %829 ], [ %1183, %1182 ], [ %1189, %1188 ], [ %1201, %1200 ], [ %1164, %1163 ], [ %1155, %1154 ], [ %1255, %1254 ], [ %1321, %1320 ], [ %1338, %1337 ], [ %1248, %1247 ], [ %1227, %1226 ], [ %1387, %1386 ], [ %1347, %1346 ], [ %1358, %1357 ], [ %186, %185 ], [ %176, %179 ], [ %176, %257 ], [ %176, %215 ], [ %176, %208 ], [ %176, %201 ], [ %176, %190 ], [ %864, %940 ]
  ret i32 %3464

3465:                                             ; preds = %2618, %2613, %2607, %2609, %2611, %2622, %2624, %2626, %168, %166, %164, %162, %160, %158, %156, %154, %152, %150, %148, %146, %144, %142, %140
  %3466 = phi ptr [ @_ZGVZ9jpegModelR5MixerE1t, %2607 ], [ @_ZGVZ9jpegModelR5MixerE3cxt, %2609 ], [ @_ZGVZ9jpegModelR5MixerE2cp, %2611 ], [ @_ZGVZ9jpegModelR5MixerE2m1, %2622 ], [ @_ZGVZ9jpegModelR5MixerE2a1, %2624 ], [ @_ZGVZ9jpegModelR5MixerE2a2, %2626 ], [ @_ZGVZ9jpegModelR5MixerE4qmap, %168 ], [ @_ZGVZ9jpegModelR5MixerE4qtab, %166 ], [ @_ZGVZ9jpegModelR5MixerE4zpos, %164 ], [ @_ZGVZ9jpegModelR5MixerE3lcp, %162 ], [ @_ZGVZ9jpegModelR5MixerE2ls, %160 ], [ @_ZGVZ9jpegModelR5MixerE4sumv, %158 ], [ @_ZGVZ9jpegModelR5MixerE4sumu, %156 ], [ @_ZGVZ9jpegModelR5MixerE8adv_pred, %154 ], [ @_ZGVZ9jpegModelR5MixerE5cbuf2, %152 ], [ @_ZGVZ9jpegModelR5MixerE4cbuf, %150 ], [ @_ZGVZ9jpegModelR5MixerE4pred, %148 ], [ @_ZGVZ9jpegModelR5MixerE5color, %146 ], [ @_ZGVZ9jpegModelR5MixerE4hbuf, %144 ], [ @_ZGVZ9jpegModelR5MixerE3huf, %142 ], [ @_ZGVZ9jpegModelR5MixerE2ht, %140 ], [ @_ZGVZ9jpegModelR5MixerE2sm, %2613 ], [ @_ZGVZ9jpegModelR5MixerE2sm, %2618 ]
  %3467 = phi { ptr, i32 } [ %2608, %2607 ], [ %2610, %2609 ], [ %2612, %2611 ], [ %2623, %2622 ], [ %2625, %2624 ], [ %2627, %2626 ], [ %169, %168 ], [ %167, %166 ], [ %165, %164 ], [ %163, %162 ], [ %161, %160 ], [ %159, %158 ], [ %157, %156 ], [ %155, %154 ], [ %153, %152 ], [ %151, %150 ], [ %149, %148 ], [ %147, %146 ], [ %145, %144 ], [ %143, %142 ], [ %141, %140 ], [ %2614, %2613 ], [ %2617, %2618 ]
  tail call void @__cxa_guard_abort(ptr nonnull %3466) #39
  resume { ptr, i32 } %3467
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5ArrayI3HUFLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.7, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !155
  store i32 %1, ptr %0, align 8, !tbaa !126
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array.7, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = mul i32 %1, 12
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #41
  %17 = getelementptr inbounds %class.Array.7, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !156
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %20, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array.7, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !124
  br label %23

23:                                               ; preds = %5, %21
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayI3HUFLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !126
  %3 = mul i32 %2, -12
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %5 = add nsw i32 %4, %3
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array.7, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !156
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6IntBufC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !60
  store i32 %1, ptr %0, align 8, !tbaa !51
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = shl i32 %1, 2
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #41
  %17 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !52
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %20, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !61
  br label %23

23:                                               ; preds = %5, %21
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN6IntBufD2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #3 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !51
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = shl i32 %2, 2
  %5 = sub i32 %3, %4
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array.3, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !52
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: write)
declare void @llvm.memset.p0.i64(ptr nocapture writeonly, i8, i64, i1 immarg) #21

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN2BHILi9EEC2Ei(ptr noundef nonnull align 8 dereferenceable(28) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 {
  %3 = mul nsw i32 %1, 9
  %4 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 1
  store i32 %3, ptr %4, align 4, !tbaa !157
  store i32 %3, ptr %0, align 8, !tbaa !159
  %5 = icmp slt i32 %1, 1
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %7, i8 0, i64 16, i1 false)
  br label %29

8:                                                ; preds = %2
  %9 = add nuw i32 %3, 64
  %10 = load i32, ptr @programChecker, align 8, !tbaa !13
  %11 = add nsw i32 %10, %9
  store i32 %11, ptr @programChecker, align 8, !tbaa !13
  %12 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %13 = icmp sgt i32 %11, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %8
  store i32 %11, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %15

15:                                               ; preds = %14, %8
  %16 = sext i32 %9 to i64
  %17 = tail call noalias ptr @calloc(i64 noundef %16, i64 noundef 1) #41
  %18 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 2
  store ptr %17, ptr %18, align 8, !tbaa !160
  %19 = icmp eq ptr %17, null
  br i1 %19, label %20, label %22

20:                                               ; preds = %15
  %21 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %21, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %21, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

22:                                               ; preds = %15
  %23 = getelementptr inbounds i8, ptr %17, i64 64
  %24 = ptrtoint ptr %17 to i64
  %25 = and i64 %24, 63
  %26 = sub nsw i64 0, %25
  %27 = getelementptr inbounds i8, ptr %23, i64 %26
  %28 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 3
  store ptr %27, ptr %28, align 8, !tbaa !161
  br label %29

29:                                               ; preds = %6, %22
  %30 = getelementptr inbounds %class.BH, ptr %0, i64 0, i32 1
  %31 = add nsw i32 %1, -1
  store i32 %31, ptr %30, align 8, !tbaa !162
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN2BHILi9EED2Ev(ptr noundef nonnull align 8 dereferenceable(28) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load i32, ptr %0, align 8, !tbaa !159
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = sub i32 %3, %2
  %5 = add i32 %4, -64
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !160
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: nounwind uwtable
define internal void @__cxx_global_array_dtor.13(ptr nocapture readnone %0) #6 section ".text.startup" {
  br label %2

2:                                                ; preds = %13, %1
  %3 = phi ptr [ getelementptr inbounds ([28 x %class.StateMap], ptr @_ZZ9jpegModelR5MixerE2sm, i64 1, i64 0), %1 ], [ %4, %13 ]
  %4 = getelementptr inbounds %class.StateMap, ptr %3, i64 -1
  %5 = getelementptr %class.StateMap, ptr %3, i64 -1, i32 2
  %6 = load i32, ptr %5, align 8, !tbaa !10
  %7 = load i32, ptr @programChecker, align 8, !tbaa !13
  %8 = shl i32 %6, 2
  %9 = sub i32 %7, %8
  store i32 %9, ptr @programChecker, align 8, !tbaa !13
  %10 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %11 = icmp sgt i32 %9, %10
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  store i32 %9, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %13

13:                                               ; preds = %2, %12
  %14 = getelementptr %class.StateMap, ptr %3, i64 -1, i32 2, i32 2
  %15 = load ptr, ptr %14, align 8, !tbaa !17
  tail call void @free(ptr noundef %15) #39
  %16 = icmp eq ptr %4, @_ZZ9jpegModelR5MixerE2sm
  br i1 %16, label %17, label %2

17:                                               ; preds = %13
  ret void
}

; Function Attrs: inlinehint mustprogress nounwind uwtable
define linkonce_odr dso_local noundef ptr @_ZN2BHILi9EEixEj(ptr noundef nonnull align 8 dereferenceable(28) %0, i32 noundef %1) local_unnamed_addr #13 comdat align 2 {
  %3 = lshr i32 %1, 16
  %4 = and i32 %1, 65535
  %5 = xor i32 %3, %4
  %6 = shl i32 %1, 3
  %7 = getelementptr inbounds %class.BH, ptr %0, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !162
  %9 = and i32 %8, %6
  %10 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !161
  %12 = mul i32 %9, 9
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, ptr %11, i64 %13
  %15 = getelementptr inbounds i8, ptr %14, i64 2
  %16 = load i8, ptr %15, align 1, !tbaa !9
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %110, label %18

18:                                               ; preds = %2
  %19 = load i16, ptr %14, align 2, !tbaa !31
  %20 = zext i16 %19 to i32
  %21 = icmp eq i32 %5, %20
  br i1 %21, label %112, label %22

22:                                               ; preds = %18
  %23 = mul i32 %9, 9
  %24 = add i32 %23, 9
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, ptr %11, i64 %25
  %27 = getelementptr inbounds i8, ptr %26, i64 2
  %28 = load i8, ptr %27, align 1, !tbaa !9
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %106, label %30

30:                                               ; preds = %22
  %31 = load i16, ptr %26, align 2, !tbaa !31
  %32 = zext i16 %31 to i32
  %33 = icmp eq i32 %5, %32
  br i1 %33, label %126, label %34

34:                                               ; preds = %30
  %35 = mul i32 %9, 9
  %36 = add i32 %35, 18
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, ptr %11, i64 %37
  %39 = getelementptr inbounds i8, ptr %38, i64 2
  %40 = load i8, ptr %39, align 1, !tbaa !9
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %106, label %42

42:                                               ; preds = %34
  %43 = load i16, ptr %38, align 2, !tbaa !31
  %44 = zext i16 %43 to i32
  %45 = icmp eq i32 %5, %44
  br i1 %45, label %126, label %46

46:                                               ; preds = %42
  %47 = mul i32 %9, 9
  %48 = add i32 %47, 27
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, ptr %11, i64 %49
  %51 = getelementptr inbounds i8, ptr %50, i64 2
  %52 = load i8, ptr %51, align 1, !tbaa !9
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %106, label %54

54:                                               ; preds = %46
  %55 = load i16, ptr %50, align 2, !tbaa !31
  %56 = zext i16 %55 to i32
  %57 = icmp eq i32 %5, %56
  br i1 %57, label %126, label %58

58:                                               ; preds = %54
  %59 = mul i32 %9, 9
  %60 = add i32 %59, 36
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i8, ptr %11, i64 %61
  %63 = getelementptr inbounds i8, ptr %62, i64 2
  %64 = load i8, ptr %63, align 1, !tbaa !9
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %106, label %66

66:                                               ; preds = %58
  %67 = load i16, ptr %62, align 2, !tbaa !31
  %68 = zext i16 %67 to i32
  %69 = icmp eq i32 %5, %68
  br i1 %69, label %126, label %70

70:                                               ; preds = %66
  %71 = mul i32 %9, 9
  %72 = add i32 %71, 45
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, ptr %11, i64 %73
  %75 = getelementptr inbounds i8, ptr %74, i64 2
  %76 = load i8, ptr %75, align 1, !tbaa !9
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %106, label %78

78:                                               ; preds = %70
  %79 = load i16, ptr %74, align 2, !tbaa !31
  %80 = zext i16 %79 to i32
  %81 = icmp eq i32 %5, %80
  br i1 %81, label %126, label %82

82:                                               ; preds = %78
  %83 = mul i32 %9, 9
  %84 = add i32 %83, 54
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, ptr %11, i64 %85
  %87 = getelementptr inbounds i8, ptr %86, i64 2
  %88 = load i8, ptr %87, align 1, !tbaa !9
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %106, label %90

90:                                               ; preds = %82
  %91 = load i16, ptr %86, align 2, !tbaa !31
  %92 = zext i16 %91 to i32
  %93 = icmp eq i32 %5, %92
  br i1 %93, label %126, label %94

94:                                               ; preds = %90
  %95 = mul i32 %9, 9
  %96 = add i32 %95, 63
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, ptr %11, i64 %97
  %99 = getelementptr inbounds i8, ptr %98, i64 2
  %100 = load i8, ptr %99, align 1, !tbaa !9
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %94
  %103 = load i16, ptr %98, align 2, !tbaa !31
  %104 = zext i16 %103 to i32
  %105 = icmp eq i32 %5, %104
  br i1 %105, label %126, label %114

106:                                              ; preds = %22, %34, %46, %58, %70, %82, %94
  %107 = phi i64 [ 7, %94 ], [ 6, %82 ], [ 5, %70 ], [ 4, %58 ], [ 3, %46 ], [ 2, %34 ], [ 1, %22 ]
  %108 = phi ptr [ %98, %94 ], [ %86, %82 ], [ %74, %70 ], [ %62, %58 ], [ %50, %46 ], [ %38, %34 ], [ %26, %22 ]
  %109 = trunc i32 %5 to i16
  store i16 %109, ptr %108, align 2, !tbaa !31
  br label %126

110:                                              ; preds = %2
  %111 = trunc i32 %5 to i16
  store i16 %111, ptr %14, align 2, !tbaa !31
  br label %112

112:                                              ; preds = %18, %110
  %113 = getelementptr inbounds i8, ptr %14, i64 1
  br label %142

114:                                              ; preds = %102
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 1 dereferenceable(9) getelementptr inbounds ([9 x i8], ptr @_ZZN2BHILi9EEixEjE3tmp, i64 0, i64 2), i8 0, i64 7, i1 false)
  %115 = trunc i32 %5 to i16
  store i16 %115, ptr @_ZZN2BHILi9EEixEjE3tmp, align 1, !tbaa !31
  %116 = add i32 %12, 65
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, ptr %11, i64 %117
  %119 = load i8, ptr %118, align 1, !tbaa !9
  %120 = add i32 %12, 56
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8, ptr %11, i64 %121
  %123 = load i8, ptr %122, align 1, !tbaa !9
  %124 = icmp ugt i8 %119, %123
  %125 = select i1 %124, i64 6, i64 7
  br label %129

126:                                              ; preds = %102, %90, %78, %66, %54, %42, %30, %106
  %127 = phi i64 [ %107, %106 ], [ 7, %102 ], [ 6, %90 ], [ 5, %78 ], [ 4, %66 ], [ 3, %54 ], [ 2, %42 ], [ 1, %30 ]
  %128 = phi ptr [ %108, %106 ], [ %98, %102 ], [ %86, %90 ], [ %74, %78 ], [ %62, %66 ], [ %50, %54 ], [ %38, %42 ], [ %26, %30 ]
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(9) @_ZZN2BHILi9EEixEjE3tmp, ptr noundef nonnull align 2 dereferenceable(9) %128, i64 9, i1 false)
  br label %129

129:                                              ; preds = %114, %126
  %130 = phi i64 [ %127, %126 ], [ %125, %114 ]
  %131 = add i32 %12, 9
  %132 = sext i32 %131 to i64
  %133 = getelementptr inbounds i8, ptr %11, i64 %132
  %134 = mul i64 %130, 9
  %135 = and i64 %134, 4294967295
  tail call void @llvm.memmove.p0.p0.i64(ptr align 1 %133, ptr nonnull align 1 %14, i64 %135, i1 false)
  %136 = load ptr, ptr %10, align 8, !tbaa !161
  %137 = getelementptr inbounds i8, ptr %136, i64 %13
  tail call void @llvm.memcpy.p0.p0.i64(ptr noundef nonnull align 1 dereferenceable(9) %137, ptr noundef nonnull align 1 dereferenceable(9) @_ZZN2BHILi9EEixEjE3tmp, i64 9, i1 false)
  %138 = or i32 %12, 1
  %139 = load ptr, ptr %10, align 8, !tbaa !161
  %140 = sext i32 %138 to i64
  %141 = getelementptr inbounds i8, ptr %139, i64 %140
  br label %142

142:                                              ; preds = %129, %112
  %143 = phi ptr [ %113, %112 ], [ %141, %129 ]
  ret ptr %143
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_ZN5Mixer1pEv(ptr noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 comdat align 2 {
  %2 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8
  br label %3

3:                                                ; preds = %167, %1
  %4 = phi ptr [ %0, %1 ], [ %55, %167 ]
  %5 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 8
  %6 = load i32, ptr %5, align 8, !tbaa !64
  %7 = and i32 %6, 7
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %52, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 3, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !59
  %12 = sext i32 %6 to i64
  %13 = shl nsw i64 %12, 1
  %14 = getelementptr i8, ptr %11, i64 %13
  %15 = shl i32 %6, 1
  %16 = and i32 %15, 14
  %17 = xor i32 %16, 14
  %18 = add nuw nsw i32 %17, 2
  %19 = zext i32 %18 to i64
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 2 dereferenceable(1) %14, i8 0, i64 %19, i1 false), !tbaa !31
  %20 = add nsw i64 %12, 1
  %21 = and i64 %20, 7
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %49, label %23, !llvm.loop !164

23:                                               ; preds = %9
  %24 = add nsw i64 %12, 2
  %25 = and i64 %24, 7
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %49, label %27, !llvm.loop !164

27:                                               ; preds = %23
  %28 = add nsw i64 %12, 3
  %29 = and i64 %28, 7
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %49, label %31, !llvm.loop !164

31:                                               ; preds = %27
  %32 = add nsw i64 %12, 4
  %33 = and i64 %32, 7
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %49, label %35, !llvm.loop !164

35:                                               ; preds = %31
  %36 = add nsw i64 %12, 5
  %37 = and i64 %36, 7
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %49, label %39, !llvm.loop !164

39:                                               ; preds = %35
  %40 = add nsw i64 %12, 6
  %41 = and i64 %40, 7
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %49, label %43, !llvm.loop !164

43:                                               ; preds = %39
  %44 = add nsw i64 %12, 7
  %45 = and i64 %44, 7
  %46 = icmp eq i64 %45, 0
  %47 = add nsw i64 %12, 8
  %48 = select i1 %46, i64 %44, i64 %47
  br label %49, !llvm.loop !164

49:                                               ; preds = %43, %39, %35, %31, %27, %23, %9
  %50 = phi i64 [ %20, %9 ], [ %24, %23 ], [ %28, %27 ], [ %32, %31 ], [ %36, %35 ], [ %40, %39 ], [ %48, %43 ]
  %51 = trunc i64 %50 to i32
  store i32 %51, ptr %5, align 8, !tbaa !64
  br label %52

52:                                               ; preds = %49, %3
  %53 = phi i32 [ %51, %49 ], [ %6, %3 ]
  %54 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 10
  %55 = load ptr, ptr %54, align 8, !tbaa !47
  %56 = icmp eq ptr %55, null
  br i1 %56, label %310, label %57

57:                                               ; preds = %52
  %58 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 6
  %59 = load i32, ptr %58, align 8, !tbaa !62
  %60 = icmp sgt i32 %59, 0
  br i1 %60, label %61, label %147

61:                                               ; preds = %57
  %62 = load i32, ptr @y, align 4, !tbaa !25
  %63 = shl i32 %62, 12
  %64 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 9, i32 3
  %65 = load ptr, ptr %64, align 8, !tbaa !61
  %66 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 3, i32 3
  %67 = load ptr, ptr %66, align 8
  %68 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 5, i32 3
  %69 = load ptr, ptr %68, align 8
  %70 = load i32, ptr %55, align 8
  %71 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 4, i32 3
  %72 = load ptr, ptr %71, align 8
  %73 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 8
  %74 = load i32, ptr %73, align 8
  %75 = freeze i32 %74
  %76 = add i32 %75, 7
  %77 = and i32 %76, -8
  %78 = icmp sgt i32 %77, 0
  %79 = zext i32 %77 to i64
  br i1 %78, label %80, label %147

80:                                               ; preds = %61
  %81 = zext i32 %59 to i64
  %82 = lshr i32 %76, 3
  %83 = zext i32 %82 to i64
  %84 = shl nuw nsw i64 %83, 4
  %85 = getelementptr i8, ptr %72, i64 %84
  %86 = getelementptr i8, ptr %67, i64 %84
  br label %87

87:                                               ; preds = %144, %80
  %88 = phi i64 [ 0, %80 ], [ %145, %144 ]
  %89 = getelementptr inbounds i32, ptr %65, i64 %88
  %90 = load i32, ptr %89, align 4, !tbaa !25
  %91 = sub nsw i32 %63, %90
  %92 = mul nsw i32 %91, 7
  %93 = icmp eq i32 %63, %90
  br i1 %93, label %144, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds i32, ptr %69, i64 %88
  %96 = load i32, ptr %95, align 4, !tbaa !25
  %97 = mul nsw i32 %96, %70
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i16, ptr %72, i64 %98
  %100 = shl nsw i64 %98, 1
  %101 = getelementptr i8, ptr %85, i64 %100
  %102 = icmp ult ptr %99, %86
  %103 = icmp ult ptr %67, %101
  %104 = and i1 %102, %103
  br i1 %104, label %126, label %105

105:                                              ; preds = %94
  %106 = insertelement <8 x i32> poison, i32 %92, i64 0
  %107 = shufflevector <8 x i32> %106, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %108

108:                                              ; preds = %108, %105
  %109 = phi i64 [ 0, %105 ], [ %124, %108 ]
  %110 = getelementptr inbounds i16, ptr %99, i64 %109
  %111 = load <8 x i16>, ptr %110, align 2, !tbaa !31, !alias.scope !165, !noalias !168
  %112 = sext <8 x i16> %111 to <8 x i32>
  %113 = getelementptr inbounds i16, ptr %67, i64 %109
  %114 = load <8 x i16>, ptr %113, align 2, !tbaa !31, !alias.scope !168
  %115 = sext <8 x i16> %114 to <8 x i32>
  %116 = mul nsw <8 x i32> %107, %115
  %117 = ashr <8 x i32> %116, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %118 = add nsw <8 x i32> %117, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %119 = ashr <8 x i32> %118, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %120 = add nsw <8 x i32> %119, %112
  %121 = tail call <8 x i32> @llvm.smax.v8i32(<8 x i32> %120, <8 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>)
  %122 = tail call <8 x i32> @llvm.smin.v8i32(<8 x i32> %121, <8 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>)
  %123 = trunc <8 x i32> %122 to <8 x i16>
  store <8 x i16> %123, ptr %110, align 2, !tbaa !31, !alias.scope !165, !noalias !168
  %124 = add nuw i64 %109, 8
  %125 = icmp eq i64 %124, %79
  br i1 %125, label %144, label %108, !llvm.loop !170

126:                                              ; preds = %94, %126
  %127 = phi i64 [ %142, %126 ], [ 0, %94 ]
  %128 = getelementptr inbounds i16, ptr %99, i64 %127
  %129 = load i16, ptr %128, align 2, !tbaa !31
  %130 = sext i16 %129 to i32
  %131 = getelementptr inbounds i16, ptr %67, i64 %127
  %132 = load i16, ptr %131, align 2, !tbaa !31
  %133 = sext i16 %132 to i32
  %134 = mul nsw i32 %92, %133
  %135 = ashr i32 %134, 15
  %136 = add nsw i32 %135, 1
  %137 = ashr i32 %136, 1
  %138 = add nsw i32 %137, %130
  %139 = tail call i32 @llvm.smax.i32(i32 %138, i32 -32768)
  %140 = tail call i32 @llvm.smin.i32(i32 %139, i32 32767)
  %141 = trunc i32 %140 to i16
  store i16 %141, ptr %128, align 2, !tbaa !31
  %142 = add nuw nsw i64 %127, 1
  %143 = icmp eq i64 %142, %79
  br i1 %143, label %144, label %126, !llvm.loop !171

144:                                              ; preds = %108, %126, %87
  %145 = add nuw nsw i64 %88, 1
  %146 = icmp eq i64 %145, %81
  br i1 %146, label %147, label %87, !llvm.loop !151

147:                                              ; preds = %144, %57, %61
  store i32 0, ptr %58, align 8, !tbaa !62
  %148 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 7
  store i32 0, ptr %148, align 4, !tbaa !63
  %149 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 8
  store i32 0, ptr %149, align 8, !tbaa !64
  %150 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 6
  %151 = load i32, ptr %150, align 8, !tbaa !62
  %152 = icmp sgt i32 %151, 0
  br i1 %152, label %153, label %167

153:                                              ; preds = %147
  %154 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 3, i32 3
  %155 = load ptr, ptr %154, align 8, !tbaa !59
  %156 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 5, i32 3
  %157 = load ptr, ptr %156, align 8, !tbaa !61
  %158 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 4, i32 3
  %159 = load ptr, ptr %158, align 8, !tbaa !59
  %160 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 9, i32 3
  %161 = load ptr, ptr %160, align 8, !tbaa !61
  %162 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 3, i32 3
  %163 = load ptr, ptr %162, align 8, !tbaa !59
  br label %177

164:                                              ; preds = %296
  %165 = load i32, ptr %148, align 4, !tbaa !63
  %166 = load i32, ptr %58, align 8, !tbaa !62
  br label %167

167:                                              ; preds = %164, %147
  %168 = phi i32 [ %166, %164 ], [ 0, %147 ]
  %169 = phi i32 [ %165, %164 ], [ 0, %147 ]
  %170 = add nsw i32 %168, 1
  store i32 %170, ptr %58, align 8, !tbaa !62
  %171 = getelementptr inbounds %class.Mixer, ptr %55, i64 0, i32 5, i32 3
  %172 = load ptr, ptr %171, align 8, !tbaa !61
  %173 = sext i32 %168 to i64
  %174 = getelementptr inbounds i32, ptr %172, i64 %173
  store i32 %169, ptr %174, align 4, !tbaa !25
  %175 = load i32, ptr %148, align 4, !tbaa !63
  %176 = add nsw i32 %175, 1
  store i32 %176, ptr %148, align 4, !tbaa !63
  br label %3

177:                                              ; preds = %153, %296
  %178 = phi i64 [ 0, %153 ], [ %306, %296 ]
  %179 = getelementptr inbounds i32, ptr %157, i64 %178
  %180 = load i32, ptr %179, align 4, !tbaa !25
  %181 = load i32, ptr %4, align 8, !tbaa !55
  %182 = mul nsw i32 %181, %180
  %183 = sext i32 %182 to i64
  %184 = getelementptr inbounds i16, ptr %159, i64 %183
  %185 = load i32, ptr %5, align 8, !tbaa !64
  %186 = add nsw i32 %185, 7
  %187 = and i32 %186, -8
  %188 = icmp sgt i32 %187, 0
  br i1 %188, label %189, label %277

189:                                              ; preds = %177
  %190 = zext i32 %187 to i64
  %191 = tail call i64 @llvm.umax.i64(i64 %190, i64 2)
  %192 = add nsw i64 %191, -1
  %193 = lshr i64 %192, 1
  %194 = add nuw nsw i64 %193, 1
  %195 = icmp ult i64 %192, 14
  br i1 %195, label %245, label %196

196:                                              ; preds = %189
  %197 = and i64 %194, -8
  %198 = shl nuw i64 %197, 1
  br label %199

199:                                              ; preds = %199, %196
  %200 = phi i64 [ 0, %196 ], [ %239, %199 ]
  %201 = phi <4 x i32> [ zeroinitializer, %196 ], [ %237, %199 ]
  %202 = phi <4 x i32> [ zeroinitializer, %196 ], [ %238, %199 ]
  %203 = shl i64 %200, 1
  %204 = or i64 %203, 8
  %205 = getelementptr inbounds i16, ptr %155, i64 %203
  %206 = getelementptr inbounds i16, ptr %155, i64 %204
  %207 = load <8 x i16>, ptr %205, align 2, !tbaa !31
  %208 = load <8 x i16>, ptr %206, align 2, !tbaa !31
  %209 = shufflevector <8 x i16> %207, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %210 = shufflevector <8 x i16> %208, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %211 = shufflevector <8 x i16> %207, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %212 = shufflevector <8 x i16> %208, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %213 = sext <4 x i16> %209 to <4 x i32>
  %214 = sext <4 x i16> %210 to <4 x i32>
  %215 = getelementptr inbounds i16, ptr %184, i64 %203
  %216 = getelementptr inbounds i16, ptr %184, i64 %204
  %217 = load <8 x i16>, ptr %215, align 2, !tbaa !31
  %218 = load <8 x i16>, ptr %216, align 2, !tbaa !31
  %219 = shufflevector <8 x i16> %217, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %220 = shufflevector <8 x i16> %218, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %221 = shufflevector <8 x i16> %217, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %222 = shufflevector <8 x i16> %218, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %223 = sext <4 x i16> %219 to <4 x i32>
  %224 = sext <4 x i16> %220 to <4 x i32>
  %225 = mul nsw <4 x i32> %223, %213
  %226 = mul nsw <4 x i32> %224, %214
  %227 = sext <4 x i16> %211 to <4 x i32>
  %228 = sext <4 x i16> %212 to <4 x i32>
  %229 = sext <4 x i16> %221 to <4 x i32>
  %230 = sext <4 x i16> %222 to <4 x i32>
  %231 = mul nsw <4 x i32> %229, %227
  %232 = mul nsw <4 x i32> %230, %228
  %233 = add nsw <4 x i32> %231, %225
  %234 = add nsw <4 x i32> %232, %226
  %235 = ashr <4 x i32> %233, <i32 8, i32 8, i32 8, i32 8>
  %236 = ashr <4 x i32> %234, <i32 8, i32 8, i32 8, i32 8>
  %237 = add <4 x i32> %235, %201
  %238 = add <4 x i32> %236, %202
  %239 = add nuw i64 %200, 8
  %240 = icmp eq i64 %239, %197
  br i1 %240, label %241, label %199, !llvm.loop !172

241:                                              ; preds = %199
  %242 = add <4 x i32> %238, %237
  %243 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %242)
  %244 = icmp eq i64 %194, %197
  br i1 %244, label %271, label %245

245:                                              ; preds = %189, %241
  %246 = phi i64 [ 0, %189 ], [ %198, %241 ]
  %247 = phi i32 [ 0, %189 ], [ %243, %241 ]
  br label %248

248:                                              ; preds = %245, %248
  %249 = phi i64 [ %269, %248 ], [ %246, %245 ]
  %250 = phi i32 [ %268, %248 ], [ %247, %245 ]
  %251 = getelementptr inbounds i16, ptr %155, i64 %249
  %252 = load i16, ptr %251, align 2, !tbaa !31
  %253 = sext i16 %252 to i32
  %254 = getelementptr inbounds i16, ptr %184, i64 %249
  %255 = load i16, ptr %254, align 2, !tbaa !31
  %256 = sext i16 %255 to i32
  %257 = mul nsw i32 %256, %253
  %258 = or i64 %249, 1
  %259 = getelementptr inbounds i16, ptr %155, i64 %258
  %260 = load i16, ptr %259, align 2, !tbaa !31
  %261 = sext i16 %260 to i32
  %262 = getelementptr inbounds i16, ptr %184, i64 %258
  %263 = load i16, ptr %262, align 2, !tbaa !31
  %264 = sext i16 %263 to i32
  %265 = mul nsw i32 %264, %261
  %266 = add nsw i32 %265, %257
  %267 = ashr i32 %266, 8
  %268 = add nsw i32 %267, %250
  %269 = add nuw nsw i64 %249, 2
  %270 = icmp ult i64 %269, %190
  br i1 %270, label %248, label %271, !llvm.loop !173

271:                                              ; preds = %248, %241
  %272 = phi i32 [ %243, %241 ], [ %268, %248 ]
  %273 = icmp sgt i32 %272, 65535
  br i1 %273, label %296, label %274

274:                                              ; preds = %271
  %275 = lshr i32 %272, 5
  %276 = icmp slt i32 %272, -65504
  br i1 %276, label %296, label %277

277:                                              ; preds = %177, %274
  %278 = phi i32 [ %272, %274 ], [ 0, %177 ]
  %279 = phi i32 [ %275, %274 ], [ 0, %177 ]
  %280 = and i32 %279, 127
  %281 = ashr i32 %278, 12
  %282 = add nsw i32 %281, 16
  %283 = zext i32 %282 to i64
  %284 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %283
  %285 = load i32, ptr %284, align 4, !tbaa !25
  %286 = sub nuw nsw i32 128, %280
  %287 = mul nsw i32 %286, %285
  %288 = add nsw i32 %281, 17
  %289 = zext i32 %288 to i64
  %290 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %289
  %291 = load i32, ptr %290, align 4, !tbaa !25
  %292 = mul nsw i32 %291, %280
  %293 = add i32 %287, 64
  %294 = add i32 %293, %292
  %295 = ashr i32 %294, 7
  br label %296

296:                                              ; preds = %271, %274, %277
  %297 = phi i32 [ %295, %277 ], [ 4095, %271 ], [ 0, %274 ]
  %298 = getelementptr inbounds i32, ptr %161, i64 %178
  store i32 %297, ptr %298, align 4, !tbaa !25
  %299 = sext i32 %297 to i64
  %300 = getelementptr inbounds i16, ptr %2, i64 %299
  %301 = load i16, ptr %300, align 2, !tbaa !31
  %302 = load i32, ptr %149, align 8, !tbaa !64
  %303 = add nsw i32 %302, 1
  store i32 %303, ptr %149, align 8, !tbaa !64
  %304 = sext i32 %302 to i64
  %305 = getelementptr inbounds i16, ptr %163, i64 %304
  store i16 %301, ptr %305, align 2, !tbaa !31
  %306 = add nuw nsw i64 %178, 1
  %307 = load i32, ptr %150, align 8, !tbaa !62
  %308 = sext i32 %307 to i64
  %309 = icmp slt i64 %306, %308
  br i1 %309, label %177, label %164, !llvm.loop !174

310:                                              ; preds = %52
  %311 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 3, i32 3
  %312 = load ptr, ptr %311, align 8, !tbaa !59
  %313 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 4, i32 3
  %314 = load ptr, ptr %313, align 8, !tbaa !59
  %315 = add nuw nsw i32 %53, 7
  %316 = and i32 %315, -8
  %317 = icmp sgt i32 %316, 0
  br i1 %317, label %318, label %406

318:                                              ; preds = %310
  %319 = zext i32 %316 to i64
  %320 = tail call i64 @llvm.umax.i64(i64 %319, i64 2)
  %321 = add nsw i64 %320, -1
  %322 = lshr i64 %321, 1
  %323 = add nuw nsw i64 %322, 1
  %324 = icmp ult i64 %321, 14
  br i1 %324, label %374, label %325

325:                                              ; preds = %318
  %326 = and i64 %323, -8
  %327 = shl nuw i64 %326, 1
  br label %328

328:                                              ; preds = %328, %325
  %329 = phi i64 [ 0, %325 ], [ %368, %328 ]
  %330 = phi <4 x i32> [ zeroinitializer, %325 ], [ %366, %328 ]
  %331 = phi <4 x i32> [ zeroinitializer, %325 ], [ %367, %328 ]
  %332 = shl i64 %329, 1
  %333 = or i64 %332, 8
  %334 = getelementptr inbounds i16, ptr %312, i64 %332
  %335 = getelementptr inbounds i16, ptr %312, i64 %333
  %336 = load <8 x i16>, ptr %334, align 2, !tbaa !31
  %337 = load <8 x i16>, ptr %335, align 2, !tbaa !31
  %338 = shufflevector <8 x i16> %336, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %339 = shufflevector <8 x i16> %337, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %340 = shufflevector <8 x i16> %336, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %341 = shufflevector <8 x i16> %337, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %342 = sext <4 x i16> %338 to <4 x i32>
  %343 = sext <4 x i16> %339 to <4 x i32>
  %344 = getelementptr inbounds i16, ptr %314, i64 %332
  %345 = getelementptr inbounds i16, ptr %314, i64 %333
  %346 = load <8 x i16>, ptr %344, align 2, !tbaa !31
  %347 = load <8 x i16>, ptr %345, align 2, !tbaa !31
  %348 = shufflevector <8 x i16> %346, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %349 = shufflevector <8 x i16> %347, <8 x i16> poison, <4 x i32> <i32 0, i32 2, i32 4, i32 6>
  %350 = shufflevector <8 x i16> %346, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %351 = shufflevector <8 x i16> %347, <8 x i16> poison, <4 x i32> <i32 1, i32 3, i32 5, i32 7>
  %352 = sext <4 x i16> %348 to <4 x i32>
  %353 = sext <4 x i16> %349 to <4 x i32>
  %354 = mul nsw <4 x i32> %352, %342
  %355 = mul nsw <4 x i32> %353, %343
  %356 = sext <4 x i16> %340 to <4 x i32>
  %357 = sext <4 x i16> %341 to <4 x i32>
  %358 = sext <4 x i16> %350 to <4 x i32>
  %359 = sext <4 x i16> %351 to <4 x i32>
  %360 = mul nsw <4 x i32> %358, %356
  %361 = mul nsw <4 x i32> %359, %357
  %362 = add nsw <4 x i32> %360, %354
  %363 = add nsw <4 x i32> %361, %355
  %364 = ashr <4 x i32> %362, <i32 8, i32 8, i32 8, i32 8>
  %365 = ashr <4 x i32> %363, <i32 8, i32 8, i32 8, i32 8>
  %366 = add <4 x i32> %364, %330
  %367 = add <4 x i32> %365, %331
  %368 = add nuw i64 %329, 8
  %369 = icmp eq i64 %368, %326
  br i1 %369, label %370, label %328, !llvm.loop !175

370:                                              ; preds = %328
  %371 = add <4 x i32> %367, %366
  %372 = tail call i32 @llvm.vector.reduce.add.v4i32(<4 x i32> %371)
  %373 = icmp eq i64 %323, %326
  br i1 %373, label %400, label %374

374:                                              ; preds = %318, %370
  %375 = phi i64 [ 0, %318 ], [ %327, %370 ]
  %376 = phi i32 [ 0, %318 ], [ %372, %370 ]
  br label %377

377:                                              ; preds = %374, %377
  %378 = phi i64 [ %398, %377 ], [ %375, %374 ]
  %379 = phi i32 [ %397, %377 ], [ %376, %374 ]
  %380 = getelementptr inbounds i16, ptr %312, i64 %378
  %381 = load i16, ptr %380, align 2, !tbaa !31
  %382 = sext i16 %381 to i32
  %383 = getelementptr inbounds i16, ptr %314, i64 %378
  %384 = load i16, ptr %383, align 2, !tbaa !31
  %385 = sext i16 %384 to i32
  %386 = mul nsw i32 %385, %382
  %387 = or i64 %378, 1
  %388 = getelementptr inbounds i16, ptr %312, i64 %387
  %389 = load i16, ptr %388, align 2, !tbaa !31
  %390 = sext i16 %389 to i32
  %391 = getelementptr inbounds i16, ptr %314, i64 %387
  %392 = load i16, ptr %391, align 2, !tbaa !31
  %393 = sext i16 %392 to i32
  %394 = mul nsw i32 %393, %390
  %395 = add nsw i32 %394, %386
  %396 = ashr i32 %395, 8
  %397 = add nsw i32 %396, %379
  %398 = add nuw nsw i64 %378, 2
  %399 = icmp ult i64 %398, %319
  br i1 %399, label %377, label %400, !llvm.loop !176

400:                                              ; preds = %377, %370
  %401 = phi i32 [ %372, %370 ], [ %397, %377 ]
  %402 = icmp sgt i32 %401, 524287
  br i1 %402, label %425, label %403

403:                                              ; preds = %400
  %404 = lshr i32 %401, 8
  %405 = icmp slt i32 %401, -524032
  br i1 %405, label %425, label %406

406:                                              ; preds = %310, %403
  %407 = phi i32 [ %401, %403 ], [ 0, %310 ]
  %408 = phi i32 [ %404, %403 ], [ 0, %310 ]
  %409 = and i32 %408, 127
  %410 = ashr i32 %407, 15
  %411 = add nsw i32 %410, 16
  %412 = zext i32 %411 to i64
  %413 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %412
  %414 = load i32, ptr %413, align 4, !tbaa !25
  %415 = sub nuw nsw i32 128, %409
  %416 = mul nsw i32 %415, %414
  %417 = add nsw i32 %410, 17
  %418 = zext i32 %417 to i64
  %419 = getelementptr inbounds [33 x i32], ptr @_ZZ6squashiE1t, i64 0, i64 %418
  %420 = load i32, ptr %419, align 4, !tbaa !25
  %421 = mul nsw i32 %420, %409
  %422 = add i32 %416, 64
  %423 = add i32 %422, %421
  %424 = ashr i32 %423, 7
  br label %425

425:                                              ; preds = %400, %403, %406
  %426 = phi i32 [ %424, %406 ], [ 4095, %400 ], [ 0, %403 ]
  %427 = getelementptr inbounds %class.Mixer, ptr %4, i64 0, i32 9, i32 3
  %428 = load ptr, ptr %427, align 8, !tbaa !61
  store i32 %426, ptr %428, align 4, !tbaa !25
  ret i32 %426
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_ZN3APM1pEiii(ptr noundef nonnull align 8 dereferenceable(32) %0, i32 noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #14 comdat align 2 {
  %5 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 1
  %6 = load i32, ptr %5, align 4, !tbaa !82
  %7 = getelementptr inbounds %class.StateMap, ptr %0, i64 0, i32 2, i32 3
  %8 = load ptr, ptr %7, align 8, !tbaa !84
  %9 = sext i32 %6 to i64
  %10 = getelementptr inbounds i32, ptr %8, i64 %9
  %11 = load i32, ptr %10, align 4, !tbaa !25
  %12 = and i32 %11, 1023
  %13 = icmp slt i32 %12, %3
  %14 = add i32 %11, 1
  %15 = and i32 %11, -1024
  %16 = or i32 %15, %3
  %17 = select i1 %13, i32 %14, i32 %16
  %18 = lshr i32 %11, 10
  %19 = load i32, ptr @y, align 4, !tbaa !25
  %20 = shl i32 %19, 22
  %21 = sub nsw i32 %20, %18
  %22 = ashr i32 %21, 3
  %23 = zext i32 %12 to i64
  %24 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %23
  %25 = load i32, ptr %24, align 4, !tbaa !25
  %26 = mul nsw i32 %22, %25
  %27 = and i32 %26, -1024
  %28 = add i32 %27, %17
  store i32 %28, ptr %10, align 4, !tbaa !25
  %29 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %30 = sext i32 %1 to i64
  %31 = getelementptr inbounds i16, ptr %29, i64 %30
  %32 = load i16, ptr %31, align 2, !tbaa !31
  %33 = sext i16 %32 to i32
  %34 = mul nsw i32 %33, 23
  %35 = add nsw i32 %34, 47104
  %36 = and i32 %35, 4095
  %37 = mul nsw i32 %2, 24
  %38 = ashr i32 %35, 12
  %39 = add nsw i32 %38, %37
  %40 = lshr i32 %36, 11
  %41 = add nsw i32 %39, %40
  store i32 %41, ptr %5, align 4, !tbaa !82
  %42 = sext i32 %39 to i64
  %43 = getelementptr inbounds i32, ptr %8, i64 %42
  %44 = load i32, ptr %43, align 4, !tbaa !25
  %45 = lshr i32 %44, 13
  %46 = sub nuw nsw i32 4096, %36
  %47 = mul nuw nsw i32 %46, %45
  %48 = add nsw i32 %39, 1
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i32, ptr %8, i64 %49
  %51 = load i32, ptr %50, align 4, !tbaa !25
  %52 = lshr i32 %51, 13
  %53 = mul nuw nsw i32 %52, %36
  %54 = add nuw i32 %47, %53
  %55 = lshr i32 %54, 19
  ret i32 %55
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z8wavModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = alloca [49 x [49 x [2 x double]]], align 16
  %3 = alloca [49 x [49 x double]], align 16
  %4 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE1K acquire, align 8
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %13, !prof !110

6:                                                ; preds = %1
  %7 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE1K) #39
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %6
  %10 = load i32, ptr @level, align 4, !tbaa !25
  %11 = add nsw i32 %10, -1
  %12 = lshr i32 128, %11
  store i32 %12, ptr @_ZZ8wavModelR5MixerE1K, align 4, !tbaa !25
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE1K) #39
  br label %13

13:                                               ; preds = %9, %6, %1
  call void @llvm.lifetime.start.p0(i64 38416, ptr nonnull %2) #39
  call void @llvm.lifetime.start.p0(i64 19208, ptr nonnull %3) #39
  %14 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm1 acquire, align 8
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %16, label %22, !prof !110

16:                                               ; preds = %13
  %17 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm1) #39
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %22, label %19

19:                                               ; preds = %16
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm1, i32 noundef 131072)
          to label %20 unwind label %133

20:                                               ; preds = %19
  %21 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm1) #39
  br label %22

22:                                               ; preds = %20, %16, %13
  %23 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm2 acquire, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %31, !prof !110

25:                                               ; preds = %22
  %26 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm2) #39
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %31, label %28

28:                                               ; preds = %25
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm2, i32 noundef 131072)
          to label %29 unwind label %135

29:                                               ; preds = %28
  %30 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm2, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm2) #39
  br label %31

31:                                               ; preds = %29, %25, %22
  %32 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm3 acquire, align 8
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %34, label %40, !prof !110

34:                                               ; preds = %31
  %35 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm3) #39
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %40, label %37

37:                                               ; preds = %34
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm3, i32 noundef 131072)
          to label %38 unwind label %137

38:                                               ; preds = %37
  %39 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm3, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm3) #39
  br label %40

40:                                               ; preds = %38, %34, %31
  %41 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm4 acquire, align 8
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %49, !prof !110

43:                                               ; preds = %40
  %44 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm4) #39
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm4, i32 noundef 131072)
          to label %47 unwind label %139

47:                                               ; preds = %46
  %48 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm4, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm4) #39
  br label %49

49:                                               ; preds = %47, %43, %40
  %50 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm5 acquire, align 8
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %58, !prof !110

52:                                               ; preds = %49
  %53 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm5) #39
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %52
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm5, i32 noundef 131072)
          to label %56 unwind label %141

56:                                               ; preds = %55
  %57 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm5, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm5) #39
  br label %58

58:                                               ; preds = %56, %52, %49
  %59 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm6 acquire, align 8
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %67, !prof !110

61:                                               ; preds = %58
  %62 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm6) #39
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %67, label %64

64:                                               ; preds = %61
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm6, i32 noundef 131072)
          to label %65 unwind label %143

65:                                               ; preds = %64
  %66 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm6, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm6) #39
  br label %67

67:                                               ; preds = %65, %61, %58
  %68 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm7 acquire, align 8
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %70, label %76, !prof !110

70:                                               ; preds = %67
  %71 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm7) #39
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %70
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm7, i32 noundef 131072)
          to label %74 unwind label %145

74:                                               ; preds = %73
  %75 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm7, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm7) #39
  br label %76

76:                                               ; preds = %74, %70, %67
  %77 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE4scm8 acquire, align 8
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %79, label %85, !prof !110

79:                                               ; preds = %76
  %80 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm8) #39
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %79
  invoke void @_ZN25SmallStationaryContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ8wavModelR5MixerE4scm8, i32 noundef 131072)
          to label %83 unwind label %147

83:                                               ; preds = %82
  %84 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN25SmallStationaryContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE4scm8, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE4scm8) #39
  br label %85

85:                                               ; preds = %83, %79, %76
  %86 = load atomic i8, ptr @_ZGVZ8wavModelR5MixerE2cm acquire, align 8
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %96, !prof !110

88:                                               ; preds = %85
  %89 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8wavModelR5MixerE2cm) #39
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %96, label %91

91:                                               ; preds = %88
  %92 = load i32, ptr @level, align 4, !tbaa !25
  %93 = shl i32 262144, %92
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8wavModelR5MixerE2cm, i32 noundef %93, i32 noundef 10)
          to label %94 unwind label %149

94:                                               ; preds = %91
  %95 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ8wavModelR5MixerE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8wavModelR5MixerE2cm) #39
  br label %96

96:                                               ; preds = %94, %88, %85
  %97 = load i32, ptr @bpos, align 4, !tbaa !25
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %351

99:                                               ; preds = %96
  %100 = load i32, ptr @pos, align 4, !tbaa !25
  %101 = add nsw i32 %100, -8
  %102 = load i32, ptr @buf, align 8, !tbaa !20
  %103 = add nsw i32 %102, -1
  %104 = and i32 %103, %101
  %105 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %106 = sext i32 %104 to i64
  %107 = getelementptr inbounds i8, ptr %105, i64 %106
  %108 = load i8, ptr %107, align 1, !tbaa !9
  %109 = icmp eq i8 %108, 100
  br i1 %109, label %110, label %351

110:                                              ; preds = %99
  %111 = add nsw i32 %100, -7
  %112 = and i32 %103, %111
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, ptr %105, i64 %113
  %115 = load i8, ptr %114, align 1, !tbaa !9
  %116 = icmp eq i8 %115, 97
  br i1 %116, label %117, label %351

117:                                              ; preds = %110
  %118 = add nsw i32 %100, -6
  %119 = and i32 %103, %118
  %120 = sext i32 %119 to i64
  %121 = getelementptr inbounds i8, ptr %105, i64 %120
  %122 = load i8, ptr %121, align 1, !tbaa !9
  %123 = icmp eq i8 %122, 116
  br i1 %123, label %124, label %351

124:                                              ; preds = %117
  %125 = add nsw i32 %100, -5
  %126 = and i32 %103, %125
  %127 = sext i32 %126 to i64
  %128 = getelementptr inbounds i8, ptr %105, i64 %127
  %129 = load i8, ptr %128, align 1, !tbaa !9
  %130 = icmp eq i8 %129, 97
  br i1 %130, label %131, label %351

131:                                              ; preds = %124
  %132 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 1
  br label %151

133:                                              ; preds = %19
  %134 = landingpad { ptr, i32 }
          cleanup
  br label %2620

135:                                              ; preds = %28
  %136 = landingpad { ptr, i32 }
          cleanup
  br label %2620

137:                                              ; preds = %37
  %138 = landingpad { ptr, i32 }
          cleanup
  br label %2620

139:                                              ; preds = %46
  %140 = landingpad { ptr, i32 }
          cleanup
  br label %2620

141:                                              ; preds = %55
  %142 = landingpad { ptr, i32 }
          cleanup
  br label %2620

143:                                              ; preds = %64
  %144 = landingpad { ptr, i32 }
          cleanup
  br label %2620

145:                                              ; preds = %73
  %146 = landingpad { ptr, i32 }
          cleanup
  br label %2620

147:                                              ; preds = %82
  %148 = landingpad { ptr, i32 }
          cleanup
  br label %2620

149:                                              ; preds = %91
  %150 = landingpad { ptr, i32 }
          cleanup
  br label %2620

151:                                              ; preds = %131, %347
  %152 = phi i32 [ -32, %131 ], [ %349, %347 ]
  %153 = phi i32 [ 32, %131 ], [ %348, %347 ]
  %154 = load i32, ptr @pos, align 4, !tbaa !25
  %155 = sub nsw i32 %154, %153
  %156 = load i32, ptr @buf, align 8, !tbaa !20
  %157 = add nsw i32 %156, -1
  %158 = and i32 %157, %155
  %159 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %160 = sext i32 %158 to i64
  %161 = getelementptr inbounds i8, ptr %159, i64 %160
  %162 = load i8, ptr %161, align 1, !tbaa !9
  %163 = icmp eq i8 %162, 102
  br i1 %163, label %164, label %347

164:                                              ; preds = %151
  %165 = add nuw nsw i32 %152, 1
  %166 = add i32 %165, %154
  %167 = and i32 %157, %166
  %168 = sext i32 %167 to i64
  %169 = getelementptr inbounds i8, ptr %159, i64 %168
  %170 = load i8, ptr %169, align 1, !tbaa !9
  %171 = icmp eq i8 %170, 109
  br i1 %171, label %172, label %347

172:                                              ; preds = %164
  %173 = add nuw nsw i32 %152, 2
  %174 = add i32 %173, %154
  %175 = and i32 %157, %174
  %176 = sext i32 %175 to i64
  %177 = getelementptr inbounds i8, ptr %159, i64 %176
  %178 = load i8, ptr %177, align 1, !tbaa !9
  %179 = icmp eq i8 %178, 116
  br i1 %179, label %180, label %347

180:                                              ; preds = %172
  %181 = add nuw nsw i32 %152, 3
  %182 = add i32 %181, %154
  %183 = and i32 %157, %182
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i8, ptr %159, i64 %184
  %186 = load i8, ptr %185, align 1, !tbaa !9
  %187 = icmp eq i8 %186, 32
  br i1 %187, label %188, label %347

188:                                              ; preds = %180
  %189 = add nuw nsw i32 %152, 8
  %190 = add i32 %189, %154
  %191 = and i32 %157, %190
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds i8, ptr %159, i64 %192
  %194 = load i8, ptr %193, align 1, !tbaa !9
  %195 = zext i8 %194 to i16
  %196 = add i32 %190, 1
  %197 = and i32 %157, %196
  %198 = sext i32 %197 to i64
  %199 = getelementptr inbounds i8, ptr %159, i64 %198
  %200 = load i8, ptr %199, align 1, !tbaa !9
  %201 = zext i8 %200 to i16
  %202 = shl nuw i16 %201, 8
  %203 = or i16 %202, %195
  switch i16 %203, label %347 [
    i16 1, label %204
    i16 -2, label %204
  ]

204:                                              ; preds = %188, %188
  %205 = add nuw nsw i32 %152, 22
  %206 = add i32 %205, %154
  %207 = and i32 %157, %206
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds i8, ptr %159, i64 %208
  %210 = load i8, ptr %209, align 1, !tbaa !9
  %211 = zext i8 %210 to i32
  store i32 %211, ptr @_ZZ8wavModelR5MixerE4bits, align 4, !tbaa !25
  %212 = add nuw nsw i32 %211, 7
  %213 = lshr i32 %212, 3
  store i32 %213, ptr @_ZZ8wavModelR5MixerE5bytes, align 4, !tbaa !25
  %214 = add nuw nsw i32 %152, 10
  %215 = add i32 %214, %154
  %216 = and i32 %157, %215
  %217 = sext i32 %216 to i64
  %218 = getelementptr inbounds i8, ptr %159, i64 %217
  %219 = load i8, ptr %218, align 1, !tbaa !9
  %220 = zext i8 %219 to i32
  store i32 %220, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !25
  %221 = mul nuw nsw i32 %213, %220
  store i32 %221, ptr @_ZZ8wavModelR5MixerE1w, align 4, !tbaa !25
  %222 = add i32 %154, -4
  %223 = and i32 %157, %222
  %224 = sext i32 %223 to i64
  %225 = getelementptr inbounds i8, ptr %159, i64 %224
  %226 = load i8, ptr %225, align 1, !tbaa !9
  %227 = zext i8 %226 to i32
  %228 = add i32 %154, -3
  %229 = and i32 %157, %228
  %230 = sext i32 %229 to i64
  %231 = getelementptr inbounds i8, ptr %159, i64 %230
  %232 = load i8, ptr %231, align 1, !tbaa !9
  %233 = zext i8 %232 to i32
  %234 = shl nuw nsw i32 %233, 8
  %235 = or i32 %234, %227
  %236 = add i32 %154, -2
  %237 = and i32 %157, %236
  %238 = sext i32 %237 to i64
  %239 = getelementptr inbounds i8, ptr %159, i64 %238
  %240 = load i8, ptr %239, align 1, !tbaa !9
  %241 = zext i8 %240 to i32
  %242 = shl nuw nsw i32 %241, 16
  %243 = or i32 %235, %242
  %244 = add i32 %154, -1
  %245 = and i32 %157, %244
  %246 = sext i32 %245 to i64
  %247 = getelementptr inbounds i8, ptr %159, i64 %246
  %248 = load i8, ptr %247, align 1, !tbaa !9
  %249 = zext i8 %248 to i32
  %250 = shl nuw nsw i32 %249, 24
  %251 = or i32 %243, %250
  store i32 %251, ptr @_ZZ8wavModelR5MixerE1s, align 4, !tbaa !25
  %252 = add nsw i32 %220, -1
  %253 = icmp ult i32 %252, 2
  br i1 %253, label %254, label %346

254:                                              ; preds = %204
  switch i8 %210, label %346 [
    i8 16, label %255
    i8 8, label %255
  ]

255:                                              ; preds = %254, %254
  %256 = add nsw i32 %251, %154
  store i32 %256, ptr @_ZZ8wavModelR5MixerE3eof, align 4, !tbaa !25
  %257 = icmp eq i8 %219, 0
  br i1 %257, label %295, label %258

258:                                              ; preds = %255
  %259 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %260 = load i1, ptr @_ZL1D, align 4
  %261 = select i1 %260, i32 12, i32 0
  %262 = add nuw nsw i32 %261, %259
  %263 = icmp slt i32 %262, 0
  br i1 %263, label %271, label %264

264:                                              ; preds = %258
  %265 = or i32 %261, 1
  %266 = add i32 %265, %259
  %267 = zext i8 %219 to i64
  %268 = shl nuw nsw i64 %267, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 @_ZZ8wavModelR5MixerE7counter, i8 0, i64 %268, i1 false), !tbaa !25
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 @_ZZ8wavModelR5MixerE1n, i8 0, i64 %268, i1 false), !tbaa !25
  %269 = zext i8 %219 to i64
  %270 = zext i32 %266 to i64
  br label %293

271:                                              ; preds = %258
  %272 = zext i8 %219 to i64
  %273 = shl nuw nsw i64 %272, 2
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 @_ZZ8wavModelR5MixerE7counter, i8 0, i64 %273, i1 false), !tbaa !25
  tail call void @llvm.memset.p0.i64(ptr nonnull align 4 @_ZZ8wavModelR5MixerE1n, i8 0, i64 %273, i1 false), !tbaa !25
  %274 = zext i8 %219 to i64
  %275 = icmp ult i8 %219, 4
  br i1 %275, label %286, label %276

276:                                              ; preds = %271
  %277 = and i64 %274, 252
  br label %278

278:                                              ; preds = %278, %276
  %279 = phi i64 [ 0, %276 ], [ %282, %278 ]
  %280 = getelementptr inbounds [2 x double], ptr %132, i64 0, i64 %279
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, ptr %280, align 16, !tbaa !177
  %281 = getelementptr inbounds double, ptr %280, i64 2
  store <2 x double> <double 1.000000e+00, double 1.000000e+00>, ptr %281, align 16, !tbaa !177
  %282 = add nuw i64 %279, 4
  %283 = icmp eq i64 %282, %277
  br i1 %283, label %284, label %278, !llvm.loop !179

284:                                              ; preds = %278
  %285 = icmp eq i64 %277, %274
  br i1 %285, label %295, label %286

286:                                              ; preds = %271, %284
  %287 = phi i64 [ 0, %271 ], [ %277, %284 ]
  br label %288

288:                                              ; preds = %286, %288
  %289 = phi i64 [ %291, %288 ], [ %287, %286 ]
  %290 = getelementptr inbounds [2 x double], ptr %132, i64 0, i64 %289
  store double 1.000000e+00, ptr %290, align 8, !tbaa !177
  %291 = add nuw nsw i64 %289, 1
  %292 = icmp eq i64 %291, %274
  br i1 %292, label %295, label %288, !llvm.loop !180

293:                                              ; preds = %264, %338
  %294 = phi i64 [ 0, %264 ], [ %340, %338 ]
  br label %300

295:                                              ; preds = %338, %288, %284, %255
  %296 = add nuw nsw i32 %220, %211
  store i32 %296, ptr @_ZL5wmode, align 4, !tbaa !25
  %297 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.14, i32 noundef %211)
  %298 = load i32, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !25
  %299 = icmp eq i32 %298, 1
  br i1 %299, label %342, label %344

300:                                              ; preds = %293, %335
  %301 = phi i64 [ 0, %293 ], [ %336, %335 ]
  %302 = trunc i64 %301 to i32
  %303 = tail call i32 @llvm.smax.i32(i32 %302, i32 %262)
  %304 = zext i32 %303 to i64
  %305 = sub nsw i64 %304, %301
  %306 = add i64 %305, 1
  %307 = sub nsw i64 %304, %301
  %308 = trunc i64 %301 to i32
  %309 = tail call i32 @llvm.smax.i32(i32 %308, i32 %262)
  %310 = add nuw i32 %309, 1
  %311 = zext i32 %310 to i64
  %312 = and i64 %306, 3
  %313 = icmp eq i64 %312, 0
  br i1 %313, label %321, label %314

314:                                              ; preds = %300, %314
  %315 = phi i64 [ %318, %314 ], [ %301, %300 ]
  %316 = phi i64 [ %319, %314 ], [ 0, %300 ]
  %317 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %301, i64 %315, i64 %294
  store double 0.000000e+00, ptr %317, align 8, !tbaa !177
  %318 = add nuw nsw i64 %315, 1
  %319 = add i64 %316, 1
  %320 = icmp eq i64 %319, %312
  br i1 %320, label %321, label %314, !llvm.loop !181

321:                                              ; preds = %314, %300
  %322 = phi i64 [ %301, %300 ], [ %318, %314 ]
  %323 = icmp ult i64 %307, 3
  br i1 %323, label %335, label %324

324:                                              ; preds = %321, %324
  %325 = phi i64 [ %333, %324 ], [ %322, %321 ]
  %326 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %301, i64 %325, i64 %294
  store double 0.000000e+00, ptr %326, align 8, !tbaa !177
  %327 = add nuw nsw i64 %325, 1
  %328 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %301, i64 %327, i64 %294
  store double 0.000000e+00, ptr %328, align 8, !tbaa !177
  %329 = add nuw nsw i64 %325, 2
  %330 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %301, i64 %329, i64 %294
  store double 0.000000e+00, ptr %330, align 8, !tbaa !177
  %331 = add nuw nsw i64 %325, 3
  %332 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %301, i64 %331, i64 %294
  store double 0.000000e+00, ptr %332, align 8, !tbaa !177
  %333 = add nuw nsw i64 %325, 4
  %334 = icmp eq i64 %333, %311
  br i1 %334, label %335, label %324, !llvm.loop !183

335:                                              ; preds = %324, %321
  %336 = add nuw nsw i64 %301, 1
  %337 = icmp eq i64 %336, %270
  br i1 %337, label %338, label %300, !llvm.loop !184

338:                                              ; preds = %335
  %339 = getelementptr inbounds [2 x double], ptr %132, i64 0, i64 %294
  store double 1.000000e+00, ptr %339, align 8, !tbaa !177
  %340 = add nuw nsw i64 %294, 1
  %341 = icmp eq i64 %340, %269
  br i1 %341, label %295, label %293, !llvm.loop !185

342:                                              ; preds = %295
  %343 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.15)
  store i32 48, ptr @_ZL1S, align 4, !tbaa !25
  store i1 false, ptr @_ZL1D, align 4
  br label %347

344:                                              ; preds = %295
  %345 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.16)
  store i32 36, ptr @_ZL1S, align 4, !tbaa !25
  store i1 true, ptr @_ZL1D, align 4
  br label %347

346:                                              ; preds = %254, %204
  store i32 %154, ptr @_ZZ8wavModelR5MixerE3eof, align 4, !tbaa !25
  br label %347

347:                                              ; preds = %188, %151, %164, %172, %180, %342, %344, %346
  %348 = add nuw nsw i32 %153, 1
  %349 = xor i32 %153, -1
  %350 = icmp eq i32 %348, 1001
  br i1 %350, label %351, label %151, !llvm.loop !186

351:                                              ; preds = %347, %124, %117, %110, %99, %96
  %352 = load i32, ptr @pos, align 4, !tbaa !25
  %353 = load i32, ptr @_ZZ8wavModelR5MixerE3eof, align 4, !tbaa !25
  %354 = icmp sgt i32 %352, %353
  br i1 %354, label %355, label %356

355:                                              ; preds = %351
  store i32 0, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !25
  store i32 0, ptr @_ZZ8wavModelR5MixerE4bits, align 4, !tbaa !25
  br label %2618

356:                                              ; preds = %351
  %357 = load i32, ptr @bpos, align 4, !tbaa !25
  %358 = icmp eq i32 %357, 0
  br i1 %358, label %359, label %2432

359:                                              ; preds = %356
  %360 = load i32, ptr @_ZZ8wavModelR5MixerE1s, align 4, !tbaa !25
  %361 = sub i32 %352, %353
  %362 = add i32 %361, %360
  %363 = load i32, ptr @_ZZ8wavModelR5MixerE5bytes, align 4, !tbaa !25
  %364 = srem i32 %362, %363
  %365 = load i32, ptr @_ZZ8wavModelR5MixerE1w, align 4, !tbaa !25
  %366 = srem i32 %362, %365
  %367 = sdiv i32 %366, %363
  %368 = icmp eq i32 %364, 0
  br i1 %368, label %369, label %1301

369:                                              ; preds = %359
  %370 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %371 = load i1, ptr @_ZL1D, align 4
  %372 = select i1 %371, i32 12, i32 0
  %373 = add nuw nsw i32 %372, %370
  %374 = icmp slt i32 %373, 0
  br i1 %374, label %413, label %375

375:                                              ; preds = %369
  %376 = sext i32 %367 to i64
  %377 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %376
  br label %378

378:                                              ; preds = %375, %405
  %379 = phi i1 [ %371, %375 ], [ %406, %405 ]
  %380 = phi i32 [ %370, %375 ], [ %407, %405 ]
  %381 = phi i64 [ 0, %375 ], [ %408, %405 ]
  %382 = load i32, ptr %377, align 4, !tbaa !25
  %383 = sext i32 %382 to i64
  %384 = icmp slt i64 %381, %383
  br i1 %384, label %385, label %387

385:                                              ; preds = %378
  %386 = trunc i64 %381 to i32
  br label %394

387:                                              ; preds = %378
  %388 = xor i32 %380, -1
  %389 = trunc i64 %381 to i32
  %390 = add i32 %389, %388
  %391 = icmp sgt i32 %390, -1
  %392 = icmp slt i32 %390, %382
  %393 = select i1 %391, i1 %392, i1 false
  br i1 %393, label %394, label %405

394:                                              ; preds = %385, %387
  %395 = phi i32 [ %386, %385 ], [ %389, %387 ]
  %396 = getelementptr inbounds [49 x [2 x double]], ptr %2, i64 0, i64 %381, i64 %376
  %397 = load double, ptr %396, align 8, !tbaa !177
  %398 = tail call noundef i32 @_Z1Xii(i32 noundef 0, i32 noundef 1)
  %399 = tail call noundef i32 @_Z1Xii(i32 noundef %395, i32 noundef 1)
  %400 = mul nsw i32 %399, %398
  %401 = sitofp i32 %400 to double
  %402 = tail call double @llvm.fmuladd.f64(double %397, double 0x3FEFDF3B645A1CAC, double %401)
  store double %402, ptr %396, align 8, !tbaa !177
  %403 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %404 = load i1, ptr @_ZL1D, align 4
  br label %405

405:                                              ; preds = %387, %394
  %406 = phi i1 [ %379, %387 ], [ %404, %394 ]
  %407 = phi i32 [ %380, %387 ], [ %403, %394 ]
  %408 = add nuw nsw i64 %381, 1
  %409 = select i1 %406, i32 12, i32 0
  %410 = add nuw nsw i32 %409, %407
  %411 = sext i32 %410 to i64
  %412 = icmp slt i64 %381, %411
  br i1 %412, label %378, label %413, !llvm.loop !187

413:                                              ; preds = %405, %369
  %414 = phi i1 [ %371, %369 ], [ %406, %405 ]
  %415 = phi i32 [ %370, %369 ], [ %407, %405 ]
  %416 = load i32, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !25
  %417 = icmp eq i32 %416, 2
  br i1 %417, label %418, label %489

418:                                              ; preds = %413
  br i1 %414, label %419, label %423

419:                                              ; preds = %418
  %420 = sext i32 %367 to i64
  %421 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %420
  %422 = sext i32 %415 to i64
  br label %429

423:                                              ; preds = %454, %418
  %424 = phi i32 [ %415, %418 ], [ %456, %454 ]
  %425 = icmp slt i32 %424, 1
  br i1 %425, label %489, label %426

426:                                              ; preds = %423
  %427 = sext i32 %367 to i64
  %428 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %427
  br label %461

429:                                              ; preds = %419, %454
  %430 = phi i1 [ true, %419 ], [ %455, %454 ]
  %431 = phi i32 [ %415, %419 ], [ %456, %454 ]
  %432 = phi i64 [ %422, %419 ], [ %434, %454 ]
  %433 = trunc i64 %432 to i32
  %434 = add nsw i64 %432, 1
  %435 = sub i32 %433, %431
  %436 = load i32, ptr %421, align 4, !tbaa !25
  %437 = icmp slt i32 %435, %436
  br i1 %437, label %438, label %454

438:                                              ; preds = %429
  %439 = add nuw nsw i32 %431, 1
  %440 = zext i32 %439 to i64
  %441 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %440, i64 %434, i64 %420
  %442 = load double, ptr %441, align 8, !tbaa !177
  %443 = tail call noundef i32 @_Z1Xii(i32 noundef %439, i32 noundef 1)
  %444 = trunc i64 %434 to i32
  %445 = tail call noundef i32 @_Z1Xii(i32 noundef %444, i32 noundef 1)
  %446 = mul nsw i32 %445, %443
  %447 = sitofp i32 %446 to double
  %448 = tail call double @llvm.fmuladd.f64(double %442, double 0x3FEFDF3B645A1CAC, double %447)
  %449 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %450 = add nuw nsw i32 %449, 1
  %451 = zext i32 %450 to i64
  %452 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %451, i64 %434, i64 %420
  store double %448, ptr %452, align 8, !tbaa !177
  %453 = load i1, ptr @_ZL1D, align 4
  br label %454

454:                                              ; preds = %429, %438
  %455 = phi i1 [ %430, %429 ], [ %453, %438 ]
  %456 = phi i32 [ %431, %429 ], [ %449, %438 ]
  %457 = select i1 %455, i32 12, i32 0
  %458 = add nuw nsw i32 %457, %456
  %459 = sext i32 %458 to i64
  %460 = icmp slt i64 %434, %459
  br i1 %460, label %429, label %423, !llvm.loop !188

461:                                              ; preds = %426, %484
  %462 = phi i32 [ %424, %426 ], [ %485, %484 ]
  %463 = phi i64 [ 1, %426 ], [ %486, %484 ]
  %464 = load i32, ptr %428, align 4, !tbaa !25
  %465 = sext i32 %464 to i64
  %466 = icmp slt i64 %463, %465
  br i1 %466, label %467, label %484

467:                                              ; preds = %461
  %468 = add nuw nsw i32 %462, 1
  %469 = zext i32 %468 to i64
  %470 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %463, i64 %469, i64 %427
  %471 = load double, ptr %470, align 8, !tbaa !177
  %472 = trunc i64 %463 to i32
  %473 = tail call noundef i32 @_Z1Xii(i32 noundef %472, i32 noundef 1)
  %474 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %475 = add nuw nsw i32 %474, 1
  %476 = tail call noundef i32 @_Z1Xii(i32 noundef %475, i32 noundef 1)
  %477 = mul nsw i32 %476, %473
  %478 = sitofp i32 %477 to double
  %479 = tail call double @llvm.fmuladd.f64(double %471, double 0x3FEFDF3B645A1CAC, double %478)
  %480 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %481 = add nuw nsw i32 %480, 1
  %482 = zext i32 %481 to i64
  %483 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %463, i64 %482, i64 %427
  store double %479, ptr %483, align 8, !tbaa !177
  br label %484

484:                                              ; preds = %461, %467
  %485 = phi i32 [ %462, %461 ], [ %480, %467 ]
  %486 = add nuw nsw i64 %463, 1
  %487 = sext i32 %485 to i64
  %488 = icmp slt i64 %463, %487
  br i1 %488, label %461, label %489, !llvm.loop !189

489:                                              ; preds = %484, %423, %413
  %490 = phi i32 [ %424, %423 ], [ %415, %413 ], [ %485, %484 ]
  %491 = sext i32 %367 to i64
  %492 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE1n, i64 0, i64 %491
  %493 = load i32, ptr %492, align 4, !tbaa !25
  %494 = add nsw i32 %493, 1
  store i32 %494, ptr %492, align 4, !tbaa !25
  %495 = load i32, ptr @_ZZ8wavModelR5MixerE1K, align 4, !tbaa !25
  %496 = icmp eq i32 %494, %495
  br i1 %496, label %499, label %497

497:                                              ; preds = %489
  %498 = load i1, ptr @_ZL1D, align 4
  br label %874

499:                                              ; preds = %489
  %500 = load i32, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !25
  %501 = icmp eq i32 %500, 1
  %502 = load i1, ptr @_ZL1D, align 4
  %503 = select i1 %502, i32 12, i32 0
  %504 = add nuw nsw i32 %503, %490
  %505 = icmp slt i32 %504, 1
  br i1 %501, label %507, label %506

506:                                              ; preds = %499
  br i1 %505, label %740, label %546

507:                                              ; preds = %499
  br i1 %505, label %740, label %508

508:                                              ; preds = %507, %539
  %509 = phi i1 [ %542, %539 ], [ %502, %507 ]
  %510 = phi i32 [ %543, %539 ], [ %490, %507 ]
  %511 = phi i64 [ %544, %539 ], [ 1, %507 ]
  %512 = select i1 %509, i32 12, i32 0
  %513 = add nuw nsw i32 %512, %510
  %514 = sext i32 %513 to i64
  %515 = icmp sgt i64 %511, %514
  br i1 %515, label %539, label %516

516:                                              ; preds = %508
  %517 = add nsw i64 %511, -1
  %518 = trunc i64 %517 to i32
  br label %519

519:                                              ; preds = %516, %519
  %520 = phi i64 [ %511, %516 ], [ %532, %519 ]
  %521 = add nsw i64 %520, -1
  %522 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %517, i64 %521, i64 %491
  %523 = load double, ptr %522, align 8, !tbaa !177
  %524 = tail call noundef i32 @_Z1Xii(i32 noundef %518, i32 noundef 1)
  %525 = trunc i64 %521 to i32
  %526 = tail call noundef i32 @_Z1Xii(i32 noundef %525, i32 noundef 1)
  %527 = mul nsw i32 %526, %524
  %528 = sitofp i32 %527 to double
  %529 = fsub double %523, %528
  %530 = fdiv double %529, 0x3FEFDF3B645A1CAC
  %531 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %511, i64 %520, i64 %491
  store double %530, ptr %531, align 8, !tbaa !177
  %532 = add nuw nsw i64 %520, 1
  %533 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %534 = load i1, ptr @_ZL1D, align 4
  %535 = select i1 %534, i32 12, i32 0
  %536 = add nuw nsw i32 %535, %533
  %537 = sext i32 %536 to i64
  %538 = icmp slt i64 %520, %537
  br i1 %538, label %519, label %539, !llvm.loop !190

539:                                              ; preds = %519, %508
  %540 = phi i64 [ %514, %508 ], [ %537, %519 ]
  %541 = phi i32 [ %513, %508 ], [ %536, %519 ]
  %542 = phi i1 [ %509, %508 ], [ %534, %519 ]
  %543 = phi i32 [ %510, %508 ], [ %533, %519 ]
  %544 = add nuw nsw i64 %511, 1
  %545 = icmp slt i64 %511, %540
  br i1 %545, label %508, label %602, !llvm.loop !191

546:                                              ; preds = %506, %594
  %547 = phi i1 [ %595, %594 ], [ %502, %506 ]
  %548 = phi i32 [ %596, %594 ], [ %490, %506 ]
  %549 = phi i64 [ %597, %594 ], [ 1, %506 ]
  %550 = add nuw nsw i32 %548, 1
  %551 = zext i32 %550 to i64
  %552 = icmp eq i64 %549, %551
  br i1 %552, label %594, label %553

553:                                              ; preds = %546
  %554 = select i1 %547, i32 12, i32 0
  %555 = add nuw nsw i32 %554, %548
  %556 = sext i32 %555 to i64
  %557 = icmp sgt i64 %549, %556
  br i1 %557, label %594, label %558

558:                                              ; preds = %553
  %559 = add nsw i64 %549, -1
  %560 = trunc i64 %559 to i32
  br label %561

561:                                              ; preds = %558, %584
  %562 = phi i1 [ %547, %558 ], [ %585, %584 ]
  %563 = phi i32 [ %548, %558 ], [ %586, %584 ]
  %564 = phi i1 [ %547, %558 ], [ %587, %584 ]
  %565 = phi i32 [ %548, %558 ], [ %588, %584 ]
  %566 = phi i64 [ %549, %558 ], [ %589, %584 ]
  %567 = add nuw nsw i32 %565, 1
  %568 = zext i32 %567 to i64
  %569 = icmp eq i64 %566, %568
  br i1 %569, label %584, label %570

570:                                              ; preds = %561
  %571 = add nsw i64 %566, -1
  %572 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %559, i64 %571, i64 %491
  %573 = load double, ptr %572, align 8, !tbaa !177
  %574 = tail call noundef i32 @_Z1Xii(i32 noundef %560, i32 noundef 1)
  %575 = trunc i64 %571 to i32
  %576 = tail call noundef i32 @_Z1Xii(i32 noundef %575, i32 noundef 1)
  %577 = mul nsw i32 %576, %574
  %578 = sitofp i32 %577 to double
  %579 = fsub double %573, %578
  %580 = fdiv double %579, 0x3FEFDF3B645A1CAC
  %581 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %549, i64 %566, i64 %491
  store double %580, ptr %581, align 8, !tbaa !177
  %582 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %583 = load i1, ptr @_ZL1D, align 4
  br label %584

584:                                              ; preds = %561, %570
  %585 = phi i1 [ %562, %561 ], [ %583, %570 ]
  %586 = phi i32 [ %563, %561 ], [ %582, %570 ]
  %587 = phi i1 [ %564, %561 ], [ %583, %570 ]
  %588 = phi i32 [ %565, %561 ], [ %582, %570 ]
  %589 = add nuw nsw i64 %566, 1
  %590 = select i1 %587, i32 12, i32 0
  %591 = add nuw nsw i32 %590, %588
  %592 = sext i32 %591 to i64
  %593 = icmp slt i64 %566, %592
  br i1 %593, label %561, label %594, !llvm.loop !192

594:                                              ; preds = %584, %553, %546
  %595 = phi i1 [ %547, %553 ], [ %547, %546 ], [ %585, %584 ]
  %596 = phi i32 [ %548, %553 ], [ %548, %546 ], [ %586, %584 ]
  %597 = add nuw nsw i64 %549, 1
  %598 = select i1 %595, i32 12, i32 0
  %599 = add nuw nsw i32 %598, %596
  %600 = sext i32 %599 to i64
  %601 = icmp slt i64 %549, %600
  br i1 %601, label %546, label %602, !llvm.loop !193

602:                                              ; preds = %594, %539
  %603 = phi i32 [ %541, %539 ], [ %599, %594 ]
  %604 = phi i1 [ %542, %539 ], [ %595, %594 ]
  %605 = phi i32 [ %543, %539 ], [ %596, %594 ]
  %606 = icmp slt i32 %603, 1
  br i1 %606, label %740, label %611

607:                                              ; preds = %730, %722, %671
  %608 = icmp slt i64 %614, %679
  %609 = add nuw nsw i64 %615, 1
  %610 = add i64 %612, 1
  br i1 %608, label %611, label %740, !llvm.loop !194

611:                                              ; preds = %602, %607
  %612 = phi i64 [ %610, %607 ], [ 0, %602 ]
  %613 = phi i1 [ %676, %607 ], [ %604, %602 ]
  %614 = phi i64 [ %674, %607 ], [ 1, %602 ]
  %615 = phi i64 [ %609, %607 ], [ 2, %602 ]
  %616 = phi i32 [ %675, %607 ], [ %605, %602 ]
  %617 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %614, i64 %614, i64 %491
  %618 = load double, ptr %617, align 8, !tbaa !177
  %619 = icmp ugt i64 %614, 1
  br i1 %619, label %620, label %668

620:                                              ; preds = %611
  %621 = add i64 %612, -1
  %622 = and i64 %612, 3
  %623 = icmp ult i64 %621, 3
  br i1 %623, label %652, label %624

624:                                              ; preds = %620
  %625 = and i64 %612, -4
  br label %626

626:                                              ; preds = %626, %624
  %627 = phi i64 [ 1, %624 ], [ %649, %626 ]
  %628 = phi double [ %618, %624 ], [ %648, %626 ]
  %629 = phi i64 [ 0, %624 ], [ %650, %626 ]
  %630 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %614, i64 %627
  %631 = load double, ptr %630, align 8, !tbaa !177
  %632 = fneg double %631
  %633 = tail call double @llvm.fmuladd.f64(double %632, double %631, double %628)
  %634 = add nuw nsw i64 %627, 1
  %635 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %614, i64 %634
  %636 = load double, ptr %635, align 8, !tbaa !177
  %637 = fneg double %636
  %638 = tail call double @llvm.fmuladd.f64(double %637, double %636, double %633)
  %639 = add nuw nsw i64 %627, 2
  %640 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %614, i64 %639
  %641 = load double, ptr %640, align 8, !tbaa !177
  %642 = fneg double %641
  %643 = tail call double @llvm.fmuladd.f64(double %642, double %641, double %638)
  %644 = add nuw nsw i64 %627, 3
  %645 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %614, i64 %644
  %646 = load double, ptr %645, align 8, !tbaa !177
  %647 = fneg double %646
  %648 = tail call double @llvm.fmuladd.f64(double %647, double %646, double %643)
  %649 = add nuw nsw i64 %627, 4
  %650 = add i64 %629, 4
  %651 = icmp eq i64 %650, %625
  br i1 %651, label %652, label %626, !llvm.loop !195

652:                                              ; preds = %626, %620
  %653 = phi double [ undef, %620 ], [ %648, %626 ]
  %654 = phi i64 [ 1, %620 ], [ %649, %626 ]
  %655 = phi double [ %618, %620 ], [ %648, %626 ]
  %656 = icmp eq i64 %622, 0
  br i1 %656, label %668, label %657

657:                                              ; preds = %652, %657
  %658 = phi i64 [ %665, %657 ], [ %654, %652 ]
  %659 = phi double [ %664, %657 ], [ %655, %652 ]
  %660 = phi i64 [ %666, %657 ], [ 0, %652 ]
  %661 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %614, i64 %658
  %662 = load double, ptr %661, align 8, !tbaa !177
  %663 = fneg double %662
  %664 = tail call double @llvm.fmuladd.f64(double %663, double %662, double %659)
  %665 = add nuw nsw i64 %658, 1
  %666 = add i64 %660, 1
  %667 = icmp eq i64 %666, %622
  br i1 %667, label %668, label %657, !llvm.loop !196

668:                                              ; preds = %652, %657, %611
  %669 = phi double [ %618, %611 ], [ %653, %652 ], [ %664, %657 ]
  %670 = fcmp ogt double %669, 0.000000e+00
  br i1 %670, label %671, label %871

671:                                              ; preds = %668
  %672 = tail call double @sqrt(double noundef %669) #39
  %673 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %614, i64 %614
  store double %672, ptr %673, align 8, !tbaa !177
  %674 = add nuw nsw i64 %614, 1
  %675 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %676 = load i1, ptr @_ZL1D, align 4
  %677 = select i1 %676, i32 12, i32 0
  %678 = add nuw nsw i32 %677, %675
  %679 = sext i32 %678 to i64
  %680 = icmp slt i64 %614, %679
  br i1 %680, label %681, label %607

681:                                              ; preds = %671
  br i1 %619, label %682, label %730

682:                                              ; preds = %681
  %683 = and i64 %612, 1
  %684 = icmp eq i64 %612, 1
  %685 = and i64 %612, -2
  %686 = icmp eq i64 %683, 0
  br label %687

687:                                              ; preds = %682, %722
  %688 = phi i64 [ %727, %722 ], [ %615, %682 ]
  %689 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %614, i64 %688, i64 %491
  %690 = load double, ptr %689, align 8, !tbaa !177
  br i1 %684, label %711, label %691

691:                                              ; preds = %687, %691
  %692 = phi i64 [ %708, %691 ], [ 1, %687 ]
  %693 = phi double [ %707, %691 ], [ %690, %687 ]
  %694 = phi i64 [ %709, %691 ], [ 0, %687 ]
  %695 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %688, i64 %692
  %696 = load double, ptr %695, align 8, !tbaa !177
  %697 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %614, i64 %692
  %698 = load double, ptr %697, align 8, !tbaa !177
  %699 = fneg double %696
  %700 = tail call double @llvm.fmuladd.f64(double %699, double %698, double %693)
  %701 = add nuw nsw i64 %692, 1
  %702 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %688, i64 %701
  %703 = load double, ptr %702, align 8, !tbaa !177
  %704 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %614, i64 %701
  %705 = load double, ptr %704, align 8, !tbaa !177
  %706 = fneg double %703
  %707 = tail call double @llvm.fmuladd.f64(double %706, double %705, double %700)
  %708 = add nuw nsw i64 %692, 2
  %709 = add i64 %694, 2
  %710 = icmp eq i64 %709, %685
  br i1 %710, label %711, label %691, !llvm.loop !197

711:                                              ; preds = %691, %687
  %712 = phi double [ undef, %687 ], [ %707, %691 ]
  %713 = phi i64 [ 1, %687 ], [ %708, %691 ]
  %714 = phi double [ %690, %687 ], [ %707, %691 ]
  br i1 %686, label %722, label %715

715:                                              ; preds = %711
  %716 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %688, i64 %713
  %717 = load double, ptr %716, align 8, !tbaa !177
  %718 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %614, i64 %713
  %719 = load double, ptr %718, align 8, !tbaa !177
  %720 = fneg double %717
  %721 = tail call double @llvm.fmuladd.f64(double %720, double %719, double %714)
  br label %722

722:                                              ; preds = %711, %715
  %723 = phi double [ %712, %711 ], [ %721, %715 ]
  %724 = load double, ptr %673, align 8, !tbaa !177
  %725 = fdiv double %723, %724
  %726 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %688, i64 %614
  store double %725, ptr %726, align 8, !tbaa !177
  %727 = add nuw nsw i64 %688, 1
  %728 = trunc i64 %688 to i32
  %729 = icmp sgt i32 %678, %728
  br i1 %729, label %687, label %607, !llvm.loop !198

730:                                              ; preds = %681, %730
  %731 = phi i64 [ %737, %730 ], [ %615, %681 ]
  %732 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %614, i64 %731, i64 %491
  %733 = load double, ptr %732, align 8, !tbaa !177
  %734 = load double, ptr %673, align 8, !tbaa !177
  %735 = fdiv double %733, %734
  %736 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %731, i64 %614
  store double %735, ptr %736, align 8, !tbaa !177
  %737 = add nuw nsw i64 %731, 1
  %738 = trunc i64 %731 to i32
  %739 = icmp sgt i32 %678, %738
  br i1 %739, label %730, label %607, !llvm.loop !198

740:                                              ; preds = %607, %507, %506, %602
  %741 = phi i1 [ %604, %602 ], [ %502, %507 ], [ %502, %506 ], [ %676, %607 ]
  %742 = phi i32 [ %605, %602 ], [ %490, %507 ], [ %490, %506 ], [ %675, %607 ]
  %743 = phi i32 [ %603, %602 ], [ %504, %507 ], [ %504, %506 ], [ %678, %607 ]
  %744 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %491
  %745 = load i32, ptr %744, align 4, !tbaa !25
  %746 = add nuw nsw i32 %742, 1
  %747 = icmp sle i32 %745, %746
  %748 = icmp slt i32 %743, 1
  %749 = select i1 %747, i1 true, i1 %748
  br i1 %749, label %871, label %750

750:                                              ; preds = %740
  %751 = add nuw i32 %743, 1
  %752 = zext i32 %751 to i64
  br label %758

753:                                              ; preds = %806
  %754 = icmp sgt i32 %743, 0
  br i1 %754, label %755, label %871

755:                                              ; preds = %753
  %756 = zext i32 %743 to i64
  %757 = zext i32 %743 to i64
  br label %814

758:                                              ; preds = %750, %806
  %759 = phi i64 [ 0, %750 ], [ %813, %806 ]
  %760 = phi i64 [ 1, %750 ], [ %811, %806 ]
  %761 = getelementptr inbounds [49 x [2 x double]], ptr %2, i64 0, i64 %760, i64 %491
  %762 = load double, ptr %761, align 8, !tbaa !177
  %763 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %760
  %764 = getelementptr inbounds [2 x double], ptr %763, i64 0, i64 %491
  store double %762, ptr %764, align 8, !tbaa !177
  %765 = icmp ugt i64 %760, 1
  br i1 %765, label %766, label %806

766:                                              ; preds = %758
  %767 = and i64 %759, 1
  %768 = icmp eq i64 %759, 1
  br i1 %768, label %793, label %769

769:                                              ; preds = %766
  %770 = and i64 %759, -2
  br label %771

771:                                              ; preds = %771, %769
  %772 = phi i64 [ 1, %769 ], [ %790, %771 ]
  %773 = phi double [ %762, %769 ], [ %789, %771 ]
  %774 = phi i64 [ 0, %769 ], [ %791, %771 ]
  %775 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %760, i64 %772
  %776 = load double, ptr %775, align 8, !tbaa !177
  %777 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %772
  %778 = getelementptr inbounds [2 x double], ptr %777, i64 0, i64 %491
  %779 = load double, ptr %778, align 8, !tbaa !177
  %780 = fneg double %776
  %781 = tail call double @llvm.fmuladd.f64(double %780, double %779, double %773)
  store double %781, ptr %764, align 8, !tbaa !177
  %782 = add nuw nsw i64 %772, 1
  %783 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %760, i64 %782
  %784 = load double, ptr %783, align 8, !tbaa !177
  %785 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %782
  %786 = getelementptr inbounds [2 x double], ptr %785, i64 0, i64 %491
  %787 = load double, ptr %786, align 8, !tbaa !177
  %788 = fneg double %784
  %789 = tail call double @llvm.fmuladd.f64(double %788, double %787, double %781)
  store double %789, ptr %764, align 8, !tbaa !177
  %790 = add nuw nsw i64 %772, 2
  %791 = add i64 %774, 2
  %792 = icmp eq i64 %791, %770
  br i1 %792, label %793, label %771, !llvm.loop !199

793:                                              ; preds = %771, %766
  %794 = phi double [ undef, %766 ], [ %789, %771 ]
  %795 = phi i64 [ 1, %766 ], [ %790, %771 ]
  %796 = phi double [ %762, %766 ], [ %789, %771 ]
  %797 = icmp eq i64 %767, 0
  br i1 %797, label %806, label %798

798:                                              ; preds = %793
  %799 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %760, i64 %795
  %800 = load double, ptr %799, align 8, !tbaa !177
  %801 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %795
  %802 = getelementptr inbounds [2 x double], ptr %801, i64 0, i64 %491
  %803 = load double, ptr %802, align 8, !tbaa !177
  %804 = fneg double %800
  %805 = tail call double @llvm.fmuladd.f64(double %804, double %803, double %796)
  store double %805, ptr %764, align 8, !tbaa !177
  br label %806

806:                                              ; preds = %798, %793, %758
  %807 = phi double [ %762, %758 ], [ %794, %793 ], [ %805, %798 ]
  %808 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %760, i64 %760
  %809 = load double, ptr %808, align 8, !tbaa !177
  %810 = fdiv double %807, %809
  store double %810, ptr %764, align 8, !tbaa !177
  %811 = add nuw nsw i64 %760, 1
  %812 = icmp eq i64 %811, %752
  %813 = add i64 %759, 1
  br i1 %812, label %753, label %758, !llvm.loop !200

814:                                              ; preds = %755, %860
  %815 = phi i32 [ 0, %755 ], [ %870, %860 ]
  %816 = phi i64 [ %757, %755 ], [ %869, %860 ]
  %817 = phi i64 [ %756, %755 ], [ %867, %860 ]
  %818 = icmp slt i64 %816, %756
  %819 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %816
  %820 = getelementptr inbounds [2 x double], ptr %819, i64 0, i64 %491
  %821 = load double, ptr %820, align 8, !tbaa !177
  br i1 %818, label %822, label %860

822:                                              ; preds = %814
  %823 = and i32 %815, 1
  %824 = icmp eq i32 %823, 0
  br i1 %824, label %834, label %825

825:                                              ; preds = %822
  %826 = add nsw i64 %817, 1
  %827 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %826, i64 %816
  %828 = load double, ptr %827, align 8, !tbaa !177
  %829 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %826
  %830 = getelementptr inbounds [2 x double], ptr %829, i64 0, i64 %491
  %831 = load double, ptr %830, align 8, !tbaa !177
  %832 = fneg double %828
  %833 = tail call double @llvm.fmuladd.f64(double %832, double %831, double %821)
  store double %833, ptr %820, align 8, !tbaa !177
  br label %834

834:                                              ; preds = %825, %822
  %835 = phi double [ undef, %822 ], [ %833, %825 ]
  %836 = phi i64 [ %817, %822 ], [ %826, %825 ]
  %837 = phi double [ %821, %822 ], [ %833, %825 ]
  %838 = icmp eq i32 %815, 1
  br i1 %838, label %860, label %839

839:                                              ; preds = %834, %839
  %840 = phi i64 [ %850, %839 ], [ %836, %834 ]
  %841 = phi double [ %857, %839 ], [ %837, %834 ]
  %842 = add nsw i64 %840, 1
  %843 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %842, i64 %816
  %844 = load double, ptr %843, align 8, !tbaa !177
  %845 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %842
  %846 = getelementptr inbounds [2 x double], ptr %845, i64 0, i64 %491
  %847 = load double, ptr %846, align 8, !tbaa !177
  %848 = fneg double %844
  %849 = tail call double @llvm.fmuladd.f64(double %848, double %847, double %841)
  store double %849, ptr %820, align 8, !tbaa !177
  %850 = add nsw i64 %840, 2
  %851 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %850, i64 %816
  %852 = load double, ptr %851, align 8, !tbaa !177
  %853 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %850
  %854 = getelementptr inbounds [2 x double], ptr %853, i64 0, i64 %491
  %855 = load double, ptr %854, align 8, !tbaa !177
  %856 = fneg double %852
  %857 = tail call double @llvm.fmuladd.f64(double %856, double %855, double %849)
  store double %857, ptr %820, align 8, !tbaa !177
  %858 = trunc i64 %850 to i32
  %859 = icmp eq i32 %743, %858
  br i1 %859, label %860, label %839, !llvm.loop !201

860:                                              ; preds = %834, %839, %814
  %861 = phi double [ %821, %814 ], [ %835, %834 ], [ %857, %839 ]
  %862 = getelementptr inbounds [49 x [49 x double]], ptr %3, i64 0, i64 %816, i64 %816
  %863 = load double, ptr %862, align 8, !tbaa !177
  %864 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %816
  %865 = getelementptr inbounds [2 x double], ptr %864, i64 0, i64 %491
  %866 = fdiv double %861, %863
  store double %866, ptr %865, align 8, !tbaa !177
  %867 = add nsw i64 %817, -1
  %868 = icmp sgt i64 %816, 1
  %869 = add nsw i64 %816, -1
  %870 = add i32 %815, 1
  br i1 %868, label %814, label %871, !llvm.loop !202

871:                                              ; preds = %668, %860, %753, %740
  %872 = phi i1 [ %741, %753 ], [ %741, %740 ], [ %741, %860 ], [ %613, %668 ]
  %873 = phi i32 [ %742, %753 ], [ %742, %740 ], [ %742, %860 ], [ %616, %668 ]
  store i32 0, ptr %492, align 4, !tbaa !25
  br label %874

874:                                              ; preds = %497, %871
  %875 = phi i1 [ %872, %871 ], [ %498, %497 ]
  %876 = phi i32 [ %873, %871 ], [ %490, %497 ]
  %877 = select i1 %875, i32 12, i32 0
  %878 = add nuw nsw i32 %877, %876
  %879 = icmp slt i32 %878, 1
  br i1 %879, label %897, label %880

880:                                              ; preds = %874, %880
  %881 = phi i64 [ %890, %880 ], [ 1, %874 ]
  %882 = phi double [ %889, %880 ], [ 0.000000e+00, %874 ]
  %883 = getelementptr inbounds [49 x [49 x [2 x double]]], ptr %2, i64 0, i64 %881
  %884 = getelementptr inbounds [2 x double], ptr %883, i64 0, i64 %491
  %885 = load double, ptr %884, align 8, !tbaa !177
  %886 = trunc i64 %881 to i32
  %887 = tail call noundef i32 @_Z1Xii(i32 noundef %886, i32 noundef 0)
  %888 = sitofp i32 %887 to double
  %889 = tail call double @llvm.fmuladd.f64(double %885, double %888, double %882)
  %890 = add nuw nsw i64 %881, 1
  %891 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %892 = load i1, ptr @_ZL1D, align 4
  %893 = select i1 %892, i32 12, i32 0
  %894 = add nuw nsw i32 %893, %891
  %895 = sext i32 %894 to i64
  %896 = icmp slt i64 %881, %895
  br i1 %896, label %880, label %897, !llvm.loop !203

897:                                              ; preds = %880, %874
  %898 = phi double [ 0.000000e+00, %874 ], [ %889, %880 ]
  %899 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 2, i64 %491
  %900 = load i32, ptr %899, align 4, !tbaa !25
  %901 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 3, i64 %491
  store i32 %900, ptr %901, align 4, !tbaa !25
  %902 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 1, i64 %491
  %903 = load i32, ptr %902, align 4, !tbaa !25
  store i32 %903, ptr %899, align 4, !tbaa !25
  %904 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 %491
  %905 = load i32, ptr %904, align 4, !tbaa !25
  store i32 %905, ptr %902, align 4, !tbaa !25
  %906 = tail call double @llvm.floor.f64(double %898)
  %907 = fptosi double %906 to i32
  store i32 %907, ptr %904, align 4, !tbaa !25
  %908 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE7counter, i64 0, i64 %491
  %909 = load i32, ptr %908, align 4, !tbaa !25
  %910 = add nsw i32 %909, 1
  store i32 %910, ptr %908, align 4, !tbaa !25
  %911 = load i32, ptr @pos, align 4, !tbaa !25
  %912 = add nsw i32 %911, -1
  %913 = load i32, ptr @buf, align 8, !tbaa !20
  %914 = add nsw i32 %913, -1
  %915 = and i32 %914, %912
  %916 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %917 = sext i32 %915 to i64
  %918 = getelementptr inbounds i8, ptr %916, i64 %917
  %919 = load i8, ptr %918, align 1, !tbaa !9
  %920 = zext i8 %919 to i32
  %921 = mul i32 %920, 30005491
  %922 = mul i32 %366, 50004239
  %923 = add i32 %922, 19995673
  %924 = add i32 %923, %921
  %925 = lshr i32 %924, 9
  %926 = lshr i32 %920, 3
  %927 = lshr i32 %366, 4
  %928 = xor i32 %926, %925
  %929 = xor i32 %928, %927
  %930 = xor i32 %929, %924
  %931 = xor i32 %930, 67108864
  %932 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %933 = add nsw i32 %932, 1
  store i32 %933, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %934 = mul i32 %931, 987654323
  %935 = add i32 %934, %932
  %936 = tail call i32 @llvm.fshl.i32(i32 %935, i32 %935, i32 16)
  %937 = mul i32 %936, 123456791
  %938 = add i32 %937, %932
  %939 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %940 = sext i32 %932 to i64
  %941 = getelementptr inbounds i32, ptr %939, i64 %940
  store i32 %938, ptr %941, align 4, !tbaa !25
  %942 = load i32, ptr @pos, align 4, !tbaa !25
  %943 = add nsw i32 %942, -1
  %944 = load i32, ptr @buf, align 8, !tbaa !20
  %945 = add nsw i32 %944, -1
  %946 = and i32 %945, %943
  %947 = sext i32 %946 to i64
  %948 = getelementptr inbounds i8, ptr %916, i64 %947
  %949 = load i8, ptr %948, align 1, !tbaa !9
  %950 = zext i8 %949 to i32
  %951 = add nsw i32 %942, -2
  %952 = and i32 %945, %951
  %953 = sext i32 %952 to i64
  %954 = getelementptr inbounds i8, ptr %916, i64 %953
  %955 = load i8, ptr %954, align 1, !tbaa !9
  %956 = zext i8 %955 to i32
  %957 = mul i32 %950, 30005491
  %958 = mul i32 %956, 50004239
  %959 = mul i32 %366, 70004807
  %960 = add i32 %959, 290003459
  %961 = add i32 %960, %957
  %962 = add i32 %961, %958
  %963 = lshr i32 %962, 9
  %964 = lshr i32 %950, 3
  %965 = lshr i32 %956, 4
  %966 = lshr i32 %366, 5
  %967 = xor i32 %964, %965
  %968 = xor i32 %967, %963
  %969 = xor i32 %968, %966
  %970 = xor i32 %969, %962
  %971 = xor i32 %970, 67108863
  %972 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %973 = add nsw i32 %972, 1
  store i32 %973, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %974 = mul i32 %971, 987654323
  %975 = add i32 %974, %972
  %976 = tail call i32 @llvm.fshl.i32(i32 %975, i32 %975, i32 16)
  %977 = mul i32 %976, 123456791
  %978 = add i32 %977, %972
  %979 = sext i32 %972 to i64
  %980 = getelementptr inbounds i32, ptr %939, i64 %979
  store i32 %978, ptr %980, align 4, !tbaa !25
  %981 = load i32, ptr @pos, align 4, !tbaa !25
  %982 = add nsw i32 %981, -1
  %983 = load i32, ptr @buf, align 8, !tbaa !20
  %984 = add nsw i32 %983, -1
  %985 = and i32 %984, %982
  %986 = sext i32 %985 to i64
  %987 = getelementptr inbounds i8, ptr %916, i64 %986
  %988 = load i8, ptr %987, align 1, !tbaa !9
  %989 = zext i8 %988 to i32
  %990 = add nsw i32 %981, -2
  %991 = and i32 %984, %990
  %992 = sext i32 %991 to i64
  %993 = getelementptr inbounds i8, ptr %916, i64 %992
  %994 = load i8, ptr %993, align 1, !tbaa !9
  %995 = lshr i8 %994, 3
  %996 = zext i8 %995 to i32
  %997 = add nsw i32 %981, -3
  %998 = and i32 %984, %997
  %999 = sext i32 %998 to i64
  %1000 = getelementptr inbounds i8, ptr %916, i64 %999
  %1001 = load i8, ptr %1000, align 1, !tbaa !9
  %1002 = zext i8 %1001 to i32
  %1003 = mul i32 %989, 30005491
  %1004 = mul nuw nsw i32 %996, 50004239
  %1005 = mul i32 %1002, 70004807
  %1006 = mul i32 %366, 110002499
  %1007 = add i32 %1006, 600008937
  %1008 = add i32 %1007, %1003
  %1009 = add i32 %1008, %1004
  %1010 = add i32 %1009, %1005
  %1011 = lshr i32 %1010, 9
  %1012 = lshr i32 %989, 3
  %1013 = lshr i32 %996, 4
  %1014 = lshr i32 %1002, 5
  %1015 = lshr i32 %366, 6
  %1016 = xor i32 %1012, %1015
  %1017 = xor i32 %1016, %1013
  %1018 = xor i32 %1017, %1014
  %1019 = xor i32 %1018, %1011
  %1020 = xor i32 %1019, %1010
  %1021 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1022 = add nsw i32 %1021, 1
  store i32 %1022, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1023 = mul i32 %1020, 987654323
  %1024 = add i32 %1023, %1021
  %1025 = tail call i32 @llvm.fshl.i32(i32 %1024, i32 %1024, i32 16)
  %1026 = mul i32 %1025, 123456791
  %1027 = add i32 %1026, %1021
  %1028 = sext i32 %1021 to i64
  %1029 = getelementptr inbounds i32, ptr %939, i64 %1028
  store i32 %1027, ptr %1029, align 4, !tbaa !25
  %1030 = load i32, ptr @pos, align 4, !tbaa !25
  %1031 = add i32 %1030, -4
  %1032 = load i32, ptr @buf, align 8, !tbaa !20
  %1033 = add nsw i32 %1032, -1
  %1034 = and i32 %1033, %1031
  %1035 = sext i32 %1034 to i64
  %1036 = getelementptr inbounds i8, ptr %916, i64 %1035
  %1037 = load i8, ptr %1036, align 1, !tbaa !9
  %1038 = add i32 %1030, -2
  %1039 = and i32 %1033, %1038
  %1040 = sext i32 %1039 to i64
  %1041 = getelementptr inbounds i8, ptr %916, i64 %1040
  %1042 = load i8, ptr %1041, align 1, !tbaa !9
  %1043 = add i8 %1042, %1037
  %1044 = add i32 %1030, -6
  %1045 = and i32 %1033, %1044
  %1046 = sext i32 %1045 to i64
  %1047 = getelementptr inbounds i8, ptr %916, i64 %1046
  %1048 = load i8, ptr %1047, align 1, !tbaa !9
  %1049 = sub i8 %1043, %1048
  %1050 = zext i8 %1049 to i32
  %1051 = mul i32 %1050, 30005491
  %1052 = add i32 %922, 620004610
  %1053 = add i32 %1052, %1051
  %1054 = lshr i32 %1053, 9
  %1055 = lshr i32 %1050, 3
  %1056 = xor i32 %1055, %1054
  %1057 = xor i32 %1056, %927
  %1058 = xor i32 %1057, %1053
  %1059 = xor i32 %1058, 67108865
  %1060 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1061 = add nsw i32 %1060, 1
  store i32 %1061, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1062 = mul i32 %1059, 987654323
  %1063 = add i32 %1062, %1060
  %1064 = tail call i32 @llvm.fshl.i32(i32 %1063, i32 %1063, i32 16)
  %1065 = mul i32 %1064, 123456791
  %1066 = add i32 %1065, %1060
  %1067 = sext i32 %1060 to i64
  %1068 = getelementptr inbounds i32, ptr %939, i64 %1067
  store i32 %1066, ptr %1068, align 4, !tbaa !25
  %1069 = and i32 %907, 255
  %1070 = mul i32 %1069, 30005491
  %1071 = add i32 %922, 820007589
  %1072 = add i32 %1071, %1070
  %1073 = lshr i32 %1072, 9
  %1074 = lshr i32 %1069, 3
  %1075 = xor i32 %1074, %1073
  %1076 = xor i32 %1075, %927
  %1077 = xor i32 %1076, %1072
  %1078 = xor i32 %1077, 67108865
  %1079 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1080 = add nsw i32 %1079, 1
  store i32 %1080, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1081 = mul i32 %1078, 987654323
  %1082 = add i32 %1079, %1081
  %1083 = tail call i32 @llvm.fshl.i32(i32 %1082, i32 %1082, i32 16)
  %1084 = mul i32 %1083, 123456791
  %1085 = add i32 %1084, %1079
  %1086 = sext i32 %1079 to i64
  %1087 = getelementptr inbounds i32, ptr %939, i64 %1086
  store i32 %1085, ptr %1087, align 4, !tbaa !25
  %1088 = load i32, ptr @_ZZ8wavModelR5MixerE1w, align 4, !tbaa !25
  %1089 = load i32, ptr @pos, align 4, !tbaa !25
  %1090 = sub i32 %1089, %1088
  %1091 = load i32, ptr @buf, align 8, !tbaa !20
  %1092 = add nsw i32 %1091, -1
  %1093 = and i32 %1092, %1090
  %1094 = sext i32 %1093 to i64
  %1095 = getelementptr inbounds i8, ptr %916, i64 %1094
  %1096 = load i8, ptr %1095, align 1, !tbaa !9
  %1097 = sub i32 %907, %905
  %1098 = trunc i32 %1097 to i8
  %1099 = add i8 %1096, %1098
  %1100 = zext i8 %1099 to i32
  %1101 = mul i32 %1100, 30005491
  %1102 = add i32 %922, 1020010568
  %1103 = add i32 %1102, %1101
  %1104 = lshr i32 %1103, 9
  %1105 = lshr i32 %1100, 3
  %1106 = xor i32 %1105, %1104
  %1107 = xor i32 %1106, %927
  %1108 = xor i32 %1107, %1103
  %1109 = xor i32 %1108, 67108865
  %1110 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1111 = add nsw i32 %1110, 1
  store i32 %1111, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1112 = mul i32 %1109, 987654323
  %1113 = add i32 %1112, %1110
  %1114 = tail call i32 @llvm.fshl.i32(i32 %1113, i32 %1113, i32 16)
  %1115 = mul i32 %1114, 123456791
  %1116 = add i32 %1115, %1110
  %1117 = sext i32 %1110 to i64
  %1118 = getelementptr inbounds i32, ptr %939, i64 %1117
  store i32 %1116, ptr %1118, align 4, !tbaa !25
  %1119 = load i32, ptr @pos, align 4, !tbaa !25
  %1120 = sub i32 %1119, %1088
  %1121 = load i32, ptr @buf, align 8, !tbaa !20
  %1122 = add nsw i32 %1121, -1
  %1123 = and i32 %1122, %1120
  %1124 = sext i32 %1123 to i64
  %1125 = getelementptr inbounds i8, ptr %916, i64 %1124
  %1126 = load i8, ptr %1125, align 1, !tbaa !9
  %1127 = zext i8 %1126 to i32
  %1128 = add i32 %1120, 1
  %1129 = and i32 %1122, %1128
  %1130 = sext i32 %1129 to i64
  %1131 = getelementptr inbounds i8, ptr %916, i64 %1130
  %1132 = load i8, ptr %1131, align 1, !tbaa !9
  %1133 = zext i8 %1132 to i32
  %1134 = shl nuw nsw i32 %1133, 8
  %1135 = or i32 %1134, %1127
  %1136 = shl nsw i32 %1088, 1
  %1137 = sub i32 %1119, %1136
  %1138 = and i32 %1122, %1137
  %1139 = sext i32 %1138 to i64
  %1140 = getelementptr inbounds i8, ptr %916, i64 %1139
  %1141 = load i8, ptr %1140, align 1, !tbaa !9
  %1142 = zext i8 %1141 to i32
  %1143 = add i32 %1137, 1
  %1144 = and i32 %1122, %1143
  %1145 = sext i32 %1144 to i64
  %1146 = getelementptr inbounds i8, ptr %916, i64 %1145
  %1147 = load i8, ptr %1146, align 1, !tbaa !9
  %1148 = zext i8 %1147 to i32
  %1149 = shl nuw nsw i32 %1148, 8
  %1150 = or i32 %1149, %1142
  %1151 = add i32 %905, %903
  %1152 = sub i32 %1135, %1151
  %1153 = add i32 %1152, %1150
  %1154 = lshr i32 %1153, 1
  %1155 = and i32 %1154, 255
  %1156 = mul i32 %1155, 50004239
  %1157 = add i32 %959, 1290018354
  %1158 = add i32 %1157, %1070
  %1159 = add i32 %1158, %1156
  %1160 = lshr i32 %1159, 9
  %1161 = lshr i32 %1155, 4
  %1162 = xor i32 %1161, %1160
  %1163 = xor i32 %1162, %1074
  %1164 = xor i32 %1163, %966
  %1165 = xor i32 %1164, %1159
  %1166 = xor i32 %1165, 67108862
  %1167 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1168 = add nsw i32 %1167, 1
  store i32 %1168, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1169 = mul i32 %1166, 987654323
  %1170 = add i32 %1169, %1167
  %1171 = tail call i32 @llvm.fshl.i32(i32 %1170, i32 %1170, i32 16)
  %1172 = mul i32 %1171, 123456791
  %1173 = add i32 %1172, %1167
  %1174 = sext i32 %1167 to i64
  %1175 = getelementptr inbounds i32, ptr %939, i64 %1174
  store i32 %1173, ptr %1175, align 4, !tbaa !25
  %1176 = load i32, ptr @pos, align 4, !tbaa !25
  %1177 = sub i32 %1176, %1088
  %1178 = load i32, ptr @buf, align 8, !tbaa !20
  %1179 = add nsw i32 %1178, -1
  %1180 = and i32 %1179, %1177
  %1181 = sext i32 %1180 to i64
  %1182 = getelementptr inbounds i8, ptr %916, i64 %1181
  %1183 = load i8, ptr %1182, align 1, !tbaa !9
  %1184 = zext i8 %1183 to i32
  %1185 = sub i32 %1176, %1136
  %1186 = and i32 %1179, %1185
  %1187 = sext i32 %1186 to i64
  %1188 = getelementptr inbounds i8, ptr %916, i64 %1187
  %1189 = load i8, ptr %1188, align 1, !tbaa !9
  %1190 = zext i8 %1189 to i32
  %1191 = sub i32 %1184, %905
  %1192 = shl i32 %1191, 1
  %1193 = add i32 %903, %907
  %1194 = sub i32 %1193, %1190
  %1195 = add i32 %1194, %1192
  %1196 = and i32 %1195, 255
  %1197 = mul i32 %1196, 30005491
  %1198 = add i32 %922, 1420016526
  %1199 = add i32 %1198, %1197
  %1200 = lshr i32 %1199, 9
  %1201 = lshr i32 %1196, 3
  %1202 = xor i32 %1201, %1200
  %1203 = xor i32 %1202, %927
  %1204 = xor i32 %1203, %1199
  %1205 = xor i32 %1204, 67108866
  %1206 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1207 = add nsw i32 %1206, 1
  store i32 %1207, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1208 = mul i32 %1205, 987654323
  %1209 = add i32 %1208, %1206
  %1210 = tail call i32 @llvm.fshl.i32(i32 %1209, i32 %1209, i32 16)
  %1211 = mul i32 %1210, 123456791
  %1212 = add i32 %1211, %1206
  %1213 = sext i32 %1206 to i64
  %1214 = getelementptr inbounds i32, ptr %939, i64 %1213
  store i32 %1212, ptr %1214, align 4, !tbaa !25
  %1215 = load i32, ptr @pos, align 4, !tbaa !25
  %1216 = sub i32 %1215, %1088
  %1217 = load i32, ptr @buf, align 8, !tbaa !20
  %1218 = add nsw i32 %1217, -1
  %1219 = and i32 %1218, %1216
  %1220 = sext i32 %1219 to i64
  %1221 = getelementptr inbounds i8, ptr %916, i64 %1220
  %1222 = load i8, ptr %1221, align 1, !tbaa !9
  %1223 = zext i8 %1222 to i32
  %1224 = add i32 %1216, 1
  %1225 = and i32 %1218, %1224
  %1226 = sext i32 %1225 to i64
  %1227 = getelementptr inbounds i8, ptr %916, i64 %1226
  %1228 = load i8, ptr %1227, align 1, !tbaa !9
  %1229 = zext i8 %1228 to i32
  %1230 = shl nuw nsw i32 %1229, 8
  %1231 = and i32 %1230, 256
  %1232 = or i32 %1231, %1223
  %1233 = shl nuw nsw i32 %1232, 8
  %1234 = load i32, ptr @_ZZ8wavModelR5MixerE4scm1, align 8, !tbaa !74
  %1235 = add i32 %1234, 130816
  %1236 = and i32 %1233, %1235
  store i32 %1236, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %1237 = load i8, ptr %1221, align 1, !tbaa !9
  %1238 = zext i8 %1237 to i16
  %1239 = load i8, ptr %1227, align 1, !tbaa !9
  %1240 = zext i8 %1239 to i16
  %1241 = shl nuw i16 %1240, 8
  %1242 = or i16 %1241, %1238
  %1243 = sext i16 %1242 to i32
  %1244 = sub i32 %1215, %1136
  %1245 = and i32 %1218, %1244
  %1246 = sext i32 %1245 to i64
  %1247 = getelementptr inbounds i8, ptr %916, i64 %1246
  %1248 = load i8, ptr %1247, align 1, !tbaa !9
  %1249 = zext i8 %1248 to i32
  %1250 = add i32 %1244, 1
  %1251 = and i32 %1218, %1250
  %1252 = sext i32 %1251 to i64
  %1253 = getelementptr inbounds i8, ptr %916, i64 %1252
  %1254 = load i8, ptr %1253, align 1, !tbaa !9
  %1255 = zext i8 %1254 to i32
  %1256 = shl nsw i32 %1243, 9
  %1257 = shl nuw nsw i32 %1255, 16
  %1258 = shl nuw nsw i32 %1249, 8
  %1259 = or i32 %1257, %1258
  %1260 = sub nsw i32 %1256, %1259
  %1261 = load i32, ptr @_ZZ8wavModelR5MixerE4scm2, align 8, !tbaa !74
  %1262 = add i32 %1261, 130816
  %1263 = and i32 %1262, 130816
  %1264 = and i32 %1263, %1260
  store i32 %1264, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %1265 = load i8, ptr %1221, align 1, !tbaa !9
  %1266 = zext i8 %1265 to i32
  %1267 = load i8, ptr %1227, align 1, !tbaa !9
  %1268 = zext i8 %1267 to i32
  %1269 = shl nuw nsw i32 %1268, 8
  %1270 = or i32 %1269, %1266
  %1271 = mul nuw nsw i32 %1270, 3
  %1272 = load i8, ptr %1247, align 1, !tbaa !9
  %1273 = zext i8 %1272 to i32
  %1274 = load i8, ptr %1253, align 1, !tbaa !9
  %1275 = zext i8 %1274 to i32
  %1276 = shl nuw nsw i32 %1275, 8
  %1277 = or i32 %1276, %1273
  %1278 = mul nuw nsw i32 %1277, 509
  %1279 = add nuw nsw i32 %1278, %1271
  %1280 = mul i32 %1088, -3
  %1281 = add i32 %1215, %1280
  %1282 = and i32 %1218, %1281
  %1283 = sext i32 %1282 to i64
  %1284 = getelementptr inbounds i8, ptr %916, i64 %1283
  %1285 = load i8, ptr %1284, align 1, !tbaa !9
  %1286 = zext i8 %1285 to i32
  %1287 = add i32 %1281, 1
  %1288 = and i32 %1218, %1287
  %1289 = sext i32 %1288 to i64
  %1290 = getelementptr inbounds i8, ptr %916, i64 %1289
  %1291 = load i8, ptr %1290, align 1, !tbaa !9
  %1292 = zext i8 %1291 to i32
  %1293 = shl nuw nsw i32 %1292, 8
  %1294 = or i32 %1293, %1286
  %1295 = add nuw nsw i32 %1279, %1294
  %1296 = shl i32 %1295, 8
  %1297 = load i32, ptr @_ZZ8wavModelR5MixerE4scm3, align 8, !tbaa !74
  %1298 = add i32 %1297, 130816
  %1299 = and i32 %1298, 130816
  %1300 = and i32 %1299, %1296
  store i32 %1300, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 1), align 8, !tbaa !112
  br label %2432

1301:                                             ; preds = %359
  %1302 = add nsw i32 %352, -1
  %1303 = load i32, ptr @buf, align 8, !tbaa !20
  %1304 = add nsw i32 %1303, -1
  %1305 = and i32 %1304, %1302
  %1306 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %1307 = sext i32 %1305 to i64
  %1308 = getelementptr inbounds i8, ptr %1306, i64 %1307
  %1309 = load i8, ptr %1308, align 1, !tbaa !9
  %1310 = zext i8 %1309 to i32
  %1311 = mul i32 %1310, 30005491
  %1312 = mul i32 %366, 50004239
  %1313 = add i32 %1312, 19995673
  %1314 = add i32 %1313, %1311
  %1315 = lshr i32 %1314, 9
  %1316 = lshr i32 %1310, 3
  %1317 = lshr i32 %366, 4
  %1318 = xor i32 %1316, %1315
  %1319 = xor i32 %1318, %1317
  %1320 = xor i32 %1319, %1314
  %1321 = xor i32 %1320, 67108864
  %1322 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1323 = add nsw i32 %1322, 1
  store i32 %1323, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1324 = mul i32 %1321, 987654323
  %1325 = add i32 %1324, %1322
  %1326 = tail call i32 @llvm.fshl.i32(i32 %1325, i32 %1325, i32 16)
  %1327 = mul i32 %1326, 123456791
  %1328 = add i32 %1327, %1322
  %1329 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %1330 = sext i32 %1322 to i64
  %1331 = getelementptr inbounds i32, ptr %1329, i64 %1330
  store i32 %1328, ptr %1331, align 4, !tbaa !25
  %1332 = load i32, ptr @pos, align 4, !tbaa !25
  %1333 = add nsw i32 %1332, -1
  %1334 = load i32, ptr @buf, align 8, !tbaa !20
  %1335 = add nsw i32 %1334, -1
  %1336 = and i32 %1335, %1333
  %1337 = sext i32 %1336 to i64
  %1338 = getelementptr inbounds i8, ptr %1306, i64 %1337
  %1339 = load i8, ptr %1338, align 1, !tbaa !9
  %1340 = lshr i8 %1339, 7
  %1341 = zext i8 %1340 to i32
  %1342 = add nsw i32 %1332, -2
  %1343 = and i32 %1335, %1342
  %1344 = sext i32 %1343 to i64
  %1345 = getelementptr inbounds i8, ptr %1306, i64 %1344
  %1346 = load i8, ptr %1345, align 1, !tbaa !9
  %1347 = zext i8 %1346 to i32
  %1348 = add nsw i32 %1332, -3
  %1349 = and i32 %1335, %1348
  %1350 = sext i32 %1349 to i64
  %1351 = getelementptr inbounds i8, ptr %1306, i64 %1350
  %1352 = load i8, ptr %1351, align 1, !tbaa !9
  %1353 = lshr i8 %1352, 7
  %1354 = zext i8 %1353 to i32
  %1355 = mul nuw nsw i32 %1341, 30005491
  %1356 = mul i32 %1347, 50004239
  %1357 = mul nuw nsw i32 %1354, 70004807
  %1358 = mul i32 %366, 110002499
  %1359 = add i32 %1358, 400005958
  %1360 = add i32 %1359, %1355
  %1361 = add i32 %1360, %1356
  %1362 = add i32 %1361, %1357
  %1363 = lshr i32 %1362, 9
  %1364 = lshr i32 %1347, 4
  %1365 = lshr i32 %366, 6
  %1366 = xor i32 %1364, %1363
  %1367 = xor i32 %1366, %1365
  %1368 = xor i32 %1367, %1362
  %1369 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1370 = add nsw i32 %1369, 1
  store i32 %1370, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1371 = mul i32 %1368, 987654323
  %1372 = add i32 %1371, %1369
  %1373 = tail call i32 @llvm.fshl.i32(i32 %1372, i32 %1372, i32 16)
  %1374 = mul i32 %1373, 123456791
  %1375 = add i32 %1374, %1369
  %1376 = sext i32 %1369 to i64
  %1377 = getelementptr inbounds i32, ptr %1329, i64 %1376
  store i32 %1375, ptr %1377, align 4, !tbaa !25
  %1378 = mul i32 %365, -3
  %1379 = shl nsw i32 %365, 2
  %1380 = load i32, ptr @pos, align 4, !tbaa !25
  %1381 = sub nsw i32 %1380, %365
  %1382 = load i32, ptr @buf, align 8, !tbaa !20
  %1383 = add nsw i32 %1382, -1
  %1384 = and i32 %1383, %1381
  %1385 = sext i32 %1384 to i64
  %1386 = getelementptr inbounds i8, ptr %1306, i64 %1385
  %1387 = load i8, ptr %1386, align 1, !tbaa !9
  %1388 = lshr i8 %1387, 1
  %1389 = zext i8 %1388 to i32
  %1390 = icmp eq i32 %365, 0
  br i1 %1390, label %1420, label %1391

1391:                                             ; preds = %1301
  %1392 = shl nsw i32 %365, 1
  %1393 = sub nsw i32 %1380, %1392
  %1394 = and i32 %1383, %1393
  %1395 = sext i32 %1394 to i64
  %1396 = getelementptr inbounds i8, ptr %1306, i64 %1395
  %1397 = load i8, ptr %1396, align 1, !tbaa !9
  %1398 = lshr i8 %1397, 1
  %1399 = zext i8 %1398 to i32
  %1400 = shl nuw nsw i32 %1389, 14
  %1401 = shl nuw nsw i32 %1399, 7
  %1402 = or i32 %1400, %1401
  %1403 = add i32 %1380, %1378
  %1404 = and i32 %1383, %1403
  %1405 = sext i32 %1404 to i64
  %1406 = getelementptr inbounds i8, ptr %1306, i64 %1405
  %1407 = load i8, ptr %1406, align 1, !tbaa !9
  %1408 = lshr i8 %1407, 1
  %1409 = zext i8 %1408 to i32
  %1410 = or i32 %1402, %1409
  %1411 = shl nuw nsw i32 %1410, 7
  %1412 = sub nsw i32 %1380, %1379
  %1413 = and i32 %1383, %1412
  %1414 = sext i32 %1413 to i64
  %1415 = getelementptr inbounds i8, ptr %1306, i64 %1414
  %1416 = load i8, ptr %1415, align 1, !tbaa !9
  %1417 = lshr i8 %1416, 1
  %1418 = zext i8 %1417 to i32
  %1419 = or i32 %1411, %1418
  br label %1420

1420:                                             ; preds = %1301, %1391
  %1421 = phi i32 [ %1419, %1391 ], [ %1389, %1301 ]
  %1422 = mul i32 %1421, 30005491
  %1423 = add i32 %1312, 420001631
  %1424 = add i32 %1423, %1422
  %1425 = lshr i32 %1424, 9
  %1426 = lshr i32 %1421, 3
  %1427 = xor i32 %1426, %1425
  %1428 = xor i32 %1427, %1317
  %1429 = xor i32 %1428, %1424
  %1430 = xor i32 %1429, 67108864
  %1431 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1432 = add nsw i32 %1431, 1
  store i32 %1432, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1433 = mul i32 %1430, 987654323
  %1434 = add i32 %1433, %1431
  %1435 = tail call i32 @llvm.fshl.i32(i32 %1434, i32 %1434, i32 16)
  %1436 = mul i32 %1435, 123456791
  %1437 = add i32 %1436, %1431
  %1438 = sext i32 %1431 to i64
  %1439 = getelementptr inbounds i32, ptr %1329, i64 %1438
  store i32 %1437, ptr %1439, align 4, !tbaa !25
  %1440 = load i32, ptr @pos, align 4, !tbaa !25
  %1441 = sub nsw i32 %1440, %365
  %1442 = load i32, ptr @buf, align 8, !tbaa !20
  %1443 = add nsw i32 %1442, -1
  %1444 = and i32 %1443, %1441
  %1445 = sext i32 %1444 to i64
  %1446 = getelementptr inbounds i8, ptr %1306, i64 %1445
  %1447 = load i8, ptr %1446, align 1, !tbaa !9
  %1448 = lshr i8 %1447, 3
  %1449 = zext i8 %1448 to i32
  br i1 %1390, label %1479, label %1450

1450:                                             ; preds = %1420
  %1451 = shl nsw i32 %365, 1
  %1452 = sub nsw i32 %1440, %1451
  %1453 = and i32 %1443, %1452
  %1454 = sext i32 %1453 to i64
  %1455 = getelementptr inbounds i8, ptr %1306, i64 %1454
  %1456 = load i8, ptr %1455, align 1, !tbaa !9
  %1457 = lshr i8 %1456, 3
  %1458 = zext i8 %1457 to i32
  %1459 = shl nuw nsw i32 %1449, 10
  %1460 = shl nuw nsw i32 %1458, 5
  %1461 = or i32 %1459, %1460
  %1462 = add i32 %1440, %1378
  %1463 = and i32 %1443, %1462
  %1464 = sext i32 %1463 to i64
  %1465 = getelementptr inbounds i8, ptr %1306, i64 %1464
  %1466 = load i8, ptr %1465, align 1, !tbaa !9
  %1467 = lshr i8 %1466, 3
  %1468 = zext i8 %1467 to i32
  %1469 = or i32 %1461, %1468
  %1470 = shl nuw nsw i32 %1469, 5
  %1471 = sub nsw i32 %1440, %1379
  %1472 = and i32 %1443, %1471
  %1473 = sext i32 %1472 to i64
  %1474 = getelementptr inbounds i8, ptr %1306, i64 %1473
  %1475 = load i8, ptr %1474, align 1, !tbaa !9
  %1476 = lshr i8 %1475, 3
  %1477 = zext i8 %1476 to i32
  %1478 = or i32 %1470, %1477
  br label %1479

1479:                                             ; preds = %1420, %1450
  %1480 = phi i32 [ %1478, %1450 ], [ %1449, %1420 ]
  %1481 = mul i32 %365, -5
  %1482 = add i32 %1440, %1481
  %1483 = and i32 %1443, %1482
  %1484 = sext i32 %1483 to i64
  %1485 = getelementptr inbounds i8, ptr %1306, i64 %1484
  %1486 = load i8, ptr %1485, align 1, !tbaa !9
  %1487 = lshr i8 %1486, 3
  %1488 = zext i8 %1487 to i32
  br i1 %1390, label %1500, label %1489

1489:                                             ; preds = %1479
  %1490 = mul i32 %365, -6
  %1491 = shl nuw nsw i32 %1488, 5
  %1492 = add i32 %1440, %1490
  %1493 = and i32 %1443, %1492
  %1494 = sext i32 %1493 to i64
  %1495 = getelementptr inbounds i8, ptr %1306, i64 %1494
  %1496 = load i8, ptr %1495, align 1, !tbaa !9
  %1497 = lshr i8 %1496, 3
  %1498 = zext i8 %1497 to i32
  %1499 = or i32 %1491, %1498
  br label %1500

1500:                                             ; preds = %1479, %1489
  %1501 = phi i32 [ %1499, %1489 ], [ %1488, %1479 ]
  %1502 = mul i32 %1480, 30005491
  %1503 = mul i32 %1501, 50004239
  %1504 = mul i32 %366, 70004807
  %1505 = add i32 %1504, 690009417
  %1506 = add i32 %1505, %1502
  %1507 = add i32 %1506, %1503
  %1508 = lshr i32 %1507, 9
  %1509 = lshr i32 %1480, 3
  %1510 = lshr i32 %1501, 4
  %1511 = lshr i32 %366, 5
  %1512 = xor i32 %1509, %1510
  %1513 = xor i32 %1512, %1508
  %1514 = xor i32 %1513, %1511
  %1515 = xor i32 %1514, %1507
  %1516 = xor i32 %1515, 67108862
  %1517 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1518 = add nsw i32 %1517, 1
  store i32 %1518, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1519 = mul i32 %1516, 987654323
  %1520 = add i32 %1519, %1517
  %1521 = tail call i32 @llvm.fshl.i32(i32 %1520, i32 %1520, i32 16)
  %1522 = mul i32 %1521, 123456791
  %1523 = add i32 %1522, %1517
  %1524 = sext i32 %1517 to i64
  %1525 = getelementptr inbounds i32, ptr %1329, i64 %1524
  store i32 %1523, ptr %1525, align 4, !tbaa !25
  %1526 = load i32, ptr @pos, align 4, !tbaa !25
  %1527 = sub nsw i32 %1526, %365
  %1528 = load i32, ptr @buf, align 8, !tbaa !20
  %1529 = add nsw i32 %1528, -1
  %1530 = and i32 %1529, %1527
  %1531 = sext i32 %1530 to i64
  %1532 = getelementptr inbounds i8, ptr %1306, i64 %1531
  %1533 = load i8, ptr %1532, align 1, !tbaa !9
  %1534 = lshr i8 %1533, 4
  %1535 = zext i8 %1534 to i32
  br i1 %1390, label %1564, label %1536

1536:                                             ; preds = %1500
  %1537 = shl nsw i32 %365, 1
  %1538 = sub nsw i32 %1526, %1537
  %1539 = and i32 %1529, %1538
  %1540 = sext i32 %1539 to i64
  %1541 = getelementptr inbounds i8, ptr %1306, i64 %1540
  %1542 = load i8, ptr %1541, align 1, !tbaa !9
  %1543 = and i8 %1542, -16
  %1544 = shl nuw nsw i32 %1535, 8
  %1545 = zext i8 %1543 to i32
  %1546 = or i32 %1544, %1545
  %1547 = add i32 %1526, %1378
  %1548 = and i32 %1529, %1547
  %1549 = sext i32 %1548 to i64
  %1550 = getelementptr inbounds i8, ptr %1306, i64 %1549
  %1551 = load i8, ptr %1550, align 1, !tbaa !9
  %1552 = lshr i8 %1551, 4
  %1553 = zext i8 %1552 to i32
  %1554 = or i32 %1546, %1553
  %1555 = shl nuw nsw i32 %1554, 4
  %1556 = sub nsw i32 %1526, %1379
  %1557 = and i32 %1529, %1556
  %1558 = sext i32 %1557 to i64
  %1559 = getelementptr inbounds i8, ptr %1306, i64 %1558
  %1560 = load i8, ptr %1559, align 1, !tbaa !9
  %1561 = lshr i8 %1560, 4
  %1562 = zext i8 %1561 to i32
  %1563 = or i32 %1555, %1562
  br label %1564

1564:                                             ; preds = %1500, %1536
  %1565 = phi i32 [ %1563, %1536 ], [ %1535, %1500 ]
  %1566 = mul i32 %365, -7
  %1567 = shl nsw i32 %365, 3
  %1568 = add i32 %1526, %1481
  %1569 = and i32 %1529, %1568
  %1570 = sext i32 %1569 to i64
  %1571 = getelementptr inbounds i8, ptr %1306, i64 %1570
  %1572 = load i8, ptr %1571, align 1, !tbaa !9
  %1573 = lshr i8 %1572, 5
  %1574 = zext i8 %1573 to i32
  br i1 %1390, label %1604, label %1575

1575:                                             ; preds = %1564
  %1576 = mul i32 %365, -6
  %1577 = add i32 %1526, %1576
  %1578 = and i32 %1529, %1577
  %1579 = sext i32 %1578 to i64
  %1580 = getelementptr inbounds i8, ptr %1306, i64 %1579
  %1581 = load i8, ptr %1580, align 1, !tbaa !9
  %1582 = shl nuw nsw i32 %1574, 6
  %1583 = lshr i8 %1581, 2
  %1584 = and i8 %1583, 56
  %1585 = zext i8 %1584 to i32
  %1586 = or i32 %1582, %1585
  %1587 = add i32 %1526, %1566
  %1588 = and i32 %1529, %1587
  %1589 = sext i32 %1588 to i64
  %1590 = getelementptr inbounds i8, ptr %1306, i64 %1589
  %1591 = load i8, ptr %1590, align 1, !tbaa !9
  %1592 = lshr i8 %1591, 5
  %1593 = zext i8 %1592 to i32
  %1594 = or i32 %1586, %1593
  %1595 = shl nuw nsw i32 %1594, 3
  %1596 = sub nsw i32 %1526, %1567
  %1597 = and i32 %1529, %1596
  %1598 = sext i32 %1597 to i64
  %1599 = getelementptr inbounds i8, ptr %1306, i64 %1598
  %1600 = load i8, ptr %1599, align 1, !tbaa !9
  %1601 = lshr i8 %1600, 5
  %1602 = zext i8 %1601 to i32
  %1603 = or i32 %1595, %1602
  br label %1604

1604:                                             ; preds = %1564, %1575
  %1605 = phi i32 [ %1603, %1575 ], [ %1574, %1564 ]
  %1606 = mul i32 %365, -9
  %1607 = mul i32 %365, -11
  %1608 = mul i32 %365, -12
  %1609 = add i32 %1526, %1606
  %1610 = and i32 %1529, %1609
  %1611 = sext i32 %1610 to i64
  %1612 = getelementptr inbounds i8, ptr %1306, i64 %1611
  %1613 = load i8, ptr %1612, align 1, !tbaa !9
  %1614 = lshr i8 %1613, 6
  %1615 = zext i8 %1614 to i32
  br i1 %1390, label %1645, label %1616

1616:                                             ; preds = %1604
  %1617 = mul i32 %365, -10
  %1618 = add i32 %1526, %1617
  %1619 = and i32 %1529, %1618
  %1620 = sext i32 %1619 to i64
  %1621 = getelementptr inbounds i8, ptr %1306, i64 %1620
  %1622 = load i8, ptr %1621, align 1, !tbaa !9
  %1623 = shl nuw nsw i32 %1615, 4
  %1624 = lshr i8 %1622, 4
  %1625 = and i8 %1624, 12
  %1626 = zext i8 %1625 to i32
  %1627 = or i32 %1623, %1626
  %1628 = add i32 %1526, %1607
  %1629 = and i32 %1529, %1628
  %1630 = sext i32 %1629 to i64
  %1631 = getelementptr inbounds i8, ptr %1306, i64 %1630
  %1632 = load i8, ptr %1631, align 1, !tbaa !9
  %1633 = lshr i8 %1632, 6
  %1634 = zext i8 %1633 to i32
  %1635 = or i32 %1627, %1634
  %1636 = shl nuw nsw i32 %1635, 2
  %1637 = add i32 %1526, %1608
  %1638 = and i32 %1529, %1637
  %1639 = sext i32 %1638 to i64
  %1640 = getelementptr inbounds i8, ptr %1306, i64 %1639
  %1641 = load i8, ptr %1640, align 1, !tbaa !9
  %1642 = lshr i8 %1641, 6
  %1643 = zext i8 %1642 to i32
  %1644 = or i32 %1636, %1643
  br label %1645

1645:                                             ; preds = %1604, %1616
  %1646 = phi i32 [ %1644, %1616 ], [ %1615, %1604 ]
  %1647 = mul i32 %1565, 30005491
  %1648 = mul i32 %1605, 50004239
  %1649 = mul i32 %1646, 70004807
  %1650 = add i32 %1358, 1000014895
  %1651 = add i32 %1650, %1647
  %1652 = add i32 %1651, %1648
  %1653 = add i32 %1652, %1649
  %1654 = lshr i32 %1653, 9
  %1655 = lshr i32 %1565, 3
  %1656 = lshr i32 %1605, 4
  %1657 = lshr i32 %1646, 5
  %1658 = xor i32 %1655, %1656
  %1659 = xor i32 %1658, %1657
  %1660 = xor i32 %1659, %1654
  %1661 = xor i32 %1660, %1365
  %1662 = xor i32 %1661, %1653
  %1663 = xor i32 %1662, 1
  %1664 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1665 = add nsw i32 %1664, 1
  store i32 %1665, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1666 = mul i32 %1663, 987654323
  %1667 = add i32 %1666, %1664
  %1668 = tail call i32 @llvm.fshl.i32(i32 %1667, i32 %1667, i32 16)
  %1669 = mul i32 %1668, 123456791
  %1670 = add i32 %1669, %1664
  %1671 = sext i32 %1664 to i64
  %1672 = getelementptr inbounds i32, ptr %1329, i64 %1671
  store i32 %1670, ptr %1672, align 4, !tbaa !25
  %1673 = load i32, ptr @pos, align 4, !tbaa !25
  %1674 = sub nsw i32 %1673, %365
  %1675 = load i32, ptr @buf, align 8, !tbaa !20
  %1676 = add nsw i32 %1675, -1
  %1677 = and i32 %1676, %1674
  %1678 = sext i32 %1677 to i64
  %1679 = getelementptr inbounds i8, ptr %1306, i64 %1678
  %1680 = load i8, ptr %1679, align 1, !tbaa !9
  %1681 = lshr i8 %1680, 6
  %1682 = zext i8 %1681 to i32
  br i1 %1390, label %1712, label %1683

1683:                                             ; preds = %1645
  %1684 = shl nsw i32 %365, 1
  %1685 = sub nsw i32 %1673, %1684
  %1686 = and i32 %1676, %1685
  %1687 = sext i32 %1686 to i64
  %1688 = getelementptr inbounds i8, ptr %1306, i64 %1687
  %1689 = load i8, ptr %1688, align 1, !tbaa !9
  %1690 = shl nuw nsw i32 %1682, 4
  %1691 = lshr i8 %1689, 4
  %1692 = and i8 %1691, 12
  %1693 = zext i8 %1692 to i32
  %1694 = or i32 %1690, %1693
  %1695 = add i32 %1673, %1378
  %1696 = and i32 %1676, %1695
  %1697 = sext i32 %1696 to i64
  %1698 = getelementptr inbounds i8, ptr %1306, i64 %1697
  %1699 = load i8, ptr %1698, align 1, !tbaa !9
  %1700 = lshr i8 %1699, 6
  %1701 = zext i8 %1700 to i32
  %1702 = or i32 %1694, %1701
  %1703 = shl nuw nsw i32 %1702, 2
  %1704 = sub nsw i32 %1673, %1379
  %1705 = and i32 %1676, %1704
  %1706 = sext i32 %1705 to i64
  %1707 = getelementptr inbounds i8, ptr %1306, i64 %1706
  %1708 = load i8, ptr %1707, align 1, !tbaa !9
  %1709 = lshr i8 %1708, 6
  %1710 = zext i8 %1709 to i32
  %1711 = or i32 %1703, %1710
  br label %1712

1712:                                             ; preds = %1645, %1683
  %1713 = phi i32 [ %1711, %1683 ], [ %1682, %1645 ]
  %1714 = shl nuw nsw i32 %1713, 8
  %1715 = add i32 %1673, %1481
  %1716 = and i32 %1676, %1715
  %1717 = sext i32 %1716 to i64
  %1718 = getelementptr inbounds i8, ptr %1306, i64 %1717
  %1719 = load i8, ptr %1718, align 1, !tbaa !9
  %1720 = lshr i8 %1719, 6
  %1721 = zext i8 %1720 to i32
  br i1 %1390, label %1751, label %1722

1722:                                             ; preds = %1712
  %1723 = mul i32 %365, -6
  %1724 = add i32 %1673, %1723
  %1725 = and i32 %1676, %1724
  %1726 = sext i32 %1725 to i64
  %1727 = getelementptr inbounds i8, ptr %1306, i64 %1726
  %1728 = load i8, ptr %1727, align 1, !tbaa !9
  %1729 = shl nuw nsw i32 %1721, 4
  %1730 = lshr i8 %1728, 4
  %1731 = and i8 %1730, 12
  %1732 = zext i8 %1731 to i32
  %1733 = or i32 %1729, %1732
  %1734 = add i32 %1673, %1566
  %1735 = and i32 %1676, %1734
  %1736 = sext i32 %1735 to i64
  %1737 = getelementptr inbounds i8, ptr %1306, i64 %1736
  %1738 = load i8, ptr %1737, align 1, !tbaa !9
  %1739 = lshr i8 %1738, 6
  %1740 = zext i8 %1739 to i32
  %1741 = or i32 %1733, %1740
  %1742 = shl nuw nsw i32 %1741, 2
  %1743 = sub nsw i32 %1673, %1567
  %1744 = and i32 %1676, %1743
  %1745 = sext i32 %1744 to i64
  %1746 = getelementptr inbounds i8, ptr %1306, i64 %1745
  %1747 = load i8, ptr %1746, align 1, !tbaa !9
  %1748 = lshr i8 %1747, 6
  %1749 = zext i8 %1748 to i32
  %1750 = or i32 %1742, %1749
  br label %1751

1751:                                             ; preds = %1712, %1722
  %1752 = phi i32 [ %1750, %1722 ], [ %1721, %1712 ]
  %1753 = or i32 %1752, %1714
  %1754 = add i32 %1673, %1606
  %1755 = and i32 %1676, %1754
  %1756 = sext i32 %1755 to i64
  %1757 = getelementptr inbounds i8, ptr %1306, i64 %1756
  %1758 = load i8, ptr %1757, align 1, !tbaa !9
  %1759 = lshr i8 %1758, 6
  %1760 = zext i8 %1759 to i32
  br i1 %1390, label %1790, label %1761

1761:                                             ; preds = %1751
  %1762 = mul i32 %365, -10
  %1763 = add i32 %1673, %1762
  %1764 = and i32 %1676, %1763
  %1765 = sext i32 %1764 to i64
  %1766 = getelementptr inbounds i8, ptr %1306, i64 %1765
  %1767 = load i8, ptr %1766, align 1, !tbaa !9
  %1768 = shl nuw nsw i32 %1760, 4
  %1769 = lshr i8 %1767, 4
  %1770 = and i8 %1769, 12
  %1771 = zext i8 %1770 to i32
  %1772 = or i32 %1768, %1771
  %1773 = add i32 %1673, %1607
  %1774 = and i32 %1676, %1773
  %1775 = sext i32 %1774 to i64
  %1776 = getelementptr inbounds i8, ptr %1306, i64 %1775
  %1777 = load i8, ptr %1776, align 1, !tbaa !9
  %1778 = lshr i8 %1777, 6
  %1779 = zext i8 %1778 to i32
  %1780 = or i32 %1772, %1779
  %1781 = shl nuw nsw i32 %1780, 2
  %1782 = add i32 %1673, %1608
  %1783 = and i32 %1676, %1782
  %1784 = sext i32 %1783 to i64
  %1785 = getelementptr inbounds i8, ptr %1306, i64 %1784
  %1786 = load i8, ptr %1785, align 1, !tbaa !9
  %1787 = lshr i8 %1786, 6
  %1788 = zext i8 %1787 to i32
  %1789 = or i32 %1781, %1788
  br label %1790

1790:                                             ; preds = %1751, %1761
  %1791 = phi i32 [ %1789, %1761 ], [ %1760, %1751 ]
  %1792 = shl nuw nsw i32 %1791, 8
  %1793 = mul i32 %365, -13
  %1794 = add i32 %1673, %1793
  %1795 = and i32 %1676, %1794
  %1796 = sext i32 %1795 to i64
  %1797 = getelementptr inbounds i8, ptr %1306, i64 %1796
  %1798 = load i8, ptr %1797, align 1, !tbaa !9
  %1799 = lshr i8 %1798, 6
  %1800 = zext i8 %1799 to i32
  br i1 %1390, label %1832, label %1801

1801:                                             ; preds = %1790
  %1802 = shl nsw i32 %365, 4
  %1803 = mul i32 %365, -15
  %1804 = mul i32 %365, -14
  %1805 = add i32 %1673, %1804
  %1806 = and i32 %1676, %1805
  %1807 = sext i32 %1806 to i64
  %1808 = getelementptr inbounds i8, ptr %1306, i64 %1807
  %1809 = load i8, ptr %1808, align 1, !tbaa !9
  %1810 = shl nuw nsw i32 %1800, 4
  %1811 = lshr i8 %1809, 4
  %1812 = and i8 %1811, 12
  %1813 = zext i8 %1812 to i32
  %1814 = or i32 %1810, %1813
  %1815 = add i32 %1673, %1803
  %1816 = and i32 %1676, %1815
  %1817 = sext i32 %1816 to i64
  %1818 = getelementptr inbounds i8, ptr %1306, i64 %1817
  %1819 = load i8, ptr %1818, align 1, !tbaa !9
  %1820 = lshr i8 %1819, 6
  %1821 = zext i8 %1820 to i32
  %1822 = or i32 %1814, %1821
  %1823 = shl nuw nsw i32 %1822, 2
  %1824 = sub nsw i32 %1673, %1802
  %1825 = and i32 %1676, %1824
  %1826 = sext i32 %1825 to i64
  %1827 = getelementptr inbounds i8, ptr %1306, i64 %1826
  %1828 = load i8, ptr %1827, align 1, !tbaa !9
  %1829 = lshr i8 %1828, 6
  %1830 = zext i8 %1829 to i32
  %1831 = or i32 %1823, %1830
  br label %1832

1832:                                             ; preds = %1790, %1801
  %1833 = phi i32 [ %1831, %1801 ], [ %1800, %1790 ]
  %1834 = or i32 %1833, %1792
  %1835 = mul i32 %365, -17
  %1836 = add i32 %1673, %1835
  %1837 = and i32 %1676, %1836
  %1838 = sext i32 %1837 to i64
  %1839 = getelementptr inbounds i8, ptr %1306, i64 %1838
  %1840 = load i8, ptr %1839, align 1, !tbaa !9
  %1841 = lshr i8 %1840, 6
  %1842 = zext i8 %1841 to i32
  br i1 %1390, label %1874, label %1843

1843:                                             ; preds = %1832
  %1844 = mul i32 %365, -20
  %1845 = mul i32 %365, -19
  %1846 = mul i32 %365, -18
  %1847 = add i32 %1673, %1846
  %1848 = and i32 %1676, %1847
  %1849 = sext i32 %1848 to i64
  %1850 = getelementptr inbounds i8, ptr %1306, i64 %1849
  %1851 = load i8, ptr %1850, align 1, !tbaa !9
  %1852 = shl nuw nsw i32 %1842, 4
  %1853 = lshr i8 %1851, 4
  %1854 = and i8 %1853, 12
  %1855 = zext i8 %1854 to i32
  %1856 = or i32 %1852, %1855
  %1857 = add i32 %1673, %1845
  %1858 = and i32 %1676, %1857
  %1859 = sext i32 %1858 to i64
  %1860 = getelementptr inbounds i8, ptr %1306, i64 %1859
  %1861 = load i8, ptr %1860, align 1, !tbaa !9
  %1862 = lshr i8 %1861, 6
  %1863 = zext i8 %1862 to i32
  %1864 = or i32 %1856, %1863
  %1865 = shl nuw nsw i32 %1864, 2
  %1866 = add i32 %1673, %1844
  %1867 = and i32 %1676, %1866
  %1868 = sext i32 %1867 to i64
  %1869 = getelementptr inbounds i8, ptr %1306, i64 %1868
  %1870 = load i8, ptr %1869, align 1, !tbaa !9
  %1871 = lshr i8 %1870, 6
  %1872 = zext i8 %1871 to i32
  %1873 = or i32 %1865, %1872
  br label %1874

1874:                                             ; preds = %1832, %1843
  %1875 = phi i32 [ %1873, %1843 ], [ %1842, %1832 ]
  %1876 = shl nuw nsw i32 %1875, 8
  %1877 = mul i32 %365, -21
  %1878 = add i32 %1673, %1877
  %1879 = and i32 %1676, %1878
  %1880 = sext i32 %1879 to i64
  %1881 = getelementptr inbounds i8, ptr %1306, i64 %1880
  %1882 = load i8, ptr %1881, align 1, !tbaa !9
  %1883 = lshr i8 %1882, 6
  %1884 = zext i8 %1883 to i32
  br i1 %1390, label %1916, label %1885

1885:                                             ; preds = %1874
  %1886 = mul i32 %365, -24
  %1887 = mul i32 %365, -23
  %1888 = mul i32 %365, -22
  %1889 = add i32 %1673, %1888
  %1890 = and i32 %1676, %1889
  %1891 = sext i32 %1890 to i64
  %1892 = getelementptr inbounds i8, ptr %1306, i64 %1891
  %1893 = load i8, ptr %1892, align 1, !tbaa !9
  %1894 = shl nuw nsw i32 %1884, 4
  %1895 = lshr i8 %1893, 4
  %1896 = and i8 %1895, 12
  %1897 = zext i8 %1896 to i32
  %1898 = or i32 %1894, %1897
  %1899 = add i32 %1673, %1887
  %1900 = and i32 %1676, %1899
  %1901 = sext i32 %1900 to i64
  %1902 = getelementptr inbounds i8, ptr %1306, i64 %1901
  %1903 = load i8, ptr %1902, align 1, !tbaa !9
  %1904 = lshr i8 %1903, 6
  %1905 = zext i8 %1904 to i32
  %1906 = or i32 %1898, %1905
  %1907 = shl nuw nsw i32 %1906, 2
  %1908 = add i32 %1673, %1886
  %1909 = and i32 %1676, %1908
  %1910 = sext i32 %1909 to i64
  %1911 = getelementptr inbounds i8, ptr %1306, i64 %1910
  %1912 = load i8, ptr %1911, align 1, !tbaa !9
  %1913 = lshr i8 %1912, 6
  %1914 = zext i8 %1913 to i32
  %1915 = or i32 %1907, %1914
  br label %1916

1916:                                             ; preds = %1874, %1885
  %1917 = phi i32 [ %1915, %1885 ], [ %1884, %1874 ]
  %1918 = or i32 %1917, %1876
  %1919 = mul i32 %1753, 30005491
  %1920 = mul i32 %1834, 50004239
  %1921 = mul i32 %1918, 70004807
  %1922 = add i32 %1358, 1200017874
  %1923 = add i32 %1922, %1919
  %1924 = add i32 %1923, %1920
  %1925 = add i32 %1924, %1921
  %1926 = lshr i32 %1925, 9
  %1927 = lshr i32 %1753, 3
  %1928 = lshr i32 %1834, 4
  %1929 = lshr i32 %1918, 5
  %1930 = xor i32 %1927, %1928
  %1931 = xor i32 %1930, %1929
  %1932 = xor i32 %1931, %1926
  %1933 = xor i32 %1932, %1365
  %1934 = xor i32 %1933, %1925
  %1935 = xor i32 %1934, 1
  %1936 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1937 = add nsw i32 %1936, 1
  store i32 %1937, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1938 = mul i32 %1935, 987654323
  %1939 = add i32 %1938, %1936
  %1940 = tail call i32 @llvm.fshl.i32(i32 %1939, i32 %1939, i32 16)
  %1941 = mul i32 %1940, 123456791
  %1942 = add i32 %1941, %1936
  %1943 = sext i32 %1936 to i64
  %1944 = getelementptr inbounds i32, ptr %1329, i64 %1943
  store i32 %1942, ptr %1944, align 4, !tbaa !25
  %1945 = sext i32 %367 to i64
  %1946 = getelementptr inbounds [2 x i32], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 %1945
  %1947 = load i32, ptr %1946, align 4, !tbaa !25
  %1948 = ashr i32 %1947, 8
  %1949 = mul i32 %1948, 30005491
  %1950 = add i32 %1312, 1220013547
  %1951 = add i32 %1950, %1949
  %1952 = lshr i32 %1951, 9
  %1953 = lshr i32 %1948, 3
  %1954 = xor i32 %1953, %1952
  %1955 = xor i32 %1954, %1317
  %1956 = xor i32 %1955, %1951
  %1957 = xor i32 %1956, 67108865
  %1958 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1959 = add nsw i32 %1958, 1
  store i32 %1959, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %1960 = mul i32 %1957, 987654323
  %1961 = add i32 %1960, %1958
  %1962 = tail call i32 @llvm.fshl.i32(i32 %1961, i32 %1961, i32 16)
  %1963 = mul i32 %1962, 123456791
  %1964 = add i32 %1963, %1958
  %1965 = sext i32 %1958 to i64
  %1966 = getelementptr inbounds i32, ptr %1329, i64 %1965
  store i32 %1964, ptr %1966, align 4, !tbaa !25
  %1967 = xor i32 %365, -1
  %1968 = load i32, ptr @pos, align 4, !tbaa !25
  %1969 = add i32 %1968, %1967
  %1970 = load i32, ptr @buf, align 8, !tbaa !20
  %1971 = add nsw i32 %1970, -1
  %1972 = and i32 %1971, %1969
  %1973 = sext i32 %1972 to i64
  %1974 = getelementptr inbounds i8, ptr %1306, i64 %1973
  %1975 = load i8, ptr %1974, align 1, !tbaa !9
  %1976 = zext i8 %1975 to i16
  %1977 = sub i32 %1968, %365
  %1978 = and i32 %1971, %1977
  %1979 = sext i32 %1978 to i64
  %1980 = getelementptr inbounds i8, ptr %1306, i64 %1979
  %1981 = load i8, ptr %1980, align 1, !tbaa !9
  %1982 = zext i8 %1981 to i16
  %1983 = shl nuw i16 %1982, 8
  %1984 = or i16 %1983, %1976
  %1985 = sext i16 %1984 to i32
  %1986 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 1, i64 %1945
  %1987 = load i32, ptr %1986, align 4, !tbaa !25
  %1988 = sub i32 %1947, %1987
  %1989 = add i32 %1988, %1985
  %1990 = ashr i32 %1989, 8
  %1991 = mul i32 %1990, 30005491
  %1992 = add i32 %1312, 1420016526
  %1993 = add i32 %1992, %1991
  %1994 = lshr i32 %1993, 9
  %1995 = lshr i32 %1990, 3
  %1996 = xor i32 %1995, %1994
  %1997 = xor i32 %1996, %1317
  %1998 = xor i32 %1997, %1993
  %1999 = xor i32 %1998, 67108866
  %2000 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %2001 = add nsw i32 %2000, 1
  store i32 %2001, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %2002 = mul i32 %1999, 987654323
  %2003 = add i32 %2002, %2000
  %2004 = tail call i32 @llvm.fshl.i32(i32 %2003, i32 %2003, i32 16)
  %2005 = mul i32 %2004, 123456791
  %2006 = add i32 %2005, %2000
  %2007 = sext i32 %2000 to i64
  %2008 = getelementptr inbounds i32, ptr %1329, i64 %2007
  store i32 %2006, ptr %2008, align 4, !tbaa !25
  %2009 = load i32, ptr @pos, align 4, !tbaa !25
  %2010 = add i32 %2009, %1967
  %2011 = load i32, ptr @buf, align 8, !tbaa !20
  %2012 = add nsw i32 %2011, -1
  %2013 = and i32 %2012, %2010
  %2014 = sext i32 %2013 to i64
  %2015 = getelementptr inbounds i8, ptr %1306, i64 %2014
  %2016 = load i8, ptr %2015, align 1, !tbaa !9
  %2017 = zext i8 %2016 to i16
  %2018 = sub i32 %2009, %365
  %2019 = and i32 %2012, %2018
  %2020 = sext i32 %2019 to i64
  %2021 = getelementptr inbounds i8, ptr %1306, i64 %2020
  %2022 = load i8, ptr %2021, align 1, !tbaa !9
  %2023 = zext i8 %2022 to i16
  %2024 = shl nuw i16 %2023, 8
  %2025 = or i16 %2024, %2017
  %2026 = sext i16 %2025 to i32
  %2027 = shl nsw i32 %365, 1
  %2028 = xor i32 %2027, -1
  %2029 = add i32 %2009, %2028
  %2030 = and i32 %2012, %2029
  %2031 = sext i32 %2030 to i64
  %2032 = getelementptr inbounds i8, ptr %1306, i64 %2031
  %2033 = load i8, ptr %2032, align 1, !tbaa !9
  %2034 = zext i8 %2033 to i16
  %2035 = sub i32 %2009, %2027
  %2036 = and i32 %2012, %2035
  %2037 = sext i32 %2036 to i64
  %2038 = getelementptr inbounds i8, ptr %1306, i64 %2037
  %2039 = load i8, ptr %2038, align 1, !tbaa !9
  %2040 = zext i8 %2039 to i16
  %2041 = shl nuw i16 %2040, 8
  %2042 = or i16 %2041, %2034
  %2043 = sext i16 %2042 to i32
  %2044 = getelementptr inbounds [4 x [2 x i32]], ptr @_ZZ8wavModelR5MixerE2pr, i64 0, i64 2, i64 %1945
  %2045 = load i32, ptr %2044, align 4, !tbaa !25
  %2046 = add i32 %2045, %1987
  %2047 = sub i32 %2026, %2046
  %2048 = add i32 %2047, %2043
  %2049 = ashr i32 %2048, 9
  %2050 = mul i32 %2049, 50004239
  %2051 = add i32 %1504, 1690024312
  %2052 = add i32 %2051, %1949
  %2053 = add i32 %2052, %2050
  %2054 = lshr i32 %2053, 9
  %2055 = lshr i32 %2049, 4
  %2056 = xor i32 %2055, %2054
  %2057 = xor i32 %2056, %1953
  %2058 = xor i32 %2057, %1511
  %2059 = xor i32 %2058, %2053
  %2060 = xor i32 %2059, 67108861
  %2061 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %2062 = add nsw i32 %2061, 1
  store i32 %2062, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %2063 = mul i32 %2060, 987654323
  %2064 = add i32 %2063, %2061
  %2065 = tail call i32 @llvm.fshl.i32(i32 %2064, i32 %2064, i32 16)
  %2066 = mul i32 %2065, 123456791
  %2067 = add i32 %2066, %2061
  %2068 = sext i32 %2061 to i64
  %2069 = getelementptr inbounds i32, ptr %1329, i64 %2068
  store i32 %2067, ptr %2069, align 4, !tbaa !25
  %2070 = load i32, ptr @pos, align 4, !tbaa !25
  %2071 = add i32 %2070, %1967
  %2072 = load i32, ptr @buf, align 8, !tbaa !20
  %2073 = add nsw i32 %2072, -1
  %2074 = and i32 %2073, %2071
  %2075 = sext i32 %2074 to i64
  %2076 = getelementptr inbounds i8, ptr %1306, i64 %2075
  %2077 = load i8, ptr %2076, align 1, !tbaa !9
  %2078 = zext i8 %2077 to i16
  %2079 = sub i32 %2070, %365
  %2080 = and i32 %2073, %2079
  %2081 = sext i32 %2080 to i64
  %2082 = getelementptr inbounds i8, ptr %1306, i64 %2081
  %2083 = load i8, ptr %2082, align 1, !tbaa !9
  %2084 = zext i8 %2083 to i16
  %2085 = shl nuw i16 %2084, 8
  %2086 = or i16 %2085, %2078
  %2087 = sext i16 %2086 to i32
  %2088 = add i32 %2070, %2028
  %2089 = and i32 %2073, %2088
  %2090 = sext i32 %2089 to i64
  %2091 = getelementptr inbounds i8, ptr %1306, i64 %2090
  %2092 = load i8, ptr %2091, align 1, !tbaa !9
  %2093 = zext i8 %2092 to i16
  %2094 = sub i32 %2070, %2027
  %2095 = and i32 %2073, %2094
  %2096 = sext i32 %2095 to i64
  %2097 = getelementptr inbounds i8, ptr %1306, i64 %2096
  %2098 = load i8, ptr %2097, align 1, !tbaa !9
  %2099 = zext i8 %2098 to i16
  %2100 = shl nuw i16 %2099, 8
  %2101 = or i16 %2100, %2093
  %2102 = sext i16 %2101 to i32
  %2103 = sub i32 %2087, %1987
  %2104 = shl i32 %2103, 1
  %2105 = add i32 %2045, %1947
  %2106 = sub i32 %2105, %2102
  %2107 = add i32 %2106, %2104
  %2108 = ashr i32 %2107, 8
  %2109 = mul i32 %2108, 30005491
  %2110 = add i32 %1312, 1820022484
  %2111 = add i32 %2110, %2109
  %2112 = lshr i32 %2111, 9
  %2113 = lshr i32 %2108, 3
  %2114 = xor i32 %2113, %2112
  %2115 = xor i32 %2114, %1317
  %2116 = xor i32 %2115, %2111
  %2117 = xor i32 %2116, 67108866
  %2118 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %2119 = add nsw i32 %2118, 1
  store i32 %2119, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8wavModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %2120 = mul i32 %2117, 987654323
  %2121 = add i32 %2120, %2118
  %2122 = tail call i32 @llvm.fshl.i32(i32 %2121, i32 %2121, i32 16)
  %2123 = mul i32 %2122, 123456791
  %2124 = add i32 %2123, %2118
  %2125 = sext i32 %2118 to i64
  %2126 = getelementptr inbounds i32, ptr %1329, i64 %2125
  store i32 %2124, ptr %2126, align 4, !tbaa !25
  %2127 = load i32, ptr @pos, align 4, !tbaa !25
  %2128 = add i32 %2127, -5
  %2129 = load i32, ptr @buf, align 8, !tbaa !20
  %2130 = add nsw i32 %2129, -1
  %2131 = and i32 %2130, %2128
  %2132 = sext i32 %2131 to i64
  %2133 = getelementptr inbounds i8, ptr %1306, i64 %2132
  %2134 = load i8, ptr %2133, align 1, !tbaa !9
  %2135 = zext i8 %2134 to i16
  %2136 = add i32 %2127, -4
  %2137 = and i32 %2130, %2136
  %2138 = sext i32 %2137 to i64
  %2139 = getelementptr inbounds i8, ptr %1306, i64 %2138
  %2140 = load i8, ptr %2139, align 1, !tbaa !9
  %2141 = zext i8 %2140 to i16
  %2142 = shl nuw i16 %2141, 8
  %2143 = or i16 %2142, %2135
  %2144 = sext i16 %2143 to i32
  %2145 = add i32 %2127, -3
  %2146 = and i32 %2130, %2145
  %2147 = sext i32 %2146 to i64
  %2148 = getelementptr inbounds i8, ptr %1306, i64 %2147
  %2149 = load i8, ptr %2148, align 1, !tbaa !9
  %2150 = zext i8 %2149 to i16
  %2151 = add i32 %2127, -2
  %2152 = and i32 %2130, %2151
  %2153 = sext i32 %2152 to i64
  %2154 = getelementptr inbounds i8, ptr %1306, i64 %2153
  %2155 = load i8, ptr %2154, align 1, !tbaa !9
  %2156 = zext i8 %2155 to i16
  %2157 = shl nuw i16 %2156, 8
  %2158 = or i16 %2157, %2150
  %2159 = sext i16 %2158 to i32
  %2160 = add i32 %2127, -7
  %2161 = and i32 %2130, %2160
  %2162 = sext i32 %2161 to i64
  %2163 = getelementptr inbounds i8, ptr %1306, i64 %2162
  %2164 = load i8, ptr %2163, align 1, !tbaa !9
  %2165 = zext i8 %2164 to i16
  %2166 = add i32 %2127, -6
  %2167 = and i32 %2130, %2166
  %2168 = sext i32 %2167 to i64
  %2169 = getelementptr inbounds i8, ptr %1306, i64 %2168
  %2170 = load i8, ptr %2169, align 1, !tbaa !9
  %2171 = zext i8 %2170 to i16
  %2172 = shl nuw i16 %2171, 8
  %2173 = or i16 %2172, %2165
  %2174 = sext i16 %2173 to i32
  %2175 = add nsw i32 %2127, -1
  %2176 = and i32 %2130, %2175
  %2177 = sext i32 %2176 to i64
  %2178 = getelementptr inbounds i8, ptr %1306, i64 %2177
  %2179 = load i8, ptr %2178, align 1, !tbaa !9
  %2180 = zext i8 %2179 to i32
  %2181 = add i32 %1947, %2144
  %2182 = add i32 %2181, %2159
  %2183 = add nsw i32 %2180, %2174
  %2184 = sub i32 %2182, %2183
  %2185 = ashr i32 %2184, 1
  %2186 = load i32, ptr @_ZZ8wavModelR5MixerE4scm1, align 8, !tbaa !74
  %2187 = and i32 %2186, -256
  %2188 = add i32 %2187, -256
  %2189 = and i32 %2188, %2185
  store i32 %2189, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %2190 = add i32 %2127, %1967
  %2191 = and i32 %2130, %2190
  %2192 = sext i32 %2191 to i64
  %2193 = getelementptr inbounds i8, ptr %1306, i64 %2192
  %2194 = load i8, ptr %2193, align 1, !tbaa !9
  %2195 = zext i8 %2194 to i16
  %2196 = sub i32 %2127, %365
  %2197 = and i32 %2130, %2196
  %2198 = sext i32 %2197 to i64
  %2199 = getelementptr inbounds i8, ptr %1306, i64 %2198
  %2200 = load i8, ptr %2199, align 1, !tbaa !9
  %2201 = zext i8 %2200 to i16
  %2202 = shl nuw i16 %2201, 8
  %2203 = or i16 %2202, %2195
  %2204 = sext i16 %2203 to i32
  %2205 = load i8, ptr %2178, align 1, !tbaa !9
  %2206 = zext i8 %2205 to i32
  %2207 = sub i32 %1947, %2206
  %2208 = add i32 %2207, %2204
  %2209 = ashr i32 %2208, 1
  %2210 = load i32, ptr @_ZZ8wavModelR5MixerE4scm2, align 8, !tbaa !74
  %2211 = and i32 %2210, -256
  %2212 = add i32 %2211, -256
  %2213 = and i32 %2212, %2209
  store i32 %2213, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %2214 = load i8, ptr %2193, align 1, !tbaa !9
  %2215 = zext i8 %2214 to i16
  %2216 = load i8, ptr %2199, align 1, !tbaa !9
  %2217 = zext i8 %2216 to i16
  %2218 = shl nuw i16 %2217, 8
  %2219 = or i16 %2218, %2215
  %2220 = sext i16 %2219 to i32
  %2221 = shl nsw i32 %2220, 1
  %2222 = add i32 %2127, %2028
  %2223 = and i32 %2130, %2222
  %2224 = sext i32 %2223 to i64
  %2225 = getelementptr inbounds i8, ptr %1306, i64 %2224
  %2226 = load i8, ptr %2225, align 1, !tbaa !9
  %2227 = zext i8 %2226 to i16
  %2228 = sub i32 %2127, %2027
  %2229 = and i32 %2130, %2228
  %2230 = sext i32 %2229 to i64
  %2231 = getelementptr inbounds i8, ptr %1306, i64 %2230
  %2232 = load i8, ptr %2231, align 1, !tbaa !9
  %2233 = zext i8 %2232 to i16
  %2234 = shl nuw i16 %2233, 8
  %2235 = or i16 %2234, %2227
  %2236 = sext i16 %2235 to i32
  %2237 = load i8, ptr %2178, align 1, !tbaa !9
  %2238 = zext i8 %2237 to i32
  %2239 = add i32 %1947, %2221
  %2240 = add nsw i32 %2238, %2236
  %2241 = sub i32 %2239, %2240
  %2242 = load i32, ptr @_ZZ8wavModelR5MixerE4scm3, align 8, !tbaa !74
  %2243 = and i32 %2242, -256
  %2244 = add i32 %2243, -256
  %2245 = and i32 %2244, %2241
  store i32 %2245, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 1), align 8, !tbaa !112
  %2246 = load i8, ptr %2193, align 1, !tbaa !9
  %2247 = zext i8 %2246 to i16
  %2248 = load i8, ptr %2199, align 1, !tbaa !9
  %2249 = zext i8 %2248 to i16
  %2250 = shl nuw i16 %2249, 8
  %2251 = or i16 %2250, %2247
  %2252 = sext i16 %2251 to i32
  %2253 = mul nsw i32 %2252, 3
  %2254 = load i8, ptr %2225, align 1, !tbaa !9
  %2255 = zext i8 %2254 to i16
  %2256 = load i8, ptr %2231, align 1, !tbaa !9
  %2257 = zext i8 %2256 to i16
  %2258 = shl nuw i16 %2257, 8
  %2259 = or i16 %2258, %2255
  %2260 = sext i16 %2259 to i32
  %2261 = mul i32 %2260, 2147483645
  %2262 = mul nsw i32 %365, 3
  %2263 = xor i32 %2262, -1
  %2264 = add i32 %2127, %2263
  %2265 = and i32 %2130, %2264
  %2266 = sext i32 %2265 to i64
  %2267 = getelementptr inbounds i8, ptr %1306, i64 %2266
  %2268 = load i8, ptr %2267, align 1, !tbaa !9
  %2269 = zext i8 %2268 to i16
  %2270 = sub i32 %2127, %2262
  %2271 = and i32 %2130, %2270
  %2272 = sext i32 %2271 to i64
  %2273 = getelementptr inbounds i8, ptr %1306, i64 %2272
  %2274 = load i8, ptr %2273, align 1, !tbaa !9
  %2275 = zext i8 %2274 to i16
  %2276 = shl nuw i16 %2275, 8
  %2277 = or i16 %2276, %2269
  %2278 = sext i16 %2277 to i32
  %2279 = load i8, ptr %2178, align 1, !tbaa !9
  %2280 = zext i8 %2279 to i32
  %2281 = sub nsw i32 %2253, %2280
  %2282 = add i32 %2281, %2261
  %2283 = add i32 %2282, %2278
  %2284 = shl i32 %2283, 1
  %2285 = load i32, ptr @_ZZ8wavModelR5MixerE4scm4, align 8, !tbaa !74
  %2286 = and i32 %2285, -256
  %2287 = add i32 %2286, -256
  %2288 = and i32 %2287, %2284
  store i32 %2288, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm4, i64 0, i32 1), align 8, !tbaa !112
  %2289 = add i32 %2196, 1
  %2290 = and i32 %2130, %2289
  %2291 = sext i32 %2290 to i64
  %2292 = getelementptr inbounds i8, ptr %1306, i64 %2291
  %2293 = load i8, ptr %2292, align 1, !tbaa !9
  %2294 = zext i8 %2293 to i16
  %2295 = add i32 %2196, 2
  %2296 = and i32 %2130, %2295
  %2297 = sext i32 %2296 to i64
  %2298 = getelementptr inbounds i8, ptr %1306, i64 %2297
  %2299 = load i8, ptr %2298, align 1, !tbaa !9
  %2300 = zext i8 %2299 to i16
  %2301 = shl nuw i16 %2300, 8
  %2302 = or i16 %2301, %2294
  %2303 = sext i16 %2302 to i32
  %2304 = load i8, ptr %2193, align 1, !tbaa !9
  %2305 = zext i8 %2304 to i16
  %2306 = load i8, ptr %2199, align 1, !tbaa !9
  %2307 = zext i8 %2306 to i16
  %2308 = shl nuw i16 %2307, 8
  %2309 = or i16 %2308, %2305
  %2310 = sext i16 %2309 to i32
  %2311 = load i8, ptr %2178, align 1, !tbaa !9
  %2312 = zext i8 %2311 to i32
  %2313 = shl nsw i32 %1947, 1
  %2314 = add i32 %2313, %2303
  %2315 = sub i32 %2314, %2312
  %2316 = add i32 %2315, %2310
  %2317 = ashr i32 %2316, 2
  %2318 = load i32, ptr @_ZZ8wavModelR5MixerE4scm5, align 8, !tbaa !74
  %2319 = and i32 %2318, -256
  %2320 = add i32 %2319, -256
  %2321 = and i32 %2320, %2317
  store i32 %2321, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm5, i64 0, i32 1), align 8, !tbaa !112
  %2322 = load i8, ptr %2193, align 1, !tbaa !9
  %2323 = zext i8 %2322 to i16
  %2324 = load i8, ptr %2199, align 1, !tbaa !9
  %2325 = zext i8 %2324 to i16
  %2326 = shl nuw i16 %2325, 8
  %2327 = or i16 %2326, %2323
  %2328 = sext i16 %2327 to i32
  %2329 = load i8, ptr %2225, align 1, !tbaa !9
  %2330 = zext i8 %2329 to i16
  %2331 = load i8, ptr %2231, align 1, !tbaa !9
  %2332 = zext i8 %2331 to i16
  %2333 = shl nuw i16 %2332, 8
  %2334 = or i16 %2333, %2330
  %2335 = sext i16 %2334 to i32
  %2336 = mul i32 %2335, 2147483642
  %2337 = load i8, ptr %2267, align 1, !tbaa !9
  %2338 = zext i8 %2337 to i16
  %2339 = load i8, ptr %2273, align 1, !tbaa !9
  %2340 = zext i8 %2339 to i16
  %2341 = shl nuw i16 %2340, 8
  %2342 = or i16 %2341, %2338
  %2343 = sext i16 %2342 to i32
  %2344 = xor i32 %1379, -1
  %2345 = add i32 %2127, %2344
  %2346 = and i32 %2130, %2345
  %2347 = sext i32 %2346 to i64
  %2348 = getelementptr inbounds i8, ptr %1306, i64 %2347
  %2349 = load i8, ptr %2348, align 1, !tbaa !9
  %2350 = zext i8 %2349 to i16
  %2351 = sub i32 %2127, %1379
  %2352 = and i32 %2130, %2351
  %2353 = sext i32 %2352 to i64
  %2354 = getelementptr inbounds i8, ptr %1306, i64 %2353
  %2355 = load i8, ptr %2354, align 1, !tbaa !9
  %2356 = zext i8 %2355 to i16
  %2357 = shl nuw i16 %2356, 8
  %2358 = or i16 %2357, %2350
  %2359 = sext i16 %2358 to i32
  %2360 = load i8, ptr %2178, align 1, !tbaa !9
  %2361 = zext i8 %2360 to i32
  %2362 = add nsw i32 %2343, %2328
  %2363 = add nsw i32 %2361, %2359
  %2364 = sub i32 %2336, %2363
  %2365 = shl nsw i32 %2362, 3
  %2366 = shl i32 %2364, 1
  %2367 = add i32 %2365, %2366
  %2368 = load i32, ptr @_ZZ8wavModelR5MixerE4scm7, align 8, !tbaa !74
  %2369 = and i32 %2368, -256
  %2370 = add i32 %2369, -256
  %2371 = and i32 %2370, %2367
  store i32 %2371, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm7, i64 0, i32 1), align 8, !tbaa !112
  %2372 = load i8, ptr %2193, align 1, !tbaa !9
  %2373 = zext i8 %2372 to i16
  %2374 = load i8, ptr %2199, align 1, !tbaa !9
  %2375 = zext i8 %2374 to i16
  %2376 = shl nuw i16 %2375, 8
  %2377 = or i16 %2376, %2373
  %2378 = sext i16 %2377 to i32
  %2379 = load i8, ptr %2225, align 1, !tbaa !9
  %2380 = zext i8 %2379 to i16
  %2381 = load i8, ptr %2231, align 1, !tbaa !9
  %2382 = zext i8 %2381 to i16
  %2383 = shl nuw i16 %2382, 8
  %2384 = or i16 %2383, %2380
  %2385 = sext i16 %2384 to i32
  %2386 = load i8, ptr %2267, align 1, !tbaa !9
  %2387 = zext i8 %2386 to i16
  %2388 = load i8, ptr %2273, align 1, !tbaa !9
  %2389 = zext i8 %2388 to i16
  %2390 = shl nuw i16 %2389, 8
  %2391 = or i16 %2390, %2387
  %2392 = sext i16 %2391 to i32
  %2393 = load i8, ptr %2348, align 1, !tbaa !9
  %2394 = zext i8 %2393 to i16
  %2395 = load i8, ptr %2354, align 1, !tbaa !9
  %2396 = zext i8 %2395 to i16
  %2397 = shl nuw i16 %2396, 8
  %2398 = or i16 %2397, %2394
  %2399 = sext i16 %2398 to i32
  %2400 = mul nsw i32 %365, 5
  %2401 = xor i32 %2400, -1
  %2402 = add i32 %2127, %2401
  %2403 = and i32 %2130, %2402
  %2404 = sext i32 %2403 to i64
  %2405 = getelementptr inbounds i8, ptr %1306, i64 %2404
  %2406 = load i8, ptr %2405, align 1, !tbaa !9
  %2407 = zext i8 %2406 to i16
  %2408 = sub i32 %2127, %2400
  %2409 = and i32 %2130, %2408
  %2410 = sext i32 %2409 to i64
  %2411 = getelementptr inbounds i8, ptr %1306, i64 %2410
  %2412 = load i8, ptr %2411, align 1, !tbaa !9
  %2413 = zext i8 %2412 to i16
  %2414 = shl nuw i16 %2413, 8
  %2415 = or i16 %2414, %2407
  %2416 = sext i16 %2415 to i32
  %2417 = load i8, ptr %2178, align 1, !tbaa !9
  %2418 = zext i8 %2417 to i32
  %2419 = sub nsw i32 %2392, %2385
  %2420 = mul nsw i32 %2419, 10
  %2421 = sub nsw i32 %2378, %2399
  %2422 = mul nsw i32 %2421, 5
  %2423 = sub i32 %1947, %2418
  %2424 = add i32 %2423, %2420
  %2425 = add i32 %2424, %2416
  %2426 = add i32 %2425, %2422
  %2427 = ashr i32 %2426, 1
  %2428 = load i32, ptr @_ZZ8wavModelR5MixerE4scm8, align 8, !tbaa !74
  %2429 = and i32 %2428, -256
  %2430 = add i32 %2429, -256
  %2431 = and i32 %2430, %2427
  store i32 %2431, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm8, i64 0, i32 1), align 8, !tbaa !112
  br label %2432

2432:                                             ; preds = %897, %1916, %356
  %2433 = load i32, ptr @y, align 4, !tbaa !25
  %2434 = shl i32 %2433, 16
  %2435 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %2436 = load i16, ptr %2435, align 2, !tbaa !31
  %2437 = zext i16 %2436 to i32
  %2438 = or i32 %2434, 64
  %2439 = sub i32 %2438, %2437
  %2440 = lshr i32 %2439, 7
  %2441 = trunc i32 %2440 to i16
  %2442 = add i16 %2436, %2441
  store i16 %2442, ptr %2435, align 2, !tbaa !31
  %2443 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 1), align 8, !tbaa !112
  %2444 = load i32, ptr @c0, align 4, !tbaa !25
  %2445 = add nsw i32 %2444, %2443
  %2446 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %2447 = sext i32 %2445 to i64
  %2448 = getelementptr inbounds i16, ptr %2446, i64 %2447
  store ptr %2448, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm1, i64 0, i32 2), align 8, !tbaa !114
  %2449 = load i16, ptr %2448, align 2, !tbaa !31
  %2450 = lshr i16 %2449, 4
  %2451 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %2452 = zext i16 %2450 to i64
  %2453 = getelementptr inbounds i16, ptr %2451, i64 %2452
  %2454 = load i16, ptr %2453, align 2, !tbaa !31
  %2455 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %2456 = load i32, ptr %2455, align 8, !tbaa !64
  %2457 = add nsw i32 %2456, 1
  %2458 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %2459 = load ptr, ptr %2458, align 8, !tbaa !59
  %2460 = sext i32 %2456 to i64
  %2461 = getelementptr inbounds i16, ptr %2459, i64 %2460
  store i16 %2454, ptr %2461, align 2, !tbaa !31
  %2462 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 2), align 8, !tbaa !114
  %2463 = load i16, ptr %2462, align 2, !tbaa !31
  %2464 = zext i16 %2463 to i32
  %2465 = sub i32 %2438, %2464
  %2466 = lshr i32 %2465, 7
  %2467 = trunc i32 %2466 to i16
  %2468 = add i16 %2463, %2467
  store i16 %2468, ptr %2462, align 2, !tbaa !31
  %2469 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 1), align 8, !tbaa !112
  %2470 = add nsw i32 %2469, %2444
  %2471 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %2472 = sext i32 %2470 to i64
  %2473 = getelementptr inbounds i16, ptr %2471, i64 %2472
  store ptr %2473, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm2, i64 0, i32 2), align 8, !tbaa !114
  %2474 = load i16, ptr %2473, align 2, !tbaa !31
  %2475 = lshr i16 %2474, 4
  %2476 = zext i16 %2475 to i64
  %2477 = getelementptr inbounds i16, ptr %2451, i64 %2476
  %2478 = load i16, ptr %2477, align 2, !tbaa !31
  %2479 = add nsw i32 %2456, 2
  %2480 = sext i32 %2457 to i64
  %2481 = getelementptr inbounds i16, ptr %2459, i64 %2480
  store i16 %2478, ptr %2481, align 2, !tbaa !31
  %2482 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 2), align 8, !tbaa !114
  %2483 = load i16, ptr %2482, align 2, !tbaa !31
  %2484 = zext i16 %2483 to i32
  %2485 = sub i32 %2438, %2484
  %2486 = lshr i32 %2485, 7
  %2487 = trunc i32 %2486 to i16
  %2488 = add i16 %2483, %2487
  store i16 %2488, ptr %2482, align 2, !tbaa !31
  %2489 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 1), align 8, !tbaa !112
  %2490 = add nsw i32 %2489, %2444
  %2491 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %2492 = sext i32 %2490 to i64
  %2493 = getelementptr inbounds i16, ptr %2491, i64 %2492
  store ptr %2493, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm3, i64 0, i32 2), align 8, !tbaa !114
  %2494 = load i16, ptr %2493, align 2, !tbaa !31
  %2495 = lshr i16 %2494, 4
  %2496 = zext i16 %2495 to i64
  %2497 = getelementptr inbounds i16, ptr %2451, i64 %2496
  %2498 = load i16, ptr %2497, align 2, !tbaa !31
  %2499 = add nsw i32 %2456, 3
  %2500 = sext i32 %2479 to i64
  %2501 = getelementptr inbounds i16, ptr %2459, i64 %2500
  store i16 %2498, ptr %2501, align 2, !tbaa !31
  %2502 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm4, i64 0, i32 2), align 8, !tbaa !114
  %2503 = load i16, ptr %2502, align 2, !tbaa !31
  %2504 = zext i16 %2503 to i32
  %2505 = sub i32 %2438, %2504
  %2506 = lshr i32 %2505, 7
  %2507 = trunc i32 %2506 to i16
  %2508 = add i16 %2503, %2507
  store i16 %2508, ptr %2502, align 2, !tbaa !31
  %2509 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm4, i64 0, i32 1), align 8, !tbaa !112
  %2510 = add nsw i32 %2509, %2444
  %2511 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm4, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %2512 = sext i32 %2510 to i64
  %2513 = getelementptr inbounds i16, ptr %2511, i64 %2512
  store ptr %2513, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm4, i64 0, i32 2), align 8, !tbaa !114
  %2514 = load i16, ptr %2513, align 2, !tbaa !31
  %2515 = lshr i16 %2514, 4
  %2516 = zext i16 %2515 to i64
  %2517 = getelementptr inbounds i16, ptr %2451, i64 %2516
  %2518 = load i16, ptr %2517, align 2, !tbaa !31
  %2519 = add nsw i32 %2456, 4
  %2520 = sext i32 %2499 to i64
  %2521 = getelementptr inbounds i16, ptr %2459, i64 %2520
  store i16 %2518, ptr %2521, align 2, !tbaa !31
  %2522 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm5, i64 0, i32 2), align 8, !tbaa !114
  %2523 = load i16, ptr %2522, align 2, !tbaa !31
  %2524 = zext i16 %2523 to i32
  %2525 = sub i32 %2438, %2524
  %2526 = lshr i32 %2525, 7
  %2527 = trunc i32 %2526 to i16
  %2528 = add i16 %2523, %2527
  store i16 %2528, ptr %2522, align 2, !tbaa !31
  %2529 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm5, i64 0, i32 1), align 8, !tbaa !112
  %2530 = add nsw i32 %2529, %2444
  %2531 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm5, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %2532 = sext i32 %2530 to i64
  %2533 = getelementptr inbounds i16, ptr %2531, i64 %2532
  store ptr %2533, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm5, i64 0, i32 2), align 8, !tbaa !114
  %2534 = load i16, ptr %2533, align 2, !tbaa !31
  %2535 = lshr i16 %2534, 4
  %2536 = zext i16 %2535 to i64
  %2537 = getelementptr inbounds i16, ptr %2451, i64 %2536
  %2538 = load i16, ptr %2537, align 2, !tbaa !31
  %2539 = add nsw i32 %2456, 5
  %2540 = sext i32 %2519 to i64
  %2541 = getelementptr inbounds i16, ptr %2459, i64 %2540
  store i16 %2538, ptr %2541, align 2, !tbaa !31
  %2542 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm6, i64 0, i32 2), align 8, !tbaa !114
  %2543 = load i16, ptr %2542, align 2, !tbaa !31
  %2544 = zext i16 %2543 to i32
  %2545 = sub i32 %2438, %2544
  %2546 = lshr i32 %2545, 7
  %2547 = trunc i32 %2546 to i16
  %2548 = add i16 %2543, %2547
  store i16 %2548, ptr %2542, align 2, !tbaa !31
  %2549 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm6, i64 0, i32 1), align 8, !tbaa !112
  %2550 = add nsw i32 %2549, %2444
  %2551 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm6, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %2552 = sext i32 %2550 to i64
  %2553 = getelementptr inbounds i16, ptr %2551, i64 %2552
  store ptr %2553, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm6, i64 0, i32 2), align 8, !tbaa !114
  %2554 = load i16, ptr %2553, align 2, !tbaa !31
  %2555 = lshr i16 %2554, 4
  %2556 = zext i16 %2555 to i64
  %2557 = getelementptr inbounds i16, ptr %2451, i64 %2556
  %2558 = load i16, ptr %2557, align 2, !tbaa !31
  %2559 = add nsw i32 %2456, 6
  %2560 = sext i32 %2539 to i64
  %2561 = getelementptr inbounds i16, ptr %2459, i64 %2560
  store i16 %2558, ptr %2561, align 2, !tbaa !31
  %2562 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm7, i64 0, i32 2), align 8, !tbaa !114
  %2563 = load i16, ptr %2562, align 2, !tbaa !31
  %2564 = zext i16 %2563 to i32
  %2565 = sub i32 %2438, %2564
  %2566 = lshr i32 %2565, 7
  %2567 = trunc i32 %2566 to i16
  %2568 = add i16 %2563, %2567
  store i16 %2568, ptr %2562, align 2, !tbaa !31
  %2569 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm7, i64 0, i32 1), align 8, !tbaa !112
  %2570 = add nsw i32 %2569, %2444
  %2571 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm7, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %2572 = sext i32 %2570 to i64
  %2573 = getelementptr inbounds i16, ptr %2571, i64 %2572
  store ptr %2573, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm7, i64 0, i32 2), align 8, !tbaa !114
  %2574 = load i16, ptr %2573, align 2, !tbaa !31
  %2575 = lshr i16 %2574, 4
  %2576 = zext i16 %2575 to i64
  %2577 = getelementptr inbounds i16, ptr %2451, i64 %2576
  %2578 = load i16, ptr %2577, align 2, !tbaa !31
  %2579 = add nsw i32 %2456, 7
  %2580 = sext i32 %2559 to i64
  %2581 = getelementptr inbounds i16, ptr %2459, i64 %2580
  store i16 %2578, ptr %2581, align 2, !tbaa !31
  %2582 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm8, i64 0, i32 2), align 8, !tbaa !114
  %2583 = load i16, ptr %2582, align 2, !tbaa !31
  %2584 = zext i16 %2583 to i32
  %2585 = sub i32 %2438, %2584
  %2586 = lshr i32 %2585, 7
  %2587 = trunc i32 %2586 to i16
  %2588 = add i16 %2583, %2587
  store i16 %2588, ptr %2582, align 2, !tbaa !31
  %2589 = load i32, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm8, i64 0, i32 1), align 8, !tbaa !112
  %2590 = add nsw i32 %2589, %2444
  %2591 = load ptr, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm8, i64 0, i32 0, i32 3), align 8, !tbaa !76
  %2592 = sext i32 %2590 to i64
  %2593 = getelementptr inbounds i16, ptr %2591, i64 %2592
  store ptr %2593, ptr getelementptr inbounds (%class.SmallStationaryContextMap, ptr @_ZZ8wavModelR5MixerE4scm8, i64 0, i32 2), align 8, !tbaa !114
  %2594 = load i16, ptr %2593, align 2, !tbaa !31
  %2595 = lshr i16 %2594, 4
  %2596 = zext i16 %2595 to i64
  %2597 = getelementptr inbounds i16, ptr %2451, i64 %2596
  %2598 = load i16, ptr %2597, align 2, !tbaa !31
  %2599 = add nsw i32 %2456, 8
  store i32 %2599, ptr %2455, align 8, !tbaa !64
  %2600 = sext i32 %2579 to i64
  %2601 = getelementptr inbounds i16, ptr %2459, i64 %2600
  store i16 %2598, ptr %2601, align 2, !tbaa !31
  %2602 = load i32, ptr @bpos, align 4, !tbaa !25
  %2603 = load i32, ptr @pos, align 4, !tbaa !25
  %2604 = add nsw i32 %2603, -1
  %2605 = load i32, ptr @buf, align 8, !tbaa !20
  %2606 = add nsw i32 %2605, -1
  %2607 = and i32 %2606, %2604
  %2608 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %2609 = sext i32 %2607 to i64
  %2610 = getelementptr inbounds i8, ptr %2608, i64 %2609
  %2611 = load i8, ptr %2610, align 1, !tbaa !9
  %2612 = zext i8 %2611 to i32
  %2613 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8wavModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %2444, i32 noundef %2602, i32 noundef %2612, i32 noundef %2433)
  %2614 = load i32, ptr @_ZZ8wavModelR5MixerE8channels, align 4, !tbaa !25
  %2615 = shl i32 %2614, 8
  %2616 = load i32, ptr @_ZZ8wavModelR5MixerE4bits, align 4, !tbaa !25
  %2617 = or i32 %2615, %2616
  br label %2618

2618:                                             ; preds = %2432, %355
  %2619 = phi i32 [ 0, %355 ], [ %2617, %2432 ]
  call void @llvm.lifetime.end.p0(i64 19208, ptr nonnull %3) #39
  call void @llvm.lifetime.end.p0(i64 38416, ptr nonnull %2) #39
  ret i32 %2619

2620:                                             ; preds = %149, %147, %145, %143, %141, %139, %137, %135, %133
  %2621 = phi ptr [ @_ZGVZ8wavModelR5MixerE2cm, %149 ], [ @_ZGVZ8wavModelR5MixerE4scm8, %147 ], [ @_ZGVZ8wavModelR5MixerE4scm7, %145 ], [ @_ZGVZ8wavModelR5MixerE4scm6, %143 ], [ @_ZGVZ8wavModelR5MixerE4scm5, %141 ], [ @_ZGVZ8wavModelR5MixerE4scm4, %139 ], [ @_ZGVZ8wavModelR5MixerE4scm3, %137 ], [ @_ZGVZ8wavModelR5MixerE4scm2, %135 ], [ @_ZGVZ8wavModelR5MixerE4scm1, %133 ]
  %2622 = phi { ptr, i32 } [ %150, %149 ], [ %148, %147 ], [ %146, %145 ], [ %144, %143 ], [ %142, %141 ], [ %140, %139 ], [ %138, %137 ], [ %136, %135 ], [ %134, %133 ]
  tail call void @__cxa_guard_abort(ptr nonnull %2621) #39
  call void @llvm.lifetime.end.p0(i64 19208, ptr nonnull %3) #39
  call void @llvm.lifetime.end.p0(i64 38416, ptr nonnull %2) #39
  resume { ptr, i32 } %2622
}

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_Z1Xii(i32 noundef %0, i32 noundef %1) local_unnamed_addr #17 comdat {
  %3 = load i32, ptr @_ZL5wmode, align 4, !tbaa !25
  switch i32 %3, label %104 [
    i32 18, label %4
    i32 17, label %52
    i32 10, label %74
  ]

4:                                                ; preds = %2
  %5 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %6 = icmp slt i32 %5, %0
  %7 = add i32 %1, %0
  br i1 %6, label %29, label %8

8:                                                ; preds = %4
  %9 = shl i32 %7, 2
  %10 = load i32, ptr @pos, align 4, !tbaa !25
  %11 = sub i32 %10, %9
  %12 = load i32, ptr @buf, align 8, !tbaa !20
  %13 = add nsw i32 %12, -1
  %14 = and i32 %13, %11
  %15 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %16 = sext i32 %14 to i64
  %17 = getelementptr inbounds i8, ptr %15, i64 %16
  %18 = load i8, ptr %17, align 1, !tbaa !9
  %19 = zext i8 %18 to i16
  %20 = add i32 %11, 1
  %21 = and i32 %13, %20
  %22 = sext i32 %21 to i64
  %23 = getelementptr inbounds i8, ptr %15, i64 %22
  %24 = load i8, ptr %23, align 1, !tbaa !9
  %25 = zext i8 %24 to i16
  %26 = shl nuw i16 %25, 8
  %27 = or i16 %26, %19
  %28 = sext i16 %27 to i32
  br label %116

29:                                               ; preds = %4
  %30 = sub i32 %5, %7
  %31 = shl i32 %30, 2
  %32 = or i32 %31, 2
  %33 = load i32, ptr @pos, align 4, !tbaa !25
  %34 = add i32 %32, %33
  %35 = load i32, ptr @buf, align 8, !tbaa !20
  %36 = add nsw i32 %35, -1
  %37 = and i32 %36, %34
  %38 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %39 = sext i32 %37 to i64
  %40 = getelementptr inbounds i8, ptr %38, i64 %39
  %41 = load i8, ptr %40, align 1, !tbaa !9
  %42 = zext i8 %41 to i16
  %43 = add i32 %34, 1
  %44 = and i32 %36, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, ptr %38, i64 %45
  %47 = load i8, ptr %46, align 1, !tbaa !9
  %48 = zext i8 %47 to i16
  %49 = shl nuw i16 %48, 8
  %50 = or i16 %49, %42
  %51 = sext i16 %50 to i32
  br label %116

52:                                               ; preds = %2
  %53 = add nsw i32 %1, %0
  %54 = shl i32 %53, 1
  %55 = load i32, ptr @pos, align 4, !tbaa !25
  %56 = sub i32 %55, %54
  %57 = load i32, ptr @buf, align 8, !tbaa !20
  %58 = add nsw i32 %57, -1
  %59 = and i32 %58, %56
  %60 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %61 = sext i32 %59 to i64
  %62 = getelementptr inbounds i8, ptr %60, i64 %61
  %63 = load i8, ptr %62, align 1, !tbaa !9
  %64 = zext i8 %63 to i16
  %65 = add i32 %56, 1
  %66 = and i32 %58, %65
  %67 = sext i32 %66 to i64
  %68 = getelementptr inbounds i8, ptr %60, i64 %67
  %69 = load i8, ptr %68, align 1, !tbaa !9
  %70 = zext i8 %69 to i16
  %71 = shl nuw i16 %70, 8
  %72 = or i16 %71, %64
  %73 = sext i16 %72 to i32
  br label %116

74:                                               ; preds = %2
  %75 = load i32, ptr @_ZL1S, align 4, !tbaa !25
  %76 = icmp slt i32 %75, %0
  %77 = add i32 %1, %0
  br i1 %76, label %90, label %78

78:                                               ; preds = %74
  %79 = shl i32 %77, 1
  %80 = load i32, ptr @pos, align 4, !tbaa !25
  %81 = sub nsw i32 %80, %79
  %82 = load i32, ptr @buf, align 8, !tbaa !20
  %83 = add nsw i32 %82, -1
  %84 = and i32 %83, %81
  %85 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %86 = sext i32 %84 to i64
  %87 = getelementptr inbounds i8, ptr %85, i64 %86
  %88 = load i8, ptr %87, align 1, !tbaa !9
  %89 = zext i8 %88 to i32
  br label %116

90:                                               ; preds = %74
  %91 = sub i32 %75, %77
  %92 = shl i32 %91, 1
  %93 = or i32 %92, 1
  %94 = load i32, ptr @pos, align 4, !tbaa !25
  %95 = add i32 %93, %94
  %96 = load i32, ptr @buf, align 8, !tbaa !20
  %97 = add nsw i32 %96, -1
  %98 = and i32 %97, %95
  %99 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %100 = sext i32 %98 to i64
  %101 = getelementptr inbounds i8, ptr %99, i64 %100
  %102 = load i8, ptr %101, align 1, !tbaa !9
  %103 = zext i8 %102 to i32
  br label %116

104:                                              ; preds = %2
  %105 = load i32, ptr @pos, align 4, !tbaa !25
  %106 = add i32 %1, %0
  %107 = sub i32 %105, %106
  %108 = load i32, ptr @buf, align 8, !tbaa !20
  %109 = add nsw i32 %108, -1
  %110 = and i32 %109, %107
  %111 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %112 = sext i32 %110 to i64
  %113 = getelementptr inbounds i8, ptr %111, i64 %112
  %114 = load i8, ptr %113, align 1, !tbaa !9
  %115 = zext i8 %114 to i32
  br label %116

116:                                              ; preds = %104, %90, %78, %52, %29, %8
  %117 = phi i32 [ %28, %8 ], [ %51, %29 ], [ %73, %52 ], [ %89, %78 ], [ %103, %90 ], [ %115, %104 ]
  ret i32 %117
}

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.fmuladd.f64(double, double, double) #22

; Function Attrs: mustprogress nofree nounwind willreturn memory(write)
declare double @sqrt(double noundef) local_unnamed_addr #23

; Function Attrs: mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare double @llvm.floor.f64(double) #22

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable
define dso_local noundef i32 @_Z6execxtii(i32 noundef %0, i32 noundef %1) local_unnamed_addr #1 {
  %3 = load i32, ptr @pos, align 4, !tbaa !25
  %4 = sub i32 %3, %0
  %5 = add i32 %4, -2
  %6 = load i32, ptr @buf, align 8, !tbaa !20
  %7 = add nsw i32 %6, -1
  %8 = and i32 %7, %5
  %9 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %10 = sext i32 %8 to i64
  %11 = getelementptr inbounds i8, ptr %9, i64 %10
  %12 = load i8, ptr %11, align 1, !tbaa !9
  %13 = add i32 %4, -3
  %14 = and i32 %7, %13
  %15 = sext i32 %14 to i64
  %16 = getelementptr inbounds i8, ptr %9, i64 %15
  %17 = load i8, ptr %16, align 1, !tbaa !9
  %18 = xor i32 %0, -1
  %19 = add i32 %3, %18
  %20 = and i32 %7, %19
  %21 = sext i32 %20 to i64
  %22 = getelementptr inbounds i8, ptr %9, i64 %21
  %23 = load i8, ptr %22, align 1, !tbaa !9
  %24 = icmp eq i32 %0, 0
  br i1 %24, label %33, label %25

25:                                               ; preds = %2
  %26 = and i32 %7, %4
  %27 = sext i32 %26 to i64
  %28 = getelementptr inbounds i8, ptr %9, i64 %27
  %29 = load i8, ptr %28, align 1, !tbaa !9
  %30 = zext i8 %29 to i32
  %31 = shl nuw nsw i32 %30, 12
  %32 = and i32 %31, 815104
  br label %33

33:                                               ; preds = %2, %25
  %34 = phi i32 [ %32, %25 ], [ 0, %2 ]
  %35 = zext i8 %23 to i32
  %36 = icmp eq i8 %12, 102
  %37 = select i1 %36, i32 2, i32 0
  %38 = icmp eq i8 %12, 15
  %39 = zext i1 %38 to i32
  %40 = or i32 %37, %39
  %41 = icmp eq i8 %12, 103
  %42 = select i1 %41, i32 3, i32 0
  %43 = add nuw nsw i32 %40, %42
  %44 = icmp eq i8 %17, 15
  %45 = select i1 %44, i32 4, i32 0
  %46 = add nuw nsw i32 %43, %45
  %47 = icmp eq i8 %17, 102
  %48 = select i1 %47, i32 8, i32 0
  %49 = add nuw nsw i32 %46, %48
  %50 = icmp eq i8 %17, 103
  %51 = select i1 %50, i32 12, i32 0
  %52 = add nuw nsw i32 %49, %51
  %53 = shl nuw nsw i32 %35, 4
  %54 = shl i32 %1, 20
  %55 = or i32 %53, %54
  %56 = or i32 %55, %52
  %57 = or i32 %56, %34
  ret i32 %57
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z8exeModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ8exeModelR5MixerE2cm acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8exeModelR5MixerE2cm) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @level, align 4, !tbaa !25
  %9 = shl i32 65536, %8
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8exeModelR5MixerE2cm, i32 noundef %9, i32 noundef 12)
          to label %10 unwind label %65

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ8exeModelR5MixerE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8exeModelR5MixerE2cm) #39
  br label %12

12:                                               ; preds = %10, %4, %1
  %13 = load i32, ptr @bpos, align 4, !tbaa !25
  %14 = icmp eq i32 %13, 0
  %15 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  br i1 %14, label %16, label %140

16:                                               ; preds = %12
  %17 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8exeModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %18 = load i32, ptr @buf, align 8, !tbaa !20
  %19 = add nsw i32 %18, -1
  %20 = load i32, ptr @pos, align 4, !tbaa !25
  %21 = add i32 %20, -3
  %22 = and i32 %19, %21
  %23 = sext i32 %22 to i64
  %24 = getelementptr inbounds i8, ptr %15, i64 %23
  %25 = load i8, ptr %24, align 1, !tbaa !9
  %26 = add i32 %20, -2
  %27 = and i32 %19, %26
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, ptr %15, i64 %28
  %30 = load i8, ptr %29, align 1, !tbaa !9
  %31 = add i32 %20, -1
  %32 = and i32 %19, %31
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds i8, ptr %15, i64 %33
  %35 = load i8, ptr %34, align 1, !tbaa !9
  %36 = zext i8 %35 to i32
  %37 = icmp eq i8 %30, 102
  %38 = select i1 %37, i32 2, i32 0
  %39 = icmp eq i8 %30, 15
  %40 = zext i1 %39 to i32
  %41 = or i32 %38, %40
  %42 = icmp eq i8 %30, 103
  %43 = select i1 %42, i32 3, i32 0
  %44 = add nuw nsw i32 %41, %43
  %45 = icmp eq i8 %25, 15
  %46 = select i1 %45, i32 4, i32 0
  %47 = add nuw nsw i32 %44, %46
  %48 = icmp eq i8 %25, 102
  %49 = select i1 %48, i32 8, i32 0
  %50 = add nuw nsw i32 %47, %49
  %51 = icmp eq i8 %25, 103
  %52 = select i1 %51, i32 12, i32 0
  %53 = add nuw nsw i32 %50, %52
  %54 = shl nuw nsw i32 %36, 4
  %55 = or i32 %53, %54
  %56 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8exeModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %57 = add nsw i32 %56, 1
  store i32 %57, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8exeModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %58 = mul i32 %55, 987654323
  %59 = add i32 %58, %56
  %60 = tail call i32 @llvm.fshl.i32(i32 %59, i32 %59, i32 16)
  %61 = mul i32 %60, 123456791
  %62 = add i32 %61, %56
  %63 = sext i32 %56 to i64
  %64 = getelementptr inbounds i32, ptr %17, i64 %63
  store i32 %62, ptr %64, align 4, !tbaa !25
  br label %67

65:                                               ; preds = %7
  %66 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ8exeModelR5MixerE2cm) #39
  resume { ptr, i32 } %66

67:                                               ; preds = %16, %67
  %68 = phi i32 [ 1, %16 ], [ %136, %67 ]
  %69 = load i32, ptr @pos, align 4, !tbaa !25
  %70 = add nsw i32 %69, -1
  %71 = load i32, ptr @buf, align 8, !tbaa !20
  %72 = add nsw i32 %71, -1
  %73 = and i32 %72, %70
  %74 = sext i32 %73 to i64
  %75 = getelementptr inbounds i8, ptr %15, i64 %74
  %76 = load i8, ptr %75, align 1, !tbaa !9
  %77 = zext i8 %76 to i32
  %78 = icmp ugt i32 %68, 4
  %79 = shl nuw nsw i32 %77, 20
  %80 = sub i32 %69, %68
  %81 = add i32 %80, -2
  %82 = and i32 %72, %81
  %83 = sext i32 %82 to i64
  %84 = getelementptr inbounds i8, ptr %15, i64 %83
  %85 = load i8, ptr %84, align 1, !tbaa !9
  %86 = add i32 %80, -3
  %87 = and i32 %72, %86
  %88 = sext i32 %87 to i64
  %89 = getelementptr inbounds i8, ptr %15, i64 %88
  %90 = load i8, ptr %89, align 1, !tbaa !9
  %91 = xor i32 %68, -1
  %92 = add i32 %69, %91
  %93 = and i32 %72, %92
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds i8, ptr %15, i64 %94
  %96 = load i8, ptr %95, align 1, !tbaa !9
  %97 = and i32 %72, %80
  %98 = sext i32 %97 to i64
  %99 = getelementptr inbounds i8, ptr %15, i64 %98
  %100 = load i8, ptr %99, align 1, !tbaa !9
  %101 = zext i8 %100 to i32
  %102 = shl nuw nsw i32 %101, 12
  %103 = and i32 %102, 815104
  %104 = zext i8 %96 to i32
  %105 = icmp eq i8 %85, 102
  %106 = select i1 %105, i32 2, i32 0
  %107 = icmp eq i8 %85, 15
  %108 = zext i1 %107 to i32
  %109 = or i32 %106, %108
  %110 = icmp eq i8 %85, 103
  %111 = select i1 %110, i32 3, i32 0
  %112 = add nuw nsw i32 %109, %111
  %113 = icmp eq i8 %90, 15
  %114 = select i1 %113, i32 4, i32 0
  %115 = add nuw nsw i32 %112, %114
  %116 = icmp eq i8 %90, 102
  %117 = select i1 %116, i32 8, i32 0
  %118 = add nuw nsw i32 %115, %117
  %119 = icmp eq i8 %90, 103
  %120 = select i1 %119, i32 12, i32 0
  %121 = add nuw nsw i32 %118, %120
  %122 = shl nuw nsw i32 %104, 4
  %123 = select i1 %78, i32 %79, i32 0
  %124 = or i32 %122, %123
  %125 = or i32 %121, %124
  %126 = or i32 %125, %103
  %127 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8exeModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %128 = add nsw i32 %127, 1
  store i32 %128, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ8exeModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %129 = mul i32 %126, 987654323
  %130 = add i32 %129, %127
  %131 = tail call i32 @llvm.fshl.i32(i32 %130, i32 %130, i32 16)
  %132 = mul i32 %131, 123456791
  %133 = add i32 %132, %127
  %134 = sext i32 %127 to i64
  %135 = getelementptr inbounds i32, ptr %17, i64 %134
  store i32 %133, ptr %135, align 4, !tbaa !25
  %136 = add nuw nsw i32 %68, 1
  %137 = icmp eq i32 %136, 12
  br i1 %137, label %138, label %67, !llvm.loop !204

138:                                              ; preds = %67
  %139 = load i32, ptr @bpos, align 4, !tbaa !25
  br label %140

140:                                              ; preds = %12, %138
  %141 = phi i32 [ %139, %138 ], [ %13, %12 ]
  %142 = load i32, ptr @c0, align 4, !tbaa !25
  %143 = load i32, ptr @pos, align 4, !tbaa !25
  %144 = add nsw i32 %143, -1
  %145 = load i32, ptr @buf, align 8, !tbaa !20
  %146 = add nsw i32 %145, -1
  %147 = and i32 %146, %144
  %148 = sext i32 %147 to i64
  %149 = getelementptr inbounds i8, ptr %15, i64 %148
  %150 = load i8, ptr %149, align 1, !tbaa !9
  %151 = zext i8 %150 to i32
  %152 = load i32, ptr @y, align 4, !tbaa !25
  %153 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ8exeModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %142, i32 noundef %141, i32 noundef %151, i32 noundef %152)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z13indirectModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ13indirectModelR5MixerE2cm acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13indirectModelR5MixerE2cm) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @level, align 4, !tbaa !25
  %9 = shl i32 65536, %8
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13indirectModelR5MixerE2cm, i32 noundef %9, i32 noundef 6)
          to label %10 unwind label %105

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ13indirectModelR5MixerE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13indirectModelR5MixerE2cm) #39
  br label %12

12:                                               ; preds = %10, %4, %1
  %13 = load i32, ptr @bpos, align 4, !tbaa !25
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %107

15:                                               ; preds = %12
  %16 = load i32, ptr @c4, align 4, !tbaa !25
  %17 = and i32 %16, 65535
  %18 = and i32 %16, 255
  %19 = lshr i32 %17, 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds [256 x i32], ptr @_ZZ13indirectModelR5MixerE2t1, i64 0, i64 %20
  %22 = load i32, ptr %21, align 4, !tbaa !25
  %23 = shl i32 %22, 8
  %24 = or i32 %23, %18
  store i32 %24, ptr %21, align 4, !tbaa !25
  %25 = lshr i32 %16, 8
  %26 = and i32 %25, 65535
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds [65536 x i16], ptr @_ZZ13indirectModelR5MixerE2t2, i64 0, i64 %27
  %29 = load i16, ptr %28, align 2, !tbaa !31
  %30 = zext i16 %29 to i32
  %31 = shl nuw nsw i32 %30, 8
  %32 = or i32 %31, %18
  %33 = trunc i32 %32 to i16
  store i16 %33, ptr %28, align 2, !tbaa !31
  %34 = zext i32 %18 to i64
  %35 = getelementptr inbounds [256 x i32], ptr @_ZZ13indirectModelR5MixerE2t1, i64 0, i64 %34
  %36 = load i32, ptr %35, align 4, !tbaa !25
  %37 = shl i32 %36, 8
  %38 = or i32 %37, %18
  %39 = and i32 %38, 65535
  %40 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %41 = add nsw i32 %40, 1
  store i32 %41, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %42 = mul i32 %39, 987654323
  %43 = add i32 %42, %40
  %44 = tail call i32 @llvm.fshl.i32(i32 %43, i32 %43, i32 16)
  %45 = mul i32 %44, 123456791
  %46 = add i32 %45, %40
  %47 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %48 = sext i32 %40 to i64
  %49 = getelementptr inbounds i32, ptr %47, i64 %48
  store i32 %46, ptr %49, align 4, !tbaa !25
  %50 = and i32 %38, 16777215
  %51 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %52 = add nsw i32 %51, 1
  store i32 %52, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %53 = mul i32 %50, 987654323
  %54 = add i32 %51, %53
  %55 = tail call i32 @llvm.fshl.i32(i32 %54, i32 %54, i32 16)
  %56 = mul i32 %55, 123456791
  %57 = add i32 %56, %51
  %58 = sext i32 %51 to i64
  %59 = getelementptr inbounds i32, ptr %47, i64 %58
  store i32 %57, ptr %59, align 4, !tbaa !25
  %60 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %61 = add nsw i32 %60, 1
  store i32 %61, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %62 = mul i32 %38, 987654323
  %63 = add i32 %60, %62
  %64 = tail call i32 @llvm.fshl.i32(i32 %63, i32 %63, i32 16)
  %65 = mul i32 %64, 123456791
  %66 = add i32 %65, %60
  %67 = sext i32 %60 to i64
  %68 = getelementptr inbounds i32, ptr %47, i64 %67
  store i32 %66, ptr %68, align 4, !tbaa !25
  %69 = and i32 %37, 65280
  %70 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %71 = add nsw i32 %70, 1
  store i32 %71, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %72 = mul i32 %69, 987654323
  %73 = add i32 %70, %72
  %74 = tail call i32 @llvm.fshl.i32(i32 %73, i32 %73, i32 16)
  %75 = mul i32 %74, 123456791
  %76 = add i32 %75, %70
  %77 = sext i32 %70 to i64
  %78 = getelementptr inbounds i32, ptr %47, i64 %77
  store i32 %76, ptr %78, align 4, !tbaa !25
  %79 = zext i32 %17 to i64
  %80 = getelementptr inbounds [65536 x i16], ptr @_ZZ13indirectModelR5MixerE2t2, i64 0, i64 %79
  %81 = load i16, ptr %80, align 2, !tbaa !31
  %82 = zext i16 %81 to i32
  %83 = shl nuw i32 %82, 16
  %84 = or i32 %83, %17
  %85 = and i32 %84, 16777215
  %86 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %87 = add nsw i32 %86, 1
  store i32 %87, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %88 = mul i32 %85, 987654323
  %89 = add i32 %88, %86
  %90 = tail call i32 @llvm.fshl.i32(i32 %89, i32 %89, i32 16)
  %91 = mul i32 %90, 123456791
  %92 = add i32 %91, %86
  %93 = sext i32 %86 to i64
  %94 = getelementptr inbounds i32, ptr %47, i64 %93
  store i32 %92, ptr %94, align 4, !tbaa !25
  %95 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %96 = add nsw i32 %95, 1
  store i32 %96, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13indirectModelR5MixerE2cm, i64 0, i32 8), align 8, !tbaa !102
  %97 = mul i32 %84, 987654323
  %98 = add i32 %95, %97
  %99 = tail call i32 @llvm.fshl.i32(i32 %98, i32 %98, i32 16)
  %100 = mul i32 %99, 123456791
  %101 = add i32 %100, %95
  %102 = sext i32 %95 to i64
  %103 = getelementptr inbounds i32, ptr %47, i64 %102
  store i32 %101, ptr %103, align 4, !tbaa !25
  %104 = load i32, ptr @bpos, align 4, !tbaa !25
  br label %107

105:                                              ; preds = %7
  %106 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ13indirectModelR5MixerE2cm) #39
  resume { ptr, i32 } %106

107:                                              ; preds = %15, %12
  %108 = phi i32 [ %104, %15 ], [ %13, %12 ]
  %109 = load i32, ptr @c0, align 4, !tbaa !25
  %110 = load i32, ptr @pos, align 4, !tbaa !25
  %111 = add nsw i32 %110, -1
  %112 = load i32, ptr @buf, align 8, !tbaa !20
  %113 = add nsw i32 %112, -1
  %114 = and i32 %113, %111
  %115 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %116 = sext i32 %114 to i64
  %117 = getelementptr inbounds i8, ptr %115, i64 %116
  %118 = load i8, ptr %117, align 1, !tbaa !9
  %119 = zext i8 %118 to i32
  %120 = load i32, ptr @y, align 4, !tbaa !25
  %121 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13indirectModelR5MixerE2cm, ptr noundef nonnull align 8 dereferenceable(136) %0, i32 noundef %109, i32 noundef %108, i32 noundef %119, i32 noundef %120)
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_Z8dmcModelR5Mixer(ptr nocapture noundef nonnull align 8 dereferenceable(136) %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ8dmcModelR5MixerE1t acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %12, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8dmcModelR5MixerE1t) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = load i32, ptr @level, align 4, !tbaa !25
  %9 = shl i32 131072, %8
  invoke void @_ZN5ArrayI7DMCNodeLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ8dmcModelR5MixerE1t, i32 noundef %9)
          to label %10 unwind label %121

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayI7DMCNodeLi0EED2Ev, ptr nonnull @_ZZ8dmcModelR5MixerE1t, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8dmcModelR5MixerE1t) #39
  br label %12

12:                                               ; preds = %10, %4, %1
  %13 = load atomic i8, ptr @_ZGVZ8dmcModelR5MixerE2sm acquire, align 8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %21, !prof !110

15:                                               ; preds = %12
  %16 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ8dmcModelR5MixerE2sm) #39
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  invoke void @_ZN8StateMapC2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZ8dmcModelR5MixerE2sm, i32 noundef 256)
          to label %19 unwind label %123

19:                                               ; preds = %18
  %20 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN8StateMapD2Ev, ptr nonnull @_ZZ8dmcModelR5MixerE2sm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ8dmcModelR5MixerE2sm) #39
  br label %21

21:                                               ; preds = %19, %15, %12
  %22 = load i32, ptr @_ZZ8dmcModelR5MixerE3top, align 4, !tbaa !25
  %23 = icmp sgt i32 %22, 0
  %24 = load i32, ptr @_ZZ8dmcModelR5MixerE1t, align 8
  %25 = icmp slt i32 %22, %24
  %26 = select i1 %23, i1 %25, i1 false
  br i1 %26, label %27, label %127

27:                                               ; preds = %21
  %28 = load i32, ptr @_ZZ8dmcModelR5MixerE4curr, align 4, !tbaa !25
  %29 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !205
  %30 = sext i32 %28 to i64
  %31 = getelementptr inbounds %struct.DMCNode, ptr %29, i64 %30
  %32 = load i32, ptr @y, align 4, !tbaa !25
  %33 = sext i32 %32 to i64
  %34 = getelementptr inbounds [2 x i32], ptr %31, i64 0, i64 %33
  %35 = load i32, ptr %34, align 4, !tbaa !25
  %36 = icmp eq i32 %32, 0
  %37 = getelementptr inbounds %struct.DMCNode, ptr %29, i64 %30, i32 2
  %38 = load i24, ptr %37, align 1
  %39 = and i24 %38, 4095
  %40 = lshr i24 %38, 12
  %41 = select i1 %36, i24 %39, i24 %40
  %42 = zext i24 %41 to i32
  %43 = sext i32 %35 to i64
  %44 = getelementptr inbounds %struct.DMCNode, ptr %29, i64 %43, i32 2
  %45 = load i24, ptr %44, align 1
  %46 = and i24 %45, 4095
  %47 = lshr i24 %45, 12
  %48 = add nuw nsw i24 %46, %47
  %49 = zext i24 %48 to i32
  %50 = load i32, ptr @_ZZ8dmcModelR5MixerE9threshold, align 4, !tbaa !25
  %51 = shl nuw nsw i32 %50, 1
  %52 = icmp sgt i32 %51, %42
  br i1 %52, label %127, label %53

53:                                               ; preds = %27
  %54 = sub nsw i32 %49, %42
  %55 = mul nuw nsw i32 %50, 3
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %127, label %57

57:                                               ; preds = %53
  %58 = shl nuw nsw i32 %42, 12
  %59 = udiv i32 %58, %49
  %60 = zext i24 %46 to i32
  %61 = mul nsw i32 %59, %60
  %62 = zext i32 %22 to i64
  %63 = getelementptr inbounds %struct.DMCNode, ptr %29, i64 %62, i32 2
  %64 = trunc i32 %61 to i24
  %65 = lshr i24 %64, 12
  %66 = load i24, ptr %63, align 1
  %67 = and i24 %66, -4096
  %68 = or i24 %65, %67
  store i24 %68, ptr %63, align 1
  %69 = zext i24 %65 to i32
  %70 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !205
  %71 = getelementptr inbounds %struct.DMCNode, ptr %70, i64 %43, i32 2
  %72 = load i24, ptr %71, align 1
  %73 = zext i24 %72 to i32
  %74 = sub nsw i32 %73, %69
  %75 = trunc i32 %74 to i24
  %76 = and i24 %75, 4095
  %77 = and i24 %72, -4096
  %78 = or i24 %76, %77
  store i24 %78, ptr %71, align 1
  %79 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !205
  %80 = getelementptr inbounds %struct.DMCNode, ptr %79, i64 %43, i32 2
  %81 = load i24, ptr %80, align 1
  %82 = lshr i24 %81, 12
  %83 = zext i24 %82 to i32
  %84 = mul nsw i32 %59, %83
  %85 = getelementptr inbounds %struct.DMCNode, ptr %79, i64 %62, i32 2
  %86 = trunc i32 %84 to i24
  %87 = lshr i32 %84, 12
  %88 = load i24, ptr %85, align 1
  %89 = and i24 %86, -4096
  %90 = and i24 %88, 4095
  %91 = or i24 %89, %90
  store i24 %91, ptr %85, align 1
  %92 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !205
  %93 = getelementptr inbounds %struct.DMCNode, ptr %92, i64 %43, i32 2
  %94 = load i24, ptr %93, align 1
  %95 = lshr i24 %94, 12
  %96 = zext i24 %95 to i32
  %97 = sub nsw i32 %96, %87
  %98 = trunc i32 %97 to i24
  %99 = shl i24 %98, 12
  %100 = and i24 %94, 4095
  %101 = or i24 %99, %100
  store i24 %101, ptr %93, align 1
  %102 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !205
  %103 = getelementptr inbounds %struct.DMCNode, ptr %102, i64 %43
  %104 = getelementptr inbounds %struct.DMCNode, ptr %102, i64 %62
  %105 = load <2 x i32>, ptr %103, align 4, !tbaa !25
  store <2 x i32> %105, ptr %104, align 4, !tbaa !25
  %106 = getelementptr inbounds %struct.DMCNode, ptr %102, i64 %43, i32 1
  %107 = load i8, ptr %106, align 4, !tbaa !207
  %108 = getelementptr inbounds %struct.DMCNode, ptr %102, i64 %62, i32 1
  store i8 %107, ptr %108, align 4, !tbaa !207
  %109 = getelementptr inbounds %struct.DMCNode, ptr %102, i64 %30
  %110 = load i32, ptr @y, align 4, !tbaa !25
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds [2 x i32], ptr %109, i64 0, i64 %111
  store i32 %22, ptr %112, align 4, !tbaa !25
  %113 = add nuw nsw i32 %22, 1
  store i32 %113, ptr @_ZZ8dmcModelR5MixerE3top, align 4, !tbaa !25
  %114 = load i32, ptr @level, align 4, !tbaa !25
  %115 = shl i32 131072, %114
  %116 = icmp eq i32 %113, %115
  %117 = shl i32 65536, %114
  %118 = mul nsw i32 %117, 3
  %119 = icmp eq i32 %113, %118
  %120 = or i1 %116, %119
  br i1 %120, label %125, label %127

121:                                              ; preds = %7
  %122 = landingpad { ptr, i32 }
          cleanup
  br label %285

123:                                              ; preds = %18
  %124 = landingpad { ptr, i32 }
          cleanup
  br label %285

125:                                              ; preds = %57
  %126 = select i1 %119, i32 768, i32 512
  store i32 %126, ptr @_ZZ8dmcModelR5MixerE9threshold, align 4, !tbaa !25
  br label %127

127:                                              ; preds = %125, %57, %27, %53, %21
  %128 = phi i32 [ %113, %125 ], [ %113, %57 ], [ %22, %27 ], [ %22, %53 ], [ %22, %21 ]
  %129 = load i32, ptr @_ZZ8dmcModelR5MixerE1t, align 8, !tbaa !209
  %130 = icmp eq i32 %128, %129
  %131 = load i32, ptr @bpos, align 4
  %132 = icmp eq i32 %131, 1
  %133 = select i1 %130, i1 %132, i1 false
  br i1 %133, label %134, label %135

134:                                              ; preds = %127
  store i32 0, ptr @_ZZ8dmcModelR5MixerE3top, align 4, !tbaa !25
  br label %137

135:                                              ; preds = %127
  %136 = icmp eq i32 %128, 0
  br i1 %136, label %137, label %193

137:                                              ; preds = %134, %135
  br label %138

138:                                              ; preds = %137, %172
  %139 = phi i64 [ %173, %172 ], [ 0, %137 ]
  %140 = icmp ult i64 %139, 127
  %141 = shl nuw nsw i64 %139, 1
  br i1 %140, label %148, label %142

142:                                              ; preds = %138
  %143 = shl i64 %139, 8
  %144 = trunc i64 %143 to i32
  %145 = add i32 %144, -32512
  %146 = trunc i64 %143 to i32
  %147 = add i32 %146, 256
  br label %175

148:                                              ; preds = %138, %148
  %149 = phi i64 [ %169, %148 ], [ 0, %138 ]
  %150 = shl nuw nsw i64 %149, 8
  %151 = add nuw nsw i64 %150, %141
  %152 = add nuw nsw i64 %150, %139
  %153 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !205
  %154 = getelementptr inbounds %struct.DMCNode, ptr %153, i64 %152
  %155 = trunc i64 %151 to i32
  %156 = or i32 %155, 1
  store i32 %156, ptr %154, align 4, !tbaa !25
  %157 = getelementptr inbounds %struct.DMCNode, ptr %153, i64 %152, i32 0, i64 1
  %158 = trunc i64 %151 to i32
  %159 = add i32 %158, 2
  store i32 %159, ptr %157, align 4, !tbaa !25
  %160 = getelementptr inbounds %struct.DMCNode, ptr %153, i64 %152, i32 2
  %161 = load i24, ptr %160, align 1
  %162 = and i24 %161, -4096
  %163 = or i24 %162, 128
  store i24 %163, ptr %160, align 1
  %164 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !205
  %165 = getelementptr inbounds %struct.DMCNode, ptr %164, i64 %152, i32 2
  %166 = load i24, ptr %165, align 1
  %167 = and i24 %166, 4095
  %168 = or i24 %167, 524288
  store i24 %168, ptr %165, align 1
  %169 = add nuw nsw i64 %149, 1
  %170 = icmp eq i64 %169, 256
  br i1 %170, label %172, label %148, !llvm.loop !210

171:                                              ; preds = %172
  store i32 65536, ptr @_ZZ8dmcModelR5MixerE3top, align 4, !tbaa !25
  store i32 0, ptr @_ZZ8dmcModelR5MixerE4curr, align 4, !tbaa !25
  store i32 256, ptr @_ZZ8dmcModelR5MixerE9threshold, align 4, !tbaa !25
  br label %193

172:                                              ; preds = %175, %148
  %173 = add nuw nsw i64 %139, 1
  %174 = icmp eq i64 %173, 256
  br i1 %174, label %171, label %138, !llvm.loop !211

175:                                              ; preds = %142, %175
  %176 = phi i64 [ 0, %142 ], [ %191, %175 ]
  %177 = shl nuw nsw i64 %176, 8
  %178 = add nuw nsw i64 %177, %139
  %179 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !205
  %180 = getelementptr inbounds %struct.DMCNode, ptr %179, i64 %178
  store i32 %145, ptr %180, align 4, !tbaa !25
  %181 = getelementptr inbounds %struct.DMCNode, ptr %179, i64 %178, i32 0, i64 1
  store i32 %147, ptr %181, align 4, !tbaa !25
  %182 = getelementptr inbounds %struct.DMCNode, ptr %179, i64 %178, i32 2
  %183 = load i24, ptr %182, align 1
  %184 = and i24 %183, -4096
  %185 = or i24 %184, 128
  store i24 %185, ptr %182, align 1
  %186 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !205
  %187 = getelementptr inbounds %struct.DMCNode, ptr %186, i64 %178, i32 2
  %188 = load i24, ptr %187, align 1
  %189 = and i24 %188, 4095
  %190 = or i24 %189, 524288
  store i24 %190, ptr %187, align 1
  %191 = add nuw nsw i64 %176, 1
  %192 = icmp eq i64 %191, 256
  br i1 %192, label %172, label %175, !llvm.loop !210

193:                                              ; preds = %171, %135
  %194 = load i32, ptr @y, align 4, !tbaa !25
  %195 = icmp eq i32 %194, 0
  %196 = load i32, ptr @_ZZ8dmcModelR5MixerE4curr, align 4, !tbaa !25
  %197 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !205
  %198 = sext i32 %196 to i64
  %199 = getelementptr inbounds %struct.DMCNode, ptr %197, i64 %198, i32 2
  %200 = load i24, ptr %199, align 1
  br i1 %195, label %206, label %201

201:                                              ; preds = %193
  %202 = icmp ult i24 %200, -1212416
  br i1 %202, label %203, label %217

203:                                              ; preds = %201
  %204 = and i24 %200, -4096
  %205 = add nuw i24 %204, 1048576
  br label %212

206:                                              ; preds = %193
  %207 = and i24 %200, 4088
  %208 = icmp ult i24 %207, 3800
  br i1 %208, label %209, label %217

209:                                              ; preds = %206
  %210 = add i24 %200, 256
  %211 = and i24 %210, 4095
  br label %212

212:                                              ; preds = %203, %209
  %213 = phi i24 [ -4096, %209 ], [ 4095, %203 ]
  %214 = phi i24 [ %211, %209 ], [ %205, %203 ]
  %215 = and i24 %200, %213
  %216 = or i24 %214, %215
  store i24 %216, ptr %199, align 1
  br label %217

217:                                              ; preds = %212, %206, %201
  %218 = load ptr, ptr getelementptr inbounds (%class.Array.9, ptr @_ZZ8dmcModelR5MixerE1t, i64 0, i32 3), align 8, !tbaa !205
  %219 = getelementptr inbounds %struct.DMCNode, ptr %218, i64 %198, i32 1
  %220 = load i8, ptr %219, align 4, !tbaa !207
  %221 = zext i8 %220 to i64
  %222 = load i32, ptr @y, align 4, !tbaa !25
  %223 = sext i32 %222 to i64
  %224 = getelementptr inbounds [256 x [4 x i8]], ptr @_ZL11State_table, i64 0, i64 %221, i64 %223
  %225 = load i8, ptr %224, align 1, !tbaa !9
  store i8 %225, ptr %219, align 4, !tbaa !207
  %226 = getelementptr inbounds %struct.DMCNode, ptr %218, i64 %198
  %227 = getelementptr inbounds [2 x i32], ptr %226, i64 0, i64 %223
  %228 = load i32, ptr %227, align 4, !tbaa !25
  store i32 %228, ptr @_ZZ8dmcModelR5MixerE4curr, align 4, !tbaa !25
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds %struct.DMCNode, ptr %218, i64 %229, i32 1
  %231 = load i8, ptr %230, align 4, !tbaa !207
  %232 = zext i8 %231 to i32
  %233 = load i32, ptr getelementptr inbounds (%class.StateMap, ptr @_ZZ8dmcModelR5MixerE2sm, i64 0, i32 1), align 4, !tbaa !82
  %234 = load ptr, ptr getelementptr inbounds (%class.StateMap, ptr @_ZZ8dmcModelR5MixerE2sm, i64 0, i32 2, i32 3), align 8, !tbaa !84
  %235 = sext i32 %233 to i64
  %236 = getelementptr inbounds i32, ptr %234, i64 %235
  %237 = load i32, ptr %236, align 4, !tbaa !25
  %238 = and i32 %237, 1023
  %239 = icmp eq i32 %238, 1023
  %240 = add i32 %237, 1
  %241 = or i32 %237, 1023
  %242 = select i1 %239, i32 %241, i32 %240
  %243 = lshr i32 %237, 10
  %244 = shl i32 %222, 22
  %245 = sub nsw i32 %244, %243
  %246 = ashr i32 %245, 3
  %247 = zext i32 %238 to i64
  %248 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %247
  %249 = load i32, ptr %248, align 4, !tbaa !25
  %250 = mul nsw i32 %246, %249
  %251 = and i32 %250, -1024
  %252 = add i32 %251, %242
  store i32 %252, ptr %236, align 4, !tbaa !25
  store i32 %232, ptr getelementptr inbounds (%class.StateMap, ptr @_ZZ8dmcModelR5MixerE2sm, i64 0, i32 1), align 4, !tbaa !82
  %253 = zext i8 %231 to i64
  %254 = getelementptr inbounds i32, ptr %234, i64 %253
  %255 = load i32, ptr %254, align 4, !tbaa !25
  %256 = lshr i32 %255, 20
  %257 = getelementptr inbounds %struct.DMCNode, ptr %218, i64 %229, i32 2
  %258 = load i24, ptr %257, align 1
  %259 = lshr i24 %258, 12
  %260 = and i24 %258, 4095
  %261 = and i24 %258, -4096
  %262 = zext i24 %261 to i32
  %263 = add nuw nsw i32 %262, 20480
  %264 = add nuw nsw i24 %259, 10
  %265 = add nuw nsw i24 %264, %260
  %266 = zext i24 %265 to i32
  %267 = udiv i32 %263, %266
  %268 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %269 = zext i32 %256 to i64
  %270 = getelementptr inbounds i16, ptr %268, i64 %269
  %271 = load i16, ptr %270, align 2, !tbaa !31
  %272 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 8
  %273 = load i32, ptr %272, align 8, !tbaa !64
  %274 = add nsw i32 %273, 1
  %275 = getelementptr inbounds %class.Mixer, ptr %0, i64 0, i32 3, i32 3
  %276 = load ptr, ptr %275, align 8, !tbaa !59
  %277 = sext i32 %273 to i64
  %278 = getelementptr inbounds i16, ptr %276, i64 %277
  store i16 %271, ptr %278, align 2, !tbaa !31
  %279 = zext i32 %267 to i64
  %280 = getelementptr inbounds i16, ptr %268, i64 %279
  %281 = load i16, ptr %280, align 2, !tbaa !31
  %282 = add nsw i32 %273, 2
  store i32 %282, ptr %272, align 8, !tbaa !64
  %283 = sext i32 %274 to i64
  %284 = getelementptr inbounds i16, ptr %276, i64 %283
  store i16 %281, ptr %284, align 2, !tbaa !31
  ret void

285:                                              ; preds = %123, %121
  %286 = phi ptr [ @_ZGVZ8dmcModelR5MixerE2sm, %123 ], [ @_ZGVZ8dmcModelR5MixerE1t, %121 ]
  %287 = phi { ptr, i32 } [ %124, %123 ], [ %122, %121 ]
  tail call void @__cxa_guard_abort(ptr nonnull %286) #39
  resume { ptr, i32 } %287
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN5ArrayI7DMCNodeLi0EEC2Ei(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.9, ptr %0, i64 0, i32 1
  store i32 %1, ptr %3, align 4, !tbaa !212
  store i32 %1, ptr %0, align 8, !tbaa !209
  %4 = icmp slt i32 %1, 1
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = getelementptr inbounds %class.Array.9, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %6, i8 0, i64 16, i1 false)
  br label %23

7:                                                ; preds = %2
  %8 = mul i32 %1, 12
  %9 = load i32, ptr @programChecker, align 8, !tbaa !13
  %10 = add nsw i32 %9, %8
  store i32 %10, ptr @programChecker, align 8, !tbaa !13
  %11 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %12 = icmp sgt i32 %10, %11
  br i1 %12, label %13, label %14

13:                                               ; preds = %7
  store i32 %10, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %14

14:                                               ; preds = %13, %7
  %15 = sext i32 %8 to i64
  %16 = tail call noalias ptr @calloc(i64 noundef %15, i64 noundef 1) #41
  %17 = getelementptr inbounds %class.Array.9, ptr %0, i64 0, i32 2
  store ptr %16, ptr %17, align 8, !tbaa !213
  %18 = icmp eq ptr %16, null
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %20, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %20, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.Array.9, ptr %0, i64 0, i32 3
  store ptr %16, ptr %22, align 8, !tbaa !205
  br label %23

23:                                               ; preds = %5, %21
  ret void
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayI7DMCNodeLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !209
  %3 = mul i32 %2, -12
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %5 = add nsw i32 %4, %3
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array.9, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !213
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z13contextModel2v() local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %1 = load atomic i8, ptr @_ZGVZ13contextModel2vE2cm acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %11, !prof !110

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE2cm) #39
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %11, label %6

6:                                                ; preds = %3
  %7 = load i32, ptr @level, align 4, !tbaa !25
  %8 = shl i32 2097152, %7
  invoke void @_ZN10ContextMapC2Eii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13contextModel2vE2cm, i32 noundef %8, i32 noundef 9)
          to label %9 unwind label %71

9:                                                ; preds = %6
  %10 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN10ContextMapD2Ev, ptr nonnull @_ZZ13contextModel2vE2cm, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE2cm) #39
  br label %11

11:                                               ; preds = %9, %3, %0
  %12 = load atomic i8, ptr @_ZGVZ13contextModel2vE4rcm7 acquire, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %22, !prof !110

14:                                               ; preds = %11
  %15 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE4rcm7) #39
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = load i32, ptr @level, align 4, !tbaa !25
  %19 = shl i32 65536, %18
  invoke void @_ZN13RunContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ13contextModel2vE4rcm7, i32 noundef %19)
          to label %20 unwind label %73

20:                                               ; preds = %17
  %21 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN13RunContextMapD2Ev, ptr nonnull @_ZZ13contextModel2vE4rcm7, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE4rcm7) #39
  br label %22

22:                                               ; preds = %20, %14, %11
  %23 = load atomic i8, ptr @_ZGVZ13contextModel2vE4rcm9 acquire, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %33, !prof !110

25:                                               ; preds = %22
  %26 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE4rcm9) #39
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %33, label %28

28:                                               ; preds = %25
  %29 = load i32, ptr @level, align 4, !tbaa !25
  %30 = shl i32 65536, %29
  invoke void @_ZN13RunContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ13contextModel2vE4rcm9, i32 noundef %30)
          to label %31 unwind label %75

31:                                               ; preds = %28
  %32 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN13RunContextMapD2Ev, ptr nonnull @_ZZ13contextModel2vE4rcm9, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE4rcm9) #39
  br label %33

33:                                               ; preds = %31, %25, %22
  %34 = load atomic i8, ptr @_ZGVZ13contextModel2vE5rcm10 acquire, align 8
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %44, !prof !110

36:                                               ; preds = %33
  %37 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE5rcm10) #39
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %44, label %39

39:                                               ; preds = %36
  %40 = load i32, ptr @level, align 4, !tbaa !25
  %41 = shl i32 65536, %40
  invoke void @_ZN13RunContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) @_ZZ13contextModel2vE5rcm10, i32 noundef %41)
          to label %42 unwind label %77

42:                                               ; preds = %39
  %43 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN13RunContextMapD2Ev, ptr nonnull @_ZZ13contextModel2vE5rcm10, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE5rcm10) #39
  br label %44

44:                                               ; preds = %42, %36, %33
  %45 = load atomic i8, ptr @_ZGVZ13contextModel2vE1m acquire, align 8
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %53, !prof !110

47:                                               ; preds = %44
  %48 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ13contextModel2vE1m) #39
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %53, label %50

50:                                               ; preds = %47
  invoke void @_ZN5MixerC2Eiiii(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m, i32 noundef 800, i32 noundef 3088, i32 noundef 7, i32 noundef 128)
          to label %51 unwind label %79

51:                                               ; preds = %50
  %52 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5MixerD2Ev, ptr nonnull @_ZZ13contextModel2vE1m, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ13contextModel2vE1m) #39
  br label %53

53:                                               ; preds = %51, %47, %44
  %54 = load i32, ptr @bpos, align 4, !tbaa !25
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %122

56:                                               ; preds = %53
  %57 = load i32, ptr @_ZZ13contextModel2vE4size, align 4, !tbaa !25
  %58 = add nsw i32 %57, -1
  store i32 %58, ptr @_ZZ13contextModel2vE4size, align 4, !tbaa !25
  %59 = icmp eq i32 %57, 0
  br i1 %59, label %60, label %81

60:                                               ; preds = %56
  %61 = load i32, ptr @pos, align 4, !tbaa !25
  %62 = add nsw i32 %61, -1
  %63 = load i32, ptr @buf, align 8, !tbaa !20
  %64 = add nsw i32 %63, -1
  %65 = and i32 %64, %62
  %66 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %67 = sext i32 %65 to i64
  %68 = getelementptr inbounds i8, ptr %66, i64 %67
  %69 = load i8, ptr %68, align 1, !tbaa !9
  %70 = zext i8 %69 to i32
  store i32 %70, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !214
  br label %122

71:                                               ; preds = %6
  %72 = landingpad { ptr, i32 }
          cleanup
  br label %850

73:                                               ; preds = %17
  %74 = landingpad { ptr, i32 }
          cleanup
  br label %850

75:                                               ; preds = %28
  %76 = landingpad { ptr, i32 }
          cleanup
  br label %850

77:                                               ; preds = %39
  %78 = landingpad { ptr, i32 }
          cleanup
  br label %850

79:                                               ; preds = %50
  %80 = landingpad { ptr, i32 }
          cleanup
  br label %850

81:                                               ; preds = %56
  %82 = icmp eq i32 %58, -5
  br i1 %82, label %83, label %122

83:                                               ; preds = %81
  %84 = load i32, ptr @pos, align 4, !tbaa !25
  %85 = add nsw i32 %84, -4
  %86 = load i32, ptr @buf, align 8, !tbaa !20
  %87 = add nsw i32 %86, -1
  %88 = and i32 %87, %85
  %89 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %90 = sext i32 %88 to i64
  %91 = getelementptr inbounds i8, ptr %89, i64 %90
  %92 = load i8, ptr %91, align 1, !tbaa !9
  %93 = zext i8 %92 to i32
  %94 = shl nuw i32 %93, 24
  %95 = add nsw i32 %84, -3
  %96 = and i32 %87, %95
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, ptr %89, i64 %97
  %99 = load i8, ptr %98, align 1, !tbaa !9
  %100 = zext i8 %99 to i32
  %101 = shl nuw nsw i32 %100, 16
  %102 = or i32 %101, %94
  %103 = add nsw i32 %84, -2
  %104 = and i32 %87, %103
  %105 = sext i32 %104 to i64
  %106 = getelementptr inbounds i8, ptr %89, i64 %105
  %107 = load i8, ptr %106, align 1, !tbaa !9
  %108 = zext i8 %107 to i32
  %109 = shl nuw nsw i32 %108, 8
  %110 = or i32 %102, %109
  %111 = add nsw i32 %84, -1
  %112 = and i32 %87, %111
  %113 = sext i32 %112 to i64
  %114 = getelementptr inbounds i8, ptr %89, i64 %113
  %115 = load i8, ptr %114, align 1, !tbaa !9
  %116 = zext i8 %115 to i32
  %117 = or i32 %110, %116
  store i32 %117, ptr @_ZZ13contextModel2vE4size, align 4, !tbaa !25
  %118 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !214
  %119 = icmp eq i32 %118, 8
  br i1 %119, label %120, label %122

120:                                              ; preds = %83
  %121 = add nsw i32 %117, 8
  store i32 %121, ptr @_ZZ13contextModel2vE4size, align 4, !tbaa !25
  br label %122

122:                                              ; preds = %60, %81, %120, %83, %53
  %123 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %124 = icmp sgt i32 %123, 0
  br i1 %124, label %125, label %206

125:                                              ; preds = %122
  %126 = load i32, ptr @y, align 4, !tbaa !25
  %127 = shl i32 %126, 12
  %128 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 9, i32 3), align 8, !tbaa !61
  %129 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 3, i32 3), align 8
  %130 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8
  %131 = load i32, ptr @_ZZ13contextModel2vE1m, align 8
  %132 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 4, i32 3), align 8
  %133 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8
  %134 = freeze i32 %133
  %135 = add i32 %134, 7
  %136 = and i32 %135, -8
  %137 = icmp sgt i32 %136, 0
  %138 = zext i32 %136 to i64
  br i1 %137, label %139, label %206

139:                                              ; preds = %125
  %140 = zext i32 %123 to i64
  %141 = lshr i32 %135, 3
  %142 = zext i32 %141 to i64
  %143 = shl nuw nsw i64 %142, 4
  %144 = getelementptr i8, ptr %132, i64 %143
  %145 = getelementptr i8, ptr %129, i64 %143
  br label %146

146:                                              ; preds = %203, %139
  %147 = phi i64 [ 0, %139 ], [ %204, %203 ]
  %148 = getelementptr inbounds i32, ptr %128, i64 %147
  %149 = load i32, ptr %148, align 4, !tbaa !25
  %150 = sub nsw i32 %127, %149
  %151 = mul nsw i32 %150, 7
  %152 = icmp eq i32 %127, %149
  br i1 %152, label %203, label %153

153:                                              ; preds = %146
  %154 = getelementptr inbounds i32, ptr %130, i64 %147
  %155 = load i32, ptr %154, align 4, !tbaa !25
  %156 = mul nsw i32 %155, %131
  %157 = sext i32 %156 to i64
  %158 = getelementptr inbounds i16, ptr %132, i64 %157
  %159 = shl nsw i64 %157, 1
  %160 = getelementptr i8, ptr %144, i64 %159
  %161 = icmp ult ptr %158, %145
  %162 = icmp ult ptr %129, %160
  %163 = and i1 %161, %162
  br i1 %163, label %185, label %164

164:                                              ; preds = %153
  %165 = insertelement <8 x i32> poison, i32 %151, i64 0
  %166 = shufflevector <8 x i32> %165, <8 x i32> poison, <8 x i32> zeroinitializer
  br label %167

167:                                              ; preds = %167, %164
  %168 = phi i64 [ 0, %164 ], [ %183, %167 ]
  %169 = getelementptr inbounds i16, ptr %158, i64 %168
  %170 = load <8 x i16>, ptr %169, align 2, !tbaa !31, !alias.scope !216, !noalias !219
  %171 = sext <8 x i16> %170 to <8 x i32>
  %172 = getelementptr inbounds i16, ptr %129, i64 %168
  %173 = load <8 x i16>, ptr %172, align 2, !tbaa !31, !alias.scope !219
  %174 = sext <8 x i16> %173 to <8 x i32>
  %175 = mul nsw <8 x i32> %166, %174
  %176 = ashr <8 x i32> %175, <i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15, i32 15>
  %177 = add nsw <8 x i32> %176, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %178 = ashr <8 x i32> %177, <i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1, i32 1>
  %179 = add nsw <8 x i32> %178, %171
  %180 = tail call <8 x i32> @llvm.smax.v8i32(<8 x i32> %179, <8 x i32> <i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768, i32 -32768>)
  %181 = tail call <8 x i32> @llvm.smin.v8i32(<8 x i32> %180, <8 x i32> <i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767, i32 32767>)
  %182 = trunc <8 x i32> %181 to <8 x i16>
  store <8 x i16> %182, ptr %169, align 2, !tbaa !31, !alias.scope !216, !noalias !219
  %183 = add nuw i64 %168, 8
  %184 = icmp eq i64 %183, %138
  br i1 %184, label %203, label %167, !llvm.loop !221

185:                                              ; preds = %153, %185
  %186 = phi i64 [ %201, %185 ], [ 0, %153 ]
  %187 = getelementptr inbounds i16, ptr %158, i64 %186
  %188 = load i16, ptr %187, align 2, !tbaa !31
  %189 = sext i16 %188 to i32
  %190 = getelementptr inbounds i16, ptr %129, i64 %186
  %191 = load i16, ptr %190, align 2, !tbaa !31
  %192 = sext i16 %191 to i32
  %193 = mul nsw i32 %151, %192
  %194 = ashr i32 %193, 15
  %195 = add nsw i32 %194, 1
  %196 = ashr i32 %195, 1
  %197 = add nsw i32 %196, %189
  %198 = tail call i32 @llvm.smax.i32(i32 %197, i32 -32768)
  %199 = tail call i32 @llvm.smin.i32(i32 %198, i32 32767)
  %200 = trunc i32 %199 to i16
  store i16 %200, ptr %187, align 2, !tbaa !31
  %201 = add nuw nsw i64 %186, 1
  %202 = icmp eq i64 %201, %138
  br i1 %202, label %203, label %185, !llvm.loop !222

203:                                              ; preds = %167, %185, %146
  %204 = add nuw nsw i64 %147, 1
  %205 = icmp eq i64 %204, %140
  br i1 %205, label %206, label %146, !llvm.loop !151

206:                                              ; preds = %203, %122, %125
  store i32 0, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  store i32 0, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  store i32 1, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !64
  %207 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 3, i32 3), align 8, !tbaa !59
  store i16 256, ptr %207, align 2, !tbaa !31
  %208 = tail call noundef i32 @_Z10matchModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  %209 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %210 = and i32 %208, 65535
  %211 = zext i32 %210 to i64
  %212 = getelementptr inbounds i8, ptr %209, i64 %211
  %213 = load i8, ptr %212, align 1, !tbaa !9
  %214 = zext i8 %213 to i32
  %215 = tail call noundef i32 @_Z8wavModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  %216 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !214
  %217 = icmp eq i32 %216, 1
  br i1 %217, label %218, label %252

218:                                              ; preds = %206
  %219 = tail call noundef i32 @_Z9jpegModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %223

221:                                              ; preds = %218
  %222 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !214
  br label %252

223:                                              ; preds = %218
  %224 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %225 = add nsw i32 %224, 1
  %226 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %227 = add nsw i32 %226, 1
  store i32 %227, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %228 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !61
  %229 = sext i32 %226 to i64
  %230 = getelementptr inbounds i32, ptr %228, i64 %229
  store i32 %225, ptr %230, align 4, !tbaa !25
  %231 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %232 = add nsw i32 %231, 8
  store i32 %232, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %233 = add nsw i32 %219, -1
  %234 = add nsw i32 %233, %232
  %235 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %236 = add nsw i32 %235, 1
  store i32 %236, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %237 = sext i32 %235 to i64
  %238 = getelementptr inbounds i32, ptr %228, i64 %237
  store i32 %234, ptr %238, align 4, !tbaa !25
  %239 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %240 = add nsw i32 %239, 257
  store i32 %240, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %241 = load i32, ptr @pos, align 4, !tbaa !25
  %242 = add nsw i32 %241, -1
  %243 = load i32, ptr @buf, align 8, !tbaa !20
  %244 = add nsw i32 %243, -1
  %245 = and i32 %244, %242
  %246 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %247 = sext i32 %245 to i64
  %248 = getelementptr inbounds i8, ptr %246, i64 %247
  %249 = load i8, ptr %248, align 1, !tbaa !9
  %250 = zext i8 %249 to i32
  %251 = add nsw i32 %240, %250
  br label %838

252:                                              ; preds = %221, %206
  %253 = phi i32 [ %222, %221 ], [ %216, %206 ]
  %254 = and i32 %253, -2
  %255 = icmp eq i32 %254, 4
  br i1 %255, label %256, label %309

256:                                              ; preds = %252
  %257 = tail call noundef i32 @_Z8bmpModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  %258 = icmp slt i32 %257, 1
  br i1 %258, label %259, label %261

259:                                              ; preds = %256
  %260 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !214
  br label %309

261:                                              ; preds = %256
  %262 = load i32, ptr @_ZZ13contextModel2vE3col, align 4, !tbaa !25
  %263 = add nsw i32 %262, 1
  %264 = icmp sgt i32 %262, 22
  %265 = select i1 %264, i32 0, i32 %263
  store i32 %265, ptr @_ZZ13contextModel2vE3col, align 4
  %266 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %267 = add nsw i32 %266, 2
  %268 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %269 = add nsw i32 %268, 1
  store i32 %269, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %270 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !61
  %271 = sext i32 %268 to i64
  %272 = getelementptr inbounds i32, ptr %270, i64 %271
  store i32 %267, ptr %272, align 4, !tbaa !25
  %273 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %274 = add nsw i32 %273, 8
  store i32 %274, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %275 = add nsw i32 %274, %265
  %276 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %277 = add nsw i32 %276, 1
  store i32 %277, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %278 = sext i32 %276 to i64
  %279 = getelementptr inbounds i32, ptr %270, i64 %278
  store i32 %275, ptr %279, align 4, !tbaa !25
  %280 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %281 = add nsw i32 %280, 24
  store i32 %281, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %282 = load i32, ptr @pos, align 4, !tbaa !25
  %283 = sub nsw i32 %282, %257
  %284 = load i32, ptr @buf, align 8, !tbaa !20
  %285 = add nsw i32 %284, -1
  %286 = and i32 %285, %283
  %287 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %288 = sext i32 %286 to i64
  %289 = getelementptr inbounds i8, ptr %287, i64 %288
  %290 = load i8, ptr %289, align 1, !tbaa !9
  %291 = zext i8 %290 to i32
  %292 = add nsw i32 %282, -3
  %293 = and i32 %285, %292
  %294 = sext i32 %293 to i64
  %295 = getelementptr inbounds i8, ptr %287, i64 %294
  %296 = load i8, ptr %295, align 1, !tbaa !9
  %297 = zext i8 %296 to i32
  %298 = add nuw nsw i32 %297, %291
  %299 = lshr i32 %298, 4
  %300 = add nsw i32 %299, %281
  %301 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %302 = add nsw i32 %301, 1
  store i32 %302, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %303 = sext i32 %301 to i64
  %304 = getelementptr inbounds i32, ptr %270, i64 %303
  store i32 %300, ptr %304, align 4, !tbaa !25
  %305 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %306 = add nsw i32 %305, 32
  store i32 %306, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %307 = load i32, ptr @c0, align 4, !tbaa !25
  %308 = add nsw i32 %307, %306
  br label %838

309:                                              ; preds = %259, %252
  %310 = phi i32 [ %260, %259 ], [ %253, %252 ]
  %311 = icmp eq i32 %310, 6
  br i1 %311, label %312, label %317

312:                                              ; preds = %309
  %313 = tail call noundef i32 @_Z8pgmModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m), !range !223
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %848

315:                                              ; preds = %312
  %316 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !214
  br label %317

317:                                              ; preds = %315, %309
  %318 = phi i32 [ %316, %315 ], [ %310, %309 ]
  %319 = icmp eq i32 %318, 3
  br i1 %319, label %320, label %325

320:                                              ; preds = %317
  %321 = tail call noundef i32 @_Z9bmpModel8R5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  %322 = icmp sgt i32 %321, 0
  br i1 %322, label %848, label %323

323:                                              ; preds = %320
  %324 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !214
  br label %325

325:                                              ; preds = %323, %317
  %326 = phi i32 [ %324, %323 ], [ %318, %317 ]
  %327 = icmp eq i32 %326, 7
  br i1 %327, label %328, label %331

328:                                              ; preds = %325
  %329 = tail call noundef i32 @_Z9rgbModel8R5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m), !range !224
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %848

331:                                              ; preds = %328, %325
  %332 = icmp sgt i32 %215, 0
  br i1 %332, label %333, label %364

333:                                              ; preds = %331
  %334 = and i32 %215, 255
  %335 = lshr i32 %215, 8
  %336 = mul nuw nsw i32 %335, %334
  %337 = load i32, ptr @_ZZ13contextModel2vE3col_0, align 4, !tbaa !25
  %338 = add nsw i32 %337, 1
  %339 = icmp slt i32 %338, %336
  %340 = select i1 %339, i32 %338, i32 0
  store i32 %340, ptr @_ZZ13contextModel2vE3col_0, align 4
  %341 = icmp eq i32 %336, %334
  %342 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  br i1 %341, label %352, label %343

343:                                              ; preds = %333
  %344 = add nsw i32 %342, %340
  %345 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %346 = add nsw i32 %345, 1
  store i32 %346, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %347 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !61
  %348 = sext i32 %345 to i64
  %349 = getelementptr inbounds i32, ptr %347, i64 %348
  store i32 %344, ptr %349, align 4, !tbaa !25
  %350 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %351 = add nsw i32 %350, %336
  store i32 %351, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  br label %352

352:                                              ; preds = %333, %343
  %353 = phi i32 [ %351, %343 ], [ %342, %333 ]
  %354 = add nsw i32 %353, %340
  %355 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %356 = add nsw i32 %355, 1
  store i32 %356, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %357 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !61
  %358 = sext i32 %355 to i64
  %359 = getelementptr inbounds i32, ptr %357, i64 %358
  store i32 %354, ptr %359, align 4, !tbaa !25
  %360 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %361 = add nsw i32 %360, %334
  store i32 %361, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %362 = load i32, ptr @c0, align 4, !tbaa !25
  %363 = add nsw i32 %362, %361
  br label %838

364:                                              ; preds = %331
  %365 = load i32, ptr @bpos, align 4, !tbaa !25
  %366 = icmp eq i32 %365, 0
  br i1 %366, label %367, label %616

367:                                              ; preds = %364
  %368 = load i32, ptr @c4, align 4, !tbaa !25
  %369 = and i32 %368, 255
  %370 = load i32, ptr @_ZZ13contextModel2vE3cxt.13, align 16, !tbaa !25
  %371 = mul i32 %370, 257
  %372 = add i32 %371, 1
  %373 = add i32 %372, %369
  store i32 %373, ptr @_ZZ13contextModel2vE3cxt.14, align 8, !tbaa !25
  %374 = load i32, ptr @_ZZ13contextModel2vE3cxt.12, align 16, !tbaa !25
  %375 = mul i32 %374, 257
  %376 = add i32 %375, 1
  %377 = add i32 %376, %369
  store i32 %377, ptr @_ZZ13contextModel2vE3cxt.13, align 16, !tbaa !25
  %378 = load i32, ptr @_ZZ13contextModel2vE3cxt.11, align 16, !tbaa !25
  %379 = mul i32 %378, 257
  %380 = add i32 %379, 1
  %381 = add i32 %380, %369
  store i32 %381, ptr @_ZZ13contextModel2vE3cxt.12, align 16, !tbaa !25
  %382 = load i32, ptr @_ZZ13contextModel2vE3cxt.10, align 8, !tbaa !25
  %383 = mul i32 %382, 257
  %384 = add i32 %383, 1
  %385 = add i32 %384, %369
  store i32 %385, ptr @_ZZ13contextModel2vE3cxt.11, align 16, !tbaa !25
  %386 = load i32, ptr @_ZZ13contextModel2vE3cxt.9, align 16, !tbaa !25
  %387 = mul i32 %386, 257
  %388 = add i32 %387, 1
  %389 = add i32 %388, %369
  store i32 %389, ptr @_ZZ13contextModel2vE3cxt.10, align 8, !tbaa !25
  %390 = load i32, ptr @_ZZ13contextModel2vE3cxt.8, align 16, !tbaa !25
  %391 = mul i32 %390, 257
  %392 = add i32 %391, 1
  %393 = add i32 %392, %369
  store i32 %393, ptr @_ZZ13contextModel2vE3cxt.9, align 16, !tbaa !25
  %394 = load i32, ptr @_ZZ13contextModel2vE3cxt.7, align 16, !tbaa !25
  %395 = mul i32 %394, 257
  %396 = add i32 %395, 1
  %397 = add i32 %396, %369
  store i32 %397, ptr @_ZZ13contextModel2vE3cxt.8, align 16, !tbaa !25
  %398 = load i32, ptr @_ZZ13contextModel2vE3cxt.6, align 8, !tbaa !25
  %399 = mul i32 %398, 257
  %400 = add i32 %399, 1
  %401 = add i32 %400, %369
  store i32 %401, ptr @_ZZ13contextModel2vE3cxt.7, align 16, !tbaa !25
  %402 = load i32, ptr @_ZZ13contextModel2vE3cxt.5, align 16, !tbaa !25
  %403 = mul i32 %402, 257
  %404 = add i32 %403, 1
  %405 = add i32 %404, %369
  store i32 %405, ptr @_ZZ13contextModel2vE3cxt.6, align 8, !tbaa !25
  %406 = load i32, ptr @_ZZ13contextModel2vE3cxt.4, align 16, !tbaa !25
  %407 = mul i32 %406, 257
  %408 = add i32 %407, 1
  %409 = add i32 %408, %369
  store i32 %409, ptr @_ZZ13contextModel2vE3cxt.5, align 16, !tbaa !25
  %410 = load i32, ptr @_ZZ13contextModel2vE3cxt.3, align 16, !tbaa !25
  %411 = mul i32 %410, 257
  %412 = add i32 %411, 1
  %413 = add i32 %412, %369
  store i32 %413, ptr @_ZZ13contextModel2vE3cxt.4, align 16, !tbaa !25
  %414 = load i32, ptr @_ZZ13contextModel2vE3cxt.2, align 8, !tbaa !25
  %415 = mul i32 %414, 257
  %416 = add i32 %415, 1
  %417 = add i32 %416, %369
  store i32 %417, ptr @_ZZ13contextModel2vE3cxt.3, align 16, !tbaa !25
  %418 = load i32, ptr @_ZZ13contextModel2vE3cxt.1, align 16, !tbaa !25
  %419 = mul i32 %418, 257
  %420 = add i32 %419, 1
  %421 = add i32 %420, %369
  store i32 %421, ptr @_ZZ13contextModel2vE3cxt.2, align 8, !tbaa !25
  %422 = add nuw nsw i32 %369, 1
  store i32 %422, ptr @_ZZ13contextModel2vE3cxt.1, align 16, !tbaa !25
  %423 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %424 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %425 = add nsw i32 %424, 1
  store i32 %425, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %426 = tail call i32 @llvm.fshl.i32(i32 %424, i32 %424, i32 16)
  %427 = mul i32 %426, 123456791
  %428 = add i32 %427, %424
  %429 = sext i32 %424 to i64
  %430 = getelementptr inbounds i32, ptr %423, i64 %429
  store i32 %428, ptr %430, align 4, !tbaa !25
  %431 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %432 = add nsw i32 %431, 1
  store i32 %432, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %433 = mul i32 %422, 987654323
  %434 = add i32 %431, %433
  %435 = tail call i32 @llvm.fshl.i32(i32 %434, i32 %434, i32 16)
  %436 = mul i32 %435, 123456791
  %437 = add i32 %436, %431
  %438 = sext i32 %431 to i64
  %439 = getelementptr inbounds i32, ptr %423, i64 %438
  store i32 %437, ptr %439, align 4, !tbaa !25
  %440 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %441 = add nsw i32 %440, 1
  store i32 %441, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %442 = mul i32 %421, 987654323
  %443 = add i32 %440, %442
  %444 = tail call i32 @llvm.fshl.i32(i32 %443, i32 %443, i32 16)
  %445 = mul i32 %444, 123456791
  %446 = add i32 %445, %440
  %447 = sext i32 %440 to i64
  %448 = getelementptr inbounds i32, ptr %423, i64 %447
  store i32 %446, ptr %448, align 4, !tbaa !25
  %449 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %450 = add nsw i32 %449, 1
  store i32 %450, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %451 = mul i32 %417, 987654323
  %452 = add i32 %449, %451
  %453 = tail call i32 @llvm.fshl.i32(i32 %452, i32 %452, i32 16)
  %454 = mul i32 %453, 123456791
  %455 = add i32 %454, %449
  %456 = sext i32 %449 to i64
  %457 = getelementptr inbounds i32, ptr %423, i64 %456
  store i32 %455, ptr %457, align 4, !tbaa !25
  %458 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %459 = add nsw i32 %458, 1
  store i32 %459, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %460 = mul i32 %413, 987654323
  %461 = add i32 %458, %460
  %462 = tail call i32 @llvm.fshl.i32(i32 %461, i32 %461, i32 16)
  %463 = mul i32 %462, 123456791
  %464 = add i32 %463, %458
  %465 = sext i32 %458 to i64
  %466 = getelementptr inbounds i32, ptr %423, i64 %465
  store i32 %464, ptr %466, align 4, !tbaa !25
  %467 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %468 = add nsw i32 %467, 1
  store i32 %468, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %469 = mul i32 %409, 987654323
  %470 = add i32 %467, %469
  %471 = tail call i32 @llvm.fshl.i32(i32 %470, i32 %470, i32 16)
  %472 = mul i32 %471, 123456791
  %473 = add i32 %472, %467
  %474 = sext i32 %467 to i64
  %475 = getelementptr inbounds i32, ptr %423, i64 %474
  store i32 %473, ptr %475, align 4, !tbaa !25
  %476 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %477 = add nsw i32 %476, 1
  store i32 %477, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %478 = mul i32 %405, 987654323
  %479 = add i32 %476, %478
  %480 = tail call i32 @llvm.fshl.i32(i32 %479, i32 %479, i32 16)
  %481 = mul i32 %480, 123456791
  %482 = add i32 %481, %476
  %483 = sext i32 %476 to i64
  %484 = getelementptr inbounds i32, ptr %423, i64 %483
  store i32 %482, ptr %484, align 4, !tbaa !25
  %485 = load i32, ptr @_ZZ13contextModel2vE3cxt.7, align 16, !tbaa !25
  %486 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm7, i64 0, i32 1), align 8, !tbaa !225
  %487 = load i8, ptr %486, align 1, !tbaa !9
  %488 = icmp eq i8 %487, 0
  br i1 %488, label %502, label %489

489:                                              ; preds = %367
  %490 = getelementptr inbounds i8, ptr %486, i64 1
  %491 = load i8, ptr %490, align 1, !tbaa !9
  %492 = load i32, ptr @pos, align 4, !tbaa !25
  %493 = add nsw i32 %492, -1
  %494 = load i32, ptr @buf, align 8, !tbaa !20
  %495 = add nsw i32 %494, -1
  %496 = and i32 %495, %493
  %497 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %498 = sext i32 %496 to i64
  %499 = getelementptr inbounds i8, ptr %497, i64 %498
  %500 = load i8, ptr %499, align 1, !tbaa !9
  %501 = icmp eq i8 %491, %500
  br i1 %501, label %514, label %502

502:                                              ; preds = %489, %367
  store i8 1, ptr %486, align 1, !tbaa !9
  %503 = load i32, ptr @pos, align 4, !tbaa !25
  %504 = add nsw i32 %503, -1
  %505 = load i32, ptr @buf, align 8, !tbaa !20
  %506 = add nsw i32 %505, -1
  %507 = and i32 %506, %504
  %508 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %509 = sext i32 %507 to i64
  %510 = getelementptr inbounds i8, ptr %508, i64 %509
  %511 = load i8, ptr %510, align 1, !tbaa !9
  %512 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm7, i64 0, i32 1), align 8, !tbaa !225
  %513 = getelementptr inbounds i8, ptr %512, i64 1
  store i8 %511, ptr %513, align 1, !tbaa !9
  br label %518

514:                                              ; preds = %489
  %515 = icmp eq i8 %487, -1
  br i1 %515, label %518, label %516

516:                                              ; preds = %514
  %517 = add nuw i8 %487, 1
  store i8 %517, ptr %486, align 1, !tbaa !9
  br label %518

518:                                              ; preds = %502, %514, %516
  %519 = tail call noundef ptr @_ZN2BHILi4EEixEj(ptr noundef nonnull align 8 dereferenceable(28) @_ZZ13contextModel2vE4rcm7, i32 noundef %485)
  %520 = getelementptr inbounds i8, ptr %519, i64 1
  store ptr %520, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm7, i64 0, i32 1), align 8, !tbaa !225
  %521 = load i32, ptr @_ZZ13contextModel2vE3cxt.8, align 16, !tbaa !25
  %522 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %523 = add nsw i32 %522, 1
  store i32 %523, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %524 = mul i32 %521, 987654323
  %525 = add i32 %522, %524
  %526 = tail call i32 @llvm.fshl.i32(i32 %525, i32 %525, i32 16)
  %527 = mul i32 %526, 123456791
  %528 = add i32 %527, %522
  %529 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %530 = sext i32 %522 to i64
  %531 = getelementptr inbounds i32, ptr %529, i64 %530
  store i32 %528, ptr %531, align 4, !tbaa !25
  %532 = load i32, ptr @_ZZ13contextModel2vE3cxt.10, align 8, !tbaa !25
  %533 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm9, i64 0, i32 1), align 8, !tbaa !225
  %534 = load i8, ptr %533, align 1, !tbaa !9
  %535 = icmp eq i8 %534, 0
  br i1 %535, label %549, label %536

536:                                              ; preds = %518
  %537 = getelementptr inbounds i8, ptr %533, i64 1
  %538 = load i8, ptr %537, align 1, !tbaa !9
  %539 = load i32, ptr @pos, align 4, !tbaa !25
  %540 = add nsw i32 %539, -1
  %541 = load i32, ptr @buf, align 8, !tbaa !20
  %542 = add nsw i32 %541, -1
  %543 = and i32 %542, %540
  %544 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %545 = sext i32 %543 to i64
  %546 = getelementptr inbounds i8, ptr %544, i64 %545
  %547 = load i8, ptr %546, align 1, !tbaa !9
  %548 = icmp eq i8 %538, %547
  br i1 %548, label %561, label %549

549:                                              ; preds = %536, %518
  store i8 1, ptr %533, align 1, !tbaa !9
  %550 = load i32, ptr @pos, align 4, !tbaa !25
  %551 = add nsw i32 %550, -1
  %552 = load i32, ptr @buf, align 8, !tbaa !20
  %553 = add nsw i32 %552, -1
  %554 = and i32 %553, %551
  %555 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %556 = sext i32 %554 to i64
  %557 = getelementptr inbounds i8, ptr %555, i64 %556
  %558 = load i8, ptr %557, align 1, !tbaa !9
  %559 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm9, i64 0, i32 1), align 8, !tbaa !225
  %560 = getelementptr inbounds i8, ptr %559, i64 1
  store i8 %558, ptr %560, align 1, !tbaa !9
  br label %565

561:                                              ; preds = %536
  %562 = icmp eq i8 %534, -1
  br i1 %562, label %565, label %563

563:                                              ; preds = %561
  %564 = add nuw i8 %534, 1
  store i8 %564, ptr %533, align 1, !tbaa !9
  br label %565

565:                                              ; preds = %549, %561, %563
  %566 = tail call noundef ptr @_ZN2BHILi4EEixEj(ptr noundef nonnull align 8 dereferenceable(28) @_ZZ13contextModel2vE4rcm9, i32 noundef %532)
  %567 = getelementptr inbounds i8, ptr %566, i64 1
  store ptr %567, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm9, i64 0, i32 1), align 8, !tbaa !225
  %568 = load i32, ptr @_ZZ13contextModel2vE3cxt.12, align 16, !tbaa !25
  %569 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE5rcm10, i64 0, i32 1), align 8, !tbaa !225
  %570 = load i8, ptr %569, align 1, !tbaa !9
  %571 = icmp eq i8 %570, 0
  br i1 %571, label %585, label %572

572:                                              ; preds = %565
  %573 = getelementptr inbounds i8, ptr %569, i64 1
  %574 = load i8, ptr %573, align 1, !tbaa !9
  %575 = load i32, ptr @pos, align 4, !tbaa !25
  %576 = add nsw i32 %575, -1
  %577 = load i32, ptr @buf, align 8, !tbaa !20
  %578 = add nsw i32 %577, -1
  %579 = and i32 %578, %576
  %580 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %581 = sext i32 %579 to i64
  %582 = getelementptr inbounds i8, ptr %580, i64 %581
  %583 = load i8, ptr %582, align 1, !tbaa !9
  %584 = icmp eq i8 %574, %583
  br i1 %584, label %597, label %585

585:                                              ; preds = %572, %565
  store i8 1, ptr %569, align 1, !tbaa !9
  %586 = load i32, ptr @pos, align 4, !tbaa !25
  %587 = add nsw i32 %586, -1
  %588 = load i32, ptr @buf, align 8, !tbaa !20
  %589 = add nsw i32 %588, -1
  %590 = and i32 %589, %587
  %591 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %592 = sext i32 %590 to i64
  %593 = getelementptr inbounds i8, ptr %591, i64 %592
  %594 = load i8, ptr %593, align 1, !tbaa !9
  %595 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE5rcm10, i64 0, i32 1), align 8, !tbaa !225
  %596 = getelementptr inbounds i8, ptr %595, i64 1
  store i8 %594, ptr %596, align 1, !tbaa !9
  br label %601

597:                                              ; preds = %572
  %598 = icmp eq i8 %570, -1
  br i1 %598, label %601, label %599

599:                                              ; preds = %597
  %600 = add nuw i8 %570, 1
  store i8 %600, ptr %569, align 1, !tbaa !9
  br label %601

601:                                              ; preds = %585, %597, %599
  %602 = tail call noundef ptr @_ZN2BHILi4EEixEj(ptr noundef nonnull align 8 dereferenceable(28) @_ZZ13contextModel2vE5rcm10, i32 noundef %568)
  %603 = getelementptr inbounds i8, ptr %602, i64 1
  store ptr %603, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE5rcm10, i64 0, i32 1), align 8, !tbaa !225
  %604 = load i32, ptr @_ZZ13contextModel2vE3cxt.14, align 8, !tbaa !25
  %605 = load i32, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %606 = add nsw i32 %605, 1
  store i32 %606, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 8), align 8, !tbaa !102
  %607 = mul i32 %604, 987654323
  %608 = add i32 %605, %607
  %609 = tail call i32 @llvm.fshl.i32(i32 %608, i32 %608, i32 16)
  %610 = mul i32 %609, 123456791
  %611 = add i32 %610, %605
  %612 = load ptr, ptr getelementptr inbounds (%class.ContextMap, ptr @_ZZ13contextModel2vE2cm, i64 0, i32 5, i32 3), align 8, !tbaa !84
  %613 = sext i32 %605 to i64
  %614 = getelementptr inbounds i32, ptr %612, i64 %613
  store i32 %611, ptr %614, align 4, !tbaa !25
  %615 = load i32, ptr @bpos, align 4, !tbaa !25
  br label %616

616:                                              ; preds = %601, %364
  %617 = phi i32 [ %615, %601 ], [ %365, %364 ]
  %618 = load i32, ptr @c0, align 4, !tbaa !25
  %619 = load i32, ptr @pos, align 4, !tbaa !25
  %620 = add nsw i32 %619, -1
  %621 = load i32, ptr @buf, align 8, !tbaa !20
  %622 = add nsw i32 %621, -1
  %623 = and i32 %622, %620
  %624 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %625 = sext i32 %623 to i64
  %626 = getelementptr inbounds i8, ptr %624, i64 %625
  %627 = load i8, ptr %626, align 1, !tbaa !9
  %628 = zext i8 %627 to i32
  %629 = load i32, ptr @y, align 4, !tbaa !25
  %630 = tail call noundef i32 @_ZN10ContextMap4mix1ER5Mixeriiii(ptr noundef nonnull align 8 dereferenceable(140) @_ZZ13contextModel2vE2cm, ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m, i32 noundef %618, i32 noundef %617, i32 noundef %628, i32 noundef %629)
  %631 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm7, i64 0, i32 1), align 8, !tbaa !225
  %632 = getelementptr inbounds i8, ptr %631, i64 1
  %633 = load i8, ptr %632, align 1, !tbaa !9
  %634 = zext i8 %633 to i32
  %635 = or i32 %634, 256
  %636 = load i32, ptr @bpos, align 4, !tbaa !25
  %637 = sub nsw i32 8, %636
  %638 = lshr i32 %635, %637
  %639 = load i32, ptr @c0, align 4, !tbaa !25
  %640 = icmp eq i32 %638, %639
  br i1 %640, label %641, label %656

641:                                              ; preds = %616
  %642 = sub nsw i32 7, %636
  %643 = lshr i32 %634, %642
  %644 = shl nuw nsw i32 %643, 4
  %645 = and i32 %644, 16
  %646 = load i8, ptr %631, align 1, !tbaa !9
  %647 = zext i8 %646 to i64
  %648 = add nuw nsw i64 %647, 1
  %649 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %650 = getelementptr inbounds i8, ptr %649, i64 %648
  %651 = load i8, ptr %650, align 1, !tbaa !9
  %652 = zext i8 %651 to i32
  %653 = add nuw nsw i32 %645, 65528
  %654 = mul nuw nsw i32 %653, %652
  %655 = trunc i32 %654 to i16
  br label %656

656:                                              ; preds = %616, %641
  %657 = phi i16 [ %655, %641 ], [ 0, %616 ]
  %658 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !64
  %659 = add nsw i32 %658, 1
  store i32 %659, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !64
  %660 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 3, i32 3), align 8, !tbaa !59
  %661 = sext i32 %658 to i64
  %662 = getelementptr inbounds i16, ptr %660, i64 %661
  store i16 %657, ptr %662, align 2, !tbaa !31
  %663 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE4rcm9, i64 0, i32 1), align 8, !tbaa !225
  %664 = getelementptr inbounds i8, ptr %663, i64 1
  %665 = load i8, ptr %664, align 1, !tbaa !9
  %666 = zext i8 %665 to i32
  %667 = or i32 %666, 256
  %668 = lshr i32 %667, %637
  %669 = icmp eq i32 %668, %639
  br i1 %669, label %670, label %685

670:                                              ; preds = %656
  %671 = sub nsw i32 7, %636
  %672 = lshr i32 %666, %671
  %673 = shl nuw nsw i32 %672, 4
  %674 = and i32 %673, 16
  %675 = load i8, ptr %663, align 1, !tbaa !9
  %676 = zext i8 %675 to i64
  %677 = add nuw nsw i64 %676, 1
  %678 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %679 = getelementptr inbounds i8, ptr %678, i64 %677
  %680 = load i8, ptr %679, align 1, !tbaa !9
  %681 = zext i8 %680 to i32
  %682 = add nuw nsw i32 %674, 65528
  %683 = mul nuw nsw i32 %682, %681
  %684 = trunc i32 %683 to i16
  br label %685

685:                                              ; preds = %656, %670
  %686 = phi i16 [ %684, %670 ], [ 0, %656 ]
  %687 = add nsw i32 %658, 2
  store i32 %687, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !64
  %688 = sext i32 %659 to i64
  %689 = getelementptr inbounds i16, ptr %660, i64 %688
  store i16 %686, ptr %689, align 2, !tbaa !31
  %690 = load ptr, ptr getelementptr inbounds (%class.RunContextMap, ptr @_ZZ13contextModel2vE5rcm10, i64 0, i32 1), align 8, !tbaa !225
  %691 = getelementptr inbounds i8, ptr %690, i64 1
  %692 = load i8, ptr %691, align 1, !tbaa !9
  %693 = zext i8 %692 to i32
  %694 = or i32 %693, 256
  %695 = lshr i32 %694, %637
  %696 = icmp eq i32 %695, %639
  br i1 %696, label %697, label %712

697:                                              ; preds = %685
  %698 = sub nsw i32 7, %636
  %699 = lshr i32 %693, %698
  %700 = shl nuw nsw i32 %699, 4
  %701 = and i32 %700, 16
  %702 = load i8, ptr %690, align 1, !tbaa !9
  %703 = zext i8 %702 to i64
  %704 = add nuw nsw i64 %703, 1
  %705 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %706 = getelementptr inbounds i8, ptr %705, i64 %704
  %707 = load i8, ptr %706, align 1, !tbaa !9
  %708 = zext i8 %707 to i32
  %709 = add nuw nsw i32 %701, 65528
  %710 = mul nuw nsw i32 %709, %708
  %711 = trunc i32 %710 to i16
  br label %712

712:                                              ; preds = %685, %697
  %713 = phi i16 [ %711, %697 ], [ 0, %685 ]
  %714 = add nsw i32 %658, 3
  store i32 %714, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 8), align 8, !tbaa !64
  %715 = sext i32 %687 to i64
  %716 = getelementptr inbounds i16, ptr %660, i64 %715
  store i16 %713, ptr %716, align 2, !tbaa !31
  %717 = load i32, ptr @level, align 4, !tbaa !25
  %718 = icmp sgt i32 %717, 3
  br i1 %718, label %719, label %723

719:                                              ; preds = %712
  tail call void @_Z11sparseModelR5Mixerii(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m, i32 noundef %214, i32 noundef %630)
  tail call void @_Z13distanceModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  tail call void @_Z8picModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  tail call void @_Z11recordModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  tail call void @_Z9wordModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  tail call void @_Z13indirectModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  tail call void @_Z8dmcModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  %720 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !214
  %721 = icmp eq i32 %720, 8
  br i1 %721, label %722, label %723

722:                                              ; preds = %719
  tail call void @_Z8exeModelR5Mixer(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  br label %723

723:                                              ; preds = %719, %722, %712
  %724 = tail call i32 @llvm.smax.i32(i32 %630, i32 2)
  %725 = add nsw i32 %724, -2
  %726 = load i32, ptr @pos, align 4, !tbaa !25
  %727 = add nsw i32 %726, -1
  %728 = load i32, ptr @buf, align 8, !tbaa !20
  %729 = add nsw i32 %728, -1
  %730 = and i32 %729, %727
  %731 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %732 = sext i32 %730 to i64
  %733 = getelementptr inbounds i8, ptr %731, i64 %732
  %734 = load i8, ptr %733, align 1, !tbaa !9
  %735 = zext i8 %734 to i32
  %736 = add nsw i32 %726, -2
  %737 = and i32 %729, %736
  %738 = sext i32 %737 to i64
  %739 = getelementptr inbounds i8, ptr %731, i64 %738
  %740 = load i8, ptr %739, align 1, !tbaa !9
  %741 = zext i8 %740 to i32
  %742 = add nsw i32 %726, -3
  %743 = and i32 %729, %742
  %744 = sext i32 %743 to i64
  %745 = getelementptr inbounds i8, ptr %731, i64 %744
  %746 = load i8, ptr %745, align 1, !tbaa !9
  %747 = zext i8 %746 to i32
  %748 = add nuw nsw i32 %735, 8
  %749 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %750 = add nsw i32 %748, %749
  %751 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %752 = add nsw i32 %751, 1
  store i32 %752, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %753 = load ptr, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 5, i32 3), align 8, !tbaa !61
  %754 = sext i32 %751 to i64
  %755 = getelementptr inbounds i32, ptr %753, i64 %754
  store i32 %750, ptr %755, align 4, !tbaa !25
  %756 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %757 = add nsw i32 %756, 264
  store i32 %757, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %758 = load i32, ptr @c0, align 4, !tbaa !25
  %759 = add nsw i32 %758, %757
  %760 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %761 = add nsw i32 %760, 1
  store i32 %761, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %762 = sext i32 %760 to i64
  %763 = getelementptr inbounds i32, ptr %753, i64 %762
  store i32 %759, ptr %763, align 4, !tbaa !25
  %764 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %765 = add nsw i32 %764, 256
  store i32 %765, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %766 = load i32, ptr @c4, align 4, !tbaa !25
  %767 = lshr i32 %766, 2
  %768 = and i32 %767, 56
  %769 = icmp eq i8 %734, %740
  %770 = select i1 %769, i32 64, i32 0
  %771 = load i32, ptr @_ZZ13contextModel2vE8filetype, align 4, !tbaa !214
  %772 = icmp eq i32 %771, 8
  %773 = select i1 %772, i32 128, i32 0
  %774 = add nuw i32 %725, %770
  %775 = add i32 %774, %765
  %776 = add i32 %775, %768
  %777 = add i32 %776, %773
  %778 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %779 = add nsw i32 %778, 1
  store i32 %779, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %780 = sext i32 %778 to i64
  %781 = getelementptr inbounds i32, ptr %753, i64 %780
  store i32 %777, ptr %781, align 4, !tbaa !25
  %782 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %783 = add nsw i32 %782, 256
  store i32 %783, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %784 = add nsw i32 %783, %741
  %785 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %786 = add nsw i32 %785, 1
  store i32 %786, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %787 = sext i32 %785 to i64
  %788 = getelementptr inbounds i32, ptr %753, i64 %787
  store i32 %784, ptr %788, align 4, !tbaa !25
  %789 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %790 = add nsw i32 %789, 256
  store i32 %790, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %791 = add nsw i32 %790, %747
  %792 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %793 = add nsw i32 %792, 1
  store i32 %793, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %794 = sext i32 %792 to i64
  %795 = getelementptr inbounds i32, ptr %753, i64 %794
  store i32 %791, ptr %795, align 4, !tbaa !25
  %796 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %797 = add nsw i32 %796, 256
  store i32 %797, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %798 = add nsw i32 %797, %214
  %799 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %800 = add nsw i32 %799, 1
  store i32 %800, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %801 = sext i32 %799 to i64
  %802 = getelementptr inbounds i32, ptr %753, i64 %801
  store i32 %798, ptr %802, align 4, !tbaa !25
  %803 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %804 = add nsw i32 %803, 256
  store i32 %804, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %805 = load i32, ptr @bpos, align 4, !tbaa !25
  %806 = icmp eq i32 %805, 0
  br i1 %806, label %824, label %807

807:                                              ; preds = %723
  %808 = load i32, ptr @c0, align 4, !tbaa !25
  %809 = sub nsw i32 8, %805
  %810 = shl i32 %808, %809
  %811 = icmp eq i32 %805, 1
  %812 = lshr i32 %747, 1
  %813 = select i1 %811, i32 %812, i32 0
  %814 = add i32 %810, %813
  %815 = tail call i32 @llvm.smin.i32(i32 %805, i32 5)
  %816 = shl nsw i32 %815, 8
  %817 = lshr i32 %735, 5
  %818 = or i32 %816, %817
  %819 = lshr i32 %741, 2
  %820 = and i32 %819, 56
  %821 = or i32 %818, %820
  %822 = and i32 %814, 192
  %823 = or i32 %822, %821
  br label %835

824:                                              ; preds = %723
  %825 = lshr i32 %747, 7
  %826 = load i32, ptr @c4, align 4, !tbaa !25
  %827 = lshr i32 %826, 30
  %828 = and i32 %827, 2
  %829 = lshr i32 %741, 4
  %830 = and i32 %829, 12
  %831 = and i32 %735, 240
  %832 = or i32 %825, %831
  %833 = or i32 %832, %830
  %834 = or i32 %833, %828
  br label %835

835:                                              ; preds = %824, %807
  %836 = phi i32 [ %823, %807 ], [ %834, %824 ]
  %837 = add nsw i32 %836, %804
  br label %838

838:                                              ; preds = %352, %835, %223, %261
  %839 = phi ptr [ %270, %261 ], [ %228, %223 ], [ %753, %835 ], [ %357, %352 ]
  %840 = phi i32 [ %308, %261 ], [ %251, %223 ], [ %837, %835 ], [ %363, %352 ]
  %841 = phi i32 [ 256, %261 ], [ 256, %223 ], [ 1536, %835 ], [ 256, %352 ]
  %842 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %843 = add nsw i32 %842, 1
  store i32 %843, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 6), align 8, !tbaa !62
  %844 = sext i32 %842 to i64
  %845 = getelementptr inbounds i32, ptr %839, i64 %844
  store i32 %840, ptr %845, align 4, !tbaa !25
  %846 = load i32, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  %847 = add nsw i32 %846, %841
  store i32 %847, ptr getelementptr inbounds (%class.Mixer, ptr @_ZZ13contextModel2vE1m, i64 0, i32 7), align 4, !tbaa !63
  br label %848

848:                                              ; preds = %838, %328, %320, %312
  %849 = tail call noundef i32 @_ZN5Mixer1pEv(ptr noundef nonnull align 8 dereferenceable(136) @_ZZ13contextModel2vE1m)
  ret i32 %849

850:                                              ; preds = %79, %77, %75, %73, %71
  %851 = phi ptr [ @_ZGVZ13contextModel2vE1m, %79 ], [ @_ZGVZ13contextModel2vE5rcm10, %77 ], [ @_ZGVZ13contextModel2vE4rcm9, %75 ], [ @_ZGVZ13contextModel2vE4rcm7, %73 ], [ @_ZGVZ13contextModel2vE2cm, %71 ]
  %852 = phi { ptr, i32 } [ %80, %79 ], [ %78, %77 ], [ %76, %75 ], [ %74, %73 ], [ %72, %71 ]
  tail call void @__cxa_guard_abort(ptr nonnull %851) #39
  resume { ptr, i32 } %852
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN13RunContextMapC2Ei(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %1) unnamed_addr #5 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = sdiv i32 %1, 4
  %4 = shl nsw i32 %3, 2
  %5 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 1
  store i32 %4, ptr %5, align 4, !tbaa !157
  store i32 %4, ptr %0, align 8, !tbaa !159
  %6 = icmp slt i32 %1, 4
  br i1 %6, label %7, label %9

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 2
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %8, i8 0, i64 16, i1 false)
  br label %30

9:                                                ; preds = %2
  %10 = add nuw i32 %4, 64
  %11 = load i32, ptr @programChecker, align 8, !tbaa !13
  %12 = add nsw i32 %11, %10
  store i32 %12, ptr @programChecker, align 8, !tbaa !13
  %13 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %14 = icmp sgt i32 %12, %13
  br i1 %14, label %15, label %16

15:                                               ; preds = %9
  store i32 %12, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %16

16:                                               ; preds = %15, %9
  %17 = sext i32 %10 to i64
  %18 = tail call noalias ptr @calloc(i64 noundef %17, i64 noundef 1) #41
  %19 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 2
  store ptr %18, ptr %19, align 8, !tbaa !160
  %20 = icmp eq ptr %18, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  %22 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %22, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %22, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

23:                                               ; preds = %16
  %24 = getelementptr inbounds i8, ptr %18, i64 64
  %25 = ptrtoint ptr %18 to i64
  %26 = and i64 %25, 63
  %27 = sub nsw i64 0, %26
  %28 = getelementptr inbounds i8, ptr %24, i64 %27
  %29 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 3
  store ptr %28, ptr %29, align 8, !tbaa !161
  br label %30

30:                                               ; preds = %7, %23
  %31 = phi ptr [ null, %7 ], [ %28, %23 ]
  %32 = getelementptr inbounds %class.BH.10, ptr %0, i64 0, i32 1
  %33 = add nsw i32 %3, -1
  store i32 %33, ptr %32, align 8, !tbaa !228
  %34 = getelementptr inbounds i8, ptr %31, i64 2
  %35 = load i8, ptr %34, align 1, !tbaa !9
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %99, label %37

37:                                               ; preds = %30
  %38 = load i16, ptr %31, align 2, !tbaa !31
  %39 = icmp eq i16 %38, 0
  br i1 %39, label %110, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds i8, ptr %31, i64 4
  %42 = getelementptr inbounds i8, ptr %31, i64 6
  %43 = load i8, ptr %42, align 1, !tbaa !9
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %96, label %45

45:                                               ; preds = %40
  %46 = load i16, ptr %41, align 2, !tbaa !31
  %47 = icmp eq i16 %46, 0
  br i1 %47, label %103, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds i8, ptr %31, i64 8
  %50 = getelementptr inbounds i8, ptr %31, i64 10
  %51 = load i8, ptr %50, align 1, !tbaa !9
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %96, label %53

53:                                               ; preds = %48
  %54 = load i16, ptr %49, align 2, !tbaa !31
  %55 = icmp eq i16 %54, 0
  br i1 %55, label %103, label %56

56:                                               ; preds = %53
  %57 = getelementptr inbounds i8, ptr %31, i64 12
  %58 = getelementptr inbounds i8, ptr %31, i64 14
  %59 = load i8, ptr %58, align 1, !tbaa !9
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %96, label %61

61:                                               ; preds = %56
  %62 = load i16, ptr %57, align 2, !tbaa !31
  %63 = icmp eq i16 %62, 0
  br i1 %63, label %103, label %64

64:                                               ; preds = %61
  %65 = getelementptr inbounds i8, ptr %31, i64 16
  %66 = getelementptr inbounds i8, ptr %31, i64 18
  %67 = load i8, ptr %66, align 1, !tbaa !9
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %96, label %69

69:                                               ; preds = %64
  %70 = load i16, ptr %65, align 2, !tbaa !31
  %71 = icmp eq i16 %70, 0
  br i1 %71, label %103, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds i8, ptr %31, i64 20
  %74 = getelementptr inbounds i8, ptr %31, i64 22
  %75 = load i8, ptr %74, align 1, !tbaa !9
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %96, label %77

77:                                               ; preds = %72
  %78 = load i16, ptr %73, align 2, !tbaa !31
  %79 = icmp eq i16 %78, 0
  br i1 %79, label %103, label %80

80:                                               ; preds = %77
  %81 = getelementptr inbounds i8, ptr %31, i64 24
  %82 = getelementptr inbounds i8, ptr %31, i64 26
  %83 = load i8, ptr %82, align 1, !tbaa !9
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %96, label %85

85:                                               ; preds = %80
  %86 = load i16, ptr %81, align 2, !tbaa !31
  %87 = icmp eq i16 %86, 0
  br i1 %87, label %103, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds i8, ptr %31, i64 28
  %90 = getelementptr inbounds i8, ptr %31, i64 30
  %91 = load i8, ptr %90, align 1, !tbaa !9
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %88
  %94 = load i16, ptr %89, align 2, !tbaa !31
  %95 = icmp eq i16 %94, 0
  br i1 %95, label %103, label %100

96:                                               ; preds = %88, %80, %72, %64, %56, %48, %40
  %97 = phi i64 [ 28, %88 ], [ 24, %80 ], [ 20, %72 ], [ 16, %64 ], [ 12, %56 ], [ 8, %48 ], [ 4, %40 ]
  %98 = phi ptr [ %89, %88 ], [ %81, %80 ], [ %73, %72 ], [ %65, %64 ], [ %57, %56 ], [ %49, %48 ], [ %41, %40 ]
  store i16 0, ptr %98, align 2, !tbaa !31
  br label %103

99:                                               ; preds = %30
  store i16 0, ptr %31, align 2, !tbaa !31
  br label %110

100:                                              ; preds = %93
  store i32 0, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  %101 = icmp ugt i8 %91, %83
  %102 = select i1 %101, i64 24, i64 28
  br label %107

103:                                              ; preds = %96, %93, %85, %77, %69, %61, %53, %45
  %104 = phi i64 [ %97, %96 ], [ 28, %93 ], [ 24, %85 ], [ 20, %77 ], [ 16, %69 ], [ 12, %61 ], [ 8, %53 ], [ 4, %45 ]
  %105 = phi ptr [ %98, %96 ], [ %89, %93 ], [ %81, %85 ], [ %73, %77 ], [ %65, %69 ], [ %57, %61 ], [ %49, %53 ], [ %41, %45 ]
  %106 = load i32, ptr %105, align 2
  store i32 %106, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  br label %107

107:                                              ; preds = %103, %100
  %108 = phi i32 [ %106, %103 ], [ 0, %100 ]
  %109 = phi i64 [ %104, %103 ], [ %102, %100 ]
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %41, ptr nonnull align 1 %31, i64 %109, i1 false)
  store i32 %108, ptr %31, align 1
  br label %110

110:                                              ; preds = %107, %99, %37
  %111 = getelementptr inbounds %class.RunContextMap, ptr %0, i64 0, i32 1
  store ptr %34, ptr %111, align 8, !tbaa !225
  ret void
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN13RunContextMapD2Ev(ptr noundef nonnull align 8 dereferenceable(40) %0) unnamed_addr #3 comdat align 2 personality ptr @__gxx_personality_v0 {
  %2 = load i32, ptr %0, align 8, !tbaa !159
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = sub i32 %3, %2
  %5 = add i32 %4, -64
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp sgt i32 %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %1, %8
  %10 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 2
  %11 = load ptr, ptr %10, align 8, !tbaa !160
  tail call void @free(ptr noundef %11) #39
  ret void
}

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write) uwtable
define dso_local void @_ZN9PredictorC2Ev(ptr nocapture noundef nonnull writeonly align 4 dereferenceable(4) %0) unnamed_addr #24 align 2 {
  store i32 2048, ptr %0, align 4, !tbaa !229
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local void @_ZN9Predictor6updateEv(ptr nocapture noundef nonnull writeonly align 4 dereferenceable(4) %0) local_unnamed_addr #14 align 2 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE1a acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE1a) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE1a, i32 noundef 256)
          to label %8 unwind label %85

8:                                                ; preds = %7
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE1a, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE1a) #39
  br label %10

10:                                               ; preds = %8, %4, %1
  %11 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a1 acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %19, !prof !110

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a1) #39
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %13
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a1, i32 noundef 65536)
          to label %17 unwind label %87

17:                                               ; preds = %16
  %18 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a1, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a1) #39
  br label %19

19:                                               ; preds = %17, %13, %10
  %20 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a2 acquire, align 8
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %28, !prof !110

22:                                               ; preds = %19
  %23 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a2) #39
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a2, i32 noundef 65536)
          to label %26 unwind label %89

26:                                               ; preds = %25
  %27 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a2, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a2) #39
  br label %28

28:                                               ; preds = %26, %22, %19
  %29 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a3 acquire, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %37, !prof !110

31:                                               ; preds = %28
  %32 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a3) #39
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %37, label %34

34:                                               ; preds = %31
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a3, i32 noundef 65536)
          to label %35 unwind label %91

35:                                               ; preds = %34
  %36 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a3, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a3) #39
  br label %37

37:                                               ; preds = %35, %31, %28
  %38 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a4 acquire, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %46, !prof !110

40:                                               ; preds = %37
  %41 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a4) #39
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %46, label %43

43:                                               ; preds = %40
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a4, i32 noundef 65536)
          to label %44 unwind label %93

44:                                               ; preds = %43
  %45 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a4, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a4) #39
  br label %46

46:                                               ; preds = %44, %40, %37
  %47 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a5 acquire, align 8
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %49, label %55, !prof !110

49:                                               ; preds = %46
  %50 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a5) #39
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %49
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a5, i32 noundef 65536)
          to label %53 unwind label %95

53:                                               ; preds = %52
  %54 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a5, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a5) #39
  br label %55

55:                                               ; preds = %53, %49, %46
  %56 = load atomic i8, ptr @_ZGVZN9Predictor6updateEvE2a6 acquire, align 8
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %58, label %64, !prof !110

58:                                               ; preds = %55
  %59 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZN9Predictor6updateEvE2a6) #39
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %64, label %61

61:                                               ; preds = %58
  invoke void @_ZN4APM1C2Ei(ptr noundef nonnull align 8 dereferenceable(32) @_ZZN9Predictor6updateEvE2a6, i32 noundef 65536)
          to label %62 unwind label %97

62:                                               ; preds = %61
  %63 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4APM1D2Ev, ptr nonnull @_ZZN9Predictor6updateEvE2a6, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZN9Predictor6updateEvE2a6) #39
  br label %64

64:                                               ; preds = %62, %58, %55
  %65 = load i32, ptr @c0, align 4, !tbaa !25
  %66 = load i32, ptr @y, align 4, !tbaa !25
  %67 = shl i32 %65, 1
  %68 = add i32 %66, %67
  store i32 %68, ptr @c0, align 4, !tbaa !25
  %69 = icmp sgt i32 %68, 255
  br i1 %69, label %70, label %99

70:                                               ; preds = %64
  %71 = trunc i32 %68 to i8
  %72 = load i32, ptr @pos, align 4, !tbaa !25
  %73 = add nsw i32 %72, 1
  store i32 %73, ptr @pos, align 4, !tbaa !25
  %74 = load i32, ptr @buf, align 8, !tbaa !20
  %75 = add nsw i32 %74, -1
  %76 = and i32 %75, %72
  %77 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %78 = sext i32 %76 to i64
  %79 = getelementptr inbounds i8, ptr %77, i64 %78
  store i8 %71, ptr %79, align 1, !tbaa !9
  %80 = load i32, ptr @c4, align 4, !tbaa !25
  %81 = shl i32 %80, 8
  %82 = load i32, ptr @c0, align 4, !tbaa !25
  %83 = add i32 %82, -256
  %84 = add i32 %83, %81
  store i32 %84, ptr @c4, align 4, !tbaa !25
  store i32 1, ptr @c0, align 4, !tbaa !25
  br label %99

85:                                               ; preds = %7
  %86 = landingpad { ptr, i32 }
          cleanup
  br label %451

87:                                               ; preds = %16
  %88 = landingpad { ptr, i32 }
          cleanup
  br label %451

89:                                               ; preds = %25
  %90 = landingpad { ptr, i32 }
          cleanup
  br label %451

91:                                               ; preds = %34
  %92 = landingpad { ptr, i32 }
          cleanup
  br label %451

93:                                               ; preds = %43
  %94 = landingpad { ptr, i32 }
          cleanup
  br label %451

95:                                               ; preds = %52
  %96 = landingpad { ptr, i32 }
          cleanup
  br label %451

97:                                               ; preds = %61
  %98 = landingpad { ptr, i32 }
          cleanup
  br label %451

99:                                               ; preds = %70, %64
  %100 = load i32, ptr @bpos, align 4, !tbaa !25
  %101 = add nsw i32 %100, 1
  %102 = and i32 %101, 7
  store i32 %102, ptr @bpos, align 4, !tbaa !25
  %103 = tail call noundef i32 @_Z13contextModel2v()
  %104 = load i32, ptr @c0, align 4, !tbaa !25
  %105 = load ptr, ptr getelementptr inbounds (%class.Stretch, ptr @stretch, i64 0, i32 0, i32 3), align 8, !tbaa !30
  %106 = sext i32 %103 to i64
  %107 = getelementptr inbounds i16, ptr %105, i64 %106
  %108 = load i16, ptr %107, align 2, !tbaa !31
  %109 = sext i16 %108 to i32
  %110 = load i32, ptr @y, align 4, !tbaa !25
  %111 = mul i32 %110, 65662
  %112 = load i32, ptr @_ZZN9Predictor6updateEvE1a, align 8, !tbaa !69
  %113 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE1a, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %114 = sext i32 %112 to i64
  %115 = getelementptr inbounds i16, ptr %113, i64 %114
  %116 = load <2 x i16>, ptr %115, align 2, !tbaa !31
  %117 = zext <2 x i16> %116 to <2 x i32>
  %118 = insertelement <2 x i32> poison, i32 %111, i64 0
  %119 = shufflevector <2 x i32> %118, <2 x i32> poison, <2 x i32> zeroinitializer
  %120 = sub nsw <2 x i32> %119, %117
  %121 = lshr <2 x i32> %120, <i32 7, i32 7>
  %122 = trunc <2 x i32> %121 to <2 x i16>
  %123 = add <2 x i16> %116, %122
  store <2 x i16> %123, ptr %115, align 2, !tbaa !31
  %124 = and i32 %109, 127
  %125 = add nsw i32 %109, 2048
  %126 = ashr i32 %125, 7
  %127 = mul nsw i32 %104, 33
  %128 = add nsw i32 %126, %127
  store i32 %128, ptr @_ZZN9Predictor6updateEvE1a, align 8, !tbaa !69
  %129 = sext i32 %128 to i64
  %130 = getelementptr inbounds i16, ptr %113, i64 %129
  %131 = load i16, ptr %130, align 2, !tbaa !31
  %132 = zext i16 %131 to i32
  %133 = sub nuw nsw i32 128, %124
  %134 = mul nuw nsw i32 %133, %132
  %135 = add nsw i32 %128, 1
  %136 = sext i32 %135 to i64
  %137 = getelementptr inbounds i16, ptr %113, i64 %136
  %138 = load i16, ptr %137, align 2, !tbaa !31
  %139 = zext i16 %138 to i32
  %140 = mul nuw nsw i32 %124, %139
  %141 = add nuw nsw i32 %140, %134
  %142 = lshr i32 %141, 11
  store i32 %142, ptr %0, align 4, !tbaa !229
  %143 = load i32, ptr @c0, align 4, !tbaa !25
  %144 = load i32, ptr @pos, align 4, !tbaa !25
  %145 = add nsw i32 %144, -1
  %146 = load i32, ptr @buf, align 8, !tbaa !20
  %147 = add nsw i32 %146, -1
  %148 = and i32 %147, %145
  %149 = load ptr, ptr getelementptr inbounds (%class.Buf, ptr @buf, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %150 = sext i32 %148 to i64
  %151 = getelementptr inbounds i8, ptr %149, i64 %150
  %152 = load i8, ptr %151, align 1, !tbaa !9
  %153 = zext i8 %152 to i32
  %154 = shl nuw nsw i32 %153, 8
  %155 = add nsw i32 %154, %143
  %156 = load i16, ptr %107, align 2, !tbaa !31
  %157 = sext i16 %156 to i32
  %158 = load i32, ptr @y, align 4, !tbaa !25
  %159 = mul i32 %158, 65662
  %160 = load i32, ptr @_ZZN9Predictor6updateEvE2a1, align 8, !tbaa !69
  %161 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE2a1, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %162 = sext i32 %160 to i64
  %163 = getelementptr inbounds i16, ptr %161, i64 %162
  %164 = load <2 x i16>, ptr %163, align 2, !tbaa !31
  %165 = zext <2 x i16> %164 to <2 x i32>
  %166 = insertelement <2 x i32> poison, i32 %159, i64 0
  %167 = shufflevector <2 x i32> %166, <2 x i32> poison, <2 x i32> zeroinitializer
  %168 = sub nsw <2 x i32> %167, %165
  %169 = lshr <2 x i32> %168, <i32 7, i32 7>
  %170 = trunc <2 x i32> %169 to <2 x i16>
  %171 = add <2 x i16> %164, %170
  store <2 x i16> %171, ptr %163, align 2, !tbaa !31
  %172 = and i32 %157, 127
  %173 = add nsw i32 %157, 2048
  %174 = ashr i32 %173, 7
  %175 = mul nsw i32 %155, 33
  %176 = add nsw i32 %174, %175
  store i32 %176, ptr @_ZZN9Predictor6updateEvE2a1, align 8, !tbaa !69
  %177 = sext i32 %176 to i64
  %178 = getelementptr inbounds i16, ptr %161, i64 %177
  %179 = load i16, ptr %178, align 2, !tbaa !31
  %180 = zext i16 %179 to i32
  %181 = sub nuw nsw i32 128, %172
  %182 = mul nuw nsw i32 %181, %180
  %183 = add nsw i32 %176, 1
  %184 = sext i32 %183 to i64
  %185 = getelementptr inbounds i16, ptr %161, i64 %184
  %186 = load i16, ptr %185, align 2, !tbaa !31
  %187 = zext i16 %186 to i32
  %188 = mul nuw nsw i32 %172, %187
  %189 = add nuw nsw i32 %188, %182
  %190 = lshr i32 %189, 11
  %191 = load i8, ptr %151, align 1, !tbaa !9
  %192 = zext i8 %191 to i32
  %193 = add nsw i32 %144, -2
  %194 = and i32 %147, %193
  %195 = sext i32 %194 to i64
  %196 = getelementptr inbounds i8, ptr %149, i64 %195
  %197 = load i8, ptr %196, align 1, !tbaa !9
  %198 = zext i8 %197 to i32
  %199 = mul i32 %192, 200002979
  %200 = mul i32 %198, 30005491
  %201 = add i32 %199, -230011545
  %202 = add i32 %201, %200
  %203 = lshr i32 %202, 9
  %204 = lshr i32 %192, 2
  %205 = lshr i32 %198, 3
  %206 = xor i32 %205, %204
  %207 = xor i32 %206, %203
  %208 = xor i32 %207, %202
  %209 = and i32 %208, 65535
  %210 = xor i32 %143, %209
  %211 = xor i32 %210, 65535
  %212 = load i16, ptr %107, align 2, !tbaa !31
  %213 = sext i16 %212 to i32
  %214 = load i32, ptr @_ZZN9Predictor6updateEvE2a2, align 8, !tbaa !69
  %215 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE2a2, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %216 = sext i32 %214 to i64
  %217 = getelementptr inbounds i16, ptr %215, i64 %216
  %218 = load <2 x i16>, ptr %217, align 2, !tbaa !31
  %219 = zext <2 x i16> %218 to <2 x i32>
  %220 = sub nsw <2 x i32> %167, %219
  %221 = lshr <2 x i32> %220, <i32 7, i32 7>
  %222 = trunc <2 x i32> %221 to <2 x i16>
  %223 = add <2 x i16> %218, %222
  store <2 x i16> %223, ptr %217, align 2, !tbaa !31
  %224 = and i32 %213, 127
  %225 = add nsw i32 %213, 2048
  %226 = ashr i32 %225, 7
  %227 = mul nsw i32 %211, 33
  %228 = add nsw i32 %227, %226
  store i32 %228, ptr @_ZZN9Predictor6updateEvE2a2, align 8, !tbaa !69
  %229 = sext i32 %228 to i64
  %230 = getelementptr inbounds i16, ptr %215, i64 %229
  %231 = load i16, ptr %230, align 2, !tbaa !31
  %232 = zext i16 %231 to i32
  %233 = sub nuw nsw i32 128, %224
  %234 = mul nuw nsw i32 %233, %232
  %235 = add nsw i32 %228, 1
  %236 = sext i32 %235 to i64
  %237 = getelementptr inbounds i16, ptr %215, i64 %236
  %238 = load i16, ptr %237, align 2, !tbaa !31
  %239 = zext i16 %238 to i32
  %240 = mul nuw nsw i32 %224, %239
  %241 = add nuw nsw i32 %240, %234
  %242 = lshr i32 %241, 11
  %243 = load i8, ptr %151, align 1, !tbaa !9
  %244 = zext i8 %243 to i32
  %245 = load i8, ptr %196, align 1, !tbaa !9
  %246 = zext i8 %245 to i32
  %247 = add nsw i32 %144, -3
  %248 = and i32 %147, %247
  %249 = sext i32 %248 to i64
  %250 = getelementptr inbounds i8, ptr %149, i64 %249
  %251 = load i8, ptr %250, align 1, !tbaa !9
  %252 = zext i8 %251 to i32
  %253 = mul i32 %244, 200002979
  %254 = mul i32 %246, 30005491
  %255 = mul i32 %252, 50004239
  %256 = add i32 %253, -180007306
  %257 = add i32 %256, %254
  %258 = add i32 %257, %255
  %259 = lshr i32 %258, 9
  %260 = lshr i32 %244, 2
  %261 = lshr i32 %246, 3
  %262 = lshr i32 %252, 4
  %263 = xor i32 %261, %260
  %264 = xor i32 %263, %262
  %265 = xor i32 %264, %259
  %266 = xor i32 %265, %258
  %267 = and i32 %266, 65535
  %268 = xor i32 %267, %143
  %269 = load i16, ptr %107, align 2, !tbaa !31
  %270 = sext i16 %269 to i32
  %271 = load i32, ptr @_ZZN9Predictor6updateEvE2a3, align 8, !tbaa !69
  %272 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE2a3, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %273 = sext i32 %271 to i64
  %274 = getelementptr inbounds i16, ptr %272, i64 %273
  %275 = load <2 x i16>, ptr %274, align 2, !tbaa !31
  %276 = zext <2 x i16> %275 to <2 x i32>
  %277 = sub nsw <2 x i32> %167, %276
  %278 = lshr <2 x i32> %277, <i32 7, i32 7>
  %279 = trunc <2 x i32> %278 to <2 x i16>
  %280 = add <2 x i16> %275, %279
  store <2 x i16> %280, ptr %274, align 2, !tbaa !31
  %281 = and i32 %270, 127
  %282 = add nsw i32 %270, 2048
  %283 = ashr i32 %282, 7
  %284 = mul nsw i32 %268, 33
  %285 = add nsw i32 %284, %283
  store i32 %285, ptr @_ZZN9Predictor6updateEvE2a3, align 8, !tbaa !69
  %286 = sext i32 %285 to i64
  %287 = getelementptr inbounds i16, ptr %272, i64 %286
  %288 = load i16, ptr %287, align 2, !tbaa !31
  %289 = zext i16 %288 to i32
  %290 = sub nuw nsw i32 128, %281
  %291 = mul nuw nsw i32 %290, %289
  %292 = add nsw i32 %285, 1
  %293 = sext i32 %292 to i64
  %294 = getelementptr inbounds i16, ptr %272, i64 %293
  %295 = load i16, ptr %294, align 2, !tbaa !31
  %296 = zext i16 %295 to i32
  %297 = mul nuw nsw i32 %281, %296
  %298 = add nuw nsw i32 %297, %291
  %299 = lshr i32 %298, 11
  %300 = add i32 %103, 2
  %301 = add i32 %300, %190
  %302 = add i32 %301, %242
  %303 = add i32 %302, %299
  %304 = ashr i32 %303, 2
  %305 = load i8, ptr %151, align 1, !tbaa !9
  %306 = zext i8 %305 to i32
  %307 = shl nuw nsw i32 %306, 8
  %308 = add nsw i32 %307, %143
  %309 = zext i32 %142 to i64
  %310 = getelementptr inbounds i16, ptr %105, i64 %309
  %311 = load i16, ptr %310, align 2, !tbaa !31
  %312 = sext i16 %311 to i32
  %313 = load i32, ptr @_ZZN9Predictor6updateEvE2a4, align 8, !tbaa !69
  %314 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE2a4, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %315 = sext i32 %313 to i64
  %316 = getelementptr inbounds i16, ptr %314, i64 %315
  %317 = load <2 x i16>, ptr %316, align 2, !tbaa !31
  %318 = zext <2 x i16> %317 to <2 x i32>
  %319 = sub nsw <2 x i32> %167, %318
  %320 = lshr <2 x i32> %319, <i32 7, i32 7>
  %321 = trunc <2 x i32> %320 to <2 x i16>
  %322 = add <2 x i16> %317, %321
  store <2 x i16> %322, ptr %316, align 2, !tbaa !31
  %323 = and i32 %312, 127
  %324 = add nsw i32 %312, 2048
  %325 = ashr i32 %324, 7
  %326 = mul nsw i32 %308, 33
  %327 = add nsw i32 %325, %326
  store i32 %327, ptr @_ZZN9Predictor6updateEvE2a4, align 8, !tbaa !69
  %328 = sext i32 %327 to i64
  %329 = getelementptr inbounds i16, ptr %314, i64 %328
  %330 = load i16, ptr %329, align 2, !tbaa !31
  %331 = zext i16 %330 to i32
  %332 = sub nuw nsw i32 128, %323
  %333 = mul nuw nsw i32 %332, %331
  %334 = add nsw i32 %327, 1
  %335 = sext i32 %334 to i64
  %336 = getelementptr inbounds i16, ptr %314, i64 %335
  %337 = load i16, ptr %336, align 2, !tbaa !31
  %338 = zext i16 %337 to i32
  %339 = mul nuw nsw i32 %323, %338
  %340 = add nuw nsw i32 %339, %333
  %341 = lshr i32 %340, 11
  %342 = load i8, ptr %151, align 1, !tbaa !9
  %343 = zext i8 %342 to i32
  %344 = load i8, ptr %196, align 1, !tbaa !9
  %345 = zext i8 %344 to i32
  %346 = mul i32 %343, 200002979
  %347 = mul i32 %345, 30005491
  %348 = add i32 %346, -230011545
  %349 = add i32 %348, %347
  %350 = lshr i32 %349, 9
  %351 = lshr i32 %343, 2
  %352 = lshr i32 %345, 3
  %353 = xor i32 %352, %351
  %354 = xor i32 %353, %350
  %355 = xor i32 %354, %349
  %356 = and i32 %355, 65535
  %357 = xor i32 %143, %356
  %358 = xor i32 %357, 65535
  %359 = load i16, ptr %310, align 2, !tbaa !31
  %360 = sext i16 %359 to i32
  %361 = load i32, ptr @_ZZN9Predictor6updateEvE2a5, align 8, !tbaa !69
  %362 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE2a5, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %363 = sext i32 %361 to i64
  %364 = getelementptr inbounds i16, ptr %362, i64 %363
  %365 = load <2 x i16>, ptr %364, align 2, !tbaa !31
  %366 = zext <2 x i16> %365 to <2 x i32>
  %367 = sub nsw <2 x i32> %167, %366
  %368 = lshr <2 x i32> %367, <i32 7, i32 7>
  %369 = trunc <2 x i32> %368 to <2 x i16>
  %370 = add <2 x i16> %365, %369
  store <2 x i16> %370, ptr %364, align 2, !tbaa !31
  %371 = and i32 %360, 127
  %372 = add nsw i32 %360, 2048
  %373 = ashr i32 %372, 7
  %374 = mul nsw i32 %358, 33
  %375 = add nsw i32 %374, %373
  store i32 %375, ptr @_ZZN9Predictor6updateEvE2a5, align 8, !tbaa !69
  %376 = sext i32 %375 to i64
  %377 = getelementptr inbounds i16, ptr %362, i64 %376
  %378 = load i16, ptr %377, align 2, !tbaa !31
  %379 = zext i16 %378 to i32
  %380 = sub nuw nsw i32 128, %371
  %381 = mul nuw nsw i32 %380, %379
  %382 = add nsw i32 %375, 1
  %383 = sext i32 %382 to i64
  %384 = getelementptr inbounds i16, ptr %362, i64 %383
  %385 = load i16, ptr %384, align 2, !tbaa !31
  %386 = zext i16 %385 to i32
  %387 = mul nuw nsw i32 %371, %386
  %388 = add nuw nsw i32 %387, %381
  %389 = lshr i32 %388, 11
  %390 = load i8, ptr %151, align 1, !tbaa !9
  %391 = zext i8 %390 to i32
  %392 = load i8, ptr %196, align 1, !tbaa !9
  %393 = zext i8 %392 to i32
  %394 = load i8, ptr %250, align 1, !tbaa !9
  %395 = zext i8 %394 to i32
  %396 = mul i32 %391, 200002979
  %397 = mul i32 %393, 30005491
  %398 = mul i32 %395, 50004239
  %399 = add i32 %396, -180007306
  %400 = add i32 %399, %397
  %401 = add i32 %400, %398
  %402 = lshr i32 %401, 9
  %403 = lshr i32 %391, 2
  %404 = lshr i32 %393, 3
  %405 = lshr i32 %395, 4
  %406 = xor i32 %404, %403
  %407 = xor i32 %406, %405
  %408 = xor i32 %407, %402
  %409 = xor i32 %408, %401
  %410 = and i32 %409, 65535
  %411 = xor i32 %410, %143
  %412 = load i16, ptr %310, align 2, !tbaa !31
  %413 = sext i16 %412 to i32
  %414 = load i32, ptr @_ZZN9Predictor6updateEvE2a6, align 8, !tbaa !69
  %415 = load ptr, ptr getelementptr inbounds (%class.APM1, ptr @_ZZN9Predictor6updateEvE2a6, i64 0, i32 2, i32 3), align 8, !tbaa !76
  %416 = sext i32 %414 to i64
  %417 = getelementptr inbounds i16, ptr %415, i64 %416
  %418 = load <2 x i16>, ptr %417, align 2, !tbaa !31
  %419 = zext <2 x i16> %418 to <2 x i32>
  %420 = sub nsw <2 x i32> %167, %419
  %421 = lshr <2 x i32> %420, <i32 7, i32 7>
  %422 = trunc <2 x i32> %421 to <2 x i16>
  %423 = add <2 x i16> %418, %422
  store <2 x i16> %423, ptr %417, align 2, !tbaa !31
  %424 = and i32 %413, 127
  %425 = add nsw i32 %413, 2048
  %426 = ashr i32 %425, 7
  %427 = mul nsw i32 %411, 33
  %428 = add nsw i32 %427, %426
  store i32 %428, ptr @_ZZN9Predictor6updateEvE2a6, align 8, !tbaa !69
  %429 = sext i32 %428 to i64
  %430 = getelementptr inbounds i16, ptr %415, i64 %429
  %431 = load i16, ptr %430, align 2, !tbaa !31
  %432 = zext i16 %431 to i32
  %433 = sub nuw nsw i32 128, %424
  %434 = mul nuw nsw i32 %433, %432
  %435 = add nsw i32 %428, 1
  %436 = sext i32 %435 to i64
  %437 = getelementptr inbounds i16, ptr %415, i64 %436
  %438 = load i16, ptr %437, align 2, !tbaa !31
  %439 = zext i16 %438 to i32
  %440 = mul nuw nsw i32 %424, %439
  %441 = add nuw nsw i32 %440, %434
  %442 = lshr i32 %441, 11
  %443 = add nuw nsw i32 %142, 2
  %444 = add nuw nsw i32 %443, %341
  %445 = add nuw nsw i32 %444, %389
  %446 = add nuw nsw i32 %445, %442
  %447 = lshr i32 %446, 2
  %448 = add nsw i32 %304, 1
  %449 = add nsw i32 %448, %447
  %450 = ashr i32 %449, 1
  store i32 %450, ptr %0, align 4, !tbaa !229
  ret void

451:                                              ; preds = %97, %95, %93, %91, %89, %87, %85
  %452 = phi ptr [ @_ZGVZN9Predictor6updateEvE2a6, %97 ], [ @_ZGVZN9Predictor6updateEvE2a5, %95 ], [ @_ZGVZN9Predictor6updateEvE2a4, %93 ], [ @_ZGVZN9Predictor6updateEvE2a3, %91 ], [ @_ZGVZN9Predictor6updateEvE2a2, %89 ], [ @_ZGVZN9Predictor6updateEvE2a1, %87 ], [ @_ZGVZN9Predictor6updateEvE1a, %85 ]
  %453 = phi { ptr, i32 } [ %98, %97 ], [ %96, %95 ], [ %94, %93 ], [ %92, %91 ], [ %90, %89 ], [ %88, %87 ], [ %86, %85 ]
  tail call void @__cxa_guard_abort(ptr nonnull %452) #39
  resume { ptr, i32 } %453
}

; Function Attrs: inlinehint nounwind uwtable
define linkonce_odr dso_local void @_ZN4APM1D2Ev(ptr noundef nonnull align 8 dereferenceable(32) %0) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2
  %3 = load i32, ptr %2, align 8, !tbaa !74
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %5 = shl i32 %3, 1
  %6 = sub i32 %4, %5
  store i32 %6, ptr @programChecker, align 8, !tbaa !13
  %7 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %8 = icmp sgt i32 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %1
  store i32 %6, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %10

10:                                               ; preds = %1, %9
  %11 = getelementptr inbounds %class.APM1, ptr %0, i64 0, i32 2, i32 2
  %12 = load ptr, ptr %11, align 8, !tbaa !75
  tail call void @free(ptr noundef %12) #39
  ret void
}

; Function Attrs: nofree nounwind uwtable
define dso_local void @_ZN7EncoderC2E4ModeP8_IO_FILE(ptr nocapture noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %1, ptr noundef %2) unnamed_addr #25 align 2 {
  store i32 2048, ptr %0, align 8, !tbaa !229
  %4 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 1
  store i32 %1, ptr %4, align 4, !tbaa !231
  %5 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 2
  store ptr %2, ptr %5, align 8, !tbaa !234
  %6 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 3
  store i32 0, ptr %6, align 8, !tbaa !235
  %7 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 4
  store i32 -1, ptr %7, align 4, !tbaa !236
  %8 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 5
  store i32 0, ptr %8, align 8, !tbaa !237
  %9 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 6
  store ptr null, ptr %9, align 8, !tbaa !238
  %10 = load i32, ptr @level, align 4, !tbaa !25
  %11 = icmp sgt i32 %10, 0
  %12 = icmp eq i32 %1, 1
  %13 = and i1 %11, %12
  br i1 %13, label %15, label %14

14:                                               ; preds = %15, %3
  br label %34

15:                                               ; preds = %3
  %16 = tail call i32 @getc(ptr noundef %2)
  %17 = and i32 %16, 255
  store i32 %17, ptr %8, align 8, !tbaa !237
  %18 = shl nuw nsw i32 %17, 8
  %19 = load ptr, ptr %5, align 8, !tbaa !234
  %20 = tail call i32 @getc(ptr noundef %19)
  %21 = and i32 %20, 255
  %22 = or i32 %21, %18
  store i32 %22, ptr %8, align 8, !tbaa !237
  %23 = shl nuw nsw i32 %22, 8
  %24 = load ptr, ptr %5, align 8, !tbaa !234
  %25 = tail call i32 @getc(ptr noundef %24)
  %26 = and i32 %25, 255
  %27 = or i32 %26, %23
  store i32 %27, ptr %8, align 8, !tbaa !237
  %28 = shl nuw i32 %27, 8
  %29 = load ptr, ptr %5, align 8, !tbaa !234
  %30 = tail call i32 @getc(ptr noundef %29)
  %31 = and i32 %30, 255
  %32 = or i32 %31, %28
  store i32 %32, ptr %8, align 8, !tbaa !237
  br label %14

33:                                               ; preds = %34
  ret void

34:                                               ; preds = %34, %14
  %35 = phi i64 [ 0, %14 ], [ %49, %34 ]
  %36 = trunc i64 %35 to i16
  %37 = shl i16 %36, 1
  %38 = or i16 %37, 3
  %39 = udiv i16 16384, %38
  %40 = zext i16 %39 to i32
  %41 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %35
  store i32 %40, ptr %41, align 8, !tbaa !25
  %42 = or i64 %35, 1
  %43 = trunc i64 %42 to i16
  %44 = shl i16 %43, 1
  %45 = add nuw nsw i16 %44, 3
  %46 = udiv i16 16384, %45
  %47 = zext i16 %46 to i32
  %48 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %42
  store i32 %47, ptr %48, align 4, !tbaa !25
  %49 = add nuw nsw i64 %35, 2
  %50 = icmp eq i64 %49, 1024
  br i1 %50, label %33, label %34, !llvm.loop !239
}

; Function Attrs: nofree nounwind
declare noundef i32 @getc(ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_ZN7Encoder5flushEv(ptr nocapture noundef nonnull readonly align 8 dereferenceable(40) %0) local_unnamed_addr #19 align 2 {
  %2 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 4, !tbaa !231
  %4 = icmp eq i32 %3, 0
  %5 = load i32, ptr @level, align 4
  %6 = icmp sgt i32 %5, 0
  %7 = select i1 %4, i1 %6, i1 false
  br i1 %7, label %8, label %15

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 3
  %10 = load i32, ptr %9, align 8, !tbaa !235
  %11 = lshr i32 %10, 24
  %12 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 2
  %13 = load ptr, ptr %12, align 8, !tbaa !234
  %14 = tail call i32 @putc(i32 noundef %11, ptr noundef %13)
  br label %15

15:                                               ; preds = %8, %1
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @putc(i32 noundef, ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: uwtable
define dso_local noundef i32 @_Z6detectP8_IO_FILEi8Filetype(ptr nocapture noundef %0, i32 noundef %1, i32 noundef %2) local_unnamed_addr #5 personality ptr @__gxx_personality_v0 {
  %4 = alloca [32 x i8], align 16
  %5 = tail call i64 @ftell(ptr noundef %0)
  %6 = load i32, ptr @programChecker, align 8, !tbaa !13
  %7 = add nsw i32 %6, 1024
  store i32 %7, ptr @programChecker, align 8, !tbaa !13
  %8 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %9 = icmp sgt i32 %7, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %3
  store i32 %7, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %11

11:                                               ; preds = %10, %3
  %12 = phi i32 [ %7, %10 ], [ %8, %3 ]
  %13 = tail call noalias dereferenceable_or_null(1024) ptr @calloc(i64 noundef 1024, i64 noundef 1) #41
  %14 = icmp eq ptr %13, null
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %16, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %16, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

17:                                               ; preds = %11
  %18 = add nsw i32 %6, 2048
  store i32 %18, ptr @programChecker, align 8, !tbaa !13
  %19 = icmp sgt i32 %18, %12
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  store i32 %18, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %21

21:                                               ; preds = %20, %17
  %22 = tail call noalias dereferenceable_or_null(1024) ptr @calloc(i64 noundef 1024, i64 noundef 1) #41
  %23 = icmp eq ptr %22, null
  br i1 %23, label %24, label %27

24:                                               ; preds = %21
  %25 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %25, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %25, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %26 unwind label %38

26:                                               ; preds = %24
  unreachable

27:                                               ; preds = %21
  call void @llvm.lifetime.start.p0(i64 32, ptr nonnull %4) #39
  %28 = icmp sgt i32 %1, 0
  br i1 %28, label %29, label %552

29:                                               ; preds = %27
  %30 = icmp eq i32 %2, 1
  %31 = icmp ne i32 %2, 1
  %32 = add i32 %2, -2
  %33 = icmp ult i32 %32, 3
  %34 = icmp eq i32 %2, 6
  %35 = icmp eq i32 %2, 7
  %36 = icmp ne i32 %2, 8
  %37 = icmp eq i32 %2, 8
  br label %46

38:                                               ; preds = %24
  %39 = landingpad { ptr, i32 }
          cleanup
  %40 = load i32, ptr @programChecker, align 8, !tbaa !13
  %41 = add i32 %40, -1024
  store i32 %41, ptr @programChecker, align 8, !tbaa !13
  %42 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %43 = icmp sgt i32 %41, %42
  br i1 %43, label %44, label %45

44:                                               ; preds = %38
  store i32 %41, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %45

45:                                               ; preds = %38, %44
  tail call void @free(ptr noundef nonnull %13) #39
  resume { ptr, i32 } %39

46:                                               ; preds = %29, %544
  %47 = phi i1 [ true, %29 ], [ %546, %544 ]
  %48 = phi i32 [ 0, %29 ], [ %79, %544 ]
  %49 = phi i32 [ 0, %29 ], [ %537, %544 ]
  %50 = phi i32 [ 0, %29 ], [ %536, %544 ]
  %51 = phi i32 [ 0, %29 ], [ %545, %544 ]
  %52 = phi i32 [ 0, %29 ], [ %493, %544 ]
  %53 = phi i32 [ 0, %29 ], [ %492, %544 ]
  %54 = phi i32 [ 0, %29 ], [ %491, %544 ]
  %55 = phi i32 [ -1, %29 ], [ %490, %544 ]
  %56 = phi i32 [ 0, %29 ], [ %489, %544 ]
  %57 = phi i32 [ 0, %29 ], [ %132, %544 ]
  %58 = phi i32 [ 0, %29 ], [ %131, %544 ]
  %59 = phi i32 [ 0, %29 ], [ %130, %544 ]
  %60 = phi i32 [ 0, %29 ], [ %129, %544 ]
  %61 = phi i32 [ 0, %29 ], [ %390, %544 ]
  %62 = phi i32 [ 0, %29 ], [ %389, %544 ]
  %63 = phi i32 [ 0, %29 ], [ %388, %544 ]
  %64 = phi i32 [ 0, %29 ], [ %387, %544 ]
  %65 = phi i32 [ 0, %29 ], [ %386, %544 ]
  %66 = phi i32 [ 0, %29 ], [ %535, %544 ]
  %67 = phi i32 [ 0, %29 ], [ %385, %544 ]
  %68 = phi i32 [ -1, %29 ], [ %288, %544 ]
  %69 = phi i32 [ 0, %29 ], [ %287, %544 ]
  %70 = phi i32 [ 0, %29 ], [ %286, %544 ]
  %71 = phi i32 [ 0, %29 ], [ %285, %544 ]
  %72 = phi i32 [ 0, %29 ], [ %284, %544 ]
  %73 = phi i32 [ 0, %29 ], [ %283, %544 ]
  %74 = phi i32 [ 0, %29 ], [ %282, %544 ]
  %75 = tail call i32 @getc(ptr noundef %0)
  %76 = icmp eq i32 %75, -1
  br i1 %76, label %552, label %77

77:                                               ; preds = %46
  %78 = shl i32 %48, 8
  %79 = or i32 %75, %78
  %80 = icmp eq i32 %60, 0
  %81 = icmp ugt i32 %51, 2
  %82 = select i1 %80, i1 %81, i1 false
  br i1 %82, label %83, label %87

83:                                               ; preds = %77
  %84 = and i32 %79, -16
  %85 = icmp eq i32 %84, -2555936
  %86 = add nuw nsw i32 %51, 2
  br i1 %85, label %100, label %128

87:                                               ; preds = %77
  br i1 %80, label %128, label %88

88:                                               ; preds = %87
  %89 = icmp eq i32 %57, %51
  br i1 %89, label %90, label %100

90:                                               ; preds = %88
  %91 = and i32 %79, -1048576
  %92 = icmp eq i32 %91, -2097152
  %93 = and i32 %79, -65536
  %94 = icmp eq i32 %93, -131072
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %100

96:                                               ; preds = %90
  %97 = and i32 %79, 65535
  %98 = add nuw i32 %51, 2
  %99 = add i32 %98, %97
  br label %100

100:                                              ; preds = %83, %90, %96, %88
  %101 = phi i32 [ %60, %96 ], [ %60, %88 ], [ %60, %90 ], [ %51, %83 ]
  %102 = phi i32 [ %99, %96 ], [ %57, %88 ], [ %51, %90 ], [ %86, %83 ]
  %103 = icmp slt i32 %102, %51
  %104 = sub nsw i32 %51, %101
  %105 = icmp slt i32 %104, 65536
  %106 = select i1 %103, i1 %105, i1 false
  %107 = icmp ugt i32 %48, -16777217
  %108 = select i1 %106, i1 %107, i1 false
  %109 = and i32 %79, -16776961
  %110 = icmp eq i32 %109, -1073741816
  %111 = select i1 %108, i1 %110, i1 false
  %112 = select i1 %111, i32 %51, i32 %59
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %128, label %114

114:                                              ; preds = %100
  %115 = icmp sgt i32 %112, %101
  %116 = select i1 %115, i1 %105, i1 false
  %117 = sub nsw i32 %51, %112
  %118 = icmp slt i32 %117, 4096
  %119 = select i1 %116, i1 %118, i1 false
  %120 = and i32 %79, 65535
  %121 = icmp eq i32 %120, 65498
  %122 = select i1 %119, i1 %121, i1 false
  br i1 %122, label %123, label %128

123:                                              ; preds = %114
  br i1 %30, label %128, label %124

124:                                              ; preds = %123
  %125 = zext i32 %101 to i64
  %126 = add i64 %5, -3
  %127 = add i64 %126, %125
  br label %548

128:                                              ; preds = %83, %100, %114, %123, %87
  %129 = phi i32 [ %101, %123 ], [ %101, %114 ], [ %101, %100 ], [ 0, %87 ], [ 0, %83 ]
  %130 = phi i32 [ %112, %123 ], [ %112, %114 ], [ 0, %100 ], [ %59, %87 ], [ %59, %83 ]
  %131 = phi i32 [ %51, %123 ], [ %58, %114 ], [ %58, %100 ], [ %58, %87 ], [ %58, %83 ]
  %132 = phi i32 [ %102, %123 ], [ %102, %114 ], [ %102, %100 ], [ %57, %87 ], [ %57, %83 ]
  %133 = icmp eq i32 %131, 0
  %134 = select i1 %31, i1 true, i1 %133
  %135 = icmp sle i32 %51, %131
  %136 = select i1 %134, i1 true, i1 %135
  %137 = and i32 %79, 65280
  %138 = icmp ne i32 %137, 65280
  %139 = select i1 %136, i1 true, i1 %138
  %140 = and i32 %75, 255
  %141 = icmp eq i32 %140, 0
  %142 = or i1 %141, %139
  %143 = and i32 %75, 248
  %144 = icmp eq i32 %143, 208
  %145 = or i1 %144, %142
  br i1 %145, label %146, label %552

146:                                              ; preds = %128
  %147 = and i32 %79, 65535
  %148 = icmp eq i32 %147, 16973
  %149 = select i1 %148, i32 %51, i32 %74
  %150 = icmp eq i32 %149, 0
  br i1 %150, label %281, label %151

151:                                              ; preds = %146
  %152 = sub nsw i32 %51, %149
  switch i32 %152, label %173 [
    i32 4, label %153
    i32 12, label %163
  ]

153:                                              ; preds = %151
  %154 = lshr i32 %79, 24
  %155 = lshr i32 %79, 8
  %156 = and i32 %155, 65280
  %157 = shl i32 %79, 8
  %158 = and i32 %157, 16711680
  %159 = shl i32 %75, 24
  %160 = or i32 %154, %159
  %161 = or i32 %160, %156
  %162 = or i32 %161, %158
  br label %178

163:                                              ; preds = %151
  %164 = lshr i32 %79, 24
  %165 = lshr i32 %79, 8
  %166 = and i32 %165, 65280
  %167 = shl i32 %79, 8
  %168 = and i32 %167, 16711680
  %169 = shl i32 %75, 24
  %170 = or i32 %164, %169
  %171 = or i32 %170, %166
  %172 = or i32 %171, %168
  br label %178

173:                                              ; preds = %151
  %174 = icmp eq i32 %152, 16
  %175 = icmp ne i32 %79, 671088640
  %176 = select i1 %174, i1 %175, i1 false
  br i1 %176, label %177, label %178

177:                                              ; preds = %173
  br label %178

178:                                              ; preds = %163, %153, %177, %173
  %179 = phi i32 [ %69, %177 ], [ %69, %173 ], [ %69, %153 ], [ %172, %163 ]
  %180 = phi i32 [ 0, %177 ], [ %149, %173 ], [ %149, %153 ], [ %149, %163 ]
  %181 = phi i32 [ 0, %177 ], [ %73, %173 ], [ %162, %153 ], [ %73, %163 ]
  %182 = phi i32 [ 0, %177 ], [ %72, %173 ], [ %72, %153 ], [ %72, %163 ]
  %183 = phi i32 [ -1, %177 ], [ %68, %173 ], [ %68, %153 ], [ %68, %163 ]
  %184 = sub nsw i32 %51, %180
  %185 = icmp eq i32 %184, 20
  br i1 %185, label %186, label %198

186:                                              ; preds = %178
  %187 = lshr i32 %79, 24
  %188 = lshr i32 %79, 8
  %189 = and i32 %188, 65280
  %190 = or i32 %189, %187
  %191 = shl i32 %79, 8
  %192 = and i32 %191, 16711680
  %193 = or i32 %190, %192
  %194 = shl i32 %75, 24
  %195 = or i32 %193, %194
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %186
  br label %198

198:                                              ; preds = %186, %197, %178
  %199 = phi i32 [ 0, %197 ], [ %180, %186 ], [ %180, %178 ]
  %200 = phi i32 [ 0, %197 ], [ %181, %186 ], [ %181, %178 ]
  %201 = phi i32 [ 0, %197 ], [ %182, %186 ], [ %182, %178 ]
  %202 = phi i32 [ 0, %197 ], [ %195, %186 ], [ %71, %178 ]
  %203 = phi i32 [ -1, %197 ], [ %183, %186 ], [ %183, %178 ]
  %204 = sub nsw i32 %51, %199
  %205 = icmp eq i32 %204, 24
  br i1 %205, label %206, label %218

206:                                              ; preds = %198
  %207 = lshr i32 %79, 24
  %208 = lshr i32 %79, 8
  %209 = and i32 %208, 65280
  %210 = or i32 %209, %207
  %211 = shl i32 %79, 8
  %212 = and i32 %211, 16711680
  %213 = or i32 %210, %212
  %214 = shl i32 %75, 24
  %215 = or i32 %213, %214
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %206
  br label %218

218:                                              ; preds = %206, %217, %198
  %219 = phi i32 [ 0, %217 ], [ %199, %206 ], [ %199, %198 ]
  %220 = phi i32 [ 0, %217 ], [ %200, %206 ], [ %200, %198 ]
  %221 = phi i32 [ 0, %217 ], [ %201, %206 ], [ %201, %198 ]
  %222 = phi i32 [ 0, %217 ], [ %215, %206 ], [ %70, %198 ]
  %223 = phi i32 [ -1, %217 ], [ %203, %206 ], [ %203, %198 ]
  %224 = sub nsw i32 %51, %219
  %225 = icmp eq i32 %224, 27
  %226 = select i1 %225, i32 %75, i32 %221
  %227 = icmp eq i32 %224, 31
  br i1 %227, label %228, label %231

228:                                              ; preds = %218
  %229 = icmp eq i32 %79, 0
  br i1 %229, label %231, label %230

230:                                              ; preds = %228
  br label %231

231:                                              ; preds = %228, %230, %218
  %232 = phi i32 [ 0, %230 ], [ %219, %228 ], [ %219, %218 ]
  %233 = phi i32 [ 0, %230 ], [ %220, %228 ], [ %220, %218 ]
  %234 = phi i32 [ 0, %230 ], [ %226, %228 ], [ %226, %218 ]
  %235 = phi i32 [ -1, %230 ], [ 0, %228 ], [ %223, %218 ]
  br i1 %33, label %236, label %259

236:                                              ; preds = %231
  %237 = icmp eq i32 %234, 4
  %238 = icmp eq i32 %234, 8
  %239 = or i1 %237, %238
  %240 = icmp eq i32 %234, 24
  %241 = or i1 %240, %239
  %242 = icmp eq i32 %235, 0
  %243 = select i1 %241, i1 %242, i1 false
  br i1 %243, label %244, label %259

244:                                              ; preds = %236
  %245 = mul nsw i32 %222, %202
  br i1 %237, label %246, label %249

246:                                              ; preds = %244
  %247 = ashr i32 %245, 1
  %248 = add nsw i32 %247, %179
  br label %255

249:                                              ; preds = %244
  %250 = add nsw i32 %245, %179
  %251 = select i1 %238, i32 %250, i32 %233
  br i1 %240, label %252, label %255

252:                                              ; preds = %249
  %253 = mul nsw i32 %245, 3
  %254 = add nsw i32 %253, %179
  br label %255

255:                                              ; preds = %246, %252, %249
  %256 = phi i32 [ %251, %249 ], [ %254, %252 ], [ %248, %246 ]
  %257 = sext i32 %256 to i64
  %258 = add nsw i64 %5, %257
  br label %548

259:                                              ; preds = %231, %236
  %260 = icmp eq i32 %234, 4
  %261 = icmp eq i32 %235, 0
  %262 = select i1 %260, i1 %261, i1 false
  br i1 %262, label %263, label %267

263:                                              ; preds = %259
  %264 = sext i32 %232 to i64
  %265 = add i64 %5, -1
  %266 = add i64 %265, %264
  br label %548

267:                                              ; preds = %259
  %268 = icmp eq i32 %234, 8
  %269 = select i1 %268, i1 %261, i1 false
  br i1 %269, label %270, label %274

270:                                              ; preds = %267
  %271 = sext i32 %232 to i64
  %272 = add i64 %5, -1
  %273 = add i64 %272, %271
  br label %548

274:                                              ; preds = %267
  %275 = icmp eq i32 %234, 24
  %276 = select i1 %275, i1 %261, i1 false
  br i1 %276, label %277, label %281

277:                                              ; preds = %274
  %278 = sext i32 %232 to i64
  %279 = add i64 %5, -1
  %280 = add i64 %279, %278
  br label %548

281:                                              ; preds = %274, %146
  %282 = phi i32 [ %232, %274 ], [ 0, %146 ]
  %283 = phi i32 [ %233, %274 ], [ %73, %146 ]
  %284 = phi i32 [ %234, %274 ], [ %72, %146 ]
  %285 = phi i32 [ %202, %274 ], [ %71, %146 ]
  %286 = phi i32 [ %222, %274 ], [ %70, %146 ]
  %287 = phi i32 [ %179, %274 ], [ %69, %146 ]
  %288 = phi i32 [ %235, %274 ], [ %68, %146 ]
  %289 = and i32 %79, 16777215
  %290 = icmp eq i32 %289, 5256458
  %291 = select i1 %290, i32 %51, i32 %67
  %292 = icmp eq i32 %291, 0
  br i1 %292, label %384, label %293

293:                                              ; preds = %281
  %294 = sub nsw i32 %51, %291
  %295 = icmp eq i32 %294, 1
  %296 = icmp eq i32 %75, 35
  %297 = and i1 %296, %295
  %298 = select i1 %297, i32 1, i32 %65
  %299 = icmp eq i32 %298, 0
  %300 = icmp eq i32 %75, 32
  %301 = and i1 %300, %299
  %302 = icmp eq i32 %64, 0
  %303 = select i1 %301, i1 %302, i1 false
  %304 = icmp ne i32 %62, 0
  %305 = select i1 %303, i1 %304, i1 false
  br i1 %305, label %306, label %313

306:                                              ; preds = %293
  %307 = sext i32 %62 to i64
  %308 = getelementptr inbounds [32 x i8], ptr %4, i64 0, i64 %307
  store i8 0, ptr %308, align 1, !tbaa !9
  %309 = call i64 @strtol(ptr nocapture noundef nonnull %4, ptr noundef null, i32 noundef 10) #39
  %310 = trunc i64 %309 to i32
  %311 = icmp eq i32 %310, 0
  br i1 %311, label %312, label %313

312:                                              ; preds = %306
  br label %313

313:                                              ; preds = %306, %312, %293
  %314 = phi i32 [ %291, %293 ], [ 0, %312 ], [ %291, %306 ]
  %315 = phi i32 [ %64, %293 ], [ 0, %312 ], [ %310, %306 ]
  %316 = phi i32 [ %63, %293 ], [ 0, %312 ], [ %63, %306 ]
  %317 = phi i32 [ %62, %293 ], [ 0, %312 ], [ 0, %306 ]
  %318 = phi i32 [ %61, %293 ], [ 0, %312 ], [ %61, %306 ]
  %319 = icmp eq i32 %298, 0
  %320 = icmp eq i32 %75, 10
  %321 = and i1 %320, %319
  %322 = icmp eq i32 %316, 0
  %323 = select i1 %321, i1 %322, i1 false
  %324 = icmp ne i32 %317, 0
  %325 = select i1 %323, i1 %324, i1 false
  br i1 %325, label %326, label %333

326:                                              ; preds = %313
  %327 = sext i32 %317 to i64
  %328 = getelementptr inbounds [32 x i8], ptr %4, i64 0, i64 %327
  store i8 0, ptr %328, align 1, !tbaa !9
  %329 = call i64 @strtol(ptr nocapture noundef nonnull %4, ptr noundef null, i32 noundef 10) #39
  %330 = trunc i64 %329 to i32
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %343

332:                                              ; preds = %326
  br label %343

333:                                              ; preds = %313
  %334 = icmp eq i32 %318, 0
  %335 = select i1 %321, i1 %334, i1 false
  %336 = select i1 %335, i1 %324, i1 false
  br i1 %336, label %337, label %342

337:                                              ; preds = %333
  %338 = sext i32 %317 to i64
  %339 = getelementptr inbounds [32 x i8], ptr %4, i64 0, i64 %338
  store i8 0, ptr %339, align 1, !tbaa !9
  %340 = call i64 @strtol(ptr nocapture noundef nonnull %4, ptr noundef null, i32 noundef 10) #39
  %341 = trunc i64 %340 to i32
  br label %343

342:                                              ; preds = %333
  br i1 %319, label %343, label %353

343:                                              ; preds = %337, %332, %326, %342
  %344 = phi i32 [ %318, %342 ], [ %341, %337 ], [ %318, %326 ], [ 0, %332 ]
  %345 = phi i32 [ %317, %342 ], [ 0, %337 ], [ 0, %326 ], [ 0, %332 ]
  %346 = phi i32 [ %314, %342 ], [ %314, %337 ], [ %314, %326 ], [ 0, %332 ]
  %347 = phi i32 [ %315, %342 ], [ %315, %337 ], [ %315, %326 ], [ 0, %332 ]
  %348 = phi i32 [ %316, %342 ], [ %316, %337 ], [ %330, %326 ], [ 0, %332 ]
  %349 = trunc i32 %75 to i8
  %350 = add nsw i32 %345, 1
  %351 = sext i32 %345 to i64
  %352 = getelementptr inbounds [32 x i8], ptr %4, i64 0, i64 %351
  store i8 %349, ptr %352, align 1, !tbaa !9
  br label %353

353:                                              ; preds = %343, %342
  %354 = phi i32 [ %318, %342 ], [ %344, %343 ]
  %355 = phi i32 [ %314, %342 ], [ %346, %343 ]
  %356 = phi i32 [ %315, %342 ], [ %347, %343 ]
  %357 = phi i32 [ %316, %342 ], [ %348, %343 ]
  %358 = phi i32 [ %317, %342 ], [ %350, %343 ]
  %359 = icmp sgt i32 %358, 31
  br i1 %359, label %384, label %360

360:                                              ; preds = %353
  %361 = icmp ne i32 %356, 0
  %362 = select i1 %34, i1 %361, i1 false
  %363 = icmp ne i32 %357, 0
  %364 = select i1 %362, i1 %363, i1 false
  %365 = icmp ne i32 %354, 0
  %366 = select i1 %364, i1 %365, i1 false
  br i1 %366, label %367, label %374

367:                                              ; preds = %360
  %368 = mul nsw i32 %357, %356
  %369 = add nsw i32 %51, -1
  %370 = add i32 %369, %355
  %371 = add i32 %370, %368
  %372 = sext i32 %371 to i64
  %373 = add nsw i64 %5, %372
  br label %548

374:                                              ; preds = %360
  %375 = icmp ne i32 %298, 0
  %376 = and i1 %320, %375
  %377 = select i1 %376, i32 0, i32 %298
  %378 = select i1 %361, i1 %363, i1 false
  %379 = select i1 %378, i1 %365, i1 false
  br i1 %379, label %380, label %384

380:                                              ; preds = %374
  %381 = sext i32 %355 to i64
  %382 = add i64 %5, -2
  %383 = add i64 %382, %381
  br label %548

384:                                              ; preds = %353, %374, %281
  %385 = phi i32 [ %355, %374 ], [ 0, %281 ], [ 0, %353 ]
  %386 = phi i32 [ %377, %374 ], [ %65, %281 ], [ 0, %353 ]
  %387 = phi i32 [ %356, %374 ], [ %64, %281 ], [ 0, %353 ]
  %388 = phi i32 [ %357, %374 ], [ %63, %281 ], [ 0, %353 ]
  %389 = phi i32 [ %358, %374 ], [ %62, %281 ], [ 0, %353 ]
  %390 = phi i32 [ %354, %374 ], [ %61, %281 ], [ 0, %353 ]
  %391 = icmp eq i32 %147, 474
  %392 = select i1 %391, i32 %51, i32 %56
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %488, label %394

394:                                              ; preds = %384
  %395 = sub nsw i32 %51, %392
  %396 = icmp eq i32 %395, 1
  br i1 %396, label %397, label %403

397:                                              ; preds = %394
  %398 = icmp ult i32 %75, 2
  %399 = select i1 %398, i32 %392, i32 0
  %400 = select i1 %398, i32 %75, i32 -1
  %401 = select i1 %398, i32 %54, i32 0
  %402 = select i1 %398, i32 %53, i32 0
  br label %403

403:                                              ; preds = %397, %394
  %404 = phi i32 [ %392, %394 ], [ %399, %397 ]
  %405 = phi i32 [ %55, %394 ], [ %400, %397 ]
  %406 = phi i32 [ %54, %394 ], [ %401, %397 ]
  %407 = phi i32 [ %53, %394 ], [ %402, %397 ]
  %408 = sub nsw i32 %51, %404
  %409 = icmp eq i32 %408, 2
  br i1 %409, label %410, label %417

410:                                              ; preds = %403
  %411 = add i32 %75, -1
  %412 = icmp ult i32 %411, 2
  %413 = select i1 %412, i32 %404, i32 0
  %414 = select i1 %412, i32 %405, i32 -1
  %415 = select i1 %412, i32 %406, i32 0
  %416 = select i1 %412, i32 %407, i32 0
  br label %417

417:                                              ; preds = %410, %403
  %418 = phi i32 [ %404, %403 ], [ %413, %410 ]
  %419 = phi i32 [ %405, %403 ], [ %414, %410 ]
  %420 = phi i32 [ %406, %403 ], [ %415, %410 ]
  %421 = phi i32 [ %407, %403 ], [ %416, %410 ]
  %422 = sub nsw i32 %51, %418
  %423 = icmp ne i32 %422, 4
  %424 = add nsw i32 %147, -1
  %425 = icmp ult i32 %424, 3
  %426 = select i1 %423, i1 true, i1 %425
  br i1 %426, label %428, label %427

427:                                              ; preds = %417
  br label %428

428:                                              ; preds = %427, %417
  %429 = phi i32 [ 0, %427 ], [ %418, %417 ]
  %430 = phi i32 [ -1, %427 ], [ %419, %417 ]
  %431 = phi i32 [ 0, %427 ], [ %420, %417 ]
  %432 = phi i32 [ 0, %427 ], [ %421, %417 ]
  %433 = sub nsw i32 %51, %429
  %434 = icmp eq i32 %433, 6
  br i1 %434, label %435, label %440

435:                                              ; preds = %428
  %436 = icmp eq i32 %147, 0
  %437 = select i1 %436, i32 0, i32 %429
  %438 = select i1 %436, i32 -1, i32 %430
  %439 = select i1 %436, i32 0, i32 %431
  br label %440

440:                                              ; preds = %435, %428
  %441 = phi i32 [ %429, %428 ], [ %437, %435 ]
  %442 = phi i32 [ %430, %428 ], [ %438, %435 ]
  %443 = phi i32 [ %431, %428 ], [ %439, %435 ]
  %444 = phi i32 [ %432, %428 ], [ %147, %435 ]
  %445 = sub nsw i32 %51, %441
  %446 = icmp eq i32 %445, 8
  br i1 %446, label %447, label %452

447:                                              ; preds = %440
  %448 = icmp eq i32 %147, 0
  br i1 %448, label %452, label %449

449:                                              ; preds = %447
  %450 = mul nuw nsw i32 %444, %147
  %451 = add nuw nsw i32 %450, 512
  br label %452

452:                                              ; preds = %447, %449, %440
  %453 = phi i32 [ %441, %449 ], [ %441, %440 ], [ 0, %447 ]
  %454 = phi i32 [ %442, %449 ], [ %442, %440 ], [ -1, %447 ]
  %455 = phi i32 [ %443, %449 ], [ %443, %440 ], [ 0, %447 ]
  %456 = phi i32 [ %444, %449 ], [ %444, %440 ], [ 0, %447 ]
  %457 = phi i32 [ %451, %449 ], [ %52, %440 ], [ %52, %447 ]
  %458 = sub nsw i32 %51, %453
  %459 = icmp eq i32 %458, 10
  br i1 %459, label %460, label %463

460:                                              ; preds = %452
  %461 = trunc i32 %79 to i16
  switch i16 %461, label %462 [
    i16 1, label %463
    i16 3, label %463
    i16 4, label %463
  ]

462:                                              ; preds = %460
  br label %463

463:                                              ; preds = %460, %460, %460, %462, %452
  %464 = phi i32 [ 0, %462 ], [ %453, %452 ], [ %453, %460 ], [ %453, %460 ], [ %453, %460 ]
  %465 = phi i32 [ -1, %462 ], [ %454, %452 ], [ %454, %460 ], [ %454, %460 ], [ %454, %460 ]
  %466 = phi i32 [ 0, %462 ], [ %455, %452 ], [ %147, %460 ], [ %147, %460 ], [ %147, %460 ]
  %467 = phi i32 [ 0, %462 ], [ %456, %452 ], [ %456, %460 ], [ %456, %460 ], [ %456, %460 ]
  %468 = icmp eq i32 %457, 0
  br i1 %468, label %488, label %469

469:                                              ; preds = %463
  %470 = sub nsw i32 %51, %464
  %471 = icmp sgt i32 %470, 0
  %472 = icmp sgt i32 %470, %457
  %473 = select i1 %471, i1 %472, i1 false
  br i1 %473, label %474, label %488

474:                                              ; preds = %469
  %475 = icmp eq i32 %466, 1
  %476 = select i1 %35, i1 %475, i1 false
  %477 = icmp eq i32 %465, 0
  %478 = select i1 %476, i1 %477, i1 false
  br i1 %478, label %479, label %482

479:                                              ; preds = %474
  %480 = sext i32 %457 to i64
  %481 = add nsw i64 %5, %480
  br label %548

482:                                              ; preds = %474
  %483 = select i1 %475, i1 %477, i1 false
  br i1 %483, label %484, label %488

484:                                              ; preds = %482
  %485 = sext i32 %464 to i64
  %486 = add i64 %5, -1
  %487 = add i64 %486, %485
  br label %548

488:                                              ; preds = %463, %469, %482, %384
  %489 = phi i32 [ %464, %482 ], [ %464, %469 ], [ %464, %463 ], [ 0, %384 ]
  %490 = phi i32 [ %465, %482 ], [ %465, %469 ], [ %465, %463 ], [ %55, %384 ]
  %491 = phi i32 [ %466, %482 ], [ %466, %469 ], [ %466, %463 ], [ %54, %384 ]
  %492 = phi i32 [ %467, %482 ], [ %467, %469 ], [ %467, %463 ], [ %53, %384 ]
  %493 = phi i32 [ %457, %482 ], [ %457, %469 ], [ 0, %463 ], [ %52, %384 ]
  %494 = and i32 %48, -33554432
  %495 = icmp eq i32 %494, -402653184
  br i1 %495, label %496, label %534

496:                                              ; preds = %488
  %497 = add nuw i32 %75, 1
  %498 = and i32 %497, 254
  %499 = icmp eq i32 %498, 0
  br i1 %499, label %500, label %534

500:                                              ; preds = %496
  %501 = lshr i32 %79, 24
  %502 = add nuw i32 %501, %51
  %503 = and i32 %502, 255
  %504 = zext i32 %501 to i64
  %505 = getelementptr inbounds i32, ptr %22, i64 %504
  %506 = load i32, ptr %505, align 4, !tbaa !25
  %507 = zext i32 %503 to i64
  %508 = getelementptr inbounds i32, ptr %13, i64 %507
  %509 = load i32, ptr %508, align 4, !tbaa !25
  %510 = sub nsw i32 %51, %509
  %511 = icmp slt i32 %506, %509
  %512 = icmp slt i32 %510, 4096
  %513 = select i1 %511, i1 %512, i1 false
  %514 = icmp sgt i32 %509, 5
  %515 = and i1 %514, %513
  br i1 %515, label %516, label %530

516:                                              ; preds = %500
  %517 = add nsw i32 %49, 1
  %518 = icmp eq i32 %50, 0
  %519 = icmp sgt i32 %50, %509
  %520 = select i1 %518, i1 true, i1 %519
  %521 = select i1 %520, i32 %509, i32 %50
  %522 = icmp sgt i32 %49, 2
  %523 = select i1 %36, i1 %522, i1 false
  %524 = icmp sgt i32 %521, 5
  %525 = select i1 %523, i1 %524, i1 false
  br i1 %525, label %526, label %530

526:                                              ; preds = %516
  %527 = zext i32 %521 to i64
  %528 = add i64 %5, -5
  %529 = add i64 %528, %527
  br label %548

530:                                              ; preds = %500, %516
  %531 = phi i32 [ %517, %516 ], [ 0, %500 ]
  %532 = phi i32 [ %521, %516 ], [ %50, %500 ]
  %533 = phi i32 [ %51, %516 ], [ %66, %500 ]
  store i32 %51, ptr %508, align 4, !tbaa !25
  store i32 %51, ptr %505, align 4, !tbaa !25
  br label %534

534:                                              ; preds = %530, %496, %488
  %535 = phi i32 [ %533, %530 ], [ %66, %496 ], [ %66, %488 ]
  %536 = phi i32 [ %532, %530 ], [ %50, %496 ], [ %50, %488 ]
  %537 = phi i32 [ %531, %530 ], [ %49, %496 ], [ %49, %488 ]
  %538 = sub nsw i32 %51, %535
  %539 = icmp sgt i32 %538, 4096
  %540 = select i1 %37, i1 %539, i1 false
  br i1 %540, label %541, label %544

541:                                              ; preds = %534
  %542 = sext i32 %535 to i64
  %543 = add nsw i64 %5, %542
  br label %548

544:                                              ; preds = %534
  %545 = add nuw nsw i32 %51, 1
  %546 = icmp slt i32 %545, %1
  %547 = icmp eq i32 %545, %1
  br i1 %547, label %552, label %46, !llvm.loop !240

548:                                              ; preds = %124, %255, %263, %270, %277, %367, %380, %479, %484, %541, %526
  %549 = phi i64 [ %529, %526 ], [ %543, %541 ], [ %487, %484 ], [ %481, %479 ], [ %383, %380 ], [ %373, %367 ], [ %280, %277 ], [ %273, %270 ], [ %266, %263 ], [ %258, %255 ], [ %127, %124 ]
  %550 = phi i32 [ 8, %526 ], [ 0, %541 ], [ 7, %484 ], [ 0, %479 ], [ 6, %380 ], [ 0, %367 ], [ 4, %277 ], [ 3, %270 ], [ 2, %263 ], [ 0, %255 ], [ 1, %124 ]
  %551 = tail call i32 @fseek(ptr noundef %0, i64 noundef %549, i32 noundef 0)
  br label %552

552:                                              ; preds = %544, %46, %128, %548, %27
  %553 = phi i1 [ false, %27 ], [ %47, %548 ], [ %546, %544 ], [ %47, %46 ], [ %47, %128 ]
  %554 = phi i32 [ undef, %27 ], [ %550, %548 ], [ undef, %544 ], [ -1, %46 ], [ 0, %128 ]
  call void @llvm.lifetime.end.p0(i64 32, ptr nonnull %4) #39
  %555 = load i32, ptr @programChecker, align 8, !tbaa !13
  %556 = add i32 %555, -1024
  store i32 %556, ptr @programChecker, align 8, !tbaa !13
  %557 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %558 = icmp sgt i32 %556, %557
  br i1 %558, label %559, label %560

559:                                              ; preds = %552
  store i32 %556, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %560

560:                                              ; preds = %552, %559
  %561 = phi i32 [ %557, %552 ], [ %556, %559 ]
  tail call void @free(ptr noundef %22) #39
  %562 = add i32 %555, -2048
  store i32 %562, ptr @programChecker, align 8, !tbaa !13
  %563 = icmp sgt i32 %562, %561
  br i1 %563, label %564, label %565

564:                                              ; preds = %560
  store i32 %562, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %565

565:                                              ; preds = %560, %564
  %566 = select i1 %553, i32 %554, i32 %2
  tail call void @free(ptr noundef %13) #39
  ret i32 %566
}

; Function Attrs: nofree nounwind
declare noundef i64 @ftell(ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare noundef i32 @fseek(ptr nocapture noundef, i64 noundef, i32 noundef) local_unnamed_addr #18

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z14encode_defaultP8_IO_FILES0_i(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) local_unnamed_addr #19 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %7, %5 ], [ %2, %3 ]
  %7 = add nsw i32 %6, -1
  %8 = tail call i32 @getc(ptr noundef %0)
  %9 = tail call i32 @putc(i32 noundef %8, ptr noundef %1)
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %5, !llvm.loop !241

11:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z14decode_defaultR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0) local_unnamed_addr #14 {
  %2 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  ret i32 %2
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0) local_unnamed_addr #14 comdat align 2 {
  %2 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 1
  %3 = load i32, ptr %2, align 4, !tbaa !231
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 6
  %7 = load ptr, ptr %6, align 8, !tbaa !238
  %8 = tail call i32 @getc(ptr noundef %7)
  br label %39

9:                                                ; preds = %1
  %10 = load i32, ptr @level, align 4, !tbaa !25
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %35, label %12

12:                                               ; preds = %9
  %13 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef 0)
  %14 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef 0)
  %15 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef 0)
  %16 = shl i32 %13, 2
  %17 = shl i32 %14, 1
  %18 = add i32 %16, %17
  %19 = add i32 %15, %18
  %20 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef 0)
  %21 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef 0)
  %22 = shl i32 %19, 2
  %23 = shl i32 %20, 1
  %24 = add i32 %22, %23
  %25 = add i32 %21, %24
  %26 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef 0)
  %27 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef 0)
  %28 = shl i32 %25, 2
  %29 = shl i32 %26, 1
  %30 = add i32 %28, %29
  %31 = add i32 %27, %30
  %32 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef 0)
  %33 = shl i32 %31, 1
  %34 = add i32 %32, %33
  br label %39

35:                                               ; preds = %9
  %36 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 2
  %37 = load ptr, ptr %36, align 8, !tbaa !234
  %38 = tail call i32 @getc(ptr noundef %37)
  br label %39

39:                                               ; preds = %12, %35, %5
  %40 = phi i32 [ %8, %5 ], [ %38, %35 ], [ %34, %12 ]
  ret i32 %40
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z11encode_jpegP8_IO_FILES0_i(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) local_unnamed_addr #19 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %7, %5 ], [ %2, %3 ]
  %7 = add nsw i32 %6, -1
  %8 = tail call i32 @getc(ptr noundef %0)
  %9 = tail call i32 @putc(i32 noundef %8, ptr noundef %1)
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %5, !llvm.loop !242

11:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z11decode_jpegR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0) local_unnamed_addr #14 {
  %2 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  ret i32 %2
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z10encode_bmpP8_IO_FILES0_i(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) local_unnamed_addr #19 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %7, %5 ], [ %2, %3 ]
  %7 = add nsw i32 %6, -1
  %8 = tail call i32 @getc(ptr noundef %0)
  %9 = tail call i32 @putc(i32 noundef %8, ptr noundef %1)
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %5, !llvm.loop !243

11:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z10decode_bmpR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0) local_unnamed_addr #14 {
  %2 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  ret i32 %2
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z10encode_pgmP8_IO_FILES0_i(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) local_unnamed_addr #19 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %7, %5 ], [ %2, %3 ]
  %7 = add nsw i32 %6, -1
  %8 = tail call i32 @getc(ptr noundef %0)
  %9 = tail call i32 @putc(i32 noundef %8, ptr noundef %1)
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %5, !llvm.loop !244

11:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z10decode_pgmR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0) local_unnamed_addr #14 {
  %2 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  ret i32 %2
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z10encode_rgbP8_IO_FILES0_i(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) local_unnamed_addr #19 {
  %4 = icmp eq i32 %2, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %3, %5
  %6 = phi i32 [ %7, %5 ], [ %2, %3 ]
  %7 = add nsw i32 %6, -1
  %8 = tail call i32 @getc(ptr noundef %0)
  %9 = tail call i32 @putc(i32 noundef %8, ptr noundef %1)
  %10 = icmp eq i32 %7, 0
  br i1 %10, label %11, label %5, !llvm.loop !245

11:                                               ; preds = %5, %3
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z10decode_rgbR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0) local_unnamed_addr #14 {
  %2 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  ret i32 %2
}

; Function Attrs: uwtable
define dso_local void @_Z10encode_exeP8_IO_FILES0_ii(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2, i32 noundef %3) local_unnamed_addr #5 personality ptr @__gxx_personality_v0 {
  %5 = load i32, ptr @programChecker, align 8, !tbaa !13
  %6 = add nsw i32 %5, 65536
  store i32 %6, ptr @programChecker, align 8, !tbaa !13
  %7 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %8 = icmp sgt i32 %6, %7
  br i1 %8, label %9, label %10

9:                                                ; preds = %4
  store i32 %6, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %10

10:                                               ; preds = %9, %4
  %11 = tail call noalias dereferenceable_or_null(65536) ptr @calloc(i64 noundef 65536, i64 noundef 1) #41
  %12 = icmp eq ptr %11, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %14, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %14, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

15:                                               ; preds = %10
  %16 = ashr i32 %2, 24
  %17 = ashr i32 %2, 16
  %18 = ashr i32 %2, 8
  %19 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.17, i32 noundef %16, i32 noundef %17, i32 noundef %18, i32 noundef %2)
  %20 = ashr i32 %3, 24
  %21 = ashr i32 %3, 16
  %22 = ashr i32 %3, 8
  %23 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.17, i32 noundef %20, i32 noundef %21, i32 noundef %22, i32 noundef %3)
  %24 = icmp sgt i32 %2, 0
  br i1 %24, label %32, label %25

25:                                               ; preds = %56, %15
  %26 = load i32, ptr @programChecker, align 8, !tbaa !13
  %27 = add i32 %26, -65536
  store i32 %27, ptr @programChecker, align 8, !tbaa !13
  %28 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %29 = icmp sgt i32 %27, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %25
  store i32 %27, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %31

31:                                               ; preds = %25, %30
  tail call void @free(ptr noundef %11) #39
  ret void

32:                                               ; preds = %15, %56
  %33 = phi i32 [ %60, %56 ], [ 0, %15 ]
  %34 = sub nsw i32 %2, %33
  %35 = tail call i32 @llvm.smin.i32(i32 %34, i32 65536)
  %36 = sext i32 %35 to i64
  %37 = tail call i64 @fread(ptr noundef nonnull %11, i64 noundef 1, i64 noundef %36, ptr noundef %0)
  %38 = trunc i64 %37 to i32
  %39 = icmp eq i32 %35, %38
  br i1 %39, label %40, label %45

40:                                               ; preds = %32
  %41 = icmp sgt i32 %35, 4
  br i1 %41, label %42, label %56

42:                                               ; preds = %40
  %43 = add i32 %33, %3
  %44 = zext i32 %35 to i64
  br label %62

45:                                               ; preds = %32
  %46 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.18, ptr %46, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %46, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %47 unwind label %48

47:                                               ; preds = %45
  unreachable

48:                                               ; preds = %45
  %49 = landingpad { ptr, i32 }
          cleanup
  %50 = load i32, ptr @programChecker, align 8, !tbaa !13
  %51 = add i32 %50, -65536
  store i32 %51, ptr @programChecker, align 8, !tbaa !13
  %52 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %53 = icmp sgt i32 %51, %52
  br i1 %53, label %54, label %55

54:                                               ; preds = %48
  store i32 %51, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %55

55:                                               ; preds = %48, %54
  tail call void @free(ptr noundef %11) #39
  resume { ptr, i32 } %49

56:                                               ; preds = %109, %40
  %57 = shl i64 %37, 32
  %58 = ashr exact i64 %57, 32
  %59 = tail call i64 @fwrite(ptr noundef nonnull %11, i64 noundef 1, i64 noundef %58, ptr noundef %1)
  %60 = add nuw nsw i32 %33, 65536
  %61 = icmp slt i32 %60, %2
  br i1 %61, label %32, label %25, !llvm.loop !246

62:                                               ; preds = %42, %109
  %63 = phi i64 [ %44, %42 ], [ %65, %109 ]
  %64 = trunc i64 %63 to i32
  %65 = add nsw i64 %63, -1
  %66 = add nuw i64 %63, 4294967291
  %67 = and i64 %66, 4294967295
  %68 = getelementptr inbounds i8, ptr %11, i64 %67
  %69 = load i8, ptr %68, align 1, !tbaa !9
  %70 = and i8 %69, -2
  %71 = icmp eq i8 %70, -24
  br i1 %71, label %72, label %109

72:                                               ; preds = %62
  %73 = and i64 %65, 4294967295
  %74 = getelementptr inbounds i8, ptr %11, i64 %73
  %75 = load i8, ptr %74, align 1, !tbaa !9
  switch i8 %75, label %109 [
    i8 0, label %76
    i8 -1, label %76
  ]

76:                                               ; preds = %72, %72
  %77 = add nuw i64 %63, 4294967292
  %78 = and i64 %77, 4294967295
  %79 = getelementptr inbounds i8, ptr %11, i64 %78
  %80 = load i8, ptr %79, align 1, !tbaa !9
  %81 = zext i8 %80 to i32
  %82 = add nuw i64 %63, 4294967293
  %83 = and i64 %82, 4294967295
  %84 = getelementptr inbounds i8, ptr %11, i64 %83
  %85 = load i8, ptr %84, align 1, !tbaa !9
  %86 = zext i8 %85 to i32
  %87 = shl nuw nsw i32 %86, 8
  %88 = add nuw i64 %63, 4294967294
  %89 = and i64 %88, 4294967295
  %90 = getelementptr inbounds i8, ptr %11, i64 %89
  %91 = load i8, ptr %90, align 1, !tbaa !9
  %92 = zext i8 %91 to i32
  %93 = shl nuw nsw i32 %92, 16
  %94 = zext i8 %75 to i32
  %95 = shl nuw i32 %94, 24
  %96 = or i32 %95, %81
  %97 = or i32 %96, %87
  %98 = or i32 %97, %93
  %99 = add i32 %43, %64
  %100 = add i32 %99, %98
  %101 = shl i32 %100, 7
  %102 = ashr i32 %101, 31
  %103 = trunc i32 %102 to i8
  store i8 %103, ptr %74, align 1, !tbaa !9
  %104 = lshr i32 %101, 23
  %105 = trunc i32 %104 to i8
  store i8 %105, ptr %90, align 1, !tbaa !9
  %106 = lshr i32 %101, 15
  %107 = trunc i32 %106 to i8
  store i8 %107, ptr %84, align 1, !tbaa !9
  %108 = trunc i32 %100 to i8
  store i8 %108, ptr %79, align 1, !tbaa !9
  br label %109

109:                                              ; preds = %62, %72, %76
  %110 = icmp ugt i64 %63, 5
  br i1 %110, label %62, label %56, !llvm.loop !247
}

; Function Attrs: nofree nounwind
declare noundef i32 @fprintf(ptr nocapture noundef, ptr nocapture noundef readonly, ...) local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare noundef i64 @fread(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare noundef i64 @fwrite(ptr nocapture noundef, i64 noundef, i64 noundef, ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z10decode_exeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0) local_unnamed_addr #14 {
  %2 = load i32, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !25
  %3 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %4 = icmp eq i32 %2, %3
  %5 = load i32, ptr @_ZZ10decode_exeR7EncoderE1q, align 4
  %6 = icmp eq i32 %5, 0
  %7 = select i1 %4, i1 %6, i1 false
  br i1 %7, label %15, label %8

8:                                                ; preds = %15, %1
  %9 = phi i32 [ %3, %1 ], [ %43, %15 ]
  %10 = phi i32 [ %2, %1 ], [ %42, %15 ]
  %11 = phi i32 [ %5, %1 ], [ %45, %15 ]
  %12 = icmp slt i32 %10, %9
  %13 = icmp slt i32 %11, 5
  %14 = select i1 %12, i1 %13, i1 false
  br i1 %14, label %48, label %60

15:                                               ; preds = %1, %15
  store i32 0, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !25
  %16 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %17 = shl i32 %16, 24
  store i32 %17, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %18 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %19 = shl i32 %18, 16
  %20 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %21 = or i32 %20, %19
  store i32 %21, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %22 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %23 = shl i32 %22, 8
  %24 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %25 = or i32 %24, %23
  store i32 %25, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %26 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %27 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %28 = or i32 %27, %26
  store i32 %28, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %29 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %30 = shl i32 %29, 24
  store i32 %30, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %31 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %32 = shl i32 %31, 16
  %33 = load i32, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %34 = or i32 %33, %32
  store i32 %34, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %35 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %36 = shl i32 %35, 8
  %37 = load i32, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %38 = or i32 %37, %36
  store i32 %38, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %39 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %40 = load i32, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %41 = or i32 %40, %39
  store i32 %41, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %42 = load i32, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !25
  %43 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %44 = icmp eq i32 %42, %43
  %45 = load i32, ptr @_ZZ10decode_exeR7EncoderE1q, align 4
  %46 = icmp eq i32 %45, 0
  %47 = select i1 %44, i1 %46, i1 false
  br i1 %47, label %15, label %8, !llvm.loop !248

48:                                               ; preds = %8, %48
  %49 = load i32, ptr @_ZZ10decode_exeR7EncoderE1c, align 4
  store i32 %49, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 1), align 1
  %50 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %51 = trunc i32 %50 to i8
  store i8 %51, ptr @_ZZ10decode_exeR7EncoderE1c, align 4, !tbaa !9
  %52 = load i32, ptr @_ZZ10decode_exeR7EncoderE1q, align 4, !tbaa !25
  %53 = add nsw i32 %52, 1
  store i32 %53, ptr @_ZZ10decode_exeR7EncoderE1q, align 4, !tbaa !25
  %54 = load i32, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !25
  %55 = add nsw i32 %54, 1
  store i32 %55, ptr @_ZZ10decode_exeR7EncoderE6offset, align 4, !tbaa !25
  %56 = load i32, ptr @_ZZ10decode_exeR7EncoderE4size, align 4, !tbaa !25
  %57 = icmp slt i32 %55, %56
  %58 = icmp slt i32 %52, 4
  %59 = select i1 %57, i1 %58, i1 false
  br i1 %59, label %48, label %60, !llvm.loop !249

60:                                               ; preds = %48, %8
  %61 = phi i32 [ %11, %8 ], [ %53, %48 ]
  %62 = phi i32 [ %10, %8 ], [ %55, %48 ]
  %63 = icmp eq i32 %61, 5
  br i1 %63, label %64, label %102

64:                                               ; preds = %60
  %65 = load i8, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 4), align 4, !tbaa !9
  %66 = and i8 %65, -2
  %67 = icmp eq i8 %66, -24
  br i1 %67, label %68, label %102

68:                                               ; preds = %64
  %69 = load i8, ptr @_ZZ10decode_exeR7EncoderE1c, align 4, !tbaa !9
  %70 = zext i8 %69 to i32
  %71 = add i8 %69, 1
  %72 = icmp ult i8 %71, 2
  br i1 %72, label %73, label %102

73:                                               ; preds = %68
  %74 = add nsw i32 %62, -1
  %75 = add nsw i32 %62, -5
  %76 = xor i32 %74, %75
  %77 = icmp ult i32 %76, 65536
  br i1 %77, label %78, label %102

78:                                               ; preds = %73
  %79 = load i8, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 3), align 1, !tbaa !9
  %80 = zext i8 %79 to i32
  %81 = load i8, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 2), align 2, !tbaa !9
  %82 = zext i8 %81 to i32
  %83 = shl nuw nsw i32 %82, 8
  %84 = load i8, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 1), align 1, !tbaa !9
  %85 = zext i8 %84 to i32
  %86 = shl nuw nsw i32 %85, 16
  %87 = shl nuw i32 %70, 24
  %88 = or i32 %87, %80
  %89 = or i32 %88, %83
  %90 = or i32 %89, %86
  %91 = load i32, ptr @_ZZ10decode_exeR7EncoderE5begin, align 4, !tbaa !25
  %92 = add i32 %91, %62
  %93 = sub i32 %90, %92
  %94 = shl i32 %93, 7
  %95 = trunc i32 %93 to i8
  store i8 %95, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 3), align 1, !tbaa !9
  %96 = lshr i32 %94, 15
  %97 = trunc i32 %96 to i8
  store i8 %97, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 2), align 2, !tbaa !9
  %98 = lshr i32 %94, 23
  %99 = trunc i32 %98 to i8
  store i8 %99, ptr getelementptr inbounds ([5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 1), align 1, !tbaa !9
  %100 = ashr i32 %94, 31
  %101 = trunc i32 %100 to i8
  store i8 %101, ptr @_ZZ10decode_exeR7EncoderE1c, align 4, !tbaa !9
  br label %102

102:                                              ; preds = %68, %64, %78, %73, %60
  %103 = add nsw i32 %61, -1
  store i32 %103, ptr @_ZZ10decode_exeR7EncoderE1q, align 4, !tbaa !25
  %104 = sext i32 %103 to i64
  %105 = getelementptr inbounds [5 x i8], ptr @_ZZ10decode_exeR7EncoderE1c, i64 0, i64 %104
  %106 = load i8, ptr %105, align 1, !tbaa !9
  %107 = zext i8 %106 to i32
  ret i32 %107
}

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memmove.p0.p0.i64(ptr nocapture writeonly, ptr nocapture readonly, i64, i1 immarg) #26

; Function Attrs: mustprogress uwtable
define dso_local void @_Z6encodeP8_IO_FILES0_i(ptr nocapture noundef %0, ptr nocapture noundef %1, i32 noundef %2) local_unnamed_addr #14 {
  %4 = tail call i64 @ftell(ptr noundef %0)
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %57

6:                                                ; preds = %3, %54
  %7 = phi i32 [ %55, %54 ], [ %2, %3 ]
  %8 = phi i32 [ %10, %54 ], [ 0, %3 ]
  %9 = phi i64 [ %11, %54 ], [ %4, %3 ]
  %10 = tail call noundef i32 @_Z6detectP8_IO_FILEi8Filetype(ptr noundef %0, i32 noundef %7, i32 noundef %8)
  %11 = tail call i64 @ftell(ptr noundef %0)
  %12 = tail call i32 @fseek(ptr noundef %0, i64 noundef %9, i32 noundef 0)
  %13 = sub nsw i64 %11, %9
  %14 = trunc i64 %13 to i32
  %15 = icmp sgt i32 %14, 0
  br i1 %15, label %16, label %54

16:                                               ; preds = %6
  %17 = lshr i32 %14, 24
  %18 = lshr i32 %14, 16
  %19 = lshr i32 %14, 8
  %20 = tail call i32 (ptr, ptr, ...) @fprintf(ptr noundef %1, ptr noundef nonnull @.str.19, i32 noundef %8, i32 noundef %17, i32 noundef %18, i32 noundef %19, i32 noundef %14)
  switch i32 %8, label %48 [
    i32 1, label %22
    i32 2, label %21
    i32 3, label %21
    i32 4, label %21
    i32 6, label %34
    i32 7, label %40
    i32 8, label %46
  ]

21:                                               ; preds = %16, %16, %16
  br label %28

22:                                               ; preds = %16, %22
  %23 = phi i32 [ %24, %22 ], [ %14, %16 ]
  %24 = add nsw i32 %23, -1
  %25 = tail call i32 @getc(ptr noundef %0)
  %26 = tail call i32 @putc(i32 noundef %25, ptr noundef %1)
  %27 = icmp eq i32 %24, 0
  br i1 %27, label %54, label %22, !llvm.loop !242

28:                                               ; preds = %21, %28
  %29 = phi i32 [ %30, %28 ], [ %14, %21 ]
  %30 = add nsw i32 %29, -1
  %31 = tail call i32 @getc(ptr noundef %0)
  %32 = tail call i32 @putc(i32 noundef %31, ptr noundef %1)
  %33 = icmp eq i32 %30, 0
  br i1 %33, label %54, label %28, !llvm.loop !243

34:                                               ; preds = %16, %34
  %35 = phi i32 [ %36, %34 ], [ %14, %16 ]
  %36 = add nsw i32 %35, -1
  %37 = tail call i32 @getc(ptr noundef %0)
  %38 = tail call i32 @putc(i32 noundef %37, ptr noundef %1)
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %54, label %34, !llvm.loop !244

40:                                               ; preds = %16, %40
  %41 = phi i32 [ %42, %40 ], [ %14, %16 ]
  %42 = add nsw i32 %41, -1
  %43 = tail call i32 @getc(ptr noundef %0)
  %44 = tail call i32 @putc(i32 noundef %43, ptr noundef %1)
  %45 = icmp eq i32 %42, 0
  br i1 %45, label %54, label %40, !llvm.loop !245

46:                                               ; preds = %16
  %47 = trunc i64 %9 to i32
  tail call void @_Z10encode_exeP8_IO_FILES0_ii(ptr noundef %0, ptr noundef %1, i32 noundef %14, i32 noundef %47)
  br label %54

48:                                               ; preds = %16, %48
  %49 = phi i32 [ %50, %48 ], [ %14, %16 ]
  %50 = add nsw i32 %49, -1
  %51 = tail call i32 @getc(ptr noundef %0)
  %52 = tail call i32 @putc(i32 noundef %51, ptr noundef %1)
  %53 = icmp eq i32 %50, 0
  br i1 %53, label %54, label %48, !llvm.loop !241

54:                                               ; preds = %40, %34, %28, %22, %48, %46, %6
  %55 = sub nsw i32 %7, %14
  %56 = icmp sgt i32 %55, 0
  br i1 %56, label %6, label %57, !llvm.loop !250

57:                                               ; preds = %54, %3
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0) local_unnamed_addr #14 {
  %2 = load i32, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %4, label %22

4:                                                ; preds = %1, %4
  %5 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  store i32 %5, ptr @_ZZ6decodeR7EncoderE4type, align 4, !tbaa !214
  %6 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %7 = shl i32 %6, 24
  store i32 %7, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %8 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %9 = shl i32 %8, 16
  %10 = load i32, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %11 = or i32 %10, %9
  store i32 %11, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %12 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %13 = shl i32 %12, 8
  %14 = load i32, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %15 = or i32 %14, %13
  store i32 %15, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %16 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  %17 = load i32, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %18 = or i32 %17, %16
  %19 = icmp slt i32 %18, 0
  %20 = select i1 %19, i32 1, i32 %18
  store i32 %20, ptr @_ZZ6decodeR7EncoderE3len, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %4, label %22, !llvm.loop !251

22:                                               ; preds = %4, %1
  %23 = phi i32 [ %2, %1 ], [ %20, %4 ]
  %24 = add nsw i32 %23, -1
  store i32 %24, ptr @_ZZ6decodeR7EncoderE3len, align 4, !tbaa !25
  %25 = load i32, ptr @_ZZ6decodeR7EncoderE4type, align 4, !tbaa !214
  switch i32 %25, label %36 [
    i32 1, label %26
    i32 2, label %28
    i32 3, label %28
    i32 4, label %28
    i32 6, label %30
    i32 7, label %32
    i32 8, label %34
  ]

26:                                               ; preds = %22
  %27 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  br label %38

28:                                               ; preds = %22, %22, %22
  %29 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  br label %38

30:                                               ; preds = %22
  %31 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  br label %38

32:                                               ; preds = %22
  %33 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  br label %38

34:                                               ; preds = %22
  %35 = tail call noundef i32 @_Z10decode_exeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %0), !range !252
  br label %38

36:                                               ; preds = %22
  %37 = tail call noundef i32 @_ZN7Encoder10decompressEv(ptr noundef nonnull align 8 dereferenceable(40) %0)
  br label %38

38:                                               ; preds = %36, %34, %32, %30, %28, %26
  %39 = phi i32 [ %37, %36 ], [ %35, %34 ], [ %33, %32 ], [ %31, %30 ], [ %29, %28 ], [ %27, %26 ]
  ret i32 %39
}

; Function Attrs: mustprogress nofree nounwind uwtable
define dso_local void @_Z11printStatusi(i32 noundef %0) local_unnamed_addr #19 {
  %2 = icmp sgt i32 %0, 0
  %3 = and i32 %0, 4095
  %4 = icmp eq i32 %3, 0
  %5 = and i1 %2, %4
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %0)
  %8 = load ptr, ptr @stdout, align 8, !tbaa !5
  %9 = tail call i32 @fflush(ptr noundef %8)
  br label %10

10:                                               ; preds = %6, %1
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @fflush(ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: mustprogress uwtable
define dso_local void @_Z8compressPKclR7Encoder(ptr noundef %0, i64 noundef %1, ptr noundef nonnull align 8 dereferenceable(40) %2) local_unnamed_addr #14 {
  %4 = tail call noalias ptr @fopen(ptr noundef %0, ptr noundef nonnull @.str.21)
  %5 = icmp eq ptr %4, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %3
  tail call void @perror(ptr noundef %0) #45
  %7 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %7, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %7, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.Encoder, ptr %2, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !234
  %11 = tail call i64 @ftell(ptr noundef %10)
  %12 = tail call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %0, i32 noundef 47) #44
  %13 = icmp eq ptr %12, null
  %14 = getelementptr inbounds i8, ptr %12, i64 1
  %15 = select i1 %13, ptr %0, ptr %14
  %16 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.22, ptr noundef %15, i64 noundef %1)
  %17 = load i32, ptr @level, align 4, !tbaa !25
  %18 = shl i32 4194304, %17
  %19 = icmp sgt i64 %1, 0
  br i1 %19, label %20, label %1180

20:                                               ; preds = %8
  %21 = sext i32 %18 to i64
  %22 = getelementptr inbounds %class.Encoder, ptr %2, i64 0, i32 6
  %23 = getelementptr inbounds %class.Encoder, ptr %2, i64 0, i32 3
  %24 = getelementptr inbounds %class.Encoder, ptr %2, i64 0, i32 4
  %25 = getelementptr inbounds %class.Encoder, ptr %2, i64 0, i32 1
  %26 = getelementptr inbounds %class.Encoder, ptr %2, i64 0, i32 5
  br label %27

27:                                               ; preds = %20, %1175
  %28 = phi i64 [ 0, %20 ], [ %1178, %1175 ]
  %29 = phi i64 [ %1, %20 ], [ %1176, %1175 ]
  %30 = icmp slt i64 %29, %21
  %31 = trunc i64 %29 to i32
  %32 = select i1 %30, i32 %31, i32 %18
  %33 = tail call noalias ptr @tmpfile()
  %34 = icmp eq ptr %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %27
  %36 = tail call i64 @ftell(ptr noundef nonnull %4)
  tail call void @_Z6encodeP8_IO_FILES0_i(ptr noundef nonnull %4, ptr noundef nonnull %33, i32 noundef %32)
  tail call void @rewind(ptr noundef nonnull %33)
  store ptr %33, ptr %22, align 8, !tbaa !238
  %37 = tail call i32 @fseek(ptr noundef nonnull %4, i64 noundef %36, i32 noundef 0)
  %38 = sext i32 %32 to i64
  %39 = icmp sgt i32 %32, 0
  br i1 %39, label %42, label %50

40:                                               ; preds = %27
  tail call void @perror(ptr noundef nonnull @.str.23) #45
  %41 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %41, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %41, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

42:                                               ; preds = %35, %47
  %43 = phi i64 [ %48, %47 ], [ 0, %35 ]
  %44 = tail call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %2)
  %45 = tail call i32 @getc(ptr noundef nonnull %4)
  %46 = icmp eq i32 %44, %45
  br i1 %46, label %47, label %50

47:                                               ; preds = %42
  %48 = add nuw nsw i64 %43, 1
  %49 = icmp eq i64 %48, %38
  br i1 %49, label %55, label %42, !llvm.loop !253

50:                                               ; preds = %42, %35
  %51 = phi i64 [ 0, %35 ], [ %43, %42 ]
  %52 = phi i32 [ 0, %35 ], [ %44, %42 ]
  %53 = phi i32 [ 0, %35 ], [ %45, %42 ]
  %54 = icmp eq i64 %51, %38
  br i1 %54, label %55, label %61

55:                                               ; preds = %47, %50
  %56 = phi i32 [ %53, %50 ], [ %44, %47 ]
  %57 = phi i32 [ %52, %50 ], [ %44, %47 ]
  %58 = phi i64 [ %51, %50 ], [ %38, %47 ]
  %59 = tail call i32 @getc(ptr noundef nonnull %33)
  %60 = icmp eq i32 %59, -1
  br i1 %60, label %621, label %61

61:                                               ; preds = %55, %50
  %62 = phi i32 [ %56, %55 ], [ %53, %50 ]
  %63 = phi i32 [ %57, %55 ], [ %52, %50 ]
  %64 = phi i64 [ %58, %55 ], [ %51, %50 ]
  %65 = add nsw i64 %64, %28
  %66 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.24, i64 noundef %65, i32 noundef %62, i32 noundef %63)
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %2, i32 noundef 0)
  %67 = ashr i32 %32, 24
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %2, i32 noundef %67)
  %68 = ashr i32 %32, 16
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %2, i32 noundef %68)
  %69 = ashr i32 %32, 8
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %2, i32 noundef %69)
  tail call void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %2, i32 noundef %32)
  %70 = tail call i32 @fseek(ptr noundef nonnull %4, i64 noundef %36, i32 noundef 0)
  br i1 %39, label %71, label %1175

71:                                               ; preds = %61
  %72 = trunc i64 %28 to i32
  br label %73

73:                                               ; preds = %71, %618
  %74 = phi i32 [ %619, %618 ], [ 0, %71 ]
  %75 = add nsw i32 %74, %72
  %76 = icmp sgt i32 %75, 0
  %77 = and i32 %74, 4095
  %78 = icmp eq i32 %77, 0
  %79 = and i1 %76, %78
  br i1 %79, label %80, label %84

80:                                               ; preds = %73
  %81 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %75)
  %82 = load ptr, ptr @stdout, align 8, !tbaa !5
  %83 = tail call i32 @fflush(ptr noundef %82)
  br label %84

84:                                               ; preds = %73, %80
  %85 = tail call i32 @getc(ptr noundef nonnull %4)
  %86 = load i32, ptr @level, align 4, !tbaa !25
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %615, label %88

88:                                               ; preds = %84
  %89 = lshr i32 %85, 7
  %90 = and i32 %89, 1
  %91 = load i32, ptr %2, align 8, !tbaa !229
  %92 = icmp slt i32 %91, 2048
  %93 = zext i1 %92 to i32
  %94 = add nsw i32 %91, %93
  %95 = load i32, ptr %23, align 8, !tbaa !235
  %96 = load i32, ptr %24, align 4, !tbaa !236
  %97 = sub i32 %96, %95
  %98 = lshr i32 %97, 12
  %99 = mul i32 %98, %94
  %100 = add i32 %99, %95
  %101 = and i32 %97, 4095
  %102 = mul i32 %101, %94
  %103 = lshr i32 %102, 12
  %104 = add i32 %100, %103
  %105 = load i32, ptr %25, align 4, !tbaa !231
  %106 = icmp eq i32 %105, 1
  %107 = load i32, ptr %26, align 8
  %108 = icmp ule i32 %107, %104
  %109 = zext i1 %108 to i32
  %110 = select i1 %106, i32 %109, i32 %90
  store i32 %110, ptr @y, align 4, !tbaa !25
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %113, label %112

112:                                              ; preds = %88
  store i32 %104, ptr %24, align 4, !tbaa !236
  br label %115

113:                                              ; preds = %88
  %114 = add i32 %104, 1
  store i32 %114, ptr %23, align 8, !tbaa !235
  br label %115

115:                                              ; preds = %113, %112
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %116 = load i32, ptr %23, align 8, !tbaa !235
  %117 = load i32, ptr %24, align 4, !tbaa !236
  %118 = xor i32 %117, %116
  %119 = icmp ult i32 %118, 16777216
  br i1 %119, label %120, label %154

120:                                              ; preds = %115, %149
  %121 = phi i32 [ %151, %149 ], [ %116, %115 ]
  %122 = phi i32 [ %150, %149 ], [ %117, %115 ]
  %123 = load i32, ptr %25, align 4, !tbaa !231
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %132

125:                                              ; preds = %120
  %126 = lshr i32 %122, 24
  %127 = load ptr, ptr %9, align 8, !tbaa !234
  %128 = tail call i32 @putc(i32 noundef %126, ptr noundef %127)
  %129 = load i32, ptr %23, align 8, !tbaa !235
  %130 = load i32, ptr %24, align 4, !tbaa !236
  %131 = load i32, ptr %25, align 4, !tbaa !231
  br label %132

132:                                              ; preds = %125, %120
  %133 = phi i32 [ %131, %125 ], [ %123, %120 ]
  %134 = phi i32 [ %130, %125 ], [ %122, %120 ]
  %135 = phi i32 [ %129, %125 ], [ %121, %120 ]
  %136 = shl i32 %135, 8
  store i32 %136, ptr %23, align 8, !tbaa !235
  %137 = shl i32 %134, 8
  %138 = or i32 %137, 255
  store i32 %138, ptr %24, align 4, !tbaa !236
  %139 = icmp eq i32 %133, 1
  br i1 %139, label %140, label %149

140:                                              ; preds = %132
  %141 = load i32, ptr %26, align 8, !tbaa !237
  %142 = shl i32 %141, 8
  %143 = load ptr, ptr %9, align 8, !tbaa !234
  %144 = tail call i32 @getc(ptr noundef %143)
  %145 = and i32 %144, 255
  %146 = or i32 %145, %142
  store i32 %146, ptr %26, align 8, !tbaa !237
  %147 = load i32, ptr %23, align 8, !tbaa !235
  %148 = load i32, ptr %24, align 4, !tbaa !236
  br label %149

149:                                              ; preds = %140, %132
  %150 = phi i32 [ %148, %140 ], [ %138, %132 ]
  %151 = phi i32 [ %147, %140 ], [ %136, %132 ]
  %152 = xor i32 %151, %150
  %153 = icmp ult i32 %152, 16777216
  br i1 %153, label %120, label %154, !llvm.loop !254

154:                                              ; preds = %149, %115
  %155 = phi i32 [ %117, %115 ], [ %150, %149 ]
  %156 = phi i32 [ %116, %115 ], [ %151, %149 ]
  %157 = lshr i32 %85, 6
  %158 = and i32 %157, 1
  %159 = load i32, ptr %2, align 8, !tbaa !229
  %160 = icmp slt i32 %159, 2048
  %161 = zext i1 %160 to i32
  %162 = add nsw i32 %159, %161
  %163 = sub i32 %155, %156
  %164 = lshr i32 %163, 12
  %165 = mul i32 %164, %162
  %166 = add i32 %165, %156
  %167 = and i32 %163, 4095
  %168 = mul i32 %167, %162
  %169 = lshr i32 %168, 12
  %170 = add i32 %166, %169
  %171 = load i32, ptr %25, align 4, !tbaa !231
  %172 = icmp eq i32 %171, 1
  %173 = load i32, ptr %26, align 8
  %174 = icmp ule i32 %173, %170
  %175 = zext i1 %174 to i32
  %176 = select i1 %172, i32 %175, i32 %158
  store i32 %176, ptr @y, align 4, !tbaa !25
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %179, label %178

178:                                              ; preds = %154
  store i32 %170, ptr %24, align 4, !tbaa !236
  br label %181

179:                                              ; preds = %154
  %180 = add i32 %170, 1
  store i32 %180, ptr %23, align 8, !tbaa !235
  br label %181

181:                                              ; preds = %179, %178
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %182 = load i32, ptr %23, align 8, !tbaa !235
  %183 = load i32, ptr %24, align 4, !tbaa !236
  %184 = xor i32 %183, %182
  %185 = icmp ult i32 %184, 16777216
  br i1 %185, label %186, label %220

186:                                              ; preds = %181, %215
  %187 = phi i32 [ %217, %215 ], [ %182, %181 ]
  %188 = phi i32 [ %216, %215 ], [ %183, %181 ]
  %189 = load i32, ptr %25, align 4, !tbaa !231
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %186
  %192 = lshr i32 %188, 24
  %193 = load ptr, ptr %9, align 8, !tbaa !234
  %194 = tail call i32 @putc(i32 noundef %192, ptr noundef %193)
  %195 = load i32, ptr %23, align 8, !tbaa !235
  %196 = load i32, ptr %24, align 4, !tbaa !236
  %197 = load i32, ptr %25, align 4, !tbaa !231
  br label %198

198:                                              ; preds = %191, %186
  %199 = phi i32 [ %197, %191 ], [ %189, %186 ]
  %200 = phi i32 [ %196, %191 ], [ %188, %186 ]
  %201 = phi i32 [ %195, %191 ], [ %187, %186 ]
  %202 = shl i32 %201, 8
  store i32 %202, ptr %23, align 8, !tbaa !235
  %203 = shl i32 %200, 8
  %204 = or i32 %203, 255
  store i32 %204, ptr %24, align 4, !tbaa !236
  %205 = icmp eq i32 %199, 1
  br i1 %205, label %206, label %215

206:                                              ; preds = %198
  %207 = load i32, ptr %26, align 8, !tbaa !237
  %208 = shl i32 %207, 8
  %209 = load ptr, ptr %9, align 8, !tbaa !234
  %210 = tail call i32 @getc(ptr noundef %209)
  %211 = and i32 %210, 255
  %212 = or i32 %211, %208
  store i32 %212, ptr %26, align 8, !tbaa !237
  %213 = load i32, ptr %23, align 8, !tbaa !235
  %214 = load i32, ptr %24, align 4, !tbaa !236
  br label %215

215:                                              ; preds = %206, %198
  %216 = phi i32 [ %214, %206 ], [ %204, %198 ]
  %217 = phi i32 [ %213, %206 ], [ %202, %198 ]
  %218 = xor i32 %217, %216
  %219 = icmp ult i32 %218, 16777216
  br i1 %219, label %186, label %220, !llvm.loop !254

220:                                              ; preds = %215, %181
  %221 = phi i32 [ %183, %181 ], [ %216, %215 ]
  %222 = phi i32 [ %182, %181 ], [ %217, %215 ]
  %223 = lshr i32 %85, 5
  %224 = and i32 %223, 1
  %225 = load i32, ptr %2, align 8, !tbaa !229
  %226 = icmp slt i32 %225, 2048
  %227 = zext i1 %226 to i32
  %228 = add nsw i32 %225, %227
  %229 = sub i32 %221, %222
  %230 = lshr i32 %229, 12
  %231 = mul i32 %230, %228
  %232 = add i32 %231, %222
  %233 = and i32 %229, 4095
  %234 = mul i32 %233, %228
  %235 = lshr i32 %234, 12
  %236 = add i32 %232, %235
  %237 = load i32, ptr %25, align 4, !tbaa !231
  %238 = icmp eq i32 %237, 1
  %239 = load i32, ptr %26, align 8
  %240 = icmp ule i32 %239, %236
  %241 = zext i1 %240 to i32
  %242 = select i1 %238, i32 %241, i32 %224
  store i32 %242, ptr @y, align 4, !tbaa !25
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %245, label %244

244:                                              ; preds = %220
  store i32 %236, ptr %24, align 4, !tbaa !236
  br label %247

245:                                              ; preds = %220
  %246 = add i32 %236, 1
  store i32 %246, ptr %23, align 8, !tbaa !235
  br label %247

247:                                              ; preds = %245, %244
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %248 = load i32, ptr %23, align 8, !tbaa !235
  %249 = load i32, ptr %24, align 4, !tbaa !236
  %250 = xor i32 %249, %248
  %251 = icmp ult i32 %250, 16777216
  br i1 %251, label %252, label %286

252:                                              ; preds = %247, %281
  %253 = phi i32 [ %283, %281 ], [ %248, %247 ]
  %254 = phi i32 [ %282, %281 ], [ %249, %247 ]
  %255 = load i32, ptr %25, align 4, !tbaa !231
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %264

257:                                              ; preds = %252
  %258 = lshr i32 %254, 24
  %259 = load ptr, ptr %9, align 8, !tbaa !234
  %260 = tail call i32 @putc(i32 noundef %258, ptr noundef %259)
  %261 = load i32, ptr %23, align 8, !tbaa !235
  %262 = load i32, ptr %24, align 4, !tbaa !236
  %263 = load i32, ptr %25, align 4, !tbaa !231
  br label %264

264:                                              ; preds = %257, %252
  %265 = phi i32 [ %263, %257 ], [ %255, %252 ]
  %266 = phi i32 [ %262, %257 ], [ %254, %252 ]
  %267 = phi i32 [ %261, %257 ], [ %253, %252 ]
  %268 = shl i32 %267, 8
  store i32 %268, ptr %23, align 8, !tbaa !235
  %269 = shl i32 %266, 8
  %270 = or i32 %269, 255
  store i32 %270, ptr %24, align 4, !tbaa !236
  %271 = icmp eq i32 %265, 1
  br i1 %271, label %272, label %281

272:                                              ; preds = %264
  %273 = load i32, ptr %26, align 8, !tbaa !237
  %274 = shl i32 %273, 8
  %275 = load ptr, ptr %9, align 8, !tbaa !234
  %276 = tail call i32 @getc(ptr noundef %275)
  %277 = and i32 %276, 255
  %278 = or i32 %277, %274
  store i32 %278, ptr %26, align 8, !tbaa !237
  %279 = load i32, ptr %23, align 8, !tbaa !235
  %280 = load i32, ptr %24, align 4, !tbaa !236
  br label %281

281:                                              ; preds = %272, %264
  %282 = phi i32 [ %280, %272 ], [ %270, %264 ]
  %283 = phi i32 [ %279, %272 ], [ %268, %264 ]
  %284 = xor i32 %283, %282
  %285 = icmp ult i32 %284, 16777216
  br i1 %285, label %252, label %286, !llvm.loop !254

286:                                              ; preds = %281, %247
  %287 = phi i32 [ %249, %247 ], [ %282, %281 ]
  %288 = phi i32 [ %248, %247 ], [ %283, %281 ]
  %289 = lshr i32 %85, 4
  %290 = and i32 %289, 1
  %291 = load i32, ptr %2, align 8, !tbaa !229
  %292 = icmp slt i32 %291, 2048
  %293 = zext i1 %292 to i32
  %294 = add nsw i32 %291, %293
  %295 = sub i32 %287, %288
  %296 = lshr i32 %295, 12
  %297 = mul i32 %296, %294
  %298 = add i32 %297, %288
  %299 = and i32 %295, 4095
  %300 = mul i32 %299, %294
  %301 = lshr i32 %300, 12
  %302 = add i32 %298, %301
  %303 = load i32, ptr %25, align 4, !tbaa !231
  %304 = icmp eq i32 %303, 1
  %305 = load i32, ptr %26, align 8
  %306 = icmp ule i32 %305, %302
  %307 = zext i1 %306 to i32
  %308 = select i1 %304, i32 %307, i32 %290
  store i32 %308, ptr @y, align 4, !tbaa !25
  %309 = icmp eq i32 %308, 0
  br i1 %309, label %311, label %310

310:                                              ; preds = %286
  store i32 %302, ptr %24, align 4, !tbaa !236
  br label %313

311:                                              ; preds = %286
  %312 = add i32 %302, 1
  store i32 %312, ptr %23, align 8, !tbaa !235
  br label %313

313:                                              ; preds = %311, %310
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %314 = load i32, ptr %23, align 8, !tbaa !235
  %315 = load i32, ptr %24, align 4, !tbaa !236
  %316 = xor i32 %315, %314
  %317 = icmp ult i32 %316, 16777216
  br i1 %317, label %318, label %352

318:                                              ; preds = %313, %347
  %319 = phi i32 [ %349, %347 ], [ %314, %313 ]
  %320 = phi i32 [ %348, %347 ], [ %315, %313 ]
  %321 = load i32, ptr %25, align 4, !tbaa !231
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %330

323:                                              ; preds = %318
  %324 = lshr i32 %320, 24
  %325 = load ptr, ptr %9, align 8, !tbaa !234
  %326 = tail call i32 @putc(i32 noundef %324, ptr noundef %325)
  %327 = load i32, ptr %23, align 8, !tbaa !235
  %328 = load i32, ptr %24, align 4, !tbaa !236
  %329 = load i32, ptr %25, align 4, !tbaa !231
  br label %330

330:                                              ; preds = %323, %318
  %331 = phi i32 [ %329, %323 ], [ %321, %318 ]
  %332 = phi i32 [ %328, %323 ], [ %320, %318 ]
  %333 = phi i32 [ %327, %323 ], [ %319, %318 ]
  %334 = shl i32 %333, 8
  store i32 %334, ptr %23, align 8, !tbaa !235
  %335 = shl i32 %332, 8
  %336 = or i32 %335, 255
  store i32 %336, ptr %24, align 4, !tbaa !236
  %337 = icmp eq i32 %331, 1
  br i1 %337, label %338, label %347

338:                                              ; preds = %330
  %339 = load i32, ptr %26, align 8, !tbaa !237
  %340 = shl i32 %339, 8
  %341 = load ptr, ptr %9, align 8, !tbaa !234
  %342 = tail call i32 @getc(ptr noundef %341)
  %343 = and i32 %342, 255
  %344 = or i32 %343, %340
  store i32 %344, ptr %26, align 8, !tbaa !237
  %345 = load i32, ptr %23, align 8, !tbaa !235
  %346 = load i32, ptr %24, align 4, !tbaa !236
  br label %347

347:                                              ; preds = %338, %330
  %348 = phi i32 [ %346, %338 ], [ %336, %330 ]
  %349 = phi i32 [ %345, %338 ], [ %334, %330 ]
  %350 = xor i32 %349, %348
  %351 = icmp ult i32 %350, 16777216
  br i1 %351, label %318, label %352, !llvm.loop !254

352:                                              ; preds = %347, %313
  %353 = phi i32 [ %315, %313 ], [ %348, %347 ]
  %354 = phi i32 [ %314, %313 ], [ %349, %347 ]
  %355 = lshr i32 %85, 3
  %356 = and i32 %355, 1
  %357 = load i32, ptr %2, align 8, !tbaa !229
  %358 = icmp slt i32 %357, 2048
  %359 = zext i1 %358 to i32
  %360 = add nsw i32 %357, %359
  %361 = sub i32 %353, %354
  %362 = lshr i32 %361, 12
  %363 = mul i32 %362, %360
  %364 = add i32 %363, %354
  %365 = and i32 %361, 4095
  %366 = mul i32 %365, %360
  %367 = lshr i32 %366, 12
  %368 = add i32 %364, %367
  %369 = load i32, ptr %25, align 4, !tbaa !231
  %370 = icmp eq i32 %369, 1
  %371 = load i32, ptr %26, align 8
  %372 = icmp ule i32 %371, %368
  %373 = zext i1 %372 to i32
  %374 = select i1 %370, i32 %373, i32 %356
  store i32 %374, ptr @y, align 4, !tbaa !25
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %377, label %376

376:                                              ; preds = %352
  store i32 %368, ptr %24, align 4, !tbaa !236
  br label %379

377:                                              ; preds = %352
  %378 = add i32 %368, 1
  store i32 %378, ptr %23, align 8, !tbaa !235
  br label %379

379:                                              ; preds = %377, %376
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %380 = load i32, ptr %23, align 8, !tbaa !235
  %381 = load i32, ptr %24, align 4, !tbaa !236
  %382 = xor i32 %381, %380
  %383 = icmp ult i32 %382, 16777216
  br i1 %383, label %384, label %418

384:                                              ; preds = %379, %413
  %385 = phi i32 [ %415, %413 ], [ %380, %379 ]
  %386 = phi i32 [ %414, %413 ], [ %381, %379 ]
  %387 = load i32, ptr %25, align 4, !tbaa !231
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %396

389:                                              ; preds = %384
  %390 = lshr i32 %386, 24
  %391 = load ptr, ptr %9, align 8, !tbaa !234
  %392 = tail call i32 @putc(i32 noundef %390, ptr noundef %391)
  %393 = load i32, ptr %23, align 8, !tbaa !235
  %394 = load i32, ptr %24, align 4, !tbaa !236
  %395 = load i32, ptr %25, align 4, !tbaa !231
  br label %396

396:                                              ; preds = %389, %384
  %397 = phi i32 [ %395, %389 ], [ %387, %384 ]
  %398 = phi i32 [ %394, %389 ], [ %386, %384 ]
  %399 = phi i32 [ %393, %389 ], [ %385, %384 ]
  %400 = shl i32 %399, 8
  store i32 %400, ptr %23, align 8, !tbaa !235
  %401 = shl i32 %398, 8
  %402 = or i32 %401, 255
  store i32 %402, ptr %24, align 4, !tbaa !236
  %403 = icmp eq i32 %397, 1
  br i1 %403, label %404, label %413

404:                                              ; preds = %396
  %405 = load i32, ptr %26, align 8, !tbaa !237
  %406 = shl i32 %405, 8
  %407 = load ptr, ptr %9, align 8, !tbaa !234
  %408 = tail call i32 @getc(ptr noundef %407)
  %409 = and i32 %408, 255
  %410 = or i32 %409, %406
  store i32 %410, ptr %26, align 8, !tbaa !237
  %411 = load i32, ptr %23, align 8, !tbaa !235
  %412 = load i32, ptr %24, align 4, !tbaa !236
  br label %413

413:                                              ; preds = %404, %396
  %414 = phi i32 [ %412, %404 ], [ %402, %396 ]
  %415 = phi i32 [ %411, %404 ], [ %400, %396 ]
  %416 = xor i32 %415, %414
  %417 = icmp ult i32 %416, 16777216
  br i1 %417, label %384, label %418, !llvm.loop !254

418:                                              ; preds = %413, %379
  %419 = phi i32 [ %381, %379 ], [ %414, %413 ]
  %420 = phi i32 [ %380, %379 ], [ %415, %413 ]
  %421 = lshr i32 %85, 2
  %422 = and i32 %421, 1
  %423 = load i32, ptr %2, align 8, !tbaa !229
  %424 = icmp slt i32 %423, 2048
  %425 = zext i1 %424 to i32
  %426 = add nsw i32 %423, %425
  %427 = sub i32 %419, %420
  %428 = lshr i32 %427, 12
  %429 = mul i32 %428, %426
  %430 = add i32 %429, %420
  %431 = and i32 %427, 4095
  %432 = mul i32 %431, %426
  %433 = lshr i32 %432, 12
  %434 = add i32 %430, %433
  %435 = load i32, ptr %25, align 4, !tbaa !231
  %436 = icmp eq i32 %435, 1
  %437 = load i32, ptr %26, align 8
  %438 = icmp ule i32 %437, %434
  %439 = zext i1 %438 to i32
  %440 = select i1 %436, i32 %439, i32 %422
  store i32 %440, ptr @y, align 4, !tbaa !25
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %443, label %442

442:                                              ; preds = %418
  store i32 %434, ptr %24, align 4, !tbaa !236
  br label %445

443:                                              ; preds = %418
  %444 = add i32 %434, 1
  store i32 %444, ptr %23, align 8, !tbaa !235
  br label %445

445:                                              ; preds = %443, %442
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %446 = load i32, ptr %23, align 8, !tbaa !235
  %447 = load i32, ptr %24, align 4, !tbaa !236
  %448 = xor i32 %447, %446
  %449 = icmp ult i32 %448, 16777216
  br i1 %449, label %450, label %484

450:                                              ; preds = %445, %479
  %451 = phi i32 [ %481, %479 ], [ %446, %445 ]
  %452 = phi i32 [ %480, %479 ], [ %447, %445 ]
  %453 = load i32, ptr %25, align 4, !tbaa !231
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %455, label %462

455:                                              ; preds = %450
  %456 = lshr i32 %452, 24
  %457 = load ptr, ptr %9, align 8, !tbaa !234
  %458 = tail call i32 @putc(i32 noundef %456, ptr noundef %457)
  %459 = load i32, ptr %23, align 8, !tbaa !235
  %460 = load i32, ptr %24, align 4, !tbaa !236
  %461 = load i32, ptr %25, align 4, !tbaa !231
  br label %462

462:                                              ; preds = %455, %450
  %463 = phi i32 [ %461, %455 ], [ %453, %450 ]
  %464 = phi i32 [ %460, %455 ], [ %452, %450 ]
  %465 = phi i32 [ %459, %455 ], [ %451, %450 ]
  %466 = shl i32 %465, 8
  store i32 %466, ptr %23, align 8, !tbaa !235
  %467 = shl i32 %464, 8
  %468 = or i32 %467, 255
  store i32 %468, ptr %24, align 4, !tbaa !236
  %469 = icmp eq i32 %463, 1
  br i1 %469, label %470, label %479

470:                                              ; preds = %462
  %471 = load i32, ptr %26, align 8, !tbaa !237
  %472 = shl i32 %471, 8
  %473 = load ptr, ptr %9, align 8, !tbaa !234
  %474 = tail call i32 @getc(ptr noundef %473)
  %475 = and i32 %474, 255
  %476 = or i32 %475, %472
  store i32 %476, ptr %26, align 8, !tbaa !237
  %477 = load i32, ptr %23, align 8, !tbaa !235
  %478 = load i32, ptr %24, align 4, !tbaa !236
  br label %479

479:                                              ; preds = %470, %462
  %480 = phi i32 [ %478, %470 ], [ %468, %462 ]
  %481 = phi i32 [ %477, %470 ], [ %466, %462 ]
  %482 = xor i32 %481, %480
  %483 = icmp ult i32 %482, 16777216
  br i1 %483, label %450, label %484, !llvm.loop !254

484:                                              ; preds = %479, %445
  %485 = phi i32 [ %447, %445 ], [ %480, %479 ]
  %486 = phi i32 [ %446, %445 ], [ %481, %479 ]
  %487 = lshr i32 %85, 1
  %488 = and i32 %487, 1
  %489 = load i32, ptr %2, align 8, !tbaa !229
  %490 = icmp slt i32 %489, 2048
  %491 = zext i1 %490 to i32
  %492 = add nsw i32 %489, %491
  %493 = sub i32 %485, %486
  %494 = lshr i32 %493, 12
  %495 = mul i32 %494, %492
  %496 = add i32 %495, %486
  %497 = and i32 %493, 4095
  %498 = mul i32 %497, %492
  %499 = lshr i32 %498, 12
  %500 = add i32 %496, %499
  %501 = load i32, ptr %25, align 4, !tbaa !231
  %502 = icmp eq i32 %501, 1
  %503 = load i32, ptr %26, align 8
  %504 = icmp ule i32 %503, %500
  %505 = zext i1 %504 to i32
  %506 = select i1 %502, i32 %505, i32 %488
  store i32 %506, ptr @y, align 4, !tbaa !25
  %507 = icmp eq i32 %506, 0
  br i1 %507, label %509, label %508

508:                                              ; preds = %484
  store i32 %500, ptr %24, align 4, !tbaa !236
  br label %511

509:                                              ; preds = %484
  %510 = add i32 %500, 1
  store i32 %510, ptr %23, align 8, !tbaa !235
  br label %511

511:                                              ; preds = %509, %508
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %512 = load i32, ptr %23, align 8, !tbaa !235
  %513 = load i32, ptr %24, align 4, !tbaa !236
  %514 = xor i32 %513, %512
  %515 = icmp ult i32 %514, 16777216
  br i1 %515, label %516, label %550

516:                                              ; preds = %511, %545
  %517 = phi i32 [ %547, %545 ], [ %512, %511 ]
  %518 = phi i32 [ %546, %545 ], [ %513, %511 ]
  %519 = load i32, ptr %25, align 4, !tbaa !231
  %520 = icmp eq i32 %519, 0
  br i1 %520, label %521, label %528

521:                                              ; preds = %516
  %522 = lshr i32 %518, 24
  %523 = load ptr, ptr %9, align 8, !tbaa !234
  %524 = tail call i32 @putc(i32 noundef %522, ptr noundef %523)
  %525 = load i32, ptr %23, align 8, !tbaa !235
  %526 = load i32, ptr %24, align 4, !tbaa !236
  %527 = load i32, ptr %25, align 4, !tbaa !231
  br label %528

528:                                              ; preds = %521, %516
  %529 = phi i32 [ %527, %521 ], [ %519, %516 ]
  %530 = phi i32 [ %526, %521 ], [ %518, %516 ]
  %531 = phi i32 [ %525, %521 ], [ %517, %516 ]
  %532 = shl i32 %531, 8
  store i32 %532, ptr %23, align 8, !tbaa !235
  %533 = shl i32 %530, 8
  %534 = or i32 %533, 255
  store i32 %534, ptr %24, align 4, !tbaa !236
  %535 = icmp eq i32 %529, 1
  br i1 %535, label %536, label %545

536:                                              ; preds = %528
  %537 = load i32, ptr %26, align 8, !tbaa !237
  %538 = shl i32 %537, 8
  %539 = load ptr, ptr %9, align 8, !tbaa !234
  %540 = tail call i32 @getc(ptr noundef %539)
  %541 = and i32 %540, 255
  %542 = or i32 %541, %538
  store i32 %542, ptr %26, align 8, !tbaa !237
  %543 = load i32, ptr %23, align 8, !tbaa !235
  %544 = load i32, ptr %24, align 4, !tbaa !236
  br label %545

545:                                              ; preds = %536, %528
  %546 = phi i32 [ %544, %536 ], [ %534, %528 ]
  %547 = phi i32 [ %543, %536 ], [ %532, %528 ]
  %548 = xor i32 %547, %546
  %549 = icmp ult i32 %548, 16777216
  br i1 %549, label %516, label %550, !llvm.loop !254

550:                                              ; preds = %545, %511
  %551 = phi i32 [ %513, %511 ], [ %546, %545 ]
  %552 = phi i32 [ %512, %511 ], [ %547, %545 ]
  %553 = and i32 %85, 1
  %554 = load i32, ptr %2, align 8, !tbaa !229
  %555 = icmp slt i32 %554, 2048
  %556 = zext i1 %555 to i32
  %557 = add nsw i32 %554, %556
  %558 = sub i32 %551, %552
  %559 = lshr i32 %558, 12
  %560 = mul i32 %559, %557
  %561 = add i32 %560, %552
  %562 = and i32 %558, 4095
  %563 = mul i32 %562, %557
  %564 = lshr i32 %563, 12
  %565 = add i32 %561, %564
  %566 = load i32, ptr %25, align 4, !tbaa !231
  %567 = icmp eq i32 %566, 1
  %568 = load i32, ptr %26, align 8
  %569 = icmp ule i32 %568, %565
  %570 = zext i1 %569 to i32
  %571 = select i1 %567, i32 %570, i32 %553
  store i32 %571, ptr @y, align 4, !tbaa !25
  %572 = icmp eq i32 %571, 0
  br i1 %572, label %574, label %573

573:                                              ; preds = %550
  store i32 %565, ptr %24, align 4, !tbaa !236
  br label %576

574:                                              ; preds = %550
  %575 = add i32 %565, 1
  store i32 %575, ptr %23, align 8, !tbaa !235
  br label %576

576:                                              ; preds = %574, %573
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %577 = load i32, ptr %23, align 8, !tbaa !235
  %578 = load i32, ptr %24, align 4, !tbaa !236
  %579 = xor i32 %578, %577
  %580 = icmp ult i32 %579, 16777216
  br i1 %580, label %581, label %618

581:                                              ; preds = %576, %610
  %582 = phi i32 [ %612, %610 ], [ %577, %576 ]
  %583 = phi i32 [ %611, %610 ], [ %578, %576 ]
  %584 = load i32, ptr %25, align 4, !tbaa !231
  %585 = icmp eq i32 %584, 0
  br i1 %585, label %586, label %593

586:                                              ; preds = %581
  %587 = lshr i32 %583, 24
  %588 = load ptr, ptr %9, align 8, !tbaa !234
  %589 = tail call i32 @putc(i32 noundef %587, ptr noundef %588)
  %590 = load i32, ptr %23, align 8, !tbaa !235
  %591 = load i32, ptr %24, align 4, !tbaa !236
  %592 = load i32, ptr %25, align 4, !tbaa !231
  br label %593

593:                                              ; preds = %586, %581
  %594 = phi i32 [ %592, %586 ], [ %584, %581 ]
  %595 = phi i32 [ %591, %586 ], [ %583, %581 ]
  %596 = phi i32 [ %590, %586 ], [ %582, %581 ]
  %597 = shl i32 %596, 8
  store i32 %597, ptr %23, align 8, !tbaa !235
  %598 = shl i32 %595, 8
  %599 = or i32 %598, 255
  store i32 %599, ptr %24, align 4, !tbaa !236
  %600 = icmp eq i32 %594, 1
  br i1 %600, label %601, label %610

601:                                              ; preds = %593
  %602 = load i32, ptr %26, align 8, !tbaa !237
  %603 = shl i32 %602, 8
  %604 = load ptr, ptr %9, align 8, !tbaa !234
  %605 = tail call i32 @getc(ptr noundef %604)
  %606 = and i32 %605, 255
  %607 = or i32 %606, %603
  store i32 %607, ptr %26, align 8, !tbaa !237
  %608 = load i32, ptr %23, align 8, !tbaa !235
  %609 = load i32, ptr %24, align 4, !tbaa !236
  br label %610

610:                                              ; preds = %601, %593
  %611 = phi i32 [ %609, %601 ], [ %599, %593 ]
  %612 = phi i32 [ %608, %601 ], [ %597, %593 ]
  %613 = xor i32 %612, %611
  %614 = icmp ult i32 %613, 16777216
  br i1 %614, label %581, label %618, !llvm.loop !254

615:                                              ; preds = %84
  %616 = load ptr, ptr %9, align 8, !tbaa !234
  %617 = tail call i32 @putc(i32 noundef %85, ptr noundef %616)
  br label %618

618:                                              ; preds = %610, %576, %615
  %619 = add nuw nsw i32 %74, 1
  %620 = icmp eq i32 %619, %32
  br i1 %620, label %1175, label %73, !llvm.loop !255

621:                                              ; preds = %55
  tail call void @rewind(ptr noundef nonnull %33)
  %622 = tail call i32 @getc(ptr noundef nonnull %33)
  %623 = icmp eq i32 %622, -1
  br i1 %623, label %1175, label %624

624:                                              ; preds = %621
  %625 = trunc i64 %28 to i32
  br label %626

626:                                              ; preds = %624, %1172
  %627 = phi i32 [ %1173, %1172 ], [ %622, %624 ]
  %628 = phi i32 [ %629, %1172 ], [ 0, %624 ]
  %629 = add i32 %628, 1
  %630 = add i32 %628, %625
  %631 = icmp sgt i32 %630, 0
  %632 = and i32 %628, 4095
  %633 = icmp eq i32 %632, 0
  %634 = and i1 %631, %633
  br i1 %634, label %635, label %639

635:                                              ; preds = %626
  %636 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %630)
  %637 = load ptr, ptr @stdout, align 8, !tbaa !5
  %638 = tail call i32 @fflush(ptr noundef %637)
  br label %639

639:                                              ; preds = %626, %635
  %640 = load i32, ptr @level, align 4, !tbaa !25
  %641 = icmp eq i32 %640, 0
  br i1 %641, label %1169, label %642

642:                                              ; preds = %639
  %643 = lshr i32 %627, 7
  %644 = and i32 %643, 1
  %645 = load i32, ptr %2, align 8, !tbaa !229
  %646 = icmp slt i32 %645, 2048
  %647 = zext i1 %646 to i32
  %648 = add nsw i32 %645, %647
  %649 = load i32, ptr %23, align 8, !tbaa !235
  %650 = load i32, ptr %24, align 4, !tbaa !236
  %651 = sub i32 %650, %649
  %652 = lshr i32 %651, 12
  %653 = mul i32 %652, %648
  %654 = add i32 %653, %649
  %655 = and i32 %651, 4095
  %656 = mul i32 %655, %648
  %657 = lshr i32 %656, 12
  %658 = add i32 %654, %657
  %659 = load i32, ptr %25, align 4, !tbaa !231
  %660 = icmp eq i32 %659, 1
  %661 = load i32, ptr %26, align 8
  %662 = icmp ule i32 %661, %658
  %663 = zext i1 %662 to i32
  %664 = select i1 %660, i32 %663, i32 %644
  store i32 %664, ptr @y, align 4, !tbaa !25
  %665 = icmp eq i32 %664, 0
  br i1 %665, label %667, label %666

666:                                              ; preds = %642
  store i32 %658, ptr %24, align 4, !tbaa !236
  br label %669

667:                                              ; preds = %642
  %668 = add i32 %658, 1
  store i32 %668, ptr %23, align 8, !tbaa !235
  br label %669

669:                                              ; preds = %667, %666
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %670 = load i32, ptr %23, align 8, !tbaa !235
  %671 = load i32, ptr %24, align 4, !tbaa !236
  %672 = xor i32 %671, %670
  %673 = icmp ult i32 %672, 16777216
  br i1 %673, label %674, label %708

674:                                              ; preds = %669, %703
  %675 = phi i32 [ %705, %703 ], [ %670, %669 ]
  %676 = phi i32 [ %704, %703 ], [ %671, %669 ]
  %677 = load i32, ptr %25, align 4, !tbaa !231
  %678 = icmp eq i32 %677, 0
  br i1 %678, label %679, label %686

679:                                              ; preds = %674
  %680 = lshr i32 %676, 24
  %681 = load ptr, ptr %9, align 8, !tbaa !234
  %682 = tail call i32 @putc(i32 noundef %680, ptr noundef %681)
  %683 = load i32, ptr %23, align 8, !tbaa !235
  %684 = load i32, ptr %24, align 4, !tbaa !236
  %685 = load i32, ptr %25, align 4, !tbaa !231
  br label %686

686:                                              ; preds = %679, %674
  %687 = phi i32 [ %685, %679 ], [ %677, %674 ]
  %688 = phi i32 [ %684, %679 ], [ %676, %674 ]
  %689 = phi i32 [ %683, %679 ], [ %675, %674 ]
  %690 = shl i32 %689, 8
  store i32 %690, ptr %23, align 8, !tbaa !235
  %691 = shl i32 %688, 8
  %692 = or i32 %691, 255
  store i32 %692, ptr %24, align 4, !tbaa !236
  %693 = icmp eq i32 %687, 1
  br i1 %693, label %694, label %703

694:                                              ; preds = %686
  %695 = load i32, ptr %26, align 8, !tbaa !237
  %696 = shl i32 %695, 8
  %697 = load ptr, ptr %9, align 8, !tbaa !234
  %698 = tail call i32 @getc(ptr noundef %697)
  %699 = and i32 %698, 255
  %700 = or i32 %699, %696
  store i32 %700, ptr %26, align 8, !tbaa !237
  %701 = load i32, ptr %23, align 8, !tbaa !235
  %702 = load i32, ptr %24, align 4, !tbaa !236
  br label %703

703:                                              ; preds = %694, %686
  %704 = phi i32 [ %702, %694 ], [ %692, %686 ]
  %705 = phi i32 [ %701, %694 ], [ %690, %686 ]
  %706 = xor i32 %705, %704
  %707 = icmp ult i32 %706, 16777216
  br i1 %707, label %674, label %708, !llvm.loop !254

708:                                              ; preds = %703, %669
  %709 = phi i32 [ %671, %669 ], [ %704, %703 ]
  %710 = phi i32 [ %670, %669 ], [ %705, %703 ]
  %711 = lshr i32 %627, 6
  %712 = and i32 %711, 1
  %713 = load i32, ptr %2, align 8, !tbaa !229
  %714 = icmp slt i32 %713, 2048
  %715 = zext i1 %714 to i32
  %716 = add nsw i32 %713, %715
  %717 = sub i32 %709, %710
  %718 = lshr i32 %717, 12
  %719 = mul i32 %718, %716
  %720 = add i32 %719, %710
  %721 = and i32 %717, 4095
  %722 = mul i32 %721, %716
  %723 = lshr i32 %722, 12
  %724 = add i32 %720, %723
  %725 = load i32, ptr %25, align 4, !tbaa !231
  %726 = icmp eq i32 %725, 1
  %727 = load i32, ptr %26, align 8
  %728 = icmp ule i32 %727, %724
  %729 = zext i1 %728 to i32
  %730 = select i1 %726, i32 %729, i32 %712
  store i32 %730, ptr @y, align 4, !tbaa !25
  %731 = icmp eq i32 %730, 0
  br i1 %731, label %733, label %732

732:                                              ; preds = %708
  store i32 %724, ptr %24, align 4, !tbaa !236
  br label %735

733:                                              ; preds = %708
  %734 = add i32 %724, 1
  store i32 %734, ptr %23, align 8, !tbaa !235
  br label %735

735:                                              ; preds = %733, %732
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %736 = load i32, ptr %23, align 8, !tbaa !235
  %737 = load i32, ptr %24, align 4, !tbaa !236
  %738 = xor i32 %737, %736
  %739 = icmp ult i32 %738, 16777216
  br i1 %739, label %740, label %774

740:                                              ; preds = %735, %769
  %741 = phi i32 [ %771, %769 ], [ %736, %735 ]
  %742 = phi i32 [ %770, %769 ], [ %737, %735 ]
  %743 = load i32, ptr %25, align 4, !tbaa !231
  %744 = icmp eq i32 %743, 0
  br i1 %744, label %745, label %752

745:                                              ; preds = %740
  %746 = lshr i32 %742, 24
  %747 = load ptr, ptr %9, align 8, !tbaa !234
  %748 = tail call i32 @putc(i32 noundef %746, ptr noundef %747)
  %749 = load i32, ptr %23, align 8, !tbaa !235
  %750 = load i32, ptr %24, align 4, !tbaa !236
  %751 = load i32, ptr %25, align 4, !tbaa !231
  br label %752

752:                                              ; preds = %745, %740
  %753 = phi i32 [ %751, %745 ], [ %743, %740 ]
  %754 = phi i32 [ %750, %745 ], [ %742, %740 ]
  %755 = phi i32 [ %749, %745 ], [ %741, %740 ]
  %756 = shl i32 %755, 8
  store i32 %756, ptr %23, align 8, !tbaa !235
  %757 = shl i32 %754, 8
  %758 = or i32 %757, 255
  store i32 %758, ptr %24, align 4, !tbaa !236
  %759 = icmp eq i32 %753, 1
  br i1 %759, label %760, label %769

760:                                              ; preds = %752
  %761 = load i32, ptr %26, align 8, !tbaa !237
  %762 = shl i32 %761, 8
  %763 = load ptr, ptr %9, align 8, !tbaa !234
  %764 = tail call i32 @getc(ptr noundef %763)
  %765 = and i32 %764, 255
  %766 = or i32 %765, %762
  store i32 %766, ptr %26, align 8, !tbaa !237
  %767 = load i32, ptr %23, align 8, !tbaa !235
  %768 = load i32, ptr %24, align 4, !tbaa !236
  br label %769

769:                                              ; preds = %760, %752
  %770 = phi i32 [ %768, %760 ], [ %758, %752 ]
  %771 = phi i32 [ %767, %760 ], [ %756, %752 ]
  %772 = xor i32 %771, %770
  %773 = icmp ult i32 %772, 16777216
  br i1 %773, label %740, label %774, !llvm.loop !254

774:                                              ; preds = %769, %735
  %775 = phi i32 [ %737, %735 ], [ %770, %769 ]
  %776 = phi i32 [ %736, %735 ], [ %771, %769 ]
  %777 = lshr i32 %627, 5
  %778 = and i32 %777, 1
  %779 = load i32, ptr %2, align 8, !tbaa !229
  %780 = icmp slt i32 %779, 2048
  %781 = zext i1 %780 to i32
  %782 = add nsw i32 %779, %781
  %783 = sub i32 %775, %776
  %784 = lshr i32 %783, 12
  %785 = mul i32 %784, %782
  %786 = add i32 %785, %776
  %787 = and i32 %783, 4095
  %788 = mul i32 %787, %782
  %789 = lshr i32 %788, 12
  %790 = add i32 %786, %789
  %791 = load i32, ptr %25, align 4, !tbaa !231
  %792 = icmp eq i32 %791, 1
  %793 = load i32, ptr %26, align 8
  %794 = icmp ule i32 %793, %790
  %795 = zext i1 %794 to i32
  %796 = select i1 %792, i32 %795, i32 %778
  store i32 %796, ptr @y, align 4, !tbaa !25
  %797 = icmp eq i32 %796, 0
  br i1 %797, label %799, label %798

798:                                              ; preds = %774
  store i32 %790, ptr %24, align 4, !tbaa !236
  br label %801

799:                                              ; preds = %774
  %800 = add i32 %790, 1
  store i32 %800, ptr %23, align 8, !tbaa !235
  br label %801

801:                                              ; preds = %799, %798
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %802 = load i32, ptr %23, align 8, !tbaa !235
  %803 = load i32, ptr %24, align 4, !tbaa !236
  %804 = xor i32 %803, %802
  %805 = icmp ult i32 %804, 16777216
  br i1 %805, label %806, label %840

806:                                              ; preds = %801, %835
  %807 = phi i32 [ %837, %835 ], [ %802, %801 ]
  %808 = phi i32 [ %836, %835 ], [ %803, %801 ]
  %809 = load i32, ptr %25, align 4, !tbaa !231
  %810 = icmp eq i32 %809, 0
  br i1 %810, label %811, label %818

811:                                              ; preds = %806
  %812 = lshr i32 %808, 24
  %813 = load ptr, ptr %9, align 8, !tbaa !234
  %814 = tail call i32 @putc(i32 noundef %812, ptr noundef %813)
  %815 = load i32, ptr %23, align 8, !tbaa !235
  %816 = load i32, ptr %24, align 4, !tbaa !236
  %817 = load i32, ptr %25, align 4, !tbaa !231
  br label %818

818:                                              ; preds = %811, %806
  %819 = phi i32 [ %817, %811 ], [ %809, %806 ]
  %820 = phi i32 [ %816, %811 ], [ %808, %806 ]
  %821 = phi i32 [ %815, %811 ], [ %807, %806 ]
  %822 = shl i32 %821, 8
  store i32 %822, ptr %23, align 8, !tbaa !235
  %823 = shl i32 %820, 8
  %824 = or i32 %823, 255
  store i32 %824, ptr %24, align 4, !tbaa !236
  %825 = icmp eq i32 %819, 1
  br i1 %825, label %826, label %835

826:                                              ; preds = %818
  %827 = load i32, ptr %26, align 8, !tbaa !237
  %828 = shl i32 %827, 8
  %829 = load ptr, ptr %9, align 8, !tbaa !234
  %830 = tail call i32 @getc(ptr noundef %829)
  %831 = and i32 %830, 255
  %832 = or i32 %831, %828
  store i32 %832, ptr %26, align 8, !tbaa !237
  %833 = load i32, ptr %23, align 8, !tbaa !235
  %834 = load i32, ptr %24, align 4, !tbaa !236
  br label %835

835:                                              ; preds = %826, %818
  %836 = phi i32 [ %834, %826 ], [ %824, %818 ]
  %837 = phi i32 [ %833, %826 ], [ %822, %818 ]
  %838 = xor i32 %837, %836
  %839 = icmp ult i32 %838, 16777216
  br i1 %839, label %806, label %840, !llvm.loop !254

840:                                              ; preds = %835, %801
  %841 = phi i32 [ %803, %801 ], [ %836, %835 ]
  %842 = phi i32 [ %802, %801 ], [ %837, %835 ]
  %843 = lshr i32 %627, 4
  %844 = and i32 %843, 1
  %845 = load i32, ptr %2, align 8, !tbaa !229
  %846 = icmp slt i32 %845, 2048
  %847 = zext i1 %846 to i32
  %848 = add nsw i32 %845, %847
  %849 = sub i32 %841, %842
  %850 = lshr i32 %849, 12
  %851 = mul i32 %850, %848
  %852 = add i32 %851, %842
  %853 = and i32 %849, 4095
  %854 = mul i32 %853, %848
  %855 = lshr i32 %854, 12
  %856 = add i32 %852, %855
  %857 = load i32, ptr %25, align 4, !tbaa !231
  %858 = icmp eq i32 %857, 1
  %859 = load i32, ptr %26, align 8
  %860 = icmp ule i32 %859, %856
  %861 = zext i1 %860 to i32
  %862 = select i1 %858, i32 %861, i32 %844
  store i32 %862, ptr @y, align 4, !tbaa !25
  %863 = icmp eq i32 %862, 0
  br i1 %863, label %865, label %864

864:                                              ; preds = %840
  store i32 %856, ptr %24, align 4, !tbaa !236
  br label %867

865:                                              ; preds = %840
  %866 = add i32 %856, 1
  store i32 %866, ptr %23, align 8, !tbaa !235
  br label %867

867:                                              ; preds = %865, %864
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %868 = load i32, ptr %23, align 8, !tbaa !235
  %869 = load i32, ptr %24, align 4, !tbaa !236
  %870 = xor i32 %869, %868
  %871 = icmp ult i32 %870, 16777216
  br i1 %871, label %872, label %906

872:                                              ; preds = %867, %901
  %873 = phi i32 [ %903, %901 ], [ %868, %867 ]
  %874 = phi i32 [ %902, %901 ], [ %869, %867 ]
  %875 = load i32, ptr %25, align 4, !tbaa !231
  %876 = icmp eq i32 %875, 0
  br i1 %876, label %877, label %884

877:                                              ; preds = %872
  %878 = lshr i32 %874, 24
  %879 = load ptr, ptr %9, align 8, !tbaa !234
  %880 = tail call i32 @putc(i32 noundef %878, ptr noundef %879)
  %881 = load i32, ptr %23, align 8, !tbaa !235
  %882 = load i32, ptr %24, align 4, !tbaa !236
  %883 = load i32, ptr %25, align 4, !tbaa !231
  br label %884

884:                                              ; preds = %877, %872
  %885 = phi i32 [ %883, %877 ], [ %875, %872 ]
  %886 = phi i32 [ %882, %877 ], [ %874, %872 ]
  %887 = phi i32 [ %881, %877 ], [ %873, %872 ]
  %888 = shl i32 %887, 8
  store i32 %888, ptr %23, align 8, !tbaa !235
  %889 = shl i32 %886, 8
  %890 = or i32 %889, 255
  store i32 %890, ptr %24, align 4, !tbaa !236
  %891 = icmp eq i32 %885, 1
  br i1 %891, label %892, label %901

892:                                              ; preds = %884
  %893 = load i32, ptr %26, align 8, !tbaa !237
  %894 = shl i32 %893, 8
  %895 = load ptr, ptr %9, align 8, !tbaa !234
  %896 = tail call i32 @getc(ptr noundef %895)
  %897 = and i32 %896, 255
  %898 = or i32 %897, %894
  store i32 %898, ptr %26, align 8, !tbaa !237
  %899 = load i32, ptr %23, align 8, !tbaa !235
  %900 = load i32, ptr %24, align 4, !tbaa !236
  br label %901

901:                                              ; preds = %892, %884
  %902 = phi i32 [ %900, %892 ], [ %890, %884 ]
  %903 = phi i32 [ %899, %892 ], [ %888, %884 ]
  %904 = xor i32 %903, %902
  %905 = icmp ult i32 %904, 16777216
  br i1 %905, label %872, label %906, !llvm.loop !254

906:                                              ; preds = %901, %867
  %907 = phi i32 [ %869, %867 ], [ %902, %901 ]
  %908 = phi i32 [ %868, %867 ], [ %903, %901 ]
  %909 = lshr i32 %627, 3
  %910 = and i32 %909, 1
  %911 = load i32, ptr %2, align 8, !tbaa !229
  %912 = icmp slt i32 %911, 2048
  %913 = zext i1 %912 to i32
  %914 = add nsw i32 %911, %913
  %915 = sub i32 %907, %908
  %916 = lshr i32 %915, 12
  %917 = mul i32 %916, %914
  %918 = add i32 %917, %908
  %919 = and i32 %915, 4095
  %920 = mul i32 %919, %914
  %921 = lshr i32 %920, 12
  %922 = add i32 %918, %921
  %923 = load i32, ptr %25, align 4, !tbaa !231
  %924 = icmp eq i32 %923, 1
  %925 = load i32, ptr %26, align 8
  %926 = icmp ule i32 %925, %922
  %927 = zext i1 %926 to i32
  %928 = select i1 %924, i32 %927, i32 %910
  store i32 %928, ptr @y, align 4, !tbaa !25
  %929 = icmp eq i32 %928, 0
  br i1 %929, label %931, label %930

930:                                              ; preds = %906
  store i32 %922, ptr %24, align 4, !tbaa !236
  br label %933

931:                                              ; preds = %906
  %932 = add i32 %922, 1
  store i32 %932, ptr %23, align 8, !tbaa !235
  br label %933

933:                                              ; preds = %931, %930
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %934 = load i32, ptr %23, align 8, !tbaa !235
  %935 = load i32, ptr %24, align 4, !tbaa !236
  %936 = xor i32 %935, %934
  %937 = icmp ult i32 %936, 16777216
  br i1 %937, label %938, label %972

938:                                              ; preds = %933, %967
  %939 = phi i32 [ %969, %967 ], [ %934, %933 ]
  %940 = phi i32 [ %968, %967 ], [ %935, %933 ]
  %941 = load i32, ptr %25, align 4, !tbaa !231
  %942 = icmp eq i32 %941, 0
  br i1 %942, label %943, label %950

943:                                              ; preds = %938
  %944 = lshr i32 %940, 24
  %945 = load ptr, ptr %9, align 8, !tbaa !234
  %946 = tail call i32 @putc(i32 noundef %944, ptr noundef %945)
  %947 = load i32, ptr %23, align 8, !tbaa !235
  %948 = load i32, ptr %24, align 4, !tbaa !236
  %949 = load i32, ptr %25, align 4, !tbaa !231
  br label %950

950:                                              ; preds = %943, %938
  %951 = phi i32 [ %949, %943 ], [ %941, %938 ]
  %952 = phi i32 [ %948, %943 ], [ %940, %938 ]
  %953 = phi i32 [ %947, %943 ], [ %939, %938 ]
  %954 = shl i32 %953, 8
  store i32 %954, ptr %23, align 8, !tbaa !235
  %955 = shl i32 %952, 8
  %956 = or i32 %955, 255
  store i32 %956, ptr %24, align 4, !tbaa !236
  %957 = icmp eq i32 %951, 1
  br i1 %957, label %958, label %967

958:                                              ; preds = %950
  %959 = load i32, ptr %26, align 8, !tbaa !237
  %960 = shl i32 %959, 8
  %961 = load ptr, ptr %9, align 8, !tbaa !234
  %962 = tail call i32 @getc(ptr noundef %961)
  %963 = and i32 %962, 255
  %964 = or i32 %963, %960
  store i32 %964, ptr %26, align 8, !tbaa !237
  %965 = load i32, ptr %23, align 8, !tbaa !235
  %966 = load i32, ptr %24, align 4, !tbaa !236
  br label %967

967:                                              ; preds = %958, %950
  %968 = phi i32 [ %966, %958 ], [ %956, %950 ]
  %969 = phi i32 [ %965, %958 ], [ %954, %950 ]
  %970 = xor i32 %969, %968
  %971 = icmp ult i32 %970, 16777216
  br i1 %971, label %938, label %972, !llvm.loop !254

972:                                              ; preds = %967, %933
  %973 = phi i32 [ %935, %933 ], [ %968, %967 ]
  %974 = phi i32 [ %934, %933 ], [ %969, %967 ]
  %975 = lshr i32 %627, 2
  %976 = and i32 %975, 1
  %977 = load i32, ptr %2, align 8, !tbaa !229
  %978 = icmp slt i32 %977, 2048
  %979 = zext i1 %978 to i32
  %980 = add nsw i32 %977, %979
  %981 = sub i32 %973, %974
  %982 = lshr i32 %981, 12
  %983 = mul i32 %982, %980
  %984 = add i32 %983, %974
  %985 = and i32 %981, 4095
  %986 = mul i32 %985, %980
  %987 = lshr i32 %986, 12
  %988 = add i32 %984, %987
  %989 = load i32, ptr %25, align 4, !tbaa !231
  %990 = icmp eq i32 %989, 1
  %991 = load i32, ptr %26, align 8
  %992 = icmp ule i32 %991, %988
  %993 = zext i1 %992 to i32
  %994 = select i1 %990, i32 %993, i32 %976
  store i32 %994, ptr @y, align 4, !tbaa !25
  %995 = icmp eq i32 %994, 0
  br i1 %995, label %997, label %996

996:                                              ; preds = %972
  store i32 %988, ptr %24, align 4, !tbaa !236
  br label %999

997:                                              ; preds = %972
  %998 = add i32 %988, 1
  store i32 %998, ptr %23, align 8, !tbaa !235
  br label %999

999:                                              ; preds = %997, %996
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %1000 = load i32, ptr %23, align 8, !tbaa !235
  %1001 = load i32, ptr %24, align 4, !tbaa !236
  %1002 = xor i32 %1001, %1000
  %1003 = icmp ult i32 %1002, 16777216
  br i1 %1003, label %1004, label %1038

1004:                                             ; preds = %999, %1033
  %1005 = phi i32 [ %1035, %1033 ], [ %1000, %999 ]
  %1006 = phi i32 [ %1034, %1033 ], [ %1001, %999 ]
  %1007 = load i32, ptr %25, align 4, !tbaa !231
  %1008 = icmp eq i32 %1007, 0
  br i1 %1008, label %1009, label %1016

1009:                                             ; preds = %1004
  %1010 = lshr i32 %1006, 24
  %1011 = load ptr, ptr %9, align 8, !tbaa !234
  %1012 = tail call i32 @putc(i32 noundef %1010, ptr noundef %1011)
  %1013 = load i32, ptr %23, align 8, !tbaa !235
  %1014 = load i32, ptr %24, align 4, !tbaa !236
  %1015 = load i32, ptr %25, align 4, !tbaa !231
  br label %1016

1016:                                             ; preds = %1009, %1004
  %1017 = phi i32 [ %1015, %1009 ], [ %1007, %1004 ]
  %1018 = phi i32 [ %1014, %1009 ], [ %1006, %1004 ]
  %1019 = phi i32 [ %1013, %1009 ], [ %1005, %1004 ]
  %1020 = shl i32 %1019, 8
  store i32 %1020, ptr %23, align 8, !tbaa !235
  %1021 = shl i32 %1018, 8
  %1022 = or i32 %1021, 255
  store i32 %1022, ptr %24, align 4, !tbaa !236
  %1023 = icmp eq i32 %1017, 1
  br i1 %1023, label %1024, label %1033

1024:                                             ; preds = %1016
  %1025 = load i32, ptr %26, align 8, !tbaa !237
  %1026 = shl i32 %1025, 8
  %1027 = load ptr, ptr %9, align 8, !tbaa !234
  %1028 = tail call i32 @getc(ptr noundef %1027)
  %1029 = and i32 %1028, 255
  %1030 = or i32 %1029, %1026
  store i32 %1030, ptr %26, align 8, !tbaa !237
  %1031 = load i32, ptr %23, align 8, !tbaa !235
  %1032 = load i32, ptr %24, align 4, !tbaa !236
  br label %1033

1033:                                             ; preds = %1024, %1016
  %1034 = phi i32 [ %1032, %1024 ], [ %1022, %1016 ]
  %1035 = phi i32 [ %1031, %1024 ], [ %1020, %1016 ]
  %1036 = xor i32 %1035, %1034
  %1037 = icmp ult i32 %1036, 16777216
  br i1 %1037, label %1004, label %1038, !llvm.loop !254

1038:                                             ; preds = %1033, %999
  %1039 = phi i32 [ %1001, %999 ], [ %1034, %1033 ]
  %1040 = phi i32 [ %1000, %999 ], [ %1035, %1033 ]
  %1041 = lshr i32 %627, 1
  %1042 = and i32 %1041, 1
  %1043 = load i32, ptr %2, align 8, !tbaa !229
  %1044 = icmp slt i32 %1043, 2048
  %1045 = zext i1 %1044 to i32
  %1046 = add nsw i32 %1043, %1045
  %1047 = sub i32 %1039, %1040
  %1048 = lshr i32 %1047, 12
  %1049 = mul i32 %1048, %1046
  %1050 = add i32 %1049, %1040
  %1051 = and i32 %1047, 4095
  %1052 = mul i32 %1051, %1046
  %1053 = lshr i32 %1052, 12
  %1054 = add i32 %1050, %1053
  %1055 = load i32, ptr %25, align 4, !tbaa !231
  %1056 = icmp eq i32 %1055, 1
  %1057 = load i32, ptr %26, align 8
  %1058 = icmp ule i32 %1057, %1054
  %1059 = zext i1 %1058 to i32
  %1060 = select i1 %1056, i32 %1059, i32 %1042
  store i32 %1060, ptr @y, align 4, !tbaa !25
  %1061 = icmp eq i32 %1060, 0
  br i1 %1061, label %1063, label %1062

1062:                                             ; preds = %1038
  store i32 %1054, ptr %24, align 4, !tbaa !236
  br label %1065

1063:                                             ; preds = %1038
  %1064 = add i32 %1054, 1
  store i32 %1064, ptr %23, align 8, !tbaa !235
  br label %1065

1065:                                             ; preds = %1063, %1062
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %1066 = load i32, ptr %23, align 8, !tbaa !235
  %1067 = load i32, ptr %24, align 4, !tbaa !236
  %1068 = xor i32 %1067, %1066
  %1069 = icmp ult i32 %1068, 16777216
  br i1 %1069, label %1070, label %1104

1070:                                             ; preds = %1065, %1099
  %1071 = phi i32 [ %1101, %1099 ], [ %1066, %1065 ]
  %1072 = phi i32 [ %1100, %1099 ], [ %1067, %1065 ]
  %1073 = load i32, ptr %25, align 4, !tbaa !231
  %1074 = icmp eq i32 %1073, 0
  br i1 %1074, label %1075, label %1082

1075:                                             ; preds = %1070
  %1076 = lshr i32 %1072, 24
  %1077 = load ptr, ptr %9, align 8, !tbaa !234
  %1078 = tail call i32 @putc(i32 noundef %1076, ptr noundef %1077)
  %1079 = load i32, ptr %23, align 8, !tbaa !235
  %1080 = load i32, ptr %24, align 4, !tbaa !236
  %1081 = load i32, ptr %25, align 4, !tbaa !231
  br label %1082

1082:                                             ; preds = %1075, %1070
  %1083 = phi i32 [ %1081, %1075 ], [ %1073, %1070 ]
  %1084 = phi i32 [ %1080, %1075 ], [ %1072, %1070 ]
  %1085 = phi i32 [ %1079, %1075 ], [ %1071, %1070 ]
  %1086 = shl i32 %1085, 8
  store i32 %1086, ptr %23, align 8, !tbaa !235
  %1087 = shl i32 %1084, 8
  %1088 = or i32 %1087, 255
  store i32 %1088, ptr %24, align 4, !tbaa !236
  %1089 = icmp eq i32 %1083, 1
  br i1 %1089, label %1090, label %1099

1090:                                             ; preds = %1082
  %1091 = load i32, ptr %26, align 8, !tbaa !237
  %1092 = shl i32 %1091, 8
  %1093 = load ptr, ptr %9, align 8, !tbaa !234
  %1094 = tail call i32 @getc(ptr noundef %1093)
  %1095 = and i32 %1094, 255
  %1096 = or i32 %1095, %1092
  store i32 %1096, ptr %26, align 8, !tbaa !237
  %1097 = load i32, ptr %23, align 8, !tbaa !235
  %1098 = load i32, ptr %24, align 4, !tbaa !236
  br label %1099

1099:                                             ; preds = %1090, %1082
  %1100 = phi i32 [ %1098, %1090 ], [ %1088, %1082 ]
  %1101 = phi i32 [ %1097, %1090 ], [ %1086, %1082 ]
  %1102 = xor i32 %1101, %1100
  %1103 = icmp ult i32 %1102, 16777216
  br i1 %1103, label %1070, label %1104, !llvm.loop !254

1104:                                             ; preds = %1099, %1065
  %1105 = phi i32 [ %1067, %1065 ], [ %1100, %1099 ]
  %1106 = phi i32 [ %1066, %1065 ], [ %1101, %1099 ]
  %1107 = and i32 %627, 1
  %1108 = load i32, ptr %2, align 8, !tbaa !229
  %1109 = icmp slt i32 %1108, 2048
  %1110 = zext i1 %1109 to i32
  %1111 = add nsw i32 %1108, %1110
  %1112 = sub i32 %1105, %1106
  %1113 = lshr i32 %1112, 12
  %1114 = mul i32 %1113, %1111
  %1115 = add i32 %1114, %1106
  %1116 = and i32 %1112, 4095
  %1117 = mul i32 %1116, %1111
  %1118 = lshr i32 %1117, 12
  %1119 = add i32 %1115, %1118
  %1120 = load i32, ptr %25, align 4, !tbaa !231
  %1121 = icmp eq i32 %1120, 1
  %1122 = load i32, ptr %26, align 8
  %1123 = icmp ule i32 %1122, %1119
  %1124 = zext i1 %1123 to i32
  %1125 = select i1 %1121, i32 %1124, i32 %1107
  store i32 %1125, ptr @y, align 4, !tbaa !25
  %1126 = icmp eq i32 %1125, 0
  br i1 %1126, label %1128, label %1127

1127:                                             ; preds = %1104
  store i32 %1119, ptr %24, align 4, !tbaa !236
  br label %1130

1128:                                             ; preds = %1104
  %1129 = add i32 %1119, 1
  store i32 %1129, ptr %23, align 8, !tbaa !235
  br label %1130

1130:                                             ; preds = %1128, %1127
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %2)
  %1131 = load i32, ptr %23, align 8, !tbaa !235
  %1132 = load i32, ptr %24, align 4, !tbaa !236
  %1133 = xor i32 %1132, %1131
  %1134 = icmp ult i32 %1133, 16777216
  br i1 %1134, label %1135, label %1172

1135:                                             ; preds = %1130, %1164
  %1136 = phi i32 [ %1166, %1164 ], [ %1131, %1130 ]
  %1137 = phi i32 [ %1165, %1164 ], [ %1132, %1130 ]
  %1138 = load i32, ptr %25, align 4, !tbaa !231
  %1139 = icmp eq i32 %1138, 0
  br i1 %1139, label %1140, label %1147

1140:                                             ; preds = %1135
  %1141 = lshr i32 %1137, 24
  %1142 = load ptr, ptr %9, align 8, !tbaa !234
  %1143 = tail call i32 @putc(i32 noundef %1141, ptr noundef %1142)
  %1144 = load i32, ptr %23, align 8, !tbaa !235
  %1145 = load i32, ptr %24, align 4, !tbaa !236
  %1146 = load i32, ptr %25, align 4, !tbaa !231
  br label %1147

1147:                                             ; preds = %1140, %1135
  %1148 = phi i32 [ %1146, %1140 ], [ %1138, %1135 ]
  %1149 = phi i32 [ %1145, %1140 ], [ %1137, %1135 ]
  %1150 = phi i32 [ %1144, %1140 ], [ %1136, %1135 ]
  %1151 = shl i32 %1150, 8
  store i32 %1151, ptr %23, align 8, !tbaa !235
  %1152 = shl i32 %1149, 8
  %1153 = or i32 %1152, 255
  store i32 %1153, ptr %24, align 4, !tbaa !236
  %1154 = icmp eq i32 %1148, 1
  br i1 %1154, label %1155, label %1164

1155:                                             ; preds = %1147
  %1156 = load i32, ptr %26, align 8, !tbaa !237
  %1157 = shl i32 %1156, 8
  %1158 = load ptr, ptr %9, align 8, !tbaa !234
  %1159 = tail call i32 @getc(ptr noundef %1158)
  %1160 = and i32 %1159, 255
  %1161 = or i32 %1160, %1157
  store i32 %1161, ptr %26, align 8, !tbaa !237
  %1162 = load i32, ptr %23, align 8, !tbaa !235
  %1163 = load i32, ptr %24, align 4, !tbaa !236
  br label %1164

1164:                                             ; preds = %1155, %1147
  %1165 = phi i32 [ %1163, %1155 ], [ %1153, %1147 ]
  %1166 = phi i32 [ %1162, %1155 ], [ %1151, %1147 ]
  %1167 = xor i32 %1166, %1165
  %1168 = icmp ult i32 %1167, 16777216
  br i1 %1168, label %1135, label %1172, !llvm.loop !254

1169:                                             ; preds = %639
  %1170 = load ptr, ptr %9, align 8, !tbaa !234
  %1171 = tail call i32 @putc(i32 noundef %627, ptr noundef %1170)
  br label %1172

1172:                                             ; preds = %1164, %1130, %1169
  %1173 = tail call i32 @getc(ptr noundef nonnull %33)
  %1174 = icmp eq i32 %1173, -1
  br i1 %1174, label %1175, label %626, !llvm.loop !256

1175:                                             ; preds = %618, %1172, %61, %621
  %1176 = sub nsw i64 %29, %38
  %1177 = tail call i32 @fclose(ptr noundef nonnull %33)
  %1178 = add i64 %28, %21
  %1179 = icmp sgt i64 %1176, 0
  br i1 %1179, label %27, label %1180, !llvm.loop !257

1180:                                             ; preds = %1175, %8
  %1181 = tail call i32 @fclose(ptr noundef nonnull %4)
  %1182 = load ptr, ptr %9, align 8, !tbaa !234
  %1183 = tail call i64 @ftell(ptr noundef %1182)
  %1184 = sub nsw i64 %1183, %11
  %1185 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.25, i64 noundef %1184)
  ret void
}

; Function Attrs: nofree nounwind
declare noalias noundef ptr @fopen(ptr nocapture noundef readonly, ptr nocapture noundef readonly) local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare void @perror(ptr nocapture noundef readonly) local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare noalias noundef ptr @tmpfile() local_unnamed_addr #18

; Function Attrs: nofree nounwind
declare void @rewind(ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN7Encoder8compressEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %1) local_unnamed_addr #14 comdat align 2 {
  %3 = load i32, ptr @level, align 4, !tbaa !25
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %29, label %5

5:                                                ; preds = %2
  %6 = lshr i32 %1, 7
  %7 = and i32 %6, 1
  %8 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %7)
  %9 = lshr i32 %1, 6
  %10 = and i32 %9, 1
  %11 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %10)
  %12 = lshr i32 %1, 5
  %13 = and i32 %12, 1
  %14 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %13)
  %15 = lshr i32 %1, 4
  %16 = and i32 %15, 1
  %17 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %16)
  %18 = lshr i32 %1, 3
  %19 = and i32 %18, 1
  %20 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %19)
  %21 = lshr i32 %1, 2
  %22 = and i32 %21, 1
  %23 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %22)
  %24 = lshr i32 %1, 1
  %25 = and i32 %24, 1
  %26 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %25)
  %27 = and i32 %1, 1
  %28 = tail call noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %27)
  br label %33

29:                                               ; preds = %2
  %30 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 2
  %31 = load ptr, ptr %30, align 8, !tbaa !234
  %32 = tail call i32 @putc(i32 noundef %1, ptr noundef %31)
  br label %33

33:                                               ; preds = %5, %29
  ret void
}

; Function Attrs: nofree nounwind
declare noundef i32 @fclose(ptr nocapture noundef) local_unnamed_addr #18

; Function Attrs: mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable
define dso_local noundef zeroext i1 @_Z7makedirPKc(ptr nocapture noundef readnone %0) local_unnamed_addr #7 {
  ret i1 false
}

; Function Attrs: uwtable
define dso_local void @_Z10decompressPKclR7Encoder(ptr noundef %0, i64 noundef %1, ptr noundef nonnull align 8 dereferenceable(40) %2) local_unnamed_addr #5 personality ptr @__gxx_personality_v0 {
  %4 = alloca %class.String, align 8
  %5 = tail call noalias ptr @fopen(ptr noundef %0, ptr noundef nonnull @.str.21)
  %6 = icmp eq ptr %5, null
  br i1 %6, label %52, label %7

7:                                                ; preds = %3
  %8 = tail call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %0, i32 noundef 47) #44
  %9 = icmp eq ptr %8, null
  %10 = getelementptr inbounds i8, ptr %8, i64 1
  %11 = select i1 %9, ptr %0, ptr %10
  %12 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.26, ptr noundef %11, i64 noundef %1)
  %13 = icmp sgt i64 %1, 0
  br i1 %13, label %17, label %45

14:                                               ; preds = %41
  %15 = and i8 %42, 1
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %45, label %50

17:                                               ; preds = %7, %41
  %18 = phi i64 [ %43, %41 ], [ 0, %7 ]
  %19 = phi i8 [ %42, %41 ], [ 0, %7 ]
  %20 = icmp ne i64 %18, 0
  %21 = trunc i64 %18 to i32
  %22 = and i32 %21, 4095
  %23 = icmp eq i32 %22, 0
  %24 = and i1 %20, %23
  br i1 %24, label %25, label %29

25:                                               ; preds = %17
  %26 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %21)
  %27 = load ptr, ptr @stdout, align 8, !tbaa !5
  %28 = tail call i32 @fflush(ptr noundef %27)
  br label %29

29:                                               ; preds = %17, %25
  %30 = and i8 %19, 1
  %31 = icmp ne i8 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %29
  %33 = tail call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %2)
  br label %41

34:                                               ; preds = %29
  %35 = tail call i32 @getc(ptr noundef nonnull %5)
  %36 = tail call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %2)
  %37 = icmp eq i32 %35, %36
  %38 = or i1 %31, %37
  br i1 %38, label %41, label %39

39:                                               ; preds = %34
  %40 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.27, i32 noundef %21, i32 noundef %35, i32 noundef %36)
  br label %41

41:                                               ; preds = %32, %34, %39
  %42 = phi i8 [ 1, %39 ], [ %19, %34 ], [ %19, %32 ]
  %43 = add nuw nsw i64 %18, 1
  %44 = icmp eq i64 %43, %1
  br i1 %44, label %14, label %17, !llvm.loop !258

45:                                               ; preds = %7, %14
  %46 = tail call i32 @getc(ptr noundef nonnull %5)
  %47 = icmp eq i32 %46, -1
  %48 = select i1 %47, ptr @str.61, ptr @str.62
  %49 = tail call i32 @puts(ptr nonnull dereferenceable(1) %48)
  br label %50

50:                                               ; preds = %45, %14
  %51 = tail call i32 @fclose(ptr noundef nonnull %5)
  br label %122

52:                                               ; preds = %3
  %53 = tail call noalias ptr @fopen(ptr noundef %0, ptr noundef nonnull @.str.30)
  %54 = icmp eq ptr %53, null
  br i1 %54, label %55, label %79

55:                                               ; preds = %52
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #39
  call void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %4, ptr noundef %0)
  %56 = getelementptr inbounds %class.Array.12, ptr %4, i64 0, i32 3
  br label %57

57:                                               ; preds = %73, %55
  %58 = phi i64 [ %74, %73 ], [ 0, %55 ]
  %59 = load ptr, ptr %56, align 8, !tbaa !259
  %60 = getelementptr inbounds i8, ptr %59, i64 %58
  %61 = load i8, ptr %60, align 1, !tbaa !9
  switch i8 %61, label %73 [
    i8 0, label %62
    i8 47, label %70
    i8 92, label %70
  ]

62:                                               ; preds = %57
  %63 = call noalias ptr @fopen(ptr noundef %0, ptr noundef nonnull @.str.30)
  %64 = load i32, ptr %4, align 8, !tbaa !261
  %65 = load i32, ptr @programChecker, align 8, !tbaa !13
  %66 = sub i32 %65, %64
  store i32 %66, ptr @programChecker, align 8, !tbaa !13
  %67 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %68 = icmp sgt i32 %66, %67
  br i1 %68, label %69, label %75

69:                                               ; preds = %62
  store i32 %66, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %75

70:                                               ; preds = %57, %57
  store i8 0, ptr %60, align 1, !tbaa !9
  %71 = load ptr, ptr %56, align 8, !tbaa !259
  %72 = getelementptr inbounds i8, ptr %71, i64 %58
  store i8 %61, ptr %72, align 1, !tbaa !9
  br label %73

73:                                               ; preds = %57, %70
  %74 = add nuw i64 %58, 1
  br label %57, !llvm.loop !262

75:                                               ; preds = %69, %62
  %76 = getelementptr inbounds %class.Array.12, ptr %4, i64 0, i32 2
  %77 = load ptr, ptr %76, align 8, !tbaa !263
  call void @free(ptr noundef %77) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #39
  %78 = icmp eq ptr %63, null
  br i1 %78, label %102, label %79

79:                                               ; preds = %52, %75
  %80 = phi ptr [ %63, %75 ], [ %53, %52 ]
  %81 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.32, ptr noundef %0, i64 noundef %1)
  %82 = icmp sgt i64 %1, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %97, %79
  %84 = call i32 @fclose(ptr noundef nonnull %80)
  %85 = call i32 @puts(ptr nonnull dereferenceable(1) @str.60)
  br label %122

86:                                               ; preds = %79, %97
  %87 = phi i64 [ %100, %97 ], [ 0, %79 ]
  %88 = icmp ne i64 %87, 0
  %89 = trunc i64 %87 to i32
  %90 = and i32 %89, 4095
  %91 = icmp eq i32 %90, 0
  %92 = and i1 %88, %91
  br i1 %92, label %93, label %97

93:                                               ; preds = %86
  %94 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %89)
  %95 = load ptr, ptr @stdout, align 8, !tbaa !5
  %96 = call i32 @fflush(ptr noundef %95)
  br label %97

97:                                               ; preds = %86, %93
  %98 = call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %2)
  %99 = call i32 @putc(i32 noundef %98, ptr noundef nonnull %80)
  %100 = add nuw nsw i64 %87, 1
  %101 = icmp eq i64 %100, %1
  br i1 %101, label %83, label %86, !llvm.loop !264

102:                                              ; preds = %75
  call void @perror(ptr noundef %0) #45
  %103 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.34, ptr noundef %0, i64 noundef %1)
  %104 = icmp sgt i64 %1, 0
  br i1 %104, label %107, label %105

105:                                              ; preds = %118, %102
  %106 = call i32 @puts(ptr nonnull dereferenceable(1) @str)
  br label %122

107:                                              ; preds = %102, %118
  %108 = phi i64 [ %120, %118 ], [ 0, %102 ]
  %109 = icmp ne i64 %108, 0
  %110 = trunc i64 %108 to i32
  %111 = and i32 %110, 4095
  %112 = icmp eq i32 %111, 0
  %113 = and i1 %109, %112
  br i1 %113, label %114, label %118

114:                                              ; preds = %107
  %115 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.20, i32 noundef %110)
  %116 = load ptr, ptr @stdout, align 8, !tbaa !5
  %117 = call i32 @fflush(ptr noundef %116)
  br label %118

118:                                              ; preds = %107, %114
  %119 = call noundef i32 @_Z6decodeR7Encoder(ptr noundef nonnull align 8 dereferenceable(40) %2)
  %120 = add nuw nsw i64 %108, 1
  %121 = icmp eq i64 %120, %1
  br i1 %121, label %105, label %107, !llvm.loop !265

122:                                              ; preds = %83, %105, %50
  ret void
}

; Function Attrs: uwtable
define linkonce_odr dso_local void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef %1) unnamed_addr #5 comdat align 2 personality ptr @__gxx_personality_v0 {
  %3 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 1
  store i32 1, ptr %3, align 4, !tbaa !266
  store i32 1, ptr %0, align 8, !tbaa !261
  %4 = load i32, ptr @programChecker, align 8, !tbaa !13
  %5 = add nsw i32 %4, 1
  store i32 %5, ptr @programChecker, align 8, !tbaa !13
  %6 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %7 = icmp slt i32 %4, %6
  br i1 %7, label %9, label %8

8:                                                ; preds = %2
  store i32 %5, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %9

9:                                                ; preds = %8, %2
  %10 = tail call noalias dereferenceable_or_null(1) ptr @calloc(i64 noundef 1, i64 noundef 1) #41
  %11 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 2
  store ptr %10, ptr %11, align 8, !tbaa !263
  %12 = icmp eq ptr %10, null
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  %14 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %14, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %14, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

15:                                               ; preds = %9
  %16 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 3
  store ptr %10, ptr %16, align 8, !tbaa !259
  store i32 0, ptr %0, align 8, !tbaa !261
  %17 = load i8, ptr %1, align 1, !tbaa !9
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %46, label %19

19:                                               ; preds = %15, %31
  %20 = phi i8 [ %37, %31 ], [ %17, %15 ]
  %21 = phi ptr [ %22, %31 ], [ %1, %15 ]
  %22 = getelementptr inbounds i8, ptr %21, i64 1
  %23 = load i32, ptr %0, align 8, !tbaa !261
  %24 = load i32, ptr %3, align 4, !tbaa !266
  %25 = icmp eq i32 %23, %24
  br i1 %25, label %26, label %31

26:                                               ; preds = %19
  %27 = shl nsw i32 %23, 1
  %28 = tail call i32 @llvm.smax.i32(i32 %27, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %28)
          to label %29 unwind label %52

29:                                               ; preds = %26
  store i32 %23, ptr %0, align 8, !tbaa !261
  %30 = load i8, ptr %21, align 1, !tbaa !9
  br label %31

31:                                               ; preds = %29, %19
  %32 = phi i8 [ %20, %19 ], [ %30, %29 ]
  %33 = load ptr, ptr %16, align 8, !tbaa !259
  %34 = add nsw i32 %23, 1
  store i32 %34, ptr %0, align 8, !tbaa !261
  %35 = sext i32 %23 to i64
  %36 = getelementptr inbounds i8, ptr %33, i64 %35
  store i8 %32, ptr %36, align 1, !tbaa !9
  %37 = load i8, ptr %22, align 1, !tbaa !9
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %39, label %19, !llvm.loop !267

39:                                               ; preds = %31
  %40 = load i32, ptr %0, align 8, !tbaa !261
  %41 = load i32, ptr %3, align 4, !tbaa !266
  %42 = icmp eq i32 %40, %41
  br i1 %42, label %43, label %46

43:                                               ; preds = %39
  %44 = shl nsw i32 %41, 1
  %45 = tail call i32 @llvm.smax.i32(i32 %44, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %45)
          to label %46 unwind label %54

46:                                               ; preds = %15, %43, %39
  %47 = phi i32 [ %40, %43 ], [ %40, %39 ], [ 0, %15 ]
  %48 = load ptr, ptr %16, align 8, !tbaa !259
  %49 = add nsw i32 %47, 1
  store i32 %49, ptr %0, align 8, !tbaa !261
  %50 = sext i32 %47 to i64
  %51 = getelementptr inbounds i8, ptr %48, i64 %50
  store i8 0, ptr %51, align 1, !tbaa !9
  ret void

52:                                               ; preds = %26
  %53 = landingpad { ptr, i32 }
          cleanup
  br label %56

54:                                               ; preds = %43
  %55 = landingpad { ptr, i32 }
          cleanup
  br label %56

56:                                               ; preds = %54, %52
  %57 = phi { ptr, i32 } [ %53, %52 ], [ %55, %54 ]
  tail call void @_ZN5ArrayIcLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) #39
  resume { ptr, i32 } %57
}

; Function Attrs: nounwind uwtable
define linkonce_odr dso_local void @_ZN5ArrayIcLi0EED2Ev(ptr noundef nonnull align 8 dereferenceable(24) %0) unnamed_addr #6 comdat align 2 {
  %2 = load i32, ptr %0, align 8, !tbaa !261
  %3 = load i32, ptr @programChecker, align 8, !tbaa !13
  %4 = sub i32 %3, %2
  store i32 %4, ptr @programChecker, align 8, !tbaa !13
  %5 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %6 = icmp sgt i32 %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %1
  store i32 %4, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %8

8:                                                ; preds = %1, %7
  %9 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 2
  %10 = load ptr, ptr %9, align 8, !tbaa !263
  tail call void @free(ptr noundef %10) #39
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef ptr @_Z7getlineP8_IO_FILE(ptr nocapture noundef %0) local_unnamed_addr #14 personality ptr @__gxx_personality_v0 {
  %2 = load atomic i8, ptr @_ZGVZ7getlineP8_IO_FILEE1s acquire, align 8
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %4, label %10, !prof !110

4:                                                ; preds = %1
  %5 = tail call i32 @__cxa_guard_acquire(ptr nonnull @_ZGVZ7getlineP8_IO_FILEE1s) #39
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ7getlineP8_IO_FILEE1s, ptr noundef nonnull @.str.36)
          to label %8 unwind label %21

8:                                                ; preds = %7
  %9 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN5ArrayIcLi0EED2Ev, ptr nonnull @_ZZ7getlineP8_IO_FILEE1s, ptr nonnull @__dso_handle) #39
  tail call void @__cxa_guard_release(ptr nonnull @_ZGVZ7getlineP8_IO_FILEE1s) #39
  br label %10

10:                                               ; preds = %8, %4, %1
  br label %11

11:                                               ; preds = %10, %25
  %12 = phi i32 [ 0, %10 ], [ %27, %25 ]
  %13 = shl nuw nsw i32 %12, 1
  %14 = or i32 %13, 1
  br label %15

15:                                               ; preds = %11, %23
  %16 = tail call i32 @getc(ptr noundef %0)
  switch i32 %16, label %17 [
    i32 -1, label %31
    i32 26, label %31
    i32 10, label %31
  ]

17:                                               ; preds = %15
  %18 = load i32, ptr @_ZZ7getlineP8_IO_FILEE1s, align 8, !tbaa !261
  %19 = icmp slt i32 %12, %18
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ7getlineP8_IO_FILEE1s, i32 noundef %14)
  br label %23

21:                                               ; preds = %7
  %22 = landingpad { ptr, i32 }
          cleanup
  tail call void @__cxa_guard_abort(ptr nonnull @_ZGVZ7getlineP8_IO_FILEE1s) #39
  resume { ptr, i32 } %22

23:                                               ; preds = %20, %17
  %24 = icmp eq i32 %16, 13
  br i1 %24, label %15, label %25, !llvm.loop !268

25:                                               ; preds = %23
  %26 = trunc i32 %16 to i8
  %27 = add nuw nsw i32 %12, 1
  %28 = load ptr, ptr getelementptr inbounds (%class.String, ptr @_ZZ7getlineP8_IO_FILEE1s, i64 0, i32 0, i32 3), align 8, !tbaa !259
  %29 = zext i32 %12 to i64
  %30 = getelementptr inbounds i8, ptr %28, i64 %29
  store i8 %26, ptr %30, align 1, !tbaa !9
  br label %11, !llvm.loop !268

31:                                               ; preds = %15, %15, %15
  %32 = load i32, ptr @_ZZ7getlineP8_IO_FILEE1s, align 8, !tbaa !261
  %33 = icmp slt i32 %12, %32
  br i1 %33, label %36, label %34

34:                                               ; preds = %31
  %35 = add nuw nsw i32 %12, 1
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) @_ZZ7getlineP8_IO_FILEE1s, i32 noundef %35)
  br label %36

36:                                               ; preds = %34, %31
  %37 = load ptr, ptr getelementptr inbounds (%class.String, ptr @_ZZ7getlineP8_IO_FILEE1s, i64 0, i32 0, i32 3), align 8, !tbaa !259
  %38 = zext i32 %12 to i64
  %39 = getelementptr inbounds i8, ptr %37, i64 %38
  store i8 0, ptr %39, align 1, !tbaa !9
  switch i32 %16, label %40 [
    i32 -1, label %42
    i32 26, label %42
  ]

40:                                               ; preds = %36
  %41 = load ptr, ptr getelementptr inbounds (%class.String, ptr @_ZZ7getlineP8_IO_FILEE1s, i64 0, i32 0, i32 3), align 8, !tbaa !259
  br label %42

42:                                               ; preds = %36, %36, %40
  %43 = phi ptr [ %41, %40 ], [ null, %36 ], [ null, %36 ]
  ret ptr %43
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 4, !tbaa !266
  %5 = icmp slt i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, ptr %0, align 8, !tbaa !261
  br label %42

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !263
  %10 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !259
  %12 = load i32, ptr %0, align 8, !tbaa !261
  store i32 %1, ptr %3, align 4, !tbaa !266
  store i32 %1, ptr %0, align 8, !tbaa !261
  %13 = icmp slt i32 %1, 1
  br i1 %13, label %14, label %15

14:                                               ; preds = %7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %8, i8 0, i64 16, i1 false)
  br label %28

15:                                               ; preds = %7
  %16 = zext i32 %1 to i64
  %17 = load i32, ptr @programChecker, align 8, !tbaa !13
  %18 = add nsw i32 %17, %1
  store i32 %18, ptr @programChecker, align 8, !tbaa !13
  %19 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %20 = icmp sgt i32 %18, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  store i32 %18, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %22

22:                                               ; preds = %21, %15
  %23 = tail call noalias ptr @calloc(i64 noundef %16, i64 noundef 1) #41
  store ptr %23, ptr %8, align 8, !tbaa !263
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %26, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %26, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

27:                                               ; preds = %22
  store ptr %23, ptr %10, align 8, !tbaa !259
  br label %28

28:                                               ; preds = %14, %27
  %29 = phi ptr [ null, %14 ], [ %23, %27 ]
  %30 = icmp eq ptr %9, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %28
  %32 = icmp eq ptr %11, null
  br i1 %32, label %41, label %33

33:                                               ; preds = %31
  %34 = tail call i32 @llvm.smin.i32(i32 %1, i32 %12)
  %35 = sext i32 %34 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %29, ptr nonnull align 1 %11, i64 %35, i1 false)
  %36 = load i32, ptr @programChecker, align 8, !tbaa !13
  %37 = sub i32 %36, %1
  store i32 %37, ptr @programChecker, align 8, !tbaa !13
  %38 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %39 = icmp sgt i32 %37, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %33
  store i32 %37, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %41

41:                                               ; preds = %40, %33, %31
  tail call void @free(ptr noundef nonnull %9) #39
  br label %42

42:                                               ; preds = %28, %41, %6
  ret void
}

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z7putsizeR6StringS0_PKci(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr nocapture noundef readonly %2, i32 noundef %3) local_unnamed_addr #14 {
  %5 = tail call noalias ptr @fopen(ptr noundef %2, ptr noundef nonnull @.str.21)
  %6 = icmp eq ptr %5, null
  br i1 %6, label %216, label %7

7:                                                ; preds = %4
  %8 = tail call i32 @fseek(ptr noundef nonnull %5, i64 noundef 0, i32 noundef 2)
  %9 = tail call i64 @ftell(ptr noundef nonnull %5)
  %10 = icmp sgt i64 %9, -1
  br i1 %10, label %11, label %213

11:                                               ; preds = %7
  %12 = tail call i32 (ptr, ptr, ...) @sprintf(ptr noundef nonnull dereferenceable(1) @_ZZ7putsizeR6StringS0_PKciE3blk, ptr noundef nonnull dereferenceable(1) @.str.37, i64 noundef %9) #39
  %13 = load i32, ptr %0, align 8, !tbaa !261
  %14 = icmp sgt i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %11
  %16 = add nsw i32 %13, -1
  store i32 %16, ptr %0, align 8, !tbaa !261
  br label %17

17:                                               ; preds = %15, %11
  %18 = phi i32 [ %13, %11 ], [ %16, %15 ]
  %19 = load i8, ptr @_ZZ7putsizeR6StringS0_PKciE3blk, align 16, !tbaa !9
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %45, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 1
  %23 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 3
  br label %24

24:                                               ; preds = %35, %21
  %25 = phi i8 [ %19, %21 ], [ %41, %35 ]
  %26 = phi ptr [ @_ZZ7putsizeR6StringS0_PKciE3blk, %21 ], [ %27, %35 ]
  %27 = getelementptr inbounds i8, ptr %26, i64 1
  %28 = load i32, ptr %0, align 8, !tbaa !261
  %29 = load i32, ptr %22, align 4, !tbaa !266
  %30 = icmp eq i32 %28, %29
  br i1 %30, label %31, label %35

31:                                               ; preds = %24
  %32 = shl nsw i32 %28, 1
  %33 = tail call i32 @llvm.smax.i32(i32 %32, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %33)
  store i32 %28, ptr %0, align 8, !tbaa !261
  %34 = load i8, ptr %26, align 1, !tbaa !9
  br label %35

35:                                               ; preds = %31, %24
  %36 = phi i8 [ %25, %24 ], [ %34, %31 ]
  %37 = load ptr, ptr %23, align 8, !tbaa !259
  %38 = add nsw i32 %28, 1
  store i32 %38, ptr %0, align 8, !tbaa !261
  %39 = sext i32 %28 to i64
  %40 = getelementptr inbounds i8, ptr %37, i64 %39
  store i8 %36, ptr %40, align 1, !tbaa !9
  %41 = load i8, ptr %27, align 1, !tbaa !9
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %24, !llvm.loop !267

43:                                               ; preds = %35
  %44 = load i32, ptr %0, align 8, !tbaa !261
  br label %45

45:                                               ; preds = %43, %17
  %46 = phi i32 [ %44, %43 ], [ %18, %17 ]
  %47 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 1
  %48 = load i32, ptr %47, align 4, !tbaa !266
  %49 = icmp eq i32 %46, %48
  br i1 %49, label %50, label %53

50:                                               ; preds = %45
  %51 = shl nsw i32 %46, 1
  %52 = tail call i32 @llvm.smax.i32(i32 %51, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %52)
  br label %53

53:                                               ; preds = %45, %50
  %54 = getelementptr inbounds %class.Array.12, ptr %0, i64 0, i32 3
  %55 = load ptr, ptr %54, align 8, !tbaa !259
  %56 = add nsw i32 %46, 1
  store i32 %56, ptr %0, align 8, !tbaa !261
  %57 = sext i32 %46 to i64
  %58 = getelementptr inbounds i8, ptr %55, i64 %57
  store i8 0, ptr %58, align 1, !tbaa !9
  %59 = sext i32 %3 to i64
  %60 = getelementptr inbounds i8, ptr %2, i64 %59
  %61 = load i32, ptr %0, align 8, !tbaa !261
  %62 = icmp sgt i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %53
  %64 = add nsw i32 %61, -1
  store i32 %64, ptr %0, align 8, !tbaa !261
  br label %65

65:                                               ; preds = %63, %53
  %66 = phi i32 [ %61, %53 ], [ %64, %63 ]
  %67 = load i8, ptr %60, align 1, !tbaa !9
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %90, label %69

69:                                               ; preds = %65, %80
  %70 = phi i8 [ %86, %80 ], [ %67, %65 ]
  %71 = phi ptr [ %72, %80 ], [ %60, %65 ]
  %72 = getelementptr inbounds i8, ptr %71, i64 1
  %73 = load i32, ptr %0, align 8, !tbaa !261
  %74 = load i32, ptr %47, align 4, !tbaa !266
  %75 = icmp eq i32 %73, %74
  br i1 %75, label %76, label %80

76:                                               ; preds = %69
  %77 = shl nsw i32 %73, 1
  %78 = tail call i32 @llvm.smax.i32(i32 %77, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %78)
  store i32 %73, ptr %0, align 8, !tbaa !261
  %79 = load i8, ptr %71, align 1, !tbaa !9
  br label %80

80:                                               ; preds = %76, %69
  %81 = phi i8 [ %70, %69 ], [ %79, %76 ]
  %82 = load ptr, ptr %54, align 8, !tbaa !259
  %83 = add nsw i32 %73, 1
  store i32 %83, ptr %0, align 8, !tbaa !261
  %84 = sext i32 %73 to i64
  %85 = getelementptr inbounds i8, ptr %82, i64 %84
  store i8 %81, ptr %85, align 1, !tbaa !9
  %86 = load i8, ptr %72, align 1, !tbaa !9
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %69, !llvm.loop !267

88:                                               ; preds = %80
  %89 = load i32, ptr %0, align 8, !tbaa !261
  br label %90

90:                                               ; preds = %88, %65
  %91 = phi i32 [ %89, %88 ], [ %66, %65 ]
  %92 = load i32, ptr %47, align 4, !tbaa !266
  %93 = icmp eq i32 %91, %92
  br i1 %93, label %94, label %97

94:                                               ; preds = %90
  %95 = shl nsw i32 %91, 1
  %96 = tail call i32 @llvm.smax.i32(i32 %95, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %96)
  br label %97

97:                                               ; preds = %90, %94
  %98 = load ptr, ptr %54, align 8, !tbaa !259
  %99 = add nsw i32 %91, 1
  store i32 %99, ptr %0, align 8, !tbaa !261
  %100 = sext i32 %91 to i64
  %101 = getelementptr inbounds i8, ptr %98, i64 %100
  store i8 0, ptr %101, align 1, !tbaa !9
  %102 = load i32, ptr %0, align 8, !tbaa !261
  %103 = icmp sgt i32 %102, 0
  br i1 %103, label %104, label %106

104:                                              ; preds = %97
  %105 = add nsw i32 %102, -1
  store i32 %105, ptr %0, align 8, !tbaa !261
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %102, %97 ]
  %108 = load i32, ptr %47, align 4, !tbaa !266
  %109 = icmp eq i32 %107, %108
  br i1 %109, label %110, label %113

110:                                              ; preds = %106
  %111 = shl nsw i32 %107, 1
  %112 = tail call i32 @llvm.smax.i32(i32 %111, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %112)
  br label %113

113:                                              ; preds = %110, %106
  %114 = load ptr, ptr %54, align 8, !tbaa !259
  %115 = add nsw i32 %107, 1
  store i32 %115, ptr %0, align 8, !tbaa !261
  %116 = sext i32 %107 to i64
  %117 = getelementptr inbounds i8, ptr %114, i64 %116
  store i8 13, ptr %117, align 1, !tbaa !9
  %118 = load i32, ptr %0, align 8, !tbaa !261
  %119 = load i32, ptr %47, align 4, !tbaa !266
  %120 = icmp eq i32 %118, %119
  br i1 %120, label %121, label %124

121:                                              ; preds = %113
  %122 = shl nsw i32 %118, 1
  %123 = tail call i32 @llvm.smax.i32(i32 %122, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %123)
  br label %124

124:                                              ; preds = %121, %113
  %125 = load ptr, ptr %54, align 8, !tbaa !259
  %126 = add nsw i32 %118, 1
  store i32 %126, ptr %0, align 8, !tbaa !261
  %127 = sext i32 %118 to i64
  %128 = getelementptr inbounds i8, ptr %125, i64 %127
  store i8 10, ptr %128, align 1, !tbaa !9
  %129 = load i32, ptr %0, align 8, !tbaa !261
  %130 = load i32, ptr %47, align 4, !tbaa !266
  %131 = icmp eq i32 %129, %130
  br i1 %131, label %132, label %135

132:                                              ; preds = %124
  %133 = shl nsw i32 %129, 1
  %134 = tail call i32 @llvm.smax.i32(i32 %133, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %134)
  br label %135

135:                                              ; preds = %124, %132
  %136 = load ptr, ptr %54, align 8, !tbaa !259
  %137 = add nsw i32 %129, 1
  store i32 %137, ptr %0, align 8, !tbaa !261
  %138 = sext i32 %129 to i64
  %139 = getelementptr inbounds i8, ptr %136, i64 %138
  store i8 0, ptr %139, align 1, !tbaa !9
  %140 = load i32, ptr %1, align 8, !tbaa !261
  %141 = icmp sgt i32 %140, 0
  br i1 %141, label %142, label %144

142:                                              ; preds = %135
  %143 = add nsw i32 %140, -1
  store i32 %143, ptr %1, align 8, !tbaa !261
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %140, %135 ], [ %143, %142 ]
  %146 = load i8, ptr %2, align 1, !tbaa !9
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %172, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %class.Array.12, ptr %1, i64 0, i32 1
  %150 = getelementptr inbounds %class.Array.12, ptr %1, i64 0, i32 3
  br label %151

151:                                              ; preds = %162, %148
  %152 = phi i8 [ %146, %148 ], [ %168, %162 ]
  %153 = phi ptr [ %2, %148 ], [ %154, %162 ]
  %154 = getelementptr inbounds i8, ptr %153, i64 1
  %155 = load i32, ptr %1, align 8, !tbaa !261
  %156 = load i32, ptr %149, align 4, !tbaa !266
  %157 = icmp eq i32 %155, %156
  br i1 %157, label %158, label %162

158:                                              ; preds = %151
  %159 = shl nsw i32 %155, 1
  %160 = tail call i32 @llvm.smax.i32(i32 %159, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %160)
  store i32 %155, ptr %1, align 8, !tbaa !261
  %161 = load i8, ptr %153, align 1, !tbaa !9
  br label %162

162:                                              ; preds = %158, %151
  %163 = phi i8 [ %152, %151 ], [ %161, %158 ]
  %164 = load ptr, ptr %150, align 8, !tbaa !259
  %165 = add nsw i32 %155, 1
  store i32 %165, ptr %1, align 8, !tbaa !261
  %166 = sext i32 %155 to i64
  %167 = getelementptr inbounds i8, ptr %164, i64 %166
  store i8 %163, ptr %167, align 1, !tbaa !9
  %168 = load i8, ptr %154, align 1, !tbaa !9
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %170, label %151, !llvm.loop !267

170:                                              ; preds = %162
  %171 = load i32, ptr %1, align 8, !tbaa !261
  br label %172

172:                                              ; preds = %170, %144
  %173 = phi i32 [ %171, %170 ], [ %145, %144 ]
  %174 = getelementptr inbounds %class.Array.12, ptr %1, i64 0, i32 1
  %175 = load i32, ptr %174, align 4, !tbaa !266
  %176 = icmp eq i32 %173, %175
  br i1 %176, label %177, label %180

177:                                              ; preds = %172
  %178 = shl nsw i32 %173, 1
  %179 = tail call i32 @llvm.smax.i32(i32 %178, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %179)
  br label %180

180:                                              ; preds = %172, %177
  %181 = getelementptr inbounds %class.Array.12, ptr %1, i64 0, i32 3
  %182 = load ptr, ptr %181, align 8, !tbaa !259
  %183 = add nsw i32 %173, 1
  store i32 %183, ptr %1, align 8, !tbaa !261
  %184 = sext i32 %173 to i64
  %185 = getelementptr inbounds i8, ptr %182, i64 %184
  store i8 0, ptr %185, align 1, !tbaa !9
  %186 = load i32, ptr %1, align 8, !tbaa !261
  %187 = icmp sgt i32 %186, 0
  br i1 %187, label %188, label %190

188:                                              ; preds = %180
  %189 = add nsw i32 %186, -1
  store i32 %189, ptr %1, align 8, !tbaa !261
  br label %190

190:                                              ; preds = %188, %180
  %191 = phi i32 [ %189, %188 ], [ %186, %180 ]
  %192 = load i32, ptr %174, align 4, !tbaa !266
  %193 = icmp eq i32 %191, %192
  br i1 %193, label %194, label %197

194:                                              ; preds = %190
  %195 = shl nsw i32 %191, 1
  %196 = tail call i32 @llvm.smax.i32(i32 %195, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %196)
  br label %197

197:                                              ; preds = %194, %190
  %198 = load ptr, ptr %181, align 8, !tbaa !259
  %199 = add nsw i32 %191, 1
  store i32 %199, ptr %1, align 8, !tbaa !261
  %200 = sext i32 %191 to i64
  %201 = getelementptr inbounds i8, ptr %198, i64 %200
  store i8 10, ptr %201, align 1, !tbaa !9
  %202 = load i32, ptr %1, align 8, !tbaa !261
  %203 = load i32, ptr %174, align 4, !tbaa !266
  %204 = icmp eq i32 %202, %203
  br i1 %204, label %205, label %208

205:                                              ; preds = %197
  %206 = shl nsw i32 %202, 1
  %207 = tail call i32 @llvm.smax.i32(i32 %206, i32 1)
  tail call void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %1, i32 noundef %207)
  br label %208

208:                                              ; preds = %197, %205
  %209 = load ptr, ptr %181, align 8, !tbaa !259
  %210 = add nsw i32 %202, 1
  store i32 %210, ptr %1, align 8, !tbaa !261
  %211 = sext i32 %202 to i64
  %212 = getelementptr inbounds i8, ptr %209, i64 %211
  store i8 0, ptr %212, align 1, !tbaa !9
  br label %213

213:                                              ; preds = %208, %7
  %214 = phi i32 [ 1, %208 ], [ 0, %7 ]
  %215 = tail call i32 @fclose(ptr noundef nonnull %5)
  br label %216

216:                                              ; preds = %213, %4
  %217 = phi i32 [ %214, %213 ], [ 0, %4 ]
  ret i32 %217
}

; Function Attrs: nofree nounwind
declare noundef i32 @sprintf(ptr noalias nocapture noundef writeonly, ptr nocapture noundef readonly, ...) local_unnamed_addr #18

; Function Attrs: mustprogress uwtable
define dso_local noundef i32 @_Z6expandR6StringS0_PKci(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr nocapture noundef readonly %2, i32 noundef %3) local_unnamed_addr #14 {
  %5 = tail call noundef i32 @_Z7putsizeR6StringS0_PKci(ptr noundef nonnull align 8 dereferenceable(24) %0, ptr noundef nonnull align 8 dereferenceable(24) %1, ptr noundef %2, i32 noundef %3), !range !269
  ret i32 %5
}

; Function Attrs: uwtable
define dso_local noundef i32 @_Z7paqmainiPPc(i32 noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #5 personality ptr @__gxx_personality_v0 {
  %3 = alloca %class.Array.13, align 8
  %4 = alloca %class.Array.14, align 8
  %5 = alloca %class.String, align 8
  %6 = alloca %class.String, align 8
  %7 = alloca %class.String, align 8
  %8 = alloca %class.String, align 8
  %9 = alloca %class.Encoder, align 8
  %10 = alloca %class.String, align 8
  %11 = alloca %class.String, align 8
  %12 = load ptr, ptr %1, align 8, !tbaa !5
  %13 = tail call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %12, i32 noundef 47) #44
  %14 = icmp eq ptr %13, null
  %15 = getelementptr inbounds i8, ptr %13, i64 1
  %16 = select i1 %14, ptr %12, ptr %15
  %17 = icmp slt i32 %0, 3
  %18 = zext i1 %17 to i8
  %19 = icmp sgt i32 %0, 1
  br i1 %19, label %20, label %50

20:                                               ; preds = %2
  %21 = getelementptr inbounds ptr, ptr %1, i64 1
  %22 = load ptr, ptr %21, align 8, !tbaa !5
  %23 = load i8, ptr %22, align 1, !tbaa !9
  %24 = icmp eq i8 %23, 45
  br i1 %24, label %25, label %55

25:                                               ; preds = %20
  %26 = getelementptr inbounds i8, ptr %22, i64 1
  %27 = load i8, ptr %26, align 1, !tbaa !9
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %55, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds i8, ptr %22, i64 2
  %31 = load i8, ptr %30, align 1, !tbaa !9
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %55

33:                                               ; preds = %29
  %34 = add i8 %27, -58
  %35 = icmp ult i8 %34, -10
  br i1 %35, label %39, label %36

36:                                               ; preds = %33
  %37 = zext i8 %27 to i32
  %38 = add nsw i32 %37, -48
  store i32 %38, ptr @level, align 4, !tbaa !25
  br label %47

39:                                               ; preds = %33
  %40 = icmp eq i8 %27, 100
  br i1 %40, label %47, label %41

41:                                               ; preds = %39
  %42 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.39, ptr %42, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %42, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %43 unwind label %44

43:                                               ; preds = %41
  unreachable

44:                                               ; preds = %50, %41
  %45 = phi i8 [ %18, %41 ], [ %51, %50 ]
  %46 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %990

47:                                               ; preds = %36, %39
  %48 = add nsw i32 %0, -1
  %49 = icmp ult i32 %0, 3
  br i1 %49, label %50, label %55

50:                                               ; preds = %2, %47
  %51 = phi i8 [ 0, %47 ], [ %18, %2 ]
  %52 = tail call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.40, i32 noundef 5)
  %53 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %53, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %53, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %54 unwind label %44

54:                                               ; preds = %50
  unreachable

55:                                               ; preds = %20, %25, %29, %47
  %56 = phi i32 [ %48, %47 ], [ %0, %29 ], [ %0, %25 ], [ %0, %20 ]
  %57 = phi ptr [ %21, %47 ], [ %1, %29 ], [ %1, %25 ], [ %1, %20 ]
  %58 = phi i8 [ 0, %47 ], [ %18, %29 ], [ %18, %25 ], [ %18, %20 ]
  %59 = phi i1 [ %35, %47 ], [ false, %29 ], [ false, %25 ], [ false, %20 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %3) #39
  %60 = getelementptr inbounds %class.Array.13, ptr %3, i64 0, i32 1
  store i32 1, ptr %60, align 4, !tbaa !270
  store i32 1, ptr %3, align 8, !tbaa !272
  %61 = load i32, ptr @programChecker, align 8, !tbaa !13
  %62 = add nsw i32 %61, 8
  store i32 %62, ptr @programChecker, align 8, !tbaa !13
  %63 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %64 = icmp sgt i32 %62, %63
  br i1 %64, label %65, label %66

65:                                               ; preds = %55
  store i32 %62, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %66

66:                                               ; preds = %65, %55
  %67 = phi i32 [ %62, %65 ], [ %63, %55 ]
  %68 = tail call noalias dereferenceable_or_null(8) ptr @calloc(i64 noundef 8, i64 noundef 1) #41
  %69 = getelementptr inbounds %class.Array.13, ptr %3, i64 0, i32 2
  store ptr %68, ptr %69, align 8, !tbaa !273
  %70 = icmp eq ptr %68, null
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %72, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %72, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %73 unwind label %147

73:                                               ; preds = %71
  unreachable

74:                                               ; preds = %66
  %75 = getelementptr inbounds %class.Array.13, ptr %3, i64 0, i32 3
  store ptr %68, ptr %75, align 8, !tbaa !274
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #39
  %76 = getelementptr inbounds %class.Array.14, ptr %4, i64 0, i32 1
  store i32 1, ptr %76, align 4, !tbaa !275
  store i32 1, ptr %4, align 8, !tbaa !277
  %77 = add nsw i32 %61, 16
  store i32 %77, ptr @programChecker, align 8, !tbaa !13
  %78 = icmp sgt i32 %77, %67
  br i1 %78, label %79, label %80

79:                                               ; preds = %74
  store i32 %77, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %80

80:                                               ; preds = %79, %74
  %81 = tail call noalias dereferenceable_or_null(8) ptr @calloc(i64 noundef 8, i64 noundef 1) #41
  %82 = getelementptr inbounds %class.Array.14, ptr %4, i64 0, i32 2
  store ptr %81, ptr %82, align 8, !tbaa !278
  %83 = icmp eq ptr %81, null
  br i1 %83, label %84, label %87

84:                                               ; preds = %80
  %85 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %85, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %85, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %86 unwind label %149

86:                                               ; preds = %84
  unreachable

87:                                               ; preds = %80
  %88 = getelementptr inbounds %class.Array.14, ptr %4, i64 0, i32 3
  store ptr %81, ptr %88, align 8, !tbaa !279
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #39
  %89 = getelementptr inbounds ptr, ptr %57, i64 1
  %90 = load ptr, ptr %89, align 8, !tbaa !5
  %91 = tail call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %90, i32 noundef 47) #44
  %92 = icmp eq ptr %91, null
  %93 = getelementptr inbounds i8, ptr %91, i64 1
  %94 = select i1 %92, ptr %90, ptr %93
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %94)
          to label %95 unwind label %151

95:                                               ; preds = %87
  %96 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %16) #44
  %97 = trunc i64 %96 to i32
  %98 = load ptr, ptr %89, align 8, !tbaa !5
  %99 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %98) #44
  %100 = trunc i64 %99 to i32
  %101 = add nsw i32 %97, 1
  %102 = icmp slt i32 %101, %100
  br i1 %102, label %103, label %153

103:                                              ; preds = %95
  %104 = xor i64 %96, -1
  %105 = add i64 %99, %104
  %106 = shl i64 %105, 32
  %107 = ashr exact i64 %106, 32
  %108 = getelementptr inbounds i8, ptr %98, i64 %107
  %109 = load i8, ptr %108, align 1, !tbaa !9
  %110 = icmp eq i8 %109, 46
  br i1 %110, label %111, label %153

111:                                              ; preds = %103
  %112 = shl i64 %99, 32
  %113 = ashr exact i64 %112, 32
  %114 = getelementptr inbounds i8, ptr %98, i64 %113
  %115 = shl i64 %96, 32
  %116 = ashr exact i64 %115, 32
  %117 = sub nsw i64 0, %116
  %118 = getelementptr inbounds i8, ptr %114, i64 %117
  br label %119

119:                                              ; preds = %127, %111
  %120 = phi ptr [ %16, %111 ], [ %139, %127 ]
  %121 = phi ptr [ %118, %111 ], [ %140, %127 ]
  %122 = load i8, ptr %120, align 1, !tbaa !9
  %123 = icmp eq i8 %122, 0
  %124 = load i8, ptr %121, align 1, !tbaa !9
  br i1 %123, label %141, label %125

125:                                              ; preds = %119
  %126 = icmp eq i8 %124, 0
  br i1 %126, label %141, label %127

127:                                              ; preds = %125
  %128 = sext i8 %122 to i32
  %129 = add i8 %122, -65
  %130 = icmp ult i8 %129, 26
  %131 = add nuw nsw i32 %128, 32
  %132 = select i1 %130, i32 %131, i32 %128
  %133 = sext i8 %124 to i32
  %134 = add i8 %124, -65
  %135 = icmp ult i8 %134, 26
  %136 = add nuw nsw i32 %133, 32
  %137 = select i1 %135, i32 %136, i32 %133
  %138 = icmp eq i32 %132, %137
  %139 = getelementptr inbounds i8, ptr %120, i64 1
  %140 = getelementptr inbounds i8, ptr %121, i64 1
  br i1 %138, label %119, label %144

141:                                              ; preds = %125, %119
  %142 = phi i8 [ %124, %119 ], [ 0, %125 ]
  %143 = icmp eq i8 %122, %142
  br label %144

144:                                              ; preds = %127, %141
  %145 = phi i1 [ %143, %141 ], [ false, %127 ]
  %146 = or i1 %59, %145
  br i1 %146, label %232, label %154

147:                                              ; preds = %71
  %148 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %988

149:                                              ; preds = %84
  %150 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %977

151:                                              ; preds = %87
  %152 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %966

153:                                              ; preds = %103, %95
  br i1 %59, label %232, label %154

154:                                              ; preds = %144, %153
  %155 = load i32, ptr %5, align 8, !tbaa !261
  %156 = icmp sgt i32 %155, 0
  br i1 %156, label %157, label %159

157:                                              ; preds = %154
  %158 = add nsw i32 %155, -1
  store i32 %158, ptr %5, align 8, !tbaa !261
  br label %159

159:                                              ; preds = %157, %154
  %160 = phi i32 [ %158, %157 ], [ %155, %154 ]
  %161 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 1
  %162 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 3
  %163 = load i32, ptr %161, align 4, !tbaa !266
  %164 = icmp eq i32 %160, %163
  br i1 %164, label %165, label %168

165:                                              ; preds = %159
  %166 = shl nsw i32 %160, 1
  %167 = call i32 @llvm.smax.i32(i32 %166, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %167)
          to label %168 unwind label %228

168:                                              ; preds = %165, %159
  %169 = load ptr, ptr %162, align 8, !tbaa !259
  %170 = add nsw i32 %160, 1
  store i32 %170, ptr %5, align 8, !tbaa !261
  %171 = sext i32 %160 to i64
  %172 = getelementptr inbounds i8, ptr %169, i64 %171
  store i8 46, ptr %172, align 1, !tbaa !9
  %173 = load i32, ptr %5, align 8, !tbaa !261
  %174 = load i32, ptr %161, align 4, !tbaa !266
  %175 = icmp eq i32 %173, %174
  br i1 %175, label %176, label %179

176:                                              ; preds = %168
  %177 = shl nsw i32 %173, 1
  %178 = call i32 @llvm.smax.i32(i32 %177, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %178)
          to label %179 unwind label %230

179:                                              ; preds = %176, %168
  %180 = load ptr, ptr %162, align 8, !tbaa !259
  %181 = add nsw i32 %173, 1
  store i32 %181, ptr %5, align 8, !tbaa !261
  %182 = sext i32 %173 to i64
  %183 = getelementptr inbounds i8, ptr %180, i64 %182
  store i8 0, ptr %183, align 1, !tbaa !9
  %184 = load i32, ptr %5, align 8, !tbaa !261
  %185 = icmp sgt i32 %184, 0
  br i1 %185, label %186, label %188

186:                                              ; preds = %179
  %187 = add nsw i32 %184, -1
  store i32 %187, ptr %5, align 8, !tbaa !261
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %184, %179 ], [ %187, %186 ]
  %190 = load i8, ptr %16, align 1, !tbaa !9
  %191 = icmp eq i8 %190, 0
  br i1 %191, label %214, label %192

192:                                              ; preds = %188, %204
  %193 = phi i8 [ %210, %204 ], [ %190, %188 ]
  %194 = phi ptr [ %195, %204 ], [ %16, %188 ]
  %195 = getelementptr inbounds i8, ptr %194, i64 1
  %196 = load i32, ptr %5, align 8, !tbaa !261
  %197 = load i32, ptr %161, align 4, !tbaa !266
  %198 = icmp eq i32 %196, %197
  br i1 %198, label %199, label %204

199:                                              ; preds = %192
  %200 = shl nsw i32 %196, 1
  %201 = call i32 @llvm.smax.i32(i32 %200, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %201)
          to label %202 unwind label %226

202:                                              ; preds = %199
  %203 = load i8, ptr %194, align 1, !tbaa !9
  br label %204

204:                                              ; preds = %202, %192
  %205 = phi i8 [ %193, %192 ], [ %203, %202 ]
  %206 = load ptr, ptr %162, align 8, !tbaa !259
  %207 = add nsw i32 %196, 1
  store i32 %207, ptr %5, align 8, !tbaa !261
  %208 = sext i32 %196 to i64
  %209 = getelementptr inbounds i8, ptr %206, i64 %208
  store i8 %205, ptr %209, align 1, !tbaa !9
  %210 = load i8, ptr %195, align 1, !tbaa !9
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %212, label %192, !llvm.loop !267

212:                                              ; preds = %204
  %213 = load i32, ptr %5, align 8, !tbaa !261
  br label %214

214:                                              ; preds = %212, %188
  %215 = phi i32 [ %213, %212 ], [ %189, %188 ]
  %216 = load i32, ptr %161, align 4, !tbaa !266
  %217 = icmp eq i32 %215, %216
  br i1 %217, label %218, label %221

218:                                              ; preds = %214
  %219 = shl nsw i32 %215, 1
  %220 = call i32 @llvm.smax.i32(i32 %219, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %220)
          to label %221 unwind label %230

221:                                              ; preds = %218, %214
  %222 = load ptr, ptr %162, align 8, !tbaa !259
  %223 = add nsw i32 %215, 1
  store i32 %223, ptr %5, align 8, !tbaa !261
  %224 = sext i32 %215 to i64
  %225 = getelementptr inbounds i8, ptr %222, i64 %224
  store i8 0, ptr %225, align 1, !tbaa !9
  br label %232

226:                                              ; preds = %199
  %227 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %955

228:                                              ; preds = %165
  %229 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %955

230:                                              ; preds = %218, %176
  %231 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %955

232:                                              ; preds = %144, %153, %221
  %233 = phi i1 [ true, %221 ], [ false, %144 ], [ false, %153 ]
  %234 = phi i1 [ false, %221 ], [ true, %144 ], [ true, %153 ]
  %235 = phi i32 [ 0, %221 ], [ 1, %144 ], [ 1, %153 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %6) #39
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef nonnull @.str.36)
          to label %236 unwind label %273

236:                                              ; preds = %232
  br i1 %233, label %237, label %446

237:                                              ; preds = %236
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %7) #39
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull @.str.36)
          to label %238 unwind label %275

238:                                              ; preds = %237
  %239 = icmp sgt i32 %56, 1
  br i1 %239, label %240, label %372

240:                                              ; preds = %238
  %241 = getelementptr inbounds %class.Array.12, ptr %8, i64 0, i32 3
  %242 = icmp eq i32 %56, 2
  %243 = getelementptr inbounds %class.Array.12, ptr %8, i64 0, i32 2
  %244 = zext i32 %56 to i64
  br label %245

245:                                              ; preds = %240, %364
  %246 = phi i64 [ 1, %240 ], [ %366, %364 ]
  %247 = phi i32 [ 0, %240 ], [ %357, %364 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %8) #39
  %248 = getelementptr inbounds ptr, ptr %57, i64 %246
  %249 = load ptr, ptr %248, align 8, !tbaa !5
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %8, ptr noundef %249)
          to label %250 unwind label %277

250:                                              ; preds = %245
  %251 = load i32, ptr %8, align 8, !tbaa !261
  %252 = add i32 %251, -1
  %253 = icmp sgt i32 %251, 0
  br i1 %253, label %254, label %310

254:                                              ; preds = %250
  %255 = zext i32 %251 to i64
  %256 = and i64 %255, 1
  %257 = icmp eq i32 %251, 1
  br i1 %257, label %260, label %258

258:                                              ; preds = %254
  %259 = and i64 %255, 4294967294
  br label %279

260:                                              ; preds = %294, %254
  %261 = phi i64 [ 0, %254 ], [ %295, %294 ]
  %262 = icmp eq i64 %256, 0
  br i1 %262, label %269, label %263

263:                                              ; preds = %260
  %264 = load ptr, ptr %241, align 8, !tbaa !259
  %265 = getelementptr inbounds i8, ptr %264, i64 %261
  %266 = load i8, ptr %265, align 1, !tbaa !9
  %267 = icmp eq i8 %266, 92
  br i1 %267, label %268, label %269

268:                                              ; preds = %263
  store i8 47, ptr %265, align 1, !tbaa !9
  br label %269

269:                                              ; preds = %263, %268, %260
  %270 = icmp sgt i32 %251, 1
  br i1 %270, label %271, label %310

271:                                              ; preds = %269
  %272 = zext i32 %252 to i64
  br label %298

273:                                              ; preds = %232
  %274 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %953

275:                                              ; preds = %237
  %276 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %444

277:                                              ; preds = %245
  %278 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %368

279:                                              ; preds = %294, %258
  %280 = phi i64 [ 0, %258 ], [ %295, %294 ]
  %281 = phi i64 [ 0, %258 ], [ %296, %294 ]
  %282 = load ptr, ptr %241, align 8, !tbaa !259
  %283 = getelementptr inbounds i8, ptr %282, i64 %280
  %284 = load i8, ptr %283, align 1, !tbaa !9
  %285 = icmp eq i8 %284, 92
  br i1 %285, label %286, label %287

286:                                              ; preds = %279
  store i8 47, ptr %283, align 1, !tbaa !9
  br label %287

287:                                              ; preds = %279, %286
  %288 = or i64 %280, 1
  %289 = load ptr, ptr %241, align 8, !tbaa !259
  %290 = getelementptr inbounds i8, ptr %289, i64 %288
  %291 = load i8, ptr %290, align 1, !tbaa !9
  %292 = icmp eq i8 %291, 92
  br i1 %292, label %293, label %294

293:                                              ; preds = %287
  store i8 47, ptr %290, align 1, !tbaa !9
  br label %294

294:                                              ; preds = %293, %287
  %295 = add nuw nsw i64 %280, 2
  %296 = add i64 %281, 2
  %297 = icmp eq i64 %296, %259
  br i1 %297, label %260, label %279, !llvm.loop !280

298:                                              ; preds = %271, %306
  %299 = phi i64 [ %272, %271 ], [ %300, %306 ]
  %300 = add nsw i64 %299, -1
  %301 = load ptr, ptr %241, align 8, !tbaa !259
  %302 = and i64 %300, 4294967295
  %303 = getelementptr inbounds i8, ptr %301, i64 %302
  %304 = load i8, ptr %303, align 1, !tbaa !9
  %305 = icmp eq i8 %304, 47
  br i1 %305, label %306, label %308

306:                                              ; preds = %298
  store i8 0, ptr %303, align 1, !tbaa !9
  %307 = icmp ugt i64 %299, 1
  br i1 %307, label %298, label %310, !llvm.loop !281

308:                                              ; preds = %298
  %309 = trunc i64 %299 to i32
  br label %310

310:                                              ; preds = %306, %308, %250, %269
  %311 = phi i32 [ %252, %269 ], [ %252, %250 ], [ %309, %308 ], [ 0, %306 ]
  %312 = load ptr, ptr %241, align 8
  %313 = zext i32 %311 to i64
  br label %314

314:                                              ; preds = %318, %310
  %315 = phi i64 [ %319, %318 ], [ %313, %310 ]
  %316 = trunc i64 %315 to i32
  %317 = icmp sgt i32 %316, 0
  br i1 %317, label %318, label %323

318:                                              ; preds = %314
  %319 = add nsw i64 %315, -1
  %320 = getelementptr inbounds i8, ptr %312, i64 %319
  %321 = load i8, ptr %320, align 1, !tbaa !9
  %322 = icmp eq i8 %321, 47
  br i1 %322, label %333, label %314, !llvm.loop !282

323:                                              ; preds = %314
  %324 = trunc i64 %315 to i32
  %325 = icmp eq i32 %324, 0
  %326 = icmp sgt i32 %311, 1
  %327 = select i1 %325, i1 %326, i1 false
  br i1 %327, label %328, label %335

328:                                              ; preds = %323
  %329 = getelementptr inbounds i8, ptr %312, i64 1
  %330 = load i8, ptr %329, align 1, !tbaa !9
  %331 = icmp eq i8 %330, 58
  %332 = select i1 %331, i32 2, i32 0
  br label %335

333:                                              ; preds = %318
  %334 = trunc i64 %315 to i32
  br label %335

335:                                              ; preds = %333, %328, %323
  %336 = phi i32 [ %324, %323 ], [ %332, %328 ], [ %334, %333 ]
  %337 = invoke noundef i32 @_Z7putsizeR6StringS0_PKci(ptr noundef nonnull align 8 dereferenceable(24) %7, ptr noundef nonnull align 8 dereferenceable(24) %6, ptr noundef %312, i32 noundef %336)
          to label %338 unwind label %346

338:                                              ; preds = %335
  %339 = icmp eq i32 %337, 0
  %340 = icmp ugt i64 %246, 1
  %341 = select i1 %340, i1 true, i1 %242
  %342 = select i1 %339, i1 %341, i1 false
  br i1 %342, label %343, label %356

343:                                              ; preds = %338
  %344 = load ptr, ptr %241, align 8, !tbaa !259
  %345 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.42, ptr noundef %344)
  br label %356

346:                                              ; preds = %335
  %347 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  %348 = load i32, ptr %8, align 8, !tbaa !261
  %349 = load i32, ptr @programChecker, align 8, !tbaa !13
  %350 = sub i32 %349, %348
  store i32 %350, ptr @programChecker, align 8, !tbaa !13
  %351 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %352 = icmp sgt i32 %350, %351
  br i1 %352, label %353, label %354

353:                                              ; preds = %346
  store i32 %350, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %354

354:                                              ; preds = %346, %353
  %355 = load ptr, ptr %243, align 8, !tbaa !263
  call void @free(ptr noundef %355) #39
  br label %368

356:                                              ; preds = %343, %338
  %357 = add nsw i32 %337, %247
  %358 = load i32, ptr %8, align 8, !tbaa !261
  %359 = load i32, ptr @programChecker, align 8, !tbaa !13
  %360 = sub i32 %359, %358
  store i32 %360, ptr @programChecker, align 8, !tbaa !13
  %361 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %362 = icmp sgt i32 %360, %361
  br i1 %362, label %363, label %364

363:                                              ; preds = %356
  store i32 %360, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %364

364:                                              ; preds = %356, %363
  %365 = load ptr, ptr %243, align 8, !tbaa !263
  call void @free(ptr noundef %365) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #39
  %366 = add nuw nsw i64 %246, 1
  %367 = icmp eq i64 %366, %244
  br i1 %367, label %370, label %245, !llvm.loop !283

368:                                              ; preds = %354, %277
  %369 = phi { ptr, i32 } [ %347, %354 ], [ %278, %277 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %8) #39
  br label %433

370:                                              ; preds = %364
  %371 = icmp slt i32 %357, 1
  br i1 %371, label %372, label %376

372:                                              ; preds = %238, %370
  %373 = call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.43, ptr %373, align 16, !tbaa !5
  br label %384

374:                                              ; preds = %384, %393, %387
  %375 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %433

376:                                              ; preds = %370
  %377 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 3
  %378 = load ptr, ptr %377, align 8, !tbaa !259
  %379 = call noalias ptr @fopen(ptr noundef %378, ptr noundef nonnull @.str.44)
  %380 = icmp eq ptr %379, null
  br i1 %380, label %381, label %387

381:                                              ; preds = %376
  %382 = load ptr, ptr %377, align 8, !tbaa !259
  call void @perror(ptr noundef %382) #45
  %383 = call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %383, align 16, !tbaa !5
  br label %384

384:                                              ; preds = %372, %381
  %385 = phi ptr [ %383, %381 ], [ %373, %372 ]
  invoke void @__cxa_throw(ptr nonnull %385, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %386 unwind label %374

386:                                              ; preds = %384
  unreachable

387:                                              ; preds = %376
  %388 = getelementptr inbounds %class.Array.12, ptr %7, i64 0, i32 3
  %389 = load ptr, ptr %388, align 8, !tbaa !259
  %390 = load i32, ptr @level, align 4, !tbaa !25
  %391 = call i32 (ptr, ptr, ...) @fprintf(ptr noundef nonnull %379, ptr noundef nonnull @.str.45, i32 noundef %390, ptr noundef %389)
  %392 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.46, i32 noundef %357)
  invoke void @_ZN5ArrayIPcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %3, i32 noundef %357)
          to label %393 unwind label %374

393:                                              ; preds = %387
  invoke void @_ZN5ArrayIlLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %4, i32 noundef %357)
          to label %394 unwind label %374

394:                                              ; preds = %393
  %395 = getelementptr inbounds %class.Array.12, ptr %6, i64 0, i32 3
  %396 = load ptr, ptr %395, align 8, !tbaa !259
  call void @rewind(ptr noundef nonnull %379)
  %397 = invoke noundef ptr @_Z7getlineP8_IO_FILE(ptr noundef nonnull %379)
          to label %398 unwind label %415

398:                                              ; preds = %394
  %399 = zext i32 %357 to i64
  br label %400

400:                                              ; preds = %398, %419
  %401 = phi i64 [ 0, %398 ], [ %420, %419 ]
  %402 = phi ptr [ %396, %398 ], [ %414, %419 ]
  %403 = invoke noundef ptr @_Z7getlineP8_IO_FILE(ptr noundef nonnull %379)
          to label %404 unwind label %417

404:                                              ; preds = %400
  %405 = call i64 @strtol(ptr nocapture noundef nonnull %403, ptr noundef null, i32 noundef 10) #39
  %406 = load ptr, ptr %88, align 8, !tbaa !279
  %407 = getelementptr inbounds i64, ptr %406, i64 %401
  store i64 %405, ptr %407, align 8, !tbaa !284
  %408 = load ptr, ptr %75, align 8, !tbaa !274
  %409 = getelementptr inbounds ptr, ptr %408, i64 %401
  store ptr %402, ptr %409, align 8, !tbaa !5
  br label %410

410:                                              ; preds = %410, %404
  %411 = phi ptr [ %402, %404 ], [ %414, %410 ]
  %412 = load i8, ptr %411, align 1, !tbaa !9
  %413 = icmp eq i8 %412, 10
  %414 = getelementptr inbounds i8, ptr %411, i64 1
  br i1 %413, label %419, label %410, !llvm.loop !285

415:                                              ; preds = %394
  %416 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %433

417:                                              ; preds = %400
  %418 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %433

419:                                              ; preds = %410
  store i8 0, ptr %411, align 1, !tbaa !9
  %420 = add nuw nsw i64 %401, 1
  %421 = icmp eq i64 %420, %399
  br i1 %421, label %422, label %400, !llvm.loop !286

422:                                              ; preds = %419
  %423 = call i32 @fseek(ptr noundef nonnull %379, i64 noundef 0, i32 noundef 2)
  %424 = load i32, ptr %7, align 8, !tbaa !261
  %425 = load i32, ptr @programChecker, align 8, !tbaa !13
  %426 = sub i32 %425, %424
  store i32 %426, ptr @programChecker, align 8, !tbaa !13
  %427 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %428 = icmp sgt i32 %426, %427
  br i1 %428, label %429, label %430

429:                                              ; preds = %422
  store i32 %426, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %430

430:                                              ; preds = %422, %429
  %431 = getelementptr inbounds %class.Array.12, ptr %7, i64 0, i32 2
  %432 = load ptr, ptr %431, align 8, !tbaa !263
  call void @free(ptr noundef %432) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #39
  br label %446

433:                                              ; preds = %415, %417, %374, %368
  %434 = phi { ptr, i32 } [ %369, %368 ], [ %375, %374 ], [ %418, %417 ], [ %416, %415 ]
  %435 = load i32, ptr %7, align 8, !tbaa !261
  %436 = load i32, ptr @programChecker, align 8, !tbaa !13
  %437 = sub i32 %436, %435
  store i32 %437, ptr @programChecker, align 8, !tbaa !13
  %438 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %439 = icmp sgt i32 %437, %438
  br i1 %439, label %440, label %441

440:                                              ; preds = %433
  store i32 %437, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %441

441:                                              ; preds = %433, %440
  %442 = getelementptr inbounds %class.Array.12, ptr %7, i64 0, i32 2
  %443 = load ptr, ptr %442, align 8, !tbaa !263
  call void @free(ptr noundef %443) #39
  br label %444

444:                                              ; preds = %441, %275
  %445 = phi { ptr, i32 } [ %434, %441 ], [ %276, %275 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %7) #39
  br label %942

446:                                              ; preds = %430, %236
  %447 = phi i32 [ %357, %430 ], [ 0, %236 ]
  %448 = phi ptr [ %379, %430 ], [ null, %236 ]
  br i1 %234, label %449, label %547

449:                                              ; preds = %446
  %450 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 3
  %451 = load ptr, ptr %450, align 8, !tbaa !259
  %452 = call noalias ptr @fopen(ptr noundef %451, ptr noundef nonnull @.str.47)
  %453 = icmp eq ptr %452, null
  br i1 %453, label %454, label %460

454:                                              ; preds = %449
  %455 = load ptr, ptr %450, align 8, !tbaa !259
  call void @perror(ptr noundef %455) #45
  %456 = call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %456, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %456, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %457 unwind label %458

457:                                              ; preds = %454
  unreachable

458:                                              ; preds = %552, %454
  %459 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %942

460:                                              ; preds = %449
  %461 = invoke noundef ptr @_Z7getlineP8_IO_FILE(ptr noundef nonnull %452)
          to label %462 unwind label %472

462:                                              ; preds = %460
  %463 = call i32 @strncmp(ptr noundef nonnull dereferenceable(1) %461, ptr noundef nonnull dereferenceable(8) @.str.48, i64 noundef 7) #44
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %474, label %465

465:                                              ; preds = %462
  %466 = load ptr, ptr %450, align 8, !tbaa !259
  %467 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.49, ptr noundef %466, ptr noundef nonnull @.str.50)
  %468 = call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %468, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %468, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %469 unwind label %472

469:                                              ; preds = %465
  unreachable

470:                                              ; preds = %482
  %471 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %942

472:                                              ; preds = %460, %465
  %473 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %942

474:                                              ; preds = %462
  %475 = getelementptr inbounds i8, ptr %461, i64 7
  %476 = load i8, ptr %475, align 1, !tbaa !9
  %477 = zext i8 %476 to i32
  %478 = add nsw i32 %477, -48
  %479 = add i8 %476, -58
  %480 = icmp ult i8 %479, -10
  %481 = select i1 %480, i32 5, i32 %478
  store i32 %481, ptr @level, align 4
  br label %482

482:                                              ; preds = %487, %474
  %483 = phi i32 [ %447, %474 ], [ %488, %487 ]
  %484 = invoke noundef ptr @_Z7getlineP8_IO_FILE(ptr noundef nonnull %452)
          to label %485 unwind label %470

485:                                              ; preds = %482
  %486 = icmp eq ptr %484, null
  br i1 %486, label %489, label %487

487:                                              ; preds = %485
  %488 = add nsw i32 %483, 1
  br label %482, !llvm.loop !287

489:                                              ; preds = %485
  %490 = load i32, ptr @level, align 4, !tbaa !25
  %491 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.51, i32 noundef %483, i32 noundef %490)
  %492 = call i64 @ftell(ptr noundef nonnull %452)
  %493 = trunc i64 %492 to i32
  %494 = add i32 %493, 4
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %6, i32 noundef %494)
          to label %495 unwind label %507

495:                                              ; preds = %489
  call void @rewind(ptr noundef nonnull %452)
  %496 = getelementptr inbounds %class.Array.12, ptr %6, i64 0, i32 3
  %497 = load ptr, ptr %496, align 8, !tbaa !259
  %498 = call i64 @fread(ptr noundef %497, i64 noundef 1, i64 noundef %492, ptr noundef nonnull %452)
  invoke void @_ZN5ArrayIPcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %3, i32 noundef %483)
          to label %499 unwind label %507

499:                                              ; preds = %495
  invoke void @_ZN5ArrayIlLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %4, i32 noundef %483)
          to label %500 unwind label %507

500:                                              ; preds = %499
  %501 = load ptr, ptr %496, align 8, !tbaa !259
  br label %502

502:                                              ; preds = %505, %500
  %503 = phi ptr [ %501, %500 ], [ %506, %505 ]
  %504 = load i8, ptr %503, align 1, !tbaa !9
  switch i8 %504, label %505 [
    i8 0, label %509
    i8 13, label %509
  ]

505:                                              ; preds = %502
  %506 = getelementptr inbounds i8, ptr %503, i64 1
  br label %502, !llvm.loop !288

507:                                              ; preds = %499, %495, %489
  %508 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %942

509:                                              ; preds = %502, %502
  %510 = icmp sgt i32 %483, 0
  br i1 %510, label %511, label %547

511:                                              ; preds = %509
  %512 = zext i32 %483 to i64
  br label %513

513:                                              ; preds = %511, %544
  %514 = phi i64 [ 0, %511 ], [ %545, %544 ]
  %515 = phi ptr [ %503, %511 ], [ %531, %544 ]
  %516 = getelementptr inbounds i8, ptr %515, i64 2
  %517 = call i64 @strtol(ptr nocapture noundef nonnull %516, ptr noundef null, i32 noundef 10) #39
  %518 = load ptr, ptr %88, align 8, !tbaa !279
  %519 = getelementptr inbounds i64, ptr %518, i64 %514
  store i64 %517, ptr %519, align 8, !tbaa !284
  br label %520

520:                                              ; preds = %520, %513
  %521 = phi ptr [ %515, %513 ], [ %522, %520 ]
  %522 = getelementptr inbounds i8, ptr %521, i64 1
  %523 = load i8, ptr %522, align 1, !tbaa !9
  switch i8 %523, label %520 [
    i8 0, label %526
    i8 9, label %526
  ], !llvm.loop !289

524:                                              ; preds = %535
  %525 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %942

526:                                              ; preds = %520, %520
  %527 = getelementptr inbounds i8, ptr %521, i64 2
  %528 = load ptr, ptr %75, align 8, !tbaa !274
  %529 = getelementptr inbounds ptr, ptr %528, i64 %514
  store ptr %527, ptr %529, align 8, !tbaa !5
  br label %530

530:                                              ; preds = %533, %526
  %531 = phi ptr [ %522, %526 ], [ %534, %533 ]
  %532 = load i8, ptr %531, align 1, !tbaa !9
  switch i8 %532, label %533 [
    i8 0, label %535
    i8 13, label %544
  ]

533:                                              ; preds = %530
  %534 = getelementptr inbounds i8, ptr %531, i64 1
  br label %530, !llvm.loop !290

535:                                              ; preds = %530
  %536 = load ptr, ptr %450, align 8, !tbaa !259
  %537 = load ptr, ptr %496, align 8, !tbaa !259
  %538 = ptrtoint ptr %531 to i64
  %539 = ptrtoint ptr %537 to i64
  %540 = sub i64 %538, %539
  %541 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.52, ptr noundef %536, i64 noundef %540)
  %542 = call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr null, ptr %542, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %542, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %543 unwind label %524

543:                                              ; preds = %535
  unreachable

544:                                              ; preds = %530
  store i8 0, ptr %531, align 1, !tbaa !9
  %545 = add nuw nsw i64 %514, 1
  %546 = icmp eq i64 %545, %512
  br i1 %546, label %547, label %513, !llvm.loop !291

547:                                              ; preds = %544, %509, %446
  %548 = phi i32 [ %447, %446 ], [ %483, %509 ], [ %483, %544 ]
  %549 = phi ptr [ %448, %446 ], [ %452, %509 ], [ %452, %544 ]
  %550 = load i32, ptr @level, align 4, !tbaa !25
  %551 = icmp ugt i32 %550, 12
  br i1 %551, label %554, label %552

552:                                              ; preds = %547
  %553 = shl nuw i32 524288, %550
  invoke void @_ZN5ArrayIhLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) @buf, i32 noundef %553)
          to label %554 unwind label %458

554:                                              ; preds = %547, %552
  %555 = icmp sgt i32 %548, 0
  br i1 %555, label %556, label %581

556:                                              ; preds = %554
  %557 = load ptr, ptr %88, align 8, !tbaa !279
  %558 = zext i32 %548 to i64
  %559 = icmp ult i32 %548, 4
  br i1 %559, label %578, label %560

560:                                              ; preds = %556
  %561 = and i64 %558, 4294967292
  br label %562

562:                                              ; preds = %562, %560
  %563 = phi i64 [ 0, %560 ], [ %572, %562 ]
  %564 = phi <2 x i64> [ zeroinitializer, %560 ], [ %570, %562 ]
  %565 = phi <2 x i64> [ zeroinitializer, %560 ], [ %571, %562 ]
  %566 = getelementptr inbounds i64, ptr %557, i64 %563
  %567 = load <2 x i64>, ptr %566, align 8, !tbaa !284
  %568 = getelementptr inbounds i64, ptr %566, i64 2
  %569 = load <2 x i64>, ptr %568, align 8, !tbaa !284
  %570 = add <2 x i64> %567, %564
  %571 = add <2 x i64> %569, %565
  %572 = add nuw i64 %563, 4
  %573 = icmp eq i64 %572, %561
  br i1 %573, label %574, label %562, !llvm.loop !292

574:                                              ; preds = %562
  %575 = add <2 x i64> %571, %570
  %576 = call i64 @llvm.vector.reduce.add.v2i64(<2 x i64> %575)
  %577 = icmp eq i64 %561, %558
  br i1 %577, label %581, label %578

578:                                              ; preds = %556, %574
  %579 = phi i64 [ 0, %556 ], [ %561, %574 ]
  %580 = phi i64 [ 0, %556 ], [ %576, %574 ]
  br label %628

581:                                              ; preds = %628, %574, %554
  %582 = phi i64 [ 0, %554 ], [ %576, %574 ], [ %633, %628 ]
  call void @llvm.lifetime.start.p0(i64 40, ptr nonnull %9) #39
  store i32 2048, ptr %9, align 8, !tbaa !229
  %583 = getelementptr inbounds %class.Encoder, ptr %9, i64 0, i32 1
  store i32 %235, ptr %583, align 4, !tbaa !231
  %584 = getelementptr inbounds %class.Encoder, ptr %9, i64 0, i32 2
  store ptr %549, ptr %584, align 8, !tbaa !234
  %585 = getelementptr inbounds %class.Encoder, ptr %9, i64 0, i32 3
  store i32 0, ptr %585, align 8, !tbaa !235
  %586 = getelementptr inbounds %class.Encoder, ptr %9, i64 0, i32 4
  store i32 -1, ptr %586, align 4, !tbaa !236
  %587 = getelementptr inbounds %class.Encoder, ptr %9, i64 0, i32 5
  store i32 0, ptr %587, align 8, !tbaa !237
  %588 = getelementptr inbounds %class.Encoder, ptr %9, i64 0, i32 6
  store ptr null, ptr %588, align 8, !tbaa !238
  %589 = load i32, ptr @level, align 4, !tbaa !25
  %590 = icmp sgt i32 %589, 0
  %591 = and i1 %234, %590
  br i1 %591, label %592, label %610

592:                                              ; preds = %581
  %593 = call i32 @getc(ptr noundef %549)
  %594 = and i32 %593, 255
  store i32 %594, ptr %587, align 8, !tbaa !237
  %595 = shl nuw nsw i32 %594, 8
  %596 = load ptr, ptr %584, align 8, !tbaa !234
  %597 = call i32 @getc(ptr noundef %596)
  %598 = and i32 %597, 255
  %599 = or i32 %598, %595
  store i32 %599, ptr %587, align 8, !tbaa !237
  %600 = shl nuw nsw i32 %599, 8
  %601 = load ptr, ptr %584, align 8, !tbaa !234
  %602 = call i32 @getc(ptr noundef %601)
  %603 = and i32 %602, 255
  %604 = or i32 %603, %600
  store i32 %604, ptr %587, align 8, !tbaa !237
  %605 = shl nuw i32 %604, 8
  %606 = load ptr, ptr %584, align 8, !tbaa !234
  %607 = call i32 @getc(ptr noundef %606)
  %608 = and i32 %607, 255
  %609 = or i32 %608, %605
  store i32 %609, ptr %587, align 8, !tbaa !237
  br label %610

610:                                              ; preds = %592, %581
  br label %611

611:                                              ; preds = %611, %610
  %612 = phi i64 [ 0, %610 ], [ %626, %611 ]
  %613 = trunc i64 %612 to i16
  %614 = shl i16 %613, 1
  %615 = or i16 %614, 3
  %616 = udiv i16 16384, %615
  %617 = zext i16 %616 to i32
  %618 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %612
  store i32 %617, ptr %618, align 8, !tbaa !25
  %619 = or i64 %612, 1
  %620 = trunc i64 %619 to i16
  %621 = shl i16 %620, 1
  %622 = add nuw nsw i16 %621, 3
  %623 = udiv i16 16384, %622
  %624 = zext i16 %623 to i32
  %625 = getelementptr inbounds [1024 x i32], ptr @_ZL2dt, i64 0, i64 %619
  store i32 %624, ptr %625, align 4, !tbaa !25
  %626 = add nuw nsw i64 %612, 2
  %627 = icmp eq i64 %626, 1024
  br i1 %627, label %636, label %611, !llvm.loop !239

628:                                              ; preds = %578, %628
  %629 = phi i64 [ %634, %628 ], [ %579, %578 ]
  %630 = phi i64 [ %633, %628 ], [ %580, %578 ]
  %631 = getelementptr inbounds i64, ptr %557, i64 %629
  %632 = load i64, ptr %631, align 8, !tbaa !284
  %633 = add nsw i64 %632, %630
  %634 = add nuw nsw i64 %629, 1
  %635 = icmp eq i64 %634, %558
  br i1 %635, label %581, label %628, !llvm.loop !293

636:                                              ; preds = %611
  br i1 %233, label %637, label %668

637:                                              ; preds = %636
  br i1 %555, label %638, label %640

638:                                              ; preds = %637
  %639 = zext i32 %548 to i64
  br label %651

640:                                              ; preds = %659, %637
  %641 = load i32, ptr %583, align 4, !tbaa !231
  %642 = icmp eq i32 %641, 0
  %643 = load i32, ptr @level, align 4
  %644 = icmp sgt i32 %643, 0
  %645 = select i1 %642, i1 %644, i1 false
  br i1 %645, label %646, label %664

646:                                              ; preds = %640
  %647 = load i32, ptr %585, align 8, !tbaa !235
  %648 = lshr i32 %647, 24
  %649 = load ptr, ptr %584, align 8, !tbaa !234
  %650 = call i32 @putc(i32 noundef %648, ptr noundef %649)
  br label %664

651:                                              ; preds = %638, %659
  %652 = phi i64 [ 0, %638 ], [ %660, %659 ]
  %653 = load ptr, ptr %75, align 8, !tbaa !274
  %654 = getelementptr inbounds ptr, ptr %653, i64 %652
  %655 = load ptr, ptr %654, align 8, !tbaa !5
  %656 = load ptr, ptr %88, align 8, !tbaa !279
  %657 = getelementptr inbounds i64, ptr %656, i64 %652
  %658 = load i64, ptr %657, align 8, !tbaa !284
  invoke void @_Z8compressPKclR7Encoder(ptr noundef %655, i64 noundef %658, ptr noundef nonnull align 8 dereferenceable(40) %9)
          to label %659 unwind label %662

659:                                              ; preds = %651
  %660 = add nuw nsw i64 %652, 1
  %661 = icmp eq i64 %660, %639
  br i1 %661, label %640, label %651, !llvm.loop !294

662:                                              ; preds = %651
  %663 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %940

664:                                              ; preds = %646, %640
  %665 = load ptr, ptr %584, align 8, !tbaa !234
  %666 = call i64 @ftell(ptr noundef %665)
  %667 = call i32 (ptr, ...) @printf(ptr noundef nonnull dereferenceable(1) @.str.53, i64 noundef %582, i64 noundef %666)
  br label %902

668:                                              ; preds = %636
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %10) #39
  %669 = icmp sgt i32 %56, 2
  %670 = getelementptr inbounds ptr, ptr %57, i64 2
  %671 = select i1 %669, ptr %670, ptr %89
  %672 = load ptr, ptr %671, align 8, !tbaa !5
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %10, ptr noundef %672)
          to label %673 unwind label %691

673:                                              ; preds = %668
  %674 = icmp eq i32 %56, 2
  br i1 %674, label %675, label %711

675:                                              ; preds = %673
  %676 = load i32, ptr %10, align 8, !tbaa !261
  %677 = add i32 %676, -2
  %678 = icmp sgt i32 %676, 1
  br i1 %678, label %679, label %705

679:                                              ; preds = %675
  %680 = getelementptr inbounds %class.Array.12, ptr %10, i64 0, i32 3
  %681 = load ptr, ptr %680, align 8, !tbaa !259
  %682 = getelementptr inbounds i8, ptr %681, i64 1
  %683 = zext i32 %677 to i64
  br label %684

684:                                              ; preds = %679, %702
  %685 = phi i64 [ %683, %679 ], [ %703, %702 ]
  %686 = getelementptr inbounds i8, ptr %681, i64 %685
  %687 = load i8, ptr %686, align 1, !tbaa !9
  switch i8 %687, label %695 [
    i8 47, label %688
    i8 92, label %688
  ]

688:                                              ; preds = %684, %684
  %689 = and i64 %685, 4294967295
  %690 = getelementptr inbounds i8, ptr %681, i64 %689
  store i8 0, ptr %690, align 1, !tbaa !9
  br label %711

691:                                              ; preds = %668
  %692 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %900

693:                                              ; preds = %707
  %694 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %889

695:                                              ; preds = %684
  %696 = icmp eq i64 %685, 1
  br i1 %696, label %697, label %702

697:                                              ; preds = %695
  %698 = load i8, ptr %682, align 1, !tbaa !9
  %699 = icmp eq i8 %698, 58
  br i1 %699, label %700, label %702

700:                                              ; preds = %697
  %701 = getelementptr inbounds i8, ptr %681, i64 2
  store i8 0, ptr %701, align 1, !tbaa !9
  br label %711

702:                                              ; preds = %695, %697
  %703 = add nsw i64 %685, -1
  %704 = icmp sgt i64 %685, 0
  br i1 %704, label %684, label %707, !llvm.loop !295

705:                                              ; preds = %675
  %706 = icmp eq i32 %677, -1
  br i1 %706, label %707, label %711

707:                                              ; preds = %702, %705
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef 2)
          to label %708 unwind label %693

708:                                              ; preds = %707
  %709 = getelementptr inbounds %class.Array.12, ptr %10, i64 0, i32 3
  %710 = load ptr, ptr %709, align 8, !tbaa !259
  store i16 46, ptr %710, align 1
  br label %711

711:                                              ; preds = %688, %700, %705, %708, %673
  %712 = getelementptr inbounds %class.Array.12, ptr %10, i64 0, i32 3
  %713 = load ptr, ptr %712, align 8, !tbaa !259
  %714 = call i64 @strlen(ptr noundef nonnull dereferenceable(1) %713) #44
  %715 = trunc i64 %714 to i32
  %716 = add i32 %715, 1
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef %716)
          to label %717 unwind label %762

717:                                              ; preds = %711
  %718 = load ptr, ptr %712, align 8, !tbaa !259
  %719 = call ptr @strcpy(ptr noundef nonnull dereferenceable(1) %718, ptr noundef nonnull dereferenceable(1) %713) #39
  %720 = load ptr, ptr %712, align 8, !tbaa !259
  %721 = load i8, ptr %720, align 1, !tbaa !9
  %722 = icmp eq i8 %721, 0
  br i1 %722, label %764, label %723

723:                                              ; preds = %717
  %724 = load i32, ptr %10, align 8, !tbaa !261
  %725 = icmp eq i32 %724, 3
  br i1 %725, label %726, label %730

726:                                              ; preds = %723
  %727 = getelementptr inbounds i8, ptr %720, i64 1
  %728 = load i8, ptr %727, align 1, !tbaa !9
  %729 = icmp eq i8 %728, 58
  br i1 %729, label %764, label %732

730:                                              ; preds = %723
  %731 = icmp sgt i32 %724, 0
  br i1 %731, label %732, label %734

732:                                              ; preds = %726, %730
  %733 = add nsw i32 %724, -1
  store i32 %733, ptr %10, align 8, !tbaa !261
  br label %734

734:                                              ; preds = %732, %730
  %735 = phi i32 [ %733, %732 ], [ %724, %730 ]
  %736 = getelementptr inbounds %class.Array.12, ptr %10, i64 0, i32 1
  %737 = load i32, ptr %736, align 4, !tbaa !266
  %738 = icmp eq i32 %735, %737
  br i1 %738, label %739, label %744

739:                                              ; preds = %734
  %740 = shl nsw i32 %735, 1
  %741 = call i32 @llvm.smax.i32(i32 %740, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef %741)
          to label %742 unwind label %760

742:                                              ; preds = %739
  %743 = load ptr, ptr %712, align 8, !tbaa !259
  br label %744

744:                                              ; preds = %742, %734
  %745 = phi ptr [ %743, %742 ], [ %720, %734 ]
  %746 = add nsw i32 %735, 1
  store i32 %746, ptr %10, align 8, !tbaa !261
  %747 = sext i32 %735 to i64
  %748 = getelementptr inbounds i8, ptr %745, i64 %747
  store i8 47, ptr %748, align 1, !tbaa !9
  %749 = load i32, ptr %10, align 8, !tbaa !261
  %750 = load i32, ptr %736, align 4, !tbaa !266
  %751 = icmp eq i32 %749, %750
  br i1 %751, label %752, label %755

752:                                              ; preds = %744
  %753 = shl nsw i32 %749, 1
  %754 = call i32 @llvm.smax.i32(i32 %753, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %10, i32 noundef %754)
          to label %755 unwind label %762

755:                                              ; preds = %752, %744
  %756 = load ptr, ptr %712, align 8, !tbaa !259
  %757 = add nsw i32 %749, 1
  store i32 %757, ptr %10, align 8, !tbaa !261
  %758 = sext i32 %749 to i64
  %759 = getelementptr inbounds i8, ptr %756, i64 %758
  store i8 0, ptr %759, align 1, !tbaa !9
  br label %764

760:                                              ; preds = %739
  %761 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %889

762:                                              ; preds = %711, %752
  %763 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %889

764:                                              ; preds = %755, %726, %717
  br i1 %555, label %765, label %770

765:                                              ; preds = %764
  %766 = getelementptr inbounds %class.Array.12, ptr %11, i64 0, i32 1
  %767 = getelementptr inbounds %class.Array.12, ptr %11, i64 0, i32 3
  %768 = getelementptr inbounds %class.Array.12, ptr %11, i64 0, i32 2
  %769 = zext i32 %548 to i64
  br label %780

770:                                              ; preds = %867, %764
  %771 = load i32, ptr %10, align 8, !tbaa !261
  %772 = load i32, ptr @programChecker, align 8, !tbaa !13
  %773 = sub i32 %772, %771
  store i32 %773, ptr @programChecker, align 8, !tbaa !13
  %774 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %775 = icmp sgt i32 %773, %774
  br i1 %775, label %776, label %777

776:                                              ; preds = %770
  store i32 %773, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %777

777:                                              ; preds = %770, %776
  %778 = getelementptr inbounds %class.Array.12, ptr %10, i64 0, i32 2
  %779 = load ptr, ptr %778, align 8, !tbaa !263
  call void @free(ptr noundef %779) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #39
  br label %902

780:                                              ; preds = %765, %867
  %781 = phi i64 [ 0, %765 ], [ %869, %867 ]
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %11) #39
  %782 = load ptr, ptr %712, align 8, !tbaa !259
  invoke void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %11, ptr noundef %782)
          to label %783 unwind label %871

783:                                              ; preds = %780
  %784 = load ptr, ptr %75, align 8, !tbaa !274
  %785 = getelementptr inbounds ptr, ptr %784, i64 %781
  %786 = load ptr, ptr %785, align 8, !tbaa !5
  %787 = load i32, ptr %11, align 8, !tbaa !261
  %788 = icmp sgt i32 %787, 0
  br i1 %788, label %789, label %791

789:                                              ; preds = %783
  %790 = add nsw i32 %787, -1
  store i32 %790, ptr %11, align 8, !tbaa !261
  br label %791

791:                                              ; preds = %789, %783
  %792 = phi i32 [ %787, %783 ], [ %790, %789 ]
  %793 = load i8, ptr %786, align 1, !tbaa !9
  %794 = icmp eq i8 %793, 0
  br i1 %794, label %844, label %795

795:                                              ; preds = %791, %834
  %796 = phi i8 [ %840, %834 ], [ %793, %791 ]
  %797 = phi ptr [ %798, %834 ], [ %786, %791 ]
  %798 = getelementptr inbounds i8, ptr %797, i64 1
  %799 = load i32, ptr %11, align 8, !tbaa !261
  %800 = load i32, ptr %766, align 4, !tbaa !266
  %801 = icmp eq i32 %799, %800
  br i1 %801, label %802, label %834

802:                                              ; preds = %795
  %803 = shl nsw i32 %799, 1
  %804 = call i32 @llvm.smax.i32(i32 %803, i32 1)
  %805 = icmp slt i32 %799, %804
  br i1 %805, label %806, label %832

806:                                              ; preds = %802
  %807 = load ptr, ptr %768, align 8, !tbaa !263
  %808 = load ptr, ptr %767, align 8, !tbaa !259
  store i32 %804, ptr %766, align 4, !tbaa !266
  store i32 %804, ptr %11, align 8, !tbaa !261
  %809 = zext i32 %804 to i64
  %810 = load i32, ptr @programChecker, align 8, !tbaa !13
  %811 = add nsw i32 %810, %804
  store i32 %811, ptr @programChecker, align 8, !tbaa !13
  %812 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %813 = icmp sgt i32 %811, %812
  br i1 %813, label %814, label %815

814:                                              ; preds = %806
  store i32 %811, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %815

815:                                              ; preds = %814, %806
  %816 = phi i32 [ %811, %814 ], [ %812, %806 ]
  %817 = call noalias ptr @calloc(i64 noundef %809, i64 noundef 1) #41
  store ptr %817, ptr %768, align 8, !tbaa !263
  %818 = icmp eq ptr %817, null
  br i1 %818, label %819, label %822

819:                                              ; preds = %815
  %820 = call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %820, align 16, !tbaa !5
  invoke void @__cxa_throw(ptr nonnull %820, ptr nonnull @_ZTIPKc, ptr null) #40
          to label %821 unwind label %875

821:                                              ; preds = %819
  unreachable

822:                                              ; preds = %815
  store ptr %817, ptr %767, align 8, !tbaa !259
  %823 = icmp eq ptr %807, null
  br i1 %823, label %832, label %824

824:                                              ; preds = %822
  %825 = icmp eq ptr %808, null
  br i1 %825, label %831, label %826

826:                                              ; preds = %824
  %827 = call i32 @llvm.smin.i32(i32 %804, i32 %799)
  %828 = sext i32 %827 to i64
  call void @llvm.memcpy.p0.p0.i64(ptr nonnull align 1 %817, ptr nonnull align 1 %808, i64 %828, i1 false)
  store i32 %810, ptr @programChecker, align 8, !tbaa !13
  %829 = icmp sgt i32 %810, %816
  br i1 %829, label %830, label %831

830:                                              ; preds = %826
  store i32 %810, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %831

831:                                              ; preds = %830, %826, %824
  call void @free(ptr noundef nonnull %807) #39
  br label %832

832:                                              ; preds = %802, %831, %822
  store i32 %799, ptr %11, align 8, !tbaa !261
  %833 = load i8, ptr %797, align 1, !tbaa !9
  br label %834

834:                                              ; preds = %832, %795
  %835 = phi i8 [ %796, %795 ], [ %833, %832 ]
  %836 = load ptr, ptr %767, align 8, !tbaa !259
  %837 = add nsw i32 %799, 1
  store i32 %837, ptr %11, align 8, !tbaa !261
  %838 = sext i32 %799 to i64
  %839 = getelementptr inbounds i8, ptr %836, i64 %838
  store i8 %835, ptr %839, align 1, !tbaa !9
  %840 = load i8, ptr %798, align 1, !tbaa !9
  %841 = icmp eq i8 %840, 0
  br i1 %841, label %842, label %795, !llvm.loop !267

842:                                              ; preds = %834
  %843 = load i32, ptr %11, align 8, !tbaa !261
  br label %844

844:                                              ; preds = %842, %791
  %845 = phi i32 [ %843, %842 ], [ %792, %791 ]
  %846 = load i32, ptr %766, align 4, !tbaa !266
  %847 = icmp eq i32 %845, %846
  br i1 %847, label %848, label %851

848:                                              ; preds = %844
  %849 = shl nsw i32 %845, 1
  %850 = call i32 @llvm.smax.i32(i32 %849, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %11, i32 noundef %850)
          to label %851 unwind label %873

851:                                              ; preds = %848, %844
  %852 = load ptr, ptr %767, align 8, !tbaa !259
  %853 = add nsw i32 %845, 1
  store i32 %853, ptr %11, align 8, !tbaa !261
  %854 = sext i32 %845 to i64
  %855 = getelementptr inbounds i8, ptr %852, i64 %854
  store i8 0, ptr %855, align 1, !tbaa !9
  %856 = load ptr, ptr %767, align 8, !tbaa !259
  %857 = load ptr, ptr %88, align 8, !tbaa !279
  %858 = getelementptr inbounds i64, ptr %857, i64 %781
  %859 = load i64, ptr %858, align 8, !tbaa !284
  invoke void @_Z10decompressPKclR7Encoder(ptr noundef %856, i64 noundef %859, ptr noundef nonnull align 8 dereferenceable(40) %9)
          to label %860 unwind label %873

860:                                              ; preds = %851
  %861 = load i32, ptr %11, align 8, !tbaa !261
  %862 = load i32, ptr @programChecker, align 8, !tbaa !13
  %863 = sub i32 %862, %861
  store i32 %863, ptr @programChecker, align 8, !tbaa !13
  %864 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %865 = icmp sgt i32 %863, %864
  br i1 %865, label %866, label %867

866:                                              ; preds = %860
  store i32 %863, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %867

867:                                              ; preds = %860, %866
  %868 = load ptr, ptr %768, align 8, !tbaa !263
  call void @free(ptr noundef %868) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #39
  %869 = add nuw nsw i64 %781, 1
  %870 = icmp eq i64 %869, %769
  br i1 %870, label %770, label %780, !llvm.loop !296

871:                                              ; preds = %780
  %872 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %887

873:                                              ; preds = %851, %848
  %874 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %877

875:                                              ; preds = %819
  %876 = landingpad { ptr, i32 }
          cleanup
          catch ptr @_ZTIPKc
  br label %877

877:                                              ; preds = %875, %873
  %878 = phi { ptr, i32 } [ %874, %873 ], [ %876, %875 ]
  %879 = load i32, ptr %11, align 8, !tbaa !261
  %880 = load i32, ptr @programChecker, align 8, !tbaa !13
  %881 = sub i32 %880, %879
  store i32 %881, ptr @programChecker, align 8, !tbaa !13
  %882 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %883 = icmp sgt i32 %881, %882
  br i1 %883, label %884, label %885

884:                                              ; preds = %877
  store i32 %881, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %885

885:                                              ; preds = %877, %884
  %886 = load ptr, ptr %768, align 8, !tbaa !263
  call void @free(ptr noundef %886) #39
  br label %887

887:                                              ; preds = %885, %871
  %888 = phi { ptr, i32 } [ %878, %885 ], [ %872, %871 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %11) #39
  br label %889

889:                                              ; preds = %760, %762, %887, %693
  %890 = phi { ptr, i32 } [ %888, %887 ], [ %694, %693 ], [ %761, %760 ], [ %763, %762 ]
  %891 = load i32, ptr %10, align 8, !tbaa !261
  %892 = load i32, ptr @programChecker, align 8, !tbaa !13
  %893 = sub i32 %892, %891
  store i32 %893, ptr @programChecker, align 8, !tbaa !13
  %894 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %895 = icmp sgt i32 %893, %894
  br i1 %895, label %896, label %897

896:                                              ; preds = %889
  store i32 %893, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %897

897:                                              ; preds = %889, %896
  %898 = getelementptr inbounds %class.Array.12, ptr %10, i64 0, i32 2
  %899 = load ptr, ptr %898, align 8, !tbaa !263
  call void @free(ptr noundef %899) #39
  br label %900

900:                                              ; preds = %897, %691
  %901 = phi { ptr, i32 } [ %890, %897 ], [ %692, %691 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %10) #39
  br label %940

902:                                              ; preds = %777, %664
  %903 = call i32 @fclose(ptr noundef %549)
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %9) #39
  %904 = load i32, ptr %6, align 8, !tbaa !261
  %905 = load i32, ptr @programChecker, align 8, !tbaa !13
  %906 = sub i32 %905, %904
  store i32 %906, ptr @programChecker, align 8, !tbaa !13
  %907 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %908 = icmp sgt i32 %906, %907
  br i1 %908, label %909, label %910

909:                                              ; preds = %902
  store i32 %906, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %910

910:                                              ; preds = %902, %909
  %911 = getelementptr inbounds %class.Array.12, ptr %6, i64 0, i32 2
  %912 = load ptr, ptr %911, align 8, !tbaa !263
  call void @free(ptr noundef %912) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #39
  %913 = load i32, ptr %5, align 8, !tbaa !261
  %914 = load i32, ptr @programChecker, align 8, !tbaa !13
  %915 = sub i32 %914, %913
  store i32 %915, ptr @programChecker, align 8, !tbaa !13
  %916 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %917 = icmp sgt i32 %915, %916
  br i1 %917, label %918, label %919

918:                                              ; preds = %910
  store i32 %915, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %919

919:                                              ; preds = %910, %918
  %920 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 2
  %921 = load ptr, ptr %920, align 8, !tbaa !263
  call void @free(ptr noundef %921) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #39
  %922 = load i32, ptr %4, align 8, !tbaa !277
  %923 = load i32, ptr @programChecker, align 8, !tbaa !13
  %924 = shl i32 %922, 3
  %925 = sub i32 %923, %924
  store i32 %925, ptr @programChecker, align 8, !tbaa !13
  %926 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %927 = icmp sgt i32 %925, %926
  br i1 %927, label %928, label %929

928:                                              ; preds = %919
  store i32 %925, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %929

929:                                              ; preds = %919, %928
  %930 = load ptr, ptr %82, align 8, !tbaa !278
  call void @free(ptr noundef %930) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #39
  %931 = load i32, ptr %3, align 8, !tbaa !272
  %932 = load i32, ptr @programChecker, align 8, !tbaa !13
  %933 = shl i32 %931, 3
  %934 = sub i32 %932, %933
  store i32 %934, ptr @programChecker, align 8, !tbaa !13
  %935 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %936 = icmp sgt i32 %934, %935
  br i1 %936, label %937, label %938

937:                                              ; preds = %929
  store i32 %934, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %938

938:                                              ; preds = %929, %937
  %939 = load ptr, ptr %69, align 8, !tbaa !273
  call void @free(ptr noundef %939) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #39
  br label %1003

940:                                              ; preds = %900, %662
  %941 = phi { ptr, i32 } [ %663, %662 ], [ %901, %900 ]
  call void @llvm.lifetime.end.p0(i64 40, ptr nonnull %9) #39
  br label %942

942:                                              ; preds = %524, %507, %472, %470, %940, %458, %444
  %943 = phi { ptr, i32 } [ %445, %444 ], [ %941, %940 ], [ %459, %458 ], [ %525, %524 ], [ %508, %507 ], [ %471, %470 ], [ %473, %472 ]
  %944 = load i32, ptr %6, align 8, !tbaa !261
  %945 = load i32, ptr @programChecker, align 8, !tbaa !13
  %946 = sub i32 %945, %944
  store i32 %946, ptr @programChecker, align 8, !tbaa !13
  %947 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %948 = icmp sgt i32 %946, %947
  br i1 %948, label %949, label %950

949:                                              ; preds = %942
  store i32 %946, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %950

950:                                              ; preds = %942, %949
  %951 = getelementptr inbounds %class.Array.12, ptr %6, i64 0, i32 2
  %952 = load ptr, ptr %951, align 8, !tbaa !263
  call void @free(ptr noundef %952) #39
  br label %953

953:                                              ; preds = %950, %273
  %954 = phi { ptr, i32 } [ %943, %950 ], [ %274, %273 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %6) #39
  br label %955

955:                                              ; preds = %226, %230, %228, %953
  %956 = phi { ptr, i32 } [ %954, %953 ], [ %227, %226 ], [ %229, %228 ], [ %231, %230 ]
  %957 = load i32, ptr %5, align 8, !tbaa !261
  %958 = load i32, ptr @programChecker, align 8, !tbaa !13
  %959 = sub i32 %958, %957
  store i32 %959, ptr @programChecker, align 8, !tbaa !13
  %960 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %961 = icmp sgt i32 %959, %960
  br i1 %961, label %962, label %963

962:                                              ; preds = %955
  store i32 %959, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %963

963:                                              ; preds = %955, %962
  %964 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 2
  %965 = load ptr, ptr %964, align 8, !tbaa !263
  call void @free(ptr noundef %965) #39
  br label %966

966:                                              ; preds = %963, %151
  %967 = phi { ptr, i32 } [ %956, %963 ], [ %152, %151 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #39
  %968 = load i32, ptr %4, align 8, !tbaa !277
  %969 = load i32, ptr @programChecker, align 8, !tbaa !13
  %970 = shl i32 %968, 3
  %971 = sub i32 %969, %970
  store i32 %971, ptr @programChecker, align 8, !tbaa !13
  %972 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %973 = icmp sgt i32 %971, %972
  br i1 %973, label %974, label %975

974:                                              ; preds = %966
  store i32 %971, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %975

975:                                              ; preds = %966, %974
  %976 = load ptr, ptr %82, align 8, !tbaa !278
  call void @free(ptr noundef %976) #39
  br label %977

977:                                              ; preds = %975, %149
  %978 = phi { ptr, i32 } [ %967, %975 ], [ %150, %149 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #39
  %979 = load i32, ptr %3, align 8, !tbaa !272
  %980 = load i32, ptr @programChecker, align 8, !tbaa !13
  %981 = shl i32 %979, 3
  %982 = sub i32 %980, %981
  store i32 %982, ptr @programChecker, align 8, !tbaa !13
  %983 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %984 = icmp sgt i32 %982, %983
  br i1 %984, label %985, label %986

985:                                              ; preds = %977
  store i32 %982, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %986

986:                                              ; preds = %977, %985
  %987 = load ptr, ptr %69, align 8, !tbaa !273
  call void @free(ptr noundef %987) #39
  br label %988

988:                                              ; preds = %986, %147
  %989 = phi { ptr, i32 } [ %978, %986 ], [ %148, %147 ]
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %3) #39
  br label %990

990:                                              ; preds = %988, %44
  %991 = phi { ptr, i32 } [ %989, %988 ], [ %46, %44 ]
  %992 = phi i8 [ %58, %988 ], [ %45, %44 ]
  %993 = extractvalue { ptr, i32 } %991, 1
  %994 = call i32 @llvm.eh.typeid.for(ptr nonnull @_ZTIPKc) #39
  %995 = icmp eq i32 %993, %994
  br i1 %995, label %996, label %1012

996:                                              ; preds = %990
  %997 = extractvalue { ptr, i32 } %991, 0
  %998 = call ptr @__cxa_begin_catch(ptr %997) #39
  %999 = icmp eq ptr %998, null
  br i1 %999, label %1002, label %1000

1000:                                             ; preds = %996
  %1001 = call i32 @puts(ptr nonnull dereferenceable(1) %998)
  br label %1002

1002:                                             ; preds = %1000, %996
  call void @__cxa_end_catch() #39
  br label %1003

1003:                                             ; preds = %1002, %938
  %1004 = phi i8 [ %992, %1002 ], [ %58, %938 ]
  %1005 = and i8 %1004, 1
  %1006 = icmp eq i8 %1005, 0
  br i1 %1006, label %1011, label %1007

1007:                                             ; preds = %1003
  %1008 = call i32 @puts(ptr nonnull dereferenceable(1) @str.63)
  %1009 = load ptr, ptr @stdin, align 8, !tbaa !5
  %1010 = call i32 @getc(ptr noundef %1009)
  br label %1011

1011:                                             ; preds = %1007, %1003
  ret i32 0

1012:                                             ; preds = %990
  resume { ptr, i32 } %991
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i64 @strlen(ptr nocapture noundef) local_unnamed_addr #27

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN5ArrayIPcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.13, ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 4, !tbaa !270
  %5 = icmp slt i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, ptr %0, align 8, !tbaa !272
  br label %45

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.Array.13, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !273
  %10 = getelementptr inbounds %class.Array.13, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !274
  %12 = load i32, ptr %0, align 8, !tbaa !272
  store i32 %1, ptr %3, align 4, !tbaa !270
  store i32 %1, ptr %0, align 8, !tbaa !272
  %13 = icmp slt i32 %1, 1
  br i1 %13, label %14, label %15

14:                                               ; preds = %7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %8, i8 0, i64 16, i1 false)
  br label %29

15:                                               ; preds = %7
  %16 = shl i32 %1, 3
  %17 = load i32, ptr @programChecker, align 8, !tbaa !13
  %18 = add nsw i32 %17, %16
  store i32 %18, ptr @programChecker, align 8, !tbaa !13
  %19 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %20 = icmp sgt i32 %18, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  store i32 %18, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %22

22:                                               ; preds = %21, %15
  %23 = sext i32 %16 to i64
  %24 = tail call noalias ptr @calloc(i64 noundef %23, i64 noundef 1) #41
  store ptr %24, ptr %8, align 8, !tbaa !273
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %27, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %27, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

28:                                               ; preds = %22
  store ptr %24, ptr %10, align 8, !tbaa !274
  br label %29

29:                                               ; preds = %14, %28
  %30 = phi ptr [ null, %14 ], [ %24, %28 ]
  %31 = icmp eq ptr %9, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %29
  %33 = icmp eq ptr %11, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %32
  %35 = tail call i32 @llvm.smin.i32(i32 %1, i32 %12)
  %36 = sext i32 %35 to i64
  %37 = shl nsw i64 %36, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %30, ptr nonnull align 8 %11, i64 %37, i1 false)
  %38 = load i32, ptr @programChecker, align 8, !tbaa !13
  %39 = shl i32 %1, 3
  %40 = sub i32 %38, %39
  store i32 %40, ptr @programChecker, align 8, !tbaa !13
  %41 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %42 = icmp sgt i32 %40, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %34
  store i32 %40, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %44

44:                                               ; preds = %43, %34, %32
  tail call void @free(ptr noundef nonnull %9) #39
  br label %45

45:                                               ; preds = %29, %44, %6
  ret void
}

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN5ArrayIlLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.14, ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 4, !tbaa !275
  %5 = icmp slt i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, ptr %0, align 8, !tbaa !277
  br label %45

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.Array.14, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !278
  %10 = getelementptr inbounds %class.Array.14, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !279
  %12 = load i32, ptr %0, align 8, !tbaa !277
  store i32 %1, ptr %3, align 4, !tbaa !275
  store i32 %1, ptr %0, align 8, !tbaa !277
  %13 = icmp slt i32 %1, 1
  br i1 %13, label %14, label %15

14:                                               ; preds = %7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %8, i8 0, i64 16, i1 false)
  br label %29

15:                                               ; preds = %7
  %16 = shl i32 %1, 3
  %17 = load i32, ptr @programChecker, align 8, !tbaa !13
  %18 = add nsw i32 %17, %16
  store i32 %18, ptr @programChecker, align 8, !tbaa !13
  %19 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %20 = icmp sgt i32 %18, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  store i32 %18, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %22

22:                                               ; preds = %21, %15
  %23 = sext i32 %16 to i64
  %24 = tail call noalias ptr @calloc(i64 noundef %23, i64 noundef 1) #41
  store ptr %24, ptr %8, align 8, !tbaa !278
  %25 = icmp eq ptr %24, null
  br i1 %25, label %26, label %28

26:                                               ; preds = %22
  %27 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %27, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %27, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

28:                                               ; preds = %22
  store ptr %24, ptr %10, align 8, !tbaa !279
  br label %29

29:                                               ; preds = %14, %28
  %30 = phi ptr [ null, %14 ], [ %24, %28 ]
  %31 = icmp eq ptr %9, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %29
  %33 = icmp eq ptr %11, null
  br i1 %33, label %44, label %34

34:                                               ; preds = %32
  %35 = tail call i32 @llvm.smin.i32(i32 %1, i32 %12)
  %36 = sext i32 %35 to i64
  %37 = shl nsw i64 %36, 3
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 8 %30, ptr nonnull align 8 %11, i64 %37, i1 false)
  %38 = load i32, ptr @programChecker, align 8, !tbaa !13
  %39 = shl i32 %1, 3
  %40 = sub i32 %38, %39
  store i32 %40, ptr @programChecker, align 8, !tbaa !13
  %41 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %42 = icmp sgt i32 %40, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %34
  store i32 %40, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %44

44:                                               ; preds = %43, %34, %32
  tail call void @free(ptr noundef nonnull %9) #39
  br label %45

45:                                               ; preds = %29, %44, %6
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare i32 @strncmp(ptr nocapture noundef, ptr nocapture noundef, i64 noundef) local_unnamed_addr #27

; Function Attrs: nofree nosync nounwind memory(none)
declare i32 @llvm.eh.typeid.for(ptr) #28

declare ptr @__cxa_begin_catch(ptr) local_unnamed_addr

declare void @__cxa_end_catch() local_unnamed_addr

; Function Attrs: norecurse uwtable
define dso_local noundef i32 @main(i32 noundef %0, ptr nocapture noundef readonly %1) local_unnamed_addr #29 personality ptr @__gxx_personality_v0 {
  %3 = alloca i32, align 4
  %4 = alloca [3 x ptr], align 16
  %5 = alloca %class.String, align 8
  call void @llvm.lifetime.start.p0(i64 4, ptr nonnull %3) #39
  store i32 1, ptr %3, align 4, !tbaa !25
  %6 = tail call i32 @fork() #39
  switch i32 %6, label %10 [
    i32 0, label %7
    i32 -1, label %9
  ]

7:                                                ; preds = %2
  %8 = tail call noundef i32 @_Z7paqmainiPPc(i32 noundef %0, ptr noundef %1)
  tail call void @exit(i32 noundef 0) #46
  unreachable

9:                                                ; preds = %2
  tail call void @perror(ptr noundef nonnull @.str.57) #45
  tail call void @exit(i32 noundef 1) #46
  unreachable

10:                                               ; preds = %2
  %11 = call i32 @wait(ptr noundef nonnull %3)
  %12 = load i32, ptr %3, align 4, !tbaa !25
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %136

14:                                               ; preds = %10
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %4) #39
  %15 = load ptr, ptr %1, align 8, !tbaa !5
  store ptr %15, ptr %4, align 16, !tbaa !5
  %16 = call noalias dereferenceable_or_null(3) ptr @strdup(ptr noundef nonnull @.str.58) #39
  %17 = getelementptr inbounds [3 x ptr], ptr %4, i64 0, i64 1
  store ptr %16, ptr %17, align 8, !tbaa !5
  br label %18

18:                                               ; preds = %25, %14
  %19 = phi ptr [ %1, %14 ], [ %21, %25 ]
  %20 = phi i32 [ %0, %14 ], [ %22, %25 ]
  %21 = getelementptr inbounds ptr, ptr %19, i64 1
  %22 = add nsw i32 %20, -1
  %23 = icmp eq i32 %22, 0
  %24 = load ptr, ptr %21, align 8, !tbaa !5
  br i1 %23, label %28, label %25

25:                                               ; preds = %18
  %26 = load i8, ptr %24, align 1, !tbaa !9
  %27 = icmp eq i8 %26, 45
  br i1 %27, label %18, label %28, !llvm.loop !297

28:                                               ; preds = %25, %18
  call void @llvm.lifetime.start.p0(i64 24, ptr nonnull %5) #39
  call void @_ZN6StringC2EPKc(ptr noundef nonnull align 8 dereferenceable(24) %5, ptr noundef %24)
  %29 = load i32, ptr %5, align 8, !tbaa !261
  %30 = icmp sgt i32 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = add nsw i32 %29, -1
  store i32 %32, ptr %5, align 8, !tbaa !261
  br label %33

33:                                               ; preds = %31, %28
  %34 = phi i32 [ %32, %31 ], [ %29, %28 ]
  %35 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 1
  %36 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 3
  %37 = load i32, ptr %35, align 4, !tbaa !266
  %38 = icmp eq i32 %34, %37
  br i1 %38, label %39, label %42

39:                                               ; preds = %33
  %40 = shl nsw i32 %34, 1
  %41 = call i32 @llvm.smax.i32(i32 %40, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %41)
          to label %42 unwind label %110

42:                                               ; preds = %39, %33
  %43 = load ptr, ptr %36, align 8, !tbaa !259
  %44 = add nsw i32 %34, 1
  store i32 %44, ptr %5, align 8, !tbaa !261
  %45 = sext i32 %34 to i64
  %46 = getelementptr inbounds i8, ptr %43, i64 %45
  store i8 46, ptr %46, align 1, !tbaa !9
  %47 = load i32, ptr %5, align 8, !tbaa !261
  %48 = load i32, ptr %35, align 4, !tbaa !266
  %49 = icmp eq i32 %47, %48
  br i1 %49, label %50, label %53

50:                                               ; preds = %42
  %51 = shl nsw i32 %47, 1
  %52 = call i32 @llvm.smax.i32(i32 %51, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %52)
          to label %53 unwind label %112

53:                                               ; preds = %50, %42
  %54 = load ptr, ptr %36, align 8, !tbaa !259
  %55 = add nsw i32 %47, 1
  store i32 %55, ptr %5, align 8, !tbaa !261
  %56 = sext i32 %47 to i64
  %57 = getelementptr inbounds i8, ptr %54, i64 %56
  store i8 0, ptr %57, align 1, !tbaa !9
  %58 = call noundef ptr @strrchr(ptr noundef nonnull dereferenceable(1) %15, i32 noundef 47) #44
  %59 = icmp eq ptr %58, null
  %60 = getelementptr inbounds i8, ptr %58, i64 1
  %61 = select i1 %59, ptr %15, ptr %60
  %62 = load i32, ptr %5, align 8, !tbaa !261
  %63 = icmp sgt i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %53
  %65 = add nsw i32 %62, -1
  store i32 %65, ptr %5, align 8, !tbaa !261
  br label %66

66:                                               ; preds = %64, %53
  %67 = phi i32 [ %62, %53 ], [ %65, %64 ]
  %68 = load i8, ptr %61, align 1, !tbaa !9
  %69 = icmp eq i8 %68, 0
  br i1 %69, label %92, label %70

70:                                               ; preds = %66, %82
  %71 = phi i8 [ %88, %82 ], [ %68, %66 ]
  %72 = phi ptr [ %73, %82 ], [ %61, %66 ]
  %73 = getelementptr inbounds i8, ptr %72, i64 1
  %74 = load i32, ptr %5, align 8, !tbaa !261
  %75 = load i32, ptr %35, align 4, !tbaa !266
  %76 = icmp eq i32 %74, %75
  br i1 %76, label %77, label %82

77:                                               ; preds = %70
  %78 = shl nsw i32 %74, 1
  %79 = call i32 @llvm.smax.i32(i32 %78, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %79)
          to label %80 unwind label %108

80:                                               ; preds = %77
  store i32 %74, ptr %5, align 8, !tbaa !261
  %81 = load i8, ptr %72, align 1, !tbaa !9
  br label %82

82:                                               ; preds = %80, %70
  %83 = phi i8 [ %71, %70 ], [ %81, %80 ]
  %84 = load ptr, ptr %36, align 8, !tbaa !259
  %85 = add nsw i32 %74, 1
  store i32 %85, ptr %5, align 8, !tbaa !261
  %86 = sext i32 %74 to i64
  %87 = getelementptr inbounds i8, ptr %84, i64 %86
  store i8 %83, ptr %87, align 1, !tbaa !9
  %88 = load i8, ptr %73, align 1, !tbaa !9
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %90, label %70, !llvm.loop !267

90:                                               ; preds = %82
  %91 = load i32, ptr %5, align 8, !tbaa !261
  br label %92

92:                                               ; preds = %90, %66
  %93 = phi i32 [ %91, %90 ], [ %67, %66 ]
  %94 = load i32, ptr %35, align 4, !tbaa !266
  %95 = icmp eq i32 %93, %94
  br i1 %95, label %96, label %99

96:                                               ; preds = %92
  %97 = shl nsw i32 %93, 1
  %98 = call i32 @llvm.smax.i32(i32 %97, i32 1)
  invoke void @_ZN5ArrayIcLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %5, i32 noundef %98)
          to label %99 unwind label %112

99:                                               ; preds = %96, %92
  %100 = load ptr, ptr %36, align 8, !tbaa !259
  %101 = add nsw i32 %93, 1
  store i32 %101, ptr %5, align 8, !tbaa !261
  %102 = sext i32 %93 to i64
  %103 = getelementptr inbounds i8, ptr %100, i64 %102
  store i8 0, ptr %103, align 1, !tbaa !9
  %104 = load ptr, ptr %36, align 8, !tbaa !259
  %105 = call noalias ptr @strdup(ptr noundef %104) #39
  %106 = getelementptr inbounds [3 x ptr], ptr %4, i64 0, i64 2
  store ptr %105, ptr %106, align 16, !tbaa !5
  %107 = invoke noundef i32 @_Z7paqmainiPPc(i32 noundef 3, ptr noundef nonnull %4)
          to label %125 unwind label %112

108:                                              ; preds = %77
  %109 = landingpad { ptr, i32 }
          cleanup
  br label %114

110:                                              ; preds = %39
  %111 = landingpad { ptr, i32 }
          cleanup
  br label %114

112:                                              ; preds = %96, %50, %99
  %113 = landingpad { ptr, i32 }
          cleanup
  br label %114

114:                                              ; preds = %110, %112, %108
  %115 = phi { ptr, i32 } [ %109, %108 ], [ %111, %110 ], [ %113, %112 ]
  %116 = load i32, ptr %5, align 8, !tbaa !261
  %117 = load i32, ptr @programChecker, align 8, !tbaa !13
  %118 = sub i32 %117, %116
  store i32 %118, ptr @programChecker, align 8, !tbaa !13
  %119 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %120 = icmp sgt i32 %118, %119
  br i1 %120, label %121, label %122

121:                                              ; preds = %114
  store i32 %118, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %122

122:                                              ; preds = %114, %121
  %123 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 2
  %124 = load ptr, ptr %123, align 8, !tbaa !263
  call void @free(ptr noundef %124) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #39
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #39
  resume { ptr, i32 } %115

125:                                              ; preds = %99
  call void @free(ptr noundef %16) #39
  %126 = call i32 @unlink(ptr noundef %105) #39
  call void @free(ptr noundef %105) #39
  %127 = load i32, ptr %5, align 8, !tbaa !261
  %128 = load i32, ptr @programChecker, align 8, !tbaa !13
  %129 = sub i32 %128, %127
  store i32 %129, ptr @programChecker, align 8, !tbaa !13
  %130 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %131 = icmp sgt i32 %129, %130
  br i1 %131, label %132, label %133

132:                                              ; preds = %125
  store i32 %129, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %133

133:                                              ; preds = %125, %132
  %134 = getelementptr inbounds %class.Array.12, ptr %5, i64 0, i32 2
  %135 = load ptr, ptr %134, align 8, !tbaa !263
  call void @free(ptr noundef %135) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %5) #39
  call void @llvm.lifetime.end.p0(i64 24, ptr nonnull %4) #39
  br label %136

136:                                              ; preds = %10, %133
  %137 = phi i32 [ 0, %133 ], [ %12, %10 ]
  call void @llvm.lifetime.end.p0(i64 4, ptr nonnull %3) #39
  ret i32 %137
}

; Function Attrs: nofree nounwind
declare i32 @fork() local_unnamed_addr #18

; Function Attrs: noreturn nounwind
declare void @exit(i32 noundef) local_unnamed_addr #30

declare i32 @wait(ptr noundef) local_unnamed_addr #31

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite)
declare noalias ptr @strdup(ptr nocapture noundef readonly) local_unnamed_addr #32

; Function Attrs: mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite)
declare void @free(ptr allocptr nocapture noundef) local_unnamed_addr #33

; Function Attrs: nofree nounwind
declare noundef i32 @unlink(ptr nocapture noundef readonly) local_unnamed_addr #18

; Function Attrs: nounwind
declare i64 @clock() local_unnamed_addr #34

; Function Attrs: mustprogress nofree nounwind willreturn
declare i64 @strtol(ptr noundef readonly, ptr nocapture noundef, i32 noundef) local_unnamed_addr #35

; Function Attrs: inlinehint mustprogress uwtable
define linkonce_odr dso_local noundef ptr @_ZN2BHILi4EEixEj(ptr noundef nonnull align 8 dereferenceable(28) %0, i32 noundef %1) local_unnamed_addr #17 comdat align 2 {
  %3 = lshr i32 %1, 16
  %4 = and i32 %1, 65535
  %5 = xor i32 %3, %4
  %6 = shl i32 %1, 3
  %7 = getelementptr inbounds %class.BH.10, ptr %0, i64 0, i32 1
  %8 = load i32, ptr %7, align 8, !tbaa !228
  %9 = and i32 %8, %6
  %10 = getelementptr inbounds %class.Array.8, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !161
  %12 = shl i32 %9, 2
  %13 = sext i32 %12 to i64
  %14 = getelementptr inbounds i8, ptr %11, i64 %13
  %15 = getelementptr inbounds i8, ptr %14, i64 2
  %16 = load i8, ptr %15, align 1, !tbaa !9
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %110, label %18

18:                                               ; preds = %2
  %19 = load i16, ptr %14, align 2, !tbaa !31
  %20 = zext i16 %19 to i32
  %21 = icmp eq i32 %5, %20
  br i1 %21, label %112, label %22

22:                                               ; preds = %18
  %23 = shl i32 %9, 2
  %24 = or i32 %23, 4
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, ptr %11, i64 %25
  %27 = getelementptr inbounds i8, ptr %26, i64 2
  %28 = load i8, ptr %27, align 1, !tbaa !9
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %106, label %30

30:                                               ; preds = %22
  %31 = load i16, ptr %26, align 2, !tbaa !31
  %32 = zext i16 %31 to i32
  %33 = icmp eq i32 %5, %32
  br i1 %33, label %126, label %34

34:                                               ; preds = %30
  %35 = shl i32 %9, 2
  %36 = or i32 %35, 8
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds i8, ptr %11, i64 %37
  %39 = getelementptr inbounds i8, ptr %38, i64 2
  %40 = load i8, ptr %39, align 1, !tbaa !9
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %106, label %42

42:                                               ; preds = %34
  %43 = load i16, ptr %38, align 2, !tbaa !31
  %44 = zext i16 %43 to i32
  %45 = icmp eq i32 %5, %44
  br i1 %45, label %126, label %46

46:                                               ; preds = %42
  %47 = shl i32 %9, 2
  %48 = or i32 %47, 12
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, ptr %11, i64 %49
  %51 = getelementptr inbounds i8, ptr %50, i64 2
  %52 = load i8, ptr %51, align 1, !tbaa !9
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %106, label %54

54:                                               ; preds = %46
  %55 = load i16, ptr %50, align 2, !tbaa !31
  %56 = zext i16 %55 to i32
  %57 = icmp eq i32 %5, %56
  br i1 %57, label %126, label %58

58:                                               ; preds = %54
  %59 = shl i32 %9, 2
  %60 = or i32 %59, 16
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds i8, ptr %11, i64 %61
  %63 = getelementptr inbounds i8, ptr %62, i64 2
  %64 = load i8, ptr %63, align 1, !tbaa !9
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %106, label %66

66:                                               ; preds = %58
  %67 = load i16, ptr %62, align 2, !tbaa !31
  %68 = zext i16 %67 to i32
  %69 = icmp eq i32 %5, %68
  br i1 %69, label %126, label %70

70:                                               ; preds = %66
  %71 = shl i32 %9, 2
  %72 = or i32 %71, 20
  %73 = sext i32 %72 to i64
  %74 = getelementptr inbounds i8, ptr %11, i64 %73
  %75 = getelementptr inbounds i8, ptr %74, i64 2
  %76 = load i8, ptr %75, align 1, !tbaa !9
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %106, label %78

78:                                               ; preds = %70
  %79 = load i16, ptr %74, align 2, !tbaa !31
  %80 = zext i16 %79 to i32
  %81 = icmp eq i32 %5, %80
  br i1 %81, label %126, label %82

82:                                               ; preds = %78
  %83 = shl i32 %9, 2
  %84 = or i32 %83, 24
  %85 = sext i32 %84 to i64
  %86 = getelementptr inbounds i8, ptr %11, i64 %85
  %87 = getelementptr inbounds i8, ptr %86, i64 2
  %88 = load i8, ptr %87, align 1, !tbaa !9
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %106, label %90

90:                                               ; preds = %82
  %91 = load i16, ptr %86, align 2, !tbaa !31
  %92 = zext i16 %91 to i32
  %93 = icmp eq i32 %5, %92
  br i1 %93, label %126, label %94

94:                                               ; preds = %90
  %95 = shl i32 %9, 2
  %96 = or i32 %95, 28
  %97 = sext i32 %96 to i64
  %98 = getelementptr inbounds i8, ptr %11, i64 %97
  %99 = getelementptr inbounds i8, ptr %98, i64 2
  %100 = load i8, ptr %99, align 1, !tbaa !9
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %106, label %102

102:                                              ; preds = %94
  %103 = load i16, ptr %98, align 2, !tbaa !31
  %104 = zext i16 %103 to i32
  %105 = icmp eq i32 %5, %104
  br i1 %105, label %126, label %114

106:                                              ; preds = %22, %34, %46, %58, %70, %82, %94
  %107 = phi i64 [ 28, %94 ], [ 24, %82 ], [ 20, %70 ], [ 16, %58 ], [ 12, %46 ], [ 8, %34 ], [ 4, %22 ]
  %108 = phi ptr [ %98, %94 ], [ %86, %82 ], [ %74, %70 ], [ %62, %58 ], [ %50, %46 ], [ %38, %34 ], [ %26, %22 ]
  %109 = trunc i32 %5 to i16
  store i16 %109, ptr %108, align 2, !tbaa !31
  br label %126

110:                                              ; preds = %2
  %111 = trunc i32 %5 to i16
  store i16 %111, ptr %14, align 2, !tbaa !31
  br label %112

112:                                              ; preds = %18, %110
  %113 = getelementptr inbounds i8, ptr %14, i64 1
  br label %143

114:                                              ; preds = %102
  store i32 0, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  %115 = trunc i32 %5 to i16
  store i16 %115, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1, !tbaa !31
  %116 = or i32 %12, 30
  %117 = sext i32 %116 to i64
  %118 = getelementptr inbounds i8, ptr %11, i64 %117
  %119 = load i8, ptr %118, align 1, !tbaa !9
  %120 = or i32 %12, 26
  %121 = sext i32 %120 to i64
  %122 = getelementptr inbounds i8, ptr %11, i64 %121
  %123 = load i8, ptr %122, align 1, !tbaa !9
  %124 = icmp ugt i8 %119, %123
  %125 = select i1 %124, i64 24, i64 28
  br label %130

126:                                              ; preds = %102, %90, %78, %66, %54, %42, %30, %106
  %127 = phi i64 [ %107, %106 ], [ 28, %102 ], [ 24, %90 ], [ 20, %78 ], [ 16, %66 ], [ 12, %54 ], [ 8, %42 ], [ 4, %30 ]
  %128 = phi ptr [ %108, %106 ], [ %98, %102 ], [ %86, %90 ], [ %74, %78 ], [ %62, %66 ], [ %50, %54 ], [ %38, %42 ], [ %26, %30 ]
  %129 = load i32, ptr %128, align 2
  store i32 %129, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  br label %130

130:                                              ; preds = %114, %126
  %131 = phi i64 [ %127, %126 ], [ %125, %114 ]
  %132 = or i32 %12, 4
  %133 = sext i32 %132 to i64
  %134 = getelementptr inbounds i8, ptr %11, i64 %133
  %135 = and i64 %131, 4294967295
  tail call void @llvm.memmove.p0.p0.i64(ptr nonnull align 1 %134, ptr nonnull align 1 %14, i64 %135, i1 false)
  %136 = load ptr, ptr %10, align 8, !tbaa !161
  %137 = getelementptr inbounds i8, ptr %136, i64 %13
  %138 = load i32, ptr @_ZZN2BHILi4EEixEjE3tmp, align 1
  store i32 %138, ptr %137, align 1
  %139 = or i32 %12, 1
  %140 = load ptr, ptr %10, align 8, !tbaa !161
  %141 = sext i32 %139 to i64
  %142 = getelementptr inbounds i8, ptr %140, i64 %141
  br label %143

143:                                              ; preds = %130, %112
  %144 = phi ptr [ %113, %112 ], [ %142, %130 ]
  ret ptr %144
}

; Function Attrs: mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite)
declare noalias noundef ptr @calloc(i64 noundef, i64 noundef) local_unnamed_addr #36

; Function Attrs: mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite)
declare void @llvm.memcpy.p0.p0.i64(ptr noalias nocapture writeonly, ptr noalias nocapture readonly, i64, i1 immarg) #26

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local noundef i32 @_ZN7Encoder4codeEi(ptr noundef nonnull align 8 dereferenceable(40) %0, i32 noundef %1) local_unnamed_addr #14 comdat align 2 {
  %3 = load i32, ptr %0, align 8, !tbaa !229
  %4 = icmp slt i32 %3, 2048
  %5 = zext i1 %4 to i32
  %6 = add nsw i32 %3, %5
  %7 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 3
  %8 = load i32, ptr %7, align 8, !tbaa !235
  %9 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 4
  %10 = load i32, ptr %9, align 4, !tbaa !236
  %11 = sub i32 %10, %8
  %12 = lshr i32 %11, 12
  %13 = mul i32 %12, %6
  %14 = add i32 %13, %8
  %15 = and i32 %11, 4095
  %16 = mul i32 %15, %6
  %17 = lshr i32 %16, 12
  %18 = add i32 %14, %17
  %19 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 1
  %20 = load i32, ptr %19, align 4, !tbaa !231
  %21 = icmp eq i32 %20, 1
  %22 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 5
  %23 = load i32, ptr %22, align 8
  %24 = icmp ule i32 %23, %18
  %25 = zext i1 %24 to i32
  %26 = select i1 %21, i32 %25, i32 %1
  store i32 %26, ptr @y, align 4, !tbaa !25
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %2
  store i32 %18, ptr %9, align 4, !tbaa !236
  br label %31

29:                                               ; preds = %2
  %30 = add i32 %18, 1
  store i32 %30, ptr %7, align 8, !tbaa !235
  br label %31

31:                                               ; preds = %29, %28
  tail call void @_ZN9Predictor6updateEv(ptr noundef nonnull align 4 dereferenceable(4) %0)
  %32 = load i32, ptr %7, align 8, !tbaa !235
  %33 = load i32, ptr %9, align 4, !tbaa !236
  %34 = xor i32 %33, %32
  %35 = icmp ult i32 %34, 16777216
  br i1 %35, label %36, label %72

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.Encoder, ptr %0, i64 0, i32 2
  br label %38

38:                                               ; preds = %36, %67
  %39 = phi i32 [ %32, %36 ], [ %69, %67 ]
  %40 = phi i32 [ %33, %36 ], [ %68, %67 ]
  %41 = load i32, ptr %19, align 4, !tbaa !231
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %38
  %44 = lshr i32 %40, 24
  %45 = load ptr, ptr %37, align 8, !tbaa !234
  %46 = tail call i32 @putc(i32 noundef %44, ptr noundef %45)
  %47 = load i32, ptr %7, align 8, !tbaa !235
  %48 = load i32, ptr %9, align 4, !tbaa !236
  %49 = load i32, ptr %19, align 4, !tbaa !231
  br label %50

50:                                               ; preds = %43, %38
  %51 = phi i32 [ %49, %43 ], [ %41, %38 ]
  %52 = phi i32 [ %48, %43 ], [ %40, %38 ]
  %53 = phi i32 [ %47, %43 ], [ %39, %38 ]
  %54 = shl i32 %53, 8
  store i32 %54, ptr %7, align 8, !tbaa !235
  %55 = shl i32 %52, 8
  %56 = or i32 %55, 255
  store i32 %56, ptr %9, align 4, !tbaa !236
  %57 = icmp eq i32 %51, 1
  br i1 %57, label %58, label %67

58:                                               ; preds = %50
  %59 = load i32, ptr %22, align 8, !tbaa !237
  %60 = shl i32 %59, 8
  %61 = load ptr, ptr %37, align 8, !tbaa !234
  %62 = tail call i32 @getc(ptr noundef %61)
  %63 = and i32 %62, 255
  %64 = or i32 %63, %60
  store i32 %64, ptr %22, align 8, !tbaa !237
  %65 = load i32, ptr %7, align 8, !tbaa !235
  %66 = load i32, ptr %9, align 4, !tbaa !236
  br label %67

67:                                               ; preds = %58, %50
  %68 = phi i32 [ %66, %58 ], [ %56, %50 ]
  %69 = phi i32 [ %65, %58 ], [ %54, %50 ]
  %70 = xor i32 %68, %69
  %71 = icmp ult i32 %70, 16777216
  br i1 %71, label %38, label %72, !llvm.loop !254

72:                                               ; preds = %67, %31
  %73 = load i32, ptr @y, align 4, !tbaa !25
  ret i32 %73
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: read)
declare noundef ptr @strrchr(ptr noundef, i32 noundef) local_unnamed_addr #27

; Function Attrs: mustprogress uwtable
define linkonce_odr dso_local void @_ZN5ArrayIhLi0EE6resizeEi(ptr noundef nonnull align 8 dereferenceable(24) %0, i32 noundef %1) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 1
  %4 = load i32, ptr %3, align 4, !tbaa !18
  %5 = icmp slt i32 %4, %1
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  store i32 %1, ptr %0, align 8, !tbaa !20
  br label %42

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 2
  %9 = load ptr, ptr %8, align 8, !tbaa !21
  %10 = getelementptr inbounds %class.Array.0, ptr %0, i64 0, i32 3
  %11 = load ptr, ptr %10, align 8, !tbaa !22
  %12 = load i32, ptr %0, align 8, !tbaa !20
  store i32 %1, ptr %3, align 4, !tbaa !18
  store i32 %1, ptr %0, align 8, !tbaa !20
  %13 = icmp slt i32 %1, 1
  br i1 %13, label %14, label %15

14:                                               ; preds = %7
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(16) %8, i8 0, i64 16, i1 false)
  br label %28

15:                                               ; preds = %7
  %16 = zext i32 %1 to i64
  %17 = load i32, ptr @programChecker, align 8, !tbaa !13
  %18 = add nsw i32 %17, %1
  store i32 %18, ptr @programChecker, align 8, !tbaa !13
  %19 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %20 = icmp sgt i32 %18, %19
  br i1 %20, label %21, label %22

21:                                               ; preds = %15
  store i32 %18, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %22

22:                                               ; preds = %21, %15
  %23 = tail call noalias ptr @calloc(i64 noundef %16, i64 noundef 1) #41
  store ptr %23, ptr %8, align 8, !tbaa !21
  %24 = icmp eq ptr %23, null
  br i1 %24, label %25, label %27

25:                                               ; preds = %22
  %26 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %26, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %26, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

27:                                               ; preds = %22
  store ptr %23, ptr %10, align 8, !tbaa !22
  br label %28

28:                                               ; preds = %14, %27
  %29 = phi ptr [ null, %14 ], [ %23, %27 ]
  %30 = icmp eq ptr %9, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %28
  %32 = icmp eq ptr %11, null
  br i1 %32, label %41, label %33

33:                                               ; preds = %31
  %34 = tail call i32 @llvm.smin.i32(i32 %1, i32 %12)
  %35 = sext i32 %34 to i64
  tail call void @llvm.memcpy.p0.p0.i64(ptr align 1 %29, ptr nonnull align 1 %11, i64 %35, i1 false)
  %36 = load i32, ptr @programChecker, align 8, !tbaa !13
  %37 = sub i32 %36, %1
  store i32 %37, ptr @programChecker, align 8, !tbaa !13
  %38 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %39 = icmp sgt i32 %37, %38
  br i1 %39, label %40, label %41

40:                                               ; preds = %33
  store i32 %37, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %41

41:                                               ; preds = %40, %33, %31
  tail call void @free(ptr noundef nonnull %9) #39
  br label %42

42:                                               ; preds = %28, %41, %6
  ret void
}

; Function Attrs: mustprogress nofree nounwind willreturn memory(argmem: readwrite)
declare ptr @strcpy(ptr noalias noundef returned writeonly, ptr noalias nocapture noundef readonly) local_unnamed_addr #37

; Function Attrs: uwtable
define internal void @_GLOBAL__sub_I_paq8p.cpp() #5 section ".text.startup" personality ptr @__gxx_personality_v0 {
  store i32 0, ptr @programChecker, align 8, !tbaa !13
  store i32 0, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %1 = tail call i64 @clock() #39
  store i64 %1, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 2), align 8, !tbaa !298
  store i32 64, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 0, i32 1), align 4, !tbaa !83
  store i32 64, ptr @rnd, align 8, !tbaa !10
  %2 = load i32, ptr @programChecker, align 8, !tbaa !13
  %3 = add nsw i32 %2, 256
  store i32 %3, ptr @programChecker, align 8, !tbaa !13
  %4 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %5 = icmp sgt i32 %3, %4
  br i1 %5, label %6, label %7

6:                                                ; preds = %0
  store i32 %3, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %7

7:                                                ; preds = %6, %0
  %8 = tail call noalias dereferenceable_or_null(256) ptr @calloc(i64 noundef 256, i64 noundef 1) #41
  store ptr %8, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 0, i32 2), align 8, !tbaa !17
  %9 = icmp eq ptr %8, null
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %11, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %11, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

12:                                               ; preds = %7
  store ptr %8, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 0, i32 3), align 8, !tbaa !84
  store i32 123456789, ptr %8, align 4, !tbaa !25
  %13 = getelementptr inbounds i32, ptr %8, i64 1
  store i32 987654321, ptr %13, align 4, !tbaa !25
  br label %14

14:                                               ; preds = %14, %12
  %15 = phi i32 [ 987654321, %12 ], [ %32, %14 ]
  %16 = phi i64 [ 0, %12 ], [ %26, %14 ]
  %17 = or i64 %16, 1
  %18 = mul i32 %15, 11
  %19 = getelementptr inbounds i32, ptr %8, i64 %16
  %20 = load i32, ptr %19, align 4, !tbaa !25
  %21 = mul i32 %20, 23
  %22 = lshr i32 %21, 4
  %23 = add i32 %22, %18
  %24 = add nuw nsw i64 %16, 2
  %25 = getelementptr inbounds i32, ptr %8, i64 %24
  store i32 %23, ptr %25, align 4, !tbaa !25
  %26 = add nuw nsw i64 %16, 2
  %27 = mul i32 %23, 11
  %28 = getelementptr inbounds i32, ptr %8, i64 %17
  %29 = load i32, ptr %28, align 4, !tbaa !25
  %30 = mul i32 %29, 23
  %31 = lshr i32 %30, 4
  %32 = add i32 %31, %27
  %33 = add nuw i64 %16, 3
  %34 = getelementptr inbounds i32, ptr %8, i64 %33
  store i32 %32, ptr %34, align 4, !tbaa !25
  %35 = icmp eq i64 %26, 62
  br i1 %35, label %36, label %14, !llvm.loop !299

36:                                               ; preds = %14
  store i32 0, ptr getelementptr inbounds (%class.Random, ptr @rnd, i64 0, i32 1), align 8, !tbaa !105
  %37 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN6RandomD2Ev, ptr nonnull @rnd, ptr nonnull @__dso_handle) #39
  tail call void @llvm.memset.p0.i64(ptr noundef nonnull align 8 dereferenceable(24) @buf, i8 0, i64 24, i1 false)
  %38 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN3BufD2Ev, ptr nonnull @buf, ptr nonnull @__dso_handle) #39
  store i32 65536, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 1), align 4, !tbaa !18
  store i32 65536, ptr @ilog, align 8, !tbaa !20
  %39 = load i32, ptr @programChecker, align 8, !tbaa !13
  %40 = add nsw i32 %39, 65536
  store i32 %40, ptr @programChecker, align 8, !tbaa !13
  %41 = load i32, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  %42 = icmp sgt i32 %40, %41
  br i1 %42, label %43, label %44

43:                                               ; preds = %36
  store i32 %40, ptr getelementptr inbounds (%class.ProgramChecker, ptr @programChecker, i64 0, i32 1), align 4, !tbaa !16
  br label %44

44:                                               ; preds = %43, %36
  %45 = tail call noalias dereferenceable_or_null(65536) ptr @calloc(i64 noundef 65536, i64 noundef 1) #41
  store ptr %45, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 2), align 8, !tbaa !21
  %46 = icmp eq ptr %45, null
  br i1 %46, label %47, label %49

47:                                               ; preds = %44
  %48 = tail call ptr @__cxa_allocate_exception(i64 8) #39
  store ptr @.str.59, ptr %48, align 16, !tbaa !5
  tail call void @__cxa_throw(ptr nonnull %48, ptr nonnull @_ZTIPKc, ptr null) #40
  unreachable

49:                                               ; preds = %44
  store ptr %45, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  br label %50

50:                                               ; preds = %50, %49
  %51 = phi i64 [ 2, %49 ], [ %72, %50 ]
  %52 = phi i32 [ 14155776, %49 ], [ %67, %50 ]
  %53 = trunc i64 %51 to i32
  %54 = shl i32 %53, 1
  %55 = add nsw i32 %54, -1
  %56 = udiv i32 774541002, %55
  %57 = add i32 %56, %52
  %58 = lshr i32 %57, 24
  %59 = trunc i32 %58 to i8
  %60 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %61 = getelementptr inbounds i8, ptr %60, i64 %51
  store i8 %59, ptr %61, align 1, !tbaa !9
  %62 = or i64 %51, 1
  %63 = trunc i64 %62 to i32
  %64 = shl i32 %63, 1
  %65 = add nsw i32 %64, -1
  %66 = udiv i32 774541002, %65
  %67 = add i32 %66, %57
  %68 = lshr i32 %67, 24
  %69 = trunc i32 %68 to i8
  %70 = load ptr, ptr getelementptr inbounds (%class.Ilog, ptr @ilog, i64 0, i32 0, i32 3), align 8, !tbaa !22
  %71 = getelementptr inbounds i8, ptr %70, i64 %62
  store i8 %69, ptr %71, align 1, !tbaa !9
  %72 = add nuw nsw i64 %51, 2
  %73 = icmp eq i64 %72, 65536
  br i1 %73, label %74, label %50, !llvm.loop !23

74:                                               ; preds = %50
  %75 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN4IlogD2Ev, ptr nonnull @ilog, ptr nonnull @__dso_handle) #39
  tail call void @_ZN7StretchC2Ev(ptr noundef nonnull align 8 dereferenceable(24) @stretch)
  %76 = tail call i32 @__cxa_atexit(ptr nonnull @_ZN7StretchD2Ev, ptr nonnull @stretch, ptr nonnull @__dso_handle) #39
  ret void
}

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smax.i32(i32, i32) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.smin.i32(i32, i32) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.fshl.i32(i32, i32, i32) #38

; Function Attrs: nofree nounwind
declare noundef i32 @putchar(i32 noundef) local_unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.abs.i32(i32, i1 immarg) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i16 @llvm.abs.i16(i16, i1 immarg) #38

; Function Attrs: nofree nounwind
declare noundef i32 @puts(ptr nocapture noundef readonly) local_unnamed_addr #4

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.umax.i64(i64, i64) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i32 @llvm.vector.reduce.add.v4i32(<4 x i32>) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x i32> @llvm.smax.v8i32(<8 x i32>, <8 x i32>) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare <8 x i32> @llvm.smin.v8i32(<8 x i32>, <8 x i32>) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.smax.i64(i64, i64) #38

; Function Attrs: nocallback nofree nosync nounwind speculatable willreturn memory(none)
declare i64 @llvm.vector.reduce.add.v2i64(<2 x i64>) #38

attributes #0 = { mustprogress noreturn uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #1 = { mustprogress nofree norecurse nosync nounwind willreturn memory(read, inaccessiblemem: none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #2 = { mustprogress nocallback nofree nosync nounwind willreturn memory(argmem: readwrite) }
attributes #3 = { inlinehint nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #4 = { nofree nounwind }
attributes #5 = { uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #6 = { nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #7 = { mustprogress nofree norecurse nosync nounwind willreturn memory(none) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #8 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: read) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #9 = { mustprogress nofree nosync nounwind memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #10 = { nobuiltin nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #11 = { nobuiltin allocsize(0) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #12 = { mustprogress nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #13 = { inlinehint mustprogress nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #14 = { mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #15 = { mustprogress nounwind willreturn uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #16 = { mustprogress nofree nounwind willreturn memory(read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #17 = { inlinehint mustprogress uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #18 = { nofree nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #19 = { mustprogress nofree nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #20 = { mustprogress nofree nosync nounwind willreturn memory(argmem: readwrite) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #21 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: write) }
attributes #22 = { mustprogress nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #23 = { mustprogress nofree nounwind willreturn memory(write) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #24 = { mustprogress nofree norecurse nosync nounwind willreturn memory(argmem: write) uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #25 = { nofree nounwind uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #26 = { mustprogress nocallback nofree nounwind willreturn memory(argmem: readwrite) }
attributes #27 = { mustprogress nofree nounwind willreturn memory(argmem: read) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #28 = { nofree nosync nounwind memory(none) }
attributes #29 = { norecurse uwtable "min-legal-vector-width"="0" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #30 = { noreturn nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #31 = { "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #32 = { mustprogress nofree nounwind willreturn memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #33 = { mustprogress nounwind willreturn allockind("free") memory(argmem: readwrite, inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #34 = { nounwind "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #35 = { mustprogress nofree nounwind willreturn "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #36 = { mustprogress nofree nounwind willreturn allockind("alloc,zeroed") allocsize(0,1) memory(inaccessiblemem: readwrite) "alloc-family"="malloc" "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #37 = { mustprogress nofree nounwind willreturn memory(argmem: readwrite) "no-trapping-math"="true" "stack-protector-buffer-size"="8" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+x87" "tune-cpu"="generic" }
attributes #38 = { nocallback nofree nosync nounwind speculatable willreturn memory(none) }
attributes #39 = { nounwind }
attributes #40 = { noreturn }
attributes #41 = { nounwind allocsize(0,1) }
attributes #42 = { builtin nounwind }
attributes #43 = { builtin allocsize(0) }
attributes #44 = { nounwind willreturn memory(read) }
attributes #45 = { cold }
attributes #46 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1, !2, !3}
!llvm.ident = !{!4}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 8, !"PIC Level", i32 2}
!2 = !{i32 7, !"PIE Level", i32 2}
!3 = !{i32 7, !"uwtable", i32 2}
!4 = !{!"clang version 17.0.0"}
!5 = !{!6, !6, i64 0}
!6 = !{!"any pointer", !7, i64 0}
!7 = !{!"omnipotent char", !8, i64 0}
!8 = !{!"Simple C++ TBAA"}
!9 = !{!7, !7, i64 0}
!10 = !{!11, !12, i64 0}
!11 = !{!"_ZTS5ArrayIjLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!12 = !{!"int", !7, i64 0}
!13 = !{!14, !12, i64 0}
!14 = !{!"_ZTS14ProgramChecker", !12, i64 0, !12, i64 4, !15, i64 8}
!15 = !{!"long", !7, i64 0}
!16 = !{!14, !12, i64 4}
!17 = !{!11, !6, i64 8}
!18 = !{!19, !12, i64 4}
!19 = !{!"_ZTS5ArrayIhLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!20 = !{!19, !12, i64 0}
!21 = !{!19, !6, i64 8}
!22 = !{!19, !6, i64 16}
!23 = distinct !{!23, !24}
!24 = !{!"llvm.loop.mustprogress"}
!25 = !{!12, !12, i64 0}
!26 = !{!27, !12, i64 0}
!27 = !{!"_ZTS5ArrayIsLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!28 = !{!27, !6, i64 8}
!29 = !{!27, !12, i64 4}
!30 = !{!27, !6, i64 16}
!31 = !{!32, !32, i64 0}
!32 = !{!"short", !7, i64 0}
!33 = distinct !{!33, !24, !34, !35}
!34 = !{!"llvm.loop.isvectorized", i32 1}
!35 = !{!"llvm.loop.unroll.runtime.disable"}
!36 = distinct !{!36, !24}
!37 = distinct !{!37, !24, !35, !34}
!38 = distinct !{!38, !24, !34, !35}
!39 = distinct !{!39, !24, !35, !34}
!40 = !{!41}
!41 = distinct !{!41, !42}
!42 = distinct !{!42, !"LVerDomain"}
!43 = !{!44}
!44 = distinct !{!44, !42}
!45 = distinct !{!45, !24, !34, !35}
!46 = distinct !{!46, !24, !34}
!47 = !{!48, !6, i64 128}
!48 = !{!"_ZTS5Mixer", !12, i64 0, !12, i64 4, !12, i64 8, !49, i64 16, !49, i64 40, !50, i64 64, !12, i64 88, !12, i64 92, !12, i64 96, !50, i64 104, !6, i64 128}
!49 = !{!"_ZTS5ArrayIsLi16EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!50 = !{!"_ZTS5ArrayIiLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!51 = !{!50, !12, i64 0}
!52 = !{!50, !6, i64 8}
!53 = !{!49, !12, i64 0}
!54 = !{!49, !6, i64 8}
!55 = !{!48, !12, i64 0}
!56 = !{!48, !12, i64 4}
!57 = !{!48, !12, i64 8}
!58 = !{!49, !12, i64 4}
!59 = !{!49, !6, i64 16}
!60 = !{!50, !12, i64 4}
!61 = !{!50, !6, i64 16}
!62 = !{!48, !12, i64 88}
!63 = !{!48, !12, i64 92}
!64 = !{!48, !12, i64 96}
!65 = distinct !{!65, !24, !34, !35}
!66 = distinct !{!66, !24, !34, !35}
!67 = distinct !{!67, !24, !35, !34}
!68 = distinct !{!68, !24, !35, !34}
!69 = !{!70, !12, i64 0}
!70 = !{!"_ZTS4APM1", !12, i64 0, !12, i64 4, !71, i64 8}
!71 = !{!"_ZTS5ArrayItLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!72 = !{!70, !12, i64 4}
!73 = !{!71, !12, i64 4}
!74 = !{!71, !12, i64 0}
!75 = !{!71, !6, i64 8}
!76 = !{!71, !6, i64 16}
!77 = distinct !{!77, !24, !78}
!78 = !{!"llvm.loop.peeled.count", i32 1}
!79 = distinct !{!79, !24}
!80 = !{!81, !12, i64 0}
!81 = !{!"_ZTS8StateMap", !12, i64 0, !12, i64 4, !11, i64 8}
!82 = !{!81, !12, i64 4}
!83 = !{!11, !12, i64 4}
!84 = !{!11, !6, i64 16}
!85 = distinct !{!85, !24, !34, !35}
!86 = distinct !{!86, !24, !35, !34}
!87 = distinct !{!87, !24, !34, !35}
!88 = distinct !{!88, !24, !35, !34}
!89 = distinct !{!89, !24}
!90 = !{!91, !12, i64 0}
!91 = !{!"_ZTS10ContextMap", !12, i64 0, !92, i64 8, !93, i64 32, !93, i64 56, !11, i64 80, !93, i64 104, !6, i64 128, !12, i64 136}
!92 = !{!"_ZTS5ArrayIN10ContextMap1EELi64EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!93 = !{!"_ZTS5ArrayIPhLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!94 = !{!92, !12, i64 4}
!95 = !{!92, !12, i64 0}
!96 = !{!92, !6, i64 8}
!97 = !{!92, !6, i64 16}
!98 = !{!93, !12, i64 4}
!99 = !{!93, !12, i64 0}
!100 = !{!93, !6, i64 8}
!101 = !{!93, !6, i64 16}
!102 = !{!91, !12, i64 136}
!103 = !{!91, !6, i64 128}
!104 = distinct !{!104, !24}
!105 = !{!106, !12, i64 24}
!106 = !{!"_ZTS6Random", !11, i64 0, !12, i64 24}
!107 = distinct !{!107, !24}
!108 = !{!109, !7, i64 14}
!109 = !{!"_ZTSN10ContextMap1EE", !7, i64 0, !7, i64 14, !7, i64 15}
!110 = !{!"branch_weights", i32 1, i32 1048575}
!111 = distinct !{!111, !24}
!112 = !{!113, !12, i64 24}
!113 = !{!"_ZTS25SmallStationaryContextMap", !71, i64 0, !12, i64 24, !6, i64 32}
!114 = !{!113, !6, i64 32}
!115 = distinct !{!115, !24, !34, !35}
!116 = distinct !{!116, !24, !35, !34}
!117 = distinct !{!117, !24}
!118 = distinct !{!118, !24}
!119 = distinct !{!119, !24}
!120 = distinct !{!120, !24}
!121 = distinct !{!121, !24}
!122 = distinct !{!122, !24}
!123 = distinct !{!123, !24}
!124 = !{!125, !6, i64 16}
!125 = !{!"_ZTS5ArrayI3HUFLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!126 = !{!125, !12, i64 0}
!127 = distinct !{!127, !24}
!128 = !{!129, !12, i64 0}
!129 = !{!"_ZTS3HUF", !12, i64 0, !12, i64 4, !12, i64 8}
!130 = !{!129, !12, i64 4}
!131 = !{!129, !12, i64 8}
!132 = distinct !{!132, !24}
!133 = distinct !{!133, !24}
!134 = distinct !{!134, !24}
!135 = distinct !{!135, !24}
!136 = distinct !{!136, !24}
!137 = distinct !{!137, !24}
!138 = distinct !{!138, !24}
!139 = distinct !{!139, !24}
!140 = distinct !{!140, !24}
!141 = distinct !{!141, !24}
!142 = distinct !{!142, !24, !78}
!143 = distinct !{!143, !24}
!144 = !{!145}
!145 = distinct !{!145, !146}
!146 = distinct !{!146, !"LVerDomain"}
!147 = !{!148}
!148 = distinct !{!148, !146}
!149 = distinct !{!149, !24, !34, !35}
!150 = distinct !{!150, !24, !34}
!151 = distinct !{!151, !24}
!152 = distinct !{!152, !24}
!153 = distinct !{!153, !24}
!154 = distinct !{!154, !24}
!155 = !{!125, !12, i64 4}
!156 = !{!125, !6, i64 8}
!157 = !{!158, !12, i64 4}
!158 = !{!"_ZTS5ArrayIhLi64EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!159 = !{!158, !12, i64 0}
!160 = !{!158, !6, i64 8}
!161 = !{!158, !6, i64 16}
!162 = !{!163, !12, i64 24}
!163 = !{!"_ZTS2BHILi9EE", !158, i64 0, !12, i64 24}
!164 = distinct !{!164, !24}
!165 = !{!166}
!166 = distinct !{!166, !167}
!167 = distinct !{!167, !"LVerDomain"}
!168 = !{!169}
!169 = distinct !{!169, !167}
!170 = distinct !{!170, !24, !34, !35}
!171 = distinct !{!171, !24, !34}
!172 = distinct !{!172, !24, !34, !35}
!173 = distinct !{!173, !24, !35, !34}
!174 = distinct !{!174, !24}
!175 = distinct !{!175, !24, !34, !35}
!176 = distinct !{!176, !24, !35, !34}
!177 = !{!178, !178, i64 0}
!178 = !{!"double", !7, i64 0}
!179 = distinct !{!179, !24, !34, !35}
!180 = distinct !{!180, !24, !35, !34}
!181 = distinct !{!181, !182}
!182 = !{!"llvm.loop.unroll.disable"}
!183 = distinct !{!183, !24}
!184 = distinct !{!184, !24}
!185 = distinct !{!185, !24}
!186 = distinct !{!186, !24}
!187 = distinct !{!187, !24}
!188 = distinct !{!188, !24}
!189 = distinct !{!189, !24}
!190 = distinct !{!190, !24}
!191 = distinct !{!191, !24}
!192 = distinct !{!192, !24}
!193 = distinct !{!193, !24}
!194 = distinct !{!194, !24}
!195 = distinct !{!195, !24}
!196 = distinct !{!196, !182}
!197 = distinct !{!197, !24}
!198 = distinct !{!198, !24}
!199 = distinct !{!199, !24}
!200 = distinct !{!200, !24}
!201 = distinct !{!201, !24}
!202 = distinct !{!202, !24}
!203 = distinct !{!203, !24}
!204 = distinct !{!204, !24, !78}
!205 = !{!206, !6, i64 16}
!206 = !{!"_ZTS5ArrayI7DMCNodeLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!207 = !{!208, !7, i64 8}
!208 = !{!"_ZTS7DMCNode", !7, i64 0, !7, i64 8, !12, i64 9, !12, i64 10}
!209 = !{!206, !12, i64 0}
!210 = distinct !{!210, !24}
!211 = distinct !{!211, !24}
!212 = !{!206, !12, i64 4}
!213 = !{!206, !6, i64 8}
!214 = !{!215, !215, i64 0}
!215 = !{!"_ZTS8Filetype", !7, i64 0}
!216 = !{!217}
!217 = distinct !{!217, !218}
!218 = distinct !{!218, !"LVerDomain"}
!219 = !{!220}
!220 = distinct !{!220, !218}
!221 = distinct !{!221, !24, !34, !35}
!222 = distinct !{!222, !24, !34}
!223 = !{i32 0, i32 -2147483648}
!224 = !{i32 0, i32 65536}
!225 = !{!226, !6, i64 32}
!226 = !{!"_ZTS13RunContextMap", !227, i64 0, !6, i64 32}
!227 = !{!"_ZTS2BHILi4EE", !158, i64 0, !12, i64 24}
!228 = !{!227, !12, i64 24}
!229 = !{!230, !12, i64 0}
!230 = !{!"_ZTS9Predictor", !12, i64 0}
!231 = !{!232, !233, i64 4}
!232 = !{!"_ZTS7Encoder", !230, i64 0, !233, i64 4, !6, i64 8, !12, i64 16, !12, i64 20, !12, i64 24, !6, i64 32}
!233 = !{!"_ZTS4Mode", !7, i64 0}
!234 = !{!232, !6, i64 8}
!235 = !{!232, !12, i64 16}
!236 = !{!232, !12, i64 20}
!237 = !{!232, !12, i64 24}
!238 = !{!232, !6, i64 32}
!239 = distinct !{!239, !24}
!240 = distinct !{!240, !24}
!241 = distinct !{!241, !24}
!242 = distinct !{!242, !24}
!243 = distinct !{!243, !24}
!244 = distinct !{!244, !24}
!245 = distinct !{!245, !24}
!246 = distinct !{!246, !24}
!247 = distinct !{!247, !24}
!248 = distinct !{!248, !24}
!249 = distinct !{!249, !24}
!250 = distinct !{!250, !24}
!251 = distinct !{!251, !24}
!252 = !{i32 0, i32 256}
!253 = distinct !{!253, !24}
!254 = distinct !{!254, !24}
!255 = distinct !{!255, !24}
!256 = distinct !{!256, !24}
!257 = distinct !{!257, !24}
!258 = distinct !{!258, !24}
!259 = !{!260, !6, i64 16}
!260 = !{!"_ZTS5ArrayIcLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!261 = !{!260, !12, i64 0}
!262 = distinct !{!262, !24}
!263 = !{!260, !6, i64 8}
!264 = distinct !{!264, !24}
!265 = distinct !{!265, !24}
!266 = !{!260, !12, i64 4}
!267 = distinct !{!267, !24}
!268 = distinct !{!268, !24}
!269 = !{i32 0, i32 2}
!270 = !{!271, !12, i64 4}
!271 = !{!"_ZTS5ArrayIPcLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!272 = !{!271, !12, i64 0}
!273 = !{!271, !6, i64 8}
!274 = !{!271, !6, i64 16}
!275 = !{!276, !12, i64 4}
!276 = !{!"_ZTS5ArrayIlLi0EE", !12, i64 0, !12, i64 4, !6, i64 8, !6, i64 16}
!277 = !{!276, !12, i64 0}
!278 = !{!276, !6, i64 8}
!279 = !{!276, !6, i64 16}
!280 = distinct !{!280, !24}
!281 = distinct !{!281, !24}
!282 = distinct !{!282, !24}
!283 = distinct !{!283, !24}
!284 = !{!15, !15, i64 0}
!285 = distinct !{!285, !24}
!286 = distinct !{!286, !24}
!287 = distinct !{!287, !24}
!288 = distinct !{!288, !24}
!289 = distinct !{!289, !24}
!290 = distinct !{!290, !24}
!291 = distinct !{!291, !24}
!292 = distinct !{!292, !24, !34, !35}
!293 = distinct !{!293, !24, !35, !34}
!294 = distinct !{!294, !24}
!295 = distinct !{!295, !24}
!296 = distinct !{!296, !24}
!297 = distinct !{!297, !24}
!298 = !{!14, !15, i64 8}
!299 = distinct !{!299, !24}
